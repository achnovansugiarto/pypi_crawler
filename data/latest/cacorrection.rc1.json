{
  "info": {
    "author": "Mehdi Hosseini Moghadam",
    "author_email": "<m.h.moghadam1996@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n\nThis Repo Contains Implementation and explanation of Punctuation and Capitalization System for ASR models\n\n![patrick-tomasso-Oaqk7qqNh_c-unsplash](https://user-images.githubusercontent.com/53477752/165603578-ed8d1003-f513-4412-aaf9-f488fa9dabcb.jpg)\n\n## Introduction\n\nAlmost all automatic speech recognition(ASR) systems convert speech into text that has no capitalization or punctuation, which can result in miss understanding the generated text. In this blog I explain and implement capitalization or punctuation model with [Roberta](https://huggingface.co/PlanTL-GOB-ES/roberta-base-ca) language model for Catalan language. This tutorial is mainly based on Nvidia Nemo tutorial on capitalization or punctuation model [here](https://docs.nvidia.com/deeplearning/nemo/user-guide/docs/en/main/nlp/punctuation_and_capitalization.html#training-punctuation-and-capitalization-model).\n\n## Language Model Based Capitalization and Punctuation model\n- This model predicts if a sentence needs commas, periods, question marks, ...\n- Also model predicts if a given word should be Capitelized.\n\nAs in [here](https://docs.nvidia.com/deeplearning/nemo/user-guide/docs/en/main/nlp/punctuation_and_capitalization.html#training-punctuation-and-capitalization-model) this model (this method) is a jointly training two token-level classifier on top of a pretrained language model.\n\n## Data Format\n\nThe Punctuation and Capitalization model expects the data in the following format:\n\nThe training and evaluation data is divided into 2 files:  ``text.txt`` , ``labels.txt``\n\nEach line of the ``text.txt`` file contains text sequences, where words are separated with spaces.\n\n[WORD] [SPACE] [WORD] [SPACE] [WORD], for example:\n\n`` when is the next flight to new york``\n<br>\n``the next flight is ...\n``\n\nThe `labels.txt` file contains corresponding labels for each word in `text.txt`, the labels are separated with spaces. Each label in `labels.txt` file consists of 2 symbols:\n\nthe first symbol of the label indicates what punctuation mark should follow the word (where `O` means no punctuation needed)\n\nthe second symbol determines if a word needs to be capitalized or not (where `U` indicates that the word should be upper cased, and `O` - no capitalization needed)\n\nBy default, the following punctuation marks are considered: commas, periods, and question marks; the remaining punctuation marks were removed from the data. This can be changed by introducing new labels in the `labels.txt` files.\n\nEach line of the `labels.txt` should follow the format: [LABEL] [SPACE] [LABEL] [SPACE] [LABEL] (for `labels.txt`). For example, labels for the above `text.txt` file should be:\n\n`OU OO OO OO OO OO OU ?U`\n<br>\n`OU OO OO OO ...`\n\n## Catalan Punctuation and Capitalization Data\n\nFor this tutorial I used [this repo](https://github.com/Softcatala/ca-text-corpus/tree/master/data) and mereged `common-voice-sentences.txt`,\n              `dogc.txt`,\n              `dogv.txt`,\n              `riuraueditors.txt`,\n              `softcatala.txt`,\n              `wiki.ca.txt`,\n              `wiki.ca-mozilla_script.txt`\n              files.\n              <br>\n Using the following script you can convert any correctly capitalized and punctuated text into mentioned training data format.\n \n ```py\n import string\nimport random\n\n\ndata_into_list=[line.strip() for line in open('/content/output_file.txt')]\n\n\ntext_train = open(\"text_train.txt\", \"a\")  # append modea\nlabels_train = open(\"labels_train.txt\", \"a\")  # append modea\n\ntext_dev = open(\"text_dev.txt\", \"a\")  # append modea\nlabels_dev = open(\"labels_dev.txt\", \"a\")  # append modea\n\n\nfor j in data_into_list:\n  if len(j)< 100:\n    label = \"\"\n    text = \"\"\n    for i in j.split(\" \"):\n      try:\n          if i[-1] in string.punctuation and i[0].isupper():\n            label = label + f\"{i[-1]}U \"\n            text = text + f\"{i[:-1].lower()} \"\n\n          elif (i[-1] not in string.punctuation and i[0].isupper()):\n            label+=\"OU \" \n            text = text + f\"{i.lower()} \" \n\n          elif (i[-1] in string.punctuation and i[0].islower()):  \n            label+=f\"{i[-1]}O \"\n            text = text + f\"{i[:-1].lower()} \"\n\n          elif (i[-1] not in string.punctuation and i[0].islower()):  \n            label+=\"OO \"\n            text = text + f\"{i.lower()} \"\n      except:\n        pass\n    if len(text.split())== len(label.split()) and len(text)>0:\n        if random.random() < .15:       \n            text_dev.write(text+\"\\n\")\n            labels_dev.write(label+\"\\n\")  \n        else:\n            text_train.write(text+\"\\n\")\n            labels_train.write(label+\"\\n\")   \n    else:\n      pass                    \ntext_dev.close()\nlabels_dev.close()\ntext_train.close()\nlabels_train.close()\n \n ```\n <br>    \n     \nOnce you make the training and validation data ready, then it is time to train your model.\n\n<br>\n--------------------------------------------------------------------------------------------\n## Model\n\nFor this tutorial I used about `60000` sample sentences and trained them on top of [\nroberta-base-ca](https://huggingface.co/PlanTL-GOB-ES/roberta-base-ca).\nComplete notebook for data gathering as well as training the Punctuation and Capitalization model for catalan language can be found here [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1Yp0FQyn03PsL_Qy5TGLdrU-RTKjJ-mLK#scrollTo=us_WH_dlCQsq)\n\n<br>\n\nAlso pretrained model for inference can be found here \n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1IjI6KTGcs-afl_CY8tnUw-g2Qgn1MIXe?authuser=5#scrollTo=cWBpRHD3wjcr)\n-----------------------------------------------------------------------\n\n## Install with pip\n\n```py\nimport os\n\n\nos.system(\"pip install nemo_toolkit['all']\")\n\n```\n----------------------------------------------------------------\n```py\nos.system('git clone https://github.com/NVIDIA/apex')\nos.system('cd apex')\n\nos.system('pip install -v --disable-pip-version-check --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" --global-option=\"--fast_layer_norm\" ./')\n```\n----------------------------------------------------------------\n\n```py\npip install pun8==0.0.1\n```\n----------------------------------------------------------------\n```py\nfrom pun.main import setpath, init_model, correct\n```\n----------------------------------------------------------------\n```py\nsetpath(\"/content/Punctuation_and_Capitalization.nemo\")\n```\n----------------------------------------------------------------\n```py\ninit_model()\n```\n----------------------------------------------------------------\n```py\ncorrect([\"si acabo d'hora aniré a mirar roba\"])\n```\n----------------------------------------------------------------\n<br>\n\n## Some examples from the model\n\nOriginal Text witt Capitalization & Puntuation:\n<br>\n\n`Si acabo d'hora, aniré a mirar roba.`\n<br>\n`Necessitem vacances.`\n<br>\n`A partir d'aquí?`\n<br>\n`Acabat el debat, procedirem a la votació.`\n<br>\n`Ah, Déu meu!`\n<br>\n`Bona tarda, diputats, diputades.`\n<br>\n`A Barcelona i a Cubells, deu mules són cinc parells.`\n<br>\n`A beure i a menjar, mesura has de posar.`\n<br>\n\n\nAnd Model Output:\n<br>\n<br>\n\n---------------------------------------------------------------------------------------<br>\n`Query   : si acabo d'hora aniré a mirar roba`\n<br>\n`Combined: Si acabo d'hora, aniré a mirar roba.`\n<br>\n---------------------------------------------------------------------------------------<br>\n`Query   : necessitem vacances`\n<br>\n`Combined: Necessitem vacances.`\n<br>\n--------------------------------------------------------------------------------------- <br>\n`Query   : a partir d'aquí`\n<br>\n`Combined: A partir d'aquí.`\n<br>\n--------------------------------------------------------------------------------------- <br>\n`Query   : acabat el debat procedirem a la votació`\n<br>\n`Combined: Acabat el debat, procedirem a la votació.`\n<br>\n--------------------------------------------------------------------------------------- <br>\n`Query   : ah déu meu`\n<br>\n`Combined: Ah, Déu meu.`\n<br>\n--------------------------------------------------------------------------------------- <br>\n`Query   : bona tarda diputats diputades`\n<br>\n`Combined: Bona tarda Diputats diputades.`\n<br>\n--------------------------------------------------------------------------------------- <br>\n`Query   : a barcelona i a cubells deu mules són cinc parells`\n<br>\n`Combined: A Barcelona i a Cubells, deu mules són cinc parells.`\n<br>\n--------------------------------------------------------------------------------------- <br>\n`Query   : a beure i a menjar mesura has de posar`\n<br>\n`Combined: A beure i a menjar mesura, has de posar.`\n<br>\n--------------------------------------------------------------------------------------- <br>\n\n\nDue to the low frequency of question and exclamation mark, as it can be seen from the results, they are not accurate as commas and periods, this problem can be easily addressed by increasing their frequency.\n\n--------------------------------------------------------------------------------------\n\nHere are some statistics for punctuation and capitalization model for catalan language\n\n<img width=\"798\" alt=\"Screen Shot 2022-04-28 at 6 56 52 PM\" src=\"https://user-images.githubusercontent.com/53477752/165775263-29c266e5-5ca5-4e63-be39-470c76e935c6.png\">\n\n\n              \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,Punctuation and Capitalization,Catalan Punctuation,Catalan Capitalization,Catalan Speech,Catalan,Catalan Speech To Text,Catalan ASR,Catalan Speech DataSet,NeMo Punctuation,Catalan Speech To Text,Catalan ASR,Catalan Tacotron2",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "CaCorrection",
    "package_url": "https://pypi.org/project/CaCorrection/",
    "platform": null,
    "project_url": "https://pypi.org/project/CaCorrection/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/CaCorrection/0.0.1/",
    "requires_dist": [
      "numpy"
    ],
    "requires_python": "",
    "summary": "Catalan Punctuation and Capitalization Restoration Model",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13673627,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5943cf1cdf706edec1c970cf4d4eb1986da53b18df10a7a65733c11c042170fc",
          "md5": "8163ae42d3e9777a3614092b9029f971",
          "sha256": "25a9e76be9e6c3bc17b097efa17975b8f2467728db41c510a02d556dc461dc1b"
        },
        "downloads": -1,
        "filename": "CaCorrection-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8163ae42d3e9777a3614092b9029f971",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5377,
        "upload_time": "2022-04-30T09:48:05",
        "upload_time_iso_8601": "2022-04-30T09:48:05.666720Z",
        "url": "https://files.pythonhosted.org/packages/59/43/cf1cdf706edec1c970cf4d4eb1986da53b18df10a7a65733c11c042170fc/CaCorrection-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c216ef0bb47b69eacbbc2c0fa0ca37b9d7321ab31e2802bd0e3b7d275db99d1",
          "md5": "818fed9385fafc5b4cff428f398ab0d6",
          "sha256": "4949e0bccdfe1a092ec8d231634325550f03bf971198237e71f39e06bf9a4d5b"
        },
        "downloads": -1,
        "filename": "CaCorrection-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "818fed9385fafc5b4cff428f398ab0d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5001,
        "upload_time": "2022-04-30T09:48:07",
        "upload_time_iso_8601": "2022-04-30T09:48:07.416520Z",
        "url": "https://files.pythonhosted.org/packages/9c/21/6ef0bb47b69eacbbc2c0fa0ca37b9d7321ab31e2802bd0e3b7d275db99d1/CaCorrection-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5943cf1cdf706edec1c970cf4d4eb1986da53b18df10a7a65733c11c042170fc",
        "md5": "8163ae42d3e9777a3614092b9029f971",
        "sha256": "25a9e76be9e6c3bc17b097efa17975b8f2467728db41c510a02d556dc461dc1b"
      },
      "downloads": -1,
      "filename": "CaCorrection-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8163ae42d3e9777a3614092b9029f971",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5377,
      "upload_time": "2022-04-30T09:48:05",
      "upload_time_iso_8601": "2022-04-30T09:48:05.666720Z",
      "url": "https://files.pythonhosted.org/packages/59/43/cf1cdf706edec1c970cf4d4eb1986da53b18df10a7a65733c11c042170fc/CaCorrection-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9c216ef0bb47b69eacbbc2c0fa0ca37b9d7321ab31e2802bd0e3b7d275db99d1",
        "md5": "818fed9385fafc5b4cff428f398ab0d6",
        "sha256": "4949e0bccdfe1a092ec8d231634325550f03bf971198237e71f39e06bf9a4d5b"
      },
      "downloads": -1,
      "filename": "CaCorrection-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "818fed9385fafc5b4cff428f398ab0d6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5001,
      "upload_time": "2022-04-30T09:48:07",
      "upload_time_iso_8601": "2022-04-30T09:48:07.416520Z",
      "url": "https://files.pythonhosted.org/packages/9c/21/6ef0bb47b69eacbbc2c0fa0ca37b9d7321ab31e2802bd0e3b7d275db99d1/CaCorrection-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}