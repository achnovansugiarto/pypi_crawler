{
  "info": {
    "author": "Azfar Mohamed",
    "author_email": "azfarmah@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![Logo](https://i.ibb.co/zZ88YRq/3ee77eca-5573-4591-b911-b0a01ea0ad3a-200x200.png)\n\n[![Build Status](https://travis-ci.com/azfar154/fastTF.svg?token=f7cQs9ipscGj1qwuxd1Q&branch=master)](https://travis-ci.com/azfar154/fastTF)\n\nfastTF is a easy way to convert a Pandas DataFrame into a Tensorflow TFRecord. Also with fastTF you will be able to get the example_spec. \n### Why would you do so?\n\n  - With a TFRecord file you will be able to make your input pipeline faster\n  - Binary data takes up less space on disk, takes less time to copy and can be read much more efficiently from disk.\n### Tech\n\nfastTF uses a number of open source projects to work properly:\n* [Tensorflow](https://www.tensorflow.org/) - \"An end-to-end open source machine learning platform\"\n* [Pandas](https://pandas.pydata.org/) - \"pandas is a fast, powerful, flexible and easy to use open source data analysis and manipulation tool,\nbuilt on top of the Python programming language.\"\n\n### Installation\n\ntfFast requires [Python](https://www.python.org/downloads/release/python-360/) 3.6 to run.\n\nInstall the necessary packages and dependencies\n\n```sh\n$ pip3 install tensorflow\n$ pip3 install pandas\n```\n\n\n### Development\n\nWant to contribute? Great!\n\nfastTF uses Tensorflow + Pandas for fast development.\n\nFork these repository and change app.py. \n\nOpen your Terminal and run these commands to edit the files\n```sh\n$ cd fastTF\n$ nano app.py\n```\n###  Example\n\n````\ndef test_function():\n    \"\"\"\n        Test the package\n        :return: if the program was successful.\n        >>> test_function()\n        True\n\n    \"\"\"\n    data = pd.read_csv('diabetes.csv')\n    test = tfRecordWriter(data)\n    test.write('new.tfrecords')\n\n    with open('example_spec.pickle','rb') as f:\n        example_spec = pickle.load(f)\n    assert example_spec == test.get_example_spec()\n\n    data = tf.data.TFRecordDataset('new.tfrecords')\n    func = lambda x: tf.io.parse_single_example(x,example_spec)\n    data = data.map(func)\n    y = data.take(1)\n    for x in y:\n      assert x['Age'].numpy() == 50\n    return True\n````\n### Metrics\n\n### Memory Test\n```sh\nMemory Test\n\nLine #    Mem usage    Increment   Line Contents\n================================================\n     1                             import pandas as pd\n     2                             from fastTF import tfRecordWriter\n     3                             import tensorflow as tf\n     4                             import pickle\n     5                             import doctest\n     6                             import pytest\n     7                             \n     8    300.7 MiB    300.7 MiB   \n     9    301.0 MiB      0.2 MiB   def test_function():\n    10    301.0 MiB      0.0 MiB       \"\"\"\n    11    301.0 MiB      0.0 MiB           Test the package\n    12                                     >>> test_function()\n    13    301.0 MiB      0.0 MiB           True\n    14    301.0 MiB      0.0 MiB       \n    15    301.0 MiB      0.0 MiB       \"\"\"\n    16                                 data = pd.read_csv('diabetes.csv')\n    17    301.0 MiB      0.0 MiB       test = tfRecordWriter(data)\n    18    301.0 MiB      0.0 MiB       test.write('new.tfrecords')\n    19    301.0 MiB      0.0 MiB   \n    20    301.0 MiB      0.0 MiB       with open('example_spec.pickle','rb') as f:\n    21    301.3 MiB      0.2 MiB           example_spec = pickle.load(f)\n    22    301.3 MiB      0.0 MiB       assert example_spec == test.get_example_spec()\n    23                             \n    24                                 data = tf.data.TFRecordDataset('new.tfrecords')\n    25                                 func = lambda x: tf.io.parse_single_example(x,example_spec)\n    26                                 data = data.map(func)\n    27                                 y = data.take(1)\n    28                                 for x in y:\n    29                                   assert x['Age'].numpy() == 50\n    30                                 return True\n\n````\n### Speed Test\n````sh\nTimer unit: 1e-06 s\n\nTotal time: 0.644076 s\nFile: /notebooks/package/tests/test_sample.py\nFunction: test_function at line 8\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n     8                                           def test_function():\n     9         1       6395.0   6395.0      1.0      data = pd.read_csv('diabetes.csv')\n    10         1        602.0    602.0      0.1      test = tfRecordWriter(data)\n    11         1     589870.0 589870.0     91.6      test.write('new.tfrecords')\n    12                                           \n    13         1         57.0     57.0      0.0      with open('example_spec.pickle','rb') as f:\n    14         1         79.0     79.0      0.0          example_spec = pickle.load(f)\n    15         1         28.0     28.0      0.0      assert example_spec == test.get_example_spec()\n    16                                           \n    17         1       8591.0   8591.0      1.3      data = tf.data.TFRecordDataset('new.tfrecords')\n    18         1          3.0      3.0      0.0      func = lambda x: tf.io.parse_single_example(x,example_spec)\n    19         1      25952.0  25952.0      4.0      data = data.map(func)\n    20         1        245.0    245.0      0.0      y = data.take(1)\n    21         2      12227.0   6113.5      1.9      for x in y:\n    22         1         27.0     27.0      0.0        assert x['Age'].numpy() == 50\n\n````\n### Another Example\n```sh\n>>> import pandas as pd\n>>> data = pd.read_csv('diabetes.csv')\n>>> from fastTF import tfRecordWriter\n>>> demo = tfRecordWriter(data)\n>>> demo.write(\"name.tfrecord\")\n>>> test.get_example_spec()\n{'Pregnancies': FixedLenFeature(shape=(), dtype=tf.int64, default_value=None), 'Glucose', FixedLenFeature(shape=(), dtype=tf.int64, default_value=None), 'BloodPressure': FixedLenFeature(shape=(), dtype=tf.int64, default_value=None),  'SkinThickness': FixedLenFeature(shape=(), dtype=tf.int64, default_value=None), 'Insulin': FixedLenFeature(shape=(), dtype=tf.int64, default_value=None), 'Age': FixedLenFeature(shape=(), dtype=tf.int64, default_value=None), 'Outcome': FixedLenFeature(shape=(), dtype=tf.int64, default_value=None), 'BMI': FixedLenFeature(shape=(), dtype=tf.float32, default_value=None), 'DiabetesPedigreeFunction': FixedLenFeature(shape=(), dtype=tf.float32, default_value=None)}\n```\n\n\n\n### Todos\n\n - Write more Tests\n - Make the app faster\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/azfar154/fastTF",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fastTF",
    "package_url": "https://pypi.org/project/fastTF/",
    "platform": "",
    "project_url": "https://pypi.org/project/fastTF/",
    "project_urls": {
      "Homepage": "https://github.com/azfar154/fastTF"
    },
    "release_url": "https://pypi.org/project/fastTF/1.0.3/",
    "requires_dist": [
      "pandas",
      "tensorflow (>=2.0.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Converts Pandas Dataframe to Tensorflow TFRecord",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6924419,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "200d259bd232f78010506beb23c60bed3236ab5b2d8226957c0e366755cf5045",
          "md5": "1a4b78dba0d5ade420a044df039e7213",
          "sha256": "3f7b2646a820d660108d5a0179c69a05c0a600976f1dc507c1ebfd9a5382fa94"
        },
        "downloads": -1,
        "filename": "fastTF-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1a4b78dba0d5ade420a044df039e7213",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5282,
        "upload_time": "2020-03-31T21:42:04",
        "upload_time_iso_8601": "2020-03-31T21:42:04.745574Z",
        "url": "https://files.pythonhosted.org/packages/20/0d/259bd232f78010506beb23c60bed3236ab5b2d8226957c0e366755cf5045/fastTF-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4caeca836fb411b63bc16c1c7ce76697fa035fbbdca47717b22ed48dfb48c24",
          "md5": "bd0f1f7aae2bfc82c5cab8d5f59a58d2",
          "sha256": "91142174de04eedd8ac6bf649ac3321885ec524dff490f5042e7284e53e34b29"
        },
        "downloads": -1,
        "filename": "fastTF-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bd0f1f7aae2bfc82c5cab8d5f59a58d2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5282,
        "upload_time": "2020-04-01T00:36:26",
        "upload_time_iso_8601": "2020-04-01T00:36:26.420414Z",
        "url": "https://files.pythonhosted.org/packages/f4/ca/eca836fb411b63bc16c1c7ce76697fa035fbbdca47717b22ed48dfb48c24/fastTF-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "591ddbb4497be81dce5d25a3d19e2e23c7d84bf58e667e0c919ba6fbf172c15b",
          "md5": "9a7f501603d72bf80639043d1ca71889",
          "sha256": "07468555de017adc7c0d5fb92f7254320491d83b67f62816e7cadbde707546ea"
        },
        "downloads": -1,
        "filename": "fastTF-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9a7f501603d72bf80639043d1ca71889",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6344,
        "upload_time": "2020-04-01T00:36:27",
        "upload_time_iso_8601": "2020-04-01T00:36:27.377248Z",
        "url": "https://files.pythonhosted.org/packages/59/1d/dbb4497be81dce5d25a3d19e2e23c7d84bf58e667e0c919ba6fbf172c15b/fastTF-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f4caeca836fb411b63bc16c1c7ce76697fa035fbbdca47717b22ed48dfb48c24",
        "md5": "bd0f1f7aae2bfc82c5cab8d5f59a58d2",
        "sha256": "91142174de04eedd8ac6bf649ac3321885ec524dff490f5042e7284e53e34b29"
      },
      "downloads": -1,
      "filename": "fastTF-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bd0f1f7aae2bfc82c5cab8d5f59a58d2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5282,
      "upload_time": "2020-04-01T00:36:26",
      "upload_time_iso_8601": "2020-04-01T00:36:26.420414Z",
      "url": "https://files.pythonhosted.org/packages/f4/ca/eca836fb411b63bc16c1c7ce76697fa035fbbdca47717b22ed48dfb48c24/fastTF-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "591ddbb4497be81dce5d25a3d19e2e23c7d84bf58e667e0c919ba6fbf172c15b",
        "md5": "9a7f501603d72bf80639043d1ca71889",
        "sha256": "07468555de017adc7c0d5fb92f7254320491d83b67f62816e7cadbde707546ea"
      },
      "downloads": -1,
      "filename": "fastTF-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "9a7f501603d72bf80639043d1ca71889",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6344,
      "upload_time": "2020-04-01T00:36:27",
      "upload_time_iso_8601": "2020-04-01T00:36:27.377248Z",
      "url": "https://files.pythonhosted.org/packages/59/1d/dbb4497be81dce5d25a3d19e2e23c7d84bf58e667e0c919ba6fbf172c15b/fastTF-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}