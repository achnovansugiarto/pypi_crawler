{
  "info": {
    "author": "Jan Luca van den Busch",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# hyperbolic\n\nImplementation of hyperbolic magnitudes (Lupton et al. 1999).\n\n## Installation\n\nThis code is written for `python3.6+`. All dependencies are listed in the\n`requirements.txt`.\n\n## Usage\n\nThe code is split in two parts. The first script, `hyp_smoothing.py`, reads an\ninput FITS table with photometric data (flux and flux errors and optional\nclassical magnitudes) and calculates statistics that determine the smoothing\nparamter for the hyperbolical magnitudes, such as the photometric zeropoint\nand the median flux uncertainty (see implementation section below). The input\ndata is specified in the configuration file. An empty configration file can be\ngenerated with\n\n   hyp_smoothing.py -d\n\nAn example usage might look like this:\n\n```shell\nhyp_smoothing.py -v \\\n   --field pointing_identifier_column_name \\\n   -c configration.json \\\n   input_catalogue.fits \\\n   field_statistics.csv\n```\n\nThe second part of the code, `hyp_magnitudes.py`, computes the actual value for\nthe smoothing parameter and computes hyperbolic magnitudes consistently. The\ncode corrects automatically variations in the photometric zeropoint (if\nmagnitudes are provided in the configuration file) based on the\n`field_statistics.csv` computed in the first step. An example usage might look\nlike this:\n\n```shell\nhyp_magnitudes.py -v \\\n   --field pointing_identifier_column_name \\\n   -c configration.json \\\n   -s field_statistics.csv \\\n   --plot \\\n   input_catalogue.fits \\\n   output_catalogue_with_hyperb_mags.fits\n```\n\nIt is also possible to apply the smoothing parameter from an external data\ncataloge. In this case, the field statistics of the external data should be\ncomputed with `hyp_smoothing.py`. The output .csv file can be provided to\n`hyp_magnitudes.py` by adding the `--smoothing` parameter to the call above.\n\n## Implementation\n\nHyperbolical magnitudes approximate the classical magnitudes at high signal-to-\nnoise, but have linear behaviour around flux values of f=0 and are therefore\nwell defined if f<0. Lupton et al. (1999) suggest to define hyperbolical\nmagnitudes in terms of the normalised flux x=f/f0 as\n\n    mu = a * [arcsinh(0.5*x/b) + log(b)] ,\n\nwith a=2.5log10(e). In this parameterisation f0 is the flux of an object with\nmagnitude zero and m0=a*log(f0) is the corresponding photometric zeropoint.\n\nThe free parameter b is a smoothing factor that determines the transition\nbetween linear and logarithmic behaviour of mu. Lupton et al. (1999) show that\nthe optimal value for the smoothing parameter is\n\n    b = sqrt(a) Dx ,\n\ni.e. is determined by the variance of the normalised flux.\n\nWhen applied to observational data, the hyperbolic magnitudes can be written as\n\n    mu = a * [arcsinh(0.5*f/b') + log(b')] + m0 ,\n\nwhere f is the measured flux and\n\n    b' = f0 * b = sqrt(a) * Df\n\nis determined from the variance of the measured fluxes. In this formulation, b\ndepends on the photometric zeropoint.\n\n### Estimating the smoothing parameter\n\nFor a given set of flux measurements the hyperbolic magnitudes can be computed\nonce an appropriate smoothing parameter is chosen. This determines b globally\nfrom the complete input data and for each photometric filter specified in the\nconfiguration file:\n\n1. It computes the photometric zeropoint m0 in each telescope pointing by\n   comparing the individual flux measurements fi and magnitudes mi, since the\n   latter may include a number of corrections, such as extinction or stellar\n   locus regressions:\n\n       m0 = median(mi + a*log(fi))\n\n2. It computes the smoothing parameter for each pointing from the zeropoint\n   according to\n   \n       b = b' / f0 = sqrt(a) * Df / f0 = sqrt(a) * e^(-m0/a) * Df ,\n\n   where Df=median(fi) is the median of the measured flux errors.\n3. It computes the global value for b in each filter by taking the median of\n   all pointings.\n\n### Computation\n\nThe code computes the hyperbolical magnitudes from their normalised flux\nx=f/f0 with uncertainty Dx=Df/f0 based on these global values for b. In each\npointing it calcualtes the flux f0=e^(m0/a) from the zeropoint m0 (see above)\nto compensate variations in the observing conditions.\n\n## Maintainers\n\n[Jan Luca van den Busch](jlvdb@astro.rub.de),\nRuhr-University Bochum, Astronomical Institute.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jlvdb/hyperbolic",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pz-hyperbolic-temp",
    "package_url": "https://pypi.org/project/pz-hyperbolic-temp/",
    "platform": null,
    "project_url": "https://pypi.org/project/pz-hyperbolic-temp/",
    "project_urls": {
      "Homepage": "https://github.com/jlvdb/hyperbolic"
    },
    "release_url": "https://pypi.org/project/pz-hyperbolic-temp/0.0/",
    "requires_dist": [
      "numpy",
      "scipy",
      "matplotlib",
      "pandas",
      "astropandas"
    ],
    "requires_python": "",
    "summary": "Implementation of hyperbolic magnitudes (Lupton et al. 1999).",
    "version": "0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14857532,
  "releases": {
    "0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9518e77e2be00e41f53df7d8b531ac4f2862b6b1a01abcb96694d821bf52fad",
          "md5": "936a17352b9add194624c3fbe6c69822",
          "sha256": "0493bc82745d709433286583116103d06405c631003ed35f1995d845eab2e6cb"
        },
        "downloads": -1,
        "filename": "pz_hyperbolic_temp-0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "936a17352b9add194624c3fbe6c69822",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27622,
        "upload_time": "2022-08-23T21:47:07",
        "upload_time_iso_8601": "2022-08-23T21:47:07.110839Z",
        "url": "https://files.pythonhosted.org/packages/f9/51/8e77e2be00e41f53df7d8b531ac4f2862b6b1a01abcb96694d821bf52fad/pz_hyperbolic_temp-0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "994297220480acb2d3276e051127c1df9eac7367bd14b6d4c6ed2d3f0d462c17",
          "md5": "2a6325d0ab50c0b7b598f7662f734518",
          "sha256": "2bea0e31478a0c6b49dd7540a68f61f1fe064351f4844d8867f61478c526e0dd"
        },
        "downloads": -1,
        "filename": "pz-hyperbolic-temp-0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2a6325d0ab50c0b7b598f7662f734518",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26483,
        "upload_time": "2022-08-23T21:47:09",
        "upload_time_iso_8601": "2022-08-23T21:47:09.293258Z",
        "url": "https://files.pythonhosted.org/packages/99/42/97220480acb2d3276e051127c1df9eac7367bd14b6d4c6ed2d3f0d462c17/pz-hyperbolic-temp-0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f9518e77e2be00e41f53df7d8b531ac4f2862b6b1a01abcb96694d821bf52fad",
        "md5": "936a17352b9add194624c3fbe6c69822",
        "sha256": "0493bc82745d709433286583116103d06405c631003ed35f1995d845eab2e6cb"
      },
      "downloads": -1,
      "filename": "pz_hyperbolic_temp-0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "936a17352b9add194624c3fbe6c69822",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 27622,
      "upload_time": "2022-08-23T21:47:07",
      "upload_time_iso_8601": "2022-08-23T21:47:07.110839Z",
      "url": "https://files.pythonhosted.org/packages/f9/51/8e77e2be00e41f53df7d8b531ac4f2862b6b1a01abcb96694d821bf52fad/pz_hyperbolic_temp-0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "994297220480acb2d3276e051127c1df9eac7367bd14b6d4c6ed2d3f0d462c17",
        "md5": "2a6325d0ab50c0b7b598f7662f734518",
        "sha256": "2bea0e31478a0c6b49dd7540a68f61f1fe064351f4844d8867f61478c526e0dd"
      },
      "downloads": -1,
      "filename": "pz-hyperbolic-temp-0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2a6325d0ab50c0b7b598f7662f734518",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26483,
      "upload_time": "2022-08-23T21:47:09",
      "upload_time_iso_8601": "2022-08-23T21:47:09.293258Z",
      "url": "https://files.pythonhosted.org/packages/99/42/97220480acb2d3276e051127c1df9eac7367bd14b6d4c6ed2d3f0d462c17/pz-hyperbolic-temp-0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}