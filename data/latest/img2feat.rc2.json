{
  "info": {
    "author": "Masayuki Tanaka",
    "author_email": "mastnk@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "img2feat\n========\n\nIt is an image feature extractor based on a convolutional neural\nnetwork.\n\n`Github <https://github.com/mastnk/img2feat/>`__\n`PyPI <https://pypi.org/project/img2feat/>`__\n\nInstallation\n------------\n\n::\n\n   % pip install img2feat\n\nRequired libraries: numpy, torch, torchvision, opencv-python\n\n*class* CNN\n-----------\n\nThe CNN converts a list of numpy images to features, where numpy image\nis assumed opencv format, or [Height, Width, BGR]. The shape of the\noutput features is [ length of the list of the input images,\n*dim_feature* of the CNN].\n\nAvailable networks: alexnet, vgg11, vgg13, vgg16, vgg19, resnet18,\nresnet34, resnet101, resnet152, densenet121, densenet161, densenet169,\ndensenet201 googlenet, mobilenet\n\n.. code:: python\n\n   from img2feat import CNN\n   net = CNN('vgg11')\n   x = net( [img] )\n\nMethods\n~~~~~~~\n\n-  **available_networks**\\ () -> list of string\n\n   ::\n\n        Return the list of names of available networks.\n\n-  **init**\\ ( network=‘vgg11’, gpu=False, img_size=(224,224) )\n\n   Constructor\n\n   *network* should be one of *available_networks*\\ ()\n\n   *gpu* is set True, if the GPU is available.\n\n   *img_size* is the image size which is input to the network, (width,\n   height)\n\n-  **call**\\ ( imgs ) -> feature (numpy float32)\n\n   It converts the list of images to the features.\n\n   *imgs* is thee list of images. The image is should be the opencv\n   format, or [Height, Width, BGR].\n\n   *feature* is the converted features where [ len(imgs),\n   *dim_feature*].\n\nVariables\n~~~~~~~~~\n\n-  **dim_feature** (int)\n\n   It is the dimension of the output feature.\n\n*class* PixelFeature\n--------------------\n\nThe PixelFeature converts images to per-pixel features. The feature is\nthe numpy array of [Height, Width, Dim Feature].\n\nAvailable networks: vgg11, vgg13, vgg16, vgg19,\n\n.. code:: python\n\n   from img2feat import CNN\n   net = CNN('vgg11')\n   x = net( [img] )\n\n.. _methods-1:\n\nMethods\n~~~~~~~\n\n-  **available_networks**\\ () -> list of string\n\n   ::\n\n        Return the list of names of available networks.\n\n-  **init**\\ ( network=‘vgg11’, gpu=False )\n\n   Constructor\n\n   *network* should be one of *available_networks*\\ ()\n\n   *gpu* is set True, if the GPU is available.\n\n-  **call**\\ ( imgs ) -> list of feature (numpy float32)\n\n   It converts the list of images to the features.\n\n   *imgs* is thee list of images. The image is should be the opencv\n   format, or [Height, Width, BGR].\n\n   *feature* is the converted features where [ height, width,\n   *dim_featute*]. The height and width are same as the input image.\n\n.. _variables-1:\n\nVariables\n~~~~~~~~~\n\n-  **dim_feature** (int)\n\n   It is the dimension of the output feature.\n\n*class* Mirror\n--------------\n\nThe Mirror provide a data augmentation of mirroring.\n\n.. _methods-2:\n\nMethods\n~~~~~~~\n\n-  **call**\\ ( imgs ) -> augmented images\n\n   It return the augmented images. The output is the list of images. The\n   odd is the original images and the even is the mirrored images.\n\n.. _variables-2:\n\nVariables\n~~~~~~~~~\n\n-  **nb_aug** int\n\n   It return 2.\n\n*class* TenCrop\n---------------\n\nThe TenCrop provide a typical 10-crop data augmentation. First, images\nare resized so that the shorter side is a setting scale. Then, center,\ntop-left, top-right, bottom-left, and bottom-right are cropped.\n\n.. _methods-3:\n\nMethods\n~~~~~~~\n\n-  **init**\\ ( scales=[224, 256, 384, 480, 640], mirror=True,\n   img_size=(224,224) )\n\n   Constructor.\n\n   *scales* is a list of scales. Images are resized so that the shorter\n   side is scale.\n\n   If *mirror* is True, the mirroring augmentation is also applied.\n\n   *img_size* is cropping size.\n\n-  **call**\\ ( imgs ) -> augmented images\n\n   It returns the augmented images.\n\n.. _variables-3:\n\nVariables\n~~~~~~~~~\n\n-  **img_size**\n\n   It is the cropping size. [Width, Height]\n\n-  **nb_aug**\n\n   It is the number of augmentation fro a single image. It is the\n   multiplication of len(scales) \\* 5 \\* 2, if mirror is True\n\n*package* antbee\n----------------\n\nIt is utility package for the dataset of ants and bees in `Transfer\nLearning for Computer Vision\nTutorial <https://pytorch.org/tutorials/beginner/transfer_learning_tutorial.html>`__.\n\n.. _methods-4:\n\nMethods\n~~~~~~~\n\n-  **load**\\ ( squared=True, root=None ) -> ( Itrain, Ytrain ), ( Itest,\n   Ytest )\n\n   *root* is the root directory of the data. If it is None, the root\n   directory is set as the package directory.\n\n   If *squared* is True, only squared images are loaded. If *squared* is\n   False, all images are loaded.\n\n   *Itrain, Itest* are lists of images.\n\n   *Ytrain, Ytest* are numpy array of the label. 0: ant, 1: bee.\n\n-  **load_squared_npy**\\ ( name, root=None ) -> ( Xtrain, Ytrain ), (\n   Xtest, Ytest )\n\n   *root* is the root directory of the data. If it is None, the root\n   directory is set as the package directory.\n\n   *name* is the name of CNN network.\n\n   *Xtrain, Xtest* are numpy array of extracted features.\n\n   *Ytrain, Ytest* are numpy array of the label. 0: ant, 1: bee.\n\n.. _variables-4:\n\nVariables\n~~~~~~~~~\n\n-  **str**\n\n   str[0]: ‘ant’, str[1]: ‘bee’\n\nSample Codes\n------------\n\n`sample1.py <https://github.com/mastnk/img2feat/blob/main/sample1.py>`__:\nLinear regression.\n\n`sample2.py <https://github.com/mastnk/img2feat/blob/main/sample2.py>`__:\nData augmentation.\n\nNetwork References\n------------------\n\n`AlexNet: One weird trick for parallelizing convolutional neural\nnetworks <https://arxiv.org/abs/1404.5997>`__\n\n`VGG: Very Deep Convolutional Networks for Large-Scale Image\nRecognition <https://arxiv.org/abs/1409.1556>`__\n\n`ResNet: Deep Residual Learning for Image\nRecognition <https://arxiv.org/abs/1512.03385>`__\n\n`DenseNet: Densely Connected Convolutional\nNetworks <https://arxiv.org/abs/1608.06993>`__\n\n`MobileNet: Inverted Residuals and Linear\nBottlenecks <https://arxiv.org/abs/1801.04381>`__\n\n`GoogLeNet: Going Deeper with\nConvolutions <https://arxiv.org/abs/1409.4842>`__\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mastnk/img2feat",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "img2feat",
    "package_url": "https://pypi.org/project/img2feat/",
    "platform": "",
    "project_url": "https://pypi.org/project/img2feat/",
    "project_urls": {
      "Homepage": "https://github.com/mastnk/img2feat"
    },
    "release_url": "https://pypi.org/project/img2feat/0.2.0/",
    "requires_dist": [
      "scikit-learn",
      "numpy",
      "torch",
      "torchvision",
      "opencv-python",
      "scikit-build",
      "cmake",
      "scipy"
    ],
    "requires_python": "",
    "summary": "Convert image to feature based on convolutional neural network (CNN).",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10059056,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e02b05c9ed2edab58cfdbd3b5e5bcf9bb3ba7e856dcbc7a5079926f2dcea6d0",
          "md5": "f4bca73890df3fea4b7eee21577829e9",
          "sha256": "e34a9cba9f9c763385c382f6b5b4b505bf8fab2d73af2b37d213e3b7587f0238"
        },
        "downloads": -1,
        "filename": "img2feat-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f4bca73890df3fea4b7eee21577829e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12322,
        "upload_time": "2021-01-27T13:07:43",
        "upload_time_iso_8601": "2021-01-27T13:07:43.363559Z",
        "url": "https://files.pythonhosted.org/packages/3e/02/b05c9ed2edab58cfdbd3b5e5bcf9bb3ba7e856dcbc7a5079926f2dcea6d0/img2feat-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f7b31b735e26b6715093e03653d0f44e1a2ae71e83ff1926f5ff05e9e753c79",
          "md5": "99549d2cc023bf3ac461bca0b685d9e8",
          "sha256": "5e7438b69050e9273f4ab0794319bf1dee88f3f95fd2cdd5a44e7ce6e9c25414"
        },
        "downloads": -1,
        "filename": "img2feat-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "99549d2cc023bf3ac461bca0b685d9e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9693,
        "upload_time": "2021-01-27T13:07:45",
        "upload_time_iso_8601": "2021-01-27T13:07:45.079866Z",
        "url": "https://files.pythonhosted.org/packages/9f/7b/31b735e26b6715093e03653d0f44e1a2ae71e83ff1926f5ff05e9e753c79/img2feat-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71dcad28794c0f5197d833534fb1233a08cd48669e9e7730270dc621ba1c031a",
          "md5": "afa3426edfdb644b4b9b9b1d1765e4fa",
          "sha256": "92c8d3920f94f1d96479acd2b2f748c241b77291f4a4f54853a32edc8e326d57"
        },
        "downloads": -1,
        "filename": "img2feat-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "afa3426edfdb644b4b9b9b1d1765e4fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9542,
        "upload_time": "2021-04-14T05:49:24",
        "upload_time_iso_8601": "2021-04-14T05:49:24.902789Z",
        "url": "https://files.pythonhosted.org/packages/71/dc/ad28794c0f5197d833534fb1233a08cd48669e9e7730270dc621ba1c031a/img2feat-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00e4f540b65ad364ebb3e731f2df5efb465019c80822942d258faa14e9295e0c",
          "md5": "91267982b713b32f89764a6875a0350a",
          "sha256": "acb53d6a667ff93afb89c08db6f4732b83be4df61530ca630e822d64bf8248c3"
        },
        "downloads": -1,
        "filename": "img2feat-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "91267982b713b32f89764a6875a0350a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10820,
        "upload_time": "2021-04-14T05:49:26",
        "upload_time_iso_8601": "2021-04-14T05:49:26.603852Z",
        "url": "https://files.pythonhosted.org/packages/00/e4/f540b65ad364ebb3e731f2df5efb465019c80822942d258faa14e9295e0c/img2feat-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "71dcad28794c0f5197d833534fb1233a08cd48669e9e7730270dc621ba1c031a",
        "md5": "afa3426edfdb644b4b9b9b1d1765e4fa",
        "sha256": "92c8d3920f94f1d96479acd2b2f748c241b77291f4a4f54853a32edc8e326d57"
      },
      "downloads": -1,
      "filename": "img2feat-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "afa3426edfdb644b4b9b9b1d1765e4fa",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9542,
      "upload_time": "2021-04-14T05:49:24",
      "upload_time_iso_8601": "2021-04-14T05:49:24.902789Z",
      "url": "https://files.pythonhosted.org/packages/71/dc/ad28794c0f5197d833534fb1233a08cd48669e9e7730270dc621ba1c031a/img2feat-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "00e4f540b65ad364ebb3e731f2df5efb465019c80822942d258faa14e9295e0c",
        "md5": "91267982b713b32f89764a6875a0350a",
        "sha256": "acb53d6a667ff93afb89c08db6f4732b83be4df61530ca630e822d64bf8248c3"
      },
      "downloads": -1,
      "filename": "img2feat-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "91267982b713b32f89764a6875a0350a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10820,
      "upload_time": "2021-04-14T05:49:26",
      "upload_time_iso_8601": "2021-04-14T05:49:26.603852Z",
      "url": "https://files.pythonhosted.org/packages/00/e4/f540b65ad364ebb3e731f2df5efb465019c80822942d258faa14e9295e0c/img2feat-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}