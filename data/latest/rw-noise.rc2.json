{
  "info": {
    "author": "Dominik Drees",
    "author_email": "dominik.drees@uni-muenster.de",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: C++",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "# Random Walker Image Segmentation for Python\n\nThis is an implementation of the Random Walker for image segmentation method by Grady [1] with implementations of dynamic, noise modeling-based weight functions [2,3,4].\n\nIf you use this code in your research, please cite the following as a reference.\n\n```\nA Bhattacharyya Coefficient-Based Framework for Noise Model-Aware Random Walker Image Segmentation\nDominik Drees, Florian Eilers, Ang Bian and Xiaoyi Jiang\nCoRR abs/2206.00947 (2022)\n```\n# Installation\nInstall from pypi using `pip install rw_noise`.\n\n# Building\nThe library itself is implemented in c++ and requires a modern compiler that supports the C++20 standard.\nFurther, the following libraries have to be available:\n * Boost (with python and numpy support)\n * OpenMP\n * Python3\n * Eigen3\n * Magma, Cuda (optionally, for the GPU solver)\n\nTo build the library, invoke `pythom -m build`.\nThen, to install use `pip install <path_to_wheel>` where `<path_to_wheel>` is likely a file in the created `dist` subfolder with extension `.whl`.\n\n# Usage\nThe API is very simple and mostly consists of the two functions `weights` and `solve`.\nFor weight definition, a method has to be supplied which can be constructed via the following functions:\n * `fixed` (Grady [1]) \n * `global_gaussian_bian` (Bian et al. [2])\n * `ttest` (Bian et al. [3])\n * `poisson` (Drees et al. [4]),\n * `variable_gaussian` (Drees et al. [4]),\n * `global_gaussian` (Drees et al. [4]),\nOf those, only `fixed` and `global_gaussian` are suitable for non-scalar pixel data.\n\nA minimal example program using the library could look like the following:\n```python\nimport rw_noise as rw\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Load a two-dimensional single-channel image from a file. (Multi-channel\n# images are also supported, but only for methods \"global_gaussian\" and\n# \"fixed\")\nimage = np.load('/path/to/some/image/file.npy').astype(np.float32)\n\n# Create a seed map. 0 means unlabeled, i>0 means pixel has class i\nseeds = np.zeros(image.shape, dtype=np.uint32)\n# Mark top left pixel as class 1\nseeds[0,0] = 1\n# Mark bottom right pixel as class 2\nseeds[-1,-1] = 2\n\n# Methods are specified as dictionaries.\n# Choose one of the following and change parameters as needed:\nmethod = rw.variable_gaussian(filter_extent=2)\n#method = rw.global_gaussian(filter_extent=2)\n#method = rw.poisson(filter_extent=2)\n#method = rw.ttest(filter_extent=2)\n#method = rw.global_gaussian_bian(filter_extent=2)\n#method = rw.fixed(beta=100)\n\n# Calculate weights\nweights_h, weights_v = rw.weights(image, method)\n\n# Solve RW problem using the previously calculated weights and seeds.\n# 'classes' then contains an integer map specifying the final class per pixel\n# 'probabilities' is a list of class probabilies for all specified classes\nclasses, probabilities = rw.solve(weights_h, weights_v, seeds)\nplt.imshow(classes)\nplt.show()\nfor probs in probabilities:\n    plt.imshow(probs)\n    plt.show()\n```\n\n# References\n\n[1] Leo J. Grady: Random Walks for Image Segmentation. IEEE Trans. Pattern Anal. Mach. Intell. (2006)\n\n[2] Ang Bian and Xiaoyi Jiang: Statistical Modeling Based Adaptive Parameter Setting for Random Walk Segmentation. ACIVS (2016)\n\n[3] Ang Bian and Xiaoyi Jiang: T-Test Based Adaptive Random Walk Segmentation Under Multiplicative Speckle Noise Model. ACCV Workshops (2016)\n\n[4] Dominik Drees, Florian Eilers, Ang Bian and Xiaoyi Jiang: A Bhattacharyya Coefficient-Based Framework for Noise Model-Aware Random Walker Image Segmentation. [CoRR abs/2206.00947](https://arxiv.org/abs/2206.00947) (2022)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://zivgitlab.uni-muenster.de/ag-pria/rw-noise-model",
    "keywords": "random-walker image-segmentation noise-model",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rw-noise",
    "package_url": "https://pypi.org/project/rw-noise/",
    "platform": "any",
    "project_url": "https://pypi.org/project/rw-noise/",
    "project_urls": {
      "Homepage": "https://zivgitlab.uni-muenster.de/ag-pria/rw-noise-model"
    },
    "release_url": "https://pypi.org/project/rw-noise/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A library for random walker image segmentation under known noise models",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14803256,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a506417c043e1ab40acff9b2df773c8796ec0cb07d80c758e5a62f19b0a7cf2",
          "md5": "8de2d5168dfa7f881f45f242d9985f16",
          "sha256": "41145246c5a4f6c148ef0b08220488aede7874c101d9bb33aae106cab0e51f70"
        },
        "downloads": -1,
        "filename": "rw_noise-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8de2d5168dfa7f881f45f242d9985f16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34978,
        "upload_time": "2022-08-18T15:45:33",
        "upload_time_iso_8601": "2022-08-18T15:45:33.837508Z",
        "url": "https://files.pythonhosted.org/packages/7a/50/6417c043e1ab40acff9b2df773c8796ec0cb07d80c758e5a62f19b0a7cf2/rw_noise-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "786cb0d85dfe1ae125d60e9976494b6a6a3e5146ef3498be91ca8b263d4a6f87",
          "md5": "f5d88ed019804394ae136537e3a580f7",
          "sha256": "9846937fe34571ae352fb2f872e6b0d0d38171606cf11f891a3ab8f471cafc7b"
        },
        "downloads": -1,
        "filename": "rw_noise-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f5d88ed019804394ae136537e3a580f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35279,
        "upload_time": "2022-08-18T15:55:50",
        "upload_time_iso_8601": "2022-08-18T15:55:50.570694Z",
        "url": "https://files.pythonhosted.org/packages/78/6c/b0d85dfe1ae125d60e9976494b6a6a3e5146ef3498be91ca8b263d4a6f87/rw_noise-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "786cb0d85dfe1ae125d60e9976494b6a6a3e5146ef3498be91ca8b263d4a6f87",
        "md5": "f5d88ed019804394ae136537e3a580f7",
        "sha256": "9846937fe34571ae352fb2f872e6b0d0d38171606cf11f891a3ab8f471cafc7b"
      },
      "downloads": -1,
      "filename": "rw_noise-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f5d88ed019804394ae136537e3a580f7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 35279,
      "upload_time": "2022-08-18T15:55:50",
      "upload_time_iso_8601": "2022-08-18T15:55:50.570694Z",
      "url": "https://files.pythonhosted.org/packages/78/6c/b0d85dfe1ae125d60e9976494b6a6a3e5146ef3498be91ca8b263d4a6f87/rw_noise-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}