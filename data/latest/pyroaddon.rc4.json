{
  "info": {
    "author": "pyroaddon",
    "author_email": "pyroaddon@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pyroaddon\nA monkeypatcher add-on for [Pyrogram](https://github.com/pyrogram/pyrogram)\n\n## Introduction\npyroaddon contains the same functionalities as [pyromod](https://github.com/usernein/pyromod) plus some more. So basically it's\npyromod on steroids.\n\npyroaddon works *together* with pyrogram, this is *not* a fork nor modded version. It does monkey patching to add features to Pyrogram classes.\n\n## Usage\nImport `pyroaddon` at least one time in your script, so you'll be able to use modified pyrogram in all files of the same proccess. Example:\n```python\n# config.py\nimport pyroaddon\nfrom pyrogram import Client\n\napp = Client('my_session')\n```\n```python\n# any other .py\nfrom config import app\n# no need to import pyroaddon again, pyrogram is already monkeypatched globally (at the same proccess)\n```\n## New Features\n### `Message.input`\nImport pyroaddon to add the property _input_ to `pyrogram.types.Message`. When a message contains a command, `Message.input` will contain the text in front of the command if there are any.\n\nExample: if `/command text in front` is in message.text, Then `Message.input = \"text in front\"`\n\nNote: `Message.input` will preserve any spaces between the text.\n\n### `Client.get_all_groups`\n`pyrogram.Client.get_all_groups()` will return any group chats that the client is joined in. \n\n### `Client.get_chat_administrators`\n`pyrogram.Client.get_chat_administrators(chat_id, has_creator=False)` will return chat administrators. If `has_creator` is set to _True_, It will also contain the owner. \n\n### `pyroaddon.filters`\nImport it and the following Update Filters will be monkeypatched to `pyrogram.filters`:\n\n- `filters.video_sticker`\nA video sticker message.\n- `filters.ttl_message`\nA ttl message.\n\n## Old Features\n### `pyroaddon.listen`\nJust import it, it will automatically do the monkeypatch and you'll get these new methods:\n- `await pyrogram.Client.listen(chat_id, filters=None, timeout=30)`\nAwaits for a new message in the specified chat and returns it\nYou can pass Update Filters to the filters parameter just like you do for the update handlers. e.g. `filters=filters.photo & filters.bot`\n\n- `await pyrogram.Client.ask(text, chat_id, filters=None, timeout=30)`\nSame of `.listen()` above, but sends a message before awaiting\nYou can pass custom parameters to its send_message() call. Check the example below.\n\n- The bound methods `Chat.listen`, `User.listen`, `Chat.ask` and `User.ask`\n\nExample:\n```python\nfrom pyroaddon import listen # or import pyroaddon.listen\nfrom pyrogram import Client\nclient = Client(...)\n...\n    answer = await client.ask(chat_id, '*Send me your name:*', parse_mode='Markdown')\n    await client.send_message(chat_id, f'Your name is: {answer.text}')    \n```\n\n### `pyroaddon.nav`\nTools for creating navigation keyboards.\n\n- `pyroaddon.nav.Pagination`\nCreates a full pagination keyboard. Usage:\n```python\nfrom pyrogram import Client, filters\nfrom pyroaddon.nav import Pagination\nfrom pyroaddon.helpers import ikb\n\ndef page_data(page):\n    return f'view_page {page}'\ndef item_data(item, page):\n    return f'view_item {item} {page}'\ndef item_title(item, page):\n    return f'Item {item} of page {page}'\n\n@Client.on_message(filters.regex('/nav'))\nasync def on_nav(c,m):\n    objects = [*range(1,100)]\n    page = Pagination(\n        objects,\n        page_data=page_data, # callback to define the callback_data for page buttons in the bottom\n        item_data=item_data, # callback to define the callback_data for each item button\n        item_title=item_title # callback to define the text for each item button\n    )\n    index = 0 # in which page is it now?\n    lines = 5 # how many lines of the keyboard to include for the items\n    columns = how many columns include in each items' line\n    kb = page.create(index, lines, columns)\n    await m.reply('Test', reply_markup=ikb(kb))\n```\n\n### `pyroaddon.helpers`\nTools for creating inline keyboards a lot easier.\n\n- `pyroaddon.helpers.ikb`\nCreates a inline keyboard. It's first and only argument must be a list (the keyboard) containing lists (the lines) of buttons.\nThe buttons can also be lists or tuples. I use tuples to not have to deal with a lot of brackets.\nThe button syntax must be this: (TEXT, CALLBACK_DATA) or (TEXT, VALUE, TYPE), where TYPE can be 'url' or any other supported button type and VALUE is its value. This syntax will be converted to {\"text\": TEXT, TYPE: VALUE). If TYPE is CALLBACK_DATA, you can omit it, just like the fist syntax above.\nExamples:\n```python\nfrom pyroaddon.helpers import ikb\n...\nkeyboard = ikb([\n    [('Button 1', 'call_1'), ('Button 2', 'call_2')],\n    [('Another button', 't.me/pyroaddon', 'url')]\n])\nawait message.reply('Test', reply_markup=keyboard)\n```\n- `pyroaddon.helpers.array_chunk`\nChunk the elements of a list into small lists. i.e. [1, 2, 3, 4] can become [[1,2], [3,4]]. This is extremely useful if you want to build a keyboard dinamically with more than 1 column. You just put all buttons together in a list and run:\n```python\nlines = array_chunk(buttons, 2) # generate a list of lines with 2 buttons on each\nkeyboard = ikb(lines)\n```\n\n### Copyright & License\nThis project may include snippets of Pyrogram code\n- Pyrogram - Telegram MTProto API Client Library for Python. Copyright (C) 2017-2022 Dan <<https://github.com/delivrance>>\n\nLicensed under the terms of the [GNU Lesser General Public License v3 or later (LGPLv3+)](COPYING.lesser)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pyroaddon/pyroaddon",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyroaddon",
    "package_url": "https://pypi.org/project/pyroaddon/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyroaddon/",
    "project_urls": {
      "Bug Tracker": "https://github.com/pyroaddon/pyroaddon/issues",
      "Homepage": "https://github.com/pyroaddon/pyroaddon"
    },
    "release_url": "https://pypi.org/project/pyroaddon/1.0.6/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A monkeypatcher add-on for Pyrogram",
    "version": "1.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13282197,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "074bc6830143a5c8c6d5f843b73dfa686f653a94925af5c876566fe6072d5f37",
          "md5": "1815c9c1cd6a2a9ba8d888a85a9e8e2d",
          "sha256": "bb0dc83194f9b981e64f95bcd29609589a9a675fe2daa8e7158cbd2c40165bc7"
        },
        "downloads": -1,
        "filename": "pyroaddon-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1815c9c1cd6a2a9ba8d888a85a9e8e2d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25121,
        "upload_time": "2022-02-09T19:51:07",
        "upload_time_iso_8601": "2022-02-09T19:51:07.389995Z",
        "url": "https://files.pythonhosted.org/packages/07/4b/c6830143a5c8c6d5f843b73dfa686f653a94925af5c876566fe6072d5f37/pyroaddon-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a5f8d9e76ba7dd4f883c78892abe88321eb8e71f26f6199b58fc1a78015c03f",
          "md5": "9103bb117caadcda30e7c3c2e1609137",
          "sha256": "4185737fd7997850960739d6f8454054ac848902bc4811075fb8d36a08e3668e"
        },
        "downloads": -1,
        "filename": "pyroaddon-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9103bb117caadcda30e7c3c2e1609137",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21365,
        "upload_time": "2022-02-09T19:51:09",
        "upload_time_iso_8601": "2022-02-09T19:51:09.165300Z",
        "url": "https://files.pythonhosted.org/packages/2a/5f/8d9e76ba7dd4f883c78892abe88321eb8e71f26f6199b58fc1a78015c03f/pyroaddon-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d7b5e10492fa6abdfd665dea66cd937feda0c21fc87c90e23f9e5132e2a43aa",
          "md5": "d03f143154ad544828798151534ec685",
          "sha256": "f0fe6a0dc5d4d23fe2de0c09b9915190fcc62cfe04e1f948471579c7ea7b084d"
        },
        "downloads": -1,
        "filename": "pyroaddon-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d03f143154ad544828798151534ec685",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 26654,
        "upload_time": "2022-02-10T09:36:08",
        "upload_time_iso_8601": "2022-02-10T09:36:08.262004Z",
        "url": "https://files.pythonhosted.org/packages/5d/7b/5e10492fa6abdfd665dea66cd937feda0c21fc87c90e23f9e5132e2a43aa/pyroaddon-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d2d031fc72afff7c3fe1f2345ca8de8c50343ef9f5a693e2158fa49bf9ca8a6",
          "md5": "9791c73b9703b12c5aa38594fcecef31",
          "sha256": "1aeec42643a1fe49673ebed9a6992aa77222b16fb1d59c2624fc804ab9fac770"
        },
        "downloads": -1,
        "filename": "pyroaddon-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9791c73b9703b12c5aa38594fcecef31",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22212,
        "upload_time": "2022-02-10T09:36:09",
        "upload_time_iso_8601": "2022-02-10T09:36:09.724677Z",
        "url": "https://files.pythonhosted.org/packages/3d/2d/031fc72afff7c3fe1f2345ca8de8c50343ef9f5a693e2158fa49bf9ca8a6/pyroaddon-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9339cab6d090ca462c81abd6e57252d7dd37139ee7ef88887e2b9f2d814d4fa",
          "md5": "87b7bb432d5ad35ac8efc7613175f6ef",
          "sha256": "eb2798fb416928329be0cac346f9e78d38bbafe6004685c3c3ca06b0996a2c22"
        },
        "downloads": -1,
        "filename": "pyroaddon-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "87b7bb432d5ad35ac8efc7613175f6ef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 26784,
        "upload_time": "2022-02-16T09:03:39",
        "upload_time_iso_8601": "2022-02-16T09:03:39.838724Z",
        "url": "https://files.pythonhosted.org/packages/a9/33/9cab6d090ca462c81abd6e57252d7dd37139ee7ef88887e2b9f2d814d4fa/pyroaddon-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "634b5edd3fd5153e6ba7d31017ae7bbe7d7e9fdf3126c1db3b2b14dfd943c870",
          "md5": "9b2fe6931868281799625987aca616a5",
          "sha256": "0dc19b967117e0f148f382cfba8cf0ac3c144968a11c69befd1de95a04885112"
        },
        "downloads": -1,
        "filename": "pyroaddon-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "9b2fe6931868281799625987aca616a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22476,
        "upload_time": "2022-02-16T09:03:41",
        "upload_time_iso_8601": "2022-02-16T09:03:41.679187Z",
        "url": "https://files.pythonhosted.org/packages/63/4b/5edd3fd5153e6ba7d31017ae7bbe7d7e9fdf3126c1db3b2b14dfd943c870/pyroaddon-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0ec179c84f1cad868f913aaa4adb466decd9101d84130200d3826f3cdad0be1",
          "md5": "357e631e0bd6b35c69cfb3f90f289917",
          "sha256": "4b0f6b75e76caac4a108f56d9ffae9bfe0a09443fa04bee7c1331e3d3f50266b"
        },
        "downloads": -1,
        "filename": "pyroaddon-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "357e631e0bd6b35c69cfb3f90f289917",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 26782,
        "upload_time": "2022-03-24T13:09:13",
        "upload_time_iso_8601": "2022-03-24T13:09:13.671289Z",
        "url": "https://files.pythonhosted.org/packages/b0/ec/179c84f1cad868f913aaa4adb466decd9101d84130200d3826f3cdad0be1/pyroaddon-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecd457de40267b7117d646cd5a1b2d366ea6ad4bb26ee84edf7c246e8d6ca580",
          "md5": "9938bf6bcea2e5318204932ea93c39fe",
          "sha256": "1ba1dc0687cb66fdfb529b60cc41a484aed9c783201a1283a0867bb28019f889"
        },
        "downloads": -1,
        "filename": "pyroaddon-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "9938bf6bcea2e5318204932ea93c39fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22471,
        "upload_time": "2022-03-24T13:09:15",
        "upload_time_iso_8601": "2022-03-24T13:09:15.298336Z",
        "url": "https://files.pythonhosted.org/packages/ec/d4/57de40267b7117d646cd5a1b2d366ea6ad4bb26ee84edf7c246e8d6ca580/pyroaddon-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b0ec179c84f1cad868f913aaa4adb466decd9101d84130200d3826f3cdad0be1",
        "md5": "357e631e0bd6b35c69cfb3f90f289917",
        "sha256": "4b0f6b75e76caac4a108f56d9ffae9bfe0a09443fa04bee7c1331e3d3f50266b"
      },
      "downloads": -1,
      "filename": "pyroaddon-1.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "357e631e0bd6b35c69cfb3f90f289917",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 26782,
      "upload_time": "2022-03-24T13:09:13",
      "upload_time_iso_8601": "2022-03-24T13:09:13.671289Z",
      "url": "https://files.pythonhosted.org/packages/b0/ec/179c84f1cad868f913aaa4adb466decd9101d84130200d3826f3cdad0be1/pyroaddon-1.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ecd457de40267b7117d646cd5a1b2d366ea6ad4bb26ee84edf7c246e8d6ca580",
        "md5": "9938bf6bcea2e5318204932ea93c39fe",
        "sha256": "1ba1dc0687cb66fdfb529b60cc41a484aed9c783201a1283a0867bb28019f889"
      },
      "downloads": -1,
      "filename": "pyroaddon-1.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "9938bf6bcea2e5318204932ea93c39fe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 22471,
      "upload_time": "2022-03-24T13:09:15",
      "upload_time_iso_8601": "2022-03-24T13:09:15.298336Z",
      "url": "https://files.pythonhosted.org/packages/ec/d4/57de40267b7117d646cd5a1b2d366ea6ad4bb26ee84edf7c246e8d6ca580/pyroaddon-1.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}