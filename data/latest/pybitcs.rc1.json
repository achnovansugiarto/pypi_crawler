{
  "info": {
    "author": "Dexter Dickinson",
    "author_email": "dexter.dickinson@bybit.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# pybit\n<!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->\n[![All Contributors](https://img.shields.io/badge/all_contributors-3-orange.svg?style=flat-square)](#contributors-)\n<!-- ALL-CONTRIBUTORS-BADGE:END -->\n\n[![Build Status](https://img.shields.io/pypi/pyversions/pybit)](https://www.python.org/downloads/)\n[![Build Status](https://img.shields.io/pypi/v/pybit)](https://pypi.org/project/pybit/)\n[![Build Status](https://travis-ci.org/verata-veritatis/pybit.svg?branch=master)](https://travis-ci.org/verata-veritatis/pybit)\n![contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat)\n\nOfficial Python3 API connector for Bybit's HTTP and WebSockets APIs.\n\n## Table of Contents\n\n- [About](#about)\n- [Development](#development)\n- [Installation](#installation)\n- [Basic Usage](#basic-usage)\n  * [Market Data Endpoints](#market-data-endpoints)\n    + [Advanced Data](#advanced-data)\n  * [Account Data Endpoints](#account-data-endpoints)\n    + [Active Orders](#active-orders)\n    + [Conditional Orders](#conditional-orders)\n    + [Position](#position)\n    + [Market Maker Protection](#market-maker-protection)\n    + [Risk Limit](#risk-limit)\n    + [Funding](#funding)\n    + [API Key Info](#api-key-info)\n    + [LCP Info](#lcp-info)\n  * [Wallet Data Endpoints](#wallet-data-endpoints)\n  * [API Data Endpoints](#api-data-endpoints)\n  * [Account Asset Endpoints](#account-asset-endpoints)\n  * [WebSocket](#websocket)\n    * [Futures](#futures)\n      + [Public Topics](#public-topics)\n      + [Private Topics](#private-topics)\n    + [Spot](#spot)\n      + [Public Topics V1](#public-topics-v1)\n      + [Public Topics V2](#public-topics-v2)\n      + [Private Topics](#private-topics-spot)\n- [Contact](#contact)\n- [Contributors](#contributors)\n- [Donations](#donations)\n\n## About\nPut simply, `pybit` (Python + Bybit) is the official lightweight one-stop-shop module for the Bybit HTTP and WebSocket APIs. Originally created by [Verata Veritatis](https://github.com/verata-veritatis), it's now maintained by Bybit employees - however, you're still welcome to contribute!\n\nIt was designed with the following vision in mind:\n\n> I was personally never a fan of auto-generated connectors that used a mosh-pit of various modules you didn't want (sorry, `bravado`) and wanted to build my own Python3-dedicated connector with very little external resources. The goal of the connector is to provide traders and developers with an easy-to-use high-performing module that has an active issue and discussion board leading to consistent improvements.\n\n## Development\n`pybit` is being actively developed, and new Bybit API changes should arrive on `pybit` very quickly. `pybit` uses `requests` and `websocket-client` for its methods, alongside other built-in modules. Anyone is welcome to branch/fork the repository and add their own upgrades. If you think you've made substantial improvements to the module, submit a pull request and we'll gladly take a look.\n\n## Installation\n`pybit` requires Python 3.6.1 or higher. The module can be installed manually or via [PyPI](https://pypi.org/project/pybit/) with `pip`:\n```\npip install pybit\n```\n\n## Basic Usage\nYou can retrieve a specific market like so:\n```python\nfrom pybit import inverse_perpetual\n```\nCreate an HTTP session and connect via WebSocket for Inverse on mainnet:\n```python\nsession = inverse_perpetual.HTTP(\n    endpoint='https://api.bybit.com', \n    api_key='...',\n    api_secret='...'\n)\nws = inverse_perpetual.WebSocket(\n    test=False,\n    api_key=\"...\",\n    api_secret=\"...\"\n)\n```\nInformation can be sent to, or retrieved from, the Bybit APIs:\n```python\n# Get orderbook.\nsession.orderbook(symbol='BTCUSD')\n\n# Create five long orders.\norders = [{\n    \"symbol\": \"BTCUSD\", \n    \"order_type\": \"Limit\", \n    \"side\": \"Buy\", \n    \"qty\": 100, \n    \"price\": i,\n    \"time_in_force\": \"GoodTillCancel\"\n} for i in [5000, 5500, 6000, 6500, 7000]]\n\n# Submit the orders in bulk.\nsession.place_active_order_bulk(orders)\n\n# Check on your order and position through WebSocket.\ndef handle_orderbook(message):\n    print(message)\ndef handle_position(message):\n    print(message)\n\nws.orderbook_25_stream(handle_orderbook, \"BTCUSD\")\nws.position_stream(handle_position)\n\nwhile True:\n    # Run your main trading strategy here\n    pass  # To avoid CPU utilisation, use time.sleep(1)\n```\nCheck out the example python files or the list of endpoints below for more information on available\nendpoints and methods. Usage examples on the `HTTP` methods can\nbe found at:\n- https://github.com/bybit-exchange/pybit/blob/master/examples/http_example.py\n\nUsage examples on the `WebSocket` methods can be found at:\n- https://github.com/bybit-exchange/pybit/blob/master/examples/websocket_example.py\n\n### Market Data Endpoints\n\n| Endpoint                          | Method |\n| -------------                     | ------------- |\n| Orderbook                         | `orderbook()`  |\n| Query Kline                       | `query_kline()` |\n| Latest Information for Symbol     | `latest_information_for_symbol()` |\n| Public Trading Records            | `public_trading_records()` |\n| Query Symbol                      | `query_symbol()` |\n| Liquidated Orders                 | `liquidated_orders()` |\n| Query Mark Price Kline            | `query_mark_price_kline()` |\n| Open Interest                     | `open_interest()` |\n| Delivery Price (USDC)         | `delivery_price()`                |\n| Last 500 Trades (USDC)        | `last_500_trades()`               |\n\n#### Advanced Data\n\n| Endpoint              | Method |\n| -------------         | ------------- |\n| Query Kline           | `query_kline()` |\n| Latest Big Deal       | `latest_big_deal()` |\n| Long Short Ratio      | `long_short_ratio()` |\n\n### Account Data Endpoints\n\n#### Active Orders\n\n| Endpoint                                | Method                               |\n| --------------------------------------- | ------------------------------------ |\n| Place Active Order                      | `place_active_order()`               |\n| Get Active Order                        | `get_active_order()`                 |\n| Cancel Active Order                     | `cancel_active_order()`              |\n| Cancel All Active Orders                | `cancel_all_active_orders()`         |\n| Replace Active Order                    | `replace_active_order()`             |\n| Query Active Order                      | `query_active_order()`               |\n| Batch Place Active Orders (USDC)        | `batch_place_active_orders()`         |\n| Fast Cancel Active Order (Spot)         | `fast_cancel_active_order()`         |\n| Batch Cancel Active Order (Spot, USDC)  | `batch_cancel_active_order()`        |\n| Batch Fast Cancel Active Order (Spot)   | `batch_fast_cancel_active_order()`   |\n| Batch Cancel Active Order By IDs (Spot) | `batch_cancel_active_order_by_ids()` |\n| Batch Replace Active Orders (USDC)      | `batch_replace_active_orders()`      |\n\n#### Conditional Orders\n\n| Endpoint                          | Method |\n| -------------                     | ------------- |\n| Place Conditional Order           | `place_conditional_order()`  |\n| Get Conditional Order             | `get_conditional_order()`  |\n| Cancel Conditional Order          | `cancel_conditional_order()`  |\n| Cancel All Conditional Orders     | `cancel_all_conditional_orders()`  |\n| Replace Conditional Order         | `replace_conditional_order()`  |\n| Query Conditional Order           | `query_conditional_order()` |\n\n#### Position\n\n| Endpoint                                              | Method |\n| -------------                                         | ------------- |\n| My Position                                           | `my_position()`  |\n| Set Auto Add Margin (Linear)                          | `set_auto_add_margin()`  |\n| Cross/Isolated Margin Switch (Linear)                 | `cross_isolated_margin_switch()`  |\n| Full/Partial Position SL/TP Switch                    | `full_partial_position_tp_sl_switch` |\n| Add/Reduce Margin (Linear)                            | `add_reduce_margin()` |\n| Set Trading-Stop                                      | `set_trading_stop()`  |\n| Set Leverage                                          | `set_leverage()`  |\n| User Leverage (deprecated)                            | `user_leverage()` |\n| User Trade Records                                    | `user_trade_records()`  |\n| Closed Profit and Loss                                | `closed_profit_and_loss()` |\n| Query Trading Fee Rate                                | `query_trading_fee_rate()` |\n| Query Delivery History (USDC)         | `query_delivery_history()`           |\n| Query Position Expiration Date (USDC) | `query_position_expiration_date()`   |\n\n#### Market Maker Protection\n\nOnly available for the USDC API.\n\n| Endpoint   | Method         |\n| ---------- | -------------- |\n| Query MMP  | `query_mmp`()  |\n| Modify MMP | `modify_mmp`() |\n| Reset MMP  | `reset_mmp`()  |\n\n#### Risk Limit\n\n| Endpoint                      | Method |\n| -------------                 | ------------- |\n| Get Risk Limit                | `my_position()`  |\n| Set Risk Limit (Inverse)      | `set_auto_add_margin()`  |\n\n#### Funding\n\n| Endpoint                                      | Method |\n| -------------                                 | ------------- |\n| Get the Last Funding Rate                     | `get_the_last_funding_rate()`  |\n| My Last Funding Fee                           | `my_last_funding_fee()`  |\n| Predicted Funding Rate and My Funding Fee     | `predicted_funding_rate()` |\n\n#### API Key Info\n\n| Endpoint          | Method |\n| -------------     | ------------- |\n| API Key Info      | `api_key_info()`  |\n\n#### LCP Info\n\n| Endpoint          | Method |\n| -------------     | ------------- |\n| LCP Info          | `lcp_info()`  |\n\n### Wallet Data Endpoints\n\n| Endpoint                  | Method |\n| -------------             | ------------- |\n| Get Wallet Balance        | `get_wallet_balance()`  |\n| Wallet Fund Records       | `wallet_fund_records()`  |\n| Withdraw Records          | `withdraw_records()`  |\n| Asset Exchange Records    | `asset_exchange_records()` |\n| Get Asset Info (USDC)  | `get_asset_info()`         |\n| Get Margin Mode (USDC) | `get_margin_mode()`        |\n\n### API Data Endpoints\n\n| Endpoint           | Method |\n| -------------      | ------------- |\n| Server Time        | `server_time()`  |\n| Announcement       | `announcement()`  |\n\n### Account Asset Endpoints\n\n| Endpoint                       | Method                             |\n| ------------------------------ | ---------------------------------- |\n| Create Internal Transfer       | `create_internal_transfer()`       |\n| Create Subaccount Transfer     | `create_subaccount_transfer()`     |\n| Query Transfer List            | `query_transfer_list()`            |\n| Query Subaccount Transfer List | `query_subaccount_transfer_list()` |\n| Query Subaccount List          | `query_subaccount_list()`          |\n| Query Supported Deposit List   | `query_supported_deposit_list()`   |\n| Query Deposit Records          | `query_deposit_records()`          |\n| Query Withdraw Records         | `query_withdraw_records()`         |\n| Query Coin Info                | `query_coin_info()`                |\n| Query Asset Info               | `query_asset_info()`               |\n| Withdraw                       | `withdraw()`                       |\n| Cancel Withdrawal              | `cancel_withdrawal()`              |\n| Query Deposit Address          | `query_deposit_address()`          |\n\n### pybit Custom Endpoints\n\n| Endpoint                          | Method |\n| -------------                     | ------------- |\n| Place Active Order (Bulk)         | `place_active_order_bulk()`  |\n| Cancel Active Order (Bulk)        | `cancel_active_order_bulk()`  |\n| Place Conditional Order (Bulk)    | `place_conditional_order_bulk()`  |\n| Cancel Conditional Order (Bulk)   | `cancel_conditional_order_bulk()`  |\n| Close Position                    | `close_position()` |\n\n### WebSocket\n\nTo see comprehensive examples of how to subscribe to the futures and spot websockets, check the [examples file](https://github.com/bybit-exchange/pybit/blob/master/examples/websocket_example.py).\n\n## Contact\nYou can reach out for support on the [BybitAPI Telegram](https://t.me/BybitAPI) group chat.\n\n## Contributors\n\nThanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/verata-veritatis\"><img src=\"https://avatars0.githubusercontent.com/u/9677388?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>verata-veritatis</b></sub></a><br /><a href=\"https://github.com/verata-veritatis/pybit/commits?author=verata-veritatis\" title=\"Code\">💻</a> <a href=\"https://github.com/verata-veritatis/pybit/commits?author=verata-veritatis\" title=\"Documentation\">📖</a></td>\n     <td align=\"center\"><a href=\"https://github.com/APF20\"><img src=\"https://avatars0.githubusercontent.com/u/74583612?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>APF20</b></sub></a><br /><a href=\"https://github.com/verata-veritatis/pybit/commits?author=APF20\" title=\"Code\">💻</a></td>\n     <td align=\"center\"><a href=\"https://github.com/cameronhh\"><img src=\"https://avatars0.githubusercontent.com/u/30434979?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Cameron Harder-Hutton</b></sub></a><br /><a href=\"https://github.com/verata-veritatis/pybit/commits?author=cameronhh\" title=\"Code\">💻</a></td>\n     <td align=\"center\"><a href=\"https://github.com/tomcru\"><img src=\"https://avatars0.githubusercontent.com/u/35841182?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Tom Rumpf</b></sub></a><br /><a href=\"https://github.com/verata-veritatis/pybit/commits?author=tomcru\" title=\"Code\">💻</a></td>\n     <td align=\"center\"><a href=\"https://github.com/tconley\"><img src=\"https://avatars1.githubusercontent.com/u/1893207?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Todd Conley</b></sub></a><br /><a href=\"https://github.com/tconley/pybit/commits?author=tconley\" title=\"Ideas\">🤔</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-enable -->\n<!-- prettier-ignore-end -->\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CryptoSenseiZA/pybit",
    "keywords": "bybit api connector",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pybitcs",
    "package_url": "https://pypi.org/project/pybitcs/",
    "platform": null,
    "project_url": "https://pypi.org/project/pybitcs/",
    "project_urls": {
      "Homepage": "https://github.com/CryptoSenseiZA/pybit"
    },
    "release_url": "https://pypi.org/project/pybitcs/2.2.2rc2/",
    "requires_dist": [
      "requests",
      "websocket-client",
      "websockets"
    ],
    "requires_python": ">=3.6",
    "summary": "Python3 Bybit HTTP/WebSocket API Connector",
    "version": "2.2.2rc2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14172013,
  "releases": {
    "2.2.2rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "818bf3bf781fcec61c543d6b3eacf59491b060409f27401811c815e08396dc0a",
          "md5": "7439e9b4b78110afd74e67c78885bfbf",
          "sha256": "fd8923674e53387f9743e4d62ff103660d6ab233ba0782d23ffbc5b146c00a5e"
        },
        "downloads": -1,
        "filename": "pybitcs-2.2.2rc2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7439e9b4b78110afd74e67c78885bfbf",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 47136,
        "upload_time": "2022-06-18T14:21:53",
        "upload_time_iso_8601": "2022-06-18T14:21:53.488483Z",
        "url": "https://files.pythonhosted.org/packages/81/8b/f3bf781fcec61c543d6b3eacf59491b060409f27401811c815e08396dc0a/pybitcs-2.2.2rc2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a12d62ab8601bcfa9e9447febcc9865574cb4da41e5ea977462611e0cf0a445a",
          "md5": "e6c8c800ec6d7a2ff8dacd98a58d1b04",
          "sha256": "30415f3288f9f635d293b5b7e4b1628c563a746c1fd4ffd0c4ad3135f8ef32f7"
        },
        "downloads": -1,
        "filename": "pybitcs-2.2.2rc2.tar.gz",
        "has_sig": false,
        "md5_digest": "e6c8c800ec6d7a2ff8dacd98a58d1b04",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 48914,
        "upload_time": "2022-06-18T14:21:56",
        "upload_time_iso_8601": "2022-06-18T14:21:56.151526Z",
        "url": "https://files.pythonhosted.org/packages/a1/2d/62ab8601bcfa9e9447febcc9865574cb4da41e5ea977462611e0cf0a445a/pybitcs-2.2.2rc2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "818bf3bf781fcec61c543d6b3eacf59491b060409f27401811c815e08396dc0a",
        "md5": "7439e9b4b78110afd74e67c78885bfbf",
        "sha256": "fd8923674e53387f9743e4d62ff103660d6ab233ba0782d23ffbc5b146c00a5e"
      },
      "downloads": -1,
      "filename": "pybitcs-2.2.2rc2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7439e9b4b78110afd74e67c78885bfbf",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 47136,
      "upload_time": "2022-06-18T14:21:53",
      "upload_time_iso_8601": "2022-06-18T14:21:53.488483Z",
      "url": "https://files.pythonhosted.org/packages/81/8b/f3bf781fcec61c543d6b3eacf59491b060409f27401811c815e08396dc0a/pybitcs-2.2.2rc2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a12d62ab8601bcfa9e9447febcc9865574cb4da41e5ea977462611e0cf0a445a",
        "md5": "e6c8c800ec6d7a2ff8dacd98a58d1b04",
        "sha256": "30415f3288f9f635d293b5b7e4b1628c563a746c1fd4ffd0c4ad3135f8ef32f7"
      },
      "downloads": -1,
      "filename": "pybitcs-2.2.2rc2.tar.gz",
      "has_sig": false,
      "md5_digest": "e6c8c800ec6d7a2ff8dacd98a58d1b04",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 48914,
      "upload_time": "2022-06-18T14:21:56",
      "upload_time_iso_8601": "2022-06-18T14:21:56.151526Z",
      "url": "https://files.pythonhosted.org/packages/a1/2d/62ab8601bcfa9e9447febcc9865574cb4da41e5ea977462611e0cf0a445a/pybitcs-2.2.2rc2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}