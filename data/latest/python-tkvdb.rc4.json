{
  "info": {
    "author": "Vladimir Gorbunov",
    "author_email": "vsg@suburban.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: ISC License (ISCL)",
      "Operating System :: OS Independent",
      "Programming Language :: C",
      "Programming Language :: Cython",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Database",
      "Topic :: Database :: Database Engines/Servers"
    ],
    "description": "# python-tkvdb\n\nPython-tkvdb is a Cython wrapper for\n[tkvdb](https://github.com/vmxdev/tkvdb) trie key-value\ndatabase. Python 3 is required.\n\nCode isn't well tested in production environments.\n\n## Installation\n\nThis is a typical python/cython package that uses setuptools build\nsystem.\n\n### From PyPi\n\nThe most simple way of installing is using `pip`:\n\n    pip install python-tkvdb\n\nConsidering that package is using Cython, C compiler may be required\nfor building if suitable wheel for current platform isn't found.\n\n### Downloading\n\nOriginal tkvdb sources are included as submodule, so when installing\nfrom git please use `git clone --recursive` for cloning, or init\nsubmodules after with `git submodule update --init\n--recursive`. Custom sources may also be provided in `tkvdb/`\nsubdirectory before build.\n\nSource archives that were made with `python setup.py sdist` contain\ngenerated C-code without `.pyx` files as Cython official documentation\nrecommends. Cython header files (`.pxd`) still provided though.\n\nPackage also can be distributed as python wheels. With wheels no\nadditional post-installation actions are required.\n\nInitialization and usage of virtualenv or alternatives aren't\nproperly described in this manual, so use them by you own discretion.\n\n### Building\n\nProject uses Cython to generate C extension for Python. To build\npackage, you need to have C compiler and build tools.\n\nFor installation from the source archive, Cython isn't required, but\ngit versions require it. Source directory also includes\n`pyproject.toml` (PEP 518), so if your build tool uses it, Cython\nwould be installed anyway.\n\nTo make common tasks easier, project contains simple Makefile that may\nbe used instad of pip/python commands. It isn't a requirement, so `pip\ninstall .` also works. For additional reference, look into\n[Makefile](Makefile).\n\nInstall example with virtualenv:\n\n    cd python-tkvdb/\n    python -m venv env\n    source ./env/bin/activate\n    make\n\nBoth Makefile and setup.py uses ``USE_CYTHON`` env variable (int, 0/1)\nto determine if Cython (cythonize) would be started before extension\nbuilding. Cython needs to be installed in local environment for\nthis. Default value is 1 for make.\n\nMakefile also has ``PYTHON`` env var that allows overriding python\ninterpreter path. Default value is just ``python``.\n\nExample usage:\n\n    USE_CYTHON=1 PYTHON=./env/bin/python make build\n\nMake commands:\n\n- `build` -- just build extension with `python setup.py build_ext`.\n- `install` -- run `pip install`. Extension would be built if needed.\n- no arguments (just `make`) -- alias for `install`.\n- `dist` -- create wheel and sdist archive.\n- `test` -- run unit tests\n- `clean` -- remove generated code, compiled objects and distribution\narchives.\n- `uninstall` -- remove previously installed package (through `pip`)\n\nAfter installing module `tkvdb` must be importable in the Python environment.\n\n## Usage\n\nOriginal `tkvdb` uses pretty specific terminology for some actions\n(like transaction), so it is recommended to first consult with\noriginal documentation anyway. Thread-safety notes and some caveats\nare also described in the original README file.\n\nPython-tkvdb provides pythonic-style wrapper for most parts of the original\nlibrary.\n\nMost object have destructors that call `free` internally and do memory\nmanagement on garbage collection, but don't forget that this is\nwrapper for C library.\n\nSome code examples may also be found in [tests code](tests/).\n\n### Modules\n\nProject is splitted into multiple python modules:\n\n- `ctkvdb` -- Cython wrapper with C definitions from `tkvdb.h`.\n- `tkvdb.db` -- database object and initialization. Also imported in\n  `__init__.py` (i.e. main `tkvdb` module).\n- `tkvdb.transaction` -- transaction (actually main input/output.\n  interface). Wrapper around ``tkvdb_tr``.\n- `tkvdb.cursor` -- transaction cursors for iteration. Wrapper around `tkvdb_cursor`.\n- `tkvdb.iterators` -- pythonic iterators for `tkvdb.cursor`.\n- `tkvdb.errors` -- all db-related exceptions that code may throw.\n- `tkvdb.params` -- database and transaction params. Wrapper around `tkvdb_params`.\n\n### Database initialization\n\nDatabase is wrapped into the `Tkvdb` object from `tkvdb` or `tkvdb.db`\nmodules. At this time only path to database file is\nsupported. Parameters (`tkvdb.params.Params`) optionally may be passed\nto constructor.\n\n```python\nfrom tkvdb import Tkvdb\n\ndb = Tkvdb(path_to_db_file)\n# some code\ndb.close()\n```\n\nContext manager (`with` statment) that includes auto closing is also\navailable:\n\n```python\nwith Tkvdb(path_to_db_file) as db:\n    # some code\n    with db.transaction() as tr:\n        # more code\n```\n\nAttributes (readonly):\n- `path: str` -- path to database file.\n- `is_opened: bool` -- shows that database is initialized properly.\n\nMethods (may raise exceptions):\n- `Tkvdb(path: str, params: tkvdb.params.Params = None)` (constructor)\n  -- create database instance.\n- `close()` -- close database.\n- `transaction(params: tkvdb.params.Params = None) ->\n  tkvdb.transaction.Transaction` -- create transaction.\n\nThere is also Cython method `get_db` that returns `tkvdb_db *`\npointer.\n\n### Transactions\n\nTransactions are basic way to do any operation with database. Consult\nwith original documentation about transaction term, because it doesn't\nmean same thing as in other database systems.\n\n**Input and ouput uses `bytes` type for everything**. Encode and\ndecode strings if needed.\n\nParameters (`tkvdb.params.Params`) optionally may be passed to\nconstructor.\n\nTransaction must be created from database instance (described in\nprevious part):\n\n```python\ntransaction = db.transaction()\ntransaction.begin()\ntransaction.put(b'key', b'value')\ntransaction.commit() # or transaction.rollback()\nprint(transaction.getvalue(b'key'))\ntransaction.free()\n```\n\nPythonic `with` statment also available:\n\n```python\nwith db.transaction() as tr:\n    tr.put(b'key', b'value')\n    tr.commit()\n    print(tr.getvalue(b'key'))\n```\n\nNote that `with` statement *does not do commit, but rollbacks on\nexception*. Do `commit` or `rollback` with your own code, or don't do\nanything (implies rollback-like behavior). Transaction is started\n(`begin`) automatically and will be freed (`free`) at exit from `with`\nblock though.\n\nTransaction also has Python dict-like interface:\n\n- `__getitem__` and `__setitem__`\n- `get(key, default=None)`\n- `keys()`, `values()` and `items()` iterators\n\n```python\nwith db.transaction() as tr:\n    tr[b'key'] = b'value'\n    print(tr.get(b'other-key', b'default')) # prints b'default'\n    tr.commit()\n    print(tr[b'key']) # prints b'value'\n\n    # Iterators\n    for key in tr: # or tr.keys()\n        print(key)\n    for key, value in tr.items():\n        print(key, value)\n    for value in tr.values():\n        print(value)\n```\n\nMultiple keys may be deleted by `delete` method using optional\n`prefix` argument (default `False`). Passing `True` allows deleting\nkeys starting from prefix. Dict-like `del` operator always deletes\nonly exact key.\n\nAttributes (readonly):\n- `is_initialized: bool` -- shows that transaction underlying\n  structures are initialized properly.\n- `is_started: bool` -- shows that `begin()` method was called.\n- `is_changed: bool` -- shows that transaction had any uncommited\n  changes (i.e. `put()` was used).\n- `ram_only: bool` -- indicates that transaction is RAM-only.\n\nTransaction methods. Most of them may raise an exception:\n\n- `Transaction(ram_only=True, params: tkvdb.params.Params = None)`\n  (constructor) -- create transaction instance. Must be called\n  manually only for RAM-only usage, otherwise `db.transaction()` must\n  be used instead.\n- `begin()` -- starts transaction, calls underlying `tkvdb_tr->begin()`.\n- `getvalue(key: bytes) -> bytes` -- get value by key.\n- `put(key: bytes)` -- insert value into db by key.\n- `get(key: bytes, default: bytes = None) -> bytes` -- dict-like get with\n  default value.\n- `delete(key: bytes, prefix=False)` -- delete value by key. With\n  `prefix=True` all keys staring with `key` will be deleted.\n- `__getitem__`, `__setitem__`, `__delitem__` -- dict-like methods.\n- `__contains__` -- allows usage of `in` operator.\n- `free()` -- free transaction (called in `with` statement\n  automatically).\n- `keys()`, `values()`, `items()` -- return dict-like iterators.\n- `cursor(seek_key=None, seek_type=Seek.EQ)` -- return transaction\n  cursor (see `Cursors`), with optional seek.\n\n\n#### RAM-only transactions\n\nTransactions also may be used in RAM-only mode. These transactions don't\nrequire database file and use less memory. They are cleared on\n`commit()` or `rollback()`. See more about RAM-only transactions in\noriginal documentation.\n\nUse `tkvdb.Transaction()` constructor to create RAM-only transaction\nwithout database. This transaction may also be used with `with`\nstatement, same auto-begin rules apply. Example:\n\n```python\nwith Transaction() as tr:\n    tr[b'key'] = b'value'\n    print(tr[b'key'])  # prints b'value'\n    tr.commit()  # clears transaction\n```\n\n### Iterators\n\nTransaction can be traversed using iterators. It is also the main way\nfor iterating through database contents.\n\nModule `tkvdb.iterators` provides three dict-like iterators that use\n`tkvdb.cursor.Cursor` inside:\n\n- `tkvdb.iterators.KeysIterator` -- iterating over keys.\n- `tkvdb.iterators.ValuesIterator` -- iterating over values.\n- `tkvdb.iterators.ItemsIterator` -- iterating over key-value pair.\n\nThey can be used with transaction:\n\n```python\nwith db.transaction() as tr:\n    for key in tr:  # or tr.keys()\n        print(tr[key])\n    for value in tr.values():\n        print(value)\n    for key, value in tr.items():\n        print(key, value)\n```\n\nIn all loops new instance of `Cursor` is used.\n\nThey also can be used with cursor:\n\n```python\nwith db.transaction() as tr:\n    with tr.cursor() as c:\n        for key in c:\n            print(c.key(), c.keysize())\n```\n\nNotice that cursor iterators use same underlying `Cursor` object, so\nthey would iterate from same place where cursor stopped before:\n\n```python\nwith db.transaction() as tr:\n    with tr.cursor() as c:\n        c.first()\n        # do some iteration with c.next()\n        for key in c:\n            print(key)  # it wouldn't be first key\n            if something:\n                break\n        for value in c.values():  # starts from last iterated key\n            print(value)\n```\n\nReverse iteration is available through the standard `reversed`\nfunction. Iterators and transaction have required methods for this.\nFor new cursors iteration will start from the end using\n`tkvdb.cursor.Cursor.last`.\n\n```python\nwith db.transaction() as tr:\n    for key in reversed(tr):\n        print(key)\n    # All iterator types allow this\n    for key, value in reversed(tr.items()):\n        print(key, value)\n\nwith db.transaction() as tr:\n    with tr.cursor() as c:\n        for key in reversed(c):\n            print(key)\n    with tr.cursor() as c:\n        for value in reversed(c.values()):\n            print(value)\n```\n\nCursors created from transacton can used for searching (as shorthand\nfor `tkvdb.cursor.Cursor.seek()`). More information in next section.\n\n```python\nwith db.transaction() as tr:\n    with tr.cursor(seek_key=b'seek-tr-31', seek_type=Seek.GE) as c:\n        print(c.key())\n```\n\n### Cursors\n\nCursors are used to iterate through database contents. They are\ndefined in `tkvdb.cursor` module, C implementation is wrapped in\n`tkvdb.cursor.Cursor` class.\n\nCursors are attached to transaction and created by\n`Transacion.cursor()` method. They also may be created directly.\n\nAlthough cursors are sole way to iterate and seek in tkvdb, it is\nbetter and easier to use python-style iterators for\nsuch purposes.\n\nExample usage:\n\n```python\nwith db.transaction() as tr:\n    with tr.cursor() as c:\n        c.first()\n        while True:\n            print(c.key(), c.value())\n            try:\n                c.next()\n            except tkvdb.errors.NotFoundError:\n                break\n```\n\nCursor also may be used without `with` statement, it would be freed\nanyway on garbage collection:\n\n```python\nwith db.transaction() as tr:\n    c = tr.cursor():\n    c.first()\n    # ...\n```\n\nNotice: `first` and `next` methods throw `tkvdb.errors.EmptyError` on\nempty database, not `NotFoundError`. Cursors may be iterated by using\niterators (see previous section).\n\nCursor also may be iterated in reverse order using `prev()`\nmethod. Another method called `last()` moves cursor to last record and\noften useful for the reverse iteration.\n\nCursor can be used for search with `seek()` method. This allows\nsearching k-v pair by prefix using seek criteria. Criterias are\ndefined in `tkvdb.cursor.Seek` enum:\n\n- `Seek.EQ` -- search for the exact key match.\n- `Seek.LE` -- search for less (in terms of memcmp()) or equal key.\n- `Seek.GE` -- search for greater (in terms of memcmp()) or equal key.\n\nSeeking is also may be initiated using `Transaction.cursor()` method\n(see more in `Transactions` section).\n\n```python\nfrom tkvdb.cursor import Seek\n\nwith db.transaction() as tr:\n    with tr.cursor() as c:\n        c.seek(b'key', Seek.EQ)\n        key = c.key()\n        # ...\n        c.next()\n\n    with tr.cursor(seek_key=b'key') as c:\n        # ...\n```\n\nAttributes (readonly):\n- `is_initialized: bool` -- shows that cursor underlying\n  structures are initialized properly.\n- `is_started: bool` -- shows that `first()` method was called.\n\nCursor methods.\n\n- `first()` -- move cursor to first item in database.\n- `last()` -- move cursor to last item in database.\n- `next()` -- move cursor to next item in database.\n- `prev()` -- move cursor to previous item in database.\n- `key() -> bytes` -- get current key.\n- `val() -> bytes` -- get current value.\n- `keysize() -> int` -- get current key size.\n- `valsize() -> int` -- get current value size.\n- `free()` -- free cursor.\n- `__iter__()` -- returns `tkvdb.iterators.KeysIterator`.\n- `seek(key: bytes, seek: tkvdb.cursor.Seek)` -- search key by\n  criteria.\n- `keys()`, `values()`, `items()` -- return dict-like iterators.\n\n### Params\n\nParams are used to specify different options for database and/or\ntransactions. They are defined in `tkvdb.params` module: the C\nimplementation (`tkvdb_params` struct) is wrapped by\n`tkvdb.params.Params` class, and param values are wrapped by the\n`tkvdb.params.Param` enum.\n\nParameter names transfomed using CamelCase, example: \n\n```\nTKVDB_PARAM_TR_DYNALLOC => TrDynalloc\nTKVDB_PARAM_CURSOR_STACK_DYNALLOC => CursorStackDynalloc\n```\n\nAvailable parameters in `tkvdb.params.Param` enum:\n\n- `TrDynalloc` -- `TKVDB_PARAM_TR_DYNALLOC`\n- `TrLimit` -- `TKVDB_PARAM_TR_LIMIT`\n- `Alignval` -- `TKVDB_PARAM_ALIGNVAL`\n- `Autobegin` -- `TKVDB_PARAM_AUTOBEGIN`\n- `CursorStackDynalloc` -- `TKVDB_PARAM_CURSOR_STACK_DYNALLOC`\n- `CursorStackLimit` -- `TKVDB_PARAM_CURSOR_STACK_LIMIT`\n- `CursorKeyDynalloc` -- `TKVDB_PARAM_CURSOR_KEY_DYNALLOC`\n- `CursorKeyLimit` -- `TKVDB_PARAM_CURSOR_KEY_LIMIT`\n- `DbfileOpenFlags` -- `TKVDB_PARAM_DBFILE_OPEN_FLAGS`\n\nConsult with original `tkvdb` documentation for params meaning and\npossible values.\n\nParams usage:\n\n```python\nfrom tkvdb.params import Params, Param\n\n# Passing params to database\nparams = Params({Param.Autobegin: 1})  # set params at init\nwith Tkvdb(path, params) as db:\n    # Params also will be passed to db transactions\n    with db.transaction() as tr:\n        # ...\n    # Transaction may use own params\n    params = Params()\n    params.set(Param.TrLimit, 100)\n    with db.transaction(params) as tr:\n        # ...\n\n# Setting params after init\nparams = Params()\nparams.set(Param.Autobegin, 1)\ntr = Transaction(params=params)  # RAM-only transaction\n```\n\nAs in original `tkvdb` code, params from database are passed to\ndb-bound transaction, if they aren't overrided directly by passing\nanother `Params` instance to transaction.\n\nPython implementation also stores all set params and stores them in\ninternal `values` dict. Notice that it tracks only params that were\nset directly, so default values aren't known to `Params` wrapper.\n\nParams attributes:\n- `is_initialized: bool` -- shows that params underlying structures\n  are initialized properly.\n\nParams methods:\n- `Params(params=None)` (constructor) -- create params\n  instance. Argument `params` may be dict with param names and values.\n- `get_values()` -- return all set params.\n- `get(param: tkvdb.params.Param)` -- return single param value.\n- `set(param: tkvdb.params.Param, value: int)` -- set param value.\n- `free()` -- free params object.\n\nThere is also Cython method `get_params` that returns `tkvdb_params *`\npointer.\n\n### Errors\n\nError classes are defined in `tkvdb.errors` module. Every non-ok\nreturn value from the underlying C code is converted to python\nException. Only `TKVDB_RES.TKVDB_OK` considered as success.\n\nConsult with original documentation for error codes meaning.\n\nOne exception from this rule is\n`tkvdb.transaction.Transaction.__getitem__()` (dict-like access) that\nraises `KeyError` for python compatibility.\n\nExamples:\n\n```python\nfrom tkvdb.errors import EmptyError, NotFoundError, NotStartedError\n\n# ...\ntr = db.transaction()\ntry:\n    print(tr.getvalue(b'key'))\nexcept (NotFoundError, EmptyError):\n    print('key not found')\nexcept NotStartedError:\n    print('transaction not started')\n\nwith db.transaction() as tr:\n    try:\n        print(tr[b'key'])\n    except KeyError:\n        print('key not found')\n```\n\nNote that tkvdb raises `EmptyError` (`TKVDB_RES.TKVDB_EMPTY` return\ncode), not `NotFoundError` when key is not found in empty database,\n\nErrors:\n\n- `Error` -- base class for all tkvdb-related errors.\n- `IoError` -- `TKVDB_RES.TKVDB_IO_ERROR` code.\n- `LockedError` -- `TKVDB_RES.TKVDB_LOCKED` code.\n- `EmptyError` -- `TKVDB_RES.TKVDB_EMPTY` code.\n- `NotFoundError` -- `TKVDB_RES.TKVDB_NOT_FOUND` code.\n- `EnomemError` -- `TKVDB_RES.TKVDB_ENOMEM` code.\n- `CorruptedError` -- `TKVDB_RES.TKVDB_CORRUPTED` code.\n- `NotStartedError` -- `TKVDB_RES.TKVDB_NOT_STARTED` code.\n- `ModifiedError` -- `TKVDB_RES.TKVDB_MODIFIED` code.\n\n\n## License\n\nPython-tkvdb is licensed under ISC license as original tkvdb project.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vladimir-g/python-tkvdb/",
    "keywords": "",
    "license": "ISC",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-tkvdb",
    "package_url": "https://pypi.org/project/python-tkvdb/",
    "platform": "",
    "project_url": "https://pypi.org/project/python-tkvdb/",
    "project_urls": {
      "Homepage": "https://github.com/vladimir-g/python-tkvdb/"
    },
    "release_url": "https://pypi.org/project/python-tkvdb/0.2.2/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Cython wrapper for tkvdb radix trie key-value database",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10530606,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23b8571502359287f8c92729f4cb28eae173db56ce544d275af1365ca3eff60c",
          "md5": "ec774232092bb9ec97ff91ed390ad024",
          "sha256": "f620a0d11262984d92bf9665dd3f425a8b8c5614207548bbe283cc8bafdf01cb"
        },
        "downloads": -1,
        "filename": "python-tkvdb-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ec774232092bb9ec97ff91ed390ad024",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 250956,
        "upload_time": "2021-04-13T22:36:04",
        "upload_time_iso_8601": "2021-04-13T22:36:04.617332Z",
        "url": "https://files.pythonhosted.org/packages/23/b8/571502359287f8c92729f4cb28eae173db56ce544d275af1365ca3eff60c/python-tkvdb-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "acd1da6b99e3094b29ebe11dd459700905a6277d0184cafd69d545be2294fee6",
          "md5": "38b19fcc38573303c52f814a9ff55d64",
          "sha256": "38b058573cea461a6931a5d798fd0f0a8ef715c05a88dc1a475af2bc54cdc68a"
        },
        "downloads": -1,
        "filename": "python_tkvdb-0.2.0-cp35-cp35m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "38b19fcc38573303c52f814a9ff55d64",
        "packagetype": "bdist_wheel",
        "python_version": "cp35",
        "requires_python": ">=3.5",
        "size": 1333067,
        "upload_time": "2021-05-28T22:48:32",
        "upload_time_iso_8601": "2021-05-28T22:48:32.206495Z",
        "url": "https://files.pythonhosted.org/packages/ac/d1/da6b99e3094b29ebe11dd459700905a6277d0184cafd69d545be2294fee6/python_tkvdb-0.2.0-cp35-cp35m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ec2ab00e4ce5602b832db3536c91a6d202298f87f1dfe66a16fe1e9cea10fa3",
          "md5": "651f1f898f36aa7b8bd9474cd5c96d80",
          "sha256": "4e9c1d15b29a602620d5036dcf0589b1fd6ef842a94707b9090130668d6495b9"
        },
        "downloads": -1,
        "filename": "python_tkvdb-0.2.0-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "651f1f898f36aa7b8bd9474cd5c96d80",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.5",
        "size": 1354849,
        "upload_time": "2021-05-28T22:48:34",
        "upload_time_iso_8601": "2021-05-28T22:48:34.034890Z",
        "url": "https://files.pythonhosted.org/packages/0e/c2/ab00e4ce5602b832db3536c91a6d202298f87f1dfe66a16fe1e9cea10fa3/python_tkvdb-0.2.0-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3756b487d785e85d1f6489ca96bc340c43962f6271dff588a22bec6c77dbf17",
          "md5": "8621cdc90994f6e29d51cfe24a62b156",
          "sha256": "488d437d53e1c429b645f2e19ecde9ea1a5479969f43028249ce1e0371070b90"
        },
        "downloads": -1,
        "filename": "python_tkvdb-0.2.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "8621cdc90994f6e29d51cfe24a62b156",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.5",
        "size": 1354958,
        "upload_time": "2021-05-28T22:48:35",
        "upload_time_iso_8601": "2021-05-28T22:48:35.898940Z",
        "url": "https://files.pythonhosted.org/packages/b3/75/6b487d785e85d1f6489ca96bc340c43962f6271dff588a22bec6c77dbf17/python_tkvdb-0.2.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ebecdaab9e427811ef20f98afe65e8d964f12a92f92bdf0d2016d0b40bdf6be6",
          "md5": "8b5381cfb12ca95d7514bd50b1ab24ff",
          "sha256": "49d9ef8a8678334192e1c030e4c9c9155e935b222aca2a6572fb1470c13607c7"
        },
        "downloads": -1,
        "filename": "python_tkvdb-0.2.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "8b5381cfb12ca95d7514bd50b1ab24ff",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.5",
        "size": 1403065,
        "upload_time": "2021-05-28T22:48:37",
        "upload_time_iso_8601": "2021-05-28T22:48:37.566426Z",
        "url": "https://files.pythonhosted.org/packages/eb/ec/daab9e427811ef20f98afe65e8d964f12a92f92bdf0d2016d0b40bdf6be6/python_tkvdb-0.2.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf6f691a8326fc40030c3cdaddbfd17ae1a064252b827982520303fa35292475",
          "md5": "09b382f0f5ee01f7322f9ffcdb5201a8",
          "sha256": "e7089253a2f96b79670633d36f0a85a32a2b5f471362c97acb7bdaa82c728872"
        },
        "downloads": -1,
        "filename": "python-tkvdb-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "09b382f0f5ee01f7322f9ffcdb5201a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 299418,
        "upload_time": "2021-05-28T22:48:39",
        "upload_time_iso_8601": "2021-05-28T22:48:39.170455Z",
        "url": "https://files.pythonhosted.org/packages/bf/6f/691a8326fc40030c3cdaddbfd17ae1a064252b827982520303fa35292475/python-tkvdb-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffb9ce45e2c70dfef4c43aee0e9051229d2aa3e1cfc6246e2c196624dbf2484d",
          "md5": "f3b1728d43cfaedc0c3615863a416a54",
          "sha256": "f683e8f313e79e3d0203574cbd0e047b792fd94eacfd9d38dfb3d746582d157d"
        },
        "downloads": -1,
        "filename": "python_tkvdb-0.2.1-cp35-cp35m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "f3b1728d43cfaedc0c3615863a416a54",
        "packagetype": "bdist_wheel",
        "python_version": "cp35",
        "requires_python": ">=3.5",
        "size": 1330529,
        "upload_time": "2021-05-30T20:23:46",
        "upload_time_iso_8601": "2021-05-30T20:23:46.565588Z",
        "url": "https://files.pythonhosted.org/packages/ff/b9/ce45e2c70dfef4c43aee0e9051229d2aa3e1cfc6246e2c196624dbf2484d/python_tkvdb-0.2.1-cp35-cp35m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d9147291732e03a779f130dfff5c968b79337521449b7920e046512e6330507",
          "md5": "7a0c4540da1f75afda5b7149ae565013",
          "sha256": "aceebc990f4c0ed8e04273ef8c0bca2d60f91d9eb4adee9b7165162f44e8b4c8"
        },
        "downloads": -1,
        "filename": "python_tkvdb-0.2.1-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "7a0c4540da1f75afda5b7149ae565013",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.5",
        "size": 1353548,
        "upload_time": "2021-05-30T20:23:48",
        "upload_time_iso_8601": "2021-05-30T20:23:48.951388Z",
        "url": "https://files.pythonhosted.org/packages/3d/91/47291732e03a779f130dfff5c968b79337521449b7920e046512e6330507/python_tkvdb-0.2.1-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69c593f77921089397374247b5cbfd51e194db1e83f7870ed84e360956d3437f",
          "md5": "85980e13cb8f3e4f7b16e73665d977de",
          "sha256": "b3bf5b6e26a185aa2451ea00679437d5eac53defc2f55ffb4f2130eecac080df"
        },
        "downloads": -1,
        "filename": "python_tkvdb-0.2.1-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "85980e13cb8f3e4f7b16e73665d977de",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.5",
        "size": 1352469,
        "upload_time": "2021-05-30T20:23:51",
        "upload_time_iso_8601": "2021-05-30T20:23:51.663918Z",
        "url": "https://files.pythonhosted.org/packages/69/c5/93f77921089397374247b5cbfd51e194db1e83f7870ed84e360956d3437f/python_tkvdb-0.2.1-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcba8239599b69a9647852acd3f9cd52318711329a7721703ba1431bd9605875",
          "md5": "8a6c0e788db16cee5dfc8c091d2c0b4e",
          "sha256": "ed2b980c421890748fe6f965a72aace26031bec24a1d606bcbb875638ab6754a"
        },
        "downloads": -1,
        "filename": "python_tkvdb-0.2.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "8a6c0e788db16cee5dfc8c091d2c0b4e",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.5",
        "size": 1400440,
        "upload_time": "2021-05-30T20:23:53",
        "upload_time_iso_8601": "2021-05-30T20:23:53.374946Z",
        "url": "https://files.pythonhosted.org/packages/dc/ba/8239599b69a9647852acd3f9cd52318711329a7721703ba1431bd9605875/python_tkvdb-0.2.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "850c50ea96dac12c85009375f9e4049b9834cd067dfdd3fcb3d5b974952a55d2",
          "md5": "27499a67c599eb6a7eedc7908227f985",
          "sha256": "5d4cdc1445dcda19716bfc1defda2efb8fd8e703e5bba799b7146139155bf955"
        },
        "downloads": -1,
        "filename": "python-tkvdb-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "27499a67c599eb6a7eedc7908227f985",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 301273,
        "upload_time": "2021-05-30T20:23:54",
        "upload_time_iso_8601": "2021-05-30T20:23:54.889426Z",
        "url": "https://files.pythonhosted.org/packages/85/0c/50ea96dac12c85009375f9e4049b9834cd067dfdd3fcb3d5b974952a55d2/python-tkvdb-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0390a39224a257287f6e910968697ece676f576655622409d87b6c0f31352ba",
          "md5": "7e3d1f6f6b83c217cb98d83e984469d9",
          "sha256": "5b512ef64d326112c271f1fdb6ca5f959d88a602c7d485f6f314c75435864e07"
        },
        "downloads": -1,
        "filename": "python_tkvdb-0.2.2-cp35-cp35m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "7e3d1f6f6b83c217cb98d83e984469d9",
        "packagetype": "bdist_wheel",
        "python_version": "cp35",
        "requires_python": ">=3.5",
        "size": 1330553,
        "upload_time": "2021-06-01T19:30:03",
        "upload_time_iso_8601": "2021-06-01T19:30:03.850322Z",
        "url": "https://files.pythonhosted.org/packages/d0/39/0a39224a257287f6e910968697ece676f576655622409d87b6c0f31352ba/python_tkvdb-0.2.2-cp35-cp35m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62115be7fe9035b5ac0c09b1e41b91b11cf610e1a4addf410db467d7c6df941e",
          "md5": "083109d1cf84265c848354e5841426ac",
          "sha256": "0f7a735f26c33fc9225b931e0a7523d7a4937e0fb75083e5f34341479f3807be"
        },
        "downloads": -1,
        "filename": "python_tkvdb-0.2.2-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "083109d1cf84265c848354e5841426ac",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.5",
        "size": 1353547,
        "upload_time": "2021-06-01T19:30:05",
        "upload_time_iso_8601": "2021-06-01T19:30:05.842782Z",
        "url": "https://files.pythonhosted.org/packages/62/11/5be7fe9035b5ac0c09b1e41b91b11cf610e1a4addf410db467d7c6df941e/python_tkvdb-0.2.2-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21914a4921bfd703d1d82c42172f0925fe37ee636adafc76ed9d667a1c3b440a",
          "md5": "01651d5de8c8ca25da525ff1a1d55618",
          "sha256": "5ed06c59f64339fa076fb51a634bd586843a2a0476b7e6a92b333edd2bb6274f"
        },
        "downloads": -1,
        "filename": "python_tkvdb-0.2.2-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "01651d5de8c8ca25da525ff1a1d55618",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.5",
        "size": 1352485,
        "upload_time": "2021-06-01T19:30:07",
        "upload_time_iso_8601": "2021-06-01T19:30:07.670403Z",
        "url": "https://files.pythonhosted.org/packages/21/91/4a4921bfd703d1d82c42172f0925fe37ee636adafc76ed9d667a1c3b440a/python_tkvdb-0.2.2-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb55629650f40d4fd21bf35585f59ecf7cde7ca16dee0b85fceea6da9f9216b2",
          "md5": "1535b775206cf2e6a7bd8c94d3dcfcd7",
          "sha256": "20e6a29647d4aa63373ad2d3e793ec435c0637118a8979253ca2c48871874352"
        },
        "downloads": -1,
        "filename": "python_tkvdb-0.2.2-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "1535b775206cf2e6a7bd8c94d3dcfcd7",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.5",
        "size": 1400469,
        "upload_time": "2021-06-01T19:30:09",
        "upload_time_iso_8601": "2021-06-01T19:30:09.768233Z",
        "url": "https://files.pythonhosted.org/packages/eb/55/629650f40d4fd21bf35585f59ecf7cde7ca16dee0b85fceea6da9f9216b2/python_tkvdb-0.2.2-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8595a1ee458d1daf9e3f6e3d4bbae06b1c8e8320a268d03c8b4790a955d198f5",
          "md5": "26e35119f75fa7f7ee3e77a59d067f5b",
          "sha256": "2c8b616451854f43ed0954b901089a9bf042d71d9ea7030b51d831862f487b90"
        },
        "downloads": -1,
        "filename": "python-tkvdb-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "26e35119f75fa7f7ee3e77a59d067f5b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 310429,
        "upload_time": "2021-06-01T19:30:11",
        "upload_time_iso_8601": "2021-06-01T19:30:11.326800Z",
        "url": "https://files.pythonhosted.org/packages/85/95/a1ee458d1daf9e3f6e3d4bbae06b1c8e8320a268d03c8b4790a955d198f5/python-tkvdb-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d0390a39224a257287f6e910968697ece676f576655622409d87b6c0f31352ba",
        "md5": "7e3d1f6f6b83c217cb98d83e984469d9",
        "sha256": "5b512ef64d326112c271f1fdb6ca5f959d88a602c7d485f6f314c75435864e07"
      },
      "downloads": -1,
      "filename": "python_tkvdb-0.2.2-cp35-cp35m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "7e3d1f6f6b83c217cb98d83e984469d9",
      "packagetype": "bdist_wheel",
      "python_version": "cp35",
      "requires_python": ">=3.5",
      "size": 1330553,
      "upload_time": "2021-06-01T19:30:03",
      "upload_time_iso_8601": "2021-06-01T19:30:03.850322Z",
      "url": "https://files.pythonhosted.org/packages/d0/39/0a39224a257287f6e910968697ece676f576655622409d87b6c0f31352ba/python_tkvdb-0.2.2-cp35-cp35m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "62115be7fe9035b5ac0c09b1e41b91b11cf610e1a4addf410db467d7c6df941e",
        "md5": "083109d1cf84265c848354e5841426ac",
        "sha256": "0f7a735f26c33fc9225b931e0a7523d7a4937e0fb75083e5f34341479f3807be"
      },
      "downloads": -1,
      "filename": "python_tkvdb-0.2.2-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "083109d1cf84265c848354e5841426ac",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.5",
      "size": 1353547,
      "upload_time": "2021-06-01T19:30:05",
      "upload_time_iso_8601": "2021-06-01T19:30:05.842782Z",
      "url": "https://files.pythonhosted.org/packages/62/11/5be7fe9035b5ac0c09b1e41b91b11cf610e1a4addf410db467d7c6df941e/python_tkvdb-0.2.2-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "21914a4921bfd703d1d82c42172f0925fe37ee636adafc76ed9d667a1c3b440a",
        "md5": "01651d5de8c8ca25da525ff1a1d55618",
        "sha256": "5ed06c59f64339fa076fb51a634bd586843a2a0476b7e6a92b333edd2bb6274f"
      },
      "downloads": -1,
      "filename": "python_tkvdb-0.2.2-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "01651d5de8c8ca25da525ff1a1d55618",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.5",
      "size": 1352485,
      "upload_time": "2021-06-01T19:30:07",
      "upload_time_iso_8601": "2021-06-01T19:30:07.670403Z",
      "url": "https://files.pythonhosted.org/packages/21/91/4a4921bfd703d1d82c42172f0925fe37ee636adafc76ed9d667a1c3b440a/python_tkvdb-0.2.2-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eb55629650f40d4fd21bf35585f59ecf7cde7ca16dee0b85fceea6da9f9216b2",
        "md5": "1535b775206cf2e6a7bd8c94d3dcfcd7",
        "sha256": "20e6a29647d4aa63373ad2d3e793ec435c0637118a8979253ca2c48871874352"
      },
      "downloads": -1,
      "filename": "python_tkvdb-0.2.2-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "1535b775206cf2e6a7bd8c94d3dcfcd7",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.5",
      "size": 1400469,
      "upload_time": "2021-06-01T19:30:09",
      "upload_time_iso_8601": "2021-06-01T19:30:09.768233Z",
      "url": "https://files.pythonhosted.org/packages/eb/55/629650f40d4fd21bf35585f59ecf7cde7ca16dee0b85fceea6da9f9216b2/python_tkvdb-0.2.2-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8595a1ee458d1daf9e3f6e3d4bbae06b1c8e8320a268d03c8b4790a955d198f5",
        "md5": "26e35119f75fa7f7ee3e77a59d067f5b",
        "sha256": "2c8b616451854f43ed0954b901089a9bf042d71d9ea7030b51d831862f487b90"
      },
      "downloads": -1,
      "filename": "python-tkvdb-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "26e35119f75fa7f7ee3e77a59d067f5b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 310429,
      "upload_time": "2021-06-01T19:30:11",
      "upload_time_iso_8601": "2021-06-01T19:30:11.326800Z",
      "url": "https://files.pythonhosted.org/packages/85/95/a1ee458d1daf9e3f6e3d4bbae06b1c8e8320a268d03c8b4790a955d198f5/python-tkvdb-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}