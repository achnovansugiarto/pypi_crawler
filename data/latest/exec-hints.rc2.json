{
  "info": {
    "author": "LiquidPulsar",
    "author_email": null,
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# exec_hints\nPretty comprehensive typehint evaluator to give you code that extra bit of zazz and illegibility it always needed\n\n\nFor all examples, here's the obvious prerequisite\n```py\nfrom exec_hints import _UnionType, exec_hints, Literal\n```\nAlternatively, you can just `import exec_hints` and use the module as a callable!\n\n\nLet's start off small: you can specify a hint on an argument and it'll convert it\n```py\n@exec_hints\ndef foo(arg:int):\n    print(arg*arg)\n\nfoo('12')\n>>> 144\n```\n\n```py\n@exec_hints\ndef foo(arg:set):\n    print(arg, arg.issubset('123'))\n\nfoo('12')\n>>> {'2', '1'} True\n```\n\n```py\n@exec_hints\ndef foo(arg:set[int]):\n    print(arg, arg.issubset(range(10)))\n\nfoo('12')\n>>> {1, 2} True\n```\nA single argument to dict will modify all values, 2 arguments means the first applies to keys, 2nd to values\n```py\n@exec_hints\ndef foo(arg:dict[int]):\n    print(arg, arg.keys())\n\nfoo({'a':'123',12:13.2})\n>>> {'a': 123, 12: 13} dict_keys(['a', 12])\n```\nWorks with Unions (more on that later)\n```py\n@exec_hints\ndef foo(arg:set[int|str]):\n    print(arg, arg.issubset(range(10)))\n\nfoo('1a2')\n>>> {1, 'a', 2} False\n```\nIf an iterable hint is provided with a number of arguments matching what was passed, each subhint will be applied to corresponding arguments\n```py\n@exec_hints\ndef foo(arg:list[int,str,int]):\n    print(arg, arg[::-1])\n\nfoo('1a2')\n>>> [1, 'a', 2] [2, 'a', 1]\n```\n...and of course, we can nest these ðŸ˜Ž\n```py\n@exec_hints\ndef foo(arg:list[int,int|str,tuple[int|float|str]]):\n    print(arg)\n\nfoo(('1','a',['1','2.67','b']))\n>>> [1, 'a', (1, 2.67, 'b')]\n```\nIf several options are given, it tries each in turn\n```py\n@exec_hints\ndef foo(arg:list[int,int|str]|tuple[int|float|str]):\n    print(arg)\n\n#first fails because there are 2 subhints and 3 args provided\nfoo(['1','2.67','b'])\n>>> (1, 2.67, 'b')\n#first works!\nfoo(['1','2.67'])\n>>> [1, '2.67']\n```\nYou can pass your own functions in here, but they cant directly be used with |\nBlame Python, not me.\n```py\n@exec_hints\ndef foo(arg:lambda x: x[::2]):\n    print(arg)\n\nfoo('banana')\n>>> bnn\n```\nThere's a workaround for that tho!\n`list|1` isnt supported by Python, so we have a class for that: `Literal`\nAccepts a callable or a literal (ok the class name isnt the best, accepting any suggestions)\nIf it's callable, will try call on the arg, otherwise will just return itself\n```py\n@exec_hints\ndef foo(arg:int|Literal(0)):\n    print(arg)\n\nfoo('banana')\n>>> 0\n```\nWe can use it to chain builtins that wouldnt normally be allowed.\nAlso note you can use it with `[]` syntax too\n```py\n@exec_hints\ndef foo(arg:int|Literal[str.upper]):\n    print(arg)\n\nfoo('banana')\n>>> BANANA\n```\nThis documentation would have to be a few miles long to cover all of this\nSo here's a few examples:\n```py\n@exec_hints\ndef foo(message:int|tuple[int]|list[0], dct:dict[int,tuple[str.lower]]):\n    print(message)\n    print(dct)\n\nfoo('a1',{'213':'BaNaNa','444':'BoBa'})\n>>> [0, 0]\n>>> {213: ('b', 'a', 'n', 'a', 'n', 'a'), 444: ('b', 'o', 'b', 'a')}\n```\nUhh, it works on a lot of stuff :)\nNotably you can manipulate `*args` and `**kwargs` as normal.\nWorks with defaults too, but it will try to apply the hint to the default provided\n```py\n@exec_hints\ndef a(a,b:str.upper,c:tuple[int],d=12,*e:lambda x:map(str,x),f:int|Literal(-3)=3,**g:dict[str]):\n    print(a,b,c,d,e,f,g)\n\na(1,'bb',['2','3'],4,5,banana=1,apple=2)\n>>> 1 BB (2, 3) 4 ('5',) 3 {'banana': '1', 'apple': '2'}\n```\nYou can typehint return values too ðŸŽ‰\n```py\n@exec_hints\ndef foo(arg:int|Literal(str.upper)) -> lambda x:tuple(reversed(x)):\n    print(arg)\n    return arg\n\nprint(foo('banana'))\n>>> BANANA\n>>> ('A', 'N', 'A', 'N', 'A', 'B')\n```\n\nWorks with classes, including dataclasses\n```py\nimport exec_hints\nfrom dataclasses import dataclass\n\n@exec_hints\n@dataclass\nclass Bot:\n    alignment: bool\n    serial: int\n    name: str\n\n\nprint(Bot(123123, '12', 2))\n>>> Bot(alignment=True, serial=12, name='2')\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "exec_hints",
    "package_url": "https://pypi.org/project/exec_hints/",
    "platform": null,
    "project_url": "https://pypi.org/project/exec_hints/",
    "project_urls": {
      "Home": "https://github.com/LiquidPulsar/exec_hints"
    },
    "release_url": "https://pypi.org/project/exec_hints/0.1.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Pretty comprehensive typehint evaluator, gives your Python functions that extra bit of zazz and illegibility they always needed.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13976856,
  "releases": {
    "0.1.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "d69630aef5c1e433e234962445da319671c13c2e4a6bf248214781f1f92f2ded",
          "md5": "e62e375aa7b6931525bbb145fb182d85",
          "sha256": "773a0006e5a31bbcd04e6d3c0ea502775101dbf7665a13f9184fb7bfa41657d1"
        },
        "downloads": -1,
        "filename": "exec_hints-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e62e375aa7b6931525bbb145fb182d85",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 4424,
        "upload_time": "2022-03-14T18:49:40",
        "upload_time_iso_8601": "2022-03-14T18:49:40.466094Z",
        "url": "https://files.pythonhosted.org/packages/d6/96/30aef5c1e433e234962445da319671c13c2e4a6bf248214781f1f92f2ded/exec_hints-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "986a4e32958a2b986c6c92e4a8b224a4a2cd5390cd2a3a365d778c045e8413e4",
          "md5": "cecd3c20c787f9267b28c9a59e13399e",
          "sha256": "55755cae584b9adb73b8018bcd741c6e62c5eb640d9767d87c0bdf77f43b71f5"
        },
        "downloads": -1,
        "filename": "exec_hints-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cecd3c20c787f9267b28c9a59e13399e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4288,
        "upload_time": "2022-03-14T18:49:50",
        "upload_time_iso_8601": "2022-03-14T18:49:50.625557Z",
        "url": "https://files.pythonhosted.org/packages/98/6a/4e32958a2b986c6c92e4a8b224a4a2cd5390cd2a3a365d778c045e8413e4/exec_hints-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "e703626ba3269f176972a7c72ec0edde91ed8ec56ada3a5ebb537b2754e719cb",
          "md5": "805547faab1aeb0d52234c9dc5eda18b",
          "sha256": "afdf85602eca22a15613b67d97bed876eef4392f83a73bfbe57278550cd073bf"
        },
        "downloads": -1,
        "filename": "exec_hints-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "805547faab1aeb0d52234c9dc5eda18b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 4638,
        "upload_time": "2022-05-30T11:50:27",
        "upload_time_iso_8601": "2022-05-30T11:50:27.385954Z",
        "url": "https://files.pythonhosted.org/packages/e7/03/626ba3269f176972a7c72ec0edde91ed8ec56ada3a5ebb537b2754e719cb/exec_hints-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "d73b5ac9c2cf810823eea4845b9a864a1c0d57a1056ea2487aee41a00f018dfc",
          "md5": "28383664ce981a983d21891d5391c56f",
          "sha256": "bf28d15e6f5ec0fad9f9cc2b5a60c84ddf0dad2536e119f7bd6158a3c1d23400"
        },
        "downloads": -1,
        "filename": "exec_hints-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "28383664ce981a983d21891d5391c56f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5197,
        "upload_time": "2022-05-30T11:51:02",
        "upload_time_iso_8601": "2022-05-30T11:51:02.269248Z",
        "url": "https://files.pythonhosted.org/packages/d7/3b/5ac9c2cf810823eea4845b9a864a1c0d57a1056ea2487aee41a00f018dfc/exec_hints-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "e703626ba3269f176972a7c72ec0edde91ed8ec56ada3a5ebb537b2754e719cb",
        "md5": "805547faab1aeb0d52234c9dc5eda18b",
        "sha256": "afdf85602eca22a15613b67d97bed876eef4392f83a73bfbe57278550cd073bf"
      },
      "downloads": -1,
      "filename": "exec_hints-0.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "805547faab1aeb0d52234c9dc5eda18b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 4638,
      "upload_time": "2022-05-30T11:50:27",
      "upload_time_iso_8601": "2022-05-30T11:50:27.385954Z",
      "url": "https://files.pythonhosted.org/packages/e7/03/626ba3269f176972a7c72ec0edde91ed8ec56ada3a5ebb537b2754e719cb/exec_hints-0.1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "d73b5ac9c2cf810823eea4845b9a864a1c0d57a1056ea2487aee41a00f018dfc",
        "md5": "28383664ce981a983d21891d5391c56f",
        "sha256": "bf28d15e6f5ec0fad9f9cc2b5a60c84ddf0dad2536e119f7bd6158a3c1d23400"
      },
      "downloads": -1,
      "filename": "exec_hints-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "28383664ce981a983d21891d5391c56f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5197,
      "upload_time": "2022-05-30T11:51:02",
      "upload_time_iso_8601": "2022-05-30T11:51:02.269248Z",
      "url": "https://files.pythonhosted.org/packages/d7/3b/5ac9c2cf810823eea4845b9a864a1c0d57a1056ea2487aee41a00f018dfc/exec_hints-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}