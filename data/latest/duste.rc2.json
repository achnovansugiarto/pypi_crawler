{
  "info": {
    "author": "Gautam Nagaraj",
    "author_email": "gxn75@psu.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Astronomy"
    ],
    "description": "# DustE\r\nCalculate dust attenuation curves for various configurations of physical properties of galaxies like stellar mass, star formation rates, and metallicities. This code is designed with theorists in mind: by supplying lists of non-dust properties as mentioned above, they can get state-of-the-art estimates for the dust properties of their simulated galaxies. Of course, observers can also compare their findings to our models, which will be a useful validation process. \r\n\r\n## Background\r\nWe created hierarchical/population Bayesian models for dust attenuation, which are described in Nagaraj+22a (submitted). Using Prospector spectral energy distribution (SED) fitting posterior samples for nearly 30,000 galaxies in a mass-complete 3D-HST (http://3dhst.research.yale.edu/Home.html) sample ([Leja et al. 2017](https://ui.adsabs.harvard.edu/abs/2017ApJ...837..170L/abstract), [2019](https://ui.adsabs.harvard.edu/abs/2019ApJ...877..140L/abstract), [2020](https://ui.adsabs.harvard.edu/abs/2020ApJ...893..111L/abstract)), we fit a linear interpolation function in five dimensions in order to determine how the dust attenuation curve varies over physical properties like stellar mass and star formation rate. As a result, we have created four models that are available for the user. We have both two-component (diffuse and birth cloud) and single-component (effective) dust attenuation model options. In the case of the two-component models, the birth cloud dust optical depth is modeled as a 1-D interpolation function of diffuse dust optical depth, which we provide in the form of a convenience function get_d1 (method of the DustAttnCalc class, see below). For diffuse dust and effective dust, we have a model that predicts both the dust optical depth and slope of the attenuation curve as well as a model that requires dust optical depth as an input to calculate the slope of the attenuation curve. The model of choice can be chosen through Boolean options for the DustAttnCalc class instance\r\n\r\nThe two-component model, inspired by the great success of the [Charlot & Fall (2000)](https://ui.adsabs.harvard.edu/abs/2000ApJ...539..718C/abstract) model in describing real galaxies, is used by Prospector in SED fitting. The model considers that the light from stars passes through either one or two dust screens in front of the galaxy. Light from stars under 10 Myr old pass through both screens (diffuse and birth cloud dust) whereas light from all other stars pass through only the diffuse dust screen. The birth cloud dust attenuation curve is treated as a simple inverse law with the normalization optical depth at 550 nm. The diffuse dust attenuation curve is parameterized in the form used by [Noll et al. (2009)](https://ui.adsabs.harvard.edu/abs/2009A%26A...507.1793N/abstract) and [Kriek & Conroy (2013)](https://ui.adsabs.harvard.edu/abs/2013ApJ...775L..16K/abstract), which is a flexible generalization of the [Calzetti et al. (2000)](https://ui.adsabs.harvard.edu/abs/2000ApJ...533..682C/abstract) curve. We use this same parameterization for the effective dust curve as well. For the effective dust attenuation case, there is simply one dust screen that affects all stars regardless of age.\r\n## Installation\r\nTo install the package, simply type the following command in terminal.\r\n\r\n        pip install DustE\r\n\r\nAlternately (not as recommended), open terminal in the directory where you would like the code to be placed and type\r\n        \r\n        git clone https://github.com/Astropianist/DustE.git\r\n\r\n### Dependencies\r\nA few packages that are available through pip and/or Anaconda are required to run the code. **The pip install command above should take care of all of the dependencies, so no extra work is needed.**\r\n\r\n* NumPy (tested on 1.20.0)\r\n* SciPy (tested on 1.6.0)\r\n* ArViz (tested on 0.11.2)\r\n* Matplotlib (tested on 3.4.2)\r\n* Seaborn (tested on 0.11.1)\r\n* Astropy (tested on 4.2)\r\n* [Sedpy](https://github.com/bd-j/sedpy)\r\n* [Dynesty](https://dynesty.readthedocs.io)\r\n\r\n## Using the code\r\nThe main functionality of the code comes from the DustAttnCalc class of DustAttnCalc.py. It can be used to calculate and plot dust attenuation curves depending on values of the independent parameters (log stellar mass, log star formation rate, log stellar metallicity, redshift, axis ratio, or even the dust optical depth)\r\n. \r\n\r\nWe will now present a few examples to show how the code works. **We assume that DustE is installed through pip. However, the command-line mode (python DustAttnCalc.py) versions can only be done in the subdirectory where DustAttnCalc.py is located.**\r\n\r\n### Example 1: Calculate dust attenuation parameters for an individual galaxy\r\n\r\nType the following prompt into a terminal (adjust values and add or remove independent variables as necessary). Once again, for this particular example, you must be in the subdirectory where DustAttnCalc.py is located. In this case, we provide stellar mass, SFR, and redshift and ask for the bivariate two-component dust model. The code marginalizes over stellar metallicity and axis ratio.\r\n\r\n        python DustAttnCalc.py -logM 10.5 -sfr 1.0 -z 1.5 -bv\r\n\r\nThe result is the following (ignoring extra print statements).\r\n\r\n        n, tau_2, tau_1: 0.034 +/- 0.042, 0.789 +/- 0.053, 0.793 +/- 0.055\r\n        n vs tau Average Correlation Coefficient rho: 0.310\r\n\r\nNote that this can be done in a script or interactive Python window. In subsequent examples, we show possibilities for such scripts.\r\n\r\n### Example 2: Calculate birth cloud dust optical depth from diffuse dust optical depth\r\n\r\n#### Technique 1: Command-line, file\r\n\r\nPlace the diffuse dust optical depths into a single-column ascii file with header \"d2.\" We use the sample file Sample_f2.dat (provided). Type the following command into a terminal (and adjust file name as necessary). Just to reiterate, to be able to use command-line mode, you must be in the same subdirectory as DustAttnCalc.py.\r\n\r\n        python DustAttnCalc.py -f2 Sample_f2.dat\r\n\r\nThe result will be the following (ignoring other print statements), corresponding to the eight optical depths in the file:\r\n\r\n        Dust1 average values: [0.39312231 0.79425555 0.18963501 0.3586911 1.59415881 2.18774406 2.188264 2.16303121]\r\n        Dust1 Standard deviations: [0.06190268 0.08047815 0.04678386 0.05974306 0.11096629 0.03208986 0.03214327 0.04680665]\r\n\r\n#### Technique 2: Interactive Python or script, arrays\r\n\r\nOpen up an interactive Python window or write the following lines in a script (any directory).\r\n\r\n        from duste.DustAttnCalc import DustAttnCalc\r\n        import numpy as np\r\n        \r\n        d2 = np.linspace(0.1,2.0,10)\r\n        dobj = DustAttnCalc()\r\n        d1sim, _ = dobj.get_d1(d2)\r\n        d1, d1e = np.average(d1sim, axis=0), np.std(d1sim, axis=0)\r\n        print(\"d1 values:\", d1)\r\n        print(\"d1e values:\", d1e)\r\n\r\nThe result of the print statements, once again, is arrays for birth cloud dust optical depth mean and standard deviation.\r\n\r\n        Dust1 average values: [0.11958332 0.29070451 0.50251462 0.73115189 0.98102995 1.25353043 1.57401674 1.86923729 2.12308391 2.18606005]\r\n        Dust1 Standard deviations: [0.05584508 0.06165037 0.06452066 0.06476246 0.08689269 0.08440908 0.1118049  0.10828458 0.06871685 0.03173608]\r\n\r\n### Example 3: Calculate (and plot) dust attenuation curves for multiple galaxies\r\n\r\n#### Technique 1: Command-line, file\r\n\r\nPlace values of independent variables in an ascii file. The possible headers are \"logM\" (log stellar mass), \"sfr\" (log SFR), \"logZ\" (log stellar metallicity in terms of solar), \"z\" (redshift), \"i\" (axis ratio b/a), \"d2\" (diffuse dust optical depth), and \"de\" (effective dust optical depth). The final two options can be used with the univariate model, in which the optical depth is used to help calculate the attenuation slope. **Note that with the command-line option you can make plots and see the attenuation parameter values but will not have direct access to all created arrays.**\r\n\r\nWe provide Sample_f1.dat as an example for an independent variable file (located in DustE/src/duste). Type the following line into command line (adjust as necessary for file name). \r\n\r\n        python DustAttnCalc.py -f1 Sample_f1.dat -bv -inb sample_f1 -mnp 2\r\n\r\nThe result of this command is the text shown below as well as two dust attenuation curve plots sample_f1_00.png and sample_f1_01.png stored in DustAttnCurves/. The two galaxies are randomly chosen from the galaxies in Sample_f1.dat. We discuss plots further and show an example with the second technique.\r\n\r\n        n: [-0.01448396 -0.02445773 -0.08416219 -0.16112971 -0.14947119]\r\n        n error: [0.04381379 0.03916229 0.04458178 0.04609532 0.03906517]\r\n        tau: [1.12040977 0.35787803 0.80088594 0.49005854 0.47413243]\r\n        tau error: [0.05402635 0.03848954 0.05236735 0.04381667 0.04813823]\r\n        tau1: [1.19851961 0.34892385 0.81187079 0.48468084 0.4719089 ]\r\n        tau1 error: [0.07402834 0.04198751 0.05953972 0.04390203 0.04619509]\r\n        n vs tau Average Correlation Coefficient rho: 0.310\r\n\r\n#### Technique 2: Script/Interactive Python window, arrays\r\n\r\nType the following into a script or interactive Python window (any directory).\r\n\r\n        from duste.DustAttnCalc import DustAttnCalc\r\n        import numpy as np\r\n        \r\n        ngal = 100 # Number of galaxies to use\r\n        # Set stellar mass, star formation rate, and metallicity within the bounds suggested in the code\r\n        logM = np.random.uniform(8.74,11.30,ngal)\r\n        sfr = np.random.uniform(-2.06,2.11,ngal)\r\n        logZ = np.random.uniform(-1.70,0.18,ngal)\r\n        dust_attn = DustAttnCalc(logM=logM, sfr=sfr, logZ=logZ, bv=1, eff=0) # Two-component bivariate dust model (fitting both optical depth and slope) \r\n        dac, dac1, n, tau, tau1, n_err, tau_err, tau1_err = dust_attn.calcDust(plot_tau=True, max_num_plot=5) \r\n        \r\nThe last line of the snippet above will calculate samples for the diffuse and birth cloud dust attenuation curves for all 100 galaxies created earlier. For convenience, it will also provide averages and standard deviations for the attenuation parameters. It will also produce 5 dust attenuation plots showing both diffuse and birth cloud dust (from the argument plot_tau1=True). The 5 points will be selected randomly from the 100 galaxies created earlier. By default, the images will be stored in a directory called DustAttnCurves and named DustAttnCurve_bv_1_eff_0_0i, with i ranging from 0 to 4. Here is an example of the type of image that would be produced from the code above.\r\n\r\n<p align=\"center\">\r\n  <img src=\"DustAttnCurve_bv_1_eff_0_01.png\" width=\"650\"/>\r\n</p>\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "DustE",
    "package_url": "https://pypi.org/project/DustE/",
    "platform": null,
    "project_url": "https://pypi.org/project/DustE/",
    "project_urls": {
      "Source repo": "https://github.com/Astropianist/DustE"
    },
    "release_url": "https://pypi.org/project/DustE/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Calculate dust attenuation curves as function of physical properties",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13797998,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4724e94a5c31049d249ef5c26c10cc252672c3dd74774f9e7f13e8f872475c66",
          "md5": "577c3252ea001550306c2c6c705c1d37",
          "sha256": "4abb3061d35fb9e6d50ee40c91630e56c93f1dd34f6071b26431d020cc9aa6ba"
        },
        "downloads": -1,
        "filename": "DustE-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "577c3252ea001550306c2c6c705c1d37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 25974240,
        "upload_time": "2022-05-12T20:02:19",
        "upload_time_iso_8601": "2022-05-12T20:02:19.353868Z",
        "url": "https://files.pythonhosted.org/packages/47/24/e94a5c31049d249ef5c26c10cc252672c3dd74774f9e7f13e8f872475c66/DustE-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d3b1a02aa7dddecb9ae6ca311e05c9d4da898fbdddfad95cfc08de2f6b87f99",
          "md5": "ae46db8b5ee59de80793086d0c19a910",
          "sha256": "8288602a9e60e3cb8751241a1c926b5358edc0ba2b2c310cdd944e8845800be0"
        },
        "downloads": -1,
        "filename": "DustE-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ae46db8b5ee59de80793086d0c19a910",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 25974243,
        "upload_time": "2022-05-12T20:09:49",
        "upload_time_iso_8601": "2022-05-12T20:09:49.597324Z",
        "url": "https://files.pythonhosted.org/packages/4d/3b/1a02aa7dddecb9ae6ca311e05c9d4da898fbdddfad95cfc08de2f6b87f99/DustE-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d3b1a02aa7dddecb9ae6ca311e05c9d4da898fbdddfad95cfc08de2f6b87f99",
        "md5": "ae46db8b5ee59de80793086d0c19a910",
        "sha256": "8288602a9e60e3cb8751241a1c926b5358edc0ba2b2c310cdd944e8845800be0"
      },
      "downloads": -1,
      "filename": "DustE-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ae46db8b5ee59de80793086d0c19a910",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 25974243,
      "upload_time": "2022-05-12T20:09:49",
      "upload_time_iso_8601": "2022-05-12T20:09:49.597324Z",
      "url": "https://files.pythonhosted.org/packages/4d/3b/1a02aa7dddecb9ae6ca311e05c9d4da898fbdddfad95cfc08de2f6b87f99/DustE-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}