{
  "info": {
    "author": "Ukrzen Team",
    "author_email": "api@alerts.in.ua",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Introduction\nThe Alerts.in.ua API Client is a Python library that simplifies access to the alerts.in.ua API service. It provides real-time information about air raid alerts and other potential threats.\n\n\n\n# Installation\nTo install the Alerts.in.ua API Client, run the following command in your terminal:\n\n```bash\npip install alerts_in_ua\n```\n\n\n\n# Usage\n\n⚠️ Before you can use this library, you need to obtain an API token by contacting api@alerts.in.ua.\n\nHere's an basic example of how to use the library to get a list of active alerts:\n\nAsync:\n```python\nimport asyncio\nfrom alerts_in_ua import AsyncClient as AsyncAlertsClient\n\nasync def main():\n    # Initialize the client with your token\n    alerts_client = AsyncAlertsClient(token=\"your_token\")\n    \n    # Get the active alerts\n    active_alerts = await alerts_client.get_active_alerts()\n    print(active_alerts)\n\n\n# Run the asynchronous function\nasyncio.run(main())\n\n```\nor sync:\n```python\nfrom alerts_in_ua import Client as AlertsClient\n\nalerts_client = AlertsClient(token=\"your_token\")\n\n# Get the active alerts\nactive_alerts = alerts_client.get_active_alerts()\nprint(active_alerts)\n```\n\n# Alerts \n\nAlerts class is a collection of alerts and provides various methods to filter and access these alerts.\n\nWhen user call `client.get_active_alerts()` it returns `Alerts` class.\n## Methods\n\n### filter(*args: str) -> List[Alert]\nThis method filters the alerts based on the given parameters.\n\n```python\nfiltered_alerts = active_alerts.filter('location_oblast', 'Донецька область','alert_type','air_raid')\n```\nIn this example, filtered_alerts will contain all the air raid alerts that have the location oblast as 'Донецька область'.\n\n### get_alerts_by_location_title(location_title: str) -> List[Alert]\nThis method returns all the alerts from specified location.\n\n```python\nkyiv_alerts = active_alerts.get_alerts_by_location_title('м. Київ')\n```\n\n### get_air_raid_alerts() -> List[Alert]\nThis method returns all the alerts that are of alert type 'air_raid'.\n```python \nair_raid_alerts = active_alerts.get_air_raid_alerts()\n```\n\n### get_oblast_alerts() -> List[Alert]\nThis method returns all the alerts that are of location type 'oblast'.\n\n```python\noblast_alerts = active_alerts.get_oblast_alerts()\n```\n\n### get_raion_alerts() -> List[Alert]\nThis method returns all the alerts that are of location type 'raion'.\n```python\nraion_alerts = active_alerts.get_raion_alerts()\n```\n\n### get_hromada_alerts() -> List[Alert]\nThis method returns all the alerts that are of location type 'hromada'.\n```python\nhromada_alerts = active_alerts.get_hromada_alerts()\n```\n\n### get_city_alerts() -> List[Alert]\nThis method returns all the alerts that are of location type 'city'.\n\n```python\ncity_alerts = active_alerts.get_city_alerts()\n```\n\n### get_alerts_by_alert_type(alert_type: str) -> List[Alert]\nThis method returns all the alerts that are of the given alert type.\n\n```python\nartillery_shelling_alerts = active_alerts.get_alerts_by_alert_type('artillery_shelling')\n```\n\n### get_alerts_by_location_type(location_type: str) -> List[Alert]\nThis method returns all the alerts that are of the given location type.\n\n```python\nurban_location_alerts = active_alerts.get_alerts_by_location_type('raion')\n```\n\n### get_alerts_by_oblast(oblast_title: str) -> List[Alert]\nThis method returns all the alerts that are of the given oblast title.\n\n```python\ndonetsk_oblast_alerts = active_alerts.get_alerts_by_oblast('Донецька область')\n```\n\n### get_alerts_by_location_uid(location_uid: str) -> List[Alert]\nThis method returns all the alerts that have the given location uid.\n```python\nlocation_uid_alerts = active_alerts.get_alerts_by_location_uid('123456')\n```\n\n### get_artillery_shelling_alerts() -> List[Alert]\nThis method returns all the alerts that are of alert type 'artillery_shelling'.\n```python \nartillery_shelling_alerts = active_alerts.get_artillery_shelling_alerts()\n```\n\n### get_urban_fights_alerts() -> List[Alert]\nThis method returns all the alerts that are of alert type 'urban_fights'.\n```python \nurban_fights_alerts = active_alerts.get_urban_fights_alerts()\n```\n\n### get_nuclear_alerts() -> List[Alert]\nThis method returns all the alerts that are of alert type 'nuclear'.\n```python \nnuclear_alerts = active_alerts.get_nuclear_alerts()\n```\n\n### get_chemical_alerts() -> List[Alert]\nThis method returns all the alerts that are of alert type 'chemical'.\n```python \nchemical_alerts = active_alerts.get_chemical_alerts()\n```\n\n### get_all_alerts() -> List[Alert]\nThis method returns all alerts.\n```python \nall_alerts = active_alerts.get_all_alerts()\n```\nor you can use shortcut:\n```python \nfor alert in active_alerts:\n    print(alert)\n```\n### get_last_updated_at() -> datetime.datetime\nThis method returns the datetime object representing the time when the alert information was last updated (Kyiv timezone).\n```python\nlast_updated_at = alerts.get_last_updated_at()\n```\n\n### get_disclaimer() -> str\nThis method returns the disclaimer associated with the alert information.\n```python\ndisclaimer = alerts.get_disclaimer()\n```\n\n\n\n# License\nMIT 2023\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alerts-ua/alerts-in-ua-py",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "alerts-in-ua",
    "package_url": "https://pypi.org/project/alerts-in-ua/",
    "platform": null,
    "project_url": "https://pypi.org/project/alerts-in-ua/",
    "project_urls": {
      "Homepage": "https://github.com/alerts-ua/alerts-in-ua-py"
    },
    "release_url": "https://pypi.org/project/alerts-in-ua/0.2.4/",
    "requires_dist": [
      "aiohttp",
      "requests",
      "pytz"
    ],
    "requires_python": "",
    "summary": "Python library for alerts.in.ua API",
    "version": "0.2.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16860681,
  "releases": {
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e799beb6d0debf901bf20823d582ff5f5d5b3b94617f9eacf5d82d57100d8d7c",
          "md5": "aa68fd9c90732227b48bd35e12839b7d",
          "sha256": "a453b77521b7446f8dfe385c25320f63276d606e40d40f2f6fa6f8e17bafc810"
        },
        "downloads": -1,
        "filename": "alerts_in_ua-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa68fd9c90732227b48bd35e12839b7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6030,
        "upload_time": "2023-02-08T13:16:01",
        "upload_time_iso_8601": "2023-02-08T13:16:01.744879Z",
        "url": "https://files.pythonhosted.org/packages/e7/99/beb6d0debf901bf20823d582ff5f5d5b3b94617f9eacf5d82d57100d8d7c/alerts_in_ua-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1a854b33d88e3ca7ca4ad1c8290b8e3a9ab042450c604f7c7e455c7167b288d",
          "md5": "53a200f8ba3ac27ce69c4960f26b83eb",
          "sha256": "73b0bedfbf448255dce425740a0308387aec901b12758eca4d6aa72609aefbd3"
        },
        "downloads": -1,
        "filename": "alerts_in_ua-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "53a200f8ba3ac27ce69c4960f26b83eb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8469,
        "upload_time": "2023-02-14T16:26:30",
        "upload_time_iso_8601": "2023-02-14T16:26:30.140395Z",
        "url": "https://files.pythonhosted.org/packages/a1/a8/54b33d88e3ca7ca4ad1c8290b8e3a9ab042450c604f7c7e455c7167b288d/alerts_in_ua-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b6c4f3d9800c0a39d7a4dbc98991ad043ef6b9cfc0742eca4b0ad175170780b",
          "md5": "9577c61f3a43f61045e716ed203240cb",
          "sha256": "ed2e03fca8311359d2517155d6d17a7f20a1f8a267906e17e0714c3f90d9b001"
        },
        "downloads": -1,
        "filename": "alerts_in_ua-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9577c61f3a43f61045e716ed203240cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8468,
        "upload_time": "2023-02-14T20:21:51",
        "upload_time_iso_8601": "2023-02-14T20:21:51.511299Z",
        "url": "https://files.pythonhosted.org/packages/3b/6c/4f3d9800c0a39d7a4dbc98991ad043ef6b9cfc0742eca4b0ad175170780b/alerts_in_ua-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b6c4f3d9800c0a39d7a4dbc98991ad043ef6b9cfc0742eca4b0ad175170780b",
        "md5": "9577c61f3a43f61045e716ed203240cb",
        "sha256": "ed2e03fca8311359d2517155d6d17a7f20a1f8a267906e17e0714c3f90d9b001"
      },
      "downloads": -1,
      "filename": "alerts_in_ua-0.2.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9577c61f3a43f61045e716ed203240cb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8468,
      "upload_time": "2023-02-14T20:21:51",
      "upload_time_iso_8601": "2023-02-14T20:21:51.511299Z",
      "url": "https://files.pythonhosted.org/packages/3b/6c/4f3d9800c0a39d7a4dbc98991ad043ef6b9cfc0742eca4b0ad175170780b/alerts_in_ua-0.2.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}