{
  "info": {
    "author": "",
    "author_email": "Louis-Fran√ßois Meunier <louis-francois.meunier@meteo.fr>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: CeCILL-C Free Software License Agreement (CECILL-C)"
    ],
    "description": "[![Lint & Test](https://github.com/UMR-CNRM/tflowclient/actions/workflows/lint_and_test.yml/badge.svg)](https://github.com/UMR-CNRM/tflowclient/actions/workflows/lint_and_test.yml)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![PyPI version](https://badge.fury.io/py/tflowclient.svg)](https://badge.fury.io/py/tflowclient)\n\n# tflowclient\n\nThe ``tflowclient`` package (Text-based workFlow scheduler Client) provides all\nthe necessary bits to build text-based console clients to interact with\nvarious workflow schedulers. For now, only ``SMS`` is supported: see the\n``bin/tflowclient_cdp.py`` executable.\n\nThe default display is a tree-view of the workload currently being managed by\nthe workflow scheduler. An alternative display/\"app\" is available and can\nbe trigger by adding `-a Cancel`` on the command-line: it allows to select\nseveral root nodes and to cancel (i.e. delete) them.\n\n## Requirements & Dependencies\n\nThe ``tflowclient`` package is only compatible with Python >= 3.7.\n\nThe ``tflowclient`` package itself only depends on the non-standard ``urwid``\npackage that is available on PyPi.\n\nDevelopers will also need to install the ``pytest`` and ``black`` PyPi\npackages in order to respectively test the code and format the code.\n\nTo use the ``bin/tflowclient_cdp.py`` executable, a ``cdp`` executable needs to\nbe available in the system's path. Otherwise, its path can be specified in the\nuser-specific configuration file ``~/.tflowclientrc.ini``.\n\n## Installation\n\n### Manually\n\nJust fetch the code and add the ``src`` directory to your ``PYTHONPATH``.\n\n### Via ``pip``\n\nInstall ``pip``'s build package:\n\n    pip install build\n\nBuild the ``tflowclient`` package (from the repository root directory):\n\n    python -m build\n\nAfter this step, a ready to use pip package should be located in the ``dist``\nsubdirectory. It may be installed using pip:\n\n    pip install ./dist/package_name.tar.gz\n\n## Rules regarding developments\n\nAll the Python code (including the code in ``bin`` and ``tests`` subdirectories)\nmust comply with PEP8. Prior to any commit in the central repository, all\nthe Python code **must** be automatically formatted using the black formatter:\n\n    black .\n\nAll the unit tests must succeed at any time. The ``pytest`` launcher should\nbe used (from the repository root directory):\n\n    pytest\n\n## The ``~/.tflowclientrc.ini`` configuration file\n\nThe configuration file is optional. You do not need to create it unless you\nwant to customise some the default configuration\n\nIt could look like that:\n\n    [logging]\n    ; Activate logging in a ``~/.tflowclient.log`` file for messages with a\n    ; severity greater or equal to ``CRITICAL``.\n    level = CRITICAL\n    \n    [urwid]\n    ; The backend for ``urwid``. The other possible value is ``curses``.\n    backend = raw\n    \n    [palette]\n    ; The platette that will be used by urwid.\n    ; For example, you might want to print aborted tasks with black\n    ; characters on a ``dark magenta`` background\n    ABORTED = black,dark magenta\n\nThe default ``tflowclient`` palette can be dumped using the\n``bin/tflowclient_palette.py`` executable. More details, on the various\ncolor schemes can be obtained in the ``urwid`` documentation.\n\nBy default, only 16 colors are available to build the \"palette\". Some of may\nwant to expand their horizons... Theoretically, it is possible to support 256\ncolors (see the configuration) but beware that it is not supported by all\nterminals (that's why it's not activated by default).\n\nUse of a 256-colors palette:\n\n    [urwid]\n    backend = raw\n    terminal_colors = 256\n    \n    [palette]\n    ABORTED = black, dark magenta, , g74, #f86\n\nThe first to entries of the palette still represent foreground and background\ncolors for the 16-colors palette but the 4th and 5th elements represents\nforeground and background colors for the 256-colors palette\n(see https://urwid.readthedocs.io/en/latest/examples/index.html#palette-test-py).                                                    \n\n## Extra configuration for SMS/CDP\n\nWhen running the ``tflowclient_cdp.py`` utility, the server name, user name and\nSMS suite to follow have to be specified:\n\n    tflowclient_cdp.py -s sms_server -u sms_user -r sms_suite\n\nFor a day to day use, default values can be specified in the\n``~/.tflowclientrc.ini`` file:\n\n    [cdp]\n    path=path_to_the_cdp_binary\n    host=sms_server\n    user=sms_user\n    suite=sms_suite\n\n``path`` may be omitted if it is properly configured system-wide.\n\nIn addition, the user must provide his credentials in a ``~/.smsrc`` file.\nThe ``~/.smsrc`` file may contain several lines for each of the\nserver_name/user_name pair the user wants to connect to. The ``.smsrc``\nfile looks like:\n\n    sms_server sms_user sms_user_s_password\n\nThe ``~/.smsrc`` file needs to be accessible **only** by the user (\"600\"\npermissions in octal notation).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "SMS",
    "license": "CECILL-C",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tflowclient",
    "package_url": "https://pypi.org/project/tflowclient/",
    "platform": null,
    "project_url": "https://pypi.org/project/tflowclient/",
    "project_urls": {
      "repository": "https://github.com/UMR-CNRM/tflowclient"
    },
    "release_url": "https://pypi.org/project/tflowclient/0.7.0/",
    "requires_dist": [
      "urwid"
    ],
    "requires_python": ">=3.7",
    "summary": "A text-based viewer for ECMWF workflow schedulers.",
    "version": "0.7.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17337077,
  "releases": {
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98d8e904991107c00b8d17f8082c1640eae4d6198d0b69bdadecd5fc1596fc99",
          "md5": "ca76fe7ae92f0ac515ed3ed0398b24fa",
          "sha256": "cac7636d9adf9760d7218ccd3b5d7c9eb15b3edc4daf6a4eb9ee377c165cf484"
        },
        "downloads": -1,
        "filename": "tflowclient-0.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ca76fe7ae92f0ac515ed3ed0398b24fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 65818,
        "upload_time": "2023-01-10T17:47:09",
        "upload_time_iso_8601": "2023-01-10T17:47:09.913044Z",
        "url": "https://files.pythonhosted.org/packages/98/d8/e904991107c00b8d17f8082c1640eae4d6198d0b69bdadecd5fc1596fc99/tflowclient-0.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac729a3311e0172159f6bf903317766255d92fa8fe7506a32b1b0b4bc607e6b3",
          "md5": "9a2795d3819b28e7b6f80be97c45fe78",
          "sha256": "feef811b2fea01dc09dc22bc9184e62bc0c474ac2af87813d780324019d4b5c8"
        },
        "downloads": -1,
        "filename": "tflowclient-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9a2795d3819b28e7b6f80be97c45fe78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 63568,
        "upload_time": "2023-01-10T17:47:11",
        "upload_time_iso_8601": "2023-01-10T17:47:11.027150Z",
        "url": "https://files.pythonhosted.org/packages/ac/72/9a3311e0172159f6bf903317766255d92fa8fe7506a32b1b0b4bc607e6b3/tflowclient-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5ee7b33b1127b5101e4ed1702392f0832359b9ba358e9829938e3b0673aadb3",
          "md5": "e4c612e7231285d339c6b93596e9c4f2",
          "sha256": "a35a91dd225fc5b4bfe44eecd772cc392eb41d9ff9acdbb834f4e74ea503e77e"
        },
        "downloads": -1,
        "filename": "tflowclient-0.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4c612e7231285d339c6b93596e9c4f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 67375,
        "upload_time": "2023-03-17T16:38:33",
        "upload_time_iso_8601": "2023-03-17T16:38:33.630063Z",
        "url": "https://files.pythonhosted.org/packages/d5/ee/7b33b1127b5101e4ed1702392f0832359b9ba358e9829938e3b0673aadb3/tflowclient-0.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a1413d51da87561adf515cb63c5f49fdeeeae4d4fab6c37512892ce82c004da",
          "md5": "dff62a21d0cfce0907392720715e1d34",
          "sha256": "4aa6537a094e19997147e1e02f31103fa17037d43d8e19c0a031cedd031ff7f9"
        },
        "downloads": -1,
        "filename": "tflowclient-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dff62a21d0cfce0907392720715e1d34",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 65236,
        "upload_time": "2023-03-17T16:38:34",
        "upload_time_iso_8601": "2023-03-17T16:38:34.757131Z",
        "url": "https://files.pythonhosted.org/packages/5a/14/13d51da87561adf515cb63c5f49fdeeeae4d4fab6c37512892ce82c004da/tflowclient-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d5ee7b33b1127b5101e4ed1702392f0832359b9ba358e9829938e3b0673aadb3",
        "md5": "e4c612e7231285d339c6b93596e9c4f2",
        "sha256": "a35a91dd225fc5b4bfe44eecd772cc392eb41d9ff9acdbb834f4e74ea503e77e"
      },
      "downloads": -1,
      "filename": "tflowclient-0.7.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e4c612e7231285d339c6b93596e9c4f2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 67375,
      "upload_time": "2023-03-17T16:38:33",
      "upload_time_iso_8601": "2023-03-17T16:38:33.630063Z",
      "url": "https://files.pythonhosted.org/packages/d5/ee/7b33b1127b5101e4ed1702392f0832359b9ba358e9829938e3b0673aadb3/tflowclient-0.7.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5a1413d51da87561adf515cb63c5f49fdeeeae4d4fab6c37512892ce82c004da",
        "md5": "dff62a21d0cfce0907392720715e1d34",
        "sha256": "4aa6537a094e19997147e1e02f31103fa17037d43d8e19c0a031cedd031ff7f9"
      },
      "downloads": -1,
      "filename": "tflowclient-0.7.0.tar.gz",
      "has_sig": false,
      "md5_digest": "dff62a21d0cfce0907392720715e1d34",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 65236,
      "upload_time": "2023-03-17T16:38:34",
      "upload_time_iso_8601": "2023-03-17T16:38:34.757131Z",
      "url": "https://files.pythonhosted.org/packages/5a/14/13d51da87561adf515cb63c5f49fdeeeae4d4fab6c37512892ce82c004da/tflowclient-0.7.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}