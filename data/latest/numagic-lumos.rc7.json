{
  "info": {
    "author": "Yunlong Xu",
    "author_email": "yunlong@numagic.io",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<p align=\"center\">\n<img src=\"imgs/logo.png\" alt=\"drawing\" width=\"50%\"/>\n</p>\n\n# lumos: scalable optimal control for dynamical systems\n\n[![CI with docker](https://github.com/numagic/lumos/actions/workflows/test_with_docker_image.yml/badge.svg)](https://github.com/numagic/lumos/actions/workflows/test_with_docker_image.yml)\n[![CI with conda](https://github.com/numagic/lumos/actions/workflows/test_with_conda.yml/badge.svg)](https://github.com/numagic/lumos/actions/workflows/test_with_conda.yml)\n[![PyPI version](https://badge.fury.io/py/numagic-lumos.svg)](https://badge.fury.io/py/numagic-lumos)\n[![Downloads](https://pepy.tech/badge/numagic-lumos)](https://pepy.tech/project/numagic-lumos)\n\n\n[**Benchmark on main**](https://numagic.github.io/lumos/dev/bench/)\n| [**Benchmark on features**](https://numagic.github.io/lumos/dev/bench-features/)\n\n\n[**Optimal Control Example**](#optimal-control-example)\n| [**Quickstart**](#quickstart-colab-in-the-cloud)\n| [**Environment setup**](#environment-setup)\n\n## What is lumos?\n[**lumos**](https://github.com/numagic/lumos) is a scalable numerical framework for the modelling and simulation of dynamical systems. Currently lumos focus on optimal control problems only, but the ideas it implements can be easily extended to other problems such as parameter inferences and state estimations.\n\nOne of the core philosophies of **lumos** is to leverage some fundamental technologies that enables the deep learning revolution: namely automatic differnetiation and large scale parallelization using accelerated hardware (GPU, TPU, etc).\n\n**lumos** adopts a numpy-like syntax to write models, and currently has two built-in backends: [JAX](https://jax.readthedocs.io/en/latest/) and [Casadi](https://web.casadi.org). In addition to the built-in backends, **lumos** is also extensible and can solve optimal control problems with user-defined custom model bakends, provided that a few necessary APIs are exposed.\n\n## Optimal Control Example\n```python\nimport numpy as np\nfrom typing import Any, Dict\n\nimport lumos.numpy as lnp\nfrom lumos.models.base import StateSpaceModel, StateSpaceModelReturn, state_space_io\nfrom lumos.optimal_control.config import (\n    BoundaryConditionConfig,\n    BoundConfig,\n)\nfrom lumos.optimal_control.scaled_mesh_ocp import ScaledMeshOCP\n\n# Create a model\n@state_space_io(states=(\"v\", \"x\", \"y\"), inputs=(\"theta\",), outputs=(\"theta\",))\nclass TimeModel(StateSpaceModel):\n    \"\"\"The Brachistochrone model formulatd in the time domain\"\"\"\n\n    def __init__(\n        self, model_config: Dict[str, Any] = {}, params: Dict[str, Any] = {},\n    ):\n        super().__init__(model_config=model_config, params=params)\n\n    def forward(\n        self,\n        states: Dict[str, float],\n        inputs: Dict[str, float],\n        mesh: float = 0.0,  # time invariant model\n    ) -> StateSpaceModelReturn:\n        params = self._params\n        theta = inputs[\"theta\"]\n        v = states[\"v\"]\n        v_dot = -params[\"gravity\"] * lnp.sin(theta)\n\n        dx_dt = lnp.cos(theta) * v\n        dy_dt = lnp.sin(theta) * v\n\n        # Assemble result\n        states_dot = self.make_dict(group=\"states_dot\", v=v_dot, x=dx_dt, y=dy_dt,)\n        outputs = self.make_dict(group=\"outputs\", theta=theta)\n        return StateSpaceModelReturn(states_dot=states_dot, outputs=outputs)\n\n    @classmethod\n    def get_default_params(self) -> Dict[str, Any]:\n        return {\"gravity\": 9.81}\n\n\n# Set up the model and the problem\nmodel = TimeModel()\nsim_config = ScaledMeshOCP.get_sim_config(\n    boundary_conditions=(\n        BoundaryConditionConfig(0, \"states\", \"x\", 0.0),\n        BoundaryConditionConfig(0, \"states\", \"y\", 0.0),\n        BoundaryConditionConfig(0, \"states\", \"v\", 0.0),\n        BoundaryConditionConfig(-1, \"states\", \"x\", 1.0),\n        BoundaryConditionConfig(-1, \"states\", \"y\", -0.6),\n    ),\n    bounds=(\n        BoundConfig(\"global\", \"mesh_scale\", (0.01, 10.0)),\n        BoundConfig(\"inputs\", \"theta\", (-np.pi / 2, np.pi / 2)),\n    ),\n    num_intervals=49,\n    hessian_approximation=\"exact\",\n)\nocp = ScaledMeshOCP(model=model, sim_config=sim_config)\n\n# Solve with a trivial initial guess\nsolution, info = ocp.solve(\n    init_guess=np.zeros(ocp.num_dec), max_iter=200, print_level=4,\n)\nprint(f\"maneuveur time: {ocp.objective(solution):.3f} seconds\")\n\n```\n\n### Contents\n* [Optimal Control Example](#optimal-control-example)\n* [Quickstart: Colab in the Cloud](#quickstart-colab-in-the-cloud)\n* [Envirohnment setup](#environment-setup)\n\n## Quickstart: Colab in the Cloud\n- [Brachistochrone notebook](https://github.com/numagic/lumos/blob/main/tutorials/colab/Brachistochrone.ipynb) of the Brachistochrone example with the end-to-end implementation with and without automatic differentiation\n- [Laptime simulation notebook](https://github.com/numagic/lumos/blob/main/tutorials/colab/Laptime_simulation.ipynb) for optimal laptime around a race track, using GPUs.\n\n## Environment setup\n**lumos** It is recommened to develop with lumos via two ways: using [**conda**](#setting-up-with-conda) or using [**docker environment**](#setting-up-with-docker), with the latter preferred, especially for developers as.\n\nAt the moment, **lumos** is tested and supports Python 3.7, 3.8 and 3.9.\n\n### Setting up with conda\n1) setting up the dependencies\n```sh\nconda create -n lumos python=3.9\nconda env update -n lumos -f environment.yml\nconda activate lumos\n```\n2) Install **lumos** from test.pypi (temporarily)\n```sh\npip install -i https://test.pypi.org/simple/ numagic-lumos==0.0.5a0\n```\n\n2) Alternatively, install **lumos** from source\n```sh\npython3 -m pip install .\n```\n\n3) Test if it works\n```sh\npython3 examples/drone_example.py\n```\n\n### Setting up with docker\n\n1) you can directy build the local dev container with:\n```sh\ndocker-compose build --build-arg UID=$(id -u) --build-arg GID=$(id -g)\n```\n\n2) After the docker container is build, start it with\n```sh\ndocker-compose up -d\n```\nThe container should now be running in the background.\n\n3) [Optional] download and install VSCode, and then install the 'remote containers' extension.\n\n4) once VSCode with the extensions are installed, open VSCode, and open the folder where the repo is. It should automatically recognize the container configuration file, and asks if you want to open it in an conatiner, click 'Reopen in Container'\n<p align=\"center\">\n<img src=\"imgs/vscode_open_in_container.png\" alt=\"drawing\" width=\"50%\"/>\n</p>\n\n\n\n5) Once the VSCode enter the container, it will set up the other extensions and adopt settinsg defined in .devcontainer.json. After it installs the extensions, it might ask you to give permission to reload the conatiner to activate extensions like pylance language server, simply click yes.\n\n6) at this point, you should be able to run the examples, in a conatiner, try:\n```sh\n(lumos) <username>@lumos_dev:~/numagic/lumos$ python3 examples/drone_example.py\n```\nand the simulations should run and in the end you should get something like:\n```sh\nNumber of objective function evaluations             = 225\nNumber of objective gradient evaluations             = 67\nNumber of equality constraint evaluations            = 225\nNumber of inequality constraint evaluations          = 0\nNumber of equality constraint Jacobian evaluations   = 67\nNumber of inequality constraint Jacobian evaluations = 0\nNumber of Lagrangian Hessian evaluations             = 66\nTotal seconds in IPOPT                               = 3.247\n\nEXIT: Optimal Solution Found.\nINFO:__main__:Maneuver time 1.300 sec\nINFO:__main__:Final theta 6.28 rad\nINFO:__main__:Final sin(theta) -0.00\n```\n\n7) [FIXME] currently the python extension setting for vscode extensions (which does not affect running the code, but affects hwo the VSCode extensions work) does not work automatically using the setting in .devcontainer.json. Therefore one must manually set the interpreter for tools such as linting with flake8, and autoformatting with black to work.\n6.1) cmd + shift + p -> type 'select interpreter', and choose 'Python: select interpreter' when the option shows up\n6.2) the lumos conda env should show up as an option (something like: Python 3.9.10 ('lumos': conda)). Choose this one.\n6.3) Then linting and autoformatting should work.\n\n#### Build the base images locally [Optional]\nThe aforementinoed process will download the base docker images from the public github repo, alternatively one could build the images locally:\n```sh\n<repo_root>$ docker-compose --env-file .env -f docker/docker-compose-build.yml build\n```\n\n#### Building GPU container [Optional]\nNote: at the moment we switched the base image OS base to a smaller size linux base, to rebuild the GPU image, one needs to:\n1) change to a GPU base image with cuda, eg: nvidia/cuda11.3.0-devel-ubuntu18.04\n2) change the jaxlib version to a corresponding one with compatible cuda version. (sometimes one might also need to change the jax version because of jax and jaxlib version compatibility)\n\nthen to start the GPU containers, use multiple docker-compose see [here](https://docs.docker.com/compose/extends/)\n```sh\ndocker-compose -f docker-compose.yml -f docker-compose.gpu.yml up -d\n```\n\n### Environment setup on Mac with M1 chip (Experimental)\nIt is possible to set up the environment on Mac with M1 chip using both the conda and the docker approach described earlier, but both will require some customization steps to tackle general problems that arise from library/OS/chip compatibilty.\n\nFrom the speed perspetive, using conda directly seems to have a significant advantage, probably because it can better utilize the power of the M1 chip than via docker with emulation.\n\n#### Setting up with Conda on M1 Mac\nIt follows the general approach outlined [above](#setting-up-with-conda), but two main changes:\n1) install casadi with conda-forge instead of pip\n\nModify the environment.yml to remove cyipopt (we'll install it from source later), and move casadi from pip dependency to conda dependency. Add jax and jaxlib to conda dependencies, as shown below:\n```yaml\nchannels:\n  - conda-forge\n  - defaults\ndependencies:\n  - casadi\n  - jax\n  - jaxlib\n  - pip\n  - pip:\n    - casadi\n    - pyarrow\n    - pandas\n```\n\nAnd then create and update the conda environment as [before](#setting-up-with-conda)\n```sh\nconda create -n lumos_m1 python=3.9\nconda env update --file environment.yml\n```\n\nCheck if jax and casadi are both working (in a python terminal)\n```python3\nimport jax.numpy as jnp\nimport numpy as np\nimport casadi as cas\naa = np.random.randn(10)\n\njnp.dot(aa, aa)\ncas.dot(aa, aa)\n```\n\n2) install cyipopt from source\n\nClone the cyipopt repo, and move into repo directory:\n```sh\ngit clone https://github.com/mechmotum/cyipopt.git\ncd cyipopt\n```\n\nCheck out a release tag (optional)\n```sh\ngit checkout tags/v1.1.0\n```\n\nInstall the dependencies required (use [this](https://github.com/mechmotum/cyipopt/blob/5e371bebb85a6f9ce0a53ebdd78daf9c696e4e84/.github/workflows/test.yml#L29) as a reference)\n\n```sh\nconda install -q -y lapack \"libblas=*=*netlib\" cython>=0.26 \"ipopt=3.14\" numpy>=1.15 pkg-config>=0.29.2 setuptools>=39.0\n```\n\nInstall from source\n```sh\npython setup.py install\npython -m pip install .\n```\n\nCheck if cyipopt is working correctly\n```sh\npip instal pytest\npytest\n```\n\n\nTest if all components are all working correctly (using lumos examples)\n```sh\ncd ..\npython examples/laptime_simulation_example.py\n```\n\n\n#### Setting up with Docker on M1 Mac\nIt is also possible to set up the dev enviornment using the same dev conatiner, but we would need to replace the jax dependencies in the container as they were built with AVX which is not supported for docker on M1 (which uses Rosetta emulation)\n\nSo inside the container, one needs to replace `jax` and `jaxlib` with versions that are built WITHOUT AVX, see [here]([url](https://github.com/google/jax/issues/5501#issuecomment-1032891169))\n```sh\nconda install -c conda-forge jaxlib\nconda install -c conda-forge jax\n```\nAnd then all should just work as before.\n\nIf one wants to build the corresponding container locally, this is equivalent to modifying the `enviorenment.yml` to:\n\n```yaml\nchannels:\n  - conda-forge\n  - defaults\ndependencies:\n  - cyipopt\n  - jax\n  - jaxlib\n  - pip\n  - pip:\n    - casadi\n    - pyarrow\n    - pandas\n```\n\n# Stargazers over time\n\n[![Stargazers over time](https://starchart.cc/numagic/lumos.svg)](https://starchart.cc/numagic/lumos)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/numagic/lumos",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "numagic-lumos",
    "package_url": "https://pypi.org/project/numagic-lumos/",
    "platform": null,
    "project_url": "https://pypi.org/project/numagic-lumos/",
    "project_urls": {
      "Bug Tracker": "https://github.com/numagic/lumos/issues",
      "Homepage": "https://github.com/numagic/lumos"
    },
    "release_url": "https://pypi.org/project/numagic-lumos/0.0.2rc7/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "lumos - scalable accelerated optimal control",
    "version": "0.0.2rc7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15344832,
  "releases": {
    "0.0.2rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6e2a0c806557bbe39bc4d05183ddd01914f92f95f17f30db3e1e3271dd2c996",
          "md5": "e50abf6a6bba18585f15be7712746cb7",
          "sha256": "9b9255b0f5c1ae3e69dc2fc62ed030a6a0d7961fffc647784aa58e413577920f"
        },
        "downloads": -1,
        "filename": "numagic_lumos-0.0.2rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e50abf6a6bba18585f15be7712746cb7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 104503,
        "upload_time": "2022-04-20T21:17:54",
        "upload_time_iso_8601": "2022-04-20T21:17:54.369308Z",
        "url": "https://files.pythonhosted.org/packages/e6/e2/a0c806557bbe39bc4d05183ddd01914f92f95f17f30db3e1e3271dd2c996/numagic_lumos-0.0.2rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44c3905b7a32edcc0214f071b818167e034adb4d3d91f2c487543cf8563a2011",
          "md5": "3e99f254a120a6693b7c62b49b141547",
          "sha256": "220266f5cfd71d68d5fcdc1364a1d6d3dc69c40cd6aed160efcf1461c56b078d"
        },
        "downloads": -1,
        "filename": "numagic-lumos-0.0.2rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "3e99f254a120a6693b7c62b49b141547",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 89832,
        "upload_time": "2022-04-20T21:17:55",
        "upload_time_iso_8601": "2022-04-20T21:17:55.498753Z",
        "url": "https://files.pythonhosted.org/packages/44/c3/905b7a32edcc0214f071b818167e034adb4d3d91f2c487543cf8563a2011/numagic-lumos-0.0.2rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8b30cd9be0cf578893026f7ec8d39faf4b7f985c2f124a95f19a0613db43e84",
          "md5": "a943f101dba532fe75f3d76289eb7b9c",
          "sha256": "146c295db5b1de747563e59dca8c70ddda5c895e10d3e9f264ddd154346d3d9b"
        },
        "downloads": -1,
        "filename": "numagic_lumos-0.0.2rc2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a943f101dba532fe75f3d76289eb7b9c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 105107,
        "upload_time": "2022-05-10T12:01:01",
        "upload_time_iso_8601": "2022-05-10T12:01:01.504729Z",
        "url": "https://files.pythonhosted.org/packages/d8/b3/0cd9be0cf578893026f7ec8d39faf4b7f985c2f124a95f19a0613db43e84/numagic_lumos-0.0.2rc2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f71bcab1c23cc8247acbb289bf7e2c7279a3840d0cdf8bca66eb2e14b24f7e3c",
          "md5": "610f762556568ff2897d51c792177944",
          "sha256": "f31b9b9accc77dbc1574e701bba753ef7f53bb2071042402076ec0f55b38d125"
        },
        "downloads": -1,
        "filename": "numagic-lumos-0.0.2rc2.tar.gz",
        "has_sig": false,
        "md5_digest": "610f762556568ff2897d51c792177944",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 90373,
        "upload_time": "2022-05-10T12:01:03",
        "upload_time_iso_8601": "2022-05-10T12:01:03.489954Z",
        "url": "https://files.pythonhosted.org/packages/f7/1b/cab1c23cc8247acbb289bf7e2c7279a3840d0cdf8bca66eb2e14b24f7e3c/numagic-lumos-0.0.2rc2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2rc3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08d23ff1792aba0b106eef879f2663ad3c97d54c5c21a0e5d53847e79208889c",
          "md5": "aa7334ac4986089a739dc2c77d15d6d4",
          "sha256": "d985e47795c4331bc6a3e5ae66848ccf7ba4c01beffade7fa1c6e8accbdb019f"
        },
        "downloads": -1,
        "filename": "numagic_lumos-0.0.2rc3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa7334ac4986089a739dc2c77d15d6d4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 105601,
        "upload_time": "2022-05-15T19:30:31",
        "upload_time_iso_8601": "2022-05-15T19:30:31.185115Z",
        "url": "https://files.pythonhosted.org/packages/08/d2/3ff1792aba0b106eef879f2663ad3c97d54c5c21a0e5d53847e79208889c/numagic_lumos-0.0.2rc3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6db798f459ac1288433b941f5cb6e5ee8f4d51dddea5b4ec081e6a335ba1c60e",
          "md5": "15423417a61fd8e1a4d167feb135024e",
          "sha256": "e0aba8a289b25c5cc1f72f421383cae9ead715d13f6205bb5001e451bdb848af"
        },
        "downloads": -1,
        "filename": "numagic-lumos-0.0.2rc3.tar.gz",
        "has_sig": false,
        "md5_digest": "15423417a61fd8e1a4d167feb135024e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 90902,
        "upload_time": "2022-05-15T19:30:32",
        "upload_time_iso_8601": "2022-05-15T19:30:32.904993Z",
        "url": "https://files.pythonhosted.org/packages/6d/b7/98f459ac1288433b941f5cb6e5ee8f4d51dddea5b4ec081e6a335ba1c60e/numagic-lumos-0.0.2rc3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2rc4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd71fb813e0c180f23bd8297f73f4c7b163d4a759262fc7b33844a06e9f247ec",
          "md5": "7baee5f66cbc2049862abab9bc8264ec",
          "sha256": "269d1c1990b3197691e3dd281c15af62a6d2c4a8751eae94fdeb32ca4c0e0179"
        },
        "downloads": -1,
        "filename": "numagic_lumos-0.0.2rc4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7baee5f66cbc2049862abab9bc8264ec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 109453,
        "upload_time": "2022-06-24T10:13:02",
        "upload_time_iso_8601": "2022-06-24T10:13:02.616969Z",
        "url": "https://files.pythonhosted.org/packages/bd/71/fb813e0c180f23bd8297f73f4c7b163d4a759262fc7b33844a06e9f247ec/numagic_lumos-0.0.2rc4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e620673d89cc9682f8e906e0cdc385744bc8a6faf1d7a052f2786729ac21573",
          "md5": "43930c52170f4afa487bc28398de207b",
          "sha256": "96f6f2d424af1c3a5d5bd644e08cc76670c1410dfec7ec898c4e737f3a2ede93"
        },
        "downloads": -1,
        "filename": "numagic-lumos-0.0.2rc4.tar.gz",
        "has_sig": false,
        "md5_digest": "43930c52170f4afa487bc28398de207b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 96305,
        "upload_time": "2022-06-24T10:13:03",
        "upload_time_iso_8601": "2022-06-24T10:13:03.921291Z",
        "url": "https://files.pythonhosted.org/packages/6e/62/0673d89cc9682f8e906e0cdc385744bc8a6faf1d7a052f2786729ac21573/numagic-lumos-0.0.2rc4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2rc5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75d649d4f2251cf458ff270d3d6ce184e74c5987f413859fd1014472b86604ea",
          "md5": "f3c36bbe86c28f9ba1e0dd274accba9a",
          "sha256": "391ce254d34c1d8894dd527b3347fa12a36e3aa9c8a93198600022928e1c8ae7"
        },
        "downloads": -1,
        "filename": "numagic_lumos-0.0.2rc5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3c36bbe86c28f9ba1e0dd274accba9a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 107535,
        "upload_time": "2022-08-10T14:43:16",
        "upload_time_iso_8601": "2022-08-10T14:43:16.454438Z",
        "url": "https://files.pythonhosted.org/packages/75/d6/49d4f2251cf458ff270d3d6ce184e74c5987f413859fd1014472b86604ea/numagic_lumos-0.0.2rc5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "682e9a1864dee818405ebdd760a8a97bef4072944039cc721ba8f224cca4198b",
          "md5": "d35fbedf8a67957e2aeae3dba87ea518",
          "sha256": "3df101986a2b02bf8bbdf1904f5a204ee2ce691ab7e025e07a1d900b07873a5f"
        },
        "downloads": -1,
        "filename": "numagic-lumos-0.0.2rc5.tar.gz",
        "has_sig": false,
        "md5_digest": "d35fbedf8a67957e2aeae3dba87ea518",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 94689,
        "upload_time": "2022-08-10T14:43:17",
        "upload_time_iso_8601": "2022-08-10T14:43:17.846775Z",
        "url": "https://files.pythonhosted.org/packages/68/2e/9a1864dee818405ebdd760a8a97bef4072944039cc721ba8f224cca4198b/numagic-lumos-0.0.2rc5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2rc6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4faac94a906d129bf6fb08969377308ddb95f550887a6aa56cc7e2da35ebde52",
          "md5": "40d50e0747bba5ed8322e9f7f240c868",
          "sha256": "0cedb54801da4e3f698846495305fa44470b1ae4ed8923fbd2de4a98ce82ade2"
        },
        "downloads": -1,
        "filename": "numagic_lumos-0.0.2rc6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "40d50e0747bba5ed8322e9f7f240c868",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 113786,
        "upload_time": "2022-09-12T17:57:44",
        "upload_time_iso_8601": "2022-09-12T17:57:44.023105Z",
        "url": "https://files.pythonhosted.org/packages/4f/aa/c94a906d129bf6fb08969377308ddb95f550887a6aa56cc7e2da35ebde52/numagic_lumos-0.0.2rc6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e8657650e6ec4227aead1d17691dcaabdf3a63e8becd18c1a4a345b8f5ce537",
          "md5": "ca096dc7c1a0d3bdcd5b1629555ecf9b",
          "sha256": "2024a395358b13b13fc544f29f5c93dfea4c2d48bd396e73a50dae540ef1cc26"
        },
        "downloads": -1,
        "filename": "numagic-lumos-0.0.2rc6.tar.gz",
        "has_sig": false,
        "md5_digest": "ca096dc7c1a0d3bdcd5b1629555ecf9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 100177,
        "upload_time": "2022-09-12T17:57:45",
        "upload_time_iso_8601": "2022-09-12T17:57:45.923626Z",
        "url": "https://files.pythonhosted.org/packages/7e/86/57650e6ec4227aead1d17691dcaabdf3a63e8becd18c1a4a345b8f5ce537/numagic-lumos-0.0.2rc6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2rc7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cacb47fe625ecd80347ee673acf4a97d34d083dfc8940421ca49d47dd3816fcf",
          "md5": "226a2f8ef03580fa0f1c47d9e984c401",
          "sha256": "afbdc0e43cc02709dbded50f0c56582cba8d30f6d7d18f1189b501fbf3a942d0"
        },
        "downloads": -1,
        "filename": "numagic_lumos-0.0.2rc7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "226a2f8ef03580fa0f1c47d9e984c401",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 114047,
        "upload_time": "2022-10-08T15:48:23",
        "upload_time_iso_8601": "2022-10-08T15:48:23.024981Z",
        "url": "https://files.pythonhosted.org/packages/ca/cb/47fe625ecd80347ee673acf4a97d34d083dfc8940421ca49d47dd3816fcf/numagic_lumos-0.0.2rc7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef7330b5fd7036246992c712b98e335920bf3d6d409e42da7fd97eacca278f91",
          "md5": "0c773e9f2b4860dfe8691bcf09d75c4e",
          "sha256": "5a5216ebf0f1ae76ebe63a7ca460b38b6d5a91ef222fbf824b67f8ead0cc311f"
        },
        "downloads": -1,
        "filename": "numagic-lumos-0.0.2rc7.tar.gz",
        "has_sig": false,
        "md5_digest": "0c773e9f2b4860dfe8691bcf09d75c4e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 100542,
        "upload_time": "2022-10-08T15:48:24",
        "upload_time_iso_8601": "2022-10-08T15:48:24.284715Z",
        "url": "https://files.pythonhosted.org/packages/ef/73/30b5fd7036246992c712b98e335920bf3d6d409e42da7fd97eacca278f91/numagic-lumos-0.0.2rc7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cacb47fe625ecd80347ee673acf4a97d34d083dfc8940421ca49d47dd3816fcf",
        "md5": "226a2f8ef03580fa0f1c47d9e984c401",
        "sha256": "afbdc0e43cc02709dbded50f0c56582cba8d30f6d7d18f1189b501fbf3a942d0"
      },
      "downloads": -1,
      "filename": "numagic_lumos-0.0.2rc7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "226a2f8ef03580fa0f1c47d9e984c401",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 114047,
      "upload_time": "2022-10-08T15:48:23",
      "upload_time_iso_8601": "2022-10-08T15:48:23.024981Z",
      "url": "https://files.pythonhosted.org/packages/ca/cb/47fe625ecd80347ee673acf4a97d34d083dfc8940421ca49d47dd3816fcf/numagic_lumos-0.0.2rc7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef7330b5fd7036246992c712b98e335920bf3d6d409e42da7fd97eacca278f91",
        "md5": "0c773e9f2b4860dfe8691bcf09d75c4e",
        "sha256": "5a5216ebf0f1ae76ebe63a7ca460b38b6d5a91ef222fbf824b67f8ead0cc311f"
      },
      "downloads": -1,
      "filename": "numagic-lumos-0.0.2rc7.tar.gz",
      "has_sig": false,
      "md5_digest": "0c773e9f2b4860dfe8691bcf09d75c4e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 100542,
      "upload_time": "2022-10-08T15:48:24",
      "upload_time_iso_8601": "2022-10-08T15:48:24.284715Z",
      "url": "https://files.pythonhosted.org/packages/ef/73/30b5fd7036246992c712b98e335920bf3d6d409e42da7fd97eacca278f91/numagic-lumos-0.0.2rc7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}