{
  "info": {
    "author": "Andras Gyacsok",
    "author_email": "atti.dyachok@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Flask-DocuSign\n\n## Description\nThis package allows easy integrate your Flask application with DocuSign API.\n\nThe package is using impersonated user aka [JWT Grant](https://developers.docusign.com/platform/auth/jwt/jwt-best-practice/)\nas integration mode.\n\n\n## Installation\n\n```bash\npip install flask-docusign\n```\n\n## Usage\n\n### Step 1. Grant permissions\nBefore using DocuSign API through impersonated user you have to grant permissions for your application to do this.\nFor this you have to execute the next query in your browser:\n```bash\n    https://account-d.docusign.com/oauth/auth?response_type=code&scope=signature%20impersonation&client_id=YOUR_INTEGRATOR_KEY&redirect_uri=YOUR_REDIRECT_URI\n```\nIn the example above, we are using demo account, that's why we use **account-d.docusign.com** domain. For your production account you could use **account.docusign.com**\n\nPlease, note that **YOUR_REDIRECT_URI** should be registered in the platform.\n\n\n![Callbacks example](img/callback.png \"This is screenshot from DocuSign Admin console\")\n\n**YOUR_INTEGRATOR_KEY** can be found as well on settings page of your project.\n\n\n![Integration key example](img/integration_key.png \"This is screenshot from DocuSign Admin console\")\n\nIn case of correct call you will see the next page (in my case it is in Ukrainian) and after approving your application will be able to use DocuSign API.\n\n\n![Integration key example](img/grant.png \"This is screenshot from DocuSign Admin console\")\n\n\n### Step 2. Configure your application\nThe package expects configuration parameters to be passed inside dictionary like object.\nNext config variables are required:\n\n\n    # Base URL should be different on production - account.docusign.com\n    BASE_URL = os.getenv('DS_BASE_URL', 'https://demo.docusign.net/restapi')\n    APP_URL = \"http://localhost:8080\"\n\n    BASE_URI_SUFFIX = \"/restapi\"\n\n    # How get template id is described below\n    DS_TEMPLATE_ID = os.getenv('DS_TEMPLATE_ID')\n\n    # The app's DocuSign integration key\n    DS_CLIENT_ID = os.getenv('DS_CLIENT_ID')\n\n    # Application secret\n    DS_CLIENT_SECRET = os.getenv('DS_CLIENT_SECRET')\n\n    DS_EXT_APP_USER_ID = os.getenv('DS_EXT_APP_USER_ID')\n\n    # For demo accounts - account-d.docusign.com,\n    # for production accounts - account.docusign.com\n    DS_AUTHORIZATION_SERVER = os.getenv('DS_AUTHORIZATION_SERVER', account-d.docusign.com)\n\n    # The id of the user.\n    DS_IMPERSONATED_USER_ID = os.getenv('DS_IMPERSONATED_USER_ID')\n\n    # RSA key generated by DocuSign platform\n    PRIVATE_KEY_FILE = os.getenv('PRIVATE_KEY_FILE')\n\n#### How get you credentials\nIn admin console go on tab **Settings**, then select **App and keys**\n\n1. Get impersonated user id and integration key. You can get impersonated user id from **App and keys** page. Integration key will be listed for every project as well.\n\n![Impersonated user id example](img/creds1.png \"This is screenshot from DocuSign Admin console\")\n\n2. Get external application user id (DS_EXT_APP_USER_ID). In the top right click on your avatar and you will see the next modal window:\n\n![External application user user id example](img/creds2.png \"This is screenshot from DocuSign Admin console\")\n\n3. Application secret (DS_CLIENT_SECRET) and private key file (PRIVATE_KEY_FILE) you can get from you application page. For this purpose click on \n   **Actions** select menu and select **Edit** then in **Authentication** you can generate secret key for your application.\n   In **Service Integration** you have to generate RSA. **Important!** When you provide RSA key as environment variable you have to preserve RSA \n   structure with '\\n' (separating every new row) in other case Python will fail to parse it. \n\n### Step 3. Your DocuSign template\nYou have to upload a document template which users will sign. When your document will be uploaded you can get it's template id.\nUsually template id can be taken from URL in a browser address line or from 'Template ID' link:\n\n![Template id example](img/template_id.png \"This is screenshot from DocuSign Admin console\")\n\nThen you have to define **recipient** role for you template. For this you have to press 'Edit' button on the template's page.\nThen you will see the next:\n\n![Add recipient example](img/add_recipient.png \"This is screenshot from DocuSign Admin console\")\n\nUsually it doesn't make a sense to specify name or email, so we come with role only. In my case I use 'signer' role name.\nYou can specify role name you like.\n\n### Step 4. Define request handling logic\n\nRequest handling endpoints look very simple when you use the package.\nHere is an example:\n\n```python\n@ds.route('/', methods=['POST'])\ndef docusign_create_envelope():\n    \"\"\"Creates envelope and submits it to DocuSign, as response \n    receives signing URL for user to follow.\n    \"\"\"\n    config = current_app.config\n    msg, status = create_envelope(config, request, session)\n    return jsonify({'msg': msg}), status\n\n\n@ds.route(\"/callback\")\ndef ds_callback():\n    \"\"\"\n    Save the token information in session.\n    Call api to get user's information if it doesn't present.\n    \"\"\"\n    # Save the redirect eg if present\n    config = current_app.config\n    set_client_cookie(config, session)\n    return redirect('docusign_create_envelope')\n\n\n@ds.route(\"/check/<envelope_id>\", methods=['GET'])\ndef ds_check_envelope(envelope_id):\n    \"\"\"Check signing state.\"\"\"\n    state = 401\n    if not len(envelope_id):\n        return jsonify({'msg': 'Please verify your envelope id.'}), state\n    config = current_app.config\n    response, state = check_envelope(config, session, envelope_id)\n    return jsonify({'msg': response}), state\n```\n\nExample application can be found in **example** folder.\n\nYou can run example application with your DocuSign project credentials.\nPost request on http://localhost:8080/ds/ with payload:\n```javascript\n{\n    \"phone_number\": \"+491111111111111\",\n    \"full_name\": \"Arnrn Bcd\",\n    \"client_user_id\": \"1234567\",\n    \"email\": \"a11i.bbk@gmail.com\"\n}\n```\nshould return response similar to:\n```javascript\n{\n    \"msg\": {\n        \"envelopeId\": \"59840612-14a8-45fd-83ad-82aaaaaaaaaa\",\n        \"url\": \"https://demo.docusign.net/Signing/MTRedeem/v1/073929ed-e7a5-4902-a1e1-da8af5afa787?slt=eyJ0eXAiOiJNVCIsImFsZyI6IlJTMjU2Iiwia2LWFlNTctN2Q1MDgxZGRkZjAxIiwiRXhwaX...\"\n    }\n}\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/adyachok/flask-docusign",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flask-docusign",
    "package_url": "https://pypi.org/project/flask-docusign/",
    "platform": "",
    "project_url": "https://pypi.org/project/flask-docusign/",
    "project_urls": {
      "Homepage": "https://github.com/adyachok/flask-docusign"
    },
    "release_url": "https://pypi.org/project/flask-docusign/0.1.2/",
    "requires_dist": [
      "certifi (==2021.5.30)",
      "cffi (==1.14.6)",
      "chardet (==4.0.0)",
      "click (==8.0.1)",
      "cryptography (==3.4.7)",
      "docusign-esign (==3.10.0)",
      "fastapi-camelcase (==1.0.2)",
      "Flask (==2.0.1)",
      "idna (==2.10)",
      "itsdangerous (==2.0.1)",
      "Jinja2 (==3.0.1)",
      "MarkupSafe (==2.0.1)",
      "nose (==1.3.7)",
      "pycparser (==2.20)",
      "pydantic (==1.8.2)",
      "pydantic[email]",
      "pyhumps (==3.0.2)",
      "PyJWT (==1.7.1)",
      "python-dateutil (==2.8.1)",
      "pytz",
      "requests (==2.25.1)",
      "six (==1.16.0)",
      "typing-extensions (==3.10.0.0)",
      "urllib3 (==1.26.6)",
      "Werkzeug (==2.0.1)"
    ],
    "requires_python": "",
    "summary": "Simple DocuSign client for Flask",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10866451,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e924374b71539a9937b9dd9a20cffe60211fa1921e3405c230d4cce8f6bd4fa9",
          "md5": "bcb0080549a68b46555dd27132bed30c",
          "sha256": "059f04262a3feadd8d58969699cf8b3567f5dc59bdb2d534e3daebc11a9ef824"
        },
        "downloads": -1,
        "filename": "flask_docusign-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bcb0080549a68b46555dd27132bed30c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10859,
        "upload_time": "2021-07-09T15:33:58",
        "upload_time_iso_8601": "2021-07-09T15:33:58.823016Z",
        "url": "https://files.pythonhosted.org/packages/e9/24/374b71539a9937b9dd9a20cffe60211fa1921e3405c230d4cce8f6bd4fa9/flask_docusign-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3189f50fc6cb5c2d2d2c7d4562e7e692975373634e80125a83a4ea58004c1c36",
          "md5": "2a776bf7d159095ed0b9e0e29fba8d9b",
          "sha256": "75dbd687ceea020b5fb71e96b22a39cfa09db4cdbc74843e8da75df7784d5e32"
        },
        "downloads": -1,
        "filename": "flask-docusign-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2a776bf7d159095ed0b9e0e29fba8d9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11677,
        "upload_time": "2021-07-09T15:34:00",
        "upload_time_iso_8601": "2021-07-09T15:34:00.948819Z",
        "url": "https://files.pythonhosted.org/packages/31/89/f50fc6cb5c2d2d2c7d4562e7e692975373634e80125a83a4ea58004c1c36/flask-docusign-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c0438f7d13c118c1372364b08373a26fb15c44ef53a98e74a5e2f6f11ec3dc3",
          "md5": "9883af7a0a64e8f0b04e86742f88b01f",
          "sha256": "af4d3b0cc6635e4c175693c8eb48f748111e46e4dbc980a183b612840e220cf7"
        },
        "downloads": -1,
        "filename": "flask_docusign-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9883af7a0a64e8f0b04e86742f88b01f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10860,
        "upload_time": "2021-07-09T15:47:00",
        "upload_time_iso_8601": "2021-07-09T15:47:00.140289Z",
        "url": "https://files.pythonhosted.org/packages/4c/04/38f7d13c118c1372364b08373a26fb15c44ef53a98e74a5e2f6f11ec3dc3/flask_docusign-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce78d822ad796999716d03a4bdeec8332852a7361c1ada16edc081b64bf9c9a3",
          "md5": "77369fb27bb60f4b521329947be61aeb",
          "sha256": "fdb76e7efe65cac0ee61c43fa4f3fb5f5d3eee7bcd083e8382c86d9c6452fe2d"
        },
        "downloads": -1,
        "filename": "flask-docusign-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "77369fb27bb60f4b521329947be61aeb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11688,
        "upload_time": "2021-07-09T15:47:02",
        "upload_time_iso_8601": "2021-07-09T15:47:02.465925Z",
        "url": "https://files.pythonhosted.org/packages/ce/78/d822ad796999716d03a4bdeec8332852a7361c1ada16edc081b64bf9c9a3/flask-docusign-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49f2fd35e2d5de1c4585e5c27829516c4693481ae2cb2d577ac63ac698f952f8",
          "md5": "c981e373a7f9caec7d99dbda315d874c",
          "sha256": "7293e32f4b63f104ed80fae17834c09dea08fa6e5d65d723c93e1c403b26115e"
        },
        "downloads": -1,
        "filename": "flask_docusign-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c981e373a7f9caec7d99dbda315d874c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10886,
        "upload_time": "2021-07-09T16:03:08",
        "upload_time_iso_8601": "2021-07-09T16:03:08.950797Z",
        "url": "https://files.pythonhosted.org/packages/49/f2/fd35e2d5de1c4585e5c27829516c4693481ae2cb2d577ac63ac698f952f8/flask_docusign-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "435dc67a4b34031920b08048b71d31e0cba4ab35261b0b4869923337f8d88826",
          "md5": "6e89b5565259a59109a13ca654c9d74b",
          "sha256": "26862a170c8fea35f91592931b51c34365039dfe73c9ca3fe324911802ad504d"
        },
        "downloads": -1,
        "filename": "flask-docusign-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6e89b5565259a59109a13ca654c9d74b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11726,
        "upload_time": "2021-07-09T16:03:12",
        "upload_time_iso_8601": "2021-07-09T16:03:12.714960Z",
        "url": "https://files.pythonhosted.org/packages/43/5d/c67a4b34031920b08048b71d31e0cba4ab35261b0b4869923337f8d88826/flask-docusign-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "49f2fd35e2d5de1c4585e5c27829516c4693481ae2cb2d577ac63ac698f952f8",
        "md5": "c981e373a7f9caec7d99dbda315d874c",
        "sha256": "7293e32f4b63f104ed80fae17834c09dea08fa6e5d65d723c93e1c403b26115e"
      },
      "downloads": -1,
      "filename": "flask_docusign-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c981e373a7f9caec7d99dbda315d874c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10886,
      "upload_time": "2021-07-09T16:03:08",
      "upload_time_iso_8601": "2021-07-09T16:03:08.950797Z",
      "url": "https://files.pythonhosted.org/packages/49/f2/fd35e2d5de1c4585e5c27829516c4693481ae2cb2d577ac63ac698f952f8/flask_docusign-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "435dc67a4b34031920b08048b71d31e0cba4ab35261b0b4869923337f8d88826",
        "md5": "6e89b5565259a59109a13ca654c9d74b",
        "sha256": "26862a170c8fea35f91592931b51c34365039dfe73c9ca3fe324911802ad504d"
      },
      "downloads": -1,
      "filename": "flask-docusign-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6e89b5565259a59109a13ca654c9d74b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11726,
      "upload_time": "2021-07-09T16:03:12",
      "upload_time_iso_8601": "2021-07-09T16:03:12.714960Z",
      "url": "https://files.pythonhosted.org/packages/43/5d/c67a4b34031920b08048b71d31e0cba4ab35261b0b4869923337f8d88826/flask-docusign-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}