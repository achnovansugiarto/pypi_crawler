{
  "info": {
    "author": "",
    "author_email": "Marie-Pierre Brungard <lirecouleur@arkaline.fr>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Natural Language :: French",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Education"
    ],
    "description": "# PyLireCouleur\n\nNovembre 2022\n\n## Préambule\n\nPyLireCouleur fait partie du projet LireCouleur dont le but est de fournir un ensemble d’outils destiné à aider les lecteurs débutants ou en difficulté à décoder les mots en utilisant les principes de la lecture en couleur. Ces outils peuvent également servir aux élèves dyslexiques et aux personnes apprenant le français comme langue étrangère.\n\nLe principe de l’outil est de mettre en évidence les sons et les syllabes de différentes manières. L’utilisateur peut ainsi choisir la présentation qui lui convient le mieux pour simplifier et accélérer le décodage.\n\n## Utilisation\n\nPyLireCouleur apporte le moteur de décomposition de mots ou de textes en phonèmes ou en syllabes.\n\n### Traitement de mots isolés\n\nLes mots isolés sont traités en important **lirecouleur.word** .\n\n#### Décodage en phonèmes\n\nLa fonction **phonemes** produit un tableau des différents phonèmes décodés dans le mot. Un phonème est un tuple (**id phonème**, **lettres composant le phonème**).\n\n```python\nimport lirecouleur.word\nlirecouleur.word.phonemes('éléphant')\n> [('e', 'é'), ('l', 'l'), ('e', 'é'), ('f_ph', 'ph'), ('a~', 'an'), ('#', 't')]\n```\n\n#### Décodage en syllabes\n\nLa fonction **syllables** produit un tableau des syllabes décodées dans le mot.\n\n```python\nimport lirecouleur.word\nlirecouleur.word.syllables('éléphant')\n> ['é', 'lé', 'phant']\n```\n\n### Traitement de textes\n\nLes textes sont traités en important **lirecouleur.text**. Les fonctions de décodage des phonèmes et des syllabes sont identiques aux exemples donnés ci-dessus.\n \n```python\nimport lirecouleur.text\nlirecouleur.text.phonemes('Les livres sont bien rangés')\n> [[('l', 'L'), ('e_comp', 'es')], ' ', [('l', 'l'), ('i', 'i'), ('v', 'v'), ('r'\n* 'r'), ('q_caduc', 'e'), ('#', 's')], ' ', [('s', 's'), ('o~', 'on'), ('#', 't')], ' ', [('b', 'b'), ('j_e~', 'ien')], ' ', [('r', 'r'), ('a~', 'an'), ('z^_g', 'g'), ('e', 'é'), ('#', 's')]]\n\nlirecouleur.text.syllables('Les livres sont bien rangés')\n> [['Les'], ' ', ['li', 'vres'], ' ', ['sont'], ' ', ['bien'], ' ', ['ran', 'gés']]\n```\n\nLes résultats sont des tableaux de mots décodés ou de portions de texte non décodé (ex. : ponctuation, espaces, nombres, etc.)\n\n## Liste des phonèmes décodés\n\n* verb_3p : terminaison des verbes en **ent**\n* # : phonème muet -- blon**d**\n* q_caduc : [e] caduc -- pilot**e**\n* a : [a] -- ch**a**t\n* q : [e] -- ch**e**val\n* i : [i] -- l**i**t\n* o : [o] écrit avec un **o** -- gr**o**s\n* o_comp : [o] écrit avec **au**, **eau**, etc. -- b**eau**\n* o_ouvert : [o] ouvert -- car**o**sse\n* u : [ou] -- l**ou**p\n* y : [u] -- b**u**lle\n* e : [é] écrit **é** -- bl**é**\n* e_comp : [é] écrit **ez**, **er**, etc. -- n**ez**\n* w : [w]\n* wa : [oi] -- b**oi**s\n* w5 : [oin] -- l**oin**\n* e^ : [è] écrit **è** ou **ê** -- ch**ê**vre\n* e^_comp : [è] écrit **ei**, **ait**, etc. -- ch**ai**se\n* a~ : [an] -- ch**an**te\n* e~ : [in] -- v**in**, gr**ain**\n* x~ : [un] -- **un**, br**un**\n* o~ : [on] -- gr**on**de, b**om**be\n* x : [eu] ouvert -- n**eu**ve\n* x^ : [eu] fermé -- d**eu**x, bl**eu**\n* p : [p] -- **p**a**p**a\n* t : [t] -- **t**ê**t**u\n* k : [k] écrit avec **k** ou **c** -- **c**o**q**\n* k_qu : [k] écrit avec **qu** -- co**qu**e\n* b : [b] -- **b**ille\n* d : [d] -- **d**os\n* g : [g] -- **g**omme\n* g_u : [gu] écrit avec **gu** -- lon**gu**e\n* f : [f] écrit avec **f** -- **f**icelle\n* f_ph : [f] écrit avec **ph** -- **ph**asme\n* s : [s] -- vi**ss**er\n* s_c : [s] écrit avec **c** -- **c**il\n* s_t : [s] écrit avec **t** -- quan**t**ien\n* s_x : [s] écrit avec **x**\n* s^ : [ch] -- **ch**at\n* v : [v] -- **v**ache\n* z : [z] écrit avec **z** -- **z**éro\n* z_s : [z] écrit avec la lettre **s** -- bali**s**e\n* z^ : [ge] écrit avec **j** -- **j**oli\n* z^_g : [ge] -- allon**g**é\n* m : [m] -- **m**a**m**an\n* n : [n] -- **n**ul\n* l : [l] -- **l**i**l**as\n* r : [r] -- **r**at\n* ks : [ks] -- e**x**quise\n* gz : [gz] -- e**x**ercice\n* j : [ill] -- b**ill**e\n* n~ : [gn] -- poi**gn**ant\n* g~ : [ng] -- planni**ng**\n\n## Paramètres de décodage\n\n### Fonction \"phonemes\"\n\n**novice_reader** : 0 / 1\n* 1 : considère **i**+voyelle (ex. : piano) comme deux phonèmes distincts  \n* 0 : considère **i**+voyelle (ex. : piano) comme des semi-voyelles\n\n**mode** : SYLLABES_ECRITES / SYLLABES_ORALES\n* SYLLABES_ECRITES : les [e] caducs en fin de mot sont considérés comme prononcés et sont transformés en phonème q   \n* SYLLABES_ORALES : les [e] caducs en fin de mot sont conservés en l'état   \n\n### Fonction \"syllables\"\n\n**novice_reader** : 0 / 1\n* 1 : considère **i**+voyelle (ex. : piano) comme deux phonèmes distincts  \n* 0 : considère **i**+voyelle (ex. : piano) comme des semi-voyelles\n\n**mode** : **(** SYLLABES_STD / SYLLABES_LC **,** SYLLABES_ECRITES / SYLLABES_ORALES **)**\n* SYLLABES_STD : segmentation des syllabes entre 2 consonnes identiques successives - ex. : /som/me/\n* SYLLABES_LC : segmentation des syllabes après 2 consonnes identiques successives - ex. : /so/mme/\n* SYLLABES_ECRITES : les [e] caducs en fin de mot sont considérés comme prononcés et sont transformés en phonème q   \n* SYLLABES_ORALES : les [e] caducs en fin de mot sont conservés en l'état   \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pylirecouleur",
    "package_url": "https://pypi.org/project/pylirecouleur/",
    "platform": null,
    "project_url": "https://pypi.org/project/pylirecouleur/",
    "project_urls": {
      "Bug Tracker": "https://framagit.org/arkaline/pylirecouleur/issues",
      "Homepage": "https://framagit.org/arkaline/pylirecouleur"
    },
    "release_url": "https://pypi.org/project/pylirecouleur/0.0.5/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Parse french texts into phonemes and syllables",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15587611,
  "releases": {
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbbfd05c8d2d7104f80ef0437fff23528c6a720a421a29e157851aaed16cc3be",
          "md5": "e45b350367d4777db1542d9660a7a9f4",
          "sha256": "acb9ff03a28ce4be75223f268246186f07736f812493b7473b70eb43af305729"
        },
        "downloads": -1,
        "filename": "pylirecouleur-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e45b350367d4777db1542d9660a7a9f4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 37251,
        "upload_time": "2022-10-30T09:32:44",
        "upload_time_iso_8601": "2022-10-30T09:32:44.855062Z",
        "url": "https://files.pythonhosted.org/packages/db/bf/d05c8d2d7104f80ef0437fff23528c6a720a421a29e157851aaed16cc3be/pylirecouleur-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27d7f49874c949ba7869f462c635ee48f2a70c1ddb80168ecdb94578d6d8859b",
          "md5": "ff78ba3528555e7b1bc14fc561f579ba",
          "sha256": "177d379981650f4b1111a23b7daeb55c8b749efe0366d37b91350b2d4856e305"
        },
        "downloads": -1,
        "filename": "pylirecouleur-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ff78ba3528555e7b1bc14fc561f579ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 37406,
        "upload_time": "2022-10-30T09:32:46",
        "upload_time_iso_8601": "2022-10-30T09:32:46.746103Z",
        "url": "https://files.pythonhosted.org/packages/27/d7/f49874c949ba7869f462c635ee48f2a70c1ddb80168ecdb94578d6d8859b/pylirecouleur-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a21a311aa8d392b425ead87dcfbf99ebdac29f16817d7df18c0d96e34f23472a",
          "md5": "73e65d23ee77db9915fd720ae1de7f0b",
          "sha256": "b5792388170461c1f1c6950db1a7b728f9b55d38c81b4f7899dd151ef92aced7"
        },
        "downloads": -1,
        "filename": "pylirecouleur-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73e65d23ee77db9915fd720ae1de7f0b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 37060,
        "upload_time": "2022-10-30T15:55:10",
        "upload_time_iso_8601": "2022-10-30T15:55:10.983909Z",
        "url": "https://files.pythonhosted.org/packages/a2/1a/311aa8d392b425ead87dcfbf99ebdac29f16817d7df18c0d96e34f23472a/pylirecouleur-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a83fe597917c5defdb27e82fa9cda5276b6796c71a67d2393ee382162d2d17b",
          "md5": "f13c97a4e131ad701ef3dc30e7f5462c",
          "sha256": "40efc1e9daf71f1244b89b20b75a51b17ee38d707e7fa7b8777b6b9492b790f6"
        },
        "downloads": -1,
        "filename": "pylirecouleur-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f13c97a4e131ad701ef3dc30e7f5462c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 36987,
        "upload_time": "2022-10-30T15:55:12",
        "upload_time_iso_8601": "2022-10-30T15:55:12.713110Z",
        "url": "https://files.pythonhosted.org/packages/6a/83/fe597917c5defdb27e82fa9cda5276b6796c71a67d2393ee382162d2d17b/pylirecouleur-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a21a311aa8d392b425ead87dcfbf99ebdac29f16817d7df18c0d96e34f23472a",
        "md5": "73e65d23ee77db9915fd720ae1de7f0b",
        "sha256": "b5792388170461c1f1c6950db1a7b728f9b55d38c81b4f7899dd151ef92aced7"
      },
      "downloads": -1,
      "filename": "pylirecouleur-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "73e65d23ee77db9915fd720ae1de7f0b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 37060,
      "upload_time": "2022-10-30T15:55:10",
      "upload_time_iso_8601": "2022-10-30T15:55:10.983909Z",
      "url": "https://files.pythonhosted.org/packages/a2/1a/311aa8d392b425ead87dcfbf99ebdac29f16817d7df18c0d96e34f23472a/pylirecouleur-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6a83fe597917c5defdb27e82fa9cda5276b6796c71a67d2393ee382162d2d17b",
        "md5": "f13c97a4e131ad701ef3dc30e7f5462c",
        "sha256": "40efc1e9daf71f1244b89b20b75a51b17ee38d707e7fa7b8777b6b9492b790f6"
      },
      "downloads": -1,
      "filename": "pylirecouleur-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "f13c97a4e131ad701ef3dc30e7f5462c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 36987,
      "upload_time": "2022-10-30T15:55:12",
      "upload_time_iso_8601": "2022-10-30T15:55:12.713110Z",
      "url": "https://files.pythonhosted.org/packages/6a/83/fe597917c5defdb27e82fa9cda5276b6796c71a67d2393ee382162d2d17b/pylirecouleur-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}