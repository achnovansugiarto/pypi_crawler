{
  "info": {
    "author": "Amal Agishev",
    "author_email": "swintages@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "# Kinopoisk_films API\r\n\r\n## content\r\n\r\n0. [introduction](#introduction)\r\n1. [Getting started](#Getting-started)\r\n2. [Working with code](#Working-with-code)\r\n3. [Description of functions](#Description-of-functions)\r\n    \r\n## introduction\r\nThis API is used to get data from the kinopoisk website\r\n____\r\n[:arrow_up:content](#content)\r\n___\r\n## Getting started\r\n\r\n### To work you will need the library\r\n[Requests](https://pypi.org/project/requests/) \r\n\r\n### As well as the API key, which can be obtained on the site \r\n[kinopoiskapiunofficial](https://kinopoiskapiunofficial.tech/user)\r\n\r\n### Install the Library\r\n[filmapis](https://pypi.org/project/filmapis)\r\n```\r\npip install filmapis\r\n```\r\n\r\n### Connecting the library\r\n```py\r\nimport filmapis.filmapis as fa\r\n```\r\n____\r\n[:arrow_up:content](#content)\r\n____\r\n## Working with code\r\n\r\n### Creating an object is performed by passing the api key received from the site to the function \r\n[site](https://kinopoiskapiunofficial.tech/user)\r\n```py\r\nobject_api = API_Cinema('API-KEY')\r\n```\r\n____\r\n[:arrow_up:content](#content)\r\n____\r\n## Description of functions\r\n\r\n### Films\r\n#### Search by keyword\r\n```py\r\nobject_api.get_by_keyword(text)\r\n```\r\n____\r\n#### Search by id on kinopoisk\r\n```py\r\nobject_api.get_data_film(id_kinopoisk, append_to_response='RATING')\r\n```\r\n____\r\n#### We take screenshots from the movie\r\n```py\r\nobject_api.get_frame_film(id_kinopoisk)\r\n```\r\n____\r\n#### We take videos related to the film (trailers, clippings)\r\n```py\r\nobject_api.get_trailer_film(id_kinopoisk)\r\n```\r\n____\r\n#### We take the sequels and prequels of the film\r\n```py\r\nobject_api.get_sequels_and_prequels_film(id_kinopoisk)\r\n```\r\n____\r\n#### We take all the filters\r\n```py\r\nobject_api.get_filters()\r\n```\r\n____\r\n#### We take movies by filter\r\n```py\r\nobject_api.get_film_in_filters(counry=[], genre=[], order = 'RATING', types='ALL', ratingFrom=0, ratingTo=10, yearFrom=1888, yearTo=2021, page=1)\r\n```\r\n____\r\n#### We take films by the top\r\n```py\r\nobject_api.get_top_films(types='TOP_100_POPULAR_FILMS', page=1)\r\n```\r\n____\r\n#### We take similar movies\r\n```py\r\nobject_api.et_similars_film(id_kinopoisk)\r\n```\r\n____\r\n#### We take the films that were released by the filter\r\n```py\r\nobject_api.get_releaze_film(year = 2021, month = 'JANUARY', page=1)\r\n```\r\n____\r\n#### We take data on the studio that was shooting\r\n```py\r\nobject_api.get_studios_date(id_kinopoisk)\r\n```\r\n### reviews\r\n#### We take reviews\r\n```py\r\nobject_api.get_reviews(id_kinopoisk, page=1)\r\n```\r\n____\r\n#### We take detailed reviews\r\n```py\r\nobject_api.get_reviews_details(id_reviews)\r\n```\r\n### Staff\r\n#### We take everyone who worked on the film\r\n```py\r\nobject_api.get_staff(id_kinopoisk)\r\n```\r\n____\r\n#### erem detailed information about the employee\r\n```py\r\nobject_api.get_staff_details(id_person)\r\n```\r\n[:arrow_up:content](#content)\r\n\r\n\r\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/WTTeneger/kinopoisk_api",
    "keywords": "funniest joke comedy flying circus",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "filmapis",
    "package_url": "https://pypi.org/project/filmapis/",
    "platform": "",
    "project_url": "https://pypi.org/project/filmapis/",
    "project_urls": {
      "Homepage": "https://github.com/WTTeneger/kinopoisk_api"
    },
    "release_url": "https://pypi.org/project/filmapis/0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "The funniest joke in the world",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10521731,
  "releases": {
    "0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21410a0884a658d4c17b80e16dbefe659c204789847f851e3c6e3d5a3a8ae6b7",
          "md5": "27264a54df4b61f7fc73d51641fb4585",
          "sha256": "ff18d35715163ed79453c627a33e199b2c23e215608f4766fb6b077fe9e78e7e"
        },
        "downloads": -1,
        "filename": "filmapis-0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "27264a54df4b61f7fc73d51641fb4585",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2937,
        "upload_time": "2021-05-31T19:15:30",
        "upload_time_iso_8601": "2021-05-31T19:15:30.703933Z",
        "url": "https://files.pythonhosted.org/packages/21/41/0a0884a658d4c17b80e16dbefe659c204789847f851e3c6e3d5a3a8ae6b7/filmapis-0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b34d8ebcdc2e88c4124a20890c996eee2435537348e5a86e789fbf2cd8a8a454",
          "md5": "3ffe7a5121d6a61231f57da67bc5c0f8",
          "sha256": "cf47f24ce7c04f3bbc0470c49a9d6bbbec84b20a4320547037f3c530ead010b7"
        },
        "downloads": -1,
        "filename": "filmapis-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3ffe7a5121d6a61231f57da67bc5c0f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1306,
        "upload_time": "2021-05-31T19:37:10",
        "upload_time_iso_8601": "2021-05-31T19:37:10.321004Z",
        "url": "https://files.pythonhosted.org/packages/b3/4d/8ebcdc2e88c4124a20890c996eee2435537348e5a86e789fbf2cd8a8a454/filmapis-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0663a133d91aa37ffe396f57b11247db89fd3cbfd40832a55316fcefc0a03bf9",
          "md5": "86e76479ff99cc59717004c5fca3d8c2",
          "sha256": "3582f8babf6fdc16c9cecf3fd4bed8cd7569c9a0713cc970da0d21a679342160"
        },
        "downloads": -1,
        "filename": "filmapis-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "86e76479ff99cc59717004c5fca3d8c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2333,
        "upload_time": "2021-05-31T20:18:56",
        "upload_time_iso_8601": "2021-05-31T20:18:56.370606Z",
        "url": "https://files.pythonhosted.org/packages/06/63/a133d91aa37ffe396f57b11247db89fd3cbfd40832a55316fcefc0a03bf9/filmapis-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0663a133d91aa37ffe396f57b11247db89fd3cbfd40832a55316fcefc0a03bf9",
        "md5": "86e76479ff99cc59717004c5fca3d8c2",
        "sha256": "3582f8babf6fdc16c9cecf3fd4bed8cd7569c9a0713cc970da0d21a679342160"
      },
      "downloads": -1,
      "filename": "filmapis-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "86e76479ff99cc59717004c5fca3d8c2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2333,
      "upload_time": "2021-05-31T20:18:56",
      "upload_time_iso_8601": "2021-05-31T20:18:56.370606Z",
      "url": "https://files.pythonhosted.org/packages/06/63/a133d91aa37ffe396f57b11247db89fd3cbfd40832a55316fcefc0a03bf9/filmapis-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}