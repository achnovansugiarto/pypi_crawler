{
  "info": {
    "author": "Maxime",
    "author_email": "emixampons@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# PyQoL\n\nThis package contains a lot of feature for Quality of Life, functionnal programming, and others.\n\n\n> Big titles represent modules, so for imports, you need to use `from pyqol.MODULE import function`\n\n# `.CORE`\n\n## `codedit`\n\nCodedit is a decorator that lets you change the source code of a function using regexes. Sadly the syntax has to be \"python-valid\" before, but the code doesn't have to mean anything though.\n\n```py\nfrom pyqol.CORE import codedit\n\n@codedit(\"oooooooone\", \"1\")\ndef add_one(x):\n    return x + oooooooone\n@codedit(r\"_(.+)_more_than\\[(.+)\\]\", r\"\\2 + \\1\")\ndef add_one(x):\n    return _1_more_than[x]\n```\nObviously, in that case it's not that useful, but I'm sure you can find some hacks using it :)\n\n## `Codedits`\n\nIs a class that contains all known useful codedits.\n\n### `.Lambda`\n\nLets you define a custom lambda operator.\n```py\nfrom pyqol.CORE import Codedits\n\n@Codedits.Lambda(\">>\")\ndef add_one(x):\n    ld = {a >> a + 1}\n    return ld(x)\n```\nValid lambdas include: `-1>`, `>`, `:`, `>>`, ..\n\n# `.Bittors` (better iterators)\n\n## `I` is the new `range`\n\n```py\nfrom pyqol.Bittors import I, IC, IE, IR, Multiterator\n```\n\n`I`, and its brothers `IR`, `IC`, `IE` are iteration functions, used to create loops.\nIt will iterate over any iterable, and transform a `int` argument into a range from `0` to this `int`. Negative `int`s lead to a backwards loop.\nIt will iterate over all arguments at the same time, and zip them.\n\nArguments are:\n```haskell\nI(*args, revserse = False, enum = False, chunking=False, chunk_size=1)\n```\n\n`Enum = True` is the same as zipping with `I(None)`, which returns an infinite loop. It also can be called with `IE`\n\nChunking, also called by `IC` returns multiple values at once, in a tuple.\n```py\nIC(-8, chunk_size=2) -> (7, 6), (5, 4), (3, 2), (1, 0)\n```\n\n> No `start, end, step` here, all arguments are the iterations\n\n## `Multiterator`\nThis lets you handle complex iteration patterns while not suffering from the usual problems caused by having nested loops.\nHere, an example speaks for itself:\n```py\nmy_iterator = Multiterator()\nfor i in my_iterator(\"outer range loop\", 5):\n    for j, k in my_iterator(\"inner zip loop\", x, z):\n        if ...\n          my_iterator.stop(\"inner zip loop\")\n        if ...\n          my_iterator.stop(\"outer range loop\")\n        if ...\n          my_iterator.stop(Multiterator.all)\n```\n\n> Multiterator's call works exactly like a `I` call.\n\n# `.Structs`\n\n## `Struct`\n\nStruct takes any arguments when created, and stores them. It is similar to a JS object.\n```py\nfrom pyqol.Structs import Struct\n\nmy_object = Struct(health=100, strength=20)\nmy_object.sword = Swords.Diamond\ndef _run(self: Struct):\n    pass\nmy_object.run = _run\nmy_object.run()\nsword_type = my_object.get(\"sword\")\nwill_return_none = my_object.get(\"Flamingo\")\n```\n\n## `Registry`\n\nYou can create registers of functions (for plugin management, or special scoping), by creating a registry:\n```py\nfrom pyqol.Structs import Registry\n\nr = Registry()\n```\nThen, you can register functions in it, and access them that way.\n```py\n@r.register\ndef my_happy_little_function(x):\n    print(f\"happy little {x}\")\n\nr.registry[\"my_happy_little_function\"](\"accident\")\nr[\"my_happy_little_function\"](\"programmer\")\n```\n\n## `NaV`\nis a substitute for a value, like `Nothing` in FP, or `NaN` in JS. It nullifies any operation done to it, and logs them internally. This means that you can have a program fail silently, and still know what happened to that variable.\n```py\nfrom pyqol.Structs import NaV\n\ndef div(a, b):\n    if b == 0: return NaV(\"Division by 0\")\n    return a / b\nfoo = div(8, 0)\nbar = foo * 8 + 5\nprint(bar)\n```\n```c\nNot a Value !\nMessage: Division by 0\nLogs:\nOperation mult with 8\nOperation add with 5\n```\n\n> Most external libs won't be compatible with this, it might not always be optimal to use NaV.\n\n## `Stream`\n\nThis is a big feature, quite hard to explain properly.\nA stream works like a queue, for iterables and lazy evaluation. You can add four things to a Stream's queue: Literals, Lists (anything that can turn into a list), Iterable (no ranges) and Generators.\nA few examples will speak for themselves.\n\n```py\nfrom pyqol.Structs import Stream\n\nfor i in Stream([1, 2, 3]):\n    print(i) #1, 2, 3\n\nmy_stream = Stream() << 1 << 2 << 3\nlist(my_stream) == [1, 2, 3]\n\nfor i in my_stream:\n    ...\n    my_stream << next_val << other_val\n```\n\n### `Stream.List`\n\n```py\nmy_stream << Stream.List([1, 2, 3, 4, 5])\n```\n\n### `Stream.Iterable`\n\n```py\nmy_stream << Stream.Iterable(I(12))\nmy_stream << other_stream # streamception\n```\n\n### `Stream.Generator`\n\nFor this, you have multiple options. This lets you generate the next element of the stream depending on the index of the element, and the elements prior.\n```py\ns << Stream.Generator(3, lambda idx: idx * 2, require_index=True)\n# 0, 2, 4\ns << Stream.Generator(5, lambda a: a * 2)\n# 4*2, 16, 32, 64, 128\n```\nNow, let's create the easiest fibonacci iterator ever ! Don't worry about performence, it's autocached !\n```py\n# first define a basecase\nfib = Stream(cache_size=50) << 1 << 1 \n# None means it'll generate forever\nfib << Stream.Generator(None, lambda a, b: a + b)\nfor i in fib[:20]:\n    print(i) # 1, 1, 2, 3, 5, ....\n```\n\n## `BitStorage`\n\nThis lets you store custom datatypes, giving you access to bitwise storage. To define thoe datatypes, all you need is a dict listing the properties and their allocated number of bits, then you can generate entities of that type, and use masks to get properties fast.\n```py\n# define the type\nChessPiece = BitStorage({\n    \"color\": 1,\n    \"kind\": 3, \n})\nwhite_queen = ChessPiece.new({\n    \"color\": 0b0,\n    \"kind\": 0b111,\n})\ncolor = ChessPiece.get(white_queen, \"color\")\nwhite_queen == 0b0111\n```\n\n# `.FP`\n\n## `Function`\nYou can decorate one of your functions with `Function` to access function composition, and other features.\n```py\nfrom pyqol.FP import Funtion, F\n\n@Function\ndef add_two(n): return n + 2\nmult_by_two = Function(lambda x: x * 2)\n\nadd_then_mult = (add_two + mult_by_two)\nmult_then_add = (add_two * mult_by_two)\n```\n\n## `Bunction` (better function)\n\nThis class is a superset of `Function`, which allows for cool setups. Let's implement the fibonacci function with it, in a very defensive manner:\n```python\n# First, setup the default case\nfrom pyqol.FP import Bunction, B\n\n@Bunction\ndef fib(n):\n    return fib(n-1) + fib(n-2) \n```\nAlone, this function doesn't work, it needs to return `1` if the input is `0` or `1`. We can easily patch this by adding cases, which will overwrite the default.\n```py\n#if x is 0, this case will be executed\n@fib.case(lambda x : x == 0)\ndef _one(x): return 1\n```\nYes, this is ugly, that's why you can also do this:\n```py\n# if input is 1, return 1\nfib.case(1)(1)\n```\nNow, let's do a little defensive programming, and make our function idiot-proof:\n```py\nfib.case(lambda x : x < 0)(0)\n```\nWe can even preprocess the inputs, to fit in one of our cases when it couldn't before\n```py\n@fib.preprocess(lambda x : type(x) == str)\ndef _exec(x):\n    if x.isnumber(): # implement your own isnumber, python doesn't have one for floats for some reason\n        return float(x) # will then be converted to a float\n    else:\n        return 0 # will input 0 to fib\n\n# Then, convert floats to ints\nfib.preprocess(lambda x : type(x) == float)(lambda x : int(x))\n```\n\n## `Map`\n\n```py\nfrom pyqol.FP import Map\n```\n\nA new tool for iterating, the `Map`\n\n## `Map.over`\n\nMap over is a curried function taking in an iterable, then a function, and outputs a new `L`ist of the results of the function. You can use it as a decorator, or as a normal function call\n```py\nMap.over([0, 1, 2, 3])(lambda x : x * 2) == L(0, 2, 4, 6)\n@Map.over([0, 1, 2, 3])\ndef newlist(e):\n    return e * 2\nnewlist == L(0, 2, 4, 6)\n```\n\nThat last functionnality might look extremely wierd, and it does, but it can be practical if used correctly.\nIf you have a set of objects you iterate over everywhere in the code, that you might change, why not have them all in once place ?\n```py\nagents = L(...)\nForAllAgents = Map.over(agents)\n#...\n@ForAllAgents\ndef training_log(agent):\n    #...\n    return log_info\nprint(training_log)\n```\n\n## `Map.using`\n\nIt is the exact same as `Map.over`, but the argument order is swapped.\n```py\n@Map.using\ndef mult_list_by_two(e):\n    return e * 2\nmult_list_by_two([0, 1, 2, 3]) == L(0, 2, 4, 6)\n```\n\n## `Helpers`\n\n```py\nfrom pyqol.FP import Helpers\n```\n\n## `.timer`\n\nA simple decorator for debugging the execution time of a function:\n```py\n@Helpers.timer\ndef takes_long():\n    for i in I(None):\n        if i == int(1e12): break;\ntakes_long() # will print:\n# Finished takes_long in x secs\n```\n\n# `ML`\n\nA collection of helpers for making Neural Networks !\nFor now, most of the supported code is in PyTorch, so feel free to sumbit equivalents in other frameworks !\n\n> Requires torch :(\n\n## `PyTorchModules`\n\n```py\nfrom pyqol.ML import PyTorchModules\n```\n\n### `.Flatten`\n### `.Residual`\n### `.LowerBound`\n### `.GDN`\n\n# `All`\n\nEasier imports (requires the dependencies from all the modules though..)\n\n```py\nfrom pyqol.All import Struct, Helpers, I, B\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://maxime.codes/Libraries/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyqol",
    "package_url": "https://pypi.org/project/pyqol/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyqol/",
    "project_urls": {
      "Homepage": "https://maxime.codes/Libraries/"
    },
    "release_url": "https://pypi.org/project/pyqol/0.1.1.0/",
    "requires_dist": [
      "fastcore"
    ],
    "requires_python": ">=3.6",
    "summary": "A Pack of useful python QoL changes",
    "version": "0.1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9829479,
  "releases": {
    "0.0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec2be7171d9f57735c9b7ec1eecff00374f6c0eee9c7e6b4699bbf92bd76b86f",
          "md5": "93fc84d77aad0ec44414d1ac87a2bfb2",
          "sha256": "d93c8c4c570f4a774e85db9660715a8a2af25a41f8c7657d27e0448efda7630b"
        },
        "downloads": -1,
        "filename": "pyqol-0.0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93fc84d77aad0ec44414d1ac87a2bfb2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6980,
        "upload_time": "2020-10-26T11:20:04",
        "upload_time_iso_8601": "2020-10-26T11:20:04.686778Z",
        "url": "https://files.pythonhosted.org/packages/ec/2b/e7171d9f57735c9b7ec1eecff00374f6c0eee9c7e6b4699bbf92bd76b86f/pyqol-0.0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02ef0090df0ff1a5b63fc71671d10ec4f986c84139c48cfe286800901a093e11",
          "md5": "666291432dc105eb4f58530ddc865713",
          "sha256": "1301aa195df4f291e160f1f233e5534429e7346deb6ce307f03591cea17096a0"
        },
        "downloads": -1,
        "filename": "pyqol-0.0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "666291432dc105eb4f58530ddc865713",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5423,
        "upload_time": "2020-10-26T11:21:33",
        "upload_time_iso_8601": "2020-10-26T11:21:33.699022Z",
        "url": "https://files.pythonhosted.org/packages/02/ef/0090df0ff1a5b63fc71671d10ec4f986c84139c48cfe286800901a093e11/pyqol-0.0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a6f860e8578fa35ef0231a344d9f5419e26f8fa45ef53f9694db58d9530778a",
          "md5": "e5276b010ec69646a62ca0fc7b7d8fc7",
          "sha256": "4f8c87b28a57af3f2c28ca3702a6b920f32096d3d71d3e0e505909c1965c92ee"
        },
        "downloads": -1,
        "filename": "pyqol-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5276b010ec69646a62ca0fc7b7d8fc7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4108,
        "upload_time": "2020-10-26T11:16:41",
        "upload_time_iso_8601": "2020-10-26T11:16:41.531750Z",
        "url": "https://files.pythonhosted.org/packages/2a/6f/860e8578fa35ef0231a344d9f5419e26f8fa45ef53f9694db58d9530778a/pyqol-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a60eb3c5b8e040cfb072630f836cd4ceb3f927c2028b0a575559175717621059",
          "md5": "c60f55e179175a23820993d8439321c6",
          "sha256": "b5240566b1c0aba55f0d7941acfb86b68c0489c602be8577e08518d95f21d4aa"
        },
        "downloads": -1,
        "filename": "pyqol-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c60f55e179175a23820993d8439321c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3733,
        "upload_time": "2020-10-26T11:16:45",
        "upload_time_iso_8601": "2020-10-26T11:16:45.482150Z",
        "url": "https://files.pythonhosted.org/packages/a6/0e/b3c5b8e040cfb072630f836cd4ceb3f927c2028b0a575559175717621059/pyqol-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7015f7cc0c739eb7519723f8746e9aba408befc861b9e3d0d5217cbe3af24086",
          "md5": "0ebddc692c68b68ece150acf9d7f3b2c",
          "sha256": "f58e582d786214ce633b4c5f2f4e76d8cb602ec647493e428fa83b92ff775d8b"
        },
        "downloads": -1,
        "filename": "pyqol-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ebddc692c68b68ece150acf9d7f3b2c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6960,
        "upload_time": "2020-10-26T11:21:31",
        "upload_time_iso_8601": "2020-10-26T11:21:31.274784Z",
        "url": "https://files.pythonhosted.org/packages/70/15/f7cc0c739eb7519723f8746e9aba408befc861b9e3d0d5217cbe3af24086/pyqol-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83e1bd8603d447df2fffc907e60c3870f70de702482e690e29b02da148e1276e",
          "md5": "b03f550a2b96d307cc0a1300d5d127ba",
          "sha256": "b1646fd53c4e3d1e14661ab91ee67c694a007d0e3b5c1363e33918d47076f073"
        },
        "downloads": -1,
        "filename": "pyqol-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b03f550a2b96d307cc0a1300d5d127ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5427,
        "upload_time": "2020-10-26T11:21:35",
        "upload_time_iso_8601": "2020-10-26T11:21:35.710785Z",
        "url": "https://files.pythonhosted.org/packages/83/e1/bd8603d447df2fffc907e60c3870f70de702482e690e29b02da148e1276e/pyqol-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa06d47cfec147c1ace5daa848e0a7dbc0095f7f781e8384295305e27f58fe8e",
          "md5": "edb947829d85d0e909b37da0b35f62f4",
          "sha256": "aa823e74fdb7089c113fea6668f0ca9180e2f459f1659bd566d63cff2f7d2997"
        },
        "downloads": -1,
        "filename": "pyqol-0.0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "edb947829d85d0e909b37da0b35f62f4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6981,
        "upload_time": "2020-10-26T11:52:18",
        "upload_time_iso_8601": "2020-10-26T11:52:18.555897Z",
        "url": "https://files.pythonhosted.org/packages/aa/06/d47cfec147c1ace5daa848e0a7dbc0095f7f781e8384295305e27f58fe8e/pyqol-0.0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "979f19504bd8fd6194500894bcba340643a74d575e59167940691ed62ff46a33",
          "md5": "975d6e0afcf5151d5a2303bd7e3f1aa9",
          "sha256": "358f6a144c4536ba7ed41a2a9c1686e9d1e299ccb6d7199c11a9f9b6b77e4bdd"
        },
        "downloads": -1,
        "filename": "pyqol-0.0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "975d6e0afcf5151d5a2303bd7e3f1aa9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5429,
        "upload_time": "2020-10-26T11:52:20",
        "upload_time_iso_8601": "2020-10-26T11:52:20.874873Z",
        "url": "https://files.pythonhosted.org/packages/97/9f/19504bd8fd6194500894bcba340643a74d575e59167940691ed62ff46a33/pyqol-0.0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6dd9ff2d0981856d987d43b0c0990c904124a3651bb07fa7bd52942a80267391",
          "md5": "1897e220df008c7bfaa23cb1f6f65b08",
          "sha256": "ddd0356dd5649fa9d7dc0652ce062f3057317ce6fc456dfa73e490a00b64bccd"
        },
        "downloads": -1,
        "filename": "pyqol-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1897e220df008c7bfaa23cb1f6f65b08",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6957,
        "upload_time": "2020-10-26T13:41:28",
        "upload_time_iso_8601": "2020-10-26T13:41:28.579077Z",
        "url": "https://files.pythonhosted.org/packages/6d/d9/ff2d0981856d987d43b0c0990c904124a3651bb07fa7bd52942a80267391/pyqol-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d71b9c8ec18cff838a735613e24b080ce0c926ab9c170bbfaf3453930a697482",
          "md5": "ae724e5999a0005b2dede7b37bd18193",
          "sha256": "04842d6f84b8dbf8b0bc9d009dc6995b57de1ace99e2fa849c1ce13a761207dc"
        },
        "downloads": -1,
        "filename": "pyqol-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ae724e5999a0005b2dede7b37bd18193",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5430,
        "upload_time": "2020-10-26T13:41:31",
        "upload_time_iso_8601": "2020-10-26T13:41:31.170869Z",
        "url": "https://files.pythonhosted.org/packages/d7/1b/9c8ec18cff838a735613e24b080ce0c926ab9c170bbfaf3453930a697482/pyqol-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b364e6fda2a09b8700fa86131c1f1f5bc87f6d60f977765094a8af5f4330ff6",
          "md5": "69e1081e3a573d0901e952f9a834a183",
          "sha256": "2e954c3e0bf2e8cc6441cd2dc6cdd0523c4195eb6bfd7337591dea3376d18aa1"
        },
        "downloads": -1,
        "filename": "pyqol-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69e1081e3a573d0901e952f9a834a183",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8791,
        "upload_time": "2020-10-30T12:37:37",
        "upload_time_iso_8601": "2020-10-30T12:37:37.826714Z",
        "url": "https://files.pythonhosted.org/packages/1b/36/4e6fda2a09b8700fa86131c1f1f5bc87f6d60f977765094a8af5f4330ff6/pyqol-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdc833967fc77e9760be596a344be39d76b16653e44f1ede9e5b607c3ede86d2",
          "md5": "a500c4ddc0b8888e1a807b5e289d9cfa",
          "sha256": "388ce010055a11a069cdb1789947adc19b447d775d1cc356512a00f4324ae8ba"
        },
        "downloads": -1,
        "filename": "pyqol-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a500c4ddc0b8888e1a807b5e289d9cfa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7248,
        "upload_time": "2020-10-30T12:37:42",
        "upload_time_iso_8601": "2020-10-30T12:37:42.855280Z",
        "url": "https://files.pythonhosted.org/packages/fd/c8/33967fc77e9760be596a344be39d76b16653e44f1ede9e5b607c3ede86d2/pyqol-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89c057cfd5822ed8485b3adfe61d52e72647f4a0c54851e9a2eeb20188d51360",
          "md5": "e501f6bb9bede408c4a4d091c2b85dd1",
          "sha256": "1aab0d68314699faa81b4ff3f2c3dec36374440a232ff301144a7fec44fbc5fe"
        },
        "downloads": -1,
        "filename": "pyqol-0.0.4.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e501f6bb9bede408c4a4d091c2b85dd1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8863,
        "upload_time": "2020-12-20T11:38:40",
        "upload_time_iso_8601": "2020-12-20T11:38:40.709403Z",
        "url": "https://files.pythonhosted.org/packages/89/c0/57cfd5822ed8485b3adfe61d52e72647f4a0c54851e9a2eeb20188d51360/pyqol-0.0.4.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f28457fcd1a1be2db35d373d2d1b5f2ac5c5d1f6ea11c8700da8b55e7ba47f52",
          "md5": "2db65382452fa239208bb474d603c778",
          "sha256": "7ee8f2fdd0ad4a9ed0473784d162821f10d55a6b8635805944e3d63da2b130fe"
        },
        "downloads": -1,
        "filename": "pyqol-0.0.4.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2db65382452fa239208bb474d603c778",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7299,
        "upload_time": "2020-12-20T11:38:43",
        "upload_time_iso_8601": "2020-12-20T11:38:43.611904Z",
        "url": "https://files.pythonhosted.org/packages/f2/84/57fcd1a1be2db35d373d2d1b5f2ac5c5d1f6ea11c8700da8b55e7ba47f52/pyqol-0.0.4.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2d5b82cba7552cdd29532ba80b928db5672fe985b7319a924627e70aaaa3c7e",
          "md5": "43d2822985ab83675558a7e11954f4ee",
          "sha256": "fd0c07e36a99c5216abee460bb1ca4c9927cfd641f72ee96e8bab6e4d3fd4a99"
        },
        "downloads": -1,
        "filename": "pyqol-0.0.4.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "43d2822985ab83675558a7e11954f4ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10095,
        "upload_time": "2021-02-13T13:15:16",
        "upload_time_iso_8601": "2021-02-13T13:15:16.472297Z",
        "url": "https://files.pythonhosted.org/packages/d2/d5/b82cba7552cdd29532ba80b928db5672fe985b7319a924627e70aaaa3c7e/pyqol-0.0.4.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f321215b7580546d3377757aa27daa22545d997a8b48a485862d17bc58ebb7ac",
          "md5": "21f0e0ec67a7daa71457585d5ccee64a",
          "sha256": "24f0c95ede4013445e21bf3d0079da94b4b2554842b904684edcd84e4d03f52b"
        },
        "downloads": -1,
        "filename": "pyqol-0.0.4.6.tar.gz",
        "has_sig": false,
        "md5_digest": "21f0e0ec67a7daa71457585d5ccee64a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9411,
        "upload_time": "2021-02-13T13:15:18",
        "upload_time_iso_8601": "2021-02-13T13:15:18.999936Z",
        "url": "https://files.pythonhosted.org/packages/f3/21/215b7580546d3377757aa27daa22545d997a8b48a485862d17bc58ebb7ac/pyqol-0.0.4.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54c84d5dd0dfda0ce547cf562067905e05d5063ba0da72f9fa0003c89183ea90",
          "md5": "7510f2a93b0aa444c5c51ea61a5d87b0",
          "sha256": "8402dbe963aa77bd3dd5121cd70bb25223b41f946c65010724fedf25b99d6aad"
        },
        "downloads": -1,
        "filename": "pyqol-0.1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7510f2a93b0aa444c5c51ea61a5d87b0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12121,
        "upload_time": "2021-02-14T14:02:26",
        "upload_time_iso_8601": "2021-02-14T14:02:26.947801Z",
        "url": "https://files.pythonhosted.org/packages/54/c8/4d5dd0dfda0ce547cf562067905e05d5063ba0da72f9fa0003c89183ea90/pyqol-0.1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2eebef4b869b10685466c4f64c60f44fd88486cf935fe52e8a533ff0951be828",
          "md5": "145a9e23d0a61751cadfc44855272f6d",
          "sha256": "c4207ff7df294f47ee19e0fdb4fef5acfcad7706c770b1756aa3d92c7ea53e3b"
        },
        "downloads": -1,
        "filename": "pyqol-0.1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "145a9e23d0a61751cadfc44855272f6d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14417,
        "upload_time": "2021-02-14T14:02:28",
        "upload_time_iso_8601": "2021-02-14T14:02:28.610963Z",
        "url": "https://files.pythonhosted.org/packages/2e/eb/ef4b869b10685466c4f64c60f44fd88486cf935fe52e8a533ff0951be828/pyqol-0.1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "599f23ead60953fa32d4088e2f99a52712dacd0128e8f60a10e03cc66b66bf65",
          "md5": "22d10466229342e5b5c2c436498dec70",
          "sha256": "e2b20bd0f4f271af593a2891666e488dcf38c0fdaf1487bba38dde0a17d66762"
        },
        "downloads": -1,
        "filename": "pyqol-0.1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "22d10466229342e5b5c2c436498dec70",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15899,
        "upload_time": "2021-03-20T15:10:55",
        "upload_time_iso_8601": "2021-03-20T15:10:55.210782Z",
        "url": "https://files.pythonhosted.org/packages/59/9f/23ead60953fa32d4088e2f99a52712dacd0128e8f60a10e03cc66b66bf65/pyqol-0.1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4d45ea67859c6cd8033396a34b347e6777e8dc83d8c48c2bb612c04d698caf0",
          "md5": "334a08f20af66da428c9279aac500685",
          "sha256": "7210cbc97288fa234603b63922eaf6808931930f552fbe83d4b70a187582647d"
        },
        "downloads": -1,
        "filename": "pyqol-0.1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "334a08f20af66da428c9279aac500685",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15142,
        "upload_time": "2021-03-20T15:10:57",
        "upload_time_iso_8601": "2021-03-20T15:10:57.649063Z",
        "url": "https://files.pythonhosted.org/packages/a4/d4/5ea67859c6cd8033396a34b347e6777e8dc83d8c48c2bb612c04d698caf0/pyqol-0.1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "599f23ead60953fa32d4088e2f99a52712dacd0128e8f60a10e03cc66b66bf65",
        "md5": "22d10466229342e5b5c2c436498dec70",
        "sha256": "e2b20bd0f4f271af593a2891666e488dcf38c0fdaf1487bba38dde0a17d66762"
      },
      "downloads": -1,
      "filename": "pyqol-0.1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "22d10466229342e5b5c2c436498dec70",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 15899,
      "upload_time": "2021-03-20T15:10:55",
      "upload_time_iso_8601": "2021-03-20T15:10:55.210782Z",
      "url": "https://files.pythonhosted.org/packages/59/9f/23ead60953fa32d4088e2f99a52712dacd0128e8f60a10e03cc66b66bf65/pyqol-0.1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4d45ea67859c6cd8033396a34b347e6777e8dc83d8c48c2bb612c04d698caf0",
        "md5": "334a08f20af66da428c9279aac500685",
        "sha256": "7210cbc97288fa234603b63922eaf6808931930f552fbe83d4b70a187582647d"
      },
      "downloads": -1,
      "filename": "pyqol-0.1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "334a08f20af66da428c9279aac500685",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 15142,
      "upload_time": "2021-03-20T15:10:57",
      "upload_time_iso_8601": "2021-03-20T15:10:57.649063Z",
      "url": "https://files.pythonhosted.org/packages/a4/d4/5ea67859c6cd8033396a34b347e6777e8dc83d8c48c2bb612c04d698caf0/pyqol-0.1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}