{
  "info": {
    "author": "Andrew Helgeson",
    "author_email": "andrew.w.helgeson@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha"
    ],
    "description": "CrashPlan API\r\n=============\r\nThis project aims to provide a simple interface to the public resources\r\nof the CrashPlan API with support for the new versioned API.\r\n\r\nExamples\r\n========\r\n***NOTE!!*** The current state of the project isn't here yet but this is the goal.\r\n\r\n    # Simple request to Computer resource (most recent version)\r\n    >>> resp = Platform42Api.get(\"crashplan.com\", Computer, APISession())\r\n    >>> resp.data.computerId\r\n    42\r\n\r\n    # Same resource but older version\r\n    >>> params = { 'some_old_api_param' : 'foo' }\r\n    >>> resp = Platform42Api.get(\"crashplan.com\", Computer, APISession(maxVersion=0), data=params) # Use an old api\r\n    >>> resp.data.oldApiValue\r\n    'bar'\r\n\r\n    # Authentication. It was transparently handled in the APISession above but here is how you can change\r\n    # it yourself. Don't be alarmed about the dynamic type creation, I just don't want to put a regular object\r\n    # definition here.\r\n    >>> s = APISession(auth_provider= type('provider' , (object, ), {'getAuth' : lambda: ('user', 'password')}))\r\n    >>> resp = Platform42Api.put(\"crashplan.com\", Computer, s)\r\n    >>> resp.status_code\r\n    200\r\n\r\nRequirements\r\n============\r\n**For the app:**\r\n\r\n - [requests][1]\r\n\r\n\r\n**To run tests:**\r\n\r\n- [nose][2]\r\n- [nose-exclude][3]\r\n- [coverage][4]\r\n- [doctest][5]\r\n\r\nRecommended Development Setup\r\n=============================\r\n* Install virtualenvwrapper. Follow additional setup here [readthedocs][6]\r\n\r\n> pip install virtualenvwrapper\r\n\r\n* Create a project to work on\r\n\r\n> mkvirtualenv --no-site-packages platform42\r\n\r\n* Setup IDE of your choice. I recommend [Eclipse][7] + [PyDev][8] or [LiClipse][9]. Setup the project in your IDE to use your virtualenv's interpreter and libraries\r\nIn the editors I listed this can be accomplished by manually setting up an interpreter and pointing it at [your virtualenv path]/bin/python.\r\n\r\n* Install the requirements listed above. Execute the following while in the virtualenv created earlier. This script sits in the bin directory of the project.\r\n\r\n> ./bin/project_manage.sh -i\r\n\r\n\r\n  [1]: http://www.python-requests.org/en/latest/\r\n  [2]: http://nose.readthedocs.org/en/latest/\r\n  [3]: https://pypi.python.org/pypi/nose-exclude\r\n  [4]: https://pypi.python.org/pypi/coverage\r\n  [5]: http://docs.python.org/2/library/doctest.html\r\n  [6]: http://virtualenvwrapper.readthedocs.org/en/latest/install.html\r\n  [7]: http://www.eclipse.org/\r\n  [8]: http://pydev.org/download.html\r\n  [9]: http://liclipse.blogspot.com/",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://pypi.python.org/pypi/platform42",
    "keywords": "",
    "license": "LICENSE.txt",
    "maintainer": "Andrew Helgeson",
    "maintainer_email": "",
    "name": "platform42",
    "package_url": "https://pypi.org/project/platform42/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/platform42/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://pypi.python.org/pypi/platform42"
    },
    "release_url": "https://pypi.org/project/platform42/0.1dev/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Programatic access to the Code42 paltform api",
    "version": "0.1dev",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 928538,
  "releases": {
    "0.1dev": []
  },
  "urls": [],
  "vulnerabilities": []
}