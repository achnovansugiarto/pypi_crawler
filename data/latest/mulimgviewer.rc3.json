{
  "info": {
    "author": "",
    "author_email": "nachifur <1476879092@qq.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "<p align=\"center\">\n<a href=\"https://github.com/nachifur/MulimgViewer\" target=\"_blank\">\n<img align=\"center\" alt=\"multiple images viewer\" src=\"https://github.com/nachifur/MulimgViewer/blob/master/mulimgviewer.ico\" />\n</a>\n</p>\n\n<p align=\"center\">\n<a href=\"https://github.com/nachifur/MulimgViewer/stargazers\" target=\"_blank\">\n <img alt=\"GitHub stars\" src=\"https://img.shields.io/github/stars/nachifur/MulimgViewer.svg\" />\n</a>\n<a href=\"https://github.com/nachifur/MulimgViewer/releases\" target=\"_blank\">\n <img alt=\"All releases\" src=\"https://img.shields.io/github/downloads/nachifur/MulimgViewer/total.svg\" />\n</a>\n<a href=\"https://www.oscs1024.com/project/oscs/nachifur/MulimgViewer?ref=badge_small\" alt=\"OSCS Status\"><img src=\"https://www.oscs1024.com/platform/badge/nachifur/MulimgViewer.svg?size=small\"/></a>\n</p>\n\n# MulimgViewer\n[**English readme (Thanks @Faberman for the translation and polishing.)**](https://github.com/nachifur/MulimgViewer/wiki)\n\n[**国内gitee镜像项目**](https://gitee.com/nachifur/MulimgViewer) | [**果壳OpenCas镜像项目**](https://github.com/opencas/MulimgViewer)\n\n[**下载**](https://github.com/nachifur/MulimgViewer/releases) | [**快速上手**](#5.2) | [**开发者指南**](https://github.com/nachifur/MulimgViewer/blob/master/DEV_README.md)\n\n<!-- https://github.com/nachifur/MulimgViewer/blob/->https://gitee.com/nachifur/MulimgViewer/raw/ -->\n<!-- https://github.com/nachifur/MulimgViewer/releases->https://gitee.com/nachifur/MulimgViewer/releases -->\n\n## 1. 介绍\n\nMulimgViewer**多图像浏览器**，在一个界面显示多个图像，方便图像的比较、筛选。 \n\n**软件功能**: 多路径并行显示、多框并行放大 ([more](#4.0))。\n\n![image](https://github.com/nachifur/MulimgViewer/blob/master/img/f6.gif)\n\n您的star是我开发完善该项目最大的支持！\nqq交流群：945669929\n\n<img width=\"250\" height=\"355\" src=\"https://github.com/nachifur/MulimgViewer/blob/master/img/qrcode.jpg\"/>\n\n## 2. Windows-10\n* 直接下载并运行[exe文件]((https://github.com/nachifur/MulimgViewer/releases))；或者下载源码运行`MulimgViewer.py`->[**源码运行**](#3.0)\n* v3.9.3以后，`Windows 10`提供安装版`_Setup.exe`和便携版`_Portable.exe`（安装版`_Setup.exe`启动速度更快）\n\n## 3. python源码运行(windows\\linux\\ios)<a name=\"3.0\"></a> \n\n* 目前仅提供`Windows 10`的安装包（`amd64`）\n* **其他环境**可以使用源码运行，安装环境使用以下两种方式都行（pip or conda）\n* 建议使用Python3.6以上\n* [最新源码下载](https://codeload.github.com/nachifur/MulimgViewer/zip/refs/heads/master)\n\n## 3.1 pip 安装\npip安装：（如果安装过程出错，可以使用conda安装）\n```bash\npip install wxpython pillow pytest-shutil numpy requests piexif\n```\n运行：\n```python\npython3 MulimgViewer.py\n```\n## 3.2 conda 安装\n或者安装conda环境：\n```bash\nconda env create -f install.yaml\n```\n运行：\n```python\nconda activate mulimgviewer\npython MulimgViewer.py\n```\n\n## 4. 应用场景 <a name=\"4.0\"></a> \n### 例1：多图像浏览\n浏览202,599张图片的数据库CelebA，需要多长时间？一次显示1000张，只需点击200多次即可完成！\n![image](https://github.com/nachifur/MulimgViewer/blob/master/img/f15.jpg)\n\n### 例2：并行挑选\n\n**以前**你可能需要在多个窗口打开多个图像，逐个对比，再到文件夹找到对应的图像，复制到别的地方。\n\n**现在**使用MulimgViewer多图像浏览器，输入各个需要对比的目录，**一键保存需要对比的多张图像到本地**！\n\n![image](https://github.com/nachifur/MulimgViewer/blob/master/img/Parallel_select.jpg)\n\n图片并行挑选：`Parallel auto` or `Parallel manual`，关闭`Parallel+Sequential`（默认使用复制，选中`MoveFile`为剪切）。\n\n### 例3：并行放大 \n\nMulimgViewer可以轻松的完成纵向与横向的拼接，**支持自动拼接保存，支持并行放大**！\n\n<img src=\"https://github.com/nachifur/MulimgViewer/blob/master/img/f7.jpg\"/>\n\n同时支持**任意位置**划框（鼠标左键按住移动），**多框**并行放大（鼠标右键点击，生成新的框）。[详细见](#5.4.11)\n\n![image](https://github.com/nachifur/MulimgViewer/blob/master/img/f11.gif)\n\n### 例4：成对数据浏览\nMulimgViewer可以方便的进行成对的数据的浏览、比较。[详细见](#5.4.4)\n\n![image](https://github.com/nachifur/MulimgViewer/blob/master/img/f8.jpg)\n\n### 例5：一键生成论文对比图\n支持显示标题，调整放大框的位置。放大框的位置选择`middle bottom`，建议`🔍️Scale=-1,-1`;如果选择其他位置，自行调节放大倍数，例如：`🔍️Scale=1.5,1.5`。[详细见](#5.4.14)\n\n![image](https://github.com/nachifur/MulimgViewer/blob/master/img/f17.jpg)\n\n显示半张图像。勾选`OneImg`，使用`NumPerimg`控制几张图像合成一张图像。`Gap(x,y)=*,*,0,*,*`消除间距。\n![image](https://github.com/nachifur/MulimgViewer/blob/master/img/f18.jpg)\n\n### 例6：支持远程挂载目录图片浏览\n将远程服务器的目录挂载后，在MulimgViewer中选择目录即可，完成图片浏览。\n1. Ubuntu: 使用ubuntu的文件管理器`nautilus`，stfp://10.8.0.4连接到服务器。\n\n<img width=\"500\" height=\"200\" src=\"https://github.com/nachifur/MulimgViewer/blob/master/img/f9.jpg\"/>\n\n2. win10: 安装WinFsp和[SSHFS-Win](https://github.com/billziss-gh/sshfs-win)之后，文件资源管理器中填写远程服务器ip，例如：`\\\\sshfs\\user@ip!port`\n\n<img width=\"500\" height=\"200\" src=\"https://github.com/nachifur/MulimgViewer/blob/master/img/f16.jpg\"/>\n\n### 例7：支持点按旋转\n\n显示多张图片的同时，鼠标左键点击即可完成图片旋转。\n\n![image](https://github.com/nachifur/MulimgViewer/blob/master/img/f10.gif)\n\n### 例8：批量化resize图片\n利用自动保存功能，可以实现批量化resize图片。\n操作：\n1. 输入模式选择：Sequential，选择输入文件夹\n2. 选择保存文件的输出目录\n3. 勾选自动保存`AutoSaveAll`\n4. 设置`TruthResolution`为固定的大小，例如：`256,256`\n5. 点击保存💾️\n\n## 5. 使用说明\n\n## 5.1 快捷栏\n\n![image](https://github.com/nachifur/MulimgViewer/blob/master/img/Shortcut_bar.jpg)\n\n## 5.2 操作流程 <a name=\"5.2\"></a> \n测试图像下载地址：https://raw.githubusercontent.com/nachifur/MulimgViewer/master/img/test_img.zip\n\n**注意：本软件不支持自动刷新，修改布局参数之后，需要手动刷新（`Ctrl+R`）。**\n\n![image](https://github.com/nachifur/MulimgViewer/blob/master/img/Quick_start.jpg)\n\n\n1. 在`Layout`中**填写布局参数**：`Row`（一行有几张图片）, `NumPerImg`（一个图片由几个子图片组成）, `Col`（一列有几个图片）。\n2. 选择**输入模式**\n\n    2.1. Sequential: 一个文件夹多张图片。(`test_input/01`)\n\n    2.2. Parallel auto: 一个文件夹多个子文件夹。一个文件夹下有n个子文件夹，子文件夹中为图片。 (`test_input/`)\n\n    2.3. Parallel manual: 手动选择多个子文件夹。(`test_input//01`+`test_input//02`)\n\n    2.4. Image file list： 从文件导入图片列表文件。([Demo file](https://github.com/nachifur/MulimgViewer/tree/master/demo_input_from_file))\n\n3. 打开文件夹，导入路径\n4. 这时图片显示在面板，可以使用`>`查看下一张，`<`查看上一张图片\n5. `Input/OutPut`->OutputMode, 选择输出模式\n6. `File->Select output path`, **选择输出的路径**。\n7. 点击保存💾️\n\n\n## 5.3 快捷键\n1. 输入路径：\n\n    Sequential: Ctrl+E\n\n    Parallel auto: Ctrl+A\n\n    Parallel manual: Ctrl+M\n\n    Image file list: Ctrl+F\n\n2. 输出路径：Ctrl+O\n3. 下一张：Ctrl+N\n4. 上一张Ctrl+L\n5. 保存：Ctrl+S\n6. 刷新：Ctrl+R (或者鼠标右键)\n7. 隐藏工具栏：Ctrl+H\n8. 使用键盘的上下左右，可以移动图像面板里的图像。\n\n## 5.4 功能介绍\n\n### 5.4.1 输入模式\n\n`Sequential`是**串行浏览**模式，一个文件夹下有不同的图片，命名不同，用于图片的拼接。\n\n`Parallel auto`和`Parallel manual`是**并行浏览**模式（子文件夹的名称不一样），需要确保各子文件夹下面的图片命名相同，用于不同图片的对比。\n\n`Image File List`是**自定义模式**，从txt, csv文件导入图片列表。支持csv文件多行多列显示。\n\n如果需要自动排布，`NumPerImg`设为-1。\n\n<img width=\"250\" height=\"150\" src=\"https://github.com/nachifur/MulimgViewer/blob/master/img/f1.jpg\"/>\n\n### 5.4.2  输出模式\n\nStitch: 将拼接的图像保存到*stitch_images*目录下\n\nSelect: 分别保存当前浏览的图像到不同的文件夹，默认为copy模式，选中`MoveFile`为剪切模式。（推荐的输入模式为`Parallel auto`或`Parallel manual`，关闭`Parallel+Sequential`和`Parallel->Sequential`）\n\nMagnifer: 单独保存放大图像，方便用户的后期处理。\n\n<img width=\"250\" height=\"200\" src=\"https://github.com/nachifur/MulimgViewer/blob/master/img/f2.jpg\"/>\n\n### 5.4.3 图像排列自动化\n\n默认：`NumPerImg` = -1，这时为程序**自动布局模式**。`NumPerImg` 的意思是几张图像合成一个图像。\n\n当`NumPerImg` = 1或者>1，图像布局为**手动模式**，这时可以调整 `Row` 和 `Col`。\n\n### 5.4.4. 并行模式下的串行显示  <a name=\"5.4.4\"></a> \n\n在`Parallel auto`和`Parallel manual`模式下，可以并行显示多个文件夹。\n\n**Parallel+Sequential：**\n\n选中`Parallel+Sequential`，在并行显示的同时，可以串行浏览每个文件夹中的前n张图片，n可由`NumPerImg`设定。例如：`Row=5` ,`NumPerImg=4`, `Col=1`, 一次分别读取5个并行目录的4张图片，共20张。`Vertical`可以调整串行方向。修改`Row`和`Col`, 可以控制并行文件夹的二维排布。\n\n![image](https://github.com/nachifur/MulimgViewer/blob/master/img/Parallel_Sequential.jpg)\n\n**Parallel->Sequential：** 将多个文件夹的所有图片，拼接成一个图片列表进行串行显示。\n\n在`Parallel+Sequential`模式下，各个子文件夹下的文件名称需要一样。在`Parallel->Sequential`模式下，则不需要。\n\n### 5.4.5 自动保存\n\n勾选自动保存`AutoSaveAll`，点击保存💾️，实现批量化操作。\n\n### 5.4.6 图像尺寸归一化\n\nFill: 图像尺寸为一组图像中的最大尺寸，填充模式(保持原始像素分辨率)\n\nCrop: 图像尺寸为一组图像中的最小尺寸，裁剪模式(保持原始像素分辨率)\n\nResize: 图像尺寸为一组图像中的平均尺寸，缩放模式(不保持原始像素分辨率)\n\n<img width=\"250\" height=\"150\" src=\"https://github.com/nachifur/MulimgViewer/blob/master/img/f3.jpg\"/>\n\n### 5.4.7 图像间隔\n\n![image](https://github.com/nachifur/MulimgViewer/blob/master/img/f12.jpg)\n\n### 5.4.8 图像填充\n\n支持多种颜色填充。支持背景填充**透明**。**同时支持前景透明度调节**。\n\n### 5.4.9 并行手动模式支持路径导入保存\n\n<img width=\"250\" height=\"200\" src=\"https://github.com/nachifur/MulimgViewer/blob/master/img/f4.jpg\"/>\n\n### 5.4.10 显示、输出尺寸独立\n\n此功能可以保证显示的scale与输出独立。\n\n**应用场景**：\n1. 同时浏览显示100张图像，屏幕放不下，使用`Scale:Show`缩放即可\n2. 100张拼接造成的保存图片很大，使用`Scale:Out`可以方便控制文件大小\n\n### 5.4.11 并行放大 <a name=\"5.4.11\"></a> \n**操作**:\n\n1. 点击放大按钮`🔍️`\n\n<img width=\"50\" height=\"50\" src=\"https://github.com/nachifur/MulimgViewer/blob/master/img/f5.jpg\"/>\n\n2. 鼠标变为十字光标，在任意图片位置划框\n3. 选择放大区域：按住鼠标左键，移动鼠标，释放鼠标左键，显示放大结果\n4. 新增放大框：鼠标右键，实现多框放大\n\n**Tip**:\n\n1. 开启`🔍️KeepSize`，即可获得与原始图片长宽比一样的放大结果。\n2. `🔍️Scale`，默认为`-1,1`，自动设置scale。\n3. 可以选中`Vertical`,`Crtl+R`刷新显示，放大图像放置在原图的右侧。\n4. `🔍️Scale`，支持自定义倍数放大，最大不超过原图尺寸。例如：`3,3`，长宽3倍的放大。\n5. `Box:Width`设为`2,3`。原图中的线宽是2，放大图中的线宽是3。\n6. `Box:Width`设为`0,0`，即可隐藏框。\n7. `Box:Width`单位为pixel，在所有缩放下线宽保持不变。如果在`Scale:Show`为`0.1,0.1`，`Scale:Out`为`1,1`时，显示的框的宽度合适，那么输出框的宽度可能相比图片尺寸偏小。\n8. 点击放大按钮`🔍️`之后，鼠标单击图片选中，然后使用`ctrl`+鼠标滚轮全局缩放图像。\n9. 鼠标滚轮缩放功能，使用缩放因子控制。每次手动设置`Scale:Show`为`1,1`，缩放因子清零，界面刷新。\n\n**移动box**:\n\n（注意：开启`Box:SelectBox`后，使用鼠标左键不能划框）\n1. 选中`Box:SelectBox`\n2. 鼠标左键单击，选中已有的放大框\n3. 然后使用键盘上下左右(或者鼠标滚轮)，微调放大框(按`shift`键可以改变速度)。使用鼠标右键，快速移动放大框。\n4. 关闭`Box:SelectBox`。\n\n**清除放大框**：\n\n方法1：\n1. 选中`Box:SelectBox`，键盘`Del`，删除特定`box`\n2. 关闭`Box:SelectBox`，键盘`Del`，删除所有`box`\n\n方法2：\n1. 关闭`Box:SelectBox`\n2. 鼠标左键双击图片\n3. `Ctrl+R`刷新显示。\n   \n**手动修改放大框的颜色**：\n\n1. 选中`Box:SelectBox`\n2. 在原图片上，鼠标左键选中某个框\n3. 鼠标左键单击`Color/transparency:Draw`，选择颜色\n\n**不显示box/框**：\n\n1. 不选中`Box:InBox`，去掉原始图片上的框\n2. 不选中`Box:In🔍️`，去掉放大图片上的框\n3. 不选中`ShowImg`，不显示原始图片\n4. 不选中`Show🔍️`，不显示放大图片\n\n### 5.4.12 窗口大小自动化调节\n\n开启`AutoWinSize`，即可实现窗口自动大小调节。\n\n### 5.4.13 浏览图片，精确定位\n**粗定位：** 移动slider。\n\n**精确定位：**\n\n<img width=\"100\" height=\"50\" src=\"https://github.com/nachifur/MulimgViewer/blob/master/img/f13.jpg\"/>\n\n1. `Help`->`Index table`\n2. 查看图片显示序号\n3. 输入序号，回车\n\n### 5.4.14 标题 <a name=\"5.4.14\"></a> \n**标题**\n\n1. 关闭`Title:Auto`之后，可以进行自定义显示标题\n2. 在`Sequential`输入模式下，文件名为`01_DSC.jpg`，不选中`Prefix`和`Suffix`，文件显示为`DSC`。使用数字可以对图片文件进行排序。\n\n**字体**\n\n1. 建议使用安装版`_Setup.exe`\n2. 将字体`1_Calibri-Light.ttf`复制到安装目录`C:\\Program Files (x86)\\MulimgViewer\\font\\using`下\n3. `1_Calibri-Light.ttf`中的数字越小，GUI中的字体排序靠前\n\n## 6. 注意事项以及使用技巧\n\n### 6.1 并行模式\n\n1. 使用多图浏览模式（Parallel manual和Parallel auto），对比的文件夹里面的图像命名需要一样！\n2. 子文件夹的命名。如果是0,1,2...10,11，需要改为00,01,02,...10,11。因为排序时会变为：0,1,10,11,2...\n\n> 文件重命名工具推荐：\n> \n> win10: [uTools](https://u.tools/)\n> \n> Ubuntu: \n> 1. purrr.\n> `sudo apt install purrr`\n> 2. Thunar - Bulk Rename Files.\n> `sudo apt install thunar`\n\n### 6.2 多图拼接，超大像素图片，窗口大小问题\n\n1. 关闭`AutoWinSize`，最大化窗口\n2. 调节`Scale:Show`，`0.2,0.2`缩小，`2,2`放大\n3. 更改`TruthResolution`,将所有照片resize到同一尺寸，**对于浏览及其友好**\n\n## 7. 未来增强功能 <a name=\"7.0\"></a> \n感谢各位提供意见！大家可以在issues中发表意见，采用的会致谢大家！如果大家希望可以和我一起合作开发，请联系我！\n- [x] 增加精确定位（目前已经有slider）\n- [x] 增加图片索引查看，方便进行精确定位\n- [x] 并行的局部放大功能（用于论文中的对比实验图片**急需！**）\n- [x] 输入方式，新增：路径文件的导入和存储（@nothingeasy提供改进意见）\n- [x] 增加删除功能（完善筛选功能）\n- [x] 保存带框的原始图像（@JuZiSYJ提供改进意见）\n- [x] 拼图过程中，点击可旋转图片\n- [x] 多框放大功能（@JuZiSYJ提供改进意见）\n- [x] 去除放大图像的box（@stefanklut提供改进意见）\n- [x] 高清图像的对比，放大图像1:1输出（@Faberman提供改进意见）\n- [X] 为图像添加titile（@Faberman提供改进意见）\n\n## 8. 致谢 <a name=\"8.0\"></a> \n* Everyone in the QQ group;\n* nothingeasy:改进意见-(输入方式，新增：路径文件的导入和存储);\n* JuZiSYJ:改进意见-(保存带框的原始图像+并行放大);\n* Faberman:改进意见-(为图像添加titile+放大图像1:1输出);\n* stefanklut:改进意见-(不显示放大图像的边界框);\n* FunkyKoki:改进意见-(显示一半的图像+新增放大图像排布方式).\n\n## 9. 引用\n如果您在研究中使用此项目，请使用以下BibTeX条目。\n```\n@software{MulimgViewer,\n  author  = {Liu, Jiawei},\n  license = {GPL-3},\n  title   = {{MulimgViewer: A multi-image viewer for image comparison and image stitching}},\n  url     = {https://github.com/nachifur/MulimgViewer}\n}\n```\n\n## 10. 使用条款\n**许可证**\n\nGPL-3.0 License：https://www.gnu.org/licenses/gpl-3.0.en.html\n\n**额外条款**\n\n- 允许个人使用\n- 商业使用请联系 - liujiawei18@mails.ucas.ac.cn.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "computer-vision,deep-learning,ubuntu,viewer,parallel,python3,image-viewer,windows10,image-comparison,image-stitching,opencas,picture-viewer,multiple-imageview,multiple-images,multiple-image-comparison",
    "license": "GPL v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mulimgviewer",
    "package_url": "https://pypi.org/project/mulimgviewer/",
    "platform": null,
    "project_url": "https://pypi.org/project/mulimgviewer/",
    "project_urls": {
      "Bug Report": "https://github.com/nachifur/mulimgviewer/issues",
      "Download": "https://github.com/nachifur/mulimgviewer/releases",
      "Homepage": "https://mulimgviewer.readthedocs.io",
      "Source": "https://github.com/nachifur/mulimgviewer"
    },
    "release_url": "https://pypi.org/project/mulimgviewer/3.9.10/",
    "requires_dist": [
      "numpy",
      "piexif",
      "pillow",
      "requests",
      "wxpython",
      "pre-commit ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "A multi-image viewer that can open multiple images in one interface, which is convenient for image comparison and image stitching.",
    "version": "3.9.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17148584,
  "releases": {
    "3.9.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "307c7ca9b111e299c28811bff2cd5fd185170859d9344d3005a52dba256e063d",
          "md5": "ff9afb5b78e9923551acc7f0b272a5f9",
          "sha256": "e0c21750af6565e4358f211d900c39399cbd09b6f7d7435ca931dc47d81efba1"
        },
        "downloads": -1,
        "filename": "mulimgviewer-3.9.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff9afb5b78e9923551acc7f0b272a5f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12203751,
        "upload_time": "2023-03-03T19:30:06",
        "upload_time_iso_8601": "2023-03-03T19:30:06.896474Z",
        "url": "https://files.pythonhosted.org/packages/30/7c/7ca9b111e299c28811bff2cd5fd185170859d9344d3005a52dba256e063d/mulimgviewer-3.9.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc041074af1402e277cd3557c4596813966e1566f11fe2e859332f9a62fe0e05",
          "md5": "a41ed17a26cc242c7f22073d9b004b1b",
          "sha256": "b2b060a27effcab6ef57a9b4126ebb8a203528ba3a6f641326337bf3a6d921c9"
        },
        "downloads": -1,
        "filename": "mulimgviewer-3.9.10.tar.gz",
        "has_sig": false,
        "md5_digest": "a41ed17a26cc242c7f22073d9b004b1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 22413292,
        "upload_time": "2023-03-03T19:30:10",
        "upload_time_iso_8601": "2023-03-03T19:30:10.642830Z",
        "url": "https://files.pythonhosted.org/packages/dc/04/1074af1402e277cd3557c4596813966e1566f11fe2e859332f9a62fe0e05/mulimgviewer-3.9.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.9.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eda533ed1c7133691400c5b1eff30e851c123119c3d1d19e8bc3c7a510686d47",
          "md5": "cfcef588e76a4976b37eb3d2d67ab5be",
          "sha256": "921f6e7e881510bbc67ad97304975c3a463060e7dd7944f54cc74be0cccba273"
        },
        "downloads": -1,
        "filename": "mulimgviewer-3.9.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cfcef588e76a4976b37eb3d2d67ab5be",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12203936,
        "upload_time": "2023-03-03T13:53:20",
        "upload_time_iso_8601": "2023-03-03T13:53:20.389387Z",
        "url": "https://files.pythonhosted.org/packages/ed/a5/33ed1c7133691400c5b1eff30e851c123119c3d1d19e8bc3c7a510686d47/mulimgviewer-3.9.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44d857892060251e872ff9661eb3e60173e3307fa01610906576f0f2c8d40f3e",
          "md5": "e0cc86be29a0f83bfa363eaf414abe1d",
          "sha256": "33ef644b6d21aaadcdd272a7f331b9576bdc95a6768dd68aefe04803fb523cae"
        },
        "downloads": -1,
        "filename": "mulimgviewer-3.9.8.tar.gz",
        "has_sig": false,
        "md5_digest": "e0cc86be29a0f83bfa363eaf414abe1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 22413329,
        "upload_time": "2023-03-03T13:53:23",
        "upload_time_iso_8601": "2023-03-03T13:53:23.946905Z",
        "url": "https://files.pythonhosted.org/packages/44/d8/57892060251e872ff9661eb3e60173e3307fa01610906576f0f2c8d40f3e/mulimgviewer-3.9.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.9.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6758e57539313a105a62a36242095e09071cc27ae58954ccb3389da0112bb17e",
          "md5": "88c39478a47d8d987b0d2336a6dbf4e2",
          "sha256": "e1d1a13f2b7a6cb6850e79a18d96ac37e9be0e18eeb3508a8000df0d10df1799"
        },
        "downloads": -1,
        "filename": "mulimgviewer-3.9.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "88c39478a47d8d987b0d2336a6dbf4e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12203914,
        "upload_time": "2023-03-03T14:29:09",
        "upload_time_iso_8601": "2023-03-03T14:29:09.473234Z",
        "url": "https://files.pythonhosted.org/packages/67/58/e57539313a105a62a36242095e09071cc27ae58954ccb3389da0112bb17e/mulimgviewer-3.9.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "539b70af9c6e2efe32917d0f821c9489b693f43de3f50556888ccecb2a7e7ab3",
          "md5": "6921b62d44db0117a210d6c3232d09db",
          "sha256": "b68e7c2871372e616b03d47b1082625984fc18c90e6d5ac74dfc976122991367"
        },
        "downloads": -1,
        "filename": "mulimgviewer-3.9.9.tar.gz",
        "has_sig": false,
        "md5_digest": "6921b62d44db0117a210d6c3232d09db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 22413231,
        "upload_time": "2023-03-03T14:29:12",
        "upload_time_iso_8601": "2023-03-03T14:29:12.136158Z",
        "url": "https://files.pythonhosted.org/packages/53/9b/70af9c6e2efe32917d0f821c9489b693f43de3f50556888ccecb2a7e7ab3/mulimgviewer-3.9.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "307c7ca9b111e299c28811bff2cd5fd185170859d9344d3005a52dba256e063d",
        "md5": "ff9afb5b78e9923551acc7f0b272a5f9",
        "sha256": "e0c21750af6565e4358f211d900c39399cbd09b6f7d7435ca931dc47d81efba1"
      },
      "downloads": -1,
      "filename": "mulimgviewer-3.9.10-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ff9afb5b78e9923551acc7f0b272a5f9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 12203751,
      "upload_time": "2023-03-03T19:30:06",
      "upload_time_iso_8601": "2023-03-03T19:30:06.896474Z",
      "url": "https://files.pythonhosted.org/packages/30/7c/7ca9b111e299c28811bff2cd5fd185170859d9344d3005a52dba256e063d/mulimgviewer-3.9.10-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc041074af1402e277cd3557c4596813966e1566f11fe2e859332f9a62fe0e05",
        "md5": "a41ed17a26cc242c7f22073d9b004b1b",
        "sha256": "b2b060a27effcab6ef57a9b4126ebb8a203528ba3a6f641326337bf3a6d921c9"
      },
      "downloads": -1,
      "filename": "mulimgviewer-3.9.10.tar.gz",
      "has_sig": false,
      "md5_digest": "a41ed17a26cc242c7f22073d9b004b1b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 22413292,
      "upload_time": "2023-03-03T19:30:10",
      "upload_time_iso_8601": "2023-03-03T19:30:10.642830Z",
      "url": "https://files.pythonhosted.org/packages/dc/04/1074af1402e277cd3557c4596813966e1566f11fe2e859332f9a62fe0e05/mulimgviewer-3.9.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}