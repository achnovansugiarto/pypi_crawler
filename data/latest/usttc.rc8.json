{
  "info": {
    "author": "Kuo Zhang",
    "author_email": "kuo.zh92@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# USTTC (Unified Speech-to-Text Client)\r\n\r\nThis project provides a simple and unified client wrapper \r\nfor multiple [Speech-to-test (STT)](https://en.wikipedia.org/wiki/Speech_recognition) providers on the basic use cases, \r\nand gives users an easy way to switch and test among different providers.\r\n\r\n## Background\r\nThe accuracy of Speech-to-text (STT) improved significantly during the past few years. \r\nThere are a lot of cloud STT providers on the market, including some big players like Google and AWS, \r\nand a few ambitious new providers like Voicegain.ai and Assembly.ai.\r\n\r\nAs a Speech Recognition Scientist, I have reviewed many providers in the last few years, \r\nand I have noticed that each provider has its own unique features. \r\nHowever, the majority of users do not necessarily need those additional features, \r\nespecially in the early testing stage. \r\nTheir requirements are very simple and basic -- getting an accurate transcript of the provided audio.\r\n\r\nRegarding my personal background, I am an Senior AI Scientist at Voicegain (specializing in Speech Recognition), \r\nbut this repository, USTTC, is a personal project, and I intend to work on it without any bias. \r\nAs mentioned, the goal of this project is to enable more people in the community to explore and test STT \r\nwithout too much trouble dealing with varied providers, APIs, and documentation. \r\n\r\n\r\n## Installation\r\n\r\nPlease ensure that you have **ffmpeg** installed before install USTTC.\r\n\r\nYou can install the module using the Python Package Index using the command below.\r\n\r\n    pip install usttc\r\n\r\n## Determine which STT providers to test\r\nCurrently, USTTC supports the following 6 STT providers. We are going to include a few more providers later on.\r\n* [Google STT](https://cloud.google.com/speech-to-text)\r\n* [AWS Transcribe](https://aws.amazon.com/transcribe/)\r\n* [Voicegain.ai](https://www.voicegain.ai/)\r\n* [Rev.ai](https://www.rev.ai/)\r\n* [assembly.ai](https://www.assemblyai.com/)\r\n* [deepgram](https://deepgram.com/)\r\n\r\nThese six providers are included because they all have comparable accuracy, \r\nreasonable complete features, and simple-to-use client SDKs. Now you need to decide which providers you want to test. \r\nThis is truly an overwhelming task, because there is no single right answer. \r\nEach provider has unique strengths and weaknesses, as well as its own unique pricing strategy.\r\nIf you don't know which one is best for your application, \r\nwe suggest you test all of them on your own audio samples to get a sense. Fortunately, \r\nUSTTC makes it very easy to test multiple providers using (almost) the same code, \r\nwhich is also the original intention of USTTC.\r\n\r\nThe following table shows the price of each provider, so that you can also choose based on your budget.\r\n\r\nProvider Price Details<sup>[1]</sup> | $ per minute<sup>[2]</sup> | Free Tier per month | Free Credits | Minimum per request charge<sup>[3]</sup> | Increments\r\n---------------------- | -------------| ------------------- | ------------ | -------------------------- | ----------\r\n[Google STT](https://cloud.google.com/speech-to-text/pricing) | $0.0360 | 60 minutes | 8,333 minutes ($300)<sup>[4]</sup> | 15 seconds | 15 seconds\r\n[AWS Transcribe](https://aws.amazon.com/transcribe/pricing/) | $0.0240 | 60 minutes<sup>[5]</sup> | No | 15 seconds | 1 second\r\n[Voicegain.ai](https://www.voicegain.ai/pricing) | $0.0095 | No | 5,263 minutes ($50) | 1 second | 1 second\r\n[Rev.ai](https://www.rev.ai/pricing) | $0.0350 | No | 300 minutes | 15 seconds | 15 seconds\r\n[Assembly.ai](https://www.assemblyai.com/pricing) | $0.0150 | 180 minutes | No | 1 second | 1 second\r\n[Deepgram](https://deepgram.com/pricing/) | $0.0125 | No | 12,000 minutes ($150) | *Not clear* | *Not clear*\r\n\r\n*[1]: The price may change. Please check the pricing page for each provider*</br>\r\n*[2]: This is the pay-as-you-go price. All providers provide discounts for high volumes*</br>\r\n*[3]: You need to consider this if the average audio duration is shorter than 15s in your application*</br>\r\n*[4]: The Google Cloud Free credits are distributed across all cloud services and are only valid for the first 90 days*</br>\r\n*[5]: The AWS Free Tier is only available for the first 12 months*\r\n\r\n## Create account on selected STT providers\r\nOnce you decide which providers to test, you can create an account with them by following the steps below.\r\n\r\n### Google STT\r\n1. Sign up Google Cloud Platform. https://console.cloud.google.com/getting-started\r\n2. Enable **Google Cloud Speech API**. https://cloud.google.com/endpoints/docs/openapi/enable-api\r\n3. Create a storage bucket. You can use the default setting. https://cloud.google.com/storage/docs/creating-buckets\r\n4. Create a service account. Add **Cloud Speech Client** and **Storage Object Admin** two roles. https://cloud.google.com/iam/docs/creating-managing-service-accounts#iam-service-accounts-create-console\r\n5. Create new **JSON key** for the service account you created. https://cloud.google.com/iam/docs/creating-managing-service-account-keys\r\n```\r\nfrom usttc import AsrClientFactory, AsrProvider\r\n\r\nasr_client = AsrClientFactory.get_client_from_key_file(\r\n    asr_provider=AsrProvider.GOOGLE,\r\n    filename=\"<YOUR_GOOGLE_CLOUD_JSON_KEY_FILE_PATH>\",\r\n    google_storage_bucket=\"<YOUR_GOOGLE_STORAGE_BUCKET_NAME>\"\r\n)\r\n```\r\n### AWS Transcribe\r\n1. Sign up for AWS. https://portal.aws.amazon.com/billing/signup#/start\r\n2. Create a S3 bucket. You can use the default setting. Please take a note of the **region** of your S3 bucket. https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-bucket-overview.html\r\n3. Create a **User Group**. Attach **AmazonS3FullAccess** and **AmazonTranscribeFullAccess** permission to the group. https://docs.aws.amazon.com/IAM/latest/UserGuide/id_groups_create.html\r\n4. Add a **User** to the created **User Group**. Get user's **access key ID** and **secret access key**. https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html#id_users_create_console\r\n```\r\nfrom usttc import AsrClientFactory, AsrProvider\r\n\r\nasr_client = AsrClientFactory.get_client_from_key(\r\n    asr_provider=AsrProvider.AMAZON_AWS,\r\n    key=\"<YOUR_AWS_USER_ACCESS_KEY_ID>\",\r\n    aws_secret_access_key=\"<YOUR_AWS_USER_SECRET_ACCESS_KEY>\",\r\n    region_name='<YOUR_S3_BUCKET_REGION>',\r\n    s3_bucket='<YOUR_S3_BUCKET_NAME>'\r\n)\r\n```\r\n### Voicegain.ai\r\n1. Sign up. https://console.voicegain.ai/signup\r\n2. Generate **JWT Token**. https://support.voicegain.ai/hc/en-us/articles/360028023691-JWT-Authentication\r\n\r\n```\r\nfrom usttc import AsrClientFactory, AsrProvider\r\n\r\nasr_client = AsrClientFactory.get_client_from_key(\r\n    asr_provider=AsrProvider.VOICEGAIN,\r\n    key=\"<YOUR_VOICEGAIN_JWT_TOKEN>\"\r\n)\r\n```\r\n### Rev.ai\r\n1. Sign up. https://www.rev.ai/auth/signup\r\n2. Generate **Access Token**. https://www.rev.ai/access_token\r\n```\r\nfrom usttc import AsrClientFactory, AsrProvider\r\n\r\nasr_client = AsrClientFactory.get_client_from_key(\r\n    asr_provider=AsrProvider.REV,\r\n    key=\"<YOUR_REV_ACCESS_TOKEN>\"\r\n)\r\n```\r\n### Assembly.ai\r\n1. Sign up. https://app.assemblyai.com/signup\r\n2. Get **API Key** on your account page. https://app.assemblyai.com/account\r\n```\r\nfrom usttc import AsrClientFactory, AsrProvider\r\n\r\nasr_client = AsrClientFactory.get_client_from_key(\r\n    asr_provider=AsrProvider.ASSEMBLY_AI,\r\n    key=\"<YOUR_ASSEMBLY_AI_API_KEY>\"\r\n)\r\n```\r\n### Deepgram\r\n1. Sign up. https://console.deepgram.com/signup\r\n2. Create **API Key** from the dashboard\r\n```\r\nfrom usttc import AsrClientFactory, AsrProvider\r\n\r\nasr_client = AsrClientFactory.get_client_from_key(\r\n    asr_provider=AsrProvider.DEEPGRAM,\r\n    key=\"<YOUR_DEEPGRAM_API_KEY>\"\r\n)\r\n```\r\n\r\n## Usage\r\n\r\nBoth pre-recorded audio files and real-time audio streams can be transcribed with USTTC.\r\n\r\n### Transcribe Pre-Recorded Audio\r\nUsing USTTC, it's super easy to transcribe your audio file in (almost) **any format**. [Here](examples/transcribe_audio_file_basic.py) is an end-to-end example of an .wav audio as the input. \r\n```\r\nfrom usttc.audio import AudioFile\r\n\r\naudio = AudioFile(file_path=\"<YOUR_AUDIO_FILE_PATH>\")\r\nresult = asr_client.recognize(audio)\r\nprint(result.transcript)\r\n```\r\n\r\n\r\n#### Multiple Speakers\r\nAn audio file can contain multiple speakers in two ways.\r\n* Multi-channel audio: Each channel has one speaker. (We only support stereo audio). In this case, you need to configure **separate_speaker_per_channel** ([example](examples/transcribe_audio_file_multi_channel.py))\r\n* Mono audio: All speakers are mixed on the same channel. In this case, you need to configure **diarization** ([example](examples/transcribe_audio_file_diarization.py))\r\n\r\nPlease note here:\r\n1. If your audio is stereo but both channels have the same content, you should **NOT** configure **separate_speaker_per_channel**.\r\n2. **DO NOT** use diarization if speakers are already separated by channel.\r\n\r\n### Compare transcription results\r\nTo compare the results from multiple recognizers and know which one is more accurate for the application, I'll normally start by reviewing a few results and getting a sense of the weaknesses and strengths of each recognizer. Sometimes, after I see a few examples, I can easily tell for a specific project which recognizers work and which do not.\r\n\r\nIf you want to compare the results in a more scientific manner, you can prepare the gold standard reference and calculate **[Word Error Rate (WER)](https://en.wikipedia.org/wiki/Word_error_rate)** of the results from each STT provider. However, calculating WER is not trivial, because we don't want to penalize a recognizer if the difference (its result vs. the gold reference) is just the punctuation and capitalization. Moreover, for a digit, it's both acceptable no matter whether using digit-format or spelled-out format.\r\n\r\n\r\n#### transcribe-compare package\r\n[Voicegain.ai](https://www.voicegain.ai/) provides a python package called [transcribe-compare](https://pypi.org/project/transcribe-compare/) \r\nto help you calculate WER (and do more than that). \r\nIt solves many issues when calculating WER, including punctuation, capitalization, and digits mentioned above.\r\nYou can install the module using the Python Package Index using the command below.\r\n\r\n     pip install transcribe-compare\r\n\r\nWe provide a simple [example](examples/calculate_wer_using_transcribe_compare.py) of using **USTTC** and **transcribe-compare** together.\r\nYou can also check their [GitHub page](https://github.com/voicegain/transcription-compare) for more examples of advanced use cases.\r\n\r\n### Ensemble\r\n*[This feature will be available soon]*\r\n\r\nAfter you compare the results from multiple recognizers, you might realize that none of them is perfect (it is a cold and brute reality). Different STT providers might make mistakes in different places. If your budget allows, you can run multiple recognizers at the same time and get higher accuracy by ensembling their results. This feature is on our roadmap.\r\n\r\n### Transcribe Audio Stream\r\n*[This feature will be available soon]*\r\n\r\nIn some applications (e.g. real-time), it's important to stream the audio to the recognizer\r\nand get the result simultaneously. \r\nAll the STT providers that USTTC selected have the streaming feature. \r\nThe streaming wrapper will be available soon.\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/kakakuoka/usttc/archive/refs/tags/v0.0.8.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "usttc",
    "package_url": "https://pypi.org/project/usttc/",
    "platform": null,
    "project_url": "https://pypi.org/project/usttc/",
    "project_urls": {
      "Download": "https://github.com/kakakuoka/usttc/archive/refs/tags/v0.0.8.tar.gz"
    },
    "release_url": "https://pypi.org/project/usttc/0.0.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Unified Speech-to-text Client",
    "version": "0.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17149936,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92b32f612893cf28a81ee8c3629f15a10982721f9ae2a050ed17fbff98ad2403",
          "md5": "bce43576fd12156ebe1b6296f9d10e47",
          "sha256": "d3ac09d900c89d4f4d9e84dbe93e07e0ad16428355db3a04d455990e3439f00c"
        },
        "downloads": -1,
        "filename": "usttc-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bce43576fd12156ebe1b6296f9d10e47",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18756,
        "upload_time": "2022-01-04T20:58:51",
        "upload_time_iso_8601": "2022-01-04T20:58:51.103589Z",
        "url": "https://files.pythonhosted.org/packages/92/b3/2f612893cf28a81ee8c3629f15a10982721f9ae2a050ed17fbff98ad2403/usttc-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0feaa43fb660153727ab847e80f5f15fc69f67ec1ae052fa6af4d781444bab1",
          "md5": "7c5d8d0d9620c35e5ea1cf9f0cbafa73",
          "sha256": "c3b501d3d2793d6582c4e7fb54b0c7ee955b3ecf61f7d08fc39c340d033640ef"
        },
        "downloads": -1,
        "filename": "usttc-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7c5d8d0d9620c35e5ea1cf9f0cbafa73",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18752,
        "upload_time": "2022-01-04T21:07:07",
        "upload_time_iso_8601": "2022-01-04T21:07:07.847731Z",
        "url": "https://files.pythonhosted.org/packages/e0/fe/aa43fb660153727ab847e80f5f15fc69f67ec1ae052fa6af4d781444bab1/usttc-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64f088156f37613fc59cc1b010eb8090584070e541ca7fd7e1b1457b3a8d8d33",
          "md5": "ab409e980c396b81b602f9ac25bae197",
          "sha256": "c94771ba6a859b3575dc56092ab8334be894818abb97f9dece363bec6797e6fe"
        },
        "downloads": -1,
        "filename": "usttc-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ab409e980c396b81b602f9ac25bae197",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18718,
        "upload_time": "2022-01-04T21:10:15",
        "upload_time_iso_8601": "2022-01-04T21:10:15.678180Z",
        "url": "https://files.pythonhosted.org/packages/64/f0/88156f37613fc59cc1b010eb8090584070e541ca7fd7e1b1457b3a8d8d33/usttc-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75f02b4fa3aca461c96f9ce985a14ec9d87bd6840f1d76c9d0a413acc73decb2",
          "md5": "4d9cf90ed9c8c2ba40dd73f5a88b8dff",
          "sha256": "01e46e1b9f3e841308498d49bbaa2712330e5ed185714fe2b20bebc9eed1e130"
        },
        "downloads": -1,
        "filename": "usttc-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4d9cf90ed9c8c2ba40dd73f5a88b8dff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23089,
        "upload_time": "2022-01-09T04:48:05",
        "upload_time_iso_8601": "2022-01-09T04:48:05.500686Z",
        "url": "https://files.pythonhosted.org/packages/75/f0/2b4fa3aca461c96f9ce985a14ec9d87bd6840f1d76c9d0a413acc73decb2/usttc-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce0a9856454c1a03c5c5a00d9ebb78752a2e7388dbbd5e0e43f8512c04b795ff",
          "md5": "6e8e4619ea13ce72814b8732200b61b3",
          "sha256": "bdcfd1a3171458fe727928240ca742d8665177b891e79e33238c037d817d3cb5"
        },
        "downloads": -1,
        "filename": "usttc-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6e8e4619ea13ce72814b8732200b61b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28487,
        "upload_time": "2022-05-26T18:33:53",
        "upload_time_iso_8601": "2022-05-26T18:33:53.539324Z",
        "url": "https://files.pythonhosted.org/packages/ce/0a/9856454c1a03c5c5a00d9ebb78752a2e7388dbbd5e0e43f8512c04b795ff/usttc-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97aaa17b90108993c000c88927a776fb33dbe600bcba1ee1355a746baf217632",
          "md5": "f17588c0f92aca66cdb9c3d32f44bacd",
          "sha256": "1eeb90b38f19d2c49e8f45c26739f97037a569a9332b862173d024ce776b0f7f"
        },
        "downloads": -1,
        "filename": "usttc-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "f17588c0f92aca66cdb9c3d32f44bacd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28737,
        "upload_time": "2022-07-27T16:30:19",
        "upload_time_iso_8601": "2022-07-27T16:30:19.516883Z",
        "url": "https://files.pythonhosted.org/packages/97/aa/a17b90108993c000c88927a776fb33dbe600bcba1ee1355a746baf217632/usttc-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7906f744859442cfee02983ee67f1605913665b12092e6bad42edbd67d63a7f5",
          "md5": "affbf4d74e15afe5aa05c9f1b53e837b",
          "sha256": "8d0cb2d647732f670ae108b279fb65aecdd1d6c40910650e48543282f12bf452"
        },
        "downloads": -1,
        "filename": "usttc-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "affbf4d74e15afe5aa05c9f1b53e837b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28787,
        "upload_time": "2022-08-24T14:30:12",
        "upload_time_iso_8601": "2022-08-24T14:30:12.933818Z",
        "url": "https://files.pythonhosted.org/packages/79/06/f744859442cfee02983ee67f1605913665b12092e6bad42edbd67d63a7f5/usttc-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48d3bb4c3622303ed894c9ffac53123b8b07cae4d72d358066cd32af29e1e7c0",
          "md5": "d7d4e097266b94e3108f67222bf0d65e",
          "sha256": "10638629df123be798753349aa8dc2cc37b6cf58b42307f9c6f33773e9d5b97c"
        },
        "downloads": -1,
        "filename": "usttc-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "d7d4e097266b94e3108f67222bf0d65e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29030,
        "upload_time": "2023-03-03T22:03:25",
        "upload_time_iso_8601": "2023-03-03T22:03:25.406568Z",
        "url": "https://files.pythonhosted.org/packages/48/d3/bb4c3622303ed894c9ffac53123b8b07cae4d72d358066cd32af29e1e7c0/usttc-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "48d3bb4c3622303ed894c9ffac53123b8b07cae4d72d358066cd32af29e1e7c0",
        "md5": "d7d4e097266b94e3108f67222bf0d65e",
        "sha256": "10638629df123be798753349aa8dc2cc37b6cf58b42307f9c6f33773e9d5b97c"
      },
      "downloads": -1,
      "filename": "usttc-0.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "d7d4e097266b94e3108f67222bf0d65e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 29030,
      "upload_time": "2023-03-03T22:03:25",
      "upload_time_iso_8601": "2023-03-03T22:03:25.406568Z",
      "url": "https://files.pythonhosted.org/packages/48/d3/bb4c3622303ed894c9ffac53123b8b07cae4d72d358066cd32af29e1e7c0/usttc-0.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}