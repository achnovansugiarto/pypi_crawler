{
  "info": {
    "author": "Tiger_Shark",
    "author_email": "na@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# 🐋 equities \n\n## Overview: \n\n    equities allows for easy access to the SEC's XBRL Financial Statement Dataset\n    Parsed data is stored locally and served to the user in pandas dataframes\n\n###### The Dataset: \n\nhttps://www.sec.gov/dera/data/financial-statement-data-sets.html\n\n## Install: \n\n    pip3 install equities\n\n## Donate: \n\nConsider donating bitcoin to fund the future development of this project. \n\n    bitcoin wallet address: 3LU5MEaAXRJoCo6vx67g1Jj7qDFRKhMs5t\n\n## TUTORIAL: \n\nThe library consists of two central objects, Universe and Company. \n\n## Universe: \n\n#### Building the Universe\n\nWe begin by initializing our universe and downloading our sec data packages.\n\n    from equities import Universe\n    u = Universe()\n\n#### Essential Methods \n\nTo get the number of companies in the universe call: \n    len(u)\n\nTo get a dataframe of XBRL metadata from of all companies in the universe call: \n\n    u.properties()\n\n\"CIK\" numbers are the sec's official unique identifier for public companies. To get a full list of the cik numbers call:\n\n    u.ciks()\n\n#### Accessing Companies\n\nUniverse objects are indexable by \"CIK\" integers. As an example, to access the first company in the universe call: \n\n    first_cik = universe.ciks()[0]\n    u[first_cik] # This returns an Company object.\n\n## Company: \n\nA Company object should be thought of as an abstract representation of a real company. Every \ncompany must have an associated Universe of origin. \n\n    from equities import Company\n\n#### Accessing the Financial Statements\n\nConsider the first Company in our universe, universe[u.ciks()[0]]. It is a Company object. \n\n    c = u[u.ciks()[0]]\n\nDataframes of the company's financial statements over the universe in question is given by: \n\n    c.income()      # income statement dataframe\n\n    c.balance()     # Balancesheet dataframe\n\n    c.cash()        # Cash Flow Statement dataframe\n\n    c.equity()      # Consolidated Equity dataframe\n\n\n#### Additional Company Details \n\nTo get the XBRL metadata for a given company as a pandas series call: \n\n    c.properties()\n\n#### Example \n\nI really want to demonstrate the beauty of this dataset since this is often difficult when looking\nat thousands of numeric datatables. Let's take a very naive peek by plotting various statements \nas a kind of stacked timeseries. \n\nThe following is a start to finish example of how one might plot the financial statements \nof the first three companies in the universe.\n\nTo perform this experiment, run the following: \n\n    from equities import test\n    test()\n\nHere is the code that this function executes: \n\n    import pandas as pd\n    from equities import Universe, Company\n    import matplotlib.pyplot as plt\n\n    u = Universe()\n    u.build()\n\n    k,f,s = 'bar',(20,10),True\n    for cik in u.ciks()[:3]:\n\n        u[cik].income().T.plot(\n            kind=k,\n            figsize=f,\n            stacked=s)\n\n        u[cik].cash().T.plot(\n            kind=k,\n            figsize=f,\n            stacked=s)\n\n        u[cik].balance().T.plot(\n            kind=k,\n            figsize=f,\n            stacked=s)\n\n    plt.show()\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ljc-codes/equities.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "enigma-12312",
    "package_url": "https://pypi.org/project/enigma-12312/",
    "platform": "",
    "project_url": "https://pypi.org/project/enigma-12312/",
    "project_urls": {
      "Homepage": "https://github.com/ljc-codes/equities.git"
    },
    "release_url": "https://pypi.org/project/enigma-12312/2.1.10/",
    "requires_dist": [
      "alive-progress (==1.6.1)",
      "chardet (==3.0.4)",
      "idna (==2.7)",
      "isort (==4.3.4)",
      "matplotlib (==3.2.0)",
      "numpy (==1.18.0)",
      "pandas (==1.0.1)",
      "psutil (==5.6.2)",
      "pytz (==2018.5)",
      "requests (==2.21.0)",
      "six (==1.11.0)",
      "tqdm (==4.43.0)",
      "wrapt (==1.10.11)"
    ],
    "requires_python": ">=3.6",
    "summary": "placeholder.",
    "version": "2.1.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8420466,
  "releases": {
    "2.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a28c35571cab0ca348824d8ea3be29cdf2e46ae164fdcc5f836de3ce7a20611",
          "md5": "3ddfd6c68f72489b5b77e494979af492",
          "sha256": "20bc250892dcaba93059f95161be9a59d45c8ce217ab6cac5b026bbe35937335"
        },
        "downloads": -1,
        "filename": "enigma_12312-2.1.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3ddfd6c68f72489b5b77e494979af492",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4969,
        "upload_time": "2020-10-15T17:07:30",
        "upload_time_iso_8601": "2020-10-15T17:07:30.105927Z",
        "url": "https://files.pythonhosted.org/packages/4a/28/c35571cab0ca348824d8ea3be29cdf2e46ae164fdcc5f836de3ce7a20611/enigma_12312-2.1.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "875348c9c76f8a9dfab8ad065f6e488d27db382b908be1634e8b98a8f0f753a2",
          "md5": "3658a2fab7a79f17ccd274d971178526",
          "sha256": "ee71f26c0e53ef0db8b978aaa8ed7b74c0539b4bf553949b3031d0caac13a101"
        },
        "downloads": -1,
        "filename": "enigma-12312-2.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "3658a2fab7a79f17ccd274d971178526",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4343,
        "upload_time": "2020-10-15T17:07:33",
        "upload_time_iso_8601": "2020-10-15T17:07:33.152807Z",
        "url": "https://files.pythonhosted.org/packages/87/53/48c9c76f8a9dfab8ad065f6e488d27db382b908be1634e8b98a8f0f753a2/enigma-12312-2.1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4a28c35571cab0ca348824d8ea3be29cdf2e46ae164fdcc5f836de3ce7a20611",
        "md5": "3ddfd6c68f72489b5b77e494979af492",
        "sha256": "20bc250892dcaba93059f95161be9a59d45c8ce217ab6cac5b026bbe35937335"
      },
      "downloads": -1,
      "filename": "enigma_12312-2.1.10-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3ddfd6c68f72489b5b77e494979af492",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4969,
      "upload_time": "2020-10-15T17:07:30",
      "upload_time_iso_8601": "2020-10-15T17:07:30.105927Z",
      "url": "https://files.pythonhosted.org/packages/4a/28/c35571cab0ca348824d8ea3be29cdf2e46ae164fdcc5f836de3ce7a20611/enigma_12312-2.1.10-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "875348c9c76f8a9dfab8ad065f6e488d27db382b908be1634e8b98a8f0f753a2",
        "md5": "3658a2fab7a79f17ccd274d971178526",
        "sha256": "ee71f26c0e53ef0db8b978aaa8ed7b74c0539b4bf553949b3031d0caac13a101"
      },
      "downloads": -1,
      "filename": "enigma-12312-2.1.10.tar.gz",
      "has_sig": false,
      "md5_digest": "3658a2fab7a79f17ccd274d971178526",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4343,
      "upload_time": "2020-10-15T17:07:33",
      "upload_time_iso_8601": "2020-10-15T17:07:33.152807Z",
      "url": "https://files.pythonhosted.org/packages/87/53/48c9c76f8a9dfab8ad065f6e488d27db382b908be1634e8b98a8f0f753a2/enigma-12312-2.1.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}