{
  "info": {
    "author": "IBM",
    "author_email": "cldtsdks@us.ibm.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "[![Build Status](https://github.com/IBM/cloudant-python-sdk/actions/workflows/test.yml/badge.svg?branch=main&event=push)](https://github.com/IBM/cloudant-python-sdk/actions/workflows/test.yml)\n[![Release](https://img.shields.io/github/v/release/IBM/cloudant-python-sdk?include_prereleases&sort=semver)](https://github.com/IBM/cloudant-python-sdk/releases/latest)\n[![Docs](https://img.shields.io/static/v1?label=Pydoc&message=latest&color=blue)](https://ibm.github.io/cloudant-python-sdk/)\n\n# IBM Cloudant Python SDK Version 0.4.0\n\nIBM Cloudant Python SDK is a client library that interacts with the\n[IBM Cloudant APIs](https://cloud.ibm.com/apidocs/cloudant?code=python).\n\nDisclaimer: This library is still a 0.x release. We do consider this\nlibrary production-ready and capable, but there are still some\nlimitations we’re working to resolve, and refinements we want to\ndeliver. We are working really hard to minimise the disruption from\nnow until the 1.0 release, but there may still be some changes that\nimpact applications using this SDK. For now, be sure to pin versions\nto avoid surprises.\n\n<details>\n<summary>Table of Contents</summary>\n\n<!--\n  The TOC below is generated using the `markdown-toc` node package.\n\n      https://github.com/jonschlinkert/markdown-toc\n\n      npx markdown-toc -i README.md\n  -->\n\n<!-- toc -->\n\n- [Overview](#overview)\n- [Features](#features)\n- [Prerequisites](#prerequisites)\n- [Installation](#installation)\n- [Authentication](#authentication)\n  * [Authentication with environment variables](#authentication-with-environment-variables)\n    + [IAM authentication](#iam-authentication)\n    + [Session cookie authentication](#session-cookie-authentication)\n    + [Basic authentication](#basic-authentication)\n  * [Authentication with external configuration](#authentication-with-external-configuration)\n  * [Programmatic authentication](#programmatic-authentication)\n- [Using the SDK](#using-the-sdk)\n  * [Request timeout configuration](#request-timeout-configuration)\n  * [Code examples](#code-examples)\n    + [1. Create a database and add a document](#1-create-a-database-and-add-a-document)\n    + [2. Retrieve information from an existing database](#2-retrieve-information-from-an-existing-database)\n    + [3. Update your previously created document](#3-update-your-previously-created-document)\n    + [4. Delete your previously created document](#4-delete-your-previously-created-document)\n    + [Further code examples](#further-code-examples)\n  * [Error handling](#error-handling)\n  * [Raw IO](#raw-io)\n  * [Model classes vs dictionaries](#model-classes-vs-dictionaries)\n  * [Further resources](#further-resources)\n- [Questions](#questions)\n- [Issues](#issues)\n- [Open source at IBM](#open-source-at-ibm)\n- [Contributing](#contributing)\n- [License](#license)\n\n<!-- tocstop -->\n\n</details>\n\n## Overview\n\nThe IBM Cloudant Python SDK allows developers to programmatically\ninteract with [IBM Cloudant](https://cloud.ibm.com/apidocs/cloudant)\nwith the help of the `ibmcloudant` package.\n\n## Features\n\nThe purpose of this Python SDK is to wrap most of the HTTP request APIs\nprovided by Cloudant and supply other functions to ease the usage of Cloudant.\nThis SDK should make life easier for programmers to do what’s really important\nto them: developing software.\n\nReasons why you should consider using Cloudant Python SDK in your\nproject:\n\n- Supported by IBM Cloudant.\n- Server compatibility with:\n    - IBM Cloudant.\n    - [Apache CouchDB 3.x](https://docs.couchdb.org/en/stable/) for data operations.\n- Includes all the most popular and latest supported endpoints for\n  applications.\n- Handles the authentication.\n- Familiar user experience with IBM Cloud SDKs.\n- Flexibility to use either built-in models or byte-based requests and responses for documents.\n- Instances of the client are unconditionally thread-safe.\n\n## Prerequisites\n\n- A\n  [Cloudant](https://cloud.ibm.com/docs/Cloudant/getting-started.html#step-1-connect-to-your-cloudant-nosql-db-service-instance-on-ibm-cloud)\n  service instance or a\n  [CouchDB](https://docs.couchdb.org/en/latest/install/index.html)\n  server.\n- Python 3.7 or above.\n\n## Installation\n\nTo install, use `pip` or `easy_install`:\n\n```bash\npip install --upgrade \"ibmcloudant>=0.4.0\"\n```\n\nor\n\n```bash\neasy_install --upgrade \"ibmcloudant>=0.4.0\"\n```\n\n## Authentication\n\n[service-credentials]: https://cloud.ibm.com/docs/Cloudant?topic=Cloudant-locating-your-service-credentials\n[cloud-IAM-mgmt]: https://cloud.ibm.com/docs/Cloudant?topic=Cloudant-managing-access-for-cloudant#introduction-iam-ai\n[couch-cookie-auth]: https://docs.couchdb.org/en/stable/api/server/authn.html#cookie-authentication\n[cloudant-cookie-auth]: https://cloud.ibm.com/docs/Cloudant?topic=Cloudant-work-with-your-account#cookie-authentication\n[couch-basic-auth]: https://docs.couchdb.org/en/stable/api/server/authn.html#basic-authentication\n[cloudant-basic-auth]: https://cloud.ibm.com/docs/Cloudant?topic=Cloudant-work-with-your-account#basic-authentication\n\nThis library requires some of your\n[Cloudant service credentials][service-credentials] to authenticate with your\naccount.\n\n1. `IAM`, `COUCHDB_SESSION`, `BASIC` or `NOAUTH` **authentication type**.\n    1. [*IAM authentication*](#iam-authentication) is highly recommended when your\n    back-end database server is [**Cloudant**][cloud-IAM-mgmt]. This\n    authentication type requires a server-generated `apikey` instead of a\n    user-given password. You can create one\n    [here](https://cloud.ibm.com/iam/apikeys).\n    1. [*Session cookie (`COUCHDB_SESSION`) authentication*](#session-cookie-authentication)\n    is recommended for [Apache CouchDB][couch-cookie-auth] or for\n    [Cloudant][cloudant-cookie-auth] when IAM is unavailable. It exchanges username\n    and password credentials for an `AuthSession` cookie from the `/_session`\n    endpoint.\n    1. [*Basic* (or legacy) *authentication*](#basic-authentication) is a fallback\n    for both [Cloudant][cloudant-basic-auth] and [Apache CouchDB][couch-basic-auth]\n    back-end database servers. This authentication type requires the good old\n    `username` and `password` credentials.\n    1. *Noauth* authentication does not require credentials. Note that this\n    authentication type only works with queries against a database with read\n    access for everyone.\n1. The service `url`.\n\nThere are several ways to **set** these properties:\n\n1. As [environment variables](#authentication-with-environment-variables)\n1. The [programmatic approach](#programmatic-authentication)\n1. With an [external credentials file](#authentication-with-external-configuration)\n\n### Authentication with environment variables\n\n#### IAM authentication\n\nFor Cloudant *IAM authentication*, set the following environmental variables by\nreplacing the `<url>` and `<apikey>` with your proper\n[service credentials][service-credentials]. There is no need to set\n`CLOUDANT_AUTH_TYPE` to `IAM` because it is the default.\n\n```bash\nCLOUDANT_URL=<url>\nCLOUDANT_APIKEY=<apikey>\n```\n\n#### Session cookie authentication\n\nFor `COUCHDB_SESSION` authentication, set the following environmental variables\nby replacing the `<url>`, `<username>` and `<password>` with your proper\n[service credentials][service-credentials].\n\n```bash\nCLOUDANT_AUTH_TYPE=COUCHDB_SESSION\nCLOUDANT_URL=<url>\nCLOUDANT_USERNAME=<username>\nCLOUDANT_PASSWORD=<password>\n```\n\n#### Basic authentication\n\nFor *Basic authentication*, set the following environmental variables by\nreplacing the `<url>`, `<username>` and `<password>` with your proper\n[service credentials][service-credentials].\n\n```bash\nCLOUDANT_AUTH_TYPE=BASIC\nCLOUDANT_URL=<url>\nCLOUDANT_USERNAME=<username>\nCLOUDANT_PASSWORD=<password>\n```\n\n**Note**: There are also additional [*Bearer token*](https://github.com/IBM/python-sdk-core/blob/main/Authentication.md#bearer-token-authentication), [*Container*](https://github.com/IBM/python-sdk-core/blob/main/Authentication.md#container-authentication) and [*VPC Instance*](https://github.com/IBM/python-sdk-core/blob/main/Authentication.md#vpc-instance-authentication) authentication methods. For more details, please follow the provided links.\nWe recommend that you use [IAM](#iam-authentication) for Cloudant and\n[Session](#session-cookie-authentication) for CouchDB authentication.\n\n### Authentication with external configuration\n\nTo use an external configuration file, the\n[Cloudant API docs](https://cloud.ibm.com/apidocs/cloudant?code=python#authentication-with-external-configuration),\nor the\n[general SDK usage information](https://github.com/IBM/ibm-cloud-sdk-common#using-external-configuration)\nwill guide you.\n\n### Programmatic authentication\n\nTo learn more about how to use programmatic authentication, see the related\ndocumentation in the\n[Cloudant API docs](https://cloud.ibm.com/apidocs/cloudant?code=python#programmatic-authentication)\nor in the\n[Python SDK Core document](https://github.com/IBM/python-sdk-core/blob/main/Authentication.md) about authentication.\n\n## Using the SDK\n\nFor fundamental SDK usage information and config options, please see the common [IBM Cloud SDK](https://github.com/IBM/ibm-cloud-sdk-common/blob/main/README.md) documentation.\n\n### Request timeout configuration\n\nNo request timeout is defined, but a 2.5m read and a 60s connect timeout are set by default. Be sure to set a request timeout appropriate to your application usage and environment.\nThe [request timeout](https://github.com/IBM/ibm-cloud-sdk-common/blob/main/README.md) section contains details on how to change the value.\n\n**Note:** System settings may take precedence over configured timeout values.\n\n### Code examples\n\nThe following code examples\n[authenticate with the environment variables](#authenticate-with-environment-variables).\n\n#### 1. Create a database and add a document\n\n**Note:** This example code assumes that `orders` database does not exist in your account.\n\nThis example code creates `orders` database and adds a new document \"example\"\ninto it. To connect, you must set your environment variables with\nthe *service url*, *authentication type* and *authentication credentials*\nof your Cloudant service.\n\nCloudant environment variable naming starts with a *service name* prefix that identifies your service.\nBy default this is `CLOUDANT`, see the settings in the\n[authentication with environment variables section](#authentication-with-environment-variables).\n\nIf you would like to rename your Cloudant service from `CLOUDANT`,\nyou must use your defined service name as the prefix for all Cloudant related environment variables.\n\nOnce the environment variables are set, you can try out the code examples.\n\n[embedmd]:# (test/examples/src/create_db_and_doc.py /import/ $)\n```py\nimport logging\n\nfrom ibm_cloud_sdk_core import ApiException\nfrom ibmcloudant.cloudant_v1 import CloudantV1, Document\n\n# Set logging level to show only critical logs\nlogging.basicConfig(level=logging.CRITICAL)\n\n# 1. Create a client with `CLOUDANT` default service name =============\nclient = CloudantV1.new_instance()\n\n# 2. Create a database ================================================\nexample_db_name = \"orders\"\n\n# Try to create database if it doesn't exist\ntry:\n    put_database_result = client.put_database(\n        db=example_db_name\n    ).get_result()\n    if put_database_result[\"ok\"]:\n        print(f'\"{example_db_name}\" database created.')\nexcept ApiException as ae:\n    if ae.code == 412:\n        print(f'Cannot create \"{example_db_name}\" database, ' +\n              'it already exists.')\n\n# 3. Create a document ================================================\n# Create a document object with \"example\" id\nexample_doc_id = \"example\"\n# Setting `id` for the document is optional when \"post_document\"\n# function is used for CREATE. When `id` is not provided the server\n# will generate one for your document.\nexample_document: Document = Document(id=example_doc_id)\n\n# Add \"name\" and \"joined\" fields to the document\nexample_document.name = \"Bob Smith\"\nexample_document.joined = \"2019-01-24T10:42:59.000Z\"\n\n# Save the document in the database with \"post_document\" function\ncreate_document_response = client.post_document(\n    db=example_db_name,\n    document=example_document\n).get_result()\n\n# =====================================================================\n# Note: saving the document can also be done with the \"put_document\"\n# function. In this case `doc_id` is required for a CREATE operation:\n\"\"\"\ncreate_document_response = client.put_document(\n    db=example_db_name,\n    doc_id=example_doc_id,\n    document=example_document\n).get_result()\n\"\"\"\n# =====================================================================\n\n# Keeping track of the revision number of the document object\n# is necessary for further UPDATE/DELETE operations:\nexample_document.rev = create_document_response[\"rev\"]\nprint(f'You have created the document:\\n{example_document}')\n```\n\nWhen you run the code, you see a result similar to the following output.\n\n[embedmd]:# (test/examples/output/create_db_and_doc.txt)\n```txt\n\"orders\" database created.\nYou have created the document:\n{\n  \"_id\": \"example\",\n  \"_rev\": \"1-1b403633540686aa32d013fda9041a5d\",\n  \"name\": \"Bob Smith\",\n  \"joined\": \"2019-01-24T10:42:99.000Z\"\n}\n```\n\n#### 2. Retrieve information from an existing database\n\n**Note**: This example code assumes that you have created both the `orders`\ndatabase and the `example` document by\n[running the previous example code](#1-create-a-database-and-add-a-document)\nsuccessfully. Otherwise, the following error message occurs, \"Cannot delete document because either 'orders'\ndatabase or 'example' document was not found.\"\n\n<details>\n<summary>Gather database information example</summary>\n\n[embedmd]:# (test/examples/src/get_info_from_existing_database.py /import/ $)\n```py\nimport json\n\nfrom ibmcloudant.cloudant_v1 import CloudantV1\n\n# 1. Create a client with `CLOUDANT` default service name ============\nclient = CloudantV1.new_instance()\n\n# 2. Get server information ===========================================\nserver_information = client.get_server_information(\n).get_result()\n\nprint(f'Server Version: {server_information[\"version\"]}')\n\n# 3. Get database information for \"orders\" ==========================\ndb_name = \"orders\"\n\ndb_information = client.get_database_information(\n    db=db_name\n).get_result()\n\n# 4. Show document count in database ==================================\ndocument_count = db_information[\"doc_count\"]\n\nprint(f'Document count in \\\"{db_information[\"db_name\"]}\\\" '\n      f'database is {document_count}.')\n\n# 5. Get \"example\" document out of the database by document id ============\ndocument_example = client.get_document(\n    db=db_name,\n    doc_id=\"example\"\n).get_result()\n\nprint(f'Document retrieved from database:\\n'\n      f'{json.dumps(document_example, indent=2)}')\n```\n\n\n</details>\nWhen you run the code, you see a result similar to the following output.\n\n[embedmd]:# (test/examples/output/get_info_from_existing_database.txt)\n```txt\nServer Version: 2.1.1\nDocument count in \"orders\" database is 1.\nDocument retrieved from database:\n{\n  \"_id\": \"example\",\n  \"_rev\": \"1-1b403633540686aa32d013fda9041a5d\",\n  \"name\": \"Bob Smith\",\n  \"joined\": \"2019-01-24T10:42:99.000Z\"\n}\n```\n\n#### 3. Update your previously created document\n\n**Note**: This example code assumes that you have created both the `orders`\ndatabase and the `example` document by\n[running the previous example code](#1-create-a-database-and-add-a-document)\nsuccessfully. Otherwise, the following error message occurs, \"Cannot update document because either 'orders'\ndatabase or 'example' document was not found.\"\n\n<details>\n<summary>Update code example</summary>\n\n[embedmd]:# (test/examples/src/update_doc.py /import/ $)\n```py\nimport json\nimport logging\n\nfrom ibm_cloud_sdk_core import ApiException\nfrom ibmcloudant.cloudant_v1 import CloudantV1\n\n# Set logging level to show only critical logs\nlogging.basicConfig(level=logging.CRITICAL)\n\n# 1. Create a client with `CLOUDANT` default service name =============\nclient = CloudantV1.new_instance()\n\n# 2. Update the document ==============================================\nexample_db_name = \"orders\"\nexample_doc_id = \"example\"\n\n# Try to get the document if it previously existed in the database\ntry:\n    document = client.get_document(\n        db=example_db_name,\n        doc_id=example_doc_id\n    ).get_result()\n\n    # =================================================================\n    # Note: for response byte stream use:\n    \"\"\"\n    document_as_byte_stream = client.get_document_as_stream(\n        db=example_db_name,\n        doc_id=example_doc_id\n    ).get_result()\n    \"\"\"\n    # =================================================================\n\n    #  Add Bob Smith's address to the document\n    document[\"address\"] = \"19 Front Street, Darlington, DL5 1TY\"\n\n    #  Remove the joined property from document object\n    if \"joined\" in document:\n        document.pop(\"joined\")\n\n    # Update the document in the database\n    update_document_response = client.post_document(\n        db=example_db_name,\n        document=document\n    ).get_result()\n\n    # =================================================================\n    # Note 1: for request byte stream use:\n    \"\"\"\n    update_document_response = client.post_document(\n        db=example_db_name,\n        document=document_as_byte_stream\n    ).get_result()\n    \"\"\"\n    # =================================================================\n\n    # =================================================================\n    # Note 2: updating the document can also be done with the\n    # \"put_document\" function. `doc_id` and `rev` are required for an\n    # UPDATE operation, but `rev` can be provided in the document\n    # object as `_rev` too:\n    \"\"\"\n    update_document_response = client.put_document(\n        db=example_db_name,\n        doc_id=example_doc_id,  # doc_id is a required parameter\n        rev=document[\"_rev\"],\n        document=document  # _rev in the document object CAN replace above `rev` parameter\n    ).get_result()\n    \"\"\"\n    # =================================================================\n\n    # Keeping track of the latest revision number of the document\n    # object is necessary for further UPDATE/DELETE operations:\n    document[\"_rev\"] = update_document_response[\"rev\"]\n    print(f'You have updated the document:\\n' +\n          json.dumps(document, indent=2))\n\nexcept ApiException as ae:\n    if ae.code == 404:\n        print('Cannot delete document because either ' +\n              f'\"{example_db_name}\" database or \"{example_doc_id}\" ' +\n              'document was not found.')\n```\n\n\n</details>\nWhen you run the code, you see a result similar to the following output.\n\n[embedmd]:# (test/examples/output/update_doc.txt)\n```txt\n{\n  \"_id\": \"example\",\n  \"_rev\": \"2-4e2178e85cffb32d38ba4e451f6ca376\",\n  \"name\": \"Bob Smith\",\n  \"address\": \"19 Front Street, Darlington, DL5 1TY\"\n}\n```\n\n#### 4. Delete your previously created document\n\n**Note**: This example code assumes that you have created both the `orders`\ndatabase and the `example` document by\n[running the previous example code](#1-create-a-database-and-add-a-document)\nsuccessfully. Otherwise, the following error message occurs, \"Cannot delete document because either 'orders'\ndatabase or 'example' document was not found.\"\n\n<details>\n<summary>Delete code example</summary>\n\n[embedmd]:# (test/examples/src/delete_doc.py /import/ $)\n```py\nimport logging\n\nfrom ibm_cloud_sdk_core import ApiException\nfrom ibmcloudant.cloudant_v1 import CloudantV1\n\n# Set logging level to show only critical logs\nlogging.basicConfig(level=logging.CRITICAL)\n\n# 1. Create a client with `CLOUDANT` default service name =============\nclient = CloudantV1.new_instance()\n\n# 2. Delete the document ==============================================\nexample_db_name = \"orders\"\nexample_doc_id = \"example\"\n\n# Try to get the document if it previously existed in the database\ntry:\n    document = client.get_document(\n        db=example_db_name,\n        doc_id=example_doc_id\n    ).get_result()\n\n    delete_document_response = client.delete_document(\n        db=example_db_name,\n        doc_id=example_doc_id,  # `doc_id` is required for DELETE\n        rev=document[\"_rev\"]    # `rev` is required for DELETE\n    ).get_result()\n\n    if delete_document_response[\"ok\"]:\n        print('You have deleted the document.')\n\nexcept ApiException as ae:\n    if ae.code == 404:\n        print('Cannot delete document because either ' +\n              f'\"{example_db_name}\" database or \"{example_doc_id}\"' +\n              'document was not found.')\n```\n\n\n</details>\nWhen you run the code, you see the following output.\n\n[embedmd]:# (test/examples/output/delete_doc.txt)\n```txt\nYou have deleted the document.\n```\n\n#### Further code examples\n\nFor a complete list of code examples, see the [examples directory](examples#examples-for-python).\n\n### Error handling\n\nFor sample code on handling errors, see\n[Cloudant API docs](https://cloud.ibm.com/apidocs/cloudant?code=python#error-handling).\n\n### Raw IO\n\nFor endpoints that read or write document content it is possible to bypass\nusage of the built-in object with byte streams.\n\nDepending on the specific SDK operation it may be possible to:\n* accept a user-provided byte stream to send to the server as a request body\n* return a byte stream of the server response body to the user\n\nRequest byte stream can be supplied for arguments that accept the `BinaryIO` type.\nFor these cases you can pass this byte stream directly to the HTTP request body.\n\nResponse byte stream is supported in functions with the suffix of `_as_stream`.\nThe returned byte stream allows the response body to be consumed\nwithout triggering JSON unmarshalling that is typically performed by the SDK.\n\nThe [update document](#3-update-your-previously-created-document) section\ncontains examples for both request and response byte stream cases.\n\nThe API reference contains further examples of using byte streams.\nThey are titled \"Example request as stream\" and are initially collapsed.\nExpand them to see examples of:\n\n- Byte requests:\n  - [Bulk modify multiple documents in a database](https://cloud.ibm.com/apidocs/cloudant?code=python#postbulkdocs)\n\n- Byte responses:\n  - [Query a list of all documents in a database](https://cloud.ibm.com/apidocs/cloudant?code=python#postalldocs)\n  - [Query the database document changes feed](https://cloud.ibm.com/apidocs/cloudant?code=python#postchanges)\n\n### Model classes vs dictionaries\n\nThis SDK supports two possible formats to define an HTTP request. One approach uses only model classes and the other only dictionaries.\n\n<details>\n<summary>Example using model class structure</summary>\n\n[embedmd]:# (test/examples/src/model_vs_dict/put_ddoc_class.py /from/ $)\n```py\nfrom ibmcloudant.cloudant_v1 import DesignDocument, CloudantV1, DesignDocumentOptions, SearchIndexDefinition\n\nclient = CloudantV1.new_instance()\n\nprice_index = SearchIndexDefinition(\n    index='function (doc) { index(\"price\", doc.price); }'\n)\n\ndesign_document_options = DesignDocumentOptions(\n    partitioned=True\n)\n\npartitioned_design_doc = DesignDocument(\n    indexes={'findByPrice': price_index},\n    options=design_document_options\n)\n\nresponse = client.put_design_document(\n    db='products',\n    design_document=partitioned_design_doc,\n    ddoc='appliances'\n).get_result()\n\nprint(response)\n```\n\n</details>\n\n<details>\n<summary>Same example using dictionary structure</summary>\n\n[embedmd]:# (test/examples/src/model_vs_dict/put_ddoc_dict.py /from/ $)\n```py\nfrom ibmcloudant.cloudant_v1 import CloudantV1\n\nclient = CloudantV1.new_instance()\n\nprice_index = {\n    'index': 'function (doc) { index(\"price\", doc.price); }'\n}\n\npartitioned_design_doc = {\n    'indexes': {'findByPrice': price_index},\n    'options': {'partitioned': True},\n}\n\nresponse = client.put_design_document(\n    db='products',\n    design_document=partitioned_design_doc,\n    ddoc='appliances'\n).get_result()\n\nprint(response)\n```\n\n</details>\n\nSince model classes and dicts are different data structures, they cannot be combined.\n\n<details>\n<summary>This solution will be invalid</summary>\n\n[embedmd]:# (test/examples/src/model_vs_dict/put_ddoc_invalid.py /from/ $)\n```py\nfrom ibmcloudant.cloudant_v1 import CloudantV1, DesignDocument\n\nclient = CloudantV1.new_instance()\n\nprice_index = {\n    'index': 'function (doc) { index(\"price\", doc.price); }'\n}\n\npartitioned_design_doc = DesignDocument(\n    indexes={'findByPrice': price_index},\n    options={'partitioned': True}\n)\n\nresponse = client.put_design_document(\n    db='products',\n    design_document=partitioned_design_doc,\n    ddoc='appliances'\n).get_result()\n\nprint(response)\n```\n\n</details>\n\n### Further resources\n\n- [Cloudant API docs](https://cloud.ibm.com/apidocs/cloudant?code=python):\n  API reference including usage examples for Cloudant Python SDK API.\n- [Pydoc](https://ibm.github.io/cloudant-python-sdk/):\n  Cloudant Python SDK API Documentation.\n- [Cloudant docs](https://cloud.ibm.com/docs/Cloudant?topic=Cloudant-getting-started-with-cloudant):\n  The official documentation page for Cloudant.\n- [Cloudant blog](https://blog.cloudant.com/):\n  Many useful articles about how to optimize Cloudant for common problems.\n\n## Questions\n\nIf you are having difficulties using this SDK or have a question about the\nIBM Cloud services, ask a question on\n[Stack Overflow](http://stackoverflow.com/questions/ask?tags=ibm-cloud).\n\n## Issues\n\nIf you encounter an issue with the project, you are welcome to submit a\n[bug report](https://github.com/IBM/cloudant-python-sdk/issues).\n\nBefore you submit a bug report, search for\n[similar issues](https://github.com/IBM/cloudant-python-sdk/issues?q=is%3Aissue) and review the\n[KNOWN_ISSUES file](KNOWN_ISSUES.md) to verify that your issue hasn't been reported yet.\n\nPlease consult the [security policy](https://github.com/IBM/cloudant-python-sdk/security/policy) before opening security related issues.\n\n## Open source at IBM\n\nFind more open source projects on the [IBM GitHub](http://ibm.github.io/) page.\n\n## Contributing\n\nFor more information, see [CONTRIBUTING](CONTRIBUTING.md).\n\n## License\n\nThis SDK is released under the Apache 2.0 license. To read the full text of the license, see [LICENSE](LICENSE).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/IBM/cloudant-python-sdk",
    "keywords": "ibmcloudant",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ibmcloudant",
    "package_url": "https://pypi.org/project/ibmcloudant/",
    "platform": null,
    "project_url": "https://pypi.org/project/ibmcloudant/",
    "project_urls": {
      "Homepage": "https://github.com/IBM/cloudant-python-sdk"
    },
    "release_url": "https://pypi.org/project/ibmcloudant/0.4.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python client library for IBM Cloudant",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17462055,
  "releases": {
    "0.0.22": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2ac1defe726b2d697589ae7603cd8b82a7af42e3a9d33311604413d334ecb40",
          "md5": "1e7d1b459f13e8cab8036b8308881add",
          "sha256": "4b51daeeb3175e28efea75a9825e39c52d199a23c12fb4d9642a239d4f89755f"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.22.tar.gz",
        "has_sig": false,
        "md5_digest": "1e7d1b459f13e8cab8036b8308881add",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 89838,
        "upload_time": "2020-08-18T14:58:12",
        "upload_time_iso_8601": "2020-08-18T14:58:12.190949Z",
        "url": "https://files.pythonhosted.org/packages/a2/ac/1defe726b2d697589ae7603cd8b82a7af42e3a9d33311604413d334ecb40/ibmcloudant-0.0.22.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.23": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5ac9510e2476770431d4746a727e31dba3db16e875b80eedaa18937fba8f87e",
          "md5": "b44199685b024fa7c8eb9353e5d388f7",
          "sha256": "38038e7fcfba6fa8e3544f36e5c843ed79dfe3f0b13bf822aad90c74930b3463"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.23.tar.gz",
        "has_sig": false,
        "md5_digest": "b44199685b024fa7c8eb9353e5d388f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 89792,
        "upload_time": "2020-08-18T16:15:17",
        "upload_time_iso_8601": "2020-08-18T16:15:17.199642Z",
        "url": "https://files.pythonhosted.org/packages/c5/ac/9510e2476770431d4746a727e31dba3db16e875b80eedaa18937fba8f87e/ibmcloudant-0.0.23.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.24": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e27cef294d978a668574a6a29ec108b44eecc295811b2abdfffb820ecc50c5c0",
          "md5": "5ea10be3f8c714695cf6f67f39f14560",
          "sha256": "114f37b821df1663b5b102acac30e2cfdd18b6f40de40253dc1d2ce944e8ab58"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.24.tar.gz",
        "has_sig": false,
        "md5_digest": "5ea10be3f8c714695cf6f67f39f14560",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 88436,
        "upload_time": "2020-08-19T09:39:31",
        "upload_time_iso_8601": "2020-08-19T09:39:31.828644Z",
        "url": "https://files.pythonhosted.org/packages/e2/7c/ef294d978a668574a6a29ec108b44eecc295811b2abdfffb820ecc50c5c0/ibmcloudant-0.0.24.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.25": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d8b394fc16f5b9493369a07b7895267fd386682442237ec85c3b046b6f53074",
          "md5": "0caaa1acaacb79ff3f4425cc25eef387",
          "sha256": "851f68a6af937f9a504a6b5393e95636d46c70043ba1190e4143765b1ea8b48f"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.25.tar.gz",
        "has_sig": false,
        "md5_digest": "0caaa1acaacb79ff3f4425cc25eef387",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 90584,
        "upload_time": "2020-08-20T14:43:30",
        "upload_time_iso_8601": "2020-08-20T14:43:30.890910Z",
        "url": "https://files.pythonhosted.org/packages/3d/8b/394fc16f5b9493369a07b7895267fd386682442237ec85c3b046b6f53074/ibmcloudant-0.0.25.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.26": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d149358e59c68430219c3ea952e8686154af9cad5753c2c9fef0b51ceb837cc",
          "md5": "b2d64e36230622e94d918fe35815de68",
          "sha256": "c752aa2464ade0c3a23f989e8bb2acf294cb59ee8e4dee271764cb4d619ff152"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.26.tar.gz",
        "has_sig": false,
        "md5_digest": "b2d64e36230622e94d918fe35815de68",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 90310,
        "upload_time": "2020-09-01T09:58:10",
        "upload_time_iso_8601": "2020-09-01T09:58:10.573369Z",
        "url": "https://files.pythonhosted.org/packages/8d/14/9358e59c68430219c3ea952e8686154af9cad5753c2c9fef0b51ceb837cc/ibmcloudant-0.0.26.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.27": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f45bd0ba53c510e432e70b47d74cb30489856c119c59e6cf5205b335cd5efc5f",
          "md5": "dbf106c609cc6e2250451f0f8610be20",
          "sha256": "92dc8d34dde49ec2489d011b499fb27074f29adbdcdcafc03f9eb3bedf3261e8"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.27.tar.gz",
        "has_sig": false,
        "md5_digest": "dbf106c609cc6e2250451f0f8610be20",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 88064,
        "upload_time": "2020-10-19T14:06:01",
        "upload_time_iso_8601": "2020-10-19T14:06:01.990780Z",
        "url": "https://files.pythonhosted.org/packages/f4/5b/d0ba53c510e432e70b47d74cb30489856c119c59e6cf5205b335cd5efc5f/ibmcloudant-0.0.27.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.28": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64f705393d2f8375524b14470e2b957cdea4b58a2b8fd359d7164c5ca2d4e97b",
          "md5": "88e25826c3b6fad8282092a0b62eb800",
          "sha256": "17e7ba8b3bcf55b95729e6bed7f5d4689b7677e20659f4ce8546379a3810075d"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.28.tar.gz",
        "has_sig": false,
        "md5_digest": "88e25826c3b6fad8282092a0b62eb800",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 92521,
        "upload_time": "2020-11-12T15:04:50",
        "upload_time_iso_8601": "2020-11-12T15:04:50.392333Z",
        "url": "https://files.pythonhosted.org/packages/64/f7/05393d2f8375524b14470e2b957cdea4b58a2b8fd359d7164c5ca2d4e97b/ibmcloudant-0.0.28.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.29": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67b3ab8bfef09faa774417a26308ded067028c2cd20097a55b3b38d95d762278",
          "md5": "87d31f1ad415cd0ff0016630b1989a7a",
          "sha256": "3c5c728282aa0f7f414aa2b0abb36a6f4d9d8614cba00f76b05e394b8c695db6"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.29.tar.gz",
        "has_sig": false,
        "md5_digest": "87d31f1ad415cd0ff0016630b1989a7a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 95324,
        "upload_time": "2021-01-12T09:16:25",
        "upload_time_iso_8601": "2021-01-12T09:16:25.122904Z",
        "url": "https://files.pythonhosted.org/packages/67/b3/ab8bfef09faa774417a26308ded067028c2cd20097a55b3b38d95d762278/ibmcloudant-0.0.29.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.31": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "538924b6ff5c3b4b28e0516af06d238ede5444ab77cff097d2d3f5cb871218b6",
          "md5": "423083f16e7050bb298911535e7041ea",
          "sha256": "ef2d6892b5394f61ceb9fad6603f23221684d3a8bf7f60825349035127f92144"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.31.tar.gz",
        "has_sig": false,
        "md5_digest": "423083f16e7050bb298911535e7041ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 95829,
        "upload_time": "2021-02-11T15:43:16",
        "upload_time_iso_8601": "2021-02-11T15:43:16.738820Z",
        "url": "https://files.pythonhosted.org/packages/53/89/24b6ff5c3b4b28e0516af06d238ede5444ab77cff097d2d3f5cb871218b6/ibmcloudant-0.0.31.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.32": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb48d0b435b02273e1b9ce78218107c9ce75a1bf56306c33ded930674cbd35b9",
          "md5": "0427ac19715d7edf61ae75330e3d8601",
          "sha256": "40b61b008a2673cdbad9f307a7c2c911aaf5f3615e64b2c0f03878e53ef8608c"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.32.tar.gz",
        "has_sig": false,
        "md5_digest": "0427ac19715d7edf61ae75330e3d8601",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 93464,
        "upload_time": "2021-03-02T15:33:55",
        "upload_time_iso_8601": "2021-03-02T15:33:55.969128Z",
        "url": "https://files.pythonhosted.org/packages/eb/48/d0b435b02273e1b9ce78218107c9ce75a1bf56306c33ded930674cbd35b9/ibmcloudant-0.0.32.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.33": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f28b83eaf7d3234c537b2c88041c2ee19a3ddd9b8a1867d0a9c12d6075d9bd50",
          "md5": "59b1dcd818b02110181ff1f4c5dda2ca",
          "sha256": "5c87c9541bf3471b7a4306c2f1c9239f03aeb800bbf8c7be631243d7eb3a3aad"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.33.tar.gz",
        "has_sig": false,
        "md5_digest": "59b1dcd818b02110181ff1f4c5dda2ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 94535,
        "upload_time": "2021-04-28T11:09:52",
        "upload_time_iso_8601": "2021-04-28T11:09:52.608342Z",
        "url": "https://files.pythonhosted.org/packages/f2/8b/83eaf7d3234c537b2c88041c2ee19a3ddd9b8a1867d0a9c12d6075d9bd50/ibmcloudant-0.0.33.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.34": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93b0055d26cfeef4cb67d23b96515b8e67c20d430f9200a5258125cb23a4e9cb",
          "md5": "a1aacc0ddfbfcb269db6afdd831a896f",
          "sha256": "9c20d4e2fc8d24d866b8cf378a5f41d192ec9a47091cc0080a8cc84c0235516c"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.34.tar.gz",
        "has_sig": false,
        "md5_digest": "a1aacc0ddfbfcb269db6afdd831a896f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 88263,
        "upload_time": "2021-06-16T14:15:01",
        "upload_time_iso_8601": "2021-06-16T14:15:01.474789Z",
        "url": "https://files.pythonhosted.org/packages/93/b0/055d26cfeef4cb67d23b96515b8e67c20d430f9200a5258125cb23a4e9cb/ibmcloudant-0.0.34.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.35": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28b178db9dca2039d34b2e71beb585ead19773a30b89a786e78c7a1b38d13f60",
          "md5": "d102bd2b1f778a2c85cdec413baaa940",
          "sha256": "95a4d08433e787371e560297977155320b8217b2e971043b98bff67a7415c251"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.35.tar.gz",
        "has_sig": false,
        "md5_digest": "d102bd2b1f778a2c85cdec413baaa940",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 92993,
        "upload_time": "2021-08-05T11:01:52",
        "upload_time_iso_8601": "2021-08-05T11:01:52.197914Z",
        "url": "https://files.pythonhosted.org/packages/28/b1/78db9dca2039d34b2e71beb585ead19773a30b89a786e78c7a1b38d13f60/ibmcloudant-0.0.35.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.36": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37e55be88f49c703714577bdc9475eb02303224825c4c2c66a0bc25fbedfd74e",
          "md5": "cba2597f048379d525522c407d825168",
          "sha256": "2e981b8960d7d1899736b82dabf7a90ca99e2a6d64ea560358271376bd3f2af0"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.36.tar.gz",
        "has_sig": false,
        "md5_digest": "cba2597f048379d525522c407d825168",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 93587,
        "upload_time": "2021-08-26T09:54:57",
        "upload_time_iso_8601": "2021-08-26T09:54:57.114784Z",
        "url": "https://files.pythonhosted.org/packages/37/e5/5be88f49c703714577bdc9475eb02303224825c4c2c66a0bc25fbedfd74e/ibmcloudant-0.0.36.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.37": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfc9ae23df34ad6f4548ce124796b6cd82e3e5477eafb2a44a1deeb9ba36dc82",
          "md5": "df74e18ce20ebcf8ab65ca6cec8f9b91",
          "sha256": "75dc1707fc7677d37ea77e60f3f79ab0b6888f359e456429e115037726183e0d"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.37.tar.gz",
        "has_sig": false,
        "md5_digest": "df74e18ce20ebcf8ab65ca6cec8f9b91",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 95305,
        "upload_time": "2021-09-10T09:07:41",
        "upload_time_iso_8601": "2021-09-10T09:07:41.265182Z",
        "url": "https://files.pythonhosted.org/packages/df/c9/ae23df34ad6f4548ce124796b6cd82e3e5477eafb2a44a1deeb9ba36dc82/ibmcloudant-0.0.37.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.38": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a60b619d89905f502fa8e306385ce28fddc8eaad90877fe7c58a3f5fbc503982",
          "md5": "6ee07eb645eaf59e05dbf717fa20854d",
          "sha256": "d46de2f12f3d0d5ff4faf6b249e7832c4c4b4805b04502416e43249bb6c06ca2"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.38.tar.gz",
        "has_sig": false,
        "md5_digest": "6ee07eb645eaf59e05dbf717fa20854d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 95499,
        "upload_time": "2021-10-05T13:06:51",
        "upload_time_iso_8601": "2021-10-05T13:06:51.032384Z",
        "url": "https://files.pythonhosted.org/packages/a6/0b/619d89905f502fa8e306385ce28fddc8eaad90877fe7c58a3f5fbc503982/ibmcloudant-0.0.38.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.39": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "952c697db1e3baa03e04a1ab3a43bad1a27d8f9e4f63d3365b65c958cd582d7c",
          "md5": "7c6c696b8edb2c787b8cc19ff0e28717",
          "sha256": "7e5b6fb2af6bd5ee8f297c8c053d9d39c923513aefac5a4ddcb8177a2a3d569a"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.39.tar.gz",
        "has_sig": false,
        "md5_digest": "7c6c696b8edb2c787b8cc19ff0e28717",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 95891,
        "upload_time": "2021-11-11T12:49:44",
        "upload_time_iso_8601": "2021-11-11T12:49:44.134433Z",
        "url": "https://files.pythonhosted.org/packages/95/2c/697db1e3baa03e04a1ab3a43bad1a27d8f9e4f63d3365b65c958cd582d7c/ibmcloudant-0.0.39.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.40": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "638fad98827a6f370a3e0a100a38742c26c82f8a8af198331334d25214746eb6",
          "md5": "a44b05c340b6120e22ec7e4b7725a146",
          "sha256": "17ae9a0c49b425dc53ef2ac258b948b9970c2cbd33d1e3be2f120b60a0e07959"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.40.tar.gz",
        "has_sig": false,
        "md5_digest": "a44b05c340b6120e22ec7e4b7725a146",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 89717,
        "upload_time": "2021-11-18T08:48:48",
        "upload_time_iso_8601": "2021-11-18T08:48:48.159043Z",
        "url": "https://files.pythonhosted.org/packages/63/8f/ad98827a6f370a3e0a100a38742c26c82f8a8af198331334d25214746eb6/ibmcloudant-0.0.40.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.41": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "720ad3b8a1e291c8a004f3d47d70a278013b46fe711cc5fb1bf5acc236ae3b23",
          "md5": "7c6740bc0e207fc076d3365c52cabc06",
          "sha256": "4bcdc695a4e3138c44d487ecb2884c184323ad3e45f887d4d27363243ce80141"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.41.tar.gz",
        "has_sig": false,
        "md5_digest": "7c6740bc0e207fc076d3365c52cabc06",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 96665,
        "upload_time": "2021-12-03T13:32:56",
        "upload_time_iso_8601": "2021-12-03T13:32:56.961591Z",
        "url": "https://files.pythonhosted.org/packages/72/0a/d3b8a1e291c8a004f3d47d70a278013b46fe711cc5fb1bf5acc236ae3b23/ibmcloudant-0.0.41.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.42": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ec03627aa91350350491ab0cd85321fae6b499c96dd8fffebb04cebe6451e53",
          "md5": "6275ca34c1333d0855d1f9546990c75b",
          "sha256": "19e0272b7687dfee66411fde62d084441c7fb8d68cd147bca291a5d714fda5cb"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.42.tar.gz",
        "has_sig": false,
        "md5_digest": "6275ca34c1333d0855d1f9546990c75b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 96972,
        "upload_time": "2022-01-25T13:21:21",
        "upload_time_iso_8601": "2022-01-25T13:21:21.174453Z",
        "url": "https://files.pythonhosted.org/packages/6e/c0/3627aa91350350491ab0cd85321fae6b499c96dd8fffebb04cebe6451e53/ibmcloudant-0.0.42.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.43": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea446bb6d274c6e01b380e9d9d093d7f628c7f6909fe692655a099beed20dd07",
          "md5": "67cd3c553e43b2fda39844235646d434",
          "sha256": "43da7b8f0cd178da0c60c22db8bda0f6ca4b679797ce0f9172d5d4baa1f07272"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.0.43.tar.gz",
        "has_sig": false,
        "md5_digest": "67cd3c553e43b2fda39844235646d434",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 98625,
        "upload_time": "2022-02-16T08:01:25",
        "upload_time_iso_8601": "2022-02-16T08:01:25.072227Z",
        "url": "https://files.pythonhosted.org/packages/ea/44/6bb6d274c6e01b380e9d9d093d7f628c7f6909fe692655a099beed20dd07/ibmcloudant-0.0.43.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fc8c1a5fa087c20f5cc0d09cc56bb484157cd9b8aad84e2df0039c7c86674d9",
          "md5": "36e331e8bd8138a1cc44de77f99f2758",
          "sha256": "a9564a3dd79af65ced3e7c472fafbbf44241cd041ab06bc7ddc7c88275029f9f"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "36e331e8bd8138a1cc44de77f99f2758",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 101691,
        "upload_time": "2022-03-29T15:25:57",
        "upload_time_iso_8601": "2022-03-29T15:25:57.923904Z",
        "url": "https://files.pythonhosted.org/packages/5f/c8/c1a5fa087c20f5cc0d09cc56bb484157cd9b8aad84e2df0039c7c86674d9/ibmcloudant-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f365d2b64161a30dcd4389c829cab8bcf56016ff4a9cb6dd4d9cc071366e27f5",
          "md5": "e9b82122a9e8efc6b5cf91f55ce62a34",
          "sha256": "bebe199486d40b6ba9bcee79bd7aa0048fa7d1c8e938bd821c3ebd3b994cf442"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e9b82122a9e8efc6b5cf91f55ce62a34",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 101695,
        "upload_time": "2022-04-28T10:13:48",
        "upload_time_iso_8601": "2022-04-28T10:13:48.273149Z",
        "url": "https://files.pythonhosted.org/packages/f3/65/d2b64161a30dcd4389c829cab8bcf56016ff4a9cb6dd4d9cc071366e27f5/ibmcloudant-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "997af5b9eaf67cb296e347af32f373166cdbdc57911f30230562c117de27c4bb",
          "md5": "6661c22027d3e598cf6fa7f49712b90c",
          "sha256": "b5576051290d3035ed6b3d656cb60ea09cecb654ae1ee35f2c25bc72f155f887"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6661c22027d3e598cf6fa7f49712b90c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 101814,
        "upload_time": "2022-05-27T09:39:27",
        "upload_time_iso_8601": "2022-05-27T09:39:27.087831Z",
        "url": "https://files.pythonhosted.org/packages/99/7a/f5b9eaf67cb296e347af32f373166cdbdc57911f30230562c117de27c4bb/ibmcloudant-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "610a3a73f267a15f7803f520c007ca1f5a91ce0fa844a4563aff306e60a7d827",
          "md5": "ac2258bab7073ab2bb9eac7c77d25e5b",
          "sha256": "ebcc6d416a67bbeaa2b5dd248bcfef5fbfb1197ac51c55a1e78e91a3ec9b6a05"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ac2258bab7073ab2bb9eac7c77d25e5b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 103408,
        "upload_time": "2022-07-06T15:52:24",
        "upload_time_iso_8601": "2022-07-06T15:52:24.013656Z",
        "url": "https://files.pythonhosted.org/packages/61/0a/3a73f267a15f7803f520c007ca1f5a91ce0fa844a4563aff306e60a7d827/ibmcloudant-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cea7ab3b50460a915d1653b6b14f18899c51d9a5761e6a63ec4c0b8ca7e125fd",
          "md5": "93965c422e8626356a0f2d0cf4a7648d",
          "sha256": "e3de3d49c1b1b390185c6449052648d03e360b1f0efed7d9a2b6be11f2ce16b4"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "93965c422e8626356a0f2d0cf4a7648d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 98310,
        "upload_time": "2022-08-23T15:16:46",
        "upload_time_iso_8601": "2022-08-23T15:16:46.544903Z",
        "url": "https://files.pythonhosted.org/packages/ce/a7/ab3b50460a915d1653b6b14f18899c51d9a5761e6a63ec4c0b8ca7e125fd/ibmcloudant-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48f446f66b5dd12f40b81adca47b1a2440d5649a07935922f5e1a0148126cd35",
          "md5": "c86149f261b9fb37e3c2d9fc47cbf685",
          "sha256": "7e50baacf3eb0be9998248a6bb667c221a3829b4216f8adf650f3cd0ca5b8bf2"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c86149f261b9fb37e3c2d9fc47cbf685",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 97649,
        "upload_time": "2022-09-30T09:15:19",
        "upload_time_iso_8601": "2022-09-30T09:15:19.554935Z",
        "url": "https://files.pythonhosted.org/packages/48/f4/46f66b5dd12f40b81adca47b1a2440d5649a07935922f5e1a0148126cd35/ibmcloudant-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5049112b1fe5b312aee89fd96cb25e72998f402a2c80fe06255251a8a2423ebe",
          "md5": "d5699ad0eab82df42e20e44cdfa05f5e",
          "sha256": "9327b8c2f69492b931769c68bc8b34980f2ba7f0bd937b280c412297dacb8bdb"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d5699ad0eab82df42e20e44cdfa05f5e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 97817,
        "upload_time": "2022-10-27T15:30:32",
        "upload_time_iso_8601": "2022-10-27T15:30:32.449692Z",
        "url": "https://files.pythonhosted.org/packages/50/49/112b1fe5b312aee89fd96cb25e72998f402a2c80fe06255251a8a2423ebe/ibmcloudant-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "673a844c3d81401c1af50e57b6ea9e2175df342041a49692ff0e7926ec2a21ae",
          "md5": "0f206b27f22cbdcbac964ffbcc9f9d6b",
          "sha256": "ce9233834e8c9615c590149a6f4e3feba94a7ef4620067355973c560e0d99715"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0f206b27f22cbdcbac964ffbcc9f9d6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 98919,
        "upload_time": "2022-11-30T10:31:29",
        "upload_time_iso_8601": "2022-11-30T10:31:29.204045Z",
        "url": "https://files.pythonhosted.org/packages/67/3a/844c3d81401c1af50e57b6ea9e2175df342041a49692ff0e7926ec2a21ae/ibmcloudant-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "177bc8de6a2ce6f3c1acfd66b1567caa8c25faa1bfbb53e23b0ca8afd65b70e1",
          "md5": "6788cbfb8881bedff31fe71c5f03c7fb",
          "sha256": "41945965b3cbf1d7cd7daedc1d6d68187d0d032ec3ee60f528ab7b124bb8bbe0"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6788cbfb8881bedff31fe71c5f03c7fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 98923,
        "upload_time": "2023-01-05T15:05:07",
        "upload_time_iso_8601": "2023-01-05T15:05:07.823547Z",
        "url": "https://files.pythonhosted.org/packages/17/7b/c8de6a2ce6f3c1acfd66b1567caa8c25faa1bfbb53e23b0ca8afd65b70e1/ibmcloudant-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1978757eebd409b9022db0335a4a5c2cedf6100ff9c54b7c0b50653b99328c04",
          "md5": "4efc9bfc0036f01877da8b00b3713055",
          "sha256": "95a9b613ac6d11b869e5475512ea971d5638c7e84cfbb62ccda183157a82c923"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4efc9bfc0036f01877da8b00b3713055",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 99098,
        "upload_time": "2023-02-09T17:55:34",
        "upload_time_iso_8601": "2023-02-09T17:55:34.047174Z",
        "url": "https://files.pythonhosted.org/packages/19/78/757eebd409b9022db0335a4a5c2cedf6100ff9c54b7c0b50653b99328c04/ibmcloudant-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09b1d68161d44a3858590e0788f069cbe5c86cecaefa30d7ca1b1618b9861069",
          "md5": "e5f4db0511ff0966f12d1048c6da684d",
          "sha256": "add75e43059f3e4bd40df4096c3aaecfa430f0ad4117b679b6a9bff06e18e95e"
        },
        "downloads": -1,
        "filename": "ibmcloudant-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e5f4db0511ff0966f12d1048c6da684d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 101001,
        "upload_time": "2023-03-27T14:30:48",
        "upload_time_iso_8601": "2023-03-27T14:30:48.985713Z",
        "url": "https://files.pythonhosted.org/packages/09/b1/d68161d44a3858590e0788f069cbe5c86cecaefa30d7ca1b1618b9861069/ibmcloudant-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "09b1d68161d44a3858590e0788f069cbe5c86cecaefa30d7ca1b1618b9861069",
        "md5": "e5f4db0511ff0966f12d1048c6da684d",
        "sha256": "add75e43059f3e4bd40df4096c3aaecfa430f0ad4117b679b6a9bff06e18e95e"
      },
      "downloads": -1,
      "filename": "ibmcloudant-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e5f4db0511ff0966f12d1048c6da684d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 101001,
      "upload_time": "2023-03-27T14:30:48",
      "upload_time_iso_8601": "2023-03-27T14:30:48.985713Z",
      "url": "https://files.pythonhosted.org/packages/09/b1/d68161d44a3858590e0788f069cbe5c86cecaefa30d7ca1b1618b9861069/ibmcloudant-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}