{
  "info": {
    "author": "Denis Kuznetsov",
    "author_email": "kuznetsov.den.p@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "\n# Dialog Flow Framework\n\nThe Dialog Flow Framework (DFF) allows you to write conversational services.\nThe service is written by defining a special dialog graph that describes the behavior of the dialog service.\nThe dialog graph contains the dialog script. DFF offers a specialized language (DSL) for quickly writing dialog graphs.\nYou can use it in services such as writing skills for Amazon Alexa, etc., chatbots for social networks, website call centers, etc.\n\n[![Documentation Status](https://github.com/deeppavlov/dialog_flow_framework/workflows/build_and_publish_docs/badge.svg)](https://deeppavlov.github.io/dialog_flow_framework)\n[![Codestyle](https://github.com/deeppavlov/dialog_flow_framework/workflows/codestyle/badge.svg)](https://github.com/deeppavlov/dialog_flow_framework/actions/workflows/codestyle.yml)\n[![Tests](https://github.com/deeppavlov/dialog_flow_framework/workflows/test_coverage/badge.svg)](https://github.com/deeppavlov/dialog_flow_framework/actions/workflows/test_coverage.yml)\n[![License Apache 2.0](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](https://github.com/deeppavlov/dialog_flow_framework/blob/master/LICENSE)\n![Python 3.7, 3.8, 3.9](https://img.shields.io/badge/python-3.7%20%7C%203.8%20%7C%203.9-green.svg)\n[![PyPI](https://img.shields.io/pypi/v/dff)](https://pypi.org/project/dff/)\n[![Downloads](https://pepy.tech/badge/dff)](https://pepy.tech/project/dff)\n\n# Quick Start\n## Installation\n\nDFF can be installed via pip:\n\n```bash\npip install dff\n```\n\nThe above command will set the minimum dependencies to start working with DFF.\nThe installation process allows the user to choose from different packages based on their dependencies, which are:\n```bash\npip install dff[core]  # minimal dependencies (by default)\npip install dff[redis]  # dependencies for using Redis\npip install dff[mongodb]  # dependencies for using MongoDB\npip install dff[mysql]  # dependencies for using MySQL\npip install dff[postgresql]  # dependencies for using PostgreSQL\npip install dff[sqlite]  # dependencies for using SQLite\npip install dff[ydb]  # dependencies for using Yandex Database\npip install dff[full]  # full dependencies including all options above\npip install dff[tests]  # dependencies for running tests\npip install dff[test_full]  # full dependencies for running all tests (all options above)\npip install dff[examples]  # dependencies for running examples (all options above)\npip install dff[devel]  # dependencies for development\npip install dff[doc]  # dependencies for documentation\npip install dff[devel_full]  # full dependencies for development (all options above)\n```\n\nFor example, if you are going to use one of the database backends,\nyou can specify the corresponding requirements yourself. Multiple dependencies can be installed at once, e.g.\n```bash\npip install dff[postgresql, mysql]\n```\n\n## Basic example\n\n```python\nfrom dff.script import GLOBAL, TRANSITIONS, RESPONSE, Context, Actor, Message\nimport dff.script.conditions.std_conditions as cnd\nfrom typing import Union\n\n# create a dialog script\nscript = {\nGLOBAL: {\nTRANSITIONS: {\n(\"flow\", \"node_hi\"): cnd.exact_match(Message(text=\"Hi\")),\n(\"flow\", \"node_ok\"): cnd.true()\n}\n},\n\"flow\": {\n\"node_hi\": {RESPONSE: Message(text=\"Hi!!!\")},\n\"node_ok\": {RESPONSE: Message(text=\"Okey\")},\n},\n}\n\n# init actor\nactor = Actor(script, start_label=(\"flow\", \"node_hi\"))\n\n\n# handler requests\ndef turn_handler(in_request: Message, ctx: Union[Context, dict], actor: Actor):\n# Context.cast - gets an object type of [Context, str, dict] returns an object type of Context\nctx = Context.cast(ctx)\n# Add in current context a next request of user\nctx.add_request(in_request)\n# Pass the context into actor and it returns updated context with actor response\nctx = actor(ctx)\n# Get last actor response from the context\nout_response = ctx.last_response\n# The next condition branching needs for testing\nreturn out_response, ctx\n\n\nctx = {}\nwhile True:\nin_request = input(\"type your answer: \")\nout_response, ctx = turn_handler(Message(text=in_request), ctx, actor)\nprint(out_response.text)\n```\n\nWhen you run this code, you get similar output:\n```\ntype your answer: hi\nOkey\ntype your answer: Hi\nHi!!!\ntype your answer: ok\nOkey\ntype your answer: ok\nOkey\n```\n\nTo get more advanced examples, take a look at\n[examples](https://github.com/deeppavlov/dialog_flow_framework/tree/dev/examples) on GitHub.\n\n# Context Storages\n## Description\n\nContext Storages allow you to save and retrieve user dialogue states\n(in the form of a `Context` object) using various database backends.\n\nThe following backends are currently supported:\n* [JSON](https://www.json.org/json-en.html)\n* [pickle](https://docs.python.org/3/library/pickle.html)\n* [shelve](https://docs.python.org/3/library/shelve.html)\n* [SQLite](https://www.sqlite.org/index.html)\n* [PostgreSQL](https://www.postgresql.org/)\n* [MySQL](https://www.mysql.com/)\n* [MongoDB](https://www.mongodb.com/)\n* [Redis](https://redis.io/)\n* [Yandex DataBase](https://ydb.tech/)\n\nAside from this, we offer some interfaces for saving data to your local file system.\nThese are not meant to be used in production, but can be helpful for prototyping your application.\n\n## Basic example\n\n```python\nfrom dff.script import Context, Actor\nfrom dff.context_storages import SQLContextStorage\nfrom .script import some_df_script\n\ndb = SQLContextStorage(\"postgresql+asyncpg://user:password@host:port/dbname\")\n\nactor = Actor(some_df_script, start_label=(\"root\", \"start\"), fallback_label=(\"root\", \"fallback\"))\n\n\ndef handle_request(request):\nuser_id = request.args[\"user_id\"]\nif user_id not in db:\ncontext = Context(id=user_id)\nelse:\ncontext = db[user_id]\nnew_context = actor(context)\ndb[user_id] = new_context\nassert user_id in db\nreturn new_context.last_response\n\n```\n\nTo get more advanced examples, take a look at\n[examples](https://github.com/deeppavlov/dialog_flow_framework/tree/dev/examples/context_storages) on GitHub.\n\n# Contributing to the Dialog Flow Framework\n\nPlease refer to [CONTRIBUTING.md](https://github.com/deeppavlov/dialog_flow_framework/blob/dev/CONTRIBUTING.md).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/deeppavlov/dialog_flow_framework",
    "keywords": "chatbots",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dff",
    "package_url": "https://pypi.org/project/dff/",
    "platform": null,
    "project_url": "https://pypi.org/project/dff/",
    "project_urls": {
      "Homepage": "https://github.com/deeppavlov/dialog_flow_framework"
    },
    "release_url": "https://pypi.org/project/dff/0.3.2/",
    "requires_dist": [
      "pydantic (>=1.8.2)",
      "nest-asyncio (>=1.5.5)",
      "typing-extensions (>=4.0.0)",
      "pydantic (>=1.8.2) ; extra == 'core'",
      "nest-asyncio (>=1.5.5) ; extra == 'core'",
      "typing-extensions (>=4.0.0) ; extra == 'core'",
      "bump2version (>=1.0.1) ; extra == 'devel'",
      "build (==0.7.0) ; extra == 'devel'",
      "twine (==4.0.0) ; extra == 'devel'",
      "requests (>=2.28.1) ; extra == 'devel_full'",
      "jupyter (>=1.0.0) ; extra == 'devel_full'",
      "build (==0.7.0) ; extra == 'devel_full'",
      "pydantic (>=1.8.2) ; extra == 'devel_full'",
      "telethon (<2.0,>=1.27.0) ; extra == 'devel_full'",
      "pytest-cov (<5.0.0,>=4.0.0) ; extra == 'devel_full'",
      "click (<=8.0.4) ; extra == 'devel_full'",
      "mypy (==0.950) ; extra == 'devel_full'",
      "flask[async] (>=2.1.2) ; extra == 'devel_full'",
      "pydata-sphinx-theme (>=0.12.0) ; extra == 'devel_full'",
      "sphinxcontrib-apidoc (==0.3.0) ; extra == 'devel_full'",
      "nest-asyncio (>=1.5.5) ; extra == 'devel_full'",
      "nbsphinx (>=0.8.9) ; extra == 'devel_full'",
      "cryptography (>=36.0.2) ; extra == 'devel_full'",
      "pytest-asyncio (<0.15.0,>=0.14.0) ; extra == 'devel_full'",
      "pytelegrambotapi (==4.5.1) ; extra == 'devel_full'",
      "bump2version (>=1.0.1) ; extra == 'devel_full'",
      "sphinxcontrib-katex (==0.9.0) ; extra == 'devel_full'",
      "sqlalchemy[asyncio] (>=1.4.27) ; extra == 'devel_full'",
      "asyncpg (>=0.27.0) ; extra == 'devel_full'",
      "asyncmy (>=0.2.5) ; extra == 'devel_full'",
      "sphinx-copybutton (>=0.5) ; extra == 'devel_full'",
      "motor (>=3.1.1) ; extra == 'devel_full'",
      "typing-extensions (>=4.0.0) ; extra == 'devel_full'",
      "ydb (>=2.5.0) ; extra == 'devel_full'",
      "sphinxcontrib-httpdomain (>=1.8.0) ; extra == 'devel_full'",
      "sqlalchemy[asyncio] (>=2.0.2) ; extra == 'devel_full'",
      "black (==20.8b1) ; extra == 'devel_full'",
      "aiofiles (>=22.1.0) ; extra == 'devel_full'",
      "isort (<6.0.0,>=5.0.6) ; extra == 'devel_full'",
      "flake8 (<4.0.0,>=3.8.3) ; extra == 'devel_full'",
      "twine (==4.0.0) ; extra == 'devel_full'",
      "pytest (<8.0.0,>=7.2.1) ; extra == 'devel_full'",
      "aioredis (>=2.0.1) ; extra == 'devel_full'",
      "sphinx (<6) ; extra == 'devel_full'",
      "sphinx-gallery (==0.7.0) ; extra == 'devel_full'",
      "sphinx-autodoc-typehints (>=1.19.4) ; extra == 'devel_full'",
      "jupytext (>=1.14.1) ; extra == 'devel_full'",
      "six (>=1.16.0) ; extra == 'devel_full'",
      "aiosqlite (>=0.18.0) ; extra == 'devel_full'",
      "psutil (>=5.9.1) ; extra == 'devel_full'",
      "sphinx (<6) ; extra == 'doc'",
      "pydata-sphinx-theme (>=0.12.0) ; extra == 'doc'",
      "sphinxcontrib-apidoc (==0.3.0) ; extra == 'doc'",
      "sphinxcontrib-httpdomain (>=1.8.0) ; extra == 'doc'",
      "sphinxcontrib-katex (==0.9.0) ; extra == 'doc'",
      "sphinx-copybutton (>=0.5) ; extra == 'doc'",
      "sphinx-gallery (==0.7.0) ; extra == 'doc'",
      "sphinx-autodoc-typehints (>=1.19.4) ; extra == 'doc'",
      "nbsphinx (>=0.8.9) ; extra == 'doc'",
      "jupytext (>=1.14.1) ; extra == 'doc'",
      "jupyter (>=1.0.0) ; extra == 'doc'",
      "requests (>=2.28.1) ; extra == 'examples'",
      "pydantic (>=1.8.2) ; extra == 'examples'",
      "telethon (<2.0,>=1.27.0) ; extra == 'examples'",
      "pytest-cov (<5.0.0,>=4.0.0) ; extra == 'examples'",
      "click (<=8.0.4) ; extra == 'examples'",
      "flask[async] (>=2.1.2) ; extra == 'examples'",
      "nest-asyncio (>=1.5.5) ; extra == 'examples'",
      "cryptography (>=36.0.2) ; extra == 'examples'",
      "pytest-asyncio (<0.15.0,>=0.14.0) ; extra == 'examples'",
      "pytelegrambotapi (==4.5.1) ; extra == 'examples'",
      "sqlalchemy[asyncio] (>=1.4.27) ; extra == 'examples'",
      "asyncpg (>=0.27.0) ; extra == 'examples'",
      "asyncmy (>=0.2.5) ; extra == 'examples'",
      "motor (>=3.1.1) ; extra == 'examples'",
      "typing-extensions (>=4.0.0) ; extra == 'examples'",
      "ydb (>=2.5.0) ; extra == 'examples'",
      "sqlalchemy[asyncio] (>=2.0.2) ; extra == 'examples'",
      "black (==20.8b1) ; extra == 'examples'",
      "aiofiles (>=22.1.0) ; extra == 'examples'",
      "isort (<6.0.0,>=5.0.6) ; extra == 'examples'",
      "flake8 (<4.0.0,>=3.8.3) ; extra == 'examples'",
      "pytest (<8.0.0,>=7.2.1) ; extra == 'examples'",
      "aioredis (>=2.0.1) ; extra == 'examples'",
      "six (>=1.16.0) ; extra == 'examples'",
      "aiosqlite (>=0.18.0) ; extra == 'examples'",
      "psutil (>=5.9.1) ; extra == 'examples'",
      "asyncmy (>=0.2.5) ; extra == 'full'",
      "nest-asyncio (>=1.5.5) ; extra == 'full'",
      "motor (>=3.1.1) ; extra == 'full'",
      "pydantic (>=1.8.2) ; extra == 'full'",
      "typing-extensions (>=4.0.0) ; extra == 'full'",
      "aioredis (>=2.0.1) ; extra == 'full'",
      "ydb (>=2.5.0) ; extra == 'full'",
      "cryptography (>=36.0.2) ; extra == 'full'",
      "pytelegrambotapi (==4.5.1) ; extra == 'full'",
      "sqlalchemy[asyncio] (>=2.0.2) ; extra == 'full'",
      "sqlalchemy[asyncio] (>=1.4.27) ; extra == 'full'",
      "six (>=1.16.0) ; extra == 'full'",
      "aiosqlite (>=0.18.0) ; extra == 'full'",
      "aiofiles (>=22.1.0) ; extra == 'full'",
      "asyncpg (>=0.27.0) ; extra == 'full'",
      "aiofiles (>=22.1.0) ; extra == 'json'",
      "motor (>=3.1.1) ; extra == 'mongodb'",
      "asyncmy (>=0.2.5) ; extra == 'mysql'",
      "sqlalchemy[asyncio] (>=2.0.2) ; extra == 'mysql'",
      "cryptography (>=36.0.2) ; extra == 'mysql'",
      "aiofiles (>=22.1.0) ; extra == 'pickle'",
      "sqlalchemy[asyncio] (>=2.0.2) ; extra == 'postgresql'",
      "asyncpg (>=0.27.0) ; extra == 'postgresql'",
      "aioredis (>=2.0.1) ; extra == 'redis'",
      "sqlalchemy[asyncio] (>=1.4.27) ; extra == 'sqlite'",
      "sqlalchemy[asyncio] (>=2.0.2) ; extra == 'sqlite'",
      "aiosqlite (>=0.18.0) ; extra == 'sqlite'",
      "pytelegrambotapi (==4.5.1) ; extra == 'telegram'",
      "requests (>=2.28.1) ; extra == 'test_full'",
      "pydantic (>=1.8.2) ; extra == 'test_full'",
      "telethon (<2.0,>=1.27.0) ; extra == 'test_full'",
      "pytest-cov (<5.0.0,>=4.0.0) ; extra == 'test_full'",
      "click (<=8.0.4) ; extra == 'test_full'",
      "flask[async] (>=2.1.2) ; extra == 'test_full'",
      "nest-asyncio (>=1.5.5) ; extra == 'test_full'",
      "cryptography (>=36.0.2) ; extra == 'test_full'",
      "pytest-asyncio (<0.15.0,>=0.14.0) ; extra == 'test_full'",
      "pytelegrambotapi (==4.5.1) ; extra == 'test_full'",
      "sqlalchemy[asyncio] (>=1.4.27) ; extra == 'test_full'",
      "asyncpg (>=0.27.0) ; extra == 'test_full'",
      "asyncmy (>=0.2.5) ; extra == 'test_full'",
      "motor (>=3.1.1) ; extra == 'test_full'",
      "typing-extensions (>=4.0.0) ; extra == 'test_full'",
      "ydb (>=2.5.0) ; extra == 'test_full'",
      "sqlalchemy[asyncio] (>=2.0.2) ; extra == 'test_full'",
      "black (==20.8b1) ; extra == 'test_full'",
      "aiofiles (>=22.1.0) ; extra == 'test_full'",
      "isort (<6.0.0,>=5.0.6) ; extra == 'test_full'",
      "flake8 (<4.0.0,>=3.8.3) ; extra == 'test_full'",
      "pytest (<8.0.0,>=7.2.1) ; extra == 'test_full'",
      "aioredis (>=2.0.1) ; extra == 'test_full'",
      "six (>=1.16.0) ; extra == 'test_full'",
      "aiosqlite (>=0.18.0) ; extra == 'test_full'",
      "psutil (>=5.9.1) ; extra == 'test_full'",
      "pytest (<8.0.0,>=7.2.1) ; extra == 'tests'",
      "pytest-cov (<5.0.0,>=4.0.0) ; extra == 'tests'",
      "pytest-asyncio (<0.15.0,>=0.14.0) ; extra == 'tests'",
      "flake8 (<4.0.0,>=3.8.3) ; extra == 'tests'",
      "click (<=8.0.4) ; extra == 'tests'",
      "black (==20.8b1) ; extra == 'tests'",
      "isort (<6.0.0,>=5.0.6) ; extra == 'tests'",
      "flask[async] (>=2.1.2) ; extra == 'tests'",
      "psutil (>=5.9.1) ; extra == 'tests'",
      "requests (>=2.28.1) ; extra == 'tests'",
      "telethon (<2.0,>=1.27.0) ; extra == 'tests'",
      "ydb (>=2.5.0) ; extra == 'ydb'",
      "six (>=1.16.0) ; extra == 'ydb'"
    ],
    "requires_python": ">=3.7, <4",
    "summary": "The Dialog Flow Framework (DFF) allows you to write conversational services.",
    "version": "0.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16943360,
  "releases": {
    "0.1a7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6b1bfd9b39e130257f0d5c0595a8747484be27f7fc0433ecfa634f83ebffabb",
          "md5": "a04e23648ba0795f85820496d1ecc623",
          "sha256": "24761f51384d37cbed16f7c6943b2a00e05d44e98c65440208a469dd8067286a"
        },
        "downloads": -1,
        "filename": "dff-0.1a7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a04e23648ba0795f85820496d1ecc623",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 46548,
        "upload_time": "2021-11-04T13:12:18",
        "upload_time_iso_8601": "2021-11-04T13:12:18.052931Z",
        "url": "https://files.pythonhosted.org/packages/a6/b1/bfd9b39e130257f0d5c0595a8747484be27f7fc0433ecfa634f83ebffabb/dff-0.1a7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37bc32484b01f53d3f90608368b62d9d8500bc4dd3eb8da10e1ae6e4197b7a13",
          "md5": "8ff058d271c5a920be85959e6efab2af",
          "sha256": "872bceef41ddece5e71ff5db728ecc9521b6ce6ae75b2fec524959ac7e1186b6"
        },
        "downloads": -1,
        "filename": "dff-0.1a7.tar.gz",
        "has_sig": false,
        "md5_digest": "8ff058d271c5a920be85959e6efab2af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 30131,
        "upload_time": "2021-11-04T13:12:19",
        "upload_time_iso_8601": "2021-11-04T13:12:19.506229Z",
        "url": "https://files.pythonhosted.org/packages/37/bc/32484b01f53d3f90608368b62d9d8500bc4dd3eb8da10e1ae6e4197b7a13/dff-0.1a7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ccef73acc62966c37759f3e58bfe18c387c8b1fa395572a045f67613b3b0513",
          "md5": "d1bd0491b85208018330a0de50655663",
          "sha256": "2265876be776351ac7b6bdf069b5d497d99fb924315dd9f91c84925a45220090"
        },
        "downloads": -1,
        "filename": "dff-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d1bd0491b85208018330a0de50655663",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 84250,
        "upload_time": "2023-01-14T22:11:58",
        "upload_time_iso_8601": "2023-01-14T22:11:58.224040Z",
        "url": "https://files.pythonhosted.org/packages/5c/ce/f73acc62966c37759f3e58bfe18c387c8b1fa395572a045f67613b3b0513/dff-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c9227c68cba2b82ff3d4f2a0de14525ec84d6996da87d33abedb8f9a6826c27",
          "md5": "e6a66f16e1edddbe623d8cab749491fa",
          "sha256": "674605e75787ba94e931a5b796708b8ed8186f848a659e9ff8c9ac6ee2bd25d4"
        },
        "downloads": -1,
        "filename": "dff-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e6a66f16e1edddbe623d8cab749491fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 54035,
        "upload_time": "2023-01-14T22:12:00",
        "upload_time_iso_8601": "2023-01-14T22:12:00.075226Z",
        "url": "https://files.pythonhosted.org/packages/1c/92/27c68cba2b82ff3d4f2a0de14525ec84d6996da87d33abedb8f9a6826c27/dff-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a418b2984c98902f4922021bf3165e0179ddf4140146615e33f06b0e7b59d45f",
          "md5": "58fc68d38ca9cb76b17442c0be8ccb52",
          "sha256": "dab824f9c764534cdef47030b217f7876e33561ccfe92963a11123f4432c918b"
        },
        "downloads": -1,
        "filename": "dff-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "58fc68d38ca9cb76b17442c0be8ccb52",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 84344,
        "upload_time": "2023-02-03T12:18:47",
        "upload_time_iso_8601": "2023-02-03T12:18:47.057675Z",
        "url": "https://files.pythonhosted.org/packages/a4/18/b2984c98902f4922021bf3165e0179ddf4140146615e33f06b0e7b59d45f/dff-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54e79f74e29b2ecfcbe53d8586e0e0e123d1dcb68bda7ceef17e7c7c2782389b",
          "md5": "8f5e7fab6f22b26e3515aec55eafa405",
          "sha256": "a91edd53f4384c7593a21f91593dc8e81631937dc922386716d803e3886e0df7"
        },
        "downloads": -1,
        "filename": "dff-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8f5e7fab6f22b26e3515aec55eafa405",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 54214,
        "upload_time": "2023-02-03T12:18:48",
        "upload_time_iso_8601": "2023-02-03T12:18:48.770722Z",
        "url": "https://files.pythonhosted.org/packages/54/e7/9f74e29b2ecfcbe53d8586e0e0e123d1dcb68bda7ceef17e7c7c2782389b/dff-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbd2d94749933f4b46dba2dbb70892443a32cb55c8ed1887f717211d4d6ec6b9",
          "md5": "ff555df7a42589c00f807431915fe9ae",
          "sha256": "e56880dd60ad903557fa576d6913d8fe89095126a4284d440c3dd2ab61e090d5"
        },
        "downloads": -1,
        "filename": "dff-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff555df7a42589c00f807431915fe9ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 107320,
        "upload_time": "2023-02-19T15:39:59",
        "upload_time_iso_8601": "2023-02-19T15:39:59.499619Z",
        "url": "https://files.pythonhosted.org/packages/bb/d2/d94749933f4b46dba2dbb70892443a32cb55c8ed1887f717211d4d6ec6b9/dff-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63b2aa6b810538dae20a77f81db9eeb06bee86f1cd96cf315a9bf81c8daaffb3",
          "md5": "f319852b00a7a010b90c27e463a67155",
          "sha256": "51fc21321eec191a2da0cc8574c771fda8389f55c0fbe4e29f3aeed709fcaa8a"
        },
        "downloads": -1,
        "filename": "dff-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f319852b00a7a010b90c27e463a67155",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 69880,
        "upload_time": "2023-02-19T15:40:01",
        "upload_time_iso_8601": "2023-02-19T15:40:01.136596Z",
        "url": "https://files.pythonhosted.org/packages/63/b2/aa6b810538dae20a77f81db9eeb06bee86f1cd96cf315a9bf81c8daaffb3/dff-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "283fefe8213f781d668c325a4b12d493d39479a72ce648099d379e9c85dc47d7",
          "md5": "2a69cfb6c7c92bab101feae42ff57396",
          "sha256": "989c76e2e53bc8574576ca5ada2e1d5ce7de7f602e040d31b39c33555ace1b39"
        },
        "downloads": -1,
        "filename": "dff-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a69cfb6c7c92bab101feae42ff57396",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 107336,
        "upload_time": "2023-02-20T12:00:03",
        "upload_time_iso_8601": "2023-02-20T12:00:03.837452Z",
        "url": "https://files.pythonhosted.org/packages/28/3f/efe8213f781d668c325a4b12d493d39479a72ce648099d379e9c85dc47d7/dff-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e283500db632535d931f57f4dc195a2dab01ec2561a742cc0a1abe0ea3b51ee",
          "md5": "e5de4f0e54b4e9963b4b6d8edcad765e",
          "sha256": "ac4d3a48a70e25852c3dba7f9e13c58ae16adfd3fcda876e3f593a903da1b46a"
        },
        "downloads": -1,
        "filename": "dff-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e5de4f0e54b4e9963b4b6d8edcad765e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 69886,
        "upload_time": "2023-02-20T12:00:06",
        "upload_time_iso_8601": "2023-02-20T12:00:06.039795Z",
        "url": "https://files.pythonhosted.org/packages/9e/28/3500db632535d931f57f4dc195a2dab01ec2561a742cc0a1abe0ea3b51ee/dff-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d0f64102c8d580e56db495ec7799282d2b559185c397dc9d4faa42ce8ab2840",
          "md5": "821eccff3b1ce138496be5d1dbcfc57e",
          "sha256": "bd0f3caa71f87a077f5c64223579fce97453a1ed7be11ffbcdacfe004aaa0f57"
        },
        "downloads": -1,
        "filename": "dff-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "821eccff3b1ce138496be5d1dbcfc57e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 107333,
        "upload_time": "2023-02-20T13:29:54",
        "upload_time_iso_8601": "2023-02-20T13:29:54.095602Z",
        "url": "https://files.pythonhosted.org/packages/2d/0f/64102c8d580e56db495ec7799282d2b559185c397dc9d4faa42ce8ab2840/dff-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "209f6768351afff8228676a10159d9c42a8bf008109d6510d3357aa2769b4ed2",
          "md5": "61253d112942a85aa2021b3abc77d519",
          "sha256": "cd86aa2d855034c157ba57509c3b2d0f3309bf125eec7e9f4b241224fe944aea"
        },
        "downloads": -1,
        "filename": "dff-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "61253d112942a85aa2021b3abc77d519",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 69887,
        "upload_time": "2023-02-20T13:29:56",
        "upload_time_iso_8601": "2023-02-20T13:29:56.134029Z",
        "url": "https://files.pythonhosted.org/packages/20/9f/6768351afff8228676a10159d9c42a8bf008109d6510d3357aa2769b4ed2/dff-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2d0f64102c8d580e56db495ec7799282d2b559185c397dc9d4faa42ce8ab2840",
        "md5": "821eccff3b1ce138496be5d1dbcfc57e",
        "sha256": "bd0f3caa71f87a077f5c64223579fce97453a1ed7be11ffbcdacfe004aaa0f57"
      },
      "downloads": -1,
      "filename": "dff-0.3.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "821eccff3b1ce138496be5d1dbcfc57e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <4",
      "size": 107333,
      "upload_time": "2023-02-20T13:29:54",
      "upload_time_iso_8601": "2023-02-20T13:29:54.095602Z",
      "url": "https://files.pythonhosted.org/packages/2d/0f/64102c8d580e56db495ec7799282d2b559185c397dc9d4faa42ce8ab2840/dff-0.3.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "209f6768351afff8228676a10159d9c42a8bf008109d6510d3357aa2769b4ed2",
        "md5": "61253d112942a85aa2021b3abc77d519",
        "sha256": "cd86aa2d855034c157ba57509c3b2d0f3309bf125eec7e9f4b241224fe944aea"
      },
      "downloads": -1,
      "filename": "dff-0.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "61253d112942a85aa2021b3abc77d519",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <4",
      "size": 69887,
      "upload_time": "2023-02-20T13:29:56",
      "upload_time_iso_8601": "2023-02-20T13:29:56.134029Z",
      "url": "https://files.pythonhosted.org/packages/20/9f/6768351afff8228676a10159d9c42a8bf008109d6510d3357aa2769b4ed2/dff-0.3.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}