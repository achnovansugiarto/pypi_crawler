{
  "info": {
    "author": "Amazon Web Services",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved",
      "Operating System :: OS Independent",
      "Programming Language :: JavaScript",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Typing :: Typed"
    ],
    "description": "# cdk8s+ (cdk8s-plus)\n\n> ![Experimental](https://img.shields.io/badge/experimental-important.svg?style=for-the-badge)<br><br>\n> This library is in very early stages of development, as such, and in correspondence with a `0.x` semantic major version line, its `API` is\n> likely to rapidly change in breaking ways. It is therefore not recommended to use library for production workloads.\n\n**cdk8s+** is a software development framework that provides high level abstractions for authoring Kubernetes applications.\nBuilt on top of the auto generated building blocks provided by [cdk8s](../cdk8s), this library includes a hand crafted *construct*\nfor each native kubernetes object, exposing richer API's with reduced complexity.\n\n## Kubernetes Spec\n\n**cdk8s+** is currently built on top of version [1.17.0](https://github.com/instrumenta/kubernetes-json-schema/tree/master/v1.17.0) of the kubernetes API specifications.\nIf you are deploying manifests produced by `cdk8s+` onto clusters of a lower version, you might encounter some unsupported spec properties or invalid manifests.\n\n> See [Supporting various k8s API specs](https://github.com/awslabs/cdk8s/issues/299) for more details and progress on this issue.\n\n## Letter Of Intent\n\nWe strive to develop this library with full transparency and as much community feedback and contributions as possible.\nTo that end, we publish this development version. The lack of features/capabilities is intentional, we look forward to build and expand this framework with the help of the community.\n\n> If you are interested in contributing, see [Contribution Guide](./CONTRIBUTING.md).\n\n## At a glance\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport cdk8s_plus as kplus\nimport cdk8s as cdk8s\nimport path as path\n\n# our cdk app\napp = cdk8s.App()\n\n# our kuberentes chart\nchart = cdk8s.Chart(app, \"Chart\")\n\n# lets create a volume that contains our app.\n# we use a trick with a config map!\napp_data = kplus.ConfigMap(chart, \"AppData\")\napp_data.add_directory(path.join(__dirname, \"app\"))\n\napp_volume = kplus.Volume.from_config_map(app_data)\n\n# now we create a container that runs our app\napp_path = \"/var/lib/app\"\nport = 80\ncontainer = kplus.Container(\n    image=\"node:14.4.0-alpine3.12\",\n    command=[\"node\", \"index.js\", f\"{port}\"],\n    port=port,\n    working_dir=app_path\n)\n\n# make the app accessible to the container\ncontainer.mount(app_path, app_volume)\n\n# now lets create a deployment to run a few instances of this container\ndeployment = kplus.Deployment(chart, \"Deployment\",\n    replicas=3,\n    containers=[container]\n)\n\n# finally, we expose the deployment as a load balancer service and make it run\ndeployment.expose(8080, service_type=kplus.ServiceType.LOAD_BALANCER)\n\n# we are done, synth\napp.synth()\n```\n\n```yaml\napiVersion: v1\ndata:\n  index.js: |-\n    var http = require('http');\n\n    var port = process.argv[2];\n\n    //create a server object:\n    http.createServer(function (req, res) {\n      res.write('Hello World!'); //write a response to the client\n      res.end(); //end the response\n    }).listen(port); //the server object listens on port 80\nkind: ConfigMap\nmetadata:\n  annotations: {}\n  labels: {}\n  name: chart-appdata-configmap-da4c63ab\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations: {}\n  labels: {}\n  name: chart-deployment-pod-d4285cc9\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      cdk8s.deployment: ChartDeploymentCFC2E30C\n  template:\n    metadata:\n      annotations: {}\n      labels:\n        cdk8s.deployment: ChartDeploymentCFC2E30C\n    spec:\n      containers:\n        - command:\n            - node\n            - index.js\n            - \"80\"\n          env: []\n          image: node:14.4.0-alpine3.12\n          name: main\n          ports:\n            - containerPort: 80\n          volumeMounts:\n            - mountPath: /var/lib/app\n              name: configmap-chart-appdata-configmap-da4c63ab\n          workingDir: /var/lib/app\n      volumes:\n        - configMap:\n            name: chart-appdata-configmap-da4c63ab\n          name: configmap-chart-appdata-configmap-da4c63ab\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations: {}\n  labels: {}\n  name: chart-deployment-service-pod-42f50c26\nspec:\n  externalIPs: []\n  ports:\n    - port: 8080\n      targetPort: 80\n  selector:\n    cdk8s.deployment: ChartDeploymentCFC2E30C\n  type: LoadBalancer\n```\n\n## Installation and Usage\n\nWe currently support both Python and TypeScript/JavaScript. More languages are coming soon.\n\n> We would love to hear which languages you want to see next: [Languages Support](https://github.com/awslabs/cdk8s/issues/134)\n\n### TypeScript/JavaScript\n\n`❯ npm install cdk8s-plus cdk8s`\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport cdk8s_plus as kplus\nimport cdk8s as cdk8s\n\napp = cdk8s.App()\nchart = cdk8s.Chart(app, \"Chart\")\n\nkplus.Deployment(chart, \"Deployment\",\n    replicas=3,\n    containers=[kplus.Container(\n        image=\"ubuntu\"\n    )]\n)\n```\n\n### Python\n\n`❯ pip install cdk8s-plus cdk8s`\n\n```python\nimport cdk8s_plus as kplus\nimport cdk8s\n\napp = cdk8s.App()\nchart = cdk8s.Chart(app, 'Chart')\n\nkplus.Deployment(chart, 'Deployment',\n  replicas=1,\n  containers=[kplus.Container(image='ubuntu')]\n)\n```\n\n## In Depth\n\nFollowing are excerpts for the usage of every *construct* provided by this library. It details the commonly used patterns and configuration properties.\nIn general, every such construct can be configured using two mechanisms:\n\n* Spec Constructor Properties\n* Post Instantiation Spec Mutations\n\nThe documentation presented here focuses on post instantiation mutations, however, every such mutation can also be pre-configured\nusing constructor properties for the corresponding spec. A complete API reference can be found in [here](./API.md).\n\n### `Container`\n\nDefine containers that run in a pod using the `Container` class.\n\n> API Reference: [Container](./API.md#cdk8s-plus-container)\n\n#### Environment variables\n\nEnvironment variables can be added to containers using various sources, via semantically explicit API's:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport cdk8s_plus as kplus\n\ncontainer = kplus.Container(\n    image=\"my-app\"\n)\n\n# explicitly use a value.\ncontainer.add_env(\"endpoint\", kplus.EnvValue.from_value(\"value\"))\n\n# use a specific key from a config map.\nbackends_config = kplus.ConfigMap.from_config_map_name(\"backends\")\ncontainer.add_env(\"endpoint\", kplus.EnvValue.from_config_map(backends_config, \"endpoint\"))\n\n# use a specific key from a secret.\ncredentials = kplus.Secret.from_secret_name(\"credentials\")\ncontainer.add_env(\"password\", kplus.EnvValue.from_secret(credentials, \"password\"))\n```\n\n#### Volume Mounts\n\nA very common capability is to mount a volume with some data onto a container. Using pure kubernetes API, this would require writing something like:\n\n```yaml\nkind: Pod\napiVersion: v1\nspec:\n  containers:\n    - name: main\n      volumeMounts:\n        - mountPath: /path/to/mount\n          name: 'config-volume'\n  volumes:\n    - name: 'config-volume'\n      configMap:\n        name: 'config'\n```\n\nNotice the apparent redundancy of having to specify the volume name twice. Also, if you happen to need the same mount in other pods,\nyou would need to duplicate this configuration. This can get complex and cluttered very fast.\n\nIn contrast, here is how to do this with `cdk8s+`:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport cdk8s_plus as kplus\n\nconfig = kplus.ConfigMap.from_config_map_name(\"config\")\nvolume = kplus.Volume.from_config_map(config)\n\ncontainer = kplus.Container(\n    image=\"my-app\"\n)\n\n# Cool alert: every pod that will later be configured with this container,\n# will automatically have access to this volume, so you don't need to explicitly add it to the pod spec!.\ncontainer.mount(\"/path/to/mount\", volume)\n```\n\n## Probes\n\nA [Probe](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#probe-v1-core) is a diagnostic performed periodically by the kubelet on a Container. To\nperform a diagnostic, the kubelet calls a Handler implemented by the container.\n\nA `Probe` instance can be created through one of the `fromXxx` static methods:\n\n* `Probe.fromHttpGet()`\n* `Probe.fromCommand()`\n\nReadiness probes can be configured at the container-level through the `readiness` option:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nkplus.Container(\n    # ...\n    readiness=kplus.Probe.from_http_get(\"/ping\")\n)\n```\n\nSee the API reference for details.\n\n### `Volume`\n\nVolume represents a named volume in a pod that may be accessed by any container in the pod.\n\n> API Reference: [Volume](./API.md#cdk8s-plus-volume)\n\n#### Create from a ConfigMap\n\nA very useful operation is to create a volume from a `ConfigMap`. Kubernetes will translate every key in the config map to a file,\nwho's content is the value of the key.\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport cdk8s_plus as kplus\n\nconfig_map = kplus.ConfigMap.from_config_map_name(\"redis-config\")\nconfig_volume = kplus.Volume.from_config_map(config_map)\n```\n\n#### Create from an EmptyDir\n\nThe easiest way to allocate some persistent storage to your container is to create a volume from an empty directory.\nThis volume, as the name suggests, is initially empty, and can be written to by containers who mount it.\nThe data in the volume is preserved throughout the lifecycle of the pod, but is deleted forever as soon as the pod itself is removed.\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport cdk8s_plus as kplus\n\ndata = kplus.Volume.from_empty_dir(config_map)\n\nredis = kplus.Container(\n    image=\"redis\"\n)\n\n# mount to the redis container.\nredis.mount(\"/var/lib/redis\", data)\n```\n\n### `Job`\n\nJobs are a very useful concept in kubernetes deployments.\nThey can be used for add-hoc provisioning tasks, as well as long running processing jobs.\n\n> API Reference: [Job](./API.md#cdk8s-plus-job)\n\nIn configuration, they don't differ much from regular pods, but offer some additional properties.\n\n#### Delete a Job after its finished\n\nYou can configure a TTL for the job after it finished its execution successfully.\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport cdk8s as k\nimport cdk8s_plus as kplus\n\napp = k.App()\nchart = k.Chart(app, \"Chart\")\n\n# let's define a job spec, and set a 1 second TTL.\nload = kplus.Job(chart, \"LoadData\",\n    ttl_after_finished=kplus.Duration.seconds(1)\n)\n\n# now add a container to all the pods created by this job\njob.add_container(kplus.Container(\n    image=\"loader\"\n))\n```\n\n### `Service`\n\nUse services when you want to expose a set of pods using a stable network identity. They can also be used for externalizing\nendpoints to clients outside of the kubernetes cluster.\n\n> API Reference: [Service](./API.md#cdk8s-plus-service)\n\n#### Selectors\n\nServices must be configured with selectors that tell it which pods should it serve.\nThe most common selector method is using labels.\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport cdk8s as k\nimport cdk8s_plus as kplus\n\napp = k.App()\nchart = k.Chart(app, \"Chart\")\nfrontends = kplus.Service(chart, \"FrontEnds\")\n\n# this will cause the service to select all pods with the 'run: frontend' label.\nfrontends.select_by_label(\"run\", \"frontend\")\n```\n\n#### Ports\n\nPorts that the service will listen and redirect to can be configured like so:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport cdk8s as k\nimport cdk8s_plus as kplus\n\napp = k.App()\nchart = k.Chart(app, \"Chart\")\nfrontends = kplus.Service(chart, \"FrontEnds\")\n\n# make the service bind to port 9000 and redirect to port 80 on the associated containers.\nfrontends.serve(port=9000, target_port=80)\n```\n\n### `Deployment`\n\nCreate a deployment to govern the lifecycle and orchestration of a set of identical pods.\n\n> API Reference: [Deployment](./API.md#cdk8s-plus-deployment)\n\n#### Automatic pod selection\n\nWhen you specify pods in a deployment, you normally have to configure the appropriate labels and selectors to\nmake the deployment control the relevant pods. This construct does this automatically.\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport cdk8s as k\nimport cdk8s_plus as kplus\n\napp = k.App()\nchart = k.Chart(app, \"Chart\")\n\nkplus.Deployment(chart, \"FrontEnds\",\n    containers=[kplus.Container(image=\"node\")]\n)\n```\n\nNote the resulting manifest contains a special `cdk8s.deployment` label that is applied to the pods, and is used as\nthe selector for the deployment.\n\n```yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations: {}\n  labels: {}\n  name: chart-frontends-pod-a48e7f2e\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      cdk8s.deployment: ChartFrontEndsDD8A97CE\n  template:\n    metadata:\n      annotations: {}\n      labels:\n        cdk8s.deployment: ChartFrontEndsDD8A97CE\n```\n\n#### Exposing via a service\n\nFollowing up on pod selection, you can also easily create a service that will select the pods relevant to the deployment.\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\n# store the deployment to created in a constant\nfrontends = kplus.Deployment(chart, \"FrontEnds\")\n\n# create a ClusterIP service that listens on port 9000 and redirects to port 9000 on the containers.\nfrontends.expose(9000)\n```\n\nNotice the resulting manifest, will have the same `cdk8s.deployment` magic label as the selector.\nThis will cause the service to attach to the pods that were configured as part of the said deployment.\n\n```yaml\napiVersion: v1\nkind: Service\nmetadata:\n  annotations: {}\n  labels: {}\n  name: chart-frontends-service-pod-1f70150b\nspec:\n  externalIPs: []\n  ports:\n    - port: 9000\n  selector:\n    cdk8s.deployment: ChartFrontEndsDD8A97CE\n  type: ClusterIP\n```\n\n### `ConfigMap`\n\nConfigMap are used to store configuration data. They provide a dictionary based data structure that can be consumed in\nvarious shapes and forms.\n\n> API Reference: [ConfigMap](./API.md#cdk8s-plus-configmap)\n\n#### Use an existing `ConfigMap`\n\nYou can reference to an existing `ConfigMap` like so. Note that this does not create a new object,\nand will therefore not be included in the resulting manifest.\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport cdk8s_plus as kplus\n\nconfig = kplus.ConfigMap.from_config_map_name(\"config\")\n\n# the 'config' constant can later be used by API's that require an IConfigMap.\n# for example when creating a volume.\nvolume = kplus.Volume.from_config_map(config)\n```\n\n#### Adding data\n\nYou can create config maps and add some data to them like so:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport cdk8s_plus as kplus\nimport cdk8s as k\n\napp = k.App()\nchart = k.Chart(app, \"Chart\")\n\nconfig = kplus.ConfigMap(chart, \"Config\")()\nconfig.add_data(\"url\", \"https://my-endpoint:8080\")\n```\n\n#### Creating a volume from a directory\n\nHere is a nifty little trick you can use to create a volume that contains a directory on the client machine (machine that runs `cdk8s synth`):\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport cdk8s_plus as kplus\nimport cdk8s as k\nimport path as path\n\napp = k.App()\nchart = k.Chart(app, \"Chart\")\n\napp_map = kplus.ConfigMap(chart, \"Config\")()\n\n# add the files in the directory to the config map.\n# this will create a key for each file.\n# note that only top level files will be included, sub-directories are not yet supported.\napp_map.add_directory(path.join(__dirname, \"app\"))\n\napp_volume = kplus.Volume.from_config_map(app_map)\n\n# for here, just mount the volume to a container, and run your app!\nmount_path = \"/var/app\"\ncontainer = kplus.Container(\n    image=\"node\",\n    command=[\"node\", \"app.js\"],\n    working_dir=mount_path\n)\n\ncontainer.mount(mount_path, app_volume)\n```\n\n### `Pod`\n\nA pod is essentially a collection of containers. It is the most fundamental computation unit that can be provisioned.\n\n> API Reference: [Pod](./API.md#cdk8s-plus-pod)\n\n#### Adding Containers/Volumes\n\nContainers and volumes can be added to pod definition like so:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport cdk8s_plus as kplus\n\ncontainer = kplus.Container(\n    image=\"node\"\n)\n\nstorage = kplus.Volume.from_empty_dir(\"storage\")\n\ncontainer.mount(\"/data\", storage)\n\napp = k.App()\nchart = k.Chart(app, \"Chart\")\n\npod = kplus.Pod(chart, \"Pod\")()\n\n# this will automatically add the volume as well.\npod.add_container(container)\n\n# but if you want to explicitly add it, simply use:\npod.add_volume(storage)\n```\n\n#### Applying a restart policy\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport cdk8s_plus as kplus\n\napp = k.App()\nchart = k.Chart(app, \"Chart\")\n\npod = kplus.Pod(chart, \"Pod\",\n    restart_policy=kplus.RestartPolicy.NEVER\n)()\n```\n\n#### Assigning a ServiceAccount\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport cdk8s_plus as kplus\n\napp = k.App()\nchart = k.Chart(app, \"Chart\")\n\npod = kplus.Pod(chart, \"Pod\",\n    service_account=kplus.ServiceAccount.from_service_account_name(\"aws\")\n)()\n```\n\n### `Secret`\n\nSecrets are used to store confidential information. Never store such information on the definition of the pod itself.\n\n> API Reference: [Secret](./API.md#cdk8s-plus-secret)\n\n#### Use an existing `Secret`\n\nTo reference a secret created outside of your deployment definition, use the following. Note that this does not create a new object,\nand will therefore not be included in the resulting manifest.\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport cdk8s_plus as kplus\n\nsecret = kplus.Secret.from_secret_name(\"aws-creds\")\n```\n\n#### Adding data\n\nTo create a new secret with some data, use:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport cdk8s_plus as kplus\nimport cdk8s as k\n\napp = k.App()\nchart = k.Chart(app, \"Chart\")\n\nsecret = kplus.Secret(chart, \"Secret\")\nsecret.add_string_data(\"password\", \"some-encrypted-data\")\n```\n\n### `ServiceAccount`\n\nUse service accounts to provide an identity for pods.\n\n> API Reference: [ServiceAccount](./API.md#cdk8s-plus-serviceaccount)\n\n#### Use an existing `ServiceAccount`\n\nTo reference a service account created outside of your deployment definition, use the following. Note that this does not create a new object,\nand will therefore not be included in the resulting manifest.\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport cdk8s_plus as kplus\n\nservice_account = kplus.ServiceAccount.from_service_account_name(\"aws-service\")\n```\n\n#### Allowing access to secrets\n\nTo create a new service account, and give it access to some secrets, use the following:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport cdk8s_plus as kplus\nimport cdk8s as k\n\napp = k.App()\nchart = k.Chart(app, \"Chart\")\n\naws_creds = kplus.Secret.from_secret_name(\"aws-creds\")\naws_service = kplus.ServiceAccount(chart, \"AWS\")\n\n# give access to the aws creds secret.\naws_service.add_secret(aws_creds)\n```\n\n### `Ingress`\n\n[Ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) manages external access to services in a cluster, typically through\nHTTP. Ingress may provide load balancing, SSL termination and name-based virtual\nhosting.\n\nYou must have an [Ingress controller](https://kubernetes.io/docs/concepts/services-networking/ingress-controllers) to satisfy an Ingress. Only creating an\nIngress resource has no effect.\n\n> API Reference: [Ingress](./API.md#cdk8s-plus-ingress)\n\nThe following example will route HTTP requests sent to the `/hello` url prefix\nto a service associated with a deployment of the\n[hashicorp/http-echo](https://github.com/hashicorp/http-echo) image.\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nhello_deployment = kplus.Deployment(self, text,\n    containers=[\n        kplus.Container(\n            image=\"hashicorp/http-echo\",\n            args=[\"-text\", \"hello ingress\"]\n        )\n    ]\n)\n\nhello_service = hello_deployment.expose(5678)\n\ningress = Ingress(self, \"ingress\")\ningress.add_rule(\"/hello\", kplus.IngressBackend.from_service(hello_service))\n```\n\nYou can use `addHostRule(host, path, backend)` to define a route that will only\napply to requests with this `Host` header. This can be used to implement virtual\nhosts.\n\nThe `addDefaultBackend(backend)` and `addHostDefaultBackend(host, backend)`\nmethods can be used to define backends that will accept all requests that do not\nmatch any other rules.\n\nThe TCP port used to route requests to services will be determined based on\nwhich ports are exposed by the service (e.g. through `serve()`). If the service\nexposes multiple ports, then a port must be specified via\n`IngressBackend.fromService(service, { port }`.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/awslabs/cdk8s.git",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cdk8s-plus",
    "package_url": "https://pypi.org/project/cdk8s-plus/",
    "platform": "",
    "project_url": "https://pypi.org/project/cdk8s-plus/",
    "project_urls": {
      "Homepage": "https://github.com/awslabs/cdk8s.git",
      "Source": "https://github.com/awslabs/cdk8s.git"
    },
    "release_url": "https://pypi.org/project/cdk8s-plus/0.33.0/",
    "requires_dist": [
      "cdk8s (<0.34.0,>=0.33.0)",
      "constructs (<4.0.0,>=3.0.4)",
      "jsii (<2.0.0,>=1.13.0)",
      "publication (>=0.0.3)"
    ],
    "requires_python": ">=3.6",
    "summary": "High level abstractions on top of cdk8s",
    "version": "0.33.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8463606,
  "releases": {
    "0.25.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc74745eec0605c26f28c90842e968232a2cb8b62d41d5a9039d385a27a4804d",
          "md5": "a6c469845a78213fa29289a0f7b9a29e",
          "sha256": "007f89dae11abac8de76c2aaeb96f1b930574c9ebd2e39993ca0c17760db482d"
        },
        "downloads": -1,
        "filename": "cdk8s_plus-0.25.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6c469845a78213fa29289a0f7b9a29e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 102328,
        "upload_time": "2020-06-22T12:20:04",
        "upload_time_iso_8601": "2020-06-22T12:20:04.654932Z",
        "url": "https://files.pythonhosted.org/packages/dc/74/745eec0605c26f28c90842e968232a2cb8b62d41d5a9039d385a27a4804d/cdk8s_plus-0.25.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97c64b1b358b86cefa45158f273f4a5f6d3f3a7098e61668dab6c1afda958199",
          "md5": "1d2c7a7a1fcc36c92a971f6d070920ef",
          "sha256": "56c3056d5034132c7305ec7eceb0e7b27959eb94920c38d5d81a25d19402cd71"
        },
        "downloads": -1,
        "filename": "cdk8s-plus-0.25.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1d2c7a7a1fcc36c92a971f6d070920ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 104726,
        "upload_time": "2020-06-22T12:20:07",
        "upload_time_iso_8601": "2020-06-22T12:20:07.515107Z",
        "url": "https://files.pythonhosted.org/packages/97/c6/4b1b358b86cefa45158f273f4a5f6d3f3a7098e61668dab6c1afda958199/cdk8s-plus-0.25.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.26.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef25a662f797c1014ef77c2f82d6131651adca741de70eee73baad32ea3e3aa2",
          "md5": "26c5be30503d5f9c3c005b0b3eab7a76",
          "sha256": "ce4b1430d49485c3675c293924725f297c0ff8cf6718e18a3b89b0cbbea112e7"
        },
        "downloads": -1,
        "filename": "cdk8s_plus-0.26.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "26c5be30503d5f9c3c005b0b3eab7a76",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 407322,
        "upload_time": "2020-06-29T13:33:55",
        "upload_time_iso_8601": "2020-06-29T13:33:55.255862Z",
        "url": "https://files.pythonhosted.org/packages/ef/25/a662f797c1014ef77c2f82d6131651adca741de70eee73baad32ea3e3aa2/cdk8s_plus-0.26.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc4d2e62c3d2e2db343917d2ad218c3ec61be5652d855514899a14d4ad9ede41",
          "md5": "3fe30164d89c2e4a048b21aafacfd4ee",
          "sha256": "600b92c21939cdd0ba030fcfbdacf4012446ad70072c5009a6b116f10dd7f221"
        },
        "downloads": -1,
        "filename": "cdk8s-plus-0.26.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3fe30164d89c2e4a048b21aafacfd4ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 410307,
        "upload_time": "2020-06-29T13:33:57",
        "upload_time_iso_8601": "2020-06-29T13:33:57.894086Z",
        "url": "https://files.pythonhosted.org/packages/fc/4d/2e62c3d2e2db343917d2ad218c3ec61be5652d855514899a14d4ad9ede41/cdk8s-plus-0.26.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.27.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2260951342ebe2ec80b8ed8116452d1ba9ea231b8a24a0189b8cfc67d2500dc3",
          "md5": "fbcd00f63cdd72a04b6b5c088b107a3c",
          "sha256": "6a84b343efa08b9e824e64c080783b6fa51af82330d17a328629809ddb855a16"
        },
        "downloads": -1,
        "filename": "cdk8s_plus-0.27.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fbcd00f63cdd72a04b6b5c088b107a3c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 407785,
        "upload_time": "2020-08-10T08:13:16",
        "upload_time_iso_8601": "2020-08-10T08:13:16.295029Z",
        "url": "https://files.pythonhosted.org/packages/22/60/951342ebe2ec80b8ed8116452d1ba9ea231b8a24a0189b8cfc67d2500dc3/cdk8s_plus-0.27.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c93291bf5ffb49330596c8b1901bcb21a12354729254da81acc66df8c977bcf4",
          "md5": "dc193c5025325ce56632b0a0a6ba8776",
          "sha256": "9500fce66aa04f3cb677728247b897da3583da8a92e12eebeb82c7ba66af8a66"
        },
        "downloads": -1,
        "filename": "cdk8s-plus-0.27.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dc193c5025325ce56632b0a0a6ba8776",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 410970,
        "upload_time": "2020-08-10T08:13:19",
        "upload_time_iso_8601": "2020-08-10T08:13:19.390201Z",
        "url": "https://files.pythonhosted.org/packages/c9/32/91bf5ffb49330596c8b1901bcb21a12354729254da81acc66df8c977bcf4/cdk8s-plus-0.27.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.28.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c8019eb17bb3ed43dc5aded68e9c9cd5f6e233ae186a73b7b1c6ee2377e045a",
          "md5": "b1a8907bb2d81c93dec263f0a78e014c",
          "sha256": "b08a485022838acde27ec89cebdb7f110e0143466df897fbde540aa0077571ef"
        },
        "downloads": -1,
        "filename": "cdk8s_plus-0.28.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1a8907bb2d81c93dec263f0a78e014c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 410329,
        "upload_time": "2020-09-14T14:31:54",
        "upload_time_iso_8601": "2020-09-14T14:31:54.498464Z",
        "url": "https://files.pythonhosted.org/packages/0c/80/19eb17bb3ed43dc5aded68e9c9cd5f6e233ae186a73b7b1c6ee2377e045a/cdk8s_plus-0.28.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff587e22f87adeaba1f154f147fcaae5ff4556aecc19108329b5363a8d0a5aed",
          "md5": "3a33fadff8d9556eebc8cc020d2db08f",
          "sha256": "0bcbff5e3524df45241916eaf54f8548795d0ba83f569190d5e9306056a6b975"
        },
        "downloads": -1,
        "filename": "cdk8s-plus-0.28.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3a33fadff8d9556eebc8cc020d2db08f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 413326,
        "upload_time": "2020-09-14T14:31:57",
        "upload_time_iso_8601": "2020-09-14T14:31:57.287498Z",
        "url": "https://files.pythonhosted.org/packages/ff/58/7e22f87adeaba1f154f147fcaae5ff4556aecc19108329b5363a8d0a5aed/cdk8s-plus-0.28.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.29.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf71353f7d98ee7e77b5ba906e1b7b63c3e4815e5e178c2a5989c6144a362f5a",
          "md5": "15fc49441c764b45e0430cd965fa246f",
          "sha256": "11a04f062935aaf561d1c8eaca0d0fd332502e83b634dce02dc369020a5e8757"
        },
        "downloads": -1,
        "filename": "cdk8s_plus-0.29.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "15fc49441c764b45e0430cd965fa246f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 408831,
        "upload_time": "2020-09-27T10:59:08",
        "upload_time_iso_8601": "2020-09-27T10:59:08.676528Z",
        "url": "https://files.pythonhosted.org/packages/bf/71/353f7d98ee7e77b5ba906e1b7b63c3e4815e5e178c2a5989c6144a362f5a/cdk8s_plus-0.29.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "382ee0dbfebef918494e8d897cc055982f81dc82855f9d696bc2a47f2c3fd5e4",
          "md5": "9b7d29d428f51c451b15b006574ade1d",
          "sha256": "5ea69a730d31f6e8530d6f2c2b6fe79948f8c8b7939e413a11e2e42322d20e5f"
        },
        "downloads": -1,
        "filename": "cdk8s-plus-0.29.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9b7d29d428f51c451b15b006574ade1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 412213,
        "upload_time": "2020-09-27T10:59:11",
        "upload_time_iso_8601": "2020-09-27T10:59:11.606956Z",
        "url": "https://files.pythonhosted.org/packages/38/2e/e0dbfebef918494e8d897cc055982f81dc82855f9d696bc2a47f2c3fd5e4/cdk8s-plus-0.29.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.30.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f14a4f493d7eccb96bfa1295d070232edb811879725f56c98c95f233ddc5ef83",
          "md5": "73d503253a5f472265b084c92717a124",
          "sha256": "92653c543ca49aa10e86ca19628838bf9ca3656c578351ee4cd10db7805734c9"
        },
        "downloads": -1,
        "filename": "cdk8s_plus-0.30.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73d503253a5f472265b084c92717a124",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 436855,
        "upload_time": "2020-10-04T08:43:13",
        "upload_time_iso_8601": "2020-10-04T08:43:13.658064Z",
        "url": "https://files.pythonhosted.org/packages/f1/4a/4f493d7eccb96bfa1295d070232edb811879725f56c98c95f233ddc5ef83/cdk8s_plus-0.30.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8884a42faad5fadaa2eab3d4a06e03af0fbfb5cf83e25436f3324b3537e741f",
          "md5": "605ea9f07fe450d542d79a5e989fdb99",
          "sha256": "e29c5039128158ae7c62cccf9c06053c4b44d3ba7b34edd737e8f1fb6570dcbb"
        },
        "downloads": -1,
        "filename": "cdk8s-plus-0.30.0.tar.gz",
        "has_sig": false,
        "md5_digest": "605ea9f07fe450d542d79a5e989fdb99",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 440151,
        "upload_time": "2020-10-04T08:43:16",
        "upload_time_iso_8601": "2020-10-04T08:43:16.349648Z",
        "url": "https://files.pythonhosted.org/packages/e8/88/4a42faad5fadaa2eab3d4a06e03af0fbfb5cf83e25436f3324b3537e741f/cdk8s-plus-0.30.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.31.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "615099b4e3e101c9672a7c1bc712b54231d5b8b76228fd6962963c5802019643",
          "md5": "5a9206a7ea47cb5b4858ac7ea0b55720",
          "sha256": "a6dfc35ab38142749f90db91b9b0707cfb0c826b1aa9635e6cc1145d4674c362"
        },
        "downloads": -1,
        "filename": "cdk8s_plus-0.31.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a9206a7ea47cb5b4858ac7ea0b55720",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 459245,
        "upload_time": "2020-10-19T08:40:18",
        "upload_time_iso_8601": "2020-10-19T08:40:18.350983Z",
        "url": "https://files.pythonhosted.org/packages/61/50/99b4e3e101c9672a7c1bc712b54231d5b8b76228fd6962963c5802019643/cdk8s_plus-0.31.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfa828364c0bb701b2fa85105f65a16daca3ee1203df6443a2b25561bc42bdf2",
          "md5": "aa8cee2f95d1a1f58454b1c2ee9c5802",
          "sha256": "1a3fa82d51c63b4f6642f8240404429386c13836e12550a093192fa0d6fe23b9"
        },
        "downloads": -1,
        "filename": "cdk8s-plus-0.31.0.tar.gz",
        "has_sig": false,
        "md5_digest": "aa8cee2f95d1a1f58454b1c2ee9c5802",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 463468,
        "upload_time": "2020-10-19T08:40:21",
        "upload_time_iso_8601": "2020-10-19T08:40:21.535043Z",
        "url": "https://files.pythonhosted.org/packages/bf/a8/28364c0bb701b2fa85105f65a16daca3ee1203df6443a2b25561bc42bdf2/cdk8s-plus-0.31.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.32.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce32e5e92fb6d989febe895939e5f2a9207566b8a430f1f310fa3b7c0f870c49",
          "md5": "f7db73f7e986403fdce5c8f83cc08b78",
          "sha256": "a484eb27d75b0fe3a90ef4fca0a7fcbbe8d171a57e0102be4f7e33aa33ab3cd3"
        },
        "downloads": -1,
        "filename": "cdk8s_plus-0.32.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7db73f7e986403fdce5c8f83cc08b78",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 468591,
        "upload_time": "2020-10-20T11:07:48",
        "upload_time_iso_8601": "2020-10-20T11:07:48.146790Z",
        "url": "https://files.pythonhosted.org/packages/ce/32/e5e92fb6d989febe895939e5f2a9207566b8a430f1f310fa3b7c0f870c49/cdk8s_plus-0.32.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2df5b4dffa6569ecc88443f1f817f06732b608c53fb0813c169cceb75d77c80",
          "md5": "8033b677fc8bcdabcb43c85cd3f6e007",
          "sha256": "c2e766311bd60f4823190cc7fb9b451530015670bc8b9387b756420aeda6d8cd"
        },
        "downloads": -1,
        "filename": "cdk8s-plus-0.32.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8033b677fc8bcdabcb43c85cd3f6e007",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 472471,
        "upload_time": "2020-10-20T11:07:51",
        "upload_time_iso_8601": "2020-10-20T11:07:51.974794Z",
        "url": "https://files.pythonhosted.org/packages/c2/df/5b4dffa6569ecc88443f1f817f06732b608c53fb0813c169cceb75d77c80/cdk8s-plus-0.32.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.33.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5f8cf0f92c6f51445c0fdc3229a8ba38cd163f19b749582dc15ff963af59750",
          "md5": "11937366bb0a12fd7be2f325402669fe",
          "sha256": "3b59854e53d069a643e7a6350c11edecb3d5afb51c262e926134210f1180b4af"
        },
        "downloads": -1,
        "filename": "cdk8s_plus-0.33.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "11937366bb0a12fd7be2f325402669fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 449254,
        "upload_time": "2020-10-21T07:03:48",
        "upload_time_iso_8601": "2020-10-21T07:03:48.984414Z",
        "url": "https://files.pythonhosted.org/packages/d5/f8/cf0f92c6f51445c0fdc3229a8ba38cd163f19b749582dc15ff963af59750/cdk8s_plus-0.33.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee6a6da37a48b53f96148f9601779eed6eadd88ae96bc18eda950922554d1b2a",
          "md5": "2e3d87d9890635f20d3325143a9d50ac",
          "sha256": "c6d60c17e22cb6b223f14e5fc0c472a5f7b0ae892bc0200d8bffcb3fe8e2d0c8"
        },
        "downloads": -1,
        "filename": "cdk8s-plus-0.33.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2e3d87d9890635f20d3325143a9d50ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 452812,
        "upload_time": "2020-10-21T07:03:52",
        "upload_time_iso_8601": "2020-10-21T07:03:52.503398Z",
        "url": "https://files.pythonhosted.org/packages/ee/6a/6da37a48b53f96148f9601779eed6eadd88ae96bc18eda950922554d1b2a/cdk8s-plus-0.33.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d5f8cf0f92c6f51445c0fdc3229a8ba38cd163f19b749582dc15ff963af59750",
        "md5": "11937366bb0a12fd7be2f325402669fe",
        "sha256": "3b59854e53d069a643e7a6350c11edecb3d5afb51c262e926134210f1180b4af"
      },
      "downloads": -1,
      "filename": "cdk8s_plus-0.33.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "11937366bb0a12fd7be2f325402669fe",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 449254,
      "upload_time": "2020-10-21T07:03:48",
      "upload_time_iso_8601": "2020-10-21T07:03:48.984414Z",
      "url": "https://files.pythonhosted.org/packages/d5/f8/cf0f92c6f51445c0fdc3229a8ba38cd163f19b749582dc15ff963af59750/cdk8s_plus-0.33.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee6a6da37a48b53f96148f9601779eed6eadd88ae96bc18eda950922554d1b2a",
        "md5": "2e3d87d9890635f20d3325143a9d50ac",
        "sha256": "c6d60c17e22cb6b223f14e5fc0c472a5f7b0ae892bc0200d8bffcb3fe8e2d0c8"
      },
      "downloads": -1,
      "filename": "cdk8s-plus-0.33.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2e3d87d9890635f20d3325143a9d50ac",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 452812,
      "upload_time": "2020-10-21T07:03:52",
      "upload_time_iso_8601": "2020-10-21T07:03:52.503398Z",
      "url": "https://files.pythonhosted.org/packages/ee/6a/6da37a48b53f96148f9601779eed6eadd88ae96bc18eda950922554d1b2a/cdk8s-plus-0.33.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}