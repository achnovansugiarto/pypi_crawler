{
  "info": {
    "author": "Bruce",
    "author_email": "siyuan.jin@connect.ust.hk",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## FinQMC: A Quantum Monte Carlo Framework for Business Practitioners\nFinQMC is a quantum Monte Carlo framework tailored for business practitioners who want to explore the potential of quantum computing for financial modeling. The primary contribution of this research is to establish a user-friendly software tool that enables financial analysts to experiment with quantum Monte Carlo methods without needing to be experts in quantum computing or computer programming.\n\n### Features\n- A simple and intuitive interface that allows users to specify financial models using familiar mathematical notation.\n- Support for a wide range of probability distributions commonly used in financial modeling.\n- The ability to simulate complex financial scenarios with high accuracy using quantum Monte Carlo methods.\n- Integration with existing Python-based financial modeling libraries.\n\n### Requirements\n- Python 3.7 or higher\n- NumPy, SciPy, and Matplotlib libraries\n- qiskit, a Python-based quantum computing library\n\n\n#### Introduction to FinQMC Modules\nThe framework is composed of several modules that work together to provide a comprehensive suite of tools for quantum computing:\n\n#### Quantum Variable\nThe Quantum Variable module allows users to define quantum variables and assign either constant or distribution-based values. This module provides a flexible and intuitive way to define the inputs for the QMC simulation.\n\n#### Quantum Arithmetic\nThe Quantum Arithmetic module provides efficient operations between any two variables. This module enables business practitioners to perform complex calculations involving quantum variables, without needing a deep understanding of the underlying quantum mechanics.\n\n#### Quantum Walk\nThe Quantum Walk module simplifies the sampling and accumulation process. This module enables users to efficiently simulate the QMC process, by handling the necessary steps involved in quantum walks.\n\n#### Quantum Estimation\nThe Quantum Estimation module calculates expected values or the minimum values within a distribution. This module provides a reliable and accurate way to estimate the outcomes of QMC simulations, enabling users to make informed business decisions based on the results.\n\n## Installation\nYou can install the Quantum Monte Carlo Library using pip:\n\n## Usage\nHere is an example of how to use the Quantum Monte Carlo Library to do addtion using a quantum circuit:\n```python\nfrom QuantumMC.quantummc import QuantumMC\nfrom QuantumMC.variable import Variable\nqmc = QuantumMC()\n\n# Define two quantum variables with constant values\nvar1 = Variable(2, \"var1\")\nvar1.load_constant(2)\nvar2 = Variable(2, \"var2\")\nvar2.load_constant(1)\nqmc.add_variable(var1)\nqmc.add_variable(var2)\n\n# Add the two variables using QuantumArithmetic module\na, b = qmc.arithmetic(\"add\", [var1, var2])\n```\n\n### Contribution Guidelines\nWe welcome contributions to FinQMC from the community. If you would like to contribute to the project, please fork the repository and submit a pull request with your changes.\n\n### License\nThis software is released under the MIT License. See LICENSE.txt for details.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/siyuan-bruce/QuantumMonteCarlo",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "finqmc",
    "package_url": "https://pypi.org/project/finqmc/",
    "platform": null,
    "project_url": "https://pypi.org/project/finqmc/",
    "project_urls": {
      "Bug Tracker": "https://github.com/siyuan-bruce/QuantumMonteCarlo/issues",
      "Homepage": "https://github.com/siyuan-bruce/QuantumMonteCarlo"
    },
    "release_url": "https://pypi.org/project/finqmc/0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Quantum Monte Carlo framework",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17257807,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b736fafc18af2869082af589f0733d24aa63802a237fc26b32217f654b4615f",
          "md5": "db38c2c5e3ed2987448f9de57722df5f",
          "sha256": "0cc17813cb7edb07d1482a5cc24d76ab8a385983c07d80446bd4f00e81a1eabd"
        },
        "downloads": -1,
        "filename": "finqmc-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "db38c2c5e3ed2987448f9de57722df5f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12579,
        "upload_time": "2023-03-12T03:56:20",
        "upload_time_iso_8601": "2023-03-12T03:56:20.120017Z",
        "url": "https://files.pythonhosted.org/packages/4b/73/6fafc18af2869082af589f0733d24aa63802a237fc26b32217f654b4615f/finqmc-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3d38d762ebe3653caa683876d73f5251a7cb79a859a591fca6ef408d11478f1",
          "md5": "6647d90f348cf345042c40c52ed9e74d",
          "sha256": "eca490943e15569e0b3054a67170ea6f10cc7eaf88bee6e4bb49b9f1ffdd27ad"
        },
        "downloads": -1,
        "filename": "finqmc-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6647d90f348cf345042c40c52ed9e74d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12614,
        "upload_time": "2023-03-12T04:20:34",
        "upload_time_iso_8601": "2023-03-12T04:20:34.579685Z",
        "url": "https://files.pythonhosted.org/packages/a3/d3/8d762ebe3653caa683876d73f5251a7cb79a859a591fca6ef408d11478f1/finqmc-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3d38d762ebe3653caa683876d73f5251a7cb79a859a591fca6ef408d11478f1",
        "md5": "6647d90f348cf345042c40c52ed9e74d",
        "sha256": "eca490943e15569e0b3054a67170ea6f10cc7eaf88bee6e4bb49b9f1ffdd27ad"
      },
      "downloads": -1,
      "filename": "finqmc-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6647d90f348cf345042c40c52ed9e74d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 12614,
      "upload_time": "2023-03-12T04:20:34",
      "upload_time_iso_8601": "2023-03-12T04:20:34.579685Z",
      "url": "https://files.pythonhosted.org/packages/a3/d3/8d762ebe3653caa683876d73f5251a7cb79a859a591fca6ef408d11478f1/finqmc-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}