{
  "info": {
    "author": "Alex Kessinger",
    "author_email": "voidfiles@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Strainer-2020: Fast Functional Serializers\n==========================================\n\nStrainer-2020 is a different take on serialization and validation in python. It utilizes a functional style over classes.\n\nStrainer-2020 officially supports Python 3.6 and newer, and runs great on PyPy.\n\nThis is a fork of original Alex Kessinger `pystrainer <https://github.com/voidfiles/strainer>`_ library with improvements that changed operation but not the usage paradigm. I'm trying to keep his commitment to efficiency.\n\nFeatures\n--------\n\n- Functional\n- Complex Python object serialization\n- Data deserialization into simple Python structures\n- Data validation\n\nChanges\n-------\n\n- serialization is done by data serializers defined for fields\n- validators perform data validation only\n- basic field types have simplified interface functions tthat wrap generic ``field()`` function\n- datetime/time serialization and deserialization preserves timezone information or lack of it; naive datetimes/times are serialized as naive and then deserialized as naive too\n\nSerialization Example\n---------------------\n\n.. code-block:: python\n\n    import datetime\n    from strainer import (serializer, field, child,\n                          formatters, validators,\n                          ValidationException, fields)\n\n    artist_serializer = serializer(\n        field('name', validators=[validators.required()])\n    )\n\n    album_schema = serializer(\n        field('title', validators=[validators.required()]),\n        fields.date('release_date', required=True),\n        child('artist', serializer=artist_serializer, validators=[validators.required()])\n    )\n\n    class Artist(object):\n        def __init__(self, name):\n            self.name = name\n\n    class Album(object):\n        def __init__(self, title, release_date, artist):\n            self.title = title\n            self.release_date = release_date\n            self.artist = artist\n\n    bowie = Artist(name='David Bowie')\n    album = Album(\n        artist=bowie,\n        title='Hunky Dory',\n        release_date=datetime.datetime(1971, 12, 17)\n    )\n\nNow we can serialize, deserialize, and validate data\n\n.. code-block:: python\n\n    >>> album_schema.serialize(album)\n    {'artist': {'name': 'David Bowie'},\n     'release_date': '1971-12-17',\n     'title': 'Hunky Dory'}\n    >>> album_schema.deserialize(album_schema.serialize(album))\n    {'artist': {'name': 'David Bowie'},\n     'release_date': datetime.date(1971, 12, 17),\n     'title': 'Hunky Dory'}\n    >>> input = album_schema.serialize(album)\n    >>> del input['artist']\n    >>> album_schema.deserialize(input)\n    ValidationException: {'artist': ['This field is required']}\n\nThe example has been borrowed from `Marshmallow <https://marshmallow.readthedocs.io/en/latest/>`_ and tweaked.\n\nInstallation\n------------\n\nTo install Strainer-2020, simply:\n\n.. code-block:: bash\n\n    $ pip install strainer-2020\n    ‚ú®üç∞‚ú®\n\nSatisfaction, guaranteed.\n\n\n.. :changelog:\n\nRelease History\n---------------\n\n1.4.0 (2020)\n++++++++++++\n\n- infrastructure refresh\n- separate operation of validators and serializers\n- change to datetime serialization that preserves timezone information or lack of it\n- drop Python 2 support, limit support to modern Python 3 only\n\n\n1.0.1\n++++++++++\n\n- refining validators\n- added attr_getter to child, and many\n\n1.0.0\n++++++++++\n\n- Updating docs\n- Making it official\n\n0.0.9\n++++++++++++++++++\n\n* Fixing python 3 comptatability issue\n\n0.0.8\n++++++++++++++++++\n\n* Removed an errant print statement\n\n0.0.7\n++++++++++++++++++\n\n* Fixed a bug with datetime validators\n\n0.0.6\n++++++++++++++++++\n\n* Fixed a bug with multiple validation, pointing to the correct index\n* Fixed a bug that applied vlaidation to entire array in multiple instead of elements\n* Added a dict_field, if source is dict, instead of an object\n* Added ability to pass validators to child, and many instances applying validation before moving to sub-element\n* Added tests around catching nested validation errors\n* Added formatters, so things can be formatted on the way out\n* Got rid of encoders, not the domain of this project\n* Everything can be imported from one namespace\n* Changed the API from to_representation/to_internal to serialize/deserialize\n\n0.0.5 (2016-11-29)\n++++++++++++++++++\n\n* Fleshed out docs\n* Added datetime validator\n* Increased speed bu reducing loops\n\n0.0.4 (2016-11-23)\n++++++++++++++++++\n\n* Add some validators\n\n\n0.0.1 (2016-11-23)\n++++++++++++++++++\n\n* Birth\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/zgoda/strainer",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "Jarek Zgoda",
    "maintainer_email": "jarek.zgoda@gmail.com",
    "name": "strainer-2020",
    "package_url": "https://pypi.org/project/strainer-2020/",
    "platform": "",
    "project_url": "https://pypi.org/project/strainer-2020/",
    "project_urls": {
      "Homepage": "http://github.com/zgoda/strainer"
    },
    "release_url": "https://pypi.org/project/strainer-2020/1.4.0/",
    "requires_dist": [
      "aniso8601"
    ],
    "requires_python": "~=3.6",
    "summary": "Fast functional serializers",
    "version": "1.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9515954,
  "releases": {
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6b4adbaae855f6ce429791cc3841bb6fed7135556b66691f0955824e24d733a",
          "md5": "7cd3c92219fb87de3a82d62cac0cd41c",
          "sha256": "56fcdf87b0f0719e2f7f4e202f8937ce4efe3a96fff63c8127f584b431d7deda"
        },
        "downloads": -1,
        "filename": "strainer_2020-1.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7cd3c92219fb87de3a82d62cac0cd41c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 12107,
        "upload_time": "2021-02-24T22:22:46",
        "upload_time_iso_8601": "2021-02-24T22:22:46.811718Z",
        "url": "https://files.pythonhosted.org/packages/e6/b4/adbaae855f6ce429791cc3841bb6fed7135556b66691f0955824e24d733a/strainer_2020-1.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b6317cdca5c742612441dc243628439efa46e760c15880a5cd160e1064a3ed4",
          "md5": "37753a68f16cac2191e133227e342cfe",
          "sha256": "423c5bc60c2a67ef0cc16cb14a4adac1649f6ea727238a61ab664876d3d7600b"
        },
        "downloads": -1,
        "filename": "strainer-2020-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "37753a68f16cac2191e133227e342cfe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 11244,
        "upload_time": "2021-02-24T22:22:52",
        "upload_time_iso_8601": "2021-02-24T22:22:52.429432Z",
        "url": "https://files.pythonhosted.org/packages/8b/63/17cdca5c742612441dc243628439efa46e760c15880a5cd160e1064a3ed4/strainer-2020-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e6b4adbaae855f6ce429791cc3841bb6fed7135556b66691f0955824e24d733a",
        "md5": "7cd3c92219fb87de3a82d62cac0cd41c",
        "sha256": "56fcdf87b0f0719e2f7f4e202f8937ce4efe3a96fff63c8127f584b431d7deda"
      },
      "downloads": -1,
      "filename": "strainer_2020-1.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7cd3c92219fb87de3a82d62cac0cd41c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.6",
      "size": 12107,
      "upload_time": "2021-02-24T22:22:46",
      "upload_time_iso_8601": "2021-02-24T22:22:46.811718Z",
      "url": "https://files.pythonhosted.org/packages/e6/b4/adbaae855f6ce429791cc3841bb6fed7135556b66691f0955824e24d733a/strainer_2020-1.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8b6317cdca5c742612441dc243628439efa46e760c15880a5cd160e1064a3ed4",
        "md5": "37753a68f16cac2191e133227e342cfe",
        "sha256": "423c5bc60c2a67ef0cc16cb14a4adac1649f6ea727238a61ab664876d3d7600b"
      },
      "downloads": -1,
      "filename": "strainer-2020-1.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "37753a68f16cac2191e133227e342cfe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.6",
      "size": 11244,
      "upload_time": "2021-02-24T22:22:52",
      "upload_time_iso_8601": "2021-02-24T22:22:52.429432Z",
      "url": "https://files.pythonhosted.org/packages/8b/63/17cdca5c742612441dc243628439efa46e760c15880a5cd160e1064a3ed4/strainer-2020-1.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}