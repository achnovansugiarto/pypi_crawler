{
  "info": {
    "author": "Daniel Stock",
    "author_email": "daniel.stock@ipa.fraunhofer.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<p align=\"center\">\n  <a href=\"https://research.virtualfortknox.de\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <img src=\"https://research.virtualfortknox.de/static/cms/img/vfk_research_logo.png\" alt=\"VFK Research Logo\" height=\"70\" >\n  </a>\n</p>\n\n# MSB websocket client library for Python\n\n[![Build Status](https://app.travis-ci.com/research-virtualfortknox/msb-client-websocket-python.svg?branch=master)](https://app.travis-ci.com/research-virtualfortknox/msb-client-websocket-python)\n[![PyPI version](https://badge.fury.io/py/msb-client-websocket-python.svg)](https://badge.fury.io/py/msb-client-websocket-python)\n[![Coverage Status](https://coveralls.io/repos/github/research-virtualfortknox/msb-client-websocket-python/badge.svg?branch=feature-coveralls)](https://coveralls.io/github/research-virtualfortknox/msb-client-websocket-python?branch=feature-coveralls)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fresearch-virtualfortknox%2Fmsb-client-websocket-python.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2Fresearch-virtualfortknox%2Fmsb-client-websocket-python?ref=badge_shield)\n\n**Compatibility Matrix**\n\nClient version compatibility to MSB versions:\n\n| | **1.5.x-RELEASE** | **1.6.x-RELEASE** |\n|---|:---:|:---:|\n| 1.0.x       | x | x |\n\n## Welcome\n\nIf you want to contribute, please read the [Contribution Guidelines](.github/CONTRIBUTING.md).\n\nIf you want to test this client by using its sources and a sample app, read the [App Sample](doc/app_sample.md).\n\nIf you want to know how to use this client in your own project, read below.\n\n## What is VFK MSB\n\nTODO: Link to general documentation about VFK MSB\n\nYou can use this client to connect a python app to VFK MSB.\n\n## Prerequisites\n\n* Setup [Python](https://www.python.org/downloads/) **version 3.7.x** (last client version supporting Python 2.7 is v1.0.8, last client version supporting Python 3.6 is v1.0.11)\n* MSB client installed using PyPi\n* Optional: Use pipenv to run your python app in a virtual environment to avoid dependency isssues with other apps\n\nInstall MSB client from PyPi\n\n```sh\npip install msb-client-websocket-python\n```\n\nImport to your applicaton\n\n```python\nfrom msb_client.ComplexDataFormat import ComplexDataFormat\nfrom msb_client.DataType import DataType\nfrom msb_client.Event import Event\nfrom msb_client.Function import Function\nfrom msb_client.MsbClient import MsbClient\n```\n\n## Create self-description\n\nThe figure below shows a minimal required `self-description model` of a smart object / application.\nEvery smart object / application requires (must have) a uuid and a token.\nThe uuid is competent for identification\nand the token is used to verify the smart object / application for its owner on the MSB side.\n\n![Self Description](doc/images/self-description.png)\n\nTODO: Here you can find more information about\nthe `self-description structure` and `supported data formats`.\n\n### Alternative 1 - By application.properties\n\nAdd the main description by adding an `application.poperties` file to the root of your project:\n\nGenerate the uuid e.g. by a tool like https://www.uuidgenerator.net/\n\n```sh\nmsb.uuid=76499d88-34cf-4836-8cc1-7e0d9c54dacx\nmsb.name=YourSmartObjectName\nmsb.description=YourSmartObjectDesc\nmsb.token=5e0d9c54dacx\nmsb.type=SmartObject\n```\n\nWhen initializing your msb client instance, the `application.properties` file will be loaded.\n\n```python\nmyMsbClient = MsbClient()\n```\n\nYou can also set a custom path to the `application.properties` file.\n\n```python\nmyMsbClient = MsbClient(applicationPropertiesCustomPath=\"./your/path/to/application.properties\")\n```\n\n### Alternative 2 - By constructor\n\nIf you do not provide an application.properties file, use the constructor\nto define the basic self description.\n\n```python\nSERVICE_TYPE = \"SmartObject\"\nSO_UUID = str(uuid.uuid1()) # you can type in an own uuid here instead of generating it\nSO_NAME = \"YourSmartObjectName\"\nSO_DESCRIPTION = \"YourSmartObjectDesc\"  \nSO_TOKEN = SO_UUID[-6:]\nmyMsbClient = MsbClient(\n    SERVICE_TYPE,\n    SO_UUID,\n    SO_NAME,\n    SO_DESCRIPTION,\n    SO_TOKEN,\n)\n```\n\n## Add Events\n\nAdd `events` to your smart object / application which can be send to MSB.\n\n### Alternative 1: Simple event creation sample (using method params):\n\n```python\nevent_id = \"E1\"\nevent_name = \"EVENT \" + event_id\nevent_description = \"EVENT Description \" + event_id\nevent_dataformat = DataType.STRING\nevent_priority = 1 # 0 (LOW), 1 (MEDIUM), 2 (HIGH)\nisArray = False # just one value or array of it?\n\n# add the event\nmyMsbClient.addEvent(\n    event_id,\n    event_name,\n    event_description,\n    event_dataformat,\n    event_priority,\n    isArray,\n)\n```\n\n### Alternative 2: Complex event creation sample (using object):\n\n```python\nevent_id = \"E2\"\nevent_name = \"EVENT \" + event_id\nevent_description = \"EVENT Description \" + event_id\nevent_priority = 1 # 0 (LOW), 1 (MEDIUM), 2 (HIGH)\nisArray = False # just one value or array of it?\n\n# define a complex data format to be used in an event\n# init the complex data format\nmyDevice = ComplexDataFormat(\"MyDevice\")\nmyModule = ComplexDataFormat(\"MyModule\")\n\n# add the properties to the complex objects\n# (property_name, property_datatype, isArray)\nmyModule.addProperty(\"moduleName\", DataType.STRING, False)\nmyDevice.addProperty(\"deviceName\", DataType.STRING, False)\nmyDevice.addProperty(\"deviceWeight\", DataType.FLOAT, False)\nmyDevice.addProperty(\"submodules\", myModule, True)\n\n# add the event (with the root of the nested complex object)\nmyMsbClient.addEvent(\n    event_id,\n    event_name,\n    event_description,\n    myDevice,\n    event_priority,\n    isArray,\n)\n```\n\n### Alternative 3: Complex event creation sample (using json object):\n\n```python\nevent_id = \"E3\"\nevent_name = \"EVENT \" + event_id\nevent_description = \"EVENT Description \" + event_id\nevent_priority = 1 # 0 (LOW), 1 (MEDIUM), 2 (HIGH)\nisArray = False # just one value or array of it?\n\n# add the event (with the MSB-ready json object)\nmyMsbClient.addEvent(\n    event_id,\n    event_name,\n    event_description,\n    {\n        \"Team\" : {\n            \"type\" : \"object\",\n            \"properties\" : {\n                \"staff\" : {\n                    \"type\" : \"array\",\n                    \"items\" : {\n                        \"$ref\" : \"#/definitions/Member\"\n                    }\n                }\n            }\n        },\n        \"Member\" : {\n            \"type\" : \"object\",\n            \"properties\" : {\n                \"name\" : {\n                    \"type\" : \"string\"\n                },\n                \"status\" : {\n                    \"enum\" : [ \"present\", \"absent\" ],\n                    \"type\" : \"string\"\n                }\n            }\n        },\n        \"dataObject\" : {\n            \"$ref\" : \"#/definitions/Team\"\n        }\n    },\n    event_priority,\n    isArray,\n)\n```\n\nSee `app_sample.py` for more event creation examples.\n\n## Add Functions\n\nAdd `functions` and their implementations your smart object / application is able to handle.\n\n### Alternative 1: Simple function creation sample (using method params):\n\n```python\nfunction_id = \"F1\"\nfunction_name = \"FUNC \" + function_id\nfunction_description = \"FUNC Description \" + function_id\nfunction_dataformat = DataType.STRING\nisArray = False # handle array of values or just one value?\nresponseEvents = None # you can link to response events here by a list of event is e.g. [\"E1\"]\n\n# define the function which will be passed to the function description\n# this function implementation will be called\ndef printMsg(msg):\n    print(str(msg[\"dataObject\"]))\n\n# add the function\nmyMsbClient.addFunction(\n    function_id,\n    function_name,\n    function_description,\n    function_dataformat,\n    printMsg,\n    isArray,\n    responseEvents,\n)\n```\n\n### Alternative 2: Complex function creation sample (using object):\n\n```python\nfunction_id = \"F2\"\nfunction_name = \"FUNC \" + function_id\nfunction_description = \"FUNC Description \" + function_id\nisArray = False # handle array of values or just one value?\nresponseEvents = None # you can link to response events here by a list of event is e.g. [\"E1\"]\n\n# define a complex data format to be used in an event\n# init the complex data format\nmyCar = ComplexDataFormat(\"MyCar\")\n\n# add the properties to the complex objects\n# (property_name, property_datatype, isArray)\nmyCar.addProperty(\"carColor\", DataType.STRING, False)\nmyCar.addProperty(\"carNrOfSeats\", DataType.INT32, False)\nmyCar.addProperty(\"carWeight\", DataType.FLOAT, False)\n\n# define the function which will be passed to the function description\n# this function implementation will be called\ndef printMsg(msg):\n    print(str(msg[\"dataObject\"]))\n\n# add the function\nmyMsbClient.addFunction(\n    function_id,\n    function_name,\n    function_description,\n    myCar,\n    printMsg,\n    isArray,\n    responseEvents,\n)\n```\n\n### Alternative 3: Complex function creation sample (using json object):\n\n```python\nfunction_id = \"F3\"\nfunction_name = \"FUNC \" + function_id\nfunction_description = \"FUNC Description \" + function_id\nisArray = False # handle array of values or just one value?\nresponseEvents = None # you can link to response events here by a list of event is e.g. [\"E1\"]\n\n# define the function which will be passed to the function description\n# this function implementation will be called\ndef printMsg(msg):\n    print(str(msg[\"dataObject\"]))\n\n# add the function\nmyMsbClient.addFunction(\n    function_id,\n    function_name,\n    function_description,\n    {\n        \"MyCar\" : {\n            \"type\" : \"object\",\n            \"properties\" : {\n                \"carColor\" : {\n                    \"type\" : \"string\"\n                },\n                \"carNrOfSeats\" : {\n                    \"format\": \"int32\",\n                    \"type\": \"integer\"\n                },\n                \"carWeight\" : {\n                    \"format\": \"float\",\n                    \"type\": \"number\"\n                },\n                \"wheels\" : {\n                    \"type\" : \"array\",\n                    \"items\" : {\n                        \"$ref\" : \"#/definitions/MyWheel\"\n                    }\n                }\n            }\n        },\n        \"MyWheel\" : {\n            \"type\" : \"object\",\n            \"properties\" : {\n                \"position\" : {\n                    \"enum\" : [ \"br\", \"bl\", \"fr\", \"fl\" ],\n                    \"type\" : \"string\"\n                }\n            }\n        },\n        \"dataObject\" : {\n            \"$ref\" : \"#/definitions/MyCar\"\n        }\n    },\n    printMsg,\n    isArray,\n    responseEvents,\n)\n```\n\nSee `app_sample.py` of the application template for more (and complex) examples.\n\n## Connect and Register Client\n\n```python\nmsb_url = 'ws://127.0.0.1:8085'\nmyMsbClient.connect(msb_url)\nmyMsbClient.register()\n```\n\nYou will get an `IO_CONNECTED` and `IO_REGISTERED` event from MSB, if successful.\n\n## Event publishing\n\nFor publishing an event to a websocket broker interface,\nonly the `eventId` and `data` are required of the already specified event (see above).\n\n```python\nevent_id = \"E1\"\nevent_value = 'Hello World!'\n\nmyMsbClient.publish(\n  event_id, \n  event_value\n)\n```\n\nThe MSB responds with an `IO_PUBLISHED` event, if successful.\n\nBy default events are published with a low priority.\n\nIt is also possible to `set the priority` of an event.\n\nThere are three possible priorities for events like it is shown at the following table.\n\n| `Constant` | `Value` |\n|:---:|:---:|\n| LOW | 0 |\n| MEDIUM| 1 |\n| HIGH| 2 |\n\n```python\nevent_id = \"E1\"\nevent_value = 'Hello World!'\nevent_priority = 2\n\nmyMsbClient.publish(\n  event_id, \n  event_value,\n  event_priority\n)\n```\n\nAnother option is to publish an event as `cached event` by setting the cache parameter to true.\nAnd you can add a `post date`.\n\nThis means that the event is not deleted if the connection is broken.\n\n```python\nevent_id = \"E1\"\nevent_value = 'Hello World!'\nevent_priority = 2\nevent_isCached = True\nevent_postDate = datetime.datetime.utcnow().isoformat()[:-3] + \"Z\"\n\nmyMsbClient.publish(\n  event_id, \n  event_value,\n  event_priority,\n  event_isCached,\n  event_postDate\n)\n```\n\nYou cann also handle `correlation ids` to identify an event among flows.\n\n```python\nevent_id = \"E1\"\nevent_value = 'Hello World!'\nevent_priority = 2\nevent_isCached = True\nevent_postDate = datetime.datetime.utcnow().isoformat()[:-3] + \"Z\"\nevent_correlationId = \"72047f33-a9ae-4aa5-b7ae-c1c4a2797cac\"\n\nmyMsbClient.publish(\n  event_id, \n  event_value,\n  event_priority,\n  event_isCached,\n  event_postDate,\n  event_correlationId\n)\n```\n\nFor values based on complex data formats it will look like this:\n\n```python\nevent_id = \"E2\"\nevent_priority = 2\nevent_isCached = True\nevent_postDate = datetime.datetime.utcnow().isoformat()[:-3] + \"Z\"\nevent_correlationId = \"72047f33-a9ae-4aa5-b7ae-c1c4a2797cac\"\n\n# pepare the complex ovbject based on a complex data format\n# use it as event value\nmyModuleObj = {}\nmyModuleObj['moduleName'] = 'Module 1'\nmyDeviceObj = {}\nmyDeviceObj['deviceName'] = 'Device 1'\nmyDeviceObj['deviceWeight'] = 1.3\nmyDeviceObj['submodules'] = [myModuleObj]\n\nmyMsbClient.publish(\n  event_id, \n  myDeviceObj,\n  event_priority,\n  event_isCached,\n  event_postDate,\n  event_correlationId\n)\n```\n\n## Function call handling\n\nAs shown above the addFunction method includes a `function pointer`\nto point to the function implementation.\n\n## Configuration parameters\n\nConfiguration parameters are a simple list of key value pairs for the smart object / application.\nIt is displayed and can be customized in the MSB UI to change your apps behaviour during runtime.\n\n`Add` condifuration parameters:\n\n```python\nparam_name_1 = \"testParam1\"\nparam_value_1 = True\nparam_datatype_1 = DataType.BOOLEAN\nmyMsbClient.addConfigParameter(param_name_1, param_value_1, param_datatype_1)\n\nparam_name_2 = \"testParam2\"\nparam_value_2 = \"StringValue\"\nparam_datatype_2 = DataType.STRING\nmyMsbClient.addConfigParameter(param_name_2, param_value_2, param_datatype_2)\n\nparam_name_3 = \"testParam3\"\nparam_value_3 = 1000\nparam_datatype_3 = DataType.INT32\nmyMsbClient.addConfigParameter(param_name_3, param_value_3, param_datatype_3)\n```\n\n`Get` configuration parameter (after changed in MSB UI) to change your app behaviour:\n\n```python\n# get by getConfigParameter using name as key\nparameterValueFound_1 = myMsbClient.getConfigParameter(param_name_1)\nparameterValueFound_2 = myMsbClient.getConfigParameter(param_name_2)\nparameterValueFound_3 = myMsbClient.getConfigParameter(param_name_3)\n```\n\n## SSL/TLS connection configuration\n\nTo enable `SSL/TLS`, you need to specify wss:// or https:// in the URL instead of ws:// or http://.\n\nFurthermore, it is necessary to specify a trust store in the client,\nwhich contains the public certificate of the MSB interface, so that it is considered trustworthy.\n\n```python\nmsb_url = 'wss://<hostname>:<port>'\nmyMsbClient.connect(msb_url)\nmyMsbClient.register()\n```\n\nIf you use an IP instead of a public url during development,\nit will be necessary to disable the hostname verification to connect via web socket secure.\n\n```python\nmyMsbClient.disableHostnameVerification(True)  \n```\n\n## Connection recovery\n\nIf connection to the common websocket interface is broken the client performs a reconnect.\n\nAfter a reconnect the registration at the MSB will be redone automatically by the client.\n\nYou can change this interval by setting an integer value in `ms` for the reconnect interval.\n\n```python\nmyMsbClient.setReconnectInterval(10000)\n```\n\nOr you can disable the automatic reconnect.\n\n```python\nmyMsbClient.disableAutoReconnect(True)\n```\n\n## Event caching\n\nIf the client loses the connection, the published events are cached in a queue.\n\nAfter a successfull reconnection, the queued events are published to MSB (FIFO principle).\nThe default size of the queue is 1000 entries. The size can be changed:\n\n```python\nmyMsbClient.setEventCacheSize(1000)\n```\n\nIf no event caching is needed, you can disable it.\n\n```python\nmyMsbClient.disableEventCache(True)\n```\n\n## Debug mode\n\nTo debug your clients communication with MSB, you can enable the debug mode\n\n```python\nmyMsbClient.enableDebug(True)\n```\n\nTo enable the trace of the websocket communication use also\n\n```python\nmyMsbClient.enableTrace(True)\n```\n\nIt mgiht be also helpful to enable data format validation, to check if an event value is valid\n\n```python\nmyMsbClient.enableDataFormatValidation(True)\n```\n\n\n## License\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fresearch-virtualfortknox%2Fmsb-client-websocket-python.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2Fresearch-virtualfortknox%2Fmsb-client-websocket-python?ref=badge_large)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://research.virtualfortknox.de/",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "msb-client-websocket-python",
    "package_url": "https://pypi.org/project/msb-client-websocket-python/",
    "platform": null,
    "project_url": "https://pypi.org/project/msb-client-websocket-python/",
    "project_urls": {
      "Bug Tracker": "https://github.com/research-virtualfortknox/msb-client-websocket-python/issues",
      "Homepage": "https://research.virtualfortknox.de/",
      "Source Code": "https://github.com/research-virtualfortknox/msb-client-websocket-python.git"
    },
    "release_url": "https://pypi.org/project/msb-client-websocket-python/1.0.13/",
    "requires_dist": [
      "websocket-client (==0.57.0)",
      "jsonschema (>=4.4.0)",
      "enum34 (>=1.1.10)"
    ],
    "requires_python": "",
    "summary": "The Python client library to connect to the Websocket Interface of the VFK MSB",
    "version": "1.0.13",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13149958,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41b157ba822717e1a7e9b062cc6c6948b636a30ce3c4f8d76bce0101963a40e7",
          "md5": "c9771c24836051eb1c902a84af6ed15a",
          "sha256": "f42944eb2ec390b53abe6f7fa03d191fbe735b3e5418dde40c2b306c89c4b4bf"
        },
        "downloads": -1,
        "filename": "msb_client_websocket_python-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c9771c24836051eb1c902a84af6ed15a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 24794,
        "upload_time": "2019-06-07T10:05:20",
        "upload_time_iso_8601": "2019-06-07T10:05:20.425590Z",
        "url": "https://files.pythonhosted.org/packages/41/b1/57ba822717e1a7e9b062cc6c6948b636a30ce3c4f8d76bce0101963a40e7/msb_client_websocket_python-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd422dc516ae78179a395e96cd4319c5cf0c00d3b885ff627da87d6be2b274c1",
          "md5": "bdfad6138f04a773fbe140c2e5255414",
          "sha256": "b0dfc7e771810557673b7b7cef86ecdee385c308700204dc6d7e453872dae436"
        },
        "downloads": -1,
        "filename": "msb-client-websocket-python-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bdfad6138f04a773fbe140c2e5255414",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31970,
        "upload_time": "2019-06-07T10:05:22",
        "upload_time_iso_8601": "2019-06-07T10:05:22.228862Z",
        "url": "https://files.pythonhosted.org/packages/fd/42/2dc516ae78179a395e96cd4319c5cf0c00d3b885ff627da87d6be2b274c1/msb-client-websocket-python-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f0f0876dd93eb2f1d29e1da69f67189db150157f6cd2b71994d55344a4f2bed",
          "md5": "460bfb47af27a1f3b280aca0358e278f",
          "sha256": "a04f33fe8ae200b53a00ce14049ac6c2a34f4f06c3394c4c44465b427c652256"
        },
        "downloads": -1,
        "filename": "msb_client_websocket_python-1.0.10-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "460bfb47af27a1f3b280aca0358e278f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 25903,
        "upload_time": "2021-04-06T12:39:25",
        "upload_time_iso_8601": "2021-04-06T12:39:25.148466Z",
        "url": "https://files.pythonhosted.org/packages/9f/0f/0876dd93eb2f1d29e1da69f67189db150157f6cd2b71994d55344a4f2bed/msb_client_websocket_python-1.0.10-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4d2dd550098e91f4250be3a9f978e4bdbfb8352fc1a5eb89d6febbd2538a654",
          "md5": "33ca1e16241ed97d8adbf576e1e61641",
          "sha256": "f6a135726579e27d7f15a6ce5462a114ca71d4d2cf3c2c4a44be985dcf1e0c31"
        },
        "downloads": -1,
        "filename": "msb-client-websocket-python-1.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "33ca1e16241ed97d8adbf576e1e61641",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34889,
        "upload_time": "2021-04-06T12:39:26",
        "upload_time_iso_8601": "2021-04-06T12:39:26.323262Z",
        "url": "https://files.pythonhosted.org/packages/c4/d2/dd550098e91f4250be3a9f978e4bdbfb8352fc1a5eb89d6febbd2538a654/msb-client-websocket-python-1.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9dc9888679710dccc8a76bb0b57b6107aada804ad7d83dad045c86057a14f402",
          "md5": "265cdef73b20e416651a9cde29ac9879",
          "sha256": "ea3a961672cc470372be5ec0b18a1d047dacae544f814bb7481355a8fbf47eaa"
        },
        "downloads": -1,
        "filename": "msb_client_websocket_python-1.0.11-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "265cdef73b20e416651a9cde29ac9879",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 25907,
        "upload_time": "2021-04-06T13:09:42",
        "upload_time_iso_8601": "2021-04-06T13:09:42.042140Z",
        "url": "https://files.pythonhosted.org/packages/9d/c9/888679710dccc8a76bb0b57b6107aada804ad7d83dad045c86057a14f402/msb_client_websocket_python-1.0.11-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01f49568c245a7b4d6c2d07c1ce7cca3b284de1aacfc6ce26617c2a272787ccd",
          "md5": "59140e67874099913b4e7027a29793f4",
          "sha256": "b53b669a75f402e63579d01a489b238d52044c8a79795df9da117c4dfa700fb9"
        },
        "downloads": -1,
        "filename": "msb-client-websocket-python-1.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "59140e67874099913b4e7027a29793f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34882,
        "upload_time": "2021-04-06T13:09:43",
        "upload_time_iso_8601": "2021-04-06T13:09:43.278652Z",
        "url": "https://files.pythonhosted.org/packages/01/f4/9568c245a7b4d6c2d07c1ce7cca3b284de1aacfc6ce26617c2a272787ccd/msb-client-websocket-python-1.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ec676b0125c7438db6c2142ef816cf60226610aa6312aa1b688d12b395f6f62",
          "md5": "741bc427a1dcf6efc08317a0164845b0",
          "sha256": "a85491ecbb7c5d077381348451bbe7895d889aefb47850f8efd66660a70c1b42"
        },
        "downloads": -1,
        "filename": "msb_client_websocket_python-1.0.12-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "741bc427a1dcf6efc08317a0164845b0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 25930,
        "upload_time": "2022-03-03T15:36:28",
        "upload_time_iso_8601": "2022-03-03T15:36:28.634250Z",
        "url": "https://files.pythonhosted.org/packages/1e/c6/76b0125c7438db6c2142ef816cf60226610aa6312aa1b688d12b395f6f62/msb_client_websocket_python-1.0.12-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9446a694e80d38d7b308fa4bad59f32f7e4e09144afbf5816db659875927ba9c",
          "md5": "8f6fcea05e5ac3cc19d9a71362a26980",
          "sha256": "deeab14c9304bed2075c109eeb591596e9a984d7c1d5c09f03cf185043e15a13"
        },
        "downloads": -1,
        "filename": "msb-client-websocket-python-1.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "8f6fcea05e5ac3cc19d9a71362a26980",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36059,
        "upload_time": "2022-03-03T15:36:30",
        "upload_time_iso_8601": "2022-03-03T15:36:30.391895Z",
        "url": "https://files.pythonhosted.org/packages/94/46/a694e80d38d7b308fa4bad59f32f7e4e09144afbf5816db659875927ba9c/msb-client-websocket-python-1.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9298140a1c4ccc9b19d1bed25c8681fd190607daa42eb63d94d72d18ada69c53",
          "md5": "12d9585112da982ee34c16609024ddef",
          "sha256": "7202594dd14e0d9f4e5c988f9f42ff7f3399707c3fa6ffadcea94ed99c862f7b"
        },
        "downloads": -1,
        "filename": "msb_client_websocket_python-1.0.13-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12d9585112da982ee34c16609024ddef",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 26101,
        "upload_time": "2022-03-11T14:26:27",
        "upload_time_iso_8601": "2022-03-11T14:26:27.683348Z",
        "url": "https://files.pythonhosted.org/packages/92/98/140a1c4ccc9b19d1bed25c8681fd190607daa42eb63d94d72d18ada69c53/msb_client_websocket_python-1.0.13-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d17c358e461d8e8289f4adff55d1c7e1c04d2ba977e6a4ae3f690bf2f3a4ad8a",
          "md5": "3328882c24fcc764efb2d218e5bad965",
          "sha256": "0d9e567a7d52bb2203f034e8922bbdfaecd867fe66162aaea93aa29b2fe53aac"
        },
        "downloads": -1,
        "filename": "msb-client-websocket-python-1.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "3328882c24fcc764efb2d218e5bad965",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36699,
        "upload_time": "2022-03-11T14:26:29",
        "upload_time_iso_8601": "2022-03-11T14:26:29.050536Z",
        "url": "https://files.pythonhosted.org/packages/d1/7c/358e461d8e8289f4adff55d1c7e1c04d2ba977e6a4ae3f690bf2f3a4ad8a/msb-client-websocket-python-1.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "678a51ac65f8c9d7a6ec090b675ef202909e7d22a06ac5bdc506fca5055b2094",
          "md5": "02f26f77c485ff22a1defdaa60a13a68",
          "sha256": "441897726974120edae6c650c862c738f41ac7c809a4ffd98146a9eba857f1e4"
        },
        "downloads": -1,
        "filename": "msb_client_websocket_python-1.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "02f26f77c485ff22a1defdaa60a13a68",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 25436,
        "upload_time": "2019-06-18T10:25:39",
        "upload_time_iso_8601": "2019-06-18T10:25:39.978783Z",
        "url": "https://files.pythonhosted.org/packages/67/8a/51ac65f8c9d7a6ec090b675ef202909e7d22a06ac5bdc506fca5055b2094/msb_client_websocket_python-1.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ec52422161a71294c674452a230b4afdc6e8104b71fdff8a7486f5f98c91730",
          "md5": "ed2ec967d168890e7b91ac580e2696bb",
          "sha256": "b8b5f4ed46cd50ff706038551ed9687555629831deaf77b1f912e7c7e92023ce"
        },
        "downloads": -1,
        "filename": "msb-client-websocket-python-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ed2ec967d168890e7b91ac580e2696bb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33647,
        "upload_time": "2019-06-18T10:25:41",
        "upload_time_iso_8601": "2019-06-18T10:25:41.845034Z",
        "url": "https://files.pythonhosted.org/packages/6e/c5/2422161a71294c674452a230b4afdc6e8104b71fdff8a7486f5f98c91730/msb-client-websocket-python-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02a18a2d53fd849cfd894d029d97cb48a4057349b0a845f0034b09f2caa65411",
          "md5": "01d903cb8e4306ccc5afc5cd2eb7e445",
          "sha256": "0187828afc89b2b801199b876a9c37c2b00b2a7362345776eda01f72ca69e019"
        },
        "downloads": -1,
        "filename": "msb_client_websocket_python-1.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01d903cb8e4306ccc5afc5cd2eb7e445",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 25444,
        "upload_time": "2019-07-24T14:44:57",
        "upload_time_iso_8601": "2019-07-24T14:44:57.251635Z",
        "url": "https://files.pythonhosted.org/packages/02/a1/8a2d53fd849cfd894d029d97cb48a4057349b0a845f0034b09f2caa65411/msb_client_websocket_python-1.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7fa321eb4d43257fbce2b56c156113e9eddf2e5d0760bd3646b15f020ee8068",
          "md5": "b64850541ea0a5cbecc0847e7635c558",
          "sha256": "08bf36c627e6a100932f1955ae03afa111ff28bf6986ee2f42518c2f1fd9dfb1"
        },
        "downloads": -1,
        "filename": "msb-client-websocket-python-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b64850541ea0a5cbecc0847e7635c558",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33812,
        "upload_time": "2019-07-24T14:44:58",
        "upload_time_iso_8601": "2019-07-24T14:44:58.852263Z",
        "url": "https://files.pythonhosted.org/packages/d7/fa/321eb4d43257fbce2b56c156113e9eddf2e5d0760bd3646b15f020ee8068/msb-client-websocket-python-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c4ede3b6d37ab3e5c51d7dbacc4a54d5fba4d8835a5b11dea4ee0bf73c222b0",
          "md5": "3b6a1a8f0613f4ae54b04a3207764e4d",
          "sha256": "26002c648b520fda9f1315d37f1b15684b371041daee69f06a4358413e1a659e"
        },
        "downloads": -1,
        "filename": "msb_client_websocket_python-1.0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b6a1a8f0613f4ae54b04a3207764e4d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 25482,
        "upload_time": "2019-07-25T07:59:17",
        "upload_time_iso_8601": "2019-07-25T07:59:17.293459Z",
        "url": "https://files.pythonhosted.org/packages/3c/4e/de3b6d37ab3e5c51d7dbacc4a54d5fba4d8835a5b11dea4ee0bf73c222b0/msb_client_websocket_python-1.0.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2125e74af604868d3ba25e8afe48e2e5907412d1fc4d42083d27e999e9c5050c",
          "md5": "899926720fa4a505df0f7aeaa9d72a36",
          "sha256": "89964a56a8587c57a6c9c2ed7275762150101ecc644024135ac9f2a152ce136a"
        },
        "downloads": -1,
        "filename": "msb-client-websocket-python-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "899926720fa4a505df0f7aeaa9d72a36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33902,
        "upload_time": "2019-07-25T07:59:19",
        "upload_time_iso_8601": "2019-07-25T07:59:19.306257Z",
        "url": "https://files.pythonhosted.org/packages/21/25/e74af604868d3ba25e8afe48e2e5907412d1fc4d42083d27e999e9c5050c/msb-client-websocket-python-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "948660e278de7713e7b415fa4ba08ba5c0197feec473c38a2cdc0d06d3971716",
          "md5": "802b178d3ae67c1ba11bc8830f3feeba",
          "sha256": "d7d78398f74d26b4b321dde0c9417e636db6a63312230b86be6e87206752533d"
        },
        "downloads": -1,
        "filename": "msb_client_websocket_python-1.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "802b178d3ae67c1ba11bc8830f3feeba",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 25576,
        "upload_time": "2019-08-02T13:08:39",
        "upload_time_iso_8601": "2019-08-02T13:08:39.934314Z",
        "url": "https://files.pythonhosted.org/packages/94/86/60e278de7713e7b415fa4ba08ba5c0197feec473c38a2cdc0d06d3971716/msb_client_websocket_python-1.0.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a3c2ecc4ca930a57b359df245fc1aff59e5d6f806541f153cfb78294193d10c",
          "md5": "a633e641912bc1892d6c8b51256a5b98",
          "sha256": "65c73eea8d3ecec442a7432a6f0f36513b485ac2c57282e8c7daeae60b412d3e"
        },
        "downloads": -1,
        "filename": "msb-client-websocket-python-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a633e641912bc1892d6c8b51256a5b98",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34030,
        "upload_time": "2019-08-02T13:08:41",
        "upload_time_iso_8601": "2019-08-02T13:08:41.582417Z",
        "url": "https://files.pythonhosted.org/packages/2a/3c/2ecc4ca930a57b359df245fc1aff59e5d6f806541f153cfb78294193d10c/msb-client-websocket-python-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5b429e9a4ff17b7a2b7bff926a80c7c5cba8f0252ab6a6d60d63e91a84bdbe5",
          "md5": "33dc3eec811fb960e61b769cae6a8afc",
          "sha256": "81b43619ee897ea91eef7ad9355fd5e928368aeb0277eaf74fd7d9f2dc5c0e13"
        },
        "downloads": -1,
        "filename": "msb_client_websocket_python-1.0.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "33dc3eec811fb960e61b769cae6a8afc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 25649,
        "upload_time": "2019-09-04T06:36:31",
        "upload_time_iso_8601": "2019-09-04T06:36:31.906445Z",
        "url": "https://files.pythonhosted.org/packages/c5/b4/29e9a4ff17b7a2b7bff926a80c7c5cba8f0252ab6a6d60d63e91a84bdbe5/msb_client_websocket_python-1.0.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49fc101207e88bb147d652d74b539d9543199d6502228616c83a066952170fd1",
          "md5": "b05504c728de73368e8e6ea1c268d66f",
          "sha256": "73c8d361dda588d8f4eddb48dbbffa5ccfe1f3c0c00ea43c97b61dd725e9d977"
        },
        "downloads": -1,
        "filename": "msb-client-websocket-python-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b05504c728de73368e8e6ea1c268d66f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34107,
        "upload_time": "2019-09-04T06:36:33",
        "upload_time_iso_8601": "2019-09-04T06:36:33.555602Z",
        "url": "https://files.pythonhosted.org/packages/49/fc/101207e88bb147d652d74b539d9543199d6502228616c83a066952170fd1/msb-client-websocket-python-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "020ce5f52b040c870746bd688ae6006f15c72e1a6c66a807b77b15ab2e07fb15",
          "md5": "437f937baeb36afef739b6f6bb83f42b",
          "sha256": "be575f50510e35cff73ad6c9f12dd0f0ed9b37013118b9d06d22c3fa9e726947"
        },
        "downloads": -1,
        "filename": "msb_client_websocket_python-1.0.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "437f937baeb36afef739b6f6bb83f42b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 25683,
        "upload_time": "2019-09-25T10:30:08",
        "upload_time_iso_8601": "2019-09-25T10:30:08.622840Z",
        "url": "https://files.pythonhosted.org/packages/02/0c/e5f52b040c870746bd688ae6006f15c72e1a6c66a807b77b15ab2e07fb15/msb_client_websocket_python-1.0.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f59a47d5620a40e42132323bcb1a9002c8c9a9cf88f2897af17f2dfb8fbdf59",
          "md5": "feace42abc7263e3cdc3ddfb4ffe8dd2",
          "sha256": "7888de2733098254a4b2a968d0d228c527a9088a7199fd448dcb0e9565aef1d8"
        },
        "downloads": -1,
        "filename": "msb-client-websocket-python-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "feace42abc7263e3cdc3ddfb4ffe8dd2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34160,
        "upload_time": "2019-09-25T10:30:10",
        "upload_time_iso_8601": "2019-09-25T10:30:10.521304Z",
        "url": "https://files.pythonhosted.org/packages/5f/59/a47d5620a40e42132323bcb1a9002c8c9a9cf88f2897af17f2dfb8fbdf59/msb-client-websocket-python-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c0b8efddea349ab4a6024e8618a1b01cf9312e56c60ccf74dfc967e73c07992",
          "md5": "2d22ad13b6c262d4e5fb9cdf6355d5bb",
          "sha256": "f4367658df49fa059426de05e813c2790d3aa78262549dbde7e823507cfbff77"
        },
        "downloads": -1,
        "filename": "msb_client_websocket_python-1.0.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d22ad13b6c262d4e5fb9cdf6355d5bb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 25814,
        "upload_time": "2020-05-14T14:27:27",
        "upload_time_iso_8601": "2020-05-14T14:27:27.627125Z",
        "url": "https://files.pythonhosted.org/packages/4c/0b/8efddea349ab4a6024e8618a1b01cf9312e56c60ccf74dfc967e73c07992/msb_client_websocket_python-1.0.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1374439d6cd049a9b853efd7ac2e90f027e11184d2fd4c7eab0958014b5f2890",
          "md5": "f82685fcbca2d0798ea977a073c02357",
          "sha256": "1d7906f22eb1a7c8cd2dee14103d7e95bd512ac81c4a7459a4bf0dd83f15ced5"
        },
        "downloads": -1,
        "filename": "msb-client-websocket-python-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "f82685fcbca2d0798ea977a073c02357",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34718,
        "upload_time": "2020-05-14T14:27:29",
        "upload_time_iso_8601": "2020-05-14T14:27:29.089119Z",
        "url": "https://files.pythonhosted.org/packages/13/74/439d6cd049a9b853efd7ac2e90f027e11184d2fd4c7eab0958014b5f2890/msb-client-websocket-python-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e1579b23bca1d8564792b56b5e043a5b83270277266bfbd96a32ddc93ac0fe1",
          "md5": "30cdaed3dc1c83e54301469c63fac076",
          "sha256": "957e42641119c893d1b0331e9f3892630e264da321ae4f1b5273468ad5bedd60"
        },
        "downloads": -1,
        "filename": "msb_client_websocket_python-1.0.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "30cdaed3dc1c83e54301469c63fac076",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 25891,
        "upload_time": "2020-11-24T14:37:44",
        "upload_time_iso_8601": "2020-11-24T14:37:44.267474Z",
        "url": "https://files.pythonhosted.org/packages/3e/15/79b23bca1d8564792b56b5e043a5b83270277266bfbd96a32ddc93ac0fe1/msb_client_websocket_python-1.0.9-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ad4257c3522b9475ab37d787a1536e7da9fa71e8cd849889e3e4bbb3b7e7c21",
          "md5": "18e5cacdd6f009fb6649d40b119257be",
          "sha256": "c43ae4eb8493ab046ba55186cf13ad240b85641463370678d804245331a1f838"
        },
        "downloads": -1,
        "filename": "msb-client-websocket-python-1.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "18e5cacdd6f009fb6649d40b119257be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34879,
        "upload_time": "2020-11-24T14:37:45",
        "upload_time_iso_8601": "2020-11-24T14:37:45.683893Z",
        "url": "https://files.pythonhosted.org/packages/6a/d4/257c3522b9475ab37d787a1536e7da9fa71e8cd849889e3e4bbb3b7e7c21/msb-client-websocket-python-1.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9298140a1c4ccc9b19d1bed25c8681fd190607daa42eb63d94d72d18ada69c53",
        "md5": "12d9585112da982ee34c16609024ddef",
        "sha256": "7202594dd14e0d9f4e5c988f9f42ff7f3399707c3fa6ffadcea94ed99c862f7b"
      },
      "downloads": -1,
      "filename": "msb_client_websocket_python-1.0.13-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "12d9585112da982ee34c16609024ddef",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 26101,
      "upload_time": "2022-03-11T14:26:27",
      "upload_time_iso_8601": "2022-03-11T14:26:27.683348Z",
      "url": "https://files.pythonhosted.org/packages/92/98/140a1c4ccc9b19d1bed25c8681fd190607daa42eb63d94d72d18ada69c53/msb_client_websocket_python-1.0.13-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d17c358e461d8e8289f4adff55d1c7e1c04d2ba977e6a4ae3f690bf2f3a4ad8a",
        "md5": "3328882c24fcc764efb2d218e5bad965",
        "sha256": "0d9e567a7d52bb2203f034e8922bbdfaecd867fe66162aaea93aa29b2fe53aac"
      },
      "downloads": -1,
      "filename": "msb-client-websocket-python-1.0.13.tar.gz",
      "has_sig": false,
      "md5_digest": "3328882c24fcc764efb2d218e5bad965",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 36699,
      "upload_time": "2022-03-11T14:26:29",
      "upload_time_iso_8601": "2022-03-11T14:26:29.050536Z",
      "url": "https://files.pythonhosted.org/packages/d1/7c/358e461d8e8289f4adff55d1c7e1c04d2ba977e6a4ae3f690bf2f3a4ad8a/msb-client-websocket-python-1.0.13.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}