{
  "info": {
    "author": "QualiLab",
    "author_email": "support@qualisystems.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "[![Python 3.7](https://img.shields.io/badge/python-3.7-blue.svg)](https://www.python.org/downloads/release/python/)\n[![Lint and Test](https://github.com/QualiSystemsLab/cloudshell-sandbox-reporter/actions/workflows/lint-test.yml/badge.svg)](https://github.com/QualiSystemsLab/cloudshell-sandbox-reporter/actions/workflows/lint-test.yml)\n[![PyPI version](https://badge.fury.io/py/cloudshell-sandbox-reporter.svg)](https://badge.fury.io/py/cloudshell-sandbox-reporter)\n\n# Cloudshell Sandbox Reporter\nThis project provides utility classes for formatting and sending html messages to the cloudshell sandbox console.\nThese methods help to semantically color the text and generate custom html elements (headers / anchors / etc.).\n\nThe SandboxReporter class is used to chunk together logging messages with the sandbox console print actions into single commands.\nThis reduces duplication in your script if you typically log and print the same messages. \nThere are granular flags for message instances that you only want to log and not print.\n\nThe SandboxReporter is also a \"logger adapter\" - which means it can be passed into functions in place of the original logger.\nYou just instantiate the reporter with your logger instance, and log messages will be delegated to the original logger.\n\n\n### Sample Output\n \n![Sandbox Console Output](https://user-images.githubusercontent.com/19604898/155003612-58cd0a6b-fe48-4937-84b6-c6b8208e6503.png)\n\n### Installation\n\n```\npip install cloudshell-sandbox-reporter\n```\n\n### General Usage Samples\n```python\nimport logging\nfrom cloudshell.helpers.sandbox_reporter.reporter import SandboxReporter, SandboxConsole\nfrom cloudshell.api.cloudshell_api import CloudShellAPISession\n\nLIVE_SANDBOX_ID = \"16df1ea8-27b3-491d-89b9-10d1076f99c5\"\nlogger = logging.Logger(\"test logger\")\napi = CloudShellAPISession(\"localhost\", \"admin\", \"admin\", \"Global\")\n\nreporter = SandboxReporter(api, LIVE_SANDBOX_ID, logger)\n\nreporter.warning_header(\"Add a yellow, italic header to get attention\")\n\nreporter.info(\"standard INFO level message to logs and console\")\nreporter.debug(\"DEBUG message to logs and purple text to console \")\nreporter.error(\"ERROR log and red text to console\")\nreporter.warning(\"WARNING log and yellow text to console\")\nreporter.success(\"INFO log and green text to console\")\n\n# generate a clickable anchor tag in console\nreporter.console.anchor_tag_print(url=\"https://www.google.com\", text=\"click to to go to google!\")\n\n# pass reporter into functions expecting logger\ndef some_func(logger: logging.Logger):\n    logger.info(\"running func\")\n    \nsome_func(reporter)\n\n# if you want to avoid noise in the console, just pass along internal logger\nsome_func(reporter.logger)\n\n# if you only care about console without logging, instantiate console independently\nconsole = SandboxConsole(api, LIVE_SANDBOX_ID)\nconsole.sb_print(\"write to sandbox console only\")\n\n```\n- NOTE: In orchestration scripts the SandboxReporter init dependencies are generally provided (api, sandbox id, logger)\n  - (examples in next section)\n\n### Orchestration Sample\nIn cloudshell Orchestration scripts, the sandbox object will provide the sandbox id, api session and logger. \n\n```python\nfrom cloudshell.workflow.orchestration.setup.default_setup_orchestrator import DefaultSetupWorkflow\nfrom cloudshell.workflow.orchestration.sandbox import Sandbox\nfrom cloudshell.helpers.sandbox_reporter.reporter import SandboxReporter\n\n\ndef custom_config_function(sandbox, components=None):\n    \"\"\"\n    Functions passed into orchestration flow MUST have (sandbox, components) signature\n    :param Sandbox sandbox:\n    :param components\n    :return:\n    \"\"\"\n    sb_id = sandbox.id\n    api = sandbox.automation_api\n    logger = sandbox.logger\n    \n    # instantiate reporter\n    reporter = SandboxReporter(api, sb_id, logger)\n    reporter.info(\"starting custom config function!!!\")\n    \n    # some more business logic .........\n\nsandbox = Sandbox()\n\nDefaultSetupWorkflow().register(sandbox, enable_configuration=False)\nsandbox.workflow.add_to_configuration(custom_config_function, None)\nsandbox.execute_setup()\n```\n\n### Shell Command Sample\nIn shell methods, the `ResourceCommandContext` object will help produce the api, sandbox id, and logger that are passed to SandboxReporter\n\n```python\nfrom cloudshell.shell.core.resource_driver_interface import ResourceDriverInterface\nfrom cloudshell.shell.core.driver_context import InitCommandContext, ResourceCommandContext\nfrom cloudshell.shell.core.session.cloudshell_session import CloudShellSessionContext\nfrom cloudshell.shell.core.session.logging_session import LoggingSessionContext\nfrom cloudshell.helpers.sandbox_reporter.reporter import SandboxReporter\nimport time\n\n\nclass ReporterTesterDriver (ResourceDriverInterface):\n\n    def __init__(self):\n        pass\n\n    def initialize(self, context):\n        pass\n\n    def cleanup(self):\n        pass\n    \n    def _some_business_logic(self):\n        time.sleep(10)\n        \n    def cool_service_command(self, context):\n        \"\"\"\n        :param ResourceCommandContext context:\n        \"\"\"\n        api = CloudShellSessionContext(context).get_api()\n        sandbox_id = context.reservation.reservation_id\n        with LoggingSessionContext(context) as logger:\n            reporter = SandboxReporter(api, sandbox_id, logger)\n            reporter.info(\"Starting Service Command, this may take a while...\")\n            \n            try:\n                # simulate long running  action\n                self._some_business_logic()\n            except Exception as e:\n                # logs error and sends red text message to sandbox\n                err_msg = f\"Error caught during command. {type(e).__name__}: {str(e)}\"\n                reporter.error(err_msg)\n                raise Exception(err_msg)\n\n        return \"Service Flow SUCCESSFUL\"\n```\n\n### License\nFree Software: MIT License\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/QualiSystemsLab/cloudshell-sandbox-reporter",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cloudshell-sandbox-reporter",
    "package_url": "https://pypi.org/project/cloudshell-sandbox-reporter/",
    "platform": null,
    "project_url": "https://pypi.org/project/cloudshell-sandbox-reporter/",
    "project_urls": {
      "Homepage": "https://github.com/QualiSystemsLab/cloudshell-sandbox-reporter"
    },
    "release_url": "https://pypi.org/project/cloudshell-sandbox-reporter/0.1.1/",
    "requires_dist": [
      "cloudshell-automation-api"
    ],
    "requires_python": ">=3.7",
    "summary": "Helper modules and classes for writing to Cloudshell sandbox console",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15023389,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3bd3749055a3c17ee7d26bb46008f52bd817b2f055d94041a2aeae70cc0434b5",
          "md5": "0ab9f91f926cea10b6f8653f29d549e1",
          "sha256": "22e42663d272ca825e4f62fac00a6a013300fefc37fc4e02e28f4f981517d262"
        },
        "downloads": -1,
        "filename": "cloudshell_sandbox_reporter-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ab9f91f926cea10b6f8653f29d549e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7781,
        "upload_time": "2022-02-01T22:57:44",
        "upload_time_iso_8601": "2022-02-01T22:57:44.161499Z",
        "url": "https://files.pythonhosted.org/packages/3b/d3/749055a3c17ee7d26bb46008f52bd817b2f055d94041a2aeae70cc0434b5/cloudshell_sandbox_reporter-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db94af0710b11c17d024127453d3ee142317b349d4248dbce75ea529f1030e3a",
          "md5": "0523e8d5c6aabb9d353de015b94e29a9",
          "sha256": "31699cafaa73761171436a0144cfe0d92c9fa634e0bbef09521095ed73043dde"
        },
        "downloads": -1,
        "filename": "cloudshell-sandbox-reporter-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0523e8d5c6aabb9d353de015b94e29a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5945,
        "upload_time": "2022-02-01T22:57:45",
        "upload_time_iso_8601": "2022-02-01T22:57:45.487537Z",
        "url": "https://files.pythonhosted.org/packages/db/94/af0710b11c17d024127453d3ee142317b349d4248dbce75ea529f1030e3a/cloudshell-sandbox-reporter-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21829d5ac8327b23b90a70f23c845fa548cb4bdb1aa11a530117bb1479a60a45",
          "md5": "3b788f581d6284f49497e708aa1a1894",
          "sha256": "b983cdc3303da569a84165299d8f238b67b77f8bb2a6492069da9c5ce9d1b258"
        },
        "downloads": -1,
        "filename": "cloudshell_sandbox_reporter-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b788f581d6284f49497e708aa1a1894",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8112,
        "upload_time": "2022-09-07T20:28:04",
        "upload_time_iso_8601": "2022-09-07T20:28:04.153086Z",
        "url": "https://files.pythonhosted.org/packages/21/82/9d5ac8327b23b90a70f23c845fa548cb4bdb1aa11a530117bb1479a60a45/cloudshell_sandbox_reporter-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef5ce63ccdd262e0c7a5c999d8679b32bfc9e0e7ae4e85ac03b62130b414d696",
          "md5": "c9f0f6c3332a219442b915a21afee236",
          "sha256": "99045bbf5693018fbfd5a1a9ba466695bb3a61b8089b1724c6177409fae22564"
        },
        "downloads": -1,
        "filename": "cloudshell-sandbox-reporter-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c9f0f6c3332a219442b915a21afee236",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6256,
        "upload_time": "2022-09-07T20:28:05",
        "upload_time_iso_8601": "2022-09-07T20:28:05.381599Z",
        "url": "https://files.pythonhosted.org/packages/ef/5c/e63ccdd262e0c7a5c999d8679b32bfc9e0e7ae4e85ac03b62130b414d696/cloudshell-sandbox-reporter-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "21829d5ac8327b23b90a70f23c845fa548cb4bdb1aa11a530117bb1479a60a45",
        "md5": "3b788f581d6284f49497e708aa1a1894",
        "sha256": "b983cdc3303da569a84165299d8f238b67b77f8bb2a6492069da9c5ce9d1b258"
      },
      "downloads": -1,
      "filename": "cloudshell_sandbox_reporter-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3b788f581d6284f49497e708aa1a1894",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 8112,
      "upload_time": "2022-09-07T20:28:04",
      "upload_time_iso_8601": "2022-09-07T20:28:04.153086Z",
      "url": "https://files.pythonhosted.org/packages/21/82/9d5ac8327b23b90a70f23c845fa548cb4bdb1aa11a530117bb1479a60a45/cloudshell_sandbox_reporter-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef5ce63ccdd262e0c7a5c999d8679b32bfc9e0e7ae4e85ac03b62130b414d696",
        "md5": "c9f0f6c3332a219442b915a21afee236",
        "sha256": "99045bbf5693018fbfd5a1a9ba466695bb3a61b8089b1724c6177409fae22564"
      },
      "downloads": -1,
      "filename": "cloudshell-sandbox-reporter-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c9f0f6c3332a219442b915a21afee236",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 6256,
      "upload_time": "2022-09-07T20:28:05",
      "upload_time_iso_8601": "2022-09-07T20:28:05.381599Z",
      "url": "https://files.pythonhosted.org/packages/ef/5c/e63ccdd262e0c7a5c999d8679b32bfc9e0e7ae4e85ac03b62130b414d696/cloudshell-sandbox-reporter-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}