{
  "info": {
    "author": "bfzs",
    "author_email": "ydf0509@sohu.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "## 1. pip install pysnooper_click_able\r\n\r\n神级别黑科技装饰器。自动显示代码运行轨迹并在pycharm控制台点击可以紧缺跳转到文件的代码行。\r\n\r\n```\r\n基于pysnooper的改版\r\n举要功能是调试debu代码用的，基础用法 百度 pysnooper 就可以。\r\n\r\n对比pysnooper\r\n1.增加代码运行轨迹可点击精确跳转\r\n2.根据各种运行状态变彩色\r\n3.增加了代码执行总行数的统计，让程序员心里有谱到底遗憾代码真正背后执行了多少行python代码\r\n\r\n```\r\n \r\n \r\n ```python\r\n# -*- coding: utf-8 -*-\r\n# @Author  : ydf\r\n# @Time    : 2019/12/4 0004 17:01\r\n\"\"\"\r\n举个例子，统计requests.get运行轨迹，requests和urllib发http请求各执行了多少行代码。\r\n\r\nrequests请求http百度，会花费18635行代码\r\nurllib 请求百度http ，会花费11902行代码\r\n\r\n普通3Ghz以下的电脑，单进程运行python，选一个或者自己做一个流量消耗非常少的http接口进行请求测试，\r\n平均每秒不可能运行超过300次请求。\r\n所以大规模发requests不是简单的io密集型，也是消耗性能的，\r\n包括最牛的英特尔5Ghz的频率，如果每秒能运行1000次requests请求，我愿意把电脑cpu吃了。\r\n\"\"\"\r\n\r\nimport requests\r\nimport urllib3\r\nfrom urllib import request\r\nfrom pysnooper_click_able import snoop\r\n#\r\n# ss = requests.session()\r\n@snoop(depth=100,dont_effect_on_linux=False)\r\ndef f():\r\n    # requests.get('http://www.baidu.com')\r\n    # requests.get('http://www.sina.com')\r\n    response = request.urlopen('http://www.baidu.com')\r\n    # ss.get('http://www.baidu.com')\r\n\r\n\r\nf()\r\n```\r\n\r\n\r\n## 追踪代码的运行的分支\r\n\r\n```python\r\nfrom pysnooper_click_able import snoop\r\n\r\n\r\ndef f1(x):\r\n    if x == 1:\r\n        a = 2\r\n    else:\r\n        a = 3\r\n\r\n\r\ndef f2(x):\r\n    if x == 7:\r\n        b = 8\r\n        for i in range(1000):\r\n            b += i\r\n    else:\r\n        b = 9\r\n\r\n\r\n@snoop(depth=9)\r\ndef f3(x, test=True):\r\n    if test:\r\n        f1(x)\r\n    else:\r\n        f2(x)\r\n\r\n\r\nf3(5, False)\r\n\r\n\r\n```\r\n\r\n如果传f(5,False) ,则会显示执行了f2函数，并运行了b=9 的else分支，并显示执行的时间代码行数是8。\r\n\r\n![Image text](https://i.niupic.com/images/2020/06/19/8hmF.png)\r\n\r\n\r\n如果传f(7,False) ,则会显示执行了f2函数，并运行了b=8 的if分支，并显示运行了2009行，\r\n\r\n因为  for i in range(1000): 和 b += i 这两行各执行了1000次。\r\n\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "pysnooper",
    "license": "BSD License",
    "maintainer": "ydf",
    "maintainer_email": "ydf0509@sohu.com",
    "name": "pysnooper-click-able",
    "package_url": "https://pypi.org/project/pysnooper-click-able/",
    "platform": "all",
    "project_url": "https://pypi.org/project/pysnooper-click-able/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pysnooper-click-able/1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "pysnooper debug调试，测色 ，可点击跳转的，统计代码动态真实运行 行数",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12285399,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11e2906c726fbbbf192f57d45a95f410046ac839c55a745b80a2d6847c8db7e4",
          "md5": "2ef1863167f7eb5013ca7e1b54cdd5e2",
          "sha256": "752aa891f0721f389626a237936f0bbf03edfe4d7ddc97aeb67431718f4d0de4"
        },
        "downloads": -1,
        "filename": "pysnooper_click_able-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2ef1863167f7eb5013ca7e1b54cdd5e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12246,
        "upload_time": "2020-05-12T08:17:20",
        "upload_time_iso_8601": "2020-05-12T08:17:20.691410Z",
        "url": "https://files.pythonhosted.org/packages/11/e2/906c726fbbbf192f57d45a95f410046ac839c55a745b80a2d6847c8db7e4/pysnooper_click_able-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f19d5af55a9b6609c985658634c3b22391a5500a2a9539dfe30ad7cf10a8db6c",
          "md5": "fd8f4ecf5f653fb54ad2d8f74edc3f17",
          "sha256": "26fd888fe68cdef8d79b00a81de4a9b05453e062adf3917a03d9e6b230257f85"
        },
        "downloads": -1,
        "filename": "pysnooper_click_able-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fd8f4ecf5f653fb54ad2d8f74edc3f17",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19171,
        "upload_time": "2021-12-13T02:25:29",
        "upload_time_iso_8601": "2021-12-13T02:25:29.482558Z",
        "url": "https://files.pythonhosted.org/packages/f1/9d/5af55a9b6609c985658634c3b22391a5500a2a9539dfe30ad7cf10a8db6c/pysnooper_click_able-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f19d5af55a9b6609c985658634c3b22391a5500a2a9539dfe30ad7cf10a8db6c",
        "md5": "fd8f4ecf5f653fb54ad2d8f74edc3f17",
        "sha256": "26fd888fe68cdef8d79b00a81de4a9b05453e062adf3917a03d9e6b230257f85"
      },
      "downloads": -1,
      "filename": "pysnooper_click_able-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fd8f4ecf5f653fb54ad2d8f74edc3f17",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19171,
      "upload_time": "2021-12-13T02:25:29",
      "upload_time_iso_8601": "2021-12-13T02:25:29.482558Z",
      "url": "https://files.pythonhosted.org/packages/f1/9d/5af55a9b6609c985658634c3b22391a5500a2a9539dfe30ad7cf10a8db6c/pysnooper_click_able-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}