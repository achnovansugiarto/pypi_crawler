{
  "info": {
    "author": "MattyTokenomics",
    "author_email": "mattytokenomics@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Intro\r\n\r\nLibrary to generate Brownian motion random walks for multiple series that exhibit mean reversion, correlation, skew, kurtosis, and/or custom distributions that do not follow typical normal distributions.\r\n\r\nThis can be used for testing trading strategies, risk analysis, tokenomics design stress testing, Monte Carlo simulations, and inputs into existing testing, modeling, and simulation frameworks such as cadCAD and radCAD - see the Examples folder for details.\r\n\r\n# Installation and Usage\r\n\r\n`pip install brownian_motion_generator`\r\n\r\n`from brownian_motion_generator import brownian_motion_generator as bmg`\r\n\r\n# Common Use Cases\r\n\r\n- Stress testing collateral based systems. Generating random walks of asset prices can help to identify potential exploits or risks of undercollateralization.\r\n- Optimizing rates of emission/inflation. Generating random walks of TVL/users/revenue growth can help to identify how emissions may need to be tweaked.\r\n- Identifying critical thresholds. Generating random walks of user activity, TVL, and/or protocol revenues can help identify any crucial levels to hit (or avoid) where sustainable growth kicks in (or death spiral feedback loops begin).\r\n- Understanding risks and levels of exposure to general market conditions or the performance of a given asset outside your control. Generating random walks of S&P 500 or BTC prices can help identify the degree and critical levels in macro risks.\r\n- Model positive feedback loops and/or death spirals in user behavior. For example generating random walks of NFT marketplace trading activity helps protocols identify and minimize the risks of wash trading.\r\n- Assumption testing. Generating random walks of critical model inputs can stress test any general system design to identify which assumptions must hold true for the system to be sustainable, and/or identity any assumptions which are unlikely to hold true in practice based on realistic random walks.\r\n\r\n# How to Use\r\n\r\nSee the Examples folder for tutorials in Jupyter notebook and equivalent html file format. Tutorials cover quick examples of generating multiple simulations of multiple correlated series with mean reverting, correlated, and/or non-normal distributions of returns, and how to integrate the generated random walks into existing simulation frameworks such as radCAD.\r\n\r\n# Feedback, Questions, Improvements?\r\n\r\nPlease open an issue on GitHub or [get in touch](https://linktr.ee/tokenomics)\r\n\r\n# Credits\r\n\r\nOriginal credit to these two resources which were the building blocks:\r\n- https://towardsdatascience.com/stochastic-processes-simulation-brownian-motion-the-basics-c1d71585d9f9\r\n- https://gist.github.com/raddy/4084ade3d3a82911d43df9375f9697f4\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mattyTokenomics/brownian_motion_generator",
    "keywords": "",
    "license": "GNU General Public License v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "brownian-motion-generator",
    "package_url": "https://pypi.org/project/brownian-motion-generator/",
    "platform": null,
    "project_url": "https://pypi.org/project/brownian-motion-generator/",
    "project_urls": {
      "Homepage": "https://github.com/mattyTokenomics/brownian_motion_generator"
    },
    "release_url": "https://pypi.org/project/brownian-motion-generator/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Generating brownian motion random walks with custom skew, kurtosis, mean reversion, correlation, and non-normality.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16888345,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99389f5410bf78c74287328c5fcfb145d4ca6defa79f7c033e58d8fbfd53bd8f",
          "md5": "7c2c7619c3752b367a2ca23d1be3bb27",
          "sha256": "2136774970429a27b0b6563d6cfea128d458cd37cf46d35bb54198a7583fcdf8"
        },
        "downloads": -1,
        "filename": "brownian_motion_generator-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7c2c7619c3752b367a2ca23d1be3bb27",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18827,
        "upload_time": "2023-02-16T13:22:46",
        "upload_time_iso_8601": "2023-02-16T13:22:46.686676Z",
        "url": "https://files.pythonhosted.org/packages/99/38/9f5410bf78c74287328c5fcfb145d4ca6defa79f7c033e58d8fbfd53bd8f/brownian_motion_generator-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "99389f5410bf78c74287328c5fcfb145d4ca6defa79f7c033e58d8fbfd53bd8f",
        "md5": "7c2c7619c3752b367a2ca23d1be3bb27",
        "sha256": "2136774970429a27b0b6563d6cfea128d458cd37cf46d35bb54198a7583fcdf8"
      },
      "downloads": -1,
      "filename": "brownian_motion_generator-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7c2c7619c3752b367a2ca23d1be3bb27",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18827,
      "upload_time": "2023-02-16T13:22:46",
      "upload_time_iso_8601": "2023-02-16T13:22:46.686676Z",
      "url": "https://files.pythonhosted.org/packages/99/38/9f5410bf78c74287328c5fcfb145d4ca6defa79f7c033e58d8fbfd53bd8f/brownian_motion_generator-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}