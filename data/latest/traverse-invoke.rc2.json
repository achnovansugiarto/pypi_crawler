{
  "info": {
    "author": "Dan Lykov",
    "author_email": "lkvdan@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "===============\nTraverse invoke\n===============\n\n\n.. image:: https://img.shields.io/pypi/v/traverse_invoke.svg\n        :target: https://pypi.python.org/pypi/traverse_invoke\n\n.. image:: https://img.shields.io/travis/DaniloZZZ/traverse_invoke.svg\n        :target: https://travis-ci.org/DaniloZZZ/traverse_invoke\n\n.. image:: https://readthedocs.org/projects/traverse-invoke/badge/?version=latest\n        :target: https://traverse-invoke.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n\nA nested method [computation model] for nested data\n\nThis shit is a blessing. I don't know anything like this except maybe lambda. \nI'll think about Turing-completeness and meta complexity of this.\n\nPlease do yourself a favor and read the source. \n\nDocs not yet available, since the whole computation model needs to be formed, \nwhich requires some experience of using current version.\n\n\n* Documentation: https://traverse-invoke.readthedocs.io   (uder development. maybe).\n\n\nFeatures\n--------\n\n* Invoke methods by their path in module tree.\n* Pass arguments as nested closures for methods.\n* Modify invocation path in runtime (the most exiting thing).\n\n\nBasic Usage\n===========\n\n**Invoke method**\n\n.. code-block:: python\n\n   import sys, traverse_invoke\n\n   method = 'sys.version'\n   names = {\n   'sys':{'version':sys.version}}\n   }\n   args = { 'version':'foobar'}\n\n   traverse_invoke.entry_traverse(args, method, names)\n\nThis will invoke ``sys.version(**{version:foobar})``\n\n**Traverse**\n\nsee test\n\n\n=======\nHistory\n=======\n\n0.1.0 (2020-01-14)\n------------------\n\n* First release on PyPI.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DaniloZZZ/traverse_invoke",
    "keywords": "traverse_invoke",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "traverse-invoke",
    "package_url": "https://pypi.org/project/traverse-invoke/",
    "platform": "",
    "project_url": "https://pypi.org/project/traverse-invoke/",
    "project_urls": {
      "Homepage": "https://github.com/DaniloZZZ/traverse_invoke"
    },
    "release_url": "https://pypi.org/project/traverse-invoke/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "A nested method computation model for nested data",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6464141,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a38a8b75ae7f0f1c4e1cafe5408f27b30cc25a64e0fac00c114d622e5dcc60c",
          "md5": "5eb1257d45cf3b3bda6c4153a1840724",
          "sha256": "16e17c9c1f591b38c58387663de4c66131cafc3fd8c0b5528accc19f9bed451e"
        },
        "downloads": -1,
        "filename": "traverse_invoke-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5eb1257d45cf3b3bda6c4153a1840724",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 9770,
        "upload_time": "2020-01-15T05:44:37",
        "upload_time_iso_8601": "2020-01-15T05:44:37.960767Z",
        "url": "https://files.pythonhosted.org/packages/1a/38/a8b75ae7f0f1c4e1cafe5408f27b30cc25a64e0fac00c114d622e5dcc60c/traverse_invoke-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae96471f89cf4fab9fc18ee10a0e045e020aadb788277f7f7faec405cb331d92",
          "md5": "a37e381e0e1304ab9a374095a4af9b39",
          "sha256": "4aafda60b1aabdec47b0313f271bc8713ca16ca2ddeec9c85dcdc0a1626773ae"
        },
        "downloads": -1,
        "filename": "traverse_invoke-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a37e381e0e1304ab9a374095a4af9b39",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 12080,
        "upload_time": "2020-01-16T06:35:36",
        "upload_time_iso_8601": "2020-01-16T06:35:36.885388Z",
        "url": "https://files.pythonhosted.org/packages/ae/96/471f89cf4fab9fc18ee10a0e045e020aadb788277f7f7faec405cb331d92/traverse_invoke-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ae96471f89cf4fab9fc18ee10a0e045e020aadb788277f7f7faec405cb331d92",
        "md5": "a37e381e0e1304ab9a374095a4af9b39",
        "sha256": "4aafda60b1aabdec47b0313f271bc8713ca16ca2ddeec9c85dcdc0a1626773ae"
      },
      "downloads": -1,
      "filename": "traverse_invoke-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a37e381e0e1304ab9a374095a4af9b39",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 12080,
      "upload_time": "2020-01-16T06:35:36",
      "upload_time_iso_8601": "2020-01-16T06:35:36.885388Z",
      "url": "https://files.pythonhosted.org/packages/ae/96/471f89cf4fab9fc18ee10a0e045e020aadb788277f7f7faec405cb331d92/traverse_invoke-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}