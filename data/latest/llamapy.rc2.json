{
  "info": {
    "author": "Alex Shannon",
    "author_email": "alex.shannon@airbnb.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## Llamapy\nThis is a simple library designed to make interfacing between Airpy and Google Sheets easier.<br><br>\n#### Setup & dependencies:\nTo interface with Google Sheets, you must have a registered API key. The best walkthrough of how to get one with your Airbnb account lives [here](https://airbnb.quip.com/VzPyADPpFCUK/From-Airflow-DAG-to-Google-sheets) (you only need to follow through the 'Create Google APIs account' section and can ignore the rest). When you get your credentials, you will need to put them in a filepath called **credentials/credentials.json** from your base folder.<br>\n**[gspread](https://gspread.readthedocs.io/en/latest/index.html)** is the only non-standard dependancy required for this library to function. Installation instructions can be found in the link. Other dependancies are **datetime**, **numpy**, and **pandas**. Additionally, **[Airpy](https://git.musta.ch/airbnb/airpy)** is strongly recommended for querying purposes. <br><br>\n#### Using the package:\n<em>Spreadsheet(name, email)</em> creates a spreadsheet object and shares it with specified Airbnb email accounts. If the spreadsheet you wish to work on already exists, you can go to the spreadsheet and share it with the **client_email** in your **credentials.json** file - you are then able to reference it by name. If the spreadsheet does not exist, you can put in any name and the emails of those you'd like to share the file with (including your own!), and the spreadsheet will be created. <br>\nExample:\n\n    import llamapy as lp\n    \n    sh = lp.Spreadsheet('Test', 'alex.shannon@airbnb.com')       # creates a spreadsheet and shares it with your email\n    sh.show_worksheets()                                         # prints a list of associated worksheets in the spreadsheet\n    sh.share_with('brian.chesky123@airbnb.com')                  # shares the spreadsheet with additional parties\n    \n<em>Worksheet(Spreadsheet, title, df, blank_sheet=False, row_offset=3, col_offset=1, title_text='', title_color='rausch', header_text_color='white', header_background_color='kazan', border_color='hof', text_color='hof', font_style='Proxima Nova')</em> creates a worksheet associated with a given spreadsheet. It pushes a pandas dataframe to this worksheet, and performs general formatting to the sheet that can be specified when calling the function, all of which should be fairly self-explanatory. Special Airbnb colors that can be referenced are mapped to the original (and far superior) brand colors - rausch, kazan, hackberry, beach, hof, white.<br>\nExample:\n\n    import airpy as ap\n    \n    # create 2 arbitrary dataframes, one from a query, and one with a basic python operation applied\n    df_1 = ap.presto.query(\"SELECT * FROM metrics.experiences_main__foundation WHERE ds = 2020-08-01 LIMIT 50\")\n    df_2 = df1.describe()\n    \n    ws_1 = lp.Worksheet(sh, 'exp_list', df_1, title_text='Sample of Experiences', font_style='Poppins')\n    ws_2 = lp.Worksheet(sh, 'Summary of Experiences', df_2, eader_background_color='hof', header_text_color='beach')\n    \n<em>get_lp(days_ago=1)</em> returns a string formatted as 'YYYY-MM-DD' for the specified number of days ago; this is meant to be a short hack to replace magic functions in Presto. Note that sometimes tables are 2+ days behind, and this function may need to be adjusted. It is encouraged to check the outputs of the query aren't missing any data before pushing them. <br><br>\n\n<em>convert_lps(presto_query)</em> also designed to make transitioning from Presto easier, this replaces any magic functions in a query with '{lp}', allowing you to copy and paste presto queries in their original form without worrying about replacing any text (making it easier to edit seemlessly between python & Superset). <br>\nExample:\n    \n    query = '''\n        SELECT *\n        \n        FROM core_experiences_dashboards.dim_experience_success\n        \n        WHERE ds = '{{ presto.latest_partition('core_experiences_dashboards.dim_experience_success') }}'\n    '''\n    \n    latest_partition = get_lp(1)\n    query = convert_lps(query)\n    df = ap.presto.query(query.format(lp=latest_partition))\n    df.head()\n    \nThis library is very much a work in progress. If you have any suggestions or find any bugs, please email <em>alex.shannon@airbnb.com</em>. Any feedback is much appreciated!",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://git.musta.ch/alex-shannon/llamapy/llamapy-0.1.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://git.musta.ch/alex-shannon/llamapy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "llamapy",
    "package_url": "https://pypi.org/project/llamapy/",
    "platform": "",
    "project_url": "https://pypi.org/project/llamapy/",
    "project_urls": {
      "Download": "https://git.musta.ch/alex-shannon/llamapy/llamapy-0.1.0.tar.gz",
      "Homepage": "https://git.musta.ch/alex-shannon/llamapy"
    },
    "release_url": "https://pypi.org/project/llamapy/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A package to make interfacing between Airpy and Google Sheets easier",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7928478,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8f2091a5d9b96e5efbf8434365ebdd965012f18764dff945c020d5d9d003f65",
          "md5": "0cc428fedc6f3d728ba7239d31aa9cbe",
          "sha256": "c425739ffff2754d965cd3723d71ddf719781ccd4c9f4eb6de1a3bc313770ecd"
        },
        "downloads": -1,
        "filename": "llamapy-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0cc428fedc6f3d728ba7239d31aa9cbe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7126,
        "upload_time": "2020-08-10T19:46:03",
        "upload_time_iso_8601": "2020-08-10T19:46:03.920353Z",
        "url": "https://files.pythonhosted.org/packages/d8/f2/091a5d9b96e5efbf8434365ebdd965012f18764dff945c020d5d9d003f65/llamapy-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22a24884a92c26ecb051086c8c769933c10efd41178113432e8303fcf918d78d",
          "md5": "f313fcf2cf7e4ea5f713f8df0bff11fa",
          "sha256": "7f31d5cc1d6aaf5d7a0c3c486f540c4a691121c94ab09fcca516f5d68b299e07"
        },
        "downloads": -1,
        "filename": "llamapy-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f313fcf2cf7e4ea5f713f8df0bff11fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5916,
        "upload_time": "2020-08-10T19:46:04",
        "upload_time_iso_8601": "2020-08-10T19:46:04.784171Z",
        "url": "https://files.pythonhosted.org/packages/22/a2/4884a92c26ecb051086c8c769933c10efd41178113432e8303fcf918d78d/llamapy-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f5c4a63d39aea24a9f25d05bf53cb7166d4e0593fe3b65b836d89a4c3336714",
          "md5": "b7b8e0a7ae0b29d2b6daf27c2e6bae5b",
          "sha256": "aad8b81b9bdfeaa2ecbb176d5d4d429ce518eaf6b3ff54b0ee93c1b8e2b8131b"
        },
        "downloads": -1,
        "filename": "llamapy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b7b8e0a7ae0b29d2b6daf27c2e6bae5b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5925,
        "upload_time": "2020-08-10T20:16:02",
        "upload_time_iso_8601": "2020-08-10T20:16:02.759311Z",
        "url": "https://files.pythonhosted.org/packages/7f/5c/4a63d39aea24a9f25d05bf53cb7166d4e0593fe3b65b836d89a4c3336714/llamapy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7f5c4a63d39aea24a9f25d05bf53cb7166d4e0593fe3b65b836d89a4c3336714",
        "md5": "b7b8e0a7ae0b29d2b6daf27c2e6bae5b",
        "sha256": "aad8b81b9bdfeaa2ecbb176d5d4d429ce518eaf6b3ff54b0ee93c1b8e2b8131b"
      },
      "downloads": -1,
      "filename": "llamapy-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b7b8e0a7ae0b29d2b6daf27c2e6bae5b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5925,
      "upload_time": "2020-08-10T20:16:02",
      "upload_time_iso_8601": "2020-08-10T20:16:02.759311Z",
      "url": "https://files.pythonhosted.org/packages/7f/5c/4a63d39aea24a9f25d05bf53cb7166d4e0593fe3b65b836d89a4c3336714/llamapy-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}