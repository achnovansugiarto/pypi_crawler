{
  "info": {
    "author": "Gustavo Ourique",
    "author_email": "ourique.gustavo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PyWitch\n![pywitch_logo](logo/pywitch_logo.png)\n\n![Python](https://img.shields.io/badge/python-3670A0?style=for-the-badge&logo=python&logoColor=ffdd54)\n\n\nPyWitch is a library that integrate Twitch with Python using requests and\nwebsockets.\n\nThe functionalities included are: \n\n* Token Validation;\n\n* StreamInfo (real time stream information);\n\n* TMI (twitch Messaging Interface);\n\n* Redemptions (chat redemptions and rewards);\n\n* Heat (heat extension).\n\n## Requirements ##\n\nTested in Python 3.7\n\nLibraries:\n```\nrequests>=2.26.0\nwebsocket-client>=1.2.1\n```\n\n## Token Validation ##\n\nTo validate your token, you can use the following function:\n\n```\nfrom pywitch import validate_token\n\ntoken = 'YOUR_TOKEN'\nvalidation, helix_headers = validate_token(token)\n```\n\nWhere `validation` is a dictionary with token validation information and\n`helix_headers` contains the headers necessary for requests into Twitch API.\n\n## PyWitchStreamInfo ##\n\nPyWitchStreamInfo is a class that request stream information from Twitch API\nand everytime the response changes, a predefined function is called (callback).\n\nUse:\n```\nfrom pywitch import PyWitchStreamInfo, run_forever\n\ndef callback(data):\n    print(data)\n\ntoken = 'YOUR_TOKEN'\nchannel = 'TARGET_CHANNEL'\nusers = {} # Shared user list minimzes the number of requests\n\nstreaminfo = PyWitchStreamInfo(\n    channel = channel,\n    token = token,\n    callback = callback, # Optional\n    users = users,       # Optional, but strongly recomended\n    interval = 1,        # Optional\n    verbose = True,      # Optional\n)\nstreaminfo.start()\nrun_forever()\n```\n\nIt automatically validate the provided token. \n\nThe `data` parameter in the callback function is a dictionary with the\nfollowing keys:\n```\n['id', 'user_id', 'user_login', 'user_name', 'game_id', 'game_name',\n 'type', 'title', 'viewer_count', 'started_at', 'language', 'thumbnail_url',\n 'tag_ids', 'is_mature', 'event_time']\n```\n\n## PyWitchTMI ##\n\nPyWitchTMI is a class that manages the connection with TMI using websockets.\nWith this class, messages sent to Twitch chat calls a predefined funcion. It\ncan also send messages to chat using the account associated account.\n\nUse:\n\n```\nfrom pywitch import PyWitchTMI, run_forever\n\ndef callback(data):\n    print(data)\n\ntoken = 'YOUR_TOKEN'\nchannel = 'TARGET_CHANNEL'\nusers = {} # Shared user list minimzes the number of requests\n\ntmi = PyWitchTMI(\n    channel = channel,\n    token = token,\n    callback = callback, # Optional\n    users = users,       # Optional, but strongly recomended\n    verbose = True,      # Optional\n)\ntmi.start()\ntmi.send('PyWitch send a message!')\nrun_forever()\n```\n\nNote: The channel don't need to be the same as the one that provided the\ntoken.\n\nIt automatically validate the provided token. \n\nThe `data` parameter in the callback function is a dictionary with the\nfollowing keys:\n```\n['display_name', 'event_time', 'user_id', 'login', 'message', 'event_raw']\n```\n\nEvent time is given by `time.time()`.\n\n## PyWitchRedemptions ##\n\nPyWitchRedemptions is a class that reads the user chat redemptions.\nWith this class, users chat redemptions calls a predefined funcion.\n\nUse:\n\n```\nfrom pywitch import PyWitchRedemptions, run_forever\n\ndef callback(data):\n    print(data)\n\ntoken = 'YOUR_TOKEN'\nusers = {} # Shared user list minimzes the number of requests\n\nredemptions = PyWitchRedemptions(\n    token = token,\n    callback = callback, # Optional\n    users = users,       # Optional, but strongly recomended\n    verbose = True,      # Optional\n)\nredemptions.start()\nrun_forever()\n```\n\nNote: Due to Twitch limitations, the provided token need to be generated with\nthe broadcaster user.\n\nIt automatically validate the provided token. \n\nThe `data` parameter in the callback function is a dictionary with the\nfollowing keys:\n```\n['type', 'data', 'login', 'user_id', 'display_name', 'title', 'prompt',\n 'cost', 'user_input', 'cooldown', 'message', 'event_dict', 'event_time',\n 'event_raw']\n```\n\nEvent time is given by `time.time()`.\n\n## PyWitchHeat ##\n\nPyWitchHeat is a class that reads from Heat Extension websocket.\n\n[Heat Extension made by Scott Garner that allows you to capture the users click on screen, you can find more information about it in this URL: https://heat.j38.net/about/](https://heat.j38.net/about/)\n\nUse:\n\n```\nfrom pywitch import PyWitchHeat, run_forever\n\ndef callback(data):\n    print(data)\n\ntoken = 'YOUR_TOKEN'\nchanel = 'TARGET_CHANNEL\nusers = {} # Shared user list minimzes the number of requests\n\nheat = PyWitchHeat(\n    token = token,\n    callback = callback, # Optional\n    users = users,       # Optional, but strongly recomended\n    verbose = True,      # Optional\n)\nheat.start()\nrun_forever()\n```\n\nSince Heat only returns user_id, every new user that click on screen execute\na request on Twitch API to recover its user display_name and login.\nUsing shared user lists minimizes the number of requests drastically.\n\nFor users that don't authorize the Heat Extension to read the user id, it will\nonly return the opaque user id.\n\nIt automatically validate the provided token. \n\nThe `data` parameter in the callback function is a dictionary with the\nfollowing keys:\n```\n['type', 'message', 'user_id', 'event_raw', 'event_time', 'x', 'y', 'login',\n 'display_name']\n```\n\nEvent time is given by `time.time()`.\n\n## Token Generation ##\n\nTo generate token, you need to authenticate PyWitch application in the\nfollowing URL:\n\n```\nhttps://id.twitch.tv/oauth2/authorize?response_type=token&client_id=l2o6fudb8tq6394phgudstdzlouo9n&redirect_uri=https://localhost&scope=channel:manage:redemptions%20channel:read:redemptions%20user:read:email%20chat:edit%20chat:read\n```\n\nNOTE: This URL will provide the following scopes to PyWitch application:\n\n[channel:manage:redemptions, channel:read:redemptions, user:read:email,\nchat:edit, chat:read]\n\nIt will ask for you to login in your Twitch Account to authorize. After\nauthorizing it, it will redirect to an (usually) broken page. The only thing\nyou need from the page is its URL. Copy that URL, it should look like this:\n\n```\nhttps://localhost/#access_token=YOUR_ACCESS_TOKEN&scope=channel%3Amanage%3Aredemptions+channel%3Aread%3Aredemptions+user%3Aread%3Aemail+chat%3Aedit+chat%3Aread&token_type=bearer\n```\n\nYour token is what is filling YOUR_ACCESS_TOKEN from the URL. \n\nAlternatively, you can create a Twitch Application in the\nfollowing URL:\n\n[https://dev.twitch.tv](https://dev.twitch.tv)\n\nTo do so, first login with your Twitch Account, click \"Your Console\", then \n\"Applications\" and \"Register Your Application\".\n\nGive it a pretty name and set OAuth Redirect URLs as \"https://localhost\", and\nset Category to any of the given options.\n\nAfter that, your application will receive an \"Client ID\", keep that in hands.\n\nNow you need to access the following URL, replacing `l2o6fudb8tq6394phgudstdzlouo9n`\nwith your application client_id:\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ouriquegustavo/pywitch",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pywitch",
    "package_url": "https://pypi.org/project/pywitch/",
    "platform": "",
    "project_url": "https://pypi.org/project/pywitch/",
    "project_urls": {
      "Homepage": "https://github.com/ouriquegustavo/pywitch"
    },
    "release_url": "https://pypi.org/project/pywitch/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Integrate Twitch Stream data, chat, redemptions using Python!",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11948015,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b17a2a5e9413eb2fc0933f75b2368f8e3be00fefd2c7a197351dbe9a6c950a1",
          "md5": "24a1c267cb5989e4ddb916f524b01564",
          "sha256": "872497dc25172d3e6a56ed431ea63aeaa835894ab78278b22142c51450a25041"
        },
        "downloads": -1,
        "filename": "pywitch-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "24a1c267cb5989e4ddb916f524b01564",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11207,
        "upload_time": "2021-11-02T20:19:56",
        "upload_time_iso_8601": "2021-11-02T20:19:56.751762Z",
        "url": "https://files.pythonhosted.org/packages/9b/17/a2a5e9413eb2fc0933f75b2368f8e3be00fefd2c7a197351dbe9a6c950a1/pywitch-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4edfba26512e1b40e08dcc14453cecaa269c0bfe620370e1dfa60187d6f74ef7",
          "md5": "35accf47228f09b94311da463d992a9b",
          "sha256": "88d06a3ab89d3ff2f1321f00b500a7064c6278062cd6b996f0eae3a1b526c720"
        },
        "downloads": -1,
        "filename": "pywitch-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "35accf47228f09b94311da463d992a9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10015,
        "upload_time": "2021-11-02T20:19:59",
        "upload_time_iso_8601": "2021-11-02T20:19:59.016491Z",
        "url": "https://files.pythonhosted.org/packages/4e/df/ba26512e1b40e08dcc14453cecaa269c0bfe620370e1dfa60187d6f74ef7/pywitch-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e3859da6029521da0fe3126a511b92cbdf8b7301e3a0c891d80291c7f352c79",
          "md5": "5aa428a46ec80cea3b0217f0641bff63",
          "sha256": "2acc8a103ba619597d681cad83e001c73737cb5bd124708c396896650354f64c"
        },
        "downloads": -1,
        "filename": "pywitch-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5aa428a46ec80cea3b0217f0641bff63",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11264,
        "upload_time": "2021-11-03T00:01:33",
        "upload_time_iso_8601": "2021-11-03T00:01:33.651537Z",
        "url": "https://files.pythonhosted.org/packages/9e/38/59da6029521da0fe3126a511b92cbdf8b7301e3a0c891d80291c7f352c79/pywitch-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "550f3cd05a1b375db8f810e9c210d84e7d32d3fe51232ffa0fc222013e19bc4a",
          "md5": "cb036c239b87dca7736fbebe780f0a21",
          "sha256": "1da5c6791398ab607eb89b4102411c2f6c7832d2793fbaad631510f242e34229"
        },
        "downloads": -1,
        "filename": "pywitch-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb036c239b87dca7736fbebe780f0a21",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11323,
        "upload_time": "2021-11-06T23:46:33",
        "upload_time_iso_8601": "2021-11-06T23:46:33.690737Z",
        "url": "https://files.pythonhosted.org/packages/55/0f/3cd05a1b375db8f810e9c210d84e7d32d3fe51232ffa0fc222013e19bc4a/pywitch-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8f73566916e878cda476710b4fb6f64a7d80b3406ffa05537c598ab0b0d8ee7",
          "md5": "c70df4b89d8b51c7406443a61401024f",
          "sha256": "ef751e6cb3c57a6ddfbc618b4a51cbfb144a2beb83b1583402e1f3db0479ebbc"
        },
        "downloads": -1,
        "filename": "pywitch-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c70df4b89d8b51c7406443a61401024f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10067,
        "upload_time": "2021-11-06T23:46:35",
        "upload_time_iso_8601": "2021-11-06T23:46:35.596152Z",
        "url": "https://files.pythonhosted.org/packages/b8/f7/3566916e878cda476710b4fb6f64a7d80b3406ffa05537c598ab0b0d8ee7/pywitch-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "550f3cd05a1b375db8f810e9c210d84e7d32d3fe51232ffa0fc222013e19bc4a",
        "md5": "cb036c239b87dca7736fbebe780f0a21",
        "sha256": "1da5c6791398ab607eb89b4102411c2f6c7832d2793fbaad631510f242e34229"
      },
      "downloads": -1,
      "filename": "pywitch-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cb036c239b87dca7736fbebe780f0a21",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11323,
      "upload_time": "2021-11-06T23:46:33",
      "upload_time_iso_8601": "2021-11-06T23:46:33.690737Z",
      "url": "https://files.pythonhosted.org/packages/55/0f/3cd05a1b375db8f810e9c210d84e7d32d3fe51232ffa0fc222013e19bc4a/pywitch-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b8f73566916e878cda476710b4fb6f64a7d80b3406ffa05537c598ab0b0d8ee7",
        "md5": "c70df4b89d8b51c7406443a61401024f",
        "sha256": "ef751e6cb3c57a6ddfbc618b4a51cbfb144a2beb83b1583402e1f3db0479ebbc"
      },
      "downloads": -1,
      "filename": "pywitch-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c70df4b89d8b51c7406443a61401024f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10067,
      "upload_time": "2021-11-06T23:46:35",
      "upload_time_iso_8601": "2021-11-06T23:46:35.596152Z",
      "url": "https://files.pythonhosted.org/packages/b8/f7/3566916e878cda476710b4fb6f64a7d80b3406ffa05537c598ab0b0d8ee7/pywitch-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}