{
  "info": {
    "author": "Woolfson Group, University of Bristol",
    "author_email": "chris.wood@bristol.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "# Bristol University Docking Engine Force Field (BUDEFF)\n\nBUDEFF is a standalone implementation of the\n[BUDE](http://www.bristol.ac.uk/biochemistry/research/bude/) (Bristol University\n Docking Engine) all-atom force field<sup>1,2</sup>. The force field is developed by the [Sessions\ngroup](http://www.bris.ac.uk/biochemistry/people/richard-b-sessions/index.html).\n\n[![CircleCI](https://circleci.com/gh/isambard-uob/budeff/tree/master.svg?style=shield)](https://circleci.com/gh/isambard-uob/budeff/)\n[![Python Version](https://img.shields.io/badge/python-3.5%2C%203.6-lightgrey.svg)]()\n[![MIT licensed](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/isambard-uob/budeff/blob/master/LICENSE)\n\n## Installation\n\nYou can install BUDEFF from pip:\n\n`pip install budeff`\n\nOr from source by downloading/cloning this repository, navigating to the folder\nand typing:\n\n`pip install .`\n\nBUDEFF uses Cython, so if you're installing from source make sure you have it\ninstalled.\n\n## Usage\n\nThe BUDE force field can be used to calculate energies for any protein structure\nthat has been loaded into [AMPAL](https://github.com/isambard-uob/ampal/), a\nsimple framework for representing biomolecular structure. You can load a\nstructure into AMPAL like so:\n\n```Python\nimport ampal\nstructure = ampal.load_pdb('3qy1.pdb')\n```\n\nOnce the structure is loaded in, you can now run BUFF on the structure. BUFF has\ntwo modes:\n\n1. Internal Energy - In this mode a single AMPAL object is supplied and the\n   energy between every pair of atoms is calculated, so long as the atom is parameterised in\n   the [force field](\n   https://github.com/isambard-uob/budeff/tree/master/src/budeff/force_fields/).\n1. Interaction Energy - In this mode a list of AMPAL objects is supplied and the\n   energy of atom pairs forming the interaction between these objects is\n   measured. For example, if the interaction energy between object A and object\n   B, then all atom pairs will contain one atom from A and one from B.\n\n```Python\nimport budeff\ninternal_energy = budeff.get_internal_energy(structure)\n# OUT: NotParameterisedWarning: O (HOH) atom is not parameterised in the selected residue force field.\n# OUT:   warnings.warn(w_str, NotParameterisedWarning)\n```\n\nWhile the score was being calculated, a `NotParameterisedWarning` was raised.\nThis tells us that the water (HOH) is not parameterised in the force field and\nso will be ignored. The BUDE force field has been developed for performing\nprotein docking, and so only protein and a few common ions are parameterised.\n\n`get_internal_energy` returns a `BuffScore` object:\n\n```Python\nprint(internal_energy)\n# OUT: <BUFF Score -7108.00: 214.37 St | -4343.46 De | -2978.91 Ch>\n```\n\nThe `BuffScore` contains information on the total energy of the system (-7108.00\nin this case) as well as the different components of this score, which are\nsteric (`214.37 St`), energy of desolvation (`-4343.46 De`) and charged\ninteractions (`-2978.91 Ch`). Each of these components can be accessed\nindividually:\n\n```Python\n\nprint(internal_energy.total_energy, internal_energy.steric,\n      internal_energy.desolvation, internal_energy.charge)\n# OUT: -7108.000086377617 214.36602045772776 -4343.460484501997 -2978.905622333365\n```\n\nIndividual pairwise interactions can be examined. The `inter_scores` attribute\nis a list of all the pairwise interactions with non-zero scores that are used to\ncreate the score:\n\n```Python\nprint(internal_energy.inter_scores[0])\n# OUT: ((<Carbon Atom (CA). Coordinates: (15.518, -30.153, -25.207)>,\n# OUT:   <Carbon Atom (CB). Coordinates: (17.842, -27.509, -21.862)>),\n# OUT:  [0.0, -0.10352520993045879, 0.0])\n```\n\nEach element in `inter_scores` contains a pair of atoms which form the\ninteraction and a list with the different elements of the scoring function in\nthe order steric, desolvation and charge.\n\nTo calculate the interaction energy, use the `get_interaction_energy` function.\nThis take a list of ampal objects and calculates the interaction energy between\nthese objects:\n\n```Python\ninteraction_energy = budeff.get_interaction_energy([structure[0], structure[1]])\nprint(interaction_energy)\n# OUT: NotParameterisedWarning: O (HOH) atom is not parameterised in the selected residue force field.\n# OUT:   warnings.warn(w_str, NotParameterisedWarning)\n# OUT: <BUFF Score -479.44: 26.19 St | -416.31 De | -89.32 Ch>\n```\n\nThe score is lower in this case as only the energy between an atom in chain a\nand an atom in chain b is considered.\n\nThere's lots more functionality in the BUFF module so have a dig around.\n\n## References\n\n1. McIntosh-Smith S. et al. (2012) Benchmarking energy efficiency, power costs\n   and carbon emissions on heterogeneous systems. *Comput. J.*, 55, 192–205.\n2. McIntosh-Smith S. et al. (2014) High performance in silico virtual drug\n   screening on many-core processors. *Int. J. High Perform. Comput. Appl.*, 29,\n   119–134.",
    "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/isambard-uob/buff",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "BUDEFF",
    "package_url": "https://pypi.org/project/BUDEFF/",
    "platform": "",
    "project_url": "https://pypi.org/project/BUDEFF/",
    "project_urls": {
      "Homepage": "https://github.com/isambard-uob/buff"
    },
    "release_url": "https://pypi.org/project/BUDEFF/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Python implementation of the BUDE force field.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4168346,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3389a7ea41131ab0db5c4232902ede026d5c21e05966b3abe59b84600fbb947d",
          "md5": "3dd1ce061671a02c61cd799bd17d4a5b",
          "sha256": "390a9781b9a1e26d15d9e40a6a834b87de8142ce604c23fc2ef57000f83db16b"
        },
        "downloads": -1,
        "filename": "BUDEFF-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3dd1ce061671a02c61cd799bd17d4a5b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 85847,
        "upload_time": "2018-04-18T07:58:53",
        "upload_time_iso_8601": "2018-04-18T07:58:53.882858Z",
        "url": "https://files.pythonhosted.org/packages/33/89/a7ea41131ab0db5c4232902ede026d5c21e05966b3abe59b84600fbb947d/BUDEFF-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3389a7ea41131ab0db5c4232902ede026d5c21e05966b3abe59b84600fbb947d",
        "md5": "3dd1ce061671a02c61cd799bd17d4a5b",
        "sha256": "390a9781b9a1e26d15d9e40a6a834b87de8142ce604c23fc2ef57000f83db16b"
      },
      "downloads": -1,
      "filename": "BUDEFF-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3dd1ce061671a02c61cd799bd17d4a5b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 85847,
      "upload_time": "2018-04-18T07:58:53",
      "upload_time_iso_8601": "2018-04-18T07:58:53.882858Z",
      "url": "https://files.pythonhosted.org/packages/33/89/a7ea41131ab0db5c4232902ede026d5c21e05966b3abe59b84600fbb947d/BUDEFF-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}