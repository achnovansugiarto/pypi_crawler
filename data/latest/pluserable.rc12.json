{
  "info": {
    "author": "Nando Florestan",
    "author_email": "nandoflorestan@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "License :: Other/Proprietary License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "============================\nIntroduction to *pluserable*\n============================\n\n*pluserable* provides generic user registration for the Pyramid\nweb framework, if your web app uses SQLAlchemy.\n\nIt is a pluggable web application that provides user registration, login,\nlogout and change password functionality. *pluserable* follows a policy of\nminimal interference, so your app can mostly keep its existing models.\n\n*pluserable* is highly configurable, you can make it do what you want.\nFeatures (all of them optional) include:\n\n- User sign up (registration).\n- Email address confirmation step (user activation).\n- Log in and log out.\n- Forgot password (sends an email with a new activation).\n- Reset password.\n- Brute force prevention by storing in a redis server the IP address of\n  any user who fails authentication.  Then the user must wait before\n  trying to authenticate again, and the time doubles with each attempt.\n- You can replace forms, templates, views, models, UI strings\n  and email message content.\n\nIt is gradually being refactored to support other web frameworks, too.\n\nThe documentation is at http://docs.nando.audio/pluserable/latest/\n\n\nMinimal integration\n===================\n\n- Create a virtualenv and activate it. Install pyramid and create\n  your Pyramid project.\n\n- Ensure you have some SQLAlchemy declarative initialization.\n  This is usually created by the Pyramid scaffold.\n\n- Edit your *setup.py* to add \"pluserable\" to the dependencies in the\n  *install_requires* list.\n\n- Run ``python setup.py develop`` on your project to install all\n  dependencies into your virtualenv.\n\n- Create models inheriting from pluserable's abstract models.\n  Find an example in the file `pluserable/tests/models.py\n  <https://github.com/nandoflorestan/pluserable/blob/master/pluserable/tests/models.py>`_.\n\n- In your Pyramid configuration file, create a section called\n  \"kerno utilities\" like this::\n\n    [kerno utilities]\n        # Let pluserable know which model classes to use:\n        activation class = some.app.models:Activation\n        group class = some.app.models:Group\n        user class = some.app.models:User\n\n        # Give pluserable a SQLAlchemy session factory:\n        session factory = some.app.models:get_sqlalchemy_session\n\n- Above you are also pointing to a session factory. Just write a\n  function that returns a SQLAlchemy session instance, ready for use.\n  Alternatively, it can be a scoped session.\n\n- Also add to your Pyramid configuration file a \"pluserable\" section\n  like this::\n\n    [pluserable]\n        # Whether to log a user in directly after registration. Default: false.\n        # autologin = false\n\n        # Email domains we do not accept for registration. One per line.\n        email_domains_blacklist =\n\n        # Prevents brute force. Default: empty string, meaning feature disabled.\n        # Syntax: redis://username:password@localhost:6379/0\n        # redis_url =\n\n        # Number of seconds a user must wait before trying login again.\n        # Default value: 15, doubled on each attempt. Depends on a redis_url.\n        # seconds_after_login_fail =\n\n        # Route or URL after a user confirms their email. Default: \"index\"\n        # activate_redirect = index\n\n        # Route or URL after a user fills the forgot password form. Default: \"index\"\n        # forgot_password_redirect = index\n\n        # Route or URL after a user logs in. Default: \"index\"\n        # login_redirect = index\n\n        # Route or URL after a user logs out. Default: \"index\"\n        # logout_redirect = index\n\n        # Route or URL after a user signs up for an account. Default: \"index\"\n        # register_redirect = index\n\n        # Route or URL after a user resets their password. Default: \"index\"\n        # reset_password_redirect = index\n\n        # Whether to enable retail rendering of deform forms. Default: false.\n        # deform_retail = false\n\n- pluserable includes a (very standard and vanilla) SecurityPolicy.\n  If you wish to use it, do::\n\n    config.include(\"pluserable.web.pyramid.security\")\n\n- You may write a function that returns a configuration for Pyramid routes and\n  views (which is something you probably want to manipulate in code\n  because it won't change between dev, staging and production environments),\n  and then inform pluserable about it like this::\n\n    registry.settings[\"pluserable_configurator\"] = \"my.package:some_function\"\n\n- Your ``pluserable_configurator`` function would look more or less like this::\n\n    from pluserable.settings import get_default_pluserable_settings\n\n    def my_pluserable(config):\n        \"\"\"This function is called by pluserable during app startup.\"\"\"\n        adict = get_default_pluserable_settings()\n        # Manipulate adict to customize pluserable for your application, then\n        return adict\n\n- Include **pluserable** into your Pyramid application,\n  just after Pyramid's Configurator is instantiated::\n\n    from kerno.start import Eko\n\n    def includeme(config):\n        \"\"\"Stuff called during Pyramid initialization.\"\"\"\n        eko = Eko.from_ini(\"server.ini\")\n        eko.include(\"pluserable\")\n        config.include(\"pluserable\")\n\nThis does almost nothing: it only makes a new config method available.\nYou have to use it next::\n\n    config.setup_pluserable(  # Directive that starts pluserable up\n        global_settings[\"__file__\"],  # Path to your INI configuration file\n    )\n\nThe above causes **pluserable** to read your INI file -- especially\nthe ``[Kerno utilities]`` and ``[pluserable]`` sections.\n\nThe backend for database access is in a separate class, this way you can\nsubstitute the implementation. This is called the \"repository\" pattern.\nOne of the main benefits is, it makes writing tests much easier.\nIt is recommended that you use the repository pattern in your app, too.\nThe `pluserable repository\n<https://github.com/nandoflorestan/pluserable/blob/master/pluserable/data/repository.py>`_.\nis instantiated once per request.\nThe instance is available in the ``request.repo`` variable.\n\n- If you haven't done so yet, configure an HTTP session factory according to\n  the Sessions chapter of the Pyramid documentation.\n\n- Create your database and tables. Maybe even an initial user.\n\n- Be sure to pass an ``authentication_policy`` argument in the\n  ``config = Configurator(...)`` call. Refer to Pyramid docs for details.\n\n- By now the login form should appear at /login, but /register shouldn't.\n\n- Include the package pyramid_mailer for the validation e-mail and\n  \"forgot password\" e-mail::\n\n    config.include(\"pyramid_mailer\")\n\n- The /register form should appear, though ugly. Now you have a choice\n  regarding user activation by email:\n\n  - You may just disable user activation by setting, in your .ini file::\n\n      [pluserable]\n          # (other settings, then...)\n          require_activation = false\n\n  - Otherwise, configure pyramid_mailer `according to its documentation\n    <http://docs.pylonsproject.org/projects/pyramid_mailer/en/latest/>`_\n    and test the registration page.\n\n- If you are using pyramid_tm or the ZopeTransactionManager, your minimal\n  integration is done. (The pages are ugly, but working. Keep reading...)\n\n\nNeed to session.commit()?\n=========================\n\n*pluserable* does not require pyramid_tm or the ZopeTransactionManager with your\nsession but if you do not use them you do have to take one extra step.\nWe don't commit transactions for you because that just wouldn't be nice!\n\nAll you have to do is subscribe to the extension events and\ncommit the session yourself. This also gives you the chance to\ndo some extra processing::\n\n    from pluserable.events import (\n        EventRegistration, EventActivation, EventLogin,\n        EventPasswordReset, EventProfileUpdated,\n    )\n\n    def handle_event(event):\n        request = event.request\n        session = request.registry.getUtility(IDBSession)\n        session.commit()\n\n    kerno.events.subscribe(handle_event, EventRegistration)\n    kerno.events.subscribe(handle_event, EventActivation)\n    kerno.events.subscribe(handle_event, EventLogin)\n    kerno.events.subscribe(handle_event, EventPasswordReset)\n    kerno.events.subscribe(handle_event, EventProfileUpdated)\n\nThe ``kerno`` variable comes from your initialization of the kerno library,\nwhich is useful to define the domain model of your application.\n(The ``kerno`` variable represents a global object for the domain model --\nit does not know anything about the web framework.)\nAt runtime pluserable finds the kerno instance at ``request.kerno``.\nIn the future pluserable will support web frameworks other than Pyramid.\n\n\nWhether or not to have a \"username\" field\n=========================================\n\nIt is important that you analyze the characteristics of your web application\nand decide whether you need a ``username`` field for users to log in with.\npluserable provides 2 modes of operation:\n\n1) email + username\n-------------------\n\nThe user chooses a username when registering and later she can log in by\nproviding either the username or the email address. Therefore, usernames\nmay NOT contain the @ character.\n\n**This mode is the default.** It is expressed by the Pyramid configuration\nsetting ``pluserable.handle = username``.\n\n2) email only\n-------------\n\nThere is no ``username`` field and users only provide their email address.\nYou enable this mode by:\n\n* Making your User model subclass ``NoUsernameMixin`` instead\n  of ``UsernameMixin``;\n* Adding this configuration setting: ``pluserable.handle = email``,\n  which will make pluserable default to schemas that contain email\n  fields instead of username fields.\n\nThis choice should be made at the beginning of a project.  If later you\nchange it and want to keep your data you must deal with the existing\n(or missing) \"username\" column yourself.\n\n\nChanging the forms\n==================\n\nIf you would like to modify any of the forms, you just need\nto register the new deform class to be used.\n\nThe interfaces you have available to override from pluserable.interfaces are:\n\n- IPluserableLoginForm\n- IPluserableRegisterForm\n- IPluserableForgotPasswordForm\n- IPluserableResetPasswordForm\n- IPluserableProfileForm\n\nThis is how you would do it (*MyForm* being a custom deform Form class)::\n\n    config.registry.registerUtility(MyForm, IPluserableLoginForm)\n\n\nChanging the templates\n======================\n\nIf you would like to substitute the templates you can use pyramid's\n`override_asset <http://pyramid.readthedocs.org/en/latest/narr/assets.html#overriding-assets-section>`_::\n\n    config.override_asset(\n        to_override=\"pluserable:templates/template.mako\",\n        override_with=\"your_package:templates/anothertemplate.mako\",\n    )\n\nThe templates you have available to override are:\n\n- login.mako\n- register.mako\n- forgot_password.mako\n- reset_password.mako\n- profile.mako\n\nIf you would like to override the templates with Jinja2, or any other\ntemplating language, just override the view configuration::\n\n    config.add_view(\"pluserable.views.AuthController\", attr=\"login\",\n        route_name=\"login\", renderer=\"yourapp:templates/login.jinja2\")\n    config.add_view(\"pluserable.views.ForgotPasswordController\",\n        attr=\"forgot_password\", route_name=\"forgot_password\",\n        renderer=\"yourapp:templates/forgot_password.jinja2\")\n    config.add_view(\"pluserable.views.ForgotPasswordController\",\n        attr=\"reset_password\", route_name=\"reset_password\",\n        renderer=\"yourapp:templates/reset_password.jinja2\")\n    config.add_view(\"pluserable.views.RegisterController\", attr=\"register\",\n        route_name=\"register\", renderer=\"yourapp:templates/register.jinja2\")\n    config.add_view(\"pluserable.views.ProfileController\", attr=\"profile\",\n        route_name=\"profile\", renderer=\"yourapp:templates/profile.jinja2\")\n\n\nChanging UI strings\n===================\n\nTake a look at `this class\n<https://github.com/nandoflorestan/pluserable/blob/master/pluserable/strings.py>`_.\nThis is where we store all the UI strings in *pluserable*.\nIf you'd like to change one or two messages, simply create a subclass\nand configure it::\n\n    [kerno utilities]\n        # (...bla bla bla...)\n\n        # Determining the UI strings is as easy as pointing to a class:\n        string class = pluserable.strings:UIStringsBase\n\nHere is an example implementation of a strings class::\n\n    class AuthStrings(UIStringsBase):\n        \"\"\"Our alterations to the pluserable UI text.\"\"\"\n\n        login_done = None   # Do not flash a message after the user logs in\n        logout_done = None  # Do not flash a message after the user logs out\n\n\nChanging the email messages\n===========================\n\n*pluserable* includes functions that send very simple, plain text only,\nemail messages using pyramid_mailer.  Messages are sent synchronously.\n\nYou can replace those with your own functions in order to send emails\nasynchronously (e. g. using celery), or to determine the content of the\nemail messages.  Plug your function in through kerno utilities -- for example\nin configuration::\n\n    [kerno utilities]\n    pluserable.send_activation_email = myapp.actions:send_activation_email\n    pluserable.send_reset_password_email = myapp.actions:send_reset_password_email\n\n...or imperatively in startup code::\n\n    eko.utilities.register(\n        \"pluserable.send_activation_email\",\n        \"myapp.actions:send_activation_email\"\n    )\n    eko.utilities.register(\n        \"pluserable.send_reset_password_email\",\n        \"myapp.actions:send_reset_password_email\"\n    )\n\n\nBrute force prevention\n======================\n\nBrute force prevention is enabled by configuring ``redis_url``\nas mentioned above.  This will store in a redis server the IP address of\nany user who fails authentication.  Then the user must wait before\ntrying to authenticate again, and the time doubles with each attempt.\n\nIf you wish to tweak the behavior of brute force prevention, or use a different\nstorage, you can create a subclass, and then configure it as a kerno utility::\n\n    [kerno utilities]\n        # Below is the default class, but you can change it to your own.\n        brute force class = pluserable.no_bruteforce:BruteForceAidRedis\n\n\nChanging the primary key column name\n====================================\n\nIf you wish to override the primary key attribute name, you can do so\nby creating a new mixin class::\n\n    class NullPkMixin(Base):\n        abstract = True\n        _idAttribute = \"pk\"\n\n        @declared_attr\n        def pk(self):\n            return Base.pk\n\n        @declared_attr\n        def id(self):\n            return None\n\n    class User(NullPkMixin, UserMixin):\n        pass\n\n\npluserable development\n======================\n\nSee https://github.com/nandoflorestan/pluserable\n\nIf you would like to help make any changes to *pluserable*, you can run its\nunit tests with py.test::\n\n    py.test\n\nTo check test coverage::\n\n    py.test --cov-report term-missing --cov pluserable\n\nThe tests can also be run in parallel::\n\n    py.test -n4\n\nWe are going to use this build server:\nhttp://travis-ci.org/#!/nandoflorestan/pluserable\n\n\nOrigin of the project\n=====================\n\n*pluserable* started as a fork of *horus* by John Anderson:\nhttps://github.com/eventray/horus\n\n*horus* is no longer maintained since 2015.  *pluserable* is maintained and\nsees 1 or 2 releases per year.\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nandoflorestan/pluserable",
    "keywords": "authentication,horus,pyramid,user,registration",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pluserable",
    "package_url": "https://pypi.org/project/pluserable/",
    "platform": null,
    "project_url": "https://pypi.org/project/pluserable/",
    "project_urls": {
      "Documentation": "http://docs.nando.audio/pluserable/latest/",
      "Homepage": "https://github.com/nandoflorestan/pluserable",
      "Repository": "https://github.com/nandoflorestan/pluserable"
    },
    "release_url": "https://pypi.org/project/pluserable/0.11.0/",
    "requires_dist": [
      "bag (>=5.0.0)",
      "kerno (>=0.7.0)",
      "sqlalchemy",
      "transaction",
      "redis",
      "passlib",
      "deform",
      "pyramid (>=2.0)",
      "pyramid_mailer",
      "pyramid_mako",
      "zope.interface"
    ],
    "requires_python": ">=3.9",
    "summary": "Generic user registration for the Pyramid web framework",
    "version": "0.11.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15865022,
  "releases": {
    "0.0.0": [],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66dbe3f7c39cf0640fcca2b2fdec316679736a361b9ff24f434afaf0ac9f89ff",
          "md5": "cdcc5a42d2155f128170c74751df4c90",
          "sha256": "06714af1ddaf3fc745f531f14d7a1477f4d07ed478c2bbe0ca52595b3f56d70d"
        },
        "downloads": -1,
        "filename": "pluserable-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cdcc5a42d2155f128170c74751df4c90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28747,
        "upload_time": "2016-02-24T21:25:05",
        "upload_time_iso_8601": "2016-02-24T21:25:05.312075Z",
        "url": "https://files.pythonhosted.org/packages/66/db/e3f7c39cf0640fcca2b2fdec316679736a361b9ff24f434afaf0ac9f89ff/pluserable-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93fc4324c134338cd9a479cd1fa00582761390045dbf9dce9c2e476a8abfa73f",
          "md5": "b6b24d743aa55d27c5fcb8c2abd46a41",
          "sha256": "636991bc54710be024d9a5611dff72d9f50dfa9c66b8ee914461b850703acc20"
        },
        "downloads": -1,
        "filename": "pluserable-0.10.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b6b24d743aa55d27c5fcb8c2abd46a41",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 60712,
        "upload_time": "2022-02-06T18:46:57",
        "upload_time_iso_8601": "2022-02-06T18:46:57.881125Z",
        "url": "https://files.pythonhosted.org/packages/93/fc/4324c134338cd9a479cd1fa00582761390045dbf9dce9c2e476a8abfa73f/pluserable-0.10.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01238e02d420048227d63ea150a0cc84e1064a8904bd0fdc1c0bab1fa81c5816",
          "md5": "b36bd197c63bd88c5159dcce154423e3",
          "sha256": "d4abc1f8d226ce4f86ffaf7a50d4b2992d120a907fc63b04d114e55d4f8782a7"
        },
        "downloads": -1,
        "filename": "pluserable-0.10.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b36bd197c63bd88c5159dcce154423e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47236,
        "upload_time": "2022-02-06T18:46:54",
        "upload_time_iso_8601": "2022-02-06T18:46:54.554301Z",
        "url": "https://files.pythonhosted.org/packages/01/23/8e02d420048227d63ea150a0cc84e1064a8904bd0fdc1c0bab1fa81c5816/pluserable-0.10.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5d9d9d292c94eedb4fa7d72de1e1f0281ac19176d09c92c515678276bd8fd38",
          "md5": "fb030e071c042899fb7128f4532a162f",
          "sha256": "77e1e2e236ad8c203627914a9c70d502dd66cbcfed67148207d609336a098033"
        },
        "downloads": -1,
        "filename": "pluserable-0.11.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb030e071c042899fb7128f4532a162f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 39956,
        "upload_time": "2022-11-23T09:32:49",
        "upload_time_iso_8601": "2022-11-23T09:32:49.859513Z",
        "url": "https://files.pythonhosted.org/packages/d5/d9/d9d292c94eedb4fa7d72de1e1f0281ac19176d09c92c515678276bd8fd38/pluserable-0.11.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7538b793d7b4081e240220f30572eb401c91afd8b974935db213419b3cf63f7",
          "md5": "71b41697268e40c9d64dd1f97665ca0b",
          "sha256": "7a25c146bec67a763f8517d08d681a932ee3dc2bc081e3a7d43453f273507bb8"
        },
        "downloads": -1,
        "filename": "pluserable-0.11.0.tar.gz",
        "has_sig": false,
        "md5_digest": "71b41697268e40c9d64dd1f97665ca0b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 36335,
        "upload_time": "2022-11-23T09:32:52",
        "upload_time_iso_8601": "2022-11-23T09:32:52.039558Z",
        "url": "https://files.pythonhosted.org/packages/c7/53/8b793d7b4081e240220f30572eb401c91afd8b974935db213419b3cf63f7/pluserable-0.11.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65b0b2c4c6ab25526ec3317bea7fdbd0562429c01ddfc0f124798d1566c86186",
          "md5": "6b593037bb683ff399c6a093fdbf09a6",
          "sha256": "3dface7ed64ba0d90ea752ec8b8cc7e10a99671644aa79d3c2b9b8db2415db0d"
        },
        "downloads": -1,
        "filename": "pluserable-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6b593037bb683ff399c6a093fdbf09a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29467,
        "upload_time": "2016-03-11T03:06:14",
        "upload_time_iso_8601": "2016-03-11T03:06:14.284964Z",
        "url": "https://files.pythonhosted.org/packages/65/b0/b2c4c6ab25526ec3317bea7fdbd0562429c01ddfc0f124798d1566c86186/pluserable-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74949ddc8fa036c4fc971b1420d66589a0ec85f90533a6bb246ac9ac8dff74ab",
          "md5": "03f971341fda92bf589dd054df3e0baf",
          "sha256": "c985a1f1e6e9a5e30b23cabc373f3485b94c21a32acfc47b16c4b073492f0e90"
        },
        "downloads": -1,
        "filename": "pluserable-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "03f971341fda92bf589dd054df3e0baf",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "requires_python": null,
        "size": 50870,
        "upload_time": "2017-02-10T04:29:30",
        "upload_time_iso_8601": "2017-02-10T04:29:30.307625Z",
        "url": "https://files.pythonhosted.org/packages/74/94/9ddc8fa036c4fc971b1420d66589a0ec85f90533a6bb246ac9ac8dff74ab/pluserable-0.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "917ee6b3e28645f1b3f90d2d7e8d1a0803620591448d096a995824001b5757fa",
          "md5": "3e4b960a55563d5c33c00640afd2e8e5",
          "sha256": "816aaf7acd303d6b983c087c8047f2789e33833f603f4e012a0f240b1c3a363c"
        },
        "downloads": -1,
        "filename": "pluserable-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3e4b960a55563d5c33c00640afd2e8e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35470,
        "upload_time": "2017-02-10T04:29:27",
        "upload_time_iso_8601": "2017-02-10T04:29:27.786828Z",
        "url": "https://files.pythonhosted.org/packages/91/7e/e6b3e28645f1b3f90d2d7e8d1a0803620591448d096a995824001b5757fa/pluserable-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00b00d745e9a8b1c1c9b4e50fd087cf4f87aa0d755f7346726f70d16e34006ba",
          "md5": "58b4f668aab2351336d33ce05f41e7fd",
          "sha256": "d54156370b78841567bb27424c2f299bf667bc468bbc1d94eda6db9a2c9064c9"
        },
        "downloads": -1,
        "filename": "pluserable-0.4.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "58b4f668aab2351336d33ce05f41e7fd",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "requires_python": null,
        "size": 51389,
        "upload_time": "2017-10-19T19:15:16",
        "upload_time_iso_8601": "2017-10-19T19:15:16.991500Z",
        "url": "https://files.pythonhosted.org/packages/00/b0/0d745e9a8b1c1c9b4e50fd087cf4f87aa0d755f7346726f70d16e34006ba/pluserable-0.4.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a10493aa76e8c75dc3f98be578cb0684efe27234b6f99fb25963e44577afef6",
          "md5": "2a88b69a8139594400ea1b822cc5bdc3",
          "sha256": "5721a37597d27bfcbd3b377fd304e39bca5f47fb89acd99f234718e207f0b8f1"
        },
        "downloads": -1,
        "filename": "pluserable-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2a88b69a8139594400ea1b822cc5bdc3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36279,
        "upload_time": "2017-10-19T19:15:13",
        "upload_time_iso_8601": "2017-10-19T19:15:13.223428Z",
        "url": "https://files.pythonhosted.org/packages/6a/10/493aa76e8c75dc3f98be578cb0684efe27234b6f99fb25963e44577afef6/pluserable-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd4ba54eefc2d04bbb5337ac8a4ecc0cbed94092be853da15596bb27da08ba54",
          "md5": "0ac357ac5e6b829361ce9b63e057f5c7",
          "sha256": "46b812ea751f8798100969f81fcce500d9599d7d81202decd03d132aef15b706"
        },
        "downloads": -1,
        "filename": "pluserable-0.5.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ac357ac5e6b829361ce9b63e057f5c7",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "requires_python": null,
        "size": 51582,
        "upload_time": "2018-02-07T17:48:09",
        "upload_time_iso_8601": "2018-02-07T17:48:09.163322Z",
        "url": "https://files.pythonhosted.org/packages/bd/4b/a54eefc2d04bbb5337ac8a4ecc0cbed94092be853da15596bb27da08ba54/pluserable-0.5.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71307ce98524f745bf38cb90db8ce2293b82432ae6b55ae8af7004d3b7ec7bcd",
          "md5": "2e047ce9077c6dee8184e810650c6aed",
          "sha256": "66287fe2aac8840babdab3e7218f1ab8a162233a820c947073045d84466bb5cb"
        },
        "downloads": -1,
        "filename": "pluserable-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2e047ce9077c6dee8184e810650c6aed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36218,
        "upload_time": "2018-02-07T17:48:00",
        "upload_time_iso_8601": "2018-02-07T17:48:00.186924Z",
        "url": "https://files.pythonhosted.org/packages/71/30/7ce98524f745bf38cb90db8ce2293b82432ae6b55ae8af7004d3b7ec7bcd/pluserable-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aeaf652b122e5ef67a39c08bb1e473b8883d07a1c2a166349494c172143cd7fa",
          "md5": "70318067029d0cb34439c0bd67e6e64c",
          "sha256": "b2696e77647ab438cbbd7b6aef899e6a9b22afebfd546a8edcbe41eb39d54d3b"
        },
        "downloads": -1,
        "filename": "pluserable-0.6.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70318067029d0cb34439c0bd67e6e64c",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 52196,
        "upload_time": "2018-05-10T15:30:00",
        "upload_time_iso_8601": "2018-05-10T15:30:00.532362Z",
        "url": "https://files.pythonhosted.org/packages/ae/af/652b122e5ef67a39c08bb1e473b8883d07a1c2a166349494c172143cd7fa/pluserable-0.6.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc377aa45495d7b5df6ae385ac0c571f4a0a30414414e9b91300b9fa139196fa",
          "md5": "1869252dffcdecb5ca424b0c90f68c86",
          "sha256": "107d78568863aa4c6f7f751ffc4eae364d818ea7f2211a5a08ed931bf52cea02"
        },
        "downloads": -1,
        "filename": "pluserable-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1869252dffcdecb5ca424b0c90f68c86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36449,
        "upload_time": "2018-05-10T15:29:57",
        "upload_time_iso_8601": "2018-05-10T15:29:57.591129Z",
        "url": "https://files.pythonhosted.org/packages/cc/37/7aa45495d7b5df6ae385ac0c571f4a0a30414414e9b91300b9fa139196fa/pluserable-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a07f122c2e8f939c2a8d57ffd06448ab3c06e62967de9ee7d133b4327fbba126",
          "md5": "c05f22142eba5e95f3911406cfb918d4",
          "sha256": "51edbf9c09adf0970481e20831e632a27c80b260d942951f72e87f6d6c1c272d"
        },
        "downloads": -1,
        "filename": "pluserable-0.7.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c05f22142eba5e95f3911406cfb918d4",
        "packagetype": "bdist_wheel",
        "python_version": "3.8",
        "requires_python": null,
        "size": 49293,
        "upload_time": "2020-03-22T15:18:53",
        "upload_time_iso_8601": "2020-03-22T15:18:53.850488Z",
        "url": "https://files.pythonhosted.org/packages/a0/7f/122c2e8f939c2a8d57ffd06448ab3c06e62967de9ee7d133b4327fbba126/pluserable-0.7.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f7b076811abd9c7fe741622ebdb6d5c4fa54e414853c0fafd01010ce7c4349f",
          "md5": "004e1b608e12018586792864dff39a7d",
          "sha256": "bf37c23d6d0caf8dcd0cb09363909d3fa94c90acb16f53fc8e321712858c2271"
        },
        "downloads": -1,
        "filename": "pluserable-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "004e1b608e12018586792864dff39a7d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42066,
        "upload_time": "2020-03-22T15:18:50",
        "upload_time_iso_8601": "2020-03-22T15:18:50.916677Z",
        "url": "https://files.pythonhosted.org/packages/4f/7b/076811abd9c7fe741622ebdb6d5c4fa54e414853c0fafd01010ce7c4349f/pluserable-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4302a483dcba16d8f29d14c6f17244fdb9ffb7b283cf5deee21dc980f95bb06",
          "md5": "6422939c74f471f04c79e1f01184d4c3",
          "sha256": "6b98c70c37ed2dc0be9231a514d022dd1b89558cd7d723a55cacc6435fa875fe"
        },
        "downloads": -1,
        "filename": "pluserable-0.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6422939c74f471f04c79e1f01184d4c3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 48362,
        "upload_time": "2021-02-01T16:05:22",
        "upload_time_iso_8601": "2021-02-01T16:05:22.703815Z",
        "url": "https://files.pythonhosted.org/packages/a4/30/2a483dcba16d8f29d14c6f17244fdb9ffb7b283cf5deee21dc980f95bb06/pluserable-0.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b4ad95c5727d4ef97b3acc22ca80adef3c02d27e5936cda1a4c2754a36be115",
          "md5": "7243a9b7d053e4c5cc428ce72a6e7070",
          "sha256": "776d91e892f68e44e1dcf78df430a993b68a88f78a550f7f891ad39a58b5ad27"
        },
        "downloads": -1,
        "filename": "pluserable-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7243a9b7d053e4c5cc428ce72a6e7070",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41813,
        "upload_time": "2021-02-01T16:00:11",
        "upload_time_iso_8601": "2021-02-01T16:00:11.273323Z",
        "url": "https://files.pythonhosted.org/packages/3b/4a/d95c5727d4ef97b3acc22ca80adef3c02d27e5936cda1a4c2754a36be115/pluserable-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7896da735d36f189c26175f4e5374427dcde103cd70f6e32e8831d1191a6a439",
          "md5": "91740d495529dc39ce0d1abbbbe8659a",
          "sha256": "bc2b235392fb93d17c407d56866cb14ec28e425d4ce26539d7b96565954b5ac5"
        },
        "downloads": -1,
        "filename": "pluserable-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "91740d495529dc39ce0d1abbbbe8659a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 49445,
        "upload_time": "2021-06-26T14:18:35",
        "upload_time_iso_8601": "2021-06-26T14:18:35.945213Z",
        "url": "https://files.pythonhosted.org/packages/78/96/da735d36f189c26175f4e5374427dcde103cd70f6e32e8831d1191a6a439/pluserable-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "842d880c8ccdd1f959ebfa3a80c82af0adf733ac52fa7ad3c694ceae95ca0931",
          "md5": "12d1ba5a5f20e3841aebabac65b84bfb",
          "sha256": "5918e280e97ca6ccb71bc7f7d610ceded8d64f32ac72ee32b1ad294468e48f35"
        },
        "downloads": -1,
        "filename": "pluserable-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "12d1ba5a5f20e3841aebabac65b84bfb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42729,
        "upload_time": "2021-06-26T14:18:33",
        "upload_time_iso_8601": "2021-06-26T14:18:33.186046Z",
        "url": "https://files.pythonhosted.org/packages/84/2d/880c8ccdd1f959ebfa3a80c82af0adf733ac52fa7ad3c694ceae95ca0931/pluserable-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d5d9d9d292c94eedb4fa7d72de1e1f0281ac19176d09c92c515678276bd8fd38",
        "md5": "fb030e071c042899fb7128f4532a162f",
        "sha256": "77e1e2e236ad8c203627914a9c70d502dd66cbcfed67148207d609336a098033"
      },
      "downloads": -1,
      "filename": "pluserable-0.11.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fb030e071c042899fb7128f4532a162f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 39956,
      "upload_time": "2022-11-23T09:32:49",
      "upload_time_iso_8601": "2022-11-23T09:32:49.859513Z",
      "url": "https://files.pythonhosted.org/packages/d5/d9/d9d292c94eedb4fa7d72de1e1f0281ac19176d09c92c515678276bd8fd38/pluserable-0.11.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c7538b793d7b4081e240220f30572eb401c91afd8b974935db213419b3cf63f7",
        "md5": "71b41697268e40c9d64dd1f97665ca0b",
        "sha256": "7a25c146bec67a763f8517d08d681a932ee3dc2bc081e3a7d43453f273507bb8"
      },
      "downloads": -1,
      "filename": "pluserable-0.11.0.tar.gz",
      "has_sig": false,
      "md5_digest": "71b41697268e40c9d64dd1f97665ca0b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 36335,
      "upload_time": "2022-11-23T09:32:52",
      "upload_time_iso_8601": "2022-11-23T09:32:52.039558Z",
      "url": "https://files.pythonhosted.org/packages/c7/53/8b793d7b4081e240220f30572eb401c91afd8b974935db213419b3cf63f7/pluserable-0.11.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}