{
  "info": {
    "author": "Ryan Lyn",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Logging"
    ],
    "description": "# `logcraft`\n![Continuous Integration](https://github.com/ryanlyn/logcraft/workflows/Continuous%20Integration/badge.svg?branch=master)\n![](https://img.shields.io/pypi/v/logcraft?color=blue)\n![](https://img.shields.io/pypi/pyversions/logcraft)\n![](https://img.shields.io/github/license/ryanlyn/logcraft)\n\nPython Macro-Generated Logging from Comments\n\n## Introduction\n### What is `logcraft`?\n`logcraft` gives the functionality of automatically generating logging calls from annotated comments. This treats logging as documentation, separates application logging and program flow to the highest degree, and provides an overall better development experience.\n\nSource code files are not modified. Instead the `@log` macro is only applied at the decoration of your object. This gives greater transparency and control to the developer.\n\n<table>\n<tr>\n<td> Write This: </td> <td> Instead Of: </td>\n</tr>\n<tr>\n<td> \n\n```python\n@log\ndef do_something(x):\n    #i: started doing something with {x}\n    x = do_something_interesting(x)\n    #i: finished doing something\n    return x\n```\n\n</td>\n<td>\n\n```python\n\ndef do_something(x):\n    logging.info(f\"started doing something with {x}\")\n    x = do_something_interesting(x)\n    logging.info(\"finished doing something\")\n    return x\n```\n\n</td>\n</tr>\n</table>\n\nMoreover, `logcraft` has the following benefits:\n- No external dependencies\n- Macro expansion is limited to decorated objects\n- No source files are modified\n- Works with `pickle` and other serialisation libraries\n- Inject your own logger ([loguru](https://github.com/Delgan/loguru) etc.) or a custom callable to replace `print`\n- Allows continuation over multiple comments\n- Allows string formatting with evaluated variables\n\nInspired by: [node-comment-macros](https://github.com/tj/node-comment-macros) and conversations with [@kale](https://github.com/kmiller96) and [@jiaxi](https://github.com/jiaxililearn).\n\n### Why `logcraft`?\nA lot of logging in Python these days are simply descriptive in nature (e.g. \"procedure `x` started\" or \"`x` iteration has `y` variable\"). These logging calls usually adds no functionality to the program logic and clouds the programmer's interpretation of the source code.\n\nThis library applies the opinion that __logging which are documentative in nature should be treated as documentation__.\n\nHence, logging should be generated from annotated comments and logging configuration should be easily injected without modifying the program logic. Having logging as comments results in a clear delineation\n\n### How Do I Install?\nSimply run:\n```bash\npip install logcraft\n```\n\n## Quickstart\nImport the `@log` decorator:\n```python\nfrom logcraft.macro import log\n```\n\nDecorate your object with `@log` and annotate comments which are intended to be logging messages. Comments with the same annotation and are right after another are treated as continuations of the same logging call. Furthermore, annotated comments with `\"{}\"` will be expanded into f-strings that references variables in the local or global namespaces. \n\n_Note that `@log` has to be the top decorator_\n\nThe following:\n```python\n@log\ndef add_one(sequence):\n    \"\"\"Adds 1 to sequence\"\"\"\n    #: add print call with line\n    #: continuation\n    # this is some ignored comment\n    #: add another line\n\n    #i: this is an info message\n    #d: this is a debug message\n\n    new_sequence = []\n    for x in sequence:\n        #d: adding 1 to x={x}\n        new_sequence.append(x + 1) \n        #d: finished adding 1 to x={x}\n    #i: constructed new sequence {new_sequence}\n\n    return new_sequence\n```\nWill be expanded to:\n```python\ndef add_one(sequence):\n    \"\"\"Adds 1 to sequence\"\"\"\n    print(\"add print call with line continuation\")\n    # this is some ignored comment\n    print(\"add another line\")\n\n    logging.info(\"this is an info message\")\n    logging.debug(\"this is a debug message\")\n\n    new_sequence = []\n    for x in sequence:\n        logging.debug(f\"adding 1 to x={x}\")\n        new_sequence.append(x + 1) \n        logging.debug(f\"finished adding 1 to x={x}\")\n    logging.info(f\"constructed new sequence {new_sequence}\")\n\n    return new_sequence\n```\n## List of Annotations\nThe following are the available list of annotations:\n\n```python\n#: callable (default: print)\n\n#c: logging.critical \n#d: logging.debug\n#e: logging.error\n#f: logging.fatal\n#i: logging.info\n#w: logging.warn\n```\n\n## Other Installation Methods\n### Source\nClone the repository:\n```bash\ngit clone https://github.com/ryanlyn/logcraft\n```\n\nRun installation:\n```bash\ncd logcraft\npython setup.py install\n```\n\n## License\n`logcraft` is made available under the MIT License. For more details, see the [LICENSE](./LICENSE).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ryanlyn/logcraft",
    "keywords": "logging,macro",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "logcraft",
    "package_url": "https://pypi.org/project/logcraft/",
    "platform": "any",
    "project_url": "https://pypi.org/project/logcraft/",
    "project_urls": {
      "Homepage": "https://github.com/ryanlyn/logcraft"
    },
    "release_url": "https://pypi.org/project/logcraft/0.0.1.post1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python Macro-Generated Logging from Comments",
    "version": "0.0.1.post1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7206842,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba8b5a70555bf4de657f83a0686d3ab262cec8ab69a7ec4fe43794e35e55388d",
          "md5": "1e483b306be1536f9c58bbbd13cd17f3",
          "sha256": "b92a9171e84a9cc92be2b7b93d582f532296e39e58f31ff7bfaaa99c50ba6f5f"
        },
        "downloads": -1,
        "filename": "logcraft-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e483b306be1536f9c58bbbd13cd17f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6181,
        "upload_time": "2020-04-30T12:33:45",
        "upload_time_iso_8601": "2020-04-30T12:33:45.692482Z",
        "url": "https://files.pythonhosted.org/packages/ba/8b/5a70555bf4de657f83a0686d3ab262cec8ab69a7ec4fe43794e35e55388d/logcraft-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbeae978b9d02b64b3c2f5ab2c334d4ab59b291860b39f1b0b09107222f5c243",
          "md5": "877500e62e1659e7eda3ecfe093caad4",
          "sha256": "ad9c66743c414c65ed8ea9d81714f5e8bf479ce860f4f74de79c95c12c244738"
        },
        "downloads": -1,
        "filename": "logcraft-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "877500e62e1659e7eda3ecfe093caad4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5718,
        "upload_time": "2020-04-30T12:33:48",
        "upload_time_iso_8601": "2020-04-30T12:33:48.245641Z",
        "url": "https://files.pythonhosted.org/packages/bb/ea/e978b9d02b64b3c2f5ab2c334d4ab59b291860b39f1b0b09107222f5c243/logcraft-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aadc5f657e75530516aacc2e59b8cdbedd36dec1bfe2a17b562fe6b742a85188",
          "md5": "6d3f738f8ad8969b63121f1bcef371b2",
          "sha256": "26f7a3c5e51ef7545f195be2ec6f45f862302a6d2c7e52e3baffc40f681fc30f"
        },
        "downloads": -1,
        "filename": "logcraft-0.0.1.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6d3f738f8ad8969b63121f1bcef371b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6376,
        "upload_time": "2020-05-10T05:45:08",
        "upload_time_iso_8601": "2020-05-10T05:45:08.614028Z",
        "url": "https://files.pythonhosted.org/packages/aa/dc/5f657e75530516aacc2e59b8cdbedd36dec1bfe2a17b562fe6b742a85188/logcraft-0.0.1.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6262c49dbdf98e9443ff477840b59c11a1e237f06385e47800763757cd808ae",
          "md5": "d2db200814830e16cbfc574938f2ed2b",
          "sha256": "ae5d6fa5fcf421a45f74d80e0075e3943767c4e7d0af7313976b2162db928a2d"
        },
        "downloads": -1,
        "filename": "logcraft-0.0.1.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "d2db200814830e16cbfc574938f2ed2b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5885,
        "upload_time": "2020-05-10T05:45:09",
        "upload_time_iso_8601": "2020-05-10T05:45:09.729367Z",
        "url": "https://files.pythonhosted.org/packages/c6/26/2c49dbdf98e9443ff477840b59c11a1e237f06385e47800763757cd808ae/logcraft-0.0.1.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aadc5f657e75530516aacc2e59b8cdbedd36dec1bfe2a17b562fe6b742a85188",
        "md5": "6d3f738f8ad8969b63121f1bcef371b2",
        "sha256": "26f7a3c5e51ef7545f195be2ec6f45f862302a6d2c7e52e3baffc40f681fc30f"
      },
      "downloads": -1,
      "filename": "logcraft-0.0.1.post1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6d3f738f8ad8969b63121f1bcef371b2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6376,
      "upload_time": "2020-05-10T05:45:08",
      "upload_time_iso_8601": "2020-05-10T05:45:08.614028Z",
      "url": "https://files.pythonhosted.org/packages/aa/dc/5f657e75530516aacc2e59b8cdbedd36dec1bfe2a17b562fe6b742a85188/logcraft-0.0.1.post1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c6262c49dbdf98e9443ff477840b59c11a1e237f06385e47800763757cd808ae",
        "md5": "d2db200814830e16cbfc574938f2ed2b",
        "sha256": "ae5d6fa5fcf421a45f74d80e0075e3943767c4e7d0af7313976b2162db928a2d"
      },
      "downloads": -1,
      "filename": "logcraft-0.0.1.post1.tar.gz",
      "has_sig": false,
      "md5_digest": "d2db200814830e16cbfc574938f2ed2b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5885,
      "upload_time": "2020-05-10T05:45:09",
      "upload_time_iso_8601": "2020-05-10T05:45:09.729367Z",
      "url": "https://files.pythonhosted.org/packages/c6/26/2c49dbdf98e9443ff477840b59c11a1e237f06385e47800763757cd808ae/logcraft-0.0.1.post1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}