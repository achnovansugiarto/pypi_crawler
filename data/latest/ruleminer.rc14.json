{
  "info": {
    "author": "Willem Jan Willemse",
    "author_email": "w.j.willemse@xs4all.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "=========\nruleminer\n=========\n\n\n.. image:: https://img.shields.io/pypi/v/ruleminer.svg\n        :target: https://pypi.python.org/pypi/ruleminer\n\n.. image:: https://img.shields.io/badge/License-MIT-yellow.svg\n        :target: https://opensource.org/licenses/MIT\n        :alt: License: MIT\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n        :target: https://github.com/psf/black\n        :alt: Code style: black\n\n\n**DISCLAIMER - BETA PHASE**\n\n*This package is currently in a beta phase.*\n\nPython package to discover association rules in Pandas DataFrames.\n\nThis package implements the code of the paper `Discovering and ranking validation rules in supervisory data <https://github.com/wjwillemse/ruleminer/tree/main/docs/paper.pdf>`_ from Willem Jan Willemse and Annick van Ool.\n\nInstallation\n------------\n\nTo install the package::\n\n    pip install ruleminer\n\nTo install the package from Github::\n\n    pip install -e git+https://github.com/wjwwillemse/ruleminer.git#egg=ruleminer\n\nTo use ruleminer in a project::\n\n    import ruleminer\n\nUsage\n-----\n\n.. list-table:: Some insurance undertakings data\n   :widths: 25 25 20 20 20 20 20\n   :header-rows: 1\n\n   * - Name\n     - Type\n     - Assets\n     - TP-life\n     - TP-nonlife\n     - Own funds\n     - Excess\n   * - Insurer 1\n     - life insurer\n     - 1000\n     - 800\n     - 0\n     - 200\n     - 200\n   * - Insurer 2\n     - non-life insurer\n     - 4000\n     - 0\n     - 3200\n     - 800\n     - 800\n   * - Insurer 3\n     - non-life insurer\n     - 800\n     - 0\n     - 700\n     - 100\n     - 100\n   * - Insurer 4\n     - life insurer\n     - 2500\n     - 1800\n     - 0\n     - 700\n     - 700\n   * - Insurer 5\n     - non-life insurer\n     - 2100\n     - 0\n     - 2200\n     - 200\n     - 200\n   * - Insurer 6\n     - life insurer\n     - 9000\n     - 8800\n     - 0\n     - 200\n     - 200\n   * - Insurer 7\n     - non-life insurer\n     - 9000\n     - 0\n     - 8800\n     - 200\n     - 200\n   * - Insurer 8\n     - life insurer\n     - 9000\n     - 8800\n     - 0\n     - 200\n     - 200\n   * - Insurer 9\n     - non-life insurer\n     - 9000\n     - 8800\n     - 0\n     - 200\n     - 200\n   * - Insurer 10\n     - life insurer\n     - 9000\n     - 0\n     - 8800\n     - 200\n     - 199.99\n\nCalculating metrics\n-------------------\n\nTake the rule::\n\n    if ({\"Type\"} == \"life_insurer\") then ({\"TP-life\"} > 0)\n\nThis rule says: if an insurer reports for column \"Type\" (noted by the curved brackets) the value \"life_insurer\" then the value of the column \"TP-life\" should be higher than zero. \n\nWith the code::\n\n    templates = [{'expression': 'if ({\"Type\"} == \"life_insurer\") then ({\"TP-life\"} > 0)'}]\n\n    r = ruleminer.RuleMiner(templates=templates, data=df)\n\nyou can generate the rule metrics of this rule given the data in the DataFrame above (available with r.rules).\n\n.. list-table:: Generated rules (1)\n   :widths: 20 40 20 20 20 15 15\n   :header-rows: 1\n\n   * - id\n     - definition\n     - status\n     - abs support\n     - abs exceptions\n     - confidence\n     - encodings\n   * - 1\n     - if ({\"Type\"} == \"life_insurer\") then ({\"TP-life\"} > 0)\n     - None\n     - 5\n     - 0\n     - 1\n     - {}\n\nThere are 5 rows in the data that support this rule. There are no exceptions (i.e. where the if-clause is satisfied, but not the then-clause), so this rule has confidence 1.\n\nGenerating rules\n----------------\n\nYou can define rule templates that contain regular expressions for column names and strings. The package will then generate rules that satisfy the rule template with matching column names and strings from the DataFrame. For example column regex::\n\n    {\"T.*\"}\n\nwill satisfy column names::\n\n    {\"Type\"}, {\"TP-life\"}, {\"TP-nonlife\"}\n\nSo, if you apply the following rule ::\n\n    if ({\"T.*\"} == \".*\") then ({\"TP.*\"} > 0)\n\nthen the following rules are generated\n\n.. list-table:: Generated rules (2)\n   :widths: 20 40 20 20 20 15 15\n   :header-rows: 1\n\n   * - id\n     - definition\n     - status\n     - abs support\n     - abs exceptions\n     - confidence\n     - encodings\n   * - 0\n     - if ({\"Type\"} == \"non-life_insurer\") then ({\"TP-nonlife\"} > 0)\n     - None\n     - 4\n     - 1\n     - 0.8\n     - {}\n   * - 1\n     - if ({\"Type\"} == \"life_insurer\") then ({\"TP-life\"} > 0)\n     - None\n     - 5\n     - 0\n     - 1\n     - {}\n\nYou can use rules without an if-clause, for example::\n\n    {\"Assets\"} > 0\n\nThe metrics for these rules are calculated as if the if-clause is always satisfied.\n\nRule examples\n~~~~~~~~~~~~~\n\nThe following rules can be applied to the data above::\n\n    {\"Assets\"} > 0\n\n    if ({\"Type\"} == \".*\") then ({\".*\"} > 0)\n\n    if ({\".*\"} > 0) then (({\".*\"} == 0) & ({\".*\"} > 0))\n\n    (({\".*\"} + {\".*\"} + {\".*\"}) == {\".*\"})\n\n    (min({\".*\"}, {\".*\"}) == {\".*\"})\n\n    ({\"Own funds\"} <= quantile({\"Own funds\"}, 0.95))\n\n\nParameters\n----------\n\nRule metrics\n~~~~~~~~~~~~\n\nSeveral rule metrics have been proposed in the past. You can add the metrics that you want as a parameter to the ruleminer, i.e.:: \n\n    params = {'metrics': ['added value', 'abs support', 'abs exceptions', 'confidence']}\n\n    r = ruleminer.RuleMiner(templates=templates, data=df, params=params)\n\nThis will produce the desired metrics. Available metrics are:\n\n* abs support (the absolute number of rows that satisfy the rule)\n\n* abs exceptions (the absolute number of rows that do no satisfy the rule)\n\n* confidence\n\n* support\n\n* added value\n\n* casual confidence\n\n* casual support\n\n* conviction\n\n* lift\n\n* rule power factor\n\nThe default metrics are 'abs support', 'abs exceptions' and 'confidence'.\n\nSee for the definitions `Measures for Rules <https://mhahsler.github.io/arules/docs/measures#Measures_for_Rules>`_ from Michael Hahsler.\n\nMetric filters\n~~~~~~~~~~~~~~\n\nIf you want to select only rules that satisfy a certain metric threshold then you can use\n\nparams = {\"filter\" : {\"confidence\": 0.75, \"abs support\": 10}}\n\nThe default metric filter is: {\"confidence\": 0.5, \"abs support\": 2}\n\nRule precision\n~~~~~~~~~~~~~~\n\nIn many situations the equal-operator when used on quantitative data is too strict as small differences can occur that you do no want to consider as exceptions to the rule. For this you can define a decimal parameter inside the params dictionary by this ::\n\n    params={'decimal': 3}\n\nThis means that comparisons like::\n\n    A==B\n\nare translated to ::\n\n    abs(A-B) <= 1.5*10**(-decimal)\n\nIf no 'decimal' parameter is provided then the absolute difference should be exactly zero.\n\nEvaluating results within rules\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSuppose you want to use an expression with a quantile::\n\n    ({\"Own funds\"} <= quantile({\"Own funds\"}, 0.95))\n\nThen you can choose to evaluate the quantile based on the dataset on which the rules were generated or not with::\n\n    params = {'evaluate_quantile': True}\n\nThis would produce the rule ::\n\n    if () then ({\"Own funds\"}<=755.0)\n\nIf you use ::\n\n    params = {'evaluate_quantile': False}\n\nthen this would produce ::\n\n    if () then ({\"Own funds\"}<=quantile({\"Own funds\"},0.95))\n\nIn this case the quantile is re-evaluated each time based when the rule is evaluated and the outcome will depend on the current dataset. \n\nThe default is False (quantiles within rules are not evaluated).\n\nRule pruning\n------------\n\nBy using regex in column names, it will sometimes happen that rules are identical to other rules, except that they have a different ordering of columns. For example::\n\n    max({\"TP life\"}, {\"TP nonlife\"})\n\nis identical to::\n\n    max({\"TP nonlife\"}, {\"TP life\"})\n\nThe generated rules are therefore pruned to delete the identical rules from the generated list of rules.\n\n* a==b is identical to b==a\n* a!=b is identical to b!=a\n* min(a, b) is identical to min(b, a)\n* max(a, b) is identical to max(b, a)\n* a+b is identical to b+a\n* a*b is identical to b*a\n\nThese identities are applied recursively in rules. So the rule::\n\n    (({\"4\"}>{\"3\"}) & (({\"2\"}+{\"1\"})=={\"0\"}))\n\nis identical to::\n\n    ((({\"1\"}+{\"2\"})=={\"0\"}) & ({\"4\"}>{\"3\"}))\n\nand will therefore be pruned from the list if the first rule is already in the list.\n\nRule template grammar\n---------------------\n\nThe rule template describes the structure of the rule. Columns and quoted strings in the rule template can contain simple regular expressions.\n\nThe syntax of the template follows a grammar defined as follows:\n\n* a *template* is of the form::\n\n    if cond_1 then cond_2\n\n  or simply a single:: \n\n    cond_1\n\n* a *condition* is either a combination of *comparisons* with *logical operators* ('&' and '|') and parenthesis::\n\n    ( comp_1 & comp_2 | comp_3 )\n\n  or simply a single *comparison*::\n\n    comp_1\n\n* a *comparison* consists of a *term*, a *comparison operator* (>=, >, <=, <, != or ==) and a *term*, so::\n\n    term_1 > term_2\n\n* a *term* can be a *number* (e.g. 3.1415 or 9), *quoted string* (a string with single or double quotes), or a *function of columns*\n\n* a *function of columns* is either a prefix operator (min, max, quantile, or abs, in lower or uppercase) on one or more *columns*, and of the form, for example::\n\n    min(col_1, col_2, col_3)\n\n  or infix operators with one or more columns::\n\n    (col_1 + col_2 * col_3)\n\n* a *column* is a *string* with braces, so::\n\n    {\"Type\"}\n\n  where \"Type\" is the name of the column in the DataFrame with the data\n\n* a *string* consists of a-z A-Z 0-9 _ . , ; ; < > * = + - / \\ ? | @ # $ % ^ & ( )\n\nDebugging rules\n---------------\n\nIf you are using this in a Jupyter notebook you can add a the beginning::\n\n    logging.basicConfig(stream=sys.stdout, \n                        format='%(asctime)s %(message)s',\n                        level=logging.INFO)\n\nInformation about the rule generating process with be displayed in the notebook. Set the debug level to logging.DEBUG is you want more results.\n\n\n=======\nHistory\n=======\n\n0.1.0 (2021-11-21)\n------------------\n\n* First release on PyPI.\n\n0.1.1 (2021-11-23)\n------------------\n\n* Added more documentation to the README text\n\n0.1.2 (2022-1-20)\n------------------\n\n* Bug fixes wrt some complex expressions\n\n0.1.3 (2022-1-26)\n------------------\n\n* Optimized rule generation process\n\n0.1.4 (2022-1-26)\n------------------\n\n* Evaluated columns in then part are now dependent on if part of rule\n\n0.1.5 (2022-1-30)\n------------------\n\n* Rule with quantiles added (including evaluating intermediate results)\n\n0.1.6 and 0.1.7 (2022-2-1)\n--------------------------\n\n* A number of optimization in rule generation process\n\n0.1.8 (2022-2-3)\n--------------------------\n\n* Rule power factor metric added\n\n0.1.12 (2022-5-11)\n--------------------------\n\n* Optimizations: metric calculations are done with boolean masks of DataFrame\n\n0.1.13 (2022-11-13)\n--------------------------\n\n* Parser update: Greek symbols added to strings\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wjwillemse/ruleminer",
    "keywords": "ruleminer",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ruleminer",
    "package_url": "https://pypi.org/project/ruleminer/",
    "platform": null,
    "project_url": "https://pypi.org/project/ruleminer/",
    "project_urls": {
      "Homepage": "https://github.com/wjwillemse/ruleminer"
    },
    "release_url": "https://pypi.org/project/ruleminer/0.1.13/",
    "requires_dist": [
      "Click (>=7.0)",
      "pandas",
      "pyparsing (>=3.0.0)",
      "sklearn",
      "numpy"
    ],
    "requires_python": ">=3.6",
    "summary": "Python package to mine association rules in datasets",
    "version": "0.1.13",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15749762,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c6e24db60587772c88ad9312a16aafc23fafc3d40d8445584c8a8c24c3e5da0",
          "md5": "52682d88518bdaa74a8b29f0bce63b6b",
          "sha256": "097042da1c3dcc5a8772ca7807e31c8df439ecbee45df5ee3de03c8eae8321b0"
        },
        "downloads": -1,
        "filename": "ruleminer-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "52682d88518bdaa74a8b29f0bce63b6b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 12843,
        "upload_time": "2021-12-22T12:31:46",
        "upload_time_iso_8601": "2021-12-22T12:31:46.140527Z",
        "url": "https://files.pythonhosted.org/packages/0c/6e/24db60587772c88ad9312a16aafc23fafc3d40d8445584c8a8c24c3e5da0/ruleminer-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "072fcada6aba184013208bf9c1e7d44dcd28a109187406555351a97abf282477",
          "md5": "6a4125ad7b0542879ef768ca5e2bb3cc",
          "sha256": "553a70f8f86f4e1abec1b3f6c624bc2484a06695a375f49e1093e7c5abb3b4b0"
        },
        "downloads": -1,
        "filename": "ruleminer-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6a4125ad7b0542879ef768ca5e2bb3cc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 13752,
        "upload_time": "2021-12-23T12:51:45",
        "upload_time_iso_8601": "2021-12-23T12:51:45.234950Z",
        "url": "https://files.pythonhosted.org/packages/07/2f/cada6aba184013208bf9c1e7d44dcd28a109187406555351a97abf282477/ruleminer-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1df5c9ca1e509a16cd408d49dd3811774c105d6c9dda6ee39f19d24653e6a76d",
          "md5": "2e13c91c59b09996373dfa8437753524",
          "sha256": "c43a6b17a4ad7424d9bc094711ec734de83d1b8c4b8854ed952e7a871b63bcca"
        },
        "downloads": -1,
        "filename": "ruleminer-0.1.10-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e13c91c59b09996373dfa8437753524",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 16174,
        "upload_time": "2022-04-11T09:09:08",
        "upload_time_iso_8601": "2022-04-11T09:09:08.147931Z",
        "url": "https://files.pythonhosted.org/packages/1d/f5/c9ca1e509a16cd408d49dd3811774c105d6c9dda6ee39f19d24653e6a76d/ruleminer-0.1.10-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07a76dd1dc7c5b98edfd7649bf31447dccef625a53d784a8b8f0b7aeb262caed",
          "md5": "312688cd943533843e51cfacf8e2d697",
          "sha256": "2b5750d0bc9f5c9deb3d79765e25f335d38401ad5c4a612c11ce5b8d8864fe27"
        },
        "downloads": -1,
        "filename": "ruleminer-0.1.11-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "312688cd943533843e51cfacf8e2d697",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 16299,
        "upload_time": "2022-04-22T08:35:55",
        "upload_time_iso_8601": "2022-04-22T08:35:55.935574Z",
        "url": "https://files.pythonhosted.org/packages/07/a7/6dd1dc7c5b98edfd7649bf31447dccef625a53d784a8b8f0b7aeb262caed/ruleminer-0.1.11-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c36e3dec2bada0302b604dc4414e547f2bc164b5ad579184b26023a25e853e7",
          "md5": "32400d86ab34a5695153be08c79ff4bf",
          "sha256": "ca0fd08e1327a1ba1d1503ee138c01b01455abf4752ef86ab07f203b9c07a19e"
        },
        "downloads": -1,
        "filename": "ruleminer-0.1.12-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32400d86ab34a5695153be08c79ff4bf",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 16291,
        "upload_time": "2022-05-11T05:57:29",
        "upload_time_iso_8601": "2022-05-11T05:57:29.085591Z",
        "url": "https://files.pythonhosted.org/packages/6c/36/e3dec2bada0302b604dc4414e547f2bc164b5ad579184b26023a25e853e7/ruleminer-0.1.12-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e42cbe6155a4a6a4f9eade175f1890bd3345903d5558d93e2d945e368726425b",
          "md5": "ca0d2734023710b1cc2052d35a244160",
          "sha256": "d404c2730c08779b38d24588c328f9bf4160c8c01f8537f63f28cafc05d2eeb4"
        },
        "downloads": -1,
        "filename": "ruleminer-0.1.13-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ca0d2734023710b1cc2052d35a244160",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 17727,
        "upload_time": "2022-11-13T07:56:18",
        "upload_time_iso_8601": "2022-11-13T07:56:18.286015Z",
        "url": "https://files.pythonhosted.org/packages/e4/2c/be6155a4a6a4f9eade175f1890bd3345903d5558d93e2d945e368726425b/ruleminer-0.1.13-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e900b668ee9a322ebf5947fe9270911cd683146229524b9fe75441db2ec19ad6",
          "md5": "5af1259e24ee10cfde268bb364669ec0",
          "sha256": "e6af4f66833ac9c9085b241dabb78eecd0205d7d47e6da0e2cc37df60acf9882"
        },
        "downloads": -1,
        "filename": "ruleminer-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5af1259e24ee10cfde268bb364669ec0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 14836,
        "upload_time": "2022-01-20T15:20:27",
        "upload_time_iso_8601": "2022-01-20T15:20:27.299762Z",
        "url": "https://files.pythonhosted.org/packages/e9/00/b668ee9a322ebf5947fe9270911cd683146229524b9fe75441db2ec19ad6/ruleminer-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9aa738a948e1d05ee9697148dedcf5ebd7078a73aa17592107cc430001f31984",
          "md5": "420fd1e076cc32adcaf966dded568fbb",
          "sha256": "69b49f73731e2b46a114f684c0d699595389875a85ec789292d0bdd310701cbd"
        },
        "downloads": -1,
        "filename": "ruleminer-0.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "420fd1e076cc32adcaf966dded568fbb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 14885,
        "upload_time": "2022-01-26T09:15:16",
        "upload_time_iso_8601": "2022-01-26T09:15:16.326462Z",
        "url": "https://files.pythonhosted.org/packages/9a/a7/38a948e1d05ee9697148dedcf5ebd7078a73aa17592107cc430001f31984/ruleminer-0.1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27e6ec3c2ff732e082a383d28417a3b0b184a6efa89d09e4a943e26cd2fad332",
          "md5": "d11701431c314922292c06b04f195eb7",
          "sha256": "db22107f16b6c6c2f3dc89f741cde7d72c540d9471f1203d91e32637918b4e66"
        },
        "downloads": -1,
        "filename": "ruleminer-0.1.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d11701431c314922292c06b04f195eb7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 15415,
        "upload_time": "2022-01-26T18:02:13",
        "upload_time_iso_8601": "2022-01-26T18:02:13.453528Z",
        "url": "https://files.pythonhosted.org/packages/27/e6/ec3c2ff732e082a383d28417a3b0b184a6efa89d09e4a943e26cd2fad332/ruleminer-0.1.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6fce282751ec17429d8d2e50b55746aac932ce405e01837cd41b9bd3c0f25c29",
          "md5": "6cee9c3a65ff203a3525a9f1d031b75e",
          "sha256": "670616481577126b86586f6a5cb077eb7240aa0def45b17856a9ed4715ac781b"
        },
        "downloads": -1,
        "filename": "ruleminer-0.1.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6cee9c3a65ff203a3525a9f1d031b75e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 16013,
        "upload_time": "2022-01-30T08:09:24",
        "upload_time_iso_8601": "2022-01-30T08:09:24.772702Z",
        "url": "https://files.pythonhosted.org/packages/6f/ce/282751ec17429d8d2e50b55746aac932ce405e01837cd41b9bd3c0f25c29/ruleminer-0.1.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d0da8fdb903a6289403d62b64463d91dbc5457954be52f319139abfd9379642",
          "md5": "264bb0892f6f6ed71dc3e82a318c10fe",
          "sha256": "c57921803bd2820cb918a0c9e1307b367d700be62c97f0d8c18520162a47d84a"
        },
        "downloads": -1,
        "filename": "ruleminer-0.1.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "264bb0892f6f6ed71dc3e82a318c10fe",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 15854,
        "upload_time": "2022-02-01T10:46:25",
        "upload_time_iso_8601": "2022-02-01T10:46:25.933832Z",
        "url": "https://files.pythonhosted.org/packages/3d/0d/a8fdb903a6289403d62b64463d91dbc5457954be52f319139abfd9379642/ruleminer-0.1.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47517b2529ec7b5edb5216841c3f24764b77d28c2b12614d267fd0ce487d7e1e",
          "md5": "bb7365f05c08d750dddbc8c537fc6426",
          "sha256": "9997e4f01a11e92ae8fa60a5a2fe49ec0ce3c272969fe247bf89ec26a0c047c3"
        },
        "downloads": -1,
        "filename": "ruleminer-0.1.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bb7365f05c08d750dddbc8c537fc6426",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 15839,
        "upload_time": "2022-02-01T15:49:32",
        "upload_time_iso_8601": "2022-02-01T15:49:32.937632Z",
        "url": "https://files.pythonhosted.org/packages/47/51/7b2529ec7b5edb5216841c3f24764b77d28c2b12614d267fd0ce487d7e1e/ruleminer-0.1.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "564a8c1d0b0130beebde1b21925b1094dfcecbad18c00342038c0b7ad085a1e5",
          "md5": "e43da50147a13b0261f912ab541e25ef",
          "sha256": "7db6fabe13ad1a28551b1a90bb41d65b6c2bc6e347b05552a38eee647d3cbd5a"
        },
        "downloads": -1,
        "filename": "ruleminer-0.1.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e43da50147a13b0261f912ab541e25ef",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 16148,
        "upload_time": "2022-04-11T07:09:12",
        "upload_time_iso_8601": "2022-04-11T07:09:12.388894Z",
        "url": "https://files.pythonhosted.org/packages/56/4a/8c1d0b0130beebde1b21925b1094dfcecbad18c00342038c0b7ad085a1e5/ruleminer-0.1.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "424e5ea94f19fc07634c633158d076ba968b988458f1ea195a51b8d4ce3883f0",
          "md5": "befc636bbaf0840975cc014de08bb95d",
          "sha256": "364a9e6b3ce84a4da2e26b333f70471665b6df4378320d4ab79aa6e4876ef1a7"
        },
        "downloads": -1,
        "filename": "ruleminer-0.1.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "befc636bbaf0840975cc014de08bb95d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 16148,
        "upload_time": "2022-04-11T08:03:28",
        "upload_time_iso_8601": "2022-04-11T08:03:28.875686Z",
        "url": "https://files.pythonhosted.org/packages/42/4e/5ea94f19fc07634c633158d076ba968b988458f1ea195a51b8d4ce3883f0/ruleminer-0.1.9-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e42cbe6155a4a6a4f9eade175f1890bd3345903d5558d93e2d945e368726425b",
        "md5": "ca0d2734023710b1cc2052d35a244160",
        "sha256": "d404c2730c08779b38d24588c328f9bf4160c8c01f8537f63f28cafc05d2eeb4"
      },
      "downloads": -1,
      "filename": "ruleminer-0.1.13-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ca0d2734023710b1cc2052d35a244160",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 17727,
      "upload_time": "2022-11-13T07:56:18",
      "upload_time_iso_8601": "2022-11-13T07:56:18.286015Z",
      "url": "https://files.pythonhosted.org/packages/e4/2c/be6155a4a6a4f9eade175f1890bd3345903d5558d93e2d945e368726425b/ruleminer-0.1.13-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}