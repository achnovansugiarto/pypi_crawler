{
  "info": {
    "author": "Ondrej Pelikan",
    "author_email": "onpelikan@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "===================\nMAPP python package\n===================\n\nThis package servers to simplify workflow of\n`MAPP program <http://mendel.stanford.edu/sidowlab/downloads/MAPP/>`_.\n\n\nPrerequisites\n=============\n\nYou have to install:\n\n* Python 2.7\n\n* `MAPP program <http://mendel.stanford.edu/sidowlab/downloads/MAPP/>`_.\n\n* Optionally download `fasta database <ftp://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/>`_\n  (or it is possible to use HMMER or BLAST program remotely).\n\n* Install program for sequence searching. Recommended is `HMMER <http://hmmer.janelia.org/software>`_.\n  Or it is possible to download  `BLAST <http://blast.ncbi.nlm.nih.gov/Blast.cgi?PAGE_TYPE=BlastDocs&DOC_TYPE=Download>`_.\n\n* Install multiple sequence alignment program (recommended is `MAFFT <http://mafft.cbrc.jp/alignment/software/>`_).\n\n* Install phylogenetic tree construction program (recommended is `FastTree <http://www.microbesonline.org/fasttree/#Install>`_).\n\n* Install `Biopython <http://biopython.org/DIST/docs/install/Installation.html>`_ package (if you want to use file convert tools).\n\n\nSettings File\n=============\n\nFor MAPP analysis settings file is needed (in `python ConfigParser <https://docs.python.org/2/library/configparser.html>`_ syntax).\n\nSettings file contains commands and input/output of commands.\nOne command should be one basic shell command (semicolon etc. are not allowed).\n\nSettings file could be easilly created by another script and then is easy to run\nmultiple mapp analysis at once.\n\nBasic and minimal required structer for ``settings.conf`` is::\n\n   [commands]\n   #id used for name of analysis\n   id=\n   #sequence file in fasta format\n   sequence = \n   #output file from blast or hmmer program\n   blastout = \n   #file where programs store stats about sequence picking\n   blaststat = \n   # blast command to run\n   blast = \n   # input file for multiple sequence aligning program (same as blast output)\n   msain = %(blastout)s\n   # msa program output file\n   msaout = \n   # this command is executed before msa program is executed\n   # (it could be for blast output conversion and purifying)\n   beforemsa = \n   # msa program command\n   msa = \n   # tree program input file (converted msaout file to newick format)\n   treein = \n   # tree program output file\n   treeout = \n   # this command is executed before the tree program\n   beforetree = \n   # tree program command\n   tree = \n   # mapp program input msa file (in fasta format - could be the same as msaout value)\n   mappinmsa = \n   # mapp program input tree file (in newick format)\n   mappintree =\n   # mapp program output file \n   mappout = \n   # command before the mapp command (good for e.g. adjust tree to proper newick format)\n   # MAPP is really sensitive to proper file format\n   beforemapp = \n   # MAPP command itself\n   mapp = java -jar MAPP.jar -f %(mappinmsa)s -t %(mappintree)s -o %(mappout)s\n   \n\nBasic usage in python program\n=============================\n\nBasic python code::\n\n   from mapp.core.analyzers import Analyzer\n   from mapp.core.parsers import SettingsParser\n   from mapp.core.exceptions import MappError\n   \n   settings_file = 'settings.conf'\n   \n   def main():\n       try:\n           mapp = Analyzer(SettingsParser(settings_file))\n           mapp.exec_mapp()\n       except MappError as e:\n           print(e.header)\n           print(e.description)\n      \n   if __name__ == '__main__':\n       main()\n\n\nHelper files\n============\n\nIn the ``mapp.utils`` package are files that can be use as standalone scripts or as modules. This file mostly serves for file conversions and purifying.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://pypi.python.org/pypi/Mapp/",
    "keywords": null,
    "license": "LICENSE.txt",
    "maintainer": null,
    "maintainer_email": null,
    "name": "Mapp",
    "package_url": "https://pypi.org/project/Mapp/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/Mapp/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://pypi.python.org/pypi/Mapp/"
    },
    "release_url": "https://pypi.org/project/Mapp/0.1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Package for simplify MAPP prediction analysis workflow.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1050595,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "994202f113984a225e8f03d34baa6e11211f2633947e664d699c8bedd40e002d",
          "md5": "9a741096aefc552ef7cf9bc7952394ef",
          "sha256": "6fc3b251cf5bb5c04fdc92084e7d8f0169e24e404e188beb990e8718ac8dd386"
        },
        "downloads": -1,
        "filename": "Mapp-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9a741096aefc552ef7cf9bc7952394ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50987,
        "upload_time": "2014-04-03T19:29:04",
        "upload_time_iso_8601": "2014-04-03T19:29:04.980529Z",
        "url": "https://files.pythonhosted.org/packages/99/42/02f113984a225e8f03d34baa6e11211f2633947e664d699c8bedd40e002d/Mapp-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "994202f113984a225e8f03d34baa6e11211f2633947e664d699c8bedd40e002d",
        "md5": "9a741096aefc552ef7cf9bc7952394ef",
        "sha256": "6fc3b251cf5bb5c04fdc92084e7d8f0169e24e404e188beb990e8718ac8dd386"
      },
      "downloads": -1,
      "filename": "Mapp-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9a741096aefc552ef7cf9bc7952394ef",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 50987,
      "upload_time": "2014-04-03T19:29:04",
      "upload_time_iso_8601": "2014-04-03T19:29:04.980529Z",
      "url": "https://files.pythonhosted.org/packages/99/42/02f113984a225e8f03d34baa6e11211f2633947e664d699c8bedd40e002d/Mapp-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}