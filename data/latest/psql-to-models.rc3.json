{
  "info": {
    "author": "AlbertoV5",
    "author_email": "58243333+AlbertoV5@users.noreply.github.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11"
    ],
    "description": "# PSQL TO MODELS\n\nUse regex patterns to match PostgreSQL schemas and output SQLAlchemy and Pydantic Models. \n\nDesigned for FastAPI.\n\n## Install\n\nRequires Python 3.10.\n\n```shell\ngit clone git@github.com:AlbertoV5/psql-to-models.git\n```\n\n```shell\ncd psql-to-models\n```\nInstall in editable mode.\n```shell\npip install -e .\n```\n\n## Usage\n\n```shell\npython -m psql-to-models -i ./example/schema.sql -a ./example/models_alchemy.py -p ./example/models_pydantic.py\n```\nBefore.\n```shell\nschema.sql\n```\nAfter.\n```shell\nmodels_alchemy.py\tschema.sql\nmodels_pydantic.py\n```\n\n## Results Example\n\nSQL Input\n```sql\nDROP TABLE IF EXISTS DATETIMEEVENTS CASCADE;\nCREATE TABLE DATETIMEEVENTS\n(\n  ROW_ID INT NOT NULL,\n\tSUBJECT_ID INT NOT NULL,\n\tHADM_ID INT,\n\tICUSTAY_ID INT,\n\tITEMID INT NOT NULL,\n\tCHARTTIME TIMESTAMP(0) NOT NULL,\n\tSTORETIME TIMESTAMP(0) NOT NULL,\n\tCGID INT NOT NULL,\n\tVALUE TIMESTAMP(0),\n\tVALUEUOM VARCHAR(50) NOT NULL,\n\tWARNING SMALLINT,\n\tERROR SMALLINT,\n\tRESULTSTATUS VARCHAR(50),\n\tSTOPPED VARCHAR(50),\n\tCONSTRAINT datetime_rowid_pk PRIMARY KEY (ROW_ID)\n) ;\n\nDROP TABLE IF EXISTS DIAGNOSES_ICD CASCADE;\nCREATE TABLE DIAGNOSES_ICD\n(\n  ROW_ID INT NOT NULL,\n\tSUBJECT_ID INT NOT NULL,\n\tHADM_ID INT NOT NULL,\n\tSEQ_NUM INT,\n\tICD9_CODE VARCHAR(10),\n\tCONSTRAINT diagnosesicd_rowid_pk PRIMARY KEY (ROW_ID)\n) ;\n```\nSQLALchemy Output\n\n```python\nclass Datetimeevents(Base):\n\n    __tablename__ = \"datetimeevents\"\n\n    row_id = Column(Integer, nullable=False, primary_key=True)\n    subject_id = Column(Integer, nullable=False)\n    hadm_id = Column(Integer)\n    icustay_id = Column(Integer)\n    itemid = Column(Integer, nullable=False)\n    charttime = Column(TIMESTAMP(0), nullable=False)\n    storetime = Column(TIMESTAMP(0), nullable=False)\n    cgid = Column(Integer, nullable=False)\n    value = Column(TIMESTAMP(0))\n    valueuom = Column(String(50), nullable=False)\n    warning = Column(SmallInteger)\n    error = Column(SmallInteger)\n    resultstatus = Column(String(50))\n    stopped = Column(String(50))\n\n\nclass Diagnoses_icd(Base):\n\n    __tablename__ = \"diagnoses_icd\"\n\n    row_id = Column(Integer, nullable=False, primary_key=True)\n    subject_id = Column(Integer, nullable=False)\n    hadm_id = Column(Integer, nullable=False)\n    seq_num = Column(Integer)\n    icd9_code = Column(String(10))\n```\n\nPydantic Output\n\n```python\nclass Datetimeevents(BaseModel):\n\n    row_id: int\n    subject_id: int\n    hadm_id: int | None\n    icustay_id: int | None\n    itemid: int\n    charttime: datetime\n    storetime: datetime\n    cgid: int\n    value: datetime | None\n    valueuom: str\n    warning: int | None\n    error: int | None\n    resultstatus: str | None\n    stopped: str | None\n\n    class Config:\n        orm_mode = True\n\n\nclass Diagnoses_icd(BaseModel):\n\n    row_id: int\n    subject_id: int\n    hadm_id: int\n    seq_num: int | None\n    icd9_code: str | None\n\n    class Config:\n        orm_mode = True\n```\n\n## Supported Queries\n\n```sql\nCREATE TABLE *\n```\n\n```sql\nNOT NULL\n```\n\n```sql\nCONSTRAINT UNIQUE\nCONSTRAINT PRIMARY KEY\n```\n\n## Constants\n\nMake sure to edit the header constants under __ main __.py\n\n```python\nALCHEMY_HEADER = '''\"\"\"\nSQLAlchemy Models\n\"\"\"\nfrom sqlalchemy import Column, Integer, String, CHAR, TIMESTAMP, SmallInteger\nfrom sqlalchemy.dialects.postgresql import DOUBLE_PRECISION\nfrom db.setup import Base\n\n'''\n```\n\nYou can always extend the supported types by editing the TYPE_LOOKUP dict in the types.py file.\n\n```python\nTYPE_LOOKUP: dict[str, tuple[str, str]] = {\n    \"INT\": (\"Integer\", \"int\"),\n    \"SMALLINT\": (\"SmallInteger\", \"int\"),\n    \"VARCHAR\": (\"String\", \"str\"),\n    \"TIMESTAMP\": (\"TIMESTAMP\", \"datetime\"),\n    \"DOUBLE\": (\"DOUBLE_PRECISION\", \"float\"),\n    \"CHAR\": (\"CHAR\", \"str\"),\n    \"TEXT\": (\"String\", \"str\"),\n}\n\"\"\"Values are tuples of SQLAlchemy Model Type and Pydantic/Python Type.\"\"\"\n```\n\n## Notes\n\n- This utility is meant to be modified to match every case that's why the installation is in editable mode.\n- The __ main __ .py file contains all the necessary logic and header configs.\n- The types.py file contains a lookup table for the postgresql -> models type lookup.\n- The header assumes a path for the SQLAlchemy Base so make sure to change it to match yours, etc.\n\n## Plans\n\n- A more robust tool can be created which uses .toml files (or whatever) for configuration instead of python files so there is no need for editable installation.\n- The applications are Postgresql schemas with FastAPI but the tool can be generalized even further to support different types for other RDMS and frameworks.\n- I'll add support for more queries as I find them in my day-to-day work but feel free to contribute!\n\n## Changelog\n\n- 0.1.2 - added ForeignKey Support\n- 0.1.1 - added REAL -> Float support\n- 0.1.0 - initial release",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "psql-to-models",
    "package_url": "https://pypi.org/project/psql-to-models/",
    "platform": null,
    "project_url": "https://pypi.org/project/psql-to-models/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/psql-to-models/0.1.2/",
    "requires_dist": [
      "pydantic (>=1.10.2,<2.0.0)",
      "sqlalchemy (>=1.4.44,<2.0.0)"
    ],
    "requires_python": ">=3.10,<4.0",
    "summary": "Use regex patterns to match PostgreSQL schemas and output SQLAlchemy and Pydantic Models. Designed for FastAPI.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15895659,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "590d28f7b990cb1a24fd1692877cddef56076e3bf06553ae6accb6a23b2d543e",
          "md5": "bbd4d0093db7c3cc55e637d9015aaedd",
          "sha256": "53bb9494e5611426eb82952067090b1cfc5d10b1a0acee29f4b8d91634ea00d7"
        },
        "downloads": -1,
        "filename": "psql_to_models-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bbd4d0093db7c3cc55e637d9015aaedd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 7184,
        "upload_time": "2022-11-18T01:02:02",
        "upload_time_iso_8601": "2022-11-18T01:02:02.602018Z",
        "url": "https://files.pythonhosted.org/packages/59/0d/28f7b990cb1a24fd1692877cddef56076e3bf06553ae6accb6a23b2d543e/psql_to_models-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "051c60413b3909b16e4993f381fbfdd5792d8c401cf3512c9437c22ffabf320d",
          "md5": "9c6d92bed24c60f1283c6c80bf94e16c",
          "sha256": "ae37e8ea9e8dd4a0bd31ea435e3d93dc2a6de101416f0d494441b81a02c12e48"
        },
        "downloads": -1,
        "filename": "psql_to_models-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9c6d92bed24c60f1283c6c80bf94e16c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 6388,
        "upload_time": "2022-11-18T01:02:04",
        "upload_time_iso_8601": "2022-11-18T01:02:04.406358Z",
        "url": "https://files.pythonhosted.org/packages/05/1c/60413b3909b16e4993f381fbfdd5792d8c401cf3512c9437c22ffabf320d/psql_to_models-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "823b3a6f06270dd3741b76e74fa81d9d1d491cf5d71cc0c8678d41aedb2351dc",
          "md5": "9f26cb9879ee96cdf97132a478d5876a",
          "sha256": "cea8f6c9fb7358a8b79e72f23f02ddc3ac4fda429270347febc46fa83acdb081"
        },
        "downloads": -1,
        "filename": "psql_to_models-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f26cb9879ee96cdf97132a478d5876a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 7266,
        "upload_time": "2022-11-22T05:58:46",
        "upload_time_iso_8601": "2022-11-22T05:58:46.045486Z",
        "url": "https://files.pythonhosted.org/packages/82/3b/3a6f06270dd3741b76e74fa81d9d1d491cf5d71cc0c8678d41aedb2351dc/psql_to_models-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be72282a7026c90a23e743e31a82d5d18da7bbc26bfb07dedfd055cd3ca9718e",
          "md5": "aeccb8c359306441fdd0878f23da7f60",
          "sha256": "ff168f9fb1afd1d8ec7af55e9a944362b07ffb3fb5349dd63aeb491aa3c6f610"
        },
        "downloads": -1,
        "filename": "psql_to_models-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aeccb8c359306441fdd0878f23da7f60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 6492,
        "upload_time": "2022-11-22T05:58:47",
        "upload_time_iso_8601": "2022-11-22T05:58:47.887769Z",
        "url": "https://files.pythonhosted.org/packages/be/72/282a7026c90a23e743e31a82d5d18da7bbc26bfb07dedfd055cd3ca9718e/psql_to_models-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0081440b0676b2491f2243bcb882b3acd916b5214a2e85eb37f0a15dda3fe75b",
          "md5": "abe6bff053b7213396c13b3e8db19258",
          "sha256": "91fec2d4c2bb1306dc3816aa507c7ccc10bd5098e8e24033291022f53017fc9b"
        },
        "downloads": -1,
        "filename": "psql_to_models-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "abe6bff053b7213396c13b3e8db19258",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 7462,
        "upload_time": "2022-11-26T04:53:21",
        "upload_time_iso_8601": "2022-11-26T04:53:21.068219Z",
        "url": "https://files.pythonhosted.org/packages/00/81/440b0676b2491f2243bcb882b3acd916b5214a2e85eb37f0a15dda3fe75b/psql_to_models-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca71f31418947ab6bf8616e097eca4e7fbbf9b069d5e3ca52623ed1da98666d1",
          "md5": "00f7b1fc02d13e9daf7d2b514cf0c730",
          "sha256": "cc5c2da94e92cd9902d72279d6759e5c68df4111c2bc87ccd1ea1763cd3d53d3"
        },
        "downloads": -1,
        "filename": "psql_to_models-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "00f7b1fc02d13e9daf7d2b514cf0c730",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 6666,
        "upload_time": "2022-11-26T04:53:22",
        "upload_time_iso_8601": "2022-11-26T04:53:22.998483Z",
        "url": "https://files.pythonhosted.org/packages/ca/71/f31418947ab6bf8616e097eca4e7fbbf9b069d5e3ca52623ed1da98666d1/psql_to_models-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0081440b0676b2491f2243bcb882b3acd916b5214a2e85eb37f0a15dda3fe75b",
        "md5": "abe6bff053b7213396c13b3e8db19258",
        "sha256": "91fec2d4c2bb1306dc3816aa507c7ccc10bd5098e8e24033291022f53017fc9b"
      },
      "downloads": -1,
      "filename": "psql_to_models-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "abe6bff053b7213396c13b3e8db19258",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 7462,
      "upload_time": "2022-11-26T04:53:21",
      "upload_time_iso_8601": "2022-11-26T04:53:21.068219Z",
      "url": "https://files.pythonhosted.org/packages/00/81/440b0676b2491f2243bcb882b3acd916b5214a2e85eb37f0a15dda3fe75b/psql_to_models-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ca71f31418947ab6bf8616e097eca4e7fbbf9b069d5e3ca52623ed1da98666d1",
        "md5": "00f7b1fc02d13e9daf7d2b514cf0c730",
        "sha256": "cc5c2da94e92cd9902d72279d6759e5c68df4111c2bc87ccd1ea1763cd3d53d3"
      },
      "downloads": -1,
      "filename": "psql_to_models-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "00f7b1fc02d13e9daf7d2b514cf0c730",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 6666,
      "upload_time": "2022-11-26T04:53:22",
      "upload_time_iso_8601": "2022-11-26T04:53:22.998483Z",
      "url": "https://files.pythonhosted.org/packages/ca/71/f31418947ab6bf8616e097eca4e7fbbf9b069d5e3ca52623ed1da98666d1/psql_to_models-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}