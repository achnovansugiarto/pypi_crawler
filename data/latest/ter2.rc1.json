{
  "info": {
    "author": "Shemyakin Roman",
    "author_email": "ramon93i7@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# iter2\n\nThis library provides implementation of \n[rich-iterator](http://code.activestate.com/recipes/498272-rich-iterator-wrapper/) \nconcept, inspired by \n[Rust's std::iter::Iterator](https://doc.rust-lang.org/std/iter/trait.Iterator.html), \n[Java's Stream](https://docs.oracle.com/javase/8/docs/api/?java/util/stream/Stream.html)\nand [more-itertools library](https://more-itertools.readthedocs.io/en/latest/).\n\n\n##  Usage\nThe main object of library is `iter2`. It behaves like built-in \n`iter` except that it creates an instance of rich-iterator. \n```python\niter2(['dzen', 'of', 'python']).map(str.capitalize).join(' ')  # 'Dzen Of Python'\n```\n\n> **Every** method of rich-iterator that returns new iterator makes original rich-iterator **invalid**, so it\n> **cannot be used** in any iteration process. This behaviour can be bypassed with `ref` method. \n\nOriginal iterator can be retrieved with `raw` method:\n```python\norig = iter2.range(5).raw()\ntuple(orig)  # (0, 1, 2, 3, 4)\n```\n\n`iter2` has some methods to build sequences of values:\n```python\niter2.of('a', 'b', 'cde').join()  # 'abcde'\niter2.range(5).map(str).join()  # '01234'\niter2.count_from(100).take(5).map(str).join('->')  # '100->101->102->103->104'\niter2.numeric_range(1.0, 3.5, 0.3).to_tuple()  # (1.0, 1.3, 1.6, 1.9, 2.2, 2.5, 2.8, 3.1, 3.4)\n# and some other ...\n```\n\nand some algorithm-methods on multiple iterables:\n```python\niter2.cartesian_product(range(2), repeat=2).to_tuple()  # ((0, 0), (0, 1), (1, 0), (1, 1))\niter2.zip_longest(range(3), range(1, 5), fillvalue=-1).to_tuple()  # ((0, 1), (1, 2), (2, 3), (-1, 4))\niter2.chain(['Somewhere', 'over'], ['the', 'Rainbow']).join(' ')  # 'Somewhere over the Rainbow\n# and some other ...\n```\n\n\n### Comparison\nHere are some examples of usage compared with builtins-and-itertools-based \nimplementations:\n\n```python\nfrom itertools import islice\nfrom functools import reduce\nimport operator\n\nfrom iter2 import iter2\n\nsquare = lambda x: x ** 2\nodd = lambda x: x % 2 == 1\n\ndef fibonacci():\n    a = b = 1\n    while True:\n        yield a\n        a, b = b, a + b\n        \n\n# Example 1:\ncool_song = 'Somewhere over the Rainbow'\n# \"from `cool_song` take capital characters and join them with '+'\"\niter2(cool_song).filter(str.isupper).join('+')\n# vs\n# \"with '+' join capital characters from `cool_song`\"\n'+'.join(filter(str.isupper, cool_song)) \n\n\n# Example 2:\n# \"for values in 0..99 take squares of them that are odd and sum them\" (sounds like algo)\niter2.range(100).map(square).filter(odd).sum()\n# vs\n# \"sum values that are odd that are squares of values in 0..99\" (sounds like shit)\nsum(filter(odd, map(square, range(100))))\n# \"sum squares of values in 0..99 that are odd\"\nsum(x ** 2 for x in range(100) if x % 2 == 1) # luckily, oddity doesn't change on squaring\n\n\n# Example 3: \"Playing with infinite sequences\"\n(iter2(fibonacci())\n    .drop(10)\n    .filter(odd)\n    .map(square)\n    .take(5)\n    .product())  # shortcut for `.fold(operator.mul)`\n# vs\nreduce(operator.mul,islice(map(square, filter(odd, islice(fibonacci(), 10, None))), 5))  # (counting braces balance and commas positions)\n# (to make clearer):\nreduce(\n    operator.mul,\n    islice(\n        map(\n            square, \n            filter(\n                odd, \n                islice(fibonacci(), 10, None)\n            )\n        ), \n        5\n    )\n) # or not?\n```\n\n##Changelog\n\n####v1.1\n\n- Tuple-wise methods\n\n#### v1.0\n\n- Initial\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ramon93i7/ter2",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ter2",
    "package_url": "https://pypi.org/project/ter2/",
    "platform": null,
    "project_url": "https://pypi.org/project/ter2/",
    "project_urls": {
      "Homepage": "https://github.com/ramon93i7/ter2"
    },
    "release_url": "https://pypi.org/project/ter2/1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Implementation of some rich-iterator concept",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15806679,
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a794c5d62aae1e3ee2faccc60d2c330b39f9dddb3b035e1dac11f5cf9b8fdbb",
          "md5": "174268caeadb1c6a932fadc17f352491",
          "sha256": "2d8376eb5ef338f00b454df5f5a9d8d31565a1952628f336d021ddb6ec80682f"
        },
        "downloads": -1,
        "filename": "ter2-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "174268caeadb1c6a932fadc17f352491",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6697,
        "upload_time": "2022-11-17T21:17:49",
        "upload_time_iso_8601": "2022-11-17T21:17:49.617083Z",
        "url": "https://files.pythonhosted.org/packages/6a/79/4c5d62aae1e3ee2faccc60d2c330b39f9dddb3b035e1dac11f5cf9b8fdbb/ter2-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe95f9cd35ef9c6c8358ddadad9c7acafe0e68a668a23d5835cc72a910c60879",
          "md5": "0bcc5f6b4a1361bee31617b5c423b6bf",
          "sha256": "af29e833d1abb6b261a7cbba04d047b978f0fa8d7af908ba33df58e4c77f073d"
        },
        "downloads": -1,
        "filename": "ter2-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0bcc5f6b4a1361bee31617b5c423b6bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5465,
        "upload_time": "2022-11-17T21:17:52",
        "upload_time_iso_8601": "2022-11-17T21:17:52.391660Z",
        "url": "https://files.pythonhosted.org/packages/fe/95/f9cd35ef9c6c8358ddadad9c7acafe0e68a668a23d5835cc72a910c60879/ter2-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6a794c5d62aae1e3ee2faccc60d2c330b39f9dddb3b035e1dac11f5cf9b8fdbb",
        "md5": "174268caeadb1c6a932fadc17f352491",
        "sha256": "2d8376eb5ef338f00b454df5f5a9d8d31565a1952628f336d021ddb6ec80682f"
      },
      "downloads": -1,
      "filename": "ter2-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "174268caeadb1c6a932fadc17f352491",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6697,
      "upload_time": "2022-11-17T21:17:49",
      "upload_time_iso_8601": "2022-11-17T21:17:49.617083Z",
      "url": "https://files.pythonhosted.org/packages/6a/79/4c5d62aae1e3ee2faccc60d2c330b39f9dddb3b035e1dac11f5cf9b8fdbb/ter2-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe95f9cd35ef9c6c8358ddadad9c7acafe0e68a668a23d5835cc72a910c60879",
        "md5": "0bcc5f6b4a1361bee31617b5c423b6bf",
        "sha256": "af29e833d1abb6b261a7cbba04d047b978f0fa8d7af908ba33df58e4c77f073d"
      },
      "downloads": -1,
      "filename": "ter2-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0bcc5f6b4a1361bee31617b5c423b6bf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5465,
      "upload_time": "2022-11-17T21:17:52",
      "upload_time_iso_8601": "2022-11-17T21:17:52.391660Z",
      "url": "https://files.pythonhosted.org/packages/fe/95/f9cd35ef9c6c8358ddadad9c7acafe0e68a668a23d5835cc72a910c60879/ter2-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}