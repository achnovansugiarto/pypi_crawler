{
  "info": {
    "author": "M. Grossi, G. D. Bartolomeo, M. Vischi, R. Wixinger",
    "author_email": "\"M, Grossi\" <michele.grossi@cern.ch>, \"G. D. Bartolomeo\" <dibartolomeo.giov@gmail.com>, \"M. Vischi\" <vischimichele@gmail.com>, \"R. Wixinger\" <roman.wixinger@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "# Noisy Quantum Gates [![Made at QMTS!](https://img.shields.io/badge/University%20of%20Trieste-Bassi%20Group-brightgreen)](http://www.qmts.it/) [![Made at CERN!](https://img.shields.io/badge/CERN-CERN%20openlab-brightgreen)](https://openlab.cern/) [![Made at CERN!](https://img.shields.io/badge/CERN-Open%20Source-%232980b9.svg)](https://home.cern) [![Made at CERN!](https://img.shields.io/badge/CERN-QTI-blue)](https://quantum.cern/our-governance)\r\n\r\nImplementation of the Noisy Quantum Gates model, which is soon to be published. It is a novel method to simulate the noisy behaviour of quantum devices by incorporating the noise directly in the gates, which become stochastic matrices. \r\n\r\n\r\n## Documentations\r\nThe documentation for Noisy Quantum Gates can be accessed on the website \r\n<a href=\"https://quantum-gates.readthedocs.io/en/latest/index.html\" target=\"_blank\"> Read the Docs</a>.\r\n\r\n\r\n## How to install\r\n### Requirements\r\nThe Python version should be 3.9 or later. Find your Python version by typing `python` or `python3` in the CLI. \r\nWe recommend using the repo together with an [IBM Quantum Lab](https://quantum-computing.ibm.com/lab) account, \r\nas it necessary for circuit compilation with Qiskit in many cases. \r\n\r\n\r\n### Installation as a user\r\nThe library is available on the Python Package Index (PyPI) with `pip install quantum-gates`. \r\n\r\n\r\n### Installation as a contributor\r\nFor users who want to have control over the source code, we recommend the following installation. Clone the repository \r\nfrom [Github](https://github.com/CERN-IT-INNOVATION/quantum-gates), create a new virtual environment, and activate the \r\nenvironment. Then you can build the wheel and install it with the package manager of your choice as described in the \r\nsection [How to contribute](#how-to-contribute). This will install all dependencies in your virtual environment, \r\nand install a working version of the library.\r\n\r\n\r\n## Quickstart\r\nExecute the following code in a script or notebook. Add your IBM token to by defining it as the variable \r\nIBM_TOKEN = \"your_token\". \r\n\r\n```python\r\n# Standard libraries\r\nimport numpy as np\r\nimport json\r\n\r\n# Qiskit\r\nfrom qiskit import QuantumCircuit, transpile\r\nfrom qiskit.visualization import plot_histogram\r\n\r\n# Own library\r\nfrom quantum_gates.simulators import MrAndersonSimulator\r\nfrom quantum_gates.gates import standard_gates\r\nfrom quantum_gates.circuits import EfficientCircuit\r\nfrom quantum_gates.utilities import DeviceParameters\r\nfrom quantum_gates.utilities import setup_backend\r\nIBM_TOKEN = \"<your_token>\"\r\n```\r\nWe create a quantum circuit with Qiskit. \r\n\r\n```python\r\ncirc = QuantumCircuit(2,2)\r\ncirc.h(0)\r\ncirc.cx(0,1)\r\ncirc.barrier(range(2))\r\ncirc.measure(range(2),range(2))\r\ncirc.draw('mpl')\r\n```\r\n\r\nWe load the configuration from a json file or from code with\r\n```python\r\nconfig = {\r\n    \"backend\": {\r\n        \"hub\": \"ibm-q\",\r\n        \"group\": \"open\",\r\n        \"project\": \"main\",\r\n        \"device_name\": \"ibmq_manila\"\r\n    },\r\n    \"run\": {\r\n        \"shots\": 1000,\r\n        \"qubits_layout\": [0, 1],\r\n        \"psi0\": [1, 0, 0, 0]\r\n    }\r\n}\r\n```\r\n... and setup the Qiskit backend used for the circuit transpilation.\r\n\r\n```python\r\nbackend_config = config[\"backend\"]\r\nbackend = setup_backend(Token=IBM_TOKEN, **backend_config)\r\nrun_config = config[\"run\"]\r\n```\r\n\r\nThis allows us to load the device parameters, which represent the noise of the quantum hardware. \r\n```python\r\nqubits_layout = run_config[\"qubits_layout\"]\r\ndevice_param = DeviceParameters(qubits_layout)\r\ndevice_param.load_from_backend(backend)\r\ndevice_param_lookup = device_param.__dict__()\r\n```\r\n\r\nLast, we perform the simulation ... \r\n```python\r\nsim = MrAndersonSimulator(gates=standard_gates, CircuitClass=EfficientCircuit)\r\n\r\nt_circ = transpile(\r\n    circ,\r\n    backend,\r\n    scheduling_method='asap',\r\n    initial_layout=qubits_layout,\r\n    seed_transpiler=42\r\n)\r\n\r\nprobs = sim.run(\r\n    t_qiskit_circ=t_circ, \r\n    qubits_layout=qubits_layout, \r\n    psi0=np.array(run_config[\"psi0\"]), \r\n    shots=run_config[\"shots\"], \r\n    device_param=device_param_lookup,\r\n    nqubit=2)\r\n\r\ncounts_ng = {format(i, 'b').zfill(2): probs[i] for i in range(0, 4)}\r\n```\r\n... and analyse the result. \r\n\r\n```python\r\nplot_histogram(counts_ng, bar_labels=False, legend=['Noisy Gates simulation'])\r\n```\r\n\r\n\r\n# Usage\r\nWe recommend to read the [overview](https://quantum-gates.readthedocs.io/en/latest/index.html) of the documentation as a 2-minute preparation. \r\n\r\n\r\n## Imports\r\nThere are two ways of importing the package. 1) If you installed the code with pip, then the imports are simply of the form seen in the [Quickstart](<#quickstart>). \r\n\r\n```python\r\nfrom quantum_gates.simulators import MrAndersonSimulator\r\nfrom quantum_gates.gates import standard_gates\r\nfrom quantum_gates.circuits import EfficientCircuit\r\nfrom quantum_gates.utilities import DeviceParameters, setup_backend\r\n```\r\n\r\n2) If you use the source code directly and develop within the repository, then the imports become\r\n\r\n```python\r\nfrom src.quantum_gates._simulation.simulator import MrAndersonSimulator\r\nfrom src.quantum_gates._gates.gates import standard_gates\r\nfrom src.quantum_gates._simulation.circuit import EfficientCircuit\r\nfrom src.quantum_gates._utility.device_parameters import (\r\n    DeviceParameters, \r\n    setup_backend\r\n)\r\n``` \r\n\r\n\r\n# Functionality\r\nThe main components are the [gates](https://quantum-gates.readthedocs.io/en/latest/gates.html), \r\nand the [simulator](https://quantum-gates.readthedocs.io/en/latest/simulators.html). \r\nOne can configure the gates with different [pulse shapes](https://quantum-gates.readthedocs.io/en/latest/pulses.html>), \r\nand the simulator with different [circuit classes](https://quantum-gates.readthedocs.io/en/latest/circuits.html>) and \r\n[backends](https://quantum-gates.readthedocs.io/en/latest/backends.html). The circuit classes use a specific \r\nbackend for the statevector simulation. \r\nThe [EfficientBackend](https://quantum-gates.readthedocs.io/en/latest/backends.html) has the same functionality as \r\nthe [StandardBackend](https://quantum-gates.readthedocs.io/en/latest/backends.html), but is much more performant \r\nthanks to optimized tensor contraction algorithms. We also provide various\r\n[quantum algorithms](https://quantum-gates.readthedocs.io/en/latest/quantum_algorithms.html) as circuits, and \r\nscripts to run the circuits with the simulator, the IBM simulator, and a real IBM backend. Last, all functionality is \r\nunit tested and one can get sample code from the unit tests.\r\n\r\n\r\n# How to contribute\r\nContributions are welcomed and should apply the usual git-flow: fork this repo, create a local branch named \r\n'feature-...'. Commit often to ensure that each commit is easy to understand. Name your commits \r\n'[feature-...] Commit message.', such that it possible to differentiate the commits of different features in the \r\nmain line. Request a merge to the mainline often. Please remember to follow the \r\n[PEP 8 style guide](https://peps.python.org/pep-0008/), and add comments whenever it helps. The corresponding \r\n[authors](<#authors>) are happy to support you. \r\n\r\n\r\n## Build \r\nYou may also want to create your own distribution and test it. Navigate to the repository in your CLI of choice. \r\nBuild the wheel with the command `python3 -m build --sdist --wheel .` and navigate to the distribution with `cd dist`. \r\nUse `ls` to display the name of the wheel, and run `pip install <filename>.whl` with the correct filename. \r\nNow you can use your version of the library. \r\n\r\n\r\n# Credits\r\nPlease cite the work using the following Bibtex entry:\r\n```text\r\n@misc{dibartolomeo2023novel,\r\n      title={A novel approach to noisy gates for simulating quantum computers}, \r\n      author={Giovanni Di Bartolomeo and Michele Vischi and Francesco Cesa and Roman Wixinger and Michele Grossi and Sandro Donadi and Angelo Bassi},\r\n      year={2023},\r\n      eprint={2301.04173},\r\n      archivePrefix={arXiv},\r\n      primaryClass={quant-ph}\r\n}\r\n```\r\n\r\n\r\n# Authors\r\nThis project has been developed thanks to the effort of the following people:\r\n\r\n* Giovanni Di Bartolomeo (dibartolomeo.giov@gmail.com)\r\n* Michele Vischi (vischimichele@gmail.com)\r\n* Francesco Cesa\r\n* Michele Grossi (michele.grossi@cern.ch) \r\n* Sandro Donadi\r\n* Angelo Bassi \r\n* Roman Wixinger (roman.wixinger@gmail.com)\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CERN-IT-INNOVATION/quantum-gates/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "quantum-gates",
    "package_url": "https://pypi.org/project/quantum-gates/",
    "platform": null,
    "project_url": "https://pypi.org/project/quantum-gates/",
    "project_urls": {
      "Homepage": "https://github.com/CERN-IT-INNOVATION/quantum-gates/"
    },
    "release_url": "https://pypi.org/project/quantum-gates/1.0.4/",
    "requires_dist": [
      "numpy (>=1.22)",
      "qiskit (>=0.39.2)",
      "qiskit-ibm-provider",
      "scipy",
      "matplotlib",
      "pylatexenc",
      "opt-einsum",
      "jupyter ; extra == 'demo'",
      "sphinx (>=4.5.0) ; extra == 'docs'",
      "sphinx-rtd-theme (>=1.0.0) ; extra == 'docs'",
      "sphinxcontrib-napoleon (>=0.7) ; extra == 'docs'",
      "sphinx-autoapi (>=2.0.1) ; extra == 'docs'"
    ],
    "requires_python": ">=3.9",
    "summary": "Quantum Noisy Gates Simulation with Python",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17493997,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3242af7fffecf8e9d4589a97d98888600d445ac8aa601eb409073a1b57d7c1e8",
          "md5": "3d7c4865f8fff2cd1824174d28946be7",
          "sha256": "c6208b2c5e51dcc32d565fbeec41e8a5567f9637becf1b84fac81333b244d8a2"
        },
        "downloads": -1,
        "filename": "quantum_gates-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d7c4865f8fff2cd1824174d28946be7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 45148,
        "upload_time": "2023-02-02T20:37:12",
        "upload_time_iso_8601": "2023-02-02T20:37:12.078539Z",
        "url": "https://files.pythonhosted.org/packages/32/42/af7fffecf8e9d4589a97d98888600d445ac8aa601eb409073a1b57d7c1e8/quantum_gates-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa3f9847c7a7632d39bd15dbbf35b3c488375d55467c495d77b3ee45d0f96530",
          "md5": "855342dce592f78cd76594d0a42991a7",
          "sha256": "04d87f4cd6bc6a40c7e600d81154f7751e8fa4f212466b3f1f4b3b7d979d0a53"
        },
        "downloads": -1,
        "filename": "quantum-gates-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "855342dce592f78cd76594d0a42991a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 51951,
        "upload_time": "2023-02-02T20:37:14",
        "upload_time_iso_8601": "2023-02-02T20:37:14.063595Z",
        "url": "https://files.pythonhosted.org/packages/aa/3f/9847c7a7632d39bd15dbbf35b3c488375d55467c495d77b3ee45d0f96530/quantum-gates-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52261b9175d9c8a7b99d8286100d3cce5ccd888e35d956df8d26eddd54980ce1",
          "md5": "4f84038ff48e62491ce7bbcfa5974934",
          "sha256": "004070bef4c78632cd45187f41859e211d86eb574bd44f5ee7240e34068beb5d"
        },
        "downloads": -1,
        "filename": "quantum_gates-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f84038ff48e62491ce7bbcfa5974934",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 45145,
        "upload_time": "2023-02-02T20:50:03",
        "upload_time_iso_8601": "2023-02-02T20:50:03.687420Z",
        "url": "https://files.pythonhosted.org/packages/52/26/1b9175d9c8a7b99d8286100d3cce5ccd888e35d956df8d26eddd54980ce1/quantum_gates-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c33d75868bcd7fb640ff6766a01a01808eb4ba9ee705c2367426886f6d991214",
          "md5": "594bbd84f61337f255c10ee7a5f8da53",
          "sha256": "7b7bb2f871b0eacb944f3696b72928b77a34ef7f4012deb17c45400e6ecfd41d"
        },
        "downloads": -1,
        "filename": "quantum-gates-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "594bbd84f61337f255c10ee7a5f8da53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 51951,
        "upload_time": "2023-02-02T20:50:04",
        "upload_time_iso_8601": "2023-02-02T20:50:04.971274Z",
        "url": "https://files.pythonhosted.org/packages/c3/3d/75868bcd7fb640ff6766a01a01808eb4ba9ee705c2367426886f6d991214/quantum-gates-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "618992284c3091cade2db4a02741e0f4304fe8d85c5f2d04d07871bfc54ba3d0",
          "md5": "f094c8819a66546c9a75169eb04c5a79",
          "sha256": "75611c1e1868a1131902e9cb170aa6e658d05e20e4305f12b53685b0b200e426"
        },
        "downloads": -1,
        "filename": "quantum_gates-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f094c8819a66546c9a75169eb04c5a79",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 45138,
        "upload_time": "2023-02-02T21:16:34",
        "upload_time_iso_8601": "2023-02-02T21:16:34.403575Z",
        "url": "https://files.pythonhosted.org/packages/61/89/92284c3091cade2db4a02741e0f4304fe8d85c5f2d04d07871bfc54ba3d0/quantum_gates-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77e37a0bed808806378c0a3305f6125c61e091da081f619e34b0c0bcecc4ad6f",
          "md5": "82f00c423daa979a978f2ebe840d46f0",
          "sha256": "bf35826706e4c6989b5fbe453be56d5760368669497a0c795960c1056c12643e"
        },
        "downloads": -1,
        "filename": "quantum-gates-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "82f00c423daa979a978f2ebe840d46f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 51952,
        "upload_time": "2023-02-02T21:16:36",
        "upload_time_iso_8601": "2023-02-02T21:16:36.196153Z",
        "url": "https://files.pythonhosted.org/packages/77/e3/7a0bed808806378c0a3305f6125c61e091da081f619e34b0c0bcecc4ad6f/quantum-gates-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ef005c991e001811eabe9a147e92813cb9c26a02846e2a0f61d1f3ce4039949",
          "md5": "99b0f1285d33c93a0e0cda934ed4f85f",
          "sha256": "9de62c6c5885c1cda82f30e131322426be5b4b1bfb488df160fcb760b5194eb2"
        },
        "downloads": -1,
        "filename": "quantum_gates-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "99b0f1285d33c93a0e0cda934ed4f85f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 45690,
        "upload_time": "2023-03-02T15:13:11",
        "upload_time_iso_8601": "2023-03-02T15:13:11.740058Z",
        "url": "https://files.pythonhosted.org/packages/0e/f0/05c991e001811eabe9a147e92813cb9c26a02846e2a0f61d1f3ce4039949/quantum_gates-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fb3e4bcc6c0dd0a1c3bb6bad3b95c805263b0dbc7cf8f91f85db3f7c8a28988",
          "md5": "77a6e5c5247791e7a148b33884f49e20",
          "sha256": "4fdf230b24bdd27007fae5eb66aa1825e60dbfb92e4e96ace3b99d07eb32d7b7"
        },
        "downloads": -1,
        "filename": "quantum-gates-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "77a6e5c5247791e7a148b33884f49e20",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 59358,
        "upload_time": "2023-03-02T15:13:13",
        "upload_time_iso_8601": "2023-03-02T15:13:13.320190Z",
        "url": "https://files.pythonhosted.org/packages/8f/b3/e4bcc6c0dd0a1c3bb6bad3b95c805263b0dbc7cf8f91f85db3f7c8a28988/quantum-gates-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3c85e7a65276894db4adafef86671274c513e38412fafb234f84016dcc47ef4",
          "md5": "b828885dfaf9266a6fde21191a36c8b1",
          "sha256": "ce8f0d2672c3e61d5795062a00f26468ab5b9a1551b7ebc887d33841cd6b309c"
        },
        "downloads": -1,
        "filename": "quantum_gates-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b828885dfaf9266a6fde21191a36c8b1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 50211,
        "upload_time": "2023-03-29T13:07:39",
        "upload_time_iso_8601": "2023-03-29T13:07:39.201261Z",
        "url": "https://files.pythonhosted.org/packages/b3/c8/5e7a65276894db4adafef86671274c513e38412fafb234f84016dcc47ef4/quantum_gates-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7ca6db5444a3fa8f5803e2a584c7a4646ccf57c3f5aca5421b0adebc8fc4311",
          "md5": "cb2ebe960177056c8ada5e8f5eaa4b47",
          "sha256": "95d136234b4550a88bfb51b3e05fc9b5e8439262c9c603fe6c9b19d0fe46df03"
        },
        "downloads": -1,
        "filename": "quantum-gates-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cb2ebe960177056c8ada5e8f5eaa4b47",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 4154570,
        "upload_time": "2023-03-29T13:07:42",
        "upload_time_iso_8601": "2023-03-29T13:07:42.025562Z",
        "url": "https://files.pythonhosted.org/packages/f7/ca/6db5444a3fa8f5803e2a584c7a4646ccf57c3f5aca5421b0adebc8fc4311/quantum-gates-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b3c85e7a65276894db4adafef86671274c513e38412fafb234f84016dcc47ef4",
        "md5": "b828885dfaf9266a6fde21191a36c8b1",
        "sha256": "ce8f0d2672c3e61d5795062a00f26468ab5b9a1551b7ebc887d33841cd6b309c"
      },
      "downloads": -1,
      "filename": "quantum_gates-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b828885dfaf9266a6fde21191a36c8b1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 50211,
      "upload_time": "2023-03-29T13:07:39",
      "upload_time_iso_8601": "2023-03-29T13:07:39.201261Z",
      "url": "https://files.pythonhosted.org/packages/b3/c8/5e7a65276894db4adafef86671274c513e38412fafb234f84016dcc47ef4/quantum_gates-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f7ca6db5444a3fa8f5803e2a584c7a4646ccf57c3f5aca5421b0adebc8fc4311",
        "md5": "cb2ebe960177056c8ada5e8f5eaa4b47",
        "sha256": "95d136234b4550a88bfb51b3e05fc9b5e8439262c9c603fe6c9b19d0fe46df03"
      },
      "downloads": -1,
      "filename": "quantum-gates-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "cb2ebe960177056c8ada5e8f5eaa4b47",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 4154570,
      "upload_time": "2023-03-29T13:07:42",
      "upload_time_iso_8601": "2023-03-29T13:07:42.025562Z",
      "url": "https://files.pythonhosted.org/packages/f7/ca/6db5444a3fa8f5803e2a584c7a4646ccf57c3f5aca5421b0adebc8fc4311/quantum-gates-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}