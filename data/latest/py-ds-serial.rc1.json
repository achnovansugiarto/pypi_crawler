{
  "info": {
    "author": "Alberto L칩pez S치nchez",
    "author_email": "ctbeamlines@cells.es",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# ALBA Python Serial DeviceServer\n\n\n[![ALBA Python Serial DeviceServer](https://img.shields.io/pypi/v/tango_serial.svg)](https://pypi.python.org/pypi/tango_serial)\n\n\n[![ALBA Python Serial DeviceServer updates](https://pyup.io/repos/github/catunlock/tango_serial/shield.svg)](https://pyup.io/repos/github/catunlock/tango_serial/)\n\n\nALBA Python Serial with tango DeviceServer\n\n\nApart from the core library, an optional [tango](https://tango-controls.org/) device server is also provided.\n\n\n## Installation\n\nFrom within your favorite python environment type:\n\n`$ pip install tango_serial`\n\n## Library\n\nThe core of the tango_serial library consists of Serial object.\nTo create a Serial object you need to pass a communication object.\n\nThe communication object can be any object that supports a simple API\nconsisting of two methods (either the sync or async version is supported):\n\n* `write_readline(buff: bytes) -> bytes` *or*\n\n  `async write_readline(buff: bytes) -> bytes`\n\n* `write(buff: bytes) -> None` *or*\n\n  `async write(buff: bytes) -> None`\n\nA library that supports this API is [sockio](https://pypi.org/project/sockio/)\n(ALBA Python Serial DeviceServer comes pre-installed so you don't have to worry\nabout installing it).\n\nThis library includes both async and sync versions of the TCP object. It also\nsupports a set of features like re-connection and timeout handling.\n\nHere is how to connect to a Serial controller:\n\n```python\nimport asyncio\n\nfrom sockio.aio import TCP\nfrom tango_serial import Serial\n\n\nasync def main():\n    tcp = TCP(\"192.168.1.123\", 5000)  # use host name or IP\n    tango_serial_dev = Serial(tcp)\n\n    idn = await tango_serial_dev.idn()\n    print(\"Connected to {} ({})\".format(idn))\n\n\nasyncio.run(main())\n```\n\n### Tango server\n\nA [tango](https://tango-controls.org/) device server is also provided.\n\nMake sure everything is installed with:\n\n`$ pip install tango_serial[tango]`\n\nRegister a Serial tango server in the tango database:\n```\n$ tangoctl server add -s Serial/test -d Serial test/tango_serial/1\n$ tangoctl device property write -d test/tango_serial/1 -p address -v \"tcp://192.168.123:5000\"\n```\n\n(the above example uses [tangoctl](https://pypi.org/project/tangoctl/). You would need\nto install it with `pip install tangoctl` before using it. You are free to use any other\ntango tool like [fandango](https://pypi.org/project/fandango/) or Jive)\n\nLaunch the server with:\n\n```terminal\n$ Serial test\n```\n\n\n## Credits\n\n### Development Lead\n\n* Alberto L칩pez S치nchez <alopez@cells.es>\n* CTBeamlines (ctbeamlines@cells.es)\n\n### Contributors\n\nNone yet. Why not be the first?\n\n\n## History\n\n### 0.1.0 (2020-12-15)\n\n* First release on PyPI.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/catunlock/py_ds_serial",
    "keywords": "py_ds_serial",
    "license": "GNU General Public License v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-ds-serial",
    "package_url": "https://pypi.org/project/py-ds-serial/",
    "platform": "",
    "project_url": "https://pypi.org/project/py-ds-serial/",
    "project_urls": {
      "Homepage": "https://github.com/catunlock/py_ds_serial"
    },
    "release_url": "https://pypi.org/project/py-ds-serial/0.1.0/",
    "requires_dist": [
      "connio",
      "pytango ; extra == 'all'",
      "pytango ; extra == 'tango'"
    ],
    "requires_python": ">=3.5",
    "summary": "ALBA Python Serial with tango DeviceServer",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8925210,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ad68c89d469d7c534a96fe0f967b560aa09a4bd3bcbe83f9306108feab595d9",
          "md5": "bf58051b1db1d239708657710fe9ebbc",
          "sha256": "4bb4ab485d65b526096e68dec4e5c966ce4256e384f539337ee4ff775e518038"
        },
        "downloads": -1,
        "filename": "py_ds_serial-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf58051b1db1d239708657710fe9ebbc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 3769,
        "upload_time": "2020-12-17T16:06:17",
        "upload_time_iso_8601": "2020-12-17T16:06:17.325857Z",
        "url": "https://files.pythonhosted.org/packages/5a/d6/8c89d469d7c534a96fe0f967b560aa09a4bd3bcbe83f9306108feab595d9/py_ds_serial-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac0613d7ab34f287a33077eff3db01086c72b070ec2282cbc95fcf7c905a44d3",
          "md5": "2193e7e80698eaeb91bbc396d8673c89",
          "sha256": "34da6b8987a605a33e1017fd14737b651ae6a9b0adfb8b6f85419ee3005ad726"
        },
        "downloads": -1,
        "filename": "py_ds_serial-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2193e7e80698eaeb91bbc396d8673c89",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 9065,
        "upload_time": "2020-12-17T16:06:18",
        "upload_time_iso_8601": "2020-12-17T16:06:18.764838Z",
        "url": "https://files.pythonhosted.org/packages/ac/06/13d7ab34f287a33077eff3db01086c72b070ec2282cbc95fcf7c905a44d3/py_ds_serial-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ad68c89d469d7c534a96fe0f967b560aa09a4bd3bcbe83f9306108feab595d9",
        "md5": "bf58051b1db1d239708657710fe9ebbc",
        "sha256": "4bb4ab485d65b526096e68dec4e5c966ce4256e384f539337ee4ff775e518038"
      },
      "downloads": -1,
      "filename": "py_ds_serial-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bf58051b1db1d239708657710fe9ebbc",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.5",
      "size": 3769,
      "upload_time": "2020-12-17T16:06:17",
      "upload_time_iso_8601": "2020-12-17T16:06:17.325857Z",
      "url": "https://files.pythonhosted.org/packages/5a/d6/8c89d469d7c534a96fe0f967b560aa09a4bd3bcbe83f9306108feab595d9/py_ds_serial-0.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ac0613d7ab34f287a33077eff3db01086c72b070ec2282cbc95fcf7c905a44d3",
        "md5": "2193e7e80698eaeb91bbc396d8673c89",
        "sha256": "34da6b8987a605a33e1017fd14737b651ae6a9b0adfb8b6f85419ee3005ad726"
      },
      "downloads": -1,
      "filename": "py_ds_serial-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2193e7e80698eaeb91bbc396d8673c89",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 9065,
      "upload_time": "2020-12-17T16:06:18",
      "upload_time_iso_8601": "2020-12-17T16:06:18.764838Z",
      "url": "https://files.pythonhosted.org/packages/ac/06/13d7ab34f287a33077eff3db01086c72b070ec2282cbc95fcf7c905a44d3/py_ds_serial-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}