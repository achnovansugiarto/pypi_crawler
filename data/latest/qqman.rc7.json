{
  "info": {
    "author": "chol hong",
    "author_email": "shulkhorn@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<h1 style=\"text-align:center\">qqman for Python</h1>\n\n![Install with pypi or anaconda](https://img.shields.io/badge/version-v1.0.6-green)\n\nIf you want to check out the source code or have any issues please leave a comment at my [github](https://github.com/satchellhong/qqman) repository. <br>\nThis library is inspired by r-qqman (see [here](https://github.com/stephenturner/qqman)). <br>\nIt also contains/will contain other methods for python users.<br>\n\n---\n## Contents\n1. [Introduction](#h1)<br>\n1.1. [Installation](#h11)<br>\n1.2. [Requirements](#h12)<br>\n1.3. [Features](#h13)<br>\n2. [Manhattan Plot](#h2)<br>\n2.1. [Parameters](#h21)<br>\n2.2. [Examples](#h22)<br>\n3. [QQ Plot](#h3)<br>\n3.1. [Parameters](#h31)<br>\n3.2. [Examples](#h32)<br>\n---\n\n## <a name=\"h1\">1. Introduction</a>\n\n### <a name=\"h11\">1.1. Installation</a>\n#### Using pip\n```console\n$ pip install qqman\n```\n\n### <a name=\"h12\">1.2. Requirements</a>\n- matplotlib\n- pandas\n- numpy\n\n#### pip\n```console\n$ pip install numpy\n$ pip install pandas\n$ pip install matplotlib\n```\n\n#### ananconda\n```console\n$ conda install -c anaconda numpy\n$ conda install -y -c anaconda pandas\n$ conda install -y -c conda-forge matplotlib\n```\n\n### <a name=\"h13\">1.3. Features</a>\n1. [Manhattan Plot](#h2)<br>\n2. [QQ Plot](#h3)<br>\n\n## <a name=\"h2\">2. Manhattan Plot</a>\n\nDraws Manhattan plot from PLINK --assoc output or any assoc formatted data that contains [chromosome/basepair/p-value] as columns.\n\n### <a name=\"h21\">2.1. Parameters</a>\n<table style=\"border-collapse: collapse; border: none; text-align: left;\">\n<tr>\n<th>\n<code>assoc</code> : string or pandas.DataFrame\n</th>\n<th>\n- Input file path and name of the Plink assoc output.<br>\n- Pandas DataFrame with columns [chromosome/basepair/p-value]\n</th>\n</tr>\n<tr>\n<th><code>out</code> : string<br>( optional )</th>\n<th>Output path and file name of the plot. (ie. out=\"./Manhattan.png\")</th>\n</tr>\n<tr>\n<th><code>cmap</code> : Colormap<br>( optional : default=Greys_r )</th>\n<th>A Colormap instance or registered colormap name. matplotlib.cm.get_cmap()</th>\n</tr>\n<tr>\n<th><code>cmap_var</code> : int or list<br>( optional : default=2 )</th>\n<th>int : Number of colors to use<br>list : Specific colors to use in colormap</th>\n</tr>\n<tr>\n<th><code>show</code> : bool<br>( optional )</th>\n<th>If true, the plot will be shown on your screen. (This option doesn't work in CUI environment.)</th>\n</tr>\n<tr>\n<th><code>gap</code> : float<br>( optional : default=10)</th>\n<th>A size of gaps between the group of scatter markers of each chromosome in Manhattan plot</th>\n</tr>\n<tr>\n<th><code>ax</code> : subplot<br>( optional )</th>\n<th>If given, this subplot is used to plot in instead of a new figure being created.</th>\n</tr>\n<tr>\n<th><code>title</code> : string<br>( optional )</th>\n<th>A title of the plot.</th>\n</tr>\n<tr>\n<th><code>title_size</code> : int<br>( optional )</th>\n<th>A size of the title of the plot.</th>\n</tr>\n<tr>\n<th><code>label_size</code> : int<br>( optional )</th>\n<th>A size of x and y labels of the plot.</th>\n</tr>\n<tr>\n<th><code>xtick_size</code> : int<br>( optional )</th>\n<th>A size of xtick labels.</th>\n</tr>\n<tr>\n<th><code>ytick_size</code> : int<br>( optional )</th>\n<th>A size of ytick labels.</th>\n</tr>\n<tr>\n<th><code>xrotation</code> : float<br>( optional )</th>\n<th>A rotation degree of xtick labels.</th>\n</tr>\n<tr>\n<th><code>yrotation</code> : float<br>( optional )</th>\n<th>A rotation degree of ytick labels.</th>\n</tr>\n<tr>\n<th><code>col_chr</code> : string<br>( optional : default=\"CHR\" )</th>\n<th>A string denoting the column name for the chromosome. Defaults to PLINK’s \"CHR\" Said column must be numeric.<br>\n If you have X, Y, or MT chromosomes, be sure to renumber these 23, 24, 25, etc.\n</th>\n</tr>\n<tr>\n<th><code>col_bp</code> : string<br>( optional : default=\"BP\" )</th>\n<th>A string denoting the column name for the chromosomal position. Defaults to PLINK’s \"BP\" Said column must be numeric.</th>\n</tr>\n<tr>\n<th><code>col_p</code> : string<br>( optional : default=\"P\" )</th>\n<th>A string denoting the column name for the p-value. Defaults to PLINK’s \"P\" Said column must be numeric.</th>\n</tr>\n<tr>\n<th><code>col_snp</code> : string<br>( optional : default=\"SNP\" )</th>\n<th>A string denoting the column name for the SNP name (rs number). Defaults to PLINK’s \"SNP\" Said column should be a character</th>\n</tr>\n<tr>\n<th><code>suggestiveline</code> : string<br>( optional : default=-log_10(1e-5) )</th>\n<th>Where to draw a \"suggestive\" line. Set to False to disable.</th>\n</tr>\n<tr>\n<th><code>genomewideline</code> : string<br>( optional : default=-log_10(5e-8) )</th>\n<th>Where to draw a \"genome-wide sigificant\" line. Set to False to disable.</th>\n</tr>\n</table>\n\n### <a name=\"h22\">2.2. Examples</a>\n\n#### 2.2.1. Simple\n```python\nfrom qqman import qqman\n\nif __name__ == \"__main__\":\n\tqqman.manhattan(\"../../temp.assoc\",out=\"./Manhattan.png\")\n```\n<img src=\"https://github.com/satchellhong/qqman/blob/master/static/images/Manhattan.png?raw=true\" alt=\"Simple Manhattan Plot\" width=\"600\" height=\"600\">\n\n#### 2.2.2. Using Subplot\n```python\nfrom qqman import qqman\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nif __name__ == \"__main__\":\n\tdf_assoc = pd.read_csv(\"../../temp.assoc\", header=0, delim_whitespace=True)\n\n\tfigure, axes = plt.subplots(nrows=2, ncols=2, figsize = (20,20))\n\n\tqqman.manhattan(\"../../temp.assoc\", ax=axes[0,0],title=\"Wider gap 100\", gap=100)\n\tqqman.manhattan(\"../../temp.assoc\", ax=axes[0,1],title=\"No lines\",suggestiveline=False, genomewideline=False)\n\tqqman.manhattan(\"../../temp.assoc\", ax=axes[1,0],title=\"Different colormap\",cmap=plt.get_cmap(\"jet\"),cmap_var=10)\n\tqqman.manhattan(df_assoc, ax=axes[1,1],title=\"From DataFrame with xtick rotation\",xrotation=45)\n\n\tfigure.tight_layout()\n\tplt.savefig(\"./manhattan.png\",format=\"png\")\n\tplt.clf()\n\tplt.close()\n```\n<img src=\"https://github.com/satchellhong/qqman/blob/master/static/images/SubManhattan.png?raw=true\" alt=\"Simple Manhattan Plot\" width=\"600\" height=\"600\">\n\n## <a name=\"h3\">3. QQ Plot</a>\n\nDraws a quantile-quantile plot from p-values of GWAS.\n\n### <a name=\"h31\">3.1. Parameters</a>\n\n<table style=\"border-collapse: collapse; border: none; text-align: left;\">\n<tr>\n<th>\n<code>assoc</code><br>\ntypes: [string, pandas.DataFrame, numpy.array, list]\n</th>\n<th>\n- Input file path and name of the Plink assoc output.<br>\n- Pandas DataFrame with columns [chromosome/basepair/p-value]\n</th>\n</tr>\n<tr>\n<th><code>out</code> : string<br>( optional )</th>\n<th>Output path and file name of the plot. (ie. out=\"./Manhattan.png\")</th>\n</tr>\n<tr>\n<th><code>show</code> : bool<br>( optional )</th>\n<th>If true, the plot will be shown on your screen. (This option doesn't work in CUI environment.)</th>\n</tr>\n<tr>\n<th><code>ax</code> : subplot<br>( optional )</th>\n<th>If given, this subplot is used to plot in instead of a new figure being created.</th>\n</tr>\n<tr>\n<th><code>title</code> : string<br>( optional )</th>\n<th>A title of the plot.</th>\n</tr>\n<tr>\n<th><code>title_size</code> : int<br>( optional )</th>\n<th>A size of the title of the plot.</th>\n</tr>\n<tr>\n<th><code>label_size</code> : int<br>( optional )</th>\n<th>A size of x and y labels of the plot.</th>\n</tr>\n<tr>\n<th><code>xtick_size</code> : int<br>( optional )</th>\n<th>A size of xtick labels.</th>\n</tr>\n<tr>\n<th><code>ytick_size</code> : int<br>( optional )</th>\n<th>A size of ytick labels.</th>\n</tr>\n<tr>\n<th><code>xrotation</code> : float<br>( optional )</th>\n<th>A rotation degree of xtick labels.</th>\n</tr>\n<tr>\n<th><code>yrotation</code> : float<br>( optional )</th>\n<th>A rotation degree of ytick labels.</th>\n</tr>\n<tr>\n<th><code>col_p</code> : string<br>( optional : default=\"P\" )</th>\n<th>A string denoting the column name for the p-value. Defaults to PLINK’s \"P\" Said column must be numeric.</th>\n</tr>\n</table>\n\n### <a name=\"h32\">3.2. Examples</a>\n\n#### 3.2.1. Simple\n```python\nfrom qqman import qqman\n\nif __name__ == \"__main__\":\n\tqqman.qqplot(\"../../temp.assoc\",out=\"./QQplot.png\")\n```\n\n<img src=\"https://github.com/satchellhong/qqman/blob/master/static/images/QQplot.png?raw=true\" alt=\"Simple Manhattan Plot\" width=\"600\" height=\"600\">\n\n#### 3.2.2. Using Subplot\n```python\nfrom qqman import qqman\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nif __name__ == \"__main__\":\n\tdf_assoc = pd.read_csv(\"../../temp.assoc\", header=0, delim_whitespace=True)\n\tp_vals = list(df_assoc['P'])\n\n\tfigure, axes = plt.subplots(nrows=2, ncols=2, figsize = (20,20))\n\n\tqqman.qqplot(\"../../temp.assoc\", ax=axes[0,0],title=\"From file\")\n\tqqman.qqplot(p_vals, ax=axes[0,1],title=\"From list\")\n\tqqman.qqplot(df_assoc.P, ax=axes[1,0],title=\"From Series\")\n\tqqman.qqplot(df_assoc, ax=axes[1,1],title=\"From DataFrame\")\n\n\tfigure.tight_layout()\n\tplt.savefig(\"./SubQQplot.png\",format=\"png\")\n\tplt.clf()\n\tplt.close()\n```\n\n<img src=\"https://github.com/satchellhong/qqman/blob/master/static/images/SubQQplot.png?raw=true\" alt=\"Simple Manhattan Plot\" width=\"600\" height=\"600\">\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/satchellhong/qqman",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "qqman",
    "package_url": "https://pypi.org/project/qqman/",
    "platform": "",
    "project_url": "https://pypi.org/project/qqman/",
    "project_urls": {
      "Homepage": "https://github.com/satchellhong/qqman"
    },
    "release_url": "https://pypi.org/project/qqman/1.0.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Draws Manhattan plot and QQ plot using plink assoc output.",
    "version": "1.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8001351,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "caddd207b2f87505af9e3b95950d0857b7e452cd9d68c8f2d12f87b4fea015a4",
          "md5": "0ae0c1e83ef6aacf43c58b9c4f5b090f",
          "sha256": "d2927e3d58cff5efef66525891685851070965eb27e16e4ca0c352201b621b2f"
        },
        "downloads": -1,
        "filename": "qqman-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ae0c1e83ef6aacf43c58b9c4f5b090f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7117,
        "upload_time": "2020-08-20T02:39:41",
        "upload_time_iso_8601": "2020-08-20T02:39:41.486612Z",
        "url": "https://files.pythonhosted.org/packages/ca/dd/d207b2f87505af9e3b95950d0857b7e452cd9d68c8f2d12f87b4fea015a4/qqman-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "773d0aed5aaca5d499baba9366b6c700a94d3178e81920d4960d678237e114ca",
          "md5": "f0a9a016335c75d09c2d4c415203b03d",
          "sha256": "515a986139e9af94202ae816ca324a2b19556ebb3d8fbb8a6ca1b01f1232dd27"
        },
        "downloads": -1,
        "filename": "qqman-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f0a9a016335c75d09c2d4c415203b03d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6235,
        "upload_time": "2020-08-20T02:39:44",
        "upload_time_iso_8601": "2020-08-20T02:39:44.378309Z",
        "url": "https://files.pythonhosted.org/packages/77/3d/0aed5aaca5d499baba9366b6c700a94d3178e81920d4960d678237e114ca/qqman-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b350464562a1ad8a7eb31fcdbf1e742100c7bc1edf7ccfd17de9527868fbf2f",
          "md5": "c7037a3f29fbe2bffa5ae227b74c627f",
          "sha256": "72e92836386fa916dccf8dffb5206d526b29f0c7925de4afe704816887149a80"
        },
        "downloads": -1,
        "filename": "qqman-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c7037a3f29fbe2bffa5ae227b74c627f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7182,
        "upload_time": "2020-08-20T02:50:03",
        "upload_time_iso_8601": "2020-08-20T02:50:03.515107Z",
        "url": "https://files.pythonhosted.org/packages/9b/35/0464562a1ad8a7eb31fcdbf1e742100c7bc1edf7ccfd17de9527868fbf2f/qqman-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb3aed53a4b1fc826fdf827efe9a7c36be16f93dad1da9064bc176661a84e20e",
          "md5": "e22548616cf423da1968c796a58ad664",
          "sha256": "4b38bb37edac1d40d3a7ed823b8a0225e246b2cf76f00b3ebbfc4dd3f25f656e"
        },
        "downloads": -1,
        "filename": "qqman-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e22548616cf423da1968c796a58ad664",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6312,
        "upload_time": "2020-08-20T02:50:05",
        "upload_time_iso_8601": "2020-08-20T02:50:05.290779Z",
        "url": "https://files.pythonhosted.org/packages/fb/3a/ed53a4b1fc826fdf827efe9a7c36be16f93dad1da9064bc176661a84e20e/qqman-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7fd63062cb5156db1dbf8165c1a4628913cb7bb68890dbb658d98122e278f64",
          "md5": "d144cc808f86961143aaa366c6b4d800",
          "sha256": "a389dff975cc6baeea6fbb22a42a963c4a702067d0f4ebf272eab50d94f82b6d"
        },
        "downloads": -1,
        "filename": "qqman-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d144cc808f86961143aaa366c6b4d800",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7182,
        "upload_time": "2020-08-20T03:11:52",
        "upload_time_iso_8601": "2020-08-20T03:11:52.255582Z",
        "url": "https://files.pythonhosted.org/packages/d7/fd/63062cb5156db1dbf8165c1a4628913cb7bb68890dbb658d98122e278f64/qqman-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5029d3bb03a8aa389d1cedf4b4928633f9d1e733c4cc045c7d53293aa6dde567",
          "md5": "a15b5ffd4888c1d6ba574af804313633",
          "sha256": "2cc8075f7e60a76aa79937cbf4aca40767ad6f429a263cbe91b5525205c4f69d"
        },
        "downloads": -1,
        "filename": "qqman-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a15b5ffd4888c1d6ba574af804313633",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6311,
        "upload_time": "2020-08-20T03:11:54",
        "upload_time_iso_8601": "2020-08-20T03:11:54.118476Z",
        "url": "https://files.pythonhosted.org/packages/50/29/d3bb03a8aa389d1cedf4b4928633f9d1e733c4cc045c7d53293aa6dde567/qqman-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1654979419c2d584dfced273f6bd4911bb6072acbbf3f48b26bb00463309e602",
          "md5": "20ea324596ebb9e256f7e6218dde2551",
          "sha256": "3978c31ce91425930693204fbf808a400801cad51bb15dace96a6a5b2edbe98e"
        },
        "downloads": -1,
        "filename": "qqman-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "20ea324596ebb9e256f7e6218dde2551",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7182,
        "upload_time": "2020-08-20T03:14:41",
        "upload_time_iso_8601": "2020-08-20T03:14:41.450538Z",
        "url": "https://files.pythonhosted.org/packages/16/54/979419c2d584dfced273f6bd4911bb6072acbbf3f48b26bb00463309e602/qqman-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7062d22e49b2fa368ca3d1795466c5d64ebe1e2227179b8e5a8ad8093692639e",
          "md5": "64c07e75426fec66b86981fdc7e6c780",
          "sha256": "b1ad61e2f6ff0f031f785970cb2b3748a0bd5f9c69d5d46c5bd24e44821cc398"
        },
        "downloads": -1,
        "filename": "qqman-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "64c07e75426fec66b86981fdc7e6c780",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6315,
        "upload_time": "2020-08-20T03:14:43",
        "upload_time_iso_8601": "2020-08-20T03:14:43.561342Z",
        "url": "https://files.pythonhosted.org/packages/70/62/d22e49b2fa368ca3d1795466c5d64ebe1e2227179b8e5a8ad8093692639e/qqman-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c60b0e35d135eb0d66ce39651ce83962c2520b532f1030409e883fd05ef7f985",
          "md5": "225fa770d47a4b707d34cd38c63d83ae",
          "sha256": "e629a9fb5f52add30e57857d5ce97a51e0ad3f57358446d40f119ca63a3ebed6"
        },
        "downloads": -1,
        "filename": "qqman-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "225fa770d47a4b707d34cd38c63d83ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7229,
        "upload_time": "2020-08-20T03:26:42",
        "upload_time_iso_8601": "2020-08-20T03:26:42.848331Z",
        "url": "https://files.pythonhosted.org/packages/c6/0b/0e35d135eb0d66ce39651ce83962c2520b532f1030409e883fd05ef7f985/qqman-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d03dc3ea6930258e09fb0d6c71ec8582dfcfcbb06fd5dcb5803646a3c5977fc",
          "md5": "79b3446d59df4b636832af88e377c819",
          "sha256": "5b3d57e33a73611779b96a9f1fc9522f53fbe55113c0c8927d735329d209ecbd"
        },
        "downloads": -1,
        "filename": "qqman-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "79b3446d59df4b636832af88e377c819",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6423,
        "upload_time": "2020-08-20T03:26:44",
        "upload_time_iso_8601": "2020-08-20T03:26:44.706778Z",
        "url": "https://files.pythonhosted.org/packages/8d/03/dc3ea6930258e09fb0d6c71ec8582dfcfcbb06fd5dcb5803646a3c5977fc/qqman-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c67e0e886aad4f12db6bcd479b2def56b7910c00c965bd81d5b4b1ae20e3629e",
          "md5": "b73b40fcf68a4cd39b3f4e36af51ecae",
          "sha256": "9aba5742c2469ff91859a20f95a16390fe922b2743bcbc8fd949e7eeaf6c7a8a"
        },
        "downloads": -1,
        "filename": "qqman-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b73b40fcf68a4cd39b3f4e36af51ecae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7230,
        "upload_time": "2020-08-20T03:41:56",
        "upload_time_iso_8601": "2020-08-20T03:41:56.656737Z",
        "url": "https://files.pythonhosted.org/packages/c6/7e/0e886aad4f12db6bcd479b2def56b7910c00c965bd81d5b4b1ae20e3629e/qqman-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "777ec41dafbf9f4196c4c1f420dc374eb53cfb5bad8716853e43a281cb8d3c8a",
          "md5": "f63adea23757673c3ad36b220d326e7a",
          "sha256": "5c90c5fa2c3a7dd99234832a42bcbcbd2f0e52278d20886c0ef9917948086246"
        },
        "downloads": -1,
        "filename": "qqman-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f63adea23757673c3ad36b220d326e7a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6421,
        "upload_time": "2020-08-20T03:41:58",
        "upload_time_iso_8601": "2020-08-20T03:41:58.519416Z",
        "url": "https://files.pythonhosted.org/packages/77/7e/c41dafbf9f4196c4c1f420dc374eb53cfb5bad8716853e43a281cb8d3c8a/qqman-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31ae18311af4e9c300561de3baf7d6673a325c17f2dc0f2a68e57f2df74aef42",
          "md5": "13eddcee33a0bb5aec06b597eb63800e",
          "sha256": "ff07594444a8de03ca50afc27846a913ef82bf9a2dc00055a17d13ec98f22b87"
        },
        "downloads": -1,
        "filename": "qqman-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "13eddcee33a0bb5aec06b597eb63800e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7322,
        "upload_time": "2020-08-20T03:51:01",
        "upload_time_iso_8601": "2020-08-20T03:51:01.420797Z",
        "url": "https://files.pythonhosted.org/packages/31/ae/18311af4e9c300561de3baf7d6673a325c17f2dc0f2a68e57f2df74aef42/qqman-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4b945cdc4cf312d05e8d00231c4a6875b6f6293e0faca02e7ab61f98b1c6dbf",
          "md5": "5b52453ff31f493b38e90d42ff5b0565",
          "sha256": "dc7e4a280d0873d9d03ce874f0be81bdb8caa87c8848fd7bee2473a788de3174"
        },
        "downloads": -1,
        "filename": "qqman-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "5b52453ff31f493b38e90d42ff5b0565",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6589,
        "upload_time": "2020-08-20T03:51:03",
        "upload_time_iso_8601": "2020-08-20T03:51:03.206406Z",
        "url": "https://files.pythonhosted.org/packages/c4/b9/45cdc4cf312d05e8d00231c4a6875b6f6293e0faca02e7ab61f98b1c6dbf/qqman-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "31ae18311af4e9c300561de3baf7d6673a325c17f2dc0f2a68e57f2df74aef42",
        "md5": "13eddcee33a0bb5aec06b597eb63800e",
        "sha256": "ff07594444a8de03ca50afc27846a913ef82bf9a2dc00055a17d13ec98f22b87"
      },
      "downloads": -1,
      "filename": "qqman-1.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "13eddcee33a0bb5aec06b597eb63800e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7322,
      "upload_time": "2020-08-20T03:51:01",
      "upload_time_iso_8601": "2020-08-20T03:51:01.420797Z",
      "url": "https://files.pythonhosted.org/packages/31/ae/18311af4e9c300561de3baf7d6673a325c17f2dc0f2a68e57f2df74aef42/qqman-1.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c4b945cdc4cf312d05e8d00231c4a6875b6f6293e0faca02e7ab61f98b1c6dbf",
        "md5": "5b52453ff31f493b38e90d42ff5b0565",
        "sha256": "dc7e4a280d0873d9d03ce874f0be81bdb8caa87c8848fd7bee2473a788de3174"
      },
      "downloads": -1,
      "filename": "qqman-1.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "5b52453ff31f493b38e90d42ff5b0565",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6589,
      "upload_time": "2020-08-20T03:51:03",
      "upload_time_iso_8601": "2020-08-20T03:51:03.206406Z",
      "url": "https://files.pythonhosted.org/packages/c4/b9/45cdc4cf312d05e8d00231c4a6875b6f6293e0faca02e7ab61f98b1c6dbf/qqman-1.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}