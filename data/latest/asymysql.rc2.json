{
  "info": {
    "author": null,
    "author_email": "许灿标 <lcctoor@outlook.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License"
    ],
    "description": "# 项目描述\n\n异步的 mysql ORM 。\n\n# 安装与文档\n\n安装：`pip install asymysql`\n\n[文档](https://github.com/lcctoor/lccpy/blob/main/asymysql/docs/doc.md)\n\n# Bug提交、功能提议\n\n您可以通过 [Github-Issues](https://github.com/lcctoor/lccpy/issues)、[微信](https://raw.githubusercontent.com/lcctoor/me/main/author/WeChatQR.jpg)、[技术交流群](https://raw.githubusercontent.com/lcctoor/me/main/ExchangeGroup/PythonTecQR.jpg) 与我联系。\n\n# 关于作者\n\n作者：许灿标\n\n邮箱：lcctoor@outlook.com\n\n[主页](https://github.com/lcctoor/me/blob/main/home.md) | [微信](https://raw.githubusercontent.com/lcctoor/me/main/author/WeChatQR.jpg) | [Python技术微信交流群](https://raw.githubusercontent.com/lcctoor/me/main/ExchangeGroup/PythonTecQR.jpg)\n\n开源项目：[让 Python 更简单一点](https://github.com/lcctoor/lccpy#readme)\n\n# 语法预览\n\n导入：\n\n```python\nfrom aiomysql import connect\nfrom asymysql import ORM, mc, mf\n```\n\n创建ORM：\n\n```python\nasync def mkconn():\n    return await connect(\n        host = 'localhost',\n        port = 3306,\n        user = 'root',\n        password = '123456789'\n    )\n\norm = await ORM(mkconn=mkconn)  # 账户ORM\ndb = orm['泉州市']  # 库ORM\nsheet = db['希望小学']  # 表ORM\n```\n\n新增数据：\n\n```python\nline1 = {'姓名': '小一', '年龄':11, '签到日期':'2023-01-11'}\nline2 = {'姓名': '小二', '年龄':12, '签到日期':'2023-01-12'}\nline3 = {'姓名': '小三', '年龄':13, '签到日期':'2023-01-13'}\nline4 = {'姓名': '小四', '年龄':14, '签到日期':'2023-01-14'}\nline5 = {'姓名': '小五', '年龄':15, '签到日期':'2023-01-15'}\nline6 = {'姓名': '小六', '年龄':16, '签到日期':'2023-01-16'}\n\nawait sheet.insert(line1)  # 单条添加\nawait sheet.insert([ line2, line3, line4, line5, line6 ])  # 批量添加\n```\n\n查询：\n\n```python\nawait sheet[:]  # 查询所有数据\n\nawait sheet[3]  # 查询第3条数据\n\nawait sheet[mc.年龄>13][mc.姓名=='小五'][1]  # 查询年龄大于13、且姓名叫'小五'的第1条数据\n```\n\n修改：\n\n```python\ndata = {\n    '视力': 5.0,\n    '性别': '男',\n    '爱好': '足球,篮球,画画,跳绳'\n}\n\nawait sheet.update(data)[2:5]\n```\n\n删除：\n\n```python\n# 删除年龄>=15的所有数据\nawait sheet[mc.年龄>=15].delete()[:]\n\n# 删除年龄大于10、且喜欢足球的第2条数据\nawait sheet[mc.年龄>10][mc.爱好.re('足球')].delete()[2]\n\n# 删除所有数据\nawait sheet.delete()[:]\n```\n\n过滤器：\n\n| **代码** |\n| -------------- |\n| mc.年龄 > 10   |\n| mc.年龄 >= 10  |\n| mc.年龄 < 10   |\n| ...            |\n\n| **代码**               | **解释**                   |\n| ---------------------------- | -------------------------------- |\n| mc.年级.isin('初三', '高二') | 若字段值是传入值的成员，则符合   |\n| mc.年级.notin(10, 30, 45)    | 若字段值不是传入值的成员，则符合 |\n\n| **代码**   |\n| ---------------- |\n| mc.姓名.re('小') |\n\n| **代码**                                                                  | **解释** |\n| ------------------------------------------------------------------------------- | -------------- |\n| [ mc.年龄>3 ][ mc.年龄<100 ]                                                    | 交集           |\n| [ (mc.年龄==30)&#124; (mc.年龄>30) &#124; (mc.年龄<30) &#124; (mc.年龄==None) ] | 并集           |\n| [ (mc.年龄>3) - (mc.年龄>100) ]                                                 | 差集           |\n| [ ~(mc.年龄>100) ]                                                              | 补集           |\n\n只返回姓名、年龄这2个字段：\n\n```python\nawait sheet[mc.年龄>11][mc.年龄<30]['姓名','年龄'][:]\n```\n\n优先按年龄降序，其次按姓名升序，排序后返回第2~4条数据：\n\n```python\nawait sheet[mc.年龄>12].order(年龄=False, 姓名=True)[2:4]\n```\n\n统计：\n\n| **项目**  | **语法**                 | **返回**                                          |\n| --------------- | ------------------------------ | ------------------------------------------------------- |\n| 主键            | await sheet.getPK( )           | 'id'                                                    |\n| 所有字段        | await sheet.getColumns( )      | [{'name':'id', 'comment':'', 'type':'int'}, {...}, ...] |\n| 数据总量        | await sheet.len( )             | 0                                                       |\n| 年龄>10的数据量 | await sheet[mc.年龄>10].len( ) | 0                                                       |\n\norm（账户ORM）：\n\n| **功能**   | **语法**          | **返回**                                                         |\n| ---------------- | ----------------------- | ---------------------------------------------------------------------- |\n| 获取所有库的名称 | await orm.getDbNames( ) | ['information_schema', 'mysql', 'performance_schema', 'sys', '泉州市'] |\n| 统计库的数量     | await orm.len( )        | 5                                                                      |\n\ndb（库ORM）：\n\n| **功能**   | **语法**            | **返回** |\n| ---------------- | ------------------------- | -------------- |\n| 获取所有表的名称 | await db.getSheetNames( ) | ['希望小学']   |\n| 统计表的数量     | await db.len( )           | 1              |\n\n调用mysql函数：\n\n```python\n# 在查询、删除、修改的条件中使用\nawait sheet[mf.year('签到日期') == 2023][:]\nawait sheet[mf.year('签到日期') == 2029].delete()[:]\nawait sheet[mf.year('签到日期') == 2023].update({'性别':'女'})[2:5]\n\n# 在修改中使用\nawait sheet.update({'备注': '签到日期'})[:]  # 修改为'签到日期'这个字符串\nawait sheet.update({'备注': mc.签到日期})[:]  # 修改为各自的'签到日期'字段的值\nawait sheet.update({'备注': mf.year('签到日期')})[:]  # 修改为各自的'签到日期'字段的值经year处理后的值\n```\n\n执行原生SQL语句：\n\n```python\ndata, cursor = await sheet.execute('select 姓名 from 希望小学 limit 1')\ndata\n# >>> [{'姓名': '小一'}]\n\ndata, cursor = await sheet.execute('update 希望小学 set 爱好=\"编程\" limit 3')\ncursor.rowcount\n# >>> 3\n\ndata, cursor = await sheet.execute(\"delete from 希望小学 limit 2\")\ncursor.rowcount\n# >>> 2\n\nsql = 'insert into 希望小学(姓名, 年龄) values (%s, %s)'\nstudents = [('小七', 17), ('小八', 18)]\ndata, cursor = await sheet.executemany(sql, students)\ncursor.lastrowid\n# >>> 8\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": "asymysql,aiomysql,mysql,pymysql",
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "asymysql",
    "package_url": "https://pypi.org/project/asymysql/",
    "platform": null,
    "project_url": "https://pypi.org/project/asymysql/",
    "project_urls": {
      "Documentation": "https://github.com/lcctoor/lccpy/blob/main/asymysql/docs/doc.md"
    },
    "release_url": "https://pypi.org/project/asymysql/1.2/",
    "requires_dist": [
      "aiomysql",
      "vtype",
      "coolfunc"
    ],
    "requires_python": null,
    "summary": "异步的 mysql ORM",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17510368,
  "releases": {
    "1.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "44b2898db3868ea9977a93b78fbcaa6e8c60b82cf217c8e6fd58120141ecba5a",
          "md5": "2cd553a4ad2e1eac2ef72ae21752e1fe",
          "sha256": "8aef5c1ccf173c0531c5e36d57bb83d25a3b1defdc9917433742a33a820dbf28"
        },
        "downloads": -1,
        "filename": "asymysql-1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2cd553a4ad2e1eac2ef72ae21752e1fe",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 12058,
        "upload_time": "2023-03-16T14:49:32",
        "upload_time_iso_8601": "2023-03-16T14:49:32.353609Z",
        "url": "https://files.pythonhosted.org/packages/44/b2/898db3868ea9977a93b78fbcaa6e8c60b82cf217c8e6fd58120141ecba5a/asymysql-1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "b789477aec890991a33c6397c1d8d14edd307cd5abeb41cfc78a4ba0fe152a64",
          "md5": "da541924e43fb3c45e933050469e9d43",
          "sha256": "36f719a1e84733857f8d4dc747cbbadfff8c07be2987bc32d04680424708c817"
        },
        "downloads": -1,
        "filename": "asymysql-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "da541924e43fb3c45e933050469e9d43",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16492,
        "upload_time": "2023-03-16T14:49:42",
        "upload_time_iso_8601": "2023-03-16T14:49:42.774943Z",
        "url": "https://files.pythonhosted.org/packages/b7/89/477aec890991a33c6397c1d8d14edd307cd5abeb41cfc78a4ba0fe152a64/asymysql-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "fa876a71279bcfb506fe321a343efec61c0a306fbda568cdda377c6a760a567b",
          "md5": "a62168fa33e5c2239187954ffc21627d",
          "sha256": "e4f298ba84dc09db1d7e7fb5a691e2a68ed633ddbbec66ad8b93d880559e2118"
        },
        "downloads": -1,
        "filename": "asymysql-1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a62168fa33e5c2239187954ffc21627d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 12089,
        "upload_time": "2023-03-30T12:15:55",
        "upload_time_iso_8601": "2023-03-30T12:15:55.093656Z",
        "url": "https://files.pythonhosted.org/packages/fa/87/6a71279bcfb506fe321a343efec61c0a306fbda568cdda377c6a760a567b/asymysql-1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "2391ddcf67eb23fa538841b0349a974665ead46ad0978aab78f2b779ed924d42",
          "md5": "ba4ba1dbb0b31408c350a757c301ce4b",
          "sha256": "8bfa9443b2c39b3d6dbe93718d4eb5dffd40e8c0d0a9324819f66bb7b80e497d"
        },
        "downloads": -1,
        "filename": "asymysql-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ba4ba1dbb0b31408c350a757c301ce4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13388,
        "upload_time": "2023-03-30T12:15:58",
        "upload_time_iso_8601": "2023-03-30T12:15:58.147208Z",
        "url": "https://files.pythonhosted.org/packages/23/91/ddcf67eb23fa538841b0349a974665ead46ad0978aab78f2b779ed924d42/asymysql-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "fa876a71279bcfb506fe321a343efec61c0a306fbda568cdda377c6a760a567b",
        "md5": "a62168fa33e5c2239187954ffc21627d",
        "sha256": "e4f298ba84dc09db1d7e7fb5a691e2a68ed633ddbbec66ad8b93d880559e2118"
      },
      "downloads": -1,
      "filename": "asymysql-1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a62168fa33e5c2239187954ffc21627d",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 12089,
      "upload_time": "2023-03-30T12:15:55",
      "upload_time_iso_8601": "2023-03-30T12:15:55.093656Z",
      "url": "https://files.pythonhosted.org/packages/fa/87/6a71279bcfb506fe321a343efec61c0a306fbda568cdda377c6a760a567b/asymysql-1.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "2391ddcf67eb23fa538841b0349a974665ead46ad0978aab78f2b779ed924d42",
        "md5": "ba4ba1dbb0b31408c350a757c301ce4b",
        "sha256": "8bfa9443b2c39b3d6dbe93718d4eb5dffd40e8c0d0a9324819f66bb7b80e497d"
      },
      "downloads": -1,
      "filename": "asymysql-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ba4ba1dbb0b31408c350a757c301ce4b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13388,
      "upload_time": "2023-03-30T12:15:58",
      "upload_time_iso_8601": "2023-03-30T12:15:58.147208Z",
      "url": "https://files.pythonhosted.org/packages/23/91/ddcf67eb23fa538841b0349a974665ead46ad0978aab78f2b779ed924d42/asymysql-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}