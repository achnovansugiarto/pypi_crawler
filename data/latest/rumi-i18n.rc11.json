{
  "info": {
    "author": "Tianshu Li",
    "author_email": "tianshu@rotational.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# rumi\n\n> Not the ones speaking the same language, but the ones sharing the same feeling understand each other.   &mdash;Rumi\n\nRumi is a static site translation monitoring tool designed to support the localization (l10n) and internationalization (i18n) of documentation, and to facilitation the long-term maintenance of translated documentation.\n\nRumi currently supports two workflows for translation monitoring: file-based monitoring and message-based monitoring, both of which are described below.\n\n## File-based Translation Monitoring Workflow\n\n**File-based translation flow exemplified with Hugo site**\n![](https://github.com/rotationalio/rumi/raw/main/docs/images/readme/hugo_flow.png)\n\n### 1. Create reader\n\n```python\nreader = FileReader(\n        repo_path=\".\",\n        branch=\"main\",\n        langs=\"\",\n        content_paths=[\"content\"],\n        extensions=[\".md\"],\n        pattern=\"folder/\",\n        src_lang=\"en\",\n        use_cache=True\n    )\n```\n\nParameters:\n\n`repo_path`: Path to the repository for translation monitoring.\n`branch`: Name of the branch to read the github history from.\n`content_paths`: List of paths from the root of the repository to the directory that contains contents for translation, e.g., [\"content\", \"data\", \"i18n\"].  \n`extensions`: List of extensions of the target files for translation monitoring.  \n`pattern`: Two types of patterns in which the static site repository is organized: \"folder (organizing contents from each locale into one folder of the locale name, e.g. en/filename.md, fr/filename.md) and \".lang\" (organizing contents from each locale by tagging the file name with the locale name, e.g. filename.en.md, filename.fr.md)\n`langs`: Language codes joint by a white space as specified by the user. If not specified, FileReader will try to get languages from the filenames in the current repository for monitoring.\n`src_lang`: Default source language set by user.\n`use_cache`: Whether to use cached commit history datastructure.\n\n### 2. Set targets\n\nThe target files for translation monitoring are initialized using `content_paths` and `extensions`, and it can also be specified by adding or deleting single filename.\n\n```python\nreader.add_target(filename)\nreader.del_target(filename)\n```\n\n### 3. Calculate commits\n\n```python\ncommits = reader.parse_history()       # Structured commit history\n```\n\n### 4. Create reporter\n\n```python\nreporter = FileReporter(\n    repo_path=reader.repo_path,\n    src_lang=detail_src_lang,\n    tgt_lang=detail_tgt_lang\n)\n```\n\n`src_lang`: Language code of the source language (the original language of contents) to be reported. If not specified, all source language will be reported.\n`tgt_lang`: Language code of the target language (language to translate contents\ninto) to be reported. If not specified, all target language will be reported.\n\n### 5. Report stats and details\n\nstats mode: displays the number of Open (hasn't been translated), Updated (source file has been updated after translation), Completed (source file has been translated for all target languages). E.g.:\n\n```python\nstats = reporter.get_stats(commits)\nreporter.print_stats(stats)\n\n\"\"\"\n    | Target Language   |   Total |   Open |   Updated |   Completed |\n    |-------------------+---------+--------+-----------+-------------|\n    | fr                |       0 |      0 |         0 |           0 |\n    | en                |       1 |      0 |         0 |           1 |\n    | zh                |       1 |      0 |         1 |           0 |\n    | ja                |       1 |      1 |         0 |           0 |\n\"\"\"\n```\n\ndetail mode: displays translation work required for each target file together with more details. E.g.:\n\n```python\ndetails = reporter.get_details(commits)\nreporter.print_details(details)\n\n\"\"\"\n| File    | Status    | Source Language | Word Count | Target Language | Percent Completed | Percent Updated |\n|---------+-----------+-----------------+------------+-----------------+-------------------+-----------------|\n| file.md | completed | fr              |          4 | en              | 100.0%            | 0%              |\n| file.md | updated   | fr              |          4 | zh              | 50.0%             | 50.0%           |\n| file.md | open      | fr              |          4 | ja              | 0%                | 100.0%          |\n\"\"\"\n```\n\nHere `Word Count` reports number of words in the source file. `Percent Completed` is estimated by number of lines in the translation file divided by that in the source file. `Percent Updated` is number of lines inserted in the source file since the latest edit of the translation file.\n\n### 6. Additional resources for the SDE steps\n\nFor more about setting up a Hugo site, check out the documentation about [Hugo in multilingual mode](https://gohugo.io/content-management/multilingual/).\n\n\n## Message-based Translation Monitoring Workflow\n\n**Message-based translation flow exemplified with React App**\n![](https://github.com/rotationalio/rumi/raw/main/docs/images/readme/react_flow.png)\n\n### 1. Create reader\n\n```python\nreader = MsgReader(\n    repo_path=\".\",\n    branch=\"main\",\n    content_paths=[\"content\"],\n    extensions=[\".po\"],\n    src_lang=\"en\",\n    use_cache=True\n    )\n```\n\n### 2. Set targets\n\n```python\nreader.add_target(filename)\nreader.del_target(filename)\n```\n\n### 3. Calculate commits\n\n```python\ncommits = reader.parse_history()\n```\n\n### 4. Create reporter\n\n```python\nreporter = MsgReporter()\n```\n\n### 5. Report stats and details\n\nstats mode: Print out a summary of the translation.\n\n```python\nstats = reporter.get_stats(commits, src_lang)\nreporter.print_stats(stats)\n\n\"\"\"\n    | Language   |   Total |   Open |   Updated |   Completed |\n    |------------+---------+--------+-----------+-------------|\n    | en         |       2 |      0 |         0 |           0 |\n    | fr         |       2 |      1 |         1 |           0 |\n    | ja         |       2 |      0 |         1 |           1 |\n\"\"\"\n```\n\ndetail mode: Print out the details of messages needing translations for each language and provide word count.\n\n```python\ndetails = reporter.get_details(commits, src_lang)\nreporter.print_details(details)\n\n\"\"\"\n    ----------------------------------------------------------------------\n    ja Open: 2\n    msgid1\n    msgid2\n    ----------------------------------------------------------------------\n    zh Open: 0\n    ----------------------------------------------------------------------\n    de Open: 0\n    ----------------------------------------------------------------------\n    fr Open: 1\n    msgid1\n    ----------------------------------------------------------------------\n    en Open: 0\n    ----------------------------------------------------------------------\n\"\"\"\n```\n\n### 6. Rumi Download\n\nRumi can help you download the new messages from `Lingui Extract` results:\n\n```python\nreporter.download_needs(details, lang, path=\".\")\n```\n\n### 7. Rumi Insert Translated\n\nRumi can also insert the new translations back into the old ones, to support the next `Lingui Compile` step.\n\n```python\nreporter.insert_translations(\"new_translations.txt\", \"old_messages.po\")\n\n```\n\n### 8. Additional Resources for the SDE steps\n\nHere are some additional resources for getting set up with Lingui on your React project:\n  - UI Dev: Setup Lingui.js\n    - Installation: [Setup Lingui with React project](https://lingui.js.org/tutorials/setup-react.html)\n    - Wrap Messages: Wrap UI text message according to [Lingui patterns](https://lingui.js.org/tutorials/react-patterns.html)\n  - Lingui Extract: `npm run extract` or `yarn extract`\n  - Lingui Compile: `npm run compile` or `yarn compile`\n\n## Github Action\n\n\n```yaml\nname: Rumi translation monitoring\non: push\n\njobs:\n  rumi:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Clone target repository\n        run: |\n          git clone [url of the target repository]\n\n      - name: Run Action \n        uses: tl6kk/rumi_action@main # to be changed after rumi publication\n        with: \n          which_rumi: \"file\" # \"file\" for file-based or \"msg\" for message-based\n          repo_path: \"path_to_repo\"\n          branch: \"main\"\n          content_paths: \"content1, content2, content3\"\n          extensions: \".md, .txt\"\n          target_files: \"target1, target2, target3\"\n          pattern: \"folder/\"  # \"folder/\" or \".lang\" depending on the setup of file-based project\n          langs: \"en fr zh ja\" # You can specify the languages to monitor with language codes\n          src_lang: \"en\"\n          detail_src_lang: \"\"\n          detail_tgt_lang: \"\"\n          stats_mode: \"True\"\n          details_mode: \"True\"\n          use_cache: \"True\"\n``` \n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/rotationalio/rumi/tarball/v0.1.3a1.post1",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rotationalio/rumi",
    "keywords": "rumi,python,translation monitoring,l10n",
    "license": "Apache",
    "maintainer": "Tianshu Li",
    "maintainer_email": "tianshu@rotational.io",
    "name": "rumi-i18n",
    "package_url": "https://pypi.org/project/rumi-i18n/",
    "platform": "",
    "project_url": "https://pypi.org/project/rumi-i18n/",
    "project_urls": {
      "Download": "https://github.com/rotationalio/rumi/tarball/v0.1.3a1.post1",
      "Homepage": "https://github.com/rotationalio/rumi"
    },
    "release_url": "https://pypi.org/project/rumi-i18n/0.1.3a1.post1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A static site translation monitoring tool",
    "version": "0.1.3a1.post1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12297380,
  "releases": {
    "0.0.1a1.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7facd85916adb084f1f51661bed2076d41f3fb9a019ecbce2b022c7f9251d04",
          "md5": "65ccaf3283c8e6929c814d1a1b65a379",
          "sha256": "ffe38723bf20e3b11de48e19c47cff1d1d1edfc25b273382ad920290fcf9bca4"
        },
        "downloads": -1,
        "filename": "rumi_i18n-0.0.1a1.post2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "65ccaf3283c8e6929c814d1a1b65a379",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22930,
        "upload_time": "2021-11-23T04:59:29",
        "upload_time_iso_8601": "2021-11-23T04:59:29.334838Z",
        "url": "https://files.pythonhosted.org/packages/e7/fa/cd85916adb084f1f51661bed2076d41f3fb9a019ecbce2b022c7f9251d04/rumi_i18n-0.0.1a1.post2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11ea26ca029cd5a201292bbdbf8937c5e36f5f58bc47f4fdfadf10189dfd74bd",
          "md5": "4912215d7c422a666595870551ed1362",
          "sha256": "05baa14e30a1201e812097c297cf02e807b5e9265043a9744d672ded9eb0030f"
        },
        "downloads": -1,
        "filename": "rumi-i18n-0.0.1a1.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "4912215d7c422a666595870551ed1362",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24552,
        "upload_time": "2021-11-23T04:59:31",
        "upload_time_iso_8601": "2021-11-23T04:59:31.157114Z",
        "url": "https://files.pythonhosted.org/packages/11/ea/26ca029cd5a201292bbdbf8937c5e36f5f58bc47f4fdfadf10189dfd74bd/rumi-i18n-0.0.1a1.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a1.post3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01488cca5d895d2ff65fce81ebfa6f00dbd6af55835fdbc70152809a497d10b5",
          "md5": "2d4f99a87b8e8c0bc8cbecbe280d9775",
          "sha256": "de43c1c459ae9cf1c861db2bcc15184e54846328c30fa726621e1706318aeb00"
        },
        "downloads": -1,
        "filename": "rumi-i18n-0.0.1a1.post3.tar.gz",
        "has_sig": false,
        "md5_digest": "2d4f99a87b8e8c0bc8cbecbe280d9775",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24554,
        "upload_time": "2021-11-23T05:13:16",
        "upload_time_iso_8601": "2021-11-23T05:13:16.048301Z",
        "url": "https://files.pythonhosted.org/packages/01/48/8cca5d895d2ff65fce81ebfa6f00dbd6af55835fdbc70152809a497d10b5/rumi-i18n-0.0.1a1.post3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a1.post4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bb751bc5577f1ec0f97f61faa83f9d4b48a2353731f216d805a6ae4e3cd64e6",
          "md5": "c37f14bdb50ecc0da932481b66d1a1bb",
          "sha256": "743d1d46e9bd9be208392d49f75b255f8dbd663a317260cafe3ebb3c72529938"
        },
        "downloads": -1,
        "filename": "rumi-i18n-0.0.1a1.post4.tar.gz",
        "has_sig": false,
        "md5_digest": "c37f14bdb50ecc0da932481b66d1a1bb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24484,
        "upload_time": "2021-11-23T05:18:21",
        "upload_time_iso_8601": "2021-11-23T05:18:21.908131Z",
        "url": "https://files.pythonhosted.org/packages/8b/b7/51bc5577f1ec0f97f61faa83f9d4b48a2353731f216d805a6ae4e3cd64e6/rumi-i18n-0.0.1a1.post4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a1.post5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95850ab9db77afa7129be61901efe58661431a651b54d08dce00577e19047b23",
          "md5": "33166f96225cc546abbccbdfd5108e71",
          "sha256": "0d49b5fc2df1435d9300dfc28a37c628b295b30883db388191b78583956e2e69"
        },
        "downloads": -1,
        "filename": "rumi-i18n-0.0.1a1.post5.tar.gz",
        "has_sig": false,
        "md5_digest": "33166f96225cc546abbccbdfd5108e71",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24586,
        "upload_time": "2021-11-23T05:34:35",
        "upload_time_iso_8601": "2021-11-23T05:34:35.346172Z",
        "url": "https://files.pythonhosted.org/packages/95/85/0ab9db77afa7129be61901efe58661431a651b54d08dce00577e19047b23/rumi-i18n-0.0.1a1.post5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a1.post6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d25aec9c889ec6b852d220c43c8ff5ff16209ab615f266b265690c1178edb71c",
          "md5": "1f7daa34e9b4db287d73d139d8443544",
          "sha256": "831313e2e1efeea4e45eb96ae7880030cb1ce6ba72d0e6b1ad7f9b86cd3484a0"
        },
        "downloads": -1,
        "filename": "rumi-i18n-0.0.1a1.post6.tar.gz",
        "has_sig": false,
        "md5_digest": "1f7daa34e9b4db287d73d139d8443544",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24541,
        "upload_time": "2021-11-23T05:38:39",
        "upload_time_iso_8601": "2021-11-23T05:38:39.085415Z",
        "url": "https://files.pythonhosted.org/packages/d2/5a/ec9c889ec6b852d220c43c8ff5ff16209ab615f266b265690c1178edb71c/rumi-i18n-0.0.1a1.post6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a1.post7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "575af696f5cefbef8a4cab5fa83125828cb74f20355fa9b10ad17c46c75ca965",
          "md5": "3f401b2fa067ed61f03136d679d548a5",
          "sha256": "1b4eda9f476f227b5166c3f35508018319a7c08073e597a24ad652113df8d031"
        },
        "downloads": -1,
        "filename": "rumi-i18n-0.0.1a1.post7.tar.gz",
        "has_sig": false,
        "md5_digest": "3f401b2fa067ed61f03136d679d548a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27000,
        "upload_time": "2021-11-30T06:10:12",
        "upload_time_iso_8601": "2021-11-30T06:10:12.878995Z",
        "url": "https://files.pythonhosted.org/packages/57/5a/f696f5cefbef8a4cab5fa83125828cb74f20355fa9b10ad17c46c75ca965/rumi-i18n-0.0.1a1.post7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a1.post8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cc225874182ef7f703eefe6e4b8363bd5777c6b7e0b57ac6ce2dfdb383395e9",
          "md5": "e7406f6febe55e88d84f1c1422c223a0",
          "sha256": "79c0f3fc2edb55044c115c4866e6c6d766c95fea9ca7b55e7d7ed5969bcde3e1"
        },
        "downloads": -1,
        "filename": "rumi-i18n-0.0.1a1.post8.tar.gz",
        "has_sig": false,
        "md5_digest": "e7406f6febe55e88d84f1c1422c223a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27175,
        "upload_time": "2021-11-30T06:40:14",
        "upload_time_iso_8601": "2021-11-30T06:40:14.657166Z",
        "url": "https://files.pythonhosted.org/packages/7c/c2/25874182ef7f703eefe6e4b8363bd5777c6b7e0b57ac6ce2dfdb383395e9/rumi-i18n-0.0.1a1.post8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1a1.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b594377607c22f42764a495bfedbdcebc0606ef8ae36cba9365cb5ca31bf987",
          "md5": "446952edf0a11c0768e0ecbf8411fc00",
          "sha256": "9612494dbdd7e954d3ba8291e8c4ae20390bb93727c8d860b2f96407f2c82ccf"
        },
        "downloads": -1,
        "filename": "rumi-i18n-0.1.1a1.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "446952edf0a11c0768e0ecbf8411fc00",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28634,
        "upload_time": "2021-12-14T05:22:49",
        "upload_time_iso_8601": "2021-12-14T05:22:49.440885Z",
        "url": "https://files.pythonhosted.org/packages/4b/59/4377607c22f42764a495bfedbdcebc0606ef8ae36cba9365cb5ca31bf987/rumi-i18n-0.1.1a1.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2a1.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b56257e1f7d5a7ab55021b84a3064086cad77adbbab143df0dd19558c8d185f",
          "md5": "cb729da327718e2e9a10460bbf30c7ff",
          "sha256": "4c582769f56da06fea9cf80e3d78c6c8881925f0f8b801b157c476d28a578dbc"
        },
        "downloads": -1,
        "filename": "rumi-i18n-0.1.2a1.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "cb729da327718e2e9a10460bbf30c7ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28683,
        "upload_time": "2021-12-14T06:27:48",
        "upload_time_iso_8601": "2021-12-14T06:27:48.229460Z",
        "url": "https://files.pythonhosted.org/packages/7b/56/257e1f7d5a7ab55021b84a3064086cad77adbbab143df0dd19558c8d185f/rumi-i18n-0.1.2a1.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3a1.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a75a6c1e215e272cc9a5243c27537190c93418522d6c80fa1c787b0132ee8603",
          "md5": "ab8b61a54500ac7ee279c5b2325be69f",
          "sha256": "5c64e70dee1384c42e2f6ced85dc924815a1dc17e34419f131e989061f3ff0d9"
        },
        "downloads": -1,
        "filename": "rumi-i18n-0.1.3a1.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "ab8b61a54500ac7ee279c5b2325be69f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28649,
        "upload_time": "2021-12-14T06:54:32",
        "upload_time_iso_8601": "2021-12-14T06:54:32.836306Z",
        "url": "https://files.pythonhosted.org/packages/a7/5a/6c1e215e272cc9a5243c27537190c93418522d6c80fa1c787b0132ee8603/rumi-i18n-0.1.3a1.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1a1.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "930e47b9b979b09911ede85fde68e6d68392adb0d9fd8190ca46cf2a6d86397a",
          "md5": "69a23be1fc7b6e59677db626884871ef",
          "sha256": "cefa541d83ca0346d86defd39a3f54cbc330f77c1156cb96753b88a8b7da2550"
        },
        "downloads": -1,
        "filename": "rumi-i18n-0.1a1.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "69a23be1fc7b6e59677db626884871ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28570,
        "upload_time": "2021-12-13T04:42:04",
        "upload_time_iso_8601": "2021-12-13T04:42:04.056920Z",
        "url": "https://files.pythonhosted.org/packages/93/0e/47b9b979b09911ede85fde68e6d68392adb0d9fd8190ca46cf2a6d86397a/rumi-i18n-0.1a1.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a75a6c1e215e272cc9a5243c27537190c93418522d6c80fa1c787b0132ee8603",
        "md5": "ab8b61a54500ac7ee279c5b2325be69f",
        "sha256": "5c64e70dee1384c42e2f6ced85dc924815a1dc17e34419f131e989061f3ff0d9"
      },
      "downloads": -1,
      "filename": "rumi-i18n-0.1.3a1.post1.tar.gz",
      "has_sig": false,
      "md5_digest": "ab8b61a54500ac7ee279c5b2325be69f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 28649,
      "upload_time": "2021-12-14T06:54:32",
      "upload_time_iso_8601": "2021-12-14T06:54:32.836306Z",
      "url": "https://files.pythonhosted.org/packages/a7/5a/6c1e215e272cc9a5243c27537190c93418522d6c80fa1c787b0132ee8603/rumi-i18n-0.1.3a1.post1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}