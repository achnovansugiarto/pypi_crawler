{
  "info": {
    "author": "Alexandre Silva // MrKelpy",
    "author_email": "alexandresilva.coding@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PythMC 1.2.2\n___\nPythMC Is a Library currently composed of PythMC.Interactions and PythMC.Chat. Both of these packages aim to interact with the Minecraft Environment, although externally, to create scripts to hopefully be of use for Python Programmers in automating mundane Minecraft tasks. PythMC Is the successor of [MESLIB](https://github.com/MrKelpy/MESL) and [PyMChat](https://github.com/MrKelpy/PyMChat), combined. **Please note that PythMC and @MrKelpy are not in any way linked to Microsoft or Mojang Studios in any way.<br>**\n\nThe documentation below will be divided into Assets, Chat and Interactions, explaining and detailing the usage of the library.<br>\n\n**Pull requests and issue raising are always welcome.**\n___\n## Assets\nInside the assets, you can find code shared by most usable packages inside the library. Two classes present in here, are the `Keybinds` and `Interactor` class; Both of them are used throughout the library, and have a major influence on its behaviour. Both can be configured.\n\n### Keybinds\nDefines the Keybinds that the code will use to perform actions in the Minecraft Environment. Any keybind can be altered by setting a property in either a `GameLink` or `ChatLink` class as another character. This works because both aforementioned classes inherit from `Interactor`, which inherits from `Keybinds`. Below is the the implementation for the class, showing all the default preset keybinds. These match the default keybinds in the game.\n```python\nclass Keybinds:\n\n    def __init__(self):\n        # General Controls\n        self.ATTACK = \"left\"  # Mouse left click\n        self.USE = \"right\"  # Mouse right click\n        self.PICK = \"middle\"  # Mouse middle click\n        self.DROP = \"q\"\n        self.OFFHAND = \"f\"\n        self.CHAT = \"t\"\n\n        # Movement Controls\n        self.WALK_FWD = \"w\"\n        self.WALK_LEFT = \"a\"\n        self.WALK_BWD = \"s\"\n        self.WALK_RIGHT = \"d\"\n        self.JUMP = \"space\"\n        self.SPRINT = \"ctrl\"\n\n        # Inventory\n        self.INVENTORY = \"e\"\n        self.HOTBAR_1 = \"1\"\n        self.HOTBAR_2 = \"2\"\n        self.HOTBAR_3 = \"3\"\n        self.HOTBAR_4 = \"4\"\n        self.HOTBAR_5 = \"5\"\n        self.HOTBAR_6 = \"6\"\n        self.HOTBAR_7 = \"7\"\n        self.HOTBAR_8 = \"8\"\n        self.HOTBAR_9 = \"9\"\n        self.HOTBAR_SLOTS = [self.HOTBAR_1, self.HOTBAR_2, self.HOTBAR_3, self.HOTBAR_4, self.HOTBAR_5,\n                      self.HOTBAR_6, self.HOTBAR_7, self.HOTBAR_8, self.HOTBAR_9]\n```\n### Interactor\nDefines the interaction functions between the code and the Minecraft Client. This is the direct parent to all the usable classes and there isn't much that needs to be explained here. You can configure the name of the Client you're using, so it can fetch the desired Minecraft Window for the actions to be performed on through `self._window_searchname`. It is by default set to search for all Windows containing `\"Minecraft\"`.\n___\n## PythMC.Interactions\nThis package contains a class named `GameLink`. This class is used to  perform physical actions in Minecraft. All the interactions performed within this class are *indirect*, meaning that they perform actions as if it were a human, rather than actually \"controlling\" the client. Below is the documentation for any implementation of this class, in the form of commentative code examples.\n```python\nfrom pythmc import GameLink\n\nclient = GameLink()  # Initialises an instance of GameLink, to take control of the Minecraft Client.\n\n# Attacks performing a left-click by default.\n# Parameters: duration, double\n# \"duration\" is for how long (in seconds) the attack/destroy button should be held down for.\n# \"double\" is if the action performed should be a double-click, incase of the set key being a mouse button.\nclient.attack() or client.destroy()\n\n# Uses a block, tool, or anything else in the inventory slot once, performing a right-click by default.\n# Parameters: duration\n# \"duration\" is for how long (in seconds) the use button should be held down for.\nclient.use() or client.click()\n\n# Drops items performing a \"q\" by default.\n# Parameters: stack\n# \"stack\" is for whether the drop action should drop all the items in the slot rather than only one item at a time.\nclient.drop()\n\n# Changes the active hotbar slot number to the specified slot.\n# Parameters: slot_number\n# \"slot_number\" is for the defined slot 1-9 to be selected according to the Keybinds.\nclient.hotbar(1)\n\n# Opens the inventory performing an \"e\" by default.\n# The extension for this function is under development.\nclient.inventory() or client.inv()\n\n# Switches to the offhand.\nclient.offhand()\n\n# Presses down the walk key for a specified direction, for x amount of blocks. Defaults to WASD.\n# Parameters: jumping, sprint, direction, blocks\n# \"jumping\" Toggles walk/sprint jumping.\n# \"sprint\" does exactly what you think it does.\n# \"direction\" takes in a string, either [fwd, bwd, left, up] for the direction of the movement.\n# \"blocks\" is the amount of blocks to walk. Defining \"up\" and more than 1 block will have no effect. NOTE: Block definitions while flying are not accurate.\nclient.walk(\"fwd\", blocks=5)\n```\n___\n## PythMC.Chat\nThis package contains two classes, named `ChatLink` and `Message`. The former is able to interact with the in-game chat in real time, and the latter is a class to pack the returning values of functions within `ChatLink`. Below is the documentation for any implementation of this class, in the form of commentative code examples.<br>\nYou can configure the `self.default_logs_path` property to change the location of your `latest.log` file, which is where the messages are gathered from.\n\n```python\nfrom pythmc import ChatLink\n\nchat = ChatLink()  # Initialises an instance of ChatLink, to take control of the Minecraft Chat.\n\n# Returns a list of messages from the in-game chat.\nmessage_list = chat.get_history(limit=10)\n\n# Check Output 1 to see how it looks!\nfor message in message_list:\n  print(message.content)\n  \n# Sends a message to the chat using similar methods as in PythMC.Interactions\nchat.send(\"This is a sample message!\")\n```\n\n### Output 1\n```js\n[+] JohnRockefailure has joined\n[+] Senseimasterman9 has joined\nWelcome | Steve | Senseimasterman9 to the server!\n<| Investor | *Blist> Welcom\n<| Griffin | *Jay> W e l c o m e ! E n j o y y o u r s t a y a t S a f e S u r v i v a l\n<| Event Staff | *Enelis> o-o <--- (This one is a dummy! -MrKelpy)\n<| Griffin | *Jay> oof\n<| Veteran | Parkemon20000> thats... not normal\n[-] JohnRockefailure has left\n<| Phoenix | *Kelp> Gn all\n```\n\n### Message\nThe `Message` class holds any returning values coming from `ChatLink`. It has two properties:\n\n    1. Content (The message content)\n    2. ID (An identifier used to distinguish between messages)\n___\n## Special Thanks to...\nTo [SafeSurvival](https://minecraft-server-list.com/server/291843/), for being the testing ground for this project.<br>\nTo Shaztopia, SafeSurvival's Owner, for allowing me to test `PythMC.Chat` there.\n\n___\n## Planned Features and Patches\n1. Inventory browsing and selection \n2.  Camera turning\n3. Make walking while flying accurate\n\n___\n## Copyright and Author\nÂ© Alexandre Silva 2021<br>\nDiscord: Alex_#6533<br>\nEmail: alexandresilva.coding@gmail.com\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MrKelpy/PythMC",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PythMC",
    "package_url": "https://pypi.org/project/PythMC/",
    "platform": "",
    "project_url": "https://pypi.org/project/PythMC/",
    "project_urls": {
      "Homepage": "https://github.com/MrKelpy/PythMC"
    },
    "release_url": "https://pypi.org/project/PythMC/1.2.2/",
    "requires_dist": [
      "mouse",
      "keyboard"
    ],
    "requires_python": ">=3.7",
    "summary": "A Library used to interact with the Minecraft Environment in Python.",
    "version": "1.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11500943,
  "releases": {
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf719a66a7126a8e0f89dddaa4a451c3b66bc2f9164e6f94a63ebfe0bd486c5b",
          "md5": "29099948e7194fb9420b852ba93c0a0e",
          "sha256": "5e5559a720e4b0128c98f0dde4aac4df35d0ea17a6bc2e93cd32ff3615e9921d"
        },
        "downloads": -1,
        "filename": "PythMC-1.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "29099948e7194fb9420b852ba93c0a0e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23523,
        "upload_time": "2021-09-20T18:39:33",
        "upload_time_iso_8601": "2021-09-20T18:39:33.380733Z",
        "url": "https://files.pythonhosted.org/packages/cf/71/9a66a7126a8e0f89dddaa4a451c3b66bc2f9164e6f94a63ebfe0bd486c5b/PythMC-1.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6255e01efa442a58ee937d3114357f3c5295b57492d74168859708eb8d3ee01d",
          "md5": "3b5913cc9f5ce9ab865dc5a917aab482",
          "sha256": "552bbfdc4d53266ef4f7a72ba2224d0dab19cb8ff643ac887cbc06a2372ce768"
        },
        "downloads": -1,
        "filename": "PythMC-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3b5913cc9f5ce9ab865dc5a917aab482",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 20667,
        "upload_time": "2021-09-20T18:39:34",
        "upload_time_iso_8601": "2021-09-20T18:39:34.666936Z",
        "url": "https://files.pythonhosted.org/packages/62/55/e01efa442a58ee937d3114357f3c5295b57492d74168859708eb8d3ee01d/PythMC-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf719a66a7126a8e0f89dddaa4a451c3b66bc2f9164e6f94a63ebfe0bd486c5b",
        "md5": "29099948e7194fb9420b852ba93c0a0e",
        "sha256": "5e5559a720e4b0128c98f0dde4aac4df35d0ea17a6bc2e93cd32ff3615e9921d"
      },
      "downloads": -1,
      "filename": "PythMC-1.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "29099948e7194fb9420b852ba93c0a0e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 23523,
      "upload_time": "2021-09-20T18:39:33",
      "upload_time_iso_8601": "2021-09-20T18:39:33.380733Z",
      "url": "https://files.pythonhosted.org/packages/cf/71/9a66a7126a8e0f89dddaa4a451c3b66bc2f9164e6f94a63ebfe0bd486c5b/PythMC-1.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6255e01efa442a58ee937d3114357f3c5295b57492d74168859708eb8d3ee01d",
        "md5": "3b5913cc9f5ce9ab865dc5a917aab482",
        "sha256": "552bbfdc4d53266ef4f7a72ba2224d0dab19cb8ff643ac887cbc06a2372ce768"
      },
      "downloads": -1,
      "filename": "PythMC-1.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "3b5913cc9f5ce9ab865dc5a917aab482",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 20667,
      "upload_time": "2021-09-20T18:39:34",
      "upload_time_iso_8601": "2021-09-20T18:39:34.666936Z",
      "url": "https://files.pythonhosted.org/packages/62/55/e01efa442a58ee937d3114357f3c5295b57492d74168859708eb8d3ee01d/PythMC-1.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}