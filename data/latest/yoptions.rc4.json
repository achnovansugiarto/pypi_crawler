{
  "info": {
    "author": "Julius Langer",
    "author_email": "julius.langer@outlook.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Office/Business :: Financial :: Investment"
    ],
    "description": "Yahoo Options Data for Python\r\n=============================\r\n\r\nThis module retrieves option data from the yahoo finance website and \r\ncalculates greeks from it.\r\n\r\n**Warning: The retrieved data and greeks might be outdated or incorrect.\r\nUse at your own risk.**\r\n\r\nInstallation\r\n------------\r\n\r\nYou can install the library by using:\r\n``` {.sourceCode .bash}\r\npip install yoptions\r\n```\r\n\r\nImport\r\n------\r\n\r\n``` {.sourceCode .python}\r\nimport yoptions as yo\r\n```\r\n\r\n\r\nDownload option chain with greeks\r\n---------------------------------\r\nTo download the option chain for a specific stock for the next expiration date, you can\r\nsimply use:\r\n\r\n``` {.sourceCode .python}\r\n# Chain of all FORD MOTOR COMPANY call options for next expiration date\r\nchain = yo.get_chain_greeks(stock_ticker='F', dividend_yield=0, option_type='c', risk_free_rate=None)\r\nprint(chain.head().to_string())\r\n```\r\n\r\nrisk_free_rate is optional. If it is left empty, the current risk free rate from the US treasury will be retrieved\r\nand used.\r\n\r\nThis will calculate and print Delta, Gamma, Theta, Vega and Rho for every option in the chain.\r\n\r\n\r\n```{r, engine='python', count_lines}\r\nOUTPUT:\r\n\r\n                      Symbol  Strike  Last Price    Bid    Ask  Impl. Volatility   Delta   Gamma   Theta    Vega     Rho\r\n0   F210528C00000500     0.5       12.65  12.60  12.70         16.750005  0.9994  0.0001 -0.0081  0.0000  0.0000\r\n1   F210528C00001500     1.5       10.00  10.35  12.90          9.125004  0.9998  0.0001 -0.0017  0.0000  0.0001\r\n2   F210528C00002500     2.5       10.81  10.50  11.20         11.562503  0.9910  0.0022 -0.0685  0.0002  0.0001\r\n3   F210528C00005000     5.0        6.65   8.00   8.45          5.812503  0.9930  0.0035 -0.0277  0.0002  0.0003\r\n4   F210528C00005500     5.5        6.15   7.60   7.95          5.750003  0.9879  0.0056 -0.0441  0.0003  0.0003\r\n5   F210528C00006000     6.0        5.55   7.05   7.20          3.375002  0.9994  0.0006 -0.0018  0.0000  0.0003\r\n6   F210528C00007000     7.0        6.05   6.05   6.25          3.234377  0.9969  0.0030 -0.0075  0.0001  0.0004\r\n7   F210528C00008000     8.0        5.06   5.05   5.15          2.625003  0.9958  0.0048 -0.0080  0.0001  0.0004\r\n8   F210528C00008500     8.5        4.85   4.50   4.70          2.765628  0.9868  0.0127 -0.0230  0.0003  0.0005\r\n9   F210528C00009000     9.0        4.08   4.05   4.20          1.750001  0.9985  0.0029 -0.0023  0.0000  0.0005\r\n10  F210528C00009500     9.5        3.60   3.55   3.65          1.828126  0.9928  0.0112 -0.0091  0.0002  0.0005\r\n11  F210528C00010000    10.0        3.05   3.05   3.20          1.312503  0.9977  0.0056 -0.0025  0.0001  0.0005\r\n12  F210528C00010500    10.5        2.60   2.59   2.66          1.125004  0.9966  0.0093 -0.0031  0.0001  0.0006\r\n13  F210528C00011000    11.0        2.15   2.09   2.14          0.750003  0.9993  0.0034 -0.0007  0.0000  0.0006\r\n14  F210528C00011500    11.5        1.81   1.60   1.68          0.828127  0.9850  0.0472 -0.0079  0.0004  0.0006\r\n15  F210528C00012000    12.0        1.12   1.11   1.15          0.554692  0.9852  0.0694 -0.0053  0.0004  0.0006\r\n16  F210528C00012500    12.5        0.70   0.70   0.72          0.589848  0.8674  0.3746 -0.0310  0.0021  0.0006\r\n17  F210528C00013000    13.0        0.33   0.32   0.33          0.496099  0.5984  0.8033 -0.0468  0.0038  0.0004\r\n18  F210528C00013500    13.5        0.14   0.13   0.14          0.519536  0.2292  0.6010 -0.0383  0.0029  0.0002\r\n19  F210528C00014000    14.0        0.06   0.05   0.06          0.570317  0.0626  0.2224 -0.0171  0.0012  0.0000\r\n20  F210528C00014500    14.5        0.03   0.03   0.04          0.679691  0.0240  0.0857 -0.0093  0.0005  0.0000\r\n21  F210528C00015000    15.0        0.03   0.02   0.03          0.789065  0.0114  0.0391 -0.0057  0.0003  0.0000\r\n22  F210528C00015500    15.5        0.02   0.01   0.02          0.843752  0.0040  0.0146 -0.0024  0.0001  0.0000\r\n23  F210528C00016000    16.0        0.01   0.00   0.01          0.843752  0.0008  0.0033 -0.0006  0.0000  0.0000\r\n24  F210528C00016500    16.5        0.01   0.00   0.02          1.031255  0.0015  0.0048 -0.0012  0.0000  0.0000\r\n25  F210528C00017000    17.0        0.01   0.00   0.00          0.500005  0.0000  0.0000 -0.0000  0.0000  0.0000\r\n26  F210528C00017500    17.5        0.01   0.00   0.01          1.125004  0.0003  0.0010 -0.0003  0.0000  0.0000\r\n27  F210528C00018000    18.0        0.01   0.00   0.01          1.250004  0.0004  0.0011 -0.0004  0.0000  0.0000\r\n28  F210528C00018500    18.5        0.02   0.00   0.01          1.312503  0.0002  0.0007 -0.0003  0.0000  0.0000\r\n29  F210528C00019500    19.5        0.01   0.00   0.01          1.500002  0.0002  0.0006 -0.0003  0.0000  0.0000\r\n```\r\n\r\n\\\r\nTo download the option chain on a specific expiration date, simply use this:\r\n``` {.sourceCode .python}\r\n# Chain of all FORD MOTOR COMPANY put options that expire on January 21, 2022\r\n\r\nchain = yo.get_chain_greeks_date(stock_ticker='F', dividend_yield=0, option_type='p', \r\n                                 expiration_date='2022-01-21',risk_free_rate=None)\r\nprint(chain.head().to_string())\r\n```\r\nAny date has to be in the format 'YYYY-MM-DD'.\r\n```{r, engine='python', count_lines}\r\nOUTPUT:\r\n\r\n             Symbol  Strike  Last Price  Bid   Ask  Impl. Volatility   Delta   Gamma   Theta    Vega     Rho\r\n0  F220121P00000500     0.5        0.01  0.0  0.01          1.562502 -0.0006  0.0001 -0.0001  0.0002 -0.0001\r\n1  F220121P00001000     1.0        0.01  0.0  0.02          1.312503 -0.0015  0.0003 -0.0001  0.0005 -0.0002\r\n2  F220121P00001500     1.5        0.03  0.0  0.03          1.171879 -0.0027  0.0007 -0.0002  0.0009 -0.0003\r\n3  F220121P00002000     2.0        0.02  0.0  0.02          0.968750 -0.0025  0.0007 -0.0002  0.0008 -0.0003\r\n4  F220121P00002500     2.5        0.03  0.0  0.03          0.890626 -0.0037  0.0012 -0.0002  0.0012 -0.0004\r\n...\r\n```\r\n\r\nDownload greeks of an option\r\n----------------------------------\r\nThere are two ways to download data and greeks from a specific option. \r\nEither by entering the option ticker symbol or by putting in the basic information of the option\r\n``` {.sourceCode .python}\r\n# Both commands return the call option of BP that will expire on June 17, 2022 at a strike price of 30.\r\nprint(yo.get_option_greeks('BP', '2022-06-17', 'c', 30, dividend_yield=0.04, risk_free_rate=0.014).to_string())\r\n\r\nprint(yo.get_option_greeks_ticker(option_ticker='BP220617C00030000', dividend_yield=0.04, \r\n                                  risk_free_rate=0.014).to_string())\r\n```\r\n\r\nBP is a British company, so the US risk free rate doesn't apply. Therefore we put in the \r\nBritish risk free rate at the end.\r\n\r\n```{r, engine='python', count_lines}\r\nOUTPUT:\r\n              Symbol  Strike  Last Price   Bid   Ask  Impl. Volatility   Delta   Gamma  Theta    Vega     Rho\r\n0  BP220617C00030000    30.0        1.76  1.75  1.84          0.279792  0.3577  0.0486 -0.004  0.1024  0.0805\r\n```\r\n\r\n\r\n\r\nDownload historical option prices\r\n---------------------------------\r\nThis again can be achieved in two ways: By putting in the option ticker symbol or basic information about the option.\r\n\r\n``` {.sourceCode .python}\r\n# Both commands download all historical data for the Apple put option that will expire at July 16, 2021 at the \r\n# strike price of 90\r\nprint(yo.get_historical_option_ticker(option_ticker='AAPL210716P00090000'))\r\n\r\nprint(yo.get_historical_option('AAPL', '2021-07-16', 90, 'p'))\r\n```\r\n\r\n```{r, engine='python', count_lines}\r\nOUTPUT:\r\n           Date  Open  High   Low  Close  Adj Close  Volume\r\n0    2020-11-23  3.01  3.27  3.01   3.15       3.15    58.0\r\n1    2020-11-24  3.15  3.15  2.93   2.93       2.93  2611.0\r\n2    2020-11-25  2.79  2.94  2.78   2.94       2.94   161.0\r\n5    2020-11-30  2.79  2.79  2.74   2.74       2.74   417.0\r\n6    2020-12-01  2.71  2.71  2.54   2.63       2.63   147.0\r\n..          ...   ...   ...   ...    ...        ...     ...\r\n144  2021-05-17  0.31  0.31  0.30   0.30       0.30    21.0\r\n145  2021-05-18  0.26  0.26  0.26   0.26       0.26   100.0\r\n146  2021-05-19  0.38  0.38  0.35   0.37       0.37   214.0\r\n148  2021-05-21  0.24  0.26  0.24   0.25       0.25   219.0\r\n150  2021-05-24  0.20  0.20  0.18   0.18       0.18   237.0\r\n```\r\n\r\n\r\nDownload option chain without greeks\r\n------------------------------------\r\nThis can be achieved in a very similar way than download the chain with greeks.\r\n``` {.sourceCode .python}\r\n# Both lines return the chain for MICROSOFT call options at the next expiration date (May 28, 2021)\r\nprint(yo.get_plain_chain(option_ticker='MSFT', option_type='c').head().to_string())\r\n\r\nprint(yo.get_plain_chain_date(option_ticker='MSFT', option_type='c', \r\n                              expiration_date='2021-05-28').head().to_string())\r\n```\r\n\r\n\r\n```{r, engine='python', count_lines}\r\nOUTPUT:\r\n                Symbol              Last Trade  Strike  Last Price     Bid     Ask  Change  % Change Volume  Open Interest  Impl. Volatility\r\n0  MSFT210528C00145000  2021-05-19 03:58:33 PM   145.0       95.30  106.30  106.70     0.0       0.0      -              9          2.062505\r\n1  MSFT210528C00150000  2021-05-19 03:46:36 PM   150.0       90.55  101.30  101.90     0.0       0.0      -              5          2.164067\r\n2  MSFT210528C00155000  2021-05-19 07:41:08 PM   155.0       86.70   96.30   96.80     0.0       0.0      -              9          1.949219\r\n3  MSFT210528C00160000  2021-05-19 07:22:26 PM   160.0       82.35   91.35   91.75     0.0       0.0     16             17          1.835938\r\n4  MSFT210528C00165000  2021-05-19 09:20:34 PM   165.0       76.70   86.35   86.75     0.0       0.0      7              9          1.722658\r\n...\r\n```\r\n\r\nDownload data of a single option without greeks\r\n-----------------------------------------------\r\nThis again can be achieved in a similar way as downloading greek data for a single option. \r\n``` {.sourceCode .python}\r\n# Both lines return data for the VISA put option that expires on December 12, 2021 at a strike price of 275.\r\nprint(yo.get_plain_option(stock_ticker='V', expiration_date='2021-12-17', \r\n                          option_type='p', strike=275).to_string())\r\n                          \r\nprint(yo.get_plain_option_ticker(option_ticker='V211217P00275000').to_string())\r\n```\r\n\r\n```{r, engine='python', count_lines}\r\nOUTPUT:\r\n             Symbol              Last Trade  Strike  Last Price    Bid    Ask  Change  % Change  Volume  Open Interest  Impl. Volatility\r\n0  V211217P00275000  2021-05-07 04:21:37 PM   275.0       47.15  48.65  49.15     0.0       0.0       6              8            0.2342\r\n```\r\n\r\n\r\nGet the price of the underlying stock\r\n-------------------------------------\r\nThe current price of the underlying stock can of an option can be downloaded by doing this:\r\n``` {.sourceCode .python}\r\n# This downloads the current stock price for COCA-COLA, based on this COCA-COLA call option\r\nprint(yo.get_underlying_price(option_ticker='KO210528C00055000'))\r\n```\r\n\r\n```{r, engine='python', count_lines}\r\nOUTPUT:\r\n54.5127\r\n```\r\n\r\nGet all expiration dates for a stock\r\n------------------------------------\r\nAll expiration dates can be downloaded as a list by doing this:\r\n``` {.sourceCode .python}\r\n# This downloads all expiration dates for THE WALT DISNEY COMPANY options\r\nprint(yo.get_expiration_dates(stock_ticker='DIS'))\r\n```\r\n\r\n```{r, engine='python', count_lines}\r\nOUTPUT:\r\n['2021-05-28', '2021-06-04', '2021-06-11', '2021-06-18', '2021-06-25', '2021-07-02', '2021-07-16', '2021-08-20', '2021-10-15', '2022-01-21', '2022-06-17', '2023-01-20']```\r\n\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Lienus10/yoptions",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yoptions",
    "package_url": "https://pypi.org/project/yoptions/",
    "platform": null,
    "project_url": "https://pypi.org/project/yoptions/",
    "project_urls": {
      "Homepage": "https://github.com/Lienus10/yoptions"
    },
    "release_url": "https://pypi.org/project/yoptions/0.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6, <4",
    "summary": "This downloads stock option data and calculates its greeks.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17156646,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "452a00a5932394be20f5b7058d97df078704d517b34b645f05ae92d9e82e22c6",
          "md5": "dd8e62e94c992c90df027b2e8e7d8f09",
          "sha256": "91ccb0c6d1d4151f2f6db2bc732f851e33dc67d5e9fa2be0feee8898d9304f38"
        },
        "downloads": -1,
        "filename": "yoptions-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dd8e62e94c992c90df027b2e8e7d8f09",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 11339,
        "upload_time": "2021-05-26T12:33:05",
        "upload_time_iso_8601": "2021-05-26T12:33:05.358389Z",
        "url": "https://files.pythonhosted.org/packages/45/2a/00a5932394be20f5b7058d97df078704d517b34b645f05ae92d9e82e22c6/yoptions-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ebca20115e31c70b96d32330ab23b3708eeaeb9e239da3683d8f8c8860d7b58",
          "md5": "a0c200d86db5d0cb0649af604cf6b22b",
          "sha256": "f602134ae1e2aab8db93e040e17ad64a1f8983eabb5ec2f73dfaf0c40632eafb"
        },
        "downloads": -1,
        "filename": "yoptions-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a0c200d86db5d0cb0649af604cf6b22b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 11997,
        "upload_time": "2022-11-12T20:37:29",
        "upload_time_iso_8601": "2022-11-12T20:37:29.753907Z",
        "url": "https://files.pythonhosted.org/packages/1e/bc/a20115e31c70b96d32330ab23b3708eeaeb9e239da3683d8f8c8860d7b58/yoptions-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9edb73b24001946ddfc7af651f27f87a4b968c7b095f43f8266097dd633963d",
          "md5": "def4231cbdd542cad10038a1b9d49bc6",
          "sha256": "6b06ea782376cf1408001f4a3569c31cdfab44e483d4068e45fe8c31ae22a970"
        },
        "downloads": -1,
        "filename": "yoptions-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "def4231cbdd542cad10038a1b9d49bc6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 12035,
        "upload_time": "2022-11-12T20:48:04",
        "upload_time_iso_8601": "2022-11-12T20:48:04.461575Z",
        "url": "https://files.pythonhosted.org/packages/c9/ed/b73b24001946ddfc7af651f27f87a4b968c7b095f43f8266097dd633963d/yoptions-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8ab644db761c8f497cb50f588676790d0e1fae171f387fbd16388e05aba63e2",
          "md5": "f818805f9f0ab5991681de43a73d5069",
          "sha256": "7eab02f0326d6a9b3448be0de16924c89df9210f056e959a3ac2e83c96e86593"
        },
        "downloads": -1,
        "filename": "yoptions-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f818805f9f0ab5991681de43a73d5069",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 11434,
        "upload_time": "2023-03-04T14:15:43",
        "upload_time_iso_8601": "2023-03-04T14:15:43.776274Z",
        "url": "https://files.pythonhosted.org/packages/d8/ab/644db761c8f497cb50f588676790d0e1fae171f387fbd16388e05aba63e2/yoptions-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d8ab644db761c8f497cb50f588676790d0e1fae171f387fbd16388e05aba63e2",
        "md5": "f818805f9f0ab5991681de43a73d5069",
        "sha256": "7eab02f0326d6a9b3448be0de16924c89df9210f056e959a3ac2e83c96e86593"
      },
      "downloads": -1,
      "filename": "yoptions-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "f818805f9f0ab5991681de43a73d5069",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <4",
      "size": 11434,
      "upload_time": "2023-03-04T14:15:43",
      "upload_time_iso_8601": "2023-03-04T14:15:43.776274Z",
      "url": "https://files.pythonhosted.org/packages/d8/ab/644db761c8f497cb50f588676790d0e1fae171f387fbd16388e05aba63e2/yoptions-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}