{
  "info": {
    "author": "kzczencode",
    "author_email": "kzczencode@qq.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "================\r\n        sandglass\r\n        ================\r\n        \r\n        \r\n        安装\r\n        ------------\r\n        \r\n        可以::\r\n        \r\n            easy_install sandglass\r\n        \r\n        或者::\r\n        \r\n            pip install sandglass\r\n        \r\n        \r\n        概览\r\n        --------\r\n        \r\n        **sandglass(沙漏)** 是一个增强的、友好的时间处理库，目的是为了解放程序员的生产力。\r\n        在python中有太多处理时间的库，datetime/date/time/calendar等等。需要记的细节太多，选择困难。\r\n        而sandglass就是解决这个的青霉素。从各种麻烦的转换中解脱出来。\r\n        只需记住 **Sandglass对象** 和 **ben()** 、 **tslice()** 、 **cronwalk()** 这几个主要的api即可。\r\n        \r\n        Features:\r\n        ----------\r\n        + api简洁，开箱即用\r\n        + 增强接管datetime\r\n        + 内置时间字符串解析器\r\n        + 方便进行各种转换\r\n        + 灵活的构造函数\r\n        + 方便的获取各种时间信息\r\n        + 支持伪造当前时间，方便调试\r\n        + 一键生产时间序列\r\n        + 支持解析crontab表达式\r\n        \r\n        用法\r\n        -----\r\n        在sandglass中，核心对象是 **Sandglass对象** 。\r\n        \r\n        **ben()** 函数用来便捷获取Sandglass对象.::\r\n        \r\n            不带参数默认是当前时间\r\n            >>>ben()#shortcut of Sandglass.now()\r\n            参数是时间戳\r\n            >>>ben(timestamp)\r\n            参数是时间字符串\r\n            >>>ben(timestr)\r\n            参数是datetime对象\r\n            >>>ben(datetime)\r\n            参数是Sandglass对象\r\n            >>>ben(Sandglass)\r\n            显式指明格式\r\n            >>>ben('2013-01-01','%Y-%m-%d')\r\n            datetime-like的构造器\r\n            >>>ben(year=2013,month=2,day=8,hour=7)\r\n        \r\n        也就是说，只要把能表达时间的东西塞给ben()就行了。\r\n        值得一说的是ben(timestr)中通过一个词法解析的东西，使得timestr可以很灵活。大体规则是，如果缺少年月日信息，则默认用当前时间的年月日；如果缺少时分秒信息，则默认是0::\r\n        \r\n            >>>ben('2013,1,1') == ben('2013-01,01') == ben('2013 1 01') == ben('2013-01-01 00:00:00')\r\n            True\r\n            >>>ben('2013,1,1 19:23') == ben('2013-01-01 19:23:00')\r\n            True\r\n            >>>now = datetime.now()\r\n            >>>ben('19:23').year == now.year\r\n            True\r\n            >>>ben('19:23').month == now.month\r\n            True\r\n            >>>ben('19:23').day == now.day\r\n            True\r\n            >>> ben('19:23').hour,ben('19:23').minute,ben('19:23').second\r\n            (19,23,0)\r\n        \r\n        **Sandglass对象** ，通过这个对象，可以方便的获取各个时间属性和操作::\r\n        \r\n            >>>sg = ben('2013,1,1 13:14:15')\r\n            >>>sg\r\n            <Sandglass object (2013-01-01 13:14:15)>\r\n            >>>sg.year,sg.month,sg.day,sg.hour,sg.minute,sg.second,sg.microsecond\r\n            (2013, 1, 1, 13, 14, 15, 0)\r\n            >>> sg.timestamp#还能直接获取timestamp\r\n            1357017255.0\r\n        \r\n            #便捷的获取常用的sql格式\r\n            >>> sg.sql\r\n            '2013-01-01 13:14:15'\r\n            >>> sg.sqldate\r\n            '2013-01-01'\r\n            >>> sg.sqltime\r\n            '13:14:15'\r\n        \r\n            #进行增量变换(shift是原地操作，而shifted返回一个新的对象)\r\n            >>> sg.shifted(day=1,minute=-2)\r\n            <Sandglass object (2013-01-02 13:12:15)>\r\n            >>> sg.hour=23\r\n            >>> sg\r\n            <Sandglass object (2013-01-01 23:14:15)>\r\n        \r\n            >>> sg.floor('hour'),sg.ceil('hour')\r\n            (<Sandglass object (2013-01-01 23:00:00)>, <Sandglass object (2013-01-01 23:59:59.999999)>)\r\n            >>> sg.floor('year'),sg.ceil('year')\r\n            (<Sandglass object (2013-01-01 00:00:00)>, <Sandglass object (2013-12-31 23:59:59.999999)>)\r\n            >>> sg.round(30*60)\r\n            <Sandglass object (2013-01-01 23:00:00)>\r\n            >>> sg.roundfloor(30*60)\r\n            <Sandglass object (2013-01-01 23:00:00)>\r\n        \r\n            #重载符号\r\n            >>>sg3 = Sandglass(year=2013,month=2,day=27,hour=0)\r\n            >>>sg4 = Sandglass(year=2013,month=3,day=1,hour=0)\r\n            >>> sg3==sg4\r\n            False\r\n            >>> sg3<sg4\r\n            True\r\n            >>> sg3>sg4\r\n            False\r\n            >>> sg4-sg3\r\n            datetime.timedelta(2)\r\n        \r\n            #mock当前时间，这样就测试的时候就不用改时间，直接mock给当前时间加上个偏移量就行了\r\n            #比如我要把时间往后推一天\r\n            >>> ben()\r\n            <Sandglass object (2014-05-06 12:04:07.113000)>\r\n            >>> Sandglass.mock(day=1)\r\n            >>> ben()\r\n            <Sandglass object (2014-05-07 12:04:38.064000)>\r\n            >>> ben()\r\n            <Sandglass object (2014-05-07 12:04:44.319000)>\r\n            >>> Sandglass.unmock()\r\n            >>> ben()\r\n            <Sandglass object (2014-05-06 12:05:19.003000)>\r\n        \r\n            #其它\r\n            >>> sg\r\n            <Sandglass object (2013-01-01 23:14:15)>\r\n            >>> sg.raw()\r\n            datetime.datetime(2013, 1, 1, 23, 14, 15)\r\n            >>> sg.clone()\r\n            <Sandglass object (2013-01-01 23:14:15)>\r\n            >>> sg.replace(day=2)\r\n            >>> sg\r\n            <Sandglass object (2013-01-02 23:14:15)>\r\n            >>> sg.days_in_month\r\n            31\r\n            >>> sg.is_today()\r\n            False\r\n            >>> sg.is_past_date()\r\n            True\r\n            >>> sg.is_future_date()\r\n            False\r\n            >>> sg.strftime('%Y/%m/%d')\r\n            '2013/01/02'\r\n            >>> Sandglass.strptime('20130203','%Y%m%d')\r\n            <Sandglass object (2013-02-03 00:00:00)>\r\n        \r\n        **tslice** ,受内置函数xrange启发，用于获取一个时间序列。\r\n        \r\n        格式是::\r\n        \r\n            tslice(unit,start=None,end=None,step=1,count=None) -> generator of Sandglass object\r\n            unit in ['year', 'month', 'day', 'hour', 'minute', 'second', 'microsecond']\r\n        \r\n        跟xrange一样，step可以是负数。如果start为空，则默认是当前时间。\r\n        \r\n        示例::\r\n        \r\n            >>>list(tslice('day','2013-01-01','2013-01-04'))\r\n            [<Sandglass object (2013-01-01 00:00:00)>,\r\n            <Sandglass object (2013-01-02 00:00:00)>,\r\n            <Sandglass object (2013-01-03 00:00:00)>]\r\n        \r\n            >>>list(tslice('day','2013-01-04','2013-01-01',step=-1))\r\n            [<Sandglass object (2013-01-04 00:00:00)>,\r\n            <Sandglass object (2013-01-03 00:00:00)>,\r\n            <Sandglass object (2013-01-02 00:00:00)>]\r\n        \r\n            >>>list(tslice('day','2013-01-04','2013-01-31',step=3,count=2))\r\n            [<Sandglass object (2013-01-04 00:00:00)>,\r\n            <Sandglass object (2013-01-07 00:00:00)>]\r\n        \r\n            >>>list(tslice('year',start='2013-01-04',count=2))\r\n            [<Sandglass object (2013-01-04 00:00:00)>,\r\n            <Sandglass object (2014-01-04 00:00:00)>]\r\n        \r\n            >>>list(tslice('minute',start='2013-01-04',count=2))\r\n            [<Sandglass object (2013-01-04 00:00:00)>,\r\n            <Sandglass object (2013-01-04 00:01:00)>]\r\n        \r\n        \r\n        **cronwalk** ,用于对crontab表达式进行演算，得到下一个执行的时间。\r\n        \r\n        格式::\r\n        \r\n            cronwalk(expr,base=None)# 如果base为空，默认是当前时间。\r\n        \r\n        示例::\r\n        \r\n            >>>c = iter(cronwalk('0 6 * * *',base='2013-02-03'))\r\n            >>>next(c)\r\n            <Sandglass object (2013-02-03 06:00:00)>\r\n            >>>next(c)\r\n            <Sandglass object (2013-02-04 06:00:00)>\r\n        \r\n            >>>c = iter(cronwalk('0 23-7/2 * * *',base='2013-02-03 08:30:00'))\r\n            >>>next(c)\r\n            <Sandglass object (2013-02-03 23:00:00)>\r\n            >>>next(c)\r\n            <Sandglass object (2013-02-04 01:00:00)>\r\n        \r\n        **timediff** ,用于计算距离下个指定时间还有多久，比如有个活动是每天20:00:00开始的，要计算距离活动开始还有多久::\r\n        \r\n            >>>timediff('20:00:00',factor=86400,base='19:30:00')\r\n            1800\r\n            >>>timediff('20:00:00',factor=86400,base='21:30:00')\r\n            81000\r\n        \r\n        \r\n        Todo\r\n        ---------\r\n        * Add timezone support\r\n        \r\n        Changelog\r\n        ---------\r\n        **0.0.1**\r\n        \r\n        * Initial release",
    "description_content_type": null,
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kzczencode/sandglass",
    "keywords": "datetime",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "sandglass",
    "package_url": "https://pypi.org/project/sandglass/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/sandglass/",
    "project_urls": {
      "Homepage": "https://github.com/kzczencode/sandglass"
    },
    "release_url": "https://pypi.org/project/sandglass/0.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "datetime enhance",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1083489,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92ce9ca6878969fb80498f3fed887b24518971857c11321b1fd96a232d7d965a",
          "md5": "660ef794bbc95bf8ab93e8b45dfc5190",
          "sha256": "136a7a5d6f1ea3f2f422cc0088a7f64917537f31467f9a5c92c7e86111123e00"
        },
        "downloads": -1,
        "filename": "sandglass-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "660ef794bbc95bf8ab93e8b45dfc5190",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16261,
        "upload_time": "2014-05-06T10:18:15",
        "upload_time_iso_8601": "2014-05-06T10:18:15.489433Z",
        "url": "https://files.pythonhosted.org/packages/92/ce/9ca6878969fb80498f3fed887b24518971857c11321b1fd96a232d7d965a/sandglass-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "92ce9ca6878969fb80498f3fed887b24518971857c11321b1fd96a232d7d965a",
        "md5": "660ef794bbc95bf8ab93e8b45dfc5190",
        "sha256": "136a7a5d6f1ea3f2f422cc0088a7f64917537f31467f9a5c92c7e86111123e00"
      },
      "downloads": -1,
      "filename": "sandglass-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "660ef794bbc95bf8ab93e8b45dfc5190",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16261,
      "upload_time": "2014-05-06T10:18:15",
      "upload_time_iso_8601": "2014-05-06T10:18:15.489433Z",
      "url": "https://files.pythonhosted.org/packages/92/ce/9ca6878969fb80498f3fed887b24518971857c11321b1fd96a232d7d965a/sandglass-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}