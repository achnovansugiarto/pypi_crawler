{
  "info": {
    "author": "Jon Crall",
    "author_email": "jon.crall@kitware.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "The delayed_image Module\n========================\n\n|Pypi| |PypiDownloads| |ReadTheDocs|\n\nThe delayed image module lets you describe (a tree of) image operations, but\nwaits to execute them until the user calls ``finalize``. This allows for a\nsequence of operations to be optimized before it is executed, which means\nfaster execution and fewer quantization artifacts.\n\nThe optimization logic can also leverage image formats that contain builtin\ntiling or overviews using the GDAL library. Formats that contain tiles allow\ndelayed image to read only a subset of the image, if only a small part is\ncropped to it.  Overviews allow delayed image to load pre-downscaled images if\nit detects a scaling operation. This is **much** faster than the naive way of\naccomplishing these operations, and **much** easier than having to remember to\ndo everything in the right order yourself.\n\nNote: GDAL is optional, but recommended. Precompiled GDAL wheels are available\non Kitware's `large image wheel repository <https://girder.github.io/large_image_wheels/>`__.\nUse ``pip install gdal -f https://girder.github.io/large_image_wheels/`` \nto install gdal from this server. Track status of official gdal wheels `here\n<https://github.com/OSGeo/gdal/issues/3060>`__.\n\n\nHistory\n-------\n\nThis module is still in its early days of development and is a port the\nfollowing code from kwcoco:\n\n* ChannelSpec\n* SensorChannelSpec\n* DelayedLoad & other delayed operations\n\n\nQuick Start\n-----------\n\n.. code:: python\n\n    # Given a path to some image\n    import kwimage\n    fpath = kwimage.grab_test_image_fpath('amazon')\n\n    # Demo how to load, scale, and crop a part of an image.\n    import delayed_image\n    delayed = delayed_image.DelayedLoad(fpath)\n    delayed = delayed.prepare()\n    delayed = delayed.scale(0.1)\n    delayed = delayed[128:256, 128:256]\n\n    import kwplot\n    kwplot.autompl()\n    kwplot.imshow(delayed.finalize())\n    kwimage.imwrite('foo.png', delayed.finalize())\n    \n.. image:: https://i.imgur.com/lsWLkPx.png\n\nSee `the quickstart jupyter notebook <examples/quickstart.ipynb/>`__ for more details.\n\nDelayed Loading\n---------------\n\nExample of delayed loading:\n\n.. code:: python\n\n    >>> from delayed_image import DelayedLoad\n    >>> import kwimage\n    >>> fpath = kwimage.grab_test_image_fpath(overviews=3)\n    >>> dimg = DelayedLoad(fpath, channels='r|g|b').prepare()\n    >>> quantization = {'quant_max': 255, 'nodata': 0}\n    >>> #\n    >>> # Make a complex chain of operations\n    >>> dimg = dimg.dequantize(quantization)\n    >>> dimg = dimg.warp({'scale': 1.1})\n    >>> dimg = dimg.warp({'scale': 1.1})\n    >>> dimg = dimg[0:400, 1:400]\n    >>> dimg = dimg.warp({'scale': 0.5})\n    >>> dimg = dimg[0:800, 1:800]\n    >>> dimg = dimg.warp({'scale': 0.5})\n    >>> dimg = dimg[0:800, 1:800]\n    >>> dimg = dimg.warp({'scale': 0.5})\n    >>> dimg = dimg.warp({'scale': 1.1})\n    >>> dimg = dimg.warp({'scale': 1.1})\n    >>> dimg = dimg.warp({'scale': 2.1})\n    >>> dimg = dimg[0:200, 1:200]\n    >>> dimg = dimg[1:200, 2:200]\n    >>> dimg.write_network_text()\n    ╙── Crop dsize=(128,130),space_slice=(slice(1,131,None),slice(2,130,None))\n        └─╼ Crop dsize=(130,131),space_slice=(slice(0,131,None),slice(1,131,None))\n            └─╼ Warp dsize=(131,131),transform={scale=2.1000}\n                └─╼ Warp dsize=(62,62),transform={scale=1.1000}\n                    └─╼ Warp dsize=(56,56),transform={scale=1.1000}\n                        └─╼ Warp dsize=(50,50),transform={scale=0.5000}\n                            └─╼ Crop dsize=(99,100),space_slice=(slice(0,100,None),slice(1,100,None))\n                                └─╼ Warp dsize=(100,100),transform={scale=0.5000}\n                                    └─╼ Crop dsize=(199,200),space_slice=(slice(0,200,None),slice(1,200,None))\n                                        └─╼ Warp dsize=(200,200),transform={scale=0.5000}\n                                            └─╼ Crop dsize=(399,400),space_slice=(slice(0,400,None),slice(1,400,None))\n                                                └─╼ Warp dsize=(621,621),transform={scale=1.1000}\n                                                    └─╼ Warp dsize=(564,564),transform={scale=1.1000}\n                                                        └─╼ Dequantize dsize=(512,512),quantization={quant_max=255,nodata=0}\n                                                            └─╼ Load channels=r|g|b,dsize=(512,512),num_overviews=3,fname=astro_overviews=3.tif\n\n    >>> # Optimize the chain\n    >>> dopt = dimg.optimize()\n    >>> dopt.write_network_text()\n    ╙── Warp dsize=(128,130),transform={offset=(-0.6...,-1.0...),scale=1.5373}\n        └─╼ Dequantize dsize=(80,83),quantization={quant_max=255,nodata=0}\n            └─╼ Crop dsize=(80,83),space_slice=(slice(0,83,None),slice(3,83,None))\n                └─╼ Overview dsize=(128,128),overview=2\n                    └─╼ Load channels=r|g|b,dsize=(512,512),num_overviews=3,fname=astro_overviews=3.tif\n\n    #\n    >>> final0 = dimg.finalize(optimize=False)\n    >>> final1 = dopt.finalize()\n    >>> assert final0.shape == final1.shape\n    >>> # xdoctest: +REQUIRES(--show)\n    >>> import kwplot\n    >>> kwplot.autompl()\n    >>> kwplot.imshow(final0, pnum=(1, 2, 1), fnum=1, title='raw')\n    >>> kwplot.imshow(final1, pnum=(1, 2, 2), fnum=1, title='optimized')\n\n \n.. image:: https://i.imgur.com/3SGvxtC.png\n\n\nSensorChanSpec\n--------------\n\nIncludes the SensorChan spec, which makes handling channels from different\nsensing sources easier.\n\nIt has a simple grammar:\n\n .. code:: \n\n    // SENSOR_CHAN_GRAMMAR\n    ?start: stream\n\n    // An identifier can contain spaces\n    IDEN: (\"_\"|\"*\"|LETTER) (\"_\"|\" \"|\"-\"|\"*\"|LETTER|DIGIT)*\n\n    chan_single : IDEN\n    chan_getitem : IDEN \".\" INT\n    chan_getslice_0b : IDEN \":\" INT\n    chan_getslice_ab : (IDEN \".\" INT \":\" INT) | (IDEN \":\" INT \":\" INT)\n\n    // A channel code can just be an ID, or it can have a getitem\n    // style syntax with a scalar or slice as an argument\n    chan_code : chan_single | chan_getslice_0b | chan_getslice_ab | chan_getitem\n\n    // Fused channels are an ordered sequence of channel codes (without sensors)\n    fused : chan_code (\"|\" chan_code)*\n\n    // A channel only part can be a fused channel or a sequence\n    channel_rhs : fused | fused_seq\n\n    // Channels can be specified in a sequence but must contain parens\n    fused_seq : \"(\" fused (\",\" fused)* \")\"\n\n    // Sensors can be specified in a sequence but must contain parens\n    sensor_seq : \"(\" IDEN (\",\" IDEN)* \"):\"\n\n    sensor_lhs : (IDEN \":\") | (sensor_seq)\n\n    sensor_chan : sensor_lhs channel_rhs?\n\n    nosensor_chan : channel_rhs\n\n    stream_item : sensor_chan | nosensor_chan\n\n    // A stream is an unordered sequence of fused channels, that can\n    // optionally contain sensor specifications.\n\n    stream : stream_item (\",\" stream_item)*\n\n    %import common.DIGIT\n    %import common.LETTER\n    %import common.INT\n\n\nYou can think of a channel spec is that splitting the spec by \",\" gives groups\nof channels that should be processed together and \"late-fused\".  Within each\ngroup the \"|\" operator \"early-fuses\" the channels.\n\nFor instance, say we had a network and we wanted to process 3-channel rgb\nimages in one stream and 1-channel infrared images in a second stream and then\nfuse them together. The channel specification for channels labled as 'red',\n'green', 'blue', and 'infrared' would be:\n\n.. code::\n\n    infrared,red|green|blue\n\n\nSensors can be included with a colon prefix. Parenthesis can be used for\ngrouping.\n\n.. code::\n\n\n    S2:(infrared,red|green|blue)\n\n\n.. |Pypi| image:: https://img.shields.io/pypi/v/delayed_image.svg\n    :target: https://pypi.python.org/pypi/delayed_image\n\n.. |PypiDownloads| image:: https://img.shields.io/pypi/dm/delayed_image.svg\n    :target: https://pypistats.org/packages/delayed_image\n\n.. |ReadTheDocs| image:: https://readthedocs.org/projects/delayed_image/badge/?version=latest\n    :target: http://delayed_image.readthedocs.io/en/latest/\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Apache 2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "delayed-image",
    "package_url": "https://pypi.org/project/delayed-image/",
    "platform": null,
    "project_url": "https://pypi.org/project/delayed-image/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/delayed-image/0.2.6/",
    "requires_dist": [
      "kwarray",
      "kwimage",
      "ubelt",
      "affine",
      "numpy ; python_version < \"3.10\" and python_version >= \"3.9\"",
      "numpy ; python_version < \"3.11\" and python_version >= \"3.10\"",
      "numpy ; python_version < \"3.7\" and python_version >= \"3.6\"",
      "networkx ; python_version < \"3.7.0\" and python_version >= \"3.6.0\"",
      "networkx ; python_version < \"3.8\" and python_version >= \"3.7\"",
      "numpy ; python_version < \"3.8\" and python_version >= \"3.7\"",
      "numpy ; python_version < \"3.9\" and python_version >= \"3.8\"",
      "numpy ; python_version >= \"3.11\"",
      "networkx ; python_version >= \"3.8\"",
      "kwarray ; extra == 'all'",
      "kwimage ; extra == 'all'",
      "ubelt ; extra == 'all'",
      "affine ; extra == 'all'",
      "xdoctest ; extra == 'all'",
      "pytest-timeout ; extra == 'all'",
      "codecov ; extra == 'all'",
      "lark-cython ; extra == 'all'",
      "lark ; extra == 'all'",
      "xarray ; extra == 'all'",
      "kwarray (==0.6.0) ; extra == 'all-strict'",
      "kwimage (==0.9.7) ; extra == 'all-strict'",
      "ubelt (==1.2.1) ; extra == 'all-strict'",
      "affine (==2.3.1) ; extra == 'all-strict'",
      "xdoctest (==0.14.0) ; extra == 'all-strict'",
      "pytest-timeout (==1.4.2) ; extra == 'all-strict'",
      "codecov (==2.0.15) ; extra == 'all-strict'",
      "lark-cython (==0.0.12) ; extra == 'all-strict'",
      "lark (==1.1.2) ; extra == 'all-strict'",
      "xarray (==0.16.0) ; extra == 'all-strict'",
      "coverage (==4.5) ; (python_version < \"2.7\" and python_version >= \"2.6\") and extra == 'all-strict'",
      "pytest (<=4.6.11,==4.6.0) ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'all-strict'",
      "pytest-cov (==2.8.1) ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'all-strict'",
      "numpy (==1.19.3) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all-strict'",
      "coverage (==5.3.1) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all-strict'",
      "pytest (==4.6.0) ; (python_version < \"3.10.0\" and python_version >= \"3.7.0\") and extra == 'all-strict'",
      "numpy (==1.21.6) ; (python_version < \"3.11\" and python_version >= \"3.10\") and extra == 'all-strict'",
      "coverage (==5.3.1) ; (python_version < \"3.4\" and python_version >= \"2.7\") and extra == 'all-strict'",
      "coverage (==4.3.4) ; (python_version < \"3.5\" and python_version >= \"3.4\") and extra == 'all-strict'",
      "pytest (<=4.6.11,==4.6.0) ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'all-strict'",
      "pytest-cov (==2.8.1) ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'all-strict'",
      "coverage (==5.3.1) ; (python_version < \"3.6\" and python_version >= \"3.5\") and extra == 'all-strict'",
      "pytest (<=6.1.2,==4.6.0) ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'all-strict'",
      "pytest-cov (==2.9.0) ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'all-strict'",
      "numpy (==1.19.2) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all-strict'",
      "coverage (==6.1.1) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all-strict'",
      "networkx (<=2.5.1,==2.2.0) ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'all-strict'",
      "pytest (==4.6.0) ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'all-strict'",
      "networkx (==2.6.2) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all-strict'",
      "numpy (==1.19.2) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all-strict'",
      "coverage (==6.1.1) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all-strict'",
      "numpy (==1.19.2) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all-strict'",
      "coverage (==6.1.1) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all-strict'",
      "coverage (==6.1.1) ; (python_version >= \"3.10\") and extra == 'all-strict'",
      "pytest (==6.2.5) ; (python_version >= \"3.10.0\") and extra == 'all-strict'",
      "numpy (==1.23.2) ; (python_version >= \"3.11\") and extra == 'all-strict'",
      "pytest-cov (==3.0.0) ; (python_version >= \"3.6.0\") and extra == 'all-strict'",
      "networkx (==2.7) ; (python_version >= \"3.8\") and extra == 'all-strict'",
      "coverage ; (python_version < \"2.7\" and python_version >= \"2.6\") and extra == 'all'",
      "pytest ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'all'",
      "pytest-cov ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'all'",
      "numpy ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all'",
      "coverage ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all'",
      "pytest ; (python_version < \"3.10.0\" and python_version >= \"3.7.0\") and extra == 'all'",
      "numpy ; (python_version < \"3.11\" and python_version >= \"3.10\") and extra == 'all'",
      "coverage ; (python_version < \"3.4\" and python_version >= \"2.7\") and extra == 'all'",
      "coverage ; (python_version < \"3.5\" and python_version >= \"3.4\") and extra == 'all'",
      "pytest ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'all'",
      "pytest-cov ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'all'",
      "coverage ; (python_version < \"3.6\" and python_version >= \"3.5\") and extra == 'all'",
      "pytest ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'all'",
      "xarray (==0.16.0) ; extra == 'optional-strict'",
      "pytest-cov ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'all'",
      "numpy ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all'",
      "coverage ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all'",
      "networkx ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'all'",
      "pytest ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'all'",
      "networkx ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all'",
      "numpy ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all'",
      "coverage ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all'",
      "numpy ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all'",
      "coverage ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all'",
      "coverage ; (python_version >= \"3.10\") and extra == 'all'",
      "pytest ; (python_version >= \"3.10.0\") and extra == 'all'",
      "numpy ; (python_version >= \"3.11\") and extra == 'all'",
      "pytest-cov ; (python_version >= \"3.6.0\") and extra == 'all'",
      "networkx ; (python_version >= \"3.8\") and extra == 'all'",
      "opencv-python (==3.4.15.55) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'graphics-strict'",
      "opencv-python (==3.1.0.0) ; (python_version < \"3.4\" and python_version >= \"2.7\") and extra == 'graphics-strict'",
      "opencv-python (==3.1.0.5) ; (python_version < \"3.5\" and python_version >= \"3.4\") and extra == 'graphics-strict'",
      "opencv-python (==3.1.0.2) ; (python_version < \"3.6\" and python_version >= \"3.5\") and extra == 'graphics-strict'",
      "opencv-python (==3.4.13.47) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'graphics-strict'",
      "opencv-python (==3.4.15.55) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'graphics-strict'",
      "opencv-python (==3.4.15.55) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'graphics-strict'",
      "opencv-python (==4.5.4.58) ; (python_version >= \"3.10\") and extra == 'graphics-strict'",
      "opencv-python ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'graphics'",
      "opencv-python ; (python_version < \"3.4\" and python_version >= \"2.7\") and extra == 'graphics'",
      "opencv-python ; (python_version < \"3.5\" and python_version >= \"3.4\") and extra == 'graphics'",
      "opencv-python ; (python_version < \"3.6\" and python_version >= \"3.5\") and extra == 'graphics'",
      "opencv-python ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'graphics'",
      "opencv-python ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'graphics'",
      "opencv-python ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'graphics'",
      "opencv-python ; (python_version >= \"3.10\") and extra == 'graphics'",
      "opencv-python-headless (==3.4.13.47) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'headless-strict'",
      "opencv-python-headless (==3.4.2.16) ; (python_version < \"3.4\" and python_version >= \"2.7\") and extra == 'headless-strict'",
      "opencv-python-headless (==3.4.2.16) ; (python_version < \"3.5\" and python_version >= \"3.4\") and extra == 'headless-strict'",
      "opencv-python-headless (==3.4.11.39) ; (python_version < \"3.6\" and python_version >= \"3.5\") and extra == 'headless-strict'",
      "opencv-python-headless (==3.4.13.47) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'headless-strict'",
      "opencv-python-headless (==3.4.13.47) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'headless-strict'",
      "opencv-python-headless (==3.4.13.47) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'headless-strict'",
      "opencv-python-headless (==4.5.4.58) ; (python_version >= \"3.10\") and extra == 'headless-strict'",
      "opencv-python-headless ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'headless'",
      "opencv-python-headless ; (python_version < \"3.4\" and python_version >= \"2.7\") and extra == 'headless'",
      "opencv-python-headless ; (python_version < \"3.5\" and python_version >= \"3.4\") and extra == 'headless'",
      "opencv-python-headless ; (python_version < \"3.6\" and python_version >= \"3.5\") and extra == 'headless'",
      "opencv-python-headless ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'headless'",
      "opencv-python-headless ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'headless'",
      "opencv-python-headless ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'headless'",
      "opencv-python-headless ; (python_version >= \"3.10\") and extra == 'headless'",
      "lark-cython ; extra == 'optional'",
      "lark ; extra == 'optional'",
      "xarray ; extra == 'optional'",
      "lark-cython (==0.0.12) ; extra == 'optional-strict'",
      "lark (==1.1.2) ; extra == 'optional-strict'",
      "kwarray (==0.6.0) ; extra == 'runtime-strict'",
      "kwimage (==0.9.7) ; extra == 'runtime-strict'",
      "ubelt (==1.2.1) ; extra == 'runtime-strict'",
      "affine (==2.3.1) ; extra == 'runtime-strict'",
      "numpy (==1.19.3) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'runtime-strict'",
      "numpy (==1.21.6) ; (python_version < \"3.11\" and python_version >= \"3.10\") and extra == 'runtime-strict'",
      "numpy (==1.19.2) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'runtime-strict'",
      "networkx (<=2.5.1,==2.2.0) ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'runtime-strict'",
      "networkx (==2.6.2) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'runtime-strict'",
      "numpy (==1.19.2) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'runtime-strict'",
      "numpy (==1.19.2) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'runtime-strict'",
      "numpy (==1.23.2) ; (python_version >= \"3.11\") and extra == 'runtime-strict'",
      "networkx (==2.7) ; (python_version >= \"3.8\") and extra == 'runtime-strict'",
      "xdoctest ; extra == 'tests'",
      "pytest-timeout ; extra == 'tests'",
      "codecov ; extra == 'tests'",
      "xdoctest (==0.14.0) ; extra == 'tests-strict'",
      "pytest-timeout (==1.4.2) ; extra == 'tests-strict'",
      "codecov (==2.0.15) ; extra == 'tests-strict'",
      "coverage (==4.5) ; (python_version < \"2.7\" and python_version >= \"2.6\") and extra == 'tests-strict'",
      "pytest (<=4.6.11,==4.6.0) ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'tests-strict'",
      "pytest-cov (==2.8.1) ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'tests-strict'",
      "coverage (==5.3.1) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'tests-strict'",
      "pytest (==4.6.0) ; (python_version < \"3.10.0\" and python_version >= \"3.7.0\") and extra == 'tests-strict'",
      "coverage (==5.3.1) ; (python_version < \"3.4\" and python_version >= \"2.7\") and extra == 'tests-strict'",
      "coverage (==4.3.4) ; (python_version < \"3.5\" and python_version >= \"3.4\") and extra == 'tests-strict'",
      "pytest (<=4.6.11,==4.6.0) ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'tests-strict'",
      "pytest-cov (==2.8.1) ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'tests-strict'",
      "coverage (==5.3.1) ; (python_version < \"3.6\" and python_version >= \"3.5\") and extra == 'tests-strict'",
      "pytest (<=6.1.2,==4.6.0) ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'tests-strict'",
      "pytest-cov (==2.9.0) ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'tests-strict'",
      "coverage (==6.1.1) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'tests-strict'",
      "pytest (==4.6.0) ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'tests-strict'",
      "coverage (==6.1.1) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'tests-strict'",
      "coverage (==6.1.1) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'tests-strict'",
      "coverage (==6.1.1) ; (python_version >= \"3.10\") and extra == 'tests-strict'",
      "pytest (==6.2.5) ; (python_version >= \"3.10.0\") and extra == 'tests-strict'",
      "pytest-cov (==3.0.0) ; (python_version >= \"3.6.0\") and extra == 'tests-strict'",
      "coverage ; (python_version < \"2.7\" and python_version >= \"2.6\") and extra == 'tests'",
      "pytest ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'tests'",
      "pytest-cov ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'tests'",
      "coverage ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'tests'",
      "pytest ; (python_version < \"3.10.0\" and python_version >= \"3.7.0\") and extra == 'tests'",
      "coverage ; (python_version < \"3.4\" and python_version >= \"2.7\") and extra == 'tests'",
      "coverage ; (python_version < \"3.5\" and python_version >= \"3.4\") and extra == 'tests'",
      "pytest ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'tests'",
      "pytest-cov ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'tests'",
      "coverage ; (python_version < \"3.6\" and python_version >= \"3.5\") and extra == 'tests'",
      "pytest ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'tests'",
      "pytest-cov ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'tests'",
      "coverage ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'tests'",
      "pytest ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'tests'",
      "coverage ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'tests'",
      "coverage ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'tests'",
      "coverage ; (python_version >= \"3.10\") and extra == 'tests'",
      "pytest ; (python_version >= \"3.10.0\") and extra == 'tests'",
      "pytest-cov ; (python_version >= \"3.6.0\") and extra == 'tests'"
    ],
    "requires_python": ">=3.6",
    "summary": "The delayed_image module",
    "version": "0.2.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17322373,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4d405a193b9c10f5c322cb89611031f56230b8d5cb2605fb20e28a5822042ea",
          "md5": "082075f8ea20e3c5ad670a2f3fe2b30a",
          "sha256": "ad8ce100d0ffbdefc90ba4f7d60f2e00918d2f00e35ee3e1fd312ebcd7d75eb1"
        },
        "downloads": -1,
        "filename": "delayed_image-0.1.0-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "082075f8ea20e3c5ad670a2f3fe2b30a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 63617,
        "upload_time": "2022-09-21T00:26:03",
        "upload_time_iso_8601": "2022-09-21T00:26:03.654375Z",
        "url": "https://files.pythonhosted.org/packages/c4/d4/05a193b9c10f5c322cb89611031f56230b8d5cb2605fb20e28a5822042ea/delayed_image-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28fb894e1a9dc368a8bbfcf55b7a6f56d7292900135902618780d1e605bba23b",
          "md5": "d0fc3741dd6fa5a6e4132d81b5a4fdb7",
          "sha256": "acc9f84e0feda387ae7e86620674cd047175856656fa0e3032152d59ea498e00"
        },
        "downloads": -1,
        "filename": "delayed_image-0.1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "d0fc3741dd6fa5a6e4132d81b5a4fdb7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 62721,
        "upload_time": "2022-09-21T00:26:07",
        "upload_time_iso_8601": "2022-09-21T00:26:07.927149Z",
        "url": "https://files.pythonhosted.org/packages/28/fb/894e1a9dc368a8bbfcf55b7a6f56d7292900135902618780d1e605bba23b/delayed_image-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "348ed79304c0b5bb5f778aaa83962659ffe07ccdbadaa35d261fe2561863d756",
          "md5": "22f607be811b7fccafa0466455e82c8c",
          "sha256": "04f7b7c01002cd78d81a91efcb39d82f360aef28bce0323e4ed9125ef1603f2c"
        },
        "downloads": -1,
        "filename": "delayed_image-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "22f607be811b7fccafa0466455e82c8c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 67603,
        "upload_time": "2022-09-27T01:39:47",
        "upload_time_iso_8601": "2022-09-27T01:39:47.091578Z",
        "url": "https://files.pythonhosted.org/packages/34/8e/d79304c0b5bb5f778aaa83962659ffe07ccdbadaa35d261fe2561863d756/delayed_image-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8819ae93a36522fd4ed1ba3d81e58ea740a9c11924d505fd1319dbd809ef273",
          "md5": "2918972646919b827758279b2ddb288c",
          "sha256": "dc1cd7741ac5201eaae0f4a9fbd0677bdc8b4b50aa74dc6dd634290fa1e3856f"
        },
        "downloads": -1,
        "filename": "delayed_image-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2918972646919b827758279b2ddb288c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 66432,
        "upload_time": "2022-09-27T01:39:51",
        "upload_time_iso_8601": "2022-09-27T01:39:51.055438Z",
        "url": "https://files.pythonhosted.org/packages/a8/81/9ae93a36522fd4ed1ba3d81e58ea740a9c11924d505fd1319dbd809ef273/delayed_image-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ba4398ec53a162c3005ec12640422b0b480d6a09c431cb2471b8971875c9b19",
          "md5": "bc0b26733bb0abc6a448899f2b826fdf",
          "sha256": "2d4fe7ed862d3bd1056bd985ea7c78e72c0b01414847f36829e77a2363643cda"
        },
        "downloads": -1,
        "filename": "delayed_image-0.2.1-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "bc0b26733bb0abc6a448899f2b826fdf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 67602,
        "upload_time": "2022-09-27T16:31:03",
        "upload_time_iso_8601": "2022-09-27T16:31:03.058209Z",
        "url": "https://files.pythonhosted.org/packages/3b/a4/398ec53a162c3005ec12640422b0b480d6a09c431cb2471b8971875c9b19/delayed_image-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ac88af017b9c1ee01e545b1be6d14a453fcb4907064bdf7f11e8e243f1a9d14",
          "md5": "ad2fca3477b1d4edb3023105fac68dce",
          "sha256": "f69ecd733093ea97704cdbed6e5012180dec433fbe44589c67f3005cd2524926"
        },
        "downloads": -1,
        "filename": "delayed_image-0.2.2-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "ad2fca3477b1d4edb3023105fac68dce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 68408,
        "upload_time": "2022-09-28T21:26:03",
        "upload_time_iso_8601": "2022-09-28T21:26:03.313629Z",
        "url": "https://files.pythonhosted.org/packages/6a/c8/8af017b9c1ee01e545b1be6d14a453fcb4907064bdf7f11e8e243f1a9d14/delayed_image-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e5eae6dad0ffb9d55caddecadd7cf25774751e0eeb209a4e73cfbb2cf5a476c",
          "md5": "2682cd530f3d1ab05e39c9a07b1c738e",
          "sha256": "1decb73efccd3bc6e783d5a137fa74a7933d7b27f94994e869f491f52b692b8d"
        },
        "downloads": -1,
        "filename": "delayed_image-0.2.3-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "2682cd530f3d1ab05e39c9a07b1c738e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 68562,
        "upload_time": "2022-11-07T20:51:11",
        "upload_time_iso_8601": "2022-11-07T20:51:11.964125Z",
        "url": "https://files.pythonhosted.org/packages/1e/5e/ae6dad0ffb9d55caddecadd7cf25774751e0eeb209a4e73cfbb2cf5a476c/delayed_image-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67bf91663b04f9dd28f9789169b3c36182ed6f76561ffdc7b389e79e048e9916",
          "md5": "352b2fe8fd67af23aaa79ad552257b93",
          "sha256": "b2885862c86ebcf5e692e0e3d9a13c1cef9d7c2a4f03add00aa0cc5a68ada5c6"
        },
        "downloads": -1,
        "filename": "delayed_image-0.2.4-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "352b2fe8fd67af23aaa79ad552257b93",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 70191,
        "upload_time": "2023-02-02T05:13:50",
        "upload_time_iso_8601": "2023-02-02T05:13:50.527866Z",
        "url": "https://files.pythonhosted.org/packages/67/bf/91663b04f9dd28f9789169b3c36182ed6f76561ffdc7b389e79e048e9916/delayed_image-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41ec67dd8df128a89952b8e45ec0a46bbc4dd79cd266623ea0286db2dd412f03",
          "md5": "5537a29727ad2da64dbb6eedf1799a2a",
          "sha256": "5644b35610c547441f98b0bd9ea643492ca664f5feb4e973b09f02253c82816a"
        },
        "downloads": -1,
        "filename": "delayed_image-0.2.5-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "5537a29727ad2da64dbb6eedf1799a2a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 70321,
        "upload_time": "2023-03-05T04:05:36",
        "upload_time_iso_8601": "2023-03-05T04:05:36.857545Z",
        "url": "https://files.pythonhosted.org/packages/41/ec/67dd8df128a89952b8e45ec0a46bbc4dd79cd266623ea0286db2dd412f03/delayed_image-0.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f94674f53012369534c04ede6fe83d815cfd5c8e6932b82000a50a28cacf417",
          "md5": "1eabf06e8d36f49600ea4d1058776679",
          "sha256": "0dc80363ab0defe2162d61f6019112426db88176ff60c932adadf4843c9832da"
        },
        "downloads": -1,
        "filename": "delayed_image-0.2.6-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "1eabf06e8d36f49600ea4d1058776679",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 70620,
        "upload_time": "2023-03-16T17:23:25",
        "upload_time_iso_8601": "2023-03-16T17:23:25.806438Z",
        "url": "https://files.pythonhosted.org/packages/0f/94/674f53012369534c04ede6fe83d815cfd5c8e6932b82000a50a28cacf417/delayed_image-0.2.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f94674f53012369534c04ede6fe83d815cfd5c8e6932b82000a50a28cacf417",
        "md5": "1eabf06e8d36f49600ea4d1058776679",
        "sha256": "0dc80363ab0defe2162d61f6019112426db88176ff60c932adadf4843c9832da"
      },
      "downloads": -1,
      "filename": "delayed_image-0.2.6-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "1eabf06e8d36f49600ea4d1058776679",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 70620,
      "upload_time": "2023-03-16T17:23:25",
      "upload_time_iso_8601": "2023-03-16T17:23:25.806438Z",
      "url": "https://files.pythonhosted.org/packages/0f/94/674f53012369534c04ede6fe83d815cfd5c8e6932b82000a50a28cacf417/delayed_image-0.2.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}