{
  "info": {
    "author": "Alex Dap",
    "author_email": "Alex Dap <shlisi2017@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![Python package](https://github.com/dapalex/py-graphql-mapper/actions/workflows/python-package.yml/badge.svg)](https://github.com/dapalex/py-graphql-mapper/actions/workflows/python-package.yml)\r\n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/280533e425784f7da9ecb0f6e529886b)](https://www.codacy.com/gh/dapalex/py-graphql-mapper/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=dapalex/py-graphql-mapper&amp;utm_campaign=Badge_Grade)\r\n--------------------------------------------------------------------------------\r\n# py-graphql-mapper\r\n[![Code Generation Test](https://github.com/dapalex/py-graphql-mapper/actions/workflows/test-codegen.yml/badge.svg)](https://github.com/dapalex/py-graphql-mapper/actions/workflows/test-codegen.yml)\r\n[![Pyhon-GraphQL Mapping Test](https://github.com/dapalex/py-graphql-mapper/actions/workflows/test-map.yml/badge.svg)](https://github.com/dapalex/py-graphql-mapper/actions/workflows/test-map.yml)\r\n\r\nA python library to interact with GraphQL APIs with no need of hardcoded strings.\r\n\r\n## Introduction\r\n\r\nThis library acts as a mapper between python and GraphQL languages for GraphQL clients, allowing a code-first approach when calling a GraphQL API server.\r\nIt translates GraphQL entities into python objects and viceversa in order to avoid working with massive \"copy&paste\"s.\r\n\r\nThis document contains a quick overview of the functionalities, for more details and options you can read here:\r\n\r\n* [Code Generation](https://github.com/dapalex/py-graphql-mapper/blob/main/codegen/README.MD)\r\n* [Core Mapper](https://github.com/dapalex/py-graphql-mapper/blob/main/pygqlmap/README.MD)\r\n* [Use Cases](https://github.com/dapalex/py-graphql-mapper/blob/main/tests/README.MD)\r\n\r\n\r\nThe package does not use any third-party libraries, it relies only on python 3 (3.10+) standard libraries.\r\n\r\n\r\n## Usage in a nutshell\r\n\r\n### Installation\r\n\r\nAvailable in PyPI, the following command will install the library:\r\n\r\n```\r\npip install py-graphql-mapper\r\n```\r\n\r\n\r\n### Generate python code from schema\r\n\r\nTo generate the code execute the following command:\r\n\r\n```\r\npgmcodegen generate ./pathToOutputFolder -apiArgs ./pathToArgsFile/generatorArgs.json\r\n```\r\n\r\nThis command requires a json file containing the parameters needed to get the GraphQL schema\r\n\r\n![image](https://github.com/dapalex/py-graphql-mapper/blob/main/docs/cli_args_nutshell.png)\r\n\r\nA sample is availabe in the main folder 'cli_args.json'\r\n\r\nThe following python files will be generated:\r\n\r\n* enums.py\r\n* scalars.py\r\n* gql_simple_types.py\r\n* gql_types.py\r\n* type_refs.py\r\n* queries.py\r\n* mutations.py\r\n\r\nThese links show code generated using the library [Github GraphQL API](https://github.com/dapalex/py-graphql-mapper/blob/main/tests/output/github), [Rapid GraphQL API](https://github.com/dapalex/py-graphql-mapper/blob/main/tests/output/rapidapi) and [GeoDBCities API](https://github.com/dapalex/py-graphql-mapper/blob/main/tests/output/gdbc)\r\n\r\nMore command options are available [here](https://github.com/dapalex/py-graphql-mapper/blob/main/codegen/README.MD)\r\n\r\n\r\n### Execution of a query\r\n\r\nChoose the query class you want to use from the generated file queries.py (or a mutation from mutations.py):\r\n\r\nInstantiate it adding GraphQL arguments as parameters:\r\n```python\r\nfrom .output.gdbc.queries import currencies\r\n\r\nmy_currencies = currencies(last=7, before='MTE=')\r\n```\r\nor add them using the field _args_\r\n\r\n```python\r\nmy_currencies._args.last = 7\r\nmy_currencies._args.before = 'MTE='\r\n```\r\nThen call _export_gql_source_ property to pass the payload to the HTTP request:\r\n\r\n(example using _requests_ library)\r\n```python\r\nimport requests\r\n\r\nresponse = requests.request('POST', url='https://geodb-cities-graphql.p.rapidapi.com/',\r\n                            json= { \"query\": my_currencies.export_gql_source },\r\n                            headers={\r\n                                    \"content-type\": \"application/json\",\r\n                                        \"X-RapidAPI-Key\": '123402mmri02fni230iif32jr420',\r\n                                        \"X-RapidAPI-Host\": \"geodb-cities-graphql.p.rapidapi.com\"\r\n                                    }\r\n                            )\r\n```\r\n\r\nMore details on how to set a query [here](https://github.com/dapalex/py-graphql-mapper/blob/main/pygqlmap/README.MD#executing-an-operation)\r\n\r\n\r\n### Retrieval of a response\r\n\r\nObtained the response from the GraphQL API the following code will map the received json payload into the python object\r\n\r\n```python\r\nfrom pygqlmap.network import GQLResponse\r\n\r\ngqlResponse = GQLResponse(response)\r\n\r\ngqlResponse.map_gqldata_to_obj(myCurrenciesQuery.type)\r\n\r\nprint('Result object: ' + str(gqlResponse.result_obj))\r\n```\r\n\r\nThe mapped response from the GraphQL server will be available within _gqlResponse_ object: _gqlResponse.result_obj_\r\n\r\nMore details [here](https://github.com/dapalex/py-graphql-mapper/blob/main/pygqlmap/README.MD#parsing-of-a-response)\r\n\r\n\r\n\r\nA suite of use cases [here](https://github.com/dapalex/py-graphql-mapper/blob/main/tests/README.MD)\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dapalex/py-graphql-mapper/",
    "keywords": "graphql,mapper",
    "license": "MIT License  Copyright (c) 2022 dapalex  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-graphql-mapper",
    "package_url": "https://pypi.org/project/py-graphql-mapper/",
    "platform": null,
    "project_url": "https://pypi.org/project/py-graphql-mapper/",
    "project_urls": {
      "Bug Tracker": "https://github.com/dapalex/py-graphql-mapper/issues",
      "Homepage": "https://github.com/dapalex/py-graphql-mapper/",
      "Release Notes": "https://github.com/dapalex/py-graphql-mapper/blob/develop/RELEASE_NOTES.MD",
      "Source Code": "https://github.com/dapalex/py-graphql-mapper/"
    },
    "release_url": "https://pypi.org/project/py-graphql-mapper/1.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.10",
    "summary": "A python library to call GraphQL APIs without using hardcoded strings",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16788705,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6e5116b1aa6c474b0ac27c7cf59a5630f2253b338755d7fa513a68e356f255e",
          "md5": "7eb715b6bea40665da94eeb5f1d20186",
          "sha256": "8a3429ea863724d0c2b749b311a607c9eb592395df2b28d71dfe71569a4bbb9e"
        },
        "downloads": -1,
        "filename": "py_graphql_mapper-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7eb715b6bea40665da94eeb5f1d20186",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 38953,
        "upload_time": "2023-01-08T09:22:04",
        "upload_time_iso_8601": "2023-01-08T09:22:04.233993Z",
        "url": "https://files.pythonhosted.org/packages/a6/e5/116b1aa6c474b0ac27c7cf59a5630f2253b338755d7fa513a68e356f255e/py_graphql_mapper-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5454df792c1ff05bfa4310972e7f9a415a666e0fba19f9013a12b821bd4f5251",
          "md5": "997baac411f9e4738f69b8000c63b177",
          "sha256": "6a458f833bf706034cf9912ca4a34fc114433db7451e0e81ba657ae3a5739d63"
        },
        "downloads": -1,
        "filename": "py-graphql-mapper-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "997baac411f9e4738f69b8000c63b177",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 31431,
        "upload_time": "2023-01-08T09:22:06",
        "upload_time_iso_8601": "2023-01-08T09:22:06.817753Z",
        "url": "https://files.pythonhosted.org/packages/54/54/df792c1ff05bfa4310972e7f9a415a666e0fba19f9013a12b821bd4f5251/py-graphql-mapper-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96b433958eadbc15b7d72f419b85972282ea25ded6a7bdc6ebcf420aa4d0c2cf",
          "md5": "9c46897e10501344b6ad3fdcd939874f",
          "sha256": "b63c9b837470e2c41ac42b9084388e66dccb9865f94a2c21fbfcac7f930df469"
        },
        "downloads": -1,
        "filename": "py_graphql_mapper-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9c46897e10501344b6ad3fdcd939874f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 42459,
        "upload_time": "2023-02-10T12:16:54",
        "upload_time_iso_8601": "2023-02-10T12:16:54.112442Z",
        "url": "https://files.pythonhosted.org/packages/96/b4/33958eadbc15b7d72f419b85972282ea25ded6a7bdc6ebcf420aa4d0c2cf/py_graphql_mapper-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7ea847cd26c0285e604066c616e9f97b78bed38693349756c9fbe640b5c49d8",
          "md5": "d9d95ffd8e096269ac1fc28064c0429d",
          "sha256": "cfdb19615553a598fe7f331dda7419b222bc234a424f867e9cbfc06c9a9ac3f7"
        },
        "downloads": -1,
        "filename": "py-graphql-mapper-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d9d95ffd8e096269ac1fc28064c0429d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 34692,
        "upload_time": "2023-02-10T12:16:56",
        "upload_time_iso_8601": "2023-02-10T12:16:56.147357Z",
        "url": "https://files.pythonhosted.org/packages/c7/ea/847cd26c0285e604066c616e9f97b78bed38693349756c9fbe640b5c49d8/py-graphql-mapper-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "96b433958eadbc15b7d72f419b85972282ea25ded6a7bdc6ebcf420aa4d0c2cf",
        "md5": "9c46897e10501344b6ad3fdcd939874f",
        "sha256": "b63c9b837470e2c41ac42b9084388e66dccb9865f94a2c21fbfcac7f930df469"
      },
      "downloads": -1,
      "filename": "py_graphql_mapper-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9c46897e10501344b6ad3fdcd939874f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 42459,
      "upload_time": "2023-02-10T12:16:54",
      "upload_time_iso_8601": "2023-02-10T12:16:54.112442Z",
      "url": "https://files.pythonhosted.org/packages/96/b4/33958eadbc15b7d72f419b85972282ea25ded6a7bdc6ebcf420aa4d0c2cf/py_graphql_mapper-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c7ea847cd26c0285e604066c616e9f97b78bed38693349756c9fbe640b5c49d8",
        "md5": "d9d95ffd8e096269ac1fc28064c0429d",
        "sha256": "cfdb19615553a598fe7f331dda7419b222bc234a424f867e9cbfc06c9a9ac3f7"
      },
      "downloads": -1,
      "filename": "py-graphql-mapper-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d9d95ffd8e096269ac1fc28064c0429d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 34692,
      "upload_time": "2023-02-10T12:16:56",
      "upload_time_iso_8601": "2023-02-10T12:16:56.147357Z",
      "url": "https://files.pythonhosted.org/packages/c7/ea/847cd26c0285e604066c616e9f97b78bed38693349756c9fbe640b5c49d8/py-graphql-mapper-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}