{
  "info": {
    "author": "Dan Meliza",
    "author_email": "dan@meliza.org",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "Gammatone Filterbank Toolkit\n============================\n\n*Utilities for analysing sound using perceptual models of human hearing.*\n\nThis is a fork of the gammatone package library by Jason Heeris, 2013. All\nmodifications are by Dan Meliza, Jonah Weissmann, and Tyler Robbins.\n\nSummary\n-------\n\nThis is a port of Malcolm Slaney's and Dan Ellis' gammatone filterbank MATLAB\ncode, detailed below, to Python 2 and 3 using Numpy and Scipy. It analyses signals by\nrunning them through banks of gammatone filters, similar to Fourier-based\nspectrogram analysis.\n\n![Gammatone-based spectrogram of Für Elise](doc/FurElise.png)\n\nInstallation\n------------\n\nYou can install directly from this git repository using:\n\n```text\npip install git+https://github.com/melizalab/gammatone.git\n```\n\n...or you can clone the git repository however you prefer, and do:\n\n```text\npip install .\n```\n\n...or:\n\n```\npython setup.py install\n```\n\n...from the cloned tree.\n\n### Dependencies\n\n - numpy\n - scipy\n### for generating plots (optional)\n - matplotlib\n### for running tests (optional)\n - nose\n - mock\n\nUsing the Code\n--------------\n\nIf you want to use the CLI, make sure to enable the `plot` extra\nduring installation (e.g. `pip install .[plot`).\n\nSee the [API documentation](http://detly.github.io/gammatone/). For a\ndemonstration, find a `.wav` file (for example,\n[Für Elise](http://heeris.id.au/samples/FurElise.wav)) and run:\n\n```text\npython -m gammatone FurElise.wav -d 10\n```\n\n...to see a gammatone-gram of the first ten seconds of the track. If you've\ninstalled via `pip` or `setup.py install`, you should also be able to just run:\n\n```text\ngammatone FurElise.wav -d 10\n```\n\nBasis\n-----\n\nThis project is based on research into how humans perceive audio, originally\npublished by Malcolm Slaney:\n\n[Malcolm Slaney (1998) \"Auditory Toolbox Version 2\", Technical Report #1998-010,\nInterval Research Corporation, 1998.](\nhttp://cobweb.ecn.purdue.edu/~malcolm/interval/1998-010/\n)\n\nSlaney's report describes a way of modelling how the human ear perceives,\nemphasises and separates different frequencies of sound. A series of gammatone\nfilters are constructed whose width increases with increasing centre frequency,\nand this bank of filters is applied to a time-domain signal. The result of this\nis a spectrum that should represent the human experience of sound better than,\nsay, a Fourier-domain spectrum would.\n\nA gammatone filter has an impulse response that is a sine wave multiplied by a\ngamma distribution function. It is a common approach to modelling the auditory\nsystem.\n\nThe gammatone filterbank approach can be considered analogous (but not\nequivalent) to a discrete Fourier transform where the frequency axis is\nlogarithmic. For example, a series of notes spaced an octave apart would appear\nto be roughly linearly spaced; or a sound that was distributed across the same\nlinear frequency range would appear to have more spread at lower frequencies.\n\nThe real goal of this toolkit is to allow easy computation of the gammatone\nequivalent of a spectrogram — a time-varying spectrum of energy over audible\nfrequencies based on a gammatone filterbank.\n\nSlaney demonstrated his research with an initial implementation in MATLAB. This\nimplementation was later extended by Dan Ellis, who found a way to approximate a\n\"gammatone-gram\" by using the fast Fourier transform. Ellis' code calculates a\nmatrix of weights that can be applied to the output of a FFT so that a\nFourier-based spectrogram can easily be transformed into such an approximation.\n\nEllis' code and documentation is here: [Gammatone-like spectrograms](\nhttp://labrosa.ee.columbia.edu/matlab/gammatonegram/\n)\n\nInterest\n--------\n\nI became interested in this because of my background in science communication\nand my general interest in the teaching of signal processing. I find that the\nspectrogram approach to visualising signals is adequate for illustrating\nabstract systems or the mathematical properties of transforms, but bears little\ncorrespondence to a person's own experience of sound. If someone wants to see\nwhat their favourite piece of music \"looks like,\" a normal Fourier transform\nbased spectrogram is actually quite a poor way to visualise it. Features of the\naudio seem to be oddly spaced or unnaturally emphasised or de-emphasised\ndepending on where they are in the frequency domain.\n\nThe gammatone filterbank approach seems to be closer to what someone might\nintuitively expect a visualisation of sound to look like, and can help develop\nan intuition about alternative representations of signals.\n\nVerifying the port\n------------------\n\nSince this is a port of existing MATLAB code, I've written tests to verify the\nPython implementation against the original code. These tests aren't unit tests,\nbut they do generally test single functions. Running the tests has the same\nworkflow:\n\n  1. Run the scripts in the `test_generation` directory. This will create a\n     `.mat` file containing test data in `tests/data`.\n\n  2. Run `nosetest3` in the top level directory. This will find and run all the\n     tests in the `tests` directory.\n\nAlthough I'm usually loathe to check in generated files to version control, I'm\nwilling to make an exception for the `.mat` files containing the test data. My\nreasoning is that they represent the decoupling of my code from the MATLAB code,\nand if the two projects were separated, they would be considered a part of the\nPython code, not the original MATLAB code.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/melizalab/melizalab-gammatone",
    "keywords": "one,two",
    "license": "BSD 3-Clause License",
    "maintainer": "Dan Meliza",
    "maintainer_email": "dan@meliza.org",
    "name": "melizalab-gammatone",
    "package_url": "https://pypi.org/project/melizalab-gammatone/",
    "platform": null,
    "project_url": "https://pypi.org/project/melizalab-gammatone/",
    "project_urls": {
      "Homepage": "https://github.com/melizalab/melizalab-gammatone"
    },
    "release_url": "https://pypi.org/project/melizalab-gammatone/0.1.1/",
    "requires_dist": [
      "numpy (>=1.23.1)",
      "scipy (>=1.7.3)"
    ],
    "requires_python": ">=3.7",
    "summary": "Gammatone filterbank",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15854888,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee2a14eb70be69f13adbe1a4593bda6818f39e17a13030c948411aee4362ce04",
          "md5": "8c9659e564d33fd5da2d875df0f2271f",
          "sha256": "c2970bee5c0e94e5f3cfbe93b2356e41f8fa73ba3bb3dcaff7e9eb481cd77d82"
        },
        "downloads": -1,
        "filename": "melizalab_gammatone-0.1.1-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "8c9659e564d33fd5da2d875df0f2271f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 14162,
        "upload_time": "2022-11-22T14:31:58",
        "upload_time_iso_8601": "2022-11-22T14:31:58.724185Z",
        "url": "https://files.pythonhosted.org/packages/ee/2a/14eb70be69f13adbe1a4593bda6818f39e17a13030c948411aee4362ce04/melizalab_gammatone-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04a7ffce5d8984ab2cf88ac1c97171d27e8729db82a2c354e247e3cf2af94d66",
          "md5": "802ccea30a75f6d21f5a2c0ce4eb193a",
          "sha256": "3b1d4c0e7e2329af01834a73088f7079442c228ab24ab99f5c5db6e43c37d3b4"
        },
        "downloads": -1,
        "filename": "melizalab-gammatone-0.1.1.tar.gz",
        "has_sig": true,
        "md5_digest": "802ccea30a75f6d21f5a2c0ce4eb193a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14672,
        "upload_time": "2022-11-22T14:32:01",
        "upload_time_iso_8601": "2022-11-22T14:32:01.190248Z",
        "url": "https://files.pythonhosted.org/packages/04/a7/ffce5d8984ab2cf88ac1c97171d27e8729db82a2c354e247e3cf2af94d66/melizalab-gammatone-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee2a14eb70be69f13adbe1a4593bda6818f39e17a13030c948411aee4362ce04",
        "md5": "8c9659e564d33fd5da2d875df0f2271f",
        "sha256": "c2970bee5c0e94e5f3cfbe93b2356e41f8fa73ba3bb3dcaff7e9eb481cd77d82"
      },
      "downloads": -1,
      "filename": "melizalab_gammatone-0.1.1-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "8c9659e564d33fd5da2d875df0f2271f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 14162,
      "upload_time": "2022-11-22T14:31:58",
      "upload_time_iso_8601": "2022-11-22T14:31:58.724185Z",
      "url": "https://files.pythonhosted.org/packages/ee/2a/14eb70be69f13adbe1a4593bda6818f39e17a13030c948411aee4362ce04/melizalab_gammatone-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "04a7ffce5d8984ab2cf88ac1c97171d27e8729db82a2c354e247e3cf2af94d66",
        "md5": "802ccea30a75f6d21f5a2c0ce4eb193a",
        "sha256": "3b1d4c0e7e2329af01834a73088f7079442c228ab24ab99f5c5db6e43c37d3b4"
      },
      "downloads": -1,
      "filename": "melizalab-gammatone-0.1.1.tar.gz",
      "has_sig": true,
      "md5_digest": "802ccea30a75f6d21f5a2c0ce4eb193a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 14672,
      "upload_time": "2022-11-22T14:32:01",
      "upload_time_iso_8601": "2022-11-22T14:32:01.190248Z",
      "url": "https://files.pythonhosted.org/packages/04/a7/ffce5d8984ab2cf88ac1c97171d27e8729db82a2c354e247e3cf2af94d66/melizalab-gammatone-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}