{
  "info": {
    "author": "Julian Berman",
    "author_email": "Julian@GrayVines.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": ".. image:: https://img.shields.io/pypi/v/jsonschema.svg\n    :target: https://pypi.python.org/pypi/jsonschema\n.. image:: https://travis-ci.org/Julian/jsonschema.svg?branch=master\n    :target: https://travis-ci.org/Julian/jsonschema\n.. image:: https://img.shields.io/pypi/l/jsonschema.svg\n    :target: https://pypi.python.org/pypi/jsonschema\n\n==========\njsonschema\n==========\n\n``jsonschema`` is an implementation of `JSON Schema <http://json-schema.org>`_\nfor Python (supporting 2.7+ including Python 3).\n\n.. code-block:: python\n\n    >>> from jsonschema import validate\n\n    >>> # A sample schema, like what we'd get from json.load()\n    >>> schema = {\n    ...     \"type\" : \"object\",\n    ...     \"properties\" : {\n    ...         \"price\" : {\"type\" : \"number\"},\n    ...         \"name\" : {\"type\" : \"string\"},\n    ...     },\n    ... }\n\n    >>> # If no exception is raised by validate(), the instance is valid.\n    >>> validate({\"name\" : \"Eggs\", \"price\" : 34.99}, schema)\n\n    >>> validate(\n    ...     {\"name\" : \"Eggs\", \"price\" : \"Invalid\"}, schema\n    ... )                                   # doctest: +IGNORE_EXCEPTION_DETAIL\n    Traceback (most recent call last):\n        ...\n    ValidationError: 'Invalid' is not of type 'number'\n\nIt can also be used from console:\n\n.. code-block:: bash\n\n    $ jsonschema -i sample.json sample.schema\n\nFeatures\n--------\n\n* Full support for\n  `Draft 3 <https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.Draft3Validator>`_\n  **and** `Draft 4 <https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.Draft4Validator>`_\n  of the schema.\n\n* `Lazy validation <https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.IValidator.iter_errors>`_\n  that can iteratively report *all* validation errors.\n\n* Small and extensible\n\n* `Programmatic querying <https://python-jsonschema.readthedocs.io/en/latest/errors/#module-jsonschema>`_\n  of which properties or items failed validation.\n\n\nRelease Notes\n-------------\n\nVersion 2.5.0 is mainly a performance release. The interface for `RefResolver`\nwas extended to add methods that improve performance on CPython.\n\nSupport for custom `RefResolver` objects with the legacy interface should *not*\nbe affected. If you notice something amiss please file an issue ticket.\n\n\nRunning the Test Suite\n----------------------\n\nIf you have ``tox`` installed (perhaps via ``pip install tox`` or your\npackage manager), running``tox`` in the directory of your source checkout will\nrun ``jsonschema``'s test suite on all of the versions of Python ``jsonschema``\nsupports. Note that you'll need to have all of those versions installed in\norder to run the tests on each of them, otherwise ``tox`` will skip (and fail)\nthe tests on that version.\n\nOf course you're also free to just run the tests on a single version with your\nfavorite test runner. The tests live in the ``jsonschema.tests`` package.\n\n\nCommunity\n---------\n\nThere's a `mailing list <https://groups.google.com/forum/#!forum/jsonschema>`_\nfor this implementation on Google Groups.\n\nPlease join, and feel free to send questions there.\n\n\nContributing\n------------\n\nI'm Julian Berman.\n\n``jsonschema`` is on `GitHub <http://github.com/Julian/jsonschema>`_.\n\nGet in touch, via GitHub or otherwise, if you've got something to contribute,\nit'd be most welcome!\n\nYou can also generally find me on Freenode (nick: ``tos9``) in various\nchannels, including ``#python``.\n\nIf you feel overwhelmingly grateful, you can woo me with beer money on\n`Gittip <https://www.gittip.com/Julian/>`_ or via Google Wallet with the email\nin my GitHub profile.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/Julian/jsonschema",
    "keywords": "",
    "license": "MIT",
    "maintainer": "Olivia Mackintosh",
    "maintainer_email": "olivia.mackintosh@coopdigital.co.uk",
    "name": "coopdigital-jsonschema",
    "package_url": "https://pypi.org/project/coopdigital-jsonschema/",
    "platform": "",
    "project_url": "https://pypi.org/project/coopdigital-jsonschema/",
    "project_urls": {
      "Homepage": "http://github.com/Julian/jsonschema"
    },
    "release_url": "https://pypi.org/project/coopdigital-jsonschema/2.6.0/",
    "requires_dist": [
      "functools32; python_version=='2.7'",
      "rfc3987; extra == 'format'",
      "strict-rfc3339; extra == 'format'",
      "webcolors; extra == 'format'"
    ],
    "requires_python": "",
    "summary": "An implementation of JSON Schema validation for Python",
    "version": "2.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4304342,
  "releases": {
    "2.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a85eae496f1b83dc5a5236bb074d47962ba0a5021099ba9486c2c4c5094d1ad",
          "md5": "2d2bed5bf4d2fb8006999c0b4daff0bc",
          "sha256": "19c93e04ce5961b2f5664a7e8c978c6cecd0e1f2f8431b1196e0c4ca21209352"
        },
        "downloads": -1,
        "filename": "coopdigital_jsonschema-2.6.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d2bed5bf4d2fb8006999c0b4daff0bc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 43789,
        "upload_time": "2018-09-24T11:16:34",
        "upload_time_iso_8601": "2018-09-24T11:16:34.372586Z",
        "url": "https://files.pythonhosted.org/packages/7a/85/eae496f1b83dc5a5236bb074d47962ba0a5021099ba9486c2c4c5094d1ad/coopdigital_jsonschema-2.6.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7a85eae496f1b83dc5a5236bb074d47962ba0a5021099ba9486c2c4c5094d1ad",
        "md5": "2d2bed5bf4d2fb8006999c0b4daff0bc",
        "sha256": "19c93e04ce5961b2f5664a7e8c978c6cecd0e1f2f8431b1196e0c4ca21209352"
      },
      "downloads": -1,
      "filename": "coopdigital_jsonschema-2.6.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2d2bed5bf4d2fb8006999c0b4daff0bc",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 43789,
      "upload_time": "2018-09-24T11:16:34",
      "upload_time_iso_8601": "2018-09-24T11:16:34.372586Z",
      "url": "https://files.pythonhosted.org/packages/7a/85/eae496f1b83dc5a5236bb074d47962ba0a5021099ba9486c2c4c5094d1ad/coopdigital_jsonschema-2.6.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}