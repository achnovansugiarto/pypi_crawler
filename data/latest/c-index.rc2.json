{
  "info": {
    "author": "John Vorsten",
    "author_email": "vorstenjohn@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## Python native implementation of C Index described by Hubert & Levin\n\n### Description\nCalculates Hubert & Levin C index - internal cluster quality index\n\nThe C Index was described by Hubert & Levin (1976) in “A General Statistical Framework for Assessing Categorical Clustering in Free Recall.” Psychological Bulletin, 83(6), 1072–1080.  Its purpose is to compare the dispersion of clusters of data relative to the total dispersion in a dataset.  Ideally, the value of the number of clusters that minimizes the C Index will also be the optimal number of clusters to partition a dataset.  \n\n### More Description\nThe C Index is calculated as \n`cindex = (Sw - Smin) / (Smax - Smin)`\n\nSw is the sum of within-cluster distance measurements (only point-wise combinations of data are summed within each cluster - not between clusters)\nSmin is the sum of the Nw smallest point-wise distances between points within the entire dataset\nSmax is the sum of the nw largest point-wise distances between points within the entire dataset\nNw is the total number of pairs of observations belonging to the same cluster. It is the same as total combinations of points within clusters taken two at a time\n\nInstallation\n```bash\npip install c_index\n```\n\nExample usage\n```python\nfrom c_index import (calc_c_index, calc_cindex_clusterSim_implementation,\ncalc_cindex_nbclust_implementation,\npdist_array)\n\nxs = np.array([[1,2,1.5,1.75,1.33,0.88],\n                [5,5.5,4.88,6.33,5.01,4.95]]) # Cluster 1, 2 x values\nys = np.array([[8.9,8.5,7.89,8.25,8.85,8.29],\n                [1.25,1.14,1.85,0.85,0.79,0.96]]) # Cluster 1,2 y values\nX = np.stack((xs.ravel(),ys.ravel()), axis=1)\ncluster_labels = np.array([0,0,0,0,0,0,1,1,1,1,1,1])\n\ncindex = calc_c_index(X, cluster_labels)\n\n# nbclust implementation takes an array of pointwise differences\ndistances_array = pdist_array(X) \n\n# NbClust C Index python equivalent\ncindex = calc_cindex_nbclust_implementation(distances_array, cluster_labels)\n\n# clusterSim C Index python equivalent\ncindex = calc_cindex_clusterSim_implementation(distances_array, cluster_labels)\n```\n\nThe C Index is already implemented in a number of R Packages, including [clusterSim](https://cran.r-project.org/web/packages/clusterSim/clusterSim.pdf), [clusterCrit](https://cran.r-project.org/web/packages/clusterCrit/clusterCrit.pdf), and [NbClust](https://www.rdocumentation.org/packages/NbClust/versions/3.0/topics/NbClust)\n\n\nThis packages implementation differs from these packages in a couple ways.\n\n### ClusterSim differences\nNote these two lines (R Code) :\n```r\n\tDmin=sum(sort(ddist)[1:r])\n\tDmax=sum(sort(ddist,decreasing = T)[1:r])\n```\nTHey include the whole distance array, which includes all permutations of distances between points (instead of combinations). This means the high end and low end are double counted. I don't think that is the correct way to\ncalculate C Index, but maybe they have a specific reason for doing so.\n\n## NbClust differences\nNote these lines (R Code) :\n```r\n    Dmin = min(v_min)\n    Dmax = max(v_max)\n    result <- (DU - r * Dmin)/(Dmax * r - Dmin * r)\n```\nInstead of sorting and calculating the Nw minimum and maximum distance measurements between points, they simply multiply 'r' by the minimum and maximum values of distances.  I'm not sure what their motivation was for doing that, but sometimes it does give a better estimate of the number of clusters than the described method above.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/johnvorsten/py_cindex",
    "keywords": "clustering R CIndex",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "c-index",
    "package_url": "https://pypi.org/project/c-index/",
    "platform": "",
    "project_url": "https://pypi.org/project/c-index/",
    "project_urls": {
      "Homepage": "https://github.com/johnvorsten/py_cindex"
    },
    "release_url": "https://pypi.org/project/c-index/0.0.2/",
    "requires_dist": [
      "pandas",
      "numpy",
      "scipy",
      "scikit-learn"
    ],
    "requires_python": ">=3",
    "summary": "Clustering C Index",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7867220,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b294cd5c28f6e7a62fb5445fd7395441f88fadbc097df88239b09a2d338e022c",
          "md5": "5101635214024dda2ec817d0113db0b9",
          "sha256": "a30013be987dfb11ab2f3268532d8583d522dfce3cb6e8ab10c85cd9ffe654bf"
        },
        "downloads": -1,
        "filename": "c_index-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5101635214024dda2ec817d0113db0b9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 11663,
        "upload_time": "2020-08-02T15:32:18",
        "upload_time_iso_8601": "2020-08-02T15:32:18.871071Z",
        "url": "https://files.pythonhosted.org/packages/b2/94/cd5c28f6e7a62fb5445fd7395441f88fadbc097df88239b09a2d338e022c/c_index-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa077de735f0845d019df8aa91d94890fbf631954d7308dd80331f48faa8b18f",
          "md5": "e1c0ca9a28fe5b7b39000e5af87d3da5",
          "sha256": "8141c318531b92aaaf6072105f45891c6a2f12e51c164f9931f86db6500e7ce5"
        },
        "downloads": -1,
        "filename": "c_index-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e1c0ca9a28fe5b7b39000e5af87d3da5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 8461,
        "upload_time": "2020-08-02T15:32:20",
        "upload_time_iso_8601": "2020-08-02T15:32:20.875730Z",
        "url": "https://files.pythonhosted.org/packages/fa/07/7de735f0845d019df8aa91d94890fbf631954d7308dd80331f48faa8b18f/c_index-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "652b8467586075122077570e72c0b843c62e9eda5303aa8c3cd66bc8cb30c0dc",
          "md5": "f64d9e62a0591203b5b713e3a448ab3e",
          "sha256": "760767f98671f77ba5aa44bef5f262d97a5aafcba06aba14bc1def90626b7fc6"
        },
        "downloads": -1,
        "filename": "c_index-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f64d9e62a0591203b5b713e3a448ab3e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 13037,
        "upload_time": "2020-08-02T16:06:44",
        "upload_time_iso_8601": "2020-08-02T16:06:44.749886Z",
        "url": "https://files.pythonhosted.org/packages/65/2b/8467586075122077570e72c0b843c62e9eda5303aa8c3cd66bc8cb30c0dc/c_index-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b482e296e53b8600aea61782ec310860ce122877e1a410efa725513e7c8592a4",
          "md5": "59077296b085237cc5e696e565ae0e4f",
          "sha256": "6190fde5df70b0e803be086c9faed2eb4fc8d5aafaab31e4bf2c389ffc9e08b7"
        },
        "downloads": -1,
        "filename": "c_index-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "59077296b085237cc5e696e565ae0e4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 10516,
        "upload_time": "2020-08-02T16:06:45",
        "upload_time_iso_8601": "2020-08-02T16:06:45.907709Z",
        "url": "https://files.pythonhosted.org/packages/b4/82/e296e53b8600aea61782ec310860ce122877e1a410efa725513e7c8592a4/c_index-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "652b8467586075122077570e72c0b843c62e9eda5303aa8c3cd66bc8cb30c0dc",
        "md5": "f64d9e62a0591203b5b713e3a448ab3e",
        "sha256": "760767f98671f77ba5aa44bef5f262d97a5aafcba06aba14bc1def90626b7fc6"
      },
      "downloads": -1,
      "filename": "c_index-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f64d9e62a0591203b5b713e3a448ab3e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 13037,
      "upload_time": "2020-08-02T16:06:44",
      "upload_time_iso_8601": "2020-08-02T16:06:44.749886Z",
      "url": "https://files.pythonhosted.org/packages/65/2b/8467586075122077570e72c0b843c62e9eda5303aa8c3cd66bc8cb30c0dc/c_index-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b482e296e53b8600aea61782ec310860ce122877e1a410efa725513e7c8592a4",
        "md5": "59077296b085237cc5e696e565ae0e4f",
        "sha256": "6190fde5df70b0e803be086c9faed2eb4fc8d5aafaab31e4bf2c389ffc9e08b7"
      },
      "downloads": -1,
      "filename": "c_index-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "59077296b085237cc5e696e565ae0e4f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 10516,
      "upload_time": "2020-08-02T16:06:45",
      "upload_time_iso_8601": "2020-08-02T16:06:45.907709Z",
      "url": "https://files.pythonhosted.org/packages/b4/82/e296e53b8600aea61782ec310860ce122877e1a410efa725513e7c8592a4/c_index-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}