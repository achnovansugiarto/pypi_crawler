{
  "info": {
    "author": "Matthew Moulton",
    "author_email": "matthew.moulton@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Tag\n\nA command line interface to manage file name tags.\n\n## Usage\n\n### Install from PyPI\n\n```\npip install hew-tag\n```\n\n### Run Locally\n\n```\npython -m tag\n```\n\n### Install Locally\n\nTo install in \"editable\" mode:\n\n```\npip install -e .\ntag\n```\n\n## Description\n\nThere is nothing special about file tags. They are just text inside the\nfilename. You can add or remove them any way you would normally rename a\nfile. This tool just makes it a little easier to do things in bulk.\n\nI have arbitrarily chosen to start tags with an open curly `{` and\nclose tags with a close curly `}`. I thought this was easier to read than some\nother options (including the popular web \"hash tag\" format).\n\nThe main feature of `tag` is to index files by tag. For example, if you keep\nall files for the same year in the same folder, it can be a little challenging\nto find related files (taxes, car maintenance, etc.). `tag index` creates a\ndirectory tree of tags with smylinks to all the tagged documents. This makes it\neasy to find all files tagged with `taxes-2020` when tax time comes around.\n\nFor example:\n\n```\n~/Documents/\n├── 2020/\n│   ├── 2020-09-01 Car Service {toyota-yaris}.pdf\n│   ├── 2020-10-01 Charitable Receipt {taxes-2020}.pdf\n│   └── ...\n└── 2021/\n    ├── 2021-01-15 Work W-2 {taxes-2020}.pdf\n    ├── 2021-03-01 Car Service {toyota-yaris}.pdf\n    └── ...\n```\n\nRunning:\n`tag index ~/Documents ~/Tags`\n\nWill produce symlinks like:\n\n```\n~/Tags/\n├── taxes-2020/\n│   ├── 2020-10-01 Charitable Receipt {taxes-2020}.pdf -> ~/Documents/2020/2020-10-01 Charitable Receipt {taxes-2020}.pdf\n│   └── 2021-01-15 Work W-2 {taxes-2020}.pdf -> ~/Documents/2021/2021-01-15 Work W-2 {taxes-2020}.pdf\n└── toyota-yaris/\n    ├── 2020-09-01 Car Service {toyota-yaris}.pdf -> ~Documents/2020/2020-09-01 Car Service {toyota-yaris}.pdf\n    └── 2021-03-01 Car Service {toyota-yaris}.pdf -> ~Documents/2021/2021-09-01 Car Service {toyota-yaris}.pdf\n```\n\n## Cookbook\n\n### Rename all tags in a directory recursively\n\nSuppose I name my Toyota Yaris \"Harold\" and want to rename all my tags. I can\nuse `tag find` to list all uses of the `toyota-yaris` tag and then use\n`tag rename` with `xargs` to rename the tag to `harold`. Using the `-0` arg for\nboth `tag find` and `xargs` assures any whitespace in file names won't affect the command.\n\n```\ntag find -r0 toyota-yaris ~/Documents | xargs -0 tag rename toyota-yaris harold\n```\n\n## Usage\n\n### Synopsis\n\n```\nUsage: tag [OPTIONS] COMMAND [ARGS]...\n\n  tag - manage file name tags\n\n  File tags:\n    - are in the file name matching: {[a-zA-Z0-9-]+}\n    - start with '{' and end with '}'\n    - consist of letters, numbers and the '-' character\n\n  Examples:\n    - myfile{my-tag-1}{my-tag-2}.txt\n    - My Title Case File {My-Tag-1}{My-Tag-2}.txt\n\nOptions:\n  --version  Show version information.\n  --help     Show this message and exit.\n\nCommands:\n  add      Add tags to files.\n  clear    Clear tags from files.\n  find     Find files by tag.\n  index    Index tagged files.\n  list     List tags on files.\n  remove   Remove tags from files.\n  rename   Rename a tag on files.\n  set      Set tags on files.\n  sort     Sort tags on files.\n  version  Show version information.\n```\n\n### Add\n\n```\nUsage: tag add [OPTIONS] TAGS [FILES]...\n\n  Add tags to files.\n\n  TAGS  comma seperated list of tags\n  FILES list of files\n\n  Examples:\n    - tag add my-tag myfile.txt\n    - tag add my-tag-1,my-tag-2 *.txt\n\nOptions:\n  -v, --verbose  Show additional output.\n  -d, --debug    Make no changes to the file system.\n  --help         Show this message and exit.\n```\n\n### Clear\n\n```\nUsage: tag clear [OPTIONS] [FILES]...\n\n  Clear tags from files.\n\n  FILES list of files\n\n  Examples:\n    - tag clear myfile{my-tag}.txt\n    - tag clear *.txt\n\nOptions:\n  -v, --verbose  Show additional output.\n  -d, --debug    Make no changes to the file system.\n  --help         Show this message and exit.\n```\n\n### Find\n\n```\nUsage: tag find [OPTIONS] TAG [PATH]\n\n  Find files by tag.\n\n  TAG  tag to find\n  PATH path to search (default .)\n\n  Examples:\n    - tag find -r my-tag path/to/files/\n    - tag find my-tag\n\nOptions:\n  -a, --all        Include hidden files.\n  -0, --null       End output lines with NULL (\\0) instead of newline.\n  -r, --recursive  Include subdirectories recursively.\n  -t, --tree       Show output as tree.\n  --help           Show this message and exit.\n```\n\n### Index\n\n```\nUsage: tag index [OPTIONS] PATH OUTPUT\n\n  Index tagged files.\n\n  PATH   path to search\n  OUTPUT path to new index\n\n  Examples:\n    - tag index my-files my-index\n    - tag index -r my-files my-index\n\nOptions:\n  -a, --all        Include hidden files.\n  -d, --debug      Make no changes to the file system.\n  -r, --recursive  Include subdirectories recursively.\n  -t, --tree       Create index with nested tag tree.\n  -v, --verbose    Show additional output.\n  --help           Show this message and exit.\n```\n\n### List\n\n```\nUsage: tag list [OPTIONS] [PATH]\n\n  List tags on files.\n\n  PATH path to search (default .)\n\n  Examples:\n    - tag list -r path/to/files/\n    - tag list\n\nOptions:\n  -a, --all        Include hidden files.\n  -c, --count      Show count of matches.\n  -0, --null       End output lines with NULL (\\0) instead of newline.\n  -r, --recursive  Include subdirectories recursively.\n  --help           Show this message and exit.\n```\n\n### Remove\n\n```\nUsage: tag remove [OPTIONS] TAGS [FILES]...\n\n  Remove tags from files.\n\n  TAGS  comma seperated list of tags\n  FILES list of files\n\n  Examples:\n    - tag remove my-tag myfile{my-tag}.txt\n    - tag remove my-tag-1,my-tag-2 *.txt\n\nOptions:\n  -v, --verbose  Show additional output.\n  -d, --debug    Make no changes to the file system.\n  --help         Show this message and exit.\n```\n\n### Rename\n\n```\nUsage: tag rename [OPTIONS] OLD_TAG NEW_TAG [FILES]...\n\n  Rename a tag on files.\n\n  OLD_TAG current tag name\n  NEW_TAG new tag name\n  FILES list of files\n\n  Examples:\n    - tag rename my-tag my-new-tag myfile{my-tag}.txt\n    - tag rename my-tag my-new-tag *.txt\n\nOptions:\n  -v, --verbose  Show additional output.\n  -d, --debug    Make no changes to the file system.\n  --help         Show this message and exit.\n```\n\n### Set\n\n```\nUsage: tag set [OPTIONS] TAGS [FILES]...\n\n  Set tags on files.\n\n  Add and remove tags to ensure each file has the supplied tags and only the\n  supplied tags.\n\n  TAGS  comma seperated list of tags\n  FILES list of files\n\n  Examples:\n    - tag set my-tag myfile{my-tag}.txt\n    - tag set my-tag-1,my-tag-2 *.txt\n\nOptions:\n  -v, --verbose  Show additional output.\n  -d, --debug    Make no changes to the file system.\n  --help         Show this message and exit.\n```\n\n### Sort\n\n```\nUsage: tag sort [OPTIONS] [FILES]...\n\n  Sort tags on files.\n\n  FILES list of files\n\n  Examples:\n    - tag sort myfile{my-tag-2}{my-tag-1}.txt\n    - tag sort *.txt\n\nOptions:\n  -v, --verbose  Show additional output.\n  -d, --debug    Make no changes to the file system.\n  --help         Show this message and exit.\n```\n\n### Version\n\n```\nUsage: tag version [OPTIONS]\n\n  Show version information.\n\n  Examples:\n    - tag version\n\nOptions:\n  --help  Show this message and exit.\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hewlock/tag",
    "keywords": "",
    "license": "GPL3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hew-tag",
    "package_url": "https://pypi.org/project/hew-tag/",
    "platform": "",
    "project_url": "https://pypi.org/project/hew-tag/",
    "project_urls": {
      "Homepage": "https://github.com/hewlock/tag"
    },
    "release_url": "https://pypi.org/project/hew-tag/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "File name tag tool",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12322274,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb80dccd07c8e0658cdfbc16fa4cf3752487eaaecab9433070c055887c2e1fb1",
          "md5": "d68eabb72a34c1f7532b863c76f354cb",
          "sha256": "27d1857ef6cfb423a9614fc264feee09b2ea6aefed84a6af7740c24701d47831"
        },
        "downloads": -1,
        "filename": "hew-tag-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d68eabb72a34c1f7532b863c76f354cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 12603,
        "upload_time": "2021-12-16T10:19:50",
        "upload_time_iso_8601": "2021-12-16T10:19:50.053566Z",
        "url": "https://files.pythonhosted.org/packages/eb/80/dccd07c8e0658cdfbc16fa4cf3752487eaaecab9433070c055887c2e1fb1/hew-tag-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce093bb8f2040bc9cab0a1eb7555ad65bff9f8f69666595a59386b49f66a8f6b",
          "md5": "793e18dee321720c5ddee4d3662ed1f5",
          "sha256": "a090f913fee1af500251e0ee5a09fe0ebb95f35cffd363edcc9dfd570b95c791"
        },
        "downloads": -1,
        "filename": "hew-tag-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "793e18dee321720c5ddee4d3662ed1f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 12679,
        "upload_time": "2021-12-16T10:33:55",
        "upload_time_iso_8601": "2021-12-16T10:33:55.727185Z",
        "url": "https://files.pythonhosted.org/packages/ce/09/3bb8f2040bc9cab0a1eb7555ad65bff9f8f69666595a59386b49f66a8f6b/hew-tag-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce093bb8f2040bc9cab0a1eb7555ad65bff9f8f69666595a59386b49f66a8f6b",
        "md5": "793e18dee321720c5ddee4d3662ed1f5",
        "sha256": "a090f913fee1af500251e0ee5a09fe0ebb95f35cffd363edcc9dfd570b95c791"
      },
      "downloads": -1,
      "filename": "hew-tag-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "793e18dee321720c5ddee4d3662ed1f5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 12679,
      "upload_time": "2021-12-16T10:33:55",
      "upload_time_iso_8601": "2021-12-16T10:33:55.727185Z",
      "url": "https://files.pythonhosted.org/packages/ce/09/3bb8f2040bc9cab0a1eb7555ad65bff9f8f69666595a59386b49f66a8f6b/hew-tag-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}