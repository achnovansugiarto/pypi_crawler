{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# AT-GSM\nPython lib for AT GSM commands\n\n## Install\n\n```bash\npip install atgsm\n```\n\n## Usage\n\n```python\nfrom atgsm import AT\n\nAT.get_ports_list()\n# Ex result: ['/dev/ttyXX1', '/dev/ttyXX2']\n\n# Create new device instance\ndevice = AT('/dev/ttyACM0', baudrate=115200)\n\n\n############################\n# Device related functions #\n############################\n\ndevice.is_responding()\n# return boolean (ex: True)\n\ndevice.get_imei()\n# return device IMEI (ex: '000000000000001')\n\ndevice.get_imsi()\n# return SIM IMSI (ex: '000000000000001')\n\ndevice.get_iccid()\n# return SIM ICCID (ex: '00000000000000000001')\n\ndevice.get_signal_strength()\n# return signal strength from 0 to 31 (ex: 12')\n\ndevice.is_network_ready()\n# return boolean (ex: True)\n\n\n#########################\n# SIM related functions #\n#########################\n\ndevice.is_sim_locked()\n# return boolean (ex: True)\n\ndevice.unlock_sim(pin)\n# return boolean of success (ex: True)\n\ndevice.change_sim_pin(actual_pin, new_pin)\n# return boolean of success (ex: True)\n\ndevice.disable_sim_pin(pin)\n# return boolean of success (ex: True)\n\ndevice.enable_sim_pin(pin)\n# return boolean of success (ex: True)\n\ndevice.reset_sim_pin(puk, new_pin)\n# return boolean of success (ex: True)\n\n\n#########################\n# SMS related functions #\n#########################\n\ndevice.get_sms_list(include_read, keep_unread)\n# - include_read = boolean (include already read messages only if True)\n# - keep_unread = boolean (keep messages unread only if True)\n# return list of messages dicts, ex :\n# [{'index': '1', 'status': 'REC READ', 'readed': True, 'sender': '+33XXXXXXXXX', 'time': '2023/XX/XX XX:XX:XX+XX', 'content': 'This is text'}]\n\ndevice.get_sms(message_index, keep_unread)\n# - message_index = int (index of specific message to get)\n# - keep_unread = boolean (keep messages unread only if True)\n# return requested message as dict\n# {'index': '1', 'status': 'REC READ', 'readed': True, 'sender': '+33XXXXXXXXX', 'time': '2023/XX/XX XX:XX:XX+XX', 'content': 'This is text'}\n\ndevice.delete_sms(message_index)\n# - message_index = int (index of specific message to delete)\n# return boolean of success (ex: True)\n\ndevice.delete_all_sms(include_unread)\n# - include_read = boolean (delete also unread messages if True)\n# return boolean of success (ex: True)\n\n\n##############################\n# Contacts related functions #\n##############################\n\ndevice.get_contact(contact_id)\n# - contact_id = int (id of specific contact to get)\n# return requested contact as dict\n# {'id': 1, 'name': 'My phone number', 'number': '+33XXXXXXXXX'}\n\ndevice.set_contact(contact_id, contact_name, contact_phone_number)\n# - contact_id = int (id of specific contact to create)\n# - contact_name = string (name of contact to create)\n# - contact_phone_number = string (phone number of contact to create)\n# return boolean of success (ex: True)\n\n\n###########################\n# Calls related functions #\n###########################\n\ndevice.dial(phone_number)\n# - phone_number = string (phone number to dial)\n# return boolean of success (ex: True)\n\ndevice.answer()\n# (answer to incomming call)\n# return boolean of success (ex: True)\n\ndevice.hang_up()\n# (hang up actual call)\n# return boolean of success (ex: True)\n\ndevice.press_key(key)\n# - key = string (key to press on keypad during call)\n# return boolean of success (ex: True)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "atgsm",
    "package_url": "https://pypi.org/project/atgsm/",
    "platform": null,
    "project_url": "https://pypi.org/project/atgsm/",
    "project_urls": {
      "Bug Tracker": "https://github.com/H4ckd4ddy/atgsm/issues",
      "Homepage": "https://github.com/H4ckd4ddy/atgsm"
    },
    "release_url": "https://pypi.org/project/atgsm/0.2/",
    "requires_dist": [
      "pyserial>=3.5",
      "smspdudecoder>=2.0.0"
    ],
    "requires_python": ">=3.7",
    "summary": "Python lib for AT GSM commands",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17277832,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50dfb0c0fc687ba1c1cfa5737e0de0f19debc2afd4abb53b5b9d6e4e0580ba11",
          "md5": "246923fdf64b9b93908f755f7044fb59",
          "sha256": "1714ca6829941a7fa5af9b9e269c191fc913c52c9333d515f00180cd19ef0c9a"
        },
        "downloads": -1,
        "filename": "atgsm-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "246923fdf64b9b93908f755f7044fb59",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4544,
        "upload_time": "2023-03-12T17:38:12",
        "upload_time_iso_8601": "2023-03-12T17:38:12.836939Z",
        "url": "https://files.pythonhosted.org/packages/50/df/b0c0fc687ba1c1cfa5737e0de0f19debc2afd4abb53b5b9d6e4e0580ba11/atgsm-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "196900d1824ccb730f33432580d63607f4ff33970b30c8c25cb22dd887243473",
          "md5": "13606bc0aa67b8fe7083694593f041d7",
          "sha256": "02c3d550ce656cbf03adc7ba775b7cc54734c04676a457f5d4a310f3584c30f2"
        },
        "downloads": -1,
        "filename": "atgsm-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "13606bc0aa67b8fe7083694593f041d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3845,
        "upload_time": "2023-03-12T17:38:15",
        "upload_time_iso_8601": "2023-03-12T17:38:15.362456Z",
        "url": "https://files.pythonhosted.org/packages/19/69/00d1824ccb730f33432580d63607f4ff33970b30c8c25cb22dd887243473/atgsm-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "700f387132359b3f8755007c39fd1df455f106905560f212dc035f04bdf8c1e3",
          "md5": "c35466fff62d38fde1fd7a2434c51ab4",
          "sha256": "237eb5daed767bba54b48c0facc06c22bf3c312b12d1d63145e4bb539353d0cf"
        },
        "downloads": -1,
        "filename": "atgsm-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c35466fff62d38fde1fd7a2434c51ab4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4806,
        "upload_time": "2023-03-13T22:38:51",
        "upload_time_iso_8601": "2023-03-13T22:38:51.590107Z",
        "url": "https://files.pythonhosted.org/packages/70/0f/387132359b3f8755007c39fd1df455f106905560f212dc035f04bdf8c1e3/atgsm-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ceeaf3c3aa253886e7b3059ed72fc05131034df0ec3e4e6cfcc718f02f458d15",
          "md5": "45778106babcdccbd34883127d4dd53d",
          "sha256": "e0bcc02062dd40b1826c3adff5dd311226d19bf49413e957d58b4aef385353a5"
        },
        "downloads": -1,
        "filename": "atgsm-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "45778106babcdccbd34883127d4dd53d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4115,
        "upload_time": "2023-03-13T22:38:54",
        "upload_time_iso_8601": "2023-03-13T22:38:54.217067Z",
        "url": "https://files.pythonhosted.org/packages/ce/ea/f3c3aa253886e7b3059ed72fc05131034df0ec3e4e6cfcc718f02f458d15/atgsm-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "700f387132359b3f8755007c39fd1df455f106905560f212dc035f04bdf8c1e3",
        "md5": "c35466fff62d38fde1fd7a2434c51ab4",
        "sha256": "237eb5daed767bba54b48c0facc06c22bf3c312b12d1d63145e4bb539353d0cf"
      },
      "downloads": -1,
      "filename": "atgsm-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c35466fff62d38fde1fd7a2434c51ab4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 4806,
      "upload_time": "2023-03-13T22:38:51",
      "upload_time_iso_8601": "2023-03-13T22:38:51.590107Z",
      "url": "https://files.pythonhosted.org/packages/70/0f/387132359b3f8755007c39fd1df455f106905560f212dc035f04bdf8c1e3/atgsm-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ceeaf3c3aa253886e7b3059ed72fc05131034df0ec3e4e6cfcc718f02f458d15",
        "md5": "45778106babcdccbd34883127d4dd53d",
        "sha256": "e0bcc02062dd40b1826c3adff5dd311226d19bf49413e957d58b4aef385353a5"
      },
      "downloads": -1,
      "filename": "atgsm-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "45778106babcdccbd34883127d4dd53d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 4115,
      "upload_time": "2023-03-13T22:38:54",
      "upload_time_iso_8601": "2023-03-13T22:38:54.217067Z",
      "url": "https://files.pythonhosted.org/packages/ce/ea/f3c3aa253886e7b3059ed72fc05131034df0ec3e4e6cfcc718f02f458d15/atgsm-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}