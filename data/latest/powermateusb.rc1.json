{
  "info": {
    "author": "Ben Buchwald",
    "author_email": "ben@ngcreative.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: System :: Hardware :: Universal Serial Bus (USB) :: Human Interface Device (HID)"
    ],
    "description": "Description\n-----------\n\nThis is a cross-platform Python library for the USB\n[Griffin PowerMate][powermate] (don't think it will work with the Bluetooth\nversion). It is tested to work on both Windows and Linux. While it is two\ncompletely separate implementations, they have the same interface. Both rely on\n[asyncio][].\n\n[powermate]: https://en.wikipedia.org/wiki/Griffin_PowerMate\n[asyncio]: https://docs.python.org/3/library/asyncio.html\n\nPicking a Device\n----------------\n\nMultiple PowerMates can be used at once. The `PowerMate` class constructor\nrequires a path to the device. On Linux this will be something like\n`/dev/input/event15`. On Windows it will be something horrible like\n`\\\\?\\hid#vid_077d&pid_0410#6&1c38037f&0&0000#{4d1e55b2-f16f-11cf-88cb-001111000030}`.\nRather that type the path directly, you can use `PowerMate.enumerate()` which\nreturns a list of PowerMate device paths.\n\nCallbacks\n---------\n\nThis library works on a callback system. The `PowerMate` constructor takes\ncallback functions for when the knob is turned and when the button is pressed\n(or released). These callback will be called on an asyncio event loop. The\n`turn_callback` should take a single parameter that will be an integer number of\nticks the knob has turned. Postive means clockwise and negative means\ncounter-clockwise. The `button_callback` takes a boolean that is `True` when the\nbutton is pressed and `False` when it is released.\n\nExample\n-------\n\n```\nfrom powermate import PowerMate\n\ndef on_turn(amount):\n  print(f'Turned: {amount}')\n\ndef on_button(pressed):\n  if pressed:\n    print('Button pressed')\n  else:\n    print('Button released')\n\npaths = PowerMate.enumerate()\nif not paths:\n  print('No PowerMates detected')\nelse:\n  powermate = PowerMate(\n      paths[0],\n      turn_callback=on_turn,\n      button_callback=on_button)\n```\n\nLED Control\n-----------\n\nThe PowerMate has a somewhat controllable blue LED in it. It can either be solid\non or pulsing. When it is solid, you can adjust the brightness. When it is\npulsing, you can adjust the speed.\n\nTo turn it solid on, call `powermate.set_led_solid(brightness)` where the\nbrightness is 0-255 (default: 128).\n\nTo cause it to pulse, call\n`powermate.set_led_pulse(speed, table, when_sleeping)`. Speed is from -255 to\n255. 0 is its default speed (also 1 and -1). Positive numbers multiply its\ndefault speed (2 is twice as fast, 3 is three times as fast, etc), and negative\nnumbers divide its default speed (-2 is half as fast, -3 is a third as fast,\netc). The `table` is 0-2, but I haven't noticed any difference. `when_sleeping`\nis a boolean that controls if it should continue to pulse when the device is\nsuppose to be asleep (violating the USB power management standards) or whether\nto go into low-power mode.\n\nasyncio Event Loop\n------------------\n\nThe `PowerMate` class requires an asyncio event loop to function. In the Linux\nversion, the events are polled on this event loop. In Windows the events are\npolled on a thread, however in both versions the callbacks are called on the\nevent loop. By default PowerMate will use the current event loop when its\nconstructor is called. However, if you wish to specify another event loop\n(perhaps one that is created but not started when PowerMate is constructed that\nwill be run on a separate thread), you can pass it to the `loop` parameter to\nthe contructor.\n\nShutting Down\n-------------\n\nCalling `powermate.close()` will disconnect from the device and prevent further\nevent callbacks from being called.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sparkyb/powermate",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "powermateusb",
    "package_url": "https://pypi.org/project/powermateusb/",
    "platform": "",
    "project_url": "https://pypi.org/project/powermateusb/",
    "project_urls": {
      "Homepage": "https://github.com/sparkyb/powermate"
    },
    "release_url": "https://pypi.org/project/powermateusb/0.0.3.post1/",
    "requires_dist": [
      "evdev (~=1.4.0) ; platform_system == \"Linux\"",
      "pywinusb (~=0.4.2) ; platform_system == \"Windows\""
    ],
    "requires_python": ">=3.6",
    "summary": "Cross-platform library for Griffin PowerMate",
    "version": "0.0.3.post1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12095066,
  "releases": {
    "0.0.3.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd169cbefaf4de99313076110818a3f5f1b452225945ed48f0b8283bce180708",
          "md5": "64db31f32a487895242ea1d1acfaaac3",
          "sha256": "51788f2e6efddab559b8996f91eedf87b64adbaef211358ec37cf88fb7986ef3"
        },
        "downloads": -1,
        "filename": "powermateusb-0.0.3.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "64db31f32a487895242ea1d1acfaaac3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7399,
        "upload_time": "2021-11-22T19:42:19",
        "upload_time_iso_8601": "2021-11-22T19:42:19.600969Z",
        "url": "https://files.pythonhosted.org/packages/dd/16/9cbefaf4de99313076110818a3f5f1b452225945ed48f0b8283bce180708/powermateusb-0.0.3.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b76a0864ede29230bda57e09b1dc90e5a446dc7b12c75fdfa2cb594f802c7f4",
          "md5": "6912e431d7de117439f0d05056aa8e31",
          "sha256": "a621b88440c274e74bef598e8f58deeff5e4ff43edcb9538e447152ee91ae08f"
        },
        "downloads": -1,
        "filename": "powermateusb-0.0.3.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "6912e431d7de117439f0d05056aa8e31",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6194,
        "upload_time": "2021-11-22T19:42:21",
        "upload_time_iso_8601": "2021-11-22T19:42:21.341480Z",
        "url": "https://files.pythonhosted.org/packages/9b/76/a0864ede29230bda57e09b1dc90e5a446dc7b12c75fdfa2cb594f802c7f4/powermateusb-0.0.3.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd169cbefaf4de99313076110818a3f5f1b452225945ed48f0b8283bce180708",
        "md5": "64db31f32a487895242ea1d1acfaaac3",
        "sha256": "51788f2e6efddab559b8996f91eedf87b64adbaef211358ec37cf88fb7986ef3"
      },
      "downloads": -1,
      "filename": "powermateusb-0.0.3.post1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "64db31f32a487895242ea1d1acfaaac3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7399,
      "upload_time": "2021-11-22T19:42:19",
      "upload_time_iso_8601": "2021-11-22T19:42:19.600969Z",
      "url": "https://files.pythonhosted.org/packages/dd/16/9cbefaf4de99313076110818a3f5f1b452225945ed48f0b8283bce180708/powermateusb-0.0.3.post1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9b76a0864ede29230bda57e09b1dc90e5a446dc7b12c75fdfa2cb594f802c7f4",
        "md5": "6912e431d7de117439f0d05056aa8e31",
        "sha256": "a621b88440c274e74bef598e8f58deeff5e4ff43edcb9538e447152ee91ae08f"
      },
      "downloads": -1,
      "filename": "powermateusb-0.0.3.post1.tar.gz",
      "has_sig": false,
      "md5_digest": "6912e431d7de117439f0d05056aa8e31",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6194,
      "upload_time": "2021-11-22T19:42:21",
      "upload_time_iso_8601": "2021-11-22T19:42:21.341480Z",
      "url": "https://files.pythonhosted.org/packages/9b/76/a0864ede29230bda57e09b1dc90e5a446dc7b12c75fdfa2cb594f802c7f4/powermateusb-0.0.3.post1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}