{
  "info": {
    "author": "Tomek Czy≈º",
    "author_email": "tomekczyz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Documentation"
    ],
    "description": "Sphinx \"taglist\" extension.\n\nTagList\n=======\n\nTaglist is an extension to Sphinx documentation system.\n\n.. note:: \n\n    The project it is a totally copy of sphinxcontrib-requirements with\n    some modifications\n\nInstallation\n------------\n\nInstalation through pip: ::\n\n    pip install sphinxcontrib-taglist\n\nor through github: ::\n\n    git clone https://github.com/spinus/sphinxcontrib-taglist\n    cd sphinxcontrib-taglist\n    python setup.py install\n\nNext, you have to add extension to 'conf.py' in your sphinx project. ::\n\n    extensions = [\n              ...,\n              'sphinxcontrib.taglist',  \n              ...]\n\n\nConfiguration\n-------------\n\nWhen using `tags` with this extension you may want give each tag other color.\nYou can do that in 'conf.py' by adding: ::\n\n    taglist_tags = {\n        'tag1': {'background-color': 'green'}\n    }\n\n\nDirectives\n----------\n\ntag:\n    tag directive add a 'piece' of information, and you can tag it.\n\n    You can use it like: ::\n\n        .. tag:: Some tagged information\n            :tag: tag1 tag2 tag3 \n\n    or: ::\n\n        .. tag:: [tag1 tag2 tag3] Some tagged information\n\n    .. warning:: \n\n        Second method is used only if first method is not.\n\n    .. warning:: \n\n        I am not sure this syntax, it may change. \n        If you have anny suggestions please let me know.\n\ntaglist:\n    taglist is a directive which `catch` tags and do a list.\n\n    Firstly it prints 'Tags: ...' with information which tags it displays, and \n    than it shows the list.\n\n    You can use it like: ::\n        \n        .. taglist::\n            :tags: tag1 tag3\n\nHow it works?\n-------------\n\nThe codebase is derived from `sphinxcontrib-requirements` so it works in similar\nway.\n\nDuring document reading `tag` directives create `tag_node`s.\n`taglist` create `taglist` nodes.\n\nDuring resolving `taglist` nodes are changed to a piece of text `Tags:` with\ntags items which will be displayed on that list.\nNext it prints all tagged items.\n\n\nCSS\n~~~\n\ntaglist.css:\n    It contains base class for tag - taglist_tag\n\n    .. warning:: \n\n        It probably will be changed and put in `taglist_tags.css`.\n        (And it will be configurable from `conf.py`)\n\nAdditionally, it creates the file `taglist_tags.css` during processing (with\ncss for each tag you defined in `conf.py`; `taglist_tags` maps all tag keys to\ncss keys) and write it to build directory to static files.\n\n\nQuestions and suggestions\n-------------------------\n\nIf you have some suggstions, patches, problems - please write an email.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "http://pypi.python.org/pypi/sphinxcontrib-taglist",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/spinus/sphinxcontrib-taglist",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "sphinxcontrib-taglist",
    "package_url": "https://pypi.org/project/sphinxcontrib-taglist/",
    "platform": "any",
    "project_url": "https://pypi.org/project/sphinxcontrib-taglist/",
    "project_urls": {
      "Download": "http://pypi.python.org/pypi/sphinxcontrib-taglist",
      "Homepage": "http://github.com/spinus/sphinxcontrib-taglist"
    },
    "release_url": "https://pypi.org/project/sphinxcontrib-taglist/0.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Sphinx \"taglist\" extension",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 799927,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8f0231939b8261ce4fa065962edd1535773a3ca4355ef0e60dd9b886f635ac9",
          "md5": "6c68a5976ae60ee9749f1d9596879354",
          "sha256": "fbc8860e9e25855a4d963523cb9d998830526827aee28ba51fdae9618a41ecf2"
        },
        "downloads": -1,
        "filename": "sphinxcontrib-taglist-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6c68a5976ae60ee9749f1d9596879354",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5359,
        "upload_time": "2012-03-18T21:15:09",
        "upload_time_iso_8601": "2012-03-18T21:15:09.180387Z",
        "url": "https://files.pythonhosted.org/packages/c8/f0/231939b8261ce4fa065962edd1535773a3ca4355ef0e60dd9b886f635ac9/sphinxcontrib-taglist-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c8f0231939b8261ce4fa065962edd1535773a3ca4355ef0e60dd9b886f635ac9",
        "md5": "6c68a5976ae60ee9749f1d9596879354",
        "sha256": "fbc8860e9e25855a4d963523cb9d998830526827aee28ba51fdae9618a41ecf2"
      },
      "downloads": -1,
      "filename": "sphinxcontrib-taglist-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6c68a5976ae60ee9749f1d9596879354",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5359,
      "upload_time": "2012-03-18T21:15:09",
      "upload_time_iso_8601": "2012-03-18T21:15:09.180387Z",
      "url": "https://files.pythonhosted.org/packages/c8/f0/231939b8261ce4fa065962edd1535773a3ca4355ef0e60dd9b886f635ac9/sphinxcontrib-taglist-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}