{
  "info": {
    "author": "Stef van den Elzen",
    "author_email": "stefvandenelzen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pybaobabdt Package\n\nThe pybaobabdt package provides a python implementation for the visualization of decision trees. \nThe technique is based on the scientific paper <a href=\"https://ieeexplore.ieee.org/document/6102453\" target=\"_blank\">BaobabView: Interactive construction and analysis of decision trees</a> developed by the TU/e.\nA typical decision tree is visualized using a standard node link diagram:\n\n<img src=\"https://gitlab.tue.nl/20040367/pybaobab/-/raw/main/images/vehicle_dt.png\" width=\"100%\" align=\"center\">\n\nThe problem, however, is that information is not easily extracted from this. Which classes are \neasy to separate for example, which classes are similar, where does the main flow of items go etc.\nTherefore, we developed techniques to answer these questions with a scalable visualization:\n\n<img src=\"https://gitlab.tue.nl/20040367/pybaobab/-/raw/main/images/tree.png\" width=\"100%\" align=\"center\"/>\n\nNote, this is the same decision tree as the standard node-link diagram above. Each class is represented by a\ncolor, the width of the link represents the number of items flowing from one node to the other.\n\n## Installation\n\nCurrently it is supported on Python3.6 onwards. The package can be installed through pip:\n\n```py\n$ pip install pybaobabdt\n```\n\n### Requirements\n\nThis implementation requires <a href=\"https://graphviz.org/\" target=\"_blank\">Graphviz</a>. Graphviz can be installed using:\n\n```py\n$ sudo apt-get install graphviz graphviz-dev\n\n``` \n\nFurthermore it depends on the following python packages (sklearn, numpy, pygraphviz, matplotlib, scipy, pandas), which can be installed through pip:\n\n```py\n$ python3 -m pip install -r requirements.txt\n```\n\n## Usage\nThe following example illustrates the ease of use of this package. First build (or load) a decision tree classifier\nwith sklearn: \n\n```py\nimport pybaobabdt\nimport pandas as pd\nfrom scipy.io import arff\nfrom sklearn.tree import DecisionTreeClassifier\n\ndata = arff.loadarff('winequality-red.arff')\ndf   = pd.DataFrame(data[0])\n\ny = list(df['class'])\nfeatures = list(df.columns)\nfeatures.remove('class')\nX = df.loc[:, features]\n\nclf = DecisionTreeClassifier().fit(X,y)\n```\nNext, use pybaobab to visualize it:\n```py\nax = pybaobabdt.drawTree(clf, size=10, dpi=72, features=features)\n```\n\n<img src=\"https://gitlab.tue.nl/20040367/pybaobab/-/raw/main/images/tree_example.png\" width=\"100%\" align=\"center\"/>\n\nYou can then save it to a file with for example:\n```py\nax.get_figure().savefig('tree.png', format='png', dpi=300, transparent=True)\n```\n\nAlso, trees from a RandomForest classifier can be visualized and saved to a high-resolution image for inspection:\n\n```py\nimport pybaobabdt\nimport pandas as pd\nfrom scipy.io import arff\nimport matplotlib.pyplot as plt\nfrom sklearn.ensemble import RandomForestClassifier\n\ndata = arff.loadarff('vehicle.arff')\n\ndf = pd.DataFrame(data[0])\ny = list(df['class'])\nfeatures = list(df.columns)\nfeatures.remove('class')\nX = df.loc[:, features]\n\nclf = RandomForestClassifier(n_estimators=20, n_jobs=-1, random_state=0)\nclf.fit(X, y)\n```\n\nSave to image:\n\n```py\nsize = (15,15)\nplt.rcParams['figure.figsize'] = size\nfig = plt.figure(figsize=size, dpi=300)\n\nfor idx, tree in enumerate(clf.estimators_):\n    ax1 = fig.add_subplot(5, 4, idx+1)\n    pybaobabdt.drawTree(tree, model=clf, size=15, dpi=300, features=features, ax=ax1)\n    \nfig.savefig('random-forest.png', format='png', dpi=1200, transparent=True)\n```\n<img src=\"https://gitlab.tue.nl/20040367/pybaobab/-/raw/main/images/random-forest.png\" width=\"100%\" align=\"center\"/>\n\n### Options\n\nThere are several different options that can be used in the drawTree function.\n\n* colormap='plasma' (all matplotlib <a href=\"https://matplotlib.org/stable/tutorials/colors/colormaps.html\" target=\"_blank\">colormaps</a> are supported)\n  \nYou can also define your own colormap, which could be useful to highlight a specific class for example:\n```py\n#colors = [[1,0,0], [0,1,0], [0,0,1], [1,1,0]]\ncolors = [\"gray\", \"gray\", \"purple\", \"gray\"]\ncolorMap = ListedColormap(colors)\n\nax = pybaobabdt.drawTree(clf, size=10, dpi=72, features=features, colormap=colorMap)\n```\n\n<img src=\"https://gitlab.tue.nl/20040367/pybaobab/-/raw/main/images/tree_oneclass.png\" width=\"100%\" align=\"center\"/>\n\n* maxdepth=3 (set the maximum depth of the tree to render, this can be useful for large trees, to inspect only the top splits.)\n\n\n<img src=\"https://gitlab.tue.nl/20040367/pybaobab/-/raw/main/images/tree_maxdepth.png\" width=\"100%\" align=\"center\"/>\n\n* ratio=0.5 (sets the aspect ratio of the tree, default = 1)\n\n<img src=\"https://gitlab.tue.nl/20040367/pybaobab/-/raw/main/images/tree_ratio.png\" width=\"100%\" align=\"center\"/>\n\nNote that examples can be found in the 'notebooks' folder containing jupyter notebook examples.\n\n## License\n<a href=\"https://choosealicense.com/licenses/gpl-3.0/#\" target=\"_blank\">GNU General Public License v3.0</a>\n\n## Reference\n\nIf you need to reference this work please use the following bibtex entry:\n\n```bibtex\n@INPROCEEDINGS{Elzen2011,\n  author={van den Elzen, Stef and van Wijk, Jarke J.},\n  booktitle={2011 IEEE Conference on Visual Analytics Science and Technology (VAST)}, \n  title={BaobabView: Interactive construction and analysis of decision trees}, \n  year={2011},\n  pages={151-160},\n  doi={10.1109/VAST.2011.6102453}}\n```\n\nS. van den Elzen and J. J. van Wijk, \"BaobabView: Interactive construction and analysis of decision trees,\" 2011 IEEE Conference on Visual Analytics Science and Technology (VAST), 2011, pp. 151-160, doi: 10.1109/VAST.2011.6102453.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.tue.nl/20040367/pybaobab",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pybaobabdt",
    "package_url": "https://pypi.org/project/pybaobabdt/",
    "platform": "",
    "project_url": "https://pypi.org/project/pybaobabdt/",
    "project_urls": {
      "Bug Tracker": "https://gitlab.tue.nl/20040367/pybaobab/issues",
      "Homepage": "https://gitlab.tue.nl/20040367/pybaobab"
    },
    "release_url": "https://pypi.org/project/pybaobabdt/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Decision tree visualization",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12124768,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a327829808b105e74311c8963419ee0b41856ce7229e1ecfb2cdf01ee6fbbb5b",
          "md5": "b51f61111134f2a95c9b3337a33d64db",
          "sha256": "cde1f30349929fe67f56ea658381c911094c6c812f5eb5ed2ce05151da46325b"
        },
        "downloads": -1,
        "filename": "pybaobabdt-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b51f61111134f2a95c9b3337a33d64db",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20485,
        "upload_time": "2021-11-25T16:44:00",
        "upload_time_iso_8601": "2021-11-25T16:44:00.206086Z",
        "url": "https://files.pythonhosted.org/packages/a3/27/829808b105e74311c8963419ee0b41856ce7229e1ecfb2cdf01ee6fbbb5b/pybaobabdt-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd7684690c00b68b92c13895bee09fc96407db1919eefa5ac3a11d81f76028d8",
          "md5": "d360fd9f20a1678c4da2fbfebbcda183",
          "sha256": "e09451dd655b7df43cc4b50749338bb1a4f481f15f60550f3b09df86b6dbd65b"
        },
        "downloads": -1,
        "filename": "pybaobabdt-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d360fd9f20a1678c4da2fbfebbcda183",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22495,
        "upload_time": "2021-11-25T16:44:01",
        "upload_time_iso_8601": "2021-11-25T16:44:01.465199Z",
        "url": "https://files.pythonhosted.org/packages/dd/76/84690c00b68b92c13895bee09fc96407db1919eefa5ac3a11d81f76028d8/pybaobabdt-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a327829808b105e74311c8963419ee0b41856ce7229e1ecfb2cdf01ee6fbbb5b",
        "md5": "b51f61111134f2a95c9b3337a33d64db",
        "sha256": "cde1f30349929fe67f56ea658381c911094c6c812f5eb5ed2ce05151da46325b"
      },
      "downloads": -1,
      "filename": "pybaobabdt-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b51f61111134f2a95c9b3337a33d64db",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 20485,
      "upload_time": "2021-11-25T16:44:00",
      "upload_time_iso_8601": "2021-11-25T16:44:00.206086Z",
      "url": "https://files.pythonhosted.org/packages/a3/27/829808b105e74311c8963419ee0b41856ce7229e1ecfb2cdf01ee6fbbb5b/pybaobabdt-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd7684690c00b68b92c13895bee09fc96407db1919eefa5ac3a11d81f76028d8",
        "md5": "d360fd9f20a1678c4da2fbfebbcda183",
        "sha256": "e09451dd655b7df43cc4b50749338bb1a4f481f15f60550f3b09df86b6dbd65b"
      },
      "downloads": -1,
      "filename": "pybaobabdt-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d360fd9f20a1678c4da2fbfebbcda183",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 22495,
      "upload_time": "2021-11-25T16:44:01",
      "upload_time_iso_8601": "2021-11-25T16:44:01.465199Z",
      "url": "https://files.pythonhosted.org/packages/dd/76/84690c00b68b92c13895bee09fc96407db1919eefa5ac3a11d81f76028d8/pybaobabdt-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}