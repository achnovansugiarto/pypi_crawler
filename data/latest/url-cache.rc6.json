{
  "info": {
    "author": "Sean Breckenridge",
    "author_email": "seanbrecke@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![PyPi version](https://img.shields.io/pypi/v/url_cache.svg)](https://pypi.python.org/pypi/url_cache) [![Python3.7|3.8|3.9](https://img.shields.io/pypi/pyversions/url_cache.svg)](https://pypi.python.org/pypi/url_cache) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)\n\nThis is currently very alpha and in development, so expect changes to the API/interface. It aims to walk the line between extracting enough text/data for it to be useful, but no so much that it takes enormous amounts of space.\n\nCurrent TODOs:\n\n- [ ] Add more sites using the [abstract interface](https://github.com/seanbreckenridge/url_cache/blob/master/src/url_cache/sites/abstract.py), to get more info from sites I use commonly. Ideally, should be able to re-use common scraper/parsers/API interface libraries in python, instead of recreating everything from scratch\n- [ ] Create a (separate repo/project) daemon which handles configuring this and slowly requests things in the background as they become available through given sources; allow user to provide generators/inputs define include/exclude lists/regexes. Probably just integrate with [promnesia](https://github.com/karlicoss/promnesia) so avoid duplicating the work of searching for URLs on disk\n\n## Installation\n\nRequires `python3.7+`\n\nTo install with pip, run:\n\n    python3 -m pip install url_cache\n\nAs this is still in development, for the latest changes install from git: `python3 -m pip install git+https://github.com/seanbreckenridge/url_cache`\n\n## Rationale\n\nA file system cache which saves URL metadata and summarizes content\n\nThis is meant to provide more context to any of my tools which use URLs. If I [watched some youtube video](https://github.com/seanbreckenridge/mpv-history-daemon) and I have a URL, I'd like to have the subtitles for it, so I can do a text-search over all the videos I've watched. If I [read an article](https://github.com/seanbreckenridge/browserexport), I want the article text! This requests, parses and abstracts away that data for me locally, so I can do something like:\n\n```python\n>>> from url_cache.core import URLCache\n>>> u = URLCache()\n>>> data = u.get(\"https://sean.fish/\")\n>>> data.metadata[\"images\"][-1]\n{'src': 'https://raw.githubusercontent.com/seanbreckenridge/glue/master/assets/screenshot.png', 'alt': 'screenshot', 'type': 'body_image', 'width': 600}\n>>> data.metadata[\"description\"]\n\"sean.fish; Sean Breckenridge's Home Page\"\n```\n\nIf I ever request that URL again, the information is grabbed from a local cache instead.\n\nGenerally, this uses:\n\n- [`lassie`](https://github.com/michaelhelmick/lassie) to get generic metadata; the title, description, opengraph information, links to images/videos on the page.\n- [`readability`](https://github.com/buriy/python-readability) to convert/compress HTML to a summary of the HTML content.\n\nSite-Specific Extractors:\n\n- [Youtube](./docs/url_cache/sites/youtube/subtitles_downloader.md): to get manual/auto-generated captions (converted to a `.srt` file) from Youtube URLs\n- Stackoverflow (Just a basic URL preprocessor to reduce the possibility of conflicts/duplicate data)\n- MyAnimeList (using [Jikan v4](https://docs.api.jikan.moe/))\n\nThis is meant to be extendible -- so its possible for you to write your own extractors/file loaders/dumpers (for new formats (e.g. `srt`)) for sites you use commonly and pass those to `url_cache.core.URLCache` to extract richer data for those sites. Otherwise, it saves the information from `lassie` and the summarized HTML using `readability` for each URL.\n\nTo avoid scope creep, this probably won't support:\n\n- Converting the HTML summary to text (use something like the `lynx` command below)\n- Minimizing HTML - run something like `find ~/.local/share/url_cache/ -name '*.html' -exec <some tool/script that minimizes in place> \\;` instead -- the data is just stored in individual files in the data directory\n\n### Usage:\n\nIn Python, this can be configured by using the `url_cache.core.URLCache` class: For example:\n\n```python\nimport logging\nfrom url_cache.core import URLCache\n\n# make requests every 2 seconds\n# debug logs\n# save to a folder in my home directory\ncache = URLCache(loglevel=logging.DEBUG, sleep_time=2, cache_dir=\"~/Documents/urldata\")\nc = cache.get(\"https://github.com/seanbreckenridge\")\n# just request information, don't read/save to cache\ndata = cache.request_data(\"https://www.wikipedia.org/\")\n```\n\nFor more information, see [the docs](./docs/url_cache/core.md)\n\nThe CLI interface provides some utility commands to get/list information from the cache.\n\n```\nUsage: url_cache [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --cache-dir PATH                Override default cache directory location\n  --debug / --no-debug            Increase log verbosity\n  --sleep-time INTEGER            How long to sleep between requests\n  --summarize-html / --no-summarize-html\n                                  Use readability to summarize html. Otherwise\n                                  saves the entire HTML document\n\n  --skip-subtitles / --no-skip-subtitles\n                                  Skip downloading Youtube Subtitles\n  --subtitle-language TEXT        Subtitle language for Youtube Subtitles\n  --help                          Show this message and exit.\n\nCommands:\n  cachedir  Prints the location of the local cache directory\n  export    Print all cached information as JSON\n  get       Get information for one or more URLs Prints results as JSON\n  in-cache  Prints if a URL is already cached\n  list      List all cached URLs\n```\n\nAn environment variable `URL_CACHE_DIR` can be set, which changes the default cache directory.\n\nI've also successfully used this to cache responses from API results in some of my projects, by subclassing and overriding the `request_data` function. I just make a request and return a summary, and it transparently caches the rest. See:\n\n- [`albums/discogs_cache`](https://github.com/seanbreckenridge/albums/blob/9d296c4abb8e9e16c8dd410aeae8e5bb760008de/nextalbums/discogs_cache.py)\n- [`my_feed/tmdb`](https://github.com/seanbreckenridge/my_feed/blob/master/src/my_feed/sources/trakt/tmdb.py)\n\n### CLI Examples\n\nThe `get` command emits `JSON`, so it could with other tools (e.g. [`jq`](https://stedolan.github.io/jq/)) used like:\n\n```shell\n$ url_cache get \"https://click.palletsprojects.com/en/7.x/arguments/\" | \\\n  jq -r '.[] | .html_summary' | lynx -stdin -dump | head -n 5\nArguments\n\n   Arguments work similarly to [1]options but are positional. They also\n   only support a subset of the features of options due to their\n   syntactical nature. Click will also not attempt to document arguments\n```\n\n```shell\n$ url_cache export | jq -r '.[] | .metadata | .title'\nseanbreckenridge - Overview\nArguments — Click Documentation (7.x)\n```\n\n```shell\nurl_cache list --location\n/home/sean/.local/share/url_cache/data/2/c/7/6284b2f664f381372fab3276449b2/000\n/home/sean/.local/share/url_cache/data/7/5/1/70fc230cd88f32e475ff4087f81d9/000\n```\n\n```shell\n# to make a backup of the cache directory\n$ tar -cvzf url_cache.tar.gz \"$(url_cache cachedir)\"\n```\n\nAccessible through the `url_cache` script and `python3 -m url_cache`\n\n### Implementation Notes\n\nThis stores all of this information as individual files in a cache directory. In particular, it `MD5` hashes the URL and stores information like:\n\n```\n.\n└── a\n    └── a\n        └── e\n            └── cf0118bb22340e18fff20f2db8abd\n                └── 000\n                    ├── data\n                    │   └── subtitles.srt\n                    ├── key\n                    ├── metadata.json\n                    └── timestamp.datetime.txt\n```\n\nIn other words, this is a file system hash table which implements separate chaining.\n\nYou're free to delete any of the directories in the cache if you want, this doesn't maintain a strict index, it uses a hash of the URL and then searches for a matching `key` file.\n\nBy default this waits 5 seconds between requests. Since all the info is cached, I use this by requesting all the info from one data source (e.g. my bookmarks, or videos I've watched recently) in a loop in the background, which saves all the information to my computer. The next time I do that same loop, it doesn't have to make any requests and it just grabs all the info from local cache.\n\nOriginally created for [`HPI`](https://github.com/seanbreckenridge/HPI).\n\n---\n\n### Testing\n\n```\ngit clone 'https://github.com/seanbreckenridge/url_cache'\ncd ./url_cache\npip install '.[testing]'\nmypy ./src/url_cache\nflake8 ./src/url_cache\npytest\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/seanbreckenridge/url_cache",
    "keywords": "url cache metadata youtube subtitles",
    "license": "http://www.apache.org/licenses/LICENSE-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "url-cache",
    "package_url": "https://pypi.org/project/url-cache/",
    "platform": null,
    "project_url": "https://pypi.org/project/url-cache/",
    "project_urls": {
      "Homepage": "https://github.com/seanbreckenridge/url_cache"
    },
    "release_url": "https://pypi.org/project/url-cache/0.0.6/",
    "requires_dist": [
      "appdirs (>=1.4.4)",
      "lassie (>=0.11.9)",
      "readability-lxml (>=0.8.1)",
      "backoff (>=1.10.0)",
      "click (>=7.1.2)",
      "requests",
      "logzero",
      "simplejson",
      "pytube (>=11.0.2)",
      "lxml (>=4.0.0)",
      "pytest ; extra == 'testing'",
      "mypy ; extra == 'testing'",
      "flake8 ; extra == 'testing'",
      "vcrpy ; extra == 'testing'"
    ],
    "requires_python": "",
    "summary": "A file system cache which saves URL metadata and summarizes content",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16544627,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "037df1ba8669a4970be7dd5939182e059bae09c89ad3d4daa70fbd0bc4d06dc2",
          "md5": "1508fa746651e623f1b011624e94f2b1",
          "sha256": "e0068ffbfabc08ceda6e83b23ac098d4df319c04b21b32725b9357b1598bd48a"
        },
        "downloads": -1,
        "filename": "url_cache-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1508fa746651e623f1b011624e94f2b1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26023,
        "upload_time": "2021-05-12T01:48:12",
        "upload_time_iso_8601": "2021-05-12T01:48:12.092949Z",
        "url": "https://files.pythonhosted.org/packages/03/7d/f1ba8669a4970be7dd5939182e059bae09c89ad3d4daa70fbd0bc4d06dc2/url_cache-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2803056d22c30815d9f6ff958fcf4a18ca48078933baaa4f9a73883113365e8",
          "md5": "95e62ed59aae50579818e9dff8efd3a1",
          "sha256": "8835fdfedb08539e98d5b1ad78e8f8bb24936d1795060c4979ce7474ffb6e6cb"
        },
        "downloads": -1,
        "filename": "url_cache-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "95e62ed59aae50579818e9dff8efd3a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25479,
        "upload_time": "2021-05-12T01:48:13",
        "upload_time_iso_8601": "2021-05-12T01:48:13.985214Z",
        "url": "https://files.pythonhosted.org/packages/d2/80/3056d22c30815d9f6ff958fcf4a18ca48078933baaa4f9a73883113365e8/url_cache-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a3d3976ea696b23da0a61d18ea7de870d61349abc9890415541e60299a8d3d9",
          "md5": "404ae137e65e2656e179f8aef685c20c",
          "sha256": "c411964fccabc18e88261eed4f90d3b6141f29e6321741170cb3b224da84b67f"
        },
        "downloads": -1,
        "filename": "url_cache-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "404ae137e65e2656e179f8aef685c20c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26976,
        "upload_time": "2021-05-12T05:18:36",
        "upload_time_iso_8601": "2021-05-12T05:18:36.019106Z",
        "url": "https://files.pythonhosted.org/packages/6a/3d/3976ea696b23da0a61d18ea7de870d61349abc9890415541e60299a8d3d9/url_cache-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47bdb3bcfa04b5a476f6fd717c61430593c4667f69e6d05042935132ea7f8fe4",
          "md5": "b1e89387be472ccaf5185a0b00297693",
          "sha256": "89fc645648ba6bae799be692626ce669bd3b13893cb6437f961305733679bcb1"
        },
        "downloads": -1,
        "filename": "url_cache-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b1e89387be472ccaf5185a0b00297693",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26075,
        "upload_time": "2021-05-12T05:18:37",
        "upload_time_iso_8601": "2021-05-12T05:18:37.569949Z",
        "url": "https://files.pythonhosted.org/packages/47/bd/b3bcfa04b5a476f6fd717c61430593c4667f69e6d05042935132ea7f8fe4/url_cache-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c32aebef2713bd3dd67bb729931234bb2c723a85b5e67cae3e556cefd842394",
          "md5": "a71a4665e6f508b64d5551c65770e99c",
          "sha256": "823e98fc437705bb458fc73f208f0dc0fbb0e39dcd8261211b87d6fd3bbb8717"
        },
        "downloads": -1,
        "filename": "url_cache-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a71a4665e6f508b64d5551c65770e99c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 31368,
        "upload_time": "2022-02-11T01:09:38",
        "upload_time_iso_8601": "2022-02-11T01:09:38.544004Z",
        "url": "https://files.pythonhosted.org/packages/8c/32/aebef2713bd3dd67bb729931234bb2c723a85b5e67cae3e556cefd842394/url_cache-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ed0d6e1fba67cfdc90f2d388e64dbaec0d1b2408078d15c7ec766ed1eba4fc2",
          "md5": "cbd16eefaa20b3eb6e4d463b6d1f82ac",
          "sha256": "8d26b0b7a88c55f2bcf72623c2a2a1cf30d49248d5771864efc26b0063ea428e"
        },
        "downloads": -1,
        "filename": "url_cache-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cbd16eefaa20b3eb6e4d463b6d1f82ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28917,
        "upload_time": "2022-02-11T01:09:39",
        "upload_time_iso_8601": "2022-02-11T01:09:39.876339Z",
        "url": "https://files.pythonhosted.org/packages/8e/d0/d6e1fba67cfdc90f2d388e64dbaec0d1b2408078d15c7ec766ed1eba4fc2/url_cache-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d96b49b0be928fc81975b3dd967b6b89bd2cc5f9dc0d931cbb000937c48fbc9",
          "md5": "a8905657e0882f6bd47b40b055ac9588",
          "sha256": "3710b53b8dd3ff35f38fe072e8fa5969d105b46344186478c99a0437cf68d4e5"
        },
        "downloads": -1,
        "filename": "url_cache-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a8905657e0882f6bd47b40b055ac9588",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 31471,
        "upload_time": "2022-02-11T01:15:49",
        "upload_time_iso_8601": "2022-02-11T01:15:49.360141Z",
        "url": "https://files.pythonhosted.org/packages/6d/96/b49b0be928fc81975b3dd967b6b89bd2cc5f9dc0d931cbb000937c48fbc9/url_cache-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "583270375cf3ee4195f2b632408d2c5a8fa7851f90ee4c02c42e36fd928c7ce6",
          "md5": "e6fae79aeebe4daec5d69d1103f12760",
          "sha256": "2d9b46a28d6fcd0b7c5acc331eeb4dff8fbb8bc685cd9991bf333e3042a5d4cf"
        },
        "downloads": -1,
        "filename": "url_cache-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e6fae79aeebe4daec5d69d1103f12760",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29001,
        "upload_time": "2022-02-11T01:15:50",
        "upload_time_iso_8601": "2022-02-11T01:15:50.748611Z",
        "url": "https://files.pythonhosted.org/packages/58/32/70375cf3ee4195f2b632408d2c5a8fa7851f90ee4c02c42e36fd928c7ce6/url_cache-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a16648b690b0d9d1a1fcefee80f7dcb49c26e0e917b159ff11044868978292b0",
          "md5": "c68d3aace809b2e9b5c25c88cfb4dddf",
          "sha256": "b8e9670050e349dee3faa4b721269540f2ccaeeec37a82e14500c5faf991c5d5"
        },
        "downloads": -1,
        "filename": "url_cache-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c68d3aace809b2e9b5c25c88cfb4dddf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 32310,
        "upload_time": "2022-03-19T00:25:15",
        "upload_time_iso_8601": "2022-03-19T00:25:15.094267Z",
        "url": "https://files.pythonhosted.org/packages/a1/66/48b690b0d9d1a1fcefee80f7dcb49c26e0e917b159ff11044868978292b0/url_cache-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa22fce29d36555134ca16ed69fe486f841b70d1a43dabc2dd89fc23931e5253",
          "md5": "29335d0c3771df2f2ae7f5f522b9ddbc",
          "sha256": "e32b65fcedb63be3513c921b01ed90b9bdd755368d3bc71635a3ce5371c4faa2"
        },
        "downloads": -1,
        "filename": "url_cache-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "29335d0c3771df2f2ae7f5f522b9ddbc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30248,
        "upload_time": "2022-03-19T00:25:17",
        "upload_time_iso_8601": "2022-03-19T00:25:17.142399Z",
        "url": "https://files.pythonhosted.org/packages/aa/22/fce29d36555134ca16ed69fe486f841b70d1a43dabc2dd89fc23931e5253/url_cache-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87b64d3daed088d95a52972bea01b43879742a1e0b0b2f95b38c12564cc666e4",
          "md5": "edde9eaf55db0ad0103cec331da37639",
          "sha256": "00e6e333d9effccbd42927801c3adfee08f4916c3bed73886d4ee7983edb329e"
        },
        "downloads": -1,
        "filename": "url_cache-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "edde9eaf55db0ad0103cec331da37639",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 32302,
        "upload_time": "2023-01-24T10:37:15",
        "upload_time_iso_8601": "2023-01-24T10:37:15.686951Z",
        "url": "https://files.pythonhosted.org/packages/87/b6/4d3daed088d95a52972bea01b43879742a1e0b0b2f95b38c12564cc666e4/url_cache-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6aa72c259f34c187dff20b8c049a141c4ff55c7a466307afccbf291f229da83e",
          "md5": "cedda39e932196b313bda82f9cea17fa",
          "sha256": "48850d94c64a3deda57416a00eb1644ebad2d69e1b42a992a4cc5061f4861d48"
        },
        "downloads": -1,
        "filename": "url_cache-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "cedda39e932196b313bda82f9cea17fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30394,
        "upload_time": "2023-01-24T10:37:17",
        "upload_time_iso_8601": "2023-01-24T10:37:17.431587Z",
        "url": "https://files.pythonhosted.org/packages/6a/a7/2c259f34c187dff20b8c049a141c4ff55c7a466307afccbf291f229da83e/url_cache-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "87b64d3daed088d95a52972bea01b43879742a1e0b0b2f95b38c12564cc666e4",
        "md5": "edde9eaf55db0ad0103cec331da37639",
        "sha256": "00e6e333d9effccbd42927801c3adfee08f4916c3bed73886d4ee7983edb329e"
      },
      "downloads": -1,
      "filename": "url_cache-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "edde9eaf55db0ad0103cec331da37639",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 32302,
      "upload_time": "2023-01-24T10:37:15",
      "upload_time_iso_8601": "2023-01-24T10:37:15.686951Z",
      "url": "https://files.pythonhosted.org/packages/87/b6/4d3daed088d95a52972bea01b43879742a1e0b0b2f95b38c12564cc666e4/url_cache-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6aa72c259f34c187dff20b8c049a141c4ff55c7a466307afccbf291f229da83e",
        "md5": "cedda39e932196b313bda82f9cea17fa",
        "sha256": "48850d94c64a3deda57416a00eb1644ebad2d69e1b42a992a4cc5061f4861d48"
      },
      "downloads": -1,
      "filename": "url_cache-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "cedda39e932196b313bda82f9cea17fa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 30394,
      "upload_time": "2023-01-24T10:37:17",
      "upload_time_iso_8601": "2023-01-24T10:37:17.431587Z",
      "url": "https://files.pythonhosted.org/packages/6a/a7/2c259f34c187dff20b8c049a141c4ff55c7a466307afccbf291f229da83e/url_cache-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}