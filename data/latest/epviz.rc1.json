{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# EPViz (EEG Prediction Visualizer)\n\nEPViz is a tool to aid researchers in developing, validating, and reporting their predictive modeling outputs. A lightweight and standalone software package developed in Python, EPViz allows researchers to load a PyTorch deep learning model, apply it to the EEG, and overlay the output channel-wise or subject-level temporal predictions on top of the original time series. \n\nTo install from source:\n-----\nClone the repository ```git clone https://github.com/jcraley/epviz.git```  \n\nPython >= 3.7 is required. Other packages can be installed by creating a virtual environment and using the provided requirements.txt file.\n\nTo create the virtual environment:  \n```\npython3 -m venv eeg-gui-venv\n``` \n\nActivate the environment (MacOS and Linux):\n```\nsource eeg-gui-venv/bin/activate\n```  \nActivate the environment (Windows):\n```\n.\\eeg-gui-venv\\Scripts\\activate\n```\n\nInstall required packages:  \n```\npip install numpy==1.21.2\npip install -r requirements.txt\n```\n\nRunning the visualizer:\n-----\nYou can then run the visualizer from the main folder using  \n    ```python visualization/plot.py```\n    \nFor more command line options, see the section below. \n\nFind an issue? [Let us know.](https://github.com/jcraley/epviz/issues).\n\nDocumentation:\n-----\nYou can find documentation [here](https://engineering.jhu.edu/nsa/links/epviz/).\n\nFeatures:\n-----\n***EDF files:***  \nAverage reference and longitudinal bipolar montages with the typical channel naming conventions are supported. Other channels can be plotted but will not be considered part of the montage. \n\n***Loading predictions:***  \nPredictions can be loaded as pytorch (.pt) files or using preprocessed data and a model (also saved as .pt files). In both cases, the output is expected to be of length (number of samples in the edf file / k) = c where k and c are integers. Channel-wise predictions will be plotted starting from the top of the screen. \n\n***Saving to .edf:***  \nThis will save the signals that are currently being plotted. If the signals are filtered and predictions are plotted, filtered signals will be saved and predictions will be saved as well. \n\n***Saving to .png:***  \nThis will save an image of the current graph along with any predictions that are plotted. \n\n\n![](epviz0.png)\n\nCommand line options:\n-----\nWe have added command line options to streamline use: \n```\npython visualization/plot.py --show {0 | 1} --fn [EDF_FILE] --montage-file [TXT_FILE] \n--predictions-file [PT_FILE] --prediction-thresh [THRESH]\n--filter {0 | 1} [LOW_PASS_FS] [HIGH_PASS_FS] [NOTCH_FS] [BAND_PASS_FS_1] [BAND_PASS_FS_2] \n--location [INT] --window-width {5 | 10 | 15 | 20 | 25 | 30} --export-png-file [PNG_FILE]\n--plot-title [TITLE] --print-annotations {0 | 1} --line-thickness [THICKNESS] --font-size [FONT_SIZE]\n--save-edf-fn [EDF_FILE] --anonymize-edf {0 | 1}\n```\nThese options include:\n\n* Whether or not to show the visualizer\n* The .edf file to load\n* What montage to use\n* Predictions to load\n* Threshold to use for the predictions\n* Filter specifications\n* Where in time to load the graph\n* How many seconds to show in the window\n* Name of .png file to save the graph\n    * The title of the saved graph\n    * Whether to show annotations on the saved graph\n    * Line thickness of the saved graph\n    * Font size for the saved graph\n* Name of the .edf file to save\n    * Whether or not to anonymize the file\n\nTests:\n-----\nUnit tests are located in the tests directory. To run the tests:\n```\n./run_tests\n```\nAll tests will be run via a Github Action when pull requests are created.\n\nStyle guide:\n-----\nWe are using Pylint to ensure quality code style in accordance with PEP 8 guidelines.\n\nTo run Pylint on the visualizer code:\n```\n./run_pylint\n```\n\nTest files:\n-----\nTest files come from the CHB-MIT database [1, 2](https://physionet.org/content/chbmit/1.0.0/) and the TUH EEG Corpus [3](https://isip.piconepress.com/projects/tuh_eeg/html/overview.shtml). The license for the CHB-MIT data can be found [here](https://physionet.org/content/chbmit/view-license/1.0.0/).\n\nThe test files used in this repo are chb01_03 (from CHB) and 00013145_s004_t004 (from TUH). They have been renamed for convenience. \n\nCitations for CHB-MIT dataset:\n1. Ali Shoeb. Application of Machine Learning to Epileptic Seizure Onset Detection and Treatment. PhD Thesis, Massachusetts Institute of Technology, September 2009.\n2. Goldberger, A., Amaral, L., Glass, L., Hausdorff, J., Ivanov, P. C., Mark, R., ... & Stanley, H. E. (2000). PhysioBank, PhysioToolkit, and PhysioNet: Components of a new research resource for complex physiologic signals. Circulation [Online]. 101 (23), pp. e215–e220.\n3. I. Obeid and J. Picone, “The Temple University Hospital EEG Data corpus,” Frontiers in Neuroscience, vol. 10, 2016. \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jcraley/epviz",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "EPViz",
    "package_url": "https://pypi.org/project/EPViz/",
    "platform": "",
    "project_url": "https://pypi.org/project/EPViz/",
    "project_urls": {
      "Bug Tracker": "https://github.com/jcraley/epviz/issues",
      "Documentation": "https://engineering.jhu.edu/nsa/links/epviz/",
      "Homepage": "https://github.com/jcraley/epviz"
    },
    "release_url": "https://pypi.org/project/EPViz/0.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "An open source EEG Visualization software",
    "version": "0.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12238853,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa69072094d9b61baa71f48f940d8d20a889bdb3f978f21118522c17b72a4571",
          "md5": "97713d2e9391fd122ed2ffc877691d65",
          "sha256": "794bdb37f13e0cf6428d8c7a705b07e2cb705200c76098ebb2d7c353918eced8"
        },
        "downloads": -1,
        "filename": "EPViz-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "97713d2e9391fd122ed2ffc877691d65",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 86214,
        "upload_time": "2021-12-07T22:37:13",
        "upload_time_iso_8601": "2021-12-07T22:37:13.007359Z",
        "url": "https://files.pythonhosted.org/packages/aa/69/072094d9b61baa71f48f940d8d20a889bdb3f978f21118522c17b72a4571/EPViz-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5c9cbaacb4339d989059f599a501715dd561d3d7e09860ae7f0278586f371ca",
          "md5": "f80ff6487be03975e1ef8272c79d4dc7",
          "sha256": "97963a828d60a1afa0e7beccd560612019d252dd5186c5f15515a0435c422ec9"
        },
        "downloads": -1,
        "filename": "EPViz-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f80ff6487be03975e1ef8272c79d4dc7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 73714,
        "upload_time": "2021-12-07T22:37:14",
        "upload_time_iso_8601": "2021-12-07T22:37:14.403854Z",
        "url": "https://files.pythonhosted.org/packages/a5/c9/cbaacb4339d989059f599a501715dd561d3d7e09860ae7f0278586f371ca/EPViz-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa69072094d9b61baa71f48f940d8d20a889bdb3f978f21118522c17b72a4571",
        "md5": "97713d2e9391fd122ed2ffc877691d65",
        "sha256": "794bdb37f13e0cf6428d8c7a705b07e2cb705200c76098ebb2d7c353918eced8"
      },
      "downloads": -1,
      "filename": "EPViz-0.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "97713d2e9391fd122ed2ffc877691d65",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 86214,
      "upload_time": "2021-12-07T22:37:13",
      "upload_time_iso_8601": "2021-12-07T22:37:13.007359Z",
      "url": "https://files.pythonhosted.org/packages/aa/69/072094d9b61baa71f48f940d8d20a889bdb3f978f21118522c17b72a4571/EPViz-0.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5c9cbaacb4339d989059f599a501715dd561d3d7e09860ae7f0278586f371ca",
        "md5": "f80ff6487be03975e1ef8272c79d4dc7",
        "sha256": "97963a828d60a1afa0e7beccd560612019d252dd5186c5f15515a0435c422ec9"
      },
      "downloads": -1,
      "filename": "EPViz-0.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f80ff6487be03975e1ef8272c79d4dc7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 73714,
      "upload_time": "2021-12-07T22:37:14",
      "upload_time_iso_8601": "2021-12-07T22:37:14.403854Z",
      "url": "https://files.pythonhosted.org/packages/a5/c9/cbaacb4339d989059f599a501715dd561d3d7e09860ae7f0278586f371ca/EPViz-0.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}