{
  "info": {
    "author": "Ethan Quintera",
    "author_email": "ethanmackie1199@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# ecash-python-rpc\neCash JSON-RPC Python module.\n\nServes as a tiny layer between an application and an eCash node daemon, its primary usage\nis querying the current state of the eCash blockchain, network stats, transactions...\n\nCompatible with **Avalanche Post-Consensus** (0.26.x and later).\n\n\n## Installation\n\n#### 1. Install from pip3\n```bash\n$ pip3 install ecashrpc\n```\n\n#### 2. Node configuration\nConfigure your eCash Avalanche Node for remote RPC calls based on your node's security needs. This includes:\n- adding `server=1`, `rpcallowip=`, `rpcbind=` and `rpcauth/rpcuser/rpcpassword=` parameters to your node configuration in bitcoin.conf. (refer to the **Server Configuration section** of [this Blockchain Dev guide](https://www.buildblockchain.tech/blog/btc-node-developers-guide))\n- a reverse proxy server such as [nginx](http://nginx.org/) to serve RPC data to external web apps subject to your eCash node's rpcallowip whitelist\n- install a digital certificate (e.g. [Let's Encrypt](https://letsencrypt.org)) on your node to enable HTTPS if desired\n\n\n## Usage\n\nCreate a sample `ecashrpctest.py` script as follows:\n```\nimport asyncio\nfrom ecashrpc import ECashRPC\n\nasync def main():\n    async with ECashRPC('HOST:PORT','RPCUSER','RPCPASSWORD') as xecNode:\n        print(await xecNode.getavalancheinfo())\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n```\n\nRunning this script (with some additional formatting) yields:\n```\n$ python3 ecashrpctest.py\n\n{\n  \"ready_to_poll\":true,\n  \"local\":{\n     \"verified\":true,\n     \"proofid\":\"...\",\n     \"limited_proofid\":\"...\",\n     \"master\":\"...\",\n     \"payout_address\":\"ecash:qqmd..........\",\n     \"stake_amount\":1560000000\n  },\n  \"network\":{\n     \"proof_count\":18,\n     \"connected_proof_count\":18,\n     \"dangling_proof_count\":0,\n     \"finalized_proof_count\":18,\n     \"conflicting_proof_count\":0,\n     \"immature_proof_count\":4,\n     \"total_stake_amount\":83681202831.85,\n     \"connected_stake_amount\":83681202831.85,\n     \"dangling_stake_amount\":0,\n     \"node_count\":37,\n     \"connected_node_count\":33,\n     \"pending_node_count\":4\n  }\n }\n```\n\n## Supported methods\nHere is a list of supported methods. Please submit a PR if you'd like to have a specific RPC method added.\n\n### Avalanche\n\n|   Method   |   Supported?     |\n|------------|:----------------:|\n| `addavalanchenode` | ✔ |\n| `buildavalancheproof` | ✔ |\n| `decodeavalanchedelegation` | ✔ |\n| `decodeavalancheproof` | ✔ |\n| `delegateavalancheproof` | ✔ |\n| `getavalancheinfo` | ✔ |\n| `getavalanchekey` | ✔ |\n| `getavalanchepeerinfo` | ✔ |\n| `getrawavalancheproof` | ✔ |\n| `isfinalblock` | ✔ |\n| `isfinaltransaction` | ✔ |\n| `sendavalancheproof` | ✔ |\n| `verifyavalanchedelegation` | ✔ |\n| `verifyavalancheproof` | ✔ |\n\n### Blockchain\n\n|   Method   |   Supported?     |\n|------------|:----------------:|\n| `getbestblockhash` | ✔ |\n| `getblock` | ✔ |\n| `getblockchaininfo` | ✔ |\n| `getblockcount` | ✔ |\n| `getblockhash` | ✔ |\n| `getblockheader` | ✔ |\n| `getblockstats` | ✔ |\n| `getchaintips` | ✔ |\n| `getdifficulty` | ✔ |\n| `getmempoolinfo` | ✔ |\n| `getrawmempool` | ✔ |\n| `getnetworkhashps` | ✔ |\n\n### Mining\n\n|   Method   |   Supported?     |\n|------------|:----------------:|\n| `getmininginfo` | ✔ |\n\n### Network\n\n|   Method   |   Supported?     |\n|------------|:----------------:|\n| `getconnectioncount` | ✔ |\n| `getnetworkinfo` | ✔ |\n\n### Raw transactions\n\n|   Method   |   Supported?     |\n|------------|:----------------:|\n| `getrawtransaction` | ✔ |\n\n\n\n## License\nMIT\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ethanmackie/eCash-Python-RPC",
    "keywords": "eCash XEC bitcoin ABC async json-rpc avalanche post-consensus",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ecashrpc",
    "package_url": "https://pypi.org/project/ecashrpc/",
    "platform": null,
    "project_url": "https://pypi.org/project/ecashrpc/",
    "project_urls": {
      "Homepage": "https://github.com/ethanmackie/eCash-Python-RPC"
    },
    "release_url": "https://pypi.org/project/ecashrpc/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "eCash JSON-RPC Python module",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15237347,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44831e2ae35b7769fc57f2846d7c80f760ce88cb4c2b6cb2e4670b7f42228d44",
          "md5": "309d8bd9110115f51bed234cd9e901a8",
          "sha256": "5364bdc6216c6142dbea777b1c9900d7310510cac5ab6766fec07fa05450756e"
        },
        "downloads": -1,
        "filename": "ecashrpc-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "309d8bd9110115f51bed234cd9e901a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8236,
        "upload_time": "2022-09-28T07:14:14",
        "upload_time_iso_8601": "2022-09-28T07:14:14.972577Z",
        "url": "https://files.pythonhosted.org/packages/44/83/1e2ae35b7769fc57f2846d7c80f760ce88cb4c2b6cb2e4670b7f42228d44/ecashrpc-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a382943f7f220d7663364eec26d84532ab54131a748b082d6da19cf25a913e44",
          "md5": "11baefd8849e960f82a5a42f0d7ef555",
          "sha256": "23148010f1de3fe69242f1233a9e156f3bb52185206fd4941987f9f6511f1d86"
        },
        "downloads": -1,
        "filename": "ecashrpc-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "11baefd8849e960f82a5a42f0d7ef555",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9174,
        "upload_time": "2022-09-28T07:14:16",
        "upload_time_iso_8601": "2022-09-28T07:14:16.417147Z",
        "url": "https://files.pythonhosted.org/packages/a3/82/943f7f220d7663364eec26d84532ab54131a748b082d6da19cf25a913e44/ecashrpc-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "44831e2ae35b7769fc57f2846d7c80f760ce88cb4c2b6cb2e4670b7f42228d44",
        "md5": "309d8bd9110115f51bed234cd9e901a8",
        "sha256": "5364bdc6216c6142dbea777b1c9900d7310510cac5ab6766fec07fa05450756e"
      },
      "downloads": -1,
      "filename": "ecashrpc-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "309d8bd9110115f51bed234cd9e901a8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 8236,
      "upload_time": "2022-09-28T07:14:14",
      "upload_time_iso_8601": "2022-09-28T07:14:14.972577Z",
      "url": "https://files.pythonhosted.org/packages/44/83/1e2ae35b7769fc57f2846d7c80f760ce88cb4c2b6cb2e4670b7f42228d44/ecashrpc-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a382943f7f220d7663364eec26d84532ab54131a748b082d6da19cf25a913e44",
        "md5": "11baefd8849e960f82a5a42f0d7ef555",
        "sha256": "23148010f1de3fe69242f1233a9e156f3bb52185206fd4941987f9f6511f1d86"
      },
      "downloads": -1,
      "filename": "ecashrpc-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "11baefd8849e960f82a5a42f0d7ef555",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 9174,
      "upload_time": "2022-09-28T07:14:16",
      "upload_time_iso_8601": "2022-09-28T07:14:16.417147Z",
      "url": "https://files.pythonhosted.org/packages/a3/82/943f7f220d7663364eec26d84532ab54131a748b082d6da19cf25a913e44/ecashrpc-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}