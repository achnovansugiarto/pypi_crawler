{
  "info": {
    "author": "Viliam Vadocz",
    "author_email": "viliam.vadocz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# tgdsmells\n\n## Helper classes for the Team Group Data Sharing Medium & Electronic Local Link System\n\nLearn more about [TGDSMELLS](https://github.com/RLBot/RLBot/wiki/Team-Match-Communication-Protocol).\n\n## Upgrading from TMCP\n\nUpgrading from TMCP to TGDSMELLS is simple. All you need to do is replace `tmcp` with `tgdsmells` in your requirements.txt, then replace `from tmcp import` with `from tgdsmells import`.\n\n---\n\n## How to use\n\nStart by creating an instance of the TGDSMELLSHandler.\nYou should pass in your agent.\n\n```py\nfrom tgdsmells import TGDSMELLSHandler\n\nclass MyBot(BaseAgent):\n    def initialize_agent(self):\n        self.tgdsmells_handler = TGDSMELLSHandler(self)\n```\n\nUsage is also very straightforward:\n\n```py\nfrom tgdsmells import TGDSMELLSMessage, ActionType\n\n...\n    def get_output(self, packet: GameTickPacket) -> SimpleControllerState:\n        # Receive and parse all new matchcomms messages into TGDSMELLSMessage objects.\n        new_messages: List[TGDSMELLSMessage] = self.tgdsmells_handler.recv()\n        # Handle TGDSMELLSMessages.\n        for message in new_messages:\n            if message.action_type == ActionType.BALL:\n                print(message.time)\n        \n        ...\n\n        # You can send messages like this.\n        self.tgdsmells_handler.send_boost_action(pad_index)\n\n        # Or you can create them and send them more directly:\n        my_message = TGDSMELLSMessage.ball_action(self.team, self.index, estimated_time_of_arrival)\n        self.tgdsmells_handler.send(my_message)\n```\n\nThe handler will throttle your messages if you send them too quickly.\nIf you want to make sure all of your messages are sent, you can create a backlog like this:\n\n```py\n# During initialization, create a backlog list.\nself.backlog = []\n\n...\n# Sending returns false if a message was not sent.\nif not self.tgdsmells_handler.send(message):\n    self.backlog.append(message)\n\n...\n# In your main loop, check whether you have any messages in the backlog.\nif self.backlog:\n    backlog_message = self.backlog.pop(0)\n    # Try sending the message again. If it doesn't work, return it to the backlog.\n    if not self.tgdsmells_handler.send(backlog_message):\n        self.backlog.insert(0, backlog_message)\n```\n\n## Avoiding major breaking changes\n\nThis package is regularly updated according to the latest TGDSMELLS specification.\nTo avoid your bot breaking during tournaments due to major version updates, you can use a virtual_environment and pin a specific version of this package.\n\nIn your requirements.txt:\n\n```txt\ntgdsmells==1.*\n```\n\nIn your bot.cfg:\n\n```toml\n[Locations]\nuse_virtual_environment = true\nrequirements_file = ./requirements.txt\n```\n\nIf you don't want to do this, you can also disable the handler if a different version of the package is used.\nThis will not send or receive any messages, but will pretend as if it was sending all and receiving none.\n\n```py\nfrom tgdsmells import TGDSMELLS_VERSION\n\nif TGDSMELLS_VERSION[0] != 1:\n    my_handler.disable()\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/ViliamVadocz/tmcp/archive/v_1_0_0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/L0laapk3/tgdsmells/",
    "keywords": "RLBot,protocol",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tgdsmells",
    "package_url": "https://pypi.org/project/tgdsmells/",
    "platform": "",
    "project_url": "https://pypi.org/project/tgdsmells/",
    "project_urls": {
      "Download": "https://github.com/ViliamVadocz/tmcp/archive/v_1_0_0.tar.gz",
      "Homepage": "https://github.com/L0laapk3/tgdsmells/"
    },
    "release_url": "https://pypi.org/project/tgdsmells/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Helper classes for the Team Group Data Sharing Medium & Electronic Local Link System.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10164703,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5647d7bda21227ef7979989a4ca76a87ed68ebcb3325113972f3598d3e3739f3",
          "md5": "d44fb184b0993825064292e2a44460d5",
          "sha256": "553b24771402e62299e610050ef959545379a58433d02f3bfcdb7d5ff11bfd46"
        },
        "downloads": -1,
        "filename": "tgdsmells-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d44fb184b0993825064292e2a44460d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7518,
        "upload_time": "2021-04-24T22:21:52",
        "upload_time_iso_8601": "2021-04-24T22:21:52.790462Z",
        "url": "https://files.pythonhosted.org/packages/56/47/d7bda21227ef7979989a4ca76a87ed68ebcb3325113972f3598d3e3739f3/tgdsmells-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90b81e38b51143da37f5763040935aed05065be4ae6ea112ec0999fbcb3144f2",
          "md5": "ddac5a54a9ae417d3376cadd8cba9ce2",
          "sha256": "0d221b731898268aa7bd5c98452f73594ba71284fa2fb55f9f31a325c90fa1a3"
        },
        "downloads": -1,
        "filename": "tgdsmells-1.0.0b0.tar.gz",
        "has_sig": false,
        "md5_digest": "ddac5a54a9ae417d3376cadd8cba9ce2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7524,
        "upload_time": "2021-04-25T10:41:30",
        "upload_time_iso_8601": "2021-04-25T10:41:30.431391Z",
        "url": "https://files.pythonhosted.org/packages/90/b8/1e38b51143da37f5763040935aed05065be4ae6ea112ec0999fbcb3144f2/tgdsmells-1.0.0b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5647d7bda21227ef7979989a4ca76a87ed68ebcb3325113972f3598d3e3739f3",
        "md5": "d44fb184b0993825064292e2a44460d5",
        "sha256": "553b24771402e62299e610050ef959545379a58433d02f3bfcdb7d5ff11bfd46"
      },
      "downloads": -1,
      "filename": "tgdsmells-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d44fb184b0993825064292e2a44460d5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7518,
      "upload_time": "2021-04-24T22:21:52",
      "upload_time_iso_8601": "2021-04-24T22:21:52.790462Z",
      "url": "https://files.pythonhosted.org/packages/56/47/d7bda21227ef7979989a4ca76a87ed68ebcb3325113972f3598d3e3739f3/tgdsmells-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}