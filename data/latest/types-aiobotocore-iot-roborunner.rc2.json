{
  "info": {
    "author": "Vlad Emelianov",
    "author_email": "vlad.emelianov.nz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.12",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Typing :: Typed"
    ],
    "description": "<a id=\"types-aiobotocore-iot-roborunner\"></a>\n\n# types-aiobotocore-iot-roborunner\n\n[![PyPI - types-aiobotocore-iot-roborunner](https://img.shields.io/pypi/v/types-aiobotocore-iot-roborunner.svg?color=blue)](https://pypi.org/project/types-aiobotocore-iot-roborunner)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/types-aiobotocore-iot-roborunner.svg?color=blue)](https://pypi.org/project/types-aiobotocore-iot-roborunner)\n[![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/types-aiobotocore-iot-roborunner?color=blue)](https://pypistats.org/packages/types-aiobotocore-iot-roborunner)\n\n![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)\n\nType annotations for\n[aiobotocore.IoTRoboRunner 2.5.0](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/iot-roborunner.html#IoTRoboRunner)\nservice compatible with [VSCode](https://code.visualstudio.com/),\n[PyCharm](https://www.jetbrains.com/pycharm/),\n[Emacs](https://www.gnu.org/software/emacs/),\n[Sublime Text](https://www.sublimetext.com/),\n[mypy](https://github.com/python/mypy),\n[pyright](https://github.com/microsoft/pyright) and other tools.\n\nGenerated by\n[mypy-boto3-builder 7.13.0](https://github.com/youtype/mypy_boto3_builder).\n\nMore information can be found on\n[types-aiobotocore](https://pypi.org/project/types-aiobotocore/) page and in\n[types-aiobotocore-iot-roborunner docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_iot_roborunner/).\n\nSee how it helps to find and fix potential bugs:\n\n![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)\n\n- [types-aiobotocore-iot-roborunner](#types-aiobotocore-iot-roborunner)\n  - [How to install](#how-to-install)\n    - [From PyPI with pip](#from-pypi-with-pip)\n  - [How to uninstall](#how-to-uninstall)\n  - [Usage](#usage)\n    - [VSCode](#vscode)\n    - [PyCharm](#pycharm)\n    - [Emacs](#emacs)\n    - [Sublime Text](#sublime-text)\n    - [Other IDEs](#other-ides)\n    - [mypy](#mypy)\n    - [pyright](#pyright)\n  - [Explicit type annotations](#explicit-type-annotations)\n    - [Client annotations](#client-annotations)\n    - [Paginators annotations](#paginators-annotations)\n    - [Literals](#literals)\n    - [Typed dictionaries](#typed-dictionaries)\n  - [How it works](#how-it-works)\n  - [What's new](#what's-new)\n    - [Implemented features](#implemented-features)\n    - [Latest changes](#latest-changes)\n  - [Versioning](#versioning)\n  - [Thank you](#thank-you)\n  - [Documentation](#documentation)\n  - [Support and contributing](#support-and-contributing)\n\n<a id=\"how-to-install\"></a>\n\n## How to install\n\n<a id=\"from-pypi-with-pip\"></a>\n\n### From PyPI with pip\n\nInstall `types-aiobotocore` for `IoTRoboRunner` service.\n\n```bash\n# install with aiobotocore type annotations\npython -m pip install 'types-aiobotocore[iot-roborunner]'\n\n\n# Lite version does not provide session.client/resource overloads\n# it is more RAM-friendly, but requires explicit type annotations\npython -m pip install 'types-aiobotocore-lite[iot-roborunner]'\n\n\n# standalone installation\npython -m pip install types-aiobotocore-iot-roborunner\n```\n\n<a id=\"how-to-uninstall\"></a>\n\n## How to uninstall\n\n```bash\npython -m pip uninstall -y types-aiobotocore-iot-roborunner\n```\n\n<a id=\"usage\"></a>\n\n## Usage\n\n<a id=\"vscode\"></a>\n\n### VSCode\n\n- Install\n  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)\n- Install\n  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)\n- Set `Pylance` as your Python Language Server\n- Install `types-aiobotocore[iot-roborunner]` in your environment:\n\n```bash\npython -m pip install 'types-aiobotocore[iot-roborunner]'\n```\n\nBoth type checking and code completion should now work. No explicit type\nannotations required, write your `aiobotocore` code as usual.\n\n<a id=\"pycharm\"></a>\n\n### PyCharm\n\nInstall `types-aiobotocore-lite[iot-roborunner]` in your environment:\n\n```bash\npython -m pip install 'types-aiobotocore-lite[iot-roborunner]'`\n```\n\nBoth type checking and code completion should now work. Explicit type\nannotations **are required**.\n\nUse `types-aiobotocore` package instead for implicit type discovery.\n\n<a id=\"emacs\"></a>\n\n### Emacs\n\n- Install `types-aiobotocore` with services you use in your environment:\n\n```bash\npython -m pip install 'types-aiobotocore[iot-roborunner]'\n```\n\n- Install [use-package](https://github.com/jwiegley/use-package),\n  [lsp](https://github.com/emacs-lsp/lsp-mode/),\n  [company](https://github.com/company-mode/company-mode) and\n  [flycheck](https://github.com/flycheck/flycheck) packages\n- Install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package\n\n```elisp\n(use-package lsp-pyright\n  :ensure t\n  :hook (python-mode . (lambda ()\n                          (require 'lsp-pyright)\n                          (lsp)))  ; or lsp-deferred\n  :init (when (executable-find \"python3\")\n          (setq lsp-pyright-python-executable-cmd \"python3\"))\n  )\n```\n\n- Make sure emacs uses the environment where you have installed\n  `types-aiobotocore`\n\nType checking should now work. No explicit type annotations required, write\nyour `aiobotocore` code as usual.\n\n<a id=\"sublime-text\"></a>\n\n### Sublime Text\n\n- Install `types-aiobotocore[iot-roborunner]` with services you use in your\n  environment:\n\n```bash\npython -m pip install 'types-aiobotocore[iot-roborunner]'\n```\n\n- Install [LSP-pyright](https://github.com/sublimelsp/LSP-pyright) package\n\nType checking should now work. No explicit type annotations required, write\nyour `aiobotocore` code as usual.\n\n<a id=\"other-ides\"></a>\n\n### Other IDEs\n\nNot tested, but as long as your IDE supports `mypy` or `pyright`, everything\nshould work.\n\n<a id=\"mypy\"></a>\n\n### mypy\n\n- Install `mypy`: `python -m pip install mypy`\n- Install `types-aiobotocore[iot-roborunner]` in your environment:\n\n```bash\npython -m pip install 'types-aiobotocore[iot-roborunner]'`\n```\n\nType checking should now work. No explicit type annotations required, write\nyour `aiobotocore` code as usual.\n\n<a id=\"pyright\"></a>\n\n### pyright\n\n- Install `pyright`: `npm i -g pyright`\n- Install `types-aiobotocore[iot-roborunner]` in your environment:\n\n```bash\npython -m pip install 'types-aiobotocore[iot-roborunner]'\n```\n\nOptionally, you can install `types-aiobotocore` to `typings` folder.\n\nType checking should now work. No explicit type annotations required, write\nyour `aiobotocore` code as usual.\n\n<a id=\"explicit-type-annotations\"></a>\n\n## Explicit type annotations\n\n<a id=\"client-annotations\"></a>\n\n### Client annotations\n\n`IoTRoboRunnerClient` provides annotations for\n`session.create_client(\"iot-roborunner\")`.\n\n```python\nfrom aiobotocore.session import get_session\n\nfrom types_aiobotocore_iot_roborunner import IoTRoboRunnerClient\n\nsession = get_session()\nasync with session.create_client(\"iot-roborunner\") as client:\n    client: IoTRoboRunnerClient\n    # now client usage is checked by mypy and IDE should provide code completion\n```\n\n<a id=\"paginators-annotations\"></a>\n\n### Paginators annotations\n\n`types_aiobotocore_iot_roborunner.paginator` module contains type annotations\nfor all paginators.\n\n```python\nfrom aiobotocore.session import get_session\n\nfrom types_aiobotocore_iot_roborunner import IoTRoboRunnerClient\nfrom types_aiobotocore_iot_roborunner.paginator import (\n    ListDestinationsPaginator,\n    ListSitesPaginator,\n    ListWorkerFleetsPaginator,\n    ListWorkersPaginator,\n)\n\nsession = get_session()\nasync with session.create_client(\"iot-roborunner\") as client:\n    client: IoTRoboRunnerClient\n\n    # Explicit type annotations are optional here\n    # Types should be correctly discovered by mypy and IDEs\n    list_destinations_paginator: ListDestinationsPaginator = client.get_paginator(\n        \"list_destinations\"\n    )\n    list_sites_paginator: ListSitesPaginator = client.get_paginator(\"list_sites\")\n    list_worker_fleets_paginator: ListWorkerFleetsPaginator = client.get_paginator(\n        \"list_worker_fleets\"\n    )\n    list_workers_paginator: ListWorkersPaginator = client.get_paginator(\"list_workers\")\n```\n\n<a id=\"literals\"></a>\n\n### Literals\n\n`types_aiobotocore_iot_roborunner.literals` module contains literals extracted\nfrom shapes that can be used in user code for type checking.\n\n```python\nfrom types_aiobotocore_iot_roborunner.literals import (\n    DestinationStateType,\n    ListDestinationsPaginatorName,\n    ListSitesPaginatorName,\n    ListWorkerFleetsPaginatorName,\n    ListWorkersPaginatorName,\n    IoTRoboRunnerServiceName,\n    ServiceName,\n    ResourceServiceName,\n    PaginatorName,\n    RegionName,\n)\n\n\ndef check_value(value: DestinationStateType) -> bool:\n    ...\n```\n\n<a id=\"typed-dictionaries\"></a>\n\n### Typed dictionaries\n\n`types_aiobotocore_iot_roborunner.type_defs` module contains structures and\nshapes assembled to typed dictionaries for additional type checking.\n\n```python\nfrom types_aiobotocore_iot_roborunner.type_defs import (\n    CartesianCoordinatesTypeDef,\n    CreateDestinationRequestRequestTypeDef,\n    ResponseMetadataTypeDef,\n    CreateSiteRequestRequestTypeDef,\n    CreateWorkerFleetRequestRequestTypeDef,\n    OrientationTypeDef,\n    VendorPropertiesTypeDef,\n    DeleteDestinationRequestRequestTypeDef,\n    DeleteSiteRequestRequestTypeDef,\n    DeleteWorkerFleetRequestRequestTypeDef,\n    DeleteWorkerRequestRequestTypeDef,\n    DestinationTypeDef,\n    GetDestinationRequestRequestTypeDef,\n    GetSiteRequestRequestTypeDef,\n    GetWorkerFleetRequestRequestTypeDef,\n    GetWorkerRequestRequestTypeDef,\n    PaginatorConfigTypeDef,\n    ListDestinationsRequestRequestTypeDef,\n    ListSitesRequestRequestTypeDef,\n    SiteTypeDef,\n    ListWorkerFleetsRequestRequestTypeDef,\n    WorkerFleetTypeDef,\n    ListWorkersRequestRequestTypeDef,\n    UpdateDestinationRequestRequestTypeDef,\n    UpdateSiteRequestRequestTypeDef,\n    UpdateWorkerFleetRequestRequestTypeDef,\n    PositionCoordinatesTypeDef,\n    CreateDestinationResponseTypeDef,\n    CreateSiteResponseTypeDef,\n    CreateWorkerFleetResponseTypeDef,\n    CreateWorkerResponseTypeDef,\n    GetDestinationResponseTypeDef,\n    GetSiteResponseTypeDef,\n    GetWorkerFleetResponseTypeDef,\n    UpdateDestinationResponseTypeDef,\n    UpdateSiteResponseTypeDef,\n    UpdateWorkerFleetResponseTypeDef,\n    ListDestinationsResponseTypeDef,\n    ListDestinationsRequestListDestinationsPaginateTypeDef,\n    ListSitesRequestListSitesPaginateTypeDef,\n    ListWorkerFleetsRequestListWorkerFleetsPaginateTypeDef,\n    ListWorkersRequestListWorkersPaginateTypeDef,\n    ListSitesResponseTypeDef,\n    ListWorkerFleetsResponseTypeDef,\n    CreateWorkerRequestRequestTypeDef,\n    GetWorkerResponseTypeDef,\n    UpdateWorkerRequestRequestTypeDef,\n    UpdateWorkerResponseTypeDef,\n    WorkerTypeDef,\n    ListWorkersResponseTypeDef,\n)\n\n\ndef get_structure() -> CartesianCoordinatesTypeDef:\n    return {...}\n```\n\n<a id=\"how-it-works\"></a>\n\n## How it works\n\nFully automated\n[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefully\ngenerates type annotations for each service, patiently waiting for\n`aiobotocore` updates. It delivers a drop-in type annotations for you and makes\nsure that:\n\n- All available `aiobotocore` services are covered.\n- Each public class and method of every `aiobotocore` service gets valid type\n  annotations extracted from the documentation (blame `botocore` docs if types\n  are incorrect).\n- Type annotations include up-to-date documentation.\n- Link to documentation is provided for every method.\n- Code is processed by [black](https://github.com/psf/black) and\n  [isort](https://github.com/PyCQA/isort) for readability.\n\n<a id=\"what's-new\"></a>\n\n## What's new\n\n<a id=\"implemented-features\"></a>\n\n### Implemented features\n\n- Fully type annotated `boto3`, `botocore` and `aiobotocore` libraries\n- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs`\n  compatibility\n- `Client`, `ServiceResource`, `Resource`, `Waiter` `Paginator` type\n  annotations for each service\n- Generated `TypeDefs` for each service\n- Generated `Literals` for each service\n- Auto discovery of types for `boto3.client` and `boto3.session` calls\n- Auto discovery of types for `session.client` and `session.session` calls\n- Auto discovery of types for `client.get_waiter` and `client.get_paginator`\n  calls\n- Auto discovery of types for `ServiceResource` and `Resource` collections\n- Auto discovery of types for `aiobotocore.Session.create_client` calls\n\n<a id=\"latest-changes\"></a>\n\n### Latest changes\n\nBuilder changelog can be found in\n[Releases](https://github.com/youtype/mypy_boto3_builder/releases).\n\n<a id=\"versioning\"></a>\n\n## Versioning\n\n`types-aiobotocore-iot-roborunner` version is the same as related `aiobotocore`\nversion and follows [PEP 440](https://www.python.org/dev/peps/pep-0440/)\nformat.\n\n<a id=\"thank-you\"></a>\n\n## Thank you\n\n- [Allie Fitter](https://github.com/alliefitter) for\n  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),\n  this package is based on top of his work\n- [black](https://github.com/psf/black) developers for an awesome formatting\n  tool\n- [Timothy Edmund Crosley](https://github.com/timothycrosley) for\n  [isort](https://github.com/PyCQA/isort) and how flexible it is\n- [mypy](https://github.com/python/mypy) developers for doing all dirty work\n  for us\n- [pyright](https://github.com/microsoft/pyright) team for the new era of typed\n  Python\n\n<a id=\"documentation\"></a>\n\n## Documentation\n\nAll services type annotations can be found in\n[aiobotocore docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_iot_roborunner/)\n\n<a id=\"support-and-contributing\"></a>\n\n## Support and contributing\n\nThis package is auto-generated. Please reports any bugs or request new features\nin [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)\nrepository.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/youtype/mypy_boto3_builder",
    "keywords": "aiobotocore iot-roborunner type-annotations boto3-stubs mypy typeshed autocomplete",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "types-aiobotocore-iot-roborunner",
    "package_url": "https://pypi.org/project/types-aiobotocore-iot-roborunner/",
    "platform": null,
    "project_url": "https://pypi.org/project/types-aiobotocore-iot-roborunner/",
    "project_urls": {
      "Documentation": "https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_iot_roborunner/",
      "Homepage": "https://github.com/youtype/mypy_boto3_builder",
      "Source": "https://github.com/youtype/mypy_boto3_builder",
      "Tracker": "https://github.com/youtype/mypy_boto3_builder/issues"
    },
    "release_url": "https://pypi.org/project/types-aiobotocore-iot-roborunner/2.5.0.post1/",
    "requires_dist": [
      "typing-extensions (>=4.1.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Type annotations for aiobotocore.IoTRoboRunner 2.5.0 service generated with mypy-boto3-builder 7.13.0",
    "version": "2.5.0.post1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17251533,
  "releases": {
    "2.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d8bef31c167cffefc18247dbda5ce87f9379d223dc40614409d9e8fbaf715d8",
          "md5": "7c82de2419bcc46ed2009d151ab74018",
          "sha256": "59880b933d084b48b50eb5a6a04c47de86ec14809f80a5d5b7a47ef0c5ffc1f2"
        },
        "downloads": -1,
        "filename": "types_aiobotocore_iot_roborunner-2.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7c82de2419bcc46ed2009d151ab74018",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 24895,
        "upload_time": "2023-03-08T01:43:03",
        "upload_time_iso_8601": "2023-03-08T01:43:03.039994Z",
        "url": "https://files.pythonhosted.org/packages/7d/8b/ef31c167cffefc18247dbda5ce87f9379d223dc40614409d9e8fbaf715d8/types_aiobotocore_iot_roborunner-2.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39f629c597d61a5ce60f170f437a216f5275328f03d951049fa58573752d4d6c",
          "md5": "fd07003a0b4c50380485975e7f12f767",
          "sha256": "acc325101ca4447a110929026bb351e40632370644b948dee587b3a0e1c18f5d"
        },
        "downloads": -1,
        "filename": "types-aiobotocore-iot-roborunner-2.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fd07003a0b4c50380485975e7f12f767",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18299,
        "upload_time": "2023-03-08T01:43:06",
        "upload_time_iso_8601": "2023-03-08T01:43:06.990813Z",
        "url": "https://files.pythonhosted.org/packages/39/f6/29c597d61a5ce60f170f437a216f5275328f03d951049fa58573752d4d6c/types-aiobotocore-iot-roborunner-2.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd84ef8dd13ac7c3bd00eb4f96b92dcc62a9e3e8588aff1d2eaa1626fcbe9b81",
          "md5": "0dcab37fd4673e15e690f97b34678027",
          "sha256": "bc959f1eba830fc7c7145c3c9843c443ba6ae99611eaa28d83459bff4b0658e4"
        },
        "downloads": -1,
        "filename": "types_aiobotocore_iot_roborunner-2.5.0.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0dcab37fd4673e15e690f97b34678027",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 24979,
        "upload_time": "2023-03-11T12:32:16",
        "upload_time_iso_8601": "2023-03-11T12:32:16.128139Z",
        "url": "https://files.pythonhosted.org/packages/cd/84/ef8dd13ac7c3bd00eb4f96b92dcc62a9e3e8588aff1d2eaa1626fcbe9b81/types_aiobotocore_iot_roborunner-2.5.0.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b21819029b59f4307aec6bc259b30b05bce4cb0e350cb5835ad2860bff530fc",
          "md5": "9d15a37f89abd9c85b7534523baee243",
          "sha256": "360d7a34e893aaa6bab299b63c9897c8a1ddb78852dce3c1b4ed58a2dd0f46cc"
        },
        "downloads": -1,
        "filename": "types-aiobotocore-iot-roborunner-2.5.0.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "9d15a37f89abd9c85b7534523baee243",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18260,
        "upload_time": "2023-03-11T12:32:19",
        "upload_time_iso_8601": "2023-03-11T12:32:19.042684Z",
        "url": "https://files.pythonhosted.org/packages/3b/21/819029b59f4307aec6bc259b30b05bce4cb0e350cb5835ad2860bff530fc/types-aiobotocore-iot-roborunner-2.5.0.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd84ef8dd13ac7c3bd00eb4f96b92dcc62a9e3e8588aff1d2eaa1626fcbe9b81",
        "md5": "0dcab37fd4673e15e690f97b34678027",
        "sha256": "bc959f1eba830fc7c7145c3c9843c443ba6ae99611eaa28d83459bff4b0658e4"
      },
      "downloads": -1,
      "filename": "types_aiobotocore_iot_roborunner-2.5.0.post1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0dcab37fd4673e15e690f97b34678027",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 24979,
      "upload_time": "2023-03-11T12:32:16",
      "upload_time_iso_8601": "2023-03-11T12:32:16.128139Z",
      "url": "https://files.pythonhosted.org/packages/cd/84/ef8dd13ac7c3bd00eb4f96b92dcc62a9e3e8588aff1d2eaa1626fcbe9b81/types_aiobotocore_iot_roborunner-2.5.0.post1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b21819029b59f4307aec6bc259b30b05bce4cb0e350cb5835ad2860bff530fc",
        "md5": "9d15a37f89abd9c85b7534523baee243",
        "sha256": "360d7a34e893aaa6bab299b63c9897c8a1ddb78852dce3c1b4ed58a2dd0f46cc"
      },
      "downloads": -1,
      "filename": "types-aiobotocore-iot-roborunner-2.5.0.post1.tar.gz",
      "has_sig": false,
      "md5_digest": "9d15a37f89abd9c85b7534523baee243",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 18260,
      "upload_time": "2023-03-11T12:32:19",
      "upload_time_iso_8601": "2023-03-11T12:32:19.042684Z",
      "url": "https://files.pythonhosted.org/packages/3b/21/819029b59f4307aec6bc259b30b05bce4cb0e350cb5835ad2860bff530fc/types-aiobotocore-iot-roborunner-2.5.0.post1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}