{
  "info": {
    "author": "faderskd",
    "author_email": "daniel.faderski@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# command-reminder\nCommand reminder is a tool for saving and sharing your mostly used fish shell commands. It allows quickly add \ncommands to a local database, which can then be persisted/shared via Github.\n\n# Prerequisites\n```\npython >= 3.9\n``` \n\n# Installation\n```bash\n> pip install command-reminder\n```\n\n# Quickstart\n1. Create a Github repo which will then serve as your commands' database. Use this repo to init a new project. \n\n    ```bash \n    > cr init --repo git@github.com:mygithubuser/my-command-reminder-repository.git\n   ```  \n\n    It will create a `~/.command-reminder` directory, where all your commands will exist. You can change that directory by\n    setting `COMMAND_REMINDER_DIR` variable.\n    \n2. Add `cr init | source` to the `~/.config/fish/config.fish` file. Every time you start the fish shell,\n   it will load both default and saved fish functions.\n   \n3. Record a command.  \n\n    ```bash\n    > cr record --name 'lsof_listening_ports' --command 'lsof -nP -iTCP:$PORT | grep LISTEN'\n   ```  \n     \n   Remember to use `'` except `\"` whenever a command contains `$` sign, otherwise the environment variable will be resolved.\n   It saves a command to the local database. You can use tags too:  \n\n   ```bash\n   > cr record --name 'show_process_rss_memory' --command 'ps o pid,rss -p 23159' --tags '#memory #process'\n   ```\n   The record command creates a fish function too (available at shell after running `cr init | source`). It allows to quickly get\n   autosuggestions about available commands just by entering few first command's letters and typing `Tab`. Currently, it only\n   prints the command.\n   \n4. List all available commands.  \n\n    `> cr list` or `> cr list --pretty`\n   \n   ```bash\n   lsof_listening_ports: lsof -nP -iTCP:$PORT | grep LISTEN\n   show_process_rss_memory: ps o pid,rss -p 23159\n   git_pull: git pull --rebase\n   ```\n    \n   Narrow down the results to the specific tag.  \n   \n   ```bash\n   > cr list --tags '#memory'\n   ```\n   \n5. Load a command to the shell. It would be very inconvenient to copy and paste the listed command. Command reminder\n   comes with a useful shortcut, which loads commands to the fish history - they are available just by typing `arrow up`.\n   \n   ```bash\n   > cr list | grep ps | h \n   ```\n \n   The `h` shortcut is a function which name is derived from \"history\". It loads the command to the fish history. Remember to\n   add it to a fish via `cr init | source`. Press the `arrow up` and you can execute a found result as a usual command.  \n   \n6. Push recorded commands to the remote repository.\n   ```bash\n   > cr push\n   ```  \n   \n7. You can pull external repositories too. Let's say you're working with a team of a few people and have\n   a common set of commands, useful in your working environment. More experienced team members can share their\n   commands to the new ones.\n   \n   ```bash\n   > cr pull -r git@github.com:somegithubuser/some-external-commands-repository.git\n   ```\n   \n   The `pull` command adds given repository to the configuration file: `~/.command-reminder/repositories/main/config.yaml`,\n   which is then saved in the Github repo together with the recorded commands. On any machine with access to your Github repo (and external too),\n   you just init a new project and provide the proper URL. You will have downloaded your own commands as well as the external ones.\n   To refresh the commands from external repositories use:\n   \n   ```bash\n   > cr pull -update_all\n   ```\n8. The main help menu is available via: `cr --help`. Each subcommand supports help as well, e.g. `cr init --help`.\n\n# Repository structure\n```\n~/.command-reminder/\n    repositories/\n        main/\n            commands.json\n            fish/\n            config.yaml\n        external/\n            ext1/\n                commands.json\n                fish/\n            ext2/\n                commands.json\n                fish/\n``` \n\n* The `main` directory is a place where all your commands are kept. \n* Configuration file `config.yaml` contains data to restore your commands anywhere command-reminder is installed:\n    ```\n    repositories:\n      external:\n        - url: ...\n        - url: ...\n    ```\n* `commands.json` keeps recorded commands\n* `fish` directory keeps fish functions for commands. It is added to your fish search path (via `cr init | source`), \nso all commands are available as a function with fish autosuggestions. For now, the fish functions just print the respective command.\n* The `external` directory contains external repositories' commands.\n\n# Development\n\n#### Install deps  \n```bash\n> pipenv install --dev\n> source .venv/bin/activate.fish\n```\n#### Test\n```bash\n> tox\n```\n\n#### Publish\n```bash\n> python setup.py sdist\n> twine check dist/*\n> twine upload dist/*\n```\n\n#### Installation from local setup.py\n```bash\n> pip install .\n```\n\n# QA:  \n**1. I've got problems with pushing changes to remote repository:**  \nThe push command use `git` shell command underneath. You can just go to the main directory and push it manually.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/faderskd/command-reminder",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "command-reminder",
    "package_url": "https://pypi.org/project/command-reminder/",
    "platform": null,
    "project_url": "https://pypi.org/project/command-reminder/",
    "project_urls": {
      "Homepage": "https://github.com/faderskd/command-reminder"
    },
    "release_url": "https://pypi.org/project/command-reminder/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Tool for saving/sharing your mostly used commands for fish shell",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13751413,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdd8f13fe1966638ca5770bbc1f7b55e5769b4d93582ae222530e2606328097d",
          "md5": "f2349eceb43a41e1df7fb928682add70",
          "sha256": "81eac75da3041428f94475696d6096934bcb3cb66ce35ff2258fc1a23dc88be2"
        },
        "downloads": -1,
        "filename": "command-reminder-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f2349eceb43a41e1df7fb928682add70",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3799,
        "upload_time": "2021-10-31T16:21:12",
        "upload_time_iso_8601": "2021-10-31T16:21:12.152063Z",
        "url": "https://files.pythonhosted.org/packages/fd/d8/f13fe1966638ca5770bbc1f7b55e5769b4d93582ae222530e2606328097d/command-reminder-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad24903a8532405782a2e44b4cf0d6a55e853117a74563bb4a2c846a79b16758",
          "md5": "2ae25bd9039ce947581b7199a7ebabae",
          "sha256": "2f5109e0744166f3798eb973f222ef5fcaa4615ffcf5ff660985707f081716a7"
        },
        "downloads": -1,
        "filename": "command-reminder-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2ae25bd9039ce947581b7199a7ebabae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12958,
        "upload_time": "2022-04-28T23:23:29",
        "upload_time_iso_8601": "2022-04-28T23:23:29.420923Z",
        "url": "https://files.pythonhosted.org/packages/ad/24/903a8532405782a2e44b4cf0d6a55e853117a74563bb4a2c846a79b16758/command-reminder-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1be4a8a871f5941a73210650da9ddd96898db332aa72daa210c6321818ce5d08",
          "md5": "09b198ccc1a59253de92dc31536da47b",
          "sha256": "820c9485262b7821ba26fb668ae49d39d7a3ac7b927fa410d67fc1ab0961590d"
        },
        "downloads": -1,
        "filename": "command-reminder-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "09b198ccc1a59253de92dc31536da47b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13171,
        "upload_time": "2022-05-08T20:06:16",
        "upload_time_iso_8601": "2022-05-08T20:06:16.232845Z",
        "url": "https://files.pythonhosted.org/packages/1b/e4/a8a871f5941a73210650da9ddd96898db332aa72daa210c6321818ce5d08/command-reminder-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1be4a8a871f5941a73210650da9ddd96898db332aa72daa210c6321818ce5d08",
        "md5": "09b198ccc1a59253de92dc31536da47b",
        "sha256": "820c9485262b7821ba26fb668ae49d39d7a3ac7b927fa410d67fc1ab0961590d"
      },
      "downloads": -1,
      "filename": "command-reminder-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "09b198ccc1a59253de92dc31536da47b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13171,
      "upload_time": "2022-05-08T20:06:16",
      "upload_time_iso_8601": "2022-05-08T20:06:16.232845Z",
      "url": "https://files.pythonhosted.org/packages/1b/e4/a8a871f5941a73210650da9ddd96898db332aa72daa210c6321818ce5d08/command-reminder-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}