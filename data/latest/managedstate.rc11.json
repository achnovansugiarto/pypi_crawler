{
  "info": {
    "author": "immijimmi",
    "author_email": "immijimmi1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries :: Application Frameworks"
    ],
    "description": "# managedstate\n\n###### State management inspired by Redux\n\n## Quickstart\n\n### Setup\n\n```python\nfrom managedstate import State\n\ninitial_state = {\n    \"first_key\": [\n        {\n            \"id\": 1,\n            \"second_key\": True\n        },\n        {\n            \"id\": 2,\n            \"second_key\": False\n        }\n    ]\n}\n\nstate = State(initial_state=initial_state)\n```\n\n### Getting the state\n\n- The full state object\n```python\n>>> state.get()\n{'first_key': [{'id': 1, 'second_key': True}, {'id': 2, 'second_key': False}]}\n```\n\n- A sub-state object\n```python\n>>> state.get([\"first_key\", 0, \"second_key\"], defaults=[[], {}, False])\nTrue\n```\n\n- A sub-state object, using a query function\n```python\ndef id_is_1_query(first_key_list):\n    for index, obj in enumerate(first_key_list):\n        if obj[\"id\"] == 1:\n            return index\n```\n```python\n>>> state.get([\"first_key\", KeyQuery(id_is_1_query), \"second_key\"], defaults=[[], {}, False])\nTrue\n```\n\n### Setting the state\n- The full state object\n```python\n>>> state.set({'first_key': [{'id': 3, 'second_key': True}, {'id': 4, 'second_key': False}]})\n>>> state.get()\n{'first_key': [{'id': 3, 'second_key': True}, {'id': 4, 'second_key': False}]}\n```\n\n- A sub-state object, using a query function\n```python\ndef get_id_key_query(target_id):  # This will dynamically create the query we need, when we need it\n    def id_query(substate):\n        for index, obj in enumerate(substate):\n            if obj[\"id\"] == target_id:\n                return index\n    return KeyQuery(id_query)\n```\n```python\n>>> state.set(False, ['first_key', get_id_key_query(3), 'second_key'], defaults=[[], {}])\n>>> state.get()\n{'first_key': [{'id': 3, 'second_key': False}, {'id': 4, 'second_key': False}]}\n```\n\n\n## Functionality\n\n### Dependencies\n\nThe State class and the extensions in this package implement Extendable and Extension respectively, from [objectextensions](https://github.com/immijimmi/objectextensions).\nAs such, applying extensions is done by calling the class method `State.with_extensions()` and passing in the extension classes to be applied.\n\nExample code:\n```python\nfrom managedstate import State\nfrom managedstate.extensions import Registrar\n\nstate = State.with_extensions(Registrar)()\n```\n\n### Extensions\n\n*extensions*.**Registrar**  \n&nbsp;&nbsp;&nbsp;&nbsp;Allows specific get and set operations to be registered under a shorthand label for ease of use later.  \n&nbsp;\n\n*extensions*.**Listeners**  \n&nbsp;&nbsp;&nbsp;&nbsp;Provides an easy way to attach observer methods that will be called immediately after `set()` and/or `get()`.  \n&nbsp;\n\n### Data Classes\n\n**AttributeName**(*self, attribute_name: str*)  \n&nbsp;&nbsp;&nbsp;&nbsp;An instance of this class should be provided as a path key when getting or setting the state,  \n&nbsp;&nbsp;&nbsp;&nbsp;to indicate that the next nesting level of the state should be accessed via an object attribute.  \n\n*Note: As this class is used indirectly to determine the method of access into the state,*  \n&nbsp;&nbsp;&nbsp;&nbsp;*it should never be stored directly as a key within that state.*  \n&nbsp;\n\n**KeyQuery**(*self, path_key_getter: Callable[[Any], Any]*)  \n&nbsp;&nbsp;&nbsp;&nbsp;Instances of this class can be provided as path keys when getting or setting the state,  \n&nbsp;&nbsp;&nbsp;&nbsp;to indicate that the next nesting level of the state should be accessed via the path key returned  \n&nbsp;&nbsp;&nbsp;&nbsp;from its stored function.  \n&nbsp;&nbsp;&nbsp;&nbsp;The function will receive a copy of the state object at the current level of nesting  \n&nbsp;&nbsp;&nbsp;&nbsp;in order to determine what key to return.  \n&nbsp;\n\n*extensions*.**PartialQuery**(*self, path_key_getter: Callable[[Any], Any]*)  \n&nbsp;&nbsp;&nbsp;&nbsp;Instances of this class can be provided as path keys only in `Registrar.register_path()`.  \n&nbsp;&nbsp;&nbsp;&nbsp;When `registered_get()`/`registered_set()` is called with the relevant path label, the function provided below  \n&nbsp;&nbsp;&nbsp;&nbsp;will be called and passed one value from the custom query args list;  \n&nbsp;&nbsp;&nbsp;&nbsp;a valid path key or KeyQuery should be returned.  \n&nbsp;\n\n### Properties\n\n*extensions*.Registrar.**registered_paths**  \n&nbsp;&nbsp;&nbsp;&nbsp;Returns a copy of the current path registry.  \n&nbsp;\n\n### Methods\n\nState.**get**(*self, path_keys: Iterable[Any] = (), defaults: Iterable[Any] = ()*)  \n&nbsp;&nbsp;&nbsp;&nbsp;Drills into the state object using the provided path keys in sequence.  \n&nbsp;&nbsp;&nbsp;&nbsp;Any time progressing further into the state object fails, a copy of the default value at the relevant index  \n&nbsp;&nbsp;&nbsp;&nbsp;of defaults is substituted in.  \n&nbsp;&nbsp;&nbsp;&nbsp;Returns a copy of the drilled-down state object.  \n&nbsp;&nbsp;&nbsp;&nbsp;  \n&nbsp;&nbsp;&nbsp;&nbsp;The `defaults` param may be provided any number of default values, and they will only be used as necessary.  \n&nbsp;\n\nState.**set**(*self, value: Any, path_keys: Iterable[Any] = (), defaults: Iterable[Any] = ()*)  \n&nbsp;&nbsp;&nbsp;&nbsp;Drills into the state object using the provided path keys in sequence.  \n&nbsp;&nbsp;&nbsp;&nbsp;Any time progressing further into the state object fails, a copy of the default value at the relevant index  \n&nbsp;&nbsp;&nbsp;&nbsp;of defaults is substituted in.  \n&nbsp;&nbsp;&nbsp;&nbsp;The final path key is used as the index to store a copy of the provided value at  \n&nbsp;&nbsp;&nbsp;&nbsp;inside the drilled-down state object.  \n&nbsp;&nbsp;&nbsp;&nbsp;  \n&nbsp;&nbsp;&nbsp;&nbsp;The `defaults` param may be provided any number of default values, and they will only be used as necessary.  \n&nbsp;\n\n*extensions*.Registrar.**register_path**(*self, registered_path_label: str, path_keys: Iterable[Any], defaults: Iterable[Any] = ()*)  \n&nbsp;&nbsp;&nbsp;&nbsp;Saves the provided path keys and defaults under the provided label, so that a custom get or set can be  \n&nbsp;&nbsp;&nbsp;&nbsp;carried out at later times simply by providing the label again in a call to `registered_get()` or `registered_set()`.  \n&nbsp;\n\n*extensions*.Registrar.**get_shape**(*self, initial_state: Any = None*)  \n&nbsp;&nbsp;&nbsp;&nbsp;Generates a default shape for the state, using the current registered paths.  \n&nbsp;&nbsp;&nbsp;&nbsp;  \n&nbsp;&nbsp;&nbsp;&nbsp;Any registered paths containing PartialQuery objects are truncated for this purpose, as it is not possible  \n&nbsp;&nbsp;&nbsp;&nbsp;to determine what kind of value a PartialQuery object would provide to drill further into the state.  \n&nbsp;\n\n*extensions*.Registrar.**registered_get**(*self, registered_path_label: str, custom_query_args: Iterable[Any] = ()*)  \n&nbsp;&nbsp;&nbsp;&nbsp;Calls `get()`, passing in the path keys and defaults previously provided in `register()`.  \n&nbsp;&nbsp;&nbsp;&nbsp;If any of these path keys are instances of PartialQuery, each will be called and passed one value from  \n&nbsp;&nbsp;&nbsp;&nbsp;the custom query args list and is expected to return a valid path key or KeyQuery.  \n&nbsp;\n\n*extensions*.Registrar.**registered_set**(*self, value: Any, registered_path_label: str, custom_query_args: Iterable[Any] = ()*)  \n&nbsp;&nbsp;&nbsp;&nbsp;Calls `set()`, passing in the path keys and defaults previously provided in `register()`.  \n&nbsp;&nbsp;&nbsp;&nbsp;If any of these path keys are instances of PartialQuery, each will be called and passed one value from  \n&nbsp;&nbsp;&nbsp;&nbsp;the custom query args list and is expected to return a valid path key or KeyQuery.  \n&nbsp;\n\n*extensions*.Listeners.**add_listener**(*self, method_name: str, listener: Callable[[dict], None]*)  \n&nbsp;&nbsp;&nbsp;&nbsp;Adds the provided listener to a set of callbacks for the specified method.  \n&nbsp;&nbsp;&nbsp;&nbsp;These callbacks will receive copies of the method return value and its arguments  \n&nbsp;&nbsp;&nbsp;&nbsp;in the form `result, self, *args, **kwargs`.  \n&nbsp;\n\n*extensions*.Listeners.**remove_listener**(*self, method_name: str, listener: Callable[[dict], None]*)  \n&nbsp;&nbsp;&nbsp;&nbsp;Removes the provided listener from the set of callbacks for the specified method.  \n&nbsp;\n\n### Additional Info\n\n- KeyQuery instances provided as path keys can return any valid path key, *except* another KeyQuery or a PartialQuery\n- Similarly, PartialQuery instances can return any valid path key except for another PartialQuery (they can however return a KeyQuery)\n- The data classes provided in this package are not designed to be stored inside the state object themselves. Doing so may result in unintended behaviour",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/immijimmi/managedstate/archive/refs/tags/v5.0.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/immijimmi/managedstate",
    "keywords": "state,managed,management,access,data",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "managedstate",
    "package_url": "https://pypi.org/project/managedstate/",
    "platform": null,
    "project_url": "https://pypi.org/project/managedstate/",
    "project_urls": {
      "Download": "https://github.com/immijimmi/managedstate/archive/refs/tags/v5.0.0.tar.gz",
      "Homepage": "https://github.com/immijimmi/managedstate"
    },
    "release_url": "https://pypi.org/project/managedstate/5.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "State management inspired by Redux",
    "version": "5.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15337901,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd84c2d34876b991924465011e97bfb529e44aa849975aaf693e97a6c38540b1",
          "md5": "c151f85fecafc0aa5e3e3480657d914c",
          "sha256": "a7a2524c85abdb4de92c9b1e2739a68f83429486daab2ec70aa283cb758ab5a3"
        },
        "downloads": -1,
        "filename": "managedstate-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c151f85fecafc0aa5e3e3480657d914c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9703,
        "upload_time": "2021-01-29T09:52:19",
        "upload_time_iso_8601": "2021-01-29T09:52:19.496871Z",
        "url": "https://files.pythonhosted.org/packages/bd/84/c2d34876b991924465011e97bfb529e44aa849975aaf693e97a6c38540b1/managedstate-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "445716123297192963121aac1e5950a2dbed45516c4d252469bd725f57c04e66",
          "md5": "c44be7ba0ef0f9074904b885ced703c5",
          "sha256": "5994ddd4b6995606a6ddc578614a8112a293d704142bca7a0e3433d7633e1929"
        },
        "downloads": -1,
        "filename": "managedstate-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c44be7ba0ef0f9074904b885ced703c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9820,
        "upload_time": "2021-10-07T22:37:55",
        "upload_time_iso_8601": "2021-10-07T22:37:55.860626Z",
        "url": "https://files.pythonhosted.org/packages/44/57/16123297192963121aac1e5950a2dbed45516c4d252469bd725f57c04e66/managedstate-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e07185f68117db0b005e80e7bef25f936cdc63490a41aa4855b7cc118474386",
          "md5": "a29e8f63448bed49df7bdc7ba5d81c01",
          "sha256": "0e26779419ab6a9eca3e57e0aa3acfc58001f660e3d2b4f184ba53bccffdf0e6"
        },
        "downloads": -1,
        "filename": "managedstate-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a29e8f63448bed49df7bdc7ba5d81c01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9865,
        "upload_time": "2021-11-04T21:42:17",
        "upload_time_iso_8601": "2021-11-04T21:42:17.268602Z",
        "url": "https://files.pythonhosted.org/packages/4e/07/185f68117db0b005e80e7bef25f936cdc63490a41aa4855b7cc118474386/managedstate-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efe9fc4e6dc1ddf35a0d677cfccf4d2171fe875e3c162fe35093269a24e56bca",
          "md5": "e8f185b9ba6ebcfb257cab9f360ad732",
          "sha256": "bae0cb39afcc83da7691a3d33449bb18266df1219d98e5a166034bc3121439f3"
        },
        "downloads": -1,
        "filename": "managedstate-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e8f185b9ba6ebcfb257cab9f360ad732",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9864,
        "upload_time": "2021-11-04T23:22:53",
        "upload_time_iso_8601": "2021-11-04T23:22:53.389362Z",
        "url": "https://files.pythonhosted.org/packages/ef/e9/fc4e6dc1ddf35a0d677cfccf4d2171fe875e3c162fe35093269a24e56bca/managedstate-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee717b2d1707436e1277907843b4e5cc9529f83eaf6938fdbe9f39ed4a6bf623",
          "md5": "c52235792eaacc57cc6acb125fbf19a0",
          "sha256": "9393cc5cdba76991da8463f926375ffd13a3d9adbc80533f4c924d2500323ce1"
        },
        "downloads": -1,
        "filename": "managedstate-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c52235792eaacc57cc6acb125fbf19a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10082,
        "upload_time": "2022-07-19T20:28:15",
        "upload_time_iso_8601": "2022-07-19T20:28:15.406050Z",
        "url": "https://files.pythonhosted.org/packages/ee/71/7b2d1707436e1277907843b4e5cc9529f83eaf6938fdbe9f39ed4a6bf623/managedstate-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4677402d98ca93b1335860df10f2f4f12f972ec10b89c56a75547057cb976c4c",
          "md5": "332ffa55c72aeba3f859fc62ce998a0a",
          "sha256": "4fbb6ba618e4776d3622b847567f8a007ee40db9141f144997f172aa9b7f68d1"
        },
        "downloads": -1,
        "filename": "managedstate-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "332ffa55c72aeba3f859fc62ce998a0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10112,
        "upload_time": "2022-08-13T04:10:33",
        "upload_time_iso_8601": "2022-08-13T04:10:33.278756Z",
        "url": "https://files.pythonhosted.org/packages/46/77/402d98ca93b1335860df10f2f4f12f972ec10b89c56a75547057cb976c4c/managedstate-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b3b66cea0d3f44135367c66dcd97f9113e01b501ff9f2ae964de7bde711e31e",
          "md5": "1559a86c7bf9e522cc9e20e53aa95112",
          "sha256": "448863a3bffeec611bea38e411ea93af9e04906f7cbd1def144dec6946137f45"
        },
        "downloads": -1,
        "filename": "managedstate-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1559a86c7bf9e522cc9e20e53aa95112",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11237,
        "upload_time": "2022-08-31T13:50:08",
        "upload_time_iso_8601": "2022-08-31T13:50:08.804882Z",
        "url": "https://files.pythonhosted.org/packages/3b/3b/66cea0d3f44135367c66dcd97f9113e01b501ff9f2ae964de7bde711e31e/managedstate-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f98cbb2648f29785011f54526ea8e7abd6433d57eb4a0b9d3db2c0c245f6f080",
          "md5": "82d7837cf3dc9b4be88acea6f6169cf2",
          "sha256": "cf321e34fd46cbffe1a730b83753028064f85b584e8735dade13cdfdf680ba24"
        },
        "downloads": -1,
        "filename": "managedstate-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "82d7837cf3dc9b4be88acea6f6169cf2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11253,
        "upload_time": "2022-09-05T14:05:28",
        "upload_time_iso_8601": "2022-09-05T14:05:28.740510Z",
        "url": "https://files.pythonhosted.org/packages/f9/8c/bb2648f29785011f54526ea8e7abd6433d57eb4a0b9d3db2c0c245f6f080/managedstate-2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cec133535bd8e2d47a688de5bb25f572caf1d807af44f0399dfd8d359b6d1b8",
          "md5": "2259af24bfae529c2247ef468a5746b6",
          "sha256": "212f1d38c5ac281a08495c7f1d51f76ed1f569f78a8872ddb0c2a49d0d959f98"
        },
        "downloads": -1,
        "filename": "managedstate-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2259af24bfae529c2247ef468a5746b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11745,
        "upload_time": "2022-09-13T20:53:40",
        "upload_time_iso_8601": "2022-09-13T20:53:40.531136Z",
        "url": "https://files.pythonhosted.org/packages/7c/ec/133535bd8e2d47a688de5bb25f572caf1d807af44f0399dfd8d359b6d1b8/managedstate-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "591f5c00880561f84aae8089e14c942bd223784227751d21e7e5e6500c05e456",
          "md5": "467dabd802c5dfbc15ec3a2d60fc20ea",
          "sha256": "834b87e6cf28cced742f3db9211d2c1f5ea478c1833a9aaf54f0533ef16b6ae8"
        },
        "downloads": -1,
        "filename": "managedstate-4.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "467dabd802c5dfbc15ec3a2d60fc20ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11638,
        "upload_time": "2022-09-14T23:22:52",
        "upload_time_iso_8601": "2022-09-14T23:22:52.406764Z",
        "url": "https://files.pythonhosted.org/packages/59/1f/5c00880561f84aae8089e14c942bd223784227751d21e7e5e6500c05e456/managedstate-4.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd86a0522c0a16d9b8e07eb0ae721d9d3f059793fc2174516581f85ee8c554ba",
          "md5": "02d1b2112f6f0d6ddbdf8fe60ccf6b94",
          "sha256": "00454a57fcb3c1d52e57f395769224c37f614507f71b8176282ac722da2ba08f"
        },
        "downloads": -1,
        "filename": "managedstate-5.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "02d1b2112f6f0d6ddbdf8fe60ccf6b94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11891,
        "upload_time": "2022-10-07T16:39:00",
        "upload_time_iso_8601": "2022-10-07T16:39:00.746609Z",
        "url": "https://files.pythonhosted.org/packages/cd/86/a0522c0a16d9b8e07eb0ae721d9d3f059793fc2174516581f85ee8c554ba/managedstate-5.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd86a0522c0a16d9b8e07eb0ae721d9d3f059793fc2174516581f85ee8c554ba",
        "md5": "02d1b2112f6f0d6ddbdf8fe60ccf6b94",
        "sha256": "00454a57fcb3c1d52e57f395769224c37f614507f71b8176282ac722da2ba08f"
      },
      "downloads": -1,
      "filename": "managedstate-5.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "02d1b2112f6f0d6ddbdf8fe60ccf6b94",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11891,
      "upload_time": "2022-10-07T16:39:00",
      "upload_time_iso_8601": "2022-10-07T16:39:00.746609Z",
      "url": "https://files.pythonhosted.org/packages/cd/86/a0522c0a16d9b8e07eb0ae721d9d3f059793fc2174516581f85ee8c554ba/managedstate-5.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}