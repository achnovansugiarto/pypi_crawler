{
  "info": {
    "author": "David Bridgeland",
    "author_email": "dave@hangingsteel.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: Apache Software License"
    ],
    "description": "Minnetonka is a Python package for \n`business modeling and simulation \n<https://www.amazon.com/Business-Modeling-Practical-Guide-Realizing/dp/0123741513>`__.\n\n\nMotivation\n==========\n\nOver the last 25 years, I built many business simulation models, initially in\n`iThink <https://www.iseesystems.com/>`__, then in \n`Powersim <http://www.powersim.com/>`__, and since 2006 in \n`Forio SimLang <https://forio.com/epicenter/docs/public/model_code/forio_simlang/language_overview/>`__. \n`Forio SimLang is great <https://hangingsteel.com/2013/03/11/forio-simulate/>`__\nfor business modeling, powerful and expressive, with great support for arrays. \nBut lately I have encountered several occasions in \nwhich SimLang is a good solution for modeling part of the problem, and an \nexisting Python package is a good solution for modeling another part of the \nproblem. \n\nFor example, in 2016 I built a model in SimLang that included some simple\n`graph logic <https://en.wikipedia.org/wiki/Graph_(discrete_mathematics)>`__. \nThere are no graph primitives in SimLang, so I created the graphs using the\nprimitives available: arrays\nand enums and floats. There are no built-in analytics to find the shortest\npath in a weighted graph, so I wrote one, using the `Floyd-Warshall algorithm \n<https://en.wikipedia.org/wiki/Floyd%E2%80%93Warshall_algorithm>`__.\n\nThat model would have been far simpler had I used the Python package \n`NetworkX <http://networkx.github.io/>`__ for the graph logic, and used SimLang\nfor the other 80% of the model. What I needed was the expressivity of SimLang, \nwithin a Python package, so I could easily integrate with NetworkX.\n\nMinnetonka is that combination: the power of Forio SimLang for business\nmodeling, delivered as a Python package. Minnetonka is an appropriate solution\nwhen you want to model a business (or other social organization) in Python.\n\nFeatures\n========\n\nA Minnetonka model is a collection of variables. Each variable takes a value,\na value that can be of any Python data type: an integer, a float, a tuple, an\narray, a dict, etc. \n\nA Minnetonka model is simulated over time. The variables in a model take\na succession of values during the simulation.\n\nMinnetonka variables are defined in terms of other Minnetonka variables via\nPython functions, allowing arbitary Python code\nto be executed at every simulation time step, for every variable.\n\nMinnetonka supports \n`stocks and flows <https://en.wikipedia.org/wiki/Stock_and_flow>`__. Stocks\nallow circular dependencies among variables, to model the circular causality\nunderlying many business situations. \n\nMinnetonka introduces **treatments**, a primitive for value modeling. A single\nvariable can take one value in one treatment and take a different value in \na different treatment. For example, business earnings might be $20 million \nper year in the as-is treatment, and $25 million per year in a to-be treatment, \nwith a planned investment generating additional earnings.\n\nGetting Started\n===============\n\n- `Building a model in Minnetonka <building_model.html>`__\n- `API reference <https://bridgeland.github.io/minnetonka/>`__\n\nInstallation\n============\n\nDependendencies\n===============\n\nMinnetonka requires Python 3.6, and depends on NumPy and SciPy. \n\nContact\n========\n\n`Send me an email <dave@hangingsteel.com>`__.\n\nLicense\n=======\n\n`Apache License, Version 2. <https://www.apache.org/licenses/LICENSE-2.0>`__\n\nNaming\n======\n\nMinnetonka is named after \n`Lake Minnetonka <https://en.wikipedia.org/wiki/Lake_Minnetonka>`__, the \nninth largest lake in the US state of Minnesota. \n\n\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bridgeland/minnetonka",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "minnetonka",
    "package_url": "https://pypi.org/project/minnetonka/",
    "platform": "",
    "project_url": "https://pypi.org/project/minnetonka/",
    "project_urls": {
      "Homepage": "https://github.com/bridgeland/minnetonka"
    },
    "release_url": "https://pypi.org/project/minnetonka/0.0.1/",
    "requires_dist": [
      "numpy (>=1.15.2)",
      "scipy (>=1.1.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "A Python package for business modeling and simulation",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7717207,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7750ac7ab14d7f62e07b9e997c912caa87d40922da54f0ed68143e7f4330ce1c",
          "md5": "4c7ae9ec7a6b488cdd52ecf5374ff6a9",
          "sha256": "0b56f6edba19887723038250f4c7f3133a4f01ae201034b84aed5f77aef687a2"
        },
        "downloads": -1,
        "filename": "minnetonka-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c7ae9ec7a6b488cdd52ecf5374ff6a9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 41988,
        "upload_time": "2020-07-16T20:13:51",
        "upload_time_iso_8601": "2020-07-16T20:13:51.633237Z",
        "url": "https://files.pythonhosted.org/packages/77/50/ac7ab14d7f62e07b9e997c912caa87d40922da54f0ed68143e7f4330ce1c/minnetonka-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "426cbe0e7adfa62f476491917e21d2b656b7efa5c074854c21685467b736b3b3",
          "md5": "bc62540e5ed16636b5b32a12beb987a2",
          "sha256": "2f0b97e79941d7728bd95ae822ce6525017ec6f93f55eb9f11217279794bfec9"
        },
        "downloads": -1,
        "filename": "minnetonka-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bc62540e5ed16636b5b32a12beb987a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 63517,
        "upload_time": "2020-07-16T20:13:55",
        "upload_time_iso_8601": "2020-07-16T20:13:55.353806Z",
        "url": "https://files.pythonhosted.org/packages/42/6c/be0e7adfa62f476491917e21d2b656b7efa5c074854c21685467b736b3b3/minnetonka-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7750ac7ab14d7f62e07b9e997c912caa87d40922da54f0ed68143e7f4330ce1c",
        "md5": "4c7ae9ec7a6b488cdd52ecf5374ff6a9",
        "sha256": "0b56f6edba19887723038250f4c7f3133a4f01ae201034b84aed5f77aef687a2"
      },
      "downloads": -1,
      "filename": "minnetonka-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4c7ae9ec7a6b488cdd52ecf5374ff6a9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 41988,
      "upload_time": "2020-07-16T20:13:51",
      "upload_time_iso_8601": "2020-07-16T20:13:51.633237Z",
      "url": "https://files.pythonhosted.org/packages/77/50/ac7ab14d7f62e07b9e997c912caa87d40922da54f0ed68143e7f4330ce1c/minnetonka-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "426cbe0e7adfa62f476491917e21d2b656b7efa5c074854c21685467b736b3b3",
        "md5": "bc62540e5ed16636b5b32a12beb987a2",
        "sha256": "2f0b97e79941d7728bd95ae822ce6525017ec6f93f55eb9f11217279794bfec9"
      },
      "downloads": -1,
      "filename": "minnetonka-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "bc62540e5ed16636b5b32a12beb987a2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 63517,
      "upload_time": "2020-07-16T20:13:55",
      "upload_time_iso_8601": "2020-07-16T20:13:55.353806Z",
      "url": "https://files.pythonhosted.org/packages/42/6c/be0e7adfa62f476491917e21d2b656b7efa5c074854c21685467b736b3b3/minnetonka-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}