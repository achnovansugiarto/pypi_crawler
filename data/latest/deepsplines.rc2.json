{
  "info": {
    "author": "Joaquim Campos",
    "author_email": "joaquimcampos15@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "\n.. image:: https://user-images.githubusercontent.com/26142730/128066373-a42476b4-6694-4810-8397-d6e1fa2638a8.png\n  :width: 50 %\n  :align: center\n\n.. image:: https://zenodo.org/badge/DOI/10.5281/zenodo.5158821.svg\n   :target: https://doi.org/10.5281/zenodo.5158821\n\n\n*DeepSplines* is a framework to train the activation functions of a neural network.\n\nThe aim of this repository is to:\n\n* Facilitate the reproduction of the results reported in the research papers:\n\n  * `Learning Activation Functions in Deep (Spline) Neural Networks <http://bigwww.epfl.ch/publications/bohra2003.html>`_;\n\n  * `Deep Neural Networks with Trainable Activations and Controlled Lipschitz Constant <http://bigwww.epfl.ch/publications/aziznejad2001.html>`_.\n\n* Enable a seamless integration of deep spline activation functions in a custom neural network.\n\n\nThe proposed scheme is based on the theoretical work of\n`M.Unser <http://bigwww.epfl.ch/publications/unser1901.html>`_.\n\n\n.. contents:: **Table of Contents**\n    :depth: 2\n\n\nRequirements\n============\n\n* python >= 3.7\n* numpy >= 1.10\n* pytorch >= 1.5.1\n* torchvision >= 0.2.2\n* matplotlib >= 3.3.1\n* (optional) CUDA\n\nThe code was developed and tested on a x86_64 Linux system.\n\nInstallation\n============\n\nTo install the package, we first create an environment with python 3.7 (or greater):\n\n.. code-block:: bash\n\n    >> conda create -y -n deepsplines python=3.7\n    >> source activate deepsplines\n\nQuick Install\n--------------\n\n*DeepSplines* is available on `Pypi <https://pypi.org/project/deepsplines/>`_.\nTherefore, you can install the package via the command:\n\n.. code-block:: bash\n\n    >> pip install deepsplines\n\n.. role:: bash(code)\n   :language: bash\n\nFor NVIDIA GPU compatibility, you need to additionally install :bash:`cudatoolkit`\n(via :bash:`conda install -c anaconda cudatoolkit`)\n\nDevelopper Install\n------------------\n\nIt is also possible to install *DeepSplines* from the source for developpers:\n\n.. code-block:: bash\n\n   >> git clone https://github.com/joaquimcampos/DeepSplines\n   >> cd <repository_dir>/\n   >> pip install -e .\n\nUsage\n=====\n\nHere we show an example on how to adapt the `PyTorch CIFAR-10 tutorial <https://pytorch.org/tutorials/beginner/blitz/cifar10_tutorial.html>`_\nto use DeepBSpline activations.\n\n.. code-block:: python\n\n    from deepsplines.ds_modules import dsnn\n\n\n    class DSNet(dsnn.DSModule):\n        def __init__(self):\n\n            super().__init__()\n\n            self.conv_ds = nn.ModuleList()\n            self.fc_ds = nn.ModuleList()\n\n            # deepspline parameters\n            opt_params = {\n                'size': 51,\n                'range_': 4,\n                'init': 'leaky_relu',\n                'save_memory': False\n            }\n\n            # convolutional layer with 6 output channels\n            self.conv1 = nn.Conv2d(3, 6, 5)\n            self.conv_ds.append(dsnn.DeepBSpline('conv', 6, **opt_params))\n            self.pool = nn.MaxPool2d(2, 2)\n            self.conv2 = nn.Conv2d(6, 16, 5)\n            self.conv_ds.append(dsnn.DeepBSpline('conv', 16, **opt_params))\n\n            # fully-connected layer with 120 output units\n            self.fc1 = nn.Linear(16 * 5 * 5, 120)\n            self.fc_ds.append(dsnn.DeepBSpline('fc', 120, **opt_params))\n            self.fc2 = nn.Linear(120, 84)\n            self.fc_ds.append(dsnn.DeepBSpline('fc', 84, **opt_params))\n            self.fc3 = nn.Linear(84, 10)\n\n        def forward(self, x):\n\n            x = self.pool(self.conv_ds[0](self.conv1(x)))\n            x = self.pool(self.conv_ds[1](self.conv2(x)))\n            x = torch.flatten(x, 1)  # flatten all dimensions except batch\n            x = self.fc_ds[0](self.fc1(x))\n            x = self.fc_ds[1](self.fc2(x))\n            x = self.fc3(x)\n\n            return x\n\n    dsnet = DSNet()\n    dsnet.to(device)\n\n    main_optimizer = optim.SGD(dsnet.parameters_no_deepspline(),\n                               lr=0.001,\n                               momentum=0.9)\n    aux_optimizer = optim.Adam(dsnet.parameters_deepspline())\n\n    lmbda = 1e-4 # regularization weight\n    lipschitz = False # lipschitz control\n\n    for epoch in range(2):\n\n        for i, data in enumerate(trainloader):\n            # get the inputs; data is a list of [inputs, labels]\n            inputs, labels = data[0].to(device), data[1].to(device)\n\n            # zero the parameter gradients\n            main_optimizer.zero_grad()\n            aux_optimizer.zero_grad()\n\n            outputs = dsnet(inputs)\n            loss = criterion(outputs, labels)\n\n            # add regularization loss\n            if lipschitz is True:\n                loss = loss + lmbda * dsnet.BV2()\n            else:\n                loss = loss + lmbda * dsnet.TV2()\n\n            loss.backward()\n            main_optimizer.step()\n            aux_optimizer.step()\n\n\nFor full details, please consult `scripts/deepsplines_tutorial.py <https://github.com/joaquimcampos/DeepSplines/blob/master/scripts/deepsplines_tutorial.py>`_.\n\nReproducing results\n-------------------\n\nTo reproduce the results shown in the research papers [Bohra-Campos2020]_ and [Aziznejad2020]_ one can run the following scripts:\n\n.. code-block:: bash\n\n    >> ./scripts/run_resnet32_cifar.py\n    >> ./scripts/run_nin_cifar.py\n    >> ./scripts/run_twoDnet.py\n\nTo see the running options, please add :bash:`--help` to the commands above.\n\nDevelopers\n==========\n\n*DeepSplines* is developed by the `Biomedical Imaging Group <http://bigwww.epfl.ch/>`_,\n`École Polytéchnique Fédérale de Lausanne <https://www.epfl.ch/en/>`_, Switzerland.\n\nFor citing this package, please see: http://doi.org/10.5281/zenodo.5156042\n\nOriginal authors:\n\n-   **Joaquim Campos** (joaquimcampos15@hotmail.com)\n-   **Pakshal Bohra** (pakshal.bohra@epfl.ch)\n\nContributors:\n\n-   **Harshit Gupta**\n\nReferences\n==========\n\n.. [Bohra-Campos2020] P. Bohra, J. Campos, H. Gupta, S. Aziznejad, M. Unser, \"Learning Activation Functions in Deep (Spline) Neural Networks,\" IEEE Open Journal of Signal Processing, vol. 1, pp.295-309, November 19, 2020.\n\n.. [Aziznejad2020] S. Aziznejad, H. Gupta, J. Campos, M. Unser, \"Deep Neural Networks with Trainable Activations and Controlled Lipschitz Constant,\" IEEE Transactions on Signal Processing, vol. 68, pp. 4688-4699, August 10, 2020.\n\nLicense\n=======\n\nThe code is released under the terms of the `MIT License <https://github.com/joaquimcampos/DeepSplines/blob/master/LICENSE>`_\n\nAcknowledgements\n================\n\nThis work was supported in part by the Swiss National Science Foundation under Grant 200020_184646 / 1 and in part by the European Research Council (ERC)\nunder Grant 692726-GlobalBioIm.\n\nMIT License\n\nCopyright (c) 2021 Joaquim Campos, Pakshal Bohra\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n",
    "description_content_type": "text/x-rst; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/joaquimcampos/DeepSplines",
    "keywords": "activation functions,B-splines,deep learning,regularization,sparsity",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "deepsplines",
    "package_url": "https://pypi.org/project/deepsplines/",
    "platform": "",
    "project_url": "https://pypi.org/project/deepsplines/",
    "project_urls": {
      "Bug Tracker": "https://github.com/joaquimcampos/DeepSplines/issues",
      "Homepage": "https://github.com/joaquimcampos/DeepSplines"
    },
    "release_url": "https://pypi.org/project/deepsplines/1.0.0/",
    "requires_dist": [
      "numpy (>=1.10)",
      "torch (>=1.5.1)",
      "torchvision (>=0.2.2)",
      "matplotlib (>=3.3.1)",
      "autopep8 ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "yapf ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "A framework to train the activation functions of a neural network",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11088321,
  "releases": {
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7f2adcb8376a7511d4c5da155a326cf8d5eaa8064fc77789c932e4d9f22d6cb",
          "md5": "2a24c983d771d7354abb47bde66f2ceb",
          "sha256": "7611e223c49151e4004a755bbc74f4da6d0084459a66ffd00c6b6d70284d03b9"
        },
        "downloads": -1,
        "filename": "deepsplines-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a24c983d771d7354abb47bde66f2ceb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 78833,
        "upload_time": "2021-08-03T18:41:39",
        "upload_time_iso_8601": "2021-08-03T18:41:39.837033Z",
        "url": "https://files.pythonhosted.org/packages/f7/f2/adcb8376a7511d4c5da155a326cf8d5eaa8064fc77789c932e4d9f22d6cb/deepsplines-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cb3de0ccbc47727890f5da7555a0447505dba9e93ff8a1fca9d6822f754a25c",
          "md5": "c8b9f14e49adde0e23d62e82190df8b5",
          "sha256": "d8ec7adf2e3017b907b327f5df06ba8f57fb28bcf2a0893964189f40a25a1e31"
        },
        "downloads": -1,
        "filename": "deepsplines-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "c8b9f14e49adde0e23d62e82190df8b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 57831,
        "upload_time": "2021-08-03T18:41:41",
        "upload_time_iso_8601": "2021-08-03T18:41:41.578198Z",
        "url": "https://files.pythonhosted.org/packages/2c/b3/de0ccbc47727890f5da7555a0447505dba9e93ff8a1fca9d6822f754a25c/deepsplines-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4d7c8129172b78659541f42a8e52e3a4d65cbf2cfb487970aabb24b9ae11b09",
          "md5": "905fe238fb99ae0910639b0952b0b1c0",
          "sha256": "0aba1fd72b613b396b0f7ed658ce410b789fc5004b993a8f0e62a4048786287c"
        },
        "downloads": -1,
        "filename": "deepsplines-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "905fe238fb99ae0910639b0952b0b1c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 79192,
        "upload_time": "2021-08-04T09:22:02",
        "upload_time_iso_8601": "2021-08-04T09:22:02.741187Z",
        "url": "https://files.pythonhosted.org/packages/a4/d7/c8129172b78659541f42a8e52e3a4d65cbf2cfb487970aabb24b9ae11b09/deepsplines-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e831147bafb18a3ed7b2aade192bd601369e0a10dd801ae631cefce8e6b4356b",
          "md5": "7712d3a808df629aa9e4f82c72b4c720",
          "sha256": "2ec8703d4d31b5392af4f26af4ce46d837c5cff38cd09a82d8ea601f75429f79"
        },
        "downloads": -1,
        "filename": "deepsplines-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7712d3a808df629aa9e4f82c72b4c720",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 58645,
        "upload_time": "2021-08-04T09:22:04",
        "upload_time_iso_8601": "2021-08-04T09:22:04.378802Z",
        "url": "https://files.pythonhosted.org/packages/e8/31/147bafb18a3ed7b2aade192bd601369e0a10dd801ae631cefce8e6b4356b/deepsplines-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4d7c8129172b78659541f42a8e52e3a4d65cbf2cfb487970aabb24b9ae11b09",
        "md5": "905fe238fb99ae0910639b0952b0b1c0",
        "sha256": "0aba1fd72b613b396b0f7ed658ce410b789fc5004b993a8f0e62a4048786287c"
      },
      "downloads": -1,
      "filename": "deepsplines-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "905fe238fb99ae0910639b0952b0b1c0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 79192,
      "upload_time": "2021-08-04T09:22:02",
      "upload_time_iso_8601": "2021-08-04T09:22:02.741187Z",
      "url": "https://files.pythonhosted.org/packages/a4/d7/c8129172b78659541f42a8e52e3a4d65cbf2cfb487970aabb24b9ae11b09/deepsplines-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e831147bafb18a3ed7b2aade192bd601369e0a10dd801ae631cefce8e6b4356b",
        "md5": "7712d3a808df629aa9e4f82c72b4c720",
        "sha256": "2ec8703d4d31b5392af4f26af4ce46d837c5cff38cd09a82d8ea601f75429f79"
      },
      "downloads": -1,
      "filename": "deepsplines-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7712d3a808df629aa9e4f82c72b4c720",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 58645,
      "upload_time": "2021-08-04T09:22:04",
      "upload_time_iso_8601": "2021-08-04T09:22:04.378802Z",
      "url": "https://files.pythonhosted.org/packages/e8/31/147bafb18a3ed7b2aade192bd601369e0a10dd801ae631cefce8e6b4356b/deepsplines-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}