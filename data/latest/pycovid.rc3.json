{
  "info": {
    "author": "Sudharshan Ashok",
    "author_email": "sudharshan93@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# PyCOVID Package\n\nThe PyCOVID package provides a Pandas Dataframe of the 2019 Novel Coronavirus COVID-19 (2019-nCoV) epidemic based on Rami Krispin's 'coronavirus' package in R. The raw data pulled from the Johns Hopkins University Center for Systems Science and Engineering (JHU CCSE) Coronavirus\n\n<img src=\"img/covid.jfif\" width=\"100%\" align=\"center\"/></a>\n\n## Try in a collaboratory iPython notebook\n<a href=\"https://colab.research.google.com/github/kylemath/pycovid/blob/master/notebooks/PyCovid_Example_Notebook.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\"></a>\n\n### Quick Installation\n\n```py\npip install pycovid\n```\n### Importing\n\n```py\nfrom pycovid import pycovid\npycovid.getCovidCases()\n```\n\n## Value Addition\n\nThe 'coronavirus' R package gets access to data, but the 'pyCOVID' package builts some additional functionality over it.\n\n1. Wide Format for quicker analysis (Wide by case type - Confirmed/Death/Recovered)\n2. Filtering options - By country, timeline, casetype\n3. Cumulative Aggregating options - cumsum parameter to look at the cumulative totals of how the Coronavirus has grown over time\n4. Time Resampling: Converts dataframe to time-indexed, and resamples at required time level (weekly, monthly, etc)\n5. Quick visualization using Plotly: Use the plotCountries() function\n\n\nUsage\n-----\n\n**getCovidCasesWide()** : Get the wide version of the Coronavirus Dataset\nParameters: \n1. Countries: List of Countries (Default: All Countries)\n2. start_date and end_date: Use these to set the time window you wish to access\n3. casetype: Python List of Case Types ('confirmed', 'death' and 'recovered' and Default is all) \n4. cumsum: Gets cumulative sums of cases for each country in list (Default: False)\n\n<img src=\"img/cumsumwide.PNG\" width=\"100%\" align=\"center\"/></a>\n\n**getCovidCases()** : Get the Rami Krispin Coronavirus Dataset in the original format\nParameters: \n1. Countries: List of Countries (Default: All Countries)\n2. Provinces: List of Provinces and States (Default: All)\n3. start_date and end_date: Use these to set the time window you wish to access\n4. casetype: Python List of Case Types ('confirmed', 'death' and 'recovered' and Default is all) \n5. cumsum: gets cummulative sum for each country or province\n5. plotprovinces: default is false, if True it cumsums over provinces instead of countries\n\n<img src=\"img/long.PNG\" width=\"100%\" align=\"center\"/></a>\n\n**plotCountries()**: Plot the country aggregates on world map using Plotly\nParameters:\n1. df: Pass a wide dataframe to the function with country-wise aggregates on confirmed, death and recovered cases\n2. grouped_date: Boolean to indicate whether dataset has been aggregated at country level or not\n3. metric: Can be 'confirmed' or 'death' or 'recovered'\n\n<img src=\"img/world.PNG\" width=\"100%\" align=\"center\"/></a>\n\n**plot_countries_trend()**: Plot the cummultive trends over time for countries. Currently doesn't work for any countries with provinces/states (US, Canada, Australia, France).\n1. countries - list of country names\n2. start_date\n3. end_date \n4. casetype as above,\n5. plottype - linear or log\n\n```py\nfrom pycovid import pycovid\n\npycovid.plot_countries_trend(countries=['Iran', 'Italy', 'Spain', 'Portugal', 'Japan', 'Germany', 'Mexico'],\n\t\t\tcasetype=['confirmed'], start_date=\"2020-01-01\", plottype=\"linear\")\n```\n\n**plotProvinces()**: Plot the values from provinces within a country (tested for australia, US, Canada) over time\n1. countries - just include one\n2. provinces - optional, include names of any states or provinces, otherwise plots all\n3. start_date and end_date: as above\n4. casetype: as above\n5. proportion: default: False, boolean if you want data divided by population\n6. cumulative: default: True, if you want data summed over days\n7. plottype: \"log\" or \"linear\"\n\n```py\nfrom pycovid import pycovid\n\npycovid.plot_provinces(contries=['Canada'], \n\t\t\tprovinces=['Alberta', 'Ontario', 'Quebec', \n\t\t\t\t'Manitoba', 'British Columbia', \n\t\t\t\t'New Brunswick', 'Saskatchewan'], \n\t\t\tcasetype=['confirmed'], start_date=\"2020-02-20\", plottype=\"linear\")\n```\n\n<img src=\"img/province.png\" width=\"100%\" align=\"center\"/></a>\n\n**getIntervalData()**: Get resampled dataset of the Coronavirus based on the date (by default Monthly level)\n1. df: Pass a wide dataframe to the function\n2. interval: The time interval you wish to resample the dataset to: 1D = Daily, 1W: Weekly, 1M: Monthly\n\n<img src=\"img/timeinterval.PNG\" width=\"100%\" align=\"center\"/></a>\n\nInstallation\n------------\n```py\npip install pycovid\n```\n```py\nfrom pycovid import pycovid\npycovid.getCovidCases()\n```\nor with virtual environment\n\n```bash\n# Configure a virtual environment in project directory\npython3 -m venv venv \n# Activate the environment (assign paths)\nsource venv/bin/activate \n# Upgrade Pip and install requirements\npip install --upgrade pip \npip install pycovid\n```\n\nRequirements\n------------\nPandas, Numpy and Plotly\n\nAuthors\n-------\nPyCOVID was written by Sudharshan Ashok <sudharshan93@gmail.com>\n\nLicence\n-------\nMIT License\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://sudharshan-ashok.github.io",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sudharshan-ashok/pycovid",
    "keywords": "Coronavirus,COVID",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pycovid",
    "package_url": "https://pypi.org/project/pycovid/",
    "platform": "",
    "project_url": "https://pypi.org/project/pycovid/",
    "project_urls": {
      "Download": "https://sudharshan-ashok.github.io",
      "Homepage": "https://github.com/sudharshan-ashok/pycovid"
    },
    "release_url": "https://pypi.org/project/pycovid/1.0.0/",
    "requires_dist": [
      "pandas",
      "numpy",
      "plotly"
    ],
    "requires_python": "",
    "summary": "Useful tool to access Rami Krispin Novel Corona Dataset",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6945550,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d69fb9663fbc302160744df2be5b0f246abcf1bdbd34df542e5e5e27aa7f95fa",
          "md5": "834381f0d705363988769e395320c5ae",
          "sha256": "817c8aa5731fa6eceaab7db9990bc5bdb4683ae75970567eb16ed4f2ebc299c8"
        },
        "downloads": -1,
        "filename": "pycovid-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "834381f0d705363988769e395320c5ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4120,
        "upload_time": "2020-03-09T17:25:20",
        "upload_time_iso_8601": "2020-03-09T17:25:20.966322Z",
        "url": "https://files.pythonhosted.org/packages/d6/9f/b9663fbc302160744df2be5b0f246abcf1bdbd34df542e5e5e27aa7f95fa/pycovid-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3b80621ab1747a0b3de47353f76cba4c65580e564b6ce8d532955793e6b4114",
          "md5": "640b1fcf78b35f9fcccaf6a580a22c0e",
          "sha256": "ac3a6f6377a27b22f4994e360712498bd4788e61fd65638a855e30e8c7332a2a"
        },
        "downloads": -1,
        "filename": "pycovid-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "640b1fcf78b35f9fcccaf6a580a22c0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2876,
        "upload_time": "2020-03-09T17:25:22",
        "upload_time_iso_8601": "2020-03-09T17:25:22.859174Z",
        "url": "https://files.pythonhosted.org/packages/f3/b8/0621ab1747a0b3de47353f76cba4c65580e564b6ce8d532955793e6b4114/pycovid-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3494d71d83f70ead0c928c0cec1767fd2db8305b6cc009721babaff1dbd103b8",
          "md5": "0774bfa5573f654345eb442ca36f5b9d",
          "sha256": "cf201f2765097df1de9fe7028c9ba3207bfe30f6bec011118bebb57ec5447304"
        },
        "downloads": -1,
        "filename": "pycovid-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0774bfa5573f654345eb442ca36f5b9d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5978,
        "upload_time": "2020-03-15T01:47:47",
        "upload_time_iso_8601": "2020-03-15T01:47:47.835197Z",
        "url": "https://files.pythonhosted.org/packages/34/94/d71d83f70ead0c928c0cec1767fd2db8305b6cc009721babaff1dbd103b8/pycovid-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "534b3338abbea0a0d90348d09e365f3b892e038eacfe9ea75c277cc42c354c9e",
          "md5": "d57b5d0f27ad06e3895110bb665d60c0",
          "sha256": "a9af2d603c3d9b6751b8f6245b95e847be6688393dd8288187a722331982f3f5"
        },
        "downloads": -1,
        "filename": "pycovid-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d57b5d0f27ad06e3895110bb665d60c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 639341,
        "upload_time": "2020-03-15T01:47:49",
        "upload_time_iso_8601": "2020-03-15T01:47:49.334376Z",
        "url": "https://files.pythonhosted.org/packages/53/4b/3338abbea0a0d90348d09e365f3b892e038eacfe9ea75c277cc42c354c9e/pycovid-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "257b1e7fe197edebca6a89ca0065e18dbf9e8f7244e0987c900e3a93aa661234",
          "md5": "72e981880d6afba50031eac554247f78",
          "sha256": "08638ad435eb270ce0ca67fd4fe585039eb06b9f85e247b160d30a507dbb10a4"
        },
        "downloads": -1,
        "filename": "pycovid-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "72e981880d6afba50031eac554247f78",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6779,
        "upload_time": "2020-04-03T19:20:43",
        "upload_time_iso_8601": "2020-04-03T19:20:43.194054Z",
        "url": "https://files.pythonhosted.org/packages/25/7b/1e7fe197edebca6a89ca0065e18dbf9e8f7244e0987c900e3a93aa661234/pycovid-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "377672b0427cf3549e3542e12893c68a6173fb48026a0f6b42919a233183265f",
          "md5": "e9d962c6677801656a9236fb40198abd",
          "sha256": "838d04bda2ccb530c977d6ca614a93f2e95426e958a9f27d354bc5dc9617714f"
        },
        "downloads": -1,
        "filename": "pycovid-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e9d962c6677801656a9236fb40198abd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 643512,
        "upload_time": "2020-04-03T19:20:44",
        "upload_time_iso_8601": "2020-04-03T19:20:44.319362Z",
        "url": "https://files.pythonhosted.org/packages/37/76/72b0427cf3549e3542e12893c68a6173fb48026a0f6b42919a233183265f/pycovid-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "257b1e7fe197edebca6a89ca0065e18dbf9e8f7244e0987c900e3a93aa661234",
        "md5": "72e981880d6afba50031eac554247f78",
        "sha256": "08638ad435eb270ce0ca67fd4fe585039eb06b9f85e247b160d30a507dbb10a4"
      },
      "downloads": -1,
      "filename": "pycovid-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "72e981880d6afba50031eac554247f78",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6779,
      "upload_time": "2020-04-03T19:20:43",
      "upload_time_iso_8601": "2020-04-03T19:20:43.194054Z",
      "url": "https://files.pythonhosted.org/packages/25/7b/1e7fe197edebca6a89ca0065e18dbf9e8f7244e0987c900e3a93aa661234/pycovid-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "377672b0427cf3549e3542e12893c68a6173fb48026a0f6b42919a233183265f",
        "md5": "e9d962c6677801656a9236fb40198abd",
        "sha256": "838d04bda2ccb530c977d6ca614a93f2e95426e958a9f27d354bc5dc9617714f"
      },
      "downloads": -1,
      "filename": "pycovid-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e9d962c6677801656a9236fb40198abd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 643512,
      "upload_time": "2020-04-03T19:20:44",
      "upload_time_iso_8601": "2020-04-03T19:20:44.319362Z",
      "url": "https://files.pythonhosted.org/packages/37/76/72b0427cf3549e3542e12893c68a6173fb48026a0f6b42919a233183265f/pycovid-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}