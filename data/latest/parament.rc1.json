{
  "info": {
    "author": "Konstantin Herb, Pol Welter",
    "author_email": "science@rashbw.de",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: GPU :: NVIDIA CUDA",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "[![Documentation Status](https://readthedocs.org/projects/parament/badge/?version=latest)](https://parament.readthedocs.io/en/latest/?badge=latest)\n[![CI](https://github.com/parament-integrator/parament/actions/workflows/main.yml/badge.svg)](https://github.com/parament-integrator/parament/actions/workflows/main.yml)\n[![codecov](https://codecov.io/gh/parament-integrator/parament/branch/master/graph/badge.svg?token=UUV3ATJFGZ)](https://codecov.io/gh/parament-integrator/parament)\n[![Maintainability](https://api.codeclimate.com/v1/badges/60aab4a0d76def9c986e/maintainability)](https://codeclimate.com/github/parament-integrator/parament/maintainability)\n\n# Parament\n**Para**llelized **M**atrix **E**xponentiation for **N**umerical **T**ime evolution\n\nParament is a GPU-accelerated solver for time-dependent linear differential equations.\nNotably, it solves the Schrödinger's equation with arbitrary time-dependent control terms.\nParament is open-source and is released under the Apache Licence.\n\n## Documentation\n\nThe official documentation of Parament is [available on Read The Docs](https://parament.readthedocs.io/en/latest/).\n\n## Try it out\n\nYou can [try Parament](https://github.com/parament-integrator/examples) for free, in the browser, via Google Colab (no local GPU required!).\n\n## Installation\n\n### Prerequisites (Windows)\n1. Install Microsoft Visual Studio (Community Edition is sufficient)\n2. Install the CUDA toolkit. Make sure the version of CUDA supports your GPU.\n3. Add the MSVC compiler to your PATH. For Visual Studio 2019, it can be found at `C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.26.28801\\bin\\Hostx64\\x64`.\n\n   You will have to substitute the exact version of the compiler you are using.\n   \n### Prerequisites (Linux)\nCUDA toolkit must be installed.\n\n### Building parament\n\n*Note*: this step is for building the shared library (DLL). If you are only interested in using parament from Python,\nskip ahead. The python installer will build the library automatically.\n\nRun `build.bat` or `build.sh` in the `tools` folder.\nThe working directory must be set to the repository root.\nThe script will create a `/build` folder, containing the binaries.\n\nAny extra command line arguments are forwarded\n directly to `nvcc`. Use this to e.g. to compile for an older\nGPU architecture, that is not targeted by the default `nvcc` settings.   \n\n\n### Building & installing pyparament\n\nPyparament is the official Python wrapper. It requires Python >=3.6.\n\nAt this time, pyparament is not yet available via PyPI. You can still install\nthe latest pyparament directly from Github by typing:\n```\npip install git+https://github.com/parament-integrator/parament#subdirectory=src\n```\nThis will automatically compile the C library, and install it alongside the Python wrapper.\n\nIf you need to pass special arguments to the `nvcc` compiler, you can do so by setting a `NVCC_ARGS` environment variable.\nFor instance, if you are targeting a Tesla K80 GPU (compute capability 3.7) from CUDA 11+, run (Windows and Linux, respectively):\n\n```batch\nset NVCC_ARGS=-arch=compute_37\npip install git+https://github.com/parament-integrator/parament#subdirectory=src\n```\n\n```bash\nNVCC_ARGS=\"-arch=compute_37\"\npip install git+https://github.com/parament-integrator/parament#subdirectory=src\n```\n\nAfter you have installed pyparament, you can run the test suite (requires pytest to be installed).\n\n```\npytest --pyargs parament\n```\n\n## Source tree structure\n\nThis is a rough overview of the most important files and folders in this repository.\n```\n├── _docs                       The source code for the documentation.\n├── _src                        The root of the parament source.\n│   ├── _cuda                   CPP source code.\n│   └── _python                 Source code of Python wrapper.\n│       └── _test               Built-in test-suite. See above.\n├── _tests                      Runner script to execute test suite on Kaggle.     \n└── _tools                      Various scripts, mainly related to building.\n    └── build.bat               Build script for Windows. See above.\n    └── build.sh                Build script for Linux. See above.\n```\n\nVarious other scripts in `/tools` are mostly used in our internal automated build system.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/parament-integrator/parament",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "parament",
    "package_url": "https://pypi.org/project/parament/",
    "platform": "",
    "project_url": "https://pypi.org/project/parament/",
    "project_urls": {
      "Bug Tracker": "https://github.com/parament-integrator/parament/issues",
      "Documentation": "https://parament.readthedocs.io/en/latest/",
      "Homepage": "https://github.com/parament-integrator/parament"
    },
    "release_url": "https://pypi.org/project/parament/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Parament Integrator",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10714114,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53e9c712ebf14d38f7a593f0b00eb94c694865e3df0d1e20d6edb8c5ea1f357a",
          "md5": "d272e70dcf6e9bde276eeb55f8d259bf",
          "sha256": "a46289063b775690ed3e704ab01134e5f4c2500d29d6addee47102c7a9b76d6e"
        },
        "downloads": -1,
        "filename": "parament-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d272e70dcf6e9bde276eeb55f8d259bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31639,
        "upload_time": "2021-06-22T14:35:22",
        "upload_time_iso_8601": "2021-06-22T14:35:22.403182Z",
        "url": "https://files.pythonhosted.org/packages/53/e9/c712ebf14d38f7a593f0b00eb94c694865e3df0d1e20d6edb8c5ea1f357a/parament-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "53e9c712ebf14d38f7a593f0b00eb94c694865e3df0d1e20d6edb8c5ea1f357a",
        "md5": "d272e70dcf6e9bde276eeb55f8d259bf",
        "sha256": "a46289063b775690ed3e704ab01134e5f4c2500d29d6addee47102c7a9b76d6e"
      },
      "downloads": -1,
      "filename": "parament-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d272e70dcf6e9bde276eeb55f8d259bf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 31639,
      "upload_time": "2021-06-22T14:35:22",
      "upload_time_iso_8601": "2021-06-22T14:35:22.403182Z",
      "url": "https://files.pythonhosted.org/packages/53/e9/c712ebf14d38f7a593f0b00eb94c694865e3df0d1e20d6edb8c5ea1f357a/parament-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}