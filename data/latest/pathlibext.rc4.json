{
  "info": {
    "author": "Giampaolo Cimino",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Pathlib Extensions\n\n![example workflow](https://github.com/gpcimino/pathlibext/actions/workflows/python-package.yml/badge.svg)\n\nAdd convenience methods to Python [Pathlib](https://docs.python.org/3/library/pathlib.html) via [monkey patching](https://en.wikipedia.org/wiki/Monkey_patch).\n\n## Installation\n\nPathlibext is available in PyPI. To Install it use `pip`:\n\n```bash\npip install pathlibext\n```\n\n## Usage\n\nJust import pathlibext once and the Path class will be extended with a series of convenience methods:\n\n```python\nfrom pathlib import Path\nimport pathlibext  # pylint: disable=unused-import\n\n\nif __name__ == '__main__':\n\n    tmp = Path.tmpdir()  # from pathlibext\n    print(f\"Create temp directory {tmp}\")\n\n    for f in [\n        tmp / \"dir1\" / \"a.txt\",\n        tmp / \"dir1\" / \"b.txt\",\n        tmp / \"dir2\" / \"a.txt\",\n        tmp / \"dir2\" / \"b.txt\",\n    ]:\n        f.parent.mkdir(exist_ok=True)\n        f.touch()\n        print(f\"Create file {f}\")\n    \n\n    for d in tmp.find(type_=\"d\", name=\"dir2\"): # from pathlibext\n        d.rmtree() # from pathlibext\n        print(f\"Remove non-empty directory {d}\")\n\n    print(\"Existing directories after rmtree()\")\n    for d in tmp.find(type_=\"d\"): # from pathlibext\n        print(f\"{d}\")\n\n    tmp.rmtree() # from pathlibext\n    print(f\"Remove non-empty temp dir {tmp}\")\n```\n\n## List of pathlibext methods\n\n### find\n\nExtends the `Path` object with `find` method which resembles POSIX find.\nThe `find` method returns a [generator](https://docs.python.org/3/howto/functional.html#generators).\n\n```python\nfrom pathlib import Path\nimport pathlibext  # pylint: disable=unused-import\n\nprint(list(Path(\".\").resolve().find(\"f\", name=\"*.py\", maxdepth=4)))\n```\n\n### match\n\nTest whether the `Path` object matches the pattern string, returning a boolean.\nMatch is not case sensitive on Windows.  \nSame as [fnmatch.match](https://docs.python.org/3/library/fnmatch.html#fnmatch.fnmatch).\n\n```python\nimport os\nfrom pathlib import Path\nimport pathlibext  # pylint: disable=unused-import\n\nprint(Path(\"/foo/BAR.txt\").match(\"*BAR*\")) # True\n\nif os.name == \"nt\":\n    # On windows match() is case insensitive\n    print(Path(\"/foo/BAR.txt\").match(\"*bar*\")) # True\nelse:\n    # On POSIX match() is case sensitive\n    print(Path(\"/foo/BAR.txt\").match(\"*bar*\")) # False\n```\n\n### matchcase\n\nTest whether the `Path` object matches pattern, returning boolean.\nThe comparison is case-sensitive.\nSame as [fnmatch.macthcase](https://docs.python.org/3/library/fnmatch.html#fnmatch.fnmatchcase).\n\n```python\nfrom pathlib import Path\nimport pathlibext  # pylint: disable=unused-import\n\nprint(Path(\"/foo/BAR.txt\").matchcase(\"*BAR*\")) # True\nprint(Path(\"/foo/BAR.txt\").matchcase(\"*bar*\")) # False\n```\n\n### rmtree\n\nDelete non empty directory tree starting from the root represented as `Path` object.\n\n```python\nfrom pathlib import Path\nimport pathlibext  # pylint: disable=unused-import\n\ntmp = Path.tmpdir()\nf = tmp / \"foo\" / \"test.txt\"\nd = f.parent\nd.mkdir()\nf.touch() # touchpath !\ntmp.rmtree()\nprint(f.exists()) # False\nprint(d.exists()) # False\n```\n\n### copy and copy_preserve_metadata\n\nCopies the file represented as `Path` object to destination file or directory provided as `Path` object.\nSame as [shutil.copy](https://docs.python.org/3.7/library/shutil.html#shutil.copy).\nTo preserve metadata use copy_preserve_metadata() which is imlpemented with [shutil.copy2](https://docs.python.org/3.7/library/shutil.html#shutil.copy2).\n\n```python\nfrom pathlib import Path\nimport pathlibext  # pylint: disable=unused-import\n\nsrc = Path.tmpdir() \ndst =  Path.tmpdir() \nf = src / \"test.txt\"\nf.touch()\n\ncopied = f.copy(dst)\n\nprint(f.exists()) # True\nprint(copied.exists()) # True\n\nsrc.rmtree() # cleanup\ndst.rmtree() # cleanup\n```\n\n### move\n\nMove the file represented by the `Path` object to another location again represented as `Path` object. It is implemented with [shutil.move](https://docs.python.org/3.7/library/shutil.html#shutil.move).\n\n```python\nfrom pathlib import Path\nimport pathlibext  # pylint: disable=unused-import\n\nsrc = Path.tmpdir() \ndst =  Path.tmpdir() \nf = src / \"test.txt\"\nf.touch()\n\nmoved = f.move(dst)\n\nprint(f.exists()) # False\nprint(moved.exists()) # True\n\nsrc.rmtree() # cleanup\ndst.rmtree() # cleanup\n```\n\n### size\n\nReturn the file size in bytes or in the specified unit of measure. Short hand for `Path.stat().st_size`.\n\n```python\nfrom pathlib import Path\nimport pathlibext  # pylint: disable=unused-import\n\nf = Path.tmpdir() / \"test.txt\"\nf.write_text(\"abc\")\nprint(f.size()) # 3\nprint(f.size(\"MB\")) # 2.86102294921875e-06\n```\n\n### access_time, modification_time, creation_time and metadatachange_time\n\n`access_time()` and `modification_time()` are short hand methods for `Path().stat().st_atime` and `Path().stat().st_mtime`.\n\n`creation_time()` is available only on Windows and returns the file creation, same as `Path().stat().st_ctime`.\n\n`metadatachange_time()` is available only on POSIX and returns the file metadata change time, same as `Path().stat().st_ctime`.\n\nAll methods and are wrapper around [Path().stat()](https://docs.python.org/3/library/pathlib.html#pathlib.Path.stat).\n\nCAUTION! All methods return time as **datetime objects** and are **local time**.\n\n```python\nfrom pathlib import Path\nimport pathlibext  # pylint: disable=unused-import\n\nf = Path.tmpfile() \nf.write_text(\"abc\")\nprint(f.access_time()) \nf.unlink()\n```\n\n### systmpdir\n\nReturn OS temporary directory as `Path`.\n\n```python\nfrom pathlib import Path\nimport pathlibext  # pylint: disable=unused-import\n\nprint(Path.systmpdir()) # Path('/tmp')\n```\n\n### tmpdir\n\nReturn a temporary directory as `Path`. This is a wrapper of [tempfile.mkdtemp](https://docs.python.org/3/library/tempfile.html#tempfile.mkdtemp).\n\n```python\nfrom pathlib import Path\nimport pathlibext  # pylint: disable=unused-import\n\nprint(Path.tmpdir())\n```\n\n### tmpdir_in\n\nCreates a temporary directory as `Path` object inside an existing directory represented as `Path`.\n\n```python\nfrom pathlib import Path\nimport pathlibext  # pylint: disable=unused-import\n\nprint(Path(\"/tmp\").tmpdir_in())\n```\n\n### current_file_path\n\nConvinient method to get the file path as `Path` object of the currently executed file.\nSee `examples/current_file.py` on how to use it.\n\n### current_file_dir\n\nConvinient method to get the directory as `Path` object of the currently executed file.\nSee `examples/current_file.py` on how to use it.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gpcimino/pathlibext",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pathlibext",
    "package_url": "https://pypi.org/project/pathlibext/",
    "platform": null,
    "project_url": "https://pypi.org/project/pathlibext/",
    "project_urls": {
      "Bug Tracker": "https://github.com/gpcimino/pathlibext/issues",
      "Homepage": "https://github.com/gpcimino/pathlibext"
    },
    "release_url": "https://pypi.org/project/pathlibext/0.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Extends the functionalities of Pythion Pathlib",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14567441,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7977969bcb57d10f86d722762e4204417610b317087238d48ee84df938a4419",
          "md5": "6dee7593aac58ff1a11ff37f92a4a69d",
          "sha256": "d5be3b9ba78d2934bd98ddbad62d267c6e07c169465e5dbbca2edb9f11297ca2"
        },
        "downloads": -1,
        "filename": "pathlibext-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6dee7593aac58ff1a11ff37f92a4a69d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4746,
        "upload_time": "2021-12-21T11:07:55",
        "upload_time_iso_8601": "2021-12-21T11:07:55.571063Z",
        "url": "https://files.pythonhosted.org/packages/c7/97/7969bcb57d10f86d722762e4204417610b317087238d48ee84df938a4419/pathlibext-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3230d3eecf643863c55a10f97a454a55d3b2c68f4ebfc254227c4138f3ce7ca9",
          "md5": "594833aecd79b6a811e86d27d909b73e",
          "sha256": "f2eb9181d386465e6aab8b57735229f58d1e55a0f4701adc7bedb44846a74086"
        },
        "downloads": -1,
        "filename": "pathlibext-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "594833aecd79b6a811e86d27d909b73e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5836,
        "upload_time": "2022-01-31T21:00:28",
        "upload_time_iso_8601": "2022-01-31T21:00:28.691705Z",
        "url": "https://files.pythonhosted.org/packages/32/30/d3eecf643863c55a10f97a454a55d3b2c68f4ebfc254227c4138f3ce7ca9/pathlibext-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7194dbddb81231cf0a9ef49d5fa15086eaac73e933413e151d5e47a92276ac2b",
          "md5": "16e65758bebaf0e9f2ab8bc4cd6dd29c",
          "sha256": "85f9967dccac57f9a3ac6d86a80f228728b8de744fd82475449be0d52fb6f555"
        },
        "downloads": -1,
        "filename": "pathlibext-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "16e65758bebaf0e9f2ab8bc4cd6dd29c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6298,
        "upload_time": "2022-02-14T17:52:27",
        "upload_time_iso_8601": "2022-02-14T17:52:27.361575Z",
        "url": "https://files.pythonhosted.org/packages/71/94/dbddb81231cf0a9ef49d5fa15086eaac73e933413e151d5e47a92276ac2b/pathlibext-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85212c7ba3e68e8fe4b629fd1fd1c041cf0d559aeaee95adeb67d955e2fe54e4",
          "md5": "0ecd9eee647bd54cc3c6ca601e7a8c09",
          "sha256": "d1467dbb866a11ac7e9523d0f49d051fbe5864650cc6a0418d7110f43d499a66"
        },
        "downloads": -1,
        "filename": "pathlibext-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ecd9eee647bd54cc3c6ca601e7a8c09",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7871,
        "upload_time": "2022-07-27T15:51:21",
        "upload_time_iso_8601": "2022-07-27T15:51:21.680172Z",
        "url": "https://files.pythonhosted.org/packages/85/21/2c7ba3e68e8fe4b629fd1fd1c041cf0d559aeaee95adeb67d955e2fe54e4/pathlibext-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "85212c7ba3e68e8fe4b629fd1fd1c041cf0d559aeaee95adeb67d955e2fe54e4",
        "md5": "0ecd9eee647bd54cc3c6ca601e7a8c09",
        "sha256": "d1467dbb866a11ac7e9523d0f49d051fbe5864650cc6a0418d7110f43d499a66"
      },
      "downloads": -1,
      "filename": "pathlibext-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0ecd9eee647bd54cc3c6ca601e7a8c09",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7871,
      "upload_time": "2022-07-27T15:51:21",
      "upload_time_iso_8601": "2022-07-27T15:51:21.680172Z",
      "url": "https://files.pythonhosted.org/packages/85/21/2c7ba3e68e8fe4b629fd1fd1c041cf0d559aeaee95adeb67d955e2fe54e4/pathlibext-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}