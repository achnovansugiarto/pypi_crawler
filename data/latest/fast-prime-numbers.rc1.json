{
  "info": {
    "author": "Ganesh Bhat",
    "author_email": "Ganesh Bhat <ganeshsurfs@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Fast Prime Calculations\n\n\nFastest Prime Number Calculation (checks) logic and `This probably is the BEST solution in the internet as of today 11th March 2022`\n\n\nThis same code can be applied in any languages like `Python`, `Go` Lang, `Java`, `PHP`, `Node.js`, `Javascript`, `C`, `C++`, `.NET`, `Rust`, etc with the same logic and have performance benefits. It is pretty fast based on the number of iterations needed. Performance time checks were not consistent across languages (in my local system - to be direct about wordings). I have not seen this implemented before and has been indigenously done. Feedback and usage is welcome.\n\n\n`Max iterations 16666 for n == 100000 instead of 100000 of conventional way`. The `iterations` counts for different ways for Prime number check 100007 can be seen as follows:\n\n\n        count: Prime Conventional way for  83 is  81\n        Is Prime 83 isPrimeConventionalWay:  True\n\n        count: Prime Squareroot way  83 is  8\n        Is Prime 83 isPrimeSquarerootWay:  True\n\n        count: Prime Unconventional way for  83 is  14\n        Is Prime 83 prime (SUGGESTED):  True\n\n        count: Prime AKS - Mersenne primes - Fermat's little theorem or whatever way  83 is  2\n        Is Prime 83 isprimeAKSWay:  True\n\n        count: Prime Conventional way for  169 is  12\n        Is Prime 169 isPrimeConventionalWay:  False\n\n        count: Prime Squareroot way  169 is  12\n        Is Prime 169 isPrimeSquarerootWay:  False\n\n        count: Prime Unconventional way for  169 is  1\n        Is Prime 169 prime (SUGGESTED):  False\n\n        count: Prime AKS - Mersenne primes - Fermat's little theorem or whatever way  169 is  4\n        Is Prime 169 isprimeAKSWay:  False\n\n        count: Prime Conventional way for  100007 is  96\n        Is Prime 100007 isPrimeConventionalWay:  False\n\n        count: Prime Squareroot way  100007 is  96\n        Is Prime 100007 isPrimeSquarerootWay:  False\n\n        count: Prime Unconventional way for  100007 is  15\n        Is Prime 100007 prime (SUGGESTED):  False\n\n        count: Prime AKS - Mersenne primes - Fermat's little theorem or whatever way  100007 is  32\n        Is Prime 100007 isprimeAKSWay:  False\n\n        count: Prime Conventional way for  300530164787 is  1180\n        Is Prime 300530164787 isPrimeConventionalWay:  False\n\n        count: Prime Squareroot way  300530164787 is  1180\n        Is Prime 300530164787 isPrimeSquarerootWay:  False\n\n        count: Prime Unconventional way for  300530164787 is  196\n        Is Prime 300530164787 prime (SUGGESTED):  False\n\n        count: Prime AKS - Mersenne primes - Fermat's little theorem or whatever way  300530164787 is  393\n        Is Prime 300530164787 isprimeAKSWay:  False\n    \n\n\n### Code Base \n\n##### Javascript\n![Javascript Codebase](https://github.com/ganeshkbhat/fastprimecalculations/blob/main/Fastest_Prime_Number_Calculations_codebase_javascript.jpeg)\n\n##### Python\n![Python Codebase](https://github.com/ganeshkbhat/fastprimecalculations/blob/main/Fastest_Prime_Number_Calculations_codebase_python.jpeg)\n\n        - Install Python code using `pip install fast-prime` and `pip install fast-prime-numbers`\n        - Access Python code using `from fast-prime import *`\n<!-- fast-prime-numbers -->\n<!-- fast-primes -->\n<!-- fasterprimes -->\n```\n\n\n# # Usage API for python\n# pip install fasterprimes\n# pip install fast-prime\n# pip install fast-prime-numbers\n\nfrom fasterprimes import *\n\nfast(13)\nconventional(13)\nsqroot(13)\naks(13)\n\n\n```\n\n\nStack overflow Link for Calculations\n\n- [Javascript Codebase](https://stackoverflow.com/questions/40200089/number-prime-test-in-javascript/71437628?noredirect=1#comment126271353_71437628)\n\n- [Python Codebase](https://stackoverflow.com/questions/1801391/how-to-create-the-most-compact-mapping-n-%e2%86%92-isprimen-up-to-a-limit-n/71438297#71438297)\n\n\n### LICENSE\n\n[`PROPRIETARY LICENSE AGREEMENT ONLY`](https://github.com/ganeshkbhat/fastprimecalculations/blob/main/LICENSE)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ganeshkbhat/fastprimecalculations/tree/main/python",
    "keywords": "fast prime numbers primenumber calculations primenumbers",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fast-prime-numbers",
    "package_url": "https://pypi.org/project/fast-prime-numbers/",
    "platform": null,
    "project_url": "https://pypi.org/project/fast-prime-numbers/",
    "project_urls": {
      "Bug Tracker": "https://github.com/ganeshkbhat/fastprimecalculations/issues",
      "Homepage": "https://github.com/ganeshkbhat/fastprimecalculations"
    },
    "release_url": "https://pypi.org/project/fast-prime-numbers/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4",
    "summary": "Fastest Prime Number Calculation (checks) logic for python. Also contains other prime number calculation ways",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15263325,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e17f278613a74f4121f9b8f8518bb6b82c0bc2adff9fa8e47ff2d06eaca6b4d",
          "md5": "54e3357a66eb49835fbea75174af8098",
          "sha256": "04702845037d441198c48478b85ec8ebc61a874b56862a8032d0c04aea51fbcb"
        },
        "downloads": -1,
        "filename": "fast_prime_numbers-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "54e3357a66eb49835fbea75174af8098",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4",
        "size": 5084,
        "upload_time": "2022-09-30T02:44:21",
        "upload_time_iso_8601": "2022-09-30T02:44:21.891600Z",
        "url": "https://files.pythonhosted.org/packages/8e/17/f278613a74f4121f9b8f8518bb6b82c0bc2adff9fa8e47ff2d06eaca6b4d/fast_prime_numbers-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc9fbb7a07a12c268da98265b4f50d168c4ba49a4d9a227433272fa035ae8249",
          "md5": "ce869646371865419648b6acc6cc42ba",
          "sha256": "d0bd2628145a1d4bb19d8c1c577063fbab6e9616b068984764081311ed1be0c4"
        },
        "downloads": -1,
        "filename": "fast-prime-numbers-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ce869646371865419648b6acc6cc42ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4",
        "size": 7549,
        "upload_time": "2022-09-30T02:44:24",
        "upload_time_iso_8601": "2022-09-30T02:44:24.431771Z",
        "url": "https://files.pythonhosted.org/packages/bc/9f/bb7a07a12c268da98265b4f50d168c4ba49a4d9a227433272fa035ae8249/fast-prime-numbers-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e17f278613a74f4121f9b8f8518bb6b82c0bc2adff9fa8e47ff2d06eaca6b4d",
        "md5": "54e3357a66eb49835fbea75174af8098",
        "sha256": "04702845037d441198c48478b85ec8ebc61a874b56862a8032d0c04aea51fbcb"
      },
      "downloads": -1,
      "filename": "fast_prime_numbers-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "54e3357a66eb49835fbea75174af8098",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4",
      "size": 5084,
      "upload_time": "2022-09-30T02:44:21",
      "upload_time_iso_8601": "2022-09-30T02:44:21.891600Z",
      "url": "https://files.pythonhosted.org/packages/8e/17/f278613a74f4121f9b8f8518bb6b82c0bc2adff9fa8e47ff2d06eaca6b4d/fast_prime_numbers-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc9fbb7a07a12c268da98265b4f50d168c4ba49a4d9a227433272fa035ae8249",
        "md5": "ce869646371865419648b6acc6cc42ba",
        "sha256": "d0bd2628145a1d4bb19d8c1c577063fbab6e9616b068984764081311ed1be0c4"
      },
      "downloads": -1,
      "filename": "fast-prime-numbers-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "ce869646371865419648b6acc6cc42ba",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4",
      "size": 7549,
      "upload_time": "2022-09-30T02:44:24",
      "upload_time_iso_8601": "2022-09-30T02:44:24.431771Z",
      "url": "https://files.pythonhosted.org/packages/bc/9f/bb7a07a12c268da98265b4f50d168c4ba49a4d9a227433272fa035ae8249/fast-prime-numbers-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}