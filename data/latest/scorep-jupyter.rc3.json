{
  "info": {
    "author": "",
    "author_email": "Elias Werner <elias.werner@tu-dresden.de>",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "# The Score-P Python Jupyter Kernel\nThis is the Score-P Python Kernel that enables you to execute Python code in Jupyter Notebooks with [Score-P](https://score-p.org/).\n\nThe kernel is based on the [Score-P Python bindings](https://github.com/score-p/scorep_binding_python).\n\n## Installation\n\n**For using the kernel you need a proper Score-P installation.**\n\nTo install the kernel and all dependencies use: \n\n```\npip install scorep-jupyter\npython -m scorep_jupyter.install\n```\nThe kernel will then be installed in your active python environment.\n\n## Usage\n\n### Configuring Score-P in Jupyter\nYou can set up your Score-P environment by executing a cell that starts with the `%%scorep_env` magic command.\n\nYou can set the Score-P Python binding arguments by executing a cell that starts with `%%scorep_python_binding_arguments`.\n\n### Executing Cells \nCells that should be executed with Score-P have to be marked with `%%execute_with_scorep` in the first line. Cells without that command are executed as ordinary Python processes.\n\n### Multi Cell Mode\nYou can also treat multiple cells as one single cell by using the multi cell mode.\n\nTherefore you can mark the cells in the order you wish to execute them. Start the marking process by a cell that starts with the `%%enable_multicellmode` command.\nNow mark your cells by running them. Note that the cells will not be executed at this point but will be marked for later execution.\nYou can stop the marking and execute all the marked cells by running a cell that starts with `%%finalize_multicellmode` command.\nThis will execute all the marked cells orderly with Score-P. Note that the `%%execute_with_scorep` command has no effect in the multi cell mode.\n\nThere is no \"unmark\" command available but you can abort the multicellmode by the `%%abort_multicellmode` command. Start your marking process again if you have marked your cells in the wrong order.\n\nThe `%%enable_multicellmode`, `%%finalize_multicellmode` and `%%abort_multicellmode` commands should be run in an exclusive cell. Additional code in the cell will be ignored.\n\n### Write mode\n\nAnalogous to [%%writefile](https://ipython.readthedocs.io/en/stable/interactive/magics.html#cellmagic-writefile) command in IPykernel, you can convert a set of cells to the Python script which is to be executed with Score-P Python bindings (with settings and environment described in auxillary bash script).\n\nRunning a cell with `%%start_writefile` magic command will begin the write mode, `%%end_writefile` will subsequently end it.  Running other cells in the write mode will add their contents to the Python script or its environment instead of executing them. Specifically:\n\n- Recording a cell containing `%%scorep_env` or `%%scorep_python_binding_arguments` will add the environment variables/Score-P Python bindings to the bash script.\n- Code of a cell which is not to be executed with Score-P (not inside the multicell mode and without `%%execute_with_scorep`) will be framed with `with scorep.instrumenter.disable()` in the Python script to prevent instrumentation.\n- Other cells will be recorded without any changes, except for dropping all magic commands.\n\nNote that `%%abort_multicellmode` will be ignored in the write mode and will not unmark previous cells from instrumentation.\n\nBy default, the Python script will be called `jupyter_to_script.py`. You can also specify the name by providing it as an argument to the start magic command, e.g. `%%start_writefile myscript.py`.\n\n## Presentation of Performance Data\n\nTo inspect the collected performance data, use tools as Vampir (Trace) or Cube (Profile).\n\n## Future Work\n\nThe kernel is still under development. The following is on the agenda:\n \n - add tensorflow backend for serialization to support tf\n \nPRs are welcome.\n\n## General Limitations \n\n* The kernel does not support jupyter magic, since the Score-P Python binding does not support it.\n\nFor the execution of a cell, the kernel starts a new Python process either with Score-P or standalone. The kernel handles persistency between these processes on its own. Therefore it uses dill and additional techniques. However this comes with the following drawbacks:\n\n* when dealing with big data structures, there might be a big runtime overhead at the beginning and the end of a cell. This is due to additional data saving and loading processes for persistency in the background. However this does not affect the actual user code and the Score-P measurements.\n* dill can not handle each kind of object (e.g. file handles, network connections,...). Thus, they can not be shared between cells and your notebook might not work. We are working on this by adding further serialization mechanisms.\n\n\n## Citing\n\nIf you publish some work using the kernel please cite the following paper:\n\n```\nWerner, E., Manjunath, L., Frenzel, J., & Torge, S. (2021, October).\nBridging between Data Science and Performance Analysis: Tracing of Jupyter Notebooks.\nIn The First International Conference on AI-ML-Systems (pp. 1-7).\n```\n\nThe paper is available at: https://dl.acm.org/doi/abs/10.1145/3486001.3486249\n\n## Contact\n\nelias.werner@tu-dresden.de\n\n## Acknowledgment\n\nThis work was supported by the German Federal Ministry of Education and Research (BMBF, SCADS22B) and the Saxon State Ministry for Science, Culture and Tourism (SMWK) by funding the competence center for Big Data and AI \"ScaDS.AI Dresden/Leipzig\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Copyright (c) 2022, Technische Universitaet Dresden, Germany, all rights reserved. Author: Elias Werner  Copyright 2017-2020, Technische Universitaet Dresden, Germany, all rights reserved. Author: Andreas Gocht  portions copyright 2001, Autonomous Zones Industries, Inc., all rights... err...  reserved and offered to the public under the terms of the Python 2.2 license. Author: Zooko O'Whielacronx http://zooko.com/ mailto:zooko@zooko.com  Copyright 2000, Mojam Media, Inc., all rights reserved. Author: Skip Montanaro  Copyright 1999, Bioreason, Inc., all rights reserved. Author: Andrew Dalke  Copyright 1995-1997, Automatrix, Inc., all rights reserved. Author: Skip Montanaro  Copyright 1991-1995, Stichting Mathematisch Centrum, all rights reserved.  Permission to use, copy, modify, and distribute this Python software and its associated documentation for any purpose without fee is hereby granted, provided that the above copyright notice appears in all copies, and that both that copyright notice and this permission notice appear in supporting documentation, and that the name of neither Automatrix, Bioreason, Mojam Media or TU Dresden be used in advertising or publicity pertaining to distribution of the software without specific, written prior permission.  Copyright (c) 2014, Simon Percivall All rights reserved.  Copyright (c) 2008-Present, IPython Development Team Copyright (c) 2001-2007, Fernando Perez <fernando.perez@colorado.edu> Copyright (c) 2001, Janko Hauser <jhauser@zscout.de> Copyright (c) 2001, Nathaniel Gray <n8gray@caltech.edu>  Copyright (c) 2001-2015, IPython Development Team Copyright (c) 2015-, Jupyter Development Team All rights reserved.  Copyright (c) 2004-2016 California Institute of Technology. Copyright (c) 2016-2022 The Uncertainty Quantification Foundation. All rights reserved.  This software is available subject to the conditions and terms laid out below. By downloading and using this software you are agreeing to the following conditions.  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met::  - Redistribution of source code must retain the above copyright notice, this list of conditions and the following disclaimer.  - Redistribution in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentations and/or other materials provided with the distribution.  - Neither the names of the copyright holders nor the names of any of the contributors may be used to endorse or promote products derived from this software without specific prior written permission.  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scorep-jupyter",
    "package_url": "https://pypi.org/project/scorep-jupyter/",
    "platform": null,
    "project_url": "https://pypi.org/project/scorep-jupyter/",
    "project_urls": {
      "homepage": "https://github.com/score-p/scorep_jupyter_kernel_python"
    },
    "release_url": "https://pypi.org/project/scorep-jupyter/0.4/",
    "requires_dist": [
      "ipykernel",
      "jupyter-client",
      "astunparse",
      "scorep (==4.0.2)",
      "dill"
    ],
    "requires_python": ">=3.8",
    "summary": "This is the Score-P Python Kernel that enables you to execute Python code in Jupyter Notebooks with Score-P. The kernel is based on the Score-P Python bindings.",
    "version": "0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16902042,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9282607a3dd81da7d84ad8f28e5158339f5e73442dc32dfc65e2a6625a52314b",
          "md5": "74a459f9557af4b3ada692a13d0f1e18",
          "sha256": "5b5908769a88bd2049486005f209413861da44909ca5c07b9eff96d8883a20e3"
        },
        "downloads": -1,
        "filename": "scorep_jupyter-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "74a459f9557af4b3ada692a13d0f1e18",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 10650,
        "upload_time": "2022-09-14T14:00:03",
        "upload_time_iso_8601": "2022-09-14T14:00:03.306830Z",
        "url": "https://files.pythonhosted.org/packages/92/82/607a3dd81da7d84ad8f28e5158339f5e73442dc32dfc65e2a6625a52314b/scorep_jupyter-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe90b7702945fdbefabb51ae83c48365a5894e982a7e98d71df3254ace290eec",
          "md5": "932b88444dd2f7c20278f8c2eda24c29",
          "sha256": "3cea9f7ca159eeeed866ba1714e2272cf4979d95fd124810a37cef7bc241a699"
        },
        "downloads": -1,
        "filename": "scorep-jupyter-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "932b88444dd2f7c20278f8c2eda24c29",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 11720,
        "upload_time": "2022-09-14T14:00:05",
        "upload_time_iso_8601": "2022-09-14T14:00:05.049926Z",
        "url": "https://files.pythonhosted.org/packages/fe/90/b7702945fdbefabb51ae83c48365a5894e982a7e98d71df3254ace290eec/scorep-jupyter-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38703f7f467502782c30e2d8aa1b9a960ed70b9581d58775c60c09ce275c0999",
          "md5": "129677c829e3829a729562e51bf6a358",
          "sha256": "15b9b8610e5212117a11797b311b674304d91d8211d899cefeebac9618340a10"
        },
        "downloads": -1,
        "filename": "scorep_jupyter-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "129677c829e3829a729562e51bf6a358",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 10727,
        "upload_time": "2022-11-09T15:45:09",
        "upload_time_iso_8601": "2022-11-09T15:45:09.012039Z",
        "url": "https://files.pythonhosted.org/packages/38/70/3f7f467502782c30e2d8aa1b9a960ed70b9581d58775c60c09ce275c0999/scorep_jupyter-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef3920fc827adbb7f0e5bfc2ff85ca5c706939ea94b424e7302dba4b95cf7631",
          "md5": "fd8afe5bb886d22bd2b43734dc5277e0",
          "sha256": "07f852c22345cba2faeefc6a8c332bd7fd2c7a3664350915cab8840d651f0430"
        },
        "downloads": -1,
        "filename": "scorep-jupyter-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fd8afe5bb886d22bd2b43734dc5277e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 11738,
        "upload_time": "2022-11-09T15:45:11",
        "upload_time_iso_8601": "2022-11-09T15:45:11.132493Z",
        "url": "https://files.pythonhosted.org/packages/ef/39/20fc827adbb7f0e5bfc2ff85ca5c706939ea94b424e7302dba4b95cf7631/scorep-jupyter-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "170965ec8ff66a33c4a689c3217214320c95cd30531cad0fc1d070ddcbc26075",
          "md5": "48b70cfc05ea9f4d74d43fdc2bcb6b40",
          "sha256": "dc57f746337b71ee4fb6d151a2c1d96c53164e08ebe08a684b7800d99ce3c9fb"
        },
        "downloads": -1,
        "filename": "scorep_jupyter-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "48b70cfc05ea9f4d74d43fdc2bcb6b40",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 14081,
        "upload_time": "2023-02-17T12:01:57",
        "upload_time_iso_8601": "2023-02-17T12:01:57.002443Z",
        "url": "https://files.pythonhosted.org/packages/17/09/65ec8ff66a33c4a689c3217214320c95cd30531cad0fc1d070ddcbc26075/scorep_jupyter-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b7fe0b1c9743e8ec4cb4cd14b1979d037aedc3a78307c1bfef970fcf50c8c57",
          "md5": "9e86e33383d7714bb8addb06497f4550",
          "sha256": "5c4928fc89771adaa3c14c9219b006acc81e8ef54ceef3a746cebdc187053b21"
        },
        "downloads": -1,
        "filename": "scorep-jupyter-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9e86e33383d7714bb8addb06497f4550",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 15446,
        "upload_time": "2023-02-17T12:01:59",
        "upload_time_iso_8601": "2023-02-17T12:01:59.295460Z",
        "url": "https://files.pythonhosted.org/packages/8b/7f/e0b1c9743e8ec4cb4cd14b1979d037aedc3a78307c1bfef970fcf50c8c57/scorep-jupyter-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "170965ec8ff66a33c4a689c3217214320c95cd30531cad0fc1d070ddcbc26075",
        "md5": "48b70cfc05ea9f4d74d43fdc2bcb6b40",
        "sha256": "dc57f746337b71ee4fb6d151a2c1d96c53164e08ebe08a684b7800d99ce3c9fb"
      },
      "downloads": -1,
      "filename": "scorep_jupyter-0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "48b70cfc05ea9f4d74d43fdc2bcb6b40",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 14081,
      "upload_time": "2023-02-17T12:01:57",
      "upload_time_iso_8601": "2023-02-17T12:01:57.002443Z",
      "url": "https://files.pythonhosted.org/packages/17/09/65ec8ff66a33c4a689c3217214320c95cd30531cad0fc1d070ddcbc26075/scorep_jupyter-0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8b7fe0b1c9743e8ec4cb4cd14b1979d037aedc3a78307c1bfef970fcf50c8c57",
        "md5": "9e86e33383d7714bb8addb06497f4550",
        "sha256": "5c4928fc89771adaa3c14c9219b006acc81e8ef54ceef3a746cebdc187053b21"
      },
      "downloads": -1,
      "filename": "scorep-jupyter-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "9e86e33383d7714bb8addb06497f4550",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 15446,
      "upload_time": "2023-02-17T12:01:59",
      "upload_time_iso_8601": "2023-02-17T12:01:59.295460Z",
      "url": "https://files.pythonhosted.org/packages/8b/7f/e0b1c9743e8ec4cb4cd14b1979d037aedc3a78307c1bfef970fcf50c8c57/scorep-jupyter-0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}