{
  "info": {
    "author": "Luca Angioloni",
    "author_email": "lucaangioloni@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Other Audience",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Utilities"
    ],
    "description": "# Get Files List\n\nPython package that provides a utility function to recursively get files that match a pattern.\n\n## Installation\n\nInstall using pip:\n\n```bash\npip install get_files_list\n```\n\n## Usage\n\nExample of this package usage in a folder with the following structure:\n\n```txt\n ├──      LICENSE\n ├──      README.md\n ├──      deploy.sh\n └──      get_files_list/\n │  ├────      __init__.py\n │  └────      get_dir_content.py\n ├──      requirements.in\n ├──      requirements.txt\n └──      setup.py\n```\n\nThe following code:\n\n```python\nfrom get_files_list import get_dir_content\n\n# Print every file\nprint(\"Print every file\\n\")\nfor file in get_dir_content(\"./\"):\n    print(file)\n\n# Print everyPython file\nprint(\"\\n\\nPrint every Python file\\n\")\nfor file in get_dir_content(\"./\", pattern=\"*.py\"):\n    print(file)\n\n# Print every Python file without the prepended folder name\nprint(\"\\n\\nPrint every Python file without the prepended folder name\\n\")\nfor file in get_dir_content(\"./\", prepend_folder_name=False, pattern=\"*.py\"):\n    print(file)\n\n# Print every file without recursion\nprint(\"\\n\\nPrint every file without recursion\\n\")\nfor file in get_dir_content(\"./\", recursive=False):\n    print(file)\n\n# Print every file that is not a Python file\nprint(\"\\n\\nPrint every file that is not a Python file\\n\")\nfor file in get_dir_content(\"./\", exclude_pattern=\"*.py\"):\n    print(file)\n```\n\nWould output:\n\n```txt\nPrint every file\n\n./LICENSE\n./requirements.txt\n./get_files_list/get_dir_content.py\n./get_files_list/__init__.py\n./README.md\n./setup.py\n./deploy.sh\n./requirements.in\n\n\nPrint every python file\n\n./get_files_list/get_dir_content.py\n./get_files_list/__init__.py\n./setup.py\n\n\nPrint every python file without the prepended folder name\n\nget_files_list/get_dir_content.py\nget_files_list/__init__.py\nsetup.py\n\n\nPrint every file without recursion\n\n./LICENSE\n./requirements.txt\n./README.md\n./setup.py\n./deploy.sh\n./requirements.in\n\n\nPrint every file that is not a Python file\n\n./LICENSE\n./requirements.txt\n./README.md\n./deploy.sh\n./requirements.in\n```\n\n### Generator\n\n`get_dir_content` is a Python *generator* so the following code would not work:\n\n```python\nfrom get_files_list import get_dir_content\n\nnum_py_files = len(get_dir_content(\"./\", pattern=\"*.py\"))\n# TypeError: object of type 'generator' has no len()\n\n# You have to explicitely generate a list\nnum_py_files = len(list(get_dir_content(\"./\", pattern=\"*.py\")))\n# This works\n```\n\nThis is also valid if you want to order, shuffle or slice the list of files.\n\n## Inspiration\n\nThis code is inspired by this StackOverflow [Question/Answer](https://stackoverflow.com/questions/3207219/how-do-i-list-all-files-of-a-directory).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/LucaAngioloni/get_files_list",
    "keywords": "files,get_files_list,recursive,pattern,match,file list",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "get-files-list",
    "package_url": "https://pypi.org/project/get-files-list/",
    "platform": null,
    "project_url": "https://pypi.org/project/get-files-list/",
    "project_urls": {
      "Homepage": "https://github.com/LucaAngioloni/get_files_list"
    },
    "release_url": "https://pypi.org/project/get-files-list/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python package that provides a utility function to recursively get files that match a pattern",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14531780,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19f94e62394dbfff791226ed1f49958fd9299643f8e13530c69207dbfb1ca279",
          "md5": "bfb3463a551b552fc2bba0a6b603a6ad",
          "sha256": "5213927a80eaf342df000b23c8c23e46f573f2d1639f5f96717e37e65f7475e7"
        },
        "downloads": -1,
        "filename": "get_files_list-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bfb3463a551b552fc2bba0a6b603a6ad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4177,
        "upload_time": "2022-07-24T12:17:03",
        "upload_time_iso_8601": "2022-07-24T12:17:03.458077Z",
        "url": "https://files.pythonhosted.org/packages/19/f9/4e62394dbfff791226ed1f49958fd9299643f8e13530c69207dbfb1ca279/get_files_list-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ac6cd9adec7fb4285cc0e07a27d3d02fb6c1a4e5c8a55d6bf221c4f91c8b4cf",
          "md5": "917db85c6c98ae00fa3ad16378387ca5",
          "sha256": "4e5b5442647555ca9077281fc2404eae85983dfa478877da9358dcb3dc2ab288"
        },
        "downloads": -1,
        "filename": "get_files_list-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "917db85c6c98ae00fa3ad16378387ca5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3898,
        "upload_time": "2022-07-24T12:17:04",
        "upload_time_iso_8601": "2022-07-24T12:17:04.673028Z",
        "url": "https://files.pythonhosted.org/packages/5a/c6/cd9adec7fb4285cc0e07a27d3d02fb6c1a4e5c8a55d6bf221c4f91c8b4cf/get_files_list-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "774233daa956ae4a00582e2f67fe75f95230a73405da4ceda8ca0d5cdc0b4f1a",
          "md5": "77e28f350555c67757510da2e2afbd03",
          "sha256": "f3d2ff881b02c2f658e3e2f96eb0f92ceccb3e560784d36b42ffc303684e3efa"
        },
        "downloads": -1,
        "filename": "get_files_list-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "77e28f350555c67757510da2e2afbd03",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4174,
        "upload_time": "2022-07-24T12:27:00",
        "upload_time_iso_8601": "2022-07-24T12:27:00.408303Z",
        "url": "https://files.pythonhosted.org/packages/77/42/33daa956ae4a00582e2f67fe75f95230a73405da4ceda8ca0d5cdc0b4f1a/get_files_list-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a793e4e86e820f3b8dc1d024ac1a28fced3433c0cb45cd6e910b25f288d114d",
          "md5": "9d968b321ec51f1bf66659f8e0facda8",
          "sha256": "26f319bf9d4910be9e95a1f88b45891943ee9928e4f2929614df7c104435d0dd"
        },
        "downloads": -1,
        "filename": "get_files_list-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9d968b321ec51f1bf66659f8e0facda8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3858,
        "upload_time": "2022-07-24T12:27:01",
        "upload_time_iso_8601": "2022-07-24T12:27:01.744147Z",
        "url": "https://files.pythonhosted.org/packages/1a/79/3e4e86e820f3b8dc1d024ac1a28fced3433c0cb45cd6e910b25f288d114d/get_files_list-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "774233daa956ae4a00582e2f67fe75f95230a73405da4ceda8ca0d5cdc0b4f1a",
        "md5": "77e28f350555c67757510da2e2afbd03",
        "sha256": "f3d2ff881b02c2f658e3e2f96eb0f92ceccb3e560784d36b42ffc303684e3efa"
      },
      "downloads": -1,
      "filename": "get_files_list-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "77e28f350555c67757510da2e2afbd03",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4174,
      "upload_time": "2022-07-24T12:27:00",
      "upload_time_iso_8601": "2022-07-24T12:27:00.408303Z",
      "url": "https://files.pythonhosted.org/packages/77/42/33daa956ae4a00582e2f67fe75f95230a73405da4ceda8ca0d5cdc0b4f1a/get_files_list-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1a793e4e86e820f3b8dc1d024ac1a28fced3433c0cb45cd6e910b25f288d114d",
        "md5": "9d968b321ec51f1bf66659f8e0facda8",
        "sha256": "26f319bf9d4910be9e95a1f88b45891943ee9928e4f2929614df7c104435d0dd"
      },
      "downloads": -1,
      "filename": "get_files_list-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9d968b321ec51f1bf66659f8e0facda8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3858,
      "upload_time": "2022-07-24T12:27:01",
      "upload_time_iso_8601": "2022-07-24T12:27:01.744147Z",
      "url": "https://files.pythonhosted.org/packages/1a/79/3e4e86e820f3b8dc1d024ac1a28fced3433c0cb45cd6e910b25f288d114d/get_files_list-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}