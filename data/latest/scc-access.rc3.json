{
  "info": {
    "author": "Ioannis Binietoglou",
    "author_email": "ioannis@inoe.ro",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Atmospheric Science"
    ],
    "description": "Overview\n========\n\nThis package provides a tool for interacting with the\nSingle Calculus Chain through the command line. Specifically, with the script you can:\n\n* Upload a file to the SCC for processing\n* Download the processed files and graphs\n* Delete an existing measurement from the SCC (with appropriate privileges)\n\n\nThe script provides limited feedback when a file upload fails. Before using\nthe script, you will need to upload some files manually and be confident that \nyour SCC file format and processing settings are correct.\n\nPlease note that this is not part of the \"official\" SCC tools.\n\nIn principle, the main functions are implemented in a class (SCC) that you can also import\nand use in your custom scripts. However, error handling has to be improved in this case. If you are interested\nin such use, please contact me at ioannis@inoe.ro.\n\nAny suggestions for improvements and new features are more than welcome.\n\nInstallation\n------------\n\nThe easiest way to install this module is from the python package index using pip::\n\n    pip install scc-access\n\nAlternatively, you can install the latest version directly from the repository::\n\n    pip install hg+https://repositories.imaa.cnr.it/public/scc_access#egg=scc-access\n\nor, if you don't have mercurial on your system::\n\n   pip install https://repositories.imaa.cnr.it/public/scc_access/archive/tip.zip\n\nYou can also use the script by cloning this mercurial repository.\n\nSettings\n--------\nThe required user-defined settings need to be specified in a .yaml file.\n\nThe following parameters should be specified::\n\n   basic_credentials: ['username', 'password']     # The HTTP user name and password that is needed to access the SCC site.\n   website_credentials: ['username', 'password']   # The user name and password that is needed to log in to the SCC site.\n   output_dir: /path/to/files/scc_output/          # The directory to download the files\n   base_url: https://scc.imaa.cnr.it/              # SCC base URL. Normally you shouldn't need to change that.\n\n\nThe repository includes a `settings_sample.yaml` file that you can use as a starting point. Rename the file, e.g. to\n`settings.yaml` and input the required parameters. If you don't want to specify the file path every time\nyour run the `scc_access` script, you can name the file `.scc_access.yaml` and place it  in your home directory.\n\nPlease note that it's not a good idea to store your stations management credentials in the settings\nfile. The standard user has \"Station Management\" privileges and, if the credentials\nare stolen, someone could change/delete the stations settings from the SCC database.\nFor this, it is better to use a user account with minimum access settings, i.e. that\ncan only upload files and measurements.\n\n\nUsage\n-----\n\nYou can upload a file specifying the username and the system id::\n\n   scc_access upload-file 20110101po01.nc 125\n\nIf you want to wait for the processing to finish and download the resulting files\nyou can use add the `-p` or `--process` flag::\n\n   scc_access upload-file 20110101po01.nc 125 -p\n\nThe two command above assume that you have placed your setting file in the default location. You can specify a\ncustom location using the -c flag::\n\n   scc_access -c ./path/to/settings.yaml upload-file 20110101po01.nc 125\n\nBy default, the SCC will reject an uploaded file if the specified measurement id already exists on the server. You\ncan instruct the script to delete any existing measurement before uploading using the `--force_upload` flag::\n\n   scc_access upload-file 20110101po01.nc 125 -p --force_upload\n\nWhen uploading a measurement you can require that the processing is delayed by a specified number of hours. This\ncan be used to assure that your files are processed using model input data, that typically have a delay of more than\n24 hours. You can specify the delay (in hours) using the --delay option::\n\n   scc_access upload-file 20110101po01.nc 125 --delay 48\n\n.. note::\n   When specifying a delay, the script will not wait to download the output files.\n\nIf you want to delete an existing measurement id from the database use the `delete`\ncommand and the measurement id::\n\n    scc_access delete 20110101po01\n\nYou can list available measurements with the `list` command::\n\n    scc_access list\n\n.. note::\n   The `list` command needs to be updated. Cross-check the results before using them.\n\nFor more information on the syntax type::\n\n    scc_access -h\n\nThis will produce the following help text::\n\n    usage: scc_access [-h] [-d] [-s] [-c CONFIG]\n                      {delete,rerun-all,rerun-elpp,upload-file,list,download} ...\n\n    positional arguments:\n      {delete,rerun-all,rerun-elpp,upload-file,list,download}\n        delete              Deletes a measurement.\n        rerun-all           Rerun all processing steps for the provided\n                            measurement IDs.\n        rerun-elpp          Rerun low-resolution processing steps for the provided\n                            measurement ID.\n        upload-file         Submit a file and, optionally, download the output\n                            products.\n        list                List measurements registered on the SCC.\n        download            Download selected measurements.\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -d, --debug           Print debugging information.\n      -s, --silent          Show only warning and error messages.\n      -c CONFIG, --config CONFIG\n                            Path to the config file.\n\nYou can find out more information about each command e.g. like this::\n\n   scc_access upload-file -h\n\nIn this case, the help text will give more details about the `upload-file` command::\n\n    usage: scc_access upload-file [-h] [-p] [--force_upload]\n                                  [--radiosounding RADIOSOUNDING]\n                                  [--overlap OVERLAP] [--lidarratio LIDARRATIO]\n                                  filename system\n\n    positional arguments:\n      filename              Measurement file name or path.\n      system                Processing system id.\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --delay DELAY         Delay processing by the specified number of hours (0 to 96).\n      -p, --process         Wait for the processing results.\n      --force_upload        If measurement ID exists on SCC, delete before\n                            uploading.\n      --radiosounding RADIOSOUNDING\n                            Radiosounding file name or path\n      --overlap OVERLAP     Overlap file name or path\n      --lidarratio LIDARRATIO\n                            Lidar ratio file name or path\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://repositories.imaa.cnr.it/public/scc_access/",
    "keywords": "lidar aerosol SCC",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scc-access",
    "package_url": "https://pypi.org/project/scc-access/",
    "platform": "",
    "project_url": "https://pypi.org/project/scc-access/",
    "project_urls": {
      "Homepage": "https://repositories.imaa.cnr.it/public/scc_access/"
    },
    "release_url": "https://pypi.org/project/scc-access/0.11.0/",
    "requires_dist": [
      "requests",
      "pyyaml",
      "netCDF4"
    ],
    "requires_python": "",
    "summary": "Package for interacting with EARLINET's Single Calculus Chain through the command line.",
    "version": "0.11.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13946341,
  "releases": {
    "0.10.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69941f54ee3342ce87cbde1331cdb61dd9fdd85d5e789037f4bc29414170cde9",
          "md5": "c004e39e04f46cec7547c87baf4491e5",
          "sha256": "a7aaba97cb63c7561b5e8ec743b7926b9894cff28f904e86ddc0e27e9dc00199"
        },
        "downloads": -1,
        "filename": "scc_access-0.10.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c004e39e04f46cec7547c87baf4491e5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14295,
        "upload_time": "2021-05-07T05:41:40",
        "upload_time_iso_8601": "2021-05-07T05:41:40.867956Z",
        "url": "https://files.pythonhosted.org/packages/69/94/1f54ee3342ce87cbde1331cdb61dd9fdd85d5e789037f4bc29414170cde9/scc_access-0.10.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9e883ef45fdb39b4cb7bf55c26bca68c5af846a9b57ebb2a1a886204c460fb8",
          "md5": "9a289fe0bf265491ecddebecb4be7db8",
          "sha256": "4f284f72d2166089a14c0e9c32625d91a19c7ae4e63d635e02fc1699651a91b5"
        },
        "downloads": -1,
        "filename": "scc_access-0.10.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9a289fe0bf265491ecddebecb4be7db8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16941,
        "upload_time": "2021-05-07T05:41:43",
        "upload_time_iso_8601": "2021-05-07T05:41:43.871764Z",
        "url": "https://files.pythonhosted.org/packages/b9/e8/83ef45fdb39b4cb7bf55c26bca68c5af846a9b57ebb2a1a886204c460fb8/scc_access-0.10.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0365e3dac924789ace588ca97a67e4cd25f793428b17052605e38a840e6a877",
          "md5": "8077101cf9c6bb2de029d67cdeb504ab",
          "sha256": "019285489aaf5794f434a52f0a15fdfe254925d4bfe09f74f31620657ce4141f"
        },
        "downloads": -1,
        "filename": "scc_access-0.10.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8077101cf9c6bb2de029d67cdeb504ab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14337,
        "upload_time": "2021-05-07T05:58:51",
        "upload_time_iso_8601": "2021-05-07T05:58:51.502783Z",
        "url": "https://files.pythonhosted.org/packages/b0/36/5e3dac924789ace588ca97a67e4cd25f793428b17052605e38a840e6a877/scc_access-0.10.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c1c0d46ee99e08d0dc41754f4f7ea31ed8cd8b1a780b2bd59e94740386eb48d",
          "md5": "33da0af1f37681f373d4326cf5079f05",
          "sha256": "778a111635ba35374f62bef7e3001c4986ab3fa784cfdfcdd823fd550ff80fa3"
        },
        "downloads": -1,
        "filename": "scc_access-0.10.4.tar.gz",
        "has_sig": false,
        "md5_digest": "33da0af1f37681f373d4326cf5079f05",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17041,
        "upload_time": "2021-05-07T05:58:54",
        "upload_time_iso_8601": "2021-05-07T05:58:54.390778Z",
        "url": "https://files.pythonhosted.org/packages/1c/1c/0d46ee99e08d0dc41754f4f7ea31ed8cd8b1a780b2bd59e94740386eb48d/scc_access-0.10.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12267983efc57a83d9832d026ddd2962b3aa4bec4aeb99b42238aff3e289d4a4",
          "md5": "f82714099cd4a17563e6905cbd37a966",
          "sha256": "3dc90420c401c7334d934405099bdf4993d91e572366df6f0b88f3bfdffd622a"
        },
        "downloads": -1,
        "filename": "scc_access-0.11.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f82714099cd4a17563e6905cbd37a966",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13674,
        "upload_time": "2021-05-21T13:36:03",
        "upload_time_iso_8601": "2021-05-21T13:36:03.830646Z",
        "url": "https://files.pythonhosted.org/packages/12/26/7983efc57a83d9832d026ddd2962b3aa4bec4aeb99b42238aff3e289d4a4/scc_access-0.11.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08d3869b388bff95e2a752215a4e0c3619359c59ce30fd487b520ba22d8a948c",
          "md5": "176f2603481bd16f06e928699b71a373",
          "sha256": "a0b63e87863d31bddc1c86ada03566db8354398bea3551c25d8b9dbda604eda8"
        },
        "downloads": -1,
        "filename": "scc_access-0.11.0.tar.gz",
        "has_sig": false,
        "md5_digest": "176f2603481bd16f06e928699b71a373",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16335,
        "upload_time": "2021-05-21T13:37:09",
        "upload_time_iso_8601": "2021-05-21T13:37:09.759353Z",
        "url": "https://files.pythonhosted.org/packages/08/d3/869b388bff95e2a752215a4e0c3619359c59ce30fd487b520ba22d8a948c/scc_access-0.11.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "12267983efc57a83d9832d026ddd2962b3aa4bec4aeb99b42238aff3e289d4a4",
        "md5": "f82714099cd4a17563e6905cbd37a966",
        "sha256": "3dc90420c401c7334d934405099bdf4993d91e572366df6f0b88f3bfdffd622a"
      },
      "downloads": -1,
      "filename": "scc_access-0.11.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f82714099cd4a17563e6905cbd37a966",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13674,
      "upload_time": "2021-05-21T13:36:03",
      "upload_time_iso_8601": "2021-05-21T13:36:03.830646Z",
      "url": "https://files.pythonhosted.org/packages/12/26/7983efc57a83d9832d026ddd2962b3aa4bec4aeb99b42238aff3e289d4a4/scc_access-0.11.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "08d3869b388bff95e2a752215a4e0c3619359c59ce30fd487b520ba22d8a948c",
        "md5": "176f2603481bd16f06e928699b71a373",
        "sha256": "a0b63e87863d31bddc1c86ada03566db8354398bea3551c25d8b9dbda604eda8"
      },
      "downloads": -1,
      "filename": "scc_access-0.11.0.tar.gz",
      "has_sig": false,
      "md5_digest": "176f2603481bd16f06e928699b71a373",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16335,
      "upload_time": "2021-05-21T13:37:09",
      "upload_time_iso_8601": "2021-05-21T13:37:09.759353Z",
      "url": "https://files.pythonhosted.org/packages/08/d3/869b388bff95e2a752215a4e0c3619359c59ce30fd487b520ba22d8a948c/scc_access-0.11.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}