{
  "info": {
    "author": "Joseph Wortmann",
    "author_email": "jwortmann@quinovas.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# sequential-executor\n\nA [concurrent.futures.Executor](https://docs.python.org/3/library/concurrent.futures.html#executor-objects) implementation that performs sequential execution.\n\nWhile this micro-library may seem a little oxymoronic (Executors are, after all,\nmeant to execute calls asynchronously), it does have a fairly well-defined use case.\n\n## Use case\nA Python package that performs multiple operations via callback(s) defined by implementors\nusing that package. The package allows the implementor to define the concurrent execution environment\nby passing in a `concurrent.futures.Executor` object.\n\nThis allows the implementor to tailor the execution environment based upon the work that their callback will be performing. For example, if they are making web calls (e.g. - IO bound) they could pass in a `ThreadPoolExecutor`, but if they are doing numpy analysis of large datasets (e.g. - CPU bound), they could pass in a `ProcessPoolExecutor`. But what if the implementor must enforce sequential execution, such as for ordered message processing?\n\nThe `SequentialExecutor` provided by this package allows for the implementor using the hypothetical Python package to give that package an `Executor`, but forces the execution environment into seqential ordering.\n\n## Installation\n```bash\npip install sequential-executor\n```\n\n## SequentialExecutor Example\n```python\nimport concurrent.futures\nimport urllib.request\n\nimport sequential_executor\n\nURLS = ['http://www.foxnews.com/',\n        'http://www.cnn.com/',\n        'http://europe.wsj.com/',\n        'http://www.bbc.co.uk/',\n        'http://some-made-up-domain.com/']\n\n# Retrieve a single page and report the URL and contents\ndef load_url(url, timeout):\n    print('loading %r' % url)\n    with urllib.request.urlopen(url, timeout=timeout) as conn:\n        return conn.read()\n\n# We can use in a with statement just like other Executors\nwith sequential_executor.SequentialExecutor() as executor:\n    # Start the load operations and mark each future with its URL\n    future_to_url = {executor.submit(load_url, url, 60): url for url in URLS}\n    for future in concurrent.futures.as_completed(future_to_url):\n        url = future_to_url[future]\n        try:\n            data = future.result()\n        except Exception as exc:\n            print('%r generated an exception: %s' % (url, exc))\n        else:\n            print('%r page is %d bytes' % (url, len(data)))\n```\n\n> NOTE - Although this looks like it is submitting multiple jobs and then waiting\non each job to complete, the `concurrent.futures.Future` objects returned by the\n`SequentialExecutor` *will be fully complete upon the return from the* `submit` *call!*\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/QuiNovas/sequential-executor",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sequential-executor",
    "package_url": "https://pypi.org/project/sequential-executor/",
    "platform": null,
    "project_url": "https://pypi.org/project/sequential-executor/",
    "project_urls": {
      "Homepage": "https://github.com/QuiNovas/sequential-executor"
    },
    "release_url": "https://pypi.org/project/sequential-executor/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "A concurrent.futures.Executor implementation that performs sequential execution",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13149491,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e2f015b7e3e5274027bb740ed0dcdccb0c35076c344188cd10dd341da46b169",
          "md5": "451030ac585cb1d2a056ba227e334101",
          "sha256": "56054125c357c6915137e2cde6ec5c1fba102922ad9433b422cdcc0b1f01234a"
        },
        "downloads": -1,
        "filename": "sequential_executor-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "451030ac585cb1d2a056ba227e334101",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 7055,
        "upload_time": "2022-03-11T13:11:19",
        "upload_time_iso_8601": "2022-03-11T13:11:19.555894Z",
        "url": "https://files.pythonhosted.org/packages/4e/2f/015b7e3e5274027bb740ed0dcdccb0c35076c344188cd10dd341da46b169/sequential_executor-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83f26f514bde07e85dbf473954e78a0e6d23cb1dee2cb19e0f6dcb675c1e63be",
          "md5": "331bd659a21167fa6fd5f710c1d2bb37",
          "sha256": "703b7af8abc595d69a6371345ad4d8092dafba1b30d544c05b27735302d1db18"
        },
        "downloads": -1,
        "filename": "sequential-executor-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "331bd659a21167fa6fd5f710c1d2bb37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 6671,
        "upload_time": "2022-03-11T13:11:20",
        "upload_time_iso_8601": "2022-03-11T13:11:20.690976Z",
        "url": "https://files.pythonhosted.org/packages/83/f2/6f514bde07e85dbf473954e78a0e6d23cb1dee2cb19e0f6dcb675c1e63be/sequential-executor-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4e2f015b7e3e5274027bb740ed0dcdccb0c35076c344188cd10dd341da46b169",
        "md5": "451030ac585cb1d2a056ba227e334101",
        "sha256": "56054125c357c6915137e2cde6ec5c1fba102922ad9433b422cdcc0b1f01234a"
      },
      "downloads": -1,
      "filename": "sequential_executor-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "451030ac585cb1d2a056ba227e334101",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 7055,
      "upload_time": "2022-03-11T13:11:19",
      "upload_time_iso_8601": "2022-03-11T13:11:19.555894Z",
      "url": "https://files.pythonhosted.org/packages/4e/2f/015b7e3e5274027bb740ed0dcdccb0c35076c344188cd10dd341da46b169/sequential_executor-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "83f26f514bde07e85dbf473954e78a0e6d23cb1dee2cb19e0f6dcb675c1e63be",
        "md5": "331bd659a21167fa6fd5f710c1d2bb37",
        "sha256": "703b7af8abc595d69a6371345ad4d8092dafba1b30d544c05b27735302d1db18"
      },
      "downloads": -1,
      "filename": "sequential-executor-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "331bd659a21167fa6fd5f710c1d2bb37",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 6671,
      "upload_time": "2022-03-11T13:11:20",
      "upload_time_iso_8601": "2022-03-11T13:11:20.690976Z",
      "url": "https://files.pythonhosted.org/packages/83/f2/6f514bde07e85dbf473954e78a0e6d23cb1dee2cb19e0f6dcb675c1e63be/sequential-executor-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}