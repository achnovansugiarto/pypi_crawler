{
  "info": {
    "author": "Anime no Sekai",
    "author_email": "niichannomail@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# `bordercrop`\n\n> A black borders cropping module\n\n***Crop the black borders from any image in a single line of code!***\n\n[![PyPI version](https://badge.fury.io/py/bordercrop.svg)](https://pypi.org/project/bordercrop/)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/bordercrop)](https://pypistats.org/packages/bordercrop)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/bordercrop)](https://pypi.org/project/bordercrop/)\n[![PyPI - Status](https://img.shields.io/pypi/status/bordercrop)](https://pypi.org/project/bordercrop/)\n[![GitHub - License](https://img.shields.io/github/license/Animenosekai/bordercrop)](https://github.com/Animenosekai/bordercrop/blob/master/LICENSE)\n[![GitHub top language](https://img.shields.io/github/languages/top/Animenosekai/bordercrop)](https://github.com/Animenosekai/bordercrop)\n[![CodeQL Checks Badge](https://github.com/Animenosekai/bordercrop/workflows/CodeQL%20Python%20Analysis/badge.svg)](https://github.com/Animenosekai/bordercrop/actions?query=workflow%3ACodeQL)\n[![Pytest](https://github.com/Animenosekai/bordercrop/actions/workflows/pytest.yml/badge.svg)](https://github.com/Animenosekai/bordercrop/actions/workflows/pytest.yml)\n![Code Size](https://img.shields.io/github/languages/code-size/Animenosekai/bordercrop)\n![Repo Size](https://img.shields.io/github/repo-size/Animenosekai/bordercrop)\n![Issues](https://img.shields.io/github/issues/Animenosekai/bordercrop)\n\n## Getting Started\n\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes. See deployment for notes on how to deploy the project on a live system.\n\n### Prerequisites\n\nYou will need Python 3 to use this module\n\n```bash\n# vermin output\nMinimum required versions: 3.2\nIncompatible versions:     2\n```\n\nAccording to Vermin (`--backport typing`), Python 3.2 is needed for the backport of typing but some may say that it is available for python versions higher than 3.0\n\nAlways check if your Python version works with `bordercrop` before using it in production\n\n## Installing\n\n### Option 1: From PyPI\n\n```bash\npip install bordercrop\n```\n\n### Option 2: From Git\n\n```bash\npip install https://github.com/Animenosekai/bordercrop\n```\n\nYou can check if you successfully installed it by printing out its version:\n\n```bash\n$ python -c \"import bordercrop; print(bordercrop.__version__)\"\n# output:\nbordercrop v1.0.0\n```\n\n<!--If a CLI version is available-->\n\nor just:\n\n```bash\n$ bordercrop --version\n# output:\nbordercrop v1.0.0\n```\n\n## Usage\n\nYou can use bordercrop in Python by importing it in your script:\n\n```python\nimport bordercrop\n\ncropped_image = bordercrop.crop(\"https://i.imgur.com/lhQe6Bq.jpg\")\ncropped_image.show() # show the cropped image\n```\n\nLeaving everything with the default values, you may get images with no crop or with no size (entirely cropped).\n\nI recommend testing and tweaking the MINIMUM_THRESHOLD_HITTING and MINIMUM_ROWS values according to your picture (a big picture needs more minimum rows and more pixels to hit before counting a row as dark).\n\n### CLI usage\n\nYou can use bordercrop in other apps by accessing it through the CLI version:\n\n```bash\n$ bordercrop --image \"https://i.ytimg.com/vi/e_53PHZwQH4/hqdefault.jpg\" --output \"cropped.jpg\"\noutput\n```\n\n### As a Python module\n\nThe given image can be a filepath (str, bytes or Path), an URL (which will be downloaded) or a PIL.Image.Image instance\n\n#### crop()\n\nAutocrops the black borders from the given image\n\nArgs:  \n    `image`: the given image, it can be a filepath (str, bytes or Path), an URL (which will be downloaded), a BytesIO or a PIL.Image.Image instance  \n    `THRESHOLD`: the black threshold (0 is black while 225 is white)  \n    `MINIMUM_THRESHOLD_HITTING`: the number of pixels in a row which needs to hit the threshold to count the row as dark (ex: if 5 is given and there is only 4 black pixels in the row, the row won't be counted as black)  \n    `MINIMUM_ROWS`: the minimum row requirement to count a border (ex: if set to 3, 3 rows need to consecutively be black to count it as a border)\n\nReturns:  \n    A `PIL.Image.Image` instance containing the cropped image\n\n#### borders()\n\nGives back the bounding box of the image without the black borders\n\nArgs:  \n    `image`: the given image, it can be a filepath (str, bytes or Path), an URL (which will be downloaded), a BytesIO or a PIL.Image.Image instance  \n    `THRESHOLD`: the black threshold (0 is black while 225 is white)  \n    `MINIMUM_THRESHOLD_HITTING`: the number of pixels in a row which needs to hit the threshold to count the row as dark (ex: if 5 is given and there is only 4 black pixels in the row, the row won't be counted as black)  \n    `MINIMUM_ROWS`: the minimum row requirement to count a border (ex: if set to 3, 3 rows need to consecutively be black to count it as a border)  \n\nReturns:  \n    A tuple containing the coordinates (LEFT, TOP, RIGHT, BOTTOM)\n\n#### get_image()\n\nGives back the given image as a PIL.Image.Image instance\n\nMostly used internally, it can be useful sometimes.\n\nArgs:  \n    `image`: the given image, it can be a filepath (str, bytes or Path), an URL (which will be downloaded), a BytesIO or a PIL.Image.Image instance\n\nReturns:  \n    A PIL.Image.Image instance containing the given image\n\n### Exceptions\n\nAll of the excpetions inherit from the `BordercropException`\n\nA `WrongType` exception can be raised if the wrong type of image is given\n\n## Deployment\n\nThis module is currently in development and might contain bugs.\n\nFeel free to use it in production if you feel like it is suitable for your production even if you may encounter issues.\n\n## Built With\n\n- [Pillow](https://github.com/python-pillow/Pillow) - To manipulate images\n\n## Authors\n\n- **Anime no Sekai** - *Initial work* - [Animenosekai](https://github.com/Animenosekai)\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for more details\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Animenosekai/bordercrop/archive/v1.0.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Animenosekai/bordercrop",
    "keywords": "python,Anime no Sekai,animenosekai,bordercrop,cropping,image,image-processing,image-crop",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bordercrop",
    "package_url": "https://pypi.org/project/bordercrop/",
    "platform": "",
    "project_url": "https://pypi.org/project/bordercrop/",
    "project_urls": {
      "Download": "https://github.com/Animenosekai/bordercrop/archive/v1.0.0.tar.gz",
      "Homepage": "https://github.com/Animenosekai/bordercrop"
    },
    "release_url": "https://pypi.org/project/bordercrop/1.0.0/",
    "requires_dist": [
      "Pillow",
      "typing ; python_version < \"3.5\""
    ],
    "requires_python": ">=3.2, <4",
    "summary": "A black borders cropping module",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10726578,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "236124d23316a96240628c5563bd5ed33725dc8afa6d1595f2e1128e194ce38e",
          "md5": "23cc8ad4f1f6e35b96eecfc928a4e344",
          "sha256": "50342a4a7d3b37bd1188faf3bedcb4d4b264c3d7cc51a59d082d3afeaab86c0f"
        },
        "downloads": -1,
        "filename": "bordercrop-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23cc8ad4f1f6e35b96eecfc928a4e344",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.2, <4",
        "size": 9676,
        "upload_time": "2021-06-24T00:43:37",
        "upload_time_iso_8601": "2021-06-24T00:43:37.432611Z",
        "url": "https://files.pythonhosted.org/packages/23/61/24d23316a96240628c5563bd5ed33725dc8afa6d1595f2e1128e194ce38e/bordercrop-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40d726a0c473fec3f176ba65270768b0ecea867c84cd4471e493de9a000e2367",
          "md5": "ec000ea49de2644da640709bbc865e55",
          "sha256": "2cfd078f8214fcecc304ee9bc8e96b38c9decc3db96ee5301e31e60678322990"
        },
        "downloads": -1,
        "filename": "bordercrop-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ec000ea49de2644da640709bbc865e55",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.2, <4",
        "size": 9237,
        "upload_time": "2021-06-24T00:43:39",
        "upload_time_iso_8601": "2021-06-24T00:43:39.360270Z",
        "url": "https://files.pythonhosted.org/packages/40/d7/26a0c473fec3f176ba65270768b0ecea867c84cd4471e493de9a000e2367/bordercrop-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "236124d23316a96240628c5563bd5ed33725dc8afa6d1595f2e1128e194ce38e",
        "md5": "23cc8ad4f1f6e35b96eecfc928a4e344",
        "sha256": "50342a4a7d3b37bd1188faf3bedcb4d4b264c3d7cc51a59d082d3afeaab86c0f"
      },
      "downloads": -1,
      "filename": "bordercrop-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "23cc8ad4f1f6e35b96eecfc928a4e344",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.2, <4",
      "size": 9676,
      "upload_time": "2021-06-24T00:43:37",
      "upload_time_iso_8601": "2021-06-24T00:43:37.432611Z",
      "url": "https://files.pythonhosted.org/packages/23/61/24d23316a96240628c5563bd5ed33725dc8afa6d1595f2e1128e194ce38e/bordercrop-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "40d726a0c473fec3f176ba65270768b0ecea867c84cd4471e493de9a000e2367",
        "md5": "ec000ea49de2644da640709bbc865e55",
        "sha256": "2cfd078f8214fcecc304ee9bc8e96b38c9decc3db96ee5301e31e60678322990"
      },
      "downloads": -1,
      "filename": "bordercrop-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ec000ea49de2644da640709bbc865e55",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.2, <4",
      "size": 9237,
      "upload_time": "2021-06-24T00:43:39",
      "upload_time_iso_8601": "2021-06-24T00:43:39.360270Z",
      "url": "https://files.pythonhosted.org/packages/40/d7/26a0c473fec3f176ba65270768b0ecea867c84cd4471e493de9a000e2367/bordercrop-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}