{
  "info": {
    "author": "Kashif Rasul",
    "author_email": "kashif.rasul@zalando.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# PyTorchTS\n\nPyTorchTS is a [PyTorch](https://github.com/pytorch/pytorch) Probabilistic Time Series forecasting framework which provides state of the art PyTorch time series models by utilizing [GluonTS](https://github.com/awslabs/gluon-ts) as its back-end API and for loading, transforming and back-testing time series data sets.\n\n## Installation\n\n```\n$ pip3 install pytorchts\n```\n\n## Quick start\n\nHere we highlight the the API changes via the GluonTS README.\n\n```python\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport torch\n\nfrom gluonts.dataset.common import ListDataset\nfrom gluonts.dataset.util import to_pandas\n\nfrom pts.model.deepar import DeepAREstimator\nfrom pts import Trainer\n```\n\nThis simple example illustrates how to train a model on some data, and then use it to make predictions. As a first step, we need to collect some data: in this example we will use the volume of tweets mentioning the AMZN ticker symbol.\n\n```python\nurl = \"https://raw.githubusercontent.com/numenta/NAB/master/data/realTweets/Twitter_volume_AMZN.csv\"\ndf = pd.read_csv(url, header=0, index_col=0, parse_dates=True)\n```\n\nThe first 100 data points look like follows:\n\n```python\ndf[:100].plot(linewidth=2)\nplt.grid(which='both')\nplt.show()\n```\n\n![png](https://github.com/zalandoresearch/pytorch-ts/blob/master/examples/images/readme_0.png?raw=true)\n\n\nWe can now prepare a training dataset for our model to train on. Datasets are essentially iterable collections of dictionaries: each dictionary represents a time series with possibly associated features. For this example, we only have one entry, specified by the `\"start\"` field which is the timestamp of the first data point, and the `\"target\"` field containing time series data. For training, we will use data up to midnight on April 5th, 2015.\n\n\n```python\ntraining_data = ListDataset(\n    [{\"start\": df.index[0], \"target\": df.value[:\"2015-04-05 00:00:00\"]}],\n    freq = \"5min\"\n)\n```\n\nA forecasting model is a *predictor* object. One way of obtaining predictors is by training a correspondent estimator. Instantiating an estimator requires specifying the frequency of the time series that it will handle, as well as the number of time steps to predict. In our example we're using 5 minutes data, so `req=\"5min\"`, and we will train a model to predict the next hour, so `prediction_length=12`. The input to the model will be a vector of size `input_size=43` at each time point.  We also specify some minimal training options in particular training on a `device` for `epoch=10`.\n\n\n```python\ndevice = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n\nestimator = DeepAREstimator(freq=\"5min\",\n                            prediction_length=12,\n                            input_size=43,\n                            trainer=Trainer(epochs=10,\n                                            device=device))\npredictor = estimator.train(training_data=training_data, num_workers=4)\n```\n```\n    45it [00:01, 37.60it/s, avg_epoch_loss=4.64, epoch=0]\n    48it [00:01, 39.56it/s, avg_epoch_loss=4.2, epoch=1] \n    45it [00:01, 38.11it/s, avg_epoch_loss=4.1, epoch=2] \n    43it [00:01, 36.29it/s, avg_epoch_loss=4.05, epoch=3]\n    44it [00:01, 35.98it/s, avg_epoch_loss=4.03, epoch=4]\n    48it [00:01, 39.48it/s, avg_epoch_loss=4.01, epoch=5]\n    48it [00:01, 38.65it/s, avg_epoch_loss=4, epoch=6]   \n    46it [00:01, 37.12it/s, avg_epoch_loss=3.99, epoch=7]\n    48it [00:01, 38.86it/s, avg_epoch_loss=3.98, epoch=8]\n    48it [00:01, 39.49it/s, avg_epoch_loss=3.97, epoch=9]\n```\n\nDuring training, useful information about the progress will be displayed. To get a full overview of the available options, please refer to the source code of `DeepAREstimator` (or other estimators) and `Trainer`.\n\nWe're now ready to make predictions: we will forecast the hour following the midnight on April 15th, 2015.\n\n\n```python\ntest_data = ListDataset(\n    [{\"start\": df.index[0], \"target\": df.value[:\"2015-04-15 00:00:00\"]}],\n    freq = \"5min\"\n)\n```\n\n\n```python\nfor test_entry, forecast in zip(test_data, predictor.predict(test_data)):\n    to_pandas(test_entry)[-60:].plot(linewidth=2)\n    forecast.plot(color='g', prediction_intervals=[50.0, 90.0])\nplt.grid(which='both')\n```\n\n![png](https://github.com/zalandoresearch/pytorch-ts/blob/master/examples/images/readme_1.png?raw=true)\n\n\nNote that the forecast is displayed in terms of a probability distribution: the shaded areas represent the 50% and 90% prediction intervals, respectively, centered around the median (dark green line).\n\n\n## Development\n\n```\npip install -e .\npytest test\n```\n\n## Citing\n\nTo cite this repository:\n\n```tex\n@software{pytorchgithub,\n    author = {Kashif Rasul},\n    title = {{P}yTorch{TS}},\n    url = {https://github.com/zalandoresearch/pytorch-ts},\n    version = {0.6.x},\n    year = {2021},\n}\n```\n\n## Scientific Article\n\nWe have implemented the following model using this framework:\n\n* [Multi-variate Probabilistic Time Series Forecasting via Conditioned Normalizing Flows](https://arxiv.org/abs/2002.06103)\n```tex\n@INPROCEEDINGS{rasul2020tempflow,\n  author = {Kashif Rasul and  Abdul-Saboor Sheikh and  Ingmar Schuster and Urs Bergmann and Roland Vollgraf},\n  title = {{M}ultivariate {P}robabilistic {T}ime {S}eries {F}orecasting via {C}onditioned {N}ormalizing {F}lows},\n  year = {2021},\n  url = {https://openreview.net/forum?id=WiGQBFuVRv},\n  booktitle = {International Conference on Learning Representations 2021},\n}\n```\n\n* [Autoregressive Denoising Diffusion Models for Multivariate Probabilistic Time Series Forecasting\n](http://proceedings.mlr.press/v139/rasul21a.html)\n```tex\n@InProceedings{pmlr-v139-rasul21a,\n  title = \t {{A}utoregressive {D}enoising {D}iffusion {M}odels for {M}ultivariate {P}robabilistic {T}ime {S}eries {F}orecasting},\n  author =       {Rasul, Kashif and Seward, Calvin and Schuster, Ingmar and Vollgraf, Roland},\n  booktitle = \t {Proceedings of the 38th International Conference on Machine Learning},\n  pages = \t {8857--8868},\n  year = \t {2021},\n  editor = \t {Meila, Marina and Zhang, Tong},\n  volume = \t {139},\n  series = \t {Proceedings of Machine Learning Research},\n  month = \t {18--24 Jul},\n  publisher =    {PMLR},\n  pdf = \t {http://proceedings.mlr.press/v139/rasul21a/rasul21a.pdf},\n  url = \t {http://proceedings.mlr.press/v139/rasul21a.html},\n}\n```\n\n* [Probabilistic Time Series Forecasting with Implicit Quantile Networks](https://arxiv.org/abs/2107.03743)\n```tex\n@misc{gouttes2021probabilistic,\n      title={{P}robabilistic {T}ime {S}eries {F}orecasting with {I}mplicit {Q}uantile {N}etworks}, \n      author={AdÃ¨le Gouttes and Kashif Rasul and Mateusz Koren and Johannes Stephan and Tofigh Naghibi},\n      year={2021},\n      eprint={2107.03743},\n      archivePrefix={arXiv},\n      primaryClass={cs.LG}\n}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zalandoresearch/pytorch-ts",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytorchts",
    "package_url": "https://pypi.org/project/pytorchts/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytorchts/",
    "project_urls": {
      "Homepage": "https://github.com/zalandoresearch/pytorch-ts"
    },
    "release_url": "https://pypi.org/project/pytorchts/0.6.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "PyTorch Probabilistic Time Series Modeling framework",
    "version": "0.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13607024,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41f6a8bd25d523b048c741bbd8cb9bb1ac4ce695bf82027f6481048c8d9dd75f",
          "md5": "5ab4b33bcc7e99df8ac4073f9a3dcea7",
          "sha256": "6a1d7c36ad0bcc0773a1918276f202bff27903433198d6fe14632986e26c9715"
        },
        "downloads": -1,
        "filename": "pytorchts-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5ab4b33bcc7e99df8ac4073f9a3dcea7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 121237,
        "upload_time": "2020-07-06T13:16:58",
        "upload_time_iso_8601": "2020-07-06T13:16:58.841568Z",
        "url": "https://files.pythonhosted.org/packages/41/f6/a8bd25d523b048c741bbd8cb9bb1ac4ce695bf82027f6481048c8d9dd75f/pytorchts-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37904a1fb6661806b4d706d5c7d2a7abea8867d55b819d80132179e95ba27a8d",
          "md5": "389818108ed3644d759569039b5444f6",
          "sha256": "54ba347559a8a339d5da9916ef4df7a25fc15c88e9b8127922caab3e461878ac"
        },
        "downloads": -1,
        "filename": "pytorchts-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "389818108ed3644d759569039b5444f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 124794,
        "upload_time": "2020-09-01T13:02:47",
        "upload_time_iso_8601": "2020-09-01T13:02:47.767182Z",
        "url": "https://files.pythonhosted.org/packages/37/90/4a1fb6661806b4d706d5c7d2a7abea8867d55b819d80132179e95ba27a8d/pytorchts-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "665efec068ac4cdbf450d49b00c952885a020ca2bd2fc68d590274c6a9f26b27",
          "md5": "e0c9b67a4547995fee545c3e9abb0bbf",
          "sha256": "6e353c5950183a83b79b08ff927125bfd25498dc99db031508b3fa643341a283"
        },
        "downloads": -1,
        "filename": "pytorchts-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e0c9b67a4547995fee545c3e9abb0bbf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 70584,
        "upload_time": "2021-02-15T11:24:58",
        "upload_time_iso_8601": "2021-02-15T11:24:58.677054Z",
        "url": "https://files.pythonhosted.org/packages/66/5e/fec068ac4cdbf450d49b00c952885a020ca2bd2fc68d590274c6a9f26b27/pytorchts-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "126641ca1331fd7d36e877ffc4f940dd049957e5c22427bcdaa3d0ab10159758",
          "md5": "e0ee1d715cdb82bf7aeb24fd95fa2229",
          "sha256": "bb73841b3a13b680233dd2903247a77a89329eb8c6632116f4dccaf9c139b163"
        },
        "downloads": -1,
        "filename": "pytorchts-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e0ee1d715cdb82bf7aeb24fd95fa2229",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 70566,
        "upload_time": "2021-02-15T12:30:24",
        "upload_time_iso_8601": "2021-02-15T12:30:24.593365Z",
        "url": "https://files.pythonhosted.org/packages/12/66/41ca1331fd7d36e877ffc4f940dd049957e5c22427bcdaa3d0ab10159758/pytorchts-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3441a0f9d954b87e10182aa9a0b656b827a0411dc8c1c36088ec170545b75dca",
          "md5": "d1177c65ebf84e169ecd7a6112f07c68",
          "sha256": "3c349a58f484370e41497094d5b8ce4d3804d1810faef23db7c21146cf476cdf"
        },
        "downloads": -1,
        "filename": "pytorchts-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d1177c65ebf84e169ecd7a6112f07c68",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 87617,
        "upload_time": "2021-04-27T16:04:07",
        "upload_time_iso_8601": "2021-04-27T16:04:07.368881Z",
        "url": "https://files.pythonhosted.org/packages/34/41/a0f9d954b87e10182aa9a0b656b827a0411dc8c1c36088ec170545b75dca/pytorchts-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67ddc5eeb2e08ca513ddee5c6716f8f735c0196a231ccff0ff6fcba98b5ad149",
          "md5": "3770a222cc9a0cc8df7f601a6f99aad7",
          "sha256": "cca52d0046fbe9595b639dd1fdbc0791287ee0b5bd0dd3b7f01db1c97c2f0ac2"
        },
        "downloads": -1,
        "filename": "pytorchts-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3770a222cc9a0cc8df7f601a6f99aad7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 87470,
        "upload_time": "2021-07-06T11:20:59",
        "upload_time_iso_8601": "2021-07-06T11:20:59.715283Z",
        "url": "https://files.pythonhosted.org/packages/67/dd/c5eeb2e08ca513ddee5c6716f8f735c0196a231ccff0ff6fcba98b5ad149/pytorchts-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "588d01c7c0cd16252fa22564057026af1d04c2a48cf78f5a21b69a43aa6720e4",
          "md5": "032e40e13c29926e7c800435296c7a5c",
          "sha256": "4b4e9cd3417a8cc7d3c18b9e4eb5b027b340e239336415062c09f08dc1ff729e"
        },
        "downloads": -1,
        "filename": "pytorchts-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "032e40e13c29926e7c800435296c7a5c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 87875,
        "upload_time": "2021-07-07T09:25:19",
        "upload_time_iso_8601": "2021-07-07T09:25:19.663329Z",
        "url": "https://files.pythonhosted.org/packages/58/8d/01c7c0cd16252fa22564057026af1d04c2a48cf78f5a21b69a43aa6720e4/pytorchts-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6d776a5fa8591937ef75e4b06eecdb63feae745229204a4c0a0907b407423ac",
          "md5": "396788d6702bb39daeb10dbdd81b21d6",
          "sha256": "09c5c25601495075cfd690230a20769b424334bb05609cf078322b852733c536"
        },
        "downloads": -1,
        "filename": "pytorchts-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "396788d6702bb39daeb10dbdd81b21d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 88308,
        "upload_time": "2022-04-24T16:25:28",
        "upload_time_iso_8601": "2022-04-24T16:25:28.855272Z",
        "url": "https://files.pythonhosted.org/packages/b6/d7/76a5fa8591937ef75e4b06eecdb63feae745229204a4c0a0907b407423ac/pytorchts-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b6d776a5fa8591937ef75e4b06eecdb63feae745229204a4c0a0907b407423ac",
        "md5": "396788d6702bb39daeb10dbdd81b21d6",
        "sha256": "09c5c25601495075cfd690230a20769b424334bb05609cf078322b852733c536"
      },
      "downloads": -1,
      "filename": "pytorchts-0.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "396788d6702bb39daeb10dbdd81b21d6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 88308,
      "upload_time": "2022-04-24T16:25:28",
      "upload_time_iso_8601": "2022-04-24T16:25:28.855272Z",
      "url": "https://files.pythonhosted.org/packages/b6/d7/76a5fa8591937ef75e4b06eecdb63feae745229204a4c0a0907b407423ac/pytorchts-0.6.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}