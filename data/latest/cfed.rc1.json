{
  "info": {
    "author": "Wajdy",
    "author_email": "itswajdy@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Categorical Features Pairwise Euclidean Distances\n\n[![forthebadge made-with-python](http://ForTheBadge.com/images/badges/made-with-python.svg)](https://www.python.org/)\n\n[![PyPi Version](https://img.shields.io/pypi/v/cfed.svg)](https://pypi.python.org/pypi/cfed/)\n[![MIT License](https://img.shields.io/apm/l/atomic-design-ui.svg?)](https://github.com/tterb/atomic-design-ui/blob/master/LICENSEs)\n\nA python package to compute pairwise Euclidean distances on datasets with categorical features in little time\n\n\n## Motivation\n\nIn machine learning model development I often ran into datasets with categorical features. Most times dealing with these categorical features was fairly straight forward (I would use the pandas get_dummies() function to convert each feature into a one-hot-encoded representaion).\n\nBut when the number of categories embedded in these categorical features became massive, I ran into the problem of extremely slow Euclidean distance computation between each sample and every other sample.\n\nThis is where this package comes in. Running my own tests, I concluded that this code runs significantly faster than the [SKLearn pairwise Euclidean distances function](https://scikit-learn.org/stable/modules/generated/sklearn.metrics.pairwise.euclidean_distances.html) on one-hot-encoded categorical features.\n\n\n## Prerequisites\n\nSee [requirements.txt](https://github.com/ItsWajdy/categorical_features_euclidean_distance/blob/master/requirements.txt) for the full list of Prerequisite libraries.\n\n\n## Installation\n\nTo start using this package, simply run this command in terminal\n\n`pip install cfed`\n\n\n## Usage\n\n```\nimport pandas as pd\nfrom cfed.pairwise import euclidean_distances\nfrom cfed.pairwise import euclidean_distances_from_split\n\ndf1 = pd.DataFrame.from_dict({\n    'col1': [1, 2, 3],\n    'col2': [4, 5, 6],\n    'col3': [7, 8, 9]\n})\ndf2 = pd.DataFrame.from_dict({\n    'col1': [1, 4, 7],\n    'col2': [2, 5, 8],\n    'col3': [3, 6, 9],\n})\n\ndistances = euclidean_distances(df1, df2, categorical_columns=['col1'])\n```\n\n*Or without specifying `categorical_columns`*\n\n```\nimport pandas as pd\nfrom cfed.pairwise import euclidean_distances\nfrom cfed.pairwise import euclidean_distances_from_split\n\ndf1 = pd.DataFrame.from_dict({\n    'col1': ['c1', 'c2', 'c1'],\n    'col2': [4, 5, 6],\n    'col3': [7, 8, 9]\n})\ndf2 = pd.DataFrame.from_dict({\n    'col1': ['c1', 'c3', 'c2'],\n    'col2': [2, 5, 8],\n    'col3': [3, 6, 9],\n})\n\ndistances = euclidean_distances(df1, df2)\n```\n\n*Or*\n\n```\nimport pandas as pd\nfrom cfed.pairwise import euclidean_distances\nfrom cfed.pairwise import euclidean_distances_from_split\n\ndf1_numerical = pd.DataFrame.from_dict({\n    'col1': [1, 2, 3],\n    'col2': [4, 5, 6],\n    'col3': [7, 8, 9]\n})\ndf2_numerical = pd.DataFrame.from_dict({\n    'col1': [1, 4, 7],\n    'col2': [2, 5, 8],\n    'col3': [3, 6, 9],\n})\n\ndf1_categorical = pd.DataFrame.from_dict({\n    'col4': ['c1', 'c1', 'c2'],\n})\ndf2_categorical = pd.DataFrame.from_dict({\n    'col4': ['c1', 'c2', 'c2'],\n})\n\ndistances = euclidean_distances_from_split(df1_numerical, df1_categorical, df2_numerical, df2_categorical)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ItsWajdy/categorical_features_euclidean_distance",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cfed",
    "package_url": "https://pypi.org/project/cfed/",
    "platform": "",
    "project_url": "https://pypi.org/project/cfed/",
    "project_urls": {
      "Homepage": "https://github.com/ItsWajdy/categorical_features_euclidean_distance"
    },
    "release_url": "https://pypi.org/project/cfed/1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A python package to compute pairwise Euclidean distances on datasets with categorical features in little time",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7915062,
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ac5167fc26c99d62c90c2438a4b1b1e9e54b1a55ead821625387c87322e016a",
          "md5": "d5c603e7d42251963f5bd8a8dbe8ffea",
          "sha256": "a313d8c506c1403037e4d65ce991c397f71ed3cef5f0db5e5cc1e70cfdfe9bc8"
        },
        "downloads": -1,
        "filename": "cfed-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d5c603e7d42251963f5bd8a8dbe8ffea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5472,
        "upload_time": "2020-08-08T13:20:28",
        "upload_time_iso_8601": "2020-08-08T13:20:28.783171Z",
        "url": "https://files.pythonhosted.org/packages/0a/c5/167fc26c99d62c90c2438a4b1b1e9e54b1a55ead821625387c87322e016a/cfed-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b31046d0b995e243aff992fd4dcf1f877d4f75d7718e3aa150c80b63cc8048e9",
          "md5": "c0422eff93215d00cb8f7f888489e439",
          "sha256": "4b1793d7a2aad97dd135b9b900bdb4e603a71193325d830f86aa7d3bb822ba7b"
        },
        "downloads": -1,
        "filename": "cfed-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c0422eff93215d00cb8f7f888489e439",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4190,
        "upload_time": "2020-08-08T13:20:32",
        "upload_time_iso_8601": "2020-08-08T13:20:32.540189Z",
        "url": "https://files.pythonhosted.org/packages/b3/10/46d0b995e243aff992fd4dcf1f877d4f75d7718e3aa150c80b63cc8048e9/cfed-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ac5167fc26c99d62c90c2438a4b1b1e9e54b1a55ead821625387c87322e016a",
        "md5": "d5c603e7d42251963f5bd8a8dbe8ffea",
        "sha256": "a313d8c506c1403037e4d65ce991c397f71ed3cef5f0db5e5cc1e70cfdfe9bc8"
      },
      "downloads": -1,
      "filename": "cfed-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d5c603e7d42251963f5bd8a8dbe8ffea",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5472,
      "upload_time": "2020-08-08T13:20:28",
      "upload_time_iso_8601": "2020-08-08T13:20:28.783171Z",
      "url": "https://files.pythonhosted.org/packages/0a/c5/167fc26c99d62c90c2438a4b1b1e9e54b1a55ead821625387c87322e016a/cfed-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b31046d0b995e243aff992fd4dcf1f877d4f75d7718e3aa150c80b63cc8048e9",
        "md5": "c0422eff93215d00cb8f7f888489e439",
        "sha256": "4b1793d7a2aad97dd135b9b900bdb4e603a71193325d830f86aa7d3bb822ba7b"
      },
      "downloads": -1,
      "filename": "cfed-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c0422eff93215d00cb8f7f888489e439",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4190,
      "upload_time": "2020-08-08T13:20:32",
      "upload_time_iso_8601": "2020-08-08T13:20:32.540189Z",
      "url": "https://files.pythonhosted.org/packages/b3/10/46d0b995e243aff992fd4dcf1f877d4f75d7718e3aa150c80b63cc8048e9/cfed-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}