{
  "info": {
    "author": "Schwannden Kuo",
    "author_email": "schwannden@mobagel.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Internet",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "[![Stable Version](https://badge.fury.io/py/awesome-exception.svg)](https://pypi.org/project/awesome-exception/)\n[![tests](https://github.com/MoBagel/awesome-exception/workflows/develop/badge.svg)](https://github.com/MoBagel/awesome-exception)\n[![Coverage Status](https://coveralls.io/repos/github/MoBagel/awesome-exception/badge.svg?branch=develop)](https://coveralls.io/github/MoBagel/awesome-exception)\n\n# Awesome Exception\n\nA library designed to handle http exception elegantly with customization support like i18n support.\n\n## Feature\n\n- [x] common http exception class that support custom message and status code\n\n## Usage\n\n### Installation\n\n1. `pip install awesome-exception`\n\n### Exceptions\n\nUsing fast API as example, we may simply throw exception with a proper status code, and an optional error code. We may\nalso supply arbitrary key value in args dict, to help frontend render better error message.\n\n```python\nfrom awesome_exception.exceptions import NotFound\nfrom fastapi import APIRouter\n\nrouter = APIRouter()\n\n\n@router.get('/transactions')\ndef get(id: str):\n    try:\n        obj = find_by_id(id)\n    except Exception as e:\n        raise NotFound(message='transaction not found' % id, error_code='A0001', args={id: id})\n    ...\n```\n\nAnd we may implement a common error handler to convert all these errors to proper response schema\n\n```python\nfrom awesome_exception.exceptions import HTTPException\nfrom fastapi.requests import Request\nfrom fastapi.responses import JSONResponse\n\n\n@app.exception_handler(HTTPException)\nasync def http_exception_handler(request: Request, exc: HTTPException):\n    return JSONResponse(\n        status_code=exc.status_code,\n        content={\n            'detail': exc.detail,\n            'error_code': exc.error_code,\n        }\n    )\n```\n\nThis would result in a response with status code 404, and body\n\n```json\n{\n  \"status_code\": 404,\n  \"detail\": {\n    \"message\": \"transaction not found\",\n    \"id\": \"some_id\"\n  },\n  \"error_code\": \"A0001\"\n}\n```\n\nWith this response, frontend can decide to simply render detail, or map it to detailed message. If error_code \"A0001\"\ncorrespond to the following i18 n entry\n\n```json\n\"error.A0001\": {\"en-US\": \"transaction can not be found with supplied {id}: {message}\"}\n```\n\nwe may format message accordingly with\n\n```typescript\nerrorMessage = formatMessage({ id: `error.${error.data.error_code}` }, error.data.detail);\n```\n\nNote that error code is not supplied, is default to status code. So it is always safe to simply use error_code in\nfrontend to decide what to render.\n\n## Development\n\n### Installing Poetry\n\n1. create your own environment for poetry, and simply run: `pip install poetry`\n2. alternatively, you can refer to [poetry's official page](https://github.com/python-poetry/poetry)\n3. to be able to use `poe` directly, `pip install poethepoet`\n\n### Contributing\n\n1. project setup: `poetry install`\n2. create your own branch to start developing new feature.\n3. before creating pr, make sure you pass `poe lint` and `poe test`.\n    - what happened inside `poe test` is that a minio server is setup for you temporarily, and teardown and unit\n      test is finished.\n    - notice that `poe test` would also work if you already have a minio up and running. You need the following env\n      variable: `MINIO_ACCESS_KEY`, `MINIO_SECRET_KEY`, `MINIO_ADDRESS` upon running `poe test`.\n4. for a list of available poe command, `poe`\n5. after you submit a pr, you should check if pipeline is successful.\n\n### Releasing\n\n1. `poetry version [new_version]`\n2. `git commit -m\"Bump version\"`\n3. `git push origin develop`\n4. [create new release](https://github.com/MoBagel/awesome-exception/releases/new) on github.\n5. Create release off develop branch, auto generate notes, and review release note. \n6. Publish release\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MoBagel/awesome-exception",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "awesome-exception",
    "package_url": "https://pypi.org/project/awesome-exception/",
    "platform": null,
    "project_url": "https://pypi.org/project/awesome-exception/",
    "project_urls": {
      "Homepage": "https://github.com/MoBagel/awesome-exception"
    },
    "release_url": "https://pypi.org/project/awesome-exception/1.1.0/",
    "requires_dist": [
      "pydantic[email] (>=1.8.2,<2.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "common http exception that support custom status code and message",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16235220,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b5e4a4dcbbb89d17382e1aed762720150f6d4c52c154f2412671eb9968bf601",
          "md5": "bbd23a7ea016ed84d37b3b4c96b11141",
          "sha256": "4b4e378c67dd826f259196c3f760c3f4214774942051a188ef67519fbb9a83cd"
        },
        "downloads": -1,
        "filename": "awesome_exception-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bbd23a7ea016ed84d37b3b4c96b11141",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 13675,
        "upload_time": "2022-05-20T09:35:25",
        "upload_time_iso_8601": "2022-05-20T09:35:25.024072Z",
        "url": "https://files.pythonhosted.org/packages/4b/5e/4a4dcbbb89d17382e1aed762720150f6d4c52c154f2412671eb9968bf601/awesome_exception-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd2c3da4b6c6af7ed55e6963a3f3293561bc587cce0fac289c9bfa2fbe0f7c01",
          "md5": "a941515586d89e0f33714fefeffc4b70",
          "sha256": "e4e99fe2a8dc965b3f3bb9f84bef8a52cf82b45eb0dc7c6fe071bc3ba8b9e8d7"
        },
        "downloads": -1,
        "filename": "awesome-exception-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a941515586d89e0f33714fefeffc4b70",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 8146,
        "upload_time": "2022-05-20T09:35:22",
        "upload_time_iso_8601": "2022-05-20T09:35:22.397991Z",
        "url": "https://files.pythonhosted.org/packages/bd/2c/3da4b6c6af7ed55e6963a3f3293561bc587cce0fac289c9bfa2fbe0f7c01/awesome-exception-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9612ce960c617c1a5697b1aa62d80497b688c6525aeca924682f22e585ba9129",
          "md5": "f8c8250ee58efafe56524212f3e3d72b",
          "sha256": "573b22de046e59b79966972a9e29d499176412a9c7c3afcb66a0105ca56520ec"
        },
        "downloads": -1,
        "filename": "awesome_exception-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f8c8250ee58efafe56524212f3e3d72b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 13734,
        "upload_time": "2022-07-20T03:23:08",
        "upload_time_iso_8601": "2022-07-20T03:23:08.596899Z",
        "url": "https://files.pythonhosted.org/packages/96/12/ce960c617c1a5697b1aa62d80497b688c6525aeca924682f22e585ba9129/awesome_exception-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "823028aec6735354d3103c8c1ea2b4d1df0a6a6e7de00c0fd03e106fd97acd61",
          "md5": "aa3468dcf23f357b844c3c3850bf2dbd",
          "sha256": "f5c36a62e8c8b2a7b23ce574765759ecdaa5704e6ef5624e11f565d26a22198c"
        },
        "downloads": -1,
        "filename": "awesome-exception-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "aa3468dcf23f357b844c3c3850bf2dbd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 8152,
        "upload_time": "2022-07-20T03:23:06",
        "upload_time_iso_8601": "2022-07-20T03:23:06.795185Z",
        "url": "https://files.pythonhosted.org/packages/82/30/28aec6735354d3103c8c1ea2b4d1df0a6a6e7de00c0fd03e106fd97acd61/awesome-exception-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9612ce960c617c1a5697b1aa62d80497b688c6525aeca924682f22e585ba9129",
        "md5": "f8c8250ee58efafe56524212f3e3d72b",
        "sha256": "573b22de046e59b79966972a9e29d499176412a9c7c3afcb66a0105ca56520ec"
      },
      "downloads": -1,
      "filename": "awesome_exception-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f8c8250ee58efafe56524212f3e3d72b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 13734,
      "upload_time": "2022-07-20T03:23:08",
      "upload_time_iso_8601": "2022-07-20T03:23:08.596899Z",
      "url": "https://files.pythonhosted.org/packages/96/12/ce960c617c1a5697b1aa62d80497b688c6525aeca924682f22e585ba9129/awesome_exception-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "823028aec6735354d3103c8c1ea2b4d1df0a6a6e7de00c0fd03e106fd97acd61",
        "md5": "aa3468dcf23f357b844c3c3850bf2dbd",
        "sha256": "f5c36a62e8c8b2a7b23ce574765759ecdaa5704e6ef5624e11f565d26a22198c"
      },
      "downloads": -1,
      "filename": "awesome-exception-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "aa3468dcf23f357b844c3c3850bf2dbd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 8152,
      "upload_time": "2022-07-20T03:23:06",
      "upload_time_iso_8601": "2022-07-20T03:23:06.795185Z",
      "url": "https://files.pythonhosted.org/packages/82/30/28aec6735354d3103c8c1ea2b4d1df0a6a6e7de00c0fd03e106fd97acd61/awesome-exception-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}