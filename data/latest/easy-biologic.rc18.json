{
  "info": {
    "author": "Brian Carlsen",
    "author_email": "carlsen.bri@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Easy Biologic\nA library allowing easy control over BioLogic devices.\nHigh and low level control over Biologic devices are available. \nLow level control is included in the `lib` subpackage, while high level control\nis available in the main module. \n> Install with `python -m pip install easy-biologic`\n\n## High Level API\nThere are two high level API modules containing three classes, and two convenience modules.\n\n### Biologic Device\nRepresents an instance of a Biologic Device.\n\n#### Methods\n+ **BiologicDevice( address, timeout = 5 ):** Creates a new Biologic Device representing the device conencted at `address`.\n\n+ **connect( bin_file, xlx_file ):** Connects to the device, loading the bin and xlx file if provided.\n\n+ **disconnect():** Disconnects from the device.\n\n+ **is_connected():** Whether the device is connected or not.\n\n+ **load_technique( ch, technique, params, index = 0, last = True, types = none ):** Loads a technique onto the given device channel.\n\n+ **load_techniques( ch, techniques, parameters, types = None ):** Loads a series of techniques onto the given device channel.\n\n+ **update_parameters( ch, technique, parameters, index = 0, types = None ):** Update the parameters of the given technqiue on the specified device channel.\n\n+ **start_channel( ch ):** Starts the given channel.\n\n+ **start_channels( chs = None ):** Starts multiple channels.\n\n+ **stop_channel( ch ):** Stops the given channel.\n\n+ **stop_channels( chs = None ):** Stops the given channels.\n\n+ **channel_info( ch ):** Returns information about the given channel.\n\n+ **channel_configuration( ch ):** Returns configuration information of the channel.\n\n+ **set_channel_configuration( ch, mode, conneciton ):** Sets the channel's hardware configuration.\n\n+ **get_values( ch ):** Returns current values of the given channel.\n\n+ **get_data( ch ):** Returns buffered data of the given channel.\n\n\n#### Properties\n+ **address:** Connection address of the device.\n+ **idn:** ID of the device.\n+ **kind:** Device model.\n+ **info:** DeviceInfo structure.\n+ **plugged:** List of available channels. \n+ **channels:** List of ChannelInfo structures.\n+ **hardware_configuration:** Dictionary of HardwareConfiguration for each channel.\n+ **techniques:** List of TechParams loaded on each channel.\n\n### Biologic Program\n`Abstract Class`\nRepresents a program to be run on a device.\n\n#### Methods\n+ **BiologicProgram( device, params, channels = None, autoconnect = True, barrier = None, stop_event = None, threaded = False ):** Creates a new program.\n\n+ **channel_state( channels = None ):** Returns the state of the channels.\n\n+ **on_data( callback, index = None ):** Registers a callback function to run when data is collected.\n\n+ **run():** Runs the program.\n\n+ **stop():** Sets the stop event flag.\n\n+ **save_data( file, append = False, by_channel = False ):** Saves data to the given file.\n\n+ **sync():** Waits for barrier, if set.\n\n+ **_connect():** Connects to the device\n\n#### Properties\n+ **device:** BiologicDevice. <br>\n+ **params:** Passed in parameters. <br>\n+ **channels:** Device channels. <br>\n+ **autoconnect:** Whether connection to the device should be automatic or + not. <br>\n+ **barrier:** A threading.Barrier to use for channel syncronization. [See ProgramRummer] <br>\n+ **field_titles:** Column names for saving data. <br>\n+ **data:** Data collected during the program. <br>\n+ **status:** Status of the program. <br>\n+ **fields:** Data fields teh program returns. <br>\n+ **technqiues:** List of techniques the program uses.\n\n### Program Runner\nRepresents a program to be run on a device channel.\n\n#### Methods\n+ **ProgramRunner( programs, sync = False ):** Creates a new program runner.\n\n+ **start():** Runs the programs.\n\n+ **wait():** Wait for all threads to finish.\n\n+ **stop():** Sets stop event.\n\n#### Properties\n+ **threads:** List of threads for each program. <br>\n+ **sync:** Whether to sync the threads or not. \n\n### Base Programs\nContains basic implementations of BiologicPrograms.\n\n#### OCV\n##### Params\n+ **time:** Run time in seconds.\n\n+ **time_interval:** Maximum time between readings. \n[Default: 1]\n\n+ **voltage_interval:** Maximum interval between voltage readings.\n[Default: 0.01]\n    \n#### CA\n##### Params\n+ **voltages:** List of voltages.\n\n+ **durations:** List of times in seconds.\n\n+ **vs_initial:** If step is vs. initial or previous. \n[Default: False] \n\n+ **time_interval:** Maximum time interval between points.\n[Default: 1]\n    \n+ **current_interval:** Maximum current change between points.\n[Default: 0.001]\n            \n+ **current_range:** Current range. Use ec_lib.IRange.\n[Default: IRange.m10 ]\n            \n##### Methods\n+ **update_voltage( voltages, durations = None, vs_initial = None ):** Updates the voltage. \n\n#### CALimit\n##### Params\n+ **voltages:** List of voltages.\n\n+ **durations:** List of times in seconds.\n\n+ **vs_initial:** If step is vs. initial or previous. \n[Default: False] \n\n+ **time_interval:** Maximum time interval between points.\n[Default: 1]\n+ **current_interval:** Maximum current change between points.\n[Default: 0.001]\n            \n+ **current_range:** Current range. Use ec_lib.IRange.\n[Default: IRange.m10 ]\n\n##### Methods\n+ **update_voltage( voltages, durations = None, vs_initial = None ):** Updates the voltage.\n\n#### PEIS\n##### Params\n+ **voltage:** Initial potential in Volts.\n\n+ **amplitude_voltage:** Sinus amplitude in Volts.\n\n+ **initial_frequency**: Initial frequency in Hertz.\n       \n+ **final_frequency:** Final frequency in Hertz.\n\n+ **frequency_number:** Number of frequencies.\n\n+ **duration:** Overall duration in seconds.\n\n+ **vs_initial:** If step is vs. initial or previous. \n[Default: False]\n\n+ **time_interval:** Maximum time interval between points in seconds. \n[Default: 1]\n\n+ **current_interval:** Maximum time interval between points in Amps. \n[Default: 0.001]\n\n+ **sweep:** Defines whether the spacing between frequencies is logarithmic ('log') or linear ('lin'). \n[Default: 'log'] \n\n+ **repeat:** Number of times to repeat the measurement and average the values for each frequency. \n[Default: 1]\n\n+ **correction:** Drift correction. \n[Default: False]\n\n+ **wait:** Adds a delay before the measurement at each frequency. The delay is expressed as a fraction of the period. \n[Default: 0]\n    \n#### GEIS\nPerforms a Galvanostatic Electrochemical Impedance Spectroscopy\n\n##### Params\n+ **current:** Initial current in Ampere.\n\n+ **amplitude_current:** Sinus amplitude in Ampere.\n\n+ **initial_frequency**: Initial frequency in Hertz.\n       \n+ **final_frequency:** Final frequency in Hertz.\n\n+ **frequency_number:** Number of frequencies.\n\n+ **duration:** Overall duration in seconds.\n\n+ **vs_initial:** If step is vs. initial or previous. \n[Default: False]\n\n+ **time_interval:** Maximum time interval between points in seconds. \n[Default: 1]\n\n+ **current_interval:** Maximum time interval between points in Amps. \n[Default: 0.001]\n\n+ **sweep:** Defines whether the spacing between frequencies is logarithmic ('log') or linear ('lin'). \n[Default: 'log'] \n\n+ **repeat:** Number of times to repeat the measurement and average the values for each frequency. \n[Default: 1]\n\n+ **correction:** Drift correction. \n[Default: False]\n\n+ **wait:** Adds a delay before the measurement at each frequency. The delay is expressed as a fraction of the period. \n[Default: 0]\n    \n#### JV_Scan\nPerforms a JV scan.\n\n##### Params\n+ **start:** Start voltage. \n[Default: 0]\n\n+ **end:** End voltage.\n\n+ **step:** Voltage step. \n[Default: 0.01]\n\n+ **rate:** Scan rate in V/s. \n[Default: 0.01]\n\n+ **average:** Average over points. \n[Default: False]\n\n\n#### MPP_Tracking\nPerforms MPP tracking.\n\n##### Params\n+ **run_time:** Run time in seconds.\n\n+ **init_vmpp:** Initial v_mpp.\n\n+ **probe_step:** Voltage step for probe. \n[Default: 0.01 V]\n\n+ **probe_points:** Number of data points to collect for probe. \n[Default: 5]\n\n+ **probe_interval:** How often to probe in seconds. \n[Default: 2]\n\n+ **record_interval:** How often to record a data point in seconds. \n[Default: 1]\n\n\n#### MPP\nRuns MPP tracking, finding the initial Vmpp by first measuring Voc, then performing a JV scan from 0 to Voc.\n\n##### Params\n+ **run_time:** Run time in seconds.\n\n+ **probe_step:** Voltage step for probe. \n[Default: 0.01 V]\n\n+ **probe_points:** Number of data points to collect for probe. \n[Default: 5]\n\n+ **probe_interval:** How often to probe in seconds. \n[Default: 2]\n\n+ **record_interval:** How often to record a data point in seconds. \n[Default: 1]\n\n\n#### MPP Cycles\nRuns multiple MPP cycles, performing Voc and JV scans at the beginning of each.\n\n##### Params\n+ **run_time:** Run time in seconds\n\n+ **scan_interval:** How often to perform a JV scan.\n\n+ **probe_step:** Voltage step for probe. [Default: 0.01 V]\n\n+ **probe_points:** Number of data points to collect for probe. [Default: 5]\n\n+ **probe_interval:** How often to probe in seconds. [Default: 2]\n\n+ **record_interval:** How often to record a data point in seconds. [Default: 1]\n\n### Find Devices\nA convenience script for finding connected devices.\n\n#### Use\nFrom a terminal run `python -m easy_biologic.find_devices`.\n\n## Low Level API\nThe low level API gives direct control of the Biologic device using the provided DLL libraries. The subpackage contains five modules.\n\n### EC Lib\nContains methods converting the `BL_*` DLL functions for use, enumeration classes to encapsulate program and device states, and C Structures for sending and receiving data from th device.\n\n#### Methods\n+ **connect( address, timeout = 5 ):** Connects to the device at the given address.\n\n+ **disconnect( idn ):** Disconnects given device.\n\n+ **is_connected( address ):** Checks if the device at the given address is connected.\n\n+ **is_channel_connected( idn, ch ):** Checks whether the given device channel is connected.\n\n+ **get_channels( idn, length = 16 ):** Returns a list of booleans of whether the cahnnel at the index exists.\n\n+ **channel_info( idn, ch ):** Returns a ChannelInfo struct of the given device channel.\n\n+ **get_hardware_configuration( idn, ch ):** Returns a HarwareConf struct of the given device channel.\n\n+ **set_hardware_configuration( idn, ch, mode, connection ):** Sets the hardware configuration of the given device channel.\n\n+ **load_technique( idn, ch, technique, params, first = True, last = True, verbose = False ):** \nLoads the technique with parameter on the given device channel.\n\n+ **create_parameter( name, value, index, kind = None ):** \nCreates an EccParam struct.\n\n+ **update_paramters( idn, ch, technique, params, tech_index = 0 ):** \nUpdates the paramters of a technique on teh given device channel.\n\n+ **cast_parameters( parameters, types ):** Cast parameters to given types.\n\n+ **start_channel( idn, ch ):** Starts the given device channel.\n\n+ **start_channels( idn, ch ):** Starts the given device channels.\n\n+ **stop_channel( idn, ch ):** Stops the given device channel.\n\n+ **stop_channels( idn, chs ):** Stops the given device channels.\n\n+ **get_values( idn, ch ):** Gets the current values and states of the given device channel.\n\n+ **raise_exception( err ):** Raises an exception based on a calls error code.\n\n+ **is\\_in\\_SP300\\_family( device_code ):** Determines if the given device is in the SP300 device family.\n\n#### Enum Classes\n+ **DeviceCodes:** Device code for identifying model.<br>\nValues: [ KBIO_DEV_VMP, KBIO_DEV_VMP2, KBIO_DEV_MPG, KBIO_DEV_BISTAT, KBIO_DEV_MCS_200, KBIO_DEV_VMP3, KBIO_DEV_VSP, KBIO_DEV_HCP803, KBIO_DEV_EPP400, KBIO_DEV_EPP4000, KBIO_DEV_BISTAT2, KBIO_DEV_FCT150S, KBIO_DEV_VMP300, KBIO_DEV_SP50, KBIO_DEV_SP150, KBIO_DEV_FCT50S, KBIO_DEV_SP300, KBIO_DEV_CLB500, KBIO_DEV_HCP1005, KBIO_DEV_CLB2000, KBIO_DEV_VSP300, KBIO_DEV_SP200, KBIO_DEV_MPG2, KBIO_DEV_ND1, KBIO_DEV_ND2, KBIO_DEV_ND3, KBIO_DEV_ND4, KBIO_DEV_SP240, KBIO_DEV_MPG205, KBIO_DEV_MPG210, KBIO_DEV_MPG220, KBIO_DEV_MPG240, KBIO_DEV_UNKNOWN ]\n\n+ **DeviceCodeDescriptions:** Description of DeviceCodes. <br>\nValues: [ KBIO_DEV_VMP, KBIO_DEV_VMP2, KBIO_DEV_MPG, KBIO_DEV_BISTAT, KBIO_DEV_MCS_200, KBIO_DEV_VMP3, KBIO_DEV_VSP, KBIO_DEV_HCP803, KBIO_DEV_EPP400, KBIO_DEV_EPP4000, KBIO_DEV_BISTAT2, KBIO_DEV_FCT150S, KBIO_DEV_VMP300, KBIO_DEV_SP50, KBIO_DEV_SP150, KBIO_DEV_FCT50S, KBIO_DEV_SP300, KBIO_DEV_CLB500, KBIO_DEV_HCP1005, KBIO_DEV_CLB2000, KBIO_DEV_VSP300, KBIO_DEV_SP200, KBIO_DEV_MPG2, KBIO_DEV_ND1, KBIO_DEV_ND2, KBIO_DEV_ND3, KBIO_DEV_ND4, KBIO_DEV_SP240, KBIO_DEV_MPG205, KBIO_DEV_MPG210, KBIO_DEV_MPG220, KBIO_DEV_MPG240, KBIO_DEV_UNKNOWN ]\n\n+ **IRange:** Current ranges. <br>\nValues: [ p100, n1, n10, n100, u1, u10, u100, m1, m10, m100, a1, KEEP, BOOSTER, AUTO ]\n\n+ **ERange:** Voltage ranges. <br>\nValues: [ v2_5, v5, v10, AUTO ]\n\n+ **ElectrodeConnection:** Whether the electrode is in standard or grounded mode.<br>\nValues: [ STANDARD, GROUNDED ]\n\n+ **ChannelMode:** Whether the device is floating or grounded. <br>\nValues: [ GROUNDED, FLOATING ]\n\n+ **TechniqueId:** ID of the technique. (Not fully implemented.) <br>\nValues: [ NONE, OCV, CA, CP, CV, PEIS, CALIMIT ]\n\n+ **ChannelState:** State of the channel. <br>\nValues: [ STOP, RUN, PAUSE ]\n\n+ **ParameterType:** Type of a parameter. <br>\nValues: [ INT32, BOOLEAN, SINGLE, FLOAT ]\n(FLOAT is an alias of SINGLE.)\n\n#### Structures\n+ **DeviceInfo:** Information representing the device. Used by `connect()`. <br>\nFields: [ DeviceCode, RAMSize, CPU, NumberOfChannles, NumberOfSlots, FirmwareVersion, FirmwareDate_yyyy, FirmwareDate_mm, FirmwareDate_dd, HTdisplayOn, NbOfConnectedPC ]\n\n+ **ChannelInfo:** Information representing a device channel. Used by `channel_info()`. <br>\nFields: [ Channel, BoardVersion, BoardSerialNumber, FirmwareVersion, XilinxVersion, AmpCode, NbAmps, Lcboard, Zboard, RESERVED, MemSize, State, MaxIRange, MinIRange, MaxBandwidth, NbOfTechniques ]\n\n+ **HardwareConf:** Hardware configuration information for a channel.<br>\nFields: [ Conn, Ground ]\n\n+ **EccParam:** A technique parameter. <br>\nFields: [ ParamStr, ParamType, ParamVal, ParamIndex ]\n\n+ **EccParams:** A bundle of technique parameters. <br>\nFields: [ len, pParams ]\n\n+ **CurrentValues:** Values measured from and states of the device. <br>\nFields: [ State, MemFilled, TimeBase, Ewe, EweRangeMin, EweRangeMax, Ece, EceRangeMin, EceRangeMax, Eoverflow, I, IRange, Ioverflow, ElapsedTime, Freq, Rcomp, Saturation, OptErr, OptPos ]\n\n+ **DataInfo:** Metadata of measured data. <br>\nFields: [ IRQskipped, NbRows, NbCols, TechniqueIndex, TechniqueID, processIndex, loop, StartTime, MuxPad ]\n\n#### Constants\n+ **VMP3_DEVICE_FAMILY:** Set of DeviceCodes in the VMP3 device family.<br>\n{ DeviceCodes.KBIO_DEV_VMP2, DeviceCodes.KBIO_DEV_VMP3, DeviceCodes.KBIO_DEV_BISTAT, DeviceCodes.KBIO_DEV_BISTAT2, DeviceCodes.KBIO_DEV_MCS_200, DeviceCodes.KBIO_DEV_VSP, DeviceCodes.KBIO_DEV_SP50, DeviceCodes.KBIO_DEV_SP150, DeviceCodes.KBIO_DEV_FCT50S, DeviceCodes.KBIO_DEV_FCT150S, DeviceCodes.KBIO_DEV_CLB500, DeviceCodes.KBIO_DEV_CLB2000, DeviceCodes.KBIO_DEV_HCP803, DeviceCodes.KBIO_DEV_HCP1005, DeviceCodes.KBIO_DEV_MPG2, DeviceCodes.KBIO_DEV_MPG205, DeviceCodes.KBIO_DEV_MPG210, DeviceCodes.KBIO_DEV_MPG220, DeviceCodes.KBIO_DEV_MPG240 }\n\n+ **SP300_DEVICE_FAMILY:** Set of DeviceCodes in the SP300 device family.<br>\n{ DeviceCodes.KBIO_DEV_SP200, DeviceCodes.KBIO_DEV_SP300, DeviceCodes.KBIO_DEV_VSP300, DeviceCodes.KBIO_DEV_VMP300, DeviceCodes.KBIO_DEV_SP240 }\n\n### Data Parser\nParses data received from a technique and contains technique fields for different device types.\n\n#### Methods\n+ **parse( data, info, fields = None, device = None ):** Parses data received from a technique.\n\n+ **calculate_time( t_high, t_low, data_info, current_value ):** Calculates elapsed time from time data.\n\n#### Classes\n+ **VMP3_Fields:** Contains technqiue fields for VMP3 devices. \n(Not all techniques are implemented)\nProperties: [ OCV, CP, CA, CPLIMIT, CALIMIT, CV, PEIS ]\n\n+ **SP300_Fields:** Contains technqiue fields for SP-300 devices. \n(Not all techniques are implemented)\nProperties: [ OCV, CP, CA, CPLIMIT, CALIMIT, CV, PEIS ]\n\n### EC Find\nImplements the BL Find DLL.\n\n#### Methods\nAll BL Find DLL functions are implemented under the same name.\n\n+ **find_devices( connection = None ):** Finds conencted devices.\n\n### Technique Fields\nParameter types for techniques. (Not all techniques are implemented.)\n\n#### Classes\n+ OCV\n+ CV\n+ CA\n+ CALIMIT\n\n### EC Errors\nImplements EC errors.\n\n#### Classes\n+ **EcError( value = None, code = None, message = None )** \n\n## Example\n\nA basic example running an MPP program on channels 0 - 7 for 10 minutes.\n```python\nimport easy_biologic as ebl\nimport easy_biologic.base_programs as blp\n\n\n# create device\nbl = ebl.BiologicDevice( '192.168.1.2' )\n\n# create mpp program\nparams = {\n\t'run_time': 10* 60\t\t\n}\n\nmpp = blp.MPP(\n    bl,\n    params, \t\n    channels = [ 0, 1, 2, 3, 4, 5, 6 ]        \n)\n\n# run program\nmpp.run( 'data' )\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "biologic",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "easy-biologic",
    "package_url": "https://pypi.org/project/easy-biologic/",
    "platform": null,
    "project_url": "https://pypi.org/project/easy-biologic/",
    "project_urls": {
      "Bug Tracker": "https://github.com/bicarlsen/easy-biologic/issues",
      "Source Code": "https://github.com/bicarlsen/easy-biologic"
    },
    "release_url": "https://pypi.org/project/easy-biologic/0.3.4/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Controller class for communicating with BioLogic devices.",
    "version": "0.3.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14555054,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23c6454d4b528e89c6cc280ba945fcf68aaf20c9a184e247d9e508ee7d2daf50",
          "md5": "3339b2157c09bbb627e7c8a7a5456d58",
          "sha256": "433390b4c742155e0172997ebdd02669918477ea37b380d5426a7fe0c098f00b"
        },
        "downloads": -1,
        "filename": "easy_biologic-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3339b2157c09bbb627e7c8a7a5456d58",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 51796,
        "upload_time": "2019-10-18T11:45:39",
        "upload_time_iso_8601": "2019-10-18T11:45:39.002858Z",
        "url": "https://files.pythonhosted.org/packages/23/c6/454d4b528e89c6cc280ba945fcf68aaf20c9a184e247d9e508ee7d2daf50/easy_biologic-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9c44f220a0860090c117f930dfef3bcaa99d18d9976b041cfb6ccbee1e6bbf8",
          "md5": "3444b4faaa6b3318837b7a1be8c93a61",
          "sha256": "903008d632dc9497150fae734ff5390476e28091cb4523b39967ea1258efd8ac"
        },
        "downloads": -1,
        "filename": "easy-biologic-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3444b4faaa6b3318837b7a1be8c93a61",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26799,
        "upload_time": "2019-10-18T11:45:41",
        "upload_time_iso_8601": "2019-10-18T11:45:41.347802Z",
        "url": "https://files.pythonhosted.org/packages/f9/c4/4f220a0860090c117f930dfef3bcaa99d18d9976b041cfb6ccbee1e6bbf8/easy-biologic-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13cc12cef1a6bd3203d1a3e92a290a7bffab8d6189d1a219c629d6d89d45ec89",
          "md5": "778a91ea0d96d829a5d98c22e2cef681",
          "sha256": "d6e83f200b8adaca4588cbd350c876415b9bf50ff0a135c93598e012af84769c"
        },
        "downloads": -1,
        "filename": "easy_biologic-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "778a91ea0d96d829a5d98c22e2cef681",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 53855,
        "upload_time": "2019-10-31T14:25:16",
        "upload_time_iso_8601": "2019-10-31T14:25:16.971158Z",
        "url": "https://files.pythonhosted.org/packages/13/cc/12cef1a6bd3203d1a3e92a290a7bffab8d6189d1a219c629d6d89d45ec89/easy_biologic-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a29356f4563238c8bf20a938fd93b9c821488de2917e7be9752e93472e9067b",
          "md5": "c2d236dc94fb3a83c67b86ae7b1d8943",
          "sha256": "ff5d4ce95271f3268dbd7fff3dc07c16f7a92f9f30bc12154c7f7f1215a6245b"
        },
        "downloads": -1,
        "filename": "easy-biologic-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c2d236dc94fb3a83c67b86ae7b1d8943",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28389,
        "upload_time": "2019-10-31T14:25:19",
        "upload_time_iso_8601": "2019-10-31T14:25:19.571232Z",
        "url": "https://files.pythonhosted.org/packages/0a/29/356f4563238c8bf20a938fd93b9c821488de2917e7be9752e93472e9067b/easy-biologic-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "636867792daf3989e34bab6a601c1c355cb68a2db086f8801df6951b194962c8",
          "md5": "9826aaaba3694a735470b863e724c024",
          "sha256": "447dc90fed1bc86cfee142fa66331b48581e1cfa9083e467802c98a37361bbfc"
        },
        "downloads": -1,
        "filename": "easy_biologic-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9826aaaba3694a735470b863e724c024",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 53833,
        "upload_time": "2019-10-31T15:28:56",
        "upload_time_iso_8601": "2019-10-31T15:28:56.944332Z",
        "url": "https://files.pythonhosted.org/packages/63/68/67792daf3989e34bab6a601c1c355cb68a2db086f8801df6951b194962c8/easy_biologic-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a357589ff329604a8debe5584f663cd59388d618540e2fb262762001cb0becf0",
          "md5": "640a51977dd493febe8dcc6f584851e3",
          "sha256": "9fd54b032e71bfa5eafa9dc09ee45c5b0529f29f112511c477372136a58dda69"
        },
        "downloads": -1,
        "filename": "easy-biologic-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "640a51977dd493febe8dcc6f584851e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28379,
        "upload_time": "2019-10-31T15:28:58",
        "upload_time_iso_8601": "2019-10-31T15:28:58.875029Z",
        "url": "https://files.pythonhosted.org/packages/a3/57/589ff329604a8debe5584f663cd59388d618540e2fb262762001cb0becf0/easy-biologic-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0582e42644b048607dfd3b45ba100d7aa20382ffba869883d2d3ca58c762f770",
          "md5": "98840982f94cadc171810796331e77b5",
          "sha256": "548171cb7e9f9387b7195ef29e1bc8bb08f0f6efb9febb81322b512d771bd84d"
        },
        "downloads": -1,
        "filename": "easy_biologic-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98840982f94cadc171810796331e77b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5978526,
        "upload_time": "2019-10-31T16:18:27",
        "upload_time_iso_8601": "2019-10-31T16:18:27.421844Z",
        "url": "https://files.pythonhosted.org/packages/05/82/e42644b048607dfd3b45ba100d7aa20382ffba869883d2d3ca58c762f770/easy_biologic-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9e5da927501f48cdcf8969244b3ae29751f24b1124315d8f6b97c887e2e78a6",
          "md5": "5aea068e6a4ab9ed55dee0ebbf2ed900",
          "sha256": "b016c4505817030575593bb3c1db36f6b81db11d1da63c4bf1155f266ad82713"
        },
        "downloads": -1,
        "filename": "easy-biologic-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "5aea068e6a4ab9ed55dee0ebbf2ed900",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5878135,
        "upload_time": "2019-10-31T16:18:31",
        "upload_time_iso_8601": "2019-10-31T16:18:31.554371Z",
        "url": "https://files.pythonhosted.org/packages/d9/e5/da927501f48cdcf8969244b3ae29751f24b1124315d8f6b97c887e2e78a6/easy-biologic-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18131ff6838d36bb5b032f9d3124cc9ac12ceeafd87eb987f04d063458296889",
          "md5": "720ca2a76441dd241d7686a81a783209",
          "sha256": "a1fccd4eb39eff1e1b097482350607ded315161ff8a23d89cc3755d7f92ae54a"
        },
        "downloads": -1,
        "filename": "easy_biologic-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "720ca2a76441dd241d7686a81a783209",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5984655,
        "upload_time": "2020-02-05T16:27:47",
        "upload_time_iso_8601": "2020-02-05T16:27:47.498247Z",
        "url": "https://files.pythonhosted.org/packages/18/13/1ff6838d36bb5b032f9d3124cc9ac12ceeafd87eb987f04d063458296889/easy_biologic-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84bf615526d7be7d5bfe61f5c38a85e0b4c161c6914051a857c4e7e882839a69",
          "md5": "b7fc1d6de2c952dc8aa17c2e847782ad",
          "sha256": "5a12ab30af067e2fa36b57c59d0d77b0cf3efe8ceb05866a24035c93fa7cde39"
        },
        "downloads": -1,
        "filename": "easy-biologic-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b7fc1d6de2c952dc8aa17c2e847782ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5884388,
        "upload_time": "2020-02-05T16:27:50",
        "upload_time_iso_8601": "2020-02-05T16:27:50.254740Z",
        "url": "https://files.pythonhosted.org/packages/84/bf/615526d7be7d5bfe61f5c38a85e0b4c161c6914051a857c4e7e882839a69/easy-biologic-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25d8558a1a6e28b0e8a405b01314003bb96c7b1b6a8eee751aaa8de7608fee0a",
          "md5": "fd527d0a595ff91035163d880a119e3a",
          "sha256": "b194d8d2765bc5ded1b1e27d3634b6cc8e308d7a1bd782166882356b459905e0"
        },
        "downloads": -1,
        "filename": "easy_biologic-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fd527d0a595ff91035163d880a119e3a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5984665,
        "upload_time": "2020-08-24T13:41:24",
        "upload_time_iso_8601": "2020-08-24T13:41:24.371197Z",
        "url": "https://files.pythonhosted.org/packages/25/d8/558a1a6e28b0e8a405b01314003bb96c7b1b6a8eee751aaa8de7608fee0a/easy_biologic-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3164edf569339c2a9548b4b388df99116e27e2829ec3609e4a0497fee05296ff",
          "md5": "d2e6a1498b05dbc40c4ae0baadb244ca",
          "sha256": "7f55ee0ac8b483f2181014117a3dd83b829453f94e18726bf424d92875ecf49d"
        },
        "downloads": -1,
        "filename": "easy-biologic-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "d2e6a1498b05dbc40c4ae0baadb244ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5884473,
        "upload_time": "2020-08-24T13:41:27",
        "upload_time_iso_8601": "2020-08-24T13:41:27.268716Z",
        "url": "https://files.pythonhosted.org/packages/31/64/edf569339c2a9548b4b388df99116e27e2829ec3609e4a0497fee05296ff/easy-biologic-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e260055fa815d14d77737fe5856f50e57c1d897eb71735610c2ef0aa1967bd8d",
          "md5": "7c01b0472f5acf929838849926f498f1",
          "sha256": "7f69fcd8fc1cbb5a96a16983f4c2eb5d4c1046797a30d84014de553d5a095fc0"
        },
        "downloads": -1,
        "filename": "easy_biologic-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7c01b0472f5acf929838849926f498f1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6082915,
        "upload_time": "2020-10-16T18:19:38",
        "upload_time_iso_8601": "2020-10-16T18:19:38.831076Z",
        "url": "https://files.pythonhosted.org/packages/e2/60/055fa815d14d77737fe5856f50e57c1d897eb71735610c2ef0aa1967bd8d/easy_biologic-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "360a6a4c58c9149802c89f541e601ef10580035ea97780b7f0e0c7f40cc12aad",
          "md5": "f6cb75da5f336749bc2dacd7b8d4709b",
          "sha256": "633e91758ae6805a448b52d7bbfd51a54e09e8fcf5796056206fad74522e3735"
        },
        "downloads": -1,
        "filename": "easy-biologic-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "f6cb75da5f336749bc2dacd7b8d4709b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6001488,
        "upload_time": "2020-10-16T18:19:46",
        "upload_time_iso_8601": "2020-10-16T18:19:46.342453Z",
        "url": "https://files.pythonhosted.org/packages/36/0a/6a4c58c9149802c89f541e601ef10580035ea97780b7f0e0c7f40cc12aad/easy-biologic-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b26e08d7b186ccedab510d63861c473b975325ef74e998926c2bc95fcd95cd16",
          "md5": "0abada3c55165de1675a56e82be0e3b6",
          "sha256": "e17764be7d014ea6d6e6295d42000dea512afece0a64baa4136c09882c079219"
        },
        "downloads": -1,
        "filename": "easy_biologic-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0abada3c55165de1675a56e82be0e3b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6085032,
        "upload_time": "2020-11-06T12:42:43",
        "upload_time_iso_8601": "2020-11-06T12:42:43.102853Z",
        "url": "https://files.pythonhosted.org/packages/b2/6e/08d7b186ccedab510d63861c473b975325ef74e998926c2bc95fcd95cd16/easy_biologic-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94eef0a15afcfcf612efadf5a500afa525089f9ff00616cbedd6f37760df104c",
          "md5": "f8207ef42b7a51286a32d684de2cd3f8",
          "sha256": "5b58b3f0ca0845764c7cbc27faa02601aabb67b3d6d482dd6a96d3f71341efd5"
        },
        "downloads": -1,
        "filename": "easy-biologic-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f8207ef42b7a51286a32d684de2cd3f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5987492,
        "upload_time": "2020-11-06T12:42:47",
        "upload_time_iso_8601": "2020-11-06T12:42:47.906292Z",
        "url": "https://files.pythonhosted.org/packages/94/ee/f0a15afcfcf612efadf5a500afa525089f9ff00616cbedd6f37760df104c/easy-biologic-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f88dc96020bf9e2b5d4033d248d6622cdbbe848b9362d3c3d0a785083fc893f0",
          "md5": "9ca488ed748770febd59a2d37f8871a6",
          "sha256": "8145dedfe606ce9d190a1ac3e53338c458a0bbe6b00da271d9dd4565ebd4239e"
        },
        "downloads": -1,
        "filename": "easy_biologic-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9ca488ed748770febd59a2d37f8871a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6085007,
        "upload_time": "2020-11-06T15:02:43",
        "upload_time_iso_8601": "2020-11-06T15:02:43.931932Z",
        "url": "https://files.pythonhosted.org/packages/f8/8d/c96020bf9e2b5d4033d248d6622cdbbe848b9362d3c3d0a785083fc893f0/easy_biologic-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8699f6bcb359f1791c5354db431fecc37796447fb8a7948b270967ac2fad0e21",
          "md5": "88e4d71c2512e8cb53764d4d5ef43b0b",
          "sha256": "f9c0b23b968589be46326dbbc3cb04f1765fb04d6298b015c7009c908af2122e"
        },
        "downloads": -1,
        "filename": "easy-biologic-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "88e4d71c2512e8cb53764d4d5ef43b0b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6003668,
        "upload_time": "2020-11-06T15:02:52",
        "upload_time_iso_8601": "2020-11-06T15:02:52.533737Z",
        "url": "https://files.pythonhosted.org/packages/86/99/f6bcb359f1791c5354db431fecc37796447fb8a7948b270967ac2fad0e21/easy-biologic-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4f99e65c7de36b42f6dd9295b3ac6bd6ecb58793b33892f40483ad8616ade1f",
          "md5": "f6f730a68792a3d763febe2edd33b7da",
          "sha256": "45d143618056a5bb229efd01709d12a2f81311b360897a719b598c3b519cd7a8"
        },
        "downloads": -1,
        "filename": "easy_biologic-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f6f730a68792a3d763febe2edd33b7da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6085333,
        "upload_time": "2021-06-09T17:11:06",
        "upload_time_iso_8601": "2021-06-09T17:11:06.700290Z",
        "url": "https://files.pythonhosted.org/packages/e4/f9/9e65c7de36b42f6dd9295b3ac6bd6ecb58793b33892f40483ad8616ade1f/easy_biologic-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b31111dc22ff59ec91e898945881e4994fecc925f6b53359e0bcdfb8362dc4f",
          "md5": "cb8b01f8d8856fa4cb74eeedb05c174e",
          "sha256": "76668733478300dfbe1ac30972395436bc3d3dd1f0d3d293ff569fce02635333"
        },
        "downloads": -1,
        "filename": "easy-biologic-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cb8b01f8d8856fa4cb74eeedb05c174e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5992362,
        "upload_time": "2021-06-09T17:11:10",
        "upload_time_iso_8601": "2021-06-09T17:11:10.448825Z",
        "url": "https://files.pythonhosted.org/packages/5b/31/111dc22ff59ec91e898945881e4994fecc925f6b53359e0bcdfb8362dc4f/easy-biologic-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3df999935c27ef17e93a6ab118b4b9a3576301d1f5e57d88f155d3e37555010d",
          "md5": "ad81250974aed76f452564213bb3d844",
          "sha256": "b9fada02e32b589a018cad6314936600fdddf5286922167c6fec6ca17216a634"
        },
        "downloads": -1,
        "filename": "easy_biologic-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad81250974aed76f452564213bb3d844",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6085539,
        "upload_time": "2021-06-10T09:03:53",
        "upload_time_iso_8601": "2021-06-10T09:03:53.016011Z",
        "url": "https://files.pythonhosted.org/packages/3d/f9/99935c27ef17e93a6ab118b4b9a3576301d1f5e57d88f155d3e37555010d/easy_biologic-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fefc11460d54f2ecaea78ab1bdde77657541baebd9616f31b6d3e8efb3e0f976",
          "md5": "a60ca1be3c97ec3a196b57552916f5e7",
          "sha256": "b979a6585ab0d16167fd80a2fa23ae6111d42eaf08cf34b3efe88589a80e1d17"
        },
        "downloads": -1,
        "filename": "easy-biologic-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a60ca1be3c97ec3a196b57552916f5e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5992621,
        "upload_time": "2021-06-10T09:04:05",
        "upload_time_iso_8601": "2021-06-10T09:04:05.052106Z",
        "url": "https://files.pythonhosted.org/packages/fe/fc/11460d54f2ecaea78ab1bdde77657541baebd9616f31b6d3e8efb3e0f976/easy-biologic-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2bdfa13f32fd0e2e25d495c27f5882b5943d33341aa7c647195e33b7003134a",
          "md5": "528e64cc802f7c4b6dc6c673c4087a6b",
          "sha256": "26e959dd8569c2df97cfec795e63b71dc8ef957ee4b208f586f522d625a6fb4d"
        },
        "downloads": -1,
        "filename": "easy_biologic-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "528e64cc802f7c4b6dc6c673c4087a6b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6085458,
        "upload_time": "2021-06-12T17:50:30",
        "upload_time_iso_8601": "2021-06-12T17:50:30.015574Z",
        "url": "https://files.pythonhosted.org/packages/b2/bd/fa13f32fd0e2e25d495c27f5882b5943d33341aa7c647195e33b7003134a/easy_biologic-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20b486d5ff0c3c9ce28d61419dd9e8053b9be9991cf4dee8a3c2306e39f0f81c",
          "md5": "c42a438e4c719738a2156168314e0c39",
          "sha256": "4bd94b72872e5fd6513e878cef4335c95965d6ab88c09ca602219c76062db545"
        },
        "downloads": -1,
        "filename": "easy-biologic-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c42a438e4c719738a2156168314e0c39",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5992498,
        "upload_time": "2021-06-12T17:50:36",
        "upload_time_iso_8601": "2021-06-12T17:50:36.359427Z",
        "url": "https://files.pythonhosted.org/packages/20/b4/86d5ff0c3c9ce28d61419dd9e8053b9be9991cf4dee8a3c2306e39f0f81c/easy-biologic-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e96aaeeb3d6ccfa532fcb99b3ba82633fc8b9a656b2e3c4086efd769d0a6fc3d",
          "md5": "6df009969c21c3c37389df74f1e92a99",
          "sha256": "4d31196c3971435ea267de6aea8b0b466bbaf6f166e2d03330456b91d2850d53"
        },
        "downloads": -1,
        "filename": "easy_biologic-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6df009969c21c3c37389df74f1e92a99",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23652765,
        "upload_time": "2021-07-21T06:30:56",
        "upload_time_iso_8601": "2021-07-21T06:30:56.106706Z",
        "url": "https://files.pythonhosted.org/packages/e9/6a/aeeb3d6ccfa532fcb99b3ba82633fc8b9a656b2e3c4086efd769d0a6fc3d/easy_biologic-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17f70aa042e7af40633effa21f5ad27e6b8bf2a389bc8280612b9a4a4842447a",
          "md5": "e8aa51b6a6c9a4ad815239b09df25e29",
          "sha256": "ac1640b3eca69bdbe7a6a1f1c7e50031a4d1190b5b181d1078768ad82d34ae05"
        },
        "downloads": -1,
        "filename": "easy-biologic-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e8aa51b6a6c9a4ad815239b09df25e29",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17407980,
        "upload_time": "2021-07-21T06:31:14",
        "upload_time_iso_8601": "2021-07-21T06:31:14.684437Z",
        "url": "https://files.pythonhosted.org/packages/17/f7/0aa042e7af40633effa21f5ad27e6b8bf2a389bc8280612b9a4a4842447a/easy-biologic-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09a7e88bf63ebf52314f8dd970da6114fbd4a48d76ae8282ccdaceb513502ca2",
          "md5": "78887d5018f204f49bdd9a63138d431c",
          "sha256": "4ac0c29267dc81ac71522a6d35caca08055b6e054b8dadb86037aacc87768e9d"
        },
        "downloads": -1,
        "filename": "easy_biologic-0.3.0.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "78887d5018f204f49bdd9a63138d431c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23652854,
        "upload_time": "2021-10-14T15:18:07",
        "upload_time_iso_8601": "2021-10-14T15:18:07.588950Z",
        "url": "https://files.pythonhosted.org/packages/09/a7/e88bf63ebf52314f8dd970da6114fbd4a48d76ae8282ccdaceb513502ca2/easy_biologic-0.3.0.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6814ee93494d3259a4aaf5de7615b4d899461f4a8ddff9df1630a0f4770c4cc2",
          "md5": "433c28d3a4e71b3e2560e2b85a3bfeed",
          "sha256": "a337a988c2fc31c2ad99c5a19515c13f500fc69499d488acc3aafe1a08dd1be1"
        },
        "downloads": -1,
        "filename": "easy-biologic-0.3.0.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "433c28d3a4e71b3e2560e2b85a3bfeed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17408141,
        "upload_time": "2021-10-14T15:18:39",
        "upload_time_iso_8601": "2021-10-14T15:18:39.704883Z",
        "url": "https://files.pythonhosted.org/packages/68/14/ee93494d3259a4aaf5de7615b4d899461f4a8ddff9df1630a0f4770c4cc2/easy-biologic-0.3.0.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "029c76a4f8bf1c7fc9c1121ce3723ed872af98bda68f37b432e948ff546082bc",
          "md5": "ad118e89de4021f98cfb1be7b691df54",
          "sha256": "e5769314371b914e3a190718f7ba6aa6dc3c9d04375ac3c20e56393e0b925f38"
        },
        "downloads": -1,
        "filename": "easy_biologic-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad118e89de4021f98cfb1be7b691df54",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23653960,
        "upload_time": "2021-12-03T08:56:02",
        "upload_time_iso_8601": "2021-12-03T08:56:02.813221Z",
        "url": "https://files.pythonhosted.org/packages/02/9c/76a4f8bf1c7fc9c1121ce3723ed872af98bda68f37b432e948ff546082bc/easy_biologic-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c2aeb25f48a64fc2b88abe2c816ef57339d94e7d5da3c9b90c7bbd4eb5d0272",
          "md5": "55132b3366a6a8f82b164b562a6ca53d",
          "sha256": "4293406e9581961e1e8750997555231f77ccf5cd3f414d9c0ff074aad70e61ae"
        },
        "downloads": -1,
        "filename": "easy-biologic-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "55132b3366a6a8f82b164b562a6ca53d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17420502,
        "upload_time": "2021-12-03T08:56:09",
        "upload_time_iso_8601": "2021-12-03T08:56:09.147248Z",
        "url": "https://files.pythonhosted.org/packages/9c/2a/eb25f48a64fc2b88abe2c816ef57339d94e7d5da3c9b90c7bbd4eb5d0272/easy-biologic-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf2693c6bf19dd1c24f79891a042abef0713e0be47d7946d33054431ba2f189d",
          "md5": "dd8d3f9cd293bfeba445c991d63e9011",
          "sha256": "86baf7a6b607de4b27208df4e9c642149557ed126774a65070bc97e512421d8e"
        },
        "downloads": -1,
        "filename": "easy_biologic-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dd8d3f9cd293bfeba445c991d63e9011",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23654087,
        "upload_time": "2021-12-03T22:39:12",
        "upload_time_iso_8601": "2021-12-03T22:39:12.249237Z",
        "url": "https://files.pythonhosted.org/packages/cf/26/93c6bf19dd1c24f79891a042abef0713e0be47d7946d33054431ba2f189d/easy_biologic-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2bb48e6305af6ce3042eb659bc755cd30f3aad1ba29e39106946da0f335d785",
          "md5": "fbb283eca1b553de1b4643c50b170f49",
          "sha256": "d1282cf542cad38fcefd1ac5b321fa3b620e1976ff8441d9237a3ce38e7708b5"
        },
        "downloads": -1,
        "filename": "easy-biologic-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fbb283eca1b553de1b4643c50b170f49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17420841,
        "upload_time": "2021-12-03T22:39:17",
        "upload_time_iso_8601": "2021-12-03T22:39:17.552341Z",
        "url": "https://files.pythonhosted.org/packages/d2/bb/48e6305af6ce3042eb659bc755cd30f3aad1ba29e39106946da0f335d785/easy-biologic-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82409e36a0e5f1bbd898eede99c0513c990677ee747bdfb5b1b74f099cfaafbb",
          "md5": "adb1acb93e51e9aa31e70b00136e636b",
          "sha256": "66a0a89bc6baaed2158afd1b70606b010376610b344aaddc41e0a757d83ecb92"
        },
        "downloads": -1,
        "filename": "easy_biologic-0.3.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "adb1acb93e51e9aa31e70b00136e636b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23654979,
        "upload_time": "2022-03-25T14:24:08",
        "upload_time_iso_8601": "2022-03-25T14:24:08.530536Z",
        "url": "https://files.pythonhosted.org/packages/82/40/9e36a0e5f1bbd898eede99c0513c990677ee747bdfb5b1b74f099cfaafbb/easy_biologic-0.3.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9422471f255f32abb33b801d17b5e3e0f64c28cecb811e4a8679c048ecb1d0c2",
          "md5": "09c01848f8ec2227f25239e3ad997198",
          "sha256": "b0220cd9135a904b4b3eff9f2c0f2d157260566d20a56d4c93c65b02e5a32534"
        },
        "downloads": -1,
        "filename": "easy-biologic-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "09c01848f8ec2227f25239e3ad997198",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17421700,
        "upload_time": "2022-03-25T14:24:34",
        "upload_time_iso_8601": "2022-03-25T14:24:34.594494Z",
        "url": "https://files.pythonhosted.org/packages/94/22/471f255f32abb33b801d17b5e3e0f64c28cecb811e4a8679c048ecb1d0c2/easy-biologic-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9544327d8895856d9d9f7328cd1537de82c63bffc2083aa0946ec0abb57d811",
          "md5": "718de1796a3dc084429dd1b5fe4c910f",
          "sha256": "df9b1e2bf3edc04bbd4e1b312da6269e9792dc3d5d0ae733349eaad6a94a2b3b"
        },
        "downloads": -1,
        "filename": "easy_biologic-0.3.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "718de1796a3dc084429dd1b5fe4c910f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23655948,
        "upload_time": "2022-07-26T15:44:18",
        "upload_time_iso_8601": "2022-07-26T15:44:18.088686Z",
        "url": "https://files.pythonhosted.org/packages/e9/54/4327d8895856d9d9f7328cd1537de82c63bffc2083aa0946ec0abb57d811/easy_biologic-0.3.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "462d3666596805ebbd58666dc48a6c3ae26875b0a42fee28ca64385d7763778c",
          "md5": "d2c7499395410592a31a6ac75752b161",
          "sha256": "05afebafe80f77ca9d0a36e8f2db3b4a7674a39321988f3a93b1b67dfc190a66"
        },
        "downloads": -1,
        "filename": "easy-biologic-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d2c7499395410592a31a6ac75752b161",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17422984,
        "upload_time": "2022-07-26T15:44:28",
        "upload_time_iso_8601": "2022-07-26T15:44:28.460014Z",
        "url": "https://files.pythonhosted.org/packages/46/2d/3666596805ebbd58666dc48a6c3ae26875b0a42fee28ca64385d7763778c/easy-biologic-0.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e9544327d8895856d9d9f7328cd1537de82c63bffc2083aa0946ec0abb57d811",
        "md5": "718de1796a3dc084429dd1b5fe4c910f",
        "sha256": "df9b1e2bf3edc04bbd4e1b312da6269e9792dc3d5d0ae733349eaad6a94a2b3b"
      },
      "downloads": -1,
      "filename": "easy_biologic-0.3.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "718de1796a3dc084429dd1b5fe4c910f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 23655948,
      "upload_time": "2022-07-26T15:44:18",
      "upload_time_iso_8601": "2022-07-26T15:44:18.088686Z",
      "url": "https://files.pythonhosted.org/packages/e9/54/4327d8895856d9d9f7328cd1537de82c63bffc2083aa0946ec0abb57d811/easy_biologic-0.3.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "462d3666596805ebbd58666dc48a6c3ae26875b0a42fee28ca64385d7763778c",
        "md5": "d2c7499395410592a31a6ac75752b161",
        "sha256": "05afebafe80f77ca9d0a36e8f2db3b4a7674a39321988f3a93b1b67dfc190a66"
      },
      "downloads": -1,
      "filename": "easy-biologic-0.3.4.tar.gz",
      "has_sig": false,
      "md5_digest": "d2c7499395410592a31a6ac75752b161",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 17422984,
      "upload_time": "2022-07-26T15:44:28",
      "upload_time_iso_8601": "2022-07-26T15:44:28.460014Z",
      "url": "https://files.pythonhosted.org/packages/46/2d/3666596805ebbd58666dc48a6c3ae26875b0a42fee28ca64385d7763778c/easy-biologic-0.3.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}