{
  "info": {
    "author": "James Montgomery",
    "author_email": "jamesoneillmontgomery@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Romus\n\nRomus is a passion project of mine. I often have to deal with coding up simple conjugate models and gibbs samplers at work. This is useful for the variety of experimentation asks my data science team supports. I also use these models to help educate more junior data scientists about Bayesian statistics. This package is meant to serve a dual purpose as a tool for simple modeling and as an example for educational purposes.\n\nI'm open to all questions, feedback, commentary, and suggestions as long as they are constructive and polite! Discussions should always come in the form of git issues.\n\n### Authors\n\n**James Montgomery** - *Initial Work* - [jamesmontgomery.us](http://jamesmontgomery.us)\n\n### License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\n## About the Name\n\nWhy call the package Romus? Romulus and Remus were a famous pair of twins whose myth is tied to the founding of Rome. Conjugate distributions (or distributions closed under sampling) are pairs of distributions who have a special relationship that is sometimes useful in machine learning and statistics. Therefore I thought it would be fun to name my package after a famous pair of twins!\n\n## Getting Started\n\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes.\n\n### Installing\n\nFor a local installation, first git clone this repository. Then follow these instructions:\n\n```\npip install .\n```\n\nTo install from [pypi](#):\n\n```\npip install -U romus\n```\n\n## Testing\n\nTesting is an important part of creating maintainable, production grade code. Below are instructions for running unit and style tests as well as installing the necessary testing packages. Tests have intentionally been separated from the installable pypi package for a variety of reasons.\n\nMake sure you have the required testing packages:\n\n```\npip install -r requirements_test.txt\n```\n\n### Running the unit tests\n\nWe use the pytest framework for unit testing.\n\n```\npytest -vvl -s --cov romus --disable-pytest-warnings\n```\n\n### Running the style tests\n\nHaving neat and legible code is important. Having documentation is also important. We use pylint as our style guide framework. Many of our naming conventions follow directly from the literary sources they come from. This makes it easier to read the mathematical equations and see how they translate into the code. This sometimes forces us to break pep8 conventions for naming.\n\n```\npylint romus --disable=invalid-name\n```\n\n## Contributor's Guide\n\nHere are some basic guidelines for contributing.\n\n### Branch Strategy\n\nThis repository doesn't use a complicated branching strategy. Simply create a feature branch off of master. When the feature is ready to be integrated with master, submit a pull request. A pull request will re quire at least one peer review and approval from the repository owner.\n\n### Style Guide\n\nPlease stick to pep8 standards when for your code. Use numpy style docstrings.\n\n### Test Requirements\n\nPlease use pytest as your testing suite. You code should have >= 80% coverage.\n\n### Updating the Docs\n\n<!--\nsphinx-quickstart --ext-autodoc\n# comment conf.py file\n# add docs/.nojekyll file\n# update build dir in docs/Makefile\n# update static dir in docs/conf.py\n# create dummy docs/index.html\n-->\n\nUpdating the documentation is simple. First, let auto-docs check for updates to the package structure.\n\n```\ncd docs\nsphinx-apidoc -o . ../romus/\n```\n\nFinally, rebuild the html files.\n\n```\nmake html\n```\n\n## Acknowledgments\n\nA big thank you to Keegan Hines and Mack Sweeney both of who helped start me on my journey into Bayesian statistics.\n\n## TODO\n\nThis package is still in the development phase. Here I list some tasks that are still left to be completed...\n\n* Add ToC to README\n* Add gibbs samplers to package\n* Add mixture conjugate models to package\n* Fill out examples\n* Fill out model specification docs\n* Fill out distributions docs\n* Update docstrings\n  * module docstrings\n  * class docstrings\n  * function docstrings\n* Type Hints\n* Proper Test\n  * Units Tests\n  * Smoke Tests\n  * Integration Tests\n* Add docs\n* Add branch protection\n\n## Useful Resources\n\n### General\n\n* [Wikipedia](https://en.wikipedia.org/wiki/Conjugate_prior)\n* [Conjugate Compedndium](https://www.johndcook.com/CompendiumOfConjugatePriors.pdf)\n* [MAS3301 Bayesian Statistics W4](http://www.mas.ncl.ac.uk/~nmf16/teaching/mas3301/week4.pdf)\n* [MAS3301 Bayesian Statistics W5](http://www.mas.ncl.ac.uk/~nmf16/teaching/mas3301/week5.pdf)\n* [MIT18-05S14 Reading15a](https://ocw.mit.edu/courses/mathematics/18-05-introduction-to-probability-and-statistics-spring-2014/readings/MIT18_05S14_Reading15a.pdf)\n* [Conjugate families of distributions](http://halweb.uc3m.es/esp/Personal/personas/mwiper/docencia/English/PhD_Bayesian_Statistics/ch3_2009.pdf)\n\n### Distribution Specific\n\n* [The Conjugate Prior for the Normal Distribution](https://people.eecs.berkeley.edu/~jordan/courses/260-spring10/lectures/lecture5.pdf)\n* [Conjugate Bayesian analysis of the Gaussian distribution](https://www.cs.ubc.ca/~murphyk/Papers/bayesGauss.pdf)\n* [Notes on the Negative Binomial Distribution](https://www.johndcook.com/negative_binomial.pdf)\n* [Beta-Binomial vs Hypergeometric](https://stats.stackexchange.com/questions/311088/beta-binomial-as-conjugate-to-hypergeometric)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "romus",
    "package_url": "https://pypi.org/project/romus/",
    "platform": "any",
    "project_url": "https://pypi.org/project/romus/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/romus/0.0.1/",
    "requires_dist": [
      "numpy (==1.18.1)",
      "scipy (==1.4.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "Package for implementing bayesian deep conjugate models in python.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7367391,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ea09495f6eb3293724cd798f46e4e67e245ea87d6c66ad81dd026cf512e2367",
          "md5": "693e32ce0bf4c9720349f713eb2b8e19",
          "sha256": "bf8a88e8e913a5a7ca2940db37bb170ae52381e39b164061894e5abb247c47a8"
        },
        "downloads": -1,
        "filename": "romus-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "693e32ce0bf4c9720349f713eb2b8e19",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20113,
        "upload_time": "2020-06-01T01:46:52",
        "upload_time_iso_8601": "2020-06-01T01:46:52.135026Z",
        "url": "https://files.pythonhosted.org/packages/2e/a0/9495f6eb3293724cd798f46e4e67e245ea87d6c66ad81dd026cf512e2367/romus-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f68b0a04d3eb2b19d5743faebc878d2c2c886801f16262bed4f9e926a76ef1c",
          "md5": "7da65020abdf630d4df6f2bc801789c2",
          "sha256": "bf28c85b5eedc082c622e8445b5b4f186519cdd31f5d2c984feb80eb970d628c"
        },
        "downloads": -1,
        "filename": "romus-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7da65020abdf630d4df6f2bc801789c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 30869,
        "upload_time": "2020-06-01T01:46:54",
        "upload_time_iso_8601": "2020-06-01T01:46:54.112558Z",
        "url": "https://files.pythonhosted.org/packages/0f/68/b0a04d3eb2b19d5743faebc878d2c2c886801f16262bed4f9e926a76ef1c/romus-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ea09495f6eb3293724cd798f46e4e67e245ea87d6c66ad81dd026cf512e2367",
        "md5": "693e32ce0bf4c9720349f713eb2b8e19",
        "sha256": "bf8a88e8e913a5a7ca2940db37bb170ae52381e39b164061894e5abb247c47a8"
      },
      "downloads": -1,
      "filename": "romus-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "693e32ce0bf4c9720349f713eb2b8e19",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 20113,
      "upload_time": "2020-06-01T01:46:52",
      "upload_time_iso_8601": "2020-06-01T01:46:52.135026Z",
      "url": "https://files.pythonhosted.org/packages/2e/a0/9495f6eb3293724cd798f46e4e67e245ea87d6c66ad81dd026cf512e2367/romus-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f68b0a04d3eb2b19d5743faebc878d2c2c886801f16262bed4f9e926a76ef1c",
        "md5": "7da65020abdf630d4df6f2bc801789c2",
        "sha256": "bf28c85b5eedc082c622e8445b5b4f186519cdd31f5d2c984feb80eb970d628c"
      },
      "downloads": -1,
      "filename": "romus-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7da65020abdf630d4df6f2bc801789c2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 30869,
      "upload_time": "2020-06-01T01:46:54",
      "upload_time_iso_8601": "2020-06-01T01:46:54.112558Z",
      "url": "https://files.pythonhosted.org/packages/0f/68/b0a04d3eb2b19d5743faebc878d2c2c886801f16262bed4f9e926a76ef1c/romus-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}