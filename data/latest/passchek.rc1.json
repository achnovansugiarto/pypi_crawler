{
  "info": {
    "author": "Yevgeny Dyatlov",
    "author_email": "edyatl@yandex.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Utilities"
    ],
    "description": "![Passchek logo](https://svgshare.com/i/Lwy.svg)\n\n\n# Passchek\n\n\n> Passchek is a simple cli tool, checks if your password has been compromised.\n\n[![Version: v0.2](https://img.shields.io/badge/version-v0.2.1-blue)](https://github.com/edyatl/passchek)\n[![License: MIT](https://img.shields.io/badge/license-MIT-green)](https://github.com/edyatl/passchek/LICENSE)\n[![Python3](https://img.shields.io/badge/python-3.5%20%7C%203.6%20%7C%203.7-blue)](https://github.com/edyatl/passchek)\n\nPasschek is a python program for searching in [Troy Hunt's pwnedpassword](https://www.troyhunt.com/ive-just-launched-pwned-passwords-version-2/) API using the k-anonymity algorithm. \n\nPasschek was inspired by [jamesridgway](https://github.com/jamesridgway)/[pwnedpasswords.sh](https://github.com/jamesridgway/pwnedpasswords.sh) bash script.\n\n\n## Algorithm\n\n\n1. Hash the PASSWORD by SHA1.\n2. Split hash for 5 char prefix and 35 char suffix.\n3. Requests [Troy Hunt's pwnedpassword](https://www.troyhunt.com/ive-just-launched-pwned-passwords-version-2/) API for the prefix.\n4. Convert response to the dictionary with suffixes as keys and number of matches as values.\n5. And finally determine matches for initial PASSWORD by its hash suffix as a key.\n\n\n## Features\n\n\n- Checks one password or number of passwords.\n- Shows a text sentence about  compromising or just figures.\n- It can be used in shell pipes, it can read stdin.\n- It can display the SHA1 password hash in a tuple format (“prefix”, “suffix”) without an Internet request.\n\n\n## Usage\n\n\n```sh\n    Usage:\n        passchek.py [options] [<PASSWORD>]\n\n    Arguments:\n        PASSWORD Provide (password | passwords) as argument or leave blank to provide via stdin or prompt\n\n    Options:\n        -h, --help      Shows this help message and exit\n        -n, --num-only  Set output without accompanying text\n        -p, --pipe      For use in shell pipes, read stdin\n        -s, --sha1      Shows SHA1 hash in tuple (\"prefix\", \"suffix\") and exit\n        -v, --version   Shows current version of the program and exit\n```\n\n### Security Note\n\nPlease note that in case of using PASSWORD as command line argument it will be kept in .bash_history file in raw insecure format. Using via explicit prompt dialog is more secure and preferably.\n\n\n## Usage examples\n\n\nA) Call **passchek** without options and arguments, enter 'qwerty' as an example password. *Please note that when you are typing password via explicit prompt, nothing is displayed on the screen, this is normal and is used for security reasons.* After press Enter key you'll see a sentence in new line with number of matches in the pwnedpassword DB.\n\n```sh\n    $ python3 passchek.py \n    Enter password: \n    This password has appeared 3912816 times in data breaches.\n```\n\nB) Call **passchek** with option '-n' (--num-only) without arguments, enter 'qwerty' as an example password. After press Enter key you'll see a number in new line with matches in the pwnedpassword DB.\n\n```sh\n    $ python3 passchek.py -n \n    Enter password: \n    3912816\n```\n\nC) Call **passchek** with option '-s' (--sha1) without arguments, enter 'qwerty' as an example password. After press Enter key you'll see new line with the password hash in a tuple format (“prefix”, “suffix”).\n\n```sh\n    $ python3 passchek.py -s\n    Enter password: \n    ('B1B37', '73A05C0ED0176787A4F1574FF0075F7521E')\n```\n\nD) Call **passchek** with options '-ns' (--num-only --sha1) without arguments, enter 'qwerty' as an example password. After press Enter key you'll see new line with the password hash splited by space 'prefix suffix'.\n\n```sh\n    $ python3 passchek.py -ns\n    Enter password: \n    B1B37 73A05C0ED0176787A4F1574FF0075F7521E\n```\n\nE) Call **passchek** without options and with argument 'qwerty' as an example password. You'll see a sentence in new line with number of matches in the pwnedpassword DB. *Please note that using real password as an argument not recommended, for more details see [Security Note](#security-note).*\n\n```sh\n    $ python3 passchek.py qwerty\n    This password has appeared 3912816 times in data breaches.\n```\n\nF) Call **passchek** with option '-n' (--num-only) and with arguments 'qwerty', 'ytrewq', 'qazwsx' *(these three are very common weak passwords)* and 'jnfjdfksdjfbskjdeuhiseg' *(random typing)* as examples passwords. You'll see numbers in new lines with matches in the pwnedpassword DB. *Please don't forget about [Security Note](#security-note).*\n\n```sh\n    $ python3 passchek.py -n qwerty ytrewq qazwsx jnfjdfksdjfbskjdeuhiseg\n    3912816\n    33338\n    505344\n    0\n```\n\nG) Use **passchek** with options '-np' (--num-only --pipe) in pipe with `cat pass_list.txt` to check all passwords in text file (In this example text file was created as `ls .. > pass_list.txt` in the script dir). You'll see numbers in new lines with matches in the pwnedpassword DB. \n\n```sh\n    $ cat pass_list.txt | python3 passchek.py -np\n    21\n    8\n    0\n    0\n    0\n    0\n    0\n    0\n    457\n```\n\nH) Let's count a number of compromised passwords in the previous example 'G'. \n\n```sh\n    $ cat pass_list.txt | python3 passchek.py -np | grep -v '^0' | wc -l\n    3\n```\nSo three passwords in our list have been compromised.\n\nI) To determine these three weak passwords we need to know their line numbers in the text file.\n\n```sh\n    $ cat pass_list.txt | python3 passchek.py -np | grep -vn '^0'\n    1:21\n    2:8\n    9:457\n```\n\nJ) Now we can get a list of strong passwords just delete lines with compromised.\n\n```sh\n    $ sed -i '1d;2d;9d;' pass_list.txt | python3 passchek.py -np | grep -v '^0' | wc -l\n    0\n```\nSo no more weak passwords detected.\n\n\n## Installation\n\nYou can simple download one script file [passchek.py](./passchek/passchek.py) and use it with python3.\n\nOr try to install by pip.\n\nFirst check if package exists:\n\n```sh\n    $ python3 -m pip search passchek\n```\nInstall if package exists:\n\n```sh\n    $ python3 -m pip install --user passchek\n```\nOr just:\n```sh\n    $ pip3 install passchek\n```\n\n\n## Help\n\n\nFor help screen just provide `-h` or `--help` as a command line option.\n\nOption `-v` or `--version` shows current version.\n\n\n## Contributing\n\n\nThe main repository if the code is at https://github.com/edyatl/passchek\n\nI'm happy to take from you any patches, pull requests,  bug reports,  ideas about new functionality and so on.\n\n\n## Thanks\n\n\nThanks to [Troy Hunt](https://www.troyhunt.com) for collecting data and providing API.\n\nThanks to [James Ridgway](https://github.com/jamesridgway) for [pwnedpasswords.sh](https://github.com/jamesridgway/pwnedpasswords.sh) bash script.\n\n\n## Authors\n\n\nYevgeny Dyatlov ([@edyatl](https://github.com/edyatl))\n\n\n## License\n\n\nThis project is licensed under the MIT License.\n\nCopyright (c) 2020 Yevgeny Dyatlov ([@edyatl](https://github.com/edyatl))\n\nPlease see the [LICENSE](LICENSE) file for details.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/edyatl/passchek",
    "keywords": "passchek,password,pwned,troyhunt,github,k-anonymity,interactive,console,sha1,pwnedpassword,versions,virtualenv",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "passchek",
    "package_url": "https://pypi.org/project/passchek/",
    "platform": "",
    "project_url": "https://pypi.org/project/passchek/",
    "project_urls": {
      "Homepage": "https://github.com/edyatl/passchek"
    },
    "release_url": "https://pypi.org/project/passchek/0.2.1/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Passchek is a simple cli tool, checks if your password has been compromised.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7504960,
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5079fc444fa71d2a9381fe4eceef275c2fca26e814c700e6ac7b6ab6466c157f",
          "md5": "d9ffdff0341bd0bf71d9daac703c6599",
          "sha256": "c8888078deb4692784027db7964505aaf41c0e9164519a0340a9c797e080de71"
        },
        "downloads": -1,
        "filename": "passchek-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d9ffdff0341bd0bf71d9daac703c6599",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 6925,
        "upload_time": "2020-06-18T11:02:33",
        "upload_time_iso_8601": "2020-06-18T11:02:33.340257Z",
        "url": "https://files.pythonhosted.org/packages/50/79/fc444fa71d2a9381fe4eceef275c2fca26e814c700e6ac7b6ab6466c157f/passchek-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70c41d6a5edc0f435cdfbf9605b02107cf2d02201817411ab3c52ba6eda6b21c",
          "md5": "8283962b587076f97667245f733fd44a",
          "sha256": "36c31bc4b64137efcff7bc42a7b6d4dd478cdd799f767f9f80f5f53ebceb7d67"
        },
        "downloads": -1,
        "filename": "passchek-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8283962b587076f97667245f733fd44a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 5909,
        "upload_time": "2020-06-18T11:02:35",
        "upload_time_iso_8601": "2020-06-18T11:02:35.731884Z",
        "url": "https://files.pythonhosted.org/packages/70/c4/1d6a5edc0f435cdfbf9605b02107cf2d02201817411ab3c52ba6eda6b21c/passchek-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5079fc444fa71d2a9381fe4eceef275c2fca26e814c700e6ac7b6ab6466c157f",
        "md5": "d9ffdff0341bd0bf71d9daac703c6599",
        "sha256": "c8888078deb4692784027db7964505aaf41c0e9164519a0340a9c797e080de71"
      },
      "downloads": -1,
      "filename": "passchek-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d9ffdff0341bd0bf71d9daac703c6599",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 6925,
      "upload_time": "2020-06-18T11:02:33",
      "upload_time_iso_8601": "2020-06-18T11:02:33.340257Z",
      "url": "https://files.pythonhosted.org/packages/50/79/fc444fa71d2a9381fe4eceef275c2fca26e814c700e6ac7b6ab6466c157f/passchek-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "70c41d6a5edc0f435cdfbf9605b02107cf2d02201817411ab3c52ba6eda6b21c",
        "md5": "8283962b587076f97667245f733fd44a",
        "sha256": "36c31bc4b64137efcff7bc42a7b6d4dd478cdd799f767f9f80f5f53ebceb7d67"
      },
      "downloads": -1,
      "filename": "passchek-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8283962b587076f97667245f733fd44a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 5909,
      "upload_time": "2020-06-18T11:02:35",
      "upload_time_iso_8601": "2020-06-18T11:02:35.731884Z",
      "url": "https://files.pythonhosted.org/packages/70/c4/1d6a5edc0f435cdfbf9605b02107cf2d02201817411ab3c52ba6eda6b21c/passchek-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}