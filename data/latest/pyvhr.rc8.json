{
  "info": {
    "author": "Vittorio Cuculo <vittorio.cuculo@unimi.it>, Donatello Conte <donatello.conte@univ-tours.fr>, Alessandro D'Amelio <alessandro.damelio@unimi.it>, Giuliano Grossi <giuliano.grossi@unimi.it>, Edoardo Mortara <edoardo.mortara@studenti.unimi.it>",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<img src=\"https://raw.githubusercontent.com/phuselab/pyVHR/master/img/pyVHR-logo.png\" alt=\"pyVHR logo\" width=\"300\"/>\n\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pyvhr)\n[![PyPI](https://img.shields.io/pypi/v/pyvhr)](https://pypi.org/project/pyVHR/)\n![GitHub last commit](https://img.shields.io/github/last-commit/phuselab/pyVHR)\n[![GitHub license](https://img.shields.io/github/license/phuselab/pyVHR)](https://github.com/phuselab/pyVHR/blob/master/LICENSE)\n\n\n**Package pyVHR** (short for Python framework for Virtual Heart Rate) is a comprehensive framework for studying methods of pulse rate estimation relying on video, also known as remote photoplethysmography (rPPG).\n\n[pyVHR: a Python framework for remote photoplethysmography](https://peerj.com/articles/cs-929/)\n\n## Description\n\nThe methodological rationale behind the framework is that in order to study, develop and compare new rPPG methods in a principled and reproducible way, the following conditions should be met: *i)* a structured pipeline to monitor rPPG algorithms' input, output, and main control parameters; *ii)* the availability and the use of multiple datasets; *iii)* a sound statistical assessment of methods' performance.\npyVHR allows to easily handle rPPGmethods  and  data,  while  simplifying  the  statistical  assessment. Its main features lie in the following:\n- **Analysis-oriented**. It  constitutes  a  platform  for  experiment design, involving an arbitrary number of methods applied to multiple video datasets. It provides a systemic end-to-end  pipeline,  allowing  to  assess  different  rPPG  algorithms, by easily setting parameters and meta-parameters.\n- **Openness**. It comprises both method and dataset factory, so to easily extend the pool of elements to be evaluatedwith newly developed rPPG methods and any kind of videodatasets.\n- **Robust assessment**. The outcomes are arranged intostructured data ready for in-depth analyses. Performance comparison is carried out based on robust nonparametric statistical tests.\n\nNine classical rPPG methods, namely  *ICA*,  *PCA*, *GREEN*, *CHROM*, *POS*, *SSR*, *LGI*, *PBV*, *OMIT*, as well as the recent Deep Learning-based model *MTTS-CAN* are implemented. Moreover, pyVHR provides APIs for handling 11 publicly available video datasets,  i.e. *PURE*, *LGI-PPGI-DB*, *UBFC-1*, , *UBFC-2*, *UBFC-Phys*, *ECG-Fitness*, *MAHNOB* *Vicar-PPG-2*, *V4V* , *VIPL-HR* and *COHFACE*, usually adopted to benchmark rPPG methods. Eventually, extensive rigorous statistical analyses can be effortlessly performed via the pyVHR stats APIs.  \n\n![pipeline](https://user-images.githubusercontent.com/642555/152432564-12014442-d455-4462-9b1e-3082a3fdd5bf.png)\n\n## Getting started\n\n### Dependencies\n\nThe quickest way to get started is to install the [miniconda](http://conda.pydata.org/miniconda.html) distribution, a lightweight minimal installation of Anaconda Python.\n\nOnce installed, create a new `conda` environment and automatically fetch all the dependencies based on your architecture (with or without GPU), using one of the following commands:\n\n**CPU-only version**\n```bash\nconda env create --file https://raw.githubusercontent.com/phuselab/pyVHR/pyVHR_CPU/pyVHR_CPU_env.yml\n```\n\n**CPU+GPU version**  \nThis yml environment is for cudatoolkit=11.3 and python=3.9.\n```bash\nconda env create --file https://raw.githubusercontent.com/phuselab/pyVHR/master/pyVHR_env.yml\n```\n\n### Installation\n\nEnter the newly created conda environment and install the latest stable release build of pyVHR with:\n\n**CPU-only version**\n```bash\nconda activate pyvhr\n(pyvhr) pip install pyvhr-cpu\n```\n\n**CPU+GPU version**  \n```bash\nconda activate pyvhr\n(pyvhr) pip install pyvhr\n```\n\n## Basic usage\nRun the following code to obtain BPM estimates over time for a single video:\n\n```python\nimport pyVHR as vhr\nimport numpy as np\nfrom pyVHR.analysis.pipeline import Pipeline\nfrom pyVHR.plot.visualize import *\nimport plotly.express as px\nfrom pyVHR.utils.errors import getErrors, printErrors, displayErrors\n\n# params\nwsize = 6                  # window size in seconds\nroi_approach = 'patches'   # 'holistic' or 'patches'\nbpm_est = 'clustering'     # BPM final estimate, if patches choose 'medians' or 'clustering'\nmethod = 'cpu_CHROM'       # one of the methods implemented in pyVHR\n\n# run\npipe = Pipeline()          # object to execute the pipeline\nbvps, timesES, bpmES = pipe.run_on_video(videoFileName,\n                                        winsize=wsize, \n                                        roi_method='convexhull',\n                                        roi_approach=roi_approach,\n                                        method=method,\n                                        estimate=bpm_est,\n                                        patch_size=0, \n                                        RGB_LOW_HIGH_TH=(5,230),\n                                        Skin_LOW_HIGH_TH=(5,230),\n                                        pre_filt=True,\n                                        post_filt=True,\n                                        cuda=True, \n                                        verb=True)\n\n# ERRORS\nRMSE, MAE, MAX, PCC, CCC, SNR = getErrors(bvps, fps, bpmES, bpmGT, timesES, timesGT)\nprintErrors(RMSE, MAE, MAX, PCC, CCC, SNR)\ndisplayErrors(bpmES, bpmGT, timesES, timesGT)\n```\nThe full documentation of `run_on_video` method, with all the possible parameters, can be found here: [https://phuselab.github.io/pyVHR/](https://phuselab.github.io/pyVHR/pyVHR.analysis.html?highlight=run_on_video#pyVHR.analysis.pipeline.Pipeline.run_on_video)\n\n\n## Notebooks\n\nSome demonstration jupyter notebooks that help to better understand the many features of the framework are contained in the `notebooks` folder.\n\n* [`pyVHR_demo.ipynb`](https://github.com/phuselab/pyVHR/blob/master/notebooks/pyVHR_demo.ipynb): Basic demo with individual steps explained in detail.\n* [`pyVHR_run_on_video.ipynb`](https://github.com/phuselab/pyVHR/blob/master/notebooks/pyVHR_run_on_video.ipynb): Show execution on a single video by deriving HRVs and error values from the reference signal.\n* [`pyVHR_run_on_dataset.ipynb`](https://github.com/phuselab/pyVHR/blob/master/notebooks/pyVHR_run_on_dataset.ipynb): Show execution on a single dataset by deriving HRVs and error values from the reference signals. It is also possible to make some basic statistics, boxplots and ranking tests for comparative purposes.\n* [`pyVHR_demo_deep.ipynb`](https://github.com/phuselab/pyVHR/blob/master/notebooks/pyVHR_demo_deep.ipynb): Show execution of deep methods on a single dataset by deriving HRV and error values from reference signals.\n\n\n\n## Documentation\n\nThe full documentation of the pyVHR framework is available at [https://phuselab.github.io/pyVHR/](https://phuselab.github.io/pyVHR/).\n\n## Developing\n\nThe latest unstable development build of pyVHR is available on GitHub, and can be obtained downloading from source and installing via:\n```bash\ngit clone git@github.com:phuselab/pyVHR.git\ncd pyVHR/\npython setup.py install\n```\n\nThe `main` branch refers to the full pyVHR framework (requires GPU), while the `pyVHR_CPU` branch is dedicated to the CPU-only architectures.\n\n### Custom installation\nIf you want to create your environment from scratch you should follow these steps:\n- Install PyTorch ([here](https://pytorch.org/))\n- Install Numba ([here](https://numba.pydata.org/numba-doc/latest/user/installing.html))\n- Install Cupy (for GPU only) with the correct CUDA version ([here](https://docs.cupy.dev/en/stable/install.html#installing-cupy))\n- Install CuSignal (for GPU only) using conda and remove from the command 'cudatoolkit=x.y' ([here](https://github.com/rapidsai/cusignal))\n- Install Kaleido ([here](https://pypi.org/project/kaleido/))\n- Install PyTables ([here](https://anaconda.org/anaconda/pytables))\n- Install pyVHR as shown above.\n\n## Methods\n\nThe framework contains the implementation of many common methods for remote-PPG measurement. Currently implemented methods with reference publications are:\n\n| Method name    |  Reference paper |\n| ------------ | ---------------------------------------------------------------------- |\n|Green    | Verkruysse, W., Svaasand, L. O., & Nelson, J. S. (2008). Remote plethysmographic imaging using ambient light. Optics express, 16(26), 21434-21445.|\n|CHROM    | De Haan, G., & Jeanne, V. (2013). Robust pulse rate from chrominance-based rPPG. IEEE Transactions on Biomedical Engineering, 60(10), 2878-2886.|\n|ICA      | Poh, M. Z., McDuff, D. J., & Picard, R. W. (2010). Non-contact, automated cardiac pulse measurements using video imaging and blind source separation. Optics express, 18(10), 10762-10774.|\n|LGI      | Pilz, C. S., Zaunseder, S., Krajewski, J., & Blazek, V. (2018). Local group invariance for heart rate estimation from face videos in the wild. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition Workshops (pp. 1254-1262).|\n|PBV      | De Haan, G., & Van Leest, A. (2014). Improved motion robustness of remote-PPG by using the blood volume pulse signature. Physiological measurement, 35(9), 1913.|\n|PCA      | Lewandowska, M., Rumiński, J., Kocejko, T., & Nowak, J. (2011, September). Measuring pulse rate with a webcam—a non-contact method for evaluating cardiac activity. In 2011 federated conference on computer science and information systems (FedCSIS) (pp. 405-410). IEEE.|\n|POS      | Wang, W., den Brinker, A. C., Stuijk, S., & de Haan, G. (2016). Algorithmic principles of remote PPG. IEEE Transactions on Biomedical Engineering, 64(7), 1479-1491.|\n|SSR      | Wang, W., Stuijk, S., & De Haan, G. (2015). A novel algorithm for remote photoplethysmography: Spatial subspace rotation. IEEE transactions on biomedical engineering, 63(9), 1974-1984.|\n|OMIT     | Álvarez Casado, C., Bordallo López, M. (2022). Face2PPG: An unsupervised pipeline for blood volume pulse extraction from faces. arXiv (eprint 2202.04101).|\n|MTTS-CAN | Liu, X., Fromm, J., Patel, S., & McDuff, D. (2020). Multi-task temporal shift attention networks for on-device contactless vitals measurement. Advances in Neural Information Processing Systems, 33, 19400-19411.|\n|HR-CNN   | Spetlik, R., Franc, V., Cech, J. and Matas, J. (2018). Visual Heart Rate Estimation with Convolutional Neural Network. In Proceedings of British Machine Vision Conference|\n\n## Datasets\n\nInterfaces for 10 different datasets are provided in the `datasets` folder. Once the datasets are obtained, the respective files must be edited to match the correct path.  \nCurrently supported datasets are:\n\n| Dataset name |                              Link                                      |\n| ------------ | ---------------------------------------------------------------------- |\n| COHFACE    | https://www.idiap.ch/dataset/cohface |\n| LGI-PPGI   | https://github.com/partofthestars/LGI-PPGI-DB |\n| MAHNOB-HCI | https://mahnob-db.eu/hci-tagging/ |\n| PURE       | https://www.tu-ilmenau.de/neurob/data-sets-code/pulse-rate-detection-dataset-pure|\n| UBFC1      | https://sites.google.com/view/ybenezeth/ubfcrppg|\n|UBFC2       | https://sites.google.com/view/ybenezeth/ubfcrppg|\n|UBFC-Phys   | https://sites.google.com/view/ybenezeth/ubfc-phys|\n|ECG-Fitness | https://cmp.felk.cvut.cz/~spetlrad/ecg-fitness/*\n|Vicar-PPG-2 | https://docs.google.com/forms/d/e/1FAIpQLScwnW_D5M4JVovPzpxA0Bf1ZCTaG5vh7sYu48I0MVSpgltvdw/viewform*\n|V4V         | https://vision4vitals.github.io/ |\n|VIPL-HR     |https://arxiv.org/abs/1810.04927 |\n\n\n\n## RESULTS\nHere are the results obtained (holistic vs median vs clustering) by applying the `pyVHR_run_on_dataset` notebook to some datasets listed above:\n\n| Dataset | MAE Error | PCC Error |\n|--------|-----|------|\n|PURE | [PURE_MAE](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/MAE_run_on_dataset_PURE.html)|[PURE_PCC](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/PCC_run_on_dataset_PURE.html)|\n| UBFC1 | [UBFC1_MAE](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/MAE_run_on_dataset_UBFC1.html)|[UBFC1_PCC](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/PCC_run_on_dataset_UBFC1.html)|\n| UBFC2 | [UBFC2_MAE](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/MAE_run_on_dataset_UBFC2.html)|[UBFC2_PCC](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/MAE_run_on_dataset_UBFC2.html)|\n|LGI-PPGI| [LGI-PPGI_MAE](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/MAE_run_on_dataset_LGI-PPGI.html)|[LGI-PPGI_PCC](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/PCC_run_on_dataset_LGI-PPGI.html)|\n|ECG_Fitness_01-1| [ECG_Fitness_01-1_MAE](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/MAE_run_on_dataset_ECG_Fitness_01-1.html)|[ECG_Fitness_01-1_PCC](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/PCC_run_on_dataset_ECG_Fitness_01-1.html)|\n|ECG_Fitness_01-2|  [ECG_Fitness_01-2_MAE](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/MAE_run_on_dataset_ECG_Fitness_01-2.html)|  [ECG_Fitness_01-2_PCC](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/PCC_run_on_dataset_ECG_Fitness_01-2.html)|\n|ECG_Fitness_02-1| [ECG_Fitness_02-1_MAE](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/MAE_run_on_dataset_ECG_Fitness_02-1.html)|[ECG_Fitness_02-1_PCC](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/PCC_run_on_dataset_ECG_Fitness_02-1.html)|\n|ECG_Fitness_02-2| [ECG_Fitness_02-2_MAE](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/MAE_run_on_dataset_ECG_Fitness_02-2.html)|[ECG_Fitness_02-2_PCC](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/PCC_run_on_dataset_ECG_Fitness_02-2.html)|\n|ECG_Fitness_03-1| [ECG_Fitness_03-1_MAE](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/MAE_run_on_dataset_ECG_Fitness_03-1.html)|[ECG_Fitness_03-1_PCC](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/PCC_run_on_dataset_ECG_Fitness_03-1.html)|\n|ECG_Fitness_03-2| [ECG_Fitness_03-2_MAE](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/MAE_run_on_dataset_ECG_Fitness_03-2.html)|[ECG_Fitness_03-2_PCC](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/PCC_run_on_dataset_ECG_Fitness_03-2.html)|\n|ECG_Fitness_04-1| [ECG_Fitness_04-1_MAE](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/MAE_run_on_dataset_ECG_Fitness_04-1.html)|[ECG_Fitness_04-1_PCC](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/PCC_run_on_dataset_ECG_Fitness_04-1.html)|\n|ECG_Fitness_04-2| [ECG_Fitness_04-2_MAE](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/MAE_run_on_dataset_ECG_Fitness_04-2.html)|[ECG_Fitness_04-2_PCC](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/PCC_run_on_dataset_ECG_Fitness_04-2.html)|\n|ECG_Fitness_05-1| [ECG_Fitness_05-1_MAE](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/MAE_run_on_dataset_ECG_Fitness_05-1.html)|[ECG_Fitness_05-1_PCC](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/PCC_run_on_dataset_ECG_Fitness_05-1.html)|\n|ECG_Fitness_05-2| [ECG_Fitness_05-2_MAE](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/MAE_run_on_dataset_ECG_Fitness_05-2.html)|[ECG_Fitness_05-2_PCC](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/PCC_run_on_dataset_ECG_Fitness_05-2.html)\n|ECG_Fitness_06-1| [ECG_Fitness_06-1_MAE](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/MAE_run_on_dataset_ECG_Fitness_06-1.html)|[ECG_Fitness_06-1_PCC](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/PCC_run_on_dataset_ECG_Fitness_06-1.html)|\n|ECG_Fitness_06-2| [ECG_Fitness_06-2_MAE](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/MAE_run_on_dataset_ECG_Fitness_06-2.html)|[ECG_Fitness_06-2_PCC](https://htmlpreview.github.io/?https://github.com/phuselab/pyVHR/blob/master/results/html/PCC_run_on_dataset_ECG_Fitness_06-2.html)|\n\n## GUI\nIn the folder `realtime` you can find an example of a simple GUI created using the pyVHR package.\nYou can launch it by going into the path `pyVHR/realtime/` and using the command \n\n```bash\npython GUI.py\n```\n\nIf you want to use a specific rPPG method and pre-post filterings, you must set them in the last lines of `GUI.py`. \n\nBelow is a video showing the use of the GUI.\n\nhttps://user-images.githubusercontent.com/34277835/136981161-8799051a-ca0d-45c6-b4dd-e146457c7bdd.mp4\n\n\n## Reference\n\nIf you use this code, please cite the papers:\n\n```\n@article{boccignone2022pyvhr,\n  title={pyVHR: a Python framework for remote photoplethysmography},\n  author={Boccignone, Giuseppe and Conte, Donatello and Cuculo, Vittorio and D’Amelio, Alessandro and Grossi, Giuliano and Lanzarotti, Raffaella and Mortara, Edoardo},\n  journal={PeerJ Computer Science},\n  volume={8},\n  pages={e929},\n  year={2022},\n  publisher={PeerJ Inc.}\n}\n```\n\n```\n@article{Boccignone2020,\n  doi = {10.1109/access.2020.3040936},\n  url = {https://doi.org/10.1109/access.2020.3040936},\n  year = {2020},\n  publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},\n  pages = {1--1},\n  author = {Giuseppe Boccignone and Donatello Conte and Vittorio Cuculo and Alessandro D’Amelio and Giuliano Grossi and Raffaella Lanzarotti},\n  title = {An Open Framework for Remote-{PPG} Methods and their Assessment},\n  journal = {{IEEE} Access}\n}\n```\n\n## License\n\nThis project is licensed under the GPL-3.0 License - see the [LICENSE](LICENSE) file for details\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/phuselab/pyVHR",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyVHR",
    "package_url": "https://pypi.org/project/pyVHR/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyVHR/",
    "project_urls": {
      "Homepage": "https://github.com/phuselab/pyVHR"
    },
    "release_url": "https://pypi.org/project/pyVHR/2.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Package for rPPG methods",
    "version": "2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16438103,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e722e5774a359f53bd2e31020f1971ffa4d1b711acf41f8d7b8ba89139a9df2",
          "md5": "b29fa17f4858135a695e1f76fee57da5",
          "sha256": "054e6df47f68ea0d0f482f428715a1aa07b93ba2015c35bf7a58c61a698bbcd8"
        },
        "downloads": -1,
        "filename": "pyVHR-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b29fa17f4858135a695e1f76fee57da5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 76875,
        "upload_time": "2020-07-24T16:46:53",
        "upload_time_iso_8601": "2020-07-24T16:46:53.190311Z",
        "url": "https://files.pythonhosted.org/packages/6e/72/2e5774a359f53bd2e31020f1971ffa4d1b711acf41f8d7b8ba89139a9df2/pyVHR-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d1c5603bbe3a01a00c576450d4390bc3936e2476969c2a90350fe30e6bd805e",
          "md5": "1f6b225901352dc7b0139bfebc4e21e6",
          "sha256": "e4def4c92403511f9ef1a0056e509a30804aac870ed60f1bed38aeac30beba70"
        },
        "downloads": -1,
        "filename": "pyVHR-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1f6b225901352dc7b0139bfebc4e21e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 54471,
        "upload_time": "2020-07-24T16:46:55",
        "upload_time_iso_8601": "2020-07-24T16:46:55.810101Z",
        "url": "https://files.pythonhosted.org/packages/3d/1c/5603bbe3a01a00c576450d4390bc3936e2476969c2a90350fe30e6bd805e/pyVHR-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad78b560c45244c6b08b8aa4583194436bff745fac80827fd4f18ba7ccf0ec89",
          "md5": "a750dfc2aa10757ed18d11593211908e",
          "sha256": "642691a12ed87dbb5de0f8a0d4ace9bc0d8ba8f5eb16cf24ced4495d2c3a4fea"
        },
        "downloads": -1,
        "filename": "pyVHR-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a750dfc2aa10757ed18d11593211908e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 76982,
        "upload_time": "2020-11-26T10:33:44",
        "upload_time_iso_8601": "2020-11-26T10:33:44.436853Z",
        "url": "https://files.pythonhosted.org/packages/ad/78/b560c45244c6b08b8aa4583194436bff745fac80827fd4f18ba7ccf0ec89/pyVHR-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac264930cda9d96209971b71cfdfa68d8c7d137709f65a210db0ccae7efc59bc",
          "md5": "efeb12be80b3f2486365b8f463ba29da",
          "sha256": "19b86a97df15ea760b88b30550b23402f5670c4c11f943d8a30888e302dca903"
        },
        "downloads": -1,
        "filename": "pyVHR-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "efeb12be80b3f2486365b8f463ba29da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 54716,
        "upload_time": "2020-11-26T10:33:45",
        "upload_time_iso_8601": "2020-11-26T10:33:45.944421Z",
        "url": "https://files.pythonhosted.org/packages/ac/26/4930cda9d96209971b71cfdfa68d8c7d137709f65a210db0ccae7efc59bc/pyVHR-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49ef5c65b82ad0d83b8d72bb858659e747f42c05aab8c89ecee1782a60f793bd",
          "md5": "6ffc5a8023c8e584590adec7c79fd3fb",
          "sha256": "faa57aac80a770f68bf0efb7d49a25164d1c04794f2e5394b193ebc2a91cd609"
        },
        "downloads": -1,
        "filename": "pyVHR-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ffc5a8023c8e584590adec7c79fd3fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 77231,
        "upload_time": "2021-02-02T17:34:36",
        "upload_time_iso_8601": "2021-02-02T17:34:36.245589Z",
        "url": "https://files.pythonhosted.org/packages/49/ef/5c65b82ad0d83b8d72bb858659e747f42c05aab8c89ecee1782a60f793bd/pyVHR-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc8025b751929ae4496a52da05174468d49be33e73dd91f1ecd454e4e2ebb6d7",
          "md5": "142d0c676f01be21b311391fd3abc457",
          "sha256": "cf12f52b23eb6ebf217bb3f38c10d4145cba880c844241e584b87dde951734c8"
        },
        "downloads": -1,
        "filename": "pyVHR-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "142d0c676f01be21b311391fd3abc457",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 55253,
        "upload_time": "2021-02-02T17:34:37",
        "upload_time_iso_8601": "2021-02-02T17:34:37.831228Z",
        "url": "https://files.pythonhosted.org/packages/dc/80/25b751929ae4496a52da05174468d49be33e73dd91f1ecd454e4e2ebb6d7/pyVHR-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "447838be21749aedeb3eefc3d857351703105811216e91cd22265b568633cb70",
          "md5": "7d4192cb8f3ef50e3d6fc5576038c784",
          "sha256": "f42af5d045b28833998e9ee41ca6b438f589f348cba938aada6648926e8ab0a5"
        },
        "downloads": -1,
        "filename": "pyVHR-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d4192cb8f3ef50e3d6fc5576038c784",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 77272,
        "upload_time": "2021-03-12T15:34:19",
        "upload_time_iso_8601": "2021-03-12T15:34:19.251905Z",
        "url": "https://files.pythonhosted.org/packages/44/78/38be21749aedeb3eefc3d857351703105811216e91cd22265b568633cb70/pyVHR-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a75d00bee6b8ed419bb363ed71d4855c65c568c36021c676d21206b3edc1c5e4",
          "md5": "204c7a9e3b04a315bd8711c143168a8e",
          "sha256": "33171577d57241e28595f7dcf70f0fa77b353e0e532fe78ee7a543282b8a37ad"
        },
        "downloads": -1,
        "filename": "pyVHR-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "204c7a9e3b04a315bd8711c143168a8e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 55361,
        "upload_time": "2021-03-12T15:34:20",
        "upload_time_iso_8601": "2021-03-12T15:34:20.586604Z",
        "url": "https://files.pythonhosted.org/packages/a7/5d/00bee6b8ed419bb363ed71d4855c65c568c36021c676d21206b3edc1c5e4/pyVHR-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5f3c9d7e21ca91829e540a30d6b2c2b1d29d6857d5842ed14232301a09418b3",
          "md5": "c3e99c5a316820935c2026f7cd91ce10",
          "sha256": "8abe6edadb66a7c324953eb0860fcc02718801eac29fe86661648fc0c5c540fb"
        },
        "downloads": -1,
        "filename": "pyVHR-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c3e99c5a316820935c2026f7cd91ce10",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 114666,
        "upload_time": "2021-10-21T20:31:40",
        "upload_time_iso_8601": "2021-10-21T20:31:40.297035Z",
        "url": "https://files.pythonhosted.org/packages/f5/f3/c9d7e21ca91829e540a30d6b2c2b1d29d6857d5842ed14232301a09418b3/pyVHR-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73a793ac417b6bd99c1cbdf12f2405f71d438edb1d35c91e7e6fe5abfed84363",
          "md5": "b096616d900c3e524547fb3a22560d8c",
          "sha256": "5989ff59b4fbe3b457cf6c53e7cd004b3bd5147fcb2b59b31d3a3bcbe9fdf173"
        },
        "downloads": -1,
        "filename": "pyVHR-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b096616d900c3e524547fb3a22560d8c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 94801,
        "upload_time": "2021-10-21T20:31:43",
        "upload_time_iso_8601": "2021-10-21T20:31:43.104892Z",
        "url": "https://files.pythonhosted.org/packages/73/a7/93ac417b6bd99c1cbdf12f2405f71d438edb1d35c91e7e6fe5abfed84363/pyVHR-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48cc365fd03846c61b93fdc9c1918bd5c3001c5f1b216abc8eb3e85785eb5874",
          "md5": "418c4a16c65c2fc493c7867b3e6d5987",
          "sha256": "920f11216a917c4287cc70cd870b54abf8cf809684946c0cedc78589fe026f40"
        },
        "downloads": -1,
        "filename": "pyVHR-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "418c4a16c65c2fc493c7867b3e6d5987",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 114057,
        "upload_time": "2021-10-24T21:55:00",
        "upload_time_iso_8601": "2021-10-24T21:55:00.041337Z",
        "url": "https://files.pythonhosted.org/packages/48/cc/365fd03846c61b93fdc9c1918bd5c3001c5f1b216abc8eb3e85785eb5874/pyVHR-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ef79d49667b9e0806f802fc1be0706011128acf3133b5e25216e39f5e94208f",
          "md5": "eab5e7e64c8b91f6303adba380d724f6",
          "sha256": "d5fcd8c08906d2d062519734280d479165a782a7756b51639c076f856cade3a4"
        },
        "downloads": -1,
        "filename": "pyVHR-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "eab5e7e64c8b91f6303adba380d724f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 94078,
        "upload_time": "2021-10-24T21:55:02",
        "upload_time_iso_8601": "2021-10-24T21:55:02.028892Z",
        "url": "https://files.pythonhosted.org/packages/1e/f7/9d49667b9e0806f802fc1be0706011128acf3133b5e25216e39f5e94208f/pyVHR-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eacb10ba9825a783d2289c77641c352f8e12374e2ca131242a9004e9c1019372",
          "md5": "1f0c2d017e1433e17b6ee3d29c9d253a",
          "sha256": "829915063637668583c2590c7d9746a9bf364f517984f217df214687572b29f5"
        },
        "downloads": -1,
        "filename": "pyVHR-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f0c2d017e1433e17b6ee3d29c9d253a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 114768,
        "upload_time": "2021-10-28T16:17:57",
        "upload_time_iso_8601": "2021-10-28T16:17:57.658162Z",
        "url": "https://files.pythonhosted.org/packages/ea/cb/10ba9825a783d2289c77641c352f8e12374e2ca131242a9004e9c1019372/pyVHR-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f313d19d3659ec6affa53cbe78d76e6f33809d6b996fba6a3492c9489f6804d8",
          "md5": "eac5ae303828ae2fe501738a9b4e0a68",
          "sha256": "71c6682747d0ae8ca7645c927d907fa5f2c4855afc5d2a537a1d3944b5029998"
        },
        "downloads": -1,
        "filename": "pyVHR-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "eac5ae303828ae2fe501738a9b4e0a68",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 94979,
        "upload_time": "2021-10-28T16:17:59",
        "upload_time_iso_8601": "2021-10-28T16:17:59.083843Z",
        "url": "https://files.pythonhosted.org/packages/f3/13/d19d3659ec6affa53cbe78d76e6f33809d6b996fba6a3492c9489f6804d8/pyVHR-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7839125163fe7ae9989b8b71f5730a04af34ed188b3004c9cabf54ad1dda467",
          "md5": "b4f08cadd505b748bae4d1ab9918b80f",
          "sha256": "1f6df8e8945da2a0e9c9a9baee18d20a48123d558832b98034f5b0c2bb4e5d2a"
        },
        "downloads": -1,
        "filename": "pyVHR-2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4f08cadd505b748bae4d1ab9918b80f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 135889,
        "upload_time": "2023-01-15T21:27:53",
        "upload_time_iso_8601": "2023-01-15T21:27:53.571442Z",
        "url": "https://files.pythonhosted.org/packages/f7/83/9125163fe7ae9989b8b71f5730a04af34ed188b3004c9cabf54ad1dda467/pyVHR-2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0340e1dae7d96847bebcd3c2d971567b84f919282ad1d0421f7634b5f13392c7",
          "md5": "4bbd9b122aaf8404b307f6aeb8480cc2",
          "sha256": "fb19c536ca50a99d3d927830325320458df40548f9e41b827d57e9024c22c7db"
        },
        "downloads": -1,
        "filename": "pyVHR-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4bbd9b122aaf8404b307f6aeb8480cc2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 114662,
        "upload_time": "2023-01-15T21:27:55",
        "upload_time_iso_8601": "2023-01-15T21:27:55.529360Z",
        "url": "https://files.pythonhosted.org/packages/03/40/e1dae7d96847bebcd3c2d971567b84f919282ad1d0421f7634b5f13392c7/pyVHR-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f7839125163fe7ae9989b8b71f5730a04af34ed188b3004c9cabf54ad1dda467",
        "md5": "b4f08cadd505b748bae4d1ab9918b80f",
        "sha256": "1f6df8e8945da2a0e9c9a9baee18d20a48123d558832b98034f5b0c2bb4e5d2a"
      },
      "downloads": -1,
      "filename": "pyVHR-2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b4f08cadd505b748bae4d1ab9918b80f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 135889,
      "upload_time": "2023-01-15T21:27:53",
      "upload_time_iso_8601": "2023-01-15T21:27:53.571442Z",
      "url": "https://files.pythonhosted.org/packages/f7/83/9125163fe7ae9989b8b71f5730a04af34ed188b3004c9cabf54ad1dda467/pyVHR-2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0340e1dae7d96847bebcd3c2d971567b84f919282ad1d0421f7634b5f13392c7",
        "md5": "4bbd9b122aaf8404b307f6aeb8480cc2",
        "sha256": "fb19c536ca50a99d3d927830325320458df40548f9e41b827d57e9024c22c7db"
      },
      "downloads": -1,
      "filename": "pyVHR-2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4bbd9b122aaf8404b307f6aeb8480cc2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 114662,
      "upload_time": "2023-01-15T21:27:55",
      "upload_time_iso_8601": "2023-01-15T21:27:55.529360Z",
      "url": "https://files.pythonhosted.org/packages/03/40/e1dae7d96847bebcd3c2d971567b84f919282ad1d0421f7634b5f13392c7/pyVHR-2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}