{
  "info": {
    "author": "awk",
    "author_email": "awk@awk.space",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Runfile\n\nRunfiles are generic task files defined in Markdown.\n\nFor an example, look at [this project’s\nRunfile](https://github.com/awkspace/runfile/blob/master/Runfile.md).\n\n## Installation\n\nInstall from [PyPI](https://pypi.org/project/runfile/):\n\n```sh\npip install runfile\n```\n\nThen add `source <(run --bash-completion)` to your `~/.bashrc` or `~/.zshrc` to\nenable tab completion.\n\n## Usage\n\n```sh-session\n$ run --help\nusage: run [-h] [-f FILENAME] [-u] [--containers] [-l] [--bash-completion] [target]\n\npositional arguments:\n  target\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f FILENAME, --file FILENAME\n                        Path to Runfile, defaults to Runfile.md\n  -u, --update          Update includes\n  --containers          Allow steps to run in containers where applicable\n  -l, --list-targets    List targets and exit\n  --bash-completion     Print bash completion script\n```\n\n## Format\n\nRunfiles must include a first-level header at the top of the file.\n\nEach target is defined as a second-level header. Target names can consist of\nalphanumeric characters and underscores.\n\nThe first paragraph of a target describes the target and will be printed when\n`run` is called with no arguments.\n\nCode blocks in targets are executed in the order they are defined. The syntax\nhighlighting of the code block determines the executable that will run it. For\nexample, a code block beginning with `python` will execute the code using\n`/usr/bin/env python`.\n\nA `yaml` code block represents Runfile or target configuration.\n\nA `dockerfile` code block defines the container that will be used to execute the\ngiven target if `run` is called with `--containers`. To use an existing Docker\nimage, create a `dockerfile` block that contains only `FROM your_image_name`.\n\nCode blocks directly underneath the top-level header are considered part of a\n“global target.” The contents of this global target are executed before any\nother target. This is useful for setting variables or performing checks.\n\n## Runfile Configuration\n\nRunfiles are configured by an optional `yaml` block under the top level header.\n\n```yaml\n# List of Runfiles to include. Included Runfiles are automatically appended to\n# the bottom of the current Runfile. Once a Runfile has been retrieved, it will\n# not be updated until run is invoked with --update.\n# \n# Each element in the list has a key and a value. The value is the local or\n# remote path to the other Runfile; the key is the Runfile alias and can be used\n# in other configuration to explicitly reference included targets, e.g.\n# my_included_runfile/some_target.\n# \n# Use .netrc to fetch Runfiles behind authentication.\nincludes:\n  - example_one: https://example.com/1.md\n  - example_two: https://example.com/2.md\n```\n\n## Target Configuration\n\nTargets are configured by an optional `yaml` block under their headers.\n\n```yaml\n# If the last run was successful, do not rerun this target until this much time\n# has passed. Defaults to 0 (no caching). -1 or null caches this target\n# indefinitely until invalidated by another target or by a rebuild of a required\n# (upstream) target.\nexpires: 5m\n\n# A list of other targets that should be completed before this target is run.\n# Glob matches are supported.\nrequires:\n  - foo\n  - bar\n  \n# A list of other targets that should be immediately expired after a successful\n# run of this target. Glob matches are supported. For example, a \"clean\" target\n# may invalidate '*'.\ninvalidates:\n  - baz\n```\n\n## Examples\n\n### A “Hello World” Runfile\n\n````markdown\n# Hello world\n\nA Runfile that says hello!\n\n## hello\n\nSay hello.\n\n```sh\necho \"Hello world!\"\n```\n````\n\nRun it:\n\n```sh-session\n$ run\n📜 Hello world\nA Runfile that says hello!\n\n🎯 Targets\nhello: Say hello.\n\n$ run hello\n🎯 hello\n\n⏳ Running hello...\nHello world!\n✔️ Completed hello. (0.02s)\n\nSUCCESS in 0.04s\n---\n✔️ Completed hello. (0.02s)\n```\n\n### Persistent Values\n\nUse `run_set <key> <value>` to set persistent values. These values are stored\nbetween runs and can be referenced in other code blocks than the one they were\nset in. They are also set as environment variables in subsequent code blocks.\n\nValues can be retrieved by `run_get <key>` or by accessing the environment\nvariable of the same name.\n\n````markdown\n# Hello world with two languages\n\nA Runfile that says hello using two languages!\n\n## write_message\n\nWrites a message to the Runfile cache using shell.\n\n```sh\nrun_set \"message\" \"Hello world!\"\n```\n\n## print_message\n\nPrints a stored message from the Runfile cache using Python.\n\n```python\nimport os\nprint(os.environ[\"message\"])\n```\n\n## delete_message\n\nDeletes the stored message using shell.\n\n```sh\nrun_del \"message\"\n```\n````\n\nRun it:\n\n```sh-session\n$ run write_message \n🎯 write_message\n\n⏳ Running write_message...\n✔️ Completed write_message. (0.24s)\n\nSUCCESS in 0.27s\n---\n✔️ Completed write_message. (0.24s)\n\n$ run print_message \n🎯 print_message\n\n⏳ Running print_message...\nHello world!\n✔️ Completed print_message. (0.03s)\n\nSUCCESS in 0.06s\n---\n✔️ Completed print_message. (0.03s)\n```\n\nThis works, but now there’s a problem: running `print_message` before\n`write_message` results in an error.\n\n```sh-session\n$ run delete_message \n🎯 delete_message\n\n⏳ Running delete_message...\n1\n✔️ Completed delete_message. (0.25s)\n\nSUCCESS in 0.28s\n---\n✔️ Completed delete_message. (0.25s)\n\n$ run print_message \n🎯 print_message\n\n⏳ Running print_message...\nTraceback (most recent call last):\n  File \"/tmp/tmp5d8zepzl/run\", line 2, in <module>\n    print(os.environ[\"message\"])\n  File \"os.py\", line 679, in __getitem__\n    raise KeyError(key) from None\nKeyError: 'message'\n❌ Failed print_message. (0.05s)\n\nFAILURE in 0.05s\n---\n❌ Failed print_message. (0.05s)\n```\n\n### Dependencies\n\nTo fix this, use the `requires` directive in the `print_message` target\nconfiguration.\n\n````markdown\n# Hello world with dependencies\n\nA Runfile that says hello, but less broken this time.\n\n## write_message\n\nWrites a message to the Runfile cache using shell.\n\n```sh\nrun_set \"message\" \"Hello world!\"\n```\n\n## print_message\n\nPrints a stored message from the Runfile cache using Python.\n\n```yaml\nrequires:\n  - write_message\n```\n\n```python\nimport os\nprint(os.environ[\"message\"])\n```\n\n## delete_message\n\nDeletes the stored message using shell.\n\n```sh\nrun_del \"message\"\n```\n````\n\nNow the message will be written every time `print_message` is run.\n\n```sh-session\n$ run delete_message \n🎯 delete_message\n\n⏳ Running delete_message...\n1\n✔️ Completed delete_message. (0.26s)\n\nSUCCESS in 0.29s\n---\n✔️ Completed delete_message. (0.26s)\n\n$ run print_message \n🎯 print_message\n\n⏳ Running write_message...\n✔️ Completed write_message. (0.26s)\n\n⏳ Running print_message...\nHello world!\n✔️ Completed print_message. (0.04s)\n\nSUCCESS in 0.37s\n---\n✔️ Completed write_message. (0.26s)\n✔️ Completed print_message. (0.04s)\n```\n\n### Caching\n\nHowever, constantly rerunning a dependency with a cacheable value is not always\nan ideal situation. Some targets may take a while to run.\n\nWe can simulate this by adding a `sleep` command to `write_message`, then\nconfiguring its `expires` directive such that it runs at most once per day.\n\n````markdown\n# Hello world with dependencies and caching\n\nA Runfile that says hello, but it takes a while.\n\n## write_message\n\n```yaml\nexpires: 24h\n```\n\nWrites a message to the Runfile cache using shell.\n\n```sh\nsleep 5  # Simulate a long operation\nrun_set \"message\" \"Hello world!\"\n```\n\n## print_message\n\nPrints a stored message from the Runfile cache using Python.\n\n```yaml\nrequires:\n  - write_message\n```\n\n```python\nimport os\nprint(os.environ[\"message\"])\n```\n\n## delete_message\n\nDeletes the stored message using shell.\n\n```sh\nrun_del \"message\"\n```\n````\n\nExecuting `run print_message` takes a while the first time:\n\n```sh-session\n$ run print_message \n🎯 print_message\n\n⏳ Running write_message...\n✔️ Completed write_message. (5.25s)\n\n⏳ Running print_message...\nHello world!\n✔️ Completed print_message. (0.03s)\n\nSUCCESS in 5.34s\n---\n✔️ Completed write_message. (5.25s)\n✔️ Completed print_message. (0.03s)\n```\n\nBut running it again will skip the `write_message` target:\n\n``` sh-session\n$ run print_message\n🎯 print_message\n\n💾 Used cache for write_message.\n\n⏳ Running print_message...\nHello world!\n✔️ Completed print_message. (0.07s)\n\nSUCCESS in 0.13s\n---\n💾 Used cache for write_message.\n✔️ Completed print_message. (0.07s)\n```\n\nThis saves time, but it also introduces a new problem. Running `delete_message`\nwill delete the message, but the Runfile doesn’t know that `write_message` needs\nto be rerun before the next `print_message`!\n\n### Cache Invalidation\n\nThe `invalidates` directive can be used to indicate that running a specific\ntarget will result in the cached values of other targets being invalid.\n\n````markdown\n# Hello world with dependencies and caching\n\nA Runfile that says hello, but it takes a while.\n\n## write_message\n\n```yaml\nexpires: 24h\n```\n\nWrites a message to the Runfile cache using shell.\n\n```sh\nsleep 5  # Simulate a long operation\nrun_set \"message\" \"Hello world!\"\n```\n\n## print_message\n\nPrints a stored message from the Runfile cache using Python.\n\n```yaml\nrequires:\n  - write_message\n```\n\n```python\nimport os\nprint(os.environ[\"message\"])\n```\n\n## delete_message\n\nDeletes the stored message using shell.\n\n```yaml\ninvalidates:\n  - write_message\n```\n\n```sh\nrun_del \"message\"\n```\n````\n\nNow running `delete_message` invalidates the `write_message` cache.\n\n```sh-session\n$ run delete_message\n🎯 delete_message\n\n⏳ Running delete_message...\n1\n✔️ Completed delete_message. (0.28s)\n\nSUCCESS in 0.31s\n---\n✔️ Completed delete_message. (0.28s)\n\n$ run print_message \n🎯 print_message\n\n⏳ Running write_message...\n✔️ Completed write_message. (5.24s)\n\n⏳ Running print_message...\nHello world!\n✔️ Completed print_message. (0.06s)\n\nSUCCESS in 5.37s\n---\n✔️ Completed write_message. (5.24s)\n✔️ Completed print_message. (0.06s)\n```\n\nChanging the content of a code block will also invalidate the cache of a target.\nAnd, like `make`, a target with a dependency run more recently than the target\nitself will invalidate that target’s cache.\n\n## Running Targets Inside Containers\n\nAdd a [Dockerfile](https://docs.docker.com/engine/reference/builder/) block at\nthe top of a target and Runfile will build a container accordingly, then mount\nthe current directory into the Docker container before running commands.\n\nBy default, Runfiles will not execute these code blocks. Most of the time,\nRunfiles are expected to be run on a user’s system, with dependencies manually\ninstalled. However, containers are useful for executing Runfiles on CI systems\nwhere dependencies are not controlled by the user.\n\nTo execute a Runfile target in containerized mode, use the `--containers` flag.\n\nContainer images will be cached until the content of a `dockerfile` block\nchanges.\n\n## Including Other Runfiles\n\nOther Runfiles can be included via an `includes` directive in the Runfile\nconfiguration block.\n\nIncluded Runfiles will automatically append themselves to the main Runfile. This\npromotes consolidation of common tasks to shared files without sacrificing the\nportability and stability of any given Runfile.\n\nTo refresh included Runfiles, execute `run` with the `--update` flag.\n\n## Configuration Options\n\nIf you hate fun, set `RUNFILE_NO_EMOJI=1` to disable icons from the output.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/awkspace/runfile",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "runfile",
    "package_url": "https://pypi.org/project/runfile/",
    "platform": "",
    "project_url": "https://pypi.org/project/runfile/",
    "project_urls": {
      "Homepage": "https://github.com/awkspace/runfile"
    },
    "release_url": "https://pypi.org/project/runfile/1.0.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A generic task-based automation format.",
    "version": "1.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11303223,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98bcd89577f6f67495d77795bb5db4f88f12f3f952796d15d1c10833436cd2ed",
          "md5": "e4c87e5831469e610f0dfbd7405aa9df",
          "sha256": "7b21df3b69033b8d7fab8f1279ae873dbb2ba08d8f70f36f8f50f9a2663e1b1c"
        },
        "downloads": -1,
        "filename": "runfile-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e4c87e5831469e610f0dfbd7405aa9df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17309,
        "upload_time": "2021-08-20T01:55:30",
        "upload_time_iso_8601": "2021-08-20T01:55:30.347356Z",
        "url": "https://files.pythonhosted.org/packages/98/bc/d89577f6f67495d77795bb5db4f88f12f3f952796d15d1c10833436cd2ed/runfile-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0.post0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37e3c02a3fef44273fb4a280c1ece0461d6f0f063a04de98f83fe5c728b37e12",
          "md5": "0aa950cd09142d33b219f203a7d6ef1d",
          "sha256": "15f77f4443c45bfbcf90838b04c042135a0db517e8b36c7470fd716fe3f50f8e"
        },
        "downloads": -1,
        "filename": "runfile-1.0.0.post0.tar.gz",
        "has_sig": false,
        "md5_digest": "0aa950cd09142d33b219f203a7d6ef1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18696,
        "upload_time": "2021-08-20T02:14:16",
        "upload_time_iso_8601": "2021-08-20T02:14:16.151127Z",
        "url": "https://files.pythonhosted.org/packages/37/e3/c02a3fef44273fb4a280c1ece0461d6f0f063a04de98f83fe5c728b37e12/runfile-1.0.0.post0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf1fd6e655d618b819d5ccb64822e042107a541d735e94bb283c4be4caf66b56",
          "md5": "375a7d29a35a4bd949efdf8ccdae0a5a",
          "sha256": "5a8a8af027d62dba3fadccf9e8a63d95143824995a37bac22b9b3853b8f229f1"
        },
        "downloads": -1,
        "filename": "runfile-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "375a7d29a35a4bd949efdf8ccdae0a5a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17807,
        "upload_time": "2021-08-22T02:57:17",
        "upload_time_iso_8601": "2021-08-22T02:57:17.063985Z",
        "url": "https://files.pythonhosted.org/packages/bf/1f/d6e655d618b819d5ccb64822e042107a541d735e94bb283c4be4caf66b56/runfile-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "055d023514a35da320ec59161e1d5955056e89030ad8bcf4316b142d6d1fb468",
          "md5": "351b976d8ed6c36c7e540bfeb0477477",
          "sha256": "5e3a94122cdf8f2550136437323e2da0d0f9be203a3d207e9a18569270824b69"
        },
        "downloads": -1,
        "filename": "runfile-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "351b976d8ed6c36c7e540bfeb0477477",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18940,
        "upload_time": "2021-08-25T01:32:59",
        "upload_time_iso_8601": "2021-08-25T01:32:59.717185Z",
        "url": "https://files.pythonhosted.org/packages/05/5d/023514a35da320ec59161e1d5955056e89030ad8bcf4316b142d6d1fb468/runfile-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9af42e1be6bc40cc48ceab8ebb6e83091e29a5a9fe89d24d11ddebfc57739af9",
          "md5": "e71a2d1cb517187c21153f3cc6fd9388",
          "sha256": "d0198552fb98ccd6c1bf1994f441444f050dbfb0e10a25ead7acdc6d59803e30"
        },
        "downloads": -1,
        "filename": "runfile-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e71a2d1cb517187c21153f3cc6fd9388",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17858,
        "upload_time": "2021-08-25T01:46:05",
        "upload_time_iso_8601": "2021-08-25T01:46:05.297131Z",
        "url": "https://files.pythonhosted.org/packages/9a/f4/2e1be6bc40cc48ceab8ebb6e83091e29a5a9fe89d24d11ddebfc57739af9/runfile-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c8498be0fd2a4d9fafe1b5abbc48a7a35cb318116a6e7e3024ae5fdc6bc7214",
          "md5": "6ca768186c7f331ebf3c184f89baad17",
          "sha256": "c3c91ceff51a0283f17905d082004485e59d8231b77254783c28bb6dbb6c6093"
        },
        "downloads": -1,
        "filename": "runfile-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6ca768186c7f331ebf3c184f89baad17",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18494,
        "upload_time": "2021-08-25T04:16:47",
        "upload_time_iso_8601": "2021-08-25T04:16:47.964970Z",
        "url": "https://files.pythonhosted.org/packages/3c/84/98be0fd2a4d9fafe1b5abbc48a7a35cb318116a6e7e3024ae5fdc6bc7214/runfile-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d19d6473fcb211f228c5bc05888058fb771faa05e293cc53d99174714fa0406",
          "md5": "efba7c5a41fb62b718188192b13a1b81",
          "sha256": "a4256d3a37071f4ac6ed6ed313a1febe329b65ff42485e275d28b8a28aeb63d8"
        },
        "downloads": -1,
        "filename": "runfile-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "efba7c5a41fb62b718188192b13a1b81",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18555,
        "upload_time": "2021-08-25T22:04:05",
        "upload_time_iso_8601": "2021-08-25T22:04:05.808200Z",
        "url": "https://files.pythonhosted.org/packages/4d/19/d6473fcb211f228c5bc05888058fb771faa05e293cc53d99174714fa0406/runfile-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e453952874188ac28582f645fba180d4a55e76aecef2fd954f3175e873d6c51",
          "md5": "a64117edba4c35c7b1b6c516fade25f4",
          "sha256": "8b2020a2902130ead6731d4551868815222c1166617f195fdba45ef0eb57002d"
        },
        "downloads": -1,
        "filename": "runfile-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "a64117edba4c35c7b1b6c516fade25f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18179,
        "upload_time": "2021-08-26T02:51:47",
        "upload_time_iso_8601": "2021-08-26T02:51:47.218694Z",
        "url": "https://files.pythonhosted.org/packages/0e/45/3952874188ac28582f645fba180d4a55e76aecef2fd954f3175e873d6c51/runfile-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "792aeacf8521e549aebaf92bc5195b4d9bf26d469a2188361e58eb6c5c9e427b",
          "md5": "93e9c2d24ba9073c3418f273753e09f0",
          "sha256": "d114c5aec56fe2b15945b93757b95938d92a007eb2ada78ccc12a171138498d1"
        },
        "downloads": -1,
        "filename": "runfile-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "93e9c2d24ba9073c3418f273753e09f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18831,
        "upload_time": "2021-08-28T18:32:23",
        "upload_time_iso_8601": "2021-08-28T18:32:23.738817Z",
        "url": "https://files.pythonhosted.org/packages/79/2a/eacf8521e549aebaf92bc5195b4d9bf26d469a2188361e58eb6c5c9e427b/runfile-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "792aeacf8521e549aebaf92bc5195b4d9bf26d469a2188361e58eb6c5c9e427b",
        "md5": "93e9c2d24ba9073c3418f273753e09f0",
        "sha256": "d114c5aec56fe2b15945b93757b95938d92a007eb2ada78ccc12a171138498d1"
      },
      "downloads": -1,
      "filename": "runfile-1.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "93e9c2d24ba9073c3418f273753e09f0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18831,
      "upload_time": "2021-08-28T18:32:23",
      "upload_time_iso_8601": "2021-08-28T18:32:23.738817Z",
      "url": "https://files.pythonhosted.org/packages/79/2a/eacf8521e549aebaf92bc5195b4d9bf26d469a2188361e58eb6c5c9e427b/runfile-1.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}