{
  "info": {
    "author": "Matt Gosden",
    "author_email": "mdgosden@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License"
    ],
    "description": "# docstringer\n\nA simple decorator to create documentation of your function calls from their docstrings\n\n## Scope\n\n### What package does?\n\nThis utility allows you to add a simple `@docstringer` decorator to any function calls you wish to document when you are running your code. This will then track the calls to these functions and output documentation of the call-stack flow.\n\nThis utility is focused on documentation of the call stack of functions and uses the function doc strings to document the call order.\n\n### What package does not do?\n\nThis function is purely focused on documenting the call order, the call parameters and the return values and using the docstrings to make this auto documentation.\n\nThis package does _not_ intermediate values tracked at each stage within functions. There are many great packages already available to do this such as [snoop](https://github.com/alexmojaki/snoop).\n\nThis package also does _not_ profile the time taken to run each function in the call stack. There are many great packages already available to do this such as [profiling](https://github.com/what-studio/profiling).\n\n## Quickstart\n\nInstall the package using:\n\n    pip install docstringer\n\nOn any function in your code that you wish to document the calling order, add the `@docstringer` decorator. By default the _docstringer_ package will print the output.\n\n## An example\n\nWe have a simple program that rolls a number of dice and returns the result.\n\nWe decorate the functions we want to document function calls to using the `@docstringer` decorator.\n\n```python\n@docstringer\ndef roll_the_dice(rolls: int, sides: int = 6) -> tuple:\n    \"\"\"\n    Rolls a number of dice and returns the result.\n    \"\"\"\n    results = []\n    for _ in range(rolls):\n        results.append(roll(sides))\n\n    return (sum(results), results)\n\n@docstringer\ndef roll(sides: int = 6) -> int:\n    \"\"\"\n    An individual die (of side count=sides) roll.\n    \"\"\"\n    return random.randint(1, sides)\n```\n\nAn example output from running this code:\n\n```\nCALL to roll_the_dice (id=4441740768)\nwith {'args': (), 'kwargs': {'rolls': 2, 'sides': 6}}\n\n    Rolls a number of dice and returns the result.\n\nCALL to roll (id=4442233152)\nwith {'args': (6,), 'kwargs': {}}\n\n    An individual die (of side count=sides) roll.\n\nRETURN from roll (id=4442233152\nresult = 5\n\nCALL to roll (id=4442233152)\nwith {'args': (6,), 'kwargs': {}}\n\n    An individual die (of side count=sides) roll.\n\nRETURN from roll (id=4442233152\nresult = 3\n\nRETURN from roll_the_dice (id=4441740768\nresult = (8, [5, 3])\n```\n\n## Deactivating docstringer in production\n\nBy default _docstringer_ is active and will log the call stack on the decorated functions. When using in production you will want to switch this off. This will also speed up running.\n\nTo switch off the `@docstringer` decorator without removing it, pass the `active=False` parameter to the decorator. This can be done globally using a configuration. For example:\n\n```python\nDEBUG = False  # Set to True in debug mode when decorator should be active\\\n\n@docstringer(active=DEBUG)\ndef my_function():\n    \"\"\" My function to be documented when it is called \"\"\"\n    ...\n\n```\n\n## Different output formats\n\nDifferent _Formatters_ can be used to push the output in different formats by passing an instance of the _Formatter_ you want to the `DOCSTRINGER_FORMATTER` variable.\n\nBy default _docstringer_ outputs the function call information as print statements to the console. This default formatter is the `PrintFormatter`\n\nYou can set a different formatter by passing this to the `formatter` parameter in the docstring. The built in formatters are outlined below. Or you can customise your own\n\n```python\nfrom docstringer.formatters import LoggerFormatter\n\nformatter = LoggerFormatter(logger=logger, log_level='info')\n\n@docstringer(formatter=formatter)\ndef my_function():\n    \"\"\" My function to be documented when it is called \"\"\"\n    ...\n\n```\n\n### LoggerFormatter\n\nThis formatter outputs the function call information to the logger of your choice instead of printing to the screen. When instantiating the `LoggerFormatter`, pass it the logger and log=level you want to use:\n\n```python\nfrom docstringer.formatters import LoggerFormatter\nimport logging\nlogging.basicConfig(level=logging.INFO, format=\"%(levelname)s - %(message)s\")\n\n@docstringer(formatter=LoggerFormatter(logger=logging, log_level='info')\ndef my_function():\n    ...\n\n```\n\nThis will now output function calls as log items.\n\n### EventListFormatter\n\nThe `EventListFormatter` will return the function call information a a list of `FunctionEvent` objects. These objects contain the name, docstring, call values and return values of each function call in the order that they were called.\n\nThis formatter is passed a list (usually an empty list) when it is instantiated and it will populate this list with the FunctionEvent objects that occur on decorated functions.\n\n```python\nfrom docstringer.formatters import EventListFormatter\n\nevent_list = []\n\n@docstringer(formatter=EventListFormatter(event_list))\ndef my_function():\n    ...\n\n```\n\n# Combining with other tracing or introspection packages\n\nThis package focuses on documenting the call stack and showing the docstring for the decorated functions.\n\nThis can be combined with a more detailed tracing or profiling package to give a combined output. We recommend that the tracing decorator is placed inside the docstringer decorator.\n\n## Example combining with snoop\n\nIn this example we use the `PrintSimpleFormatter` which does not show the parameters and return values as these are already provided by snoop. We also configure snoop to print in a similar format\n\n```python\nimport snoop\nfrom docstringer import docstringer\n\nsnoop_formatted = snoop.Config(color=False, prefix=\"\", columns=[]).snoop\n\n@docstringer(formatter=PrintSimpleFormatter())\n@snoop_formatted\ndef roll(sides: int = 6) -> int:\n    \"\"\"\n    An individual die (of side count=sides) roll.\n    \"\"\"\n    return random.randint(1, sides)\n```\n\nThe output contains both the snoop and docstringer outputs:\n\n```\n...\n\nCALL to roll (id=4343471264)\n\n    An individual die roll.\n\n    Parameters:\n    - sides (int) - the number of sides on the dice (default = 6)\n\n    Returns:\n    - the value of the die roll\n\n\n>>> Call to roll in File \"/Users/matt/Projects/docstringer/demo.py\", line 50\n...... sides = 6\n50 | def roll(sides: int = 6) -> int:\n60 |     return random.randint(1, sides)\n<<< Return value from roll: 1\n\n...\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ttamg/docstringer",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "docstringer",
    "package_url": "https://pypi.org/project/docstringer/",
    "platform": "",
    "project_url": "https://pypi.org/project/docstringer/",
    "project_urls": {
      "Homepage": "https://github.com/ttamg/docstringer"
    },
    "release_url": "https://pypi.org/project/docstringer/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Create documentation of your function call stack from their docstrings ",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7991905,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8416e9abf7f2a38a46c1a106bbafd4041205a58933019ebc75a036cf0cc98891",
          "md5": "e53577e8faf8f723d4c0294da417e54a",
          "sha256": "9f5f0bd1c68d0233f38b215a2e9d45375e78cb5b1241e6c7b23536d3c23df27d"
        },
        "downloads": -1,
        "filename": "docstringer-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e53577e8faf8f723d4c0294da417e54a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 2223,
        "upload_time": "2020-08-18T18:10:19",
        "upload_time_iso_8601": "2020-08-18T18:10:19.895438Z",
        "url": "https://files.pythonhosted.org/packages/84/16/e9abf7f2a38a46c1a106bbafd4041205a58933019ebc75a036cf0cc98891/docstringer-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04fd37cdb9cbf447c6d30b15ec5a566a62285b56c61a9455abd661c48c3f5fe8",
          "md5": "878c115d6e4f00c1209553c4a46d506c",
          "sha256": "87e1ea5608b69dccc68d6440edff5548dc1fcc755c06a15269924e2df6c9df31"
        },
        "downloads": -1,
        "filename": "docstringer-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "878c115d6e4f00c1209553c4a46d506c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2709,
        "upload_time": "2020-08-18T18:10:32",
        "upload_time_iso_8601": "2020-08-18T18:10:32.103238Z",
        "url": "https://files.pythonhosted.org/packages/04/fd/37cdb9cbf447c6d30b15ec5a566a62285b56c61a9455abd661c48c3f5fe8/docstringer-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "941c9049b49448f8c1a83d0ed1bf419b281bdc3044b421427f427ba42a303b3d",
          "md5": "8341bc71bb0d9c68160c39a2af08de88",
          "sha256": "59a82f96f0906666b1970041e2d35f14f70ebfba70de94527ba1670bd80bc217"
        },
        "downloads": -1,
        "filename": "docstringer-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8341bc71bb0d9c68160c39a2af08de88",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6168,
        "upload_time": "2020-08-18T22:08:26",
        "upload_time_iso_8601": "2020-08-18T22:08:26.230614Z",
        "url": "https://files.pythonhosted.org/packages/94/1c/9049b49448f8c1a83d0ed1bf419b281bdc3044b421427f427ba42a303b3d/docstringer-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "327b58d29be571654a48ddc68676934bfe350e234384d0feb8cf228d6d4962ba",
          "md5": "cd1f41dd0b66d860c619143f3165cb4a",
          "sha256": "7b384e11e2bfd37f5d6d7669295492435981284910365350d396b86ab1464dd5"
        },
        "downloads": -1,
        "filename": "docstringer-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cd1f41dd0b66d860c619143f3165cb4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6609,
        "upload_time": "2020-08-18T22:08:32",
        "upload_time_iso_8601": "2020-08-18T22:08:32.434037Z",
        "url": "https://files.pythonhosted.org/packages/32/7b/58d29be571654a48ddc68676934bfe350e234384d0feb8cf228d6d4962ba/docstringer-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9109ac9191a6f1e84a8135ea24e12fbbed50a325a8ab6bb5cbee776c4cd0958b",
          "md5": "bc456c4fd491e6541fd9c406633291ff",
          "sha256": "e4e5093a31d0d6d2c8ed51726c9fa996a81ca857151095971f8defb264198d64"
        },
        "downloads": -1,
        "filename": "docstringer-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc456c4fd491e6541fd9c406633291ff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6161,
        "upload_time": "2020-08-18T22:16:31",
        "upload_time_iso_8601": "2020-08-18T22:16:31.065895Z",
        "url": "https://files.pythonhosted.org/packages/91/09/ac9191a6f1e84a8135ea24e12fbbed50a325a8ab6bb5cbee776c4cd0958b/docstringer-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7fb95ddecb51a833dbdfe138455589068c5d116a025353b1e517c4c6a2cd4b3",
          "md5": "3ba061ffc3acd507b78c492a1fef8fdd",
          "sha256": "567e2947734e04ad6e51a594cb3030b548d9f001fdb97b9f8e5b18248aeec2b7"
        },
        "downloads": -1,
        "filename": "docstringer-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3ba061ffc3acd507b78c492a1fef8fdd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6609,
        "upload_time": "2020-08-18T22:16:34",
        "upload_time_iso_8601": "2020-08-18T22:16:34.385219Z",
        "url": "https://files.pythonhosted.org/packages/a7/fb/95ddecb51a833dbdfe138455589068c5d116a025353b1e517c4c6a2cd4b3/docstringer-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9109ac9191a6f1e84a8135ea24e12fbbed50a325a8ab6bb5cbee776c4cd0958b",
        "md5": "bc456c4fd491e6541fd9c406633291ff",
        "sha256": "e4e5093a31d0d6d2c8ed51726c9fa996a81ca857151095971f8defb264198d64"
      },
      "downloads": -1,
      "filename": "docstringer-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bc456c4fd491e6541fd9c406633291ff",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6161,
      "upload_time": "2020-08-18T22:16:31",
      "upload_time_iso_8601": "2020-08-18T22:16:31.065895Z",
      "url": "https://files.pythonhosted.org/packages/91/09/ac9191a6f1e84a8135ea24e12fbbed50a325a8ab6bb5cbee776c4cd0958b/docstringer-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a7fb95ddecb51a833dbdfe138455589068c5d116a025353b1e517c4c6a2cd4b3",
        "md5": "3ba061ffc3acd507b78c492a1fef8fdd",
        "sha256": "567e2947734e04ad6e51a594cb3030b548d9f001fdb97b9f8e5b18248aeec2b7"
      },
      "downloads": -1,
      "filename": "docstringer-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3ba061ffc3acd507b78c492a1fef8fdd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6609,
      "upload_time": "2020-08-18T22:16:34",
      "upload_time_iso_8601": "2020-08-18T22:16:34.385219Z",
      "url": "https://files.pythonhosted.org/packages/a7/fb/95ddecb51a833dbdfe138455589068c5d116a025353b1e517c4c6a2cd4b3/docstringer-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}