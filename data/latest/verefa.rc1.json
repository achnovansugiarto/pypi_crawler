{
  "info": {
    "author": "Verefa Development",
    "author_email": "admin@verefa.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# VEREFA CLIENT PACKAGE\n\n*THIS SOFTWARE IS PROTECTED BY THE MIT LICENSE*\n\n**REQUIREMENTS:**\n> REQUESTS MODULE\n\n**CHANGES**\n> Machine setup supports debug, default False, ``client=verefa.machine(debug=True)``\n> Connect collects important security data and warns if unable to collect.\n\n**FUNCTIONS**\n>``client.connect()``\n\n>``client.send()``\n\n>``client.get()``\n\n>``client.iterate()``\n\n>``client.purge()``\n\n\n\n**EXAMPLE SETUP**\n\n__STEP1:__\n> Visit https://verefa.com/ and register as a developer, here you must click \"New App\" and copy the \"token\" and \"tokenid\"\n\n\n__STEP2:__\n> Install verefa as shown below.\n`pip install verefa`\n\n__STEP3:__\n> Create a python client as shown below.\n```\nimport verefa\n\nclient=verefa.machine()\nclient.connect(TOKENID,TOKEN,\"APPNAME\")\n```\nEnsure you substitute the values from your developer portal into the above connect statement.\n\n__STORING DATA:__\n> Begin storing data as shown below.\n```\ndata = {\n\t\"Name\":\"Marcus\",\n\t\"Email\":\"marcus@demomail.com\"\n}\n\nresponse = client.send(\"tablename/document\", data)\n```\n__Send Rules:__\n> Data must be created as a dictionary\n> The location must not begin or end with ``/``\n> The paths in a send/get statement must be even.\n\n\n__GETTING DATA:__\n```\nresponse = client.get(\"tablename/document\")\n```\n\n__Get Rules:__\n> Data returned will be in dictionary format.\n> You can specify parameters ``client.get(\"tablename/document\", \"Name\")`` This would call all documents which include the \"Name\" field\n\n\n__EXAMPLE:__\n\n```\nimport verefa\n\nclient=verefa.machine()\nclient.connect(123,34982,1)\n\nprint(\"DEMONSTRATION\")\n\nuserdict = {\n    \"name\":\"Daniel\",\n    \"email\":\"daniel@gmail.com\"\n    }\n\nresponse = client.send(f\"users/2\", userdict)\n\nprint(response)\n#prints success message\n\ndata = client.get(f\"users/2\")\n\nprint(data)\n#prints dictionary of data previously submitted\n\nprint(data[\"name\"])\n#prints the value of field \"name\"\n\ndocuments = client.iterate(f\"users\")\n\nprint(documents)\n#prints a dictionary with embedded dictionaries for each user document in the table of users.\n\n\nresult = client.purge(f\"users/mike\", \"FIELD\", \"email\")\n#deletes the field \"email\" in the document \"mike\"\n\n\nresult = client.purge(f\"users/mike\", \"DOC\")\n#deletes the document \"mike\" and the document's data, but not the documents or directories mike held.\n\n\nresult = client.purge(f\"users\", \"ALL\")\n#deletes the table users and all the content beneath it, does not delete content which is hidden\n\n```\n\n__WARNINGS:__\n\nYou can't have locations with an odd number of positions **unless using .iteration()**:\n> ``client.send(f\"users/bob/rewards\", userdict)`` THIS IS WRONG AND WILL ERROR\n> ``client.get(f\"users/bob/rewards\")`` THIS IS WRONG AND WILL ERROR\n\n> ``client.send(f\"users/bob/rewards/recent\", userdict)`` THIS IS CORRECT AND WILL FUNCTION\n> ``client.get(f\"users/bob/rewards/recent\")`` THIS IS CORRECT AND WILL FUNCTION\n\n__FAQ's:__\n\n>What is \"hidden\" data?\n\nWhen you delete a document using ``client.purge(f\"users/mike\", \"DOC\")`` all other documents and directories under the \"mike\" document are not deleted, they are known as \"hidden\" data, and can only be manually deleted by specifically deleting each path.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://verefa.com/",
    "keywords": "python,verefa,encryption,database",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "verefa",
    "package_url": "https://pypi.org/project/verefa/",
    "platform": null,
    "project_url": "https://pypi.org/project/verefa/",
    "project_urls": {
      "Homepage": "https://verefa.com/"
    },
    "release_url": "https://pypi.org/project/verefa/1.2.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Verefa client side package for sending and receiving data from the Verefa database system.",
    "version": "1.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13492956,
  "releases": {
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdb3513ce9da8043d8b9bb6928d02cf917f0ed155ae0973f54abc34258f9fe8d",
          "md5": "db6906fe9e8310f3c96de671b1234547",
          "sha256": "99f9c9d11e5c83250f12df0c4118e8c483b919e64a5dcc6189aee981e775d304"
        },
        "downloads": -1,
        "filename": "verefa-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "db6906fe9e8310f3c96de671b1234547",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5459,
        "upload_time": "2022-04-12T17:39:44",
        "upload_time_iso_8601": "2022-04-12T17:39:44.326167Z",
        "url": "https://files.pythonhosted.org/packages/bd/b3/513ce9da8043d8b9bb6928d02cf917f0ed155ae0973f54abc34258f9fe8d/verefa-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bdb3513ce9da8043d8b9bb6928d02cf917f0ed155ae0973f54abc34258f9fe8d",
        "md5": "db6906fe9e8310f3c96de671b1234547",
        "sha256": "99f9c9d11e5c83250f12df0c4118e8c483b919e64a5dcc6189aee981e775d304"
      },
      "downloads": -1,
      "filename": "verefa-1.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "db6906fe9e8310f3c96de671b1234547",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5459,
      "upload_time": "2022-04-12T17:39:44",
      "upload_time_iso_8601": "2022-04-12T17:39:44.326167Z",
      "url": "https://files.pythonhosted.org/packages/bd/b3/513ce9da8043d8b9bb6928d02cf917f0ed155ae0973f54abc34258f9fe8d/verefa-1.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}