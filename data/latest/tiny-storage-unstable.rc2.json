{
  "info": {
    "author": "Nikita Girvel Dobrynin",
    "author_email": "widauka@ya.ru",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![](https://byob.yarr.is/girvel/tiny_storage/coverage)\n\n# Summary\n\nLibrary for application data storage. It is:\n\n- tiny\n- key-value\n- single-file\n- YAML based\n\n## Example\n\n```py\nfrom tiny_storage import Unit, Type\nimport sys\n\n# matches the file /etc/example-app/yaml or %PROGRAMDATA%\\example-app\\config.yaml\nconfig = Unit('example-app', Type.global_config)\n\nif sys.argv[1] == 'set-greeting':\n  # changes greeting only if does not exist\n  if not config('lines.greeting').try_put(sys.argv[2]):\n    print('Greeting already exists. It should not be changed.')\nelse:\n  # prints greeting if it exists or given string\n  print(config('lines.greeting').pull('Hello, world!'))\n```\n\n## Installation\n\n```shell\npip install tiny_storage\n```\n\n# Full guide as a tiny_storage iceberg\n\n## 1. Hello world\n\n![](iceberg/1.jpg)\n\nSuppose you want to store a configuration of your application between sessions.\n\n```python\nfrom tiny_storage import Unit\n\n# create a storage unit\nconfig = Unit('application-name')\n\n# write the data\nconfig('the-best-number-ever').push(42)\n```\n\nThe code above will create a YAML configuration file in the appropriate place and save the number 42 as `the-best-number-ever` entry.\n\n## 2. Accessing data\n\n![](iceberg/2.jpg)\n\nSyntax for accessing data is the following:\n\n```python\nconfig('<dot separated path in config>').<access method>(<alternative value>)\n```\n\nThere are 5 access methods in total, but the get/set functionality is realized in pull/push methods.\n\n```python\nconfig('essential.greeting').pull('hello')  # get a greeting from config or 'hello'\nconfig('essential.greeting').push('hi')     # set a greeting as 'hi'\n```\n\n## 3. Storing config in different places\n\n![](iceberg/3.jpg)\n\nYou can define what type of config do you need and tiny_storage will choose the place according to standard of your OS. For example, to store data in global configuration file you pass `Type.global_config` to your storage unit definition, and it will go to `/etc` in linux and to `%PROGRAM_DATA%` in windows.\n\n```python\nfrom tiny_storage import Unit, Type\n\nconfig = Unit('application-name', Type.global_config)\n```\n\nThe list of all config types:\n\n| Data type            | Windows                            | Linux                          |\n|----------------------|------------------------------------|--------------------------------|\n| `Type.local`         | `{name}.yaml`                      | `{name}.yaml`                  |\n| `Type.user`          | `%APPDATA%/{name}/{name}.yaml`     | `$HOME/.{name}.yaml`           |\n| `Type.user_config `  | `%APPDATA%/{name}/config.yaml`     | `$HOME/.config/{name}.yaml`    |\n| `Type.global_data`   | `%PROGRAMDATA%/{name}/data.yaml`   | `/var/lib/{name}.yaml`         |\n| `Type.global_config` | `%PROGRAMDATA%/{name}/config.yaml` | `/etc/{name}.yaml`             |\n\nYou can also pass your own config type as a `(str) -> Path` function that constructs a path to config from the name.\n\n```python\nconfig = Unit('application-name', lambda name: Path(f\"/root/.{name}.yaml\"))\n```\n\n## 4. Access methods\n\n![](iceberg/4.jpg)\n\nThere are 5 most common cases of configuration data access and they are encapsulated into 5 access methods. \n\n### `.push(value)` to forcefully set an entry\n\n```python\nprint(f'Greeting was updated to {config(\"greeting\").push(\"hi\")}')\n```\n\n### `.pull(value)` to get an entry or default value\n\n```python\nprint(f'Current greeting is {config(\"greeting\").pull(\"<none>\")}')\n```\n\n### `.put(value)` to get the value or set it if it doesn't exist\n\n```python\nprint(f'{config(\"greeting\").put(\"Hello\")}, world')\n```\n\n### `.try_push(value)` to push and know whether something changes\n\n```python\nif not config(\"greeting\").try_push(input()):\n    print(\"You input the same greeting. Why are you doing that?\")\n```\n\n### `.try_put(value)` to put and know whether something changes\n\n```python\nif config(\"greeting\").try_put(\"Hello\"):\n    print(\"There was no greeting, so I put hello as one.\")\n```\n\n## 5. Laziness\n\n![](iceberg/5.jpg)\n\nYou can also pass a callable with no arguments as a value and it will be interpreted as a lazy value and be called only if it was used. For example, this hello world program will ask for a greeting only on the first launch:\n\n```python\nprint(config('greeting').put(input(\"greeting: \")), \"world!\")\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/girvel/tiny_storage",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tiny-storage-unstable",
    "package_url": "https://pypi.org/project/tiny-storage-unstable/",
    "platform": null,
    "project_url": "https://pypi.org/project/tiny-storage-unstable/",
    "project_urls": {
      "Homepage": "https://github.com/girvel/tiny_storage"
    },
    "release_url": "https://pypi.org/project/tiny-storage-unstable/1.1.0/",
    "requires_dist": [
      "PyYAML (>=5.3.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "Tiny library for key-value single-file application data storage",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14751792,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c19a99d51faf3d9ee2169d6e5ebd67fe42442fc4c370773f0831959ac74b73f2",
          "md5": "d702ab6143a96236171b9b39d093c0c7",
          "sha256": "0474d8a492f40919d5f3c6b220effcb85b0f4df83aa8c8480a47f1220a61de0d"
        },
        "downloads": -1,
        "filename": "tiny_storage_unstable-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d702ab6143a96236171b9b39d093c0c7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3963,
        "upload_time": "2021-12-20T08:13:52",
        "upload_time_iso_8601": "2021-12-20T08:13:52.688460Z",
        "url": "https://files.pythonhosted.org/packages/c1/9a/99d51faf3d9ee2169d6e5ebd67fe42442fc4c370773f0831959ac74b73f2/tiny_storage_unstable-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60b4af48099a144622b450fa7c893f8606e034bacf5d90523adcd8dffa207f95",
          "md5": "5a01c63e70542eb4dd6d732f861a570d",
          "sha256": "0c302e7fc4abba3b64d4565eca2a5974b3643c793b478f48610a40f6109d79dc"
        },
        "downloads": -1,
        "filename": "tiny_storage-unstable-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5a01c63e70542eb4dd6d732f861a570d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3394,
        "upload_time": "2021-12-20T08:13:54",
        "upload_time_iso_8601": "2021-12-20T08:13:54.114726Z",
        "url": "https://files.pythonhosted.org/packages/60/b4/af48099a144622b450fa7c893f8606e034bacf5d90523adcd8dffa207f95/tiny_storage-unstable-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5dd80be8d734a0db366203ac1cb70a79a7fe7be73f36f24c7b3f38e64c191c5",
          "md5": "7d94426f85365457cd9c4d1492ffbb03",
          "sha256": "348e05111af0473cc0e749b5e38ef52b18874218a6d66180f25f8d71af678316"
        },
        "downloads": -1,
        "filename": "tiny_storage_unstable-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d94426f85365457cd9c4d1492ffbb03",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4999,
        "upload_time": "2022-08-13T21:25:36",
        "upload_time_iso_8601": "2022-08-13T21:25:36.667191Z",
        "url": "https://files.pythonhosted.org/packages/b5/dd/80be8d734a0db366203ac1cb70a79a7fe7be73f36f24c7b3f38e64c191c5/tiny_storage_unstable-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd47bf9362cd10c347083492c766c17c85a31a1e78dbecf10282d04e69c7bc0a",
          "md5": "5c26ee89b6f0cdc881d632e689822f26",
          "sha256": "5a5fb2037c28d49db48c13840c14b4abffd6a1288d70d22e935acd8facd47421"
        },
        "downloads": -1,
        "filename": "tiny_storage-unstable-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5c26ee89b6f0cdc881d632e689822f26",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4671,
        "upload_time": "2022-08-13T21:25:37",
        "upload_time_iso_8601": "2022-08-13T21:25:37.733530Z",
        "url": "https://files.pythonhosted.org/packages/bd/47/bf9362cd10c347083492c766c17c85a31a1e78dbecf10282d04e69c7bc0a/tiny_storage-unstable-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b5dd80be8d734a0db366203ac1cb70a79a7fe7be73f36f24c7b3f38e64c191c5",
        "md5": "7d94426f85365457cd9c4d1492ffbb03",
        "sha256": "348e05111af0473cc0e749b5e38ef52b18874218a6d66180f25f8d71af678316"
      },
      "downloads": -1,
      "filename": "tiny_storage_unstable-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7d94426f85365457cd9c4d1492ffbb03",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4999,
      "upload_time": "2022-08-13T21:25:36",
      "upload_time_iso_8601": "2022-08-13T21:25:36.667191Z",
      "url": "https://files.pythonhosted.org/packages/b5/dd/80be8d734a0db366203ac1cb70a79a7fe7be73f36f24c7b3f38e64c191c5/tiny_storage_unstable-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd47bf9362cd10c347083492c766c17c85a31a1e78dbecf10282d04e69c7bc0a",
        "md5": "5c26ee89b6f0cdc881d632e689822f26",
        "sha256": "5a5fb2037c28d49db48c13840c14b4abffd6a1288d70d22e935acd8facd47421"
      },
      "downloads": -1,
      "filename": "tiny_storage-unstable-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5c26ee89b6f0cdc881d632e689822f26",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4671,
      "upload_time": "2022-08-13T21:25:37",
      "upload_time_iso_8601": "2022-08-13T21:25:37.733530Z",
      "url": "https://files.pythonhosted.org/packages/bd/47/bf9362cd10c347083492c766c17c85a31a1e78dbecf10282d04e69c7bc0a/tiny_storage-unstable-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}