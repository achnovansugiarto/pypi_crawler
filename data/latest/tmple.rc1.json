{
  "info": {
    "author": "Muhamad Tohir",
    "author_email": "maztohir@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Code Generators"
    ],
    "description": "# tmple\nGeneral files or content generator, using **template** and **data/variables**.\n\n> Content of the file will be controlled by the **template** (in [Jinja](https://jinja.palletsprojects.com/en/3.1.x/)), \nand you can control the **template** using **data/variables** (in [Yaml](https://yaml.org/)).\n\n- [Use Cases](#Use-cases)\n    - [Generate simple file from template](#👨‍👩‍👦-Generate-simple-file,-based-on-a-template)\n    - [Generate multiple files](#generate-list-of-files-based-on-multiple-templates)\n    - [Just print](#just-print-not-generate-files)\n- [Recipe Concept](#recipe-concept)\n- [Installation](#installation)\n- [Usage](#usage)\n\n## Use Cases\n#### 👨‍👩‍👦 Generate simple file, based on a template\nLet say you want to generate a repeated SQL file like this:\n```sql\n\nWITH \ntop_user (SELECT name, phone, address, gender, birth_date FROM top_user LIMIT 10),\nmid_user (SELECT name, phone, address, gender, birth_date FROM mid_user LIMIT 10),\nlow_user (SELECT name, phone, address, gender, birth_date FROM low_user LIMIT 10),\nbase_user (SELECT name, phone, address, gender, birth_date FROM base_user LIMIT 10)\n\nSELECT * top_user UNION ALL\nSELECT * mid_user UNION ALL\nSELECT * low_user UNION ALL\nSELECT * base_user\n```\n<sub><sup>**just imagine it has 1000 lines with another repetitive complex query* </sup></sub>😂\n\nNow, what you need to do, is having a template! a Jinja template!\n```django\nWITH \n{%- for tb in tables %}\n{{ tb.name }} AS (SELECT {% for c in columns %}{{ c }}{{ ',' if not loop.last }} {% endfor %}FROM {{ tb.name }} LIMIT {{ tb.limit }}){{ ',' if not loop.last }}\n{%- endfor %}\n{% for tb in tables %}\nSELECT * FROM {{ tb.name }} {{ 'UNION ALL' if not loop.last }}\n{%- endfor %}\n```\n<sub><sup>*Save it to `.jinja2` file to your folder `working_dir/sample.jinja2`*</sup></sub>\n\nBut for sure that 👆 template can't generate by it self, it needs a data or variables to work on, right?\nLet's just create a yaml file with this format:\n\n```yaml\nvar: #hold all variables/dictionary that needed in your jinja files\n    tables:\n        - name: top_user\n        limit: 10\n        - name: mid_user\n        limit: 20\n        - name: low_user\n        limit: 10\n        - name: base_user\n        limit: 30\n\n    columns:\n        - name\n        - phone\n        - address\n        - gender\n        - birth_date\n\ngenerator:\n    - template: sample.jinja2 #where you save your jinja file\n      destination:\n        - output.sql\n        - log # to also print the result on your terminal\n```\n<sub><sup>*Save it to `.yaml` file to your folder as `working_dir/recipe.yaml`*</sup></sub>\nDone! above yaml is what we call `recipe`, for more detail, please take a look [Recipe Concept](#recipe-concept) section.\nNow, lets run your recipe! and see the result!\n```bash\ncd working_dir\n\ntmple --recipe recipe.yaml\n```\n\nUh oh, you can't run tmple yet? [install first](#installation) man! 😂😂\n\n#### Generate list of files based on multiple templates\nWhen you expect to generate multiple files, you can do setup on the recipe it self!\n\nYou can do write to multiple files for the same template, it will generate the same content but in different files\n```yaml\nvar: variables\n\ngenerator:\n    - template: samples/templates/sample.jinja2\n      destination:\n        - samples/results/sample.sql\n        - /Users/personname/folder/tmple/src/results/simple.sql\n        - sample/result/log.txt\n```\n\nbut if let say you need to generate with different template, then do this instead:\n```yaml\nvar: variables\n\ngenerator:\n    - template: samples/templates/sample.jinja2\n      destination:\n        - samples/results/sample.sql\n        - /Users/personname/folder/tmple/src/results/simple.sql\n    - template: samples/templates/sample2.jinja2\n      destination:\n        - samples/results/sample2.sql\n    - template: samples/templates/sample3.jinja2\n      destination:\n        - samples/results/sample3.sql\n```\nWhen do this, make sure you have all variables setup in `var:` that needed from all your template.\n\n#### Just print, not generate files\nThis will generate content from `sample.jinja2` but will not generate a file, it will only do log in your terminal.\nYou need add `destination:` to generate a file.\n```yaml\nvar: variables\n\ngenerator:\n    - template: samples/templates/sample.jinja2\n```\n\nThis also only do log/print only\n```yaml\nvar: variables\n\ngenerator:\n    - template: samples/templates/sample.jinja2\n      destination: log\n```\n\n## Recipe concept\nRecipe is a config file to tell the `tmple` about:\n- all the variables that needed in your **templates** (`var:`)\n- which template that you gonna use to generate file (`generator:template:`)\n- where to save the generated content from your template (`generator:destination:`)\n\n\n```yaml\nvar: # mandatory\n    any_variable: you need\n    you_can:\n        - write\n        - down\n        - here\n    and_also:\n        it_support: \n            nested: variables!\n# above variables it just mentionable in the Jinja files\n# like {{ it_also.support.nested }}\n\nextend: # optional\n    - samples/recipes/parent_recipe.yaml\n    # do inherit\n    # all variables or generator written from this parent_recipe.yaml \n    # will be also extended into current recipe\n\n\ngenerator: # mandatory\n    - template: samples/templates/sample.jinja2\n      destination:\n        - samples/results/sample.sql # directly create a file in this relateve path\n        - /Users/personname/folder/tmple/src/results/simple.sql #absolute path to place to some folder\n        - log # just print in the log of your terminal\n\n    # you could also generate multiple files in different template using the same variables\n    - template: samples/templates/sample2.jinja2\n    # if there is no destination key here, then it will only print the generated content\n```\n\n## Installation\n\nInstall using pip / pip3\n\n```bash\npip install tmple\n```\n\n## Usage\n#### Running from terminal\n```bash\ntmple -r path/your_recipe.yaml\n```\nor\n```bash\ntmple --recipe path/your_recipe.yaml\n```\n\n#### Running from python code\n\n```python\nfrom tmple.recipe import Recipe\nrecipe = Recipe.from_path('your_recipe_path.yaml')\nrecipe.generate()\n```\n\n#### Running from tmple repository\n\n```bash\ncd tmple\npython3 main.py -r your_recipe.yaml\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/maztohir/tmple",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tmple",
    "package_url": "https://pypi.org/project/tmple/",
    "platform": null,
    "project_url": "https://pypi.org/project/tmple/",
    "project_urls": {
      "Bug Tracker": "https://github.com/maztohir/tmple/issues",
      "Homepage": "https://github.com/maztohir/tmple"
    },
    "release_url": "https://pypi.org/project/tmple/0.1.0/",
    "requires_dist": [
      "Jinja2 (==2.11.2)",
      "markupsafe (==2.0.1)",
      "PyYAML (==5.4.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "General files or content generator, using template and data/variables.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14602269,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b9625adf0761b82981a596fdb64bcee6912d1d03f162d970bfe8d6f1a6cd773",
          "md5": "11a00bed68e6956653eaceb08e6a3ad7",
          "sha256": "b8397c824ec681de26cffded7ae9a3ac4a015651cd63caf2f940820968bbb291"
        },
        "downloads": -1,
        "filename": "tmple-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "11a00bed68e6956653eaceb08e6a3ad7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 7180,
        "upload_time": "2022-07-31T03:55:22",
        "upload_time_iso_8601": "2022-07-31T03:55:22.336269Z",
        "url": "https://files.pythonhosted.org/packages/4b/96/25adf0761b82981a596fdb64bcee6912d1d03f162d970bfe8d6f1a6cd773/tmple-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4b9625adf0761b82981a596fdb64bcee6912d1d03f162d970bfe8d6f1a6cd773",
        "md5": "11a00bed68e6956653eaceb08e6a3ad7",
        "sha256": "b8397c824ec681de26cffded7ae9a3ac4a015651cd63caf2f940820968bbb291"
      },
      "downloads": -1,
      "filename": "tmple-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "11a00bed68e6956653eaceb08e6a3ad7",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 7180,
      "upload_time": "2022-07-31T03:55:22",
      "upload_time_iso_8601": "2022-07-31T03:55:22.336269Z",
      "url": "https://files.pythonhosted.org/packages/4b/96/25adf0761b82981a596fdb64bcee6912d1d03f162d970bfe8d6f1a6cd773/tmple-0.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}