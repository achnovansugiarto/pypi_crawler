{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License"
    ],
    "description": "# semantic-version-inator\n\nUtility to aid in incrementing the semantic version of a Python package in an automated build.\n\nHow to use:\n\nSet up CI/CD pipeline/workflow to set parameters: `release_type` and `current_version`\n\nThe `release_type` parameter should have a default value of PATCH, with an option to set as MINOR \nor MAJOR as appropriate. This param could be user selectable when manually triggering a build, or \ncould be automated if a means of programmatically determining type of release is possible.\n\nThe `current_version` parameter must be derived from the latest published package version. \nOne option is to download the latest (i.e. pip download) and parse the file name from the file.\n\nInstalling this package installs two console commands, each taking the two arguments noted above: \n\n`get_next_ver_file_name` is a convenience function, intended to parse the current version \nfrom a package file name, i.e. pkg_name-0.0.0-py3-none-any.whl:\n\ninput/output examples:\n```\nget_next_ver_file_name pkg_name-0.0.0-py3-none-any.whl PATCH\n0.0.1\n```\n```\nget_next_ver_file_name pkg_name-0.0.0-py3-none-any.whl MINOR\n0.1.0\n```\n```\nget_next_ver_file_name pkg_name-0.0.0-py3-none-any.whl MAJOR\n1.0.0\n```\n\n`get_next_ver` is an alternative to the above in case the above does not handle a given package\nname well, or if the version is obtained independently of the current version package file name. \nIt is intended to receive the current semantic version (not file name), i.e. 0.0.0:\n\ninput/output examples:\n```\nget_next_ver 0.0.0 PATCH\n0.0.1\n```\n```\nget_next_ver 0.0.0 MINOR\n0.1.0\n```\n```\nget_next_ver 0.0.0 MAJOR\n1.0.0\n```\n\nWhen the new version number is derived using one of the options above, set it as an environment \nvariable, which setup.py can use to dynamically set during the package build process, i.e.:\n\nsetup.py sample content:\n\n```\nPKG_VERSION = \"0.0.0\"\ntry:\n    new_ver = os.environ[\"new_ver\"]\n    if new_ver:\n        PKG_VERSION = new_ver\n    else:\n        print(\"new_ver not found, using PKG_VERSION default:\", PKG_VERSION)\nexcept KeyError:\n    print(\"new_ver not found, using PKG_VERSION default:\", PKG_VERSION)\n\nsetup(\n    ...\n    version=PKG_VERSION,\n    ...\n)\n```\n\nExample Github Actions workflow using the above - note:\n - replace <<<PROJECT_NAME>>> with actual repository directory (project) name\n - assumes this package is pip installed as one of the dev-dependencies\n\n```\nname: Build <<<PROJECT_NAME>>>\n\non:\n  push:\n    branches:\n      - \"main\"\n  workflow_dispatch:\n    inputs:\n      publishPackage:\n        description: Publish Package\n        required: true\n        default: false\n        type: boolean\n      versionType:\n        description: 'Version Type'\n        required: true\n        default: 'PATCH'\n        type: choice\n        options:\n        - 'PATCH'\n        - 'MINOR'\n        - 'MAJOR'\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    steps:\n    - uses: actions/checkout@v3\n      with:\n        path: <<<PROJECT_NAME>>>\n    \n    - name: set vars\n      run: |\n        publishPackage=\"false\"\n        if [ \"${{ github.event.inputs.publishPackage }}\" != \"\" ]\n        then\n          publishPackage=\"${{ github.event.inputs.publishPackage }}\"\n        fi\n        echo \"publishPackage=$publishPackage\" >> $GITHUB_ENV\n\n        versionType=\"PATCH\"\n        if [ \"${{ github.event.inputs.versionType }}\" != \"\" ]\n        then\n          versionType=\"${{ github.event.inputs.versionType }}\"\n        fi\n        echo \"versionType=$versionType\" >> $GITHUB_ENV\n\n    - name: check vars\n      run: |\n        echo \"publishPackage: ${{ env.publishPackage }}\"\n        echo \"versionType: ${{ env.versionType }}\"\n\n    - name: Set up Python 3.10\n      uses: actions/setup-python@v3\n      with:\n        python-version: \"3.10\"\n\n    - name: Install dependencies\n      run: |\n        python -m pip install --upgrade pip\n        if [ -f <<<PROJECT_NAME>>>/requirements-dev.txt ]; then pip install -r <<<PROJECT_NAME>>>/requirements-dev.txt; fi\n\n    - name: Run pylint\n      run: |\n        pylint <<<PROJECT_NAME>>>/<<<PROJECT_NAME>>> --fail-under=8\n\n    - name: Run pytest\n      run: |\n        pytest <<<PROJECT_NAME>>> --cov-report=html --cov-branch --cov=.\n\n    - name: Check coverage\n      run: |\n        coverage report --fail-under=80 --omit=\"setup.py,*/__init__.py,*/tests/*\"\n\n    - name: Get next version\n      continue-on-error: true\n      run: |\n        pip download <<<PROJECT_NAME>>>\n        file_name=$(ls <<<PROJECT_NAME>>>*.whl)\n        if [ \"$file_name\" != \"\" ]\n          then\n          new_ver=$(get_next_ver_file_name $file_name ${{ env.versionType }})\n          echo \"new_ver: \"$new_ver\n          echo \"new_ver=$new_ver\" >> $GITHUB_ENV\n        else\n          echo \"unable to get next version\"\n        fi\n\n    - name: Build package\n      run: |\n        cd <<<PROJECT_NAME>>>\n        python -m build --wheel\n\n    - name: Publish package to pypi\n      if: ${{ env.publishPackage == 'true' }}\n      uses: pypa/gh-action-pypi-publish@release/v1.5\n      with:\n        user: __token__\n        password: ${{ secrets.PYPI_API_TOKEN }}\n        packages_dir: <<<PROJECT_NAME>>>/dist\n\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "semantic-version-inator",
    "package_url": "https://pypi.org/project/semantic-version-inator/",
    "platform": null,
    "project_url": "https://pypi.org/project/semantic-version-inator/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/semantic-version-inator/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.10",
    "summary": "Utility to aid in incrementing the semantic version of a Python package in an automated build",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14323677,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d52e9e3a72e78ff3efebc008d75a846f6950a783b3e74d3c914adce39871516c",
          "md5": "35487474d8fbfd67ddf5cfda587dc74d",
          "sha256": "93402ccb13e03e6f069865638e4a3508397f9e3056c7a477abeb000591741969"
        },
        "downloads": -1,
        "filename": "semantic_version_inator-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35487474d8fbfd67ddf5cfda587dc74d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 8202,
        "upload_time": "2022-07-02T22:24:44",
        "upload_time_iso_8601": "2022-07-02T22:24:44.294699Z",
        "url": "https://files.pythonhosted.org/packages/d5/2e/9e3a72e78ff3efebc008d75a846f6950a783b3e74d3c914adce39871516c/semantic_version_inator-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a9d8a9104e28733c7e452a133d2c7a3be6bb29ede81ad2cb4d17e776a4c6d66",
          "md5": "4c223f4d38c900fe90697e85d3f2aa1f",
          "sha256": "8d95a1ae452697ded419b8be60a866923301e8e4514252373f734c2284c73351"
        },
        "downloads": -1,
        "filename": "semantic_version_inator-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c223f4d38c900fe90697e85d3f2aa1f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 9194,
        "upload_time": "2022-07-03T19:44:28",
        "upload_time_iso_8601": "2022-07-03T19:44:28.645207Z",
        "url": "https://files.pythonhosted.org/packages/3a/9d/8a9104e28733c7e452a133d2c7a3be6bb29ede81ad2cb4d17e776a4c6d66/semantic_version_inator-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a9d8a9104e28733c7e452a133d2c7a3be6bb29ede81ad2cb4d17e776a4c6d66",
        "md5": "4c223f4d38c900fe90697e85d3f2aa1f",
        "sha256": "8d95a1ae452697ded419b8be60a866923301e8e4514252373f734c2284c73351"
      },
      "downloads": -1,
      "filename": "semantic_version_inator-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4c223f4d38c900fe90697e85d3f2aa1f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 9194,
      "upload_time": "2022-07-03T19:44:28",
      "upload_time_iso_8601": "2022-07-03T19:44:28.645207Z",
      "url": "https://files.pythonhosted.org/packages/3a/9d/8a9104e28733c7e452a133d2c7a3be6bb29ede81ad2cb4d17e776a4c6d66/semantic_version_inator-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}