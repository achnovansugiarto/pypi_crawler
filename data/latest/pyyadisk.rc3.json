{
  "info": {
    "author": "Andrei S. Pavlov",
    "author_email": "andy_pavlov@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# PyYaDisk\n**PyYaDisk** is a wrapper over Yandex Disk Rest API V1. \nThe library is in creation process. You can check realized features with our roadmap below. \n\n## Installation\nInstall and update using [pip](https://pip.pypa.io/en/stable/getting-started/):\n```\npip install -U pyyadisk\n```\n\n## Usage\n\n### 0. Get Oauth-token\nBefore you start using YandexDisk API, you need to get a token for Oauth authorization.\nYou can get it from [Yandex Poligon](https://yandex.ru/dev/disk/poligon/).\n\n### 1. Yandex Disk instance\nLet's start. At first we need to make an YandexDisk instance:\n```python\nfrom pyyadisk import YandexDisk\n\ntoken = 'ya_oauth_token'\ndisk = YandexDisk(token=token, proxy=proxy, ssl_verify=True, max_retries=5)\n```\n`token`: Oauth token (get it at [https://yandex.ru/dev/disk/poligon/](https://yandex.ru/dev/disk/poligon/))\n\n`proxy`: (optional) Proxy address for http and https\n\n`ssl_verify`: (optional) Flag of connection ssl verification check\n\n`max_retries`: (optional) Number of maximum connection retries\n\n\n### 2. Set Path\nNow we ready to make some operations. Let's set the path for operations:\n\n```python\ndisk.path(path='path/to/directory')\n```\n`path`: full path to directory or file\n\n### 3. Upload a file\n\n#### 3.1. Upload local file\nOk. We ready to upload a file from computer. \nIf file exists it will be overwritten with flag `overwrite=True`\n\n```python\ndisk = YandexDisk(token=token)\ndisk.path(path='path/to/directory')\nresponse = disk.upload(filepath='home/computer/path/to/the/file.pdf', overwrite=True)\n```\n`filepath`: Path to the file\n\n`overwrite`: (optional) Enable overwriting for uploaded item\n\nOr in one line\n```python\ndisk.path('path/to/directory').upload('home/computer/path/to/the/file.pdf', overwrite=True)\n```\n\n#### 3.2. Upload file by URL\n```python\ndisk = YandexDisk(token=token)\ndisk.path(path='path/to/directory')\noperation_id = disk.upload_by_url(filename='file.pdf', url='https://example.com/file_1.pdf', disable_redirects=False)\n```\nUploading file by url working at serverside in async mode. ```upload_by_url()``` returns `operation_id`.\n\n`filename`: name of the file\n\n`url`: url of the file\n\n`disable_redirects`: Disable redirects\n\n### 4. Uploading status\nBy `operation_id` we can get status of uploading:\n```python\nstatus = disk.operations(self, operation_id: str)\n```\n\n### 5. File or Directory operations\nNow when file or directory was uploaded we can make some operations with it.\n\n* `get(limit: int = None, offset: int = None)`: Get stats of file or directory\n\n    `limit`: The number of items to return\n    \n    `offset`: Offset from the beginning\n\n\n* `create(self, subdir: str = None)`: Create directory\n\n    `subdir`: Name of subdirectory. If 'subdir = None' the directory will be created by path-data\n\n\n* `delete(self, force_async: bool = None, md5_hash: str = None, permanently: bool = False)`: Delete file or directory\n  \n    `force_async`: Execute asynchronously (True or False).\n\n    `md5_hash`: md5 hash of file\n\n    `permanently`: Flag of permanently delete\n\n\n* `copy_to(self, destination: str, force_async: bool = None, overwrite: bool = None)`: Copy file or directory\n* `move_to(self, destination: str, force_async: bool = None, overwrite: bool = None)`: Move file or directory\n\n    `destination`: Destination path\n\n    `force_async`: Execute asynchronously (True or False).\n\n    `overwrite`: Flag of overwrite enable\n\n\n```python\ndisk = YandexDisk(token=token)\n\ncreate_ = disk.path('path/to/directory').create()  # Create directory\n\ninfo = disk.path('path/to/directory').get()  # Directory stats\n\ncopy_ = disk.path('path/to/directory').copy_to('path/to/new/directory')  # Copy from path='path/to/directory'\n\nmove_ = disk.path('path/to/directory').move_to('path/to/new/directory')  # Move from path='path/to/directory'\n\ndisk.path('path/to/directory').delete()  # Delete directory or file\n```\n\n### 6. Share\n\n`share()`: Share file or directory which set by YandexDisk.path('path/to/the/file'). Returns `tuple(response_code, public_url)`\n\n`unshare()`: Unshare file or directory\n\n`public_url()`: Get public url of file or directory\n\n`public_key()`: Get public key of file or directory\n\nExample:\n\n```python\ndisk = YandexDisk(token=token)\n\nlink = disk.path('path/to/directory').share()\nlink = disk.path('path/to/directory').public_url()\npublic_key = disk.path('path/to/directory').public_key()\ndisk.path('path/to/directory').unshare()\n```\n\n## Roadmap\n- [x] OAuth authorization by token\n\n`/v1/disk`\n- [x] Get disk metadata\n\n`/v1/disk/resources`\n- [x] Get metadata of file or directory\n- [x] Create directory\n- [x] Delete file or directory\n- [x] Move file or directory\n- [x] Copy file or directory\n- [x] Get download link (private)\n- [x] Share directory or file and get public link\n- [x] Get download link (public)\n- [x] Get list of files\n- [x] Get last uploaded files\n- [x] Upload file\n- [x] Upload file by url\n\n`/v1/disk/resources/save-to-disk`\n- [ ] Save public file to disk by public key or url\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/ndrwpvlv/pyyadisk/archive/refs/tags/0.1.2.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ndrwpvlv/pyyadisk",
    "keywords": "Yandex,Yandex Disk,Yandex Disk REST API",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyyadisk",
    "package_url": "https://pypi.org/project/pyyadisk/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyyadisk/",
    "project_urls": {
      "Download": "https://github.com/ndrwpvlv/pyyadisk/archive/refs/tags/0.1.2.tar.gz",
      "Homepage": "https://github.com/ndrwpvlv/pyyadisk"
    },
    "release_url": "https://pypi.org/project/pyyadisk/0.1.3/",
    "requires_dist": [
      "requests (==2.26.0)"
    ],
    "requires_python": "",
    "summary": "PyYaDisk is a small wrapper over Yandex Disk Rest API V1",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11175653,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72d2ec8e7b919dad9b04dff827f926c24c4e5c3d1415a30de096eedf4ed33455",
          "md5": "080153136c095cb6be1c41a86bb8539b",
          "sha256": "d91c45f18be76340ad3276e10acbb9aaef645085b4ec49679bbcf5da0ae8adda"
        },
        "downloads": -1,
        "filename": "pyyadisk-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "080153136c095cb6be1c41a86bb8539b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5249,
        "upload_time": "2021-08-11T22:25:13",
        "upload_time_iso_8601": "2021-08-11T22:25:13.276755Z",
        "url": "https://files.pythonhosted.org/packages/72/d2/ec8e7b919dad9b04dff827f926c24c4e5c3d1415a30de096eedf4ed33455/pyyadisk-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a310be57f8ad240f7cded9deada1e882283abf7f8f3029d540e20b5f990e1d7",
          "md5": "63251a2d7a70946577064a4ebb5a4a4d",
          "sha256": "7692d6cdcb6f70bfd38c28714354a9ba389ee9d889bd8cfeaf8b39511e207af9"
        },
        "downloads": -1,
        "filename": "pyyadisk-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "63251a2d7a70946577064a4ebb5a4a4d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4398,
        "upload_time": "2021-08-11T22:25:15",
        "upload_time_iso_8601": "2021-08-11T22:25:15.254211Z",
        "url": "https://files.pythonhosted.org/packages/9a/31/0be57f8ad240f7cded9deada1e882283abf7f8f3029d540e20b5f990e1d7/pyyadisk-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8704acd4a91ce63b3bd5ef0d30db7842611d0318b6bb624d85657cb9876b6152",
          "md5": "d3917567fec8898ae69a0827cd7363ee",
          "sha256": "8cb5bee52294971cb697344f48fe63972f5055b916e0a74e47a8e785ed22f69b"
        },
        "downloads": -1,
        "filename": "pyyadisk-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d3917567fec8898ae69a0827cd7363ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7224,
        "upload_time": "2021-08-13T17:07:26",
        "upload_time_iso_8601": "2021-08-13T17:07:26.238972Z",
        "url": "https://files.pythonhosted.org/packages/87/04/acd4a91ce63b3bd5ef0d30db7842611d0318b6bb624d85657cb9876b6152/pyyadisk-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13838cde1acc7c0d8b91693843ed850b75ec5f5baacb12d8539440d45f60b896",
          "md5": "b8b65aea376d1ec2f14a368bdb9eaa60",
          "sha256": "d2aa864d4e04d0ee22816237caadb1786552db8e9a4440ae61ba89b0b70ad550"
        },
        "downloads": -1,
        "filename": "pyyadisk-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b8b65aea376d1ec2f14a368bdb9eaa60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6222,
        "upload_time": "2021-08-13T17:07:27",
        "upload_time_iso_8601": "2021-08-13T17:07:27.600728Z",
        "url": "https://files.pythonhosted.org/packages/13/83/8cde1acc7c0d8b91693843ed850b75ec5f5baacb12d8539440d45f60b896/pyyadisk-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c5e6e28d5a85833400c2408ecd061a157fc6e983abe229c7b1b2df922eac065",
          "md5": "200163b7314956e6285c402920266820",
          "sha256": "f2e25e0a37d419928fd69d7441191d51c0fd3e14bcc7dfd349ec3455d2924d7a"
        },
        "downloads": -1,
        "filename": "pyyadisk-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "200163b7314956e6285c402920266820",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8289,
        "upload_time": "2021-08-13T23:48:28",
        "upload_time_iso_8601": "2021-08-13T23:48:28.561636Z",
        "url": "https://files.pythonhosted.org/packages/9c/5e/6e28d5a85833400c2408ecd061a157fc6e983abe229c7b1b2df922eac065/pyyadisk-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2faab06df3ab067e1be92dbc2bd7bc870c89fd988ea68fb2a46e91f1c7ae310b",
          "md5": "321ffcd6cfc5c88db6605ff5aa7a704f",
          "sha256": "c9e82b8886a76f83ce81421305455fa1688fd8d378c37c5b2864cb5e7171fb7a"
        },
        "downloads": -1,
        "filename": "pyyadisk-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "321ffcd6cfc5c88db6605ff5aa7a704f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8130,
        "upload_time": "2021-08-13T23:48:30",
        "upload_time_iso_8601": "2021-08-13T23:48:30.124810Z",
        "url": "https://files.pythonhosted.org/packages/2f/aa/b06df3ab067e1be92dbc2bd7bc870c89fd988ea68fb2a46e91f1c7ae310b/pyyadisk-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9c5e6e28d5a85833400c2408ecd061a157fc6e983abe229c7b1b2df922eac065",
        "md5": "200163b7314956e6285c402920266820",
        "sha256": "f2e25e0a37d419928fd69d7441191d51c0fd3e14bcc7dfd349ec3455d2924d7a"
      },
      "downloads": -1,
      "filename": "pyyadisk-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "200163b7314956e6285c402920266820",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8289,
      "upload_time": "2021-08-13T23:48:28",
      "upload_time_iso_8601": "2021-08-13T23:48:28.561636Z",
      "url": "https://files.pythonhosted.org/packages/9c/5e/6e28d5a85833400c2408ecd061a157fc6e983abe229c7b1b2df922eac065/pyyadisk-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2faab06df3ab067e1be92dbc2bd7bc870c89fd988ea68fb2a46e91f1c7ae310b",
        "md5": "321ffcd6cfc5c88db6605ff5aa7a704f",
        "sha256": "c9e82b8886a76f83ce81421305455fa1688fd8d378c37c5b2864cb5e7171fb7a"
      },
      "downloads": -1,
      "filename": "pyyadisk-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "321ffcd6cfc5c88db6605ff5aa7a704f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8130,
      "upload_time": "2021-08-13T23:48:30",
      "upload_time_iso_8601": "2021-08-13T23:48:30.124810Z",
      "url": "https://files.pythonhosted.org/packages/2f/aa/b06df3ab067e1be92dbc2bd7bc870c89fd988ea68fb2a46e91f1c7ae310b/pyyadisk-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}