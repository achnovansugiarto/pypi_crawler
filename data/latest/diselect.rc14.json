{
  "info": {
    "author": "HS Moon",
    "author_email": "pbr112@naver.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "## 1. Introduction\n### - A smart and convenience single function for extracting container value consisting of list and dict\n### - Query a container with a complex structure, mainly generated from json, and flatten it into a dict with a single structure.\n### - Get freedom from code that indexes complex json data one by one and writes for loops like this below...\n> \n```python\n\n# extracting from json loads data..\n\nsample_from_json = json.loads('sample.json')\n\ncount = sample_from_json['count']\ndata_list = sample_from_json.get('data_list')\n\nfor cityinfo in data_list:\n    for key, value in cityinfo.items():\n        if key == 'city':\n            city_name = value['names']['en']\n        if key == 'subdivisions':\n            subdiv = []\n            for subsubdivision in value:\n                sv = subsubdivision['names']['en']\n                subdiv.append(sv)\n                ...\n                ...\n            ...\n        ...\n        ...\n    ...\n    ...\n    OMG...\n    ...\n    ....\n```\n---\n\n## 2. Installation and Usage\n - Made in Python 3.8 or later\n```shell\npip install diselect\n```\n```python\nfrom diselect import diselect\n\n# example\n# list of dict in dict in list in dict in list of dict in....\nsample_from_json = {\n    'count': 1,\n    'date': '2022-5-31',\n    'data_list': [\n        {\n            \"city\": {\n                \"names\": {\n                    \"en\": \"Songpa-gu\"\n                }\n            },\n            \"continent\": {\n                \"code\": \"AS\",\n                \"names\": {\"pt-BR\": \"Ásia\", \"de\": \"Asien\", \"en\": \"Asia\",}\n            },\n            \"country\": {\n                \"iso_code\": \"KR\", \n                \"names\": {\n                    \"de\": \"Südkorea\",\n                    \"en\": \"South Korea\",\n                }\n            },\n            \"location\": {\"latitude\": 37.5013, \"longitude\": 127.1188, \"time_zone\": \"Asia/Seoul\"},\n\n            # multiple childerns of list\n            \"subdivisions\": [\n                {\n                    \"iso_code\": \"11\",\n                    \"names\": {\"zh-CN\": \"首尔特别市\", \"en\": \"Seoul\", \"ja\": \"ソウル特別市\"}\n                },\n                {\n                    \"iso_code\": \"12\",\n                    \"names\": {\"en\": \"Hangang\"}\n                }\n            ],\n            \n        },\n        {\n            \"city\": {\n                \"names\": {\n                    \"en\": \"Songpa-gu2\"\n                }\n            },\n            \"continent\": {\n                \"code\": \"AS2\",\n                \"names\": {\"pt-BR\": \"Ásia2\", \"de\": \"Asien\", \"en\": \"Asia2\",}\n            },\n            \"country\": {\n                \"iso_code\": \"KR2\", \n                \"names\": {\n                    \"de\": \"Südkorea2\",\n                    \"en\": \"South Korea2\",\n                }\n            },\n            \"location\": {\"latitude\": 37.5013, \"longitude\": 127.1188, \"time_zone\": \"Asia/Seoul2\"},\n\n            # multiple childerns of list\n            \"subdivisions\": [\n                {\n                    \"iso_code\": \"112\",\n                    \"names\": {\"zh-CN\": \"首尔特别市\", \"en\": \"Seoul2\", \"ja\": \"ソウル特別市\"}\n                },\n                {\n                    \"iso_code\": \"122\",\n                    \"names\": {\"en\": \"Hangang2\"}\n                }\n            ],\n            \n        },\n    ]\n}\n\n\n```\n```python\n# Useage 1) Specify only the column name\n# When taking the highest values in container ​​without the risk of duplication\n\nquery_only_key = ['count', 'date'] # key name to column\nfor r in diselect(sample_from_json, query_only_key):\n    print(r)\n\n# results {'count': 1, 'date': '2022-5-31'}\n```\n\n```python\n# Useage 2) Extract nested values\n# parent paths tuple keys of target 'terminal' value\n# If there are few parental generations, duplicate matching may occur.\n# Exception when duplicate occurs\n\nquery_deep_path = [('city', 'names', 'en'), ('country', 'names', 'en')] # en is key of terminal value\nfor r in diselect(sample_from_json, query_deep_path):\n    print(r)\n\n# results \n# {('city', 'names', 'en'): 'Songpa-gu', ('country', 'names', 'en'): 'South Korea'}\n# {('city', 'names', 'en'): 'Songpa-gu2', ('country', 'names', 'en'): 'South Korea2'}\n```\n\n```python\n# Useage 3) Aliasing query to column name\n# Change the query to an usable column name\n\nquery_aliases = {\n    ('city', 'names', 'en'): 'city_name',\n    ('country', 'names', 'en'): 'country_name',\n    ('subdivisions', 'names', 'en'): 'subdivision_name'\n}\n# or\nquery_aliases = [\n    {('city', 'names', 'en'): 'city_name'},\n    {('country', 'names', 'en'): 'country_name'},\n    {('subdivisions', 'names', 'en'): 'subdivision_names'}\n]\n\nfor r in diselect(sample_from_json, query_aliases):\n    print(r)\n\n# results:\n# {'city_name': 'Songpa-gu', 'country_name': 'South Korea', 'subdivision_names': ['Seoul', 'Hangang']}\n# {'city_name': 'Songpa-gu2', 'country_name': 'South Korea2', 'subdivision_names': ['Seoul2', 'Hangang2']}\n# multiple children values of subdivision_names has coaleased to list ['Seoul', 'Hangang']\n```\n```python\n# Useage 4) join listed children values\n# pass tuple value of aliase and function\n\nquery_aliases_and_join_children = {\n    ('city', 'names', 'en'): 'city_name',\n    ('country', 'names', 'en'): 'country_name',\n    ('subdivisions', 'names', 'en'): ('subdivision_names', ','.join), # alias, join function\n}\n\nfor r in diselect(sample_from_json, query_aliases_and_join_children):\n    print(r)\n\n# results\n# {'city_name': 'Songpa-gu', 'country_name': 'South Korea', 'subdivision_names': 'Seoul,Hangang'}\n# {'city_name': 'Songpa-gu2', 'country_name': 'South Korea2', 'subdivision_names': 'Seoul2,Hangang2'}\n# Soule, Hangang has joined with sep ','\n```\n```python\nquery_aliases_and_join_children = {\n    ('city', 'names', 'en'): 'city_name',\n    ('country', 'names', 'en'): 'country_name',\n    ('subdivisions', 'names', 'en'): [\n        'subdivision_names',\n        ','.join, str.upper # alias, chaining function\n    ]\n}\n\nfor r in diselect(sample_from_json, query_aliases_and_join_children):\n    print(r)\n# results\n# {'city_name': 'Songpa-gu', 'country_name': 'South Korea', 'subdivision_names': 'SEOUL,HANGANG'}\n# {'city_name': 'Songpa-gu2', 'country_name': 'South Korea2', 'subdivision_names': 'SEOUL2,HANGANG2'}\n```\n\n```python\n# Useage 5) merge muliple select\n \nquery = {\n    (('continent', 'names', 'en'), ('country', 'names', 'en'), ('city', 'names', 'en')):[\n        'address',\n        '/' # if str, be a shorcut of join function\n    ],\n    (('latitude',), ('longitude',)): [\n        'coordinate'\n    ]\n}\nfor r in diselect(sample_from_json, query):\n    print(r)\n\n# {'address': 'Asia/South Korea/Songpa-gu', 'coordinate': [37.5013, 127.1188]}\n# {'address': 'Asia2/South Korea2/Songpa-gu2', 'coordinate': [37.5013, 127.1188]}\n\n# appling functions to coordinate...\nquery = {\n    (('continent', 'names', 'en'), ('country', 'names', 'en'), ('city', 'names', 'en')):[ #tuple of multiple paths,\n        'address', '/'\n    ],\n    (('latitude',), ('longitude',)): [ \n        'coordinate',\n        str,    # convert individual float type elements to str for join\n        ','     \n    ]\n}\nfor r in diselect(sample_from_json, query):\n    print(r)\n\n# {'address': 'Asia/South Korea/Songpa-gu', 'coordinate': '37.5013,127.1188'}\n# {'address': 'Asia2/South Korea2/Songpa-gu2', 'coordinate': '37.5013,127.1188'}\n```\n\n\n```python\n# 4) Summary\nquery = {\n    ('city', 'names', 'en'): 'city_name',\n    ('continent', 'code'): 'continent_code',\n    ('continent', 'names', 'en'): 'continent_name',\n    ('country', 'iso_code'): 'country_code',\n    ('country', 'names', 'en'): 'country_name',\n    ('location', 'time_zone'): 'timezone',\n    (('latitude',), ('longitude',)): [\n        'coordinate',\n        str, ','\n    ],\n    ('subdivisions', 'names', 'en'): [\n        'subdivision_name',\n        ',', str.upper\n    ]\n}\n\nfor r in diselect(container=sample_from_json, query=query):\n    print(r)\n\n# {'city_name': 'Songpa-gu', 'continent_code': 'AS', 'continent_name': 'Asia', 'country_code': 'KR', 'country_name': 'South Korea', 'timezone': 'Asia/Seoul', 'coordinate': '37.5013,127.1188', 'subdivision_name': 'SEOUL,HANGANG'}\n# {'city_name': 'Songpa-gu2', 'continent_code': 'AS2', 'continent_name': 'Asia2', 'country_code': 'KR2', 'country_name': 'South Korea2', 'timezone': 'Asia/Seoul2', 'coordinate': '37.5013,127.1188', 'subdivision_name': 'SEOUL2,HANGANG2'}\n```\n\n----\n\n## 3. Arguments\n### 1. container\n    > nested with dict and list complex data\n### 2. query\n```python\nquery1 = {\n    key1, key2,\n    {(key3, key2): alias},\n    {(key4, key5): (alias2, apply)},\n}\nquery2 = [\n    'column1', 'column2',\n    {\n        ('path1', 'path2'): 'alias1',\n        ('patt1', 'path2', 'path3'): ('alias2', dateutil.parser.parse),\n    },\n    'column4'\n]\n```\n- non-overlapping 'minimum' path of value item (need not be fullpath)\n- parents path lists key of target 'terminal' value (target value must be scalar value, like str, int...)\n- More detail is better to avoid duplication (...great-grandparent, grandparent, parent)\n- You can mix dict and tuple\n- The results column order of the output matches the order of the query\n- alias: column name representing the query\n- apply: function to be applied to value\n### 3. caution\n- If there is no query matching the key path of the container, a warning is output and it does not appear into the result column.\n- If the matching of the query is duplicated, an exception is raised and a more detailed query is required.\n- Consider the data structure of the container. Suggested queries are aggregated by matching top-level keys of matched with query.\n```python\n# date and count in the presented example data are single entities as top-level keys.\n  # 'count': 1,\n  # 'date': '2022-5-31',\n  # 'data_list': [ ...\n# but data_list is multiple row value\n# Querying data from both tendencies at the same time leads to unpredictable behavior.\n\ngreedy_query = [\n    # query for top level single context value\n    'count', 'date', \n    # query for row values\n    {\n        ('city', 'names', 'en'): 'city_name',\n        ('continent', 'code'): 'continent_code',\n        ('continent', 'names', 'en'): 'continent_name',\n        ('country', 'iso_code'): 'country_code',\n        ('country', 'names', 'en'): 'country_name',\n        ('location', 'time_zone'): 'timezone',\n        ('subdivisions', 'names', 'en'): ('subdivision_name', ','), \n    }\n]\n\nfor r in diselect(sample_from_json, greedy_query):\n    print(r)\n\n# results\n# {'count': 1, 'date': '2022-5-31', 'city_name': ['Songpa-gu', 'Songpa-gu2'], 'continent_code': ['AS', 'AS2'], 'continent_name': ['Asia', 'Asia2'], 'country_code': ['KR', 'KR2'], 'country_name': ['South Korea', 'South Korea2'], 'timezone': ['Asia/Seoul', 'Asia/Seoul2'], 'subdivision_name': 'Seoul,Hangang,Seoul2,Hangang2'}\n\n# The data is organized vertically with the top keys count and date. Maybe this is what you want.\n# This can be used as a trick to get the column dataset\n\n\n## Tip. separate query by structure for get two of them both\nquery_context = ['count', 'date']\n\nquery_list = {\n    ('city', 'names', 'en'): 'city_name',\n    ('continent', 'code'): 'continent_code',\n    ('continent', 'names', 'en'): 'continent_name',\n    ('country', 'iso_code'): 'country_code',\n    ('country', 'names', 'en'): 'country_name',\n    ('location', 'time_zone'): 'timezone',\n    ('subdivisions', 'names', 'en'): ('subdivision_name', ','), \n}\n\n\n\n[context_data] = list(diselect(sample_from_json, query_context)) # may one\ncount = context_data['count']\ndate = context_data['date']\n\n# or may be simple and better just direct indexing when values are easy to access\ncount = sample_from_json['count']\ndate = sample_from_json['date']\n\ndata_list = list(diselect(sample_from_json, query_list)) # many\n\n```\n\n## 4. More Useages\n\n### 1. typing values\n    - value typing via apply function\n\n```python\nimport dateutil\n\ndata = [\n    {\n        'place_id': 142213,\n        'visit_count': '5',\n        'visit_date': '2022/2/21',\n        'rating': '2.5',\n    },\n    {\n        'place_id': 154321,\n        'visit_count': '12',\n        'visit_date': '2022.3.7.',\n        'rating': '4.5',\n    },\n]\n\nparsed = diselect(data,\n{\n    'place_id': ('place_id', str),\n    'visit_count': ('visit_count', int),\n    'rating': ('point', float),\n    'visit_date': ('visit_count', dateutil.parser.parse),\n})\nfor row in parsed:\n    print(row)\n# results\n# {'place_id': '142213', 'visit_count': datetime.datetime(2022, 2, 21, 0, 0), 'point': 2.5}\n# {'place_id': '154321', 'visit_count': datetime.datetime(2022, 3, 7, 0, 0), 'point': 4.5}\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zwolf21/diselect",
    "keywords": "diselect,dict select,flatten,dict flatten,dict in list,list of dict",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "diselect",
    "package_url": "https://pypi.org/project/diselect/",
    "platform": null,
    "project_url": "https://pypi.org/project/diselect/",
    "project_urls": {
      "Homepage": "https://github.com/zwolf21/diselect"
    },
    "release_url": "https://pypi.org/project/diselect/1.0.11/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "smart and convenient dict flatten library for complex container nested with dict and list",
    "version": "1.0.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14615610,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ff48a29ed715252af35a601195e3f0b91cf1a756464cdb2ae804f2c354dde94",
          "md5": "2321ead29ba4b8bf84c673e7b88612c8",
          "sha256": "ca895173993e65b248aaa56fb48751e4b9d790751c945dabf6d2689655bbbc78"
        },
        "downloads": -1,
        "filename": "diselect-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2321ead29ba4b8bf84c673e7b88612c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5064,
        "upload_time": "2022-05-31T10:13:45",
        "upload_time_iso_8601": "2022-05-31T10:13:45.763705Z",
        "url": "https://files.pythonhosted.org/packages/6f/f4/8a29ed715252af35a601195e3f0b91cf1a756464cdb2ae804f2c354dde94/diselect-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71899f0af4a2f9c1d90d91cddcf117dc34604a1fe1ca73d15f62202e93ac29d4",
          "md5": "2eae40930cf40346b171a64af63de461",
          "sha256": "c19c503d3d2a735fd7a3a130f309ee08d59aa24a2a92a10e3d6cd5304d0e734a"
        },
        "downloads": -1,
        "filename": "diselect-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2eae40930cf40346b171a64af63de461",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 5691,
        "upload_time": "2022-05-31T10:31:28",
        "upload_time_iso_8601": "2022-05-31T10:31:28.682573Z",
        "url": "https://files.pythonhosted.org/packages/71/89/9f0af4a2f9c1d90d91cddcf117dc34604a1fe1ca73d15f62202e93ac29d4/diselect-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b58eff0472676099dacee4d684340a678259c6da2a2dea9297feda1bc164ebe2",
          "md5": "2191ed6d6968ac6e8ec2cca3eb31833a",
          "sha256": "85e7336eecf488ecb6cb9ccf0501c08339d69fb7afc636e4aafa109bb5dabb0d"
        },
        "downloads": -1,
        "filename": "diselect-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2191ed6d6968ac6e8ec2cca3eb31833a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 6079,
        "upload_time": "2022-06-06T08:52:02",
        "upload_time_iso_8601": "2022-06-06T08:52:02.518556Z",
        "url": "https://files.pythonhosted.org/packages/b5/8e/ff0472676099dacee4d684340a678259c6da2a2dea9297feda1bc164ebe2/diselect-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0750b42633555cdddfe8f82ebb614faac18867215385cf3c72287b8d5f551a88",
          "md5": "182fe9eaea583346b59e780dedb2cf76",
          "sha256": "7a07fe4de78f1bf98e738f522f038fb8d43d8a5ff68156629e7652b6a0217f3c"
        },
        "downloads": -1,
        "filename": "diselect-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "182fe9eaea583346b59e780dedb2cf76",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 6139,
        "upload_time": "2022-06-06T12:50:56",
        "upload_time_iso_8601": "2022-06-06T12:50:56.575800Z",
        "url": "https://files.pythonhosted.org/packages/07/50/b42633555cdddfe8f82ebb614faac18867215385cf3c72287b8d5f551a88/diselect-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21b5a390d3accc8b1f7f79cd0c4fab2337e7bd44ada83d950f40f53c8812f6c8",
          "md5": "19644bd17cabfa650720c70793e35cc0",
          "sha256": "f3142f6c2518c7bbdf832da8c2d101f6fbf2ee97d99d459aed3145e6a7358b11"
        },
        "downloads": -1,
        "filename": "diselect-1.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "19644bd17cabfa650720c70793e35cc0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 12965,
        "upload_time": "2022-07-27T14:06:53",
        "upload_time_iso_8601": "2022-07-27T14:06:53.905106Z",
        "url": "https://files.pythonhosted.org/packages/21/b5/a390d3accc8b1f7f79cd0c4fab2337e7bd44ada83d950f40f53c8812f6c8/diselect-1.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10e6013bae706e6dce3bc37ffca8864799f756cd93c7128bf4e5f85041e9a61c",
          "md5": "f6996ea2f8697ee396e8aa7779b264f8",
          "sha256": "bf9dc47d66c2e56283bde13fed69b46d7ccbf2cfbe1093d596f10b8344eb2895"
        },
        "downloads": -1,
        "filename": "diselect-1.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "f6996ea2f8697ee396e8aa7779b264f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 13032,
        "upload_time": "2022-08-01T18:00:03",
        "upload_time_iso_8601": "2022-08-01T18:00:03.242702Z",
        "url": "https://files.pythonhosted.org/packages/10/e6/013bae706e6dce3bc37ffca8864799f756cd93c7128bf4e5f85041e9a61c/diselect-1.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "682f3a8b405566c02bbc9376531950b070d8d9143e444c562dae680489ad65fa",
          "md5": "49c06f876bf788f7164804790e61334e",
          "sha256": "edca637d29ea5405948bc71305bb2e59ed87e01472d32a36a1396308f8d2db90"
        },
        "downloads": -1,
        "filename": "diselect-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "49c06f876bf788f7164804790e61334e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 6178,
        "upload_time": "2022-06-08T04:14:13",
        "upload_time_iso_8601": "2022-06-08T04:14:13.271966Z",
        "url": "https://files.pythonhosted.org/packages/68/2f/3a8b405566c02bbc9376531950b070d8d9143e444c562dae680489ad65fa/diselect-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb82b1d9d8c18259c1b572036ee736fc091fd87fb6607a4663193eb0b848397a",
          "md5": "7ff64a4eec3ef2bf9526deb98da7be90",
          "sha256": "429d42ac7260d401e4f68ce2d5d7abe7c86ca7fb92b1f935dac9c9bf86ba6b5d"
        },
        "downloads": -1,
        "filename": "diselect-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7ff64a4eec3ef2bf9526deb98da7be90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 6219,
        "upload_time": "2022-06-08T12:35:17",
        "upload_time_iso_8601": "2022-06-08T12:35:17.875679Z",
        "url": "https://files.pythonhosted.org/packages/eb/82/b1d9d8c18259c1b572036ee736fc091fd87fb6607a4663193eb0b848397a/diselect-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bfb576508780b9d2198ec3599fa7ed7e58f5588507455cdb1fb0d7b2901acec",
          "md5": "cb5a3df13d4cabc235c7dba4191dd878",
          "sha256": "dc161b883d5e7093b43bd1720542fbe92b26dc3b5bf665e89e068ade2790601f"
        },
        "downloads": -1,
        "filename": "diselect-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cb5a3df13d4cabc235c7dba4191dd878",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 10259,
        "upload_time": "2022-06-13T00:50:28",
        "upload_time_iso_8601": "2022-06-13T00:50:28.580803Z",
        "url": "https://files.pythonhosted.org/packages/8b/fb/576508780b9d2198ec3599fa7ed7e58f5588507455cdb1fb0d7b2901acec/diselect-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4148eb1dd2e1108fe2accad18f1bd49fb8a141a1a0a5facf100018aae4c5ccc",
          "md5": "0eb444412d5602d7b78c3a8c8e86836c",
          "sha256": "379a11a8119a29b867dc5549ef4692679b14d5fd491a544785fc3cd0cc0a81f7"
        },
        "downloads": -1,
        "filename": "diselect-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0eb444412d5602d7b78c3a8c8e86836c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 10911,
        "upload_time": "2022-06-14T23:14:49",
        "upload_time_iso_8601": "2022-06-14T23:14:49.811763Z",
        "url": "https://files.pythonhosted.org/packages/c4/14/8eb1dd2e1108fe2accad18f1bd49fb8a141a1a0a5facf100018aae4c5ccc/diselect-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f2380f2e7c638a840c7defc3434e03c76699743d5e5f40e65053689ec11aefd",
          "md5": "3f803ef592422feaf149ef9d6037b467",
          "sha256": "83abddcb3681ea6c9a45c9fd19a7432ddda98d721c9408d43a61658ce6896ce0"
        },
        "downloads": -1,
        "filename": "diselect-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "3f803ef592422feaf149ef9d6037b467",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 12593,
        "upload_time": "2022-06-19T00:06:05",
        "upload_time_iso_8601": "2022-06-19T00:06:05.291908Z",
        "url": "https://files.pythonhosted.org/packages/8f/23/80f2e7c638a840c7defc3434e03c76699743d5e5f40e65053689ec11aefd/diselect-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "030c98f4a96b41db265f0b72ac61380ffc1602557fdf374af6e8864dd753a675",
          "md5": "358c47c4181f9674bfbb07def650fe3b",
          "sha256": "0c052d49722e18cfd8328a8c0b63ac725ec0a6170dfb2e5dba2d89d9e4f43c92"
        },
        "downloads": -1,
        "filename": "diselect-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "358c47c4181f9674bfbb07def650fe3b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 12778,
        "upload_time": "2022-06-19T05:29:32",
        "upload_time_iso_8601": "2022-06-19T05:29:32.632074Z",
        "url": "https://files.pythonhosted.org/packages/03/0c/98f4a96b41db265f0b72ac61380ffc1602557fdf374af6e8864dd753a675/diselect-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d90308e237174f8ed3d2af6c3a8b523cbacb6d1246f630589773109103b8bfa3",
          "md5": "46de78cec862c6585c900664dff80a4f",
          "sha256": "130f0f49648021502def2530751febb9493fa0477f2d124d07a786497af9e693"
        },
        "downloads": -1,
        "filename": "diselect-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "46de78cec862c6585c900664dff80a4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 12762,
        "upload_time": "2022-06-19T12:53:04",
        "upload_time_iso_8601": "2022-06-19T12:53:04.845086Z",
        "url": "https://files.pythonhosted.org/packages/d9/03/08e237174f8ed3d2af6c3a8b523cbacb6d1246f630589773109103b8bfa3/diselect-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2b82607c520033a0acf31fe43ba3a595b20b170ca3a511c7aba7c1c73abbc46",
          "md5": "90f0d4ca57e1e1f412a247df13b3f40b",
          "sha256": "4c427dd2a2149e17201975fe853c573263b1c0be988bae5ed759226b2f2afa15"
        },
        "downloads": -1,
        "filename": "diselect-1.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "90f0d4ca57e1e1f412a247df13b3f40b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 12801,
        "upload_time": "2022-06-20T23:17:46",
        "upload_time_iso_8601": "2022-06-20T23:17:46.152717Z",
        "url": "https://files.pythonhosted.org/packages/e2/b8/2607c520033a0acf31fe43ba3a595b20b170ca3a511c7aba7c1c73abbc46/diselect-1.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10e6013bae706e6dce3bc37ffca8864799f756cd93c7128bf4e5f85041e9a61c",
        "md5": "f6996ea2f8697ee396e8aa7779b264f8",
        "sha256": "bf9dc47d66c2e56283bde13fed69b46d7ccbf2cfbe1093d596f10b8344eb2895"
      },
      "downloads": -1,
      "filename": "diselect-1.0.11.tar.gz",
      "has_sig": false,
      "md5_digest": "f6996ea2f8697ee396e8aa7779b264f8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 13032,
      "upload_time": "2022-08-01T18:00:03",
      "upload_time_iso_8601": "2022-08-01T18:00:03.242702Z",
      "url": "https://files.pythonhosted.org/packages/10/e6/013bae706e6dce3bc37ffca8864799f756cd93c7128bf4e5f85041e9a61c/diselect-1.0.11.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}