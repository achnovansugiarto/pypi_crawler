{
  "info": {
    "author": "Ivan Savov",
    "author_email": "ivan.savov@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Utilities"
    ],
    "description": "# libtabular\nA general purpose library for reading and writing tabular data (CSV, TSV, gsheets, ods, xlsx).\n\n\n## Pitch\nImagine a `csv.DictReader`-like API you can use to \"open\" and \"read\" any source\nof tabular data (CSV, TSV, gsheets, ods, xlsx) without having to worry about a\nmillion libraries and authentication APIs.\n\n## Tabular data with metadata headers\nThe main \"new feature\" that `libtabular` provides is a way to parse \"metadata headers\"\nin tabular data (e.g. CSV) automatically. These \"CSV metadata headers\" are directly\nanalogous to the YAML headers that sometimes appear in Markdown files used in\nstatic site generators.\n\n\n## Example\n\n![Minimal sample data format](https://raw.githubusercontent.com/rocdata/libtabular/main/samples/minimal.ods.png)\n\n\nUsing `libtabular`, you could \"extract\" the data and metadata from this source\nfile using a few commands:\n\n```python\n>>> from libtabular import fromcsvwithheader\n\n>>> table = fromcsvwithheader('samples/minimal.csv')\n\n>>> table.metadata\n{'key1': 'value1',\n 'key2': 'value2',\n 'title': 'Minimal sample document',\n 'description': 'This is a sample document that consists of four sections',\n 'doc_id': 'Sample-doc-001',\n 'comment': 'This is not part of document metadata; just a comment...'}\n\n>>> list(table.dicts())\n[{'section_id': '002',\n  'slug': 'dataformat',\n  'title': 'CSV files with metadata',\n  'description': 'Description of the CSV-with-metadata-header data format',\n  'url': 'https://github.com/rocdata/libtabular/blob/main/docs/dataformat.md'},\n {'section_id': '003',\n  'slug': 'tutorial',\n  'title': 'Tutorial',\n  'description': 'Hands-on examples of using libtabular',\n  'url': 'https://github.com/rocdata/libtabular/blob/main/docs/tutorial.md'},\n {'section_id': '004',\n  'slug': 'backends',\n  'title': 'Backends',\n  'description': 'Description of integrations to various spreadsheets formats and APIs  ',\n  'url': 'https://github.com/rocdata/libtabular/blob/main/docs/backends.md'}]\n\n\n>>> table.header\n('section_id', 'slug', 'title', 'description', 'url')\n```\n\n\n## Why is this needed?\n\nRecent work on a repository of curriculum documents, see [rocdata.global](https://rocdata.global),\nrequires an easy-to-use process for import and export of curriculum data like:\n\n- Curriculum standards documents (excel sheets that specify what students should be learning)\n- Content collections data (excel sheets that consists of links to useful learning resources)\n- Content correlations data (excel sheets that contain \"links\" between curriculum standards\n  and relevant learning resources)\n\nThe spreadsheet/CSV format is a natural choice for teachers and administrators,\nwho have experience working with this file type, so it is worth developing tools\nthat facilitate reading and writing tabular data:\n\n- Curriculum bodies and ministries of education can publish curriculum standards\n  documents information in machine-readable formats (instead of publishing PDFs, publish spreadsheets).\n- Teachers can download standards data in easy-to-use spreadsheet formats\n  (use standards for your grade level to plan your lessons).\n- Curriculum experts and teachers can download blank templates with appropriate\n  headers to fill in when need to specify standards documents or content correlations.\n\n\n\nRelated projects\n----------------\n\n- [`csv`](https://github.com/python/cpython/blob/master/Lib/csv.py) in stdlib\n- [`pandas.read_csv`](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html)\n  which is a few more bells and whistles.\n- [`petl`](https://petl.readthedocs.io) has a lot of functionality for loading\n  CSV, TSV, Excel, and a bunch of other format. The `petl` library also supports\n  convenient [transformation of columns](https://petl.readthedocs.io/en/stable/transform.html#converting-values).\n  There is even a [PR](https://github.com/petl-developers/petl/pull/405/files)\n  for integration with google sheets (not merged).\n- [`pyexcel`](https://github.com/pyexcel/pyexcel) is a general-purpose backend\n  for all kinds of spreadsheet formats (csv, xlsx, ods, etc.)\n- For other spreadsheet Python libs, see [http://www.python-excel.org/](http://www.python-excel.org/)\n\n\n\nTODOs\n-----\n- Add `fromxlsxwithheader` for parsing Excel files\n- Add `fromodswithheader` based on `pyexcel`\n- Add minimal tests to check all source formats result in same data\n- Add `prependheader(metadata, header, data)` function to export in this format,\n  ideally generic workflow that works for any output format (csv,ods,xlsx).\n\n\nRoadmap\n-------\n- Add tree-parsing logic utils? (libtree ;)\n- Includes statements (include another .CSV file as a node in current location)\n- Optional enhancements for templates: add formatting of header etc. (only for Excel and ODS)\n\n\nIdeas\n-----\n- Investigate [CSVW standard and libraries](https://www.one-tab.com/page/q1HbgtswQpeSstzgihTh_w),\n  specifically options for validation.\n- Investigate `tablib` as an alternative base to `petl` (although seems less versatile).",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rocdata/libtabular",
    "keywords": "CSV,Excel,spreadhseets,metadata",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "libtabular",
    "package_url": "https://pypi.org/project/libtabular/",
    "platform": "",
    "project_url": "https://pypi.org/project/libtabular/",
    "project_urls": {
      "Documentation": "https://github.com/rocdata/libtabular/tree/main/docs",
      "Homepage": "https://github.com/rocdata/libtabular",
      "Issue Tracker": "https://github.com/rocdata/libtabular/issues"
    },
    "release_url": "https://pypi.org/project/libtabular/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Utility functions for reading and writing CSV files with metadata headers.",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9337826,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "718bad5fed012580eab969636728bb0f126ce0f2a926f192f0999698fb4c6296",
          "md5": "f5f2d661ac054553f4e5d093108f792f",
          "sha256": "34fa33bdab99d1ab443c2ecc23d9e16b9a2144aaa06a3bfb8fd15cb5a0165e79"
        },
        "downloads": -1,
        "filename": "libtabular-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f5f2d661ac054553f4e5d093108f792f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "!=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*",
        "size": 5429,
        "upload_time": "2021-02-02T15:18:09",
        "upload_time_iso_8601": "2021-02-02T15:18:09.630030Z",
        "url": "https://files.pythonhosted.org/packages/71/8b/ad5fed012580eab969636728bb0f126ce0f2a926f192f0999698fb4c6296/libtabular-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03711256becd0e5f6d23ef969c2c199559539bc71c8d727654d7445f257494a1",
          "md5": "e28ff79502e59d8140cf1e3b390dd7e8",
          "sha256": "0a23850b7071d7baccca6e757b237ca1a9ae0bbe3db19a5fa19f819da5f48078"
        },
        "downloads": -1,
        "filename": "libtabular-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e28ff79502e59d8140cf1e3b390dd7e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "!=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*",
        "size": 5421,
        "upload_time": "2021-02-02T15:22:02",
        "upload_time_iso_8601": "2021-02-02T15:22:02.408800Z",
        "url": "https://files.pythonhosted.org/packages/03/71/1256becd0e5f6d23ef969c2c199559539bc71c8d727654d7445f257494a1/libtabular-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0f3ed324819051c9dcf258474105ad2af0286e99dbcf99a8c9d8f3b970ae6cf",
          "md5": "7340d8b2378f387ffefccabd815007aa",
          "sha256": "95368354408938613c11c25399fa237f45ae059404f39d1c8727ff8bc9f8d4d0"
        },
        "downloads": -1,
        "filename": "libtabular-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7340d8b2378f387ffefccabd815007aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5787,
        "upload_time": "2021-02-06T16:56:59",
        "upload_time_iso_8601": "2021-02-06T16:56:59.363512Z",
        "url": "https://files.pythonhosted.org/packages/d0/f3/ed324819051c9dcf258474105ad2af0286e99dbcf99a8c9d8f3b970ae6cf/libtabular-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d0f3ed324819051c9dcf258474105ad2af0286e99dbcf99a8c9d8f3b970ae6cf",
        "md5": "7340d8b2378f387ffefccabd815007aa",
        "sha256": "95368354408938613c11c25399fa237f45ae059404f39d1c8727ff8bc9f8d4d0"
      },
      "downloads": -1,
      "filename": "libtabular-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "7340d8b2378f387ffefccabd815007aa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5787,
      "upload_time": "2021-02-06T16:56:59",
      "upload_time_iso_8601": "2021-02-06T16:56:59.363512Z",
      "url": "https://files.pythonhosted.org/packages/d0/f3/ed324819051c9dcf258474105ad2af0286e99dbcf99a8c9d8f3b970ae6cf/libtabular-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}