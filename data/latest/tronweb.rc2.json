{
  "info": {
    "author": "Shamsudin Serderov",
    "author_email": "steein.shamsudin@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "===================\nTRON API for Python\n===================\n\nA Python API for interacting with the Tron (TRX)\n\n.. image:: https://img.shields.io/pypi/v/tronapi.svg\n    :target: https://pypi.python.org/pypi/tronapi\n\n.. image:: https://img.shields.io/pypi/pyversions/tronapi.svg\n    :target: https://pypi.python.org/pypi/tronapi\n\n.. image:: https://api.travis-ci.com/iexbase/tron-api-python.svg?branch=master\n    :target: https://travis-ci.com/iexbase/tron-api-python\n    \n.. image:: https://img.shields.io/github/issues/iexbase/tron-api-python.svg\n    :target: https://github.com/iexbase/tron-api-python/issues\n    \n.. image:: https://img.shields.io/github/issues-pr/iexbase/tron-api-python.svg\n    :target: https://github.com/iexbase/tron-api-python/pulls\n\n.. image:: https://api.codacy.com/project/badge/Grade/8a5ae1e1cc834869b1094ea3b0d24f78\n   :alt: Codacy Badge\n   :target: https://app.codacy.com/app/serderovsh/tron-api-python?utm_source=github.com&utm_medium=referral&utm_content=iexbase/tron-api-python&utm_campaign=Badge_Grade_Dashboard\n    \n\n------------\n\n**A Command-Line Interface framework**\n\nYou can install it in a system-wide location via pip:\n\n.. code-block:: bash\n\n    sudo pip3 install tronapi\n\nOr install it locally using `virtualenv <https://github.com/pypa/virtualenv>`__:\n\n.. code-block:: bash\n\n    virtualenv -p /usr/bin/python3 ~/tronapi\n    source ~/tronapi/bin/activate\n    pip3 install tronapi\n\n------------\n\nUsage\n=====\nSpecify the API endpoints:\n\n\nSmart Contract\n--------------\n\n.. code-block:: python\n\n    from tronapi import Tron\n    from solc import compile_source\n\n    full_node = 'https://api.trongrid.io'\n    solidity_node = 'https://api.trongrid.io'\n    event_server = 'https://api.trongrid.io'\n\n    tron = Tron(full_node=full_node,\n            solidity_node=solidity_node,\n            event_server=event_server)\n\n    # or default (tron = Tron())\n\n\n    # Solidity source code\n    contract_source_code = '''\n    pragma solidity ^0.4.25;\n\n    contract Hello {\n        string public message;\n\n        function Hello(string initialMessage) public {\n            message = initialMessage;\n        }\n\n        function setMessage(string newMessage) public {\n            message = newMessage;\n        }\n    }\n\n    '''\n\n    compiled_sol = compile_source(contract_source_code)\n    contract_interface = compiled_sol['<stdin>:Hello']\n\n    hello = tron.trx.contract(\n        abi=contract_interface['abi'],\n        bytecode=contract_interface['bin']\n    )\n\n    # Submit the transaction that deploys the contract\n    tx = hello.deploy(\n        fee_limit=10**9,\n        call_value=0,\n        consume_user_resource_percent=1\n    )\n\n..\n\nBase Example\n------------\n\n.. code-block:: python\n    \n    from tronapi import Tron\n    logging.basicConfig(level=logging.DEBUG, format=\"%(asctime)s - %(levelname)s - %(message)s\")\n    logger = logging.getLogger()\n\n    full_node = 'https://api.trongrid.io'\n    solidity_node = 'https://api.trongrid.io'\n    event_server = 'https://api.trongrid.io'\n\n    tron = Tron(full_node=full_node,\n            solidity_node=solidity_node,\n            event_server=event_server)\n\n    account = tron.create_account\n    is_valid = bool(tron.trx.is_address(account.address.hex))\n\n    logger.debug('Generated account: ')\n    logger.debug('- Private Key: ' + account.private_key)\n    logger.debug('- Public Key: ' + account.public_key)\n    logger.debug('- Address: ')\n    logger.debug('-- Base58: ' + account.address.base58)\n    logger.debug('-- Hex: ' + account.address.hex)\n    logger.debug('-- isValid: ' + str(is_valid))\n    logger.debug('-----------')\n    \n    transaction = tron.trx.get_transaction('757a14cef293c69b1cf9b9d3d19c2e40a330c640b05c6ffa4d54609a9628758c')\n\n    logger.debug('Transaction: ')\n    logger.debug('- Hash: ' + transaction['txID'])\n    logger.debug('- Transaction: ' + json.dumps(transaction, indent=2))\n    logger.debug('-----------')\n    \n    # Events\n    event_result = tron.trx.get_event_result('TGEJj8eus46QMHPgWQe1FJ2ymBXRm96fn1', 0, 'Notify')\n\n    logger.debug('Event result:')\n    logger.debug('Contract Address: TGEJj8eus46QMHPgWQe1FJ2ymBXRm96fn1')\n    logger.debug('Event Name: Notify')\n    logger.debug('Block Number: 32162')\n    logger.debug('- Events: ' + json.dumps(event_result, indent=2))\n\nMore samples and snippets are available at `examples <https://github.com/iexbase/tron-api-python/tree/master/examples>`__.\n\nDocumentation\n=============\n\nDocumentation is available at `docs <https://tronapi-for-python.readthedocs.io/en/latest/>`__.\n\n\nDonations\n=============\n\nTRON: TQ2386PsHYHQSYqLJd5RHSV2T6iVxHqy5e\n\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/h1ght1me/tron-api-python",
    "keywords": "tron tron-api tron-api-python iexbase",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tronweb",
    "package_url": "https://pypi.org/project/tronweb/",
    "platform": "",
    "project_url": "https://pypi.org/project/tronweb/",
    "project_urls": {
      "Homepage": "https://github.com/h1ght1me/tron-api-python"
    },
    "release_url": "https://pypi.org/project/tronweb/3.1.5.1/",
    "requires_dist": [
      "eth-abi (<3.0.0,>=2.0.0b6)",
      "eth-account (>=0.5.0)",
      "eth-utils (<2.0.0,>=1.3.0)",
      "eth-hash[pycryptodome] (<1.0.0,>=0.2.0)",
      "trx-utils",
      "hexbytes (<1.0.0,>=0.1.0)",
      "requests (<3.0.0,>=2.16.0)",
      "base58",
      "ecdsa",
      "attrdict",
      "cytoolz (<1.0.0,>=0.9.0) ; implementation_name == \"cpython\"",
      "toolz (<1.0.0,>=0.9.0) ; implementation_name == \"pypy\"",
      "coverage ; extra == 'dev'",
      "pep8 ; extra == 'dev'",
      "pyflakes ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "mock ; extra == 'dev'",
      "sphinx-better-theme (>=0.1.4) ; extra == 'dev'",
      "click (>=5.1) ; extra == 'dev'",
      "configparser (==3.5.0) ; extra == 'dev'",
      "contextlib2 (>=0.5.4) ; extra == 'dev'",
      "py-solc (>=0.4.0) ; extra == 'dev'",
      "pytest (>=2.7.2) ; extra == 'dev'",
      "sphinx ; extra == 'dev'",
      "sphinx-rtd-theme (>=0.1.9) ; extra == 'dev'",
      "toposort (>=1.4) ; extra == 'dev'",
      "urllib3 ; extra == 'dev'",
      "tronapi ; extra == 'dev'",
      "wheel (>=0.31.0) ; extra == 'dev'",
      "bumpversion ; extra == 'dev'",
      "flaky (>=3.3.0) ; extra == 'dev'",
      "hypothesis (>=3.31.2) ; extra == 'dev'",
      "pytest (<4,>=3.5.0) ; extra == 'dev'",
      "pytest-mock (==1.*) ; extra == 'dev'",
      "pytest-pythonpath (>=0.3) ; extra == 'dev'",
      "pytest-watch (==4.*) ; extra == 'dev'",
      "pytest-xdist (==1.*) ; extra == 'dev'",
      "setuptools (>=38.6.0) ; extra == 'dev'",
      "tox (>=1.8.0) ; extra == 'dev'",
      "twine (>=1.11.0) ; extra == 'dev'",
      "tqdm ; extra == 'dev'",
      "when-changed ; extra == 'dev'",
      "mock ; extra == 'docs'",
      "sphinx-better-theme (>=0.1.4) ; extra == 'docs'",
      "click (>=5.1) ; extra == 'docs'",
      "configparser (==3.5.0) ; extra == 'docs'",
      "contextlib2 (>=0.5.4) ; extra == 'docs'",
      "py-solc (>=0.4.0) ; extra == 'docs'",
      "pytest (>=2.7.2) ; extra == 'docs'",
      "sphinx ; extra == 'docs'",
      "sphinx-rtd-theme (>=0.1.9) ; extra == 'docs'",
      "toposort (>=1.4) ; extra == 'docs'",
      "urllib3 ; extra == 'docs'",
      "tronapi ; extra == 'docs'",
      "wheel (>=0.31.0) ; extra == 'docs'",
      "coverage ; extra == 'tester'",
      "pep8 ; extra == 'tester'",
      "pyflakes ; extra == 'tester'",
      "pylint ; extra == 'tester'",
      "pytest-cov ; extra == 'tester'"
    ],
    "requires_python": ">=3.6,<4",
    "summary": "A Python API for interacting with Tron (TRX)",
    "version": "3.1.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11364110,
  "releases": {
    "3.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2035da45937fd94201859ca966cbd3cf23ba0e1f0fbc0ba30750408ee0e7573",
          "md5": "fe438d95b90eff62ac19596cfbd45a7c",
          "sha256": "144a08521003f76a5427030b690d6656c23a8b2783a1b8cadc7fd86d9d730375"
        },
        "downloads": -1,
        "filename": "tronweb-3.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe438d95b90eff62ac19596cfbd45a7c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4",
        "size": 50743,
        "upload_time": "2021-08-30T20:21:09",
        "upload_time_iso_8601": "2021-08-30T20:21:09.577417Z",
        "url": "https://files.pythonhosted.org/packages/a2/03/5da45937fd94201859ca966cbd3cf23ba0e1f0fbc0ba30750408ee0e7573/tronweb-3.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2876ef58982eebcfe28206fab51140ee44c7e5e219caf48cd7591af45cad140",
          "md5": "27a035c3c5c372dae7bd10278c913e97",
          "sha256": "d85de75fa9e898e848621eaffa6632e2d5062693da9c330551c70a8093613a87"
        },
        "downloads": -1,
        "filename": "tronweb-3.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "27a035c3c5c372dae7bd10278c913e97",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4",
        "size": 43979,
        "upload_time": "2021-08-30T20:21:11",
        "upload_time_iso_8601": "2021-08-30T20:21:11.135881Z",
        "url": "https://files.pythonhosted.org/packages/e2/87/6ef58982eebcfe28206fab51140ee44c7e5e219caf48cd7591af45cad140/tronweb-3.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efcc4bc703852b41b9e0fdd6aa06c4fd0f15a50b5f1483b06f9e1a147ff35df7",
          "md5": "f410251b70dfb64db46fa50b4cd24803",
          "sha256": "4d13d744de6f18bd52c7606613a517450951a06ea56578424ef59eb9a185574e"
        },
        "downloads": -1,
        "filename": "tronweb-3.1.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f410251b70dfb64db46fa50b4cd24803",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4",
        "size": 50771,
        "upload_time": "2021-09-04T09:00:46",
        "upload_time_iso_8601": "2021-09-04T09:00:46.206785Z",
        "url": "https://files.pythonhosted.org/packages/ef/cc/4bc703852b41b9e0fdd6aa06c4fd0f15a50b5f1483b06f9e1a147ff35df7/tronweb-3.1.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01cb16708250f7a1b29a7e5a20c03cbd4d2b219d26144accd62c42380bc4b995",
          "md5": "e26ac1c73951792c80f5e5376d63897c",
          "sha256": "0c62334a1d3537e9d7c25515c9b7294a8911a6bf4f84e65c8e20c30ec604f139"
        },
        "downloads": -1,
        "filename": "tronweb-3.1.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e26ac1c73951792c80f5e5376d63897c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4",
        "size": 44026,
        "upload_time": "2021-09-04T09:00:47",
        "upload_time_iso_8601": "2021-09-04T09:00:47.779943Z",
        "url": "https://files.pythonhosted.org/packages/01/cb/16708250f7a1b29a7e5a20c03cbd4d2b219d26144accd62c42380bc4b995/tronweb-3.1.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "efcc4bc703852b41b9e0fdd6aa06c4fd0f15a50b5f1483b06f9e1a147ff35df7",
        "md5": "f410251b70dfb64db46fa50b4cd24803",
        "sha256": "4d13d744de6f18bd52c7606613a517450951a06ea56578424ef59eb9a185574e"
      },
      "downloads": -1,
      "filename": "tronweb-3.1.5.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f410251b70dfb64db46fa50b4cd24803",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4",
      "size": 50771,
      "upload_time": "2021-09-04T09:00:46",
      "upload_time_iso_8601": "2021-09-04T09:00:46.206785Z",
      "url": "https://files.pythonhosted.org/packages/ef/cc/4bc703852b41b9e0fdd6aa06c4fd0f15a50b5f1483b06f9e1a147ff35df7/tronweb-3.1.5.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "01cb16708250f7a1b29a7e5a20c03cbd4d2b219d26144accd62c42380bc4b995",
        "md5": "e26ac1c73951792c80f5e5376d63897c",
        "sha256": "0c62334a1d3537e9d7c25515c9b7294a8911a6bf4f84e65c8e20c30ec604f139"
      },
      "downloads": -1,
      "filename": "tronweb-3.1.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e26ac1c73951792c80f5e5376d63897c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4",
      "size": 44026,
      "upload_time": "2021-09-04T09:00:47",
      "upload_time_iso_8601": "2021-09-04T09:00:47.779943Z",
      "url": "https://files.pythonhosted.org/packages/01/cb/16708250f7a1b29a7e5a20c03cbd4d2b219d26144accd62c42380bc4b995/tronweb-3.1.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}