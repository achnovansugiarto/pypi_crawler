{
  "info": {
    "author": "ML group @ National Taiwan University",
    "author_email": "cjlin@csie.ntu.edu.tw",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "----------------------------------\n--- Python interface of LIBSVM ---\n----------------------------------\n\nTable of Contents\n=================\n\n- Introduction\n- Installation via PyPI\n- Installation via Sources\n- Quick Start\n- Quick Start with Scipy\n- Design Description\n- Data Structures\n- Utility Functions\n- Additional Information\n\nIntroduction\n============\n\nPython (http://www.python.org/) is a programming language suitable for rapid\ndevelopment. This tool provides a simple Python interface to LIBSVM, a library\nfor support vector machines (http://www.csie.ntu.edu.tw/~cjlin/libsvm). The\ninterface is very easy to use as the usage is the same as that of LIBSVM. The\ninterface is developed with the built-in Python library \"ctypes.\"\n\nInstallation via PyPI\n=====================\n\nTo install the interface from PyPI, execute the following command:\n\n> pip install -U libsvm-official\n\nInstallation via Sources\n========================\n\nAlternatively, you may install the interface from sources by\ngenerating the LIBSVM shared library.\n\nDepending on your use cases, you can choose between local-directory\nand system-wide installation.\n\n- Local-directory installation:\n\n    On Unix systems, type\n\n    > make\n\n    This generates a .so file in the LIBSVM main directory and you\n    can run the interface in the current python directory.\n\n    For Windows, the shared library libsvm.dll is ready in the\n    directory `..\\windows' and you can directly run the interface in\n    the current python directory. You can copy libsvm.dll to the\n    system directory (e.g., `C:\\WINDOWS\\system32\\') to make it\n    system-widely available. To regenerate libsvm.dll, please\n    follow the instruction of building Windows binaries in LIBSVM\n    README.\n\n- System-wide installation:\n\n    Type\n\n    > pip install -e .\n\n    or\n\n    > pip install --user -e .\n\n    The option --user would install the package in the home directory\n    instead of the system directory, and thus does not require the\n    root privilege.\n\n    Please note that you must keep the sources after the installation.\n\n    For Windows, to run the above command, Microsoft Visual C++ and\n    other tools are needed.\n\n    In addition, DON'T use the following FAILED commands\n\n    > python setup.py install (failed to run at the python directory)\n    > pip install .\n\nQuick Start\n===========\n\n\"Quick Start with Scipy\" is in the next section.\n\nThere are two levels of usage. The high-level one uses utility\nfunctions in svmutil.py and commonutil.py (shared with LIBLINEAR and\nimported by svmutil.py). The usage is the same as the LIBSVM MATLAB\ninterface.\n\n>>> from libsvm.svmutil import *\n# Read data in LIBSVM format\n>>> y, x = svm_read_problem('../heart_scale')\n>>> m = svm_train(y[:200], x[:200], '-c 4')\n>>> p_label, p_acc, p_val = svm_predict(y[200:], x[200:], m)\n\n# Construct problem in python format\n# Dense data\n>>> y, x = [1,-1], [[1,0,1], [-1,0,-1]]\n# Sparse data\n>>> y, x = [1,-1], [{1:1, 3:1}, {1:-1,3:-1}]\n>>> prob  = svm_problem(y, x)\n>>> param = svm_parameter('-t 0 -c 4 -b 1')\n>>> m = svm_train(prob, param)\n\n# Precomputed kernel data (-t 4)\n# Dense data\n>>> y, x = [1,-1], [[1, 2, -2], [2, -2, 2]]\n# Sparse data\n>>> y, x = [1,-1], [{0:1, 1:2, 2:-2}, {0:2, 1:-2, 2:2}]\n# isKernel=True must be set for precomputed kernel\n>>> prob  = svm_problem(y, x, isKernel=True)\n>>> param = svm_parameter('-t 4 -c 4 -b 1')\n>>> m = svm_train(prob, param)\n# For the format of precomputed kernel, please read LIBSVM README.\n\n\n# Other utility functions\n>>> svm_save_model('heart_scale.model', m)\n>>> m = svm_load_model('heart_scale.model')\n>>> p_label, p_acc, p_val = svm_predict(y, x, m, '-b 1')\n>>> ACC, MSE, SCC = evaluations(y, p_label)\n\n# Getting online help\n>>> help(svm_train)\n\nThe low-level use directly calls C interfaces imported by svm.py. Note that\nall arguments and return values are in ctypes format. You need to handle them\ncarefully.\n\n>>> from libsvm.svm import *\n>>> prob = svm_problem([1,-1], [{1:1, 3:1}, {1:-1,3:-1}])\n>>> param = svm_parameter('-c 4')\n>>> m = libsvm.svm_train(prob, param) # m is a ctype pointer to an svm_model\n# Convert a Python-format instance to svm_nodearray, a ctypes structure\n>>> x0, max_idx = gen_svm_nodearray({1:1, 3:1})\n>>> label = libsvm.svm_predict(m, x0)\n\nQuick Start with Scipy\n======================\n\nMake sure you have Scipy installed to proceed in this section.\nIf numba (http://numba.pydata.org) is installed, some operations will be much faster.\n\nThere are two levels of usage. The high-level one uses utility functions\nin svmutil.py and the usage is the same as the LIBSVM MATLAB interface.\n\n>>> import numpy as np\n>>> import scipy\n>>> from libsvm.svmutil import *\n# Read data in LIBSVM format\n>>> y, x = svm_read_problem('../heart_scale', return_scipy = True) # y: ndarray, x: csr_matrix\n>>> m = svm_train(y[:200], x[:200, :], '-c 4')\n>>> p_label, p_acc, p_val = svm_predict(y[200:], x[200:, :], m)\n\n# Construct problem in Scipy format\n# Dense data: numpy ndarray\n>>> y, x = np.asarray([1,-1]), np.asarray([[1,0,1], [-1,0,-1]])\n# Sparse data: scipy csr_matrix((data, (row_ind, col_ind))\n>>> y, x = np.asarray([1,-1]), scipy.sparse.csr_matrix(([1, 1, -1, -1], ([0, 0, 1, 1], [0, 2, 0, 2])))\n>>> prob  = svm_problem(y, x)\n>>> param = svm_parameter('-t 0 -c 4 -b 1')\n>>> m = svm_train(prob, param)\n\n# Precomputed kernel data (-t 4)\n# Dense data: numpy ndarray\n>>> y, x = np.asarray([1,-1]), np.asarray([[1,2,-2], [2,-2,2]])\n# Sparse data: scipy csr_matrix((data, (row_ind, col_ind))\n>>> y, x = np.asarray([1,-1]), scipy.sparse.csr_matrix(([1, 2, -2, 2, -2, 2], ([0, 0, 0, 1, 1, 1], [0, 1, 2, 0, 1, 2])))\n# isKernel=True must be set for precomputed kernel\n>>> prob  = svm_problem(y, x, isKernel=True)\n>>> param = svm_parameter('-t 4 -c 4 -b 1')\n>>> m = svm_train(prob, param)\n# For the format of precomputed kernel, please read LIBSVM README.\n\n# Apply data scaling in Scipy format\n>>> y, x = svm_read_problem('../heart_scale', return_scipy=True)\n>>> scale_param = csr_find_scale_param(x, lower=0)\n>>> scaled_x = csr_scale(x, scale_param)\n\n# Other utility functions\n>>> svm_save_model('heart_scale.model', m)\n>>> m = svm_load_model('heart_scale.model')\n>>> p_label, p_acc, p_val = svm_predict(y, x, m, '-b 1')\n>>> ACC, MSE, SCC = evaluations(y, p_label)\n\n# Getting online help\n>>> help(svm_train)\n\nThe low-level use directly calls C interfaces imported by svm.py. Note that\nall arguments and return values are in ctypes format. You need to handle them\ncarefully.\n\n>>> from libsvm.svm import *\n>>> prob = svm_problem(np.asarray([1,-1]), scipy.sparse.csr_matrix(([1, 1, -1, -1], ([0, 0, 1, 1], [0, 2, 0, 2]))))\n>>> param = svm_parameter('-c 4')\n>>> m = libsvm.svm_train(prob, param) # m is a ctype pointer to an svm_model\n# Convert a tuple of ndarray (index, data) to feature_nodearray, a ctypes structure\n# Note that index starts from 0, though the following example will be changed to 1:1, 3:1 internally\n>>> x0, max_idx = gen_svm_nodearray((np.asarray([0,2]), np.asarray([1,1])))\n>>> label = libsvm.svm_predict(m, x0)\n\nDesign Description\n==================\n\nThere are two files svm.py and svmutil.py, which respectively correspond to\nlow-level and high-level use of the interface.\n\nIn svm.py, we adopt the Python built-in library \"ctypes,\" so that\nPython can directly access C structures and interface functions defined\nin svm.h.\n\nWhile advanced users can use structures/functions in svm.py, to\navoid handling ctypes structures, in svmutil.py we provide some easy-to-use\nfunctions. The usage is similar to LIBSVM MATLAB interface.\n\nData Structures\n===============\n\nFour data structures derived from svm.h are svm_node, svm_problem, svm_parameter,\nand svm_model. They all contain fields with the same names in svm.h. Access\nthese fields carefully because you directly use a C structure instead of a\nPython object. For svm_model, accessing the field directly is not recommanded.\nProgrammers should use the interface functions or methods of svm_model class\nin Python to get the values. The following description introduces additional\nfields and methods.\n\nBefore using the data structures, execute the following command to load the\nLIBSVM shared library:\n\n    >>> from libsvm.svm import *\n\n- class svm_node:\n\n    Construct an svm_node.\n\n    >>> node = svm_node(idx, val)\n\n    idx: an integer indicates the feature index.\n\n    val: a float indicates the feature value.\n\n    Show the index and the value of a node.\n\n    >>> print(node)\n\n- Function: gen_svm_nodearray(xi [,feature_max=None [,isKernel=False]])\n\n    Generate a feature vector from a Python list/tuple/dictionary, numpy ndarray or tuple of (index, data):\n\n    >>> xi_ctype, max_idx = gen_svm_nodearray({1:1, 3:1, 5:-2})\n\n    xi_ctype: the returned svm_nodearray (a ctypes structure)\n\n    max_idx: the maximal feature index of xi\n\n    feature_max: if feature_max is assigned, features with indices larger than\n                 feature_max are removed.\n\n    isKernel: if isKernel == True, the list index starts from 0 for precomputed\n              kernel. Otherwise, the list index starts from 1. The default\n              value is False.\n\n- class svm_problem:\n\n    Construct an svm_problem instance\n\n    >>> prob = svm_problem(y, x)\n\n    y: a Python list/tuple/ndarray of l labels (type must be int/double).\n\n    x: 1. a list/tuple of l training instances. Feature vector of\n          each training instance is a list/tuple or dictionary.\n\n       2. an l * n numpy ndarray or scipy spmatrix (n: number of features).\n\n    Note that if your x contains sparse data (i.e., dictionary), the internal\n    ctypes data format is still sparse.\n\n    For pre-computed kernel, the isKernel flag should be set to True:\n\n    >>> prob = svm_problem(y, x, isKernel=True)\n\n    Please read LIBSVM README for more details of pre-computed kernel.\n\n- class svm_parameter:\n\n    Construct an svm_parameter instance\n\n    >>> param = svm_parameter('training_options')\n\n    If 'training_options' is empty, LIBSVM default values are applied.\n\n    Set param to LIBSVM default values.\n\n    >>> param.set_to_default_values()\n\n    Parse a string of options.\n\n    >>> param.parse_options('training_options')\n\n    Show values of parameters.\n\n    >>> print(param)\n\n- class svm_model:\n\n    There are two ways to obtain an instance of svm_model:\n\n    >>> model = svm_train(y, x)\n    >>> model = svm_load_model('model_file_name')\n\n    Note that the returned structure of interface functions\n    libsvm.svm_train and libsvm.svm_load_model is a ctypes pointer of\n    svm_model, which is different from the svm_model object returned\n    by svm_train and svm_load_model in svmutil.py. We provide a\n    function toPyModel for the conversion:\n\n    >>> model_ptr = libsvm.svm_train(prob, param)\n    >>> model = toPyModel(model_ptr)\n\n    If you obtain a model in a way other than the above approaches,\n    handle it carefully to avoid memory leak or segmentation fault.\n\n    Some interface functions to access LIBSVM models are wrapped as\n    members of the class svm_model:\n\n    >>> svm_type = model.get_svm_type()\n    >>> nr_class = model.get_nr_class()\n    >>> svr_probability = model.get_svr_probability()\n    >>> class_labels = model.get_labels()\n    >>> sv_indices = model.get_sv_indices()\n    >>> nr_sv = model.get_nr_sv()\n    >>> is_prob_model = model.is_probability_model()\n    >>> support_vector_coefficients = model.get_sv_coef()\n    >>> support_vectors = model.get_SV()\n\nUtility Functions\n=================\n\nTo use utility functions, type\n\n    >>> from libsvm.svmutil import *\n\nThe above command loads\n    svm_train()            : train an SVM model\n    svm_predict()          : predict testing data\n    svm_read_problem()     : read the data from a LIBSVM-format file.\n    svm_load_model()       : load a LIBSVM model.\n    svm_save_model()       : save model to a file.\n    evaluations()          : evaluate prediction results.\n    csr_find_scale_param() : find scaling parameter for data in csr format.\n    csr_scale()            : apply data scaling to data in csr format.\n\n- Function: svm_train\n\n    There are three ways to call svm_train()\n\n    >>> model = svm_train(y, x [, 'training_options'])\n    >>> model = svm_train(prob [, 'training_options'])\n    >>> model = svm_train(prob, param)\n\n    y: a list/tuple/ndarray of l training labels (type must be int/double).\n\n    x: 1. a list/tuple of l training instances. Feature vector of\n          each training instance is a list/tuple or dictionary.\n\n       2. an l * n numpy ndarray or scipy spmatrix (n: number of features).\n\n    training_options: a string in the same form as that for LIBSVM command\n                      mode.\n\n    prob: an svm_problem instance generated by calling\n          svm_problem(y, x).\n          For pre-computed kernel, you should use\n          svm_problem(y, x, isKernel=True)\n\n    param: an svm_parameter instance generated by calling\n           svm_parameter('training_options')\n\n    model: the returned svm_model instance. See svm.h for details of this\n           structure. If '-v' is specified, cross validation is\n           conducted and the returned model is just a scalar: cross-validation\n           accuracy for classification and mean-squared error for regression.\n\n    To train the same data many times with different\n    parameters, the second and the third ways should be faster..\n\n    Examples:\n\n    >>> y, x = svm_read_problem('../heart_scale')\n    >>> prob = svm_problem(y, x)\n    >>> param = svm_parameter('-s 3 -c 5 -h 0')\n    >>> m = svm_train(y, x, '-c 5')\n    >>> m = svm_train(prob, '-t 2 -c 5')\n    >>> m = svm_train(prob, param)\n    >>> CV_ACC = svm_train(y, x, '-v 3')\n\n- Function: svm_predict\n\n    To predict testing data with a model, use\n\n    >>> p_labs, p_acc, p_vals = svm_predict(y, x, model [,'predicting_options'])\n\n    y: a list/tuple/ndarray of l true labels (type must be int/double).\n       It is used for calculating the accuracy. Use [] if true labels are\n       unavailable.\n\n    x: 1. a list/tuple of l training instances. Feature vector of\n          each training instance is a list/tuple or dictionary.\n\n       2. an l * n numpy ndarray or scipy spmatrix (n: number of features).\n\n    predicting_options: a string of predicting options in the same format as\n                        that of LIBSVM.\n\n    model: an svm_model instance.\n\n    p_labels: a list of predicted labels\n\n    p_acc: a tuple including accuracy (for classification), mean\n           squared error, and squared correlation coefficient (for\n           regression).\n\n    p_vals: a list of decision values or probability estimates (if '-b 1'\n            is specified). If k is the number of classes in training data,\n            for decision values, each element includes results of predicting\n            k(k-1)/2 binary-class SVMs. For classification, k = 1 is a\n            special case. Decision value [+1] is returned for each testing\n            instance, instead of an empty list.\n            For probabilities, each element contains k values indicating\n            the probability that the testing instance is in each class.\n            For one-class SVM, the list has two elements indicating the\n            probabilities of normal instance/outlier.\n            Note that the order of classes is the same as the 'model.label'\n            field in the model structure.\n\n    Example:\n\n    >>> m = svm_train(y, x, '-c 5')\n    >>> p_labels, p_acc, p_vals = svm_predict(y, x, m)\n\n- Functions: svm_read_problem/svm_load_model/svm_save_model\n\n    See the usage by examples:\n\n    >>> y, x = svm_read_problem('data.txt')\n    >>> m = svm_load_model('model_file')\n    >>> svm_save_model('model_file', m)\n\n- Function: evaluations\n\n    Calculate some evaluations using the true values (ty) and the predicted\n    values (pv):\n\n    >>> (ACC, MSE, SCC) = evaluations(ty, pv, useScipy)\n\n    ty: a list/tuple/ndarray of true values.\n\n    pv: a list/tuple/ndarray of predicted values.\n\n    useScipy: convert ty, pv to ndarray, and use scipy functions to do the evaluation\n\n    ACC: accuracy.\n\n    MSE: mean squared error.\n\n    SCC: squared correlation coefficient.\n\n- Function: csr_find_scale_parameter/csr_scale\n\n    Scale data in csr format.\n\n    >>> param = csr_find_scale_param(x [, lower=l, upper=u])\n    >>> x = csr_scale(x, param)\n\n    x: a csr_matrix of data.\n\n    l: x scaling lower limit; default -1.\n\n    u: x scaling upper limit; default 1.\n\n    The scaling process is: x * diag(coef) + ones(l, 1) * offset'\n\n    param: a dictionary of scaling parameters, where param['coef'] = coef and param['offset'] = offset.\n\n    coef: a scipy array of scaling coefficients.\n\n    offset: a scipy array of scaling offsets.\n\nAdditional Information\n======================\n\nThis interface was originally written by Hsiang-Fu Yu from Department of Computer\nScience, National Taiwan University. If you find this tool useful, please\ncite LIBSVM as follows\n\nChih-Chung Chang and Chih-Jen Lin, LIBSVM : a library for support\nvector machines. ACM Transactions on Intelligent Systems and\nTechnology, 2:27:1--27:27, 2011. Software available at\nhttp://www.csie.ntu.edu.tw/~cjlin/libsvm\n\nFor any question, please contact Chih-Jen Lin <cjlin@csie.ntu.edu.tw>,\nor check the FAQ page:\n\nhttp://www.csie.ntu.edu.tw/~cjlin/libsvm/faq.html\n",
    "description_content_type": "text/plain",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.csie.ntu.edu.tw/~cjlin/libsvm",
    "keywords": "",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "libsvm-official",
    "package_url": "https://pypi.org/project/libsvm-official/",
    "platform": null,
    "project_url": "https://pypi.org/project/libsvm-official/",
    "project_urls": {
      "Homepage": "https://www.csie.ntu.edu.tw/~cjlin/libsvm"
    },
    "release_url": "https://pypi.org/project/libsvm-official/3.31.0/",
    "requires_dist": [
      "scipy"
    ],
    "requires_python": "",
    "summary": "Python binding of LIBSVM",
    "version": "3.31.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17154001,
  "releases": {
    "3.25.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "982abe7ba8ff0e6fe691c3845d918e1a979b2120d045461328650c546219f262",
          "md5": "dbf1055f732eb876521326a3171ef3e0",
          "sha256": "fa1eba4422e6199b63ae315dd6dd8bde4471902ef1e16646d3d673e44e864d31"
        },
        "downloads": -1,
        "filename": "libsvm_official-3.25.0-cp36-cp36m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "dbf1055f732eb876521326a3171ef3e0",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": null,
        "size": 50668,
        "upload_time": "2021-04-14T03:31:30",
        "upload_time_iso_8601": "2021-04-14T03:31:30.289019Z",
        "url": "https://files.pythonhosted.org/packages/98/2a/be7ba8ff0e6fe691c3845d918e1a979b2120d045461328650c546219f262/libsvm_official-3.25.0-cp36-cp36m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "051cbac4ff966e36d6a07bf808de7e4eb560230624621534a31dff7dd5162dd1",
          "md5": "8339f40843a9ad1e1013f36735864823",
          "sha256": "19885012ffd8e5f12413c7c91d95a956ef4dd3420e2a565ae0f112e5a14fb139"
        },
        "downloads": -1,
        "filename": "libsvm_official-3.25.0-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "8339f40843a9ad1e1013f36735864823",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 50665,
        "upload_time": "2021-04-14T03:31:32",
        "upload_time_iso_8601": "2021-04-14T03:31:32.524745Z",
        "url": "https://files.pythonhosted.org/packages/05/1c/bac4ff966e36d6a07bf808de7e4eb560230624621534a31dff7dd5162dd1/libsvm_official-3.25.0-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c85fb5e036526c5ab42fe9dbc393b311a9613216bea089366b1851bdd59576f",
          "md5": "a1b501c453ae02a431b0690c2872d14f",
          "sha256": "1e96703bcb0ea3353c12d466f9c1fcab6c28bba5840861114395635218285a70"
        },
        "downloads": -1,
        "filename": "libsvm_official-3.25.0-cp38-cp38-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "a1b501c453ae02a431b0690c2872d14f",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 50664,
        "upload_time": "2021-04-14T03:31:34",
        "upload_time_iso_8601": "2021-04-14T03:31:34.461255Z",
        "url": "https://files.pythonhosted.org/packages/5c/85/fb5e036526c5ab42fe9dbc393b311a9613216bea089366b1851bdd59576f/libsvm_official-3.25.0-cp38-cp38-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "848b075621583b0338291f662b9f64daf098699110893ff3288d96b042786ccb",
          "md5": "8f1afd11084bac3d79a574367ed37e52",
          "sha256": "3aebecee6006c37dfe03521225133aca01fa846f4733ad984b80893ed1493b6d"
        },
        "downloads": -1,
        "filename": "libsvm-official-3.25.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8f1afd11084bac3d79a574367ed37e52",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39237,
        "upload_time": "2021-04-14T03:31:36",
        "upload_time_iso_8601": "2021-04-14T03:31:36.144730Z",
        "url": "https://files.pythonhosted.org/packages/84/8b/075621583b0338291f662b9f64daf098699110893ff3288d96b042786ccb/libsvm-official-3.25.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.30.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d9e49282c8ebee67a1797cf6c16d978880b7f7003063adcdb055b7e677b583a",
          "md5": "4a8ad0df3194db9ee3f9bd288fd055d4",
          "sha256": "58ed4952d5adfe9fc2d610759647894b0ac07dd80ea1b9c7d708ca1abc4281b1"
        },
        "downloads": -1,
        "filename": "libsvm_official-3.30.0-cp310-cp310-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "4a8ad0df3194db9ee3f9bd288fd055d4",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": null,
        "size": 51689,
        "upload_time": "2022-08-12T01:02:07",
        "upload_time_iso_8601": "2022-08-12T01:02:07.239239Z",
        "url": "https://files.pythonhosted.org/packages/8d/9e/49282c8ebee67a1797cf6c16d978880b7f7003063adcdb055b7e677b583a/libsvm_official-3.30.0-cp310-cp310-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1e112c9d4afa400244fbfdbb8a639afeed6046709f01082e963f466a2a42e09",
          "md5": "99f0acf113c316276b8bd74026bc47e2",
          "sha256": "11f9866ff02ffe18b92397da38f85538a3304ff3374016910eb02cce57c5c8b2"
        },
        "downloads": -1,
        "filename": "libsvm_official-3.30.0-cp36-cp36m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "99f0acf113c316276b8bd74026bc47e2",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": null,
        "size": 51686,
        "upload_time": "2022-08-12T01:02:09",
        "upload_time_iso_8601": "2022-08-12T01:02:09.660888Z",
        "url": "https://files.pythonhosted.org/packages/b1/e1/12c9d4afa400244fbfdbb8a639afeed6046709f01082e963f466a2a42e09/libsvm_official-3.30.0-cp36-cp36m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eae0bd7edfb9c26137ca61ae8b69ed80e565cdfd087b323d2982a6c278a6fd75",
          "md5": "d5f9b76317147cd75caab7343f4af31e",
          "sha256": "a1922d2d8697d5865baced2702107f6c1acabc24f366463ad2b1ba5ac77337bb"
        },
        "downloads": -1,
        "filename": "libsvm_official-3.30.0-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "d5f9b76317147cd75caab7343f4af31e",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 51688,
        "upload_time": "2022-08-12T01:02:12",
        "upload_time_iso_8601": "2022-08-12T01:02:12.006433Z",
        "url": "https://files.pythonhosted.org/packages/ea/e0/bd7edfb9c26137ca61ae8b69ed80e565cdfd087b323d2982a6c278a6fd75/libsvm_official-3.30.0-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8c2b1476e5c010626c5475a503e9cd79e2743346a37e1b0a34876fee132891d",
          "md5": "d9c431c38eb044a98e326ba3f1ba89a1",
          "sha256": "f9c038cd14a81baadeb58143f9ac40a7226d016a13b50acd6fcd5e4a8d14f3b5"
        },
        "downloads": -1,
        "filename": "libsvm_official-3.30.0-cp38-cp38-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "d9c431c38eb044a98e326ba3f1ba89a1",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 51685,
        "upload_time": "2022-08-12T01:02:14",
        "upload_time_iso_8601": "2022-08-12T01:02:14.491291Z",
        "url": "https://files.pythonhosted.org/packages/f8/c2/b1476e5c010626c5475a503e9cd79e2743346a37e1b0a34876fee132891d/libsvm_official-3.30.0-cp38-cp38-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0178d0fc821c6871478e279ec0894f6b56ec573e367ad6d4ad0a44b922719fd2",
          "md5": "64d74b82f5542abd3c0d33bbb4f0c99a",
          "sha256": "959fbcfffa918f37dcaf518cece4902dad630d2ecace96cbc055e68d36a7ff02"
        },
        "downloads": -1,
        "filename": "libsvm_official-3.30.0-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "64d74b82f5542abd3c0d33bbb4f0c99a",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 51685,
        "upload_time": "2022-08-12T01:02:17",
        "upload_time_iso_8601": "2022-08-12T01:02:17.414596Z",
        "url": "https://files.pythonhosted.org/packages/01/78/d0fc821c6871478e279ec0894f6b56ec573e367ad6d4ad0a44b922719fd2/libsvm_official-3.30.0-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e58a326c4c7d3afc581698fd04cea9b0e2aae861ddd77c0756d211f3a761b00",
          "md5": "3bf83d6e3d0c84bb72c24a76b856ede4",
          "sha256": "cf871bf1f20c5511d4e8e48bf03acf98c042d0044a2a80f99cff9d240a3bea69"
        },
        "downloads": -1,
        "filename": "libsvm-official-3.30.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3bf83d6e3d0c84bb72c24a76b856ede4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38338,
        "upload_time": "2022-08-12T01:04:05",
        "upload_time_iso_8601": "2022-08-12T01:04:05.630428Z",
        "url": "https://files.pythonhosted.org/packages/5e/58/a326c4c7d3afc581698fd04cea9b0e2aae861ddd77c0756d211f3a761b00/libsvm-official-3.30.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.31.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcd61914ebf6e5497e4512fca89dc32e0c142b17a08f24b3bb37e9766af43acf",
          "md5": "db75cc0cb83690caa72c0f912efac68f",
          "sha256": "ab6c7793ee577ae2bf248de2e267ea40d1a58f40a91d882203605355b53e49a9"
        },
        "downloads": -1,
        "filename": "libsvm_official-3.31.0-cp310-cp310-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "db75cc0cb83690caa72c0f912efac68f",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": null,
        "size": 363810,
        "upload_time": "2023-03-04T07:22:12",
        "upload_time_iso_8601": "2023-03-04T07:22:12.114832Z",
        "url": "https://files.pythonhosted.org/packages/bc/d6/1914ebf6e5497e4512fca89dc32e0c142b17a08f24b3bb37e9766af43acf/libsvm_official-3.31.0-cp310-cp310-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c352a8c6f3ccf02609f054796d9dcdcfc299c33aff8ece7e2c22e8110a1cd743",
          "md5": "5899e6245d34473d7873e92cad00808f",
          "sha256": "61cbd2a905c0fb4145baf854230664cf46e9fd335620d1dab60cff87b4937725"
        },
        "downloads": -1,
        "filename": "libsvm_official-3.31.0-cp310-cp310-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "5899e6245d34473d7873e92cad00808f",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": null,
        "size": 52809,
        "upload_time": "2023-03-04T07:22:14",
        "upload_time_iso_8601": "2023-03-04T07:22:14.232732Z",
        "url": "https://files.pythonhosted.org/packages/c3/52/a8c6f3ccf02609f054796d9dcdcfc299c33aff8ece7e2c22e8110a1cd743/libsvm_official-3.31.0-cp310-cp310-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7d77374101fcb5533783324a80a341f579be4e57b7692094918e97c7c0c8f9e",
          "md5": "7ecc99ec8d4e44a7b295474745fd0f0b",
          "sha256": "49c058e5ebc0a06f71b8703e49d06a591aae414dc394b70531b722e5a0047e64"
        },
        "downloads": -1,
        "filename": "libsvm_official-3.31.0-cp311-cp311-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "7ecc99ec8d4e44a7b295474745fd0f0b",
        "packagetype": "bdist_wheel",
        "python_version": "cp311",
        "requires_python": null,
        "size": 363810,
        "upload_time": "2023-03-04T07:22:16",
        "upload_time_iso_8601": "2023-03-04T07:22:16.058930Z",
        "url": "https://files.pythonhosted.org/packages/f7/d7/7374101fcb5533783324a80a341f579be4e57b7692094918e97c7c0c8f9e/libsvm_official-3.31.0-cp311-cp311-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c95cce80955ce92de8f77cef1464cfdc0238fa3cef5f21af9187bc6a0b56a715",
          "md5": "7d3584df8e9abc2f31563f72b79b6b50",
          "sha256": "fd1607de7485d642e2d116afdf353e8af82c66100d549988e77d1c83d5c4e14b"
        },
        "downloads": -1,
        "filename": "libsvm_official-3.31.0-cp311-cp311-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "7d3584df8e9abc2f31563f72b79b6b50",
        "packagetype": "bdist_wheel",
        "python_version": "cp311",
        "requires_python": null,
        "size": 52809,
        "upload_time": "2023-03-04T07:22:18",
        "upload_time_iso_8601": "2023-03-04T07:22:18.112613Z",
        "url": "https://files.pythonhosted.org/packages/c9/5c/ce80955ce92de8f77cef1464cfdc0238fa3cef5f21af9187bc6a0b56a715/libsvm_official-3.31.0-cp311-cp311-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eaad4b6b453afa8eeffe0574e3b499078c08da90beeb55bf15bbde51140dcee8",
          "md5": "6e67d442cc1ab4d24152279dc7157551",
          "sha256": "2741fde4f05e9702565dc23720be787eb5652b27be9dcac797f98ad2d9bdb1ea"
        },
        "downloads": -1,
        "filename": "libsvm_official-3.31.0-cp36-cp36m-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "6e67d442cc1ab4d24152279dc7157551",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": null,
        "size": 363826,
        "upload_time": "2023-03-04T07:22:20",
        "upload_time_iso_8601": "2023-03-04T07:22:20.163972Z",
        "url": "https://files.pythonhosted.org/packages/ea/ad/4b6b453afa8eeffe0574e3b499078c08da90beeb55bf15bbde51140dcee8/libsvm_official-3.31.0-cp36-cp36m-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2af1ac9cd95a372d7cc61f3a6abb8e0bf4a09e63ca66a5484997c758bf51c3ff",
          "md5": "9725f191a8439ca8c217512e0c1a79c4",
          "sha256": "3ebaf39d2e4f42b939ce9bacfa61fa79b8020db661ac0b8a25f9c8d2ea8d569d"
        },
        "downloads": -1,
        "filename": "libsvm_official-3.31.0-cp36-cp36m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "9725f191a8439ca8c217512e0c1a79c4",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": null,
        "size": 53881,
        "upload_time": "2023-03-04T07:22:22",
        "upload_time_iso_8601": "2023-03-04T07:22:22.167148Z",
        "url": "https://files.pythonhosted.org/packages/2a/f1/ac9cd95a372d7cc61f3a6abb8e0bf4a09e63ca66a5484997c758bf51c3ff/libsvm_official-3.31.0-cp36-cp36m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7cfb8d56f07448eb17e76501b8be933a4537736c77d86f85a0b9cc2334f6cde",
          "md5": "a1b28b3cbd8c2f5e2c53f79055cd24e2",
          "sha256": "efcfe8490f0b8fa73cf928268a98bd6e26b45363e85bb55fabeb4bb621b601f2"
        },
        "downloads": -1,
        "filename": "libsvm_official-3.31.0-cp37-cp37m-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "a1b28b3cbd8c2f5e2c53f79055cd24e2",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 363806,
        "upload_time": "2023-03-04T07:22:24",
        "upload_time_iso_8601": "2023-03-04T07:22:24.181716Z",
        "url": "https://files.pythonhosted.org/packages/f7/cf/b8d56f07448eb17e76501b8be933a4537736c77d86f85a0b9cc2334f6cde/libsvm_official-3.31.0-cp37-cp37m-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "debdf415b03f58af6f1b2f61ebf81ed671cb8ad9ab62a6885ffc74f62584ab27",
          "md5": "90bf89eb5bdf2d80c51aa41289e6d638",
          "sha256": "63c942ba57db51a733ca204a1d73075b98c351bddefd08e2e5151aba8e408372"
        },
        "downloads": -1,
        "filename": "libsvm_official-3.31.0-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "90bf89eb5bdf2d80c51aa41289e6d638",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 52808,
        "upload_time": "2023-03-04T07:22:26",
        "upload_time_iso_8601": "2023-03-04T07:22:26.301537Z",
        "url": "https://files.pythonhosted.org/packages/de/bd/f415b03f58af6f1b2f61ebf81ed671cb8ad9ab62a6885ffc74f62584ab27/libsvm_official-3.31.0-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6a1aaa1163d9609b9b1f86f956fbd409cefafbb54540256cdd2db538747ce0b",
          "md5": "607a199b32e60bf2526c6b9733501f2a",
          "sha256": "e832b1ba99db23c53c2bdd8a71d89e31ae047f742be3c5ced9c82da03a65a596"
        },
        "downloads": -1,
        "filename": "libsvm_official-3.31.0-cp38-cp38-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "607a199b32e60bf2526c6b9733501f2a",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 363804,
        "upload_time": "2023-03-04T07:22:27",
        "upload_time_iso_8601": "2023-03-04T07:22:27.890159Z",
        "url": "https://files.pythonhosted.org/packages/b6/a1/aaa1163d9609b9b1f86f956fbd409cefafbb54540256cdd2db538747ce0b/libsvm_official-3.31.0-cp38-cp38-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f03ab3f8843c8a54190501c220598a86f4d04d6082f0949a0005de81f7c5ef9e",
          "md5": "21cc8e345f2ddc08f5349e65b70b7290",
          "sha256": "41ef1fc7e3091e7eeaa017f4b2ea098e433dd38b80d48b9e2fc1d2ec9166d9b5"
        },
        "downloads": -1,
        "filename": "libsvm_official-3.31.0-cp38-cp38-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "21cc8e345f2ddc08f5349e65b70b7290",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 52805,
        "upload_time": "2023-03-04T07:22:29",
        "upload_time_iso_8601": "2023-03-04T07:22:29.986641Z",
        "url": "https://files.pythonhosted.org/packages/f0/3a/b3f8843c8a54190501c220598a86f4d04d6082f0949a0005de81f7c5ef9e/libsvm_official-3.31.0-cp38-cp38-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6723f4af422bb466ca2023550663672ab2b3180dce865293fd7a7bd346e66720",
          "md5": "39fd11a8436e3d521505bc648b1adbba",
          "sha256": "b05e02ad113eb2cdf0e62ea5faa5e140b63cbe04e6c07863eb1d0df56b96ed6f"
        },
        "downloads": -1,
        "filename": "libsvm_official-3.31.0-cp39-cp39-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "39fd11a8436e3d521505bc648b1adbba",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 363799,
        "upload_time": "2023-03-04T07:22:32",
        "upload_time_iso_8601": "2023-03-04T07:22:32.039870Z",
        "url": "https://files.pythonhosted.org/packages/67/23/f4af422bb466ca2023550663672ab2b3180dce865293fd7a7bd346e66720/libsvm_official-3.31.0-cp39-cp39-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a1d65a9b0a4d40dca2e7be67187b519863cfd210893eea191148ee7a08e815d",
          "md5": "ef7d3f860e79b6673e56b50b172078f3",
          "sha256": "32d4fccfcea144081da43393a5ce3b5bb14a66b3c889f1d0736c7ce45dfdf55a"
        },
        "downloads": -1,
        "filename": "libsvm_official-3.31.0-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "ef7d3f860e79b6673e56b50b172078f3",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 52806,
        "upload_time": "2023-03-04T07:22:33",
        "upload_time_iso_8601": "2023-03-04T07:22:33.645494Z",
        "url": "https://files.pythonhosted.org/packages/2a/1d/65a9b0a4d40dca2e7be67187b519863cfd210893eea191148ee7a08e815d/libsvm_official-3.31.0-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2731d8a988cf070ad5d31988e0139ac34348c9de2989f43fab72397aed2ad2ad",
          "md5": "c67ec74e5485dc3ed55ed57c0c6ac0ae",
          "sha256": "0277e6cd51af36256dfee14ca297d56a414e123117562253387a5117aa667a56"
        },
        "downloads": -1,
        "filename": "libsvm-official-3.31.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c67ec74e5485dc3ed55ed57c0c6ac0ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39934,
        "upload_time": "2023-03-04T07:22:35",
        "upload_time_iso_8601": "2023-03-04T07:22:35.666863Z",
        "url": "https://files.pythonhosted.org/packages/27/31/d8a988cf070ad5d31988e0139ac34348c9de2989f43fab72397aed2ad2ad/libsvm-official-3.31.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bcd61914ebf6e5497e4512fca89dc32e0c142b17a08f24b3bb37e9766af43acf",
        "md5": "db75cc0cb83690caa72c0f912efac68f",
        "sha256": "ab6c7793ee577ae2bf248de2e267ea40d1a58f40a91d882203605355b53e49a9"
      },
      "downloads": -1,
      "filename": "libsvm_official-3.31.0-cp310-cp310-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "db75cc0cb83690caa72c0f912efac68f",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": null,
      "size": 363810,
      "upload_time": "2023-03-04T07:22:12",
      "upload_time_iso_8601": "2023-03-04T07:22:12.114832Z",
      "url": "https://files.pythonhosted.org/packages/bc/d6/1914ebf6e5497e4512fca89dc32e0c142b17a08f24b3bb37e9766af43acf/libsvm_official-3.31.0-cp310-cp310-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c352a8c6f3ccf02609f054796d9dcdcfc299c33aff8ece7e2c22e8110a1cd743",
        "md5": "5899e6245d34473d7873e92cad00808f",
        "sha256": "61cbd2a905c0fb4145baf854230664cf46e9fd335620d1dab60cff87b4937725"
      },
      "downloads": -1,
      "filename": "libsvm_official-3.31.0-cp310-cp310-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "5899e6245d34473d7873e92cad00808f",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": null,
      "size": 52809,
      "upload_time": "2023-03-04T07:22:14",
      "upload_time_iso_8601": "2023-03-04T07:22:14.232732Z",
      "url": "https://files.pythonhosted.org/packages/c3/52/a8c6f3ccf02609f054796d9dcdcfc299c33aff8ece7e2c22e8110a1cd743/libsvm_official-3.31.0-cp310-cp310-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f7d77374101fcb5533783324a80a341f579be4e57b7692094918e97c7c0c8f9e",
        "md5": "7ecc99ec8d4e44a7b295474745fd0f0b",
        "sha256": "49c058e5ebc0a06f71b8703e49d06a591aae414dc394b70531b722e5a0047e64"
      },
      "downloads": -1,
      "filename": "libsvm_official-3.31.0-cp311-cp311-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "7ecc99ec8d4e44a7b295474745fd0f0b",
      "packagetype": "bdist_wheel",
      "python_version": "cp311",
      "requires_python": null,
      "size": 363810,
      "upload_time": "2023-03-04T07:22:16",
      "upload_time_iso_8601": "2023-03-04T07:22:16.058930Z",
      "url": "https://files.pythonhosted.org/packages/f7/d7/7374101fcb5533783324a80a341f579be4e57b7692094918e97c7c0c8f9e/libsvm_official-3.31.0-cp311-cp311-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c95cce80955ce92de8f77cef1464cfdc0238fa3cef5f21af9187bc6a0b56a715",
        "md5": "7d3584df8e9abc2f31563f72b79b6b50",
        "sha256": "fd1607de7485d642e2d116afdf353e8af82c66100d549988e77d1c83d5c4e14b"
      },
      "downloads": -1,
      "filename": "libsvm_official-3.31.0-cp311-cp311-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "7d3584df8e9abc2f31563f72b79b6b50",
      "packagetype": "bdist_wheel",
      "python_version": "cp311",
      "requires_python": null,
      "size": 52809,
      "upload_time": "2023-03-04T07:22:18",
      "upload_time_iso_8601": "2023-03-04T07:22:18.112613Z",
      "url": "https://files.pythonhosted.org/packages/c9/5c/ce80955ce92de8f77cef1464cfdc0238fa3cef5f21af9187bc6a0b56a715/libsvm_official-3.31.0-cp311-cp311-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eaad4b6b453afa8eeffe0574e3b499078c08da90beeb55bf15bbde51140dcee8",
        "md5": "6e67d442cc1ab4d24152279dc7157551",
        "sha256": "2741fde4f05e9702565dc23720be787eb5652b27be9dcac797f98ad2d9bdb1ea"
      },
      "downloads": -1,
      "filename": "libsvm_official-3.31.0-cp36-cp36m-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "6e67d442cc1ab4d24152279dc7157551",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": null,
      "size": 363826,
      "upload_time": "2023-03-04T07:22:20",
      "upload_time_iso_8601": "2023-03-04T07:22:20.163972Z",
      "url": "https://files.pythonhosted.org/packages/ea/ad/4b6b453afa8eeffe0574e3b499078c08da90beeb55bf15bbde51140dcee8/libsvm_official-3.31.0-cp36-cp36m-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2af1ac9cd95a372d7cc61f3a6abb8e0bf4a09e63ca66a5484997c758bf51c3ff",
        "md5": "9725f191a8439ca8c217512e0c1a79c4",
        "sha256": "3ebaf39d2e4f42b939ce9bacfa61fa79b8020db661ac0b8a25f9c8d2ea8d569d"
      },
      "downloads": -1,
      "filename": "libsvm_official-3.31.0-cp36-cp36m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "9725f191a8439ca8c217512e0c1a79c4",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": null,
      "size": 53881,
      "upload_time": "2023-03-04T07:22:22",
      "upload_time_iso_8601": "2023-03-04T07:22:22.167148Z",
      "url": "https://files.pythonhosted.org/packages/2a/f1/ac9cd95a372d7cc61f3a6abb8e0bf4a09e63ca66a5484997c758bf51c3ff/libsvm_official-3.31.0-cp36-cp36m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f7cfb8d56f07448eb17e76501b8be933a4537736c77d86f85a0b9cc2334f6cde",
        "md5": "a1b28b3cbd8c2f5e2c53f79055cd24e2",
        "sha256": "efcfe8490f0b8fa73cf928268a98bd6e26b45363e85bb55fabeb4bb621b601f2"
      },
      "downloads": -1,
      "filename": "libsvm_official-3.31.0-cp37-cp37m-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "a1b28b3cbd8c2f5e2c53f79055cd24e2",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": null,
      "size": 363806,
      "upload_time": "2023-03-04T07:22:24",
      "upload_time_iso_8601": "2023-03-04T07:22:24.181716Z",
      "url": "https://files.pythonhosted.org/packages/f7/cf/b8d56f07448eb17e76501b8be933a4537736c77d86f85a0b9cc2334f6cde/libsvm_official-3.31.0-cp37-cp37m-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "debdf415b03f58af6f1b2f61ebf81ed671cb8ad9ab62a6885ffc74f62584ab27",
        "md5": "90bf89eb5bdf2d80c51aa41289e6d638",
        "sha256": "63c942ba57db51a733ca204a1d73075b98c351bddefd08e2e5151aba8e408372"
      },
      "downloads": -1,
      "filename": "libsvm_official-3.31.0-cp37-cp37m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "90bf89eb5bdf2d80c51aa41289e6d638",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": null,
      "size": 52808,
      "upload_time": "2023-03-04T07:22:26",
      "upload_time_iso_8601": "2023-03-04T07:22:26.301537Z",
      "url": "https://files.pythonhosted.org/packages/de/bd/f415b03f58af6f1b2f61ebf81ed671cb8ad9ab62a6885ffc74f62584ab27/libsvm_official-3.31.0-cp37-cp37m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b6a1aaa1163d9609b9b1f86f956fbd409cefafbb54540256cdd2db538747ce0b",
        "md5": "607a199b32e60bf2526c6b9733501f2a",
        "sha256": "e832b1ba99db23c53c2bdd8a71d89e31ae047f742be3c5ced9c82da03a65a596"
      },
      "downloads": -1,
      "filename": "libsvm_official-3.31.0-cp38-cp38-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "607a199b32e60bf2526c6b9733501f2a",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": null,
      "size": 363804,
      "upload_time": "2023-03-04T07:22:27",
      "upload_time_iso_8601": "2023-03-04T07:22:27.890159Z",
      "url": "https://files.pythonhosted.org/packages/b6/a1/aaa1163d9609b9b1f86f956fbd409cefafbb54540256cdd2db538747ce0b/libsvm_official-3.31.0-cp38-cp38-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f03ab3f8843c8a54190501c220598a86f4d04d6082f0949a0005de81f7c5ef9e",
        "md5": "21cc8e345f2ddc08f5349e65b70b7290",
        "sha256": "41ef1fc7e3091e7eeaa017f4b2ea098e433dd38b80d48b9e2fc1d2ec9166d9b5"
      },
      "downloads": -1,
      "filename": "libsvm_official-3.31.0-cp38-cp38-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "21cc8e345f2ddc08f5349e65b70b7290",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": null,
      "size": 52805,
      "upload_time": "2023-03-04T07:22:29",
      "upload_time_iso_8601": "2023-03-04T07:22:29.986641Z",
      "url": "https://files.pythonhosted.org/packages/f0/3a/b3f8843c8a54190501c220598a86f4d04d6082f0949a0005de81f7c5ef9e/libsvm_official-3.31.0-cp38-cp38-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6723f4af422bb466ca2023550663672ab2b3180dce865293fd7a7bd346e66720",
        "md5": "39fd11a8436e3d521505bc648b1adbba",
        "sha256": "b05e02ad113eb2cdf0e62ea5faa5e140b63cbe04e6c07863eb1d0df56b96ed6f"
      },
      "downloads": -1,
      "filename": "libsvm_official-3.31.0-cp39-cp39-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "39fd11a8436e3d521505bc648b1adbba",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": null,
      "size": 363799,
      "upload_time": "2023-03-04T07:22:32",
      "upload_time_iso_8601": "2023-03-04T07:22:32.039870Z",
      "url": "https://files.pythonhosted.org/packages/67/23/f4af422bb466ca2023550663672ab2b3180dce865293fd7a7bd346e66720/libsvm_official-3.31.0-cp39-cp39-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a1d65a9b0a4d40dca2e7be67187b519863cfd210893eea191148ee7a08e815d",
        "md5": "ef7d3f860e79b6673e56b50b172078f3",
        "sha256": "32d4fccfcea144081da43393a5ce3b5bb14a66b3c889f1d0736c7ce45dfdf55a"
      },
      "downloads": -1,
      "filename": "libsvm_official-3.31.0-cp39-cp39-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "ef7d3f860e79b6673e56b50b172078f3",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": null,
      "size": 52806,
      "upload_time": "2023-03-04T07:22:33",
      "upload_time_iso_8601": "2023-03-04T07:22:33.645494Z",
      "url": "https://files.pythonhosted.org/packages/2a/1d/65a9b0a4d40dca2e7be67187b519863cfd210893eea191148ee7a08e815d/libsvm_official-3.31.0-cp39-cp39-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2731d8a988cf070ad5d31988e0139ac34348c9de2989f43fab72397aed2ad2ad",
        "md5": "c67ec74e5485dc3ed55ed57c0c6ac0ae",
        "sha256": "0277e6cd51af36256dfee14ca297d56a414e123117562253387a5117aa667a56"
      },
      "downloads": -1,
      "filename": "libsvm-official-3.31.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c67ec74e5485dc3ed55ed57c0c6ac0ae",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 39934,
      "upload_time": "2023-03-04T07:22:35",
      "upload_time_iso_8601": "2023-03-04T07:22:35.666863Z",
      "url": "https://files.pythonhosted.org/packages/27/31/d8a988cf070ad5d31988e0139ac34348c9de2989f43fab72397aed2ad2ad/libsvm-official-3.31.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}