{
  "info": {
    "author": "Rachel Yong",
    "author_email": "Graberial@outlook.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Overview {#mainpage}\n\n*Note:* A compiled html version of this document is hosted online\n[here](https://mlperf.github.io/inference/loadgen/index.html).\n\n## Introduction\n\n* The LoadGen is a *reusable* module that *efficiently* and *fairly* measures\n  the performance of inference systems.\n* It generates traffic for scenarios as formulated by a diverse set of experts\n  in the [MLPerf working group](https://mlperf.org/about).\n* The scenarios emulate the workloads seen in mobile devices,\n  autonomous vehicles, robotics, and cloud-based setups.\n* Although the LoadGen is not model or dataset aware, its strength is in its\n  reusability with logic that is.\n\n## Integration Example and Flow\nThe following is an diagram of how the LoadGen can be integrated into an\ninference system, resembling how some of the MLPerf reference models are\nimplemented.\n<div style=\"display:flex; flex-flow:row wrap; justify-content: space-evenly;\">\n<img src=\"loadgen_integration_diagram.svg\" width=\"500px\" style=\"padding: 20px\">\n<ol style=\"padding: 20px\">\n<li>Benchmark knows the model, dataset, and preprocessing.</li>\n<li>Benchmark hands dataset sample IDs to LoadGen.</li>\n<li>LoadGen starts generating queries of sample IDs.</li>\n<li>Benchmark creates requests to backend.</li>\n<li>Result is post processed and forwarded to LoadGen.</li>\n<li>LoadGen outputs logs for analysis.<br>\n</ol>\n</div>\n\n## Useful Links\n* [FAQ](@ref ReadmeFAQ)\n* [LoadGen Build Instructions](@ref ReadmeBuild)\n* [LoadGen API](@ref LoadgenAPI)\n* [Test Settings](@ref LoadgenAPITestSettings) -\n  A good description of available scenarios, modes, and knobs.\n* [MLPerf Inference Code](https://github.com/mlcommons/inference) -\n  Includes source for the LoadGen and reference models that use the LoadGen.\n* [MLPerf Inference Rules](https://github.com/mlcommons/inference_policies) -\n  Any mismatch with this is a bug in the LoadGen.\n* [MLPerf Website](www.mlperf.org)\n\n## Scope of the LoadGen's Responsibilities\n\n### In Scope\n* **Provide a reusable** C++ library with python bindings.\n* **Implement** the traffic patterns of the MLPerf Inference scenarios and\n  modes.\n* **Record** all traffic generated and received for later analysis and\n  verification.\n* **Summarize** the results and whether performance constraints were met.\n* **Target high-performance** systems with efficient multi-thread friendly\n  logging utilities.\n* **Generate trust** via a shared, well-tested, and community-hardened\n  code base.\n\n### Out of Scope\nThe LoadGen is:\n* **NOT** aware of the ML model it is running against.\n* **NOT** aware of the data formats of the model's inputs and outputs.\n* **NOT** aware of how to score the accuracy of a model's outputs.\n* **NOT** aware of MLPerf rules regarding scenario-specific constraints.\n\nLimitting the scope of the LoadGen in this way keeps it reusable across\ndifferent models and datasets without modification. Using composition and\ndependency injection, the user can define their own model, datasets, and\nmetrics.\n\nAdditionally, not hardcoding MLPerf-specific test constraints, like test\nduration and performance targets, allows users to use the LoadGen unmodified\nfor custom testing and continuous integration purposes.\n\n## Submission Considerations\n\n### Upstream all local modifications\n* As a rule, no local modifications to the LoadGen's C++ library are allowed\nfor submission.\n* Please upstream early and often to keep the playing field level.\n\n### Choose your TestSettings carefully!\n* Since the LoadGen is oblivious to the model, it can't enforce the MLPerf\nrequirements for submission. *e.g.:* target percentiles and latencies.\n* For verification, the values in TestSettings are logged.\n* To help make sure your settings are spec compliant, use\nTestSettings::FromConfig in conjunction with the relevant config file provided\nwith the reference models.\n\n## Responsibilities of a LoadGen User\n\n### Implement the Interfaces\n* Implement the SystemUnderTest and QuerySampleLibrary interfaces and pass\n  them to the StartTest function.\n* Call QuerySampleComplete for every sample received by\n  SystemUnderTest::IssueQuery.\n\n### Assess Accuracy\n* Process the *mlperf_log_accuracy.json* output by the LoadGen to determine\n  the accuracy of your system.\n* For the official models, Python scripts will be provided by the MLPerf model\n  owners for you to do this automatically.\n\nFor templates of how to do the above in detail, refer to code for the demos,\ntests, and reference models.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/xy223/inference",
    "keywords": "",
    "license": "Apache License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mlperf-loadgen-cb",
    "package_url": "https://pypi.org/project/mlperf-loadgen-cb/",
    "platform": null,
    "project_url": "https://pypi.org/project/mlperf-loadgen-cb/",
    "project_urls": {
      "Homepage": "https://github.com/xy223/inference"
    },
    "release_url": "https://pypi.org/project/mlperf-loadgen-cb/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "MLPerf Inference LoadGen python bindings",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13212277,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cce5480a9e2a7dfa2227ebe3ec36d357ef83633bd52746724d803971435c698c",
          "md5": "e65f66539f6c6f7d1cb7a2d773cb993d",
          "sha256": "fe004c755b17e4388fdae7a4b8307cb16f6952b5302c1a506f0f4780318c106b"
        },
        "downloads": -1,
        "filename": "mlperf_loadgen_cb-1.1.0-cp37-cp37m-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "e65f66539f6c6f7d1cb7a2d773cb993d",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 4004823,
        "upload_time": "2022-03-18T02:22:03",
        "upload_time_iso_8601": "2022-03-18T02:22:03.994987Z",
        "url": "https://files.pythonhosted.org/packages/cc/e5/480a9e2a7dfa2227ebe3ec36d357ef83633bd52746724d803971435c698c/mlperf_loadgen_cb-1.1.0-cp37-cp37m-manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28a0723ad3dc67da7676627d5e057fae3357561b335530961e0fd0ee90fccaa0",
          "md5": "d06c5440299d47162e7c30e361572b72",
          "sha256": "2477c72d5147c742a48cb989da2a1a3a3340db7d030a682275dd0e8494e0ee56"
        },
        "downloads": -1,
        "filename": "mlperf_loadgen_cb-1.1.0-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "d06c5440299d47162e7c30e361572b72",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 4004821,
        "upload_time": "2022-03-18T02:46:05",
        "upload_time_iso_8601": "2022-03-18T02:46:05.712236Z",
        "url": "https://files.pythonhosted.org/packages/28/a0/723ad3dc67da7676627d5e057fae3357561b335530961e0fd0ee90fccaa0/mlperf_loadgen_cb-1.1.0-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cce5480a9e2a7dfa2227ebe3ec36d357ef83633bd52746724d803971435c698c",
        "md5": "e65f66539f6c6f7d1cb7a2d773cb993d",
        "sha256": "fe004c755b17e4388fdae7a4b8307cb16f6952b5302c1a506f0f4780318c106b"
      },
      "downloads": -1,
      "filename": "mlperf_loadgen_cb-1.1.0-cp37-cp37m-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "e65f66539f6c6f7d1cb7a2d773cb993d",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": null,
      "size": 4004823,
      "upload_time": "2022-03-18T02:22:03",
      "upload_time_iso_8601": "2022-03-18T02:22:03.994987Z",
      "url": "https://files.pythonhosted.org/packages/cc/e5/480a9e2a7dfa2227ebe3ec36d357ef83633bd52746724d803971435c698c/mlperf_loadgen_cb-1.1.0-cp37-cp37m-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "28a0723ad3dc67da7676627d5e057fae3357561b335530961e0fd0ee90fccaa0",
        "md5": "d06c5440299d47162e7c30e361572b72",
        "sha256": "2477c72d5147c742a48cb989da2a1a3a3340db7d030a682275dd0e8494e0ee56"
      },
      "downloads": -1,
      "filename": "mlperf_loadgen_cb-1.1.0-cp37-cp37m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "d06c5440299d47162e7c30e361572b72",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": null,
      "size": 4004821,
      "upload_time": "2022-03-18T02:46:05",
      "upload_time_iso_8601": "2022-03-18T02:46:05.712236Z",
      "url": "https://files.pythonhosted.org/packages/28/a0/723ad3dc67da7676627d5e057fae3357561b335530961e0fd0ee90fccaa0/mlperf_loadgen_cb-1.1.0-cp37-cp37m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}