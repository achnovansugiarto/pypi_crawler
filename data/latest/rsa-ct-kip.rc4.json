{
  "info": {
    "author": "Daniel Lenski",
    "author_email": "dlenski@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nWhat is this for?\n=================\n\nIf you need to use an [RSA SecurID](//en.wikipedia.org/wiki/RSA_SecurID) software token\nto generate [one-time passwords](//en.wikipedia.org/wiki/One-time_password), and\nhave been given an activation code and a URL like\n`https://XXX.com:443/ctkip/services/CtkipService`, this software will allow you to\nprovision the token and save it in a format that you can use with\n[stoken](//github.com/cernekee/stoken).\n\nIf you use the RSA's official software (RSA SecurID) to provision the\ntoken, it will obscure the token seed to prevent you from copying it\nto another computer:\n\n![\\\"Import from Web\\\" dialog in RSA SecurID for Windows](https://gitlab.com/southgate/apps/softtoken/rsa_ct_kip/-/raw/master/Import_from_Web_in_RSA_SecurID.png)\n\nWhat is this Fork?\n==================\nThis repo has been forked from [https://github.com/dlenski/rsa_ct_kip](github.com/dlenski/rsa_ct_kip) purely for the purpose of publishing to PyPi.\n\nThis fork can be found here: [https://gitlab.com/southgate/apps/softtoken/rsa_ct_kip](gitlab.com/southgate/apps/softtoken/rsa_ct_kip)\n\nWhat is this Fork?\n==================\nThis repo has been forked from [https://github.com/dlenski/rsa_ct_kip](github.com/dlenski/rsa_ct_kip) purely for the purpose of publishing to PyPi.\n\nThis fork can be found here: [https://gitlab.com/southgate/apps/softtoken/rsa_ct_kip](gitlab.com/southgate/apps/softtoken/rsa_ct_kip)\n\nRequirements\n============\n\nClient needs Python **3.x**, PyCryptoDome, and requests (which will be automatically installed with `pip`). [stoken](//github.com/cernekee/stoken) is needed to save the resulting tokens in a usable format. Running the [fake server](#fake-server) requires Flask as well.\n\nInstall with `pip3` to automatically fetch Python dependencies. (Note that on most systems, `pip` invokes the Python 2.x version, while `pip3` invokes the Python 3.x version.)\n\n```\n# Install latest version\n$ pip3 install rsa_ct_kip\n\n# Install a specific version\n$ pip3 install rsa_ct_kip==0.1\n```\n\nProvision token using client\n============================\n\nProvide the client with the activation URL and activation code\n(usually 12 digits), and a file in which to save the token template.\nIt will communicate with the RSA CT-KIP server and provision a token,\nthen attempt to call `stoken` to convert the token to XML/.sdtid format:\n\n```\n$ rsa_ct_kip https://server.company.com:443/ctkip/services/CtkipService ACTIVATION_CODE /tmp/test.sdtid\nSending ClientHello request to server...\nReceived ServerHello response with server nonce (R_S = 28198dbe2c18a00335179cc5bb4eff3a) and 1024-bit RSA public key\nGenerated client nonce (R_C = 12bec1a6f4d09470986b485561c4d2b5)\nSending ServerFinished request to server, with encrypted client nonce...\nMAC verified (0f103bc63a8819ffdbee657d042144f6)\nReceived ServerFinished response with token information:\n  Service ID: RSA CT-KIP\n  Key ID: 838999658504\n  Token ID: 838999658504\n  Token User:\n  Expiration date: 2020-01-23T00:00:00+00:00\n  OTP mode: 8 Decimal, every 60 seconds\n  Token seed: 30ade1be20b3867d967bd2927c8eb0ca\nSaved token in XML/.sdtid format to /tmp/test.sdtid\n```\n\nIf `stoken` is not installed in your path, or fails to execute\nsuccessfully, then a template file will be left behind instead.\nConvert the template output to an RSA SecurID token in XML format with\na working copy of `stoken`, as instructed:\n\n```\n$ stoken export --random --sdtid --template=template.xml > 838999658504.sdtid\n```\n\nFake server\n===========\n\nThe server (invoked with `python3 -m rsa_ct_kip.fakeserver`) mimics a \"real\" RSA CT-KIP server and can\nbe used for interoperability testing with a \"real\" RSA SecurID client.\nIt accepts the requests sent by the client software at two different\npaths: `/` for laziness, and `/ctkip/services/CtkipService`\nin case any real client hard-codes this path.\n\nIt provisions tokens with randomly-generated 12-digit IDs, which it does\nnot retain. Official RSA SecurID clients for Windows and Android have\nbeen verified to connect to it, and provision tokens from its output.\n\nThe server can run either via HTTP or HTTPS. For HTTPS, create a\n`server.pem` file in the same directory. It must contain a trusted,\nsigned certificate in order for the RSA SecurID app to connect to it.\n\nThe package also includes `rsaprivkey.pem`, used by the fake server. This the RSA private key used for token\ngeneration, and shouldn't need to be modified for testing\npurposes. (The one included is a 1024-bit key with modulus 65537,\nsimilar to what seem to be used by the \"real\" RSA CT-KIP server).\n\nProtocol\n========\n\nThe protocol used here is allegedly documented in the [RFC4758](//tools.ietf.org/html/rfc4758) \"draft standard\".\nThere are numerous problems with this protocol:\n\n* The draft RFC is convoluted, overly-complex, and unclear. It's _obviously_ an attempt to describe\n  the operation of an existing program rather than to design a useful protocol.\n* The only \"existing implementations\" are in RSA's closed-source software. I use scare quotes because\n  the actual implementations [use algorithms that differ in several ways](//github.com/cernekee/stoken/issues/27#issuecomment-456522178),\n  making it impossible to interoperate without reverse-engineering.\n* The exchange is wrapped in several unnecessary layers of base64+XML+SOAP terriblenessâ€¦ but the official\n  RSA clients _don't really parse XML_: they just pretend to, and get confused by whitespace differences\n  and similar trivialities.\n* The protocol appears to be trying to solve the following problem,\n  \"How can a client and server agree on a long-term key (the token\n  secret) in such a way that if the exchange is [MITM](https://en.wikipedia.org/wiki/Man-in-the-middle_attack)ed,\n  they can't arrive at the same long-term key?\" There are numerous things that make this scheme impractical and\n  confusing and unmaintable, but the icing on the cake is that the official clients don't even give a usefully\n  distinctive error message when they **are** being MITMed.\n\nDear RSA: This is one of the most insanely idiotic protocols I have ever seen. At no point in its rambling,\nincoherent design is it even close to serving a rational purpose. Everyone involved in reverse\nengineering it is now dumber for having studied it. [I award you no points, and may God have mercy on your\nsouls](https://www.youtube.com/watch?v=LQCU36pkH7c).\n\nCredits\n=======\n\n* [@cemeyer](//github.com/cemeyer) for [kicking this off](//github.com/cernekee/stoken/issues/27)\n  and doing most of the heavy lifting, including figuring out\n  [all the mistakes](//github.com/cernekee/stoken/issues/27#issuecomment-456522178)\n  in RSA's atrociously sloppy and misleading [RFC4758](//tools.ietf.org/html/rfc4758), and writing\n  a [bug-for-bug matching `ct_kip_prf_aes` implementation](//gist.github.com/cemeyer/3293e4fcb3013c4ee2d1b6005e0561bf)\n  based on it.\n* [@rgerganov](//github.com/rgerganov) for\n  [reverse engineering the official client](//github.com/cernekee/stoken/issues/27#issuecomment-456113939) and\n  testing.\n* [@cernekee](//github.com/cernekee) for writing `stoken` in the first place, and for explaining how to\n  [convert a raw seed into a token](https://github.com/cernekee/stoken/issues/27#issuecomment-456473711).\n* Future time traveler who travels back to 2006, and convinces RSA that they are objectively bad\n  at designing protocols and should never do it for any reason whatsoever.\n\nTODO\n====\n\n* Convert raw seed into usable token _without_ invoking `stoken`?\n* Add tests: verify that `client.py` can talk to `fakeserver.py` and negotiate the same `K_TOKEN`.\n\nLicense\n=======\n\n[MIT](LICENSE.txt)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dlenski/rsa_ct_kip",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rsa-ct-kip",
    "package_url": "https://pypi.org/project/rsa-ct-kip/",
    "platform": "",
    "project_url": "https://pypi.org/project/rsa-ct-kip/",
    "project_urls": {
      "Homepage": "https://github.com/dlenski/rsa_ct_kip"
    },
    "release_url": "https://pypi.org/project/rsa-ct-kip/0.6.0/",
    "requires_dist": [
      "pycryptodome (>=3.4.7)",
      "requests (>=2.0)"
    ],
    "requires_python": "",
    "summary": "Provision an RSA SecurID token with RSA's CT-KIP protocol",
    "version": "0.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11092919,
  "releases": {
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40d33cc3368f6c91dbfe8036a45b086ff2cd1befb5f645bf559ffc6f3e997cee",
          "md5": "2c95545e1f700b565aafd9a4eb039a9d",
          "sha256": "f5bfe6d2ceddc7ad6f94f01de3ad73cb94e71f8aa123e4bc463b269a68f39f3c"
        },
        "downloads": -1,
        "filename": "rsa_ct_kip-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c95545e1f700b565aafd9a4eb039a9d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13962,
        "upload_time": "2021-08-04T19:50:45",
        "upload_time_iso_8601": "2021-08-04T19:50:45.986675Z",
        "url": "https://files.pythonhosted.org/packages/40/d3/3cc3368f6c91dbfe8036a45b086ff2cd1befb5f645bf559ffc6f3e997cee/rsa_ct_kip-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99bce673190620737b2a834d7116a0253d7f7a60487e379aa350a3ed690a4add",
          "md5": "76fada37e30816656371841b6f7a68cd",
          "sha256": "944fe07daab218d47614aae298a4f5f0aba484ec6e37967dde0a18fa23ffea2b"
        },
        "downloads": -1,
        "filename": "rsa_ct_kip-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "76fada37e30816656371841b6f7a68cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14816,
        "upload_time": "2021-08-04T19:50:47",
        "upload_time_iso_8601": "2021-08-04T19:50:47.368584Z",
        "url": "https://files.pythonhosted.org/packages/99/bc/e673190620737b2a834d7116a0253d7f7a60487e379aa350a3ed690a4add/rsa_ct_kip-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33dfb01180e9d57abed20128bd19a08a9d6f5c7769b93ec24a6d82009d497c39",
          "md5": "c2be196f069e958fb1e3591dd6d798d2",
          "sha256": "c480318d6d4ca9f818f70840eb49c0de04c699a7d9c8748732d8f21230d9926b"
        },
        "downloads": -1,
        "filename": "rsa_ct_kip-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c2be196f069e958fb1e3591dd6d798d2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14141,
        "upload_time": "2021-08-04T19:51:02",
        "upload_time_iso_8601": "2021-08-04T19:51:02.223627Z",
        "url": "https://files.pythonhosted.org/packages/33/df/b01180e9d57abed20128bd19a08a9d6f5c7769b93ec24a6d82009d497c39/rsa_ct_kip-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89a5fc93b7f2690359c34dbd7997915d05108ff1008e8d53c991e190e44f3176",
          "md5": "e91c1c8b75481cd3bfd3130fa0787cec",
          "sha256": "b78d7b95c51c074148c987f6085b7acbfa72f243790a75670e67f9668e3f6d99"
        },
        "downloads": -1,
        "filename": "rsa_ct_kip-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e91c1c8b75481cd3bfd3130fa0787cec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15133,
        "upload_time": "2021-08-04T19:51:04",
        "upload_time_iso_8601": "2021-08-04T19:51:04.093876Z",
        "url": "https://files.pythonhosted.org/packages/89/a5/fc93b7f2690359c34dbd7997915d05108ff1008e8d53c991e190e44f3176/rsa_ct_kip-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39f7452e84fbc110be674db58fe69f9216d8512edecc713ac815c881a3830981",
          "md5": "8503f206c0b6252c3e25fbb395073135",
          "sha256": "d862c2e880ed8f0da5eb99a05d0e865a0cb4e5a167685095831573347f29b98d"
        },
        "downloads": -1,
        "filename": "rsa_ct_kip-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8503f206c0b6252c3e25fbb395073135",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14285,
        "upload_time": "2021-08-04T19:51:28",
        "upload_time_iso_8601": "2021-08-04T19:51:28.462079Z",
        "url": "https://files.pythonhosted.org/packages/39/f7/452e84fbc110be674db58fe69f9216d8512edecc713ac815c881a3830981/rsa_ct_kip-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "904ca458b510df911c087882c421190caae24007548777529361fb37f1ac88b7",
          "md5": "6e6272c836741769a039a3cfd49fb68d",
          "sha256": "e73ff5977cd3a115dfd20056e5e0f26879a3a3e2806f1aa515e3877580c1a92e"
        },
        "downloads": -1,
        "filename": "rsa_ct_kip-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6e6272c836741769a039a3cfd49fb68d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15349,
        "upload_time": "2021-08-04T19:51:29",
        "upload_time_iso_8601": "2021-08-04T19:51:29.663002Z",
        "url": "https://files.pythonhosted.org/packages/90/4c/a458b510df911c087882c421190caae24007548777529361fb37f1ac88b7/rsa_ct_kip-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "edb11e21eced1e0c39b176fdfef30baec8bbbe244ad85d61d5171e97ab1a2d3e",
          "md5": "95144fc3767bef8c917382a27c724d54",
          "sha256": "934324f3809b42a10bf129a546a24db89d4ca89d4330192cdca7bb9e661234ca"
        },
        "downloads": -1,
        "filename": "rsa_ct_kip-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "95144fc3767bef8c917382a27c724d54",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15177,
        "upload_time": "2021-08-04T19:51:49",
        "upload_time_iso_8601": "2021-08-04T19:51:49.184409Z",
        "url": "https://files.pythonhosted.org/packages/ed/b1/1e21eced1e0c39b176fdfef30baec8bbbe244ad85d61d5171e97ab1a2d3e/rsa_ct_kip-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd0d05c7eb950f9c9bb34074fde7323d3a9bf0381d035af0e11bb648068916f5",
          "md5": "c2fc5f851bdfa13581ca86429fe83107",
          "sha256": "b01e0029e45c161d0e837002c6295403b404f9fa02851d74339419926950d4cd"
        },
        "downloads": -1,
        "filename": "rsa_ct_kip-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c2fc5f851bdfa13581ca86429fe83107",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16224,
        "upload_time": "2021-08-04T19:51:50",
        "upload_time_iso_8601": "2021-08-04T19:51:50.791110Z",
        "url": "https://files.pythonhosted.org/packages/cd/0d/05c7eb950f9c9bb34074fde7323d3a9bf0381d035af0e11bb648068916f5/rsa_ct_kip-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "edb11e21eced1e0c39b176fdfef30baec8bbbe244ad85d61d5171e97ab1a2d3e",
        "md5": "95144fc3767bef8c917382a27c724d54",
        "sha256": "934324f3809b42a10bf129a546a24db89d4ca89d4330192cdca7bb9e661234ca"
      },
      "downloads": -1,
      "filename": "rsa_ct_kip-0.6.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "95144fc3767bef8c917382a27c724d54",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15177,
      "upload_time": "2021-08-04T19:51:49",
      "upload_time_iso_8601": "2021-08-04T19:51:49.184409Z",
      "url": "https://files.pythonhosted.org/packages/ed/b1/1e21eced1e0c39b176fdfef30baec8bbbe244ad85d61d5171e97ab1a2d3e/rsa_ct_kip-0.6.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd0d05c7eb950f9c9bb34074fde7323d3a9bf0381d035af0e11bb648068916f5",
        "md5": "c2fc5f851bdfa13581ca86429fe83107",
        "sha256": "b01e0029e45c161d0e837002c6295403b404f9fa02851d74339419926950d4cd"
      },
      "downloads": -1,
      "filename": "rsa_ct_kip-0.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c2fc5f851bdfa13581ca86429fe83107",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16224,
      "upload_time": "2021-08-04T19:51:50",
      "upload_time_iso_8601": "2021-08-04T19:51:50.791110Z",
      "url": "https://files.pythonhosted.org/packages/cd/0d/05c7eb950f9c9bb34074fde7323d3a9bf0381d035af0e11bb648068916f5/rsa_ct_kip-0.6.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}