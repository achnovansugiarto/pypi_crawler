{
  "info": {
    "author": "Tariq A. Hassan",
    "author_email": "laterallattice@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Financial and Insurance Industry",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "EasyMoney\r\n=========\r\n\r\nOverview\r\n~~~~~~~~\r\n\r\nProject Summary\r\n'''''''''''''''\r\n\r\nThis package is primarily intended to be used in the domain of Data Science to simplify\r\nthe process of analysing data sets which contain money information. Often, the financial information\r\nwithin, and very often between, data sets is separated in time (inflation), currency (conversion)\r\nas well as the ways in which these sources refer to the currency being used (e.g., country codes vs. currency codes).\r\nConventionally, this has required handcrafting a solution to control for these differences on a case-by-case basis.\r\nEasyMoney is intended to streamline this process to make comparisons across these dimensions\r\nextremely simple and straightforward.\r\n\r\n\r\nFeature Summary\r\n'''''''''''''''\r\n\r\n-  Computing Inflation\r\n-  Currency Conversion\r\n-  Adjusting a given currency for Inflation\r\n-  'Normalizing' a currency, i.e., adjust for inflation and then convert\r\n   to a base currency.\r\n-  Relating ISO Alpha2/3 Country Codes, Currency Codes as well as a\r\n   Region's Name to one another.\r\n-  This tool automatically obtains the latest inflation and\r\n   exchange rate information from online databases.\r\n\r\n**NOTICE: THIS TOOL IS FOR INFORMATION PURPOSES ONLY.**\r\n\r\n--------------\r\n\r\nDependencies\r\n~~~~~~~~~~~~\r\n\r\nEasyMoney requires: `numpy <http://www.numpy.org>`__,\r\n`pandas <http://pandas.pydata.org>`__,\r\n`pycountry <https://pypi.python.org/pypi/pycountry>`__,\r\n`requests <http://docs.python-requests.org/en/master/>`__ and\r\n`wbdata <https://github.com/OliverSherouse/wbdata>`__\\ :superscript:`†`.\r\n\r\n--------------\r\n\r\nInstallation\r\n~~~~~~~~~~~~\r\n\r\nPython Package Index:\r\n\r\n.. code:: bash\r\n\r\n    $ pip install easymoney\r\n\r\nLatest Build:\r\n\r\n.. code:: bash\r\n\r\n    $ pip install git+git://github.com/TariqAHassan/EasyMoney@master\r\n\r\nEasyMoney is compatible with Python 2.7 and 3.3+.\r\n\r\n--------------\r\n\r\nExamples\r\n~~~~~~~~\r\n\r\nImport the tool\r\n'''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    from easymoney.money import EasyPeasy\r\n\r\nCreate an instance of the EasyPeasy Class\r\n'''''''''''''''''''''''''''''''''''''''''\r\n\r\nThe standard way to do this is as follows:\r\n\r\n.. code:: python\r\n\r\n    ep = EasyPeasy()\r\n\r\nHowever, `fuzzy searching <https://github.com/seatgeek/fuzzywuzzy>`__\r\ncan also easily be enabled.\r\n\r\n.. code:: python\r\n\r\n    ep = EasyPeasy(fuzzy_threshold=True)\r\n\r\nPrototypical Conversion Problems\r\n''''''''''''''''''''''''''''''''\r\n\r\n1. Currency Converter\r\n'''''''''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    ep.currency_converter(amount=100000, from_currency=\"USD\", to_currency=\"EUR\", pretty_print=True)\r\n\r\n    # 94,553.71 EUR\r\n\r\n2. Adjust for Inflation and Convert to a base currency\r\n''''''''''''''''''''''''''''''''''''''''''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    ep.normalize(amount=100000, region=\"CA\", from_year=2010, to_year=\"latest\", pretty_print=True)\r\n\r\n    # 76,357.51 EUR\r\n\r\n3. Convert Currency in a more Natural Way\r\n'''''''''''''''''''''''''''''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    ep.currency_converter(amount=100, from_currency=\"Canada\", to_currency=\"Ireland\", pretty_print=True)\r\n\r\n    # 70.26 EUR\r\n\r\nHandling Common Currencies\r\n''''''''''''''''''''''''''\r\n\r\n1. Currency Conversion\r\n''''''''''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    ep.currency_converter(amount=100, from_currency=\"France\", to_currency=\"Germany\", pretty_print=True)\r\n\r\n    # 100.00 EUR\r\n\r\nEasyMoney understands that these two nations share a common currency.\r\n\r\n2. Normalization\r\n''''''''''''''''\r\n\r\n.. code:: python\r\n\r\n    ep.normalize(amount=100, region=\"France\", from_year=2010, to_year=\"latest\", base_currency=\"USD\", pretty_print=True)\r\n\r\n    # 111.67 USD\r\n\r\n.. code:: python\r\n\r\n    ep.normalize(amount=100, region=\"Germany\", from_year=2010, to_year=\"latest\", base_currency=\"USD\", pretty_print=True)\r\n\r\n    # 113.06 USD\r\n\r\nEasyMoney also understands that, while these two nations may share a\r\ncommon currency, the rate of inflation in these regions could differ.\r\n\r\nRegion Information\r\n''''''''''''''''''\r\n\r\nEasyPeasy's ``region_map()`` method exposes some of the functionality\r\nfrom the ``pycountries`` package in a streamlined manner.\r\n\r\n.. code:: python\r\n\r\n    ep.region_map('GB', map_to='alpha_3')\r\n\r\n    # GBR\r\n\r\n.. code:: python\r\n\r\n    ep.region_map('GB', map_to='currency_alpha_3')\r\n\r\n    # GBP\r\n\r\nIf fuzzy searching is enabled, the search term does not have to exactly\r\nmatch those stored in the databases cached by an ``EasyPeasy`` instance.\r\n\r\nFor example, it is possible to find the ISO Alpha 2 country code for\r\n'Germany' by passing 'German'.\r\n\r\n.. code:: python\r\n\r\n    ep.region_map('German', map_to='alpha_2')\r\n\r\n    # DE\r\n\r\nOptions\r\n'''''''\r\n\r\nIt's easy to explore the terminology understood by ``EasyPeasy``, as\r\nwell as the dates for which data is available.\r\n\r\n.. code:: python\r\n\r\n    ep.options()\r\n\r\n+---------+-------+-------+----------+------------+-------------------+-------------------+\r\n| Region  | Alpha | Alpha | Currenci | InflationD | ExchangeDates     | Overlap           |\r\n|         | 2     | 3     | es       | ates       |                   |                   |\r\n+=========+=======+=======+==========+============+===================+===================+\r\n| Austral | AU    | AUS   | AUD      | [1960,     | [04/01/1999,      | [04/01/1999,      |\r\n| ia      |       |       |          | 2015]      | 29/11/2016]       | 31/12/2015]       |\r\n+---------+-------+-------+----------+------------+-------------------+-------------------+\r\n| Austria | AT    | AUT   | EUR      | [1960,     | [04/01/1999,      | [04/01/1999,      |\r\n|         |       |       |          | 2015]      | 29/11/2016]       | 31/12/2015]       |\r\n+---------+-------+-------+----------+------------+-------------------+-------------------+\r\n| Belgium | BE    | BEL   | EUR      | [1960,     | [04/01/1999,      | [04/01/1999,      |\r\n|         |       |       |          | 2015]      | 29/11/2016]       | 31/12/2015]       |\r\n+---------+-------+-------+----------+------------+-------------------+-------------------+\r\n| ...     | ...   | ...   | ...      | ...        | ...               | ...               |\r\n+---------+-------+-------+----------+------------+-------------------+-------------------+\r\n\r\nAbove, the 'InflationDates' and 'ExchangeDates' columns provide the\r\nrange of dates for which inflation and exchange rate information is\r\navailable, respectively. Additionally, all dates for which data is\r\navailable can be show by setting the ``range_table_dates`` parameter to\r\n``False``. The 'Overlap' column shows the range of dates shared by the\r\n'InflationDates' and 'ExchangeDates' columns.\r\n\r\n--------------\r\n\r\nLicense\r\n~~~~~~~~~\r\n\r\nThis software is provided under a BSD License.\r\n\r\n--------------\r\n\r\nResources\r\n~~~~~~~~~\r\n\r\nIndicators used:\r\n\r\n1. `Consumer price index (2010 =\r\n   100) <http://data.worldbank.org/indicator/FP.CPI.TOTL>`__\r\n\r\n   -  Source: International Monetary Fund (IMF), International Financial\r\n      Statistics.\r\n\r\n      -  Notes:\r\n\r\n         1. All inflation-related results obtained from easymoney\r\n            (including, but not necessarily limited to, inflation rate\r\n            and normalization) are the result of calculations based on\r\n            IMF data. These results do not constitute a direct reporting\r\n            of IMF-provided data.\r\n\r\n2. `Euro foreign exchange reference rates - European Central\r\n   Bank <https://www.ecb.europa.eu/stats/exchange/eurofxref/html/index.en.html>`__\r\n\r\n   -  Source: European Central Bank (ECB).\r\n\r\n      -  Notes:\r\n\r\n         1. The ECB data used here can be obtained directly from the\r\n            link provided above.\r\n         2. Rates are updated by the ECB around 16:00 CET.\r\n         3. The ECB states, clearly, that usage of this data for\r\n            transaction purposes is strongly discouraged. This sentiment\r\n            is echoed here; as stated above, **this tool is for\r\n            information purposes only**.\r\n         4. All exchange rate-related results obtained from easymoney\r\n            (including, but not necessarily limited to, currency\r\n            conversion and normalization) are the result of calculations\r\n            based on ECB data. These results do not constitute a direct\r\n            reporting of ECB-provided data.\r\n\r\n:superscript:`†` Sherouse, Oliver (2014). Wbdata. Arlington, VA.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/TariqAHassan/EasyMoney/archive/v1.5.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/TariqAHassan/EasyMoney.git",
    "keywords": "economics,finance,inflation,currency converter,data analysis,data science",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "easymoney",
    "package_url": "https://pypi.org/project/easymoney/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/easymoney/",
    "project_urls": {
      "Download": "https://github.com/TariqAHassan/EasyMoney/archive/v1.5.0.tar.gz",
      "Homepage": "https://github.com/TariqAHassan/EasyMoney.git"
    },
    "release_url": "https://pypi.org/project/easymoney/1.5.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Data Science Tools for Monetary Information and Conversions.",
    "version": "1.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2816668,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34aca076dcce9969225f2c4fe7990dfaa7a1d47fb3ed584399e44fbb272b601f",
          "md5": "9dc519b6d3d99456fce8a5c62342e8b6",
          "sha256": "5423fba175020be1e0d762d0355a58611bbec68c69af1f20ad87039d9095036c"
        },
        "downloads": -1,
        "filename": "easymoney-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9dc519b6d3d99456fce8a5c62342e8b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39197,
        "upload_time": "2016-09-13T19:55:21",
        "upload_time_iso_8601": "2016-09-13T19:55:21.221578Z",
        "url": "https://files.pythonhosted.org/packages/34/ac/a076dcce9969225f2c4fe7990dfaa7a1d47fb3ed584399e44fbb272b601f/easymoney-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90b57df93f96c9d3f7fa0b057d3bd90b72c595ce49d4bc50ace535cf8743841c",
          "md5": "65ffd121e7fd1650f0bc53a4d58f7b24",
          "sha256": "2c77b777bded50a9712cbea42294e616ea501eac38c38251e90bdc92b8562c1b"
        },
        "downloads": -1,
        "filename": "easymoney-1.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "65ffd121e7fd1650f0bc53a4d58f7b24",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30804,
        "upload_time": "2016-11-30T21:54:52",
        "upload_time_iso_8601": "2016-11-30T21:54:52.835875Z",
        "url": "https://files.pythonhosted.org/packages/90/b5/7df93f96c9d3f7fa0b057d3bd90b72c595ce49d4bc50ace535cf8743841c/easymoney-1.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "90b57df93f96c9d3f7fa0b057d3bd90b72c595ce49d4bc50ace535cf8743841c",
        "md5": "65ffd121e7fd1650f0bc53a4d58f7b24",
        "sha256": "2c77b777bded50a9712cbea42294e616ea501eac38c38251e90bdc92b8562c1b"
      },
      "downloads": -1,
      "filename": "easymoney-1.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "65ffd121e7fd1650f0bc53a4d58f7b24",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 30804,
      "upload_time": "2016-11-30T21:54:52",
      "upload_time_iso_8601": "2016-11-30T21:54:52.835875Z",
      "url": "https://files.pythonhosted.org/packages/90/b5/7df93f96c9d3f7fa0b057d3bd90b72c595ce49d4bc50ace535cf8743841c/easymoney-1.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}