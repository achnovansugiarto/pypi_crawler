{
  "info": {
    "author": "Archisman Chakraborti",
    "author_email": "archismanninja@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Education",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pyundergraduate\nThis is a module regarding Numerical Analysis with Python comprising the syllabus covered at the undergraduate level in Indian colleges.\n# Creator \nArchisman Chakraborti <br>\nSt. Xavier's College, Kolkata, India\n\n# pyundergraduate\nThis module is designed on some well known numerical techniques in Python which are commonly taught at the undergraduate college level to students who have taken a course in Computational Physics and Mathematics.\n\n---\n## <b>Current version contents:</b>\n- <b>Differentiation \n    - Finite differenc</b>es method\n      - Forward differences\n      - Backward differences\n      - Central Differences\n    \n- <b>Finding roots of linear and non linear equations</b>\n  - Newton Raphson method\n  - Secant Method\n- <b>Numerical Integration</b>\n  - Trapezoidal Rule\n  - Simpsons one-third rule\n  - Simpsons three-eighth rule\n  - Composite Integration Rules\n    - Composite Trapezoidal Rule\n    - Composite Simpson's Rule(Modified Simpsons' one third rule)\n- <b>Interpolation</b>\n  - Lagrange Interpolation with unequal intervals\n  - Newton Forward Interpolation\n- <b>Orinary Differential equation Solvers</b>\n  - Euler Method for solving ODEs upto 3rd order.\n  - Modified Euler method(Runge Kutta 2 Method) for solving ODEs upto 2nd order.\n  - Runge Kutta 4 Method for solving ODEs upto 2nd Order.\n\n---\n# Example Code and Techniques\n\n## Differentiation \n```python\n# Finite differences method\nimport numpy as np\n\nf = lambda x: np.sin(x)\ng = lambda x: np.cos(x)\nx_pts = np.linspace(0, 10, 100000)\n\nh = .0005\n\n# Forward differences object\ndifferentiator1_f = FiniteDiff(func= f, h=h)\n\n\nfirst_deriv_f = differentiator1_f.Forward_First_Deriv() \nsecond_deriv_f = differentiator1_f.Forward_Second_Deriv() \nthird_deriv_f = differentiator1_f.Forward_Third_Deriv() \nfourth_deriv_f = differentiator1_f.Forward_Fourth_Deriv() \n\n# Alternately for 'nth' order\n# Continue using the 'first deriv' method for consecutive derivatives.\n\n# First derivative\ndifferentiator1_f = FiniteDiff(func= f, h=h)\nfirst_deriv_f = differentiator1_f.Forward_First_Deriv() \n\n# Second derivative\ndifferentiator2_f = FiniteDiff(func= first_deriv_f, h=h)\nsecond_deriv_f = differentiator2_f.Forward_First_Deriv()\n\n# Third derivative\ndifferentiator3_f = FiniteDiff(func= second_deriv_f, h=h)\nthird_deriv_f = differentiator3_f.Forward_First_Deriv()\n\n# Fourth derivative\ndifferentiator4_f = FiniteDiff(func= third_deriv_f, h=h)\nfourth_deriv_f = differentiator4_f.Forward_First_Deriv()\n```\nSimilarly, for the central difference and the Backward Difference Rules.\n\n---\n## Integration\n```python\nimport numpy as np\nf = lambda x: x*np.sin(x)\nlowerlim = 0\nupperlim = 10\nintervals = 1000\n\n# Trapezoidal rule\ntrap_ans = Integration_trapezoidal(f=f, lower_lim=lowerlim, upper_lim=upperlim, intervals=intervals)\n\n# Simpsons one third rule\nsimp_one_third_ans = Simpson_one_third(f=f, lower_lim=lowerlim, upper_lim=upperlim, intervals=intervals)\n\n# Simpsons three eight rule\nsimp_three_eight_ans = Simpson_three_eighth(f=f, lower_lim=lowerlim, upper_lim=upperlim, intervals=intervals + 2)\n\n# Composite rules\nintegrator = CompositeIntegration(func=f, lowerlim=lowerlim, upperlim=upperlim, intervals=intervals)\n\n## Composite Trapezoidal rule\ncomptrap_ans = integrator.Comp_Trapezoidal_Rule()\n\n## Composite Simpson's rule\ncompsimp_ans = integrator.Comp_Simpsons_Rule()\n```\n---\n## ODE Solvers\n\n### Solving a 1D ODE\n\n```python\nimport numpy as np\n\ndef dydx(y, x):\n    return 1/x\nics1 = [1, 0] # At x = 0, y = 0\n\n# Euler method solutions\ny_euler, x_euler = euler(f=dydx, ics=ics1, step_size=0.001, x1=5)\n\n# Modified euler method solutions\ny_mod, x_mod = mod_euler(f=dydx, ics=ics1, step_size=0.001, x1=5)\n\n# RK4 solutions\ny_rk4, x_rk4 = RK4_solver(f=dydx, ics=ics1, step_size=0.001, x1=5)\n```\n### Solving a 2D ODE - Equation of a damped harmonis oscillator\n```python\ndef dudt(u, x, t):  # u = dxdt\n    b = 0.2  # damping parameter\n    k = 20  # Spring constant\n    return -b*u - k*x\nics2 = [0, np.pi/50, 0] # At t=0, x = pi/50, vel = 0\n\n# Euler solutions\nu_euler, x_euler2, t_euler = euler(f = dudt, ics = ics2, step_size=0.001, x1 = 15)\n\n# Modified euler solutions\nu_modeuler, x_modeuler2, t_modeuler = mod_euler(f = dudt, ics = ics2, step_size=0.001, x1 = 15)\n\n# RK4 solutions\nu_rk4, x_rk4_2, t_rk4 = RK4_solver(f = dudt, ics = ics2, step_size=0.001, x1 = 15)\n```\n### Solving a 3rd order ODE using Euler's method\n#### RK4 and RK2 methods are under construction\n```python\ndef dvdx(v, u, y, x):\n    return 9*v - 15*u - 25*y\n\n# Here, y = dy/dx(1st derivative), v = dv/dx(second derivative)\nv, u, y, x = euler(f = dvdx, ics = [0, np.pi/50, 0, 1], step_size = 0.005, x1 = 5)\n```\n---\n## Finding root of linear, non linear and transcendal equations numerically.\n```python\ndef func1(x):\n    return x**2 + 4*x + 4\ndef deriv1(x):\n    return 2*x + 2\n\n# Secant method\nroot_finder = SecantMethod(func = func1, guess1=-5, guess2 = -3, iterations=20000, tolerance=0.00000001)\nprint(f'Secant root = {root_finder.solve()}')\nrequired_iterations = root_finder.required_iterations\nprint(required_iterations\n\n# Newton Raphson Method\nsol_newton = NewtonRaphson(f = func1, f_deriv= deriv1, x0 = 1, error = 0.0000000001, iterations=20000)\n```\n---\n## Interpolation\n\n```python\n# Lagrange Interpolation\ndef func(x):\n        return np.sin(x)\n\n# xlist doesn't need to be evenly spaced\nx_list = [1, 2, 2.5, 3.7,  4, 4.6, 5, 6, 6.7, 7.2, 8.5, 9]\ny_list = func(x_list)\n\ninterpolator = LagrangeInterp(x_list=x_list, y_list=y_list\n\nf = interpolator.GetFunc()  # The interpolatin function\n\n\n## Lagrange Interpolation points\nx_pts = np.linspace(0, 10, 1000)\ny_pts = f(x_pts)\n\n\n# Newton Forward Interpolation\nx = np.arange(-5, 6, 1)\ny = np.sin(x)\n\nx_pts_NF = np.linspace(-5, 5, 1000)\ny_pts_NF = NewtonForward(x_list = x, y_list = y, x = x_pts)\n\nChange Log\n==========\n\n0.0.1 (12/05/2022)\n-------------------\n- First Release\n\n0.0.2 (13/05/2022)\n--------------------\nMinor Change\n\n0.0.3 (22.5.2022)\n-------------------\nMinor corrections\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ScientificArchisman/pyundergraduate",
    "keywords": "python,scince,numerical analysis,physics",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyundergraduate",
    "package_url": "https://pypi.org/project/pyundergraduate/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyundergraduate/",
    "project_urls": {
      "Homepage": "https://github.com/ScientificArchisman/pyundergraduate"
    },
    "release_url": "https://pypi.org/project/pyundergraduate/0.0.3/",
    "requires_dist": [
      "numpy",
      "scipy",
      "matplotlib",
      "jupyter",
      "scienceplots"
    ],
    "requires_python": "",
    "summary": "A package for numerical analysis with python",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13891899,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b86fdcd371095cabd9c75abe716e5c35af44e78a84e925b112307ac7f0ba5ee4",
          "md5": "ef428cb103f8b4394fd4ec66887848ce",
          "sha256": "05f8d5ad7e820aae846721acc84c8b2d5d3f76b70820b66f40e08e55fb7956dc"
        },
        "downloads": -1,
        "filename": "pyundergraduate-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef428cb103f8b4394fd4ec66887848ce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16475,
        "upload_time": "2022-05-12T03:26:34",
        "upload_time_iso_8601": "2022-05-12T03:26:34.815976Z",
        "url": "https://files.pythonhosted.org/packages/b8/6f/dcd371095cabd9c75abe716e5c35af44e78a84e925b112307ac7f0ba5ee4/pyundergraduate-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7563ce708180f61bb0482fe12a36231115599bb7a8812947f41529b9e2980bcc",
          "md5": "e8b240385f1418135d657600c86f4791",
          "sha256": "df4abff8a2211a4b2cea360f6776eaf20b92352400a6cdbb001acc13fa22bf11"
        },
        "downloads": -1,
        "filename": "pyundergraduate-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e8b240385f1418135d657600c86f4791",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16131,
        "upload_time": "2022-05-12T03:26:36",
        "upload_time_iso_8601": "2022-05-12T03:26:36.903097Z",
        "url": "https://files.pythonhosted.org/packages/75/63/ce708180f61bb0482fe12a36231115599bb7a8812947f41529b9e2980bcc/pyundergraduate-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "840a1b4477a640a3bc9b22262587cd48e7c700ff775ed654b5ba6f6c2fd1f4fc",
          "md5": "9d422a1d3e21a5245d5bcc22a00c19ce",
          "sha256": "90ff14e17dd5d6f256cb56e0d6144a19e7c938048801b0840310cd91970ef0cc"
        },
        "downloads": -1,
        "filename": "pyundergraduate-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d422a1d3e21a5245d5bcc22a00c19ce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16509,
        "upload_time": "2022-05-22T10:55:01",
        "upload_time_iso_8601": "2022-05-22T10:55:01.665886Z",
        "url": "https://files.pythonhosted.org/packages/84/0a/1b4477a640a3bc9b22262587cd48e7c700ff775ed654b5ba6f6c2fd1f4fc/pyundergraduate-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8acc7402f1b610f989b54c385704a3dd01496d54d3c0cc3467719637bb9407b",
          "md5": "191bee665c0d1f4d000fc334d0f6d50b",
          "sha256": "6bfff61a55166bc6ad90f4668dbb58a6cb7f35cbd02b961e970a1198ccad8c72"
        },
        "downloads": -1,
        "filename": "pyundergraduate-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "191bee665c0d1f4d000fc334d0f6d50b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16191,
        "upload_time": "2022-05-22T10:55:04",
        "upload_time_iso_8601": "2022-05-22T10:55:04.034406Z",
        "url": "https://files.pythonhosted.org/packages/e8/ac/c7402f1b610f989b54c385704a3dd01496d54d3c0cc3467719637bb9407b/pyundergraduate-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "840a1b4477a640a3bc9b22262587cd48e7c700ff775ed654b5ba6f6c2fd1f4fc",
        "md5": "9d422a1d3e21a5245d5bcc22a00c19ce",
        "sha256": "90ff14e17dd5d6f256cb56e0d6144a19e7c938048801b0840310cd91970ef0cc"
      },
      "downloads": -1,
      "filename": "pyundergraduate-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9d422a1d3e21a5245d5bcc22a00c19ce",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16509,
      "upload_time": "2022-05-22T10:55:01",
      "upload_time_iso_8601": "2022-05-22T10:55:01.665886Z",
      "url": "https://files.pythonhosted.org/packages/84/0a/1b4477a640a3bc9b22262587cd48e7c700ff775ed654b5ba6f6c2fd1f4fc/pyundergraduate-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e8acc7402f1b610f989b54c385704a3dd01496d54d3c0cc3467719637bb9407b",
        "md5": "191bee665c0d1f4d000fc334d0f6d50b",
        "sha256": "6bfff61a55166bc6ad90f4668dbb58a6cb7f35cbd02b961e970a1198ccad8c72"
      },
      "downloads": -1,
      "filename": "pyundergraduate-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "191bee665c0d1f4d000fc334d0f6d50b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16191,
      "upload_time": "2022-05-22T10:55:04",
      "upload_time_iso_8601": "2022-05-22T10:55:04.034406Z",
      "url": "https://files.pythonhosted.org/packages/e8/ac/c7402f1b610f989b54c385704a3dd01496d54d3c0cc3467719637bb9407b/pyundergraduate-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}