{
  "info": {
    "author": "kuri_pome",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11"
    ],
    "description": "# tkblock  \r\n\r\ntkblock is a library to support easy placement of tkinter widgets.  \r\n\r\nThe method of placing widgets uses the old HTML/CSS idea of table layout.    \r\n\r\n\r\n\r\n\r\n\r\n## Why we made it.\r\n\r\ntkinter has three functions for placing widgets: place, grid, and pack.  \r\n\r\nHowever, if you are not familiar with tkinter, it is difficult to distinguish between these three functions.  \r\n\r\nAt first, you may wonder which function to use for placement.  \r\n\r\nI have often heard that after struggling with this problem, while checking the functions, they often fail to place them according to the UI diagram they have designed.  \r\n\r\nAlso, it was troublesome to install Windows Form and other software on my PC, and I could not use C# at my work place.\r\n\r\nSo, I decided to create a simple GUI application in python without worrying about OS or environment such as windows or linux.\r\n\r\nAs a result, I created a library that allows you to place widgets without having to be aware of the functions to be placed in tkinter.  \r\n\r\n\r\n\r\n\r\n\r\n## Basic how to use\r\n\r\nI will explain how to use the library.  \r\n\r\n\r\n\r\n\r\n\r\n### Installing the library.\r\n\r\n\r\n\r\n```bash\r\n\r\npip install tkblock\r\n\r\n```\r\n\r\nInstall the library with.    \r\n\r\n\r\n\r\n### Import the library and tkinter.\r\n\r\n\r\n\r\nFirst, import the library.  \r\n\r\n```python\r\n\r\nimport tkinter as tk\r\n\r\nfrom tkinter import ttk\r\n\r\nfrom tkblock.block_service import BlockService\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n### Creating the root window.\r\n\r\n\r\n\r\nCreate the root window using the imported library.  \r\n\r\nWhen the root window is created, we specify the title, table width and height, and number of rows and columns.  \r\n\r\nNext, place the widget by specifying its number of rows and columns when generating the widget.  \r\n\r\n\r\n\r\n```python\r\n\r\nroot = BlockService.init(\"test\", 10, 20, 600, 400)\r\n\r\n```\r\n\r\n\r\n\r\nThe title of the application to be created by tkinter is \"test\".  \r\n\r\n10 columns  \r\n\r\n20 for the number of rows  \r\n\r\nWidth is 600  \r\n\r\nHeight is 400  \r\n\r\n\r\n\r\n<img width=\"451\" alt=\"readme_root\" src=\"https://user-images.githubusercontent.com/78261582/223762154-a69ff349-c047-4793-a3aa-108bb21b03fe.png\">\r\n\r\n\r\n\r\nThis figure shows the root window created by the above code.  \r\n\r\n\r\n\r\nNote that you need to execute the written code to make root loop.  \r\n\r\n```python\r\n\r\nroot.mainloop()\r\n\r\n```\r\n\r\n\r\n\r\n### Create a dedicated Frame.\r\n\r\n\r\n\r\nCreate a dedicated Frame on top of the root window for easy placement of the widget.  \r\n\r\n```python\r\n\r\nframe = BlockService.create_frame(\"main\")\r\n\r\n```\r\n\r\n\r\n\r\nThere are six arguments, but the only one that must be specified is the name of the Frame to be created.  \r\n\r\nIn this example, the frame name is \"main\".  \r\n\r\nThe optional arguments are as follows.  \r\n\r\n+ col: The number of columns in the frame. If not specified, it is the number of columns in the destination window. In this case, 10.  \r\n\r\n+ row: The number of rows in the frame. If not specified, it is the number of rows of the destination window. In this case, 20.  \r\n\r\n+ width: The width of the frame. If not specified, it is the width of the destination window. In this case, 600  \r\n\r\n+ height: The height of the frame. If not specified, it is the height of the destination window. In this case, it is 400  \r\n\r\n+ root: The window where the frame will be placed. If not specified, the placement destination is the root window. In this case, the root window.  \r\n\r\n\r\n\r\nBy the way, to make it easier to see the table layout during development, a canvas is created internally to draw auxiliary lines.  \r\n\r\n```python\r\n\r\nBlockService.place_frame_widget()\r\n\r\nBlockService.create_auxiliary_line()\r\n\r\n```\r\n\r\nYou can draw an auxiliary line by executing the above code.  \r\n\r\n\r\n\r\n``BlockService.place_frame_widget()``  \r\n\r\nis explained in the next section.  \r\n\r\n\r\n\r\n<img width=\"451\" alt=\"readme_frame\" src=\"https://user-images.githubusercontent.com/78261582/223762159-000cbd81-562e-4014-a8cf-8fa8a6d9d443.png\">  \r\n\r\n\r\n\r\nThe Frame shown in this figure is the base for placing the widget.  \r\n\r\n\r\n\r\n### Place the widget.\r\n\r\n\r\n\r\nThis time, we will place the simplest label.  \r\n\r\n\r\n\r\n<img width=\"451\" alt=\"readme_frame_add_layout\" src=\"https://user-images.githubusercontent.com/78261582/223762161-b42a8cfc-11a5-4561-a883-4b641364d0b6.png\">  \r\n\r\n\r\n\r\nSuppose we want to place a label here.  \r\n\r\nTo do so, we specify the coordinates as follows.  \r\n\r\n```python\r\n\r\nlabel = ttk.Label(frame, text=\"how to use\", anchor=tk.CENTER)\r\n\r\nlabel.layout = BlockService.layout(3, 6, 2, 4)\r\n\r\n```\r\n\r\nThe above code will create a \"Widget\" in the middle of the  \r\n\r\nPlace a label in a frame with the text \"how to use\" in the center of the widget.  \r\n\r\nThe label Widget has an attribute called layout with coordinates.  \r\n\r\nThe layout can be specified as (column start position, column end position, row start position, row end position).  \r\n\r\n\r\n\r\n\r\n\r\nThis code is then added to the  \r\n\r\n\r\n\r\n```python\r\n\r\nBlockService.place_frame_widget()\r\n\r\n```\r\n\r\nPlace it in front of the placed before the  \r\n\r\n```python\r\n\r\nBlockService.place_frame_widget()\r\n\r\n```\r\n\r\nplace_frame_widget is a function that places all widgets owned by the root widdow.  \r\n\r\nTherefore, it must be executed after all widgets have been created and layouts specified.  \r\n\r\n\r\n\r\n<img width=\"451\" alt=\"readme_frame_label\" src=\"https://user-images.githubusercontent.com/78261582/223762164-25d5f489-3deb-42ea-87ca-ad290635214f.png\">  \r\n\r\n\r\n\r\n\r\n\r\nThe label Widget is placed where intended, as shown in the above figure.  \r\n\r\n\r\n\r\n### Basic Finished Code.  \r\n\r\n\r\n\r\nThis is the code created so far.  \r\n\r\n\r\n\r\n```python\r\n\r\nimport tkinter as tk\r\n\r\nfrom tkinter import ttk\r\n\r\n\r\n\r\nfrom tkblock.block_service import BlockService\r\n\r\n\r\n\r\nroot = BlockService.init(\"test\", 10, 20, 600, 400)\r\n\r\nframe = BlockService.create_frame(\"test\")\r\n\r\nlabel = ttk.Label(frame, text=\"how to use\", anchor=tk.CENTER)\r\n\r\nlabel.layout = BlockService.layout(3, 6, 2, 4)\r\n\r\nBlockService.place_frame_widget()\r\n\r\nBlockService.create_auxiliary_line()\r\n\r\nroot.mainloop()\r\n\r\n```\r\n\r\n\r\n\r\nBlockService's in the tkblock library.  \r\n\r\n+ init  \r\n\r\n+ create_frame  \r\n\r\n+ layout  \r\n\r\n+ place_frame_widget  \r\n\r\nYou can easily use tkinter Widget just by using.  \r\n\r\n\r\n\r\n<img width=\"898\" alt=\"readme_layout3\" src=\"https://user-images.githubusercontent.com/78261582/225677201-75f12fa3-1021-4a15-b039-dfb3e4b1fd84.png\">\r\n\r\n\r\n\r\nIn this figure, several Widget are placed in the above basic usage.  \r\n\r\nPlease try to create an application by placing various widgets.  \r\n\r\n\r\n\r\n## About Layout padding settings\r\n\r\n\r\n\r\nFrom here, I will explain a few details about the settings.  \r\n\r\n\r\n\r\nFirst, let's talk about padding.  \r\n\r\nThis is similar to the function of padding, which is also found in html/css.  \r\n\r\n\r\n\r\n<img width=\"448\" alt=\"readme_layout1\" src=\"https://user-images.githubusercontent.com/78261582/225678501-8c33f038-0874-4b52-80d1-74e80e0332e2.png\">\r\n\r\n\r\n\r\nAs shown in the figure, the widget can be placed in the red area and the blue line gap can be set.  \r\n\r\nYou can use the margins by setting an optional argument to the layout method for that setting.  \r\n\r\n\r\n\r\n```python\r\n\r\nroot = BlockService.init(\"test_pad\", 3, 3, 600, 400)\r\n\r\nframe = BlockService.create_frame(\"test_pad\")\r\n\r\nlabel = ttk.Label(frame, text=\"how to use pad\", anchor=tk.CENTER, background=\"red\")\r\n\r\nlabel.layout = BlockService.layout(1, 2, 1, 2, pad_up=0.3, pad_down=0.3)\r\n\r\n```\r\n\r\n\r\n\r\nExecuting this code will result in the following.  \r\n\r\n\r\n\r\n<img width=\"449\" alt=\"readme_layout2\" src=\"https://user-images.githubusercontent.com/78261582/225679256-11495187-e289-45b6-8d4c-b98c58c7f3ee.png\">\r\n\r\n\r\n\r\npad_up sets the top margin.  \r\n\r\npad_down sets the bottom margin.\r\n\r\nThe value of 0.3 means that 30% of a block is used as the margin.  \r\n\r\nThere are also pad_left and pad_right.  \r\n\r\nBy setting these, fine adjustment is possible.  \r\n\r\n\r\n\r\n<img width=\"898\" alt=\"readme_layout3\" src=\"https://user-images.githubusercontent.com/78261582/225679498-887d6429-d6eb-444f-9c26-80ff6068fca7.png\">\r\n\r\n\r\n\r\nThis figure is created with Sample code.  \r\n\r\nThis is the code used when changing by 0.1, etc.  \r\n\r\n\r\n\r\n## About Dedicated Frames\r\n\r\n\r\n\r\nThe previous code explained the Layout for placing the widget.  \r\n\r\nThis time, we will explain the special Frame provided by tkblock.  \r\n\r\n\r\n\r\nThe dedicated Frame is as described so far.  \r\n\r\n\r\n\r\n```python\r\n\r\nframe = BlockService.create_frame(name)\r\n\r\n```\r\n\r\n\r\n\r\nThe Frame can be created with the following code.  \r\n\r\nThis code only allows a Frame to be placed on top of the root window.  \r\n\r\nSince it is useful to be able to use Frame in many different places, an optional argument is provided.  \r\n\r\n```\r\n\r\ncol: The number of columns that will make up the table in the newly created Frame.\r\n\r\nrow: The number of rows in the table of the newly created Frame.\r\n\r\nwidth: The width of the table structure of the newly created Frame.\r\n\r\nheight: Table structure of the new Frame to be created.\r\n\r\nroot: Window or frame or top level where the frame will be placed.\r\n\r\n```\r\n\r\nthe name of the window or frame or top level to which the frame will be placed.  \r\n\r\nThe root is the window or frame or top level where the frame will be placed.  \r\n\r\nBy specifying root, you can set the parent Frame, etc.  \r\n\r\nThe items other than ``root'' are the table structure for creating a new Frame, and if not specified, it inherits the parent's settings.  \r\n\r\nAlso, as with widgets, the layout method can be used to change the location of the Frame.  \r\n\r\nAs a test, let's place a dedicated Frame on top of the root window and a dedicated Frame on top of it.  \r\n\r\n\r\n\r\n<img width=\"447\" alt=\"readme_frame1\" src=\"https://user-images.githubusercontent.com/78261582/225680361-4f1eb045-6107-41cb-81fe-00e804ce47d2.png\">\r\n\r\n\r\n\r\n```python\r\n\r\nroot = BlockService.init(\"test_frame\", 10, 10, 600, 400)\r\n\r\nframe1 = BlockService.create_frame(\"test_frame1\", col=5, row=5)\r\n\r\nframe1.layout = BlockService.layout(1, 9, 1, 9)\r\n\r\nframe2 = BlockService.create_frame(\"test_frame2\", col=3, row=3, root=frame1)\r\n\r\nframe2.layout = BlockService.layout(1, 3, 2, 4)\r\n\r\nBlockService.place_frame_widget()\r\n\r\nBlockService.create_auxiliary_line()\r\n\r\nroot.mainloop()\r\n\r\n```\r\n\r\n\r\n\r\nIn this code, test_frame1 is placed at coordinates (1,1)(9,9) of root, and  \r\n\r\ntest_frame2 is placed at coordinates (1,2)(3,4) of test_frame1.  \r\n\r\nThe table structure of each frame is also changed.  \r\n\r\nIn this way, a dedicated Frame can be placed on top of a dedicated Frame, which is useful when you want to group Widgets together.  \r\n\r\n\r\n\r\n<img width=\"895\" alt=\"readme_frame2\" src=\"https://user-images.githubusercontent.com/78261582/225680783-c3a0a89c-62d6-4a95-bf3b-f617b3b0dfbe.png\">\r\n\r\n\r\n\r\nIn the sample, a dedicated frame is placed on top of a regular frame or on the toplevel.   \r\n\r\n\r\n\r\n## About Scrollbar Settings\r\n\r\n\r\n\r\nSo far, we have discussed how to place a Widget, how to use  \r\n\r\nFrame to place the Widget and how to make detailed adjustments to place the Widget.  \r\n\r\nThe application has a size, and the root window and Frame had height and width settings.  \r\n\r\nHowever, tkinter provides scrollbars when the specified size does not fit.  \r\n\r\nScrollbars are used in conjunction with widgets such as canvas and listbox.  \r\n\r\nTherefore, basically, widgets and scrollbars are placed side by side.  \r\n\r\nThe scrollbars can also be placed where you want them by using the layout method, but in this case, the scrollbars are placed on the right side of the widget.  \r\n\r\nIn this article, we will explain how to use this method to automatically set scrollbars on the right and bottom sides of a widget.  \r\n\r\n\r\n\r\nTo use it, simply set the scrollbar on the widget you wish to link to the scrollbar.\r\n\r\n\r\n\r\n```python\r\n\r\nscrollbar_listbox = tk.Listbox(frame)\r\n\r\nscrollbar_y = tk.Scrollbar(frame, orient=tk.VERTICAL)\r\n\r\nscrollbar_listbox.scrollbar = BlockService.scrollbar(y=scrollbar_y)\r\n\r\n```\r\n\r\n\r\n\r\nIn this case, Scrollbar is set to the attribute named scrollbar in the listbox.  \r\n\r\nBy setting it to the y-axis, you can set up a vertical scrollbar.  \r\n\r\nYou can also set scrollbars on the x-axis to set left and right scrollbars.  \r\n\r\n\r\n\r\nThe size of the scrollbar is fixed at 17px, and 17px is shaved off from the size of the widget to place it.  \r\n\r\nTherefore, when using scrollbars, the Widget will be slightly smaller.  \r\n\r\nYou can change the size of the scrollbars by setting the optional argument \"size\".  \r\n\r\n\r\n\r\n<img width=\"448\" alt=\"readme_scrollbar1\" src=\"https://user-images.githubusercontent.com/78261582/225681324-18c8a73a-047b-4704-925b-dfb66a44882b.png\">\r\n\r\n\r\n\r\nIn the above figure, 30px vertical and horizontal scrollbars are placed.\r\n\r\nThe code for this is shown below.\r\n\r\n\r\n\r\n```python\r\n\r\nroot = BlockService.init(\"test_scrollbar\", 5, 5, 600, 400)\r\n\r\nframe = BlockService.create_frame(\"test_scrollbar\")\r\n\r\nlistbox_list = tuple([str(x) for x in range(0, 100)] + [\"aabfsdgadfsgasdfkj;adsfadsj;kjfeijof\"])\r\n\r\nlistbox_var = tk.StringVar(value=listbox_list)\r\n\r\nlistbox = tk.Listbox(frame, listvariable=listbox_var)\r\n\r\nlistbox.layout = BlockService.layout(1, 2, 1, 4)\r\n\r\nscrollbar_y = tk.Scrollbar(frame, orient=tk.VERTICAL)\r\n\r\nscrollbar_x = tk.Scrollbar(frame, orient=tk.HORIZONTAL)\r\n\r\nscrollbar_y.config(command=listbox.yview)\r\n\r\nscrollbar_x.config(command=listbox.xview)\r\n\r\nlistbox.config(yscrollcommand=scrollbar_y.set)\r\n\r\nlistbox.config(xscrollcommand=scrollbar_x.set)\r\n\r\nlistbox.scrollbar = BlockService.scrollbar(y=scrollbar_y, x=scrollbar_x, size=30)\r\n\r\nBlockService.place_frame_widget()\r\n\r\nBlockService.create_auxiliary_line()\r\n\r\nroot.mainloop()\r\n\r\n```\r\n\r\n\r\n\r\nThe basic usage of the scrollbar is the same. If you want the scrollbar to be placed automatically, you can place it by linking the scrollbar to the widget.  \r\n\r\nIf you wish to manually place it anywhere you wish, simply specify the layout as you would for a normal widget.  \r\n\r\n\r\n\r\n## How to use the Menu bar\r\n\r\nOmitted since it is the same as the usage of tkinter. \r\n\r\n\r\n\r\n# Summary.  \r\n\r\nIf you are going to make a full-fledged app, I would prefer not to use this.  \r\n\r\nI think a small app would be useful.  \r\n\r\n(I'm just concerned that I haven't done much testing...)  \r\n\r\n\r\n\r\nBy the way, the code is in the Samples folder on github, so you might want to take a look at it.  \r\n\r\n\r\n\r\nWell, thank you for viewing this far.  \r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kuri-pome/tkblock",
    "keywords": "tkinter place widget easy",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tkblock",
    "package_url": "https://pypi.org/project/tkblock/",
    "platform": null,
    "project_url": "https://pypi.org/project/tkblock/",
    "project_urls": {
      "Homepage": "https://github.com/kuri-pome/tkblock"
    },
    "release_url": "https://pypi.org/project/tkblock/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "tkinter block framework",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17321453,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e4636438a6649f7a2e5a9cf1c9555a63329f5178e01338077480bcfbe36af71",
          "md5": "5f15000c5b9a9064763ab0752dbfe9fe",
          "sha256": "bb8bdcbab29442f26dbdb337feb9eb37edb8be467310560be9968884e514d788"
        },
        "downloads": -1,
        "filename": "tkblock-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f15000c5b9a9064763ab0752dbfe9fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9742,
        "upload_time": "2023-03-07T11:41:01",
        "upload_time_iso_8601": "2023-03-07T11:41:01.635009Z",
        "url": "https://files.pythonhosted.org/packages/4e/46/36438a6649f7a2e5a9cf1c9555a63329f5178e01338077480bcfbe36af71/tkblock-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8a60e64d6127f35bb3984a945fe6acd65e279c707505b6d8d97fa7f5a35c25c",
          "md5": "f9e58d1a12f0b4c10c1349af305efb41",
          "sha256": "dff93b55cfeabbe0404bc37493c97226073dfec6b75b99f076695585da06147d"
        },
        "downloads": -1,
        "filename": "tkblock-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f9e58d1a12f0b4c10c1349af305efb41",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8493,
        "upload_time": "2023-03-07T11:41:03",
        "upload_time_iso_8601": "2023-03-07T11:41:03.776692Z",
        "url": "https://files.pythonhosted.org/packages/e8/a6/0e64d6127f35bb3984a945fe6acd65e279c707505b6d8d97fa7f5a35c25c/tkblock-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b78602078f07a25d0165849be6122ba77ef9de4584e78069404a203022a44141",
          "md5": "53fbf252cb24d0ec3e0ff53623b1237f",
          "sha256": "1f8bbc7e0f23ff8c3227723d18c4b3a18347b47a553d9e8550b16e0bd592aa6e"
        },
        "downloads": -1,
        "filename": "tkblock-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "53fbf252cb24d0ec3e0ff53623b1237f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10046,
        "upload_time": "2023-03-07T12:05:12",
        "upload_time_iso_8601": "2023-03-07T12:05:12.301604Z",
        "url": "https://files.pythonhosted.org/packages/b7/86/02078f07a25d0165849be6122ba77ef9de4584e78069404a203022a44141/tkblock-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99bdad7367f293f54c7e03e47ce066731bb449f7055dade323181eeffe1cb1b6",
          "md5": "0eae841eb1486b5f44e1a95842295498",
          "sha256": "c4e300ff1f83848eae00267d21b865d93ca8144330f99a043a365a2ddab93b2f"
        },
        "downloads": -1,
        "filename": "tkblock-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0eae841eb1486b5f44e1a95842295498",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8552,
        "upload_time": "2023-03-07T12:05:14",
        "upload_time_iso_8601": "2023-03-07T12:05:14.288965Z",
        "url": "https://files.pythonhosted.org/packages/99/bd/ad7367f293f54c7e03e47ce066731bb449f7055dade323181eeffe1cb1b6/tkblock-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cfc14d5f261ba7eca42e3feb5992362202e5f83b7453e4c689f733aa2208b21",
          "md5": "d549185236b3f0dfb86e7a08df6f9d2e",
          "sha256": "b98141db386f039ba26795f7c700746d97551249a92fa778902aa503e258840f"
        },
        "downloads": -1,
        "filename": "tkblock-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d549185236b3f0dfb86e7a08df6f9d2e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10046,
        "upload_time": "2023-03-07T12:07:58",
        "upload_time_iso_8601": "2023-03-07T12:07:58.043922Z",
        "url": "https://files.pythonhosted.org/packages/1c/fc/14d5f261ba7eca42e3feb5992362202e5f83b7453e4c689f733aa2208b21/tkblock-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be2047728d4f730bc74d79d689d0f596b3f1f8581c7f63025fb2ea3a6579c649",
          "md5": "03870d1132c4698e69f74f428c0ebff7",
          "sha256": "7158248134b16edd365459b17fb550feb5f23a99001f4840bb7c847a14a5a620"
        },
        "downloads": -1,
        "filename": "tkblock-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "03870d1132c4698e69f74f428c0ebff7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8555,
        "upload_time": "2023-03-07T12:07:59",
        "upload_time_iso_8601": "2023-03-07T12:07:59.719794Z",
        "url": "https://files.pythonhosted.org/packages/be/20/47728d4f730bc74d79d689d0f596b3f1f8581c7f63025fb2ea3a6579c649/tkblock-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5dd77898c90419214cc98abeb65c7c3b88bf5dafde6d79547ff762412bf56dab",
          "md5": "9e683d8aef4471ad5ba4f5750fa7daad",
          "sha256": "e563c2c6375dbf486a9dbf7bcaac85eb2e3732477e01efae33f05f3c645221b3"
        },
        "downloads": -1,
        "filename": "tkblock-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e683d8aef4471ad5ba4f5750fa7daad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11830,
        "upload_time": "2023-03-08T16:03:29",
        "upload_time_iso_8601": "2023-03-08T16:03:29.425510Z",
        "url": "https://files.pythonhosted.org/packages/5d/d7/7898c90419214cc98abeb65c7c3b88bf5dafde6d79547ff762412bf56dab/tkblock-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0aa296a51faac64ae4228b1b716906e71f7c7467cb98d8889b0e0660604526dd",
          "md5": "1881b7f4fb5541092d0f91d5ac3596d6",
          "sha256": "615fb8fa07711e3dc9c810c17d1952ec24fa9fddc82fba12aabe1de636b2ed33"
        },
        "downloads": -1,
        "filename": "tkblock-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1881b7f4fb5541092d0f91d5ac3596d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12479,
        "upload_time": "2023-03-08T16:03:31",
        "upload_time_iso_8601": "2023-03-08T16:03:31.626311Z",
        "url": "https://files.pythonhosted.org/packages/0a/a2/96a51faac64ae4228b1b716906e71f7c7467cb98d8889b0e0660604526dd/tkblock-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfb82603cf5b3a0c44bbec574dbdb4ef327ec68d25c9f2cf9e85fc551aca6fe5",
          "md5": "e16aab11cca5bfc5148860ea5f8f0795",
          "sha256": "99b8086c67ced5387f1cfb11d0069129e94075851a3cfb8a6d1b752f86f7c4df"
        },
        "downloads": -1,
        "filename": "tkblock-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e16aab11cca5bfc5148860ea5f8f0795",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12081,
        "upload_time": "2023-03-14T16:14:55",
        "upload_time_iso_8601": "2023-03-14T16:14:55.805371Z",
        "url": "https://files.pythonhosted.org/packages/df/b8/2603cf5b3a0c44bbec574dbdb4ef327ec68d25c9f2cf9e85fc551aca6fe5/tkblock-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a6f5b5376491ef9196d5b4e91b2446df7d6dd28ac7e6e9837a05d81b08ab613",
          "md5": "1f30135f6dc1812e6b04694f99cac514",
          "sha256": "ce57239e7137ea3a5e0795f2c0c17538dc7ab37c9ccabe9a31376f1ad48ec215"
        },
        "downloads": -1,
        "filename": "tkblock-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1f30135f6dc1812e6b04694f99cac514",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12720,
        "upload_time": "2023-03-14T16:14:57",
        "upload_time_iso_8601": "2023-03-14T16:14:57.857598Z",
        "url": "https://files.pythonhosted.org/packages/9a/6f/5b5376491ef9196d5b4e91b2446df7d6dd28ac7e6e9837a05d81b08ab613/tkblock-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb55a5ea29882b0022c970e0896a20c3cccfc95ba77a6c08a914ade5bcc9dfeb",
          "md5": "d670e25b389f7908bd19e9d75717b02e",
          "sha256": "64fdb97b783e3ac2c08a9c9f853c16214af0444d363aee12fd360666a433b6b3"
        },
        "downloads": -1,
        "filename": "tkblock-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d670e25b389f7908bd19e9d75717b02e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15272,
        "upload_time": "2023-03-16T16:15:16",
        "upload_time_iso_8601": "2023-03-16T16:15:16.292582Z",
        "url": "https://files.pythonhosted.org/packages/eb/55/a5ea29882b0022c970e0896a20c3cccfc95ba77a6c08a914ade5bcc9dfeb/tkblock-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e0df42354df7369bdf884b7292ee629ef5fb0bd2f40e6234d09c0fd6777f58a",
          "md5": "46a8d7933498e366019a7bac07992c7c",
          "sha256": "c97c40ea75fe157b6a2dda1aa833285bb068002f514d3241f19a75f62983f064"
        },
        "downloads": -1,
        "filename": "tkblock-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "46a8d7933498e366019a7bac07992c7c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18045,
        "upload_time": "2023-03-16T16:15:18",
        "upload_time_iso_8601": "2023-03-16T16:15:18.145991Z",
        "url": "https://files.pythonhosted.org/packages/7e/0d/f42354df7369bdf884b7292ee629ef5fb0bd2f40e6234d09c0fd6777f58a/tkblock-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eb55a5ea29882b0022c970e0896a20c3cccfc95ba77a6c08a914ade5bcc9dfeb",
        "md5": "d670e25b389f7908bd19e9d75717b02e",
        "sha256": "64fdb97b783e3ac2c08a9c9f853c16214af0444d363aee12fd360666a433b6b3"
      },
      "downloads": -1,
      "filename": "tkblock-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d670e25b389f7908bd19e9d75717b02e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15272,
      "upload_time": "2023-03-16T16:15:16",
      "upload_time_iso_8601": "2023-03-16T16:15:16.292582Z",
      "url": "https://files.pythonhosted.org/packages/eb/55/a5ea29882b0022c970e0896a20c3cccfc95ba77a6c08a914ade5bcc9dfeb/tkblock-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7e0df42354df7369bdf884b7292ee629ef5fb0bd2f40e6234d09c0fd6777f58a",
        "md5": "46a8d7933498e366019a7bac07992c7c",
        "sha256": "c97c40ea75fe157b6a2dda1aa833285bb068002f514d3241f19a75f62983f064"
      },
      "downloads": -1,
      "filename": "tkblock-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "46a8d7933498e366019a7bac07992c7c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18045,
      "upload_time": "2023-03-16T16:15:18",
      "upload_time_iso_8601": "2023-03-16T16:15:18.145991Z",
      "url": "https://files.pythonhosted.org/packages/7e/0d/f42354df7369bdf884b7292ee629ef5fb0bd2f40e6234d09c0fd6777f58a/tkblock-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}