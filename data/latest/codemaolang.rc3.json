{
  "info": {
    "author": "BT.Q",
    "author_email": "BT.Q@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Codemao Lang\n\n### 当前版本列表：\n\nv1.0.0\n\nv1.1.0\n\nv1.1.1\n\n### 更新日志：\n\n```\nv1.0.0:\n    (1).正式发布\nv1.1.0:\n    (1).user类新增发帖、回帖、回复等论坛功能\n    (2).修改user类messages方法\n    (3).新增post、workshop类\nv1.1.1:\n    (1).修复了低版本Python无法运行的问题\n```\n\n## 下载 Codemao Lang\n\n### 1.直接下载文件(推荐)\n\n[下载 codemaoLang.py](http://tobtq.top/file/codemaoLang.py)\n\n### 2.使用 [pip](https://pypi.org/project/codemaoLang/) 下载\n\n`python -m pip install codemaoLang`\n\n### 3.使用 [Github](https://github.com/MinesomeBTQ/CodemaoLang) 下载\n\n## 使用文档 (v1.1.1)\n\n### 1. user 类\n\n用于通过账号和密码登录用户并获取和修改信息\n\n#### (1) 参数\n\n`identity: str` - 账户 手机号/用户名/邮箱\n\n`password: str` - 账户 密码\n\n示例：\n\n```python\nfrom codemaoLang import *\nusr = user('账号', '密码')\n```\n\n#### 注意：以下文档中的 usr 均代表一个已经登录的 user() 实例\n\n#### (2) 变量\n\n\n| 变量名             | 类型   | 解释          |\n|-----------------|------|-------------|\n| usr.identity    | str  | 账号          |\n| usr.password    | str  | 密码          |\n| usr.ifLogon     | bool | 是否登录        |\n| usr.id          | int  | ID          |\n| usr.nickname    | str  | 昵称          |\n| usr.avatar_url  | str  | 头像链接        |\n| usr.fullname    | str  | 真实姓名        |\n| usr.birthday    | int  | 生日时间戳       |\n| usr.sex         | int  | 性别（0为女，1为男） |\n| usr.qq          | str  | QQ 号码       |\n| usr.description | str  | 自我描述        |\n\n#### (3) 集合\n\n##### auth(认证):\n\n\n| 变量名                       | 类型   | 解释                 |\n|---------------------------|------|--------------------|\n| usr.auth.data             | dict | 所有信息组成的字典          |\n| usr.auth.token            | str  | token              |\n| usr.auth.phone_number     | str  | 手机号(如:123****4567) |\n| usr.auth.has_password     | bool | 是否设置密码             |\n| usr.auth.is_weak_password | bool | 是否为弱密码             |\n\n##### info(信息):\n\n\n| 变量名                  | 类型   | 解释          |\n|----------------------|------|-------------|\n| usr.info.data        | dict | 所有信息组成的字典   |\n| usr.info.id          | int  | ID          |\n| usr.info.nickname    | str  | 昵称          |\n| usr.info.avatar      | str  | 头像链接        |\n| usr.info.email       | bool | 邮箱(空)       |\n| usr.info.gold        | str  | 金币数         |\n| usr.info.qq          | str  | QQ号码(空)     |\n| usr.info.real_name   | str  | 真实姓名        |\n| usr.info.sex         | str  | 性别(M为男，F为女) |\n| usr.info.description | str  | 自我描述        |\n| usr.info.level       | int  | 用户等级        |\n\n#### (4)方法\n\n##### 修改用户信息\n\n\n| 方法名                            | 用法            |\n|--------------------------------|---------------|\n| usr.setNickname(value: str)    | 设置昵称          |\n| usr.setFullname(value: str)    | 设置全名          |\n| usr.setDescription(value: str) | 设置自我描述        |\n| usr.setSex(value: int)         | 设置性别(1为男，0为女) |\n| usr.setBirthday(value: int)    | 设置生日时间戳       |\n| usr.setAvatar_url(value: str)  | 设置用户头像URL     |\n\n##### 修改用户密码\n\n`usr.setPassword(password: str)`\n\n示例：\n\n```python\nfrom codemaoLang import *\nusr = user('账号', '当前密码')\nusr.setPassword('新密码')\n```\n\n##### 退出登录\n\n`usr.logout()`\n\nPS：建议退出后删除此对象\n\n示例：\n\n```python\nfrom codemaoLang import *\nusr = user('账号', '密码')\nusr.logout()\ndel usr\n```\n\n##### 刷新信息\n\n`usr.reload()` - 用于重新刷新信息，以同步用户在其他地方修改信息\n\n##### 获取消息\n\n`usr.messages()`\n\n返回一个item对象，包含以下值\n\n| 变量名                          | 类型   | 解释        |\n|------------------------------|------|-----------|\n| usr.messages().data          | dict | 所有信息组成的字典 |\n| usr.messages().comment_reply | int  | 评论与回复     |\n| usr.messages().like_fork     | int  | 赞与被购买     |\n| usr.messages().system        | int  | 系统消息      |\n\n示例：\n\n```python\nfrom codemaoLang import *\nusr = user('账号', '密码')\nprint(usr.messages().data)\n# 若无消息，则输出为 {'comment_reply': 0, 'like_fork': 0, 'system': 0}\n```\n\n##### 论坛发帖\n\n`usr.post(title: str, content: str, board_name: str, studio_id: str = None)`\n\n###### 参数说明\n\ntitle: 帖子标题 _（长度必须在5-50字之间）_\n\ncontent: 帖子内容 _（应为HTML格式，长度必须不小于10字）_\n\nboard_name: 要将帖子发布到的板块 _（热门活动，积木编程乐园，工作室&师徒，你问我答，神奇代码岛，图书馆，CoCo，Python乐园，源码精灵，NOC编程猫比赛，灌水池塘，通天塔，训练师小课堂等）_\n\nstudio_id(可选): 活动 ID _（当且仅当board_name为热门活动时，此信息有效，帖子会发布在相应活动的讨论区）_\n\n###### 返回值\n\n若发帖成功，则返回帖子id，类型为 str\n\n##### 删除帖子\n\n`usr.del_post(post_id: str | int)`\n\n###### 参数说明\n\npost_id: 要删除的帖子的id _（可以在帖子链接尾部数字获取）_\n\n##### 回帖\n\n`usr.reply_post(post_id: str | int, content: str)`\n\n###### 参数说明\n\npost_id: 要回复的帖子的id _（可以在帖子链接尾部数字获取）_\n\ncontent: 回帖内容 _（应为HTML格式）_\n\n###### 返回值\n\n若发帖成功，则返回回帖id，类型为 str\n\n##### 回复\n\n`usr.reply_reply(reply_id: str | int, content: str, parent_id: int = 0)`\n\n###### 参数说明\n\nreply_id: 要回复的回帖的id _（可以在帖子链接尾部数字获取）_\n\ncontent: 回帖内容 _（应为HTML格式）_\n\nparent_id(可选)：回复的其他回复id _（默认为 0，即直接回复回帖，否则应设置为已有回复的id，显示为：“xxx 回复 xxx”）_\n\n示例：\n\n```python\nfrom codemaoLang import *\nimport time\n\nusr = user('账号', '密码')  # 登录\npost_id = usr.post('标题(Title)', '内容(Content)', '灌水池塘')  # 发布帖子\nreply_id = usr.reply_post(post_id, '回帖')\nusr.reply_reply(reply_id, '回复')\ntime.sleep(60)  # 等待60秒\nusr.del_post(post_id)  # 删除帖子\n\n```\n\n###### 返回值\n\n若发帖成功，则返回回复id，类型为 str\n\n### 2. another 类\n\n用于通过id获取用户信息（包括公开信息、代表作信息、荣誉信息、作品列表、收藏作品列表、关注列表、粉丝列表）\n\n#### (1) 参数\n\n`user_id: str | int` - 账户 id\n\n示例：\n\n```python\nfrom codemaoLang import *\nusr = another(6595064) # 作者的编程猫id，可替换为任意有效的编程猫id\n```\n\n#### 注意：以下文档中的 usr 均代表一个有效的 another() 实例\n\n#### (2) 变量\n\n\n| 变量名         | 类型  | 解释   |\n|-------------|-----|------|\n| usr.user_id | str | 用户ID |\n\n#### (3) 集合\n\n##### info(信息)\n\n\n| 变量名                      | 类型   | 解释          |\n|--------------------------|------|-------------|\n| usr.info.data            | dict | 所有信息组成的字典   |\n| usr.info.id              | int  | ID          |\n| usr.info.nickname        | str  | 昵称          |\n| usr.info.avatar          | str  | 头像链接        |\n| usr.info.sex             | int  | 性别(1为男，0为女) |\n| usr.info.description     | str  | 自我描述        |\n| usr.info.doing           | str  | 正在做的事       |\n| usr.info.preview_work_id | int  | 代表作id       |\n| usr.info.level           | int  | 等级          |\n\n##### work(代表作)\n\n\n| 变量名              | 类型   | 解释        |\n|------------------|------|-----------|\n| usr.work.data    | dict | 所有信息组成的字典 |\n| usr.work.id      | int  | 作品ID      |\n| usr.work.name    | str  | 作品名       |\n| usr.work.preview | str  | 作品图片链接    |\n\n##### honor(荣誉信息)\n\n\n| 变量名                                 | 类型   | 解释               |\n|-------------------------------------|------|------------------|\n| usr.honor.data                      | dict | 所有信息组成的字典        |\n| usr.honor.attention_status          | bool | 是否关注该用户          |\n| usr.honor.block_total               | int  | nemo 作品积木总数      |\n| usr.honor.re_created_total          | int  | 作品被再创作总数         |\n| usr.honor.attention_total           | int  | 该用户关注的人总数        |\n| usr.honor.fans_total                | int  | 该用户的粉丝总数         |\n| usr.honor.collected_total           | int  | 作品被收藏总数          |\n| usr.honor.liked_total               | int  | 作品被点赞总数          |\n| usr.honor.view_times                | int  | 作品被浏览总数          |\n| usr.honor.author_level              | int  | 该用户等级            |\n| usr.honor.is_official_certification | int  | 是否为官方帐户（0为否，1为是） |\n| usr.honor.subject_id                | int  | 用户工作室 ID         |\n| usr.honor.work_shop_name            | str  | 用户工作室名           |\n| usr.honor.work_shop_level           | int  | 用户工作室等级          |\n| usr.honor.like_score                | int  | 用户点赞分            |\n| usr.honor.collect_score             | int  | 用户收藏分            |\n| usr.honor.fork_score                | int  | 用户再创作分           |\n\n#### (4) 类\n\n##### works(作品列表)\n\n-- `data` 所有数据组成的字典\n\n-- `items` 所有作品对象组成的列表, 每一项都为 item 对象\n\n-- `getItem(number: int)` 获取作品列表里的第几项\n\n-- `item`对象:\n\n    -- 包含以下值:\n\n\n| 变量名           | 类型   | 解释                   |\n|---------------|------|----------------------|\n| data          | dict | 所有信息组成的字典            |\n| id            | int  | 作品ID                 |\n| type          | int  | 类型（1为Kitten, 8为Nemo） |\n| work_name     | str  | 作品名                  |\n| preview       | str  | 封面图片链接               |\n| view_times    | int  | 被浏览次数                |\n| collect_times | int  | 被收藏次数                |\n| liked_times   | int  | 被点赞次数                |\n| parent_id     | int  | 原创：0；再创作：原作品 ID      |\n| fork_enable   | bool | 是否允许再创作              |\n| fork_times    | int  | 被再创作次数               |\n| publish_time  | int  | 作品发布时间戳              |\n| description   | str  | 作品介绍                 |\n\n##### collections(收藏列表)\n\n-- `data` 所有数据组成的字典\n\n-- `items` 所有收藏作品对象组成的列表, 每一项都为 item 对象\n\n-- `getItem(number: int)` 获取收藏作品列表里的第几项\n\n-- `item`对象:\n\n    -- 包含以下值:\n\n\n| 变量名               | 类型   | 解释                     |\n|-------------------|------|------------------------|\n| data              | dict | 所有信息组成的字典              |\n| id                | int  | 作品ID                   |\n| name              | str  | 作品名                    |\n| preview           | str  | 作品封面图片链接               |\n| user_id           | int  | 作者ID                   |\n| nickname          | str  | 作者昵称                   |\n| avatar_url        | str  | 作者头像链接                 |\n| views_count       | int  | 作品被浏览次数                |\n| collections_count | int  | 作品被收藏次数                |\n| likes_count       | int  | 作品被点赞次数                |\n| is_deleted        | bool | 是否被删除                  |\n| publish_time      | int  | 作品发布时间戳                |\n| work_type         | int  | 作品类型（1为Kitten, 8为Nemo) |\n| description       | str  | 作品介绍                   |\n\n##### followers(关注列表)\n\n-- `data` 所有数据组成的字典\n\n-- `items` 所有关注对象组成的列表, 每一项都为 item 对象\n\n-- `getItem(number: int)` 获取关注列表里的第几项\n\n-- `item`对象:\n\n    -- 包含以下值:\n\n\n| 变量名         | 类型   | 解释        |\n|-------------|------|-----------|\n| data        | dict | 所有信息组成的字典 |\n| id          | int  | 用户ID      |\n| nickname    | str  | 用户昵称      |\n| avatar_url  | str  | 用户头像链接    |\n| n_works     | int  | 用户作品总数    |\n| total_likes | int  | 用户被点赞总数   |\n| is_followed | bool | 是否关注该用户   |\n| description | str  | 用户自我描述    |\n\n##### fans(粉丝列表)\n\n-- 与 followers 用法完全一样\n\n#### (5) 方法\n\n##### 刷新信息\n\n`usr.reload()` - 用于重新刷新信息，以同步用户在其他地方修改信息\n\n### 3.board类\n\n用于获取论坛所有面板的信息\n\n#### (1) boards\n\n类型：list\n\n包含所有论坛板块的item对象\n\nitem对象包含以下值\n\n\n| 变量名      | 类型   | 解释        |\n|----------|------|-----------|\n| data     | dict | 所有信息组成的字典 |\n| id       | str  | 板块id      |\n| is_hot   | bool | 是否为热门板块   |\n| icon_url | str  | 板块图标 URL  |\n| name     | str  | 板块名称      |\n\n#### (2) getBoardId(board_id: str | int)\n\n用于通过id获取指定板块信息\n\n###### 参数：\n\nboard_id：板块id\n\n###### 返回值：\n\n一个集合，包含以下值\n\n| 变量名           | 类型   | 解释        |\n|---------------|------|-----------|\n| id            | str  | 板块 ID     |\n| name          | str  | 板块名称      |\n| description   | str  | 板块描述      |\n| icon_url      | str  | 板块图标 URL  |\n| is_hot        | bool | 是否为热门板块   |\n| n_posts       | int  | 板块中帖子总数   |\n| n_discussions | int  | 板块中帖子回复总数 |\n\n#### (3) getBoardName(board_id: str | int)\n\n用于通过板块名获取指定板块信息\n\n###### 参数：\n\nboard_id：板块名 _（热门活动，积木编程乐园，工作室&师徒，你问我答，神奇代码岛，图书馆，CoCo，Python乐园，源码精灵，NOC编程猫比赛，灌水池塘，通天塔，训练师小课堂等）_\n\n###### 返回值：\n\n一个集合，包含以下值\n\n| 变量名           | 类型   | 解释        |\n|---------------|------|-----------|\n| id            | str  | 板块 ID     |\n| name          | str  | 板块名称      |\n| description   | str  | 板块描述      |\n| icon_url      | str  | 板块图标 URL  |\n| is_hot        | bool | 是否为热门板块   |\n| n_posts       | int  | 板块中帖子总数   |\n| n_discussions | int  | 板块中帖子回复总数 |\n\n### 4. post 类\n\n用于通过id获取指定论坛帖子信息\n\n#### (1) 参数\n\n`post_id: str | int` - 帖子 id（可以在帖子链接尾部的数字获得）\n\n#### 注意：以下文档中的 post 均代表一个有效的 post() 实例\n\n#### (2) 变量\n\n| 变量名                | 类型    | 解释           |\n|--------------------|-------|--------------|\n| post.data          | dict  | 所有信息组成的字典    |\n| post.ask_help_flag | int   | 是否为求助帖       |\n| post.board_id      | str   | 帖子所在板块 ID    |\n| post.board_name    | str   | 帖子所在板块名称     |\n| post.content       | str   | 帖子内容         |\n| post.created_at    | int   | 发布时间戳        |\n| post.id            | str   | 帖子 ID        |\n| post.is_authorized | bool  | 是否为官方贴       |\n| post.is_featured   | bool  | 是否为精选贴       |\n| post.is_hotted     | bool  | 是否为热门贴       |\n| post.is_pinned     | bool  | 是否为置顶帖       |\n| post.n_comments    | int   | （每个回帖下的）评论数量 |\n| post.n_replies     | int   | 回帖数量         |\n| post.n_views       | int   | 浏览次数         |\n| post.title         | str   | 帖子标题         |\n| post.tutorial_flag | int   | 是否为教程帖       |\n| post.updated_at    | int   | 更新时间戳        |\n| post.user          | class | _见下文_        |\n\n#### (3) 内置 user 类\n\n内涵帖子发布者消息，包含以下值\n\n| 变量名                  | 类型   | 解释        |\n|----------------------|------|-----------|\n| post.data            | dict | 所有信息组成的字典 |\n| post.id              | str  | 用户 ID     |\n| post.nickname        | str  | 用户昵称      |\n| post.avatar_url      | str  | 用户头像 URL  |\n| post.subject_id      | int  | 用户工作室 ID  |\n| post.work_shop_name  | str  | 用户工作室名    |\n| post.work_shop_level | str  | 用户工作室等级   |\n| post.wuhan_medal     | bool | 是否有武汉勋章   |\n| post.has_signed      | bool | 是否签订友好协议  |\n\n### 5. workshop 类\n\n用于通过id获取指定工作室信息\n\n#### (1) 参数\n\n`workshop_id: str | int` - 工作室 id（可以在工作室链接尾部的数字获得）\n\n```python\nfrom codemaoLang import *\nws = workshop(813) # LXYZ工作室的id，可替换为任意有效的工作室id\n```\n\n#### 注意：以下文档中的 ws 均代表一个有效的 workshop() 实例\n\n#### (2) 变量\n\n| 变量名                 | 类型   | 解释             |\n|---------------------|------|----------------|\n| ws.data             | dict | 所有信息组成的字典      |\n| ws.id               | int  | 工作室id          |\n| ws.shop_id          | int  | 工作室识别码         |\n| ws.name             | str  | 工作室名称          |\n| ws.total_score      | int  | 工作室总分          |\n| ws.preview_url      | str  | 工作室图片 URL      |\n| ws.description      | str  | 工作室介绍          |\n| ws.n_works          | int  | 工作室作品数量        |\n| ws.n_views          | int  | 工作室被浏览次数       |\n| ws.level            | int  | 工作室等级          |\n| ws.status           | int  | 工作室状态          |\n| ws.latest_joined_at | int  | 最后有人加入的时间戳     |\n| ws.created_at       | int  | 工作室创建时间戳       |\n| ws.updated_at       | int  | 工作室主页最后被访问的时间戳 |\n\n### 6. random_nickname 函数\n\n用于生成一个随机昵称\n\n示例:\n\n```python\nfrom codemaoLang import *\nprint(random_nickname()) # 如：浪漫的飞电鼠ZRA5 务实的潘达熊9xKs\n```\n\n##### - BT.Q 2022.3.15\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MinesomeBTQ/CodemaoLang",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "codemaoLang",
    "package_url": "https://pypi.org/project/codemaoLang/",
    "platform": null,
    "project_url": "https://pypi.org/project/codemaoLang/",
    "project_urls": {
      "Homepage": "https://github.com/MinesomeBTQ/CodemaoLang"
    },
    "release_url": "https://pypi.org/project/codemaoLang/1.1.1/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "一个为编程猫api打造的高度包装的Python库",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13187701,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d04a1e2c0646fba7b7fd61882861cacbc0ea1b47bc73cf1efdf525cd744d6e5d",
          "md5": "58bce1a4033fde4f647426cb5a283033",
          "sha256": "8b29f0aa4c8eca137868af21bede9b8a5b27aedb7155a430455f776ffe82869a"
        },
        "downloads": -1,
        "filename": "codemaoLang-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "58bce1a4033fde4f647426cb5a283033",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8396,
        "upload_time": "2022-03-11T04:24:02",
        "upload_time_iso_8601": "2022-03-11T04:24:02.432137Z",
        "url": "https://files.pythonhosted.org/packages/d0/4a/1e2c0646fba7b7fd61882861cacbc0ea1b47bc73cf1efdf525cd744d6e5d/codemaoLang-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e45a9b624ac924b079403b243cb49642590e256344afc81d8935e5b2835e3d58",
          "md5": "0ee28318fe020a91fcdaaa101719c183",
          "sha256": "dba8a5a01129db943f36a67267f5bf286654ad042375f7078025b870a7c45f4d"
        },
        "downloads": -1,
        "filename": "codemaoLang-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0ee28318fe020a91fcdaaa101719c183",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10269,
        "upload_time": "2022-03-11T04:24:04",
        "upload_time_iso_8601": "2022-03-11T04:24:04.796301Z",
        "url": "https://files.pythonhosted.org/packages/e4/5a/9b624ac924b079403b243cb49642590e256344afc81d8935e5b2835e3d58/codemaoLang-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c44eb3512fd350c74055b3078bad348b76201f414cccec3e5459da62e2baea3b",
          "md5": "53dbeadedf6509380dbe7339ea3c57fd",
          "sha256": "8638e6ab5eb7a7cd7dc78f53fcd58d0c2a50f3884adc941d1523cb677e3d1590"
        },
        "downloads": -1,
        "filename": "codemaoLang-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "53dbeadedf6509380dbe7339ea3c57fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11962,
        "upload_time": "2022-03-15T03:59:09",
        "upload_time_iso_8601": "2022-03-15T03:59:09.965278Z",
        "url": "https://files.pythonhosted.org/packages/c4/4e/b3512fd350c74055b3078bad348b76201f414cccec3e5459da62e2baea3b/codemaoLang-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8665192003b7b9f35259622b5a73253af9bb513654086e91b480ed4285d2321a",
          "md5": "7623ff422abc365d4b14f08ddf028bcb",
          "sha256": "3ae25a28f8199f7b10db2b471bd30f0f63cc48996ed9f615867b51823a25a2db"
        },
        "downloads": -1,
        "filename": "codemaoLang-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7623ff422abc365d4b14f08ddf028bcb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15919,
        "upload_time": "2022-03-15T03:59:11",
        "upload_time_iso_8601": "2022-03-15T03:59:11.451848Z",
        "url": "https://files.pythonhosted.org/packages/86/65/192003b7b9f35259622b5a73253af9bb513654086e91b480ed4285d2321a/codemaoLang-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbca95ed71d5f80116f18d80d80c2e08bd02db48f99eb1fe4d05c6995b8a997f",
          "md5": "3f3ad272b8974153e410b5678b525995",
          "sha256": "a37b32bb7eba71edb44678adc65eaa34646e065c2ca5b3f963005cab704435dd"
        },
        "downloads": -1,
        "filename": "codemaoLang-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f3ad272b8974153e410b5678b525995",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11996,
        "upload_time": "2022-03-15T23:30:00",
        "upload_time_iso_8601": "2022-03-15T23:30:00.212874Z",
        "url": "https://files.pythonhosted.org/packages/bb/ca/95ed71d5f80116f18d80d80c2e08bd02db48f99eb1fe4d05c6995b8a997f/codemaoLang-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7098aa02ea7fe25ced327c8019935792b0d3fa24ac26044889d89101c806de9c",
          "md5": "f108df5b02e35fec93f639f7d0acac44",
          "sha256": "299da797f981e5dbe333f907fd3948fcdeccc6a0c5c49185e91848f2ab865b23"
        },
        "downloads": -1,
        "filename": "codemaoLang-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f108df5b02e35fec93f639f7d0acac44",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16009,
        "upload_time": "2022-03-15T23:30:02",
        "upload_time_iso_8601": "2022-03-15T23:30:02.292384Z",
        "url": "https://files.pythonhosted.org/packages/70/98/aa02ea7fe25ced327c8019935792b0d3fa24ac26044889d89101c806de9c/codemaoLang-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bbca95ed71d5f80116f18d80d80c2e08bd02db48f99eb1fe4d05c6995b8a997f",
        "md5": "3f3ad272b8974153e410b5678b525995",
        "sha256": "a37b32bb7eba71edb44678adc65eaa34646e065c2ca5b3f963005cab704435dd"
      },
      "downloads": -1,
      "filename": "codemaoLang-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3f3ad272b8974153e410b5678b525995",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11996,
      "upload_time": "2022-03-15T23:30:00",
      "upload_time_iso_8601": "2022-03-15T23:30:00.212874Z",
      "url": "https://files.pythonhosted.org/packages/bb/ca/95ed71d5f80116f18d80d80c2e08bd02db48f99eb1fe4d05c6995b8a997f/codemaoLang-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7098aa02ea7fe25ced327c8019935792b0d3fa24ac26044889d89101c806de9c",
        "md5": "f108df5b02e35fec93f639f7d0acac44",
        "sha256": "299da797f981e5dbe333f907fd3948fcdeccc6a0c5c49185e91848f2ab865b23"
      },
      "downloads": -1,
      "filename": "codemaoLang-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f108df5b02e35fec93f639f7d0acac44",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16009,
      "upload_time": "2022-03-15T23:30:02",
      "upload_time_iso_8601": "2022-03-15T23:30:02.292384Z",
      "url": "https://files.pythonhosted.org/packages/70/98/aa02ea7fe25ced327c8019935792b0d3fa24ac26044889d89101c806de9c/codemaoLang-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}