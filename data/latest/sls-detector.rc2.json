{
  "info": {
    "author": "Jose Tiago Macara Coutinho",
    "author_email": "coutinhotiago@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# sls detector\n\nThe sls detector python library. It is being used at\n[ALBA - BL04 MSPD](https://www.cells.es/en/beamlines/bl04-mspd)\nbeamline to control a SLS Mythen II detector.\n\nIt is built as a successor of the long lived C++ slsDetectorLibrary.\n\nIt should be fairly easy to support other detectors of the SLS\nfamily.\n\nThe library provides complete remote control of a Mythen II detector,\na fairly complete simulator and a [Lima](https://github.com/esrf-bliss/Lima)\ncamera plugin with a tango device class.\nThere is also an experimental [Sardana](https://sardana-controls.org/)\n1D controller which is not currently being used (the\n[Sardana Lima 2D controller](https://github.com/ALBA-Synchrotron/sardana-limaccd)\nis being used instead).\n\nA simple GUI based on [PyQt5]() and [pyqtgraph]() is also provided. It\nis intented for test purposes only.\n\n\n## Installation\n\nFrom within your favorite python environment type on the command line:\n\n```$ pip install sls-detector```\n\n\n## Library\n\nThe library can be used with:\n\n```python\nfrom sls.client import Detector\nfrom sls.protocol import RunStatus\n\n\nmythen = Detector('bl04mythen')\n\nprint(mythen.energy_threshold)\n\nassert mythen.run_status == RunStatus.IDLE\n\nmythen.dynamic_range = 32\n\nwith mythen.acquisition(exposure_time=0.1, nb_frames=10) as acq:\n    for event_type, data in mythen.acquisition():\n        if event_type == 'frame':\n            print(data)\n\n```\n\n(more examples in the [examples/](examples/) directory)\n\n## Simulator\n\nBefore using the simulator make sure all dependencies are installed with:\n\n```$ pip install sls-detector[simulator]```\n\nWrite a simple [TOML](https://github.com/toml-lang/toml) configuration file describing the detector(s) you\nwant to expose. Example:\n\n```toml\n# mythen.toml\n\n[bl04mythen1]\nctrl_port = 1952\nstop_port = 1953\n```\n\nRun the simulator with:\n\n```terminal\n$ sls-simulator --log-level=DEBUG -c mythen.toml\nINFO 2020-05-15 08:46:02,531 root: preparing to run...\nINFO 2020-05-15 08:46:02,533 SLSServer.Detector(bl04mythen1): Ready to accept requests\n```\n\nYou will now be able to access the simulator in exactly the same way as a real detector:\n\n```python\nfrom sls.client import Detector\n\n\nmythen = Detector('localhost')\n\nprint(mythen.energy_threshold)\n```\n\n## Lima\n\nBefore using lima make sure lima is properly installed.\n\n*From the command line*\n\n```terminal\n$ sls-lima --host=bl04mythen -n 10 -e 0.25 -d /tmp/mythen --saving-format=EDF --saving-prefix=myth_\nLast image Ready = 10/10\nTook 2.5158393383026123s\n```\n\n*As a library*\n\n```python\nfrom sls.client import Detector\nfrom sls.lima.camera import get_ctrl\nfrom Lima.Core import AcqRunning\n\nctrl = get_ctrl('bl04mythen')  # a Lima.Core.CtControl\nacq = ctrl.acquisition()\nacq.setAcqExpoTime(0.1)\nacq.setAcqNbFrames(10)\nctrl.prepareAcq()\nctrl.startAcq()\nwhile ctrl.getStatus().AcquisitionStatus == AcqRunning:\n    print('Running... Waiting to finish!')\n    time.sleep(0.1)\nprint('Finished!')\n```\n\n*As a lima tango server*\n\nFirst, register a lima mythen tango server.\n\nThe LimaCCDs device should have the `LimaCameraType` property set to `MythenSLS`\n\nYou can start the Lima tango device server with the LimaCCDs script or with:\n\n```terminal\n$ sls-lima-tango-server <lima tango instance name>\n```\n\n## GUI\n\nA simple Qt GUI is provided. So far, it is intended for test purposes only.\n\nBefore launching, make sure it is properly installed with:\n\n```$ pip install sls-detector[gui]```\n\nLaunch it with:\n\n```$ sls-gui --host=bl04mythen```\n\n\nThat's all folks!",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alba-synchrotron/sls-detector",
    "keywords": "mythen,sls,simulator",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sls-detector",
    "package_url": "https://pypi.org/project/sls-detector/",
    "platform": "",
    "project_url": "https://pypi.org/project/sls-detector/",
    "project_urls": {
      "Homepage": "https://github.com/alba-synchrotron/sls-detector"
    },
    "release_url": "https://pypi.org/project/sls-detector/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "SLS detector (library + lima (CLI and tango-ds) + simulator + GUI)",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7247669,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "439df4141da88d81fb4db0d5a1feae2bf82a74500089ab44b7caf98e69f98ad2",
          "md5": "35eafdfcffe6a527551ea04fdf5f4d31",
          "sha256": "b072213e115deccf2745e289c236fa9601c976e4a3ec1bbf77450c7de249a9a1"
        },
        "downloads": -1,
        "filename": "sls-detector-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "35eafdfcffe6a527551ea04fdf5f4d31",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 34564,
        "upload_time": "2020-05-15T10:47:49",
        "upload_time_iso_8601": "2020-05-15T10:47:49.446645Z",
        "url": "https://files.pythonhosted.org/packages/43/9d/f4141da88d81fb4db0d5a1feae2bf82a74500089ab44b7caf98e69f98ad2/sls-detector-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f55cef7d46fc082283a32494d79fb2a5272b382b2e7ddca37f9d3606e1de1d2b",
          "md5": "b435b6aa2819a187363128f9cf71fa77",
          "sha256": "e0381606bb3b67e3605d0b3c6024f61230cce0cb941932c48c42da99fce1bfdc"
        },
        "downloads": -1,
        "filename": "sls-detector-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b435b6aa2819a187363128f9cf71fa77",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 36459,
        "upload_time": "2020-05-15T10:52:21",
        "upload_time_iso_8601": "2020-05-15T10:52:21.074294Z",
        "url": "https://files.pythonhosted.org/packages/f5/5c/ef7d46fc082283a32494d79fb2a5272b382b2e7ddca37f9d3606e1de1d2b/sls-detector-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f55cef7d46fc082283a32494d79fb2a5272b382b2e7ddca37f9d3606e1de1d2b",
        "md5": "b435b6aa2819a187363128f9cf71fa77",
        "sha256": "e0381606bb3b67e3605d0b3c6024f61230cce0cb941932c48c42da99fce1bfdc"
      },
      "downloads": -1,
      "filename": "sls-detector-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b435b6aa2819a187363128f9cf71fa77",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 36459,
      "upload_time": "2020-05-15T10:52:21",
      "upload_time_iso_8601": "2020-05-15T10:52:21.074294Z",
      "url": "https://files.pythonhosted.org/packages/f5/5c/ef7d46fc082283a32494d79fb2a5272b382b2e7ddca37f9d3606e1de1d2b/sls-detector-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}