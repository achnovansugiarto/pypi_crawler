{
  "info": {
    "author": "Isaac Kinley",
    "author_email": "isaac.kinley@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python"
    ],
    "description": "# dastr\n\n## Motivation\n\nOpen-source datasets often aren't organized according to a standard directory structure. This means that, if your analysis code expects a particular format, either you have to create a new version of it that loops through files differently or you have to manually move and rename the files to match your code's expected format. `dastr` automates the latter approach.\n\n## How to use\n\n`dastr` can be installed through pip (`pip install dastr`).\n\nThere are 3 steps to convert between directory structures: (1) reading, (2) translating, and (3) writing.\n\n### 1. Reading\n\nThere will generally be metadata encoded in a dataset's folder and file names. For example, maybe each participant's data are stored in a separate folder and these are called \"p01\", \"p02\", etc. Maybe it's a longitudinal EEG study and within each participant-specific folder are files called \"pre.edf\" and \"post.edf\". \n\n`dastr` uses regular expression captures (with Python's `re` library) to read this data into a table (a `list` of `dict`s) where each row (element) is a file and each column (key) is an attribute of that file (for example, participant ID and session).\n\nTo read in the data from the above example, you would do the following:\n\n```python\nimport dastr\ndata_path = '/path/to/data/'\nfiles = dastr.read(\n\tpath=data_path,\n\tparams=[\n\t\t(\"p(.+)\", \"participant ID\"),\n\t\t(\"(.+)\\.edf\", \"session\")\n\t\t],\n\tdisp=True)\n```\nThe function will start from the folder specified by the `path` argument and go down from there. The action to take at each level of the directory structure is specified by each elements of the `params` argument (a list of tuples, the elements of which will be strings). The first element of each tuple will be a regular expression. If there are any captures in the regular expression, they will be recorded as the attributes specified by the remaining elements of the tuple. For example: `(\"(.+)\\.edf\", \"session\")` in the above means that, once the program gets to the file `/path/to/data/p01/pre.edf` it should run something equivalent in this case to:\n```python\ncurr_file[\"session\"] = re.findall(\"(.+)\\.edf\", \"pre.edf\")[0]\n```\nIf the current file/folder doesn't match the regular expression, this file is skipped. If the tuple is empty, the regular expression defaults to the wildcard character (`.`).\n\n`dastr.read()` returns a `list` of `dicts`s with keys `attrs` and `path`. `path` specifies the path to the actual file while `attrs` contains another dictionary that stores the attributes. I.e., in the above example, `files[0][\"path\"]` would be `\"/path/to/data/p01/pre.edf\"` while `files[0][\"attrs\"]` would be `{\"participant ID\": \"01\", \"session\": \"pre\"}`. To print this information as it is being read, set the optional argument `disp=True` as in the above (or omit this argument to print nothing).\n\nIn some cases, this might be all you need. You could use `dastr.flatten()` to get a new `list` of `dict`s with key-value pairs copied from `files[:][\"attrs\"]`, plus an additional key-value pair specifying the path of the file. This makes perfect input for `DictWriter` from Python's `csv` library. The resulting csv table could be read in by your analysis code, point it to each data file, and take its outputs as new columns. Or maybe you don't want to change your analysis code.\n\n### 2. Translating\n\nSuppose instead of \"pre\" and \"post\", you want to call the sessions \"01\" and \"02\". The function to use then is `dastr.translate()`:\n```python\ntranslation = {\n\t\"session\": {\n\t\t\"pre\": \"01\",\n\t\t\"post\": \"02\"\n\t}\n}\n\ntranslated = dastr.translate(\n\tfiles=files,\n\ttranslation=translation)\n\noriginal = dastr.translate(\n\tfiles=translated,\n\ttranslation=translation,\n\tdirection=\"reverse\") # Or equivalently \"backward\", or actually anything other than \"forward\"\n```\n\n### 3. Writing\n\nActually moving the files is very similar to `dastr.read()`ing them. The difference is that, instead of reading attributes in using `re` captures, you're writing them out using string formatting. For example\n```python\nnew_path = \"/new/data/path/\"\ndestinations = dastr.write(\n\tfiles=files,\n\tpath=new_path\n\tparams=[\n\t\t\"alldata\",\n\t\t(\"sub-%s\", \"participant ID\"),\n\t\t(\"sub-%s_ses-%s.edf\", \"participant ID\", \"session\")])\n```\ncreates the variable `destinations`, a `list` of `str`ings specifying the new locations of the files (though they haven't been deleted from their old locations):\n```\n/new/data/path/alldata/sub-01/sub-01_ses-01.edf\n/new/data/path/alldata/sub-01/sub-01_ses-02.edf\n/new/data/path/alldata/sub-02/sub-02_ses-01.edf\n/new/data/path/alldata/sub-02/sub-02_ses-02.edf\n```\nIf you did want to delete the old files, you could add the optional argument `key=\"x\"` to use Python's `shutil.move()` (by default, `key` is `\"c\"` which uses Python's `shutil.copy()`). You can also set `key` to any function that takes `old_path, new_path` as its arguments, or you can set it to `\"n\"` which doesn't touch the files at all (in which case you'd probably also want to set `disp=True`).\n\n## How to use with JSON\n\nTo avoid hard-coding the parameters and translations, you can instead specify them in .json files (thanks to [Gabi Herman](github.com/gabiherman) for the suggestion):\n\n### Reading and writing with JSON\n\nInstead of running\n```python\ndastr.[read/write](\n\t...,\n\tparams=params,\n\t...)\n```\nyou would run\n```python\ndastr.[read/write](\n\t...,\n\tparams=dastr.json_to_params(\"path/to/file.json\"),\n\t...)\n```\nWhere `file.json` is formatted in one of 3 ways:\n\n1. a `list` of `dict`s\n```json\n[\n\t{\n\t\t\"pattern\": \"p(.+)\",\n\t\t\"attrs\": \"participant ID\"\n\t},\n\t{\n\t\t\"pattern\": \"(.+)\\.edf\",\n\t\t\"attrs\": \"session\"\n\t}\n]\n```\n2. a `dict` of `list`s\n```json\n{\n\t\"patterns\": [\n\t\t\"p(.+)\",\n\t\t\"(.+)\\.edf\"\n\t],\n\t\"attrs\": [\n\t\t\"participant ID\",\n\t\t\"session\"\n\t]\n}\n```\n3. a `list` of `list`s and `str`ings\n```json\n[\n\t\"alldata\",\n\t[\"sub-%s\", \"participant ID\"],\n\t[\"sub-%s_ses-%s.edf\", \"participant ID\", \"session\"]\n]\n```\n\n### Translating with JSON\n\nHere all you need to do is copy and paste your hard-coded `translation` variable into a `.json` file (replacing single quotes with doubles), and pass the location of this file to `dastr.translate`:\n```python\ntranslated = dastr.translate(\n\t...,\n\ttranslation=\"path/to/translation.json\")\n```\nRunning `dastr.json_to_params` wouldn't work here.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/kinleyid/dastr/archive/v_0211.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kinleyid/dastr",
    "keywords": "data,structure,translator",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dastr",
    "package_url": "https://pypi.org/project/dastr/",
    "platform": "",
    "project_url": "https://pypi.org/project/dastr/",
    "project_urls": {
      "Download": "https://github.com/kinleyid/dastr/archive/v_0211.tar.gz",
      "Homepage": "https://github.com/kinleyid/dastr"
    },
    "release_url": "https://pypi.org/project/dastr/0.2.11/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A tool for translating between scientific data structures",
    "version": "0.2.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6515369,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2c0d4ac25b4ac381b9d7167578fc83bee62e3f8994aa7ed46c1201224f6fd81",
          "md5": "6d4ff506df92983658b4b2dbc5bee60e",
          "sha256": "1aac8f2dfc572b2291d2b57e6f442392efb61d62e94578c05d5078102bfed190"
        },
        "downloads": -1,
        "filename": "dastr-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6d4ff506df92983658b4b2dbc5bee60e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1859,
        "upload_time": "2019-12-20T23:55:14",
        "upload_time_iso_8601": "2019-12-20T23:55:14.988466Z",
        "url": "https://files.pythonhosted.org/packages/e2/c0/d4ac25b4ac381b9d7167578fc83bee62e3f8994aa7ed46c1201224f6fd81/dastr-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c793cf4064ee5609850159a63952af09021db771917445f8814a6dc2cb52f574",
          "md5": "492111eb46a95403250e5152ddcaaeff",
          "sha256": "f47cf37d12fcf7c6e3c0c4cdfe52d6148c62b36571a358235ac5c5cfb96534eb"
        },
        "downloads": -1,
        "filename": "dastr-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "492111eb46a95403250e5152ddcaaeff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2551,
        "upload_time": "2019-12-30T21:24:44",
        "upload_time_iso_8601": "2019-12-30T21:24:44.851650Z",
        "url": "https://files.pythonhosted.org/packages/c7/93/cf4064ee5609850159a63952af09021db771917445f8814a6dc2cb52f574/dastr-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d08838a4103a240f24d8d87ddf1b3d4eeacdf7270b29a896ccf790d63ae3b5d",
          "md5": "c4650101090b59ec6d58cda8bd762a24",
          "sha256": "18ff857935144a910ebd46f79111b4e5ed4dc460d6b2ec2a995faf8e4deb9893"
        },
        "downloads": -1,
        "filename": "dastr-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c4650101090b59ec6d58cda8bd762a24",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2542,
        "upload_time": "2019-12-30T21:29:03",
        "upload_time_iso_8601": "2019-12-30T21:29:03.024348Z",
        "url": "https://files.pythonhosted.org/packages/4d/08/838a4103a240f24d8d87ddf1b3d4eeacdf7270b29a896ccf790d63ae3b5d/dastr-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2e5ed5ccbe95cc00e1cb14a241b858d513deb034d1a5b9bf94b0ea2b833985c",
          "md5": "d7cc52131f35f0fd4f556a529db62f62",
          "sha256": "2b902bb876c82c6d5c7143a8a466340a2ea70edc24e2ea3047a4a334661d17f5"
        },
        "downloads": -1,
        "filename": "dastr-0.2.10.tar.gz",
        "has_sig": false,
        "md5_digest": "d7cc52131f35f0fd4f556a529db62f62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6093,
        "upload_time": "2020-01-24T18:43:40",
        "upload_time_iso_8601": "2020-01-24T18:43:40.662447Z",
        "url": "https://files.pythonhosted.org/packages/a2/e5/ed5ccbe95cc00e1cb14a241b858d513deb034d1a5b9bf94b0ea2b833985c/dastr-0.2.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "378925d93b284d4871e3dfef19ef8f2493febd62859e12e62a8556c5724ef420",
          "md5": "92121e795237cb6e626eb9b4b6b9180d",
          "sha256": "0f2aeb6f4f1cb179a7839516e9cf2c191a9423fbf42edd433d3fb4e945de9a21"
        },
        "downloads": -1,
        "filename": "dastr-0.2.11.tar.gz",
        "has_sig": false,
        "md5_digest": "92121e795237cb6e626eb9b4b6b9180d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6087,
        "upload_time": "2020-01-24T18:56:05",
        "upload_time_iso_8601": "2020-01-24T18:56:05.012795Z",
        "url": "https://files.pythonhosted.org/packages/37/89/25d93b284d4871e3dfef19ef8f2493febd62859e12e62a8556c5724ef420/dastr-0.2.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cc4414c34b8f6e3ac60a4e65058c0fd1be336a8f48f2785aed1605b8cc6c487",
          "md5": "48e1c72ed6c77e63714a0491429544c2",
          "sha256": "1acf416759d63d8fb55911231ff81fced26cc175e28a62e33617fa823522b428"
        },
        "downloads": -1,
        "filename": "dastr-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "48e1c72ed6c77e63714a0491429544c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2627,
        "upload_time": "2019-12-30T22:11:21",
        "upload_time_iso_8601": "2019-12-30T22:11:21.037580Z",
        "url": "https://files.pythonhosted.org/packages/9c/c4/414c34b8f6e3ac60a4e65058c0fd1be336a8f48f2785aed1605b8cc6c487/dastr-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa26bd17572f76ed35c3ad6029fee234a3bd8e316e94aed189c272dbc3a829c7",
          "md5": "bf7fe78d2e2f7be83dc5c6505322399b",
          "sha256": "d19ed174b0159a0ee29123605f37aa6c4e5b81f614cb07f015b22acf666a4e79"
        },
        "downloads": -1,
        "filename": "dastr-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "bf7fe78d2e2f7be83dc5c6505322399b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2693,
        "upload_time": "2019-12-31T20:22:34",
        "upload_time_iso_8601": "2019-12-31T20:22:34.755054Z",
        "url": "https://files.pythonhosted.org/packages/fa/26/bd17572f76ed35c3ad6029fee234a3bd8e316e94aed189c272dbc3a829c7/dastr-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e919d20d1e28572e38e1052cdc9ee283e0cca864d8a8cec74d8378403a30bc1b",
          "md5": "495a0fe3d81a764dafd1c7cd542018d0",
          "sha256": "5c050929b7ef1ce82c8a1e00349a92257e22aaa1d2cec924d7818b1b926930eb"
        },
        "downloads": -1,
        "filename": "dastr-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "495a0fe3d81a764dafd1c7cd542018d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5823,
        "upload_time": "2019-12-31T20:29:50",
        "upload_time_iso_8601": "2019-12-31T20:29:50.520435Z",
        "url": "https://files.pythonhosted.org/packages/e9/19/d20d1e28572e38e1052cdc9ee283e0cca864d8a8cec74d8378403a30bc1b/dastr-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bc78ffe30b1acc40255e950d04b8f2bd6d0d3ed19acd207dacab2bdc222c631",
          "md5": "9ebdd34ab9e51ccef0520f60ae67249b",
          "sha256": "72acda7a8594d21e003eda9ebc98e1a736cebc1c85a50ee51347fd20448bbb3c"
        },
        "downloads": -1,
        "filename": "dastr-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "9ebdd34ab9e51ccef0520f60ae67249b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5911,
        "upload_time": "2020-01-24T15:36:34",
        "upload_time_iso_8601": "2020-01-24T15:36:34.490275Z",
        "url": "https://files.pythonhosted.org/packages/7b/c7/8ffe30b1acc40255e950d04b8f2bd6d0d3ed19acd207dacab2bdc222c631/dastr-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa87713574529b6fedd08ba84c56fa72ce1f75bbcfacbdc585a0c725e45a7b3f",
          "md5": "f94814df89f9abd4a13f1139c06efc30",
          "sha256": "1cffbcd99b07a38ab074a1d23f7288de75aa8cffe763577259090ec8cc630c13"
        },
        "downloads": -1,
        "filename": "dastr-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "f94814df89f9abd4a13f1139c06efc30",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5964,
        "upload_time": "2020-01-24T15:49:11",
        "upload_time_iso_8601": "2020-01-24T15:49:11.018363Z",
        "url": "https://files.pythonhosted.org/packages/fa/87/713574529b6fedd08ba84c56fa72ce1f75bbcfacbdc585a0c725e45a7b3f/dastr-0.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffbd750a61b77f9e93d9e93aff9ad76d41e5505eb6e08d28bad8cee99cc9da02",
          "md5": "76b0fc1eec4f3534ceee0e8875ff47df",
          "sha256": "d3dee09245125597f1c267dbb95a51176a04979c928a90753ad25bea6554dbcd"
        },
        "downloads": -1,
        "filename": "dastr-0.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "76b0fc1eec4f3534ceee0e8875ff47df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5970,
        "upload_time": "2020-01-24T16:24:11",
        "upload_time_iso_8601": "2020-01-24T16:24:11.664309Z",
        "url": "https://files.pythonhosted.org/packages/ff/bd/750a61b77f9e93d9e93aff9ad76d41e5505eb6e08d28bad8cee99cc9da02/dastr-0.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57d0aa6638d811f1e90acc7f2508e36265197acbc00ab55983afc15874ab0ea2",
          "md5": "07e39d5f03038d12a9a64cc982aedce8",
          "sha256": "4bd6205378ce09350d2f192c98084da64a95b0255120c96b95c9742114a11418"
        },
        "downloads": -1,
        "filename": "dastr-0.2.8.tar.gz",
        "has_sig": false,
        "md5_digest": "07e39d5f03038d12a9a64cc982aedce8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5961,
        "upload_time": "2020-01-24T16:47:39",
        "upload_time_iso_8601": "2020-01-24T16:47:39.516543Z",
        "url": "https://files.pythonhosted.org/packages/57/d0/aa6638d811f1e90acc7f2508e36265197acbc00ab55983afc15874ab0ea2/dastr-0.2.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8070af7cc7e98125d226f96a67940ab1b340df6cab81e26a6d663a213bbd700a",
          "md5": "1d58090428ae604ca8f109982257121c",
          "sha256": "ca0c5620e21931dfd518368ec4bc9933e10d9a280ae291336209d704150c599b"
        },
        "downloads": -1,
        "filename": "dastr-0.2.9.tar.gz",
        "has_sig": false,
        "md5_digest": "1d58090428ae604ca8f109982257121c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5967,
        "upload_time": "2020-01-24T16:58:18",
        "upload_time_iso_8601": "2020-01-24T16:58:18.017786Z",
        "url": "https://files.pythonhosted.org/packages/80/70/af7cc7e98125d226f96a67940ab1b340df6cab81e26a6d663a213bbd700a/dastr-0.2.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "378925d93b284d4871e3dfef19ef8f2493febd62859e12e62a8556c5724ef420",
        "md5": "92121e795237cb6e626eb9b4b6b9180d",
        "sha256": "0f2aeb6f4f1cb179a7839516e9cf2c191a9423fbf42edd433d3fb4e945de9a21"
      },
      "downloads": -1,
      "filename": "dastr-0.2.11.tar.gz",
      "has_sig": false,
      "md5_digest": "92121e795237cb6e626eb9b4b6b9180d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6087,
      "upload_time": "2020-01-24T18:56:05",
      "upload_time_iso_8601": "2020-01-24T18:56:05.012795Z",
      "url": "https://files.pythonhosted.org/packages/37/89/25d93b284d4871e3dfef19ef8f2493febd62859e12e62a8556c5724ef420/dastr-0.2.11.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}