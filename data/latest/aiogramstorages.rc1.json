{
  "info": {
    "author": "DIMFLIX",
    "author_email": "dimflix.official@gmail.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "ï»¿\n![enter image description here](https://github.com/DIMFLIX-OFFICIAL/AiogramStorages/blob/main/banner.png?raw=true)\n# Save your data!\n\n**Aiogram-storages** was created to extend the standard fsm_storage options in **aiogram**.\nOur library supports such databases as:\n\n# Installation\n\n    pip install AiogramStorages\n\n# PostgreSQL\n\nSupport for storage with the **PostgreSQL** database is due to the **asyncpg** asynchronous library, which gives a **huge data processing speed**, and, accordingly, the bot itself.\n\nIn order to use it, you need to create an instance of the **PGStorage** class, to which you need to pass the **required parameters (user, password, db_name).** You can also specify additional parameters (host, port).\n\nNext, this instance must be passed to the **Dispatcher.**\n## Example\n\n    from AiogramStorages.storages import PGStorage\n    \n    storage = PGStorage(username='YourUser', password='YourPassword', db_name='YourDbName')  \n    dp = Dispatcher(bot, storage=storage)\n\n## Warning\n\nBy default, **PGStorage** creates three tables in your database named: **aiogram-states**, **aiogram-data**, **aiogram-buckets**.\n\nWe **strongly recommend** that you do **not use these names as the name of the table**, otherwise there may be disagreements.\n\n\n\n# SQLiteStorage\n\n\nSupport for storage with the **SQLite** database is due to the **aiosqlite** asynchronous library, which gives a **huge data processing speed**, and, accordingly, the bot itself.\n\nIn order to use it, you need to create an instance of the **SQLiteStorage** class, to which you need to pass the **required parameters (db_path).**\n\nNext, this instance must be passed to the **Dispatcher.**\n## Example\n\n    from AiogramStorages.storages import SQLiteStorage\n    \n    storage = SQLiteStorage(db_path='your_path')  \n    dp = Dispatcher(bot, storage=storage)\n\n## Warning\n\nBy default, **SQLiteStorage** creates three tables in your database named: **aiogram-states**, **aiogram-data**, **aiogram-buckets**.\n\nWe **strongly recommend** that you do **not use these names as the name of the table**, otherwise there may be disagreements.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/DIMFLIX-OFFICIAL/AiogramStorages/archive/refs/heads/main.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DIMFLIX-OFFICIAL/AiogramStorages",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "AiogramStorages",
    "package_url": "https://pypi.org/project/AiogramStorages/",
    "platform": null,
    "project_url": "https://pypi.org/project/AiogramStorages/",
    "project_urls": {
      "Download": "https://github.com/DIMFLIX-OFFICIAL/AiogramStorages/archive/refs/heads/main.zip",
      "Homepage": "https://github.com/DIMFLIX-OFFICIAL/AiogramStorages"
    },
    "release_url": "https://pypi.org/project/AiogramStorages/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Save your data and states in aiogram bot.Aiogram-storages was created to extend the standard fsm_storage options in aiogram.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17490924,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fe3c922e49f91f654bfc825058bd4c3571e13a27ed65234932dbdca3fc1cb2a",
          "md5": "e357dc4003003c75ccdfb9612910cd8e",
          "sha256": "b217b04ea0a03f33638445b892a5bbfc773c6fb0d8a55029cd71e5219dcc770e"
        },
        "downloads": -1,
        "filename": "AiogramStorages-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e357dc4003003c75ccdfb9612910cd8e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4080,
        "upload_time": "2023-03-29T08:44:14",
        "upload_time_iso_8601": "2023-03-29T08:44:14.302666Z",
        "url": "https://files.pythonhosted.org/packages/3f/e3/c922e49f91f654bfc825058bd4c3571e13a27ed65234932dbdca3fc1cb2a/AiogramStorages-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3fe3c922e49f91f654bfc825058bd4c3571e13a27ed65234932dbdca3fc1cb2a",
        "md5": "e357dc4003003c75ccdfb9612910cd8e",
        "sha256": "b217b04ea0a03f33638445b892a5bbfc773c6fb0d8a55029cd71e5219dcc770e"
      },
      "downloads": -1,
      "filename": "AiogramStorages-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e357dc4003003c75ccdfb9612910cd8e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4080,
      "upload_time": "2023-03-29T08:44:14",
      "upload_time_iso_8601": "2023-03-29T08:44:14.302666Z",
      "url": "https://files.pythonhosted.org/packages/3f/e3/c922e49f91f654bfc825058bd4c3571e13a27ed65234932dbdca3fc1cb2a/AiogramStorages-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}