{
  "info": {
    "author": "zencore",
    "author_email": "dobetter@zencore.cn",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# django-yearmonth-widget\n\nWe only care about year and month for DateField, and always set the day to 1, it's a Django Widget allow you select the year and month. And now we support CharField backend.\n\n## Install\n\n```shell\npip install django-yearmonth-widget\n```\n\n## Usage\n\n**pro/settings.py**\n\n```python\nINSTALLED_APPS = [\n    ...\n    'django_static_jquery3',\n    'django_yearmonth_widget',\n    ...\n]\n```\n\n**app/admin.py**\n\n```python\nfrom django.contrib import admin\nfrom django import forms\nfrom django_yearmonth_widget.widgets import DjangoYearMonthWidget\nfrom .models import Book\n\n\nclass BookForm(forms.ModelForm):\n    class Meta:\n        model = Book\n        exclude = []\n        widgets = {\n            \"published_yearmonth\": DjangoYearMonthWidget(),\n        }\n\nclass BookAdmin(admin.ModelAdmin):\n    form = BookForm\n    list_display = [\"name\", \"published_time\"]\n\nadmin.site.register(Book, BookAdmin)\n```\n\n**Note:**\n\n1. Create a ModelForm, and set new widget for the field.\n\n## DjangoYearMonthWidget Init parameters\n\n- years: list of year numbers. Default to None.\n    - If years provided, parameters prev_years and next_years are ignored.\n- start_year: Default to None. Use to set the beginning of year range, have higher priority than prev_years.\n- end_year: Default to None. Use to set the ending of year range, have higher priority than next_years.\n- prev_years: int, default to 10.\n- next_years: int, default to 0.\n    - Use prev_years, next_years to set the year range based on today's year.\n    - prev_years means the begining year is now.year - prev_years. If today's year is 2020 and the prev_years=10, so that the final years is start at 2010.\n    - next_years means the ending year is now.year + next_years. If today's year is 2020 and the next_years=10, so that the final years is end at 2030.\n- day_value: int, default to 1.\n- value_dumps: string template, e.g. `%(year)04d-%(month)02d-%(day)02d`\n- value_loads: regex parse the string value, e.g. `(?P<year>\\d{4})-(?P<month>\\d{1,2})-(?P<day>\\d{1,2})`\n    - value_dumps and value_loads must matchs with each other, it means value_loads regex CAN parse string dumped with value_dumps.\n    - value_dumps MUST in `%(xx)d` so that both python and javascript can do the string formatting.\n\n## Releases\n\n### v0.2.1 2020/03/27\n\n- Fix inline form rendering problem, because it contains a NONE value year-month for inline form row template.\n- Change event listenning method to $.to, so that the widget will work in inline form.\n\n### v0.2.0 2020/03/16\n\n- Add start_year & end_year parameters. The parameters start_year and end_year have higher priority than prev_years and next_years.\n- Add support for CharField. You must provide value_dumps and value_loads for CharField backend.\n\n### v0.1.0 2020/03/10\n\n- First release.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "django admin extentions,django yearmonth widget",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-yearmonth-widget",
    "package_url": "https://pypi.org/project/django-yearmonth-widget/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-yearmonth-widget/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/django-yearmonth-widget/0.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "We only care about year and month for DateField, and always set the day to 1, it's a Django Widget allow you select the year and month. And now we support CharField backend.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6896353,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dae078a58c33c402d7d753f0fe8b0cfcdcea6010e3e3597e8b048ba5e631c456",
          "md5": "f37390ba84b37e44d6c2e6a88ca4e7b3",
          "sha256": "3f1803d5c7ccf63afde3cb742d649f60f5840947ceac9701f99a08d4969d035d"
        },
        "downloads": -1,
        "filename": "django-yearmonth-widget-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f37390ba84b37e44d6c2e6a88ca4e7b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5101,
        "upload_time": "2020-03-10T09:49:28",
        "upload_time_iso_8601": "2020-03-10T09:49:28.302058Z",
        "url": "https://files.pythonhosted.org/packages/da/e0/78a58c33c402d7d753f0fe8b0cfcdcea6010e3e3597e8b048ba5e631c456/django-yearmonth-widget-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6bffe955b73425e578d562351aca9451aeb45744b43bd29b053088601b05a954",
          "md5": "f0f4d8712a3a77709053ada1978ebaf8",
          "sha256": "47b4061967e39e6954e7376a105432b6c5291fc9838e768910f9bf4aaec3496e"
        },
        "downloads": -1,
        "filename": "django-yearmonth-widget-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f0f4d8712a3a77709053ada1978ebaf8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7982,
        "upload_time": "2020-03-17T08:29:24",
        "upload_time_iso_8601": "2020-03-17T08:29:24.048219Z",
        "url": "https://files.pythonhosted.org/packages/6b/ff/e955b73425e578d562351aca9451aeb45744b43bd29b053088601b05a954/django-yearmonth-widget-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a4b2d78f16539112c0fd4cb035d5dcd92a5ba55871e4f6e5f2fbf1187288a83",
          "md5": "0b85eaa473c8d5e357c6ee772f95f408",
          "sha256": "9c9cd940386c426d33cdd14ba62a8f6639c1cc23452e62a3703c38bb6d7b8b8e"
        },
        "downloads": -1,
        "filename": "django-yearmonth-widget-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0b85eaa473c8d5e357c6ee772f95f408",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8240,
        "upload_time": "2020-03-27T14:00:09",
        "upload_time_iso_8601": "2020-03-27T14:00:09.977879Z",
        "url": "https://files.pythonhosted.org/packages/3a/4b/2d78f16539112c0fd4cb035d5dcd92a5ba55871e4f6e5f2fbf1187288a83/django-yearmonth-widget-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a4b2d78f16539112c0fd4cb035d5dcd92a5ba55871e4f6e5f2fbf1187288a83",
        "md5": "0b85eaa473c8d5e357c6ee772f95f408",
        "sha256": "9c9cd940386c426d33cdd14ba62a8f6639c1cc23452e62a3703c38bb6d7b8b8e"
      },
      "downloads": -1,
      "filename": "django-yearmonth-widget-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0b85eaa473c8d5e357c6ee772f95f408",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8240,
      "upload_time": "2020-03-27T14:00:09",
      "upload_time_iso_8601": "2020-03-27T14:00:09.977879Z",
      "url": "https://files.pythonhosted.org/packages/3a/4b/2d78f16539112c0fd4cb035d5dcd92a5ba55871e4f6e5f2fbf1187288a83/django-yearmonth-widget-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}