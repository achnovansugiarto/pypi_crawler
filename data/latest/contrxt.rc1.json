{
  "info": {
    "author": "Andrea Seveso",
    "author_email": "andrea.seveso@unimib.it",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<img src=\"https://github.com/Crisp-Unimib/ContrXT/blob/master/img/contrxt_logo.jpeg\" alt=\"drawing\" width=\"150\"/>\n\n# ContrXT\n***A global, model-agnostic, contrastive explainer for any text classifier***\n\n## Why do we might need ContrXT?\nImagine we have a text classifier, let's say M1, that is retrained with new data generating M2.\n\n1. Can we estimate to what extent M2 classifies new data coherently to the past predictions made by the previous model M1?\n2. Why does the criteria used by M1 result in class _c_, but M2 does not use the same criteria to classify as _c_ anymore?\n3. Can we use natural language to explain the differences between models making them more comprehensible to final users?\n\n## What ContrXT can do?\n\nContrXT is about **explaining how a classifier changed its predictions through time. Also, it can be used to explain the differences in the classification behaviours of two distinct classifiers at a time.**\n\nContrXT takes as input the predictions of two distinct classifiers M1 and M2. Then, it traces the decision criteria of both classifiers by encoding the changes in the decision logic through Binary Decision Diagrams. Then (ii) it provides \"global, model-agnostic, time-contrastive (T-contrast) \"explanations in natural language, estimating why -and to what extent- the model has modified its behaviour over time.\n\nDetails on how ContrXT works can be found in [this paper](https://www.sciencedirect.com/science/article/pii/S1566253521002426)\nBelow a link to the demo video.\n[![Demo](https://img.youtube.com/vi/pwQdinaXmDI/hqdefault.jpg)](https://www.youtube.com/watch?v=Dnw2M995lus \"Demo\")\n\n\n## What ContrXT needs as input?\nContrXT takes as input the _\"feature data\"_ (can be training or test, labelled or unlabelled)  and the corresponding _\"labels\"_ predicted by the classifier. This means you don't need to wrap ContrXT within your code at all!\nAs optional parameters, the user can specify:\n- the coverage of the dataset to be used (default is 100%); otherwise, a sampling procedure is used;\n- to obtain explanations either for the multiclass case (default: one class vs all) or the two-class case (class vs class, by restricting the surrogate generation  to those classes);\n\n## What ContrXT provides as output?\nContrXT provides two outputs:\n### (1) Indicators to estimate which classes are changing more!\nA picture estimating the differences among the classification criteria of both classifiers M1 and M2, that are **Add** and **Del** values. To estimate the degree of changes *among classes*, ContrXT also provides **add_global** and ***del_global***. In the case of a multiclass classifier,  ContrXT suggests focusing on classes that went through major alterations from M1 to M2, distinguishing between three groups according to their Add and Del values being above or below the 75th percentile.\n\n![](https://github.com/Crisp-Unimib/ContrXT/blob/master/img/Add_Del_Magnitude_20N.png)\n\nThe picture above is generated by ContrXT automatically. It provides indicators of changes in classification criteria from model M1 to M2 for each _20newsgroup_ class, using a DT as a surrogate (0.8 fidelity) to explain two BERT classifiers.\n### (2) Natural Language Explanations for each class\nThe indicators allow the user to concentrate on classes that have changed more. For example, one might closely look at class _atheism_ as for this class, the number of deleted paths is higher than the added ones\n\n![](https://github.com/Crisp-Unimib/ContrXT/blob/master/img/alt.atheism.png)\n\nThe Natural Language Explanation for _atheism_ reveals the presence of the word _bill_ leads the retrained classifier M2 to assign the label _atheism_ to a specific record, whilst the presence of such a feature was not a criterion for the previous classifier M1.\nConversely, the explanation shows that M1 used the feature _keith_ to assign the label, whilst M2 discarded this rule.\n\nBoth terms refer to the name of the posts' authors: _Bill_'s posts are only contained within the dataset used to retrain whilst _Keith_'s ones are more frequent in the initial dataset rather than the second one (dataset taken from _Jin, P., Zhang, Y., Chen, X., & Xia, Y. Bag-of-embeddings for text classification. In IJCAI-2016_).\n\nFinally, M2 discarded the rule _having political atheist_ that was sufficient for M1 for classifying the instance.\n\n## Do explanations lead to new insights?\nOur experiments reveal Add/Del is not correlated with the models' accuracy.\nFor example, we assessed a correlation between _Add/Del_ and the change in performance of the classifiers in terms of F1-score on _20newsgroup_. To this end, we computed the Spearman's \\rho between the _Add_ of every class and its change in f1-score between the two classifiers.\nThe correlation values are not significant, p=0.91$, ro=-0.11 for the _Add_ and p=0.65, ro=-0.04 for _Del_ indicator. This confirms that Add/Del are not related to the f1-score of the  trained model. Instead, they estimate its behaviour change handling new data, considering which rules have been added or deleted to the past.\n\n## Installation\n\nTo install ContrXT, clone this repository and then run in the main directory:\n\n```\npip install .\n```\n\nThe PyEDA package is required but has not been added to the dependencies.\nThis is due to installation errors on Windows. If you are on Linux or Mac, you\nshould be able to install it by running:\n\n```\npip3 install pyeda\n```\n\nHowever, if you are on Windows, we found that the best way to install is through\nChristophe Gohlke's [pythonlibs page](https://www.lfd.uci.edu/~gohlke/pythonlibs/#pyeda).\nFor further information, please consult the official PyEDA\n[installation documentation](https://pyeda.readthedocs.io/en/latest/install.html).\n\nTo produce the PDF files, a Graphviz installation is also required.\nFull documentation on how to install Graphviz on any platform is available\n[here](https://graphviz.org/download/).\n\n## Tutorials and Usage\n\nA complete example of ContrXT usage is provided in the notebook [\"ContrXT Demo\"](https://github.com/Crisp-Unimib/ContrXT/blob/master/ContrXT%20Demo.ipynb) inside of the main repository folder. A notebook example with ML model training is also available in this repository, which can also be accessed in this [Google Colab notebook](https://colab.research.google.com/drive/1hb4KN0SYxdj9SaExqqFGmAXAIyUnBVnA?usp=sharing).\nComplete documentation of the package functions will also be available shortly.\n\n## Running tests\n\nBasic unit tests are provided. To run them, after installation, execute\nthe following command while in the main directory:\n\n```\npython -m unittest discover\n```\n\n## ContrXT as a Service through REST-API\nContrXT provides REST-API to generate explanations for any text classifier.  Our API enables users to get the outcome of ContrXT as discussed above (i.e., Indicators and Natural language explanations) with no need to install or configure the tool locally. The required input from a user are (i) the training data and (ii) the predicted labels by the classifier of their choice.\nUsers are required to upload two csv files for two datasets for which the schema is shown in the following JSON.\n```\nschema = {\n         \"type\" : \"csv\",\n         \"columns\" : {\n             \"corpus\" : {\"type\" : \"string\"},\n             \"predicted\" : {\"type\" : \"string\"},\n         },\n     }\n```\nThe ContrXT's API can be invoked using a few lines code shown in Code below.\n```\nimport requests, io\nfrom zipfile import ZipFile\nfiles = {\n    'time_1': open(t1_csv_path, 'rb'),\n    'time_2': open(t2_csv_path, 'rb')\n}\nr = requests.post('[URLandPort]', files=files)\nresult = ZipFile(io.BytesIO(r.content))\n```\n**Notice**. To avoid improper use of ContrXT'server resources, we ask users to ask for free credentials through this [link](https://tinyurl.com/contrxt-request-form).\n\n## Limitation\nCurrently, we support explaining predictions for text classifiers only, but we are working to extend it to deal with tabular data.\n\n## References\nTo cite ContrXT please refer to [the following paper](https://www.sciencedirect.com/science/article/pii/S1566253521002426)\n```\n@article{ContrXT,\n\tauthor = {Lorenzo Malandri and Fabio Mercorio and Mario Mezzanzanica and Andrea Seveso and Navid Nobani},\n\ttitle = {ContrXT: Generating Contrastive Explanations from any Text Classifier},\n\tyear = {2021},\n\tpublisher = {Elsevier},\n\tissn = {1566-2535},\n    year = {2021},\n\tissn = {1566-2535},\n\tdoi = {https://doi.org/10.1016/j.inffus.2021.11.016},\n\turl = {https://www.sciencedirect.com/science/article/pii/S1566253521002426},\n\tjournal = {Information Fusion}\n}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Crisp-Unimib/ContrXT",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "contrxt",
    "package_url": "https://pypi.org/project/contrxt/",
    "platform": "",
    "project_url": "https://pypi.org/project/contrxt/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Crisp-Unimib/ContrXT/issues",
      "Homepage": "https://github.com/Crisp-Unimib/ContrXT"
    },
    "release_url": "https://pypi.org/project/contrxt/0.0.1/",
    "requires_dist": [
      "pandas",
      "pydot",
      "scikit-learn",
      "tqdm",
      "stopit",
      "graphviz",
      "matplotlib",
      "apyori"
    ],
    "requires_python": ">=3.6",
    "summary": "ContrXT",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12301944,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1b396b6ac0d4bb2dd0bf00cc5ebd79af577a445332322990a271ecf5c82da70",
          "md5": "6bd47d95279c643ba0b29ec411f009c1",
          "sha256": "7c91d6277d492ebd120830d75be132d037d5ce8a85af5152e9669926fd49fc0c"
        },
        "downloads": -1,
        "filename": "contrxt-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6bd47d95279c643ba0b29ec411f009c1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 37944,
        "upload_time": "2021-12-14T16:11:22",
        "upload_time_iso_8601": "2021-12-14T16:11:22.050178Z",
        "url": "https://files.pythonhosted.org/packages/a1/b3/96b6ac0d4bb2dd0bf00cc5ebd79af577a445332322990a271ecf5c82da70/contrxt-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0bd6ed35100ba730a81831bb07d3dd5c3ea946d6830a7c90b9cb1db837d84b68",
          "md5": "8a0045dbbb856e21d27c92fbde3866da",
          "sha256": "86f3dd68dad1b7944106791d2a31489bb74aea583e87d3dcf138906a2c5e5988"
        },
        "downloads": -1,
        "filename": "contrxt-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8a0045dbbb856e21d27c92fbde3866da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 37398,
        "upload_time": "2021-12-14T16:11:23",
        "upload_time_iso_8601": "2021-12-14T16:11:23.153946Z",
        "url": "https://files.pythonhosted.org/packages/0b/d6/ed35100ba730a81831bb07d3dd5c3ea946d6830a7c90b9cb1db837d84b68/contrxt-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a1b396b6ac0d4bb2dd0bf00cc5ebd79af577a445332322990a271ecf5c82da70",
        "md5": "6bd47d95279c643ba0b29ec411f009c1",
        "sha256": "7c91d6277d492ebd120830d75be132d037d5ce8a85af5152e9669926fd49fc0c"
      },
      "downloads": -1,
      "filename": "contrxt-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6bd47d95279c643ba0b29ec411f009c1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 37944,
      "upload_time": "2021-12-14T16:11:22",
      "upload_time_iso_8601": "2021-12-14T16:11:22.050178Z",
      "url": "https://files.pythonhosted.org/packages/a1/b3/96b6ac0d4bb2dd0bf00cc5ebd79af577a445332322990a271ecf5c82da70/contrxt-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0bd6ed35100ba730a81831bb07d3dd5c3ea946d6830a7c90b9cb1db837d84b68",
        "md5": "8a0045dbbb856e21d27c92fbde3866da",
        "sha256": "86f3dd68dad1b7944106791d2a31489bb74aea583e87d3dcf138906a2c5e5988"
      },
      "downloads": -1,
      "filename": "contrxt-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8a0045dbbb856e21d27c92fbde3866da",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 37398,
      "upload_time": "2021-12-14T16:11:23",
      "upload_time_iso_8601": "2021-12-14T16:11:23.153946Z",
      "url": "https://files.pythonhosted.org/packages/0b/d6/ed35100ba730a81831bb07d3dd5c3ea946d6830a7c90b9cb1db837d84b68/contrxt-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}