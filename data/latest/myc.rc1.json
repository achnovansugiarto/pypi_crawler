{
  "info": {
    "author": "Jacob Zhitomirsky",
    "author_email": "bizarrecake@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Mycelium Runtime Library\n========================\n\n### What is Mycelium?\n\nMycelium is a framework that helps you easily write highly scalable (microservice) applications.\n\nMycelium automatically generates **Terraform** from your code, and handles load balancing for you.\n\nThe goal is to write your code without thinking about the infrastructure as if it was a simple monolithic application, and then have Mycelium decide on how to split your app into components, handle load balancing, communication between components, etc...\n\n### How to use this library?\nImport this library into your app and use it to annotate your code with service hints/constraints.\n\nThe more this framework evolves, the less help you will have to give in the form annotations.\n\nFinally, invoke the [CLI](https://github.com/BizarreCake/myccli) (`myc` command) and watch it automatically generate Terraform for you (and optionally deploy it for you).\n\n### Example Usage\n\nCreate an empty Poetry application with `myc` (runtime) as dependency and `myccli` (compiler) as a development dependency.\n\nAdd some package (e.g. `test_app`) to your project with `__init__.py` containing:\n\n```python\nfrom myc import Mycelium\n\napp = Mycelium()\nfoo_service = app.create_service(\"foo\")\nbar_service = app.create_service(\"bar\")\n\n@foo_service.fastapi.get(\"/\")\ndef foo():\n    return f'The answer is: {bar()}'\n\n@bar_service.fastapi.get(\"/\")\ndef bar():\n    return 42\n```\n\nThen run `myc compile test_app:app` to generate Terraform, followed by `myc deploy` to deploy your app!\n\nWhat will happen:\n* A Dockerfile will be generated for each service\n* Docker images will be built and pushed to a private ECR repository\n  * *Temporary caveat*: The framework expects you to have a repository called `mycelium` in your AWS region of choice (an update will come soon to have this repo created automatically)\n* Two ECS services will be created in a new cluster for `foo` and `bar` services.\n* The call to `bar()` in `foo` function will be transformed to an HTTP get request!\n\n### Limitations\n\nThis project is in its earliest stages, and feature count is limited at the moment.\nThe framework (currently) assumes projects to use Poetry as a package manager \n\n#### Currently supported features:\n* AWS as a cloud provider\n* ECS as a platform in AWS (Lambda support will come very soon)\n* Poetry as the package manager\n\nMore will come soon!\n\n### Upcoming Features\n\n* Dynamic and static load measurements to determine optimal load balancing strategy\n* Support more cloud providers: Google Cloud, Azure, etc...\n* Support more service platforms: AWS Lambda, EC2, etc...\n* Support more package managers other than Poetry\n* Flexible serialization/deserialization strategies\n* Command to launch dashboard to watch:\n  * Service topology\n  * Aggregated logs\n  * Load balancing metrics",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/BizarreCake/myc",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "myc",
    "package_url": "https://pypi.org/project/myc/",
    "platform": null,
    "project_url": "https://pypi.org/project/myc/",
    "project_urls": {
      "Homepage": "https://github.com/BizarreCake/myc",
      "Repository": "https://github.com/BizarreCake/myc"
    },
    "release_url": "https://pypi.org/project/myc/0.1.2/",
    "requires_dist": [
      "requests (>=2.28.1,<3.0.0)",
      "fastapi (>=0.85.0,<0.86.0)",
      "boto3 (>=1.24.80,<2.0.0)",
      "dnspython (>=2.2.1,<3.0.0)",
      "magnum (>=15.0.0,<16.0.0)"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15426501,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8580d196da6bb1ad1eb135e544858437769e29a4439080531050adf4eb53439b",
          "md5": "0a342b5892be72fe0a2634f5651b940b",
          "sha256": "78f0fa5fc669d33a3d72d27a64b361e3e79f1f5585a952e6f37c73d0a13abc26"
        },
        "downloads": -1,
        "filename": "myc-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a342b5892be72fe0a2634f5651b940b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 12323,
        "upload_time": "2022-10-16T12:03:43",
        "upload_time_iso_8601": "2022-10-16T12:03:43.868755Z",
        "url": "https://files.pythonhosted.org/packages/85/80/d196da6bb1ad1eb135e544858437769e29a4439080531050adf4eb53439b/myc-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3acb007a8541eb0f5340b13ebf205772e9c68e79ce31afbe325b669b6fa6dd1f",
          "md5": "c53f9bdab36167e07b7cae96c731ea63",
          "sha256": "e9e0e5fae92cf127c8fbfffc763e19234c757599d4ce7dc4f2d131c7963916bf"
        },
        "downloads": -1,
        "filename": "myc-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c53f9bdab36167e07b7cae96c731ea63",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 10906,
        "upload_time": "2022-10-16T12:03:46",
        "upload_time_iso_8601": "2022-10-16T12:03:46.090319Z",
        "url": "https://files.pythonhosted.org/packages/3a/cb/007a8541eb0f5340b13ebf205772e9c68e79ce31afbe325b669b6fa6dd1f/myc-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8580d196da6bb1ad1eb135e544858437769e29a4439080531050adf4eb53439b",
        "md5": "0a342b5892be72fe0a2634f5651b940b",
        "sha256": "78f0fa5fc669d33a3d72d27a64b361e3e79f1f5585a952e6f37c73d0a13abc26"
      },
      "downloads": -1,
      "filename": "myc-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0a342b5892be72fe0a2634f5651b940b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 12323,
      "upload_time": "2022-10-16T12:03:43",
      "upload_time_iso_8601": "2022-10-16T12:03:43.868755Z",
      "url": "https://files.pythonhosted.org/packages/85/80/d196da6bb1ad1eb135e544858437769e29a4439080531050adf4eb53439b/myc-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3acb007a8541eb0f5340b13ebf205772e9c68e79ce31afbe325b669b6fa6dd1f",
        "md5": "c53f9bdab36167e07b7cae96c731ea63",
        "sha256": "e9e0e5fae92cf127c8fbfffc763e19234c757599d4ce7dc4f2d131c7963916bf"
      },
      "downloads": -1,
      "filename": "myc-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c53f9bdab36167e07b7cae96c731ea63",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 10906,
      "upload_time": "2022-10-16T12:03:46",
      "upload_time_iso_8601": "2022-10-16T12:03:46.090319Z",
      "url": "https://files.pythonhosted.org/packages/3a/cb/007a8541eb0f5340b13ebf205772e9c68e79ce31afbe325b669b6fa6dd1f/myc-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}