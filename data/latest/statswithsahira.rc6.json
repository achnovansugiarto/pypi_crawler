{
  "info": {
    "author": "Sahira Sheikh",
    "author_email": "<sheikh_sahira1703@hotmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "# StatsWithSahira\n\nThis is a python package to make your lives easier by using python code to do statistical problems. \n\n## Installation\n\n```\npip install StatsWithSahira\n```\n\n## Import \n```python\n\n#You can import the needed functionalities as per your needs\n\nfrom StatsWithSahira import Mean\nfrom StatsWithSahira import Median\nfrom StatsWithSahira import Mode\nfrom StatsWithSahira import StandardDeviation\nfrom StatsWithSahira import Skewness\nfrom StatsWithSahira import UnivariateRegression\nfrom StatsWithSahira import MultiVariateRegression\n```\n\n\n## Usage \n\n### Using Mean functionality\n```python\n# Reading the dataframe For continuous series' \nprint('For continuous series'')\nmean_df = pd.read_csv('https://raw.githubusercontent.com/sheikh-sahira1703/data/main/mean.csv')\nmean_cont = Mean(data=mean_df, x_col='X', f_col='F') # Creating an instance of the mean class\nmean_cont.print_mean_from_ci() #Prints the mean for the continuous series\n\n# Reading the dataframe for the discrete series \nprint('\\n')\nprint('For discrete series')\ndiscrete_df = pd.read_csv(\"https://raw.githubusercontent.com/sheikh-sahira1703/data/main/mean_discrete.csv\")\nmean_discrete = Mean(data=discrete_df, x_col=\"X\", f_col=\"F\") # Creating the instance of the mean class \nmean_discrete.print_mean_discrete() #Printing the mean for the discrete series\n\n#Generating data for the continuous series \nprint('\\n')\nprint('For individual series')\nseries = [i for i in range(1, 51)]\nMean.print_mean_individual(series) # Calling the method to print the mean of individual series\n```\n\n\n### Using the Median functionality\n```python\n# Reading the dataframe for the continuous series \nprint('For continuous series')\nmedian_cont = pd.read_csv(\"https://raw.githubusercontent.com/sheikh-sahira1703/data/main/median.csv\")\nmedian_continuous = Median(data=median_cont, x_col=\"X\", f_col=\"F\") #Creating an instance of the median class\nmedian_continuous.print_df() #Printing the dataframe with the necessary details for finding the median of continuous series\nmedian_continuous.print_median_continuous() #Printing the median of the continuous series with necessary details\nmedian_continuous.print_quartiles() #Printing the quartiles of the continuous series  with the necessary details\n\n#Reading the dataframe for the discrete series\nprint('\\n')\nprint('For discrete series') \nmedian_disc = pd.read_csv(\"https://raw.githubusercontent.com/sheikh-sahira1703/data/main/median_discrete.csv\")\nmedian_discrete = Median(data=median_disc, x_col=\"X\", f_col=\"F\") #Creating an instance of the median clas\nmedian_discrete.print_df() #Printing the dataframe with the necessary details for finding the median of discrete series\nmedian_discrete.print_median_discrete() #Printing the median of the discrete series with necessary details\nmedian_discrete.print_quartiles_discrete() #Printing the quartiles of the discrete series with necessary details\n\n#Reading the dataframe for open ended intervals \nprint('\\n')\nprint('For open ended series')\ndf_open_ended = pd.read_csv(\"https://raw.githubusercontent.com/sheikh-sahira1703/data/main/open_ended.csv\")\nmedian_open_ended = Median(data=df_open_ended, x_col=\"age\", f_col=\"freq\") #Creating an instance of the median clas\nmedian_open_ended.print_quartiles_open_ended() #Printing the quartiles of the open ended series series with necessary details\n\n#Initialising the individual series for finding median\nprint('\\n')\nprint('For individual series')\nmy_list_median = [i for i in range(1,100)]\nMedian.print_median_individual(my_list_median) #calculating the median\n```\n\n### Using the Mode functionality\n```python\n#Reading the dataframe for finding the mode of continuous series \nprint('For continuous series')\nmode_continuous = pd.read_csv(\"https://raw.githubusercontent.com/sheikh-sahira1703/data/main/mode.csv\")\nmode_cont = Mode(data=mode_continuous, x_col=\"X\", f_col=\"F\") #Creating instance of Mode class\nmode_cont.print_mode_from_ci() #Printing the mode of the continuous series with necessary details \n\n#Reading the dataframe for finding the mode of discrete series \nprint('\\n')\nprint('For discrete series')\nmode_disc = pd.read_csv(\"https://raw.githubusercontent.com/sheikh-sahira1703/data/main/mode_discrete.csv\")\nmode_discrete = Mode(data=mode_disc,x_col=\"X\", f_col=\"F\") #Creating instance of Mode class\nmode_discrete.print_mode_discrete() #Printing the mode of the discrete series with necessary details\n\n#Initialising the individual series for finding mode\nprint('\\n')\nprint('For individual series')\nmy_mode = [1,1,5,3,2,9,4,56,4,8,4,5,78,879,1,3,4,5,8,6,4]\nMode.print_mode_individual(my_mode) #calculating the mode\n```\n\n### Using the StandardDeviation functionality\n```python\n#Reading the dataframe for finding the standard deviation of continuous series \nprint('For continuous series')\nstdev_cont = pd.read_csv(\"https://raw.githubusercontent.com/sheikh-sahira1703/data/main/stdev_cont.csv\")\nstandardDeviation = StandardDeviation(data=stdev_cont, x_col=\"X\", f_col=\"F\") #Creating instance of StandardDeviation class\nstandardDeviation.print_stdev_cont() #Printing the standard deviation of the continuous series with necessary details\n\n#Reading the dataframe for finding the standard deviation of discrete series \nprint('\\n')\nprint('For discrete series')\nstdev_disc = pd.read_csv(\"https://raw.githubusercontent.com/sheikh-sahira1703/data/main/stdev_discrete.csv\")\ndiscreteStdev = StandardDeviation(data=stdev_disc, x_col=\"X\", f_col=\"F\") #Creating instance of StandardDeviation class\ndiscreteStdev.print_stdev_discrete() #Printing the standard deviation of the discrete series with necessary details \n\n#Generating random data for finding standard deviation of individual series \nprint('\\n')\nprint('For individual series')\nmyList = [5,7,9,3,1,4,6,8,2,10]\nindividual_stdev = StandardDeviation.print_stdev_individual(myList) #Printing the standard deviation of individual series with necessary details\n```\n\n### Using the Skewness functionality\n```python\n#Reading the dataframe for finding the skewness of continuous series \nprint('For continuous series')\nskew_continuous = pd.read_csv(\"https://raw.githubusercontent.com/sheikh-sahira1703/data/main/skew_cont.csv\")\nskew_cont = Skewness(data=skew_continuous, x_col=\"X\", f_col=\"F\")  #Creating instance of Skewness class\nskewness_cont = skew_cont.print_skewness_continuous() #Printing the skewness of the continuous series with necessary details\n\n#Reading the dataframe for finding the skewness of open ended series \nprint('\\n')\nprint('For open ended series')\nskew_open = pd.read_csv(\"https://raw.githubusercontent.com/sheikh-sahira1703/data/main/open_ended.csv\")\nskew_open_ended = Skewness(data=skew_open, x_col=\"age\", f_col=\"freq\") #Creating instance of Skewness class\nskewness_open_ended = skew_open_ended.print_skewness_open_ended() #Printing the skewness of the open ended series with necessary details\n\n#Reading the dataframe for finding the skewness of discrete series\nprint('\\n')\nprint('For discrete series')\nskew_disc = pd.read_csv(\"https://raw.githubusercontent.com/sheikh-sahira1703/data/main/skew_discrete.csv\")\nskew_discrete = Skewness(data=skew_disc, x_col=\"X\", f_col=\"F\") #Creating instance of Skewness class\nskewness_discrete = skew_discrete.print_skewness_discrete() #Printing the skewness of the continuous series with necessary details\n\n#Initialising the series for finding skewness\nprint('\\n')\nprint('For individual series')\nmy_skew = [i for i in range(100)]\nSkewness.print_skewness_individual(my_skew) #calculating the skewness\n```\n\n### Using the UnivariateRegression functionality \n\n```python\n#Reading the dataset for Univariate regression \ndata_uni = pd.read_csv(\"https://raw.githubusercontent.com/sheikh-sahira1703/data/main/Popu-profit.csv\")\nX = data_uni[\"col1\"].values #storing the x values \ny = data_uni[\"col2\"].values #storing the y values \nreg = UnivariateRegression(X, y) #Creating an instance of UnivariateRegression class \nalpha, beta = reg.calculate_coef() #Calculating the coefficients of the regression\nprint(f\"Alpha is {alpha}\\nBeta is {beta}\")\neqn = reg.print_equation() #Printing the regression equation \nprint(eqn)\npred = reg.predict(X) #Predicting based on our regression \nstd_err = reg.standard_error() #Calculating standard error \nprint(f\"The standard error is {std_err}\")\nfigure = reg.plot_data(title='Regression using own function', xlabel='X', ylabel='Y', figsize=(16, 6)) #Plotting the data\nplt.show()\ncomparison_fig, eqn = reg.compare(figsize=(16, 6)) #Comparing our regression model with StatsModels and SciKitLearn\nprint(eqn)\nplt.show()\nr_squared = reg.find_r_squared() #Calculating R squared\nprint(f\"The value of R^2 is {r_squared}\")\nadjusted_r_squared = reg.find_adjusted_r_squared() #Calculating adjusted R squared \nprint(f\"The adjusted R^2 is {adjusted_r_squared}\")\n```\n\n### Using the MultiVariateRegression functionality\n```python\n#Reading the dataset for Multivariate regression \ndata_multi = pd.read_csv(\"https://raw.githubusercontent.com/sheikh-sahira1703/data/main/multi-regression.csv\")\nregressor = MultiVariateRegression(data_multi) #Creating an instance of Multivariateregression class\ncoef = regressor.calculate_coef() #Calculating the coefficients of the regression\nprint(f\"The coefficients are {coef}\")\nr_squared = regressor.calculate_r_squared() #Calculating R squared\nprint(f\"R squared {r_squared}\")\nadj_r_sq = regressor.calculate_adjusted_r_squared()\nprint(f\"Adjusted r squared {adj_r_sq}\") #Calculating adjusted R squared \nregressor.compare() #Comparing our regression model with StatsModels and SciKitLearn\n```\n\n\nGithub profile: [Github profile](https://github.com/sheikh-sahira1703 \"Github profile\")\n\nGithub repository of the package: [Github repository of the package](https://github.com/sheikh-sahira1703/StatsWithSahira \"Github repository of the package\")\n\nAuthor email: [Sahira Sheikh](mailto:sheikh_sahira1703@hotmail.com)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,statistics,made,easy,mean,median,mode,standard deviation,skewness",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "StatsWithSahira",
    "package_url": "https://pypi.org/project/StatsWithSahira/",
    "platform": "",
    "project_url": "https://pypi.org/project/StatsWithSahira/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/StatsWithSahira/0.0.7/",
    "requires_dist": [
      "statsmodels",
      "numpy",
      "pandas",
      "sklearn",
      "matplotlib"
    ],
    "requires_python": "",
    "summary": "Making statistics easier with python",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9502061,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6ca2b1faa9c8b028ac549dd30148b4050901cb4541ebe1d6ca81ffe89de0057",
          "md5": "46058c70fbe8a0882271fc35ef42057d",
          "sha256": "2ff33e219862fc3807e52105ab46111ff8d24a17b7248041b09ca0e2d91751ad"
        },
        "downloads": -1,
        "filename": "StatsWithSahira-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46058c70fbe8a0882271fc35ef42057d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8256,
        "upload_time": "2021-02-13T15:25:30",
        "upload_time_iso_8601": "2021-02-13T15:25:30.798027Z",
        "url": "https://files.pythonhosted.org/packages/a6/ca/2b1faa9c8b028ac549dd30148b4050901cb4541ebe1d6ca81ffe89de0057/StatsWithSahira-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28368917081896d14f830d7057d3e6a3438de6010c866e5fe5beeede41b8255a",
          "md5": "0ee4e62f1cca6e68732d76545d1397da",
          "sha256": "65c78a99774d5d38e7925de5a23230bc9738c45d1c8c81a66bf50d2f8fa20c3b"
        },
        "downloads": -1,
        "filename": "StatsWithSahira-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0ee4e62f1cca6e68732d76545d1397da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8105,
        "upload_time": "2021-02-13T15:25:31",
        "upload_time_iso_8601": "2021-02-13T15:25:31.972922Z",
        "url": "https://files.pythonhosted.org/packages/28/36/8917081896d14f830d7057d3e6a3438de6010c866e5fe5beeede41b8255a/StatsWithSahira-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03f36e7bed74962dba27d3b52e101658efe6ef531644b104665f0c2a23a09a46",
          "md5": "bc81c5a8b424341a7052cd3d9a744363",
          "sha256": "a634b77c3da56722806b88da652ad39c73bab6dc5578a3f721045e7780aad86d"
        },
        "downloads": -1,
        "filename": "StatsWithSahira-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc81c5a8b424341a7052cd3d9a744363",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9904,
        "upload_time": "2021-02-17T17:16:38",
        "upload_time_iso_8601": "2021-02-17T17:16:38.777479Z",
        "url": "https://files.pythonhosted.org/packages/03/f3/6e7bed74962dba27d3b52e101658efe6ef531644b104665f0c2a23a09a46/StatsWithSahira-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "820b6c7987eb2598e89d1f0881b8e3d912abba7a5f5c34a21760898417922db0",
          "md5": "052c8709dc216123f74199910c20a182",
          "sha256": "e0f971d9b707459b00667a6d261353c0826647ea55af79d46025b3d647bf60af"
        },
        "downloads": -1,
        "filename": "StatsWithSahira-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "052c8709dc216123f74199910c20a182",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11544,
        "upload_time": "2021-02-17T17:16:40",
        "upload_time_iso_8601": "2021-02-17T17:16:40.815040Z",
        "url": "https://files.pythonhosted.org/packages/82/0b/6c7987eb2598e89d1f0881b8e3d912abba7a5f5c34a21760898417922db0/StatsWithSahira-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cdefbfc021e3914f7fceb2d101477db0ee0372baf5f78868e2bc06f2e9944dfc",
          "md5": "1791feca6fe9cbca655093badc05a3d6",
          "sha256": "37f5302499e6fd486b05bae4e8a1ba6a9969d3b7e12028728aaff3b5f7e7c7ae"
        },
        "downloads": -1,
        "filename": "StatsWithSahira-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1791feca6fe9cbca655093badc05a3d6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11818,
        "upload_time": "2021-02-17T17:18:41",
        "upload_time_iso_8601": "2021-02-17T17:18:41.786505Z",
        "url": "https://files.pythonhosted.org/packages/cd/ef/bfc021e3914f7fceb2d101477db0ee0372baf5f78868e2bc06f2e9944dfc/StatsWithSahira-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea79298fe8b5fe5f141e2446356744eccdfd9621ca152c67d6e697bd8c9bb026",
          "md5": "0215e328fd6631a32b617a33eb6de9b4",
          "sha256": "49de5ac6b6df884df1582491886a011a2dd3da09e2e3c57fac56b65c8565a20f"
        },
        "downloads": -1,
        "filename": "StatsWithSahira-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0215e328fd6631a32b617a33eb6de9b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13875,
        "upload_time": "2021-02-17T17:18:44",
        "upload_time_iso_8601": "2021-02-17T17:18:44.583769Z",
        "url": "https://files.pythonhosted.org/packages/ea/79/298fe8b5fe5f141e2446356744eccdfd9621ca152c67d6e697bd8c9bb026/StatsWithSahira-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f476807c91e55668a1dec53d4a9b92f82017698cda9fb83030f7acbbe4b713d8",
          "md5": "0f941c9d060b3760fdc8ab3f435bfd6c",
          "sha256": "4b977d06363dd1d5ce475b44902041df83eb50c113c59e2bda73f4a3bcf68251"
        },
        "downloads": -1,
        "filename": "StatsWithSahira-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f941c9d060b3760fdc8ab3f435bfd6c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11810,
        "upload_time": "2021-02-17T17:20:12",
        "upload_time_iso_8601": "2021-02-17T17:20:12.510473Z",
        "url": "https://files.pythonhosted.org/packages/f4/76/807c91e55668a1dec53d4a9b92f82017698cda9fb83030f7acbbe4b713d8/StatsWithSahira-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cba5779e59267ca14e5e3c1ef61e98ec5c09dfaef674bf0049bb8839a90ce13",
          "md5": "f1ca091b131d5faef657866fe879fc4e",
          "sha256": "157d1610a4ad16210807f75da1d80e7b614c06586cc9aec9b52ce46c79f82698"
        },
        "downloads": -1,
        "filename": "StatsWithSahira-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f1ca091b131d5faef657866fe879fc4e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13856,
        "upload_time": "2021-02-17T17:20:16",
        "upload_time_iso_8601": "2021-02-17T17:20:16.011970Z",
        "url": "https://files.pythonhosted.org/packages/8c/ba/5779e59267ca14e5e3c1ef61e98ec5c09dfaef674bf0049bb8839a90ce13/StatsWithSahira-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ce79767f5e72d8ee298efb0fad6fe6f466707a317517a73e91b74beec3e3886",
          "md5": "f8a3b99050eda6a05560276c98eb3b88",
          "sha256": "42b66995f9adb4249704d9851e663ad79c259703ab5aac2fa047730578ccc916"
        },
        "downloads": -1,
        "filename": "StatsWithSahira-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f8a3b99050eda6a05560276c98eb3b88",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11703,
        "upload_time": "2021-02-18T17:53:54",
        "upload_time_iso_8601": "2021-02-18T17:53:54.399435Z",
        "url": "https://files.pythonhosted.org/packages/8c/e7/9767f5e72d8ee298efb0fad6fe6f466707a317517a73e91b74beec3e3886/StatsWithSahira-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3cebf4a628a5add523f3b90a762ba8e792b5facaa5bf36d22ff1737149eadc5e",
          "md5": "f6633f6d7f465c26efc25d0dfbdfa1bf",
          "sha256": "ee588ad36d3267c18cad7c3112aaa8ae5e50ae1fddef5ef43b421369bbe32809"
        },
        "downloads": -1,
        "filename": "StatsWithSahira-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "f6633f6d7f465c26efc25d0dfbdfa1bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13761,
        "upload_time": "2021-02-18T17:53:59",
        "upload_time_iso_8601": "2021-02-18T17:53:59.438424Z",
        "url": "https://files.pythonhosted.org/packages/3c/eb/f4a628a5add523f3b90a762ba8e792b5facaa5bf36d22ff1737149eadc5e/StatsWithSahira-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2295daef39b72a2e6389161dc26614ec7c01ee23426dc20d2dba68fe0462ec3",
          "md5": "e3347ddc8de9dbcdff668990feb9b346",
          "sha256": "a45952a904f819b3ceefdb57c01d0130f686f29ed6c6c45ff26c5602f74ecdab"
        },
        "downloads": -1,
        "filename": "StatsWithSahira-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e3347ddc8de9dbcdff668990feb9b346",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11698,
        "upload_time": "2021-02-23T17:40:27",
        "upload_time_iso_8601": "2021-02-23T17:40:27.974874Z",
        "url": "https://files.pythonhosted.org/packages/e2/29/5daef39b72a2e6389161dc26614ec7c01ee23426dc20d2dba68fe0462ec3/StatsWithSahira-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d77791d7b81c790948a4322beb8c1fcc914a4df4fc3d4053746faf3367579c64",
          "md5": "bb384036ed9fbab20d22e5f8bace4af8",
          "sha256": "415ee6b04dc34e1a983fc342115124a4cce15f23f59caec6333086e7b781aac1"
        },
        "downloads": -1,
        "filename": "StatsWithSahira-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "bb384036ed9fbab20d22e5f8bace4af8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13733,
        "upload_time": "2021-02-23T17:40:33",
        "upload_time_iso_8601": "2021-02-23T17:40:33.702787Z",
        "url": "https://files.pythonhosted.org/packages/d7/77/91d7b81c790948a4322beb8c1fcc914a4df4fc3d4053746faf3367579c64/StatsWithSahira-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e2295daef39b72a2e6389161dc26614ec7c01ee23426dc20d2dba68fe0462ec3",
        "md5": "e3347ddc8de9dbcdff668990feb9b346",
        "sha256": "a45952a904f819b3ceefdb57c01d0130f686f29ed6c6c45ff26c5602f74ecdab"
      },
      "downloads": -1,
      "filename": "StatsWithSahira-0.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e3347ddc8de9dbcdff668990feb9b346",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11698,
      "upload_time": "2021-02-23T17:40:27",
      "upload_time_iso_8601": "2021-02-23T17:40:27.974874Z",
      "url": "https://files.pythonhosted.org/packages/e2/29/5daef39b72a2e6389161dc26614ec7c01ee23426dc20d2dba68fe0462ec3/StatsWithSahira-0.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d77791d7b81c790948a4322beb8c1fcc914a4df4fc3d4053746faf3367579c64",
        "md5": "bb384036ed9fbab20d22e5f8bace4af8",
        "sha256": "415ee6b04dc34e1a983fc342115124a4cce15f23f59caec6333086e7b781aac1"
      },
      "downloads": -1,
      "filename": "StatsWithSahira-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "bb384036ed9fbab20d22e5f8bace4af8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13733,
      "upload_time": "2021-02-23T17:40:33",
      "upload_time_iso_8601": "2021-02-23T17:40:33.702787Z",
      "url": "https://files.pythonhosted.org/packages/d7/77/91d7b81c790948a4322beb8c1fcc914a4df4fc3d4053746faf3367579c64/StatsWithSahira-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}