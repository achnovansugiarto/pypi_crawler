{
  "info": {
    "author": "Yue Zhao",
    "author_email": "zhaoy@cmu.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Financial and Insurance Industry",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "SUOD: Accelerating Large-scare Unsupervised Heterogeneous Outlier Detection\n===========================================================================\n\n**Deployment & Documentation & Stats**\n\n.. image:: https://img.shields.io/pypi/v/suod.svg?color=brightgreen\n   :target: https://pypi.org/project/suod/\n   :alt: PyPI version\n\n\n.. image:: https://readthedocs.org/projects/suod/badge/?version=latest\n   :target: https://suod.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\n\n.. image:: https://img.shields.io/github/stars/yzhao062/suod.svg\n   :target: https://github.com/yzhao062/suod/stargazers\n   :alt: GitHub stars\n\n\n.. image:: https://img.shields.io/github/forks/yzhao062/suod.svg?color=blue\n   :target: https://github.com/yzhao062/suod/network\n   :alt: GitHub forks\n\n\n.. image:: https://pepy.tech/badge/suod\n   :target: https://pepy.tech/project/suod\n   :alt: Downloads\n\n\n.. image:: https://pepy.tech/badge/suod/month\n   :target: https://pepy.tech/project/suod\n   :alt: Downloads\n\n\n----\n\n\n**Build Status & Coverage & Maintainability & License**\n\n\n.. image::  https://app.travis-ci.com/yzhao062/SUOD.svg?branch=master\n   :target: https://app.travis-ci.com/yzhao062/SUOD\n   :alt: Build Status\n\n\n.. image:: https://circleci.com/gh/yzhao062/SUOD.svg?style=svg\n   :target: https://circleci.com/gh/yzhao062/SUOD\n   :alt: Circle CI\n\n\n.. image:: https://ci.appveyor.com/api/projects/status/5kp8psvntp5m1d6m/branch/master?svg=true\n   :target: https://ci.appveyor.com/project/yzhao062/combo/branch/master\n   :alt: Appveyor\n\n\n.. image:: https://coveralls.io/repos/github/yzhao062/SUOD/badge.svg\n   :target: https://coveralls.io/github/yzhao062/SUOD\n   :alt: Coverage Status\n\n.. image:: https://img.shields.io/github/license/yzhao062/suod.svg\n   :target: https://github.com/yzhao062/suod/blob/master/LICENSE\n   :alt: License\n\n\n----\n\n**News**: SUOD is now integrated into `PyOD <https://github.com/yzhao062/pyod>`_.\nIt can be easily invoked in PyOD by following the `SUOD example <https://github.com/yzhao062/pyod/blob/master/examples/suod_example.py>`_.\nIn a nutshell, we could easily initialize a few outlier detectors and then use SUOD for collective training and prediction!\n\n.. code-block:: python\n\n    from pyod.models.suod import SUOD\n\n    # initialized a group of outlier detectors for acceleration\n    detector_list = [LOF(n_neighbors=15), LOF(n_neighbors=20),\n                     LOF(n_neighbors=25), LOF(n_neighbors=35),\n                     COPOD(), IForest(n_estimators=100),\n                     IForest(n_estimators=200)]\n\n    # decide the number of parallel process, and the combination method\n    # then clf can be used as any outlier detection model\n    clf = SUOD(base_estimators=detector_list, n_jobs=2, combination='average',\n               verbose=False)\n\n\n----\n\n\n**Background**: Outlier detection (OD) is a key data mining task for identifying abnormal objects from general samples with numerous high-stake applications including fraud detection and intrusion detection.\nDue to the lack of ground truth labels, practitioners often have to build a large number of unsupervised models that are heterogeneous (i.e., different algorithms and hyperparameters) for further combination and analysis with ensemble learning, rather than relying on a single model.\nHowever, **this yields severe scalability issues on high-dimensional, large datasets**.\n\n**SUOD** (**S**\\calable **U**\\nsupervised **O**\\utlier **D**\\etection) is an **acceleration framework for large-scale unsupervised heterogeneous outlier detector training and prediction**.\nIt focuses on three complementary aspects to accelerate (dimensionality reduction for high-dimensional data, model approximation for complex models, and execution efficiency improvement for taskload imbalance within distributed systems), while controlling detection performance degradation.\n\nSince its inception in Sep 2019, SUOD has been successfully used in various academic researches and industry applications with more than 700,000 downloads,\nincluding PyOD [#Zhao2019PyOD]_ and `IQVIA <https://www.iqvia.com/>`_ medical claim analysis.\n\n\n.. image:: https://raw.githubusercontent.com/yzhao062/SUOD/master/figs/system_overview.png\n   :target: https://raw.githubusercontent.com/yzhao062/SUOD/master/figs/system_overview.png\n   :alt: SUOD System\n\nSUOD is featured for:\n\n* **Unified APIs, detailed documentation, and examples** for the easy use.\n* **Optimized performance with JIT and parallelization** when possible, using `numba <https://github.com/numba/numba>`_ and `joblib <https://github.com/joblib/joblib>`_.\n* **Fully compatible with the models in PyOD**.\n* **Customizable modules and flexible design**: each module may be turned on/off or totally replaced by custom functions.\n\nRoadmap:\n\n* Provide more choices of distributed schedulers (adapted for SUOD), e.g., batch sampling, Sparrow (SOSP'13), Pigeon (SoCC'19) etc.\n* Enable the flexibility of selecting data projection methods.\n\n----\n\n**API Demo**\\ :\n\n\n.. code-block:: python\n\n\n    from suod.models.base import SUOD\n\n    # initialize a set of base outlier detectors to train and predict on\n    base_estimators = [\n        LOF(n_neighbors=5, contamination=contamination),\n        LOF(n_neighbors=15, contamination=contamination),\n        LOF(n_neighbors=25, contamination=contamination),\n        HBOS(contamination=contamination),\n        PCA(contamination=contamination),\n        OCSVM(contamination=contamination),\n        KNN(n_neighbors=5, contamination=contamination),\n        KNN(n_neighbors=15, contamination=contamination),\n        KNN(n_neighbors=25, contamination=contamination)]\n\n    # initialize a SUOD model with all features turned on\n    model = SUOD(base_estimators=base_estimators, n_jobs=6,  # number of workers\n                 rp_flag_global=True,  # global flag for random projection\n                 bps_flag=True,  # global flag for balanced parallel scheduling\n                 approx_flag_global=False,  # global flag for model approximation\n                 contamination=contamination)\n\n    model.fit(X_train)  # fit all models with X\n    model.approximate(X_train)  # conduct model approximation if it is enabled\n    predicted_labels = model.predict(X_test)  # predict labels\n    predicted_scores = model.decision_function(X_test)  # predict scores\n    predicted_probs = model.predict_proba(X_test)  # predict outlying probability\n\n----\n\n`The corresponding paper <https://www.andrew.cmu.edu/user/yuezhao2/papers/21-mlsys-suod.pdf>`_ is published in Conference on Machine Learning Systems (MLSys).\nSee https://mlsys.org/ for more information.\n\n\nIf you use SUOD in a scientific publication, we would appreciate citations to the following paper::\n\n\n    @inproceedings{zhao2021suod,\n      title={SUOD: Accelerating Large-scale Unsupervised Heterogeneous Outlier Detection},\n      author={Zhao, Yue and Hu, Xiyang and Cheng, Cheng and Wang, Cong and Wan, Changlin and Wang, Wen and Yang, Jianing and Bai, Haoping and Li, Zheng and Xiao, Cao and others},\n      journal={Proceedings of Machine Learning and Systems},\n      year={2021}\n    }\n\n::\n\n    Zhao, Y., Hu, X., Cheng, C., Wang, C., Wan, C., Wang, W., Yang, J., Bai, H., Li, Z., Xiao, C. and Wang, Y., 2021. SUOD: Accelerating Large-scale Unsupervised Heterogeneous Outlier Detection. Proceedings of Machine Learning and Systems (MLSys).\n\n\n**Table of Contents**\\ :\n\n\n* `Installation <#installation>`_\n* `API Cheatsheet & Reference <#api-cheatsheet--reference>`_\n* `Examples <#examples>`_\n* `Model Save & Load <#model-save--load>`_\n\n\n------------\n\n\nInstallation\n^^^^^^^^^^^^\n\nIt is recommended to use **pip** for installation. Please make sure\n**the latest version** is installed, as suod is updated frequently:\n\n.. code-block:: bash\n\n   pip install suod            # normal install\n   pip install --upgrade suod  # or update if needed\n   pip install --pre suod      # or include pre-release version for new features\n\nAlternatively, you could clone and run setup.py file:\n\n.. code-block:: bash\n\n   git clone https://github.com/yzhao062/suod.git\n   cd suod\n   pip install .\n\n\n**Required Dependencies**\\ :\n\n\n* Python 3.5, 3.6, or 3.7\n* joblib\n* numpy>=1.13\n* pandas (**optional for building the cost forecast model**)\n* pyod\n* scipy>=0.19.1\n* scikit_learn>=0.19.1\n\n\n**Note on Python 2**\\ :\nThe maintenance of Python 2.7 will be stopped by January 1, 2020 (see `official announcement <https://github.com/python/devguide/pull/344>`_).\nTo be consistent with the Python change and suod's dependent libraries, e.g., scikit-learn,\n**SUOD only supports Python 3.5+** and we encourage you to use\nPython 3.5 or newer for the latest functions and bug fixes. More information can\nbe found at `Moving to require Python 3 <https://python3statement.org/>`_.\n\n\n------------\n\n\nAPI Cheatsheet & Reference\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFull API Reference: (https://suod.readthedocs.io/en/latest/api.html).\n\n* **fit(X, y)**\\ : Fit estimator. y is optional for unsupervised methods.\n* **approximate(X)**\\ : Use supervised models to approximate unsupervised base detectors. Fit should be invoked first.\n* **predict(X)**\\ : Predict on a particular sample once the estimator is fitted.\n* **predict_proba(X)**\\ : Predict the probability of a sample belonging to each class once the estimator is fitted.\n\n\nExamples\n^^^^^^^^\n\nAll three modules can be **executed separately** and the demo codes are in /examples/module_examples/{M1_RP, M2_BPS, and M3_PSA}.\nFor instance, you could navigate to /M1_RP/demo_random_projection.py. Demo codes all start with \"demo_*.py\".\n\n**The examples for the full framework** can be found under /examples folder; run \"demo_base.py\" for\na simplified example. Run \"demo_full.py\" for a full example.\n\nIt is noted the best performance may be achieved with multiple cores available.\n\n------------\n\n\nModel Save & Load\n^^^^^^^^^^^^^^^^^\n\nSUOD takes a similar approach of sklearn regarding model persistence.\nSee `model persistence <https://scikit-learn.org/stable/modules/model_persistence.html>`_ for clarification.\n\nIn short, we recommend to use joblib or pickle for saving and loading SUOD models.\nSee `\"examples/demo_model_save_load.py\" <https://github.com/yzhao062/suod/blob/master/examples/demo_model_save_load.py>`_ for an example.\nIn short, it is simple as below:\n\n.. code-block:: python\n\n    from joblib import dump, load\n\n    # save the fitted model\n    dump(model, 'model.joblib')\n    # load the model\n    model = load('model.joblib')\n\n\n\n**More to come...**\nLast updated on Jan 14th, 2021.\n\nFeel free to star and watch for the future update :)\n\n----\n\nReferences\n----------\n\n.. [#Johnson1984Extensions] Johnson, W.B. and Lindenstrauss, J., 1984. Extensions of Lipschitz mappings into a Hilbert space. *Contemporary mathematics*, 26(189-206), p.1.\n\n.. [#Zhao2019PyOD] Zhao, Y., Nasrullah, Z. and Li, Z., 2019. PyOD: A Python Toolbox for Scalable Outlier Detection. *Journal of Machine Learning Research*, 20, pp.1-7.",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/yzhao062/suod/archive/master.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yzhao062/suod",
    "keywords": "ensemble learning,anomaly detection,outlier ensembles,data mining,machine learning,python",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "suod",
    "package_url": "https://pypi.org/project/suod/",
    "platform": "",
    "project_url": "https://pypi.org/project/suod/",
    "project_urls": {
      "Download": "https://github.com/yzhao062/suod/archive/master.zip",
      "Homepage": "https://github.com/yzhao062/suod"
    },
    "release_url": "https://pypi.org/project/suod/0.0.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Scalable Framework for Unsupervised Outlier Detection (Anomaly Detection)",
    "version": "0.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11606223,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "257b295d003e6d8e1b9fd8ee370c9a98e5b3d7c882f710349469acfda0e2c851",
          "md5": "854681cea45e50cbcbdc9784a16959c4",
          "sha256": "9401e37cce58f3e8dc748433d6d03a36aa2af5307fa01ba595c3c44eef595e1a"
        },
        "downloads": -1,
        "filename": "suod-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "854681cea45e50cbcbdc9784a16959c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8121,
        "upload_time": "2019-12-28T02:09:50",
        "upload_time_iso_8601": "2019-12-28T02:09:50.018463Z",
        "url": "https://files.pythonhosted.org/packages/25/7b/295d003e6d8e1b9fd8ee370c9a98e5b3d7c882f710349469acfda0e2c851/suod-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b59b84f49d785fd69d3865e64387cfe729cc0e5d58ed8809279ef2c8d5f432c",
          "md5": "13a08a3adb0c4bc524e5e36dd05829b0",
          "sha256": "1369f25b0dc1bdc99b5e39de672ccd0c1ac6fd48112af117cec0f144b3831d9f"
        },
        "downloads": -1,
        "filename": "suod-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "13a08a3adb0c4bc524e5e36dd05829b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1908606,
        "upload_time": "2020-01-05T20:21:15",
        "upload_time_iso_8601": "2020-01-05T20:21:15.219384Z",
        "url": "https://files.pythonhosted.org/packages/4b/59/b84f49d785fd69d3865e64387cfe729cc0e5d58ed8809279ef2c8d5f432c/suod-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "981fcb5f3567ee8537e058bab70e8d60f78fdff43fee7c40ac3fe8209a765237",
          "md5": "243fa0ab774ad89ad0ee223c4da1d5f2",
          "sha256": "1f3946e3b86ce186bce1ca6d9b7ac242fb9bcaa5f0bede37d1f49c1fc49c026d"
        },
        "downloads": -1,
        "filename": "suod-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "243fa0ab774ad89ad0ee223c4da1d5f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2105638,
        "upload_time": "2020-01-15T00:42:49",
        "upload_time_iso_8601": "2020-01-15T00:42:49.155377Z",
        "url": "https://files.pythonhosted.org/packages/98/1f/cb5f3567ee8537e058bab70e8d60f78fdff43fee7c40ac3fe8209a765237/suod-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bb9aeaa3371f71fc039da982979ea6d6ffd9e356926c9fc630f42a5dc9d494e",
          "md5": "23a4ae8a7217e8d414de4081b8b95fe7",
          "sha256": "be05cab5b4a2dfb7bbb4e376d32731146ca233a9386f2090534f0ddbe7591470"
        },
        "downloads": -1,
        "filename": "suod-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "23a4ae8a7217e8d414de4081b8b95fe7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2109482,
        "upload_time": "2020-02-22T20:02:11",
        "upload_time_iso_8601": "2020-02-22T20:02:11.806996Z",
        "url": "https://files.pythonhosted.org/packages/8b/b9/aeaa3371f71fc039da982979ea6d6ffd9e356926c9fc630f42a5dc9d494e/suod-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1879170cabe1b5e10a7d095c0e28f2e30e7c1886a13f063de85d3cfacc06f4b",
          "md5": "5094b04277af1c215eaa4ebf7a60cdb3",
          "sha256": "6103582c5badc55263034af758dd46c0ca9abf2deeb7c0124eb7853706b8bd40"
        },
        "downloads": -1,
        "filename": "suod-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "5094b04277af1c215eaa4ebf7a60cdb3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2110169,
        "upload_time": "2020-04-20T19:41:31",
        "upload_time_iso_8601": "2020-04-20T19:41:31.724325Z",
        "url": "https://files.pythonhosted.org/packages/a1/87/9170cabe1b5e10a7d095c0e28f2e30e7c1886a13f063de85d3cfacc06f4b/suod-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad3c6cdd7ef3f798237c574e5266c961cdc84efae9ae593ddf77a57ae1bd0e35",
          "md5": "8d6d7465dc67d10c1c51dc088a20ba43",
          "sha256": "098fd5c36078dc68db5e0492b610883f96e458aa4ceb4f56fac4b4a22a181076"
        },
        "downloads": -1,
        "filename": "suod-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "8d6d7465dc67d10c1c51dc088a20ba43",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2098023,
        "upload_time": "2020-12-27T16:27:42",
        "upload_time_iso_8601": "2020-12-27T16:27:42.602186Z",
        "url": "https://files.pythonhosted.org/packages/ad/3c/6cdd7ef3f798237c574e5266c961cdc84efae9ae593ddf77a57ae1bd0e35/suod-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e8a255ed2c959abab7c712b10fe710e454d5a8e3461c6ae60e426349a8eb6a5",
          "md5": "275e624d293f88d41e50b3ed8e8f6886",
          "sha256": "224d5858ad4eec4703f45c9a630d50d077d52f20e267c0d513922374cee44f65"
        },
        "downloads": -1,
        "filename": "suod-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "275e624d293f88d41e50b3ed8e8f6886",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2098660,
        "upload_time": "2021-01-15T02:12:04",
        "upload_time_iso_8601": "2021-01-15T02:12:04.157500Z",
        "url": "https://files.pythonhosted.org/packages/4e/8a/255ed2c959abab7c712b10fe710e454d5a8e3461c6ae60e426349a8eb6a5/suod-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca849542f0bac75dcd9c7afd2c16db1c0f752db99ecd4f73c21ee674ae4c04a1",
          "md5": "10fd28bade6a45943d7bb65189337c4b",
          "sha256": "3b8508bea45a81678fcc47047e208f8a91e9b8eea9c2ae4290b2c28afe4c5a96"
        },
        "downloads": -1,
        "filename": "suod-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "10fd28bade6a45943d7bb65189337c4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2098582,
        "upload_time": "2021-08-29T18:37:30",
        "upload_time_iso_8601": "2021-08-29T18:37:30.408492Z",
        "url": "https://files.pythonhosted.org/packages/ca/84/9542f0bac75dcd9c7afd2c16db1c0f752db99ecd4f73c21ee674ae4c04a1/suod-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ba5a5f833f425d7f07c38dcf03cb7c39285b383c64da856fc7239948ab38809",
          "md5": "cbc55434eed2f7fd4c420e624200e780",
          "sha256": "34ef5dec7b5bfba9844728d67de8dc018555be5e62f5c5a6edcdc1c0c8f9a1c5"
        },
        "downloads": -1,
        "filename": "suod-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "cbc55434eed2f7fd4c420e624200e780",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2099165,
        "upload_time": "2021-10-01T18:05:35",
        "upload_time_iso_8601": "2021-10-01T18:05:35.958313Z",
        "url": "https://files.pythonhosted.org/packages/7b/a5/a5f833f425d7f07c38dcf03cb7c39285b383c64da856fc7239948ab38809/suod-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7ba5a5f833f425d7f07c38dcf03cb7c39285b383c64da856fc7239948ab38809",
        "md5": "cbc55434eed2f7fd4c420e624200e780",
        "sha256": "34ef5dec7b5bfba9844728d67de8dc018555be5e62f5c5a6edcdc1c0c8f9a1c5"
      },
      "downloads": -1,
      "filename": "suod-0.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "cbc55434eed2f7fd4c420e624200e780",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2099165,
      "upload_time": "2021-10-01T18:05:35",
      "upload_time_iso_8601": "2021-10-01T18:05:35.958313Z",
      "url": "https://files.pythonhosted.org/packages/7b/a5/a5f833f425d7f07c38dcf03cb7c39285b383c64da856fc7239948ab38809/suod-0.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}