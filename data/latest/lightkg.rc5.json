{
  "info": {
    "author": "lightsmile",
    "author_email": "iamlightsmile@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# lightKG，lightsmile个人的知识图谱技术框架\n\n## 说明\n\n最近忙着学别的，暂时没怎么管这个lib了，后续会持续更新的。\n\n## 前言\n\n根据知识图谱发展报告2018相关介绍，框架主要设计为有以下五大功能：\n\n- 知识表示学习， Knowledge Representation Learning\n- 实体识别与链接， Entity Recognition and Linking\n- 实体关系抽取， Entity Relation Extraction\n- 事件检测与抽取， Event Detection and Extraction\n- 知识存储与查询， Knowledge Storage and Query\n- 知识推理， Knowledge Reasoning\n\n因此将有六个主要的功能模块：krl（知识表示学习）、erl（实体识别与链接）、ere（实体关系抽取）、ede（实体检测与抽取）、ksq（知识存储与查询）、kr（知识推理）以及其他功能模块。\n\n## 当前已实现的功能\n\n### 知识表示学习\n\n- 基于翻译模型(Trans系列)的知识表示学习， TransE\n\n### 实体识别与链接\n\n- 命名实体识别， ner\n\n### 实体关系抽取\n\n- 关系抽取， re\n\n### 事件检测与抽取\n\n- 语义角色标注， srl\n\n### 知识存储与查询\n\n### 知识推理\n\n## 安装\n\n本项目基于Pytorch1.0\n\n```bash\npip install lightKG\n```\n\n建议使用国内源来安装，如使用以下命令：\n```bash\npip install -i https://pypi.douban.com/simple/ lightKG\n```\n\n### 安装依赖\n\n由于有些库如pytorch、torchtext并不在pypi源中或者里面只有比较老旧的版本，我们需要单独安装一些库。\n#### 安装pytorch\n\n具体安装参见[pytorch官网](https://pytorch.org/get-started/locally/)来根据平台、安装方式、Python版本、CUDA版本来选择适合自己的版本。\n\n#### 安装torchtext\n\n使用以下命令安装最新版本torchtext：\n```bash\npip install https://github.com/pytorch/text/archive/master.zip\n```\n\n## 模型\n\n- krl：TransE等\n- re: TextCNN\n- srl: BiLstm-CRF\n- ner: BiLstm-CRF\n\n## 训练数据说明\n\n#### krl\n\ncsv格式\n\n共三列，依次为`头实体`、`关系`、`尾实体`， 示例如下：\n\n ```bash\n科学,包涵,自然、社会、思维等领域\n科学,外文名,science\n科学,拼音,kē xué\n科学,中文名,科学\n科学,解释,发现、积累的真理的运用与实践\n语法学,外文名,syntactics\n语法学,中文名,语法学\n物理宇宙学,对象,大尺度结构和宇宙形成\n物理宇宙学,时间,二十世纪\n物理宇宙学,所属,天体物理学\n ```\n\n #### ner\n\nBIO\n\n训练数据示例如下：\n\n```bash\n清 B_Time\n明 I_Time\n是 O\n人 B_Person\n们 I_Person\n祭 O\n扫 O\n先 B_Person\n人 I_Person\n， O\n怀 O\n念 O\n追 O\n思 O\n的 O\n日 B_Time\n子 I_Time\n。 O\n\n正 O\n如 O\n宋 B_Time\n代 I_Time\n诗 B_Person\n人 I_Person\n```\n\n#### srl\n\nCONLL\n\n训练数据示例如下，其中各列分别为`词`、`词性`、`是否语义谓词`、`角色`，每句仅有一个谓语动词为语义谓词，即每句中第三列仅有一行取值为1，其余都为0.\n\n```bash\n宋浩京  NR      0       O\n转达    VV      0       O\n了      AS      0       O\n朝鲜    NR      0       O\n领导人  NN      0       O\n对      P       0       O\n中国    NR      0       O\n领导人  NN      0       O\n的      DEG     0       O\n亲切    JJ      0       O\n问候    NN      0       O\n，      PU      0       O\n代表    VV      0       O\n朝方    NN      0       O\n对      P       0       O\n中国    NR      0       B-ARG0\n党政    NN      0       I-ARG0\n领导人  NN      0       I-ARG0\n和      CC      0       I-ARG0\n人民    NN      0       E-ARG0\n哀悼    VV      1       rel\n金日成  NR      0       B-ARG1\n主席    NN      0       I-ARG1\n逝世    VV      0       E-ARG1\n表示    VV      0       O\n深切    JJ      0       O\n谢意    NN      0       O\n。      PU      0       O\n```\n\n#### re\n\n训练数据示例如下，其中各列分别为`实体1`、`实体2`、`关系`、`句子`\n\n```bash\n钱钟书\t辛笛\t同门\t与辛笛京沪唱和聽钱钟书与钱钟书是清华校友，钱钟书高辛笛两班。\n元武\t元华\tunknown\t于师傅在一次京剧表演中，选了元龙（洪金宝）、元楼（元奎）、元彪、成龙、元华、元武、元泰7人担任七小福的主角。\n```\n\n ## 使用\n\n ### krl\n\n#### 训练\n\n```python\nfrom lightkg.krl import KRL\n\ntrain_path = '/home/lightsmile/NLP/corpus/kg/baike/train.sample.csv'\ndev_path = '/home/lightsmile/NLP/corpus/kg/baike/test.sample.csv'\nmodel_type = 'TransE'\n\nkrl = KRL()\nkrl.train(train_path, model_type=model_type, dev_path=train_path, save_path='./krl_{}_saves'.format(model_type))\n```\n\n#### 测试\n\n```python\nkrl.load(save_path='./krl_{}_saves'.format(model_type), model_type=model_type)\nkrl.test(train_path)\n```\n\n#### 预测\n\n##### 根据头实体、关系、尾实体，预测其概率\n\n```python\nprint(krl.predict(head='编译器', rel='外文名', tail='Compiler'))\n```\n\n输出为：\n```bash\n0.998942494392395\n```\n##### 根据头实体和关系，预测训练集词表中topk(默认为3)个可能尾实体\n\n```python\nprint(krl.predict_tail(head='编译器', rel='外文名'))\n```\n\n输出为：\n```bash\n[('Compiler', 0.998942494392395), ('20世纪50年代末', 0.3786872327327728), ('译码器', 0.3767447769641876)]\n```\n##### 根据头实体和尾实体，预测训练集词表中topk(默认为3)个可能关系\n\n```python\nprint(krl.predict_rel(head='编译器', tail='Compiler'))\n```\n\n输出为：\n```bash\n[('外文名', 0.998942494392395), ('英译', 0.8240533471107483), ('拼音', 0.4082326292991638)]\n```\n##### 根据尾实体和关系，预测训练集词表中topk(默认为3)个可能头实体\n```python\nprint(krl.predict_head(rel='外文名', tail='Compiler'))\n```\n\n输出为：\n```bash\n[('编译器', 0.998942494392395), ('译码器', 0.36795616149902344), ('计算机，单片机，编程语言', 0.36788302659988403)]\n```\n\n### ner\n\n#### 训练\n\n```python\nfrom lightkg.erl import NER\n\n# 创建NER对象\nner_model = NER()\n\ntrain_path = '/home/lightsmile/NLP/corpus/ner/train.sample.txt'\ndev_path = '/home/lightsmile/NLP/corpus/ner/test.sample.txt'\nvec_path = '/home/lightsmile/NLP/embedding/char/token_vec_300.bin'\n\n# 只需指定训练数据路径，预训练字向量可选，开发集路径可选，模型保存路径可选。\nner_model.train(train_path, vectors_path=vec_path, dev_path=dev_path, save_path='./ner_saves')\n```\n\n#### 测试\n\n```python\n# 加载模型，默认当前目录下的`saves`目录\nner_model.load('./ner_saves')\n# 对train_path下的测试集进行读取测试\nner_model.test(train_path)\n```\n\n#### 预测\n\n```python\nfrom pprint import pprint\n\npprint(ner_model.predict('另一个很酷的事情是，通过框架我们可以停止并在稍后恢复训练。'))\n```\n\n预测结果：\n\n```bash\n[{'end': 15, 'entity': '我们', 'start': 14, 'type': 'Person'}]\n```\n\n### re\n\n#### 训练\n\n```python\nfrom lightkg.ere import RE\n\nre = RE()\n\ntrain_path = '/home/lightsmile/Projects/NLP/ChineseNRE/data/people-relation/train.sample.txt'\ndev_path = '/home/lightsmile/Projects/NLP/ChineseNRE/data/people-relation/test.sample.txt'\nvec_path = '/home/lightsmile/NLP/embedding/word/sgns.zhihu.bigram-char'\n\nre.train(train_path, dev_path=dev_path, vectors_path=vec_path, save_path='./re_saves')\n\n```\n\n#### 测试\n\n```python\nre.load('./re_saves')\nre.test(dev_path)\n```\n\n#### 预测\n\n```python\nprint(re.predict('钱钟书', '辛笛', '与辛笛京沪唱和聽钱钟书与钱钟书是清华校友，钱钟书高辛笛两班。'))\n```\n\n预测结果：\n\n```python\n(0.7306928038597107, '同门') # return格式为（预测概率，预测标签）\n```\n\n### srl\n\n#### 训练\n\n```python\nfrom lightkg.ede import SRL\n\nsrl_model = SRL()\n\ntrain_path = '/home/lightsmile/NLP/corpus/srl/train.sample.tsv'\ndev_path = '/home/lightsmile/NLP/corpus/srl/test.sample.tsv'\nvec_path = '/home/lightsmile/NLP/embedding/word/sgns.zhihu.bigram-char'\n\n\nsrl_model.train(train_path, vectors_path=vec_path, dev_path=dev_path, save_path='./srl_saves')\n```\n\n#### 测试\n\n```python\nsrl_model.load('./srl_saves')\n\nsrl_model.test(dev_path)\n```\n\n#### 预测\n\n```python\nword_list = ['代表', '朝方', '对', '中国', '党政', '领导人', '和', '人民', '哀悼', '金日成', '主席', '逝世', '表示', '深切', '谢意', '。']\npos_list = ['VV', 'NN', 'P', 'NR', 'NN', 'NN', 'CC', 'NN', 'VV', 'NR', 'NN', 'VV', 'VV', 'JJ', 'NN', 'PU']\nrel_list = [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]\n\nprint(srl_model.predict(word_list, pos_list, rel_list))\n```\n\n预测结果：\n\n```bash\n{'ARG0': '中国党政领导人和人民', 'rel': '哀悼', 'ARG1': '金日成主席逝世'}\n```\n\n## 项目组织结构\n\n### 项目架构\n- base\n    - config.py\n    - model.py\n    - module.py\n    - tool.py\n- common\n    - entity.py\n    - relation.py\n- ede\n    - srl, 语义角色标注\n- ere\n    - re， 关系抽取\n- erl\n    - ner， 命名实体识别\n- kr\n- krl，知识表示学习\n    - models\n        - transE\n    - utils\n- ksq\n- utils\n\n### 架构说明\n\n#### base目录\n放一些基础的模块实现，其他的高层业务模型以及相关训练代码都从此module继承相应父类。\n\n##### config\n存放模型训练相关的超参数等配置信息\n\n##### model\n模型的实现抽象基类，包含`base.model.BaseConfig`和`base.model.BaseModel`，包含`load`、`save`等方法\n\n##### module\n业务模块的训练验证测试等实现抽象基类，包含`base.module.Module`，包含`train`、`load`、`_validate`、`test`等方法\n\n##### tool\n业务模块的数据处理抽象基类，包含`base.tool.Tool`，包含`get_dataset`、`get_vectors`、`get_vocab`、`get_iterator`、`get_score`等方法\n\n#### common目录\n\n##### entity\n\n实体基类, 所有需要使用实体对象的使用此类或从此类继承子类\n\n##### relation\n\n关系基类, 所有需要使用关系对象的使用此类或从此类继承子类\n\n#### util目录\n放一些通用的方法\n\n## todo\n\n### 业务\n\n### 工程\n\n- [x] 重构项目结构，将相同冗余的地方合并起来，保持项目结构清晰\n- [ ] 增加断点重训功能。\n- [ ] 增加earlyStopping。\n- [ ] 现在模型保存的路径和名字默认一致，会冲突，接下来每个模型都有自己的`name`。\n\n### 功能\n\n- [x] 增加关系抽取相关模型以及训练预测代码\n- [x] 增加事件抽取相关模型以及训练预测代码\n- [x] 增加命名实体识别相关模型以及预测训练代码\n- [x] 增加基于翻译模型的知识表示学习相关模型以及训练预测代码\n- [x] 增加实体链接的知识表示学习相关模型以及训练预测代码\n\n## 参考\n\n### Deep Learning\n\n- [What's the difference between “hidden” and “output” in PyTorch LSTM?](https://stackoverflow.com/questions/48302810/whats-the-difference-between-hidden-and-output-in-pytorch-lstm)\n- [What's the difference between LSTM() and LSTMCell()?](https://stackoverflow.com/questions/48187283/whats-the-difference-between-lstm-and-lstmcell)\n- [深度学习框架技术剖析[转]](https://aiuai.cn/aifarm904.html)\n\n### NLP\n\n- [基于表示学习的信息抽取方法浅析](https://www.jiqizhixin.com/articles/2016-11-15-5)\n- [知识抽取-实体及关系抽取](http://www.shuang0420.com/2018/09/15/%E7%9F%A5%E8%AF%86%E6%8A%BD%E5%8F%96-%E5%AE%9E%E4%BD%93%E5%8F%8A%E5%85%B3%E7%B3%BB%E6%8A%BD%E5%8F%96/)\n- [知识抽取-事件抽取](http://www.shuang0420.com/2018/10/15/%E7%9F%A5%E8%AF%86%E6%8A%BD%E5%8F%96-%E4%BA%8B%E4%BB%B6%E6%8A%BD%E5%8F%96/)\n\n### 知识图谱\n\n- [翻译模型(Trans系列)的知识表示学习](https://mp.weixin.qq.com/s/STflo3c8nyG6iHh9dEeKOQ)\n- [知识图谱向量化表示](https://zhuanlan.zhihu.com/p/30320631)\n\n### Pytorch教程\n\n- [PyTorch 常用方法总结4：张量维度操作（拼接、维度扩展、压缩、转置、重复……）](https://zhuanlan.zhihu.com/p/31495102)\n- [Pytorch中的RNN之pack_padded_sequence()和pad_packed_sequence()](https://www.cnblogs.com/sbj123456789/p/9834018.html)\n- [pytorch学习笔记（二）：gradient](https://blog.csdn.net/u012436149/article/details/54645162)\n- [torch.multinomial()理解](https://blog.csdn.net/monchin/article/details/79787621)\n- [Pytorch 细节记录](https://www.cnblogs.com/king-lps/p/8570021.html)\n- [What does flatten_parameters() do?](https://stackoverflow.com/questions/53231571/what-does-flatten-parameters-do)\n- [关于Pytorch的二维tensor的gather和scatter_操作用法分析](https://www.cnblogs.com/HongjianChen/p/9450987.html)\n- [Pytorch scatter_ 理解轴的含义](https://blog.csdn.net/qq_16234613/article/details/79827006)\n- [‘model.eval()’ vs ‘with torch.no_grad()’](https://discuss.pytorch.org/t/model-eval-vs-with-torch-no-grad/19615)\n- [到底什么是生成式对抗网络GAN？](https://www.msra.cn/zh-cn/news/features/gan-20170511)\n\n### torchtext介绍\n\n- [torchtext](https://github.com/pytorch/text)\n- [A Tutorial on Torchtext](http://anie.me/On-Torchtext/)\n- [Torchtext 详细介绍](https://zhuanlan.zhihu.com/p/37223078)\n- [torchtext入门教程，轻松玩转文本数据处理](https://zhuanlan.zhihu.com/p/31139113)\n\n### 其他工具模块\n\n- [python的Tqdm模块](https://blog.csdn.net/langb2014/article/details/54798823)\n- [pytorch-crf](https://github.com/kmkurn/pytorch-crf)\n\n### 数据集\n\n- [Chinese-Literature-NER-RE-Dataset](https://github.com/lancopku/Chinese-Literature-NER-RE-Dataset)\n- [ChineseTextualInference](https://github.com/liuhuanyong/ChineseTextualInference)\n\n### 表示学习\n\n- [TransE-Knowledge-Graph-Embedding](https://github.com/Lapis-Hong/TransE-Knowledge-Graph-Embedding)\n- [OpenKE-PyTorch](https://github.com/ShulinCao/OpenKE-PyTorch)\n- [【语料】2500万中文三元组！](https://spaces.ac.cn/archives/4359)\n\n### 命名实体识别\n\n- [sequence_tagging](https://github.com/AdolHong/sequence_tagging)\n\n### 关系抽取\n\n- [ChineseNRE](https://github.com/buppt/ChineseNRE)\n- [pytorch-pcnn](https://github.com/ShomyLiu/pytorch-pcnn)\n- [关系抽取(分类)总结](http://shomy.top/2018/02/28/relation-extraction/)\n\n### 事件抽取\n\n这里暂时粗浅的将语义角色标注技术实现等同于事件抽取任务。\n\n- [语义角色标注](http://wiki.jikexueyuan.com/project/deep-learning/wordSence-identify.html)\n- [iobes_iob 与 iob_ranges 函数借鉴](https://github.com/glample/tagger/blob/master/utils.py)\n- [BiRNN-SRL](https://github.com/zxplkyy/BiRNN-SRL)\n- [chinese_semantic_role_labeling](https://github.com/Nrgeup/chinese_semantic_role_labeling)\n\n### 其他\n\n## 打赏\n\n如果该项目对您有所帮助，欢迎打赏~\n\n![UTOOLS1578660899400.jpg](https://lightsmile-img.oss-cn-beijing.aliyuncs.com/UTOOLS1578660899400.jpg)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/smilelight/lightKG",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lightKG",
    "package_url": "https://pypi.org/project/lightKG/",
    "platform": "",
    "project_url": "https://pypi.org/project/lightKG/",
    "project_urls": {
      "Homepage": "https://github.com/smilelight/lightKG"
    },
    "release_url": "https://pypi.org/project/lightKG/0.1.0.3/",
    "requires_dist": [
      "torchtext (>=0.4.0)",
      "tqdm (>=4.28.1)",
      "torch (>=1.0.0)",
      "pytorch-crf (>=0.7.0)",
      "scikit-learn (>=0.20.2)",
      "revtok",
      "jieba",
      "regex"
    ],
    "requires_python": "",
    "summary": "lightsmile's knowledge graph library",
    "version": "0.1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7643967,
  "releases": {
    "0.0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdd2fa5a1682d229759c5dae551d55e2c7ce12aed4979eb42b528ba99eca5fe3",
          "md5": "ba7062d86e0393b3d18eb3ae1003c74b",
          "sha256": "a3c5a31c976e30927390c221c46da8554d279162182abc88cbaf43a085be74a9"
        },
        "downloads": -1,
        "filename": "lightKG-0.0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba7062d86e0393b3d18eb3ae1003c74b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1431,
        "upload_time": "2019-02-02T12:46:35",
        "upload_time_iso_8601": "2019-02-02T12:46:35.267521Z",
        "url": "https://files.pythonhosted.org/packages/bd/d2/fa5a1682d229759c5dae551d55e2c7ce12aed4979eb42b528ba99eca5fe3/lightKG-0.0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f82b53f7f01600c7611d99b77ed65b2d5623ea7aabe9e8aacabf28afa075162e",
          "md5": "b9309f00bb0986144e5290d6dba31fc5",
          "sha256": "778b3511b8c958fab2bfe7ee795d93356b0f00421d8f81334fdec37192735940"
        },
        "downloads": -1,
        "filename": "lightKG-0.0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b9309f00bb0986144e5290d6dba31fc5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1122,
        "upload_time": "2019-02-02T12:46:37",
        "upload_time_iso_8601": "2019-02-02T12:46:37.486098Z",
        "url": "https://files.pythonhosted.org/packages/f8/2b/53f7f01600c7611d99b77ed65b2d5623ea7aabe9e8aacabf28afa075162e/lightKG-0.0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc355cb08a1ba36a70a51e660fbfc9c8fb81894a801ecaf3206a6efe22957bdc",
          "md5": "09c9efb28246b3f2b7425b07ec12a237",
          "sha256": "4e34afc5a7f9de9c000109e0c9e7046d86f805662d8d1a03cf2ae7957801b968"
        },
        "downloads": -1,
        "filename": "lightKG-0.0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "09c9efb28246b3f2b7425b07ec12a237",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20518,
        "upload_time": "2019-03-26T14:37:31",
        "upload_time_iso_8601": "2019-03-26T14:37:31.106746Z",
        "url": "https://files.pythonhosted.org/packages/dc/35/5cb08a1ba36a70a51e660fbfc9c8fb81894a801ecaf3206a6efe22957bdc/lightKG-0.0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba8974a29028b3ddedd1b3ca5fc4a8271e15b76f1ddd87e496371fa10e5ec262",
          "md5": "dfb0820429c9c40d18e252843739c15f",
          "sha256": "6940b5b8cce0b50864d2c6f746f521d0e7c1fdf807318853d5585e1813448243"
        },
        "downloads": -1,
        "filename": "lightKG-0.0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dfb0820429c9c40d18e252843739c15f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12848,
        "upload_time": "2019-03-26T14:37:33",
        "upload_time_iso_8601": "2019-03-26T14:37:33.402293Z",
        "url": "https://files.pythonhosted.org/packages/ba/89/74a29028b3ddedd1b3ca5fc4a8271e15b76f1ddd87e496371fa10e5ec262/lightKG-0.0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "799a91c214596b2ee1dcfeb80cd08a25aaefb1e65a1d7ee165a687f9537d8674",
          "md5": "2bbbaa95978dc87af752f5351e1a48f2",
          "sha256": "9650169b9985bce775d92da57d72786812864aaa9376533d44e402dc2505884a"
        },
        "downloads": -1,
        "filename": "lightKG-0.1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2bbbaa95978dc87af752f5351e1a48f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 34503,
        "upload_time": "2019-03-26T15:34:18",
        "upload_time_iso_8601": "2019-03-26T15:34:18.817070Z",
        "url": "https://files.pythonhosted.org/packages/79/9a/91c214596b2ee1dcfeb80cd08a25aaefb1e65a1d7ee165a687f9537d8674/lightKG-0.1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e13bf8122601708a1b945c64b3c2ef9cb1cf050dbfa4f6a598c867f3227c108",
          "md5": "75a8c12c91d645ba11c86c06e05d8bb3",
          "sha256": "f6adac7f7168c1e4f01f596d904e413b734381ccce70d1c0609fad42b7b89078"
        },
        "downloads": -1,
        "filename": "lightKG-0.1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "75a8c12c91d645ba11c86c06e05d8bb3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18577,
        "upload_time": "2019-03-26T15:34:21",
        "upload_time_iso_8601": "2019-03-26T15:34:21.743962Z",
        "url": "https://files.pythonhosted.org/packages/9e/13/bf8122601708a1b945c64b3c2ef9cb1cf050dbfa4f6a598c867f3227c108/lightKG-0.1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3efbb1eb609aac52a9cfe9423036133fae381f561008738875139e051a69077a",
          "md5": "c54a59814c6b8d8b321823afa369a395",
          "sha256": "81a13ede48826453997ebc4582bb06ef96e3b9eea7ddba29eca642fe3058f6ff"
        },
        "downloads": -1,
        "filename": "lightKG-0.1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c54a59814c6b8d8b321823afa369a395",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38811,
        "upload_time": "2019-04-14T06:33:15",
        "upload_time_iso_8601": "2019-04-14T06:33:15.938423Z",
        "url": "https://files.pythonhosted.org/packages/3e/fb/b1eb609aac52a9cfe9423036133fae381f561008738875139e051a69077a/lightKG-0.1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59a84741d822bc9ca8b0259aa15dbf14fe79a6fee5a57045b0ca0b84f3db0bff",
          "md5": "1db9d482da7c10b1b1d3749e216a89f3",
          "sha256": "fe08d3916ef974e06959d118d7d732e57b3127b8095d6fa957b7bb718427dfaa"
        },
        "downloads": -1,
        "filename": "lightKG-0.1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1db9d482da7c10b1b1d3749e216a89f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23364,
        "upload_time": "2019-04-14T06:33:21",
        "upload_time_iso_8601": "2019-04-14T06:33:21.293605Z",
        "url": "https://files.pythonhosted.org/packages/59/a8/4741d822bc9ca8b0259aa15dbf14fe79a6fee5a57045b0ca0b84f3db0bff/lightKG-0.1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f415478cf11a4c6a4b5adb97da77b24967dd9800849d8906df0b0fcfbcfbe13",
          "md5": "7e166af10293e4cae786bd768e109ab7",
          "sha256": "08cc2ca3688e758fd2741e3d313c43c5800ff021fcc989cd11689c5e373aaf21"
        },
        "downloads": -1,
        "filename": "lightKG-0.1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e166af10293e4cae786bd768e109ab7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38594,
        "upload_time": "2020-07-07T01:59:07",
        "upload_time_iso_8601": "2020-07-07T01:59:07.558582Z",
        "url": "https://files.pythonhosted.org/packages/2f/41/5478cf11a4c6a4b5adb97da77b24967dd9800849d8906df0b0fcfbcfbe13/lightKG-0.1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e31f680391ebb5798c1fae155cdc7edfbd566c7faac9623ce052abd276bc577",
          "md5": "bd5b6bac68cc19c713e2138d28f224a4",
          "sha256": "c09265077dedb6905d6906c2fd4062f2ad2eae2e6c022dd7ecb998f3eff91f82"
        },
        "downloads": -1,
        "filename": "lightKG-0.1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "bd5b6bac68cc19c713e2138d28f224a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21844,
        "upload_time": "2020-07-07T01:59:09",
        "upload_time_iso_8601": "2020-07-07T01:59:09.478935Z",
        "url": "https://files.pythonhosted.org/packages/0e/31/f680391ebb5798c1fae155cdc7edfbd566c7faac9623ce052abd276bc577/lightKG-0.1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f415478cf11a4c6a4b5adb97da77b24967dd9800849d8906df0b0fcfbcfbe13",
        "md5": "7e166af10293e4cae786bd768e109ab7",
        "sha256": "08cc2ca3688e758fd2741e3d313c43c5800ff021fcc989cd11689c5e373aaf21"
      },
      "downloads": -1,
      "filename": "lightKG-0.1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7e166af10293e4cae786bd768e109ab7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 38594,
      "upload_time": "2020-07-07T01:59:07",
      "upload_time_iso_8601": "2020-07-07T01:59:07.558582Z",
      "url": "https://files.pythonhosted.org/packages/2f/41/5478cf11a4c6a4b5adb97da77b24967dd9800849d8906df0b0fcfbcfbe13/lightKG-0.1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0e31f680391ebb5798c1fae155cdc7edfbd566c7faac9623ce052abd276bc577",
        "md5": "bd5b6bac68cc19c713e2138d28f224a4",
        "sha256": "c09265077dedb6905d6906c2fd4062f2ad2eae2e6c022dd7ecb998f3eff91f82"
      },
      "downloads": -1,
      "filename": "lightKG-0.1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "bd5b6bac68cc19c713e2138d28f224a4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21844,
      "upload_time": "2020-07-07T01:59:09",
      "upload_time_iso_8601": "2020-07-07T01:59:09.478935Z",
      "url": "https://files.pythonhosted.org/packages/0e/31/f680391ebb5798c1fae155cdc7edfbd566c7faac9623ce052abd276bc577/lightKG-0.1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}