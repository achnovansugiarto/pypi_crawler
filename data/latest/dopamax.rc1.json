{
  "info": {
    "author": "Ryan Strauss",
    "author_email": "ryanrstrauss@icloud.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "[1]: https://github.com/google/jax\n\n[2]: https://arxiv.org/abs/2104.06272\n\n# Dopamax\n\n<p>\n       <a href=\"https://pypi.python.org/pypi/dopamax\">\n        <img src=\"https://img.shields.io/pypi/pyversions/dopamax.svg?style=flat-square\" /></a>\n       <a href= \"https://badge.fury.io/py/dopamax\">\n        <img src=\"https://badge.fury.io/py/dopamax.svg\" /></a>\n       <a href= \"https://github.com/rystrau/dopamax/blob/master/LICENSE.md\">\n        <img src=\"https://img.shields.io/badge/license-MIT-blue.svg\" /></a>\n       <a href= \"https://github.com/psf/black\">\n        <img src=\"https://img.shields.io/badge/code%20style-black-000000.svg\" /></a>\n</p>\n\nDopamax is a library containing pure [JAX][1] implementations of common reinforcement learning algorithms. _Everything_\nis implemented in JAX, including the environments. This allows for extremely fast training and evaluation of agents,\nbecause the entire loop of environment simulation, agent interaction, and policy updates can be compiled as a single\nXLA program and executed on CPUs, GPUs, or TPUs. More specifically, rhe implementations in Dopamax follow the\nAnakin Podracer architecture -- see [this paper][2] for more details.\n\n## Supported Algorithms\n\n- [Proximal Policy Optimization (PPO)](dopamax/agents/ppo.py)\n- [Deep Q-Network (DQN)](dopamax/agents/dqn.py)\n\n## Installation\n\nDopamax can be installed with:\n\n```bash\npip install git+https://github.com/rystrauss/dopamax.git\n```\n\nThis will install the `dopamax` Python package, as well as a command-line interface (CLI) for training and evaluation.\n\n## Usage\n\nAfter installation, the Dopamax CLI can be used to train and evaluate agents:\n\n```bash\ndopamax --help\n```\n\nDopamax uses [Weights and Biases (W&B)](https://wandb.ai/site) for logging and artifact management. Before using the CLI\nfor training and evaluation, you must first make sure you have a W&B account (it's free) and have authenticated\nwith `wandb login`.\n\n### Training\n\nAgent's can be trained using the `dopamax train` command, to which you must provide a configuration file. The\nconfiguration file is a YAML file that specifies the agent, environment, and training hyperparameters. You can find\nexamples in the [configs](configs) directory. For example, to train a PPO agent on the CartPole environment, you would\nrun:\n\n```bash\ndopamax train --config examples/ppo-cartpole/config.yaml\n```\n\nNote that all of the example config files have a random seed specified, so you will get the same result every time you\nrun the command. The seeds provided in the examples are known to result in a successful run (with the given\nhyperparameters). To get different results on each run, you can remove the seed from the config file.\n\n### Evaluation\n\nOnce you have trained some agents, you can evaluate them using the `dopamax evaluate` command. This will allow you to\nspecify a W&B agent artifact that you'd like to evaluate (these artifacts are produced by the training runs and\ncontain the agent hyperparameters and weights from the end of training). For example, to evaluate a PPO agent trained\non CartPole, you might use a command like:\n\n```bash\ndopamax evaluate --agent_artifact CartPole-PPO-agent:v0 --num_episodes 100\n```\n\nwhere `--num_episodes 100` signals that you would like to rollout the agent's policy for 100 episodes. The minimum,\nmean, and maximum episode reward will be logged back to W&B. If you would additionally like to render the episodes and\nhave then logged back to W&B, you can provide the `--render` flag. But note that this will usually significantly slow\ndown the evaluation process since environment rendering is not a pure JAX function and requires callbacks to the host.\nYou should usually only use the `--render` flag with a small number of episodes.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rystrauss/dopamax",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dopamax",
    "package_url": "https://pypi.org/project/dopamax/",
    "platform": "any",
    "project_url": "https://pypi.org/project/dopamax/",
    "project_urls": {
      "Homepage": "https://github.com/rystrauss/dopamax"
    },
    "release_url": "https://pypi.org/project/dopamax/0.1.0/",
    "requires_dist": [
      "jax (>=0.4.4)",
      "chex (>=0.1.6)",
      "brax (>=0.1.1)",
      "click (>=8.1.3)",
      "distrax (>=0.1.3)",
      "dm-env (>=1.6)",
      "dm-haiku (>=0.0.9)",
      "einops (>=0.6.0)",
      "ffmpeg (>=1.4)",
      "imageio (>=2.25.1)",
      "moviepy (>=1.0.3)",
      "ml-collections (>=0.1.1)",
      "pygame (>=2.1.3)",
      "numpy (>=1.22.4)",
      "rlax (>=0.1.5)",
      "tqdm (>=4.64.1)",
      "wandb (>=0.13.10)"
    ],
    "requires_python": ">=3.10",
    "summary": "Reinforcement learning in pure JAX.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16911836,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ac4c73f95755dfb5b913a3c1c17c8f45952b58927692655923cf9b46d891dda",
          "md5": "fdd3c1cd2e50356251a15ce9208d61af",
          "sha256": "865a6dd0383968eae8aa371b3bfedf1345d09b48b40daa7668f3584551aa4b10"
        },
        "downloads": -1,
        "filename": "dopamax-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fdd3c1cd2e50356251a15ce9208d61af",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 38850,
        "upload_time": "2023-02-18T05:25:42",
        "upload_time_iso_8601": "2023-02-18T05:25:42.398028Z",
        "url": "https://files.pythonhosted.org/packages/1a/c4/c73f95755dfb5b913a3c1c17c8f45952b58927692655923cf9b46d891dda/dopamax-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6894d9a1bf7e0b77a31317e45a5a5e78f4359898bf6ceff2568d75d14ce7201",
          "md5": "ee56d6247463e1e53028d3c99cba2f8a",
          "sha256": "2826ddc264f1009da3a31e0b5f691c7e6d5c1bae341ee6346ec5a5813bc3f0d7"
        },
        "downloads": -1,
        "filename": "dopamax-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ee56d6247463e1e53028d3c99cba2f8a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 27476,
        "upload_time": "2023-02-18T05:25:44",
        "upload_time_iso_8601": "2023-02-18T05:25:44.296130Z",
        "url": "https://files.pythonhosted.org/packages/f6/89/4d9a1bf7e0b77a31317e45a5a5e78f4359898bf6ceff2568d75d14ce7201/dopamax-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ac4c73f95755dfb5b913a3c1c17c8f45952b58927692655923cf9b46d891dda",
        "md5": "fdd3c1cd2e50356251a15ce9208d61af",
        "sha256": "865a6dd0383968eae8aa371b3bfedf1345d09b48b40daa7668f3584551aa4b10"
      },
      "downloads": -1,
      "filename": "dopamax-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fdd3c1cd2e50356251a15ce9208d61af",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 38850,
      "upload_time": "2023-02-18T05:25:42",
      "upload_time_iso_8601": "2023-02-18T05:25:42.398028Z",
      "url": "https://files.pythonhosted.org/packages/1a/c4/c73f95755dfb5b913a3c1c17c8f45952b58927692655923cf9b46d891dda/dopamax-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f6894d9a1bf7e0b77a31317e45a5a5e78f4359898bf6ceff2568d75d14ce7201",
        "md5": "ee56d6247463e1e53028d3c99cba2f8a",
        "sha256": "2826ddc264f1009da3a31e0b5f691c7e6d5c1bae341ee6346ec5a5813bc3f0d7"
      },
      "downloads": -1,
      "filename": "dopamax-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ee56d6247463e1e53028d3c99cba2f8a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 27476,
      "upload_time": "2023-02-18T05:25:44",
      "upload_time_iso_8601": "2023-02-18T05:25:44.296130Z",
      "url": "https://files.pythonhosted.org/packages/f6/89/4d9a1bf7e0b77a31317e45a5a5e78f4359898bf6ceff2568d75d14ce7201/dopamax-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}