{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Internal Jfrog Artifactory store plugin for MLflow\nThis repository provides a MLflow plugin that allows users to use a `Generic Artifactory repository` as the artifact store for MLflow.\n\n![Mlflow](./doc/MLflow-logo-final-white-TM.png)\n\n## Implementation overview\n* `artifactory`: this package includes the `JFrogArtifactRepository` class that is used to read and write artifacts from Aliyun OSS storage.\n* `setup.py` file defines entrypoints that tell MLflow to automatically associate the `artifactory` URIs with the `JFrogArtifactRepository` implementation when the `artifactory` library is installed. The entrypoints are configured as follows:\n\n```\nentry_points={\n        \"mlflow.artifact_repository\": [\n        entry_points={\n            \"mlflow.artifact_repository\": \"artifactory=mlflow_artifactory_plugin.store.artifact.jfrog_artifact_repository:JFrogArtifactRepository\",  # noqa\n        ]\n    },\n```\n\n# Running\n\n![Mlflow](./doc/Mlfow-quick-presentation.gif)\n\n# Usage\n\nInstall by pip on both your client and the server, and then use MLflow as normal. The JFrog Artifactory store support will be provided automatically.\n\n<!-- ```bash\npip install mlflow[mlflow-jfrog-artifactory]\n``` -->\n\n\nThe plugin implements all of the MLflow artifact store APIs.\nIt expects Artifactory Storage access credentials in the ``MLFLOW_ARTIFACTORY_ENDPOINT_URL``, ``MLFLOW_ARTIFACTORY_KEY`` and ``MLFLOW_ARTIFACTORY_REPO`` environment variables,\nso you must set these variables on both your client application and your MLflow tracking server.\nTo use Artifactory as an artifact store, an artifactory URI of the form ``artifactory://<path>`` must be provided, as shown in the example below:\n\n```python\nimport mlflow\nimport mlflow.pyfunc\n\nclass Mod(mlflow.pyfunc.PythonModel):\n    def predict(self, ctx, inp):\n        return 7\n\nexp_name = \"myexp\"\nmlflow.create_experiment(exp_name, artifact_location=\"artifactory://mlflow-test/\")\nmlflow.set_experiment(exp_name)\nmlflow.pyfunc.log_model('model_test', python_model=Mod())\n```\n\n# Fix SSL error\n\nThis plugin help to connect to external services (here Jrog artifactory).\n\nIf you are facing this error, you proabably need to pass the location of the certifact.\n*ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1123)*\n\n\nSelf-signed SSL certificates are obviously not taken into account implicitly and you need to  specify in REQUESTS_CA_BUNDLE. You can get around this behaviour by explicitly merging the environment settings into your session. For a Linux system you can set it like this before running the script:\n```export REQUESTS_CA_BUNDLE=/path/to/certificat/file.pem```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mlflow-jfrog-artifactory",
    "package_url": "https://pypi.org/project/mlflow-jfrog-artifactory/",
    "platform": "any",
    "project_url": "https://pypi.org/project/mlflow-jfrog-artifactory/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/mlflow-jfrog-artifactory/0.0.3/",
    "requires_dist": [
      "mlflow (>=1.11)",
      "rtpy (==1.4.9)"
    ],
    "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,<4.0,>=2.7",
    "summary": "Artifactory plugin for MLflow for Artifact storage",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10796587,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d70a686d5712bbc08d51986d7920012bd8148d4ddb381a035f99635537861dec",
          "md5": "1ec6fe8bc0d50ed81798790dcef74d6e",
          "sha256": "c47b0b8598ff2bc171a73048cd0a17bba45bde615bce58e1686a4900e6b0e746"
        },
        "downloads": -1,
        "filename": "mlflow_jfrog_artifactory-0.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ec6fe8bc0d50ed81798790dcef74d6e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,<4.0,>=2.7",
        "size": 6084,
        "upload_time": "2021-07-01T12:36:29",
        "upload_time_iso_8601": "2021-07-01T12:36:29.989384Z",
        "url": "https://files.pythonhosted.org/packages/d7/0a/686d5712bbc08d51986d7920012bd8148d4ddb381a035f99635537861dec/mlflow_jfrog_artifactory-0.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8570816390f539c6c8a501cdcbb3ca023bf18cf454d5efbd260262f5b76a8dcc",
          "md5": "9cb1ea0144c5005a826f31d5baefdb5d",
          "sha256": "bd8c152e74ddee943e45345efbd28819e914681c58aa72e6fc2d4d44f0754f3f"
        },
        "downloads": -1,
        "filename": "mlflow-jfrog-artifactory-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9cb1ea0144c5005a826f31d5baefdb5d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,<4.0,>=2.7",
        "size": 5147,
        "upload_time": "2021-07-01T12:36:31",
        "upload_time_iso_8601": "2021-07-01T12:36:31.347761Z",
        "url": "https://files.pythonhosted.org/packages/85/70/816390f539c6c8a501cdcbb3ca023bf18cf454d5efbd260262f5b76a8dcc/mlflow-jfrog-artifactory-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d70a686d5712bbc08d51986d7920012bd8148d4ddb381a035f99635537861dec",
        "md5": "1ec6fe8bc0d50ed81798790dcef74d6e",
        "sha256": "c47b0b8598ff2bc171a73048cd0a17bba45bde615bce58e1686a4900e6b0e746"
      },
      "downloads": -1,
      "filename": "mlflow_jfrog_artifactory-0.0.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1ec6fe8bc0d50ed81798790dcef74d6e",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,<4.0,>=2.7",
      "size": 6084,
      "upload_time": "2021-07-01T12:36:29",
      "upload_time_iso_8601": "2021-07-01T12:36:29.989384Z",
      "url": "https://files.pythonhosted.org/packages/d7/0a/686d5712bbc08d51986d7920012bd8148d4ddb381a035f99635537861dec/mlflow_jfrog_artifactory-0.0.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8570816390f539c6c8a501cdcbb3ca023bf18cf454d5efbd260262f5b76a8dcc",
        "md5": "9cb1ea0144c5005a826f31d5baefdb5d",
        "sha256": "bd8c152e74ddee943e45345efbd28819e914681c58aa72e6fc2d4d44f0754f3f"
      },
      "downloads": -1,
      "filename": "mlflow-jfrog-artifactory-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "9cb1ea0144c5005a826f31d5baefdb5d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,<4.0,>=2.7",
      "size": 5147,
      "upload_time": "2021-07-01T12:36:31",
      "upload_time_iso_8601": "2021-07-01T12:36:31.347761Z",
      "url": "https://files.pythonhosted.org/packages/85/70/816390f539c6c8a501cdcbb3ca023bf18cf454d5efbd260262f5b76a8dcc/mlflow-jfrog-artifactory-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}