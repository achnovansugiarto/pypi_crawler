{
  "info": {
    "author": "MetaBrainz Foundation",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Introduction\n\nThis project is aim to create a sandbox for developers to develop and\nexperiment with music recommendation engines. To accomplish this goal,\nthe MetaBrainz Foundation has created and hosted a number of data-sets\nthat can be accessed as a part of this project.\n\nYou can see some of the data sets that are hosted here:\n\n  http://bono.metabrainz.org:8000\n\nThe AcousticBrainz project hosts the Annoy indexes that allows\nyou to find recordings that have similar characteristics given an initial recording.\n\nThe ListenBrainz project offers a number of data sets:\n\n1. Collaborative filtered recordings that suggest what recordings a\nuser should listen to based on their previous listening habits.\n2. User statistics that were derived from users recent listening\nhabits.\n\nMusicBrainz provides:\n\n1. Related artists -- which artists are related to other artists.\n\nMessyBrainz provides:\n\n1. MessyBrainz -> MusicBrainz mapping for mapping listens with MSIDs\n   to MusicBrainz MBIDs\n\n\n## Installation\n\n\n**Linux and Mac**\n```\nvirtualenv -p python3 .ve\nsource .ve/bin/activate\npip3 install -r requirements.txt\n```\n\nIf you plan to do local development or run tests, you'll need to:\n\n```\npip3 install -e .\n```\n\n**Windows**\n\n```\nvirtualenv -p python3 .ve\n.ve\\Scripts\\activate.bat\npip3 install -r requirements.txt\n```\n\n**Docker**\n\nOn non Linux operating systems installing python modules can be a bit of a pain. For that a thin-shell docker\ncontainer can be created. Note that docker is not required, but helpful if you're not on Linux.\n\nTo use this container, you first need to build the container and start it:\n\n```\n./run-docker.sh build\n./run-docker.sh up\n```\n\nNow you can run any of the scripts via run-docker.sh:\n\n```\n./run-docker.sh recommend_recordings.py rob similar\n```\n\nWhen you are done with the container, take it down with:\n\n```\n./run-docker.sh down\n```\n\nTo run tests:\n\n```\n./run-docker.sh test\n```\n\n\n## sample use\n\n**Linux**\n```\n./recommended_recordings.py <user name> <artist type [top/similar]>\nopen OpenPost.html\n```\n\n**Windows**\n```\n./recommended_recordings.py <user name> <artist type [top/similar]>\nOpenPost.html\n```\n\n**Docker**\n\n\n```\ndocker build -t metabrainz/troi-hoster .\ndocker run --rm -p 8000:80 --name troi-hoster metabrainz/troi-hoster\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/metabrainz/troi-recommendation-playground",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "troi",
    "package_url": "https://pypi.org/project/troi/",
    "platform": "",
    "project_url": "https://pypi.org/project/troi/",
    "project_urls": {
      "Homepage": "https://github.com/metabrainz/troi-recommendation-playground"
    },
    "release_url": "https://pypi.org/project/troi/0.0.1rc0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "An empathetic music recommendation system pipeline",
    "version": "0.0.1rc0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8458516,
  "releases": {
    "0.0.1rc0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfc82a11f12de520203acbe19d5a0a44f56da63db94f6a740b45922c5573c533",
          "md5": "ff5ed8313db48d060f2d989795f76306",
          "sha256": "1a85220b4f4ad06dc9bbbe0ee92e0d987720323705aa9f497c69c7ae3e0874bf"
        },
        "downloads": -1,
        "filename": "troi-0.0.1rc0.tar.gz",
        "has_sig": false,
        "md5_digest": "ff5ed8313db48d060f2d989795f76306",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 14598,
        "upload_time": "2020-10-20T16:42:14",
        "upload_time_iso_8601": "2020-10-20T16:42:14.502786Z",
        "url": "https://files.pythonhosted.org/packages/df/c8/2a11f12de520203acbe19d5a0a44f56da63db94f6a740b45922c5573c533/troi-0.0.1rc0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dfc82a11f12de520203acbe19d5a0a44f56da63db94f6a740b45922c5573c533",
        "md5": "ff5ed8313db48d060f2d989795f76306",
        "sha256": "1a85220b4f4ad06dc9bbbe0ee92e0d987720323705aa9f497c69c7ae3e0874bf"
      },
      "downloads": -1,
      "filename": "troi-0.0.1rc0.tar.gz",
      "has_sig": false,
      "md5_digest": "ff5ed8313db48d060f2d989795f76306",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 14598,
      "upload_time": "2020-10-20T16:42:14",
      "upload_time_iso_8601": "2020-10-20T16:42:14.502786Z",
      "url": "https://files.pythonhosted.org/packages/df/c8/2a11f12de520203acbe19d5a0a44f56da63db94f6a740b45922c5573c533/troi-0.0.1rc0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}