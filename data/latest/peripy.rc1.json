{
  "info": {
    "author": "Jim Madge, Ben Boys, Tim Dodwell, Greg Mingas",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "PeriPy\n======\n\n[![Build Status](https://travis-ci.com/alan-turing-institute/PeriPy.svg?branch=master)](https://travis-ci.com/alan-turing-institute/PeriPy)\n[![codecov](https://codecov.io/gh/alan-turing-institute/PeriPy/branch/master/graph/badge.svg)](https://codecov.io/gh/alan-turing-institute/PeriPy)\n\nPeriPy, a collaboration between Exeter, Cambridge &amp; the Alan Turing Institute, is a lightweight, open-source and high-performance python package for solving bond-based peridynamics (BBPD) problems in solid mechanics. It is implemented in [Python](https://www.python.org/) and the performance critical parts are implemented in [Cython](https://cython.org/) and [PyOpenCL](https://documen.tician.de/pyopencl/).\n\nPeriPy allows users to write their code in pure Python. Simulations are then executed seamlessly using high performance OpenCL code.\n\nFeatures\n--------\n- Easy to use. Get started with the latest documentation at [peripy.readthedocs.org](https://peripy.readthedocs.org)\n- 2-10x faster than exisiting OpenCL solvers\n- 'Outer-loop' applications including uncertainty quantification, optimisation and feature recognition are made possible\n- Support for both regular and irregular mesh files. See [meshio](https://github.com/nschloe/meshio) for the full list of mesh formats\n- Support for composite and interface material models\n- Support for arbritrary n-linear 'microelastic' damage models\n- Simulates force or displacement controlled boundary conditions and initial conditions\n- Arbritrary subsets of particles are easily measured for their displacements, damages etc.\n- Output files can be viewed in [Paraview](https://www.paraview.org/)\n- Various 'partial volume correction' algorithms, 'surface correction' algorithms and 'micromodulus functions' are included. The code is easily extended to define your own\n- Velocity-Verlet, Euler and Euler-Cromer integrators are included and the code is easily extended to define your own higher order and/or adaptive integrators\n\n\nGet started (preferred)\n-----------------------\n\n### Building and Installation ###\n\n- The package requires Python 3.7+\n- Install pyopencl, a build dependency, by following these instructions https://documen.tician.de/pyopencl/misc.html\n- To install pyopencl, note that pyopencl may need to be installed from `(base)` environment\n- If using pyopencl on Windows with a CPU (rather than a GPU), first, ensure the C++ build tools for Visual Studio are installed (e.g., see https://youtu.be/KUTVnxCeC50)\n- Make sure the OpenCL device driver is installed for your device:\n  ```\n  python\n  import pyopencl\n  pyopencl.get_platforms()\n  ```\n  The error `pyopencl._cl.LogicError: clGetPlatformIDs failed: PLATFORM_NOT_FOUND_KHR` means that the OpenCL device driver is not correctly installed.\n- Install cython, a build dependency, `pip install cython`\n- Install PeriPy `pip install peripy`\n\n### Running examples ###\n\n- Run the first example by typing `peripy run example1` on the command line\n- You can show the example code by typing `peripy run example1 --cat`\n- Type `peripy run --list` for a list of examples\n- For usage, type `peripy run --help`\n\n### Running the tests ###\n\nThe tests for this project use [pytest](https://pytest.org/en/latest/). To run\nthe tests yourself,\n\n- Install pytest using pip `pip install pytest`\n- Type `peripy test` on the command line\n- For coverage install `pytest-cov` and type `peripy coverage` on the command line\n\nGet started from the GitHub repository (for developers)\n-------------------------------------------------------\n\n### Building and Installation ###\n\n- The package requires Python 3.7+\n- Install pyopencl, a build dependency, by following these instructions https://documen.tician.de/pyopencl/misc.html\n- To install pyopencl, note that pyopencl may need to be installed from `(base)` environment\n- If using pyopencl on Windows with a CPU (rather than a GPU), first, ensure the C++ build tools for Visual Studio are installed (e.g., see https://youtu.be/KUTVnxCeC50)\n- Make sure the OpenCL device driver is installed for your device\n  ```\n  python\n  import pyopencl\n  pyopencl.get_platforms()\n  ```\n  The error `pyopencl._cl.LogicError: clGetPlatformIDs failed: PLATFORM_NOT_FOUND_KHR` means that the OpenCL device driver is not correctly installed.\n- Install cython, a build dependency, `pip install cython`\n- Clone the repository `git clone\n  git@github.com:alan-turing-institute/peripy.git`\n- Install using pip `pip install -e .` from the root directory of the repository\n\n### Running examples ###\n\n- You can find examples of how to use the package under:`peripy/examples/`. Run the first example by typing `python peripy/examples/example1/example.py`\n\n### Running the tests ###\n\nThe tests for this project use [pytest](https://pytest.org/en/latest/). To run\nthe tests yourself,\n\n- If you haven't already, install using pip `pip install -e .` from the root directory of the repository\n- Install pytest using pip `pip install pytest`\n- Run `pytest` from the root directory of the repository\n- For coverage install `pytest-cov` and run `pytest --cov=./peripy`\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alan-turing-institute/Probabilistic-Peridynamics",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "peripy",
    "package_url": "https://pypi.org/project/peripy/",
    "platform": "",
    "project_url": "https://pypi.org/project/peripy/",
    "project_urls": {
      "Homepage": "https://github.com/alan-turing-institute/Probabilistic-Peridynamics"
    },
    "release_url": "https://pypi.org/project/peripy/1.0.0/",
    "requires_dist": [
      "meshio",
      "numpy",
      "pyopencl",
      "scipy",
      "tqdm",
      "h5py",
      "sklearn",
      "sphinx-rtd-theme"
    ],
    "requires_python": "",
    "summary": "A fast OpenCL Peridynamics package for python",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10994418,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a0a17c74926a3fc13bdc4653684d60abe4078fc6e22c32a4f066f45e76d9506",
          "md5": "be1d725f9052546a2e59dd2b9068b374",
          "sha256": "d3fe21fa0592d871f8fa298f3ab7526aab56d0ae0c4e651a386ee938af0c255f"
        },
        "downloads": -1,
        "filename": "peripy-1.0.0-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "be1d725f9052546a2e59dd2b9068b374",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 5536125,
        "upload_time": "2021-07-24T16:43:40",
        "upload_time_iso_8601": "2021-07-24T16:43:40.415555Z",
        "url": "https://files.pythonhosted.org/packages/0a/0a/17c74926a3fc13bdc4653684d60abe4078fc6e22c32a4f066f45e76d9506/peripy-1.0.0-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbd80649d03f630104591b18da77bb233a6c949831108b880078bea802abff42",
          "md5": "ad7986709862ecd74c0e1299ca39de72",
          "sha256": "b88874ae777454a794700a2b105713d47869c302d9201c058528dd9f16c759cb"
        },
        "downloads": -1,
        "filename": "peripy-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ad7986709862ecd74c0e1299ca39de72",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5149197,
        "upload_time": "2021-07-24T16:43:44",
        "upload_time_iso_8601": "2021-07-24T16:43:44.536549Z",
        "url": "https://files.pythonhosted.org/packages/bb/d8/0649d03f630104591b18da77bb233a6c949831108b880078bea802abff42/peripy-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a0a17c74926a3fc13bdc4653684d60abe4078fc6e22c32a4f066f45e76d9506",
        "md5": "be1d725f9052546a2e59dd2b9068b374",
        "sha256": "d3fe21fa0592d871f8fa298f3ab7526aab56d0ae0c4e651a386ee938af0c255f"
      },
      "downloads": -1,
      "filename": "peripy-1.0.0-cp37-cp37m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "be1d725f9052546a2e59dd2b9068b374",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": null,
      "size": 5536125,
      "upload_time": "2021-07-24T16:43:40",
      "upload_time_iso_8601": "2021-07-24T16:43:40.415555Z",
      "url": "https://files.pythonhosted.org/packages/0a/0a/17c74926a3fc13bdc4653684d60abe4078fc6e22c32a4f066f45e76d9506/peripy-1.0.0-cp37-cp37m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bbd80649d03f630104591b18da77bb233a6c949831108b880078bea802abff42",
        "md5": "ad7986709862ecd74c0e1299ca39de72",
        "sha256": "b88874ae777454a794700a2b105713d47869c302d9201c058528dd9f16c759cb"
      },
      "downloads": -1,
      "filename": "peripy-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ad7986709862ecd74c0e1299ca39de72",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5149197,
      "upload_time": "2021-07-24T16:43:44",
      "upload_time_iso_8601": "2021-07-24T16:43:44.536549Z",
      "url": "https://files.pythonhosted.org/packages/bb/d8/0649d03f630104591b18da77bb233a6c949831108b880078bea802abff42/peripy-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}