{
  "info": {
    "author": "",
    "author_email": "Guillermo Aumatell <gaumatellsalom@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python :: 3"
    ],
    "description": "<p align=\"center\"> <img src=\"./etc/metamorf-logo.png\" width=\"500\" /> </p>\r\n\r\n\r\n## What is Metamorf\r\n\r\nMetamorf is a Metadata Suite that generates SQL code within a framework based on *select* statements.\r\nThose queries are generated based on metadata that the user has entered on the framework.\r\nAll this metadata needs to be processed to maximize its potential. Metamorf can execute and materialize\r\nthese datasets, control the lineage end to end, even deploy an api sharing all the metadata.\r\n\r\n## Architecture\r\n\r\n<p align=\"center\"> <img src=\"./etc/metamorf-arch.png\" width=\"600\" /> </p>\r\n\r\nMetamorf is a Python Software that orchestrates, controls and transforms data. From a \r\nmetadata entry, Metamorf process the metadata to full its system and in exchange grants a series\r\nof functionalities that allows to control all your datawarehouse.\r\n\r\nMetamorf works with the concept of *owner*: it can be a user or a use case. Some actions of metamorf\r\ncan be done selecting an owner, indicated  on the configuration file.\r\nIt can be useful for teamwork using the same Metadata Database and isolating each user or use case\r\nunder development. Is up to you.\r\n\r\nMetamorf stores all the metadata historically, it means that the users can see the status of their\r\ndatawarehouse in the past at any time and know how the data was processed.\r\n\r\n\r\n### Databases\r\n\r\nActually Metamorf supports the following databases:\r\n- Snowflake\r\n- SQLite\r\n\r\n## How to Start\r\nTo install Metamorf, you need Python 3.10, and you can install it using pip. \r\n    \r\n    pip install metamorf\r\n\r\nOnce installed, you can see all the available commands typing:\r\n\r\n    metamorf help\r\n\r\nFor a quick start, create a directory where you want to locate all the configuration files.\r\n\r\n    metamorf init\r\n\r\nYou have initialized your environment to configure Metamorf. The basic configuration is through\r\na SQLite database.\r\n  \r\nMetamorf can be deployed where the configuration file says. If SQLite is selected (as default)\r\nand it doesn't exist, Metamorf will create the databases. Try it!\r\n\r\n    metamorf deploy\r\n\r\nNow you have on your repository all the configuration files and a data and metadata example databases.  \r\nTo deploy an example on both databases, just type:\r\n\r\n    metamorf deploy-example\r\n\r\nA fake dataset is deployed on the data database, and a metadata entry is inserted on the metadata database.\r\nYou can just watch all these things with any Database Tool as DBeaver.  \r\n  \r\nIf you want to process these metadata, try the command:\r\n\r\n    metamorf process\r\n\r\nNow all the metadata is processed and the main tables of Metamorf are populated.\r\nTo see if all works, you can just type any of the features that Metamorf offers:\r\n\r\nIf you want to run the processes indicated on the metadata, you can just type:\r\n\r\n    metadata run\r\n\r\nProbably you just want the SQL Files to execute from other platforms, type then:\r\n\r\n    metadata output\r\n\r\nThe results are located on the output folder on your repository.  \r\n\r\nThe configuration file permits you to configure Metamorf to adapt it to your needs.\r\nFor example, one interesting option could be to generate all you datasets on *dbt* format.\r\nTo achieve it, just change your *configuration.yml* file, **output** option, **type** value to **dbt**.\r\n\r\n      output:\r\n        type: dbt\r\n\r\nYou can execute again \r\n    \r\n    metadata output\r\n\r\nAnd now you have all the necessary files for your dbt project.  \r\n\r\nThis tutorial is just a small demonstration about metamorf and its potential.\r\n\r\n*Note: First versions of Metamorf were only tested on Windows OS.*\r\n\r\n## Commands\r\n\r\nMetamorf works with commands as:\r\n\r\n    metamorf [command] [arguments]\r\n\r\nIt accepts the commands showed in this section. Some of these commands accept arguments \r\nto select some datasets / files or an owner.\r\n\r\nArguments to specify the file or the target table:\r\n\r\n    --select name_of_the_selection\r\n    -s name_of_the_selection\r\n\r\nArguments to specify the owner:\r\n\r\n    --owner target_owner_name\r\n    -o target_owner_name\r\n\r\n- **help**: it shows all the commands available\r\n- **manifest**: it generates a manifest json file with all the dataset information. It will be used in future features.\r\n- **api**: it deploys an api that serve all the dataset information.\r\n- **validate**: it validates the configuration file.\r\n- **init**: It creates the necessary folders, configuration file and other elements to execute metamorf on the current path. \r\nThe user can specify the target databases type (data and metadata) with the arguments [-d/--database, -m/--metadata]<sup>1</sup> \r\n- **deploy**: It deploys Metamorf on the metadata database indicated on the configuration file.\r\n- **deploy-example**: It deploys an example on both databases.\r\n- **download**: It downloads all the metadata entry to the entry folder. It can be indicated the owner and the tables.\r\n- **upload**: It uploads the metadata entry from the entry folder to the metadata database.\r\n- **commit**: It commits the metadata entry from the actual owner. It can be useful to save gold versions and develop new datasets without any risk.\r\n- **recover**: It recovers the last commit from the actual owner.\r\n- **output**: It generates all the dataset files on the *output* folder.\r\n- **delete**: It deletes all the metadata from the metadata entry.\r\n- **backup**: It downloads a backup from all the system.\r\n- **restore**: It uploads all the backup to the system.\r\n\r\n<sup>1</sup> Actually Metamorf accepts the databases indicated on this [section](#databases)\r\n\r\n## Roadmap\r\n\r\n- *[Under development]* Include Datavault 2.0 Module to simplify the metadata entry for this modelling.\r\n- *[Under development]* Include a metadata entry validator to avoid unexpected errors.\r\n- *[Near development]* Include File loader.\r\n- *[Near development]* Create a detailed documentation.\r\n- *[Near development]* Include more materialization and more metadata transformation speeders.\r\n- *[Near development]* Include easier metadata entry system.\r\n- *[Near development]* Include some more databases as PostgreSQL and MySQL.\r\n- *[Future development]* Include more databases.\r\n- *[Future development]* Security Framework based on metadata for the datawarehouse\r\n\r\n## Contact\r\n\r\nCreator: **Guillermo Aumatell Salom**  \r\nEmail: **gaumatellsalom@gmail.com**\r\n\r\n\r\n**Notice: Metamorf is in beta phase.**\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Metamorf",
    "package_url": "https://pypi.org/project/Metamorf/",
    "platform": null,
    "project_url": "https://pypi.org/project/Metamorf/",
    "project_urls": {
      "Bug Tracker": "https://github.com/gasalom/metamorf/issues",
      "Homepage": "https://github.com/gasalom/metamorf"
    },
    "release_url": "https://pypi.org/project/Metamorf/0.3.9.1/",
    "requires_dist": [
      "snowflake-connector-python",
      "PyYAML",
      "Flask"
    ],
    "requires_python": ">=3.10",
    "summary": "Metadata Suite to build and control your Datawarehouse",
    "version": "0.3.9.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17213762,
  "releases": {
    "0.0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc9d9569c8976eda87a3e6e6074c54c5252267b651f16474f677a28242d93a9a",
          "md5": "5aad3d99604f5e2ba43f74ef0225d9e6",
          "sha256": "c70315b6becf6af74bc74f67af7066026b9ba21ecfaad17253615a04f3ad672f"
        },
        "downloads": -1,
        "filename": "metamorf-0.0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5aad3d99604f5e2ba43f74ef0225d9e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1043,
        "upload_time": "2023-01-23T18:41:32",
        "upload_time_iso_8601": "2023-01-23T18:41:32.062386Z",
        "url": "https://files.pythonhosted.org/packages/dc/9d/9569c8976eda87a3e6e6074c54c5252267b651f16474f677a28242d93a9a/metamorf-0.0.0.1-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58090b0da234b7efa3f2048dd832e82635bc0cca1136a6f310b84f4743725dfd",
          "md5": "2ad164a6a62abda6ad62f3e731cd0082",
          "sha256": "0fb04531a9adcf589fd5515c378c5ff057f3cc266eb65383c1509c4fea8e98b9"
        },
        "downloads": -1,
        "filename": "metamorf-0.0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2ad164a6a62abda6ad62f3e731cd0082",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 785,
        "upload_time": "2023-01-23T18:41:34",
        "upload_time_iso_8601": "2023-01-23T18:41:34.120259Z",
        "url": "https://files.pythonhosted.org/packages/58/09/0b0da234b7efa3f2048dd832e82635bc0cca1136a6f310b84f4743725dfd/metamorf-0.0.0.1.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "0.3.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89e44bccf13b186f55b092cee340dd025f283a0dc764144735e5e14b5a4c149f",
          "md5": "5f93e982eedf3344fbdc0fd081b9b06a",
          "sha256": "cf981498b1f3f20e402d2174962e727b6133f15efdf9a8fd55e89a6033337b5d"
        },
        "downloads": -1,
        "filename": "Metamorf-0.3.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f93e982eedf3344fbdc0fd081b9b06a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 84718,
        "upload_time": "2023-03-08T18:24:21",
        "upload_time_iso_8601": "2023-03-08T18:24:21.660876Z",
        "url": "https://files.pythonhosted.org/packages/89/e4/4bccf13b186f55b092cee340dd025f283a0dc764144735e5e14b5a4c149f/Metamorf-0.3.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aab99c0d0779ff0aabfcdbf26d7999d5a1e5f7af68cab87cf1015107d52cab37",
          "md5": "a517bf42c0f38cea5ded4dfd1993e89b",
          "sha256": "0d967614e5c5023e373a1abbb4a61d4475484fe7afd8a72612da9809c06f26e0"
        },
        "downloads": -1,
        "filename": "Metamorf-0.3.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a517bf42c0f38cea5ded4dfd1993e89b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 64626,
        "upload_time": "2023-03-08T18:24:23",
        "upload_time_iso_8601": "2023-03-08T18:24:23.441010Z",
        "url": "https://files.pythonhosted.org/packages/aa/b9/9c0d0779ff0aabfcdbf26d7999d5a1e5f7af68cab87cf1015107d52cab37/Metamorf-0.3.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "89e44bccf13b186f55b092cee340dd025f283a0dc764144735e5e14b5a4c149f",
        "md5": "5f93e982eedf3344fbdc0fd081b9b06a",
        "sha256": "cf981498b1f3f20e402d2174962e727b6133f15efdf9a8fd55e89a6033337b5d"
      },
      "downloads": -1,
      "filename": "Metamorf-0.3.9.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5f93e982eedf3344fbdc0fd081b9b06a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 84718,
      "upload_time": "2023-03-08T18:24:21",
      "upload_time_iso_8601": "2023-03-08T18:24:21.660876Z",
      "url": "https://files.pythonhosted.org/packages/89/e4/4bccf13b186f55b092cee340dd025f283a0dc764144735e5e14b5a4c149f/Metamorf-0.3.9.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aab99c0d0779ff0aabfcdbf26d7999d5a1e5f7af68cab87cf1015107d52cab37",
        "md5": "a517bf42c0f38cea5ded4dfd1993e89b",
        "sha256": "0d967614e5c5023e373a1abbb4a61d4475484fe7afd8a72612da9809c06f26e0"
      },
      "downloads": -1,
      "filename": "Metamorf-0.3.9.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a517bf42c0f38cea5ded4dfd1993e89b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 64626,
      "upload_time": "2023-03-08T18:24:23",
      "upload_time_iso_8601": "2023-03-08T18:24:23.441010Z",
      "url": "https://files.pythonhosted.org/packages/aa/b9/9c0d0779ff0aabfcdbf26d7999d5a1e5f7af68cab87cf1015107d52cab37/Metamorf-0.3.9.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}