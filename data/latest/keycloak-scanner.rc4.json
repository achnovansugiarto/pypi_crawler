{
  "info": {
    "author": "neuronaddict",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# keycloak-scanner\n\n## Introduction\n\nThis scanner scan keycloak for known vulnerabilities.\n\n\n## Installation\n\n```\npip install --upgrade keycloak-scanner\n```\n\n\n## Example\n```\n$ git clone https://github.com/NeuronAddict/keycloak-scanner\n$ cd keycloak-scanner\n$ docker-compose -f itests/docker-compose.yml up -d\n$ python3 itests/wait-docker-compose.py # just wait keycloak to be load # may be you neeed 'pip install waiting'\npython3 itests/wait-docker-compose.py           \n('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))\n...\nHTTPConnectionPool(host='localhost', port=8080): Read timed out. (read timeout=1)\nHTTPConnectionPool(host='localhost', port=8080): Read timed out. (read timeout=1)\nKeycloak seems to be loaded\n$ keycloak-scanner http://localhost:8080 --realms master --clients account --username admin --password Pa55w0rd \n$ # http://localhost:8080  # url to test \n$ #--realms master  # realms to scan, check if a realm exists and use this realms to further scans\n$ #--clients account  # clients to scan, check if a client exists and use it to further scans\n$ #--username admin  # add a username to test the auth process \n$ #--password Pa55w0rd  # password to test a password auth \n[INFO] Start scanner RealmScanner...\n[INFO] Find realm master (http://localhost:8080/auth/realms/master)\n[INFO] Public key for realm master : MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyF7ytt1AcJaN67GkLKNrPL6ljoTyYMzMFZ/fXmEJw52yvAXCqE2qFM4MH+fRDfzYcougyOIwNHbDqfAmKzKpeYGi+4JSaSmDGpZVuz2aDkncyXh6uA4IanjBai7IhEeWDY6HCcLxkd/ppfNclmfOrEGJGbFoz+QCFiNbWzSr0mAo1S3WmgC13297nK5iunR+eJSqCbg3FXn+8RZcwhNHhKSGV75G4ZnBDLcBcaEUflBWshv2gAErZktT0tdEtXNRpv4vAvp0yEvAKSPVOESpnZW7PFNtBPI/+GlaAWxEC9V58qzhiRTJ+MU3fzwcBMRz4DmptdSN6bDLvkPr5eS9JQIDAQAB\n[INFO] Start scanner WellKnownScanner...\n[INFO] Find a well known for realm Realm('master', 'http://localhost:8080/auth/realms/master', {'realm': 'master', 'public_key': 'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyF7ytt1AcJaN67GkLKNrPL6ljoTyYMzMFZ/fXmEJw52yvAXCqE2qFM4MH+fRDfzYcougyOIwNHbDqfAmKzKpeYGi+4JSaSmDGpZVuz2aDkncyXh6uA4IanjBai7IhEeWDY6HCcLxkd/ppfNclmfOrEGJGbFoz+QCFiNbWzSr0mAo1S3WmgC13297nK5iunR+eJSqCbg3FXn+8RZcwhNHhKSGV75G4ZnBDLcBcaEUflBWshv2gAErZktT0tdEtXNRpv4vAvp0yEvAKSPVOESpnZW7PFNtBPI/+GlaAWxEC9V58qzhiRTJ+MU3fzwcBMRz4DmptdSN6bDLvkPr5eS9JQIDAQAB', 'token-service': 'http://localhost:8080/auth/realms/master/protocol/openid-connect', 'account-service': 'http://localhost:8080/auth/realms/master/account', 'tokens-not-before': 0}) http://localhost:8080/auth/realms/master/.well-known/openid-configuration\n[INFO] Start scanner ClientScanner...\n[INFO] Find a client for realm master: account\n[INFO] Start scanner LoginScanner...\n[+] LoginScanner - Form login work for admin on realm master, client account, (http://localhost:8080/auth/realms/master/account?session_state=4c152780-3980-439c-8e9d-15139ee19afa&code=2f821574-34e0-4917-8b00-c87c6fd302b0.4c152780-3980-439c-8e9d-15139ee19afa.3e118dc6-4780-42cf-90e7-abd81c1e7046)\n[+] LoginScanner - Form login work for admin on realm master, client account, (http://localhost:8080/auth/realms/master/account?session_state=14a6cbcc-1b76-4b52-aa27-982a06b8c2a1&code=656fc3c9-3ea6-44af-9037-85288f471ab7.14a6cbcc-1b76-4b52-aa27-982a06b8c2a1.3e118dc6-4780-42cf-90e7-abd81c1e7046)\n[INFO] Start scanner SecurityConsoleScanner...\n[WARN] Result of SecurityConsoleScanner as no results (void list), subsequent scans can be void too.\n[INFO] Start scanner OpenRedirectScanner...\n[INFO] Start scanner FormPostXssScanner...\n[INFO] Start scanner NoneSignScanner...\n```\n\n## scan types :\n\n* realm : check if a realm exists\n* client : check if a client exists in all realms\n* well_known : get well_known for all realms\n* login : test login against all clients / realms \n* client registration : try to add a new client (WARNING, client is deleted after test, if its not the case, be sure to make it manually)\n* OpenRedirect : check if attack authorization flow via open redirection (unvalidated redirect_uri) is possible\n* form post : check CVE 2018 14655 \n* none sign : check if none sign algorithm is supported\n\n\n## Help\n\n```\n$ keycloak-scanner --help\nusage: keycloak-scanner [-h] --realms REALMS --clients CLIENTS [--proxy PROXY]\n\n                        [--username USERNAME] [--password PASSWORD]\n\n                        [--ssl-noverify] [--verbose] [--no-fail] [--fail-fast]\n\n                        [--version]\n\n                        (--registration-callback REGISTRATION_CALLBACK | --registration-callback-list REGISTRATION_CALLBACK_LIST)\n\n                        base_url\n\nKeyCloak vulnerabilities scanner.\n\npositional arguments:\n\n  base_url              URL to scan. ex http://localhost:8080\n\noptional arguments:\n\n  -h, --help            show this help message and exit\n\n  --realms REALMS       Comma separated list of custom realms to test. ie :\n\n                        master\n\n  --clients CLIENTS     Comma separated list of custom clients to test. On\n\n                        default installation, use account,admin-\n\n                        cli,broker,realm-management,security-admin-console\n\n  --proxy PROXY         Use a great proxy like BURP ;)\n\n  --username USERNAME   If a username is specified, try to connect and attack\n\n                        a token. If no password, try username as password.\n\n  --password PASSWORD   password to test with username\n\n  --ssl-noverify        Do not verify ssl certificates\n\n  --verbose             Verbose mode\n\n  --no-fail             Always exit with code 0 (by default, fail with an exit\n\n                        code 4 if a vulnerability is discovered or 8 if an\n\n                        error occur). Do NOT fail before all test are done.\n\n  --fail-fast           Fail immediately if an error occur.\n\n  --version             show program's version number and exit\n\n  --registration-callback REGISTRATION_CALLBACK\n\n                        Callback url to use on client registration test\n\n  --registration-callback-list REGISTRATION_CALLBACK_LIST\n\n                        File with one callback to test for registration by\n\n                        line\n\nScans : \n\n- list realms\n\n- Search well-known files\n\n- Search for clients\n\n- Search for valid logins\n\n- Try client registration\n\n- Search for security-admin-console and secret inside\n\n- Search for open redirect via unvalidated redirect_uri\n\n- Search for CVE-2018-14655 (reflected XSS)\n\n- None alg in refresh token\n\nBugs, feature requests, request another scan, questions : https://github.com/NeuronAddict/keycloak-scanner.\n\n*** Use it on production systems at your own risk ***\n\n```\n\n\n## Install with source code\n\nWith venv:\n\n```\ncd keycloak-scanner\npython3 -m venv venv\nsource venv/bin/activate\npip install -e . # with -e, git pull will update code\nkeycloak-scanner\n```\n\nOr without venv :\n```\ncd keycloak-scanner\nsudo pip3 install . # use sudo for install for all users\nkeycloak-scanner\n```\n\n\n## TODO\n\n- password dictionary support\n- Scanner details via command line\n- \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/neuronaddict/keycloak-scanner",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "keycloak-scanner",
    "package_url": "https://pypi.org/project/keycloak-scanner/",
    "platform": "",
    "project_url": "https://pypi.org/project/keycloak-scanner/",
    "project_urls": {
      "Homepage": "http://github.com/neuronaddict/keycloak-scanner"
    },
    "release_url": "https://pypi.org/project/keycloak-scanner/1.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Keycloak vulnerabilities scanner",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10950809,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b9e7e6b8be9888be4dc49cb778beda39676d759a5a752e207fceaaae2dd122d",
          "md5": "ed7cb1df9da8143585809131cd2c0e4a",
          "sha256": "7eefadec40660095d47a2af469ccf06f3eba18dac4602fd129c5766bf10b4a06"
        },
        "downloads": -1,
        "filename": "keycloak-scanner-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ed7cb1df9da8143585809131cd2c0e4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8527,
        "upload_time": "2021-05-24T02:10:45",
        "upload_time_iso_8601": "2021-05-24T02:10:45.396441Z",
        "url": "https://files.pythonhosted.org/packages/1b/9e/7e6b8be9888be4dc49cb778beda39676d759a5a752e207fceaaae2dd122d/keycloak-scanner-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "729ac1c5f222afac5a893288e20615f3a7a66080a18ac5797ab9b178cbcb5490",
          "md5": "5e68628c00e666f9678a0cb8f7f6d0c9",
          "sha256": "b48f5a5b761943c2bcc7e29bd1ee8633557f85cddad7f0229b50bd3b49ea861a"
        },
        "downloads": -1,
        "filename": "keycloak-scanner-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5e68628c00e666f9678a0cb8f7f6d0c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19434,
        "upload_time": "2021-05-24T12:07:47",
        "upload_time_iso_8601": "2021-05-24T12:07:47.927481Z",
        "url": "https://files.pythonhosted.org/packages/72/9a/c1c5f222afac5a893288e20615f3a7a66080a18ac5797ab9b178cbcb5490/keycloak-scanner-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a276bcfb277125c7fc4552f11d199fe6acd7533fab20cf6fcd1202d319b9615",
          "md5": "a589d3fd65421429062b6ab3c8c5a7d9",
          "sha256": "2321b6db8651db70e85d01dbd9b35c4cd1549351e94b704dfc8640c2a8715c13"
        },
        "downloads": -1,
        "filename": "keycloak-scanner-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a589d3fd65421429062b6ab3c8c5a7d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24114,
        "upload_time": "2021-05-25T22:45:17",
        "upload_time_iso_8601": "2021-05-25T22:45:17.074018Z",
        "url": "https://files.pythonhosted.org/packages/1a/27/6bcfb277125c7fc4552f11d199fe6acd7533fab20cf6fcd1202d319b9615/keycloak-scanner-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbaf04d3646cdd3ea796fc21726046653acfb3211c78427d3347d7a278b43adf",
          "md5": "fc75543022d3ad3f16ee127b86918b52",
          "sha256": "42cd29107d8e64db953ca5e00b85fc0f5ffcb7478a6350180999e4dd48b52f39"
        },
        "downloads": -1,
        "filename": "keycloak-scanner-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fc75543022d3ad3f16ee127b86918b52",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35804,
        "upload_time": "2021-07-19T22:09:32",
        "upload_time_iso_8601": "2021-07-19T22:09:32.499278Z",
        "url": "https://files.pythonhosted.org/packages/cb/af/04d3646cdd3ea796fc21726046653acfb3211c78427d3347d7a278b43adf/keycloak-scanner-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cbaf04d3646cdd3ea796fc21726046653acfb3211c78427d3347d7a278b43adf",
        "md5": "fc75543022d3ad3f16ee127b86918b52",
        "sha256": "42cd29107d8e64db953ca5e00b85fc0f5ffcb7478a6350180999e4dd48b52f39"
      },
      "downloads": -1,
      "filename": "keycloak-scanner-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "fc75543022d3ad3f16ee127b86918b52",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 35804,
      "upload_time": "2021-07-19T22:09:32",
      "upload_time_iso_8601": "2021-07-19T22:09:32.499278Z",
      "url": "https://files.pythonhosted.org/packages/cb/af/04d3646cdd3ea796fc21726046653acfb3211c78427d3347d7a278b43adf/keycloak-scanner-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}