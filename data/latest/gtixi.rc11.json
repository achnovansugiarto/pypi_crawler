{
  "info": {
    "author": "Spectre Lee",
    "author_email": "lxwk1spectre@foxmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# 高效碳基演示机体系模块\ngTixi适用于高效碳基芯片测试的函数库  \n由魏楠和李若铭开发  \n联系开发者：<lxwk1spectre@foxmail.com>  \ngitee项目：<https://gitee.com/lxwk1spectre/walartminstar>\n# 功能介绍\n该模块包含了树莓派，掌控板，未来版，未名系列演示机的通用演示架构。可以使用一套代码，兼容地运行在不同地设备上。\n# 使用说明\n## 安装gTixi库\n在命令行中输入 pip3 install gTixi\n## 使用硬件驱动\n可以用 from gTixi import * 来读取gTixi中的全部导入，也可以根据需要部分导入。可以参考下边的实例，调用模块里的部分功能。更详细的功能可以参考[文档](#文档)。\n```python\nfrom gTixi import *\nbeam(1)#1s蜂鸣\nprint(wa.name)#打印设备名称\nwa.i2c.write_byte_data(addr1,addr2,data)#在特定地址写入数据,如果设备支持i2c\nprint(wa.DrawStdLines('ab\\ncd\\ned\\ng'))#在屏幕上显示四行数据，并打印Svg\n```\n## 使用完整操作界面\n1. 首先在git这里下载完整的代码，<https://gitee.com/lxwk1spectre/walartminstar>。\n2. 文件夹中应包含gTixi文件夹，stardevice文件夹，pkg文件夹，main.py，simsum.ttf，LICENSE,README.md，以及完整的部署方案。\n3. 在main.py中编写自定义Mod，mod的具体写法参考[功能模块](#功能模块)。\n4. 修改devMenu变量的内容来自定义菜单结构，注意要讲自定义的mod放入菜单中才能运行。\n5. 将整个文件夹复制到需要运行的设备上执行([缩写对应表](#waname))。\n    - 如果是win或者smp，直接python main.py即可。如有必要，可以用打包工具做开机自启动之类的设置。\n    - 如果是bdz演示机，需要使用adb的方法刷入。推荐使用adbGUI软件。\n    - 对于zkb：\n        - 需要下载mpython的官方应用并安装，USB连接电脑，打开mpython连接设备。\n        - 点击掌控板文件，新建gTixi文件夹，勾选gTixi，点击下边的导入，然后选择gTIxi中的所有文件，点击同步。\n        - 点击根目录下任意文件，将目标目录回到根目录下，点击下边的导入，选择main.py，点击同步。即可运行。\n    - 对于wlb：\n        - 将在之后的版本里更新对wlb的支持。\n## 开发硬件驱动\n1. 如果用户需要开发第三方驱动，可以直接在写在main.py中，或者相同的文件夹里创建自己的mydrive.py文件，然后在main中import mydrive即可。\n    - 可以调用wa.name判断设备类型，wa.i2c调用i2c。\n    - 开发好驱动，可以写一个函数作为接口，在main.py中新建一个Mod，然后output驱动所输出的数据。\n2. 如果是gTixi的合作者，需要在gTixi包中加入新的驱动。\n    - 可以将驱动内容写入myDrivers，也可以独立创建驱动的文件。\n    - 需要引用同文件夹的文件的话，请使用相对导入的格式。具体例子如下，.代表模块当前文件夹。\n    ```python\n    #相对引用\n    from .alib import alib\n    from . import wadapter as wad\n    from .wadapter import wa\n    ```\n    - 驱动开发完成后，需要在__init__.py中注册驱动。\n        - 在__all__变量的list中添加一个名称。\n        - 在后边的代码里导入这个名称。\n        - 可以参考以下示例，导入整个模块，其中的一个函数，或者一个变量。\n        - 注册的时候，可以重新起名。\n        - 注册完成后，就可以在main.py中from gTixi import mydrive了\n    ```python\n    __all__ = ['newdrive','newfunc','newval']\n    from . import mydrvie as newdrive\n    from .mydrive import newfunc\n    from .mydrive import valueA\n    newval = valueA\n    ```\n# 文档\n## 基础类\n### alib\n- class\n- 本质上是一种高级字典，可以通过字典字符串进行初始化，也可以输出格式更加美观的字符串。可以用.来读取字典对象。\n### waText，waFile\n- module\n- 支持alib运行的基础类\n## 适配器\n### wad\n- module\n- 完整的适配器，会根据运行设备的不同，调用不同的代码来执行输入的判断，内容的输出，i2c，gpio等接口。围了兼容旧版程序，保留了直接调用完整的wadapter的接口，推荐用户直接使用wa和SvgScreen接口来访问wad里的内容。\n### wa\n- class\n- 通过判断设备类型，返回的适配当前设备的类。如果需要自己写驱动的话，需要尽量熟悉wa的使用。\n#### wa.name\n- str\n- 当前设备类型，具体对应如下表。\n\n    | name | 设备 | \n    |---|---| \n    |win|windows|\n    |smp|GT0树莓派|\n    |bdz|GT1未名手表式演示机|\n    |zkb|GT2掌控板|\n    |wlb|GT2未来板|  \n- 推荐使用如下几种方式来区分不同设备的代码 。 \n    ```python\n    if wa.name == 'smp': \n        pass\n    if wa.name in ['smp','win','zkb']:\n        pass\n    ```\n#### wa.tag\n- list\n- 当前设备拥有的属性。\n    |tag|标识说明|\n    |---|---|\n    |web|网络操作界面的功能，开启后在浏览器里打开localhost:8081即可访问界面|\n    |board|用于判断是否为板载测试仪|\n    |pinmap|已经定义好了gpio的针脚映射，反相器逻辑门管脚连通性测试会依赖该功能|\n    |i2c|板载i2c|\n    |smbus|目前是树莓派和未名演示机使用的i2c|\n    |gpioboard|板载gpio|\n    |gpiorpi|树莓派的gpio|\n    |gpio4|未名演示机的gpio|\n- 设备属性的加入，会大大方便适配器的迭代与更新，在之后的版本中，会合并一部分tag，但是会始终保持向下兼容。\n#### wa.ctag(tag)\n用于判断某设备是否具有某个tag的函数\n- tag\n    - str\n- 返回 bool\n- 推荐使用如下方式来实现代码的选择性执行。\n    ```python\n    #如果存在web标识，则运行通讯服务器和网络服务器\n    if starMessager.shipei.ctag('web'):\n        wsServer.start()\n    if starMessager.shipei.ctag('web') and __name__ == \"__main__\":\n        httpServer.start()\n    ```\n#### wa.aenv\n- dict\n- 当前设备的详细参数，可以使用wad.strWaEnv查看格式化之后的设备详细参数。\n#### wa.Sleep(fDurs)\n- 系统休眠等待的函数，由于不同设备的sleep函数单位不同会导致程序运行混乱，这里根据不同设备进行了统一。\n- fDurs\n    - int\n    - 等待时间，单位为秒。\n#### wa.CheckKey()\n- 等待设备直到有按键传入。\n- 目前只有Smp会用到，上下左右摇杆分别对应UDLR。\n- 关于按键的相关函数会在[baseMod](#basemod类)类中详细说明。\n#### wa.i2c\n- 根据设备类型，统一了i2c的接口调用方式。\n- class\n    - wa.i2c.write_byte_data(addr,addr,data)\n    - wa.i2c.read_byte_data(addr,addr)\n    - wa.read_i2c_block_data(addr,addr)\n    - addr为对应的地址，标准设备的地址参照下表。\n    - data为需要写入的数据。\n    - 更详细地内容可以查阅i2c相关的内容，以及用户自定义设备的地址说明。\n\n    ```python\n    gTixi中的标准设备i2c地址列表\n    [comment|此体系中器件有统一i2c地址]\n    [0x20|PCF8574IO扩展（Pioneer600）]\n    [0x26|GTmcp的mcp23017]\n    [0x39|APDS9960光线颜色传感器]\n    [0x42|UPS HAT]\n    [0x48|PCF8591ADDA（Pioneer600）]\n    [0x53|LTR390紫外光光感]\n    [0x5a|MLX90614红外传感]\n    [0x68|DS3231时钟模块（Pioneer600）]\n    [0x76|BMP280温度压力传感（Pioneer600）]\n    [0x77|BME280温湿度压力传感器]\n    ```\n#### wa.DrawStdLines(input)\n- 在gTixi中，最基础的输出方式为输出四行文本，其中wa里的四行文本函数，适用于在像素显示屏上显示四行文本。\n- input\n    - str\n    - 输出文本的内容，用\\n来分割不同的行，可以不满四行，也可以超过，但是超过四行的部分不会显示。\n### SvgScreen\n- class\n- 绘制svg图像的类。\n#### SvgScreen(size = (128,64))\n- 根据矢量图屏幕的大小，初始化类。\n#### SvgScreen.Generate()\n- 输出：str\n    - 根据目前的设置输出svg格式的字符串。\n#### SvgScreen.DispShow()\n- 与Generate()功能相同\n#### SvgScreen.DrawText(tPos,sTxt,c)\n- 在svg中写入文字的功能，字符的字号为矢量图屏幕高度的3/16。\n- tPos\n    - tuple(float(x),float(y))\n    - 文字的位置的,以左上角为锚点（默认的svg是以左下角为锚点，这里已经根据字号修正了，左上角更符合使用习惯），范围为0-1的浮点数。\n- sTxt\n    - str\n    - 文字的内容。\n- c\n    - 文字的颜色，不设置的情况下，默认第一行文字为#ee0的黄色，另外三行文字为#0ee的蓝色。\n#### SvgScreen.DrawStdLines(input)\n- 在gTixi中，最基础的输出方式为输出四行文本，该函数可以直接输出四行文本的Svg。\n- input\n    - str\n    - 输出文本的内容，用\\n来分割不同的行。\n- 输出：str\n    - 根据四行文本生成的svg脚本。\n## 功能模块\n用于与用户交互的类，包括基础的baseMod类，用于循环测试的loopMod类，以及用于菜单的menu类。用户可以在main.py中继承这些类，然后自定义模块。\n### menu类\n用于管理操作界面菜单的类，用户不需要详细了解这个类的工作模式，只需要在main.py中根据需要进行初始化即可。\n#### menu(sm,iniData,select=([],0))\n- sm\n    - starMessager\n    - 用于在异步模块之间传递信息的类，详见信使。\n- iniData\n    - dict\n    - 菜单结构，本质是一个多级嵌套的字典，下边是其中一个例子。字典的每一个key都会作为菜单选项（注意由于掌控板里key排序是乱的，所以需要加上数字辅助排序），而根据value的类型不同，也会有不同的效果。理论上支持无限级的菜单，推荐照顾用户体验，使用合理的菜单高度和深度。\n        - value仍然是字典，那么则进入下一级菜单。\n        - value属于[baseMod](#basemod类),则进入对的扩展模块中。\n        - value为0，则返回上一级菜单。\n    - 操作模式\n        - 两键操作，A键向下，B键进入对应key所代表的value。\n        - 4键操作，↑↓控制光标向上或者向下，→为进入key代表的value，←为返回上一级菜单\n    - 关于select的两个变量sub=[],pointer=0控制菜单指针位置的规则。\n        - sub为[]时代表当前位置在主菜单，下边的例子中，主菜单的内容为1.器件分析，2.系统信息，3.加法器,4.模拟,5.退出,分别对应pointer的0-4。按↑↓按钮会修改pointer的值。\n        - 当我们进入某个子菜单时，比如pointer为3的4.模拟，sub的list会被添加一个元素1，变为[3]，然后pointer变为0，指向1.光照。我们再进入光照时，sub会变为[3,0],而pointer依然会被重置为0。\n        - 在触发返回时，sub的列表里的最后一个值会被删掉，比如我们在光照子菜单下按下←返回，sub就会变成[3],而pointer会被修正为当前sub的列表里的最后一个元素的值，也就是3，通过这样的规则，确保从4.模拟中返回时，pointer仍然指向4.模拟。\n    ```python\n    devMenu = {\n        \"1.器件分析\":{\n            \"1.加法器\":baseMod,\n            \"2.反相器\":baseMod,\n            \"3.SRAM\":baseMod,\n            \"4.返回\":0\n        },\n        \"2.系统信息\":{\n            \"1.基本信息\":sysInfo,\n            \"2.运行帧率\":FrameTest,\n            \"3.返回\":0\n        },\n        \"3.加法器\":{\n            \"1.单次加法\":Adder,\n            \"2.100次加法\":AdderDisplay,\n            \"3.100次快速\":AdderTest,\n            \"4.返回\":0        \n        },\n        \"4.模拟\":{\n            \"1.光照\":{\n                \"1.单次光照\":LTRLight,\n                \"2.异步光照\":LTRAsync,\n                \"3.返回\":0\n            },\n            \"2.BME230\":BME230,\n            \"3.红外\":IR,\n            \"4.钢琴\":piano,\n            \"5.蜂鸣器\":Beam,\n            \"6.返回\":0\n        },\n        \"5.退出\":offStatus\n    }\n    ```\n    - 初始化菜单模块,只需要在main.py里输入如下代码，然后运行即可,windows环境下，可以访问localhost:8081进入控制界面。关于[offStatus](#offstatus类)。\n    ```python\n    devMenu = {\n        \"1.测试模块\":baseMod,\n        \"2.退出\":offStatus\n    }\n    from gTixi import *\n    starMessager.workModule = menu(starMessager,devMenu)\n    starMessager.workModule.show()\n    if starMessager.shipei.name != 'zkb':\n        wsServer.start()\n    if starMessager.shipei.name != 'zkb' and __name__ == \"__main__\":\n        httpServer.start()    \n    ```\n### baseMod类\n最基础的模块类，用户自定义的类继承了基础类之后，可以重载其中的部分函数，来实现自定义的功能。\n#### baseMod(menuInfo)\n- 生成模块的时候，需要一个记录信使和菜单坐标的变量（用于从模块退出时，保持菜单在进入时的位置），这里用户不需要详细了解，只要在继承baseMod的时候按如下格式继承即可，menu类会帮我们处理模块初始化的问题。\n```python\nclass newMod(baseMod):\n    def __init__(self,mi):\n        baseMod.__init__(self,mi)\n```\n-menuInfo的定义如下，特殊情况下，用户可以修改select的内容，来控制返回的位置。具体规则详见[menu的初始化](#menusminidataselect0)\n```python\nmenuInfo = {\"sm\":self.msgr,\"initData\":self.data,\"select\":(self.submenu,self.pointer)}\n```\n#### baseMod.dev\n- str\n- 代表了当前设备类型，关于设备类型详见[wa.name](#waname)\n#### baseMod.msgr\n- starMessager\n- 信使，具体使用方法见[信使](#starmessager)\n#### baseMode.path\n- str\n- 保存文件的默认文件夹，默认为main.py所在的上一级或者上上一级的Sandbox或者DAKu/testdata，用户可以通过改变path变量自行设定\n#### baseMod.show()\n- 显示模块当前的运行状态的函数，包括像素显示屏和刷新网页控制端的内容。\n#### baseMod.start()\n- 默认等于baseMod.show()用于函数初次调用时的动作，用户可以重载成其他内容。\n#### baseMod.backToMenu()\n- 回到主菜单的函数，这里会根据初始化模块的menuInfo来确定回去之后菜单的位置。\n#### baseMod.ouput(str)\n- 将四行文本显示在屏幕上。\n- str\n    - str\n    - 以\\n分隔的四行文本。\n#### baseMod.InputKey(key)\n- 根据输入的key值判断模块应当如何工作。默认是按下任意键都会退回主菜单，用户需要重载InputKey函数来实现自己需要的功能。\n- key\n    - str\n    - 不同设备有不同的key传入，可以参考下表。\n\n    |按键|key值|按键|key值|按键|key值|\n    |:---:|:---:|:---:|:---:|:---:|:---:|\n    |网页按钮A|A|pioneer摇杆上|U|掌控板触摸键P|P|\n    |网页按钮B|B|pioneer摇杆下|D|掌控板触摸键Y|Y|\n    |网页按钮↑|U|pioneer摇杆左|L|掌控板触摸键T|T|\n    |网页按钮↓|D|pioneer摇杆右|R|掌控板触摸键H|H|\n    |网页按钮←|L|掌控板未来版A键|A|掌控板触摸键O|O|\n    |网页按钮→|R|掌控板未来版B键|B|掌控板触摸键N|N|\n    - 推荐使用如下的语法来重载InputKey。  \n    ```python\n    def InputKey(self,key):\n        if not key:\n            return\n        self.msgr.msg=\"\"\n        if key in \"UuH\":\n            self.movePointer(-1)\n        elif key in \"DdTAP\":\n            self.movePointer(1)\n        elif key in \"ROBN\":\n            if self.enterSub():\n                return\n        elif key in \"LY\":\n            self.exitSub()\n        self.show()    \n    ```\n#### baseMod.saveCSV(slist,backstr)\n- 将列表保存为csv文件，需要安装pandas库,保存路径参考[path](#basemodepath).\n- slist\n  - list\n  - 被保存的序列\n- backstr\n  - str\n  - 保存的文件名后缀，被保存的文件名默认为'YYYYMMDD-HHMMSS'+backstr,推荐以.csv结尾方便后续数据处理。\n#### baseMod.saveTXT(textstr,backstr)\n- 将字符串保存为txt文件,保存路径参考[path](#basemodepath).\n- textstr\n  - str\n  - 被保存的字符串\n- backstr\n  - str\n  - 保存的文件名后缀，被保存的文件名默认为'YYYYMMDD-HHMMSS'+backstr,推荐以.txt等文本文件的扩展名结尾。\n#### 基于baseMod自定义模块的实例\n以下例子为一个蜂鸣器的模块。首先继承baseMod中的所有内容，这样就可以直接调用backToMenu等函数。然后重载show和InputKey.其中show函数根据设备类型，判断屏幕显示的内容，然后InputKey函数，控制是触发蜂鸣器，还是退出模块。[beam函数介绍](#beamdur05)\n```python\n#蜂鸣器\nclass Beam(baseMod):\n    def __init__(self,mi):\n        baseMod.__init__(self,mi)\n    def show(self):\n        sf = \"蜂鸣器\\n\"\n        if self.dev in [\"zkb\",\"smp\"]:\n            sf += \"↑A 蜂鸣\\n←B 退出\"\n        else:\n            sf += \"设备不支持！\\n←B 退出\"\n        self.output(sf)\n    def InputKey(self,key):\n        if not key:\n            return\n        if key in \"UAPH\":\n            beam()\n            self.show()\n        elif key in \"LBNY\":\n            self.backToMenu()\n```\n\n### offStatus类\n继承baseMod实现的最简单的自定义模块，在这里直接集成到了标准库中。功能为显示黑屏，然后按任意键返回菜单，可以作为一种伪关机使用。\n### loopMod类\n将最常用的一种模块封装为一个类。进入模块后，loopUnit函数中的内容会被不断执行，按下↑或者A会暂停/继续，按下←或者B会退出。\n#### loopMod.loopUnit()\n由于高度封装，用户一般只需要重载这一个函数即可实现一个相对复杂的异步控制的功能。\n#### 基于loopMod自定义模块的实例\n由于高度封装，loopMod只需要重载loopUnit，如果没有其他内容，init函数这里也可以省略不写(bme的例子)。（[lightSensor](#lightsensor), [bme280](#bme280)）\n```python\n#异步光照采集器的界面\nclass LTRAsync(loopMod):\n    def __init__(self,mi):\n        loopMod.__init__(self,mi)\n    def loopUnit(self):\n        self.output(lightSensor())\n\n#bme传感器\nclass BME230(loopMod):\n    def loopUnit(self):\n        self.output(bme280())\n```\n### loopPro类\n高级的循环测试模块，模块分为工作状态和待机状态。进入模块时为待机状态，待机状态下，按A(↑)进入工作状态，按B(←)退出。工作状态下会进行给定的循环测试，一般为特定次数一组的测试，在工作状态下，按A(↑)可以对测试进行暂停/继续，按B(←)则结束测试给出测试结果并进入待机状态。\n#### loopPro.isRunning=False\n- bool\n- True则为工作状态，False则为待机状态。\n#### loopPro.pause=False\n- bool\n- True则工作状态暂停，False则不暂停。\n#### loopPro.stop=False\n- bool\n- True则工作状态收到停止命令，会在做好后处理之后进入待机状态，False则继续运行工作状态。\n#### loopPro.loop()\n- function\n- 核心的循环函数，需要适当调用pause和stop来实现测试,一般都要重载这部分内容。具体重载方式可以参考下列代码。\n```python\n#100次加法器的循环函数\n    def loop(self,_=None):\n        #########111#########\n        rightConut = 0\n        total = 100\n        import time\n        #以上是循环开始前的内容\n        for i in range(total):\n            #################222###################\n            if not self.stop:\n                while self.pause and not self.stop:\n                    time.sleep(0.5)\n            ###这部分是需要插入到循环控件中的语句#####\n                result, judge = self.testOnce()\n                self.output(result)\n                if judge:\n                    rightConut += 1                \n                if self.mod == 'display':\n                    time.sleep(1)\n            #################333###################\n            else:\n                total = i\n                self.stop = False\n                self.pause = False\n                break\n            #########收到stop指令之后的处理##########\n        self.output(\"正确率：\\n{}/{}\".format(rightConut,total))\n```\n#### loopPro的示例\n```python\n#反相器=保存文件\nclass Inver(loopPro):\n    def __init__(self,mi):\n        loopPro.__init__(self,mi)\n        ###重载初始化时包含了loopPro父类的相关内容###\n        self.save = True\n        if self.dev in ['zkb','wlb','bdz']:\n            self.save = False\n    def loop(self,_=None):\n        import time\n        total = 0\n        right = 0\n        if self.save:\n            saveFile = []\n            idx = 1\n        #反相器测试为不限定次数的永久测试，直到发出停止命令\n        while True:\n            if not self.stop:\n                while self.pause and not self.stop:\n                    time.sleep(0.5)\n                    ###pause和stop控制测试的暂停继续和停止\n                result,right,total,io = inverter(right=right,all=total)\n                if self.save:\n                    sIn,sOK = io\n                    saveFile.append(dict(index=idx,sIn=' '+sIn,sOk=sOK))\n                    idx+=1\n                    if len(saveFile)>=5e4:\n                        self.saveCSV(saveFile,'-invTest.csv')\n                        saveFile.clear()\n                    ###调用save函数，保存测试数据\n                self.output(result)\n            else:\n                self.stop = False\n                self.pause = False\n                if self.save and len(saveFile):\n                    self.saveCSV(saveFile,'gateTest.csv')\n                    saveFile.clear()\n                    ###停止命令的后处理，如果停止了，仍然保存当前测试的数据\n                break\n        self.output(\"正确率：\\n{:.3g}%\".format(float(right/total*100)))\n        ###测试完成输出测试结果，回到待机状态。\n```\n## 服务\n这部分包含异步监听模块（starMessager）与网络服务模块（httpServer，wsServer）。一般不需要额外设置。\n### starMessager\n星尘协议体系中的信使，用来在不同的异步模块中传递内容。\n#### starMessager.stat\n#### starMessager.msg\n#### starMessager.wsStat\n#### starMessager.wsMsg\n- str\n- 与异步模块交互的几个状态变量，当stat不再是waiting时，相关的异步模块就会执行对应的指令。\n#### starMessager.shipei\n- wad.shipei\n- 值为wad.wa，适配器根据设备返回的类，具体用法见[适配器wa](#wa)。\n#### starMessager.workModule\n- baseMod\n- 当前正在工作的模块，gTixi控制系统通过修改workModule的值来实现不同模块之间的切换。\n### httpServer\n### wsServer\n- threading.Thread\n- 分别为网站服务器（bottle架构）和websockets通讯服务器的线程实例。根据需要，要执行如下代码即可。\n- 其中网页界面的访问地址为localhost:8081,websockets的绑定地址为localhost:8525，需要检查这两个端口是否被占用，以及防火墙是否会拦截这两个端口的出入。\n```python\nfrom gTixi import *\nwsServer.start()\nhttpServer.start()\n```\n### webConf\n配置网络服务器和websockets服务器的入口\n- class：webConfig\n#### webConf.wsPort = '8525'\n- str\n- websockets服务器绑定的端口，默认值8525\n#### webConf.httpPort = '8081'\n- str\n- bottle绑定的端口，默认值8081\n#### webConf.webPath = './stardevice'\n- str\n- 网页界面的根目录\n#### webConf.bdzPath = '/sdcard/qpython/projects3/WalArtMinS/stardevice/'\n- str\n- bdz中网页界面的绝对路径，由于bdz相对路径会出错，这里需要列出绝对路径\n可以按照如下示例配置网络界面的相关参数\n```python\nfrom gTixi import *\nwebConf.httpPort = '8082'\nwebConf.webPath = 'e:/websitepath'\nwebConf.wsPort = '9595'\nwsServer.start()\nhttpServer.start()\n```\n## 驱动\n这部分包含了gTixi标准硬件的驱动，并提供了简易的接口\n### bme280()\n温湿度压强传感器\n- 返回:str\n- 输出样例：'Bme280测试\\n25℃ 40%  \\n101.13kPa↑暂停\\n  ←退出 '\n### getIR()\n红外检测器\n- 返回:str\n- 输出样例：'{0:02x} {1:02x} {2:02x} {3:02x}'.format(*data)\n### lightSensor()\n光线传感器\n- 返回：str\n- 输出样例：'LTR390测试:\\nUV:343, 11 lux\\nLight: 33\\n↑继续 ←退出'\n### beam(dur=0.5)\n蜂鸣器，运行会产生dur秒的蜂鸣。\n- dur\n    - int\n    - 蜂鸣时间，单位秒。\n### led(r=False,g=False,b=False)\nLED灯的控制器，目前兼容smp，bdz，zkb。\n- r:bool,g:bool,b:bool\n    - 控制对应颜色的灯，True开启，False关闭。\n### adder74283(qin)\n加法器测试\n- qin\n    - tuple(a:int,b:int,cin:int)\n    - 可以手动给加法器出题，分别是加数a(0-15)，被加数b(0-15)，进位(0-1)。\n    - 留空的话则为系统自动用随机数给加法器出题。\n- 返回：tuple(sf:str,qin:tuple(a:int,b:int,cin:int),rout:int)\n- sf字符串样例：'74283加法器测试\\n入：1+11+1  \\n出：13 ↑暂停\\n   OK ←退出 '\n    - 推荐使用 sf,_,_ = adder74283() 的语法仅接收字符串的输出\n    - 也可以用如下的方法判断加法器是否运行正确\n    ```python\n    from gTixi import *\n    sf,qin,rout = adder74183()\n    if qin[0] + qin[1] + qin[2] == rout:\n        print(\"True\")\n    else:\n        print(\"False\")\n    ```\n### pins15(isBeeps=False)\n管脚连通性测试\n- isBeeps\n    - bool\n    - True:检测到联通会发出蜂鸣。\n- 返回：str,lr\n    - str:str\n        - 用于显示在屏幕上的字符串。\n    - lr:list\n        - 连通的管脚编号。\n### logicTest()\n逻辑门测试，根据IO特性，判断接入的逻辑门为反相器，与非门，异或门，或者D锁存器。\n- 返回：str:str,sIn:str,sOut:str\n    - str为显示在屏幕上的字符串\n    - sIn，sOut为逻辑门的输入输出，分别为四位的字符串。\n### inverter(right=0,all=0)\n反相器单次测试,16个针脚，排除GND等不能用的一般一次测试6个反相器。\n- right:int\n    - 本次测试开始前的正确的数量。\n- all:int\n    - 本次测试开始前的总测试数量。\n- 返回：tuple(str:str,right,all)\n    - right:int,all:int\n        - 本次测试后的正确数量和总数。\n    - str，显示在屏幕上的文本。\n### invqe()\n6*100次一组的反相器测试。\n- 返回：gc:list(6)\n    - 6个0-1之间的浮点数，分别为6个反相器测试100次的正确率。\n### adda(v)\n数模转换器\n- v:int\n    - 输入电压\n- 返回：sf:str\n    - 包含了adda的响应频率，输入值和输出值\n### gpiopin(p0,p1)\ngpio调试工具，可以用于掌控版和未来板\n- p0:bool,p1:bool\n    - p0针脚和p1针脚的输出，True为高电平，False为低电平\n- 返回：sf:str\n    - 用于显示在显示屏上的字符串\n# 版本迭代\n## 1.0.0\n- 230307\n    - 经过了与maop的开发联动，进一步验证了gTixi的稳定性\n    - 完整界面的git里，加入了介绍部署方案的SOP文档。\n    - 本次版本没有代码上的修改\n## 0.1.2\n- 230111\n    - 解决了多个网络界面同时开启时的同步问题\n    - 解决了树莓派因为没插ssd1306版而导致的卡死问题\n## 0.1.1\n- 230110\n    - 修复了未来板闪屏的问题\n## 0.1.0\n- 230109\n    - 完成了未来板的驱动编写，未来板设备正式并入gTixi\n    - 重构了部分代码，shipei类添加了tag属性\n    - 第一个完整版本发布\n## 0.0.9\n- 针对掌控板的硬件通讯进行了一系列的更新\n    - 在连接了外设后，支持外设的功能会优先显示外设的测试结果，如果检测不到外设，则使用掌控板自带的硬件\n    - i2c\n        - 加法器测试\n        - 光照传感器\n        - 温度压强湿度传感器\n    - smbus\n        - 蜂鸣器\n    - gpio\n        - led灯控制\n        - gpio针脚调试（新增模块[gpiopin](#gpiopinp0p1)）\n## 0.0.8.1\n- 221212\n- Mod中添加了loopPro的基础操作模式，详见[loopPro](#looppro类).\n- 添加了一系列硬件驱动：\n    - 反相器测试\n    - 管脚连通性测试\n    - 逻辑门测试\n    - ADDA驱动\n    - LED灯\n- 更新了README.md\n## 0.0.7\n- 221208\n- 修复了websockets在反复刷新网页时会出现的假死状态\n## 0.0.6\n- 221208\n- 增加了自定义网站参数的内容，用户可以自定义网络界面的访问端口以及网站地址了。详见[webConf](#webconf)。\n## 0.0.5\n- 221206\n- 修订readme.md\n## 0.0.4\n- 221205\n- 将目前硬件的驱动也并入gTixi中，包括加法器，蜂鸣器，红外，bme，光线传感器。\n- 修改loopMod的逻辑，修正在暂停状态下不能停止的bug。\n## 0.0.3 \n- 221203\n- 相对稳定的初始测试版本，使用相对import引入，使架构更加科学。\n## 0.0.2\n- 221202\n- 去除了部分alib的内容改为字典或者临时类，避免了zkb的无限重启的问题。\n## 0.0.1\n- 221202\n- 初始版本发布。\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitee.com/lxwk1spectre/walartminstar",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gTixi",
    "package_url": "https://pypi.org/project/gTixi/",
    "platform": null,
    "project_url": "https://pypi.org/project/gTixi/",
    "project_urls": {
      "Homepage": "https://gitee.com/lxwk1spectre/walartminstar"
    },
    "release_url": "https://pypi.org/project/gTixi/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "高效碳基演示体系核心模块",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17235471,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5709f6c7c8efe8e6080000a7be34c8e938f84a71dda8e361a1bb5a9f5a1cfd7a",
          "md5": "18297bbb9040d68542834dfcb165eb8a",
          "sha256": "3824bd7ff0fac4887381719ff29f5ad091510c74887d69f9d8b1795906879d87"
        },
        "downloads": -1,
        "filename": "gTixi-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "18297bbb9040d68542834dfcb165eb8a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21540,
        "upload_time": "2022-12-02T07:46:31",
        "upload_time_iso_8601": "2022-12-02T07:46:31.357326Z",
        "url": "https://files.pythonhosted.org/packages/57/09/f6c7c8efe8e6080000a7be34c8e938f84a71dda8e361a1bb5a9f5a1cfd7a/gTixi-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e5846efa6a0c7de87ad89efcede3934bfc5dda7ad9f672c93367161e1ae5d12",
          "md5": "c0664e18b4738e6c9e94c8bbdaace8f4",
          "sha256": "20432b6786d23d3c672c053eae28cff02d64ecd26aa20db2c1b087cbf673b9f7"
        },
        "downloads": -1,
        "filename": "gTixi-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c0664e18b4738e6c9e94c8bbdaace8f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19675,
        "upload_time": "2022-12-02T07:46:33",
        "upload_time_iso_8601": "2022-12-02T07:46:33.526057Z",
        "url": "https://files.pythonhosted.org/packages/9e/58/46efa6a0c7de87ad89efcede3934bfc5dda7ad9f672c93367161e1ae5d12/gTixi-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a23c0123b9122197dce7ce8da183c1054dc226fb5796b8f1fb924cbb7d97a74f",
          "md5": "2b7fdde14d5d9347885679c63549f80b",
          "sha256": "94bc12dbb4cf0d4f8571d260d493e849ec7254d0883e51879858591aaa346248"
        },
        "downloads": -1,
        "filename": "gTixi-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b7fdde14d5d9347885679c63549f80b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21470,
        "upload_time": "2022-12-02T11:58:25",
        "upload_time_iso_8601": "2022-12-02T11:58:25.119585Z",
        "url": "https://files.pythonhosted.org/packages/a2/3c/0123b9122197dce7ce8da183c1054dc226fb5796b8f1fb924cbb7d97a74f/gTixi-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4f130a419af0caa3d364606f7f2cb2ee1e0058683895aebec12c5734b0d2784",
          "md5": "d72eb9b17dc8c00e01cebe2649e91ad7",
          "sha256": "d7ae2aad60e49e9e5a81035eb4948fa2a73b5b5c9e6e828b9fbb5a7e8751a022"
        },
        "downloads": -1,
        "filename": "gTixi-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d72eb9b17dc8c00e01cebe2649e91ad7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19649,
        "upload_time": "2022-12-02T11:58:27",
        "upload_time_iso_8601": "2022-12-02T11:58:27.499660Z",
        "url": "https://files.pythonhosted.org/packages/a4/f1/30a419af0caa3d364606f7f2cb2ee1e0058683895aebec12c5734b0d2784/gTixi-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e8e443504f80f801ea933f0c7c62c96e1a53c85598317c7a71c2f56517278c6",
          "md5": "a593c6558fb2097b68ab4d755c32f8d5",
          "sha256": "62dc2bb27d92bf9feb1c4fbca2880ecfb0140f8982ac1e26eec0aa04f18849e2"
        },
        "downloads": -1,
        "filename": "gTixi-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a593c6558fb2097b68ab4d755c32f8d5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21825,
        "upload_time": "2022-12-03T01:17:14",
        "upload_time_iso_8601": "2022-12-03T01:17:14.635487Z",
        "url": "https://files.pythonhosted.org/packages/3e/8e/443504f80f801ea933f0c7c62c96e1a53c85598317c7a71c2f56517278c6/gTixi-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "096d73f313162a874a62f699973fa43d3c0817a9b2086af7a581ed3f6a0b2413",
          "md5": "5f7c7910ca872f676856c57d2f39a8a4",
          "sha256": "92fc85635665c0e7e017747d9fbd3473dfcf17017b5957dcacaab4cfbdaa57bb"
        },
        "downloads": -1,
        "filename": "gTixi-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5f7c7910ca872f676856c57d2f39a8a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20290,
        "upload_time": "2022-12-03T01:17:16",
        "upload_time_iso_8601": "2022-12-03T01:17:16.685215Z",
        "url": "https://files.pythonhosted.org/packages/09/6d/73f313162a874a62f699973fa43d3c0817a9b2086af7a581ed3f6a0b2413/gTixi-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ed7980731b5bee43f6493aa3164c0fc77d1d98463f1fe54e3f4dc13ad19abe1",
          "md5": "10355c20a6e6a60bb12c947f86f1d0fa",
          "sha256": "f196ed18225aa050e34acc90787954ff617f6f2b7a0377ed4126955b3ba1a768"
        },
        "downloads": -1,
        "filename": "gTixi-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10355c20a6e6a60bb12c947f86f1d0fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29144,
        "upload_time": "2022-12-05T11:33:19",
        "upload_time_iso_8601": "2022-12-05T11:33:19.775853Z",
        "url": "https://files.pythonhosted.org/packages/8e/d7/980731b5bee43f6493aa3164c0fc77d1d98463f1fe54e3f4dc13ad19abe1/gTixi-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aca346f7bf608ecb523e281d8ee3e22ced251bdc0b3c040c1c9b235c8fc08827",
          "md5": "a38c30e88bad125e2e89984c59977a25",
          "sha256": "02e53f785435751b49fb51b531717c0b7b1b3c17a0b480f353773598656fbed1"
        },
        "downloads": -1,
        "filename": "gTixi-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a38c30e88bad125e2e89984c59977a25",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26748,
        "upload_time": "2022-12-05T11:33:22",
        "upload_time_iso_8601": "2022-12-05T11:33:22.229856Z",
        "url": "https://files.pythonhosted.org/packages/ac/a3/46f7bf608ecb523e281d8ee3e22ced251bdc0b3c040c1c9b235c8fc08827/gTixi-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d058a99d00b409b6c899564ae0a4bd25736cf9f0b359255700f3e44a0c58edf",
          "md5": "1ba22f85588419657d07366c92f4d18c",
          "sha256": "b52c8cc08315bcd8211493b0e8d2e34a194eb3fbcf5d63df6ec44552d45efd77"
        },
        "downloads": -1,
        "filename": "gTixi-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ba22f85588419657d07366c92f4d18c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 36043,
        "upload_time": "2022-12-06T14:09:17",
        "upload_time_iso_8601": "2022-12-06T14:09:17.722356Z",
        "url": "https://files.pythonhosted.org/packages/5d/05/8a99d00b409b6c899564ae0a4bd25736cf9f0b359255700f3e44a0c58edf/gTixi-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09b05c427b80d18575b7dd01e8028740ecc403f0e2631a24ed9b692f8c9894a6",
          "md5": "d0c1c9f85600e87ef7093b9ebd332317",
          "sha256": "15968790779853142303fd57a9c0d9ed372f581b60cf10ca04577704f0f26505"
        },
        "downloads": -1,
        "filename": "gTixi-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d0c1c9f85600e87ef7093b9ebd332317",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40083,
        "upload_time": "2022-12-06T14:09:21",
        "upload_time_iso_8601": "2022-12-06T14:09:21.718994Z",
        "url": "https://files.pythonhosted.org/packages/09/b0/5c427b80d18575b7dd01e8028740ecc403f0e2631a24ed9b692f8c9894a6/gTixi-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c21f226dbe93fcf4acb6224a15d7ee6ce9c043e11c004c7ccecb8d3b7cc83ac",
          "md5": "25948bbbdfe6e8ff5bb3a1cea55092cd",
          "sha256": "9711aad25371001484e34483e0a6a60a9bc4a7659cd5f9f706c6aecd598b3033"
        },
        "downloads": -1,
        "filename": "gTixi-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "25948bbbdfe6e8ff5bb3a1cea55092cd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29101,
        "upload_time": "2022-12-08T02:48:58",
        "upload_time_iso_8601": "2022-12-08T02:48:58.169544Z",
        "url": "https://files.pythonhosted.org/packages/5c/21/f226dbe93fcf4acb6224a15d7ee6ce9c043e11c004c7ccecb8d3b7cc83ac/gTixi-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a059f6d88b4200fcd30649f077f8d79f513f89066ca817985233376c6f57f2bd",
          "md5": "bf47e50afb741d11a06a60d202d0245a",
          "sha256": "fe6b75462c27f4263da549224dea21acf3cac6ab96fa528966c464e9693c4efd"
        },
        "downloads": -1,
        "filename": "gTixi-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "bf47e50afb741d11a06a60d202d0245a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34384,
        "upload_time": "2022-12-08T02:49:01",
        "upload_time_iso_8601": "2022-12-08T02:49:01.054284Z",
        "url": "https://files.pythonhosted.org/packages/a0/59/f6d88b4200fcd30649f077f8d79f513f89066ca817985233376c6f57f2bd/gTixi-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dac6073e2ef097cede2c3c5f2565143e78d2443e60175afb3b16ccec2251c004",
          "md5": "4be213f258923d6a9716fd72e648442a",
          "sha256": "6219e477434d591f6883e01bc1e83722bd3a249aaa5ad6220206c63c4b1a0acc"
        },
        "downloads": -1,
        "filename": "gTixi-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4be213f258923d6a9716fd72e648442a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 51634,
        "upload_time": "2022-12-18T01:50:11",
        "upload_time_iso_8601": "2022-12-18T01:50:11.489059Z",
        "url": "https://files.pythonhosted.org/packages/da/c6/073e2ef097cede2c3c5f2565143e78d2443e60175afb3b16ccec2251c004/gTixi-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c53284d2300b0870ea338ccd29a27d7850c2a3e6d9ba9f3ce64560aac66f7d70",
          "md5": "d286a7c1050c0c01447892298a49754a",
          "sha256": "85ed6095e9183ae1b6b10d12d09229abc17f06e19488175434516c2ea46b7f4f"
        },
        "downloads": -1,
        "filename": "gTixi-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "d286a7c1050c0c01447892298a49754a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 58160,
        "upload_time": "2022-12-18T01:50:13",
        "upload_time_iso_8601": "2022-12-18T01:50:13.743159Z",
        "url": "https://files.pythonhosted.org/packages/c5/32/84d2300b0870ea338ccd29a27d7850c2a3e6d9ba9f3ce64560aac66f7d70/gTixi-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0539c3bf0e9cf04667f17b5bfb7506faeeb3eaeefadcc1a15d298d9d0957a3c7",
          "md5": "3af6f7808ecba8f3091bab28b7727f7e",
          "sha256": "4f52d7e5c8a1bd88727ec31ebbe0ee91007c5304b3dafab79260f29f7a94dd0f"
        },
        "downloads": -1,
        "filename": "gTixi-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3af6f7808ecba8f3091bab28b7727f7e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 52301,
        "upload_time": "2023-01-09T09:25:05",
        "upload_time_iso_8601": "2023-01-09T09:25:05.811487Z",
        "url": "https://files.pythonhosted.org/packages/05/39/c3bf0e9cf04667f17b5bfb7506faeeb3eaeefadcc1a15d298d9d0957a3c7/gTixi-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5eab4374f08762b620d20d41db44c7872a8f8f330ae74be1b6d3d7b47019437",
          "md5": "5b1e55690848b8c6d5a19ceecd201c2e",
          "sha256": "c8698cad47c64d04c12868cc66c57bba7416af0151825cad3d592df7880bd9f8"
        },
        "downloads": -1,
        "filename": "gTixi-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5b1e55690848b8c6d5a19ceecd201c2e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 59465,
        "upload_time": "2023-01-09T09:25:08",
        "upload_time_iso_8601": "2023-01-09T09:25:08.311504Z",
        "url": "https://files.pythonhosted.org/packages/e5/ea/b4374f08762b620d20d41db44c7872a8f8f330ae74be1b6d3d7b47019437/gTixi-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31642d0ad1d6c0593f5564b8ba32907cf9ba25a21f5bc1daf91038b08b67e22c",
          "md5": "ed2356be7d33bf8209905f37b0011799",
          "sha256": "1f8890241e0938cbe4979919e4fb2e886ff16e4e8a9cf644b2311e9f974e466d"
        },
        "downloads": -1,
        "filename": "gTixi-0.1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed2356be7d33bf8209905f37b0011799",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 52346,
        "upload_time": "2023-01-10T08:54:31",
        "upload_time_iso_8601": "2023-01-10T08:54:31.762499Z",
        "url": "https://files.pythonhosted.org/packages/31/64/2d0ad1d6c0593f5564b8ba32907cf9ba25a21f5bc1daf91038b08b67e22c/gTixi-0.1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4054d60c999359e35b1e837146b2da6da4c845bc9643ea902182fc1b0807cada",
          "md5": "a91ae3fc8299cb72dde450a652b952fa",
          "sha256": "95a43c04fa76ed257d8a20aea217040af0cd4920dcee689ff87ac04e61c18e38"
        },
        "downloads": -1,
        "filename": "gTixi-0.1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a91ae3fc8299cb72dde450a652b952fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 59502,
        "upload_time": "2023-01-10T08:54:34",
        "upload_time_iso_8601": "2023-01-10T08:54:34.115080Z",
        "url": "https://files.pythonhosted.org/packages/40/54/d60c999359e35b1e837146b2da6da4c845bc9643ea902182fc1b0807cada/gTixi-0.1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eda8d5d594b07c9a5327904ad485fca1e6e3772b43dcaf964357a0010108b349",
          "md5": "61c8504db5e3e40a315a530b13b16bb3",
          "sha256": "952c46e701ccc73d3a332e7390c0150ce85235f69928b428acf96aeec2c837b3"
        },
        "downloads": -1,
        "filename": "gTixi-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "61c8504db5e3e40a315a530b13b16bb3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 52444,
        "upload_time": "2023-01-11T02:08:36",
        "upload_time_iso_8601": "2023-01-11T02:08:36.549239Z",
        "url": "https://files.pythonhosted.org/packages/ed/a8/d5d594b07c9a5327904ad485fca1e6e3772b43dcaf964357a0010108b349/gTixi-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c074d61e50f28517225d6f50b6db00048c650413b7ab13f30c579f707a945938",
          "md5": "3cbe05de6c1f69bf4e6ed6fd892bdefa",
          "sha256": "f946d09dc5fae467d9bc6b3e98613194f05e7877a3ecc307ced207bdf5b36f5e"
        },
        "downloads": -1,
        "filename": "gTixi-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3cbe05de6c1f69bf4e6ed6fd892bdefa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 59703,
        "upload_time": "2023-01-11T02:08:38",
        "upload_time_iso_8601": "2023-01-11T02:08:38.529405Z",
        "url": "https://files.pythonhosted.org/packages/c0/74/d61e50f28517225d6f50b6db00048c650413b7ab13f30c579f707a945938/gTixi-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b93e6290ed177d7fd337d20084e3e91034affdb4d56aee561c35c9c34770c799",
          "md5": "992ba73b4606e53ffd05c385953314eb",
          "sha256": "4b64a48bece0eb2a95627330bd42ab9c6b9ac376fff06cae889f49448205dda7"
        },
        "downloads": -1,
        "filename": "gTixi-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "992ba73b4606e53ffd05c385953314eb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 52571,
        "upload_time": "2023-03-10T07:15:06",
        "upload_time_iso_8601": "2023-03-10T07:15:06.747033Z",
        "url": "https://files.pythonhosted.org/packages/b9/3e/6290ed177d7fd337d20084e3e91034affdb4d56aee561c35c9c34770c799/gTixi-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec6308c38c8feb8eb98eb5512fea21b6eeff12d825d659954530dd9b09b64b08",
          "md5": "4a96da6a76606c91ccabfbe7a93ff8e1",
          "sha256": "0cdbfbd62923e5ef4f3fd86851e282bd34164de945f584d0da63dd3648de8e2d"
        },
        "downloads": -1,
        "filename": "gTixi-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4a96da6a76606c91ccabfbe7a93ff8e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 59996,
        "upload_time": "2023-03-10T07:15:09",
        "upload_time_iso_8601": "2023-03-10T07:15:09.176211Z",
        "url": "https://files.pythonhosted.org/packages/ec/63/08c38c8feb8eb98eb5512fea21b6eeff12d825d659954530dd9b09b64b08/gTixi-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b93e6290ed177d7fd337d20084e3e91034affdb4d56aee561c35c9c34770c799",
        "md5": "992ba73b4606e53ffd05c385953314eb",
        "sha256": "4b64a48bece0eb2a95627330bd42ab9c6b9ac376fff06cae889f49448205dda7"
      },
      "downloads": -1,
      "filename": "gTixi-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "992ba73b4606e53ffd05c385953314eb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 52571,
      "upload_time": "2023-03-10T07:15:06",
      "upload_time_iso_8601": "2023-03-10T07:15:06.747033Z",
      "url": "https://files.pythonhosted.org/packages/b9/3e/6290ed177d7fd337d20084e3e91034affdb4d56aee561c35c9c34770c799/gTixi-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ec6308c38c8feb8eb98eb5512fea21b6eeff12d825d659954530dd9b09b64b08",
        "md5": "4a96da6a76606c91ccabfbe7a93ff8e1",
        "sha256": "0cdbfbd62923e5ef4f3fd86851e282bd34164de945f584d0da63dd3648de8e2d"
      },
      "downloads": -1,
      "filename": "gTixi-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4a96da6a76606c91ccabfbe7a93ff8e1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 59996,
      "upload_time": "2023-03-10T07:15:09",
      "upload_time_iso_8601": "2023-03-10T07:15:09.176211Z",
      "url": "https://files.pythonhosted.org/packages/ec/63/08c38c8feb8eb98eb5512fea21b6eeff12d825d659954530dd9b09b64b08/gTixi-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}