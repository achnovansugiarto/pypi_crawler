{
  "info": {
    "author": "Null",
    "author_email": "546464268@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "### Meteor tears\n\n[![LICENSE](https://img.shields.io/badge/license-MIT-green.svg)](https://github.com/xiaoxiaolulu/MeteorTears/blob/master/LICENSE) [![python version](https://img.shields.io/badge/python-3.4%7C3.5%7C3.6%7C3.7-blue.svg)](https://pypi.org/project/MeteorTears/)\n\n\nMeteor tears 一款基于python-request通过Json格式文件管理用例的接口测试工具\n\n\n### 用例编写(Json文件管理)\nkey | value | example\n------------ | -------------| ----------------\nurl | 请求接口路由 | /admin/compaign/export\nmethod | 请求方式 | GET\nparams | url地址参数 | ?channelId=123importId=456\ndata | 请求数据 | {\"name\": \"SEMAUTO\", \"categoryId\": $arguments, \"enabled\": 1}\nfile | 上传文件数据 | {file=operate_excel.save_excel(file=os.path.join(parameters.make_directory('Data', 0), 'excel\\compaign_template.xlsx'),data_index=0,excel_key='落地页编号',excel_name='compaign_template_副本.xlsx')}\njson | Json类型请求 | {\"name\": \"SEMAUTO\", \"categoryId\": $arguments, \"enabled\": 1}\nheaders | 请求头 | {'Authorization': 'eyJ0eXAiOiJK', 'Content-Type': 'application/json'} \nassert | 结果断言 | {\"username\": \"NULL\", \"password\": \"123456\", \"auth_code\": ['len': 4]}\nresponseType | 验证断言结果的数据类型 | {'Response': ['username'：'str']}\ndescription | 用例描述 | \"新增渠道\"\njsonDiff | 返回结果自动对比 | {\"code\":0,\"message\":\"操作成功\",\"data\":\"\"}\n\n\n### Mysql执行语句编写讲解\n```yaml\n- ChannelBudget:\n    action: SELECT\n    execSQL:\n      - table: shopping\n      - columns: ['id']\n      - params: id='1'\n      - desc: ORDER BY id DESC LIMIT 1\n    except:\n      - is_table: 0\n      - message: You have an error in your SQL syntax\n```\n\nkey | value | Sample\n------------ | -------------| ----------------\naction| sql执行操作类 | SELECT/DELETE/INSERT/UPDATE等   \ntable| 数据库表 | channel_budget\ncolumns| 列名 | ['channel_id'] 列表类型，支持多个值\nparams| 检索条件 | id='1'\ndesc| 排序 | ORDER BY ID DESC LIMIT 1\n\n\n### 接口录制V1.0.0\n```text\nFile -》Save -》  (a) All sessions  以saz格式文件保存所有会话 \n                 (b) Selected Sessions 保存选择的会话\n                            1. in ArchiveZIP ：保存为saz文件\n                            2. in ArchiveZIP ：保存为saz文件\n                            3. as Text (Headers only) ：仅保存头部\n                 (c) Request 保存请求\n                            1. Entir Request:保存整个请求信息（headers和body）\n                            2. Request Body:只保存请求body部分\n                 (d) Response 保存请求返回\n                            1. Request Body:只保存请求body部分\n                            2. Response Body:只保存返回body部分\n                            3. Response Body:只保存返回body部分\n\n返回Response结构体乱码\n        点击decode \n```\n\n#### 接口回放\n1. File -》Load Archive 导入saz文件\n2. Ctr + A 选择全部接口\n3. 点击Replay按钮, 批量请求\n\n\n#### 修改CustomRules文件\n1. 找到OnBeforeResponse方法\n2. 添加如下代码\n```javascript\n        oSession.utilDecodeResponse();\n        var now = new Date();\n        var ts = now.getTime();\n        var filename =  'F:/MeteorTears/WorkFlow/' + ts + '_' + oSession.id + '.yaml';\n        var curDate = new Date();\n        var logContent = \"Request url: \" + oSession.url + \"\\r\\nRequest header: \" + oSession.oRequest.headers +  \"\\r\\nRequest body: \" + oSession.GetRequestBodyAsString() + \"\\r\\nResponse code: \" + oSession.responseCode + \"\\r\\nResponse body: \" + oSession.GetResponseBodyAsString() + \"\\r\\n\";\n        var sw : System.IO.StreamWriter;\n        if (System.IO.File.Exists(filename)){\n            sw = System.IO.File.AppendText(filename);\n            sw.Write(logContent);\n        }\n        else{\n            sw = System.IO.File.CreateText(filename);\n            sw.Write(logContent);\n        }\n        sw.Close();\n        sw.Dispose();\n```\n3. C:\\Users\\56464\\Documents\\Fiddler2\\Scripts\\目录下最好先备份原文件,并命名CustomRulesBack.js\n4. 录制的原始接口信息会保存在/WorkFlow/目录下\n5. 录制完的接口为JSON格式文件, load_fiddler_files.py分析并生成新的迭代对象, create_workFlow_obj.py将生成新的Json格式用例文件,\n\n--------------\n\n欢迎交流   QQ: 546464268(Null)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/xiaoxiaolulu/MeteorTears",
    "keywords": "HTTP api test requests",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MeteorTears",
    "package_url": "https://pypi.org/project/MeteorTears/",
    "platform": "",
    "project_url": "https://pypi.org/project/MeteorTears/",
    "project_urls": {
      "Homepage": "https://github.com/xiaoxiaolulu/MeteorTears"
    },
    "release_url": "https://pypi.org/project/MeteorTears/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
    "summary": "Even the most boring times in life are limited.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4637187,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "229101551ef6ad729674f73a1b649a7a0144101d9c0c1e740655f65b1e5b68c2",
          "md5": "1733c7363909522095a819ee98033426",
          "sha256": "40a2be1841158f733430e121ddf707addbfd445d98396bafc2e9fdac2d2b3a02"
        },
        "downloads": -1,
        "filename": "MeteorTears-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1733c7363909522095a819ee98033426",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
        "size": 209396,
        "upload_time": "2018-12-27T07:55:27",
        "upload_time_iso_8601": "2018-12-27T07:55:27.931758Z",
        "url": "https://files.pythonhosted.org/packages/22/91/01551ef6ad729674f73a1b649a7a0144101d9c0c1e740655f65b1e5b68c2/MeteorTears-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f5786fbfc4fb7fbe8dedcbbfed0e379cad01ed2e2f6614e44d787da489e83f3",
          "md5": "aefbc49ab5fce484b897ae50cb861e93",
          "sha256": "574c14badabfd8f1f23e6d8606663738bcc93a1cced63bdb6a2c5a048cdbf4ee"
        },
        "downloads": -1,
        "filename": "MeteorTears-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aefbc49ab5fce484b897ae50cb861e93",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
        "size": 209443,
        "upload_time": "2018-12-27T08:15:19",
        "upload_time_iso_8601": "2018-12-27T08:15:19.959138Z",
        "url": "https://files.pythonhosted.org/packages/9f/57/86fbfc4fb7fbe8dedcbbfed0e379cad01ed2e2f6614e44d787da489e83f3/MeteorTears-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f5786fbfc4fb7fbe8dedcbbfed0e379cad01ed2e2f6614e44d787da489e83f3",
        "md5": "aefbc49ab5fce484b897ae50cb861e93",
        "sha256": "574c14badabfd8f1f23e6d8606663738bcc93a1cced63bdb6a2c5a048cdbf4ee"
      },
      "downloads": -1,
      "filename": "MeteorTears-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "aefbc49ab5fce484b897ae50cb861e93",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4",
      "size": 209443,
      "upload_time": "2018-12-27T08:15:19",
      "upload_time_iso_8601": "2018-12-27T08:15:19.959138Z",
      "url": "https://files.pythonhosted.org/packages/9f/57/86fbfc4fb7fbe8dedcbbfed0e379cad01ed2e2f6614e44d787da489e83f3/MeteorTears-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}