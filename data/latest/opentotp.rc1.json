{
  "info": {
    "author": "Prevenity Labs",
    "author_email": "info@prevenity.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# OpenTOTP\n\n[OpenTOTP](https://github.com/prevenitylabs/) is yet another time-based, one-time passwords (OTPs) generator/verifier inspired by [RFC 6238](https://datatracker.ietf.org/doc/html/rfc6238).\n\nIt generates and validates OTPs based on:\n1. Shared secret\n2. Current UTC time\n\nOpenTOTP uses *HMAC-SHA256* to generate OTPs, encodes them using any alphabet (predefined set of output characters) you may need, and truncates OTPs to the expected length.\n\nTo ensure generated passwords can be used one-time only, applications that use this package must either mark successfully verified OTPs as already used ones (and temporarily store them in a database until OTP expires) so used OTPs can be rejected, or can use optional, one-time *nonce* value while generating OTP.\n\nAs defined in [RFC 6238](https://datatracker.ietf.org/doc/html/rfc6238), the OpenTOTP verification mechanism allows for an OTP drift so a specified number of older/newer OTP values are also accepted as valid ones. This helps to increase the chance of successful verification when the current UTC time on the client and server sides are slightly different.\n\nNote that the *shared secret* value can be customized in any manner, effectively limiting the validation scope of an OTP, for instance:\n- Per application (shared secret = application-level secret)\n- Per user/session (shared secret = user/session unique random secret)\n- Per transaction (shared secret = transaction unique random secret)\n\nNeedless to say, the *shared secret* must be kept secret. Once its confidentiality or integrity is breached, the intruder can impersonate the user.\n\n## Installation\n\n1. You can install the OpenTOTP from [PyPI](https://pypi.org/project/opentotp/):\n   ```shell\n   python -m pip install opentotp\n   ```\n\n## Quick start\n\n1. Generate OTP (using default settings)\n    ```shell\n    python -m opentotp generate\n    ```\n\n3. Verify OTP\n    ```shell\n    python -m opentotp verify OTP_VALUE\n    ```\n\n## Command line usage\n\n1. Generate OTP using **custom secret**\n    ```shell\n    TOTP_SECRET=`python -c \"import os; print(os.urandom(32).hex())\"`\n    python -m opentotp --secret ${TOTP_SECRET} generate\n    ```\n\n2. Generate OTP using **verbose mode**\n    ```shell\n    python -m opentotp -v generate\n    ```\n\n3. Generate OTP that changes **every 30 seconds**\n    ```shell\n    python -m opentotp --otp-change-interval 30 generate \n    ```\n4. Generate OTP that uses **only Arabic numerals** as the output alphabet\n   ```shell\n   python -m opentotp --alphabet \"0123456789\" generate\n   ```\n\n5. Verify if **OTP is correct**\n    ```shell\n    # Sample OTP value: yfPXifub\n    python -m opentotp --secret \"REPLACE_WITH_SECRET_USED_TO_GENERATE_OTP\" verify yfPXifub \n    ```\n\n6. When verifying, also accept **4 older/newer OTPs**\n    ```shell\n    # Sample OTP value: yfPXifub\n    python -m opentotp --otp-change-interval 30 --otp-drift 4 verify yfPXifub \n    ```\n\n## Command line parameters\n\n```\nusage: opentotp.py [-h] [--timestamp TIMESTAMP] [--secret SECRET] [--alphabet ALPHABET] [--otp-length OTP_LENGTH] [--otp-change-interval OTP_CHANGE_INTERVAL] [--otp-drift OTP_DRIFT]\n                   [--nonce NONCE] [--version] [-v | -q]\n                   {generate,verify} ...\n\nGenerate or verify Time-based One-Time Passwords (TOTPs) based on shared secret and current UTC timestamp.\n\n  To generate new OTP:\n       python -m opentotp generate\n\n  To verify OTP: \n       python -m opentotp verify OTP_VALUE\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --timestamp TIMESTAMP\n                        Custom UTC Epoch timestamp to use\n  --secret SECRET       Shared secret value\n  --alphabet ALPHABET   Custom encoding (output) alphabet\n  --otp-length OTP_LENGTH\n                        Length of OTP\n  --otp-change-interval OTP_CHANGE_INTERVAL\n                        OTP change interval [in seconds]\n  --otp-drift OTP_DRIFT\n                        A number of previous/next OTPs to accept\n  --nonce NONCE         A one-time-only NONCE value to prevent replay-attacks\n  --version             show program's version number and exit\n  -v, --verbose         Include configuration parameters in result screen\n  -q, --quiet           Quiet mode. Print OTP only or return result of verification (TRUE or FALSE)\n\nsub-commands:\n  {generate,verify}     OpenTOTP mode of operation\n    generate            Generate new OTP\n    verify              Verify if provided OTP is correct\n```\n\n## Module usage\n\nSample code snippet\n\n```python\n#!/usr/bin/env python3\n\nfrom opentotp import OpenTOTP\nfrom uuid import uuid4\n\notp = OpenTOTP(secret=uuid4().hex,\n               alphabet=\"0123456789\",\n               otp_length=6,\n               otp_change_interval=30,\n               otp_drift=3)\n\notp_value = otp.generate()\nresult = otp.verify(otp_value)\n\nprint(\"------------------------------------------\")\nprint(f\"OTP: {otp_value}\")\nprint(f\"OTP verification status: {'SUCCESS' if result else 'FAILURE'}\")\nprint(\"------------------------------------------\")\n```\n\n## Docker usage\n\nFor some, this may be the fastest and cleanest way to try OpenTOTP:\n\n1. Build docker image and run the container\n   ```shell\n   git clone https://github.com/prevenitylabs/opentotp.git opentotp\n   cd opentotp\n   docker build -t opentotp .\n   docker run --rm opentotp --help\n   ```\n\n2. Generate OTP\n   ```shell\n   docker run --rm opentotp generate\n   ```\n\n3. Verify OTP\n   ```shell\n   docker run --rm opentotp -v verify OTP_VALUE\n   ```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/prevenitylabs/opentotp",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "opentotp",
    "package_url": "https://pypi.org/project/opentotp/",
    "platform": "",
    "project_url": "https://pypi.org/project/opentotp/",
    "project_urls": {
      "Homepage": "https://github.com/prevenitylabs/opentotp"
    },
    "release_url": "https://pypi.org/project/opentotp/1.0.0/",
    "requires_dist": [
      "base58 (>=2.1.1)"
    ],
    "requires_python": "",
    "summary": "Yet another Time-based, One-Time-Passwords Generator/Verifier",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12020290,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2476ca9e8cc8d1c5b37561407ddce30e0b0bab4da0ea2c48249fd79933807da3",
          "md5": "981bef77c3702c40a43c759a4eba7c55",
          "sha256": "ab55f4d8dc5c68a186dd6cbf2e52854c1437784deaf315743c3c085fc2c19238"
        },
        "downloads": -1,
        "filename": "opentotp-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "981bef77c3702c40a43c759a4eba7c55",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9063,
        "upload_time": "2021-11-14T20:08:05",
        "upload_time_iso_8601": "2021-11-14T20:08:05.403798Z",
        "url": "https://files.pythonhosted.org/packages/24/76/ca9e8cc8d1c5b37561407ddce30e0b0bab4da0ea2c48249fd79933807da3/opentotp-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38ccb4a42c0e5668e0c6ed06c84f62e370f2d8282a58a63b632585cab6d29b35",
          "md5": "ccd7fcee218b9a47dc97d74bbf056f78",
          "sha256": "013192cab2893828191814ccec7688085bcfa5820573dc438bda2e9b51307e80"
        },
        "downloads": -1,
        "filename": "opentotp-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ccd7fcee218b9a47dc97d74bbf056f78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8302,
        "upload_time": "2021-11-14T20:08:07",
        "upload_time_iso_8601": "2021-11-14T20:08:07.228534Z",
        "url": "https://files.pythonhosted.org/packages/38/cc/b4a42c0e5668e0c6ed06c84f62e370f2d8282a58a63b632585cab6d29b35/opentotp-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2476ca9e8cc8d1c5b37561407ddce30e0b0bab4da0ea2c48249fd79933807da3",
        "md5": "981bef77c3702c40a43c759a4eba7c55",
        "sha256": "ab55f4d8dc5c68a186dd6cbf2e52854c1437784deaf315743c3c085fc2c19238"
      },
      "downloads": -1,
      "filename": "opentotp-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "981bef77c3702c40a43c759a4eba7c55",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9063,
      "upload_time": "2021-11-14T20:08:05",
      "upload_time_iso_8601": "2021-11-14T20:08:05.403798Z",
      "url": "https://files.pythonhosted.org/packages/24/76/ca9e8cc8d1c5b37561407ddce30e0b0bab4da0ea2c48249fd79933807da3/opentotp-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "38ccb4a42c0e5668e0c6ed06c84f62e370f2d8282a58a63b632585cab6d29b35",
        "md5": "ccd7fcee218b9a47dc97d74bbf056f78",
        "sha256": "013192cab2893828191814ccec7688085bcfa5820573dc438bda2e9b51307e80"
      },
      "downloads": -1,
      "filename": "opentotp-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ccd7fcee218b9a47dc97d74bbf056f78",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8302,
      "upload_time": "2021-11-14T20:08:07",
      "upload_time_iso_8601": "2021-11-14T20:08:07.228534Z",
      "url": "https://files.pythonhosted.org/packages/38/cc/b4a42c0e5668e0c6ed06c84f62e370f2d8282a58a63b632585cab6d29b35/opentotp-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}