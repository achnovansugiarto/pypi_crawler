{
  "info": {
    "author": "Lin-Bert, zhangrui_wolf",
    "author_email": "heqinglin4@huawei.com, zhangrui283@huawei.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# aicc\n\n#### 介绍\naicc是一款面向MindSpore开发者和华为计算中心，致力于易化和规范化云上文件交互过程，简化云上日志显示，以此加速模型开发进度和降低云上集群调试难度。其包含三大功能：云上日志显示分类；云上文件交互传输； 云上分布式训练启动。aicc不仅能够帮助开发者便捷、快速的将本地（线下）代码迁移至计算中心，还可以一行代码解决云上分布式训练问题。利用云上文件交互传输功能，可解决云上大规模模型或大规模数据实时交互传输问题。简洁的日志显示和分类系统也极大地便利了开发者利用云上集群调试大模型。\n\n\n\n#### 特性\n\n1.  CFTS：文件交互传输系统\n2.  AiLog：云上日志显示系统\n3.  Distribute Training：云上分布式训练\n\n#### 安装教程\n\n```shell\npip install aicc_tools\n```\n\n#### 使用说明\n\n##### 云上环境初始化\n\n```python\nimport aicc_tools as ac\n\n# moxing 交互环境注册（可选）避免文件交互过程中动态密钥失效而中断\nac.mox_register(ak='#@#$', sk='*&^%', server='https://obs.cn-central-221.ovaijisuan.com')\n# 一行代码开启云上分布式训练\n\"\"\"\nArgs:\n    seed: 设置随机种子数\n    use_parallel: 是否使用分布式训练，默认是True\n    基本环境初始化配置。支持mindspore.context.set_context(**kwargs)内所有支持的参数配置\n    context_config = {\"mode\": \"GRAPH_MODE\", \"device_target\": \"Ascend\", \"device_id\": 0}\n    并行环境初始化配置。支持mindspore.context.set_auto_parallel_context(**kwargs)内所有支持的参数配置\n    parallel_config = {\"parallel_mode\": \"DATA_PARALLEL\", \"gradients_mean\": True}\nReturn:\n\trank_id: 当前程序执行的device编号\n\tdevice_num: 使用的总的device数量\n\"\"\"\nlocal_rank, device_num = ac.cloud_context_init(seed=args.seed, use_parallel=use_parallel, context_config=context,\n                                               parallel_config=parallel)\n```\n\n##### 云上文件交互系统\n\n```python\n# Step1 init cfts\n'''\nobs_path: 用于存储云上训练过程中产生的所有数据的obs桶路径， 通常是以obs或s3开头的链接\nrank_id: 当前程序执行的device编号, 默认按照一个节点只回传一张卡的数据\nupload_frequence：回传数据至obs桶的频次，默认是训练一个step回传一次数据\nkeep_last：保持始终是最新的文件，删掉旧文件，默认是True\n'''\ncfts = ac.CFTS(obs_path=\"obs存储路径\", rank_id=0, upload_frequence=1， keep_last=True)\n\n# 获取obs的数据集（可选）\n'''\n默认返回云上训练作业容器内实际的数据集存放路径，方便开发者一键移植到数据集读取和处理代码中\n'''\nds_path = cfts.get_dataset(dataset_obs=\"obs数据集路径\")\n\n# 获取obs的checkpoint模型参数文件（可选）\n'''\n默认返回云上训练作业容器内实际的模型文件存储路径，方便开发者进行后续加载和处理\n'''\nckpt_path = cfts.get_checkpoint(checkpoint_obs=\"obs模型路径\")\n```\n\n\n\n```python\n# Step2 获取内置 callback， 注意所有需要保存文件的路径在云上已被默认，用户无需配置！\n\n## 保存checkpoint的callback函数（可选）\n'''\nfunction: cfts.checkpoint_monitor()\n集成了mindspore的ModelCheckpoint, CheckpointConfig，支持其所有超参\n'''\nckpt_cb = cfts.checkpoint_monitor(prefix=\"mae\")\n\n## 保存summary的callback函数（可选）\n'''\nfunction: cfts.summary_monitor()\n集成了mindspore的SummaryCollector所有支持功能\n'''\nsummary_cb = cfts.summary_monitor(collect_freq=1)\n\n## 显示loss的callback函数（可选）\n'''\nfunction: cfts.loss_monitor()\n集成了mindspore的LossMonitor所有功能，改善日志打印体验\n'''\nloss_cb = cfts.loss_monitor(per_print_times=1)\n\n## 如果有自定义的callback函数，可直接加入到callback列表中，但需注意obs_monitor需放在列表最后一项\ncustom_cb = CustomMonitor() # 不涉及文件保存\ncustom_cb = CustomMonitor(save_dir=cfts.get_custom_path()) # 涉及文件保存时，需传入cfts固定的用户路径，保证文件被回传！\n\n## 云上必须的文件回传callback函数！！！（必选）\n'''\nfunction: cfts.obs_monitor()\n规范云上文件与obs交互传输，云上必须使用该callback函数才能实现所有生成文件的回传！\n'''\nobs_cb = cfts.obs_monitor()\n\n## 用于model.train的callback定义\ncallback = [loss_cb, summary_cb, ckpt_cb, custom_cb, obs_cb]\n```\n\n##### 云上日志显示系统\n\n```python\n# 日志系统，打印信息\n'''\nlogger 可以自定义打印到 stdout 和文件的配置，可以实现不输出日志到 stdout、或者只有指定节点和设备才输出日志。可以控制输出到 stdout 和文件的日志的等级和格式，并可以控制单个日志文件的大小和最多保存多少个日志文件。\n'''\nlogger = ac.get_logger(to_std=True,\n                           stdout_nodes=(0, 1),\n                           stdout_devices=(0, 1),\n                           stdout_level='ERROR',\n                           stdout_format=None,\n                           file_level='INFO',\n                           file_save_dir='./log/',\n                           file_prefix=None,\n                           max_file_size=50,\n                           max_num_of_files=5)\nlogger.debug('debug message')\nlogger.info('info message')\nlogger.warning('warning message')\nlogger.error('error message')\nlogger.critical('critical message')\n```\n\n#### 使用样例\n\n\n\n#### 参与贡献\n\n1.  Fork 本仓库\n2.  新建 Feat_xxx 分支\n3.  提交代码\n4.  新建 Pull Request\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitee.com/Lin-Bert/aicc.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aicc-tools",
    "package_url": "https://pypi.org/project/aicc-tools/",
    "platform": null,
    "project_url": "https://pypi.org/project/aicc-tools/",
    "project_urls": {
      "Homepage": "https://gitee.com/Lin-Bert/aicc.git"
    },
    "release_url": "https://pypi.org/project/aicc-tools/0.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "aicc_tools is used of AI Computer Center for modelarts job.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15679743,
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17c2dbd86b929ac01abb86f03201888d06262b6f62fdc9b8a98bdde29208f7e5",
          "md5": "6021f13b08978406ad81987b1a91105d",
          "sha256": "88845cf075e58e34f394ecc4784297398bcf6e95aebdfca377931b25c7e69a18"
        },
        "downloads": -1,
        "filename": "aicc_tools-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6021f13b08978406ad81987b1a91105d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30320,
        "upload_time": "2022-11-07T02:39:22",
        "upload_time_iso_8601": "2022-11-07T02:39:22.913744Z",
        "url": "https://files.pythonhosted.org/packages/17/c2/dbd86b929ac01abb86f03201888d06262b6f62fdc9b8a98bdde29208f7e5/aicc_tools-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "17c2dbd86b929ac01abb86f03201888d06262b6f62fdc9b8a98bdde29208f7e5",
        "md5": "6021f13b08978406ad81987b1a91105d",
        "sha256": "88845cf075e58e34f394ecc4784297398bcf6e95aebdfca377931b25c7e69a18"
      },
      "downloads": -1,
      "filename": "aicc_tools-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6021f13b08978406ad81987b1a91105d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 30320,
      "upload_time": "2022-11-07T02:39:22",
      "upload_time_iso_8601": "2022-11-07T02:39:22.913744Z",
      "url": "https://files.pythonhosted.org/packages/17/c2/dbd86b929ac01abb86f03201888d06262b6f62fdc9b8a98bdde29208f7e5/aicc_tools-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}