{
  "info": {
    "author": "Gauthier Rousseau",
    "author_email": "gauthier.rousseau@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "﻿\n# About\n\nOpyFlow : Python package for Optical Flow measurements\n\nOpyflow is a basic image velocimetry tool to simplify your *video* or *frame sequences* processing.\n\nIt is based on `opencv` and `vtk` libraries to detect Good Features to Track (GFT), calculate their displacements by the Lukas Kanade method and interpolate them on a mesh. This method is sometimes called Feature Image Velocimetry. It is an alternative to the classical cross-correlation techniques employed in Particle Image Velocimetry (PIV). Compared to this technique, GFT+OpticalFlow may result in better performance when image qualities are poor for velocimetry, i.e. when velocity information on frames is non-uniform.\n\nFor flow calculations, the process is mainly inspired by the openCV python sample [lktrack.py](https://github.com/opencv/opencv/blob/master/samples/python/lk_track.py).\n\nThe package also contains some rendering tools built with matplotlib. Velocities can be exported (csv, tecplot, vtk, hdf5).\n\nAuthor: Gauthier Rousseau\n\nCorresponding e-mail : gauthier.rousseau@gmail.com\n\n## Quick start\n\nAssuming that you already have an environment with python installed (<=3.9), run the following command on your terminal:\n\n```shell\npip install opyf\n```\n\nor from the *opyflow* repository\n\n```shell\npython setup.py install\n```\n\nThis should install the opyf library and the main dependencies (vtk and opencv) automatically.\n\nIf you meet compatibility problems on your system, it is recommended creating an *environment* via *conda* installation (see bellow [installation with anaconda](#installation-with-anaconda)).\n\nTo analyze a frame sequence (*png*, *bmp*, *jpeg*, *tiff*) you may run the following script:\n\n```python\nimport opyf\nanalyzer=opyf.frameSequenceAnalyzer(\"folder/toward/images\")\n```\n\nFor a video (*mp4*, *avi*, *mkv*, ... ):\n\n```python\nanalyzer=opyf.videoAnalyzer(\"video/file/path\")\n```\n\nTo perform your first analyze run :\n\n```python\nanalyzer.extractGoodFeaturesAndDisplacements()\n```\n\nopyf package contains two frames and one video for testing and practicing yourself:\n\n- The two frames were extracted from the frame sequence of the Test case A of the *PIV Challenge 2014*\n\n![PIV challenge](test/Test_case_PIV_Challenge_2014/gif/example_PIV_challenge.gif)\n\nWhen applied to the entire dataset, It can produce the above result (see [Test PIV Challenge 2014 - Case A](test/Test_case_PIV_Challenge_2014/testPIVChallengeCaseA.md) for details on the procedure).\n\n- The video is a bird eye view video of a stream river taken by a drone and from which surface velocities can be extracted ([see the following python file for the different possible procedures](test/Test_Navizence/test_opyf_Navizence.py) ).\n\n![bird eye view Navizence](test/Test_Navizence/gif/example_Navizence_Drone.gif)\n\n## Contents\n\nThis archive is organized as follows:\n\nThe setup file:\n\n- setup.py\n\nThe package Folder opyf:\n\n- opyf\n\n  - Track.py\n  - Interpolate.py\n  - Files.py\n  - Filters.py\n  - Render.py\n  - custom_cmap.py (based on Chris Slocum file)\n\nThe test Folder:\n\n- test\n\n  - Test_case_PIV_Challenge_2014\n\n    - CommandLines-Opyf-PIV-Challenge2014-Test.py\n\n    - CommandLines-Opyf-PIV-Challenge2014-Test_Simple.py\n\n    - mask.tiff\n\n    - images (sample of 2 source images)\n\n      - A_00001_a.tif\n      - A_00001_b.tif\n    - ReadMe_Download_Images.txt (instruction to download the entire image sequence of the test)\n    - meanFlow.png (Results for the CommandLines)\n    - rms.png\n    - [testPIVChallengeCaseA.md](test/Test_case_PIV_Challenge_2014/testPIVChallengeCaseA.md)\n\n  - Test_land_slide_youtube_video\n    - OpyFlow_testcase_youtube_MA.py\n    - OpyFlow_testcase_youtube_simple.py\n    - mask.png\n    - The video must be downloaded from youtube with the package pytube\n    - ReadMe_download_a_youtube_video.txt (instruction to download the video)\n  - Test_Navizence\n    - [2018.07.04_Station_fixe_30m_sample.mp4](test/Test_Navizence/2018.07.04_Station_fixe_30m_sample.mp4)\n    - [test_opyf_Navizence.py](test/Test_Navizence/test_opyf_Navizence.py)\n\nOne test file performed on the [PIV challenge 2014 caseA](http://www.pivchallenge.org/pivchallenge4.html#case_a):\nThe results are compared to the main findings of the challenge:\n``-Kähler CJ, Astarita T, Vlachos PP, Sakakibara J, Hain R, Discetti S, Foy RL, Cierpka C, 2016, Main results of the 4th International PIV Challenge, Experiments in Fluids, 57: 97.''\n\nA test on synthetic images is still required.\n\n## Installation with anaconda\n\nThe package requires python and basic python package: csv, numpy, matplotlib, tqdm\n\nThe main dependencies are :\n\nOpenCV\nVTK\n\nThe code uses recent versions of VTK and openCV.\n\nIf the `pip install opyf` command above does not work for you, the simplest way to deal with incompatibilities is using miniconda or anaconda.\n\nWhen miniconda/anaconda is installed you may create an environment (here called *opyfenv*). To create the environment type in the terminal:\n\n```shell\nconda create -n opyfenv python=3.6 vtk opencv matplotlib scipy tqdm (spyder)\n```\n\nThis command line will install an environment with python 3.6 and the main dependencies.\n\nYou can access to your environment by typing:\n\n```shell\nsource activate opyfenv\n```\n\nFrom there, you should be able to install opyf with `pip install opyf`.\n\nFor python 3.7 you should use the *conda-forge* channel:\n\n```shell\nconda create -n opyfenv python=3.7 vtk opencv matplotlib scipy tqdm (spyder) --channel conda-forge\n```\n\nTested on:\nPython version: 3.6 and +\nVTK : 7.0.1 and +\nopencv : 3.2 and +\nnumpy: 1.17 and +\nmatplotlib : 2.0.0 and +\n\n## Citation\n\nThis package has been developed in the course of my PhD at EPFL to study [Turbulent flows over rough permeable beds](https://infoscience.epfl.ch/record/264790/files/EPFL_TH9327.pdf). Outputs are visible in the manuscript as well as in this [Video](https://www.youtube.com/watch?v=JmwE-kL0kTk) where paraview animations have been rendered thanks to opyf outputs.\n\n@PhdThesis{rousseau2019turbulent,\n  title={Turbulent flows over rough permeable beds in mountain rivers: Experimental insights and modeling},\n  author={Rousseau, Gauthier},\n  year={2019},\n  institution={EPFL}\n}\n\nAn article pubished in *Experiments in Fluids* is available in Open Access : [Scanning PIV of turbulent flows over and through rough porous beds using refractive index matching](https://link.springer.com/article/10.1007/s00348-020-02990-y)\n\nFollow this [link](https://link.springer.com/article/10.1007/s00348-020-02990-y#appendices) to directly access to the annex of the article presenting the opyf algorithms and tests.\n\n@article{rousseau2020scanning,\n  title={Scanning PIV of turbulent flows over and through rough porous beds using refractive index matching},\n  author={Rousseau, Gauthier and Ancey, Christophe},\n  journal={Experiments in Fluids},\n  volume={61},\n  number={8},\n  pages={1--24},\n  year={2020},\n  publisher={Springer}\n}\n\nContributors : Hugo Rousseau, Mohamed Nadeem, LHE team and others\n\nCredits for UAV video : Bob de Graffenried\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/groussea/opyflow",
    "keywords": "optical flow",
    "license": "GPL-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "opyf",
    "package_url": "https://pypi.org/project/opyf/",
    "platform": "",
    "project_url": "https://pypi.org/project/opyf/",
    "project_urls": {
      "Homepage": "https://github.com/groussea/opyflow"
    },
    "release_url": "https://pypi.org/project/opyf/1.3/",
    "requires_dist": [
      "ipython",
      "vtk",
      "opencv-python",
      "tqdm",
      "h5py",
      "matplotlib",
      "scipy",
      "pytube"
    ],
    "requires_python": "",
    "summary": "OpyFlow - Python package for Optical Flow measurements.",
    "version": "1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9034178,
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0edb4d2fa91282b8638a09e8efebc8addb815c69050497f1823fbbaa475ae19e",
          "md5": "0e250a0eeafb5206790e059981ffd69b",
          "sha256": "8bfe5f907e310fb084a3265d6a3ddbd302bb7d6a6c8d7a1e2392794fa5f2dc56"
        },
        "downloads": -1,
        "filename": "opyf-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e250a0eeafb5206790e059981ffd69b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 49968,
        "upload_time": "2020-04-28T09:56:15",
        "upload_time_iso_8601": "2020-04-28T09:56:15.817611Z",
        "url": "https://files.pythonhosted.org/packages/0e/db/4d2fa91282b8638a09e8efebc8addb815c69050497f1823fbbaa475ae19e/opyf-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28b90d38f4b980727dd3b1a6ead875f5eb6c01e7175603069a8cdeb80555ba5d",
          "md5": "38ae4f3e9efc137894f1a236ec184df1",
          "sha256": "b5be2d1d75258fc5d4b44834ef4fd53152b00373afd47e40cf6f856bca9bcda6"
        },
        "downloads": -1,
        "filename": "opyf-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "38ae4f3e9efc137894f1a236ec184df1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34699,
        "upload_time": "2020-04-28T09:56:18",
        "upload_time_iso_8601": "2020-04-28T09:56:18.393750Z",
        "url": "https://files.pythonhosted.org/packages/28/b9/0d38f4b980727dd3b1a6ead875f5eb6c01e7175603069a8cdeb80555ba5d/opyf-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0e76b566b544db095bdd05ef5076af0aa3992db6facafbd025f0293aac2a8d5",
          "md5": "1d46e02527b505016efa8f5b04642213",
          "sha256": "c2fa9529e7b80041f747f2f5d8a50e6956579bc8d6c5ae96b590f477dc92cc4c"
        },
        "downloads": -1,
        "filename": "opyf-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d46e02527b505016efa8f5b04642213",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 49998,
        "upload_time": "2020-04-28T13:11:33",
        "upload_time_iso_8601": "2020-04-28T13:11:33.230100Z",
        "url": "https://files.pythonhosted.org/packages/e0/e7/6b566b544db095bdd05ef5076af0aa3992db6facafbd025f0293aac2a8d5/opyf-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34936b02321903d30c3a921dacdfd4837c59d8809c0da4fb75d117351b04927f",
          "md5": "74ad7fdffef58ad9d7a77681a567a7c2",
          "sha256": "0c09c577cba42dce0398d6689ec6fb0ca2517b9a7ab6af032ec23ffab8271733"
        },
        "downloads": -1,
        "filename": "opyf-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "74ad7fdffef58ad9d7a77681a567a7c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34729,
        "upload_time": "2020-04-28T13:11:34",
        "upload_time_iso_8601": "2020-04-28T13:11:34.733282Z",
        "url": "https://files.pythonhosted.org/packages/34/93/6b02321903d30c3a921dacdfd4837c59d8809c0da4fb75d117351b04927f/opyf-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d531818267dd3b615a965c1925c39678b66072bea2342fb4e54b690f41f2baf",
          "md5": "8c57d22794e956f4e0d50bba12a8fcb1",
          "sha256": "018b3608a35a0ddd750bb0ec91dfdcece6fc936bba6499ac369532c5eb0a6bcb"
        },
        "downloads": -1,
        "filename": "opyf-1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c57d22794e956f4e0d50bba12a8fcb1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 52035,
        "upload_time": "2021-01-01T21:34:43",
        "upload_time_iso_8601": "2021-01-01T21:34:43.682460Z",
        "url": "https://files.pythonhosted.org/packages/5d/53/1818267dd3b615a965c1925c39678b66072bea2342fb4e54b690f41f2baf/opyf-1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f539cc0782c7a3cf88dfe82d8f28c58ff9d8c177b763efebf75b0afe2faa6c44",
          "md5": "e3325259d3acf4c9071cd8ab2c588a00",
          "sha256": "f1bbd5c66f18fefc10cea4f266b3a34a12251aed06eaf20e18af5f6eef69d0cb"
        },
        "downloads": -1,
        "filename": "opyf-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e3325259d3acf4c9071cd8ab2c588a00",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39864,
        "upload_time": "2021-01-01T21:34:46",
        "upload_time_iso_8601": "2021-01-01T21:34:46.417044Z",
        "url": "https://files.pythonhosted.org/packages/f5/39/cc0782c7a3cf88dfe82d8f28c58ff9d8c177b763efebf75b0afe2faa6c44/opyf-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5d531818267dd3b615a965c1925c39678b66072bea2342fb4e54b690f41f2baf",
        "md5": "8c57d22794e956f4e0d50bba12a8fcb1",
        "sha256": "018b3608a35a0ddd750bb0ec91dfdcece6fc936bba6499ac369532c5eb0a6bcb"
      },
      "downloads": -1,
      "filename": "opyf-1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8c57d22794e956f4e0d50bba12a8fcb1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 52035,
      "upload_time": "2021-01-01T21:34:43",
      "upload_time_iso_8601": "2021-01-01T21:34:43.682460Z",
      "url": "https://files.pythonhosted.org/packages/5d/53/1818267dd3b615a965c1925c39678b66072bea2342fb4e54b690f41f2baf/opyf-1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f539cc0782c7a3cf88dfe82d8f28c58ff9d8c177b763efebf75b0afe2faa6c44",
        "md5": "e3325259d3acf4c9071cd8ab2c588a00",
        "sha256": "f1bbd5c66f18fefc10cea4f266b3a34a12251aed06eaf20e18af5f6eef69d0cb"
      },
      "downloads": -1,
      "filename": "opyf-1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "e3325259d3acf4c9071cd8ab2c588a00",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 39864,
      "upload_time": "2021-01-01T21:34:46",
      "upload_time_iso_8601": "2021-01-01T21:34:46.417044Z",
      "url": "https://files.pythonhosted.org/packages/f5/39/cc0782c7a3cf88dfe82d8f28c58ff9d8c177b763efebf75b0afe2faa6c44/opyf-1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}