{
  "info": {
    "author": "Sean Redmond",
    "author_email": "github-smr@sneakemail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# juliandate\n\nSimple conversions between [Julian\nDates](https://en.wikipedia.org/wiki/Julian_day) and Julian/Gregorian\ncalendar dates, supporting ancient dates (BCE)\n\n## Installation\n\n    pip install juliandate\n    \n## Usage\n\n### Converting from Julian Date to Gregorian or Julian Calendar Date\n\nA Julian Date such as `2440423.345486` indicates the number of days\n(and fractional part) since noon January 1, 4713 BCE (Julian) or\nNovember 24, 4714 BCE (Gregorian), a system proposed by [Joseph\nScaliger](https://en.wikipedia.org/wiki/Joseph_Justus_Scaliger)\nin 1583. `2440423` is the number of full days, and the fractional\npart, `0.345486` indicates that a little more than a third of a day\nhas passed (since noon).\n\nTo convert this to a Gregorian calendar date:\n\n    >>> import juliandate as jd\n    >>> jd.to_gregorian(2440423.345139)\n\t(1969, 7, 20, 20, 17, 0, 9609)\n\t\nThe return value is tuple consisting of the year, month, day, hour (in\n24-hour format) minutes, seconds, and microseconds All are integers\nand the last value is rounded to the nearest microsecond. This value,\n`(1969, 7, 20, 20, 17, 0, 9609)`, means July 20, 1969 at 20:17 or 8:17\nPM (when Apollo 11 touched down on the moon). There is some\nimprecision in the seconds due to floating-point division.\n\nFor ancient dates, conversions to the [Julian\ncalendar](https://en.wikipedia.org/wiki/Julian_calendar) (and prior to\n8 CE the [Proleptic Julian\nCalendar](https://en.wikipedia.org/wiki/Proleptic_Julian_calendar))\nare supported.\n\n    >>> jd.to_julian(1705426)\n\t(-43, 3, 15, 12, 0, 0, 0)\n\t\nThe negative year indicates BCE. 1 BCE is 0, so -43 means 44 BCE, and\nthis value is March 15, 44 BCE (the Ides of March)\n\nNote that since there is no fractional part of a day in `1705426`,\nthis comes out to noon, the start of the Julian Day. If we add half a\nday or more, we will be into the next calendar day (March 16):\n\n    >>> jd.to_julian(1705426.5)\n\t(-43, 3, 16, 0, 0, 0.0)\n\t\nConversions to the [Proleptic Gregorian\nCalendar](https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar)\nwork as well. The Julian calendar date March 15, 44 BCE corresponds to\na Gregorian Calendar date of March 13:\n\n    >>> jd.to_gregorian(1705426)\n\t(-43, 3, 13, 12, 0, 0)\n\t\n\t\n### Converting from Gregorian or Julian Calendar Date to Julian Date\n\nThe reverse functions are:\n\n    >>> jd.from_gregorian(1969, 7, 20, 20, 17, 0, 0)\n    2440423.345138889\n\t\n\t>>> jd.from_julian(-43, 3, 15, 0, 0, 0, 0)\n\t1705425.5\n\t\nHours, minutes, seconds, and microseconds are optional so that latter could be:\n\n\t>>> jd.from_julian(-43, 3, 15)\n\t1705425.5\n\n## The \"Astronomical\" Day\n\nJulian dates begin at noon, the start of the [astronomical\nday](https://en.wikipedia.org/wiki/Astronomical_day). This can lead to\nsome confusion since a calendar day, such as March 15 44 BCE, runs\nfrom 1705425.5 (inclusive) to 1705426.5 (exclusive).\n\n\t# Midnight\n    >>> jd.to_julian(1705425.5) \n\t(-43, 3, 15, 0, 0, 0, 0)\n\n\t# 6 AM\n    >>> jd.to_julian(1705425.75)\n    (-43, 3, 15, 6, 0, 0, 0)\n\t\n\t# Noon\n\t>>> jd.to_julian(1705426)\n\t(-43, 3, 15, 12, 0, 0, 0)\n\t\n\t# 9 PM\n\t>>> jd.to_julian(1705426.25)\n    (-43, 3, 15, 18, 0, 0, 0)\n\t\n\t# Midnight, next calendar day\n    >>> jd.to_julian(1705426.5)\n    (-43, 3, 16, 0, 0, 0, 0)\n\t\nIf all you care about is the calendar day, add 0.5 to the Julian Date\nand take the integral part. This will return noon of the calendar\nday. For example:\n\n\t# 6 AM\n\t>>> jd.to_julian(int(1705425.75 + 0.5))\n\t(-43, 3, 15, 12, 0, 0)\t\n\t\n\t# Noon\n\t>>> jd.to_julian(int(1705426 + 0.5))\n\t(-43, 3, 15, 12, 0, 0)\n\t\n\t# 9 PM\n\t>>> jd.to_julian(int(1705426.25 + 0.5))\n\t(-43, 3, 15, 12, 0, 0)\n\t\n## No `datetime` Objects\n\n`juliandate` does not use Python `datetime` objects because these do\nnot support dates before 1 CE. Any date that _can_ be represented as a\nPython `datetime` can easily be converted:\n\n    >>> import juliandate as jd\n\t>>> from datetime import datetime\n\t>>> datetime(*jd.to_gregorian(2440423.345139))\n\tdatetime.datetime(1969, 7, 20, 20, 17, 0, 9609)\n\t\n\t\n## Imprecision\n\nAs noted above, floating-point math causes some imprecision in the\nseconds and microseconds. This is unavoidable since 24ths and 60ths\ndon't divide equally. This round-trip, for instance, ends up being off\nby 7 microseconds. Take care if this is important.\n\n    >>> jd.to_gregorian(jd.from_gregorian(1969, 7, 20, 20, 17))\n    (1969, 7, 20, 20, 16, 59, 999993)\n\t\nYou can check `juliandate`'s calculations against the US Naval\nObserveratory's [Julian Date\nConverter](https://aa.usno.navy.mil/data/JulianDate).\n\t\n## Command Line Script\n\n`juliandate` comes with a command-line script `jd` for converting Juliand Days\n\n    $ jd 1705426.25\n    -43, 3, 13, 18, 0, 0, 0\n\t\nUse `jd -h` for more usage details.\n\n## Contributing\n\nBug reports and pull requests are welcome on GitHub at\nhttps://github.com/seanredmond/juliandate\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/seanredmond/juliandate",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "juliandate",
    "package_url": "https://pypi.org/project/juliandate/",
    "platform": null,
    "project_url": "https://pypi.org/project/juliandate/",
    "project_urls": {
      "Bug Tracker": "https://github.com/seanredmond/juliandate/issues",
      "Homepage": "https://github.com/seanredmond/juliandate"
    },
    "release_url": "https://pypi.org/project/juliandate/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Julian date conversions",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15901368,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54fbe7e25c858c0e02cad2a7167c42254b5c08324d3765b170c735e06099d715",
          "md5": "ee592bc69029c18e414e522c9f9110c4",
          "sha256": "6571016bad8c6cee5613d5a9882db656a25575d3a2b42abc339ac914b116a781"
        },
        "downloads": -1,
        "filename": "juliandate-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ee592bc69029c18e414e522c9f9110c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 17702,
        "upload_time": "2022-02-15T23:24:18",
        "upload_time_iso_8601": "2022-02-15T23:24:18.551813Z",
        "url": "https://files.pythonhosted.org/packages/54/fb/e7e25c858c0e02cad2a7167c42254b5c08324d3765b170c735e06099d715/juliandate-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34ea665721ffdae44e35e1ac694a6b65ae99a8c5700c7af827461544ae2620e5",
          "md5": "1c369f71d890b16eff5866f8e809b79f",
          "sha256": "79ead208cdea32f80e72ab9f0a04488cbaf7cb2c1b9782ffeb730df4c6e6f9f1"
        },
        "downloads": -1,
        "filename": "juliandate-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1c369f71d890b16eff5866f8e809b79f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16875,
        "upload_time": "2022-02-15T23:24:20",
        "upload_time_iso_8601": "2022-02-15T23:24:20.146072Z",
        "url": "https://files.pythonhosted.org/packages/34/ea/665721ffdae44e35e1ac694a6b65ae99a8c5700c7af827461544ae2620e5/juliandate-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ef4fe90274604c2bd855b8316978e15626eb27eed09804a2565a8c1b6f06d15",
          "md5": "ede2b9a806f737e9426ad17fa5f723fb",
          "sha256": "54137f210befdacfef4ded4627e0ce5cc43d960a521385d7cc5255248a96959b"
        },
        "downloads": -1,
        "filename": "juliandate-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ede2b9a806f737e9426ad17fa5f723fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 17683,
        "upload_time": "2022-11-27T03:20:41",
        "upload_time_iso_8601": "2022-11-27T03:20:41.057895Z",
        "url": "https://files.pythonhosted.org/packages/7e/f4/fe90274604c2bd855b8316978e15626eb27eed09804a2565a8c1b6f06d15/juliandate-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57e64abbc0ffd4f35214fb4c126a5e0cafa958cc3d607b455a2bf0ecc83af3ff",
          "md5": "abf3cd16c93d9ca168e75da6232947b2",
          "sha256": "549aeae946a50d61eae421de1624f463d2170ae96dae24b4bb5cc5232fa675ae"
        },
        "downloads": -1,
        "filename": "juliandate-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "abf3cd16c93d9ca168e75da6232947b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16945,
        "upload_time": "2022-11-27T03:20:42",
        "upload_time_iso_8601": "2022-11-27T03:20:42.881933Z",
        "url": "https://files.pythonhosted.org/packages/57/e6/4abbc0ffd4f35214fb4c126a5e0cafa958cc3d607b455a2bf0ecc83af3ff/juliandate-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7ef4fe90274604c2bd855b8316978e15626eb27eed09804a2565a8c1b6f06d15",
        "md5": "ede2b9a806f737e9426ad17fa5f723fb",
        "sha256": "54137f210befdacfef4ded4627e0ce5cc43d960a521385d7cc5255248a96959b"
      },
      "downloads": -1,
      "filename": "juliandate-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ede2b9a806f737e9426ad17fa5f723fb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 17683,
      "upload_time": "2022-11-27T03:20:41",
      "upload_time_iso_8601": "2022-11-27T03:20:41.057895Z",
      "url": "https://files.pythonhosted.org/packages/7e/f4/fe90274604c2bd855b8316978e15626eb27eed09804a2565a8c1b6f06d15/juliandate-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "57e64abbc0ffd4f35214fb4c126a5e0cafa958cc3d607b455a2bf0ecc83af3ff",
        "md5": "abf3cd16c93d9ca168e75da6232947b2",
        "sha256": "549aeae946a50d61eae421de1624f463d2170ae96dae24b4bb5cc5232fa675ae"
      },
      "downloads": -1,
      "filename": "juliandate-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "abf3cd16c93d9ca168e75da6232947b2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 16945,
      "upload_time": "2022-11-27T03:20:42",
      "upload_time_iso_8601": "2022-11-27T03:20:42.881933Z",
      "url": "https://files.pythonhosted.org/packages/57/e6/4abbc0ffd4f35214fb4c126a5e0cafa958cc3d607b455a2bf0ecc83af3ff/juliandate-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}