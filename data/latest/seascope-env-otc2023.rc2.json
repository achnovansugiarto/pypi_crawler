{
  "info": {
    "author": "Sylvain Herl√©dan",
    "author_email": "sylvain.herledan@oceandatalab.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "During the interactive lectures of the OTC 2023 shore-based course, you will\nneed to install tools and libraries for reading, processing and visualizing\ndata.\n\nAmong these tools are the SEAScope viewer and the associated Python packages:\nthese instructions will only cover the installation of the Python packages as\nthe installation of the SEAScope viewer is already documented on the\n`SEAScope website`_ and illustrated in `Youtube videos`_.\n\nSEAScope Python packages depend on software components (shared libraries, other\nPython packages, etc...) that may already be installed on your system but could\neither be too old or too recent. Replacing these software components by a\nversion compatible with the SEAScope Python packages could break other\napplications on your system, but keeping the currently installed versions would\nprevent you from installing the SEAScope Python packages required for the\ninteractive lectures.\nFortunately, Python virtual environments come to our rescue!\n\nA Python virtual environment is simply an isolated context where you will be\nable to install Python packages without interfering with the software\ncomponents installed on your main system, thus avoiding the aforementioned\nconflicts with other applications. You can think of it as a sandbox where you\ncan install and test Python things without breaking your system.\n\nWhen you open a brand new terminal, the Python environment is the one installed\non your system (so, not a **virtual** environment) and the Python modules that\nyou import from a Python prompt are the same as the ones used by the\napplications installed on your system.\n\nOn the other, when you open a new terminal and activate a Python virtual\nenvironment (i.e. you are **in** the isolated context), the Python modules that\nyou import from a Python prompt come (almost) exclusively from packages that\nyou installed in the virtual environment (i.e. while the Python virtual\nenvironment was active).\n\n\nRequirements\n============\n\n- Latest version of the SEAScope viewer\n- Python version 3.7 or above\n- Network connection for downloading packages\n\nTo check the version installed on you system, you can open a terminal and type:\n\n.. code:: bash\n\n   python --version\n\nPlease note that if both Python 2 and Python 3 are installed on your system,\nyou may need to use ``python3`` instead of ``python``\n\nIf Python is not installed on your system:\n\n- on Linux you should use the package manager that handles your system (apt,\n  yum, pacman, ...).\n\n- on macOS we recommend using `brew`_:\n\n  .. code:: bash\n\n     brew install python\n\n- on Windows we recommend to install `Miniconda`_.\n\nFor macOS users there is an additional requirement: you need to install the\n``proj`` software if it is not already available on your system. Here again we\nrecommend using `brew`_ for the installation:\n\n.. code:: bash\n\n   brew install proj\n\nInstallation\n============\n\n1. First you need to start the SEAScope viewer and leave it open so we can\n   check that everything is working at the end of the installation process.\n\n2. Next open a terminal where the ``python`` (or ``python3``) command is\n   available.\n\n   On Windows it could mean clicking on the `Anaconda Prompt` item in the\n   applications list of Windows start menu.\n\n3. Then you need to go to the directory that SEAScope uses as workspace using\n   the ``cd`` (a.k.a. change directory) command.\n\n   On Linux and on Windows, this is the directory named **seascope** that you\n   extracted from the tar.gz or zip archive.\n\n   On macOS, this is the **SEAScope-workspace** directory that can be found in\n   your user's home.\n\n4. Once you are inside the SEAScope workspace directory, list its content with\n   the ``ls`` command (you might need to use ``dir`` instead on older versions\n   of Windows).\n\n   Make sure that the listing contains a subfolder named **colormaps** and a\n   file named **state.db**. If they are not listed, then you are probably not\n   in the expected directory and you should look for another location on your\n   hard disk. Also please make sure that you started the SEAScope viewer (step\n   1.) otherwise the workspace directory may not exist yet.\n\n   Now that you are in the SEAScope workspace directory, you can use the\n   following command to create a Python virtual environment named\n   **otc2023_env** where we will install the packages that we need to interact\n   with SEAScope:\n\n   .. code:: bash\n\n      python -m venv otc2023_env  # or python3\n\n5. In order for packages to be installed **inside** the isolated context\n   instead of the main system, we need to activate environment. To do so,\n   execute the following command:\n\n   - Linux and macOS\n\n     .. code:: bash\n\n        source otc2023_env/bin/activate\n\n     If you are using ``csh``, use the following instead:\n\n     .. code:: bash\n\n        source otc2023_env/bin/activate.csh\n\n   - Windows\n\n     .. code:: Batch\n\n       otc2023_env\\Scripts\\activate\n\n   You should see that your terminal prompt now starts with **(otc2023_env)**.\n\n      IMPORTANT\n      During the interactive lectures based on SEAScope, make sure that your\n      terminal prompt starts with this prefix otherwise it means that your are\n      using your system environment instead of the isolated context: in that\n      case execute the \"activate\" command (see 5. above) because following the\n      SEAScope-based lectures while using the system environment will fail\n      (Python packages impossible to import, missing commands, etc...).\n\n6. Now that we are in the Python virtual environment, we can start to install\n   new (or alternative versions of) packages without messing with the rest of\n   the operating system.\n\n   .. code:: bash\n\n      python -m pip install --upgrade pip\n      python -m pip install --upgrade setuptools\n      python -m pip install SEAScope-env-OTC2023\n   ..\n\n      The behavior of ``pip`` changed in recent versions, leading to a very\n      long installation process which ends up with an error when it tries to\n      build some packages. You can restore the old behavior by adding the\n      ``--use-deprecated=legacy-resolver`` option when installing the\n      ``SEAScope-env-OTC2023`` package:\n\n      .. code:: bash\n\n         python -m pip install --use-deprecated=legacy-resolver SEAScope-env-OTC2023 \n\n   It should download and install many packages, make sure that there is no\n   error message at the end. If it fails and you cannot fix the problem by\n   yourself, please copy the error message and send it to us by email with as\n   many details as possible (operating system, Python version, how you\n   installed Python, etc...) at <support-otc2023@oceandatalab.com>.\n\n7. Almost done! The last step is to check that everything is working correctly.\n   All you need to do is to execute the following command while the SEAScope\n   viewer is running (remember step 1.):\n\n   .. code:: bash\n\n      otc2023-check-environment\n\n   It might take some time depending on your computer but at the end it should\n   open a Jupyter notebook in your web browser. Please follow the instructions\n   mentioned in the notebook to determine whether or not the tests were\n   successful.\n\n      In case the ``otc2023-check-environment`` command is not available\n      although all the previous steps have been completed successfully, you\n      may need to refresh the list of available executables by executing the\n      ``rehash`` or ``hash`` command in your terminal on Linux.\n\n8. Close the notebook in your web browser. You can also stop the SEAScope\n   viewer and close your terminal.\n\n   You're ready for the interactive lectures! :)\n\n.. _SEAScope website: https://seascope.oceandatalab.com\n.. _Youtube videos: https://youtube.com/playlist?list=PL_Nrq3gZvmM_C8baJBiNEzMjg0Hg7FIgK\n.. _brew: https://brew.sh/\n.. _Miniconda: https://docs.conda.io/en/latest/miniconda.html\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.org/project/SEAScope-env-OTC2023/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "SEAScope-env-OTC2023",
    "package_url": "https://pypi.org/project/SEAScope-env-OTC2023/",
    "platform": null,
    "project_url": "https://pypi.org/project/SEAScope-env-OTC2023/",
    "project_urls": {
      "Homepage": "https://oceantrainingcourse2023.esa.int/",
      "Issues": "https://forum.oceandatalab.com/seascope"
    },
    "release_url": "https://pypi.org/project/SEAScope-env-OTC2023/1.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Helper for installing the Python environment for the OTC 2023 interactive lectures based on SEAScope",
    "version": "1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16995643,
  "releases": {
    "1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca505fcf6223393cdf2ced8729b2d88ab2102f3c9eb27cd7dc038ecad7d76e90",
          "md5": "2c441a38cec35b788bfbf30aea20b2e6",
          "sha256": "e189aace84593605bfac65a87dd8ff621d7b037e4108cc5ee42bdae12bbc45a6"
        },
        "downloads": -1,
        "filename": "SEAScope-env-OTC2023-1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2c441a38cec35b788bfbf30aea20b2e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26647,
        "upload_time": "2022-09-10T16:09:51",
        "upload_time_iso_8601": "2022-09-10T16:09:51.364026Z",
        "url": "https://files.pythonhosted.org/packages/ca/50/5fcf6223393cdf2ced8729b2d88ab2102f3c9eb27cd7dc038ecad7d76e90/SEAScope-env-OTC2023-1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3715194b8364cf1946722882fbb2ec6af5b06f9502579e798ef8637daecb7ec5",
          "md5": "91efd187f56f87f6e3760eb9dd8b3990",
          "sha256": "bef1a43ebc93e952cd6a0dcc1640d85f4e2efb89af1b0d597a62bcf7cafc4fb0"
        },
        "downloads": -1,
        "filename": "SEAScope-env-OTC2023-1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "91efd187f56f87f6e3760eb9dd8b3990",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26990,
        "upload_time": "2023-02-23T16:23:18",
        "upload_time_iso_8601": "2023-02-23T16:23:18.096916Z",
        "url": "https://files.pythonhosted.org/packages/37/15/194b8364cf1946722882fbb2ec6af5b06f9502579e798ef8637daecb7ec5/SEAScope-env-OTC2023-1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3715194b8364cf1946722882fbb2ec6af5b06f9502579e798ef8637daecb7ec5",
        "md5": "91efd187f56f87f6e3760eb9dd8b3990",
        "sha256": "bef1a43ebc93e952cd6a0dcc1640d85f4e2efb89af1b0d597a62bcf7cafc4fb0"
      },
      "downloads": -1,
      "filename": "SEAScope-env-OTC2023-1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "91efd187f56f87f6e3760eb9dd8b3990",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26990,
      "upload_time": "2023-02-23T16:23:18",
      "upload_time_iso_8601": "2023-02-23T16:23:18.096916Z",
      "url": "https://files.pythonhosted.org/packages/37/15/194b8364cf1946722882fbb2ec6af5b06f9502579e798ef8637daecb7ec5/SEAScope-env-OTC2023-1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}