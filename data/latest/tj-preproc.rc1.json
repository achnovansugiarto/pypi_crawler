{
  "info": {
    "author": "Tariq Jamil",
    "author_email": "tariqjamil.bwp@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "This package is all in one text preprocessing pipeline and takes text input in the form of pandas series and outputs as pandas series object.\n\n**All the text_processing sub-functions may be viewed here**\nhttps://github.com/tariqjamil-bwp/pypi_projects/tree/main/tj_nlp\n\n\n**Installing:**\npip install tj_preproc\n\n**Usage:** (by example)\n* from tj_text.tj_preproc import text_preprocessing_ds, text_preprocessing\n* df2 = df1.copy()\n* df2['input_data'] = text_preprocessing_ds(df2['Phrase'])\n\n*Note:* It will not work with .apply(text_....) method, as .apply is item by item processing which may not be optimized at dataframe level.\n\n\n**Details**:\n\n**text_preprocessing_ds(pdSeries)**\nIt has a variety of input flags, controlling the appropritae text preprocessing activity, and are by default set to True.\nThe details of flags is as under:\n\n** The function is optimized to take advantage of the multi threaded processors **\n\n**Arguments:**\n1. *pdSeries*: A positional argument, of pandas series object type, and should contain text phrases to be preprocessed\n\n    \n** All following arguments are key-word type ** \n\n 2. *NewLine removal*:\n    Parameter: 'newlines_tabs'\n    This setting when enablesd causes the function to remove all the occurrences of newlines, tabs, and combinations like: \\\\n, \\\\.\n    \n    * Example:\n      * Input : This is her \\\\ first day at this place.\\n Please,\\t Be nice to her.\\\\n\n      * Output : This is her first day at this place. Please, Be nice to her. \n    \n\n3. *HTML Tags removal*:\n    Parameter: 'remove_html'\n    This setting when enablesd causes the function to remove all the occurrences of html tags from the text.\n    \n    * Example:\n      * Input : This is a nice place to live. \n      * Output : This is a nice place to live.  \n    \n\n4. *Hyper Links removal*:\n    This setting when enablesd causes the function to remove all the occurrences of links.\n    Parameter: 'links'\n\n    * Example:\n      * Input : To know more about cats and food & website: catster.com  visit: https://catster.com//how-to-feed-cats\n      * Output : To know more about cats and food & website: visit:     \n    \n\n5. *Removing extra white spaces:*\n    Parameter: 'extra_whitespace' \n    This setting when enablesd causes the function to remove extra whitespaces from the text\n        \n    * Example:\n      * Input : How   are   you   doing   ?\n      * Output : How are you doing ?     \n\n    \n6. *Accented Characters Removal*:\n    Parameter: 'accented_chars' \n    This setting when enablesd causes the function to remove accented characters from the text contained within the Dataset.\n               \n    * Example:\n      * Input : Málaga, àéêöhello\n      * Output : Malaga, aeeohello    \n\n\n7. *Lower Casing*:\n    Parameter: 'lowercase'\n    This setting when enablesd causes the function to convert text into lower case.\n             \n    * Example:\n      * Input : The World is Full of Surprises!\n      * Output : the world is full of surprises!\n    \n\n8. *Removing Character Repetitions*:\n    Parameter: 'repeatition'\n    This setting when enablesd causes the function to reduce repeatition to two characters for alphabets and to one character for punctuations.\n            \n    * Example:\n      * Input : Realllllllllyyyyy,        Greeeeaaaatttt   !!!!?....;;;;:)\n      * Output : Reallyy, Greeaatt !?.;:)\n    \n    \n9. *Expand Contractions*:\n    Parameter: 'contractions'\n    This setting when enablesd causes the function to expand shortened words to the actual form.\n       e.g. don't to do not\n    \n     * Example: \n       * Input : ain't, aren't, can't, cause, can't've\n       * Output :  is not, are not, cannot, because, cannot have \n\n\n10. *Removing Special Characters*:\n    Parameter: 'special_chars'\n    This setting when enablesd causes the function to remove all the special characters except a preset list of characters as they have imp meaning in  the text provided.\n       \n    * Example: \n      * Input : Hello, T-a-r-i-q. Thi*s is $100.05 : the payment that you will recieve! (Is this okay?) \n      * Output :  Hello, Tariq. This is $100.05 : the payment that you will recieve! Is this okay?\n       \n\n11. *Removong Stop Words*:\n    Parameter: 'stop_words'\n    This setting when enablesd causes the function to remove the stopwords which doesn't add much meaning to a sentence \n    & they can be remove safely without comprimising meaning of the sentence.\n            \n    * Example: \n      * Input : This is Tariq from karachi who came here to study.\n      * Output : [\"'This\", 'Tariq', 'karachi', 'came', 'study', '.', \"'\"] \n\n\n12. *Mis-spelled words Correction*:\n    Parameter: 'mis_spell'\n    This setting when enablesd causes the function to correct spellings. Currently only English language is supported.\n \n    * Example: \n      * Input : This is OAkbar from Londn who came heree to studdy.\n      * Output : This is Akbar from London who came here to study.\n      \n\n13. *Lamentization*:\n    Parameters: 'lemmatization_allow'\n    This setting when enablesd causes the function to converts word to their root words without explicitely cut down as done in stemming.\n            \n    * Example: \n      * Input : text reduced \n      * Output :  text reduce\n\n\n--------------------------------------------------------------------------------------------------------------------------------------------------\n**The unoptimized function also made part of the package for comparison purposes **text_preprocessing(text)**\nIt accepts text string as parameter and therefore requires .apply method to operate or looping if needs selective preprocessing.\nIt accepts same other (2-13) parameters as above.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pypi_projects/tj_nlp/",
    "keywords": "tjtext_preproc_ds",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tj-preproc",
    "package_url": "https://pypi.org/project/tj-preproc/",
    "platform": null,
    "project_url": "https://pypi.org/project/tj-preproc/",
    "project_urls": {
      "Bug Tracker": "https://github.com/tariqjamil-bwp/pypi_projects/issues",
      "Homepage": "https://github.com/pypi_projects/tj_nlp/",
      "repository": "https://github.com/tariqjamil-bwp/pypi_projects/tree/main/tj_nlp"
    },
    "release_url": "https://pypi.org/project/tj-preproc/0.0.3/",
    "requires_dist": [
      "unidecode",
      "nltk",
      "autocorrect",
      "bs4",
      "pandas",
      "numpy",
      "tqdm"
    ],
    "requires_python": ">=3.6",
    "summary": "An NLP Text Preprocessing Package",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16287857,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ef6fe9fd4825d62cdbef395c461ae50cc5ba6378008c11ef0c8d85cfd2cc79d",
          "md5": "f89be90441ee8b796c9ca5e9bfca4f15",
          "sha256": "fc00872c5a8f358f8bd31b6035c74dd4e75a1480deaf95cd8efb5d40d47d1ef3"
        },
        "downloads": -1,
        "filename": "tj_preproc-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f89be90441ee8b796c9ca5e9bfca4f15",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9502,
        "upload_time": "2023-01-02T21:01:07",
        "upload_time_iso_8601": "2023-01-02T21:01:07.219784Z",
        "url": "https://files.pythonhosted.org/packages/1e/f6/fe9fd4825d62cdbef395c461ae50cc5ba6378008c11ef0c8d85cfd2cc79d/tj_preproc-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cffb418cebada010e8ccc0911205611a3e73f5a1ecb8a5304ace27724558cc4d",
          "md5": "f5b296716faa74a0062892f089d75726",
          "sha256": "b7a9def29a0131d20625073e80291bc8e6ded7c86ef7cd71db89db495a992291"
        },
        "downloads": -1,
        "filename": "tj_preproc-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f5b296716faa74a0062892f089d75726",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8836,
        "upload_time": "2023-01-02T21:01:09",
        "upload_time_iso_8601": "2023-01-02T21:01:09.105788Z",
        "url": "https://files.pythonhosted.org/packages/cf/fb/418cebada010e8ccc0911205611a3e73f5a1ecb8a5304ace27724558cc4d/tj_preproc-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ef6fe9fd4825d62cdbef395c461ae50cc5ba6378008c11ef0c8d85cfd2cc79d",
        "md5": "f89be90441ee8b796c9ca5e9bfca4f15",
        "sha256": "fc00872c5a8f358f8bd31b6035c74dd4e75a1480deaf95cd8efb5d40d47d1ef3"
      },
      "downloads": -1,
      "filename": "tj_preproc-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f89be90441ee8b796c9ca5e9bfca4f15",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9502,
      "upload_time": "2023-01-02T21:01:07",
      "upload_time_iso_8601": "2023-01-02T21:01:07.219784Z",
      "url": "https://files.pythonhosted.org/packages/1e/f6/fe9fd4825d62cdbef395c461ae50cc5ba6378008c11ef0c8d85cfd2cc79d/tj_preproc-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cffb418cebada010e8ccc0911205611a3e73f5a1ecb8a5304ace27724558cc4d",
        "md5": "f5b296716faa74a0062892f089d75726",
        "sha256": "b7a9def29a0131d20625073e80291bc8e6ded7c86ef7cd71db89db495a992291"
      },
      "downloads": -1,
      "filename": "tj_preproc-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "f5b296716faa74a0062892f089d75726",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8836,
      "upload_time": "2023-01-02T21:01:09",
      "upload_time_iso_8601": "2023-01-02T21:01:09.105788Z",
      "url": "https://files.pythonhosted.org/packages/cf/fb/418cebada010e8ccc0911205611a3e73f5a1ecb8a5304ace27724558cc4d/tj_preproc-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}