{
  "info": {
    "author": "Martin Bammer",
    "author_email": "mrbm74@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "An efficient and feature-rich logging module\n============================================\n\n.. role:: Python(code)\n   :language: Python\n\nThe ``fastlogging`` module is a faster replacement of the standard logging module with a mostly compatible API.\n\nIt comes with the following features:\n\n - (colored, if colorama is installed) logging to console\n - logging to file (maximum file size with rotating/history feature can be configured)\n - old log files can be compressed (the compression algorithm can be configured)\n - count same successive messages within a 30s time frame and log only once the message with the counted value.\n - log domains\n - log to different files\n - writing to log files is done in (per file) background threads, if configured\n - configure callback function for custom detection of same successive log messages\n - configure callback function for custom message formatter\n - configure callback function for custom log writer\n\nThe API is described `here <doc/API.rst>`_.\n\nInstallation\n------------\n\nSimply run\n\n.. code-block:: Python\n\n    python setup.py install --user\n\nor create a wheel and install it.\n\n.. code-block:: Python\n\n    python setup.py bdist_wheel\n\nAn optimized version of ``fastlogging`` will be installed if package **cython** is installed.\nIf you need a pure python version of the ``fastlogging`` module then add option **nocython**.\n\nUsage\n-----\n\n.. code-block:: Python\n\n    from fastlogging import LogInit\n\n    logger = LogInit(pathName=\"/tmp/example1.log\", console=True, colors=True)\n    logger.debug(\"This is a debug message.\")\n    logger.info(\"This is an info message.\")\n    logger.warning(\"This is a warning message.\")\n    logger.rotate()\n    logger.fatal(\"This is a fatal message.\")\n    logger.shutdown()\n\nThe example above writes all messages to a file and to the console. On the console the messages are printed\nwith colors. With the rotate call the log file is renamed to `example1.log.1` and a new log file is created.\n\nThe second example creates a server socket on localhost and writes all messages to a log file for 15 seconds.\n\n.. code-block:: Python\n\n    import os\n    import time\n\n    from fastlogging import LogInit\n\n    addr = \"127.0.0.1\"\n    port = 12345\n    pathName = \"C:/temp/server.log\" if os.name == 'nt' else \"/tmp/server.log\"\n    logger = LogInit(pathName=pathName, server=(addr, port))\n    logger.info(\"Logging started.\")\n    logger.debug(\"This is a debug message.\")\n    logger.info(\"This is an info message.\")\n    logger.warning(\"This is a warning message.\")\n    time.sleep(15)\n    logger.info(\"Shutdown logging.\")\n    logger.shutdown()\n\n\nAnd now the third example connects to the log server and sends 300000 messages.\n\n.. code-block:: Python\n\n    import os\n    import time\n\n    from fastlogging import LogInit\n\n    addr = \"127.0.0.1\"\n    port = 12345\n    logger = LogInit(connect=(addr, port, \"HELLO%d\" % os.getpid()))\n    for i in range(100000):\n        logger.debug(\"This is a DBG message %d.\" % i)\n        logger.info(\"This is an INF message %d.\" % i)\n        logger.warning(\"This is a WRN message %d.\" % i)\n    time.sleep(10.0)\n    logger.shutdown()\n\nThe messages are sent in blocks to improve speed.\n\nOptimizing for speed\n--------------------\n\nAs you can see in the charts below fastlogging is much faster than the default logging module which comes\nwith Python (red bar).\n\nYou also can see that using threads can be slower than writing logs directly to the\nfile, because of additional overhead. So threads should only be used if you've got a slow disk and lot's of\nmessages to log.\n\nThere are 3 more bars which show even better performance. To understand the optimizations a deeper look into\na logging line has to be done.\n\nLet's analyze what is going on when the following code line is executed:\n\n.. code-block:: Python\n\n    logger.debug(\"This is a debug message.\")\n\nThe Python interpreter first creates a tuple for the positioned arguments and a dictionary for the named\narguments. Then it calls method ``info``. In method ``info`` the log level is checked against the severity.\nOnly if the severity is high enough the message will be logged.\n\nNow what if we set a **if** before the above line?\n\n.. code-block:: Python\n\n    if logger.level <= DEBUG:\n        logger.debug(\"This is a debug message.\")\n\nRunning benchmarks will show us that the code runs faster now if the log level is higher than DEBUG.\nNormally we need debug messages only in case of development or bugfixing. So it makes sense to optimize\nsuch lines. But doing this manually is awkward and bloats the code.\n\nTo simplify this task the ``fastlogging`` module comes with an `AST optimizer <doc/Optimize.rst>`_ which does the work for you.\n\n\nBenchmarks\n----------\n\nThe following benchmarks were measured on Ubuntu 18.10 with a Ryzen 7 CPU and an SSD.\n\nYou can see that ``fastlogging`` is **~5x** faster when rotating is disabled and **>13x** faster in case of log rotating.\n\n\n\n.. figure:: doc/benchmarks/log.png\n\n   Benchmark results with a single log files\n\n.. figure:: doc/benchmarks/rotate.png\n\n   Benchmark results with rotating log files\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/RailYakup/fastlogging/releases/download/1.0.2/fastlogging-1.0.2.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RailYakup/fastlogging",
    "keywords": "fast logging",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fast-logging",
    "package_url": "https://pypi.org/project/fast-logging/",
    "platform": "",
    "project_url": "https://pypi.org/project/fast-logging/",
    "project_urls": {
      "Download": "https://github.com/RailYakup/fastlogging/releases/download/1.0.2/fastlogging-1.0.2.tar.gz",
      "Homepage": "https://github.com/RailYakup/fastlogging"
    },
    "release_url": "https://pypi.org/project/fast-logging/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A faster replacement of the standard logging module.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10823835,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afba1cfcbb6252518657709526f95deb57515dbb37eda0d6af537866ee094ae2",
          "md5": "cd0b04a7e8a7a70732695bf7f1f60e40",
          "sha256": "ad6dbb679d82023d0e90d526dde16eae661b23a0ac426ac8217ce6d32a808ef8"
        },
        "downloads": -1,
        "filename": "fast-logging-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cd0b04a7e8a7a70732695bf7f1f60e40",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17216,
        "upload_time": "2021-07-04T18:40:37",
        "upload_time_iso_8601": "2021-07-04T18:40:37.824622Z",
        "url": "https://files.pythonhosted.org/packages/af/ba/1cfcbb6252518657709526f95deb57515dbb37eda0d6af537866ee094ae2/fast-logging-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39c2119b73f467e633ce86767647cc6826452ad1249a8b2f1ca18002b0b5232e",
          "md5": "7978fce17dce4bf8ee66d4eb2702e604",
          "sha256": "722c9cc69441c154f54221bedc70391419077cf6cba4dedee005655de9e807f5"
        },
        "downloads": -1,
        "filename": "fast_logging-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7978fce17dce4bf8ee66d4eb2702e604",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15766,
        "upload_time": "2021-07-05T07:36:19",
        "upload_time_iso_8601": "2021-07-05T07:36:19.244140Z",
        "url": "https://files.pythonhosted.org/packages/39/c2/119b73f467e633ce86767647cc6826452ad1249a8b2f1ca18002b0b5232e/fast_logging-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "39c2119b73f467e633ce86767647cc6826452ad1249a8b2f1ca18002b0b5232e",
        "md5": "7978fce17dce4bf8ee66d4eb2702e604",
        "sha256": "722c9cc69441c154f54221bedc70391419077cf6cba4dedee005655de9e807f5"
      },
      "downloads": -1,
      "filename": "fast_logging-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7978fce17dce4bf8ee66d4eb2702e604",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15766,
      "upload_time": "2021-07-05T07:36:19",
      "upload_time_iso_8601": "2021-07-05T07:36:19.244140Z",
      "url": "https://files.pythonhosted.org/packages/39/c2/119b73f467e633ce86767647cc6826452ad1249a8b2f1ca18002b0b5232e/fast_logging-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}