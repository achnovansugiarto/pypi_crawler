{
  "info": {
    "author": "mvlnetdev",
    "author_email": "maartenvanleeuwen1996@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Python client for PhotoPrism \nA Python client to interact with photoprism.\n\n## IMPORTANT\nThis Python client is build on the undocumented API of PhotoPrism. There may be bugs in there. Please let me know if you find some. \n\nCurrently tested on the [version of the 17th of June 2022](https://github.com/photoprism/photoprism/releases/tag/220617-0402b8d3). It will probably work with later versions. Just try it and let me know, I will update the readme accordingly.  \n\n## Requirements\n- requests (latest)\n\n## Setup\nTo start interacting with Photoprism set up a session. You always need to do this if you start the script. Otherwise there is no session for the client to interact with PhotoPrism.\n``` python\nfrom photoprism.Session import Session\npp_session = Session(\"admin\", \"changethis\", \"demo.photoprism.app\")\npp_session.create()\n```\n\n## Searching\nTo search for photos. With this example it will return the first 100 results. You can change this with `count=1000`.\n\n```python\nfrom photoprism.Photo import Photo\n\np = Photo(pp_session)\np.search(query=\"original:*\")\n```\n\n## Other functions\nThis is a list of all other functions within the client. If you want other functions either request them or send a pull request.\n| function | description | variables | returns |\n| ---- | ----- | ------ | ----- |\n| Photo.add_photos_to_album() | Add photos to an album, you will need to provide a list of UIDs of the photos you want to add. Returns True if successfull | photos: list, album_uid: string | True if successfull  |\n| Photo.add_to_album_from_query() | Provide a search query and add all photos that are returned into an album. Provide the albumname, not the UID of the album. | query: string, albumname: string | True if successfull |\n| Photo.check_if_album_exists() | Small function to check if an album exists | name: string, create_if_not: bool (default is False) | True if it exists, False if not (will continue to be False if the album is created) |\n| Photo.create_album() | Create an album, returns a boolean if it worked | title: string | True if successfull |\n| Photo.get_album() | Get all information of an album based upon the UID of the album | uid: string | Dict object with the information of the album, False if it does not exist |\n| Photo.get_album_uid_by_name() | Get the UID of an album using the name of the album. Be aware, it uses the list_albums function that is limited to 100000 albums | name: string | String of uid, None if it does not exist |\n| Photo.get_uid_list_of_search() | Return a list of UIDs based upon the search | query: string, count: int (default is 100) | list of uids |\n| Photo.list_albums() | Provide a list of all albums within the photoprism instance, with a max of 100000 | None | Dict object with all albums and their metadata (max of 100000 results) |\n| Photo.raw_call() | Function to perform a request to the photoprism server (usually not needed by a user) | endpoint: string, type: string (default=\"GET\"), data: string (default=False) | requests object |\n| Photo.search() | Create the session | query: string, count: int (default=100) | Dict object of the results of the search |\n| Photo.start_import() | Start an import job, default path is upload. It returns True when the import started, not when finished | path: string (default=\"upload\"), move: Bool (default=False) | True if successfully started |\n| Photo.stop_import() | Stop an import job | None | True if successfully stopped |\n| Photo.remove_photos_from_album() | Remove photos from an album, Returns True if successfull | albumname: string, photos: bool (default=False), count: int (default=1000000) | True if succesfull |\n| Photo.remove_album() | Remove album based on album name | albumname: string | Dict data returned from the server |\n\n## License \nMIT License\n\nCopyright (c) 2022 maartenvl\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mvlnetdev/photoprism_client",
    "keywords": "photoprism",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "photoprism-client",
    "package_url": "https://pypi.org/project/photoprism-client/",
    "platform": null,
    "project_url": "https://pypi.org/project/photoprism-client/",
    "project_urls": {
      "Homepage": "https://github.com/mvlnetdev/photoprism_client"
    },
    "release_url": "https://pypi.org/project/photoprism-client/0.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Python client to interact with photoprism.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15859624,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9cf3c19cc104de6b65b347b9850fc327704d2d241c2888009af2d4fef05d891",
          "md5": "8bb18143beb4e4acc92609619a06cdde",
          "sha256": "ad89a2385a6684025c2257e70d850b36a64d93a9138b7b9aa6615b5e781cadca"
        },
        "downloads": -1,
        "filename": "photoprism_client-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8bb18143beb4e4acc92609619a06cdde",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4120,
        "upload_time": "2022-11-07T08:36:15",
        "upload_time_iso_8601": "2022-11-07T08:36:15.576205Z",
        "url": "https://files.pythonhosted.org/packages/a9/cf/3c19cc104de6b65b347b9850fc327704d2d241c2888009af2d4fef05d891/photoprism_client-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "129bf9efa40c0ce7b3700a73d840e4b68aa777ab2e8dae8ee1efd2cb96ac5a28",
          "md5": "b3c5959e6cafc0f95b080e317028689f",
          "sha256": "e3c4d0abe8ca2ae9faf28310a19f54b4cfa4e1f563a7fe2d8f907026f1569aa3"
        },
        "downloads": -1,
        "filename": "photoprism_client-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b3c5959e6cafc0f95b080e317028689f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4490,
        "upload_time": "2022-11-07T08:39:54",
        "upload_time_iso_8601": "2022-11-07T08:39:54.327865Z",
        "url": "https://files.pythonhosted.org/packages/12/9b/f9efa40c0ce7b3700a73d840e4b68aa777ab2e8dae8ee1efd2cb96ac5a28/photoprism_client-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2ed3e480813068fc0aa1bf02328a2cb44fa7c4bd50e332456ba2f394c3f7ca7",
          "md5": "b6de38799e4e5b6447b65cc4372a3bc6",
          "sha256": "d077a2f29e0a1b53cc5a4e7b79a502579fbcf18a3468a2fdd3e88735176f7105"
        },
        "downloads": -1,
        "filename": "photoprism_client-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b6de38799e4e5b6447b65cc4372a3bc6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4636,
        "upload_time": "2022-11-22T21:38:05",
        "upload_time_iso_8601": "2022-11-22T21:38:05.568445Z",
        "url": "https://files.pythonhosted.org/packages/c2/ed/3e480813068fc0aa1bf02328a2cb44fa7c4bd50e332456ba2f394c3f7ca7/photoprism_client-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c2ed3e480813068fc0aa1bf02328a2cb44fa7c4bd50e332456ba2f394c3f7ca7",
        "md5": "b6de38799e4e5b6447b65cc4372a3bc6",
        "sha256": "d077a2f29e0a1b53cc5a4e7b79a502579fbcf18a3468a2fdd3e88735176f7105"
      },
      "downloads": -1,
      "filename": "photoprism_client-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "b6de38799e4e5b6447b65cc4372a3bc6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4636,
      "upload_time": "2022-11-22T21:38:05",
      "upload_time_iso_8601": "2022-11-22T21:38:05.568445Z",
      "url": "https://files.pythonhosted.org/packages/c2/ed/3e480813068fc0aa1bf02328a2cb44fa7c4bd50e332456ba2f394c3f7ca7/photoprism_client-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}