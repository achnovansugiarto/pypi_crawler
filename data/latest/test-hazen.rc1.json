{
  "info": {
    "author": "Shuaib, Haris",
    "author_email": "mohammad_haris.shuaib@kcl.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<!-- PROJECT HEADING -->\n<br />\n<p align=\"center\">\n   <img src=\"https://raw.githubusercontent.com/GSTT-CSC/hazen/readme-dev/docs/assets/ibn-al-haytham.jpeg\" alt=\"Ibn Al-Haytham\">\n</p>   \n<h1 align=\"center\">hazen</h1>\n<p align=\"center\">\n   Quality assurance framework for Magnetic Resonance Imaging\n   <br />\n   <a href=\"https://github.com/github_username/repo_name\"><strong>Explore the docs »</strong></a>\n   <br />\n   <br />\n   <a href=\"https://github.com/GSTT-CSC/hazen\">View repo</a>\n   ·\n   <a href=\"https://github.com/GSTT-CSC/hazen/issues\">Report Bug</a>\n   ·\n   <a href=\"https://github.com/GSTT-CSC/hazen/issues\">Request Feature</a>\n</p>\n<p align=\"center\">\n  <img src=\"https://github.com/GSTT-CSC/hazen/actions/workflows/tests_release.yml/badge.svg?branch=main\">\n  <img src=\"https://img.shields.io/endpoint?url=https://gist.githubusercontent.com/laurencejackson/ba102d5f3e592fcd50451c2eff8a803d/raw/hazen_pytest-coverage-comment.json\">\n</p>\n<p align=\"center\">Please <b>STAR</b> this repo to receive updates about new versions of hazen!</p>\n\n\n---\n\n## Overview\n\nhazen is a software framework for performing automated analysis of magnetic resonance imaging (MRI) Quality Assurance data.\n\nIt provides automatic quantitative analysis for the following measurements of MRI phantom data:\n- Signal-to-noise ratio (SNR)\n- Spatial resolution\n- Slice position and width\n- Uniformity\n- Ghosting\n- MR Relaxometry\n\nSome example outputs from hazen:\n\n| hazen snr                        | hazen ghosting                |\n|----------------------------------|-------------------------------|\n| ![](docs/assets/snr-example.png) | ![](docs/assets/ghosting.png) |\n\n---\n\n## Installation\n\n### pip\n\nHazen can be installed using pip on python 3.9 or higher, it is recommended to use a virtual environment\n\n```bash\npython3 -m venv hazen-venv\nsource hazen-venv/bin/activate\npip install hazen\n```\n\n#### Docker\n\nThe Docker version of hazen as it is easy to get up-and-running and is linked to the most stable release. Refer to the [Docker installation instructions](https://docs.docker.com/engine/install) to install Docker on your host computer.\n\nFor ease of use, it is recommended to copy the `hazen-app` script to a location accessible on the path such as `/usr/local/bin`. This will allow you to run hazen from any location on your computer. Then, to use Docker hazen, simply run the `hazen-app` script appended with the function you want to use (e.g.: `snr`). \n\nIn Terminal:\n\n```bash \ncd hazen\ncp ./hazen-app /usr/local/bin\n\n# run hazen with CLI arguments\nhazen-app snr tests/data/snr/Siemens/\n\nlatest: Pulling from gsttmriphysics/hazen\nDigest: sha256:18603e40b45f3af4bf45f07559a08a7833af92a6efe21cb7306f758e8eeab24a\nStatus: Image is up to date for gsttmriphysics/hazen:latest\ndocker.io/gsttmriphysics/hazen:latest\n{   'snr_smoothing_measured_seFoV250_2meas_slice5mm_tra_repeat_PSN_noDC_2_1': 191.16,\n    'snr_smoothing_measured_seFoV250_2meas_slice5mm_tra_repeat_PSN_noDC_3_1': 195.58,\n    'snr_smoothing_normalised_seFoV250_2meas_slice5mm_tra_repeat_PSN_noDC_2_1': 1866.09,\n    'snr_smoothing_normalised_seFoV250_2meas_slice5mm_tra_repeat_PSN_noDC_3_1': 1909.2,\n    'snr_subtraction_measured_seFoV250_2meas_slice5mm_tra_repeat_PSN_noDC_2_1': 220.73,\n    'snr_subtraction_normalised_seFoV250_2meas_slice5mm_tra_repeat_PSN_noDC_2_1': 2154.69}\n```\n\n\n#### Linux & MacOS\n\nFor developers, hazen can be installed from source using `pip`. We highly recommend using a virtual environment.\n\n```bash\n# Install OpenSSL\n# Go to local hazen repo directory\ncd hazen\n\n# Create and activate a virtual environment\npython3 -m venv ./hazen-venv\nsource hazen-venv/bin/activate\n\n# Install requirements\npip install --upgrade pip setuptools wheel\npip install -r requirements.txt\n\n# Install hazen\npython setup.py install\n\n# Run tests to ensure everything is working\npytest tests/\n```\n\n---\n\n## Usage\n\n### Command Line\n\nThe CLI version of hazen is designed to be pointed at single folders containing DICOM file(s). Example datasets are provided in the `tests/data/` directory. If you are not using the Docker version of hazen, replace `hazen-app` with `hazen` in the following commands.\n\nTo perform an SNR measurement on the provided example Philips DICOMs:\n\n`hazen-app snr tests/data/snr/Philips`\n\nTo perform a spatial resolution measurement on example data provided by the East Kent Trust:\n\n`hazen-app spatial_resolution tests/data/resolution/philips`\n\nTo see the full list of available tools, enter:\n\n`hazen-app -h`\n\nThe `--report` option provides additional information for some of the functions. For example, the user can gain additional insight into the performance of the snr function by entering:\n\n`hazen-app snr tests/data/snr/Philips --report`\n\n### Web Interface\n\nWIP: we are developing a web interface for hazen.\n\n---\n\n## Contributing\n- The Release Manager should create a release branch for the future planned release e.g. release-X.X.X\n- The RMs shall organise backlog refinement sessions to ensure issues are allocated to the appropriate release\n- The RM should ensure their release branch is kept up-to-date with master\n- PRs should be merged into the appropriate release branch for the issue(s) it is addressing\n\nIf you want to contribute to the development of hazen, please take a look at: `CONTRIBUTING.md`.\n\n---\n\n## Users\n\nPlease [raise an Issue](https://github.com/GSTT-CSC/hazen/issues) if you have any problems installing or running hazen.\n\nWe have used hazen with MRI data from a handful of different MRI scanners, including multiple different vendors. If your MRI data doesn't work with hazen, or the results are unexpected, please submit an Issue and we will investigate. \n\n---\n\n## Releasing\n\nThe Release Manager should ensure:\n- All outstanding issues for the current release have been closed, or, transferred to future release.\n- All tests are passing on Github Actions.\n- All documentation has been updated with correct version numbers:\n   - Version number in `docs/conf.py`\n   - Version number in `hazenlib/__init__.py`\n   - Version number in `CITATION.cff`\n- The `release` branch has been merged into `main` branch\n- A new release has been created with a new version tag (tag = version number)\n\n- RMs of other branches should update their release from the latest release as soon as possible and deal with any merge conflicts.\n\n![image](https://user-images.githubusercontent.com/19840489/143266366-06e33949-12c7-44b4-9ed7-c0a795b5d492.png)\n\n- RMs: Tom Roberts, Lucrezia Cester\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/gsttmri/hazen",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "test-hazen",
    "package_url": "https://pypi.org/project/test-hazen/",
    "platform": null,
    "project_url": "https://pypi.org/project/test-hazen/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/gsttmri/hazen"
    },
    "release_url": "https://pypi.org/project/test-hazen/1.0.3/",
    "requires_dist": [
      "pydicom (==2.2.2)",
      "numpy (==1.21.4)",
      "matplotlib (==3.5.1)",
      "docopt (==0.6.2)",
      "opencv-python-headless (==4.6.0.66)",
      "scikit-image (==0.19.2)",
      "scipy (==1.8.0)",
      "imutils (==0.5.3)",
      "colorlog (==6.6.0)"
    ],
    "requires_python": "",
    "summary": "An automatic MRI QA tool",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15157407,
  "releases": {
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cb45d847c98b7338e2b88e0f0f288b875ea41d0651efcd90c7f060d05b4a762",
          "md5": "1a0174be3075a0b54b21b4ab9f6e064b",
          "sha256": "d703636c55f229a87136aa48ba0ed020477cea1a208648a5bb16ee82d0cf5bfc"
        },
        "downloads": -1,
        "filename": "test_hazen-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1a0174be3075a0b54b21b4ab9f6e064b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 93819,
        "upload_time": "2022-09-20T18:11:17",
        "upload_time_iso_8601": "2022-09-20T18:11:17.933723Z",
        "url": "https://files.pythonhosted.org/packages/7c/b4/5d847c98b7338e2b88e0f0f288b875ea41d0651efcd90c7f060d05b4a762/test_hazen-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1567c9516a0f17aff9887746a1eac2e3f2d0e5680638a69a85e4ad0a8345fc7",
          "md5": "c4f8d685f27803a0a0455fd09bceeb34",
          "sha256": "7868ab9f46e9df280027c215edd98f6b18e586b1fdb1271a271d3432006a90a9"
        },
        "downloads": -1,
        "filename": "test_hazen-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c4f8d685f27803a0a0455fd09bceeb34",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 86169,
        "upload_time": "2022-09-20T18:11:19",
        "upload_time_iso_8601": "2022-09-20T18:11:19.505124Z",
        "url": "https://files.pythonhosted.org/packages/c1/56/7c9516a0f17aff9887746a1eac2e3f2d0e5680638a69a85e4ad0a8345fc7/test_hazen-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7cb45d847c98b7338e2b88e0f0f288b875ea41d0651efcd90c7f060d05b4a762",
        "md5": "1a0174be3075a0b54b21b4ab9f6e064b",
        "sha256": "d703636c55f229a87136aa48ba0ed020477cea1a208648a5bb16ee82d0cf5bfc"
      },
      "downloads": -1,
      "filename": "test_hazen-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1a0174be3075a0b54b21b4ab9f6e064b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 93819,
      "upload_time": "2022-09-20T18:11:17",
      "upload_time_iso_8601": "2022-09-20T18:11:17.933723Z",
      "url": "https://files.pythonhosted.org/packages/7c/b4/5d847c98b7338e2b88e0f0f288b875ea41d0651efcd90c7f060d05b4a762/test_hazen-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c1567c9516a0f17aff9887746a1eac2e3f2d0e5680638a69a85e4ad0a8345fc7",
        "md5": "c4f8d685f27803a0a0455fd09bceeb34",
        "sha256": "7868ab9f46e9df280027c215edd98f6b18e586b1fdb1271a271d3432006a90a9"
      },
      "downloads": -1,
      "filename": "test_hazen-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "c4f8d685f27803a0a0455fd09bceeb34",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 86169,
      "upload_time": "2022-09-20T18:11:19",
      "upload_time_iso_8601": "2022-09-20T18:11:19.505124Z",
      "url": "https://files.pythonhosted.org/packages/c1/56/7c9516a0f17aff9887746a1eac2e3f2d0e5680638a69a85e4ad0a8345fc7/test_hazen-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}