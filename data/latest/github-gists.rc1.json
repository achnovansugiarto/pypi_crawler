{
  "info": {
    "author": "Witherr",
    "author_email": "sdssouvic99@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# gists.py\n\nA simple asynchronous python wrapper for the [GitHub Gists](https://docs.github.com/en/rest/reference/gists) API\n----------\nThis API wrapper mainly focuses on the Gists part of the GitHub API, not the entire API\n\n## Features\n*All unchecked features are planned*\n### Gists\n- [ ] `GET`ing from `/gists`, to get authenticated user's Gists\n- [ ] `GET`ing from `/users/{username}/gists` to get a user's Gists\n- [ ] `GET` ing from `/gists/public` to get public Gists\n- [ ] `GET` ing from `/gists/starred` to get authenticated user's starred Gists\n- [X] `POST`ing to `/gists`, to create a Gist\n- [X] `GET` ing from `/gists/{gist_id}` to get a Gist\n- [X] `PATCH`ing to `/gists/{gist_id}`, to edit a Gist\n- [X] `DELETE`ing from `/gists/{gist_id}` to delete a Gist\n### Gists - Forks\n- [ ] `POST`ing to `/gists/{gist_id}/forks` to fork a Gist to the authenticated user's profile\n### Gists - Star\n- [ ] `GET`ing from `/gists/{gist_id}/star` to check if a gist is starred by the authenticated user\n- [ ] `PUT`ing `/gists/{gist_id}/star` to star a Gist with the authenticated user\n- [ ] `DELETE`ing from `/gists/{gist_id}/star` to unstar a Gist with the authenticated user\n### Gists - Comments\n- [ ] `GET`ing from `/gists/{gist_id}/comments` to get all comments on a Gist\n- [ ] `POST`ing to `/gists/{gist_id}/comments` to create a comment on a Gist\n- [ ] `GET`ing from `/gists/{gist_id}/comments/{comment_id}` to get a comment on a Gist\n- [ ] `PATCH`ing to `/gists/{gist_id}/comments/{comment_id}` to edit a comment of the authenticated user on a Gist\n- [ ] `DELETE`ing from `/gists/{gist_id}/comments/{comment_id}` to delete a comment of the authenticated user on a Gist\n\n## Installation\n```sh\npip install gists.py\n```\nor\n```sh\npip install git+https://github.com/WitherredAway/gists.py\n```\n\n## Usage examples\n*This section is a work in progress*\n\n### Import gists and instantiate a client\n```py\n# Import asyncio\nimport asyncio\n# Import the package\nimport gists\n\n# Create a client instance\nclient = gists.Client()\n```\n### Get a gist\n```py\nasync def main_get():\n    # Getting a gist does not require authorization\n\n    # This method fetches the gist associated with the provided gist id, and returns a Gist object\n    gist = await client.get_gist(\"GIST ID\")\n    return gist\n\n# Run the main_get() function\ngist = asyncio.run(main_get())\n# Print the gist's description\nprint(gist.description)\n```\n### Create a new gist\n```py\nasync def main_create() -> gists.Gist:\n    # Creating a gist requires authorization, use client.authorize to authorize the client\n    await client.authorize(\"YOUR GITHUB PERSONAL ACCESS TOKEN\")\n    \n    # The description to set\n    description = \"Hi this is a gist\"\n\n    # The files to create in the new gist\n    files = [\n        gists.File(name=\"example.txt\", content=\"I like turtles\"),\n        gists.File(name=\"helloworld.py\", content=\"print(\\\"Hello, world!\\\")\"),\n    ]\n    \n    # Whether or not the gist should be public\n    public = True\n\n    # This method creates a new gist and returns a Gist object associated with that gist\n    gist = await client.create_gist(files, description=description, public=public)\n    return gist\n        \n# Run the main_create() function\ngist_1 = asyncio.run(main_create())\n# Print the gist's id\nprint(gist_1.id)\n```\n### Edit gist using the edit method of a Gist object\n```py\nasync def main_edit():\n    # Editing a gist requires authorization, but we already authorized the client when creating the gist\n\n    # The description to edit to\n    description = \"Hello this is a gist, but edited\"\n\n    # The files to edit in gist\n\n    files = [\n        # Use a unique filename for the name parameter to create a new file\n        gists.File(name=\"newfile.txt\", content=\"New file\"),\n        # Use an existing filename for the name parameter to edit that file\n        gists.File(name=\"example.txt\", content=\"I like all animals\"),\n        # Use an existing filename for the name parameter and\n        # pass in the new_name parameter to edit the name of that file,\n        # in which case the content parameter is not mandatory\n        gists.File(name=\"helloworld.py\", new_name=\"hellouniverse.py\")\n    ]\n    await gist_1.edit(files=files, description=description)\n    \n# Run the main_edit() function\nasyncio.run(main_edit())\n# Print the gist's edited description\nprint(gist_1.description)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/WitherredAway/gists.py",
    "keywords": "",
    "license": "GPL-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "github-gists",
    "package_url": "https://pypi.org/project/github-gists/",
    "platform": null,
    "project_url": "https://pypi.org/project/github-gists/",
    "project_urls": {
      "Homepage": "https://github.com/WitherredAway/gists.py",
      "Issue Tracker": "https://github.com/WitherredAway/gists.py/issues"
    },
    "release_url": "https://pypi.org/project/github-gists/1.2.1/",
    "requires_dist": [
      "aiohttp (==3.8.1)"
    ],
    "requires_python": ">=3.8",
    "summary": "A simple asynchronous python wrapper for the GitHub Gists API",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13536005,
  "releases": {
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b165b99cb8328b056a37e95881831c607d8be6e7aa217c388d084cfa164083e",
          "md5": "aad39ab5451ee474a15c5abb91f2cc08",
          "sha256": "bfb28b74e572bc1dc138b71289ad9189124c8af3eba46f180cc60bead9e410c4"
        },
        "downloads": -1,
        "filename": "github_gists-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aad39ab5451ee474a15c5abb91f2cc08",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 20288,
        "upload_time": "2022-04-17T05:41:35",
        "upload_time_iso_8601": "2022-04-17T05:41:35.000492Z",
        "url": "https://files.pythonhosted.org/packages/5b/16/5b99cb8328b056a37e95881831c607d8be6e7aa217c388d084cfa164083e/github_gists-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6890f6292c1df2e2a0f310c719aaa83b80a17570e4471a23f73314d6225df692",
          "md5": "d1f497dca775effbfa8f9c3a3d92fde2",
          "sha256": "acffbdba204fbbbce56d02ebf874417934e11b4c1b1fc0b4eeb2d6853d74322e"
        },
        "downloads": -1,
        "filename": "github-gists-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d1f497dca775effbfa8f9c3a3d92fde2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 20435,
        "upload_time": "2022-04-17T05:41:37",
        "upload_time_iso_8601": "2022-04-17T05:41:37.184481Z",
        "url": "https://files.pythonhosted.org/packages/68/90/f6292c1df2e2a0f310c719aaa83b80a17570e4471a23f73314d6225df692/github-gists-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5b165b99cb8328b056a37e95881831c607d8be6e7aa217c388d084cfa164083e",
        "md5": "aad39ab5451ee474a15c5abb91f2cc08",
        "sha256": "bfb28b74e572bc1dc138b71289ad9189124c8af3eba46f180cc60bead9e410c4"
      },
      "downloads": -1,
      "filename": "github_gists-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aad39ab5451ee474a15c5abb91f2cc08",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 20288,
      "upload_time": "2022-04-17T05:41:35",
      "upload_time_iso_8601": "2022-04-17T05:41:35.000492Z",
      "url": "https://files.pythonhosted.org/packages/5b/16/5b99cb8328b056a37e95881831c607d8be6e7aa217c388d084cfa164083e/github_gists-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6890f6292c1df2e2a0f310c719aaa83b80a17570e4471a23f73314d6225df692",
        "md5": "d1f497dca775effbfa8f9c3a3d92fde2",
        "sha256": "acffbdba204fbbbce56d02ebf874417934e11b4c1b1fc0b4eeb2d6853d74322e"
      },
      "downloads": -1,
      "filename": "github-gists-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d1f497dca775effbfa8f9c3a3d92fde2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 20435,
      "upload_time": "2022-04-17T05:41:37",
      "upload_time_iso_8601": "2022-04-17T05:41:37.184481Z",
      "url": "https://files.pythonhosted.org/packages/68/90/f6292c1df2e2a0f310c719aaa83b80a17570e4471a23f73314d6225df692/github-gists-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}