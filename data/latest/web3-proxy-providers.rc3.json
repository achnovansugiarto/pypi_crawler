{
  "info": {
    "author": "Sina Rezaei",
    "author_email": "sinarezaei1991@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![alt text][pypi_version] ![alt text][licence_version]\n\n# Proxy Providers for Web3Py\n\nA library for connecting to Web3 RPC providers using a proxy\n\nTested with:\n* Python 3.6+\n\nSupports Proxy usage for:\n* Http RPC (Sync, Async)\n* Websocket RPC (Sync, Async)\n* Websocket RPC with subscription (Sync, Async)\n\nUse the following command to install using pip:\n```\npip install web3-proxy-providers\n```\n\nTo use the providers, you need web3 with version above 6.0.0, current version is 6.0.0b9 (beta)\n\n```\npip install web3==6.0.09b\n```\n\n## Usage example\n### Http Provider with Proxy\nUse `HttpWithProxyProvider` class which supports http and socks proxy\n\n```python\nfrom web3 import Web3\nfrom web3_proxy_providers import HttpWithProxyProvider\n\nprovider = HttpWithProxyProvider(\n    endpoint_uri='https://eth-mainnet.g.alchemy.com/v2/<YourAlchemyKey>',\n    proxy_url='socks5h://localhost:1080'\n)\nweb3 = Web3(\n    provider=provider,\n)\nprint(web3.eth.block_number)\n```\n\n### Async Http Provider with Proxy\nUse `AsyncHTTPWithProxyProvider` class to connect to an RPC with asyncio using a proxy. both http proxy and socks proxy are supported\n\n```python\nimport asyncio\nfrom web3 import Web3\nfrom web3.eth import AsyncEth\nfrom python_socks import ProxyType\nfrom web3_proxy_providers import AsyncHTTPWithProxyProvider\n\nasync def main():\n    provider = AsyncHTTPWithProxyProvider(\n        proxy_type=ProxyType.SOCKS5,\n        proxy_host='localhost',\n        proxy_port=1080,\n        endpoint_uri='https://eth-mainnet.g.alchemy.com/v2/<YourAlchemyKey>',\n    )\n    web3 = Web3(\n        provider=provider,\n        modules={'eth': (AsyncEth,)},\n    )\n    print(await web3.eth.block_number)\n\nif __name__ == '__main__':\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n```\n\n### Async Websocket Provider with Proxy\nUse `AsyncWebsocketWithProxyProvider` class to connect to a websocket RPC with asyncio using a proxy. both http proxy and socks proxy are supported\n\n```python\nimport asyncio\nfrom web3 import Web3\nfrom web3.eth import AsyncEth\nfrom python_socks import ProxyType\nfrom web3_proxy_providers import AsyncWebsocketWithProxyProvider\n\nasync def main(loop: asyncio.AbstractEventLoop):\n    provider = AsyncWebsocketWithProxyProvider(\n        loop=loop,\n        proxy_type=ProxyType.SOCKS5,\n        proxy_host='localhost',\n        proxy_port=1080,\n        endpoint_uri='wss://eth-mainnet.g.alchemy.com/v2/<YourAlchemyKey>',\n    )\n    web3 = Web3(\n        provider=provider,\n        modules={'eth': (AsyncEth,)},\n    )\n    print(await web3.eth.block_number)\n\nif __name__ == '__main__':\n    async_loop = asyncio.get_event_loop()\n    async_loop.run_until_complete(main(loop=async_loop))\n```\n\n### Async Websocket Provider with Proxy with Subscription support\nUse `AsyncSubscriptionWebsocketWithProxyProvider` class to connect to a websocket RPC with asyncio using a proxy. both http proxy and socks proxy are supported\n\nLearn more about realtime events and eth_subscribe:\n* [Ethereum/Geth Docs](https://geth.ethereum.org/docs/interacting-with-geth/rpc/pubsub)\n* [Alchemy Docs](https://docs.alchemy.com/reference/eth-subscribe-polygon)\n\n\n```python\nimport asyncio\nfrom Crypto.Hash import keccak\nfrom web3 import Web3\nfrom python_socks import ProxyType\nfrom web3_proxy_providers import AsyncSubscriptionWebsocketWithProxyProvider\n\nasync def callback(subs_id: str, json_result):\n    print(json_result)\n\nasync def main(loop: asyncio.AbstractEventLoop):\n    provider = AsyncSubscriptionWebsocketWithProxyProvider(\n        loop=loop,\n        proxy_type=ProxyType.SOCKS5,\n        proxy_host='localhost',\n        proxy_port=1080,\n        endpoint_uri='wss://eth-mainnet.g.alchemy.com/v2/<YourAlchemyKey>',\n    )\n    \n    # subscribe to Deposit and Withdrawal events for WETH contract\n    weth_contract_address = Web3.to_checksum_address('0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2')\n    deposit_topic = \"0x\" + keccak.new(data=b'Deposit(address,uint256)', digest_bits=256).hexdigest()\n    withdrawal_topic = \"0x\" + keccak.new(data=b'Withdrawal(address,uint256)', digest_bits=256).hexdigest()\n    subscription_id = await provider.subscribe(\n        [\n            'logs',\n            {\n                \"address\": weth_contract_address,\n                \"topics\": [deposit_topic, withdrawal_topic]\n            }\n        ],\n        callback\n    )\n    print(f'Subscribed with id {subscription_id}')\n    \n    # unsubscribe after 30 seconds\n    await asyncio.sleep(30)\n    await provider.unsubscribe(subscription_id)\n\nif __name__ == '__main__':\n    async_loop = asyncio.get_event_loop()\n    async_loop.run_until_complete(main(loop=async_loop))\n```\n\n\n[pypi_version]: https://img.shields.io/pypi/v/web3-proxy-providers.svg \"PYPI version\"\n[licence_version]: https://img.shields.io/badge/license-MIT%20v2-brightgreen.svg \"MIT Licence\"\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sinarezaei/web3_proxy_providers",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "web3-proxy-providers",
    "package_url": "https://pypi.org/project/web3-proxy-providers/",
    "platform": null,
    "project_url": "https://pypi.org/project/web3-proxy-providers/",
    "project_urls": {
      "Homepage": "https://github.com/sinarezaei/web3_proxy_providers"
    },
    "release_url": "https://pypi.org/project/web3-proxy-providers/0.3/",
    "requires_dist": [
      "web3 (>=6.0.0b9)",
      "websockets (==10.4)",
      "aiohttp (>=3.8.3)",
      "aiohttp-socks (>=0.7.1)",
      "PySocks (>=1.7.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "Proxy providers for web3py (Web3 python)",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16806231,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7291d1a78c438bf975e2816be4001fbc78f64f78895e4b47c26da783418bc5e7",
          "md5": "7f6193fe8a687ab287d0d1dccfc4bba8",
          "sha256": "88d0b37d8fd2f0ca3e3c6ba468f50258db7d6041e9b1fb6175130d6ae16d3515"
        },
        "downloads": -1,
        "filename": "web3_proxy_providers-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f6193fe8a687ab287d0d1dccfc4bba8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14101,
        "upload_time": "2023-02-09T13:39:32",
        "upload_time_iso_8601": "2023-02-09T13:39:32.082846Z",
        "url": "https://files.pythonhosted.org/packages/72/91/d1a78c438bf975e2816be4001fbc78f64f78895e4b47c26da783418bc5e7/web3_proxy_providers-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e55ea64b810dde1900c66bdd95a684993950602691597c0c3b27f5846507198e",
          "md5": "e38f5c6e291702f4e20810b294082ce6",
          "sha256": "7e4574c3acb3e5a8ff8be260cf3c3e7844fcec3d61e169bb59c8ce82a23c4b12"
        },
        "downloads": -1,
        "filename": "web3-proxy-providers-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e38f5c6e291702f4e20810b294082ce6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10677,
        "upload_time": "2023-02-09T13:39:35",
        "upload_time_iso_8601": "2023-02-09T13:39:35.125141Z",
        "url": "https://files.pythonhosted.org/packages/e5/5e/a64b810dde1900c66bdd95a684993950602691597c0c3b27f5846507198e/web3-proxy-providers-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e80d748c4afd642b438c5e51b446747be33f0a5ec01c53533576f44f04834a56",
          "md5": "8d24fe7b79bfe11a3578d7eecf45e041",
          "sha256": "e18e6ff940b1a41003d6f2d2bf9585cd68e75d5306e30574c7d68730c58bab01"
        },
        "downloads": -1,
        "filename": "web3_proxy_providers-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d24fe7b79bfe11a3578d7eecf45e041",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14104,
        "upload_time": "2023-02-10T15:26:01",
        "upload_time_iso_8601": "2023-02-10T15:26:01.741993Z",
        "url": "https://files.pythonhosted.org/packages/e8/0d/748c4afd642b438c5e51b446747be33f0a5ec01c53533576f44f04834a56/web3_proxy_providers-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61285d437edc70bd9353ec044cae481df702c6819102b4186862d39a0ec38ab8",
          "md5": "d860df3ca0b2072866d0afb031f685f5",
          "sha256": "6cf020448d62d464e87d06a4aad638edddb4e8eb06e4adaf934284eb0f983aa3"
        },
        "downloads": -1,
        "filename": "web3-proxy-providers-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d860df3ca0b2072866d0afb031f685f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10679,
        "upload_time": "2023-02-10T15:26:03",
        "upload_time_iso_8601": "2023-02-10T15:26:03.583601Z",
        "url": "https://files.pythonhosted.org/packages/61/28/5d437edc70bd9353ec044cae481df702c6819102b4186862d39a0ec38ab8/web3-proxy-providers-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c6a803f4a59180c5b75889a235c07e3023712286027d38b77a451472da2c6ea",
          "md5": "61a956c1379fe06f7be927179b59fe88",
          "sha256": "cbe3df699dd9e672937b79fdc64b489e6edacd39046dbb955c8267fce8471ce2"
        },
        "downloads": -1,
        "filename": "web3_proxy_providers-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "61a956c1379fe06f7be927179b59fe88",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14475,
        "upload_time": "2023-02-11T08:53:40",
        "upload_time_iso_8601": "2023-02-11T08:53:40.356920Z",
        "url": "https://files.pythonhosted.org/packages/9c/6a/803f4a59180c5b75889a235c07e3023712286027d38b77a451472da2c6ea/web3_proxy_providers-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2733d584c4dcaa70fd0100d476a45b5cccd4d8121e680b76065701bd94889bdb",
          "md5": "56add8a3049925a375e9698b267d2e82",
          "sha256": "87002313e6017028bd012d8b3f8b5fbe124eb2a1d37697586723ce0d35ed55bc"
        },
        "downloads": -1,
        "filename": "web3-proxy-providers-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "56add8a3049925a375e9698b267d2e82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10931,
        "upload_time": "2023-02-11T08:53:42",
        "upload_time_iso_8601": "2023-02-11T08:53:42.030464Z",
        "url": "https://files.pythonhosted.org/packages/27/33/d584c4dcaa70fd0100d476a45b5cccd4d8121e680b76065701bd94889bdb/web3-proxy-providers-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9c6a803f4a59180c5b75889a235c07e3023712286027d38b77a451472da2c6ea",
        "md5": "61a956c1379fe06f7be927179b59fe88",
        "sha256": "cbe3df699dd9e672937b79fdc64b489e6edacd39046dbb955c8267fce8471ce2"
      },
      "downloads": -1,
      "filename": "web3_proxy_providers-0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "61a956c1379fe06f7be927179b59fe88",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 14475,
      "upload_time": "2023-02-11T08:53:40",
      "upload_time_iso_8601": "2023-02-11T08:53:40.356920Z",
      "url": "https://files.pythonhosted.org/packages/9c/6a/803f4a59180c5b75889a235c07e3023712286027d38b77a451472da2c6ea/web3_proxy_providers-0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2733d584c4dcaa70fd0100d476a45b5cccd4d8121e680b76065701bd94889bdb",
        "md5": "56add8a3049925a375e9698b267d2e82",
        "sha256": "87002313e6017028bd012d8b3f8b5fbe124eb2a1d37697586723ce0d35ed55bc"
      },
      "downloads": -1,
      "filename": "web3-proxy-providers-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "56add8a3049925a375e9698b267d2e82",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10931,
      "upload_time": "2023-02-11T08:53:42",
      "upload_time_iso_8601": "2023-02-11T08:53:42.030464Z",
      "url": "https://files.pythonhosted.org/packages/27/33/d584c4dcaa70fd0100d476a45b5cccd4d8121e680b76065701bd94889bdb/web3-proxy-providers-0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}