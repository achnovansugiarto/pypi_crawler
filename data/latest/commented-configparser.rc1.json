{
  "info": {
    "author": "",
    "author_email": "Preocts <preocts@preocts.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "[![Python 3.7 | 3.8 | 3.9 | 3.10 | 3.11](https://img.shields.io/badge/Python-3.7%20%7C%203.8%20%7C%203.9%20%7C%203.10%20%7C%203.11-blue)](https://www.python.org/downloads)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)](https://github.com/pre-commit/pre-commit)\n\n[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/Preocts/commented-configparser/main.svg)](https://results.pre-commit.ci/latest/github/Preocts/commented-configparser/main)\n[![Python tests](https://github.com/Preocts/commented-configparser/actions/workflows/python-tests.yml/badge.svg?branch=main)](https://github.com/Preocts/commented-configparser/actions/workflows/python-tests.yml)\n\n# commented-configparser\n\nA custom ConfigParser class that preserves comments when writing loaded config out.\n\nThis library gives you a custom class of the standard library's `configparser.ConfigParger` which will preserve the comments of a loaded config file when writing that file back out.\n\n---\n\n## Install via pip\n\nFrom pypi:\n\n```bash\npython -m pip install commented-configparser\n```\n\nFrom github:\n\n```bash\npython -m pip install commented-configparser@git+https://github.com/Preocts/commented-configparser@main\n```\n\n**Note:** Replace `main` with the desired tag or branch.  This can be placed in a `requirements.txt` file as well.\n\n---\n\n## Example use\n\n```py\nfrom commentedconfigparser import CommentedConfigParser\n\n# Load the config like normal\nconfig = CommentedConfigParser()\nconfig.read(\"myconfig.ini\")\n\n# Use the config like normal\n...\n\n# Update the config like normal\n...\n\n# Save the config back to the file\nwith open(\"myconfig.ini\", \"w\") as savefile:\n    config.write(savefile)\n```\n\n## Results\n\nWe favor the line spacing choices of the `ConfigParser` class so the input format may not be preserved completely. However, the comments will be preserved.\n\n### Before\n\n```ini\n# Welcome to our config\n[DEFAULT]\n# This value has some meaning to someone\nfoo=bar\n# Make sure to add this when you need it\ntrace=false\nlogging=true\n; This is a comment as well\n\n    # so we need to track all of them\n\n\t; and many could be between things\n[NEW SECTION]\n# Another comment\nmulti-line=\n\tvalue01\n\tvalue02\n\tvalue03\nclosing=0\n# Trailing comment\n\n```\n\n### After\n\n```ini\n# Welcome to our config\n[DEFAULT]\n# This value has some meaning to someone\nfoo=bar\n# Make sure to add this when you need it\ntrace=false\nlogging=true\n; This is a comment as well\n    # so we need to track all of them\n\t; and many could be between things\n\n[NEW SECTION]\n# Another comment\nmulti-line=\n\tvalue01\n\tvalue02\n\tvalue03\nclosing=0\n# Trailing comment\n\n```\n\n---\n\n# Local developer installation\n\nIt is **strongly** recommended to use a virtual environment\n([`venv`](https://docs.python.org/3/library/venv.html)) when working with python\nprojects. Leveraging a `venv` will ensure the installed dependency files will\nnot impact other python projects or any system dependencies.\n\nThe following steps outline how to install this repo for local development. See\nthe [CONTRIBUTING.md](CONTRIBUTING.md) file in the repo root for information on\ncontributing to the repo.\n\n**Windows users**: Depending on your python install you will use `py` in place\nof `python` to create the `venv`.\n\n**Linux/Mac users**: Replace `python`, if needed, with the appropriate call to\nthe desired version while creating the `venv`. (e.g. `python3` or `python3.8`)\n\n**All users**: Once inside an active `venv` all systems should allow the use of\n`python` for command line instructions. This will ensure you are using the\n`venv`'s python and not the system level python.\n\n---\n\n## Installation steps\n\nClone this repo and enter root directory of repo:\n\n```console\n$ git clone https://github.com/Preocts/commented-configparser\n$ cd commented-configparser\n```\n\nCreate the `venv`:\n\n```console\n$ python -m venv venv\n```\n\nActivate the `venv`:\n\n```console\n# Linux/Mac\n$ . venv/bin/activate\n\n# Windows\n$ venv\\Scripts\\activate\n```\n\nThe command prompt should now have a `(venv)` prefix on it. `python` will now\ncall the version of the interpreter used to create the `venv`\n\nInstall editable library and development requirements:\n\n```console\n# Update pip and tools\n$ python -m pip install --upgrade pip\n\n# Install editable version of library\n$ python -m pip install --editable .[dev]\n```\n\nInstall pre-commit [(see below for details)](#pre-commit):\n\n```console\n$ pre-commit install\n```\n\n---\n\n## Misc Steps\n\nRun pre-commit on all files:\n\n```console\n$ pre-commit run --all-files\n```\n\nRun tests:\n\n```console\n$ tox [-r] [-e py3x]\n```\n\nBuild dist:\n\n```console\n$ python -m pip install --upgrade build\n\n$ python -m build\n```\n\nTo deactivate (exit) the `venv`:\n\n```console\n$ deactivate\n```\n---\n\n## Note on flake8:\n\n`flake8` is included in the `requirements-dev.txt` of the project. However it\ndisagrees with `black`, the formatter of choice, on max-line-length and two\ngeneral linting errors. `.pre-commit-config.yaml` is already configured to\nignore these. `flake8` doesn't support `pyproject.toml` so be sure to add the\nfollowing to the editor of choice as needed.\n\n```ini\n--ignore=W503,E203\n--max-line-length=88\n```\n\n---\n\n## [pre-commit](https://pre-commit.com)\n\n> A framework for managing and maintaining multi-language pre-commit hooks.\n\nThis repo is setup with a `.pre-commit-config.yaml` with the expectation that\nany code submitted for review already passes all selected pre-commit checks.\n`pre-commit` is installed with the development requirements and runs seemlessly\nwith `git` hooks.\n\n---\n\n## Makefile\n\nThis repo has a Makefile with some quality of life scripts if the system\nsupports `make`.  Please note there are no checks for an active `venv` in the\nMakefile.\n\n| PHONY         | Description                                                                |\n| ------------- | -------------------------------------------------------------------------- |\n| `init`        | Update pip to newest version                                               |\n| `install`     | install the project                                                        |\n| `install-dev` | install development/test requirements and project as editable install      |\n| `upgrade-dev` | update all dependencies, regenerate requirements.txt (disabled by default) |\n| `build-dist`  | Build source distribution and wheel distribution                           |\n| `clean`       | Deletes build, tox, coverage, pytest, mypy, cache, and pyc artifacts       |\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License Copyright (c) 2022 Preocts Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "commented-configparser",
    "package_url": "https://pypi.org/project/commented-configparser/",
    "platform": null,
    "project_url": "https://pypi.org/project/commented-configparser/",
    "project_urls": {
      "homepage": "https://github.com/Preocts/commented-configparser"
    },
    "release_url": "https://pypi.org/project/commented-configparser/1.0.0/",
    "requires_dist": [
      "pre-commit ; extra == 'dev'",
      "black ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "flake8-builtins ; extra == 'dev'",
      "flake8-pep585 ; extra == 'dev'",
      "pytest ; extra == 'test'",
      "pytest-randomly ; extra == 'test'",
      "coverage ; extra == 'test'",
      "tox ; extra == 'test'"
    ],
    "requires_python": ">=3.7",
    "summary": "Custom ConfigParser class that preserves comments in file when writing",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15669144,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b3dd27a0786e1547573896a5a16727860c4a7583514ce8275e5b2e99f369565",
          "md5": "17db1325816bf3bdf3c3d9ee175f6b7c",
          "sha256": "7c534bcb778feea626c0e38f2a643352ca34c9c0acc6ffb9e29166359d0894ab"
        },
        "downloads": -1,
        "filename": "commented_configparser-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "17db1325816bf3bdf3c3d9ee175f6b7c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8361,
        "upload_time": "2022-11-05T20:17:28",
        "upload_time_iso_8601": "2022-11-05T20:17:28.565287Z",
        "url": "https://files.pythonhosted.org/packages/8b/3d/d27a0786e1547573896a5a16727860c4a7583514ce8275e5b2e99f369565/commented_configparser-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57c39482163130fbf6913b62c3f81dfc439e47e487be5358d01eb4d51abf5299",
          "md5": "b2764c998388f6495153ae2ea8d67780",
          "sha256": "f568158442f0c71e345e736b3adf097f42a2568f03bdb3b31132cb31c1b7e851"
        },
        "downloads": -1,
        "filename": "commented-configparser-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b2764c998388f6495153ae2ea8d67780",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8022,
        "upload_time": "2022-11-05T20:17:30",
        "upload_time_iso_8601": "2022-11-05T20:17:30.062622Z",
        "url": "https://files.pythonhosted.org/packages/57/c3/9482163130fbf6913b62c3f81dfc439e47e487be5358d01eb4d51abf5299/commented-configparser-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8b3dd27a0786e1547573896a5a16727860c4a7583514ce8275e5b2e99f369565",
        "md5": "17db1325816bf3bdf3c3d9ee175f6b7c",
        "sha256": "7c534bcb778feea626c0e38f2a643352ca34c9c0acc6ffb9e29166359d0894ab"
      },
      "downloads": -1,
      "filename": "commented_configparser-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "17db1325816bf3bdf3c3d9ee175f6b7c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 8361,
      "upload_time": "2022-11-05T20:17:28",
      "upload_time_iso_8601": "2022-11-05T20:17:28.565287Z",
      "url": "https://files.pythonhosted.org/packages/8b/3d/d27a0786e1547573896a5a16727860c4a7583514ce8275e5b2e99f369565/commented_configparser-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "57c39482163130fbf6913b62c3f81dfc439e47e487be5358d01eb4d51abf5299",
        "md5": "b2764c998388f6495153ae2ea8d67780",
        "sha256": "f568158442f0c71e345e736b3adf097f42a2568f03bdb3b31132cb31c1b7e851"
      },
      "downloads": -1,
      "filename": "commented-configparser-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b2764c998388f6495153ae2ea8d67780",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 8022,
      "upload_time": "2022-11-05T20:17:30",
      "upload_time_iso_8601": "2022-11-05T20:17:30.062622Z",
      "url": "https://files.pythonhosted.org/packages/57/c3/9482163130fbf6913b62c3f81dfc439e47e487be5358d01eb4d51abf5299/commented-configparser-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}