{
  "info": {
    "author": "Matt Lyon",
    "author_email": "ml18692@bristol.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# GWAS-VCF Python parser\n\n<!-- badges: start -->\n[![Build Status](https://github.com/MRCIEU/pygwasvcf/actions/workflows/test.yml/badge.svg)](https://github.com/MRCIEU/pygwasvcf/actions)\n[![DOI](https://img.shields.io/badge/doi-10.1186%2Fs13059--020--02248--0-blue)](https://doi.org/10.1186/s13059-020-02248-0)\n<!-- badges: end -->\n\nThe package provides a thin wrapper around [pysam](https://pysam.readthedocs.io/en/latest/index.html) and [rsidx](https://github.com/bioforensics/rsidx) to parse VCF files containing GWAS summary statistics and trait metadata. See also [gwasvcf](https://github.com/MRCIEU/gwasvcf) an R package for parsing GWAS-VCF files.\n\nParses GWAS-VCF with version 1.0 of the [specification](https://github.com/MRCIEU/gwas-vcf-specification/releases/tag/1.0.0)\n\n## Install\n\n```shell script\npip install git+https://github.com/mrcieu/pygwasvcf\n```\n\n## Data\n\nDownload over 10,000 GWAS-VCF files from  <https://gwas.mrcieu.ac.uk>\n\n## Examples\n\nRead GWAS trait/study metadata\n\n```python\nimport pygwasvcf\nwith pygwasvcf.GwasVcf(\"/path/to/gwas.vcf.gz\") as g:\n    # print dictionary of GWAS metadata\n    print(g.get_metadata())\n```\n\nQuery variant-trait association(s) by chromosome and position location\n\n```python\nimport pygwasvcf\nwith pygwasvcf.GwasVcf(\"/path/to/gwas.vcf.gz\") as g:\n    # query by chromosome and position interval\n    for variant in g.query(contig=\"1\", start=1, stop=1):\n        print(variant)\n```\n\nQuery variant-trait association(s) by dbSNP rsID\n\n```python\nimport pygwasvcf\nwith pygwasvcf.GwasVcf(\"/path/to/gwas.vcf.gz\") as g:\n    # index on dbSNP identifier\n    # based on [rsidx](https://github.com/bioforensics/rsidx)\n    # only need to do this once and then provide the index path to the constructor\n    # i.e. GwasVcf(\"/path/to/gwas.vcf.gz\", rsidx_path=\"/path/to/gwas.vcf.gz.rsidx\")\n    g.index_rsid()\n\n    # rapid query by rsID  \n    for variant in g.query(variant_id=\"rs1245\"):\n        print(variant)\n```\n\nExtract summary statistics from a variant object\n\n```python\nimport pygwasvcf\nwith pygwasvcf.GwasVcf(\"/path/to/gwas.vcf.gz\") as g:\n    # query by chromosome and position interval\n    for variant in g.query(contig=\"1\", start=1, stop=1):\n        # print variant-trait P value\n        print(pygwasvcf.VariantRecordGwasFuns.get_pval(variant, \"trait_name\"))\n        # print variant-trait SE\n        print(pygwasvcf.VariantRecordGwasFuns.get_se(variant, \"trait_name\"))\n        # print variant-trait beta\n        print(pygwasvcf.VariantRecordGwasFuns.get_beta(variant, \"trait_name\"))\n        # print variant-trait allele frequency\n        print(pygwasvcf.VariantRecordGwasFuns.get_af(variant, \"trait_name\"))\n        # print variant-trait ID\n        print(pygwasvcf.VariantRecordGwasFuns.get_id(variant, \"trait_name\"))\n        # create and print ID on-the-fly if missing\n        print(pygwasvcf.VariantRecordGwasFuns.get_id(variant, \"trait_name\", create_if_missing=True))\n        # print variant-trait sample size\n        print(pygwasvcf.VariantRecordGwasFuns.get_ss(variant, \"trait_name\"))\n        # print variant-trait total sample size from header if per-variant is missing\n        print(pygwasvcf.VariantRecordGwasFuns.get_ss(variant, \"trait_name\", g.get_metadata()))\n        # print variant-trait number of cases\n        print(pygwasvcf.VariantRecordGwasFuns.get_nc(variant, \"trait_name\"))\n        # print variant-trait total cases from header if per-variant is missing\n        print(pygwasvcf.VariantRecordGwasFuns.get_nc(variant, \"trait_name\", g.get_metadata()))\n```\n\n## Documentation\n\nAPI documentation available from <https://mrcieu.github.io/pygwasvcf>\n\n## Citation\n\n```\nThe variant call format provides efficient and robust storage of GWAS summary statistics. Lyon MS, Andrews SJ, Elsworth B, Gaunt TR, Hemani G, Marcora E. Genome Biol. 22, 32 (2021).\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MRCIEU/pygwasvcf",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pygwasvcf",
    "package_url": "https://pypi.org/project/pygwasvcf/",
    "platform": null,
    "project_url": "https://pypi.org/project/pygwasvcf/",
    "project_urls": {
      "Homepage": "https://github.com/MRCIEU/pygwasvcf"
    },
    "release_url": "https://pypi.org/project/pygwasvcf/0.0.4/",
    "requires_dist": [
      "pysam",
      "pytest"
    ],
    "requires_python": ">=3.6",
    "summary": "A package for reading GWAS summary statistics stored in VCF/BCF format",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13218523,
  "releases": {
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b249e50e0ee931ae0ff62c62fd66a81f75738283feae0e4ef0c63f4b06c8333b",
          "md5": "94e8dd6cea1ffa1226d41a1db0b2d0ee",
          "sha256": "dcd2a390a738448718f4acf9b1f4628aca6e3d7c439f35074ead2a92be0673f8"
        },
        "downloads": -1,
        "filename": "pygwasvcf-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94e8dd6cea1ffa1226d41a1db0b2d0ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8757,
        "upload_time": "2022-03-18T16:22:05",
        "upload_time_iso_8601": "2022-03-18T16:22:05.718493Z",
        "url": "https://files.pythonhosted.org/packages/b2/49/e50e0ee931ae0ff62c62fd66a81f75738283feae0e4ef0c63f4b06c8333b/pygwasvcf-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9285892c15374c7eab9dd5ed16ee57e840d1b2a34468baad424a624955372bdb",
          "md5": "3e2f660e4ce299290c6ddb4867276566",
          "sha256": "399d5847c2d63c97eaaaf9df06a07e77bca169e8b072fdca1f748a6a6bfc873e"
        },
        "downloads": -1,
        "filename": "pygwasvcf-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3e2f660e4ce299290c6ddb4867276566",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7088,
        "upload_time": "2022-03-18T16:22:06",
        "upload_time_iso_8601": "2022-03-18T16:22:06.893071Z",
        "url": "https://files.pythonhosted.org/packages/92/85/892c15374c7eab9dd5ed16ee57e840d1b2a34468baad424a624955372bdb/pygwasvcf-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b249e50e0ee931ae0ff62c62fd66a81f75738283feae0e4ef0c63f4b06c8333b",
        "md5": "94e8dd6cea1ffa1226d41a1db0b2d0ee",
        "sha256": "dcd2a390a738448718f4acf9b1f4628aca6e3d7c439f35074ead2a92be0673f8"
      },
      "downloads": -1,
      "filename": "pygwasvcf-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "94e8dd6cea1ffa1226d41a1db0b2d0ee",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8757,
      "upload_time": "2022-03-18T16:22:05",
      "upload_time_iso_8601": "2022-03-18T16:22:05.718493Z",
      "url": "https://files.pythonhosted.org/packages/b2/49/e50e0ee931ae0ff62c62fd66a81f75738283feae0e4ef0c63f4b06c8333b/pygwasvcf-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9285892c15374c7eab9dd5ed16ee57e840d1b2a34468baad424a624955372bdb",
        "md5": "3e2f660e4ce299290c6ddb4867276566",
        "sha256": "399d5847c2d63c97eaaaf9df06a07e77bca169e8b072fdca1f748a6a6bfc873e"
      },
      "downloads": -1,
      "filename": "pygwasvcf-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "3e2f660e4ce299290c6ddb4867276566",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7088,
      "upload_time": "2022-03-18T16:22:06",
      "upload_time_iso_8601": "2022-03-18T16:22:06.893071Z",
      "url": "https://files.pythonhosted.org/packages/92/85/892c15374c7eab9dd5ed16ee57e840d1b2a34468baad424a624955372bdb/pygwasvcf-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}