{
  "info": {
    "author": "Devjeet Roy",
    "author_email": "devjeetrr@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pyTrace\n\nPytrace provides fixation algorithms for aggregating gazes, as well as tools to help you deal with edits that occur during eyetracking sessions.\n\n\n\n## Getting started\n\n\n### Installation\n\n#### Requirements\npytrace requires python 3.8.5\n#### Installation\nYou can install pytrace using\n```\npip install pytrace\n```\n\n\npyTrace comes with a command line interface as well as a python library. \n\nTo use either version, you need 3 things:\n* itrace core file output\n* gaze file output\n* changelog\n* original source file(s)\n\n\nTo get started:\n\n```python\n# import pytrace\nfrom pytrace import fixation_filter, Tracker\n\n# run fixation filter to get fixations\nfixations = fixation_filter(gazes, changelog, sources, **opts)\n\n# Now track edits using Tracker\n\ntracker = Tracker(fixations, changelog, sources, language)\n# Note that you need to pass in the source code language,\n# to help `pytrace` determine which parser to use.\n```\n\n## Base Functionality\n\nThe main goal of `Tracker` is to track fixations and source code tokens across edits. Once you create a `Tracker` you can query it to get snapshots etc.\n\n### Snapshots\n`Tracker` maintains a list of snapshots corresponding to the original file and subsequent edits. The original version is stored at index `0` and the first edit is stored at index `1`.\n\n```python\n# get original\ntracker.get_snapshot(0)\n\n# get first edit\ntracker.get_snapshot(1)\n```\n\nEach snapshot is represented by a `Snapshot`. A `Snapshot` is defined as:\n\n```python\nclass Snapshot:\n    id: int\n    source: Source\n    tokens: Tuple[Token, ...]\n    changes: Tuple[TokenChange, ...] = ()\n    time: float = 0.0\n```\n`Snapshot.time` represents the time at which a snapshot was created. It corresponds to the timestamp in the changelog that was used to create this `Snapshot`.\n\n`Snapshot.tokens` represents the parsed source code tokens.\n`Snapshot.changes` represents all the token changes that happened to this `Snapshot` since the last version. For the  `Snapshot` representing the original source, `Snapshot.changes` is empty.\n\n`Snapshots.source` is a `Source` object, containing the raw text of the source code, as well as mappings from text indices to line/column numbers and vice-versa. It is defined as follows:\n```python\n@dataclass(frozen=True)\nclass Source:\n    text: str\n    mapping: PositionMapping\n    language: str\n```\n\n### Gazes\n\nYou can retreive gazes for a given time window as follows:\n\n```python\ntracker.get_gazes()\n# all gazes\n\ntracker.get_gazes(start, end)\n# returns a dataframe that is filtered\n```\n\nThe gaze dataframe is simply a `pandas.DataFrame` containing the original gazes, with some additional columns:\n* `syntax_node` - The syntax node associated with the gaze. `None` if the gaze doesn't fall on a token.\n* `syntax_node_id` - A stable id for the token associated with this gaze. `None` if the gaze doesn't fall on a token.\n\n`syntax_node_id` is a unique id that is assigned to each token in the source code across different snapshots. For a given token, this id is unique across time and space. Thus, you can use this id to determine how \n### diffs\n```python\ntracker.diff(0, 2) # gives you the diff between version 0 & version 1\n```\n\n```python\ntracker.diff_time(2300, 2400)\n    # gives you the diff between time unit 2300 & time unit 2400\n```\n\n\nA `SnapshotDiff` is defined as follows:\n```python\nclass SnapshotDiff(NamedTuple):\n    old: Snapshot\n    new: Snapshot\n    token_changes: List[TokenChange]\n    gaze_changes: List[GazeChange]\n    gazes: pd.DataFrame\n```\n\nIt gives you a list of all token changes and gaze changes. \n\nToken changes can be of 3 types: `inserted`, `moved` or `deleted`.\n\nGaze changes can be of 2 types: `deleted` or `moved`. (`deleted` means that the token to which the gaze was mapped to has been removed from the source.)\n\nBy default, `tracker.diff(start, end)` will include all the gazes from the start of the experiment (the time at which the first gaze is recorded), up until the `end` snapshot time. If you want to only include gazes within the timespan of the `start` and `end` snapshots, you can pass an optional parameter:\n\n```python\ndiff = tracker.diff(0, 3, window_only=True)\n```\n\n`pytrace` also provides a pretty-printer to help you print diffs for inspecting the data. It supports print gaze changes, token changes and `SnapshotDiffs`.\n\n```python\nfrom pytrace import pprint\n\ndiff = tracker.diff(2, 3)\n\npprint(diff)\npprint(diff.token_changes)\npprint(diff.gaze_changes)\n```\n\n`pytrace` provides a module `transforms` to help you manipulate `pytrace` structures including `Snapshots` and `SnapshotDiff`.\n\n```python\nfrom pytrace import transforms as T\n\ndiff = tracker.diff(2, 5)\n\n# TODO\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/devjeetrr/pytrace",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gazel-devjeetr",
    "package_url": "https://pypi.org/project/gazel-devjeetr/",
    "platform": "",
    "project_url": "https://pypi.org/project/gazel-devjeetr/",
    "project_urls": {
      "Homepage": "https://github.com/devjeetrr/pytrace"
    },
    "release_url": "https://pypi.org/project/gazel-devjeetr/0.0.7/",
    "requires_dist": null,
    "requires_python": ">=3.8.5",
    "summary": "Track fixations across edits for eyetracking experiments",
    "version": "0.0.7",
    "yanked": true,
    "yanked_reason": null
  },
  "last_serial": 8713896,
  "releases": {
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3248da7851ebffc3dca2c61adad028df19e47cbdac3d297c0a9a1651cce0cf42",
          "md5": "5eb3e5bae2b14dc53badc790536192dd",
          "sha256": "7ebee3fd69835833d654b7e2d7f69bce7fcff29487d294f712eba287aec783a6"
        },
        "downloads": -1,
        "filename": "gazel_devjeetr-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5eb3e5bae2b14dc53badc790536192dd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.5",
        "size": 40701,
        "upload_time": "2020-11-21T04:47:02",
        "upload_time_iso_8601": "2020-11-21T04:47:02.512983Z",
        "url": "https://files.pythonhosted.org/packages/32/48/da7851ebffc3dca2c61adad028df19e47cbdac3d297c0a9a1651cce0cf42/gazel_devjeetr-0.0.7-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0bf1008668a7823990db1cb41d6b6fe1bbc7b42defd770e6ead128deedc51fc7",
          "md5": "4565569cdf62d06f0910016769cf3b01",
          "sha256": "7772a60d1c94df03fc8d76cf1c194e23a24f16df65927afda521984a211ac7fb"
        },
        "downloads": -1,
        "filename": "gazel-devjeetr-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "4565569cdf62d06f0910016769cf3b01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.5",
        "size": 19871,
        "upload_time": "2020-11-21T04:47:04",
        "upload_time_iso_8601": "2020-11-21T04:47:04.059986Z",
        "url": "https://files.pythonhosted.org/packages/0b/f1/008668a7823990db1cb41d6b6fe1bbc7b42defd770e6ead128deedc51fc7/gazel-devjeetr-0.0.7.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3248da7851ebffc3dca2c61adad028df19e47cbdac3d297c0a9a1651cce0cf42",
        "md5": "5eb3e5bae2b14dc53badc790536192dd",
        "sha256": "7ebee3fd69835833d654b7e2d7f69bce7fcff29487d294f712eba287aec783a6"
      },
      "downloads": -1,
      "filename": "gazel_devjeetr-0.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5eb3e5bae2b14dc53badc790536192dd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8.5",
      "size": 40701,
      "upload_time": "2020-11-21T04:47:02",
      "upload_time_iso_8601": "2020-11-21T04:47:02.512983Z",
      "url": "https://files.pythonhosted.org/packages/32/48/da7851ebffc3dca2c61adad028df19e47cbdac3d297c0a9a1651cce0cf42/gazel_devjeetr-0.0.7-py3-none-any.whl",
      "yanked": true,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0bf1008668a7823990db1cb41d6b6fe1bbc7b42defd770e6ead128deedc51fc7",
        "md5": "4565569cdf62d06f0910016769cf3b01",
        "sha256": "7772a60d1c94df03fc8d76cf1c194e23a24f16df65927afda521984a211ac7fb"
      },
      "downloads": -1,
      "filename": "gazel-devjeetr-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "4565569cdf62d06f0910016769cf3b01",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.5",
      "size": 19871,
      "upload_time": "2020-11-21T04:47:04",
      "upload_time_iso_8601": "2020-11-21T04:47:04.059986Z",
      "url": "https://files.pythonhosted.org/packages/0b/f1/008668a7823990db1cb41d6b6fe1bbc7b42defd770e6ead128deedc51fc7/gazel-devjeetr-0.0.7.tar.gz",
      "yanked": true,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}