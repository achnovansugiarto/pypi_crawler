{
  "info": {
    "author": "Oliver Szabo",
    "author_email": "oleewere@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# filecollector\n\n![build](https://github.com/oleewere/filecollector/workflows/build/badge.svg)\n[![PyPI version](https://badge.fury.io/py/filecollector.svg)](https://badge.fury.io/py/filecollector)\n[![Docker Pulls](https://img.shields.io/docker/pulls/oleewere/filecollector.svg)](https://hub.docker.com/r/oleewere/filecollector/)\n\nService for collecting and processing files (with hooks)\n\n## Features\n\n- collect files and compress them (on command)\n- anonymization\n- run custom scripts on output file / processed files\n- start/stop simple fileserver (at collect output location)\n- stream collected files to fluentd (line by line)\n\n## Requirements\n\n- python 3.5+\n- pip\n\n## Installation\n\n```bash\npip install filecollector\n```\n\n## Usage\n\nIt has 2 main components right now: collector and server. Collector is responsible to collect/anonymize the files and run hook scripts on those. Server is only a browser for the collected files.\n\nAt the start you need to create a `yaml` configuration file for the collector.\nOnly this configuration is required as an input for `filecollector`.\n\n#### Start the collector\n\n```\nfilecollector collector start --config filecollector.yaml -p /my/pid/dir\n```\n\n\n#### Start the server\n\n```\nfilecollector server start --config filecollector.yaml -p /my/pid/dir\n```\n\n### Configration\n\n### Simple configuration example\n\n```yaml\nserver:\n    port: 1999\n    folder: \"../example/files\" \ncollector:\n    files:\n    - path: \"example/example*.txt\"\n      label: \"example\"\n    rules:\n    - pattern:  \\d{4}[^\\w]\\d{4}[^\\w]\\d{4}[^\\w]\\d{4}\n      replacement: \"[REDACTED]\"\n    processFileScript: example/scripts/process_file.sh\n    compress: true\n    useFullPath: true\n    outputScript: example/scripts/output_file.sh\n    processFilesFolderScript: example/scripts/tmp_folder.sh\n    deleteProcessedTemplateFiles: true\n    outputLocation: \"example/files\"\n```\n\nRunning simple example:\n\n```bash\n# start collector \nfilecollector collector start --config example/filecollector.yaml -p /my/pid/dir\n# start server for browsing\nfilecollector server start --config example/filecollector.yaml -p /my/pid/dir\n```\n\nRunning with docker: \n\n```bash\n# collector only\ndocker run --rm -v /my/path/to/config:/my/path/to/config oleewere/filecollector:latest --config /my/path/to/config/filecollector.yaml\n```\n\n### Fluentd configuration example\n\n```yaml\ncollector:\n    files:\n    - path: \"example/example*.txt\"\n      label: \"txt\"\n    rules:\n    - pattern:  \\d{4}[^\\w]\\d{4}[^\\w]\\d{4}[^\\w]\\d{4}\n      replacement: \"[REDACTED]\"\n    compress: false\n    useFullPath: true\n    deleteProcessedTempFilesOneByOne: true\n    outputLocation: \"example/files\"\n    fluentProcessor:\n      host: \"localhost\"\n      port: 24224\n      tag: example\n```\n\nFluentd configuration:\n\n```\n<source>\n  @type forward\n  port 24224\n  bind 0.0.0.0\n</source>\n\n<match example.**>\n   @type stdout\n</match>\n```\n\nRunning fluentd example:\n\n```bash\n# start fluentd \nfluentd --config example/fluentd.conf\n# start collector \nfilecollector collector start --config example/fluentd-filecollector.yaml -p /my/pid/dir\n```\n\n### Configuration options\n\n#### `server`\n\nThe server block, it contains configurations related with the filecollector server component.\n\n#### `server.port`\n\nPort that will be used by the filecollector server.\n\n#### `server.folder`\n\nThe folder that is server by the file server.\n\n#### `collector`\n\nThe collector block, it contains configurations related with the filecollector collector component.\n\n#### `collector.files`\n\nList of files (with `path` and `label` fields are required) that needs to be collected.\n\n#### `collector.files.path`\n\nFilename or wildcard that represents the files that is needed to be collected.\n\n#### `collector.files.label`\n\nIt will be used as a first level folder inside `outputLocation` for the file collection. E.g. if this value is `mylabel`, the output will go into `<outputLocation>/mylabel`\n\n#### `collector.files.folderPrefix`\n\nIf it's set, the filecollector will put the files into this folder (inside `outputLocation`, but before `label`)\n\n#### `collector.files.useFullPath`\n\nUse full path for processed files (inside `outputLocation`). Can be useful if because of the wildcard patterns, the base file name are the same for different files from different folders. It overrides the `collector.useFullPath` option.\n\n#### `collector.files.excludes`\n The `path` options can be used as wildcards.\nThere are other options like: `useFullPath` or `excludes`. The `useFullPath` option is the same as the below one, but it overrides the global behavior (default: false). The `excludes` option is a list of path patterns that should be excluded from `path` pattern matches.\n\n#### `collector.rules`\n\nList of anonymization rules that can be run against the file inputs. (`pattern` field for matching, `replacement` for the replacement on match)\n\n#### `collector.compress`\n\nAt the end of the filecollection, the output folder is compressed. Default value is `true`.\n\n#### `collector.compressFormat`\n\nCompression format, possible values: `zip`, `tar`, `gztar`, `bztar`. Default value is `zip`.\n\n#### `collector.outputLocation`\n\nOutput location (directory), where the processed file(s) will be stored.\n\n#### `collector.useFullPath`\n\nUse full path for processed files (inside `outputLocation`). Can be useful if because of the wildcard patterns, the base file name are the same for different files from different folders. Default value is `true`.\n\n#### `collector.checkDiskSpace`\n\nIF this option is set, before file processing - based on the file size and `requiredDiskSpaceRatio` option - it will check you have enough space for copying those files into your working directory or not. Default value is `true`.\n\n#### `collector.requiredDiskSpaceRatio`\n\nThis value is used for `checkDiskSpace` option. The required disk space will be calculated with this value (as a multiplier, e.g. if my files full size is 100MB and this setting is 1.6, the processing will require 160MB free space). Default value is `1.0`.\n\n#### `collector.processFileScript`\n\nScript that runs agains 1 processed file. It gets the filename and the label for a processed file.\n\n#### `collector.processFilesFolderScript`\n\nScript that runs once after the files are collected. It gets the folder name (where the files are processed) as an input.\n\n#### `collector.preProcessScript`\n\nScript that runs before the files are collected. It gets the folder name (where the files are processed) as an input.\n\n#### `collector.outputScript`\n\nScript that runs once with the compressed output file name as an input.\n\n#### `collector.deleteCompressedFile`\n\nDelete compressed file at the end of the file collection. That can be useful e.g. if an output script upload the compressed file somewhere adn it is needed to do a cleanup. Default value is `false`.\n\n#### `collector.deleteProcessedTempFiles`\n\nAfter collection of the files + compression, the collected files are deleted. Can be useful to disable this behaviour `compress` option is disabled. Default value is `true`.\n\n#### `collector.deleteProcessedTempFilesOneByOne`\n\nIf this option is set, files are deleted right after processed (one at a time). That can be useful if compression is disabled, and you would like to stream large files to fluentd. Default value is `false`.\n\n#### `collector.fluentProcessor`\n\nFluentd related section for processing files line by line - streaming data by fluentd forward protocol.\n\n#### `collector.fluentProcessor.host`\n\nFluentd host (for forward protocol). Default value: `localhost`.\n\n#### `collector.fluentProcessor.port`\n\nFluentd port (for forward protocol). Default value: `24224`.\n\n#### `collector.fluentProcessor.tag`\n\nFluentd tag for streaming lines. The generated tag for forward protocol is `<collector.fluentProcessor.tag>.<file label for monitored file>`.\n\n#### `collector.fluentProcessor.messageField`\n\nThe processed lines are mapped for this field before data has been sent to Fluentd. Default value: `message`.\n\n#### `collector.fluentProcessor.includeTime`\n\nIf this is enabled, current time is included in the fluentd data event. (as `time` field). Default value: `false`.\n\n#### `collector.logger`\n\nLogger related configurations for the collector.\n\n#### `collector.logger.level`\n\nLogger level that is used during logging.\n\n#### `collector.logger.format`\n\nFormat of the log events. Default value is `%(message)s`.\n\n#### `collector.logger.file`\n\nFile where the log will write the logging events, if it is not set, only stdout will be used.\n\n## Contributing\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/oleewere/filecollector",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "filecollector",
    "package_url": "https://pypi.org/project/filecollector/",
    "platform": "",
    "project_url": "https://pypi.org/project/filecollector/",
    "project_urls": {
      "Homepage": "https://github.com/oleewere/filecollector"
    },
    "release_url": "https://pypi.org/project/filecollector/0.2.1/",
    "requires_dist": [
      "PyYAML (>=5.3.1)",
      "pid (>=3.0.3)",
      "fluent-logger (>=0.9.6)"
    ],
    "requires_python": ">=3.5",
    "summary": "Simple file collector - compress/serve/send/anonymizie files",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7559817,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e83fb7161e3b36e4bc88745138ad802ad7dcb9de192093b1f956284b7b649089",
          "md5": "435deeff4b06e627a74b9865291bfcf9",
          "sha256": "dd75912b88c17f4832b58d3ec15a67cfec67e51b6d61b62a90b56264171d9c6f"
        },
        "downloads": -1,
        "filename": "filecollector-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "435deeff4b06e627a74b9865291bfcf9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7",
        "size": 12281,
        "upload_time": "2020-04-27T13:12:56",
        "upload_time_iso_8601": "2020-04-27T13:12:56.852916Z",
        "url": "https://files.pythonhosted.org/packages/e8/3f/b7161e3b36e4bc88745138ad802ad7dcb9de192093b1f956284b7b649089/filecollector-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f45acf012700e6babf3a71d3e906e93c3dd60d6e4a43b974f4f64e853a43925d",
          "md5": "db0f62b78aa4fc3f5759e1acf3255536",
          "sha256": "db8fe4ffb4cb954fda386bae64fda6437d1fb6fe8cad10e6fedd1a59bd63ebd1"
        },
        "downloads": -1,
        "filename": "filecollector-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "db0f62b78aa4fc3f5759e1acf3255536",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 10700,
        "upload_time": "2020-04-27T13:12:58",
        "upload_time_iso_8601": "2020-04-27T13:12:58.731253Z",
        "url": "https://files.pythonhosted.org/packages/f4/5a/cf012700e6babf3a71d3e906e93c3dd60d6e4a43b974f4f64e853a43925d/filecollector-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1305fd427c69e70bd9fa665dd6a13ee81d0d05d56af1fbe9492d4de08f6ad511",
          "md5": "32c58b2c0144dbb8d1150d5fe2a7f593",
          "sha256": "5879ba834dfb12b2a899fc9d93932ae696095f4afbf4b004418fd0960b43fbb0"
        },
        "downloads": -1,
        "filename": "filecollector-0.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32c58b2c0144dbb8d1150d5fe2a7f593",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7",
        "size": 12388,
        "upload_time": "2020-04-27T15:10:34",
        "upload_time_iso_8601": "2020-04-27T15:10:34.938080Z",
        "url": "https://files.pythonhosted.org/packages/13/05/fd427c69e70bd9fa665dd6a13ee81d0d05d56af1fbe9492d4de08f6ad511/filecollector-0.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e3b625f65945b1523ded4107c92a6f6fe6edd5f7cd6b992c6901d09eade45c0",
          "md5": "8a997d6645f7e339034ef42fab5195ab",
          "sha256": "4a3247932a99036c66ec6e80298684f634a8abbf8678bb59981107033ab5f343"
        },
        "downloads": -1,
        "filename": "filecollector-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8a997d6645f7e339034ef42fab5195ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 11293,
        "upload_time": "2020-04-27T15:10:35",
        "upload_time_iso_8601": "2020-04-27T15:10:35.815659Z",
        "url": "https://files.pythonhosted.org/packages/4e/3b/625f65945b1523ded4107c92a6f6fe6edd5f7cd6b992c6901d09eade45c0/filecollector-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29be46ae02f887e90a9afd6ecd889f08366deeb1406009f5e523c7870ce9ce3c",
          "md5": "d535a9815b1733e4e35d4f83dec5bf1d",
          "sha256": "92d435ae79687fbbb2d9946589030fcd8622d3ef144af1310fa719dc77346b56"
        },
        "downloads": -1,
        "filename": "filecollector-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d535a9815b1733e4e35d4f83dec5bf1d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7",
        "size": 14451,
        "upload_time": "2020-05-01T19:33:46",
        "upload_time_iso_8601": "2020-05-01T19:33:46.346440Z",
        "url": "https://files.pythonhosted.org/packages/29/be/46ae02f887e90a9afd6ecd889f08366deeb1406009f5e523c7870ce9ce3c/filecollector-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50a13046d72aa656f3f794e7dd68286aa4d1f4fb3ab512f4a7d364e6f5e3f411",
          "md5": "18f6f7c7170a40458d75337e7842e946",
          "sha256": "777e7a53f294774735d2b06bf9e3ece8d6e94044ca402e2389b75ac730553132"
        },
        "downloads": -1,
        "filename": "filecollector-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "18f6f7c7170a40458d75337e7842e946",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 13864,
        "upload_time": "2020-05-01T19:33:47",
        "upload_time_iso_8601": "2020-05-01T19:33:47.174770Z",
        "url": "https://files.pythonhosted.org/packages/50/a1/3046d72aa656f3f794e7dd68286aa4d1f4fb3ab512f4a7d364e6f5e3f411/filecollector-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b1ed5f187a2e5a635cb78229a433bb1f74b84883ddbc256eb61b0081dd53cbb",
          "md5": "fb5b2defc1a3aec49e6eb8850feb793b",
          "sha256": "0ae39ca07c028c3de9df13f9d9641c2bce35cb639fa9b8a9741963731e353347"
        },
        "downloads": -1,
        "filename": "filecollector-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb5b2defc1a3aec49e6eb8850feb793b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7",
        "size": 13790,
        "upload_time": "2020-05-27T10:10:09",
        "upload_time_iso_8601": "2020-05-27T10:10:09.128158Z",
        "url": "https://files.pythonhosted.org/packages/0b/1e/d5f187a2e5a635cb78229a433bb1f74b84883ddbc256eb61b0081dd53cbb/filecollector-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db7f4aa762bcc038cc48df043ebf3f1525c338b0caf4da5e1b9a80cea4a43f60",
          "md5": "c9323f710ad91f017b9533e18591cb31",
          "sha256": "35c62ac6d5ced3481d34bc93d0e64721529d7c9eabe54de40b584556eb5f810a"
        },
        "downloads": -1,
        "filename": "filecollector-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c9323f710ad91f017b9533e18591cb31",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 13883,
        "upload_time": "2020-05-27T10:10:09",
        "upload_time_iso_8601": "2020-05-27T10:10:09.944564Z",
        "url": "https://files.pythonhosted.org/packages/db/7f/4aa762bcc038cc48df043ebf3f1525c338b0caf4da5e1b9a80cea4a43f60/filecollector-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13d966b0b07edda519fbb9385f082911a7ac8b291a5b77783f9cd3efbdfa331d",
          "md5": "0ccbd9177ee6e63b6babdde337b9b0be",
          "sha256": "8dcb6f8402cb3ff0cb82b166b67575d3abed28ffe75e4bdee888f6c1a7248e90"
        },
        "downloads": -1,
        "filename": "filecollector-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ccbd9177ee6e63b6babdde337b9b0be",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7",
        "size": 14061,
        "upload_time": "2020-06-15T14:49:52",
        "upload_time_iso_8601": "2020-06-15T14:49:52.363386Z",
        "url": "https://files.pythonhosted.org/packages/13/d9/66b0b07edda519fbb9385f082911a7ac8b291a5b77783f9cd3efbdfa331d/filecollector-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32baf41ea10559dfd4d6ad001b6c6b700011a0ac166a00435653f26bcde196f5",
          "md5": "7e37fda9f097103948e953998f1b9274",
          "sha256": "311432637178ce87ab49e6e3751ff20189f5cd0c18ad71ccfda9e8efc9cbd357"
        },
        "downloads": -1,
        "filename": "filecollector-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7e37fda9f097103948e953998f1b9274",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 14219,
        "upload_time": "2020-06-15T14:49:53",
        "upload_time_iso_8601": "2020-06-15T14:49:53.152068Z",
        "url": "https://files.pythonhosted.org/packages/32/ba/f41ea10559dfd4d6ad001b6c6b700011a0ac166a00435653f26bcde196f5/filecollector-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68f2fa20ea8d1f6cd2f790875916127aad3d26a696ba5b6f33c0495d954cb906",
          "md5": "f70a58930e8ea997e3bdf819fa8f543b",
          "sha256": "65155f969d8ec67a95f4e154ba16489ff5000249efaa0a8edc635efe3147cc0d"
        },
        "downloads": -1,
        "filename": "filecollector-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f70a58930e8ea997e3bdf819fa8f543b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 15450,
        "upload_time": "2020-06-19T16:15:57",
        "upload_time_iso_8601": "2020-06-19T16:15:57.316684Z",
        "url": "https://files.pythonhosted.org/packages/68/f2/fa20ea8d1f6cd2f790875916127aad3d26a696ba5b6f33c0495d954cb906/filecollector-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a2a9b441df4172555ed5d6410ef434046549153c37dc9280ee982572b4889ab",
          "md5": "65382ea4d1d341909c216bfea0eda8f4",
          "sha256": "553f4a47e62cd4feafdd4375a114a6ee02b45c30c3a87f60b8b20a536077b5ab"
        },
        "downloads": -1,
        "filename": "filecollector-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "65382ea4d1d341909c216bfea0eda8f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 16406,
        "upload_time": "2020-06-19T16:15:58",
        "upload_time_iso_8601": "2020-06-19T16:15:58.252890Z",
        "url": "https://files.pythonhosted.org/packages/1a/2a/9b441df4172555ed5d6410ef434046549153c37dc9280ee982572b4889ab/filecollector-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "535bc4f9394ea10cad94d3b9d7785bdb57eda66a96a8543ee886f67bdece3146",
          "md5": "754a2c6391d9be839e9c2f18a9e3701f",
          "sha256": "bdd7f2433aebad30a7c7be25d0c2f65629b8eb0e9692369323e5e411e881c4ee"
        },
        "downloads": -1,
        "filename": "filecollector-0.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "754a2c6391d9be839e9c2f18a9e3701f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 15936,
        "upload_time": "2020-06-25T11:20:21",
        "upload_time_iso_8601": "2020-06-25T11:20:21.331654Z",
        "url": "https://files.pythonhosted.org/packages/53/5b/c4f9394ea10cad94d3b9d7785bdb57eda66a96a8543ee886f67bdece3146/filecollector-0.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6e51d48ad2b35a9e9bce883e07a4d52d30b95d57b370126af6ccf2301673319",
          "md5": "8359fa3aef97a38a7122547392ca9ac6",
          "sha256": "cd0bc7a173b2f8caa04855a639c04f60049de7f09db8b856a0df911e77b36f59"
        },
        "downloads": -1,
        "filename": "filecollector-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8359fa3aef97a38a7122547392ca9ac6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 16934,
        "upload_time": "2020-06-25T11:20:22",
        "upload_time_iso_8601": "2020-06-25T11:20:22.409672Z",
        "url": "https://files.pythonhosted.org/packages/d6/e5/1d48ad2b35a9e9bce883e07a4d52d30b95d57b370126af6ccf2301673319/filecollector-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "535bc4f9394ea10cad94d3b9d7785bdb57eda66a96a8543ee886f67bdece3146",
        "md5": "754a2c6391d9be839e9c2f18a9e3701f",
        "sha256": "bdd7f2433aebad30a7c7be25d0c2f65629b8eb0e9692369323e5e411e881c4ee"
      },
      "downloads": -1,
      "filename": "filecollector-0.2.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "754a2c6391d9be839e9c2f18a9e3701f",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.5",
      "size": 15936,
      "upload_time": "2020-06-25T11:20:21",
      "upload_time_iso_8601": "2020-06-25T11:20:21.331654Z",
      "url": "https://files.pythonhosted.org/packages/53/5b/c4f9394ea10cad94d3b9d7785bdb57eda66a96a8543ee886f67bdece3146/filecollector-0.2.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d6e51d48ad2b35a9e9bce883e07a4d52d30b95d57b370126af6ccf2301673319",
        "md5": "8359fa3aef97a38a7122547392ca9ac6",
        "sha256": "cd0bc7a173b2f8caa04855a639c04f60049de7f09db8b856a0df911e77b36f59"
      },
      "downloads": -1,
      "filename": "filecollector-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8359fa3aef97a38a7122547392ca9ac6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 16934,
      "upload_time": "2020-06-25T11:20:22",
      "upload_time_iso_8601": "2020-06-25T11:20:22.409672Z",
      "url": "https://files.pythonhosted.org/packages/d6/e5/1d48ad2b35a9e9bce883e07a4d52d30b95d57b370126af6ccf2301673319/filecollector-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}