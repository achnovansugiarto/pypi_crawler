{
  "info": {
    "author": "",
    "author_email": "Saransh Chopra <saransh0701@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Typing :: Typed"
    ],
    "description": "# releaseup\n\n![releaseup](https://user-images.githubusercontent.com/74055102/190684416-d3f15189-8c4f-4a11-a374-500e8496d9b1.png)\n\n[![CI](https://github.com/Saransh-cpp/releaseup/actions/workflows/ci.yml/badge.svg)](https://github.com/Saransh-cpp/releaseup/actions/workflows/ci.yml)\n[![Documentation Status](https://readthedocs.org/projects/releaseup/badge/?version=latest)](https://releaseup.readthedocs.io/en/latest/?badge=latest)\n[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/Saransh-cpp/releaseup/main.svg)](https://results.pre-commit.ci/latest/github/Saransh-cpp/releaseup/main)\n[![codecov](https://codecov.io/gh/Saransh-cpp/releaseup/branch/main/graph/badge.svg?token=L6ObHKhaZ7)](https://codecov.io/gh/Saransh-cpp/releaseup)\n[![discussion](https://img.shields.io/static/v1?label=Discussions&message=Ask&color=blue&logo=github)](https://github.com/Saransh-cpp/releaseup/discussions)\n\n[![Python Versions](https://img.shields.io/pypi/pyversions/releaseup)](https://pypi.org/project/releaseup/)\n[![Package Version](https://badge.fury.io/py/releaseup.svg)](https://pypi.org/project/releaseup/)\n[![PyPI Downloads](https://pepy.tech/badge/releaseup)](https://pepy.tech/project/releaseup)\n![License](https://img.shields.io/github/license/Saransh-cpp/releaseup?color=blue)\n[![black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\nAn extractive `NLP` approach for generating release notes from comments and\ndocstrings added between two git tags.\n\n`releaseup` extracts all the comments and docstrings using `git diff`,\npreprocesses the outputs, and finally generates release notes using `sklearn`'s\n`TfidfVectorizer` and `spacy`! The generated release notes are not at all\nabstractive, which is something `releaseup` aims to achieve in the future.\n\nAs of now, `releaseup` is a holiday project (built in mere 2 days), but I do\nintend to maintain it in the future. `releaseup` does work, but only if your\ncomments are well written.\n\nRead more about `releaseup` through its\n[documentation](https://releaseup.readthedocs.io).\n\n## Structure\n\n- All the extraction and preprocessing work is carried out using the `extract`\n  module.\n- All the extractive `NLP` work is done inside the `nlp_backend` module.\n- `releaseup` also prvides a high level API present inn the `high_level` module.\n\nSee [examples](#Examples) for more information.\n\n## Installation\n\nUse `pip` magic\n\n`releaseup` uses modern `Python` packaging and can be installed using `pip` -\n\n```\npython -m pip install releaseup\n```\n\nFor developer install, see our\n[Contributing Guidelines](https://github.com/Saransh-cpp/releaseup/blob/main/releaseup).\n\n## Examples\n\n### High level API\n\n```py\nimport releaseup\n\ntag = [\"v0.8.0\", \"v0.9.0\"]  # can also be commits\npath = \"./src/mypackage/\"  # to ignore changes made to other folders (./github/, docs/, etc) and files\ncomments_filename = \"COMMENTS.txt\"\n\n# extract added comments and docstrings\ncomments = releaseup.extract_release_comments(\n    tags, path, comments_filename\n)\n\nrelease_filename = \"RELEASE_NOTES.txt\"\n\n# generate release notes\nnotes = releaseup.generate_release_notes(\n    comments,\n    release_filename,\n    model_name = \"en_core_web_trf\",  # any spacy model\n    threshold = 0.3,  # percentage of comments to be selected\n)\n```\n\n### Low level API\n\n```py\nfrom releaseup.extract import (\n    extract_additions,\n    get_comments_and_docstrings,\n    get_diff,\n    preprocess_additions,\n)\nfrom releaseup.nlp_backend import get_release_notes, get_tfid_scores\n\ntag = [\"v0.8.0\", \"v0.9.0\"]  # can also be commits\npath = \"./src/mypackage/\"  # to ignore changes made to other folders (./github/, docs/, etc) and files\ncomments_filename = \"COMMENTS.txt\"\n\n# extract added comments and docstrings\nget_diff(tags, path, comments_filename)\nextracted_additions = extract_additions(comments_filename)\npreprocessed_additions = preprocess_additions(extracted_additions)\ncomments = get_comments_and_docstrings(preprocessed_additions)\n\nrelease_filename = \"RELEASE_NOTES.txt\"\n\nword_score = get_tfid_scores(comments)\nrelease_notes = get_release_notes(\n    comments,\n    word_score,\n    release_filename,\n    model_name = \"en_core_web_trf\",  # any spacy model\n    threshold = 0.3,  # percentage of comments to be selected\n)\n```\n\n## Testing\n\n**TODO: ADD TESTS**\n\n## Activating pre-commit\n\n`releaseup` uses a set of `pre-commit` hooks and the `pre-commit` bot to format,\ntype-check, and prettify the codebase. The hooks can be installed locally\nusing -\n\n```\npre-commit install\n```\n\nThis would run the checks every time a commit is created locally. The checks\nwill only run on the files modified by that commit, but the checks can be\ntriggered for all the files using -\n\n```\npre-commit run --all-files\n```\n\nIf you would like to skip the failing checks and push the code for further\ndiscussion, use the `--no-verify` option with `git commit`.\n\n## Documenting releaseup\n\n`releaseup`'s documentation is mainly written in the form of\n[docstrings](https://peps.python.org/pep-0257/) and\n[Markdown](https://en.wikipedia.org/wiki/Markdown). The docstrings include the\ndescription, arguments, examples, return values, and attributes of a class or a\nfunction, and the `.md` files enable us to render this documentation on\n`releaseup`'s documentation website.\n\n`releaseup` primarily uses [MkDocs](https://www.mkdocs.org/) and\n[mkdocstrings](https://mkdocstrings.github.io/) for rendering documentation on\nits website. The configuration file (`mkdocs.yml`) for `MkDocs` can be found\n[here](https://github.com/Saransh-cpp/releaseup/blob/main/mkdocs.yml). The\ndocumentation is deployed on <https://readthedocs.io>\n[here](https://releaseup.readthedocs.io/en/latest/).\n\nIdeally, with the addition of every new feature to `releaseup`, documentation\nshould be added using comments, docstrings, and `.md` files.\n\n### Building documentation locally\n\nThe documentation is located in the `docs` folder of the main repository. This\ndocumentation can be generated using the `docs` dependencies of `releaseup` in\nthe following way -\n\n```\nmkdocs serve\n```\n\nThe commands executed above will clean any existing documentation build, create\na new build (in `./site/`), and serve it on your `localhost`. To just build the\ndocumentation, use -\n\n```\nmkdocs build\n```\n\n## Nox\n\nThe fastest way to start with development is to use nox. If you don't have nox,\nyou can use `pipx run nox` to run it without installing, or `pipx install nox`.\nIf you don't have pipx (pip for applications), then you can install with with\n`pip install pipx` (the only case were installing an application with regular\npip is reasonable). If you use macOS, then pipx and nox are both in brew, use\n`brew install pipx nox`.\n\nTo use, run `nox`. This will lint and test using every installed version of\nPython on your system, skipping ones that are not installed. You can also run\nspecific jobs:\n\n```console\n$ nox -s lint  # Lint only\n$ nox -s tests-3.9  # Python 3.9 tests only\n$ nox -s docs -- serve  # Build and serve the docs\n$ nox -s build  # Make an SDist and wheel\n```\n\nThe default sessions (`lint` and `tests`) can be executed using -\n\n```\nnox\n```\n\n## Continuous Integration\n\n`releaseup` uses `GitHub Actions` as a `CI` provider to run tests, build docs,\nrelease on `PyPI`, test package, etc. All the configuration for `GitHub Actions`\nis written in `YAML`, present in `.github/` directory. The CI runs every time a\npull request is made or a push is made to the `main` branch.\n\n## Continuous Deployment\n\n`releaseup` uses `Read The Docs` as a `CD` provider to deploy documentation. All\nthe configuration for `Read The Docs` is written in `YAML`, present in the\n`.readthedocs.yml` file. The CD runs every time a push is made to the `main`\nbranch.\n\n## Credits\n\nLogo image credits: Taufik Ramadhan (taken from canva)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "releaseup",
    "package_url": "https://pypi.org/project/releaseup/",
    "platform": null,
    "project_url": "https://pypi.org/project/releaseup/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Saransh-cpp/releaseup/issues",
      "Changelog": "https://github.com/Saransh-cpp/releaseup/releases",
      "Discussions": "https://github.com/Saransh-cpp/releaseup/discussions",
      "Homepage": "https://github.com/Saransh-cpp/releaseup"
    },
    "release_url": "https://pypi.org/project/releaseup/0.1.0/",
    "requires_dist": [
      "scikit-learn>=1.0",
      "spacy>=3.4.1",
      "typing-extensions>=3.7; python_version < '3.8'",
      "pytest-cov>=3; extra == 'dev'",
      "pytest>=6; extra == 'dev'",
      "markdown-callouts>=0.2.0; extra == 'docs'",
      "mkdocs-include-exclude-files>=0.0.1; extra == 'docs'",
      "mkdocs-jupyter>=0.21.0; extra == 'docs'",
      "mkdocs-material>=8.3.9; extra == 'docs'",
      "mkdocs>=1.3.1; extra == 'docs'",
      "mkdocstrings-python-legacy>=0.2.3; extra == 'docs'",
      "mkdocstrings-python>=0.7.1; extra == 'docs'",
      "pymdown-extensions>=9.5; extra == 'docs'",
      "pytest-cov>=3; extra == 'test'",
      "pytest>=6; extra == 'test'"
    ],
    "requires_python": ">=3.7",
    "summary": "An extractive approach for generating release notes from comments and docstrings added between two git tags",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15120156,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eef8c01325cb7cd92bff52f4af2c48b754e4e6f0a0e2c4c409f2bef75780a9c8",
          "md5": "361591761ef6aec8ff1b99a0c01e57ff",
          "sha256": "65e628651a71763d44dfcef2f3bdbfdaa722bb3e4315758de1a43587b4f0bc0f"
        },
        "downloads": -1,
        "filename": "releaseup-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "361591761ef6aec8ff1b99a0c01e57ff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9143,
        "upload_time": "2022-09-16T16:57:04",
        "upload_time_iso_8601": "2022-09-16T16:57:04.629384Z",
        "url": "https://files.pythonhosted.org/packages/ee/f8/c01325cb7cd92bff52f4af2c48b754e4e6f0a0e2c4c409f2bef75780a9c8/releaseup-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32b4147613d42a38fd89ab3fdbb78c2fa51dcfe41cda8c56c7c730ac26363fd3",
          "md5": "121c5381744eb798d245a259f05dbf05",
          "sha256": "966a3fd498ce54c5efb45b007d7207aa79010882e6ae00f647855bd18c40b3f5"
        },
        "downloads": -1,
        "filename": "releaseup-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "121c5381744eb798d245a259f05dbf05",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18471,
        "upload_time": "2022-09-16T16:57:06",
        "upload_time_iso_8601": "2022-09-16T16:57:06.252162Z",
        "url": "https://files.pythonhosted.org/packages/32/b4/147613d42a38fd89ab3fdbb78c2fa51dcfe41cda8c56c7c730ac26363fd3/releaseup-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eef8c01325cb7cd92bff52f4af2c48b754e4e6f0a0e2c4c409f2bef75780a9c8",
        "md5": "361591761ef6aec8ff1b99a0c01e57ff",
        "sha256": "65e628651a71763d44dfcef2f3bdbfdaa722bb3e4315758de1a43587b4f0bc0f"
      },
      "downloads": -1,
      "filename": "releaseup-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "361591761ef6aec8ff1b99a0c01e57ff",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 9143,
      "upload_time": "2022-09-16T16:57:04",
      "upload_time_iso_8601": "2022-09-16T16:57:04.629384Z",
      "url": "https://files.pythonhosted.org/packages/ee/f8/c01325cb7cd92bff52f4af2c48b754e4e6f0a0e2c4c409f2bef75780a9c8/releaseup-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32b4147613d42a38fd89ab3fdbb78c2fa51dcfe41cda8c56c7c730ac26363fd3",
        "md5": "121c5381744eb798d245a259f05dbf05",
        "sha256": "966a3fd498ce54c5efb45b007d7207aa79010882e6ae00f647855bd18c40b3f5"
      },
      "downloads": -1,
      "filename": "releaseup-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "121c5381744eb798d245a259f05dbf05",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 18471,
      "upload_time": "2022-09-16T16:57:06",
      "upload_time_iso_8601": "2022-09-16T16:57:06.252162Z",
      "url": "https://files.pythonhosted.org/packages/32/b4/147613d42a38fd89ab3fdbb78c2fa51dcfe41cda8c56c7c730ac26363fd3/releaseup-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}