{
  "info": {
    "author": "Prefect Technologies, Inc.",
    "author_email": "help@prefect.io",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Coordinate and parallelize your dataflow with `prefect-dask`\n\n<p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/15331990/211682578-3e341709-6509-4c95-a6af-3b1160fe2961.png\" width=40% height=40%>\n    <br>\n    <a href=\"https://pypi.python.org/pypi/prefect-dask/\" alt=\"PyPI version\">\n        <img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/prefect-dask?color=0052FF&labelColor=090422\"></a>\n    <a href=\"https://github.com/PrefectHQ/prefect-dask/\" alt=\"Stars\">\n        <img src=\"https://img.shields.io/github/stars/PrefectHQ/prefect-dask?color=0052FF&labelColor=090422\" /></a>\n    <a href=\"https://pepy.tech/badge/prefect-dask/\" alt=\"Downloads\">\n        <img src=\"https://img.shields.io/pypi/dm/prefect-dask?color=0052FF&labelColor=090422\" /></a>\n    <a href=\"https://github.com/PrefectHQ/prefect-dask/pulse\" alt=\"Activity\">\n        <img src=\"https://img.shields.io/github/commit-activity/m/PrefectHQ/prefect-dask?color=0052FF&labelColor=090422\" /></a>\n    <br>\n    <a href=\"https://prefect-community.slack.com\" alt=\"Slack\">\n        <img src=\"https://img.shields.io/badge/slack-join_community-red.svg?color=0052FF&labelColor=090422&logo=slack\" /></a>\n    <a href=\"https://discourse.prefect.io/\" alt=\"Discourse\">\n        <img src=\"https://img.shields.io/badge/discourse-browse_forum-red.svg?color=0052FF&labelColor=090422&logo=discourse\" /></a>\n</p>\n\nVisit the full docs [here](https://PrefectHQ.github.io/prefect-dask) to see additional examples and the API reference.\n\nThe `prefect-dask` collection makes it easy to include distributed processing for your flows. Check out the examples below to get started!\n\n## Getting Started\n\n### Integrate with Prefect flows\n\nPerhaps you're already working with Prefect flows. Say your flow downloads many images to train your machine learning model. Unfortunately, it takes a long time to download your flows because your code is running sequentially.\n\nAfter installing `prefect-dask` you can parallelize your flow in three simple steps:\n\n1. Add the import: `from prefect_dask import DaskTaskRunner`\n2. Specify the task runner in the flow decorator: `@flow(task_runner=DaskTaskRunner)`\n3. Submit tasks to the flow's task runner: `a_task.submit(*args, **kwargs)`\n\nThe parallelized code  runs in about 1/3 of the time in our test!  And that's without distributing the workload over multiple machines.\nHere's the before and after!\n\n=== \"Before\"\n\n    ```python hl_lines=\"1\"\n    # Completed in 15.2 seconds\n\n    from typing import List\n    from pathlib import Path\n\n    import httpx\n    from prefect import flow, task\n\n\n    URL_FORMAT = (\n        \"https://www.cpc.ncep.noaa.gov/products/NMME/archive/\"\n        \"{year:04d}{month:02d}0800/current/images/nino34.rescaling.ENSMEAN.png\"\n    )\n\n    @task\n    def download_image(year: int, month: int, directory: Path) -> Path:\n        # download image from URL\n        url = URL_FORMAT.format(year=year, month=month)\n        resp = httpx.get(url)\n\n        # save content to directory/YYYYMM.png\n        file_path = (directory / url.split(\"/\")[-1]).with_stem(f\"{year:04d}{month:02d}\")\n        file_path.write_bytes(resp.content)\n        return file_path\n\n    @flow\n    def download_nino_34_plumes_from_year(year: int) -> List[Path]:\n        # create a directory to hold images\n        directory = Path(\"data\")\n        directory.mkdir(exist_ok=True)\n\n        # download all images\n        file_paths = []\n        for month in range(1, 12 + 1):\n            file_path = download_image(year, month, directory)\n            file_paths.append(file_path)\n        return file_paths\n\n    if __name__ == \"__main__\":\n        download_nino_34_plumes_from_year(2022)\n    ```\n\n=== \"After\"\n\n    ```python hl_lines=\"1 8 26 35\"\n    # Completed in 5.7 seconds\n\n    from typing import List\n    from pathlib import Path\n\n    import httpx\n    from prefect import flow, task\n    from prefect_dask import DaskTaskRunner\n\n    URL_FORMAT = (\n        \"https://www.cpc.ncep.noaa.gov/products/NMME/archive/\"\n        \"{year:04d}{month:02d}0800/current/images/nino34.rescaling.ENSMEAN.png\"\n    )\n\n    @task\n    def download_image(year: int, month: int, directory: Path) -> Path:\n        # download image from URL\n        url = URL_FORMAT.format(year=year, month=month)\n        resp = httpx.get(url)\n\n        # save content to directory/YYYYMM.png\n        file_path = (directory / url.split(\"/\")[-1]).with_stem(f\"{year:04d}{month:02d}\")\n        file_path.write_bytes(resp.content)\n        return file_path\n\n    @flow(task_runner=DaskTaskRunner(cluster_kwargs={\"processes\": False}))\n    def download_nino_34_plumes_from_year(year: int) -> List[Path]:\n        # create a directory to hold images\n        directory = Path(\"data\")\n        directory.mkdir(exist_ok=True)\n\n        # download all images\n        file_paths = []\n        for month in range(1, 12 + 1):\n            file_path = download_image.submit(year, month, directory)\n            file_paths.append(file_path)\n        return file_paths\n\n    if __name__ == \"__main__\":\n        download_nino_34_plumes_from_year(2022)\n    ```\n\nThe original flow completes in 15.2 seconds.\n\nHowever, with just a few minor tweaks, we were able to reduce the runtime by nearly **three** folds, down to just **5.7** seconds!\n\n### Integrate with Dask client/cluster and collections\n\nSuppose you have an existing Dask client/cluster and collection, like a `dask.dataframe.DataFrame`, and you want to add observability.\n\nWith `prefect-dask`, there's no major overhaul necessary because Prefect was designed with incremental adoption in mind! It's as easy as:\n\n1. Adding the imports\n2. Sprinkling a few `task` and `flow` decorators\n3. Using `get_dask_client` context manager on collections to distribute work across workers\n4. Specifying the task runner and client's address in the flow decorator\n5. Submitting the tasks to the flow's task runner\n\n=== \"Before\"\n\n    ```python\n    import dask.dataframe\n    import dask.distributed\n\n\n\n    client = dask.distributed.Client()\n\n\n    def read_data(start: str, end: str) -> dask.dataframe.DataFrame:\n        df = dask.datasets.timeseries(start, end, partition_freq=\"4w\")\n        return df\n\n\n    def process_data(df: dask.dataframe.DataFrame) -> dask.dataframe.DataFrame:\n\n        df_yearly_avg = df.groupby(df.index.year).mean()\n        return df_yearly_avg.compute()\n\n\n    def dask_pipeline():\n        df = read_data(\"1988\", \"2022\")\n        df_yearly_average = process_data(df)\n        return df_yearly_average\n\n    dask_pipeline()\n    ```\n\n\n=== \"After\"\n\n    ```python hl_lines=\"3 4 8 13 15 19 21 22\"\n    import dask.dataframe\n    import dask.distributed\n    from prefect import flow, task\n    from prefect_dask import DaskTaskRunner, get_dask_client\n\n    client = dask.distributed.Client()\n\n    @task\n    def read_data(start: str, end: str) -> dask.dataframe.DataFrame:\n        df = dask.datasets.timeseries(start, end, partition_freq=\"4w\")\n        return df\n\n    @task\n    def process_data(df: dask.dataframe.DataFrame) -> dask.dataframe.DataFrame:\n        with get_dask_client():\n            df_yearly_avg = df.groupby(df.index.year).mean()\n            return df_yearly_avg.compute()\n\n    @flow(task_runner=DaskTaskRunner(address=client.scheduler.address))\n    def dask_pipeline():\n        df = read_data.submit(\"1988\", \"2022\")\n        df_yearly_average = process_data.submit(df)\n        return df_yearly_average\n\n    dask_pipeline()\n    ```\n\nNow, you can conveniently see when each task completed, both in the terminal and the UI!\n\n```bash\n14:10:09.845 | INFO    | prefect.engine - Created flow run 'chocolate-pony' for flow 'dask-flow'\n14:10:09.847 | INFO    | prefect.task_runner.dask - Connecting to an existing Dask cluster at tcp://127.0.0.1:59255\n14:10:09.857 | INFO    | distributed.scheduler - Receive client connection: Client-8c1e0f24-9133-11ed-800e-86f2469c4e7a\n14:10:09.859 | INFO    | distributed.core - Starting established connection to tcp://127.0.0.1:59516\n14:10:09.862 | INFO    | prefect.task_runner.dask - The Dask dashboard is available at http://127.0.0.1:8787/status\n14:10:11.344 | INFO    | Flow run 'chocolate-pony' - Created task run 'read_data-5bc97744-0' for task 'read_data'\n14:10:11.626 | INFO    | Flow run 'chocolate-pony' - Submitted task run 'read_data-5bc97744-0' for execution.\n14:10:11.795 | INFO    | Flow run 'chocolate-pony' - Created task run 'process_data-090555ba-0' for task 'process_data'\n14:10:11.798 | INFO    | Flow run 'chocolate-pony' - Submitted task run 'process_data-090555ba-0' for execution.\n14:10:13.279 | INFO    | Task run 'read_data-5bc97744-0' - Finished in state Completed()\n14:11:43.539 | INFO    | Task run 'process_data-090555ba-0' - Finished in state Completed()\n14:11:43.883 | INFO    | Flow run 'chocolate-pony' - Finished in state Completed('All states completed.')\n```\n\n## Resources\n\nFor additional examples, check out the [Usage Guide](usage_guide)!\n\n### Installation\n\nGet started by installing `prefect-dask`!\n\n=== \"pip\"\n\n    ```bash\n    pip install -U prefect-dask\n    ```\n\n=== \"conda\"\n\n    ```bash\n    conda install -c conda-forge prefect-dask\n    ```\n\nRequires an installation of Python 3.7+.\n\nWe recommend using a Python virtual environment manager such as pipenv, conda, or virtualenv.\n\nThese tasks are designed to work with Prefect 2. For more information about how to use Prefect, please refer to the [Prefect documentation](https://docs.prefect.io/).\n\n### Feedback\n\nIf you encounter any bugs while using `prefect-dask`, feel free to open an issue in the [prefect-dask](https://github.com/PrefectHQ/prefect-dask) repository.\n\nIf you have any questions or issues while using `prefect-dask`, you can find help in either the [Prefect Discourse forum](https://discourse.prefect.io/) or the [Prefect Slack community](https://prefect.io/slack).\n\nFeel free to star or watch [`prefect-dask`](https://github.com/PrefectHQ/prefect-dask) for updates too!\n\n### Contributing\n\nIf you'd like to help contribute to fix an issue or add a feature to `prefect-dask`, please [propose changes through a pull request from a fork of the repository](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request-from-a-fork).\n\nHere are the steps:\n\n1. [Fork the repository](https://docs.github.com/en/get-started/quickstart/fork-a-repo#forking-a-repository)\n2. [Clone the forked repository](https://docs.github.com/en/get-started/quickstart/fork-a-repo#cloning-your-forked-repository)\n3. Install the repository and its dependencies:\n```\npip install -e \".[dev]\"\n```\n4. Make desired changes\n5. Add tests\n6. Insert an entry to [CHANGELOG.md](https://github.com/PrefectHQ/prefect-dask/blob/main/CHANGELOG.md)\n7. Install `pre-commit` to perform quality checks prior to commit:\n```\npre-commit install\n```\n8. `git commit`, `git push`, and create a pull request\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PrefectHQ/prefect-dask",
    "keywords": "prefect",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "prefect-dask",
    "package_url": "https://pypi.org/project/prefect-dask/",
    "platform": null,
    "project_url": "https://pypi.org/project/prefect-dask/",
    "project_urls": {
      "Homepage": "https://github.com/PrefectHQ/prefect-dask"
    },
    "release_url": "https://pypi.org/project/prefect-dask/0.2.3/",
    "requires_dist": [
      "prefect (>=2.6.0)",
      "distributed (==2022.2.0) ; python_version < \"3.8\"",
      "distributed (>=2022.5.0) ; python_version >= \"3.8\"",
      "pytest ; extra == 'dev'",
      "black ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "flaky ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "mkdocs ; extra == 'dev'",
      "mkdocs-material ; extra == 'dev'",
      "mkdocstrings[python] ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "pytest-asyncio ; extra == 'dev'",
      "mkdocs-gen-files ; extra == 'dev'",
      "interrogate ; extra == 'dev'",
      "coverage ; extra == 'dev'",
      "pillow ; extra == 'dev'",
      "mock ; (python_version < \"3.8\") and extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "Prefect integrations with the Dask execution framework.",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16963949,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4db07d1d3c931178007ec90db681467a1f8b3cb9d875b460da529db71e2ce60",
          "md5": "b266548ba248556520722f2c00987508",
          "sha256": "f6363ef344b2c5fce7c75cfbc1e1e56bd34c2665d703c122242c753909ea1340"
        },
        "downloads": -1,
        "filename": "prefect_dask-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b266548ba248556520722f2c00987508",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13145,
        "upload_time": "2022-06-07T18:52:15",
        "upload_time_iso_8601": "2022-06-07T18:52:15.435004Z",
        "url": "https://files.pythonhosted.org/packages/e4/db/07d1d3c931178007ec90db681467a1f8b3cb9d875b460da529db71e2ce60/prefect_dask-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00df87114b4a79cf86b7e4b24f7a21a8ae456f0e7749de6dab261b2baede8f9f",
          "md5": "92c531195d91fa2d2ae420cebb5cbf13",
          "sha256": "053fdd9ec2d488e2df80885529f227387e64f593353714aa030400b4fbd6df08"
        },
        "downloads": -1,
        "filename": "prefect-dask-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "92c531195d91fa2d2ae420cebb5cbf13",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 29858,
        "upload_time": "2022-06-07T18:52:17",
        "upload_time_iso_8601": "2022-06-07T18:52:17.306152Z",
        "url": "https://files.pythonhosted.org/packages/00/df/87114b4a79cf86b7e4b24f7a21a8ae456f0e7749de6dab261b2baede8f9f/prefect-dask-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29bdc2956c0b3519a28c4306fbf6dfecd4c1c0586e12d58a30d0f81716480024",
          "md5": "a60f5b5760acb4cbecd397ff426f7e6c",
          "sha256": "dab80c50733d604f5534eb7ce383780196f124fdffb95f6ed85dd79bf51c802f"
        },
        "downloads": -1,
        "filename": "prefect_dask-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a60f5b5760acb4cbecd397ff426f7e6c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13135,
        "upload_time": "2022-07-08T21:05:34",
        "upload_time_iso_8601": "2022-07-08T21:05:34.975781Z",
        "url": "https://files.pythonhosted.org/packages/29/bd/c2956c0b3519a28c4306fbf6dfecd4c1c0586e12d58a30d0f81716480024/prefect_dask-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "136e5d5460daff4301f324fd0087fe512b0276ba88bc1149565c96218d98efaa",
          "md5": "1b5888ee4ebcef2ff964536d0d5bfc8c",
          "sha256": "f7cec06786fd52c6f437e4e554b5dcab69c24f96d588708c01d07c5c7b2e1dd7"
        },
        "downloads": -1,
        "filename": "prefect-dask-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1b5888ee4ebcef2ff964536d0d5bfc8c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 29817,
        "upload_time": "2022-07-08T21:05:36",
        "upload_time_iso_8601": "2022-07-08T21:05:36.653108Z",
        "url": "https://files.pythonhosted.org/packages/13/6e/5d5460daff4301f324fd0087fe512b0276ba88bc1149565c96218d98efaa/prefect-dask-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37e83ecc77a0208501065d70a57d2117e541cb95dabe80f50b5456727ba355a3",
          "md5": "1ecd00b8889d939989843d2f6579a0a4",
          "sha256": "e5aebea55eefed08f314aefef3666824039a12d7af77bcbc5da8258b203d2eff"
        },
        "downloads": -1,
        "filename": "prefect_dask-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ecd00b8889d939989843d2f6579a0a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13131,
        "upload_time": "2022-07-20T16:15:45",
        "upload_time_iso_8601": "2022-07-20T16:15:45.139376Z",
        "url": "https://files.pythonhosted.org/packages/37/e8/3ecc77a0208501065d70a57d2117e541cb95dabe80f50b5456727ba355a3/prefect_dask-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3d1458cfab0150e8fa17df69fa608290383248dcaad9af6c154aa033c9bbf6a",
          "md5": "bc937bda46dd4364d1847bc7cecfdb48",
          "sha256": "3eafd0033d455560252bd0f18aa0d1c5a55918b410178ba34c3a42ed0652bf79"
        },
        "downloads": -1,
        "filename": "prefect-dask-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bc937bda46dd4364d1847bc7cecfdb48",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 29825,
        "upload_time": "2022-07-20T16:15:46",
        "upload_time_iso_8601": "2022-07-20T16:15:46.987452Z",
        "url": "https://files.pythonhosted.org/packages/e3/d1/458cfab0150e8fa17df69fa608290383248dcaad9af6c154aa033c9bbf6a/prefect-dask-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "945dc9db2bc8502b596a3a338b4f55b07151635b914fa7e83556993bc7939e30",
          "md5": "4f39f316316d6c11e4c85e17f7fb4655",
          "sha256": "d1a6757e44efd2d3bc21195c6a2c7f99c452348524f1f618fa10c577ccfd358c"
        },
        "downloads": -1,
        "filename": "prefect_dask-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f39f316316d6c11e4c85e17f7fb4655",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13030,
        "upload_time": "2022-09-05T13:31:46",
        "upload_time_iso_8601": "2022-09-05T13:31:46.774600Z",
        "url": "https://files.pythonhosted.org/packages/94/5d/c9db2bc8502b596a3a338b4f55b07151635b914fa7e83556993bc7939e30/prefect_dask-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b29e41b9d83a294f38ca4e2090d5ff9c679b38b692c8564cc50b7bf66bb8383c",
          "md5": "2ea7fddbbdec823442eb75a6886190ed",
          "sha256": "8a6cb29f82103fdc3ea97ea1381b1bbc09f207c0a27141a69a332d2e535d266e"
        },
        "downloads": -1,
        "filename": "prefect-dask-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2ea7fddbbdec823442eb75a6886190ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 29699,
        "upload_time": "2022-09-05T13:31:49",
        "upload_time_iso_8601": "2022-09-05T13:31:49.199024Z",
        "url": "https://files.pythonhosted.org/packages/b2/9e/41b9d83a294f38ca4e2090d5ff9c679b38b692c8564cc50b7bf66bb8383c/prefect-dask-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddd3e9f10cde094fbf3081b703138ba5a3581084b53c52c39021dee2d796e139",
          "md5": "3c3c6a8a7a7673db85c203205a475126",
          "sha256": "a24b9af473441bf96176d898550cdd79cd3136fed24aee15b7271ab0d70a1e9b"
        },
        "downloads": -1,
        "filename": "prefect_dask-0.2.0.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3c3c6a8a7a7673db85c203205a475126",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13109,
        "upload_time": "2022-09-09T20:24:31",
        "upload_time_iso_8601": "2022-09-09T20:24:31.341189Z",
        "url": "https://files.pythonhosted.org/packages/dd/d3/e9f10cde094fbf3081b703138ba5a3581084b53c52c39021dee2d796e139/prefect_dask-0.2.0.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17cd9c339043bd9075a0f4ee4e4d69710847c007f97618667a3126fb118f7b02",
          "md5": "25cfbb0c21481333e44485c7e215de6c",
          "sha256": "a3ef967b8f47b807c1c46745253c2bebcbfa41783a60d62a3b4c640d158a6e01"
        },
        "downloads": -1,
        "filename": "prefect-dask-0.2.0.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "25cfbb0c21481333e44485c7e215de6c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 29946,
        "upload_time": "2022-09-09T20:24:33",
        "upload_time_iso_8601": "2022-09-09T20:24:33.157115Z",
        "url": "https://files.pythonhosted.org/packages/17/cd/9c339043bd9075a0f4ee4e4d69710847c007f97618667a3126fb118f7b02/prefect-dask-0.2.0.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c0246ab70d17bee60d9814cc0032413ddcbc0db2c4e266f7148ab34ba081fef",
          "md5": "4d1d362b23d3a78f68e328582c67d6d7",
          "sha256": "185ab41e5d0e0c2962a78bdafa3c4e77b8b7239f5e9239efb6be3ab86bd2f620"
        },
        "downloads": -1,
        "filename": "prefect_dask-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d1d362b23d3a78f68e328582c67d6d7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16045,
        "upload_time": "2022-10-03T19:59:47",
        "upload_time_iso_8601": "2022-10-03T19:59:47.335917Z",
        "url": "https://files.pythonhosted.org/packages/7c/02/46ab70d17bee60d9814cc0032413ddcbc0db2c4e266f7148ab34ba081fef/prefect_dask-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e07f9ca58b2bc68d1dd61241d070676687d2af3776fd04b2444f3cb307501abf",
          "md5": "b20f816d204b00c8f85ba769600a71ba",
          "sha256": "f588647fed5a0f450500d9cda9aa82f1367c26da14ffc5b1d41e4494ae0c3f64"
        },
        "downloads": -1,
        "filename": "prefect-dask-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b20f816d204b00c8f85ba769600a71ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 35591,
        "upload_time": "2022-10-03T19:59:48",
        "upload_time_iso_8601": "2022-10-03T19:59:48.689314Z",
        "url": "https://files.pythonhosted.org/packages/e0/7f/9ca58b2bc68d1dd61241d070676687d2af3776fd04b2444f3cb307501abf/prefect-dask-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d9989bf29fa2b45963efc660cc58be8e9cc8dad8c4ad0df27f1b076ba4b0507",
          "md5": "51452919c02222eb97148cc2a7a27421",
          "sha256": "4228a4ad4055a9dc9ab0740de51fc6df0c235ad4b8d71db2e9ee788447d7a7bd"
        },
        "downloads": -1,
        "filename": "prefect_dask-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "51452919c02222eb97148cc2a7a27421",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16174,
        "upload_time": "2022-12-01T19:22:17",
        "upload_time_iso_8601": "2022-12-01T19:22:17.425207Z",
        "url": "https://files.pythonhosted.org/packages/4d/99/89bf29fa2b45963efc660cc58be8e9cc8dad8c4ad0df27f1b076ba4b0507/prefect_dask-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d165860c7040387f49ae5b4b45348ae3ca35ad73278cd7333ca8acc6d879458c",
          "md5": "64ed10e7c45ff943160755a4e4be423a",
          "sha256": "b1ad47b25d8882218036f91f3ad86d244cf4c2994c0de42ecdf3b5a154e865d6"
        },
        "downloads": -1,
        "filename": "prefect-dask-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "64ed10e7c45ff943160755a4e4be423a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 35409,
        "upload_time": "2022-12-01T19:22:19",
        "upload_time_iso_8601": "2022-12-01T19:22:19.029304Z",
        "url": "https://files.pythonhosted.org/packages/d1/65/860c7040387f49ae5b4b45348ae3ca35ad73278cd7333ca8acc6d879458c/prefect-dask-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44b3415e100f4952c92ceee9c84975af581b1ba55d66adcdfb4486b072537696",
          "md5": "28b1d9767fe26e32f9f491d37de7d816",
          "sha256": "7f8baaa29c7900d86816cd47091b1df1de442a52a95e5cefbd19796b001c6e7a"
        },
        "downloads": -1,
        "filename": "prefect_dask-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "28b1d9767fe26e32f9f491d37de7d816",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 15520,
        "upload_time": "2023-02-21T18:54:32",
        "upload_time_iso_8601": "2023-02-21T18:54:32.034247Z",
        "url": "https://files.pythonhosted.org/packages/44/b3/415e100f4952c92ceee9c84975af581b1ba55d66adcdfb4486b072537696/prefect_dask-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f425cfcdbe50f010caf74caca82ae4eb5af0e65f5825a0c75adce25f7f8e25f0",
          "md5": "7cee0081d5778421044372e0db416141",
          "sha256": "b8c0f697e5d8660885c1bc31675dce7b153c3d60925293f339d3326ef25add3f"
        },
        "downloads": -1,
        "filename": "prefect-dask-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7cee0081d5778421044372e0db416141",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 38190,
        "upload_time": "2023-02-21T18:54:33",
        "upload_time_iso_8601": "2023-02-21T18:54:33.555758Z",
        "url": "https://files.pythonhosted.org/packages/f4/25/cfcdbe50f010caf74caca82ae4eb5af0e65f5825a0c75adce25f7f8e25f0/prefect-dask-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "44b3415e100f4952c92ceee9c84975af581b1ba55d66adcdfb4486b072537696",
        "md5": "28b1d9767fe26e32f9f491d37de7d816",
        "sha256": "7f8baaa29c7900d86816cd47091b1df1de442a52a95e5cefbd19796b001c6e7a"
      },
      "downloads": -1,
      "filename": "prefect_dask-0.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "28b1d9767fe26e32f9f491d37de7d816",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 15520,
      "upload_time": "2023-02-21T18:54:32",
      "upload_time_iso_8601": "2023-02-21T18:54:32.034247Z",
      "url": "https://files.pythonhosted.org/packages/44/b3/415e100f4952c92ceee9c84975af581b1ba55d66adcdfb4486b072537696/prefect_dask-0.2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f425cfcdbe50f010caf74caca82ae4eb5af0e65f5825a0c75adce25f7f8e25f0",
        "md5": "7cee0081d5778421044372e0db416141",
        "sha256": "b8c0f697e5d8660885c1bc31675dce7b153c3d60925293f339d3326ef25add3f"
      },
      "downloads": -1,
      "filename": "prefect-dask-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "7cee0081d5778421044372e0db416141",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 38190,
      "upload_time": "2023-02-21T18:54:33",
      "upload_time_iso_8601": "2023-02-21T18:54:33.555758Z",
      "url": "https://files.pythonhosted.org/packages/f4/25/cfcdbe50f010caf74caca82ae4eb5af0e65f5825a0c75adce25f7f8e25f0/prefect-dask-0.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}