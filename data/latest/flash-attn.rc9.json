{
  "info": {
    "author": "Tri Dao",
    "author_email": "trid@stanford.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "# FlashAttention\nThis repository provides the official implementation of FlashAttention from the\nfollowing paper.\n\n**FlashAttention: Fast and Memory-Efficient Exact Attention with IO-Awareness**  \nTri Dao, Daniel Y. Fu, Stefano Ermon, Atri Rudra, Christopher RÃ©  \nPaper: https://arxiv.org/abs/2205.14135  \nIEEE Spectrum [article](https://spectrum.ieee.org/mlperf-rankings-2022) about our submission to the MLPerf 2.0 benchmark using FlashAttention.\n![FlashAttention](assets/flashattn_banner.jpg)\n\n## Usage\n\nWe've been very happy to see FlashAttention being widely adopted in such a short\ntime after its release. This [page](https://github.com/HazyResearch/flash-attention/blob/main/usage.md)\ncontains a partial list of places where FlashAttention is being used.\n\n## Full model code and training script\n\nWe have released the full GPT model\n[implementation](https://github.com/HazyResearch/flash-attention/blob/main/flash_attn/models/gpt.py).\nWe also provide optimized implementations of other layers (e.g., MLP, LayerNorm,\ncross-entropy loss, rotary embedding). Overall this speeds up training by 3-5x\ncompared to the baseline implementation from Huggingface, reaching up to 189\nTFLOPs/sec per A100, equivalent to 60.6\\% model FLOPs utilization (we don't need\nany activation checkpointing). \n\nWe also include a training\n[script](https://github.com/HazyResearch/flash-attention/tree/main/training) to\ntrain GPT2 on Openwebtext and GPT3 on The Pile.\n\n## Triton implementation of FlashAttention\n\nPhil Tillet (OpenAI) has an experimental implementation of FlashAttention in Triton:\nhttps://github.com/openai/triton/blob/master/python/tutorials/06-fused-attention.py  \n\nAs Triton is a higher-level language than CUDA, it might be easier to understand\nand experiment with. The notations in the Triton implementation are also closer\nto what's used in our paper.\n\n\n## Beta release (0.2).\n\nTo install (requiring CUDA 11, NVCC, and an Turing or Ampere GPU):\n```sh\npip install flash-attn\n```\n\nAlternatively you can compile from source:\n```\npython setup.py install\n```\n\nInterface: `src/flash_attention.py`\n\nTo run the benchmark against PyTorch standard attention: \n```\nPYTHONPATH=$PWD python benchmarks/benchmark_flash_attention.py\n```\n\nFlashAttention currently supports:\n1. Turing or Ampere GPUs (e.g., A100, RTX 3090, T4, RTX 2080).\n2. fp16 and bf16 (bf16 requires Ampere GPUs).\n3. Head dimensions that are multiples of 8, up to 128 (e.g., 8, 16, 24, ..., 128). Head dim > 64 backward requires A100.\n\nOur tentative roadmap:\n1. ~~[Jun 2022] Make package pip-installable~~[Done, thanks to lucidrains].\n2. ~~[Jun 2022] Support SM86 GPUs (e.g., RTX 3080, 3090)~~[Done].\n3. [Jun 2022] Refactor to use Cutlass.\n4. ~~[Jun 2022] Support SM75 GPUs (e.g. T4)~~[Done].\n5. ~~[Jun 2022] Support bf16~~[Done].\n6. ~~[Jul 2022] Implement cross-attention~~[Done].\n7. ~~[Jul 2022] Support head dimension 128~~[Done].\n8. [Jul 2022] Support SM70 GPUs (V100).\n9. ~~[Aug 2022] Fuse rotary embedding~~[Done].\n10. [Aug 2022] Support attention bias (e.g. ALiBi, relative positional encoding).\n\n## Speedup and Memory Savings\n\nWe present expected speedup (combined forward + backward pass) and memory savings from using FlashAttention against PyTorch standard attention, depending on sequence length, on different GPUs (speedup depends on memory bandwidth - we see more speedup on slower GPU memory).\n\nWe currently have benchmarks for these GPUs:\n* [A100](#a100)\n* [RTX 3090](#rtx-3090)\n* [T4](#t4)\n\n### A100\n\nWe display FlashAttention speedup using these parameters (similar to BERT-base):\n* Batch size 8\n* Head dimension 64\n* 12 attention heads\n\nOur graphs show sequence lengths between 128 and 4096 (when standard attention runs out of memory on an A100), but FlashAttention can scale up to sequence length 64K.\n\n#### Speedup\n\n![FlashAttention speedup](assets/flashattn_speedup.jpg)\n\nWe generally see 2-4X speedup at sequence lengths between 128 and 4K, and we see more speedup when using dropout and masking, since we fuse the kernels.\nAt sequence lengths that are popular with language models like 512 and 1K, we see speedups up to 4X when using dropout and masking.\n\n#### Memory\n\n![FlashAttention memory](assets/flashattn_memory.jpg)\n\nWe show memory savings in this graph (note that memory footprint is the same no matter if you use dropout or masking).\nMemory savings are proportional to sequence length -- since standard attention has memory quadratic in sequence length, whereas FlashAttention has memory linear in sequence length.\nWe see 10X memory savings at sequence length 2K, and 20X at 4K.\nAs a result, FlashAttention can scale to much longer sequence lengths.\n\n#### Head Dimension 128\n\n![FlashAttention speedup, head dimension 128](assets/flashattn_speedup_a100_d128.jpg)\n\nWe show speedup with head dimension 128.\nHere we show batch size 16 with 12 heads.\nSpeedup is less than with the smaller head sizes, since we have to make the block size smaller in the tiling.\nBut speedup is still significant, especially with a causal mask.\n\n### RTX 3090\n\nFor the RTX 3090, we use batch size 12 with 12 attention heads.\nMemory savings are the same as on an A100, so we'll only show speedup here.\n\n![FlashAttention speedup GTX 3090](assets/flashattn_speedup_3090.jpg)\n\nWe see slightly higher speedups (between 2.5-4.5x) on the GTX 3090, since memory bandwidth on the GDDR6X is lower than A100 HBM (~900 GB/s vs. ~1.5 TB/s).\n\n### T4\n\nWe again use batch size 12 with 12 attention heads.\n\n![Flashattention speedup T4](assets/flashattn_speedup_t4.jpg)\n\nT4 SRAM is smaller than the newer GPUs (64 KB), so we see less speedup (we need to make the block sizes smaller, so we end up doing more R/W).\nThis matches the IO complexity analysis from section 3.2 of [our paper](https://arxiv.org/abs/2205.14135).\n\nT4 GPUs are commonly used for inference, so we also measure speedup on the forward pass only (note that these are not directly comparable to the graphs above):\n\n![FlashAttention speedup T4 fwd](assets/flashattn_speedup_t4_fwd.jpg)\n\nWe see speedups between 2.5x-4.5x on the forward pass.\n\n## Tests\nWe test that FlashAttention produces the same output and gradient as a reference\nimplementation, up to some numerical tolerance. In particular, we check that the\nmaximum numerical error of FlashAttention is at most twice the numerical error\nof a baseline implementation in Pytorch (for different head dimensions, input\ndtype, sequence length, causal / non-causal).\n\nTo run the tests:\n```\npytest -q -s tests/test_flash_attn.py\n```\n## When you encounter issues\n\nThis alpha release of FlashAttention contains code written for a research\nproject to validate ideas on speeding up attention. \nWe have tested it on several models (BERT, GPT2, ViT). \nHowever, there might still be bugs in the implementation that we hope to iron\nout in the next few months.\n\nIf you encounter any of these bugs, please open a respective GitHub Issue!\n\n## Acknowledgments\nOur implementation uses Apex's\n[FMHA](https://github.com/NVIDIA/apex/tree/master/apex/contrib/csrc/fmha) code\nas a starting point.\n\nWe thank [Young-Jun Ko](https://yjk21.github.io/) for the in-depth explanation of his FMHA implementation\nand for his thoughtful answers to our questions about CUDA.\n\n## Citation\nIf you use this codebase, or otherwise found our work valuable, please cite:\n```\n@inproceedings{dao2022flashattention,\n  title={Flash{A}ttention: Fast and Memory-Efficient Exact Attention with {IO}-Awareness},\n  author={Dao, Tri and Fu, Daniel Y. and Ermon, Stefano and Rudra, Atri and R{\\'e}, Christopher},\n  booktitle={Advances in Neural Information Processing Systems},\n  year={2022}\n}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/HazyResearch/flash-attention",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flash-attn",
    "package_url": "https://pypi.org/project/flash-attn/",
    "platform": null,
    "project_url": "https://pypi.org/project/flash-attn/",
    "project_urls": {
      "Homepage": "https://github.com/HazyResearch/flash-attention"
    },
    "release_url": "https://pypi.org/project/flash-attn/0.2.8/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Flash Attention: Fast and Memory-Efficient Exact Attention",
    "version": "0.2.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16492926,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76b2296d07c9eae70b8b8e71938ebb753e052286947c59c4d9f75d12e8941afc",
          "md5": "d029ec348b633b4e318cc2039d505155",
          "sha256": "2d38c6387f662435924729303d42f56b5bea0b7d827e9a617ece730587fa6e7f"
        },
        "downloads": -1,
        "filename": "flash_attn-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d029ec348b633b4e318cc2039d505155",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1487599,
        "upload_time": "2022-11-15T22:16:17",
        "upload_time_iso_8601": "2022-11-15T22:16:17.679647Z",
        "url": "https://files.pythonhosted.org/packages/76/b2/296d07c9eae70b8b8e71938ebb753e052286947c59c4d9f75d12e8941afc/flash_attn-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f36a4c0bfde34ed78d5d4e1f23917f8405cd7e2cc5560827d3fb023e88b2c6fa",
          "md5": "ed497fd9f2632f84b58d74fd19119843",
          "sha256": "efd835ef5c7be5e9bac3b579f83c9069b5776902a2a545e8246e4de0e6f107fd"
        },
        "downloads": -1,
        "filename": "flash_attn-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ed497fd9f2632f84b58d74fd19119843",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1530940,
        "upload_time": "2022-11-22T10:07:05",
        "upload_time_iso_8601": "2022-11-22T10:07:05.090571Z",
        "url": "https://files.pythonhosted.org/packages/f3/6a/4c0bfde34ed78d5d4e1f23917f8405cd7e2cc5560827d3fb023e88b2c6fa/flash_attn-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a962ad062b5ff5cfe64c2c557cfef54eaefc49831301fdae2cc6a34b2a169f0",
          "md5": "631362644468e7c59b013760362d8ae9",
          "sha256": "75a530307346c9704bac4d7e4d33ca01050e833c232d6d5e98a1e0a95b56c0d3"
        },
        "downloads": -1,
        "filename": "flash_attn-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "631362644468e7c59b013760362d8ae9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1796845,
        "upload_time": "2022-11-26T00:43:23",
        "upload_time_iso_8601": "2022-11-26T00:43:23.395888Z",
        "url": "https://files.pythonhosted.org/packages/4a/96/2ad062b5ff5cfe64c2c557cfef54eaefc49831301fdae2cc6a34b2a169f0/flash_attn-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db64de6ecd80b6658d8008772e41838822828e714c8faa52fc8c19db8c4ca8cd",
          "md5": "128cc73bf395c0d19b97213e0b1279d4",
          "sha256": "0b189571845f229b30104dfeb40e8e3db7451ade84c64939dc89ef6cb4b1f192"
        },
        "downloads": -1,
        "filename": "flash_attn-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "128cc73bf395c0d19b97213e0b1279d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1808304,
        "upload_time": "2022-12-13T09:41:33",
        "upload_time_iso_8601": "2022-12-13T09:41:33.821764Z",
        "url": "https://files.pythonhosted.org/packages/db/64/de6ecd80b6658d8008772e41838822828e714c8faa52fc8c19db8c4ca8cd/flash_attn-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0779fa7825f1a64aa7ba88299ba3aa5148f45eef748e9fb6d862c73bbf0769b0",
          "md5": "eb3d83004f420c7658d7690828fbab50",
          "sha256": "01941f8e52431a6f26c825badb36bd227fb5f9b62d0348257607399cfd56a98f"
        },
        "downloads": -1,
        "filename": "flash_attn-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "eb3d83004f420c7658d7690828fbab50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1808343,
        "upload_time": "2022-12-14T22:54:49",
        "upload_time_iso_8601": "2022-12-14T22:54:49.746483Z",
        "url": "https://files.pythonhosted.org/packages/07/79/fa7825f1a64aa7ba88299ba3aa5148f45eef748e9fb6d862c73bbf0769b0/flash_attn-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d29c476efe31ea15d574fa952ff935d879dd2e40d2c0afc13fe5e4d54ca8de9",
          "md5": "ce09fc331ad44c2423e72d12c38e0c41",
          "sha256": "19e29845653d138411ac1c63977d4ec7e21eca6f987d321eea619dbf044b44c9"
        },
        "downloads": -1,
        "filename": "flash_attn-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "ce09fc331ad44c2423e72d12c38e0c41",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1815105,
        "upload_time": "2022-12-21T22:38:51",
        "upload_time_iso_8601": "2022-12-21T22:38:51.668940Z",
        "url": "https://files.pythonhosted.org/packages/8d/29/c476efe31ea15d574fa952ff935d879dd2e40d2c0afc13fe5e4d54ca8de9/flash_attn-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0d5eaeea25b49a3e3d746c87e2f9b44045ed65c928829c7a9ac855b513fde3a",
          "md5": "a660d22c2ebe8debbf047ed4ab202790",
          "sha256": "6ffb069e658815ed0bb68959a9174cbe6c539f2c58ceb6766a5fcf49d0afa4c5"
        },
        "downloads": -1,
        "filename": "flash_attn-0.2.6.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "a660d22c2ebe8debbf047ed4ab202790",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1821861,
        "upload_time": "2022-12-28T06:07:15",
        "upload_time_iso_8601": "2022-12-28T06:07:15.291485Z",
        "url": "https://files.pythonhosted.org/packages/a0/d5/eaeea25b49a3e3d746c87e2f9b44045ed65c928829c7a9ac855b513fde3a/flash_attn-0.2.6.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8684db179a480ae31b1093d07ce44452d2a0d8bdf98fd45985f2b68a42e2a364",
          "md5": "8bdce9ed18c9c19f8c657cbc39179be0",
          "sha256": "106959c057a881f1e59d483780290631fc97c658b271d541578a00feeeef80ff"
        },
        "downloads": -1,
        "filename": "flash_attn-0.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "8bdce9ed18c9c19f8c657cbc39179be0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1823634,
        "upload_time": "2023-01-07T01:54:19",
        "upload_time_iso_8601": "2023-01-07T01:54:19.443919Z",
        "url": "https://files.pythonhosted.org/packages/86/84/db179a480ae31b1093d07ce44452d2a0d8bdf98fd45985f2b68a42e2a364/flash_attn-0.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07ca2d8a5fc64b0b4bcc1b98b1ff7f37d8a0661234bc74e94bac5f67551896f8",
          "md5": "984b397d87cb885a0d32fdfcbc3ee5ff",
          "sha256": "b54fee86463cdb9933e8d47e500c52f3eaf283f1c8a9d96099e62acc7dc0be1f"
        },
        "downloads": -1,
        "filename": "flash_attn-0.2.8.tar.gz",
        "has_sig": false,
        "md5_digest": "984b397d87cb885a0d32fdfcbc3ee5ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1830863,
        "upload_time": "2023-01-19T21:25:55",
        "upload_time_iso_8601": "2023-01-19T21:25:55.374141Z",
        "url": "https://files.pythonhosted.org/packages/07/ca/2d8a5fc64b0b4bcc1b98b1ff7f37d8a0661234bc74e94bac5f67551896f8/flash_attn-0.2.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "07ca2d8a5fc64b0b4bcc1b98b1ff7f37d8a0661234bc74e94bac5f67551896f8",
        "md5": "984b397d87cb885a0d32fdfcbc3ee5ff",
        "sha256": "b54fee86463cdb9933e8d47e500c52f3eaf283f1c8a9d96099e62acc7dc0be1f"
      },
      "downloads": -1,
      "filename": "flash_attn-0.2.8.tar.gz",
      "has_sig": false,
      "md5_digest": "984b397d87cb885a0d32fdfcbc3ee5ff",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 1830863,
      "upload_time": "2023-01-19T21:25:55",
      "upload_time_iso_8601": "2023-01-19T21:25:55.374141Z",
      "url": "https://files.pythonhosted.org/packages/07/ca/2d8a5fc64b0b4bcc1b98b1ff7f37d8a0661234bc74e94bac5f67551896f8/flash_attn-0.2.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}