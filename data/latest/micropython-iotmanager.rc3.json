{
  "info": {
    "author": "Oliver Fueckert",
    "author_email": "oliver@fueckert.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: Implementation :: MicroPython",
      "Topic :: System :: Hardware"
    ],
    "description": "# Micropython ESP32 IoT Manager\n\nThe IoT Manager provides a framework with the following features:\n\n## WiFi Auto Config\nIf no SSID is configured, an AP is automaticaly created to which a client can connect. If an SSID and password is configured, the manager will connect to that SSID on next reboot automatically.\n\nIf the primary SSID is not available, a fallback SSID and password can be configured.\n\nFor configurations with open access points not requiring a password, a blank password should be used in the config file.\n\n## Config Management\nThe configuration for the manager is saved to the micropython filesystem with the name 'config'. The config file is saved in JSON format.\n\nIn addition, projects using the manager can add and access config keys through the attribut 'IotManager.config' on the class.\n\n## Sensor and App Data\nThe manager also has an OrderedDict attribute 'IotManager.data'. This will be populated at runtime. Sensor or other data can be added by key. This data will displayed on managers's webpage and can also be accessed via an HTTP GET request to /data for further use by other systems.\n\n## Adding your own code to run\nIotManager is based on Micropythons implementation of uasyncio which allows code to run in parallel. Asyncio co-routines can be added as a Task to the manager. After the manager has initialized and is started with the run() method, it will also start the user provided co-routines.\n\nIt is important to note that these co-routines should be non-blocking of nature by using the uasyncio.sleep methods on a regular basis.\n\n## OTA\nIf the running micropython firmware has been built with 2 OTA partitions, the manager also supports downloading an Micropython Application OTA image and deploy it to the secondary OTA partition. After the download was successful, the device will reboot and start with the new application image.\n\nThe OTA server is specificied on initialisation of the manager and should follow the following format:\nhttp://<ip or DNS name>:<port>/<path to .bin file>\n\nPlease note that HTTPS is not supported and that the .bin file should only be the application image, not a complete firmware file.\n\n## Other Features\n\n### Webpage UI CSS\nOnce the manager detects internet connectivity, it will use Bootstrap CSS for a nicer UI othwerwise it defaults to integrated basic CSS\n\n## Usage Example:\n\n```python\n    import time\n\n    # Init Manager\n    iot1 = IotManager(\n        use_css=True,\n        title=\"IoT Demo Controller\",\n        ota_url=\"http://10.1.1.10:8080/micropython.bin\",\n        debug=True,\n    )\n\n    # Add a custom config key to manager. This will be persisted.\n    iot1.config_add(\n        {\n            \"60_CUSTOM_CONFIG\": \"Counter\",\n        }\n    )\n\n    # Add Demo Data to Manager\n    for i in range(5):\n        iot1.data[f\"Key {i}\"] = f\"{i}\"\n\n    # Demo Class - Task to run in the background needs to be a non-blocking asyncio co-routine\n    class Alive:\n\n        # Method to run must be a async co-routine\n        async def run(self):\n            i = 0\n\n            # Get a custom config value from manager\n            counter_key_name = iot1.config.get('60_CUSTOM_CONFIG')\n            while 1:\n                print(\"Increment Counter\")\n                # Adds dynamic data to the manager for display\n                iot1.data[counter_key_name] = f\"{i}\"\n                iot1.data['gmt_time'] = time.gmtime()\n                i += 1\n                # Ensures that the method yields time to manager and other running tasks\n                await asyncio.sleep(3)\n\n    # Add task to manager\n    iot1.add_task(Alive().run())\n\n    # Start Manager, code after this line will not be executed anymore\n    iot1.run()\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "micropython-iotmanager",
    "package_url": "https://pypi.org/project/micropython-iotmanager/",
    "platform": null,
    "project_url": "https://pypi.org/project/micropython-iotmanager/",
    "project_urls": {
      "Source": "https://github.com/cubinet-code/micropython-iotmanager"
    },
    "release_url": "https://pypi.org/project/micropython-iotmanager/0.2.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "IoT Manager for ESP32 supporting WiFi config and OTA",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15062116,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98a07e7516405254544125596b76272fc0a0bb421d12c0f407546e1f90ef9e2c",
          "md5": "550567c9c40251f51ec773117b8f9f71",
          "sha256": "0839df22c9724d4f3a28e1c236a702ae6985f44d82b40a6656dfd5382b03f9c0"
        },
        "downloads": -1,
        "filename": "micropython-iotmanager-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "550567c9c40251f51ec773117b8f9f71",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2131,
        "upload_time": "2022-09-12T00:45:01",
        "upload_time_iso_8601": "2022-09-12T00:45:01.635325Z",
        "url": "https://files.pythonhosted.org/packages/98/a0/7e7516405254544125596b76272fc0a0bb421d12c0f407546e1f90ef9e2c/micropython-iotmanager-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee37522037295d95811b718f555ccb77c3aeed66bd67c17968044eb8f26138d6",
          "md5": "055636dea16acd0b4e2d8765ee1dccaf",
          "sha256": "598d7ad9efd338292756b878edb026026b3d02aa4b1757688b1d7100149d281d"
        },
        "downloads": -1,
        "filename": "micropython-iotmanager-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "055636dea16acd0b4e2d8765ee1dccaf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9836,
        "upload_time": "2022-09-12T00:53:00",
        "upload_time_iso_8601": "2022-09-12T00:53:00.827252Z",
        "url": "https://files.pythonhosted.org/packages/ee/37/522037295d95811b718f555ccb77c3aeed66bd67c17968044eb8f26138d6/micropython-iotmanager-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1a2e021f727293e0e22493050407260b50f565b1f1e6d9f61124473f8917da0",
          "md5": "ba640af09f48acfd4fe0db0925d442fe",
          "sha256": "3a44633acf53809e326c4a82edd4d90dde79520a5c90f65b95d0186ee42bf72f"
        },
        "downloads": -1,
        "filename": "micropython-iotmanager-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ba640af09f48acfd4fe0db0925d442fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9848,
        "upload_time": "2022-09-12T01:21:25",
        "upload_time_iso_8601": "2022-09-12T01:21:25.967541Z",
        "url": "https://files.pythonhosted.org/packages/e1/a2/e021f727293e0e22493050407260b50f565b1f1e6d9f61124473f8917da0/micropython-iotmanager-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e1a2e021f727293e0e22493050407260b50f565b1f1e6d9f61124473f8917da0",
        "md5": "ba640af09f48acfd4fe0db0925d442fe",
        "sha256": "3a44633acf53809e326c4a82edd4d90dde79520a5c90f65b95d0186ee42bf72f"
      },
      "downloads": -1,
      "filename": "micropython-iotmanager-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ba640af09f48acfd4fe0db0925d442fe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9848,
      "upload_time": "2022-09-12T01:21:25",
      "upload_time_iso_8601": "2022-09-12T01:21:25.967541Z",
      "url": "https://files.pythonhosted.org/packages/e1/a2/e021f727293e0e22493050407260b50f565b1f1e6d9f61124473f8917da0/micropython-iotmanager-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}