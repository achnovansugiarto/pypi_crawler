{
  "info": {
    "author": "",
    "author_email": "Magne Eik Lauritzen <mag.lauritzen@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![LICENCE](https://img.shields.io/github/license/nup002/pymjc)\n[![Flake8](https://github.com/nup002/pymjc/actions/workflows/flake8.yml/badge.svg)](https://github.com/nup002/mjc/actions/workflows/flake8.yml)\n[![PyTest](https://github.com/nup002/pymjc/actions/workflows/PyTest.yml/badge.svg)](https://github.com/nup002/mjc/actions/workflows/PyTest.yml)\n![Version](https://img.shields.io/pypi/v/pymjc)\n![Python](https://img.shields.io/pypi/pyversions/pymjc)\n# Minimum Jump Cost dissimilarity measure in Python\n\nThis python library implements the Minimum Jump Cost (MJC) dissimilarity measure devised by Joan Serra and Josep Lluis \nArcos in 2012. The MJC dissimilarity measure was shown to outperform the Dynamic Time Warp (DTW) dissimilarity measure \non several datasets. You can read their paper here: \nhttps://www.iiia.csic.es/sites/default/files/4584.pdf.\n\nThis library can compute the MJC for timeseries with different sampling rates, arbitrarily spaced data points, and \nnon-overlapping regions.\n\n## How to install\n`pymjc` is available from PyPi. Run the following in a command line terminal:<br>\n``` pip install pymjc```\n\n## How to use\nExample: \n```\nfrom pymjc import mjc\nimport numpy as np\n\nseries_1 = np.array([1,2,3,2,1])\nseries_2 = np.array([0,1,2,1,0])\n\nd_xy, abandoned = mjc(series_1, series_2, show_plot=True)\n\nprint(f\"The MJC dissimilarity of series 1 and series 2 is {d_xy}\")\n```\nThere are some options for reducing the computational load of this algorithm. They are detailed in the next section.\n\n## More detailed information\nThe time series s1 and s2 are specified as follows:\n- They may be python Lists or numpy.ndarrays\n- They may be of different length.\n- They may or may not have time information.\n- If one of the time series has time information, the other must also have it.\n- Their datatype may be floats or integers.\n\nA time series with no time information is just a list of values. The first element of the list corresponds to\nthe earliest point in the time series.<br>\nExample: `s1 = [d₀, d₁, d₂, ...]`, where `dᵢ` is the i-th value of the time series.\n\nA time series with time information must be a 2D array of shape (2, n). The data at index 0 are time\ndata, and the data at index 1 is amplitude data.<br>\nExample: `s1 = [[t₀, t₁, t₂, ...], [d₀, d₁, d₂, ...]]`, where `tᵢ` is the time of the i-th measurement. The time \nvalues may be integers or floats, and need not begin at 0.\n\nTo visualize the algorithm, you may pass the variable `show_plot=True`. This will generate a plot with the two time\nseries, and arrows signifying the jumps that the algorithm made when calculating the Minimum Jump Cost.\n\nTo stop the algorithm early, pass a value for `dxy_limit`. If the dissimilarity measure exceeds this value during \ncomputation, it is abandoned.\n\n\n### Performance\nThe time series are cast to numpy arrays. The checking and casting lowers execution speed. Therefore, an option to\ndisable this checking and casting has been implemented. If you are certain that the time series `s1` and `s2`\nare `numpy.ndarray`s of the format `[[time data],[amplitude data]]`, you may pass the variable `override_checks=True`.\n\nThe algorithm locates the overlapping region between the two timeseries. This step is skipped if the first and last\ntimestamps are equal between the two timeseries. If your data has no time data, it is skipped if there is the same\nnumber of samples in each timeseries.\n\nAs part of the calculation of the MJC, the algorithm calculates the standard deviations of the amplitude data, and\nthe average sampling periods of `s1` and `s2`. This lowers execution speed, but is required.\nHowever, if you know the standard deviations and/or the average time difference between data points of either\n(or both) `s1` and `s2` a-priori, you may pass these as variables. They are named `std_s1`, `std_s2`, `tavg_s1`, and\n`tavg_s2`. Any number of these may be passed. The ones which are not passed will be calculated.\n\nmjc() input parameters:\n```\ns1              : numpy ndarray | List. Time series 1.\ns2              : numpy ndarray | List. Time series 2.\ndxy_limit       : Optional float. Early abandoning variable.\nbeta            : Optional float. Time jump cost. \nshow_plot       : Optional bool. If True, displays a plot that visualize the algorithms jump path. Default False.\nstd_s1          : Optional float. Standard deviation of time series s1.\nstd_s2          : Optional float. Standard deviation of time series s2.\ntavg_s1         : Optional float. Average sampling period of time series 1.\ntavg_s2         : Optional float. Average sampling period of time series 2. \nreturn_args     : Optional bool. If True, returns the values for std_s1, std_s2, tavg_s1, tavg_s2, s1, and s2.\noverride_checks : Optional bool. Override checking and casting\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "data science,dissimilarity measure",
    "license": "MIT License  Copyright (c) 2O22 Magne Lauritzen  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pymjc",
    "package_url": "https://pypi.org/project/pymjc/",
    "platform": null,
    "project_url": "https://pypi.org/project/pymjc/",
    "project_urls": {
      "Bug Tracker": "https://github.com/nup002/pymjc/issues",
      "Homepage": "https://github.com/nup002/pymjc"
    },
    "release_url": "https://pypi.org/project/pymjc/1.0.3/",
    "requires_dist": [
      "matplotlib>=3.4",
      "numpy>=1.20.0"
    ],
    "requires_python": ">=3.7",
    "summary": "Minimum Jump Cost dissimilarity measure in Python",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15641993,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8297a3c0169f602dd10ffefd95ccace6a91d274005a176f4cd74511c0d8ce6de",
          "md5": "04f90a7d4ee79a46e757a40f0e3e9e5f",
          "sha256": "697a9b41b53b1eab049082aa7bf12e30a6e2f6f3c1cc06f501741fd559980979"
        },
        "downloads": -1,
        "filename": "pymjc-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04f90a7d4ee79a46e757a40f0e3e9e5f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10106,
        "upload_time": "2022-11-03T13:22:00",
        "upload_time_iso_8601": "2022-11-03T13:22:00.268383Z",
        "url": "https://files.pythonhosted.org/packages/82/97/a3c0169f602dd10ffefd95ccace6a91d274005a176f4cd74511c0d8ce6de/pymjc-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2907bad6d121f791b6f01c34c4be3db8e079495cc4980be32fb595b47fa6ef53",
          "md5": "06b6f882748bdd80a8fe785f975440af",
          "sha256": "26f1e0214800ac100308bfca86432342bcd6c3694dd9815e8b11dc82fbf998e0"
        },
        "downloads": -1,
        "filename": "pymjc-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "06b6f882748bdd80a8fe785f975440af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11551,
        "upload_time": "2022-11-03T13:22:02",
        "upload_time_iso_8601": "2022-11-03T13:22:02.113572Z",
        "url": "https://files.pythonhosted.org/packages/29/07/bad6d121f791b6f01c34c4be3db8e079495cc4980be32fb595b47fa6ef53/pymjc-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b20fdaad05f70cd7e20d483d1212ccd0266ed4afda3dc547e20339f622c86a0",
          "md5": "2a48c3ac7eeabf4325400c235f4baacd",
          "sha256": "53aec17481b20e54a1a8955cb4e921a3323f44f13dd44427ec9452876f13fd97"
        },
        "downloads": -1,
        "filename": "pymjc-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a48c3ac7eeabf4325400c235f4baacd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10075,
        "upload_time": "2022-11-03T13:45:46",
        "upload_time_iso_8601": "2022-11-03T13:45:46.611137Z",
        "url": "https://files.pythonhosted.org/packages/4b/20/fdaad05f70cd7e20d483d1212ccd0266ed4afda3dc547e20339f622c86a0/pymjc-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c4e578e349f59b0133e37dd835ded73e369d0886448641dfd790351de65063c",
          "md5": "1a6b7d281c99cf0d3e6487aafa81bd0d",
          "sha256": "74f0eb7778abd03b4ac3fd7642a7873cc51dcd0d78d61171e97fbd6fae2b0999"
        },
        "downloads": -1,
        "filename": "pymjc-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1a6b7d281c99cf0d3e6487aafa81bd0d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11530,
        "upload_time": "2022-11-03T13:45:50",
        "upload_time_iso_8601": "2022-11-03T13:45:50.090244Z",
        "url": "https://files.pythonhosted.org/packages/8c/4e/578e349f59b0133e37dd835ded73e369d0886448641dfd790351de65063c/pymjc-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c53d11ecaf4d648a48570402553491b703781254d1a4ec1ba6321d8fedd2413",
          "md5": "0626f813f49aa7122a2eebeff825616f",
          "sha256": "48db964b7d3b31159a7475392961fc9ce81ae3470ac0279f8fa610c3c8a58074"
        },
        "downloads": -1,
        "filename": "pymjc-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0626f813f49aa7122a2eebeff825616f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10079,
        "upload_time": "2022-11-03T13:55:13",
        "upload_time_iso_8601": "2022-11-03T13:55:13.947941Z",
        "url": "https://files.pythonhosted.org/packages/7c/53/d11ecaf4d648a48570402553491b703781254d1a4ec1ba6321d8fedd2413/pymjc-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19fb330c15940555c6b4e757572779441892476b8dc5c936ec8c46a0dc71adcf",
          "md5": "1cc5ed0ca8918abc551eb1a9842d4874",
          "sha256": "a6e4252e4a5c854f09dd85ba80b8cdb1fcbf60cf811b92becec9bc52d49139a1"
        },
        "downloads": -1,
        "filename": "pymjc-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1cc5ed0ca8918abc551eb1a9842d4874",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11544,
        "upload_time": "2022-11-03T13:55:15",
        "upload_time_iso_8601": "2022-11-03T13:55:15.405193Z",
        "url": "https://files.pythonhosted.org/packages/19/fb/330c15940555c6b4e757572779441892476b8dc5c936ec8c46a0dc71adcf/pymjc-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d7fe0d754151cd2e8c735deb8f08b950a375537fdd37a28af627198c564ff5c",
          "md5": "9ee19163607511ef6e0760605d3f74a8",
          "sha256": "5662e14af32dc97c2165dc6d5a9b4b46bea01ca49337a381b9cc74e986c1cb53"
        },
        "downloads": -1,
        "filename": "pymjc-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9ee19163607511ef6e0760605d3f74a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10082,
        "upload_time": "2022-11-03T14:08:34",
        "upload_time_iso_8601": "2022-11-03T14:08:34.369787Z",
        "url": "https://files.pythonhosted.org/packages/0d/7f/e0d754151cd2e8c735deb8f08b950a375537fdd37a28af627198c564ff5c/pymjc-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fb07506b90cd2288a123f1722c1691dca37a21b3e40f6837b8ca7a2d003d796",
          "md5": "713c3c146c1aaf66d234288f5fea869d",
          "sha256": "b339fd8615f428c837b8e25becea7118761d9776a9e207e48460fc5ad7f9b2c2"
        },
        "downloads": -1,
        "filename": "pymjc-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "713c3c146c1aaf66d234288f5fea869d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11548,
        "upload_time": "2022-11-03T14:08:35",
        "upload_time_iso_8601": "2022-11-03T14:08:35.803694Z",
        "url": "https://files.pythonhosted.org/packages/9f/b0/7506b90cd2288a123f1722c1691dca37a21b3e40f6837b8ca7a2d003d796/pymjc-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0d7fe0d754151cd2e8c735deb8f08b950a375537fdd37a28af627198c564ff5c",
        "md5": "9ee19163607511ef6e0760605d3f74a8",
        "sha256": "5662e14af32dc97c2165dc6d5a9b4b46bea01ca49337a381b9cc74e986c1cb53"
      },
      "downloads": -1,
      "filename": "pymjc-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9ee19163607511ef6e0760605d3f74a8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 10082,
      "upload_time": "2022-11-03T14:08:34",
      "upload_time_iso_8601": "2022-11-03T14:08:34.369787Z",
      "url": "https://files.pythonhosted.org/packages/0d/7f/e0d754151cd2e8c735deb8f08b950a375537fdd37a28af627198c564ff5c/pymjc-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9fb07506b90cd2288a123f1722c1691dca37a21b3e40f6837b8ca7a2d003d796",
        "md5": "713c3c146c1aaf66d234288f5fea869d",
        "sha256": "b339fd8615f428c837b8e25becea7118761d9776a9e207e48460fc5ad7f9b2c2"
      },
      "downloads": -1,
      "filename": "pymjc-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "713c3c146c1aaf66d234288f5fea869d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 11548,
      "upload_time": "2022-11-03T14:08:35",
      "upload_time_iso_8601": "2022-11-03T14:08:35.803694Z",
      "url": "https://files.pythonhosted.org/packages/9f/b0/7506b90cd2288a123f1722c1691dca37a21b3e40f6837b8ca7a2d003d796/pymjc-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}