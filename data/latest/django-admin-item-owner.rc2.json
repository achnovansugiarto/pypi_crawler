{
  "info": {
    "author": "zencore",
    "author_email": "dobetter@zencore.cn",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# django-admin-item-owner\n\nModel item always has an owner, and login user can only see owned items.\n\n## Goal\n\n- Set item's owner to current user automatically.\n\n## Install\n\n```bash\npip install django-admin-item-owner\n```\n\n## Settings\n\n```python\n\nINSTALLED_APPS = [\n    ....\n    'django_global_request',\n    'item_owner',\n    ...\n]\n\nMIDDLEWARE = [\n    ...\n    'django_global_request.middleware.GlobalRequestMiddleware',\n    ...\n]\n```\n\n## Example\n\nexample/models.py\n\n```python\nfrom django.db import models\nfrom item_owner.models import ItemOwnerMixin\nfrom item_owner.models import ItemShareMixin\n\nclass Category(ItemOwnerMixin, models.Model):\n    title = models.CharField(max_length=32)\n\n    def __str__(self):\n        return self.title\n\nclass Book(ItemOwnerMixin, ItemShareMixin, models.Model):\n    category = models.ForeignKey(Category, on_delete=models.SET_NULL, null=True, blank=True, related_name=\"books\")\n    title = models.CharField(max_length=32)\n\n    def __str__(self):\n        return self.title\n\n```\n\nexample/admin.py\n\n\n```python\nfrom django.contrib import admin\nfrom django import forms\nfrom item_owner.admin import ItemOwnerMixin\nfrom item_owner.admin import ItemShareMixin\nfrom .models import Category\nfrom .models import Book\n\n\n\nclass BookInline(ItemOwnerMixin, ItemShareMixin, admin.TabularInline):\n    model = Book\n\nclass CategoryAdmin(ItemOwnerMixin, admin.ModelAdmin):\n    list_display = [\"title\"]\n    inlines = [\n        BookInline,\n    ]\n\nclass BookAdmin(ItemOwnerMixin, ItemShareMixin, admin.ModelAdmin):\n    list_display = [\"title\"]\n\nadmin.site.register(Category, CategoryAdmin)\nadmin.site.register(Book, BookAdmin)\n\n```\n\n## Releases\n\n### v0.2.0 2020-01-08\n\n- Add ItemShareMixin for models and admins.\n\n### v0.1.0 2019-12-01\n\n- First release.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "django-admin-item-owner",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-admin-item-owner",
    "package_url": "https://pypi.org/project/django-admin-item-owner/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-admin-item-owner/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/django-admin-item-owner/0.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Model item always has an owner, and login user can only see owned items.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6414084,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba7ce649082a4772af26d10c13b0c544f4fa8b0daa04e832eca5e958c7082a24",
          "md5": "d7ced9cd13a872b6d0858dc4d19d703c",
          "sha256": "89469e59792ec8d15b9ba64d0e512810c8b6bdd58f1c1b3f4cbc3bae73d293a3"
        },
        "downloads": -1,
        "filename": "django-admin-item-owner-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d7ced9cd13a872b6d0858dc4d19d703c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2715,
        "upload_time": "2019-12-01T09:11:36",
        "upload_time_iso_8601": "2019-12-01T09:11:36.918936Z",
        "url": "https://files.pythonhosted.org/packages/ba/7c/e649082a4772af26d10c13b0c544f4fa8b0daa04e832eca5e958c7082a24/django-admin-item-owner-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b08a7a7104021d9d77725d2532c708a5b39c617df0c98191424b4a51c7e1322",
          "md5": "4cfb8999ab9b4ab00df958505fab121e",
          "sha256": "4b76a085f53c41384c7a8fa4bd20ba68bf41bccd493270be6b2d6f8937449f05"
        },
        "downloads": -1,
        "filename": "django-admin-item-owner-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4cfb8999ab9b4ab00df958505fab121e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3022,
        "upload_time": "2020-01-08T08:34:44",
        "upload_time_iso_8601": "2020-01-08T08:34:44.266764Z",
        "url": "https://files.pythonhosted.org/packages/6b/08/a7a7104021d9d77725d2532c708a5b39c617df0c98191424b4a51c7e1322/django-admin-item-owner-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6b08a7a7104021d9d77725d2532c708a5b39c617df0c98191424b4a51c7e1322",
        "md5": "4cfb8999ab9b4ab00df958505fab121e",
        "sha256": "4b76a085f53c41384c7a8fa4bd20ba68bf41bccd493270be6b2d6f8937449f05"
      },
      "downloads": -1,
      "filename": "django-admin-item-owner-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4cfb8999ab9b4ab00df958505fab121e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3022,
      "upload_time": "2020-01-08T08:34:44",
      "upload_time_iso_8601": "2020-01-08T08:34:44.266764Z",
      "url": "https://files.pythonhosted.org/packages/6b/08/a7a7104021d9d77725d2532c708a5b39c617df0c98191424b4a51c7e1322/django-admin-item-owner-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}