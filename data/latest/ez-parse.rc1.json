{
  "info": {
    "author": "",
    "author_email": "Shivansh Srivastava <ss5945@columbia.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# Resume-Parser\nA Python library that scrapes essential information from PDFs of LinkedIn profiles.\n\n[![License: MIT](https://img.shields.io/badge/License-MIT-brightgreen.svg)](https://opensource.org/licenses/MIT)\n\n![](https://img.shields.io/github/issues/ShivanshSrivastava1/Resume-Parser)\n\n![](https://github.com/ShivanshSrivastava1/Resume-Parser/actions/workflows/build.yml/badge.svg)\n\n[![codecov](https://codecov.io/github/ShivanshSrivastava1/Resume-Parser/branch/main/graph/badge.svg?token=V4IKQ490DY)](https://codecov.io/github/ShivanshSrivastava1/Resume-Parser)\n\n[Project Board](https://github.com/users/ShivanshSrivastava1/projects/2/views/1)\n\n## Overview\nThis is a parser that extracts important information from a LinkedIn profile PDF. It converts the PDF to a list of strings, and then uses LinkedIn's headers to create a dictionary that maps said headers to string values that contain the most relevant parts of a candidate's profile.\n\n## Installation\nInstall the library's dependencies and build the library using `make develop`.\n\n## Accessing LinkedIn PDFs\nVisit the LinkedIn profile that you would like to parse. Under the individual's basic profile information, there is a button labeled \"More\". Click on this button, and then click on \"Save to PDF\".\n\n## Usage\nIn your code, begin by importing the package:\n\n`from Resume-Parser import parser`\n\nYou can extract the text data from the PDF like so:\n\n`data = parser.extract_pdf(<path_to_linkedin_pdf>)`\n\nThis parsed data can also be stored in a dictionary:\n\n`res = parser.get_many(data)`\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License  Copyright (c) 2023 Shivansh Srivastava  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ez-parse",
    "package_url": "https://pypi.org/project/ez-parse/",
    "platform": null,
    "project_url": "https://pypi.org/project/ez-parse/",
    "project_urls": {
      "repository": "https://github.com/ShivanshSrivastava1/Resume-Parser"
    },
    "release_url": "https://pypi.org/project/ez-parse/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A Python library for parsing PDFs of LinkedIn profiles",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17443014,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da2e81d571be8ffb71a8e60fd52407f76eb6ecdcd4af0488ca929c91c49bb7e0",
          "md5": "19910793207123c1d6d73407e2b0c867",
          "sha256": "e823bc78b0302b936634f1e5e46858f87edb8484dee68e5b64f814498ced1b6f"
        },
        "downloads": -1,
        "filename": "ez-parse-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "19910793207123c1d6d73407e2b0c867",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 44907,
        "upload_time": "2023-03-25T16:04:39",
        "upload_time_iso_8601": "2023-03-25T16:04:39.095688Z",
        "url": "https://files.pythonhosted.org/packages/da/2e/81d571be8ffb71a8e60fd52407f76eb6ecdcd4af0488ca929c91c49bb7e0/ez-parse-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "da2e81d571be8ffb71a8e60fd52407f76eb6ecdcd4af0488ca929c91c49bb7e0",
        "md5": "19910793207123c1d6d73407e2b0c867",
        "sha256": "e823bc78b0302b936634f1e5e46858f87edb8484dee68e5b64f814498ced1b6f"
      },
      "downloads": -1,
      "filename": "ez-parse-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "19910793207123c1d6d73407e2b0c867",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 44907,
      "upload_time": "2023-03-25T16:04:39",
      "upload_time_iso_8601": "2023-03-25T16:04:39.095688Z",
      "url": "https://files.pythonhosted.org/packages/da/2e/81d571be8ffb71a8e60fd52407f76eb6ecdcd4af0488ca929c91c49bb7e0/ez-parse-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}