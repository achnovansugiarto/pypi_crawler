{
  "info": {
    "author": "Sunil Aleti",
    "author_email": "iam@sunilaleti.dev",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\nstats(), iv_woe(), pushdb()\n\nThis function provides some statistical summary of a given dataframe.\n\nThe **stats()** function takes in a dataframe and returns the following statistics:\n\n- count\n- mean\n- std\n- min\n- 10th percentile\n- 20th percentile\n- 25th percentile\n- 30th percentile\n- 40th percentile\n- 50th percentile (median)\n- 60th percentile\n- 70th percentile\n- 75th percentile\n- 80th percentile\n- 90th percentile\n- 95th percentile\n- 99th percentile\n- max\n- % of missing values\n- % of non-zero values\n- #numberofunique_values\n\n```python\nimport pandas as pd\nimport datanerd as dn\n\ndf = pd.read_csv('titanic.csv')\ndn.stats(df)\n```\n\nThe **iv_woe()** function is used to calculate the Weight of Evidence (WoE) and Information Value (IV) for a given dataframe. \n\nThe WoE is a measure of how much the presence or absence of a predictor (feature) contributes to the probability of target. \n\nThe IV is a measure of the strength of the relationship between the predictor and the target.\n\nThe **iv_woe()** function takes in the following arguments:\n\n**data:** a dataframe containing the predictor variables and the target variable\n\n**target:** the name of the target variable\n\n**bins:** the number of bins to use for discretizing continuous variables\n\n**optimize:** a boolean indicating whether to optimize the binning of the continuous variables\n\n**thresold:** the minimum percentage of non-events (negative outcome) in each bin for optimization. If optimize is set to True, the function will iterate over the number of bins from 20 to 1 and calculate the WoE and IV for each bin. If the percentage of non-events in each bin is greater than or equal to the specified thresold, it will return the WoE and IV for that bin. If it cannot find a binning that meets the thresold, it will return the WoE and IV for the best bin it could find.\n\nIf optimize is set to False, the function will calculate the WoE and IV for the specified number of bins.\n\nThe function returns a dataframe containing the WoE and IV for each predictor variable.\n\n```python\nimport pandas as pd\nimport datanerd as dn\n\ndf = pd.read_csv('cancer.csv')\niv,woe = dn.iv_woe(data=df,target='Diagnosis',bins=20,optimize=True,thresold=True)\n```\n\nThis **pushdb()** function takes Pandas dataframe (**`data`**), a table name (**`tablename`**), a server name (**`server`**), a database name (**`database`**), and a schema name (**`schema`**)\n\nIt then creates a connection to a Microsoft SQL Server database using these input parameters, and pushes the **`data`** i.e dataframe to the specified table in the database. The function is written to handle a fast execution of many records using the **`fast_executemany`** argument in the **`create_engine`** function.\n\n```python\nimport pandas as pd\nimport datanerd as dn\n\ndf = pd.read_csv('day.csv')\ndn.pushdb(df, tablename='day', server='SQL-DW', database='schedule', schema='ana')\n```\n\nThis will push the data i.e dataframe to the **day** table in the **schedule** database on the **SQL-DW** server, using the **ana** schema.\n\n\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,describe,stats,unique values,information value,woe,iv",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "datanerd",
    "package_url": "https://pypi.org/project/datanerd/",
    "platform": null,
    "project_url": "https://pypi.org/project/datanerd/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/datanerd/0.7/",
    "requires_dist": [
      "pandas",
      "numpy",
      "sqlalchemy",
      "pyodbc"
    ],
    "requires_python": "",
    "summary": "Contains multiple functions, stats() and iv_woe(), pushdb()",
    "version": "0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16365446,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27bbe6a7200b60a2a93b4e4689ae0d5a83aa907508ff49904639727ef9f6402e",
          "md5": "696a22e87582b6fdae70e89efc88d8a3",
          "sha256": "813ed2f89e7f89d1ee8fa825f9694fe88dc824f3898a1e272428e8c91f298a68"
        },
        "downloads": -1,
        "filename": "datanerd-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "696a22e87582b6fdae70e89efc88d8a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4385,
        "upload_time": "2023-01-08T02:30:12",
        "upload_time_iso_8601": "2023-01-08T02:30:12.695982Z",
        "url": "https://files.pythonhosted.org/packages/27/bb/e6a7200b60a2a93b4e4689ae0d5a83aa907508ff49904639727ef9f6402e/datanerd-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73c72ce6c260d9c66ea5327059255a06cd6e8858d7fa78d99658029954f82488",
          "md5": "f29cd8bb5f7b42dfae6250f9d230e3eb",
          "sha256": "fd24f2bfde3988e230ccb6a6c053352fcdda0241eba7eb2b7818964f2386c817"
        },
        "downloads": -1,
        "filename": "datanerd-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f29cd8bb5f7b42dfae6250f9d230e3eb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4248,
        "upload_time": "2023-01-08T03:13:31",
        "upload_time_iso_8601": "2023-01-08T03:13:31.607577Z",
        "url": "https://files.pythonhosted.org/packages/73/c7/2ce6c260d9c66ea5327059255a06cd6e8858d7fa78d99658029954f82488/datanerd-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "584cf457262d227620c141b57d99908fae76ca9ebed4c7e2c03d6539f9c3ed16",
          "md5": "d9777c17cef34b04c9ef8da8ff149892",
          "sha256": "4660b310abbbb957976cbcefd1aa4ac94e12624bd29e953038846f613a68a12b"
        },
        "downloads": -1,
        "filename": "datanerd-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d9777c17cef34b04c9ef8da8ff149892",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4650,
        "upload_time": "2023-01-08T03:29:53",
        "upload_time_iso_8601": "2023-01-08T03:29:53.588629Z",
        "url": "https://files.pythonhosted.org/packages/58/4c/f457262d227620c141b57d99908fae76ca9ebed4c7e2c03d6539f9c3ed16/datanerd-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8eafd37c00dbde5acfb9d6e1289f9acf6a8ebcefa188fffe333c7a8b0085bf62",
          "md5": "3be6d258012f22e426c47fdbf3469167",
          "sha256": "e1d285446452f3a95dd7850100c40458fe3e3450f03a3a437ad6041575dd698e"
        },
        "downloads": -1,
        "filename": "datanerd-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3be6d258012f22e426c47fdbf3469167",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4682,
        "upload_time": "2023-01-08T03:42:58",
        "upload_time_iso_8601": "2023-01-08T03:42:58.359605Z",
        "url": "https://files.pythonhosted.org/packages/8e/af/d37c00dbde5acfb9d6e1289f9acf6a8ebcefa188fffe333c7a8b0085bf62/datanerd-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b4954c36d3dfc8e5328297cd88fd4ef10eeb4331d9f278e438e104a78845436",
          "md5": "d789c791cd30ddea4e3d23257cfb61af",
          "sha256": "eba39791a89832ab91187187470b01150f42a701f78ecc13697509e21ffe4adb"
        },
        "downloads": -1,
        "filename": "datanerd-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d789c791cd30ddea4e3d23257cfb61af",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4685,
        "upload_time": "2023-01-08T03:52:28",
        "upload_time_iso_8601": "2023-01-08T03:52:28.817839Z",
        "url": "https://files.pythonhosted.org/packages/8b/49/54c36d3dfc8e5328297cd88fd4ef10eeb4331d9f278e438e104a78845436/datanerd-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da8f98aab4a89c33c3870c4d8d1a2e314fe02f9b210491f7bd1b15bc92e49c8e",
          "md5": "96a3746498c027e80bec8828b03896c7",
          "sha256": "f2d6fdde381ac8bd272d107cb3db2ff59ce6162368660d04d1ea8ccd3761afed"
        },
        "downloads": -1,
        "filename": "datanerd-0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "96a3746498c027e80bec8828b03896c7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4359,
        "upload_time": "2023-01-09T21:09:04",
        "upload_time_iso_8601": "2023-01-09T21:09:04.817182Z",
        "url": "https://files.pythonhosted.org/packages/da/8f/98aab4a89c33c3870c4d8d1a2e314fe02f9b210491f7bd1b15bc92e49c8e/datanerd-0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da4505ca4e6dd9974918ca5e915fa99f949dd7abcb5c483cfab8d0bfc9e769a3",
          "md5": "d2a493c0ed117ab42dd27f6185955895",
          "sha256": "4a35d9fe41ee936b9da880adb1ae5ca0e673f292f7e9cf26d6cdc7edbe7472df"
        },
        "downloads": -1,
        "filename": "datanerd-0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d2a493c0ed117ab42dd27f6185955895",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5497,
        "upload_time": "2023-01-09T21:10:07",
        "upload_time_iso_8601": "2023-01-09T21:10:07.198595Z",
        "url": "https://files.pythonhosted.org/packages/da/45/05ca4e6dd9974918ca5e915fa99f949dd7abcb5c483cfab8d0bfc9e769a3/datanerd-0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "da4505ca4e6dd9974918ca5e915fa99f949dd7abcb5c483cfab8d0bfc9e769a3",
        "md5": "d2a493c0ed117ab42dd27f6185955895",
        "sha256": "4a35d9fe41ee936b9da880adb1ae5ca0e673f292f7e9cf26d6cdc7edbe7472df"
      },
      "downloads": -1,
      "filename": "datanerd-0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d2a493c0ed117ab42dd27f6185955895",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5497,
      "upload_time": "2023-01-09T21:10:07",
      "upload_time_iso_8601": "2023-01-09T21:10:07.198595Z",
      "url": "https://files.pythonhosted.org/packages/da/45/05ca4e6dd9974918ca5e915fa99f949dd7abcb5c483cfab8d0bfc9e769a3/datanerd-0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}