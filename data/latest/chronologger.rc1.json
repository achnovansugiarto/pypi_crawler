{
  "info": {
    "author": "Francisco Perez-Sorrosal",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Chronologger\n\nTime utilities for Python<sup>[1](#footnote1)</sup>\n\n[![Build Status](https://travis-ci.org/francisco-perez-sorrosal/chronologger.svg?branch=master)](https://travis-ci.org/francisco-perez-sorrosal/chronologger)\n[![Coverage Status](https://coveralls.io/repos/github/francisco-perez-sorrosal/chronologger/badge.svg?branch=master)](https://coveralls.io/github/francisco-perez-sorrosal/chronologger?branch=master)\n\n# Requirements\nRequirements: Python >= 3.6\n\nUse the *Makefile* targets to access most of the functionality: `make install-dev`, `make dbuild`, `make drun`, `make dstart`...\n\nOtherwise...\n\n# Install\n```shell script\npip install git+https://git@github.com/francisco-perez-sorrosal/chronologger.git\n```\n\n# Run the Simple Example\n\n## Docker\n\nClone the project...\n```shell script\ngit clone git@github.com:francisco-perez-sorrosal/chronologger.git\n```\n\nand then...\n```shell script\ncd chronologger\ndocker build -f Dockerfile.example -t chronologger-example .\ndocker run -itd --name chronologger-example chronologger-example:latest\ndocker exec -it chronologger-example python simple_example.py \n```\n\n## Local\n\nAfter installing the package, just clone the project and execute example with:\n\n```shell script\ngit clone git@github.com:francisco-perez-sorrosal/chronologger.git ; cd chronologger\npython examples/simple_example.py\n``` \n\nor open your python environment/IDE and execute:\n\n```python\nimport time\n\nfrom chronologger import Timer, TimeUnit, root_timer\n\n\n# Example of decorator: This should report ~100ms each time that is called\n@Timer(name=\"Foo method!\", unit=TimeUnit.ms, simple_log=True)\ndef foo():\n    time.sleep(0.1)\n\n\ndef main():\n    # Example of explicit timer: This should report ~100ms\n    timer = Timer(\"Individual Timer\", unit=TimeUnit.ms).start()\n    time.sleep(0.1)\n    timer.stop()\n\n    # Example of explicit context timer: This should report ~1s\n    with Timer(name=\"Test Loop!\", unit=TimeUnit.s, simple_log=True) as timer:\n        for i in range(5):\n            time.sleep(0.1)  # e.g. simulate IO\n            foo()\n            timer.mark(\"i_{}\".format(i))\n\n\nif __name__ == \"__main__\":\n    root_timer.label(\"   STARTING!!!\")\n    main()\n    root_timer.label(\"   PRINTING TIME\")\n    root_timer.print()\n\n```\n\n# Development\n\nInstall: \n\n```shell script\nmake install-dev\n```\n\nUse other commands in the Makefile for extra functionality.\n\n## Docker\n\n```shell script\nmake dbuild\nmake drun\nmake dtests\n```\n\nUse other commands in the Makefile for extra functionality.\n\n### IDE (PyCharm) Docker Interpreter\nOnce you create the Docker image with `make dbuild` you can specify the `chronologger-dev:latest` image as a Ptyhon\nDocker interpreter in IntelliJ/PyCharm for example.\n\n---\n\n<a name=\"footnote1\">1</a>: Inspired by the blog post [Python Timer Functions: Three Ways to Monitor Your Code](https://realpython.com/python-timer/) by Geir Arne Hjelle \n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "time,utilities",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "chronologger",
    "package_url": "https://pypi.org/project/chronologger/",
    "platform": "",
    "project_url": "https://pypi.org/project/chronologger/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/chronologger/0.0.0.dev23/",
    "requires_dist": [
      "dataclasses ; python_version < \"3.7\"",
      "typing-extensions ; python_version <= \"3.7\"",
      "bump2version ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Time utilities for Python code",
    "version": "0.0.0.dev23",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8019003,
  "releases": {
    "0.0.0.dev23": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7b875273115327dc03bc492fd1e96ee357e04bd6a1d9dd68f715bb57da67565",
          "md5": "9a2f567aff87ebc2608790ac3a3c4acf",
          "sha256": "886d8c44aaf710cd9c718772a7cce780bb3d93f5528df4607df9a61e4e559b37"
        },
        "downloads": -1,
        "filename": "chronologger-0.0.0.dev23-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a2f567aff87ebc2608790ac3a3c4acf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13491,
        "upload_time": "2020-08-22T19:39:46",
        "upload_time_iso_8601": "2020-08-22T19:39:46.044085Z",
        "url": "https://files.pythonhosted.org/packages/f7/b8/75273115327dc03bc492fd1e96ee357e04bd6a1d9dd68f715bb57da67565/chronologger-0.0.0.dev23-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d36c463baca5f63e559bf2622f3e8bbcbef53767913327c2ccbf6e7e9f3b2bc",
          "md5": "dd171491e40c539ca4cabb27702d0281",
          "sha256": "6b026a193089521e68b057f04cde71597d3cfcf83142d1a7d7dabb5d9d3ba196"
        },
        "downloads": -1,
        "filename": "chronologger-0.0.0.dev23.tar.gz",
        "has_sig": false,
        "md5_digest": "dd171491e40c539ca4cabb27702d0281",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12003,
        "upload_time": "2020-08-22T19:39:48",
        "upload_time_iso_8601": "2020-08-22T19:39:48.379701Z",
        "url": "https://files.pythonhosted.org/packages/2d/36/c463baca5f63e559bf2622f3e8bbcbef53767913327c2ccbf6e7e9f3b2bc/chronologger-0.0.0.dev23.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f7b875273115327dc03bc492fd1e96ee357e04bd6a1d9dd68f715bb57da67565",
        "md5": "9a2f567aff87ebc2608790ac3a3c4acf",
        "sha256": "886d8c44aaf710cd9c718772a7cce780bb3d93f5528df4607df9a61e4e559b37"
      },
      "downloads": -1,
      "filename": "chronologger-0.0.0.dev23-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9a2f567aff87ebc2608790ac3a3c4acf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13491,
      "upload_time": "2020-08-22T19:39:46",
      "upload_time_iso_8601": "2020-08-22T19:39:46.044085Z",
      "url": "https://files.pythonhosted.org/packages/f7/b8/75273115327dc03bc492fd1e96ee357e04bd6a1d9dd68f715bb57da67565/chronologger-0.0.0.dev23-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2d36c463baca5f63e559bf2622f3e8bbcbef53767913327c2ccbf6e7e9f3b2bc",
        "md5": "dd171491e40c539ca4cabb27702d0281",
        "sha256": "6b026a193089521e68b057f04cde71597d3cfcf83142d1a7d7dabb5d9d3ba196"
      },
      "downloads": -1,
      "filename": "chronologger-0.0.0.dev23.tar.gz",
      "has_sig": false,
      "md5_digest": "dd171491e40c539ca4cabb27702d0281",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12003,
      "upload_time": "2020-08-22T19:39:48",
      "upload_time_iso_8601": "2020-08-22T19:39:48.379701Z",
      "url": "https://files.pythonhosted.org/packages/2d/36/c463baca5f63e559bf2622f3e8bbcbef53767913327c2ccbf6e7e9f3b2bc/chronologger-0.0.0.dev23.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}