{
  "info": {
    "author": "Ellert van der Velden",
    "author_email": "ellert_vandervelden@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Pytest",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": "|PyPI| |Python| |GitHub|\n\n*pytest-passrunner*: A Pytest plugin that provides the 'run_on_pass' marker\n===========================================================================\nThe *pytest-passrunner* plugin for Pytest introduces a new marker called `run_on_pass`, which can be used to mark an entire test suite to only run a test if all previous tests in it passed successfully.\nThis allows for the user to use test structures, where previous tests setup future ones.\nIf previous tests were to fail, the future ones cannot run properly, and thus should be 'xfailed' (expected failure) instead of attempted anyway.\nSee below for some examples.\n\n\nInstallation & Use\n==================\nHow to install\n--------------\n*pytest-passrunner* can be easily installed directly from `PyPI`_ with::\n\n    $ pip install pytest-passrunner\n\nIf required, one can also clone the `repository`_ and install *pytest-passrunner* manually::\n\n    $ git clone https://github.com/1313e/pytest-passrunner\n    $ cd pytest-success\n    $ pip install .\n\nThe `run_on_pass` marker can now be used in tests with `pytest.mark.run_on_pass`.\n\n.. _repository: https://github.com/1313e/pytest-passrunner\n.. _PyPI: https://pypi.org/project/pytest-passrunner\n\nExample use\n-----------\nThe `run_on_pass` marker, when used on a Pytest suite, marks all tests in the suite to solely run if all previous tests in the suite passed.\nAnother way of saying this is that if a test in a marked test suite fails, all remaining tests are automatically flagged as 'xfail' (expected fail) and do not run.\n\nOne use-case of this marker is when you want to write a test suite, where a specific object is being modified throughout the tests.\nIn this scenario, it is not uncommon that a particular test in the test suite can only run correctly if all previous tests passed, as otherwise the object is not in the expected state.\nThe following illustrates this scenario:\n\n.. code:: python\n\n    # Import pytest\n    import pytest\n\n\n    # Define Pytest suite\n    class Test_list(object):\n        # Create fixture that is shared between all tests in the suite\n        # In this case, a list object\n        @pytest.fixture(scope='class')\n        def lst(self):\n            # Create empty list\n            lst = []\n\n            # Return it\n            return(lst)\n\n        # Perform test that sets up this list\n        def test_1(self, lst):\n            # Append 1 to the list\n            lst.append(1)\n\n            # Test that 1 was appended\n            assert lst == [1]\n\n        # Perform test that requires lst to be [1]\n        def test_2(self, lst):\n            # Append 2 to the list\n            lst.append(2)\n\n            # Test that 1 and 2 are in the list now\n            assert lst == [1, 2]\n\nIn this simple test script, a list object is being shared between all the tests in the `Test_list` test suite.\nIn the second test, `test_2`, it is assumed that this list object was correctly set up by the first test.\nIf `test_1` were to fail for whatever reason, `test_2` cannot possibly pass anymore, as the list object was never set up properly.\nHowever, `test_2` (and any further tests after it) will still be ran, wasting time and cluttering the final pytest summary overview with unhelpful errors.\n\nIn order to solve this, we can apply the `run_on_pass` marker:\n\n.. code:: python\n\n    # Import pytest\n    import pytest\n\n\n    # Define Pytest suite with the 'run_on_pass' marker\n    @pytest.mark.run_on_pass\n    class Test_list(object):\n        # Create fixture that is shared between all tests in the suite\n        # In this case, a list object\n        @pytest.fixture(scope='class')\n        def lst(self):\n            # Create empty list\n            lst = []\n\n            # Return it\n            return(lst)\n\n        # Perform test that sets up this list\n        def test_1(self, lst):\n            # Append 1 to the list\n            lst.append(1)\n\n            # Test that 1 was appended\n            assert lst == [1]\n\n        # Perform test that requires lst to be [1]\n        def test_2(self, lst):\n            # Append 2 to the list\n            lst.append(2)\n\n            # Test that 1 and 2 are in the list now\n            assert lst == [1, 2]\n\nIf now the execution of `test_1` fails, `test_2` (and any further tests after it in this test suite) will not be ran and be flagged as 'xfail' instead.\nTests that are xfailed do not generate any error messages in the pytest summary overview and are not seen as failed/errored tests either.\nThis keeps the summary cleaner, and no time is wasted on tests that cannot pass.\n\n\n.. |PyPI| image:: https://img.shields.io/pypi/v/pytest-passrunner.svg?logo=pypi&logoColor=white&label=PyPI\n    :target: https://pypi.python.org/pypi/pytest-passrunner\n    :alt: PyPI - Latest Release\n.. |Python| image:: https://img.shields.io/pypi/pyversions/pytest-passrunner?logo=python&logoColor=white&label=Python\n    :target: https://pypi.python.org/pypi/pytest-passrunner\n    :alt: PyPI - Python Versions\n.. |GitHub| image:: https://img.shields.io/github/workflow/status/1313e/pytest-passrunner/Test?logo=github&logoColor=white&label=Actions\n    :target: https://github.com/1313e/pytest-passrunner/actions\n    :alt: GitHub Actions - Build Status\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "pytest passrunner plugin marker",
    "license": "BSD-3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytest-passrunner",
    "package_url": "https://pypi.org/project/pytest-passrunner/",
    "platform": "Windows",
    "project_url": "https://pypi.org/project/pytest-passrunner/",
    "project_urls": {
      "Source Code": "https://github.com/1313e/pytest-passrunner"
    },
    "release_url": "https://pypi.org/project/pytest-passrunner/1.0.0/",
    "requires_dist": [
      "pytest (>=4.6.0)"
    ],
    "requires_python": ">=3.6, <4",
    "summary": "Pytest plugin providing the 'run_on_pass' marker",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9371373,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11480effbbececb73b9e697a345730ed719d7e5103f8cd66a2cb17b6449b4544",
          "md5": "8c0e72c35ab92a593d8786ee3312d098",
          "sha256": "4beda91498eeff54bb715d1401582fd7b856858ec752e0eac781e231e5979db6"
        },
        "downloads": -1,
        "filename": "pytest_passrunner-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c0e72c35ab92a593d8786ee3312d098",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 6221,
        "upload_time": "2021-02-10T06:33:54",
        "upload_time_iso_8601": "2021-02-10T06:33:54.063332Z",
        "url": "https://files.pythonhosted.org/packages/11/48/0effbbececb73b9e697a345730ed719d7e5103f8cd66a2cb17b6449b4544/pytest_passrunner-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e38e344aec99070ac94946ab1dd3138020c176880d530c8cb955d37f5e07917b",
          "md5": "e7a3e2fdd96dcf64d092ccb5aae56532",
          "sha256": "ed80c2001a45a0b3ced323f63a913ba7319274bdf961d0c08409d6048349d179"
        },
        "downloads": -1,
        "filename": "pytest-passrunner-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e7a3e2fdd96dcf64d092ccb5aae56532",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 6075,
        "upload_time": "2021-02-10T06:33:55",
        "upload_time_iso_8601": "2021-02-10T06:33:55.682293Z",
        "url": "https://files.pythonhosted.org/packages/e3/8e/344aec99070ac94946ab1dd3138020c176880d530c8cb955d37f5e07917b/pytest-passrunner-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "11480effbbececb73b9e697a345730ed719d7e5103f8cd66a2cb17b6449b4544",
        "md5": "8c0e72c35ab92a593d8786ee3312d098",
        "sha256": "4beda91498eeff54bb715d1401582fd7b856858ec752e0eac781e231e5979db6"
      },
      "downloads": -1,
      "filename": "pytest_passrunner-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8c0e72c35ab92a593d8786ee3312d098",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <4",
      "size": 6221,
      "upload_time": "2021-02-10T06:33:54",
      "upload_time_iso_8601": "2021-02-10T06:33:54.063332Z",
      "url": "https://files.pythonhosted.org/packages/11/48/0effbbececb73b9e697a345730ed719d7e5103f8cd66a2cb17b6449b4544/pytest_passrunner-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e38e344aec99070ac94946ab1dd3138020c176880d530c8cb955d37f5e07917b",
        "md5": "e7a3e2fdd96dcf64d092ccb5aae56532",
        "sha256": "ed80c2001a45a0b3ced323f63a913ba7319274bdf961d0c08409d6048349d179"
      },
      "downloads": -1,
      "filename": "pytest-passrunner-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e7a3e2fdd96dcf64d092ccb5aae56532",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <4",
      "size": 6075,
      "upload_time": "2021-02-10T06:33:55",
      "upload_time_iso_8601": "2021-02-10T06:33:55.682293Z",
      "url": "https://files.pythonhosted.org/packages/e3/8e/344aec99070ac94946ab1dd3138020c176880d530c8cb955d37f5e07917b/pytest-passrunner-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}