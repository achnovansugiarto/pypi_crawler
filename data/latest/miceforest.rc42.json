{
  "info": {
    "author": "Samuel Wilson",
    "author_email": "samwilson303@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "\n[![DOI](https://zenodo.org/badge/289387436.svg)](https://zenodo.org/badge/latestdoi/289387436)\n[![Downloads](https://static.pepy.tech/badge/miceforest)](https://pepy.tech/project/miceforest)\n[![Pypi](https://img.shields.io/pypi/v/miceforest.svg)](https://pypi.python.org/pypi/miceforest)\n[![Conda\nVersion](https://img.shields.io/conda/vn/conda-forge/miceforest.svg)](https://anaconda.org/conda-forge/miceforest)\n[![PyVersions](https://img.shields.io/pypi/pyversions/miceforest.svg?logo=python&logoColor=white)](https://pypi.org/project/miceforest/)  \n[![tests +\nmypy](https://github.com/AnotherSamWilson/miceforest/actions/workflows/run_tests.yml/badge.svg)](https://github.com/AnotherSamWilson/miceforest/actions/workflows/run_tests.yml)\n[![Documentation\nStatus](https://readthedocs.org/projects/miceforest/badge/?version=latest)](https://miceforest.readthedocs.io/en/latest/?badge=latest)\n[![CodeCov](https://codecov.io/gh/AnotherSamWilson/miceforest/branch/master/graphs/badge.svg?branch=master&service=github)](https://codecov.io/gh/AnotherSamWilson/miceforest)\n<!-- [![MIT license](http://img.shields.io/badge/license-MIT-brightgreen.svg)](http://opensource.org/licenses/MIT) -->\n<!-- [![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)   -->\n<!-- [![DEV_Version_Badge](https://img.shields.io/badge/Dev-5.6.3-blue.svg)](https://pypi.org/project/miceforest/) -->\n\n## miceforest: Fast, Memory Efficient Imputation with LightGBM\n\n<a href='https://github.com/AnotherSamWilson/miceforest'><img src='https://raw.githubusercontent.com/AnotherSamWilson/miceforest/master/examples/icon.png' align=\"right\" height=\"300\" /></a>\n\nFast, memory efficient Multiple Imputation by Chained Equations (MICE)\nwith lightgbm. The R version of this package may be found\n[here](https://github.com/FarrellDay/miceRanger).\n\n`miceforest` was designed to be:\n\n  - **Fast**\n      - Uses lightgbm as a backend\n      - Has efficient mean matching solutions.\n      - Can utilize GPU training\n  - **Flexible**\n      - Can impute pandas dataframes and numpy arrays\n      - Handles categorical data automatically\n      - Fits into a sklearn pipeline\n      - User can customize every aspect of the imputation process\n  - **Production Ready**\n      - Can impute new, unseen datasets quickly\n      - Kernels are efficiently compressed during saving and loading\n      - Data can be imputed in place to save memory\n      - Can build models on non-missing data\n\nThis document contains a thorough walkthrough of the package,\nbenchmarks, and an introduction to multiple imputation. More information\non MICE can be found in Stef van Buuren’s excellent online book, which\nyou can find\n[here](https://stefvanbuuren.name/fimd/ch-introduction.html).\n\n#### Table of Contents:\n\n  - [Package\n    Meta](https://github.com/AnotherSamWilson/miceforest#Package-Meta)\n  - [The\n    Basics](https://github.com/AnotherSamWilson/miceforest#The-Basics)\n      - [Basic\n        Examples](https://github.com/AnotherSamWilson/miceforest#Basic-Examples)\n      - [Customizing LightGBM\n        Parameters](https://github.com/AnotherSamWilson/miceforest#Customizing-LightGBM-Parameters)\n      - [Available Mean Match\n        Schemes](https://github.com/AnotherSamWilson/miceforest#Controlling-Tree-Growth)\n      - [Imputing New Data with Existing\n        Models](https://github.com/AnotherSamWilson/miceforest#Imputing-New-Data-with-Existing-Models)\n      - [Saving and Loading\n        Kernels](https://github.com/AnotherSamWilson/miceforest#Saving-and-Loading-Kernels)\n      - [Implementing sklearn\n        Pipelines](https://github.com/AnotherSamWilson/miceforest#Implementing-sklearn-Pipelines)\n  - [Advanced\n    Features](https://github.com/AnotherSamWilson/miceforest#Advanced-Features)\n      - [Customizing the Imputation\n        Process](https://github.com/AnotherSamWilson/miceforest#Customizing-the-Imputation-Process)\n      - [Building Models on Nonmissing\n        Data](https://github.com/AnotherSamWilson/miceforest#Building-Models-on-Nonmissing-Data)\n      - [Tuning\n        Parameters](https://github.com/AnotherSamWilson/miceforest#Tuning-Parameters)\n      - [On\n        Reproducibility](https://github.com/AnotherSamWilson/miceforest#On-Reproducibility)\n      - [How to Make the Process\n        Faster](https://github.com/AnotherSamWilson/miceforest#How-to-Make-the-Process-Faster)\n      - [Imputing Data In\n        Place](https://github.com/AnotherSamWilson/miceforest#Imputing-Data-In-Place)\n  - [Diagnostic\n    Plotting](https://github.com/AnotherSamWilson/miceforest#Diagnostic-Plotting)\n      - [Imputed\n        Distributions](https://github.com/AnotherSamWilson/miceforest#Distribution-of-Imputed-Values)\n      - [Correlation\n        Convergence](https://github.com/AnotherSamWilson/miceforest#Convergence-of-Correlation)\n      - [Variable\n        Importance](https://github.com/AnotherSamWilson/miceforest#Variable-Importance)\n      - [Mean\n        Convergence](https://github.com/AnotherSamWilson/miceforest#Variable-Importance)\n  - [Benchmarks](https://github.com/AnotherSamWilson/miceforest#Benchmarks)\n  - [Using the Imputed\n    Data](https://github.com/AnotherSamWilson/miceforest#Using-the-Imputed-Data)\n  - [The MICE\n    Algorithm](https://github.com/AnotherSamWilson/miceforest#The-MICE-Algorithm)\n      - [Introduction](https://github.com/AnotherSamWilson/miceforest#The-MICE-Algorithm)\n      - [Common Use\n        Cases](https://github.com/AnotherSamWilson/miceforest#Common-Use-Cases)\n      - [Predictive Mean\n        Matching](https://github.com/AnotherSamWilson/miceforest#Predictive-Mean-Matching)\n      - [Effects of Mean\n        Matching](https://github.com/AnotherSamWilson/miceforest#Effects-of-Mean-Matching)\n\n## Package Meta\n\n### Installation\n\nThis package can be installed using either pip or conda, through\nconda-forge:\n\n``` bash\n# Using pip\n$ pip install miceforest --no-cache-dir\n\n# Using conda\n$ conda install -c conda-forge miceforest\n```\n\nYou can also download the latest development version from this\nrepository. If you want to install from github with conda, you must\nfirst run `conda install pip git`.\n\n``` bash\n$ pip install git+https://github.com/AnotherSamWilson/miceforest.git\n```\n\n### Classes\n\nmiceforest has 3 main classes which the user will interact with:\n\n  - [`ImputationKernel`](https://miceforest.readthedocs.io/en/latest/ik/miceforest.ImputationKernel.html#miceforest.ImputationKernel)\n    - This class contains the raw data off of which the `mice` algorithm\n    is performed. During this process, models will be trained, and the\n    imputed (predicted) values will be stored. These values can be used\n    to fill in the missing values of the raw data. The raw data can be\n    copied, or referenced directly. Models can be saved, and used to\n    impute new datasets.\n  - [`ImputedData`](https://miceforest.readthedocs.io/en/latest/ik/miceforest.ImputedData.html#miceforest.ImputedData)\n    - The result of `ImputationKernel.impute_new_data(new_data)`. This\n    contains the raw data in `new_data` as well as the imputed values.  \n  - [`MeanMatchScheme`](https://miceforest.readthedocs.io/en/latest/ik/miceforest.MeanMatchScheme.html#miceforest.MeanMatchScheme)\n    - Determines how mean matching should be carried out. There are 3\n    built-in mean match schemes available in miceforest, discussed\n    below.\n\n## The Basics\n\nWe will be looking at a few simple examples of imputation. We need to\nload the packages, and define the data:\n\n``` python\nimport miceforest as mf\nfrom sklearn.datasets import load_iris\nimport pandas as pd\nimport numpy as np\n\n# Load data and introduce missing values\niris = pd.concat(load_iris(as_frame=True,return_X_y=True),axis=1)\niris.rename({\"target\": \"species\"}, inplace=True, axis=1)\niris['species'] = iris['species'].astype('category')\niris_amp = mf.ampute_data(iris,perc=0.25,random_state=1991)\n```\n\n### Basic Examples\n\nIf you only want to create a single imputed dataset, you can use\n[`ImputationKernel`](https://miceforest.readthedocs.io/en/latest/ik/miceforest.ImputationKernel.html#miceforest.ImputationKernel)\nwith some default settings:\n\n``` python\n# Create kernel. \nkds = mf.ImputationKernel(\n  iris_amp,\n  save_all_iterations=True,\n  random_state=1991\n)\n\n# Run the MICE algorithm for 2 iterations\nkds.mice(2)\n\n# Return the completed dataset.\niris_complete = kds.complete_data()\n```\n\nThere are also an array of plotting functions available, these are\ndiscussed below in the section [Diagnostic\nPlotting](https://github.com/AnotherSamWilson/miceforest#Diagnostic-Plotting).\n\nWe usually don’t want to impute just a single dataset. In statistics,\nmultiple imputation is a process by which the uncertainty/other effects\ncaused by missing values can be examined by creating multiple different\nimputed datasets.\n[`ImputationKernel`](https://miceforest.readthedocs.io/en/latest/ik/miceforest.ImputationKernel.html#miceforest.ImputationKernel)\ncan contain an arbitrary number of different datasets, all of which have\ngone through mutually exclusive imputation processes:\n\n``` python\n# Create kernel. \nkernel = mf.ImputationKernel(\n  iris_amp,\n  datasets=4,\n  save_all_iterations=True,\n  random_state=1\n)\n\n# Run the MICE algorithm for 2 iterations on each of the datasets\nkernel.mice(2)\n\n# Printing the kernel will show you some high level information.\nprint(kernel)\n```\n\n    ## \n    ##               Class: ImputationKernel\n    ##            Datasets: 4\n    ##          Iterations: 2\n    ##        Data Samples: 150\n    ##        Data Columns: 5\n    ##   Imputed Variables: 5\n    ## save_all_iterations: True\n\nAfter we have run mice, we can obtain our completed dataset directly\nfrom the kernel:\n\n``` python\ncompleted_dataset = kernel.complete_data(dataset=2)\nprint(completed_dataset.isnull().sum(0))\n```\n\n    ## sepal length (cm)    0\n    ## sepal width (cm)     0\n    ## petal length (cm)    0\n    ## petal width (cm)     0\n    ## species              0\n    ## dtype: int64\n\n### Customizing LightGBM Parameters\n\nParameters can be passed directly to lightgbm in several different ways.\nParameters you wish to apply globally to every model can simply be\npassed as kwargs to `mice`:\n\n``` python\n# Run the MICE algorithm for 1 more iteration on the kernel with new parameters\nkernel.mice(iterations=1,n_estimators=50)\n```\n\nYou can also pass pass variable-specific arguments to\n`variable_parameters` in mice. For instance, let’s say you noticed the\nimputation of the `[species]` column was taking a little longer, because\nit is multiclass. You could decrease the n\\_estimators specifically for\nthat column with:\n\n``` python\n# Run the MICE algorithm for 2 more iterations on the kernel \nkernel.mice(\n  iterations=1,\n  variable_parameters={'species': {'n_estimators': 25}},\n  n_estimators=50\n)\n\n# Let's get the actual models for these variables:\nspecies_model = kernel.get_model(dataset=0,variable=\"species\")\nsepalwidth_model = kernel.get_model(dataset=0,variable=\"sepal width (cm)\")\n\nprint(\nf\"\"\"Species used {str(species_model.params[\"num_iterations\"])} iterations\nSepal Width used {str(sepalwidth_model.params[\"num_iterations\"])} iterations\n\"\"\"\n)\n```\n\n    ## Species used 25 iterations\n    ## Sepal Width used 50 iterations\n\nIn this scenario, any parameters specified in `variable_parameters`\ntakes presidence over the kwargs.\n\nSince we can pass any parameters we want to LightGBM, we can completely\ncustomize how our models are built. That includes how the data should be\nmodeled. If your data contains count data, or any other data which can\nbe parameterized by lightgbm, you can simply specify that variable to be\nmodeled with the corresponding objective function.\n\nFor example, let’s pretend `sepal width (cm)` is a count field which can\nbe parameterized by a Poisson distribution. Let’s also change our\nboosting method to gradient boosted trees:\n\n``` python\n# Create kernel. \ncust_kernel = mf.ImputationKernel(\n  iris_amp,\n  datasets=1,\n  random_state=1\n)\n\ncust_kernel.mice(\n  iterations=1, \n  variable_parameters={'sepal width (cm)': {'objective': 'poisson'}},\n  boosting = 'gbdt',\n  min_sum_hessian_in_leaf=0.01\n)\n```\n\nOther nice parameters like `monotone_constraints` can also be passed.\nSetting the parameter `device: 'gpu'` will utilize GPU learning, if\nLightGBM is set up to do this on your machine.\n\n### Available Mean Match Schemes\n\nNote: It is probably a good idea to read [this\nsection](https://github.com/AnotherSamWilson/miceforest#Predictive-Mean-Matching)\nfirst, to get some context on how mean matching works.\n\nThe class `miceforest.MeanMatchScheme` contains information about how\nmean matching should be performed, such as:\n\n1)  Mean matching functions  \n2)  Mean matching candidates  \n3)  How to get predictions from a lightgbm model  \n4)  The datatypes predictions are stored as\n\nThere are three pre-built mean matching schemes that come with\n`miceforest`:\n\n``` python\nfrom miceforest import (\n  mean_match_default,\n  mean_match_fast_cat,\n  mean_match_shap\n)\n\n# To get information for each, use help()\n# help(mean_match_default)\n```\n\nThese schemes mostly differ in their strategy for performing mean\nmatching\n\n  - **mean\\_match\\_default** - medium speed, medium imputation quality\n      - Categorical: perform a K Nearest Neighbors search on the\n        candidate class probabilities, where K = mmc. Select 1 at\n        random, and choose the associated candidate value as the\n        imputation value.  \n      - Numeric: Perform a K Nearest Neighbors search on the candidate\n        predictions, where K = mmc. Select 1 at random, and choose the\n        associated candidate value as the imputation value.  \n  - **mean\\_match\\_fast\\_cat** - fastest speed, lowest imputation\n    quality\n      - Categorical: return class based on random draw weighted by class\n        probability for each sample.  \n      - Numeric: perform a K Nearest Neighbors search on the candidate\n        class probabilities, where K = mmc. Select 1 at random, and\n        choose the associated candidate value as the imputation value.  \n  - **mean\\_match\\_shap** - slowest speed, highest imputation quality\n    for large datasets\n      - Categorical: perform a K Nearest Neighbors search on the\n        candidate prediction shap values, where K = mmc. Select 1 at\n        random, and choose the associated candidate value as the\n        imputation value.  \n      - Numeric: perform a K Nearest Neighbors search on the candidate\n        prediction shap values, where K = mmc. Select 1 at random, and\n        choose the associated candidate value as the imputation value.\n\nAs a special case, if the mean\\_match\\_candidates is set to 0, the\nfollowing behavior is observed for all schemes:\n\n  - Categorical: the class with the highest probability is chosen.  \n  - Numeric: the predicted value is used\n\nThese mean matching schemes can be updated and customized, we show an\nexample below in the advanced section.\n\n### Imputing New Data with Existing Models\n\nMultiple Imputation can take a long time. If you wish to impute a\ndataset using the MICE algorithm, but don’t have time to train new\nmodels, it is possible to impute new datasets using a `ImputationKernel`\nobject. The `impute_new_data()` function uses the models collected by\n`ImputationKernel` to perform multiple imputation without updating the\nmodels at each iteration:\n\n``` python\n# Our 'new data' is just the first 15 rows of iris_amp\nfrom datetime import datetime\n\n# Define our new data as the first 15 rows\nnew_data = iris_amp.iloc[range(15)]\n\n# Imputing new data can often be made faster by \n# first compiling candidate predictions\nkernel.compile_candidate_preds()\n\nstart_t = datetime.now()\nnew_data_imputed = kernel.impute_new_data(new_data=new_data)\nprint(f\"New Data imputed in {(datetime.now() - start_t).total_seconds()} seconds\")\n```\n\n    ## New Data imputed in 0.507115 seconds\n\nAll of the imputation parameters (variable\\_schema,\nmean\\_match\\_candidates, etc) will be carried over from the original\n`ImputationKernel` object. When mean matching, the candidate values are\npulled from the original kernel dataset. To impute new data, the\n`save_models` parameter in `ImputationKernel` must be \\> 0. If\n`save_models == 1`, the model from the latest iteration is saved for\neach variable. If `save_models > 1`, the model from each iteration is\nsaved. This allows for new data to be imputed in a more similar fashion\nto the original mice procedure.\n\n### Saving and Loading Kernels\n\nKernels can be saved using the `.save_kernel()` method, and then loaded\nagain using the `utils.load_kernel()` function. Internally, this\nprocedure uses `blosc` and `dill` packages to do the following:\n\n1.  Convert working data to parquet bytes (if it is a pandas dataframe)\n2.  Serialize the kernel  \n3.  Compress this serialization  \n4.  Save to a file\n\n### Implementing sklearn Pipelines\n\nkernels can be fit into sklearn pipelines to impute training and scoring\ndatasets:\n\n``` python\nimport numpy as np\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.datasets import make_classification\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.pipeline import Pipeline\nimport miceforest as mf\n\n# Define our data\nX, y = make_classification(random_state=0)\n\n# Ampute and split the training data\nX = mf.utils.ampute_data(X)\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)\n\n# Initialize our miceforest kernel. datasets parameter should be 1,\n# we don't want to return multiple datasets.\npipe_kernel = mf.ImputationKernel(X_train, datasets=1)\n\n# Define our pipeline\npipe = Pipeline([\n    ('impute', pipe_kernel),\n    ('scaler', StandardScaler()),\n])\n\n# Fit on and transform our training data.\n# Only use 2 iterations of mice.\nX_train_t = pipe.fit_transform(\n    X_train,\n    y_train,\n    impute__iterations=2\n)\n\n# Transform the test data as well\nX_test_t = pipe.transform(X_test)\n\n# Show that neither now have missing values.\nassert not np.any(np.isnan(X_train_t))\nassert not np.any(np.isnan(X_test_t))\n```\n\n## Advanced Features\n\nMultiple imputation is a complex process. However, `miceforest` allows\nall of the major components to be switched out and customized by the\nuser.\n\n### Customizing the Imputation Process\n\nIt is possible to heavily customize our imputation procedure by\nvariable. By passing a named list to `variable_schema`, you can specify\nthe predictor variables for each imputed variable. You can also specify\n`mean_match_candidates` and `data_subset` by variable by passing a dict\nof valid values, with variable names as keys. You can even replace the\nentire default mean matching function for certain objectives if desired.\nBelow is an *extremely* convoluted setup, which you would probably never\nwant to use. It simply shows what is possible:\n\n``` python\n# Use the default mean match schema as our base\nfrom miceforest import mean_match_default\nmean_match_custom = mean_match_default.copy()\n\n# Define a mean matching function that \n# just randomly shuffles the predictions\ndef custom_mmf(bachelor_preds):\n    np.random.shuffle(bachelor_preds)\n    return bachelor_preds\n\n# Specify that our custom function should be\n# used to perform mean matching on any variable\n# that was modeled with a poisson objective:\nmean_match_custom.set_mean_match_function(\n  {\"poisson\": custom_mmf}\n)\n\n# Set the mean match candidates by variable\nmean_match_custom.set_mean_match_candidates(\n  {\n      'sepal width (cm)': 3,\n      'petal width (cm)': 0\n  }\n)\n\n# Define which variables should be used to model others\nvariable_schema = {\n    'sepal width (cm)': ['species','petal width (cm)'],\n    'petal width (cm)': ['species','sepal length (cm)']\n}\n\n# Subset the candidate data to 50 rows for sepal width (cm).\nvariable_subset = {\n  'sepal width (cm)': 50\n}\n\n# Specify that petal width (cm) should be modeled by the\n# poisson objective. Our custom mean matching function\n# above will be used for this variable.\nvariable_parameters = {\n  'petal width (cm)': {\"objective\": \"poisson\"}\n}\n\ncust_kernel = mf.ImputationKernel(\n    iris_amp,\n    datasets=3,\n    mean_match_scheme=mean_match_custom,\n    variable_schema=variable_schema,\n    data_subset=variable_subset\n)\ncust_kernel.mice(iterations=1, variable_parameters=variable_parameters)\n```\n\nThe mean matching function can take any number of the following\narguments. If a function does not take one of these arguments, then the\nprocess will not prepare that data for mean matching.\n\n``` python\nfrom miceforest.MeanMatchScheme import AVAILABLE_MEAN_MATCH_ARGS\nprint(\"\\n\".join(AVAILABLE_MEAN_MATCH_ARGS))\n```\n\n    ## mean_match_candidates\n    ## lgb_booster\n    ## bachelor_preds\n    ## bachelor_features\n    ## candidate_values\n    ## candidate_features\n    ## candidate_preds\n    ## random_state\n    ## hashed_seeds\n\n### Building Models on Nonmissing Data\n\nThe MICE process itself is used to impute missing data in a dataset.\nHowever, sometimes a variable can be fully recognized in the training\ndata, but needs to be imputed later on in a different dataset. It is\npossible to train models to impute variables even if they have no\nmissing values by setting `train_nonmissing=True`. In this case,\n`variable_schema` is treated as the list of variables to train models\non. `imputation_order` only affects which variables actually have their\nvalues imputed, it does not affect which variables have models trained:\n\n``` python\norig_missing_cols = [\"sepal length (cm)\", \"sepal width (cm)\"]\nnew_missing_cols = [\"sepal length (cm)\", \"sepal width (cm)\", \"species\"]\n\n# Training data only contains 2 columns with missing data\niris_amp2 = iris.copy()\niris_amp2[orig_missing_cols] = mf.ampute_data(\n  iris_amp2[orig_missing_cols],\n  perc=0.25,\n  random_state=1991\n)\n\n# Specify that models should also be trained for species column\nvar_sch = new_missing_cols\n\ncust_kernel = mf.ImputationKernel(\n    iris_amp2,\n    datasets=1,\n    variable_schema=var_sch,\n    train_nonmissing=True\n)\ncust_kernel.mice(1)\n\n# New data has missing values in species column\niris_amp2_new = iris.iloc[range(10),:].copy()\niris_amp2_new[new_missing_cols] = mf.ampute_data(\n  iris_amp2_new[new_missing_cols],\n  perc=0.25,\n  random_state=1991\n)\n\n# Species column can still be imputed\niris_amp2_new_imp = cust_kernel.impute_new_data(iris_amp2_new)\niris_amp2_new_imp.complete_data(0).isnull().sum()\n```\n\n    ## sepal length (cm)    0\n    ## sepal width (cm)     0\n    ## petal length (cm)    0\n    ## petal width (cm)     0\n    ## species              0\n    ## dtype: int64\n\nHere, we knew that the species column in our new data would need to be\nimputed. Therefore, we specified that a model should be built for all 3\nvariables in the `variable_schema` (passing a dict of target - feature\npairs would also have worked).\n\n### Tuning Parameters\n\n`miceforest` allows you to tune the parameters on a kernel dataset.\nThese parameters can then be used to build the models in future\niterations of mice. In its most simple invocation, you can just call the\nfunction with the desired optimization steps:\n\n``` python\n# Using the first ImputationKernel in kernel to tune parameters\n# with the default settings.\noptimal_parameters, losses = kernel.tune_parameters(\n  dataset=0,\n  optimization_steps=5\n)\n\n# Run mice with our newly tuned parameters.\nkernel.mice(1, variable_parameters=optimal_parameters)\n\n# The optimal parameters are kept in ImputationKernel.optimal_parameters:\nprint(optimal_parameters)\n```\n\n    ## {0: {'boosting': 'gbdt', 'num_iterations': 165, 'max_depth': 8, 'num_leaves': 20, 'min_data_in_leaf': 1, 'min_sum_hessian_in_leaf': 0.1, 'min_gain_to_split': 0.0, 'bagging_fraction': 0.2498838792503861, 'feature_fraction': 1.0, 'feature_fraction_bynode': 0.6020460898858531, 'bagging_freq': 1, 'verbosity': -1, 'objective': 'regression', 'learning_rate': 0.02, 'cat_smooth': 17.807024990062555}, 1: {'boosting': 'gbdt', 'num_iterations': 94, 'max_depth': 8, 'num_leaves': 14, 'min_data_in_leaf': 4, 'min_sum_hessian_in_leaf': 0.1, 'min_gain_to_split': 0.0, 'bagging_fraction': 0.7802435334180599, 'feature_fraction': 1.0, 'feature_fraction_bynode': 0.6856668707631843, 'bagging_freq': 1, 'verbosity': -1, 'objective': 'regression', 'learning_rate': 0.02, 'cat_smooth': 4.802568893662679}, 2: {'boosting': 'gbdt', 'num_iterations': 229, 'max_depth': 8, 'num_leaves': 4, 'min_data_in_leaf': 8, 'min_sum_hessian_in_leaf': 0.1, 'min_gain_to_split': 0.0, 'bagging_fraction': 0.9565982004313843, 'feature_fraction': 1.0, 'feature_fraction_bynode': 0.6065024947204825, 'bagging_freq': 1, 'verbosity': -1, 'objective': 'regression', 'learning_rate': 0.02, 'cat_smooth': 17.2138799939537}, 3: {'boosting': 'gbdt', 'num_iterations': 182, 'max_depth': 8, 'num_leaves': 20, 'min_data_in_leaf': 4, 'min_sum_hessian_in_leaf': 0.1, 'min_gain_to_split': 0.0, 'bagging_fraction': 0.7251674145835884, 'feature_fraction': 1.0, 'feature_fraction_bynode': 0.9262368919526676, 'bagging_freq': 1, 'verbosity': -1, 'objective': 'regression', 'learning_rate': 0.02, 'cat_smooth': 5.780326477879999}, 4: {'boosting': 'gbdt', 'num_iterations': 208, 'max_depth': 8, 'num_leaves': 4, 'min_data_in_leaf': 7, 'min_sum_hessian_in_leaf': 0.1, 'min_gain_to_split': 0.0, 'bagging_fraction': 0.6746301598613926, 'feature_fraction': 1.0, 'feature_fraction_bynode': 0.20999114041328495, 'bagging_freq': 1, 'verbosity': -1, 'objective': 'multiclass', 'num_class': 3, 'learning_rate': 0.02, 'cat_smooth': 8.604908973256704}}\n\nThis will perform 10 fold cross validation on random samples of\nparameters. By default, all variables models are tuned. If you are\ncurious about the default parameter space that is searched within, check\nout the `miceforest.default_lightgbm_parameters` module.\n\nThe parameter tuning is pretty flexible. If you wish to set some model\nparameters static, or to change the bounds that are searched in, you can\nsimply pass this information to either the `variable_parameters`\nparameter, `**kwbounds`, or both:\n\n``` python\n# Using a complicated setup:\noptimal_parameters, losses = kernel.tune_parameters(\n  dataset=0,\n  variables = ['sepal width (cm)','species','petal width (cm)'],\n  variable_parameters = {\n    'sepal width (cm)': {'bagging_fraction': 0.5},\n    'species': {'bagging_freq': (5,10)}\n  },\n  optimization_steps=5,\n  extra_trees = [True, False]\n)\n\nkernel.mice(1, variable_parameters=optimal_parameters)\n```\n\nIn this example, we did a few things - we specified that only `sepal\nwidth (cm)`, `species`, and `petal width (cm)` should be tuned. We also\nspecified some specific parameters in `variable_parameters.` Notice that\n`bagging_fraction` was passed as a scalar, `0.5`. This means that, for\nthe variable `sepal width (cm)`, the parameter `bagging_fraction` will\nbe set as that number and not be tuned. We did the opposite for\n`bagging_freq`. We specified bounds that the process should search in.\nWe also passed the argument `extra_trees` as a list. Since it was passed\nto \\*\\*kwbounds, this parameter will apply to all variables that are\nbeing tuned. Passing values as a list tells the process that it should\nrandomly sample values from the list, instead of treating them as set of\ncounts to search within.\n\nThe tuning process follows these rules for different parameter values it\nfinds:\n\n  - Scalar: That value is used, and not tuned.  \n  - Tuple: Should be length 2. Treated as the lower and upper bound to\n    search in.  \n  - List: Treated as a distinct list of values to try randomly.\n\n### On Reproducibility\n\n`miceforest` allows for different “levels” of reproducibility, global\nand record-level.\n\n##### **Global Reproducibility**\n\nGlobal reproducibility ensures that the same values will be imputed if\nthe same code is run multiple times. To ensure global reproducibility,\nall the user needs to do is set a `random_state` when the kernel is\ninitialized.\n\n##### **Record-Level Reproducibility**\n\nSometimes we want to obtain reproducible imputations at the record\nlevel, without having to pass the same dataset. This is possible by\npassing a list of record-specific seeds to the `random_seed_array`\nparameter. This is useful if imputing new data multiple times, and you\nwould like imputations for each row to match each time it is imputed.\n\n``` python\n# Define seeds for the data, and impute iris\nrandom_seed_array = np.random.randint(9999, size=150)\niris_imputed = kernel.impute_new_data(\n    iris_amp,\n    random_state=4,\n    random_seed_array=random_seed_array\n)\n\n# Select a random sample\nnew_inds = np.random.choice(150, size=15)\nnew_data = iris_amp.loc[new_inds]\nnew_seeds = random_seed_array[new_inds]\nnew_imputed = kernel.impute_new_data(\n    new_data,\n    random_state=4,\n    random_seed_array=new_seeds\n)\n\n# We imputed the same values for the 15 values each time,\n# because each record was associated with the same seed.\nassert new_imputed.complete_data(0).equals(iris_imputed.complete_data(0).loc[new_inds])\n```\n\nNote that record-level reproducibility is only possible in the\n`impute_new_data` function, there are no guarantees of record-level\nreproducibility in imputations between the kernel and new data.\n\n### How to Make the Process Faster\n\nMultiple Imputation is one of the most robust ways to handle missing\ndata - but it can take a long time. There are several strategies you can\nuse to decrease the time a process takes to run:\n\n  - Decrease `data_subset`. By default all non-missing datapoints for\n    each variable are used to train the model and perform mean matching.\n    This can cause the model training nearest-neighbors search to take a\n    long time for large data. A subset of these points can be searched\n    instead by using `data_subset`.  \n  - If categorical columns are taking a long time, you can use the\n    `mean_match_fast_cat` scheme. You can also set different parameters\n    specifically for categorical columns, like smaller\n    `bagging_fraction` or `num_iterations`.\n  - If you need to impute new data faster, compile the predictions with\n    the `compile_candidate_preds` method. This stores the predictions\n    for each model, so it does not need to be re-calculated at each\n    iteration.  \n  - Convert your data to a numpy array. Numpy arrays are much faster to\n    index. While indexing overhead is avoided as much as possible, there\n    is no getting around it. Consider comverting to `float32` datatype\n    as well, as it will cause the resulting object to take up much less\n    memory.\n  - Decrease `mean_match_candidates`. The maximum number of neighbors\n    that are considered with the default parameters is 10. However, for\n    large datasets, this can still be an expensive operation. Consider\n    explicitly setting `mean_match_candidates` lower.\n  - Use different lightgbm parameters. lightgbm is usually not the\n    problem, however if a certain variable has a large number of\n    classes, then the max number of trees actually grown is (\\# classes)\n    \\* (n\\_estimators). You can specifically decrease the bagging\n    fraction or n\\_estimators for large multi-class variables, or grow\n    less trees in general.  \n  - Use a faster mean matching function. The default mean matching\n    function uses the scipy.Spatial.KDtree algorithm. There are faster\n    alternatives out there, if you think mean matching is the holdup.\n\n### Imputing Data In Place\n\nIt is possible to run the entire process without copying the dataset. If\n`copy_data=False`, then the data is referenced directly:\n\n``` python\nkernel_inplace = mf.ImputationKernel(\n  iris_amp,\n  datasets=1,\n  copy_data=False\n)\nkernel_inplace.mice(2)\n```\n\nNote, that this probably won’t (but could) change the original dataset\nin undesirable ways. Throughout the `mice` procedure, imputed values are\nstored directly in the original data. At the end, the missing values are\nput back as `np.NaN`.\n\nWe can also complete our original data in place:\n\n``` python\nkernel_inplace.complete_data(dataset=0, inplace=True)\nprint(iris_amp.isnull().sum(0))\n```\n\n    ## sepal length (cm)    0\n    ## sepal width (cm)     0\n    ## petal length (cm)    0\n    ## petal width (cm)     0\n    ## species              0\n    ## dtype: int64\n\nThis is useful if the dataset is large, and copies can’t be made in\nmemory.\n\n## Diagnostic Plotting\n\nAs of now, miceforest has four diagnostic plots available.\n\n### Distribution of Imputed-Values\n\nWe probably want to know how the imputed values are distributed. We can\nplot the original distribution beside the imputed distributions in each\ndataset by using the `plot_imputed_distributions` method of an\n`ImputationKernel` object:\n\n``` python\nkernel.plot_imputed_distributions(wspace=0.3,hspace=0.3)\n```\n\n<img src=\"https://raw.githubusercontent.com/AnotherSamWilson/miceforest/master/examples/distributions.png\" width=\"600px\" />\n\nThe red line is the original data, and each black line are the imputed\nvalues of each dataset.\n\n### Convergence of Correlation\n\nWe are probably interested in knowing how our values between datasets\nconverged over the iterations. The `plot_correlations` method shows you\na boxplot of the correlations between imputed values in every\ncombination of datasets, at each iteration. This allows you to see how\ncorrelated the imputations are between datasets, as well as the\nconvergence over iterations:\n\n``` python\nkernel.plot_correlations()\n```\n\n<img src=\"https://raw.githubusercontent.com/AnotherSamWilson/miceforest/master/examples/plot_corr.png\" width=\"600px\" />\n\n### Variable Importance\n\nWe also may be interested in which variables were used to impute each\nvariable. We can plot this information by using the\n`plot_feature_importance` method.\n\n``` python\nkernel.plot_feature_importance(dataset=0, annot=True,cmap=\"YlGnBu\",vmin=0, vmax=1)\n```\n\n<img src=\"https://raw.githubusercontent.com/AnotherSamWilson/miceforest/master/examples/var_imp.png\" width=\"600px\" />\n\nThe numbers shown are returned from the\n`lightgbm.Booster.feature_importance()` function. Each square represents\nthe importance of the column variable in imputing the row variable.\n\n### Mean Convergence\n\nIf our data is not missing completely at random, we may see that it\ntakes a few iterations for our models to get the distribution of\nimputations right. We can plot the average value of our imputations to\nsee if this is occurring:\n\n``` python\nkernel.plot_mean_convergence(wspace=0.3, hspace=0.4)\n```\n\n<img src=\"https://raw.githubusercontent.com/AnotherSamWilson/miceforest/master/examples/mean_convergence.png\" width=\"600px\" />\n\nOur data was missing completely at random, so we don’t see any\nconvergence occurring here.\n\n## Using the Imputed Data\n\nTo return the imputed data simply use the `complete_data` method:\n\n``` python\ndataset_1 = kernel.complete_data(0)\n```\n\nThis will return a single specified dataset. Multiple datasets are\ntypically created so that some measure of confidence around each\nprediction can be created.\n\nSince we know what the original data looked like, we can cheat and see\nhow well the imputations compare to the original data:\n\n``` python\nacclist = []\nfor iteration in range(kernel.iteration_count()+1):\n    species_na_count = kernel.na_counts[4]\n    compdat = kernel.complete_data(dataset=0,iteration=iteration)\n\n    # Record the accuract of the imputations of species.\n    acclist.append(\n      round(1-sum(compdat['species'] != iris['species'])/species_na_count,2)\n    )\n\n# acclist shows the accuracy of the imputations\n# over the iterations.\nprint(acclist)\n```\n\n    ## [0.35, 0.81, 0.84, 0.84, 0.89, 0.92, 0.89]\n\nIn this instance, we went from a low accuracy (what is expected with\nrandom sampling) to a much higher accuracy.\n\n## The MICE Algorithm\n\nMultiple Imputation by Chained Equations ‘fills in’ (imputes) missing\ndata in a dataset through an iterative series of predictive models. In\neach iteration, each specified variable in the dataset is imputed using\nthe other variables in the dataset. These iterations should be run until\nit appears that convergence has been met.\n\n<img src=\"https://raw.githubusercontent.com/AnotherSamWilson/miceforest/master/examples/MICEalgorithm.png\" style=\"display: block; margin: auto;\" />\n\nThis process is continued until all specified variables have been\nimputed. Additional iterations can be run if it appears that the average\nimputed values have not converged, although no more than 5 iterations\nare usually necessary.\n\n### Common Use Cases\n\n##### **Data Leakage:**\n\nMICE is particularly useful if missing values are associated with the\ntarget variable in a way that introduces leakage. For instance, let’s\nsay you wanted to model customer retention at the time of sign up. A\ncertain variable is collected at sign up or 1 month after sign up. The\nabsence of that variable is a data leak, since it tells you that the\ncustomer did not retain for 1 month.\n\n##### **Funnel Analysis:**\n\nInformation is often collected at different stages of a ‘funnel’. MICE\ncan be used to make educated guesses about the characteristics of\nentities at different points in a funnel.\n\n##### **Confidence Intervals:**\n\nMICE can be used to impute missing values, however it is important to\nkeep in mind that these imputed values are a prediction. Creating\nmultiple datasets with different imputed values allows you to do two\ntypes of inference:\n\n  - Imputed Value Distribution: A profile can be built for each imputed\n    value, allowing you to make statements about the likely distribution\n    of that value.  \n  - Model Prediction Distribution: With multiple datasets, you can build\n    multiple models and create a distribution of predictions for each\n    sample. Those samples with imputed values which were not able to be\n    imputed with much confidence would have a larger variance in their\n    predictions.\n\n### Predictive Mean Matching\n\n`miceforest` can make use of a procedure called predictive mean matching\n(PMM) to select which values are imputed. PMM involves selecting a\ndatapoint from the original, nonmissing data (candidates) which has a\npredicted value close to the predicted value of the missing sample\n(bachelors). The closest N (`mean_match_candidates` parameter) values\nare selected, from which a value is chosen at random. This can be\nspecified on a column-by-column basis. Going into more detail from our\nexample above, we see how this works in practice:\n\n<img src=\"https://raw.githubusercontent.com/AnotherSamWilson/miceforest/master/examples/PMM.png\" style=\"display: block; margin: auto;\" />\n\nThis method is very useful if you have a variable which needs imputing\nwhich has any of the following characteristics:\n\n  - Multimodal  \n  - Integer  \n  - Skewed\n\n### Effects of Mean Matching\n\nAs an example, let’s construct a dataset with some of the above\ncharacteristics:\n\n``` python\nrandst = np.random.RandomState(1991)\n# random uniform variable\nnrws = 1000\nuniform_vec = randst.uniform(size=nrws)\n\ndef make_bimodal(mean1,mean2,size):\n    bimodal_1 = randst.normal(size=nrws, loc=mean1)\n    bimodal_2 = randst.normal(size=nrws, loc=mean2)\n    bimdvec = []\n    for i in range(size):\n        bimdvec.append(randst.choice([bimodal_1[i], bimodal_2[i]]))\n    return np.array(bimdvec)\n\n# Make 2 Bimodal Variables\nclose_bimodal_vec = make_bimodal(2,-2,nrws)\nfar_bimodal_vec = make_bimodal(3,-3,nrws)\n\n\n# Highly skewed variable correlated with Uniform_Variable\nskewed_vec = np.exp(uniform_vec*randst.uniform(size=nrws)*3) + randst.uniform(size=nrws)*3\n\n# Integer variable correlated with Close_Bimodal_Variable and Uniform_Variable\ninteger_vec = np.round(uniform_vec + close_bimodal_vec/3 + randst.uniform(size=nrws)*2)\n\n# Make a DataFrame\ndat = pd.DataFrame(\n    {\n    'uniform_var':uniform_vec,\n    'close_bimodal_var':close_bimodal_vec,\n    'far_bimodal_var':far_bimodal_vec,\n    'skewed_var':skewed_vec,\n    'integer_var':integer_vec\n    }\n)\n\n# Ampute the data.\nampdat = mf.ampute_data(dat,perc=0.25,random_state=randst)\n\n# Plot the original data\nimport seaborn as sns\nimport matplotlib.pyplot as plt\ng = sns.PairGrid(dat)\ng.map(plt.scatter,s=5)\n```\n\n<img src=\"https://raw.githubusercontent.com/AnotherSamWilson/miceforest/master/examples/dataset.png\" width=\"600px\" style=\"display: block; margin: auto;\" />\nWe can see how our variables are distributed and correlated in the graph\nabove. Now let’s run our imputation process twice, once using mean\nmatching, and once using the model prediction.\n\n``` python\nfrom miceforest import mean_match_default\nscheme_mmc_0 = mean_match_default.copy()\nscheme_mmc_5 = mean_match_default.copy()\n\nscheme_mmc_0.set_mean_match_candidates(0)\nscheme_mmc_5.set_mean_match_candidates(5)\n\nkernelmeanmatch = mf.ImputationKernel(ampdat, mean_match_scheme=scheme_mmc_5, datasets=1)\nkernelmodeloutput = mf.ImputationKernel(ampdat, mean_match_scheme=scheme_mmc_0, datasets=1)\n\nkernelmeanmatch.mice(2)\nkernelmodeloutput.mice(2)\n```\n\nLet’s look at the effect on the different variables.\n\n##### With Mean Matching\n\n``` python\nkernelmeanmatch.plot_imputed_distributions(wspace=0.2,hspace=0.4)\n```\n\n<img src=\"https://raw.githubusercontent.com/AnotherSamWilson/miceforest/master/examples/meanmatcheffects.png\" width=\"600px\" style=\"display: block; margin: auto;\" />\n\n##### Without Mean Matching\n\n``` python\nkernelmodeloutput.plot_imputed_distributions(wspace=0.2,hspace=0.4)\n```\n\n<img src=\"https://raw.githubusercontent.com/AnotherSamWilson/miceforest/master/examples/nomeanmatching.png\" width=\"600px\" style=\"display: block; margin: auto;\" />\n\nYou can see the effects that mean matching has, depending on the\ndistribution of the data. Simply returning the value from the model\nprediction, while it may provide a better ‘fit’, will not provide\nimputations with a similair distribution to the original. This may be\nbeneficial, depending on your goal.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AnotherSamWilson/miceforest",
    "keywords": "MICE,Imputation,Missing Values,Missing,Random Forest",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "miceforest",
    "package_url": "https://pypi.org/project/miceforest/",
    "platform": null,
    "project_url": "https://pypi.org/project/miceforest/",
    "project_urls": {
      "Homepage": "https://github.com/AnotherSamWilson/miceforest"
    },
    "release_url": "https://pypi.org/project/miceforest/5.6.3/",
    "requires_dist": [
      "lightgbm (>=3.3.1)",
      "numpy",
      "blosc",
      "dill",
      "scipy (>=1.6.0) ; extra == 'default_mm'",
      "seaborn (>=0.11.0) ; extra == 'plotting'",
      "matplotlib (>=3.3.0) ; extra == 'plotting'",
      "pandas ; extra == 'testing'",
      "sklearn ; extra == 'testing'"
    ],
    "requires_python": ">=3.7",
    "summary": "Missing Value Imputation using LightGBM",
    "version": "5.6.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16075390,
  "releases": {
    "0.9000": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "573692596e4180d4bb46d1e35144e2ff4583db795f3110c9db2c92b0a1ce0520",
          "md5": "0558205d6947440c6397e534364e8ffc",
          "sha256": "9568b6f792684c269dac1a23253b14e275818069e393c0032f181beb745d7527"
        },
        "downloads": -1,
        "filename": "miceforest-0.9000.tar.gz",
        "has_sig": false,
        "md5_digest": "0558205d6947440c6397e534364e8ffc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 62828,
        "upload_time": "2022-04-14T02:56:42",
        "upload_time_iso_8601": "2022-04-14T02:56:42.119839Z",
        "url": "https://files.pythonhosted.org/packages/57/36/92596e4180d4bb46d1e35144e2ff4583db795f3110c9db2c92b0a1ce0520/miceforest-0.9000.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c36aab35c38f7b863c94eef6cb8bb2d06a08a7bc7625d6a7e55af19c0c445de1",
          "md5": "105f0531fe7092ab058819c726cfed88",
          "sha256": "5951df0ba3364b3e3bbcbf60122b4dcacc204d3fe50209c547728ba0fcf01b0e"
        },
        "downloads": -1,
        "filename": "miceforest-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "105f0531fe7092ab058819c726cfed88",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21587,
        "upload_time": "2020-08-28T14:20:35",
        "upload_time_iso_8601": "2020-08-28T14:20:35.608867Z",
        "url": "https://files.pythonhosted.org/packages/c3/6a/ab35c38f7b863c94eef6cb8bb2d06a08a7bc7625d6a7e55af19c0c445de1/miceforest-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4ad04dc8072a6681d1abab8fe688ac49558af6ae4e9d90a0e750c9e60cc2c93",
          "md5": "0207c06fe1c6ce552fe30b74095a451b",
          "sha256": "0de273c194fe416b41b4cee0748d032e2b8cfe5635f8a4ed39e291d24799f3b6"
        },
        "downloads": -1,
        "filename": "miceforest-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0207c06fe1c6ce552fe30b74095a451b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17185,
        "upload_time": "2020-08-28T14:42:15",
        "upload_time_iso_8601": "2020-08-28T14:42:15.920717Z",
        "url": "https://files.pythonhosted.org/packages/c4/ad/04dc8072a6681d1abab8fe688ac49558af6ae4e9d90a0e750c9e60cc2c93/miceforest-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ababdf31fe9b02bd40b5dbb188a8b49cb94eb42b4467c2128cbaeabf48cd7212",
          "md5": "fb5e2347ced4412c4871ead7cf475d6c",
          "sha256": "67a0dea367de83c961a6adce87fa2b1878f5758572d3a56cd72c3d14f88d06dc"
        },
        "downloads": -1,
        "filename": "miceforest-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "fb5e2347ced4412c4871ead7cf475d6c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21582,
        "upload_time": "2020-08-28T14:42:17",
        "upload_time_iso_8601": "2020-08-28T14:42:17.427924Z",
        "url": "https://files.pythonhosted.org/packages/ab/ab/df31fe9b02bd40b5dbb188a8b49cb94eb42b4467c2128cbaeabf48cd7212/miceforest-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cada2f31d95cafac100e7015e6cab074c2566bf3fefb752b6523eda243f7ea78",
          "md5": "1323bc1faa073ed430fd47cf62a6c2df",
          "sha256": "8434d9b4222567df504a3ecc86aacd7d5dd2de928a30f1795c104d8101b8c215"
        },
        "downloads": -1,
        "filename": "miceforest-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1323bc1faa073ed430fd47cf62a6c2df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17549,
        "upload_time": "2020-08-29T04:09:37",
        "upload_time_iso_8601": "2020-08-29T04:09:37.279002Z",
        "url": "https://files.pythonhosted.org/packages/ca/da/2f31d95cafac100e7015e6cab074c2566bf3fefb752b6523eda243f7ea78/miceforest-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "921411b78642d4599f5ddc0dd97a5d5a93804b8ae90d334b2f968ef385e55cd8",
          "md5": "01462d0f1a88deac6a7bc99c44a96d11",
          "sha256": "ca37b7a84fba77c9cf8f598f10eb6ee8c12df975bb4aa4695b04bbc8bae4aca7"
        },
        "downloads": -1,
        "filename": "miceforest-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "01462d0f1a88deac6a7bc99c44a96d11",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22014,
        "upload_time": "2020-08-29T04:09:38",
        "upload_time_iso_8601": "2020-08-29T04:09:38.787672Z",
        "url": "https://files.pythonhosted.org/packages/92/14/11b78642d4599f5ddc0dd97a5d5a93804b8ae90d334b2f968ef385e55cd8/miceforest-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7474837f3891b6b93f44f2bc9125ab1242a953428397fe4a931409af51cd3b0",
          "md5": "e1a95e8c28cb1c415e686c25814f2de0",
          "sha256": "dbaafe9aef2a57055c5680d57fbfae163c5cc6acdd96bb314183a3df275e4181"
        },
        "downloads": -1,
        "filename": "miceforest-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1a95e8c28cb1c415e686c25814f2de0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19825,
        "upload_time": "2020-08-29T17:02:57",
        "upload_time_iso_8601": "2020-08-29T17:02:57.282373Z",
        "url": "https://files.pythonhosted.org/packages/e7/47/4837f3891b6b93f44f2bc9125ab1242a953428397fe4a931409af51cd3b0/miceforest-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a482d12c09b2585618282c31d7db252e906e94bd15e9534bffcead2ae6bfa967",
          "md5": "1bc268704dc91c47cda332ac38f02653",
          "sha256": "f853a2b83daea672e51d05db22639e0d10cf56cee8d888941e79cc8d6810cfff"
        },
        "downloads": -1,
        "filename": "miceforest-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "1bc268704dc91c47cda332ac38f02653",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23227,
        "upload_time": "2020-08-29T17:02:58",
        "upload_time_iso_8601": "2020-08-29T17:02:58.726660Z",
        "url": "https://files.pythonhosted.org/packages/a4/82/d12c09b2585618282c31d7db252e906e94bd15e9534bffcead2ae6bfa967/miceforest-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90d058bb705111fcad8a3f8cd8b02e65f9953d20502cd7bba23890df85047281",
          "md5": "84e0fef12216f8867388e81ccf442c00",
          "sha256": "06e4da2931003f6a6693a900e709ba34eac6d7500e4d5126bb7d30926e0c0de7"
        },
        "downloads": -1,
        "filename": "miceforest-1.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84e0fef12216f8867388e81ccf442c00",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19763,
        "upload_time": "2020-08-30T21:30:27",
        "upload_time_iso_8601": "2020-08-30T21:30:27.962670Z",
        "url": "https://files.pythonhosted.org/packages/90/d0/58bb705111fcad8a3f8cd8b02e65f9953d20502cd7bba23890df85047281/miceforest-1.0.7-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "installs tests to site-packages"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e94cdd0a806498ed5a1e7ea9ffc355f313f7e1148dc3a37f438079ca2ca0d022",
          "md5": "e07c0ae0a99888d05a8223d7839678d2",
          "sha256": "6f694e7bfcff59955e5dc3f25955746e2f8c297582c23b2f360947ef21a5d90e"
        },
        "downloads": -1,
        "filename": "miceforest-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "e07c0ae0a99888d05a8223d7839678d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23486,
        "upload_time": "2020-08-30T21:30:29",
        "upload_time_iso_8601": "2020-08-30T21:30:29.409575Z",
        "url": "https://files.pythonhosted.org/packages/e9/4c/dd0a806498ed5a1e7ea9ffc355f313f7e1148dc3a37f438079ca2ca0d022/miceforest-1.0.7.tar.gz",
        "yanked": true,
        "yanked_reason": "installs tests to site-packages"
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83bf8d6188f6557095c7bdb8c50bf6e6731e1ac2a1e256342c24b47e44fc761e",
          "md5": "683413376d3a4d8223770ec97a46c133",
          "sha256": "174e3b2a034408b479fc7b88742d845a8d2f2b15046261300da2180b2a13a99b"
        },
        "downloads": -1,
        "filename": "miceforest-1.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "683413376d3a4d8223770ec97a46c133",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17831,
        "upload_time": "2020-08-30T23:04:15",
        "upload_time_iso_8601": "2020-08-30T23:04:15.362812Z",
        "url": "https://files.pythonhosted.org/packages/83/bf/8d6188f6557095c7bdb8c50bf6e6731e1ac2a1e256342c24b47e44fc761e/miceforest-1.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e141970bef58d2980796d9a0e80d05cc2bd142c70d82b032452dd2a58acb1c88",
          "md5": "cb9e5f6c564592b1d18a6cb27853122e",
          "sha256": "ead2e593b6f048ba1d330fc27ef61639491f326301fd351de88037b50d329c2e"
        },
        "downloads": -1,
        "filename": "miceforest-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "cb9e5f6c564592b1d18a6cb27853122e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23508,
        "upload_time": "2020-08-30T23:04:16",
        "upload_time_iso_8601": "2020-08-30T23:04:16.773730Z",
        "url": "https://files.pythonhosted.org/packages/e1/41/970bef58d2980796d9a0e80d05cc2bd142c70d82b032452dd2a58acb1c88/miceforest-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0dca2f50e395a9b2d79a67a09cfb5e65659912c9a18a02c02c9f6240fc1055b8",
          "md5": "5f8ca4b52ec35ad364fa92f7757570cc",
          "sha256": "b40eec168db654a0e3c853d02e06ebea1eb4d30d2651f0a0c1839d1ba43354bb"
        },
        "downloads": -1,
        "filename": "miceforest-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f8ca4b52ec35ad364fa92f7757570cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 27701,
        "upload_time": "2020-09-08T13:56:14",
        "upload_time_iso_8601": "2020-09-08T13:56:14.629816Z",
        "url": "https://files.pythonhosted.org/packages/0d/ca/2f50e395a9b2d79a67a09cfb5e65659912c9a18a02c02c9f6240fc1055b8/miceforest-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b3f4574ec4517796331251224ac1d64976014b9475232c09e68f9c9b413f09e",
          "md5": "1ee8320f1b4aec9493983db4cb9256af",
          "sha256": "e0b72a3821ef74214c8b376f82f3066597caaa51a6f0d782b902c3a0e0a67c28"
        },
        "downloads": -1,
        "filename": "miceforest-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1ee8320f1b4aec9493983db4cb9256af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29880,
        "upload_time": "2020-09-08T13:56:15",
        "upload_time_iso_8601": "2020-09-08T13:56:15.970613Z",
        "url": "https://files.pythonhosted.org/packages/2b/3f/4574ec4517796331251224ac1d64976014b9475232c09e68f9c9b413f09e/miceforest-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e4d8413e6a83ce2cff337ff277a900988c5a4ff6f9e6a68a5eb83fc25b28ab9",
          "md5": "c69d7fdd45fbd82a8b3cf83ab094d3a5",
          "sha256": "64d7ead108c4b592aa51f9464d5956ef670c5168232d3383d2df0661de32368d"
        },
        "downloads": -1,
        "filename": "miceforest-2.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c69d7fdd45fbd82a8b3cf83ab094d3a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 27119,
        "upload_time": "2020-09-13T21:25:16",
        "upload_time_iso_8601": "2020-09-13T21:25:16.009021Z",
        "url": "https://files.pythonhosted.org/packages/3e/4d/8413e6a83ce2cff337ff277a900988c5a4ff6f9e6a68a5eb83fc25b28ab9/miceforest-2.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83537b6120df80d83274cac3cda8989026d7d98ada4dac5236c9a3aebd40e0c2",
          "md5": "d59a7d0e343db7f0311527d6c9bded52",
          "sha256": "d43559c715b0cea06c88f372e35a6d7f46f5d7473cd30ab7d794457a37296f5c"
        },
        "downloads": -1,
        "filename": "miceforest-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d59a7d0e343db7f0311527d6c9bded52",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 30467,
        "upload_time": "2020-09-13T21:25:17",
        "upload_time_iso_8601": "2020-09-13T21:25:17.339903Z",
        "url": "https://files.pythonhosted.org/packages/83/53/7b6120df80d83274cac3cda8989026d7d98ada4dac5236c9a3aebd40e0c2/miceforest-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c516d71588b798547a214571318f013d612f9d2dcc1925ee9415f173a8dec2f8",
          "md5": "e341a6a54a34620d31a9af58617c94d1",
          "sha256": "e491d7d72b1fd1243916da300c4966d2e83058f60c4f9cad5e25c6bfcd64f1fd"
        },
        "downloads": -1,
        "filename": "miceforest-2.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e341a6a54a34620d31a9af58617c94d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 27135,
        "upload_time": "2020-09-13T22:15:31",
        "upload_time_iso_8601": "2020-09-13T22:15:31.086782Z",
        "url": "https://files.pythonhosted.org/packages/c5/16/d71588b798547a214571318f013d612f9d2dcc1925ee9415f173a8dec2f8/miceforest-2.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d413bfd0b51c720d364dcacd9f699141d6686271b6d5f0598e45b8e69dc24cbe",
          "md5": "938a93b172cb26e1ad45f87d68a272eb",
          "sha256": "8be44330fb64de2aa3d90f12f3a4f82a1ed1ce1346f9919158a836bed704e166"
        },
        "downloads": -1,
        "filename": "miceforest-2.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "938a93b172cb26e1ad45f87d68a272eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 30501,
        "upload_time": "2020-09-13T22:15:32",
        "upload_time_iso_8601": "2020-09-13T22:15:32.431893Z",
        "url": "https://files.pythonhosted.org/packages/d4/13/bfd0b51c720d364dcacd9f699141d6686271b6d5f0598e45b8e69dc24cbe/miceforest-2.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2531e50afa08645f9d5d1308e9fcd793a44b80ee99d8671726738de53dd65a1",
          "md5": "d7faaa1e902bcd6ed35fbdc23f99e284",
          "sha256": "7775d97b5501ccf48abecf3685257a3c4fbf82a73dd358c1e8c27e23b5ec86be"
        },
        "downloads": -1,
        "filename": "miceforest-2.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d7faaa1e902bcd6ed35fbdc23f99e284",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 26850,
        "upload_time": "2021-04-01T19:39:48",
        "upload_time_iso_8601": "2021-04-01T19:39:48.698350Z",
        "url": "https://files.pythonhosted.org/packages/f2/53/1e50afa08645f9d5d1308e9fcd793a44b80ee99d8671726738de53dd65a1/miceforest-2.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c1e0ffd2dfdef6c053f533a1f385aee265b1db81541d2d6673b2330c556c89d",
          "md5": "9d4d46cd904df082600b84d56ccf4f65",
          "sha256": "952e6c26583aef9c2a5ec5021013c922b664847ef710e45a14c1a4f6f1b4aed2"
        },
        "downloads": -1,
        "filename": "miceforest-2.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9d4d46cd904df082600b84d56ccf4f65",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 30231,
        "upload_time": "2021-04-01T19:39:50",
        "upload_time_iso_8601": "2021-04-01T19:39:50.050485Z",
        "url": "https://files.pythonhosted.org/packages/6c/1e/0ffd2dfdef6c053f533a1f385aee265b1db81541d2d6673b2330c556c89d/miceforest-2.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ba58bf9cabea70fef8ebaafdfafac6c8cbfdd011a5abe6a47e804a249bae85d",
          "md5": "9db8b60bacceceabe03332b122192cca",
          "sha256": "b1aa0dfd115cb8c11d143f5cfc87d888434e7477033104c7ebae2bab12457d49"
        },
        "downloads": -1,
        "filename": "miceforest-2.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9db8b60bacceceabe03332b122192cca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 27195,
        "upload_time": "2021-06-16T14:39:07",
        "upload_time_iso_8601": "2021-06-16T14:39:07.742248Z",
        "url": "https://files.pythonhosted.org/packages/4b/a5/8bf9cabea70fef8ebaafdfafac6c8cbfdd011a5abe6a47e804a249bae85d/miceforest-2.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39908cca81745869748ab0225260fe224ab521192c9c0cc779740685b9aa2b60",
          "md5": "e31425a61280204e708301d0a98133be",
          "sha256": "da23b6aba5971284d271d847ac7724f4ddb8d6c6a459779827503fb848468edb"
        },
        "downloads": -1,
        "filename": "miceforest-2.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "e31425a61280204e708301d0a98133be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 30455,
        "upload_time": "2021-06-16T14:39:09",
        "upload_time_iso_8601": "2021-06-16T14:39:09.694867Z",
        "url": "https://files.pythonhosted.org/packages/39/90/8cca81745869748ab0225260fe224ab521192c9c0cc779740685b9aa2b60/miceforest-2.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5a23e132eab20b7db37ca35ff25a5d778000b14aecc104906a552ac3dd7ff11",
          "md5": "eff0e38899fc2366d6024934f3cc8b45",
          "sha256": "72e547a25027e1a1ee02344c3c4848ce2b7e628f4fb293a2e0a63fd844210e59"
        },
        "downloads": -1,
        "filename": "miceforest-2.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eff0e38899fc2366d6024934f3cc8b45",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 27206,
        "upload_time": "2021-07-18T23:00:55",
        "upload_time_iso_8601": "2021-07-18T23:00:55.660248Z",
        "url": "https://files.pythonhosted.org/packages/c5/a2/3e132eab20b7db37ca35ff25a5d778000b14aecc104906a552ac3dd7ff11/miceforest-2.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa1636e8f3d026cfa1d3e4f1443df054806e42143415131b7394cf78a95e8f81",
          "md5": "9e64b706150c9be6142fa5f781eb6825",
          "sha256": "1afe1f5cb598ee4dab5f61817907e4fa692184a84d02cb0edd46b5af6d9eb224"
        },
        "downloads": -1,
        "filename": "miceforest-2.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "9e64b706150c9be6142fa5f781eb6825",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 30478,
        "upload_time": "2021-07-18T23:00:57",
        "upload_time_iso_8601": "2021-07-18T23:00:57.338788Z",
        "url": "https://files.pythonhosted.org/packages/fa/16/36e8f3d026cfa1d3e4f1443df054806e42143415131b7394cf78a95e8f81/miceforest-2.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7d14147078c0dab0dc4a6710c59edaf076c8b1b05d77683487268d58e0d5a1b",
          "md5": "4d4e83f2c26befd283469ba51c8cea95",
          "sha256": "f2e9fd91be695744991646afa88e498b398104b80eafb79aab0c4de4e2957c12"
        },
        "downloads": -1,
        "filename": "miceforest-3.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d4e83f2c26befd283469ba51c8cea95",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 31846,
        "upload_time": "2021-09-03T23:11:38",
        "upload_time_iso_8601": "2021-09-03T23:11:38.579122Z",
        "url": "https://files.pythonhosted.org/packages/e7/d1/4147078c0dab0dc4a6710c59edaf076c8b1b05d77683487268d58e0d5a1b/miceforest-3.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27a0af27b45988ad5fc98e5c6a0108d1570a98e1cba3b2b7e0c5258986a748e0",
          "md5": "c220936a1ef8c18184de29e3ea712a16",
          "sha256": "10083c127ecd66067439a57ca7920e629773c34c50fdb5e9b4cc0e4467fe8294"
        },
        "downloads": -1,
        "filename": "miceforest-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c220936a1ef8c18184de29e3ea712a16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 37190,
        "upload_time": "2021-09-03T23:11:41",
        "upload_time_iso_8601": "2021-09-03T23:11:41.110786Z",
        "url": "https://files.pythonhosted.org/packages/27/a0/af27b45988ad5fc98e5c6a0108d1570a98e1cba3b2b7e0c5258986a748e0/miceforest-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34f0fe7d7776d9db262bfba7d9d96e8803f3a098cb60dc4efe8816e1ed6dd7ec",
          "md5": "1e1e8ad4e63c03986fa67df54e764f97",
          "sha256": "ac886112aee519535f3dc24139be56cf2345e34d2d5ab3250fef6cc69d540087"
        },
        "downloads": -1,
        "filename": "miceforest-3.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e1e8ad4e63c03986fa67df54e764f97",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 31798,
        "upload_time": "2021-09-05T16:47:39",
        "upload_time_iso_8601": "2021-09-05T16:47:39.897148Z",
        "url": "https://files.pythonhosted.org/packages/34/f0/fe7d7776d9db262bfba7d9d96e8803f3a098cb60dc4efe8816e1ed6dd7ec/miceforest-3.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00b5d8f4df56135a6e2e0f0985543fc7855eede3da859b54a066a39d14ddbaa6",
          "md5": "aca5b5f355adaa96e08a353959c8b6ee",
          "sha256": "387d16745aeaa1ad3d34d9d02995acc74787396c813ce8ebbea3901a80617bcc"
        },
        "downloads": -1,
        "filename": "miceforest-3.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aca5b5f355adaa96e08a353959c8b6ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 37221,
        "upload_time": "2021-09-05T16:47:41",
        "upload_time_iso_8601": "2021-09-05T16:47:41.302970Z",
        "url": "https://files.pythonhosted.org/packages/00/b5/d8f4df56135a6e2e0f0985543fc7855eede3da859b54a066a39d14ddbaa6/miceforest-3.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f64c2bd28f0d5bb706cd94a5e0ab412ae2455e67e9605b59d4cdfef16af38b9",
          "md5": "2898bca596b63a50911e0a5f8582a9db",
          "sha256": "386c6e30fa3981c2deac479938cd255849e98cc6b411b025f1b7ee7d47437bce"
        },
        "downloads": -1,
        "filename": "miceforest-3.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2898bca596b63a50911e0a5f8582a9db",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 32592,
        "upload_time": "2021-09-05T23:23:29",
        "upload_time_iso_8601": "2021-09-05T23:23:29.647042Z",
        "url": "https://files.pythonhosted.org/packages/5f/64/c2bd28f0d5bb706cd94a5e0ab412ae2455e67e9605b59d4cdfef16af38b9/miceforest-3.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77fa0325bcec07487e92ed4a45f57d3e1de9f05c676887201488098027769856",
          "md5": "78712b39a17664afbbb05b2d88d71c3e",
          "sha256": "b3a775bf07d09ecc91e7db7366befb7b13e168e6ad09cf5f455190d3c14e790a"
        },
        "downloads": -1,
        "filename": "miceforest-3.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "78712b39a17664afbbb05b2d88d71c3e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 37307,
        "upload_time": "2021-09-05T23:23:31",
        "upload_time_iso_8601": "2021-09-05T23:23:31.322102Z",
        "url": "https://files.pythonhosted.org/packages/77/fa/0325bcec07487e92ed4a45f57d3e1de9f05c676887201488098027769856/miceforest-3.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9730f6f19294eadb1bd14f022009cacb26c4a9720a8c6927ab4c2f11471d7495",
          "md5": "8a34c805ed4a03d7302cef9e2295ab1c",
          "sha256": "a8d3013d9db771c96e8201a2efdd02f5e0c48115ab39e734e8807b0863859719"
        },
        "downloads": -1,
        "filename": "miceforest-4.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8a34c805ed4a03d7302cef9e2295ab1c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 47354,
        "upload_time": "2021-09-28T20:25:27",
        "upload_time_iso_8601": "2021-09-28T20:25:27.593067Z",
        "url": "https://files.pythonhosted.org/packages/97/30/f6f19294eadb1bd14f022009cacb26c4a9720a8c6927ab4c2f11471d7495/miceforest-4.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d1af3bf8ca72d6324c064aff067a7baeb2992ff37bf8d170f1e4506ea9fd643",
          "md5": "20ea4c1dc5884b2ae03ff4f3223e6e96",
          "sha256": "dec868a3e1b52d8cc4bf7fde7f111648f4a839d5c41febe3dfbedd03f21c714e"
        },
        "downloads": -1,
        "filename": "miceforest-4.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "20ea4c1dc5884b2ae03ff4f3223e6e96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 53716,
        "upload_time": "2021-09-28T20:25:30",
        "upload_time_iso_8601": "2021-09-28T20:25:30.010143Z",
        "url": "https://files.pythonhosted.org/packages/2d/1a/f3bf8ca72d6324c064aff067a7baeb2992ff37bf8d170f1e4506ea9fd643/miceforest-4.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0888a5024536f02c3a09119a9dce728592f272d7322d7c141335dc723f88c3f1",
          "md5": "53da10d8b1f1ea88672ed09c1d09a97a",
          "sha256": "1dd14ba0b7c037190dc90627cc6a2a00a0b3b0e7bd4db5012a1a7321f87d9387"
        },
        "downloads": -1,
        "filename": "miceforest-4.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "53da10d8b1f1ea88672ed09c1d09a97a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 47882,
        "upload_time": "2021-09-30T17:55:13",
        "upload_time_iso_8601": "2021-09-30T17:55:13.263860Z",
        "url": "https://files.pythonhosted.org/packages/08/88/a5024536f02c3a09119a9dce728592f272d7322d7c141335dc723f88c3f1/miceforest-4.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0450ed30a538088c8e8b86a4af79989a68ddbfda9a24e6923446f9a8ffbff75e",
          "md5": "efb8574170c5d6e27cade03a294fe048",
          "sha256": "fd30b16a18db3237f155489386c10f4de0fc76f69ba5e1dfec1c1c332e307047"
        },
        "downloads": -1,
        "filename": "miceforest-4.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "efb8574170c5d6e27cade03a294fe048",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 57730,
        "upload_time": "2021-09-30T17:55:14",
        "upload_time_iso_8601": "2021-09-30T17:55:14.745840Z",
        "url": "https://files.pythonhosted.org/packages/04/50/ed30a538088c8e8b86a4af79989a68ddbfda9a24e6923446f9a8ffbff75e/miceforest-4.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e90a5fb4ea5687b2aa317dc5486d5597b77761d670f857fd03598a6295210b2d",
          "md5": "7ea31a1232966b5ecf83f36f69771c66",
          "sha256": "3134f253aaeb13470309a4775d4feb1b216cdf0633c70e639c83c48e8da49c03"
        },
        "downloads": -1,
        "filename": "miceforest-4.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ea31a1232966b5ecf83f36f69771c66",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 47963,
        "upload_time": "2021-10-04T01:06:28",
        "upload_time_iso_8601": "2021-10-04T01:06:28.653415Z",
        "url": "https://files.pythonhosted.org/packages/e9/0a/5fb4ea5687b2aa317dc5486d5597b77761d670f857fd03598a6295210b2d/miceforest-4.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d91f71aeed567cb9c6d926f0a8ecd016902ce1a1a72558478922bf0edf0e1729",
          "md5": "e170c9bca3a66b59402792e7f9b6a1c9",
          "sha256": "e497aff4f7ed2afdc6d52497af0c84d6c958b870b2c3852d09d4d76556331e04"
        },
        "downloads": -1,
        "filename": "miceforest-4.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e170c9bca3a66b59402792e7f9b6a1c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 57782,
        "upload_time": "2021-10-04T01:06:30",
        "upload_time_iso_8601": "2021-10-04T01:06:30.429387Z",
        "url": "https://files.pythonhosted.org/packages/d9/1f/71aeed567cb9c6d926f0a8ecd016902ce1a1a72558478922bf0edf0e1729/miceforest-4.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0b4c49b4dd90cfa8866546f49cce4b057788d4f20f3c5e621696ae49358450f",
          "md5": "7aacd05b580702d1f8bd2eb6e89c36e6",
          "sha256": "c8000587cd1e02435e43ffbb1c15d1207112cfcf025d3821a8667965172a10ea"
        },
        "downloads": -1,
        "filename": "miceforest-4.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7aacd05b580702d1f8bd2eb6e89c36e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 47959,
        "upload_time": "2021-10-09T14:59:25",
        "upload_time_iso_8601": "2021-10-09T14:59:25.666378Z",
        "url": "https://files.pythonhosted.org/packages/e0/b4/c49b4dd90cfa8866546f49cce4b057788d4f20f3c5e621696ae49358450f/miceforest-4.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a0356e5932999bdd73f33753ce40a3c703adab02bbbcfe0a786ebefa76d262b",
          "md5": "c551126cc4fadc0378bc8963baf2020f",
          "sha256": "cddf40939961513fff708aac119ab7b4823dc00561b3aac2dfd990ac9dcfc6f1"
        },
        "downloads": -1,
        "filename": "miceforest-4.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c551126cc4fadc0378bc8963baf2020f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 57775,
        "upload_time": "2021-10-09T14:59:27",
        "upload_time_iso_8601": "2021-10-09T14:59:27.051395Z",
        "url": "https://files.pythonhosted.org/packages/5a/03/56e5932999bdd73f33753ce40a3c703adab02bbbcfe0a786ebefa76d262b/miceforest-4.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5fa69c2f576ed45bd712b5083f73444aea69dbdee6d72818d8867a3db71145d",
          "md5": "541ac45f7e9e90f419c864162b3d99b7",
          "sha256": "b675ed8db324ee412737f14e1eabd2e648091529ee8fbe02f4deb3af2b7deaf6"
        },
        "downloads": -1,
        "filename": "miceforest-5.0.0-1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "541ac45f7e9e90f419c864162b3d99b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 67935,
        "upload_time": "2021-10-15T22:24:46",
        "upload_time_iso_8601": "2021-10-15T22:24:46.052881Z",
        "url": "https://files.pythonhosted.org/packages/f5/fa/69c2f576ed45bd712b5083f73444aea69dbdee6d72818d8867a3db71145d/miceforest-5.0.0-1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ff6f65d66e1700efd041feeadb02f5e84b793380422e360c7f08d82366f92c0",
          "md5": "d872b6e44cbf344cae205ca10017ddf2",
          "sha256": "204c66d6045c641d0d814d65ccb729dbe00e7c5aaec43b5660ec60cc58abe3d1"
        },
        "downloads": -1,
        "filename": "miceforest-5.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d872b6e44cbf344cae205ca10017ddf2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 67920,
        "upload_time": "2021-10-15T20:13:48",
        "upload_time_iso_8601": "2021-10-15T20:13:48.502985Z",
        "url": "https://files.pythonhosted.org/packages/0f/f6/f65d66e1700efd041feeadb02f5e84b793380422e360c7f08d82366f92c0/miceforest-5.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6504d768c856ce19d783c09cd7584ae931aa6744c1fca66170c7422bccf4bf31",
          "md5": "446020470edc7a323cd56d176feda03e",
          "sha256": "6b6cd5539ce1d4c9433c40d959fa602686b39c8512b15692f6bbdcfc204bd3e6"
        },
        "downloads": -1,
        "filename": "miceforest-5.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "446020470edc7a323cd56d176feda03e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 75051,
        "upload_time": "2021-10-15T20:13:49",
        "upload_time_iso_8601": "2021-10-15T20:13:49.965692Z",
        "url": "https://files.pythonhosted.org/packages/65/04/d768c856ce19d783c09cd7584ae931aa6744c1fca66170c7422bccf4bf31/miceforest-5.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d94025170aa9fffa8d901125de489cadf5883696a0c37d2b465bd8e8415e431",
          "md5": "ebece608f370148dac1925ee2caf7990",
          "sha256": "46c02360a7ce4df40e91314d75fdda5f14d6c961385c78ac2b1feab1bb845745"
        },
        "downloads": -1,
        "filename": "miceforest-5.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ebece608f370148dac1925ee2caf7990",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 67936,
        "upload_time": "2021-10-15T22:31:11",
        "upload_time_iso_8601": "2021-10-15T22:31:11.605296Z",
        "url": "https://files.pythonhosted.org/packages/0d/94/025170aa9fffa8d901125de489cadf5883696a0c37d2b465bd8e8415e431/miceforest-5.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "807fdccab711f859137c8be463b73519a6dfd416926f1b3f1422a8e4f4c4eb1e",
          "md5": "26ad1c7054247b25392dcdcc2cdb05f0",
          "sha256": "bf8c30ae9c486655554b3aaa93b3ef422d59178e0cc52e0ac3009f9d795aec55"
        },
        "downloads": -1,
        "filename": "miceforest-5.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "26ad1c7054247b25392dcdcc2cdb05f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 75120,
        "upload_time": "2021-10-15T22:31:14",
        "upload_time_iso_8601": "2021-10-15T22:31:14.608885Z",
        "url": "https://files.pythonhosted.org/packages/80/7f/dccab711f859137c8be463b73519a6dfd416926f1b3f1422a8e4f4c4eb1e/miceforest-5.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8bb7851bf0cea619cd47bcdaee385b33c1c05a5e37318cdfe709787c235bcde",
          "md5": "f53dfebf193b3ddd5df390950711346c",
          "sha256": "0930811e0da8eb92490080c376296d785ffe6f3c15c6480c463798671f5ef276"
        },
        "downloads": -1,
        "filename": "miceforest-5.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f53dfebf193b3ddd5df390950711346c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 67948,
        "upload_time": "2021-10-15T23:06:17",
        "upload_time_iso_8601": "2021-10-15T23:06:17.240881Z",
        "url": "https://files.pythonhosted.org/packages/d8/bb/7851bf0cea619cd47bcdaee385b33c1c05a5e37318cdfe709787c235bcde/miceforest-5.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "262396492399d3c7d0043b398baedc66bc9e237f07b1e5480df2df9bf4f2d78d",
          "md5": "d7e5c345b2917cc9b67521e104f62a88",
          "sha256": "0f1f02b753c00021d87eff59aa5fbc945425bd579975171d725a7dd4f5d2d2ce"
        },
        "downloads": -1,
        "filename": "miceforest-5.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d7e5c345b2917cc9b67521e104f62a88",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 75151,
        "upload_time": "2021-10-15T23:06:20",
        "upload_time_iso_8601": "2021-10-15T23:06:20.152923Z",
        "url": "https://files.pythonhosted.org/packages/26/23/96492399d3c7d0043b398baedc66bc9e237f07b1e5480df2df9bf4f2d78d/miceforest-5.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f6588a68a69603d370475bceb5c6f03ecced0d9ce76ae30354c55e19ddd9f25",
          "md5": "af82ecdca103c93f7f107181ff09d9a9",
          "sha256": "121ac63e05bc13234b11a80572524708bacfb478cd1f9db46a7b5fcf4279fb8a"
        },
        "downloads": -1,
        "filename": "miceforest-5.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af82ecdca103c93f7f107181ff09d9a9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 67948,
        "upload_time": "2021-10-16T00:16:04",
        "upload_time_iso_8601": "2021-10-16T00:16:04.992116Z",
        "url": "https://files.pythonhosted.org/packages/2f/65/88a68a69603d370475bceb5c6f03ecced0d9ce76ae30354c55e19ddd9f25/miceforest-5.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69d9cf0372ac898f6d3e59489f61dfe4fededc30fb399508df9b14be81bdf305",
          "md5": "4511e42a383bc1c79c0eacda13e8ffaa",
          "sha256": "ba169eed581a6a1f75e13268c30141fc38e20315e356cab9c3b298bbabe213a7"
        },
        "downloads": -1,
        "filename": "miceforest-5.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4511e42a383bc1c79c0eacda13e8ffaa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 75112,
        "upload_time": "2021-10-16T00:16:07",
        "upload_time_iso_8601": "2021-10-16T00:16:07.097066Z",
        "url": "https://files.pythonhosted.org/packages/69/d9/cf0372ac898f6d3e59489f61dfe4fededc30fb399508df9b14be81bdf305/miceforest-5.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af8a6fa79fd3a6922e19eb545a71f0aa2d4c3c80f3e7c78b700fa0dd3a3bbfda",
          "md5": "d90ab3eae50c15a4572985a91388ff66",
          "sha256": "f730bcfa66664db865f1deba8e8aeb361a9a9cacdd666f64f224f56b2454cb0a"
        },
        "downloads": -1,
        "filename": "miceforest-5.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d90ab3eae50c15a4572985a91388ff66",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 69708,
        "upload_time": "2021-10-18T14:51:22",
        "upload_time_iso_8601": "2021-10-18T14:51:22.056979Z",
        "url": "https://files.pythonhosted.org/packages/af/8a/6fa79fd3a6922e19eb545a71f0aa2d4c3c80f3e7c78b700fa0dd3a3bbfda/miceforest-5.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e43498cd58ff018a6d761bf5e262053ef6b38bb6221c16211d676ab64a57bf9",
          "md5": "cf9cd93ece2f71bd42ded70e3a43f50c",
          "sha256": "c484b791518b45a918cf61fec100ce33c73974c7bb78acec6a31b29b9de4e234"
        },
        "downloads": -1,
        "filename": "miceforest-5.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cf9cd93ece2f71bd42ded70e3a43f50c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 78208,
        "upload_time": "2021-10-18T14:51:24",
        "upload_time_iso_8601": "2021-10-18T14:51:24.772536Z",
        "url": "https://files.pythonhosted.org/packages/0e/43/498cd58ff018a6d761bf5e262053ef6b38bb6221c16211d676ab64a57bf9/miceforest-5.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aac3781ea73d577c03a964240a0726ccb2cf74506bc23e3bbd182f205f781e0a",
          "md5": "88a5f254c03c0a4221c221ceb7b1e818",
          "sha256": "5ef59680e94443c4037a5a7a07aae10f04c49a026f755e6b0beef7693787f714"
        },
        "downloads": -1,
        "filename": "miceforest-5.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "88a5f254c03c0a4221c221ceb7b1e818",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 69894,
        "upload_time": "2021-10-23T15:16:04",
        "upload_time_iso_8601": "2021-10-23T15:16:04.222858Z",
        "url": "https://files.pythonhosted.org/packages/aa/c3/781ea73d577c03a964240a0726ccb2cf74506bc23e3bbd182f205f781e0a/miceforest-5.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56971015ae16b8eaaee99bcca9e155472abf9d60e6fdb531744b4e228f3b39bf",
          "md5": "f99e516497103ccdd6d701b83cb9c833",
          "sha256": "b30be77473671a120cec3b7d6d63c1d6fe2e573398d8fcaeb6ad40223387eeb4"
        },
        "downloads": -1,
        "filename": "miceforest-5.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f99e516497103ccdd6d701b83cb9c833",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 78356,
        "upload_time": "2021-10-23T15:16:06",
        "upload_time_iso_8601": "2021-10-23T15:16:06.128443Z",
        "url": "https://files.pythonhosted.org/packages/56/97/1015ae16b8eaaee99bcca9e155472abf9d60e6fdb531744b4e228f3b39bf/miceforest-5.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "277db7ff46d3be8e44513c17dbe50332d4518584f6f19e718f32826ccf07dcce",
          "md5": "92637b33b7382a87fa93a3216f8c6238",
          "sha256": "004fe0d8d17a1d24f753718dc0e6b04a92d7b63b0c61bd82e4c2c4d2ed47f307"
        },
        "downloads": -1,
        "filename": "miceforest-5.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "92637b33b7382a87fa93a3216f8c6238",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 69893,
        "upload_time": "2021-11-06T16:49:38",
        "upload_time_iso_8601": "2021-11-06T16:49:38.491700Z",
        "url": "https://files.pythonhosted.org/packages/27/7d/b7ff46d3be8e44513c17dbe50332d4518584f6f19e718f32826ccf07dcce/miceforest-5.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "573880c62c855e1eddd83757a5522a65c55b2c6d407ddba9a4a967d12dbf3012",
          "md5": "3480db16445bb3f9fa45fda28a3c62ea",
          "sha256": "1302eedb79a816425191331c760a6e674335fe5ccb588ecd28c3c9e26f166546"
        },
        "downloads": -1,
        "filename": "miceforest-5.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3480db16445bb3f9fa45fda28a3c62ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 78354,
        "upload_time": "2021-11-06T16:49:39",
        "upload_time_iso_8601": "2021-11-06T16:49:39.931668Z",
        "url": "https://files.pythonhosted.org/packages/57/38/80c62c855e1eddd83757a5522a65c55b2c6d407ddba9a4a967d12dbf3012/miceforest-5.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a80f144df337c99675df0e013f058d6ba205e3898bf5e5fc4a6de73326562b93",
          "md5": "bb230507f33a48e27975f258fb83c0bd",
          "sha256": "32fa0d6e6c4dd62e5ad7250592388c32ffafd005b8da98cc0d2b227f6dc352a1"
        },
        "downloads": -1,
        "filename": "miceforest-5.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bb230507f33a48e27975f258fb83c0bd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 69884,
        "upload_time": "2021-12-08T20:31:15",
        "upload_time_iso_8601": "2021-12-08T20:31:15.468859Z",
        "url": "https://files.pythonhosted.org/packages/a8/0f/144df337c99675df0e013f058d6ba205e3898bf5e5fc4a6de73326562b93/miceforest-5.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b22a6d8be5b5f65096e0028ecf4712107c1cea0919f2f59f40d29cb834994d2",
          "md5": "8198f7cecc46fa91aa527ba4adb19e3d",
          "sha256": "e9f3eb9f38436a478d8514bbce870d738cbe360bf948fcfb2f0d78de4339b113"
        },
        "downloads": -1,
        "filename": "miceforest-5.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8198f7cecc46fa91aa527ba4adb19e3d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 58739,
        "upload_time": "2021-12-08T20:31:16",
        "upload_time_iso_8601": "2021-12-08T20:31:16.948149Z",
        "url": "https://files.pythonhosted.org/packages/4b/22/a6d8be5b5f65096e0028ecf4712107c1cea0919f2f59f40d29cb834994d2/miceforest-5.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33df5c71d3df9e49b0a33bfc29281f87235e543956a3cd40d6c861732693bcfa",
          "md5": "c02d7fd33376d198482e18f781b419e5",
          "sha256": "149c66bf78fe25ccf9ace40a88a4ef2b7fc6b87350bb46c45cb1943f862df849"
        },
        "downloads": -1,
        "filename": "miceforest-5.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c02d7fd33376d198482e18f781b419e5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 70004,
        "upload_time": "2021-12-20T01:02:39",
        "upload_time_iso_8601": "2021-12-20T01:02:39.295806Z",
        "url": "https://files.pythonhosted.org/packages/33/df/5c71d3df9e49b0a33bfc29281f87235e543956a3cd40d6c861732693bcfa/miceforest-5.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5760b923b4a44d90db7f443aff1522c5aacf914664b2aad451baf5f03551473e",
          "md5": "4917036f798d4eb07e514cf7e32b10c6",
          "sha256": "7cdbf1a0b32b78d1730f4e0e9738533987e9df8661f2928ea7c50a17e2cc7fd9"
        },
        "downloads": -1,
        "filename": "miceforest-5.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4917036f798d4eb07e514cf7e32b10c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 58841,
        "upload_time": "2021-12-20T01:02:41",
        "upload_time_iso_8601": "2021-12-20T01:02:41.352910Z",
        "url": "https://files.pythonhosted.org/packages/57/60/b923b4a44d90db7f443aff1522c5aacf914664b2aad451baf5f03551473e/miceforest-5.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "692d22d86ceb63bbd9440e1a3a354ca0d21fc783e05e6a7ec1b4df452f1edaf4",
          "md5": "0f28ea5bd17f27cecc8bccb4e7195c4b",
          "sha256": "fb308ced3886047e4ca829b5498feb801c6c792c85c0dda85d82cb0ce1569915"
        },
        "downloads": -1,
        "filename": "miceforest-5.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f28ea5bd17f27cecc8bccb4e7195c4b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 39522,
        "upload_time": "2021-12-30T17:30:30",
        "upload_time_iso_8601": "2021-12-30T17:30:30.820772Z",
        "url": "https://files.pythonhosted.org/packages/69/2d/22d86ceb63bbd9440e1a3a354ca0d21fc783e05e6a7ec1b4df452f1edaf4/miceforest-5.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3765a66f98855a6180a7c0cd72e61df9ecc450820c848ff8996a42e8da44b5a",
          "md5": "122525e901255aff80acc4a250c714d7",
          "sha256": "e73f04d122ec6d99c892160f644577daf845b8e51a5c7a27b6a9761dc465b9ea"
        },
        "downloads": -1,
        "filename": "miceforest-5.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "122525e901255aff80acc4a250c714d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 59219,
        "upload_time": "2021-12-30T17:30:32",
        "upload_time_iso_8601": "2021-12-30T17:30:32.519836Z",
        "url": "https://files.pythonhosted.org/packages/c3/76/5a66f98855a6180a7c0cd72e61df9ecc450820c848ff8996a42e8da44b5a/miceforest-5.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7260894c5f106686b9b66791ed2d75ca8df54b7cb0fa0154f01ae72ad327545",
          "md5": "b9f1d9041380fb70dd9440243466b78a",
          "sha256": "4a35632c62602523e8d4bd34d5239e35b82527c40096d01928dbdef49697f178"
        },
        "downloads": -1,
        "filename": "miceforest-5.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b9f1d9041380fb70dd9440243466b78a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 41995,
        "upload_time": "2022-02-15T18:46:46",
        "upload_time_iso_8601": "2022-02-15T18:46:46.283389Z",
        "url": "https://files.pythonhosted.org/packages/d7/26/0894c5f106686b9b66791ed2d75ca8df54b7cb0fa0154f01ae72ad327545/miceforest-5.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d195b026eeeeced17c1388073fe9a3a4b98d821d3c73ee906ad54565190d6508",
          "md5": "24d0c27217bc35e4fe56f03abc821a07",
          "sha256": "d52f4858fe3d430fba14bd688226830cf8976c60070ee6a3e9d897daf50fef67"
        },
        "downloads": -1,
        "filename": "miceforest-5.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "24d0c27217bc35e4fe56f03abc821a07",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 62735,
        "upload_time": "2022-02-15T18:46:48",
        "upload_time_iso_8601": "2022-02-15T18:46:48.168993Z",
        "url": "https://files.pythonhosted.org/packages/d1/95/b026eeeeced17c1388073fe9a3a4b98d821d3c73ee906ad54565190d6508/miceforest-5.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97f0aaf6d11989c709e26700955b85f79ccd079754eee85f4ac4324bebf68b75",
          "md5": "c44faff46159593babf00353ec69dfd9",
          "sha256": "daeb1d48262345ae01d50d10b253de563ca623d414b1c703b5edfd0c37882b93"
        },
        "downloads": -1,
        "filename": "miceforest-5.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c44faff46159593babf00353ec69dfd9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 42389,
        "upload_time": "2022-04-14T02:56:40",
        "upload_time_iso_8601": "2022-04-14T02:56:40.160239Z",
        "url": "https://files.pythonhosted.org/packages/97/f0/aaf6d11989c709e26700955b85f79ccd079754eee85f4ac4324bebf68b75/miceforest-5.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c0a915015b0ceba01e30ecfa38066f6a33baf2a741b3700b066eb1b4c57360e",
          "md5": "844362e1a6dd303f04d6654196e2f75f",
          "sha256": "2d768657cd1f50f6aa0dc70d705760b31f5c0a14fd3418eb93c48d7e3d270856"
        },
        "downloads": -1,
        "filename": "miceforest-5.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "844362e1a6dd303f04d6654196e2f75f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 63428,
        "upload_time": "2022-04-14T02:56:44",
        "upload_time_iso_8601": "2022-04-14T02:56:44.955750Z",
        "url": "https://files.pythonhosted.org/packages/7c/0a/915015b0ceba01e30ecfa38066f6a33baf2a741b3700b066eb1b4c57360e/miceforest-5.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2749088498737e144b486189bad85143f8626a76ef0dbfff57615f52a64c170",
          "md5": "c541d5876fba9bf71428423315c15fdb",
          "sha256": "98514c67e08dd4a5797a80190f3d457e0b311403ac9c4c0a5c33a71917635110"
        },
        "downloads": -1,
        "filename": "miceforest-5.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c541d5876fba9bf71428423315c15fdb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 43130,
        "upload_time": "2022-04-15T14:53:33",
        "upload_time_iso_8601": "2022-04-15T14:53:33.258073Z",
        "url": "https://files.pythonhosted.org/packages/b2/74/9088498737e144b486189bad85143f8626a76ef0dbfff57615f52a64c170/miceforest-5.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4016f7096bad0194e0132ef58a51e9ece96e0b7254b6cd934836d2c64a5f6116",
          "md5": "136bfc280ec7bf07d093a7fcebf24679",
          "sha256": "8be132391ea0e9e14ccc1bb8419db706ebd70ea28c880e6fd643f74476a08a65"
        },
        "downloads": -1,
        "filename": "miceforest-5.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "136bfc280ec7bf07d093a7fcebf24679",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 64335,
        "upload_time": "2022-04-15T14:53:35",
        "upload_time_iso_8601": "2022-04-15T14:53:35.114980Z",
        "url": "https://files.pythonhosted.org/packages/40/16/f7096bad0194e0132ef58a51e9ece96e0b7254b6cd934836d2c64a5f6116/miceforest-5.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b2330a070872ba3086cd6e9a66d8a6cc0764e6d075d34cf8f37dd40e322e775",
          "md5": "7dee1dd77c082c1a9bc5089cb5f1b79f",
          "sha256": "9444ca245427ea948e0ea7106f8a25f8c83e2c0e1f497f63a7bd8320eb7f8d3a"
        },
        "downloads": -1,
        "filename": "miceforest-5.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7dee1dd77c082c1a9bc5089cb5f1b79f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 49010,
        "upload_time": "2022-07-10T22:38:25",
        "upload_time_iso_8601": "2022-07-10T22:38:25.848369Z",
        "url": "https://files.pythonhosted.org/packages/9b/23/30a070872ba3086cd6e9a66d8a6cc0764e6d075d34cf8f37dd40e322e775/miceforest-5.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d14a781152d53794da8111e9d19147df5af7460bf8442fe14f552e3449d33fbc",
          "md5": "8985126d4288989b39ec998b08ca2224",
          "sha256": "02cf8db78353de07a900aca4bba1b6dcfdab1d8567190ea0a9f037d79e475f0b"
        },
        "downloads": -1,
        "filename": "miceforest-5.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8985126d4288989b39ec998b08ca2224",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 67224,
        "upload_time": "2022-07-10T22:38:27",
        "upload_time_iso_8601": "2022-07-10T22:38:27.714635Z",
        "url": "https://files.pythonhosted.org/packages/d1/4a/781152d53794da8111e9d19147df5af7460bf8442fe14f552e3449d33fbc/miceforest-5.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9c1bf7282fa80dfd65dfd9c10deabe175a7ca346e9bfef807572e265d4b7f35",
          "md5": "f145374db399f8720d51142527c40a27",
          "sha256": "ffaeb8a2b232b56986531fd7ed28fede362e87b1a32bf951ecd9c190d67ddd4e"
        },
        "downloads": -1,
        "filename": "miceforest-5.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f145374db399f8720d51142527c40a27",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 48998,
        "upload_time": "2022-07-11T01:25:39",
        "upload_time_iso_8601": "2022-07-11T01:25:39.843793Z",
        "url": "https://files.pythonhosted.org/packages/b9/c1/bf7282fa80dfd65dfd9c10deabe175a7ca346e9bfef807572e265d4b7f35/miceforest-5.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "772f4a8d83398cc7c39a45aa4a8431afc1d8439c314538ff2c3bf3c4a4c6ace5",
          "md5": "9ada3257183fd78c449a007b3fb29b8a",
          "sha256": "1171a46bf9fc9a4311e2426e359d71399791feae847f11f6ef8a531ee5f3ac32"
        },
        "downloads": -1,
        "filename": "miceforest-5.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9ada3257183fd78c449a007b3fb29b8a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 67205,
        "upload_time": "2022-07-11T01:25:41",
        "upload_time_iso_8601": "2022-07-11T01:25:41.614534Z",
        "url": "https://files.pythonhosted.org/packages/77/2f/4a8d83398cc7c39a45aa4a8431afc1d8439c314538ff2c3bf3c4a4c6ace5/miceforest-5.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "749ba6a9f246b483375f06e15b8efb5cac5ebff26c59b6c431d7c22d8e6c4e97",
          "md5": "8b1c391fd873c859e00790f9062ee142",
          "sha256": "884d7ab71c90ae1e15878e449320302bf78a1628de990e86ba978ecc48647558"
        },
        "downloads": -1,
        "filename": "miceforest-5.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b1c391fd873c859e00790f9062ee142",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 49172,
        "upload_time": "2022-07-11T18:05:17",
        "upload_time_iso_8601": "2022-07-11T18:05:17.620883Z",
        "url": "https://files.pythonhosted.org/packages/74/9b/a6a9f246b483375f06e15b8efb5cac5ebff26c59b6c431d7c22d8e6c4e97/miceforest-5.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b73a94cfeef769a48f509746b54c343b3fe07278d71c0b8d0147ccd14f32f8a9",
          "md5": "d02e87aff51ef9e2c3c44959469366ca",
          "sha256": "03a273432ee71c2e26dfdd0e43322ab0852cc9cf4d76b750ffa19d4436d5ab2d"
        },
        "downloads": -1,
        "filename": "miceforest-5.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d02e87aff51ef9e2c3c44959469366ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 67372,
        "upload_time": "2022-07-11T18:05:19",
        "upload_time_iso_8601": "2022-07-11T18:05:19.760269Z",
        "url": "https://files.pythonhosted.org/packages/b7/3a/94cfeef769a48f509746b54c343b3fe07278d71c0b8d0147ccd14f32f8a9/miceforest-5.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2141a6e20606563186e08867d985d15fcaee26ed47dc614d32696e476f47bb5",
          "md5": "650e5a0af00f550eb666ab6cb5d59f8b",
          "sha256": "4d3e839ae61150371a34b06194d1037fa202b50357391adf2c2d5c1f8d9582c3"
        },
        "downloads": -1,
        "filename": "miceforest-5.5.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "650e5a0af00f550eb666ab6cb5d59f8b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 49579,
        "upload_time": "2022-07-14T21:28:51",
        "upload_time_iso_8601": "2022-07-14T21:28:51.719111Z",
        "url": "https://files.pythonhosted.org/packages/e2/14/1a6e20606563186e08867d985d15fcaee26ed47dc614d32696e476f47bb5/miceforest-5.5.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2cfc4b02b3856fdc7e5a3bd42cfc8de9f43c32497c29b2f3f123f6f307ebf64",
          "md5": "56d8651907a81c585c66ea6810c47984",
          "sha256": "d0738ff824890f6259019fbdae4e6e369e7d77b7a9730cf1e1b505bda68522ae"
        },
        "downloads": -1,
        "filename": "miceforest-5.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "56d8651907a81c585c66ea6810c47984",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 68387,
        "upload_time": "2022-07-14T21:28:53",
        "upload_time_iso_8601": "2022-07-14T21:28:53.764790Z",
        "url": "https://files.pythonhosted.org/packages/a2/cf/c4b02b3856fdc7e5a3bd42cfc8de9f43c32497c29b2f3f123f6f307ebf64/miceforest-5.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.5.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1767dd1b91c2893f67b137e7bb19eb4c3830c3b86f4c1cc3dcb4201a7da80ccd",
          "md5": "e9d2ccb2fe0b00e1ba11624d65743b6c",
          "sha256": "531b701af66b0e6aa8113e8d6c368f47bcbdbd9d8cb636f89a5ba906a8f925f8"
        },
        "downloads": -1,
        "filename": "miceforest-5.5.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e9d2ccb2fe0b00e1ba11624d65743b6c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 49494,
        "upload_time": "2022-07-15T21:36:34",
        "upload_time_iso_8601": "2022-07-15T21:36:34.779142Z",
        "url": "https://files.pythonhosted.org/packages/17/67/dd1b91c2893f67b137e7bb19eb4c3830c3b86f4c1cc3dcb4201a7da80ccd/miceforest-5.5.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27fc5420b57e49c3b07e625c9b7c9e47c95833e2dc4edbe9ffb0f86976f60271",
          "md5": "0154056f5c2ec4fad055d2b41139ca1b",
          "sha256": "9f4078f781a6b38215e36fb209ba2cdfcc7518af742dfe6c693c5697d97aa1be"
        },
        "downloads": -1,
        "filename": "miceforest-5.5.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0154056f5c2ec4fad055d2b41139ca1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 68239,
        "upload_time": "2022-07-15T21:36:36",
        "upload_time_iso_8601": "2022-07-15T21:36:36.909691Z",
        "url": "https://files.pythonhosted.org/packages/27/fc/5420b57e49c3b07e625c9b7c9e47c95833e2dc4edbe9ffb0f86976f60271/miceforest-5.5.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71c73369a03cf3078aea5e5e7feb6917958f3442c78046ed4d7bb405111c243e",
          "md5": "a6c8d7854e48563594fce2f5c66121d4",
          "sha256": "88c1846360f91f9b0fb7a592ae4e48dc913bac4412d6ba622ef269b08a08bbf4"
        },
        "downloads": -1,
        "filename": "miceforest-5.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6c8d7854e48563594fce2f5c66121d4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 57719,
        "upload_time": "2022-07-29T19:28:10",
        "upload_time_iso_8601": "2022-07-29T19:28:10.118457Z",
        "url": "https://files.pythonhosted.org/packages/71/c7/3369a03cf3078aea5e5e7feb6917958f3442c78046ed4d7bb405111c243e/miceforest-5.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "200f1da5aa3696b2e243a0f08440fba7823051f6f3c8f715581c8b8a57ef84ca",
          "md5": "7cb7c0a1e159908a78701043d63e92e5",
          "sha256": "a9d1b2546fb80ab03ce8a3d2492b67ee39b8af033f1b688b6785261da471d4e6"
        },
        "downloads": -1,
        "filename": "miceforest-5.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7cb7c0a1e159908a78701043d63e92e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 74925,
        "upload_time": "2022-07-29T19:28:12",
        "upload_time_iso_8601": "2022-07-29T19:28:12.111895Z",
        "url": "https://files.pythonhosted.org/packages/20/0f/1da5aa3696b2e243a0f08440fba7823051f6f3c8f715581c8b8a57ef84ca/miceforest-5.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3759facbf45ed2f7d85d2dd34bfb8c4e4610166e030636ddaf02ff10b2531c4",
          "md5": "19207685ade9ea991838ce848dcc5c90",
          "sha256": "f92d4130cc3ef24c6b79a16c57d6e1bf592331eeab7eda549784c3802357b3e0"
        },
        "downloads": -1,
        "filename": "miceforest-5.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "19207685ade9ea991838ce848dcc5c90",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 57825,
        "upload_time": "2022-08-07T21:30:55",
        "upload_time_iso_8601": "2022-08-07T21:30:55.381489Z",
        "url": "https://files.pythonhosted.org/packages/b3/75/9facbf45ed2f7d85d2dd34bfb8c4e4610166e030636ddaf02ff10b2531c4/miceforest-5.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e2990ec6327b714261206e6bdc07b4509687f7d95b2c59acb0cac0dd2d615fb",
          "md5": "568e92c8ac65f30c1d9013247fd27b28",
          "sha256": "f4d398d738b2eb09ce60ac358341d3fa7fabaa0d92c8db40d64e9391c56265eb"
        },
        "downloads": -1,
        "filename": "miceforest-5.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "568e92c8ac65f30c1d9013247fd27b28",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 75026,
        "upload_time": "2022-08-07T21:30:57",
        "upload_time_iso_8601": "2022-08-07T21:30:57.879151Z",
        "url": "https://files.pythonhosted.org/packages/8e/29/90ec6327b714261206e6bdc07b4509687f7d95b2c59acb0cac0dd2d615fb/miceforest-5.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1572ba16bde67a11f9b2176d4cba038f284b325293d40f5ab569df11d8f9ed1c",
          "md5": "26de054be00930d96f07833efd4f96cd",
          "sha256": "71b21ed58120fee6d6138b8cf371dfb65ab82084985077e7b31aae012cc0368a"
        },
        "downloads": -1,
        "filename": "miceforest-5.6.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "26de054be00930d96f07833efd4f96cd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 57888,
        "upload_time": "2022-08-13T21:50:29",
        "upload_time_iso_8601": "2022-08-13T21:50:29.380344Z",
        "url": "https://files.pythonhosted.org/packages/15/72/ba16bde67a11f9b2176d4cba038f284b325293d40f5ab569df11d8f9ed1c/miceforest-5.6.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "224759218eda39acdc2b1648770fbd07af5a4239a7ed29d73c2247e9fcda8f51",
          "md5": "ead90e6c107d5b5d8e68f744fb0e9224",
          "sha256": "a81a03e69d97273a77d83b0a14c61ce33578d2704d9f86f40102f54e1b8540dc"
        },
        "downloads": -1,
        "filename": "miceforest-5.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ead90e6c107d5b5d8e68f744fb0e9224",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 75081,
        "upload_time": "2022-08-13T21:50:32",
        "upload_time_iso_8601": "2022-08-13T21:50:32.050351Z",
        "url": "https://files.pythonhosted.org/packages/22/47/59218eda39acdc2b1648770fbd07af5a4239a7ed29d73c2247e9fcda8f51/miceforest-5.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.6.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e8e9681b7fce15af57c3b6270c125fcc7e684c2b5b6ec79b26284377d1d827b",
          "md5": "8833c26ed2f1624522267ee7354d07fd",
          "sha256": "79f6651cb91d0267f137eb836f62a77757436f745deda9c42e256de753bcb144"
        },
        "downloads": -1,
        "filename": "miceforest-5.6.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8833c26ed2f1624522267ee7354d07fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 57958,
        "upload_time": "2022-12-12T15:12:32",
        "upload_time_iso_8601": "2022-12-12T15:12:32.232952Z",
        "url": "https://files.pythonhosted.org/packages/6e/8e/9681b7fce15af57c3b6270c125fcc7e684c2b5b6ec79b26284377d1d827b/miceforest-5.6.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c0d1a43022fa4f4c07b346004dc8f9395e51561907ed6575c6f7c3aa2ba6c1f",
          "md5": "1a4fd9a37c53ce410961d3b53f32d00b",
          "sha256": "35b32a30a4b3cba1cf1de2f852e415220c88419e28cd75c73bb3b5364caff3c7"
        },
        "downloads": -1,
        "filename": "miceforest-5.6.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1a4fd9a37c53ce410961d3b53f32d00b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 75213,
        "upload_time": "2022-12-12T15:12:34",
        "upload_time_iso_8601": "2022-12-12T15:12:34.480345Z",
        "url": "https://files.pythonhosted.org/packages/6c/0d/1a43022fa4f4c07b346004dc8f9395e51561907ed6575c6f7c3aa2ba6c1f/miceforest-5.6.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6e8e9681b7fce15af57c3b6270c125fcc7e684c2b5b6ec79b26284377d1d827b",
        "md5": "8833c26ed2f1624522267ee7354d07fd",
        "sha256": "79f6651cb91d0267f137eb836f62a77757436f745deda9c42e256de753bcb144"
      },
      "downloads": -1,
      "filename": "miceforest-5.6.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8833c26ed2f1624522267ee7354d07fd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 57958,
      "upload_time": "2022-12-12T15:12:32",
      "upload_time_iso_8601": "2022-12-12T15:12:32.232952Z",
      "url": "https://files.pythonhosted.org/packages/6e/8e/9681b7fce15af57c3b6270c125fcc7e684c2b5b6ec79b26284377d1d827b/miceforest-5.6.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c0d1a43022fa4f4c07b346004dc8f9395e51561907ed6575c6f7c3aa2ba6c1f",
        "md5": "1a4fd9a37c53ce410961d3b53f32d00b",
        "sha256": "35b32a30a4b3cba1cf1de2f852e415220c88419e28cd75c73bb3b5364caff3c7"
      },
      "downloads": -1,
      "filename": "miceforest-5.6.3.tar.gz",
      "has_sig": false,
      "md5_digest": "1a4fd9a37c53ce410961d3b53f32d00b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 75213,
      "upload_time": "2022-12-12T15:12:34",
      "upload_time_iso_8601": "2022-12-12T15:12:34.480345Z",
      "url": "https://files.pythonhosted.org/packages/6c/0d/1a43022fa4f4c07b346004dc8f9395e51561907ed6575c6f7c3aa2ba6c1f/miceforest-5.6.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}