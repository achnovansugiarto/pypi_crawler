{
  "info": {
    "author": "Tobias Neitzel (@qtc_de)",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "### wconv\n\n----\n\n*wconv* is a simple command line utility that can be used to parse and convert\nWindows related formats into human readable forms. Additionally, it supports\nsimple modifications on Windows related formats.\n\n![](https://github.com/qtc-de/wconv/workflows/master%20Python%20CI/badge.svg?branch=master)\n![](https://github.com/qtc-de/wconv/workflows/develop%20Python%20CI/badge.svg?branch=develop)\n![example-gif](https://github.com/qtc-de/wconv/raw/master/images/example.gif)\n\n\n### Table of Contents\n\n----\n\n- [Installation](#installation)\n- [Supported Operations](#supported-operations)\n  * [ACE Module](#ace-module) \n    + [From Integer](#from-integer)\n    + [From String](#from-string)\n    + [Toggle Permission](#toggle-permission)\n    + [Display ACE Flags](#display-ace-flags)\n    + [Display ACE Types](#display-ace-types)\n    + [Display ACE Permissions](#display-ace-permissions)\n    + [Trustees](#trustees)\n  * [SDDL Module](#sddl-module)\n    + [Parse SDDL](#parse-sddl)\n    + [Add Everyone](#add-everyone)\n    + [Add Anonymous](#add-anonymous)\n  * [SID Module](#sid-module)\n    + [From base64](#from-base64)\n    + [To base64](#to-base64)\n    + [From Raw](#from-raw)\n    + [Well Known](#well-known)\n  * [UAC Module](#uac-module)\n    + [Parse UAC](#parse-uac)\n    + [Toggle Flag](#toggle-flag)\n    + [Display Mappings](#display-mappings)\n- [Library Information](#library-information)\n- [Resources](#resources)\n\n\n### Installation\n\n----\n\n*wconv* can be build and installed as a *pip* package. The following\ncommand installs *wconv* for your current user profile:\n\n```console\n$ pip3 install wconv\n```\n\nYou can also build *wconv* from source and install it directly by using\nthe following commands:\n\n```console\n$ git clone https://github.com/qtc-de/wconv\n$ cd wconv\n$ pip3 install -r requirements.txt\n$ python3 setup.py sdist\n$ pip3 install dist/*\n```\n\nAdditionally, *wconv* ships a [bash-completion](./wconv/resources/bash_completion.d/wconv) script.\nThe completion script is installed automatically, but relies on the [completion-helpers](https://github.com/qtc-de/completion-helpers)\npackage. If *completion-helpers* is already installed, autocompletion for *wconv* should\nwork after installing the pip package. Otherwise, you may need to copy the completion\nscript manually:\n\n```console\n$ cp wconv/resources/bash_completion.d/wconv ~/.bash_completion.d\n```\n\n\n### Supported Operations\n\n----\n\n*wconv* is written as a *Python* library, but also contains a small reference implementation that\nuses the library functions to perform some useful operations. In the following some supported\noperations are demonstrated.\n\n```console\n$ wconv --help\nusage: wconv [-h] {ace,sddl,sid,uac} ...\n\nwconv is a command line utility that can be used to parse and convert certain Windows related representations into human readable formats. Currently the tool supports parsing and convetion of ACE, SDDL, SID and\nUAC values.\n\npositional arguments:\n  {ace,sddl,sid,uac}\n    ace               convert integer ace\n    sddl              convert sddl string into readable permissions\n    sid               convert Windows SecurityIdentifier formats\n    uac               convert integer UserAccountControl\n\noptional arguments:\n  -h, --help          show this help message and exit\n```\n\n\n#### ACE Module\n\n----\n\nThe *ACE module* supports operations to work with Windows *ACE* values. Its main purpose is to convert\n*ACE* values from binary or SDDL format into human readable form.\n\n```console\n$ wconv ace --help \nusage: wconv ace [-h] [--ace-flags] [--ace-types] [--ace-permissions] [--from-string] [--type PERMISSION-TYPE] [-t PERMISSION] [--trustees] [-v] [ACE-VALUE]\n\npositional arguments:\n  ACE-VALUE             integer ace value\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --ace-flags           show available ACE flags\n  --ace-types           show available ACE types\n  --ace-permissions     show permission definitions for requested type\n  --from-string         interpret ace value als ace-string (sddl format)\n  --type PERMISSION-TYPE\n                        permission type (defaul: file)\n  -t PERMISSION, --toggle PERMISSION\n                        toogles specified permission on the ace value\n  --trustees            display available trustees\n  -v, --verbose         verbose output\n```\n\n##### From Integer\n\nParses the given integer as an ACE. This is the default action and does not require an additional flag.\nThe ``--type`` parameter can again be used to change the displayed permission types.\n\n```console\n$ wconv ace 0x00050010\n[+] Numeric:\t0x00050010\n[+] Permissions:\t\n[+] \t\t+ DELETE\n[+] \t\t+ WRITE_DAC\n[+] \t\t+ WRITE_EXTENDED_ATTRIBUTES\n```\n\n##### From String\n\nParse ACE from string in SDDL format.\nThe ``--type`` parameter can again be used to change the displayed permission types.\n\n```console\n$ wconv ace --from-string '(A;OICINPFA;RPSDWD;;;BU)'\n[+] ACE Type:\tACCESS_ALLOWED\n[+] Trustee:\tUsers\n[+] Numeric:\t0x00050010\n[+] Permissions:\t\n[+] \t\t+ WRITE_EXTENDED_ATTRIBUTES\n[+] \t\t+ DELETE\n[+] \t\t+ WRITE_DAC\n```\n\n##### Toggle Permission\n\nToggle the specified permission on the ACE value:\n\n```console\n$ wconv ace 0x00050010 -t WP -t GA\n[+] Numeric:\t0x10050030\n[+] Permissions:\t\n[+] \t\t+ GENERIC_ALL\n[+] \t\t+ DELETE\n[+] \t\t+ WRITE_DAC\n[+] \t\t+ WRITE_EXTENDED_ATTRIBUTES\n[+] \t\t+ EXECUTE\n```\n\n##### Display ACE Flags\n\nDisplays a list of all available ACE flags:\n\n```console\n$ wconv ace --ace-flags\n[+] CI - CONTAINER_INHERIT\n[+] OI - OBJECT_INHERIT\n[+] NP - NO_PROPAGATE_INHERIT\n[+] IO - INHERIT_ONLY\n[+] ID - INHERITED\n[+] SA - SUCCESSFUL_ACCESS\n[+] FA - FAILED_ACCESS\n```\n\n##### Display ACE Types\n\nDisplays a list of all available ACE types:\n\n```console\n$ wconv ace --ace-types\n[+] A - ACCESS_ALLOWED\n[+] D - ACCESS_DENIED\n[+] OA - ACCESS_ALLOWED_OBJECT\n[+] OD - ACCESS_DENIED_OBJECT\n[+] AU - SYSTEM_AUDIT\n[+] AL - SYSTEM_ALARM\n[+] OU - SYSTEM_AUDIT_OBJECT\n[+] OL - SYSTEM_ALARM_OBJECT\n```\n\n##### Display ACE Permissions\n\nDisplays a list of all available ACE permissions:\n\n```console\n$ wconv ace --ace-permissions\n[+] 10000000 - GA - GENERIC_ALL\n[+] 20000000 - GX - GENERIC_EXECUTE\n[+] 40000000 - GW - GENERIC_WRITE\n[+] 80000000 - GR - GENERIC_READ\n[+] 00010000 - SD - DELETE\n[+] 00020000 - RC - READ_CONTROL\n[+] 00040000 - WD - WRITE_DAC\n[+] 00080000 - WO - WRITE_OWNER\n[+] 00000001 - CC - READ\n[+] 00000002 - DC - WRITE\n[+] 00000004 - LC - APPEND\n[+] 00000008 - SW - READ_EXTENDED_ATTRIBUTES\n[+] 00000010 - RP - WRITE_EXTENDED_ATTRIBUTES\n[+] 00000020 - WP - EXECUTE\n[+] 00000040 - DT - MEANINGLESS\n[+] 00000080 - LO - READ_ATTRIBUTES\n[+] 00000100 - CR - WRITE_ATTRIBUTES\n```\n\nThe default permission type is set to **file**, but can be changed using the ``--type`` parameter:\n\n```console\n$ wconv ace --ace-permissions --type service\n[+] 10000000 - GA - GENERIC_ALL\n[+] 20000000 - GX - GENERIC_EXECUTE\n[+] 40000000 - GW - GENERIC_WRITE\n[+] 80000000 - GR - GENERIC_READ\n[+] 00010000 - SD - DELETE\n[+] 00020000 - RC - READ_CONTROL\n[+] 00040000 - WD - WRITE_DAC\n[+] 00080000 - WO - WRITE_OWNER\n[+] 00000001 - CC - QUERY_CONFIG\n[+] 00000002 - DC - CHANGE_CONFIG\n[+] 00000004 - LC - QUERY_STATISTIC\n[+] 00000008 - SW - ENUM_DEPENDENCIES\n[+] 00000010 - RP - START\n[+] 00000020 - WP - STOP\n[+] 00000040 - DT - PAUSE\n[+] 00000080 - LO - INTERROGATE\n[+] 00000100 - CR - USER_DEFINIED\n```\n\n##### Trustees\n\nDisplay all available trustees:\n\n```console\n$ wconv ace --trustees \n[+] AN - Anonymous\n[+] AO - Account Operators\n[+] AU - Authenticated Users\n[+] BA - Administrators\n[+] BG - Guests\n[+] BO - Backup Operators\n[+] BU - Users\n[+] CA - Certificate Publishers\n[+] CD - Certificate Services DCOM Access\n[+] CG - Creator Group\n[+] CO - Creator Owner\n[+] DA - Domain Admins\n[+] DC - Domain Computers\n[+] DD - Domain Controllers\n[+] DG - Domain Guests\n[+] DU - Domain Users\n[+] EA - Enterprise Admins\n[+] ED - Enterprise Domain Controllers\n[+] RO - Enterprise Read-Only Domain Controllers\n[+] PA - Group Policy Admins\n[+] IU - Interactive Users\n[+] LA - Local Administrator\n[+] LG - Local Guest\n[+] LS - Local Service\n[+] SY - Local System\n[+] NU - Network\n[+] LW - Low Integrity\n[+] ME - Medium Integrity\n[+] HI - High Integrity\n[+] SI - System Integrity\n[+] NO - Network Configuration Operators\n[+] NS - Network Service\n[+] PO - Printer Operators\n[+] PS - Self\n[+] PU - Power Users\n[+] RS - RAS Servers\n[+] RD - Remote Desktop Users\n[+] RE - Replicator\n[+] RC - Restricted Code\n[+] RU - Pre-Win2k Compatibility Access\n[+] SA - Schema Administrators\n[+] SO - Server Operators\n[+] SU - Service\n[+] WD - Everyone\n[+] WR - Write restricted Code\n```\n\n\n#### SDDL Module\n\n----\n\nThe *SDDL module* supports operations to convert *SDDL strings* into human readable forms.\n\n```console\n$ wconv sddl --help\nusage: wconv sddl [-h] [--add-everyone] [--add-anonymous] [-t PERMISSION-TYPE] [-v] [SDDL-STRING]\n\npositional arguments:\n  SDDL-STRING           sddl string\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --add-everyone        add full permissions for everyone\n  --add-anonymous       add full permissions for anonymous\n  -t PERMISSION-TYPE, --type PERMISSION-TYPE\n                        permission type (file, directory, service, ...)\n  -v, --verbose         verbose output\n```\n\n##### Parse SDDL\n\nParses the given SDDL string. This is the default action and does not require additional arguments.\n\n```console\n$ wconv sddl 'O:BAG:SYD:PAI(D;OICI;FA;;;BA)(A;OICIIO;RPDTSDWD;;;CO)'\n[+] ACL Type:\tDACL\n[+] Owner:\tAdministrators\n[+] Group:\tLocal System\n[+] ACE List:\n[+] ==================================\n[+]     ACE Type:\tACCESS_DENIED\n[+]     Trustee:\tAdministrators\n[+]     Numeric:\t0x000f01ff\n[+]     Permissions:\t\n[+]     \t\t+ READ_CONTROL\n[+]     \t\t+ DELETE\n[+]     \t\t+ WRITE_DAC\n[+]     \t\t+ WRITE_OWNER\n[+]     \t\t+ SYNCHRONIZE\n[+]     \t\t+ READ\n[+]     \t\t+ WRITE\n[+]     \t\t+ APPEND\n[+]     \t\t+ READ_EXTENDED_ATTRIBUTES\n[+]     \t\t+ WRITE_EXTENDED_ATTRIBUTES\n[+]     \t\t+ EXECUTE\n[+]     \t\t+ MEANINGLESS\n[+]     \t\t+ READ_ATTRIBUTES\n[+]     \t\t+ WRITE_ATTRIBUTES\n[+] ==================================\n[+]     ACE Type:\tACCESS_ALLOWED\n[+]     Trustee:\tCreator Owner\n[+]     Numeric:\t0x00050050\n[+]     Permissions:\t\n[+]     \t\t+ WRITE_EXTENDED_ATTRIBUTES\n[+]     \t\t+ MEANINGLESS\n[+]     \t\t+ DELETE\n[+]     \t\t+ WRITE_DAC\n[+] ==================================\n```\n\nThe default permission type is **file** and can be changed with the ``--type`` parameter:\n\n```console\n$ wconv sddl 'O:BAG:SYD:PAI(D;OICI;FA;;;BA)(A;OICIIO;RPDTSDWD;;;CO)' --type service\n[+] ACL Type:\tDACL\n[+] Owner:\tAdministrators\n[+] Group:\tLocal System\n[+] ACE List:\n[+] ==================================\n[+]     ACE Type:\tACCESS_DENIED\n[+]     Trustee:\tAdministrators\n[+]     Numeric:\t0x000f01ff\n[+]     Permissions:\t\n[+]     \t\t+ READ_CONTROL\n[+]     \t\t+ DELETE\n[+]     \t\t+ WRITE_DAC\n[+]     \t\t+ WRITE_OWNER\n[+]     \t\t+ SYNCHRONIZE\n[+]     \t\t+ READ\n[+]     \t\t+ WRITE\n[+]     \t\t+ APPEND\n[+]     \t\t+ READ_EXTENDED_ATTRIBUTES\n[+]     \t\t+ WRITE_EXTENDED_ATTRIBUTES\n[+]     \t\t+ EXECUTE\n[+]     \t\t+ MEANINGLESS\n[+]     \t\t+ READ_ATTRIBUTES\n[+]     \t\t+ WRITE_ATTRIBUTES\n[+] ==================================\n[+]     ACE Type:\tACCESS_ALLOWED\n[+]     Trustee:\tCreator Owner\n[+]     Numeric:\t0x00050050\n[+]     Permissions:\t\n[+]     \t\t+ START\n[+]     \t\t+ PAUSE\n[+]     \t\t+ DELETE\n[+]     \t\t+ WRITE_DAC\n[+] ==================================\n```\n\n##### Add Everyone\n\nAdd full access for everyone to the specified SDDL:\n\n```console\n$ wconv sddl --add-everyone 'O:BAG:SYD:PAI(D;OICI;FA;;;BA)(A;OICIIO;RPDTSDWD;;;CO)' \n[+] O:BAG:SYD:PAI(D;OICI;FA;;;BA)(A;OICIIO;RPDTSDWD;;;CO)(A;;GAGRGWGXRCSDWDWOSSCCDCLCSWRPWPDTLOCR;;;WD)\n```\n\n##### Add Anonymous\n\nAdd full access for anonymous to the specified SDDL:\n\n```console\n$ wconv sddl --add-anonymous 'O:BAG:SYD:PAI(D;OICI;FA;;;BA)(A;OICIIO;RPDTSDWD;;;CO)' \n[+] O:BAG:SYD:PAI(D;OICI;FA;;;BA)(A;OICIIO;RPDTSDWD;;;CO)(A;;GAGRGWGXRCSDWDWOSSCCDCLCSWRPWPDTLOCR;;;AN)\n```\n\n\n#### SID Module\n\n----\n\nThe *SID module* can be used to convert between different representations of Windows *SecurityIdentifiers*.\nOne use case is querying *Active Directory* via *LDAP*, where the *objectSID* attributes are stored as\nbase64 encoded binary blobs.\n\n```console\n$ wconv sid --help\nusage: wconv sid [-h] [--to-b64] [--raw] [--well-known] [SID-VALUE]\n\npositional arguments:\n  SID-VALUE     sid value (default format: base64)\n\noptional arguments:\n  -h, --help    show this help message and exit\n  --to-b64      converts formatted sid to base64\n  --raw         specify sid as raw hex string\n  --well-known  display list of well known sids\n```\n\n##### From Base64\n\nConverts a SID from base64 format to its human readable form. This is the default action\nand does not require any flags:\n\n```console\n$ wconv sid AQUAAAAAAAUVAAAAsexT/iL5hu1Kf3avAAIAAA==\n[+] SID: S-1-5-21-4266912945-3985045794-2943778634-512 (DOMAIN_ADMINS)\n```\n\n##### To Base64\n\nConverts a SID from its human readable form to base64:\n\n```console\n$ wconv sid --to-b64 S-1-5-21-4266912945-3985045794-2943778634-512\n[+] AQUAAAAAAAUVAAAAsexT/iL5hu1Kf3avAAIAAA==\n```\n\n##### From Raw\n\nConverts a SID from raw hex representation to its human readable format:\n\n```console\n$ echo -n \"AQUAAAAAAAUVAAAAsexT/iL5hu1Kf3avAAIAAA==\" | base64 -d | xxd -p\n010500000000000515000000b1ec53fe22f986ed4a7f76af00020000\n$ wconv sid --raw 010500000000000515000000b1ec53fe22f986ed4a7f76af00020000\n[+] SID: S-1-5-21-4266912945-3985045794-2943778634-512 (DOMAIN_ADMINS)\n```\n\n##### Well Known\n\nDisplay list of well known SIDs:\n\n```console\n$ wconv sid --well-known \n[+] S-1-0-0                   - NULL\n[+] S-1-1-0                   - EVERYONE\n[+] S-1-2-0                   - LOCAL\n[+] S-1-2-1                   - CONSOLE_LOGON\n[+] S-1-3-0                   - CREATOR_OWNER\n[+] S-1-3-1                   - CREATOR_GROUP\n[+] S-1-3-2                   - OWNER_SERVER\n[+] S-1-3-3                   - GROUP_SERVER\n[+] S-1-3-4                   - OWNER_RIGHTS\n[+] S-1-5                     - NT_AUTHORITY\n[...]\n```\n\n\n#### UAC Module\n\n----\n\nThe *UAC module* can parse integer *UserAccountControl* values from *ActiveDirectory*\ninto a human readable format. You can also toggle specific *UAC Flags* and output\nthe corresponding integer representation again.\n\n```console\n$ wconv uac --help\nusage: wconv uac [-h] [--mapping] [-t FLAG] [UAC-VALUE]\n\npositional arguments:\n  UAC-VALUE             binary user account control\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --mapping             display UserAccountControl mappings\n  -t FLAG, --toggle FLAG\n                        toogles specified flag on the UserAccountControl value\n```\n\n##### Parse UAC\n\nParses a *UserAccountControl* value in its different components. This is the default\naction and does not require additional arguments:\n\n```console\n$ wconv uac 1114624\n[+] UserAccountControl:\t1114624 (0x00110200)\n[+]\t+ NORMAL_ACCOUNT\n[+]\t+ DONT_EXPIRE_PASSWORD\n[+]\t+ NOT_DELEGATED\n```\n\n##### Toggle Flag\n\nAdds the specified flag(s) to the UAC value:\n\n```console\n$ wconv uac 1114624 -t DONT_REQ_PREAUTH -t TRUSTED_FOR_DELEGATION \n[+] UserAccountControl:\t5833216 (0x00590200)\n[+]\t+ NORMAL_ACCOUNT\n[+]\t+ DONT_EXPIRE_PASSWORD\n[+]\t+ TRUSTED_FOR_DELEGATION\n[+]\t+ NOT_DELEGATED\n[+]\t+ DONT_REQ_PREAUTH\n```\n\n##### Display Mappings\n\nDisplay the integer to flag mappings:\n\n```console\n$ wconv uac --mapping\n[+] 0x00000001 - SCRIPT\n[+] 0x00000002 - ACCOUNTDISABLE\n[+] 0x00000008 - HOMEDIR_REQUIRED\n[+] 0x00000010 - LOCKOUT\n[+] 0x00000020 - PASSWD_NOTREQD\n[+] 0x00000040 - PASSWD_CANT_CHANGE\n[+] 0x00000080 - ENCRYPTED_TEXT_PWD_ALLOWED\n[+] 0x00000100 - TEMP_DUPLICATE_ACCOUNT\n[+] 0x00000200 - NORMAL_ACCOUNT\n[+] 0x00000800 - INTERDOMAIN_TRUST_ACCOUNT\n[+] 0x00001000 - WORKSTATION_TRUST_ACCOUNT\n[+] 0x00002000 - SERVER_TRUST_ACCOUNT\n[+] 0x00010000 - DONT_EXPIRE_PASSWORD\n[+] 0x00020000 - MNS_LOGON_ACCOUNT\n[+] 0x00040000 - SMARTCARD_REQUIRED\n[+] 0x00080000 - TRUSTED_FOR_DELEGATION\n[+] 0x00100000 - NOT_DELEGATED\n[+] 0x00200000 - USE_DES_KEY_ONLY\n[+] 0x00400000 - DONT_REQ_PREAUTH\n[+] 0x00800000 - PASSWORD_EXPIRED\n[+] 0x01000000 - TRUSTED_TO_AUTH_FOR_DELEGATION\n[+] 0x04000000 - PARTIAL_SECRETS_ACCOUNT\n```\n\n\n### Library Information\n\n----\n\nPlease notice that the *wconv* library is not really well thought out. A good term to describe it\nis *quick and dirty*, as I required the functionality of *wconv* and decided to write the functions\nin a reusable way. However, everything was written on the fly and many sections could be written\nbetter and may contain bugs. Pull requests to improve the library are always welcome :)\n\n\n### Resources\n\n----\n\nHere is a list of some resources that contain the required information about the different supported\nWindows structures.\n\n* [The Security Descriptor Definition Language of Love (Part 1)](https://techcommunity.microsoft.com/t5/ask-the-directory-services-team/the-security-descriptor-definition-language-of-love-part-1/ba-p/395202)\n* [The Security Descriptor Definition Language of Love (Part 2)](https://techcommunity.microsoft.com/t5/ask-the-directory-services-team/the-security-descriptor-definition-language-of-love-part-2/ba-p/395258)\n* [Understanding Windows File And Registry Permissions](https://docs.microsoft.com/en-us/archive/msdn-magazine/2008/november/access-control-understanding-windows-file-and-registry-permissions)\n* [How do I convert a SID between binary and string forms](https://devblogs.microsoft.com/oldnewthing/20040315-00/?p=40253)\n* [How to use the UserAccountControl flags](https://support.microsoft.com/en-us/help/305144/how-to-use-useraccountcontrol-to-manipulate-user-account-properties)\n* [sddl.py](https://github.com/tojo2k/pysddl/blob/master/sddl.py/sddl.py)\n\n*Copyright 2020, Tobias Neitzel and the wconv contributors.*\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/qtc-de/wconv",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wconv",
    "package_url": "https://pypi.org/project/wconv/",
    "platform": null,
    "project_url": "https://pypi.org/project/wconv/",
    "project_urls": {
      "Homepage": "https://github.com/qtc-de/wconv"
    },
    "release_url": "https://pypi.org/project/wconv/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "wconv - Converting Windows native formats to human readable form",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13941212,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb30e2a59a418da4ff29f9b7e213d10763ddbe5b5a091744a1a6a3b1e7e25443",
          "md5": "82fca5f588f5bc7efb268af40c77317f",
          "sha256": "ae86f2ce15e79d6a15ed18eeb7a850a234f0587dbbc4986411aa2bd0dba50c09"
        },
        "downloads": -1,
        "filename": "wconv-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "82fca5f588f5bc7efb268af40c77317f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28035,
        "upload_time": "2020-08-05T16:59:20",
        "upload_time_iso_8601": "2020-08-05T16:59:20.613995Z",
        "url": "https://files.pythonhosted.org/packages/bb/30/e2a59a418da4ff29f9b7e213d10763ddbe5b5a091744a1a6a3b1e7e25443/wconv-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7fd0e3788af54e57941b856c1beed3db3519399b208fa90917caee9d0fae2a1d",
          "md5": "93e5cc461b1417479777f171d51a1487",
          "sha256": "2497831b3e13c00ee04b69a60f2952359bd82762b486c83fcfab6c419db03fc9"
        },
        "downloads": -1,
        "filename": "wconv-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "93e5cc461b1417479777f171d51a1487",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26157,
        "upload_time": "2020-08-08T04:34:01",
        "upload_time_iso_8601": "2020-08-08T04:34:01.173190Z",
        "url": "https://files.pythonhosted.org/packages/7f/d0/e3788af54e57941b856c1beed3db3519399b208fa90917caee9d0fae2a1d/wconv-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a4968d827ebbfa2b59911240d9bc6379b05af08d9a0bef4fcce881858a1151a",
          "md5": "01aeeff5fd8c4d9ad92dc740c636bd7c",
          "sha256": "4adea0c8c876167fff239e841eedcee18c19b5ebe86e5c6c104438a817053c3f"
        },
        "downloads": -1,
        "filename": "wconv-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "01aeeff5fd8c4d9ad92dc740c636bd7c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36795,
        "upload_time": "2022-05-26T05:03:44",
        "upload_time_iso_8601": "2022-05-26T05:03:44.734360Z",
        "url": "https://files.pythonhosted.org/packages/8a/49/68d827ebbfa2b59911240d9bc6379b05af08d9a0bef4fcce881858a1151a/wconv-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a4968d827ebbfa2b59911240d9bc6379b05af08d9a0bef4fcce881858a1151a",
        "md5": "01aeeff5fd8c4d9ad92dc740c636bd7c",
        "sha256": "4adea0c8c876167fff239e841eedcee18c19b5ebe86e5c6c104438a817053c3f"
      },
      "downloads": -1,
      "filename": "wconv-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "01aeeff5fd8c4d9ad92dc740c636bd7c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 36795,
      "upload_time": "2022-05-26T05:03:44",
      "upload_time_iso_8601": "2022-05-26T05:03:44.734360Z",
      "url": "https://files.pythonhosted.org/packages/8a/49/68d827ebbfa2b59911240d9bc6379b05af08d9a0bef4fcce881858a1151a/wconv-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}