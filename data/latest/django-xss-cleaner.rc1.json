{
  "info": {
    "author": "shaowenchen",
    "author_email": "email@chenshaowen.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "==================\ndjango-xss-cleaner\n==================\n\ndjango-xss-cleaner 是一个基于 bleach 的 django XSSFilter 工具，实现了对 GET 和 POST 请求参数的 XSS 白名单过滤功能。包中内置了部分白名单 HTML 标签、属性设置，同时也支持自定义扩展。\n\n\nsettings.py 安装和配置说明\n-----------------------------\n\n1. 安装中间件\n\n   添加中间件 \"xss_cleaner.middlewares.CleanXssMiddleware\" 到 settings 中\n\n  ::\n\n    MIDDLEWARE_CLASSES = (\n       'xss_cleaner.middlewares.CleanXssMiddleware',\n       ...\n    )\n\n  建议将 CleanXssMiddleware 尽量的靠前放置，最好是第一个。这是为了保证后端获取的数据都通过了 XSS 过滤，避免 XSS 向量被注入。\n\n\n2. [可选]配置Clean XSS级别\n\n  默认配置为 'HIGHT'，可选参数：['LOW', 'HIGH']\n\n  ::\n\n    XSS_LEVEL = 'HIGH'\n\n  如果设置为 ‘HIGHT’ ，允许的标签和属性为\n  ::\n\n    {\n        'tags': ['a', 'img', 'strong', 'p', 'div', 'span', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'table', 'ul', 'ol', 'tr', 'th', 'td', 'li'],\n        'attributes': {'a': ['href', 'title', 'target'], 'img': ['width', 'height', 'src']},\n        'styles': [],\n        'strip': False,\n        'strip_comments': False\n    }\n\n  如果设置为 'LOW' ，允许的标签和属性为\n  ::\n\n    {\n        'tags': ['a', 'img', 'br', 'strong', 'b', 'code', 'pre', 'p', 'div', 'em', 'span', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'table', 'ul', 'ol', 'tr', 'th', 'td', 'hr', 'li', 'u'],\n        'attributes': {'a': ['href', 'title', 'target'], 'img': ['width', 'height', 'src', 'alt'],\n                  '*': ['class', 'style']},\n        'styles': [],\n        'strip': False,\n        'strip_comments': False\n    }\n\n  参数的含义，在下面会有介绍。\n\n3. [可选]自定义新增白名单\n\n  增量式添加新的标签和属性到白名单。\n  ::\n\n    BLEACH_WHITE_LIST = {\n        'tags': [],\n        'attributes': {},\n        'styles': [],\n        'strip': False,\n        'strip_comments': False\n    }\n\n  参数说明：\n\n  -  tags (list)  – 允许的标签，不在白名单的标签被转义\n  -  attributes (dict)  – 允许的属性，不在白名单的属性被删除\n  -  styles (list) – 允许的样式，不在白名单的样式被删除\n  -  strip (bool) – 是否剔除转义后的字符\n  -  strip_comments (bool) – 是否剔除 HTML comments\n\n\n  BLEACH_WHITE_LIST 中的标签、属性、样式，将会以增量的形式增加在 Clean XSS 级别允许的白名单上。如果设置了 strip、strip_comments ，将覆盖默认设置。\n\n4. [可选]是否打印或记录转义\n\n  为了方便调试，记录 XSS Filter 的信息，提供一个开关:\n\n    ::\n\n       BLEACH_SHOW = True\n\n  默认值为 True，可选值为 [True ，False]\n\n  如果是本地开发，转换日志将直接 print 在 Console。如果是线上，将打印为 warning  日志。\n\n\nxss_cleaner 豁免装饰器\n------------------------\n\nxss_cleaner 包提供了两个装饰器，用于豁免 XSS Filter 处理。\n\n- escape_clean，提供 View 级别的豁免。\n\n  ::\n\n    from cleanxss.decorators import escape_clean\n     @escape_clean\n     def home(request):\n        pass\n\n- escape_clean_param，提供参数级别的豁免。\n\n  ::\n\n    from cleanxss.decorators import escape_clean_param\n     @escape_clean_param('param1', 'param2')\n     def home(request):\n        pass\n\n\n\n\nxss_cleaner 处理示例\n-----------------------\n\n下面使用的是默认配置： XSS_LEVEL= ‘HIGH'\n\n\n ::\n\n    转义非白名单标签\n    XSS Clean: Transfer  <b><i>an example</i></b>  To  &lt;b&gt;&lt;i&gt;an example&lt;/i&gt;&lt;/b&gt;\n\n     删除非白名单样式\n    XSS Clean: Transfer  <p class=\"foo\" style=\"color: red; font-weight: bold;\">blah blah blah</p>  To  <p>blah blah blah</p>\n\n     删除非白名单属性\n    XSS Clean: Transfer  <img click=\"de\"  alt=\"an example\" width=500>  To  <img width=\"500\">\n\n     自动补全，规范化 HTML\n    XSS Clean: Transfer  <a href=http://abc.com>my text; a b b  To  <a href=\"http://abc.com\">my text; a b b</a>\n\n\n下面使用的是默认配置： XSS_LEVEL= LOW'\n\n  ::\n\n    转义非白名单标签\n    XSS Clean: Transfer  <b><i>an example</i></b>  To  <b>&lt;i&gt;an example&lt;/i&gt;</b>\n\n    删除非白名单样式\n    XSS Clean: Transfer  <p class=\"foo\" style=\"color: red; font-weight: bold;\">blah blah blah</p>  To  <p class=\"foo\" style=\"\">blah blah blah</p>\n\n    删除非白名单属性\n    XSS Clean: Transfer  <img click=\"de\"  alt=\"an example\" width=500>  To  <img alt=\"an example\" width=\"500\">\n\n    自动补全，规范化 HTML\n    XSS Clean: Transfer  <a href=http://abc.com>my text; a b b  To  <a href=\"http://abc.com\">my text; a b b</a>\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.org/simple/",
    "keywords": "xss",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-xss-cleaner",
    "package_url": "https://pypi.org/project/django-xss-cleaner/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-xss-cleaner/",
    "project_urls": {
      "Homepage": "https://pypi.org/simple/"
    },
    "release_url": "https://pypi.org/project/django-xss-cleaner/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "clean xss",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5351635,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c712629dbe70a9ad0ed02203949ca65f4a52228d8a48bbcedfd670614e85517",
          "md5": "fd317cead69c369328b1b34023f92f8f",
          "sha256": "ab6f82cc7f03e5db3934a3cee3c9a39fd1c9ffd983244a61422f5ad37f7d4cac"
        },
        "downloads": -1,
        "filename": "django-xss-cleaner-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fd317cead69c369328b1b34023f92f8f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6759,
        "upload_time": "2019-06-03T09:28:20",
        "upload_time_iso_8601": "2019-06-03T09:28:20.746782Z",
        "url": "https://files.pythonhosted.org/packages/1c/71/2629dbe70a9ad0ed02203949ca65f4a52228d8a48bbcedfd670614e85517/django-xss-cleaner-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1c712629dbe70a9ad0ed02203949ca65f4a52228d8a48bbcedfd670614e85517",
        "md5": "fd317cead69c369328b1b34023f92f8f",
        "sha256": "ab6f82cc7f03e5db3934a3cee3c9a39fd1c9ffd983244a61422f5ad37f7d4cac"
      },
      "downloads": -1,
      "filename": "django-xss-cleaner-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fd317cead69c369328b1b34023f92f8f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6759,
      "upload_time": "2019-06-03T09:28:20",
      "upload_time_iso_8601": "2019-06-03T09:28:20.746782Z",
      "url": "https://files.pythonhosted.org/packages/1c/71/2629dbe70a9ad0ed02203949ca65f4a52228d8a48bbcedfd670614e85517/django-xss-cleaner-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}