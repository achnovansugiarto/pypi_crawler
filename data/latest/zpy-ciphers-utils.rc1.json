{
  "info": {
    "author": "Noé Cruz | linkedin.com/in/zurckz/",
    "author_email": "zurckz.services@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<p align=\"center\">\n  <a  href=\"https://github.com/NoeCruzMW/zpy-flask-msc-docs\"><img width=\"150\" src=\"https://lh3.googleusercontent.com/a-/AOh14GjLO5qYYR5nQl5hgavUKz4Dv3LVzWDvGtV4xNam=s600-k-no-rp-mo\" alt=\"Zurck'z\"></a>\n</p>\n<p align=\"center\">\n    <em>ZCrypto Wrapper</em>\n</p>\n<p align=\"center\"></p>\n\n---\n\n# ZPy Database Core\n\n> Zurck'z Py\n\nThis package contains some helpers features for encrypt data .\n\nZPy use the following packages:\n\n- pycrypto\n\n\n## Requirements\n\n- Python 3.6+\n\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install py flask micro service core .\n\n```bash\npip install zpy\npip install package_directory directory_to_install\n```\n\n## Features\n\nContains some helper features with specific integrations.\n\n- Database\n    - Only MySQL implementation\n        - Functions executor\n        - Stored Procedures executor\n        - Autocommit is false by default\n- Utils\n    - funcs\n\n## Roadmap\n\n- ActiveRecord implementation\n- Cluster\n\n## Basic Usage\n\nBasic Configuration\n\n````python\n\nconfig = {\n    \"user\": \"\",\n    \"password\": \"\",\n    \"database\": \"\",\n    \"host\": \"\",\n    \"port\": 3306\n}\n````\n\nWith single datasource\n\n```python\n# Create database mediator with single datasource\ndb_manager = ZMediator.single(config, True)\n# Open connection\ndb_conn = db_manager.default().new_connect()\ntry:\n    # Execute function\n    res = db_manager.default().exec(\"FN_GET_USER_BY_ID(%d)\", list_params=[1], ret_type=DBTypes.cursor)\n    print(res)\nexcept Exception as e:\n    logging.exception(e)\nfinally:\n    # ⚠ Remember close opened connection\n    db_conn.close()\n```\n\nMultiple Datasources\n\n```python\n# Define db mediator \n# Setup base configuration in ZMediator()\n# The base configuration will be overwritten by add common values \ndb_mngr = ZMediator(config, False)\n.add_common(\"DB_NAME_1\", \"DB_USER\", \"DB_PASSWORD\", True)  # Mark default ds\n.add_common(\"DB_NAME_2\", \"DB_USER\", \"DB_PASSWORD\")\n.add_common(\"DB_NAME_3\", \"DB_USER\", \"DB_PASSWORD\")\n\ndb_conn1 = db_mngr.default().new_connect()\ndb_conn2 = db_mngr.get(\"DB_NAME_1\").new_connect()\ndb_conn3 = db_mngr.get(\"DB_NAME_3\").new_connect()\n\ntry:\n    # Execute function\n    res = db_mngr.default().exec(\"FN_GET_USER_BY_ID(%d)\", list_params=[1], ret_type=DBTypes.cursor)\n    print(res)\n    # Execute function\n    res = db_mngr.get(\"DB_NAME_2\").exec(\"FN_GET_USER_BY_ID(%d)\", list_params=[1], ret_type=DBTypes.cursor)\n    print(res)\n    # Call sp\n    res = db_mngr.get(\"DB_NAME_3\").call(\"SP_GET_DATA\", ret_type=DBTypes.cursor)\n    print(res)\nexcept Exception as e:\n    logging.exception(e)\nfinally:\n    # ⚠ Remember close opened connections\n    db_conn1.close()\n    db_conn2.close()\n    db_conn3.close()\n```\n\n## Contributing\n\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\n## License\n\n[MIT](https://choosealicense.com/licenses/mit/)\n\n## Authors\n\n[Noé Cruz](https://www.linkedin.com/in/zurckz/)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/NoeCruzMW",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zpy-ciphers-utils",
    "package_url": "https://pypi.org/project/zpy-ciphers-utils/",
    "platform": "",
    "project_url": "https://pypi.org/project/zpy-ciphers-utils/",
    "project_urls": {
      "Homepage": "https://github.com/NoeCruzMW"
    },
    "release_url": "https://pypi.org/project/zpy-ciphers-utils/0.0.1/",
    "requires_dist": [
      "zpy-api-core",
      "pycryptodome"
    ],
    "requires_python": ">=3.8",
    "summary": "Crypto wrappers",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12819651,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc424d6fbf5ae47d3da509ea50d49247cbfbb6f2b13a3073bb715dd6cb645b67",
          "md5": "4c74927dc6a9be8d491c0000d4e9882b",
          "sha256": "984b1a35a37899bb4eeb1427026344464489bbc5355355e3d6207248c2700e70"
        },
        "downloads": -1,
        "filename": "zpy_ciphers_utils-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c74927dc6a9be8d491c0000d4e9882b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 4000,
        "upload_time": "2022-02-07T23:18:34",
        "upload_time_iso_8601": "2022-02-07T23:18:34.445192Z",
        "url": "https://files.pythonhosted.org/packages/dc/42/4d6fbf5ae47d3da509ea50d49247cbfbb6f2b13a3073bb715dd6cb645b67/zpy_ciphers_utils-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f9f3d5b61fe96d75332f9524dee28df46ebcd61148301a1395e74cbcf58d83c",
          "md5": "dc8c5ba22c35cbffc6c5611bc1f65d2f",
          "sha256": "6609bfc1dbad1e38773367776e46e8467a531a0e1f6b9be5411fd6bee6abe4e2"
        },
        "downloads": -1,
        "filename": "zpy-ciphers-utils-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dc8c5ba22c35cbffc6c5611bc1f65d2f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 3836,
        "upload_time": "2022-02-07T23:18:36",
        "upload_time_iso_8601": "2022-02-07T23:18:36.239847Z",
        "url": "https://files.pythonhosted.org/packages/3f/9f/3d5b61fe96d75332f9524dee28df46ebcd61148301a1395e74cbcf58d83c/zpy-ciphers-utils-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc424d6fbf5ae47d3da509ea50d49247cbfbb6f2b13a3073bb715dd6cb645b67",
        "md5": "4c74927dc6a9be8d491c0000d4e9882b",
        "sha256": "984b1a35a37899bb4eeb1427026344464489bbc5355355e3d6207248c2700e70"
      },
      "downloads": -1,
      "filename": "zpy_ciphers_utils-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4c74927dc6a9be8d491c0000d4e9882b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 4000,
      "upload_time": "2022-02-07T23:18:34",
      "upload_time_iso_8601": "2022-02-07T23:18:34.445192Z",
      "url": "https://files.pythonhosted.org/packages/dc/42/4d6fbf5ae47d3da509ea50d49247cbfbb6f2b13a3073bb715dd6cb645b67/zpy_ciphers_utils-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3f9f3d5b61fe96d75332f9524dee28df46ebcd61148301a1395e74cbcf58d83c",
        "md5": "dc8c5ba22c35cbffc6c5611bc1f65d2f",
        "sha256": "6609bfc1dbad1e38773367776e46e8467a531a0e1f6b9be5411fd6bee6abe4e2"
      },
      "downloads": -1,
      "filename": "zpy-ciphers-utils-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "dc8c5ba22c35cbffc6c5611bc1f65d2f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 3836,
      "upload_time": "2022-02-07T23:18:36",
      "upload_time_iso_8601": "2022-02-07T23:18:36.239847Z",
      "url": "https://files.pythonhosted.org/packages/3f/9f/3d5b61fe96d75332f9524dee28df46ebcd61148301a1395e74cbcf58d83c/zpy-ciphers-utils-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}