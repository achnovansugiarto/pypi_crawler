{
  "info": {
    "author": "The Anarcat",
    "author_email": "anarcat@debian.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: X11 Applications",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3",
      "Topic :: Communications :: File Sharing"
    ],
    "description": "# pubpaste - publish files and clipboard online easily\n\nThis tool makes it easy to publish files, clipboards, screenshots,\nand photo galleries online with a single command. It's somewhat messy\nbut it does its job well.\n\n`pubpaste` is not for novice users: it assumes you have access to an\nSSH server and know how to configure a YAML file. It has been written\nby and for its author in a fit of egoistical mania (unfortunately\ntypical for hackers), apologies normal humans out there reading this.\n\n- [Tutorial](#tutorial)\n- [How-to](#how-to)\n    - [Configuration](#configuration)\n    - [Screenshots](#screenshots)\n    - [Image galleries](#image-galleries)\n    - [Clipboard support](#clipboard-support)\n    - [Secret tokens](#secret-tokens)\n    - [History](#history)\n    - [Expiry](#expiry)\n    - [Shortcuts](#shortcuts)\n    - [Installation](#installation)\n- [Credits](#credits)\n    - [Changes from `publish`](#changes-from-publish)\n- [Contributing](#contributing)\n\n# Tutorial\n\nTo publish a file:\n\n    pubpaste foo.jpg\n\nThe file is then uploaded, with [rsync][], in a directory with a\nsecret name, which will generate a URL like this:\n\n    https://example.com/2020-04-20-oMz_C_6Njja_3VbW-f17LFiTAgNsnp22fqTwjQOgmF4/foo.jpg\n\n[rsync]: https://rsync.samba.org/\n\nThe published URL is available in the clipboard, <kbd>control-v</kbd>\nin another window to share the results. That URL should be safe from\nguessing as long as the server is properly configured.\n\nIf a filename is not provided, text is read from standard input and\nuploaded as a `stdin.txt` file. That name can be changed with the\n`--stdin-name` flag.\n\nYou can also upload the current *selection* with:\n\n    pubpaste --xselection\n\nYou **MUST** configure `pubpaste` before the above works, however. See\n[Configuration](#configuration) below.\n\n`pubpaste` supports many more ways of sharing content, see the\ndetailed how-to below for more information on screenshots, photo\ngalleries and more...\n\n# How-to\n\n## Configuration\n\n`pubpaste` requires manual configuration before it\nworks. Specifically, the `output` and `url_prefix` should be set in\nthe configuration. For example, this will tell `pubpaste` to rsync\nfiles to `shell.example.com`, in the `~/public_html` directory, and\nthat this directory is exposed as <https://example.com/~user>:\n\n    output: \"shell.example.com:public_html/\"\n    url_prefix: \"https://example.com/~user\"\n\nThis configuration must be stored in `~/.config/pubpaste.yml`. Other\nconfiguration file paths can be provided with the `--config`\ncommand-line argument or `pubpaste.yml` in the `$XDG_CONFIG_HOME`\ndirectory (which defaults to `~/.config`).\n\nAny parameter (like `follow_symlinks`) can be specified in the\nconfiguration file as well. The rule is that dashes (`-`) MUST be\nconverted to underscores (`_`).\n\nNote that the `output` directory should not have directory listings\nenabled, see the [Secret tokens](#secret-tokens) section for more\ninformation.\n\nSome settings are not visible in the usage because they are better\nsuited to be used in the configuration file. Here's a sample\nconfiguration file with all the settings not mentioned in the usage:\n\n    output: \"shell.example.com:public_html/\"\n    url_prefix: \"https://example.com/~user\"\n    base_dir: /home/user/public_html/\n    save_screenshots: ~/snaps/\n\nThey can still be used on the command-line, of course.\n\n## Screenshots\n\nTo publish a screenshot with [maim][], use:\n\n    pubpaste --screenshot\n\n[maim]: https://github.com/naelstrof/maim\n\nThis will:\n\n 1. start a terminal to show the maim timer\n 2. start maim to select a window, it will wait 3 seconds before\n    taking the screenshot\n 3. preview the screenshot using your favorite image view (with\n    [xdg-open(1)][])\n 4. ask for confirmation before uploading (with [xmessage(1)][])\n 5. then upload the file\n\nScreenshots therefore require a bit more configuration than other\nmechanisms. First install the dependencies:\n\n    apt install maim\n\nInstall *some* image viewer, for example this is the default image\nviewer that comes with GNOME:\n\n    apt install eog\n\n`xdg-open(1)` and `xmessage(1)` are very likely already installed on\nyour computer but if they aren't:\n\n    apt install x11-utils xdg-utils\n\n[xmessage(1)]: http://manpages.debian.org/xmessage\n[xdg-open(1)]: https://manpages.debian.org/xdg-open\n\nYou might not like the default `xdg-open(1)` picks when opening an\nimage. To change that, use:\n\n    xdg-mime default application mimetype(s)\n\nFor example, this will pick the [Eye Of GNOME][] image viewer:\n\n    xdg-mime default eog.desktop image/png\n\n[Eye Of GNOME]: https://wiki.gnome.org/Apps/EyeOfGnome/\n\nTo see which application is currently in use, see:\n\n    xdg-mime query default image/png\n\nBy default, screenshots are not kept locally. But they can be retained\nby setting the `save_screenshots` configuration to a directory, for\nexample this will keep all screenshots in `$HOME/snaps`:\n\n    save_screenshots: ~/snaps/\n\n## Image galleries\n\nBuild an image gallery with [Sigal][]:\n\n    pubpaste --sigal *.JPG\n\nThis will generate an image gallery in a temporary directory and\nupload it to the server as a whole. The gallery configuration is\ncurrently hard-coded, but could eventually be added to the\nconfiguration file.\n\n[Sigal]: http://sigal.saimon.org/\n\n## Clipboard support\n\nWhen doing any upload, the remote URL will be copied to the X\nclipboard (the \"CLIPBOARD\" selection) that you paste with\n<kbd>control-v</kbd>, or <kbd>control-shift-v</kbd> in a\nterminal. That is different from the X *selection*, which you paste\nwith the <kbd>middle mouse button</kbd>.\n\nNote that `pubpaste` *reads* from the X \"PRIMARY\" selection (the\nhighlighted text), when you use:\n\n    pubpaste --xselection\n\nThe idea behind this asymmetry is that we do not want the URL to\noverride the current selection. By copying the URL in to the\nclipboard instead of the selection, we keep the current selection\nactive. The clipboard is also more \"durable\" as it doesn't get change\nwhenever you select some text.\n\nYou can use the `--xclipboard` (`-C`) argument to upload the\n\"CLIPBOARD\" selection instead:\n\n    pubpaste --xclipboard\n\nDo note that this works with \"Copy image\" links. For example, say you\nhave an image in your web browser, you can right-click on it and pick\nthe \"Copy image\" link, then call `pubpaste` with `-x` and it will\nupload the image without having to first download the image as a file.\n\nThis is also useful to upload screenshots done within Firefox (in the\n\"...\" menu of the URL bar, \"Take screenshot\").\n\nImage support only works if GTK and its Python bindings are installed.\n\n## Secret tokens\n\n`pubpaste` publishes files under a specified root directory but with a\nunique token made of the current date (`YYYY-MM-DD`) and a random,\npresumably hard to guess, string. That token can be overridden with the\n`--token` (`-T`) flag. For example, if you do not worry about\nconfidentiality and actually *want* a meaningful name, you can upload\na file publicly with:\n\n    pubpaste --token my-new-bike bike.jpg\n\nOtherwise a properly secure token is generated. Note that directory\nlistings *must* be disabled for the secrecy to work: if you point\n`pubpaste` at a directory with directory listing enabled, all the\nsecrets will be *public* and the entire security of the system will\nfail.\n\nThis can be fixed simply by adding an empty `index.html` file into the\n`output` directory (if the web server is configured to serve those) or\nby disabling directory listing (`Options -Indexes` in Apache, for\nexample).\n\n## History\n\n`pubpaste` keeps an history of the things it has uploaded, in\n`~/.publish.history`. This allows you to cancel the last upload, for\nexample:\n\n    pubpaste --undo\n\n... or arbitrary uploads:\n\n    pubpaste -T TOKEN --undo\n\nSimilarly, you can republish over the previous upload with:\n\n    pubpaste --republish ...\n\nHistory can be displayed with the `show-history` command. The last\ntoken used is also accessible with the `last-token` command.\n\n## Expiry\n\nBy default, uploads never expire. You can add a \"TTL\" (Time To Live)\nfile with the `--ttl` argument which marks (in days) the time a paste\nshould be kept.\n\nOld entries can be purged by deploying `pubpaste` on the server side\nand running:\n\n    pubpaste --purge --base-dir=/home/user/public_html\n\n... where `/home/user/public_html` is the path provided in `output` on\nthe clients. That configuration will usually be store in the configuration\nfile, as such:\n\n    base_dir: \"/home/user/public_html\"\n\n## Shortcuts\n\nThe usage has all the details but if you use `pubpaste` from the\ncommand-line, you might like to use shortcuts for the commands. For\nexample, a screenshot is `pubpaste -S`. See `--help` for details.\n\n# Installation\n\nThis package is available on PyPI. It can be installed with `pip`:\n\n    pip install pubpaste\n\nIts requirements are minimal so you shouldn't need a [virtual\nenvironment][].\n\n[virtual environment]: https://docs.python.org/3/library/venv.html\n\n`pubpaste` can also be ran directly from the source directory:\n\n    ./pubpaste.py\n\nor symlinked in your `$PATH`:\n\n    ln -s $PWD/pubpaste.py /usr/local/bin/pubpaste\n\n# Known issues and limitations\n\nHas no unit tests, but has been refactored to make that possible\nlately.\n\nThe photo gallery and screenshot code is messy.\n\nWas written over a weekend and might be buggy.\n\nRestricted to elite hackers that have SSH or rsync access and their\nown web server. Could be improved by supporting things like S3,\n\"paste bins\" or other file sharing systems.\n\nIn particular, mis-configuration of the web server can easily be\ncatastrophic: if `Indexes` is enabled in the web server *and* the\nparent directory doesn't have an `index.html` to protect from leaks,\nthe secret tokens will be revealed and the secrecy of the system\ncompromised.\n\nSimilarly, secret tokens can easily leak if any peer that received it\nshare it by mistake or maliciously. Access revocation is impossible\nwithout renaming the token, which must be done by hand.\n\n# Credits\n\nThis project was inspired by the `publish` program originally written\nby Florian Reitmeir and Peter Palfrader. It was re-written in Python\nto make it easier to document, extend, and maintain.\n\nIt was renamed because we did not want to take over the `publish`\nnamespace out of respect for the existing one. It's also a little too\ngeneric for a project name.\n\n`pubpaste` seemed like a nice alternative and didn't seem in use\naccording to search engines (checked DuckDuckGo, Google, GitHub, and\nGitLab).\n\n`pub` refers to the inspiration for this project, the `publish` shell\nscript that influence the command-line design and implementation.\n\n`paste` refers to the clipboard support. therefore *pubpaste* means\n*publish this paste*, but it can of course do more than just publish\nthe clipboard.\n\n`pub` is also a reference to the real-world place that I dearly miss\nsince the start of the global pandemic that has everyone isolated and\nbars closed. *pub paste* therefore obliquely refers to the stickiness\nand smell of old pubs and bars, that strange smell of old yeast and\nalcohol mixed with bleach or strong cleaning product that lingers\nuntil you walk into a sound check the next day.\n\nThis is a message of hope: this will not go on forever and the\nmessiness of humanity will return humbled yet improved.\n\n## Changes from `publish`\n\nWhile `pubpaste` generally tries to be backwards-compatible with\n`publish` in terms of command-line interface, it has the following\nchanges:\n\n 1. usage is clearer. different actions are \"commands\" that are\n    clearly outlined in the usage and correctly \"conflict\" with each\n    other\n\n 2. long options: `publish` only has one-letter options, `pubpaste`\n    supports longer form options as well\n\n 3. `--undo` defaults to the last token, ie. `--republish` is implicit\n\n 4. `--undo` removes the token from history, allowing the user to\n    \"pop\" backwards in the history, canceling multiple entries\n\n 5. `--purge` is builtin instead of being a separate script\n\n 6. the `-L | --follow-symlinks` option is new\n\n 7. photo gallery: the `--sigal` option is new\n\nThe following are general behavior changes:\n\n 1. builtin graphical notifications: while `publish` can be modified\n    (through hooks) to notify the user on upload, `pubpaste` does\n    this outside the box.\n\n 2. We use `xclip -selection clipboard` by default instead of\n    `xclip`, because the latter conflicts with the `-x` option. If\n    available, we use GTK to handle clipboard events, which gives us\n    image support.\n\n 3. configuration file path and format: `publish`'s configuration is a shell\n    script in `~/.publish.cfg`, `pubpaste`'s configuration is a YAML\n    file in `~/.config/pubpaste.yml`. this breaks backwards\n    compatibility.\n\n 4. extensibility: `pubpaste` is less extensible than `publish`. the\n    latter has \"hooks\", shell functions that run before and after\n    various points in the program, and that the configuration can\n    totally override. this is very powerful, but also not well\n    documented and possibly dangerous. we took a more traditional\n    approach in `pubpaste`: modifications should be done in the source\n    code and proposed as patches\n\nThe following functionality is missing:\n\n  * `-q`: encodes the URL in a QR code and uploads *that*\n  * maximum history size\n\nThose options were discarded and will not be implemented:\n\n  * `-8`: web server should be properly configured\n  * `-r` obscure rsync function i never use\n  * `is_text` detection: we will just assume stdin is text\n\n# Prior art\n\nSimilar projects include, apart from the above publish, ordered\nalphabetically:\n\n * [0bin.net](https://0bin.net/): client-side encrypted, Javascript\n * [0x0.st](https://0x0.st/): AKA \"the null pointer\", minimalistic paste bin\n * [Stikked](https://github.com/claudehohl/Stikked): PHP, \"advanced and beautiful\"\n * [dpaste](https://github.com/sim590/dpaste): novel idea: paste over the DHT\n * [hardbin](https://hardbin.com/): IPFS-based\n * [ix.io](http://ix.io/): possibly the OG minimal paste bin (2009)\n * [microbin](https://microbin.eu/): expiry, raw files, rust, qrcodes, expiry\n * [pastebinit](https://github.com/pastebinit/pastebinit): supports publishing text to multiple paste sites,\n   Python\n * [pasthis](https://github.com/moulecorp/pasthis): PHP-based, also command-line tool\n * [plowshare](https://github.com/mcrapet/plowshare): (collection of) shell scripts to do somewhat the\n   same, delegates site-specific features to unbundled scripts,\n   [removed from Debian because security liability](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1011590)\n * [privatebin](https://privatebin.info/): minimal, client-side encrypted, PHP\n * [termbin](https://termbin.com/)/[fiche](https://github.com/solusipse/fiche): minimalist; not even curl, just nc, C\n * [transfer.sh](https://transfer.sh/): minimalist, Golang\n * [up1](https://github.com/Upload/Up1): client-side encrypted, Javascript\n\nI am not including here the list of actual sites deploying some of\nthose tools or other proprietary ones.\n\nThis list is likely incomplete. Note, that said, that none of the\nabove implementation have the feature set of pubpaste (not even\npublish). pubpaste and publish both lack the ability to do client-side\n(i.e. browser-based) encryption (no, OpenPGP, Age, or OpenSSL do not\ncount).\n\n# Contributing\n\nSee the [contribution guide](CONTRIBUTING.rst) for more information. In\nshort: this is a free software project and you are welcome to join us\nin improving it, both by fixing things, reporting issues or\ndocumentation.\n\nThis project adheres to the [Covenant code of conduct](CODE_OF_CONDUCT.rst).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/anarcat/pubpaste/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pubpaste",
    "package_url": "https://pypi.org/project/pubpaste/",
    "platform": null,
    "project_url": "https://pypi.org/project/pubpaste/",
    "project_urls": {
      "Bug Reports": "https://gitlab.com/anarcat/pubpaste/issues",
      "Homepage": "https://gitlab.com/anarcat/pubpaste/",
      "Say Thanks!": "http://saythanks.io/to/anarcat"
    },
    "release_url": "https://pypi.org/project/pubpaste/0.8.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "",
    "version": "0.8.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17227446,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41b4436e303aa6be7022462e057ee0d5d4bc8b8d124f302d6648c0e0cd68a6a1",
          "md5": "2055dcd56aa1bc6d3d34f798d46b18ee",
          "sha256": "eaefb4c4fa8397f8ef23f0765d3bbd095ffe554fbb3b358c6bbf818ec0f0e604"
        },
        "downloads": -1,
        "filename": "pubpaste-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2055dcd56aa1bc6d3d34f798d46b18ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5985,
        "upload_time": "2020-04-20T21:35:34",
        "upload_time_iso_8601": "2020-04-20T21:35:34.225116Z",
        "url": "https://files.pythonhosted.org/packages/41/b4/436e303aa6be7022462e057ee0d5d4bc8b8d124f302d6648c0e0cd68a6a1/pubpaste-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0baa4bcc918ff79aae5529145b340f07d1e8386f336e843089aa6d25cc75766f",
          "md5": "683cc8049d22493df3e0c3da577b2615",
          "sha256": "ce47676489089c6a5f481b4f51e33c4b335c0ee60170d9029007a26c8b039647"
        },
        "downloads": -1,
        "filename": "pubpaste-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "683cc8049d22493df3e0c3da577b2615",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6966,
        "upload_time": "2020-05-06T03:58:00",
        "upload_time_iso_8601": "2020-05-06T03:58:00.650311Z",
        "url": "https://files.pythonhosted.org/packages/0b/aa/4bcc918ff79aae5529145b340f07d1e8386f336e843089aa6d25cc75766f/pubpaste-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d53646e4023044f9a561be949ab1f2e39ba76d25aaaa7b7a010ac415cacaa2d8",
          "md5": "388bf298eeac89724c90bea6eafec308",
          "sha256": "5f5ee996972e00687781e42878a532a469ab024bb143737203de3b0aac921449"
        },
        "downloads": -1,
        "filename": "pubpaste-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "388bf298eeac89724c90bea6eafec308",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21090,
        "upload_time": "2022-07-11T19:04:02",
        "upload_time_iso_8601": "2022-07-11T19:04:02.965547Z",
        "url": "https://files.pythonhosted.org/packages/d5/36/46e4023044f9a561be949ab1f2e39ba76d25aaaa7b7a010ac415cacaa2d8/pubpaste-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8abf23a8ae7cd55a4118316c1adb853fe02126b1dda65cbbf0a18af727fca306",
          "md5": "d290d449cca9794c9db5a1a9ec3269c6",
          "sha256": "326efab9a4c9e4324ebc03d855f7f1094d60963724ac2817108e210a38a9f479"
        },
        "downloads": -1,
        "filename": "pubpaste-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d290d449cca9794c9db5a1a9ec3269c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21087,
        "upload_time": "2022-07-11T19:18:10",
        "upload_time_iso_8601": "2022-07-11T19:18:10.158746Z",
        "url": "https://files.pythonhosted.org/packages/8a/bf/23a8ae7cd55a4118316c1adb853fe02126b1dda65cbbf0a18af727fca306/pubpaste-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b51fc4fcb1659ae0864900c2061c65cdb73d9817f2de642002f0c8c82b752120",
          "md5": "f7d6c29d4eb530ba27117e272795e0fc",
          "sha256": "fba845988997003683e2c8880e8adffd1e3c0d36c6a2d03d9acbab037d640a4c"
        },
        "downloads": -1,
        "filename": "pubpaste-0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7d6c29d4eb530ba27117e272795e0fc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21328,
        "upload_time": "2022-09-19T19:52:27",
        "upload_time_iso_8601": "2022-09-19T19:52:27.473647Z",
        "url": "https://files.pythonhosted.org/packages/b5/1f/c4fcb1659ae0864900c2061c65cdb73d9817f2de642002f0c8c82b752120/pubpaste-0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67b63645e39c9428cb6e0377657ef0ad0882cd565eaf481f8accf67c6430fe84",
          "md5": "e3727a4eeb36469f9ee38c21d766e4ba",
          "sha256": "9b67b2c73486aa423ee4017ecb12bc74a5a50bc3ccbb3707d5c293136812b6d9"
        },
        "downloads": -1,
        "filename": "pubpaste-0.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e3727a4eeb36469f9ee38c21d766e4ba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24173,
        "upload_time": "2023-02-09T16:34:28",
        "upload_time_iso_8601": "2023-02-09T16:34:28.340718Z",
        "url": "https://files.pythonhosted.org/packages/67/b6/3645e39c9428cb6e0377657ef0ad0882cd565eaf481f8accf67c6430fe84/pubpaste-0.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4eda76d12daff7906d6fc9d5619968c620b59710f2b985b94cd919d3d087f029",
          "md5": "a370c5c2240f3d71e104c78fce0690b2",
          "sha256": "6f0874a70c3f788ae4acbbf2e9e3e537b320c60abab37fb3c1b2c042f1a24b64"
        },
        "downloads": -1,
        "filename": "pubpaste-0.8.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a370c5c2240f3d71e104c78fce0690b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24192,
        "upload_time": "2023-02-21T17:36:21",
        "upload_time_iso_8601": "2023-02-21T17:36:21.156974Z",
        "url": "https://files.pythonhosted.org/packages/4e/da/76d12daff7906d6fc9d5619968c620b59710f2b985b94cd919d3d087f029/pubpaste-0.8.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a55923fd5ae1f9409c83cf737d21c67c8da302fc859662bf80a1b82ec163ecb",
          "md5": "7a3a0e7d5bc7a5437bd38cb4bca74e9a",
          "sha256": "0a89b61fc2c0425f92991138c3694646ff24c051b08c4cbdbfc6bb5704b9c68b"
        },
        "downloads": -1,
        "filename": "pubpaste-0.8.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a3a0e7d5bc7a5437bd38cb4bca74e9a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24191,
        "upload_time": "2023-03-06T20:21:26",
        "upload_time_iso_8601": "2023-03-06T20:21:26.366562Z",
        "url": "https://files.pythonhosted.org/packages/6a/55/923fd5ae1f9409c83cf737d21c67c8da302fc859662bf80a1b82ec163ecb/pubpaste-0.8.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "170d2dd686f18125f5588da78634a07d3438b13bec4bcb5cda978d23bf7d670e",
          "md5": "7d4188f114f2398d343cbc3cf471bfb0",
          "sha256": "6262aaaf89f4458d39824ef16a6a827610b3009e8b389b47affed3225647a938"
        },
        "downloads": -1,
        "filename": "pubpaste-0.8.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d4188f114f2398d343cbc3cf471bfb0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24293,
        "upload_time": "2023-03-09T17:41:37",
        "upload_time_iso_8601": "2023-03-09T17:41:37.841230Z",
        "url": "https://files.pythonhosted.org/packages/17/0d/2dd686f18125f5588da78634a07d3438b13bec4bcb5cda978d23bf7d670e/pubpaste-0.8.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "170d2dd686f18125f5588da78634a07d3438b13bec4bcb5cda978d23bf7d670e",
        "md5": "7d4188f114f2398d343cbc3cf471bfb0",
        "sha256": "6262aaaf89f4458d39824ef16a6a827610b3009e8b389b47affed3225647a938"
      },
      "downloads": -1,
      "filename": "pubpaste-0.8.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7d4188f114f2398d343cbc3cf471bfb0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 24293,
      "upload_time": "2023-03-09T17:41:37",
      "upload_time_iso_8601": "2023-03-09T17:41:37.841230Z",
      "url": "https://files.pythonhosted.org/packages/17/0d/2dd686f18125f5588da78634a07d3438b13bec4bcb5cda978d23bf7d670e/pubpaste-0.8.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}