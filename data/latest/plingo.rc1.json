{
  "info": {
    "author": "Nicolas Rühling",
    "author_email": "nruehling@uni-potsdam.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Plingo\n\nA system for **probabilistic reasoning in clingo**.\n\nThe system is based on LP^MLN, and provides **front-ends** for different probabilistic logic languages:\n- *lpmln* [[1]](#1)\n- *p-log* [[2]](#2)\n- *problog* [[3]](#3).\n\nWhile the basic **syntax** of *plingo* is the same as the one of *clingo*, its **semantics** relies on re-interpreting the cost of a stable model at priority level `0` as a measure of its probability.\n\nSolving exploits the relation between most probable stable models and optimal stable models [[4]](#4); it relies on *clingo*'s optimization and enumeration modes, as well as an **approximation method** based on answer set enumeration in the order of optimality [[5]](#5).\n\nThe *plingo* system can be used to solve two **reasoning tasks**:\n- MAP inference: find a most probable stable model\n- Marginal inference: find all stable models and their probabilities\n\nA number of **examples** can be found [here](https://github.com/potassco/plingo/tree/main/examples). There are also sub-directories containing examples using our front-ends for the other probabilistic logic languages.\n\n## Installation\n\n#### With coda \n\n```\nconda install -c potassco plingo\n```\n\n#### With pip\n\n```\npip install plingo\n```\n\n#### From source \n\n```\ngit clone https://github.com/nrueh/plingo.git\ncd plingo\npip install .\n```\n\n\n## Usage\n\n`plingo` is an extension of clingo, therefore it counts with all of clingo's functionality with new options.\n\nRun the following command and look at `plingo`'s latest options under Plingo Options:\n\n```\nplingo -h\n```\n\n#### Command line options\n\n\n- `--all`\n\n    Enumerates all stable models and prints their probabilities.\n\n- `--evid=file`\n\n    Provides an evidence file to the program (`.lp` file with clingo syntax rules)\n\n- `--frontend=mode`\n\n    Specifies which frontend to use (´lpmln´, ´lpmln-alt´, ´problog´, ´plog´).\n    Mode ´lpmln-alt´ is the alternative definition where hard rules have to be satisfied. \n    When using mode ´lpmln hard rules are also translated which can be useful for debugging or resolving inconsistencies in the program.\n\n- `--query='atom'`\n\n    Adds a query atom `atom`, e.g. using the example from above `--query='bird(jo)'`. The argument has to be inside single quotation marks (otherwise the command-line might not be able to parse it correctly).\n\n- `--two-solve-calls`\n\n    Uses two solve calls: The first one finds the minimal bound for weak constraints priorities higher than 0. The second one solves for probabilistic stable models of LP^MLN.\n\n- `--unsat`\n\n    Uses the conversion with `unsat` atoms\n\n#### Examples \n##### MAP estimate\n\nFind a most probable stable model\n\n\n```\nplingo examples/lpmln/birds.plp --frontend lpmln-alt\n```\n```\nplingo version 1.0.0\nReading from examples/birds.lp\nSolving...\nAnswer: 1\n\nOptimization: 300000\nAnswer: 2\nresidentBird(jo) bird(jo)\nOptimization: 100000\nOPTIMUM FOUND\n\nModels       : 2\n  Optimum    : yes\nOptimization : 100000\nCalls        : 1\nTime         : 0.005s (Solving: 0.00s 1st Model: 0.00s Unsat: 0.00s)\nCPU Time     : 0.005s\n```\n\n##### Marginal probabilities\n\nTo list all stable models, add the flag `--all`. \n\n```\nplingo examples/lpmln/birds.plp --all --frontend lpmln-alt\n```\n```\nplingo version 1.0.0\nReading from examples/birds.lp\nSolving...\nAnswer: 1\n\nOptimization: 300000\nAnswer: 2\nresidentBird(jo) bird(jo)\nOptimization: 100000\nAnswer: 3\nmigratoryBird(jo) bird(jo)\nOptimization: 200000\n\n\nProbability of Answer 1: 0.09003\nProbability of Answer 2: 0.66524\nProbability of Answer 3: 0.24473\n\n\nOPTIMUM FOUND\n\nModels       : 3\n  Optimum    : yes\nCalls        : 1\nTime         : 0.006s (Solving: 0.00s 1st Model: 0.00s Unsat: 0.00s)\nCPU Time     : 0.006s\n```\n\n#### Approximation algorithm\nFor large problems it is infeasible to determine all stable models. \nPlingo offers an option to determine approximate probabilities using\nanswer set enumeration by optimality (ASEO) [[1]](#1).\n\nFor approximation of probabilistic queries it is recommended to use the `--opt-enum` option together with `--balanced=N`.\n\n- `--opt-enum`\n\n    Enumerates stable models by optimality. \n    This can be used for approximating probabilities and queries.\n    Recommended to use along with -q1 to suppress printing of intermediate models\n    \n- `--balanced=N`\n\n    Approximates a query in a balanced way, i.e. it will determine N stable models containing the query, and N stable models *not* containing the query. This overwrites clingo's `--models` option. Works only for a single ground query atom!\n- `--use-backend`\n\n    Adds constraints for query approximation in backend instead of using assumptions.\n\n\n## Input Language\nSyntactically, LPMLN differs between \"soft\" rules and \"hard\" rules, where \"soft\" rules have a (real number) weight and \"hard\" rules the weight \"alpha\". \n\nWeights can be added by the theory atom `&weight/1` to the body of a rule. The argument has to be an integer or a string containing a float or an expression like `2/3`. For example\n```\na(X) :- b(X), &weight(5).\nb(X) :- &weight(\"-2/3\").\n```\nFurther it is possible to use the theory atoms `&log/1` or `&problog/1` which only accept strings as arguments. The atom `&log/1` uses the natural logarithm `log(p)` of its argument `p` as weight. The atom `&problog/1` uses the natural logarithm of `p/(1-p)` as its weight.\nRules that do not have any weight in the body are assumed to be hard rules.\n\nTo compute LPMLN programs, a rule in an LPMLN program is converted to ASP with weak constraints\n\nBy default, only soft rules are converted. To convert hard rules as well, the `--hr` flag can be added on the command line. This option essentially makes hard rules optional, whereas in the default setting all hard rules have to be satisfied as usually in ASP.\n\n## References\n<a id=\"1\">[1]</a>\nJ. Lee and Y. Wang. (2016).\nWeighted Rules under the Stable Model Semantics\n\n\n<a id=\"2\">[2]</a>\nC. Baral and M. Gelfond and J.N. Rushton. (2009),\nProbabilistic Reasoning with Answer Sets\n\n<a id=\"3\">[3]</a>\nL. De Raedt and A. Kimmig and H. Toivonen\nProbLog: A Probabilistic Prolog and its Applications in Link Discovery\n\n<a id=\"4\">[4]</a>\nJ. Lee and Z. Yang (2017).\nLPMLN, Weak Constraints and P-log\n\n<a id=\"5\">[5]</a>\nJ. Pajunen and T. Janhunen. (2021).\nSolution Enumeration by Optimality in Answer Set Programming.\nTheory and Practice of Logic Programming, 21(6), 750-767.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nrueh/plingo/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "plingo",
    "package_url": "https://pypi.org/project/plingo/",
    "platform": null,
    "project_url": "https://pypi.org/project/plingo/",
    "project_urls": {
      "Homepage": "https://github.com/nrueh/plingo/"
    },
    "release_url": "https://pypi.org/project/plingo/1.0.0/",
    "requires_dist": [
      "clingo (>=5.5)"
    ],
    "requires_python": "",
    "summary": "Probabilistic extension for clingo",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14056440,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ac5fb75ed890a68552848b0a16d56f2bf9c56bcd4585ab709fe03fd77371575",
          "md5": "8b6810305173ef738b014f40fa8cebf7",
          "sha256": "540ab2ff9c2e59be73233c42cccb37bdce918a0983ea20293a10360aa49de780"
        },
        "downloads": -1,
        "filename": "plingo-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b6810305173ef738b014f40fa8cebf7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18274,
        "upload_time": "2022-06-07T11:59:15",
        "upload_time_iso_8601": "2022-06-07T11:59:15.400817Z",
        "url": "https://files.pythonhosted.org/packages/6a/c5/fb75ed890a68552848b0a16d56f2bf9c56bcd4585ab709fe03fd77371575/plingo-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b42d60bdeb502a1df8a8f973d7693a624772b61129e4de6641a53d2dc9837991",
          "md5": "bba14a823df9758d1030f94982200a04",
          "sha256": "5c08f8c4a632b52fc07ad12e8ab35cb233d815bef94d31cf01529f20311b139f"
        },
        "downloads": -1,
        "filename": "plingo-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bba14a823df9758d1030f94982200a04",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17951,
        "upload_time": "2022-06-07T11:59:17",
        "upload_time_iso_8601": "2022-06-07T11:59:17.174931Z",
        "url": "https://files.pythonhosted.org/packages/b4/2d/60bdeb502a1df8a8f973d7693a624772b61129e4de6641a53d2dc9837991/plingo-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6ac5fb75ed890a68552848b0a16d56f2bf9c56bcd4585ab709fe03fd77371575",
        "md5": "8b6810305173ef738b014f40fa8cebf7",
        "sha256": "540ab2ff9c2e59be73233c42cccb37bdce918a0983ea20293a10360aa49de780"
      },
      "downloads": -1,
      "filename": "plingo-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8b6810305173ef738b014f40fa8cebf7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18274,
      "upload_time": "2022-06-07T11:59:15",
      "upload_time_iso_8601": "2022-06-07T11:59:15.400817Z",
      "url": "https://files.pythonhosted.org/packages/6a/c5/fb75ed890a68552848b0a16d56f2bf9c56bcd4585ab709fe03fd77371575/plingo-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b42d60bdeb502a1df8a8f973d7693a624772b61129e4de6641a53d2dc9837991",
        "md5": "bba14a823df9758d1030f94982200a04",
        "sha256": "5c08f8c4a632b52fc07ad12e8ab35cb233d815bef94d31cf01529f20311b139f"
      },
      "downloads": -1,
      "filename": "plingo-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bba14a823df9758d1030f94982200a04",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17951,
      "upload_time": "2022-06-07T11:59:17",
      "upload_time_iso_8601": "2022-06-07T11:59:17.174931Z",
      "url": "https://files.pythonhosted.org/packages/b4/2d/60bdeb502a1df8a8f973d7693a624772b61129e4de6641a53d2dc9837991/plingo-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}