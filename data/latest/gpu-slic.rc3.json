{
  "info": {
    "author": "Omar Elamin",
    "author_email": "omar.elamin@diamond.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# cuda-slic: A CUDA implementation of the SLIC Superpixel algorithm\n\n## SLIC\nSLIC stands for __simple linear iterative clustering__. SLIC uses\ntiled k-means clustering to segment an input image into a set\nof superpixels/supervoxels.\n\nThis library was designed to segment large 2D/3D images coming from different\ndetectors at the [Diamond Light Source](https://diamond.ac.uk). These images\ncan be very large so using a serial CPU code is out of the question.\n\nTo speed up processing we use GPU acceleration to achieve great speed\nimprovements over alternative implementations. `cuda-slic` borrows its API\nfrom `skimage.segmentation.slic`.\n###### Benchmark\n__Machine__: 8 Core Intel Xeon(R) W-2123 CPU @ 3.60GHz with NVIDIA Quadro P2000\n```python\nfrom skimage import data\nfrom cuda_slic.slic import slic as cuda_slic\nfrom skimage.segmentation import slic as skimage_slic\n\nblob = data.binary_blobs(length=500, n_dim=3, seed=2)\nn_segments = 500**3/5**3 # super pixel shape = (5,5,5)\n\n%timeit -r1 -n1 skimage_slic(blob, n_segments=n_segments, multichannel=False, max_iter=5)\n# 2min 28s ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)\n\n%timeit -r1 -n1 cuda_slic(blob, n_segments=n_segments, multichannel=False, max_iter=5)\n# 13.1 s ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)\n```\n## CUDA JIT Compilation\n`cuda-slic` uses JIT compilation to covert CUDA kernels into GPU machine-code (PTX).\nTwo options are available for JIT compiliing CUDA code with python: Cupy or PyCUDA.\nIf PyCUDA is installed in the virtutalenv it is used by default. Otherwise Cupy is\nused.\n\nTo ease distribution `cuda-slic` is packaged into two independent packages that share\nthe same source-code but depend on a different libraries for JIT compilation:\n1. `cuda-slic` uses pycuda for JIT compilation.\n2. `gpu-slic` uses cupy for JIT compilation.\n\n## Installing cuda-slic (with PyCUDA)\n```bash\npip install cuda-slic\n```\n`cuda-slic` uses pycuda which has the following non-python\nbuild dependencies:\n1. gcc and g++/gcc-c++ on Linux. MSVC++ compiler and C++ build-tools on Windows.\n2. the cudatoolkit for linking with `cuda.h`.\n\nand the following runtime dependencies:\n1. gcc and g++/gcc-c++ on Linux. MSVC++ compiler and C++ build-tools on Windows.\n2. the cudatoolkit for linking with cuda libraries.\n3. the nvcc compiler. Ships with newer cudatoolkit versions.\n\nSee the [pycuda docs](https://wiki.tiker.net/PyCuda/Installation/) for \ninstallation instructions.\n\n## Installing gpu-slic (with Cupy)\n```bash\npip install gpu-slic\n```\n`gpu-slic` uses Cupy which has the following non-python\nbuild dependencies:\n1. gcc and g++/gcc-c++ on Linux.\n2. the cudatoolkit for linking with cuda libraries.\n3. the nvcc compiler. Ships with newer cudatoolkit versions.\n\nNote that when pip installing gpu-slic, cupy is installed as an `sdist`\nmeaning that your host must meet the compiling and linking requirements\nof cupy.\n\nCheck if gpu-slic is available on conda-forge to get\nprecompiled binaries of Cupy.\n\nSee also [cupy docs](https://docs.cupy.dev/en/stable/install.html) for \ninstallation instructions.\n\n## Usage\n```python\nfrom cuda_slic import slic\nfrom skimage import data\n\n# 2D RGB image\nimg = data.astronaut() \nlabels = slic(img, n_segments=100, compactness=10)\n\n# 3D gray scale\nvol = data.binary_blobs(length=50, n_dim=3, seed=2)\nlabels = slic(vol, n_segments=100, multichannel=False, compactness=0.1)\n\n# 3D multi-channel\n# volume with dimentions (z, y, x, c)\n# or video with dimentions (t, y, x, c)\nvol = data.binary_blobs(length=33, n_dim=4, seed=2)\nlabels = slic(vol, n_segments=100, multichannel=True, compactness=1)\n```\n\n# Development\n##### Prerequisites:\n1. gcc and g++/gcc-c++ installed and available on PATH.\n2. cudatoolkit installed and CUDA_HOME pointing to its location.\n3. `nvcc` compiler. Ships with recent versions of cudatoolkit.\n\n## Dependency Management\n\nWe use `conda` as a dependency installer and virtual env manager.\nA development environment can be created with\n```bash\nconda env create -f environment.yml\n```\nnow you can activate the virtual env with `conda activate cuda-slic`,\nand deactivate with `conda deactivate`.\nTo add a dependency, add it to the [environment.yml](environment.yml) file, then you can run\n```bash\nconda env update -f environment.yml\n```\nto keep `environment.yml` file as lean as possible, development dependencies\nare kept in `requirements_dev.txt` and can be installed with\n```bash\nconda install --file requirements_dev.txt -c conda-forge\n```\nor\n```bash\npip install -r requirements_dev.txt\n```\n\n## Tests\nIn the [notebooks](notebooks) folder there are Jupyter notebooks\nwhere the segmentation algorithm can be visually inspected.\n\nOur unit-testing framework of choice is [Py.test](https://docs.pytest.org/en/latest/).\nThe unit-tests can be run with\n```bash\nconda activate cuda-slic\npip install pytest\npytest\n```\nor\n```bash\nconda activate cuda-slic\npip install tox\ntox\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.stfc.ac.uk/RosalindFranklinInstitute/cuda-slic",
    "keywords": "segmentation fast cuda slic clustering kmeans",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gpu-slic",
    "package_url": "https://pypi.org/project/gpu-slic/",
    "platform": "",
    "project_url": "https://pypi.org/project/gpu-slic/",
    "project_urls": {
      "Homepage": "https://gitlab.stfc.ac.uk/RosalindFranklinInstitute/cuda-slic"
    },
    "release_url": "https://pypi.org/project/gpu-slic/0.0.1a3/",
    "requires_dist": [
      "numpy",
      "jinja2",
      "scikit-image",
      "cupy (<8.0.0,>=7.0.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "CUDA implementation of the SLIC segmentaion algorithm.",
    "version": "0.0.1a3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8162613,
  "releases": {
    "0.0.1a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6f6b9b36a91b7d31d76b0f27ec03b7a29d0cab3604f9499734df21c34423ebf",
          "md5": "669de73bd232cebf9c0c694ea1667ed8",
          "sha256": "a603cbd3ebf15626b27a71d9809a49c39c077d7aadeb12572173f696fafb541d"
        },
        "downloads": -1,
        "filename": "gpu_slic-0.0.1a1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "669de73bd232cebf9c0c694ea1667ed8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 20651,
        "upload_time": "2020-09-06T14:00:12",
        "upload_time_iso_8601": "2020-09-06T14:00:12.090841Z",
        "url": "https://files.pythonhosted.org/packages/b6/f6/b9b36a91b7d31d76b0f27ec03b7a29d0cab3604f9499734df21c34423ebf/gpu_slic-0.0.1a1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92057ca9b50496c8f65763a0dd7f670d76074b7d3ed2c1bbd1b454e3eea09aa0",
          "md5": "300085454d83aa4d724ad68f806a2e84",
          "sha256": "e9a98283b493f422181c6fdb2d7ca843b3c90216faa526fbbe36f9b025c89375"
        },
        "downloads": -1,
        "filename": "gpu_slic-0.0.1a1.tar.gz",
        "has_sig": false,
        "md5_digest": "300085454d83aa4d724ad68f806a2e84",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19820,
        "upload_time": "2020-09-06T14:00:14",
        "upload_time_iso_8601": "2020-09-06T14:00:14.542604Z",
        "url": "https://files.pythonhosted.org/packages/92/05/7ca9b50496c8f65763a0dd7f670d76074b7d3ed2c1bbd1b454e3eea09aa0/gpu_slic-0.0.1a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6fa8af500867ee8ae833e7ff5771fe5934e8baa965ad885b8177d12204a19753",
          "md5": "1bd508e1566ca3196d62da123a2c957e",
          "sha256": "1c81a4b9ddc12f6886204a65e9078de9ab35eeddce9c80bc63158cb6c7429ff2"
        },
        "downloads": -1,
        "filename": "gpu_slic-0.0.1a2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1bd508e1566ca3196d62da123a2c957e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 10288,
        "upload_time": "2020-09-10T08:05:59",
        "upload_time_iso_8601": "2020-09-10T08:05:59.878167Z",
        "url": "https://files.pythonhosted.org/packages/6f/a8/af500867ee8ae833e7ff5771fe5934e8baa965ad885b8177d12204a19753/gpu_slic-0.0.1a2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "753c48e8e9b65879e8424dd294081afc14fa636506312386c5d491fd9cd2192d",
          "md5": "fadaf6da67e7b87ee73ce0b388d4df05",
          "sha256": "7d872094871c384cf51ccaf3377c188411248d10ddc2cddf113a2f77aae636b4"
        },
        "downloads": -1,
        "filename": "gpu_slic-0.0.1a2.tar.gz",
        "has_sig": false,
        "md5_digest": "fadaf6da67e7b87ee73ce0b388d4df05",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11572,
        "upload_time": "2020-09-10T08:06:01",
        "upload_time_iso_8601": "2020-09-10T08:06:01.325828Z",
        "url": "https://files.pythonhosted.org/packages/75/3c/48e8e9b65879e8424dd294081afc14fa636506312386c5d491fd9cd2192d/gpu_slic-0.0.1a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ee739bb17855f8db573de7221263778cafa2ee3ae1de2cb2b4f7633276117f0",
          "md5": "0f8c536fe3d4fd404fad5d687243ae83",
          "sha256": "63dfeafb279cc2fd94caa00a4e312513fea663a4a1ce56c63cf487408076a493"
        },
        "downloads": -1,
        "filename": "gpu_slic-0.0.1a3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f8c536fe3d4fd404fad5d687243ae83",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 10330,
        "upload_time": "2020-09-11T08:14:44",
        "upload_time_iso_8601": "2020-09-11T08:14:44.634550Z",
        "url": "https://files.pythonhosted.org/packages/2e/e7/39bb17855f8db573de7221263778cafa2ee3ae1de2cb2b4f7633276117f0/gpu_slic-0.0.1a3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f74f07a40465ea4ec5e9e83fba9dfeb393c2229f11d1a6c068b4bb3029e2d1a",
          "md5": "7a3861441d8988e497575c5167cc084a",
          "sha256": "79a99e5c96d1e52db112abc78f630782264e3d1f1840cfc2ca4bafffc9bfb382"
        },
        "downloads": -1,
        "filename": "gpu_slic-0.0.1a3.tar.gz",
        "has_sig": false,
        "md5_digest": "7a3861441d8988e497575c5167cc084a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11608,
        "upload_time": "2020-09-11T08:14:46",
        "upload_time_iso_8601": "2020-09-11T08:14:46.217488Z",
        "url": "https://files.pythonhosted.org/packages/8f/74/f07a40465ea4ec5e9e83fba9dfeb393c2229f11d1a6c068b4bb3029e2d1a/gpu_slic-0.0.1a3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ee739bb17855f8db573de7221263778cafa2ee3ae1de2cb2b4f7633276117f0",
        "md5": "0f8c536fe3d4fd404fad5d687243ae83",
        "sha256": "63dfeafb279cc2fd94caa00a4e312513fea663a4a1ce56c63cf487408076a493"
      },
      "downloads": -1,
      "filename": "gpu_slic-0.0.1a3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0f8c536fe3d4fd404fad5d687243ae83",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 10330,
      "upload_time": "2020-09-11T08:14:44",
      "upload_time_iso_8601": "2020-09-11T08:14:44.634550Z",
      "url": "https://files.pythonhosted.org/packages/2e/e7/39bb17855f8db573de7221263778cafa2ee3ae1de2cb2b4f7633276117f0/gpu_slic-0.0.1a3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8f74f07a40465ea4ec5e9e83fba9dfeb393c2229f11d1a6c068b4bb3029e2d1a",
        "md5": "7a3861441d8988e497575c5167cc084a",
        "sha256": "79a99e5c96d1e52db112abc78f630782264e3d1f1840cfc2ca4bafffc9bfb382"
      },
      "downloads": -1,
      "filename": "gpu_slic-0.0.1a3.tar.gz",
      "has_sig": false,
      "md5_digest": "7a3861441d8988e497575c5167cc084a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11608,
      "upload_time": "2020-09-11T08:14:46",
      "upload_time_iso_8601": "2020-09-11T08:14:46.217488Z",
      "url": "https://files.pythonhosted.org/packages/8f/74/f07a40465ea4ec5e9e83fba9dfeb393c2229f11d1a6c068b4bb3029e2d1a/gpu_slic-0.0.1a3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}