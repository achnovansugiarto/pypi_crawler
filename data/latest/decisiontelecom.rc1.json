{
  "info": {
    "author": "IT-Decision Telecom",
    "author_email": "info@it-decision.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "IT-Decision Telecom Python SDK\n===============================\n\nConvenient Python client for IT-Decision Telecom messaging API.\n\n[![Python package](https://github.com/IT-DecisionTelecom/DecisionTelecom-Python/actions/workflows/python-package.yml/badge.svg)](https://github.com/IT-DecisionTelecom/DecisionTelecom-Python/actions/workflows/python-package.yml)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nRequirements\n-----\n\n- [Sign up](https://web.it-decision.com/site/signup) for a free IT-Decision Telecom account\n- Request login and password to send SMS messages and access key to send Viber messages\n- Python version 3.8 or higher installed\n- You should have an application written in Python to make use of this SDK\n\nInstallation\n-----\n\nThe easiest way to install the decisiontelecom package is either via pip:\n\n```\n$ pip install decisiontelecom\n```\n\nor manually by downloading the source and run the setup.py script:\n\n```\n$ python setup.py install\n```\n\nUsage\n-----\n\nWe have put some self-explanatory usage examples in the [examples](https://github.com/IT-DecisionTelecom/DecisionTelecom-Python/tree/main/examples) folder,\nbut here is a quick reference on how IT-Decision Telecom clients work.\nFirst, you need to import DecisionTelecom module which corresponds to your needs:\n\n```python\nfrom decisiontelecom.sms import SmsClient\nfrom decisiontelecom.viber import ViberClient\nfrom decisiontelecom.viber_plus_sms import ViberPlusSmsClient\n\n```\n\nThen, create an instance of a required client. Be sure to use real login, password and access key.\n\n```python\nsms_client = SmsClient(\"<YOUR_LOGIN>\", \"<YOUR_PASSWORD>\")\nviber_client = ViberClient(\"<YOUR_ACCESS_KEY>\")\nviber_plus_sms_client = ViberPlusSmsClient(\"<YOUR_ACCESS_KEY>\")\n```\n\nNow you can use created client to perform needed operations. For example, this is how you can get your SMS balance:\n\n```python\ntry:\n    # Call client get_balance method to get SMS balance information\n    balance = sms_client.get_balance()\n\n    # get_balance method should return SMS balance information.\n    print(\"Balance: %f, Credit: %f, Currency: %s\" % (balance.balance, balance.credit, balance.currency))\nexcept SmsError as sms_error:\n    # sms_error contains specific DecisionTelecom error with the code of what went wrong during the operation\n    print(\"Error while getting balance information. Error code: %d (%s)\" % (sms_error.error_code.value, sms_error.error_code))\nexcept Exception as error:\n    # A non-DecisionTelecom error occurred during the operation (like connection error)\n    print(error)\n```\n\n### Error handling\nAll client methods raise an exception in case if something went wrong during the operation. It might be a general exception in case of connection error or unsuccessful response status code, for example. Or it might be a specific DecisionTelecom error with some details of what went wrong. \n\nSMS client methods might raise `SmsError` which contains an SMS error code.\nViber and Viber plus SMS client methods might raise `ViberError` which contains some error details like name, message, status and code.\n\nSee provided examples on how to handle specific DecisionTelecom exceptions.\n\n#### SMS errors\nSMS client methods return errors in form of the error code. Here are all possible error codes:\n\n- 40 - Invalid number\n- 41 - Incorrect sender\n- 42 - Invalid message ID\n- 43 - Incorrect JSON\n- 44 - Invalid login or password\n- 45 - User locked\n- 46 - Empty text\n- 47 - Empty login\n- 48 - Empty password\n- 49 - Not enough money to send a message\n- 50 - Authentication error\n- 51 - Invalid phone number\n\n#### Viber errors\nViber and Viber plus SMS client methods return errors in form of a class with the `name`, `message`, `code` and `status` properties.\n\nKnown Viber errors are:\n\n```json\n{\n  \"name\": \"Too Many Requests\",\n  \"message\": \"Rate limit exceeded\",\n  \"code\": 0,\n  \"status\": 429\n}\n```\n\n```json\n{\n  \"name\": \"Invalid Parameter: [param_name]\",\n  \"message\": \"Empty parameter or parameter validation error\",\n  \"code\": 1,\n  \"status\": 400\n}\n```\n\n```json\n{\n  \"name\": \"Internal server error\",\n  \"message\": \"The server encountered an unexpected condition which prevented it from fulfilling the request\",\n  \"code\": 2,\n  \"status\": 500\n}\n```\n\n```json\n{\n  \"name\": \"Topup balance is required\",\n  \"message\": \"User balance is empty\",\n  \"code\": 3,\n  \"status\": 402\n}\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/IT-DecisionTelecom/DecisionTelecom-Python",
    "keywords": "decisiontelecom,sms,viber,messaging",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "decisiontelecom",
    "package_url": "https://pypi.org/project/decisiontelecom/",
    "platform": "",
    "project_url": "https://pypi.org/project/decisiontelecom/",
    "project_urls": {
      "Homepage": "https://github.com/IT-DecisionTelecom/DecisionTelecom-Python"
    },
    "release_url": "https://pypi.org/project/decisiontelecom/1.0.0/",
    "requires_dist": [
      "requests (>=2.27.1)",
      "unittest ; extra == 'dev'",
      "responses ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "A Python client library for IT-Decision Telecom messaging API",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12730333,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9267a5a21e53900767ad1bdef7deb89f966c3700afcd2d22a9993548f12c474b",
          "md5": "ab81bb557f0dbc9dd4010fa1012f6c49",
          "sha256": "ace3ce503e089fc9b7afa21135f77d427c9ca834674c6f19abd4751997e3ce2c"
        },
        "downloads": -1,
        "filename": "decisiontelecom-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ab81bb557f0dbc9dd4010fa1012f6c49",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12324,
        "upload_time": "2022-01-29T14:58:17",
        "upload_time_iso_8601": "2022-01-29T14:58:17.351786Z",
        "url": "https://files.pythonhosted.org/packages/92/67/a5a21e53900767ad1bdef7deb89f966c3700afcd2d22a9993548f12c474b/decisiontelecom-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d2ad0656766927beaef1a30d4d4036db131174051459b68e4c8a586e48c6768",
          "md5": "feb0a320dda17a978b8524d11314afaf",
          "sha256": "26e55e7b9bc1703062dfd1b5c3f57d8319c7c914b52be06e20e3527d5114ec9f"
        },
        "downloads": -1,
        "filename": "decisiontelecom-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "feb0a320dda17a978b8524d11314afaf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9263,
        "upload_time": "2022-01-29T14:58:19",
        "upload_time_iso_8601": "2022-01-29T14:58:19.374642Z",
        "url": "https://files.pythonhosted.org/packages/6d/2a/d0656766927beaef1a30d4d4036db131174051459b68e4c8a586e48c6768/decisiontelecom-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9267a5a21e53900767ad1bdef7deb89f966c3700afcd2d22a9993548f12c474b",
        "md5": "ab81bb557f0dbc9dd4010fa1012f6c49",
        "sha256": "ace3ce503e089fc9b7afa21135f77d427c9ca834674c6f19abd4751997e3ce2c"
      },
      "downloads": -1,
      "filename": "decisiontelecom-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ab81bb557f0dbc9dd4010fa1012f6c49",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12324,
      "upload_time": "2022-01-29T14:58:17",
      "upload_time_iso_8601": "2022-01-29T14:58:17.351786Z",
      "url": "https://files.pythonhosted.org/packages/92/67/a5a21e53900767ad1bdef7deb89f966c3700afcd2d22a9993548f12c474b/decisiontelecom-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6d2ad0656766927beaef1a30d4d4036db131174051459b68e4c8a586e48c6768",
        "md5": "feb0a320dda17a978b8524d11314afaf",
        "sha256": "26e55e7b9bc1703062dfd1b5c3f57d8319c7c914b52be06e20e3527d5114ec9f"
      },
      "downloads": -1,
      "filename": "decisiontelecom-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "feb0a320dda17a978b8524d11314afaf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9263,
      "upload_time": "2022-01-29T14:58:19",
      "upload_time_iso_8601": "2022-01-29T14:58:19.374642Z",
      "url": "https://files.pythonhosted.org/packages/6d/2a/d0656766927beaef1a30d4d4036db131174051459b68e4c8a586e48c6768/decisiontelecom-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}