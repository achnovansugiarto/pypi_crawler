{
  "info": {
    "author": "Michael Dodd",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# realtime-trains-api-python README\n\nA Python wrapper for the [Realtime Trains](https://www.realtimetrains.co.uk/) API v1.\n\nThis library simplfies the process of making a call to the Realtime Trains API.\nRequests to specific endpoints can be made from the `RttApi` class, with the returned\nJSON data parsed and wrapped into a data object.\n\nFor now this is a literal mapping of the Realtime Trains API data structure into Python\ndata classes. Helper functionality may be added in future.\n\n## Prerequisites\nIn order to make requests from this library you must first sign up for a Realtime Trains\nAPI account. You can do so at [api.rtt.io](https://api.rtt.io/). \n\n## Getting Started\n**IMPORTANT** - Note that you must use \nthe **API Auth Credentials** as displayed within your Realtime Trains API account, **not**\nthe credentials you use to log into the website.\n\nCreate an instance of an `RttApi` object using your Realtime Trains API auth credentials \nlike so:\n\n```python\nfrom rttapi.api import RttApi\n\napi = RttApi('rttapi_exampleuser', '00112233aabbccdd')\n```\n\n## Request Station Information\n\nTo request the list of upcoming departures from Clapham Junction station:\n\n```python\ndepartures = api.search_station_departures('CLJ') \n```\n\nThis will return a `SearchResult` object with containing the station details and the list of\nupcoming departures. You may either search using the three-letter CRS (computer reservation system)\ncode, or a longer TIPLOC (timing point location) code. You can find a station's CRS code by \nsearching on the [National Rail website](https://www.nationalrail.co.uk/).\n\nArrivals can also be queried by using:\n\n```python\narrivals = api.search_station_arrivals('CLJ') \n```\n\nWhich again returns a `SearchResult` object.\n\nA detailed breakdown on the information returned can be found on the Realtime Trains\n[API documentation page](https://www.realtimetrains.co.uk/about/developer/pull/docs/locationlist/).\nThis library mirrors the data returned by the API, albeit using Pythonesque `underscore_case`\nproperties instead of the `camelCase` properties returned by the API.\n\n## Request Detailed Service Information\n\nDetailed journey information for an individual service can be queried using:\n\n```python\nservice_info = api.fetch_service_info_datetime(service_uid, service_date) \n```\n\nwhere: \n* `service_uid` is the unique identifier of the service obtained from the `SearchResult`\ne.g. `8U09FW` \n* `service_datetime` is a `datetime.date` object representing the date on \nwhich the service is due to depart. \n\nAlternatively, the year, month and day of departure can\nbe explicitly set (e.g. 27th March 2021) by using:\n\n```python\nservice_info = api.fetch_service_info_ymd('8U09FW', '2021', '3', '27') \n```\n\nBoth of these examples will return a `Service` object, which is explained in more detail\non the Realtime Trains [API documentation page](https://www.realtimetrains.co.uk/about/developer/pull/docs/serviceinfo/).\n\n\n## Other Examples\nA more detailed example on how to use this library can be found in my \n[pyRailTimes](https://github.com/DoddyUK/pyRailTimes) project.\n\n## Thanks\nWith thanks to the Realtime Trains API team.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rttapi",
    "package_url": "https://pypi.org/project/rttapi/",
    "platform": "",
    "project_url": "https://pypi.org/project/rttapi/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/rttapi/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python wrapper for the Realtime Trains API",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10032387,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b559afda1982e47d9f0fc8ec7d4c3d39776e2f19106d59022bb68ee806a584fd",
          "md5": "c32176235f00a8e68c0dab76152fbb11",
          "sha256": "f51f8a882d4a25f438d8c26c145c8ad5c77e9cb999b30b4cb7b5dd322c6fe2ba"
        },
        "downloads": -1,
        "filename": "rttapi-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c32176235f00a8e68c0dab76152fbb11",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10355,
        "upload_time": "2021-04-11T15:20:37",
        "upload_time_iso_8601": "2021-04-11T15:20:37.934847Z",
        "url": "https://files.pythonhosted.org/packages/b5/59/afda1982e47d9f0fc8ec7d4c3d39776e2f19106d59022bb68ee806a584fd/rttapi-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3a992fc568cfbc893bb40b87028e335bc6a4c104ef36bfa5122e3ec3c624b97",
          "md5": "c9f0160c73c37cb86a37f9556d3b9e7d",
          "sha256": "16f769441bd064446fd8fdd2d204f74ffa7fb183b52f7c65b9989f879ed5bde5"
        },
        "downloads": -1,
        "filename": "rttapi-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c9f0160c73c37cb86a37f9556d3b9e7d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9807,
        "upload_time": "2021-04-11T15:20:39",
        "upload_time_iso_8601": "2021-04-11T15:20:39.511683Z",
        "url": "https://files.pythonhosted.org/packages/e3/a9/92fc568cfbc893bb40b87028e335bc6a4c104ef36bfa5122e3ec3c624b97/rttapi-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b559afda1982e47d9f0fc8ec7d4c3d39776e2f19106d59022bb68ee806a584fd",
        "md5": "c32176235f00a8e68c0dab76152fbb11",
        "sha256": "f51f8a882d4a25f438d8c26c145c8ad5c77e9cb999b30b4cb7b5dd322c6fe2ba"
      },
      "downloads": -1,
      "filename": "rttapi-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c32176235f00a8e68c0dab76152fbb11",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10355,
      "upload_time": "2021-04-11T15:20:37",
      "upload_time_iso_8601": "2021-04-11T15:20:37.934847Z",
      "url": "https://files.pythonhosted.org/packages/b5/59/afda1982e47d9f0fc8ec7d4c3d39776e2f19106d59022bb68ee806a584fd/rttapi-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e3a992fc568cfbc893bb40b87028e335bc6a4c104ef36bfa5122e3ec3c624b97",
        "md5": "c9f0160c73c37cb86a37f9556d3b9e7d",
        "sha256": "16f769441bd064446fd8fdd2d204f74ffa7fb183b52f7c65b9989f879ed5bde5"
      },
      "downloads": -1,
      "filename": "rttapi-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c9f0160c73c37cb86a37f9556d3b9e7d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9807,
      "upload_time": "2021-04-11T15:20:39",
      "upload_time_iso_8601": "2021-04-11T15:20:39.511683Z",
      "url": "https://files.pythonhosted.org/packages/e3/a9/92fc568cfbc893bb40b87028e335bc6a4c104ef36bfa5122e3ec3c624b97/rttapi-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}