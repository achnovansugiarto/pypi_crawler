{
  "info": {
    "author": "ruescog",
    "author_email": "ruescog@unirioja.es",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "vision_models_evaluation\n================\n\n<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->\n\n## Install\n\nTo install the library, just run:\n\n``` sh\npip install vision_models_evaluation\n```\n\n## How to use\n\nThis library provides a method that can help you in the process of model\nevaluation. Using the [scikit-learn validation\ntechniques](https://scikit-learn.org/stable/modules/cross_validation.html#cross-validation-iterators)\nyou can validate your deep learning models.\n\nIn order to validate your model, you will need to build and train\nvarious versions of it (for example, using a KFold validation, it is\nneeded to build five different models).\n\nFor doing so, you need to provide: the `DataBlock` hparams\n(hyperparameters), the `DataLoader` hparams, the technique used to split\nthe data, the `Learner` construction hparams, the learning mode (whether\nto use a pretrained model or not: `fit_one_cycle` or `finetune`) and the\n`Learner` training hparams. So, the first step is to define them all:\n\n``` python\ndb_hparams = {\n    \"blocks\": (ImageBlock, MaskBlock(codes)),\n    \"get_items\": partial(get_image_files, folders=['train']),\n    \"get_y\": get_y_fn,\n    \"item_tfms\": [Resize((480,640)), TargetMaskConvertTransform(), transformPipeline],\n    \"batch_tfms\": Normalize.from_stats(*imagenet_stats)\n}\ndl_hparams = {\n    \"source\": path_images,\n    \"bs\": 4\n}\ntechnique = KFold(n_splits = 5)\nlearner_hparams = {\n    \"arch\": resnet18,\n    \"pretrained\": True,\n    \"metrics\": [DiceMulti()]\n}\nlearning_hparams = {\n    \"epochs\": 10,\n    \"base_lr\": 0.001,\n    \"freeze_epochs\": 1\n}\nlearning_mode = \"finetune\"\n```\n\nThen, you need to call the `evaluate` method with those defined hparams.\nAfter the execution, the method will return a dictionary of results (for\neach metric used to test the model, the value obtained in each fold).\n\n``` python\nr = evaluate(\n    db_hparams,\n    dl_hparams,\n    technique,\n    learner_hparams,\n    learning_hparams,\n    learning_mode\n)\n```\n\nFinally, you can plot the metrics using a boxplot from pandas, for\nexample:\n\n``` python\nimport pandas as pd\n\ndf = pd.DataFrame(r)\ndf.boxplot(\"DiceMulti\");\n\nprint(\n    df[\"DiceMulti\"].mean(),\n    df[\"DiceMulti\"].std()\n)\n```\n\n![download.png](index_files/figure-gfm/download.png)\n\nYou can use this method to evaluate your model, but you can also use it\nto evaluate several models with distinct hparams: you can get the\nresults for each of them and then plot the average of their metrics.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ruescog/vision_models_evaluation",
    "keywords": "nbdev jupyter notebook python",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vision-models-evaluation",
    "package_url": "https://pypi.org/project/vision-models-evaluation/",
    "platform": null,
    "project_url": "https://pypi.org/project/vision-models-evaluation/",
    "project_urls": {
      "Homepage": "https://github.com/ruescog/vision_models_evaluation"
    },
    "release_url": "https://pypi.org/project/vision-models-evaluation/0.0.3/",
    "requires_dist": [
      "fastai",
      "fastcore",
      "pandas",
      "sklearn"
    ],
    "requires_python": ">=3.7",
    "summary": "A library to test fastai learners using some evaluation techniques.",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15371853,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ecbe110214e58fdc318f4866ba7e56f0551e04bcf761daaff01be6af0313c35",
          "md5": "c29b1919fd0ddd7d40a64bf4b4226738",
          "sha256": "be6a212c8f7c209db330b95ce2b96e8ccfb9ce2c16dd355224f80e0ea78aee25"
        },
        "downloads": -1,
        "filename": "vision_models_evaluation-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c29b1919fd0ddd7d40a64bf4b4226738",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8832,
        "upload_time": "2022-10-03T08:18:06",
        "upload_time_iso_8601": "2022-10-03T08:18:06.735716Z",
        "url": "https://files.pythonhosted.org/packages/2e/cb/e110214e58fdc318f4866ba7e56f0551e04bcf761daaff01be6af0313c35/vision_models_evaluation-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f022beffe03cb5ae4f58c77de16eb5e67bf9279c9a6d7be372fb90530b6ba74",
          "md5": "db0aa62fdb20f6a6c4b138db364ff180",
          "sha256": "65d831edcd835f9028c37b031382ed18ced2923e4d9aa508c08e77fda1478b53"
        },
        "downloads": -1,
        "filename": "vision_models_evaluation-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "db0aa62fdb20f6a6c4b138db364ff180",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9240,
        "upload_time": "2022-10-03T08:18:08",
        "upload_time_iso_8601": "2022-10-03T08:18:08.661804Z",
        "url": "https://files.pythonhosted.org/packages/7f/02/2beffe03cb5ae4f58c77de16eb5e67bf9279c9a6d7be372fb90530b6ba74/vision_models_evaluation-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0200ae273ca1957f50473556dce1dd92a10198a827131cdbec1f253dc0440b78",
          "md5": "ee36954ca9fa66e374ef7ce9246908c5",
          "sha256": "4b742207c16d84b4e584e5e17ee3240a9928a2b43d3d78e76a4054f9c47e2e5b"
        },
        "downloads": -1,
        "filename": "vision_models_evaluation-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ee36954ca9fa66e374ef7ce9246908c5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8899,
        "upload_time": "2022-10-06T08:04:32",
        "upload_time_iso_8601": "2022-10-06T08:04:32.512283Z",
        "url": "https://files.pythonhosted.org/packages/02/00/ae273ca1957f50473556dce1dd92a10198a827131cdbec1f253dc0440b78/vision_models_evaluation-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ec0366b08e14ca4f75bbde23fd737631f97038a2a134ddff3481718f459132d",
          "md5": "4bb5402b9dd6076d88e7d6d4e51f97fc",
          "sha256": "02e7fe54b39c3a30f39d75f46f9872eabbb729c95b1d91cd9dc69b676f19f94b"
        },
        "downloads": -1,
        "filename": "vision_models_evaluation-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4bb5402b9dd6076d88e7d6d4e51f97fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9270,
        "upload_time": "2022-10-06T08:04:34",
        "upload_time_iso_8601": "2022-10-06T08:04:34.193016Z",
        "url": "https://files.pythonhosted.org/packages/4e/c0/366b08e14ca4f75bbde23fd737631f97038a2a134ddff3481718f459132d/vision_models_evaluation-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ee90a08787795f145b9c32f9f42e9cbe69209921dd1dc1e826526f0c7e0aaa1",
          "md5": "462574b01e41c8ed79310c8ebd389d0b",
          "sha256": "335c43d255d98a0850ccf59e30b3272ec945a88da541f0749278f4f4163d95c6"
        },
        "downloads": -1,
        "filename": "vision_models_evaluation-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "462574b01e41c8ed79310c8ebd389d0b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8956,
        "upload_time": "2022-10-11T10:04:29",
        "upload_time_iso_8601": "2022-10-11T10:04:29.989450Z",
        "url": "https://files.pythonhosted.org/packages/7e/e9/0a08787795f145b9c32f9f42e9cbe69209921dd1dc1e826526f0c7e0aaa1/vision_models_evaluation-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09db875b726363cefe373219171d40bb4e526398e2ebf8180375105d912bb8ca",
          "md5": "955a533e140c6f4b989e8aaffa784a16",
          "sha256": "cd3363f849c631019002685f2ba397f8a47b382a8a4d49fd5849ea2655d9ad69"
        },
        "downloads": -1,
        "filename": "vision_models_evaluation-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "955a533e140c6f4b989e8aaffa784a16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9326,
        "upload_time": "2022-10-11T10:04:31",
        "upload_time_iso_8601": "2022-10-11T10:04:31.983337Z",
        "url": "https://files.pythonhosted.org/packages/09/db/875b726363cefe373219171d40bb4e526398e2ebf8180375105d912bb8ca/vision_models_evaluation-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7ee90a08787795f145b9c32f9f42e9cbe69209921dd1dc1e826526f0c7e0aaa1",
        "md5": "462574b01e41c8ed79310c8ebd389d0b",
        "sha256": "335c43d255d98a0850ccf59e30b3272ec945a88da541f0749278f4f4163d95c6"
      },
      "downloads": -1,
      "filename": "vision_models_evaluation-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "462574b01e41c8ed79310c8ebd389d0b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 8956,
      "upload_time": "2022-10-11T10:04:29",
      "upload_time_iso_8601": "2022-10-11T10:04:29.989450Z",
      "url": "https://files.pythonhosted.org/packages/7e/e9/0a08787795f145b9c32f9f42e9cbe69209921dd1dc1e826526f0c7e0aaa1/vision_models_evaluation-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "09db875b726363cefe373219171d40bb4e526398e2ebf8180375105d912bb8ca",
        "md5": "955a533e140c6f4b989e8aaffa784a16",
        "sha256": "cd3363f849c631019002685f2ba397f8a47b382a8a4d49fd5849ea2655d9ad69"
      },
      "downloads": -1,
      "filename": "vision_models_evaluation-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "955a533e140c6f4b989e8aaffa784a16",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 9326,
      "upload_time": "2022-10-11T10:04:31",
      "upload_time_iso_8601": "2022-10-11T10:04:31.983337Z",
      "url": "https://files.pythonhosted.org/packages/09/db/875b726363cefe373219171d40bb4e526398e2ebf8180375105d912bb8ca/vision_models_evaluation-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}