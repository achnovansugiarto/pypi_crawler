{
  "info": {
    "author": "m8r0wn",
    "author_email": "m8r0wn@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3"
    ],
    "description": "# IPParser\n\nThe IPParser Python module was created to simplify accepting IPv4 addresses, DNS names, and target / host information when creating other security or network tools. User inputs are taken and parsed to provide a list of IPv4 addresses or DNS names that can be used for iteration. If called with ```resolve=True```, ipparser will attempt to perform \"A\" record lookups and returns all IP addresses found for the host.\n\n#### Inputs:\nIPParser currently accepts the following user inputs:\n* Single IP (192.168.1.10)\n* IP ranges (192.168.1.1-55)\n* Multiple IP's (192.168.1.3,192.168.1.7,m8r0wn.com)\n* CIDR Ranges /8-/32 (192.168.1.0/24)\n* URL's (https://m8r0wn.com/demo)\n* IP:Port (192.168.1.1:8080)\n* DNS Names (m8r0wn.com)\n* TXT files (Containing any of the items listed)\n* Nmap XML Reports\n\n## Install\n```bash\npip3 install ipparser\n```\nOR \n```bash\ngit clone https://github.com/m8r0wn/ipparser\ncd ipparser\npython3 setup.py install\n```\n\n## Usage:\nThe IPParser function can be called with the following arguments (shown with their default values):\n* ```resolve=False``` - Resolve any DNS names identified, to IPv4 addresses, and append to output.\n* ```open_ports=False``` - Return IP:Port notation for all open ports found (Nmap XML only)\n* ```silent=False``` - Do not show errors while parsing.\n* ```exit_on_error=True``` - Exit on errors found while parsing user input.\n* ```debug=False``` - Show input classification for debugging.\n\n## Examples\n```python\n>>> from ipparser import ipparser\n>>> ipparser('192.168.1.3-5')\n['192.168.1.3', '192.168.1.4', '192.168.1.5']\n\n>>> ipparser('yahoo.com',resolve=True)\n['98.138.219.232', '98.138.219.231', '72.30.35.9', '72.30.35.10', '98.137.246.7', '98.137.246.8']\n\n>>> ipparser('example', resolve=True, exit_on_error=False)\nIPParser Error: Invalid or unsupported input provided 'example'\n\n>>> ipparser('192.168.1.1,yahoo.com')\n['192.168.1.1', 'yahoo.com']\n\nipparser('192.168.1.1,yahoo.com,example', resolve=True, exit_on_error=False)\nIPParser Error: Invalid or unsupported input provided 'example'\n['192.168.1.1', '98.138.219.231', '98.137.246.8', '98.137.246.7', '72.30.35.9', '98.138.219.232', '72.30.35.10']\n\n>>> ipparser('192.168.1.1,yahoo.com,example', resolve=True, silent=True)\n['192.168.1.1', '72.30.35.10', '98.138.219.231', '98.137.246.7', '98.137.246.8', '72.30.35.9', '98.138.219.232']\n```\n\n## Argparse Integration\n* Standard Argument:\n```python\nfrom ipparser import ipparser\nfrom argparse import ArgumentParser\n\nargs = ArgumentParser(description='ipparser integration with argparse')\nargs.add_argument('-host', dest='host', default=False, type=lambda x: ipparser(x), help='Host Input')\nargs = args.parse_args()\n```\n```\nNamespace(host=['192.168.1.1'])\n```\n\n* Required Positional Argument (Method 1):\n```python\nfrom ipparser import ipparser\nfrom argparse import ArgumentParser\n\nargs = ArgumentParser(description='ipparser integration with argparse')\nargs.add_argument(dest='positional_host', nargs='+', type=lambda x: ipparser(x, resolve=False), help='Host Input')\nargs = args.parse_args()\n```\n```\nNamespace(positional_host=[['192.168.1.1']])\n```\n\n* Required Positional Argument (Method 2):\n```python\nfrom ipparser import ipparser\nfrom argparse import ArgumentParser\n\nargs = ArgumentParser(description='ipparser integration with argparse')\nargs.add_argument(dest='positional_host', nargs='+', help='Host Input')\nargs = args.parse_args()\nargs.positional_host = ipparser(args.positional_host[0]) \n```\n```\npositional_host=['192.168.1.1'])\n```\n\n* Allow user args to determine resolve setting:\n```python\nfrom sys import argv\nfrom ipparser import ipparser\nfrom argparse import ArgumentParser\n\nr = False\nif \"-r\" in argv:\n    r = True\n\nargs = ArgumentParser(description='ipparser integration with argparse')\nargs.add_argument('-r', dest='resolve',action='store_true', help='Resolve input DNS hosts')\nargs.add_argument(dest='positional_host', nargs='+', type=lambda x: ipparser(x, resolve=r), help='Host Input')\nargs = args.parse_args()\n```\n\n## Sys.argv Usage\n* Standard Argument\n```python\nfrom sys import argv\nfrom ipparser import ipparser\n\nif \"-host\" in argv:\n    host = ipparser(argv[argv.index(\"-host\") + 1])\n```\n```\nhost = ['192.168.1.1']\n```\n\n* Positional Argument\n```python\nfrom sys import argv\nfrom ipparser import ipparser\n\nhost = ipparser(argv[-1])\n```\n```\nhost = ['192.168.1.1']\n```\n\n## Contributors\n* [@darneymartin](https://github.com/darneymartin)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/m8r0wn/ipparser",
    "keywords": "",
    "license": "BSD 3-clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ipparser",
    "package_url": "https://pypi.org/project/ipparser/",
    "platform": "",
    "project_url": "https://pypi.org/project/ipparser/",
    "project_urls": {
      "Homepage": "https://github.com/m8r0wn/ipparser"
    },
    "release_url": "https://pypi.org/project/ipparser/0.3.8/",
    "requires_dist": [
      "dnspython"
    ],
    "requires_python": "",
    "summary": "Parse IP address information and return a list for iteration.",
    "version": "0.3.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15107704,
  "releases": {
    "0.3.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0ab26803f6c14b9044eedcec8ec841e96284142cd59048f60c7efd09eb01fec",
          "md5": "89c53116498737d3425ce6d229bee25c",
          "sha256": "4fb02350b3d38446fe713d5ad7964c2de8b1e382a2fa7bbcc6de9d93c6ffd54c"
        },
        "downloads": -1,
        "filename": "ipparser-0.3.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "89c53116498737d3425ce6d229bee25c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6400,
        "upload_time": "2020-12-31T13:26:45",
        "upload_time_iso_8601": "2020-12-31T13:26:45.142544Z",
        "url": "https://files.pythonhosted.org/packages/e0/ab/26803f6c14b9044eedcec8ec841e96284142cd59048f60c7efd09eb01fec/ipparser-0.3.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0147b6124565ac0fc52f77c286d315aca0791a10a752d8b353560fcc8cb3379",
          "md5": "4d32bf2f43f535ff4937c427d559418c",
          "sha256": "f311dac4e9644080c53f525105a8e65fb2f83412b678a6e7785dfcbbdf9574fc"
        },
        "downloads": -1,
        "filename": "ipparser-0.3.8.tar.gz",
        "has_sig": false,
        "md5_digest": "4d32bf2f43f535ff4937c427d559418c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5205,
        "upload_time": "2020-12-31T13:26:46",
        "upload_time_iso_8601": "2020-12-31T13:26:46.516919Z",
        "url": "https://files.pythonhosted.org/packages/a0/14/7b6124565ac0fc52f77c286d315aca0791a10a752d8b353560fcc8cb3379/ipparser-0.3.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e0ab26803f6c14b9044eedcec8ec841e96284142cd59048f60c7efd09eb01fec",
        "md5": "89c53116498737d3425ce6d229bee25c",
        "sha256": "4fb02350b3d38446fe713d5ad7964c2de8b1e382a2fa7bbcc6de9d93c6ffd54c"
      },
      "downloads": -1,
      "filename": "ipparser-0.3.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "89c53116498737d3425ce6d229bee25c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6400,
      "upload_time": "2020-12-31T13:26:45",
      "upload_time_iso_8601": "2020-12-31T13:26:45.142544Z",
      "url": "https://files.pythonhosted.org/packages/e0/ab/26803f6c14b9044eedcec8ec841e96284142cd59048f60c7efd09eb01fec/ipparser-0.3.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a0147b6124565ac0fc52f77c286d315aca0791a10a752d8b353560fcc8cb3379",
        "md5": "4d32bf2f43f535ff4937c427d559418c",
        "sha256": "f311dac4e9644080c53f525105a8e65fb2f83412b678a6e7785dfcbbdf9574fc"
      },
      "downloads": -1,
      "filename": "ipparser-0.3.8.tar.gz",
      "has_sig": false,
      "md5_digest": "4d32bf2f43f535ff4937c427d559418c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5205,
      "upload_time": "2020-12-31T13:26:46",
      "upload_time_iso_8601": "2020-12-31T13:26:46.516919Z",
      "url": "https://files.pythonhosted.org/packages/a0/14/7b6124565ac0fc52f77c286d315aca0791a10a752d8b353560fcc8cb3379/ipparser-0.3.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}