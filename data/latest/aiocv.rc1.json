{
  "info": {
    "author": "Abhimanyu Sharma",
    "author_email": "speedcuberabhi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python :: 3"
    ],
    "description": "# AIOCV\n\naiocv Is A Python Library Used To Track Hands, Track Pose, Detect Face, Detect Contours (Shapes), Detect Cars, Detect Number Plate, Detect Smile, Detect Eyes, Control Volume Using Gesture, Read QR Codes And Create Face Mesh On Image/Video.\n\n## Installation\n\nUse the package manager [pip](https://pypi.org/project/aiocv/) to install aiocv.\n\n```bash\npip install aiocv\n```\n\n## Usage\n#### Hand Tracking\n```python\nimport aiocv\nimport cv2\nimg = cv2.imread(\"hands.png\")\n# Make An Object\nhands = aiocv.HandTrack()\n# Use findHands() Method To Track Hands On Image/Video\nhands.findHands(img,draw=True)\ncv2.imshow(\"Image\",img)\ncv2.waitKey(0)\n```\n#### Params For findHands() Method :\n```python\nfindHands(self,img=None,draw=True)\n```\n#### If You Are Not Getting Desired Results, Consider Changing detectionConfidence = 1 and trackConfidence = 1\n#### Output :\n![Hand Image](https://raw.githubusercontent.com/0xN1nja/aiocv/master/examples/example4.png)\n#### Pose Detector\n```python\nimport aiocv\nimport cv2\nimg = cv2.imread(\"man.png\")\n# Make An Object\npose = aiocv.PoseDetector()\n# Use findPose() Method To Detect Pose On Image/Video\npose.findPose(img,draw=True)\ncv2.imshow(\"Image\",img)\ncv2.waitKey(0)\n```\n#### Params For findPose() Method :\n```python\nfindPose(self,img=None,draw=True)\n```\n#### If You Are Not Getting Desired Results, Consider Changing detectionConfidence = 1 and trackConfidence = 1\n#### Output :\n![Pose Track Image](https://raw.githubusercontent.com/0xN1nja/aiocv/master/examples/example3.png)\n#### Face Detection\n```python\nimport aiocv\nimport cv2\nimg = cv2.imread(\"elon_musk.png\")\n# Make An Object\nface = aiocv.FaceDetector()\n# Use findFace() Method To Detect Face On Image/Video\nface.findFace(img,draw=True)\ncv2.imshow(\"Image\",img)\ncv2.waitKey(0)\n```\n#### Params For findFace() Method :\n```python\nfindFace(self,img=None,draw=True)\n```\n#### If You Are Not Getting Desired Results, Consider Changing detectionConfidence = 1\n#### Output :\n![Face Detection Image](https://raw.githubusercontent.com/0xN1nja/aiocv/master/examples/example1.png)\n#### Face Mesh\n```python\nimport aiocv\nimport cv2\nimg = cv2.imread(\"elon_musk.png\")\n# Make An Object\nmesh = aiocv.FaceMesh()\n# Use findFaceMesh() Method To Detect Face And Draw Mesh On Image/Video\nmesh.findFaceMesh(img,draw=True)\ncv2.imshow(\"Image\",img)\ncv2.waitKey(0)\n```\n#### Params For findFaceMesh() Method :\n```python\nfindFaceMesh(self,img=None,draw=True)\n```\n#### If You Are Not Getting Desired Results, Consider Changing detectionConfidence = 1 and trackConfidence = 1\n#### Output :\n![Face Mesh Image](https://raw.githubusercontent.com/0xN1nja/aiocv/master/examples/example2.png)\n#### Contour (Shape) Detection\n```python\nimport aiocv\nimport cv2\nimg = cv2.imread(\"shapes.png\")\n# Make An Object\nshape = aiocv.ContourDetector(img)\n# Use findContours() Method To Detect Shapes On Image/Video\nshape.findContours(img,draw=True)\ncv2.imshow(\"Image\",img)\ncv2.waitKey(0)\n```\n#### Output :\n![Contour Detection Image](https://raw.githubusercontent.com/0xN1nja/aiocv/master/examples/example5.png)\n#### Car Detection\n```python\nimport aiocv\nimport cv2\nimg = cv2.imread(\"car.png\")\n# Make An Object\ncar = aiocv.CarDetector(img)\n# Use findCars() Method To Detect Cars On Image/Video\ncar.findCars()\ncv2.imshow(\"Image\",img)\ncv2.waitKey(0)\n```\n#### Params For findCars() Method :\n```python\nfindCars(self,color=(255,0,0),thickness=2)\n```\n#### Output :\n![Car Detection Image](https://raw.githubusercontent.com/0xN1nja/aiocv/master/examples/example9.png)\n#### Number Plate Detection\n```python\nimport aiocv\nimport cv2\nimg = cv2.imread(\"car.png\")\n# Make An Object\ncar = aiocv.NumberPlateDetector(img)\n# Use findNumberPlate() Method To Detect Number Plate On Image/Video\ncar.findNumberPlate()\ncv2.imshow(\"Image\",img)\ncv2.waitKey(0)\n```\n#### Params For findNumberPlate() Method :\n```python\nfindNumberPlate(self,color=(255,0,0),thickness=2)\n```\n#### Output :\n![Number Plate Detection Image](https://raw.githubusercontent.com/0xN1nja/aiocv/master/examples/example6.png)\n#### Smile Detection\n```python\nimport aiocv\nimport cv2\nimg = cv2.imread(\"person.png\")\n# Make An Object\nsmile = aiocv.SmileDetector(img)\n# Use findSmile() Method To Detect Smile On Image/Video\nsmile.findSmile()\ncv2.imshow(\"Image\",img)\ncv2.waitKey(0)\n```\n#### Params For findSmile() Method :\n```python\nfindSmile(self,color=(255,0,0),thickness=2)\n```\n#### Output :\n![Smile Detection Image](https://raw.githubusercontent.com/0xN1nja/aiocv/master/examples/example7.png)\n#### Eyes Detection\n```python\nimport aiocv\nimport cv2\nimg = cv2.imread(\"person.png\")\n# Make An Object\neyes = aiocv.EyesDetector(img)\n# Use findEyes() Method To Detect Eyes On Image/Video\neyes.findEyes()\ncv2.imshow(\"Image\",img)\ncv2.waitKey(0)\n```\n#### Params For findEyes() Method :\n```python\nfindEyes(self,color=(255,0,0),thickness=2)\n```\n#### Output :\n![Eyes Detection Image](https://raw.githubusercontent.com/0xN1nja/aiocv/master/examples/example8.png)\n#### Control Volume Using Gesture\n```python\nimport aiocv\n# Make An Object\ngvc = aiocv.GestureVolumeControl()\n# Use controlVolume() Method To Control Volume\ngvc.controlVolume()\n```\n#### Params For controlVolume() Method :\n```python\ncontrolVolume(self,color=(255,0,0),thickness=2)\n```\n#### Params For GestureVolumeControl Class :\n```python\ngvc = aiocv.GestureVolumeControl(webcamIndex = 0)\n# If You Want To Control From Other Camera, Set The webcamIndex Accordingly.\n```\n#### Output :\n![Gesture Volume Control Image](https://raw.githubusercontent.com/0xN1nja/aiocv/master/examples/example10.png)\n#### Read QR Code\n```python\nimport aiocv\nimport cv2\nimg = cv2.imread(\"qr.png\")\n# Make An Object\nqr = aiocv.QRCodeReader(img)\n# Use findQRCode() Method To Detect QR Code On Image/Video\ntext=qr.findQRCode()\ncv2.imshow(\"Image\",img)\ncv2.waitKey(0)\n```\n#### Params For findQRCode() Method :\n```python\nfindQRCode(self,color=(255,0,0),thickness=3)\n```\n#### To Print The Extracted Text :\n```python\nprint(text)\n```\n#### Output :\n![QR Code Detected Image](https://raw.githubusercontent.com/0xN1nja/aiocv/master/examples/example11.png)\n## Contributing\nPull Requests Are Welcome. For Major Changes, Please Open An Issue First To Discuss What You Would Like To Change.\n\nPlease Make Sure To Update Tests As Appropriate.\n\n## License\n[MIT](https://github.com/0xN1nja/aiocv/blob/master/LICENCE.txt)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,machine-learning,mediapipe,deep-learning,tensorflow",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiocv",
    "package_url": "https://pypi.org/project/aiocv/",
    "platform": null,
    "project_url": "https://pypi.org/project/aiocv/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/aiocv/0.0.36/",
    "requires_dist": [
      "opencv-python",
      "mediapipe",
      "msvc-runtime",
      "pycaw",
      "comtypes",
      "qrcode",
      "numpy"
    ],
    "requires_python": "",
    "summary": "aiocv Is A Python Library Used To Track Hands, Track Pose, Detect Face, Detect Contours (Shapes), Detect Cars, Detect Number Plate, Detect Smile, Detect Eyes, Control Volume Using Gesture, Read QR Codes And Create Face Mesh On Image/Video.",
    "version": "0.0.36",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14727951,
  "releases": {
    "0.0.36": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea2812c18d034e30c8548df012b5c54ee300290dcd22126beb5615ceec80cfc8",
          "md5": "f3d608771256be9a7797b43f57829f45",
          "sha256": "d5b002247ad92f2726300dd5dd85063614f9cc1696d6007004ddd04b0a899084"
        },
        "downloads": -1,
        "filename": "aiocv-0.0.36-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3d608771256be9a7797b43f57829f45",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 124962,
        "upload_time": "2022-08-11T10:59:41",
        "upload_time_iso_8601": "2022-08-11T10:59:41.417879Z",
        "url": "https://files.pythonhosted.org/packages/ea/28/12c18d034e30c8548df012b5c54ee300290dcd22126beb5615ceec80cfc8/aiocv-0.0.36-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e31eaea2e638d4c427fe381927d97c38e9abfbc29aa7819ac30e1b67200be09c",
          "md5": "f287ebf9e3b4385930fe7d05246249af",
          "sha256": "2614f07af208b9c74da893b4bafcd2a8d3db8919a4e3e4fbf1d6bceb6f1d012b"
        },
        "downloads": -1,
        "filename": "aiocv-0.0.36.tar.gz",
        "has_sig": false,
        "md5_digest": "f287ebf9e3b4385930fe7d05246249af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 115232,
        "upload_time": "2022-08-11T10:59:44",
        "upload_time_iso_8601": "2022-08-11T10:59:44.363523Z",
        "url": "https://files.pythonhosted.org/packages/e3/1e/aea2e638d4c427fe381927d97c38e9abfbc29aa7819ac30e1b67200be09c/aiocv-0.0.36.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea2812c18d034e30c8548df012b5c54ee300290dcd22126beb5615ceec80cfc8",
        "md5": "f3d608771256be9a7797b43f57829f45",
        "sha256": "d5b002247ad92f2726300dd5dd85063614f9cc1696d6007004ddd04b0a899084"
      },
      "downloads": -1,
      "filename": "aiocv-0.0.36-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f3d608771256be9a7797b43f57829f45",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 124962,
      "upload_time": "2022-08-11T10:59:41",
      "upload_time_iso_8601": "2022-08-11T10:59:41.417879Z",
      "url": "https://files.pythonhosted.org/packages/ea/28/12c18d034e30c8548df012b5c54ee300290dcd22126beb5615ceec80cfc8/aiocv-0.0.36-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e31eaea2e638d4c427fe381927d97c38e9abfbc29aa7819ac30e1b67200be09c",
        "md5": "f287ebf9e3b4385930fe7d05246249af",
        "sha256": "2614f07af208b9c74da893b4bafcd2a8d3db8919a4e3e4fbf1d6bceb6f1d012b"
      },
      "downloads": -1,
      "filename": "aiocv-0.0.36.tar.gz",
      "has_sig": false,
      "md5_digest": "f287ebf9e3b4385930fe7d05246249af",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 115232,
      "upload_time": "2022-08-11T10:59:44",
      "upload_time_iso_8601": "2022-08-11T10:59:44.363523Z",
      "url": "https://files.pythonhosted.org/packages/e3/1e/aea2e638d4c427fe381927d97c38e9abfbc29aa7819ac30e1b67200be09c/aiocv-0.0.36.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}