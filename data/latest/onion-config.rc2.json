{
  "info": {
    "author": "Batkhuu Byambajav",
    "author_email": "batkhuu10@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Python Config (onion_config)\n\nPython-box based custom config package (onion_config) for python projects.\n\n## Features\n\n* Load environment variables - [https://pypi.org/project/python-dotenv](https://pypi.org/project/python-dotenv)\n* Python-box based config - [https://pypi.org/project/python-box](https://pypi.org/project/python-box)\n* Cerberus schema validation - [https://pypi.org/project/Cerberus](https://pypi.org/project/Cerberus)\n* Custom base config module\n* YAML or JSON based configs\n* Update with extra configs\n* Pre-load config\n* Validate config\n* Freeze config\n* Config as dictioary\n\n---\n\n## Installation\n\n### 1. Prerequisites\n\n* **Python (>= v3.7)**\n* **PyPi (>= v21)**\n\n### 2. Install onion-config\n\n#### A. [RECOMMENDED] PyPi install\n\n```sh\n# Install or upgrade onion-config package:\npip install --upgrade onion-config\n\n# To uninstall package:\npip uninstall -y onion-config\n```\n\n#### B. Manually add to PYTHONPATH (Recommended for development)\n\n```sh\n# Clone repository by git:\ngit clone https://github.com/bybatkhuu/python_config.git onion_config\ncd onion_config\n\n# Install python dependencies:\npip install --upgrade pip\ncat requirements.txt | xargs -n 1 -L 1 pip install --no-cache-dir\n\n# Add current path to PYTHONPATH:\nexport PYTHONPATH=\"${PWD}:${PYTHONPATH}\"\n```\n\n#### C. Manually compile and setup (Not recommended)\n\n```sh\n# Clone repository by git:\ngit clone https://github.com/bybatkhuu/python_config.git onion_config\ncd onion_config\n\n# Building python package:\npip install --upgrade pip setuptools wheel\npython setup.py build\n# Install python dependencies with built package to current python environment:\npython setup.py install --record installed_files.txt\n\n# To remove only installed onion-config package:\nhead -n 1 installed_files.txt | xargs rm -vrf\n# Or to remove all installed files and packages:\ncat installed_files.txt | xargs rm -vrf\n```\n\n## Usage/Examples\n\n### Simple example\n\n**configs/config.yml**:\n\n```yaml\nhostname: \"localhost\"\nusername: \"admin\"\npassword: \"secret\"\n```\n\n**sample.py**:\n\n```python\nfrom pprint import pprint\nfrom onion_config import ConfigBase\n\n\n_valid_schema = {\n    'hostname': { 'type': 'string' },\n    'username': { 'type': 'string' },\n    'password': { 'type': 'string' },\n    'port': { 'type': 'integer', 'coerce': int }\n}\n\ndef _pre_load(config):\n    config.port = '8080'\n    config.opt_val = 'optional value'\n    return config\n\nconfig = ConfigBase(pre_load=_pre_load, valid_schema=_valid_schema).load()\n\n\nif __name__ == '__main__':\n    print(config.hostname)\n    print(config.username)\n    print(config.port)\n    print(config.opt_val)\n    pprint(config.to_dict())\n```\n\n### Advanced example\n\n**configs/app.yml**:\n\n```yaml\nenv: development\n\napp:\n    name: \"My App\"\n    host: 0.0.0.0\n    port: 80\n    secret: \"my-secret\"\n    debug: false\n```\n\n**configs/config.json**:\n\n```json\n{\n    \"app\":\n    {\n        \"logs_dir\": \"/var/log/app\"\n    },\n    \"opt\":\n    {\n        \"val\": \"optional value\",\n        \"integer\": 123\n    }\n}\n```\n\n**.env**:\n\n```sh\nENV=production\n\nAPP_PORT=8080\nAPP_SECRET=\"My_s3crEt_k3y\"\n\nPY_EXTRA_CONFIGS_DIR=\"./extra_configs\"\n```\n\n**extra_configs/app.yml**:\n\n```yaml\napp:\n    name: \"My App - Extra\"\n    description: \"Extra description\"\n```\n\n**utils/validator_schemas.py**:\n\n```python\nconfig_schema = {\n    'env': { 'type': 'string', 'allowed': ['development', 'production'], 'default': 'development' },\n    'app':\n    {\n        'type': 'dict',\n        'schema':\n        {\n            'name': { 'type': 'string', 'minlength': 2, 'maxlength': 255 },\n            'host': { 'type': 'string', 'minlength': 2, 'maxlength': 255 },\n            'port': { 'type': 'integer', 'coerce': int, 'min': 1024, 'max': 65535 },\n            'secret': { 'type': 'string', 'minlength': 12, 'maxlength': 255 },\n            'debug': { 'type': 'boolean' },\n            'logs_dir': { 'type': 'string'}\n        }\n    }\n}\n```\n\n**config.py**:\n\n```python\nimport os\nfrom onion_config import ConfigBase\nfrom utils.validator_schemas import config_schema\n\n\ndef _pre_load(config):\n    try:\n        config.env = os.getenv('ENV', config.env).strip().lower()\n\n        if config.env == 'production':\n            config.app.debug = False\n\n            if os.getenv('APP_SECRET') is None:\n                raise KeyError(\"Missing required `APP_SECRET` environment variable on 'production'!\")\n\n        config.app.port = os.getenv('APP_PORT', config.app.port)\n        config.app.debug = os.getenv('APP_DEBUG', config.app.debug)\n        config.app.secret = os.getenv('APP_SECRET', config.app.secret)\n    except Exception as err:\n        print(f\"ERROR: Error occured while pre-loading config:\\n {err}\")\n        exit(2)\n\n    return config\n\n\nconfig = ConfigBase(pre_load=_pre_load, valid_schema=config_schema).load()\n```\n\n**app.py**:\n\n```python\nfrom pprint import pprint\nfrom flask import Flask\nfrom config import config\n\n\nprint(\"LOADED CONFIG:\")\npprint(config.to_dict())\nprint()\n\n\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello_world():\n    return \"<p>Hello, World!</p>\"\n\nif __name__ == '__main__':\n    app.run(host=config.app.host, port=config.app.port)\n```\n\n---\n\n## Running Tests\n\nTo run tests, run the following command:\n\n```sh\npytest\n```\n\n## Environment Variables\n\nYou can use the following environment variables inside **.env** file:\n\n```bash\nPY_EXTRA_CONFIGS_DIR=\"./extra_configs\"\n```\n\n---\n\n## References\n\n* [https://saurabh-kumar.com/python-dotenv](https://saurabh-kumar.com/python-dotenv)\n* [https://github.com/theskumar/python-dotenv](https://github.com/theskumar/python-dotenv)\n* [https://github.com/cdgriffith/Box/wiki](https://github.com/cdgriffith/Box/wiki)\n* [https://github.com/cdgriffith/Box](https://github.com/cdgriffith/Box)\n* [https://docs.python-cerberus.org/en/stable](https://docs.python-cerberus.org/en/stable)\n* [https://github.com/pyeve/cerberus](https://github.com/pyeve/cerberus)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/bybatkhuu/python_config/archive/v1.0.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bybatkhuu/python_config",
    "keywords": "onion_config,config,configs,python-box,custom-config",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "onion-config",
    "package_url": "https://pypi.org/project/onion-config/",
    "platform": null,
    "project_url": "https://pypi.org/project/onion-config/",
    "project_urls": {
      "Download": "https://github.com/bybatkhuu/python_config/archive/v1.0.1.tar.gz",
      "Homepage": "https://github.com/bybatkhuu/python_config"
    },
    "release_url": "https://pypi.org/project/onion-config/1.0.1/",
    "requires_dist": [
      "python-dotenv (>=0.20.0)",
      "Cerberus (>=1.3.4)",
      "PyYAML (>=6.0)",
      "python-box[pyyaml] (>=6.0.2)"
    ],
    "requires_python": "",
    "summary": "Python-box based custom config package (onion_config) for python projects.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14602978,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6da28c69db81dae72bce851775e7bfd8daedcf81bcc5deba1d9b3fc92054b4e",
          "md5": "469f3b1e808c239e89b83660255da413",
          "sha256": "6422b96b1edc0e1c0af2f6ddfd7b654eadb0de76cb0f206d6eda273ba8f570d0"
        },
        "downloads": -1,
        "filename": "onion_config-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "469f3b1e808c239e89b83660255da413",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7198,
        "upload_time": "2022-06-28T05:48:34",
        "upload_time_iso_8601": "2022-06-28T05:48:34.659726Z",
        "url": "https://files.pythonhosted.org/packages/a6/da/28c69db81dae72bce851775e7bfd8daedcf81bcc5deba1d9b3fc92054b4e/onion_config-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2783be4671170dfa727c0eb1edf8b6856d9788cbf100b4495d9308253c85a7c8",
          "md5": "503ee0f00f150100e541d0b9707aa16d",
          "sha256": "01adca6d64e3355adee9e1191e3f5f37b34ad175bcf661d876f6afcacca937cf"
        },
        "downloads": -1,
        "filename": "onion_config-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "503ee0f00f150100e541d0b9707aa16d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7054,
        "upload_time": "2022-06-28T05:48:35",
        "upload_time_iso_8601": "2022-06-28T05:48:35.965467Z",
        "url": "https://files.pythonhosted.org/packages/27/83/be4671170dfa727c0eb1edf8b6856d9788cbf100b4495d9308253c85a7c8/onion_config-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b6ca0106fcbb8fa6b9db997acbee5b84d0a655b0fbc2eb3fbe7f6e77645ca41",
          "md5": "c0721761ccbcea9d672cb1030e3b535d",
          "sha256": "d7b013481554611c75890a71741948a571acaeee4b4f28d01a97d39d910e6b10"
        },
        "downloads": -1,
        "filename": "onion_config-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c0721761ccbcea9d672cb1030e3b535d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7216,
        "upload_time": "2022-07-31T07:59:03",
        "upload_time_iso_8601": "2022-07-31T07:59:03.033212Z",
        "url": "https://files.pythonhosted.org/packages/1b/6c/a0106fcbb8fa6b9db997acbee5b84d0a655b0fbc2eb3fbe7f6e77645ca41/onion_config-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d212e087bd05cba2bf1bee9ca5ab04d0e2c5cee3c4f58052b079fe55732bd1a",
          "md5": "219331b680212c43bd7791210fffa0e8",
          "sha256": "1a4075b527e8effd1fa36ee5e33123dfeacf81383da93ea97ea3f8c56cd98566"
        },
        "downloads": -1,
        "filename": "onion_config-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "219331b680212c43bd7791210fffa0e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7068,
        "upload_time": "2022-07-31T07:59:04",
        "upload_time_iso_8601": "2022-07-31T07:59:04.440590Z",
        "url": "https://files.pythonhosted.org/packages/1d/21/2e087bd05cba2bf1bee9ca5ab04d0e2c5cee3c4f58052b079fe55732bd1a/onion_config-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1b6ca0106fcbb8fa6b9db997acbee5b84d0a655b0fbc2eb3fbe7f6e77645ca41",
        "md5": "c0721761ccbcea9d672cb1030e3b535d",
        "sha256": "d7b013481554611c75890a71741948a571acaeee4b4f28d01a97d39d910e6b10"
      },
      "downloads": -1,
      "filename": "onion_config-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c0721761ccbcea9d672cb1030e3b535d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7216,
      "upload_time": "2022-07-31T07:59:03",
      "upload_time_iso_8601": "2022-07-31T07:59:03.033212Z",
      "url": "https://files.pythonhosted.org/packages/1b/6c/a0106fcbb8fa6b9db997acbee5b84d0a655b0fbc2eb3fbe7f6e77645ca41/onion_config-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d212e087bd05cba2bf1bee9ca5ab04d0e2c5cee3c4f58052b079fe55732bd1a",
        "md5": "219331b680212c43bd7791210fffa0e8",
        "sha256": "1a4075b527e8effd1fa36ee5e33123dfeacf81383da93ea97ea3f8c56cd98566"
      },
      "downloads": -1,
      "filename": "onion_config-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "219331b680212c43bd7791210fffa0e8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7068,
      "upload_time": "2022-07-31T07:59:04",
      "upload_time_iso_8601": "2022-07-31T07:59:04.440590Z",
      "url": "https://files.pythonhosted.org/packages/1d/21/2e087bd05cba2bf1bee9ca5ab04d0e2c5cee3c4f58052b079fe55732bd1a/onion_config-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}