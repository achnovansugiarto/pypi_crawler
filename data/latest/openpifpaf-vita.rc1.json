{
  "info": {
    "author": "EPFL VITA",
    "author_email": "epfl.vita@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# openpifpaf\n\nContinuously tested on Linux, MacOS and Windows:\n[![Tests](https://github.com/vita-epfl/openpifpaf/workflows/Tests/badge.svg?branch=main)](https://github.com/vita-epfl/openpifpaf/actions?query=workflow%3ATests)\n[![deploy-guide](https://github.com/vita-epfl/openpifpaf/workflows/deploy-guide/badge.svg)](https://github.com/vita-epfl/openpifpaf/actions?query=workflow%3Adeploy-guide)\n[![Downloads](https://pepy.tech/badge/openpifpaf-vita)](https://pepy.tech/project/openpifpaf-vita)\n<br />\n[__New__ 2021 paper](https://arxiv.org/abs/2103.02440):\n\n> __OpenPifPaf: Composite Fields for Semantic Keypoint Detection and Spatio-Temporal Association__<br />\n> _[Sven Kreiss](https://www.svenkreiss.com), [Lorenzo Bertoni](https://scholar.google.com/citations?user=f-4YHeMAAAAJ&hl=en), [Alexandre Alahi](https://scholar.google.com/citations?user=UIhXQ64AAAAJ&hl=en)_, 2021.\n>\n> Many image-based perception tasks can be formulated as detecting, associating\n> and tracking semantic keypoints, e.g., human body pose estimation and tracking.\n> In this work, we present a general framework that jointly detects and forms\n> spatio-temporal keypoint associations in a single stage, making this the first\n> real-time pose detection and tracking algorithm. We present a generic neural\n> network architecture that uses Composite Fields to detect and construct a\n> spatio-temporal pose which is a single, connected graph whose nodes are the\n> semantic keypoints (e.g., a person's body joints) in multiple frames. For the\n> temporal associations, we introduce the Temporal Composite Association Field\n> (TCAF) which requires an extended network architecture and training method\n> beyond previous Composite Fields. Our experiments show competitive accuracy\n> while being an order of magnitude faster on multiple publicly available datasets\n> such as COCO, CrowdPose and the PoseTrack 2017 and 2018 datasets. We also show\n> that our method generalizes to any class of semantic keypoints such as car and\n> animal parts to provide a holistic perception framework that is well suited for\n> urban mobility such as self-driving cars and delivery robots.\n\nPrevious [CVPR 2019 paper](http://openaccess.thecvf.com/content_CVPR_2019/html/Kreiss_PifPaf_Composite_Fields_for_Human_Pose_Estimation_CVPR_2019_paper.html).\n\nThis project was forked from [OpenPifPaf v0.13.1](https://github.com/openpifpaf/openpifpaf/releases/tag/v0.13.1) and developed separately from version v0.14.0 on.\n\n\n# [Guide](https://vita-epfl.github.io/openpifpaf/intro.html)\n\nDetailed documentation is in our __[OpenPifPaf Guide](https://vita-epfl.github.io/openpifpaf/intro.html)__.\nFor developers, there is also the\n__[DEV Guide](https://vita-epfl.github.io/openpifpaf/dev/intro.html)__\nwhich is the same guide but based on the latest code in the `main` branch.\n\n\n# Examples\n\n![example image with overlaid pose predictions](https://github.com/vita-epfl/openpifpaf/raw/main/docs/coco/000000081988.jpg.predictions.jpeg)\n\nImage credit: \"[Learning to surf](https://www.flickr.com/photos/fotologic/6038911779/in/photostream/)\" by fotologic which is licensed under [CC-BY-2.0].<br />\nCreated with:\n```sh\npip3 install matplotlib openpifpaf\npython3 -m openpifpaf.predict docs/coco/000000081988.jpg --image-output\n```\n\n---\n\nHere is the [tutorial for body, foot, face and hand keypoints](https://vita-epfl.github.io/openpifpaf/plugins_wholebody.html). Example:\n![example image with overlaid wholebody pose predictions](https://raw.githubusercontent.com/vita-epfl/openpifpaf/main/docs/soccer.jpeg.predictions.jpeg)\n\nImage credit: [Photo](https://de.wikipedia.org/wiki/Kamil_Vacek#/media/Datei:Kamil_Vacek_20200627.jpg) by [Lokomotive74](https://commons.wikimedia.org/wiki/User:Lokomotive74) which is licensed under [CC-BY-4.0](https://creativecommons.org/licenses/by/4.0/).<br />\nCreated with:\n```sh\npython -m openpifpaf.predict guide/wholebody/soccer.jpeg \\\n  --checkpoint=shufflenetv2k30-wholebody --line-width=2 --image-output\n```\n\n---\n\nHere is the [tutorial for car keypoints](https://vita-epfl.github.io/openpifpaf/plugins_apollocar3d.html). Example:\n![example image cars](https://raw.githubusercontent.com/vita-epfl/openpifpaf/main/docs/peterbourg.jpg.predictions.jpeg)\n\nImage credit: [Photo](https://commons.wikimedia.org/wiki/File:Streets_of_Saint_Petersburg,_Russia.jpg) by [Ninaras](https://commons.wikimedia.org/wiki/User:Ninaras) which is licensed under [CC-BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/).\n\nCreated with:\n```sh\npython -m openpifpaf.predict guide/images/peterbourg.jpg \\\n  --checkpoint shufflenetv2k16-apollo-24 -o images \\\n  --instance-threshold 0.05 --seed-threshold 0.05 \\\n  --line-width 4 --font-size 0\n```\n\n---\n\nHere is the [tutorial for animal keypoints (dogs, cats, sheep, horses and cows)](https://vita-epfl.github.io/openpifpaf/plugins_animalpose.html). Example:\n![example image cars](https://raw.githubusercontent.com/vita-epfl/openpifpaf/main/docs/tappo_loomo.jpg.predictions.jpeg)\n\n\n```sh\npython -m openpifpaf.predict guide/images tappo_loomo.jpg \\\n  --checkpoint=shufflenetv2k30-animalpose \\\n  --line-width=6 --font-size=6 --white-overlay=0.3 \\\n  --long-edge=500\n```\n\n\n# Commercial License\n\nThe open source license is in the [LICENSE](https://github.com/vita-epfl/openpifpaf/blob/main/LICENSE) file.\nThis software is also available for licensing via the EPFL Technology Transfer\nOffice (https://tto.epfl.ch/, info.tto@epfl.ch).\n\n\n[CC-BY-2.0]: https://creativecommons.org/licenses/by/2.0/",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vita-epfl/openpifpaf",
    "keywords": "",
    "license": "GNU AGPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "openpifpaf-vita",
    "package_url": "https://pypi.org/project/openpifpaf-vita/",
    "platform": "",
    "project_url": "https://pypi.org/project/openpifpaf-vita/",
    "project_urls": {
      "Homepage": "https://github.com/vita-epfl/openpifpaf"
    },
    "release_url": "https://pypi.org/project/openpifpaf-vita/0.14.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "PifPaf: Composite Fields for Pose Estimation",
    "version": "0.14.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12891331,
  "releases": {
    "0.14.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a2f92b0322855cfb8906c2421ac922c03f0241dc1d47576f497ac7fcc12eafd",
          "md5": "ee16bdaa7b336b009d3e94d6f3cdc308",
          "sha256": "780507b22e43ee105baa5cfeaa8dbb4684293d9d91c2562b4cfb6cd1b15e4fc0"
        },
        "downloads": -1,
        "filename": "openpifpaf-vita-0.14.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ee16bdaa7b336b009d3e94d6f3cdc308",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 224139,
        "upload_time": "2022-02-14T23:01:11",
        "upload_time_iso_8601": "2022-02-14T23:01:11.871701Z",
        "url": "https://files.pythonhosted.org/packages/3a/2f/92b0322855cfb8906c2421ac922c03f0241dc1d47576f497ac7fcc12eafd/openpifpaf-vita-0.14.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a2f92b0322855cfb8906c2421ac922c03f0241dc1d47576f497ac7fcc12eafd",
        "md5": "ee16bdaa7b336b009d3e94d6f3cdc308",
        "sha256": "780507b22e43ee105baa5cfeaa8dbb4684293d9d91c2562b4cfb6cd1b15e4fc0"
      },
      "downloads": -1,
      "filename": "openpifpaf-vita-0.14.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ee16bdaa7b336b009d3e94d6f3cdc308",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 224139,
      "upload_time": "2022-02-14T23:01:11",
      "upload_time_iso_8601": "2022-02-14T23:01:11.871701Z",
      "url": "https://files.pythonhosted.org/packages/3a/2f/92b0322855cfb8906c2421ac922c03f0241dc1d47576f497ac7fcc12eafd/openpifpaf-vita-0.14.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}