{
  "info": {
    "author": "Remco Haszing",
    "author_email": "remcohaszing@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Python Audiolayer\n=================\n\nThis package contains a Python 3 Extension for playing audio files, reading and\nwriting metadata and converting those files. For decoding and encoding files\nthe libav_ library is used. Playback is handled by libportaudio_.\n\nThe project website can be found at\n`GitHub\n<https://github.com/remcohaszing/python-audiolayer>`_.\n\n\nRequirements\n------------\n\n- python3.x (Tested using python3.3)\n- libavcodec\n- libavformat\n- libavutil\n- libportaudio\n\n\nInstallation\n------------\n\nUsing pip::\n\n    pip install audiolayer\n\nFrom GitHub::\n\n    git clone https://github.com/remcohaszing/python-audiolayer.git\n    cd python-audiolayer\n    python3 setup.py install\n\n\nUsage\n-----\n\nReading song metadata:\n\n>>> from audiolayer import Song\n>>> filename = 'Finntroll - Trollhammaren.flac'\n>>> song = Song(filename)\n>>> song['artist']\nFinntroll\n>>> song['album']\nTrollhammaren\n>>> song['title']\nTrollhammaren\n>>>\n\nSaving song metadata:\n\n>>> song['album'] = 'Nattfödd'\n>>> song['album']\n'Nattfödd'\n>>> song.save()\n>>>\n\nSaving a copy of the song with the new metadata to a new file:\n>>> song.save(filename='Finntroll/Nattfödd - Trollhammaren.flac')\n>>>\n\nConverting the song (not implemented):\n\n>>> converted = song.convert('Finntroll - Trollhammaren.ogg',\n...                          format='opus', q=4)\n>>> converted.filename\nFinntroll - Trollhammaren.ogg\n>>>\n\nPlayback (current implementation):\n\n>>> song.play()  # Wait for the song to finish.\n>>>\n\nPlayback (target implementation):\n\n>>> song.play()\n0.00\n>>> song.pause()\n4.29\n>>> song.play_or_pause()\n4.29\n>>> song.playing_time\n12.53\n>>>\n\n\nTesting\n-------\n\nThe unittests can be run using::\n\n    python3 setup.py test\n\nIt is also possible to use nose_ to run the tests::\n\n    python3 setup.py nosetests\n\n\nCoding style\n------------\n\n- C code must be in compliance with pep7_.\n- Python code must be in compliance with pep8_.\n- All code must be covered by unittests.\n\nTo test the Python code for pep8 compliance, go to the project root directory\nand run::\n\n    python3 setup.py flake8\n\n\nLicense\n-------\n\nThis project is licensed under the BSD 3-Clause License.\n\n\n.. _libav: https://libav.org\n.. _libportaudio: http://portaudio.com/\n.. _nose: http://nose.readthedocs.org\n.. _pep7: http://www.python.org/dev/peps/pep-0007\n.. _pep8: http://www.python.org/dev/peps/pep-0008",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/RemcoHaszing/python-audiolayer/archive/master.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RemcoHaszing/python-audiolayer",
    "keywords": null,
    "license": "BSD 3-Clause License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "audiolayer",
    "package_url": "https://pypi.org/project/audiolayer/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/audiolayer/",
    "project_urls": {
      "Download": "https://github.com/RemcoHaszing/python-audiolayer/archive/master.zip",
      "Homepage": "https://github.com/RemcoHaszing/python-audiolayer"
    },
    "release_url": "https://pypi.org/project/audiolayer/0.1.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "This module provides a wrapper around the libav C library",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1092585,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17747dab42def0e05b1b12ebb6fef8c07a0d3e43db3a3b04cb0f936a7372c30e",
          "md5": "4933985ccd398e8fc77fb04aa3d2af8b",
          "sha256": "93e658e83925426b82c3aed2e4e57aea2fcb0f56ecebc325839b41e727868db5"
        },
        "downloads": -1,
        "filename": "audiolayer-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4933985ccd398e8fc77fb04aa3d2af8b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9927,
        "upload_time": "2013-11-05T21:01:25",
        "upload_time_iso_8601": "2013-11-05T21:01:25.101621Z",
        "url": "https://files.pythonhosted.org/packages/17/74/7dab42def0e05b1b12ebb6fef8c07a0d3e43db3a3b04cb0f936a7372c30e/audiolayer-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "17747dab42def0e05b1b12ebb6fef8c07a0d3e43db3a3b04cb0f936a7372c30e",
        "md5": "4933985ccd398e8fc77fb04aa3d2af8b",
        "sha256": "93e658e83925426b82c3aed2e4e57aea2fcb0f56ecebc325839b41e727868db5"
      },
      "downloads": -1,
      "filename": "audiolayer-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4933985ccd398e8fc77fb04aa3d2af8b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9927,
      "upload_time": "2013-11-05T21:01:25",
      "upload_time_iso_8601": "2013-11-05T21:01:25.101621Z",
      "url": "https://files.pythonhosted.org/packages/17/74/7dab42def0e05b1b12ebb6fef8c07a0d3e43db3a3b04cb0f936a7372c30e/audiolayer-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}