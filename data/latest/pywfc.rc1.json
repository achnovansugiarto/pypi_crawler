{
  "info": {
    "author": "TeamNightSky",
    "author_email": "teamnightsky.gh@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent"
    ],
    "description": "# PyWFC\n## Overview\nPyWFC is an implementation of the [Wave Function Collapse Algorithm](https://github.com/mxgmn/WaveFunctionCollapse).\n## Installation\nUse `pip install pywfc` to install via pip\nOr use `git clone https://github.com/FoxNerdSaysMoo/PyWFC && python PyWFC/setup.py` (not tested yet)\n\n## Usage\n\nContains 3 main classes: `Wave`, `State`, `Rule`\n```py\nfrom wfc import Wave, State, Rule\n```\n\n`Rule` determines where a state can be, and `State` contains a `Rule` and a name.\n```py\ngrass = State(\n    \"grass\",\n    Rule(\n        lambda x, y : {  # Rule uses a lambda\n            (x, y+1): [\"air\"],  # Which takes the x and y coordinate of the state\n            (x, y-1): [\"dirt\", \"stone\"]  # And returns what the states relative to it must be\n        }\n    )\n)\n\ndirt = State(\n    \"dirt\",\n    Rule(\n        lambda x, y: {\n            (x, y+1): [\"dirt\", \"grass\"],\n            (x, y-1): [\"stone\", \"dirt\"]\n        }\n    )\n)\n\nstone = State(\n    \"stone\",\n    Rule(\n        lambda x, y : {\n            (x, y+1): [\"stone\", \"dirt\"]\n        }\n    )\n)\n\nair = State(\n    \"air\",\n    Rule(\n        lambda x, y : {\n            (x, y+1): [\"air\"]\n        }\n    )\n)\n```\n\nA `Wave` takes in the dims of the output grid, along with the states that will populate it.\n```py\nlandscape_wave = Wave(\n    (10, 40),\n    [grass, dirt, stone, air]\n)\n```\nNow all you need to do is collapse the wave!\n```py\nlandscape = landscape_wave.collapse()\n```\nNow you have a multidimensional list of `Potential`s that have one single state now.\n> `Potential` is a class used inside of wfc, which represents the potentials states before, during, and after the wave function collapse.\n\n```py\nimport colorama\n\ncmap = {\n    \"air\": colorama.Fore.WHITE,\n    \"grass\": colorama.Fore.GREEN,\n    \"dirt\": colorama.Fore.YELLOW,\n    \"stone\": colorama.Fore.BLACK\n}\n\nfor row in landscape:\n    for item in row:\n        print(cmap[item.state.name] + \"â–ˆ\" + colorama.Fore.RESET, end=\"\")\n    print()\n```\nThere you go! Those are the current classes and example usages of them. There are many planned features and expansions to be added to PyWFC, however we are taking our time to ensure they are the best possible they can be.\n\n### Thanks for checking out PyWFC, and we hope you like it ;)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FoxNerdSaysMoo/PyWFC",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pywfc",
    "package_url": "https://pypi.org/project/pywfc/",
    "platform": "",
    "project_url": "https://pypi.org/project/pywfc/",
    "project_urls": {
      "Homepage": "https://github.com/FoxNerdSaysMoo/PyWFC"
    },
    "release_url": "https://pypi.org/project/pywfc/0.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Python3 Wave Function Collapse Algorithm implementation",
    "version": "0.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9962424,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b370400cf2c8d73648e6455c3f3b9781342eeb4121c980111f344739b77b7e3c",
          "md5": "25810b5e72f90a2bdaa9c12dafbf960a",
          "sha256": "8b30787886d25cc0d2e8805ac02c53bf3754bde097d0631a24531e9db2b75cdf"
        },
        "downloads": -1,
        "filename": "pywfc-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "25810b5e72f90a2bdaa9c12dafbf960a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3708,
        "upload_time": "2021-04-02T23:28:35",
        "upload_time_iso_8601": "2021-04-02T23:28:35.908950Z",
        "url": "https://files.pythonhosted.org/packages/b3/70/400cf2c8d73648e6455c3f3b9781342eeb4121c980111f344739b77b7e3c/pywfc-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7aae9d65dff8ed52334370662ed4dceb473f78ac36ebaa152079e8449302aa2",
          "md5": "1e50a0315893d611e8c4e365f51cbe83",
          "sha256": "f60bcb49584a8d29ae45f1ffd4c1c851ff83c61ab68dc9d9c4b398cc3fab3a3c"
        },
        "downloads": -1,
        "filename": "pywfc-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1e50a0315893d611e8c4e365f51cbe83",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3535,
        "upload_time": "2021-04-02T23:28:37",
        "upload_time_iso_8601": "2021-04-02T23:28:37.339476Z",
        "url": "https://files.pythonhosted.org/packages/d7/aa/e9d65dff8ed52334370662ed4dceb473f78ac36ebaa152079e8449302aa2/pywfc-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b370400cf2c8d73648e6455c3f3b9781342eeb4121c980111f344739b77b7e3c",
        "md5": "25810b5e72f90a2bdaa9c12dafbf960a",
        "sha256": "8b30787886d25cc0d2e8805ac02c53bf3754bde097d0631a24531e9db2b75cdf"
      },
      "downloads": -1,
      "filename": "pywfc-0.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "25810b5e72f90a2bdaa9c12dafbf960a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 3708,
      "upload_time": "2021-04-02T23:28:35",
      "upload_time_iso_8601": "2021-04-02T23:28:35.908950Z",
      "url": "https://files.pythonhosted.org/packages/b3/70/400cf2c8d73648e6455c3f3b9781342eeb4121c980111f344739b77b7e3c/pywfc-0.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d7aae9d65dff8ed52334370662ed4dceb473f78ac36ebaa152079e8449302aa2",
        "md5": "1e50a0315893d611e8c4e365f51cbe83",
        "sha256": "f60bcb49584a8d29ae45f1ffd4c1c851ff83c61ab68dc9d9c4b398cc3fab3a3c"
      },
      "downloads": -1,
      "filename": "pywfc-0.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1e50a0315893d611e8c4e365f51cbe83",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3535,
      "upload_time": "2021-04-02T23:28:37",
      "upload_time_iso_8601": "2021-04-02T23:28:37.339476Z",
      "url": "https://files.pythonhosted.org/packages/d7/aa/e9d65dff8ed52334370662ed4dceb473f78ac36ebaa152079e8449302aa2/pywfc-0.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}