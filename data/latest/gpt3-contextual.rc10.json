{
  "info": {
    "author": "uezo",
    "author_email": "uezo@uezo.net",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "# gpt3-contextual\n\nContextual chat with ChatGPT / GPT-3 of OpenAI API.\n\n# ✨ ChatGPT is now available!\n\nNOTE:\n- This feature is an experimental version.\n- Parameters for GPT-3 Completion API will be ignored.\n- We may change the interface in the (near) future.\n\n\n# 🚀 Quick start\n\nInstall.\n\n```bash\n$ pip install gpt3-contextual\n```\n\nMake script as console.py.\n\n```python\nimport asyncio\nfrom gpt3contextual import ContextualChat, ContextManager\n\nasync def main():\n    cm = ContextManager()\n    cc = ContextualChat(\"YOUR_OPENAI_APIKEY\", context_manager=cm)\n\n    while True:\n        text = input(\"Human> \")\n        resp, prompt, completion = await cc.chat(\"user1234567890\", text)\n        print(f\"AI> {resp}\")\n\nasyncio.run(main())\n```\n\nRun console.py and chat with GPT-3.\n\n```\nhuman> hello\nAI>  Hi, how can I help you?\nhuman> I'm hungry\nAI>  What would you like to eat?\nhuman> sandwitches\nAI>  What kind of sandwich would you like?\nhuman> ham&egg        \nAI>  Would you like that on a white or wheat bread?\nhuman> wheet\nAI>  Would you like anything else with your ham and egg sandwich on wheat bread?\nhuman> Everything is fine, thank you.\nAI>  Great! Your order has been placed. Enjoy your meal!\n```\n\nIf you want to use ChatGPT, use `ContextualChatGTP` instead of `ContextualChat` like below:\n\n```python\nimport asyncio\nfrom gpt3contextual import ContextualChatGTP, ContextManager\n\nasync def main():\n    cm = ContextManager()\n    cc = ContextualChatGTP(\"YOUR_OPENAI_APIKEY\", context_manager=cm)\n\n    while True:\n        text = input(\"Human> \")\n        resp, prompt, completion = await cc.chat(\"user1234567890\", text)\n        print(f\"AI> {resp}\")\n\nasyncio.run(main())\n```\n\n\n# 🧸 Usage\n\nYou can set parameters to customize conversation senario when you make the instance of `ContextManager`.\n\n- `timeout`: int : Stored context will be ignored when timeout(sec) passed after last updated.\n- `username`: str : Name of roll of user. Default=`Human`.\n- `agentname`: str = Name or role of agent(bot). Default=`AI`.\n- `chat_description`: str : Some conditions to be considered in the senario of conversation.\n- `history_count`: int: History count to use in prompt.\n\nIf you want to change these values for specific user(context) at runtime, call `ContextManager#reset`.\n\n```python\ncontext_manager.reset(\"user1234567890\", username=\"兄\", agentname=\"妹\", chat_description=\"仲のいい兄と妹の会話です。丁寧語は使いません。\")\n```\n\nAnd, you can customize OpenAI specs to pass the parameters to `ContextualChat`.\nSee also https://platform.openai.com/docs/api-reference/completions to understand more.\n\n- `api_key`: str : API key for OpenAI API.\n- `connection_str`: str : SQLAlchemy connection string for database. Default=`sqlite:///gpt3contextual.db`.\n- `context_manager`: ContextManager : ContextManager you build.\n- `model`: str : The AI model to use. Default=`text-davinci-003`.\n- `temperature`: float : What sampling temperature to use, between 0 and 2. Default=`0.5`.\n- `max_tokens`: int : The maximum number of tokens to generate in the completion. Default=`2000`.\n- `**completion_params`: Other parameters for completions if you want to set.\n\nEspecially, to use other RDBMS instead of SQLite, set `connection_str` like bellow:\n\n```python\ncc = ContextualChat(\n    \"YOUR_OPENAI_APIKEY\",\n    connection_str=\"postgresql://user:password@host:port/dbname\",\n    context_manager=cm\n)\n```\n\n\n# 💡 Tips\n\nGPT-3 has capability of various kinds of task such as chat, research, translation, calculation, games and so on. You can switch the \"mode\" by setting `username`, `agentname` and `chat_description` like below.\n\n```python\n# Translation\ncm = ContextManager(username=\"English\", agentname=\"Japanese\", chat_description=\"Translate from English to Japanese.\")\n# Calculation\ncm = ContextManager(username=\"Question\", agentname=\"Answer\", chat_description=\"Calculate.\")\n# Customizing end of sentence (Japanese)\ncm = ContextManager(username=\"兄\", agentname=\"妹\", chat_description=\"これは兄と妹との会話です。妹は語尾に「ニャ」をつけて話します。\")\n```\n\n\n# 🔥 Host your own API server\n\nSet your OpenAI API key and secret access key for configuration endpoints to `example/api.py`\n\n```python\n# Settings\nopenai_apikey = \"SET_YOUR_OPENAI_API_KEY\"\nconfig_access_key = \"CHANGE_THIS_VALUE_AS_YOU_LIKE\"\n```\n\nInstall dependencies.\n\n```bash\n$ pip install uvicorn fastapi\n```\n\nRun.\n\n```bash\n$ uvicorn run:app\n```\n\nSee API document and try APIs. 👉 http://127.0.0.1:8000/docs\n\nIf you want to change IP address or port, start uvicorn like this:\n\n```bash\n$ uvicorn run:app --host 0.0.0.0 --port 80\n```\n\nAnd, if you want to run this API in multi-process, use database for context management.\nSee `gpt3contextual.context.SQLiteContextManager` and customize it for the RDBMS you want to use.\n\nEnjoy your own contextual GPT-3 API👍\n\n\n# 🥪 How it works\n\n**This chapter is based on `text-davinci-003`**\n\nAs you know, `Completion` endpoint doesn't provide the features for keep and use context.\nSo, simply, this library send the previous conversation histories with the request text like below.\n\nPrompt on the 1st turn:\n```\nhuman:hello\nAI:\n```\nChatbot returns `Hi, how can I help you?`.\n\nPrompt on the 2nd turn:\n```\nhuman:hello\nAI:Hi, how can I help you?\nhuman:I'm hungry\nAI:\n```\nChatbot returns `What would you like to eat?`\n\n:\n\nPrompt on the 6th turn:\n```\nhuman:sandwitches\nAI:What kind of sandwich would you like?\nhuman:ham&egg        \nAI:Would you like that on a white or wheat bread?\nhuman:wheet\nAI:Would you like anything else with your ham and egg sandwich on wheat bread?\nhuman:Everything is fine, thank you.\nAI:\n```\nChatbot returns `Great! Your order has been placed. Enjoy your meal!`\n\n\nIf you change the `username` and `agentname` the senario of conversation changes.\nAnd, setting `chat_description` also make effects on the situations.\n\nHere is an example to simulate the conversation by brother and sister in Japanese.\n\n```python\ncm = ContextManager(\n    username=\"兄\",\n    agentname=\"妹\",\n    chat_description=\"これは兄と親しい妹との会話です。仲良しなので丁寧語を使わずに話してください。\"\n)\ncc = ContextualChat(\"YOUR_OPENAI_APIKEY\", context_manager=cm)\n```\n\nPrompt to be sent to OpenAI API is like bellow. `chat_description` is always set to the first line, no matter how many turns of conversation proceed.\n\n```\nこれは兄と親しい妹との会話です。仲良しなので丁寧語を使わずに話してください。\n兄:おはよー\n妹:おはよー！今日の予定は？\n兄:いつも通り、特にないよ\n妹:じゃあ、今日は一緒に遊ぼうよ！\n兄:何かしたいことある？\n妹:うん、今日は映画を見よう！\n兄:いいね。 どんなのがいい？\n妹:思いついた！サスペンス映画がいいかな！\n````\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/uezo/gpt3-contextual",
    "keywords": "",
    "license": "MIT",
    "maintainer": "uezo",
    "maintainer_email": "uezo@uezo.net",
    "name": "gpt3-contextual",
    "package_url": "https://pypi.org/project/gpt3-contextual/",
    "platform": null,
    "project_url": "https://pypi.org/project/gpt3-contextual/",
    "project_urls": {
      "Homepage": "https://github.com/uezo/gpt3-contextual"
    },
    "release_url": "https://pypi.org/project/gpt3-contextual/0.7.1/",
    "requires_dist": [
      "openai (==0.27.0)",
      "SQLAlchemy (==2.0.4)"
    ],
    "requires_python": "",
    "summary": "Contextual chat with ChatGPT / GPT-3 of OpenAI API.",
    "version": "0.7.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17142105,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb5ae35fbda39fd059b3edf6a2bfca9fd986a79b0bcaf44e2e3052ef095f5051",
          "md5": "a1ec264f22c5af55b6ad5762869229d8",
          "sha256": "4456747f1cecf7c4abbb537ce5c46e49912b097c95bd8eea145b2b0ceab3499f"
        },
        "downloads": -1,
        "filename": "gpt3_contextual-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a1ec264f22c5af55b6ad5762869229d8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5401,
        "upload_time": "2023-02-11T14:37:11",
        "upload_time_iso_8601": "2023-02-11T14:37:11.224056Z",
        "url": "https://files.pythonhosted.org/packages/cb/5a/e35fbda39fd059b3edf6a2bfca9fd986a79b0bcaf44e2e3052ef095f5051/gpt3_contextual-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbdfb6e60df12865df2baddad3950357db5dd0d97f73d40329acabba3c35510d",
          "md5": "a6f880f7848244d2689aed7573de552c",
          "sha256": "d1bf0d7f7f6ae9dc453daf6cadda0f641886ff08e7f0114ca7e7b5cd18f2048d"
        },
        "downloads": -1,
        "filename": "gpt3_contextual-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6f880f7848244d2689aed7573de552c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5953,
        "upload_time": "2023-02-13T11:43:32",
        "upload_time_iso_8601": "2023-02-13T11:43:32.602984Z",
        "url": "https://files.pythonhosted.org/packages/fb/df/b6e60df12865df2baddad3950357db5dd0d97f73d40329acabba3c35510d/gpt3_contextual-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bcf14ea1f1f720ec56a2aba45a20a99b08f68e697f7ad1c393c817548ada090",
          "md5": "b4be5fab7968dac5802c9dece79dcf74",
          "sha256": "a8b19a701081b87c52e01d308211174048a10df5fcda6ca4913647fdd121a9d4"
        },
        "downloads": -1,
        "filename": "gpt3_contextual-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4be5fab7968dac5802c9dece79dcf74",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6576,
        "upload_time": "2023-02-13T17:22:27",
        "upload_time_iso_8601": "2023-02-13T17:22:27.962319Z",
        "url": "https://files.pythonhosted.org/packages/8b/cf/14ea1f1f720ec56a2aba45a20a99b08f68e697f7ad1c393c817548ada090/gpt3_contextual-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8f957a57b775bd68aca5dd255c768836df6174fee5ee27e1280c8ff2b4ec1e2",
          "md5": "79f0db69ae0e9de533c2e8a50425d9a5",
          "sha256": "cc4b834bcbe2faa416e5a053ff6b6f275c367f72362aa61987ec0dcae6e0af4e"
        },
        "downloads": -1,
        "filename": "gpt3_contextual-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79f0db69ae0e9de533c2e8a50425d9a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7028,
        "upload_time": "2023-02-21T15:04:01",
        "upload_time_iso_8601": "2023-02-21T15:04:01.587364Z",
        "url": "https://files.pythonhosted.org/packages/b8/f9/57a57b775bd68aca5dd255c768836df6174fee5ee27e1280c8ff2b4ec1e2/gpt3_contextual-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fffaa86f08662d7a4db2ffb1500301c82e80a7c5512045f0493b0b463e34b201",
          "md5": "48ef43d992853eb1e8b88321de74b035",
          "sha256": "1ce3fdbad573aaee3983b1c5a0e3f58720e84c528aed734ba08c1c61cea77d78"
        },
        "downloads": -1,
        "filename": "gpt3_contextual-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "48ef43d992853eb1e8b88321de74b035",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7335,
        "upload_time": "2023-02-23T14:49:25",
        "upload_time_iso_8601": "2023-02-23T14:49:25.415219Z",
        "url": "https://files.pythonhosted.org/packages/ff/fa/a86f08662d7a4db2ffb1500301c82e80a7c5512045f0493b0b463e34b201/gpt3_contextual-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e663a94b439b8700b662d21b398b5a9319cd1b86c163d691a0b93094803494a",
          "md5": "40846fba1cab6218343ff9e094162592",
          "sha256": "e441f00397a13745bb25c8581d87302a3ec8c391a0ac940ffffe2763464b208e"
        },
        "downloads": -1,
        "filename": "gpt3_contextual-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "40846fba1cab6218343ff9e094162592",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7456,
        "upload_time": "2023-02-23T15:12:26",
        "upload_time_iso_8601": "2023-02-23T15:12:26.313277Z",
        "url": "https://files.pythonhosted.org/packages/7e/66/3a94b439b8700b662d21b398b5a9319cd1b86c163d691a0b93094803494a/gpt3_contextual-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a490c2b61a4875209757670ec80063d899397cf886c2b1a789118279fe169c4",
          "md5": "983f49d4f9b08a5fea9b3ab5ef844784",
          "sha256": "9e0408b8ae4677ed60ed094b68d0dfff1f0e3e67e60adae8d46f206eb4c065d8"
        },
        "downloads": -1,
        "filename": "gpt3_contextual-0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "983f49d4f9b08a5fea9b3ab5ef844784",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7934,
        "upload_time": "2023-03-02T01:09:39",
        "upload_time_iso_8601": "2023-03-02T01:09:39.231388Z",
        "url": "https://files.pythonhosted.org/packages/5a/49/0c2b61a4875209757670ec80063d899397cf886c2b1a789118279fe169c4/gpt3_contextual-0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25e3f6a9a8ae1f980f6549f5300bdcc89ecce41cef381d5d9d04fd49c0dec9aa",
          "md5": "b63d072fd9f56630e91b67b6d5954fa6",
          "sha256": "d1d9a9a379cd08af22efc45501ce2fad1b974367a3b271510b0dbf41c3c61428"
        },
        "downloads": -1,
        "filename": "gpt3_contextual-0.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b63d072fd9f56630e91b67b6d5954fa6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7954,
        "upload_time": "2023-03-02T02:21:07",
        "upload_time_iso_8601": "2023-03-02T02:21:07.773021Z",
        "url": "https://files.pythonhosted.org/packages/25/e3/f6a9a8ae1f980f6549f5300bdcc89ecce41cef381d5d9d04fd49c0dec9aa/gpt3_contextual-0.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f33eeafc6da600a5a2483c3f551161ded524fa2c32f3e71310fe837989507275",
          "md5": "b8c028e4a1a0ed153c6fc05a9f6ead29",
          "sha256": "c377dc8bf2621d68acefac49b0df7a5dab4c771d42042072837fd77ded5cb136"
        },
        "downloads": -1,
        "filename": "gpt3_contextual-0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b8c028e4a1a0ed153c6fc05a9f6ead29",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8106,
        "upload_time": "2023-03-02T12:52:37",
        "upload_time_iso_8601": "2023-03-02T12:52:37.795136Z",
        "url": "https://files.pythonhosted.org/packages/f3/3e/eafc6da600a5a2483c3f551161ded524fa2c32f3e71310fe837989507275/gpt3_contextual-0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c225110991ac959805d7ce19769bd5e42bbc6a408fdbcb8786d86d5651e1759",
          "md5": "52017d053f0445ac7e540a5aff0918f0",
          "sha256": "40838b4089d2e71652fe14704573e3abd04d65e6cee17fa4992947de5c015b3f"
        },
        "downloads": -1,
        "filename": "gpt3_contextual-0.7.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "52017d053f0445ac7e540a5aff0918f0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8202,
        "upload_time": "2023-03-03T09:55:34",
        "upload_time_iso_8601": "2023-03-03T09:55:34.345537Z",
        "url": "https://files.pythonhosted.org/packages/6c/22/5110991ac959805d7ce19769bd5e42bbc6a408fdbcb8786d86d5651e1759/gpt3_contextual-0.7.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c225110991ac959805d7ce19769bd5e42bbc6a408fdbcb8786d86d5651e1759",
        "md5": "52017d053f0445ac7e540a5aff0918f0",
        "sha256": "40838b4089d2e71652fe14704573e3abd04d65e6cee17fa4992947de5c015b3f"
      },
      "downloads": -1,
      "filename": "gpt3_contextual-0.7.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "52017d053f0445ac7e540a5aff0918f0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8202,
      "upload_time": "2023-03-03T09:55:34",
      "upload_time_iso_8601": "2023-03-03T09:55:34.345537Z",
      "url": "https://files.pythonhosted.org/packages/6c/22/5110991ac959805d7ce19769bd5e42bbc6a408fdbcb8786d86d5651e1759/gpt3_contextual-0.7.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}