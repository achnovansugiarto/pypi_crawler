{
  "info": {
    "author": "Sergio A. B. Lins",
    "author_email": "sergio.lins@roma3.infn.it",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Installation\n\n`pip install compwizard`\n\n# Compounds.py documentation\n\nThis module creates virtual compounds either from a database or from user input.\nThe virtual compound object will contain its chemical and physical attributes.\nA compound can be initialized either by entering the name of a compound exisitng in the current database or by manually passing the parameters.\nCompounds created via the weights fractions of elements will have .mass and .chem attributes empty.\nDatabase can be checked with the `Compounds.ListDatabase()` command.\n<br>\nTo import the package in the project, use `import Elements`\nThe Compounds library is found within it. You can also use the following: `from Elements import Compounds`\n\n---\n\n#### compound.set_compound(_\\*args,ctype=None,mode='by_atom',name='new_compound'_)\n  Parameters:\n  * **\\*args: _compound setup, string or 2 lists_**\n  <br>The name of compound from database or two lists containing: first, the ratios or weights of elements, second, the elements.\n  * **ctype: _string, optional_**\n  <br>The initialization mode 'custom' or None, None is default and stands for a compound from the database. \n  * **mode: _string, optional_**\n  <br>The initialization type 'by_atom' or 'by_weight', 'by_atom' is default. This parameter should be defined if creating a 'custom' compound.\n   * **name: _string, optional_**\n  <br>Name of the new compound. Default is 'new_compound'. The name can be changed if desired by using the Compounds.give_name method.\n\n  Example:\n  ```python\n  from Elements import Compounds\n  new_compound = Compounds.compound()\n  new_compound.set_compound([2,1],['H','O'],ctype='custom')\n  nem_compound.set_compound([0.12,0.88],['H','O'],ctype='custom',mode='by_weight')\n  new_compound.set_compound('water')\n  ```\nAll compounds in the example will have the same properties.\n\n---\n\n#### make_mixture_of(_proportion, compounds_)\n  Parameters:\n  * **proportion: _list_**\n  <br>The ratio which the compounds will be mixed, either in weight fraction or in parts.\n  * **compounds: _list_**\n  <br>List of compound objects.\n  <br> **proportion** and **compounds** must have the same dimension.\n\n  Example:\n  ```python\n  from Elements import Compounds\n  compound1 = Compounds.compound()\n  compound2 = Compounds.compound()\n  compound1.set_compound('linoil')\n  compound2.set_compound('TiWhite')\n  new_compound = Compounds.max_mixture_of( [25, 75], [compound1, compound2] )\n  ```\nThe compound created by the mixture function will be a mixture with 25% compound1 and 75% compound2.\n\n---\n\n#### compound.set_attenuation(_energy_)\n  Parameters:\n  * **energy: _string_ or _integer_**\n  <br>The element the compound will be attenuating. _E.g._ if energy is set as 'Pb', it means the coeficients will be calculated for the attenuation of lead lines. If an integer is entered, the coefficients will be calculated for that one specific energy. It will still return a tuple, but with the second element equal to 0.\n\n  Example:\n  ```python\n  mycompound = Compounds.compound()\n  mycompound.set_compound('AuSheet')\n  mycompound.set_attenuation('Pb')\n  print(mycompound.lin_att,mycompound.tot_att)\n  ```\n  > (1912.6349060000002, 2833.4862456446012) (103.1, 152.73821000000004)\n\n  (by now the method returns a tuple, it will be changed in the future to return a dictionary with the line names as keys and the coefficients)\n\n---\n\n#### compound.mix(_proportion,compounds_)\n  Parameters:\n  * **proportion: _list_**\n  <br>The ratio which the compounds will be mixed, either in weight fraction or in parts. The first value always refers to the compound starting the mixture, i.e. the object where the method is being applied to.\n  * **compounds: _list_**\n  <br>List containing the compound(s) objects to be mixed together.\n\n  Example:\n  ```python\n  water = Compounds.compound()\n  water.set_compound('water')\n  mycompound = Compounds.compound()\n  mycompound.set_compound('Linoil')\n  mixture = mycompound.mix([2,10],[water])\n  print(mixture.weight)\n  print(mixture.density)\n  ```\n  > {'H': 0.09166666666666667, 'O': 0.09166666666666667, 'C': 0.65}\n  <br> 1.4756558333333334\n\n---  \n\n#### Attributes\n```python\n  water = Compounds.compound()\n  water.set_compound('water')\n```\n\n* **.name**\n  returns a string containing the name of the compound.\n  ```python\n  print(water.name)\n  ```\n  > 'water'\n* **.mass**\n  returns a float value with the atomic mass of the compound.\n    ```python\n  print(water.mass)\n  ```\n  > 18.02\n* **.chem**\n  returns a dictionary with the total atomic mass of each constituent chemical element.\n  ```python\n  print(water.chem)\n  ```\n  > {'H': 2.02, 'O': 16.0}\n* **.density**\n  return a float value with the total density of the compound\n  ```python\n  print(water.density)\n  ```\n  > 0.0009663706992230855\n* **.weight**\n  returns a dictionary with the weight fraction of each constituent chemical element in a similar way of .chem\n  ```python\n  print(water.weight)\n  ```\n  > {'H': 0.1120976692563818, 'O': 0.8879023307436182}\n* **.origin**\n  returns a string with the origin of the compound. Values are: 'by_weight', 'by_atom', 'by_mixing' or 'from_database'\n  ```python\n  print(water.origin)\n  ```\n  > from_database\n* **.tot_att** and **.lin_att**\n  each will return a tuple with the attenuation coefficients of a given element. .tot_att will return the total attenuation while .lin_att will returns the linear attenuation (the same as .tot_att multiplied by the compound's density).\n  ```python\n  water.set_attenuation('Cu')\n  print(water.lin_att)\n  print(water.tot_att)\n  ```\n  > (0.009849807036256424, 0.007272790368341503)\n  <br>(10.192576248612653, 7.525880466148724)\n\n  If an `int` is passed as the set_attenuation argument, the tuple's second index will be 0.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/linssab/XISMuS",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "compwizard",
    "package_url": "https://pypi.org/project/compwizard/",
    "platform": null,
    "project_url": "https://pypi.org/project/compwizard/",
    "project_urls": {
      "Homepage": "https://github.com/linssab/XISMuS"
    },
    "release_url": "https://pypi.org/project/compwizard/1.0.3.3/",
    "requires_dist": [
      "numpy (>=1.18.1)"
    ],
    "requires_python": "",
    "summary": "Creates virtual compounds with properties based on xraylib. Compound wizard is a package from XISMuS software.",
    "version": "1.0.3.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13161578,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b64d2b1922046dc9f423e4d075545acaff48673585a10293532501056e4387a",
          "md5": "e7091c214d370e09a4097484cf011fcc",
          "sha256": "b009025e12e5f09abd2330da4c181a1c41c06e2c775ad385aab93809431a6aa4"
        },
        "downloads": -1,
        "filename": "compwizard-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7091c214d370e09a4097484cf011fcc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13614,
        "upload_time": "2021-11-04T13:54:21",
        "upload_time_iso_8601": "2021-11-04T13:54:21.131827Z",
        "url": "https://files.pythonhosted.org/packages/8b/64/d2b1922046dc9f423e4d075545acaff48673585a10293532501056e4387a/compwizard-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db1cd13f53cc16683e44c6ede0a623469ab13ca754e16a055c18c44c155b701d",
          "md5": "56d9bb40b575e136dd97ae6fda94cc37",
          "sha256": "9b841578b3f1217d15434e6aec5129cd30a9a12d79ececda4409bcb9ba67f3f3"
        },
        "downloads": -1,
        "filename": "compwizard-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "56d9bb40b575e136dd97ae6fda94cc37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12985,
        "upload_time": "2021-11-04T13:54:22",
        "upload_time_iso_8601": "2021-11-04T13:54:22.523897Z",
        "url": "https://files.pythonhosted.org/packages/db/1c/d13f53cc16683e44c6ede0a623469ab13ca754e16a055c18c44c155b701d/compwizard-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "739e381efd9e995ab6dfc879f0606971bdc7c88fd31d5d361d72a4fb6f763a00",
          "md5": "4670e536a3db414391e6ef178a4da81c",
          "sha256": "a2c23073abacf5df01fba85b2f80ddb6f765818b5f21dfe7e3bab9f4aba3d129"
        },
        "downloads": -1,
        "filename": "compwizard-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4670e536a3db414391e6ef178a4da81c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13669,
        "upload_time": "2022-02-22T16:09:49",
        "upload_time_iso_8601": "2022-02-22T16:09:49.649794Z",
        "url": "https://files.pythonhosted.org/packages/73/9e/381efd9e995ab6dfc879f0606971bdc7c88fd31d5d361d72a4fb6f763a00/compwizard-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00f17128c50df9c6cd213a1350139d5729f07c9c83ebacdc19354ad5200ba101",
          "md5": "d670726b41452a4cba383988b3fdfbe0",
          "sha256": "aa3d765ce068a3c3c099d334a63137e6e9559b3921cd878f9e626d7b2f271fef"
        },
        "downloads": -1,
        "filename": "compwizard-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d670726b41452a4cba383988b3fdfbe0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13045,
        "upload_time": "2022-02-22T16:09:51",
        "upload_time_iso_8601": "2022-02-22T16:09:51.305665Z",
        "url": "https://files.pythonhosted.org/packages/00/f1/7128c50df9c6cd213a1350139d5729f07c9c83ebacdc19354ad5200ba101/compwizard-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2cda5c4ced3074f0209618a16df16b1dd810fd82c362fa1fecc01c4397fdb8d",
          "md5": "9688c601f42584125e7a33ce81cc9650",
          "sha256": "95e4bc10dee93311f250ea68d3d888b8750e4db5cf0b9b09b1c1650b3ef1ed5c"
        },
        "downloads": -1,
        "filename": "compwizard-1.0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9688c601f42584125e7a33ce81cc9650",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13832,
        "upload_time": "2022-02-23T13:50:14",
        "upload_time_iso_8601": "2022-02-23T13:50:14.675721Z",
        "url": "https://files.pythonhosted.org/packages/f2/cd/a5c4ced3074f0209618a16df16b1dd810fd82c362fa1fecc01c4397fdb8d/compwizard-1.0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e843dab1624cef3735be41fd83d3728173ffa18af938d1bec3011c93029fa573",
          "md5": "7763f004f409279bdb5e96dcf1b599bc",
          "sha256": "5fab20e12780e5c7f39b3cbcfb2ecb79eb03dbbb4745c130a2623b40ce6c6866"
        },
        "downloads": -1,
        "filename": "compwizard-1.0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7763f004f409279bdb5e96dcf1b599bc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13707,
        "upload_time": "2022-03-09T15:40:54",
        "upload_time_iso_8601": "2022-03-09T15:40:54.858279Z",
        "url": "https://files.pythonhosted.org/packages/e8/43/dab1624cef3735be41fd83d3728173ffa18af938d1bec3011c93029fa573/compwizard-1.0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f4d8429d47483bb66330db4a613c99832f43c95f548c9a72aeb975ca477f160",
          "md5": "1dd94f0ae95654dc2d530cdb02edbc86",
          "sha256": "28397da8d9346dbe6d53bf0ac701889ea2bf86c5baf6a81688ae2c28ea83746c"
        },
        "downloads": -1,
        "filename": "compwizard-1.0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1dd94f0ae95654dc2d530cdb02edbc86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13204,
        "upload_time": "2022-03-09T15:40:56",
        "upload_time_iso_8601": "2022-03-09T15:40:56.736750Z",
        "url": "https://files.pythonhosted.org/packages/6f/4d/8429d47483bb66330db4a613c99832f43c95f548c9a72aeb975ca477f160/compwizard-1.0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9873b700e32b653ec5c960e972a06e1b00efc257e2d0957c48f4db17065ca5eb",
          "md5": "daa87c4e9a086325286a3019dc13ce7e",
          "sha256": "74e30deba0129127efdd8da01e7426fe960fc9bdfc3e7447c910adfcc4aabf0a"
        },
        "downloads": -1,
        "filename": "compwizard-1.0.3.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "daa87c4e9a086325286a3019dc13ce7e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13771,
        "upload_time": "2022-03-13T10:42:13",
        "upload_time_iso_8601": "2022-03-13T10:42:13.227331Z",
        "url": "https://files.pythonhosted.org/packages/98/73/b700e32b653ec5c960e972a06e1b00efc257e2d0957c48f4db17065ca5eb/compwizard-1.0.3.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38c2ccdfcb97b16986c9f160f9bae6e084e0c5a2fd2ec970be00cd816b15665c",
          "md5": "04f79576867067f5f4b2d49a73432b8d",
          "sha256": "2dac9114b691d5a5bc22ab8485486401a45e72db76c12e590f1f4e8775bf10d4"
        },
        "downloads": -1,
        "filename": "compwizard-1.0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "04f79576867067f5f4b2d49a73432b8d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13269,
        "upload_time": "2022-03-13T10:42:14",
        "upload_time_iso_8601": "2022-03-13T10:42:14.649506Z",
        "url": "https://files.pythonhosted.org/packages/38/c2/ccdfcb97b16986c9f160f9bae6e084e0c5a2fd2ec970be00cd816b15665c/compwizard-1.0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9873b700e32b653ec5c960e972a06e1b00efc257e2d0957c48f4db17065ca5eb",
        "md5": "daa87c4e9a086325286a3019dc13ce7e",
        "sha256": "74e30deba0129127efdd8da01e7426fe960fc9bdfc3e7447c910adfcc4aabf0a"
      },
      "downloads": -1,
      "filename": "compwizard-1.0.3.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "daa87c4e9a086325286a3019dc13ce7e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13771,
      "upload_time": "2022-03-13T10:42:13",
      "upload_time_iso_8601": "2022-03-13T10:42:13.227331Z",
      "url": "https://files.pythonhosted.org/packages/98/73/b700e32b653ec5c960e972a06e1b00efc257e2d0957c48f4db17065ca5eb/compwizard-1.0.3.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "38c2ccdfcb97b16986c9f160f9bae6e084e0c5a2fd2ec970be00cd816b15665c",
        "md5": "04f79576867067f5f4b2d49a73432b8d",
        "sha256": "2dac9114b691d5a5bc22ab8485486401a45e72db76c12e590f1f4e8775bf10d4"
      },
      "downloads": -1,
      "filename": "compwizard-1.0.3.3.tar.gz",
      "has_sig": false,
      "md5_digest": "04f79576867067f5f4b2d49a73432b8d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13269,
      "upload_time": "2022-03-13T10:42:14",
      "upload_time_iso_8601": "2022-03-13T10:42:14.649506Z",
      "url": "https://files.pythonhosted.org/packages/38/c2/ccdfcb97b16986c9f160f9bae6e084e0c5a2fd2ec970be00cd816b15665c/compwizard-1.0.3.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}