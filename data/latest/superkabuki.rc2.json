{
  "info": {
    "author": "Adrian of Doom",
    "author_email": "spam@iodisco.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# SuperKabuki\nSCTE-35 Packet Injection for MPEGTS.\n# SuperKabuki v.0.0.39 is now Released.\n![image](https://user-images.githubusercontent.com/52701496/222034768-b8b1b34c-a645-461c-9408-6fffe2d40d63.png)\n\n \n<details> <summary><h1>Fast Start</h1> </summary>\n\n* Install SuperKabuki\n```js\n\npython3 -mpip install superkabuki\n```\n * Use Superkabuki to insert time signal cues at every iframe.\n\n ```js\n superkabuki -i your_video.ts -o output.ts -t\n ```\n * verify with threefive ( _installs with superkabuki_ )\n ```js\n\nthreefive output.ts\n```\n\n \n```js\na@debian:~/SuperKabuki$ superkabuki -h\n\nusage: superkabuki [-h] [-i INPUT] [-o OUTPUT] [-s SIDECAR] [-p SCTE35_PID] [-t] [-v]\n\noptions:\n  -h, --help            show this help message and exit\n  \n  -i INPUT, --input INPUT\n                        Input source, like \"/home/a/vid.ts\" or \"udp://@235.35.3.5:3535\" or\n                        \"https://futzu.com/xaa.ts\" (default sys.stdin.buffer)\n                        \n  -o OUTPUT, --output OUTPUT\n                        Output file (default sys.stdout.buffer)\n                        \n  -s SIDECAR, --sidecar SIDECAR\n                        Sidecar file for SCTE35 (default sidecar.txt)\n                        \n  -p SCTE35_PID, --scte35_pid SCTE35_PID\n                        Pid for SCTE-35 packets, can be hex or integer. (default 0x86)\n                        \n  -t, --time_signals    Flag to insert Time Signal cues at iframes.\n  \n  -v, --version         Show version\n\n\n```\n</details>\n\n<details> <summary><h1>Sidecar Files?</h1> </summary>\n \nLoad scte35 cues from a Sidecar file.\n \n ```js\na@debian:~/x9k3$ cat sidecar.txt\n\n38103.868589, /DAxAAAAAAAAAP/wFAUAAABdf+/+zHRtOn4Ae6DOAAAAAAAMAQpDVUVJsZ8xMjEqLYemJQ== \n38199.918911, /DAsAAAAAAAAAP/wDwUAAABef0/+zPACTQAAAAAADAEKQ1VFSbGfMTIxIxGolm0= \n```\n\nline format for sidecar file __insert_pts, cue__ , like `38103.868589, /DAxAAAAAAAAAP/wFAUAAABdf+/+zHRtOn4Ae6DOAAAAAAAMAQpDVUVJsZ8xMjEqLYemJQ==`\n\npts is the insert time for the cue, cue can be base64,hex, int, or bytes.\n\nThe __insert_pts has to be valid for the video__, meaning if your insert_pts is 38103.868589, the video PTS has to be \nless than 38103.868589 for the cue to be inserted.\n\n\n    \n### Usage \n```\nsuperkabuki -i input_file -s sidecar.txt -p 0x86\n```\n \n</details>\n\n \n <details> <summary><h3>Easy SCTE-35 Cue Encoding.</h3> </summary>  \n \n \n #### Use threefive.encode helper functions `mk_splice_null` , `mk_splice_insert`, `and mk_time_signal` \n \n```js\n\n>>>> from threefive.encode import mk_splice_null, mk_splice_insert, \\\nmk_time_signal\n \n>>>> null_cue = mk_splice_null()\n>>>> null_cue.show()\n{\n    \"info_section\": {\n        \"table_id\": \"0xfc\",\n        \"section_syntax_indicator\": false,\n        \"private\": false,\n        \"sap_type\": \"0x3\",\n        \"sap_details\": \"No Sap Type\",\n        \"section_length\": 17,\n        \"protocol_version\": 0,\n        \"encrypted_packet\": false,\n        \"encryption_algorithm\": 0,\n        \"pts_adjustment_ticks\": 0,\n        \"cw_index\": \"0x0\",\n        \"tier\": \"0xfff\",\n        \"splice_command_length\": 0,\n        \"splice_command_type\": 0,\n        \"descriptor_loop_length\": 0,\n        \"crc\": \"0x7a4fbfff\"\n    },\n    \"command\": {\n        \"command_length\": 0,\n        \"command_type\": 0,\n        \"name\": \"Splice Null\"\n    },\n    \"descriptors\": []\n}\n```\n *  Cue as base64\n ```js\n >>>> b64null = null_cue.encode()\n>>>> b64null\n'/DARAAAAAAAAAP/wAAAAAHpPv/8='\n ```\n * Cue as hex\n ```js\n>>>> hex_null = null_cue.encode_as_hex()\n>>>> hex_null\n'0xfc301100000000000000fff0000000007a4fbfff'\n```\n * Cue as int\n ```js\n>>>> int_null = null_cue.encode_as_int()\n>>>> int_null\n1439737590925997869941740172919141471333225840639\n ```\n\n ### help(threefive.encode)\n ```js\n \nNAME\n    threefive.encode - encode.py\n\nDESCRIPTION\n    threefive.encode has helper functions for Cue encoding.\n\nFUNCTIONS\n    mk_splice_insert(event_id, pts=None, duration=None, out=False)\n        mk_cue returns a Cue with a Splice Insert.\n        \n        The args set the SpliceInsert vars.\n        \n        splice_event_id = event_id\n        \n        if pts is None (default):\n            splice_immediate_flag      True\n            time_specified_flag        False\n        \n        if pts:\n            splice_immediate_flag      False\n            time_specified_flag        True\n            pts_time                   pts\n        \n        If duration is None (default)\n            duration_flag              False\n        \n        if duration IS set:\n            out_of_network_indicator   True\n            duration_flag              True\n            break_auto_return          True\n            pts_time                   pts\n        \n        if out is True:\n            out_of_network_indicator   True\n        \n        if out is False (default):\n            out_of_network_indicator   False\n    \n    mk_splice_null()\n        mk_splice_null returns a Cue\n        with a Splice Null\n    \n    mk_time_signal(pts=None)\n         mk_time_signal returns a Cue\n         with a Time Signal\n        \n         if pts is None:\n             time_specified_flag   False\n        \n        if pts IS set:\n             time_specified_flag   True\n             pts_time              pts\n\nFILE\n    /home/a/build/clean/scte35-threefive/threefive/encode.py\n\n```\n \n           \n </details>\n\n \n <details> <summary><h3>Advanced SCTE-35 Cue Encoding.</h3> </summary>  \n\n\n* [SCTE35 Cue with a Time Signal Command in Seven Steps](https://github.com/futzu/scte35-threefive/blob/master/Encoding.md#scte35-cue-with-a-time-signal-command-in-seven-steps) \n\n* [Edit A Splice Insert Command in a SCTE35 Cue](https://github.com/futzu/scte35-threefive/blob/master/Encoding.md#edit-a-splice-insert-command-in-a--scte35-cue)\n\n* [Remove a Splice Descriptor from a SCTE35 Cue](https://github.com/futzu/scte35-threefive/blob/master/Encoding.md#remove-a-splice-descriptor-from-a-scte35-cue)\n\n* [Add a Dtmf Descriptor to an existing SCTE35 Cue](https://github.com/futzu/scte35-threefive/blob/master/Encoding.md#add-a-dtmf-descriptor-to-an-existing--scte35-cue)\n\n\n  </details> \n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/futzu/superkabuki",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "superkabuki",
    "package_url": "https://pypi.org/project/superkabuki/",
    "platform": "all",
    "project_url": "https://pypi.org/project/superkabuki/",
    "project_urls": {
      "Homepage": "https://github.com/futzu/superkabuki"
    },
    "release_url": "https://pypi.org/project/superkabuki/0.0.41/",
    "requires_dist": [
      "iframes",
      "new-reader (>=0.1.3)",
      "threefive (>=2.3.71)"
    ],
    "requires_python": ">=3.6",
    "summary": "superkabuki is SCTE-35 Packet injection for the people",
    "version": "0.0.41",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17435250,
  "releases": {
    "0.0.39": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "275023880a96f8fc99debca1c83bb16e2abe86393130b50f45fc4a6570c63926",
          "md5": "1bec3b62a119b4effafde88420df32d5",
          "sha256": "2637539deefab95075d20b9229b350ccc4ec0d35fa0b873d61052140be3879ce"
        },
        "downloads": -1,
        "filename": "superkabuki-0.0.39-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1bec3b62a119b4effafde88420df32d5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6957,
        "upload_time": "2023-03-01T03:03:02",
        "upload_time_iso_8601": "2023-03-01T03:03:02.187248Z",
        "url": "https://files.pythonhosted.org/packages/27/50/23880a96f8fc99debca1c83bb16e2abe86393130b50f45fc4a6570c63926/superkabuki-0.0.39-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb094172985c959ea5d5d5b21a7d46dbdfbb259dc42a7229c72a8708f83ca591",
          "md5": "05546023f03fc83322790bab18cee391",
          "sha256": "5ac4d872989a42d37b77a51c111688c1f1018385cff2d737196cc947dfafb9be"
        },
        "downloads": -1,
        "filename": "superkabuki-0.0.39.tar.gz",
        "has_sig": false,
        "md5_digest": "05546023f03fc83322790bab18cee391",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6421,
        "upload_time": "2023-03-01T03:03:05",
        "upload_time_iso_8601": "2023-03-01T03:03:05.200580Z",
        "url": "https://files.pythonhosted.org/packages/bb/09/4172985c959ea5d5d5b21a7d46dbdfbb259dc42a7229c72a8708f83ca591/superkabuki-0.0.39.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.41": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a85fca97cfb8a15bcab63c2ff0bd881ad95c88468251753a055cc0f45ba739b5",
          "md5": "eef12ecbcdb5c5d452303c3c94102d7c",
          "sha256": "c2b22ed8273b458182f75bf26e65fea5c005d5f166a96ee7773b18111f1626a8"
        },
        "downloads": -1,
        "filename": "superkabuki-0.0.41-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eef12ecbcdb5c5d452303c3c94102d7c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8107,
        "upload_time": "2023-03-24T19:26:48",
        "upload_time_iso_8601": "2023-03-24T19:26:48.024202Z",
        "url": "https://files.pythonhosted.org/packages/a8/5f/ca97cfb8a15bcab63c2ff0bd881ad95c88468251753a055cc0f45ba739b5/superkabuki-0.0.41-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f122baaf285574db0472d0604e0ae745a11f840e89e95909a03292905d4485e",
          "md5": "f773e3f69551194cecf9f806a9e3f524",
          "sha256": "fa6e3dda15caca43543ffef6015e83efe4d2411c0889ff7b83cea176e227c3c8"
        },
        "downloads": -1,
        "filename": "superkabuki-0.0.41.tar.gz",
        "has_sig": false,
        "md5_digest": "f773e3f69551194cecf9f806a9e3f524",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7653,
        "upload_time": "2023-03-24T19:26:49",
        "upload_time_iso_8601": "2023-03-24T19:26:49.915741Z",
        "url": "https://files.pythonhosted.org/packages/4f/12/2baaf285574db0472d0604e0ae745a11f840e89e95909a03292905d4485e/superkabuki-0.0.41.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a85fca97cfb8a15bcab63c2ff0bd881ad95c88468251753a055cc0f45ba739b5",
        "md5": "eef12ecbcdb5c5d452303c3c94102d7c",
        "sha256": "c2b22ed8273b458182f75bf26e65fea5c005d5f166a96ee7773b18111f1626a8"
      },
      "downloads": -1,
      "filename": "superkabuki-0.0.41-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "eef12ecbcdb5c5d452303c3c94102d7c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8107,
      "upload_time": "2023-03-24T19:26:48",
      "upload_time_iso_8601": "2023-03-24T19:26:48.024202Z",
      "url": "https://files.pythonhosted.org/packages/a8/5f/ca97cfb8a15bcab63c2ff0bd881ad95c88468251753a055cc0f45ba739b5/superkabuki-0.0.41-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4f122baaf285574db0472d0604e0ae745a11f840e89e95909a03292905d4485e",
        "md5": "f773e3f69551194cecf9f806a9e3f524",
        "sha256": "fa6e3dda15caca43543ffef6015e83efe4d2411c0889ff7b83cea176e227c3c8"
      },
      "downloads": -1,
      "filename": "superkabuki-0.0.41.tar.gz",
      "has_sig": false,
      "md5_digest": "f773e3f69551194cecf9f806a9e3f524",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7653,
      "upload_time": "2023-03-24T19:26:49",
      "upload_time_iso_8601": "2023-03-24T19:26:49.915741Z",
      "url": "https://files.pythonhosted.org/packages/4f/12/2baaf285574db0472d0604e0ae745a11f840e89e95909a03292905d4485e/superkabuki-0.0.41.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}