{
  "info": {
    "author": "Timm Severin, Mark DÃ¶rr",
    "author_email": "mark.doerr@uni-greifswald.de",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator",
      "Topic :: Utilities"
    ],
    "description": "SiLA2CodeGenerator\n==================\n\nThis package supplies a code generator that creates a working server and\nclient prototype based on feature definition files and a service\ndescription file.\n\nThe codegenerator supports the *SiLA2 server/client* developer in two\nmajor tasks:\n\n1. it converts the Feature Description File (FDL/XML) into a Protobuf\n   .proto file\n2. it generates a completely running SiLA server/client ( in simulation\n   mode), where only the real/hardware specific code needs to be\n   added/subclassed to the generated prototype code.\n\ns.\\ `Tutorial <#codegenerator-demo-and-tutorial>`__ for a fast\nintroduction\n\nFeatures\n--------\n\n-  .proto file generation out of FeatureDescription Files FDL/XML\n-  .proto file compilation\n-  complete server/client generation out of a project directory,\n   containing a service\\_description file (s.hello\\_sila\\_project)\n\n-  support for Service/Device detection\n-  support for Service/Device feature detection\n-  switching between simulation and real (hardware) mode (+)\n-  default / standard Features (SiLAService, Sim, runcontrol,\n   deviceinfo, ...) (+)\n-  default error handling (+)\n-  sila-python-django support (+)\n\n(+) under development\n\nInstallation\n------------\n\nTo install this library execute the following commands.\n\n.. code:: bash\n\n    pip install -r requirements.txt\n    pip install .\n\nThis will also install the ``sila2lib`` package, if it is not installed\nyet. Since the packages from the ``requirements.txt`` file do no version\ncheck, you will have to run\n``pip install --upgrade -r requirements.txt`` to force an upgrade to a\nnew version.\n\nIt is highly recommended to work in the python3 virtual environment\n(default proposal of the installer): This ensures that the system Python\nsetup is not affected. To activate the virtual environment, type\n\n::\n\n    source [venv]/bin/activate\n\nto deactivate it again, simply type (mind: here is no path required)\n\n::\n\n    deactivate\n\nRun\n---\n\nThe code can be run using the command ``silacodegenerator``. Use\n``silacodegenerator --help`` to get an overview over the accepted\narguments. The most common use will be\n\n.. code:: bash\n\n    silacodegenerator --build <path/to/project/dir>\n\nwhich, creates the .proto files, compiles them to the gRPC libraries and\nthen builds server, client, servicer and implementation prototypes.\n\nTemplates\n---------\n\nA strength of this CodeGenerator is the extensive usage of template\nfiles to generate the prototypes. Templates can be found in the package\nsource under the ``templates`` directory. To chose which template to\napply, call the code generator with the ``--template <template-name>``\nflag.\n\nAvailable templates are:\n\n-  **run-inline**: Based on the previous implementations. This templates\n   generates calls to commands and properties of all features inside a\n   ``run()`` method of the client class.\n-  **run-method**: For each command call and property the client\n   implements its own method, effectively giving easy access to these\n   data to a script from the outside. ``run()`` is still used to\n   validate the connection to the server and retrieve basic server\n   capabilities.\n\nIf you want to implement your own template, it is recommended to copy\none existing template and then modify it. To use it during the build\nprocess, run the code generator with the flag\n``--template-dir <path/to/template/directory>``, which will overwrite\nthe ``--template <..>`` flag and use the given directory as template\nsource instead.\n\nExample\n-------\n\nThe examples directory contains the ``hello_sila2_project``. Building\nthis project with the following command run inside the examples\nsub-directory will result in a new directory in the same folder which is\nnamed after the service name from the corresponding service description\nfile.\n\n.. code:: bash\n\n    .../examples> silacodegenerator --build hello_sila2_project\n\nThe new folder should have the following structure\n\n::\n\n    HelloSiLA2\n     + meta                             # the meta information, i.e. the FDL, proto\n                                        #   and service description file\n     + GreetingProvider\n       # Additional information\n       __init__.py                      # make this folder a python package\n       # Implementations of the server, edit those for the actual implementation\n       GreetingProvider_real.py         # the prototype for the real case\n       GreetingProvider_simulation.py   # the prototype for the simulation case\n       # Servicer\n       GreetingProvoder_servicer.py     # The servicer that serves as a bridge between the\n                                        #   server and the corresponding implementation\n         + gRPC\n          __init__.py                   # make this folder a python package\n          # The auto-generated stub files.\n          #     Do not Edit!\n          GreetingProvider_pb2.py\n          GreetingProvider_pb2-grpc.py\n\nProto file generation\n---------------------\n\nIf you only want to convert a SiLA2 Feature Description File (FDL) into a .proto file:\n\n::\n\n    silacodegenerator [feature_descripton_file.xml]\n\nThis will result in a proto file with the output filename\nfeature\\_descripton\\_file.proto\n\nThe output proto filename can be set with the -p option.\n\nExample:\n\n::\n\n    python3 silacodegenerator.py -f [feature_descripton_file.xml] -p my_protofilename.proto\n\nTesting\n-------\n\n          To validate that the basic machinery is working correctly, please run\n          the unittests:\n\n          ::\n\n              cd [dir of codegenerator]\n\n              python -m unittest\n\nNotes\n-----\n\n-  While in prior implementations the change between Simulation and Real\n   mode relied on the Server and the ``inject_implementation()`` method\n   of the servicer, this is now complete the responsibility of the\n   servicer. It thus accepts the ``simulation_mode`` parameter at\n   initialisation, and will thus either load the ``<Feature>Simulation``\n   or ``<Feature>Real`` implementation.\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/SiLA2/sila_python",
    "keywords": "SiLA2,codegenerator,lab automation,laboratory,instruments,experiments,evaluation,visualisation,serial interface,robots",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sila2codegenerator",
    "package_url": "https://pypi.org/project/sila2codegenerator/",
    "platform": "",
    "project_url": "https://pypi.org/project/sila2codegenerator/",
    "project_urls": {
      "Homepage": "https://gitlab.com/SiLA2/sila_python"
    },
    "release_url": "https://pypi.org/project/sila2codegenerator/0.2.0/",
    "requires_dist": [
      "lxml",
      "sila2lib"
    ],
    "requires_python": "",
    "summary": "SiLA2 code generator for Python3",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8375194,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe53ecf4d5ad84e07cde864fd285753ba39207ecb69b40ac66da695089e6db66",
          "md5": "786a160840a511584ef718d3008b3d1f",
          "sha256": "135703a7a6a6bf21f3f74f9f028d15d935a4dbe89f42236d2ce5544f1ec3d71f"
        },
        "downloads": -1,
        "filename": "sila2codegenerator-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "786a160840a511584ef718d3008b3d1f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 84313,
        "upload_time": "2019-11-10T16:59:53",
        "upload_time_iso_8601": "2019-11-10T16:59:53.039305Z",
        "url": "https://files.pythonhosted.org/packages/fe/53/ecf4d5ad84e07cde864fd285753ba39207ecb69b40ac66da695089e6db66/sila2codegenerator-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4891f058cfbfd810266999c91995699178490bbfb88e58e84f3d0a87257759cf",
          "md5": "e79a96e6ed556f8e7fd68d98de6fba15",
          "sha256": "18f828c2e457d1adf5cb69b09f6673ae79f8d222195dfe6ce7efccd0ecfd8c7a"
        },
        "downloads": -1,
        "filename": "sila2codegenerator-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e79a96e6ed556f8e7fd68d98de6fba15",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24735,
        "upload_time": "2019-11-10T16:59:55",
        "upload_time_iso_8601": "2019-11-10T16:59:55.809625Z",
        "url": "https://files.pythonhosted.org/packages/48/91/f058cfbfd810266999c91995699178490bbfb88e58e84f3d0a87257759cf/sila2codegenerator-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39c4511ceaf2112cf7b455167a3df1cadc1c07d906b2144c70f18436c3729ce1",
          "md5": "0a8b8ef821a810706270f9eb06ba4647",
          "sha256": "3c2000faa7355618a09bd35d609ae3b2f62bc9a8142623c03c366150e59bdd04"
        },
        "downloads": -1,
        "filename": "sila2codegenerator-0.3.1.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a8b8ef821a810706270f9eb06ba4647",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 114266,
        "upload_time": "2020-09-09T05:32:37",
        "upload_time_iso_8601": "2020-09-09T05:32:37.980346Z",
        "url": "https://files.pythonhosted.org/packages/39/c4/511ceaf2112cf7b455167a3df1cadc1c07d906b2144c70f18436c3729ce1/sila2codegenerator-0.3.1.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c51e455653db036d39320b13701169489ae299da788f9ab8a31b3badd3102fb",
          "md5": "f7541c544000e5f58930c491c06b7294",
          "sha256": "c55d0af21f79b73d4595d590a27e1d38da6b2a48fb0a7cf3f25695bca05c5f9a"
        },
        "downloads": -1,
        "filename": "sila2codegenerator-0.3.1.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "f7541c544000e5f58930c491c06b7294",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34252,
        "upload_time": "2020-09-09T05:32:39",
        "upload_time_iso_8601": "2020-09-09T05:32:39.545415Z",
        "url": "https://files.pythonhosted.org/packages/6c/51/e455653db036d39320b13701169489ae299da788f9ab8a31b3badd3102fb/sila2codegenerator-0.3.1.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44bfa5c1a1a7d8a7bcc82a150c35ed3e4010e567a2869a87fa5fcb809a090630",
          "md5": "ffde56ccf2dffe5cec2027354b70fd81",
          "sha256": "760056514cf796cc80ee18e86ec89ac2d545069fa16d2a244ce1e1f50c037e88"
        },
        "downloads": -1,
        "filename": "sila2codegenerator-0.3.2.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ffde56ccf2dffe5cec2027354b70fd81",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 114590,
        "upload_time": "2020-10-09T11:17:10",
        "upload_time_iso_8601": "2020-10-09T11:17:10.601954Z",
        "url": "https://files.pythonhosted.org/packages/44/bf/a5c1a1a7d8a7bcc82a150c35ed3e4010e567a2869a87fa5fcb809a090630/sila2codegenerator-0.3.2.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c228a31418f5a0aa075504283598bff4df327350c04d4e95ff5671bdde510578",
          "md5": "a975cbd8cb4d871d63f44b8ae75ba336",
          "sha256": "dea58886caa77309cad00d1bf4ee0b1e37cd58b99d5a68fbfb81ecb0bdb29f31"
        },
        "downloads": -1,
        "filename": "sila2codegenerator-0.3.2.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "a975cbd8cb4d871d63f44b8ae75ba336",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35212,
        "upload_time": "2020-10-09T11:17:12",
        "upload_time_iso_8601": "2020-10-09T11:17:12.207505Z",
        "url": "https://files.pythonhosted.org/packages/c2/28/a31418f5a0aa075504283598bff4df327350c04d4e95ff5671bdde510578/sila2codegenerator-0.3.2.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe53ecf4d5ad84e07cde864fd285753ba39207ecb69b40ac66da695089e6db66",
        "md5": "786a160840a511584ef718d3008b3d1f",
        "sha256": "135703a7a6a6bf21f3f74f9f028d15d935a4dbe89f42236d2ce5544f1ec3d71f"
      },
      "downloads": -1,
      "filename": "sila2codegenerator-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "786a160840a511584ef718d3008b3d1f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 84313,
      "upload_time": "2019-11-10T16:59:53",
      "upload_time_iso_8601": "2019-11-10T16:59:53.039305Z",
      "url": "https://files.pythonhosted.org/packages/fe/53/ecf4d5ad84e07cde864fd285753ba39207ecb69b40ac66da695089e6db66/sila2codegenerator-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4891f058cfbfd810266999c91995699178490bbfb88e58e84f3d0a87257759cf",
        "md5": "e79a96e6ed556f8e7fd68d98de6fba15",
        "sha256": "18f828c2e457d1adf5cb69b09f6673ae79f8d222195dfe6ce7efccd0ecfd8c7a"
      },
      "downloads": -1,
      "filename": "sila2codegenerator-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e79a96e6ed556f8e7fd68d98de6fba15",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24735,
      "upload_time": "2019-11-10T16:59:55",
      "upload_time_iso_8601": "2019-11-10T16:59:55.809625Z",
      "url": "https://files.pythonhosted.org/packages/48/91/f058cfbfd810266999c91995699178490bbfb88e58e84f3d0a87257759cf/sila2codegenerator-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}