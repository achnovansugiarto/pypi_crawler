{
  "info": {
    "author": "Jan Klima",
    "author_email": "klima013@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "=========================================\ngraphene-objecttype-from-sqlalchemy-table\n=========================================\n\n\n.. image:: https://img.shields.io/pypi/v/graphene_objecttype_from_sqlalchemy_table.svg\n        :target: https://pypi.python.org/pypi/graphene_objecttype_from_sqlalchemy_table\n\n.. image:: https://travis-ci.org/Joko013/graphene-objecttype-from-sqlalchemy-table.svg?branch=master\n    :target: https://travis-ci.org/Joko013/graphene-objecttype-from-sqlalchemy-table\n\n\n\nTransform SQLAlchemy_ ``Table`` into Graphene_ ``ObjectType``.\n\n\n* Free software: MIT license\n\nFeatures\n--------\n\nThe purpose of this library is to allow a lightweight GraphQL schema creation based on database table definitions when full SQLAlchemy ORM cannot be used. It converts ``Table`` columns into their Graphene counterparts and creates the corresponding Graphene ``ObjectType`` to be used as a schema field.\n\nNote that if your application uses SQLAlchemy ORM, `graphene-sqlalchemy`_ still offers more features and you could benefit from using it.\n\n\nInstallation\n____________\n\nIn shell run:\n\n.. code-block::\n\n    pip install graphene-objecttype-from-sqlalchemy-table\n\n\nExample usage\n_____________\n\nLet's start by defining a mock database table.\n\n.. code-block:: python\n\n    import sqlalchemy as sa\n\n    t = sa.Table(\n        'test_table',\n        sa.MetaData(),\n        sa.Column('foo', sa.String, doc='This will be passed to field description.'),\n        sa.Column('bar', sa.Integer),\n    )\n\nThen create a Graphene object type using a Meta class with the reference to the SQLAlchemy table.\n\n.. code-block:: python\n\n    from graphene_objecttype_from_sqlalchemy_table import ObjectTypeFromTable\n\n    class TestTable(ObjectTypeFromTable):\n        class Meta:\n            table = t\n\nAnd finally define the GraphQL query structure using the new object type.\n\n.. code-block:: python\n\n    from graphene import Field, ObjectType, Schema\n\n    class Query(ObjectType):\n        test_table = Field(TestTable)\n\n        # custom resolver for the table (probably a database query in a real world application)\n        # returns a dictionary or an object with attributes corresponding to column names\n        def resolve_test_table(root, info):\n            return {'foo': 'Hello world', 'bar': 42}\n\n    schema = Schema(query=Query)\n\n    # confirm that the query resolves correctly\n    schema.execute('query { testTable { foo, bar } }')\n    # {'data': {'testTable': {'foo': 'Hello world', 'bar': 42}}}\n\n\nIt is possible to exclude specific columns from the resulting object by listing them as ``excluded_columns`` or to select only a subset of columns with ``only_selected_columns`` attribute.\n\n.. code-block:: python\n\n    class TestTable(ObjectTypeFromTable):\n        class Meta:\n            table = t\n            excluded_columns = ('foo', )\n            # only_selected_columns = ('bar', )\n\nCredits\n-------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n.. _graphene-sqlalchemy: https://github.com/graphql-python/graphene-sqlalchemy\n.. _Graphene: http://graphene-python.org/\n.. _SQLAlchemy: http://www.sqlalchemy.org/\n\n\n=======\nHistory\n=======\n\n\n0.1.2 (2020-09-02)\n------------------\n\n* No changes, Travis CI encryption issues caused incorrect pypi release, pypi doesn't allow deleting and re-releasing the same version hence a new version is needed to fix this.\n\n\n0.1.1 (2020-08-31)\n------------------\n\n* Fix duplicate enum types error when multiple columns reuse one SQLAlchemy enum or when enum types are used as field arguments.\n\n\n0.1.0 (2020-08-17)\n------------------\n\n* First release on PyPI.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Joko013/graphene-objecttype-from-sqlalchemy-table",
    "keywords": "graphene_objecttype_from_sqlalchemy_table",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "graphene-objecttype-from-sqlalchemy-table",
    "package_url": "https://pypi.org/project/graphene-objecttype-from-sqlalchemy-table/",
    "platform": "",
    "project_url": "https://pypi.org/project/graphene-objecttype-from-sqlalchemy-table/",
    "project_urls": {
      "Homepage": "https://github.com/Joko013/graphene-objecttype-from-sqlalchemy-table"
    },
    "release_url": "https://pypi.org/project/graphene-objecttype-from-sqlalchemy-table/0.1.2/",
    "requires_dist": [
      "graphene (<3,>=2.1.3)",
      "sqlalchemy (<2,>=1.2)"
    ],
    "requires_python": ">=3.6",
    "summary": "Transform SQLAlchemy Table into Graphene ObjectType.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8092055,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b939e17b3eaf59836809606291f638962523d3cb0e171720eb58c1a108116ee2",
          "md5": "f09e480fc10c45bcf95d2ec20cadf384",
          "sha256": "ecb3604c7e9130d29ac6af4b3141349ff5329f6839a1853d36e3fa581448f6cd"
        },
        "downloads": -1,
        "filename": "graphene_objecttype_from_sqlalchemy_table-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f09e480fc10c45bcf95d2ec20cadf384",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 7222,
        "upload_time": "2020-08-29T12:08:25",
        "upload_time_iso_8601": "2020-08-29T12:08:25.112052Z",
        "url": "https://files.pythonhosted.org/packages/b9/39/e17b3eaf59836809606291f638962523d3cb0e171720eb58c1a108116ee2/graphene_objecttype_from_sqlalchemy_table-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49b5f3fedee68d695e50dc27acddeb2d6f40b4d0e470bc40933dae609f0e5f3f",
          "md5": "d78dd6da6cfd5c4f7a469c0a6e68546e",
          "sha256": "264a024418e3d3ecad9d5f35bb7d86459e76cb13e84222bdd234aa1f698e8724"
        },
        "downloads": -1,
        "filename": "graphene_objecttype_from_sqlalchemy_table-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d78dd6da6cfd5c4f7a469c0a6e68546e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14065,
        "upload_time": "2020-08-29T12:08:27",
        "upload_time_iso_8601": "2020-08-29T12:08:27.969982Z",
        "url": "https://files.pythonhosted.org/packages/49/b5/f3fedee68d695e50dc27acddeb2d6f40b4d0e470bc40933dae609f0e5f3f/graphene_objecttype_from_sqlalchemy_table-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d6a6b420d92069994cdc6c337742409e3cd26cb76b89a1ea16bba26d8f71ebc",
          "md5": "60c73b9256b8960cbe927ad623184a14",
          "sha256": "83b6392d3e63b796172fa62272692f1c1882598b3daade9731adae45fae45d0e"
        },
        "downloads": -1,
        "filename": "graphene_objecttype_from_sqlalchemy_table-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "60c73b9256b8960cbe927ad623184a14",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 7325,
        "upload_time": "2020-09-02T07:24:07",
        "upload_time_iso_8601": "2020-09-02T07:24:07.458516Z",
        "url": "https://files.pythonhosted.org/packages/9d/6a/6b420d92069994cdc6c337742409e3cd26cb76b89a1ea16bba26d8f71ebc/graphene_objecttype_from_sqlalchemy_table-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "399d9b91d7feb62cfa15124c20055f098da903a85d7acb0ee184430f07aa7620",
          "md5": "979d54685bbacf7955a70efce9c9d070",
          "sha256": "6d192437924211f08eb453398a0351f3caad981972dc5b401ed5f4367e4b80b0"
        },
        "downloads": -1,
        "filename": "graphene_objecttype_from_sqlalchemy_table-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "979d54685bbacf7955a70efce9c9d070",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14332,
        "upload_time": "2020-09-02T07:24:08",
        "upload_time_iso_8601": "2020-09-02T07:24:08.408945Z",
        "url": "https://files.pythonhosted.org/packages/39/9d/9b91d7feb62cfa15124c20055f098da903a85d7acb0ee184430f07aa7620/graphene_objecttype_from_sqlalchemy_table-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d6a6b420d92069994cdc6c337742409e3cd26cb76b89a1ea16bba26d8f71ebc",
        "md5": "60c73b9256b8960cbe927ad623184a14",
        "sha256": "83b6392d3e63b796172fa62272692f1c1882598b3daade9731adae45fae45d0e"
      },
      "downloads": -1,
      "filename": "graphene_objecttype_from_sqlalchemy_table-0.1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "60c73b9256b8960cbe927ad623184a14",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 7325,
      "upload_time": "2020-09-02T07:24:07",
      "upload_time_iso_8601": "2020-09-02T07:24:07.458516Z",
      "url": "https://files.pythonhosted.org/packages/9d/6a/6b420d92069994cdc6c337742409e3cd26cb76b89a1ea16bba26d8f71ebc/graphene_objecttype_from_sqlalchemy_table-0.1.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "399d9b91d7feb62cfa15124c20055f098da903a85d7acb0ee184430f07aa7620",
        "md5": "979d54685bbacf7955a70efce9c9d070",
        "sha256": "6d192437924211f08eb453398a0351f3caad981972dc5b401ed5f4367e4b80b0"
      },
      "downloads": -1,
      "filename": "graphene_objecttype_from_sqlalchemy_table-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "979d54685bbacf7955a70efce9c9d070",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14332,
      "upload_time": "2020-09-02T07:24:08",
      "upload_time_iso_8601": "2020-09-02T07:24:08.408945Z",
      "url": "https://files.pythonhosted.org/packages/39/9d/9b91d7feb62cfa15124c20055f098da903a85d7acb0ee184430f07aa7620/graphene_objecttype_from_sqlalchemy_table-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}