{
  "info": {
    "author": "Gerardo Urrutia",
    "author_email": "durru7@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Multimedia :: Graphics",
      "Topic :: Multimedia :: Sound/Audio",
      "Topic :: Multimedia :: Video",
      "Topic :: Utilities"
    ],
    "description": "<h1 align=\"center\">\r\n  <img src=\"https://user-images.githubusercontent.com/3451528/222875688-e8d60da9-0439-4996-936d-c75ffd47cb58.png\" alt=\"videoxt\" width=\"200\"></a>\r\n</h1>\r\n\r\n[![PyPI](https://img.shields.io/pypi/v/videoxt)](https://pypi.org/project/videoxt) [![Downloads](https://static.pepy.tech/badge/videoxt)](https://pepy.tech/project/videoxt)\r\n\r\n<b>VideoXT</b> is a Python library and command-line tool that allows you to easily extract audio, clips, frames or create a GIF between two points in a video.\r\n\r\n\r\n[![demo](https://user-images.githubusercontent.com/3451528/229325416-30faad6c-725f-4783-9a9f-1b83245810ec.jpg)](https://user-images.githubusercontent.com/3451528/229325422-0da43958-34b0-438e-9049-73a98a7924d7.mp4)\r\n\r\n## Contents\r\n\r\n* <a href=\"#installation\">Installation</a><br/>\r\n* <a href=\"#examples\">Examples</a><br/>\r\n* <a href=\"#command-line-usage\">Command-line usage</a><br/>\r\n* <a href=\"#frames\">*frames* usage</a><br/>\r\n* <a href=\"#gif\">*gif* usage</a><br/>\r\n* <a href=\"#audio\">*audio* usage</a><br/>\r\n* <a href=\"#clip\">*clip* usage</a><br/>\r\n* <a href=\"#used-by\">Used by</a>\r\n\r\n---\r\n\r\n## Installation\r\n\r\n```sh\r\npip install videoxt\r\n```\r\n\r\nor\r\n\r\n```sh\r\ngit clone https://github.com/gurrutia/videoxt.git\r\n```\r\n\r\n---\r\n\r\n## Examples\r\n\r\n> **NOTE**: All command-line examples are run from the directory where the video is located. You can run the commands from any directory by specifying the full path to the video.\r\n\r\n**Example 1**: Extract every `30th` **frame** of a video, save the frames as `png` images, set the dimensions of the images to `800x600`, apply a `monochrome` (black and white) filter to the images and print extraction details to the console.\r\n\r\n```python\r\nimport videoxt\r\n\r\nvideoxt.extract_frames(\r\n  'C:/Users/gurrutia/Videos/video.avi',  # pathlib.Path also works\r\n  capture_rate=30,\r\n  image_format='png',  # default is 'jpg'\r\n  dimension=(800, 600),\r\n  monochrome=True,\r\n  verbose=True,\r\n)\r\n```\r\n\r\nCommand-line equivalent:\r\n\r\n```sh\r\n>> videoxt frames video.avi --capture-rate 30 --image-format png --dimensions 800 600 --monochrome\r\nor\r\n>> videoxt frames video.avi -cr 30 -if png --dm 800 600 --monochrome\r\n```\r\n\r\nExtraction details printed to console:\r\n\r\n![example1](https://user-images.githubusercontent.com/3451528/229313078-10b2ccc5-b643-4d2b-acdc-e75dcd7346fd.jpg)\r\n\r\n**Example 2**: Extract and `normalize` the **audio** from a list of video filepaths, save the audio as `wav` files in a directory named `to_sample` that exists in the same directory as the video file.\r\n\r\n```python\r\nfrom pathlib import Path\r\nimport videoxt\r\n\r\nfilepaths = [\r\n  Path('C:/Users/gurrutia/Videos/video.mp4'),\r\n  Path('C:/Users/gurrutia/Videos/video2.mp4'),\r\n  Path('C:/Users/gurrutia/Videos/video3.mp4'),\r\n]\r\n\r\nfor filepath in filepaths:\r\n  videoxt.extract_audio(\r\n    filepath,\r\n    audio_format='wav',  # default is 'mp3'\r\n    destdir=filepath.parent / 'to_sample',  # directory must exist\r\n    normalize=True,\r\n  )\r\n```\r\n\r\nCommand-line equivalent (for a single video file):\r\n\r\n```sh\r\n>> videoxt audio video.mp4 --audio-format wav --destdir to_sample --normalize\r\nor\r\n>> videoxt audio video.mp4 -af wav -d to_sample --normalize\r\n```\r\n\r\n**Example 3**: Create a **subclip** between `1:08` and `1:10` of the video, `resize` the subclip up by `25%`, slow the `speed` of subclip down by `75%`, `reverse` the subclip, and `normalize` the subclip audio. *Only `mp4` output is supported*.\r\n\r\n```python\r\nfrom pathlib import Path\r\nimport videoxt\r\n\r\nvideoxt.extract_clip(\r\n  Path('C:/Users/gurrutia/Videos/video.mp4'),\r\n  start_time='1:08',  # or 68.0\r\n  stop_time=70,  # or '1:10'\r\n  resize=1.25,\r\n  speed=0.25,\r\n  normalize=True,\r\n)\r\n```\r\n\r\nCommand-line equivalent:\r\n\r\n```sh\r\n>> videoxt clip video.mp4 --start-time 1:08 --stop-time 70 --resize 1.25 --speed 0.25 --normalize\r\nor\r\n>> videoxt clip video.mp4 -s 1:08 -S 70 -rs 1.25 -sp 0.25 --normalize\r\n```\r\n\r\n---\r\n\r\n## Command-line usage\r\n\r\n```sh\r\n>> videoxt --help\r\nusage: videoxt [-h] [--version] {audio,clip,frames,gif} ...\r\n\r\nExtract audio, clips, frames and create gifs from a video.\r\n\r\npositional arguments:\r\n  {audio,clip,frames,gif}\r\n    audio               Extract audio from video.\r\n    clip                Extract a clip of a video file. Only supports 'mp4' output.\r\n    frames              Extract individual frames from a video and save them as images.\r\n    gif                 Create a GIF between two points in a video.\r\n\r\noptions:\r\n  -h, --help            show this help message and exit\r\n  --version, -V         show program's version number and exit\r\n```\r\n\r\n### *frames*\r\n\r\n```sh\r\n>> videoxt frames --help\r\nusage: videoxt frames [-h] [--start-time] [--stop-time] [--fps] [--destdir] [--filename] [--quiet] [--dimensions ]\r\n                      [--resize] [--rotate] [--monochrome] [--image-format] [--capture-rate]\r\n                      filepath\r\n\r\npositional arguments:\r\n  filepath              Path to the video file with extension.\r\n\r\noptions:\r\n  -h, --help            show this help message and exit\r\n  --start-time , -s     Time to start extraction. Can be a number representing seconds or a timestamp (Ex: --start-\r\n                        time 0:45 or -s 45).\r\n  --stop-time , -S      Time to stop extraction. Can be a number representing seconds or a timestamp (Ex: --stop-time\r\n                        1:30 or -S 90).\r\n  --fps , -f            Manually set the frames per second (FPS). Helpful if the FPS is not read accurately.\r\n  --destdir , -d        Specify the directory you want to save the media to. If not provided, media is saved in the\r\n                        video directory.\r\n  --filename , -fn      Set the name of the output media file(s), without the extension. If not provided, the video\r\n                        filename is used.\r\n  --quiet, -q           Disable extraction details from being printed to the console.\r\n  --dimensions  , -dm\r\n                        Resize the output to a specific width and height (Ex: --dm 1920 1080).\r\n  --resize , -rs        Increase or decrease the dimensions of the output by a factor of N.\r\n  --rotate , -rt        Rotate the output by 90, 180, or 270 degrees.\r\n  --monochrome          Apply a black and white filter to the output.\r\n  --image-format , -if\r\n                        Set the image format to save the frames as. Default is 'jpg'.\r\n  --capture-rate , -cr\r\n                        Capture every Nth video frame. Default is 1, which captures every frame.\r\n```\r\n\r\n### *gif*\r\n\r\n```sh\r\n>> videoxt gif --help\r\nusage: videoxt gif [-h] [--start-time] [--stop-time] [--fps] [--destdir] [--filename] [--quiet] [--dimensions ]\r\n                   [--resize] [--rotate] [--monochrome] [--speed] [--bounce] [--reverse]\r\n                   filepath\r\n\r\npositional arguments:\r\n  filepath              Path to the video file with extension.\r\n\r\noptions:\r\n  -h, --help            show this help message and exit\r\n  --start-time , -s     Time to start extraction. Can be a number representing seconds or a timestamp (Ex: --start-\r\n                        time 0:45 or -s 45).\r\n  --stop-time , -S      Time to stop extraction. Can be a number representing seconds or a timestamp (Ex: --stop-time\r\n                        1:30 or -S 90).\r\n  --fps , -f            Manually set the frames per second (FPS). Helpful if the FPS is not read accurately.\r\n  --destdir , -d        Specify the directory you want to save the media to. If not provided, media is saved in the\r\n                        video directory.\r\n  --filename , -fn      Set the name of the output media file(s), without the extension. If not provided, the video\r\n                        filename is used.\r\n  --quiet, -q           Disable extraction details from being printed to the console.\r\n  --dimensions  , -dm\r\n                        Resize the output to a specific width and height (Ex: --dm 1920 1080).\r\n  --resize , -rs        Increase or decrease the dimensions of the output by a factor of N.\r\n  --rotate , -rt        Rotate the output by 90, 180, or 270 degrees.\r\n  --monochrome          Apply a black and white filter to the output.\r\n  --speed , -sp         Increase or decrease the speed of the output by a factor of N.\r\n  --bounce              Make the output bounce back-and-forth, boomerang style.\r\n  --reverse             Reverse the output.\r\n```\r\n\r\n### *audio*\r\n\r\n```sh\r\n>> videoxt audio --help\r\nusage: videoxt audio [-h] [--start-time] [--stop-time] [--fps] [--destdir] [--filename] [--quiet] [--volume]\r\n                     [--normalize] [--audio-format]\r\n                     filepath\r\n\r\npositional arguments:\r\n  filepath              Path to the video file with extension.\r\n\r\noptions:\r\n  -h, --help            show this help message and exit\r\n  --start-time , -s     Time to start extraction. Can be a number representing seconds or a timestamp (Ex: --start-\r\n                        time 0:45 or -s 45).\r\n  --stop-time , -S      Time to stop extraction. Can be a number representing seconds or a timestamp (Ex: --stop-time\r\n                        1:30 or -S 90).\r\n  --fps , -f            Manually set the frames per second (FPS). Helpful if the FPS is not read accurately.\r\n  --destdir , -d        Specify the directory you want to save the media to. If not provided, media is saved in the\r\n                        video directory.\r\n  --filename , -fn      Set the name of the output media file(s), without the extension. If not provided, the video\r\n                        filename is used.\r\n  --quiet, -q           Disable extraction details from being printed to the console.\r\n  --volume , -v         Increase or decrease the output audio volume by a factor of N.\r\n  --normalize           Normalize the audio output to a maximum of 0dB.\r\n  --audio-format , -af\r\n                        Set the audio format to as. Default is 'mp3'.\r\n```\r\n\r\n### *clip*\r\n\r\n```sh\r\n>> videoxt clip --help\r\nusage: videoxt clip [-h] [--start-time] [--stop-time] [--fps] [--destdir] [--filename] [--quiet] [--volume]\r\n                    [--normalize] [--dimensions ] [--resize] [--rotate] [--monochrome] [--speed] [--bounce]\r\n                    [--reverse]\r\n                    filepath\r\n\r\npositional arguments:\r\n  filepath              Path to the video file with extension.\r\n\r\noptions:\r\n  -h, --help            show this help message and exit\r\n  --start-time , -s     Time to start extraction. Can be a number representing seconds or a timestamp (Ex: --start-\r\n                        time 0:45 or -s 45).\r\n  --stop-time , -S      Time to stop extraction. Can be a number representing seconds or a timestamp (Ex: --stop-time\r\n                        1:30 or -S 90).\r\n  --fps , -f            Manually set the frames per second (FPS). Helpful if the FPS is not read accurately.\r\n  --destdir , -d        Specify the directory you want to save the media to. If not provided, media is saved in the\r\n                        video directory.\r\n  --filename , -fn      Set the name of the output media file(s), without the extension. If not provided, the video\r\n                        filename is used.\r\n  --quiet, -q           Disable extraction details from being printed to the console.\r\n  --volume , -v         Increase or decrease the output audio volume by a factor of N.\r\n  --normalize           Normalize the audio output to a maximum of 0dB.\r\n  --dimensions  , -dm\r\n                        Resize the output to a specific width and height (Ex: --dm 1920 1080).\r\n  --resize , -rs        Increase or decrease the dimensions of the output by a factor of N.\r\n  --rotate , -rt        Rotate the output by 90, 180, or 270 degrees.\r\n  --monochrome          Apply a black and white filter to the output.\r\n  --speed , -sp         Increase or decrease the speed of the output by a factor of N.\r\n  --bounce              Make the output bounce back-and-forth, boomerang style.\r\n  --reverse             Reverse the output.\r\n```\r\n\r\n---\r\n\r\n## Used by\r\n\r\n* **Best Buy Teen Tech Center** at **Grand St. Settlement**, allowing filmmaking instructors to gather film stills that aid in constructing lesson plans for their youth workshops. [Download workshop example here.](https://github.com/gurrutia/videoxt/files/10887456/GSS_Filmmaking_Fall_2022_Transfiguration_Schools_W1.pdf)\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gurrutia/videoxt",
    "keywords": "video,frame,image,gif,audio,extract,convert,ffmpeg,moviepy,opencv",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "videoxt",
    "package_url": "https://pypi.org/project/videoxt/",
    "platform": null,
    "project_url": "https://pypi.org/project/videoxt/",
    "project_urls": {
      "Homepage": "https://github.com/gurrutia/videoxt"
    },
    "release_url": "https://pypi.org/project/videoxt/1.0.0/",
    "requires_dist": [
      "ffmpeg (>=1.4)",
      "moviepy (>=1.0.3)",
      "opencv-python (>=4.7.0.68)",
      "rich (>=13.3.1)",
      "pytest (>=7.2.2) ; extra == 'testing'"
    ],
    "requires_python": ">=3.7",
    "summary": "Extract audio, clips, frames and create gifs from a video.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17544530,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff877ea8e13aaba56f057165ff6da96ad2df270c6954e9a0f29738d042c03b87",
          "md5": "5f3b01173f75638f45bb254933d0458f",
          "sha256": "c0bbd29328887110465cf3128e68c7dc32f1e558fc8bbbd769d60f89f71e5446"
        },
        "downloads": -1,
        "filename": "videoxt-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f3b01173f75638f45bb254933d0458f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12989,
        "upload_time": "2023-03-04T04:56:27",
        "upload_time_iso_8601": "2023-03-04T04:56:27.854318Z",
        "url": "https://files.pythonhosted.org/packages/ff/87/7ea8e13aaba56f057165ff6da96ad2df270c6954e9a0f29738d042c03b87/videoxt-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0767610cc0e7e3d96c50dbbd5329e0c4ff7fe16f6286dd0e2c4a1711c207dfba",
          "md5": "f24e0ff8356c105b7aacdb96761469f0",
          "sha256": "710172ace1d1314c59e14ea5531f71f0701c70c176efb532d5c749c4273d24f0"
        },
        "downloads": -1,
        "filename": "videoxt-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f24e0ff8356c105b7aacdb96761469f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13613,
        "upload_time": "2023-03-04T04:56:29",
        "upload_time_iso_8601": "2023-03-04T04:56:29.404208Z",
        "url": "https://files.pythonhosted.org/packages/07/67/610cc0e7e3d96c50dbbd5329e0c4ff7fe16f6286dd0e2c4a1711c207dfba/videoxt-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2c8fcf9ef7ce755812c254e903320a7e3229ce215045f929d65839c745e6590",
          "md5": "cbb720c1400ab30e8166e137fd0e456b",
          "sha256": "fd2bf3900f2e1a6b954ade52861857b79da0455b3ab1dddec0984eb70e3acc1b"
        },
        "downloads": -1,
        "filename": "videoxt-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cbb720c1400ab30e8166e137fd0e456b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13162,
        "upload_time": "2023-03-05T01:43:14",
        "upload_time_iso_8601": "2023-03-05T01:43:14.501174Z",
        "url": "https://files.pythonhosted.org/packages/a2/c8/fcf9ef7ce755812c254e903320a7e3229ce215045f929d65839c745e6590/videoxt-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86a0691eb2f48a2bf376a3dfc31626efb6accb5333c47c451bf3812efcbc98de",
          "md5": "4fdd53be61ad5805bba6c7604105d97e",
          "sha256": "e8f76c8ac2127ba39c075f84285a2512a706aaa6d2466cd8c6805203b3b9a606"
        },
        "downloads": -1,
        "filename": "videoxt-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4fdd53be61ad5805bba6c7604105d97e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13956,
        "upload_time": "2023-03-05T01:43:16",
        "upload_time_iso_8601": "2023-03-05T01:43:16.400548Z",
        "url": "https://files.pythonhosted.org/packages/86/a0/691eb2f48a2bf376a3dfc31626efb6accb5333c47c451bf3812efcbc98de/videoxt-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbe9e97dbc4dbb433fa5348dd55718c2f03cec01e99107aff4adedffebb52a7f",
          "md5": "4761884ce84aba22c0427cdea8a99076",
          "sha256": "ceaa36e787ec8d0e97a7ce7d0cfe004ef863e5d786d67f52c3bd728f563fb361"
        },
        "downloads": -1,
        "filename": "videoxt-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4761884ce84aba22c0427cdea8a99076",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 14188,
        "upload_time": "2023-03-05T20:39:00",
        "upload_time_iso_8601": "2023-03-05T20:39:00.371273Z",
        "url": "https://files.pythonhosted.org/packages/bb/e9/e97dbc4dbb433fa5348dd55718c2f03cec01e99107aff4adedffebb52a7f/videoxt-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06e3961de5a3dc6c805797981093f5c7386b23fb8e37747f39fcc500c014dc56",
          "md5": "03f6a62855e466f30220929794f1b5f5",
          "sha256": "2d806ea135cb37af8f19ef9e5e858139bbbe5974b32982cde97f8c4ceed37d91"
        },
        "downloads": -1,
        "filename": "videoxt-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "03f6a62855e466f30220929794f1b5f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14760,
        "upload_time": "2023-03-05T20:39:01",
        "upload_time_iso_8601": "2023-03-05T20:39:01.818136Z",
        "url": "https://files.pythonhosted.org/packages/06/e3/961de5a3dc6c805797981093f5c7386b23fb8e37747f39fcc500c014dc56/videoxt-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b97ab162daad1e9a8baa1872d3a1795e6237beabd39d479c85fa91bf63b7e16b",
          "md5": "85482f4ddfa45f4b5d15e6fa74892996",
          "sha256": "7e3dfdf0aef906611df011fced9099008aa2a7fbed7f2fea19550abadee433a3"
        },
        "downloads": -1,
        "filename": "videoxt-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "85482f4ddfa45f4b5d15e6fa74892996",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 14973,
        "upload_time": "2023-03-10T03:26:15",
        "upload_time_iso_8601": "2023-03-10T03:26:15.352282Z",
        "url": "https://files.pythonhosted.org/packages/b9/7a/b162daad1e9a8baa1872d3a1795e6237beabd39d479c85fa91bf63b7e16b/videoxt-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3d681fee3d978762baaef2fff5e540228c78b7a6f8c37b08884bce45c1f4b01",
          "md5": "0987107682b932bbba02dfc40bbe7e8f",
          "sha256": "cc286ddb3ea72cc01bd968c4d92e438a5e8d1439774bcbd95f0da6cdeb599bb6"
        },
        "downloads": -1,
        "filename": "videoxt-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0987107682b932bbba02dfc40bbe7e8f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15466,
        "upload_time": "2023-03-10T03:26:17",
        "upload_time_iso_8601": "2023-03-10T03:26:17.426639Z",
        "url": "https://files.pythonhosted.org/packages/a3/d6/81fee3d978762baaef2fff5e540228c78b7a6f8c37b08884bce45c1f4b01/videoxt-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "933ee6a06fc3fa8e1fc5ffd202c8e3c6543174300b39d898c81c6b7ca8b22740",
          "md5": "8d55356d5fadfc3c22de751373963ee0",
          "sha256": "6bdb3a49ae2b2b8b29214772093ab2288219a362833c8b6f41a45a522b50d5df"
        },
        "downloads": -1,
        "filename": "videoxt-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d55356d5fadfc3c22de751373963ee0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17605,
        "upload_time": "2023-03-15T01:30:05",
        "upload_time_iso_8601": "2023-03-15T01:30:05.701901Z",
        "url": "https://files.pythonhosted.org/packages/93/3e/e6a06fc3fa8e1fc5ffd202c8e3c6543174300b39d898c81c6b7ca8b22740/videoxt-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "394376411ed6da0a80ff1bd57d7810b057606794bdd760c05cb083bfb21f21df",
          "md5": "13b09f5ff259d406922e3a9a994ffbc6",
          "sha256": "f04820e8b6a42d62821dfc82dc10bd0f437385a36150fb35bd2871e17508e294"
        },
        "downloads": -1,
        "filename": "videoxt-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "13b09f5ff259d406922e3a9a994ffbc6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18347,
        "upload_time": "2023-03-15T01:30:07",
        "upload_time_iso_8601": "2023-03-15T01:30:07.966809Z",
        "url": "https://files.pythonhosted.org/packages/39/43/76411ed6da0a80ff1bd57d7810b057606794bdd760c05cb083bfb21f21df/videoxt-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c34cbec8195b5dd5639b19c10fe9bb280bed4a7466eae1732a5e9405b13b9e85",
          "md5": "c40992b571c27f945d3b76a4492dd369",
          "sha256": "19312f597af2802f5f5a9a385feae35a45ea5fb497ea6faa44b5acb1a153ad75"
        },
        "downloads": -1,
        "filename": "videoxt-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c40992b571c27f945d3b76a4492dd369",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17611,
        "upload_time": "2023-03-16T00:49:26",
        "upload_time_iso_8601": "2023-03-16T00:49:26.532236Z",
        "url": "https://files.pythonhosted.org/packages/c3/4c/bec8195b5dd5639b19c10fe9bb280bed4a7466eae1732a5e9405b13b9e85/videoxt-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1f651666a312affcb46fc62da941a8a275cac442c6ff10f92d88dd99d0d4c7a",
          "md5": "dfac481d0bffc59c11ea0cefd1178d7e",
          "sha256": "2132eae9a506961e8defd968648d10b95f4bb563775ffb8ac06576bf0a561938"
        },
        "downloads": -1,
        "filename": "videoxt-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "dfac481d0bffc59c11ea0cefd1178d7e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18386,
        "upload_time": "2023-03-16T00:49:28",
        "upload_time_iso_8601": "2023-03-16T00:49:28.634841Z",
        "url": "https://files.pythonhosted.org/packages/f1/f6/51666a312affcb46fc62da941a8a275cac442c6ff10f92d88dd99d0d4c7a/videoxt-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7386b6455522bf4d311518fc539b11b07d1cae56f905a0d9023c424fd7faa377",
          "md5": "1ec63e7ee13b1bea4502186e8cd8afd5",
          "sha256": "083923d56710787b747c4a560ad5024264eab36bc91abb1d4bb8b7c25142b1dd"
        },
        "downloads": -1,
        "filename": "videoxt-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ec63e7ee13b1bea4502186e8cd8afd5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 25179,
        "upload_time": "2023-04-02T02:38:21",
        "upload_time_iso_8601": "2023-04-02T02:38:21.747898Z",
        "url": "https://files.pythonhosted.org/packages/73/86/b6455522bf4d311518fc539b11b07d1cae56f905a0d9023c424fd7faa377/videoxt-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30f7674f9cd54bc75cbcd877e3e93d2944abd4e9879ecfb801120b1822f178f3",
          "md5": "17ef2af86243f62e06b4f28e7bfc8c74",
          "sha256": "bf56d9f15a521605975e786a0ae43729f507925b6017a513cee553f5de8641b5"
        },
        "downloads": -1,
        "filename": "videoxt-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "17ef2af86243f62e06b4f28e7bfc8c74",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 23590,
        "upload_time": "2023-04-02T02:38:24",
        "upload_time_iso_8601": "2023-04-02T02:38:24.115090Z",
        "url": "https://files.pythonhosted.org/packages/30/f7/674f9cd54bc75cbcd877e3e93d2944abd4e9879ecfb801120b1822f178f3/videoxt-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7386b6455522bf4d311518fc539b11b07d1cae56f905a0d9023c424fd7faa377",
        "md5": "1ec63e7ee13b1bea4502186e8cd8afd5",
        "sha256": "083923d56710787b747c4a560ad5024264eab36bc91abb1d4bb8b7c25142b1dd"
      },
      "downloads": -1,
      "filename": "videoxt-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1ec63e7ee13b1bea4502186e8cd8afd5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 25179,
      "upload_time": "2023-04-02T02:38:21",
      "upload_time_iso_8601": "2023-04-02T02:38:21.747898Z",
      "url": "https://files.pythonhosted.org/packages/73/86/b6455522bf4d311518fc539b11b07d1cae56f905a0d9023c424fd7faa377/videoxt-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "30f7674f9cd54bc75cbcd877e3e93d2944abd4e9879ecfb801120b1822f178f3",
        "md5": "17ef2af86243f62e06b4f28e7bfc8c74",
        "sha256": "bf56d9f15a521605975e786a0ae43729f507925b6017a513cee553f5de8641b5"
      },
      "downloads": -1,
      "filename": "videoxt-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "17ef2af86243f62e06b4f28e7bfc8c74",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 23590,
      "upload_time": "2023-04-02T02:38:24",
      "upload_time_iso_8601": "2023-04-02T02:38:24.115090Z",
      "url": "https://files.pythonhosted.org/packages/30/f7/674f9cd54bc75cbcd877e3e93d2944abd4e9879ecfb801120b1822f178f3/videoxt-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}