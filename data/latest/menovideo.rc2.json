{
  "info": {
    "author": "almamon rasool abdali",
    "author_email": "mamonrasoolabdali@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "[![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/data-efficient-video-transformer-for-violence/action-recognition-on-real-life-violence)](https://paperswithcode.com/sota/action-recognition-on-real-life-violence?p=data-efficient-video-transformer-for-violence)\n\n\n# Data-efficient-video-transformer\n\nthis repo is for menovideo associated with the paper ['Data Efficient Video Transformer for Violence Detection' (DeVTR)](https://ieeexplore.ieee.org/abstract/document/9530829)\n\none of big challenges facing researchers in computer vision with transformers especially in video tasks is the need for large data and high computational resources , our method called DeVTR (Data Efficient Video Transformer for Violence Detection) to overcame these challenges (he need for large data and high computational resources )\n\n In this work, we propose a data-efficient video transformer (DeVTr) based on the transformer network as a Spatio-temporal learning method with a pre-trained 2d-Convolutional neural network (2d-CNN) as an embedding layer for the input data. The model has been trained and tested on the Real-life violence dataset (RLVS) and achieved an accuracy of 96.25%. A comparison of the result for the suggested method with previous techniques illustrated that the suggested method provides the best result among all the other studies for violence event detection.\n\n ### Results and benchmarking\nthe model achieved 96.25% based on RLVS dataset and also worth to mention that it was better than TimeSformer in both memory efficiency and convergence speed and accuracy\n\n[Comparing results of DeVTr vs other methods based on RLVS Dataset ](https://github.com/mamonraab/Data-efficient-video-transformer/blob/main/comptab.jpg)\n\n\n[saliency map for random video of violence action ](https://github.com/mamonraab/Data-efficient-video-transformer/blob/main/fig5.jpg)\n\n\n### menvideo package\nthe [menovideo package](https://pypi.org/project/menovideo/)   help you build video action recognation / video understanding  model  based on  \n1-  build using our Novel model DeVTR with full costmaztion\n2-  video dataset reader and preprocessing to easly read videos and make them as pytorch ready dataloaders\n3-  Timedistributed warper similar to keras timedistributed warper which can help you easly build (classical CNN+LSTM )\n\n\nthis is new novel transformer network combined with Conv net to build a highly accuract video action recognation model with limited data and hw rescources \n\n\n### simple usage\n\ninstall\n```\npip install menovideo\n \n\n```\nimport it\n```\nimport menovideo.menovideo as menoformer\nimport menovideo.videopre as vide_reader \n\n```\n\ninit DeVTr model without pre-trained wights\n```\nmodel = menoformer.DeVTr()\n\n\n```\ninit DeVTr with pre-trained wigths\nthe trained wights  can be [downloaded from this url](https://drive.google.com/file/d/1s7Z1c-4zC522BFVM5EiZDMQLe6ZV8QQh/view?usp=sharing)\n\n```\nwight = 'drive/MyDrive/Colab Notebooks/transformers/violance-detaction-myresearch/vg19bn40convtransformer-ep-0.pth'\nmodel2 = menoformer.DeVTr(w= wight , base ='default')\n\n```\n\n\nusing the video reader and pre-processing helpers\nparameters is :\n\n1.  pandas dataframe contain the path and label of each video\n2.  number of frames for the singal video\n3.  RGB is the number of color channles\n4.  h is the hieght of the frame for each video\n5.  w is the width of the frame for each video\n```\nvalid_dataset = vide_reader.TaskDataset(valid_df,timesep=time_stp,rgb=RGB,h=H,w=W)\n\n```\n\nfor detlied example of using the labrary use [package_test.ipynb](https://github.com/mamonraab/Data-efficient-video-transformer/blob/main/package_test.ipynb)\n\n#### please use pytorch 1.9 for the pre-trained model \n\nTo cite our paper/code:\n\n```\n\n@INPROCEEDINGS{9530829,  author={Abdali, Almamon Rasool},  booktitle={2021 IEEE International Conference on Communication, Networks and Satellite (COMNETSAT)},   title={Data Efficient Video Transformer for Violence Detection},   year={2021},  volume={},  number={},  pages={195-199},  doi={10.1109/COMNETSAT53002.2021.9530829}}\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mamonraab/Data-efficient-video-transformer",
    "keywords": "pytorch pretrained video models efficientnet transformer",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "menovideo",
    "package_url": "https://pypi.org/project/menovideo/",
    "platform": "",
    "project_url": "https://pypi.org/project/menovideo/",
    "project_urls": {
      "Homepage": "https://github.com/mamonraab/Data-efficient-video-transformer"
    },
    "release_url": "https://pypi.org/project/menovideo/0.5.1/",
    "requires_dist": [
      "torch (>=1.4)",
      "torchvision"
    ],
    "requires_python": ">=3.6",
    "summary": "(Unofficial) PyTorch library data efficient video transformer for video understanding and action recognatio",
    "version": "0.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11722376,
  "releases": {
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5028a338470294f6d8c60700a0131bdae358cbc0153a0d19c11b0181a6822fd",
          "md5": "8664da630fb75a9fc52b3e46af934978",
          "sha256": "2bd7dccf322a43e894f470a60b0564ed409cd523d8d101673e030625263084cb"
        },
        "downloads": -1,
        "filename": "menovideo-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8664da630fb75a9fc52b3e46af934978",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6392,
        "upload_time": "2021-10-11T22:31:00",
        "upload_time_iso_8601": "2021-10-11T22:31:00.784881Z",
        "url": "https://files.pythonhosted.org/packages/d5/02/8a338470294f6d8c60700a0131bdae358cbc0153a0d19c11b0181a6822fd/menovideo-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9787db5cf33acfb10f1b531d2c24ece9645ef11d95cdfbe868223be07ee14fe1",
          "md5": "482df4028f1ebf8adb344d44e9279d2c",
          "sha256": "b43af0715718251171083a9e8b415f7f9e735be1367d74664828c58d75e0f190"
        },
        "downloads": -1,
        "filename": "menovideo-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "482df4028f1ebf8adb344d44e9279d2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5863,
        "upload_time": "2021-10-11T22:31:04",
        "upload_time_iso_8601": "2021-10-11T22:31:04.284888Z",
        "url": "https://files.pythonhosted.org/packages/97/87/db5cf33acfb10f1b531d2c24ece9645ef11d95cdfbe868223be07ee14fe1/menovideo-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f03ffdac16b44e3db8a32c39469388ca0825ef597fd81b5f84466966b6ae997a",
          "md5": "3a976ec06466cd08ab50d9c1a42510d5",
          "sha256": "6ee9713db3b59bb65b3ab59c957303a518d41b850764a669b8317afb6bb1efbc"
        },
        "downloads": -1,
        "filename": "menovideo-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a976ec06466cd08ab50d9c1a42510d5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7292,
        "upload_time": "2021-10-14T08:41:00",
        "upload_time_iso_8601": "2021-10-14T08:41:00.940885Z",
        "url": "https://files.pythonhosted.org/packages/f0/3f/fdac16b44e3db8a32c39469388ca0825ef597fd81b5f84466966b6ae997a/menovideo-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48e4b3c64e90870dc29f5730c114a164261a129e3df6d003425503abd97f2fd0",
          "md5": "740810ce382f5bcf206dc6848b5b865d",
          "sha256": "472c9f01b488e946b98fd51658825bc8993227436a2844180528b14c9bbda6e5"
        },
        "downloads": -1,
        "filename": "menovideo-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "740810ce382f5bcf206dc6848b5b865d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6781,
        "upload_time": "2021-10-14T08:41:02",
        "upload_time_iso_8601": "2021-10-14T08:41:02.908882Z",
        "url": "https://files.pythonhosted.org/packages/48/e4/b3c64e90870dc29f5730c114a164261a129e3df6d003425503abd97f2fd0/menovideo-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f03ffdac16b44e3db8a32c39469388ca0825ef597fd81b5f84466966b6ae997a",
        "md5": "3a976ec06466cd08ab50d9c1a42510d5",
        "sha256": "6ee9713db3b59bb65b3ab59c957303a518d41b850764a669b8317afb6bb1efbc"
      },
      "downloads": -1,
      "filename": "menovideo-0.5.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3a976ec06466cd08ab50d9c1a42510d5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7292,
      "upload_time": "2021-10-14T08:41:00",
      "upload_time_iso_8601": "2021-10-14T08:41:00.940885Z",
      "url": "https://files.pythonhosted.org/packages/f0/3f/fdac16b44e3db8a32c39469388ca0825ef597fd81b5f84466966b6ae997a/menovideo-0.5.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "48e4b3c64e90870dc29f5730c114a164261a129e3df6d003425503abd97f2fd0",
        "md5": "740810ce382f5bcf206dc6848b5b865d",
        "sha256": "472c9f01b488e946b98fd51658825bc8993227436a2844180528b14c9bbda6e5"
      },
      "downloads": -1,
      "filename": "menovideo-0.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "740810ce382f5bcf206dc6848b5b865d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6781,
      "upload_time": "2021-10-14T08:41:02",
      "upload_time_iso_8601": "2021-10-14T08:41:02.908882Z",
      "url": "https://files.pythonhosted.org/packages/48/e4/b3c64e90870dc29f5730c114a164261a129e3df6d003425503abd97f2fd0/menovideo-0.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}