{
  "info": {
    "author": "Damian Borowiecki",
    "author_email": "dborowiecki@soldevelo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# openIMIS Backend Claim AI Quality reference module\nThis repository holds the files of the openIMIS Backend Claim AI Quality reference module.\nIt is dedicated to be deployed as a module of [openimis-be_py](https://github.com/openimis/openimis-be_py).\n\n[![License: AGPL v3](https://img.shields.io/badge/License-AGPL%20v3-blue.svg)](https://www.gnu.org/licenses/agpl-3.0)\n\n## ORM mapping:\nNone\n\n## Listened Django Signals\n#### SubmitClaimsMutation \nAdds 'claim_ai_quality' key to the json_ext field on claim submissions.  \nIf ClaimAiQualityConfig.event_based_activation is set to true AI adjudication is performed.\n#### EvaluateByAIMutation\nAdjudication is called using `after_claim_ai_evaluation_validation` signal.\n\n\n## Services\n* AiQualityReportService, loading claims used for misclassification report\n\n## Reports\n* #### miscategorisation_report\n\n## GraphQL Queries\nNone\n\n## GraphQL Mutations\n#### EvaluateByAIMutation\nUsed for manual AI Adjudication of selected claims through `after_claim_ai_evaluation_validation` signal. \n`gql_mutation_submit_claims_perms` permission required. \n\n## Additional Endpoints\n* miscategorisation_report: generating report regarding ai misclassification in  PDF format\n\n\n## Reports\n* `miscategorisation_report`: AI Evaluation accurracy and list of misclassified claims\n\n\n## Configuration options (can be changed via core.ModuleConfiguration)\n#### Rest API Configuration\n* `rest_api_login_endpoint`: Endpoint used for getting user authentication token.   \nDefault: `http://localhost:8000/api/api_fhir_r4/login/`,\n* `rest_api_bundle_evaluation_endpoint`: Endpoint used for sending bundle of claims for evaluation.  \nDefault: `http://localhost:8000/api/claim_ai/claim_bundle_evaluation/`,\n* `rest_api_single_claim_evaluation_endpoint`: Endpoint used for sending single claim for evaluation.  \nDefault: `http://localhost:8000/api/claim_ai/claim_evaluation/`,\n* `wait_for_evaluation`: If set to `False` system doesn't wait for server response and have to use other method to \npull adjudication data. \n* `rest_api_user_login`: Username of user used for AI Server JWT Authentication.\n* `rest_api_user_password`: Username of user used for AI Server JWT Authentication.\n#### Remaining \n* `claim_ai_username`: User dedicated to perform DB operations executed in background by Claim AI Quality module.\nBy default it's `_ClaimAIAdmin` added in module migration.\n* `event_based_activation`: Determines if AI evaluation should be done on claim submission (`True`) or \nusing scheduled job (`True`). Default: `False`\n* bundle_size: number of claims in one bundle if scheduled job is used. Default: `200`,\n* `accepted_category_code`: Code for Items/Services positively evaluated by AI. Default: `0`,\n* `rejected_category_code`: Code for Items/Services negatively evaluated by AI. Default: `1`,\n* `reason_rejected_by_ai_code`: FHIR Rejection reason code for claims rejected by AI. Default: `-2`,\n* `date_format`: date format used in FHIR response. Default: `%Y-%m-%d`,\n* `misclassification_report_perms`: List of permissions required to get Misclassification report.  \nDefault: [`112001`],\n* `evaluation_method`: Method used for AI evaluation. If set to `rest_api` claims are adjudicated using \nREST API connection. If set to `integrated` then system is using `claim_ai` module installed on same instance\nas Claim AI Quality server.  \nDefault: (empty string). - if `claim_ai` module is installed locally it uses this module. If it's \nnot installed REST API is used.  \n\n## openIMIS Modules Dependencies\n* core\n* claim\n* api_fhir_r4\n* location\n* report\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://openimis.org/",
    "keywords": "",
    "license": "GNU AGPL v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "openimis-be-claim-ai-quality",
    "package_url": "https://pypi.org/project/openimis-be-claim-ai-quality/",
    "platform": null,
    "project_url": "https://pypi.org/project/openimis-be-claim-ai-quality/",
    "project_urls": {
      "Homepage": "https://openimis.org/"
    },
    "release_url": "https://pypi.org/project/openimis-be-claim-ai-quality/2.0.0/",
    "requires_dist": [
      "django",
      "django-db-signals",
      "djangorestframework",
      "orjson",
      "fhir.resources (>=6.2.0b3)",
      "openimis-be-api-fhir-r4"
    ],
    "requires_python": "",
    "summary": "The openIMIS Backend Claim AI Quality reference module.",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13794114,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "195bad6465cd539992ae142e6f9cfa93f1a41d0bfa152b5e552f48236b7d2285",
          "md5": "04d5a76a76c9ef03f0f0c6178ca52d83",
          "sha256": "48c468b4553260b3141484d96ac0d598e11612e2c0168ce17241bc01b097f390"
        },
        "downloads": -1,
        "filename": "openimis_be_claim_ai_quality-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04d5a76a76c9ef03f0f0c6178ca52d83",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 48188,
        "upload_time": "2021-11-26T15:32:47",
        "upload_time_iso_8601": "2021-11-26T15:32:47.654837Z",
        "url": "https://files.pythonhosted.org/packages/19/5b/ad6465cd539992ae142e6f9cfa93f1a41d0bfa152b5e552f48236b7d2285/openimis_be_claim_ai_quality-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "107ce87404a5a2350d7a3470213f979332003482dad7eecfbd0395ff81772af4",
          "md5": "3ddde7527153d12876ffec86226390f5",
          "sha256": "78669680ab689a7bfa1c1991f28071d92acf54434f8fb99c068858b8dd75cee9"
        },
        "downloads": -1,
        "filename": "openimis-be-claim_ai_quality-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3ddde7527153d12876ffec86226390f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40657,
        "upload_time": "2021-11-26T15:32:48",
        "upload_time_iso_8601": "2021-11-26T15:32:48.603590Z",
        "url": "https://files.pythonhosted.org/packages/10/7c/e87404a5a2350d7a3470213f979332003482dad7eecfbd0395ff81772af4/openimis-be-claim_ai_quality-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a0e81b758ee0056ac4bb558ec9ded907924c68da6c209772def4efb5e0dc862",
          "md5": "367b22157ccf6fd61357840b58caeda8",
          "sha256": "4452e4d25f00c4908b33bb3be6d9bd9bc9721343374b59ee502c302321e9d207"
        },
        "downloads": -1,
        "filename": "openimis_be_claim_ai_quality-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "367b22157ccf6fd61357840b58caeda8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 71906,
        "upload_time": "2022-05-12T12:50:00",
        "upload_time_iso_8601": "2022-05-12T12:50:00.885675Z",
        "url": "https://files.pythonhosted.org/packages/1a/0e/81b758ee0056ac4bb558ec9ded907924c68da6c209772def4efb5e0dc862/openimis_be_claim_ai_quality-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92465977485d4c8b567c9151560fc4371582a596b3ae8583f4f0c0dfdb872096",
          "md5": "eae0a6051c9f203e5de64baa7a92f981",
          "sha256": "0ff6ea0e9192ff98950f7dd4bf96db972feaf64aa9abf7b92b82b09758cf04b8"
        },
        "downloads": -1,
        "filename": "openimis-be-claim_ai_quality-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "eae0a6051c9f203e5de64baa7a92f981",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54559,
        "upload_time": "2022-05-12T12:50:02",
        "upload_time_iso_8601": "2022-05-12T12:50:02.316706Z",
        "url": "https://files.pythonhosted.org/packages/92/46/5977485d4c8b567c9151560fc4371582a596b3ae8583f4f0c0dfdb872096/openimis-be-claim_ai_quality-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1a0e81b758ee0056ac4bb558ec9ded907924c68da6c209772def4efb5e0dc862",
        "md5": "367b22157ccf6fd61357840b58caeda8",
        "sha256": "4452e4d25f00c4908b33bb3be6d9bd9bc9721343374b59ee502c302321e9d207"
      },
      "downloads": -1,
      "filename": "openimis_be_claim_ai_quality-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "367b22157ccf6fd61357840b58caeda8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 71906,
      "upload_time": "2022-05-12T12:50:00",
      "upload_time_iso_8601": "2022-05-12T12:50:00.885675Z",
      "url": "https://files.pythonhosted.org/packages/1a/0e/81b758ee0056ac4bb558ec9ded907924c68da6c209772def4efb5e0dc862/openimis_be_claim_ai_quality-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "92465977485d4c8b567c9151560fc4371582a596b3ae8583f4f0c0dfdb872096",
        "md5": "eae0a6051c9f203e5de64baa7a92f981",
        "sha256": "0ff6ea0e9192ff98950f7dd4bf96db972feaf64aa9abf7b92b82b09758cf04b8"
      },
      "downloads": -1,
      "filename": "openimis-be-claim_ai_quality-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "eae0a6051c9f203e5de64baa7a92f981",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 54559,
      "upload_time": "2022-05-12T12:50:02",
      "upload_time_iso_8601": "2022-05-12T12:50:02.316706Z",
      "url": "https://files.pythonhosted.org/packages/92/46/5977485d4c8b567c9151560fc4371582a596b3ae8583f4f0c0dfdb872096/openimis-be-claim_ai_quality-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}