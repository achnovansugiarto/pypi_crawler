{
  "info": {
    "author": "Nikola Marincic",
    "author_email": "nikola.marincic@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Welcome to NumbaSOM\n> A fast Self-Organizing Map Python library implemented in Numba.\n\n\nThis is a **fast and simple to use** SOM library. It utilizes online training (one data point at the time) rather than batch training. The implemented topologies are a simple 2D lattice or a torus.\n\n## How to Install\n\nTo install this package with pip run:\n\n`pip install numbasom`\n\nTo install this package with conda run:\n\n`conda install -c mnikola numbasom`\n\n## How to use\n\nTo import the library you can safely use:\n\n```python\nfrom numbasom import *\n```\n\nA **Self-Organizing Map** is often used to show the underlying structure in data. To show how to use the library, we will train it on 200 random 3-dimensional vectors (so we can render them as colors):\n\n#### Create 200 random colors\n\n```python\nimport numpy as np\ndata = np.random.random([200,3])\n```\n\n#### Initialize the library\n\nWe initalize a map with 50 rows and 100 columns. The default topology is a 2D lattice. We can also train it on a torus by setting `is_torus=True`\n\n```python\nsom = SOM(som_size=(50,100), is_torus=False)\n```\n\n#### Train the SOM\n\nWe will adapt the lattice by iterating 10.000 times through our data points. If we set `normalize=True`, data will be normalized before training. \n\n```python\nlattice = som.train(data, num_iterations=15000)\n```\n\n    SOM training took: 0.366633 seconds.\n\n\n#### To access an individual cell type\n\n```python\nlattice[5,3]\n```\n\n\n\n\n    array([0.92550425, 0.20740594, 0.92610555])\n\n\n\n#### To access multiple cells, slicing works\n\n```python\nlattice[1::6,1]\n```\n\n\n\n\n    array([[0.7473038 , 0.09876245, 0.93051731],\n           [0.93542156, 0.18717452, 0.87611239],\n           [0.9486485 , 0.11080808, 0.57557379],\n           [0.87873391, 0.13527156, 0.368202  ],\n           [0.78669284, 0.11830203, 0.2634972 ],\n           [0.68213238, 0.06408478, 0.33050376],\n           [0.54769163, 0.05391318, 0.31153485],\n           [0.63722088, 0.12484291, 0.0684501 ],\n           [0.64172725, 0.01517416, 0.09549566]])\n\n\n\nThe shape of the lattice should be (50, 100, 3)\n\n```python\nlattice.shape\n```\n\n\n\n\n    (50, 100, 3)\n\n\n\n#### Visualizing the lattice\n\nSince our lattice is made of 3-dimensional vectors, we can represent it as a lattice of colors.\n\n```python\nimport matplotlib.pyplot as plt\n\nplt.imshow(lattice)\nplt.show()\n```\n\n\n![png](https://raw.githubusercontent.com/nmarincic/numbasom/master/docs/images/output_26_0.png)\n\n\n#### Compute U-matrix\n\nSince the most of the data will not be 3-dimensional, we can use the `u_matrix` (unified distance matrix by Alfred Ultsch) to visualise the map and the clusters emerging on it. \n\n```python\num = u_matrix(lattice)\n```\n\nEach cell of the lattice is just a single value, thus the shape is:\n\n```python\num.shape\n```\n\n\n\n\n    (50, 100)\n\n\n\n#### Plot U-matrix\n\nThe library contains a function `plot_u_matrix` that can help visualise it.\n\n```python\nplot_u_matrix(um, fig_size=(6.2,6.2))\n```\n\n\n![png](https://raw.githubusercontent.com/nmarincic/numbasom/master/docs/images/output_34_0.png)\n\n\n#### Project on the lattice\n\nTo project data on the lattice, use `project_on_lattice` function.\n\nLet's project a couple of predefined color on the trained lattice and see in which cells they will end up:\n\n```python\ncolors = np.array([[1.,0.,0.],[0.,1.,0.],[0.,0.,1.],[1.,1.,0.],[0.,1.,1.],[1.,0.,1.],[0.,0.,0.],[1.,1.,1.]])\ncolor_labels = ['red', 'green', 'blue', 'yellow', 'cyan', 'purple','black', 'white']\n```\n\n```python\nprojection = project_on_lattice(colors, lattice, additional_list=color_labels)\n\nfor p in projection:\n    if projection[p]:\n        print (p, projection[p][0])\n```\n\n    Projecting on SOM took: 0.158945 seconds.\n    (0, 85) blue\n    (2, 39) white\n    (5, 1) purple\n    (10, 60) cyan\n    (41, 59) green\n    (49, 12) red\n    (49, 40) yellow\n    (49, 96) black\n\n\n#### Find every cell's closest vector in the data\n\nTo find every cell's closes vector in the provided data, use `lattice_closest_vectors` function.\n\nWe can again use the colors example:\n\n```python\nclosest = lattice_closest_vectors(colors, lattice, additional_list=color_labels)\n```\n\n    Finding closest data points took: 0.003056 seconds.\n\n\nWe can ask now to which value in `color_labels` are out lattice cells closest to:\n\n```python\nclosest[(1,1)]\n```\n\n\n\n\n    ['purple']\n\n\n\n```python\nclosest[(40,80)]\n```\n\n\n\n\n    ['green']\n\n\n\nWe can find the closest vectors without supplying an additional list. Then we get the association between the lattice and the data vectors that we can display as colors.\n\n```python\nclosest_vec = lattice_closest_vectors(colors, lattice)\n```\n\n    Finding closest data points took: 0.003491 seconds.\n\n\nWe take the values of the `closest_vec` vector and reshape it into a numpy vector `values`.\n\n```python\nvalues = np.array(list(closest_vec.values())).reshape(50,100,-1)\n```\n\nWe can now visualise the projection of our 8 hard-coded colors onto the lattice:\n\n```python\nplt.imshow(values)\nplt.show()\n```\n\n\n![png](https://raw.githubusercontent.com/nmarincic/numbasom/master/docs/images/output_52_0.png)\n\n\n#### Compute how each data vector 'activates' the lattice\n\nWe can use the function `lattice_activations`:\n\n```python\nactivations = lattice_activations(colors, lattice)\n```\n\n    Computing SOM activations took: 0.000484 seconds.\n\n\nNow we can show how the vector `blue: [0.,0.,1.]`  activates the lattice:\n\n```python\nplt.imshow(activations[2])\nplt.show()\n```\n\n\n![png](https://raw.githubusercontent.com/nmarincic/numbasom/master/docs/images/output_57_0.png)\n\n\nIf we wish to scale the higher values up, and scale down the lower values, we can use the argument `exponent` when computing the activations:\n\n```python\nactivations = lattice_activations(colors, lattice, exponent=8)\n```\n\n    Computing SOM activations took: 0.000838 seconds.\n\n\n```python\nplt.imshow(activations[2])\nplt.show()\n```\n\n\n![png](https://raw.githubusercontent.com/nmarincic/numbasom/master/docs/images/output_60_0.png)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nmarincic/numbasom/tree/master/",
    "keywords": "SOM self-organizing map python numba AI ML kohonen",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "numbasom",
    "package_url": "https://pypi.org/project/numbasom/",
    "platform": "",
    "project_url": "https://pypi.org/project/numbasom/",
    "project_urls": {
      "Homepage": "https://github.com/nmarincic/numbasom/tree/master/"
    },
    "release_url": "https://pypi.org/project/numbasom/0.0.5/",
    "requires_dist": [
      "pip",
      "packaging",
      "numba",
      "numpy",
      "matplotlib",
      "nbconvert (==5.6.1) ; extra == 'dev'",
      "jupyter-client (==6.1.2) ; extra == 'dev'"
    ],
    "requires_python": ">=3.6",
    "summary": "A Fast Self-Organizing Map Python Library Implemented in Numba",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12268395,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e73f388d762a4b177305a128550799a6cb975100cd49df4a7ae74fa8ba70f0ac",
          "md5": "73bf3d67228b6457c4ee8319045740f4",
          "sha256": "453bc4ffb1ae7724445e15cf2f61e8555b6ec09af551f75e78a651b96a976136"
        },
        "downloads": -1,
        "filename": "numbasom-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73bf3d67228b6457c4ee8319045740f4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10141,
        "upload_time": "2021-09-21T13:05:37",
        "upload_time_iso_8601": "2021-09-21T13:05:37.073676Z",
        "url": "https://files.pythonhosted.org/packages/e7/3f/388d762a4b177305a128550799a6cb975100cd49df4a7ae74fa8ba70f0ac/numbasom-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "229b15c543248f1f6519889256d98ca7ec7719839887c45dce51022cfb1a3cb9",
          "md5": "a47cf0ed7d694363534af72a62acc744",
          "sha256": "8f1812d183ba5ab252bc4fd036243ea126f90db3a16d4b8394fea65baa5c74af"
        },
        "downloads": -1,
        "filename": "numbasom-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a47cf0ed7d694363534af72a62acc744",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12287,
        "upload_time": "2021-09-21T13:05:38",
        "upload_time_iso_8601": "2021-09-21T13:05:38.698787Z",
        "url": "https://files.pythonhosted.org/packages/22/9b/15c543248f1f6519889256d98ca7ec7719839887c45dce51022cfb1a3cb9/numbasom-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12ba18c4314d6c9f40f1ec3396aa1d2e369b90f011765fb2b79c2dc2963fc3bc",
          "md5": "0b5452b1fd3701b1041ac6f6492c16c1",
          "sha256": "df1bbdfb48abb9f46f44dd3f81aa044b3267af70846b0f4b1942f169b46498b8"
        },
        "downloads": -1,
        "filename": "numbasom-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b5452b1fd3701b1041ac6f6492c16c1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11314,
        "upload_time": "2021-09-21T14:05:18",
        "upload_time_iso_8601": "2021-09-21T14:05:18.343510Z",
        "url": "https://files.pythonhosted.org/packages/12/ba/18c4314d6c9f40f1ec3396aa1d2e369b90f011765fb2b79c2dc2963fc3bc/numbasom-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40a0689bc970a7a0df074114efc749393180c3a15e3c6c578fbd6563476aaaeb",
          "md5": "caa022bc53dac46f29038beccdeb4a90",
          "sha256": "8902d4d03b6f83a871ef236529d615d747bb8dd0eb6d6f5e99878a56ee312019"
        },
        "downloads": -1,
        "filename": "numbasom-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "caa022bc53dac46f29038beccdeb4a90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13809,
        "upload_time": "2021-09-21T14:05:19",
        "upload_time_iso_8601": "2021-09-21T14:05:19.863314Z",
        "url": "https://files.pythonhosted.org/packages/40/a0/689bc970a7a0df074114efc749393180c3a15e3c6c578fbd6563476aaaeb/numbasom-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20a20a7bd340a3a6f22bbde316f319fa13401dc0f395c835bc3bbd8a8d1eafdc",
          "md5": "91ef29f960018c79ffd4bd3d92d6b42d",
          "sha256": "4d735af44f5c221bf9b619fbcd58b158fcc6b22e54ff5f99a253a03cf8892d0f"
        },
        "downloads": -1,
        "filename": "numbasom-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "91ef29f960018c79ffd4bd3d92d6b42d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12016,
        "upload_time": "2021-10-04T15:07:24",
        "upload_time_iso_8601": "2021-10-04T15:07:24.456886Z",
        "url": "https://files.pythonhosted.org/packages/20/a2/0a7bd340a3a6f22bbde316f319fa13401dc0f395c835bc3bbd8a8d1eafdc/numbasom-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cfe2ddfd171593f72816cb569608dac7c916b95256bbdf927aa5d2678dda91bb",
          "md5": "fb013749add10b2ab45d73eef421f757",
          "sha256": "b84608e0664bd03bbf1b1e45e6c6f1783385ec3f22de607f7e263adcdb7870d3"
        },
        "downloads": -1,
        "filename": "numbasom-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fb013749add10b2ab45d73eef421f757",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12847,
        "upload_time": "2021-10-04T15:07:25",
        "upload_time_iso_8601": "2021-10-04T15:07:25.883791Z",
        "url": "https://files.pythonhosted.org/packages/cf/e2/ddfd171593f72816cb569608dac7c916b95256bbdf927aa5d2678dda91bb/numbasom-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6cd3ab16e633741225d81de7d53f3ddbcd060be19b4b1ded835e13967903f98",
          "md5": "7929c60b1f2f02a400666ff4d5347a06",
          "sha256": "3714bffa95bd9e298bf8b7ed3ef781e2ac0f83fc7dd166bd4f0847749151e17c"
        },
        "downloads": -1,
        "filename": "numbasom-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7929c60b1f2f02a400666ff4d5347a06",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12019,
        "upload_time": "2021-10-05T08:06:53",
        "upload_time_iso_8601": "2021-10-05T08:06:53.759423Z",
        "url": "https://files.pythonhosted.org/packages/e6/cd/3ab16e633741225d81de7d53f3ddbcd060be19b4b1ded835e13967903f98/numbasom-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef52f961189885c1d1ff5541a881b7b9abfddaf91655ca7d3df4a8b8c2e9abf1",
          "md5": "01a910ef0713209b4908560223567e6b",
          "sha256": "6a8a023b80d178cd4e005a926062a0fa6fe9cb243a7ace0ae5fd0fe32b24aea6"
        },
        "downloads": -1,
        "filename": "numbasom-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "01a910ef0713209b4908560223567e6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12849,
        "upload_time": "2021-10-05T08:06:55",
        "upload_time_iso_8601": "2021-10-05T08:06:55.246435Z",
        "url": "https://files.pythonhosted.org/packages/ef/52/f961189885c1d1ff5541a881b7b9abfddaf91655ca7d3df4a8b8c2e9abf1/numbasom-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11a373c14eeab324af68353381c1a2b87cef2b588aca905fb54ed8b1bbd298a5",
          "md5": "b7a9cdb7b6b93177bbfca9f77216d8a8",
          "sha256": "b4d4d62f25eb2bb7b116b8ec01c3d64b4af16b51180501e48f3ac0a071d87ad5"
        },
        "downloads": -1,
        "filename": "numbasom-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b7a9cdb7b6b93177bbfca9f77216d8a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12911,
        "upload_time": "2021-12-10T15:28:09",
        "upload_time_iso_8601": "2021-12-10T15:28:09.898383Z",
        "url": "https://files.pythonhosted.org/packages/11/a3/73c14eeab324af68353381c1a2b87cef2b588aca905fb54ed8b1bbd298a5/numbasom-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36ab794740e7f017888530a38dbc3e5db4a995b6b6dd8fe8536886d051db2c64",
          "md5": "85330a4d633562b43d51f175ec6ad0e6",
          "sha256": "c3e14bae64e56b3f38f415d31525bd5c7c91e56f8c23ca5bf6531ed3ea21d6eb"
        },
        "downloads": -1,
        "filename": "numbasom-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "85330a4d633562b43d51f175ec6ad0e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13812,
        "upload_time": "2021-12-10T15:28:11",
        "upload_time_iso_8601": "2021-12-10T15:28:11.786224Z",
        "url": "https://files.pythonhosted.org/packages/36/ab/794740e7f017888530a38dbc3e5db4a995b6b6dd8fe8536886d051db2c64/numbasom-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "11a373c14eeab324af68353381c1a2b87cef2b588aca905fb54ed8b1bbd298a5",
        "md5": "b7a9cdb7b6b93177bbfca9f77216d8a8",
        "sha256": "b4d4d62f25eb2bb7b116b8ec01c3d64b4af16b51180501e48f3ac0a071d87ad5"
      },
      "downloads": -1,
      "filename": "numbasom-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b7a9cdb7b6b93177bbfca9f77216d8a8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 12911,
      "upload_time": "2021-12-10T15:28:09",
      "upload_time_iso_8601": "2021-12-10T15:28:09.898383Z",
      "url": "https://files.pythonhosted.org/packages/11/a3/73c14eeab324af68353381c1a2b87cef2b588aca905fb54ed8b1bbd298a5/numbasom-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "36ab794740e7f017888530a38dbc3e5db4a995b6b6dd8fe8536886d051db2c64",
        "md5": "85330a4d633562b43d51f175ec6ad0e6",
        "sha256": "c3e14bae64e56b3f38f415d31525bd5c7c91e56f8c23ca5bf6531ed3ea21d6eb"
      },
      "downloads": -1,
      "filename": "numbasom-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "85330a4d633562b43d51f175ec6ad0e6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 13812,
      "upload_time": "2021-12-10T15:28:11",
      "upload_time_iso_8601": "2021-12-10T15:28:11.786224Z",
      "url": "https://files.pythonhosted.org/packages/36/ab/794740e7f017888530a38dbc3e5db4a995b6b6dd8fe8536886d051db2c64/numbasom-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}