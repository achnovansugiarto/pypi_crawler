{
  "info": {
    "author": "Bslience",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Fastweb - 高速迭代 · 快速试错\n============================\n\n|build-status|\n\n依赖 ``Tornado`` ``Celery`` ``Thrift`` 开发的快速构建web应用的框架。\n\nWeb层示例\n--------\n\n.. code-block:: ini\n\n    ;组件配置文件(component.ini)\n\n    ;thrift rpc 组件配置\n    [tftrpc:hello_service]\n    host = localhost\n    port = 8888\n    thrift_module = gen-py-tornado.HelloService.HelloService\n    size = 10\n\n    ;mysql组件配置\n    [mysql:test_mysql]\n    host = localhost\n    port = 3306\n    user = username\n    password = password\n    db = db_name\n    timeout = 5\n    charset=utf8\n    size=5\n    awake = 300\n\n    ;mongo组件配置\n    [mongo:test_mongo]\n    host = localhost\n    port = 27017\n    timeout = 10\n\n    ;redis组件配置\n    [redis:test_redis]\n    host = localhost\n    port = 6379\n    db = 1\n\n    ;task组件配置\n    [task:test_task]\n    name = test_task\n    broker = amqp://guest:guest@localhost:5672//\n    backend = redis://localhost/0\n    task_class = some_tasks.add.Add\n    queue = test_task_queue\n    exchange = test_task_exchange\n    routing_key = test_task_routing_key\n\n.. code-block:: python\n\n    \"\"\"handler（handler.test）\"\"\"\n\n    from fastweb import Request\n    from fastweb.web import Api, Page\n    from fastweb.web import coroutine, run_on_executor\n\n    class Test(Api):\n\n        @coroutine\n        @checkArgument(name=str, sex=int)\n        def get(self):\n\n            # 加载handler级别线程池\n            self.load_executor(5)\n            # handler级别线程池示例\n            r = yield self.test_executor()\n\n            # mysql使用示例\n            ret = yield self.test_mysql.query('select * from table limit 20;')\n            print self.test_mysql.fetch()\n\n            # RPC使用示例\n            yield self.hello_service.sayHello()\n\n            # Redis使用示例\n            yield self.test_redis.call('set', 'name', 'jackson')\n\n            # Http请求示例\n            request = Request(method='GET', url='http://www.baidu.com')\n            ret = yield self.http_request(request)\n\n            # 任务调用示例\n            yield self.test_task.call_async(args=(101, 2))\n            x = yield self.test_task.call(args=(101, 2))\n\n            # response\n            self.end('SUC', log=False, **{'name':0})\n\n        # 在handler级别线程池中运行\n        @run_on_executor\n        def test_executor(self):\n            time.sleep(10)\n            return 1000\n\n    \"\"\"服务加载组件和启动\"\"\"\n\n    from fastweb.web import start_web_server\n    from fastweb.loader import app\n    from fastweb.pattern import  SyncPattern, AsynPattern\n\n    if __name__ == '__main__':\n\n        options.parse_command_line()\n        app.load_recorder('app.log', system_level='DEBUG')\n        app.load_configuration(backend='ini', path='component.ini')\n        app.load_errcode()\n        app.load_component(pattern=AsynPattern, backend='ini', path=options.config)\n        app.load_component(pattern=AsynPattern, backend='ini', path='task.ini')\n\n        from handler.test import Test\n\n        handlers = [(r'/test', Test)]\n\n        start_web_server(6666, handlers, debug=True, xheaders=False)\n\n\nTask层示例\n---------\n\n.. code-block:: ini\n\n    ;task配置文件(task.ini)\n\n    ;task组件配置\n    [task:test_task]\n    name = test_task\n    broker = amqp://guest:guest@localhost:5672//\n    backend = redis://localhost/0\n    task_class = some_tasks.add.Add\n    queue = test_task_queue\n    exchange = test_task_exchange\n    routing_key = test_task_routing_key\n\n.. code-block:: python\n\n    class Add(object):\n        \"\"\"任务\"\"\"\n\n        def run(self, x, y):\n            return x+y\n\n    if __name__ == '__main__':\n        app.load_recorder('task.log', system_level='DEBUG')\n        app.load_component(pattern=AsynPattern, backend='ini', path='task.ini')\n        start_task_worker()\n\nService层示例\n------------\n\n请参考examples中示例。\n        \n安装\n----\n\n``python setup install``\n\n``pip install fastweb``\n\n适用场景\n-------\n\nFastweb是一个快速构建web应用的框架，与Python的哲学相同，都是期望能够让使用者更快速的开发出满足需求的后端代码。\n高速迭代，快速试错，这是使用Fastweb最大的效益！\n\n抉择\n----\n关于为什么选择 ``Tornado`` ``Celery`` ``Thrift`` 作为Fastweb的工具集合中的重要成员。\n\n\n.. |build-status| image:: https://travis-ci.org/BSlience/fastweb.svg?branch=master\n    :alt: Build status\n    :target: https://travis-ci.org/BSlience/fastweb",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cli-fastweb",
    "package_url": "https://pypi.org/project/cli-fastweb/",
    "platform": "",
    "project_url": "https://pypi.org/project/cli-fastweb/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/cli-fastweb/1.4.2.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "FastWeb is a Python fast-building web frame refered by Tornado, Celery, Thrift",
    "version": "1.4.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3181729,
  "releases": {
    "1.4.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7139fc2f79c490be9979edcf2144678a6ba92650133adc9b71ffd4e12da9969",
          "md5": "cc2bc7ae8e153927d828922459d5f0fc",
          "sha256": "95e64312a78571c9e53867b714888972f8b3caf45808c1e22ef40ea9f11847ec"
        },
        "downloads": -1,
        "filename": "cli_fastweb-1.4.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cc2bc7ae8e153927d828922459d5f0fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50767,
        "upload_time": "2017-08-30T06:29:32",
        "upload_time_iso_8601": "2017-08-30T06:29:32.746600Z",
        "url": "https://files.pythonhosted.org/packages/a7/13/9fc2f79c490be9979edcf2144678a6ba92650133adc9b71ffd4e12da9969/cli_fastweb-1.4.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "178367d0e1860f8319c7a4ade7fcbca2f3e7b28c6708466d4b79a5b1980ab309",
          "md5": "a7e6cdd5f52aac30e0940c794814e101",
          "sha256": "054670a988a8fb2663de248518d1dbcd7d3d5d175ebb4b354589536ebcc36aa4"
        },
        "downloads": -1,
        "filename": "cli_fastweb-1.4.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a7e6cdd5f52aac30e0940c794814e101",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50808,
        "upload_time": "2017-09-18T07:25:09",
        "upload_time_iso_8601": "2017-09-18T07:25:09.137749Z",
        "url": "https://files.pythonhosted.org/packages/17/83/67d0e1860f8319c7a4ade7fcbca2f3e7b28c6708466d4b79a5b1980ab309/cli_fastweb-1.4.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "178367d0e1860f8319c7a4ade7fcbca2f3e7b28c6708466d4b79a5b1980ab309",
        "md5": "a7e6cdd5f52aac30e0940c794814e101",
        "sha256": "054670a988a8fb2663de248518d1dbcd7d3d5d175ebb4b354589536ebcc36aa4"
      },
      "downloads": -1,
      "filename": "cli_fastweb-1.4.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "a7e6cdd5f52aac30e0940c794814e101",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 50808,
      "upload_time": "2017-09-18T07:25:09",
      "upload_time_iso_8601": "2017-09-18T07:25:09.137749Z",
      "url": "https://files.pythonhosted.org/packages/17/83/67d0e1860f8319c7a4ade7fcbca2f3e7b28c6708466d4b79a5b1980ab309/cli_fastweb-1.4.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}