{
  "info": {
    "author": "Luis Riegger",
    "author_email": "lri@me.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "[![Build Status](https://travis-ci.org/himbeles/lightshifts.svg?branch=master)](https://travis-ci.org/himbeles/lightshifts)\n\n\n# lightshifts\n\nCalculate dynamical scalar, vector and tensor light shifts for atomic states\nin the presence of hyperfine coupling.\n\nThe module ```lightshifts.lightshift_solver``` solves for the scalar, \nvector and tensor light shifts induced by atomic dipole transitions.\n\nState energies, hyperfine coupling coefficients and atomic transition properties\nare provided in the form of json files.\n\n\n## Installation\n\nInstall the module using\n\n```bash\npip install git+https://github.com/himbeles/lightshifts.git\n```\n\n## Usage of ```lightshifts.lightshift_solver```\n\nThis is a basic example to calculate the scalar dynamic light shift induced in the groundstate of ytterbium-173 by 100 W/cm^2 light with a  wavelength 670 nm using the example state file [```examples/atom_yb173.json```](examples/atom_yb173.json) and transition file [```examples/transitions_1S0.json```](examples/transitions_1S0.json).\n\n```python\n# Import the module using \nimport lightshifts.lightshift_solver as ls_solver\n\n# Load the atomic state properties file and the transitions file\nls = ls_solver('examples/atom_yb173.json', 'examples/transitions_1S0.json')\n\n# Calculate the scalar lightshift in Hz\nls.scalar_lightshift(lam=670e-9, laser_intensity=100)\n# Out[]: -960.039953941305\n```\n\nThe total dynamic light shift, including scalar, vector and tensor light shifts, can also be obtained -- here, for a magnetic sublevel $`m_F=-5/2`$ and $`\\sigma^+`$ polarized light ($`q=1`$):\n\n```python\n# Calculate the total lightshift in Hz\nls.total_lightshift(lam=670e-9, q=1, mFi=-5/2, laser_intensity=100)\n# Out[]: -960.038498669505\n\n# or a list holding the scalar, vector and tensor light shift separately\nls.lightshifts(lam=670e-9, q=1, mFi=-5/2, laser_intensity=100)\n# Out[]: (-960.039953992523, 0.000817922762313870, 0.000637400256046666)\n```\n\nFor an example of more advanced module usage, see [```examples/example_lightshifts_yb173.ipynb```](examples/example_lightshifts_yb173.ipynb).\n\n## The state and transition files\n\nState energies, hyperfine coupling coefficients and transition properties for an atom \nare provided in the form of two json files:\n\n-   `atom.json` is a database of (at least) all the states connected by the atomic transitions that induce the dynamic light shift and which are given in the second file. It also includes the `name` of the atom and its nuclear spin `I`. The states are specified and sorted using an electon shell configuration string (e.g. `6s6p`) and the LS coupling name of the state (e.g. `3P1`). From the LS coupling name, the tool infers the relevant quantum number `J` for the given state. If only the quantum number J is known for the state, you can give it an arbitrary name and specify `J` as a property of the state (see [```examples/atom_yb173.json```](examples/atom_yb173.json)). The `frequency` in Hz of all the states must be provided relative to the ground state or *one* reference state). \n\n    Optionally, you can give the hyperfine coupling coefficients A (`hyper_A`) and B (`hyper_B`) in Hz, such that the vector and tensor shifts around these states can be calculated.\n\n    For example:\n\n    ```json\n    {\n        \"name\": \"yb173\",\n        \"I\": 2.5,\n        \"states\": {\n            \"6s6s\": {\n                \"1S0\": {\n                    \"frequency\": 0,\n                    \"hyper_A\": 0,\n                    \"hyper_B\": 0\n                }\n            },\n            \"6s6p\": {\n                \"3P0\": {\n                    \"frequency\": 518294362279306.1,\n                    \"_ref_frequency\": \"NIST\",\n                    \"hyper_A\": 0,\n                    \"hyper_B\": 0\n                },\n                \"3P1\": {\n                    \"frequency\": 539386800288320.6,\n                    \"_ref_frequency\": \"NIST\",\n                    \"hyper_A\": -1094328000.0,\n                    \"hyper_B\": -826635000.0,\n                    \"_ref_hyper\": \"Pandey et al., PRA 80, 022518 (2009)\"\n                }\n            }\n        }\n    }\n    ```\n\n-   `transitions-stateX.json` lists all the relevant transitions from **one** starting (initial) state `state_i`, that we want to calculate the light shifts for. It should include the transitions most relevant for the wavelength range to be probed, meaning transitions to final states `state_f` with a wavelength near that range and the broader the transition the more important. As the transition strength, specify the decay rate `Gamma` from `state_f` to `state_i` (Einstein A coefficient). For a closed transition, this would be the inverse lifetime of `state_f` or $`\\Gamma = 2\\pi\\gamma`$ with $`\\gamma`$ the natural linewidth.\n\n    For example:\n\n    ```json\n    [\n        {\n            \"state_i\": [\n                \"6s6s\",\n                \"1S0\"\n            ],\n            \"state_f\": [\n                \"6s6p\",\n                \"1P1\"\n            ],\n            \"Gamma\": 183016105.4172767,\n            \"_ref_Gamma\": \"Blagoev-1994\"\n        },\n        {\n            \"state_i\": [\n                \"6s6s\",\n                \"1S0\"\n            ],\n            \"state_f\": [\n                \"6s6p\",\n                \"3P1\"\n            ],\n            \"Gamma\": 1154601.0853250204,\n            \"_ref_Gamma\": \"Blagoev-1994\"\n        }\n    ]\n    ````\n\n## Estimate branching ratios\n\nThe reduced dipole matrix element can be calculated from a measured transition rate between two LS coupling states. However, sometimes only the lifetime of a state is known experimentally and not the branching ratios into energetically lower lying states. \nThe method  ```branching_ratio_LS```  of the class ```lightshifts.atom``` can help by estimating the ratio of dipole matrix elements between a selection of states, using the parity selection rule for the electron configuration and angular momentum selection.\n\nFirst, import a dictionary of atomic states and their energies (same as the atomic states file above).\n\n```python\nimport lightshifts.atom as atom\nyb = atom.from_json('atom_yb173.json')\n```\n\nThen, calculate all branching ratios of an initial state state_i into all energetically lower lying states in the imported state library:\n\n```python\nstate_i = ('6s5d','3D1')\nyb.branching_ratios_LS_dict(state_i, verbose=True)\n\n# Out[]:\n#    branching ratio into  ('6s6p', '3P0') = 0.6387527684341578\n#    branching ratio into  ('6s6p', '3P1') = 0.3519121426242965\n#    branching ratio into  ('6s6p', '3P2') = 0.009335088941545725\n#\n#    {('6s6s', '1S0'): 0.0,\n#     ('6s6p', '3P0'): 0.6387527684341578,\n#     ('6s6p', '3P1'): 0.3519121426242965,\n#     ('6s6p', '3P2'): 0.009335088941545725}\n```\n\nor, calculate the branching into one single final state only: \n\n```python\nstate_i = ('6s5d','3D1')\nstate_f = ('6s6p','3P0')\nyb.branching_ratio_LS(state_i, state_f)\n\n# Out[]: 0.6387527684341578\n```\n\nAn example of how the transition rates were calculated for ytterbium-173 can be found in [```examples/example_transition_collection_yb173.ipynb```](examples/example_transition_collection_yb173.ipynb).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.physik.uni-muenchen.de/software/lightshifts",
    "keywords": "physics cold atoms lightshift hyperfine coupling",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lightshifts",
    "package_url": "https://pypi.org/project/lightshifts/",
    "platform": "",
    "project_url": "https://pypi.org/project/lightshifts/",
    "project_urls": {
      "Homepage": "https://gitlab.physik.uni-muenchen.de/software/lightshifts"
    },
    "release_url": "https://pypi.org/project/lightshifts/0.6.3/",
    "requires_dist": [
      "numpy (>1.10)",
      "sympy (>1.1)",
      "pandas (>0.22)",
      "matplotlib"
    ],
    "requires_python": "",
    "summary": "Calculate dynamical scalar, vector and tensor light shifts.",
    "version": "0.6.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6150119,
  "releases": {
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60ac871570bed6834f88d64d7a5a6533a4ca29a0d2b1bd58b8d70f800aff50c8",
          "md5": "8878d2e02fcb2e5094ea0c5e3b5cddfb",
          "sha256": "562db8354c74ed04484fc8cc49e3e0fc7c0c439c9c62b9ed4a848ad96c9e6c75"
        },
        "downloads": -1,
        "filename": "lightshifts-0.6.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8878d2e02fcb2e5094ea0c5e3b5cddfb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12731,
        "upload_time": "2019-11-17T10:32:26",
        "upload_time_iso_8601": "2019-11-17T10:32:26.034289Z",
        "url": "https://files.pythonhosted.org/packages/60/ac/871570bed6834f88d64d7a5a6533a4ca29a0d2b1bd58b8d70f800aff50c8/lightshifts-0.6.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce706c2490ef864bc3a98074528afc400086480b6589332beba0f2cd9833ca98",
          "md5": "043a704d4aea65516640e9cfca61bdf1",
          "sha256": "0acf5343102192660daef5b0ec4d43a592101235508703dae445f6c4bbed890e"
        },
        "downloads": -1,
        "filename": "lightshifts-0.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "043a704d4aea65516640e9cfca61bdf1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 724325,
        "upload_time": "2019-11-17T10:32:30",
        "upload_time_iso_8601": "2019-11-17T10:32:30.928559Z",
        "url": "https://files.pythonhosted.org/packages/ce/70/6c2490ef864bc3a98074528afc400086480b6589332beba0f2cd9833ca98/lightshifts-0.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "710f08098f715eb43bae1ee2bdd823bf47dda150b8e83fc339f7e69315933404",
          "md5": "63c441eca6439d0856561ba879841a35",
          "sha256": "808075219d6800358f99f1124e6f7c5ee03ef7d4f9f1bd3ef54cebc192b2346d"
        },
        "downloads": -1,
        "filename": "lightshifts-0.6.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "63c441eca6439d0856561ba879841a35",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12730,
        "upload_time": "2019-11-17T10:43:19",
        "upload_time_iso_8601": "2019-11-17T10:43:19.777740Z",
        "url": "https://files.pythonhosted.org/packages/71/0f/08098f715eb43bae1ee2bdd823bf47dda150b8e83fc339f7e69315933404/lightshifts-0.6.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3383fd91dd7b9149772aeeb262dd7f55443c7f11b4c3faaa46323928fe354378",
          "md5": "60b129547daf706164ffab0b8390e496",
          "sha256": "92d940ef50b078ee809e6bcaa4bc99130964102a2d6b8cd686c31dc2eb695674"
        },
        "downloads": -1,
        "filename": "lightshifts-0.6.3.tar.gz",
        "has_sig": false,
        "md5_digest": "60b129547daf706164ffab0b8390e496",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 725922,
        "upload_time": "2019-11-17T10:43:21",
        "upload_time_iso_8601": "2019-11-17T10:43:21.188038Z",
        "url": "https://files.pythonhosted.org/packages/33/83/fd91dd7b9149772aeeb262dd7f55443c7f11b4c3faaa46323928fe354378/lightshifts-0.6.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "710f08098f715eb43bae1ee2bdd823bf47dda150b8e83fc339f7e69315933404",
        "md5": "63c441eca6439d0856561ba879841a35",
        "sha256": "808075219d6800358f99f1124e6f7c5ee03ef7d4f9f1bd3ef54cebc192b2346d"
      },
      "downloads": -1,
      "filename": "lightshifts-0.6.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "63c441eca6439d0856561ba879841a35",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12730,
      "upload_time": "2019-11-17T10:43:19",
      "upload_time_iso_8601": "2019-11-17T10:43:19.777740Z",
      "url": "https://files.pythonhosted.org/packages/71/0f/08098f715eb43bae1ee2bdd823bf47dda150b8e83fc339f7e69315933404/lightshifts-0.6.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3383fd91dd7b9149772aeeb262dd7f55443c7f11b4c3faaa46323928fe354378",
        "md5": "60b129547daf706164ffab0b8390e496",
        "sha256": "92d940ef50b078ee809e6bcaa4bc99130964102a2d6b8cd686c31dc2eb695674"
      },
      "downloads": -1,
      "filename": "lightshifts-0.6.3.tar.gz",
      "has_sig": false,
      "md5_digest": "60b129547daf706164ffab0b8390e496",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 725922,
      "upload_time": "2019-11-17T10:43:21",
      "upload_time_iso_8601": "2019-11-17T10:43:21.188038Z",
      "url": "https://files.pythonhosted.org/packages/33/83/fd91dd7b9149772aeeb262dd7f55443c7f11b4c3faaa46323928fe354378/lightshifts-0.6.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}