{
  "info": {
    "author": "Jeremy Garff <jer@jers.net>, Phil Howard <phil@pimoroni.com>",
    "author_email": "jer@jers.net, phil@pimoroni.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "rpi\\_ws281x\r\n===========\r\n\r\nUserspace Raspberry Pi library for controlling WS281X LEDs. This\r\nincludes WS2812 and SK6812RGB RGB LEDs Preliminary support is now\r\nincluded for SK6812RGBW LEDs (yes, RGB + W) The LEDs can be controlled\r\nby either the PWM (2 independent channels) or PCM controller (1 channel)\r\nor the SPI interface (1 channel).\r\n\r\nBackground:\r\n-----------\r\n\r\nThe BCM2835 in the Raspberry Pi has both a PWM and a PCM module that are\r\nwell suited to driving individually controllable WS281X LEDs. Using the\r\nDMA, PWM or PCM FIFO, and serial mode in the PWM, it's possible to\r\ncontrol almost any number of WS281X LEDs in a chain connected to the\r\nappropriate output pin. For SPI the Raspbian spidev driver is used\r\n(``/dev/spidev0.0``). This library and test program set the clock rate\r\nto 3X the desired output frequency and creates a bit pattern in RAM from\r\nan array of colors where each bit is represented by 3 bits as follows.\r\n\r\n::\r\n\r\n    Bit 1 - 1 1 0\r\n    Bit 0 - 1 0 0\r\n\r\nGPIO Usage:\r\n-----------\r\n\r\nThe GPIOs that can be used are limited by the hardware of the Pi and\r\nwill vary based on the method used to drive them (PWM, PCM or SPI).\r\nBeware that the GPIO numbers are not the same as the physical pin\r\nnumbers on the header.\r\n\r\nPWM:\r\n\r\n::\r\n\r\n            PWM0, which can be set to use GPIOs 12, 18, 40, and 52.\r\n            Only 12 (pin 32) and 18 (pin 12) are available on the B+/2B/3B\r\n\r\n            PWM1 which can be set to use GPIOs 13, 19, 41, 45 and 53.\r\n            Only 13 is available on the B+/2B/PiZero/3B, on pin 33\r\n\r\nPCM:\r\n\r\n::\r\n\r\n            PCM_DOUT, which can be set to use GPIOs 21 and 31.\r\n            Only 21 is available on the B+/2B/PiZero/3B, on pin 40.\r\n\r\nSPI:\r\n\r\n::\r\n\r\n            SPI0-MOSI is available on GPIOs 10 and 38.\r\n            Only GPIO 10 is available on all models.\r\n            See also note for RPi 3 below.\r\n\r\nPower and voltage requirements\r\n------------------------------\r\n\r\nWS281X LEDs are generally driven at 5V. Depending on your actual LED\r\nmodel and data line length you might be able to successfully drive the\r\ndata input with 3.3V. However in the general case you probably want to\r\nuse a level shifter to convert from the Raspberry Pi GPIO/PWM to 5V.\r\n\r\nIt is also possible to run the LEDs from a 3.3V - 3.6V power source, and\r\nconnect the GPIO directly at a cost of brightness, but this isn't\r\nrecommended.\r\n\r\nThe test program is designed to drive a 8x8 grid of LEDs e.g.from\r\nAdafruit (http://www.adafruit.com/products/1487) or Pimoroni\r\n(https://shop.pimoroni.com/products/unicorn-hat). Please see the\r\nAdafruit and Pimoroni websites for more information.\r\n\r\nKnow what you're doing with the hardware and electricity. I take no\r\nreponsibility for damage, harm, or mistakes.\r\n\r\nImportant warning about DMA channels\r\n------------------------------------\r\n\r\nYou must make sure that the DMA channel you choose to use for the LEDs\r\nis not `already in\r\nuse <https://www.raspberrypi.org/forums/viewtopic.php?p=609380#p609380>`__\r\nby the operating system.\r\n\r\nFor example, **using DMA channel 5 will cause filesystem corruption** \r\non the Raspberry Pi 3 Model B. \r\nSee: https://github.com/jgarff/rpi_ws281x/issues/224\r\n\r\nThe default DMA channel (10) should be safe for the Raspberry Pi 3 Model\r\nB, but this may change in future software releases.\r\n\r\nLimitations:\r\n------------\r\n\r\nPWM\r\n~~~\r\n\r\nSince this library and the onboard Raspberry Pi audio both use the PWM,\r\nthey cannot be used together. You will need to blacklist the Broadcom\r\naudio kernel module by creating a file\r\n``/etc/modprobe.d/snd-blacklist.conf`` with\r\n\r\n::\r\n\r\n    blacklist snd_bcm2835\r\n\r\nIf the audio device is still loading after blacklisting, you may also\r\nneed to comment it out in the /etc/modules file.\r\n\r\nOn headless systems you may also need to force audio through hdmi Edit\r\nconfig.txt and add:\r\n\r\n::\r\n\r\n    hdmi_force_hotplug=1\r\n    hdmi_force_edid_audio=1\r\n\r\nA reboot is required for this change to take effect\r\n\r\nSome distributions use audio by default, even if nothing is being\r\nplayed. If audio is needed, you can use a USB audio device instead.\r\n\r\nPCM\r\n~~~\r\n\r\nWhen using PCM you cannot use digital audio devices which use I2S since\r\nI2S uses the PCM hardware, but you can use analog audio.\r\n\r\nSPI\r\n~~~\r\n\r\nWhen using SPI the ledstring is the only device which can be connected\r\nto the SPI bus. Both digital (I2S/PCM) and analog (PWM) audio can be\r\nused.\r\n\r\nMany distributions have a maximum SPI transfer of 4096 bytes. This can\r\nbe changed in ``/boot/cmdline.txt`` by appending\r\n\r\n::\r\n\r\n        spidev.bufsiz=32768\r\n\r\nOn a RPi 3 you have to change the GPU core frequency to 250 MHz,\r\notherwise the SPI clock has the wrong frequency. Do this by adding the\r\nfollowing line to /boot/config.txt and reboot.\r\n\r\n::\r\n\r\n        core_freq=250\r\n\r\nOn a RPi 4 its dynamic frequency clocking has to be disabled, since it will\r\ndesync the SPI clock. Do this by adding this line to\r\n``/boot/config.txt``. (``core_freq`` does not have to be changed, since\r\nthe default value of 500MHz is SPI compatible)\r\n\r\n::\r\n\r\n        core_freq_min=500\r\n\r\nSPI requires you to be in the ``gpio`` group if you wish to control your\r\nLEDs without root.\r\n\r\nComparison PWM/PCM/SPI\r\n----------------------\r\n\r\nBoth PWM and PCM use DMA transfer to output the control signal for the\r\nLEDs. The max size of a DMA transfer is 65536 bytes. Since each LED\r\nneeds 12 bytes (4 colors, 8 symbols per color, 3 bits per symbol) this\r\nmeans you can control approximately 5400 LEDs for a single strand in PCM\r\nand 2700 LEDs per string for PWM (Only PWM can control 2 independent\r\nstrings simultaneously) SPI uses the SPI device driver in the kernel.\r\nFor transfers larger than 96 bytes the kernel driver also uses DMA. Of\r\ncourse there are practical limits on power and signal quality. These\r\nwill be more constraining in practice than the theoretical limits above.\r\n\r\nWhen controlling a LED string of 240 LEDs the CPU load on the original\r\nPi 2 (BCM2836) are: PWM 5% PCM 5% SPI 1%\r\n\r\n4.3.3\r\n-----\r\n\r\n* New: Added support for Revision 0xc03115 (Pi 4, 4GB v1.5)\r\n* New: Added support for Revision 0xd03115 (Pi 4, 8GB v1.5)\r\n\r\n4.3.2\r\n-----\r\n\r\n* New: Added support for Revision 0xc03131 (Pi 400, 4GB v1.1)\r\n* New: Added support for Revision 0xb03115 (Pi 4, 2GB v1.5)\r\n\r\n4.3.1\r\n-----\r\n\r\n* New: Added support for Revision 0x902120 (Pi Zero 2 W v1.0)\r\n\r\n4.3.0\r\n-----\r\n\r\n* Switched to upstream jgarff/rpi_ws281x library\r\n* New: Added support for Revision 0xd03140 (CM4 v1.0 WiFi)\r\n\r\n4.2.6\r\n-----\r\n\r\n* New: Added support for Revision 0xc03114 (Pi 4, 4GB v1.4)\r\n* New: Added support for Revision 0xa03140 (CM4 v1.0 eMMC)\r\n* New: Added support for Revision 0xb03140 (CM4 v1.0 Lite)\r\n* New: Added support for Revision 0xc03140 (CM4 v1.0 WiFi)\r\n\r\n4.2.5\r\n-----\r\n\r\n* New: Added support for Revision 0xc03130 (Pi 400, 4GB)\r\n* New: Added support for Revision 0xb03114 (Pi 4, 2GB v1.4)\r\n\r\n4.2.4\r\n-----\r\n\r\n* Fix: Fixed rpi_hw_detect for aarch64\r\n* New: Added support for Revision 0xD03114 (Raspberry Pi Model B - 8GB)\r\n\r\n4.2.3\r\n-----\r\n\r\n* Fix: Added support for Pi 4 Rev 1.2 - 0xa03112, 0xb03112, 0xc03112\r\n\r\n4.2.2\r\n-----\r\n\r\n* Fix: Fixed Slice support when setting pixels\r\n* New: Added support for Revision 0xa02083\r\n* New: Added support for Revision 0xa22083\r\n\r\n4.2.1\r\n-----\r\n\r\n* Fix: Added white colour channel to Color()\r\n\r\n4.2.0\r\n-----\r\n\r\n* New: Added support for Raspberry Pi 4\r\n\r\n4.1.0\r\n-----\r\n\r\n* New: Added support for the Pi 3A+\r\n* Fix: Bugfix for ARM64 support\r\n\r\n4.0.0\r\n-----\r\n\r\n* Warning: Removed \"neopixel\" module from this library, use \"rpi_ws281x\" instead, see #8\r\n\r\n3.1.0\r\n-----\r\n\r\n* New: Exposed all contents of ws for easy access to strip_type constants\r\n* Fix: Matched functionality of upstream legacy library by supporting strip_type\r\n* Note: Default strip type is WS2811_STRIP_GRB\r\n\r\n3.0.7\r\n-----\r\n\r\n* New: Added support for Pi 3B+\r\n\r\n\r\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/P13R3/rpi-ws281x-python-3bp_spi1",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rpi-ws281x-3bp-spi1",
    "package_url": "https://pypi.org/project/rpi-ws281x-3bp-spi1/",
    "platform": null,
    "project_url": "https://pypi.org/project/rpi-ws281x-3bp-spi1/",
    "project_urls": {
      "Homepage": "https://github.com/P13R3/rpi-ws281x-python-3bp_spi1"
    },
    "release_url": "https://pypi.org/project/rpi-ws281x-3bp-spi1/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Userspace Raspberry Pi PWM/PCM/SPI library for SK6812 and WS281X LEDs.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13256791,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d173fd31cc6e6a63a6b0eaf673cba86005056068bab3c827deddd9eda026ea0",
          "md5": "67473a95294efb4687135fc649cb253c",
          "sha256": "fd00e98495e4b69260711b14acd3fd9abbae44d9e5b8dacdabbffb45f7217843"
        },
        "downloads": -1,
        "filename": "rpi_ws281x_3bp_spi1-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "67473a95294efb4687135fc649cb253c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 64025,
        "upload_time": "2022-03-22T23:47:17",
        "upload_time_iso_8601": "2022-03-22T23:47:17.504642Z",
        "url": "https://files.pythonhosted.org/packages/9d/17/3fd31cc6e6a63a6b0eaf673cba86005056068bab3c827deddd9eda026ea0/rpi_ws281x_3bp_spi1-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d173fd31cc6e6a63a6b0eaf673cba86005056068bab3c827deddd9eda026ea0",
        "md5": "67473a95294efb4687135fc649cb253c",
        "sha256": "fd00e98495e4b69260711b14acd3fd9abbae44d9e5b8dacdabbffb45f7217843"
      },
      "downloads": -1,
      "filename": "rpi_ws281x_3bp_spi1-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "67473a95294efb4687135fc649cb253c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 64025,
      "upload_time": "2022-03-22T23:47:17",
      "upload_time_iso_8601": "2022-03-22T23:47:17.504642Z",
      "url": "https://files.pythonhosted.org/packages/9d/17/3fd31cc6e6a63a6b0eaf673cba86005056068bab3c827deddd9eda026ea0/rpi_ws281x_3bp_spi1-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}