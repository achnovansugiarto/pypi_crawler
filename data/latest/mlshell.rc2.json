{
  "info": {
    "author": "nizaevka",
    "author_email": "knizaev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<div align=\"center\">\n\n[![Mlshell logo](https://github.com/nizaevka/mlshell/blob/master/docs/source/_static/images/logo.png?raw=true)](https://github.com/nizaevka/mlshell)\n\n**Simple ML framework**\n\n[![Build Status](https://travis-ci.org/nizaevka/mlshell.svg?branch=master)](https://travis-ci.org/nizaevka/mlshell)\n[![PyPi version](https://img.shields.io/pypi/v/mlshell.svg)](https://pypi.org/project/mlshell/)\n[![PyPI Status](https://pepy.tech/badge/mlshell)](https://pepy.tech/project/mlshell)\n[![Docs](https://readthedocs.org/projects/mlshell/badge/?version=latest)](https://mlshell.readthedocs.io/en/latest/)\n[![Telegram](https://img.shields.io/badge/channel-on%20telegram-blue)](https://t.me/nizaevka)\n\n</div>\n\n- Auto ML.\n- Unified pipeline.\n- Stable CV scheme.\n- One configuration file.\n- Multi-stage optimization.\n\nMlshell based on [Pycnfg](https://github.com/nizaevka/pycnfg) library.\nAll parameters controlled from single Python configuration.\n\n![Workflow](https://github.com/nizaevka/mlshell/blob/master/docs/source/_static/images/scheme.png?raw=true)\n\nFor details, please refer to\n [Concepts](https://mlshell.readthedocs.io/en/latest/Concepts.html).\n\n## Installation\n\n#### PyPi [![PyPi version](https://img.shields.io/pypi/v/mlshell.svg)](https://pypi.org/project/mlshell/) [![PyPI Status](https://pepy.tech/badge/mlshell)](https://pepy.tech/project/mlshell)\n\n```bash\npip install mlshell\n```\n\n<details>\n<summary>Development installation (tests and docs): </summary>\n<p>\n\n```bash\npip install mlshell[dev]\n```\n</p>\n</details>\n\n#### Docker [![Docker Pulls](https://img.shields.io/docker/pulls/nizaevka/mlshell)](https://hub.docker.com/r/nizaevka/mlshell/tags)\n\n```bash\ndocker run -it nizaevka/mlshell\n```\nTested on: Python 3.6+.\n\n## Docs\n[![Docs](https://readthedocs.org/projects/mlshell/badge/?version=latest)](https://readthedocs.org/mlshell/en/latest/?badge=latest)\n\n## Getting started\n\n<details>\n<summary>example</summary>\n<p>\n\n```python\n\"\"\"Configuration example - tune LGBM on iris dataset.\"\"\"\nimport lightgbm\nimport mlshell\nimport pycnfg\nimport sklearn.datasets\n\n\n# Optimization hp ranges.\nhp_grid = {\n    'reduce_dimensions__skip': [False, True],  # PCA on/off\n    # 'estimate__classifier__n_estimators': np.linspace(50, 1000, 10, dtype=int),\n    # ...\n}\n\n\"\"\"\nThe single configuration CNFG controls whole ml task.\nEach section sub-configurations produce object (pipeline/metric/dataset/workflow)\npipeline-wise:\n    object init state\n        => transform object with steps (producer methods)\n            => store result\nSub-configuration with greater priority (workflow) could utilize previously\ncreated objects.\n\"\"\"\nCNFG = {\n    # Pipeline section - make pipeline object(s).\n    'pipeline': {\n        'lgbm': {\n            'init': mlshell.Pipeline,\n            'producer': mlshell.PipelineProducer,\n            'priority': 3,\n            'steps': [\n                ('make', {\n                    'estimator_type': 'classifier',\n                    'steps': mlshell.pipeline.Steps,\n                    'estimator': lightgbm.sklearn.LGBMClassifier(\n                        num_leaves=5, max_depth=5, n_estimators=100,\n                        random_state=42),  # last stage of pipeline.\n                }),\n            ],\n        }\n    },\n    # Metric section - make scorer object(s).\n    'metric': {\n        'accuracy': {\n            'init': mlshell.Metric,\n            'producer': mlshell.MetricProducer,\n            'priority': 4,\n            'steps': [\n                ('make', {\n                    'score_func': sklearn.metrics.accuracy_score,\n                    'greater_is_better': True,\n                }),\n            ],\n        },\n        'confusion_matrix': {\n            'init': mlshell.Metric,\n            'producer': mlshell.MetricProducer,\n            'priority': 4,\n            'steps': [\n                ('make', {\n                    'score_func': sklearn.metrics.confusion_matrix,\n                }),\n            ],\n        },\n    },\n    # Dataset section - dataset loading/preprocessing/splitting.\n    'dataset': {\n        'train': {\n            'init': mlshell.Dataset({\n                'data': sklearn.datasets.load_iris(as_frame=True).frame\n            }),\n            'producer': mlshell.DatasetProducer,\n            'priority': 5,\n            'steps': [\n                ('preprocess', {'targets_names': ['target']}),\n                ('split', {'train_size': 0.75, 'shuffle': True,\n                           'random_state': 42}),\n            ],\n        },\n    },\n    # Workflow section\n    # - fit/predict pipelines on datasets,\n    # - optimize/validate metrics,\n    # - predict/dump predictions on datasets.\n    'workflow': {\n        'conf': {\n            'init': {},\n            'producer': mlshell.Workflow,\n            'priority': 6,\n            'steps': [\n                # Optimize 'lgbm' pipeline on 'train' subset of 'train' dataset\n                # on hp combinations from 'hp_grid'. Score and refit on\n                # 'accuracy' scorer.\n                ('optimize', {\n                    'pipeline_id': 'pipeline__lgbm',\n                    'dataset_id': 'dataset__train',\n                    'subset_id': 'train',\n                    'metric_id': ['metric__accuracy'],\n                    'hp_grid': hp_grid,\n                    'gs_params': {\n                        'n_iter': None,\n                        'n_jobs': 1,\n                        'refit': 'metric__accuracy',\n                        'cv': sklearn.model_selection.KFold(n_splits=3,\n                                                            shuffle=True,\n                                                            random_state=42),\n                        'verbose': 1,\n                        'pre_dispatch': 'n_jobs',\n                        'return_train_score': True,\n                    },\n                }),\n                # Validate 'lgbm' pipeline on 'train' and 'test' subsets of\n                # 'train' dataset with 'accuracy' and 'confusion_matrix'.\n                ('validate', {\n                    'pipeline_id': 'pipeline__lgbm',\n                    'dataset_id': 'dataset__train',\n                    'subset_id': ['train', 'test'],\n                    'metric_id': ['metric__accuracy',\n                                  'metric__confusion_matrix'],\n                }),\n            ],\n        },\n    },\n}\n\n\nif __name__ == '__main__':\n    # mlshell.CNFG contains default section / configuration keys for typical ml\n    # task, including pretty logger and project path detection.\n    objects = pycnfg.run(CNFG, dcnfg=mlshell.CNFG)\n```\n</p>\n</details>\n\n\n## Examples\nCheck **[examples folder](https://github.com/nizaevka/mlshell/blob/master/examples)**.\n\n## Contribution guide\n- [contribution guide](https://github.com/nizaevka/mlshell/blob/master/CONTRIBUTING.md).\n\n## License\nApache License, Version 2.0 [LICENSE](https://github.com/nizaevka/mlshell/blob/master/LICENSE).\n[![License](https://img.shields.io/github/license/nizaevka/mlshell.svg)](LICENSE)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nizaevka/mlshell",
    "keywords": "ml sklearn workflow",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mlshell",
    "package_url": "https://pypi.org/project/mlshell/",
    "platform": "",
    "project_url": "https://pypi.org/project/mlshell/",
    "project_urls": {
      "Documentation": "https://mlshell.readthedocs.io/",
      "Homepage": "https://github.com/nizaevka/mlshell",
      "Source": "https://github.com/nizaevka/mlshell",
      "Tracker": "https://github.com/nizaevka/mlshell/issues"
    },
    "release_url": "https://pypi.org/project/mlshell/0.0.2/",
    "requires_dist": [
      "pycnfg (==0.0.2)",
      "jsbeautifier",
      "scikit-learn (==0.23.2)",
      "pandas",
      "tabulate",
      "matplotlib",
      "pytest ; extra == 'dev'",
      "sphinx ; extra == 'dev'",
      "sphinxcontrib-napoleon ; extra == 'dev'",
      "sphinx-autodoc-typehints ; extra == 'dev'",
      "sphinx-rtd-theme ; extra == 'dev'",
      "numpydoc ; extra == 'dev'",
      "line-profiler ; extra == 'dev'",
      "memory-profiler ; extra == 'dev'",
      "lightgbm ; extra == 'dev'"
    ],
    "requires_python": ">=3.6",
    "summary": "Ml framework.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8306522,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b80bfbba0e36dcc06f319cb58312adcfe7cf930249e17279e185e4ee1b1c27ea",
          "md5": "4e5bd98b2acf1e79c5a9ab67868e59c6",
          "sha256": "ffd21924bf62759d5e7f454fe8dd3ac159f0b795efaa141462c21785b26e8571"
        },
        "downloads": -1,
        "filename": "mlshell-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e5bd98b2acf1e79c5a9ab67868e59c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 42057,
        "upload_time": "2020-03-08T17:38:24",
        "upload_time_iso_8601": "2020-03-08T17:38:24.689218Z",
        "url": "https://files.pythonhosted.org/packages/b8/0b/fbba0e36dcc06f319cb58312adcfe7cf930249e17279e185e4ee1b1c27ea/mlshell-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5f88135ec8e56ae805319cdd18f1cf3dfa07f8c85ff4bfd81121818bd37a195",
          "md5": "2c75f54b7ecd6b59bbc0a3bde85e6527",
          "sha256": "2f238ab50354ad7e0e91b60df1aaa1181aa671733f8dbb168131515ce7dc2e28"
        },
        "downloads": -1,
        "filename": "mlshell-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2c75f54b7ecd6b59bbc0a3bde85e6527",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 40246,
        "upload_time": "2020-03-08T17:38:27",
        "upload_time_iso_8601": "2020-03-08T17:38:27.158172Z",
        "url": "https://files.pythonhosted.org/packages/e5/f8/8135ec8e56ae805319cdd18f1cf3dfa07f8c85ff4bfd81121818bd37a195/mlshell-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4453fd5471eefca24f0e5d481490b72f77cec1239589111e444b6b9c9f6a1302",
          "md5": "8e0d1048cdae295b7e0bda82580a2610",
          "sha256": "d6b9d8764ed4fb0c918ca0166c4fa03ccbff53a8bd9645b14675767dd83dde0d"
        },
        "downloads": -1,
        "filename": "mlshell-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e0d1048cdae295b7e0bda82580a2610",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 48575,
        "upload_time": "2020-09-30T12:18:26",
        "upload_time_iso_8601": "2020-09-30T12:18:26.767777Z",
        "url": "https://files.pythonhosted.org/packages/44/53/fd5471eefca24f0e5d481490b72f77cec1239589111e444b6b9c9f6a1302/mlshell-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d84dfff8069d22ac0c61fda4fd2e34a280c518405138081e3800d190e6cc1c5",
          "md5": "f5df3800db710741427c59116f0c0b95",
          "sha256": "dd1478c0dabc79749d9962bd457a4cdeaa83eee556f6ffc7c04357444ed2b472"
        },
        "downloads": -1,
        "filename": "mlshell-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f5df3800db710741427c59116f0c0b95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 42020,
        "upload_time": "2020-09-30T12:18:27",
        "upload_time_iso_8601": "2020-09-30T12:18:27.806782Z",
        "url": "https://files.pythonhosted.org/packages/4d/84/dfff8069d22ac0c61fda4fd2e34a280c518405138081e3800d190e6cc1c5/mlshell-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4453fd5471eefca24f0e5d481490b72f77cec1239589111e444b6b9c9f6a1302",
        "md5": "8e0d1048cdae295b7e0bda82580a2610",
        "sha256": "d6b9d8764ed4fb0c918ca0166c4fa03ccbff53a8bd9645b14675767dd83dde0d"
      },
      "downloads": -1,
      "filename": "mlshell-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8e0d1048cdae295b7e0bda82580a2610",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 48575,
      "upload_time": "2020-09-30T12:18:26",
      "upload_time_iso_8601": "2020-09-30T12:18:26.767777Z",
      "url": "https://files.pythonhosted.org/packages/44/53/fd5471eefca24f0e5d481490b72f77cec1239589111e444b6b9c9f6a1302/mlshell-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d84dfff8069d22ac0c61fda4fd2e34a280c518405138081e3800d190e6cc1c5",
        "md5": "f5df3800db710741427c59116f0c0b95",
        "sha256": "dd1478c0dabc79749d9962bd457a4cdeaa83eee556f6ffc7c04357444ed2b472"
      },
      "downloads": -1,
      "filename": "mlshell-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f5df3800db710741427c59116f0c0b95",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 42020,
      "upload_time": "2020-09-30T12:18:27",
      "upload_time_iso_8601": "2020-09-30T12:18:27.806782Z",
      "url": "https://files.pythonhosted.org/packages/4d/84/dfff8069d22ac0c61fda4fd2e34a280c518405138081e3800d190e6cc1c5/mlshell-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}