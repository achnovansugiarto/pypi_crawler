{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Proxy_Scraper\r\n=============\r\n\r\nGet any type of proxies in 1 click!\r\n\r\nversion: 1.8\r\n\r\nauthor: github.com/zeloww\r\n\r\n|PyPI pyversions| |PyPi version| |PyPi license| |PyPi download|\r\n\r\nDownload\r\n--------\r\n\r\nYou can download the ``https://PyPi.org/project/proxy_scraper`` module\r\nwith Python Package Index (PyPI).\r\n\r\nDownload with pip:\r\n~~~~~~~~~~~~~~~~~~\r\n\r\n``$ pip install proxy_scraper``\r\n\r\nExamples\r\n--------\r\n\r\ngetproxy()\r\n~~~~~~~~~~\r\n\r\n.. code:: py\r\n\r\n   from proxy_scraper import getproxy\r\n   print(getproxy(type=\"https\", timeout=10)\r\n\r\n   >>> 88.198.24.108:1080\r\n\r\ngetproxies()\r\n~~~~~~~~~~~~\r\n\r\n.. code:: py\r\n\r\n   from proxy_scraper import getproxies\r\n   print(getproxies(type=\"http\", number=2)\r\n\r\n   >>> ['104.255.170.91:51676', '88.198.24.108:1080']\r\n\r\nproxies_checker()\r\n~~~~~~~~~~~~~~~~~\r\n\r\n.. code:: py\r\n\r\n   from proxy_scraper import proxies_checker\r\n   print(proxies_checker(url=\"https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=100\")\r\n\r\n   >>> {\r\n           'file: None': [],\r\n           'url: https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=5': [\r\n               '217.149.135.21:5678',\r\n               '54.38.163.25:5678',\r\n               '185.216.163.133:1080',\r\n               '185.161.245.1:1080',\r\n               '179.49.117.166:5678',\r\n           ]\r\n        }\r\n\r\nDocumentation\r\n-------------\r\n\r\nThe module using the API of proxyscrape: ``https://docs.proyscrape.com``\r\n\r\n.. _getproxies-1:\r\n\r\ngetproxies()\r\n~~~~~~~~~~~~\r\n\r\nreturn random proxies with settings\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\n``type``: **Type** -> ``string``, **Default** -> ``'all'`` Choice the\r\ntype of proxies (http, https, socks4…)\r\n\r\n``country``: **Type** -> ``string``, **Default** -> ``'all'`` Choice the\r\ncountry of proxies (fr, us…)\r\n\r\n``timeout`` **Type** -> ``int``, **Default** -> ``1500`` Choice the\r\ntimeout of proxies (in seconds)\r\n\r\n``checker``: **Type** -> ``boolean``, **Default** -> ``False`` Check the\r\nproxies (if you don’t use the default api)\r\n\r\n``request_url`` **Type** -> ``string``, **Default** ->\r\n``'https://google.com'`` Choice the website to try if the proxy work\r\nwith ``checker()``\r\n\r\n``number``: **Type** -> ``boolean``, **Default** -> ``None`` Get a\r\nspecial numbers of proxies\r\n\r\n``auth``: **Type** -> ``string``, **Default** -> ``None`` If you have a\r\nauth key for the api of croxyproxy (not mandatory)\r\n\r\n``download``: **Type** -> ``boolean``, **Default** -> ``False`` Download\r\na file of the proxies\r\n\r\n``ssl`` **Type** -> ``boolean``, **Default** -> ``True`` Choice if you\r\nwant SSL for your proxies\r\n\r\n``anonymity`` **Type** -> ``string``, **Default** -> ``'all'``\\ Choice\r\nthe anonimity of your proxies\r\n\r\n``format`` **Type** -> ``string``, **Default** -> ``'normal'`` Choice\r\nthe format of your proxies (normal, json)\r\n\r\n``dict`` **Type** -> ``boolean``, **Default** -> ``False`` Choice if you\r\nwant a dict for your proxies\r\n\r\n``url`` **Type** -> ``string``, **Default** -> ``None`` Choice a special\r\nurl for the lists of proxies\r\n\r\n.. _getproxy-1:\r\n\r\ngetproxy()\r\n~~~~~~~~~~\r\n\r\nreturn a random proxy with settings\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\n``type``: **Type** -> ``string``, **Default** -> ``'all'`` Choice the\r\ntype of proxies (http, https, socks4…)\r\n\r\n``country``: **Type** -> ``string``, **Default** -> ``'all'`` Choice the\r\ncountry of proxies (fr, us…)\r\n\r\n``timeout`` **Type** -> ``int``, **Default** -> ``1500`` Choice the\r\ntimeout of proxies (in seconds)\r\n\r\n``checker``: **Type** -> ``boolean``, **Default** -> ``False`` Check the\r\nproxies (if you don’t use the default api)\r\n\r\n``request_url`` **Type** -> ``string``, **Default** ->\r\n``'https://google.com'`` Choice the website to try if the proxy work\r\nwith ``checker()``\r\n\r\n``number``: **Type** -> ``boolean``, **Default** -> ``None`` Get a\r\nspecial numbers of proxies for the random.choice\r\n\r\n``auth``: **Type** -> ``string``, **Default** -> ``None`` If you have a\r\nauth key for the api of croxyproxy (not mandatory)\r\n\r\n``download``: **Type** -> ``boolean``, **Default** -> ``False`` Download\r\na file of the proxies\r\n\r\n``ssl`` **Type** -> ``boolean``, **Default** -> ``True`` Choice if you\r\nwant SSL for your proxies\r\n\r\n``anonymity`` **Type** -> ``string``, **Default** -> ``'all'``\\ Choice\r\nthe anonimity of your proxies\r\n\r\n``format`` **Type** -> ``string``, **Default** -> ``'normal'`` Choice\r\nthe format of your proxies (normal, json)\r\n\r\n``dict`` **Type** -> ``boolean``, **Default** -> ``False`` Choice if you\r\nwant a dict for your proxies\r\n\r\n``url`` **Type** -> ``string``, **Default** -> ``None`` Choice a special\r\nurl for the lists of proxies\r\n\r\n.. _proxies_checker-1:\r\n\r\nproxies_checker()\r\n~~~~~~~~~~~~~~~~~\r\n\r\nCheck proxies with settings\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\n``file`` **Type** -> ``string``, **Default** -> ``None`` Choice a file\r\nwith proxies for check if they works\r\n\r\n``url`` **Type** -> ``string``, **Default** -> ``None`` Choice an url\r\nwith proxies for check if they works\r\n\r\n``timeout`` **Type** -> ``int``, **Default** -> ``1500`` Choice the\r\ntimeout of proxies (in seconds)\r\n\r\n``number``: **Type** -> ``boolean``, **Default** -> ``None`` Choice a\r\nnumber of good proxies for end the checking\r\n\r\n``request_url`` **Type** -> ``string``, **Default** ->\r\n``'https://google.com'`` Choice the website to try if the proxy work\r\n\r\n.. |PyPI pyversions| image:: https://img.shields.io/pypi/pyversions/ansicolortags.svg\r\n   :target: https://pypi.python.org/pypi/ansicolortags/\r\n.. |PyPi version| image:: https://badgen.net/pypi/v/pip/\r\n   :target: https://pypi.com/project/pip\r\n.. |PyPi license| image:: https://img.shields.io/pypi/l/fpvgcc.svg?color=blue\r\n   :target: https://pypi.com/project/pip/\r\n.. |PyPi download| image:: https://pepy.tech/badge/proxy_scraper\r\n\r\n\r\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zeloww/proxy_scraper",
    "keywords": "python,py,proxy,proxies,getproxy,getproxies,proxy-scraper,proxies-scraper,scraper",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "proxy-scraper",
    "package_url": "https://pypi.org/project/proxy-scraper/",
    "platform": "",
    "project_url": "https://pypi.org/project/proxy-scraper/",
    "project_urls": {
      "Homepage": "https://github.com/zeloww/proxy_scraper"
    },
    "release_url": "https://pypi.org/project/proxy-scraper/1.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Get any type of proxies in 1 click!",
    "version": "1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11594446,
  "releases": {
    "1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d92ebef471fefaeafbd9a45efd83f3f34bbbbc2385700f2d6ca1cd6d2f1bd9e2",
          "md5": "f338d25a2467e4d83a5220da7c8886a8",
          "sha256": "fd08091a4ee55753273216fdc20bdfd28836d177cf37b916f17186a3c22dbab2"
        },
        "downloads": -1,
        "filename": "proxy_scraper-1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "f338d25a2467e4d83a5220da7c8886a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16310,
        "upload_time": "2021-09-30T15:12:21",
        "upload_time_iso_8601": "2021-09-30T15:12:21.265175Z",
        "url": "https://files.pythonhosted.org/packages/d9/2e/bef471fefaeafbd9a45efd83f3f34bbbbc2385700f2d6ca1cd6d2f1bd9e2/proxy_scraper-1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d92ebef471fefaeafbd9a45efd83f3f34bbbbc2385700f2d6ca1cd6d2f1bd9e2",
        "md5": "f338d25a2467e4d83a5220da7c8886a8",
        "sha256": "fd08091a4ee55753273216fdc20bdfd28836d177cf37b916f17186a3c22dbab2"
      },
      "downloads": -1,
      "filename": "proxy_scraper-1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "f338d25a2467e4d83a5220da7c8886a8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16310,
      "upload_time": "2021-09-30T15:12:21",
      "upload_time_iso_8601": "2021-09-30T15:12:21.265175Z",
      "url": "https://files.pythonhosted.org/packages/d9/2e/bef471fefaeafbd9a45efd83f3f34bbbbc2385700f2d6ca1cd6d2f1bd9e2/proxy_scraper-1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}