{
  "info": {
    "author": "Miguel Ponce de Leon",
    "author_email": "miguel.ponce@bsc.es",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Introduction\nPhysiCell ToolKit (PCTK) is a tiny project that aims to develop a lightweight library and command-line general scripts to process and analyze agent-based simulation of multicellular systems produced by PhysiCell simulations ([http://physicell.org/](http://physicell.org/)) developed by Paul Macklin at MathCancer.\n<br>\nAlthough there are already available tools for handling PhysiCell outputs [https://github.com/PhysiCell-Tools/python-loader](https://github.com/PhysiCell-Tools/python-loader), here we aim to gather together and organize different pieces of python code that have been anyhow, recurrently useful in the past, when dealing with PhysiCell and PhysiBoSS. Currently, the package implements a simple module ([multicellds.py](https://github.com/migp11/pctk/blob/master/modules/multicellds.py)) to parse and handle MultiCellDS XML file format and uses the schema defined there to parse and process \\.mat files containing the cells and microenvironment time dependent output. On the top of this module we have developed a set of command-line tools for processing and creating basic plots, including time courses of the number of alive and dead cells (apoptotic, necrotic) as well as to generate POV files used as inputs for rendering nice 3D rendering of the multicellular models using [POV-Ray](http://www.povray.org/). PCTK can used both, as library and as stand-alone command line tool.\n<br>\n\n# Installation\nPCTK is pure python code with few dependencies and only requieres the installation of some python modules. \n### On linux systems using virtualenv + pip\n- 1  create a new virtual environemnt, activate it and install the requirments\n~~~~\nvirtualenv -p python3.8 myenv\nsource myenv/bin/activate\npython setup.py install\n~~~~\nThats it! If you want to run the script from any location add the base folder to your PATH environmental variable. And if you want to access the multicellds class, add modules/multicellds.py to your PYTHONPATH.\n\nThe last step for generating 3D renders of cell from .pov files, it is done using Persistence of Vision Ray Tracer (POV-Ray). POV-Ray is a cross-platform ray-tracing standalone program that generates images from a text-based scene description. POV-Ray is open source () and can be freely obtaind from: <br>\n* [http://www.povray.org/download/](http://www.povray.org/download/)\n\n# MultiCellDS class\n\nUpcoming\n\n# Ready-to-run scripts\nThere are some ready-to-run scripts that can be used to summarize and visualize PhysiCell/PhysiBoSS simulation. These scripts allow to generate cell vs time plots as well 3D renders for time snapshots.\n\n## Ploting time course: plot_time_course.py\nThe script plot_time_course.py plot number of cells vs time grouping cell by phase (alive, necrotic, apoptotic) <br>\nThe color mapping can be easily customized to represent other cell-agent variables (eg. color mutants or other cell states)\n\t\n~~~~\nusage: plot_time_course.py [-h] [--format {physicell,physiboss}]\n                           [--figout FIG_FNAME] [--csvout CSV_FNAME]\n                           data_folder\n\nPlot total cell grouped as Alive/Necrotic/Apoptotic vs Time\n\npositional arguments:\n  data_folder           folder were the data is stored\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --format {physicell,physiboss}\n                        Format of the input data\n  --figout FIG_FNAME    File name to save the plot\n  --csvout CSV_FNAME    File name to store the summary table used for the plot\t\n~~~~\n\n#### Examples\n`plot_time_course.py output_test --format physiboss --figout physibos_time_plot.png`\n\n`plot_time_course.py output_test --format physicell --figout physicell_time_plot.png`\n\n\n## Generations of pov files for 3D rendering: povwriter.py\nThis script is a \"literal\" translation from C++ to Python 3. \\\nThe original C++ povrtiter is developed an mantined by Paul Macklin at MatchCancer \\\nand can be found in the following link [https://github.com/PhysiCell-Tools/PhysiCell-povwriter](https://github.com/PhysiCell-Tools/PhysiCell-povwriter)\n<br>\nWhile I've not found many difference at the level of performance, the main advantage of having python version of PhysiCell-povwriter is that is much easiert to extend and customize. Furthermore, handling command line arguments and parsing config files is also much easier in python. Nonetheless, the original motivation of this development was to have a povwrite capable of handling PhysiBoSS output format (which is different from PhysiCell's format).<br>\nThe script povwriter.py reads xml configuration file and then iterates over a range of \\*.mat files to create pov files.<br>\nThe generated pov files can then be renderied usign the open source The Persistence of Vision Raytracer suite PovRay ([http://www.povray.org/](http://www.povray.org/)).\n\n~~~~\nusage: povwriter.py [-h] [--idxs STRN_IDXS] [--format {physicell,physiboss}]\n                    [--out-format {pov,png}]\n                    xml_config\n\nRender a bunch of physicell outputfile into povray files\n\npositional arguments:\n  xml_config            XML configuration file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --idxs STRN_IDXS      String specifing the indexes of the output files. The\n                        supported options include: - slices: 1:10:1 - indexes:\n                        1,2,5,10 - all (use glob)\n  --format {physicell,physiboss}\n                        Format of the input data\n  --out-format {pov,png}\n                        Output format\n\t\n~~~~\n\n#### Examples\n~~~~\npovwriter.py config/povwriter-settings.xml --format physicell\npovwriter.py config/povwriter-settings.xml --format physicell --idxs 0:4:1\npovwriter.py config/povwriter-settings.xml --format physicell --idxs 1,3,0\n\n./povwriter.py config/povwriter-settings.xml --format physiboss\n./povwriter.py config/povwriter-settings.xml --format physiboss --idxs 0:490:120\n./povwriter.py config/povwriter-settings.xml --format physiboss --idxs 0,240\n~~~~\n\nAny of these commands will generate one or many .pov files. If you have povray instaled in yout system you can try\n~~~~\npovray -W720 -H680 -a [path to pov file]\n~~~~\nto render the .pov file a generate an image. Parameters -H -W and -a correspond to Width, heigh and antilaizing, respectively.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PhysiBoSS/pctk",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pctk",
    "package_url": "https://pypi.org/project/pctk/",
    "platform": null,
    "project_url": "https://pypi.org/project/pctk/",
    "project_urls": {
      "Homepage": "https://github.com/PhysiBoSS/pctk"
    },
    "release_url": "https://pypi.org/project/pctk/0.1.9/",
    "requires_dist": [
      "numpy",
      "scipy",
      "matplotlib",
      "pandas",
      "seaborn"
    ],
    "requires_python": ">=3.7",
    "summary": "PhysiCell ToolKit: a tool for handling MultiCellDS output from PhysiCell and PhysiBoSS simulations.",
    "version": "0.1.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14080546,
  "releases": {
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "879223f96f1ef415be5d1e8b1af8565b26a063c107ce4cf99463f15f0b4d6038",
          "md5": "1f742d2ae20b81d828d3400c8d167999",
          "sha256": "52043e0ae00fd17efc95c9dac0a296da4f92b3539a32a1261e5618d5735bf6b0"
        },
        "downloads": -1,
        "filename": "pctk-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f742d2ae20b81d828d3400c8d167999",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 29015,
        "upload_time": "2022-06-03T08:26:53",
        "upload_time_iso_8601": "2022-06-03T08:26:53.451821Z",
        "url": "https://files.pythonhosted.org/packages/87/92/23f96f1ef415be5d1e8b1af8565b26a063c107ce4cf99463f15f0b4d6038/pctk-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cfc9fce4e2c03dfd7ed84df1df74761e445a963a8fdbacca41043b953025da7c",
          "md5": "f202f5429b927af9d610c25ecd2d76b8",
          "sha256": "7eb7c59b765271369bceebb578a386c858631c2685622e2b3b83f99126239190"
        },
        "downloads": -1,
        "filename": "pctk-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "f202f5429b927af9d610c25ecd2d76b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 28629,
        "upload_time": "2022-06-03T08:26:55",
        "upload_time_iso_8601": "2022-06-03T08:26:55.015076Z",
        "url": "https://files.pythonhosted.org/packages/cf/c9/fce4e2c03dfd7ed84df1df74761e445a963a8fdbacca41043b953025da7c/pctk-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80b1a20de9ef54b3e7f9838436c22d53615875f62d82351bc982dcb5089510bb",
          "md5": "3593b72d426be88ebb9d6825dccfb292",
          "sha256": "da0b150f27368c35f284335f43baa9b6cdf5dbbc84f66bd1d954db8649e857a0"
        },
        "downloads": -1,
        "filename": "pctk-0.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3593b72d426be88ebb9d6825dccfb292",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 29096,
        "upload_time": "2022-06-09T10:18:01",
        "upload_time_iso_8601": "2022-06-09T10:18:01.114861Z",
        "url": "https://files.pythonhosted.org/packages/80/b1/a20de9ef54b3e7f9838436c22d53615875f62d82351bc982dcb5089510bb/pctk-0.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "815c6f104cc0f595d6c12eba1e26888d9545b8f38e9734cdd4356069f1631f0e",
          "md5": "dc3a3ecbb0faddf1285c5c6ebc8344f6",
          "sha256": "370a2c0296a0a6c940e873f34774bdf7ebfa53fc6e7b7fc732c7a92e043375cf"
        },
        "downloads": -1,
        "filename": "pctk-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "dc3a3ecbb0faddf1285c5c6ebc8344f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 28563,
        "upload_time": "2022-06-09T10:18:02",
        "upload_time_iso_8601": "2022-06-09T10:18:02.667783Z",
        "url": "https://files.pythonhosted.org/packages/81/5c/6f104cc0f595d6c12eba1e26888d9545b8f38e9734cdd4356069f1631f0e/pctk-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "80b1a20de9ef54b3e7f9838436c22d53615875f62d82351bc982dcb5089510bb",
        "md5": "3593b72d426be88ebb9d6825dccfb292",
        "sha256": "da0b150f27368c35f284335f43baa9b6cdf5dbbc84f66bd1d954db8649e857a0"
      },
      "downloads": -1,
      "filename": "pctk-0.1.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3593b72d426be88ebb9d6825dccfb292",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 29096,
      "upload_time": "2022-06-09T10:18:01",
      "upload_time_iso_8601": "2022-06-09T10:18:01.114861Z",
      "url": "https://files.pythonhosted.org/packages/80/b1/a20de9ef54b3e7f9838436c22d53615875f62d82351bc982dcb5089510bb/pctk-0.1.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "815c6f104cc0f595d6c12eba1e26888d9545b8f38e9734cdd4356069f1631f0e",
        "md5": "dc3a3ecbb0faddf1285c5c6ebc8344f6",
        "sha256": "370a2c0296a0a6c940e873f34774bdf7ebfa53fc6e7b7fc732c7a92e043375cf"
      },
      "downloads": -1,
      "filename": "pctk-0.1.9.tar.gz",
      "has_sig": false,
      "md5_digest": "dc3a3ecbb0faddf1285c5c6ebc8344f6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 28563,
      "upload_time": "2022-06-09T10:18:02",
      "upload_time_iso_8601": "2022-06-09T10:18:02.667783Z",
      "url": "https://files.pythonhosted.org/packages/81/5c/6f104cc0f595d6c12eba1e26888d9545b8f38e9734cdd4356069f1631f0e/pctk-0.1.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}