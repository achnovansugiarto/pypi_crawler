{
  "info": {
    "author": "Johannes Fischer",
    "author_email": "<aulasparticularesdealemaosp@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Text Editors :: Text Processing",
      "Topic :: Text Processing :: Filters",
      "Topic :: Text Processing :: General",
      "Topic :: Text Processing :: Indexing",
      "Topic :: Utilities"
    ],
    "description": "\n# Locates more items/views/elements on an Android device than similar Android automation packages by combining ADB's dumpsys activity/uiautomator  \n\n\n\n\n\n```python\n\n$pip install androdf\n\nfrom androdf import AndroDF\n\nandf = AndroDF(\n\n        adb_path=\"C:\\\\Users\\\\Gamer\\\\AppData\\\\Local\\\\Android\\\\Sdk\\\\platform-tools\\\\adb.exe\",\n\n        deviceserial=\"localhost:5895\",\n\n        screenshotfolder=\"f:\\\\compare_android\",  # screenshots will be saved here \n\n        max_variation_percent_x=10, # used for one of the click functions, to not click exactly in the center - more information below\n\n        max_variation_percent_y=10, # used for one of the click functions, to not click exactly in the center\n\n        loung_touch_delay=(1000, 1500), # with this settings longtouch will take somewhere between 1 and 1,5 seconds\n\n        swipe_variation_startx=10, # swipe coordinate variations in percent \n\n        swipe_variation_endx=10,\n\n        swipe_variation_starty=10,\n\n        swipe_variation_endy=10,\n\n        sdcard=\"/storage/emulated/0/\",  # sdcard will be used if you use the sendevent methods, don’t pass a symlink - more information below\n\n        tmp_folder_on_sd_card=\"AUTOMAT\", # this folder will be created in the sdcard folder for using sendevent actions\n\n        bluestacks_divider=32767,  # coordinates must be recalculated for BlueStacks https://stackoverflow.com/a/73733261/15096247 when using sendevent\n\n    )\n\nandf.get_df_from_activity(with_screenshot=False) # executes dumpsys activity top -c and converts the relative coordinates to absolute coordinates\n\nandf.get_df_from_view(with_screenshot=False) # dataframe from uiautomator xml dump, extracts all results\n\ndf_activities,df_uiautomator,df_merged = andf.get_all_results() #  Returns copies of the 3 DataFrames containing the results # df_merged will be empty \n\nandf.get_screenshot() \n\nandf.get_dfs_from_view_and_activity(with_screenshot=True) # DataFrame will contain screenshots \n\nandf.get_dfs_from_view_and_activity(with_screenshot=True) # df_merged will contain all data from both DataFrames\n\ndf_activities1,df_uiautomator1,df_merged1 = andf.get_all_results() \n\n\n\n```\n\n\n\n\n\n\n\n#### Let’s compare the results with the ones from https://github.com/dtmilano/AndroidViewClient (Uiautomator backend)\n\nDon't get me wrong, AndroidViewClient is a wonderful tool and I have been using it for a long time, but it works on BlueStacks (most important for me) only with the Uiautomator backend (at least on my PC), and unfortunately, it doesn't always identify all items https://github.com/dtmilano/AndroidViewClient/issues/305. As far as I know, the more recent project https://github.com/dtmilano/CulebraTester2-public identifies more views.\n\n\n\n\n\n### Bluestacks start screen\n\n<img src=\"https://github.com/hansalemaos/screenshots/raw/main/df_screen01.png\"/>\n\n\n\n```python    \n\nvcd = vc.dump(-1)\n\ntimes_ = timest()\n\nfor ini, _ in enumerate(vcd):\n\n    outputfile = os.path.join(f\"f:\\\\compare_android\\\\2\\\\{times_}\", str(ini) + '.png')\n\n    touch(outputfile)\n\n    _.writeImageToFile(outputfile)\n\n```        \n\n\n\n#### Results AndroidViewClient\n\n<img src=\"https://github.com/hansalemaos/screenshots/raw/main/vc01.png\"/>\n\n\n\n```python    \n\ndf_activities1.dropna(subset='aa_screenshot').ff_aa_save_screenshot.apply(lambda x:x())\n\n```        \n\n\n\n#### Results df_activities1\n\n<img src=\"https://github.com/hansalemaos/screenshots/raw/main/df_act01.png\"/>\n\n\n\n```python    \n\ndf_uiautomator1.dropna(subset='bb_screenshot').ff_bb_save_screenshot.apply(lambda x: x())\n\n```        \n\n\n\n#### Results df_uiautomator1\n\n<img src=\"https://github.com/hansalemaos/screenshots/raw/main/df_act02.png\"/>\n\n\n\n\n\n\n\n\n\n### Bluestacks settings\n\n<img src=\"https://github.com/hansalemaos/screenshots/raw/main/df_screen02.png\"/>\n\n\n\n#### Results AndroidViewClient\n\n<img src=\"https://github.com/hansalemaos/screenshots/raw/main/vc01_0.png\"/>\n\n\n\n#### Results df_activities1\n\n<img src=\"https://github.com/hansalemaos/screenshots/raw/main/df_act01_0.png\"/>\n\n\n\n#### Results df_uiautomator1\n\n<img src=\"https://github.com/hansalemaos/screenshots/raw/main/df_act02_0.png\"/>\n\n\n\n\n\n### All results in DataFrames \n\nYou can use the whole power of pandas.DataFrame.loc https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.loc.html  to locate any item and easily call touch/swipe/longtouch methods that are stored in different columns of the DataFrame\n\n<img src=\"https://github.com/hansalemaos/screenshots/raw/main/dfresults.png\"/>\n\n\n\n#### The DataFrame columns explained\n\n\n\n\n\n```python    \n\ndf_activities1.columns.to_list()\n\nOut[9]: ['aa_area', 'aa_bounds', 'aa_center_x', 'aa_center_x_cropped', 'aa_center_y', 'aa_center_y_cropped', 'aa_class_name', 'aa_clickable', 'aa_complete_dump', 'aa_context_clickable', 'aa_cropped_x_end', 'aa_cropped_x_start', 'aa_cropped_y_end', 'aa_cropped_y_start', 'aa_depth', 'aa_drawn', 'aa_enabled', 'aa_focusable', 'aa_has_screenshot', 'aa_hashcode_hex', 'aa_hashcode_int', 'aa_height', 'aa_height_cropped', 'aa_id_information', 'aa_is_child', 'aa_long_clickable', 'aa_mID_hex', 'aa_mID_int', 'aa_old_index', 'aa_pflag_activated', 'aa_pflag_dirty_mask', 'aa_pflag_focused', 'aa_pflag_hovered', 'aa_pflag_invalidated', 'aa_pflag_is_root_namespace', 'aa_pflag_prepressed', 'aa_pflag_selected', 'aa_pure_id', 'aa_screenshot', 'aa_scrollbars_horizontal', 'aa_scrollbars_vertical', 'aa_shapely', 'aa_valid_square', 'aa_visibility', 'aa_width', 'aa_width_cropped', 'aa_x_end', 'aa_x_end_relative', 'aa_x_start', 'aa_x_start_relative', 'aa_y_end', 'aa_y_end_relative', 'aa_y_start', 'aa_y_start_relative', 'ee_aa_longtouch', 'ee_aa_longtouch_bs', 'ee_aa_longtouch_offset', 'ee_aa_longtouch_offset_bs', 'ee_aa_touch', 'ee_aa_touch_bs', 'ee_aa_touch_offset', 'ee_aa_touch_offset_bs', 'ff_aa_downswipe', 'ff_aa_save_screenshot', 'ff_aa_show_screenshot', 'ff_aa_tap_center_offset', 'ff_aa_tap_center_offset_long', 'ff_aa_tap_center_variation', 'ff_aa_tap_center_variation_long', 'ff_aa_tap_exact_center', 'ff_aa_tap_exact_center_long', 'ff_aa_upswipe', 'ff_show_parents', 'parent_000', 'parent_001', 'parent_002', 'parent_003', 'parent_004', 'parent_005', 'parent_006', 'parent_007', 'parent_008', 'parent_009', 'parent_010', 'parent_011']\n\n\n\ndf_uiautomator1.columns.to_list()\n\nOut[10]: ['bb_area', 'bb_center_x', 'bb_center_y', 'bb_x_end', 'bb_y_end', 'bb_height', 'bb_x_start', 'bb_y_start', 'bb_width', 'bb_bounds', 'bb_checkable', 'bb_checked', 'bb_class', 'bb_clickable', 'bb_content_desc', 'bb_enabled', 'bb_focusable', 'bb_focused', 'bb_index', 'bb_keys_hierarchy', 'bb_long_clickable', 'bb_package', 'bb_password', 'bb_resource_id', 'bb_scrollable', 'bb_selected', 'bb_text', 'bb_pure_id', 'bb_screenshot', 'bb_old_index', 'bb_valid_square', 'bb_shapely', 'bb_cropped_x_start', 'bb_cropped_y_start', 'bb_cropped_x_end', 'bb_cropped_y_end', 'bb_width_cropped', 'bb_height_cropped', 'bb_center_x_cropped', 'bb_center_y_cropped', 'ff_bb_show_screenshot', 'ff_bb_save_screenshot', 'ff_bb_tap_center_offset', 'ff_bb_tap_exact_center', 'ff_bb_tap_center_variation', 'ff_bb_tap_center_offset_long', 'ff_bb_tap_exact_center_long', 'ff_bb_tap_center_variation_long', 'ff_bb_upswipe', 'ff_bb_downswipe', 'ee_bb_longtouch_offset', 'ee_bb_longtouch_offset_bs', 'ee_bb_touch_offset', 'ee_bb_touch_offset_bs', 'ee_bb_longtouch_bs', 'ee_bb_touch_bs', 'ee_bb_touch', 'ee_bb_longtouch']\n\n\n\n```\n\n\n\n#### The columns starting with aa_ or bb_ are self explaining, they contain data (height, width ...) to identify objects \n\n\n\n\n\n#### The column prefix ee_ means that you can call functions which use sendevent (root access necessary)\n\n- aa_ after ee_ stands for activity DataFrame \n\n- bb_ after ee_ stands for uiautomator DataFrame (name difference (aa_/bb_) important for merging  when calling andf.get_dfs_from_view_and_activity()  \n\n- the suffix _bs is only interesting for you if you use BlueStacks (like me)\n\n\n\n```python    \n\ndf_activities1.ee_aa_longtouch.iloc[28]() # longtouch on item 28\n\ndf_activities1.ee_aa_longtouch_bs.iloc[28]() # recalculated for bluestacks, won’t work against a “regular” Android Device https://stackoverflow.com/a/73733261/15096247 \n\n```\n\n\n\n```python    \n\ndf_activities1.ee_aa_longtouch_offset_bs.iloc[28](200,1) # x,y offset \n\ndf_activities1.ee_aa_longtouch_offset_bs.iloc[28](200,1)  # x,y offset / recalculated for bluestacks \n\n```\n\n\n\n```python    \n\ndf_activities1.ee_aa_touch_offset.iloc[28](100,1) # x,y offset \n\ndf_activities1.ee_aa_touch_offset_bs.iloc[28](100,1) # x,y offset / recalculated for bluestacks \n\n```\n\n\n\n```python    \n\ndf_activities1.ee_aa_touch.iloc[28]()\n\ndf_activities1.ee_aa_touch_bs.iloc[28]() # recalculated for bluestacks \n\n```\n\n\n\n\n\n#### The column prefix ff_ means that the action is executed using adb shell input (root access not necessary)\n\n\n\n```python    \n\n# swipes down (or up, depending on your interpretation) within the bounds of the item\n\ndf_activities1.ff_aa_downswipe.iloc[28]()\n\n```\n\n\n\n```python    \n\n# swipes up (or down, depending on your interpretation) within the bounds of the item\n\ndf_activities1.ff_aa_upswipe.iloc[28]()\n\n```\n\n```python    \n\n# save all screenshots to the defined folder (when you created the instance), subfolder with timestamp as name will be created for each new DataFrame\n\ndf_activities1.dropna(subset='aa_screenshot').ff_aa_save_screenshot.apply(lambda x:x())\n\n```\n\n\n\n```python    \n\n#show screenshot with cv2.imshow, window can be closed by pressing 'q'\n\ndf_activities1.ff_aa_show_screenshot.iloc[28]()\n\n```\n\n\n\n```python    \n\ndf_activities1.ff_aa_tap_center_offset.iloc[28](1,20) # offset from the center of the found item - touch\n\ndf_activities1.ff_aa_tap_center_offset_long.iloc[28](1,20) # offset from the center of the found item - longtouch\n\ndf_activities1.ff_aa_tap_center_variation.iloc[28]()\n\ndf_activities1.ff_aa_tap_center_variation_long.iloc[28]()\n\ndf_activities1.ff_aa_tap_exact_center.iloc[28]()\n\ndf_activities1.ff_aa_tap_exact_center_long.iloc[28]()\n\n```\n\n```python  \n\ndf_activities1.ff_show_parents.iloc[28]() # Returns a DataFrame with all parent items \n\n\n\n```\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hansalemaos/androdf",
    "keywords": "uiautomator,dumpsys,adb,android,debugging,pandas,DataFrame,AndroidManifest,views,items,automation",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "androdf",
    "package_url": "https://pypi.org/project/androdf/",
    "platform": null,
    "project_url": "https://pypi.org/project/androdf/",
    "project_urls": {
      "Homepage": "https://github.com/hansalemaos/androdf"
    },
    "release_url": "https://pypi.org/project/androdf/0.12/",
    "requires_dist": [
      "a-cv2-imshow-thread",
      "a-cv-imwrite-imread-plus",
      "a-pandas-ex-plode-tool",
      "a-pandas-ex-string-to-dtypes",
      "a-pandas-ex-xml2df",
      "flatten-everything",
      "generate-random-values-in-range",
      "keyboard",
      "numpy",
      "opencv-python",
      "pandas",
      "PrettyColorPrinter",
      "psutil",
      "regex",
      "sendevent-touch",
      "Shapely"
    ],
    "requires_python": "",
    "summary": "Locates more items/views/elements on an Android device than similar automation packages by combining ADB's dumpsys activity/uiautomator",
    "version": "0.12",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17160840,
  "releases": {
    "0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28aa3facd4950912545a28cd2400cf64b12700dbaa6e82753903e2c4a9604048",
          "md5": "9765197b1721c5175e07e71346d93661",
          "sha256": "876f973eb6bbbf6c5d5aad3e1e1e0c0547d4d3f612bfa9ab38d1cc5afa0d29b6"
        },
        "downloads": -1,
        "filename": "androdf-0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9765197b1721c5175e07e71346d93661",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21217,
        "upload_time": "2022-12-02T04:56:30",
        "upload_time_iso_8601": "2022-12-02T04:56:30.059937Z",
        "url": "https://files.pythonhosted.org/packages/28/aa/3facd4950912545a28cd2400cf64b12700dbaa6e82753903e2c4a9604048/androdf-0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcc47b38228424b7adbd54652b503981d4e2848e2b6fe2e2307120f73374f895",
          "md5": "274152b9f6cadca9da25a31ba621eca6",
          "sha256": "5519ba60b99c0cfde113ba85762c340dd391c66ea87cb44d142447486eba71e9"
        },
        "downloads": -1,
        "filename": "androdf-0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "274152b9f6cadca9da25a31ba621eca6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20851,
        "upload_time": "2022-12-02T04:56:31",
        "upload_time_iso_8601": "2022-12-02T04:56:31.852461Z",
        "url": "https://files.pythonhosted.org/packages/fc/c4/7b38228424b7adbd54652b503981d4e2848e2b6fe2e2307120f73374f895/androdf-0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1887665486f584d88f19baf4b4e5f25a0cee5aadae11b541b4f2167780097d9b",
          "md5": "2e3d9a05effad78c4017ec3ad2dbc193",
          "sha256": "8c767b74a3cc21a5f893a99f5956bd2f02efe7b564367f73d571113ed7b51f00"
        },
        "downloads": -1,
        "filename": "androdf-0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e3d9a05effad78c4017ec3ad2dbc193",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21405,
        "upload_time": "2023-02-05T22:28:20",
        "upload_time_iso_8601": "2023-02-05T22:28:20.607600Z",
        "url": "https://files.pythonhosted.org/packages/18/87/665486f584d88f19baf4b4e5f25a0cee5aadae11b541b4f2167780097d9b/androdf-0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d60d845dd9cc92458c01ec97f5af0d772420cf79f418353df642cbbeee1d5e5",
          "md5": "0388908dc2981d03cd8a195482371051",
          "sha256": "270c5b28f737fcf328d0abd0bada54a40b76054d73aa96f76d289e53d88abc7c"
        },
        "downloads": -1,
        "filename": "androdf-0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "0388908dc2981d03cd8a195482371051",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21066,
        "upload_time": "2023-02-05T22:28:21",
        "upload_time_iso_8601": "2023-02-05T22:28:21.956376Z",
        "url": "https://files.pythonhosted.org/packages/5d/60/d845dd9cc92458c01ec97f5af0d772420cf79f418353df642cbbeee1d5e5/androdf-0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a524164e4e20deb44da501575fec995e6fca8365768b908410bfe55a9955c70",
          "md5": "cd555db40b5d8246e74bbd8c09c168ee",
          "sha256": "4e4ddead392686e48470fc07ddfbdf0fd43f0d9ada5a9c83375214a27dbd0483"
        },
        "downloads": -1,
        "filename": "androdf-0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd555db40b5d8246e74bbd8c09c168ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21430,
        "upload_time": "2023-03-05T01:27:44",
        "upload_time_iso_8601": "2023-03-05T01:27:44.524414Z",
        "url": "https://files.pythonhosted.org/packages/4a/52/4164e4e20deb44da501575fec995e6fca8365768b908410bfe55a9955c70/androdf-0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7574660d2dbcf003aa40f58c390770755ecc14987f0f9b03c4f258041c283463",
          "md5": "78d815cb97ffb111b37c67f50a882b8f",
          "sha256": "cb212db23d0f25fc0b0a576ee5d07305955d64abae3d8de6450a9f2560125cc2"
        },
        "downloads": -1,
        "filename": "androdf-0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "78d815cb97ffb111b37c67f50a882b8f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21076,
        "upload_time": "2023-03-05T01:27:46",
        "upload_time_iso_8601": "2023-03-05T01:27:46.324693Z",
        "url": "https://files.pythonhosted.org/packages/75/74/660d2dbcf003aa40f58c390770755ecc14987f0f9b03c4f258041c283463/androdf-0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4a524164e4e20deb44da501575fec995e6fca8365768b908410bfe55a9955c70",
        "md5": "cd555db40b5d8246e74bbd8c09c168ee",
        "sha256": "4e4ddead392686e48470fc07ddfbdf0fd43f0d9ada5a9c83375214a27dbd0483"
      },
      "downloads": -1,
      "filename": "androdf-0.12-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cd555db40b5d8246e74bbd8c09c168ee",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 21430,
      "upload_time": "2023-03-05T01:27:44",
      "upload_time_iso_8601": "2023-03-05T01:27:44.524414Z",
      "url": "https://files.pythonhosted.org/packages/4a/52/4164e4e20deb44da501575fec995e6fca8365768b908410bfe55a9955c70/androdf-0.12-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7574660d2dbcf003aa40f58c390770755ecc14987f0f9b03c4f258041c283463",
        "md5": "78d815cb97ffb111b37c67f50a882b8f",
        "sha256": "cb212db23d0f25fc0b0a576ee5d07305955d64abae3d8de6450a9f2560125cc2"
      },
      "downloads": -1,
      "filename": "androdf-0.12.tar.gz",
      "has_sig": false,
      "md5_digest": "78d815cb97ffb111b37c67f50a882b8f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21076,
      "upload_time": "2023-03-05T01:27:46",
      "upload_time_iso_8601": "2023-03-05T01:27:46.324693Z",
      "url": "https://files.pythonhosted.org/packages/75/74/660d2dbcf003aa40f58c390770755ecc14987f0f9b03c4f258041c283463/androdf-0.12.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}