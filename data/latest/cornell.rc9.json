{
  "info": {
    "author": "Yael Mintz",
    "author_email": "yaelmi3@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Cornell: record & replay mock server\n\n[![Build Status](https://travis-ci.com/hiredscorelabs/cornell.svg?branch=master)](https://app.travis-ci.com/github/hiredscorelabs/cornell)\n[![Python Version](https://img.shields.io/badge/python-3.7%20%7C%203.8%20%7C%203.9-blue)](https://www.python.org/downloads/release/python-390/)\n[![Docker Hub](https://img.shields.io/docker/pulls/hiredscorelabs/cornell.svg)](https://hub.docker.com/r/hiredscorelabs/cornell)\n\n<p align=\"center\">\n  <img src=\"https://imgur.com/ShxP4AI.png\" alt=\"Cornell Logo\">\n</p>\n\n\n> Cornell makes it dead simple, via its record and replay features to perform end-to-end testing in a fast and isolated testing environment.\n\nWhen your application integrates with multiple web-based services, end-to-end testing is crucial before deploying to production.\nMocking is often a tedious task. It becomes even more tiresome when working with multiple APIs from multiple vendors.\n\n[vcrpy](https://github.com/kevin1024/vcrpy) is an awesome library that records and replays HTTP interactions for unit tests. Its output is saved to reusable \"cassette\" files.\n\nBy wrapping vcrpy with Flask, Cornell provides a lightweight record and replay server that can be easily used during distributed system testing and simulate all HTTP traffic needed for your tests.\n\n## Basic Use Case\n\nWhen you're working with distributed systems, the test client entry point triggers a cascade of events that eventually send HTTP requests to an external server\n\n![System in test](https://imgur.com/OlDNTiD.jpg) \n\nWith Cornell server started, it will act as a proxy (**record mode**) between the outgoing HTTP requests and the external server and will record all relevant interactions.\nOnce interactions are recorded, Cornell can work in replay mode, replacing the external server entirely, short-circuiting the calls and instead, replying back instantly with the previously recorded response.\n\n![System in test](https://imgur.com/ZXTFgaP.jpg) \n\n\n## Installation \n\nTo install from [PyPI](https://pypi.org/project/cornell/), all you need to do is this:\n\n```bash \n  pip install cornell\n```\n\n## Usage\n\n```bash\nUsage: cornell_server.py [OPTIONS]\n\n  Usage Examples: Record mode: `cornell --forward_uri=\"https://remote_server/api\" --record -cd custom_cassette_dir`\n  Replay mode: `cornell -cd custom_cassette_dir\n\nOptions:\n  -p, --port INTEGER\n  -ff, --forward_uri TEXT         Must be provided in case of recording mode\n  -, --record-once / --record-all\n                                  Record each scenario only once, ignore the\n                                  rest\n\n  -r, --record                    Start server in record mode\n  -fp, --fixed-path               Fixed cassettes path. If enabled, Cornell\n                                  will support only one server for recording\n\n  -cd, --cassettes-dir TEXT       Cassettes parent directory, If not\n                                  specified, Cornell parent dir will be used\n\n  -re, --record-errors BOOLEAN    If enabled, Cornell will record erroneous\n                                  responses\n  --help                          Show this message and exit.\n```\n\n## Demo - Full Example\n\n\nStart Cornell in record mode:\n\n```\ncornell -ff https://api.github.com/ --record -cd cassettes\n```\n\nThis will start the server in record-proxy mode on port `9000`, and will forward all requests to `https://api.github.com/`\n\n![Cornell demo](https://imgur.com/ky5NBPf.gif)\n\nWhen cornell is in record mode, it will forward all request to the specified forwarding URL, for example:\n\n```\nrequests.get(\"http://127.0.0.1:9000/github/repos/kevin1024/vcrpy/license\").json()\n```\nor\n```\nrequests.get(\"http://127.0.0.1:9000/github/repos/kevin1024/vcrpy/contents\").json()\n```\n\nor you can browse to the URL using your browser\n\n![Browser](https://imgur.com/GMgF6Cx.gif)\n\nCornell will forward the request to the specified URL and will record both the request and the response.\n\n\nThe yaml cassettes will be recorded to a dedicated directory (by default, `cassettes` in the root dir)\n\nFor example:\n\n![Cassette dir](https://imgur.com/cZExEpu.gif)\n\n\n__Note__\n\n    By default, `cassettes` directory will be created in cornell's root dir and will contain the cassette by destination hierarchy.\n    Use `-cd` to specify custom directory for your cassettes.\n    Mind that `-cd <custom_dir> should match for both record and replay modes\n\nOnce all the necessary interactions were recorded, stop cornell server using *ctrl+c*.\nOnce stopped, all interactions will be mapped via an auto-generated `index.yaml` file.\n\n__Note__\n\n    In case the `index.yaml` is already present, it will be updated with new interactions. Otherwise, a new file will be created.\n\n__Note__\n\n    Cornell doesn't record interactions with an erroneous response, by default (i.e response with 404, will omitted). If you wish to enable this option, run cornell with --record-errors flag\n\nIn this specific example, we can see that the 2 requests are mapped to the saved cassettes:\n\n![Index file](https://imgur.com/IYjiJx6.gif)\n\n### Start cornell as docker container\n```bash\ndocker run hiredscorelabs/cornell:latest\n```\n\n### Build cornell as docker container\n\n```bash\ndocker build -t cornell .\ndocker run cornell --help\n```\n\nYou will probably need to import cassettes from a local directory from your computer. \nTo do that, use the following command to mount a local directory as a volume in the container.\n\n```bash\ndocker run  -v ~/cassettes:/var/cassettes cornell -cd /var/cassettes\n```\n\nIn some case, you want to use another port with cornell. If you need to do that, you should use\ndocker port mapping as in the following where cornell will listen on port `9020`.\n\n```bash\ndocker run -p 9020:9000 cornell\n```\n\n## Features\n\n### Request Matchers\n\nIn addition to the [vcrpy matchers](https://vcrpy.readthedocs.io/en/latest/configuration.html#request-matching), cornell provides the following custom request matchers:\n\n- [OData](https://www.odata.org/getting-started/basic-tutorial/) request query matcher\n- [SOAP](https://stoplight.io/api-types/soap-api/) request body matcher\n\n\n### Environment Variables\n\nSince Cornell is a testing server it's executed by default with `FLASK_ENV=local`.\nYou can modify this as described in [flask configuration](https://flask.palletsprojects.com/en/2.0.x/config/#configuration-handling)\n\n### Advanced Features\n\nCan be found in the [documentation](https://hiredscorelabs.github.io/cornell/docs/examples/)\n\n## Contributing\n\nYes please! contributions are more than welcome!\n\nPlease follow [PEP8](https://www.python.org/dev/peps/pep-0008/) and the [Python Naming Conventions](https://pep8.org/#prescriptive-naming-conventions)\n\nAdd tests when you're adding new functionality and make sure all the existing tests are happy and green :)\n\nTo set up development environment:\n```sh\n  python -m venv venv\n  source venv/bin/activate\n  make configure\n```\n\n\n## Running Tests\n\nTo run tests, run the following command\n\n```bash\n  python -m venv venv\n  source venv/bin/activate\n  make test\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://hiredscorelabs.github.io/cornell/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cornell",
    "package_url": "https://pypi.org/project/cornell/",
    "platform": null,
    "project_url": "https://pypi.org/project/cornell/",
    "project_urls": {
      "Documentation": "https://hiredscorelabs.github.io/cornell/",
      "Homepage": "https://hiredscorelabs.github.io/cornell/",
      "Source": "https://github.com/hiredscorelabs/cornell"
    },
    "release_url": "https://pypi.org/project/cornell/1.0.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Cornell: record & replay mock server",
    "version": "1.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13937236,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef15c52e70577d7ad2c05006e3a19cfc9c948578fdf63b95af09ec870eaab864",
          "md5": "e55af1fb331fcef793ef00903eca48c5",
          "sha256": "f3e2048703150967fdf1c64a6bd0740c0f15654dd4a3ab32ff5f3b98def8f1cb"
        },
        "downloads": -1,
        "filename": "cornell-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e55af1fb331fcef793ef00903eca48c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14843,
        "upload_time": "2021-07-08T14:57:26",
        "upload_time_iso_8601": "2021-07-08T14:57:26.145256Z",
        "url": "https://files.pythonhosted.org/packages/ef/15/c52e70577d7ad2c05006e3a19cfc9c948578fdf63b95af09ec870eaab864/cornell-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94b0269f6b0b2b66dae226c4b24907583e2c11945ee2f9fe1d68aef8168a737f",
          "md5": "ba38fd961e57144e6f28515cbc1dabf0",
          "sha256": "8a332839c463d2b21a9744a009528a4ec793d6c9f72643ed2f91caa7ec276daa"
        },
        "downloads": -1,
        "filename": "cornell-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ba38fd961e57144e6f28515cbc1dabf0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14896,
        "upload_time": "2021-07-08T15:27:51",
        "upload_time_iso_8601": "2021-07-08T15:27:51.767918Z",
        "url": "https://files.pythonhosted.org/packages/94/b0/269f6b0b2b66dae226c4b24907583e2c11945ee2f9fe1d68aef8168a737f/cornell-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "429e4aaad5ddec13704bcb7375e885c55a4f74a974a453f557c5769adacea091",
          "md5": "719b6fbf3ae36064fb9bd49ac7f14a8f",
          "sha256": "3d12e88d60c5b62b063d7f2eebeff3fe4252f07ea3353b736af6a0f242ae37f1"
        },
        "downloads": -1,
        "filename": "cornell-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "719b6fbf3ae36064fb9bd49ac7f14a8f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14974,
        "upload_time": "2021-07-08T19:46:41",
        "upload_time_iso_8601": "2021-07-08T19:46:41.533007Z",
        "url": "https://files.pythonhosted.org/packages/42/9e/4aaad5ddec13704bcb7375e885c55a4f74a974a453f557c5769adacea091/cornell-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9cf1d7a995fdd4f2fb95ae6bce9c47570ff60e59071d5cd2f494099f169cb2c",
          "md5": "8219c1c265ee0b80750b6f5f425430d2",
          "sha256": "e4d5856e127735798a311ffb27a99ae9b838968fee0409638a8f94cd9dc3167c"
        },
        "downloads": -1,
        "filename": "cornell-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8219c1c265ee0b80750b6f5f425430d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15048,
        "upload_time": "2021-07-11T11:28:10",
        "upload_time_iso_8601": "2021-07-11T11:28:10.728154Z",
        "url": "https://files.pythonhosted.org/packages/b9/cf/1d7a995fdd4f2fb95ae6bce9c47570ff60e59071d5cd2f494099f169cb2c/cornell-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4fde5732db0c91520852da47887761aa790c4ae2eddbd2294bdd4bf1d5639350",
          "md5": "941cbb739818c7b1bd5160b4b876345a",
          "sha256": "2163514c49511e13073f1b7ddb21cd9e9bc7e1f38988277b418c1a6b411b8bca"
        },
        "downloads": -1,
        "filename": "cornell-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "941cbb739818c7b1bd5160b4b876345a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15812,
        "upload_time": "2021-07-26T04:07:56",
        "upload_time_iso_8601": "2021-07-26T04:07:56.351571Z",
        "url": "https://files.pythonhosted.org/packages/4f/de/5732db0c91520852da47887761aa790c4ae2eddbd2294bdd4bf1d5639350/cornell-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9c73e85ea15b2af58692291789452c726a06feda8e0e3d603bda62a34a39d83",
          "md5": "ee6d6a29887377184fc40023b5535e77",
          "sha256": "3608062b05d0bdcedb101104a7bb8407d055b0b686da764812f6dc7df91b9144"
        },
        "downloads": -1,
        "filename": "cornell-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "ee6d6a29887377184fc40023b5535e77",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16036,
        "upload_time": "2021-09-09T05:34:50",
        "upload_time_iso_8601": "2021-09-09T05:34:50.887304Z",
        "url": "https://files.pythonhosted.org/packages/c9/c7/3e85ea15b2af58692291789452c726a06feda8e0e3d603bda62a34a39d83/cornell-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70411457207c21f368ddfca05cc4eea35cdc7d75bc4e822978eb44d99154b3ba",
          "md5": "56b690f575f9521f61bb4d7eb33f5b89",
          "sha256": "05483523a8fdb17bf8fbee221d478c0ca587e6ae08f23180ec5e1e3829847cad"
        },
        "downloads": -1,
        "filename": "cornell-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "56b690f575f9521f61bb4d7eb33f5b89",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17207,
        "upload_time": "2021-10-18T05:58:43",
        "upload_time_iso_8601": "2021-10-18T05:58:43.343310Z",
        "url": "https://files.pythonhosted.org/packages/70/41/1457207c21f368ddfca05cc4eea35cdc7d75bc4e822978eb44d99154b3ba/cornell-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df78ca0c2198f11f32b8973a979331638a11a9e9557dda91c7f31df451cfcfb1",
          "md5": "14535ebef44841b66e41af19330a8230",
          "sha256": "beafffe8038a05e76b6d63b4c90892a3b9b48f91bd866d559e353cb6169caca2"
        },
        "downloads": -1,
        "filename": "cornell-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "14535ebef44841b66e41af19330a8230",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17738,
        "upload_time": "2021-10-26T05:49:16",
        "upload_time_iso_8601": "2021-10-26T05:49:16.297463Z",
        "url": "https://files.pythonhosted.org/packages/df/78/ca0c2198f11f32b8973a979331638a11a9e9557dda91c7f31df451cfcfb1/cornell-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7913b2f38771a7cf05260bdfa0caef426d16b9627c705d7fa657593f96003702",
          "md5": "691f5cef80983255d23ac12d412e40ce",
          "sha256": "9a6ec977545ba762bbe53dd48192804d4d8612dbb491c231d745baf8be74ef67"
        },
        "downloads": -1,
        "filename": "cornell-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "691f5cef80983255d23ac12d412e40ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18987,
        "upload_time": "2022-05-25T19:17:15",
        "upload_time_iso_8601": "2022-05-25T19:17:15.287626Z",
        "url": "https://files.pythonhosted.org/packages/79/13/b2f38771a7cf05260bdfa0caef426d16b9627c705d7fa657593f96003702/cornell-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7913b2f38771a7cf05260bdfa0caef426d16b9627c705d7fa657593f96003702",
        "md5": "691f5cef80983255d23ac12d412e40ce",
        "sha256": "9a6ec977545ba762bbe53dd48192804d4d8612dbb491c231d745baf8be74ef67"
      },
      "downloads": -1,
      "filename": "cornell-1.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "691f5cef80983255d23ac12d412e40ce",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18987,
      "upload_time": "2022-05-25T19:17:15",
      "upload_time_iso_8601": "2022-05-25T19:17:15.287626Z",
      "url": "https://files.pythonhosted.org/packages/79/13/b2f38771a7cf05260bdfa0caef426d16b9627c705d7fa657593f96003702/cornell-1.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}