{
  "info": {
    "author": "",
    "author_email": "Jared Crapo <jared@kotfu.net>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "# ksc\n\nA command line tool to document and describe keyboard shortcuts in a standardized and properly formatted way.\n\nThe name of this program is a shorthand for (k)eyboard (s)hort(c)ut.\n\nInspired by and adapted from Brett Terpstra's\n[kbd plugin for Jekyll](https://github.com/ttscoff/JekyllPlugins/tree/master/KBDTag).\n\nHere's a few examples:\n\n    $ ksc -ms -p command shift %\n    ⇧+⌘+5\n    $ ksc -y command shift option control t\n    Hyper-T\n    $ ksc control +\n    Control-Shift-+\n    $ ksc ⌘⇧F\n    Shift-Command-F\n\n\n## Installation\n\nYou'll need Python 3. Install with pip:\n\n    $ pip install ksc\n\n\n## Specifying Keyboard Shortcuts\n\nThe simplest invocation of this program has some description of the keyboard shortcut\nas the arguments. Many variations of input are accepted. Capitalization is not\nimportant. You can use modifier key names and abbreviations, like `Command` and `opt`.\nYou can use modifier key symbols such as `⇧` and `⌃`. You can use the ASCII symbols\nfor modifiers that are used in the [Cocoa Text System Key\nBindings](https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/EventOverview/TextDefaultsBindings/TextDefaultsBindings.html).\n\nKeys can be any letter or symbol on the keyboard. In addition, you can type the name\nof a key, like `esc`, `return`, `home`, `pageup`, and `rightarrow`, `F5`, and `eject`.\nMost everything you try should just work. If it doesn't, open an issue and I'll add\nit. Here's some examples:\n\n    $ ksc command b\n    Command-B\n    $ ksc shift F2\n    Shift-F2\n    $ ksc fn f10\n    Fn-F10\n    $ ksc command-option-rightarrow\n    Option-Command-Right Arrow\n    $ ksc command shift %\n    Shift-Command-5\n    $ ksc $~r\n    Option-Shift-R\n    $ ksc ⇧⌘P\n    Shift-Command-P\n\n\nSequences of multiple keyboard shortcuts can be entered by separating them with a ` / `\nor ` | ` (the spaces surrounding the slash or the pipe are required).\n\n    $ ksc control x / control c\n    Control-X Control-C\n\nIf you have a sequence of multiple keyboard shortcuts and the first one has a slash,\nyou can clarify the shortcut by joining the elements of the shortcut with a `-`:\n\n    $ ksc command-/ / control-f\n    Command-/ Control-F\n\nIn addition to friendly modifier names, you can also enter keyboard shortcuts using\nunicode symbols or ASCII symbols representing the modifiers. The ASCII symbols are\nthe same as those used by Apple in the\n[Cocoa Text System Key Bindings](https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/EventOverview/TextDefaultsBindings/TextDefaultsBindings.html).\n\n| Modifier   | Unicode | ASCII |\n|------------|:-------:|:-----:|\n| Control    |   `⌃`   |  `^`  |\n| Option     |   `⌥`   |  `~`  |\n| Shift      |   `⇧`   |  `$`  |\n| Command    |   `⌘`   |  `@`  |\n\n\n## Getting Help\n\nYou are currently reading the help for this program. You can see a brief summary by\nusing the help command line option:\n\n    $ ksc -h\n\n\n## Customizing Output\n\nThe output is standardized according to Apple's Style Guidelines (see\nbelow), including names of modifiers, keys, capitalization, interpretation of shifted\nsymbols and characters, and sequence of modifiers if there are more than one.\n\nThere are several command line options to modify the output. The `-ms` or\n`--modifier-symbols` options output the modifers as unicode symbols:\n\n    $ ksc -ms shift command u\n    ⇧⌘U\n\nApple says you should include a plus sign between symbols, but I think that it looks\nugly, so that's not the default. If you want it, add the `-p` or `--plus-sign` when\nusing `-ms`:\n\n    $ ksc -ms -p shift command u\n    ⇧+⌘+U\n\nYou can also have the modifier symbols output as their ASCII representation by using\nthe `-ma` or `--modifier-ascii` options:\n\n    $ ksc -ma shift command u\n    $@U\n\nThe `-k` or `--key-symbols` argument causes all keys to be output as their symbol,\ninstead of their name. Makes most sense when used with `-ms`:\n\n    $ ksc -ms -k control option pageup\n    ⌃⌥⇞\n\nThe `-c` or `--clarify-keys` outputs some less-readable keys as names and symbols,\ninstead of just symbols. This setting is ignored if you use `-k`. Here's you can see\nthe difference when you use `-c`:\n\n    $ ksc command .\n    Command-.\n    $ ksc -c command .\n    Command-Period (.)\n\n\n## Show Me The Keys\n\nThe alpha-numeric keys like `T` and `8` are easily known and understood. However, you may\nnot know all the names and symbols for the other keys. You can get a list with:\n\n    $ ksc -l\n\n\n## Keyboard Maestro\n\nI have created a simple [Keyboard Maestro](https://www.keyboardmaestro.com/) macro\nwhich allows you to use `ksc` anywhere you can type on your Mac. I set a typed input trigger\nso when I type `;ksc`, Keyboard Maestro prompts me for input. I type in the keyboard shortcut\nI want, and Keyboard Maestro runs the script, captures the output, and then types the output\nwhere my cursor is.\n\n[![Keyboard Maestro Macro for Keyboard Shortcut](https://github.com/kotfu/ksc/blob/main/gfx/keyboard-maestro-macro.jpg)](https://github.com/kotfu/ksc/releases/latest)\n\nDownload the [Keyboard Shortcut macro](https://github.com/kotfu/ksc/releases/latest) for Keyboard Maestro.\n\n\n## Alfred\n\nIf you use [Alfred](https://www.alfredapp.com/), there is a\n[Keyboard Shortcut workflow](https://github.com/kotfu/ksc/releases/latest) which uses\nthe command line program. The workflow includes a snippet trigger of `ksc`.\nIf your snippet prefix is `//`, then you can type `//ksc` and Alfred will\nprompt you for input, where you can type the text representation of a keyboard\nshortcut. Alfred will paste the standardized version at the location of the cursor.\n\nDownload the [Keyboard Shortcut workflow](https://github.com/kotfu/ksc/releases/latest) for Alfred.\n\n\n## The Hyper Key\n\nUsing [Karabiner Elements](https://karabiner-elements.pqrs.org/) or\n[BetterTouchTool](https://folivora.ai/), you can make `Caps Lock-T` be the same as\npressing `Control-Option-Shift-Command-T`. Mac nerds call this the [Hyper\nkey](https://statusq.org/archives/2016/09/25/7857/). You can always\nuse `hyper` as a modifier key when entering a keyboard shortcut:\n\n    $ ksc hyper-t\n    Control-Option-Shift-Command-T\n\nIf you give the `-y` or `--hyper` command line option, you will get a `Hyper` key in\nyour output when it's appropriate:\n\n    $ ksc -y control option shift command t\n    Hyper-T\n    # ksc -y hyper t\n    Hyper-T\n\n\n## Tips and Tricks\n\n* You can easily get the unicode symbol for a key and put it on your clipboard (on MacOS) with:\n\n      $ ksc -k home | pbcopy\n\n* Because the tilde character `~` can mean both the `Option` key as well as `Shift-Grave`, the\n  following input is ambiguous:\n\n      $ ksc '$@~'\n\n  Note the single quotes to protect all those special characters from being\n  interpreted by your shell. This could either mean `Shift-Command-~`, which is valid,\n  or `Shift-Command-Option`, which is not, therefore this input causes a parsing\n  error. You can clarify by using:\n\n      $ ksc command tilde\n      Shift-Command-~\n\n  or:\n\n      $ ksc -c shift command grave\n      Shift-Command-Tilde (~)\n\n\n## Apple Style\n\nThis program implements the rules given in [Apple's Style Guide](https://help.apple.com/applestyleguide)\nunder definition \"key, keys\". Their deep links are not semantic and seem liable to change, so you'll\njust have to search for it.\n\nIf you strictly followed the Style Guide, the keyboard shortcut to take a screenshot\nwould be Command-Shift-%. However, Apple never refers to it this way, they use\nCommand-Shift-5. See\n[Take screenshots or screen recordings on Mac](https://support.apple.com/guide/mac-help/take-a-screenshot-or-screen-recording-mh26782/mac).\nIt appears the unwritten rule is that if the keyboard shortcut includes one of the\nnumber keys and shift, instead of showing the symbol you show the number.\n\nApple's [Human Interface Guidelines](https://developer.apple.com/design/human-interface-guidelines/macos/user-interaction/keyboard/)\nconflict with the style guide:\n\n> For example, the keyboard shortcut for Help is\n> Command-Question mark (?), not Shift-Command-Slash.\n\nAccording to the style guide, it should be Command-Shift-Question mark\n\nThis program implements the style guide plus the unwritten rule, and ignores the conflict in the HIG.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "keyboard shortcut,documentation,command line",
    "license": "MIT License  Copyright (c) 2021 kotfu  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ksc",
    "package_url": "https://pypi.org/project/ksc/",
    "platform": null,
    "project_url": "https://pypi.org/project/ksc/",
    "project_urls": {
      "homepage": "https://github.com/kotfu/ksc"
    },
    "release_url": "https://pypi.org/project/ksc/1.2.3/",
    "requires_dist": [
      "importlib-metadata (>=1.6.0) ; python_version < \"3.8\"",
      "build ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-mock ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "codecov ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "black ; extra == 'dev'",
      "wheel ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "rope ; extra == 'dev'",
      "invoke ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "A command line tool and python library for documenting and describing keyboard shortcuts.",
    "version": "1.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15755351,
  "releases": {
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ebf51a8cd1103999d87aee6f6327fa4754f21b12fd089fa3e1f79bb18f1fddf0",
          "md5": "0ba41ef7a76ba161660f2cc513c8bf67",
          "sha256": "641ed2e605857b8622bd48b86268f85b4470b22389c9fec03c5018dfe1adfb9b"
        },
        "downloads": -1,
        "filename": "ksc-1.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ba41ef7a76ba161660f2cc513c8bf67",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14358,
        "upload_time": "2021-07-10T18:29:10",
        "upload_time_iso_8601": "2021-07-10T18:29:10.972927Z",
        "url": "https://files.pythonhosted.org/packages/eb/f5/1a8cd1103999d87aee6f6327fa4754f21b12fd089fa3e1f79bb18f1fddf0/ksc-1.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8954082ef8cf76c56375b286e050f9e293f2e046b40edec4ed20669bfdd3c6e1",
          "md5": "841b4f709b1573c16032ff16b67b6d79",
          "sha256": "2be95bf13ddd974833211d15adaf8f838df5dc9d7de4a9b0c3df4991c7e2297b"
        },
        "downloads": -1,
        "filename": "ksc-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "841b4f709b1573c16032ff16b67b6d79",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 183872,
        "upload_time": "2021-07-10T18:29:12",
        "upload_time_iso_8601": "2021-07-10T18:29:12.810786Z",
        "url": "https://files.pythonhosted.org/packages/89/54/082ef8cf76c56375b286e050f9e293f2e046b40edec4ed20669bfdd3c6e1/ksc-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53e2e6e73121f2e2ca92e09e11546cd57d35e8c8e8cf77c696ef101c799c953b",
          "md5": "0510b6861349e3f39ae14b4c6f87e4ff",
          "sha256": "deaa1f5469d2ad5b70faa790288998d2f7f3dbc35c5b0ecdacdde8a1d49130d7"
        },
        "downloads": -1,
        "filename": "ksc-1.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0510b6861349e3f39ae14b4c6f87e4ff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 15098,
        "upload_time": "2022-11-14T01:59:18",
        "upload_time_iso_8601": "2022-11-14T01:59:18.930669Z",
        "url": "https://files.pythonhosted.org/packages/53/e2/e6e73121f2e2ca92e09e11546cd57d35e8c8e8cf77c696ef101c799c953b/ksc-1.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2310dded4fcc683ed345771392c7af1978f3ad9ccb6966ab7ca0d495302dc219",
          "md5": "f6a3a256140b7a6e8272b4b7d5711a72",
          "sha256": "77fc14e619fafedc3c99bca15ebdddd7bd97f09b9fd28b0966cfe3e80cb916f3"
        },
        "downloads": -1,
        "filename": "ksc-1.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f6a3a256140b7a6e8272b4b7d5711a72",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 183704,
        "upload_time": "2022-11-14T01:59:21",
        "upload_time_iso_8601": "2022-11-14T01:59:21.252277Z",
        "url": "https://files.pythonhosted.org/packages/23/10/dded4fcc683ed345771392c7af1978f3ad9ccb6966ab7ca0d495302dc219/ksc-1.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "53e2e6e73121f2e2ca92e09e11546cd57d35e8c8e8cf77c696ef101c799c953b",
        "md5": "0510b6861349e3f39ae14b4c6f87e4ff",
        "sha256": "deaa1f5469d2ad5b70faa790288998d2f7f3dbc35c5b0ecdacdde8a1d49130d7"
      },
      "downloads": -1,
      "filename": "ksc-1.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0510b6861349e3f39ae14b4c6f87e4ff",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 15098,
      "upload_time": "2022-11-14T01:59:18",
      "upload_time_iso_8601": "2022-11-14T01:59:18.930669Z",
      "url": "https://files.pythonhosted.org/packages/53/e2/e6e73121f2e2ca92e09e11546cd57d35e8c8e8cf77c696ef101c799c953b/ksc-1.2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2310dded4fcc683ed345771392c7af1978f3ad9ccb6966ab7ca0d495302dc219",
        "md5": "f6a3a256140b7a6e8272b4b7d5711a72",
        "sha256": "77fc14e619fafedc3c99bca15ebdddd7bd97f09b9fd28b0966cfe3e80cb916f3"
      },
      "downloads": -1,
      "filename": "ksc-1.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "f6a3a256140b7a6e8272b4b7d5711a72",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 183704,
      "upload_time": "2022-11-14T01:59:21",
      "upload_time_iso_8601": "2022-11-14T01:59:21.252277Z",
      "url": "https://files.pythonhosted.org/packages/23/10/dded4fcc683ed345771392c7af1978f3ad9ccb6966ab7ca0d495302dc219/ksc-1.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}