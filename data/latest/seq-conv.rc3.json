{
  "info": {
    "author": "shobrook",
    "author_email": "shobrookj@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# SeqConv\n\n`SeqConv` is a PyTorch implementation of a graph convolutional operator that uses long short-term memory (LSTM) to update node embeddings. This is useful for graph datasets where each node represents a sequence, such as a time series.\n\n<p align=\"center\">\n    <img src=\"assets/equation.png\" width=\"47%\" />\n</p>\n\nWhere _&phi;<sub>r</sub>_ and _&phi;<sub>m</sub>_ are LSTMs ([`torch.nn.LSTM`](https://pytorch.org/docs/stable/nn.html#torch.nn.LSTM)), and _h<sub>Θ</sub>_ is a neural network. The outputs of each LSTM are the last hidden state, _h<sub>n</sub>_, rather than all the output features.\n\n## Installation\n\nThis module can be installed with `pip`:\n\n```bash\n$ pip install seq_conv\n```\n\n## Usage\n\n`SeqConv` is built on PyTorch Geometric and derives from the [`MessagePassing`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.message_passing.MessagePassing) class. It expects an input graph where each node's \"features\" is a sequence of vectors. `SeqConv`, similarly to [`NNConv`](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.conv.NNConv), also incorporates any available edge features when collecting messages from a node's neighbors.\n\n**Parameters:**\n\n- **in_channels** (_int_): Number of channels in the input node sequence (e.g. if each node has a sequence of vectors of size n associated with it, then in_channels = n)\n- **out_channels** (_int_): Number of channels in the output node embedding\n- **edge_nn** (_torch.nn.Module_): A neural network _h<sub>Θ</sub>_ that maps edge features, `edge_attr`, of shape `[-1, num_edge_features]` to shape `[-1, out_channels]`\n- **aggr** (_string_, _optional_): The message aggregation scheme to use (\"add\", \"mean\", \"max\")\n- **root_lstm** (_bool_, _optional_): If set to `False`, the layer will not add the LSTM-transformed root node features to the output\n- **bias** (_bool_, _optional_): If set to `False`, the layer will not learn an additive bias\n- **\\*\\*kwargs** (_optional_): Additional arguments for `torch.nn.LSTM`\n\n**Example Usage:**\n\n```python\nimport torch\nfrom seq_conv import SeqConv\n\n# Convolutional layer\nconv_layer = SeqConv(\n    in_channels=1,\n    out_channels=5,\n    edge_nn=torch.nn.Linear(2, 5)\n)\n\n# Your input graph (see: https://pytorch-geometric.readthedocs.io/en/latest/notes/introduction.html#data-handling-of-graphs)\nx = torch.randn((3, 12, 1), dtype=torch.float) # Shape is [num_nodes, seq_len, in_channels]\nedge_index = torch.tensor([\n    [0, 1, 1, 2],\n    [1, 0, 2, 1]\n], dtype=torch.long)\nedge_attr = torch.randn((4, 2), dtype=torch.long)\n\n# Your output graph\nx = conv_layer(x, edge_index, edge_attr) # Shape is now [3, 5]\n```\n\n**To-Do:** Allow stacking of `SeqConv` layers.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shobrook/SeqConv",
    "keywords": "gnn,graph-neural-network,convolution,pytorch,graph,lstm,rnn,sequence",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "seq-conv",
    "package_url": "https://pypi.org/project/seq-conv/",
    "platform": "",
    "project_url": "https://pypi.org/project/seq-conv/",
    "project_urls": {
      "Homepage": "https://github.com/shobrook/SeqConv"
    },
    "release_url": "https://pypi.org/project/seq-conv/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "Graph convolutional operator that uses a LSTM as a filter",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7930415,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cd5272e90d1b16fc52ab6e80602de6e4a87ea72976a8d144781c0b694b40052",
          "md5": "465520df3f48662b20dd250b9b9c8cd3",
          "sha256": "a8a1208dfaa4ad36ba41d0ce5ff7319612ce02c102de400e2e7544dc4a67cccf"
        },
        "downloads": -1,
        "filename": "seq_conv-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "465520df3f48662b20dd250b9b9c8cd3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 3530,
        "upload_time": "2020-07-23T04:21:35",
        "upload_time_iso_8601": "2020-07-23T04:21:35.495911Z",
        "url": "https://files.pythonhosted.org/packages/2c/d5/272e90d1b16fc52ab6e80602de6e4a87ea72976a8d144781c0b694b40052/seq_conv-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70b286491e16ec86f6b865b4bca3a5199ae4aba648ae6516e0c3fdd20a9f8c7e",
          "md5": "abbb9c8ef74201b5fc6d2eea569383ac",
          "sha256": "8e5e4f7720bbcc80a0da2f3f1934608ea8c4ad9ac2d0d25192aadc772e7ee399"
        },
        "downloads": -1,
        "filename": "seq_conv-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "abbb9c8ef74201b5fc6d2eea569383ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 3529,
        "upload_time": "2020-07-23T20:10:47",
        "upload_time_iso_8601": "2020-07-23T20:10:47.468397Z",
        "url": "https://files.pythonhosted.org/packages/70/b2/86491e16ec86f6b865b4bca3a5199ae4aba648ae6516e0c3fdd20a9f8c7e/seq_conv-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "734320d931366f1db4ff5823444786ba7625778379ad66d2c16bf5a0d385d6db",
          "md5": "b4f78f5ecf09cbe1a86ce4a8c9ef688e",
          "sha256": "61ed61e332d82ab2ccb54569ee75ecbdcd5d0b4c3b0c44397f3ae5e5f057eb04"
        },
        "downloads": -1,
        "filename": "seq_conv-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b4f78f5ecf09cbe1a86ce4a8c9ef688e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 3562,
        "upload_time": "2020-08-11T01:49:03",
        "upload_time_iso_8601": "2020-08-11T01:49:03.523494Z",
        "url": "https://files.pythonhosted.org/packages/73/43/20d931366f1db4ff5823444786ba7625778379ad66d2c16bf5a0d385d6db/seq_conv-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "734320d931366f1db4ff5823444786ba7625778379ad66d2c16bf5a0d385d6db",
        "md5": "b4f78f5ecf09cbe1a86ce4a8c9ef688e",
        "sha256": "61ed61e332d82ab2ccb54569ee75ecbdcd5d0b4c3b0c44397f3ae5e5f057eb04"
      },
      "downloads": -1,
      "filename": "seq_conv-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b4f78f5ecf09cbe1a86ce4a8c9ef688e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 3562,
      "upload_time": "2020-08-11T01:49:03",
      "upload_time_iso_8601": "2020-08-11T01:49:03.523494Z",
      "url": "https://files.pythonhosted.org/packages/73/43/20d931366f1db4ff5823444786ba7625778379ad66d2c16bf5a0d385d6db/seq_conv-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}