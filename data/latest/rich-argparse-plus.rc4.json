{
  "info": {
    "author": null,
    "author_email": "Ali Hamdan <ali.hamdan.dev@gmail.com>, Michel de Cryptadamus <michel@cryptadamus.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# rich-argparse-plus\n\nFormat **argparse** help output with [**rich**](https://pypi.org/project/rich). This is a fork of the awesome [rich-argparse](https://github.com/hamdanal/rich-argparse) that adds a few features:\n\n1. **Select from many [preconfigured color themes](#perusing-themes)**.\n1. **Render to various image/web formats by setting an variable when you run `--help`.** PNG, PDF, HTML, SVG, PS, EPS, colored text are supported. Show off your fancy stuff.\n1. **Displays default argument values by default.**\n1. **Displays the range of acceptable values for integer arguments limited by `choices=range(n)`**.\n\n**Attn: PyPi Users:** To see the images [view this README on github](https://github.com/michelcrypt4d4mus/rich-argparse-plus/)\n\n![prince](doc/themes/python_-m_rich_argparse_help_prince_theme.png)\n\n(That's the `prince` theme, for obvious reasons).\n\n## Installation\n\n```sh\npip install rich-argparse-plus\n\n# To render to image formats like PNG or PDF you need the optional dependencies:\npip install rich-argparse-plus[optional]\n```\n\n## Usage\n\nPass the `formatter_class` to the argument parser, optionally choosing a theme.\n```python\nimport argparse\nfrom rich_argparse_plus import RichHelpFormatterPlus\n\nRichHelpFormatterPlus.choose_theme('prince')\nparser = argparse.ArgumentParser(..., formatter_class=RichHelpFormatterPlus)\n```\n\n### Rendering Help Text As Imagery\nFormats supported are `html`, `png`, `pdf`, `ps`, `svg`, `eps`, and `txt` (colored text). To actually render send the `RENDER_HELP_FORMAT` environment variable while you run your program with `--help`:\n\n```bash\n# Render a png to the current directory\nRENDER_HELP_FORMAT=png my_awesome_program.py --help\n\n# Set RENDER_HELP_OUTPUT_DIR to send the output somewhere else\nRENDER_HELP_FORMAT=pdf RENDER_HELP_OUTPUT_DIR=doc/themes/ my_awesome_program --help\n```\n\n\n### Perusing Themes\nYou can view images of all the themes [here in the repo](doc/themes/). Alternatively you can run `rich_argparse_plus_show_themes` to print them to your terminal.\n\nHere's a couple of them:\n\n##### **mother_earth**\n![morning_glory](doc/themes/python_-m_rich_argparse_help_mother_earth_theme.png)\n\n##### **the_pink**\n![the_pink](doc/themes/python_-m_rich_argparse_help_the_pink_theme.png)\n\n##### **black_and_white**\n![black_and_white](doc/themes/python_-m_rich_argparse_help_black_and_white_theme.png)\n\n##### **morning_glory**\n![morning_glory](doc/themes/python_-m_rich_argparse_help_morning_glory_theme.png)\n\n##### **dracula**\n![dracula](doc/themes/python_-m_rich_argparse_help_dracula_theme.png)\n\n##### **grey_area**\n![default](doc/themes/python_-m_rich_argparse_help_grey_area_theme.png)\n\n\n#### The Random Theme Stream Channel\n\nTry running `rich_argparse_plus_random_theme_stream`.\n\n\n## Recipes\n\n### argparse's subparsers\n`argparse` subparsers do not inherit the formatter class from the parent parser. To have the help\ntext of subparsers formatted with rich, you have to explicitly pass `formatter_class` to the\nsubparsers:\n\n1. you can pass it to all subparsers at once:\n   ```python\n    subparsers = parser.add_subparsers(\n        ..., parser_class=lambda **k: type(parser)(**k, formatter_class=parser.formatter_class),\n    )\n    p1 = subparsers.add_parser(...)\n    p2 = subparsers.add_parser(...)\n   ```\n1. or to each subparser individually:\n   ```python\n    subparsers = parser.add_subparsers(...)\n    p1 = subparsers.add_parser(..., formatter_class=parser.formatter_class)\n    p2 = subparsers.add_parser(..., formatter_class=parser.formatter_class)\n   ```\n\n### django's commands\n`django` uses argparse for its built in commands as well as for extension libraries and user\ndefined commands. To use rich_argparse with these commands, change your `manage.py` file as\nfollows:\n\n```diff\ndiff --git a/my_project/manage.py b/my_project/manage.py\nindex 7fb6855..5e5d48a 100755\n--- a/my_project/manage.py\n+++ b/my_project/manage.py\n@@ -1,22 +1,38 @@\n #!/usr/bin/env python\n \"\"\"Django's command-line utility for administrative tasks.\"\"\"\n import os\n import sys\n\n\n def main():\n     \"\"\"Run administrative tasks.\"\"\"\n     os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_project.settings')\n     try:\n         from django.core.management import execute_from_command_line\n     except ImportError as exc:\n         raise ImportError(\n             \"Couldn't import Django. Are you sure it's installed and \"\n             \"available on your PYTHONPATH environment variable? Did you \"\n             \"forget to activate a virtual environment?\"\n         ) from exc\n+\n+    from django.core.management.base import BaseCommand, DjangoHelpFormatter\n+    from rich_argparse_plus import RichHelpFormatterPlus\n+\n+    class RichDjangoHelpFormatter(DjangoHelpFormatter, RichHelpFormatterPlus):  # django first\n+        \"\"\"A rich-based help formatter for django commands.\"\"\"\n+\n+    original_create_parser = BaseCommand.create_parser\n+\n+    def create_parser(*args, **kwargs):\n+        parser = original_create_parser(*args, **kwargs)\n+        parser.formatter_class = RichDjangoHelpFormatter  # set the formatter_class\n+        return parser\n+\n+    BaseCommand.create_parser = create_parser\n+\n     execute_from_command_line(sys.argv)\n\n\n if __name__ == '__main__':\n     main()\n```\n\nNow try out some command like: `python manage.py runserver --help`\n\n### Special text highlighting\n\nYou can highlight patterns in the help text of your CLI. By default, `RichHelpFormatterPlus` defines\nthe following styles:\n```pycon\n>>> pprint(RichHelpFormatterPlus.styles)\n{'argparse.args': 'cyan',\n 'argparse.groups': 'dark_orange',\n 'argparse.help': 'default',\n 'argparse.metavar': 'dark_cyan',\n 'argparse.syntax': 'bold',\n 'argparse.text': 'default'}\n```\nThe following example highlights all occurrences of `pyproject.toml` in green.\n\n```python\n# add a style called `pyproject` which applies a green style (any rich style works)\nRichHelpFormatterPlus.styles[\"argparse.pyproject\"] = \"green\"\n# add the highlight regex (the regex group name must match an existing style name)\nRichHelpFormatterPlus.highlights.append(r\"\\b(?P<pyproject>pyproject\\.toml)\\b\")\n# pass the formatter class to argparse\nparser = argparse.ArgumentParser(..., formatter_class=RichHelpFormatterPlus)\n...\n```\n\n### Custom group name formatting\n\nYou can change the formatting of the group name (like `'positional arguments'` and `'options'`) by\nsetting the `RichHelpFormatterPlus.group_name_formatter` to any function that takes the group name as\nan input and returns a str. By default, `RichHelpFormatterPlus` sets the function to `str.upper`.\n\n```python\nRichHelpFormatterPlus.group_name_formatter = str.title\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": "argparse,colors,help-formatter,help,rich",
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "rich_argparse_plus",
    "package_url": "https://pypi.org/project/rich_argparse_plus/",
    "platform": null,
    "project_url": "https://pypi.org/project/rich_argparse_plus/",
    "project_urls": {
      "Home": "https://github.com/michelcrypt4d4mus/rich-argparse-plus"
    },
    "release_url": "https://pypi.org/project/rich_argparse_plus/0.3.1.4/",
    "requires_dist": [
      "rich >= 11.0.0",
      "flit ~= 3.7 ; extra == \"dev\"",
      "keyring ~= 23.9 ; extra == \"dev\"",
      "pytest-cov ; extra == \"dev\"",
      "pytest ; extra == \"dev\"",
      "cairosvg ~= 2.5 ; extra == \"optional\""
    ],
    "requires_python": ">=3.7",
    "summary": "A rich text formatter for argparse help with export and default features",
    "version": "0.3.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15351101,
  "releases": {
    "0.3.1.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "6b68ec05de90816cdfca1649b8144558788976eed5fa09754a278e9d418fa546",
          "md5": "5b142a82f5c034f216b477949730bc8b",
          "sha256": "beae8e1e43701229eb4eab7952d306d286aa6799a28382b9abeb42e99d53ba0a"
        },
        "downloads": -1,
        "filename": "rich_argparse_plus-0.3.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5b142a82f5c034f216b477949730bc8b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11627,
        "upload_time": "2022-10-09T04:55:14",
        "upload_time_iso_8601": "2022-10-09T04:55:14.604490Z",
        "url": "https://files.pythonhosted.org/packages/6b/68/ec05de90816cdfca1649b8144558788976eed5fa09754a278e9d418fa546/rich_argparse_plus-0.3.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "161ae791e88344f899deb8582208115cd8cd925d37e5b9a733b5afe0da4a0eee",
          "md5": "ba3ed93ac7632feb6241d865a0093067",
          "sha256": "9347f3ba49096f7a1ef80339dd5aeccf34558995d574f3c1e6bd67e8302c8f18"
        },
        "downloads": -1,
        "filename": "rich_argparse_plus-0.3.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ba3ed93ac7632feb6241d865a0093067",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 23763,
        "upload_time": "2022-10-09T04:55:17",
        "upload_time_iso_8601": "2022-10-09T04:55:17.384964Z",
        "url": "https://files.pythonhosted.org/packages/16/1a/e791e88344f899deb8582208115cd8cd925d37e5b9a733b5afe0da4a0eee/rich_argparse_plus-0.3.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1.2": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "6fc25bb44f9296ebee7b56779c87831e0b9927195e8fbdec2af63b1721ddd667",
          "md5": "38d1a17a4661354bae3f4eb753d087b3",
          "sha256": "e5f4755dc6a1c97d4a67d9188506dfcee575b1fa007467d550ae50816146e979"
        },
        "downloads": -1,
        "filename": "rich_argparse_plus-0.3.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "38d1a17a4661354bae3f4eb753d087b3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 14468,
        "upload_time": "2022-10-09T07:33:31",
        "upload_time_iso_8601": "2022-10-09T07:33:31.300826Z",
        "url": "https://files.pythonhosted.org/packages/6f/c2/5bb44f9296ebee7b56779c87831e0b9927195e8fbdec2af63b1721ddd667/rich_argparse_plus-0.3.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "6db7a4d72492b05e118e9f4202c27a23c536de11728fd042ef5867f2c481f2aa",
          "md5": "5fcc0842511262f28394f5090aec1e5c",
          "sha256": "b57ec7cf559f8604fb103010347186d3540dd7fcdf353f0cbe2b4c32be48bdc2"
        },
        "downloads": -1,
        "filename": "rich_argparse_plus-0.3.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5fcc0842511262f28394f5090aec1e5c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 24944,
        "upload_time": "2022-10-09T07:33:33",
        "upload_time_iso_8601": "2022-10-09T07:33:33.238591Z",
        "url": "https://files.pythonhosted.org/packages/6d/b7/a4d72492b05e118e9f4202c27a23c536de11728fd042ef5867f2c481f2aa/rich_argparse_plus-0.3.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1.3": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "29498d0cd82c29a3136c443c687400777a3b0d0acd4c8a2ba91214539e6014a0",
          "md5": "fc78878b857fa7e846d78dd344080672",
          "sha256": "f49377e1864427ea21f9f18679753429bff41fe228d1e3fe5682599393a616be"
        },
        "downloads": -1,
        "filename": "rich_argparse_plus-0.3.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fc78878b857fa7e846d78dd344080672",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 15370,
        "upload_time": "2022-10-09T11:30:52",
        "upload_time_iso_8601": "2022-10-09T11:30:52.490072Z",
        "url": "https://files.pythonhosted.org/packages/29/49/8d0cd82c29a3136c443c687400777a3b0d0acd4c8a2ba91214539e6014a0/rich_argparse_plus-0.3.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "c03b3b3d03dd74c3868242f3b12ece74d2c2cd0f57ed42643d2726b62a24f15a",
          "md5": "5bbe7a128f27a28bec2a4759876febb4",
          "sha256": "a5d9bc4a9ec8f5dfc04a5e995f4a841d2af273907c4ca5bf966a768a051a1614"
        },
        "downloads": -1,
        "filename": "rich_argparse_plus-0.3.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5bbe7a128f27a28bec2a4759876febb4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 25962,
        "upload_time": "2022-10-09T11:30:54",
        "upload_time_iso_8601": "2022-10-09T11:30:54.977619Z",
        "url": "https://files.pythonhosted.org/packages/c0/3b/3b3d03dd74c3868242f3b12ece74d2c2cd0f57ed42643d2726b62a24f15a/rich_argparse_plus-0.3.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1.4": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "3a7956960e21ea33fc366432dd9edde281f0118c41a0e72600301f2e0b67897f",
          "md5": "1bd7b44fb51c99effaafb361c9459402",
          "sha256": "74772572b852b7fefe28e44c5fe0e6491354b2594dae33ccec3860b349f96b21"
        },
        "downloads": -1,
        "filename": "rich_argparse_plus-0.3.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1bd7b44fb51c99effaafb361c9459402",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 15333,
        "upload_time": "2022-10-09T11:46:44",
        "upload_time_iso_8601": "2022-10-09T11:46:44.132858Z",
        "url": "https://files.pythonhosted.org/packages/3a/79/56960e21ea33fc366432dd9edde281f0118c41a0e72600301f2e0b67897f/rich_argparse_plus-0.3.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "9b3475eaf9752783aa93498d46ccbc7046e25cc1d44e5f6c43d829d90b9dcd02",
          "md5": "085ed42b9eb5da59613b7694c8211bc0",
          "sha256": "aab9e49b4ba98ff501705678330eda8e9bc07d933edc5cac5f38671ee53f9998"
        },
        "downloads": -1,
        "filename": "rich_argparse_plus-0.3.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "085ed42b9eb5da59613b7694c8211bc0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 25899,
        "upload_time": "2022-10-09T11:46:45",
        "upload_time_iso_8601": "2022-10-09T11:46:45.805232Z",
        "url": "https://files.pythonhosted.org/packages/9b/34/75eaf9752783aa93498d46ccbc7046e25cc1d44e5f6c43d829d90b9dcd02/rich_argparse_plus-0.3.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "3a7956960e21ea33fc366432dd9edde281f0118c41a0e72600301f2e0b67897f",
        "md5": "1bd7b44fb51c99effaafb361c9459402",
        "sha256": "74772572b852b7fefe28e44c5fe0e6491354b2594dae33ccec3860b349f96b21"
      },
      "downloads": -1,
      "filename": "rich_argparse_plus-0.3.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1bd7b44fb51c99effaafb361c9459402",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 15333,
      "upload_time": "2022-10-09T11:46:44",
      "upload_time_iso_8601": "2022-10-09T11:46:44.132858Z",
      "url": "https://files.pythonhosted.org/packages/3a/79/56960e21ea33fc366432dd9edde281f0118c41a0e72600301f2e0b67897f/rich_argparse_plus-0.3.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "9b3475eaf9752783aa93498d46ccbc7046e25cc1d44e5f6c43d829d90b9dcd02",
        "md5": "085ed42b9eb5da59613b7694c8211bc0",
        "sha256": "aab9e49b4ba98ff501705678330eda8e9bc07d933edc5cac5f38671ee53f9998"
      },
      "downloads": -1,
      "filename": "rich_argparse_plus-0.3.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "085ed42b9eb5da59613b7694c8211bc0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 25899,
      "upload_time": "2022-10-09T11:46:45",
      "upload_time_iso_8601": "2022-10-09T11:46:45.805232Z",
      "url": "https://files.pythonhosted.org/packages/9b/34/75eaf9752783aa93498d46ccbc7046e25cc1d44e5f6c43d829d90b9dcd02/rich_argparse_plus-0.3.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}