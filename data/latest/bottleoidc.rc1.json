{
  "info": {
    "author": "gunville",
    "author_email": "rk13088@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Bottle",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n## BottleOIDC - OIDC Service Provider for Bottle\n\n**BottleOIDC** is an OpenID Connect module providing authentication and authorization for [Bottle web Framework](https://bottlepy.org) web apps.\n\n**BottleOIDC** supports OIDC auto discovery to simplify configuration and deployment.\n### Installing\n\n```bash\n# pip install BottleOIDC\n```\nThis loads the necessary python modules including bottle and BottleSessions, requests, and PyJWT.\n### Using BottleOIDC\n```python\nfrom bottle import Bottle\nfrom BottleSessions import BottleSessions\nfrom BottleOIDC import BottleOIDC\nfrom config import oidc_config\n\napp = Bottle()\nBottleSessions(app)\nauth = BottleOIDC(app, config=oidc_config)\n\n@app.route('/login')\n@auth.require_login\ndef login():\n    return f'hello {auth.my_username}'\n\n@app.route('/bob')\n@auth.require_user('bob')\n    return 'You must be bob'\n\nif __name__ == '__main__:\n    app.run()\n\n```\n#### Signature and Parameters\n\n```\nauth = BottleOIDC(app, config)\n```\n**`app`** - the Bottle() application context object. **Required.**\n\n**`config`** - a python `dict` of configuration parameters and options. **Required.**\n\n### Configuration Options\n**BottleOIDC** is configured by passing a python `dict` with the necessary parameters:\n> Example Configuration\n```python\noidc_config = {\n  \"discovery_url\": \"https://login.microsoftonline.com/<tenentid>/V2.0/.well-known/openid-configuration\",\n  \"client_id\": \"1b170767-1234-5678-abcd-90ff90ff90ff\",\n  \"client_secret\": \"MYCLIENTsecret\",\n  \"client_scope\": [\"openid\", \"email\", \"profile\", ],\n  \"user_attr\" : \"email\",\n}\n```\n\n**`discovery_url`** - oidc auto discovery url of the IdP. **Required.**\n\n**`client_id`** - oidc client identifier of the app registered with IdP. **Required.**\n\n**`client_secret`** - oidc client secret for the app provided by the IdP. **Required.**\n\n**`client_scope`** - a Python `list` of requested scopes. Default is *['openid', 'email', 'profile']*).\n\n**`user_attr`** - attribute to set username. Default is `email`\n\n**`logout_idp`** - on logout, initiate IdP logout process.  Default is `False`.\n\n#### BottleOIDC Object Properties\n**`auth.is_authenticated`** - Is `True` if the current session is authenticated.\n\n**`auth.my_username`** - Returns None if the user is not authenticated. Returns `user_attr` value from the Id token, or 'AuthenticatedUser' if the attribute was not available in the Id token.\n\n**`auth.my_attrs`** - Returns dict of attrs returned in the Id token, or {} if not authenticated.\n\n> Example using object properties:\n```python\n@app.route('/status')\ndef view():\n    if auth.is_authenticated:\n        return {\n            'user': auth.my_username,\n            'data': auth.my_attrs\n        }\n    else:\n        return 'You are not Authenticated.'\n```\n### BottleSaml methods\n\n#### auth.initiate_login()\n\n```python\nreturn auth.initiate_login(next, force_reauth, userhint)\n```\n\n`init_login()` returns OIDC code grant request redirect to iDP that initiates login. Arguments:\n\n**`next`** - URL to redirect after login completed. Optional. \n\n**`force_reauth`** - `True` requests IdP to require full reauth for this login. Default `False`\n\n**`userhint`** - (where possible) provides the iDP with username hint. Default `None`\n\n#### auth.initiate_logout()\n```python         \nreturn auth.initiate_logout(next)\n``` \n`initiate_logout()` clears the Session data to log the user out locally. (To logout from IdP set the **`logout_idp`** config option to `True`.)\n\n**`next`** - URL to redirect after logout completed. Default is '/', *Optional.*\n\n```python\n@app.route('/logout')\ndef logout():\n    return auth.initiate_logout()\n```\n\n#### @auth.login_required\n```python\n@auth.login_required\ndef view():\n    return 'logged in'\n```\nDecorates a function to initiate login if the session is not authenticated. On successful authentication the browser will be redirected to the view.\n\n#### @auth.add_login_hook\n```python\n@oidc.add_login_hook\ndef hook(username, attrs):\n    return username, attrs\n```\nDecorates a function to runs after OIDC authentication is completed and tokens have been retrieved. \n\nLogin hooks can process and filter username and Id token attributes before the data is stored in the session.  Hooks are run in the order they are added.\n\n#### @auth.require_user\n```python\n@auth.require_user(['bob', 'alice'])\ndef view():\n    return 'only bob or alice can get here'\n```\nDecorator adds authorization requirement to a view. If the sessions `username` is in the list, the view is reached and processed. Otherwise returns a `403 Unauthorized` error if the user is not in the list.\n\n#### @auth.require_attr(attr, value)\n```python\n@auth.require_attr(attr='groups', value=['sysadmin', 'netadmin']) \ndef view():\n    return 'you are in sysadmin or netadmin'\n```\nDecorator adds authorization requirement to a view. If the session has the desired attribute (in the id token) and it matches one of the values listed, the view is reached and processed. Otherwise returns a `403 Unauthorized` error.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Glocktober/BottleOIDC",
    "keywords": "'bottle oidc plugin'",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "BottleOIDC",
    "package_url": "https://pypi.org/project/BottleOIDC/",
    "platform": "",
    "project_url": "https://pypi.org/project/BottleOIDC/",
    "project_urls": {
      "Homepage": "https://github.com/Glocktober/BottleOIDC",
      "overview": "https://github.com/Glocktober/BottleOIDC/blob/main/README.md",
      "repo": "https://github.com/Glocktober/BottleOIDC"
    },
    "release_url": "https://pypi.org/project/BottleOIDC/21.8.30/",
    "requires_dist": [
      "cryptography (>=3.0)",
      "bottle (>=0.12.0)",
      "BottleSessions (>=21.07.01)",
      "Requests (>=2.26.0)",
      "PyJWT (>=2.1.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "OIDC Service Provider for Bottle",
    "version": "21.8.30",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11308250,
  "releases": {
    "21.8.30": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5153e13388ae3ffec777d2e9ce89f2fac20526280dfa376417a812b42705f0ab",
          "md5": "25261f30b60c47c8e4379166974767b7",
          "sha256": "8f33de45f18ff587404eeef51005b1472739f9acd5834e4672d8d85735f39441"
        },
        "downloads": -1,
        "filename": "BottleOIDC-21.8.30-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "25261f30b60c47c8e4379166974767b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13529,
        "upload_time": "2021-08-29T19:05:47",
        "upload_time_iso_8601": "2021-08-29T19:05:47.580953Z",
        "url": "https://files.pythonhosted.org/packages/51/53/e13388ae3ffec777d2e9ce89f2fac20526280dfa376417a812b42705f0ab/BottleOIDC-21.8.30-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6284f8a48f180ffcaac652dddc9f0296869f43cf0ad10caad1bc6b235efe5547",
          "md5": "10ad283603e920588af476301e973a7c",
          "sha256": "b3fea5d34dd31d8ec210af6c0a0d334f8343d2e1aca4491b2f9d2bfaae0beafb"
        },
        "downloads": -1,
        "filename": "BottleOIDC-21.8.30.tar.gz",
        "has_sig": false,
        "md5_digest": "10ad283603e920588af476301e973a7c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13353,
        "upload_time": "2021-08-29T19:05:48",
        "upload_time_iso_8601": "2021-08-29T19:05:48.876404Z",
        "url": "https://files.pythonhosted.org/packages/62/84/f8a48f180ffcaac652dddc9f0296869f43cf0ad10caad1bc6b235efe5547/BottleOIDC-21.8.30.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5153e13388ae3ffec777d2e9ce89f2fac20526280dfa376417a812b42705f0ab",
        "md5": "25261f30b60c47c8e4379166974767b7",
        "sha256": "8f33de45f18ff587404eeef51005b1472739f9acd5834e4672d8d85735f39441"
      },
      "downloads": -1,
      "filename": "BottleOIDC-21.8.30-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "25261f30b60c47c8e4379166974767b7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13529,
      "upload_time": "2021-08-29T19:05:47",
      "upload_time_iso_8601": "2021-08-29T19:05:47.580953Z",
      "url": "https://files.pythonhosted.org/packages/51/53/e13388ae3ffec777d2e9ce89f2fac20526280dfa376417a812b42705f0ab/BottleOIDC-21.8.30-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6284f8a48f180ffcaac652dddc9f0296869f43cf0ad10caad1bc6b235efe5547",
        "md5": "10ad283603e920588af476301e973a7c",
        "sha256": "b3fea5d34dd31d8ec210af6c0a0d334f8343d2e1aca4491b2f9d2bfaae0beafb"
      },
      "downloads": -1,
      "filename": "BottleOIDC-21.8.30.tar.gz",
      "has_sig": false,
      "md5_digest": "10ad283603e920588af476301e973a7c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 13353,
      "upload_time": "2021-08-29T19:05:48",
      "upload_time_iso_8601": "2021-08-29T19:05:48.876404Z",
      "url": "https://files.pythonhosted.org/packages/62/84/f8a48f180ffcaac652dddc9f0296869f43cf0ad10caad1bc6b235efe5547/BottleOIDC-21.8.30.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}