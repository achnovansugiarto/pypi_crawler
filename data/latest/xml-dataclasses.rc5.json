{
  "info": {
    "author": "Toby Fleming",
    "author_email": "tobywf@users.noreply.github.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Text Processing :: Markup :: XML"
    ],
    "description": "# XML dataclasses\n\n[![License: MPL 2.0](https://img.shields.io/badge/License-MPL%202.0-brightgreen.svg)](https://opensource.org/licenses/MPL-2.0) ![Build](https://github.com/tobywf/xml_dataclasses/workflows/Build/badge.svg?branch=master)\n\n[XML dataclasses on PyPI](https://pypi.org/project/xml-dataclasses/)\n\nThis library maps XML to and from Python dataclasses. It build on normal dataclasses from the standard library and uses [`lxml`](https://pypi.org/project/lxml/) for parsing/generating XML.\n\nIt's currently in alpha. It isn't ready for production if you aren't willing to do your own evaluation/quality assurance.\n\nRequires Python 3.7 or higher.\n\n## Features\n\n* Convert XML documents to well-defined dataclasses, which work with Mypy or IDE auto-completion\n* XML dataclasses are dataclasses\n* Full control of parsing and generating XML via `lxml`\n* Loading and dumping of attributes, child elements, and text content\n* Required and optional attributes/child elements\n* Lists of child elements are supported, as are unions and lists or unions\n* Inheritance does work, but has the same limitations as dataclasses. Inheriting from base classes with required fields and declaring optional fields doesn't work due to field order. This isn't recommended\n* Namespace support is decent as long as correctly declared. I've tried on several real-world examples, although they were known to be valid. `lxml` does a great job at expanding namespace information when loading and simplifying it when saving\n* Post-load validation hook `xml_validate`\n* Fields not required in the constructor are ignored by this library (via `ignored()` or `init=False`)\n\n## Limitations\n\n* Whitespace and comments aren't supported in the data model. They must be stripped when loading the XML\n* So far, I haven't found any examples where XML can't be mapped to a dataclass, but it's likely possible given how complex XML is\n* No typing/type conversions. Since XML is untyped, only string values are currently allowed. Type conversions are tricky to implement in a type-safe and extensible manner.\n* Dataclasses must be written by hand, no tools are provided to generate these from, DTDs, XML schema definitions, or RELAX NG schemas\n\n## Security\n\nThe caveats concerning untrusted content are roughly the same as with `lxml`, since that does the parsing. This is good, since `lxml`'s behaviour to XML attacks are well-understood. This library recursively resolves data structures, which may have memory implications for unbounded payloads. Because loading is driven from the dataclass definitions, it shouldn't be possible to execute arbitrary Python code (not a guarantee, see license). If you must deal with untrusted content, a workaround is to [use `lxml` to validate](https://lxml.de/validation.html) untrusted content with a strict schema, which you may already be doing.\n\n## Patterns\n\n### Defining attributes\n\nAttributes can be either `str` or `Optional[str]`. Using any other type won't work. Attributes can be renamed or have their namespace modified via the `rename` function. It can be used either on its own, or with an existing field definition:\n\n```python\n@xml_dataclass\nclass Foo:\n    __ns__ = None\n    required: str\n    optional: Optional[str] = None\n    renamed_with_default: str = rename(default=None, name=\"renamed-with-default\")\n    namespaced: str = rename(ns=\"http://www.w3.org/XML/1998/namespace\")\n    existing_field: str = rename(field(...), name=\"existing-field\")\n```\n\nFor now, you can work around this limitation with properties that do the conversion, and perform post-load validation.\n\nBy default, unknown attributes raise an error. This can be disabled by passing `Options` to `load` with `ignore_unknown_attributes`.\n\n### Defining text\n\nLike attributes, text can be either `str` or `Optional[str]`. You must declare text content with the `text` function. Similar to `rename`, this function can use an existing field definition, or take the `default` argument. Text cannot be renamed or namespaced. Every class can only have one field defining text content. If a class has text content, it cannot have any children.\n\n```python\n@xml_dataclass\nclass Foo:\n    __ns__ = None\n    value: str = text()\n\n@xml_dataclass\nclass Foo:\n    __ns__ = None\n    content: Optional[str] = text(default=None)\n\n@xml_dataclass\nclass Foo:\n    __ns__ = None\n    uuid: str = text(field(default_factory=lambda: str(uuid4())))\n```\n\n### Defining children/child elements\n\nChildren must ultimately be other XML dataclasses. However, they can also be `Optional`, `List`, and `Union` types:\n\n* `Optional` must be at the top level. Valid: `Optional[List[XmlDataclass]]`. Invalid: `List[Optional[XmlDataclass]]`\n* Next, `List` should be defined (if multiple child elements are allowed). Valid: `List[Union[XmlDataclass1, XmlDataclass2]]`. Invalid: `Union[List[XmlDataclass1], XmlDataclass2]`\n* Finally, if `Optional` or `List` were used, a union type should be the inner-most (again, if needed)\n\nIf a class has children, it cannot have text content.\n\nChildren can be renamed via the `rename` function. However, attempting to set a namespace is invalid, since the namespace is provided by the child type's XML dataclass. Also, unions of XML dataclasses must have the same namespace (you can use different fields with renaming if they have different namespaces, since the XML names will be resolved as a combination of namespace and name).\n\nBy default, unknown children raise an error. This can be disabled by passing `Options` to `load` with `ignore_unknown_children`.\n\n### Defining post-load validation\n\nSimply implement an instance method called `xml_validate` with no parameters, and no return value (if you're using type hints):\n\n```python\ndef xml_validate(self) -> None:\n    pass\n```\n\nIf defined, the `load` function will call it after all values have been loaded and assigned to the XML dataclass. You can validate the fields you want inside this method. Return values are ignored; instead raise and catch exceptions.\n\n### Ignored fields\n\nFields not required in the constructor are ignored by this library (new in version 0.0.6). This is useful if you want to populate a field via post-load validation.\n\nYou can simply set `init=False`, although you may also want to exclude the field from comparisons. The `ignored` function does this, and can also be used.\n\nThe name doesn't matter, but it might be useful to use the `_` prefix as a convention.\n\n## Example (fully type hinted)\n\n(This is a simplified real world example - the container can also include optional `links` child elements.)\n\n```xml\n<?xml version=\"1.0\"?>\n<container version=\"1.0\" xmlns=\"urn:oasis:names:tc:opendocument:xmlns:container\">\n  <rootfiles>\n    <rootfile full-path=\"OEBPS/content.opf\" media-type=\"application/oebps-package+xml\" />\n  </rootfiles>\n</container>\n```\n\n```python\nfrom dataclasses import dataclass\nfrom typing import List\nfrom lxml import etree  # type: ignore\nfrom xml_dataclasses import xml_dataclass, rename, load, dump, NsMap, XmlDataclass\n\nCONTAINER_NS = \"urn:oasis:names:tc:opendocument:xmlns:container\"\n\n\n@xml_dataclass\n@dataclass\nclass RootFile:\n    __ns__ = CONTAINER_NS\n    full_path: str = rename(name=\"full-path\")\n    media_type: str = rename(name=\"media-type\")\n\n\n@xml_dataclass\n@dataclass\nclass RootFiles:\n    __ns__ = CONTAINER_NS\n    rootfile: List[RootFile]\n\n\n# see Gotchas, this workaround is required for type hinting\n@xml_dataclass\n@dataclass\nclass Container(XmlDataclass):\n    __ns__ = CONTAINER_NS\n    version: str\n    rootfiles: RootFiles\n    # WARNING: this is an incomplete implementation of an OPF container\n\n    def xml_validate(self) -> None:\n        if self.version != \"1.0\":\n            raise ValueError(f\"Unknown container version '{self.version}'\")\n\n\nif __name__ == \"__main__\":\n    nsmap: NsMap = {None: CONTAINER_NS}\n    # see Gotchas, stripping whitespace and comments is highly recommended\n    parser = etree.XMLParser(remove_blank_text=True, remove_comments=True)\n    lxml_el_in = etree.parse(\"container.xml\", parser).getroot()\n    container = load(Container, lxml_el_in, \"container\")\n    lxml_el_out = dump(container, \"container\", nsmap)\n    print(etree.tostring(lxml_el_out, encoding=\"unicode\", pretty_print=True))\n```\n\n## Gotchas\n\n### Type hinting\n\nThis can be a real pain to get right. Unfortunately, if you need this, you may have to resort to:\n\n```python\n@xml_dataclass\n@dataclass\nclass Child:\n    __ns__ = None\n    pass\n\n@xml_dataclass\n@dataclass\nclass Parent(XmlDataclass):\n    __ns__ = None\n    children: Child\n```\n\nIt's important that `@dataclass` be the *last* decorator, i.e. the closest to the class definition (and so the first to be applied). Luckily, only the root class you intend to pass to `load`/`dump` has to inherit from `XmlDataclass`, but all classes should have the `@dataclass` decorator applied.\n\n### Whitespace and comments\n\nIf you are able to, it is strongly recommended you strip whitespace and comments from the input via `lxml`:\n\n```python\nparser = etree.XMLParser(remove_blank_text=True, remove_comments=True)\n```\n\nBy default, `lxml` preserves whitespace. This can cause a problem when checking if elements have no text. The library does attempt to strip these; literally via Python's `strip()`. But `lxml` is likely faster and more robust.\n\nSimilarly, comments are included by default, and because loading is strict, they will be considered as nodes that the dataclass has not declared. It is recommended to omit them during parsing.\n\n### Optional vs required\n\nOn dataclasses, optional fields also usually have a default value to be useful. But this isn't required; `Optional` is just a type hint to say `None` is allowed. This would occur e.g. if an element has no children.\n\nFor loading XML dataclasses, whether or not a field is required is determined by if it has a `default`/`default_factory` defined. If so, and it's missing, that default is used. Otherwise, an error is raised.\n\nFor dumping, the default isn't considered. Instead, if a value is marked as `Optional` and the value is `None`, it isn't written.\n\nThis makes sense in many cases, but possibly not every case.\n\n## Changelog\n\n### [0.0.9] - 2022-02-10\n\n* Fix issue passing options when loading children - thanks [tim-lansen](https://github.com/tim-lansen)!\n\n### [0.0.7] and [0.0.8] - 2021-04-08\n\n* Warn if comments are found/don't treat comments as child elements in error messages\n* Allow lenient loading of undeclared attributes or children\n\n### [0.0.6] - 2020-03-25\n\n* Allow ignored fields via `init=false` or the `ignored` function\n\n### [0.0.5] - 2020-02-18\n\n* Fixed type hinting for consumers. While the library passed mypy validation, it was hard to get XML dataclasses in a codebase to pass mypy validation\n\n### [0.0.4] - 2020-02-16\n\n* Improved type resolving. This lead to easier field definitions, as `attr` and `child` are no longer needed because the type of the field is inferred\n\n### [0.0.3] - 2020-02-16\n\n* Added support for union types on children\n\n## Development\n\nThis project uses [pre-commit](https://pre-commit.com/) to run some linting hooks when committing. When you first clone the repo, please run:\n\n```\npre-commit install\n```\n\nYou may also run the hooks at any time:\n\n```\npre-commit run --all-files\n```\n\nDependencies are managed via [poetry](https://python-poetry.org/). To install all dependencies, use:\n\n```\npoetry install\n```\n\nThis will also install development dependencies such as `black`, `isort`, `pylint`, `mypy`, and `pytest`. Pre-defined tasks make it easy to run these, for example\n\n* `poetry run task lint` - this runs `black`, `isort`, `mypy`, and `pylint`\n* `poetry run task test` - this runs `pytest` with coverage\n\nFor a full list of tasks, see `poetry run task --list`.\n\n## License\n\nThis library is licensed under the Mozilla Public License Version 2.0. For more information, see `LICENSE`.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tobywf/xml_dataclasses",
    "keywords": "",
    "license": "MPL-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "xml-dataclasses",
    "package_url": "https://pypi.org/project/xml-dataclasses/",
    "platform": "",
    "project_url": "https://pypi.org/project/xml-dataclasses/",
    "project_urls": {
      "Homepage": "https://github.com/tobywf/xml_dataclasses"
    },
    "release_url": "https://pypi.org/project/xml-dataclasses/0.0.9/",
    "requires_dist": [
      "lxml (>=4.6.3,<5.0.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "(De)serialize XML documents into specially-annotated dataclasses",
    "version": "0.0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12854059,
  "releases": {
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f22600503e04e3fc310f941dadd8249d2079e490d147f9b1c821e1813e47095b",
          "md5": "f8a2e6f64b9789c7a11f6796317d1c38",
          "sha256": "8882aedaf5b27f6afee8dc681c671bb05b48321d68e15de76862810132810d39"
        },
        "downloads": -1,
        "filename": "xml_dataclasses-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f8a2e6f64b9789c7a11f6796317d1c38",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 16776,
        "upload_time": "2020-02-19T03:10:11",
        "upload_time_iso_8601": "2020-02-19T03:10:11.305097Z",
        "url": "https://files.pythonhosted.org/packages/f2/26/00503e04e3fc310f941dadd8249d2079e490d147f9b1c821e1813e47095b/xml_dataclasses-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "753216bd79604898b4d62653c34e23768139ba4908cfaaf203b26f18e58b3ac5",
          "md5": "d6dea35a4a81bc8d4ead446ae63a8177",
          "sha256": "4ed8d88f3e8a0ada440aada8ac5c0ccf7a60953a42121f19642a9c353cf5c96e"
        },
        "downloads": -1,
        "filename": "xml_dataclasses-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d6dea35a4a81bc8d4ead446ae63a8177",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 19083,
        "upload_time": "2020-02-19T03:10:13",
        "upload_time_iso_8601": "2020-02-19T03:10:13.462783Z",
        "url": "https://files.pythonhosted.org/packages/75/32/16bd79604898b4d62653c34e23768139ba4908cfaaf203b26f18e58b3ac5/xml_dataclasses-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4dd37ffa98a4792fdb961330dca56575efac15be12e574fd91fe15bd6587ac5",
          "md5": "5da3a2aa9674c4eacd54f0b4c898f84f",
          "sha256": "ef9fba0ab7b87275c379683e12dbb9f2140e1be9bc04261e85961a258e626348"
        },
        "downloads": -1,
        "filename": "xml_dataclasses-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5da3a2aa9674c4eacd54f0b4c898f84f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 17535,
        "upload_time": "2020-02-19T05:51:06",
        "upload_time_iso_8601": "2020-02-19T05:51:06.529383Z",
        "url": "https://files.pythonhosted.org/packages/c4/dd/37ffa98a4792fdb961330dca56575efac15be12e574fd91fe15bd6587ac5/xml_dataclasses-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4070aa6c4105332a8fb96baa0f7ff630cfcd9c73a53d6e51367ab06819c3c11b",
          "md5": "55e733ef59a028adc8634d5223206c62",
          "sha256": "44e82e1f1081aaba5c59daf0e85bb3fed70e64dad73f0fbf3fa74f4b24f9ef65"
        },
        "downloads": -1,
        "filename": "xml_dataclasses-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "55e733ef59a028adc8634d5223206c62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 20184,
        "upload_time": "2020-02-19T05:51:07",
        "upload_time_iso_8601": "2020-02-19T05:51:07.632291Z",
        "url": "https://files.pythonhosted.org/packages/40/70/aa6c4105332a8fb96baa0f7ff630cfcd9c73a53d6e51367ab06819c3c11b/xml_dataclasses-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9861bb970a9b66bcf27f04cd3e84f7e597bdffa2ff08555de3e27127d3bf9311",
          "md5": "6fc6af8ebede5beb9d7393d792aaeaa8",
          "sha256": "e556b880f74420f47db82de15ce667451fdd69295274b00cc25e287c54b9ae3f"
        },
        "downloads": -1,
        "filename": "xml_dataclasses-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6fc6af8ebede5beb9d7393d792aaeaa8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 18011,
        "upload_time": "2020-03-26T03:42:16",
        "upload_time_iso_8601": "2020-03-26T03:42:16.976939Z",
        "url": "https://files.pythonhosted.org/packages/98/61/bb970a9b66bcf27f04cd3e84f7e597bdffa2ff08555de3e27127d3bf9311/xml_dataclasses-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "951bcc8b28b0359ab7d4a5b139570258d9189c54b553cd109aab2ff734d2db2d",
          "md5": "cb630346d4fe0cb5a76d4e1ee77c01a2",
          "sha256": "9970d977ca7bf5cc4e7d7802a6e424bc561ead2ab0ba3998a78d907fb5a79a0f"
        },
        "downloads": -1,
        "filename": "xml_dataclasses-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "cb630346d4fe0cb5a76d4e1ee77c01a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 21139,
        "upload_time": "2020-03-26T03:42:18",
        "upload_time_iso_8601": "2020-03-26T03:42:18.293305Z",
        "url": "https://files.pythonhosted.org/packages/95/1b/cc8b28b0359ab7d4a5b139570258d9189c54b553cd109aab2ff734d2db2d/xml_dataclasses-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45ec95170bc253a6f66985f023af4404d4725d9730cefd7a84c2c767f47baef1",
          "md5": "d2ee4d5fdc9397395a6617996e308bbe",
          "sha256": "1232b8894c7ed80006f0974ca992de5280f541984fc083ef1fac57b68bbe8331"
        },
        "downloads": -1,
        "filename": "xml_dataclasses-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d2ee4d5fdc9397395a6617996e308bbe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 18553,
        "upload_time": "2021-04-09T03:24:48",
        "upload_time_iso_8601": "2021-04-09T03:24:48.757657Z",
        "url": "https://files.pythonhosted.org/packages/45/ec/95170bc253a6f66985f023af4404d4725d9730cefd7a84c2c767f47baef1/xml_dataclasses-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7d94b596393f260b47ded8f37e641cfba104800baa8780968ac1a1565b86ba5",
          "md5": "4cbb17011713efb1e7d92c48721c41be",
          "sha256": "0710d45b2bc4d8d604a3b0f1224ce951685c39edd81a2f45f0a5c20190dc53c7"
        },
        "downloads": -1,
        "filename": "xml_dataclasses-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "4cbb17011713efb1e7d92c48721c41be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 21908,
        "upload_time": "2021-04-09T03:24:49",
        "upload_time_iso_8601": "2021-04-09T03:24:49.720044Z",
        "url": "https://files.pythonhosted.org/packages/f7/d9/4b596393f260b47ded8f37e641cfba104800baa8780968ac1a1565b86ba5/xml_dataclasses-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51ef6c849d8c8a6e1762f7f2bc5ce5329513971cb8e865ffac2ce4c7eeac96a0",
          "md5": "ea367b4bdf71672b8f3f636dee0effb1",
          "sha256": "49e64408f2c3880c1510d9f12dab3218ffcdcd6e134d52d5acf2d6ace88e9c02"
        },
        "downloads": -1,
        "filename": "xml_dataclasses-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea367b4bdf71672b8f3f636dee0effb1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 18655,
        "upload_time": "2022-02-10T20:18:23",
        "upload_time_iso_8601": "2022-02-10T20:18:23.604328Z",
        "url": "https://files.pythonhosted.org/packages/51/ef/6c849d8c8a6e1762f7f2bc5ce5329513971cb8e865ffac2ce4c7eeac96a0/xml_dataclasses-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b70393eaf894ebabe9fed9f0266d4ea358dc6974aa25dc282b8d0ffde734f012",
          "md5": "9d2c7dc5299c6c523927c324d980194b",
          "sha256": "44954deb251bf5f29b3c2c31a1b981048ad1c70e24ab0c9e3161fe97f9638d7f"
        },
        "downloads": -1,
        "filename": "xml_dataclasses-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "9d2c7dc5299c6c523927c324d980194b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 22070,
        "upload_time": "2022-02-10T20:18:24",
        "upload_time_iso_8601": "2022-02-10T20:18:24.652751Z",
        "url": "https://files.pythonhosted.org/packages/b7/03/93eaf894ebabe9fed9f0266d4ea358dc6974aa25dc282b8d0ffde734f012/xml_dataclasses-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "51ef6c849d8c8a6e1762f7f2bc5ce5329513971cb8e865ffac2ce4c7eeac96a0",
        "md5": "ea367b4bdf71672b8f3f636dee0effb1",
        "sha256": "49e64408f2c3880c1510d9f12dab3218ffcdcd6e134d52d5acf2d6ace88e9c02"
      },
      "downloads": -1,
      "filename": "xml_dataclasses-0.0.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ea367b4bdf71672b8f3f636dee0effb1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 18655,
      "upload_time": "2022-02-10T20:18:23",
      "upload_time_iso_8601": "2022-02-10T20:18:23.604328Z",
      "url": "https://files.pythonhosted.org/packages/51/ef/6c849d8c8a6e1762f7f2bc5ce5329513971cb8e865ffac2ce4c7eeac96a0/xml_dataclasses-0.0.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b70393eaf894ebabe9fed9f0266d4ea358dc6974aa25dc282b8d0ffde734f012",
        "md5": "9d2c7dc5299c6c523927c324d980194b",
        "sha256": "44954deb251bf5f29b3c2c31a1b981048ad1c70e24ab0c9e3161fe97f9638d7f"
      },
      "downloads": -1,
      "filename": "xml_dataclasses-0.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "9d2c7dc5299c6c523927c324d980194b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 22070,
      "upload_time": "2022-02-10T20:18:24",
      "upload_time_iso_8601": "2022-02-10T20:18:24.652751Z",
      "url": "https://files.pythonhosted.org/packages/b7/03/93eaf894ebabe9fed9f0266d4ea358dc6974aa25dc282b8d0ffde734f012/xml_dataclasses-0.0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}