{
  "info": {
    "author": "fadedness",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "Galaxy Online Battle Simulation\n========\n# Introduction\nThis module was made for simulation of different battles in the online space strategy game Galaxy Online.\n\nYou can use this module to analize your possibilities, casualties, costs, etc; you can find possible good counters to incoming attacks on you.\n\nThere is a GUI version of Game Calculator: https://github.com/fadedness/Galaxy-Online-Battle-Calculator\nand you would probably prefer it over text command line.\n\n# install and usage\n```\npython -m pip install galaxy-online-battle-simulation\n```\n\nTo use it either run python -m battlesimulation for interactive mode with menu\nor import it in your script and use Context class:\n```\npython -m battlesimulation\n```\n```\nfrom battlesimulation import Context\ncontext = Context()\n# hints what to do\ncontext.help()\n# lists of Game objects with ids and params\ncontext.help_game_parameters()\n```\n\n# Detailed usage and description\nFleet 1 is considered always attacking the Fleet 2, which is defending Planet's surface. Fleet 3 is blockading or supporting Planet.\nIf you want a Space Battle just use default (empty) Planet and Fleet 1 and 2.\n\nEvery Fleet can have different Modules; Planet can have different Buildings on it and Rockets in its Turrets that will fire at attacking Spaceships.\n\nAccuracy of Spaceships in Game is random (from 80% to 100%),\nbut you can calculate min and max amounts of Spaceships that could be destroyed in actual Game.\n\nLet's see what game situations this module can handle.\n\nFirst of all you need to import and instantiate Context class:\n```\nfrom battlesimulation import Context\ncontext = Context()\n```\n\n### 1. You have an incoming attack and you what to know how you could counter that.\n```\n# add those attacker's spaceships to Fleet 2\ncontext.add_%spaceshipname_to_fleet_2(quantity)\n# add module for attacker if it has any\ncontext.set_fleet_2_module_by_id_and_level(id, level)\n# add module for your Fleet if you plan to use it\ncontext.set_fleet_1_module_by_id_and_level(id, level)\n# and run simulation\ncontext.simulate()\n```\nYou will get results sorted and printed in casualties' cost and build time ascending order.\nIt only suggests single spaceship Fleet, five battle spaceships - five results.\nActually ten results. 5 for minimum you need to counter and five for lowering your casualties' with game's Superiority mechanic\n(the more spaceships you send, the less will be destoyed).\n\nBecause in this situation you are going to counter-attack, you don't need to change Fleet's default attacking flag.\nBut if you want to defend passively, you would need to call:\n```\ncontext.set_fleet_1_attacking(False)\ncontext.set_fleet_2_attacking(True)\n```\nWhat does that do? Game uses Priorities to calculate which Spaceships will receive more damage.\nAnd When you're defending certain Spaceships (Valkyrie) have lower priority and thus recieve less damage.\n\n### 2. You have a battle log that looks unrealistic to you (the Game is in Beta, so errors can occur). You can simulate it with module and get possible min and max results. And compare log with these ranges.\n```\n# add all spaceships to corresponding Fleets\ncontext.add_%spaceshipname_to_fleet_1(quantity)\ncontext.add_%spaceshipname_to_fleet_2(quantity)\n\n# set Modules (if any) and right priorities\ncontext.set_fleet_1_module_by_id_and_level(id, level)\ncontext.set_fleet_2_module_by_id_and_level(id, level)\ncontext.set_fleet_1_attacking(False)\ncontext.set_fleet_2_attacking(True)\n\n# set planet if it was involved with Turrets passive or active (Rockets) damage,\n# if not, skip it\n# sizes: 0 - 3 Mines, 1 - 4 Mines, 2 - 5 Mines\n# type and size define Turrets passive damage\ncontext.set_planet(type in [1,2,3,4,5,6,7], size in [0,1,2], sum_of_all_turrets_levels)\n\n# for example the Planet in Game is:\n# Chromium with 4 Mines, Turret buildings: 20, 20, 19, 19\ncontext.set_planet(4, 1, 78)\n\n# add Rockets (if any were involved)\ncontext.add_rocket(id, quantity)\n\n# set Fleets' accuracy type to range_max or range_min (doesn't matter)\ncontext.set_fleet_1_acc_type(\"range_max\")\ncontext.set_fleet_2_acc_type(\"range_max\")\n\n# and run simulation\ncontext.simulate()\n# the results will be printed\n```\n\nYou can directly access objects for results:\n```\ncontext._fleet_1\ncontext._fleet_2\ncontext._fleet_3\ncontext._planet\ncontext._planet.rockets\ncontext._planet.buildings\n# for example\ncontext._fleet_1.fleet_alive #(property, returns dict, {spaceship_id_1: quantity_1, ...}\n# and for range_max or range_min\n# a new Context is created inside main one for additional simulation\ncontext.context_branch\n# and it's the same in terms of access\ncontext.context_branch._fleet_1\n```\nAll Game objects can be printed:\n```\nprint(context._fleet_1)\n# or can even have filtered string (for non-zero quantity, for example)\nprint(context._fleet_1.filtered_alive_str)\nprint(context._planet.filtered_str_full)\n```\n### 3. You can set Planet with Buildings (Shield Generator is the main defense) and get the number of Valkyries needed to destroy them and the number of Valkyries that will be destroyed by defenses.\n\nAlthough this Bombardment mechanic is going to be changed with newer one, it is still here.\n\n### 4. You can simulate two consecutive battles with Fleets, when Fleet 3 is stationary around the Planet.\nFor both just simulations or finding a possible good counter to both Fleets (2 and 3) at once.\n\nFleet 3 could be a third player's blockade around the Planet or Planet owner's ally's Support.\n\n## Game Objects\n### Spaceships:\nid - name\n1. Hercules\n2. Loki\n3. Raptor\n4. Hornet\n5. Javelin\n6. Excalibur\n7. Valkyrie\n8. Titan\n9. Abaddon\n\n### Rockets:\nid - name\n1. Sticks-XL\n2. Cobra-M1\n3. Aurora\n4. X-Ray\n\n### Buildings:\nid - name\n1. Command Center\n2. Mine\n3. Warehouse\n4. Trade Office\n5. Cosmodrome\n6. Spacecraft Plant\n7. Power Plant\n8. Detection Station\n9. Missile Turret\n10. Shield Generator\n\n### Modules:\nid - name\n1. Disintegrator\n2. Afterburner\n3. Shield Booster\n4. Complex Bastion\n5. Complex Luch\n6. Complex Halo\n7. Complex Guardian\n8. Satellite Solarium\n9. Satellite Energy\n10. Complex Boarding\n\nOnce again:\n```\n# lists of Game objects with ids and params\ncontext.help_game_parameters()\n```\nOr use Game guides on website.\n\n# Game data\nThere is a file data.json in this repo. It is not used by module, it is left for reference and for advanced usage.\n\nAll data is hardcoded in components/config.py.\n\nBut instead of editing config.py, one can edit that data.json, load it via json and pass to:\n```\nimport json\nwith open(\"/path/to/data.json\", \"r\") as f:\n\tloaded_data = json.load(f)\nbattlesimulation.load_global_game_parameters(loaded_data)\n```\nIf the data is valid it will be loaded and used in this module.\n\n# Conclusion\nThere are many things you can set and do, but I'm not going to document it here, sorry.\nMainly because I have a GUI version.\n\nAlmost all functions have doc strings with some explanations.\n\n# licence\nMIT License\n\n# contact\nYou can contact me via telegram https://t.me/fadedness\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "galaxy,online,battle,simulation",
    "license": "=?utf-8?q?The_MIT_License_=28MIT=29?= =?utf-8?q?_Copyright_=C2=A9_2022_fadedness_https=3A//t=2Eme/fadedness?= =?utf-8?q?_?= =?utf-8?q?_Permission_is_hereby_granted=2C_free_of_charge=2C_to_any_person_obtaining_a_copy_of_this_software_and_associated_documentation_files_=28the_=E2=80=9CSoftware=E2=80=9D=29=2C_to_deal_in_the_Software_without_restriction=2C_including_without_limitation_the_rights_to_use=2C_copy=2C_modify=2C_merge=2C_publish=2C_distribute=2C_sublicense=2C_and/or_sell_copies_of_the_Software=2C_and_to_permit_persons_to_whom_the_Software_is_furnished_to_do_so=2C_subject_to_the_following_conditions=3A?= =?utf-8?q?_?= =?utf-8?q?_The_above_copyright_notice_and_this_permission_notice_shall_be_included_in_all_copies_or_substantial_portions_of_the_Software=2E?= =?utf-8?q?_?= =?utf-8?q?_THE_SOFTWARE_IS_PROVIDED_=E2=80=9CAS_IS=E2=80=9D=2C_WITHOUT_WARRANTY_OF_ANY_KIND=2C_EXPRESS_OR_IMPLIED=2C_INCLUDING_BUT_NOT_LIMITED_TO_THE_WARRANTIES_OF_MERCHANTABILITY=2C_FITNESS_FOR_A_PARTICULAR_PURPOSE_AND_NONINFRINGEMENT=2E_IN_NO_EVENT_SHALL_THE_AUTHORS_OR_COPYRIGHT_HOLDERS_BE_LIABLE_FOR_ANY_CLAIM=2C_DAMAGES_OR_OTHER_LIABILITY=2C_WHETHER_IN_AN_ACTION_OF_CONTRACT=2C_TORT_OR_OTHERWISE=2C_ARISING_FROM=2C_OUT_OF_OR_IN_CONNECTION_WITH_THE_SOFTWARE_OR_THE_USE_OR_OTHER_DEALINGS_IN_THE_SOFTWARE=2E?= =?utf-8?q?_?=",
    "maintainer": "",
    "maintainer_email": "",
    "name": "galaxy-online-battle-simulation",
    "package_url": "https://pypi.org/project/galaxy-online-battle-simulation/",
    "platform": null,
    "project_url": "https://pypi.org/project/galaxy-online-battle-simulation/",
    "project_urls": {
      "Homepage": "https://github.com/fadedness/galaxy-online-battle-simulation"
    },
    "release_url": "https://pypi.org/project/galaxy-online-battle-simulation/1.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Module for simulation of different battles in the online space strategy game Galaxy Online.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15709482,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e82aa271abc7ef85175bd36bb42dbe91c2f4ddb239b3cfe3ec96421b93936435",
          "md5": "a9da34fc4c17b04c7b769185fdcce243",
          "sha256": "9fa9243b48ea55f2c7d0cfc72bd413e5c0cc8041d558c487b04b083a601060d9"
        },
        "downloads": -1,
        "filename": "galaxy_online_battle_simulation-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a9da34fc4c17b04c7b769185fdcce243",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 72465,
        "upload_time": "2022-10-25T14:31:12",
        "upload_time_iso_8601": "2022-10-25T14:31:12.002324Z",
        "url": "https://files.pythonhosted.org/packages/e8/2a/a271abc7ef85175bd36bb42dbe91c2f4ddb239b3cfe3ec96421b93936435/galaxy_online_battle_simulation-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37396856a049c5316865c1728536633fb575dcfeae0e4b1135674b86bc090358",
          "md5": "a0e1b3ff90d47637de640d6f6f5b60bd",
          "sha256": "3d59a58a8e2110ea5df94209d05079f79cb8d2f839998e8a4fef2bf314506328"
        },
        "downloads": -1,
        "filename": "galaxy-online-battle-simulation-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a0e1b3ff90d47637de640d6f6f5b60bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 66344,
        "upload_time": "2022-10-25T14:31:14",
        "upload_time_iso_8601": "2022-10-25T14:31:14.570508Z",
        "url": "https://files.pythonhosted.org/packages/37/39/6856a049c5316865c1728536633fb575dcfeae0e4b1135674b86bc090358/galaxy-online-battle-simulation-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "487f2d8993f922c8c53a640900e420c9ba06822d76ff6aea2c97704e13ca121b",
          "md5": "626896f593a6d8b2d3632d6658a9f96a",
          "sha256": "0262659a9b26fbed9b78591c4b7d174c4a015878321c7867794493edca927fa6"
        },
        "downloads": -1,
        "filename": "galaxy_online_battle_simulation-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "626896f593a6d8b2d3632d6658a9f96a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 74250,
        "upload_time": "2022-11-09T09:26:04",
        "upload_time_iso_8601": "2022-11-09T09:26:04.879905Z",
        "url": "https://files.pythonhosted.org/packages/48/7f/2d8993f922c8c53a640900e420c9ba06822d76ff6aea2c97704e13ca121b/galaxy_online_battle_simulation-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "135f2268b8b12b41e2d0fac567610fd0cc1e1334f3ab304ea8dbca8dfe99b7e4",
          "md5": "faf2350d44fe3de7796e575d199f7923",
          "sha256": "865ed83f19fcc0cf066aef3b823286a4d5fa3a75de476a6b0d173a3aede85c79"
        },
        "downloads": -1,
        "filename": "galaxy-online-battle-simulation-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "faf2350d44fe3de7796e575d199f7923",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 68116,
        "upload_time": "2022-11-09T09:26:13",
        "upload_time_iso_8601": "2022-11-09T09:26:13.150292Z",
        "url": "https://files.pythonhosted.org/packages/13/5f/2268b8b12b41e2d0fac567610fd0cc1e1334f3ab304ea8dbca8dfe99b7e4/galaxy-online-battle-simulation-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "487f2d8993f922c8c53a640900e420c9ba06822d76ff6aea2c97704e13ca121b",
        "md5": "626896f593a6d8b2d3632d6658a9f96a",
        "sha256": "0262659a9b26fbed9b78591c4b7d174c4a015878321c7867794493edca927fa6"
      },
      "downloads": -1,
      "filename": "galaxy_online_battle_simulation-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "626896f593a6d8b2d3632d6658a9f96a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 74250,
      "upload_time": "2022-11-09T09:26:04",
      "upload_time_iso_8601": "2022-11-09T09:26:04.879905Z",
      "url": "https://files.pythonhosted.org/packages/48/7f/2d8993f922c8c53a640900e420c9ba06822d76ff6aea2c97704e13ca121b/galaxy_online_battle_simulation-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "135f2268b8b12b41e2d0fac567610fd0cc1e1334f3ab304ea8dbca8dfe99b7e4",
        "md5": "faf2350d44fe3de7796e575d199f7923",
        "sha256": "865ed83f19fcc0cf066aef3b823286a4d5fa3a75de476a6b0d173a3aede85c79"
      },
      "downloads": -1,
      "filename": "galaxy-online-battle-simulation-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "faf2350d44fe3de7796e575d199f7923",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 68116,
      "upload_time": "2022-11-09T09:26:13",
      "upload_time_iso_8601": "2022-11-09T09:26:13.150292Z",
      "url": "https://files.pythonhosted.org/packages/13/5f/2268b8b12b41e2d0fac567610fd0cc1e1334f3ab304ea8dbca8dfe99b7e4/galaxy-online-battle-simulation-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}