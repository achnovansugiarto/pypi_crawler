{
  "info": {
    "author": "Cassandra Dacha",
    "author_email": "cassie.dacha@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "==============================\nPatient Ward Automation_System\n==============================\n\n\n.. image:: https://img.shields.io/pypi/v/Automation.svg\n        :target: https://pypi.python.org/pypi/Automation\n\n.. image:: https://img.shields.io/travis/CassandraDacha/Automation.svg\n        :target: https://travis-ci.com/CassandraDacha/Automation\n\n.. image:: https://readthedocs.org/projects/wardautomation/badge/?version=main\n        :target: https://wardautomation.readthedocs.io/en/latest/?badge=main\n        :alt: Documentation Status\n\n* Github repo: Automation\n* Free software: MIT license\n* Documentation: https://wardautomation.readthedocs.io.\n\nPatient ward automation system. This automation system  will allow patients to be able to control\nthe temperature, lighting, TV settings and the door of the ward they are in using a user-friendly\nweb application on their phone.\nThe hardware used is a combination of Raspberry Pi ,a Relay Module, a light bulb, A motor to represent the door and a fan.\n\n\nFeatures\n--------\n\nThe following features were used for this project. I have attached the links to the specific devices\n\n* RPI Zero       https://za.rs-online.com/web/p/raspberry-pi/1812039/\n* Relay Module   https://za.rs-online.com/web/p/power-motor-robotics-development-tools/1845099//\n* Light Bulb     Any light bulb\n* Axial fan      https://za.rs-online.com/web/p/axial-fans/6688808/\n* DC motor       https://za.rs-online.com/web/p/dc-motors/2389715/\n\nInstallation\n-------------\nRead the installation process from the Documentation link above.\n\nAfter completing the connections, you need to download the requirements.txt file from  the Automation folder and install the requirements using the following command.\n\n   $ pip3 install -r requirements.txt\n\nNote that this command is dependant on the python version. The Python version used in this project was Python 3.8.5.\n\n\nTesting\n--------\nTo test the API use the following command.\n\n   $ python3 Automation.py\n\nCredits\n-------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n\n=======\nHistory\n=======\n\n0.1.0 (2020-09-10)\n------------------\n\n* First release on PyPI.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/CassandraDacha/Automation/archive/v_01.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CassandraDacha/Automation",
    "keywords": "Automation",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Patient-Ward-Automation",
    "package_url": "https://pypi.org/project/Patient-Ward-Automation/",
    "platform": "",
    "project_url": "https://pypi.org/project/Patient-Ward-Automation/",
    "project_urls": {
      "Download": "https://github.com/CassandraDacha/Automation/archive/v_01.tar.gz",
      "Homepage": "https://github.com/CassandraDacha/Automation"
    },
    "release_url": "https://pypi.org/project/Patient-Ward-Automation/0.1.0/",
    "requires_dist": [
      "Click (>=7.0)"
    ],
    "requires_python": ">=3.5",
    "summary": "Python Boilerplate contains all the boilerplate you need to create a Python package.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8581968,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bb80bcf2ee9127658c384dce203e1717b3b6dc109a260edc2c4ff3ec612c954",
          "md5": "867cc5ea6dc8a9d447a872fc90ead91e",
          "sha256": "112ec05ee1e995b2358550d10957c311293a248b0d77c2c8d30500cfff5ac645"
        },
        "downloads": -1,
        "filename": "Patient_Ward_Automation-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "867cc5ea6dc8a9d447a872fc90ead91e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 6195,
        "upload_time": "2020-11-04T22:03:03",
        "upload_time_iso_8601": "2020-11-04T22:03:03.627454Z",
        "url": "https://files.pythonhosted.org/packages/8b/b8/0bcf2ee9127658c384dce203e1717b3b6dc109a260edc2c4ff3ec612c954/Patient_Ward_Automation-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16a2a5996327db537b4cda49aa12e7e03098449b161b25f6d7038db194a544b9",
          "md5": "d911daead7a6f67a1f076831e109684e",
          "sha256": "c2a2d0c31b1ed2f313b6326079a4a87f65a0063e2bc2ccb80158d69d68a0ac7c"
        },
        "downloads": -1,
        "filename": "Patient_Ward_Automation-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d911daead7a6f67a1f076831e109684e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 11237,
        "upload_time": "2020-11-04T22:03:06",
        "upload_time_iso_8601": "2020-11-04T22:03:06.660169Z",
        "url": "https://files.pythonhosted.org/packages/16/a2/a5996327db537b4cda49aa12e7e03098449b161b25f6d7038db194a544b9/Patient_Ward_Automation-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8bb80bcf2ee9127658c384dce203e1717b3b6dc109a260edc2c4ff3ec612c954",
        "md5": "867cc5ea6dc8a9d447a872fc90ead91e",
        "sha256": "112ec05ee1e995b2358550d10957c311293a248b0d77c2c8d30500cfff5ac645"
      },
      "downloads": -1,
      "filename": "Patient_Ward_Automation-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "867cc5ea6dc8a9d447a872fc90ead91e",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.5",
      "size": 6195,
      "upload_time": "2020-11-04T22:03:03",
      "upload_time_iso_8601": "2020-11-04T22:03:03.627454Z",
      "url": "https://files.pythonhosted.org/packages/8b/b8/0bcf2ee9127658c384dce203e1717b3b6dc109a260edc2c4ff3ec612c954/Patient_Ward_Automation-0.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "16a2a5996327db537b4cda49aa12e7e03098449b161b25f6d7038db194a544b9",
        "md5": "d911daead7a6f67a1f076831e109684e",
        "sha256": "c2a2d0c31b1ed2f313b6326079a4a87f65a0063e2bc2ccb80158d69d68a0ac7c"
      },
      "downloads": -1,
      "filename": "Patient_Ward_Automation-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d911daead7a6f67a1f076831e109684e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 11237,
      "upload_time": "2020-11-04T22:03:06",
      "upload_time_iso_8601": "2020-11-04T22:03:06.660169Z",
      "url": "https://files.pythonhosted.org/packages/16/a2/a5996327db537b4cda49aa12e7e03098449b161b25f6d7038db194a544b9/Patient_Ward_Automation-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}