{
  "info": {
    "author": "Aleksandr Khvorov",
    "author_email": "khvorov.aleksandr@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![PyPI version](https://badge.fury.io/py/pyvgram.svg)](https://badge.fury.io/py/pyvgram)\n[![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)](https://opensource.org/licenses/MIT)\n\n# pyvgram\n🍺 Python implementation on vgram tokenization\n\nVGram is a tokenizer construction algorithm that optimizes the code length of the text.\nIt can be used to tokenize text like BPE (Sennrich et al., 2016).\n\nRead more in our CIKM'18 paper [Construction of Efficient V-Gram Dictionary for Sequential Data Analysis](https://dl.acm.org/doi/10.1145/3269206.3271789).\n\n## Install\n```bash\npip install pyvgram\n```\n\n## Examples\n\n### 1. Quickstart\n\nLet's train tokenizer with size `10000` on `file.txt` content and encodes some string.\n\n```python\nfrom vgram import VGramTokenizer\n\ntokenizer = VGramTokenizer(10000)\ntokenizer.train(\"file.txt\")\nids = tokenizer.encode(\"hello world\")\n```\n\n`train` method used for training from file name or list of names. \nFor learning from string use `fit` method.\n\n### 2. Save and load\n\n```python\nfrom vgram import VGramTokenizer\n\ntokenizer = VGramTokenizer(10000)\ntokenizer.train([\"file1.txt\", \"file2.txt\"])\nids1 = tokenizer.encode(\"hello world\")\n\ntokenizer.save_pretrained(\"vgram.tokenizer\")\nloaded_tokenizer = VGramTokenizer.from_pretrained(\"vgram.tokenizer\")\nids2 = loaded_tokenizer.encode(\"hello world\")\n\nassert tokenizer == loaded_tokenizer\nassert ids1 == ids2\n```\n\n### 3. Learn from raw text\n\nYou can learn a tokenizer from raw text by `fit` method by passing string or list of strings.\n\n```python\nfrom vgram import VGramTokenizer\n\ntokenizer = VGramTokenizer(10000)\ntokenizer.fit(\" \".join([\"hello world\"] * 1000))\nids = tokenizer.encode(\"hello world\")\n```\n\nAlso, you can specify `iters` number if you want to learn more. \nBootstrap sampling is used in case of list of stings.\n\n```python\nfrom vgram import VGramTokenizer\n\ntokenizer = VGramTokenizer(10000)\ntokenizer.fit(\"hello world\", iters=1000))\nids = tokenizer.encode(\"hello world\")\n```\n\n### 4. Learn multiple times\n\nYou can learn a tokenizer on one dataset and then finetune on another \nby multiple calls of `fit` or `train` methods.\n\n```python\nfrom vgram import VGramTokenizer, SplitLevel\n\ntokenizer = VGramTokenizer(200, split_level=SplitLevel.NONE)\ntokenizer.fit([\"hello\", \"hello world\"], iters=10000))\nassert len(tokenizer.encode(\"hello world\")) == 1\nassert len(tokenizer.encode(\"pip install pyvgram\")) > 1\n\ntokenizer.fit(\"pip install pyvgram\", iters=10000))\nassert len(tokenizer.encode(\"hello world\")) > 1\nassert len(tokenizer.encode(\"pip install pyvgram\")) == 1\n```\n\nAfter finetuning `tokenizer.encode(\"hello world\")` codes by symbols \ninto `['h', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r', 'l', 'd']`  \nbecause in finetune dataset it's not meaningful sequence.\n\n### 5. Vocabulary\n\n```python\nfrom vgram import VGramTokenizer, SplitLevel\n\ntokenizer = VGramTokenizer(10000, split_level=SplitLevel.LINE)\ntokenizer.fit(\" \".join([\"hello world\"] * 1000))\nprint(\"Vocabulary:\", tokenizer.get_vocab())\n# Vocabulary: ['h', 'hello world', 'e', 'l', 'o', ' ', 'w', 'r', 'd', '\\n']\nprint(\"Vocab size:\", tokenizer.vocab_size())\n# Vocab size: 10\n```\n\n### 6. Learn with another split-level\n\nThe most of bpe-like tokenization libraries split one word to the pieces.\n`pyvgram` support different levels of splitting, \nso you can split whole line in to pieces which consist of few words if they are frequent enough.\nIt's useful for analyzing vocabulary to find patterns in data.\n\nDefault split-level is `WORD`, but you can also use `LINE` and `NONE`.\n```python\nfrom vgram import VGramTokenizer, SplitLevel\n\ntext = \"\\n\".join([\"hello world\"] * 10000)\n\ntokenizer = VGramTokenizer(200, split_level=SplitLevel.WORD)\ntokenizer.fit(text)\nprint(tokenizer.get_vocab())\n# ['h', 'hello', 'e', 'l', 'o', ' ', ' world', 'w', 'r', 'd', '\\n']\n\ntokenizer = VGramTokenizer(200, split_level=SplitLevel.LINE)\ntokenizer.fit(text)\nprint(tokenizer.get_vocab())\n# ['h', 'hello world', 'e', 'l', 'o', ' ', 'w', 'r', 'd', '\\n']\n```\n\n`SplitLevel.NONE` not split text and handle it like one sequence. \nIts bad idea to pass very few texts in such case, \nbut if you have many pre-splited texts, it's a good choice \n```python\nfrom vgram import VGramTokenizer, SplitLevel\n\ntexts = [\"hello world\"] * 10000\n\ntokenizer = VGramTokenizer(200, split_level=SplitLevel.NONE)\ntokenizer.fit(texts)\nprint(tokenizer.get_vocab())\n# ['h', 'hello world', 'e', 'l', 'o', ' ', 'w', 'r', 'd']\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/akhvorov/pyvgram",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyvgram",
    "package_url": "https://pypi.org/project/pyvgram/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyvgram/",
    "project_urls": {
      "Homepage": "https://github.com/akhvorov/pyvgram"
    },
    "release_url": "https://pypi.org/project/pyvgram/0.1.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "VGram tokenization",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11306921,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42069c5012f59d43158fbce340db21bb84aa43c26fd66a07774f2fbcca1e8cf1",
          "md5": "eb804483d864a36bd9bc0f256e81dbc0",
          "sha256": "1ab7bebcf0be660b209155851f5e7e10975478a256122222d517a79825e6d5ac"
        },
        "downloads": -1,
        "filename": "pyvgram-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb804483d864a36bd9bc0f256e81dbc0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13943,
        "upload_time": "2021-05-03T14:14:25",
        "upload_time_iso_8601": "2021-05-03T14:14:25.350425Z",
        "url": "https://files.pythonhosted.org/packages/42/06/9c5012f59d43158fbce340db21bb84aa43c26fd66a07774f2fbcca1e8cf1/pyvgram-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "964fe1d58a6b335e1baf72109b01fea1d8f8090ef0fbecfbf7ded57c70123a8c",
          "md5": "0b698694e83229e6744a1f93db7e80d7",
          "sha256": "05a2930e1ab1e09f8c59eedec53d97dc1e87b2cd927102a3e8f78389a0628191"
        },
        "downloads": -1,
        "filename": "pyvgram-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0b698694e83229e6744a1f93db7e80d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7977,
        "upload_time": "2021-05-03T14:14:28",
        "upload_time_iso_8601": "2021-05-03T14:14:28.426881Z",
        "url": "https://files.pythonhosted.org/packages/96/4f/e1d58a6b335e1baf72109b01fea1d8f8090ef0fbecfbf7ded57c70123a8c/pyvgram-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d79a01d5b7155288ee179020f38210f69f957712c72ef2531dd209acea248319",
          "md5": "1e599c87988a89f30a85b5f8e1e28adb",
          "sha256": "183b4c7dd3058944a49be74a1a04bd6567ce69b94b97a20875fc978c17150f66"
        },
        "downloads": -1,
        "filename": "pyvgram-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e599c87988a89f30a85b5f8e1e28adb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13943,
        "upload_time": "2021-05-03T14:14:27",
        "upload_time_iso_8601": "2021-05-03T14:14:27.292474Z",
        "url": "https://files.pythonhosted.org/packages/d7/9a/01d5b7155288ee179020f38210f69f957712c72ef2531dd209acea248319/pyvgram-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c61d5f835a00fb3483a1d2afb7831b82a65d1dfc6e16ac01d22edddbe7745dee",
          "md5": "a7c62d594d6a5eb044ffa58f8616564d",
          "sha256": "a73351b7d25d46365c3e2e633aee29c03195844053e84522fc57dfffc73777dc"
        },
        "downloads": -1,
        "filename": "pyvgram-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a7c62d594d6a5eb044ffa58f8616564d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7962,
        "upload_time": "2021-05-03T14:14:29",
        "upload_time_iso_8601": "2021-05-03T14:14:29.587848Z",
        "url": "https://files.pythonhosted.org/packages/c6/1d/5f835a00fb3483a1d2afb7831b82a65d1dfc6e16ac01d22edddbe7745dee/pyvgram-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b7b1ea19887e86a9a5b06e8de40b6b0496505a30cbbd9b568ad468007d9b44a",
          "md5": "63952913db8163f0d575ecbaa574deb9",
          "sha256": "69d617f49c4e579318daddc4f20e415af6ffef4fa85b3bb66215a251be0d8985"
        },
        "downloads": -1,
        "filename": "pyvgram-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "63952913db8163f0d575ecbaa574deb9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15818,
        "upload_time": "2021-05-05T14:01:44",
        "upload_time_iso_8601": "2021-05-05T14:01:44.666093Z",
        "url": "https://files.pythonhosted.org/packages/5b/7b/1ea19887e86a9a5b06e8de40b6b0496505a30cbbd9b568ad468007d9b44a/pyvgram-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8df94c32a7b4c4ebac7afe01042edf9541e5ffa45a0d446131ef785a7c102c6",
          "md5": "22eea6155c337f71be627cdaed9c72b3",
          "sha256": "ade21c4565e07ff9d61c6c64b1a9fa80ae002927d05c41b0fd853d9385bca6c0"
        },
        "downloads": -1,
        "filename": "pyvgram-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "22eea6155c337f71be627cdaed9c72b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9979,
        "upload_time": "2021-05-05T14:01:46",
        "upload_time_iso_8601": "2021-05-05T14:01:46.244499Z",
        "url": "https://files.pythonhosted.org/packages/b8/df/94c32a7b4c4ebac7afe01042edf9541e5ffa45a0d446131ef785a7c102c6/pyvgram-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59a4374dadf81cce5c4385d84992560821752f959edd4d0f8c7322a3cd21e63c",
          "md5": "782767c4fe34762710f344307a749e7d",
          "sha256": "ff0f8d5603fa489939497664186f699ca15640a08f384fdbb40ecf0013454c01"
        },
        "downloads": -1,
        "filename": "pyvgram-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "782767c4fe34762710f344307a749e7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17009,
        "upload_time": "2021-05-05T15:44:15",
        "upload_time_iso_8601": "2021-05-05T15:44:15.569776Z",
        "url": "https://files.pythonhosted.org/packages/59/a4/374dadf81cce5c4385d84992560821752f959edd4d0f8c7322a3cd21e63c/pyvgram-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "684e2123951ecfd8be9a8332ae8de8e34f9bdf08d891177947d5f7184f3f5cec",
          "md5": "fff2180c72cf070a426f7b297531a39c",
          "sha256": "dadda240d42ceac0c3ac94770a83d46443d7a5bb95fd0e6117da16bae4d7bc41"
        },
        "downloads": -1,
        "filename": "pyvgram-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fff2180c72cf070a426f7b297531a39c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10848,
        "upload_time": "2021-05-05T15:44:17",
        "upload_time_iso_8601": "2021-05-05T15:44:17.529859Z",
        "url": "https://files.pythonhosted.org/packages/68/4e/2123951ecfd8be9a8332ae8de8e34f9bdf08d891177947d5f7184f3f5cec/pyvgram-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f46b8e3fce68f9676b0adf96cd11119cbdf0b44750a2a71acfb391ecd7344962",
          "md5": "4913592d8db592a392ec0ccdfa738589",
          "sha256": "3473a79b7d5c948dc8b57270fc3e775e53bea34f2018892016991f14fd37f975"
        },
        "downloads": -1,
        "filename": "pyvgram-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4913592d8db592a392ec0ccdfa738589",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18492,
        "upload_time": "2021-08-29T13:33:53",
        "upload_time_iso_8601": "2021-08-29T13:33:53.866414Z",
        "url": "https://files.pythonhosted.org/packages/f4/6b/8e3fce68f9676b0adf96cd11119cbdf0b44750a2a71acfb391ecd7344962/pyvgram-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5a183e8edaf4e2633d7cce40045253973c3cad7ef7fa79a148976509cf71f01",
          "md5": "089f9b582aab7a6847c1e80d59ca1930",
          "sha256": "fda2b64eb1c74cc3b003b93a15b18e135a06925f7b974e36c3404b941de79ed5"
        },
        "downloads": -1,
        "filename": "pyvgram-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "089f9b582aab7a6847c1e80d59ca1930",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11286,
        "upload_time": "2021-08-29T13:33:55",
        "upload_time_iso_8601": "2021-08-29T13:33:55.732123Z",
        "url": "https://files.pythonhosted.org/packages/d5/a1/83e8edaf4e2633d7cce40045253973c3cad7ef7fa79a148976509cf71f01/pyvgram-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f46b8e3fce68f9676b0adf96cd11119cbdf0b44750a2a71acfb391ecd7344962",
        "md5": "4913592d8db592a392ec0ccdfa738589",
        "sha256": "3473a79b7d5c948dc8b57270fc3e775e53bea34f2018892016991f14fd37f975"
      },
      "downloads": -1,
      "filename": "pyvgram-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4913592d8db592a392ec0ccdfa738589",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 18492,
      "upload_time": "2021-08-29T13:33:53",
      "upload_time_iso_8601": "2021-08-29T13:33:53.866414Z",
      "url": "https://files.pythonhosted.org/packages/f4/6b/8e3fce68f9676b0adf96cd11119cbdf0b44750a2a71acfb391ecd7344962/pyvgram-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d5a183e8edaf4e2633d7cce40045253973c3cad7ef7fa79a148976509cf71f01",
        "md5": "089f9b582aab7a6847c1e80d59ca1930",
        "sha256": "fda2b64eb1c74cc3b003b93a15b18e135a06925f7b974e36c3404b941de79ed5"
      },
      "downloads": -1,
      "filename": "pyvgram-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "089f9b582aab7a6847c1e80d59ca1930",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11286,
      "upload_time": "2021-08-29T13:33:55",
      "upload_time_iso_8601": "2021-08-29T13:33:55.732123Z",
      "url": "https://files.pythonhosted.org/packages/d5/a1/83e8edaf4e2633d7cce40045253973c3cad7ef7fa79a148976509cf71f01/pyvgram-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}