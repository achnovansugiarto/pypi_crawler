{
  "info": {
    "author": "CorticoMetrics",
    "author_email": "ltirrell@corticometrics.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Python tools for Interoperable Neuromorphometry Reporting\nPython tools for Interoperable Neuromorphometry Reporting (`pinr`) allows for the creation of DICOM Structured Reporting Documents and FHIR Diagnostic Report resources from a T1w image processed by the [FreeSurfer](https://surfer.nmr.mgh.harvard.edu/) neuroimaging software suite.\n\nCurrently, only [`aseg.mgz`](http://surfer.nmr.mgh.harvard.edu/fswiki/SubcorticalSegmentation/) and `aseg.stats`  are supported and documented. Future versions may support other FreeSurfer segmentations and parcellations (such as thickness and volumes of different cortical regions).\n\nDICOM conversion uses the [highdicom](https://github.com/ImagingDataCommons/highdicom) package, and FHIR JSON files are created with [fhir.resources](https://github.com/nazrulworld/fhir.resources/tree/main).\n\nFor each label in the segmentation, a DICOM TID 300 \"Measurement\" object is created, and each Measurement is contained in a TID 1411 \"Volumetric ROI Measurements and Qualitative Evaluations\" object. The set of all labels are contained in a \"Imaging  Measurement Report\" object.\n\nFHIR output is in the form of a `DiagnosticReport` Resource, consisting of `Observation` Resources for each measurement. Specifically, each DICOM TID 300 object is mapped to a \"Imaging Measurement\" `Observation`, and each \"Imaging Measurement\" is contained within a \"Imaging Measurement Group\" `Observation` (analogous to a TID 1411 DICOM object). The \"Imaging Measurement Groups\" are contained within the `DiagnosticReport`.\n\nThe mapping of DICOM SR to FHIR Resource follows the work of the HL7 Imaging Interegration Work Group. Details are provided [here](https://github.com/HL7/dicom-sr), with architecture information provided within this [Implementation Guide](https://build.fhir.org/ig/HL7/dicom-sr/architecture.html).\n\nDICOM Segmentation images created by `pinr` are vieweable within [3D Slicer](https://www.slicer.org/) with the [QuantitativeReporting Extension](https://github.com/QIICR/QuantitativeReporting) installed:\n\n![3D Slicer: DICOM Seg](assets/slicer_dcm_seg.png)\n\n## Installation\n`pinr` has no external dependencies apart from Python >= 3.8.\nRun the following command for installation:\n```\npip install pinr\n```\n\n## Usage\n`pinr` provides both a Python and Command Line Interface (CLI)\n\n### CLI\nAn example command to produce all output is shown here:\n```\npinr \\\n  -i /path/to/file.dcm \\\n  -s /path/to/mri/aseg.mgz \\\n  -m /path/to/aseg.stats \\\n  --dcm-seg /path/to/aseg.seg.dcm \\\n  --dcm-sr /path/to/aseg.sr.dcm \\\n  --fhir /path/to/aseg.fhir.json \\\n```\n\nRun `pinr --help` for more options and information!\n\n# Python Library\n`pinr` exposes a class called `FreeSurferSeg`, which stores volumetric data and measurements.\n\n\nTo initiate:\n```python\nt1w_dicom_file = \"/path/to/file.dcm\"\naseg_file = \"/path/to/mri/aseg.mgz\"\naseg_stats_file = \"/path/to/aseg.stats\"\n# Choose where to save output files\ndicom_seg_output_file = \"/path/to/aseg.seg.dcm\"\ndicom_sr_output_file = \"/path/to/aseg.sr.dcm\"\nfhir_output_file = \"/path/to/aseg.fhir.json\"\n\naseg = FreeSurferSeg(\n    t1w_dicom_file=t1w_dicom_file,\n    aseg_file=aseg_file,\n    aseg_stats_file=aseg_stats_file,\n    dicom_seg_output_file=dicom_seg_output_file,\n    dicom_sr_output_file=dicom_sr_output_file,\n    fhir_output_file=fhir_output_file,\n)\n```\nData is stored as properties of the object, and is written to the given file name if one is provided.\n\n```python\nseg = aseg.seg\nsr = aseg.sr\nfhir = aseg.fhir\n```\n\n## Testing\nExample data is provided.\nAfter installation, clone the repo and cd into it.\nThe following command will produce outputs using the provided input files.\nThese can be compared against the existing output files\n```\npinr \\\n  -i ./tests/data/input/dicom/MR.1.3.12.2.1107.5.2.0.45074.2016081016110642184700287 \\\n  -s ./tests/data/input/aseg.mgz \\\n  -m ./tests/data/input/aseg.stats \\\n  --dcm-seg ./tests/data/output/aseg_new.seg.dcm \\\n  --dcm-sr ./tests/data/output/aseg_new.sr.dcm \\\n  --fhir ./tests/data/output/aseg_new.fhir.json\n```\n\n## Roadmap\n- Improve testing and add CI (in progress)\n- Incorporate feedback regarding architecture decisions of DICOM and FHIR outputs\n- Formal validation of outputs\n\n----\nWork here was supported by the National Institute Of Biomedical Imaging And Bioengineering of the National Institutes of Health under Award Number R43EB030910.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.org/project/pinr",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pinr",
    "package_url": "https://pypi.org/project/pinr/",
    "platform": null,
    "project_url": "https://pypi.org/project/pinr/",
    "project_urls": {
      "Documentation": "https://pinr.readthedocs.io",
      "Homepage": "https://pypi.org/project/pinr",
      "Repository": "https://github.com/ltirrell/pinr"
    },
    "release_url": "https://pypi.org/project/pinr/0.1.1/",
    "requires_dist": [
      "colormath (>=3.0.0,<4.0.0)",
      "dicom2nifti (>=2.4.7,<3.0.0)",
      "fhir-resources[all] (>=6.5.0,<7.0.0)",
      "highdicom (>=0.20.0,<0.21.0)",
      "pandas (>=1.5.2,<2.0.0)",
      "pydicom (>=2.3.1,<3.0.0)",
      "typer[all] (>=0.7.0,<0.8.0)",
      "nilearn (>=0.10.0,<0.11.0)",
      "nibabel (>=5.0.0,<6.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "Python tools for Interoperable Neuromorphometry Reporting",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16599482,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e51e6afd9634fd0af0609651c8246fd40a2714f9a7377c16c24e5d829d911c6d",
          "md5": "1cca9f89cf04c7607d127af0438baabb",
          "sha256": "e917ef90b71cc351945561bba694d9f254c76b5ef2917ea22d8f0208d778835f"
        },
        "downloads": -1,
        "filename": "pinr-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1cca9f89cf04c7607d127af0438baabb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 6439468,
        "upload_time": "2023-01-28T08:22:52",
        "upload_time_iso_8601": "2023-01-28T08:22:52.317022Z",
        "url": "https://files.pythonhosted.org/packages/e5/1e/6afd9634fd0af0609651c8246fd40a2714f9a7377c16c24e5d829d911c6d/pinr-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c2009c9aa0c1c8ffd40ef1bd39477d155ee0bc6d1e3e313cc544dd9fba5ad74",
          "md5": "c851c32fde65d83dfb12a180f2920778",
          "sha256": "b92abd97ef0ded0adadb0ac758a11733c46b18d128a29489688344a2f06d5b69"
        },
        "downloads": -1,
        "filename": "pinr-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c851c32fde65d83dfb12a180f2920778",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 6442987,
        "upload_time": "2023-01-28T08:22:57",
        "upload_time_iso_8601": "2023-01-28T08:22:57.187851Z",
        "url": "https://files.pythonhosted.org/packages/1c/20/09c9aa0c1c8ffd40ef1bd39477d155ee0bc6d1e3e313cc544dd9fba5ad74/pinr-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a53a54cf7b99aad09272513d28dfec9a31ba105074493aa1885be9adfcdffce",
          "md5": "e635140fcf62cfc76721ee89d76bafc6",
          "sha256": "d369562cdde412f8e882f5eec3a8d8e3fbc4fe628cd2c29b8b36b8addf63f068"
        },
        "downloads": -1,
        "filename": "pinr-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e635140fcf62cfc76721ee89d76bafc6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 15977,
        "upload_time": "2023-01-28T08:27:45",
        "upload_time_iso_8601": "2023-01-28T08:27:45.675182Z",
        "url": "https://files.pythonhosted.org/packages/9a/53/a54cf7b99aad09272513d28dfec9a31ba105074493aa1885be9adfcdffce/pinr-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f372e3aac5f9d66d8b62d07fc4e1282a06c70c01f395c0d74adda2dd1bb1bdd1",
          "md5": "9975c75bc3ea45fc09e6d00a64510998",
          "sha256": "33842e855b4e2f233200f2189720ca65d87fab5cfc07ed9a975e4d24862d764c"
        },
        "downloads": -1,
        "filename": "pinr-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9975c75bc3ea45fc09e6d00a64510998",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 17760,
        "upload_time": "2023-01-28T08:27:47",
        "upload_time_iso_8601": "2023-01-28T08:27:47.310180Z",
        "url": "https://files.pythonhosted.org/packages/f3/72/e3aac5f9d66d8b62d07fc4e1282a06c70c01f395c0d74adda2dd1bb1bdd1/pinr-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9a53a54cf7b99aad09272513d28dfec9a31ba105074493aa1885be9adfcdffce",
        "md5": "e635140fcf62cfc76721ee89d76bafc6",
        "sha256": "d369562cdde412f8e882f5eec3a8d8e3fbc4fe628cd2c29b8b36b8addf63f068"
      },
      "downloads": -1,
      "filename": "pinr-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e635140fcf62cfc76721ee89d76bafc6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 15977,
      "upload_time": "2023-01-28T08:27:45",
      "upload_time_iso_8601": "2023-01-28T08:27:45.675182Z",
      "url": "https://files.pythonhosted.org/packages/9a/53/a54cf7b99aad09272513d28dfec9a31ba105074493aa1885be9adfcdffce/pinr-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f372e3aac5f9d66d8b62d07fc4e1282a06c70c01f395c0d74adda2dd1bb1bdd1",
        "md5": "9975c75bc3ea45fc09e6d00a64510998",
        "sha256": "33842e855b4e2f233200f2189720ca65d87fab5cfc07ed9a975e4d24862d764c"
      },
      "downloads": -1,
      "filename": "pinr-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9975c75bc3ea45fc09e6d00a64510998",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 17760,
      "upload_time": "2023-01-28T08:27:47",
      "upload_time_iso_8601": "2023-01-28T08:27:47.310180Z",
      "url": "https://files.pythonhosted.org/packages/f3/72/e3aac5f9d66d8b62d07fc4e1282a06c70c01f395c0d74adda2dd1bb1bdd1/pinr-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}