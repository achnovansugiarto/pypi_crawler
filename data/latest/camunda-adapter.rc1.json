{
  "info": {
    "author": "BARS Group",
    "author_email": "bars@bars-open.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "Natural Language :: Russian",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# camunda-adapter\n\nПакет предоставляет адаптер к платформе Camunda для приложений на Python.\n\n## Установка\n\n```bash\n\n  $ pip install camunda-adapter\n\n```\n\n\n## Подключение и настройка\n\n\nСм. тестовое приложение src/testapp.\n\n\n### apps.py:\n\nИнстанцируется Config с параметрами конфигурации, затем инстанцируется Adapter.\n\nПри необходимости работы с внешними задачами, регистрируются обработчики задач путем подписки на соответствующие топики задач.\n\n\n\n```python\n\nfrom django.apps import AppConfig as AppConfigBase\n\nfrom camunda_adapter.adapters import Adapter\nfrom camunda_adapter.config import Config\n\n\nclass AppConfig(AppConfigBase):\n\n    name = __package__\n\n    def ready(self):\n        self._setup_bpmn()\n\n    def _setup_bpmn(self):\n        from testapp import core\n\n        from . import services\n\n        core.config = Config()\n        core.adapter = Adapter(core.config)\n\n        for topic, handler in (\n            (services.topic1, services.topic_handler1),\n            (services.topic2, services.topic_handler2),\n            (services.topicN, services.topic_handlerN),\n\n        ):\n            core.adapter.register_topic_handler(topic, handler)\n\n```\n\n\n### services.py:\n\n\n```python\n\nfrom camunda_adapter.domain import model as camunda\n\n\ntopic1 = camunda.Topic(name='topic-1')\ndef topic_handler1(task: camunda.ExternalTask, adapter: Adapter):\n    ...\n\n\ntopic2 = camunda.Topic(name='topic-2')\ndef topic_handler2(task: camunda.ExternalTask, adapter: Adapter):\n    ...\n\n\ntopicN = camunda.Topic(name='topic-N')\ndef topic_handlerN(task: camunda.ExternalTask, adapter: Adapter):\n    ...\n\n```\n\n### Примеры непосредственного обращения к адаптеру:\n\nОтправка сообщения:\n\n```python\n\nmessage = model.Message(\n    messageName='DeclarationReceived',\n    businessKey=f'attestation-declaration-{declaration.id}',\n    processVariables={\n        name: model.Variable(value=value)\n        for name, value in declaration.dict(include={'id'}).items()\n    }\n)\nmessage_results: List[model.MessageResult] = list(adapter.message(message))\n\n```\n\nПолучение списка доступных задач:\n\n```python\n\nadapter.get_external_tasks(definition=definition)\n\n```\n\nВыполнение доступных задач:\n\n```python\n\nadapter.process_external_tasks()\n\n```\n\n\n## Тестирование\n\nДля запуска тестов используется tox с плагином tox-docker, запускающим контейнер Camunda.\n\nУстановка tox:\n\n```bash\n\n$ pip install tox tox-docker\n\n```\n\nЗапуск тестов из директории пакета:\n\n```bash\n\n$ tox\n\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://stash.bars-open.ru/projects/M3/repos/camunda-adapter",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "camunda-adapter",
    "package_url": "https://pypi.org/project/camunda-adapter/",
    "platform": null,
    "project_url": "https://pypi.org/project/camunda-adapter/",
    "project_urls": {
      "Homepage": "https://stash.bars-open.ru/projects/M3/repos/camunda-adapter"
    },
    "release_url": "https://pypi.org/project/camunda-adapter/1.0.0/",
    "requires_dist": [
      "pydantic",
      "requests"
    ],
    "requires_python": ">=3.7",
    "summary": "Адаптер для BPMN-движка Camunda",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16571712,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc47cb9c611bb7028d35a1424ddf5b663378f0e6a609a474e858efd671c5af0b",
          "md5": "82bfe29aeeaf9b29c5e7c20ff7fe8229",
          "sha256": "ebb70a4823bec0bf2426c1ac573ab7b85d27a92f50212c0c950b42408d5125b9"
        },
        "downloads": -1,
        "filename": "camunda_adapter-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "82bfe29aeeaf9b29c5e7c20ff7fe8229",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12437,
        "upload_time": "2023-01-26T03:47:45",
        "upload_time_iso_8601": "2023-01-26T03:47:45.560800Z",
        "url": "https://files.pythonhosted.org/packages/cc/47/cb9c611bb7028d35a1424ddf5b663378f0e6a609a474e858efd671c5af0b/camunda_adapter-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6929ee4f9a09f778c78e741d57d96b6d37651df1927e5f3d849d7791f1e2530f",
          "md5": "135795b4275b8565cb2cfbc59b3d5e53",
          "sha256": "7d7ed5c735d18afe8dfa05a0731fc711ac84c998d2205dd83294b1cbb63511b6"
        },
        "downloads": -1,
        "filename": "camunda-adapter-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "135795b4275b8565cb2cfbc59b3d5e53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26625,
        "upload_time": "2023-01-26T03:47:47",
        "upload_time_iso_8601": "2023-01-26T03:47:47.650833Z",
        "url": "https://files.pythonhosted.org/packages/69/29/ee4f9a09f778c78e741d57d96b6d37651df1927e5f3d849d7791f1e2530f/camunda-adapter-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc47cb9c611bb7028d35a1424ddf5b663378f0e6a609a474e858efd671c5af0b",
        "md5": "82bfe29aeeaf9b29c5e7c20ff7fe8229",
        "sha256": "ebb70a4823bec0bf2426c1ac573ab7b85d27a92f50212c0c950b42408d5125b9"
      },
      "downloads": -1,
      "filename": "camunda_adapter-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "82bfe29aeeaf9b29c5e7c20ff7fe8229",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 12437,
      "upload_time": "2023-01-26T03:47:45",
      "upload_time_iso_8601": "2023-01-26T03:47:45.560800Z",
      "url": "https://files.pythonhosted.org/packages/cc/47/cb9c611bb7028d35a1424ddf5b663378f0e6a609a474e858efd671c5af0b/camunda_adapter-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6929ee4f9a09f778c78e741d57d96b6d37651df1927e5f3d849d7791f1e2530f",
        "md5": "135795b4275b8565cb2cfbc59b3d5e53",
        "sha256": "7d7ed5c735d18afe8dfa05a0731fc711ac84c998d2205dd83294b1cbb63511b6"
      },
      "downloads": -1,
      "filename": "camunda-adapter-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "135795b4275b8565cb2cfbc59b3d5e53",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 26625,
      "upload_time": "2023-01-26T03:47:47",
      "upload_time_iso_8601": "2023-01-26T03:47:47.650833Z",
      "url": "https://files.pythonhosted.org/packages/69/29/ee4f9a09f778c78e741d57d96b6d37651df1927e5f3d849d7791f1e2530f/camunda-adapter-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}