{
  "info": {
    "author": "Laurent Kouadio",
    "author_email": "etanoyau@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: OS Independent",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: C",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development"
    ],
    "description": "<img src=\"docs/_static/logo_wide_rev.svg\"><br>\r\n\r\n-----------------------------------------------------\r\n\r\n# *WATex*: machine learning research in water exploration\r\n\r\n### *Life is much better with potable water*\r\n\r\n [![Documentation Status](https://readthedocs.org/projects/watex/badge/?version=latest)](https://watex.readthedocs.io/en/latest/?badge=latest)\r\n ![GitHub](https://img.shields.io/github/license/WEgeophysics/watex?color=blue&label=Licence&logo=Github&logoColor=blue&style=flat-square)\r\n ![GitHub Workflow Status (with branch)](https://img.shields.io/github/actions/workflow/status/WEgeophysics/watex/ci.yaml?label=CI%20-%20Build%20&logo=github&logoColor=g)\r\n[![Coverage Status](https://coveralls.io/repos/github/WEgeophysics/watex/badge.svg?branch=master)](https://coveralls.io/github/WEgeophysics/watex?branch=master)\r\n ![GitHub release (latest SemVer including pre-releases)](https://img.shields.io/github/v/release/WEgeophysics/watex?color=blue&include_prereleases&logo=python)\r\n [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.7553789.svg)](https://doi.org/10.5281/zenodo.7553789)\r\n ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/watex?color=orange&logo=pypi)\r\n [![PyPI version](https://badge.fury.io/py/watex.svg)](https://badge.fury.io/py/watex)\r\n[![Conda Version](https://img.shields.io/conda/vn/conda-forge/watex.svg)](https://anaconda.org/conda-forge/watex)\r\n[![Anaconda-Server Badge](https://anaconda.org/conda-forge/watex/badges/platforms.svg)](https://anaconda.org/conda-forge/watex)\r\n\r\n##  Overview\r\n\r\n*WATex* is a Python-based library mainly focused on the groundwater exploration (GWE). It brings novel approaches \r\nfor reducing numerous losses during the hydro-geophysical exploration projects. It encompasses \r\nthe Direct-current (DC) resistivity ( Electrical profiling (ERP) & vertical electrical sounding (VES)), \r\nshort-periods electromagnetic (EM), geology and hydrogeology methods. From methodologies based on Machine Learning,  \r\nit allows to: \r\n- auto-detect the right position to locate the drilling operations to minimize the rate of unsuccessful drillings \r\n  and unsustainable boreholes;\r\n- reduce the cost of permeability coefficient (k) data collection during the hydro-geophysical engineering projects,\r\n- predict the water content in the well such as the groundwater flow rate, the level of water inrush, ...\r\n- recover the EM loss signals in area with huge interferences noises ...\r\n- etc.\r\n\r\n## Documentation \r\n\r\nVisit the [library website](https://watex.readthedocs.io/en/latest/) for more resources. You can also quick browse the software [API reference](https://watex.readthedocs.io/en/latest/api_references.html)\r\nand flip through the [examples page](https://watex.readthedocs.io/en/latest/glr_examples/index.html) to see some of expected results. Furthermore, the \r\n[step-by-step guide](https://watex.readthedocs.io/en/latest/glr_examples/applications/index.html#applications-step-by-step-guide) is elaborated for real-world \r\nengineering problems such as computing DC parameters and predicting the k-parameter... \r\n\r\n## Licence \r\n\r\n*WATex* is under [BSD-3-Clause](https://opensource.org/licenses/BSD-3-Clause) License. \r\n\r\n## Installation \r\n\r\nThe system requires preferably Python 3.9+. \r\n\r\n* from *pip*\r\n\r\n[_WATex_](https://pypi.org/project/watex/0.1.7/) can be installed from [PyPI](https://pypi.org/) platform distribution as: \r\n```bash \r\npip install watex\r\n```\r\n\r\n* from *conda* \r\n\r\nThe [installation](https://anaconda.org/conda-forge/watex)  from [conda-forge](https://conda-forge.org/) distribution channel can be achieved with :\r\n\r\n```bash \r\nconda install -c conda-forge watex\r\n``` \r\nTo get the latest development of the code, it is recommended to install it from source using: \r\n\r\n```bash\r\ngit clone https://github.com/WEgeophysics/watex.git \r\n```\r\nFurthermore, for step-by-step guide about the installation and how to manage the \r\ndependencies, visit our [installation guide](https://watex.readthedocs.io/en/latest/installation.html) page.\r\n\r\n## Some demos \r\n\r\n### 1. Drilling location auto-detection\r\n\r\nFor this example, we randomly generate 50 stations of synthetic ERP resistivity data with ``minimum`` and ``maximum ``\r\nresistivity values equal to  ``1e1`` and ``1e4`` ohm.m  respectively as:\r\n\r\n```python \r\nimport watex as wx \r\ndata = wx.make_erp (n_stations=50, max_rho=1e4, min_rho=10., as_frame =True, seed =42 ) \r\n``` \r\n\r\n* Naive auto-detection (NAD)\r\n\r\nThe NAD automatically proposes a suitable location with NO restrictions (constraints) observed in the survey site\r\nduring the GWE. We may understand by ``suitable``, a location expecting to give a flow rate greater \r\nthan 1m3/hr at least. \r\n\r\n```python\r\nrobj=wx.ResistivityProfiling (auto=True ).fit(data ) \r\nrobj.sves_ \r\nOut[1]: 'S025'\r\n```\r\nThe suitable drilling location is proposed at station ``S25`` (stored in the attribute ``sves_``). \r\n\r\n* Auto-detection with constraints (ADC)\r\n\r\nThe constraints refer to the restrictions observed in the survey area during the DWSC. This is common\r\nin real-world exploration. For instance, a station close to a heritage site should be discarded \r\nsince no drilling operations are authorized at that place. When many restrictions \r\nare enumerated in the survey site, they must be listed in a dictionary with a reason and passed to the parameter \r\n``constraints`` so these stations should be ignored during the automatic detection. Here is an example of constraints\r\napplication to our example.\r\n\r\n```python \r\nrestrictions = {\r\n    'S10': 'Household waste site, avoid contamination',\r\n    'S27': 'Municipality site, no authorization to make a drill',\r\n    'S29': 'Heritage site, drilling prohibited',\r\n    'S42': 'Anthropic polluted place, avoid contamination within a few years',\r\n    'S46': 'Marsh zone, borehole will dry up during the dry season'\r\n }\r\nrobj=wx.ResistivityProfiling (constraints= restrictions, auto=True ).fit(data ) \r\nrobj.sves_\r\nOut[2]: 'S033'\r\n```\r\nNotice, the station ``S25`` is no longer considered as the `suitable` location and henceforth, propose ``S33`` as the\r\npriority for drilling operations. However, if the station is close to a restricted area, a warning should raise to \r\ninform the user to avoid taking a risk to perform a drilling location at that location.\r\n\r\nNote that before the drilling operations commence, make sure to carry out the DC-sounding (VES) at that point. **_WATex_** computes \r\nanother parameter called `ohmic-area` `` (ohmS)`` to detect the effectiveness of the existing fracture zone at that point. See more in \r\nthe software [documentation](https://watex.readthedocs.io/en/latest/).\r\n  \r\n### 2. Predict permeability coefficient ``k`` from logging dataset using MXS approach\r\n \r\nMXS stands for mixture learning strategy. It uses upstream unsupervised learning for \r\n``k`` -aquifer similarity label prediction and the supervising learning for \r\nfinal ``k``-value prediction. For our toy example, we use two boreholes data \r\nstored in the software and merge them to compose a unique dataset. In addition, we dropped the \r\n``remark`` observation which is subjective data not useful for ``k`` prediction as:\r\n\r\n```python\r\nimport watex as wx\r\nh= wx.fetch_data(\"hlogs\", key='*', drop_observations =True ) # returns log data object.\r\nh.feature_names\r\nOut[3]: Index(['hole_id', 'depth_top', 'depth_bottom', 'strata_name', 'rock_name',\r\n           'layer_thickness', 'resistivity', 'gamma_gamma', 'natural_gamma', 'sp',\r\n           'short_distance_gamma', 'well_diameter'],\r\n          dtype='object')\r\nhdata = h.frame \r\n```\r\n``k`` is collected as continue values (m/darcies) and should be categorized for the \r\nnaive group of aquifer prediction (NGA). The latter is used to predict \r\nupstream the  MXS target ``ymxs``.  Here, we used the default categorization \r\nprovided by the software and we assume that in the area, there are at least ``2`` \r\ngroups of the aquifer. The code is given as: \r\n```python \r\nmxs = wx.MXS (kname ='k', n_groups =2).fit(hdata) \r\nymxs=mxs.predictNGA().makeyMXS(categorize_k=True, default_func=True)\r\nmxs.yNGA_ [62:74]\r\nOut[4]: array([1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2])\r\nymxs[62:74]\r\nOut[5]: array([ 0,  0,  0,  0, 12, 12, 12, 12, 12, 12, 12, 12])\r\n```\r\nTo understand the transformation from NGA to MXS target (``ymxs``), please, have a look \r\nof the following [paper](http://dx.doi.org/10.2139/ssrn.4326365).\r\nOnce the MXS target is predicted, we call the ``make_naive_pipe`` function to \r\nimpute, scale, and transform the predictor ``X`` at once into a compressed sparse \r\nmatrix ready for final prediction using the [support vector machines](https://ieeexplore.ieee.org/document/708428) and \r\n[random forest](https://www.ibm.com/topics/random-forest) as examples. Here we go: \r\n```python \r\nX= hdata [h.feature_names]\r\nXtransf = wx.make_naive_pipe (X, transform=True) \r\nXtransf \r\nOut[6]: \r\n<218x46 sparse matrix of type '<class 'numpy.float64'>'\r\n\twith 2616 stored elements in Compressed Sparse Row format> \r\nXtrain, Xtest, ytrain, ytest = wx.sklearn.train_test_split (Xtransf, ymxs ) \r\nypred_k_svc= wx.sklearn.SVC().fit(Xtrain, ytrain).predict(Xtest)\r\nypred_k_rf = wx.sklearn.RandomForestClassifier ().fit(Xtrain, ytrain).predict(Xtest)\r\n```\r\nWe can now check the ``k`` prediction scores using ``accuracy_score`` function as: \r\n```python \r\nwx.sklearn.accuracy_score (ytest, ypred_k_svc)\r\nOut[7]: 0.9272727272727272\r\nwx.sklearn.accuracy_score (ytest, ypred_k_rf)\r\nOut[8]: 0.9636363636363636\r\n```\r\nAs we can see, the results of ``k`` prediction are quite satisfactory for our \r\ntoy example using only two boreholes data. Note that things can become more \r\ninteresting when using many boreholes data. For more in \r\ndepth, visit our [examples page](https://watex.readthedocs.io/en/latest/glr_examples/index.html). \r\n\r\n### 3. EM tensors recovering and analyses\r\n\r\nFor a basic illustration, we fetch 20 audio-frequency magnetotelluric (AMT) data \r\nstored as EDI objects collected in a `huayuan` area (Hunan province, China) with \r\nmultiple interferences noised as: \r\n\r\n```python \r\nimport watex as wx\r\ne= wx.fetch_data ('huayuan', samples =20 , key='noised') # returns an EM -objets \r\nedi_data = e.data # get the array  of EDI objects  \r\n``` \r\nBefore EM data restoration, we can analyse the quality control (QC) of the data and \r\nshow the confidence interval that makes us confident about the data at each station. \r\nBy default the confidence test uses the errors in the resistivity tensor. Let's getting \r\nstarted: \r\n```python \r\npo= wx.EMProcessing ().fit(edi_data)   # make a EM processing object \r\nr= po.qc (tol =0.2 , return_ratio = True ) # consider good data from 80% significance.  \r\nr\r\nOut[9]: 0.95\r\n``` \r\nWe can then visualizate the confidence interval at the 20 AMT stations as: \r\n```python \r\nwx.plot_confidence_in(edi_data) \r\n\r\n``` \r\nAlternatively, we can use the ``qc`` function (more consistent) to get the valid data and \r\nthe interpolated frequencies. For instance, we want to known the number of frequencies dropped \r\nduring the control analysis. Just do it: \r\n```python \r\nQCo= wx.qc (edi_data , tol=.2,  return_qco =True )  # returns the quality control object\r\nlen(e.emo.freqs_)   # number of frequency in noised data   \r\nOut[10]: 56\r\nlen(QCo.freqs_)     # number of frequency in valid data after QC  \r\nOut[11]: 53\r\nQCo.invalid_freqs_  # get the useless frequencies based on tol param so we can drop them into the EM data \r\nOut[12]: array([8.19200e+04, 4.85294e+01, 5.62500e+00]) #  81920.0, 48.53 and 5.625 Hz \r\n```\r\nThe ``plot_confidence_in`` function allows to assert whether tensor values can be recovered \r\nfor these three frequencies at each station. Note that the threshold for the EM data \r\nto be restored is set to ``50%``. Below this value, data is unrecoverable. \r\nFurthermore, if our QC rate ``r=95%`` is not to be yet satisfactory in our AMT data, we can \r\nprocess to the impedance tensor ``Z`` restoration as:  \r\n```python \r\nZ=po.zrestore() # returns 3D tensors (Nfrequency, 2, 2), 2x2 for XX, XY, YX and YY components. \r\n```\r\nNow, let's evaluate the new QC ratio to verify the recovering efficaciousness such as: \r\n```python \r\nr, =wx.qc (Z)\r\nr\r\nOut[13]: 1.0\r\n``` \r\nGreat! As we can see, the tensor is restored at each station with ``100%`` ratio and we notice \r\nthat the confidence line is above 95% in alongside the 20 investigation sites and \r\ncompare to the previous plot ( ``rate =75%``). The snippet below can allow to visualize \r\nthis improvement with the confidence interval as: \r\n```python \r\nwx.plot_confidence_in(Z)  \r\n```\r\nBesides, user can flip through the following links for more examples about [EM tensor restoring](https://watex.readthedocs.io/en/latest/glr_examples/applications/plot_tensor_restoring.html#sphx-glr-glr-examples-applications-plot-tensor-restoring-py),  \r\nthe [sknewness](https://watex.readthedocs.io/en/latest/glr_examples/methods/plot_phase_tensors.html#sphx-glr-glr-examples-methods-plot-phase-tensors-py) analysis plots, \r\nthe [strike](https://watex.readthedocs.io/en/latest/glr_examples/utils/plot_strike.html#sphx-glr-glr-examples-utils-plot-strike-py) plot, \r\nthe [filtering](https://watex.readthedocs.io/en/latest/methods.html#filtering-tensors-ama-flma-tma) data, and else...\r\n\r\n## Citations\r\n\r\nIf the [software](https://doi.org/10.1016/j.softx.2023.101367) seemed useful to you in any published work, we will appreciate to cite the paper below:\r\n\r\n> *Kouadio, K.L., Liu, J., Liu, R., 2023. watex: machine learning research in water exploration. SoftwareX . 101367(2023). https://doi.org/10.1016/j.softx.2023.101367*\r\n\r\nIn most situations where *WATex* is cited, a citation to [scikit-learn](https://scikit-learn.org/stable/about.html#citing-scikit-learn) would also be appropriate.\r\n\r\nSee also some [case history](https://watex.readthedocs.io/en/latest/citing.html) papers using *WATex*. \r\n\r\n## Contributions \r\n\r\n1. Department of Geophysics, School of Geosciences & Info-physics, [Central South University](https://en.csu.edu.cn/), China.\r\n2. Hunan Key Laboratory of Nonferrous Resources and Geological Hazards Exploration Changsha, Hunan, China\r\n3. Laboratoire de Geologie Ressources Minerales et Energetiques, UFR des Sciences de la Terre et des Ressources Minières, [Université Félix Houphouët-Boigny]( https://www.univ-fhb.edu.ci/index.php/ufr-strm/), Cote d'Ivoire.\r\n\r\nDeveloper: [_L. Kouadio_](https://wegeophysics.github.io/) <<etanoyau@gmail.com>>\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://pypi.org/project/watex/#files",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/WEgeophysics/watex",
    "keywords": "exploration,groundwater,machine learning,water,hydro-geophysic",
    "license": "BSD-3-Clause",
    "maintainer": "Laurent Kouadio",
    "maintainer_email": "etanoyau@gmail.com",
    "name": "watex",
    "package_url": "https://pypi.org/project/watex/",
    "platform": null,
    "project_url": "https://pypi.org/project/watex/",
    "project_urls": {
      "Documentation": "https://watex.readthedocs.io",
      "Download": "https://pypi.org/project/watex/#files",
      "Homepage": "https://watex.readthedocs.io",
      "Source": "https://github.com/WEgeophysics/watex"
    },
    "release_url": "https://pypi.org/project/watex/0.2.0/",
    "requires_dist": [
      "seaborn (>=0.12.0)",
      "pandas (>=1.4.0)",
      "cython (>=0.29.33)",
      "pyyaml (>=5.0.0)",
      "openpyxl (>=3.0.3)",
      "xgboost (>=1.7.0)",
      "pyproj (>=3.3.0)",
      "pycsamt (>=1.1.2)",
      "tqdm (>=4.64.1)",
      "tables (>=3.6.0)",
      "scikit-learn (==1.2.1)",
      "joblib (>=1.2.0)",
      "threadpoolctl (>=3.1.0)",
      "matplotlib (==3.5.3)",
      "statsmodels (>=0.13.1)",
      "numpy (>=1.23.0)",
      "scipy (>=1.9.0)",
      "h5py (>=3.2.0)",
      "pytest",
      "click ; extra == 'dev'",
      "missingno (>=0.4.2) ; extra == 'dev'",
      "yellowbrick (>=1.5.0) ; extra == 'dev'",
      "pyjanitor (>=0.1.7) ; extra == 'dev'",
      "mlxtend (>=0.21) ; extra == 'dev'"
    ],
    "requires_python": ">=3.9",
    "summary": "Machine learning research in water exploration",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17440175,
  "releases": {
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5c12753782cb5b12476577736d50042b421c86e9621efb93652083ecb2050c3",
          "md5": "2df28b2417985afc7aea77fa308e9074",
          "sha256": "ed95efc20998f6becbd8af493fba1db33b22831d0703def4af4f623a31858f90"
        },
        "downloads": -1,
        "filename": "watex-0.1.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2df28b2417985afc7aea77fa308e9074",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 8230083,
        "upload_time": "2023-03-21T16:12:44",
        "upload_time_iso_8601": "2023-03-21T16:12:44.116501Z",
        "url": "https://files.pythonhosted.org/packages/d5/c1/2753782cb5b12476577736d50042b421c86e9621efb93652083ecb2050c3/watex-0.1.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc653985c408bfe095fe792b297b29868a61a15df8058199ef7ed51705c2f41c",
          "md5": "7fdcaf69f8b14428cc2a39d74249e757",
          "sha256": "33fc0c939028043ecdcb51ecf4dd1d36f8bc537dc127925c66d91108f1505ec1"
        },
        "downloads": -1,
        "filename": "watex-0.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "7fdcaf69f8b14428cc2a39d74249e757",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 10586160,
        "upload_time": "2023-03-21T16:12:53",
        "upload_time_iso_8601": "2023-03-21T16:12:53.606577Z",
        "url": "https://files.pythonhosted.org/packages/bc/65/3985c408bfe095fe792b297b29868a61a15df8058199ef7ed51705c2f41c/watex-0.1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.10rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32878167cae6a77a18e88d03f01961557afeadff3434009492c21ff0aa497c9d",
          "md5": "a323523485d15ff8cf4bd89bfff14049",
          "sha256": "6607ece9125efed20dc9b11cf4ae0fa35765048566e33da7b700f90c7605f272"
        },
        "downloads": -1,
        "filename": "watex-0.1.10rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a323523485d15ff8cf4bd89bfff14049",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 8230128,
        "upload_time": "2023-03-21T15:51:51",
        "upload_time_iso_8601": "2023-03-21T15:51:51.361991Z",
        "url": "https://files.pythonhosted.org/packages/32/87/8167cae6a77a18e88d03f01961557afeadff3434009492c21ff0aa497c9d/watex-0.1.10rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "963e78b6fb4b053572434e9b523090c272ba65f91d78d07864bd86603c41f58a",
          "md5": "8de794e32a582a710f9064ab226ebbf5",
          "sha256": "62f2f0fda8ea543fe0e3b686e89bdc9af97ec477fd1865897d6536ea2380ed0a"
        },
        "downloads": -1,
        "filename": "watex-0.1.10rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "8de794e32a582a710f9064ab226ebbf5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 10607440,
        "upload_time": "2023-03-21T15:51:57",
        "upload_time_iso_8601": "2023-03-21T15:51:57.050215Z",
        "url": "https://files.pythonhosted.org/packages/96/3e/78b6fb4b053572434e9b523090c272ba65f91d78d07864bd86603c41f58a/watex-0.1.10rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c99bff835f9c6acbd18c19493610c4da05e9a7c9bf43e6e3b52bf757b812b722",
          "md5": "962b77e4c66918be49b8f98b27d32937",
          "sha256": "fe3d9166d4ffd40b610823952e92457f76c22a693dba8ed593dd7397c3edebc2"
        },
        "downloads": -1,
        "filename": "watex-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "962b77e4c66918be49b8f98b27d32937",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 8170578,
        "upload_time": "2023-03-09T07:36:18",
        "upload_time_iso_8601": "2023-03-09T07:36:18.577121Z",
        "url": "https://files.pythonhosted.org/packages/c9/9b/ff835f9c6acbd18c19493610c4da05e9a7c9bf43e6e3b52bf757b812b722/watex-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db5c509f8462d25a1bc7e8036f387616b0e9ad1fc63837ba83e661af3c7ae5cf",
          "md5": "e23c36fe9b967db1c5c9ad0b83cd59db",
          "sha256": "18b60416f8cdcd224104ccef9545df99d373d1cdf7901123e7275537a08c2242"
        },
        "downloads": -1,
        "filename": "watex-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "e23c36fe9b967db1c5c9ad0b83cd59db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 10745474,
        "upload_time": "2023-03-09T07:36:24",
        "upload_time_iso_8601": "2023-03-09T07:36:24.904317Z",
        "url": "https://files.pythonhosted.org/packages/db/5c/509f8462d25a1bc7e8036f387616b0e9ad1fc63837ba83e661af3c7ae5cf/watex-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "231331a596859861c97110dd578b3e01f660bf6e4e78e8c252e74a52570b70b7",
          "md5": "2d3a20849d0615c9690e8d98e1e2511b",
          "sha256": "a6f4250075644cc91cfe8bb4f7265e86baed6d2919c347d4b666e7420532e3a7"
        },
        "downloads": -1,
        "filename": "watex-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d3a20849d0615c9690e8d98e1e2511b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 8190611,
        "upload_time": "2023-03-17T09:24:37",
        "upload_time_iso_8601": "2023-03-17T09:24:37.515461Z",
        "url": "https://files.pythonhosted.org/packages/23/13/31a596859861c97110dd578b3e01f660bf6e4e78e8c252e74a52570b70b7/watex-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "809f8443152dc16e8aeefe18dc25ccbd8a2acea9769486bc104dd6618c262594",
          "md5": "078b801c45830624edcb6fe054db8e44",
          "sha256": "215f32ec0aea566499d56b74f1cef6fbf7fc388b4a48d71bd8f1d181cee82d71"
        },
        "downloads": -1,
        "filename": "watex-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "078b801c45830624edcb6fe054db8e44",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 10542070,
        "upload_time": "2023-03-17T09:24:42",
        "upload_time_iso_8601": "2023-03-17T09:24:42.368613Z",
        "url": "https://files.pythonhosted.org/packages/80/9f/8443152dc16e8aeefe18dc25ccbd8a2acea9769486bc104dd6618c262594/watex-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04ecc8127e7d71c3555fcbe44307fc9073a87fd87e0428e1b4db4121ae42639b",
          "md5": "341fa6170680048096d198a713de5525",
          "sha256": "eb1731839704b2b0627aad94b2fd8bd1fbac1212a111bb46a46bbe8057ce9e67"
        },
        "downloads": -1,
        "filename": "watex-0.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "341fa6170680048096d198a713de5525",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 8229962,
        "upload_time": "2023-03-21T08:58:56",
        "upload_time_iso_8601": "2023-03-21T08:58:56.247355Z",
        "url": "https://files.pythonhosted.org/packages/04/ec/c8127e7d71c3555fcbe44307fc9073a87fd87e0428e1b4db4121ae42639b/watex-0.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9744ae8c7aa7f7b47bb3a963a8e5975e4c7846d4d4b8f550ee1a553530b1a6c",
          "md5": "70fd64824d96adbbf6afaf4fa749aacd",
          "sha256": "5dfe3bf06019527ad3a59fbf701427fb831a26d7f7d331496704da9829f242c4"
        },
        "downloads": -1,
        "filename": "watex-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "70fd64824d96adbbf6afaf4fa749aacd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 10586091,
        "upload_time": "2023-03-21T08:59:00",
        "upload_time_iso_8601": "2023-03-21T08:59:00.470447Z",
        "url": "https://files.pythonhosted.org/packages/b9/74/4ae8c7aa7f7b47bb3a963a8e5975e4c7846d4d4b8f550ee1a553530b1a6c/watex-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7d9f8b896b68c4f4b0325eb73e8bb5267750253efd21685a5b4482451489f25",
          "md5": "71ebfd0e337791444bc32d0b9d7dfcd2",
          "sha256": "ae1b2a2052a6c703efadbb3431e784aae31e3a0554c40cf3728ab2f5c5faad13"
        },
        "downloads": -1,
        "filename": "watex-0.1.9rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71ebfd0e337791444bc32d0b9d7dfcd2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 8230112,
        "upload_time": "2023-03-21T14:26:41",
        "upload_time_iso_8601": "2023-03-21T14:26:41.794654Z",
        "url": "https://files.pythonhosted.org/packages/d7/d9/f8b896b68c4f4b0325eb73e8bb5267750253efd21685a5b4482451489f25/watex-0.1.9rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d4e770f4eb3fb9fef98255fe94aa9af515305a8ab0a2e702d636e46d6e142b1",
          "md5": "4128af89e97f99cda8969792c3f3bdb7",
          "sha256": "d0792f6f7be5b8ede532a354ce93b70d6b783836d9d9cfa545a166128b26e698"
        },
        "downloads": -1,
        "filename": "watex-0.1.9rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "4128af89e97f99cda8969792c3f3bdb7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 10607445,
        "upload_time": "2023-03-21T14:26:49",
        "upload_time_iso_8601": "2023-03-21T14:26:49.242688Z",
        "url": "https://files.pythonhosted.org/packages/7d/4e/770f4eb3fb9fef98255fe94aa9af515305a8ab0a2e702d636e46d6e142b1/watex-0.1.9rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9d758735c3e10a853f62af3f6cb208bae3566d3504a76abd237f053c18a7916",
          "md5": "a8b590e0b9f043dcb22fd09f51228bf5",
          "sha256": "f251f3a3e848fc76dda70d5c1fe088224be683999eeddb9c28e749d9eb7fa022"
        },
        "downloads": -1,
        "filename": "watex-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a8b590e0b9f043dcb22fd09f51228bf5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 8238169,
        "upload_time": "2023-03-25T07:09:09",
        "upload_time_iso_8601": "2023-03-25T07:09:09.510141Z",
        "url": "https://files.pythonhosted.org/packages/f9/d7/58735c3e10a853f62af3f6cb208bae3566d3504a76abd237f053c18a7916/watex-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eaef6490e71b89e3784ea587e2d786a1111f85f6ae80cd4e17f683b161afaba8",
          "md5": "d9108a0d164537a74f00d2f99f137702",
          "sha256": "40aadc12d8689b87a68f8c62a53aaa6e75104df345e58ff34c551fab4b89a897"
        },
        "downloads": -1,
        "filename": "watex-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d9108a0d164537a74f00d2f99f137702",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 12209377,
        "upload_time": "2023-03-25T07:12:31",
        "upload_time_iso_8601": "2023-03-25T07:12:31.491357Z",
        "url": "https://files.pythonhosted.org/packages/ea/ef/6490e71b89e3784ea587e2d786a1111f85f6ae80cd4e17f683b161afaba8/watex-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f9d758735c3e10a853f62af3f6cb208bae3566d3504a76abd237f053c18a7916",
        "md5": "a8b590e0b9f043dcb22fd09f51228bf5",
        "sha256": "f251f3a3e848fc76dda70d5c1fe088224be683999eeddb9c28e749d9eb7fa022"
      },
      "downloads": -1,
      "filename": "watex-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a8b590e0b9f043dcb22fd09f51228bf5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 8238169,
      "upload_time": "2023-03-25T07:09:09",
      "upload_time_iso_8601": "2023-03-25T07:09:09.510141Z",
      "url": "https://files.pythonhosted.org/packages/f9/d7/58735c3e10a853f62af3f6cb208bae3566d3504a76abd237f053c18a7916/watex-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eaef6490e71b89e3784ea587e2d786a1111f85f6ae80cd4e17f683b161afaba8",
        "md5": "d9108a0d164537a74f00d2f99f137702",
        "sha256": "40aadc12d8689b87a68f8c62a53aaa6e75104df345e58ff34c551fab4b89a897"
      },
      "downloads": -1,
      "filename": "watex-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d9108a0d164537a74f00d2f99f137702",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 12209377,
      "upload_time": "2023-03-25T07:12:31",
      "upload_time_iso_8601": "2023-03-25T07:12:31.491357Z",
      "url": "https://files.pythonhosted.org/packages/ea/ef/6490e71b89e3784ea587e2d786a1111f85f6ae80cd4e17f683b161afaba8/watex-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}