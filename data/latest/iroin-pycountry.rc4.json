{
  "info": {
    "author": "Christian Theune",
    "author_email": "oss@iroin.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Internationalization",
      "Topic :: Software Development :: Localization"
    ],
    "description": "pycountry\n=========\n\nPublish\n------------------\n\n* Clone the project\n* Adjust Version in setup.py\n* Run `make`\n* Run `python3 -m pip install --upgrade twine`\n* Run `python3 -m twine upload --repository testpypi dist/*` to upload the package to pypi\n\n\n.. image:g: https://travis-ci.org/flyingcircusio/pycountry.svg?branch=master\n\npycountry provides the ISO databases for the standards:\n\n* `639-3 <https://en.wikipedia.org/wiki/ISO_639-3>`_ Languages\n* `3166 <https://en.wikipedia.org/wiki/ISO_3166>`_ Countries\n* `3166-3 <https://en.wikipedia.org/wiki/ISO_3166-3>`_ Deleted countries\n* `3166-2 <https://en.wikipedia.org/wiki/ISO_3166-2>`_ Subdivisions of countries\n* `4217 <https://en.wikipedia.org/wiki/ISO_4217>`_ Currencies\n* `15924 <https://en.wikipedia.org/wiki/ISO_15924>`_ Scripts\n\nThe package includes a copy from Debian's `pkg-isocodes\n<https://salsa.debian.org/iso-codes-team/iso-codes>`_ and makes the data\naccessible through a Python API.\n\nTranslation files for the various strings are included as well.\n\nData update policy\n------------------\n\nNo changes to the data will be accepted into pycountry. This is a pure wrapper\naround the ISO standard using the `pkg-isocodes` database from Debian *as is*.\nIf you need changes to the political situation in the world, please talk to\nthe ISO or Debian people, not me.\n\nDonations / Monetary Support\n----------------------------\n\nThis is a small project that I maintain in my personal time. I am not\ninterested in personal financial gain. However, if you would like to support\nthe project then I would love if you would donate to `Feminist Frequency\n<https://feministfrequency.com/donate/>`_ instead. Also, let the world know you\ndid so, so that others can follow your path.\n\nContributions\n-------------\n\nThe code lives in a `git repository on GitHub\n<https://github.com/flyingcircusio/pycountry>`_, and issues must be reported in there as well.\n\nCountries (ISO 3166)\n--------------------\n\nCountries are accessible through a database object that is already configured\nupon import of pycountry and works as an iterable:\n\n.. code:: pycon\n\n  >>> import pycountry\n  >>> len(pycountry.countries)\n  249\n  >>> list(pycountry.countries)[0]\n  Country(alpha_2='AF', alpha_3='AFG', name='Afghanistan', numeric='004', official_name='Islamic Republic of Afghanistan')\n\nSpecific countries can be looked up by their various codes and provide the\ninformation included in the standard as attributes:\n\n.. code:: pycon\n\n  >>> germany = pycountry.countries.get(alpha_2='DE')\n  >>> germany\n  Country(alpha_2='DE', alpha_3='DEU', name='Germany', numeric='276', official_name='Federal Republic of Germany')\n  >>> germany.alpha_2\n  'DE'\n  >>> germany.alpha_3\n  'DEU'\n  >>> germany.numeric\n  '276'\n  >>> germany.name\n  'Germany'\n  >>> germany.official_name\n  'Federal Republic of Germany'\n\nThe `historic_countries` database contains former countries that have been\nremoved from the standard and are now included in ISO 3166-3, excluding\nexisting ones:\n\n.. code:: pycon\n\n >>> ussr = pycountry.historic_countries.get(alpha_3='SUN')\n >>> ussr\n Country(alpha_3='SUN', alpha_4='SUHH', withdrawal_date='1992-08-30', name='USSR, Union of Soviet Socialist Republics', numeric='810')\n >>> ussr.alpha_4\n 'SUHH'\n >>> ussr.alpha_3\n 'SUN'\n >>> ussr.name\n 'USSR, Union of Soviet Socialist Republics'\n >>> ussr.withdrawal_date\n '1992-08-30'\n\n\nThere's also a \"fuzzy\" search to help people discover \"proper\" countries for\nnames that might only actually be subdivisions. The fuzziness also includes\nnormalizing unicode accents. There's also a bit of prioritization included\nto prefer matches on country names before subdivision names and have countries\nwith more matches be listed before ones with fewer matches:\n\n.. code:: pycon\n\n  >>> pycountry.countries.search_fuzzy('England')\n  [Country(alpha_2='GB', alpha_3='GBR', name='United Kingdom', numeric='826', official_name='United Kingdom of Great Britain and Northern Ireland')]\n\n  >>> pycountry.countries.search_fuzzy('Cote')\n  [Country(alpha_2='CI', alpha_3='CIV', name=\"Côte d'Ivoire\", numeric='384', official_name=\"Republic of Côte d'Ivoire\"),\n   Country(alpha_2='FR', alpha_3='FRA', name='France', numeric='250', official_name='French Republic'),\n   Country(alpha_2='HN', alpha_3='HND', name='Honduras', numeric='340', official_name='Republic of Honduras')]\n\n\nCountry subdivisions (ISO 3166-2)\n---------------------------------\n\nThe country subdivisions are a little more complex than the countries itself\nbecause they provide a nested and typed structure.\n\nAll subdivisons can be accessed directly:\n\n.. code:: pycon\n\n  >>> len(pycountry.subdivisions)\n  4847\n  >>> list(pycountry.subdivisions)[0]\n  Subdivision(code='AD-07', country_code='AD', name='Andorra la Vella', parent_code=None, type='Parish')\n\nSubdivisions can be accessed using their unique code and provide at least\ntheir code, name and type:\n\n.. code:: pycon\n\n  >>> de_st = pycountry.subdivisions.get(code='DE-ST')\n  >>> de_st.code\n  'DE-ST'\n  >>> de_st.name\n  'Sachsen-Anhalt'\n  >>> de_st.type\n  'State'\n  >>> de_st.country\n  Country(alpha_2='DE', alpha_3='DEU', name='Germany', numeric='276', official_name='Federal Republic of Germany')\n\nSome subdivisions specify another subdivision as a parent:\n\n.. code:: pycon\n\n  >>> al_br = pycountry.subdivisions.get(code='AL-BU')\n  >>> al_br.code\n  'AL-BU'\n  >>> al_br.name\n  'Bulqiz\\xeb'\n  >>> al_br.type\n  'District'\n  >>> al_br.parent_code\n  'AL-09'\n  >>> al_br.parent\n  Subdivision(code='AL-09', country_code='AL', name='Dib\\xebr', parent_code=None, type='County')\n  >>> al_br.parent.name\n  'Dib\\xebr'\n\nThe divisions of a single country can be queried using the country_code index:\n\n.. code:: pycon\n\n  >>> len(pycountry.subdivisions.get(country_code='DE'))\n  16\n\n  >>> len(pycountry.subdivisions.get(country_code='US'))\n  57\n\n\nScripts (ISO 15924)\n-------------------\n\nScripts are available from a database similar to the countries:\n\n.. code:: pycon\n\n  >>> len(pycountry.scripts)\n  169\n  >>> list(pycountry.scripts)[0]\n  Script(alpha_4='Afak', name='Afaka', numeric='439')\n\n  >>> latin = pycountry.scripts.get(name='Latin')\n  >>> latin\n  Script(alpha_4='Latn', name='Latin', numeric='215')\n  >>> latin.alpha4\n  'Latn'\n  >>> latin.name\n  'Latin'\n  >>> latin.numeric\n  '215'\n\n\nCurrencies (ISO 4217)\n---------------------\n\nThe currencies database is, again, similar to the ones before:\n\n.. code:: pycon\n\n  >>> len(pycountry.currencies)\n  182\n  >>> list(pycountry.currencies)[0]\n  Currency(alpha_3='AED', name='UAE Dirham', numeric='784')\n  >>> argentine_peso = pycountry.currencies.get(alpha_3='ARS')\n  >>> argentine_peso\n  Currency(alpha_3='ARS', name='Argentine Peso', numeric='032')\n  >>> argentine_peso.alpha_3\n  'ARS'\n  >>> argentine_peso.name\n  'Argentine Peso'\n  >>> argentine_peso.numeric\n  '032'\n\n\nLanguages (ISO 639-3)\n---------------------\n\nThe languages database is similar too:\n\n.. code:: pycon\n\n  >>> len(pycountry.languages)\n  7874\n  >>> list(pycountry.languages)[0]\n  Language(alpha_3='aaa', name='Ghotuo', scope='I', type='L')\n\n  >>> aragonese = pycountry.languages.get(alpha_2='an')\n  >>> aragonese.alpha_2\n  'an'\n  >>> aragonese.alpha_3\n  'arg'\n  >>> aragonese.name\n  'Aragonese'\n\n  >>> bengali = pycountry.languages.get(alpha_2='bn')\n  >>> bengali.name\n  'Bengali'\n  >>> bengali.common_name\n  'Bangla'\n\nLocales\n-------\n\nLocales are available in the `pycountry.LOCALES_DIR` subdirectory of this\npackage. The translation domains are called `isoXXX` according to the standard\nthey provide translations for. The directory is structured in a way compatible\nto Python's gettext module.\n\nHere is an example translating language names:\n\n.. code:: pycon\n\n  >>> import gettext\n  >>> german = gettext.translation('iso3166', pycountry.LOCALES_DIR,\n  ...                              languages=['de'])\n  >>> german.install()\n  >>> _('Germany')\n  'Deutschland'\n\nLookups\n-------\n\nFor each database (countries, languages, scripts, etc.), you can also look up\nentities case insensitively without knowing which key the value may match.  For\nexample:\n\n.. code:: pycon\n\n  >>> pycountry.countries.lookup('de')\n  <pycountry.db.Country object at 0x...>\n\nThe search ends with the first match, which is returned.\n\nChanges\n=======\n\n20.7.4 (unreleased)\n-------------------\n\n- Nothing changed yet.\n\n\n20.7.3 (2020-07-03)\n-------------------\n\n- Fix bug #37: (accidental) unconditional pkg_resources import.\n  (thanks, crbunney)\n\n20.7.2 (2020-07-02)\n-------------------\n\n- Add (auto-generated) __version__ attribute to the main module.\n  (Fixes issue #4)\n\n- Add fuzzy search to historic countries. (Fixe issue #26)\n\n- Update to iso-codes 4.5.0.\n\n- PR 9: Clean up the normalization (lower casing) of values in indexes and searches.\n  See PR https://github.com/flyingcircusio/iroin_pycountry/pull/9 for detailed\n  discussion. This also fixed issue #8.\n\n- Smaller cleanups and build environment version bumps.\n\n- PR 35: Python 3-only cleanups and updated Python minor version compatibility\n  (thanks, Djailla)\n\n- PR 33: Remove defunct bugtracker link from README (thanks, jwilk)\n\n- P3 32: (Somewhat hilarious) Typo (thanks, jwilk)\n\n- Moved to Git/Github; switched from Bitbucket Pipelines to Travis builds.\n\n\n19.8.18 (2019-08-18)\n--------------------\n\n- Fix installation on systems that don't have UTF-8\n  as default encoding. (#13422)\n\n- Remove superfluous print debugging output. (#13424)\n\n\n19.7.15 (2019-07-15)\n--------------------\n\n- Update to iso-codes 4.3.\n\n- Add support for ISO 639-5 (Language Families and Groups).\n\n- Drop support for Python 2.\n\n- Add `search_fuzzy()` function to the countries database. This allows\n  for dealing with user searches that aren't really aware of ISO 3166 (so,\n  like, actual human beings). A bit of character normalization and prioritizing\n  matches between multiple criteria allows building somewhat reasonable\n  suggestion/autocompletion lists. (#13418)\n\n  Caveat emptor: no attention has been paid to performance in this feature.\n\n\n18.12.8 (2018-12-08)\n--------------------\n\nWARNING: This release contains a subtle but important API change that may break\nintegrations!\n\nLooking at #13416 I realized that I made a terrible API design choice with\nrespect to how the `get` function should behave in Python. Probably under the\ninfluence of either too little or too much whiskey I went and implemented `get`\nso that it raises a KeyError instead of doing the Pythonic thing and returning\nNone and allowing to customize the `default`. There was a bit of back-and-forth\naround this code in previous releases (specifically touching edge cases to\nhave the Subdivision API behave \"reasonably\", although there doesn't seem\nto be *one* right way there.)\n\nAnyway, when preparing this release and reviewing #13416 and the other related\nissues and changes from the past I noticed my mistake an decide to fix it\ngoing forward.\n\nSo, from now on `get` will behave as expected in Python and yes, this means\nyou will have to update your integration code carefully now checking for\n`None` returns instead of expecting KeyErrors. This is work, but I think it's\nworthwhile to uphold this convention within the Python community.\n\n- Switch API from \"get + KeyError\" to \" get + default=None\". This is\n  a subtle API-breaking change. Please update carefully. (#13416)\n\n- Update to iso-codes 4.1.\n\n\n18.5.26 (2018-05-26)\n--------------------\n\n- Fix #13394: incorrect KeyError shadowing in Subdivisions.get()\n- Fix #13398: make lazy loading thread-safe.\n\n18.5.20 (2018-05-20)\n--------------------\n\n- Update to iso-codes 3.79.\n\n\n18.2.23 (2018-02-23)\n--------------------\n\n- Update to iso-codes 3.78.\n\n\n17.9.23 (2017-09-23)\n--------------------\n\n- Update to iso-codes 3.76, which fixes #13398.\n\n\n17.5.14 (2017-05-14)\n--------------------\n\n- Update to iso-codes 3.75, which fixes #13389 again.\n  (bad parent codes for GB).\n\n- Switch from building on drone.io (discontinued service) to\n  bitbucket's Pipelines.\n\n- Update pytest dependencies to get rid of API warnings.\n\n17.01.08 (2017-01-08)\n---------------------\n\n- Update to iso-codes 3.73, which fixes #13389 (bad parent codes for CZ).\n\n\n17.01.02 (2017-01-02)\n---------------------\n\n- Return empty lists from the subdivision database if the country exists\n  but does not have any subdivisions. Fixes #13374.\n\n- Some typo fixes. Thanks to @VictorMireyev.\n\n- Update to iso-codes-3.72.\n\n\n16.11.27.1 (2016-11-27)\n-----------------------\n\n- 16.11.27 was a brown bag release. I merged the PRs online, but didn't\n  pull them. Well. This is what 16.11.27 actually should have been.\n\n\n16.11.27 (2016-11-27)\n---------------------\n\n- Fix encoding issue on Python 3 (which seems to have been limited to\n  some platforms.) Via PR17, fixes #13386.\n  Thanks to @masroore and @hiaselhans.\n\n- Documentation fix: iso639_1_code is not a valid key for languages any\n  more. Fixes #13387, thanks to @jmitzka.\n\n- Update to iso-codes-3.71.\n\n\n16.11.08 (2016-11-08)\n---------------------\n\nThis release was heavily supported by @zware who fixed some of the issues\nI overlooked in the last releases and a few enhancements.\n\n* All data objects now have a repr() that includes all values. (@zware)\n\n* All database objects now have a lookup method that takes a value and\n  returns the first data object that has an attribute that matches the value.\n  Note that searching is halted when the first match is found. (@zware)\n\n* Clean up historical countries: the deleted flag is gone and there is no\n  database that holds both historical and present countries any longer.\n  The record formats are too different to keep this facade up reasonably well.\n\n* Fix parent lookup for subdivisions.\n\n* Update README to correctly show the updated field names.\n\n* Update pins for the packages we depend on.\n\n* Reduce Python test coverage to Python 2.7 and 3.5 -- I can't sustain\n  running a bazillion Python versions all the time forever.\n\n* Fix Python 3 compatibility (@zware)\n\n\n\n16.10.23rc3 (2016-10-23)\n------------------------\n\n- Incorporate some typos and suggested README improvements from @Pander in #13375.\n\n\n16.10.23rc2 (2016-10-23)\n------------------------\n\n- Adapt README to the new attributes.\n\n\n16.10.23rc1 (2016-10-23)\n------------------------\n\nThis is a major change. The upstream packages have been revamped from the\nformer XML databases to use JSON. They adapted their schemata a bit and thus\nmade some of the structures in iroin_pycountry superfluous (yay!). Memory usage went\ndown when all databases are loaded (32.7 MiB down from 83.6 MiB) and\nperformance has gone up (not measured scientifically, but it's noticable when\nloading the DBs in an interactive session).\n\nTo mark this major change, I'm also switch from the existing (not useful)\nSemVer-based version numbers to CalVer-based numbers using YY.MM.DD.micro as\nthe pattern.\n\nTo avoid adding more complexity I have removed code that really only was\nnecessary because of the complexity of using the XML databases.\n\nHere's what you need to know:\n\n- I updated to iso-codes 3.70 which is a lot fresher than the\n  last release.\n\n- Attribute names have changed. There is no longer a mapping\n  going on between the sources and the object attributes. Take\n  a look at the JSON files (or inspect the objects) to see\n  which fields are supported.\n\n  You can also inspect the automatically build indexes (db.indices) to see all\n  keys in a database. Not every object supports every attribute - this depends\n  on the quality of the data from pkg-isocodes.\n\n  Attribute names are more coherent now, too. Note that \"alpha2\", \"alpha4\",\n  etc. are now using an underscore as that's the pattern in the upstream\n  packages. So it's \"alpha_2\" now.\n\n- HistoricCountries no longer includes countries that still\n  exist. I removed the computed fields that were meant to\n  make it easy to filter.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/iroin/pycountry",
    "keywords": "country subdivision language currency iso 3166 639 4217 15924 3166-2",
    "license": "LGPL 2.1",
    "maintainer": "",
    "maintainer_email": "",
    "name": "iroin-pycountry",
    "package_url": "https://pypi.org/project/iroin-pycountry/",
    "platform": "",
    "project_url": "https://pypi.org/project/iroin-pycountry/",
    "project_urls": {
      "Homepage": "https://github.com/iroin/pycountry"
    },
    "release_url": "https://pypi.org/project/iroin-pycountry/20.7.9/",
    "requires_dist": null,
    "requires_python": ">=3.5, <4",
    "summary": "ISO country, subdivision, language, currency and script definitions and their translations",
    "version": "20.7.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11894271,
  "releases": {
    "20.7.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfb11ba8e1b05f1c6b6b46f078d2d70b03012c7f29fd1a9fe75604d7402118ee",
          "md5": "f265288a7b09adf5205fad8c10a3e851",
          "sha256": "cccb1c1de0f4e6cc475132f95ae6aec34bdb8f6d0e460d22b05536f1d8ac2c0e"
        },
        "downloads": -1,
        "filename": "iroin_pycountry-20.7.6.tar.gz",
        "has_sig": false,
        "md5_digest": "f265288a7b09adf5205fad8c10a3e851",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 5968979,
        "upload_time": "2021-11-01T16:42:16",
        "upload_time_iso_8601": "2021-11-01T16:42:16.954252Z",
        "url": "https://files.pythonhosted.org/packages/bf/b1/1ba8e1b05f1c6b6b46f078d2d70b03012c7f29fd1a9fe75604d7402118ee/iroin_pycountry-20.7.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20.7.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0609d066ebabd8c3432c193800a31b8c3f2e15520e7a5c2a5f579794a7a6bfd5",
          "md5": "8dab405f08345d3dcdfbb773649cf6eb",
          "sha256": "0068f81e3efb3e5c9a412825f6acb2736fb773cd44d424e54297cbe27fd65cd9"
        },
        "downloads": -1,
        "filename": "iroin_pycountry-20.7.7.tar.gz",
        "has_sig": false,
        "md5_digest": "8dab405f08345d3dcdfbb773649cf6eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 5969755,
        "upload_time": "2021-11-01T16:55:24",
        "upload_time_iso_8601": "2021-11-01T16:55:24.420102Z",
        "url": "https://files.pythonhosted.org/packages/06/09/d066ebabd8c3432c193800a31b8c3f2e15520e7a5c2a5f579794a7a6bfd5/iroin_pycountry-20.7.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20.7.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0f0b41a539a54bc16fa7eca089fa8630779b920d732387951891c28cc875ed2",
          "md5": "a4c8dec5efca1eac6d90d36fd33c0218",
          "sha256": "00d01bc1d72dbf43d0aebe03cf57eb41fab12bdfcc79bfd8dec5ef9db80dda1a"
        },
        "downloads": -1,
        "filename": "iroin_pycountry-20.7.8.tar.gz",
        "has_sig": false,
        "md5_digest": "a4c8dec5efca1eac6d90d36fd33c0218",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 5969542,
        "upload_time": "2021-11-01T17:05:03",
        "upload_time_iso_8601": "2021-11-01T17:05:03.273103Z",
        "url": "https://files.pythonhosted.org/packages/b0/f0/b41a539a54bc16fa7eca089fa8630779b920d732387951891c28cc875ed2/iroin_pycountry-20.7.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20.7.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2eedbc56471ff3364f388269c81dc3f639df43ab899b1606c47fdd4c3d07af23",
          "md5": "74740697acba85ee5543b50e7747ace5",
          "sha256": "6faab6a9e9468c457b0b17a7c37c84cb057f4d02251a1138589c5bb8d4fa7766"
        },
        "downloads": -1,
        "filename": "iroin_pycountry-20.7.9.tar.gz",
        "has_sig": false,
        "md5_digest": "74740697acba85ee5543b50e7747ace5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 32063,
        "upload_time": "2021-11-01T17:15:56",
        "upload_time_iso_8601": "2021-11-01T17:15:56.484425Z",
        "url": "https://files.pythonhosted.org/packages/2e/ed/bc56471ff3364f388269c81dc3f639df43ab899b1606c47fdd4c3d07af23/iroin_pycountry-20.7.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2eedbc56471ff3364f388269c81dc3f639df43ab899b1606c47fdd4c3d07af23",
        "md5": "74740697acba85ee5543b50e7747ace5",
        "sha256": "6faab6a9e9468c457b0b17a7c37c84cb057f4d02251a1138589c5bb8d4fa7766"
      },
      "downloads": -1,
      "filename": "iroin_pycountry-20.7.9.tar.gz",
      "has_sig": false,
      "md5_digest": "74740697acba85ee5543b50e7747ace5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5, <4",
      "size": 32063,
      "upload_time": "2021-11-01T17:15:56",
      "upload_time_iso_8601": "2021-11-01T17:15:56.484425Z",
      "url": "https://files.pythonhosted.org/packages/2e/ed/bc56471ff3364f388269c81dc3f639df43ab899b1606c47fdd4c3d07af23/iroin_pycountry-20.7.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}