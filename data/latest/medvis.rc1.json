{
  "info": {
    "author": "medvis",
    "author_email": "yngve.m.moe@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "======\nMedVis\n======\n\nTools to visualise medical images.\n\n------------\nInstallation\n------------\n\nTo install, run\n\n.. code::\n\n    pip install medvis\n\n-------\nExample\n-------\n\nThe following example will plot a PET/CT image with alpha blended PET signal ontop\nof a grayscale CT image. The outline of two masks are shown with a legend that specifies\nwhat the different colours represent.\n\n.. code:: python\n\n        import matplotlib.pyplot as plt\n        import medvis\n\n\n        ct_image = ...\n        pet_image = ...\n        binary_true_mask = ...\n        binary_pred_mask = ...\n\n        true_colour = \"tomato\"\n        pred_colour = \"skyblue\"\n\n        blended_pet_image = medvis.apply_cmap_with_blend(pet_image, 'magma')\n        true_mask_outline = medvis.create_outline(binary_true_mask, width=2, colour=true_colour)\n        pred_mask_outline = medvis.create_outline(binary_pred_mask, width=2, colour=pred_colour)\n\n        fig, ax = plt.subplots()\n        ax.imshow(ct_image, cmap='gray')\n        ax.imshow(blended_pet_image)\n        ax.imshow(true_mask_outline)\n        ax.imshow(pred_mask_outline)\n        medvis.create_legend([true_colour, pred_colour], [\"True mask\", \"Predicted mask\"], ax=ax)\n\n        plt.show()\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yngvem/medvis",
    "keywords": "medvis",
    "license": "\"MIT license\",",
    "maintainer": "",
    "maintainer_email": "",
    "name": "medvis",
    "package_url": "https://pypi.org/project/medvis/",
    "platform": "",
    "project_url": "https://pypi.org/project/medvis/",
    "project_urls": {
      "Homepage": "https://github.com/yngvem/medvis"
    },
    "release_url": "https://pypi.org/project/medvis/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Some utilities to visualise medical images and masks",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7450557,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e58b68575522f4922bf9bdbe3fb8440b0637ea61b623b4f2d65ecc45f7c3699",
          "md5": "dcc66717dcdf3c5aa6888e5b94b71a32",
          "sha256": "ac9fbc701ee1a3672816a2fb4cca02e9073f6561718b1242ba997268545c5348"
        },
        "downloads": -1,
        "filename": "medvis-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dcc66717dcdf3c5aa6888e5b94b71a32",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 8345,
        "upload_time": "2020-06-11T08:05:23",
        "upload_time_iso_8601": "2020-06-11T08:05:23.942152Z",
        "url": "https://files.pythonhosted.org/packages/2e/58/b68575522f4922bf9bdbe3fb8440b0637ea61b623b4f2d65ecc45f7c3699/medvis-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4329afb476a15964d16b5c8a162b76c7f4a53283b8909c9e090393cb3e5bb79",
          "md5": "bad2486e87b450d53bfb919551f9343c",
          "sha256": "1eefa44ddcfa35a28cf9ca911727265336abf90f1df76c8eac9ecd93708b17c1"
        },
        "downloads": -1,
        "filename": "medvis-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bad2486e87b450d53bfb919551f9343c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5220,
        "upload_time": "2020-06-11T08:05:26",
        "upload_time_iso_8601": "2020-06-11T08:05:26.356343Z",
        "url": "https://files.pythonhosted.org/packages/e4/32/9afb476a15964d16b5c8a162b76c7f4a53283b8909c9e090393cb3e5bb79/medvis-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2e58b68575522f4922bf9bdbe3fb8440b0637ea61b623b4f2d65ecc45f7c3699",
        "md5": "dcc66717dcdf3c5aa6888e5b94b71a32",
        "sha256": "ac9fbc701ee1a3672816a2fb4cca02e9073f6561718b1242ba997268545c5348"
      },
      "downloads": -1,
      "filename": "medvis-0.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dcc66717dcdf3c5aa6888e5b94b71a32",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 8345,
      "upload_time": "2020-06-11T08:05:23",
      "upload_time_iso_8601": "2020-06-11T08:05:23.942152Z",
      "url": "https://files.pythonhosted.org/packages/2e/58/b68575522f4922bf9bdbe3fb8440b0637ea61b623b4f2d65ecc45f7c3699/medvis-0.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e4329afb476a15964d16b5c8a162b76c7f4a53283b8909c9e090393cb3e5bb79",
        "md5": "bad2486e87b450d53bfb919551f9343c",
        "sha256": "1eefa44ddcfa35a28cf9ca911727265336abf90f1df76c8eac9ecd93708b17c1"
      },
      "downloads": -1,
      "filename": "medvis-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "bad2486e87b450d53bfb919551f9343c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5220,
      "upload_time": "2020-06-11T08:05:26",
      "upload_time_iso_8601": "2020-06-11T08:05:26.356343Z",
      "url": "https://files.pythonhosted.org/packages/e4/32/9afb476a15964d16b5c8a162b76c7f4a53283b8909c9e090393cb3e5bb79/medvis-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}