{
  "info": {
    "author": "Andrew Myers",
    "author_email": "me@ajmyers.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# TM1 Code Migrate\n\ntm1cm is a utility for moving TM1 Planning Analytics objects between TM1 applications, or your local file system. It can be used to manage the software development lifecycle of a TM1 application.\n\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install tm1cm.\n\n```bash\npip install tm1cm\n```\n\n## Setup\n\nFirst things first, you must 'scaffold' a new TM1 application on your local system, and then update settings.\n\n```bash\ntm1cm --mode scaffold --path ./mytm1application\n```\n\nThis command will create the folder structure expected by the tm1cm utility\n\n```text\nmytestapplication/\n    config/ \n        default/\n            connect.yaml\n            credentials.yaml\n            tm1cm.yaml\n        test/\n        staging/\n        prod/\n    data/\n    files/\n    scripts/\n```\n\nUnder the 'config' directory, modify the folders (ignoring 'default' folder) for any environments (i.e test/staging/prod). Remove any that you won't use.\n\n### Update connect.yaml\n\nCopy connect.yaml from the default/ folder into each of the environment subfolders.\n\nUpdate each connect.yaml file to contain the connection parameters for your TM1 application. You must be able to access the REST API endpoint of your TM1 application. For on-prem TM1 applications, this may look like:\n\n```yaml\nbase_url: https://myonpremapplication:10000\n```\n\nIf you are using the IBM Cloud, your connect.yaml may look like\n\n```yaml\nbase_url: https://mycompany.planning-analytics.ibmcloud.com:443/tm1/api/tm1\n```\n\n### Update credentials.yaml\n\nIf your credentials are the same in all environments, you can update credentials.yaml within the default/ directory\n\nIf your credentials are different across each environment, copy credentials.yaml into each environment subfolder (as with connect.yaml) and update your credentials for each environment\n\n```yaml\nnamespace: LDAP\nuser: mysecureusername\npassword: mysecurepassword\n```\n\n**NOTE:** If you are using IBM Cloud, You must use an automation user that was included in the IBM Cloud Welcome Back. It is not possible to connect to use tm1cm with your IBM ID\n\n### Update tm1cm.yaml\n\ntm1cm.yaml is the primary configuration file that determines what objects SHOULD and SHOULD NOT be included in migrations.\n\nBecause some parts of TM1 applications are generally dynamic, you may not want to include every single TM1 hierarchy, subset, dimension, etc in your tm1cm configuration.\n\nAt runtime, the model is passed through a series of filters that are defined below. You can define one or many filters for each type of object. The yaml config is fairly flexible. You can be fairly selective about what you migrate.\n\n```yaml\n# Turbo Integrator Processes:\n#   Define a list of TI processes to include, and then exclude from tm1cm. Build a list using the 'include' filter, then filter\n#     it further using the 'exclude' filter. Use * as a wildcard character anywhere within the cube name\n#     Filters can be defined as a single item, or as a list of items.\n#\n#   Format: <ProcessName>\n#   Examples:\n#      - Actual.Call.* -- include all processes that start with Actual.Call\n#      - * -- include all processes\n\ninclude_process: '*'\nexclude_process:\n  - '}tp*'\n\n# This will apply standard case/indentation/formatting for TI Processes\nautoformat_ti_process: true\n\n# Cubes:\n#   Define a list of cubes to include, and then exclude from tm1cm. Build a list using the 'include' filter, then filter\n#     it further using the 'exclude' filter. Use * as a wildcard character anywhere within the cube name\n#     Filters can be defined as a single item, or as a list of items.\n#\n#   Format: <CubeName>\n#   Example: }ClientGroups\n\ninclude_cube: '*'\nexclude_cube:\n  - '}ClientCAMAssociatedGroups'\n  - '}ClientProperties'\n  - '}ClientSettings'\n  - '}ElementProperties*'\n  - '}HierarchyProperties'\n  - '}Stats*'\n  - '}Hold*'\n  - '}CubeProperties'\n  - '}DimensionProperties'\n  - '}ElementAttributes_}*'\n  - '}ElementAttributes_}Clients'\n  - '}Capabilities'\n  - '}CubeSecurityProperties'\n  - '}PickList*'\n  - '*}tp*'\n  - '}CellAnnotations*'\n\n# Rules:\n#   Define a list of cube rules to include, and then exclude from tm1cm. Build a list using the 'include' filter, then filter\n#     it further using the 'exclude' filter. Use * as a wildcard character anywhere within the cube name\n#     Filters can be defined as a single item, or as a list of items.\n#\n#   Format: <CubeName>\n#   Example: }ClientGroups\n\ninclude_rule: '*'\nexclude_rule: ''\n\n# Cube Views:\n#   Define a list of cubes views to include, and then exclude from tm1cm. Build a list using the 'include' filter, then filter\n#     it further using the 'exclude' filter. Use * as a wildcard character anywhere within the cube name\n#     Filters can be defined as a single item, or as a list of items.\n#\n#   Note: This only includes the view definition, it does not include any data. It is recommended that any subsets included\n#     in the view definition also be included using 'include_dimension_hierarchy_subset' otherwise the migration will fail\n#\n#   Note: Only public views are supported\n#\n#   Format: <CubeName>/<ViewName>\n#   Examples:\n#      - afReporting/Default -- include the 'Default' view for 'afReporting' cube\n#      - */Default -- Match the 'Default' view for all cubes\n#      - afReporting/* -- Match all views for afReporting cube\n\ninclude_cube_view: ''\nexclude_cube_view: ''\n\n# Cube View Data:\n#   Define a list of cube view data to include, and then exclude from tm1cm. Build a list using the 'include' filter, then filter\n#     it further using the 'exclude' filter. Use * as a wildcard character anywhere within the cube name\n#     Filters can be defined as a single item, or as a list of items.\n#\n#   Note: This is generally intended for moving smaller sets of data, like control cube values. It is not intended for moving large\n#     data sets.\n#\n#   Note: Only public views are supported. It's recommended to disable zero suppression on the view otherwise stale data may\n#     be left behind on the target\n#\n#   Format: <CubeName>/<ViewName>\n#   Examples:\n#      - afReporting/Default -- include the 'Default' view data for 'afReporting' cube\n#      - */Default -- Match the 'Default' view data for all cubes\n#      - afReporting/* -- Match all view data for afReporting cube\n\ninclude_cube_view_data: ''\nexclude_cube_view_data: ''\n\n# Dimensions:\n#   Define a list of dimensionss to include, and then exclude from tm1cm. Build a list using the 'include' filter, then filter\n#     it further using the 'exclude' filter. Use * as a wildcard character anywhere. Filters can be defined as a single item, \n#     or as a list of items.\n#     \n#   Note: A 'dimension' is only a container of hierarchies. You must also configure 'include_dimension_hierarchy' \n#\n#   Note: Only public views are supported. It's recommended to disable zero suppression on the view otherwise stale data may\n#     be left behind on the target\n#\n#   Format: <DimensionName>\n#   Examples:\n#      - af* -- include all dimensions starting with af\n#      - *_Measure -- include all dimensions that end with _Measure\n\ninclude_dimension: '*'\nexclude_dimension:\n  - '}Stats*'\n  - '}Hierarchies*'\n  - '}ApplicationEntries'\n  - '}CAMAssociatedGroups'\n  - '}Chores'\n  - '}Client*'\n  - '}Connection*'\n  - '}Cube Functions'\n  - '}CubeProperties'\n  - '}CubeSecurityProperties'\n  - '}Cubes'\n  - '}Cultures'\n  - '}DimensionFormatAttributes'\n  - '}DimensionFormatItems'\n  - '}DimensionProperties'\n  - '}ElementAttributes_}*'\n  - '}ElementProperties'\n  - '}Features'\n  - '}Groups'\n  - '}PickList'\n  - '}Processes'\n  - '}RuleStats'\n  - '}Subsets*'\n  - '}Views*'\n  - '}*'\n  - 'Sandboxes'\n\n# Dimension Hierarchy:\n#   Define a list of dimension hierarchies to include, and then exclude from tm1cm. Build a list using the 'include' filter, then filter\n#     it further using the 'exclude' filter. Use * as a wildcard character anywhere. Filters can be defined as a single item,\n#     or as a list of items.\n#\n#   Note: This will manage the migration of hierarchies, but will not explicitly include the elements of a hierarchy. In order to configure\n#     including/excluding a hierarchies elements, see 'include_dimension_hierarchy_element'\n#\n#   Format: <DimensionName>/<HierarchyName>\n#   Examples:\n#      - afLocation/afLocation -- Include only the primary hierarchy for dimension afLocation\n#      - afLocation/* -- include all hierarchies for dimension afLocation\n\ninclude_dimension_hierarchy: '*/*'\nexclude_dimension_hierarchy:\n  - '}*/*'\n  - '*/Leaves'\n\n# Dimension Hierarchy Elements:\n#   Define a list of dimension hierarchy elements to include, and then exclude from tm1cm. Build a list using the 'include' filter, then filter\n#     it further using the 'exclude' filter. Use * as a wildcard character anywhere. Filters can be defined as a single item,\n#     or as a list of items.\n#\n#   Note: It is not recommended to include elements for hierarchies that are managed from other data sources (like upstream ERP)\n#\n#   Format: <DimensionName>/<HierarchyName>\n#   Examples:\n#      - afLocation/afLocation -- Include only the primary hierarchy elements for dimension afLocation\n#      - afLocation/* -- include all hierarchy elements for dimension afLocation\n\ninclude_dimension_hierarchy_element: '*/*'\nexclude_dimension_hierarchy_element: ''\n\n# Dimension Hierarchy Attributes:\n#   Define a list of dimension hierarchy attributes to include, and then exclude from tm1cm. Build a list using the 'include' filter, then filter\n#     it further using the 'exclude' filter. Use * as a wildcard character anywhere. Filters can be defined as a single item,\n#     or as a list of items.\n#\n#   Note: This will only manage attributes themselves, it will not populate attribute values. In order to do that, see the\n#     include_dimension_hierarchy_attribute_value\n#\n#   Format: <DimensionName>/<HierarchyName>/<AttributeName>\n#   Examples:\n#      - afLocation/afLocation/* -- include all attributes for afLocation dimension/hierarchy\n#      - afLocation/*/Name -- include 'Name' attribute for all hierarchies of afLocation\n#      - */*/Name -- include 'Name' attribute for all hierarchies of all dimensions\n\ninclude_dimension_hierarchy_attribute: '*/*/*'\nexclude_dimension_hierarchy_attribute: '*/*/}SYS*'\n\n# Dimension Hierarchy Attribute Values:\n#   Define a list of dimension hierarchy attributes values to include, and then exclude from tm1cm. Build a list using the 'include' filter, then filter\n#     it further using the 'exclude' filter. Use * as a wildcard character anywhere. Filters can be defined as a single item,\n#     or as a list of items.\n#\n#   Note: This will, for any included elements, manage the attribute values for each element.\n#\n#   Format: <DimensionName>/<HierarchyName>/<AttributeName>\n#   Examples:\n#      - afLocation/afLocation/* -- include all attribute values for afLocation dimension/hierarchy\n#      - afLocation/*/Name -- include 'Name' attribute values for all hierarchies of afLocation\n#      - */*/Name -- include 'Name' attribute values for all hierarchies of all dimensions\n\ninclude_dimension_hierarchy_attribute_value: '*/*/*'\nexclude_dimension_hierarchy_attribute_value: ''\n\n# Dimension Hierarchy Subset:\n#   Define a list of subsets to include, and then exclude from tm1cm. Build a list using the 'include' filter, then filter\n#     it further using the 'exclude' filter. Use * as a wildcard character anywhere. Filters can be defined as a single item,\n#     or as a list of items.\n#\n#   Note: This supports only public subsets. It will work for both Dynamic and Static subsets.\n#\n#   Format: <DimensionName>/<HierarchyName>/<SubsetName>\n#   Examples:\n#      - afLocation/afLocation/* -- include all subsets for afLocation dimension/hierarchy\n#      - */*/Level 0 -- include all subsets with name 'Level 0' for all dimensions/hierarchies\n\ninclude_dimension_hierarchy_subset: ''\nexclude_dimension_hierarchy_subset: ''\n\n# Backup on migrate\n#   Configure these settings to set up running a TI process to perform a backup prior to doing migration\n#\n#   Note: These parameters are only relevant in Interactive Mode and have no effect in Command Line mode\n#\n#   backup_on_migrate: true/false -- default value to perform backup on migration\n#   backup_allow_override: true/false -- allow backup setting to be overridden\n#   backup_process: The name of the TI process that will be executed to perform the system backup\n\nbackup_on_migrate: false\nbackup_allow_override: false\nbackup_process: ''\n\n# JSON or YAML -- recommended to use YAML as its human-readable\ntext_output_format: YAML\n\n# File operations -- do not touch, currently unsupported\ndo_file_operations: false\nfile_to_blob_update_process: ''\ninclude_file: ''\nexclude_file: ''\n```\n\n## Usage\n\ntm1cm has two different modes, Interactive and Command Line.\n\n### Interactive Mode\n\nInteractive mode allows you to pick and choose exactly what objects you would like to move between environments\n\nTo launch interactive mode, navigate in your terminal (or command prompt) to your application folder and run:\n\n```\ntm1cm\n```\n\nYou will be presented with the tm1cm splash screen and a special (tm1cm) command prompt:\n\n```\n----------------------------------\nTM1 Code Migrate\n----------------------------------                                                      \n Created By: Andrew Myers (me@ajmyers.net) -- https://www.linkedin.com/in/andrew-myers-3112248/\n Homepage: https://github.com/ajmyers/tm1cm\n Issues & Bugs: https://github.com/ajmyers/tm1cm/issues\n-----------------------------------\n\nWelcome to TM1 Code Migrate interactive!\n\n(tm1cm) $ \n```\n\nUse the 'help' command to see all possible commands\n\n```\n(tm1cm) $ help\n```\n\nuse the 'ls apps' command to see all of the configurations you can migrate between\n\n```\n(tm1cm) $ ls apps\nmytestapplication.local\nmytestapplication.test\nmytestapplication.prod\n```\n\nBegin a migration between two environments using 'migrate appfrom appto'\n\n```\n(tm1cm) $ migrate mytestapplication.test mytestapplication.prod\n```\n\nOnce the migrate command completes, use the 'ls' command to see what operations are available.\n\nNOTE: Operations that are NOT staged are in <span style=\"color:red\">red</span>, whereas staged operations are in NOTE: Operations that are staged are show in <span style=\"color:green\">green</span>. By default, there are no staged operations\n\n```\n(tm1cm) $ ls\nDELETE_PROCESS: ztemp ai check date\nDELETE_SUBSET: afReclass_Index, afReclass_Index, Complete Reclasses\nUPDATE_PROCESS: Actual.Call.Load Currency Rates\nUPDATE_PROCESS: Actual.Data.Build Drill Table Query\nUPDATE_PROCESS: Actual.Data.Load Actual Cash Data\nUPDATE_PROCESS: Actual.Data.Load Actual Data\nUPDATE_PROCESS: Actual.Data.Load from Ingestion\nUPDATE_PROCESS: Actual.Data.Populate Drill Table\nUPDATE_PROCESS: Actual.Data.Update Budget Rate Data\nUPDATE_DIMENSION: afActualCash_Measure\nUPDATE_HIERARCHY: afActualCash_Measure, afActualCash_Measure\nUPDATE_CUBE: afActualCash\nUPDATE_RULE: afActualCash\n```\n\nYou can stage and unstage changes by using the 'add' and 'remove' commands. These commands support the use of wildcards in order to stage multiple changes with one command.\n\n```\n(tm1cm) $ add UPDATE_PROCESS: *\nUPDATE_PROCESS: Actual.Call.Load Currency Rates\nUPDATE_PROCESS: Actual.Data.Build Drill Table Query\nUPDATE_PROCESS: Actual.Data.Load Actual Cash Data\nUPDATE_PROCESS: Actual.Data.Load Actual Data\nUPDATE_PROCESS: Actual.Data.Load from Ingestion\nUPDATE_PROCESS: Actual.Data.Populate Drill Table\nUPDATE_PROCESS: Actual.Data.Update Budget Rate Data\n```\n\n```\n(tm1cm) $ remove UPDATE_PROCESS: Actual.Data.Load Actual Cash Data \n```\n\nUse the 'ls stage' command to view the list of staged changes.\n\nUse the 'ls' command to view all operations.\n\nUse the 'do' command to perform the staged operations.\n\n```\n(tm1cm) $ do\nPerform STAGED operations? (7/104)\n[y/n]? y\nDoing: UPDATE_PROCESS: Actual.Call.Load Currency Rates\nDoing: UPDATE_PROCESS: Actual.Data.Build Drill Table Query\nDoing: UPDATE_PROCESS: Actual.Data.Load Actual Data\nDoing: UPDATE_PROCESS: Actual.Data.Load from Ingestion\nDoing: UPDATE_PROCESS: Actual.Data.Populate Drill Table\nDoing: UPDATE_PROCESS: Actual.Data.Update Budget Rate Data\n```\n\n### Command Line\n\nCommand line mode is useful for automating migrations. There are two modes. 'get' and 'put'\n\nGenerally, you would run the 'get' command against your test environment, and then run the 'put' command against your prod environment.\n\nYou can also use this functionality along with git version control systems and tools like Stash to do code reviews.\n\n#### GET\n\nThis will connect to the test environment for mytestapplication, and take all of the TM1 model objects and write them to your local disk.\n\nFrom your terminal, run the command:\n\n```\ntm1cm --mode get --environment test\n```\n\n#### PUT\n\nThis will connect to the test environment for mytestapplication, and update all of the model objets with the definition stored on the local computer\n\nFrom your terminal, run the command:\n\n```\ntm1cm --mode put --environment prod\n```\n\n## Contributing\n\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\n## License\n\n[GNU General Public License v3.0](https://choosealicense.com/licenses/gpl-3.0/)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ajmyers/tm1cm",
    "keywords": "tm1,planning analytics,ibm,pa,olap,cube",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tm1cm",
    "package_url": "https://pypi.org/project/tm1cm/",
    "platform": null,
    "project_url": "https://pypi.org/project/tm1cm/",
    "project_urls": {
      "Bug Reports": "https://github.com/ajmyers/tm1cm/issues",
      "Homepage": "https://github.com/ajmyers/tm1cm",
      "Source": "https://github.com/ajmyers/tm1cm"
    },
    "release_url": "https://pypi.org/project/tm1cm/0.9.3/",
    "requires_dist": [
      "TM1py (>=1.2.1)",
      "gitdb2 (==2.0.5)",
      "GitPython (==2.1.11)",
      "termcolor (==1.1.0)",
      "ntplib (==0.3.4)",
      "pyyaml (==6.0)"
    ],
    "requires_python": ">=3.7, <4",
    "summary": "A model migration library for TM1 Planning Analytics",
    "version": "0.9.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15871344,
  "releases": {
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4315114d0fdc7013715dbfaaf26ccb04b90a1848cdc4adbfa28f4aadb6de3812",
          "md5": "3774b3a6f73e101a342cae209dcf2264",
          "sha256": "7c3019a4a507b6c686e67cdba024e34fa95abba6db9e08d9eff491a18989b426"
        },
        "downloads": -1,
        "filename": "tm1cm-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3774b3a6f73e101a342cae209dcf2264",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 42187,
        "upload_time": "2022-11-23T14:50:28",
        "upload_time_iso_8601": "2022-11-23T14:50:28.288164Z",
        "url": "https://files.pythonhosted.org/packages/43/15/114d0fdc7013715dbfaaf26ccb04b90a1848cdc4adbfa28f4aadb6de3812/tm1cm-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf57fdc7f2d840f3779ef0abeb08aa6bb15bb5c2bb8063c67cc587c5b152f8d2",
          "md5": "eb6bcc2b4e6a9cbf79aae3fcdef30d70",
          "sha256": "092597aa935646cd2401883e5055d814197916f7c93d4c1e98058036e7fa7a49"
        },
        "downloads": -1,
        "filename": "tm1cm-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "eb6bcc2b4e6a9cbf79aae3fcdef30d70",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 44611,
        "upload_time": "2022-11-23T14:50:29",
        "upload_time_iso_8601": "2022-11-23T14:50:29.830557Z",
        "url": "https://files.pythonhosted.org/packages/bf/57/fdc7f2d840f3779ef0abeb08aa6bb15bb5c2bb8063c67cc587c5b152f8d2/tm1cm-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a181c375a72f50a4dba6ec66f0ea9ca30c370638cc5aa9455c19be1de11f505",
          "md5": "a734ce40afa7705e9217a3557244ad5e",
          "sha256": "88addf1f9ae09bfbe2cdb0f29d40eec071c10d02642acdebafca5dfada6b7f62"
        },
        "downloads": -1,
        "filename": "tm1cm-0.9.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a734ce40afa7705e9217a3557244ad5e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 41955,
        "upload_time": "2022-11-23T15:19:33",
        "upload_time_iso_8601": "2022-11-23T15:19:33.515358Z",
        "url": "https://files.pythonhosted.org/packages/7a/18/1c375a72f50a4dba6ec66f0ea9ca30c370638cc5aa9455c19be1de11f505/tm1cm-0.9.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "241d44333cba1b487a61e49a517c1348e0b0e3c843d5c7589831c56e3590cb9b",
          "md5": "1cc0bf0b867fdb3692ccbc13175fc813",
          "sha256": "1b9961c8efa96de7950996b4b84b664d17fbafad65b3bbe960556f445ee6bd0c"
        },
        "downloads": -1,
        "filename": "tm1cm-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1cc0bf0b867fdb3692ccbc13175fc813",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 44640,
        "upload_time": "2022-11-23T15:19:35",
        "upload_time_iso_8601": "2022-11-23T15:19:35.599954Z",
        "url": "https://files.pythonhosted.org/packages/24/1d/44333cba1b487a61e49a517c1348e0b0e3c843d5c7589831c56e3590cb9b/tm1cm-0.9.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc42b60af2999b5810ed21fcf527a41c0e7de42d892eef763e4f0dee541283b3",
          "md5": "0b18c6bca44a717f96de74f2fd121dc2",
          "sha256": "ecb72c4d791c4de65582c81d2cd0793c9ba85d791e0d2b4999b2341d682d90dc"
        },
        "downloads": -1,
        "filename": "tm1cm-0.9.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b18c6bca44a717f96de74f2fd121dc2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 41725,
        "upload_time": "2022-11-23T20:47:26",
        "upload_time_iso_8601": "2022-11-23T20:47:26.891657Z",
        "url": "https://files.pythonhosted.org/packages/cc/42/b60af2999b5810ed21fcf527a41c0e7de42d892eef763e4f0dee541283b3/tm1cm-0.9.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8ca8458cab446b420d217d790546cc2b8758ccbc2aceb7f3af5fee448990653",
          "md5": "59408b6b9d7b825440ddeea02d0f460b",
          "sha256": "5e3566b701bec2b82694d8429ed2270cff54a694834e4d8e6bce5f969ece4d3e"
        },
        "downloads": -1,
        "filename": "tm1cm-0.9.3.tar.gz",
        "has_sig": false,
        "md5_digest": "59408b6b9d7b825440ddeea02d0f460b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 44017,
        "upload_time": "2022-11-23T20:47:28",
        "upload_time_iso_8601": "2022-11-23T20:47:28.776739Z",
        "url": "https://files.pythonhosted.org/packages/b8/ca/8458cab446b420d217d790546cc2b8758ccbc2aceb7f3af5fee448990653/tm1cm-0.9.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc42b60af2999b5810ed21fcf527a41c0e7de42d892eef763e4f0dee541283b3",
        "md5": "0b18c6bca44a717f96de74f2fd121dc2",
        "sha256": "ecb72c4d791c4de65582c81d2cd0793c9ba85d791e0d2b4999b2341d682d90dc"
      },
      "downloads": -1,
      "filename": "tm1cm-0.9.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0b18c6bca44a717f96de74f2fd121dc2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <4",
      "size": 41725,
      "upload_time": "2022-11-23T20:47:26",
      "upload_time_iso_8601": "2022-11-23T20:47:26.891657Z",
      "url": "https://files.pythonhosted.org/packages/cc/42/b60af2999b5810ed21fcf527a41c0e7de42d892eef763e4f0dee541283b3/tm1cm-0.9.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b8ca8458cab446b420d217d790546cc2b8758ccbc2aceb7f3af5fee448990653",
        "md5": "59408b6b9d7b825440ddeea02d0f460b",
        "sha256": "5e3566b701bec2b82694d8429ed2270cff54a694834e4d8e6bce5f969ece4d3e"
      },
      "downloads": -1,
      "filename": "tm1cm-0.9.3.tar.gz",
      "has_sig": false,
      "md5_digest": "59408b6b9d7b825440ddeea02d0f460b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <4",
      "size": 44017,
      "upload_time": "2022-11-23T20:47:28",
      "upload_time_iso_8601": "2022-11-23T20:47:28.776739Z",
      "url": "https://files.pythonhosted.org/packages/b8/ca/8458cab446b420d217d790546cc2b8758ccbc2aceb7f3af5fee448990653/tm1cm-0.9.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}