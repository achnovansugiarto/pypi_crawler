{
  "info": {
    "author": "miphreal",
    "author_email": "miphreal@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "## Description\n\nCurrently EXPERIMENTAL.\n\n`gqltype` is a GraphQL schema generator from python type annotations.\n\n\n## Features\n\n- simple definition of GraphQL schema via python type annotations\n- builds schema based on `graphql-core>=3.0` library\n- asgi friendly\n\n\n## Installation\n\nUsing `pip`\n```bash\n$ pip install gqltype\n```\n\nUsing `poetry`\n```bash\n$ poetry add gqltype\n```\n\n\n## Quick intro\n\nLet's say we want to model the schema mentioned at the beginning of https://graphql.org/learn/schema/ tutorial.\n\n```python\nfrom dataclasses import dataclass\nfrom enum import Enum\nfrom typing import List\n\nimport gqltype\n\n\nclass Episode(Enum):\n    \"\"\"Codename for the episodes\"\"\"\n    NEWHOPE = \"new hope\"\n    EMPIRE = \"empire\"\n    JEDI = \"jedi\"\n\n\n@dataclass\nclass Character:\n    \"\"\"An individual person within the Star Wars universe\"\"\"\n    name: str\n    appears_in: List[Episode]\n\n\nclass LengthUnit(Enum):\n    \"\"\"Measure of length\"\"\"\n    METER = \"meter\"\n    INCH = \"inch\"\n\n\n@dataclass\nclass Starship:\n    \"\"\"A single transport craft that has hyperdrive capability\"\"\"\n    id: str\n    name: str\n    length: float\n\n    def resolve_length(self, unit: LengthUnit = LengthUnit.METER) -> float:\n        if unit == LengthUnit.INCH:\n            return self.length / 0.0254\n        return self.length\n\n\ndef get_character() -> Character:\n    return Character(name=\"R2D2\", appears_in=[Episode.JEDI, Episode.NEWHOPE])\n\n\nasync def get_starship() -> Starship:\n    return Starship(id=\"F1000\", name=\"Millennium Falcon\", length=34.75)\n\n\ndef add_character(name: str, appears_in: List[Episode]) -> Character:\n    return Character(name=name, appears_in=appears_in)\n\n\nschema = gqltype.Schema(\n    queries=[get_character, get_starship],\n    mutations=[add_character]\n)\n\nfrom graphql.utilities import print_schema\nprint(print_schema(schema.build()))\n```\n\nIt'll produce the following output\n```graphql\ntype Query {\n  getCharacter: Character!\n  getStarship: Starship!\n}\n\n\"\"\"An individual person within the Star Wars universe\"\"\"\ntype Character {\n  appearsIn: [Episode!]!\n  name: String!\n}\n\n\"\"\"Codename for the episodes\"\"\"\nenum Episode {\n  NEWHOPE\n  EMPIRE\n  JEDI\n}\n\n\"\"\"A single transport craft that has hyperdrive capability\"\"\"\ntype Starship {\n  length(unit: LengthUnit! = METER): Float!\n  id: ID!\n  name: String!\n}\n\n\"\"\"Measure of length\"\"\"\nenum LengthUnit {\n  METER\n  INCH\n}\n\ntype Mutation {\n  addCharacter(name: String!, appearsIn: [Episode!]!): Character!\n}\n```\n\nIn order to run server with this schema we can use Starlette\n```python\nif __name__ == \"__main__\":\n    import uvicorn\n    from gqltype.contrib.starlette import GraphQLApp\n    from starlette.applications import Starlette\n    from starlette.routing import Route\n\n    app = Starlette(routes=[Route(\"/graphql\", GraphQLApp(schema=schema))])\n    uvicorn.run(app)\n```\n\nExecuting\n```graphql\n{\n  getCharacter {\n    name\n    appearsIn\n  }\n\n  getStarship {\n    id\n    name\n    length(unit: INCH)\n  }\n}\n```\ngives\n```json\n{\n  \"data\": {\n    \"getCharacter\": {\n      \"name\": \"R2D2\",\n      \"appearsIn\": [\n        \"JEDI\",\n        \"NEWHOPE\"\n      ]\n    },\n    \"getStarship\": {\n      \"id\": \"F1000\",\n      \"name\": \"Millennium Falcon\",\n      \"length\": 1368.1102362204724\n    }\n  }\n}\n```\n\n## TODO\n\n- sanity checks\n    - warn if class and resolve method specify different types\n\n- generic resolvers for certain types?\n\n- gqltype.F ? -- field definition\n\n- core part and high level part\n\n- business level\n    - validation for input values\n    - serialization of output values\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/miphreal/gqltype",
    "keywords": "GraphQL,schema,graphql-core",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gqltype",
    "package_url": "https://pypi.org/project/gqltype/",
    "platform": "",
    "project_url": "https://pypi.org/project/gqltype/",
    "project_urls": {
      "Documentation": "https://github.com/miphreal/gqltype",
      "Homepage": "https://github.com/miphreal/gqltype",
      "Repository": "https://github.com/miphreal/gqltype"
    },
    "release_url": "https://pypi.org/project/gqltype/0.1.2/",
    "requires_dist": [
      "graphql-core (>=3.0)",
      "aniso8601"
    ],
    "requires_python": ">=3.6,<3.9",
    "summary": "Simple way to define GraphQL schema",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7361711,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d5e7f08aa1ba2d2bc7f97e4dd163c2343b9e2092a008249a8705202b9e88bb2",
          "md5": "a16e726a7684b0dee0997bae579b7bb1",
          "sha256": "7726efa5d688e8c5ea6c985e7442a81b48f98129c0474d5101fb215bab222fcc"
        },
        "downloads": -1,
        "filename": "gqltype-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a16e726a7684b0dee0997bae579b7bb1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<3.9",
        "size": 28674,
        "upload_time": "2020-05-30T23:19:33",
        "upload_time_iso_8601": "2020-05-30T23:19:33.956741Z",
        "url": "https://files.pythonhosted.org/packages/7d/5e/7f08aa1ba2d2bc7f97e4dd163c2343b9e2092a008249a8705202b9e88bb2/gqltype-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "134d7ec71c19cf6d03a0362411428a716995c2184ac078c57aa4e0ece53460ca",
          "md5": "34bbf6098f365644ac0a90a3aea5148a",
          "sha256": "2f7ce19fc6265e96d385aefda3d6083351cbf14379017f1ca6df1fa7fd9d498e"
        },
        "downloads": -1,
        "filename": "gqltype-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "34bbf6098f365644ac0a90a3aea5148a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<3.9",
        "size": 18991,
        "upload_time": "2020-05-30T23:19:36",
        "upload_time_iso_8601": "2020-05-30T23:19:36.491435Z",
        "url": "https://files.pythonhosted.org/packages/13/4d/7ec71c19cf6d03a0362411428a716995c2184ac078c57aa4e0ece53460ca/gqltype-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5e78c07ecd07f5f5889216c4708a9d43ebc70ff201a0c99118d9e642d81cf99",
          "md5": "bb590caa7e8835d49e6d3c2c161666e3",
          "sha256": "b2c28d265e14ced2e16e3fadd77122046bb688b505020d11fba60a913e626b01"
        },
        "downloads": -1,
        "filename": "gqltype-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bb590caa7e8835d49e6d3c2c161666e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<3.9",
        "size": 30193,
        "upload_time": "2020-05-30T23:26:50",
        "upload_time_iso_8601": "2020-05-30T23:26:50.824275Z",
        "url": "https://files.pythonhosted.org/packages/c5/e7/8c07ecd07f5f5889216c4708a9d43ebc70ff201a0c99118d9e642d81cf99/gqltype-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3aa2356d0e4afbcb2bc189c193b1357582cbd25ec2a9132aa87e5cb2378e10aa",
          "md5": "cc9925d3e3cd6e61df6a6a3d6f1f4210",
          "sha256": "c1857da015974e3638a1f052063723480b7eea9066e98fa385a77faeffd7bae9"
        },
        "downloads": -1,
        "filename": "gqltype-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cc9925d3e3cd6e61df6a6a3d6f1f4210",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<3.9",
        "size": 22395,
        "upload_time": "2020-05-30T23:26:52",
        "upload_time_iso_8601": "2020-05-30T23:26:52.607225Z",
        "url": "https://files.pythonhosted.org/packages/3a/a2/356d0e4afbcb2bc189c193b1357582cbd25ec2a9132aa87e5cb2378e10aa/gqltype-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c5e78c07ecd07f5f5889216c4708a9d43ebc70ff201a0c99118d9e642d81cf99",
        "md5": "bb590caa7e8835d49e6d3c2c161666e3",
        "sha256": "b2c28d265e14ced2e16e3fadd77122046bb688b505020d11fba60a913e626b01"
      },
      "downloads": -1,
      "filename": "gqltype-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bb590caa7e8835d49e6d3c2c161666e3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<3.9",
      "size": 30193,
      "upload_time": "2020-05-30T23:26:50",
      "upload_time_iso_8601": "2020-05-30T23:26:50.824275Z",
      "url": "https://files.pythonhosted.org/packages/c5/e7/8c07ecd07f5f5889216c4708a9d43ebc70ff201a0c99118d9e642d81cf99/gqltype-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3aa2356d0e4afbcb2bc189c193b1357582cbd25ec2a9132aa87e5cb2378e10aa",
        "md5": "cc9925d3e3cd6e61df6a6a3d6f1f4210",
        "sha256": "c1857da015974e3638a1f052063723480b7eea9066e98fa385a77faeffd7bae9"
      },
      "downloads": -1,
      "filename": "gqltype-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "cc9925d3e3cd6e61df6a6a3d6f1f4210",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<3.9",
      "size": 22395,
      "upload_time": "2020-05-30T23:26:52",
      "upload_time_iso_8601": "2020-05-30T23:26:52.607225Z",
      "url": "https://files.pythonhosted.org/packages/3a/a2/356d0e4afbcb2bc189c193b1357582cbd25ec2a9132aa87e5cb2378e10aa/gqltype-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}