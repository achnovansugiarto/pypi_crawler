{
  "info": {
    "author": "Du Shiqiao",
    "author_email": "lucidfrontier.45@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Prophet-NoGPL: Automatic Forecasting Procedure without GPL Dependency\n\nThis is a fork of the Prophet. Its aim is to completely remove PyStan2 dependency which is licensed under GPL.\n\n## How it works?\n\nPyStan2 is completely removed from the dependency and CmdStanPy is used instead. The preuilt stan model binary and dependenty shared library files are downloaded to the local directory at the first run. The direcory is set to `$HOME/.prophet/` by default and can be configured by the `PROPHET_MODEL_DIR_PATH` env var.  (see `CmdStanPyBackend` class in the `models.py`)\n\nCurrently, only linux x86_64 binary is prebuilt and downloaded. If you are using other platform, you need to compile the model file and dependent shared library (`libtbb.so.2`) by `comple_cmdstanpy_model.py`  and move them to the `PROPHET_MODEL_DIR_PATH`. To compile the model, you need to install CmdStan, CmdStanPy and C++ compiler. The prebuilt CmdStan can be downloaded from https://github.com/stan-dev/cmdstan/releases. After downloading one that is compatible to your system, untar and put it under `$HOME/.cmdstan`. The directory structure should be like this.\n\n```\n$HOME/\n    .cmdstan/\n        cmdstan-<version>/\n            bin/    \n```\n\nThen make sure there is a `stanc` executable in the `bin` directory. If there is only something like `linux-stanc`, `mac-stanc` etc, rename it to `stanc` and append exec permission.\n\nBelow is the original Readme content. Some of them can be inconsistent to this package.\n\n\n![Build](https://github.com/facebook/prophet/workflows/Build/badge.svg)\n[![Pypi_Version](https://img.shields.io/pypi/v/prophet.svg)](https://pypi.python.org/pypi/prophet)\n[![Conda_Version](https://anaconda.org/conda-forge/prophet/badges/version.svg)](https://anaconda.org/conda-forge/prophet/)\n[![CRAN status](https://www.r-pkg.org/badges/version/prophet)](https://CRAN.R-project.org/package=prophet)\n\nProphet is a procedure for forecasting time series data based on an additive model where non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects. It works best with time series that have strong seasonal effects and several seasons of historical data. Prophet is robust to missing data and shifts in the trend, and typically handles outliers well.\n\nProphet is [open source software](https://code.facebook.com/projects/) released by Facebook's [Core Data Science team](https://research.fb.com/category/data-science/). It is available for download on [CRAN](https://cran.r-project.org/package=prophet) and [PyPI](https://pypi.python.org/pypi/prophet/).\n\n## Important links\n\n- Homepage: https://facebook.github.io/prophet/\n- HTML documentation: https://facebook.github.io/prophet/docs/quick_start.html\n- Issue tracker: https://github.com/facebook/prophet/issues\n- Source code repository: https://github.com/facebook/prophet\n- Contributing: https://facebook.github.io/prophet/docs/contributing.html\n- Prophet R package: https://cran.r-project.org/package=prophet\n- Prophet Python package: https://pypi.python.org/pypi/prophet/\n- Release blogpost: https://research.fb.com/prophet-forecasting-at-scale/\n- Prophet paper: Sean J. Taylor, Benjamin Letham (2018) Forecasting at scale. The American Statistician 72(1):37-45 (https://peerj.com/preprints/3190.pdf).\n\n## Installation in R\n\nProphet is a [CRAN package](https://cran.r-project.org/package=prophet) so you can use `install.packages`.\n\n```r\ninstall.packages('prophet')\n```\n\nAfter installation, you can [get started!](https://facebook.github.io/prophet/docs/quick_start.html#r-api)\n\n#### Experimental backend - cmdstanr\n\nYou can also choose an experimental alternative stan backend called `cmdstanr`. Once you've installed `prophet`,\nfollow these instructions to use `cmdstanr` instead of `rstan` as the backend:\n\n```r\n# R\n# We recommend running this in a fresh R session or restarting your current session\ninstall.packages(c(\"cmdstanr\", \"posterior\"), repos = c(\"https://mc-stan.org/r-packages/\", getOption(\"repos\")))\n\n# If you haven't installed cmdstan before, run:\ncmdstanr::install_cmdstan()\n# Otherwise, you can point cmdstanr to your cmdstan path:\ncmdstanr::set_cmdstan_path(path = <your existing cmdstan>)\n\n# Set the R_STAN_BACKEND environment variable\nSys.setenv(R_STAN_BACKEND = \"CMDSTANR\")\n```\n\n### Windows\n\nOn Windows, R requires a compiler so you'll need to [follow the instructions](https://github.com/stan-dev/rstan/wiki/RStan-Getting-Started) provided by `rstan`. The key step is installing [Rtools](http://cran.r-project.org/bin/windows/Rtools/) before attempting to install the package.\n\nIf you have custom Stan compiler settings, install from source rather than the CRAN binary.\n\n## Installation in Python\n\nProphet is on PyPI, so you can use `pip` to install it. From v0.6 onwards, Python 2 is no longer supported. As of v1.0, the package name on PyPI is \"prophet\"; prior to v1.0 it was \"fbprophet\".\n\n```bash\n# Install pystan with pip before using pip to install prophet\n# pystan>=3.0 is currently not supported\npip install pystan==2.19.1.1\n\npip install prophet\n```\n\nThe default dependency that Prophet has is `pystan`. PyStan has its own [installation instructions](http://pystan.readthedocs.io/en/latest/installation_beginner.html). Install pystan with pip before using pip to install prophet.\n\n#### Experimental backend - cmdstanpy\n\nYou can also choose a (more experimental) alternative stan backend called `cmdstanpy`. It requires the [CmdStan](https://mc-stan.org/users/interfaces/cmdstan) command line interface and you will have to specify the environment variable `STAN_BACKEND` pointing to it, for example:\n\n```bash\n# bash\n$ CMDSTAN=/tmp/cmdstan-2.22.1 STAN_BACKEND=CMDSTANPY pip install prophet\n```\n\nNote that the `CMDSTAN` variable is directly related to `cmdstanpy` module and can be omitted if your CmdStan binaries are in your `$PATH`.\n\nIt is also possible to install Prophet with two backends:\n\n```bash\n# bash\n$ CMDSTAN=/tmp/cmdstan-2.22.1 STAN_BACKEND=PYSTAN,CMDSTANPY pip install prophet\n```\n\nAfter installation, you can [get started!](https://facebook.github.io/prophet/docs/quick_start.html#python-api)\n\nIf you upgrade the version of PyStan installed on your system, you may need to reinstall prophet ([see here](https://github.com/facebook/prophet/issues/324)).\n\n### Anaconda\n\nUse `conda install gcc` to set up gcc. The easiest way to install Prophet is through conda-forge: `conda install -c conda-forge prophet`.\n\n### Windows\n\nOn Windows, PyStan requires a compiler so you'll need to [follow the instructions](https://pystan2.readthedocs.io/en/latest/windows.html). The easiest way to install Prophet in Windows is in Anaconda.\n\n### Linux\n\nMake sure compilers (gcc, g++, build-essential) and Python development tools (python-dev, python3-dev) are installed. In Red Hat systems, install the packages gcc64 and gcc64-c++. If you are using a VM, be aware that you will need at least 4GB of memory to install prophet, and at least 2GB of memory to use prophet.\n\n## Changelog\n\n### Version 1.0 (2021.03.28)\n\n- Python package name changed from fbprophet to prophet\n- Fixed R Windows build issues to get latest version back on CRAN\n- Improvements in serialization, holidays, and R timezone handling\n- Plotting improvements\n\n### Version 0.7 (2020.09.05)\n\n- Built-in json serialization\n- Added \"flat\" growth option\n- Bugfixes related to `holidays` and `pandas`\n- Plotting improvements\n- Improvements in cross validation, such as parallelization and directly specifying cutoffs\n\n### Version 0.6 (2020.03.03)\n\n- Fix bugs related to upstream changes in `holidays` and `pandas` packages.\n- Compile model during first use, not during install (to comply with CRAN policy)\n- `cmdstanpy` backend now available in Python\n- Python 2 no longer supported\n\n### Version 0.5 (2019.05.14)\n\n- Conditional seasonalities\n- Improved cross validation estimates\n- Plotly plot in Python\n- Bugfixes\n\n### Version 0.4 (2018.12.18)\n\n- Added holidays functionality\n- Bugfixes\n\n### Version 0.3 (2018.06.01)\n\n- Multiplicative seasonality\n- Cross validation error metrics and visualizations\n- Parameter to set range of potential changepoints\n- Unified Stan model for both trend types\n- Improved future trend uncertainty for sub-daily data\n- Bugfixes\n\n### Version 0.2.1 (2017.11.08)\n\n- Bugfixes\n\n### Version 0.2 (2017.09.02)\n\n- Forecasting with sub-daily data\n- Daily seasonality, and custom seasonalities\n- Extra regressors\n- Access to posterior predictive samples\n- Cross-validation function\n- Saturating minimums\n- Bugfixes\n\n### Version 0.1.1 (2017.04.17)\n\n- Bugfixes\n- New options for detecting yearly and weekly seasonality (now the default)\n\n### Version 0.1 (2017.02.23)\n\n- Initial release\n\n## License\n\nProphet is licensed under the [MIT license](LICENSE).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lucidfrontier45/prophet-nogpl",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "prophet-nogpl",
    "package_url": "https://pypi.org/project/prophet-nogpl/",
    "platform": null,
    "project_url": "https://pypi.org/project/prophet-nogpl/",
    "project_urls": {
      "Homepage": "https://github.com/lucidfrontier45/prophet-nogpl",
      "Repository": "https://github.com/lucidfrontier45/prophet-nogpl"
    },
    "release_url": "https://pypi.org/project/prophet-nogpl/1.0.2/",
    "requires_dist": [
      "tqdm (>=4.63.0,<5.0.0)",
      "python-dateutil (>=2.8.2,<3.0.0)",
      "holidays (>=0.13,<0.14)",
      "convertdate (>=2.4.0,<3.0.0)",
      "LunarCalendar (>=0.0.9,<0.0.10)",
      "pandas (>=1.4.1,<2.0.0)",
      "matplotlib (>=3.5.1,<4.0.0)",
      "cmdstanpy (>=1.0.1,<2.0.0)",
      "requests (>=2.27.1,<3.0.0)"
    ],
    "requires_python": ">=3.8,<4",
    "summary": "",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13654836,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e464d574bc592f50d62fa07a45953403e76b393c90f6a020ecc28cd4178685c9",
          "md5": "488808531ffece63f52ab9aedd128786",
          "sha256": "97d890905913d0df9b8d320fc3bda99d2133758567f1725e0bcda39012c8f777"
        },
        "downloads": -1,
        "filename": "prophet_nogpl-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "488808531ffece63f52ab9aedd128786",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4",
        "size": 48044,
        "upload_time": "2022-03-13T11:29:35",
        "upload_time_iso_8601": "2022-03-13T11:29:35.820469Z",
        "url": "https://files.pythonhosted.org/packages/e4/64/d574bc592f50d62fa07a45953403e76b393c90f6a020ecc28cd4178685c9/prophet_nogpl-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "889145900941ac0b914a63ce10dc36d9d8f232acd7015c0e67b93b88ebc3b745",
          "md5": "2106f4db5701fb6c41451af93d0a9591",
          "sha256": "8f86390fe4116097e3decbab3bab3e52a86aca9463232e748c03f5005c0bd4da"
        },
        "downloads": -1,
        "filename": "prophet-nogpl-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2106f4db5701fb6c41451af93d0a9591",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4",
        "size": 67246,
        "upload_time": "2022-03-13T11:29:33",
        "upload_time_iso_8601": "2022-03-13T11:29:33.483420Z",
        "url": "https://files.pythonhosted.org/packages/88/91/45900941ac0b914a63ce10dc36d9d8f232acd7015c0e67b93b88ebc3b745/prophet-nogpl-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c44deb4d679de185174ab3c36c11ceecace14cca05c481d266d98a91f402ef7",
          "md5": "3dcb65f5e45d8149b631b73e3edd45b9",
          "sha256": "fc69308d0ae79eb853bcefe26f7f4cbc9ccd6f1b04d864f269b4e0f8ffb9f322"
        },
        "downloads": -1,
        "filename": "prophet_nogpl-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3dcb65f5e45d8149b631b73e3edd45b9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4",
        "size": 48045,
        "upload_time": "2022-04-21T03:46:57",
        "upload_time_iso_8601": "2022-04-21T03:46:57.821567Z",
        "url": "https://files.pythonhosted.org/packages/3c/44/deb4d679de185174ab3c36c11ceecace14cca05c481d266d98a91f402ef7/prophet_nogpl-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ec8614765089732644bcd17afb247f8f2ab9159ebe67b8b971c75d07875c2a0",
          "md5": "7c86cb4a0ce1e17a37ed3a06f823d21f",
          "sha256": "ccc21d947c66df85e2837ce5f0864299d7b27426842e08ea8328b82a51ae3aea"
        },
        "downloads": -1,
        "filename": "prophet-nogpl-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7c86cb4a0ce1e17a37ed3a06f823d21f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4",
        "size": 67251,
        "upload_time": "2022-04-21T03:46:55",
        "upload_time_iso_8601": "2022-04-21T03:46:55.745381Z",
        "url": "https://files.pythonhosted.org/packages/0e/c8/614765089732644bcd17afb247f8f2ab9159ebe67b8b971c75d07875c2a0/prophet-nogpl-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10955000b3297f02bbf259a30d6b0d23c42767c8e7c6a27c456b29f4670a317c",
          "md5": "febc4ec362f8ac604980bed0ada2354a",
          "sha256": "9fb0babe45efdd60594ac93fb13ac4c524905f9d3498a7db32d8cf19c2a52f56"
        },
        "downloads": -1,
        "filename": "prophet_nogpl-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "febc4ec362f8ac604980bed0ada2354a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4",
        "size": 48101,
        "upload_time": "2022-04-28T15:23:46",
        "upload_time_iso_8601": "2022-04-28T15:23:46.444891Z",
        "url": "https://files.pythonhosted.org/packages/10/95/5000b3297f02bbf259a30d6b0d23c42767c8e7c6a27c456b29f4670a317c/prophet_nogpl-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f1661235368295cbab49014f5995a34ab729a467118945b7950a342326e9ac1",
          "md5": "13d82c00dd99dfa363eb2df8a090c243",
          "sha256": "152d63f0a229dd9b5cf6502705be32cb48a935fb2e09b74b9c506c5c47b2aca9"
        },
        "downloads": -1,
        "filename": "prophet-nogpl-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "13d82c00dd99dfa363eb2df8a090c243",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4",
        "size": 67261,
        "upload_time": "2022-04-28T15:23:43",
        "upload_time_iso_8601": "2022-04-28T15:23:43.993286Z",
        "url": "https://files.pythonhosted.org/packages/2f/16/61235368295cbab49014f5995a34ab729a467118945b7950a342326e9ac1/prophet-nogpl-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10955000b3297f02bbf259a30d6b0d23c42767c8e7c6a27c456b29f4670a317c",
        "md5": "febc4ec362f8ac604980bed0ada2354a",
        "sha256": "9fb0babe45efdd60594ac93fb13ac4c524905f9d3498a7db32d8cf19c2a52f56"
      },
      "downloads": -1,
      "filename": "prophet_nogpl-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "febc4ec362f8ac604980bed0ada2354a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4",
      "size": 48101,
      "upload_time": "2022-04-28T15:23:46",
      "upload_time_iso_8601": "2022-04-28T15:23:46.444891Z",
      "url": "https://files.pythonhosted.org/packages/10/95/5000b3297f02bbf259a30d6b0d23c42767c8e7c6a27c456b29f4670a317c/prophet_nogpl-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f1661235368295cbab49014f5995a34ab729a467118945b7950a342326e9ac1",
        "md5": "13d82c00dd99dfa363eb2df8a090c243",
        "sha256": "152d63f0a229dd9b5cf6502705be32cb48a935fb2e09b74b9c506c5c47b2aca9"
      },
      "downloads": -1,
      "filename": "prophet-nogpl-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "13d82c00dd99dfa363eb2df8a090c243",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4",
      "size": 67261,
      "upload_time": "2022-04-28T15:23:43",
      "upload_time_iso_8601": "2022-04-28T15:23:43.993286Z",
      "url": "https://files.pythonhosted.org/packages/2f/16/61235368295cbab49014f5995a34ab729a467118945b7950a342326e9ac1/prophet-nogpl-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}