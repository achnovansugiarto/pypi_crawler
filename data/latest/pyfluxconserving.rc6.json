{
  "info": {
    "author": "Jean Gomes",
    "author_email": "antineutrinomuon@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Fortran",
      "Programming Language :: Python :: 3"
    ],
    "description": "### FluxConserving\n####  A Fortran legacy package to easily compute the flux-density conservation\nObs.: A Fortran legacy Interpolation routines also furnished <br>\nemail: [antineutrinomuon@gmail.com](mailto:antineutrinomuon@gmail.com), [jean@astro.up.pt](mailto:jean@astro.up.pt)\n\n\n© Copyright ®\n\nJ.G. - Jean Gomes\n\n<hr>\n\n[![My Skills](https://skillicons.dev/icons?i=python,fortran,c,numpy&theme=light)](https://skillicons.dev)<br>\n[![python3](https://img.shields.io/pypi/pyversions/pyfluxconserving)](https://img.shields.io/pypi/pyversions/pyfluxconserving)\n[![badgetlicense](https://anaconda.org/neutrinomuon/pyfluxconserving/badges/license.svg)](https://anaconda.org/neutrinomuon/pyfluxconserving/badges/license.svg)\n\n<hr>\n\n<div align=\"center\">\n<img src='https://github.com/neutrinomuon/FluxConserving/blob/main/tutorials/fluxconserving.png?raw=true' width=\"60%\">\n</div>\n\n<hr>\n\n#### <b>RESUME</b>\n\nOriginal Fortran 2003+ routines date back to 2003-2004. Read the <a\nhref='https://github.com/neutrinomuon/FluxConserving/blob/main/LICENSE.txt'>LICENSE.txt</a>\nfile. When analyzing astronomical spectra, astronomers often bin the data to\nincrease the signal-to-noise ratio and reduce the effects of noise in the\ndata. Binning refers to the process of averaging the intensity of adjacent\nspectral channels, or pixels, to produce a new, coarser set of data.\n\nIn the process of binning, it is important to ensure that the principle of\nflux density conservation is maintained. This means that the total energy\nemitted by the object, and hence its flux density, must remain constant after\nbinning.\n\nTo conserve flux density, the intensity of each binned pixel should be scaled\nby the number of pixels it represents. For example, if two adjacent pixels are\nbinned together, the intensity of the resulting bin should be the sum of the\nintensities of the two original pixels, divided by two. This ensures that the\ntotal energy in the bin is conserved, and that the flux density of the object\nremains the same.\n\nIt's worth noting that binning can introduce errors in the spectral data,\nespecially if the signal-to-noise ratio is low or if the binning is too\ncoarse. In general, astronomers choose a binning size that balances the need\nfor a high signal-to-noise ratio with the desire to maintain the spectral\nresolution and avoid introducing significant errors in the data.\n\nIn summary, the principle of flux density conservation is important to\nconsider when binning astronomical spectra, and astronomers need to scale the\nintensity of each binned pixel to ensure that the total energy emitted by the\nobject is conserved. SpectRes from A. Carnall is *NOT* part of the distribution,\nbut used as a comparison: <a\nhref='https://github.com/ACCarnall/SpectRes'>https://github.com/ACCarnall/SpectRes</a>.\n\nAccompanying there are several routines for interpolations.\n\n<hr>\n\n#### <b>INSTALLATION</b>\n\nYou can easily install <a\nhref=https://pypi.org/project/pyfluxconserving/>pyfluxconserving</a> by using pip -\n<a href='https://pypi.org/'>PyPI - The Python Package Index</a>:\n\n<pre>\npip install pyfluxconserving\n</pre>\n\n<br>or by using a generated conda repository <a\nhref='https://anaconda.org/neutrinomuon/pyfluxconserving'>https://anaconda.org/neutrinomuon/pyfluxconserving</a>:\n\n[![badgetanaconda](https://anaconda.org/neutrinomuon/pyfluxconserving/badges/version.svg)](https://anaconda.org/neutrinomuon/pyfluxconserving/badges/version.svg)\n[![badgetreleasedate](https://anaconda.org/neutrinomuon/pyfluxconserving/badges/latest_release_date.svg)](https://anaconda.org/neutrinomuon/pyfluxconserving/badges/latest_release_date.svg)\n[![badgetplatforms](https://anaconda.org/neutrinomuon/pyfluxconserving/badges/platforms.svg\n)](https://anaconda.org/neutrinomuon/pyfluxconserving/badges/platforms.svg)\n\n<pre>\nconda install -c neutrinomuon pyfluxconserving\n</pre>\n\n<br>OBS.: Linux, OS-X and Windows pre-compilations available in conda.\n\nYou can also clone the repository and install by yourself in your machine:\n\n<pre>\ngit clone https://github.com/neutrinomuon/FluxConserving\npython setup.py install\n</pre>\n\n<hr>\n\n#### <b>METHOD & REFERENCES</b>\n\nHere, the method used is with the Cumulative function to produce a new\nflux-conserved, some options can be chosen for the interpolation:\n\n<table>\n\n<tr><td><ol>Integer Number</ol></td><td><ol>Option: Interpolation Schemes</ol></td><td><ol>Brief Description</ol></td></tr>\n\n<tr><td><ol>0)</ol></td><td><ol>AkimaSpline</ol></td><td><ol>Akima Spline interpolation. The Akima\nspline is a C1 differentiable function (that is, has a continuous first\nderivative) but, in general, will have a discontinuous second derivative at\nthe knot points.</ol><p>\n                                                                           \n<ol>\n\n<li>Akima, H. (1970). A New Method of Interpolation and Smooth Curve Fitting\nBased on Local Procedures. <i>Journal of the ACM</i>, 17(4),\n589-602. Association for Computing Machinery. DOI:\n10.1145/321607.321609. Link: <a\nhref=\"https://dl.acm.org/doi/10.1145/321607.321609\">https://dl.acm.org/doi/10.1145/321607.321609</a></li>\n\n<li>De Boor, C. (1978). A Practical Guide to Splines. Springer-Verlag. ISBN:\n978-0-387-95366-3. Link: <a\nhref=\"https://www.springer.com/gp/book/9780387953663\">https://www.springer.com/gp/book/9780387953663</a></li>\n\n<li>Forsythe, G.E. (1979) <i>Computer Methods for Mathematical\nComputations</i>. Prentice-Hall, Inc. DOI: 10.1002/zamm.19790590235. Link: <a\nhref=\"https://onlinelibrary.wiley.com/doi/10.1002/zamm.19790590235\">https://onlinelibrary.wiley.com/doi/10.1002/zamm.19790590235</a></li>\n\n<li>Bartels, R.H., Beatty, J.C., and Barsky, B.A. (1987). An Introduction to\nSplines for Use in Computer Graphics and Geometric Modeling. Morgan Kaufmann\nPublishers. Link: <a\nhref=\"https://www.osti.gov/biblio/5545263\">https://www.osti.gov/biblio/5545263</a></li>\n\n<li>Press, W. H., Teukolsky, S. A., Vetterling, W. T., &amp; Flannery,\nB. P. (2007). Numerical Recipes: The Art of Scientific Computing (3rd\ned.). Cambridge University Press. ISBN: 978-0521880688. Link: <a\nhref=\"http://numerical.recipes/\">http://numerical.recipes/</a></li>\n\n<li>Cheney, W. and Kincaid, D. (2008). Numerical Mathematics and Computing\n(6th ed.). Brooks/Cole. ISBN: 978-0495114758. Link: <a\nhref=\"https://www.amazon.com/Numerical-Mathematics-Computing-Ward-Cheney/dp/0495114758\">https://www.amazon.com/Numerical-Mathematics-Computing-Ward-Cheney/dp/0495114758</a></li>\n\n<li>Burden, R. L., &amp; Faires, J. D. (2010). Numerical Analysis (9th\ned.). Brooks/Cole. ISBN: 978-0538733519. Link: <a\nhref=\"https://www.amazon.com/Numerical-Analysis-Richard-L-Burden/dp/0538733519\">https://www.amazon.com/Numerical-Analysis-Richard-L-Burden/dp/0538733519</a></li>\n\n</ol>\n\n</td></tr>\n\n<tr><td>1)</td><td>Interpolado</td><td>Based on a linear interpolation within\na table of pair values.<p>\n\n<ol>\n\n<li>Atkinson, K. E. (1991). <i>An introduction to numerical analysis</i> (2nd\ned.). John Wiley & Sons. ISBN: 978-0-471-62489-9. Link: <a\nhref=\"https://www.wiley.com/en-us/An+Introduction+to+Numerical+Analysis%2C+2nd+Edition-p-9780471624899\">https://www.wiley.com/en-us/An+Introduction+to+Numerical+Analysis%2C+2nd+Edition-p-9780471624899</a></li>\n\n<li>Press, W. H., Teukolsky, S. A., Vetterling, W. T., &amp; Flannery,\nB. P. (2007). <em>Numerical Recipes: The Art of Scientific Computing</em> (3rd\ned.). Cambridge University Press. ISBN: 978-0521880688. Link: <a\nhref=\"http://numerical.recipes/\">http://numerical.recipes/</a></li>\n\n<li>Chapra, S. C., & Canale, R. P. (2010). <i>Numerical methods for\nengineers</i> (6th ed.). McGraw-Hill. ISBN: 978-0073401065. Link: <a\nhref=\"https://www.amazon.com/Numerical-Methods-Engineers-Steven-Chapra/dp/0073401064\">https://www.amazon.com/Numerical-Methods-Engineers-Steven-Chapra/dp/0073401064</a></li>\n\n<li>Burden, R. L., Faires, J. D. & A.M. Burden (2015). <i>Numerical analysis (10th\ned.)</i> (9th ed.). Cengage Learning. ISBN: 978-1305253667. Link: <a\nhref=\"https://www.amazon.com/Numerical-Analysis-Richard-L-Burden/dp/1305253663\">https://www.amazon.com/Numerical-Analysis-Richard-L-Burden/dp/1305253663</a></li>\n\n</ol>\n\n\n</td></tr>\n\n<tr><td><ol>2)</ol></td><td><ol>LINdexerpol</ol></td><td><ol>Based on a linear interpolation within\na table of pair values using indexing. The references are the same as in\n1).</ol></td></tr>\n\n<tr><td><ol>3)</ol></td><td><ol>LINinterpol</ol></td><td><ol>Based on a linear interpolation within\na table of pair values. The references are the same as in 1).</ol></td></tr>\n\n<tr><td><ol>4)</ol></td><td><ol>SPLINE1DArr</ol></td><td><ol>This is a Fortran 2003 subroutine\ncalled SPLINE1DArr that takes an array of values x to interpolate from the\narrays t and y. It has ten input arguments, six output arguments, and two\noptional arguments. The interpolation is linear.</ol><p>\n\n<ol>\n\n<li>Forsythe, G.E. (1977) <em>Computer Methods For Mathematical\nComputations</em>. Ed. Prentice-Hall, Inc. <a\nhref=\"https://onlinelibrary.wiley.com/doi/abs/10.1002/zamm.19790590235\">https://onlinelibrary.wiley.com/doi/abs/10.1002/zamm.19790590235</a></li>\n\n<li>De Boor, C. (1978). <em>A Practical Guide to\nSplines</em>. Springer-Verlag. ISBN: 978-0-387-95366-3. Link: <a\nhref=\"https://www.springer.com/gp/book/9780387953663\">https://www.springer.com/gp/book/9780387953663</a></li>\n\n<li>Bartels, R.H., Beatty, J.C., and Barsky, B.A. (1998). <em>An Introduction\nto Splines for Use in Computer Graphics and Geometric Modeling</em>. Morgan\nKaufmann Publishers. ISBN: 978-1558604000. Link: <a\nhref=\"https://www.amazon.com/Introduction-Computer-Graphics-Geometric-Modeling/dp/1558604006\">https://www.amazon.com/Introduction-Computer-Graphics-Geometric-Modeling/dp/1558604006</a></li>\n\n<li>Press, W. H., Teukolsky, S. A., Vetterling, W. T., &amp; Flannery,\nB. P. (2007). <em>Numerical Recipes: The Art of Scientific Computing</em> (3rd\ned.). Cambridge University Press. ISBN: 978-0521880688. Link: <a\nhref=\"http://numerical.recipes/\">http://numerical.recipes/</a></li>\n\n<li>Cheney, W. and Kincaid, D. (2007). <em>Numerical Mathematics and\nComputing</em> (6th ed.). Brooks/Cole. ISBN: 978-0495114758. Link: <a\nhref=\"https://www.amazon.com/Numerical-Mathematics-Computing-Ward-Cheney/dp/0495114758\">https://www.amazon.com/Numerical-Mathematics-Computing-Ward-Cheney/dp/0495114758</a></li>\n\n</ol>\n</td></tr>\n\n<tr><td><ol>5)</ol></td><td><ol>SPLINE3DFor</ol></td><td><ol>This function evaluates the cubic\nspline interpolation. The same references as in 4).</ol></td></tr>\n\n</table>\n\n<hr>\n\n#### <b>STRUCTURE</b>\n\nThe main structure of the directories and files are:\n\n<pre>\nFluxConserving\n├── dist\n│   └── pyfluxconserving-0.0.1.tar.gz\n├── README.md\n├── LICENSE.txt\n├── setup.py\n├── tutorials\n│   ├── fluxconserving.png\n│   └── Flux-Conserving Example.ipynb\n├── pyfluxconserving.egg-info\n│   ├── PKG-INFO\n│   ├── dependency_links.txt\n│   ├── SOURCES.txt\n│   ├── top_level.txt\n│   └── requires.txt\n├── src\n│   ├── python\n│   │   ├── PyFluxConSpec.py\n│   │   ├── califa_cmap_alternative.py\n│   │   ├── PyLinear__int.py\n│   │   ├── PyLINinterpol.py\n│   │   ├── PySPLINECubic.py\n│   │   ├── fluxconserve.py\n│   │   ├── __init__.py\n│   │   ├── PySPLINE1DArr.py\n│   │   ├── PySPLINE3DFor.py\n│   │   ├── fluxconserving.png\n│   │   ├── PyAkimaSpline.py\n│   │   ├── PySPLINE3DAlt.py\n│   │   ├── PyInterpolado.py\n│   │   └── PyLINdexerpol.py\n│   └── fortran\n│       ├── LINdexerpol.f90\n│       ├── SPLINE3DFor.cpython-39-x86_64-linux-gnu.so\n│       ├── SPLINE1DFlt.cpython-39-x86_64-linux-gnu.so\n│       ├── SPLINE3DFor.compile\n│       ├── FluxConSpec.compile\n│       ├── SPLINE1DArr.compile\n│       ├── Interpolado.cpython-39-x86_64-linux-gnu.so\n│       ├── Interpolado.cpython-38-x86_64-linux-gnu.so\n│       ├── SPLINE1DFlt.f90\n│       ├── AkimaSpline.f90\n│       ├── SPLINE1DArr.f90\n│       ├── SPLINE1DFlt.cpython-38-x86_64-linux-gnu.so\n│       ├── SPLINE3DFor.cpython-38-x86_64-linux-gnu.so\n│       ├── AkimaSpline.compile\n│       ├── DataTypes.f90\n│       ├── LINdexerpol.compile\n│       ├── SPLINE3DFor.f90\n│       ├── SPLINE1DFlt.compile\n│       ├── Interpolado.f90\n│       ├── SPLINE1DFlt.cpython-310-x86_64-linux-gnu.so\n│       ├── FluxConSpec.f90\n│       ├── Interpolado.cpython-310-x86_64-linux-gnu.so\n│       ├── LINdexerpol.cpython-310-x86_64-linux-gnu.so\n│       ├── README.txt\n│       ├── Interpolado.compile\n│       ├── SPLINE3DFor.cpython-310-x86_64-linux-gnu.so\n│       ├── LINinterpol.f90\n│       ├── LINdexerpol.cpython-39-x86_64-linux-gnu.so\n│       └── LINdexerpol.cpython-38-x86_64-linux-gnu.so\n├── version.txt\n└── build\n    ├── lib.linux-x86_64-3.9\n    │   └── pyfluxconserving\n    ├── src.linux-x86_64-3.9\n    │   ├── pyfluxconserving\n    │   ├── build\n    │   └── numpy\n    └── temp.linux-x86_64-3.9\n        ├── pyfluxconserving\n        ├── ccompiler_opt_cache_ext.py\n        ├── src\n        ├── .libs\n        └── build\n\n18 directories, 56 files\n</pre>\n\n<br>PyFluxConSPec.py is a python wrapper to the library in fortran called\npyfluxconserving.flib. The fortran directory can be compiled separately for\neach individual subroutine.\n\n<hr>\n\n#### <b>LICENSE</b>\n\nThis software is provided \"AS IS\" (see DISCLAIMER below). Permission to\nuse, for non-commercial purposes is granted. Permission to modify for personal\nor internal use is granted, provided this copyright and disclaimer are\nincluded in ALL copies of the software. All other rights are reserved. In\nparticular, redistribution of the code is not allowed without explicit\npermission by the author.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/neutrinomuon/Pyfluxconserving",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyfluxconserving",
    "package_url": "https://pypi.org/project/pyfluxconserving/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyfluxconserving/",
    "project_urls": {
      "Homepage": "https://github.com/neutrinomuon/Pyfluxconserving"
    },
    "release_url": "https://pypi.org/project/pyfluxconserving/0.0.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "FluxConserving is a set of Fortran 2003+ legacy routines with Python. There are some options for the flux-conserving algorithm. It also includes interpolation scripts.",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16992420,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd71a6eec18e2fd02b65653ca51d94bf6170251d67528637139e61215cce5338",
          "md5": "9c5a5b5f80e4215fde503d2779070987",
          "sha256": "9af23b401ac209cdc807ead496d560b0677c96d47e4b31b8aa0e9c9ac68f8abe"
        },
        "downloads": -1,
        "filename": "pyfluxconserving-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9c5a5b5f80e4215fde503d2779070987",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42562,
        "upload_time": "2023-02-20T17:11:35",
        "upload_time_iso_8601": "2023-02-20T17:11:35.403072Z",
        "url": "https://files.pythonhosted.org/packages/bd/71/a6eec18e2fd02b65653ca51d94bf6170251d67528637139e61215cce5338/pyfluxconserving-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "683364e8871228c88cfb3f6faf66c34ec174494ade13f5ab17cbf1d83432656d",
          "md5": "37c99804182bf9df832f5127d889418d",
          "sha256": "0e3d12a7e10c71ff55c64857874d5c122515e001e99905b8fdb4fb000984aac5"
        },
        "downloads": -1,
        "filename": "pyfluxconserving-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "37c99804182bf9df832f5127d889418d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42289,
        "upload_time": "2023-02-22T12:07:56",
        "upload_time_iso_8601": "2023-02-22T12:07:56.544580Z",
        "url": "https://files.pythonhosted.org/packages/68/33/64e8871228c88cfb3f6faf66c34ec174494ade13f5ab17cbf1d83432656d/pyfluxconserving-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17a361a4773ecc199468e776506829046ecef463f5f736ced7b832c329ad182a",
          "md5": "669a8145cea8383ee9832a86efd2ed9f",
          "sha256": "8b0d30940ef39590a1b2414ebf2265b54e91fa17b6db5768894b21b53c6a80ec"
        },
        "downloads": -1,
        "filename": "pyfluxconserving-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "669a8145cea8383ee9832a86efd2ed9f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42727,
        "upload_time": "2023-02-23T11:00:50",
        "upload_time_iso_8601": "2023-02-23T11:00:50.249579Z",
        "url": "https://files.pythonhosted.org/packages/17/a3/61a4773ecc199468e776506829046ecef463f5f736ced7b832c329ad182a/pyfluxconserving-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "689a15f7db8e92393eb8b39d42c704b59f978cc8af27d16047ec1e3fe964d7db",
          "md5": "d17e1f0a1dd228cbe6af3fa3e39a3cd0",
          "sha256": "28a0c3cc2d531fada378d67e737595349f1bf00033c9d99a2c174e3ca0c83a71"
        },
        "downloads": -1,
        "filename": "pyfluxconserving-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d17e1f0a1dd228cbe6af3fa3e39a3cd0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42740,
        "upload_time": "2023-02-23T11:02:40",
        "upload_time_iso_8601": "2023-02-23T11:02:40.171856Z",
        "url": "https://files.pythonhosted.org/packages/68/9a/15f7db8e92393eb8b39d42c704b59f978cc8af27d16047ec1e3fe964d7db/pyfluxconserving-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79b00465d9a71899e8f51aa7715fd92655f832f538f4ef1d1381bc7bab8ad996",
          "md5": "b828a66223ad0ed5567554bc257f2e52",
          "sha256": "2a184d85d44fb5a678a4d814b93f62d5aaf5f8908e70328dd34618c152e4ec0a"
        },
        "downloads": -1,
        "filename": "pyfluxconserving-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b828a66223ad0ed5567554bc257f2e52",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42724,
        "upload_time": "2023-02-23T11:49:29",
        "upload_time_iso_8601": "2023-02-23T11:49:29.070317Z",
        "url": "https://files.pythonhosted.org/packages/79/b0/0465d9a71899e8f51aa7715fd92655f832f538f4ef1d1381bc7bab8ad996/pyfluxconserving-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf1cf57d7415b77a26bc09d33fc064b715722027e6542cea31ab1819d0d275bf",
          "md5": "65c1d84a2024f83653a2e9a9124f3281",
          "sha256": "2523d67df4ab8278ba2dacb422148f9eb039c27e16cfdd99ed03d8413761ae28"
        },
        "downloads": -1,
        "filename": "pyfluxconserving-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "65c1d84a2024f83653a2e9a9124f3281",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42801,
        "upload_time": "2023-02-23T11:51:39",
        "upload_time_iso_8601": "2023-02-23T11:51:39.069174Z",
        "url": "https://files.pythonhosted.org/packages/bf/1c/f57d7415b77a26bc09d33fc064b715722027e6542cea31ab1819d0d275bf/pyfluxconserving-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bf1cf57d7415b77a26bc09d33fc064b715722027e6542cea31ab1819d0d275bf",
        "md5": "65c1d84a2024f83653a2e9a9124f3281",
        "sha256": "2523d67df4ab8278ba2dacb422148f9eb039c27e16cfdd99ed03d8413761ae28"
      },
      "downloads": -1,
      "filename": "pyfluxconserving-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "65c1d84a2024f83653a2e9a9124f3281",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 42801,
      "upload_time": "2023-02-23T11:51:39",
      "upload_time_iso_8601": "2023-02-23T11:51:39.069174Z",
      "url": "https://files.pythonhosted.org/packages/bf/1c/f57d7415b77a26bc09d33fc064b715722027e6542cea31ab1819d0d275bf/pyfluxconserving-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}