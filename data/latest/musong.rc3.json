{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Education",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Image Recognition",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<h1 align=\"center\">\n  packaged ultralytics/yolov5\n</h1>\n\n<h4 align=\"center\">\n  pip install yolov5\n</h4>\n\n<div align=\"center\">\n  <a href=\"https://pepy.tech/project/yolov5\"><img src=\"https://pepy.tech/badge/yolov5\" alt=\"total downloads\"></a>\n  <a href=\"https://pepy.tech/project/yolov5\"><img src=\"https://pepy.tech/badge/yolov5/month\" alt=\"monthly downloads\"></a>\n  <a href=\"https://twitter.com/fcakyon\"><img src=\"https://img.shields.io/twitter/follow/fcakyon?color=blue&logo=twitter&style=flat\" alt=\"fcakyon twitter\"></a>\n  <br>\n  <a href=\"https://badge.fury.io/py/yolov5\"><img src=\"https://badge.fury.io/py/yolov5.svg?kill_cache=1\" alt=\"pypi version\"></a>\n  <a href=\"https://github.com/fcakyon/yolov5-pip/actions/workflows/ci.yml\"><img src=\"https://github.com/fcakyon/yolov5-pip/actions/workflows/ci.yml/badge.svg\" alt=\"ci testing\"></a>\n  <a href=\"https://github.com/fcakyon/yolov5-pip/actions/workflows/package_testing.yml\"><img src=\"https://github.com/fcakyon/yolov5-pip/actions/workflows/package_testing.yml/badge.svg\" alt=\"package testing\"></a>\n</div>\n\n## <div align=\"center\">Overview</div>\n\n<div align=\"center\">\nYou can finally install <a href=\"https://github.com/ultralytics/yolov5\">YOLOv5 object detector</a> using <a href=\"https://pypi.org/project/yolov5/\">pip</a> and integrate into your project easily.\n\n<img src=\"https://user-images.githubusercontent.com/26833433/136901921-abcfcd9d-f978-4942-9b97-0e3f202907df.png\" width=\"1000\">\n</div>\n\n<br>\nThis yolov5 package contains everything from ultralytics/yolov5 <a href=\"https://github.com/ultralytics/yolov5/tree/357cde9ee7da13ba3095995488c5a23631467f1a\">at this commit</a> plus:\n<br>\n1. Easy installation via pip: <b>pip install yolov5</b>\n<br>\n2. Full CLI integration with <a href=\"https://github.com/google/python-fire\">fire</a> package\n<br>\n3. COCO dataset format support (for training)\n<br>\n4. Full <a href=\"https://huggingface.co/models?other=yolov5\">ðŸ¤— Hub</a> integration\n<br>\n5. <a href=\"https://aws.amazon.com/s3/\">S3</a> support (model and dataset upload)\n<br>\n6. <a href=\"https://neptune.ai/\">NeptuneAI</a> logger support (metric, model and dataset logging)\n<br>\n7. Classwise AP logging during experiments\n\n\n\n## <div align=\"center\">Install</div>\n\nInstall yolov5 using pip (for Python >=3.7)\n\n```console\npip install yolov5\n```\n\n## <div align=\"center\">Model Zoo</div>\n\n\n\n<div align=\"center\">\n\nEffortlessly explore and use finetuned YOLOv5 models with one line of code: <a href=\"https://github.com/keremberke/awesome-yolov5-models\">awesome-yolov5-models</a>\n\n<a href=\"https://github.com/keremberke/awesome-yolov5-models\"><img src=\"https://user-images.githubusercontent.com/34196005/210134158-108b24f4-2b8e-43ea-95c8-44731625cde2.gif\" width=\"640\"></a>\n</div>\n\n## <div align=\"center\">Use from Python</div>\n\n```python\nimport yolov5\n\n# load pretrained model\nmodel = yolov5.load('yolov5s.pt')\n\n# or load custom model\nmodel = yolov5.load('train/best.pt')\n  \n# set model parameters\nmodel.conf = 0.25  # NMS confidence threshold\nmodel.iou = 0.45  # NMS IoU threshold\nmodel.agnostic = False  # NMS class-agnostic\nmodel.multi_label = False  # NMS multiple labels per box\nmodel.max_det = 1000  # maximum number of detections per image\n\n# set image\nimg = 'https://github.com/ultralytics/yolov5/raw/master/data/images/zidane.jpg'\n\n# perform inference\nresults = model(img)\n\n# inference with larger input size\nresults = model(img, size=1280)\n\n# inference with test time augmentation\nresults = model(img, augment=True)\n\n# parse results\npredictions = results.pred[0]\nboxes = predictions[:, :4] # x1, y1, x2, y2\nscores = predictions[:, 4]\ncategories = predictions[:, 5]\n\n# show detection bounding boxes on image\nresults.show()\n\n# save results into \"results/\" folder\nresults.save(save_dir='results/')\n\n```\n\n<details closed>\n<summary>Train/Detect/Test/Export</summary>\n\n- You can directly use these functions by importing them:\n\n```python\nfrom yolov5 import train, val, detect, export\n# from yolov5.classify import train, val, predict\n# from yolov5.segment import train, val, predict\n\ntrain.run(imgsz=640, data='coco128.yaml')\nval.run(imgsz=640, data='coco128.yaml', weights='yolov5s.pt')\ndetect.run(imgsz=640)\nexport.run(imgsz=640, weights='yolov5s.pt')\n```\n\n- You can pass any argument as input:\n\n```python\nfrom yolov5 import detect\n\nimg_url = 'https://github.com/ultralytics/yolov5/raw/master/data/images/zidane.jpg'\n\ndetect.run(source=img_url, weights=\"yolov5s6.pt\", conf_thres=0.25, imgsz=640)\n\n```\n\n</details>\n\n## <div align=\"center\">Use from CLI</div>\n\nYou can call `yolov5 train`, `yolov5 detect`, `yolov5 val` and `yolov5 export` commands after installing the package via `pip`:\n\n<details open>\n<summary>Training</summary>\n\n- Finetune one of the pretrained YOLOv5 models using your custom `data.yaml`:\n\n```bash\n$ yolov5 train --data data.yaml --weights yolov5s.pt --batch-size 16 --img 640\n                                          yolov5m.pt              8\n                                          yolov5l.pt              4\n                                          yolov5x.pt              2\n```\n\n- Start a training using a COCO formatted dataset:\n\n```yaml\n# data.yml\ntrain_json_path: \"train.json\"\ntrain_image_dir: \"train_image_dir/\"\nval_json_path: \"val.json\"\nval_image_dir: \"val_image_dir/\"\n```\n\n```bash\n$ yolov5 train --data data.yaml --weights yolov5s.pt\n```\n\n- Visualize your experiments via [Neptune.AI](https://neptune.ai/) (neptune-client>=0.10.10 required):\n\n```bash\n$ yolov5 train --data data.yaml --weights yolov5s.pt --neptune_project NAMESPACE/PROJECT_NAME --neptune_token YOUR_NEPTUNE_TOKEN\n```\n\n- Automatically upload weights to [Huggingface Hub](https://huggingface.co/models?other=yolov5):\n\n```bash\n$ yolov5 train --data data.yaml --weights yolov5s.pt --hf_model_id username/modelname --hf_token YOUR-HF-WRITE-TOKEN\n```\n\n- Automatically upload weights and datasets to AWS S3 (with Neptune.AI artifact tracking integration):\n\n```bash\nexport AWS_ACCESS_KEY_ID=YOUR_KEY\nexport AWS_SECRET_ACCESS_KEY=YOUR_KEY\n```\n\n```bash\n$ yolov5 train --data data.yaml --weights yolov5s.pt --s3_upload_dir YOUR_S3_FOLDER_DIRECTORY --upload_dataset\n```\n\n- Add `yolo_s3_data_dir` into `data.yaml` to match Neptune dataset with a present dataset in S3.\n\n```yaml\n# data.yml\ntrain_json_path: \"train.json\"\ntrain_image_dir: \"train_image_dir/\"\nval_json_path: \"val.json\"\nval_image_dir: \"val_image_dir/\"\nyolo_s3_data_dir: s3://bucket_name/data_dir/\n```\n\n</details>\n\n<details open>\n<summary>Inference</summary>\n\nyolov5 detect command runs inference on a variety of sources, downloading models automatically from the [latest YOLOv5 release](https://github.com/ultralytics/yolov5/releases) and saving results to `runs/detect`.\n\n```bash\n$ yolov5 detect --source 0  # webcam\n                         file.jpg  # image\n                         file.mp4  # video\n                         path/  # directory\n                         path/*.jpg  # glob\n                         rtsp://170.93.143.139/rtplive/470011e600ef003a004ee33696235daa  # rtsp stream\n                         rtmp://192.168.1.105/live/test  # rtmp stream\n                         http://112.50.243.8/PLTV/88888888/224/3221225900/1.m3u8  # http stream\n```\n\n</details>\n\n<details open>\n<summary>Export</summary>\n\nYou can export your fine-tuned YOLOv5 weights to any format such as `torchscript`, `onnx`, `coreml`, `pb`, `tflite`, `tfjs`:\n\n```bash\n$ yolov5 export --weights yolov5s.pt --include torchscript,onnx,coreml,pb,tfjs\n```\n\n</details>\n\n<details open>\n<summary>Classify</summary>\n\nTrain/Val/Predict with YOLOv5 image classifier:\n\n```bash\n$ yolov5 classify train --img 640 --data mnist2560 --weights yolov5s-cls.pt --epochs 1\n```\n\n```bash\n$ yolov5 classify predict --img 640 --weights yolov5s-cls.pt --source images/\n```\n\n</details>\n\n<details open>\n<summary>Segment</summary>\n\nTrain/Val/Predict with YOLOv5 instance segmentation model:\n\n```bash\n$ yolov5 segment train --img 640 --weights yolov5s-seg.pt --epochs 1\n```\n\n```bash\n$ yolov5 segment predict --img 640 --weights yolov5s-seg.pt --source images/\n```\n\n</details>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fcakyon/yolov5-pip",
    "keywords": "machine-learning,deep-learning,ml,pytorch,YOLO,object-detection,vision,YOLOv5,YOLOv7",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "musong",
    "package_url": "https://pypi.org/project/musong/",
    "platform": null,
    "project_url": "https://pypi.org/project/musong/",
    "project_urls": {
      "Homepage": "https://github.com/fcakyon/yolov5-pip"
    },
    "release_url": "https://pypi.org/project/musong/0.0.6/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Packaged version of the Yolov5 object detector",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16528862,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6de69747324182a045ebe35f8ec7b7d08b132e3f7ecbebc0433285ccfd8c61a8",
          "md5": "b6102ca882f4ab45badb45bf7b8dfae5",
          "sha256": "1dc350188b31e7c1b1bb74d72c79ff57352c9e76eeb70746284eba278eae089e"
        },
        "downloads": -1,
        "filename": "musong-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b6102ca882f4ab45badb45bf7b8dfae5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1799,
        "upload_time": "2023-01-22T10:08:25",
        "upload_time_iso_8601": "2023-01-22T10:08:25.929541Z",
        "url": "https://files.pythonhosted.org/packages/6d/e6/9747324182a045ebe35f8ec7b7d08b132e3f7ecbebc0433285ccfd8c61a8/musong-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "147db1a277d577bb68737b46e20e468c4dbfb3c9f10143f850d1780fafed3a9c",
          "md5": "b56b5b7cee18b7b7ac5d0175538ef66b",
          "sha256": "a516ed0fdf50715168e02a0ff59e057ae8259617da09f0d3f895f7d7d29a9dd7"
        },
        "downloads": -1,
        "filename": "musong-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b56b5b7cee18b7b7ac5d0175538ef66b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 932,
        "upload_time": "2023-01-22T10:08:30",
        "upload_time_iso_8601": "2023-01-22T10:08:30.471736Z",
        "url": "https://files.pythonhosted.org/packages/14/7d/b1a277d577bb68737b46e20e468c4dbfb3c9f10143f850d1780fafed3a9c/musong-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bff378200285984f274851af0613aa4ee41fb49f85c9291a4848b13cdf03a9b0",
          "md5": "b155e3b0e244b589dd65da3e06562964",
          "sha256": "c3b0bc7e9065f3794f7a960464b15dd4f2335cd2dc4689808710c8208672e6bd"
        },
        "downloads": -1,
        "filename": "musong-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b155e3b0e244b589dd65da3e06562964",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1383,
        "upload_time": "2023-01-22T10:11:29",
        "upload_time_iso_8601": "2023-01-22T10:11:29.377318Z",
        "url": "https://files.pythonhosted.org/packages/bf/f3/78200285984f274851af0613aa4ee41fb49f85c9291a4848b13cdf03a9b0/musong-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb70b656aff12b3642932b923355bc72c845f4c733acdd6c2679f1d3a46d4501",
          "md5": "23dd44521790dd3bb125831ebec4f0fe",
          "sha256": "c3a80eb73dc81a6bfac718d534042aa08b169950d1cae805d9562125b017c228"
        },
        "downloads": -1,
        "filename": "musong-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "23dd44521790dd3bb125831ebec4f0fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 925,
        "upload_time": "2023-01-22T10:11:31",
        "upload_time_iso_8601": "2023-01-22T10:11:31.040725Z",
        "url": "https://files.pythonhosted.org/packages/bb/70/b656aff12b3642932b923355bc72c845f4c733acdd6c2679f1d3a46d4501/musong-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "028913f9fa8c96099657aa50020f04fe17e53a08c90f79a16f39765a61ec840f",
          "md5": "0e1a7de0f696fe135e45c8db39d74623",
          "sha256": "0bcc42fb0528c79eb67e96ec40b5bbec6ea6101d2097cf18716b575e4c3a518c"
        },
        "downloads": -1,
        "filename": "musong-0.0.6-py37.py38.py39.py310-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e1a7de0f696fe135e45c8db39d74623",
        "packagetype": "bdist_wheel",
        "python_version": "py37.py38.py39.py310",
        "requires_python": ">=3.7",
        "size": 243758,
        "upload_time": "2023-01-23T07:30:44",
        "upload_time_iso_8601": "2023-01-23T07:30:44.360719Z",
        "url": "https://files.pythonhosted.org/packages/02/89/13f9fa8c96099657aa50020f04fe17e53a08c90f79a16f39765a61ec840f/musong-0.0.6-py37.py38.py39.py310-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4d10a55227549042abfd5e06663759b5440b4fb6ef97e1945f6f808e6b0c65a",
          "md5": "c05486d5613d9bb0b7e16aaa02c44649",
          "sha256": "80178aa880bcb35be95d14140989870f2cd63130fcb06fec98b210c3cb35e0d8"
        },
        "downloads": -1,
        "filename": "musong-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c05486d5613d9bb0b7e16aaa02c44649",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 215822,
        "upload_time": "2023-01-23T07:30:46",
        "upload_time_iso_8601": "2023-01-23T07:30:46.774450Z",
        "url": "https://files.pythonhosted.org/packages/a4/d1/0a55227549042abfd5e06663759b5440b4fb6ef97e1945f6f808e6b0c65a/musong-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "028913f9fa8c96099657aa50020f04fe17e53a08c90f79a16f39765a61ec840f",
        "md5": "0e1a7de0f696fe135e45c8db39d74623",
        "sha256": "0bcc42fb0528c79eb67e96ec40b5bbec6ea6101d2097cf18716b575e4c3a518c"
      },
      "downloads": -1,
      "filename": "musong-0.0.6-py37.py38.py39.py310-none-any.whl",
      "has_sig": false,
      "md5_digest": "0e1a7de0f696fe135e45c8db39d74623",
      "packagetype": "bdist_wheel",
      "python_version": "py37.py38.py39.py310",
      "requires_python": ">=3.7",
      "size": 243758,
      "upload_time": "2023-01-23T07:30:44",
      "upload_time_iso_8601": "2023-01-23T07:30:44.360719Z",
      "url": "https://files.pythonhosted.org/packages/02/89/13f9fa8c96099657aa50020f04fe17e53a08c90f79a16f39765a61ec840f/musong-0.0.6-py37.py38.py39.py310-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4d10a55227549042abfd5e06663759b5440b4fb6ef97e1945f6f808e6b0c65a",
        "md5": "c05486d5613d9bb0b7e16aaa02c44649",
        "sha256": "80178aa880bcb35be95d14140989870f2cd63130fcb06fec98b210c3cb35e0d8"
      },
      "downloads": -1,
      "filename": "musong-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "c05486d5613d9bb0b7e16aaa02c44649",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 215822,
      "upload_time": "2023-01-23T07:30:46",
      "upload_time_iso_8601": "2023-01-23T07:30:46.774450Z",
      "url": "https://files.pythonhosted.org/packages/a4/d1/0a55227549042abfd5e06663759b5440b4fb6ef97e1945f6f808e6b0c65a/musong-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}