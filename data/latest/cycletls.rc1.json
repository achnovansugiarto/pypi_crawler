{
  "info": {
    "author": "Danny-Dasilva",
    "author_email": "dannydasilva.solutions@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# CycleTLS Python\n\n\n\n<div align=\"center\">\n\t<img src=\"docs/media/Banner.svg\" alt=\"CycleTLS\"/>\n\t<br>\n\nCurrently a WIP and in Active development. See the ![Projects](https://github.com/Danny-Dasilva/CycleTLS/projects/1) Tab for more info\n\n\n\n\n![build](https://github.com/Danny-Dasilva/CycleTLS/actions/workflows/test_golang.yml/badge.svg)\n[![GoDoc](http://img.shields.io/badge/go-documentation-blue.svg)](http://godoc.org/github.com/Danny-Dasilva/CycleTLS/cycletls) \n[![license](https://img.shields.io/github/license/Danny-Dasilva/CycleTLS.svg)](https://github.com/Danny-Dasilva/CycleTLS/blob/main/LICENSE)\n[![Go Report Card](https://goreportcard.com/badge/github.com/Danny-Dasilva/CycleTLS/cycletls)](https://goreportcard.com/report/github.com/Danny-Dasilva/CycleTLS/cycletls)\n[![npm version](https://img.shields.io/npm/v/axios.svg?style=flat-square)](https://www.npmjs.org/package/cycletls)\n</div>\n\nIf you have a API change or feature request feel free to open an Issue\n\n\n\n# ðŸš€ Features\n\n- [High-performance](#-performance) Built-in goroutine pool used for handling asynchronous requests\n- Custom header ordering via fhttp\n- Proxy support\n- Ja3 Token configuration\n- Request Redirection toggle \n\n\nTable of contents\n=================\n\n\n* [Table of contents](#table-of-contents)\n* [Installation](#installation)\n* [Usage](#usage)\n\t* [QuickStart JS](#example-cycletls-request-for-typescript-and-javascript)\n\t* [Quickstart Golang](#example-cycletls-request-for-golang)\n\t* [Initializing CycleTLS](#creating-an-instance)\n\t* [API/Methods](#cycletls-alias-methods)\n\t* [Request Config](#cycletls-request-config)\n\t* [Response Schema](#cycletls-response-schema)\n\t* [Multiple Requests Example](#multiple-requests-example-for-typescript-and-javascript)\n* [Dev Setup](#dev-setup)\n* [LICENSE](#license)\n\n\n\nFor any feature requests or API change requests, please feel free to open an issue.\n\n\n## Dependencies\n\n```\nnode ^v14.0\ngolang ^v1.16x\n```\n\n## Installation\n\n```bash\n$ npm install cycletls\n```\n\n# Usage \n\n## Example CycleTLS Request for Typescript and Javascript\n\nYou can run this test in `tests/simple.test.ts`\n\n```js\n\nconst initCycleTLS = require('cycletls');\n// Typescript: import initCycleTLS from 'cycletls';\n\n(async () => {\n  // Initiate CycleTLS\n  const cycleTLS = await initCycleTLS();\n\n  // Send request\n  const response = await cycleTLS('https://ja3er.com/json', {\n    body: '',\n    ja3: '771,4865-4867-4866-49195-49199-52393-52392-49196-49200-49162-49161-49171-49172-51-57-47-53-10,0-23-65281-10-11-35-16-5-51-43-13-45-28-21,29-23-24-25-256-257,0',\n    userAgent: 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0',\n    proxy: 'http://username:password@hostname.com:443'\n  }, 'get');\n\n  console.log(response);\n\n  // Cleanly exit CycleTLS\n  cycleTLS.exit();\n\n})();\n\n```\n\n## Example CycleTLS Request for Golang\n\n```go\npackage main\n\nimport (\n\t\"log\"\n\t\"github.com/Danny-Dasilva/CycleTLS/cycletls\"\n)\n\nfunc main() {\n\n\tclient := cycletls.Init()\n\n\tresponse, err := client.Do(\"https://ja3er.com/json\", cycletls.Options{\n\t\tBody : \"\",\n\t\tJa3: \"771,4865-4867-4866-49195-49199-52393-52392-49196-49200-49162-49161-49171-49172-51-57-47-53-10,0-23-65281-10-11-35-16-5-51-43-13-45-28-21,29-23-24-25-256-257,0\",\n\t\tUserAgent: \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0\",\n\t  }, \"GET\");\n\tif err != nil {\n\t\tlog.Print(\"Request Failed: \" + err.Error())\n\t}\n\tlog.Println(response)\n}\n\n```\n\n## Creating an instance\n\nIn order to create a `cycleTLS` instance, you can run the following:\n\n#### JavaScript\n\n```js\n// The initCycleTLS function spawns a Golang process that handles all requests concurrently via goroutine loops. \nconst initCycleTLS = require('cycletls');\n// import initCycleTLS from 'cycletls';\n\n// Async/Await method\nconst cycleTLS = await initCycleTLS();\n// .then method\ninitCycleTLS().then((cycleTLS) => {});\n\n```\n#### Golang\n\n```go\nimport (\n\t\"github.com/Danny-Dasilva/CycleTLS/cycletls\"\n)\n\n//The `Init` function initializes golang channels to process requests. \nclient := cycletls.Init()\n```\n\n\n## CycleTLS Alias Methods\n\nThe following methods exist in CycleTLS\n\n**cycleTLS([url], config)**\n\n**cycleTLS.get([url], config)**\n\n**cycleTLS.delete([url], config)**\n\n**cycleTLS.head([url], config)**\n\n**cycleTLS.options([url], config)**\n\n**cycleTLS.post([url], config)**\n\n**cycleTLS.put([url], config)**\n\n**cycleTLS.patch([url], config)**\n\nIf URL is not passed, one must be specified in the config.\n\n## CycleTLS Request Config\n\n```js\n{\n  // URL for the request (required if not specified as an argument)\n  url: \"https://example.com\"\n  // Method for the request (\"head\" | \"get\" | \"post\" | \"put\" | \"delete\" | \"trace\" | \"options\" | \"connect\" | \"patch\")\n  method: \"get\" // Default method\n  // Custom headers to send\n  headers: { \"Authorization\": \"Bearer someexampletoken\" }\n  // Custom cookies to send\n  Cookies: [{\n    \"name\": \"key\",\n    \"value\": \"val\",\n    \"path\":  \"/docs\",\n    \"domain\":  \"google.com\",\n                \"expires\": \"Mon, 02-Jan-2022 15:04:05 EST\"\n    \"maxAge\": 90,\n    \"secure\": false,\n    \"httpOnly\": true,\n    \"sameSite\": \"Lax\"\t\t\n  }],\n  // Body to send with request (must be a string - cannot pass an object)\n  body: '',\n  // JA3 token to send with request\n  ja3: '771,4865-4867-4866-49195-49199-52393-52392-49196-49200-49162-49161-49171-49172-51-57-47-53-10,0-23-65281-10-11-35-16-5-51-43-13-45-28-21,29-23-24-25-256-257,0',\n  // User agent for request\n  userAgent: 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:87.0) Gecko/20100101 Firefox/87.0',\n  // Proxy to send request through (must be in the same format)\n  proxy: 'http://username:password@hostname.com:443',\n  // Amount of seconds before request timeout (default: 7)\n  timeout: 2,\n  // Toggle if CycleTLS should follow redirects\n  disableRedirect: true\n  // Custom header order to send with request (This value will overwrite default header order)\n  headerOrder: [\"cache-control\", \"connection\", \"host\"]\n}\n);\n\n```\n\n## CycleTLS Response Schema\n\n```js\n{\n  // Status code returned from server (Number)\n  status: 200,\n  // Body returned from the server (String)\n  body: \"\",\n  // Headers returned from the server (Object)\n  headers: {\n    \"some\": \"header\",\n    ...\n  }\n}\n);\n\n```\n\n\n\n## Multiple Requests Example for Typescript and Javascript\n\nIf CycleTLS is being used by in a JavaScript environment, CycleTLS will spawn a Golang process to handle requests. This Golang process handles requests `concurrently` in a worker pool. Due to this, CycleTLS returns response objects as soon as they are made available \n(in other terms, CycleTLS processes requests as they are received, but responses are returned asynchronously so they will NOT be returned in the order requested)\n\nIf you are using CycleTLS in JavaScript, it is necessary to exit out of the instance to prevent zombie processes. The example below shows one way to approach cleanly exiting CycleTLS if you need to process multiple requests (note: keep in mind that calling the `exit()` function will kill any requests in progress). If your workflow requires requests running the entire time the process runs, modules such as [exit-hook](https://www.npmjs.com/package/exit-hook) could serve as an alternative solution to cleanly exiting CycleTLS.\n\n```js\nconst initCycleTLS = require(\"cycletls\");\n// Typescript: import initCycleTLS from 'cycletls';\n\n// Defining custom JA3 token and user agenton multiple requests,\n  \"https://httpbin.org/user-agent\": {\n    ja3: ja3,\n    userAgent: userAgent,\n  },\n  \"http://httpbin.org/post\": {\n    body: '{\"field\":\"POST-VAL\"}',\n    method: \"POST\",\n  },\n  \"http://httpbin.org/cookies\": {\n    cookies: [\n      {\n        name: \"example1\",\n        value: \"aaaaaaa\",\n        expires: \"Mon, 02-Jan-2022 15:04:05 EST\",\n      },\n    ],\n  },\n};\n\n// Promises array of requests\nconst promises = [];\n\n// Anonymous async function\n(async () => {\n  // Initiate CycleTLS\n  const cycleTLS = await initCycleTLS();\n\n  // Loop through requestDict (Object) defined above\n  for (const url in requestDict) {\n    // Fetch configs from requestDict (Object)\n    const params = requestDict[url];\n\n    // Send request (note: no waiting)\n    const response = cycleTLS(\n      url, {\n        body: params.body ?? \"\", //?? is just setting defaults in this case\n        ja3: params.ja3 ?? ja3,\n        userAgent: params.userAgent ?? userAgent,\n        headers: params.headers,\n        cookies: params.cookies,\n      }, params.method ?? \"GET\");\n\n    // console.log the response object\n    response.then((out) => {\n      console.log(url, out);\n    });\n\n    // Push request to promise array\n    promises.push(response);\n  }\n\n  // Wait for all requests to execute successfully\n  Promise.all(promises).then(() => {\n    // Cleanly exit CycleTLS one all requests have been received\n    cycleTLS.exit();\n  });\n})();\n```\n\n\n\n# Dev Setup\n\nIf you would like to compile CycleTLS on your own, use the following commands:\n\nSet module-aware mode\n\n`go env -w  GO111MODULE=auto`\n\nInstall golang dependencies\n\n`go get github.com/Danny-Dasilva/CycleTLS/cycletls`\n\ninstall npm packages\n\n`npm install`\n\n### To recompile index.ts in the src folder\n\n`npm run build`\n\n### To recompile Golang files in the golang folder\nWindows\n\n`npm run build:windows`\n\nLinux\n\n`npm run build:linux`\n\nMac\n\n`npm run build:mac:`\n\n\n## LICENSE\n### GPL3 LICENSE SYNOPSIS\n\n**_TL;DR_*** Here's what the GPL3 license entails:\n\n```markdown\n1. Anyone can copy, modify and distribute this software.\n2. You have to include the license and copyright notice with each and every distribution.\n3. You can use this software privately.\n4. You can use this software for commercial purposes.\n5. Source code MUST be made available when the software is distributed.\n6. Any modifications of this code base MUST be distributed with the same license, GPLv3.\n7. This software is provided without warranty.\n8. The software author or license can not be held liable for any damages inflicted by the software.\n```\n\nMore information on about the [LICENSE can be found here](http://choosealicense.com/licenses/gpl-3.0/)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Danny-Dasilva/cycletls_python",
    "keywords": "",
    "license": "none",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cycletls",
    "package_url": "https://pypi.org/project/cycletls/",
    "platform": null,
    "project_url": "https://pypi.org/project/cycletls/",
    "project_urls": {
      "Homepage": "https://github.com/Danny-Dasilva/cycletls_python"
    },
    "release_url": "https://pypi.org/project/cycletls/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A python package for spoofing TLS",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13231518,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "859a47f089bbd17e444ed6b4a64fe682e8442134b952e397f7fae8987534b078",
          "md5": "ac034a1a3ccedaf06b43692cc69e414c",
          "sha256": "3fb1edb7a97f682e7c33eadd9bab4dc7b50299529f4383e2801f38c9e0ff563d"
        },
        "downloads": -1,
        "filename": "cycletls-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac034a1a3ccedaf06b43692cc69e414c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7602,
        "upload_time": "2022-03-20T18:33:58",
        "upload_time_iso_8601": "2022-03-20T18:33:58.713656Z",
        "url": "https://files.pythonhosted.org/packages/85/9a/47f089bbd17e444ed6b4a64fe682e8442134b952e397f7fae8987534b078/cycletls-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9793b4e69d71f890cddc909139a4f904fbf7b43fd1bdfff5c95d19f1a0e226c5",
          "md5": "eb8e0f2970209774992b2fcccbe639d8",
          "sha256": "a438af6127970010cb8e8437d390f9241a06db8616e208569139977a003c3859"
        },
        "downloads": -1,
        "filename": "cycletls-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "eb8e0f2970209774992b2fcccbe639d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11408,
        "upload_time": "2022-03-20T18:34:01",
        "upload_time_iso_8601": "2022-03-20T18:34:01.134654Z",
        "url": "https://files.pythonhosted.org/packages/97/93/b4e69d71f890cddc909139a4f904fbf7b43fd1bdfff5c95d19f1a0e226c5/cycletls-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "859a47f089bbd17e444ed6b4a64fe682e8442134b952e397f7fae8987534b078",
        "md5": "ac034a1a3ccedaf06b43692cc69e414c",
        "sha256": "3fb1edb7a97f682e7c33eadd9bab4dc7b50299529f4383e2801f38c9e0ff563d"
      },
      "downloads": -1,
      "filename": "cycletls-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ac034a1a3ccedaf06b43692cc69e414c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7602,
      "upload_time": "2022-03-20T18:33:58",
      "upload_time_iso_8601": "2022-03-20T18:33:58.713656Z",
      "url": "https://files.pythonhosted.org/packages/85/9a/47f089bbd17e444ed6b4a64fe682e8442134b952e397f7fae8987534b078/cycletls-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9793b4e69d71f890cddc909139a4f904fbf7b43fd1bdfff5c95d19f1a0e226c5",
        "md5": "eb8e0f2970209774992b2fcccbe639d8",
        "sha256": "a438af6127970010cb8e8437d390f9241a06db8616e208569139977a003c3859"
      },
      "downloads": -1,
      "filename": "cycletls-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "eb8e0f2970209774992b2fcccbe639d8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11408,
      "upload_time": "2022-03-20T18:34:01",
      "upload_time_iso_8601": "2022-03-20T18:34:01.134654Z",
      "url": "https://files.pythonhosted.org/packages/97/93/b4e69d71f890cddc909139a4f904fbf7b43fd1bdfff5c95d19f1a0e226c5/cycletls-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}