{
  "info": {
    "author": "THORChain",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# XChainPy Wallet Client Interface\n\nA specification for a generalised interface for crypto wallets clients, to be used by XChainPy\nimplementations. The client should not have any functionality to generate a key, instead, the `asgardex-crypto` library should be used to ensure cross-chain compatible keystores are handled. The client is only ever passed a master BIP39 phrase, from which a temporary key and address is decoded. \n\n### Configuration\nInitialise and set up the client to connect to its necessary third-party services to fulfil basic functionality. The third-party services used must be at a minimum to fulfil the wallet functionality, such as displaying balances and sending transactions. \n\nDuring configuration, the following can be passed in:\n* Network choice (default is TESTNET)\n* Phrase (mandatory)\n* Service Keys (optional, if null, client will use config defaults or free service limits.)\n\n### Querying\nQuerying the client for balances and transaction history. Transaction history is optional. \n\nOptional blockchain-specific queries can be added here, such as Binance Chain market information.\n\n### Transactions\nMaking transfers.\n\nOptional blockchain-specific transactions can be added here, such as Binance Chain freeze/unfreeze.\n\n---- \n\n# Class Variables\n\n## Client\nClient Implementation\n```python\nclass client(IXChainClient) \n```\n## Network\nNetwork types are `'mainnet'` and `'testnet'` strings\n\n## Address\nPublic variable that returns the address decoded from the private key during initialisation. type of address is `str`\n\n# Config and Setup\n\n## Set Network\nUsed to set a type of `Network`, which is either `'mainnet'` or `'testnet'`. \n\n```python\nset_network(net:str)\n```\n## Set Phrase\nUsed to set the master BIP39 phrase, from which the private key is extracted and the address decoded.\n```python\nset_phrase(phrase:str) -> str\n```\nThe function should store the private key and address, then return the address generated by the phrase. \n\n---- \n\n# Querying\n\n## Get Explorer URLs\n\nReturns the correctly formatted url string with paths for:\n\n- Addresses\n- Transactions\n\nThe default Explorer URL can be hard-coded, or passed in as a service. It will be provided by `get_explorer_url`\n\n```python\nget_explorer_url() -> str\n```\n\nTo get explorer's URL for an address, use `get_explorer_address_url` by passing an `address`.\n\n```python\nget_explorer_address_url = (address:str) -> str\n```\n\nTo get explorer's URL for a transaction, use `get_explorer_tx_url` by passing a transaction ID.\n\n```python\nget_explorer_tx_url = (tx_id:str) -> str\n```\n\nAll functions should return the correctly formatted url string.\n\n**Example**\n\n```\nhttps://blockchair.com/bitcoin/transaction/d11ff3352c50b1f5c8e2030711702a2071ca0e65457b40e6e0bcbea99e5dc82e\nhttps://blockchair.com/bitcoin/address/19iqYbeATe4RxghQZJnYVFU4mjUUu76EA6\n\nhttps://explorer.binance.org/tx/94F3A6257337052B04F9CC09F657966BFBD88546CA5C23F47AB0A601D29D8979\nhttps://explorer.binance.org/address/bnb1z35wusfv8twfele77vddclka9z84ugywug48gn\n\nhttps://etherscan.io/tx/0x87a4fa498cc48874631eaa776e84a49d28f42f01e22c51ff7cdfe1f2f6772f67\nhttps://etherscan.io/address/0x8eb68e8f207be3dd1ec4baedf0b5c22245cda463\n```\n\n\n## Get Balance\nReturns the balance of an address. \n* If address is not passed, gets the balance of the current client address. \n* Optional asset can be passed, in which the query will be specific to that asset, such as ERC-20 token. \n* Returns an array of assets and amounts, with assets in chain notation `CHAIN.SYMBOL-ID`\n\nBalance model :\n```python\nget_balance(address:str=None, asset:str=None) -> Balance\n```\n\nExample of third-party service queries to get balances:\n```\nhttps://sochain.com/api/v2/get_address_balance/BTCTEST/tb1q2pkall6rf6v6j0cvpady05xhy37erndvku08wp\nhttps://api.ethplorer.io/getAddressInfo/0xb00E81207bcDA63c9E290E0b748252418818c869?apiKey=freekey\nhttps://dex.binance.org/api/v1/account/bnb1jxfh2g85q3v0tdq56fnevx6xcxtcnhtsmcu64m\n```\nExample of returned array:\n```python\n[\n   {   # xchainpy_client.models.balance.Balance\n      asset: {  # xchainpy_util.asset.Asset\n         chain: \"BNB\",\n         symbol: \"BNB\",\n         ticker: \"BNB\"\n      },\n      amount: 100000000\n   }\n]\n```\n\n## Get Transactions\nGets a simplied array of recent transactions for an address. \n```python\n# Defined in xchainpy_client/models/tx_types.py\n class TxHistoryParams:\n    def __init__(self, address:str, offset:int=None, limit:int=None, start_time=None, asset:Asset=None):\n        self._address = address\n        self._offset = offset\n        self._limit = limit\n        self._start_time = start_time\n        self._asset = asset\n\n\nget_transactions(params:TxHistoryParams) -> xchainpy_client.models.tx_types.TxPage\n```\n\nExample of third party services to help:\n```\n// get UTXOS for address\nhttps://sochain.com/api/v2/get_tx_unspent/BTC/34xp4vRoCGJym3xR7yCVPFHoCNxv4Twseo\n// get tx details\nhttps://sochain.com/api/v2/get_tx/BTC/ff0bd969cce99b8d8086e452d7b63167fc178680fee796fc742cb14a9a6ef929\n\nhttps://api.ethplorer.io/getAddressTransactions/0xb297cacf0f91c86dd9d2fb47c6d12783121ab780?apiKey=freekey\nhttps://dex.binance.org/api/v1/transactions?address=bnb1jxfh2g85q3v0tdq56fnevx6xcxtcnhtsmcu64m\n```\n\nExample of return:\n```python\n[ # xchainpy_client.models.tx_types.TxPage\n    total: 1,\n    txs: [\n        {  # # xchainpy_client.models.tx_types.TX\n        tx_hash: \"980D9519CCB39DC02F8B0208A4D181125EE8A2678B280AF70666288B62957DAE\",\n        tx_from: [ # xchainpy_client.models.tx_types.TxFrom\n            {\n                address: \"tbnb1t95kjgmjc045l2a728z02textadd98yt339jk7\",\n                amount: 100\n            }\n        ],\n        tx_to: [ # xchainpy_client.models.tx_types.TxTo\n            {\n                address: \"tbnb1t95kjgmjc045l2a728z02textadd98yt339jk7\",\n                amount: 100\n            }\n        ],\n        tx_amount: 100,\n        tx_fee: 2500,\n        tx_memo: \"transfer\"\n        tx_date: datetime.datetime(2021, 8, 2, 12, 50, 10, 407000),\n        asset: {  # xchainpy_util.asset.Asset\n             chain: \"BNB\",\n             symbol: \"BNB\",\n             ticker: \"BNB\"\n        },\n       }\n    ]\n]\n```\n\n> Due to the complexity of this function and dependence of third-party services, this function can be omitted in early versions of the client. \n\n---- \n\n# Transactions\n\n## Get Fees\nThis function calculates and returns the fee object in a generalised way for a simple transfer function. \n\nSince this depends on optional third-party services, sensible defaults should be hardcoded if there are errors.\n\nThe fastest fee rate should be guaranteed next block (1.5x Fast), fast should be 1-2 blocks (1x next block fee rate), average should be 2-3 blocks (0.5x Fast). \n*Don't over-complicate this. PoW blockchains have no guarantees.* \n\n* Type should specify the units to display, or if flat fees, simply \"flat\". The client should interpret and display this, such as showing the user the fee rates and their units.\n* Fastest (target of next block)\n* Fast (target of 1-2 blocks)\n* Average (target of 2-3 blocks)\n\nThird party services:\nBitcoin - returns next block feeRate (fast). Use multiples of this to extrapolate to Fastest/Average.\nhttps://api.blockchair.com/bitcoin/stats\n\nEthereum - returns fastest/fast/average\nhttps://ethgasstation.info/api/ethgasAPI.json?api-key=XXAPI_Key_HereXXX\n\n\n```python\nget_fees() -> xchainpy_client.models.types.Fees\n```\n\n\n**Example**\n\n```python\n# Binance Chain\n{ # xchainpy_client.models.types.Fees\n  fastest : 0.0001125\n  fast : 0.0001125\n  average : 0.0001125\n}\n```\n\n## Transfer\nGeneral transfer function that should be signed and broadcast using a third party service. \nThe fee should always be *rate*, which is units per transaction size. The size should be calculated on the fly or hardcoded:\n\n* Bitcoin: 250 bytes is typical, so feeRate of 10 is 10 sats per byte, eg, 2500 sats \n* Ethereum: gwei is standard, so a feeRate of 20 would be interpreted as 20 GWEI \n* Binance Chain: fixed size, so the feeRate is ignored. \n\n**Broadcast URLs**\n\n```\nhttps://api.blockchair.com/{:chain}/push/transaction\nhttps://dex.binance.org/api/v1/broadcast\n```\n\n```python\nclass TxParams:\n    def __init__(self, asset:Asset, amount, recipient, memo='', wallet_index=None):\n        self._asset = asset\n        self._amount = amount\n        self._recipient = recipient\n        self._memo = memo\n        self._wallet_index = wallet_index\n\ntransfer(params:tx_types.TxParams) -> str\n```\n\nThe function should return the hash of the finalised transaction.\n\n## Purge\nWhen a wallet is \"locked\" the private key should be purged in each client by setting it back to null. Also the phrase has to be cleared `self.phrase = ''` \n\n```python\npurge_client()\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/xchainjs/xchainpy-lib/tree/main/xchainpy/xchainpy_client",
    "keywords": "THORChain,XChainpy,xchainpy_client",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "xchainpy-client",
    "package_url": "https://pypi.org/project/xchainpy-client/",
    "platform": "",
    "project_url": "https://pypi.org/project/xchainpy-client/",
    "project_urls": {
      "Homepage": "https://github.com/xchainjs/xchainpy-lib/tree/main/xchainpy/xchainpy_client"
    },
    "release_url": "https://pypi.org/project/xchainpy-client/0.1.6/",
    "requires_dist": [
      "xchainpy-util (>=0.1.8)",
      "xchainpy-crypto (>=0.1.7)",
      "http3 (>=0.6.7)"
    ],
    "requires_python": "",
    "summary": "A specification for a generalised interface for crypto wallets clients, to be used by XChainPY implementations. The client should not have any functionality to generate a key, instead, the `asgardex-crypto` library should be used to ensure cross-chain com",
    "version": "0.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11235716,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27845441da8836b7f3a51071dbee78b8e8b0f43a30e589bd0b71c4cc8a9ada8e",
          "md5": "66757145b5145d27b17ce15c35dea5c4",
          "sha256": "0fc88665530b8e54b05c29995ca4cdc8a94eb2da40f827ed13bc3b332c85097a"
        },
        "downloads": -1,
        "filename": "xchainpy_client-0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "66757145b5145d27b17ce15c35dea5c4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6983,
        "upload_time": "2021-03-20T13:08:39",
        "upload_time_iso_8601": "2021-03-20T13:08:39.010582Z",
        "url": "https://files.pythonhosted.org/packages/27/84/5441da8836b7f3a51071dbee78b8e8b0f43a30e589bd0b71c4cc8a9ada8e/xchainpy_client-0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8f82737ef77a31630e7278bc11e2627f8ed9395ac18afe3d1da1f913953a6e2",
          "md5": "ba70e35e1e8b6424e80fba5fe89480aa",
          "sha256": "a9ec9360ac5f9ee82243c0bc31e0e5af4507006d2c52b8d6df3301f8c57e3694"
        },
        "downloads": -1,
        "filename": "xchainpy_client-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ba70e35e1e8b6424e80fba5fe89480aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5461,
        "upload_time": "2021-03-20T13:08:45",
        "upload_time_iso_8601": "2021-03-20T13:08:45.425576Z",
        "url": "https://files.pythonhosted.org/packages/c8/f8/2737ef77a31630e7278bc11e2627f8ed9395ac18afe3d1da1f913953a6e2/xchainpy_client-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1462aef10137fa4ca38d961798e39d2d2e06c1de1a345e19456874483374cb13",
          "md5": "fe5cca75da00b82475a4630a565b3331",
          "sha256": "6de9c059892b6626b5bee1eb6077e909631c43810813f1bd05bd567e649fa50d"
        },
        "downloads": -1,
        "filename": "xchainpy_client-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe5cca75da00b82475a4630a565b3331",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6168,
        "upload_time": "2021-03-21T20:11:06",
        "upload_time_iso_8601": "2021-03-21T20:11:06.238879Z",
        "url": "https://files.pythonhosted.org/packages/14/62/aef10137fa4ca38d961798e39d2d2e06c1de1a345e19456874483374cb13/xchainpy_client-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e5fe4dcf4d83a323ef4a005c16a1cbd3070aaac3f49020f0534553121ef2ce9",
          "md5": "65befd579b1025d423bf09fd9033c5b1",
          "sha256": "70bc3016d81c3d066ff483fe1fc0e87cb26a59b877a2ef50ce99e39c2394ff5a"
        },
        "downloads": -1,
        "filename": "xchainpy_client-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "65befd579b1025d423bf09fd9033c5b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7324,
        "upload_time": "2021-03-21T20:11:08",
        "upload_time_iso_8601": "2021-03-21T20:11:08.308104Z",
        "url": "https://files.pythonhosted.org/packages/9e/5f/e4dcf4d83a323ef4a005c16a1cbd3070aaac3f49020f0534553121ef2ce9/xchainpy_client-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e132e01fcc459678664b49e1a03167695eb5fe3f55070379f741d9625146af21",
          "md5": "9842d13087c2198b4c1b47356238d562",
          "sha256": "789f06dc0476d6da5c81350b375cb512db7e17ba9d1f869cf38380932f0b64b4"
        },
        "downloads": -1,
        "filename": "xchainpy_client-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9842d13087c2198b4c1b47356238d562",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6173,
        "upload_time": "2021-03-22T06:46:38",
        "upload_time_iso_8601": "2021-03-22T06:46:38.881739Z",
        "url": "https://files.pythonhosted.org/packages/e1/32/e01fcc459678664b49e1a03167695eb5fe3f55070379f741d9625146af21/xchainpy_client-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "579fff61afd79c8a687f3ceee25aef0d8db10c14b04f6d95ed8db5927d0ac723",
          "md5": "2cd15095fb4bb05693865c5b0af12ba7",
          "sha256": "f0d5702543e4ec2598175fd632b08d296d5d80970fa24a1f274804ef9ddf64c7"
        },
        "downloads": -1,
        "filename": "xchainpy_client-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2cd15095fb4bb05693865c5b0af12ba7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7310,
        "upload_time": "2021-03-22T06:46:40",
        "upload_time_iso_8601": "2021-03-22T06:46:40.430503Z",
        "url": "https://files.pythonhosted.org/packages/57/9f/ff61afd79c8a687f3ceee25aef0d8db10c14b04f6d95ed8db5927d0ac723/xchainpy_client-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4907da97e06772144ccaf789bbe0d80c05189bfc04326f2ba12b3bc14f98fe9",
          "md5": "c6dbcbc115f8e3440e9479caad964c2d",
          "sha256": "c560337cc4375159b8eee10488f4bc7425d1c9162b7ad99686d4bf0913760741"
        },
        "downloads": -1,
        "filename": "xchainpy_client-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c6dbcbc115f8e3440e9479caad964c2d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7591,
        "upload_time": "2021-03-23T21:23:52",
        "upload_time_iso_8601": "2021-03-23T21:23:52.123085Z",
        "url": "https://files.pythonhosted.org/packages/a4/90/7da97e06772144ccaf789bbe0d80c05189bfc04326f2ba12b3bc14f98fe9/xchainpy_client-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2defcb824bf0f9fb458dfa6ae0c776ddcdbb7e0e65df0a31a5b755fceac54fb",
          "md5": "a5cf39184ce201348ffbd07f42805c83",
          "sha256": "214b52cbcd877a9308ec83a47ef6692326b14e7f0e3537d532a8f93ee7e6c74f"
        },
        "downloads": -1,
        "filename": "xchainpy_client-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a5cf39184ce201348ffbd07f42805c83",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9554,
        "upload_time": "2021-03-23T21:23:53",
        "upload_time_iso_8601": "2021-03-23T21:23:53.844030Z",
        "url": "https://files.pythonhosted.org/packages/c2/de/fcb824bf0f9fb458dfa6ae0c776ddcdbb7e0e65df0a31a5b755fceac54fb/xchainpy_client-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f831642149e9923110100faafc66be0a159cb506989e865ba090ba6bdade6d0",
          "md5": "ca0153b16b2a6f4fdd0895f7081f89d1",
          "sha256": "d8e10c1e3c14a8c650aee7c19232ba1a02d7013034e90b264ca9f15ce6e264db"
        },
        "downloads": -1,
        "filename": "xchainpy_client-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ca0153b16b2a6f4fdd0895f7081f89d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12037,
        "upload_time": "2021-08-07T06:02:41",
        "upload_time_iso_8601": "2021-08-07T06:02:41.459608Z",
        "url": "https://files.pythonhosted.org/packages/3f/83/1642149e9923110100faafc66be0a159cb506989e865ba090ba6bdade6d0/xchainpy_client-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c2d5c9c04170a2835d3867450c009f1b5602dd5213eb42e3cb124697f72da0f",
          "md5": "6799002536175ece27f2666b701f2e98",
          "sha256": "67c0881a86097037c979d94603c8e757c5e62d9bc321a101620d1fa567494f82"
        },
        "downloads": -1,
        "filename": "xchainpy_client-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6799002536175ece27f2666b701f2e98",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13345,
        "upload_time": "2021-08-07T06:02:44",
        "upload_time_iso_8601": "2021-08-07T06:02:44.017667Z",
        "url": "https://files.pythonhosted.org/packages/9c/2d/5c9c04170a2835d3867450c009f1b5602dd5213eb42e3cb124697f72da0f/xchainpy_client-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "baadb668b0f5876d504ad3cbcec8118f8e51894a4807d06963ee893f021d3ff6",
          "md5": "ad1b2fc27d85234be143484d38cd90f7",
          "sha256": "bc1d6377c5810629ca0261293a6d5a47c81d32a13f5a7d39b2ea20a4d0d4e253"
        },
        "downloads": -1,
        "filename": "xchainpy_client-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad1b2fc27d85234be143484d38cd90f7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12040,
        "upload_time": "2021-08-20T08:39:09",
        "upload_time_iso_8601": "2021-08-20T08:39:09.602923Z",
        "url": "https://files.pythonhosted.org/packages/ba/ad/b668b0f5876d504ad3cbcec8118f8e51894a4807d06963ee893f021d3ff6/xchainpy_client-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b72a09c26e038d0c82feddede9255288888349c14aed68ef416b5c2ae8c1db10",
          "md5": "548369c1944caa137bd9677523181230",
          "sha256": "bc944016cb61009520159d4d9fc9e3d2a18b9c061170cd0bda69eb86dfc3b577"
        },
        "downloads": -1,
        "filename": "xchainpy_client-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "548369c1944caa137bd9677523181230",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13327,
        "upload_time": "2021-08-20T08:39:11",
        "upload_time_iso_8601": "2021-08-20T08:39:11.476486Z",
        "url": "https://files.pythonhosted.org/packages/b7/2a/09c26e038d0c82feddede9255288888349c14aed68ef416b5c2ae8c1db10/xchainpy_client-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48f69a2e82d21ec7b33f170554114b87e97c80f1bc5ae6191e4f6546f947337b",
          "md5": "4cec04a604df56a8e7e98ba645882425",
          "sha256": "0f040c5d62a10596fc7b810930ecc67a7f93ad7eacdce3e8fcd761eca70fef04"
        },
        "downloads": -1,
        "filename": "xchainpy_client-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4cec04a604df56a8e7e98ba645882425",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12045,
        "upload_time": "2021-08-20T20:39:33",
        "upload_time_iso_8601": "2021-08-20T20:39:33.475754Z",
        "url": "https://files.pythonhosted.org/packages/48/f6/9a2e82d21ec7b33f170554114b87e97c80f1bc5ae6191e4f6546f947337b/xchainpy_client-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae4a48b05a9c3f1473063628c2716c6d12ea0ad46f2c1a5bc2be5bdc32da2f25",
          "md5": "c8a33cd7a7372ced3f8edcce8d4dcc99",
          "sha256": "2cc3935362c8343f14e891417366f36e5cd20675e617fcba23eb6dd09c24bfc7"
        },
        "downloads": -1,
        "filename": "xchainpy_client-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c8a33cd7a7372ced3f8edcce8d4dcc99",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13322,
        "upload_time": "2021-08-20T20:39:35",
        "upload_time_iso_8601": "2021-08-20T20:39:35.171907Z",
        "url": "https://files.pythonhosted.org/packages/ae/4a/48b05a9c3f1473063628c2716c6d12ea0ad46f2c1a5bc2be5bdc32da2f25/xchainpy_client-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "48f69a2e82d21ec7b33f170554114b87e97c80f1bc5ae6191e4f6546f947337b",
        "md5": "4cec04a604df56a8e7e98ba645882425",
        "sha256": "0f040c5d62a10596fc7b810930ecc67a7f93ad7eacdce3e8fcd761eca70fef04"
      },
      "downloads": -1,
      "filename": "xchainpy_client-0.1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4cec04a604df56a8e7e98ba645882425",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12045,
      "upload_time": "2021-08-20T20:39:33",
      "upload_time_iso_8601": "2021-08-20T20:39:33.475754Z",
      "url": "https://files.pythonhosted.org/packages/48/f6/9a2e82d21ec7b33f170554114b87e97c80f1bc5ae6191e4f6546f947337b/xchainpy_client-0.1.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ae4a48b05a9c3f1473063628c2716c6d12ea0ad46f2c1a5bc2be5bdc32da2f25",
        "md5": "c8a33cd7a7372ced3f8edcce8d4dcc99",
        "sha256": "2cc3935362c8343f14e891417366f36e5cd20675e617fcba23eb6dd09c24bfc7"
      },
      "downloads": -1,
      "filename": "xchainpy_client-0.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "c8a33cd7a7372ced3f8edcce8d4dcc99",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13322,
      "upload_time": "2021-08-20T20:39:35",
      "upload_time_iso_8601": "2021-08-20T20:39:35.171907Z",
      "url": "https://files.pythonhosted.org/packages/ae/4a/48b05a9c3f1473063628c2716c6d12ea0ad46f2c1a5bc2be5bdc32da2f25/xchainpy_client-0.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}