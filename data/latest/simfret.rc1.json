{
  "info": {
    "author": "Diego Kleiman",
    "author_email": "diegokleiman@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SimFRET\n A Python package to simulate FRET experiments.\n\n## Installation\nThe easiest way is through conda:\n```\n$ conda create --name SimFRET --file simfret.yml\n```\n## Usage \n There are four modules (`simulate.py`, `suggest.py`, `overlap.py`, `compute.py`). <br>\n - `simulate.py` runs a quick simulation using the SMOG potential. Input files for this module can be obtained through the [SMOG Webtool](http://smog-server.org/cgi-bin/GenTopGro.pl). <br>\n - `suggest.py` suggests pairs of residues for FRET dye attachment. <br>\n - `overlap.py` overlaps the dyes to the macromolecule (some dye molecules are already available under the folder dyes). <br>\n - `compute.py` computes the FRET efficiency (ignoring frames where dye atoms are superimposed with the macromolecule). <br>\n Note: `simulate.py` and `suggest.py` are not necessary if the molecule under study has already been simulated and the places where FRET dyes are attached are known. <br>\n### simulate.py\n```\nusage: simulate.py [-h] -ref REF -top TOP [-p PREFIX] [-dt TIMESTEP]\n                   [--nsteps NSTEPS] [--nstxout NSTXOUT] [--nstlog NSTLOG]\n                   [--nstdcdout NSTDCDOUT] [--gamma GAMMA] [-t TEMP]\n                   [--rcutoff RCUTOFF]\n\nRun fast simulations with the SMOG potential.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -ref REF              Structure file (.gro) from SMOG/SOMG2.\n  -top TOP              Topology file (.top) from SMOG/SOMG2.\n  -p PREFIX, --prefix PREFIX\n                        Output files' prefix (default SMOG).\n  -dt TIMESTEP, --timestep TIMESTEP\n                        Simulation timestep in ps (default 2 fs).\n  --nsteps NSTEPS       Number of simulation steps (defaul 50000).\n  --nstxout NSTXOUT     Interval to save checkpoint (default 10000 steps).\n  --nstlog NSTLOG       Interval to save energy information (default 1000\n                        steps).\n  --nstdcdout NSTDCDOUT\n                        Interval to save simulation frames (default 1000\n                        steps).\n  --gamma GAMMA         Friction factor for Langeving integrator in ps^-1\n                        (default 1/ps).\n  -t TEMP, --temperature TEMP\n                        Simulation temperature. Not physical temperature\n                        (default 75 K).\n  --rcutoff RCUTOFF     Cutoff for nonbonded interactions in nm (default 1.5\n                        nm).\n\nOutput: <prefix>_settings.txt, <prefix>_traj.dcd, <prefix>_checkpoint.chk,\n<prefix>_energy.log\n```\n### suggest.py\n```\nusage: suggest.py [-h] -r REF -t TRAJ [-c CONSTRAINT] [-p PREFIX]\n\nSuggest residues to place FRET dyes.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -r REF, --ref REF     Structure file (any format accepted by MDAnalysis).\n  -t TRAJ, --traj TRAJ  Trajectory file (any format accepted by MDAnalysis).\n  -c CONSTRAINT, --constraint CONSTRAINT\n                        Maximum distance admitted for the dyes (Å).\n  -p PREFIX, --prefix PREFIX\n                        Output files' prefix.\n\nOutput: <prefix>_residues.txt\n```\n### overlap.py\n```\nusage: overlap.py [-h] -r REFERENCE -d DONOR STRUCTURE -dt DONOR TRAJ -a\n                  ACCEPTOR STRUCTURE -at ACCEPTOR TRAJ [-rd DONOR RES]\n                  [-ra ACCEPTOR RES] [-p PREFIX]\n\nAnchor FRET dyes to reference molecule. (This script is intended to visualize\ndye docking only.)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -r REFERENCE, --ref REFERENCE\n                        Structure file for reference molecule.\n  -d DONOR STRUCTURE, --donor DONOR STRUCTURE\n                        Structure file for donor dye.\n  -dt DONOR TRAJ, --donor_traj DONOR TRAJ\n                        Trajectory file for donor dye.\n  -a ACCEPTOR STRUCTURE, --acceptor ACCEPTOR STRUCTURE\n                        Structure file for acceptor dye.\n  -at ACCEPTOR TRAJ, --acceptor_traj ACCEPTOR TRAJ\n                        Trajectory file for acceptor dye.\n  -rd DONOR RES, --residue_donor DONOR RES\n                        Residue index to attach donor dye. If this flag is\n                        set, --residue_acceptor must also be set.\n  -ra ACCEPTOR RES, --residue_acceptor ACCEPTOR RES\n                        Residue index to attach acceptor dye. If this flag is\n                        set, --residue_donor must also be set.\n  -p PREFIX, --prefix PREFIX\n                        Output files' prefix.\n\nOutput: <prefix>_donor_fitted.pdb, <prefix>_acceptor_fitted.pdb,\n<prefix>_alignment_donor.dcd, <prefix>_alignment_acceptor.dcd\n```\n### compute.py\n```\nusage: compute.py [-h] -r REF STRUCTURE [-rt REF TRAJ] [-s N] -d DONOR\n                  STRUCTURE -dt DONOR TRAJ -a ACCEPTOR STRUCTURE -at ACCEPTOR\n                  TRAJ -rd DONOR RES -ra ACCEPTOR RES -R0 R0\n                  [-avg {static,isotropic,dynamic}] [--burst {0,1}]\n                  [--burst_threshold BURST_THRESHOLD]\n                  [--burst_decay BURST_DECAY] [-p PREFIX]\n\nCompute FRET efficiency.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -r REF STRUCTURE, --ref REF STRUCTURE\n                        Structure file for reference.\n  -rt REF TRAJ, --ref_traj REF TRAJ\n                        If provided, output will be averaged over trajectory.\n                        All frames are used unless --sample is set.\n  -s N, --sample N      If provided, pick frames from REF TRAJ every N frames.\n  -d DONOR STRUCTURE, --donor DONOR STRUCTURE\n                        Structure file for donor dye.\n  -dt DONOR TRAJ, --donor_traj DONOR TRAJ\n                        Trajectory file for donor dye.\n  -a ACCEPTOR STRUCTURE, --acceptor ACCEPTOR STRUCTURE\n                        Structure file for acceptor dye.\n  -at ACCEPTOR TRAJ, --acceptor_traj ACCEPTOR TRAJ\n                        Trajectory file for acceptor dye.\n  -rd DONOR RES, --residue_donor DONOR RES\n                        Residue index to attach donor dye. If this flag is\n                        set, --residue_acceptor must also be set.\n  -ra ACCEPTOR RES, --residue_acceptor ACCEPTOR RES\n                        Residue index to attach acceptor dye. If this flag is\n                        set, --residue_donor must also be set.\n  -R0 R0                R0 (Å) for the FRET dyes pair.\n  -avg {static,isotropic,dynamic}, --averaging_regime {static,isotropic,dynamic}\n                        Averaging regime. Default 'isotropic'.\n  --burst {0,1}         Turn on burst averaging: 0 = no (default), 1 = yes.\n  --burst_threshold BURST_THRESHOLD\n                        Burst size threshold to use with burst averaging\n                        (default 30).\n  --burst_decay BURST_DECAY\n                        Burst size decay constant to use with burst averaging\n                        (default 3).\n  -p PREFIX, --prefix PREFIX\n                        Output files' prefix.\n\nOutput: <prefix>_dist.txt, <prefix>_kappa2.txt, <prefix>_insteff.txt\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/diegoeduardok/SimFRET",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "SimFRET",
    "package_url": "https://pypi.org/project/SimFRET/",
    "platform": "",
    "project_url": "https://pypi.org/project/SimFRET/",
    "project_urls": {
      "Homepage": "https://github.com/diegoeduardok/SimFRET"
    },
    "release_url": "https://pypi.org/project/SimFRET/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.7.6",
    "summary": "A Python package to simulate FRET experiments.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8920941,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ec7bf5107a399cfa20a7310da6ae0db4a31ff176284b5845084b94eb2f1350d",
          "md5": "ed00d9ed73752a9d01258dbbfbb549e9",
          "sha256": "4c77b9996eb8a31e7df46e15f80ae64dee05f2c0faf9eff315288775394c7855"
        },
        "downloads": -1,
        "filename": "SimFRET-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed00d9ed73752a9d01258dbbfbb549e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.6",
        "size": 25352,
        "upload_time": "2020-12-17T06:13:53",
        "upload_time_iso_8601": "2020-12-17T06:13:53.731361Z",
        "url": "https://files.pythonhosted.org/packages/6e/c7/bf5107a399cfa20a7310da6ae0db4a31ff176284b5845084b94eb2f1350d/SimFRET-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14a0c767cd070d8a4b2c285d1aa80094e63315f02906746fa0e0aa3b71df001f",
          "md5": "8bbb678fae4bd2ff6540321f4ed43d5e",
          "sha256": "078e4d5fbeb70a69ab7203a44a338b4c8034b2cddcc718efd2d61e2d66179016"
        },
        "downloads": -1,
        "filename": "SimFRET-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8bbb678fae4bd2ff6540321f4ed43d5e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.6",
        "size": 19115,
        "upload_time": "2020-12-17T06:13:55",
        "upload_time_iso_8601": "2020-12-17T06:13:55.456787Z",
        "url": "https://files.pythonhosted.org/packages/14/a0/c767cd070d8a4b2c285d1aa80094e63315f02906746fa0e0aa3b71df001f/SimFRET-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6ec7bf5107a399cfa20a7310da6ae0db4a31ff176284b5845084b94eb2f1350d",
        "md5": "ed00d9ed73752a9d01258dbbfbb549e9",
        "sha256": "4c77b9996eb8a31e7df46e15f80ae64dee05f2c0faf9eff315288775394c7855"
      },
      "downloads": -1,
      "filename": "SimFRET-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ed00d9ed73752a9d01258dbbfbb549e9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.6",
      "size": 25352,
      "upload_time": "2020-12-17T06:13:53",
      "upload_time_iso_8601": "2020-12-17T06:13:53.731361Z",
      "url": "https://files.pythonhosted.org/packages/6e/c7/bf5107a399cfa20a7310da6ae0db4a31ff176284b5845084b94eb2f1350d/SimFRET-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "14a0c767cd070d8a4b2c285d1aa80094e63315f02906746fa0e0aa3b71df001f",
        "md5": "8bbb678fae4bd2ff6540321f4ed43d5e",
        "sha256": "078e4d5fbeb70a69ab7203a44a338b4c8034b2cddcc718efd2d61e2d66179016"
      },
      "downloads": -1,
      "filename": "SimFRET-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8bbb678fae4bd2ff6540321f4ed43d5e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.6",
      "size": 19115,
      "upload_time": "2020-12-17T06:13:55",
      "upload_time_iso_8601": "2020-12-17T06:13:55.456787Z",
      "url": "https://files.pythonhosted.org/packages/14/a0/c767cd070d8a4b2c285d1aa80094e63315f02906746fa0e0aa3b71df001f/SimFRET-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}