{
  "info": {
    "author": "postmarketOS Developers",
    "author_email": "info@postmarketos.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "This repository holds two programs, mrhlpr and mrtest. The mrhlpr program is\ndescribed below, information about mrtest can be found in the\n[postmarketOS wiki](https://wiki.postmarketos.org/wiki/Mrtest).\n\n# mrhlpr - merge request helper\n\nLightweight script to support maintainers of postmarketOS in the merge workflow on GitLab.\n\nAfter installing mrhlpr (see below) and [configuring a gpg key](https://git-scm.com/book/en/v2/Git-Tools-Signing-Your-Work) to use with git, this is the basic workflow. Further below is a full example session with example output.\n\n0. Use `cd` to enter a locally cloned git repository (e.g. `pmaports.git`).\n1. Checkout the merge request locally (`mrhlpr checkout 123`).\n2. Rebase on latest master (`git rebase master`).\n3. Add the MR-ID to all commit messages and sign them (`mrhlpr fixmsg`).\n4. Optionally squash all commits (`git rebase -i master`).\n5. Check if everything is fine (`mrhlpr status`).\n6. If everything looks good force push (`git push --force`).\n7. In the GitLab web UI: wait for CI, then merge.\n\n## Installation\nSame as for pmbootstrap: clone the repo, create a symlink to `mrhlpr.py` in your `PATH`. Optionally set up autocompletion with argcomplete. See pmbootstrap's [manual installation instructions](https://wiki.postmarketos.org/wiki/Installing_pmbootstrap#Installing_Manually) for details.\n\n## Example Session\n\nStart with `mrhlpr checkout` and the MR-ID. The built-in checklist will tell the next steps. All API requests get cached on disk.\n\n```shell-session\n$ cd ~/code/pmbootstrap/aports\n$ mrhlpr checkout 81                                               \nDownload https://gitlab.com/api/v4/projects/postmarketOS%2Fpmaports/merge_requests/81\nDownload https://gitlab.com/api/v4/projects/8065375\nCheckout feature/abuild-sign-noinclude from postmarketOS/feature/abuild-sign-noinclude\nhttps://gitlab.com/postmarketOS/pmaports/merge_requests/81\n\n\"main/abuild-sign-noinclude: new aport\" (!81)\n10 commits from postmarketOS/feature/abuild-sign-noinclude\n\n[OK ] Changes allowed\n[OK ] Clean worktree\n[NOK] Rebase on master\n[NOK] MR-ID in commit msgs\n[NOK] Commits are signed\n\nChecklist:\n* 10 commits: consider squashing ('git rebase -i origin/master')\n* Rebase on master ('git rebase origin/master')\n* Check again ('mrhlpr status')\n```\n\n```shell-session\n$ git rebase -i master\n$ mrhlpr status\nhttps://gitlab.com/postmarketOS/pmaports/merge_requests/81\n\n\"main/abuild-sign-noinclude: new aport\" (!81)\n1 commit from postmarketOS/feature/abuild-sign-noinclude\n\n[OK ] Changes allowed\n[OK ] Clean worktree\n[OK ] Rebase on master\n[NOK] MR-ID in commit msgs\n[NOK] Commits are signed\n\nChecklist:\n* Add the MR-ID to all commits and sign them ('mrhlpr fixmsg')\n```\n\n```shell-session\n$ mrhlpr fixmsg\nAppending ' (!81)' to all commits...\nhttps://gitlab.com/postmarketOS/pmaports/merge_requests/81\n\n\"main/abuild-sign-noinclude: new aport\" (!81)\n1 commit from postmarketOS/feature/abuild-sign-noinclude\n\n[OK ] Changes allowed\n[OK ] Clean worktree\n[OK ] Rebase on master\n[OK ] MR-ID in commit msgs\n[OK ] Commits are signed\n\nChecklist:\n* Origin up-to-date? ('git fetch origin')\n* Pretty 'git log'? (consider copying MR desc)\n* Push your changes ('git push --force')\n* Web UI: comment about your reviewing and testing\n* Web UI: approve MR\n* Web UI: do (automatic) merge\n```\n\n### Status descriptions\n\n| Status | Description                  |\n| ------ | ---------------------------- |\n| [OK ]  | Everything is OK             |\n| [NOK]  | Something is wrong           |\n| [???]  | Seems OK, but manually check |\n\n### mrhlpr.json\n\nOptionally you can add a `.mrhlpr.json` file to your respository, this contains extra verification rules specific to your repository. An example file:\n\n```json\n{\n    \"subject_format\": {\n        \"pass\": [\n            \"^[a-z]+/[a-z-0-9*{}]+: new aport(s|)( \\\\(!\\\\d+\\\\)|)$\",\n            \"^[a-z]+/[a-z-0-9*{}]+: pkgrel bump( \\\\(!\\\\d+\\\\)|)$\",\n            \"^[a-z-0-9*{}]+: new device \\\\([^\\\\)]+\\\\)( \\\\(!\\\\d+\\\\)|)\",\n            \"^[a-z]+/[a-z-0-9*{}]+: upgrade to [0-9\\\\.a-z\\\\-_]+( \\\\(!\\\\d+\\\\)|)$\"\n        ],\n        \"unknown\": [\n            \"^[a-z-0-9*{}\\\\/]+: [a-z\\\\-0-9*{}\\\\(\\\\)\\\\._ ]+( \\\\(!\\\\d+\\\\)|)$\"\n        ]\n    }\n}\n```\n\n\n### Portability\n\nThis script is not postmarketOS specific, it should work with any GitLab repository. Right now, only gitlab.com is detected - but detecting any GitLab servers could be added in `mrhlpr/gitlab.py:parse_git_origin()` if desired.\n\n\n### Troubleshooting\n\n`mrhlpr -v` displays debug log messages, such as all git commands and their output, as well as the locations of all http cache files.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.postmarketos.org",
    "keywords": "postmarketos gitlab",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mrhlpr",
    "package_url": "https://pypi.org/project/mrhlpr/",
    "platform": null,
    "project_url": "https://pypi.org/project/mrhlpr/",
    "project_urls": {
      "Homepage": "https://www.postmarketos.org"
    },
    "release_url": "https://pypi.org/project/mrhlpr/1.0.0/",
    "requires_dist": [
      "argcomplete ; extra == 'completion'"
    ],
    "requires_python": ">=3.6",
    "summary": "postmarketOS tools for interacting with gitlab MRs",
    "version": "1.0.0",
    "yanked": true,
    "yanked_reason": "no plans to push further releases of mrhlpr to pip, use the alpine package or git clone instead!"
  },
  "last_serial": 13312143,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7524530c02c9a1aa0c5b7c1c8ff4a011fbe2c4312e94645923f963890e36129a",
          "md5": "c3f5aa8d103bc54d5853436d905c162c",
          "sha256": "d74fab112be375566c31f91c3f01bf3e77fa9c42aa431fc8e436e7457c946008"
        },
        "downloads": -1,
        "filename": "mrhlpr-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c3f5aa8d103bc54d5853436d905c162c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35293,
        "upload_time": "2022-03-27T16:34:43",
        "upload_time_iso_8601": "2022-03-27T16:34:43.254204Z",
        "url": "https://files.pythonhosted.org/packages/75/24/530c02c9a1aa0c5b7c1c8ff4a011fbe2c4312e94645923f963890e36129a/mrhlpr-1.0.0-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "no plans to push further releases of mrhlpr to pip, use the alpine package or git clone instead!"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83efdacc3f0e6bd66758dcb097f0fe840c40a7820432775ddadda227c22512af",
          "md5": "c044bed5d5532b4f091bd168215106b4",
          "sha256": "f5c80d6151049fb80d947407db68fc698aae632427adcc605597c74ac21dd5cc"
        },
        "downloads": -1,
        "filename": "mrhlpr-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c044bed5d5532b4f091bd168215106b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31601,
        "upload_time": "2022-03-27T16:34:45",
        "upload_time_iso_8601": "2022-03-27T16:34:45.316891Z",
        "url": "https://files.pythonhosted.org/packages/83/ef/dacc3f0e6bd66758dcb097f0fe840c40a7820432775ddadda227c22512af/mrhlpr-1.0.0.tar.gz",
        "yanked": true,
        "yanked_reason": "no plans to push further releases of mrhlpr to pip, use the alpine package or git clone instead!"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7524530c02c9a1aa0c5b7c1c8ff4a011fbe2c4312e94645923f963890e36129a",
        "md5": "c3f5aa8d103bc54d5853436d905c162c",
        "sha256": "d74fab112be375566c31f91c3f01bf3e77fa9c42aa431fc8e436e7457c946008"
      },
      "downloads": -1,
      "filename": "mrhlpr-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c3f5aa8d103bc54d5853436d905c162c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 35293,
      "upload_time": "2022-03-27T16:34:43",
      "upload_time_iso_8601": "2022-03-27T16:34:43.254204Z",
      "url": "https://files.pythonhosted.org/packages/75/24/530c02c9a1aa0c5b7c1c8ff4a011fbe2c4312e94645923f963890e36129a/mrhlpr-1.0.0-py3-none-any.whl",
      "yanked": true,
      "yanked_reason": "no plans to push further releases of mrhlpr to pip, use the alpine package or git clone instead!"
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "83efdacc3f0e6bd66758dcb097f0fe840c40a7820432775ddadda227c22512af",
        "md5": "c044bed5d5532b4f091bd168215106b4",
        "sha256": "f5c80d6151049fb80d947407db68fc698aae632427adcc605597c74ac21dd5cc"
      },
      "downloads": -1,
      "filename": "mrhlpr-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c044bed5d5532b4f091bd168215106b4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 31601,
      "upload_time": "2022-03-27T16:34:45",
      "upload_time_iso_8601": "2022-03-27T16:34:45.316891Z",
      "url": "https://files.pythonhosted.org/packages/83/ef/dacc3f0e6bd66758dcb097f0fe840c40a7820432775ddadda227c22512af/mrhlpr-1.0.0.tar.gz",
      "yanked": true,
      "yanked_reason": "no plans to push further releases of mrhlpr to pip, use the alpine package or git clone instead!"
    }
  ],
  "vulnerabilities": []
}