{
  "info": {
    "author": "Keenan Burnett, Andrew Li, Shichen Lu, Jingxing Qian, Yuchen Wu, David Yoon",
    "author_email": "boreas@robotics.utias.utoronto.ca",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# pyboreas\n![Boreas](https://github.com/utiasASRL/pyboreas/blob/master/pyboreas/figs/pyboreas.png)\n\nThis devkit provides tools for working with the Boreas Dataset, an all-weather autonomous driving dataset which includes a 128-beam Velodyne Alpha-Prime lidar, a 5MP Blackfly camera, a 360 degree Navtech radar, and post-processed Applanix POS LV GNSS data. Our dataset currently suports benchmarking odometry. We are working towards providing an online benchmark for odometry, localization, and more. We plan to provide an HD map of each driven route. We are also in the process of acquiring 3D labels and hope to be able to provide a challenging object detection benchmark in the future.\n\nPlease note that our website is currently under construction. A live benchmark and a browser for downloading sequences will be available via the website soon.\n\n## Installation\n\n### Using pip\n```\npip install asrl-pyboreas\n```\n\n### From source\n```\ngit clone https://github.com/utiasASRL/pyboreas.git\npip install -e pyboreas\n```\n\n## Download Instructions\n1. [Create an AWS account (optional)](https://aws.amazon.com/premiumsupport/knowledge-center/create-and-activate-aws-account/)\n2. [Install the AWS CLI](https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html)\n3. Create a `root` folder to store the dataset, example: `/path/to/data/boreas/` Each sequence will then be a folder under `root`.\n4. Use the AWS CLI to download either the entire dataset or only the desired sequences and sensors. Add `--no-sign-request` after each of the following commands if you're not going to use an AWS account. For example, the following command will download the entire Boreas dataset:\n\n```bash\nroot=/path/to/data/boreas/\naws s3 sync s3://boreas $root\n```\n\nThe following command will list all the top-level prefixes (sequences):\n\n```bash\nroot=/path/to/data/boreas/\naws s3 ls s3://boreas\n```\n\nAlternatively, [boreas.utias.utoronto.ca (Work In Progress)](https://www.boreas.utias.utoronto.ca/#/download) can be used to browse through sequences so as to pick and choose what data to download. The website will then generate a list of AWS CLI commands that can be run as a bash script. These commands will look something like:\n\n```bash\nroot=/path/to/data/boreas/\ncd $root\naws s3 sync s3://boreas/boreas-2020-11-26-13-58 boreas-2020-11-26-13-58 --exclude \"*\" \\\n    --include \"lidar/\" --include \"radar/\" \\\n    --include \"applanix/\" --include \"calib/\"\n```\n\n## Example Usage\n\n```Python\nimport numpy as np\nfrom pyboreas import BoreasDataset\n\nroot = '/path/to/data/boreas/'\nbd = BoreasDataset(root)\n\n# Note: The Boreas dataset differs from others (KITTI) in that camera,\n# lidar, and radar measurements are not synchronous. However, each\n# sensor message has an accurate timestamp and pose instead.\n# See our tutorials for how to work with multiple sensors.\n\n# Loop through each frame in order (odometry)\nfor seq in bd.sequences:\n    # Iterator examples:\n    for camera_frame in seq.camera:\n        img = camera_frame.img  # np.ndarray\n        # do something\n        camera_frame.unload_data() # Memory reqs will keep increasing without this\n    for lidar_frame in seq.lidar:\n        pts = lidar_frame.points  # np.ndarray (x,y,z,i,r,t)\n        # do something\n        lidar_frame.unload_data() # Memory reqs will keep increasing without this\n    # Retrieve frames based on their index:\n    N = len(seq.radar_frames)\n    for i in range(N):\n        radar_frame = seq.get_radar(i)\n        # do something\n        radar_frame.unload_data() # Memory reqs will keep increasing without this\n\n# Iterator example:\ncam_iter = bd.sequences[0].get_camera_iter()\ncam0 = next(cam_iter)  # First camera frame\ncam1 = next(cam_iter)  # Second camera frame\n\n# Randomly access frames (deep learning, localization):\nN = len(bd.lidar_frames)\nindices = np.random.permutation(N)\nfor idx in indices:\n    lidar_frame = bd.get_lidar(idx)\n    # do something\n    lidar_frame.unload_data() # Memory reqs will keep increasing without this\n\n# Each sequence contains a calibration object:\ncalib = bd.sequences[0].calib\npoint_lidar = np.array([1, 0, 0, 1]).reshape(4, 1)\npoint_camera = np.matmul(calib.T_camera_lidar, point_lidar)\n\n# Each sensor frame has a timestamp, groundtruth pose\n# (4x4 homogeneous transform) wrt a global coordinate frame (ENU),\n# and groundtruth velocity information. Unless it's a part of the test set,\n# in that case, ground truth poses will be missing. However we still provide IMU\n# data (in the applanix frame) through the imu.csv files.\nlidar_frame = bd.get_lidar(0)\nt = lidar_frame.timestamp  # timestamp in seconds\nT_enu_lidar = lidar_frame.pose  # 4x4 homogenous transform [R t; 0 0 0 1]\nvbar = lidar_frame.velocity  # 6x1 vel in ENU frame [v_se_in_e; w_se_in_e] \nvarpi = lidar_frame.body_rate  # 6x1 vel in sensor frame [v_se_in_s; w_se_in_s]\n```\n## Data Visualizer\nWe provide a tool for visualization of sequence frames. Currently, the visualizer supports BEV lidar visualization, BEV radar visualization, Perspective camera + lidar visualization, and 3D lidar point visualization.\n\n```Python\nfrom pyboreas import BoreasDataset\nfrom pyboreas.vis.visualizer import BoreasVisualizer\n\nroot = '/path/to/data/boreas/'\nbd = BoreasDataset(root)\nseq = bd.sequences[0]\n\nbv = BoreasVisualizer(seq)\nbv.visualize(starting_frame_idx=0)\n```\nRunning the above code will start a local web server that visualizes the selected sequence.\n```\nDash is running on http://127.0.0.1:8050/\n\n * Serving Flask app 'pyboreas.vis.visualizer' (lazy loading)\n * Environment: production\n   WARNING: This is a development server. Do not use it in a production deployment.\n   Use a production WSGI server instead.\n * Debug mode: off\n * Running on http://127.0.0.1:8050/ (Press CTRL+C to quit)\n```\nOpen a web browser and navigate to the provided ip (in this case 127.0.0.1:8050) to view the sequence visualization.\n## Tutorials\nNote that we provide a few simple tutorials for getting started with the Boreas dataset. Also note that we provide instructions for using this dataset using an AWS SageMaker instance, instructions at: pyboreas/tutorials/aws/README.md.\n\n**NOTE:** ground truth poses have dtype=np.float64, but PyTorch defaults to float32. Avoid using implicit type conversion as this will result in significant quantization error. Implicit conversion is only safe when the translation values are small, such as a pose with respect to a sensor frame or with respect to a starting position, but NOT with respect to ENU (very large).\n\nTODO:\n- Tutorials (pose interp)\n- Ground plane removal\n- Pointcloud voxelization\n- 3D Bounding boxes\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/utiasASRL/boreas-devkit",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "asrl-pyboreas",
    "package_url": "https://pypi.org/project/asrl-pyboreas/",
    "platform": "",
    "project_url": "https://pypi.org/project/asrl-pyboreas/",
    "project_urls": {
      "Homepage": "https://github.com/utiasASRL/boreas-devkit"
    },
    "release_url": "https://pypi.org/project/asrl-pyboreas/1.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "A toolkit for working with the Boreas dataset in Python",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12118626,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78c8c6830a2950def20116a2739a5ab5550cd550d563d78d760c844864f4e822",
          "md5": "4ae2476fa2bfb287699e4e3612134575",
          "sha256": "12f6dd9f90d4dfcd9c602a15aafca6e3b0944ecc5ac3d3a480ce705f3bedf414"
        },
        "downloads": -1,
        "filename": "asrl-pyboreas-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4ae2476fa2bfb287699e4e3612134575",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 5121,
        "upload_time": "2021-10-18T23:31:48",
        "upload_time_iso_8601": "2021-10-18T23:31:48.849922Z",
        "url": "https://files.pythonhosted.org/packages/78/c8/c6830a2950def20116a2739a5ab5550cd550d563d78d760c844864f4e822/asrl-pyboreas-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5ac72b57c121c1f844bd57a7f7ea814563bc2407c3a339c4ff5e753ee10a366",
          "md5": "d4821c7190e2af87c0ca670245230da8",
          "sha256": "55a010e4353a21d67694ced73147428d4b05e16f588c14117cb346069f7d0278"
        },
        "downloads": -1,
        "filename": "asrl-pyboreas-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d4821c7190e2af87c0ca670245230da8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 30479,
        "upload_time": "2021-10-18T23:45:50",
        "upload_time_iso_8601": "2021-10-18T23:45:50.400884Z",
        "url": "https://files.pythonhosted.org/packages/f5/ac/72b57c121c1f844bd57a7f7ea814563bc2407c3a339c4ff5e753ee10a366/asrl-pyboreas-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9545d455eb06c533367502d8321299e20d572419393d16c13f1dfb4645dc63c9",
          "md5": "90e6a1fc6a04da2c7f4f070e4d875849",
          "sha256": "511dda4c7f3d748aee92f07310a2812c7497208731118483691ec11b82265fb0"
        },
        "downloads": -1,
        "filename": "asrl-pyboreas-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "90e6a1fc6a04da2c7f4f070e4d875849",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 30567,
        "upload_time": "2021-10-19T20:05:41",
        "upload_time_iso_8601": "2021-10-19T20:05:41.552973Z",
        "url": "https://files.pythonhosted.org/packages/95/45/d455eb06c533367502d8321299e20d572419393d16c13f1dfb4645dc63c9/asrl-pyboreas-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0675c76bd59307ebb9cf53dc3c20785ba9ebf27278c894041b10c537847ca0b",
          "md5": "28ee4ad24ea29cad31d55d5bce9a975d",
          "sha256": "4c8dd3280c39f7e1f4ab47d9106b5d1e5bfbf260887fbb013434e2ccea8c4b39"
        },
        "downloads": -1,
        "filename": "asrl-pyboreas-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "28ee4ad24ea29cad31d55d5bce9a975d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 30780,
        "upload_time": "2021-10-20T19:36:02",
        "upload_time_iso_8601": "2021-10-20T19:36:02.548016Z",
        "url": "https://files.pythonhosted.org/packages/b0/67/5c76bd59307ebb9cf53dc3c20785ba9ebf27278c894041b10c537847ca0b/asrl-pyboreas-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c09b6121b486871fd7fd16ff74f7b3378d45f82050c442d514df5bd447fac74",
          "md5": "4dba52116d9cbc16b9d9f20f6c65a604",
          "sha256": "a0534ce9e257acc1a7f6fc9b864927ad438cc3091eaba2a78a8fded1a3d82c72"
        },
        "downloads": -1,
        "filename": "asrl-pyboreas-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4dba52116d9cbc16b9d9f20f6c65a604",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 36435,
        "upload_time": "2021-11-25T01:16:18",
        "upload_time_iso_8601": "2021-11-25T01:16:18.442290Z",
        "url": "https://files.pythonhosted.org/packages/0c/09/b6121b486871fd7fd16ff74f7b3378d45f82050c442d514df5bd447fac74/asrl-pyboreas-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c09b6121b486871fd7fd16ff74f7b3378d45f82050c442d514df5bd447fac74",
        "md5": "4dba52116d9cbc16b9d9f20f6c65a604",
        "sha256": "a0534ce9e257acc1a7f6fc9b864927ad438cc3091eaba2a78a8fded1a3d82c72"
      },
      "downloads": -1,
      "filename": "asrl-pyboreas-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "4dba52116d9cbc16b9d9f20f6c65a604",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 36435,
      "upload_time": "2021-11-25T01:16:18",
      "upload_time_iso_8601": "2021-11-25T01:16:18.442290Z",
      "url": "https://files.pythonhosted.org/packages/0c/09/b6121b486871fd7fd16ff74f7b3378d45f82050c442d514df5bd447fac74/asrl-pyboreas-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}