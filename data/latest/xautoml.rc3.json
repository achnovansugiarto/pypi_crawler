{
  "info": {
    "author": "Marc Zoeller",
    "author_email": "marc.zoeller@usu.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Jupyter",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# XAutoML: A Visual Analytics Tool for Establishing Trust in Automated Machine Learning\n\nXAutoML is an interactive visual analytics tool for explaining AutoML optimisation procedures and ML pipelines\nconstructed by AutoML. It combines interactive visualizations with established techniques from explainable AI (XAI) to\nmake the complete AutoML procedure transparent and explainable. We integrate XAutoML with Jupyter to enable experienced\nusers to extend the visual analytics with advanced ad-hoc visualizations based on information extracted from XAutoML\n\nCurrently, XAutoML supports only\n* [auto-sklearn](https://github.com/automl/auto-sklearn)\n* [dswizard](https://github.com/Ennosigaeon/dswizard)\n* [FLAML](https://github.com/microsoft/FLAML)\n* [Optuna](https://github.com/optuna/optuna)\n* [scikit-learn](https://github.com/scikit-learn/scikit-learn)\n\nbut we plan to add support for further AutoML systems. You can find a video introducing XAutoML on [YouTube](https://www.youtube.com/watch?v=AyqMrdlds7o).\n\n[![XAutoML: A Visual Analytics Tool for Establishing Trust in Automated Machine Learning](https://yt-embed.herokuapp.com/embed?v=AyqMrdlds7o)](https://www.youtube.com/watch?v=AyqMrdlds7o \"XAutoML: A Visual Analytics Tool for Establishing Trust in Automated Machine Learning\")\n\n\n## Install\n\nCreate a new environment with python >= 3.7 and make sure swig is installed either on your system or inside the\nenvironment.\n\nInstall swig\n- You can either install swig via conda (`conda install swig`)\n- Or follow the [official documentation](https://www.swig.org/download.html) to install it\n\nTo install the extension, execute:\n\n```bash\npip install xautoml\n```\n\n## Usage\n\nXAutoML currently only works with JupyterLab. You can find ready to use Notebook examples in the [examples](examples)\nfolder.\n\n```shell\ncd examples\njupyter lab\n```\n\nTo use XAutoML, three steps are necessary:\n1) Perform an optimization in one of the supported AutoML frameworks\n2) Import the [RunHistory](xautoml/models.py) of the optimizer via the corresponding [adapter](xautoml/adapter.py)\n3) Create the [XAutoML](xautoml/main.py) visualization\n\n```python\nfrom xautoml.main import XAutoML\nfrom xautoml.adapter import import_sklearn\nfrom xautoml.util.datasets import openml_task\nfrom sklearn.model_selection import RandomizedSearchCV\n\n# 1) Perform AutoML optimization\nrandom_search = RandomizedSearchCV(...).fit(...)\n\n# 2) Use Adapter to create RunHistory\nrh = import_sklearn(random_search)\n\n# 3) Create Visualization\nX_test, y_test = openml_task(31, 0, test=True)\nmain = XAutoML(rh, X_test, y_test)\nmain.explain()\n```\n\n\n## Uninstall\n\nTo remove the extension, execute:\n\n```bash\npip uninstall xautoml\n```\n\n\n## Troubleshoot\n\nIf you are seeing the frontend extension, but it is not working, check\nthat the server extension is enabled:\n\n```bash\njupyter server extension list\n```\n\nIf the server extension is installed and enabled, but you are not seeing\nthe frontend extension, check the frontend extension is installed:\n\n```bash\njupyter labextension list\n```\n\nIf the installation failed with the following exception\n```\n[...]\n    Running setup.py install for pyrfr ... error\n    ERROR: Command errored out with exit status 1:\n    [...]\n    swig.exe -python -c++ -modern -py3 -features nondynamic -I./include -o pyrfr/regression_wrap.cpp pyrfr/regression.i\n    error: command 'swig.exe' failed: No such file or directory\n[...]\n```\nverify that you have swig installed (see [Installation](#Introduction) above).\n\n\n## Contributing\n\n### Development install\n\nNote: You will need NodeJS to build the extension package.\n\nThe `jlpm` command is JupyterLab's pinned version of\n[yarn](https://yarnpkg.com/) that is installed with JupyterLab. You may use\n`yarn` or `npm` in lieu of `jlpm` below.\n\n```bash\n# Clone the repo to your local environment\n# Change directory to the xautoml directory\n# Install package in development mode\npip install -e .\n# Link your development version of the extension with JupyterLab\njupyter labextension develop . --overwrite\n# Server extension must be manually installed in develop mode\njupyter server extension enable xautoml\n# Rebuild extension Typescript source after making changes\njlpm install\njlpm run build\n```\n\nYou can watch the source directory and run JupyterLab at the same time in different terminals to watch for changes in the extension's source and automatically rebuild the extension.\n\n```bash\n# Watch the source directory in one terminal, automatically rebuilding when needed\njlpm run watch\n# Run JupyterLab in another terminal\njupyter lab\n```\n\nWith the watch command running, every saved change will immediately be built locally and available in your running JupyterLab. Refresh JupyterLab to load the change in your browser (you may need to wait several seconds for the extension to be rebuilt).\n\nBy default, the `jlpm run build` command generates the source maps for this extension to make it easier to debug using the browser dev tools. To also generate source maps for the JupyterLab core extensions, you can run the following command:\n\n```bash\njupyter lab build --minimize=False\n```\n\n### Development uninstall\n\n```bash\n# Server extension must be manually disabled in develop mode\njupyter server extension disable xautoml\npip uninstall xautoml\n```\n\nIn development mode, you will also need to remove the symlink created by `jupyter labextension develop`\ncommand. To find its location, you can run `jupyter labextension list` to figure out where the `labextensions`\nfolder is located. Then you can remove the symlink named `xautoml` within that folder.\n\n\n### Release new version\nIncrease version number in `package.json` and upload the latest build to pypi.\n```bash\npip install build\npython -m build -s\npython -m twine upload dist/*\n```\n\n\n## Citation\nIf you are using `XAutoML`, please cite it as\n\n    @article{Zoller2022,\n        author = \"Z{\\\"{o}}ller, Marc-Andr{\\'{e}} and Titov, Waldemar and Schlegel, Thomas and Huber, Marco F.\",\n        title = \"{XAutoML: A Visual Analytics Tool for Establishing Trust in Automated Machine Learning}\",\n        journal = \"arXiv preprint arXiv: 2202.11954\",\n        volume = \"1\",\n        year = \"2022\",\n        pages = \"1-34\",\n        url = \"http://arxiv.org/abs/2202.11954\",\n        eprint = \"2202.11954\",\n        archivePrefix = \"arXiv\",\n        arxivId = \"2202.11954\"\n    }\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Ennosigaeon/xautoml",
    "keywords": "Jupyter,JupyterLab,JupyterLab3",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "xautoml",
    "package_url": "https://pypi.org/project/xautoml/",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/xautoml/",
    "project_urls": {
      "Homepage": "https://github.com/Ennosigaeon/xautoml"
    },
    "release_url": "https://pypi.org/project/xautoml/0.1.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A JupyterLab extension to visualize and explain AutoML optimization procedures.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13450660,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "463315fcdead635c77248372a0359b3b39ce65bcafe1d525d204a255382d377f",
          "md5": "bf55279e72864089c8e0e1ef6fc7c116",
          "sha256": "0b7b276a65f084971fdd07995b928425e1d96a3d3194e3cbd688ac3c648b4e65"
        },
        "downloads": -1,
        "filename": "xautoml-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bf55279e72864089c8e0e1ef6fc7c116",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4002076,
        "upload_time": "2022-02-18T15:33:58",
        "upload_time_iso_8601": "2022-02-18T15:33:58.343266Z",
        "url": "https://files.pythonhosted.org/packages/46/33/15fcdead635c77248372a0359b3b39ce65bcafe1d525d204a255382d377f/xautoml-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69edbc96a0bbaa54df9f00637dbea44894736c35995db62ce3c8bb5463e152db",
          "md5": "4d47725e7079f081f0dfc8f1cd3bbc73",
          "sha256": "c88e4380eb857b152e8cd529eb25aafe3b7d2119e29383b3df3cea9aef2a1efe"
        },
        "downloads": -1,
        "filename": "xautoml-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4d47725e7079f081f0dfc8f1cd3bbc73",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3943479,
        "upload_time": "2022-03-01T13:19:19",
        "upload_time_iso_8601": "2022-03-01T13:19:19.190743Z",
        "url": "https://files.pythonhosted.org/packages/69/ed/bc96a0bbaa54df9f00637dbea44894736c35995db62ce3c8bb5463e152db/xautoml-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87b5aa2ec2aed7ef0c3abd1406013a90aab435b95467eb8dec35d2bf445528a8",
          "md5": "350ea9f297b34eb20ef6613c47505b99",
          "sha256": "37a7cd78a9927817766f9698449e03bafb1bf58e6849777eba91fd9301c32364"
        },
        "downloads": -1,
        "filename": "xautoml-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "350ea9f297b34eb20ef6613c47505b99",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3944750,
        "upload_time": "2022-04-08T06:41:35",
        "upload_time_iso_8601": "2022-04-08T06:41:35.912326Z",
        "url": "https://files.pythonhosted.org/packages/87/b5/aa2ec2aed7ef0c3abd1406013a90aab435b95467eb8dec35d2bf445528a8/xautoml-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "87b5aa2ec2aed7ef0c3abd1406013a90aab435b95467eb8dec35d2bf445528a8",
        "md5": "350ea9f297b34eb20ef6613c47505b99",
        "sha256": "37a7cd78a9927817766f9698449e03bafb1bf58e6849777eba91fd9301c32364"
      },
      "downloads": -1,
      "filename": "xautoml-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "350ea9f297b34eb20ef6613c47505b99",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3944750,
      "upload_time": "2022-04-08T06:41:35",
      "upload_time_iso_8601": "2022-04-08T06:41:35.912326Z",
      "url": "https://files.pythonhosted.org/packages/87/b5/aa2ec2aed7ef0c3abd1406013a90aab435b95467eb8dec35d2bf445528a8/xautoml-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}