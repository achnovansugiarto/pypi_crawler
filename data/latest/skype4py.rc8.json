{
  "info": {
    "author": "Mikko Ohtamaa",
    "author_email": "arkadiusz.wahlig@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": ".. contents:: :local:\n\nIntroduction\n==============\n\n``Skype4Py`` is a Python library which allows you to control Skype client application.\n\nIt works on Windows, OSX and Linux platforms with Python 2.x versions.\n\nCommunity\n===========\n\n`Support and issues on Github <https://github.com/awahlig/skype4py>`_.\nSkype4Py is not a Skype™, not associated with Microsoft or Skype.\nFor questions you can also use `stackoveflow.com with skype4py tag <http://stackoverflow.com/questions/tagged/skype4py>`_. Do **not** go for ``developer.skype.com`` for support.\n\nOrignal author: `Arkadiusz Wahlig <http://arkadiusz.wahlig.eu/>`_\n\nMaintainer: `Mikko Ohtamaa <http://opensourcehacker.com>`_\n\nUsage\n=====\n\nEverything that you should ever need is available as aliases in the ``Skype4Py`` package.\nImport it using the standard form of the ``import`` statement:\n\n::\n\n    import Skype4Py\n\nImporting the whole package into your script's namespace using ``from Skype4Py import *`` is\ngenerally discouraged. You should also not access the modules in the package directly as they\nare considered an implementation detail and may change in future versions without notice.\n\nThe package provides the following:\n\n- Classes\n\n ``Skype4Py.Skype``, an alias for `Skype4Py.skype.Skype`\n\n ``Skype4Py.CallChannelManager``, an alias for `Skype4Py.callchannel.CallChannelManager`\n\n- Constants\n\n Everything from the `Skype4Py.enums` module.\n\n ``platform``, either ``'windows'``, ``'posix'`` or ``'darwin'`` depending\n on the current platform (Windows, Linux, Mac OS X).\n\n- Errors\n\n ``Skype4Py.SkypeError``, an alias for `Skype4Py.errors.SkypeError`\n\n ``Skype4Py.SkypeAPIError``, an alias for `Skype4Py.errors.SkypeAPIError`\n\nThe two classes exposed by the ``Skype4Py`` package are the only ones that are to be instantiated\ndirectly. They in turn provide means of instantiating the remaining ones. They are also the only\nclasses that provide event handlers (for more information about events and how to use them, see\nthe `EventHandlingBase` class.\n\nEvery Skype4Py script instantiates at least the ``Skype4Py.Skype`` class which gives access to\nthe Skype client running currently in the system. Follow the `Skype4Py.skype.Skype` reference to\nsee what you can do with it.\n\n**Warning!** While reading this documentation, it is important to keep in mind that everything\nneeded is in the top package level because the documentation refers to all objects in the places\nthey actually live.\n\nQuick example\n----------------\n\nThis short example connects to Skype client and prints the user's full name and the names of all the\ncontacts from the contacts list:\n\n::\n\n   import Skype4Py\n\n   # Create an instance of the Skype class.\n   skype = Skype4Py.Skype()\n\n   # Connect the Skype object to the Skype client.\n   skype.Attach()\n\n   # Obtain some information from the client and print it out.\n   print 'Your full name:', skype.CurrentUser.FullName\n   print 'Your contacts:'\n   for user in skype.Friends:\n       print '    ', user.FullName\n\nNote on the naming convention\n--------------------------------\n\nSkype4Py uses two different naming conventions. The first one applies to interfaces derived from\n`Skype4COM <https://developer.skype.com/Docs/Skype4COM>`_, a COM library which was an inspiration for Skype4Py. This convention uses the ``CapCase``\nscheme for class names, properties, methods and their arguments. The constants use the ``mixedCase``\nscheme.\n\nThe second naming convention is more \"Pythonic\" and is used by all other parts of the package\nincluding internal objects. It uses mostly the same ``CapCase`` scheme for class names (including\nexception names) with a small difference in abbreviations. Where the first convention would use\na ``SkypeApiError`` name, the second one uses ``SkypeAPIError``. Other names including properties,\nmethods, arguments, variables and module names use lowercase letters with underscores.\n\nProjects using Skype4Py\n=========================\n\nSee `Sevabot - A Skype bot supporting integration with external services <https://github.com/opensourcehacker/sevabot>`_\n\nTroubleshooting\n================\n\nSegfaults\n--------------\n\nIf you get segfault on OSX make sure you are using `32-bit Python <http://stackoverflow.com/questions/2088569/how-do-i-force-python-to-be-32-bit-on-snow-leopard-and-other-32-bit-64-bit-quest>`_.\n\n`Debugging segmentation faults with Python <http://wiki.python.org/moin/DebuggingWithGdb>`_.\n\nRelated gdb dump::\n\n    Program received signal EXC_BAD_ACCESS, Could not access memory.\n    Reason: KERN_INVALID_ADDRESS at address: 0x0000000001243b68\n    0x00007fff8c12d878 in CFRetain ()\n    (gdb) bt\n    #0  0x00007fff8c12d878 in CFRetain ()\n    #1  0x00000001007e07ec in ffi_call_unix64 ()\n    #2  0x00007fff5fbfbb50 in ?? ()\n    (gdb) c\n    Continuing.\n\n    Program received signal EXC_BAD_ACCESS, Could not access memory.\n    Reason: KERN_INVALID_ADDRESS at address: 0x0000000001243b68\n    0x00007fff8c12d878 in CFRetain ()\n\nSkype4Py on for OSX 64-bit (all new OSX versions)\n------------------------------------------------------\n\nCurrently Skype4Py must be installed and run using ``arch``\ncommand to force compatibility with 32-bit Skype client application.\n\nTo install::\n\n    arch -i386 pip install Skype4Py\n\nAlso when you run your application using Skype4Py prefix the run command with::\n\n    arch -i386\n\nCrashing on a startup on Ubuntu server\n------------------------------------------------------\n\nSegfault when starting up the bot::\n\n      File \"build/bdist.linux-i686/egg/Skype4Py/skype.py\", line 250, in __init__\n      File \"build/bdist.linux-i686/egg/Skype4Py/api/posix.py\", line 40, in SkypeAPI\n      File \"build/bdist.linux-i686/egg/Skype4Py/api/posix_x11.py\", line 254, in __in                                    it__\n    Skype4Py.errors.SkypeAPIError: Could not open XDisplay\n    Segmentation fault (core dumped)\n\nThis usually means that your DISPLAY environment variable is wrong.\n\nTry::\n\n    export DISPLAY=:1\n\nor::\n\n    export DISPLAY=:0\n\ndepending on your configuration before running Sevabot.\n\nRunning unit tests\n====================\n\nHere is an example::\n\n    virtualenv-2.7 venv  # Create venv\n    source venv/bin/activate\n    python setup.py develop  # Install Skype4Py in development mode\n    cd unittests\n    python skype4pytest.py  # Execute tests\n\nMaking a release\n=================\n\n`Use zest.releaser <http://opensourcehacker.com/2012/08/14/high-quality-automated-package-releases-for-python-with-zest-releaser/>`_\n\nExample::\n\n    virtualenv-2.7 venv  # Create venv\n    source venv/bin/activate\n    # Bump version in setup.py\n    python setup.py develop  # Install Skype4Py in development mode\n    pip install collective.checkdocs\n    pthon setup.py checkdocs # Check .rst syntax\n    easy_install zest.releaser\n    fullrelease\n\nTrademark notification\n========================\n\nSkype™, associated trademarks and logos and the “S” logo are trademarks of Skype. ``Skype4Py``\nPython project is not affiliate of Skype or Microsoft corporation.\n\n\n\n\n\nChangelog\n======================\n\n1.0.35 (2013-05-25)\n-------------------\n\n- Fixed Issue #16 [prajna-pranab]\n\n  The Skype API generally responds to ALTER commands by echoing back the command, including\n  any id associated with the command e.g.\n\n  -> ALTER VOICEMAIL <id> action\n  <- ALTER VOICEMAIL <id> action\n\n  For some reason the API strips the chat id from the ALTER CHAT command when it responds\n  but the code in the chat.py _Alter() method was expecting the command to be echoed back\n  just as it had been sent.\n\n- Updated Skype main window classname under Windows for Skype versions 5 and\n  higher, to detect whether Skype is running [suurjaak]\n\n1.0.34 (2013-01-30)\n--------------------\n\n- Reworked release system and egg structure to follow the best practices [miohtama]\n\n- Merged all fixed done in a fork https://github.com/stigkj/Skype4Py [miohtama]\n\n- Use standard pkg_distribution mechanism to expose the version numebr [miohtama]\n\n- Skype4Py.platform\n\n  Easy detection of what platform code Skype4Py is using currently.\n  May be one of 'posix', 'windows' or 'darwin'.\n\n- DBus is now a default Linux (posix) platform\n\n  Both DBus and X11 transports have been improved to work better in GUI environments.\n  This revealed, that a special initialization code must be executed if the X11\n  transport is combined with the PyGTK GUI framework and possible other similar\n  libraries. The DBus transport on the other hand, requires enabling only a single\n  option. That and the fact, that DBus is a newer technology created to replace\n  such old IPC techniques like X11 messaging, forced me to make it the default\n  transport.\n\n- RunMainLoop option for DBus transport and Mac OS X (darwin) platform\n\n- Fixed CHANGES syntax so that zest.releaser understands it [miohtama]\n\n1.0.33 (2013-01-30)\n\n* were removed and replaced by a single \"RunMainLoop\" option. The same option has\n  been added to Mac OS X platform transport.\n\n* The default value (if option is not specified) is True which means that the\n  transport will run an events loop on a separate thread to be able to receive\n  and process messages from Skype (which result in Skype4Py event handlers being\n  fired up).\n\n* This option has to be set to False if the events loop is going to be run somewhere\n  else - the primary example are GUI applications which use the events loop to\n  process messages from the user interfaces.\n\n* Trying to run two loops (one by the GUI framework and another one by Skype4Py)\n  causes a lot of problems and unexpected behavior. When set to False, this option\n  will tell Skype4Py to reuse the already running loop.\n\n* Note that if no other loop is running and this option is False, Skype4Py will\n  remain to function (commands may be send to Skype and replies are returned)\n  but it won't receive notifications from the client and their corresponding\n  events will never be fired up.\n\n* unittests for the common parts\n\n  Unittests were written for parts of Skype4Py code shared by all platforms and\n  transports. This is roughly 80% of the codebase and include all classes and the\n  code translating object methods/properties calls to Skype API commands.\n\n* Call and Voicemail device methods support simultaneous devices correctly\n\n  The CaptureMicDevice(), InputDevice() and OutputDevice() methods trio of\n  Call and Voicemail objects support enabling of multiple devices at the\n  same time. Previously, enabling one device disabled all the other.\n\n* Collections\n\n  Almost all collection types used by Skype4COM are now supported by Skype4Py too.\n  Collection types were initially skipped as Python provides a comprehensive set\n  of its own container types. However, since most objects are represented by Handles\n  or Ids, it makes a lot of sense to create a custom container type holding the\n  handles only and creating the objects on-the-fly as they are accessed. This\n  is the main reason for introduction of collection types. They also support\n  methods provided by their counterparts in Skype4COM world.\n\n* Code cleanup and naming conventions\n\n  The whole codebase has been reviewed and cleaned up. The naming convention for\n  all objects (modules, classes, etc.) has been defined and implemented. It still\n  is a mixed convention (uses two different conventions applied to different\n  objects) but at least there is a standard now.\n\n* String type policy\n\n  Skype4Py now returns unicode only when it is needed. For example, Skypenames\n  are plain strings now while chat messages (their bodies) remain in unicode.\n\n  Also, if Skype4Py expects a unicode string from the user and a plain string\n  is passed instead, it tries to decode it using the UTF-8 codec (as opposed\n  to ASCII codec which was used previously).",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/awahlig/skype4py",
    "keywords": null,
    "license": "BSD License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "Skype4Py",
    "package_url": "https://pypi.org/project/Skype4Py/",
    "platform": "Windows,Linux,MacOS X",
    "project_url": "https://pypi.org/project/Skype4Py/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/awahlig/skype4py"
    },
    "release_url": "https://pypi.org/project/Skype4Py/1.0.35/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Skype API wrapper for Python.",
    "version": "1.0.35",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 802699,
  "releases": {
    "0.9.28.4": [],
    "0.9.28.5": [],
    "0.9.28.7": [],
    "1.0.32.0": [],
    "1.0.32.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d531b71d4184df7b590f4372b39b8e0986c2265b64ed8f6a53b3ad3cb60d652e",
          "md5": "c788482669ac067f975d9abdf5c74792",
          "sha256": "6ec059ff567299f9ffccd0dd8ff29809442f14b9525768fc7b516f37dadaeec5"
        },
        "downloads": -1,
        "filename": "Skype4Py-1.0.32.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c788482669ac067f975d9abdf5c74792",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 131880,
        "upload_time": "2012-10-02T17:14:10",
        "upload_time_iso_8601": "2012-10-02T17:14:10.967736Z",
        "url": "https://files.pythonhosted.org/packages/d5/31/b71d4184df7b590f4372b39b8e0986c2265b64ed8f6a53b3ad3cb60d652e/Skype4Py-1.0.32.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca8695a224a0fad835906dbe92c9a08847a45c5d4b1e6624537c09d1d65912bc",
          "md5": "01eaf678f5c22338f9c3bb4cc9bd8559",
          "sha256": "b94e1a4c88dc366af82bbdcad0f4286706b5880373b759298844eaddb8c00441"
        },
        "downloads": -1,
        "filename": "Skype4Py-1.0.32.1.zip",
        "has_sig": false,
        "md5_digest": "01eaf678f5c22338f9c3bb4cc9bd8559",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 183178,
        "upload_time": "2012-10-02T17:14:07",
        "upload_time_iso_8601": "2012-10-02T17:14:07.315356Z",
        "url": "https://files.pythonhosted.org/packages/ca/86/95a224a0fad835906dbe92c9a08847a45c5d4b1e6624537c09d1d65912bc/Skype4Py-1.0.32.1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.33": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a35efd1be28b9a049c836cf0c373cb5ff749aabad738b8fe043367553b5adc86",
          "md5": "c48a4aaa7591d9ec711daa6d11fce5c5",
          "sha256": "f10935cb8ac2e56e64897ab13aaabbf5b553e6df4d6226a724e7c05ee6ca14a7"
        },
        "downloads": -1,
        "filename": "Skype4Py-1.0.33.zip",
        "has_sig": false,
        "md5_digest": "c48a4aaa7591d9ec711daa6d11fce5c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 171613,
        "upload_time": "2013-01-30T14:22:40",
        "upload_time_iso_8601": "2013-01-30T14:22:40.953543Z",
        "url": "https://files.pythonhosted.org/packages/a3/5e/fd1be28b9a049c836cf0c373cb5ff749aabad738b8fe043367553b5adc86/Skype4Py-1.0.33.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.34": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "551c1b2bfeffadfff6037174ba42b20cc72e01b6a271abe2383ffde0f69328f3",
          "md5": "0b2b58d89097929a007496e9eab3eddc",
          "sha256": "1a626c03a997c4b272941488228330285863c34ade0e4a17f6d39b55657edd41"
        },
        "downloads": -1,
        "filename": "Skype4Py-1.0.34.zip",
        "has_sig": false,
        "md5_digest": "0b2b58d89097929a007496e9eab3eddc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 171858,
        "upload_time": "2013-01-30T14:29:31",
        "upload_time_iso_8601": "2013-01-30T14:29:31.647455Z",
        "url": "https://files.pythonhosted.org/packages/55/1c/1b2bfeffadfff6037174ba42b20cc72e01b6a271abe2383ffde0f69328f3/Skype4Py-1.0.34.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.35": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88abcfcc614007c5e5e0c289b65a3cec871a0cb75038609acb627b034c1e9833",
          "md5": "e84a826fac4e5702c474d931160b4723",
          "sha256": "79dbf9033a60b3d37ff1a8eb07fcc5f8dd1f5afb79cb83b216f721acca4d63c4"
        },
        "downloads": -1,
        "filename": "Skype4Py-1.0.35.zip",
        "has_sig": false,
        "md5_digest": "e84a826fac4e5702c474d931160b4723",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 173489,
        "upload_time": "2013-05-25T08:01:11",
        "upload_time_iso_8601": "2013-05-25T08:01:11.689642Z",
        "url": "https://files.pythonhosted.org/packages/88/ab/cfcc614007c5e5e0c289b65a3cec871a0cb75038609acb627b034c1e9833/Skype4Py-1.0.35.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "88abcfcc614007c5e5e0c289b65a3cec871a0cb75038609acb627b034c1e9833",
        "md5": "e84a826fac4e5702c474d931160b4723",
        "sha256": "79dbf9033a60b3d37ff1a8eb07fcc5f8dd1f5afb79cb83b216f721acca4d63c4"
      },
      "downloads": -1,
      "filename": "Skype4Py-1.0.35.zip",
      "has_sig": false,
      "md5_digest": "e84a826fac4e5702c474d931160b4723",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 173489,
      "upload_time": "2013-05-25T08:01:11",
      "upload_time_iso_8601": "2013-05-25T08:01:11.689642Z",
      "url": "https://files.pythonhosted.org/packages/88/ab/cfcc614007c5e5e0c289b65a3cec871a0cb75038609acb627b034c1e9833/Skype4Py-1.0.35.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}