{
  "info": {
    "author": "Noah Pflugradt",
    "author_email": "n.pflugradt@fz-juelich.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "[![PyPI Version](https://img.shields.io/pypi/v/hisim.svg)](https://pypi.python.org/pypi/hisim)\n [![PyPI - License](https://img.shields.io/pypi/l/hisim)](LICENSE)\n\n <a href=\"https://www.fz-juelich.de/en/iek/iek-3\"><img src=\"https://www.fz-juelich.de/static/media/Logo.2ceb35fc.svg\" alt=\"Forschungszentrum Juelich Logo\" width=\"230px\"></a> \n\n# HiSim - Household Infrastructure and Building Simulator\n\nHiSim is a Python package for simulation and analysis of household scenarios and building systems using modern\ncomponents as alternative to fossil fuel based ones. This package integrates load profiles generation of electricity\nconsumption, heating demand, electricity generation, and strategies of smart strategies of modern components, such as\nheat pump, battery, electric vehicle or thermal energy storage. HiSim is a package under development by\nForschungszentrum JÃ¼lich und Hochschule Emden/Leer. For detailed documentation, please\naccess [ReadTheDocs](https://household-infrastructure-simulator.readthedocs.io/en/latest/) of this repository.\n\n\nClone repository\n-----------------------\nTo clone this repository, enter the following command to your terminal:\n\n```python\ngit\nclone\nhttps: // github.com / FZJ - IEK3 - VSA / HiSim.git\n```\n\nVirtual Environment\n-----------------------\nBefore installing `hisim`, it is recommended to set up a Python virtual environment. Let `hisimvenv` be the name of\nvirtual environment to be created. For Windows users, setting the virtual environment in the path `\\hisim` is done with\nthe command line:\n\n```python\npython - m\nvenv\nhisimvenv\n```\n\nAfter its creation, the virtual environment can be activated in the same directory:\n\n```python\nhisimvenv\\Scripts\\activate\n```\n\nFor Linux/Mac users, the virtual environment is set up and activated as follows:\n\n```python\nvirtual\nhisimvenv\nsource\nhisimvenv / bin / activate\n```\n\nAlternatively, Anaconda can be used to set up and activate the virtual environment:\n\n```python\nconda\ncreate - n\nhisimvenv\npython = 3.9\nconda\nactivate\nhisimvenv\n```\n\nWith the successful activation, `hisim` is ready to be locally installed.\n\nInstall package\n------------------------\nAfter setting up the virtual environment, install the package to your local libraries:\n\n```python\npip\ninstall - e.\n```\n\nRun Simple Examples\n-----------------------\nRun the python interpreter in the `hisim/examples` directory with the following command:\n\n```python\npython.. / hisim / hisim_main.py\nexamples\nfirst_example\n```\n\nThis command executes `hisim_main.py` on the setup function `first_example` implemented in the file `examples.py` that\nis stored in `hisim/examples`. The same file contains another setup function that can be used: `second_example`. The\nresults can be visualized under directory `results` created under the same directory where the script with the setup\nfunction is located.\n\nRun Basic Household Example\n-----------------------\nThe directory `hisim\\examples` also contains a basic household configuration in the script `basic_household.py`. The\nfirst setup function (`basic_household_explicit`) can be executed with the following command:\n\n```python\npython.. / hisim / hisim_main.py\nbasic_household.py\nbasic_household_explicit\n```\n\nThe system is set up with the following elements:\n\n* Occupancy (Residents' Demands)\n* Weather\n* Photovoltaic System\n* Building\n* Heat Pump\n\nHence, photovoltaic modules and the heat pump are responsible to cover the electricity the thermal energy demands as\nbest as possible. As the name of the setup function says, the components are explicitly connected to each other, binding\ninputs correspondingly to its output sequentially. This is difference then automatically connecting inputs and outputs\nbased its similarity. For a better understanding of explicit connection, proceed to session `IO Connecting Functions`.\n\nGeneric Setup Function Walkthrough\n---------------------\nThe basic structure of a setup function follows:\n\n1. Set the simulation parameters (See `SimulationParameters` class in `hisim/hisim/component.py`)\n1. Create a `Component` object and add it to `Simulator` object\n    1. Create a `Component` object from one of the child classes implemented in `hisim/hisim/components`\n        1. Check if `Component` class has been correctly imported\n    1. If necessary, connect your object's inputs with previous created `Component` objects' outputs.\n    1. Finally, add your `Component` object to `Simulator` object\n1. Repeat step 2 while all the necessary components have been created, connected and added to the `Simulator` object.\n\nOnce you are done, you can run the setup function according to the description in the simple example run.\n\nPackage Structure\n-----------\nThe main program is executed from `hisim/hisim/hisim_main.py`. The `Simulator`(`simulator.py`) object groups `Component`\ns declared and added from the setups functions. The `ComponentWrapper`(`simulator.py`) gathers together the `Component`s\ninside an `Simulator` Object. The `Simulator` object performs the entire simulation under the\nfunction `run_all_timesteps` and stores the results in a Python pickle `data.pkl` in a subdirectory\nof `hisim/hisim/results` named after the executed setup function. Plots and the report are automatically generated from\nthe pickle by the class `PostProcessor` (`hisim/hisim/postprocessing/postprocessing.py`).\n\nComponent Class\n-----------\nA child class inherits from the `Component` class in `hisim/hisim/component.py` and has to have the following methods\nimplemented:\n\n* i_save_state: updates previous state variable with the current state variable\n* i_restore_state: updates current state variable with the previous state variable\n* i_simulate: performs a timestep iteration for the `Component`\n* i_doublecheck: checks if the values are expected throughout the iteration\n\nThese methods are used by `Simulator` to execute the simulation and generate the results.\n\nList of `Component` children\n-----------\nTheses classes inherent from `Component` (`component.py`) class and can be used in your setup function to customize\ndifferent configurations. All `Component` class children are stored in `hisim/hisim/components` directory. Some of these\nclasses are:\n\n- `RandomNumbers` (`random_numbers.py`)\n- `SimpleController` (`simple_controller.py`)\n- `SimpleSotrage` (`simple_storage.py`)\n- `Transformer` (`transformer.py`)\n- `PVSystem` (`pvs.py`)\n- `CHPSystem` (`chp_system.py`)\n- `Csvload` (`csvload.py`)\n- `SumBuilderForTwoInputs` (`sumbuilder.py`)\n- `SumBuilderForThreeInputs` (`sumbuilder.py`)\n- ToDo: more components to be added\n\nConnecting Input/Outputs\n-----------\nLet `my_home_electricity_grid` and `my_appliance` be Component objects used in the setup function. The\nobject `my_apppliance` has an output `ElectricityOutput` that has to be connected to an object `ElectricityGrid`. The\nobject `my_home_electricity_grid` has an input `ElectricityInput`, where this connection takes place. In the setup\nfunction, the connection is performed with the method `connect_input` from the `Simulator` class:\n\n```python\nmy_home_electricity_grid.connect_input(input_fieldname=my_home_electricity_grid.ELECTRICITY_INPUT,\n                                       src_object_name=my_appliance.component_name,\n                                       src_field_name=my_appliance.ELECTRICITY_OUTPUT)\n```\n\nConfiguration Automator\n-----------\nA configuration automator is under development and has the goal to reduce connections calls among similar components.\n\nPost Processing\n-----------\nAfter the simulator runs all time steps, the post processing (`postprocessing.py`) reads the persistent saved results,\nplots the data and\ngenerates a report.\n\n## License\n\nMIT License\n\nCopyright (C) 2020-2021 Noah Pflugradt, Vitor Zago, Frank Burkard, Tjarko Tjaden, Leander Kotzur, Detlef Stolten\n\nYou should have received a copy of the MIT License along with this program.\nIf not, see https://opensource.org/licenses/MIT\n\n## About Us\n\n<a href=\"https://www.fz-juelich.de/iek/iek-3/DE/Home/home_node.html\"><img src=\"https://www.fz-juelich.de/SharedDocs/Bilder/IEK/IEK-3/Abteilungen2015/VSA_DepartmentPicture_2019-02-04_459x244_2480x1317.jpg?__blob=normal\" alt=\"Institut TSA\"></a>\n\nWe are\nthe [Institute of Energy and Climate Research - Techno-economic Systems Analysis (IEK-3)](https://www.fz-juelich.de/iek/iek-3/DE/Home/home_node.html)\nbelonging to the [Forschungszentrum JÃ¼lich](www.fz-juelich.de/). Our interdisciplinary institute's research is focusing\non energy-related process and systems analyses. Data searches and system simulations are used to determine energy and\nmass balances, as well as to evaluate performance, emissions and costs of energy systems. The results are used for\nperforming comparative assessment studies between the various systems. Our current priorities include the development of\nenergy strategies, in accordance with the German Federal Governmentâ€™s greenhouse gas reduction targets, by designing new\ninfrastructures for sustainable and secure energy supply chains and by conducting cost analysis studies for integrating\nnew technologies into future energy market frameworks.\n\n## Contributions and Users\n\nDevelopment Partners:\n\n**Hochschule Emden/Leer** inside the project \"Piegstrom\".\n\n**4ward Energy** inside the EU project \"WHY\" \n\n## Acknowledgement\n\nThis work was supported by the Helmholtz Association under the Joint\nInitiative [\"Energy System 2050   A Contribution of the Research Field Energy\"](https://www.helmholtz.de/en/research/energy/energy_system_2050/)\n.\n\nFor this work weather data is based on data\nfrom [\"German Weather Service (Deutscher Wetterdienst-DWD)\"](https://www.dwd.de/DE/Home/home_node.html/), individual\nvalues are averaged\n\n<a href=\"https://www.helmholtz.de/en/\"><img src=\"https://www.helmholtz.de/fileadmin/user_upload/05_aktuelles/Marke_Design/logos/HG_LOGO_S_ENG_RGB.jpg\" alt=\"Helmholtz Logo\" width=\"200px\" style=\"float:right\"></a>\n\n<a href=\"https://www.dwd.de/\"><img src=\"https://www.dwd.de/SharedDocs/bilder/DE/logos/dwd/dwd_logo_258x69.png?__blob=normal&v=1\" alt=\"DWD Logo\" width=\"200px\" style=\"float:right\"></a>\n\nThis project has received funding from the European Unionâ€™s Horizon 2020 research and innovation programme under grant agreement No 891943. \n\n<img src=\"eulogo.png\" alt=\"EU Logo\" width=\"200px\" style=\"float:right\"></a>\n\n<a href=\"https://www.why-h2020.eu/\"><img src=\"whylogo.jpg\" alt=\"WHY Logo\" width=\"200px\" style=\"float:right\"></a>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FZJ-IEK3-VSA/HiSim",
    "keywords": "hisim",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hisim",
    "package_url": "https://pypi.org/project/hisim/",
    "platform": null,
    "project_url": "https://pypi.org/project/hisim/",
    "project_urls": {
      "Homepage": "https://github.com/FZJ-IEK3-VSA/HiSim"
    },
    "release_url": "https://pypi.org/project/hisim/0.1.1/",
    "requires_dist": [
      "numpy",
      "pandas",
      "matplotlib",
      "seaborn",
      "reportlab",
      "pvlib",
      "openpyxl",
      "pytest",
      "sphinx",
      "sphinx-rtd-theme",
      "dataclasses-json",
      "hplib (==1.9)",
      "bslib (==0.6)",
      "psutil",
      "pydot",
      "graphviz",
      "dataclass-wizard",
      "utspclient"
    ],
    "requires_python": ">=3.5",
    "summary": "HiSim is a house infrastructure simulator",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16087958,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a4fef3d929fa37120ff4464c5704343dc6c1907d845a3e7eb775aa4d0aa5666",
          "md5": "c9682702b10c01b80478e5f7aab48a08",
          "sha256": "2e1b4fbfaf9d9fac48df9e32cae2cac610ecf748983857806375f0ac74ea166e"
        },
        "downloads": -1,
        "filename": "hisim-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c9682702b10c01b80478e5f7aab48a08",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 227169,
        "upload_time": "2022-12-07T19:48:21",
        "upload_time_iso_8601": "2022-12-07T19:48:21.814517Z",
        "url": "https://files.pythonhosted.org/packages/0a/4f/ef3d929fa37120ff4464c5704343dc6c1907d845a3e7eb775aa4d0aa5666/hisim-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6de4027ae31baaa4bcc611130490bd9fd292cba7d3e01c0cd8d33258fe48afa5",
          "md5": "67f23600f7e67f14fc8b7d443c96bf3e",
          "sha256": "97532a2f97229ddb11b46aaca18c3b38a298ab468fd4c8c01d154cbbb48e2293"
        },
        "downloads": -1,
        "filename": "hisim-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "67f23600f7e67f14fc8b7d443c96bf3e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 178545,
        "upload_time": "2022-12-07T19:48:24",
        "upload_time_iso_8601": "2022-12-07T19:48:24.856613Z",
        "url": "https://files.pythonhosted.org/packages/6d/e4/027ae31baaa4bcc611130490bd9fd292cba7d3e01c0cd8d33258fe48afa5/hisim-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26ad92bf1b48a75915772625993f6a8f4d0150a67e2302baa23e18e7238b24d8",
          "md5": "bf2526c0acfc2b9889d71a3fae900af8",
          "sha256": "376f2d6cec0f576dcae0b6d7c8a203f24fd5f8b56c492450dd2c8aae741970fe"
        },
        "downloads": -1,
        "filename": "hisim-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf2526c0acfc2b9889d71a3fae900af8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 229028,
        "upload_time": "2022-12-13T15:43:36",
        "upload_time_iso_8601": "2022-12-13T15:43:36.083281Z",
        "url": "https://files.pythonhosted.org/packages/26/ad/92bf1b48a75915772625993f6a8f4d0150a67e2302baa23e18e7238b24d8/hisim-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1455475024c4544e22341225b9ba276aead586b610db203e61c907a306f3d0b5",
          "md5": "4b46b29857750a963f8cd5ee642c2aed",
          "sha256": "d56dba0d3000e40ca9342ff805cdacea7e7d5eebdcf20621ee0fb288c2b1de5e"
        },
        "downloads": -1,
        "filename": "hisim-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4b46b29857750a963f8cd5ee642c2aed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 179558,
        "upload_time": "2022-12-13T15:43:38",
        "upload_time_iso_8601": "2022-12-13T15:43:38.049329Z",
        "url": "https://files.pythonhosted.org/packages/14/55/475024c4544e22341225b9ba276aead586b610db203e61c907a306f3d0b5/hisim-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "26ad92bf1b48a75915772625993f6a8f4d0150a67e2302baa23e18e7238b24d8",
        "md5": "bf2526c0acfc2b9889d71a3fae900af8",
        "sha256": "376f2d6cec0f576dcae0b6d7c8a203f24fd5f8b56c492450dd2c8aae741970fe"
      },
      "downloads": -1,
      "filename": "hisim-0.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bf2526c0acfc2b9889d71a3fae900af8",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.5",
      "size": 229028,
      "upload_time": "2022-12-13T15:43:36",
      "upload_time_iso_8601": "2022-12-13T15:43:36.083281Z",
      "url": "https://files.pythonhosted.org/packages/26/ad/92bf1b48a75915772625993f6a8f4d0150a67e2302baa23e18e7238b24d8/hisim-0.1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1455475024c4544e22341225b9ba276aead586b610db203e61c907a306f3d0b5",
        "md5": "4b46b29857750a963f8cd5ee642c2aed",
        "sha256": "d56dba0d3000e40ca9342ff805cdacea7e7d5eebdcf20621ee0fb288c2b1de5e"
      },
      "downloads": -1,
      "filename": "hisim-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4b46b29857750a963f8cd5ee642c2aed",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 179558,
      "upload_time": "2022-12-13T15:43:38",
      "upload_time_iso_8601": "2022-12-13T15:43:38.049329Z",
      "url": "https://files.pythonhosted.org/packages/14/55/475024c4544e22341225b9ba276aead586b610db203e61c907a306f3d0b5/hisim-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}