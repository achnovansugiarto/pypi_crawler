{
  "info": {
    "author": "Montgomery Flora",
    "author_email": "monte.flora@noaa.gov",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "\n<p>\n  <img src=\"https://github.com/monte-flora/py-mint/blob/master/images/mintpy_logo.png?raw=true\" align=\"right\" width=\"400\" height=\"400\" />\n</p>\n\n\n<a href=\"https://app.travis-ci.com/monte-flora/py-mint\"><img src=\"https://app.travis-ci.com/monte-flora/py-mint.svg?branch=master\"></a>\n[![codecov](https://codecov.io/gh/monte-flora/py-mint/branch/master/graph/badge.svg?token=GG9NRQOZ0N)](https://codecov.io/gh/monte-flora/py-mint)\n[![Updates](https://pyup.io/repos/github/monte-flora/py-mint/shield.svg)](https://pyup.io/repos/github/monte-flora/py-mint/)\n[![Python 3](https://pyup.io/repos/github/monte-flora/py-mint/python-3-shield.svg)](https://pyup.io/repos/github/monte-flora/py-mint/)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n![PyPI](https://img.shields.io/pypi/v/py-mint)\n[![Documentation Status](https://readthedocs.org/projects/py-mint/badge/?version=latest)](https://py-mint.readthedocs.io/en/latest/?badge=latest)\n\n\n__PyMint__ (__Python-based Model INTerpretations__) is designed to be a user-friendly package for computing and plotting machine learning interpretability/explainability output in Python. Current computation includes\n* Feature importance: \n  * Single- and Multi-pass Permutation Importance ([Brieman et al. 2001](https://link.springer.com/article/10.1023/A:1010933404324)], [Lakshmanan et al. 2015](https://journals.ametsoc.org/view/journals/atot/32/6/jtech-d-13-00205_1.xml?rskey=hlSyXu&result=2))\n  * SHAP \n  * First-order PD/ALE Variance ([Greenwell et al. 2018](https://arxiv.org/abs/1805.04755))    \n\n* Feature Effects/Attributions: \n  * Partial Dependence (PD), \n  * Accumulated local effects (ALE), \n  * Random forest-based feature contributions (treeinterpreter)\n  * SHAP \n  * Main Effect Complexity (MEC; [Molnar et al. 2019](https://arxiv.org/abs/1904.03867))\n\n* Feature Interactions:\n  * Second-order PD/ALE \n  * Interaction Strength and Main Effect Complexity (IAS; [Molnar et al. 2019](https://arxiv.org/abs/1904.03867))\n  * Second-order PD/ALE Variance ([Greenwell et al. 2018](https://arxiv.org/abs/1805.04755)) \n  * Second-order Permutation Importance ([Oh et al. 2019](https://www.mdpi.com/2076-3417/9/23/5191))\n  * Friedman H-statistic ([Friedman and Popescu](https://projecteuclid.org/journals/annals-of-applied-statistics/volume-2/issue-3/Predictive-learning-via-rule-ensembles/10.1214/07-AOAS148.full))\n\nAll of these methods are discussed at length in [Christoph Molnar's interpretable ML book](https://christophm.github.io/interpretable-ml-book/). Most calculations can be performed in parallel when multi-core processing is available. The primary feature of this package is the accompanying built-in plotting methods, which are desgined to be easy to use while producing publication-level quality figures. Documentation for PyMint can be found at https://py-mint.readthedocs.io/en/master/. \n\nThe package is under active development and will likely contain bugs or errors. Feel free to raise issues!\n\nThis package is largely original code, but also includes snippets or chunks of code from preexisting packages. Our goal is not take credit from other code authors, but to make a single source for computing several machine learning interpretation methods. Here is a list of packages used in PyMint: \n[**PyALE**](https://github.com/DanaJomar/PyALE),\n[**PermutationImportance**](https://github.com/gelijergensen/PermutationImportance),\n[**ALEPython**](https://github.com/blent-ai/ALEPython),\n[**SHAP**](https://github.com/slundberg/shap/), \n[**Scikit-Learn**](https://github.com/scikit-learn/scikit-learn)\n\nIf you employ PyMint in your research, please cite this github and the relevant packages listed above. \n\nIf you are experiencing issues with loading the tutorial jupyter notebooks, you can enter the URL/location of the notebooks into the following address: https://nbviewer.jupyter.org/. \n\n## Install\n\nPyMint can be installed through pip, but we are working on uploading to conda-forge. \n```\npip install py-mint\n```\n\n## Dependencies \n\nPyMint is compatible with Python 3.6 or newer.  PyMint requires the following packages:\n```\nnumpy \npandas\nscikit-learn\nmatplotlib\nshap>=0.30.0\nxarray>=0.16.0\ntqdm\nstatsmodels\nseaborn>=0.11.0\n```\n\n### Initializing PyMint\nThe interface of PyMint is the ```InterpretToolkit```, which houses the computations and plotting methods\nfor all the interpretability methods contained within. Once initialized ```InterpretToolkit``` can \ncompute a variety of interpretability methods and plot them. See the tutorial notebooks for examples. \n\n```python\nimport pymint\n\n# Loads three ML models (random forest, gradient-boosted tree, and logistic regression)\n# trained on a subset of the road surface temperature data from Handler et al. (2020).\nestimators = pymint.load_models()\nX,y = pymint.load_data()\n\nexplainer = pymint.InterpretToolkit(estimators=estimators,X=X,y=y,)\n```\n## Permutation Importance\n\nFor predictor ranking, PyMint uses both single-pass and multiple-pass permutation importance method ([Breiman 2001]; Lakshmanan et al. 2015; McGovern et al. 2019).\nWe can calculate the permutation importance and then plot the results. In the tutorial it discusses options to make the figure publication-quality giving the plotting method\nadditional argument to convert the feature names to a more readable format or color coding by feature type. \n```python\nperm_results = explainer.permutation_importance(n_vars=10, evaluation_fn='auc')\nexplainer.plot_importance(data=perm_results)\n```\n\n<p align=\"center\">\n  <img width=\"811\" src=\"https://github.com/monte-flora/py-mint/blob/master/images/multi_pass_perm_imp.png?raw=true\"  />\n</p>\n\nSample notebook can be found here: [**Permutation Importance**](https://github.com/monte-flora/py-mint/blob/master/tutorial_notebooks/permutation_importance_tutorial.ipynb) \n\n\n## Partial dependence and Accumulated Local Effects \n\nTo compute the expected functional relationship between a feature and an ML model's prediction, you can use partial dependence or accumulated local effects. There is also an option for second-order interaction effects. For the choice of feature, you can manually select or can run the permutation importance and a built-in method will retrieve those features. It is also possible to configure the plot for readable feature names. \n```python \n# Assumes the .permutation_importance has already been run.\nimportant_vars = explainer.get_important_vars(results, multipass=True, nvars=7)\n\nale = explainer.ale(features=important_vars, n_bins=20)\nexplainer.plot_ale(ale)\n```\n<p align=\"center\">\n  <img width=\"811\" src=\"https://github.com/monte-flora/py-mint/blob/master/images/ale_1d.png?raw=true\"  />\n</p>\n\nAdditionally, you can use the same code snippet to compute the second-order ALE (see the notebook for more details). \n\n<p align=\"center\">\n  <img width=\"811\" src=\"https://github.com/monte-flora/py-mint/blob/master/images/ale_2d.png?raw=true\"  />\n</p>\n\nSample notebook can be found here: \n- [**Accumulated Local effects**](https://github.com/monte-flora/pymint/blob/master/tutorial_notebooks/accumulated_local_effect_tutorial.ipynb) \n- [**Partial Dependence**](https://github.com/monte-flora/py-mint/blob/master/tutorial_notebooks/partial_dependence_tutorial.ipynb) \n\n\n## Feature Contributions \n\nTo explain specific examples, you can use SHAP values. PyMint employs both KernelSHAP for any model and TreeSHAP for tree-based methods. In future work, PyMint will also include DeepSHAP for convolution neural network-based models. PyMint can create the summary and dependence plots from the shap python package, but is adapted for multiple predictors and an easier user interface. It is also possible to plot contributions for a single example or summarized by model performance. \n\n```python\nimport shap\nsingle_example = examples.iloc[[0]]\nexplainer = pymint.InterpretToolkit(estimators=estimators[0], X=single_example,)\n\nbackground_dataset = shap.sample(examples, 100)\nresults = explainer.local_contributions(method='shap', background_dataset=background_dataset)\nfig = explainer.plot_contributions(results)\n```\n<p align=\"center\">\n  <img width=\"811\" src=\"https://github.com/monte-flora/py-mint/blob/master/images/feature_contribution_single.png?raw=true\" />\n</p>\n\n```python\nexplainer = pymint.InterpretToolkit(estimators=estimators[0],X=X, y=y)\n\nbackground_dataset = shap.sample(examples, 100)\nresults = explainer.local_contributions(method='shap', background_dataset=background_dataset, performance_based=True,)\nfig = myInterpreter.plot_contributions(results)\n```\n\n<p align=\"center\">\n  <img width=\"811\" src=\"https://github.com/monte-flora/py-mint/blob/master/images/feature_contributions_perform.png?raw=true\"  />\n</p>\n\n```python\nexplainer = pymint.InterpretToolkit(estimators=estimators[0],X=X, y=y)\n                                \nbackground_dataset = shap.sample(examples, 100)\nresults = explainer.shap(background_dataset=background_dataset)\nshap_values, bias = results['Random Forest']\nexplainer.plot_shap(plot_type = 'summary', shap_values=shap_values,) \n```\n\n<p align=\"center\">\n  <img width=\"811\" src=\"https://github.com/monte-flora/py-mint/blob/master/images/shap_dependence.png?raw=true\"  />\n</p>\n\n```python\nfrom pymint.common import plotting_config\n\nfeatures = ['tmp2m_hrs_bl_frez', 'sat_irbt', 'sfcT_hrs_ab_frez', 'tmp2m_hrs_ab_frez', 'd_rad_d']\nexplainer.plot_shap(features=features,\n                        plot_type = 'dependence',\n                        shap_values=shap_values,\n                        display_feature_names=plotting_config.display_feature_names,\n                        display_units = plotting_config.display_units,\n                        to_probability=True)\n```\n\n<p align=\"center\">\n  <img width=\"811\" src=\"https://github.com/monte-flora/py-mint/blob/master/images/shap_summary.png?raw=true\" />\n</p>\n\nSample notebook can be found here: \n- [**Feature Contributions**](https://github.com/monte-flora/py-mint/blob/master/tutorial_notebooks/feature_contributions.ipynb) \n- [**SHAP-Style Plots**](https://github.com/monte-flora/py-mint/blob/master/tutorial_notebooks/shap_style_plots.ipynb) \n\n\n## Tutorial notebooks\n\nThe notebooks provides the package documentation and demonstrate PyMint API, which was used to create the above figures. If you are experiencing issues with loading the jupyter notebooks, you can enter the URL/location of the notebooks into the following address: https://nbviewer.jupyter.org/. \n\n- [**Permutation Importance**](https://github.com/monte-flora/py-mint/blob/master/tutorial_notebooks/permutation_importance_tutorial.ipynb) \n- [**Accumulated Local effects**](https://github.com/monte-flora/py-mint/blob/master/tutorial_notebooks/accumulated_local_effect_tutorial.ipynb) \n- [**Partial Dependence**](https://github.com/monte-flora/py-mint/blob/master/tutorial_notebooks/partial_dependence_tutorial.ipynb) \n- [**Feature Contributions**](https://github.com/monte-flora/py-mint/blob/master/tutorial_notebooks/feature_contributions.ipynb) \n- [**SHAP-Style Plots**](https://github.com/monte-flora/py-mint/blob/master/tutorial_notebooks/shap_style_plots.ipynb) \n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/monte-flora/py-mint/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-mint",
    "package_url": "https://pypi.org/project/py-mint/",
    "platform": "",
    "project_url": "https://pypi.org/project/py-mint/",
    "project_urls": {
      "Homepage": "https://github.com/monte-flora/py-mint/"
    },
    "release_url": "https://pypi.org/project/py-mint/0.2.6/",
    "requires_dist": [
      "numpy",
      "pandas",
      "scikit-learn (>=1.0.0)",
      "matplotlib",
      "shap (>=0.30.0)",
      "xarray (>=0.16.0)",
      "tqdm",
      "statsmodels",
      "seaborn (>=0.11.0)",
      "jupyter ; extra == 'interactive'"
    ],
    "requires_python": ">=3.8.0",
    "summary": "PyMint (Python-based Model INTerpretations) is a user-friendly python package for computing and plotting machine learning interpretation output.",
    "version": "0.2.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12924584,
  "releases": {
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "180bac02a67c7b8f96972b3e6937082dbd666741d9163eff1e7f060d966f689b",
          "md5": "4de8cd8e4467be2ae4b8db6d8282af7f",
          "sha256": "fc65307a5c5ef091beccdee0c69d596c94882d70be6e2bb373e4421020c1ab7d"
        },
        "downloads": -1,
        "filename": "py_mint-0.2.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4de8cd8e4467be2ae4b8db6d8282af7f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6.0",
        "size": 35100977,
        "upload_time": "2021-10-07T21:29:53",
        "upload_time_iso_8601": "2021-10-07T21:29:53.664423Z",
        "url": "https://files.pythonhosted.org/packages/18/0b/ac02a67c7b8f96972b3e6937082dbd666741d9163eff1e7f060d966f689b/py_mint-0.2.4-py2.py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "Unstable/Older syntax"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4feb0ed6343aa28bc1fed3968fa8c82d022ed8f22f8bc69d79ffe027ea32e91f",
          "md5": "9a993b78e0a4331ee9c3f72ba1c40ab5",
          "sha256": "c1dd3d4c6ef6e01e4c5d9ecd99ce7105d4f538989eed5c6bf3c2354c15a0df41"
        },
        "downloads": -1,
        "filename": "py-mint-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9a993b78e0a4331ee9c3f72ba1c40ab5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 99840,
        "upload_time": "2021-10-07T21:29:56",
        "upload_time_iso_8601": "2021-10-07T21:29:56.083785Z",
        "url": "https://files.pythonhosted.org/packages/4f/eb/0ed6343aa28bc1fed3968fa8c82d022ed8f22f8bc69d79ffe027ea32e91f/py-mint-0.2.4.tar.gz",
        "yanked": true,
        "yanked_reason": "Unstable/Older syntax"
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4035ae57127bd9e3f72638e8cafd6daff3e0ae4c691e5581fbd44d2e3105d517",
          "md5": "e59759390e824b341eb96bbe6c5c8aa7",
          "sha256": "e45937b79360c07fc66ffb520e8ac94cbff10da6361e5b0dde036c16c5819aaf"
        },
        "downloads": -1,
        "filename": "py_mint-0.2.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e59759390e824b341eb96bbe6c5c8aa7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6.0",
        "size": 35104615,
        "upload_time": "2022-02-07T14:41:10",
        "upload_time_iso_8601": "2022-02-07T14:41:10.507717Z",
        "url": "https://files.pythonhosted.org/packages/40/35/ae57127bd9e3f72638e8cafd6daff3e0ae4c691e5581fbd44d2e3105d517/py_mint-0.2.5-py2.py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "requires an outdated stanford theme for readthedocs"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "813ee485421acbb9cfdbd81090aa0f30dc6dec328f6f5fddcfafab24bf37be9a",
          "md5": "d4beec011cd44f781777ace5859b0d0a",
          "sha256": "55999b378d4ac45872c8973ef451320c28acb61fe1056341784545c6cf15f9e6"
        },
        "downloads": -1,
        "filename": "py-mint-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d4beec011cd44f781777ace5859b0d0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 103652,
        "upload_time": "2022-02-07T14:41:13",
        "upload_time_iso_8601": "2022-02-07T14:41:13.283666Z",
        "url": "https://files.pythonhosted.org/packages/81/3e/e485421acbb9cfdbd81090aa0f30dc6dec328f6f5fddcfafab24bf37be9a/py-mint-0.2.5.tar.gz",
        "yanked": true,
        "yanked_reason": "requires an outdated stanford theme for readthedocs"
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96cbaa4149d68bfeeaa561a6b2b15e2707d6f42c1caa838c62cbbf8ded0e2577",
          "md5": "ce29025b98b2a4d0f1dbec1f0fd572d7",
          "sha256": "6dc1e1e46bcc91d5a568910cf32512516c16c4358dd8c85cf16dfbbb171b8362"
        },
        "downloads": -1,
        "filename": "py_mint-0.2.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce29025b98b2a4d0f1dbec1f0fd572d7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.8.0",
        "size": 35104612,
        "upload_time": "2022-02-15T16:46:09",
        "upload_time_iso_8601": "2022-02-15T16:46:09.076295Z",
        "url": "https://files.pythonhosted.org/packages/96/cb/aa4149d68bfeeaa561a6b2b15e2707d6f42c1caa838c62cbbf8ded0e2577/py_mint-0.2.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7dd57385509ec3ae53d6d4d1aa6a0b2d9ae1579c399ac15944dea38bf7074094",
          "md5": "fb6141d35f41c945bab1a84404bca31c",
          "sha256": "3a685485243eb303a505fe841f8460ec6b7eeba50779a45cd0a38f2329d60529"
        },
        "downloads": -1,
        "filename": "py-mint-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "fb6141d35f41c945bab1a84404bca31c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0",
        "size": 103626,
        "upload_time": "2022-02-15T16:46:11",
        "upload_time_iso_8601": "2022-02-15T16:46:11.595320Z",
        "url": "https://files.pythonhosted.org/packages/7d/d5/7385509ec3ae53d6d4d1aa6a0b2d9ae1579c399ac15944dea38bf7074094/py-mint-0.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "96cbaa4149d68bfeeaa561a6b2b15e2707d6f42c1caa838c62cbbf8ded0e2577",
        "md5": "ce29025b98b2a4d0f1dbec1f0fd572d7",
        "sha256": "6dc1e1e46bcc91d5a568910cf32512516c16c4358dd8c85cf16dfbbb171b8362"
      },
      "downloads": -1,
      "filename": "py_mint-0.2.6-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ce29025b98b2a4d0f1dbec1f0fd572d7",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.8.0",
      "size": 35104612,
      "upload_time": "2022-02-15T16:46:09",
      "upload_time_iso_8601": "2022-02-15T16:46:09.076295Z",
      "url": "https://files.pythonhosted.org/packages/96/cb/aa4149d68bfeeaa561a6b2b15e2707d6f42c1caa838c62cbbf8ded0e2577/py_mint-0.2.6-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7dd57385509ec3ae53d6d4d1aa6a0b2d9ae1579c399ac15944dea38bf7074094",
        "md5": "fb6141d35f41c945bab1a84404bca31c",
        "sha256": "3a685485243eb303a505fe841f8460ec6b7eeba50779a45cd0a38f2329d60529"
      },
      "downloads": -1,
      "filename": "py-mint-0.2.6.tar.gz",
      "has_sig": false,
      "md5_digest": "fb6141d35f41c945bab1a84404bca31c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.0",
      "size": 103626,
      "upload_time": "2022-02-15T16:46:11",
      "upload_time_iso_8601": "2022-02-15T16:46:11.595320Z",
      "url": "https://files.pythonhosted.org/packages/7d/d5/7385509ec3ae53d6d4d1aa6a0b2d9ae1579c399ac15944dea38bf7074094/py-mint-0.2.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}