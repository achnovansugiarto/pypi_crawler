{
  "info": {
    "author": "Poul Spang",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SnapcastControl\n> SnapcastControl is a Python API for controlling snapcast over tcp 1705, [snapcast](https://github.com/badaix/snapcast) is a multi-room synchronous audio solution made by baiax.\n\n\n## Installation\n\n```sh\npip install snapcastcontrol\n```\n\n## Usage\n\n\n```python\n>>>\n\n>>> import asyncio\n>>> from SnapcastControl.control import SnapcastControl\n\n>>># Simulation notification callback methods.\ndef testOnVolumeChange(data):\n  percent = data['params'].get('volume').get('percent')\n  muted   = data['params'].get('volume').get('muted')\n  print(f\"### This is a callback from SnapcastControl - Simulation onVolumeChange. - percent: {percent}, muted: {muted}\")\n\ndef testOnClientConnect(data):\n  client = data\n  print(f\"### This is a callback from SnapcastControl - Simulation of onClientConnect. - connected: {client.connected} \")\n\n\ndef testOnClientDisconnect(data):\n  print(f\"### This is a callback from SnapcastControl - Simulation of onClientDisconnect. - clientId: {data}\")\n\n\ndef testOnServerUpdate(data):\n  print(f\"### This is a callback from SnapcastControl - Simulation of onServerUpdate. - Create a new server dissmis the Old.\") # \\n serverData: {serverData} \")\n\ndef testOnServerCreated(data):\n  print(f\"### This is a callback from SnapcastControl - Simulation of onServerCreated. - New Server Created \")\n\n\ndef testOnGroupMute(data):\n  pass\ndef testOnServerDisconnect(data):\n  pass\n\n\n>>> Examples notificationCallbacks\ntestNotificationCallbacks = {\n  'onVolumeChange':         testOnVolumeChange,\n  'onServerDisconnect':     testOnServerDisconnect,\n  'onGroupMute':            testOnGroupMute,\n  'onClientConnect':        testOnClientConnect,\n  'onClientDisconnect':     testOnServerDisconnect,\n  'onServerUpdate':         testOnServerUpdate,\n  'onServerCreated':        testOnServerCreated,\n\n\n\n}\n\n>>> Available notificationCallbacks.\n  'onVolumeChange':\n  'onLatencyChanged':\n  'onServerDisconnect':\n  'onGroupMute':\n  'onClientConnect':\n  'onClientDisconnect':\n  'onServerUpdate':\n  'onClientNameChanged':\n  'onGroupStreamchanged':\n  'onStreamUpdate':\n  'onServerCreated':\n\n\n>>> snapcastControl = SnapcastControl(1, \"ThreadSnapcastControl\", 'localhost', port=1705, reconnect=True, notificationCallbacks=testNotificationCallbacks)\n\n>>> Her we use a time sleep, the snapcastControl must first start and initialize.\n    time.sleep(0.1)\n\n>>> asyncio.run_coroutine_threadsafe(snapcastControl.setVolumeAllClients(55, False), snapcastControl._loop)\n>>> Other methods you can call threadsafe, for now\n  async def setVolume(clientId, percent, mute):\n  async def setVolumeAllClients(percent, mute):\n  async def setClientLatency(clientId, latency):\n```\n\n\n\n## ðŸ“œ License. [GPLv3](https://choosealicense.com/licenses/gpl-3.0/)\nShips under GPLv3, it means you are free to use and redistribute the code but are not allowed to use any part of it under a closed license.\n\n\n## Disclaimer.\nThis is work in progress and the code is as it is.\nUse it at your own risk/fun.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/poulsp/python-snapcastcontrol",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "snapcastcontrol",
    "package_url": "https://pypi.org/project/snapcastcontrol/",
    "platform": "",
    "project_url": "https://pypi.org/project/snapcastcontrol/",
    "project_urls": {
      "Homepage": "https://github.com/poulsp/python-snapcastcontrol"
    },
    "release_url": "https://pypi.org/project/snapcastcontrol/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "snapcastcontrol",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10689307,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d2e1179e137eb092e8221326686710838b225e10e26f921931e1b133495076a",
          "md5": "ae7f3c91cdd87d4dec2e6dfe52e180c2",
          "sha256": "888779c0b85917c4d78398a401c7dc326e560b734a8df1e83a50cb77ff0ba060"
        },
        "downloads": -1,
        "filename": "snapcastcontrol-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ae7f3c91cdd87d4dec2e6dfe52e180c2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 24753,
        "upload_time": "2021-06-19T08:46:03",
        "upload_time_iso_8601": "2021-06-19T08:46:03.275193Z",
        "url": "https://files.pythonhosted.org/packages/0d/2e/1179e137eb092e8221326686710838b225e10e26f921931e1b133495076a/snapcastcontrol-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3913e73e3bd8fa565c09c86b31302801ac51e14eaf845aa7f679f26f872a0ec",
          "md5": "f1d1489a2f905b25fda30c16835c5a0e",
          "sha256": "8966d0a92fc59b1185a917530be6348ce0d328b3c19768e6220450e0498dd265"
        },
        "downloads": -1,
        "filename": "snapcastcontrol-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f1d1489a2f905b25fda30c16835c5a0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 21483,
        "upload_time": "2021-06-19T08:46:05",
        "upload_time_iso_8601": "2021-06-19T08:46:05.227278Z",
        "url": "https://files.pythonhosted.org/packages/c3/91/3e73e3bd8fa565c09c86b31302801ac51e14eaf845aa7f679f26f872a0ec/snapcastcontrol-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0d2e1179e137eb092e8221326686710838b225e10e26f921931e1b133495076a",
        "md5": "ae7f3c91cdd87d4dec2e6dfe52e180c2",
        "sha256": "888779c0b85917c4d78398a401c7dc326e560b734a8df1e83a50cb77ff0ba060"
      },
      "downloads": -1,
      "filename": "snapcastcontrol-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ae7f3c91cdd87d4dec2e6dfe52e180c2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 24753,
      "upload_time": "2021-06-19T08:46:03",
      "upload_time_iso_8601": "2021-06-19T08:46:03.275193Z",
      "url": "https://files.pythonhosted.org/packages/0d/2e/1179e137eb092e8221326686710838b225e10e26f921931e1b133495076a/snapcastcontrol-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c3913e73e3bd8fa565c09c86b31302801ac51e14eaf845aa7f679f26f872a0ec",
        "md5": "f1d1489a2f905b25fda30c16835c5a0e",
        "sha256": "8966d0a92fc59b1185a917530be6348ce0d328b3c19768e6220450e0498dd265"
      },
      "downloads": -1,
      "filename": "snapcastcontrol-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f1d1489a2f905b25fda30c16835c5a0e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 21483,
      "upload_time": "2021-06-19T08:46:05",
      "upload_time_iso_8601": "2021-06-19T08:46:05.227278Z",
      "url": "https://files.pythonhosted.org/packages/c3/91/3e73e3bd8fa565c09c86b31302801ac51e14eaf845aa7f679f26f872a0ec/snapcastcontrol-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}