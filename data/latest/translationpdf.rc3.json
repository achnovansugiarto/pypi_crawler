{
  "info": {
    "author": "Willians Silva",
    "author_email": "09willians@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "A classe TranslatePDF é capaz de extrair texto e imagem de um PDF, bem como extrair texto de uma imagem, traduzir textos longos e curtos. Além disso, ela também permite criar um PDF a partir de um texto. <br>\r\nAcesse: https://github.com/Willians-S-S/PacoteTranslation\r\n\r\n**Obs:** Ao extrair o texto do PDF ele perde toda a formatação original. <br>\r\n    Se você usar a extensão Code Runner, não execute o arquivo python por ela, pois irá da erro.\r\n\r\n# Funcionabilidades\r\n* Extrai texto e imagem do PDF <br>\r\n* Traduz texto curto. <br>\r\n* Traduz texto longo. <br>\r\n* Criar PDF. <br>\r\n* Extrai imagem do PDF. <br>\r\n* Extrai texto da imagem. <br>\r\n\r\n# Como usar\r\n\r\n## Importar a biblioteca <br>\r\n```python\r\n    from pdftools import pdftools as tools\r\n```\r\n\r\n## Criar objeto da classe TranslatePDF\r\n\r\n```python\r\n    obj = tools.TranslatePDF()  \r\n```\r\n## Extrair texto e imagem do PDF\r\nParâmetros do método `extract_data_pdf`:<br>\r\n\r\n`caminho` => Diretório até o pdf. No windows use / ao invés \\ , ex: C:/Users/usuario/Downloads/arquivo.pdf. <br>\r\n`idioma` => Idioma para o qual o texto será traduzido. <br>\r\n`caminho_save_pdf` => Diretório para salva o pdf gerado, esse parâmetro é opcional, caso não o use ele salva o pdf no diretorio do script. No windows use / ao invés \\ , ex: C:/Users/usuario/Downloads <br>\r\n`page` => Indica uma página unica para extrair o que o usuário deseja, as páginas do PDF começa por 0. <br>\r\n`interval` => Indica o intervalo de páginas  para extrair o que o usuário deseja. <br>\r\n`ret` => ret='pdf' Indica que o método vai gerar um pdf com o texto traduzido, se não enviar o parâmetro texto traduzido vai ser impresso na saída padrão. <br>\r\n`check_img` => Verifica se a imagem no pdf. <br>\r\n`caminho_save_img` => Diretório para salvar as imagens do pdf, esse parâmetro é opcional, caso não o use ele salva o pdf no diretorio do script. No windows use / ao invés \\ , ex: C:/Users/usuario/Downloads<br>\r\n\r\n```python\r\n     def extract_data_pdf(\r\n            self, \r\n            caminho: str, \r\n            idioma: str, \r\n            caminho_save_pdf: Optional[str] = None,\r\n            page: Optional[int] = None, \r\n            interval: Optional[str] = None, \r\n            ret: Optional[str] = None,\r\n            check_img: Optional[bool] = None,\r\n            caminho_save_img: Optional[str] = None\r\n            ) -> None:\r\n```\r\n\r\nUsando o método `extract_data_pdf`: <br>\r\n\r\n\r\n```python\r\n    Windows\r\n    obj.extract_data_pdf(\"C:/Users/usuario/Downloads/arquivo.pdf\", \r\n                        caminho_save_pdf=\"C:/Users/usuario/Downloads\",\r\n                        idioma='pt',\r\n                        ret='pdf', \r\n                        page=0\r\n                        )\r\n    Linux\r\n    obj.extract_data_pdf(\"/home/usuario/Documentos/arquivo.pdf\", \r\n                        caminho_save_pdf=\"/home/usuario/Documentos\",\r\n                        idioma='pt',\r\n                        ret='pdf', \r\n                        page=0\r\n                        )\r\n```\r\n## Traduzir texto curto. (Texto com menos de 500 caracteres) <br>\r\n\r\nParâmetros do método `traducao`:<br>\r\n\r\n`texto` => Texto que vai ser traduzido <br>\r\n`idioma` => Idioma em que texto irá ser traduzido. <br> \r\n\r\n```python\r\n    def traducao(self, texto, idioma) -> str:\r\n```\r\nUsando o método `traducao`: <br>\r\n\r\n```python\r\n    obj.traducao(texto, idioma)\r\n```\r\n\r\n## Traduzir texto longo. (Texto com mais de 500 caracteres) <br>\r\n\r\nParâmetros do método `trans_text_bigger`:<br>\r\n\r\n`texto` => Texto que vai ser traduzido <br>\r\n`idioma` => Idioma em que texto irá ser traduzido. <br> \r\n\r\n```python\r\n    def trans_text_bigger(self, texto, idioma) -> str:\r\n```\r\nUsando o método `trans_text_bigger`: <br>\r\n\r\n```python\r\n    obj.trans_text_bigger(texto, idioma)\r\n```\r\n## Criar PDF. <br>\r\n\r\nParâmetros do método `gerarPDF`:<br>\r\n\r\n`texto` => Texto para introduzir no PDF. <br>\r\n`nome_arquivo` => Indica no nome do PDF. <br> \r\n`caminho_save_pdf` => Diretório para salva o pdf gerado, esse parâmetro é opcional, caso não o use ele salva o pdf no diretorio do script. No windows use / ao invés \\ , ex: C:/Users/usuario/Downloads <br>\r\n\r\n```python\r\n    def gerarPDF(self, texto, nome_arquivo, caminho_save_pdf) -> None:\r\n```\r\nUsando o método `gerarPDF`: <br>\r\n\r\n```python\r\n    obj.gerarPDF(texto, nome_arquivo, caminho_save_pdf)\r\n```\r\n## Extrair imagem do PDF. <br>\r\n\r\nParâmetros do método `extrairIMG`:<br>\r\n\r\n`caminho` => Diretório até o pdf. No windows use / ao invés \\ , ex: C:/Users/usuario/Downloads/arquivo.pdf. <br>\r\n`caminho_save` => Diretório para salvar as imagens do pdf, esse parâmetro é opcional, caso não o use ele salva o pdf no diretorio do script. No windows use / ao invés \\ , ex: C:/Users/usuario/Downloads <br> \r\n`all_page` => Índice da página que contém a imagem a ser extraída. Se não for especificado, todas as páginas serão processadas. <br>\r\n\r\n```python\r\n    def extrairIMG(self, caminho, caminho_save: Optional[str] = None, all_page: Optional[int] = None) -> None:\r\n```\r\nUsando o método `extrairIMG`: <br>\r\n\r\n```python\r\n    obj.extrairIMG(caminho=\"C:/Users/usuario/Downloads/arquivo.pdf\", \r\n                        caminho_save=\"C:/Users/usuario/Downloads\",\r\n                        all_page=1\r\n                        )\r\n    Linux\r\n    obj.extrairIMG(caminho=\"/home/usuario/Documentos/arquivo.pdf\", \r\n                        caminho_save_pdf=\"/home/usuario/Documentos\",\r\n                        all_page=1\r\n                        )\r\n```\r\n## Extrair texto da imagem. <br>\r\n\r\n**Para usar esse método é necessário instalar o tesseract** <br>\r\n- **Windows:**\r\n    * Acesse o site para baixar e instalar no windows: https://github.com/UB-Mannheim/tesseract/wiki <br>\r\n    * Instale no diretório padrão do execultavel: C:\\Users\\usuario\\AppData\\Local\\Programs\\Tesseract-OCR\r\n\r\n- **Linux:** <br>\r\n    * Ubuntu e derivados:\r\n        * Adicione o ppa:  sudo add-apt-repository ppa:alex-p/tesseract-ocr-devel\r\n        * Atualize o repositório: sudo apt update\r\n        * Instalação: sudo apt-get install tesseract-ocr\r\n        * Duvidas acesse: https://launchpad.net/~alex-p/+archive/ubuntu/tesseract-ocr-devel ou https://notesalexp.org/tesseract-ocr/#tesseract_5.x\r\n    * Arch Linux e derivados:\r\n        * pip install tesseract\r\n\r\nParâmetros do método `extract_text_img`:<br>\r\n\r\n`caminho_image` => Diretório da imagem. No windows use / ao invés \\ , ex: C:/Users/usuario/Downloads/img.jpg. <br>\r\n`idioma` => Idioma em que texto irá ser traduzido. <br>\r\n\r\n```python\r\n    def extract_text_img(self, caminho_image, idioma: Optional[str] = None) -> None:\r\n```\r\nUsando o método `extract_text_img`: <br>\r\n\r\n```python\r\n    obj.extract_text_img(caminho_image=\"C:/Users/usuario/Downloads/img.jpg\", \r\n                        idioma='en'\r\n                        )\r\n    Linux\r\n    obj.extract_text_img(caminho_image=\"/home/usuario/Documentos/img.png\", \r\n                        idioma='en'\r\n                        )\r\n```\r\n## Línguas suportadas\r\n\r\n```\r\nLANGUAGES = {\r\n    'af': 'afrikaans',\r\n    'sq': 'albanian',\r\n    'am': 'amharic',\r\n    'ar': 'arabic',\r\n    'hy': 'armenian',\r\n    'az': 'azerbaijani',\r\n    'eu': 'basque',\r\n    'be': 'belarusian',\r\n    'bn': 'bengali',\r\n    'bs': 'bosnian',\r\n    'bg': 'bulgarian',\r\n    'ca': 'catalan',\r\n    'ceb': 'cebuano',\r\n    'ny': 'chichewa',\r\n    'zh-cn': 'chinese (simplified)',\r\n    'zh-tw': 'chinese (traditional)',\r\n    'co': 'corsican',\r\n    'hr': 'croatian',\r\n    'cs': 'czech',\r\n    'da': 'danish',\r\n    'nl': 'dutch',\r\n    'en': 'english',\r\n    'eo': 'esperanto',\r\n    'et': 'estonian',\r\n    'tl': 'filipino',\r\n    'fi': 'finnish',\r\n    'fr': 'french',\r\n    'fy': 'frisian',\r\n    'gl': 'galician',\r\n    'ka': 'georgian',\r\n    'de': 'german',\r\n    'el': 'greek',\r\n    'gu': 'gujarati',\r\n    'ht': 'haitian creole',\r\n    'ha': 'hausa',\r\n    'haw': 'hawaiian',\r\n    'iw': 'hebrew',\r\n    'he': 'hebrew',\r\n    'hi': 'hindi',\r\n    'hmn': 'hmong',\r\n    'hu': 'hungarian',\r\n    'is': 'icelandic',\r\n    'ig': 'igbo',\r\n    'id': 'indonesian',\r\n    'ga': 'irish',\r\n    'it': 'italian',\r\n    'ja': 'japanese',\r\n    'jw': 'javanese',\r\n    'kn': 'kannada',\r\n    'kk': 'kazakh',\r\n    'km': 'khmer',\r\n    'ko': 'korean',\r\n    'ku': 'kurdish (kurmanji)',\r\n    'ky': 'kyrgyz',\r\n    'lo': 'lao',\r\n    'la': 'latin',\r\n    'lv': 'latvian',\r\n    'lt': 'lithuanian',\r\n    'lb': 'luxembourgish',\r\n    'mk': 'macedonian',\r\n    'mg': 'malagasy',\r\n    'ms': 'malay',\r\n    'ml': 'malayalam',\r\n    'mt': 'maltese',\r\n    'mi': 'maori',\r\n    'mr': 'marathi',\r\n    'mn': 'mongolian',\r\n    'my': 'myanmar (burmese)',\r\n    'ne': 'nepali',\r\n    'no': 'norwegian',\r\n    'or': 'odia',\r\n    'ps': 'pashto',\r\n    'fa': 'persian',\r\n    'pl': 'polish',\r\n    'pt': 'portuguese',\r\n    'pa': 'punjabi',\r\n    'ro': 'romanian',\r\n    'ru': 'russian',\r\n    'sm': 'samoan',\r\n    'gd': 'scots gaelic',\r\n    'sr': 'serbian',\r\n    'st': 'sesotho',\r\n    'sn': 'shona',\r\n    'sd': 'sindhi',\r\n    'si': 'sinhala',\r\n    'sk': 'slovak',\r\n    'sl': 'slovenian',\r\n    'so': 'somali',\r\n    'es': 'spanish',\r\n    'su': 'sundanese',\r\n    'sw': 'swahili',\r\n    'sv': 'swedish',\r\n    'tg': 'tajik',\r\n    'ta': 'tamil',\r\n    'te': 'telugu',\r\n    'th': 'thai',\r\n    'tr': 'turkish',\r\n    'uk': 'ukrainian',\r\n    'ur': 'urdu',\r\n    'ug': 'uyghur',\r\n    'uz': 'uzbek',\r\n    'vi': 'vietnamese',\r\n    'cy': 'welsh',\r\n    'xh': 'xhosa',\r\n    'yi': 'yiddish',\r\n    'yo': 'yoruba',\r\n    'zu': 'zulu',\r\n}\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Willians-S-S/PacoteTranslation",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "translationPdF",
    "package_url": "https://pypi.org/project/translationPdF/",
    "platform": null,
    "project_url": "https://pypi.org/project/translationPdF/",
    "project_urls": {
      "Homepage": "https://github.com/Willians-S-S/PacoteTranslation"
    },
    "release_url": "https://pypi.org/project/translationPdF/2.0.0/",
    "requires_dist": [
      "pypdf2",
      "fpdf2",
      "pytesseract",
      "googletrans (==4.0.0-rc1)"
    ],
    "requires_python": ">=3.5",
    "summary": "translationPdF é um pacote para a tradução de PDF.",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17208383,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8128a8138e2839ef6f508f9cbcca2307b1e9a0566b9fd1693064585ba2042b65",
          "md5": "85d2671522c2d306718b2751ac93f03a",
          "sha256": "93958683c26bb3c9315589657fd212e6f8c711321a87cfaef8d764fc711fca9b"
        },
        "downloads": -1,
        "filename": "translationPdF-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "85d2671522c2d306718b2751ac93f03a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 5610,
        "upload_time": "2023-03-08T05:02:28",
        "upload_time_iso_8601": "2023-03-08T05:02:28.926374Z",
        "url": "https://files.pythonhosted.org/packages/81/28/a8138e2839ef6f508f9cbcca2307b1e9a0566b9fd1693064585ba2042b65/translationPdF-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d691d838a7e91165ab3722b722bcc7f2d7ca42aea72d97a5417d4eee76a8c707",
          "md5": "0d9a88c2232ea74067699e947ed66f22",
          "sha256": "fc602ff961d483ce4375f5f18baf8b375dc7fc24c484d62a07a9a9e7d2a352a7"
        },
        "downloads": -1,
        "filename": "translationPdF-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0d9a88c2232ea74067699e947ed66f22",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 7686,
        "upload_time": "2023-03-08T05:02:30",
        "upload_time_iso_8601": "2023-03-08T05:02:30.830735Z",
        "url": "https://files.pythonhosted.org/packages/d6/91/d838a7e91165ab3722b722bcc7f2d7ca42aea72d97a5417d4eee76a8c707/translationPdF-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "116f3809b561b1727e08dde6bc5c73456993fbc460de0f2d7cfde337ee50da39",
          "md5": "c0808ea198adb82f1c1482a7b1b50537",
          "sha256": "d2dac5ea0555ca05726433a53bdb82484393e363fd81200355954fa8f4ea44fa"
        },
        "downloads": -1,
        "filename": "translationPdF-1.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c0808ea198adb82f1c1482a7b1b50537",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 8239,
        "upload_time": "2023-03-08T05:12:14",
        "upload_time_iso_8601": "2023-03-08T05:12:14.131452Z",
        "url": "https://files.pythonhosted.org/packages/11/6f/3809b561b1727e08dde6bc5c73456993fbc460de0f2d7cfde337ee50da39/translationPdF-1.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f5146aba9d1e894f600f657767592e27a188e683b023fa99f80506958c9d965",
          "md5": "fa9d8af615e2b968b396d25204c3a137",
          "sha256": "f6dddaab350ae8598de35283ff18b1db83c4ec241f587ed4224e212e1ba289c3"
        },
        "downloads": -1,
        "filename": "translationPdF-1.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fa9d8af615e2b968b396d25204c3a137",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 10715,
        "upload_time": "2023-03-08T05:12:16",
        "upload_time_iso_8601": "2023-03-08T05:12:16.338959Z",
        "url": "https://files.pythonhosted.org/packages/1f/51/46aba9d1e894f600f657767592e27a188e683b023fa99f80506958c9d965/translationPdF-1.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7422a564768129fa6bdbd00ebc5ea73bfb1c8d1406e1f6b8897cb14486e799c",
          "md5": "820298229e184f534a6da3771212b9c8",
          "sha256": "c95917636999a50c658c35c8cda982f99c3df6aa8f97f2ab3453237b5fa507f7"
        },
        "downloads": -1,
        "filename": "translationPdF-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "820298229e184f534a6da3771212b9c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 8282,
        "upload_time": "2023-03-08T15:19:48",
        "upload_time_iso_8601": "2023-03-08T15:19:48.362326Z",
        "url": "https://files.pythonhosted.org/packages/e7/42/2a564768129fa6bdbd00ebc5ea73bfb1c8d1406e1f6b8897cb14486e799c/translationPdF-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d4245ea5c77225b350470d5bc826c317630a2063d557d90cba13b6de58d5f15",
          "md5": "2b2a15ba0cc74c782e4ab4f41ea35cfb",
          "sha256": "698f112294ff50065b6753fa0e407a71231bda513e6f42aa23950cf32f719718"
        },
        "downloads": -1,
        "filename": "translationPdF-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2b2a15ba0cc74c782e4ab4f41ea35cfb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 10795,
        "upload_time": "2023-03-08T15:19:50",
        "upload_time_iso_8601": "2023-03-08T15:19:50.475201Z",
        "url": "https://files.pythonhosted.org/packages/0d/42/45ea5c77225b350470d5bc826c317630a2063d557d90cba13b6de58d5f15/translationPdF-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e7422a564768129fa6bdbd00ebc5ea73bfb1c8d1406e1f6b8897cb14486e799c",
        "md5": "820298229e184f534a6da3771212b9c8",
        "sha256": "c95917636999a50c658c35c8cda982f99c3df6aa8f97f2ab3453237b5fa507f7"
      },
      "downloads": -1,
      "filename": "translationPdF-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "820298229e184f534a6da3771212b9c8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 8282,
      "upload_time": "2023-03-08T15:19:48",
      "upload_time_iso_8601": "2023-03-08T15:19:48.362326Z",
      "url": "https://files.pythonhosted.org/packages/e7/42/2a564768129fa6bdbd00ebc5ea73bfb1c8d1406e1f6b8897cb14486e799c/translationPdF-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0d4245ea5c77225b350470d5bc826c317630a2063d557d90cba13b6de58d5f15",
        "md5": "2b2a15ba0cc74c782e4ab4f41ea35cfb",
        "sha256": "698f112294ff50065b6753fa0e407a71231bda513e6f42aa23950cf32f719718"
      },
      "downloads": -1,
      "filename": "translationPdF-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2b2a15ba0cc74c782e4ab4f41ea35cfb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 10795,
      "upload_time": "2023-03-08T15:19:50",
      "upload_time_iso_8601": "2023-03-08T15:19:50.475201Z",
      "url": "https://files.pythonhosted.org/packages/0d/42/45ea5c77225b350470d5bc826c317630a2063d557d90cba13b6de58d5f15/translationPdF-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}