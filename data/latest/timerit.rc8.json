{
  "info": {
    "author": "Jon Crall",
    "author_email": "erotemic@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "\n|GithubActions| |Appveyor| |Codecov| |Pypi| |Downloads| |ReadTheDocs| \n\n.. .. |CircleCI| \n\nTimerit\n=======\n\nA powerful multiline alternative to Python's builtin ``timeit`` module.\n\nDocs are published at https://timerit.readthedocs.io/en/latest/ but this README\nand code comments contain a walkthrough.\n\nDescription\n-----------\n\nEasily do robust timings on existing blocks of code by simply indenting\nthem. There is no need to refactor into a string representation or\nconvert to a single line.\n\nInstallation\n------------\n\n::\n\n    pip install timerit\n\n\nExamples\n--------\n\nThe quick and dirty way just requires one indent.\n\n.. code:: python\n\n    >>> import math\n    >>> from timerit import Timerit\n    >>> for _ in Timerit(num=200, verbose=2):\n    >>>     math.factorial(10000)\n    Timing for 200 loops\n    Timed for: 200 loops, best of 3\n        time per loop: best=2.469 ms, mean=2.49 ± 0.037 ms\n\nUse the loop variable as a context manager for more accurate timings or\nto incorporate a setup phase that is not timed. You can also access\nproperties of the ``Timerit`` class to programmatically use results.\n\n.. code:: python\n\n    >>> import math\n    >>> from timerit import Timerit\n    >>> t1 = Timerit(num=200, verbose=2)\n    >>> for timer in t1:\n    >>>     setup_vars = 10000\n    >>>     with timer:\n    >>>         math.factorial(setup_vars)\n    >>> print('t1.total_time = %r' % (t1.total_time,))\n    Timing for 200 loops\n    Timed for: 200 loops, best of 3\n        time per loop: best=2.064 ms, mean=2.115 ± 0.05 ms\n    t1.total_time = 0.4427177629695507\n\nThere is also a simple one-liner that is comparable to IPython magic:\n\nCompare the timeit version:\n\n.. code:: python\n\n    >>> %timeit math.factorial(100)\n    564 ns ± 5.46 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)\n\nWith the Timerit version:\n\n.. code:: python\n\n    >>> Timerit(100000).call(math.factorial, 100).print()\n    Timed for: 1 loops, best of 1\n        time per loop: best=4.828 µs, mean=4.828 ± 0.0 µs\n\n        \nHow it works\n------------\n\nThe timerit module defines ``timerit.Timerit``, which is an iterable object\nthat yields ``timerit.Timer`` context managers.\n\n.. code:: python\n\n    >>> import math\n    >>> from timerit import Timerit\n    >>> for timer in Timerit(num=200, verbose=2):\n    >>>     with timer:\n    >>>         math.factorial(10000)\n\nThe timer context manager measures how much time the body of it takes by\n\"tic\"-ing on ``__enter__`` and \"toc\"-ing on ``__exit__``. The parent\n``Timerit`` object has access to the context manager, so it is able to read its\nmeasurement. These measurements are stored and then we compute some statistics\non them. Notably the minimum, mean, and standard-deviation of grouped (batched)\nrunning times.\n\nUsing the with statement inside the loop is nice because you can run untimed\nsetup code before you enter the context manager.\n\nIn the case where no setup code is required, a more concise version of the\nsynax is available. \n\n.. code:: python\n\n    >>> import math\n    >>> from timerit import Timerit\n    >>> for _ in Timerit(num=200, verbose=2):\n    >>>     math.factorial(10000)\n\nIf the context manager is never called, the ``Timerit`` object detects this and\nthe measurement is made in the ``__iter__`` method in the ``Timerit`` object\nitself. I believe that this concise method contains slightly more overhead than\nthe with-statement version. (I have seen evidence that this might actually be\nmore accurate, but it needs further testing).\n\nBenchmark Recipe\n----------------\n\n.. code:: python\n\n    import ubelt as ub\n    import pandas as pd\n    import timerit\n\n    def method1(x):\n        ret = []\n        for i in range(x):\n            ret.append(i)\n        return ret\n\n    def method2(x):\n        ret = [i for i in range(x)]\n        return ret\n\n    method_lut = locals()  # can populate this some other way\n\n    ti = timerit.Timerit(100, bestof=10, verbose=2)\n\n    basis = {\n        'method': ['method1', 'method2'],\n        'x': list(range(7)),\n        # 'param_name': [param values],\n    }\n    grid_iter = ub.named_product(basis)\n\n    # For each variation of your experiment, create a row.\n    rows = []\n    for params in grid_iter:\n        key = ub.repr2(params, compact=1, si=1)\n        kwargs = params.copy()\n        method_key = kwargs.pop('method')\n        method = method_lut[method_key]\n        # Timerit will run some user-specified number of loops.\n        # and compute time stats with similar methodology to timeit\n        for timer in ti.reset(key):\n            # Put any setup logic you dont want to time here.\n            # ...\n            with timer:\n                # Put the logic you want to time here\n                method(**kwargs)\n        row = {\n            'mean': ti.mean(),\n            'min': ti.min(),\n            'key': key,\n            **params,\n        }\n        rows.append(row)\n\n    # The rows define a long-form pandas data array.\n    # Data in long-form makes it very easy to use seaborn.\n    data = pd.DataFrame(rows)\n    print(data)\n\n    plot = True\n    if plot:\n        # import seaborn as sns\n        # kwplot autosns works well for IPython and script execution.\n        # not sure about notebooks.\n        import kwplot\n        sns = kwplot.autosns()\n\n        # Your variables may change\n        ax = kwplot.figure(fnum=1, doclf=True).gca()\n        sns.lineplot(data=data, x='x', y='min', hue='method', marker='o', ax=ax)\n        ax.set_title('Benchmark')\n        ax.set_xlabel('A better x-variable description')\n        ax.set_ylabel('A better y-variable description')\n\n\n.. |Travis| image:: https://img.shields.io/travis/Erotemic/timerit/master.svg?label=Travis%20CI\n   :target: https://travis-ci.org/Erotemic/timerit?branch=master\n.. |Codecov| image:: https://codecov.io/github/Erotemic/timerit/badge.svg?branch=master&service=github\n   :target: https://codecov.io/github/Erotemic/timerit?branch=master\n.. |Appveyor| image:: https://ci.appveyor.com/api/projects/status/github/Erotemic/timerit?branch=master&svg=True\n   :target: https://ci.appveyor.com/project/Erotemic/timerit/branch/master\n.. |Pypi| image:: https://img.shields.io/pypi/v/timerit.svg\n   :target: https://pypi.python.org/pypi/timerit\n.. |Downloads| image:: https://img.shields.io/pypi/dm/timerit.svg\n   :target: https://pypistats.org/packages/timerit\n.. |CircleCI| image:: https://circleci.com/gh/Erotemic/timerit.svg?style=svg\n    :target: https://circleci.com/gh/Erotemic/timerit\n.. |ReadTheDocs| image:: https://readthedocs.org/projects/timerit/badge/?version=latest\n    :target: http://timerit.readthedocs.io/en/latest/\n.. |CodeQuality| image:: https://api.codacy.com/project/badge/Grade/fdcedca723f24ec4be9c7067d91cb43b \n    :target: https://www.codacy.com/manual/Erotemic/timerit?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Erotemic/timerit&amp;utm_campaign=Badge_Grade\n.. |GithubActions| image:: https://github.com/Erotemic/timerit/actions/workflows/tests.yml/badge.svg?branch=main\n    :target: https://github.com/Erotemic/timerit/actions?query=branch%3Amain\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Erotemic/timerit",
    "keywords": "",
    "license": "Apache 2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "timerit",
    "package_url": "https://pypi.org/project/timerit/",
    "platform": null,
    "project_url": "https://pypi.org/project/timerit/",
    "project_urls": {
      "Homepage": "https://github.com/Erotemic/timerit"
    },
    "release_url": "https://pypi.org/project/timerit/1.0.1/",
    "requires_dist": [
      "codecov ; extra == 'all'",
      "xdoctest ; extra == 'all'",
      "codecov (==2.0.15) ; extra == 'all-strict'",
      "xdoctest (==1.1.0) ; extra == 'all-strict'",
      "pytest-cov (==2.8.1) ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'all-strict'",
      "pytest (<=4.6.11,==4.6.0) ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'all-strict'",
      "pytest (==4.6.0) ; (python_version < \"3.10.0\" and python_version >= \"3.7.0\") and extra == 'all-strict'",
      "pytest-cov (==2.8.1) ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'all-strict'",
      "pytest (<=4.6.11,==4.6.0) ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'all-strict'",
      "pytest-cov (==2.9.0) ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'all-strict'",
      "pytest (<=6.1.2,==4.6.0) ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'all-strict'",
      "pytest (==4.6.0) ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'all-strict'",
      "pytest (==6.2.5) ; (python_version >= \"3.10.0\") and extra == 'all-strict'",
      "pytest-cov (==3.0.0) ; (python_version >= \"3.6.0\") and extra == 'all-strict'",
      "pytest ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'all'",
      "pytest-cov ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'all'",
      "pytest ; (python_version < \"3.10.0\" and python_version >= \"3.7.0\") and extra == 'all'",
      "pytest ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'all'",
      "pytest-cov ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'all'",
      "pytest ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'all'",
      "pytest-cov ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'all'",
      "pytest ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'all'",
      "pytest ; (python_version >= \"3.10.0\") and extra == 'all'",
      "pytest-cov ; (python_version >= \"3.6.0\") and extra == 'all'",
      "codecov ; extra == 'tests'",
      "xdoctest ; extra == 'tests'",
      "codecov (==2.0.15) ; extra == 'tests-strict'",
      "xdoctest (==1.1.0) ; extra == 'tests-strict'",
      "pytest-cov (==2.8.1) ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'tests-strict'",
      "pytest (<=4.6.11,==4.6.0) ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'tests-strict'",
      "pytest (==4.6.0) ; (python_version < \"3.10.0\" and python_version >= \"3.7.0\") and extra == 'tests-strict'",
      "pytest-cov (==2.8.1) ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'tests-strict'",
      "pytest (<=4.6.11,==4.6.0) ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'tests-strict'",
      "pytest-cov (==2.9.0) ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'tests-strict'",
      "pytest (<=6.1.2,==4.6.0) ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'tests-strict'",
      "pytest (==4.6.0) ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'tests-strict'",
      "pytest (==6.2.5) ; (python_version >= \"3.10.0\") and extra == 'tests-strict'",
      "pytest-cov (==3.0.0) ; (python_version >= \"3.6.0\") and extra == 'tests-strict'",
      "pytest ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'tests'",
      "pytest-cov ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'tests'",
      "pytest ; (python_version < \"3.10.0\" and python_version >= \"3.7.0\") and extra == 'tests'",
      "pytest ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'tests'",
      "pytest-cov ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'tests'",
      "pytest ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'tests'",
      "pytest-cov ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'tests'",
      "pytest ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'tests'",
      "pytest ; (python_version >= \"3.10.0\") and extra == 'tests'",
      "pytest-cov ; (python_version >= \"3.6.0\") and extra == 'tests'"
    ],
    "requires_python": ">=3.6",
    "summary": "A powerful multiline alternative to timeit",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16431583,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04022b3e461b0634994dce16df71c9b0019ef5e19d82b881997c5a9c9a289c56",
          "md5": "a3815f310b602ee3190bad5e52dbd168",
          "sha256": "7215da4d51e148ca57b3f33a5991cfb2daaf74ed841e658306737699fc882373"
        },
        "downloads": -1,
        "filename": "timerit-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a3815f310b602ee3190bad5e52dbd168",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 8431,
        "upload_time": "2018-05-27T19:52:55",
        "upload_time_iso_8601": "2018-05-27T19:52:55.298475Z",
        "url": "https://files.pythonhosted.org/packages/04/02/2b3e461b0634994dce16df71c9b0019ef5e19d82b881997c5a9c9a289c56/timerit-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c066f7b4c9737286fe055f2c46d403015b47e61d4fe8cb81b0d95d3d9f039cd2",
          "md5": "fa136124ee67a337debab676208bbd66",
          "sha256": "6d2018a1d8470324196d6e234dcb4b95637b35cbe3bf4a8f5a4195cd04400285"
        },
        "downloads": -1,
        "filename": "timerit-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fa136124ee67a337debab676208bbd66",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9557,
        "upload_time": "2018-06-28T03:43:24",
        "upload_time_iso_8601": "2018-06-28T03:43:24.722572Z",
        "url": "https://files.pythonhosted.org/packages/c0/66/f7b4c9737286fe055f2c46d403015b47e61d4fe8cb81b0d95d3d9f039cd2/timerit-0.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e67edbea0d3b88eda9740ad6439c30ee34761f213e4d475cee6f32c94a4dcfa6",
          "md5": "b71d7170cf45a789c797ef1a1c12002c",
          "sha256": "b0a4deaecd1baccf846d97f1862e8f6a5508d686ae35bf55028ca4b370f36153"
        },
        "downloads": -1,
        "filename": "timerit-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b71d7170cf45a789c797ef1a1c12002c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9754,
        "upload_time": "2018-07-19T15:00:08",
        "upload_time_iso_8601": "2018-07-19T15:00:08.997017Z",
        "url": "https://files.pythonhosted.org/packages/e6/7e/dbea0d3b88eda9740ad6439c30ee34761f213e4d475cee6f32c94a4dcfa6/timerit-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cc5f324c4a7da93b6cf5a91d2cfddad50926248597751a91d096b951a801549",
          "md5": "52435903589906a8a120fbbacc40c430",
          "sha256": "a3ff3f7c42ff6f0b49ec9073e11a6cec9a86ecfed163cce2410706e7a422407d"
        },
        "downloads": -1,
        "filename": "timerit-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "52435903589906a8a120fbbacc40c430",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9864,
        "upload_time": "2019-03-04T01:20:45",
        "upload_time_iso_8601": "2019-03-04T01:20:45.302927Z",
        "url": "https://files.pythonhosted.org/packages/6c/c5/f324c4a7da93b6cf5a91d2cfddad50926248597751a91d096b951a801549/timerit-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cdc1bea352d27a736193fea2bf726cd0a39927cbb5529c72038aed7fcac7bc4",
          "md5": "683167921405f8a02e93a0c46e73b9ab",
          "sha256": "04d90100d124ec1c58c2091c299d84ce1e143b4f7e321f5f39bc3f12bd66a4f7"
        },
        "downloads": -1,
        "filename": "timerit-0.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "683167921405f8a02e93a0c46e73b9ab",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9926,
        "upload_time": "2019-03-04T02:28:05",
        "upload_time_iso_8601": "2019-03-04T02:28:05.548234Z",
        "url": "https://files.pythonhosted.org/packages/6c/dc/1bea352d27a736193fea2bf726cd0a39927cbb5529c72038aed7fcac7bc4/timerit-0.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d3531fdb25ac646c41fe89faa5c5c78f223aed184c8aa6f1fc9faf2aa98ce0d",
          "md5": "583efd202420d88637d8412de56c5474",
          "sha256": "e869b929c8e7e569c2122eb7ad6bbc938704445f60557318df05b19343b65a6e"
        },
        "downloads": -1,
        "filename": "timerit-0.3.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "583efd202420d88637d8412de56c5474",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 13793,
        "upload_time": "2019-12-30T00:30:39",
        "upload_time_iso_8601": "2019-12-30T00:30:39.509981Z",
        "url": "https://files.pythonhosted.org/packages/0d/35/31fdb25ac646c41fe89faa5c5c78f223aed184c8aa6f1fc9faf2aa98ce0d/timerit-0.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21c1ee92ecfd6842cacb71c0ededb7fa73d204c6f8a77d28b0a7a6a86fbf1f50",
          "md5": "6a94aea6e3e84619c4ede88ac6a336f7",
          "sha256": "594178d0ff1b05909285b71dac1f1200d32cce45e9516b2824f2c3c76f154530"
        },
        "downloads": -1,
        "filename": "timerit-0.3.0.tar.gz",
        "has_sig": true,
        "md5_digest": "6a94aea6e3e84619c4ede88ac6a336f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10607,
        "upload_time": "2019-12-30T00:30:37",
        "upload_time_iso_8601": "2019-12-30T00:30:37.780328Z",
        "url": "https://files.pythonhosted.org/packages/21/c1/ee92ecfd6842cacb71c0ededb7fa73d204c6f8a77d28b0a7a6a86fbf1f50/timerit-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3d48024debf0627267125fa78503ff6cb9c0874983b57311feadb90d7da668d",
          "md5": "c46b172800eedd9230e4a4c64548f92c",
          "sha256": "943efe6c112b60a927b1bf58a9562bb990ef81b5a4e64e5deb4d0c45b0b10126"
        },
        "downloads": -1,
        "filename": "timerit-1.0.0-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "c46b172800eedd9230e4a4c64548f92c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17758,
        "upload_time": "2022-04-19T03:08:56",
        "upload_time_iso_8601": "2022-04-19T03:08:56.400891Z",
        "url": "https://files.pythonhosted.org/packages/d3/d4/8024debf0627267125fa78503ff6cb9c0874983b57311feadb90d7da668d/timerit-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9400741370e9d9ffb227189ce87c8a772af1292d309e8859e65a901bb67c0a5b",
          "md5": "97cf08e76993f288ea815278606f4454",
          "sha256": "fe6ebb4f0821f7996a61f851f54647905fc6b9b7f403a34233d2efd900820899"
        },
        "downloads": -1,
        "filename": "timerit-1.0.0.tar.gz",
        "has_sig": true,
        "md5_digest": "97cf08e76993f288ea815278606f4454",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17616,
        "upload_time": "2022-04-19T03:08:53",
        "upload_time_iso_8601": "2022-04-19T03:08:53.457428Z",
        "url": "https://files.pythonhosted.org/packages/94/00/741370e9d9ffb227189ce87c8a772af1292d309e8859e65a901bb67c0a5b/timerit-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca4478ed3ad03de183007d539c54603c35ee3cac4b93b3269df9d70d58b5154b",
          "md5": "09126cffa7bce9a5ce48d0863a15fd61",
          "sha256": "c226b965764e10c4e2adee1a343ceab55ff486e3c0efb23d10624e6eed74140d"
        },
        "downloads": -1,
        "filename": "timerit-1.0.1-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "09126cffa7bce9a5ce48d0863a15fd61",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19928,
        "upload_time": "2023-01-14T22:26:59",
        "upload_time_iso_8601": "2023-01-14T22:26:59.751070Z",
        "url": "https://files.pythonhosted.org/packages/ca/44/78ed3ad03de183007d539c54603c35ee3cac4b93b3269df9d70d58b5154b/timerit-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac67cbe183c26e625e00f063b91ab2708e05a66f65bf56577ab0738666c0e41a",
          "md5": "e174aaae856f11343bc42ada64c754b4",
          "sha256": "55854c1867f4e0b680213baaff78a2c170564b9f929aa8fa24221b15afe2c801"
        },
        "downloads": -1,
        "filename": "timerit-1.0.1.tar.gz",
        "has_sig": true,
        "md5_digest": "e174aaae856f11343bc42ada64c754b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23711,
        "upload_time": "2023-01-14T22:27:03",
        "upload_time_iso_8601": "2023-01-14T22:27:03.057994Z",
        "url": "https://files.pythonhosted.org/packages/ac/67/cbe183c26e625e00f063b91ab2708e05a66f65bf56577ab0738666c0e41a/timerit-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ca4478ed3ad03de183007d539c54603c35ee3cac4b93b3269df9d70d58b5154b",
        "md5": "09126cffa7bce9a5ce48d0863a15fd61",
        "sha256": "c226b965764e10c4e2adee1a343ceab55ff486e3c0efb23d10624e6eed74140d"
      },
      "downloads": -1,
      "filename": "timerit-1.0.1-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "09126cffa7bce9a5ce48d0863a15fd61",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 19928,
      "upload_time": "2023-01-14T22:26:59",
      "upload_time_iso_8601": "2023-01-14T22:26:59.751070Z",
      "url": "https://files.pythonhosted.org/packages/ca/44/78ed3ad03de183007d539c54603c35ee3cac4b93b3269df9d70d58b5154b/timerit-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ac67cbe183c26e625e00f063b91ab2708e05a66f65bf56577ab0738666c0e41a",
        "md5": "e174aaae856f11343bc42ada64c754b4",
        "sha256": "55854c1867f4e0b680213baaff78a2c170564b9f929aa8fa24221b15afe2c801"
      },
      "downloads": -1,
      "filename": "timerit-1.0.1.tar.gz",
      "has_sig": true,
      "md5_digest": "e174aaae856f11343bc42ada64c754b4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 23711,
      "upload_time": "2023-01-14T22:27:03",
      "upload_time_iso_8601": "2023-01-14T22:27:03.057994Z",
      "url": "https://files.pythonhosted.org/packages/ac/67/cbe183c26e625e00f063b91ab2708e05a66f65bf56577ab0738666c0e41a/timerit-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}