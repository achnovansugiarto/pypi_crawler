{
  "info": {
    "author": "Vieolo OÃœ",
    "author_email": "info@vieolo.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Time Utility 0.1.0\n\nTime utility is a series of utility methods regarding date and time for python.\n\n```text\nNote: This package requires python 3.6 and higher\n```\n\n## Installation\n```text\npip3 install time_utility\n```\n\n## Import\n```python\nfrom time_utility import TimeUtility\n```\n\n## Usage\nThe following are the methods available in TimeUtility\n\n<br><br>\n* ###`is_naive(target_datetime)`\nChecks if the given datetime object is naive.\n\nParameters:<br>\n1. `target_datetime: datetime.datetime` => The target datetime to be checked\n\nReturns: `bool`\n\nExample:\n```python\nfrom time_utility import TimeUtility\n\nis_it_naive = TimeUtility.is_naive(TimeUtility.now())\n```\n\n\n\n\n\n<br><br>\n* ###`is_aware(target_datetime)`\nChecks if the given datetime object is aware\n\nExample:\n```python\nfrom time_utility import TimeUtility\n\nis_it_aware = TimeUtility.is_aware(TimeUtility.now())\n```\n\n\n\n\n\n\n<br><br>\n* ####`make_aware(target_datetime, timezone=pytz.utc)`\nReturns an aware datetime object based on the naive target_datetime\n\nParameters:<br>\n1. `target_datetime: datetime.datetime` => The target datetime\n2. `timezone` [optional] => The preferred timezone. [default: UTC] \n\nreturns `datetime.datetime`\n\nExample:\n```python\nfrom time_utility import TimeUtility\nfrom datetime import datetime\n\naware = TimeUtility.make_aware(datetime.now())\n```\n\n\n\n\n\n\n<br><br>\n* ####`now(timezone=pytz.utc)`\nReturns an aware instance of the current datetime\n\nParameters:<br>\n1. `timezone` [Optional] => The preferred timezone [default: UTC]\n\nreturns `datetime.datetime`\n\nExample:\n```python\nfrom time_utility import TimeUtility\n\nnow = TimeUtility.now()\n```\n\n\n\n\n\n<br><br>\n* ####`today(timezone=pytz.utc)`\nReturns an aware instance of today's date\n\nParameters:<br>\n1. `timezone` [Optional] => The preferred timezone [default: UTC]\n\nreturns `datetime.date`\n\nExample:\n```python\nfrom time_utility import TimeUtility\n\ntoday = TimeUtility.today()\n```\n\n\n\n\n\n<br><br>\n* ####`get_date_start(timezone=pytz.utc, year = None, month = None, day = None)`\nReturns the date and time of the beginning of the day with the given timezone\n\nParameters:<br>\n1. `timezone` [Optional] => The preferred timezone [default: UTC]\n2. `year: int` => The target year. [default: None (will be set to current year)]\n3. `month: int` => The target month. [default: None (will be set to current month)]\n4. `day: int` => The target day. [default: None (will be set to current day)]\n\nreturns `datetime.datetime`\n\nExample:\n```python\nfrom time_utility import TimeUtility\n\nday_start = TimeUtility.get_date_start(year=2020, month=5)\n```\n\n\n\n\n<br><br>\n* ####`get_date_end(timezone=pytz.utc, year = None, month = None, day = None)`\nReturns the date and time of the ending of the day with the given timezone\n\nParameters:<br>\n1. `timezone` [Optional] => The preferred timezone [default: UTC]\n2. `year: int` => The target year. [default: None (will be set to current year)]\n3. `month: int` => The target month. [default: None (will be set to current month)]\n4. `day: int` => The target day. [default: None (will be set to current day)]\n\nreturns `datetime.datetime`\n\nExample:\n```python\nfrom time_utility import TimeUtility\n\nday_start = TimeUtility.get_date_end(year=2020, month=5)\n```\n\n\n\n\n<br><br>\n* ####`get_month_start(timezone=pytz.utc, year = None, month = None)`\nReturns the date and time of the beginning of the month with the given timezone\n\nParameters:<br>\n1. `timezone` [Optional] => The preferred timezone [default: UTC]\n2. `year: int` => The target year. [default: None (will be set to current year)]\n3. `month: int` => The target month. [default: None (will be set to current month)]\n\nreturns `datetime.datetime`\n\nExample:\n```python\nfrom time_utility import TimeUtility\n\nday_start = TimeUtility.get_month_start(year=2020, month=5)\n```\n\n\n\n<br><br>\n* ####`get_month_end(timezone=pytz.utc, year = None, month = None)`\nReturns the date and time of the ending of the month with the given timezone\n\nParameters:<br>\n1. `timezone` [Optional] => The preferred timezone [default: UTC]\n2. `year: int` => The target year. [default: None (will be set to current year)]\n3. `month: int` => The target month. [default: None (will be set to current month)]\n\nreturns `datetime.datetime`\n\nExample:\n```python\nfrom time_utility import TimeUtility\n\nday_start = TimeUtility.get_month_end(year=2020, month=5)\n```\n\n\n\n<br><br>\n* ####`get_year_start(timezone=pytz.utc, year = None)`\nReturns the date and time of the beginning of the year with the given timezone\n\nParameters:<br>\n1. `timezone` [Optional] => The preferred timezone [default: UTC]\n2. `year: int` => The target year. [default: None (will be set to current year)]\n\nreturns `datetime.datetime`\n\nExample:\n```python\nfrom time_utility import TimeUtility\n\nday_start = TimeUtility.get_year_start(year=2020)\n```\n\n\n\n<br><br>\n* ####`get_year_end(timezone=pytz.utc, year = None)`\nReturns the date and time of the ending of the year with the given timezone\n\nParameters:<br>\n1. `timezone` [Optional] => The preferred timezone [default: UTC]\n2. `year: int` => The target year. [default: None (will be set to current year)]\n\nreturns `datetime.datetime`\n\nExample:\n```python\nfrom time_utility import TimeUtility\n\nday_start = TimeUtility.get_year_end(year=2020)\n```\n\n\n\n\n\n<br><br>\n* ####`adjust_offset(original_datetime, offset, local_to_utc)`\nCreates and returns a new datetime object using the given datetime object with the given offset in minutes.\nThe offset should be positive for timezones ahead of UTC (e.g. India) and negative for timezones before UTC (e.g. US) <br>\nNote that the offset obtained in Javascript via `new Date().getTimezoneOffset()` should be multiplied by -1.\n\nParameters:<br>\n1. `original_datetime: datetime.datetime` => The original datetime to be adjusted\n2. `offset: int` => The offset in minutes\n3. `local_to_utc` => Set to True if the original datetime is in local time and set to False if the original datetime is in UTC time\n\nreturns `datetime.datetime`\n\nExample:\n```python\nfrom time_utility import TimeUtility\nfrom datetime import datetime\n\nadjusted_datetime = TimeUtility.adjust_offset(TimeUtility.make_aware(datetime.now()), 330, True)\n```\n\n\n\n\n<br><br>\n* ####`get_period(year, month, day, period, offset = 0)`\nGets the start and the end datetime of a selected period\n\nParameters:<br>\n1. `year: int` => The selected year\n2. `month: int` => The selected month\n3. `day: int` => The selected day\n4. `period: str` => The selected period. Your options are: `TimeUtility.DAILY`, `TimeUtility.MONTHLY`, and `TimeUtility.ANNUAL`\n5. `offset: int` [optional] => The offset from UTC to adjust the start and the end [default: 0]\n\nreturns `(datetime.datetime, datetime.datetime)`\n\nExample:\n```python\nfrom time_utility import TimeUtility\n\nstart, end = TimeUtility.get_period(year=2020, month=2, day=10, period=TimeUtility.MONTHLY, offset=330)\n```\n\n\n\n\n<br><br>\n* ####`difference(large_time, small_time, time_span = TimeUtility.SECOND)`\nCalculates the difference between two datetime object based on the given time-span\n\nParameters:<br>\n1. `large_time: datetime.datetime` => The bigger datetime object of the two\n2. `small_time: datetime.datetime` => The smaller datetime object of the two\n3. `time_span: str` [Optional] => The time-span unit of time to calculate the difference. The options are `TimeUtility.MICROSECOND`, `TimeUtility.SECOND`, `TimeUtility.MINUTE`, `TimeUtility.HOUR`, `TimeUtility.DAY`. [default: TimeUtility.SECOND] \n\nreturns `int`\n\nExample:\n```python\nfrom time_utility import TimeUtility\n\ndifference = TimeUtility.difference(TimeUtility.adjust_offset(TimeUtility.now(), 120, False), TimeUtility.now(), TimeUtility.MINUTE)\n```\n\n\n\n\n<br><br>\n* ####`is_leap_year(year = None)`\nChecks if the given year is a leap year or not\n\nParameters:<br>\n1. `year: int` [Optional] => The target year [default: None (will be set to current year)]\n\nreturns `bool`\n\nExample:\n```python\nfrom time_utility import TimeUtility\n\nis_leap = TimeUtility.is_leap_year(year=2020)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Vieolo/python-time-utility.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "time-utility",
    "package_url": "https://pypi.org/project/time-utility/",
    "platform": "",
    "project_url": "https://pypi.org/project/time-utility/",
    "project_urls": {
      "Homepage": "https://github.com/Vieolo/python-time-utility.git"
    },
    "release_url": "https://pypi.org/project/time-utility/0.2.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Time utility functions",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11170367,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "298773e42691e302330fa5471892a55fd74189fa55aa4d78d0723f62652638b6",
          "md5": "4104a1044548d5a3c7aa3f20049281c6",
          "sha256": "82998215a0d93174f5cd5ff9dbbb5394b0da5eeb9fbbe5275956c0988b49c954"
        },
        "downloads": -1,
        "filename": "time_utility-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4104a1044548d5a3c7aa3f20049281c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6699,
        "upload_time": "2020-07-25T15:40:49",
        "upload_time_iso_8601": "2020-07-25T15:40:49.336577Z",
        "url": "https://files.pythonhosted.org/packages/29/87/73e42691e302330fa5471892a55fd74189fa55aa4d78d0723f62652638b6/time_utility-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27940597b2ffb4ee03ec330836ba7041cf99eb1f4fc2bd1c557870abb7fe8293",
          "md5": "c3558c53e3abd72837caace99021a931",
          "sha256": "8c457ff1ec8b8e1bf7ac8ed4678c624cc6fe28b37d1dfe893295cc2b49a09443"
        },
        "downloads": -1,
        "filename": "time_utility-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c3558c53e3abd72837caace99021a931",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6691,
        "upload_time": "2020-07-25T15:40:52",
        "upload_time_iso_8601": "2020-07-25T15:40:52.982787Z",
        "url": "https://files.pythonhosted.org/packages/27/94/0597b2ffb4ee03ec330836ba7041cf99eb1f4fc2bd1c557870abb7fe8293/time_utility-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1fa99b1c25a6077954e7e1e4336ed738237ed2a589f6bc7296d2f8fc4bce7b6",
          "md5": "d56efaceb380cb7342be69cf9932d252",
          "sha256": "b3a3224810f9798ddbe07e309cc59f77de62fa97e6cb84a455d5b899eda05f03"
        },
        "downloads": -1,
        "filename": "time_utility-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d56efaceb380cb7342be69cf9932d252",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8740,
        "upload_time": "2021-08-13T10:57:16",
        "upload_time_iso_8601": "2021-08-13T10:57:16.385268Z",
        "url": "https://files.pythonhosted.org/packages/a1/fa/99b1c25a6077954e7e1e4336ed738237ed2a589f6bc7296d2f8fc4bce7b6/time_utility-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6a9d3b2823fc495f56e0c64216f78605c9bd85d132abb69da75e6608c97fbfd",
          "md5": "5bbfdfdf78eef64e60820d22d979cb6b",
          "sha256": "6e72416362ef6a5ced35cb1fbced92d488231d7ba38be7e1647d3ad5ba8c5e58"
        },
        "downloads": -1,
        "filename": "time_utility-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5bbfdfdf78eef64e60820d22d979cb6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8940,
        "upload_time": "2021-08-13T10:57:18",
        "upload_time_iso_8601": "2021-08-13T10:57:18.442815Z",
        "url": "https://files.pythonhosted.org/packages/d6/a9/d3b2823fc495f56e0c64216f78605c9bd85d132abb69da75e6608c97fbfd/time_utility-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a1fa99b1c25a6077954e7e1e4336ed738237ed2a589f6bc7296d2f8fc4bce7b6",
        "md5": "d56efaceb380cb7342be69cf9932d252",
        "sha256": "b3a3224810f9798ddbe07e309cc59f77de62fa97e6cb84a455d5b899eda05f03"
      },
      "downloads": -1,
      "filename": "time_utility-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d56efaceb380cb7342be69cf9932d252",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8740,
      "upload_time": "2021-08-13T10:57:16",
      "upload_time_iso_8601": "2021-08-13T10:57:16.385268Z",
      "url": "https://files.pythonhosted.org/packages/a1/fa/99b1c25a6077954e7e1e4336ed738237ed2a589f6bc7296d2f8fc4bce7b6/time_utility-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d6a9d3b2823fc495f56e0c64216f78605c9bd85d132abb69da75e6608c97fbfd",
        "md5": "5bbfdfdf78eef64e60820d22d979cb6b",
        "sha256": "6e72416362ef6a5ced35cb1fbced92d488231d7ba38be7e1647d3ad5ba8c5e58"
      },
      "downloads": -1,
      "filename": "time_utility-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5bbfdfdf78eef64e60820d22d979cb6b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8940,
      "upload_time": "2021-08-13T10:57:18",
      "upload_time_iso_8601": "2021-08-13T10:57:18.442815Z",
      "url": "https://files.pythonhosted.org/packages/d6/a9/d3b2823fc495f56e0c64216f78605c9bd85d132abb69da75e6608c97fbfd/time_utility-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}