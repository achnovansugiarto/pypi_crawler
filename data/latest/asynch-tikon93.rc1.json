{
  "info": {
    "author": "long2ice",
    "author_email": "long2ice@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# asynch\n\n![pypi](https://img.shields.io/pypi/v/asynch.svg?style=flat)\n![license](https://img.shields.io/github/license/long2ice/asynch)\n![workflows](https://github.com/long2ice/asynch/workflows/pypi/badge.svg)\n![workflows](https://github.com/long2ice/asynch/workflows/ci/badge.svg)\n\n## Introduction\n\n`asynch` is an asyncio ClickHouse Python Driver with native (TCP) interface support, which reuse most of [clickhouse-driver](https://github.com/mymarilyn/clickhouse-driver) and comply with [PEP249](https://www.python.org/dev/peps/pep-0249/).\n\n## Install\n\n```shell\n> pip install asynch\n```\n\n## Usage\n\nConnect to ClickHouse\n\n```python\nfrom asynch import connect\n\nasync def connect_database():\n    conn = await connect(\n        host = \"127.0.0.1\",\n        port = 9000,\n        database = \"default\",\n        user = \"default\",\n        password = \"\",\n    )\n```\n\nCreate table by sql\n\n```python\nasync def create_table():\n    async with conn.cursor(cursor=DictCursor) as cursor:\n        await cursor.execute('create database if not exists test')\n        await cursor.execute(\"\"\"\n        CREATE TABLE if not exists test.asynch\n            (\n                `id`       Int32,\n                `decimal`  Decimal(10, 2),\n                `date`     Date,\n                `datetime` DateTime,\n                `float`    Float32,\n                `uuid`     UUID,\n                `string`   String,\n                `ipv4`     IPv4,\n                `ipv6`     IPv6\n\n            )\n            ENGINE = MergeTree\n                ORDER BY id\"\"\"\n        )\n```\n\nUse `fetchone`\n\n```python\nasync def fetchone():\n    async with conn.cursor() as cursor:\n        await cursor.execute(\"SELECT 1\")\n        ret = cursor.fetchone()\n        assert ret == (1,)\n```\n\nUse `fetchmany`\n\n```python\nasync def fetchall():\n    async with conn.cursor() as cursor:\n        await cursor.execute(\"SELECT 1\")\n        ret = cursor.fetchall()\n        assert ret == [(1,)]\n```\n\nUse `DictCursor` to get result with dict\n\n```python\nasync def dict_cursor():\n    async with conn.cursor(cursor=DictCursor) as cursor:\n        await cursor.execute(\"SELECT 1\")\n        ret = cursor.fetchall()\n        assert ret == [{\"1\": 1}]\n```\n\nInsert data with dict\n\n```python\nfrom asynch.cursors import DictCursor\n\nasync def insert_dict():\n    async with conn.cursor(cursor=DictCursor) as cursor:\n        ret = await cursor.execute(\n            \"\"\"INSERT INTO test.asynch(id,decimal,date,datetime,float,uuid,string,ipv4,ipv6) VALUES\"\"\",\n            [\n                {\n                    \"id\": 1,\n                    \"decimal\": 1,\n                    \"date\": \"2020-08-08\",\n                    \"datetime\": \"2020-08-08 00:00:00\",\n                    \"float\": 1,\n                    \"uuid\": \"59e182c4-545d-4f30-8b32-cefea2d0d5ba\",\n                    \"string\": \"1\",\n                    \"ipv4\": \"0.0.0.0\",\n                    \"ipv6\": \"::\",\n                }\n            ],\n        )\n        assert ret == 1\n```\n\nInsert data with tuple\n\n```python\nasync def insert_tuple():\n    async with conn.cursor(cursor=DictCursor) as cursor:\n        ret = await cursor.execute(\n            \"\"\"INSERT INTO test.asynch(id,decimal,date,datetime,float,uuid,string,ipv4,ipv6) VALUES\"\"\",\n            [\n                (\n                    1,\n                    1,\n                    \"2020-08-08\",\n                    \"2020-08-08 00:00:00\",\n                    1,\n                    \"59e182c4-545d-4f30-8b32-cefea2d0d5ba\",\n                    \"1\",\n                    \"0.0.0.0\",\n                    \"::\",\n                )\n            ],\n        )\n        assert ret == 1\n```\n\nUse connection pool\n\n```python\nasync def use_pool():\n    pool = await asynch.create_pool()\n    async with pool.acquire() as conn:\n        async with conn.cursor() as cursor:\n            await cursor.execute(\"SELECT 1\")\n            ret = cursor.fetchone()\n            assert ret == (1,)\n    pool.close()\n    await pool.wait_closed()\n```\n\n## ThanksTo\n\n- [clickhouse-driver](https://github.com/mymarilyn/clickhouse-driver), ClickHouse Python Driver with native interface support.\n\n## License\n\nThis project is licensed under the [Apache-2.0](https://github.com/long2ice/asynch/blob/master/LICENSE) License.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/long2ice/asynch",
    "keywords": "ClickHouse,asyncio,driver",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "asynch-tikon93",
    "package_url": "https://pypi.org/project/asynch-tikon93/",
    "platform": null,
    "project_url": "https://pypi.org/project/asynch-tikon93/",
    "project_urls": {
      "Documentation": "https://github.com/long2ice/asynch",
      "Homepage": "https://github.com/long2ice/asynch",
      "Repository": "https://github.com/long2ice/asynch.git"
    },
    "release_url": "https://pypi.org/project/asynch-tikon93/0.1.10/",
    "requires_dist": [
      "ciso8601",
      "clickhouse-cityhash",
      "leb128",
      "lz4",
      "pytz",
      "tzlocal",
      "zstd"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "A asyncio driver for ClickHouse with native tcp protocol",
    "version": "0.1.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13151255,
  "releases": {
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd3b82e369b7c8bcfd0a9eb6a7e0d523299b3ed1171feee5f03ef0133de7ce0e",
          "md5": "e4e670b9d0475e237981f96641b35ce7",
          "sha256": "61d1dc1e988d92bbc30a8f37696941769f72d5277f978c1edde128c20d6ff48a"
        },
        "downloads": -1,
        "filename": "asynch_tikon93-0.1.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4e670b9d0475e237981f96641b35ce7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 65112,
        "upload_time": "2022-03-11T16:35:02",
        "upload_time_iso_8601": "2022-03-11T16:35:02.072721Z",
        "url": "https://files.pythonhosted.org/packages/cd/3b/82e369b7c8bcfd0a9eb6a7e0d523299b3ed1171feee5f03ef0133de7ce0e/asynch_tikon93-0.1.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1f6578ca2a77154cb2ec0f19985ba2c9a7f3fa32b25dc1fb549ddc65368a9bb",
          "md5": "dd942d4ab09239423fce419e63384c14",
          "sha256": "e43576bd4db2b702124b3533033b3c50482f2cdf350093a2eeb36912c9bc84b1"
        },
        "downloads": -1,
        "filename": "asynch-tikon93-0.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "dd942d4ab09239423fce419e63384c14",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 46646,
        "upload_time": "2022-03-11T16:35:04",
        "upload_time_iso_8601": "2022-03-11T16:35:04.218720Z",
        "url": "https://files.pythonhosted.org/packages/a1/f6/578ca2a77154cb2ec0f19985ba2c9a7f3fa32b25dc1fb549ddc65368a9bb/asynch-tikon93-0.1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd3b82e369b7c8bcfd0a9eb6a7e0d523299b3ed1171feee5f03ef0133de7ce0e",
        "md5": "e4e670b9d0475e237981f96641b35ce7",
        "sha256": "61d1dc1e988d92bbc30a8f37696941769f72d5277f978c1edde128c20d6ff48a"
      },
      "downloads": -1,
      "filename": "asynch_tikon93-0.1.10-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e4e670b9d0475e237981f96641b35ce7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 65112,
      "upload_time": "2022-03-11T16:35:02",
      "upload_time_iso_8601": "2022-03-11T16:35:02.072721Z",
      "url": "https://files.pythonhosted.org/packages/cd/3b/82e369b7c8bcfd0a9eb6a7e0d523299b3ed1171feee5f03ef0133de7ce0e/asynch_tikon93-0.1.10-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a1f6578ca2a77154cb2ec0f19985ba2c9a7f3fa32b25dc1fb549ddc65368a9bb",
        "md5": "dd942d4ab09239423fce419e63384c14",
        "sha256": "e43576bd4db2b702124b3533033b3c50482f2cdf350093a2eeb36912c9bc84b1"
      },
      "downloads": -1,
      "filename": "asynch-tikon93-0.1.10.tar.gz",
      "has_sig": false,
      "md5_digest": "dd942d4ab09239423fce419e63384c14",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 46646,
      "upload_time": "2022-03-11T16:35:04",
      "upload_time_iso_8601": "2022-03-11T16:35:04.218720Z",
      "url": "https://files.pythonhosted.org/packages/a1/f6/578ca2a77154cb2ec0f19985ba2c9a7f3fa32b25dc1fb549ddc65368a9bb/asynch-tikon93-0.1.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}