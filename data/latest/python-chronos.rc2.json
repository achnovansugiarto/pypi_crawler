{
  "info": {
    "author": "Hackt.app",
    "author_email": "opensource@hackt.app",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries",
      "Topic :: Utilities"
    ],
    "description": "# Chronos\n\nSimple and easy to use time-related utility functions.\n\nThese are simple routines we caught ourselves constantly in need when developing projects in [Hackt](https://hackt.app). They're all a combination of native Python libraries that we wanted to standardize in a standlone library.\n\n![Test Coverage](https://raw.githubusercontent.com/hacktlib/py-chronos/main/coverage.svg)\n![PyPI](https://img.shields.io/pypi/v/pychronos)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n[![Code Style](https://img.shields.io/badge/code%20style-PEP8-lightgrey)](https://github.com/hhatto/autopep8/)\n[![Code Formatter](https://img.shields.io/badge/formatter-autopep8-lightgrey)](https://github.com/hhatto/autopep8/)\n[![Test Framework](https://img.shields.io/badge/testing-pytest-lightgrey)](https://github.com/pytest-dev/pytest/)\n\n\n# Usage\n\nInstall from PyPI:\n\n```python\npip install python_chronos\n```\n\nImport in your project(s):\n\n```python\nimport chronos\n```\n\n\n## Get current UTC timestamp (`datetime` type)\n\n```python\nchronos.utc_now()\n# datetime.datetime(2021, 2, 2, 3, 59, 11, 856368)\n```\n\n\n## UTC timestamp (`integer` type)\n\n```python\nchronos.utc_timestamp()\n# 1612238428\n```\n\n\n## Past/Future UTC (`datetime` type)\n\nThe following function adds 10 minutes to the current UTC datetime:\n\n```python\nchronos.future_utc_datetime(minutes=10)\n# datetime.datetime(2021, 2, 2, 4, 14, 3, 573054)\n```\n\nSimilarly, the `past_utc_datetime` function does exactly what you have in mind:\n\n```python\nchronos.past_utc_datetime(minutes=10)\n# datetime.datetime(2021, 2, 2, 3, 54, 3, 573054)\n```\n\nAny keyword arguments you would pass to [`datetime.timedelta`](https://docs.python.org/3/library/datetime.html#timedelta-objechttps://docs.python.org/3/library/datetime.html#datetime.timedeltats) will work with `future_utc_datetime` and `past_utc_datetime`.\n\n\n## Past/Future UTC in UNIX timestamp (`integer` type)\n\n```python\nchronos.future_utc_timestamp(hours=2)\n# 1612246043\n```\n\nAnalogously, the `past_utc_timestamp` function will do exactly what you expect:\n\n```python\nchronos.past_utc_timestamp(hours=2)\n# 1612238843\n```\n\nAgain, any keyword arguments you would pass to [`datetime.timedelta`](https://docs.python.org/3/library/datetime.html#timedelta-objechttps://docs.python.org/3/library/datetime.html#datetime.timedeltats) will work with `future_utc_timestamp` and `past_utc_timestamp`.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hacktlib/py-chronos/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-chronos",
    "package_url": "https://pypi.org/project/python-chronos/",
    "platform": "",
    "project_url": "https://pypi.org/project/python-chronos/",
    "project_urls": {
      "Bug Reports": "https://github.com/hacktlib/py-chronos/issues",
      "Homepage": "https://github.com/hacktlib/py-chronos/",
      "Say Thanks!": "http://lib.hackt.app",
      "Source": "https://github.com/hacktlib/py-chronos/"
    },
    "release_url": "https://pypi.org/project/python-chronos/0.2.0/",
    "requires_dist": [
      "pytest (>=6.2.0) ; extra == 'dev'",
      "coverage (>=5.3) ; extra == 'dev'",
      "coverage-badge (>=1.0.1) ; extra == 'dev'",
      "wheel (>=0.36.2) ; extra == 'dev'",
      "flake8 (>=3.8.4) ; extra == 'dev'",
      "autopep8 (>=1.5.4) ; extra == 'dev'",
      "pytest (>=6.2.0) ; extra == 'pub'",
      "coverage (>=5.3) ; extra == 'pub'",
      "coverage-badge (>=1.0.1) ; extra == 'pub'",
      "wheel (>=0.36.2) ; extra == 'pub'",
      "flake8 (>=3.8.4) ; extra == 'pub'",
      "autopep8 (>=1.5.4) ; extra == 'pub'",
      "twine (>=3.2.0) ; extra == 'pub'"
    ],
    "requires_python": ">=3.6, <4",
    "summary": "Simple and easy to use date & time-related utility functions",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9355664,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "246ecd7ebc7e5a3db80d5b5aeb736bf64925581a83be55db00384009094f7bd8",
          "md5": "e0f2ddf2c4cb0c183eebe2c1a3b405dc",
          "sha256": "d9691b6f74d7e364d20f45f1e2afdac9cd34a0a7fa8d17a2b9f8508d07095854"
        },
        "downloads": -1,
        "filename": "python_chronos-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e0f2ddf2c4cb0c183eebe2c1a3b405dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 6883,
        "upload_time": "2021-02-02T04:44:01",
        "upload_time_iso_8601": "2021-02-02T04:44:01.798508Z",
        "url": "https://files.pythonhosted.org/packages/24/6e/cd7ebc7e5a3db80d5b5aeb736bf64925581a83be55db00384009094f7bd8/python_chronos-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00c157dba9453ce0c4897de0c0f6bee5e6f5f7ba7427d0b04339d27ba0b32cee",
          "md5": "1a3c23385766da7acbc072e3d6e3f98f",
          "sha256": "625f52f34628c56b190ac9480c3c010cdd97624b567aeae869a4e22e3db32652"
        },
        "downloads": -1,
        "filename": "python_chronos-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1a3c23385766da7acbc072e3d6e3f98f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 8046,
        "upload_time": "2021-02-08T20:28:31",
        "upload_time_iso_8601": "2021-02-08T20:28:31.282410Z",
        "url": "https://files.pythonhosted.org/packages/00/c1/57dba9453ce0c4897de0c0f6bee5e6f5f7ba7427d0b04339d27ba0b32cee/python_chronos-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "00c157dba9453ce0c4897de0c0f6bee5e6f5f7ba7427d0b04339d27ba0b32cee",
        "md5": "1a3c23385766da7acbc072e3d6e3f98f",
        "sha256": "625f52f34628c56b190ac9480c3c010cdd97624b567aeae869a4e22e3db32652"
      },
      "downloads": -1,
      "filename": "python_chronos-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1a3c23385766da7acbc072e3d6e3f98f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <4",
      "size": 8046,
      "upload_time": "2021-02-08T20:28:31",
      "upload_time_iso_8601": "2021-02-08T20:28:31.282410Z",
      "url": "https://files.pythonhosted.org/packages/00/c1/57dba9453ce0c4897de0c0f6bee5e6f5f7ba7427d0b04339d27ba0b32cee/python_chronos-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}