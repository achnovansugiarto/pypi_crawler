{
  "info": {
    "author": "Martin Howarth",
    "author_email": "howarth.martin@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "S3 Object Store\n-------\n\n![badge](https://github.com/MartinHowarth/s3os/workflows/Test/badge.svg)\n\nSimple pythonic wrapper to use s3 as a python object store.\n\nProvides simple object storage methods; and a Dict-like interface for more complicated uses.\n\nExamples\n--------\nBasic usage:\n\n    from s3os import store_simple, retrieve_simple, delete_simple\n    \n    my_object = [1, 2, 3]\n    \n    store_simple(\"my_key\", my_object)\n    \n    assert retrieve_simple(\"my_key\") == my_object\n    \n    delete_simple(\"my_key\")\n\nThe above example uses a global namespace in the bucket \"s3os\" - i.e. all the default settings of this package.\n\nYou can specify your own namespaces (i.e. buckets) as follows:\n\n    from s3os import store, retrieve, delete, ObjectLocation, Bucket\n    \n    my_bucket = Bucket(\"my_bucket\")\n    my_object_location = ObjectLocation(\"my_key\", bucket=my_bucket)\n    my_object = [1, 2, 3]\n    \n    store(my_object_location, my_object)\n    \n    assert retrieve(my_object_location) == my_object\n    \n    delete(my_object_location)\n\n\nOr simply use s3 like a normal python dictionary:\n\n    from s3os import S3Dict, S3DictConfig, Bucket\n    \n    my_bucket = Bucket(\"my_bucket\")\n    s3dict = S3Dict(_config=S3DictConfig(id=\"my_dict_id\", bucket=my_bucket))\n    \n    # Store information in s3\n    s3dict[\"apples\"] = 5\n    s3dict[\"bananas\"] = 2\n    \n    ...\n    \n    # Later, or in a different python executable, access the same dictionary again:\n    my_bucket = Bucket(\"my_bucket\")\n    s3dict = S3Dict(_config=S3DictConfig(id=\"my_dict_id\", bucket=my_bucket))\n    \n    print(s3dict[\"apples])  # 5\n    print(s3dict.get_all_from_s3())  # {\"apples\": 5, \"bananas\": 2}\n    \n\n\nBy default, `S3Dict` uses an internal cache to speed up item retrieval. \nSet and Delete operations are always performed synchronously.\n\n\nInstallation\n------------\nInstall the package:\n\n    pip install s3os\n\nSetup your AWS credentials. For example set these environment variables:\n\n    AWS_ACCESS_KEY_ID=...\n    AWS_SECRET_ACCESS_KEY=...\n    \nAlso see https://boto3.amazonaws.com/v1/documentation/api/latest/guide/configuration.html for more authentication options.\n\n> Note: `boto.client()` and `Session` authentication methods are not currently supported - raise an issue or submit a PR if you want them!\n\n\nDevelopment installation\n------------------------\nInstall poetry - see https://pypi.org/project/poetry/\n\nThe following command should be used to install the dependencies:\n\n    poetry install\n\n\nTesting\n-------\nThe following command should be used to run the tests:\n\n    poetry run pytest tests\n\nValid AWS authentication credentials are required to run some of the tests.\nSee setup instructions.\n\nThe tests make a very small number of calls to S3, so the cost of running the tests is negligible.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MartinHowarth/s3os",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "s3os",
    "package_url": "https://pypi.org/project/s3os/",
    "platform": "",
    "project_url": "https://pypi.org/project/s3os/",
    "project_urls": {
      "Homepage": "https://github.com/MartinHowarth/s3os",
      "Repository": "https://github.com/MartinHowarth/s3os"
    },
    "release_url": "https://pypi.org/project/s3os/1.0.0/",
    "requires_dist": [
      "toml (>=0.9,<0.10)",
      "boto3 (>=1.10.50,<2.0.0)",
      "ruamel.yaml (>=0.16.5,<0.17.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "S3 Object Store. Store and retrieve python objects in s3 simply..",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6436012,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb572c5bb2cf96f6f01ddd8212b8e8ff4d7c5cc47178f1375ce14ff3b34ece23",
          "md5": "4511fc18e66968ff35ce93d2cb9e9979",
          "sha256": "2f7499fb7d1c1d6a63a2e6468d9ef5ed6ee8e0ee9520317ed101e8d5339b4693"
        },
        "downloads": -1,
        "filename": "s3os-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4511fc18e66968ff35ce93d2cb9e9979",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 8370,
        "upload_time": "2020-01-11T14:03:01",
        "upload_time_iso_8601": "2020-01-11T14:03:01.587221Z",
        "url": "https://files.pythonhosted.org/packages/eb/57/2c5bb2cf96f6f01ddd8212b8e8ff4d7c5cc47178f1375ce14ff3b34ece23/s3os-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08ee3cbcab2599caf285fc62149173069cd7d95ae7d118c9c9ae3f8aa68f4c31",
          "md5": "dc7c48e07da8b04435458228fa1157ce",
          "sha256": "9970b1f9e5997b175daa59936b597cffcd4100026bfc4c670c64c041787f9a59"
        },
        "downloads": -1,
        "filename": "s3os-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dc7c48e07da8b04435458228fa1157ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 7725,
        "upload_time": "2020-01-11T14:03:03",
        "upload_time_iso_8601": "2020-01-11T14:03:03.818618Z",
        "url": "https://files.pythonhosted.org/packages/08/ee/3cbcab2599caf285fc62149173069cd7d95ae7d118c9c9ae3f8aa68f4c31/s3os-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eb572c5bb2cf96f6f01ddd8212b8e8ff4d7c5cc47178f1375ce14ff3b34ece23",
        "md5": "4511fc18e66968ff35ce93d2cb9e9979",
        "sha256": "2f7499fb7d1c1d6a63a2e6468d9ef5ed6ee8e0ee9520317ed101e8d5339b4693"
      },
      "downloads": -1,
      "filename": "s3os-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4511fc18e66968ff35ce93d2cb9e9979",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 8370,
      "upload_time": "2020-01-11T14:03:01",
      "upload_time_iso_8601": "2020-01-11T14:03:01.587221Z",
      "url": "https://files.pythonhosted.org/packages/eb/57/2c5bb2cf96f6f01ddd8212b8e8ff4d7c5cc47178f1375ce14ff3b34ece23/s3os-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "08ee3cbcab2599caf285fc62149173069cd7d95ae7d118c9c9ae3f8aa68f4c31",
        "md5": "dc7c48e07da8b04435458228fa1157ce",
        "sha256": "9970b1f9e5997b175daa59936b597cffcd4100026bfc4c670c64c041787f9a59"
      },
      "downloads": -1,
      "filename": "s3os-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "dc7c48e07da8b04435458228fa1157ce",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 7725,
      "upload_time": "2020-01-11T14:03:03",
      "upload_time_iso_8601": "2020-01-11T14:03:03.818618Z",
      "url": "https://files.pythonhosted.org/packages/08/ee/3cbcab2599caf285fc62149173069cd7d95ae7d118c9c9ae3f8aa68f4c31/s3os-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}