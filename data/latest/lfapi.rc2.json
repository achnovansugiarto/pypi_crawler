{
  "info": {
    "author": "Joseph Masom",
    "author_email": "joseph.masom@listenfirstmedia.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "\nLfApi: a Python SDK\n=====\n\nInstallation\n------------\n\nThe latest version of the library can be installed directly from PyPI:\n\n    pip install lfapi\n\nUsage\n-----\n\n### Getting Started\n\nThe `lfapi.Client` class is the main interface with the ListenFirst API:\n\n    from lfapi import Client\n\nIt requires at minimum an API key as well as a set of client credentials for\naccess token generation. Token generation is handled by the `lfapi.Auth` class:\n\n    from lfapi import Auth\n    auth = Auth(<CLIENT_ID>, <CLIENT_SECRET>)\n    token = auth.access_token\n\nThe `Client` class is instantiated with an API key and an instance of the\n`Auth` class:\n\n    client = Client(<API_KEY>, auth)\n\nAlternatively, all three credentials can be loaded directly to the `Client`\nclass from a JSON file:\n\n    client = Client.load(<JSON_FILE_NAME_OR_FILE_OBJECT>)\n\n    # The JSON file should follow this schema:\n    # {\n    #   \"api_key\": <api_key>,\n    #   \"client_id\": <client_id>\n    #   \"client_secret\": <client_secret>\n    # }\n\nThese credentials can be retrieved from [the platform's API settings page](\nhttps://app.listenfirstmedia.com/#api).\n\n### Accessing the API\n\nOnce instantiated, the `Client` object can be used to make customized HTTP\nrequests to various API endpoints. The lowest-level request mechanism is built\naround two methods, `secure_get()` and `secure_post()`. Each takes a positional\nendpoint argument, as well as a `params` argument as in the `requests` library.\n`secure_post()` additionally takes a `json` argument, again mirroring the\n`requests` library. Both return `requests.Response` objects upon successful\ncompletion:\n* `client.secure_get(endpoint, params=None)`  \n    Make a secure `GET` request to the ListenFirst API.\n\n* `client.secure_post(endpoint, json=None, params=None)`  \n    Make a secure `POST` request to the ListenFirst API.\n\nCommonly used endpoints have dedicated instance methods:\n* `client.fetch(json)`  \n    `POST` request to `/analytics/fetch` to perform a synchronous query.\n \n* `client.create_fetch_job(json)`  \n    `POST` request to `/analytics/fetch_job` to create an asynchronous query.\n\n* `client.show_fetch_job(job_id)`  \n    `GET` request to `/analytics/fetch_job/{id}` to view a summary of an\n    existing asynchronous query. \n  \n* `client.latest_fetch_job(params=None)`  \n    `GET` request to `/analytics/fetch_job/latest` to view a summary of the most\n    recent asynchronous query.\n\n* `client.list_fetch_jobs(params=None)`  \n    `GET` request to `/analytics/fetch_job` to view an abridged summary for all\n    asynchronous queries.\n \n* `client.create_schedule_config(json)`  \n    `POST` request to `/analytics/schedule_config` to create an schedule\n    configuration.\n \n* `client.show_schedule_config(schedule_config_id)`  \n    `GET` request to `/analytics/schedule_config/{id}` to view a summary of an\n    existing schedule configuration.\n \n* `client.list_schedule_configs(params=None)`  \n    `GET` request to `/analytics/schedule_config` to view an abridged summary\n    for all schedule configurations.\n \n* `client.get_brand(brand_id, params=None)`  \n    `GET` request to `/brand_views/{id}` to view a summary of a brand view.\n\n* `client.list_brands(params=None)`  \n    `GET` request to `/brand_views` to view a summary for all brand views.\n \n* `client.get_brand_set(brand_set_id)`  \n    `GET` request to `/brand_view_sets/{id}` to view a summary of a brand view\n    set.\n \n* `client.list_brand_sets(params=None)`  \n    `GET` request to `/brand_view_sets` to view a summary for all brand view\n    sets.\n \n* `client.get_dataset(dataset_id)`  \n    `GET` request to `/dictionary/datasets/{id}` to view a summary of a dataset.\n \n* `client.list_datasets()`  \n    `GET` request to `/dictionary/datasets` to view an abridged summary for all\n     datasets.\n \n* `client.get_field_values(params)`  \n    `GET` request to `/dictionary/field_values` to view a list of values for a\n    given field.\n\nWith the exception of `get_field_values()`, these methods wrap the API\nresponses in instances of `lfapi.Model` subclasses. These wrapper classes offer\nsome convenient extended functionality, such as JSON and CSV conversion.\n\nIn addition, the `Client` object implements a number of convenience methods\naround the `/analytics` endpoints for managing data queries:\n* `client.poll_fetch_job(job_id)`  \n    Pull fetch job summary until state is one of 'completed', 'failed'.\n\n* `client.sync_analytic_query(fetch_params, per_page=None, max_pages=inf)`  \n    Run multiple pages of synchronous analytic queries.\n\n* `client.async_analytic_query(fetch_params, client_context=None, max_rows=None, emails=None)`  \n    Construct and poll an async analytic query, and download page URLs upon\n    completion.\n\nFor code examples, see our [examples wiki](\nhttps://github.com/ListenFirstMedia/lf-api-examples/wiki/Using-the-ListenFirst-API-Python-SDK).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://pypi.org/project/lfapi",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ListenFirstMedia/lf-python-sdk",
    "keywords": "listenfirst api sdk",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lfapi",
    "package_url": "https://pypi.org/project/lfapi/",
    "platform": null,
    "project_url": "https://pypi.org/project/lfapi/",
    "project_urls": {
      "Download": "https://pypi.org/project/lfapi",
      "Homepage": "https://github.com/ListenFirstMedia/lf-python-sdk"
    },
    "release_url": "https://pypi.org/project/lfapi/0.9.1/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": ">=3.8, <4",
    "summary": "The Python library for the ListenFirst API",
    "version": "0.9.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17334921,
  "releases": {
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8006d6799f6f84ad750ea59a2d7b31d8cd192379d0be6a6d5ef6c73777210595",
          "md5": "ec84f4d7722fe4982a03fa3248883cb6",
          "sha256": "1be82302b4f31996a543505eeceaecd6956b7f835812f732ffd093e5c2516b5e"
        },
        "downloads": -1,
        "filename": "lfapi-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ec84f4d7722fe4982a03fa3248883cb6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8, <4",
        "size": 11919,
        "upload_time": "2023-03-13T17:38:03",
        "upload_time_iso_8601": "2023-03-13T17:38:03.961813Z",
        "url": "https://files.pythonhosted.org/packages/80/06/d6799f6f84ad750ea59a2d7b31d8cd192379d0be6a6d5ef6c73777210595/lfapi-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2850d2ab739d9e21bccb9bc9fe9a0afdb7d936cd1ba8f47a04669f552305b2d1",
          "md5": "cb3946c810538d88d9f25ac903777afd",
          "sha256": "d9f49e1088526807ef0ebf1fdca4de4f9f320223be9626fc00a214dc3e6ffb19"
        },
        "downloads": -1,
        "filename": "lfapi-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cb3946c810538d88d9f25ac903777afd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8, <4",
        "size": 13544,
        "upload_time": "2023-03-13T17:38:05",
        "upload_time_iso_8601": "2023-03-13T17:38:05.242681Z",
        "url": "https://files.pythonhosted.org/packages/28/50/d2ab739d9e21bccb9bc9fe9a0afdb7d936cd1ba8f47a04669f552305b2d1/lfapi-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ccac6c3ee37e0fcc2921c3095f4b1dd6678b3248599f6170eb57d1ab3bab2af",
          "md5": "193df1715a64012fd027193b93662f05",
          "sha256": "e7a1b178176d1dcb04665a002604f75565e748678b168b0cd5baf2ea4dca0dae"
        },
        "downloads": -1,
        "filename": "lfapi-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "193df1715a64012fd027193b93662f05",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8, <4",
        "size": 11973,
        "upload_time": "2023-03-17T13:23:25",
        "upload_time_iso_8601": "2023-03-17T13:23:25.412080Z",
        "url": "https://files.pythonhosted.org/packages/3c/ca/c6c3ee37e0fcc2921c3095f4b1dd6678b3248599f6170eb57d1ab3bab2af/lfapi-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2be6ef4f1609a423b11b3657400fdcb92c3362a59f564c296831d5f2d1da3c20",
          "md5": "f5430c024f676b1945e3ccd78bfe71e9",
          "sha256": "ee9f45e7b8d8925f0ae995c8dce0f6d4cdea00f0d939a5dfc17c028c91527ca8"
        },
        "downloads": -1,
        "filename": "lfapi-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f5430c024f676b1945e3ccd78bfe71e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8, <4",
        "size": 13568,
        "upload_time": "2023-03-17T13:23:27",
        "upload_time_iso_8601": "2023-03-17T13:23:27.012899Z",
        "url": "https://files.pythonhosted.org/packages/2b/e6/ef4f1609a423b11b3657400fdcb92c3362a59f564c296831d5f2d1da3c20/lfapi-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3ccac6c3ee37e0fcc2921c3095f4b1dd6678b3248599f6170eb57d1ab3bab2af",
        "md5": "193df1715a64012fd027193b93662f05",
        "sha256": "e7a1b178176d1dcb04665a002604f75565e748678b168b0cd5baf2ea4dca0dae"
      },
      "downloads": -1,
      "filename": "lfapi-0.9.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "193df1715a64012fd027193b93662f05",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8, <4",
      "size": 11973,
      "upload_time": "2023-03-17T13:23:25",
      "upload_time_iso_8601": "2023-03-17T13:23:25.412080Z",
      "url": "https://files.pythonhosted.org/packages/3c/ca/c6c3ee37e0fcc2921c3095f4b1dd6678b3248599f6170eb57d1ab3bab2af/lfapi-0.9.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2be6ef4f1609a423b11b3657400fdcb92c3362a59f564c296831d5f2d1da3c20",
        "md5": "f5430c024f676b1945e3ccd78bfe71e9",
        "sha256": "ee9f45e7b8d8925f0ae995c8dce0f6d4cdea00f0d939a5dfc17c028c91527ca8"
      },
      "downloads": -1,
      "filename": "lfapi-0.9.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f5430c024f676b1945e3ccd78bfe71e9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8, <4",
      "size": 13568,
      "upload_time": "2023-03-17T13:23:27",
      "upload_time_iso_8601": "2023-03-17T13:23:27.012899Z",
      "url": "https://files.pythonhosted.org/packages/2b/e6/ef4f1609a423b11b3657400fdcb92c3362a59f564c296831d5f2d1da3c20/lfapi-0.9.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}