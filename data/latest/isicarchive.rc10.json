{
  "info": {
    "author": "Jochen Weber",
    "author_email": "weberj3@mskcc.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# isic-archive (ISIC Archive access python module)\nThe [ISIC Archive](https://www.isic-archive.com/) is an online repository and\narchive published and maintained by the International Skin Imaging\nCollaboration. Next to the human-readable and browsable website, it also\nprovides a publicly available [API](https://isic-archive.com/api/v1), which\noffers several functions (called endpoints) for interacting with the data\nprogrammatically.\n\nThe present python package is an attempt at bundling some of the more\nfrequently used functionality into a set of modules, thus reducing the need to\nre-write certain code for a diverse set of projects.\n\n## First steps\nTo start interacting with the archive through its API, import the ```IsicApi```\nclass from the ```isicarchive.api``` module, and then create an instance of the\nclass:\n\n~~~~\nfrom isicarchive.api import IsicApi\napi = IsicApi()\n~~~~\n\nThe return object variable, ```api```, then allows you to query the web-based\nAPI through method calls, which will typically create further object variables\n(such as study or image objects).\n\n### Data availability\nAll general features are available without logging into the API. However, since\nmany images (as well as studies using those images) have not been marked as\nbeing \"publicly available\", the number of items returned by many functions\n(endpoints) differs based on whether you have (successfully) authenticated with\nthe API. If you do not plan to register a username, you can skip the next\nsection, and either set the ```username``` parameter to ```None``` or skip it\naltogether in the constructor call to ```IsicApi```.\n\n### Logging into the ISIC Archive\nYou can provide your username as the first parameter when creating the\n```IsicApi``` object, as well as an optional password parameter:\n\n~~~~\n# set username\nusername = 'address@provider.com'\n\n# create API object\napi = IsicApi(username)\n\n# or, if you can securely store a password as well\napi = IsicApi(username, password)\n~~~~\n\n**Please do *not* enter the password in clear text into your source code**. If\nyou provide only the username, the password will be requested from either the\nconsole or, if used in a Jupyter notebook, below the active cell using the\n```getpass``` library. You can also store the password in the ```.netrc``` file\n([see the GNU page](https://www.gnu.org/software/inetutils/manual/html_node/The-_002enetrc-file.html)\non the .netrc file format) in your user's home folder.\n\n### Local cache folder\nSince a lot of the data that can be retrieved from the archive (API) is\nstatic--that is, for instance images won't change between uses of the API--you\ncan keep a locally cached copy, which will speed up processing of data on\nthe next call you use the same image or annotation, for instance. To do so,\nplease add the ```cache_folder``` parameter to the call, like so:\n\n~~~~\n# For Linux/Mac\ncache_folder = '/some/local/folder'\n# For Windows\ncache_folder = 'C:\\\\Users\\\\username\\\\some\\\\local\\\\folder'\n\n# Create object (without username)\napi = IsicApi(cache_folder=cache_folder)\n# (or with username)\napi = IsicApi(username, cache_folder=cache_folder)\n# (or with username and password)\napi = IsicApi(username, password, cache_folder=cache_folder)\n~~~~\n\nRelatively large and complex data (annotations, images, etc.) will then have a\nstored local copy, which means that they can be retrieved later from the cache,\ninstead of having to request them again via the web-based API.\n\nWithin the cache folder the ```IsicApi``` object will, on first use, create a\ntwo-level hierarchy of 16 subfolders each, named ```0``` through ```9```, and\n```a``` through ```f``` (the 16 hexadecimal digits), to avoid downloading too\nmany files into a single folder, which would slow down the operation later on.\nFor each file, the sub-folder is determined by the last hexadecimal digits of\nthe unique object ID (explained below).\n\nImages are stored with a filename pattern of ```image_[objectId]_[name].ext```\nwhereas ```objectId``` is the unique ID for this image within the archive,\n```name``` is the filename (typically ```ISIC_xxxxxxx```), and ```.ext``` is\nthe extension as provided by the Content-Type header of the downloaded image.\n\nSuperpixel images (also explained below) are stored with the filename pattern\nof ```spimg_[objectId].png``` using the associated image's object ID!\n\n### Caching information about all images\nSince the archive contains several thousand images, it can often be helpful\nto be able to search for specific images. To do so locally, you can download\nthe details about all images available in the archive (works only if you've\ncreated the ```IsicApi``` object with the cache_folder parameter) like so:\n\n~~~~\n# Populate image cache\napi.cache_images()\n\n# display information about image ISIC_000000 (by its ID) from the cache\nimage_info = api.image_cache[api.images['ISIC_0000000']]\nprint(image_info)\n~~~~\n\nWhen called for the first time, building the cache may take several minutes.\nOnce the information is downloaded, however, only a single call will be made to\nthe web-based API to confirm that, indeed, no new images are available. **For\nthis to work, however, it is important that you do not use the same\ncache folder for sessions where you are either logged in (authenticated)\nversus not!** The cache file itself will be stored in the file named\n```[cache_folder]/0/0/imcache_000000000000000000000000.json.gz```.\n\nFinally, feature annotations associated with a specific study can be\ndownloaded in bulk and cached using this syntax:\n\n~~~~\n# Load annotation markup feature superpixel arrays\nstudy.load_annotations()\n~~~~\n\nThe resulting file will be stored in ```stann_[objectId].json.gz```, and not\nfor each annotation object separately, so that loading will be much faster.\n\n### Debugging of API calls\nSince it is sometimes helpful to understand which calls to the web-based API\nare made, you can provide a ```debug``` parameter (set to ```True```) to the\n```IsicApi(...)``` call:\n\n~~~~\napi = IsicApi(debug=True)\n# or, for instance\napi = IsicApi(username, password, cache_folder=cache_folder, debug=True)\n~~~~\n\nIf debug is set to true (which can also be enabled later in the session,\nby setting ```api._debug = True```), every HTTP GET request made to the\nISIC Archive will be printed out to the console, like this:\n\n~~~~\nRequesting (auth) https://isic-archive.com/api/v1/image/histogram\nRequesting (auth) https://isic-archive.com/api/v1/dataset with params: {'limit': 0, 'detail': 'true'}\nRequesting (auth) https://isic-archive.com/api/v1/study with params: {'limit': 0, 'detail': 'true'}\n~~~~\n\n## Some more details on the web-based API\nAny interaction with the web-based API is performed by the ```IsicApi```\nobject through the HTTPS protocol, using the appropriate\n[requests](https://2.python-requests.org/en/master/) package methods. As part\nof the requests made, the endpoint (function and type of element being\ninteracted with) is specified, and one or several parameters can be set,\nwhich are appended to the URL. For instance, retrieving information about\none specific image would be achieved by accessing the following URL:\n\n```https://isic-archive.com/api/v1/image/5436e3abbae478396759f0cf```\n\n### Object IDs and element representation\nThis last portion of the URL that appears after the ```image/``` part is\ncalled the (object) id, and is a system-wide unique value that identifies\neach element to ensure that one interacts only with the intended target. The\noutput of the URL above is (slightly truncated for brevity):\n\n~~~~\n{\n  \"_id\": \"5436e3abbae478396759f0cf\",\n  \"_modelType\": \"image\",\n  \"created\": \"2014-10-09T19:36:11.989000+00:00\",\n  \"creator\": {\n    \"_id\": \"5450e996bae47865794e4d0d\",\n    \"name\": \"User 6VSN\"\n  },\n  \"dataset\": {\n    \"_accessLevel\": 0,\n    \"_id\": \"5a2ecc5e1165975c945942a2\",\n    \"description\": \"Moles and melanomas.\",\n    \"license\": \"CC-0\",\n    \"name\": \"UDA-1\",\n    \"updated\": \"2014-11-10T02:39:56.492000+00:00\"\n  },\n  \"meta\": {\n    \"acquisition\": {\n      \"image_type\": \"dermoscopic\",\n      \"pixelsX\": 1022,\n      \"pixelsY\": 767\n    },\n    \"clinical\": {\n      \"age_approx\": 55,\n      \"anatom_site_general\": \"anterior torso\",\n      \"benign_malignant\": \"benign\",\n      \"diagnosis\": \"nevus\",\n      \"diagnosis_confirm_type\": null,\n      \"melanocytic\": true,\n      \"sex\": \"female\"\n    }\n  },\n  \"name\": \"ISIC_0000000\",\n  \"updated\": \"2015-02-23T02:48:17.495000+00:00\"\n}\n~~~~\n\nPretty much all elements available through the API are returned in the form of\ntheir [JSON](https://en.wikipedia.org/wiki/JSON) representation (notation) as\ntext. Lists of elements are returned as arrays. The exception are binary blobs\n(such as image data, superpixel image data, and mask images).\n\nWithin the ISIC archive (and thus for the API), the following elements are\nrecognized:\n\n- **datasets** (a series of images that were uploaded, typically at the same time, as a somewhat fixed set)\n- **studies** (selection of images, possibly from multiple datasets, together with questions and features to be annotated by users)\n- **images** (having both a JSON and several associated binary blob elements)\n- **segmentations** (also having a JSON and a binary mask image component)\n- **annotations** (responses to questions and image-based per-feature annotation as a selection of \"superpixels\")\n- **users** (information about each registered user)\n- **tasks** (information about tasks assigned to the logged in user)\n\nOf these, currently accessible via the ```IsicApi``` object are\n**dataset, study, image, segmentation, and annotation**, whereas users and\ntasks are not meaningfully implemented as separate objects at this time.\n\n### Image superpixels\nAs part of the image processing capabilities of the ISIC Archive itself, each\nimage that is uploaded will be automatically compartmentalized into about 1,000\npatches of roughly equal size. E.g. for an image with a 4-by-3 aspect ratio,\nthere would be roughly 36 times 27 superpixels. The superpixel information is\nstored in a specifically RGB-encoded image, such that for each superpixel the\npatch has a (for the computer uniquely represented) RGB color code:\n\n![ISIC_0000000 image superpixels](data/ISIC_0000000_superpixels_demo.png?raw=true \"Superpixel demonstration\")\n\nThe ```IsicApi.image.Image``` class contains functions to decode and map this\nimage first into an index array, and then into a mapping array:\n\n~~~~\nfrom isicarchive.api import IsicApi\n\n# load superpixel image for first image\napi = IsicApi()\nimage = api.image('ISIC_0000000')\nimage.load_superpixels()\nsuperpixel_index_image = image.superpixels['idx']\nimage.map_superpixels()\nsuperpixel_mapping = image.superpixels['map']\n~~~~\n\nThis mapping array can be used to rapidly access (e.g. extract or paint over)\nthe pixels in the actual color image of a skin lesion:\n\n~~~~\n# paint over superpixel with index 472 in an image with red (RGB=(255,0,0))\nimage = api.image('ISIC_0000000')\nimage.load_image_data()\nimage.load_superpixels()\nimage.map_superpixels()\nimage_data = image.data\nimage_shape = image_data.shape\nimage_data.shape = (image_shape[0] * image_shape[1], -1)\nmap = image.superpixels['map']\nsuperpixel_index = 472\npixel_count = map[superpixel_index, -1]\nsuperpixel_pixels = map[superpixel_index, 0:pixel_count]\nimage_data[superpixel_pixels, 0] = 255\nimage_data[superpixel_pixels, 1] = 0\nimage_data[superpixel_pixels, 2] = 0\nimage_data.shape = image_shape\n\n# show image\nimport matplotlib.pyplot as plt\n%matplotlib inline\nplt.imshow(image_data)\nplt.show()\n~~~~\n\n### Retrieving information about a study\nThe syntax below will make a call to the web-based API, and retrieve the\ninformation about the study named in the first parameter. If the study is not\nfound, an exception is raised! Other than the web-based API (which does not\nsupport study names), you do not have to look up the object ID manually first.\nThe returned value, ```study```, is an object of type\n```isicarchive.study.Study```, which provides some additional methods.\n\n~~~~\n# Retrieve study object\nstudy = api.study('ISBI 2016: 100 Lesion Classification')\n\n# Download all accessible images and superpixel images for this study\nstudy.cache_image_data()\n~~~~\n\nIn addition to the information regularly provided by the ISIC Archive API,\nthe IsicApi object's implementation can also used to mass-download\ninformation about all annotations.\n\n~~~~\n# Print study features\nstudy.load_annotations()\nprint(study.features)\n~~~~\n\n### Retrieving information about a dataset\n~~~~\ndataset = api.dataset(dataset_name)\n~~~~\n\nSimilarly to a study, this will create an object of type\n```isicarchive.dataset.Dataset```, which allows additional methods to be\ncalled.\n\nIn addition to the information regularly provided by the ISIC Archive API,\nthe IsicApi object's implementation will also attempt to already download\ninformation about the access list, metadata, and images up for review.\n\n### Retrieving images\n~~~~\n# Load the first image of a loaded study\nimage = api.image(study.images[0])\n~~~~\n\nThis will, initially, only load the information about the image. If you would\nlike to make the binary data available, please use the following methods:\n\n~~~~\n# Load image data\nimage.load_image_data()\n\n# Load superpixel image data\nimage.load_superpixels()\n\n# Parse superpixels into a mapping-to-pixel-indices array\nimage.map_superpixels()\n\n# Load the associated (highest-quality) segmentation\nsegmentation = image.load_segmentation()\n~~~~\n\nThe mapping of an image's superpixel RGB image takes a few hundred\nmilliseconds, but storing the map in a different format would be relatively\nwasteful, and so this seems preferable.\n\n### Selecting images\nOnce all image information has been cached, the ```IsicApi``` object allows to\nselect images based on the contents of any subfield in the image details (JSON)\nrepresentation:\n\n~~~~\n# Make initial selection\nselection = api.select_images([\n    ['meta.acquisition.pixelsX', '>=', 2048],\n    ['meta.acquisition.image_type', '==', 'dermoscopic'],\n    ['meta.clinical.diagnosis', '!=', 'nevus'],\n])\n\n# refine selection (you can inspect the results after each step)\nselection = api.select_images(['dataset._accessLevel', '==', 0], sub_select=True)\nselection = api.select_images(['notes.tags', 'ni', 'ISBI 2017: Training'], sub_select=True)\nselection = api.select_images(['meta.unstructured.biopsy done', '==', 'Y'], sub_select=True)\nselection = api.select_images(['meta.clinical.melanocytic', 'is', True], sub_select=True)\n~~~~\n\nThe selection will both be returned, and also stored in the\n```api.image_selection``` field. So, in a Jupyter notebook, please assign the\nresult to a variable if it is the last statement in a cell and you wish not\nto print the output!\n\n## Memory requirements\nAt this time, by default all objects that are being created are **also** stored\nin the ```api``` object's internal attributes, such that an image or study that\nhas been made into an object no longer requires a second API call later on.\nThis also means that data that is loaded into an object (especially image\ndata into an image, segmentation, or annotation object) will remain in memory,\nunless it is expressly removed (cleared). This can be done by calling the\n```object.clear_data()``` method. Depending on the object type, additional flags\ncan be provided. The default is to clear all binary (large) data, but keep\nobject references (e.g. between images and datasets, etc.) intact.\n\nMost data will be cleared by calling this method without any further parameters\non the ```api``` object itself:\n\n~~~~\napi.clear_data()\n~~~~\n\n## Housekeeping\nThis section contains information about the package.\n\n### Author information\n```isicarchive``` is being developed by Jochen Weber, who works at Memorial\nSloan Kettering Cancer Center in New York City. He is supported by Nick\nKurtansky and Dr. Konstantinos Liopyris (both MSKCC as well) and collaborates\nclosely with Brian Helba and Dan LaManna (both with\n[Kitware](https://www.kitware.com)), who work on the web-based API. Additional\nsupport and code is being provided by\n[Prof. David Gutman, MD, PhD](https://winshipcancer.emory.edu/bios/faculty/gutman-david.html).\n\n### History\n- 10/3/2019\n  - fixed Jupyter notebook progress bar widget\n- 9/30/2019\n  - added image cropping function\n- 9/26/2019\n  - added code to extract information from border pixels\n- 9/23/2019\n  - added reedsolo module for encoding data into border pixels\n- 9/16/2019\n  - created method to generate heatmaps across all study images (homogeneous options)\n- 9/12/2019\n  - study.image_heatmaps(...) now adds legends and exemplar feature to montage\n  - all features now carry a valid synonyms list (with self as sole entry, if necessary)\n- 9/11/2019\n  - changed cache to two-level strategy, which allows all ISIC images to be stored\n- 9/10/2019\n  - preparation for extended heatmaps (montage of original and heatmaps)\n- 9/9/2019\n  - more work on CSV support, extracting data from read CSV files\n- 9/6/2019\n  - initial support for CSV input and output\n- 9/5/2019\n  - added meta data collection and extraction methods for image and study\n  - rewrote Sampler class to be more succinct (and JIT compatible)\n- 9/4/2019\n  - added ```font.py``` (Font class) and code to add correctly set text to images (in ```IsicApi```)\n- 9/3/2019\n  - added ```study.image_heatmap``` to color annotations on (photographic) image\n- 9/2/2019\n  - implemented Dice and pixel-wise cross-correlation (for annotation overlap)\n- 8/30/2019\n  - added more functions for image coloring\n- 8/29/2019\n  - added features.py (list of known features) for later selection (and colors)\n  - added status codes and other features to ```__main__``` (```python -m ...```)\n  - refactored all ```.get``` calls to ```api.get``` (other than authentication)\n  - refactored all image-related function into ```imfunc.py``` module (faster import of ```func```)\n  - refactored major external package imports (imageio, numba, numpy) to be processed late\n- 8/28/2019\n  - added ```.netrc``` support (storing a password for ```python -m ...``` mode)\n  - added minimal command line (```__main__.py``` for ```python -m ...```) syntax\n  - preparing for version 0.4.8 to be released\n  - implemented the ```clear_data(...)``` methods for all objects\n  - added David's superpixel contour JSON output format\n  - implemented a \"superpixel in segmentation mask\" method\n  - fixed a bug that would not use the ```auth_token``` when accessing segmentations\n- 8/27/2019\n  - first working version of superpixel outline SVG paths\n- 8/26/2019\n  - removed func import in ```__init__.py```\n  - moved two functions from ```func.py``` to ```jitfunc.py``` (smaller modules)\n  - worked on converting superpixel map to SVG paths\n- 8/22/2019\n  - began work on segmentations-related code\n  - updated ```image.Image.show_in_notebook``` to use ```func.display_image```\n  - added some more documentation\n  - improved ```func.getxattr``` by adding ```-index``` and ```name=val``` syntax\n  - moved ```cache_filename``` from ```func``` module to ```api.IsicApi``` class\n- 8/21/2019\n  - added infrastructure for conda-forge (thanks to [Marius van Niekerk](https://www.linkedin.com/in/mariusvniekerk/))\n  - began refactoring test code (with unit testing)\n  - added ```api.select_images(...)``` to select images from the entire archive\n  - added ```func.selected(...)``` and ```func.select_from(...)``` for selection logic\n  - improved ```func``` module with better Typing hints (and general cleanup)\n  - added ```func.write_image(...)``` to write out images, including into a buffer\n  - moved code from ```Annotation.show_in_notebook(...)``` to ```func.color_superpixels(...)```\n- 8/20/2019\n  - added ```func.print_progress(...)``` function (text-based progress bar)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/neuroelf/isicarchive",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "isicarchive",
    "package_url": "https://pypi.org/project/isicarchive/",
    "platform": "",
    "project_url": "https://pypi.org/project/isicarchive/",
    "project_urls": {
      "Homepage": "https://github.com/neuroelf/isicarchive"
    },
    "release_url": "https://pypi.org/project/isicarchive/0.4.11/",
    "requires_dist": [
      "imageio (>=2.5.0)",
      "ipython (>=7.1.0)",
      "ipywidgets (>=7.1.0)",
      "matplotlib (>=3.1.0)",
      "numba (>=0.45.1)",
      "numpy (>=1.16.2)",
      "scipy (>=1.3.1)",
      "requests (>=2.22.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "ISIC Archive API",
    "version": "0.4.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8589485,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdad7d92722e7ccbc1ae25c6d5513d91c02c9100a483253e14afb56ff3bc187f",
          "md5": "f91377a817656417b97e43b284d6356e",
          "sha256": "0d3ae28586e06f409562e08ccec81c1e7c64c9d2a2fa939151018a2539c937d1"
        },
        "downloads": -1,
        "filename": "isicarchive-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f91377a817656417b97e43b284d6356e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19471,
        "upload_time": "2019-08-15T00:55:15",
        "upload_time_iso_8601": "2019-08-15T00:55:15.970822Z",
        "url": "https://files.pythonhosted.org/packages/fd/ad/7d92722e7ccbc1ae25c6d5513d91c02c9100a483253e14afb56ff3bc187f/isicarchive-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d43b9f32bf6d12213aff65d94d73ed4a05fd94b9b82e082b1763fd6b3da8c1ec",
          "md5": "0f96875fc6b3ce9d96ed8ca1e8f1e2b6",
          "sha256": "faa4633394e4bb35ba1a90585dd415fa87f8f8999de75154844f20a88b3d7328"
        },
        "downloads": -1,
        "filename": "isicarchive-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0f96875fc6b3ce9d96ed8ca1e8f1e2b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15561,
        "upload_time": "2019-08-15T00:55:17",
        "upload_time_iso_8601": "2019-08-15T00:55:17.819151Z",
        "url": "https://files.pythonhosted.org/packages/d4/3b/9f32bf6d12213aff65d94d73ed4a05fd94b9b82e082b1763fd6b3da8c1ec/isicarchive-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c6cc44879726edcfe291eb58a1063a776c4e3740a63506a98576109a2ebc20d",
          "md5": "7966b818e0b83a5d7ecda0fde1811523",
          "sha256": "75cff97af6a427826b667f4e6f743e4d16ed7c27bf671288e8bf6c4dc4a6b714"
        },
        "downloads": -1,
        "filename": "isicarchive-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7966b818e0b83a5d7ecda0fde1811523",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23101,
        "upload_time": "2019-08-15T18:54:48",
        "upload_time_iso_8601": "2019-08-15T18:54:48.053709Z",
        "url": "https://files.pythonhosted.org/packages/5c/6c/c44879726edcfe291eb58a1063a776c4e3740a63506a98576109a2ebc20d/isicarchive-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87c5da39e302f4ac4542d0817ab35ebe2f23badb5346e6fe044e994723aad171",
          "md5": "688abf8c1613a18b906564ba2779ff0f",
          "sha256": "715c26ba7f81c61b9f542ccd2c3c7f604907bbf1f2018b0218434da27cd05d7a"
        },
        "downloads": -1,
        "filename": "isicarchive-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "688abf8c1613a18b906564ba2779ff0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18579,
        "upload_time": "2019-08-15T18:54:49",
        "upload_time_iso_8601": "2019-08-15T18:54:49.178668Z",
        "url": "https://files.pythonhosted.org/packages/87/c5/da39e302f4ac4542d0817ab35ebe2f23badb5346e6fe044e994723aad171/isicarchive-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4264cbf4242271885f109682d206d3e0828b71c906c85a53a3b9966bc62b93be",
          "md5": "5b24b989eead2a6d3b916e8aba11aa5d",
          "sha256": "e39f016934a78b887cc4975c642c367c7a3a6b11ef329ca07dc5ca9b303d4ec3"
        },
        "downloads": -1,
        "filename": "isicarchive-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5b24b989eead2a6d3b916e8aba11aa5d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23355,
        "upload_time": "2019-08-17T22:26:06",
        "upload_time_iso_8601": "2019-08-17T22:26:06.416570Z",
        "url": "https://files.pythonhosted.org/packages/42/64/cbf4242271885f109682d206d3e0828b71c906c85a53a3b9966bc62b93be/isicarchive-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3efc840f309e01fd72808dac200abd67f376aa49b0ccb73c4a5b1fe7d1e8fa17",
          "md5": "74b98c273aac993cf5e35eedf7fb92e0",
          "sha256": "8565676b50534ce0f56375118b103524178c5a506feb0646b8bdf18696901def"
        },
        "downloads": -1,
        "filename": "isicarchive-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "74b98c273aac993cf5e35eedf7fb92e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18543,
        "upload_time": "2019-08-17T22:26:07",
        "upload_time_iso_8601": "2019-08-17T22:26:07.877739Z",
        "url": "https://files.pythonhosted.org/packages/3e/fc/840f309e01fd72808dac200abd67f376aa49b0ccb73c4a5b1fe7d1e8fa17/isicarchive-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c438e02d355cb3796b811ad0319c5f916622f2382b1081ac2983b9ecd404259",
          "md5": "00838241b6df94916ebd88cd4da36b66",
          "sha256": "cc1b4a0ad927d32e8632fcb74bbc4320e6725f79deb6cfef552e8fcc71590e32"
        },
        "downloads": -1,
        "filename": "isicarchive-0.3.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "00838241b6df94916ebd88cd4da36b66",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25969,
        "upload_time": "2019-08-18T23:26:53",
        "upload_time_iso_8601": "2019-08-18T23:26:53.387065Z",
        "url": "https://files.pythonhosted.org/packages/8c/43/8e02d355cb3796b811ad0319c5f916622f2382b1081ac2983b9ecd404259/isicarchive-0.3.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cd609218947eb438c6079d7030987963e914aa61e4f5063129483a713454a1a",
          "md5": "26b2cf4cc86856c6781926ce7c31d287",
          "sha256": "6b1faa66a3b2721ebcbbe2ccae18573a6129e58151b0ee85a6d330e868a27c5d"
        },
        "downloads": -1,
        "filename": "isicarchive-0.3.5.tar.gz",
        "has_sig": false,
        "md5_digest": "26b2cf4cc86856c6781926ce7c31d287",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20942,
        "upload_time": "2019-08-18T23:26:55",
        "upload_time_iso_8601": "2019-08-18T23:26:55.005756Z",
        "url": "https://files.pythonhosted.org/packages/1c/d6/09218947eb438c6079d7030987963e914aa61e4f5063129483a713454a1a/isicarchive-0.3.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3f59c9f84fd8bdef0cf61bd95f139fbe5b61473d5033dab2cd2219a299c656c",
          "md5": "0df84c62e5f654c461fc2f86356a3f61",
          "sha256": "b99685bc7e574e03733dfefd4293b722156806f2f07830a73d7e6e7fc0b03b7a"
        },
        "downloads": -1,
        "filename": "isicarchive-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0df84c62e5f654c461fc2f86356a3f61",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 28609,
        "upload_time": "2019-08-19T21:52:55",
        "upload_time_iso_8601": "2019-08-19T21:52:55.492862Z",
        "url": "https://files.pythonhosted.org/packages/a3/f5/9c9f84fd8bdef0cf61bd95f139fbe5b61473d5033dab2cd2219a299c656c/isicarchive-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fead4eeef33dd77740d9bbf347c315e180465f5c54b26bb49b40ef103f2687d7",
          "md5": "a71f21e0ee7168d6d80835106e2cda3d",
          "sha256": "fd66a2b8abc3cecb0b580e5e06d0f76416ca4221cd58b81e5528cef8eb5bc643"
        },
        "downloads": -1,
        "filename": "isicarchive-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a71f21e0ee7168d6d80835106e2cda3d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23908,
        "upload_time": "2019-08-19T21:52:56",
        "upload_time_iso_8601": "2019-08-19T21:52:56.603010Z",
        "url": "https://files.pythonhosted.org/packages/fe/ad/4eeef33dd77740d9bbf347c315e180465f5c54b26bb49b40ef103f2687d7/isicarchive-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbbaf5e3752c4162986ea432bf0c58711181045a0d41f57a4cf67f93f89ea0a8",
          "md5": "ae2ecfe8ff5862666243f4db35499c95",
          "sha256": "f2eba70fac3f57cde5fcdb553a12632da43306f716831b85e99681251414845a"
        },
        "downloads": -1,
        "filename": "isicarchive-0.4.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ae2ecfe8ff5862666243f4db35499c95",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 195580,
        "upload_time": "2020-11-05T15:07:12",
        "upload_time_iso_8601": "2020-11-05T15:07:12.862066Z",
        "url": "https://files.pythonhosted.org/packages/cb/ba/f5e3752c4162986ea432bf0c58711181045a0d41f57a4cf67f93f89ea0a8/isicarchive-0.4.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2de1efc7ab484ae68da4a4c6e68e3710b871806851adedbb88a25885bce50ab5",
          "md5": "393844bfc8044437c0787c1695930554",
          "sha256": "b6678d4cf0db646a1081088a649f6d81763ab0ce5776287f6da459f841492cf0"
        },
        "downloads": -1,
        "filename": "isicarchive-0.4.10.tar.gz",
        "has_sig": false,
        "md5_digest": "393844bfc8044437c0787c1695930554",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 197457,
        "upload_time": "2020-11-05T15:07:14",
        "upload_time_iso_8601": "2020-11-05T15:07:14.214594Z",
        "url": "https://files.pythonhosted.org/packages/2d/e1/efc7ab484ae68da4a4c6e68e3710b871806851adedbb88a25885bce50ab5/isicarchive-0.4.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0163cecba0233e0f7695fe6ad4f46727b4b578fc810a78ca5ff080613e4b4c39",
          "md5": "7d0656dd66f2144bb23925256c3436d5",
          "sha256": "379f59ad41a5bba843f6fa5c753340ab5ec8fd18c9d7845192a0f8793d70e8f7"
        },
        "downloads": -1,
        "filename": "isicarchive-0.4.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d0656dd66f2144bb23925256c3436d5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 196334,
        "upload_time": "2020-11-05T17:33:42",
        "upload_time_iso_8601": "2020-11-05T17:33:42.982875Z",
        "url": "https://files.pythonhosted.org/packages/01/63/cecba0233e0f7695fe6ad4f46727b4b578fc810a78ca5ff080613e4b4c39/isicarchive-0.4.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff416b631bd0ff78bac7fdbe356cb0773412b310680126bd63196f13178ee539",
          "md5": "e05865e558420c197412a13891aa3b8a",
          "sha256": "75096b5691aad2da18ea7295ac65db2c44acefd2d4021e8a56275c5e6181e269"
        },
        "downloads": -1,
        "filename": "isicarchive-0.4.11.tar.gz",
        "has_sig": false,
        "md5_digest": "e05865e558420c197412a13891aa3b8a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 198276,
        "upload_time": "2020-11-05T17:33:44",
        "upload_time_iso_8601": "2020-11-05T17:33:44.489890Z",
        "url": "https://files.pythonhosted.org/packages/ff/41/6b631bd0ff78bac7fdbe356cb0773412b310680126bd63196f13178ee539/isicarchive-0.4.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2102f178cf84227ad60d5931543d3f7ba0376e66309d99b92b9aeff88669f1b",
          "md5": "73d53d8d06b18057fb9736412f0863a2",
          "sha256": "1400d04421616b853fcaa69c3bc8e7e23e3ade30b0280da320be4c7ca305128e"
        },
        "downloads": -1,
        "filename": "isicarchive-0.4.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73d53d8d06b18057fb9736412f0863a2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 41201,
        "upload_time": "2019-08-21T23:57:17",
        "upload_time_iso_8601": "2019-08-21T23:57:17.661258Z",
        "url": "https://files.pythonhosted.org/packages/f2/10/2f178cf84227ad60d5931543d3f7ba0376e66309d99b92b9aeff88669f1b/isicarchive-0.4.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f6375b058e5cf5eb8e7617ae45d801cd0b5ec141c2c5558c86daeb70bd21e3f",
          "md5": "6b9f6ad07005cca012ee9cad0b18ba78",
          "sha256": "5793aa0a0c913159b4d20848059488793ac3dc13d92f82222948df5eca04fb37"
        },
        "downloads": -1,
        "filename": "isicarchive-0.4.6.tar.gz",
        "has_sig": false,
        "md5_digest": "6b9f6ad07005cca012ee9cad0b18ba78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 42263,
        "upload_time": "2019-08-21T23:57:19",
        "upload_time_iso_8601": "2019-08-21T23:57:19.634408Z",
        "url": "https://files.pythonhosted.org/packages/7f/63/75b058e5cf5eb8e7617ae45d801cd0b5ec141c2c5558c86daeb70bd21e3f/isicarchive-0.4.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6540b750285d8460ee3ef31e565def94ef33c2092475935616a7dc5e990457c5",
          "md5": "e3e543f1ad0c8c5e917bbce4994019ef",
          "sha256": "e4fb2e28212dfc94860ab1ba209e06998c81b9c2ff1feb0682b75c0c303e69e8"
        },
        "downloads": -1,
        "filename": "isicarchive-0.4.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e3e543f1ad0c8c5e917bbce4994019ef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 41393,
        "upload_time": "2019-08-22T00:07:06",
        "upload_time_iso_8601": "2019-08-22T00:07:06.418978Z",
        "url": "https://files.pythonhosted.org/packages/65/40/b750285d8460ee3ef31e565def94ef33c2092475935616a7dc5e990457c5/isicarchive-0.4.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1aa3ab9b5d1739d9919b7ea5c0d7a483a4c2f7687531afe8305d71ea42e8285a",
          "md5": "9ef1aeea1ff8ac746d181f1a0202de6e",
          "sha256": "4bd7a16cef229ea9c01cfafae9888bc309ba36b58e0c158c146f2a9c2fe9bde6"
        },
        "downloads": -1,
        "filename": "isicarchive-0.4.7.tar.gz",
        "has_sig": false,
        "md5_digest": "9ef1aeea1ff8ac746d181f1a0202de6e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 42355,
        "upload_time": "2019-08-22T00:07:08",
        "upload_time_iso_8601": "2019-08-22T00:07:08.215419Z",
        "url": "https://files.pythonhosted.org/packages/1a/a3/ab9b5d1739d9919b7ea5c0d7a483a4c2f7687531afe8305d71ea42e8285a/isicarchive-0.4.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c2e969a193bb43c54eb09133c5da39a6811991387f6389c254d7fcb50d96ce5",
          "md5": "5455c0c90c8015f65a605b3d7764d4c5",
          "sha256": "de3a47eded0e1a99cf8c62a2c591debbe58cfe54f0c4a2003d4b3a4fa1469707"
        },
        "downloads": -1,
        "filename": "isicarchive-0.4.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5455c0c90c8015f65a605b3d7764d4c5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 195566,
        "upload_time": "2020-11-05T14:40:59",
        "upload_time_iso_8601": "2020-11-05T14:40:59.009819Z",
        "url": "https://files.pythonhosted.org/packages/6c/2e/969a193bb43c54eb09133c5da39a6811991387f6389c254d7fcb50d96ce5/isicarchive-0.4.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63757cd399493019e7cf38f50b471953e25788c2fde90d469ada17697820407a",
          "md5": "da0a3451cda922acd100df0e993066ad",
          "sha256": "ebd51d0bd06b218e3d7d9bd116e6db17344cec671ba10937f90b797ac57a3968"
        },
        "downloads": -1,
        "filename": "isicarchive-0.4.9.tar.gz",
        "has_sig": false,
        "md5_digest": "da0a3451cda922acd100df0e993066ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 197459,
        "upload_time": "2020-11-05T14:41:00",
        "upload_time_iso_8601": "2020-11-05T14:41:00.280775Z",
        "url": "https://files.pythonhosted.org/packages/63/75/7cd399493019e7cf38f50b471953e25788c2fde90d469ada17697820407a/isicarchive-0.4.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0163cecba0233e0f7695fe6ad4f46727b4b578fc810a78ca5ff080613e4b4c39",
        "md5": "7d0656dd66f2144bb23925256c3436d5",
        "sha256": "379f59ad41a5bba843f6fa5c753340ab5ec8fd18c9d7845192a0f8793d70e8f7"
      },
      "downloads": -1,
      "filename": "isicarchive-0.4.11-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7d0656dd66f2144bb23925256c3436d5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 196334,
      "upload_time": "2020-11-05T17:33:42",
      "upload_time_iso_8601": "2020-11-05T17:33:42.982875Z",
      "url": "https://files.pythonhosted.org/packages/01/63/cecba0233e0f7695fe6ad4f46727b4b578fc810a78ca5ff080613e4b4c39/isicarchive-0.4.11-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff416b631bd0ff78bac7fdbe356cb0773412b310680126bd63196f13178ee539",
        "md5": "e05865e558420c197412a13891aa3b8a",
        "sha256": "75096b5691aad2da18ea7295ac65db2c44acefd2d4021e8a56275c5e6181e269"
      },
      "downloads": -1,
      "filename": "isicarchive-0.4.11.tar.gz",
      "has_sig": false,
      "md5_digest": "e05865e558420c197412a13891aa3b8a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 198276,
      "upload_time": "2020-11-05T17:33:44",
      "upload_time_iso_8601": "2020-11-05T17:33:44.489890Z",
      "url": "https://files.pythonhosted.org/packages/ff/41/6b631bd0ff78bac7fdbe356cb0773412b310680126bd63196f13178ee539/isicarchive-0.4.11.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}