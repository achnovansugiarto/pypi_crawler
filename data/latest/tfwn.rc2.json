{
  "info": {
    "author": "Shkarupa Alex",
    "author_email": "shkarupa.alex@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# tfwn\n\n[Weight Normalization](https://arxiv.org/abs/1602.07868) layer wrapper for TensorFlow-Keras API.\n\nInspired by [Sean Morgan](https://github.com/tensorflow/tensorflow/pull/21276) implementation, but:\n- No data initialization (only eager mode was implemented in original pull request).\n- Code refactoring\n- More tests\n- CIFAR10 example from original paper reimplemented\n\n## Examples\nUnfortunately I couldn't reproduce parer results on CIFAR10 with batch size 100.\nAs you can see there is no much difference in accuracy.\n\n<img src=\"https://github.com/shkarupa-alex/tfwn/raw/master/examples/cifar10_accuracy_100.png\">\n<img src=\"https://github.com/shkarupa-alex/tfwn/raw/master/examples/cifar10_loss_100.png\">\n\n\nBut with much smaller batch size model with weight normalization is much better then regular one.\n\n<img src=\"https://github.com/shkarupa-alex/tfwn/raw/master/examples/cifar10_accuracy_16.png\">\n<img src=\"https://github.com/shkarupa-alex/tfwn/raw/master/examples/cifar10_loss_16.png\">\n\n\n## How to use\n```python\nimport tensorflow as tf\nfrom tfwn import WeightNorm\n\n\ndense_wn = WeightNorm(tf.keras.layers.Dense(3))\nout = dense_wn(input)\n```\n\n\n## References\n### Weight Normalization: A Simple Reparameterization to Accelerate Training of Deep Neural Networks\nTim Salimans, and Diederik P. Kingma.\n\n```\n@inproceedings{Salimans2016WeightNorm,\n  title={Weight Normalization: A Simple Reparameterization to Accelerate Training of Deep Neural Networks},\n  author={Tim Salimans and Diederik P. Kingma},\n  booktitle={Neural Information Processing Systems 2016},\n  year={2016}\n}\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shkarupa-alex/tfwn",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tfwn",
    "package_url": "https://pypi.org/project/tfwn/",
    "platform": "",
    "project_url": "https://pypi.org/project/tfwn/",
    "project_urls": {
      "Homepage": "https://github.com/shkarupa-alex/tfwn"
    },
    "release_url": "https://pypi.org/project/tfwn/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Weight normalization layer for TensorFlow",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4818822,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3816b77093c6772feb919c12c34df00611df776c8da1123c213ce1885f4e7df7",
          "md5": "b7d6b054facd6ad5489ac45f93dce87a",
          "sha256": "ca5fdead2f4098605f08a93b457c636d30403a6019c70f42e8b16420cfcbfc3e"
        },
        "downloads": -1,
        "filename": "tfwn-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b7d6b054facd6ad5489ac45f93dce87a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5023,
        "upload_time": "2019-02-14T05:09:09",
        "upload_time_iso_8601": "2019-02-14T05:09:09.459720Z",
        "url": "https://files.pythonhosted.org/packages/38/16/b77093c6772feb919c12c34df00611df776c8da1123c213ce1885f4e7df7/tfwn-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd5b98ac0c3b972f2550c5ce50c320ad65b14d70c38b5ec75f14bb504070ca0c",
          "md5": "e6f4c8dc45948c0fc8d2dc9109f8a4cb",
          "sha256": "4572f44092a7ab4a2a2c452f57b5090de626d500d879b3e4c7cfbdaf5c13e0a5"
        },
        "downloads": -1,
        "filename": "tfwn-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e6f4c8dc45948c0fc8d2dc9109f8a4cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5009,
        "upload_time": "2019-02-14T05:15:07",
        "upload_time_iso_8601": "2019-02-14T05:15:07.293281Z",
        "url": "https://files.pythonhosted.org/packages/bd/5b/98ac0c3b972f2550c5ce50c320ad65b14d70c38b5ec75f14bb504070ca0c/tfwn-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd5b98ac0c3b972f2550c5ce50c320ad65b14d70c38b5ec75f14bb504070ca0c",
        "md5": "e6f4c8dc45948c0fc8d2dc9109f8a4cb",
        "sha256": "4572f44092a7ab4a2a2c452f57b5090de626d500d879b3e4c7cfbdaf5c13e0a5"
      },
      "downloads": -1,
      "filename": "tfwn-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e6f4c8dc45948c0fc8d2dc9109f8a4cb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5009,
      "upload_time": "2019-02-14T05:15:07",
      "upload_time_iso_8601": "2019-02-14T05:15:07.293281Z",
      "url": "https://files.pythonhosted.org/packages/bd/5b/98ac0c3b972f2550c5ce50c320ad65b14d70c38b5ec75f14bb504070ca0c/tfwn-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}