{
  "info": {
    "author": "shobrook",
    "author_email": "shobrookj@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# outgraph\n\n`outgraph` is a simple outlier detection algorithm for graph datasets. Given a list of graphs, it uses [Mahalanobis distance](https://en.wikipedia.org/wiki/Mahalanobis_distance) detect which graphs are outliers based on either their topology or node attributes.\n\n> Note: `outgraph` only works for datasets where each graph has an equal number of nodes.\n\n## Installation\n\nYou can install `outgraph` with `pip`:\n\n```bash\n$ pip install outgraph\n```\n\n## How it Works\n\nUnlike most approaches to graph outlier detection, `outgraph` does not use machine learning. Instead, each graph is converted into a vector representation using one of three available methods:\n\n1. Averaging the node feature/attribute vectors\n2. Flattening the adjacency matrix\n3. A concatenation of 1 and 2\n\nThen, the [Mahalanobis distance](https://en.wikipedia.org/wiki/Mahalanobis_distance) between each vector and the distribution of vectors is calculated. Lastly, a [Chi-Squared distribution](https://en.wikipedia.org/wiki/Chi-squared_distribution) is used to model the distribution of distances and identify the distances outside a cutoff threshold (e.g. p < 0.05).\n\nThis approach is based off [this article.](https://towardsdatascience.com/multivariate-outlier-detection-in-python-e946cfc843b3)\n\n## Usage\n\nEach graph in your dataset needs to be an instance of `outgraph.Graph`. This object has two parameters, `node_attrs` and `adjacency_matrix` –– both numpy arrays where the indices correspond to nodes. Example:\n\n```python\nimport numpy as np\nfrom outgraph import Graph\n\nnode_attrs = np.array([[-1], [0], [1]])\nadj_matrix = np.array([[1, 1, 0],\n                       [1, 1, 1],\n                       [0, 1, 1]])\ngraph = Graph(node_attrs, adj_matrix)\n```\n\n<p align=\"center\">\n  <img src=\"example_graph.svg\" width=\"35%\" />\n  <br />\n</p>\n\nOnce you have a list of `Graph` objects, simply submit them into `outgraph.detect_outliers`:\n\n```python\nfrom outgraph import Graph, detect_outliers\n\ngraphs = [Graph(), ...]\noutliers, indices = detect_outliers(graphs, method=1, p_value=0.05)\n```\n\nNotice the `method` and `p_value` parameters. The `method` parameter is an integer between 1 and 3 that corresponds to one of the three graph vectorization methods described in the ![How it Works](##How it Works) section. `p_value` is the outlier cutoff threshold.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shobrook/outgraph",
    "keywords": "outlier-detection,outlier,graph,mahalanobis",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "outgraph",
    "package_url": "https://pypi.org/project/outgraph/",
    "platform": null,
    "project_url": "https://pypi.org/project/outgraph/",
    "project_urls": {
      "Homepage": "https://github.com/shobrook/outgraph"
    },
    "release_url": "https://pypi.org/project/outgraph/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "Outlier detection algorithm for graph datasets",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14465634,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a70613c3c47e446b31a682e7d5b44f4af3f5bcc7c3953229fcb6e2835072212d",
          "md5": "0ff440ca00e0ef7e0dea902b83f5a7ed",
          "sha256": "fef669301782d7d4faff566f65d745113c3bfdbb69571cf8e6158f18b51c7a95"
        },
        "downloads": -1,
        "filename": "outgraph-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0ff440ca00e0ef7e0dea902b83f5a7ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 3683,
        "upload_time": "2022-07-18T06:21:08",
        "upload_time_iso_8601": "2022-07-18T06:21:08.281369Z",
        "url": "https://files.pythonhosted.org/packages/a7/06/13c3c47e446b31a682e7d5b44f4af3f5bcc7c3953229fcb6e2835072212d/outgraph-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a70613c3c47e446b31a682e7d5b44f4af3f5bcc7c3953229fcb6e2835072212d",
        "md5": "0ff440ca00e0ef7e0dea902b83f5a7ed",
        "sha256": "fef669301782d7d4faff566f65d745113c3bfdbb69571cf8e6158f18b51c7a95"
      },
      "downloads": -1,
      "filename": "outgraph-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0ff440ca00e0ef7e0dea902b83f5a7ed",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 3683,
      "upload_time": "2022-07-18T06:21:08",
      "upload_time_iso_8601": "2022-07-18T06:21:08.281369Z",
      "url": "https://files.pythonhosted.org/packages/a7/06/13c3c47e446b31a682e7d5b44f4af3f5bcc7c3953229fcb6e2835072212d/outgraph-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}