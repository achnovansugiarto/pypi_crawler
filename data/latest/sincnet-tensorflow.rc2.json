{
  "info": {
    "author": "Arya Aftab",
    "author_email": "arya.aftab@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# SincNet in Tensorflow\nAn Implementation of <a href=\"https://github.com/mravanelli/SincNet\">SincNet</a> using Tenorflow 2.x.\n- Models are converted from original torch networks.\n- The main implementation of the <a href=\"https://github.com/mravanelli/SincNet\">sinc_conv</a> layer is non-optimal. Instead of using loops in the call section, we used matrix multiplication and a few programming tricks that allow the hardware to run more efficiently (25 times faster).\n\n# SincNet\nSincNet is a neural architecture for processing **raw audio samples**. It is a novel Convolutional Neural Network (CNN) that encourages the first convolutional layer to discover more **meaningful filters**. SincNet is based on parametrized sinc functions, which implement band-pass filters. [Arxiv](http://arxiv.org/abs/1808.00158)\n\n\n## Install\n\n```bash\n$ pip install sincnet-tensorflow\n```\n\n\n## Usage\n### Demo\nTraining on a dummy database to check for error-free execution \n\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/AryaAftab/sincnet-tensorflow/blob/master/demo/sincnet_tensorflow_demo.ipynb)\n\n### A layer for Keras Functional\n```python\nimport tensorflow as tf\nfrom tensorflow.keras.layers import Dense, Conv1D\nfrom tensorflow.keras.layers import LeakyReLU, BatchNormalization, Flatten, MaxPooling1D, Input\n\nfrom sincnet_tensorflow import SincConv1D, LayerNorm\n\n\nout_dim = 50 #number of classes\n\nsinc_layer = SincConv1D(N_filt=64,\n                        Filt_dim=129,\n                        fs=16000,\n                        stride=16,\n                        padding=\"SAME\")\n\n\ninputs = Input((32000, 1)) \n\nx = sinc_layer(inputs)\nx = LayerNorm()(x)\n\nx = LeakyReLU(alpha=0.2)(x)\nx = MaxPooling1D(pool_size=2)(x)\n\n\nx = Conv1D(64, 3, strides=1, padding='valid')(x)\nx = BatchNormalization(momentum=0.05)(x)\nx = LeakyReLU(alpha=0.2)(x)\nx = MaxPooling1D(pool_size=2)(x)\n\nx = Conv1D(64, 3, strides=1, padding='valid')(x)\nx = BatchNormalization(momentum=0.05)(x)\nx = LeakyReLU(alpha=0.2)(x)\nx = MaxPooling1D(pool_size=2)(x)\n\nx = Conv1D(128, 3, strides=1, padding='valid')(x)\nx = BatchNormalization(momentum=0.05)(x)\nx = LeakyReLU(alpha=0.2)(x)\nx = MaxPooling1D(pool_size=2)(x)\n\nx = Conv1D(128, 3, strides=1, padding='valid')(x)\nx = BatchNormalization(momentum=0.05)(x)\nx = LeakyReLU(alpha=0.2)(x)\nx = MaxPooling1D(pool_size=2)(x)\n\nx = Flatten()(x)\n\nx = Dense(256)(x)\nx = BatchNormalization(momentum=0.05, epsilon=1e-5)(x)\nx = LeakyReLU(alpha=0.2)(x)\n\nx = Dense(256)(x)\nx = BatchNormalization(momentum=0.05, epsilon=1e-5)(x)\nx = LeakyReLU(alpha=0.2)(x)\n\nprediction = Dense(out_dim, activation='softmax')(x)\nmodel = tf.keras.models.Model(inputs=inputs, outputs=prediction)\n\nmodel.summary()\n```\n\n\n## References\n```bibtex\n@inproceedings{ravanelli2018speaker,\n  title={Speaker recognition from raw waveform with sincnet},\n  author={Ravanelli, Mirco and Bengio, Yoshua},\n  booktitle={2018 IEEE Spoken Language Technology Workshop (SLT)},\n  pages={1021--1028},\n  year={2018},\n  organization={IEEE}\n}\n\n@misc{SincNet,\n    title   = {SincNet}, \n    author  = {Mirco Ravanelli (mravanelli)},\n    year    = {2018},\n    url  = {https://github.com/mravanelli/SincNet},\n    publisher = {Github},\n}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AryaAftab/sincnet-tensorflow",
    "keywords": "deep learning,tensorflow,sincnet",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sincnet-tensorflow",
    "package_url": "https://pypi.org/project/sincnet-tensorflow/",
    "platform": "",
    "project_url": "https://pypi.org/project/sincnet-tensorflow/",
    "project_urls": {
      "Homepage": "https://github.com/AryaAftab/sincnet-tensorflow"
    },
    "release_url": "https://pypi.org/project/sincnet-tensorflow/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "SincNet - Tensorflow",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11427483,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78952c3d8f8c4cccb02f4a08d7464272f8c8dae81585dc1290d38548797663ee",
          "md5": "364068fdc4c446fd531b569ad8911fa5",
          "sha256": "bd121a5f6a9fe7500f56398d47026650d1a94d5e7107947858d469e9df035999"
        },
        "downloads": -1,
        "filename": "sincnet-tensorflow-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "364068fdc4c446fd531b569ad8911fa5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4739,
        "upload_time": "2021-08-30T21:40:33",
        "upload_time_iso_8601": "2021-08-30T21:40:33.279627Z",
        "url": "https://files.pythonhosted.org/packages/78/95/2c3d8f8c4cccb02f4a08d7464272f8c8dae81585dc1290d38548797663ee/sincnet-tensorflow-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cbed5b0de1b1e8b99ca1f34b435a80c579d79cca85b39e916a8639a8a4b55a3",
          "md5": "33e4a02054a90f194995f92822c97ddb",
          "sha256": "f6cf66f95bceba1ecdd75b60b70be53e7dbdee785a192a394aa77ed90cd368bf"
        },
        "downloads": -1,
        "filename": "sincnet-tensorflow-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "33e4a02054a90f194995f92822c97ddb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5015,
        "upload_time": "2021-09-12T04:30:20",
        "upload_time_iso_8601": "2021-09-12T04:30:20.096251Z",
        "url": "https://files.pythonhosted.org/packages/1c/be/d5b0de1b1e8b99ca1f34b435a80c579d79cca85b39e916a8639a8a4b55a3/sincnet-tensorflow-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1cbed5b0de1b1e8b99ca1f34b435a80c579d79cca85b39e916a8639a8a4b55a3",
        "md5": "33e4a02054a90f194995f92822c97ddb",
        "sha256": "f6cf66f95bceba1ecdd75b60b70be53e7dbdee785a192a394aa77ed90cd368bf"
      },
      "downloads": -1,
      "filename": "sincnet-tensorflow-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "33e4a02054a90f194995f92822c97ddb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5015,
      "upload_time": "2021-09-12T04:30:20",
      "upload_time_iso_8601": "2021-09-12T04:30:20.096251Z",
      "url": "https://files.pythonhosted.org/packages/1c/be/d5b0de1b1e8b99ca1f34b435a80c579d79cca85b39e916a8639a8a4b55a3/sincnet-tensorflow-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}