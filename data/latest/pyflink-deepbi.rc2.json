{
  "info": {
    "author": "\"Bartosz Mikulski\"",
    "author_email": "bartosz.mikulski@deep.bi, bartosz.mikulski.praca@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# JDBC streaming source connector for Apache Flink\n\n[![CI/CD](https://github.com/deep-bi/flink-connector-jdbc-source/actions/workflows/main.yml/badge.svg)](https://github.com/deep-bi/flink-connector-jdbc-source/actions/workflows/main.yml)\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/bi.deep/flink-connector-jdbc-source-1.15/badge.svg)](https://mvnrepository.com/artifact/bi.deep/flink-connector-jdbc-source-1.15)\n[![PyPI version](https://badge.fury.io/py/pyflink-deepbi.svg)](https://badge.fury.io/py/pyflink-deepbi)\n\nThis connector for Apache Flink provides a streaming JDBC source.\nThe connector implements a source function for Flink that queries the database on a regular interval and pushes all the results to the output stream.\n\nFeatures:\n\n- Accept custom JDBC connection parameters and custom SQL SELECT query to be executed\n\n- Extendable row parsers\n\n- Implemented in Java, but with additional Python binding for the source function\n\n\n## Compatibility Matrix\n\nThe main branch will always have the most recent supported versions of Flink.\n\n| Connector Version | Flink Version | Status     |\n|-------------------|---------------|------------|\n| 0.1.1             | 1.15          | Active     |\n| 0.1               | 1.15          | Deprecated |\n\n\n## Usage (PyFlink)\n\nA JDBC streaming source reads a JDBC compliant database by using provided query. To create a source you can use following code (in PyFlink):\n\n\n```python\nfrom pyflink.common import Duration\nfrom pyflink_deepbi.jdbc import JDBCSourceBuilder, Parsers\n\nsource_fn = (\n    JDBCSourceBuilder()\n        .with_query(\"SELECT * FROM users;\")  # Query to run against the database\n        .with_url(\"jdbc:sqlite:sample.db\")  # Database connection string\n        .with_parser(Parsers.json_string())  # Parser that converts database records to stream event\n        .with_discovery_interval(Duration.of_hours(1))  # How frequently query the database (in milliseconds)?\n        .build_source_function()  # Builds the source function\n)\n\nstream = env.add_source(source_fn, \"JDBC Query\", source_fn.output_type)\n```\n\nAbove implementation uses source function to read the database. However, we also have the Source API based implementation.\nThe problem is that it only works if you run the application with: `flink run --python script.py` and the JARs are in the\nFlink classpath. There is a bug when starting application with `python script.py`, that the Flink cannot see the classes from\nprovided JARS (as the Source API exposes custom classes outside the function). For this reason the code above is recommended as\nyou can run the same code on cluster and locally from script.\n\n## Deployment\n\nTo build a fat jar change directory to `flink-java` and run: `mvn package`.\n\n## Development\n\nSupported Python versions are Python 3.7, Python 3.8, Python 3.9 and Python 3.10. \nCreate and activate a virtual environment with the Python version of your choice.\n\nTo install Python dependencies change directory to `flink-python` and run:\n```bash\npip install -r requirements.txt\npip install -e .  # to install module as editable for the unit test\n```\n\nTo test across Python versions run `tox`. For running only unit test on current interpreter run: `pytest tests/`.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyflink-deepbi",
    "package_url": "https://pypi.org/project/pyflink-deepbi/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyflink-deepbi/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pyflink-deepbi/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "\"Deep.BI utilities libraries for PyFlink\"",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15626003,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c49214dde2d2734468cce64abcc9f1e5485aece32327253300cf0d1718b6bb85",
          "md5": "b2918f9215c02dcae84758df1f7f41d4",
          "sha256": "b8815dba099b5da2516f087d0174bfbf2cce8a757324887f9225c4ba72ccd22a"
        },
        "downloads": -1,
        "filename": "pyflink_deepbi-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b2918f9215c02dcae84758df1f7f41d4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4887,
        "upload_time": "2022-08-18T07:56:30",
        "upload_time_iso_8601": "2022-08-18T07:56:30.185847Z",
        "url": "https://files.pythonhosted.org/packages/c4/92/14dde2d2734468cce64abcc9f1e5485aece32327253300cf0d1718b6bb85/pyflink_deepbi-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eab37bfb27542b633cd24ab254f56c5b69eda068d2663fe860708d39a110a4cc",
          "md5": "babd822594d87961f7d065a7d872b7e1",
          "sha256": "e705fd2dce557acbf3a2f0db7731a53bad681676d35809f08f8cc32a33e57c3d"
        },
        "downloads": -1,
        "filename": "pyflink_deepbi-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "babd822594d87961f7d065a7d872b7e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4424,
        "upload_time": "2022-08-18T07:56:31",
        "upload_time_iso_8601": "2022-08-18T07:56:31.960917Z",
        "url": "https://files.pythonhosted.org/packages/ea/b3/7bfb27542b633cd24ab254f56c5b69eda068d2663fe860708d39a110a4cc/pyflink_deepbi-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc8c97c7f188768f57eebc71379c9cfd88d42915dc8d48c17ea3e32d1bc65263",
          "md5": "f1b78339ef345e7d20dd7fbed292660e",
          "sha256": "a7cabeb153d961a4c04afc8370bcb82a329369e68eae0c1f1856f0bbae7d55b8"
        },
        "downloads": -1,
        "filename": "pyflink_deepbi-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f1b78339ef345e7d20dd7fbed292660e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4533,
        "upload_time": "2022-11-02T11:33:28",
        "upload_time_iso_8601": "2022-11-02T11:33:28.236651Z",
        "url": "https://files.pythonhosted.org/packages/bc/8c/97c7f188768f57eebc71379c9cfd88d42915dc8d48c17ea3e32d1bc65263/pyflink_deepbi-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc8c97c7f188768f57eebc71379c9cfd88d42915dc8d48c17ea3e32d1bc65263",
        "md5": "f1b78339ef345e7d20dd7fbed292660e",
        "sha256": "a7cabeb153d961a4c04afc8370bcb82a329369e68eae0c1f1856f0bbae7d55b8"
      },
      "downloads": -1,
      "filename": "pyflink_deepbi-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f1b78339ef345e7d20dd7fbed292660e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 4533,
      "upload_time": "2022-11-02T11:33:28",
      "upload_time_iso_8601": "2022-11-02T11:33:28.236651Z",
      "url": "https://files.pythonhosted.org/packages/bc/8c/97c7f188768f57eebc71379c9cfd88d42915dc8d48c17ea3e32d1bc65263/pyflink_deepbi-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}