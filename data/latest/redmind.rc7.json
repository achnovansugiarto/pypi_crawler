{
  "info": {
    "author": "Diego Velez",
    "author_email": "diegovelezs94@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# RedMind\n\nThis is a python library made to help you build machine learning models.\n\nDeveloped by Diego Velez 2022\n\n```text\nThere are some known issues with softmax and adam optimizer\n```\n\n## Installation\n\n```shell\npip3 install redmind\n```\n\n## Quickstart (XOR sample)\n\n```python\nimport matplotlib.pyplot as plt\nimport redmind.optimizers as optim\nfrom redmind.layers import Dense, Sigmoid, ReLU\nfrom redmind.network import NeuralNetwork\nfrom redmind.loss import BinaryCrossEntropyLoss\nfrom redmind.trainer import Trainer\nimport torch\n\n# Prepare data\nxor = torch.tensor([[0, 0],\n                    [0, 1],\n                    [1, 0],\n                    [1, 1]], dtype=torch.float32)\n\ny = torch.tensor([0, 1, 1, 0], dtype=torch.float32).reshape(1,4)\n# xor = torch.tensor([[0,1]], dtype=torch.float32)\n# y = torch.tensor([1], dtype=torch.float32).reshape(1,1)\nx_test = xor.T\n\n# Build NN\nn_weights_1 = 3 # 3 neurons in the first layer\nn_weights_2 = 1 # 1 neuron in the second layer (output)\nnn = NeuralNetwork(layers=[\n    Dense(n_weights_1, x_test.shape[0], seed=1),\n    ReLU(),\n    Dense(n_weights_2, n_weights_1, seed=1),\n    Sigmoid()\n])\n\nlearning_rate = 1e-1\nepochs = 100\nloss_fn = BinaryCrossEntropyLoss()\noptimizer = optim.RMSprop(nn.layers_parameters(), learning_rate=learning_rate)\n# Initialize trainer\ntrainer = Trainer(network=nn, loss_function=loss_fn,optimizer=optimizer)\n\n# Train\ntrainer.train(X = x_test, Y = y, epochs = epochs, batch_size = 1)\n\n# Predict\nprediction_vector = nn.predict(torch.tensor([[1.],[0.]]))\nif prediction_vector > 0.5:\n    print(1)\nelse:\n    print(0)\n```\n\nGo to `samples` folder for more samples\n\nYou can also opt to not use the `Trainer` class and manually train the network, here is how to do it\n\n### Manual Train (XOR sample)\n\n```python\nimport matplotlib.pyplot as plt\nimport redmind.optimizers as optim\nfrom redmind.layers import Dense, Sigmoid, ReLU\nfrom redmind.network import NeuralNetwork\nfrom redmind.dataloader import Dataloader\nfrom redmind.loss import BinaryCrossEntropyLoss\nimport torch\n\n# Prepare data\nxor = torch.tensor([[0, 0],\n                [0, 1],\n                [1, 0],\n                [1, 1]], dtype=torch.float32)\n\ny = torch.tensor([0, 1, 1, 0], dtype=torch.float32).reshape(1,4)\n# xor = torch.tensor([[0,1]], dtype=torch.float32)\n# y = torch.tensor([1], dtype=torch.float32).reshape(1,1)\nx_test = xor.T\n\n# Build NN\nn_weights_1 = 3 # 3 neurons in the first layer\nn_weights_2 = 1 # 1 neuron in the second layer (output)\nnn = NeuralNetwork(layers=[\n    Dense(n_weights_1, x_test.shape[0], seed=1),\n    ReLU(),\n    Dense(n_weights_2, n_weights_1, seed=1),\n    Sigmoid()\n])\n\n# Load data in dataloader so we can loop it\ndata = Dataloader(x_test, y, batch_size=2)\n\n# training variables\nlearning_rate = 1e-1\nepochs = 600\ncosts = {}\nloss_fn = BinaryCrossEntropyLoss()\noptimizer = optim.GradientDescent(nn.layers_parameters(), learning_rate=learning_rate)\n\n# Manual train\nfor epoch in range(epochs):\n    epoch_losses = []\n    for x, y in data:\n        # forward\n        y_pred = nn.forward(x)\n\n        # clear gradients\n        optimizer.zero_grad()\n\n        # calculate loss\n        loss = loss_fn(y, y_pred)\n        epoch_losses.append(loss.detach())\n        loss.backward()\n\n        # Gradient descent step\n        optimizer.step()\n\n    # Calculate total run cost\n    costs[epoch] = torch.stack(epoch_losses).mean().item()\n    accuracy = round(100 - (costs[epoch] * 100), 3)\n    print(f\"epoch: {epoch + 1}/{epochs}, cost: {round(costs[epoch], 4)}, accuracy: {accuracy}%\")\n```\n\n\n## Loss functions\n\nYou can use different loss functions and even create your own, you just need to send the function as an argument to the `Trainer` as `loss_function`\n\n```python\nlearning_rate = 1e-1\nloss_fn = CategoricalCrossEntropyLoss()\noptimizer = optim.RMSprop(nn.layers_parameters(), learning_rate=learning_rate)\n# Initialize trainer\ntrainer = Trainer(network=nn, loss_function=loss_fn,optimizer=optimizer)\n```\n\n\n\n### Defining custom loss function\n\nIf you want to create your own loss function, you will need to inherit from the base `Loss` superclass and implement the `__call__` method\n\n```python\nfrom redmind.loss import Loss\n\nclass CustomLoss(Loss):\n    def __call__(self, y_pred, y):\n        ...\ncustom_loss = CustomLoss()\n...\n\ntrainer = Trainer(network=nn, loss_function=custom_loss,optimizer=optimizer)\n\n```\n\n## Optimizers\n\nRedmind has support for different optimizers.\n\nNative supported optimizers\n\n- GradientDescent\n\n- Momentum\n\n- RMSprop\n\n- Adam (pending fix)\n\n### Using a different Optimizer\n\nThe default optimizer is Gradient Descent, however you can change it.\n\nThe optimizer object expects the NeuralNetwork as argument, so it can read the network layers\n\n```python\nimport redmind.optimizers as optim\n...\nnn = NuralNetwork(...)\n\nadam = optimizer.Adam(nn.layers_parameters(), learning_rate=1e-2)\ntrainer = Trainer(network=nn, loss_function=loss_fn,optimizer=optimizer)\n```\n\n### Creating your own optimizer\n\nYou can create your own optimizer, you just need to inherit from the Optimizer class\n\n```python\nfrom redmind.optimizers import Optimizer\n...\n\nclass CustomOptimizer(Optimizer):\n    def __call__(self) -> None:\n        for layer in self.params:\n            for param_name, param_value in layer.items():\n                direction = ... # your learning algorithm\n\n                # make sure the in place operation runs with no_grad\n                with torch.no_grad():\n                    layer[param_name] -= direction\n\nnn = NeuralNetwork(...)\nmyCustomOpt = CustomOptimizer(nn.layers_parameters(),  learning_rate=1e-2)\ntrainer = Trainer(network=nn, loss_function=loss_fn,optimizer=myCustomOpt)\n\n```\n\n## Save and Load Models\n\nYou can also save and load your trained models, this makes easy for you to\npackage, ship and use your models everywhere you want.\n\n### Save model\n```python\nfrom redmind.utils import save_model\n\n...\nnn = NeuralNetwork(...)\n\n# Create trainer object\ntrainer = Trainer(network=nn, loss_function=loss_fn,optimizer=optimizer)\n\n# Train\ntrainer.train(X = x_test, Y = y, epochs = epochs, batch_size = 64)\n\n# Save NN model\nsave_model(nn, filename='bigNN.dill')\n```\n\n### Load model\n\n```python\nfrom redmind.utils import load_model\n\n# Load pretrained model\nnn = load_model(filename='bigNN.dill')\n\n# predict\nnn.predict(x_test)\n```\n\n## Learning Rate Decay\n\nThe `Trainer` class also supports learning_rate decay.\n\n```python\nfrom redmind.functions import lr_decay\n...\nnn = NeuralNetwork(...)\n\n# Create trainer object\ntrainer = Trainer(network=nn, learning_rate=0.01, lr_decay_function = lr_decay, decay_rate: 0.1)\n# Train\ntrainer.train(X = x_test, Y = y, epochs = 600, batch_size = 1)\n```\n\n## Preprocessing\n\nRedmind also has a few handy preprocessing tools. These are tools to make your life a bit easier to handle data\n\n### Normalizer (pending fix)\n\nIn case the features of your data have very high variance or are scaled in different way, normalizing makes it\nfit between 0 and 1 (mostly). This is very useful to make your model train faster and avoid exploding gradients\n\nUsage:\n\n```python\nimport numpy as np\nfrom redmind.normalizer import Normalizer\n\n# column 1 Age\n# Column 2 Weight\nxtrain = np.array([[10, 40],\n              [11, 35],\n              [12, 40],\n              [13, 41],\n              [13, 70],\n              [15, 60],\n              [19, 64],\n              [15, 60],\n              [20, 80],\n              [40, 100],\n              [56, 85]])\n\n# Initialize normalizer and fit the data\nnorm = Normalizer()\nnorm.fit(xtrain)\n\n# scale xtrain\nxtrain = norm.scale(xtrain)\n\nxtest = np.array([[20, 60],\n                [21, 75],\n                [22, 80],\n                [23, 59],\n                [23, 85],\n                [25, 77]])\n\n# no need to refit the normalizer for new data\n# You need to use the same scale \nxnorm = norm.scale(xtest)\n```\n\n### Dataloader\n\nThe dataloader is a useful tool to loop through the trainig examples and its labels.\nIt can also split your data in mini-batches very easily.\n\n`Note: Make sure your data is entered as column vectors`\n\n```python\nfrom redmind.dataloader import Dataloader\n\nxor = torch.tensor([[0, 0],\n                [0, 1],\n                [1, 0],\n                [1, 1]])\n\ny_train = torch.tensor([0, 1, 1, 0]).reshape(1,4)\n# we need to input data as column vectors to dataloader\nx_train = xor.T\n\ndata = Dataloader(X=X, Y=Y, batch_size=2)\n\n# then we can loop over the mini-batches\n# you can do forward and backpropagation like this\nfor x, y in data:\n    print(x)\n    print(y)\n    #forward..\n    ...\n```\n\n\n## Features\n\n- [X] Classes definition and construction\n- [X] Forward propagation fully working\n- [X] Backward propagation working\n- [X] Train and predict fully working\n- [X] Add Optimization layers\n- [X] Add mini batch Gradient descent (through Dataloader)\n- [X] Support for multiple optimizers\n- [X] Learning rate decay\n- [X] Add early stoping support\n- [X] Save and Load models\n- [ ] Batch normalization\n- [ ] Add convolutional layers\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,ai,machine learning,neural network",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "redmind",
    "package_url": "https://pypi.org/project/redmind/",
    "platform": null,
    "project_url": "https://pypi.org/project/redmind/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/redmind/0.0.9/",
    "requires_dist": [
      "numpy",
      "matplotlib",
      "dill",
      "pandas",
      "torch"
    ],
    "requires_python": "",
    "summary": "Package for building Machine learning models",
    "version": "0.0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14075392,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6260bc8eb0c75bc607b346371f8f29fd42d996246efdd94c0ea75df18799bb01",
          "md5": "f86347e7af3537344988954385fd0518",
          "sha256": "63bf9db9a353acbe8a05b15a367944e913c08f81a994712073e4090c726e944c"
        },
        "downloads": -1,
        "filename": "redmind-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f86347e7af3537344988954385fd0518",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7745,
        "upload_time": "2022-05-26T23:53:04",
        "upload_time_iso_8601": "2022-05-26T23:53:04.550588Z",
        "url": "https://files.pythonhosted.org/packages/62/60/bc8eb0c75bc607b346371f8f29fd42d996246efdd94c0ea75df18799bb01/redmind-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16b990d4c2b4ebbd6fdc452b20cbe5a6375918549cd35125eb791d01001dca99",
          "md5": "b27c3e2c1cee6459b79284e81628360a",
          "sha256": "8daa33eb860c2f8fdef39dafadcbeac06310b2de383f85345508c810dd647867"
        },
        "downloads": -1,
        "filename": "redmind-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b27c3e2c1cee6459b79284e81628360a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6638,
        "upload_time": "2022-05-26T23:53:06",
        "upload_time_iso_8601": "2022-05-26T23:53:06.681452Z",
        "url": "https://files.pythonhosted.org/packages/16/b9/90d4c2b4ebbd6fdc452b20cbe5a6375918549cd35125eb791d01001dca99/redmind-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18764ed3ec33528d33d3c49372b2a2a8f3b746cc4260a27705e75e610f42f2b9",
          "md5": "bbfdb877f07c036bccb932cb126a694d",
          "sha256": "a67f70efd25586127b67d459ad05597ac913bc96397d0da0c444c40a1f163c68"
        },
        "downloads": -1,
        "filename": "redmind-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bbfdb877f07c036bccb932cb126a694d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7687,
        "upload_time": "2022-05-27T17:36:16",
        "upload_time_iso_8601": "2022-05-27T17:36:16.022038Z",
        "url": "https://files.pythonhosted.org/packages/18/76/4ed3ec33528d33d3c49372b2a2a8f3b746cc4260a27705e75e610f42f2b9/redmind-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "489ffc48542bd653b6fd3000f0e76c1ffa23915a2d7b3b38ca6e34cd1a2bbd7e",
          "md5": "638977e47a1397e54403e2ed6118ec4b",
          "sha256": "7fe72d0b7bb4cdb5290e2fd7f34f563fd079a994f5110db1e0c87f3b180036c9"
        },
        "downloads": -1,
        "filename": "redmind-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "638977e47a1397e54403e2ed6118ec4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7264,
        "upload_time": "2022-05-27T17:36:17",
        "upload_time_iso_8601": "2022-05-27T17:36:17.325518Z",
        "url": "https://files.pythonhosted.org/packages/48/9f/fc48542bd653b6fd3000f0e76c1ffa23915a2d7b3b38ca6e34cd1a2bbd7e/redmind-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5015eaa0e306d713324d33533d74b1bb4462144277ed6426cf79438de3b82380",
          "md5": "0e5d46857a26ae230a512d986456604c",
          "sha256": "6c703f28d809aaabcdf7cced92357238c9dee9753844e27e2b461c0af9fdadf2"
        },
        "downloads": -1,
        "filename": "redmind-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e5d46857a26ae230a512d986456604c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9831,
        "upload_time": "2022-05-29T23:15:39",
        "upload_time_iso_8601": "2022-05-29T23:15:39.335678Z",
        "url": "https://files.pythonhosted.org/packages/50/15/eaa0e306d713324d33533d74b1bb4462144277ed6426cf79438de3b82380/redmind-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "672b202afc31902d74dfc62bbc185820d200d0402c43c135141c0bd44cb7a338",
          "md5": "3bafd211fc8e98916c30e2506889c8a8",
          "sha256": "7edd48872a556d2c90fafff64e9d6462dc3cbb29d99fa9ec1073cb802641fe0c"
        },
        "downloads": -1,
        "filename": "redmind-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3bafd211fc8e98916c30e2506889c8a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10410,
        "upload_time": "2022-05-29T23:15:40",
        "upload_time_iso_8601": "2022-05-29T23:15:40.896749Z",
        "url": "https://files.pythonhosted.org/packages/67/2b/202afc31902d74dfc62bbc185820d200d0402c43c135141c0bd44cb7a338/redmind-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3604ed32cff60629d1add30aa13349c9b19b694e58699f439ad9efd69096c04",
          "md5": "0b7a3cc131f89cdeb18a9f8e8fdb8a83",
          "sha256": "aefd254c927b1aaddfcb373ca8a2bef7a16dbd6b60b0611b80af06590cd60eba"
        },
        "downloads": -1,
        "filename": "redmind-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b7a3cc131f89cdeb18a9f8e8fdb8a83",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11033,
        "upload_time": "2022-05-30T18:15:16",
        "upload_time_iso_8601": "2022-05-30T18:15:16.106172Z",
        "url": "https://files.pythonhosted.org/packages/d3/60/4ed32cff60629d1add30aa13349c9b19b694e58699f439ad9efd69096c04/redmind-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a5b6b6bafb05afa8bc9bad47d81aedb4b55050b60f14a009656f6d62de5d1b3",
          "md5": "95ebba7abe12ec7ce5d60834a52412ca",
          "sha256": "206450d2c9db8b677cf0bad53f979ac3839936fc8d6815d82b1b73b2727f1906"
        },
        "downloads": -1,
        "filename": "redmind-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "95ebba7abe12ec7ce5d60834a52412ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11825,
        "upload_time": "2022-05-30T18:15:17",
        "upload_time_iso_8601": "2022-05-30T18:15:17.704899Z",
        "url": "https://files.pythonhosted.org/packages/2a/5b/6b6bafb05afa8bc9bad47d81aedb4b55050b60f14a009656f6d62de5d1b3/redmind-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a89842a66687df715a2756c8d34293bdb134977b96164237d68d280bd710f003",
          "md5": "994905431658967af1ccf1f801a633a8",
          "sha256": "3abd02ac28564b14951deebcc158206d100844b08160532ddf67e55059f9624e"
        },
        "downloads": -1,
        "filename": "redmind-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "994905431658967af1ccf1f801a633a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12825,
        "upload_time": "2022-06-01T21:02:11",
        "upload_time_iso_8601": "2022-06-01T21:02:11.572706Z",
        "url": "https://files.pythonhosted.org/packages/a8/98/42a66687df715a2756c8d34293bdb134977b96164237d68d280bd710f003/redmind-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1a15845f5def5db04b7d047b637b170165ae729ce9943437bed8bd19d13620b",
          "md5": "f54ff90b04e7376ab6908f69cd9e7fe0",
          "sha256": "1a0d01f5c0a5d001a3e838552c816eb3b38e39aafb97a3adfaf4f582e3507047"
        },
        "downloads": -1,
        "filename": "redmind-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "f54ff90b04e7376ab6908f69cd9e7fe0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13532,
        "upload_time": "2022-06-01T21:02:13",
        "upload_time_iso_8601": "2022-06-01T21:02:13.005009Z",
        "url": "https://files.pythonhosted.org/packages/b1/a1/5845f5def5db04b7d047b637b170165ae729ce9943437bed8bd19d13620b/redmind-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f60e8f62d954c44281214ce68b7230d755b588395f1ad9810989c366bdb92090",
          "md5": "09f68c17c1e98318f8f6fcff8e543185",
          "sha256": "3c73da74426bad0b3ce84249b642c23d6b7cbdcd3f868626043d10ea44518a61"
        },
        "downloads": -1,
        "filename": "redmind-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "09f68c17c1e98318f8f6fcff8e543185",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13178,
        "upload_time": "2022-06-08T21:43:19",
        "upload_time_iso_8601": "2022-06-08T21:43:19.085883Z",
        "url": "https://files.pythonhosted.org/packages/f6/0e/8f62d954c44281214ce68b7230d755b588395f1ad9810989c366bdb92090/redmind-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1269996a5598ac0c3a0c7c1b1ef71622028ee823cac57f47530c88e4d4004da4",
          "md5": "82910aa26f0c8062dfae2c6848c7a146",
          "sha256": "2aa987adf67a8f91d3e68e6185b599a5e422c41bb763cbc5bde2b86edacc63b2"
        },
        "downloads": -1,
        "filename": "redmind-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "82910aa26f0c8062dfae2c6848c7a146",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14216,
        "upload_time": "2022-06-08T21:43:20",
        "upload_time_iso_8601": "2022-06-08T21:43:20.988343Z",
        "url": "https://files.pythonhosted.org/packages/12/69/996a5598ac0c3a0c7c1b1ef71622028ee823cac57f47530c88e4d4004da4/redmind-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf6ef2754f19ab9d1278df1e87da2ba004df93c2c9735ce6b0b60a124d830c13",
          "md5": "642cbb6b592f4553ce19b23c241bf28d",
          "sha256": "904ea9c93c202d53ba49fa39d728ea792d80fca1a1cd474adf83a36f98e8aad8"
        },
        "downloads": -1,
        "filename": "redmind-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "642cbb6b592f4553ce19b23c241bf28d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13138,
        "upload_time": "2022-06-09T00:47:11",
        "upload_time_iso_8601": "2022-06-09T00:47:11.571633Z",
        "url": "https://files.pythonhosted.org/packages/cf/6e/f2754f19ab9d1278df1e87da2ba004df93c2c9735ce6b0b60a124d830c13/redmind-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4490e339f5378d26b3e800cd37c03edf966a596c17c4b0edc31a038c7b61257",
          "md5": "d4fbc8f8d5473c7ea98f333d94f7d964",
          "sha256": "caaa7825baa4ce39dba8fe5d1ac1ff62cbe807e7d7e36194a58afd783f99976f"
        },
        "downloads": -1,
        "filename": "redmind-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "d4fbc8f8d5473c7ea98f333d94f7d964",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14182,
        "upload_time": "2022-06-09T00:47:13",
        "upload_time_iso_8601": "2022-06-09T00:47:13.310207Z",
        "url": "https://files.pythonhosted.org/packages/c4/49/0e339f5378d26b3e800cd37c03edf966a596c17c4b0edc31a038c7b61257/redmind-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf6ef2754f19ab9d1278df1e87da2ba004df93c2c9735ce6b0b60a124d830c13",
        "md5": "642cbb6b592f4553ce19b23c241bf28d",
        "sha256": "904ea9c93c202d53ba49fa39d728ea792d80fca1a1cd474adf83a36f98e8aad8"
      },
      "downloads": -1,
      "filename": "redmind-0.0.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "642cbb6b592f4553ce19b23c241bf28d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13138,
      "upload_time": "2022-06-09T00:47:11",
      "upload_time_iso_8601": "2022-06-09T00:47:11.571633Z",
      "url": "https://files.pythonhosted.org/packages/cf/6e/f2754f19ab9d1278df1e87da2ba004df93c2c9735ce6b0b60a124d830c13/redmind-0.0.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c4490e339f5378d26b3e800cd37c03edf966a596c17c4b0edc31a038c7b61257",
        "md5": "d4fbc8f8d5473c7ea98f333d94f7d964",
        "sha256": "caaa7825baa4ce39dba8fe5d1ac1ff62cbe807e7d7e36194a58afd783f99976f"
      },
      "downloads": -1,
      "filename": "redmind-0.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "d4fbc8f8d5473c7ea98f333d94f7d964",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14182,
      "upload_time": "2022-06-09T00:47:13",
      "upload_time_iso_8601": "2022-06-09T00:47:13.310207Z",
      "url": "https://files.pythonhosted.org/packages/c4/49/0e339f5378d26b3e800cd37c03edf966a596c17c4b0edc31a038c7b61257/redmind-0.0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}