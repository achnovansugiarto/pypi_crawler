{
  "info": {
    "author": "Dongxu Li, Junnan Li, Hung Le, Guangsen Wang, Silvio Savarese, Steven C.H. Hoi",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<p align=\"center\">\n    <br>\n    <img src=\"docs/_static/logo_final.png\" width=\"400\"/>\n    <br>\n<p>\n\n<div align=\"center\">\n  <a href=\"https://github.com/salesforce/LAVIS/releases\"><img alt=\"Latest Release\" src=\"https://img.shields.io/github/release/salesforce/LAVIS.svg\" /></a>\n  <a href=\"https://opensource.salesforce.com/LAVIS/index.html\">\n  <img alt=\"docs\" src=\"https://github.com/salesforce/LAVIS/actions/workflows/docs.yaml/badge.svg\"/>\n  <a href=\"https://opensource.org/licenses/BSD-3-Clause\">\n  <img alt=\"license\" src=\"https://img.shields.io/badge/License-BSD_3--Clause-blue.svg\"/>\n  </a>\n</div>\n\n<div align=\"center\">\n<a href=\"https://opensource.salesforce.com/LAVIS//latest/benchmark.html\">Benchmark</a>,\n<a href=\"https://arxiv.org/abs/2209.09019\">Technical Report</a>,\n<a href=\"https://opensource.salesforce.com/LAVIS//latest/index.html\">Documentation</a>,\n<a href=\"https://github.com/salesforce/LAVIS/tree/main/examples\">Jupyter Notebook Examples</a>,\n<a href=\"https://blog.salesforceairesearch.com/lavis-language-vision-library/\">Blog</a>\n</div>\n\n\n# LAVIS - A Library for Language-Vision Intelligence\n\n## What's New: ðŸŽ‰\n  - [Model Release] Oct 2022, released implementation of **PNP-VQA** (**EMNLP Findings 2022**, by Anthony T.M.H. et al), _\"Plug-and-Play VQA: Zero-shot VQA by Conjoining Large Pretrained Models with Zero Training\"_, a modular zero-shot VQA framework that requires no PLMs training, achieving SoTA zero-shot VQA performance. ([Paper](https://arxiv.org/abs/2210.08773), [Project Page](https://github.com/salesforce/LAVIS/tree/main/projects/pnp-vqa), [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/salesforce/LAVIS/blob/main/projects/pnp-vqa/pnp_vqa.ipynb))\n\n    \n## Table of Contents\n  - [Introduction](#introduction)\n  - [Installation](#installation)\n  - [Getting Started](#getting-started)\n    - [Model Zoo](#model-zoo)\n    - [Image Captioning](#image-captioning)\n    - [Visual question answering (VQA)](#visual-question-answering-vqa)\n    - [Unified Feature Extraction Interface](#unified-feature-extraction-interface)\n    - [Load Datasets](#load-datasets)\n  - [Jupyter Notebook Examples](#jupyter-notebook-examples)\n  - [Resources and Tools](#resources-and-tools)\n  - [Documentations](#documentations)\n  - [Ethical and Responsible Use](#ethical-and-responsible-use)\n  - [Technical Report and Citing LAVIS](#technical-report-and-citing-lavis)\n  - [License](#license)\n\n## Introduction\nLAVIS is a Python deep learning library for LAnguage-and-VISion intelligence research and applications. This library aims to provide engineers and researchers with a one-stop solution to rapidly develop models for their specific multimodal scenarios, and benchmark them across standard and customized datasets.\nIt features a unified interface design to access\n- **10+** tasks\n(retrieval, captioning, visual question answering, multimodal classification etc.);\n- **20+** datasets (COCO, Flickr, Nocaps, Conceptual\nCommons, SBU, etc.);\n- **30+** pretrained weights of state-of-the-art foundation language-vision models and their task-specific adaptations, including [ALBEF](https://arxiv.org/pdf/2107.07651.pdf),\n[BLIP](https://arxiv.org/pdf/2201.12086.pdf), [ALPRO](https://arxiv.org/pdf/2112.09583.pdf), [CLIP](https://arxiv.org/pdf/2103.00020.pdf).\n<p align=\"center\">\n    <br>\n    <img src=\"assets/demo-6.png\"/>\n    <br>\n<p>\n\nKey features of LAVIS include:\n\n- **Unified and Modular Interface**: facilitating to easily leverage and repurpose existing modules (datasets, models, preprocessors), also to add new modules.\n\n- **Easy Off-the-shelf Inference and Feature Extraction**: readily available pre-trained models let you take advantage of state-of-the-art multimodal understanding and generation capabilities on your own data.\n\n- **Reproducible Model Zoo and Training Recipes**: easily replicate and extend state-of-the-art models on existing and new tasks.\n\n- **Dataset Zoo and Automatic Downloading Tools**: it can be a hassle to prepare the many language-vision datasets. LAVIS provides automatic downloading scripts to help prepare a large variety of datasets and their annotations.\n\n\nThe following table shows the supported tasks, datasets and models in our library. This is a continuing effort and we are working on further growing the list.\n\n|                  Tasks                   |     Supported Models     |             Supported Datasets             |\n| :--------------------------------------: | :----------------------: | :----------------------------------------: |\n|         Image-text Pre-training          |       ALBEF, BLIP        | COCO, VisualGenome, SBU ConceptualCaptions |\n|           Image-text Retrieval           |    ALBEF, BLIP, CLIP     |              COCO, Flickr30k               |\n|           Text-image Retrieval           |    ALBEF, BLIP, CLIP     |              COCO, Flickr30k               |\n|        Visual Question Answering         |       ALBEF, BLIP        |           VQAv2, OKVQA, A-OKVQA            |\n|             Image Captioning             |           BLIP           |                COCO, NoCaps                |\n|           Image Classification           |           CLIP           |                  ImageNet                  |\n| Natural Language Visual Reasoning (NLVR) |       ALBEF, BLIP        |                   NLVR2                    |\n|          Visual Entailment (VE)          |          ALBEF           |                  SNLI-VE                   |\n|             Visual Dialogue              |           BLIP           |                  VisDial                   |\n|           Video-text Retrieval           |       BLIP, ALPRO        |               MSRVTT, DiDeMo               |\n|           Text-video Retrieval           |       BLIP, ALPRO        |               MSRVTT, DiDeMo               |\n|    Video Question Answering (VideoQA)    |       BLIP, ALPRO        |                MSRVTT, MSVD                |\n|              Video Dialogue              |         VGD-GPT          |                    AVSD                    |\n|      Multimodal Feature Extraction       | ALBEF, CLIP, BLIP, ALPRO |                 customized                 |\n|         Text-to-image Generation         |      [COMING SOON]       |                                            |\n\n## Installation\n\n1. (Optional) Creating conda environment\n\n```bash\nconda create -n lavis python=3.8\nconda activate lavis\n```\n\n2. Cloning and building from source\n\n```bash\ngit clone https://github.com/salesforce/LAVIS.git\ncd LAVIS\npip install .\n```\n\nIf you would like to develop on LAVIS, it is recommended to install in editable mode:\n```bash\npip install -e .\n```\n\n## Getting Started\n### Model Zoo\nModel zoo summarizes supported models in LAVIS, to view:\n```python\nfrom lavis.models import model_zoo\nprint(model_zoo)\n# ==================================================\n# Architectures                  Types\n# ==================================================\n# albef_classification           ve\n# albef_feature_extractor        base\n# albef_nlvr                     nlvr\n# albef_pretrain                 base\n# albef_retrieval                coco, flickr\n# albef_vqa                      vqav2\n# alpro_qa                       msrvtt, msvd\n# alpro_retrieval                msrvtt, didemo\n# blip_caption                   base_coco, large_coco\n# blip_classification            base\n# blip_feature_extractor         base\n# blip_nlvr                      nlvr\n# blip_pretrain                  base\n# blip_retrieval                 coco, flickr\n# blip_vqa                       vqav2, okvqa, aokvqa\n# clip_feature_extractor         ViT-B-32, ViT-B-16, ViT-L-14, ViT-L-14-336, RN50\n# clip                           ViT-B-32, ViT-B-16, ViT-L-14, ViT-L-14-336, RN50\n# gpt_dialogue                   base\n```\n\nLetâ€™s see how to use models in LAVIS to perform inference on example data. We first load a sample image from local.\n\n```python\nimport torch\nfrom PIL import Image\n# setup device to use\ndevice = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n# load sample image\nraw_image = Image.open(\"docs/_static/merlion.png\").convert(\"RGB\")\n```\n\nThis example image shows [Merlion park](https://en.wikipedia.org/wiki/Merlion) ([source](https://theculturetrip.com/asia/singapore/articles/what-exactly-is-singapores-merlion-anyway/)), a landmark in Singapore.\n\n\n### Image Captioning\nIn this example, we use the BLIP model to generate a caption for the image. To make inference even easier, we also associate each\npre-trained model with its preprocessors (transforms), accessed via ``load_model_and_preprocess()``.\n\n```python\nimport torch\nfrom lavis.models import load_model_and_preprocess\ndevice = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n# loads BLIP caption base model, with finetuned checkpoints on MSCOCO captioning dataset.\n# this also loads the associated image processors\nmodel, vis_processors, _ = load_model_and_preprocess(name=\"blip_caption\", model_type=\"base_coco\", is_eval=True, device=device)\n# preprocess the image\n# vis_processors stores image transforms for \"train\" and \"eval\" (validation / testing / inference)\nimage = vis_processors[\"eval\"](raw_image).unsqueeze(0).to(device)\n# generate caption\nmodel.generate({\"image\": image})\n# ['a large fountain spewing water into the air']\n```\n\n### Visual question answering (VQA)\nBLIP model is able to answer free-form questions about images in natural language.\nTo access the VQA model, simply replace the ``name`` and ``model_type`` arguments\npassed to ``load_model_and_preprocess()``.\n\n```python\nfrom lavis.models import load_model_and_preprocess\nmodel, vis_processors, txt_processors = load_model_and_preprocess(name=\"blip_vqa\", model_type=\"vqav2\", is_eval=True, device=device)\n# ask a random question.\nquestion = \"Which city is this photo taken?\"\nimage = vis_processors[\"eval\"](raw_image).unsqueeze(0).to(device)\nquestion = txt_processors[\"eval\"](question)\nmodel.predict_answers(samples={\"image\": image, \"text_input\": question}, inference_method=\"generate\")\n# ['singapore']\n```\n\n### Unified Feature Extraction Interface\n\nLAVIS provides a unified interface to extract features from each architecture. \nTo extract features, we load the feature extractor variants of each model.\nThe multimodal feature can be used for multimodal classification.\nThe low-dimensional unimodal features can be used to compute cross-modal similarity.\n\n\n```python\nfrom lavis.models import load_model_and_preprocess\nmodel, vis_processors, txt_processors = load_model_and_preprocess(name=\"blip_feature_extractor\", model_type=\"base\", is_eval=True, device=device)\ncaption = \"a large fountain spewing water into the air\"\nimage = vis_processors[\"eval\"](raw_image).unsqueeze(0).to(device)\ntext_input = txt_processors[\"eval\"](caption)\nsample = {\"image\": image, \"text_input\": [text_input]}\n\nfeatures_multimodal = model.extract_features(sample)\nprint(features_multimodal.multimodal_embeds.shape)\n# torch.Size([1, 12, 768]), use features_multimodal[:,0,:] for multimodal classification tasks\n\nfeatures_image = model.extract_features(sample, mode=\"image\")\nfeatures_text = model.extract_features(sample, mode=\"text\")\nprint(features_image.image_embeds.shape)\n# torch.Size([1, 197, 768])\nprint(features_text.text_embeds.shape)\n# torch.Size([1, 12, 768])\n\n# low-dimensional projected features\nprint(features_image.image_embeds_proj.shape)\n# torch.Size([1, 197, 256])\nprint(features_text.text_embeds_proj.shape)\n# torch.Size([1, 12, 256])\nsimilarity = features_image.image_embeds_proj[:,0,:] @ features_text.text_embeds_proj[:,0,:].t()\nprint(similarity)\n# tensor([[0.2622]])\n```\n\n### Load Datasets\nLAVIS inherently supports a wide variety of common language-vision datasets by providing [automatic download tools](https://opensource.salesforce.com/LAVIS//latest/benchmark) to help download and organize these datasets. After downloading, to load the datasets, use the following code:\n\n```python\nfrom lavis.datasets.builders import dataset_zoo\ndataset_names = dataset_zoo.get_names()\nprint(dataset_names)\n# ['aok_vqa', 'coco_caption', 'coco_retrieval', 'coco_vqa', 'conceptual_caption_12m',\n#  'conceptual_caption_3m', 'didemo_retrieval', 'flickr30k', 'imagenet', 'laion2B_multi',\n#  'msrvtt_caption', 'msrvtt_qa', 'msrvtt_retrieval', 'msvd_caption', 'msvd_qa', 'nlvr',\n#  'nocaps', 'ok_vqa', 'sbu_caption', 'snli_ve', 'vatex_caption', 'vg_caption', 'vg_vqa']\n```\nAfter downloading the images, we can use ``load_dataset()`` to obtain the dataset.\n```python\nfrom lavis.datasets.builders import load_dataset\ncoco_dataset = load_dataset(\"coco_caption\")\nprint(coco_dataset.keys())\n# dict_keys(['train', 'val', 'test'])\nprint(len(coco_dataset[\"train\"]))\n# 566747\nprint(coco_dataset[\"train\"][0])\n# {'image': <PIL.Image.Image image mode=RGB size=640x480>,\n#  'text_input': 'A woman wearing a net on her head cutting a cake. ',\n#  'image_id': 0}\n```\n\nIf you already host a local copy of the dataset, you can pass in the ``vis_path`` argument to change the default location to load images.\n\n```python\ncoco_dataset = load_dataset(\"coco_caption\", vis_path=YOUR_LOCAL_PATH)\n```\n\n## Jupyter Notebook Examples\nSee [examples](https://github.com/salesforce/LAVIS/tree/main/examples) for more inference examples, e.g. captioning, feature extraction, VQA, GradCam, zeros-shot classification.\n\n## Resources and Tools\n- **Benchmarks**: see [Benchmark](https://opensource.salesforce.com/LAVIS//latest/benchmark) for instructions to evaluate and train supported models.\n- **Dataset Download and Browsing**: see [Dataset Download](https://opensource.salesforce.com/LAVIS//latest/benchmark) for instructions and automatic tools on download common language-vision datasets.\n- **GUI Demo**: to run the demo locally, run ```bash run_scripts/run_demo.sh``` and then follow the instruction on the prompts to view in browser. A web demo is coming soon.\n\n\n## Documentations\nFor more details and advanced usages, please refer to\n[documentation](https://opensource.salesforce.com/LAVIS//latest/index.html#).\n\n## Ethical and Responsible Use\nWe note that models in LAVIS provide no guarantees on their multimodal abilities; incorrect or biased predictions may be observed. In particular, the datasets and pretrained models utilized in LAVIS may contain socioeconomic biases which could result in misclassification and other unwanted behaviors such as offensive or inappropriate speech. We strongly recommend that users review the pre-trained models and overall system in LAVIS before practical adoption. We plan to improve the library by investigating and mitigating these potential biases and\ninappropriate behaviors in the future.\n\n\n## Technical Report and Citing LAVIS\nYou can find more details in our [technical report](https://arxiv.org/abs/2209.09019).\n\nIf you're using LAVIS in your research or applications, please cite using this BibTeX:\n```bibtex\n@misc{li2022lavis,\n      title={LAVIS: A Library for Language-Vision Intelligence}, \n      author={Dongxu Li and Junnan Li and Hung Le and Guangsen Wang and Silvio Savarese and Steven C. H. Hoi},\n      year={2022},\n      eprint={2209.09019},\n      archivePrefix={arXiv},\n      primaryClass={cs.CV}\n}\n```\n\n## Contact us\nIf you have any questions, comments or suggestions, please do not hesitate to contact us at lavis@salesforce.com.\n\n## License\n[BSD 3-Clause License](LICENSE.txt)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "Vision-Language,Deep Learning,Library",
    "license": "3-Clause BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lavis-unofficial",
    "package_url": "https://pypi.org/project/lavis-unofficial/",
    "platform": null,
    "project_url": "https://pypi.org/project/lavis-unofficial/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/lavis-unofficial/0.1.10/",
    "requires_dist": null,
    "requires_python": ">=3.7.0",
    "summary": "LAVIS - A Library for Language-Vision Intelligence",
    "version": "0.1.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15896430,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77f7f51e433fde0be97a962c10e5d1e46d76373e67f3e9a42a97381bc5627026",
          "md5": "889d98e2afbb92e2fd06135cdbd24846",
          "sha256": "9ecf146f0d920413c9c8d5fef092e6998498cda7f3bb424160d7ca4a3aca7a27"
        },
        "downloads": -1,
        "filename": "lavis-unofficial-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "889d98e2afbb92e2fd06135cdbd24846",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 189035,
        "upload_time": "2022-11-26T08:51:40",
        "upload_time_iso_8601": "2022-11-26T08:51:40.842953Z",
        "url": "https://files.pythonhosted.org/packages/77/f7/f51e433fde0be97a962c10e5d1e46d76373e67f3e9a42a97381bc5627026/lavis-unofficial-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00e662cc2791e1ef9cc51b2e0dbfdf839a7b8d73c3664c7384acd7c90664d277",
          "md5": "bf00391d27214e717593feb07471000f",
          "sha256": "dc2e15be29cf1a59350b05b12f413d8d7b6ff3c0817aaf73dcf676805821835d"
        },
        "downloads": -1,
        "filename": "lavis-unofficial-0.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "bf00391d27214e717593feb07471000f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 189080,
        "upload_time": "2022-11-26T09:37:56",
        "upload_time_iso_8601": "2022-11-26T09:37:56.003591Z",
        "url": "https://files.pythonhosted.org/packages/00/e6/62cc2791e1ef9cc51b2e0dbfdf839a7b8d73c3664c7384acd7c90664d277/lavis-unofficial-0.1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2fdd51b9b60cd707ae6873115dcc267120666d18e8da8cad0d35279d301fb5c",
          "md5": "a6bd939c4d32bcfb6062ea9ba8ed2edf",
          "sha256": "414048f7073f1d3ee1b7e699fd1804b53edde6a0b604e1c1f463da55a4fd3c10"
        },
        "downloads": -1,
        "filename": "lavis-unofficial-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a6bd939c4d32bcfb6062ea9ba8ed2edf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 189064,
        "upload_time": "2022-11-26T09:00:43",
        "upload_time_iso_8601": "2022-11-26T09:00:43.862146Z",
        "url": "https://files.pythonhosted.org/packages/c2/fd/d51b9b60cd707ae6873115dcc267120666d18e8da8cad0d35279d301fb5c/lavis-unofficial-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "707b9d6427d8dc1e1ca69183dd0728e8fe5dce95416b48b9a8431d278c07b738",
          "md5": "d76f25a7a2d67fecc2d7ea780630367b",
          "sha256": "3d991bdfb49eb1c0073b670290b747d7b49daa751e7cb02af39f58a8c5fe0bd0"
        },
        "downloads": -1,
        "filename": "lavis-unofficial-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d76f25a7a2d67fecc2d7ea780630367b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 189104,
        "upload_time": "2022-11-26T09:03:38",
        "upload_time_iso_8601": "2022-11-26T09:03:38.692738Z",
        "url": "https://files.pythonhosted.org/packages/70/7b/9d6427d8dc1e1ca69183dd0728e8fe5dce95416b48b9a8431d278c07b738/lavis-unofficial-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "395f2e47a4d8a4a59bc18e721212d412a680abdb96355e066ee4d87494e8684f",
          "md5": "c65b3aeacfba879ca98a9334f9ee78e9",
          "sha256": "44b4ba05a7d8836f95a2af80c126c89f9ac6805080c400ce07f91251220a0a07"
        },
        "downloads": -1,
        "filename": "lavis-unofficial-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c65b3aeacfba879ca98a9334f9ee78e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 189129,
        "upload_time": "2022-11-26T09:24:20",
        "upload_time_iso_8601": "2022-11-26T09:24:20.692859Z",
        "url": "https://files.pythonhosted.org/packages/39/5f/2e47a4d8a4a59bc18e721212d412a680abdb96355e066ee4d87494e8684f/lavis-unofficial-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d7d4799bd5fe3348c7bf902cea5fc83093356a4e622b7329e218915ea2e447e",
          "md5": "57a8bfe497f845698dea20ba68fd5b65",
          "sha256": "e21d13e388c17941b52bf441cf3c9e0cd631c0f1e0d890cdb10e81c118902bd4"
        },
        "downloads": -1,
        "filename": "lavis-unofficial-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "57a8bfe497f845698dea20ba68fd5b65",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 189116,
        "upload_time": "2022-11-26T09:26:07",
        "upload_time_iso_8601": "2022-11-26T09:26:07.345712Z",
        "url": "https://files.pythonhosted.org/packages/6d/7d/4799bd5fe3348c7bf902cea5fc83093356a4e622b7329e218915ea2e447e/lavis-unofficial-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1d3b22f5eaaeb924cfb771c07b6e8d76e42750dc50dd6c2868917dcf6b96387",
          "md5": "fa169f4cd3d7f157343689516786c060",
          "sha256": "7d451f8e283670aa117092c22110b1d7a794fcc0b505c89ede4cc37a487ab5b0"
        },
        "downloads": -1,
        "filename": "lavis-unofficial-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "fa169f4cd3d7f157343689516786c060",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 189104,
        "upload_time": "2022-11-26T09:27:15",
        "upload_time_iso_8601": "2022-11-26T09:27:15.781936Z",
        "url": "https://files.pythonhosted.org/packages/f1/d3/b22f5eaaeb924cfb771c07b6e8d76e42750dc50dd6c2868917dcf6b96387/lavis-unofficial-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "049988e3b1d2e04a007e0f78eea416bc5303ed72eff446814b23f14385d90531",
          "md5": "657a1cccb603960de23911b3d4e93997",
          "sha256": "545f0c9009f336c780a2022458318baaa6191ef777f34e3179285b4f8f9473c6"
        },
        "downloads": -1,
        "filename": "lavis-unofficial-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "657a1cccb603960de23911b3d4e93997",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 189061,
        "upload_time": "2022-11-26T09:28:53",
        "upload_time_iso_8601": "2022-11-26T09:28:53.927755Z",
        "url": "https://files.pythonhosted.org/packages/04/99/88e3b1d2e04a007e0f78eea416bc5303ed72eff446814b23f14385d90531/lavis-unofficial-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57e808d45d017a2924ec95abd7613dc4d1c9554bcb640acf732735dc6e263301",
          "md5": "96597435a7b7c8bf34e0b33731a11713",
          "sha256": "273d7dac9de59879b030b88ed9c8d43ecf85e0a8e84c31b48de12ec205c0b98c"
        },
        "downloads": -1,
        "filename": "lavis-unofficial-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "96597435a7b7c8bf34e0b33731a11713",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 189092,
        "upload_time": "2022-11-26T09:32:41",
        "upload_time_iso_8601": "2022-11-26T09:32:41.641028Z",
        "url": "https://files.pythonhosted.org/packages/57/e8/08d45d017a2924ec95abd7613dc4d1c9554bcb640acf732735dc6e263301/lavis-unofficial-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ccc2590f4e64a90cd504541e6a9a2a1e09abc2f70227609fbe1a5dc906bdb34",
          "md5": "8240143eb1c21a0ce9b09ad468f3225c",
          "sha256": "9660a79d0bc4dd1b5358449868a1ca5e51a28fdcdf57d2e8ade42ebec1f13c46"
        },
        "downloads": -1,
        "filename": "lavis-unofficial-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "8240143eb1c21a0ce9b09ad468f3225c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 189094,
        "upload_time": "2022-11-26T09:34:35",
        "upload_time_iso_8601": "2022-11-26T09:34:35.528507Z",
        "url": "https://files.pythonhosted.org/packages/6c/cc/2590f4e64a90cd504541e6a9a2a1e09abc2f70227609fbe1a5dc906bdb34/lavis-unofficial-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "00e662cc2791e1ef9cc51b2e0dbfdf839a7b8d73c3664c7384acd7c90664d277",
        "md5": "bf00391d27214e717593feb07471000f",
        "sha256": "dc2e15be29cf1a59350b05b12f413d8d7b6ff3c0817aaf73dcf676805821835d"
      },
      "downloads": -1,
      "filename": "lavis-unofficial-0.1.10.tar.gz",
      "has_sig": false,
      "md5_digest": "bf00391d27214e717593feb07471000f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.0",
      "size": 189080,
      "upload_time": "2022-11-26T09:37:56",
      "upload_time_iso_8601": "2022-11-26T09:37:56.003591Z",
      "url": "https://files.pythonhosted.org/packages/00/e6/62cc2791e1ef9cc51b2e0dbfdf839a7b8d73c3664c7384acd7c90664d277/lavis-unofficial-0.1.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}