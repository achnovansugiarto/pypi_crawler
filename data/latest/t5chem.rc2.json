{
  "info": {
    "author": "Jocelyn Lu",
    "author_email": "jl8570@nyu.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "T5Chem\n======\n\n.. image:: https://img.shields.io/pypi/v/t5chem.svg\n    :target: https://pypi.python.org/pypi/t5chem\n    :alt: Latest PyPI version\n\nA Unified Deep Learning Model for Multi-task Reaction Predictions.\n\nIt is built on `huggingface transformers`_ -- T5 model with some modifications.\n\n.. image:: cover.png\n\n.. _huggingface transformers: https://github.com/huggingface/transformers\n\nInstallation\n------------\n\nT5Chem can be either installed via pip or from source. We recommend to install t5chem from source.\n\n1. To install from source (with latest version):\n\n .. code:: bash\n\n   $ git clone https://github.com/HelloJocelynLu/t5chem.git\n   $ cd t5chem/\n   $ python setup.py install\n   $ python setup.py test # optional, only works when you have pytest installed\n\nIt should automatically handle dependencies for you.\n\n2. To install via pip\n\n .. code:: bash\n\n   $ pip install t5chem\n\nUsage\n-----\nCall from command line:\n\n.. code:: bash\n\n   $ t5chem -h # show the general help information\n   $ t5chem train -h # show help information for model training\n   $ t5chem predict -h # show help information for model prediction\n\nWe have some sample data (a small subset from datasets used in paper) available in `data/` folder, to have a quick start:\n\n.. code:: bash\n\n   $ tar -xjvf data/sample_data.tar.bz2\n   $ t5chem train --data_dir data/sample/product/ --output_dir model/ --task_type product --pretrain models/pretrain/simple/ --num_epoch 30\n   $ t5chem predict --data_dir data/sample/product/ --model_dir model/\n\nNote that we may not get a very good result (~70% top-1 accuracy) as we are only trained on a small dataset.\n\nRequired auguments:\n\n- `data_dir`: The path to data directory, should contain `train.source`, `train.target` for training, and `test.source`, `test.target` for testing\n- `output_dir`: The directory to save trained model. Will generate four files: `vocab.pt` for vocabulary, `config.json` for model configuration, `pytorch_model.bin` for trained model weights and `training_args.bin` for training arguments.\n- `task_type`: task type. Currently we are supporting `product` (for forward reaction prediction), `reactants` (for single-step retrosynthesis), `reagents` (for reagents prediction), `regression` (to predict numeric values) and `classification` (to predict categorical values).\n- `model_dir`: The path to a trained model. (task type, tokenization method...etc can be inferred from saved model.\n\nCall as an API:\n\n.. code:: python\n\n   from transformers import T5ForConditionalGeneration\n   from t5chem import T5ForProperty, SimpleTokenizer\n   pretrain_path = \"path/to/your/pretrained/model/\"\n   model = T5ForConditionalGeneration.from_pretrained(pretrain_path)    # for seq2seq tasks\n   tokenizer = SimpleTokenizer(vocab_file=os.path.join(pretrain_path, 'vocab.pt'))\n   inputs = tokenizer.encode(\"Product:COC(=O)c1cc(COc2ccc(-c3ccccc3OC)cc2)c(C)o1.C1CCOC1>>\", return_tensors='pt')\n   output = model.generate(input_ids=inputs, max_length=300, early_stopping=True)\n   tokenizer.decode(output[0], skip_special_tokens=True) # \"COc1ccccc1-c1ccc(OCc2cc(C(=O)O)oc2C)cc1\"\n\n   model = T5ForProperty.from_pretrained(pretrain_path)  # for non-seq2seq task\n   inputs = tokenizer.encode(\"Classification:COC(=O)c1cccc(C(=O)OC)c1>CN(C)N.Cl.O>COC(=O)c1cccc(C(=O)O)c1\", return_tensors='pt')\n   outputs = model(inputs)\n   print(outputs.logits.argmax())   # Class 3\n\nWe have Google Colab examples available! Feel free to try it out:\n\n- Call T5Chem via CLI (command line) `Colab <https://colab.research.google.com/drive/13tJlJ5loLtws6u91shbSjuPoiA1fCSae?usp=sharing>`__\n\n- Use a pretrained model in python script `Colab <https://colab.research.google.com/drive/1xwz7c7q1SwwD5jEQKamo9TNCN1PKH8um?usp=sharing>`__\n\n- Design your own project: predict molecular weights `Colab <https://colab.research.google.com/drive/1eu22gjGJDwXy59TBL8pfDmBF5_DQXBGn?usp=sharing>`__\n\nCompatibility\n-------------\n- Now we have found some installation issues on rdkit version later than 2020.09.2 (See discussion `here <https://stackoverflow.com/questions/65487584/how-to-import-rdkit-in-google-colab-these-days>`_)\n\n- torchtext version 0.10.0 published some backward incompatible changes. T5Chem now only tested on torchtext<=0.8.1 \n\nLicence\n-------\nMIT Licence.\n\nAuthors\n-------\n\n`t5chem` was written by `Jocelyn Lu <jl8570@nyu.edu>`_.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/HelloJocelynLu/t5chem",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "t5chem",
    "package_url": "https://pypi.org/project/t5chem/",
    "platform": "",
    "project_url": "https://pypi.org/project/t5chem/",
    "project_urls": {
      "Homepage": "https://github.com/HelloJocelynLu/t5chem"
    },
    "release_url": "https://pypi.org/project/t5chem/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Unified Deep Learning Model for Multi-task Reaction Predictions",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12791743,
  "releases": {
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "006efa4c814b9744364d974f41616f6352a53274873038abf567697b17521d22",
          "md5": "3b06f18879b714df447da8ce70751c0a",
          "sha256": "5916939c1c2ebb87ca57800fdcf0d326b565f745d45ca40d4df5ff11dc18a436"
        },
        "downloads": -1,
        "filename": "t5chem-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3b06f18879b714df447da8ce70751c0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 84604,
        "upload_time": "2022-01-27T21:24:51",
        "upload_time_iso_8601": "2022-01-27T21:24:51.993858Z",
        "url": "https://files.pythonhosted.org/packages/00/6e/fa4c814b9744364d974f41616f6352a53274873038abf567697b17521d22/t5chem-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80ce87641ca07336550ea8fbf9bd4ed266a1779f8b2d3afc4dd1b01f657df521",
          "md5": "9d2d4068c70f68ef04563c39d8d66d6d",
          "sha256": "24bb762fe2d17afc52cab474ae0471a257997ef726c004c59562388416e23acf"
        },
        "downloads": -1,
        "filename": "t5chem-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9d2d4068c70f68ef04563c39d8d66d6d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 84539,
        "upload_time": "2022-02-04T20:52:42",
        "upload_time_iso_8601": "2022-02-04T20:52:42.326740Z",
        "url": "https://files.pythonhosted.org/packages/80/ce/87641ca07336550ea8fbf9bd4ed266a1779f8b2d3afc4dd1b01f657df521/t5chem-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "80ce87641ca07336550ea8fbf9bd4ed266a1779f8b2d3afc4dd1b01f657df521",
        "md5": "9d2d4068c70f68ef04563c39d8d66d6d",
        "sha256": "24bb762fe2d17afc52cab474ae0471a257997ef726c004c59562388416e23acf"
      },
      "downloads": -1,
      "filename": "t5chem-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9d2d4068c70f68ef04563c39d8d66d6d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 84539,
      "upload_time": "2022-02-04T20:52:42",
      "upload_time_iso_8601": "2022-02-04T20:52:42.326740Z",
      "url": "https://files.pythonhosted.org/packages/80/ce/87641ca07336550ea8fbf9bd4ed266a1779f8b2d3afc4dd1b01f657df521/t5chem-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}