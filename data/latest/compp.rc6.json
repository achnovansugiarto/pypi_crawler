{
  "info": {
    "author": "Zeecka",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation",
      "Topic :: Security"
    ],
    "description": "<center><img src=\"static/logo.png\" alt=\"ComPP\" width=\"300px\"></center>\n\n# ComPP - Company Passwords Profiler\n\n![Build](https://img.shields.io/badge/Built%20with-Python3-Blue)\n[![GitHub forks](https://img.shields.io/github/forks/sec-it/ComPP)](https://github.com/sec-it/ComPP/network)\n[![GitHub stars](https://img.shields.io/github/stars/sec-it/ComPP)](https://github.com/sec-it/ComPP/stargazers)\n[![GitHub](https://img.shields.io/github/license/sec-it/ComPP)](https://github.com/sec-it/ComPP/blob/master/LICENSE)\n\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/ComPP)\n\nCompany Passwords Profiler (aka ComPP) helps making a bruteforce wordlist for a targeted company.\n\n```text\n\n ▄████████  ▄██████▄    ▄▄▄▄███▄▄▄▄      ▄███████▄    ▄███████▄ \n███     ██ ███    ███ ▄██▀▀▀███▀▀▀██▄   ███    ███   ███    ███ \n███    █▀  ██     ███ ███   ███   ██    ███    ███    ██    ███ \n███        ███    ███ ███   ███   ███   ███    ███   ███    ███ \n███        ███     ██ ███   ███   ███ ▀█████████▀  ▀█████████▀  \n██     █▄  ███    ███ ███   ███   ███   ███          ███        \n███    ███ ███    ███ ███    ██   ███   ██           ██         \n ███████▀   ▀██████▀   ▀█   ███   █▀   ▄████▀       ▄████▀  :)    \n \nVersion : 1.0.5  \n\nusage: compp [-h] [-p PERMUTATIONS] [-c CONFIG] [-l] [-n] [-o OUTPUT] [-v] [input_file]\n\nCompany Passwords Profiler (ComPP)\n\npositional arguments:\n  input_file            company.json input file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -p PERMUTATIONS, --permutations PERMUTATIONS\n                        Number of permutations\n  -c CONFIG, --config CONFIG\n                        Configuration file\n  -l, --leet            Add 1337 passwords transformation\n  -n, --numbers         Add numbers to password\n  -o OUTPUT, --output OUTPUT\n                        Directs the output to a file of your choice\n  -v, --version         Show the version of this program\n```\n\n## What ❓\n\nThe tool responds to a need to generate wordlists **quickly** with **few inputs**. The generated passwords will contain generic company informations with transformation such as `APPNAME2019!` or `Company75000$`.\n\nThe main use of the generated wordlist is with **remote bruteforce and password spraying attack** such as a ssh service or a WordPress website.\n\nThis tool aims to replace [CeWL](https://github.com/digininja/CeWL) because web scrapping is not be the most efficient way to generate a wordlist.\n\n> Note: If you have time to perform OSINT research against the targeted users, you may use tools such as [CUPP](https://github.com/Mebus/cupp) or [BEWGor](https://github.com/berzerk0/BEWGor) to **complete** your wordlist.\n\n## Install ⚙️\n\nOn BlackArch :\n\n[![BlackArch package](https://repology.org/badge/version-for-repo/blackarch/compp.svg)](https://repology.org/project/compp/versions)\n\n```\nsudo pacman -Syu compp\n```\n\nWith PIP from PyPI packages :\n\n[![PyPI](https://img.shields.io/pypi/v/ComPP)](https://pypi.org/project/ComPP/)\n\n```bash\npip install ComPP\n```\n\nWith python from GitHub repository :\n\n[![GitHub tag (latest SemVer)](https://img.shields.io/github/v/tag/sec-it/ComPP)](https://github.com/sec-it/ComPP/tags)\n\n```bash\ngit clone git@github.com:sec-it/ComPP.git\ncd ComPP\npython setup.py install\n```\n\n## Inputs 🔡\n\nUser inputs can either be filled in the interactive prompt or through a json file. If an input is unknown to the user, it suffices to leave the field empty in order to go to the next field. Here is the full program prompt:\n\n```text\n$ compp\n\n ▄████████  ▄██████▄    ▄▄▄▄███▄▄▄▄      ▄███████▄    ▄███████▄ \n███     ██ ███    ███ ▄██▀▀▀███▀▀▀██▄   ███    ███   ███    ███ \n███    █▀  ██     ███ ███   ███   ██    ███    ███    ██    ███ \n███        ███    ███ ███   ███   ███   ███    ███   ███    ███ \n███        ███     ██ ███   ███   ███ ▀█████████▀  ▀█████████▀  \n██     █▄  ███    ███ ███   ███   ███   ███          ███        \n███    ███ ███    ███ ███    ██   ███   ██           ██         \n ███████▀   ▀██████▀   ▀█   ███   █▀   ▄████▀       ▄████▀  :)    \n \nVersion : 1.0.5  \n\nFill the differents inputs (case insensitive). Leave blank for unknow fields.\n\n[+] Enter company/application names (comma separated): Company,Comp\n[+] Enter company zip codes (comma separated): 75,75000\n[+] Enter company cities names (comma separated): Paris\n[+] Useful keywords (comma separated): Appname\n```\n\n*Or*\n\n```text\n$ compp example.json\n```\n\n## Outputs\n\nOutput size may vary with the provided options. Here is a preview of what you can expect with the default options:\n\n```text\n75#Appname\n75000%company\nAppname1995?\nappname$\nappname1995+\nCompParis2000\nCompany75000!\nCOMPANYAPPNAME2019#\nPARISCOMP!\nParisCompany2021_\nParis75000@\n...\n```\n\n## What are the proposed transformations ?\n\n1. First, the tool compute case transformation for each fields (lowercase, UPPERCASE and Capitalize). The originals set of fields and the 3 generated sets are added to the wordlist.\n2. Then, the tool apply [itertools.combination()](https://docs.python.org/3/library/itertools.html#itertools.permutations) on each set with a default size up to 2. The use of such combination avoid having the same word twice in the same password. The generated combinations are added to the wordlist\n3. The tool add a range of years to the previously generated wordlist. The original wordlist is also kept.\n4. The tool add a range of special chars to the previously generated wordlist. The original wordlist is also kept.\n5. (Optional) The tool add a range of numbers to the previously generated wordlist. The original wordlist is also kept.\n6. (Optional) The tool add a l33t transformation to the previously generated wordlist. The original wordlist is also kept.\n\n## Author\n\nMade by Alex G. ([@zeecka_](https://twitter.com/Zeecka_)), pentester at SEC-IT.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sec-it/ComPP",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ComPP",
    "package_url": "https://pypi.org/project/ComPP/",
    "platform": "",
    "project_url": "https://pypi.org/project/ComPP/",
    "project_urls": {
      "Homepage": "https://github.com/sec-it/ComPP",
      "Source": "https://github.com/sec-it/ComPP",
      "Tracker": "https://github.com/sec-it/ComPP/issues"
    },
    "release_url": "https://pypi.org/project/ComPP/1.0.5/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10984807,
  "releases": {
    "1.0": [],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "567b8b439f198a28778e0c575235697e4c97b6f39974d6a323134e06b79dcaee",
          "md5": "9b6bc94a3a49b589bbd61f3262ae602a",
          "sha256": "f7bd9d00bf81421c506d5dbff901d22034be4605ace44de2a3890ec5b744a5a5"
        },
        "downloads": -1,
        "filename": "ComPP-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9b6bc94a3a49b589bbd61f3262ae602a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6252,
        "upload_time": "2021-07-20T09:51:45",
        "upload_time_iso_8601": "2021-07-20T09:51:45.160589Z",
        "url": "https://files.pythonhosted.org/packages/56/7b/8b439f198a28778e0c575235697e4c97b6f39974d6a323134e06b79dcaee/ComPP-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "618a822d74e4c27a715eeb827539043f910fc489dc6f5998d9161a5bba2fbcbc",
          "md5": "079b6d0f31301eea0c91d8bad4abfa74",
          "sha256": "2675cc5d2158115b92bdbdf629430a7cd06537c8a04818ffb6868361959ffd74"
        },
        "downloads": -1,
        "filename": "ComPP-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "079b6d0f31301eea0c91d8bad4abfa74",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6336,
        "upload_time": "2021-07-20T09:55:52",
        "upload_time_iso_8601": "2021-07-20T09:55:52.578960Z",
        "url": "https://files.pythonhosted.org/packages/61/8a/822d74e4c27a715eeb827539043f910fc489dc6f5998d9161a5bba2fbcbc/ComPP-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2eec3a87a70b912f342d77a89ce65e15b1cade9f5a3bba849df63e06e9692f2",
          "md5": "69ad54094c2c9fee500fb05e62cada20",
          "sha256": "9559efa9ea1ca7deac8afdc0c1725dd7b6483cdd304dd92b666e3d52d4ae0a41"
        },
        "downloads": -1,
        "filename": "ComPP-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "69ad54094c2c9fee500fb05e62cada20",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6639,
        "upload_time": "2021-07-21T07:25:49",
        "upload_time_iso_8601": "2021-07-21T07:25:49.607359Z",
        "url": "https://files.pythonhosted.org/packages/c2/ee/c3a87a70b912f342d77a89ce65e15b1cade9f5a3bba849df63e06e9692f2/ComPP-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb57d391a8ceec91c39bfd965b01ed1929a4bc447174421aecbe583a3c5ee8f0",
          "md5": "99b40398ff72c4e95b64911e12657a4e",
          "sha256": "e205ac67b135cbee9529e42cc8efb6383c7023caee287fec9ba964d207e594d5"
        },
        "downloads": -1,
        "filename": "ComPP-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "99b40398ff72c4e95b64911e12657a4e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6644,
        "upload_time": "2021-07-21T07:30:39",
        "upload_time_iso_8601": "2021-07-21T07:30:39.150002Z",
        "url": "https://files.pythonhosted.org/packages/eb/57/d391a8ceec91c39bfd965b01ed1929a4bc447174421aecbe583a3c5ee8f0/ComPP-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53e38c3f279e486797937d3a0e1114558a8da03f54dce5e9f6585c7a6df21540",
          "md5": "0d332688a82321916ba8fed0f63101ed",
          "sha256": "d940965683df73ef009a7da9dd81634ed312aca408b2f5ab56fddf055e745a8d"
        },
        "downloads": -1,
        "filename": "ComPP-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0d332688a82321916ba8fed0f63101ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6836,
        "upload_time": "2021-07-23T08:59:03",
        "upload_time_iso_8601": "2021-07-23T08:59:03.319567Z",
        "url": "https://files.pythonhosted.org/packages/53/e3/8c3f279e486797937d3a0e1114558a8da03f54dce5e9f6585c7a6df21540/ComPP-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "53e38c3f279e486797937d3a0e1114558a8da03f54dce5e9f6585c7a6df21540",
        "md5": "0d332688a82321916ba8fed0f63101ed",
        "sha256": "d940965683df73ef009a7da9dd81634ed312aca408b2f5ab56fddf055e745a8d"
      },
      "downloads": -1,
      "filename": "ComPP-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "0d332688a82321916ba8fed0f63101ed",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 6836,
      "upload_time": "2021-07-23T08:59:03",
      "upload_time_iso_8601": "2021-07-23T08:59:03.319567Z",
      "url": "https://files.pythonhosted.org/packages/53/e3/8c3f279e486797937d3a0e1114558a8da03f54dce5e9f6585c7a6df21540/ComPP-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}