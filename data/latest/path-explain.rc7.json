{
  "info": {
    "author": "Joseph Janizek, Pascal Sturmfels",
    "author_email": "jjanizek@uw.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# Path Explain\n\nA repository for explaining feature importances and feature interactions in deep neural networks using path attribution methods.\n\nThis repository contains tools to interpret and explain machine learning models using [Integrated Gradients](https://arxiv.org/abs/1703.01365) and [Expected Gradients](https://arxiv.org/abs/1906.10670). In addition, it contains code to explain _interactions_ in deep networks using Integrated Hessians and Expected Hessians - methods that we introduced in our most recent paper: [\"Explaining Explanations: Axiomatic Feature Interactions for Deep Networks\"](https://www.jmlr.org/papers/v22/20-1223.html). If you use our work to explain your networks, please cite this paper.\n\n```\n@article{janizek2020explaining,\n  author  = {Joseph D. Janizek and Pascal Sturmfels and Su-In Lee},\n  title   = {Explaining Explanations: Axiomatic Feature Interactions for Deep Networks},\n  journal = {Journal of Machine Learning Research},\n  year    = {2021},\n  volume  = {22},\n  number  = {104},\n  pages   = {1-54},\n  url     = {http://jmlr.org/papers/v22/20-1223.html}\n}\n```\n\nThis repository contains two important directories: the `path_explain` directory, which contains the packages used to interpret and explain machine learning models, and the `examples` directory, which contains many examples using the `path_explain` module to explain different models on different data types.\n\n## Installation\n\nThe easiest way to install this package is by using pip:\n```\npip install path-explain\n```\nAlternatively, you can clone this repository to re-run and explore the examples provided.\n\n## Compatibility\nThis package was written to support TensorFlow 2.0 (in eager execution mode) with Python 3. We have no current plans to support earlier versions of TensorFlow or Python.\n\n## API\nAlthough we don't yet have formal API documentation, the underlying code does a pretty good job at explaining the API. See the code for generating [attributions](https://github.com/suinleelab/path_explain/blob/master/path_explain/explainers/path_explainer_tf.py#L302) and [interactions](https://github.com/suinleelab/path_explain/blob/master/path_explain/explainers/path_explainer_tf.py#L445) to better understand what the arguments to these functions mean.\n\n## Examples\n\nFor a simple, quick example to get started using this repository, see the `example_usage.ipynb` notebook in the top-level directory of this repository. It gives an overview of the functionality provided by this repository. For more advanced examples, keep reading on.\n\n### Tabular Data using Expected Gradients and Expected Hessians\n\nOur repository can easily be adapted to explain attributions and interactions learned on tabular data.\n```python\n# other import statements...\nfrom path_explain import PathExplainerTF, scatter_plot, summary_plot\n\n### Code to train a model would go here\nx_train, y_train, x_test, y_test = datset()\nmodel = ...\nmodel.fit(x_train, y_train, ...)\n###\n\n### Generating attributions using expected gradients\nexplainer = PathExplainerTF(model)\nattributions = explainer.attributions(inputs=x_test,\n                                      baseline=x_train,\n                                      batch_size=100,\n                                      num_samples=200,\n                                      use_expectation=True,\n                                      output_indices=0)\n###\n\n### Generating interactions using expected hessians\ninteractions = explainer.interactions(inputs=x_test,\n                                      baseline=x_train,\n                                      batch_size=100,\n                                      num_samples=200,\n                                      use_expectation=True,\n                                      output_indices=0)\n###\n```\n\nOnce we've generated attributions and interactions, we can use the provided plotting modules to help visualize them. First we plot a summary of the top features and their attribution values:\n```python\n### First we need a list of strings denoting the name of each feature\nfeature_names = ...\n###\n\nsummary_plot(attributions=attributions,\n             feature_values=x_test,\n             feature_names=feature_names,\n             plot_top_k=10)\n```\n![Heart Disease Summary Plot](/images/heart_disease.png)\n\nSecond, we plot an interaction our model has learned between maximum achieved heart rate and gender:\n```python\nscatter_plot(attributions=attributions,\n             feature_values=x_test,\n             feature_index='max. achieved heart rate',\n             interactions=interactions,\n             color_by='is male',\n             feature_names=feature_names,\n             scale_y_ind=True)\n```\n![Interaction: Heart Rate and Gender](/images/max_heart_rate.png)\n\nThe model used to generate the above interactions is a two layer neural network trained on the [UCI Heart Disease Dataset](https://archive.ics.uci.edu/ml/datasets/Heart+Disease). Interactions learned by this model were featured in our paper. To learn more about this particular model and the experimental setup, see [the notebook used to train and explain the model](https://github.com/suinleelab/path_explain/blob/master/examples/tabular/heart_disease/attributions.ipynb).\n\n\n### Explaining an NLP model using Integrated Gradients and Integrated Hessians\nAs discussed in our paper, we can use Integrated Hessians to get interactions in language models. We explain a transformer from the [HuggingFace Transformers Repository](https://github.com/huggingface/transformers).\n```python\nfrom transformers import DistilBertTokenizer, TFDistilBertForSequenceClassification, \\\n                         DistilBertConfig, glue_convert_examples_to_features, \\\n                         glue_processors\n\n# This is a custom explainer to explain huggingface models\nfrom path_explain import EmbeddingExplainerTF, text_plot, matrix_interaction_plot, bar_interaction_plot\n\ntokenizer = DistilBertTokenizer.from_pretrained('distilbert-base-uncased')\nconfig = DistilBertConfig.from_pretrained('distilbert-base-uncased', num_labels=num_labels)\nmodel = TFDistilBertForSequenceClassification.from_pretrained('distilbert-base-uncased', config=config)\n\n### Some custom code to fine-tune the model on a sentiment analysis task...\nmax_length = 128\ndata, info = tensorflow_datasets.load('glue/sst-2', with_info=True)\ntrain_dataset = glue_convert_examples_to_features(data['train'],\n                                                  tokenizer,\n                                                  max_length,\n                                                  'sst-2)\nvalid_dataset = glue_convert_examples_to_features(data['validation'],\n                                                  tokenizer,\n                                                  max_length,\n                                                  'sst-2')\n...\n### we won't include the whole fine-tuning code. See the HuggingFace repository for more.\n\n### Here we define functions that represent two pieces of the model:\n### embedding and prediction\ndef embedding_model(batch_ids):\n    batch_embedding = model.distilbert.embeddings(batch_ids)\n    return batch_embedding\n\ndef prediction_model(batch_embedding):\n    # Note: this isn't exactly the right way to use the attention mask.\n    # It should actually indicate which words are real words. This\n    # makes the coding easier however, and the output is fairly similar,\n    # so it suffices for this tutorial.\n    attention_mask = tf.ones(batch_embedding.shape[:2])\n    attention_mask = tf.cast(attention_mask, dtype=tf.float32)\n    head_mask = [None] * model.distilbert.num_hidden_layers\n\n    transformer_output = model.distilbert.transformer([batch_embedding, attention_mask, head_mask], training=False)[0]\n    pooled_output = transformer_output[:, 0]\n    pooled_output = model.pre_classifier(pooled_output)\n    logits = model.classifier(pooled_output)\n    return logits\n###\n\n### We need some data to explain\nfor batch in valid_dataset.take(1):\n    batch_input = batch[0]\n\nbatch_ids = batch_input['input_ids']\nbatch_embedding = embedding_model(batch_ids)\n\nbaseline_ids = np.zeros((1, 128), dtype=np.int64)\nbaseline_embedding = embedding_model(baseline_ids)\n###\n\n### We are finally ready to explain our model\nexplainer = EmbeddingExplainerTF(prediction_model)\nattributions = explainer.attributions(inputs=batch_embedding,\n                                      baseline=baseline_embedding,\n                                      batch_size=32,\n                                      num_samples=256,\n                                      use_expectation=False,\n                                      output_indices=1)\n###\n\n### For interactions, the hessian is rather large so we use a very small batch size\ninteractions = explainer.interactions(inputs=batch_embedding,\n                                      baseline=baseline_embedding,\n                                      batch_size=1,\n                                      num_samples=256,\n                                      use_expectation=False,\n                                      output_indices=1)\n###\n```\nWe can plot the learned attributions and interactions as follows. First we plot the attributions:\n```python\n### First we need to decode the tokens from the batch ids.\nbatch_sentences = ...\n### Doing so will depend on how you tokenized your model!\n\ntext_plot(batch_sentences[0],\n          attributions[0],\n          include_legend=True)\n```\n![Showing feature attributions in text](/images/little_to_love_text.png)\n\nThen we plot the interactions:\n```python\nbar_interaction_plot(interactions[0],\n                     batch_sentences[0],\n                     top_k=5)\n```\n![Showing feature interactions in text](/images/little_to_love_bar.png)\n\nIf you would rather plot the full matrix of attributions rather than the top interactions in a bar plot, our package also supports this. First we show the attributions:\n```python\ntext_plot(batch_sentences[1],\n          attributions[1],\n          include_legend=True)\n```\n![Showing additional attributions](/images/painfully_funny_text.png)\n\nAnd then we show the full interaction matrix. Here we've zeroed out the diagonals so you can better see the off-diagonal terms.\n```python\nmatrix_interaction_plot(interaction_list[1],\n                        token_list[1])\n```\n![Showing the full matrix of feature interactions](/images/painfully_funny_matrix.png)\n\nThis example - interpreting [DistilBERT](https://arxiv.org/abs/1910.01108) - was also featured in our paper. You can examine the setup more [here](https://github.com/suinleelab/path_explain/tree/master/examples/natural_language/transformers). For more examples, see the `examples` directory in this repository.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/suinleelab/path_explain",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "path-explain",
    "package_url": "https://pypi.org/project/path-explain/",
    "platform": "",
    "project_url": "https://pypi.org/project/path-explain/",
    "project_urls": {
      "Homepage": "https://github.com/suinleelab/path_explain"
    },
    "release_url": "https://pypi.org/project/path-explain/0.0.7/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A package for explaining attributions and interactions in deep neural networks",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11438917,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38f71cd45e55911682c30742841b08ef59386c454c310902e45c69ca00f20bca",
          "md5": "e82aa5a5a19f359ddec86a4d55055385",
          "sha256": "88220d1f2d2b1b3cbd66cf47fed10e9907e3c2b324afc3c5c4ea280cdc3830f6"
        },
        "downloads": -1,
        "filename": "path_explain-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e82aa5a5a19f359ddec86a4d55055385",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13788,
        "upload_time": "2020-02-10T23:56:35",
        "upload_time_iso_8601": "2020-02-10T23:56:35.928545Z",
        "url": "https://files.pythonhosted.org/packages/38/f7/1cd45e55911682c30742841b08ef59386c454c310902e45c69ca00f20bca/path_explain-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aae1bf8d846e7c755099bbb168c0046acd0d0f9c75a06c129edfbb9ff6eafa33",
          "md5": "de6e0dfcaa4f9db29e3dabee3a7ecd51",
          "sha256": "98a7ffacd2bf458cfd5fa64d70c31456c9911bf607d67e1fb86bc7cd849fc71f"
        },
        "downloads": -1,
        "filename": "path_explain-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de6e0dfcaa4f9db29e3dabee3a7ecd51",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 2188,
        "upload_time": "2020-02-11T00:08:31",
        "upload_time_iso_8601": "2020-02-11T00:08:31.616986Z",
        "url": "https://files.pythonhosted.org/packages/aa/e1/bf8d846e7c755099bbb168c0046acd0d0f9c75a06c129edfbb9ff6eafa33/path_explain-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f299ff0d75a49067d6a62d3d9027ee7bbb52e06183d4a705c03badde8d036361",
          "md5": "f31b7c99bd1053753f508339319843be",
          "sha256": "327d620e5186f8c9a26b29a29ac34188ff8b98889aa690f0f1ed454110f40503"
        },
        "downloads": -1,
        "filename": "path_explain-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f31b7c99bd1053753f508339319843be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1147,
        "upload_time": "2020-02-11T00:08:32",
        "upload_time_iso_8601": "2020-02-11T00:08:32.607146Z",
        "url": "https://files.pythonhosted.org/packages/f2/99/ff0d75a49067d6a62d3d9027ee7bbb52e06183d4a705c03badde8d036361/path_explain-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e7970270f1e652c17d6ad30a28b7d6cd5c32019b9b335ec6e8c1aa3e325eca7",
          "md5": "5dd674b622042c655fd004a51055cb1f",
          "sha256": "a0cbebf45a5086cd0247ee6962f36edcb08e049d3da69259eaa40bfcfecb7be4"
        },
        "downloads": -1,
        "filename": "path_explain-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5dd674b622042c655fd004a51055cb1f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13788,
        "upload_time": "2020-02-11T00:19:23",
        "upload_time_iso_8601": "2020-02-11T00:19:23.593411Z",
        "url": "https://files.pythonhosted.org/packages/4e/79/70270f1e652c17d6ad30a28b7d6cd5c32019b9b335ec6e8c1aa3e325eca7/path_explain-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fab8e1e613ab18f3efd2acb1a01ccecf8745b75956830884049fa00edbafc1d0",
          "md5": "226fdd68856f0df827156a0c1b47b536",
          "sha256": "2b687c8f2180f7adc51b73176ec3c6c7400a80267184e8a0669bb17d119ca595"
        },
        "downloads": -1,
        "filename": "path_explain-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "226fdd68856f0df827156a0c1b47b536",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10416,
        "upload_time": "2020-02-11T00:19:25",
        "upload_time_iso_8601": "2020-02-11T00:19:25.252409Z",
        "url": "https://files.pythonhosted.org/packages/fa/b8/e1e613ab18f3efd2acb1a01ccecf8745b75956830884049fa00edbafc1d0/path_explain-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "009ca03d8cc1910764aa7960a44143905bdf275b4d4bdc5a78d66360d53b34fa",
          "md5": "d9000042ff1838468afe68eb45a4d0b4",
          "sha256": "35e46d43d42d3ecff9f9d9d0c6d7372d226f25f7cd6e1f93d1ee139eb19fd0be"
        },
        "downloads": -1,
        "filename": "path_explain-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d9000042ff1838468afe68eb45a4d0b4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19063,
        "upload_time": "2020-02-11T00:21:26",
        "upload_time_iso_8601": "2020-02-11T00:21:26.656043Z",
        "url": "https://files.pythonhosted.org/packages/00/9c/a03d8cc1910764aa7960a44143905bdf275b4d4bdc5a78d66360d53b34fa/path_explain-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a490f253947f81ddf0c231523f8d65429b1a0e31541ba70526c96f17636cd48",
          "md5": "68475c66686530db124871ddcfec0291",
          "sha256": "109a66c438d4dbd5586b43b26ecd44c81bf4815e9d31d5998c0705eca56514c4"
        },
        "downloads": -1,
        "filename": "path_explain-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "68475c66686530db124871ddcfec0291",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14650,
        "upload_time": "2020-02-11T00:21:28",
        "upload_time_iso_8601": "2020-02-11T00:21:28.948980Z",
        "url": "https://files.pythonhosted.org/packages/5a/49/0f253947f81ddf0c231523f8d65429b1a0e31541ba70526c96f17636cd48/path_explain-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "817c75f01a7e50d9ba889c5ebf7a22cb8957617179f899b637535a75a43172ba",
          "md5": "7f22da5aebc947eecd5acb117f7dd252",
          "sha256": "0f8db3cdb81a87f1b49d9efc5bfe5c3f43029a87d941c8364915916ce668519d"
        },
        "downloads": -1,
        "filename": "path_explain-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f22da5aebc947eecd5acb117f7dd252",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19063,
        "upload_time": "2020-02-11T01:11:02",
        "upload_time_iso_8601": "2020-02-11T01:11:02.449562Z",
        "url": "https://files.pythonhosted.org/packages/81/7c/75f01a7e50d9ba889c5ebf7a22cb8957617179f899b637535a75a43172ba/path_explain-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fce6bf6faa28c5299b737b1f8afea549201e213771f255769872591d876f96be",
          "md5": "4bf8b4ff28ff6133aa0775401685e2db",
          "sha256": "be975719a9639a87fbcbad20994b687f70563d267cbba284a632b3ef073e834d"
        },
        "downloads": -1,
        "filename": "path_explain-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4bf8b4ff28ff6133aa0775401685e2db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14661,
        "upload_time": "2020-02-11T01:11:05",
        "upload_time_iso_8601": "2020-02-11T01:11:05.164455Z",
        "url": "https://files.pythonhosted.org/packages/fc/e6/bf6faa28c5299b737b1f8afea549201e213771f255769872591d876f96be/path_explain-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be600f981e7659fae3eda1aae428576c9314cf5ac3ad00d20923384eb2bc2f59",
          "md5": "a0e265e9744d17dc0ea6c2db8af638f3",
          "sha256": "72cb1da46f39db2cca1714ee6952c0865e2288350b991f2ec5bdfd1a04544122"
        },
        "downloads": -1,
        "filename": "path_explain-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a0e265e9744d17dc0ea6c2db8af638f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 27733,
        "upload_time": "2021-09-13T14:43:53",
        "upload_time_iso_8601": "2021-09-13T14:43:53.964353Z",
        "url": "https://files.pythonhosted.org/packages/be/60/0f981e7659fae3eda1aae428576c9314cf5ac3ad00d20923384eb2bc2f59/path_explain-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b78a30f0ee51d2d8829460b1a9c4041ef4d4bf2b3294fde7c941ab036f9bb87",
          "md5": "1d7d34644bc1e5b1d9cbc04d5ca89e2a",
          "sha256": "845cddf2202739ffc0a225089f3fb9682a1ba42739b7269476fe31d90a7ac695"
        },
        "downloads": -1,
        "filename": "path_explain-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "1d7d34644bc1e5b1d9cbc04d5ca89e2a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24621,
        "upload_time": "2021-09-13T14:43:55",
        "upload_time_iso_8601": "2021-09-13T14:43:55.597037Z",
        "url": "https://files.pythonhosted.org/packages/7b/78/a30f0ee51d2d8829460b1a9c4041ef4d4bf2b3294fde7c941ab036f9bb87/path_explain-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10e8f10c21bdc80e1ac7c1003ed8f34a1d615b376da8573e4e02425cd460d926",
          "md5": "47b5e310f3d5811413c3687c54a97fff",
          "sha256": "963388fbb20eafe4d66b2fd05a96dd3b3979ce19b80efbc73d8a8f39f64bd813"
        },
        "downloads": -1,
        "filename": "path_explain-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47b5e310f3d5811413c3687c54a97fff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 27732,
        "upload_time": "2021-09-13T16:21:37",
        "upload_time_iso_8601": "2021-09-13T16:21:37.103626Z",
        "url": "https://files.pythonhosted.org/packages/10/e8/f10c21bdc80e1ac7c1003ed8f34a1d615b376da8573e4e02425cd460d926/path_explain-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88d1f4da159b4f8ac65a3107356d554410c68c94aec02a5e524d32abe85aae7d",
          "md5": "be629c2e64ace740e0c604d51a0aac7c",
          "sha256": "afcb67bd966848f4e13b8896a6657207c64c27daed687a56c870cefb97db971d"
        },
        "downloads": -1,
        "filename": "path_explain-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "be629c2e64ace740e0c604d51a0aac7c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24620,
        "upload_time": "2021-09-13T16:21:39",
        "upload_time_iso_8601": "2021-09-13T16:21:39.059222Z",
        "url": "https://files.pythonhosted.org/packages/88/d1/f4da159b4f8ac65a3107356d554410c68c94aec02a5e524d32abe85aae7d/path_explain-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10e8f10c21bdc80e1ac7c1003ed8f34a1d615b376da8573e4e02425cd460d926",
        "md5": "47b5e310f3d5811413c3687c54a97fff",
        "sha256": "963388fbb20eafe4d66b2fd05a96dd3b3979ce19b80efbc73d8a8f39f64bd813"
      },
      "downloads": -1,
      "filename": "path_explain-0.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "47b5e310f3d5811413c3687c54a97fff",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 27732,
      "upload_time": "2021-09-13T16:21:37",
      "upload_time_iso_8601": "2021-09-13T16:21:37.103626Z",
      "url": "https://files.pythonhosted.org/packages/10/e8/f10c21bdc80e1ac7c1003ed8f34a1d615b376da8573e4e02425cd460d926/path_explain-0.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "88d1f4da159b4f8ac65a3107356d554410c68c94aec02a5e524d32abe85aae7d",
        "md5": "be629c2e64ace740e0c604d51a0aac7c",
        "sha256": "afcb67bd966848f4e13b8896a6657207c64c27daed687a56c870cefb97db971d"
      },
      "downloads": -1,
      "filename": "path_explain-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "be629c2e64ace740e0c604d51a0aac7c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 24620,
      "upload_time": "2021-09-13T16:21:39",
      "upload_time_iso_8601": "2021-09-13T16:21:39.059222Z",
      "url": "https://files.pythonhosted.org/packages/88/d1/f4da159b4f8ac65a3107356d554410c68c94aec02a5e524d32abe85aae7d/path_explain-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}