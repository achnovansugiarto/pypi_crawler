{
  "info": {
    "author": "Lucas Levassor",
    "author_email": "lucaslevassor@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "\n.. image:: https://raw.githubusercontent.com/hiyama341/ConStrain/main/pictures/constrain1.svg?token=GHSAT0AAAAAABTYCY2LIAJ7B7ZTWBR4NMHIYZUJQ4A\n  :width: 400\n  :alt: ConStrain logo \n\nConStrain: Literate programming can streamline bioengineering workflows\n-----------------------------------------------------------------------\n\n.. summary-start\n\n.. image:: https://badge.fury.io/py/ConStrain.svg\n        :target: https://badge.fury.io/py/ConStrain\n\n.. image:: https://github.com/hiyama341/ConStrain/actions/workflows/main.yml/badge.svg\n        :target: https://github.com/hiyama341/ConStrain/actions\n\n.. image:: https://readthedocs.org/projects/constrain/badge/?version=latest\n        :target: https://constrain.readthedocs.io/en/latest/?version=latest\n        :alt: Documentation Status\n\n.. image:: https://img.shields.io/github/license/hiyama341/ConStrain\n        :target: https://github.com/hiyama341/ConStrain/blob/main/LICENSE\n\n.. image:: https://img.shields.io/pypi/pyversions/ConStrain.svg\n        :target: https://pypi.org/project/ConStrain/\n        :alt: Supported Python Versions\n\n.. image:: https://codecov.io/gh/hiyama341/ConStrain/branch/main/graph/badge.svg?token=P4457QACUY \n        :target: https://codecov.io/gh/hiyama341/ConStrain\n\n.. image:: https://img.shields.io/badge/code%20style-black-black\n        :target: https://black.readthedocs.io/en/stable/\n\n\nWhat is ConStrain?\n~~~~~~~~~~~~~~~~~~\n\n**ConStrain** is an easy-to-use python package with functions that\ncan be used in literate programming to simulate steps of a strain \nconstruction cycle from generating genetic parts, to designing a \ncombinatorial library along with instructions for the assembly. \nA fully integrated LIMS system is presented to keep track of samples \nand allocation through both a commercial Benchling API and a low-level CSV file database. \n\nHere, we demonstrate the use of ConStrain in a complex machine learning-guided\nmetabolic engineering task. We envision that literate programming for biology \ncan be adapted for any experimental workflow and be mixed and matched for the \nbenefit of the user. As this tool is built to be flexible through its open-source\nPython platform, future repetitive tasks can be automated and thus increase \nthe speed at which we engineer biology. \n\nCurious about how you can build strains easier and faster? Head over to our `Google Colab notebooks <https://github.com/hiyama341/ConStrain/tree/main/colab_notebooks>`__\nand give it a try.\n\nPlease cite our paper (link tba) if you've used ConStrain in a scientific publication.\n\n.. summary-end\n\n\nFeatures\n--------\n\n* Combinatorial library generation\n* HT cloning and transformation workflows\n* Flowbot One instructions\n* CSV-based LIMS system as well as integration to Benchling\n* Genotyping of microbial strains\n* Advanced Machine Learning of biological datasets with the AutoML `H2O <https://docs.h2o.ai/h2o/latest-stable/h2o-docs/automl.html>`__\n* Workflows for selecting enzyme homologs\n* Promoter selection workflows from RNA-seq datasets\n* Data analysis of large LC-MS datasets along with workflows for analysis\n\n\n..  image:: https://raw.githubusercontent.com/hiyama341/ConStrain/main/pictures/DBTL_ConStrain_with_modules1.svg\n    :width: 800\n    :alt: Overview of ConStrain's features throughout the DBTL cycle. \n\nGetting started\n~~~~~~~~~~~~~~~\nTo get started with making microbial strains in an HT manner please follow the steps below: \n\n1. Install ConStrain. You will find the necessary information below for installation.\n\n2. Check out our `notebooks <https://github.com/hiyama341/ConStrain/tree/main/colab_notebooks>`__ for inspiration to make HT strain construction with ConStrain.\n\n3. You can start making your own workflows by importing ConStrain into either Google colab or Jupyter lab/notebooks.\n\n\nColab notebooks\n---------------\nAs a proof of concept we show how ConStrain and literate programming can be used to streamline bioengineering workflows.\nThese workflows should serve as a guide or a help to build your own workflows and thereby harnessing the power of literate programming with ConStrain. \n\nSpecifically, in this study we present how ConStrain and literate programming to build simulation-guided, iterative,\nand evolution-guided laboratory workflows for optimizing strictosidine production in yeast.\n\nBelow you can find all the notebooks developed in this work. Just click the Google colab badge to start the workflows. \n\nFirst DBTL cycle\n~~~~~~~~~~~~~~~~\n\n\n\n**DESIGN:**\n\n..  |Notebook 00| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 00\n    :target: https://colab.research.google.com/github/hiyama341/ConStrain/blob/main/colab_notebooks/00_1_DESIGN_Homologs.ipynb \n\n..  |Notebook 01| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 01\n    :target: https://colab.research.google.com/github/hiyama341/ConStrain/blob/main/colab_notebooks/01_1_DESIGN_Promoters.ipynb\n\n..  |Notebook 02| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 02\n    :target: https://colab.research.google.com/github/hiyama341/ConStrain/blob/main/colab_notebooks/02_1_DESIGN_Combinatorial_library.ipynb\n\n\n00. Describes how we can automatically fetch homologs from NCBI from a query in a standardizable and repeatable way |Notebook 00|. \n\n\n01. Describes how promoters can be selected from RNAseq data and fetched from online database with various quality measurements implemented |Notebook 01|.\n\n\n\n02. Describes how a combinatorial library can be generated with the DesignAssembly class along with robot executable intructions |Notebook 02|. \n\n\n\n\n**BUILD:**\n\n..  |Notebook 03| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 03\n    :target: https://colab.research.google.com/github/hiyama341/ConStrain/blob/main/colab_notebooks/03_1_BUILD_USER_gRNA_plasmid.ipynb\n\n\n..  |Notebook 04| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 04\n    :target: https://colab.research.google.com/github/hiyama341/ConStrain/blob/main/colab_notebooks/04_1_BUILD_Background_strain.ipynb\n\n\n..  |Notebook 05| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 05\n    :target: https://colab.research.google.com/github/hiyama341/ConStrain/blob/main/colab_notebooks/05_1_BUILD_CombinatorialLibrary_AllStrains.ipynb\n\n\n03. Describes the assembly of a CRISPR plasmid with USER cloning |Notebook 03|.\n\n04. Describes the construction of the background strain by K/O of G8H and CPR |Notebook 04|.\n\n05. Shows how the first combinatorial library was generated for 1280 possible combinations |Notebook 05|. \n\n\n\n**TEST:**\n\n\n..  |Notebook 06| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 06\n    :target: https://colab.research.google.com/github/hiyama341/ConStrain/blob/main/colab_notebooks/06_1_TEST_LibraryCharacterisation.ipynb\n\n\n06. Describes data processing of LC-MS data and genotyping of the generated strains |Notebook 06|.  \n\n\n**LEARN:**\n\n..  |Notebook 07| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 07\n    :target: https://colab.research.google.com/github/hiyama341/ConStrain/blob/main/colab_notebooks/07_1_LEARN_DataAnalysis.ipynb\n\n\n07. Describes how we use AutoML to predict the best combinations for a targeted second round of library construction |Notebook 07|.\n\n\n\nSecond DBTL cycle\n~~~~~~~~~~~~~~~~~\n\n\n\n**DESIGN:**\n\n..  |Notebook 08| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 08\n    :target: https://colab.research.google.com/github/hiyama341/ConStrain/blob/main/colab_notebooks/09_BUILD_Library2.ipynb\n\n08. Shows how results from the ML can be translated into making a target library of strains |Notebook 08|. \n\n\n\n**BUILD:**\n\n\n..  |Notebook 09| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 09\n    :target: https://colab.research.google.com/github/hiyama341/ConStrain/blob/main/colab_notebooks/09_2_BUILD_CombinatorialLibrary.ipynb\n\n\n09. Shows the construction of a targeted library of strains |Notebook 09|. \n\n\n\n\n**TEST:**\n\n..  |Notebook 10| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 10\n    :target: https://colab.research.google.com/github/hiyama341/ConStrain/blob/main/colab_notebooks/10_2_TEST_Library_Characterization.ipynb\n\n\n\n10. Describes the data processing of LC-MS data like in notebook 7 |Notebook 10|.\n\n\n\n\n**LEARN:**\n\n..  |Notebook 11| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 11\n    :target: https://colab.research.google.com/github/hiyama341/ConStrain/blob/main/colab_notebooks/11_2_LEARN_DataAnalysisML.ipynb\n\n\n11. Second ML cycle of ML showing how the model increased performance and saturation of best performing strains |Notebook 11|. \n\n\n\nInstallation\n~~~~~~~~~~~~\n\n.. installation-start\n\nUse pip to install ConStrain from `PyPI <https://pypi.org/project/ConStrain/>`__.\n\n::\n\n    $ pip install constrain\n\n\nIf you want to develop or if you cloned the repository from our `GitHub <https://github.com/hiyama341/ConStrain/>`__\nyou can install ConStrain in the following way.\n\n::\n\n    $ pip install -e <path-to-constrain-repo>  \n\n\nYou might need to run these commands with administrative\nprivileges if you're not using a virtual environment (using ``sudo`` for example).\nPlease check the `documentation <https://constrain.readthedocs.io/en/latest/installation.html#>`__\nfor further details.\n\n.. installation-end\n\nDocumentation and Examples\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDocumentation is available on through numerous Google Colab notebooks with\nexamples on how to use ConStrain and how we use these notebooks for strain\nconstrunction. The Colab notebooks can be found here \n`constrain.notebooks <https://github.com/hiyama341/ConStrain/tree/main/colab_notebooks>`__. \n\n* Documentation: https://constrain.readthedocs.io.\n\n\nContributions\n~~~~~~~~~~~~~\n\nContributions are very welcome! Check our `guidelines <https://constrain.readthedocs.io/en/latest/contributing.html>`__ for instructions how to contribute.\n\n\nLicense\n~~~~~~~\n* Free software: MIT license\n\nCredits\n-------\n- This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n- ConStrains logo was made by Jonas Krogh Fischer. Check out his `website <http://jkfischerproductions.com/kea/portfolio/index.html>`__. \n\nHistory\n-------\n\n0.1.0 (2022-07-11)\n------------------\n\n* First release on PyPI.\n\n\n0.2.0 (2022-08-08)\n------------------\n\n* New genotyping module release release on PyPI.\n\n\n\n0.3.0 (2023-17-01)\n------------------\n\n* New ML module\n* New utils module\n* New plotting module\n* New files in the design module including: fetch_sequences.py, retrieve_gene_homologs.py, teselagen_helpers.py\n* New functions in transformation.py and PCR.py\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hiyama341/ConStrain",
    "keywords": "ConStrain",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ConStrain",
    "package_url": "https://pypi.org/project/ConStrain/",
    "platform": null,
    "project_url": "https://pypi.org/project/ConStrain/",
    "project_urls": {
      "Homepage": "https://github.com/hiyama341/ConStrain"
    },
    "release_url": "https://pypi.org/project/ConStrain/0.3.0/",
    "requires_dist": [
      "pydna (>=4.0.7)",
      "pandas (>=1.3.0)",
      "benchlingapi (>=2.1.12)",
      "numpy (>=1.21.0)",
      "biopython (>=1.79)",
      "python-dotenv (>=0.20.0)",
      "openpyxl (>=3.0.9)",
      "wheel (>=0.37.1)",
      "matplotlib (>=3.5.1)",
      "intermine (>=1.12.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "A Python package for constructing microbial strains",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16457608,
  "releases": {
    "0.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2045cc89892a72ca9df3532a9bbe513d26b650e66da60661161f996c69ee3ac2",
          "md5": "d827fd21bd6e9bc09e109272ba8e534e",
          "sha256": "373e46308330bbbbe29a4c08eed00c42e8077225fd0955e69a095af027c42771"
        },
        "downloads": -1,
        "filename": "ConStrain-0.2.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d827fd21bd6e9bc09e109272ba8e534e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 46605,
        "upload_time": "2022-10-22T12:30:48",
        "upload_time_iso_8601": "2022-10-22T12:30:48.232319Z",
        "url": "https://files.pythonhosted.org/packages/20/45/cc89892a72ca9df3532a9bbe513d26b650e66da60661161f996c69ee3ac2/ConStrain-0.2.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90c511f24b81fe66121ee1da1ff369502ff8524a71e45e322fc0b80488f2d46c",
          "md5": "b2a6d8f99f18218e0c06a6412f598700",
          "sha256": "34737fe4ab0cdf56f9c95824fba99bfc284fc758bf5e7902e70759fc5a888893"
        },
        "downloads": -1,
        "filename": "ConStrain-0.2.8.tar.gz",
        "has_sig": false,
        "md5_digest": "b2a6d8f99f18218e0c06a6412f598700",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 60476,
        "upload_time": "2022-10-22T12:30:49",
        "upload_time_iso_8601": "2022-10-22T12:30:49.867229Z",
        "url": "https://files.pythonhosted.org/packages/90/c5/11f24b81fe66121ee1da1ff369502ff8524a71e45e322fc0b80488f2d46c/ConStrain-0.2.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "786dfb29be5403723d967c8f9eb4a254b00d0538cf64d4afcbc3aaef1892e807",
          "md5": "bc0cf74dfe3a78bacfefcba6fec8ea5c",
          "sha256": "ff607930063652ef7ad3f04003b6c9169a3e253004f16423d29695437ac223b0"
        },
        "downloads": -1,
        "filename": "ConStrain-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc0cf74dfe3a78bacfefcba6fec8ea5c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 65778,
        "upload_time": "2023-01-17T12:50:05",
        "upload_time_iso_8601": "2023-01-17T12:50:05.161424Z",
        "url": "https://files.pythonhosted.org/packages/78/6d/fb29be5403723d967c8f9eb4a254b00d0538cf64d4afcbc3aaef1892e807/ConStrain-0.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de40979791ff16fa126c94136f8620ea931652ccda63798aa64493d66b755b7e",
          "md5": "3ab82e85b4bc11f3c5f8de57a00eb04f",
          "sha256": "1e22608fd67ac9693f2d2e4e8ac5093605a9e4c20965f3883b7df275e60afd54"
        },
        "downloads": -1,
        "filename": "ConStrain-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3ab82e85b4bc11f3c5f8de57a00eb04f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 76078,
        "upload_time": "2023-01-17T12:50:06",
        "upload_time_iso_8601": "2023-01-17T12:50:06.419890Z",
        "url": "https://files.pythonhosted.org/packages/de/40/979791ff16fa126c94136f8620ea931652ccda63798aa64493d66b755b7e/ConStrain-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "786dfb29be5403723d967c8f9eb4a254b00d0538cf64d4afcbc3aaef1892e807",
        "md5": "bc0cf74dfe3a78bacfefcba6fec8ea5c",
        "sha256": "ff607930063652ef7ad3f04003b6c9169a3e253004f16423d29695437ac223b0"
      },
      "downloads": -1,
      "filename": "ConStrain-0.3.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bc0cf74dfe3a78bacfefcba6fec8ea5c",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 65778,
      "upload_time": "2023-01-17T12:50:05",
      "upload_time_iso_8601": "2023-01-17T12:50:05.161424Z",
      "url": "https://files.pythonhosted.org/packages/78/6d/fb29be5403723d967c8f9eb4a254b00d0538cf64d4afcbc3aaef1892e807/ConStrain-0.3.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de40979791ff16fa126c94136f8620ea931652ccda63798aa64493d66b755b7e",
        "md5": "3ab82e85b4bc11f3c5f8de57a00eb04f",
        "sha256": "1e22608fd67ac9693f2d2e4e8ac5093605a9e4c20965f3883b7df275e60afd54"
      },
      "downloads": -1,
      "filename": "ConStrain-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3ab82e85b4bc11f3c5f8de57a00eb04f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 76078,
      "upload_time": "2023-01-17T12:50:06",
      "upload_time_iso_8601": "2023-01-17T12:50:06.419890Z",
      "url": "https://files.pythonhosted.org/packages/de/40/979791ff16fa126c94136f8620ea931652ccda63798aa64493d66b755b7e/ConStrain-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}