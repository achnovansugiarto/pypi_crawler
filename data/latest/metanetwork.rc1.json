{
  "info": {
    "author": "paradoxysm",
    "author_email": "paradoxysm.dev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "## Meta-Network\n\n[![Travis](https://flat.badgen.net/travis/paradoxysm/metanetwork?label=build)](https://travis-ci.com/paradoxysm/metanetwork)\n[![Codecov](https://flat.badgen.net/codecov/c/github/paradoxysm/metanetwork?label=coverage)](https://codecov.io/gh/paradoxysm/metanetwork)\n[![GitHub](https://flat.badgen.net/github/license/paradoxysm/metanetwork)](https://github.com/paradoxysm/metanetwork/blob/master/LICENSE)\n\nMeta-Network is an approach to ensemble learning where base learners are not constrained to the same task but rather take on distinct roles in the ensemble. Commonly, ensembles of classifiers do not have a distinction in each base learner's role. While each base learner may be diversified through bootstrapping or use of different parameters/models, their objectives are universally the same: classify its input to the best of its ability. Stacking and meta-classifiers introduce a sense of roles but each layer retains the same objective. Meta-Networks, however, remove this universal objective. By training the ensemble as a whole unit through backpropagation, each base learner may learn different objectives that orchestrate together to produce the ultimate objective, resulting in greater capacity for higher performance and solutions for complex problems.\n\nThis package hosts the basic meta-network model as well as additional implementations of the principle.\n\nMore details regarding Meta-Networks can be found in the documentation [here](https://github.com/paradoxysm/metanetwork/tree/master/doc).\n\n## Installation\n\nOnce you have a suitable python environment setup, `metanetwork` can be easily installed using `pip`:\n```\npip install metanetwork\n```\n> `metanetwork` is tested and supported on Python 3.4 up to Python 3.8. Usage on other versions of Python is not guaranteed to work as intended.\n\n## Usage\n\nMeta-Networks are quite simple to use, although they do need some encouragement by creating the meta-network structure first. They generally follow `sklearn` API style.\n\n```python\nfrom metanetwork import MetaNetwork, NeuralNetwork\n\n# Create ensemble with a first layer of 3 estimators and a final layer of 1 estimator\nestimators = [NeuralNetwork(), NeuralNetwork(), NeuralNetwork(), NeuralNetwork()]\nfor e in estimators[:-1]:\n\te.n_classes_ = 2 \t# Each estimator in the first layer produces 2 outputs\ne[-1].n_classes_ =  4 \t\t# The final estimator produces the 4 class outputs\nnetwork = [estimators[:-1], estimators[-1:]]\n\n# Create and train the metanetwork\nmn = MetaNetwork(network).fit(train_X, train_Y)\n\n# Predict some data\np = mn.predict(test_X)\n```\nFor full details on usage, see the [documentation](https://github.com/paradoxysm/metanetwork/tree/master/doc).\n\n## Changelog\n\nSee the [changelog](https://github.com/paradoxysm/metanetwork/blob/master/CHANGES.md) for a history of notable changes to `metanetwork`.\n\n## Development\n\n[![Code Climate maintainability](https://img.shields.io/codeclimate/maintainability-percentage/paradoxysm/metanetwork?style=flat-square)](https://codeclimate.com/github/paradoxysm/metanetwork/maintainability)\n\n`metanetwork` is in heavy development. Don't look, it's embarrassing!\n\n## Help and Support\n\n### Documentation\n\nDocumentation for `metanetwork` can be found [here](https://github.com/paradoxysm/metanetwork/tree/master/doc).\n\n### Issues and Questions\n\nIssues and Questions should be posed to the issue tracker [here](https://github.com/paradoxysm/metanetwork/issues).\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/paradoxysm/metanetwork/archive/0.1.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/paradoxysm/metanetwork",
    "keywords": "python,ml,ensemble,neural-network",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metanetwork",
    "package_url": "https://pypi.org/project/metanetwork/",
    "platform": "",
    "project_url": "https://pypi.org/project/metanetwork/",
    "project_urls": {
      "Download": "https://github.com/paradoxysm/metanetwork/archive/0.1.0.tar.gz",
      "Homepage": "http://github.com/paradoxysm/metanetwork"
    },
    "release_url": "https://pypi.org/project/metanetwork/0.1.0/",
    "requires_dist": [
      "numpy",
      "tqdm",
      "sklearn"
    ],
    "requires_python": ">=3.4, <4",
    "summary": "Structured Ensemble Learning",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7802319,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0600597fb103907f3e446102de7bc2be1b047f2740a3b23ddffc5c0e8c6f0a70",
          "md5": "7ccdda26262f3300994476bde252dce6",
          "sha256": "246ccc56111c98e0c8ef56b747e6010145e964d6e6f992ae734b79a23ba438a9"
        },
        "downloads": -1,
        "filename": "metanetwork-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ccdda26262f3300994476bde252dce6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4, <4",
        "size": 35338,
        "upload_time": "2020-07-27T20:56:04",
        "upload_time_iso_8601": "2020-07-27T20:56:04.885020Z",
        "url": "https://files.pythonhosted.org/packages/06/00/597fb103907f3e446102de7bc2be1b047f2740a3b23ddffc5c0e8c6f0a70/metanetwork-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e77e4845f986a2366f6956415bf4df751e1732916114c73cffacca88a80d63b2",
          "md5": "15db5bc235f98a48a4ebe2a9c3c38c7b",
          "sha256": "ce6d50df1c3c7ea1674ecd367b7e1c2257f6546a9a2451a5a283238b1ecb5784"
        },
        "downloads": -1,
        "filename": "metanetwork-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "15db5bc235f98a48a4ebe2a9c3c38c7b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4, <4",
        "size": 26963,
        "upload_time": "2020-07-27T20:56:07",
        "upload_time_iso_8601": "2020-07-27T20:56:07.238780Z",
        "url": "https://files.pythonhosted.org/packages/e7/7e/4845f986a2366f6956415bf4df751e1732916114c73cffacca88a80d63b2/metanetwork-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0600597fb103907f3e446102de7bc2be1b047f2740a3b23ddffc5c0e8c6f0a70",
        "md5": "7ccdda26262f3300994476bde252dce6",
        "sha256": "246ccc56111c98e0c8ef56b747e6010145e964d6e6f992ae734b79a23ba438a9"
      },
      "downloads": -1,
      "filename": "metanetwork-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7ccdda26262f3300994476bde252dce6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4, <4",
      "size": 35338,
      "upload_time": "2020-07-27T20:56:04",
      "upload_time_iso_8601": "2020-07-27T20:56:04.885020Z",
      "url": "https://files.pythonhosted.org/packages/06/00/597fb103907f3e446102de7bc2be1b047f2740a3b23ddffc5c0e8c6f0a70/metanetwork-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e77e4845f986a2366f6956415bf4df751e1732916114c73cffacca88a80d63b2",
        "md5": "15db5bc235f98a48a4ebe2a9c3c38c7b",
        "sha256": "ce6d50df1c3c7ea1674ecd367b7e1c2257f6546a9a2451a5a283238b1ecb5784"
      },
      "downloads": -1,
      "filename": "metanetwork-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "15db5bc235f98a48a4ebe2a9c3c38c7b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4, <4",
      "size": 26963,
      "upload_time": "2020-07-27T20:56:07",
      "upload_time_iso_8601": "2020-07-27T20:56:07.238780Z",
      "url": "https://files.pythonhosted.org/packages/e7/7e/4845f986a2366f6956415bf4df751e1732916114c73cffacca88a80d63b2/metanetwork-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}