{
  "info": {
    "author": "Damien Gouteux",
    "author_email": "damien.gouteux@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Other",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Software Development :: Documentation",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Text Processing"
    ],
    "description": "# Weyland\n\nWeyland provides a way to define computing languages and a generic lexer to lex/tokenize/perform lexical analysis on them.\n\nInstall with: ``pip install weyland``\n\n## A. Languages\n\nWeyland offers the class **Language** to define the languages.\n\nA language is initialized with:\n\n* a **mandatory** dictionary { string : list } of token definitions, \n* a **optional** list of unwanted definitions in the language,\n* a **optional** dictionary of tags to apply on tokens.\n\nToken types are defined by a name and a list of matching patterns. A pattern is a standard Python regular expression.\n\nWeyland comes with a list of predefined patterns stored in the dictionary PATTERNS for standard definitions like string, integer and float.\n\nThe unwanted definitions are a list of matched tokens which do not belong to the language. For example, 18A will be matched by the two tokens integer, identifier if we define only these two. By adding a token type wrong_integer corresponding to it, we will prevent this behavior but we must declare that is an error. We do that by putting wrong_integer in the list of unwanted definitions.\n\nThe last dictionary is a dictionary of tags to apply on lists of token types. It can help for syntax coloration for example.\n\nBelow is a short example:\n\n```\nLANGUAGES['ash'] = Language('ash',\n                            {\n                                'keyword'   : [ 'if', 'else', 'end', 'elif'],\n                                'boolean'   : ['true', 'false'],\n                                'nil'       : ['nil'],\n                                'identifier': PATTERNS['IDENTIFIER'],\n                                'number'    : ['\\\\d+', '\\\\d+\\\\.\\\\d+'],\n                                'string'    : PATTERNS['STRINGS'],\n                                'operator'  : ['\\\\+', '\\\\*', '-', '/', '%', '\\\\^'],\n                                'separator' : ['\\\\(', '\\\\)', ','],\n                                'comment'   : ['--(?!\\\\[\\\\[).*(\\n|$)'],\n                                'newline'   : PATTERNS['NEWLINES'],\n                                'blank'     : PATTERNS['BLANKS'],\n                                'wrong_int' : PATTERNS['WRONG_INTEGER'],\n                            },\n                            ['wrong_integer'],\n                            {\n                                'ante_identifier': ['function'],\n                            }\n                        )\n```\n\nPattern with [\\\\\\\\s\\\\\\\\S] (anything including new line) are treated as multiline regex.\n\n## B. Lexer\n\nWeyland provides also a lexer class to perform lexical analysis on a text given a defined language.\n\nA lexer is initialized with a language definition (an instance of the class Language) and a list of tokens to discard when lexing.\n\nThe function lex transform a given text to a list of tokens.\n\nThe algorithm is rather simple: \n\n* A word is initialized to an empty string\n* The next char of the text is added to the word\n* It tries to match all regex against the current word.\n* If there is no match, it looks ahead of 1 char to try to do the matching\n* If there is still no match, it looks at the previous iteration\n  * If there is a token definition matching, it emits a token and empties the word\n    * If there is more than one token definition matching, **the first defined in the language will be choosen**\n  * If no, the lexing fails.\n\nThe lexer can emit a html representation of the tokens: each tokens is emitted in a span of class *language name - token type* except raws tokens which are emitted as their value.\n\nThe tokens are defined by:\n\n* A type\n* A value, the string which matches the pattern\n* A starting index in the text\n\n### B.1 Languages available\n\nA set of lexers and associated languages are available in the package: \n\n* Data language: json,\n* Programming languages: ash, lua, python,\n* Description languages: bnf, hamill.\n\n## C. Websites\n\nList of websites about Weyland:\n\n* Source code on Github: https://github.com/Xitog/weyland\n* Project on PyPI: https://pypi.org/project/weyland/\n* Documentation: see project description on Github or PyPI\n* Stats: https://libraries.io/pypi/weyland\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Xitog/weyland",
    "keywords": "weyland,lexer,regular expression,regex,text,languages",
    "license": "MIT",
    "maintainer": "Damien Gouteux",
    "maintainer_email": "damien.gouteux@gmail.com",
    "name": "weyland",
    "package_url": "https://pypi.org/project/weyland/",
    "platform": "",
    "project_url": "https://pypi.org/project/weyland/",
    "project_urls": {
      "Homepage": "https://github.com/Xitog/weyland"
    },
    "release_url": "https://pypi.org/project/weyland/0.2.6/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "An alternative way to write regular expression and a lexer using them.",
    "version": "0.2.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12768267,
  "releases": {
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd05e7c242389b8f13610a059c814bc7f7f4cd43fca804cec501814fa6f92ba5",
          "md5": "5012a2b24ad68bebb8ddaa05ff916b70",
          "sha256": "f9d3b8803db9ae6e4d4e64fa60ec574cff90a3d57442ba59185040cd8a732084"
        },
        "downloads": -1,
        "filename": "weyland-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5012a2b24ad68bebb8ddaa05ff916b70",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 13462,
        "upload_time": "2020-07-23T12:11:32",
        "upload_time_iso_8601": "2020-07-23T12:11:32.117459Z",
        "url": "https://files.pythonhosted.org/packages/cd/05/e7c242389b8f13610a059c814bc7f7f4cd43fca804cec501814fa6f92ba5/weyland-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e132d6e75ff722e7740d2cc517a3ea39215101a8ff3f6fd912993a3a72cfad0",
          "md5": "d7508c6516e96565dd731db50a8511a4",
          "sha256": "72dfd2c450720375ced7d6e594a01a64ae315b4671252f264dac79f6323c2333"
        },
        "downloads": -1,
        "filename": "weyland-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "d7508c6516e96565dd731db50a8511a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 10275,
        "upload_time": "2020-07-23T12:11:33",
        "upload_time_iso_8601": "2020-07-23T12:11:33.310967Z",
        "url": "https://files.pythonhosted.org/packages/7e/13/2d6e75ff722e7740d2cc517a3ea39215101a8ff3f6fd912993a3a72cfad0/weyland-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d834990aab8898d9dcf50a606161a831e9918d22c4931c1ad479e313be43777",
          "md5": "e80d7254504a455b21b316db95502449",
          "sha256": "f7fe21ef4d1f3bdfbb0ceb2ed1d3173c97813f573fc457b91e36bdea4ec54616"
        },
        "downloads": -1,
        "filename": "weyland-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e80d7254504a455b21b316db95502449",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 13705,
        "upload_time": "2020-07-24T13:21:58",
        "upload_time_iso_8601": "2020-07-24T13:21:58.294699Z",
        "url": "https://files.pythonhosted.org/packages/7d/83/4990aab8898d9dcf50a606161a831e9918d22c4931c1ad479e313be43777/weyland-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61c69cdbfc02dd0264a9a676fa98cd0538f29db745513bcf0b2aa582b8152124",
          "md5": "de784e28792b041d101818e44a7b23ca",
          "sha256": "c5d809ad7df52faac2531f588996cdf3e4ed27317996b1c7dfeca4179ace8e56"
        },
        "downloads": -1,
        "filename": "weyland-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "de784e28792b041d101818e44a7b23ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 10517,
        "upload_time": "2020-07-24T13:21:59",
        "upload_time_iso_8601": "2020-07-24T13:21:59.565927Z",
        "url": "https://files.pythonhosted.org/packages/61/c6/9cdbfc02dd0264a9a676fa98cd0538f29db745513bcf0b2aa582b8152124/weyland-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "506aa7e0380240e312eabdfec1394414e02f5a3596cd37fa5fdd413d043037bc",
          "md5": "00e5e4a8eb1052475be19a57b2a6dfc4",
          "sha256": "baf0a7d0b39321a72202d05ce85be4e091f676371470701dcebc0f56895bba1d"
        },
        "downloads": -1,
        "filename": "weyland-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "00e5e4a8eb1052475be19a57b2a6dfc4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 13652,
        "upload_time": "2020-09-23T14:12:54",
        "upload_time_iso_8601": "2020-09-23T14:12:54.842779Z",
        "url": "https://files.pythonhosted.org/packages/50/6a/a7e0380240e312eabdfec1394414e02f5a3596cd37fa5fdd413d043037bc/weyland-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18ddadc55c389fa16f436a5964da8d0aeb0529fbf8134ec128ceff1846cd720a",
          "md5": "6c00923da44bd4a400dab765c0320ca4",
          "sha256": "b26b215cf3b9b55505d130c1392155d71a9601e7aa26dcb63d2c0af1a2231cc9"
        },
        "downloads": -1,
        "filename": "weyland-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "6c00923da44bd4a400dab765c0320ca4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 10772,
        "upload_time": "2020-09-23T14:12:56",
        "upload_time_iso_8601": "2020-09-23T14:12:56.476365Z",
        "url": "https://files.pythonhosted.org/packages/18/dd/adc55c389fa16f436a5964da8d0aeb0529fbf8134ec128ceff1846cd720a/weyland-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "231f60227df1b7b08d4f614725f7cf70f18c2d0fa0a9adbff626ab52d73a25de",
          "md5": "8f3d9ae547f8e2e988288cdb300ced63",
          "sha256": "6d6950b7ac14bfe6cb2d0771b8ef90224dd0e3003bceafb16fa9142986044ec3"
        },
        "downloads": -1,
        "filename": "weyland-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f3d9ae547f8e2e988288cdb300ced63",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 14430,
        "upload_time": "2021-04-14T14:42:25",
        "upload_time_iso_8601": "2021-04-14T14:42:25.704013Z",
        "url": "https://files.pythonhosted.org/packages/23/1f/60227df1b7b08d4f614725f7cf70f18c2d0fa0a9adbff626ab52d73a25de/weyland-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c07a09ec40b5fe3faf76b9d1201d51999dbd5d4200c8e2e2a45367f816bc55a1",
          "md5": "c11f9b1cd1240b0bf64302fa408bed53",
          "sha256": "4286efae2ec9c0f17a5a27c17175fe4963117e1a3fa5452a436e5d55036e607c"
        },
        "downloads": -1,
        "filename": "weyland-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c11f9b1cd1240b0bf64302fa408bed53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 12353,
        "upload_time": "2021-04-14T14:42:27",
        "upload_time_iso_8601": "2021-04-14T14:42:27.142867Z",
        "url": "https://files.pythonhosted.org/packages/c0/7a/09ec40b5fe3faf76b9d1201d51999dbd5d4200c8e2e2a45367f816bc55a1/weyland-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84eeb4e8f8a5f7ae7e9bea113265e765d4f3f80bc73d3a1fcb396494e2881f46",
          "md5": "e5f053c7fcf713de5228f81aac2e38dc",
          "sha256": "22c84e133f7787c718471a6744a8382e9e3080c088a39084e4c248abf3ccdd54"
        },
        "downloads": -1,
        "filename": "weyland-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5f053c7fcf713de5228f81aac2e38dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 14560,
        "upload_time": "2021-04-28T16:36:27",
        "upload_time_iso_8601": "2021-04-28T16:36:27.652879Z",
        "url": "https://files.pythonhosted.org/packages/84/ee/b4e8f8a5f7ae7e9bea113265e765d4f3f80bc73d3a1fcb396494e2881f46/weyland-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af3949296107af89808571a66bf3dcbe6af65e07e968af4c993dce7516e0288f",
          "md5": "f7d2dafd175904b20cf0e852f7b99acf",
          "sha256": "516fc611834b9aa14ba6ad144f5f13515604dfb667341061537481602c2f4e8f"
        },
        "downloads": -1,
        "filename": "weyland-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f7d2dafd175904b20cf0e852f7b99acf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 12491,
        "upload_time": "2021-04-28T16:36:29",
        "upload_time_iso_8601": "2021-04-28T16:36:29.369831Z",
        "url": "https://files.pythonhosted.org/packages/af/39/49296107af89808571a66bf3dcbe6af65e07e968af4c993dce7516e0288f/weyland-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf7cb5b41550eb94c91fa5e8ff8110843e5ed4f18e7c5fb53a9df3a622e00c0a",
          "md5": "fbfdcc6aaf835873fadf81c5a7fa09f4",
          "sha256": "56dc57ecf8910af1fc9f949c8747e768d3ec4e93c72745d63014d462b8bc6685"
        },
        "downloads": -1,
        "filename": "weyland-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fbfdcc6aaf835873fadf81c5a7fa09f4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 10238,
        "upload_time": "2022-01-31T17:07:00",
        "upload_time_iso_8601": "2022-01-31T17:07:00.823340Z",
        "url": "https://files.pythonhosted.org/packages/bf/7c/b5b41550eb94c91fa5e8ff8110843e5ed4f18e7c5fb53a9df3a622e00c0a/weyland-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e468fe9e6edfc05665c22329dde46a3afd3d0b0012f460819826a64b11dfc26",
          "md5": "40c66a54d030f395b4ad87d18b3f2cee",
          "sha256": "ac79509c5a7431fb7fe7887a2bedecbaaf882c1527da13fc88b27219d257daf8"
        },
        "downloads": -1,
        "filename": "weyland-0.2.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "40c66a54d030f395b4ad87d18b3f2cee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 11139,
        "upload_time": "2022-02-02T17:54:16",
        "upload_time_iso_8601": "2022-02-02T17:54:16.877038Z",
        "url": "https://files.pythonhosted.org/packages/6e/46/8fe9e6edfc05665c22329dde46a3afd3d0b0012f460819826a64b11dfc26/weyland-0.2.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6e468fe9e6edfc05665c22329dde46a3afd3d0b0012f460819826a64b11dfc26",
        "md5": "40c66a54d030f395b4ad87d18b3f2cee",
        "sha256": "ac79509c5a7431fb7fe7887a2bedecbaaf882c1527da13fc88b27219d257daf8"
      },
      "downloads": -1,
      "filename": "weyland-0.2.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "40c66a54d030f395b4ad87d18b3f2cee",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 11139,
      "upload_time": "2022-02-02T17:54:16",
      "upload_time_iso_8601": "2022-02-02T17:54:16.877038Z",
      "url": "https://files.pythonhosted.org/packages/6e/46/8fe9e6edfc05665c22329dde46a3afd3d0b0012f460819826a64b11dfc26/weyland-0.2.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}