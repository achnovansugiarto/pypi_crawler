{
  "info": {
    "author": "JB Cabral and QuatroPe",
    "author_email": "jbcabral@unc.edu.ar",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# Uttrs\n\n`uttrs` seeks to interoperate Classes definided using attrs and *astropy units* in a simple manner.\n\n![img](https://github.com/quatrope/uttrs/blob/main/res/ugly_logo.png?raw=true)\n\n----\n\n[![QuatroPe](https://img.shields.io/badge/QuatroPe-Applications-1c5896)](https://quatrope.github.io/)\n[![Build Status](https://travis-ci.com/quatrope/uttrs.svg?branch=main)](https://travis-ci.com/quatrope/uttrs)\n[![Documentation Status](https://readthedocs.org/projects/uttrs/badge/?version=latest)](https://uttrs.readthedocs.io/en/latest/?badge=latest)\n[![License](https://img.shields.io/pypi/l/uttrs?color=blue)](https://www.tldrlegal.com/l/bsd3)\n[![Python 3.8+](https://img.shields.io/badge/python-3.8+-blue.svg)](https://badge.fury.io/py/uttrs)\n[![PyPI](https://img.shields.io/pypi/v/uttrs)](https://pypi.org/project/uttrs/)\n\n\n\n**uttrs** is mainly three functions:\n\n- `uttr.ib` which generates attributes sensitive to units.\n- `uttr.array_accessor` which allows access to attributes linked to units, and transform them into numpy arrays.\n- `uttr.s` a class decorator to automatically add the `array_accessor`.\n\n## Code and issues\n\nThe entire source code of is hosted in GitHub\n[https://github.com/quatrope/uttrs/](https://github.com/quatrope/uttrs/)\n\n## License\n\nUttrs is under\n[The BSD-3 License](https://github.com/quatrope/uttrs/blob/master/LICENSE)\n\nThe BSD 3-clause license allows you almost unlimited freedom with the software so long as you include the BSD copyright and license notice in it (found in Fulltext).\n\n\n## Installation\n\nThis is the recommended way to install uttrs.\n\n### Installing  with pip\n\nMake sure that the Python interpreter can load uttrs code.\nThe most convenient way to do this is to use virtualenv, virtualenvwrapper, and pip.\n\nAfter setting up and activating the virtualenv, run the following command:\n\n```console\n$ pip install uttrs\n...\n```\n\nThat should be it all.\n\n### Installing the development version\n\nIf youâ€™d like to be able to update your uttrs code occasionally with the latest bug fixes and improvements, follow these instructions:\n\nMake sure that you have Git installed and that you can run its commands from a shell.\n(Enter *git help* at a shell prompt to test this.)\n\nCheck out uttrs main development branch like so:\n\n```console\n$ git clone https://github.com/quatrope/uttrs\n...\n```\n\nThis will create a directory *uttrs* in your current directory.\n\nThen you can proceed to install with the commands\n\n```console\n$ cd uttrs\n$ pip install -e .\n...\n```\n\n## Documentation\n\nThe full documentation of the project are available in\n[https://uttrs.readthedocs.io/](https://uttrs.readthedocs.io/)\n\n## Contact\n\nFor bugs or question please contact\n\n> **Juan B. Cabral:** [jbcabral@unc.edu.ar](jbcabral@unc.edu.ar)\n\n\n## Quick Start\n\nThe following piece of code is an example prototype of a Class representing a Galaxy.\nThe Galaxy contains:\n\n- three arrays (`x`, `y`, `z`) with particle positions, measured in *kiloparsecs* (`u.kpc`).\n- three arrays (`vx`, `vy`, `vz`) for the particle velocities, measured in *Km/s* (`u.kms/u.s`).\n- an array (`m`) of particle masses, expressed in *solar masses* (`u.M_sun`).\n- a free text for note taking in `notes`.\n\nIn every case we would like to access to position, velocity and mass of the particles, with and without units (as `np.ndarray`).\nSuggested units in the information of the attributes behave like this:\n\n- If the user makes the class instance without unit specification then default assumed unit is used.\n- If, otherwise, another unit is used as input, it is validated the feasibility of the conversion to default unit.\n\n```python\nimport uttr\n\nimport astropy.units as u\n\n@uttr.s\nclass Galaxy:\n    x = uttr.ib(unit=u.kpc)\n    y = uttr.ib(unit=u.kpc)\n    z = uttr.ib(unit=u.kpc)\n\n    vx = uttr.ib(unit=u.km/u.s)\n    vy = uttr.ib(unit=u.km/u.s)\n    vz = uttr.ib(unit=u.km/u.s)\n\n    m = uttr.ib(unit=u.M_sun)\n\n    notes = uttr.ib(converter=str)\n\n```\n\n## Creating a galaxy\n\n```python\n>>> import numpy as np\n>>> import astropy.units as u\n\n# Creating the particle arrays\n>>> x = np.random.randint(1000, 10_000, size=5) + np.random.rand(5)\n>>> y = np.random.randint(1000, 10_000, size=5) + np.random.rand(5)\n>>> z = np.random.randint(1000, 10_000, size=5) + np.random.rand(5)\n>>> vx = np.random.randint(1000, 10_000, size=5) + np.random.rand(5)\n>>> vy = np.random.randint(1000, 10_000, size=5) + np.random.rand(5)\n>>> vz = np.random.randint(1000, 10_000, size=5) + np.random.rand(5)\n>>> m = np.random.randint(1000, 10_000, size=5) + np.random.rand(5)\n\n>>> gal = Galaxy(\n...     x = x * u.kpc,  # kpc is the suggested unit\n...     y = y * u.mpc,  # milliparsec is equivalent to kpc\n...     z = z,  # we assume is the suggested kpc unit\n...     vx = vx * (u.km/u.s), # the suggested unit\n...     vy = vy * (u.km/u.s), # the suggested unit\n...     vz = vz, # the suggested unit\n...     m = m * u.M_sun, # the suggested unit\n...     notes=\"a random galaxy made with random numbers\")\n\n>>> gal\nGalaxy(\n    x=<Quantity [5632.35740606, 1363.36235923, 3037.46794044, 2785.45299727, 2515.35793673] kpc>,\n    y=<Quantity [4457.3573917 , 2873.54575512, 7979.68745148, 5930.55394614, 5903.63598164] mpc>,\n    z=<Quantity [6122.35929872, 3740.22821927, 6859.42245056, 7119.8256744 , 3632.74980958] kpc>,\n    vx=<Quantity [7141.40469733, 5713.29552487, 5000.535142  , 9366.36402447, 2967.2546077 ] km / s>,\n    vy=<Quantity [8514.83018331, 1362.13309457, 1136.30959053, 1985.49551226, 3286.69029298] km / s>,\n    vz=<Quantity [6218.56279077, 2015.04638043, 9919.99579782, 1278.94359767, 7228.21626876] km / s>,\n    m=<Quantity [5640.62516958, 4070.66620947, 6106.583697  , 4063.39917315, 3028.85393523] solMass>,\n    notes='a random galaxy made with random numbers')\n\n# we can access al the attributes in the traditional python way\n>>> gal.x\n<Quantity [5632.35740606, 1363.36235923, 3037.46794044, 2785.45299727, 2515.35793673] kpc>\n\n>>> gal.vz  # z is now a km/s\n<Quantity [6218.56279077, 2015.04638043, 9919.99579782, 1278.94359767, 7228.21626876] km / s>\n\n# We stored y as mpc (milliparsec)\n>>> gal.y\n<Quantity [8093.44916403, 2198.55398718, 5464.79397835, 1860.72260272, 3636.64010118] mpc>\n\n```\n\n\n## Simple interaction with `numpy.ndarray`\n\nWe can access all the same attributes declared with `uttr.ib but` coerced to the default unit as numpy array.\n\n```python\n>>> gal.arr_.y\narray([0.00809345, 0.00219855, 0.00546479, 0.00186072, 0.00363664])\n```\n\nThe above code is equivalent to\n\n```python\n>>> gal.y.to_value(u.kpc)\narray([0.00809345, 0.00219855, 0.00546479, 0.00186072, 0.00363664])\n```\n\n## Equivalent units errors\n\nIf we change the unit to something not equivalent to the default unit\ndeclares in `uttr.ib` an exception is raised.\n\nLets fot example define `x` as a kilogram (`u.kg`)\n\n```python\n>>> gal = Galaxy(\n...     x = x * u.kg,  # kg is not equivalent to kpc\n...     y = y,\n...     z = z,\n...     vx = vx,\n...     vy = vy,\n...     vz = vz,\n...     m = m,\n...     notes=\"a random galaxy made with random numbers\")\n\nValueError: Unit of attribute 'x' must be equivalent to 'kpc'.Found 'kg'.\n```\n\n\n## References\n\n### Astropy\n\n> Price-Whelan, Adrian M., et al. \"The Astropy project:\n  Building an open-science project and status of the v2. 0 core\n  package.\" The Astronomical Journal 156.3 (2018): 123.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/quatrope/utts",
    "keywords": "astronomy,oop,attrs,units,astropy",
    "license": "3 Clause BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "uttrs",
    "package_url": "https://pypi.org/project/uttrs/",
    "platform": "",
    "project_url": "https://pypi.org/project/uttrs/",
    "project_urls": {
      "Homepage": "https://github.com/quatrope/utts"
    },
    "release_url": "https://pypi.org/project/uttrs/0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "'uttrs' seeks to interoperate Classes definided using attrs and 'astropy units' in a simple manner.",
    "version": "0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10904114,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d07056b0371de1bd94ccc500916cab205574b5c2b32edbb4cf158f12e0d9a82e",
          "md5": "336dffd23f44c3ae5c4cdb927bb31551",
          "sha256": "db7941bc705a99c5a0460c851f8d01aff07d5a2fb34d6c544a15e1786c0d834e"
        },
        "downloads": -1,
        "filename": "uttrs-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "336dffd23f44c3ae5c4cdb927bb31551",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14952,
        "upload_time": "2020-11-17T23:40:35",
        "upload_time_iso_8601": "2020-11-17T23:40:35.899262Z",
        "url": "https://files.pythonhosted.org/packages/d0/70/56b0371de1bd94ccc500916cab205574b5c2b32edbb4cf158f12e0d9a82e/uttrs-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "937a4034144634453c2037a4709160ec6be049c2b8cf53991c6d9ff2523d23c3",
          "md5": "65237246801f5ff3fc808b805160e9bd",
          "sha256": "19d30dbe2b5368e1465fe2c590cb0cceedf6446f1ab91c59abeafa4c02cc9165"
        },
        "downloads": -1,
        "filename": "uttrs-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "65237246801f5ff3fc808b805160e9bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16463,
        "upload_time": "2020-11-19T06:18:42",
        "upload_time_iso_8601": "2020-11-19T06:18:42.537074Z",
        "url": "https://files.pythonhosted.org/packages/93/7a/4034144634453c2037a4709160ec6be049c2b8cf53991c6d9ff2523d23c3/uttrs-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a233d972daad6b627257b77cede7526ab7a3a2a7b8ee01a15cb5041a2ff8c601",
          "md5": "79b8371c971a17c9d60e163b37cd0e21",
          "sha256": "45974431062fe31792c7d85a8eea3a55077b139edf2c22b219f89c765cd7e62f"
        },
        "downloads": -1,
        "filename": "uttrs-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "79b8371c971a17c9d60e163b37cd0e21",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16423,
        "upload_time": "2020-11-20T04:40:00",
        "upload_time_iso_8601": "2020-11-20T04:40:00.178223Z",
        "url": "https://files.pythonhosted.org/packages/a2/33/d972daad6b627257b77cede7526ab7a3a2a7b8ee01a15cb5041a2ff8c601/uttrs-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f29e88b0c9e17b034df55dbf5f71ef8df58ffa9bd73627cf2734dc2fb4fe527",
          "md5": "1ca3b75d85ad5733f835bc03665b8b1a",
          "sha256": "476d12cee23e439db515dcc84260bf00e1a9006eadec4b46fb8299be6c6597e1"
        },
        "downloads": -1,
        "filename": "uttrs-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1ca3b75d85ad5733f835bc03665b8b1a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16477,
        "upload_time": "2020-11-20T22:23:21",
        "upload_time_iso_8601": "2020-11-20T22:23:21.386771Z",
        "url": "https://files.pythonhosted.org/packages/8f/29/e88b0c9e17b034df55dbf5f71ef8df58ffa9bd73627cf2734dc2fb4fe527/uttrs-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f30ba71517fc353bf117591f9284fc567e883727e01e9b33820f59ae5ad0d57",
          "md5": "4a380728b4de10d343b71c76f4d1c4f5",
          "sha256": "a309867eb01e63a7dd2f88b6d643a7c70a66f930f46d50899f9f50538c8941dd"
        },
        "downloads": -1,
        "filename": "uttrs-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4a380728b4de10d343b71c76f4d1c4f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16501,
        "upload_time": "2020-11-22T00:06:41",
        "upload_time_iso_8601": "2020-11-22T00:06:41.432270Z",
        "url": "https://files.pythonhosted.org/packages/1f/30/ba71517fc353bf117591f9284fc567e883727e01e9b33820f59ae5ad0d57/uttrs-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1164f66974dfd7a9a597e65af1d2ef074986f51331f7c93544e74e551679557",
          "md5": "8dcff382daa64be9ee29a56aa0e79e14",
          "sha256": "60c7f29499984c807d1f61123ced39f599e61f71dd6426bdfc1adeb52ce8c5cc"
        },
        "downloads": -1,
        "filename": "uttrs-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "8dcff382daa64be9ee29a56aa0e79e14",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17067,
        "upload_time": "2021-07-14T03:23:47",
        "upload_time_iso_8601": "2021-07-14T03:23:47.131376Z",
        "url": "https://files.pythonhosted.org/packages/f1/16/4f66974dfd7a9a597e65af1d2ef074986f51331f7c93544e74e551679557/uttrs-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f1164f66974dfd7a9a597e65af1d2ef074986f51331f7c93544e74e551679557",
        "md5": "8dcff382daa64be9ee29a56aa0e79e14",
        "sha256": "60c7f29499984c807d1f61123ced39f599e61f71dd6426bdfc1adeb52ce8c5cc"
      },
      "downloads": -1,
      "filename": "uttrs-0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "8dcff382daa64be9ee29a56aa0e79e14",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17067,
      "upload_time": "2021-07-14T03:23:47",
      "upload_time_iso_8601": "2021-07-14T03:23:47.131376Z",
      "url": "https://files.pythonhosted.org/packages/f1/16/4f66974dfd7a9a597e65af1d2ef074986f51331f7c93544e74e551679557/uttrs-0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}