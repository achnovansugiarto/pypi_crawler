{
  "info": {
    "author": "Zhiheng Liu",
    "author_email": "zhiheng.liu@pku.edu.cn",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3"
    ],
    "description": "![ZFC](doc/zfc_card.png)\n\n# ZFC #\n\nZFC is a software to calculate fold change z score of screening data.\n\nZFC can used for CRISPR library screening with or without [ibar][1], with\nor without replicates. Please cite us [(Xu et al., 2021)][2]:\n\n* Xu, P., Liu, Z., Liu, Y., Ma, H., Xu, Y., Bao, Y., Zhu, S., Cao, Z., Wu, Z., Zhou, Z., et al. (**2021**). Genome-wide interrogation of gene functions through base editor screens empowered by barcoded sgRNAs. *Nat Biotechnol*.\n\n\n## Dependency ##\n\nZFC is designed with python3 and requires packages that are available\nin Linux, Mac OS, and Windows.\n\n* Python3.x\n* numpy >= 1.10\n* scipy >= 1.0\n* pandas >= 0.16\n* matplotlib >= 2.0\n* sklearn >= 0.20\n\n## Installation ##\n\nClone this repository, then install the software.\n\n```{shell}\n$ git clone https://github.com/wolfsonliu/zfc.git\n$ cd zfc\n$ python3 setup.py install\n```\n\nOr from pypi:\n\n```{shell}\n$ pip install --user zfc\n```\n\nIt's advised to use\n[virtualenv](https://virtualenv.pypa.io/en/stable/) or other software\nto create virual environment for the ZFC software.\n\n## Usage ##\n\nThe help of ZFC software:\n\n```{shell}\nusage: zfc [-h] [-i INPUT] [-o OUTPREFIX] [--punish-rate PUNISH_RATE]\n           [--n-sd N_SD] [--null-iteration NULL_ITERATION] [--plot]\n           [--version]\n\nCalculate fold change of screening data (zscore log2 fold change).\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        Raw count table with header should include: <gene>,\n                        <guide>, <barcode>, <ctrl>, <exp>.<ctrl> is the raw\n                        counts of control group, <exp> is the raw counts of\n                        treatment group. For screening without barcode, the\n                        barcode column can be the same with guide.\n  -o OUTPREFIX, --outprefix OUTPREFIX\n                        Output file prefix, can be the file directory path\n                        with file name prefix. The directory in the outprefix\n                        should be built before analysis.\n  --normalization  {total,median,quantile,median_ratio,none}\n                        Normalization of raw count data, default is total.\n                        Support method: total (Total sum normalization);\n                        median (Median normalization); quantile (Upper\n                        quantile normalization (0.75)); median_ratio (Median\n                        ratio normalization); none (No normalization). \n  --top-n-sgrna TOP_N_SGRNA\n                        Only consider top n barcodes for each sgRNA. Default\n                        to use all the data.\n  --top-n-gene TOP_N_GENE\n                        Only consider top n barcodes for each gene. Default to\n                        use all the data.\n  --null-iteration NULL_ITERATION\n                        The iteration to generate null distribution in\n                        calculating the p value of genes. The larger the\n                        better, but slower in calculation, default to be 100.\n  --plot                Output figures.\n  --version             show program's version number and exit\n```\n\n## Example ##\n\n* For screening data with replicates but without ibar, you should\n  first format the replicates as barcode data and then use zfc to\n  calculate.\n\n```{shell}\ngene\tguide\tbarcode\tctrl\texp\nA1BG\tAAGAGCGCCTCGGTCCCAGC\tR_A\t213\t0\nA1BG\tAAGAGCGCCTCGGTCCCAGC\tR_B\t213\t1.03341\nA1BG\tAAGAGCGCCTCGGTCCCAGC\tR_C\t213\t49.2844\nA1BG\tCAAGAGAAAGACCACGAGCA\tR_A\t647\t679.474\nA1BG\tCAAGAGAAAGACCACGAGCA\tR_B\t647\t295.554\nA1BG\tCAAGAGAAAGACCACGAGCA\tR_C\t647\t472.941\nA1BG\tCACCTTCGAGCTGCTGCGCG\tR_A\t469\t190.335\nA1BG\tCACCTTCGAGCTGCTGCGCG\tR_B\t469\t62.0044\nA1BG\tCACCTTCGAGCTGCTGCGCG\tR_C\t469\t280.542\nA1BG\tCACTGGCGCCATCGAGAGCC\tR_A\t678\t188.288\nA1BG\tCACTGGCGCCATCGAGAGCC\tR_B\t678\t165.345\nA1BG\tCACTGGCGCCATCGAGAGCC\tR_C\t678\t202.824\nA1BG\tGCTCGGGCTTGTCCACAGGA\tR_A\t559\t333.597\nA1BG\tGCTCGGGCTTGTCCACAGGA\tR_B\t559\t103.341\nA1BG\tGCTCGGGCTTGTCCACAGGA\tR_C\t559\t409.44\nA1BG\tTGGACTTCCAGCTACGGCGC\tR_A\t363\t176.008\nA1BG\tTGGACTTCCAGCTACGGCGC\tR_B\t363\t307.955\nA1BG\tTGGACTTCCAGCTACGGCGC\tR_C\t363\t254.952\n```\n\n* For screening data with ibar but without replicates, you can use the\n  software directely.\n\n```{shell}\ngene\tguide\tbarcode\tctrl\texp\nA1BG\tACTTCCAGCTGTTCAAGAAT\tCTCGCT\t597.0\t659.0\nA1BG\tACTTCCAGCTGTTCAAGAAT\tGATGGT\t1038.0\t1233.0\nA1BG\tACTTCCAGCTGTTCAAGAAT\tGCACTG\t884.0\t855.0\nA1BG\tACTTCCAGCTGTTCAAGAAT\tTCCACT\t807.0\t870.0\nA1BG\tCGAGAGCCAGGGAGCAGGCA\tCTCGCT\t777.0\t948.0\nA1BG\tCGAGAGCCAGGGAGCAGGCA\tGATGGT\t1448.0\t1385.0\nA1BG\tCGAGAGCCAGGGAGCAGGCA\tGCACTG\t1225.0\t1205.0\nA1BG\tCGAGAGCCAGGGAGCAGGCA\tTCCACT\t1030.0\t1196.0\nA1BG\tGACTTCCAGCTGTTCAAGAA\tCTCGCT\t448.0\t252.0\nA1BG\tGACTTCCAGCTGTTCAAGAA\tGATGGT\t685.0\t700.0\nA1BG\tGACTTCCAGCTGTTCAAGAA\tGCACTG\t487.0\t513.0\nA1BG\tGACTTCCAGCTGTTCAAGAA\tTCCACT\t383.0\t409.0\n```\n\n* For screening data with ibar and replicates, you can analysis\n  replicates separately, or make the replicates as ibar for analysis.\n\n```{shell}\nA1BG\tACTTCCAGCTGTTCAAGAAT\tCTCGCT-R_1\t402.548\t399.666\nA1BG\tACTTCCAGCTGTTCAAGAAT\tCTCGCT-R_2\t399.486\t435.624\nA1BG\tACTTCCAGCTGTTCAAGAAT\tGATGGT-R_1\t699.908\t738.835\nA1BG\tACTTCCAGCTGTTCAAGAAT\tGATGGT-R_2\t675.699\t703.222\nA1BG\tACTTCCAGCTGTTCAAGAAT\tGCACTG-R_1\t596.068\t785.816\nA1BG\tACTTCCAGCTGTTCAAGAAT\tGCACTG-R_2\t675.039\t655.51\nA1BG\tACTTCCAGCTGTTCAAGAAT\tTCCACT-R_1\t544.148\t565.71\nA1BG\tACTTCCAGCTGTTCAAGAAT\tTCCACT-R_2\t588.023\t558.014\nA1BG\tCGAGAGCCAGGGAGCAGGCA\tCTCGCT-R_1\t523.92\t643.584\nA1BG\tCGAGAGCCAGGGAGCAGGCA\tCTCGCT-R_2\t605.821\t514.451\nA1BG\tCGAGAGCCAGGGAGCAGGCA\tGATGGT-R_1\t976.365\t1022.66\nA1BG\tCGAGAGCCAGGGAGCAGGCA\tGATGGT-R_2\t922.905\t1006.78\nA1BG\tCGAGAGCCAGGGAGCAGGCA\tGCACTG-R_1\t826\t778.093\nA1BG\tCGAGAGCCAGGGAGCAGGCA\tGCACTG-R_2\t883.352\t845.664\nA1BG\tCGAGAGCCAGGGAGCAGGCA\tTCCACT-R_1\t694.514\t738.835\nA1BG\tCGAGAGCCAGGGAGCAGGCA\tTCCACT-R_2\t777.218\t842.898\n```\n\n* For screening data without ibar and replicates, you can assign guide\n  column as barcode column for analysis, which means each guide RNA\n  have only one ibar.\n\n```{shell}\ngene\tguide\tbarcode\tctrl\texp\nA1BG\tCACCTTCGAGCTGCTGCGCG\tCACCTTCGAGCTGCTGCGCG\t469\t125\nA1BG\tAAGAGCGCCTCGGTCCCAGC\tAAGAGCGCCTCGGTCCCAGC\t213\t0\nA1BG\tTGGACTTCCAGCTACGGCGC\tTGGACTTCCAGCTACGGCGC\t363\t119\nA1BG\tCACTGGCGCCATCGAGAGCC\tCACTGGCGCCATCGAGAGCC\t678\t122\nA1BG\tGCTCGGGCTTGTCCACAGGA\tGCTCGGGCTTGTCCACAGGA\t559\t212\nA1BG\tCAAGAGAAAGACCACGAGCA\tCAAGAGAAAGACCACGAGCA\t647\t464\nA1CF\tCGTGGCTATTTGGCATACAC\tCGTGGCTATTTGGCATACAC\t898\t322\nA1CF\tGGTATACTCTCCTTGCAGCA\tGGTATACTCTCCTTGCAGCA\t199\t94\nA1CF\tGACATGGTATTGCAGTAGAC\tGACATGGTATTGCAGTAGAC\t271\t118\nA1CF\tGAGTCATCGAGCAGCTGCCA\tGAGTCATCGAGCAGCTGCCA\t158\t33\nA1CF\tGGTGCAGCATCCCAACCAGG\tGGTGCAGCATCCCAACCAGG\t195\t25\nA1CF\tCCAAGCTATATCCTGTGCGC\tCCAAGCTATATCCTGTGCGC\t353\t367\n```\n\n\n## Algorithm ##\n\nThe ZFC analysis algorithm adopts the z-score of log2 fold change as\nthe judgement of the sgRNA and gene changes between reference group\n(without treatment) and experiment group (with treatment). ZFC\nsupports screening with [iBAR][1] employed, as well as conventional\nscreening with replicates. The sgRNA with replicates and sgRNA-iBAR is\ntreated with similar procedure.\n\n### Step 1: Normalization of raw counts ###\n\nWe use total counts for the normalization of raw counts, to rectify\nthe batch sequencing deptch. Because some sgRNAs in the reference have\nvery low raw counts, which can affect the fold change calculation of\nthe following analysis. We define sgRNAs counts less than 0.05\nquantile both in reference group and experiment group as the small\ncount sgRNAs. The mean counts of all the small count sgNRAs were added\nto the normalized counts. The normalized counts is calculated as\nfollowing expression:\n\n```{latex}\n$$Cn_{i} = \\frac{Cr_{i}}{S_{ref}} \\times 0.5 \\times (S_{ref} + S_{exp})$$\n$$C_{i} = Cn_{i} + Cm_{small}$$\n```\n\nwhere, `$Cn_{i}$` is the normalized count of ith sgRNA-iBAR in\nreference group, `$Cr_{i}$` is the raw count of ith sgRNA-iBAR,\n`$Cm_{small}$` is the mean counts of all the small count sgRNAs,\n`$S_{ref}$` is the sum of raw counts of all the sgRNA-iBAR in\nreference group, `$S_{exp}$` is the sum of raw counts of all the\nsgRNA-iBAR in experiment group, `$C_{i}$` is the final normalized\ncounts for ith sgRNA-iBAR after small count adjustment. The normalized\ncounts for sgRNAs in experiment group are calculated similarly.\n\n\n### Step 2: Calculate fold change ###\n\nThe raw fold change of each sgRNA-iBAR is calculated from the\nnormalized counts of reference and experiment groups.\n\n```{latex}\n$$fc_{i} = \\frac{Cref_{i}}{Cexp_{i}}$$\n$$lfc_{i} = \\log_{2}fc_{i}$$\n```\n\nwhere, `$fc_{i}$` is the fold change (FC) of ith sgRNA-iBAR and `$lfc_{i}$`\nis the log2 fold change (LFC) of ith sgRNA-iBAR, `$Cref_{i}$` and\n`$Cexp_{i}$` are the normalized counts of reference and experiment\ngroups respectively.\n\n### Step 3: Calculate fold change std ###\n\nIn order to calculate z-score of LFC (ZLFC), the standard deviation of\nLFC should be calculated. The LFC of sgRNA-iBAR is related to the\nnormalized counts of reference group. So the standard deviations of\nLFC are different for sgRNA-iBARs with different normalized counts of\nreference group. All the sgRNA-iBARs are divided into several sets\naccording to the normalized counts of reference group. And the\nstandard deviations of log fold change are calculated among the\ndivided sets. The LFC standard diviation and the normalized counts of\nthe reference is linearly related. So, linear model is calculated for\nthe LFC sd and reference counts. And the linear model is used to\ncalculate the LFC standard diviation for all the sgRNA-iBAR.\n\n### Step 4: Raw z score of log fold change ###\n\nThe raw z score of log fold change is calculated.\n\n```{latex}\n$$raw ZLFC = \\frac{LFC}/{LFC std}$$\n```\n\n### Step 5: Calculate sgRNA mean z score of fold change ###\n\nThe sgRNA level ZLFCs are calculated as the mean of all the ZLFCs of\nthe relevant sgRNA$^{iBAR}$s.\n\n```{latex}\n$$ZLFC_{sgRNA} = \\frac{\\sum{ZLFC_{sgRNA-iBAR}}}{n}$$\n```\n\nwhere, the sgRNA has n sgRNA-iBAR.\n\nEmpirical P value is also calculated for the sgRNA ZLFCs. The p value\nis adjusted considering control of False Discovery Rate.\n\n\n### Step 6: Calculate gene mean zscore of fold change ###\n\nThe gene level ZLFCs are calculated as the mean of all the ZLFCs of\nthe relevant sgRNAs.\n\n```{latex}\n$$ZLFC_{gene} = \\frac{\\sum{ZLFC_{sgRNA}}}{m}$$\n```\n\nwhere, the gene has m sgRNAs.\n\nEmpirical P value is also calculated for the gene ZLFCs. The p value\nis adjusted considering control of False Discovery Rate.\n\n\n### Step 7: Robust rank aggregation analysis ###\n\n[Robust rank aggregation][3] is utilized to calculate the rank\nsignificance of the gene with the sgRNA-iBARs in the whole\nlibrary. Aside from robust rank aggregation, mean rank aggregation is\nalso calculated. The robust rank score is adjusted\nconsidering control of Fault Discovery Rate.\n\n***\n\n[1]: <https://genomebiology.biomedcentral.com/articles/10.1186/s13059-019-1628-0> \"Zhu, S. et al. Guide RNAs with embedded barcodes boost CRISPR-pooled screens. Genome Biology 20, (2019).\"\n[2]: <http://www.nature.com/articles/s41587-021-00944-1> \"Xu, P., Liu, Z., Liu, Y., Ma, H., Xu, Y., Bao, Y., Zhu, S., Cao, Z., Wu, Z., Zhou, Z., et al. (2021). Genome-wide interrogation of gene functions through base editor screens empowered by barcoded sgRNAs. Nat Biotechnol.\"\n[3]: <http://bioinformatics.oxfordjournals.org/content/28/4/573.abstract> \"Kolde, R., Laur, S., Adler, P. & Vilo, J. Robust rank aggregation for gene list integration and meta-analysis. Bioinformatics 28, 573–580 (2012).\"\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wolfsonliu/zfc",
    "keywords": "",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zfc",
    "package_url": "https://pypi.org/project/zfc/",
    "platform": "",
    "project_url": "https://pypi.org/project/zfc/",
    "project_urls": {
      "Homepage": "https://github.com/wolfsonliu/zfc"
    },
    "release_url": "https://pypi.org/project/zfc/0.1.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "The zfc software is used for analysis of counts data.",
    "version": "0.1.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12073424,
  "releases": {
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15e3cc03a9781ee1254b45910f231cc20409d7004f04b552c7fffd069a37b097",
          "md5": "f501ebf84ba9f8acce01e83b09d0261d",
          "sha256": "a58b3569f0cd142cf9509aff926f5e15b1823ac41f304608c376d3b2b46513ef"
        },
        "downloads": -1,
        "filename": "zfc-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "f501ebf84ba9f8acce01e83b09d0261d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 579782,
        "upload_time": "2021-11-19T20:40:24",
        "upload_time_iso_8601": "2021-11-19T20:40:24.088049Z",
        "url": "https://files.pythonhosted.org/packages/15/e3/cc03a9781ee1254b45910f231cc20409d7004f04b552c7fffd069a37b097/zfc-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "15e3cc03a9781ee1254b45910f231cc20409d7004f04b552c7fffd069a37b097",
        "md5": "f501ebf84ba9f8acce01e83b09d0261d",
        "sha256": "a58b3569f0cd142cf9509aff926f5e15b1823ac41f304608c376d3b2b46513ef"
      },
      "downloads": -1,
      "filename": "zfc-0.1.7.tar.gz",
      "has_sig": false,
      "md5_digest": "f501ebf84ba9f8acce01e83b09d0261d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 579782,
      "upload_time": "2021-11-19T20:40:24",
      "upload_time_iso_8601": "2021-11-19T20:40:24.088049Z",
      "url": "https://files.pythonhosted.org/packages/15/e3/cc03a9781ee1254b45910f231cc20409d7004f04b552c7fffd069a37b097/zfc-0.1.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}