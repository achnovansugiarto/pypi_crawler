{
  "info": {
    "author": "Elad Rapaport",
    "author_email": "erap129@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# EasyNAS - a simple and effective CNN architecture generator\n\n## Purpose\nGiven a dataset, this python package will utilize genetic algorithms and Pytorch to optimize the structure a simple CNN for the task of classification. With simple meaning that the generated architecture is built of a series of layers, where each layers input is the output the previous one. \n\n## Installation\n```python\npip install easynas\n```\n\n## Input data format\nThe input data should be split into training and validation sets, with the following dimensions:  \n```math\n[#samples, #channels, height, width]\n```\nThis means that 2D image-like data is the expected input. If dealing, for example, with 1D time series data that contains a 'channels' dimension, one should include an extra dimension as such (example with numpy):  \n```python\nX = X[:, :, :, None]\n```\n\n## Usage example\n```python\nfrom easynas.genetic_algorithm import EasyNASGA\nimport torchvision\nfrom sklearn.model_selection import train_test_split\n\ntrain_data = torchvision.datasets.MNIST('/files/', train=True, download=True)\ntest_data = torchvision.datasets.MNIST('/files/', train=False, download=True)\nX_train = train_data.data[:, None, :, :].float()\ny_train = train_data.targets.float()\nX_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.2, random_state=42)\neasyga = EasyNASGA(X_train, y_train, X_val, y_val, generations=5, population_size=10, max_epochs=1, weight_inheritance=True)\neasyga.ga.run()\nbest_individual = easyga.get_best_individual()\nprint(f'best individual: {best_individual}')\n```\n\n## Credits\nAnyone using this package for research/production purposes is requested to cite the following research articles:\n```markdown\nRapaport, E., Poese, I., Zilberman, P., Holschke, O., & Puzis, R. (2020).\nPredicting traffic overflows on private peering.\narXiv preprint arXiv:2010.01380.\n```\nhttps://arxiv.org/abs/2010.01380  \n```markdown\nRapaport, Elad, Oren Shriki, and Rami Puzis.\n\"EEGNAS: Neural Architecture Search for Electroencephalography Data Analysis and Decoding.\"\nInternational Workshop on Human Brain and Artificial Intelligence.\nSpringer, Singapore, 2019.\n```\nhttps://link.springer.com/chapter/10.1007/978-981-15-1398-5_1\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/erap129/EasyNAS/archive/0.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/erap129/EasyNAS",
    "keywords": "NAS,GENETIC,CNN",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "easynas",
    "package_url": "https://pypi.org/project/easynas/",
    "platform": "",
    "project_url": "https://pypi.org/project/easynas/",
    "project_urls": {
      "Download": "https://github.com/erap129/EasyNAS/archive/0.1.tar.gz",
      "Homepage": "https://github.com/erap129/EasyNAS"
    },
    "release_url": "https://pypi.org/project/easynas/0.2.1/",
    "requires_dist": [
      "tqdm",
      "torch",
      "numpy",
      "pytorch-lightning",
      "scikit-learn",
      "pyeasyga"
    ],
    "requires_python": "",
    "summary": "A simple utility for generating CNN architectures automatically, using genetic algorithms.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10027670,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf61671bc5d98729c3de12c206d7aa146b5935cd87ec6eef0d1838d929d0b713",
          "md5": "bc6dcad803c4b07c08a4ee266d4235ae",
          "sha256": "e603e8cfc53abfe3a60ed22cd9cdcc84417639808c4fe45299193ec206558904"
        },
        "downloads": -1,
        "filename": "easynas-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bc6dcad803c4b07c08a4ee266d4235ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5626,
        "upload_time": "2021-01-16T10:15:09",
        "upload_time_iso_8601": "2021-01-16T10:15:09.746412Z",
        "url": "https://files.pythonhosted.org/packages/cf/61/671bc5d98729c3de12c206d7aa146b5935cd87ec6eef0d1838d929d0b713/easynas-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62b130feeee04e1cefe9270490cc5124c53e7c5fa93671f4ef181ac64156bfb5",
          "md5": "661f6989ae905de28ce03666239a0a3e",
          "sha256": "fb4ccb91b868a1a6af9b83d1326e3016bf0e71552e3bf3e8f0a17e246dda958a"
        },
        "downloads": -1,
        "filename": "easynas-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "661f6989ae905de28ce03666239a0a3e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8028,
        "upload_time": "2021-04-02T05:54:43",
        "upload_time_iso_8601": "2021-04-02T05:54:43.782367Z",
        "url": "https://files.pythonhosted.org/packages/62/b1/30feeee04e1cefe9270490cc5124c53e7c5fa93671f4ef181ac64156bfb5/easynas-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04306327a9d466616d0fb76e7a8a6af884cfffe71b1fbdd3d0c0c7bfe0aee8e0",
          "md5": "59d59d958aba2cc9120c2f6bb0fcc96e",
          "sha256": "e656fb0b18465c76bff76ea07dda5cf0ebdab68176eae4ebac1ee3cd1ed0259d"
        },
        "downloads": -1,
        "filename": "easynas-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "59d59d958aba2cc9120c2f6bb0fcc96e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7558,
        "upload_time": "2021-04-02T05:55:14",
        "upload_time_iso_8601": "2021-04-02T05:55:14.900205Z",
        "url": "https://files.pythonhosted.org/packages/04/30/6327a9d466616d0fb76e7a8a6af884cfffe71b1fbdd3d0c0c7bfe0aee8e0/easynas-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e1e6ed5a71f19e5984e85055d6f69545492fbd25135f0a19e70d4ffe42e038e",
          "md5": "8e19795a2c08b51888b855290170bb19",
          "sha256": "b1ea4e88536896723130b5d8aa43760945f6610d817d0ac5b5391652e99131bd"
        },
        "downloads": -1,
        "filename": "easynas-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e19795a2c08b51888b855290170bb19",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8239,
        "upload_time": "2021-04-10T18:26:23",
        "upload_time_iso_8601": "2021-04-10T18:26:23.918508Z",
        "url": "https://files.pythonhosted.org/packages/2e/1e/6ed5a71f19e5984e85055d6f69545492fbd25135f0a19e70d4ffe42e038e/easynas-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "acda92e4f188924f06e9752d13dc6f9ea6f015b265486bd53c0b4a7d61041ce6",
          "md5": "e8b5a4515cc4f2c8b3cc77e9845b60f4",
          "sha256": "c2a42682e39c5c0f3efbed44867257edc0bb6b775643d1f7f544b768b7ba7595"
        },
        "downloads": -1,
        "filename": "easynas-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e8b5a4515cc4f2c8b3cc77e9845b60f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7822,
        "upload_time": "2021-04-10T18:26:53",
        "upload_time_iso_8601": "2021-04-10T18:26:53.602770Z",
        "url": "https://files.pythonhosted.org/packages/ac/da/92e4f188924f06e9752d13dc6f9ea6f015b265486bd53c0b4a7d61041ce6/easynas-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2e1e6ed5a71f19e5984e85055d6f69545492fbd25135f0a19e70d4ffe42e038e",
        "md5": "8e19795a2c08b51888b855290170bb19",
        "sha256": "b1ea4e88536896723130b5d8aa43760945f6610d817d0ac5b5391652e99131bd"
      },
      "downloads": -1,
      "filename": "easynas-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8e19795a2c08b51888b855290170bb19",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8239,
      "upload_time": "2021-04-10T18:26:23",
      "upload_time_iso_8601": "2021-04-10T18:26:23.918508Z",
      "url": "https://files.pythonhosted.org/packages/2e/1e/6ed5a71f19e5984e85055d6f69545492fbd25135f0a19e70d4ffe42e038e/easynas-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "acda92e4f188924f06e9752d13dc6f9ea6f015b265486bd53c0b4a7d61041ce6",
        "md5": "e8b5a4515cc4f2c8b3cc77e9845b60f4",
        "sha256": "c2a42682e39c5c0f3efbed44867257edc0bb6b775643d1f7f544b768b7ba7595"
      },
      "downloads": -1,
      "filename": "easynas-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e8b5a4515cc4f2c8b3cc77e9845b60f4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7822,
      "upload_time": "2021-04-10T18:26:53",
      "upload_time_iso_8601": "2021-04-10T18:26:53.602770Z",
      "url": "https://files.pythonhosted.org/packages/ac/da/92e4f188924f06e9752d13dc6f9ea6f015b265486bd53c0b4a7d61041ce6/easynas-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}