{
  "info": {
    "author": "Xavier Hamel",
    "author_email": "xavier.hamel.protic@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Recipe Collector\nThis library will try to scrape recipe websites and get the information of the recipe. This work on a majority of websites. Give an url to the scraper and get back an instance of the `Recipe()` class with all the information about the recipe (if it was found).\n\n\n## Usage\n### Install the library\n```\npip install recipeGetter\n```\n\n### Scrape the recipe\n```python\nrecipe = RecipeScraper(url)\ninfos = recipe.scrape()\n# Informations available for the recipe\ninfos.name # The name of the recipe\ninfos.author # The name of the author of the recipe\ninfos.description # Description of the recipe\ninfos.yeild # Number of yeild that the recipe give\ninfos.category # The category of the recipe\ninfos.ingredients # Ingredients used in the recipe\ninfos.instructions # Instructions used in the recipe\ninfos.prep_time # Preping time of the recipe\ninfos.cook_time # Cooking time of the recipe\ninfos.image # A link to an image of the recipe\n```\n\nSome informations may not be present if the scraper was not succesful to find it or if the information was not present on the website.\n\n## How it works\n### Trivial case\nA majority of popular recipe websites put data about the recipe in a `<script type=\"application/ld+json\">` tag. They put it there because Google will improve the searching result if a website use this technique. The data is very easily pared and returned as a `RecipeTrivial()` instance.\n\n### Complex case\nWhen a website is not putting it's data in a `script` tag, the library will search the arbitrary html for the informations. Not all the data is accessible with this technique and only the ingredients, instructions, name of the recipe, description and author will be searched.\n\n## License\n[License](https://github.com/xavierhamel/recipeGetter/blob/main/LICENSE)",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/xavierhamel/recipeGetter/archive/v_03.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/xavierhamel/recipeGetter",
    "keywords": "recipe,scraper,getter",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "recipeGetter",
    "package_url": "https://pypi.org/project/recipeGetter/",
    "platform": "",
    "project_url": "https://pypi.org/project/recipeGetter/",
    "project_urls": {
      "Download": "https://github.com/xavierhamel/recipeGetter/archive/v_03.tar.gz",
      "Homepage": "https://github.com/xavierhamel/recipeGetter"
    },
    "release_url": "https://pypi.org/project/recipeGetter/0.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A scraper for recipe website",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9026938,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2e63cfbcd2ed003358a41c74718495ac5d55c863cfd751a30e28d5a0a5d4b2e",
          "md5": "d1f0c2d042d8e020083b4e72353c2cb7",
          "sha256": "d6b0ff9e39395cb1de4d1a72c7b79936924d1df5abf6d745696664a75069258b"
        },
        "downloads": -1,
        "filename": "recipeGetter-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d1f0c2d042d8e020083b4e72353c2cb7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5282,
        "upload_time": "2020-12-31T17:56:00",
        "upload_time_iso_8601": "2020-12-31T17:56:00.944600Z",
        "url": "https://files.pythonhosted.org/packages/f2/e6/3cfbcd2ed003358a41c74718495ac5d55c863cfd751a30e28d5a0a5d4b2e/recipeGetter-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "278bda796d550dd5946bdb0c673193212a92d995d37453402c7e25292762576c",
          "md5": "c3eb75e57da28575601de7068d51164c",
          "sha256": "15297a24d37a2c189134a393b976523a21e696d0045668969dee763df935a28c"
        },
        "downloads": -1,
        "filename": "recipeGetter-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c3eb75e57da28575601de7068d51164c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5938,
        "upload_time": "2020-12-31T18:20:01",
        "upload_time_iso_8601": "2020-12-31T18:20:01.453978Z",
        "url": "https://files.pythonhosted.org/packages/27/8b/da796d550dd5946bdb0c673193212a92d995d37453402c7e25292762576c/recipeGetter-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "278bda796d550dd5946bdb0c673193212a92d995d37453402c7e25292762576c",
        "md5": "c3eb75e57da28575601de7068d51164c",
        "sha256": "15297a24d37a2c189134a393b976523a21e696d0045668969dee763df935a28c"
      },
      "downloads": -1,
      "filename": "recipeGetter-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "c3eb75e57da28575601de7068d51164c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5938,
      "upload_time": "2020-12-31T18:20:01",
      "upload_time_iso_8601": "2020-12-31T18:20:01.453978Z",
      "url": "https://files.pythonhosted.org/packages/27/8b/da796d550dd5946bdb0c673193212a92d995d37453402c7e25292762576c/recipeGetter-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}