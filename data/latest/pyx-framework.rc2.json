{
  "info": {
    "author": "kor0p",
    "author_email": "3.kor0p@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# PYX\n### A python-based realtime frontend framework\n\n## examples\n> ### pages: [first](https://pyx-tests.vercel.app/1), [second](https://pyx-tests.vercel.app/2), [third](https://pyx-tests.vercel.app/3)\n> ### composed: [tabs](https://pyx-tests.vercel.app/1)\n\n# use\n```python\n# tests/test_1.py\nfrom pyx import Tag\n\n@Tag\ndef name(*, attr):\n    return 'Child'\n\ndef __pyx__():\n    \"\"\"entrypoint for pyx\"\"\"\n    return name(attr=1, only_view_attr=True)\n```\nwill render\n```html\n...\n<body>\n    <pyx>\n        <name attr=\"1\" only_view_attr>\n            Child\n        </name>\n    </pyx>\n</body>\n...\n```\n### and\n```python\n# tests/test_2.py\nfrom pyx import cached_tag, state, button, style, br, div\n\n@cached_tag.update(title='div')\ndef func(tag):\n    tag.count = state(0)\n    def increment():\n        tag.count += 1\n    def decrement():\n        tag.count -= 1\n    return [\n        div(_class='text', children=f'Count: {tag.count}'),\n        br(),\n        button(_class='button', on_click=increment, children=\"++\"),\n        br(),\n        button(_class='button', on_click=decrement, children=\"––\"),\n        style(scoped=True, children='''\n            .text, .button {\n                font-size: 1rem;\n            }\n            .button {\n                background: none;\n                border: 1px solid red;\n                border-radius: .1rem;\n            }\n        ''')\n    ]\n\n\n# can be simplified as __pyx__ = func\ndef __pyx__():\n    \"\"\"entrypoint for pyx\"\"\"\n    return func()\n\n```\nwill render\n```html\n...\n<body>\n    <pyx>\n        <div pyx-style=\"<random style>\">\n            <div class=\"text\">Count: -5</div>\n            <br>\n            <button on_click=\"<fn hash>\" class=\"button\">++</button>\n            <br>\n            <button on_click=\"<fn hash>\" class=\"button\">––</button>\n            <style>[pyx-style=\"<random style>\"] .text, [pyx-style=\"<random style>\"] .button {\n                font-size: 1rem;\n            }\n    \n            [pyx-style=\"<random style>\"] .button {\n                background: none;\n                border: 1px solid red;\n                border-radius: .1rem;\n            }</style>\n        </div>\n    </pyx>\n    <error>\n        <render_error></render_error>\n        <!-- place for error from request -->\n    </error>\n    <script>\n    \n        $('[pyx-id=\"<tag hash>\"]').parent().attr('pyx-style', '<random style>')\n    \n    </script>\n\n</body>\n...\n```\n## and with parser .pyx\n```python\n# tests/test_3.pyx\nfrom pyx import Tag, state, select, p  # not necessary, really\n\n@cached_tag.update(title='div')\ndef func(tag):\n    tag.selected = state(1)\n    items = {0: 'first', 1: 'second', 2: 'third'}\n    def _select(value):\n        tag.selected = int(value)\n    return <>\n        <p>Key: {tag.selected}</p>\n        <p @click.right:prevent={lambda: 'GOT IT'}>Value: {items[tag.selected]}</p>\n        <select\n            items={items}\n            @change:prevent={_select}\n            value={tag.selected}\n        />\n    </>\n\n\n__pyx__ = func\n```\nwill render\n```html\n...\n<body>\n    <div>\n        <p>Key: 0</p>\n        <!-- will be called on contextmenu event with .preventDefault() -->\n        <p @click.right:prevent=\"<fn hash>\">Value: first</p>\n        <!-- will be called on change event with .preventDefault() -->\n        <select @change:prevent=\"<fn hash>\" value=\"0\">\n            <option label=\"first\" value=\"0\" selected>first</option>\n            <option label=\"second\" value=\"1\">second</option>\n            <option label=\"third\" value=\"2\">third</option>\n        </select>\n    </div>\n</body>\n...\n```\n### or merge them with tabs component\n```python\n# tests/test_tabs.py\nfrom pyx import tabs, tab, style, __APP__ as app\nfrom pyx.utils.app import utils\n\nfrom tests import test_1, test_2, test_3\n\n\ndef main():\n    query = utils.query\n    tabs_list = [\n        dict(name='page 1', children=test_1.__pyx__, url='/?page=1'),\n        dict(name='page 2', children=test_2.__pyx__, url='/?page=2'),\n        dict(name='page 3', children=test_3.__pyx__, url='/?page=3')\n    ]\n    return [\n        tabs(\n            selected='page ' + query['page'] if 'page' in query else None,\n            _class='content',\n            children=[tab(**kw) for kw in tabs_list],\n        ),\n        style(scoped=True, head=True, children='''\n            ul {\n                list-style-type: none;\n                margin: 0;\n                padding: 0;\n                overflow: hidden;\n                background-color: #f1f1f1;\n            }\n            \n            /* Float the list items side by side */\n            tab {\n                float: left;\n            }\n            \n            /* Change background color of links on hover */\n            tabs tab:hover {\n                background-color: #ddd;\n            }\n            \n            /* Create an active/current tablink class */\n            tabs tab:focus, tabs tab[active] li {\n                background-color: #ccc;\n            }\n            \n            /* Style the links inside the list items */\n            li {\n                font-family: \"Lato\", sans-serif;\n                display: inline-block;\n                color: black;\n                text-align: center;\n                padding: 14px 16px;\n                text-decoration: none;\n                transition: 0.3s;\n                font-size: 17px;\n            }\n            \n            /* Style the tab content */\n            .content {\n                padding: 6px 12px;\n                -webkit-animation: fadeEffect 1s;\n                animation: fadeEffect 1s;\n            }\n        '''),\n    ]\n\n\n__pyx__ = main\n```\n### or you can render all three at once\n```python\n# tests/app_fastapi.py\nfrom pyx import render, run_app, __APP__\n\nfrom tests import test_1, test_2, test_3, test_tabs\n\n\n@__APP__.get('/1')\ndef test_1_route():\n    return render(test_1)\n\n\n@__APP__.get('/2')\ndef test_2_route():\n    return render(test_2)\n\n\n@__APP__.get('/3')\ndef test_3_route():\n    return render(test_3)\n\n\n@__APP__.get('/tabs')\ndef test_tabs_route():\n    return render(test_tabs)\n\n\nif __name__ == '__main__':\n    run_app(name='tests.app_fastapi')\nelse:\n    app = __APP__  # for uvicorn / vercel\n```\n### `__PYX__=modulename python -m pyx.app`\n\n# install\n### now PYX use Flask for render\n- `pip install -r requirements.txt`\n\n# .pyx\n## File watcher for Intellij Idea family:\n### Editor -> File Types -> New -> .pyx\n### Settings -> Tools -> File Watchers -> New ->\n#### File type: .pyx\n#### Program: python\n#### Arguments: <project path>/pyx/pyx_parser.py\n### #TODO: cli file watcher && other IDE support",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kor0p/PYX#PYX",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyx-framework",
    "package_url": "https://pypi.org/project/pyx-framework/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyx-framework/",
    "project_urls": {
      "Homepage": "https://github.com/kor0p/PYX#PYX"
    },
    "release_url": "https://pypi.org/project/pyx-framework/0.2.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "PYX - python-based realtime frontend framework",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9778777,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd1f6322dc7f569c985965671186e85bae47eb1c4751ef21e1e0a29615830ba3",
          "md5": "7b8941a9932715cf5031c4eef8b080fb",
          "sha256": "7412f290422e9601bbc8cd7e8a912dac5e0c03da3ca4571510c3d70425e0fb1a"
        },
        "downloads": -1,
        "filename": "pyx-framework-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7b8941a9932715cf5031c4eef8b080fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16624,
        "upload_time": "2021-02-27T20:15:16",
        "upload_time_iso_8601": "2021-02-27T20:15:16.190581Z",
        "url": "https://files.pythonhosted.org/packages/bd/1f/6322dc7f569c985965671186e85bae47eb1c4751ef21e1e0a29615830ba3/pyx-framework-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5a6880f7a2b350c7b475bd6092342ad1fa0f9d0e8c3ee0ab39a3112da878a1e",
          "md5": "eb02c93906e0248c39b6426ce997b8fd",
          "sha256": "f1ad43c761ea94b7d5489fea915e2e73c469e7c9f3d69cc1f4c90d585768ab6c"
        },
        "downloads": -1,
        "filename": "pyx-framework-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "eb02c93906e0248c39b6426ce997b8fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 21801,
        "upload_time": "2021-03-15T22:53:28",
        "upload_time_iso_8601": "2021-03-15T22:53:28.230170Z",
        "url": "https://files.pythonhosted.org/packages/f5/a6/880f7a2b350c7b475bd6092342ad1fa0f9d0e8c3ee0ab39a3112da878a1e/pyx-framework-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f5a6880f7a2b350c7b475bd6092342ad1fa0f9d0e8c3ee0ab39a3112da878a1e",
        "md5": "eb02c93906e0248c39b6426ce997b8fd",
        "sha256": "f1ad43c761ea94b7d5489fea915e2e73c469e7c9f3d69cc1f4c90d585768ab6c"
      },
      "downloads": -1,
      "filename": "pyx-framework-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "eb02c93906e0248c39b6426ce997b8fd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 21801,
      "upload_time": "2021-03-15T22:53:28",
      "upload_time_iso_8601": "2021-03-15T22:53:28.230170Z",
      "url": "https://files.pythonhosted.org/packages/f5/a6/880f7a2b350c7b475bd6092342ad1fa0f9d0e8c3ee0ab39a3112da878a1e/pyx-framework-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}