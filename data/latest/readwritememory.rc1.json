{
  "info": {
    "author": "Victor M Santiago",
    "author_email": "vsantiago113sec@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Utilities"
    ],
    "description": "# ReadWriteMemory\n\n### Description\nThe ReadWriteMemory Class is made on Python for reading and writing to the memory of any process. This Class does not depend on any extra modules and only uses standard Python libraries like ctypes.\n\n---\n\n### [Documentation](https://vsantiago113.github.io/readwritememory.github.io/)\n\n---\n\n### Requirements\nPython 3.4+<br />\nOS: Windows 7, 8 and 10<br />\n\n---\n\n#### Windows APIâ€™s in this module:<br />\n[EnumProcesses](https://docs.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-enumprocesses)<br />\n[GetProcessImageFileName](https://docs.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-getprocessimagefilenamea)<br />\n[OpenProcess](https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-openprocess)<br />\n[Process Security and Access Rights](https://docs.microsoft.com/en-us/windows/win32/procthread/process-security-and-access-rights)<br />\n[CloseHandle](https://docs.microsoft.com/en-us/windows/win32/api/handleapi/nf-handleapi-closehandle)<br />\n[GetLastError](https://docs.microsoft.com/en-us/windows/win32/api/errhandlingapi/nf-errhandlingapi-getlasterror)<br />\n[ReadProcessMemory](https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-readprocessmemory)<br />\n[WriteProcessMemory](https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-writeprocessmemory)<br />\n\n---\n\n## Usage\n\n### Import and instantiate the Class\n```python\nfrom ReadWriteMemory import ReadWriteMemory\n\nrwm = ReadWriteMemory()\n```\n\n### Get a Process by name\n```python\nfrom ReadWriteMemory import ReadWriteMemory\n\nrwm = ReadWriteMemory()\n\nprocess = rwm.get_process_by_name('ac_client.exe')\n```\n\n### Get a Process by ID\n```python\nfrom ReadWriteMemory import ReadWriteMemory\n\nrwm = ReadWriteMemory()\n\nprocess = rwm.get_process_by_id(1337)\n```\n\n### Get the list of running processes ID's from the current system\n```python\nfrom ReadWriteMemory import ReadWriteMemory\n\nrwm = ReadWriteMemory()\n\nprocesses_ids = rwm.enumerate_processes()\n```\n\n### Print the Process information\n```python\nfrom ReadWriteMemory import ReadWriteMemory\n\nrwm = ReadWriteMemory()\n\nprocess = rwm.get_process_by_name('ac_client.exe')\nprint(process.__dict__)\n```\n\n### Print the Process HELP docs\n```python\nfrom ReadWriteMemory import ReadWriteMemory\n\nrwm = ReadWriteMemory()\n\nprocess = rwm.get_process_by_name('ac_client.exe')\nhelp(process)\n```\n\n### Exception: ReadWriteMemoryError\n````python\nfrom ReadWriteMemory import ReadWriteMemory\nfrom ReadWriteMemory import ReadWriteMemoryError\n\nrwm = ReadWriteMemory()\ntry:\n    process = rwm.get_process_by_name('ac_client.exe')\nexcept ReadWriteMemoryError as error:\n    print(error)\n````\n\n### Open the Process\nTo be able to read or write to the process's memory first you need to call the open() method.\n```python\nfrom ReadWriteMemory import ReadWriteMemory\n\nrwm = ReadWriteMemory()\n\nprocess = rwm.get_process_by_name('ac_client.exe')\nprocess.open()\n```\n\n### Set the pointers for example: to get health, ammo and grenades\nThe offsets must be a list in the correct order, if the address does not have any offsets then just pass the address. You need to pass two arguments, first the process address as hex and a list of offsets as hex.\n```python\nfrom ReadWriteMemory import ReadWriteMemory\n\nrwm = ReadWriteMemory()\n\nprocess = rwm.get_process_by_name('ac_client.exe')\nprocess.open()\n\nhealth_pointer = process.get_pointer(0x004e4dbc, offsets=[0xf4])\nammo_pointer = process.get_pointer(0x004df73c, offsets=[0x378, 0x14, 0x0])\ngrenade_pointer = process.get_pointer(0x004df73c, offsets=[0x35c, 0x14, 0x0])\n```\n\n### Read the values for the health, ammo and grenades from the Process's memory\n```python\nfrom ReadWriteMemory import ReadWriteMemory\n\nrwm = ReadWriteMemory()\n\nprocess = rwm.get_process_by_name('ac_client.exe')\nprocess.open()\n\nhealth_pointer = process.get_pointer(0x004e4dbc, offsets=[0xf4])\nammo_pointer = process.get_pointer(0x004df73c, offsets=[0x378, 0x14, 0x0])\ngrenade_pointer = process.get_pointer(0x004df73c, offsets=[0x35c, 0x14, 0x0])\n\nhealth = process.read(health_pointer)\nammo = process.read(ammo_pointer)\ngrenade = process.read(grenade_pointer)\n```\n\n### Print the health, ammo and grenade values\n```python\nfrom ReadWriteMemory import ReadWriteMemory\n\nrwm = ReadWriteMemory()\n\nprocess = rwm.get_process_by_name('ac_client.exe')\nprocess.open()\n\nhealth_pointer = process.get_pointer(0x004e4dbc, offsets=[0xf4])\nammo_pointer = process.get_pointer(0x004df73c, offsets=[0x378, 0x14, 0x0])\ngrenade_pointer = process.get_pointer(0x004df73c, offsets=[0x35c, 0x14, 0x0])\n\nhealth = process.read(health_pointer)\nammo = process.read(ammo_pointer)\ngrenade = process.read(grenade_pointer)\n\nprint({'Health': health, 'Ammo': ammo, 'Grenade': grenade})\n```\n\n### Write some random values for health, ammo and grenade to the Process's memory\n```python\nfrom ReadWriteMemory import ReadWriteMemory\nfrom random import randint\n\nrwm = ReadWriteMemory()\n\nprocess = rwm.get_process_by_name('ac_client.exe')\nprocess.open()\n\nhealth_pointer = process.get_pointer(0x004e4dbc, offsets=[0xf4])\nammo_pointer = process.get_pointer(0x004df73c, offsets=[0x378, 0x14, 0x0])\ngrenade_pointer = process.get_pointer(0x004df73c, offsets=[0x35c, 0x14, 0x0])\n\nprocess.write(health_pointer, randint(1, 100))\nprocess.write(ammo_pointer, randint(1, 20))\nprocess.write(grenade_pointer, randint(1, 5))\n```\n\n### Close the Process's handle when you are done using it.\n```python\nfrom ReadWriteMemory import ReadWriteMemory\n\nrwm = ReadWriteMemory()\n\nprocess = rwm.get_process_by_name('ac_client.exe')\nprocess.open()\n\nprocess.close()\n```\n\n### Examples\nCheck out the code inside the Test folder on the python file named testing_script.py.\nThe AssaultCube game used for this test is version v1.1.0.4 If you use a different version then you will have to use CheatEngine to find the memory addresses.\n[https://github.com/assaultcube/AC/releases/tag/v1.1.0.4](https://github.com/assaultcube/AC/releases/tag/v1.1.0.4)<br />\nFor more examples check out the AssaultCube game trainer:\n[https://github.com/vsantiago113/ACTrainer](https://github.com/vsantiago113/ACTrainer)\n```python\nfrom ReadWriteMemory import ReadWriteMemory\nfrom random import randint\n\nrwm = ReadWriteMemory()\nprocess = rwm.get_process_by_name('ac_client.exe')\nprocess.open()\n\nprint('\\nPrint the Process information.')\nprint(process.__dict__)\n\nhealth_pointer = process.get_pointer(0x004e4dbc, offsets=[0xf4])\nammo_pointer = process.get_pointer(0x004df73c, offsets=[0x378, 0x14, 0x0])\ngrenade_pointer = process.get_pointer(0x004df73c, offsets=[0x35c, 0x14, 0x0])\nprint(health_pointer)\n\nhealth = process.read(health_pointer)\nammo = process.read(ammo_pointer)\ngrenade = process.read(grenade_pointer)\n\nprint('\\nPrinting the current values.')\nprint({'Health': health, 'Ammo': ammo, 'Grenade': grenade})\n\nprocess.write(health_pointer, randint(1, 100))\nprocess.write(ammo_pointer, randint(1, 20))\nprocess.write(grenade_pointer, randint(1, 5))\n\nhealth = process.read(health_pointer)\nammo = process.read(ammo_pointer)\ngrenade = process.read(grenade_pointer)\n\nprint('\\nPrinting the new modified random values.')\nprint({'Health': health, 'Ammo': ammo, 'Grenade': grenade})\n\nprocess.close()\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/vsantiago113/ReadWriteMemory/archive/0.1.5.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vsantiago113/ReadWriteMemory",
    "keywords": "ReadWriteMemory,Hacking,Cheat Engine",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ReadWriteMemory",
    "package_url": "https://pypi.org/project/ReadWriteMemory/",
    "platform": "",
    "project_url": "https://pypi.org/project/ReadWriteMemory/",
    "project_urls": {
      "Download": "https://github.com/vsantiago113/ReadWriteMemory/archive/0.1.5.zip",
      "Homepage": "https://github.com/vsantiago113/ReadWriteMemory"
    },
    "release_url": "https://pypi.org/project/ReadWriteMemory/0.1.5/",
    "requires_dist": null,
    "requires_python": ">=3.4.0",
    "summary": "ReadWriteMemory Class to work with Windows process memory and hacking video games.",
    "version": "0.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7273008,
  "releases": {
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71888cafd88df3cd0abcbd04d71f24a7da02c9b85296fd76bf56afecc95cdf42",
          "md5": "06399fa8fbca7f9db0ee927b7f2d53e1",
          "sha256": "c32ee3134bb9af08f16c52012e95a6ed16c0148ca0bc1e411355d32f919fc641"
        },
        "downloads": -1,
        "filename": "ReadWriteMemory-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "06399fa8fbca7f9db0ee927b7f2d53e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4.0",
        "size": 5946,
        "upload_time": "2020-05-18T22:47:27",
        "upload_time_iso_8601": "2020-05-18T22:47:27.084634Z",
        "url": "https://files.pythonhosted.org/packages/71/88/8cafd88df3cd0abcbd04d71f24a7da02c9b85296fd76bf56afecc95cdf42/ReadWriteMemory-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35f55ab5c5f3eabc1d449701da44c730afb9ba3ef7139f96cb6bf822309c5e94",
          "md5": "8824c106a9172540cfbe61223c1fef99",
          "sha256": "6a194074dc760809db03ec744bbd1e0eec649c32d016400c0ae7b32cf649d08d"
        },
        "downloads": -1,
        "filename": "ReadWriteMemory-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "8824c106a9172540cfbe61223c1fef99",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4.0",
        "size": 7137,
        "upload_time": "2020-05-18T22:47:29",
        "upload_time_iso_8601": "2020-05-18T22:47:29.052267Z",
        "url": "https://files.pythonhosted.org/packages/35/f5/5ab5c5f3eabc1d449701da44c730afb9ba3ef7139f96cb6bf822309c5e94/ReadWriteMemory-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "71888cafd88df3cd0abcbd04d71f24a7da02c9b85296fd76bf56afecc95cdf42",
        "md5": "06399fa8fbca7f9db0ee927b7f2d53e1",
        "sha256": "c32ee3134bb9af08f16c52012e95a6ed16c0148ca0bc1e411355d32f919fc641"
      },
      "downloads": -1,
      "filename": "ReadWriteMemory-0.1.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "06399fa8fbca7f9db0ee927b7f2d53e1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4.0",
      "size": 5946,
      "upload_time": "2020-05-18T22:47:27",
      "upload_time_iso_8601": "2020-05-18T22:47:27.084634Z",
      "url": "https://files.pythonhosted.org/packages/71/88/8cafd88df3cd0abcbd04d71f24a7da02c9b85296fd76bf56afecc95cdf42/ReadWriteMemory-0.1.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35f55ab5c5f3eabc1d449701da44c730afb9ba3ef7139f96cb6bf822309c5e94",
        "md5": "8824c106a9172540cfbe61223c1fef99",
        "sha256": "6a194074dc760809db03ec744bbd1e0eec649c32d016400c0ae7b32cf649d08d"
      },
      "downloads": -1,
      "filename": "ReadWriteMemory-0.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "8824c106a9172540cfbe61223c1fef99",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4.0",
      "size": 7137,
      "upload_time": "2020-05-18T22:47:29",
      "upload_time_iso_8601": "2020-05-18T22:47:29.052267Z",
      "url": "https://files.pythonhosted.org/packages/35/f5/5ab5c5f3eabc1d449701da44c730afb9ba3ef7139f96cb6bf822309c5e94/ReadWriteMemory-0.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}