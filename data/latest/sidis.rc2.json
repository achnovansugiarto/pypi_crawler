{
  "info": {
    "author": "Noeloikeau",
    "author_email": "charlot.5@osu.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# ***sidis*** : ***si***mple ***d***ata ***i***nterface**s**\n> is a Python module that aims to reduce common programming tasks to a single line of code, such as typecasting and data conversion, sorting and mapping, accessing and assigning values through loops, *etc*. The name is a tribute to the early American polymath, William James Sidis. Documentation can be found on the respective pages in the docs website at https://noeloikeau.github.io/sidis/. Here we give a brief overview of some of the main utilities.\n\n\n## Install\n\n`pip install sidis`\n\n## How to use\n\n```python\nimport sidis\nfrom sidis import *\n```\n\n## Typecasting\n\nSidis supports extensible typecasting between iterables and non-iterables, letting you do intuitive conversions such as:\n\n```python\ncast(0,list)\n```\n\n\n\n\n    [0]\n\n\n\n```python\ncast([0.9,1.1],int)\n```\n\n\n\n\n    [0, 1]\n\n\n\nor define your own rules:\n\n```python\nmycast = Caster()\nmycast[list][float] = lambda t: sum(t)\nmycast([0.9,1.1],float)\n```\n\n\n\n\n    2.0\n\n\n\n## Sorting and converting complex datastructures\n\nSidis lets you sort python objects by the result of maps over those objects, and provides convenient conversion functions.\n\n```python\nfrom sidis import sort, convert\n```\n\nConvert the elements of a list to binary arrays, and sort by the length of the array:\n\n```python\nsort([0,10,3,5],by=convert,key=lambda t:len(t[-1]))\n```\n\n\n\n\n    [(10, [1, 0, 1, 0]), (5, [1, 0, 1]), (3, [1, 1]), (0, [0])]\n\n\n\nBy default, `convert` converts to a binary array. If we want to change the arguments of the map without yet evaluating it, we can use `pipe`:\n\n```python\nfrom sidis import pipe #like functools.partial, but also allows for typecasting of input and output data\n```\n\nNow let's convert to hex:\n\n```python\nsort([0.9,10.5,3.1,5.5],by=pipe(convert,to=hex,otype=int)) #convert the elements `otype` into integers, then hex \n```\n\n\n\n\n    [(10.5, '0xa'), (5.5, '0x5'), (3.1, '0x3'), (0.9, '0x0')]\n\n\n\n## Arbitrary access to data structures\n\nWe can access and change arbitrary datastructures with `get` and `give`:\n\n```python\na=[1]\nget(a,0) #get 0th level or attribute of a\n```\n\n\n\n\n    1\n\n\n\n```python\n[give(a,0,a[0]+1) for i in range(10)] #and can assign arbitrary objects without writing entire loops!\na\n```\n\n\n\n\n    [11]\n\n\n\nand can apply this level of control to more complex datastructures:\n\n```python\nimport networkx as nx\ng=nx.DiGraph() #create a ring with a loop, 0->1->2->0->0\ng.add_edges_from([(0,1),(1,2),(2,0)])\ng.add_edges_from([(0,0)])\ng.in_degree()\n```\n\n\n\n\n    InDegreeView({0: 2, 1: 1, 2: 1})\n\n\n\n```python\nfrom sidis import get\nget(g,'in_degree',0) #get in-degree of node 0\n```\n\n\n\n\n    2\n\n\n\nand use this to sort with more abstract methods:\n\n```python\nsort(g.nodes,by=g.in_degree)\n```\n\n\n\n\n    [(0, 2), (1, 1), (2, 1)]\n\n\n\n```python\nsort(g.nodes,by=g.edges,key=lambda t:len(list(t[-1])))\n```\n\n\n\n\n    [(0, OutEdgeDataView([(0, 1), (0, 0)])),\n     (1, OutEdgeDataView([(1, 2)])),\n     (2, OutEdgeDataView([(2, 0)]))]\n\n\n\nor even give attributes to objects:\n\n```python\nfrom sidis import give\ngive(g,'nodes',0,newattr='for fun')\ng.nodes[0]['newattr']\n```\n\n\n\n\n    'for fun'\n\n\n\n```python\n[give(g,'edges',e,weight=np.random.rand(1)) for e in g.edges]\nsort(g.edges,'weight')\n```\n\n\n\n\n    [array([0.99698538]),\n     array([0.90294296]),\n     array([0.47634498]),\n     array([0.1643804])]\n\n\n\n## Arbitrary mapping\n\nsidis also extends mapping using `maps`, which lets you pass in an object and a series of functions and evaluate those functions independently or sequentially over the input to the desired depth:\n\n```python\nf1=lambda t:t\nf2=lambda t:t+1\nf3=lambda t:t+2\nmaps(0,f1,f2,f3) #apply them individually\n```\n\n\n\n\n    [0, 1, 2]\n\n\n\n```python\nmaps(0,f1,f2,f3,depth=-1) #apply them sequentially\n```\n\n\n\n\n    3\n\n\n\n```python\nmaps([0,1],f1,f2,f3,depth=1) #apply f1 to 0, then return f2(f1(0)) and f2(f1(0)), then repeat for 1\n```\n\n\n\n\n    [[1, 2], [2, 3]]\n\n\n\n## ... and more!\n\n```python\nfrom sidis import depth,flatten,unflatten,fill,Template,RNG\n```\n\n```python\ndepth([[0]])\n```\n\n\n\n\n    2\n\n\n\n```python\ndepth({'a':0,'b':{'c':1,'d':3}})\n```\n\n\n\n\n    2\n\n\n\n```python\nflatten({'a':0,'b':{'c':1,'d':3}})\n```\n\n\n\n\n    {'a': 0, 'b,c': 1, 'b,d': 3}\n\n\n\n```python\nunflatten({'a': 0, 'b,c': 1, 'b,d': 3})\n```\n\n\n\n\n    {'a': 0, 'b': {'c': 1, 'd': 3}}\n\n\n\n```python\nfill([[1],[2,3]],fillwith=1000,mask=False)\n```\n\n\n\n\n    array([[   1, 1000],\n           [   2,    3]])\n\n\n\n```python\nTemplate('''\nfill out your _name\nand provide {0} ZIP _iter, lambda t: 'embedded iterable functions!'\n''',_name='name and information',_iter=range(1))\n```\n\n\n\n\n    fill out your name and information\n    and provide embedded iterable functions! \n\n\n\n```python\nrng=RNG(0) #globally stable\nrng.random(0,1,shape=(2,2))\n```\n\n\n\n\n    array([[0.63696169, 0.26978671],\n           [0.04097352, 0.01652764]])\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Noeloikeau/sidis/tree/master/",
    "keywords": "Data,Science,Python",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sidis",
    "package_url": "https://pypi.org/project/sidis/",
    "platform": "",
    "project_url": "https://pypi.org/project/sidis/",
    "project_urls": {
      "Homepage": "https://github.com/Noeloikeau/sidis/tree/master/"
    },
    "release_url": "https://pypi.org/project/sidis/0.0.2/",
    "requires_dist": [
      "pip",
      "packaging"
    ],
    "requires_python": ">=3.6",
    "summary": "Simple Data Interfaces in Python",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10840208,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77a10cdc7de132b05025eb1f3aeec303981849fb80fcbbb70cc49e3d767e778d",
          "md5": "f91a2f5a1072ac09ba87477cd641fccc",
          "sha256": "82e6f33a84ed61367fc5941060b0168a7580d5b7ea362da6abd261936438f504"
        },
        "downloads": -1,
        "filename": "sidis-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f91a2f5a1072ac09ba87477cd641fccc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19618,
        "upload_time": "2021-05-20T00:59:43",
        "upload_time_iso_8601": "2021-05-20T00:59:43.504703Z",
        "url": "https://files.pythonhosted.org/packages/77/a1/0cdc7de132b05025eb1f3aeec303981849fb80fcbbb70cc49e3d767e778d/sidis-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a35b8ce2d984247bf113d847b3ae8427de9444a1f143f581a0db8609e706054",
          "md5": "eb7ded2a8216858f20de0439f6e18ad5",
          "sha256": "1976fb434f0fed7a82eacab1332045044088710fb4c3b8b6455deaee012a09a5"
        },
        "downloads": -1,
        "filename": "sidis-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "eb7ded2a8216858f20de0439f6e18ad5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22750,
        "upload_time": "2021-05-20T00:59:45",
        "upload_time_iso_8601": "2021-05-20T00:59:45.091864Z",
        "url": "https://files.pythonhosted.org/packages/4a/35/b8ce2d984247bf113d847b3ae8427de9444a1f143f581a0db8609e706054/sidis-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed28fda35d8bfe1a3b0fec3cada9e4a3aa698176db111dc8030e7f7293b0cd1a",
          "md5": "9dc44dd8de03b88adc95021b913fdfd5",
          "sha256": "458be587d805269d943ffdb526dbdbfcabc17008f4968bd6e5f50faea36abbcc"
        },
        "downloads": -1,
        "filename": "sidis-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9dc44dd8de03b88adc95021b913fdfd5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20348,
        "upload_time": "2021-07-07T00:01:25",
        "upload_time_iso_8601": "2021-07-07T00:01:25.442654Z",
        "url": "https://files.pythonhosted.org/packages/ed/28/fda35d8bfe1a3b0fec3cada9e4a3aa698176db111dc8030e7f7293b0cd1a/sidis-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "171fa96e5ed9dc445a7d737f9d4f5cbdd8464b53b09637de012a16706b04cbd5",
          "md5": "bfc8de9caef64a101c4c0f3a491ba566",
          "sha256": "7747fd9752975351297e08836c459af72ef4bcb71132672340ae933bdcc5be92"
        },
        "downloads": -1,
        "filename": "sidis-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bfc8de9caef64a101c4c0f3a491ba566",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23212,
        "upload_time": "2021-07-07T00:01:27",
        "upload_time_iso_8601": "2021-07-07T00:01:27.177349Z",
        "url": "https://files.pythonhosted.org/packages/17/1f/a96e5ed9dc445a7d737f9d4f5cbdd8464b53b09637de012a16706b04cbd5/sidis-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ed28fda35d8bfe1a3b0fec3cada9e4a3aa698176db111dc8030e7f7293b0cd1a",
        "md5": "9dc44dd8de03b88adc95021b913fdfd5",
        "sha256": "458be587d805269d943ffdb526dbdbfcabc17008f4968bd6e5f50faea36abbcc"
      },
      "downloads": -1,
      "filename": "sidis-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9dc44dd8de03b88adc95021b913fdfd5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 20348,
      "upload_time": "2021-07-07T00:01:25",
      "upload_time_iso_8601": "2021-07-07T00:01:25.442654Z",
      "url": "https://files.pythonhosted.org/packages/ed/28/fda35d8bfe1a3b0fec3cada9e4a3aa698176db111dc8030e7f7293b0cd1a/sidis-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "171fa96e5ed9dc445a7d737f9d4f5cbdd8464b53b09637de012a16706b04cbd5",
        "md5": "bfc8de9caef64a101c4c0f3a491ba566",
        "sha256": "7747fd9752975351297e08836c459af72ef4bcb71132672340ae933bdcc5be92"
      },
      "downloads": -1,
      "filename": "sidis-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "bfc8de9caef64a101c4c0f3a491ba566",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 23212,
      "upload_time": "2021-07-07T00:01:27",
      "upload_time_iso_8601": "2021-07-07T00:01:27.177349Z",
      "url": "https://files.pythonhosted.org/packages/17/1f/a96e5ed9dc445a7d737f9d4f5cbdd8464b53b09637de012a16706b04cbd5/sidis-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}