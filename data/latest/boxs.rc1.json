{
  "info": {
    "author": "",
    "author_email": "Christoph Emonds <chris+git@kant.ai>",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Security",
      "Topic :: Security :: Cryptography",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Archiving",
      "Topic :: System :: Distributed Computing",
      "Topic :: System :: Filesystems"
    ],
    "description": "# Boxs\n\n [![pipeline status](https://gitlab.com/kantai/boxs/badges/mainline/pipeline.svg)](https://gitlab.com/kantai/boxs/-/commits/mainline)\n [![coverage report](https://gitlab.com/kantai/boxs/badges/mainline/coverage.svg)](https://gitlab.com/kantai/boxs/-/commits/mainline)\n\nBoxs is a python library that manages data automatically and keeps track of different\nversions of the same data created in different runs of the same script. No more need to manually\nthink about file paths and S3 keys, just store the data and let boxs manage the rest.\nBesides managing the version history of the data, boxs allows to track the dependencies between\ndifferent artifacts. It is meant as a tool for making it easy to manage artifacts in workflows\nfor data science and machine learning.\n\n## What it does\n\nBoxs provides simple functions that allow storing arbitrary values and loading them at\na later point. Instead of passing around file paths or s3 keys, that have to be manually\ndefined and versioned, boxs uses references to data, that are automatically generated\nwhen data is initially stored.\n\nThe data items of every run of the python scripts are stored next to each other without\noverwriting anything, which allows inspecting and comparing artifacts between different\nruns. For easier usage, users can name individual data items or runs so that they can\nbe referred to by a simple name.\n\nAdditionally, boxs can automatically create meta-data for each stored data item. This\nmeta-data like data type, size, number of lines or checksum can be accessed during\nexecution and makes it easier to optimize the data handling.\n\n## How it works\n\nBoxs organizes the data it manages in so-called `Box`es, namespaces that allow to group\nrelated data together. Boxes themselves don't store the data, but use different `Storage`\nimplementations to actually store the data and their meta-data. Within a storage a data\nitem is stored with 3 different identifiers:\n\n- box_id: The id of the box, that this data item belongs to.\n- data_id: An identifier for the data item, that is derived from where the data was\n  created. This identifier is the same across multiple runs.\n- run_id: The id of the run during which the data item was created. At the beginning\n  of the python interpreter, a new random run_id is generated.\n\n## How to use it\n\nBoxs can be easily installed from PyPI using pip:\n\n```bash\npip install tox\n```\n\nThe first step is to define a box and the underlying `Storage`, which can be used for\nstoring the data:\n\n```python\nimport boxs\n\nstorage = boxs.FileSystemStorage('/my/storage/directory')\nbox = boxs.Box('my-box-id', storage)\n```\n\nThe API of boxs is quite simple and consists of mainly 3 different functions:\n\n```python\ndata = boxs.store(value, *parents, name=None, box=box)\n\nprint(boxs.info(data))\n\nvalue = boxs.load(data)\n```\n\nFor more information, please take a look at\n[Getting started](https://docs.kant.ai/boxs/latest/getting_started/) or the\n[User guide](https://docs.kant.ai/boxs/latest/user_guide/).\n\n## Develop\n\nBoxs uses [tox](https://tox.wiki/en/latest/index.html) to build and test the library.\nTox runs all tests on different python versions, can generate the documentation and run\nlinters and style checks to improve the code quality.\nIn order to install all the necessary python modules, please run:\n\n```bash\npip install tox\n```\n\nAfterwards the tests can be run by just calling\n\n```bash\ntox\n```\n\nfrom the project directory. For this to work, you need to have multiple python\ninterpreters installed. If you don't want to run the tests on all supported platforms\njust edit the tox.ini file and set\n```\nenvlist = py36,py37,py38,py39\n```\nto contain only the python version you want to use. Another option is to run tox with\nthe additional command line argument\n['--skip_missing_interpreters'](https://tox.wiki/en/latest/config.html#conf-skip_missing_interpreters)\nwhich skips python versions that aren't installed.\n\n\n## Documentation\n\nThe latest version of the documentation can always be found at\n[https://docs.kant.ai/boxs/latest](https://docs.kant.ai/boxs/latest).\nThe documentation is written in [Markdown](https://daringfireball.net/projects/markdown/)\nand is located in the `docs` directory of the project.\nIt can be built into static HTML by using [MkDocs](https://www.mkdocs.org/).\nIn order to manually generate the documentation we can use tox to build the HTML pages from our markdown.\n\n```bash\ntox -e docs\n```\n\n## Release\n\n### Releasing a new package version\n\nReleasing new versions of bandsaw is done using [flit](https://flit.readthedocs.io/en/latest/).\n\n```bash\npip install flit\n```\n\nIn order to be able to publish a new release, you need an account with PyPI or their\nrespective test environment.\n\nAdd those accounts into your `~.pypirc`:\n```\n[distutils]\nindex-servers =\n  pypi\n  pypitest\n\n[pypi]\nusername: <my-user>\n\n[pypitest]\nrepository: https://test.pypi.org/legacy/\nusername: <my-test-user>\n```\n\n\n### Publishing a new release to test\n\n```bash\nflit publish --repository pypitest\n```\n\n### Releasing a new version of the documentation\n\nThe package uses [mike](https://github.com/jimporter/mike)\nto manage multiple versions of the documentation. The already generated documentation is kept\nin the `docs-deployment` branch and will be automatically deployed, if the branch is pushed to\nthe repository.\n\nIn order to build a new version of the documentation, we need to use the corresponding tox environment:\n\n```bash\nVERSION_TAG='<my-version>' tox -e docs-release\n```\n\nThe `VERSION_TAG` environment variable should be set to the new version in format '<major>.<minor>'.\nThis will build the documentation and add it as new commits to the `docs-deployment` branch.\n\nBy pushing the updated branch to the gitlab repository, the documentation will be automatically\ndeployed to [the official documentation website](https://docs.kant.ai/datastock).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "machine learning,data,lineage,tracking,track,tracker,history,source,artifact,data science,graph,dependency,dependencies",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "boxs",
    "package_url": "https://pypi.org/project/boxs/",
    "platform": "",
    "project_url": "https://pypi.org/project/boxs/",
    "project_urls": {
      "Documentation": "https://docs.kant.ai/boxs/latest/",
      "Source": "https://gitlab.com/kantai/boxs/"
    },
    "release_url": "https://pypi.org/project/boxs/0.1/",
    "requires_dist": [
      "tox ; extra == \"docs\"",
      "pandas ; extra == \"pandas\"",
      "flit ; extra == \"release\"",
      "tox ; extra == \"test\""
    ],
    "requires_python": ">=3.6",
    "summary": "Automatically track data and artifacts",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12776330,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe0205d877242aad8d90fae72ec269d5cf3a884d9e73fd7f565b0f2760637471",
          "md5": "70a73398f3377e0c041ba5eb743bd4a5",
          "sha256": "e425b45876c8d14fdccf4b3e67038d230d42c0451308627a636044d8bf5186b5"
        },
        "downloads": -1,
        "filename": "boxs-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70a73398f3377e0c041ba5eb743bd4a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35991,
        "upload_time": "2022-02-03T13:43:18",
        "upload_time_iso_8601": "2022-02-03T13:43:18.987702Z",
        "url": "https://files.pythonhosted.org/packages/fe/02/05d877242aad8d90fae72ec269d5cf3a884d9e73fd7f565b0f2760637471/boxs-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a6f3b36bb1e7c69b860f7aed2356e0bc16d7ce888b5739433e073dc8cd0ec9c",
          "md5": "80da1b69b83bdf12a7c1c9b075df35dd",
          "sha256": "24fbf604a3afaa1fb8304325353674e5a06bd850352867023c99797beb374a1c"
        },
        "downloads": -1,
        "filename": "boxs-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "80da1b69b83bdf12a7c1c9b075df35dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 162022,
        "upload_time": "2022-02-03T13:43:21",
        "upload_time_iso_8601": "2022-02-03T13:43:21.101236Z",
        "url": "https://files.pythonhosted.org/packages/0a/6f/3b36bb1e7c69b860f7aed2356e0bc16d7ce888b5739433e073dc8cd0ec9c/boxs-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe0205d877242aad8d90fae72ec269d5cf3a884d9e73fd7f565b0f2760637471",
        "md5": "70a73398f3377e0c041ba5eb743bd4a5",
        "sha256": "e425b45876c8d14fdccf4b3e67038d230d42c0451308627a636044d8bf5186b5"
      },
      "downloads": -1,
      "filename": "boxs-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "70a73398f3377e0c041ba5eb743bd4a5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 35991,
      "upload_time": "2022-02-03T13:43:18",
      "upload_time_iso_8601": "2022-02-03T13:43:18.987702Z",
      "url": "https://files.pythonhosted.org/packages/fe/02/05d877242aad8d90fae72ec269d5cf3a884d9e73fd7f565b0f2760637471/boxs-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a6f3b36bb1e7c69b860f7aed2356e0bc16d7ce888b5739433e073dc8cd0ec9c",
        "md5": "80da1b69b83bdf12a7c1c9b075df35dd",
        "sha256": "24fbf604a3afaa1fb8304325353674e5a06bd850352867023c99797beb374a1c"
      },
      "downloads": -1,
      "filename": "boxs-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "80da1b69b83bdf12a7c1c9b075df35dd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 162022,
      "upload_time": "2022-02-03T13:43:21",
      "upload_time_iso_8601": "2022-02-03T13:43:21.101236Z",
      "url": "https://files.pythonhosted.org/packages/0a/6f/3b36bb1e7c69b860f7aed2356e0bc16d7ce888b5739433e073dc8cd0ec9c/boxs-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}