{
  "info": {
    "author": "Philamer Sune",
    "author_email": "pvsune@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: ISC License (ISCL)",
      "Programming Language :: Python :: 3.5",
      "Topic :: Home Automation",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
      "Topic :: Software Development :: Libraries :: Application Frameworks"
    ],
    "description": "# Falcon-Ask [![Build Status](https://travis-ci.org/pvsune/falcon_ask.svg?branch=master)](https://travis-ci.org/pvsune/falcon_ask)\nMinimal Python3 toolkit to create Amazon Alexa skills with [Falcon](https://falconframework.org/).\n\nBuilds on top of [Alexa Skills Kit (ASK)](https://developer.amazon.com/docs/ask-overviews/build-skills-with-the-alexa-skills-kit.html) to bootstrap boilerplate code so you don't have to!\n\nInspired by [Flask-Ask](https://github.com/johnwheeler/flask-ask) and [Alexandra](https://github.com/erik/alexandra).\n\n# Synopsis\nA Falcon app might look like this.\n```python\nimport json\n\nimport falcon\nfrom falcon_ask import dispatch_request, FalconAskMiddleware, respond\n\n\ndef intent_fn(body):\n    # \"body\" contains request POST data.\n    return 'Congratulations! Your new alexa skill works great.'\n\n\nclass AlexaResource(object):\n    # Dictionary mapping of \"IntentRequest\" to function.\n    intent_maps = {\n        'GreetingIntent': intent_fn,\n    }\n\n    # Message to return when \"LaunchRequest\" is received.\n    welcome = 'Hi, welcome to your new alexa skill.'\n\n    def on_post(self, req, resp):\n        response = dispatch_request(req)\n        resp.body = json.dumps(respond(response, end_session=False))\n\n\napp = falcon.API(middleware=[\n    # Do validation of request certificate and timestamp.\n    FalconAskMiddleware(AlexaResource, validate=True),\n])\napp.add_route('/', AlexaResource())\n```\nSave above code to `alexa.py` and run via `$ gunicorn alexa:app`. Make sure [gunicorn](http://gunicorn.org/) is installed.\n\n# Installation\nTo install Falcon-Ask, simply use [pipenv](http://pipenv.org/) (or pip, of\ncourse):\n\n```bash\n$ pip install falcon-ask\n‚ú®üç∞‚ú®\n```\n\nSatisfaction guaranteed.\n# Thank You\nThanks for checking this library out! I hope you find it useful.\n\nOf course, there's always room for improvement. Feel free to open an issue so we can make Falcon-Ask better.\n\nSpecial thanks to [@muxspace](https://github.com/muxspace) for giving me an Echo Dot.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pvsune/falcon_ask",
    "keywords": "",
    "license": "ISC",
    "maintainer": "",
    "maintainer_email": "",
    "name": "falcon-ask",
    "package_url": "https://pypi.org/project/falcon-ask/",
    "platform": "",
    "project_url": "https://pypi.org/project/falcon-ask/",
    "project_urls": {
      "Homepage": "https://github.com/pvsune/falcon_ask"
    },
    "release_url": "https://pypi.org/project/falcon-ask/1.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Toolkit for writing Amazon Alexa skills in your Falcon app",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4360201,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3991f31d31781fc9e6fe430b25e222a6a6fb781d7d87a6cc5b344d02d6871063",
          "md5": "6ff842b475cd7af923c2b066818f40ce",
          "sha256": "7c224a8723c934e236a668f020a31774007a2906f11e20229e801019365b7218"
        },
        "downloads": -1,
        "filename": "falcon_ask-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6ff842b475cd7af923c2b066818f40ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4553,
        "upload_time": "2018-10-10T13:37:39",
        "upload_time_iso_8601": "2018-10-10T13:37:39.066689Z",
        "url": "https://files.pythonhosted.org/packages/39/91/f31d31781fc9e6fe430b25e222a6a6fb781d7d87a6cc5b344d02d6871063/falcon_ask-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b453f7c3a91c40828c1dd00b6485687f71cf22445ea5fc215fee59159ef1ae0",
          "md5": "ab12dd15a8ce0e991a2d1bd51f961596",
          "sha256": "04cfd66568826ce192008c944d887cd6821472e5b83fd9ebae45facbeff8ce8f"
        },
        "downloads": -1,
        "filename": "falcon_ask-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ab12dd15a8ce0e991a2d1bd51f961596",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4826,
        "upload_time": "2018-10-10T14:18:20",
        "upload_time_iso_8601": "2018-10-10T14:18:20.533104Z",
        "url": "https://files.pythonhosted.org/packages/8b/45/3f7c3a91c40828c1dd00b6485687f71cf22445ea5fc215fee59159ef1ae0/falcon_ask-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8b453f7c3a91c40828c1dd00b6485687f71cf22445ea5fc215fee59159ef1ae0",
        "md5": "ab12dd15a8ce0e991a2d1bd51f961596",
        "sha256": "04cfd66568826ce192008c944d887cd6821472e5b83fd9ebae45facbeff8ce8f"
      },
      "downloads": -1,
      "filename": "falcon_ask-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ab12dd15a8ce0e991a2d1bd51f961596",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4826,
      "upload_time": "2018-10-10T14:18:20",
      "upload_time_iso_8601": "2018-10-10T14:18:20.533104Z",
      "url": "https://files.pythonhosted.org/packages/8b/45/3f7c3a91c40828c1dd00b6485687f71cf22445ea5fc215fee59159ef1ae0/falcon_ask-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}