{
  "info": {
    "author": "Nick Buker",
    "author_email": "nickbuker@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Whooper\n\n## Author:\nNick Buker\n\n## Introduction:\nWhooper is a small collection of utility functions for accessing AWS S3 and AWS Redshift. The goal of Whooper is to be a simple, robust package to ease data work-flow. It is not intended to handle every possible need (for example credential management is largely left to the user) but it is designed to streamline common tasks.\n\n## Table of contents:\n\n### Installing Whooper:\n- [Installation instructions](#pip-installing-whooper)\n\n### Setting up credentials for Whooper:\n- [Credentials instructions](#whooper-credentials)\n\n### How to use Whooper:\n- [Whooper instructions](#using-whooper)\n\n    Redshift:\n\n    - [Importing whooper Redshift functions](#redshift-import)\n    - [Reading a SQL script into Python as a string](#read-sql)\n    - [Executing a SQL query that does not return data](#redshift-execute-sql-no-return)\n    - [Executing a SQL query that returns data](#redshift-execute-sql-return)\n    - [Executing a SQL query that returns data for pandas](#redshift-execute-sql-return-dict)\n    - [Creating a connection object (experienced users)](#redshift-get-conn)\n\n    S3:\n\n    - [Importing S3 functions](#s3-import)\n    - [Downloading a single file from S3](#s3-download-single)\n    - [Downloading with a profile name](#s3-download-profile-name)\n    - [Downloading a list of files from S3](#s3-download-list)\n    - [Downloading files matching a pattern from S3](#s3-download-pattern)\n    - [Downloading all files in a directory from S3](#s3-download-all)\n    - [Uploading a single file to S3](#s3-upload-single)\n    - [Uploading with a profile name](#s3-upload-profile-name)\n    - [Uploading a list of files to S3](#s3-upload-list)\n    - [Uploading files matching a pattern to S3](#s3-upload-pattern)\n    - [Uploading all files in a directory to S3](#s3-upload-all)\n    - [Deleting a single file in S3](#s3-delete-single)\n    - [Deleting with a profile name](#s3-delete-profile-name)\n    - [Deleting a list of files in S3](#s3-delete-list)\n    - [Deleting files matching a pattern in S3](#s3-delete-pattern)\n    - [Deleting all files in a directory in S3](#s3-delete-all)\n    - [Creating a bucket object (experienced users)](#get-bucket)\n\n    Boto3 (experienced users):\n\n    - [Importing boto3 functions](#boto-import)\n    - [Getting boto3 credentials](#boto-creds)\n    - [Creating a boto3 session object](#boto-session)\n\n    Transferring data between Redshift and S3:\n\n    - [Transferring data from Redshift to S3](#redshift-unload)\n    - [Transferring data from S3 to Redshift](#redshift-copy)\n\n### Testing:\n\n- [Testing Whooper](#whooper-testing)\n\n<a name=\"pip-installing-whooper\"></a>\n## Installing Whooper:\nWhooper can be installed via pip. As always, use of a project-level virtual environment is recommended.\n\n **Whooper requires Python >= 3.6.**\n\n```bash\n$ pip install whooper\n```\n\n<a name=\"whooper-credentials\"></a>\n## Setting up credentials for Whooper:\n\n### Redshift:\nWhooper is designed to ingest your Redshift credentials as an environment variable in the below format. This method allows the user freedom to handle credentials a number of ways. As always, best practices are advised. Your credentials should never be placed in the code of your project such as in a `Dockerfile` or `.env` file. Instead, you may wish to place them in your `.bash_profile` locally or take advantage of a key management service such as the one offered by AWS.\n\n```bash\n'host=my_hostname database=my_database user=my_user password=my_password port=1234'\n```\n\n### S3:\nIf the user is running locally, their `Home` directory should contain a `.aws/` directory with a `credentials` file. The `credentials` file should look similar to the example below where the profile name is in brackets. Note that the specific values and region may vary. If the user is running on an EC2, instance permission to access S3 is handled by the IAM role for the instance.\n\n```bash\n[default]\naws_access_key_id=MYAWSACCESSKEY\naws_secret_access_key=MYAWSSECRETACCESS\naws_session_token=\"long_string_of_random_characters==\"\naws_security_token=\"another_string_of_random_characters==\"\nregion=us-west-2\n```\n\nNote the the profile name in brackets. If the profile name differs in your credentials file, you will likely need to pass this profile name to the S3 functions as an argument.\n\n<a name=\"using-whooper\"></a>\n## How to use Whooper:\n\n### Redshift:\n\n<a name=\"redshift-import\"></a>\nImporting whooper Redshift functions:\n\n\n```python\nfrom whooper import read_sql, redshift_execute_sql, redshift_get_conn\n```\n\n<a name=\"read-sql\"></a>\nReading a SQL script into Python as a string:\n\n\n```python\nsql = read_sql(sql_filename='../sql/my_script.sql')\n```\n\n<a name=\"redshift-execute-sql-no-return\"></a>\nExecuting a SQL query that does not return data:\n\n\n```python\nredshift_execute_sql(\n    sql=sql,\n    env_var='REDSHIFT_CREDS',\n    return_data=False,\n    return_dict=False)\n```\n\n<a name=\"redshift-execute-sql-return\"></a>\nExecuting a SQL query that returns data as a list of tuples and column names as a list of strings:\n\n\n```python\ndata, columns = redshift_execute_sql(\n    sql=sql,\n    env_var='REDSHIFT_CREDS',\n    return_data=True,\n    return_dict=False)\n```\n\n<a name=\"redshift-execute-sql-return-dict\"></a>Executing a SQL query that returns data as a dict for easy ingestion into a pandas DataFrame:\n\n\n```python\nimport pandas as pd\n\ndf = pd.DataFrame(**redshift_execute_sql(\n    sql=sql,\n    env_var='REDSHIFT_CREDS',\n    return_data=True,\n    return_dict=True))\n```\n\n<a name=\"redshift-get-conn\"></a>\nCreating a connection object that can be manipulated directly by experienced users:\n\n```python\nconn = redshift_get_conn(env_var='REDSHIFT_CREDS')\n```\n\n### S3:\n<a name=\"s3-import\"></a>\nImporting S3 functions:\n\n```python\nfrom whooper import s3_download, s3_upload, s3_delete, create_session, s3_get_bucket\n```\n\n<a name=\"s3-download-single\"></a>\nDownloading a single file from S3:\n\n```python\ns3_download(\n    bucket='my_bucket',\n    s3_filepath='tmp/my_file.csv',\n    local_filepath='../data/my_file.csv')\n```\n\n<a name=\"s3-download-profile-name\"></a>\nDownloading with a profile name:\n\n```python\ns3_download(\n    bucket='my_bucket',\n    profile_name='my-profile-name',\n    s3_filepath='tmp/my_file.csv',\n    local_filepath='../data/my_file.csv')\n```\n\n<a name=\"s3-download-list\"></a>\nDownloading a list of files from S3 (will not upload contents of subdirectories):\n\n```python\ns3_download(\n    bucket='my_bucket',\n    s3_filepath=['tmp/my_file1.csv', 'tmp/my_file2.csv', 'img.png'],\n    local_filepath=['../data/my_file1.csv', '../data/my_file2.csv', '../img.png'])\n```\n\n<a name=\"s3-download-pattern\"></a>\nDownloading files matching a pattern from S3 (will not upload contents of subdirectories):\n\n```python\ns3_download(\n    bucket='my_bucket',\n    s3_filepath='tmp/*.csv',\n    local_filepath='../data/')\n```\n\n<a name=\"s3-download-all\"></a>\nDownloading all files in a directory from S3 (will not upload contents of subdirectories):\n\n```python\ns3_download(\n    bucket='my_bucket',\n    s3_filepath='tmp/*',\n    local_filepath='../data/')\n```\n\n<a name=\"s3-upload-single\"></a>\nUploading a single file to S3:\n\n```python\ns3_upload(\n    bucket='my_bucket',\n    local_filepath='../data/my_file.csv',\n    s3_filepath='tmp/my_file.csv')\n```\n\n<a name=\"s3-upload-profile-name\"></a>\nUploading with a profile name:\n\n```python\ns3_upload(\n    bucket='my_bucket',\n    profile_name='my-profile-name',\n    local_filepath='../data/my_file.csv',\n    s3_filepath='tmp/my_file.csv')\n```\n\n<a name=\"s3-upload-list\"></a>\nUploading a list of files to S3 (will not upload contents of subdirectories):\n\n```python\ns3_upload(\n    bucket='my_bucket',\n    local_filepath=['../data/my_file1.csv', '../data/my_file2.csv', '../img.png'],\n    s3_filepath=['tmp/my_file1.csv', 'tmp/my_file2.csv', 'img.png'])\n```\n\n<a name=\"s3-upload-pattern\"></a>\nUploading files matching a pattern to S3 (will not upload contents of subdirectories):\n\n```python\ns3_upload(\n    bucket='my_bucket',\n    local_filepath='../data/*.csv',\n    s3_filepath='tmp/')\n```\n\n<a name=\"s3-upload-all\"></a>\nUploading all files in a directory to S3 (will not upload contents of subdirectories):\n\n```python\ns3_upload(\n    bucket='my_bucket',\n    local_filepath='../data/*'\n    s3_filepath='tmp/')\n```\n\n<a name=\"s3-delete-single\"></a>\nDeleting a single file in S3:\n\n```python\nresp = s3_delete(bucket='my_bucket', s3_filepath='tmp/my_file.csv')\n```\n\n<a name=\"s3-delete-profile-name\"></a>\nDeleting with a profile name:\n\n```python\ns3_upload(\n    bucket='my_bucket',\n    profile_name='my-profile-name',\n    s3_filepath='tmp/my_file.csv')\n```\n\n<a name=\"s3-delete-list\"></a>\nDeleting a list of files in S3:\n\n```python\nresp = s3_delete(\n    bucket='my_bucket',\n    s3_filepath=['tmp/my_file1.csv', 'tmp/my_file2.csv', 'img.png'])\n```\n\n<a name=\"s3-delete-pattern\"></a>\nDeleting files matching a pattern in S3:\n\n```python\nresp = s3_delete(bucket='my_bucket', s3_filepath='tmp/*.csv')\n```\n\n<a name=\"s3-delete-all\"></a>\nDeleting all files in a directory in S3:\n\n```python\nresp = s3_delete(bucket='my_bucket', s3_filepath='tmp/*')\n```\n\n<a name=\"get-bucket\"></a>\nCreating a bucket object that can be manipulated directly by experienced users:\n\n```python\nbucket = s3_get_bucket(\n    bucket='my_bucket',\n    profile_name='default',\n    region_name='us-west-2')\n```\n\n### Boto3:\n<a name=\"boto-import\"></a>\nImporting boto3 functions:\n\n```python\nfrom whooper import boto_get_creds, boto_create_session\n```\n\n<a name=\"boto-creds\"></a>\nRetrieves Boto3 credentials as a string for use in `COPY` and `UNLOAD` SQL statetments:\n\n```python\ncreds = boto_get_creds(\n    profile_name='default',\n    region_name='us-west-2',\n    session=None)\n```\n\n<a name=\"boto-session\"></a>\nCreating a boto3 session object that can be manipulated directly by experienced users:\n\n```python\nsession = boto_create_session(profile_name='default', region_name='us-west-2')\n```\n\n### Transferring data between Redshift and S3:\n\n<a name=\"redshift-unload\"></a>\nTransferring data from Redshift to S3 using an `UNLOAD` statement (see [Redshift UNLOAD documentation](https://docs.aws.amazon.com/redshift/latest/dg/r_UNLOAD.html) for more information):\n```python\n\nfrom whooper import boto_get_creds, redshift_execute_sql\n\n\ncreds = boto_get_creds(\n    profile_name='default',\n    region_name='us-west-2',\n    session=None)\n\nsql = f'''\n\n    unload (\n        'select\n            col1\n            ,col2\n        from\n            my_schema.my_table'\n    )\n    to\n        's3://mybucket/unload/my_table/'\n    credentials\n        '{creds}'\n    parallel off header gzip allowoverwrite;\n'''\n\nredshift_execute_sql(\n    sql=sql,\n    env_var='REDSHIFT_CREDS',\n    return_data=False,\n    return_dict=False)\n```\n\n<a name=\"redshift-copy\"></a>\nTransferring data from S3 to Redshift using a `COPY` statement (see [Redshift COPY documentation](https://docs.aws.amazon.com/redshift/latest/dg/r_COPY.html) for more information):\n```python\n\nfrom whooper import boto_get_creds, redshift_execute_sql\n\n\ncreds = boto_get_creds(\n    profile_name='default',\n    region_name='us-west-2',\n    session=None)\n\nsql = f'''\n\n    copy\n        my_schema.my_table\n    from\n        's3://mybucket/unload/my_table/'\n    credentials\n        '{creds}'\n    ignoreheader 1 gzip;\n'''\n\nredshift_execute_sql(\n    sql=sql,\n    env_var='REDSHIFT_CREDS',\n    return_data=False,\n    return_dict=False)\n```\n\n<a name=\"whooper-testing\"></a>\n## Testing:\nFor those interested in contributing to Whooper or forking and editing the project, pytest is the testing framework used. To run the tests, create a virtual environment, install the contents of `dev-requirements.txt`, and run the following command from the root directory of the project. The testing scripts can be found in the `test/` directory.\n\n```bash\n$ pytest\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nickbuker/whooper",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "whooper",
    "package_url": "https://pypi.org/project/whooper/",
    "platform": "",
    "project_url": "https://pypi.org/project/whooper/",
    "project_urls": {
      "Homepage": "https://github.com/nickbuker/whooper"
    },
    "release_url": "https://pypi.org/project/whooper/0.0.1/",
    "requires_dist": [
      "boto3 >=1.17.11",
      "pg8000 >=1.17.0"
    ],
    "requires_python": ">=3.6,<4",
    "summary": "Convenience wrappers for connecting to AWS S3 and Redshift",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9461157,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9f1a7c592f097e78f09da4214e61f986b0ed931f723213ee77446c2213727b4",
          "md5": "0e5cadf0213e555c14b79b2d9af2b553",
          "sha256": "36bc70c7df667fb1440cce36414e4a0f2852e71d482d2afc3af56267c781ec4b"
        },
        "downloads": -1,
        "filename": "whooper-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e5cadf0213e555c14b79b2d9af2b553",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4",
        "size": 13028,
        "upload_time": "2021-02-04T01:16:39",
        "upload_time_iso_8601": "2021-02-04T01:16:39.956225Z",
        "url": "https://files.pythonhosted.org/packages/d9/f1/a7c592f097e78f09da4214e61f986b0ed931f723213ee77446c2213727b4/whooper-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02689948615217df80dcf44648c70ab500826156d95d4f483dfffe54e440d80e",
          "md5": "e6151958cd1c863965450a7a2d923504",
          "sha256": "af4dcd8d1a500521dd51ec9ca0796bfcfa9fb96d6d996c1db03dd8675d2d5904"
        },
        "downloads": -1,
        "filename": "whooper-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e6151958cd1c863965450a7a2d923504",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4",
        "size": 13438,
        "upload_time": "2021-02-04T01:16:53",
        "upload_time_iso_8601": "2021-02-04T01:16:53.438963Z",
        "url": "https://files.pythonhosted.org/packages/02/68/9948615217df80dcf44648c70ab500826156d95d4f483dfffe54e440d80e/whooper-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6ddb8b869e34bed986824d48497e8b0a9a69472b99934e2a5a88500db82f600",
          "md5": "77ffd0322ea0dbc6abf6c11e8689307e",
          "sha256": "e7b1af317dc6022659ba34e2817aa7cb00dd86c6cbb294924806fda9148952b8"
        },
        "downloads": -1,
        "filename": "whooper-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "77ffd0322ea0dbc6abf6c11e8689307e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4",
        "size": 13053,
        "upload_time": "2021-02-19T00:01:11",
        "upload_time_iso_8601": "2021-02-19T00:01:11.762298Z",
        "url": "https://files.pythonhosted.org/packages/a6/dd/b8b869e34bed986824d48497e8b0a9a69472b99934e2a5a88500db82f600/whooper-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3714dfd8b9812fb188c489fc18a45e778f36b894814734b4990ddd771d2ef97",
          "md5": "f290bda8794d7340c5cb51992e7a1dbf",
          "sha256": "2fbb59cb9ac9e8adb67d792e3e9057f1e4e1b209435997dead9881970859f00b"
        },
        "downloads": -1,
        "filename": "whooper-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f290bda8794d7340c5cb51992e7a1dbf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4",
        "size": 13456,
        "upload_time": "2021-02-19T00:01:22",
        "upload_time_iso_8601": "2021-02-19T00:01:22.753672Z",
        "url": "https://files.pythonhosted.org/packages/e3/71/4dfd8b9812fb188c489fc18a45e778f36b894814734b4990ddd771d2ef97/whooper-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a6ddb8b869e34bed986824d48497e8b0a9a69472b99934e2a5a88500db82f600",
        "md5": "77ffd0322ea0dbc6abf6c11e8689307e",
        "sha256": "e7b1af317dc6022659ba34e2817aa7cb00dd86c6cbb294924806fda9148952b8"
      },
      "downloads": -1,
      "filename": "whooper-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "77ffd0322ea0dbc6abf6c11e8689307e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4",
      "size": 13053,
      "upload_time": "2021-02-19T00:01:11",
      "upload_time_iso_8601": "2021-02-19T00:01:11.762298Z",
      "url": "https://files.pythonhosted.org/packages/a6/dd/b8b869e34bed986824d48497e8b0a9a69472b99934e2a5a88500db82f600/whooper-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e3714dfd8b9812fb188c489fc18a45e778f36b894814734b4990ddd771d2ef97",
        "md5": "f290bda8794d7340c5cb51992e7a1dbf",
        "sha256": "2fbb59cb9ac9e8adb67d792e3e9057f1e4e1b209435997dead9881970859f00b"
      },
      "downloads": -1,
      "filename": "whooper-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f290bda8794d7340c5cb51992e7a1dbf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4",
      "size": 13456,
      "upload_time": "2021-02-19T00:01:22",
      "upload_time_iso_8601": "2021-02-19T00:01:22.753672Z",
      "url": "https://files.pythonhosted.org/packages/e3/71/4dfd8b9812fb188c489fc18a45e778f36b894814734b4990ddd771d2ef97/whooper-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}