{
  "info": {
    "author": "tani-cat",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# AtCoder Shell\n\nThis is the shell library to execute AtCoder submission on your commandline, for Python/PyPy user.\n\n## Basic operation\n\nIf you want to know more information about commands, execute `acsh help`.\n(Note that the command results are output in Japanese.)\n\n### 1. Installation\n\n```shell\npip install acshell\n```\n\n### 2. Login\n\n```shell\nacsh login\n# acsh lg\n```\n\nYour account credentials are stored for a certain period of time.\n\n### 3. Create \"Contest folder\"\n\n```shell\nacsh load agc001\n# acsh ld agc001\n```\n\nThe \"contest folder\" of specified contest is created where you are currently. Each task folder is generated in the contest folder.\n\n### 4. Write your code\n\nImplement the answers in the file like `agc001_a.py` created in the folder for each task.\n\n### 5. Run your codes with published testcases\n\nConfirm the formats of the command arguments below.\n\n```shell\nacsh test [task] [num] [lang]\nacsh check [task] [lang]\n# acsh t\n# acsh c\n```\n\n| option | required | value format |\n| :-- | :-: | :-- |\n| task | Yes | task code such as `A`, `B` |\n| num | Yes (in `test`) | number of testcase as integer |\n| lang | x | language(`python` or `pypy`) |\n\n### 6. Submit your codes\n\nConfirm the formats of the command arguments below. Unlike the test running, you have to specify which language you submit codes as.\n\n```shell\nacsh submit [task] [lang]\n# acsh s\n```\n\n| option | required | value format |\n| :-- | :-: | :-- |\n| task | Yes | task code such as `A`, `B` |\n| lang | **Yes** | language(`python` or `pypy`) |\n\n### 7. Confirm results of your submission\n\n```shell\nacsh recent  # for recent submission\nacsh status  # for your contest scores\n# acsh rc\n# acsh rs\n```\n\n## Additional Operations\n\n### Setup your cheat sheets\n\nFollow the steps below to use your own prepared cheat-sheet codes,\nPlease check the arguments with the `acsh help` command.\n\n#### Setup\n\n1. open the config folder by executing `acsh edit-cheat` / `acsh ec`.\n2. write your cheat sheets, and place the folder opened.\n\n#### Usage\n\n1. execute `acsh add-cheat <task_code> <cheat_name (without extension)>` so add the specified cheat file in the task folder.\n2. write `from <filename> import <func/class name>` in your code.\n3. The cheat files will be merged with main code file when you submit.\n\n### Setup initial codes\n\nIf you want to set a template code, add `initial.py` in the cheat-sheet setup shown above.\n\n### Pyenv management\n\nIf you want to run codes by pypy, you should use pyenv for python version management.\n\n1. Install the latest version of `3.8.*` and `pypy3.7-7.3.*`.\n2. execute the command below.\n\n```shell\npyenv A B C\n```\n\n- A: The Python version you usually use\n- B: The version of installed `3.8.*`\n- C: The version of installed `pypy3.7-7.3.*`\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.github.com/tani-cat/atcoder-shell",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "acshell",
    "package_url": "https://pypi.org/project/acshell/",
    "platform": null,
    "project_url": "https://pypi.org/project/acshell/",
    "project_urls": {
      "Homepage": "https://www.github.com/tani-cat/atcoder-shell"
    },
    "release_url": "https://pypi.org/project/acshell/2.0.0/",
    "requires_dist": [
      "appdirs (~=1.4.4)",
      "beautifulsoup4 (~=4.11)",
      "lxml (>=4.9)",
      "requests (>=2.28)",
      "tabulate (>=0.8.10)"
    ],
    "requires_python": ">=3.8",
    "summary": "the commandline shell for python and pypy AtCoder user",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17440073,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f9cd28c5bd8bd898307c45e5520789a147b1ec26098a3bd63dcd33c0a0dfdda",
          "md5": "5abe85cf2d7081cff11fe1b3d2178195",
          "sha256": "57a1274f157d5566a461a6b6f8e4814f6b9b8b38a0c53d8c140ab7c291af9cc3"
        },
        "downloads": -1,
        "filename": "acshell-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5abe85cf2d7081cff11fe1b3d2178195",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 20232,
        "upload_time": "2023-03-25T06:42:05",
        "upload_time_iso_8601": "2023-03-25T06:42:05.141493Z",
        "url": "https://files.pythonhosted.org/packages/9f/9c/d28c5bd8bd898307c45e5520789a147b1ec26098a3bd63dcd33c0a0dfdda/acshell-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0366377969b1e81544cb043ad6dc23350a22d9632fbaffee40ab5976a9508361",
          "md5": "f3aef0baa32e964ca637423fb6653bc1",
          "sha256": "b469ab3c2b1918c509991dbc4cf61f9dccd5cd4c629e9ace8e301aadafee92aa"
        },
        "downloads": -1,
        "filename": "acshell-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f3aef0baa32e964ca637423fb6653bc1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16754,
        "upload_time": "2023-03-25T06:42:07",
        "upload_time_iso_8601": "2023-03-25T06:42:07.411642Z",
        "url": "https://files.pythonhosted.org/packages/03/66/377969b1e81544cb043ad6dc23350a22d9632fbaffee40ab5976a9508361/acshell-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f9cd28c5bd8bd898307c45e5520789a147b1ec26098a3bd63dcd33c0a0dfdda",
        "md5": "5abe85cf2d7081cff11fe1b3d2178195",
        "sha256": "57a1274f157d5566a461a6b6f8e4814f6b9b8b38a0c53d8c140ab7c291af9cc3"
      },
      "downloads": -1,
      "filename": "acshell-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5abe85cf2d7081cff11fe1b3d2178195",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 20232,
      "upload_time": "2023-03-25T06:42:05",
      "upload_time_iso_8601": "2023-03-25T06:42:05.141493Z",
      "url": "https://files.pythonhosted.org/packages/9f/9c/d28c5bd8bd898307c45e5520789a147b1ec26098a3bd63dcd33c0a0dfdda/acshell-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0366377969b1e81544cb043ad6dc23350a22d9632fbaffee40ab5976a9508361",
        "md5": "f3aef0baa32e964ca637423fb6653bc1",
        "sha256": "b469ab3c2b1918c509991dbc4cf61f9dccd5cd4c629e9ace8e301aadafee92aa"
      },
      "downloads": -1,
      "filename": "acshell-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f3aef0baa32e964ca637423fb6653bc1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 16754,
      "upload_time": "2023-03-25T06:42:07",
      "upload_time_iso_8601": "2023-03-25T06:42:07.411642Z",
      "url": "https://files.pythonhosted.org/packages/03/66/377969b1e81544cb043ad6dc23350a22d9632fbaffee40ab5976a9508361/acshell-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}