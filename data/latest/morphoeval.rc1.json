{
  "info": {
    "author": "Sami Virpioja",
    "author_email": "sami.virpioja@helsinki.fi",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# morphoeval - Evaluation for morphological analysis and segmentation\n\n## Introduction\n\nThis package provides re-implementations for the BPR, CoMMA, and\nEMMA-2 evaluation methods for unsupervised morphological analysis and\nsegmentation introduced by Virpioja et al. (2011).\n\nThe BPR (boundary precision and recall) method calculates a\nmacro-average of the segmentation boundary matches over the words and\nis thus suitable for evaluating unsupervised or supervised\nmorphological segmentation.\n\nThe CoMMA and EMMA-2 methods are designed for the task of unsupervised\nmorphological analysis that was the goal in the Morpho Challenge\ncompetitions organized between 2005 and 2010 (see Kurimo et al.,\n2010). The challenge in the evaluation of unsupervised morphological\nanalysis is that the predicted morphemes labels and the labels in gold\nstandard analysis are not directly comparable, as an unsupervised\nalgorithm does not see the gold standard labels, and in contrast to\nunsupervised morphological segmentation, the labels are not simply\nsubsequences of words.\n\nBoth methods start with a bipartite morpheme-word graph that collects\nthe occurrences of the morphemes in the word forms within the test\nset. The CoMMA methods first use the morpheme-word graphs to create\nword graphs, with edges as co-occurring morphemes, for the predicted\nand gold standard analyses, and calculates the precision and recall of\nthe edges. The EMMA (Spiegler and Monson, 2010) and EMMA-2 methods use\nthe morpheme-word graph to make one-to-one or one-to-many assignments\nbetween the predicted and gold standard morphemes, and calculates the\nprecision and recall based on the mapped morphemes.\n\n## The choice of method\n\nThe choice of the evaluation method should depend on the task at hand\n(segmentation or analysis) and whether the method produces (and the\ngold standard includes) multiple alternative analyses per word. Here\nare our recommendations; see Virpioja et al. (2011) for further\ndiscussion.\n\n| Task                       | Single analysis per word | Multiple analyses per word |\n|----------------------------|--------------------------|----------------------------|\n| Morphological segmentation | BPR                      | BPR-S                      |\n| Morphological analysis     | EMMA-2, CoMMA-B0         | EMMA-2, CoMMA-S0           |\n\n## Usage\n\nInstalling the package provides a single command, `morphoeval`:\n\n```\n$ morphoeval --help\nusage: morphoeval [-h] [--metric {comma-b0,comma-b1,comma-s0,comma-s1,emma-2,bpr,bpr-s}] [--verbose]\n                     goldfile predfile [output]\n\nMetrics for morphological analysis and segmentation\n\npositional arguments:\n  goldfile              gold standard analysis file\n  predfile              predicted analysis file\n  output                output file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --metric {comma-b0,comma-b1,comma-s0,comma-s1,emma-2,bpr,bpr-s}, -m {comma-b0,comma-b1,comma-s0,comma-s1,emma-2,bpr,bpr-s}\n                        metric (default comma-b0)\n  --beta FLOAT          beta for using F_beta score\n  --verbose, -v         increase verbosity\n```\n\nThe parameters are simple enough: Use `--metric` to select the\nevaluation method that you want to use, and provide the gold standard\nand predicted analysis files.\n\nThe input files should be in the format used in Morpho Challenges:\nThe word and its analyses are separated by a tabular character, any\nalternative analyses by a comma and a space, and the labels of the\nanalyses by single space. For example:\n\n```\nbrush\tbrush_N\nbrushes\tbrush_N +3SG, brush_N +PL\n```\n\nThe output is written in YAML format:\n\n```yaml\nfiles: {predictions: pred.txt, reference: gold.txt}\nmetric: emma-2\nscores: {f-score: 0.9251, precision: 0.8939, recall: 0.9585}\n```\n\nNote: For large (>10k words) input files, running the evaluation may\ntake a considerable amount of memory.\n\n## Original scripts\n\nThe original scripts are available at\nhttp://morpho.aalto.fi/events/morphochallenge/, but do not work with\nmodern Python versions. The current implementation has the following\nlimitations compared to the previous scripts:\n\n- The original EMMA algorithm with one-to-one mapping between\n  morphemes is not supported.\n- Weighting of each input word is not supported.\n\n## References\n\nReferences as BibTeX:\n\n```\n% Kurimo et al. (2010)\n@inproceedings{kurimo-et-al-2010-morpho,\n    address = {Uppsala, Sweden},\n    author = {Mikko Kurimo and Sami Virpioja and Ville Turunen and Krista Lagus},\n    booktitle = {Proceedings of the 11th Meeting of the ACL Special Interest Group on Computational Morphology and Phonology},\n    month = {July},\n    pages = {87--95},\n    publisher = {Association for Computational Linguistics},\n    title = {Morpho Challenge 2005-2010: Evaluations and Results},\n    url = {https://aclanthology.org/W10-2211},\n    year = {2010},\n}\n\n% Spiegler and Monson (2010)\n@inproceedings{spiegler-monson-2010-emma,\n    address = {Beijing, China},\n    author = {Sebastian Spiegler and Christian Monson},\n    booktitle = {Proceedings of the 23rd International Conference on Computational Linguistics (Coling 2010)},\n    month = {August},\n    pages = {1029--1037},\n    publisher = {Coling 2010 Organizing Committee},\n    title = {{EMMA}: A novel Evaluation Metric for Morphological Analysis},\n    url = {https://aclanthology.org/C10-1116},\n    year = {2010},\n}\n\n% Virpioja et al. (2011)\n@article{virpioja-et-al-2011-empirical,\n    author = {Sami Virpioja and Ville T. Turunen and Sebastian Spiegler and Oskar Kohonen and Mikko Kurimo},\n    journal = {Traitement Automatique des Langues},\n    number = {2},\n    pages = {45--90},\n    publisher = {ATALA},\n    title = {Empirical Comparison of Evaluation Methods for Unsupervised Learning of Morphology},\n    url = {https://www.atala.org/sites/default/files/TAL_52_2_2.pdf},\n    volume = {52},\n    year = {2011},\n}\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/svirpioj/morphoeval",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "morphoeval",
    "package_url": "https://pypi.org/project/morphoeval/",
    "platform": null,
    "project_url": "https://pypi.org/project/morphoeval/",
    "project_urls": {
      "Bug Tracker": "https://github.com/svirpioj/morphoeval/issues",
      "Homepage": "https://github.com/svirpioj/morphoeval"
    },
    "release_url": "https://pypi.org/project/morphoeval/0.3.0/",
    "requires_dist": [
      "numpy",
      "pytest",
      "ruamel.yaml",
      "scipy",
      "tqdm",
      "munkres"
    ],
    "requires_python": ">=3.6",
    "summary": "Evaluation for morphological analysis and segmentation",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14351303,
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4902d620666d7d0fce5d6fd2544e09c028398247437d24d1910c5109a166019",
          "md5": "8d1709bb69eb402f7e3dc0610f682cd3",
          "sha256": "d37f976711f841a0d6225388eb12eb8cedd1c214e0b2983b32e60c1193e299b4"
        },
        "downloads": -1,
        "filename": "morphoeval-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d1709bb69eb402f7e3dc0610f682cd3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11074,
        "upload_time": "2022-07-06T12:49:46",
        "upload_time_iso_8601": "2022-07-06T12:49:46.158374Z",
        "url": "https://files.pythonhosted.org/packages/f4/90/2d620666d7d0fce5d6fd2544e09c028398247437d24d1910c5109a166019/morphoeval-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5aabff3ff25d6dbbaf81546b13ceca6304d8e8e39d72aac9cdee6811739f063",
          "md5": "9a405ae3ac653df16a719a9cfd941ed3",
          "sha256": "07fc87f8593d0170ca7bd72a8462a8da5be502495496d8d325232b66384d3113"
        },
        "downloads": -1,
        "filename": "morphoeval-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9a405ae3ac653df16a719a9cfd941ed3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21126,
        "upload_time": "2022-07-06T12:49:48",
        "upload_time_iso_8601": "2022-07-06T12:49:48.312509Z",
        "url": "https://files.pythonhosted.org/packages/f5/aa/bff3ff25d6dbbaf81546b13ceca6304d8e8e39d72aac9cdee6811739f063/morphoeval-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f4902d620666d7d0fce5d6fd2544e09c028398247437d24d1910c5109a166019",
        "md5": "8d1709bb69eb402f7e3dc0610f682cd3",
        "sha256": "d37f976711f841a0d6225388eb12eb8cedd1c214e0b2983b32e60c1193e299b4"
      },
      "downloads": -1,
      "filename": "morphoeval-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8d1709bb69eb402f7e3dc0610f682cd3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11074,
      "upload_time": "2022-07-06T12:49:46",
      "upload_time_iso_8601": "2022-07-06T12:49:46.158374Z",
      "url": "https://files.pythonhosted.org/packages/f4/90/2d620666d7d0fce5d6fd2544e09c028398247437d24d1910c5109a166019/morphoeval-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f5aabff3ff25d6dbbaf81546b13ceca6304d8e8e39d72aac9cdee6811739f063",
        "md5": "9a405ae3ac653df16a719a9cfd941ed3",
        "sha256": "07fc87f8593d0170ca7bd72a8462a8da5be502495496d8d325232b66384d3113"
      },
      "downloads": -1,
      "filename": "morphoeval-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9a405ae3ac653df16a719a9cfd941ed3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 21126,
      "upload_time": "2022-07-06T12:49:48",
      "upload_time_iso_8601": "2022-07-06T12:49:48.312509Z",
      "url": "https://files.pythonhosted.org/packages/f5/aa/bff3ff25d6dbbaf81546b13ceca6304d8e8e39d72aac9cdee6811739f063/morphoeval-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}