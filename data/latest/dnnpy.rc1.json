{
  "info": {
    "author": "Urchade Zaratiana",
    "author_email": "urchade.zaratiana@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# dnnpy Framework\n\n## Installation\n````bash\npip install dnnpy\n````\n## Example usage\n```python\nfrom dnnpy.activations import ReLU\nfrom dnnpy.data import make_regression_data\nfrom dnnpy.layers import Sequential, Dense, Dropout\nfrom dnnpy.loss_functions import MAELoss\nfrom dnnpy.optimizers import Adam\nfrom dnnpy.train import train\nfrom dnnpy.utils import split_data\nimport matplotlib.pyplot as plt\n\nn_inputs = 10\nhidden_units = 32\nn_outputs = 1\n\nx, y = make_regression_data(n_samples=1000, n_features=n_inputs, n_labels=1)\n\n(x_train, y_train), (x_test, y_test) = split_data(x, y, ratio=0.7)\n\nmodel = Sequential(Dense(in_features=n_inputs, out_features=hidden_units, activation=ReLU()),\n                   Dropout(0.3),\n                   Dense(in_features=hidden_units, out_features=n_outputs))\n\nopt = Adam(model.parameters(), lr=1e-3)\nloss_func = MAELoss()\n\ntrain_loss, valid_loss = train(data=(x_train, y_train), network=model, loss=loss_func, optimiser=opt, epochs=30,\n                               batch_size=16)\n\nplt.plot(train_loss, label='train')\nplt.plot(valid_loss, label='val')\nplt.legend()\nplt.show()\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dnnpy",
    "package_url": "https://pypi.org/project/dnnpy/",
    "platform": "",
    "project_url": "https://pypi.org/project/dnnpy/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/dnnpy/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Pytorch-like Neural Network framework",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7262214,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e2df2f12f7ddd671f418dcd38a87bbbb661d6fb8902fadc045332d186963583",
          "md5": "6545ed4adde9c8aee3bed2024cce4a95",
          "sha256": "384f98514e192fdfab5bf8a33be83a705b08919b0d17e8c4378fd69cbf11a5f5"
        },
        "downloads": -1,
        "filename": "dnnpy-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6545ed4adde9c8aee3bed2024cce4a95",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20994,
        "upload_time": "2020-05-17T15:49:29",
        "upload_time_iso_8601": "2020-05-17T15:49:29.301527Z",
        "url": "https://files.pythonhosted.org/packages/9e/2d/f2f12f7ddd671f418dcd38a87bbbb661d6fb8902fadc045332d186963583/dnnpy-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6eb66bc1e4fefd9b20f22f825ac9218cdb33b8445930fc7d98c0d3343e7d4c87",
          "md5": "fa33ddaf99cb81e1487c12552f1248d4",
          "sha256": "f38c126f976305b50c9f6c33a822d476c9ddd823a20c0ca4a9734f988d89b834"
        },
        "downloads": -1,
        "filename": "dnnpy-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fa33ddaf99cb81e1487c12552f1248d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17478,
        "upload_time": "2020-05-17T15:49:31",
        "upload_time_iso_8601": "2020-05-17T15:49:31.436971Z",
        "url": "https://files.pythonhosted.org/packages/6e/b6/6bc1e4fefd9b20f22f825ac9218cdb33b8445930fc7d98c0d3343e7d4c87/dnnpy-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9e2df2f12f7ddd671f418dcd38a87bbbb661d6fb8902fadc045332d186963583",
        "md5": "6545ed4adde9c8aee3bed2024cce4a95",
        "sha256": "384f98514e192fdfab5bf8a33be83a705b08919b0d17e8c4378fd69cbf11a5f5"
      },
      "downloads": -1,
      "filename": "dnnpy-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6545ed4adde9c8aee3bed2024cce4a95",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 20994,
      "upload_time": "2020-05-17T15:49:29",
      "upload_time_iso_8601": "2020-05-17T15:49:29.301527Z",
      "url": "https://files.pythonhosted.org/packages/9e/2d/f2f12f7ddd671f418dcd38a87bbbb661d6fb8902fadc045332d186963583/dnnpy-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6eb66bc1e4fefd9b20f22f825ac9218cdb33b8445930fc7d98c0d3343e7d4c87",
        "md5": "fa33ddaf99cb81e1487c12552f1248d4",
        "sha256": "f38c126f976305b50c9f6c33a822d476c9ddd823a20c0ca4a9734f988d89b834"
      },
      "downloads": -1,
      "filename": "dnnpy-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fa33ddaf99cb81e1487c12552f1248d4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 17478,
      "upload_time": "2020-05-17T15:49:31",
      "upload_time_iso_8601": "2020-05-17T15:49:31.436971Z",
      "url": "https://files.pythonhosted.org/packages/6e/b6/6bc1e4fefd9b20f22f825ac9218cdb33b8445930fc7d98c0d3343e7d4c87/dnnpy-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}