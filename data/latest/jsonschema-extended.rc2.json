{
  "info": {
    "author": "Julian Berman",
    "author_email": "Julian@GrayVines.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "==========\njsonschema\n==========\n\n|PyPI| |Pythons| |Travis| |AppVeyor|\n\n.. |PyPI| image:: https://img.shields.io/pypi/v/jsonschema.svg\n   :alt: PyPI version\n   :target: https://pypi.python.org/pypi/jsonschema\n\n.. |Pythons| image:: https://img.shields.io/pypi/pyversions/jsonschema.svg\n   :alt: Supported Python versions\n   :target: https://pypi.python.org/pypi/jsonschema\n\n.. |Travis| image:: https://travis-ci.org/Julian/jsonschema.svg?branch=master\n   :alt: Travis build status\n   :target: https://travis-ci.org/Julian/jsonschema\n\n.. |AppVeyor| image:: https://ci.appveyor.com/api/projects/status/adtt0aiaihy6muyn?svg=true\n   :alt: AppVeyor build status\n   :target: https://ci.appveyor.com/project/Julian/jsonschema\n\n\n``jsonschema`` is an implementation of `JSON Schema <http://json-schema.org>`_\nfor Python (supporting 2.7+ including Python 3).\n\n.. code-block:: python\n\n    >>> from jsonschema import validate\n\n    >>> # A sample schema, like what we'd get from json.load()\n    >>> schema = {\n    ...     \"type\" : \"object\",\n    ...     \"properties\" : {\n    ...         \"price\" : {\"type\" : \"number\"},\n    ...         \"name\" : {\"type\" : \"string\"},\n    ...     },\n    ... }\n\n    >>> # If no exception is raised by validate(), the instance is valid.\n    >>> validate({\"name\" : \"Eggs\", \"price\" : 34.99}, schema)\n\n    >>> validate(\n    ...     {\"name\" : \"Eggs\", \"price\" : \"Invalid\"}, schema\n    ... )                                   # doctest: +IGNORE_EXCEPTION_DETAIL\n    Traceback (most recent call last):\n        ...\n    ValidationError: 'Invalid' is not of type 'number'\n\nIt can also be used from console:\n\n.. code-block:: bash\n\n    $ jsonschema -i sample.json sample.schema\n\nFeatures\n--------\n\n* Full support for\n  `Draft 6 <https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.Draft6Validator>`_,\n  `Draft 4 <https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.Draft4Validator>`_\n  and\n  `Draft 3 <https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.Draft3Validator>`_\n\n* `Lazy validation <https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.IValidator.iter_errors>`_\n  that can iteratively report *all* validation errors.\n\n* Small and extensible\n\n* `Programmatic querying <https://python-jsonschema.readthedocs.io/en/latest/errors/#module-jsonschema>`_\n  of which properties or items failed validation.\n\n\nRelease Notes\n-------------\n\nVersion 2.6.0 drops support for Python 2.6.X (ha ha) and contains a\nnumber of small improvements in error messages, as well as a bug fix for\n``ErrorTree``.\n\n\nRunning the Test Suite\n----------------------\n\nIf you have ``tox`` installed (perhaps via ``pip install tox`` or your\npackage manager), running ``tox`` in the directory of your source checkout will\nrun ``jsonschema``'s test suite on all of the versions of Python ``jsonschema``\nsupports. Note that you'll need to have all of those versions installed in\norder to run the tests on each of them, otherwise ``tox`` will skip (and fail)\nthe tests on that version.\n\nOf course you're also free to just run the tests on a single version with your\nfavorite test runner. The tests live in the ``jsonschema.tests`` package.\n\n\nBenchmarks\n----------\n\n``jsonschema``'s benchmarks make use of `perf <https://perf.readthedocs.io>`_.\n\nRunning them can be done via ``tox -e perf``, or by invoking the ``perf``\ncommands externally (after ensuring that both it and ``jsonschema`` itself are\ninstalled)::\n\n    $ python -m perf jsonschema/benchmarks/test_suite.py --hist --output results.json\n\nTo compare to a previous run, use::\n\n    $ python -m perf compare_to --table reference.json results.json\n\nSee the ``perf`` documentation for more details.\n\n\nCommunity\n---------\n\nThere's a `mailing list <https://groups.google.com/forum/#!forum/jsonschema>`_\nfor this implementation on Google Groups.\n\nPlease join, and feel free to send questions there.\n\n\nContributing\n------------\n\nI'm Julian Berman.\n\n``jsonschema`` is on `GitHub <http://github.com/Julian/jsonschema>`_.\n\nGet in touch, via GitHub or otherwise, if you've got something to contribute,\nit'd be most welcome!\n\nYou can also generally find me on Freenode (nick: ``tos9``) in various\nchannels, including ``#python``.\n\nIf you feel overwhelmingly grateful, you can woo me with beer money via\nGoogle Pay with the email in my GitHub profile.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/Julian/jsonschema",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jsonschema-extended",
    "package_url": "https://pypi.org/project/jsonschema-extended/",
    "platform": "",
    "project_url": "https://pypi.org/project/jsonschema-extended/",
    "project_urls": {
      "Homepage": "http://github.com/Julian/jsonschema"
    },
    "release_url": "https://pypi.org/project/jsonschema-extended/0.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "An implementation of JSON Schema validation for Python",
    "version": "0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4072778,
  "releases": {
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae3f96a6aae3501593f015ac280d734c224cbe23148b43501016cdded3dfd493",
          "md5": "5024ea15566bcf073fe4ee62450423a7",
          "sha256": "b9622b2d39a40212cc4f72f8543d10f50f0e48a10614834dd649df6e37c81699"
        },
        "downloads": -1,
        "filename": "jsonschema-extended-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "5024ea15566bcf073fe4ee62450423a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 141948,
        "upload_time": "2018-07-16T14:18:30",
        "upload_time_iso_8601": "2018-07-16T14:18:30.559459Z",
        "url": "https://files.pythonhosted.org/packages/ae/3f/96a6aae3501593f015ac280d734c224cbe23148b43501016cdded3dfd493/jsonschema-extended-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12a8fa46251d3a81c3b92bac284e4755cec121a18589439a885d3cc8a07dff5d",
          "md5": "093004a79b72888b0de7b9162b973ce6",
          "sha256": "386d22c37d6c68cd46b42eb91385b108f1fe2e9ab7a4f9ffe746a37fd9fc87b6"
        },
        "downloads": -1,
        "filename": "jsonschema-extended-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "093004a79b72888b0de7b9162b973ce6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 117264,
        "upload_time": "2018-07-17T08:41:30",
        "upload_time_iso_8601": "2018-07-17T08:41:30.587065Z",
        "url": "https://files.pythonhosted.org/packages/12/a8/fa46251d3a81c3b92bac284e4755cec121a18589439a885d3cc8a07dff5d/jsonschema-extended-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "12a8fa46251d3a81c3b92bac284e4755cec121a18589439a885d3cc8a07dff5d",
        "md5": "093004a79b72888b0de7b9162b973ce6",
        "sha256": "386d22c37d6c68cd46b42eb91385b108f1fe2e9ab7a4f9ffe746a37fd9fc87b6"
      },
      "downloads": -1,
      "filename": "jsonschema-extended-0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "093004a79b72888b0de7b9162b973ce6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 117264,
      "upload_time": "2018-07-17T08:41:30",
      "upload_time_iso_8601": "2018-07-17T08:41:30.587065Z",
      "url": "https://files.pythonhosted.org/packages/12/a8/fa46251d3a81c3b92bac284e4755cec121a18589439a885d3cc8a07dff5d/jsonschema-extended-0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}