{
  "info": {
    "author": "Ole Schütt, Edward Ditler, Aliaksandr Yakutovich, Patrick Seewald, Tiziano Müller, Andreas Glöss, Leonid Kahle",
    "author_email": "ole.schuett@cp2k.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# AiiDA CP2K\n\n[![Build Status](https://travis-ci.com/dev-zero/aiida-cp2k.svg?branch=develop)](https://travis-ci.com/dev-zero/aiida-cp2k) [![codecov](https://codecov.io/gh/dev-zero/aiida-cp2k/branch/develop/graph/badge.svg)](https://codecov.io/gh/dev-zero/aiida-cp2k)\n\n**The CP2K plugin for the AiiDA workflow and provenance engine.**\n\n\n![logo](./aiida-cp2k_logo.png)\n\n# Installation\n\nIf you use `pip`, you can install it as: \n```\npip install aiida-cp2k\n```\n\n\n# Features\nFollowing the philosophy to _''enable without getting in the way''_, this plugin provides access to all of CP2K's capabilities through a small set of well-tested features:\n\n- A full [CP2K input](https://manual.cp2k.org) has to be provided as a nested Python dictionary ([example](./test/test_dft.py)):\n```\nparams = {'FORCE_EVAL': {'METHOD': 'Quickstep', 'DFT': { ... }}}\ncalc.use_parameters(ParameterData(dict=params))\n```\n\n- Section parameters are stored as key `_` in the dictionary:\n```\nxc_section = {'XC_FUNCTIONAL': {'_': 'LDA'}}\n```\n\n- Repeated sections are stored as a list:\n```\nkind_section = [{'_': 'H', 'BASIS_SET': 'DZVP-MOLOPT-GTH', 'POTENTIAL': 'GTH-LDA'},\n                {'_': 'O', 'BASIS_SET': 'DZVP-MOLOPT-GTH', 'POTENTIAL': 'GTH-LDA'}]\n```\n\n- Most data files (basis sets, pseudo potentials, VdW, etc.) are auto-discovered from CP2K's [data directory](https://github.com/cp2k/cp2k/tree/master/cp2k/data).\n```\ndft_section = {'BASIS_SET_FILE_NAME': 'BASIS_MOLOPT', ...}\n```\n\n- Additional data files can be added as AiiDA SinglefileData ([example](test/test_mm.py)):\n```\nwater_pot = SinglefileData(file=\"/tmp/water.pot\")\ncalc.use_file(water_pot, linkname=\"water_pot\")\n```\n\n- The start geometry can be provided as AiiDA StructureData ([example](./test/test_dft.py)):\n```\natoms = ase.build.molecule('H2O', vacuum=2.0)\ncalc.use_structure(StructureData(ase=atoms))\n```\n\n- Alternatively the start geometry can be contained in the CP2K input ([example](./test/test_no_struct.py)):\n```\ncoord_section = {' ': ['H    2.0   2.0   2.737166',\n                       'H    2.0   2.0   2.000000']},\n```\n\n- For restarting a calculation a parent folder can be attached  ([example](./test/test_restart.py)):\n```\ncalc2.use_parent_folder(calc1.out.remote_folder)\n```\n\n- By default only the output and restart file (if present) are retrieved. Additional files are retrieved upon request ([example](test/test_mm.py)):\n```\nsettings = {'additional_retrieve_list': [\"*.cube\"]}\ncalc.use_settings(ParameterData(dict=settings))\n```\n\n- The final geometry is extracted from the restart file (if present) and stored in AiiDA ([example](./test/test_geopt.py)):\n```\nprint(calc.out.output_structure)\n```\n\n- From the CP2K output only the #warnings and final energy are parsed ([example](./test/test_mm.py)):\n```\nprint(calc.res.nwarnings, calc.res.energy, calc.res.energy_units)\n```\n\n- The calculation is considered failed if #warnings can not be found ([example](./test/test_failure.py)).\n\n- The conversion of geometries between AiiDA and CP2K has a precision of at least 1e-10 Ångström ([example](./test/test_precision.py)).\n\n- The Python code complies with the [Flake8](http://flake8.pycqa.org) coding conventions.\n\n\n# Testing\n\nEvery commit and pull request is automatically tested by [TravisCI](https://travis-ci.org/cp2k/aiida-cp2k/).\n\nTo run the tests locally install [Docker](https://docs.docker.com/engine/installation/) and execute the following commands:\n```\ngit clone https://github.com/cp2k/aiida-cp2k\ndocker build -t aiida_cp2k_test aiida-cp2k\ndocker run -it --init aiida_cp2k_test pytest -v\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aiidateam/aiida-cp2k",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiida-cp2k-ng",
    "package_url": "https://pypi.org/project/aiida-cp2k-ng/",
    "platform": "",
    "project_url": "https://pypi.org/project/aiida-cp2k-ng/",
    "project_urls": {
      "Homepage": "https://github.com/aiidateam/aiida-cp2k"
    },
    "release_url": "https://pypi.org/project/aiida-cp2k-ng/1.0.0b2/",
    "requires_dist": [
      "aiida-core (==1.0.0b2)",
      "ase",
      "regex (>=2019.04.14)",
      "pre-commit (==1.14.4) ; extra == 'pre-commit'",
      "pgtest (==1.2.0) ; extra == 'testing'",
      "pytest (==4.4.1) ; extra == 'testing'"
    ],
    "requires_python": "",
    "summary": "The CP2K plugin for the AiiDA workflow and provenance engine.",
    "version": "1.0.0b2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5242052,
  "releases": {
    "1.0.0b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49933ef4f355c7eabffcd865ee60d39c65ee01722913e9e39d07bb270bf5d483",
          "md5": "73c452f5881c50a3fe5e2f8fba1e9cdc",
          "sha256": "eef81c87bb9d2d04c6c80dc307908d4f060e8cad1a3f5230324eabf76744e911"
        },
        "downloads": -1,
        "filename": "aiida_cp2k_ng-1.0.0b2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "73c452f5881c50a3fe5e2f8fba1e9cdc",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 28992,
        "upload_time": "2019-05-08T08:59:30",
        "upload_time_iso_8601": "2019-05-08T08:59:30.324023Z",
        "url": "https://files.pythonhosted.org/packages/49/93/3ef4f355c7eabffcd865ee60d39c65ee01722913e9e39d07bb270bf5d483/aiida_cp2k_ng-1.0.0b2-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be2a25d9f272e93f4d0600f4d8e183f8276862034fe4409e4cbcdb49629dc216",
          "md5": "c3de999419a0274a9373f3c9e96938fc",
          "sha256": "791e839d5497c1de841046602f30c4b32c9b883ce46bcf47aa6cbdddafa2a073"
        },
        "downloads": -1,
        "filename": "aiida_cp2k_ng-1.0.0b2.tar.gz",
        "has_sig": false,
        "md5_digest": "c3de999419a0274a9373f3c9e96938fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18948,
        "upload_time": "2019-05-08T08:59:32",
        "upload_time_iso_8601": "2019-05-08T08:59:32.234777Z",
        "url": "https://files.pythonhosted.org/packages/be/2a/25d9f272e93f4d0600f4d8e183f8276862034fe4409e4cbcdb49629dc216/aiida_cp2k_ng-1.0.0b2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "49933ef4f355c7eabffcd865ee60d39c65ee01722913e9e39d07bb270bf5d483",
        "md5": "73c452f5881c50a3fe5e2f8fba1e9cdc",
        "sha256": "eef81c87bb9d2d04c6c80dc307908d4f060e8cad1a3f5230324eabf76744e911"
      },
      "downloads": -1,
      "filename": "aiida_cp2k_ng-1.0.0b2-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "73c452f5881c50a3fe5e2f8fba1e9cdc",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 28992,
      "upload_time": "2019-05-08T08:59:30",
      "upload_time_iso_8601": "2019-05-08T08:59:30.324023Z",
      "url": "https://files.pythonhosted.org/packages/49/93/3ef4f355c7eabffcd865ee60d39c65ee01722913e9e39d07bb270bf5d483/aiida_cp2k_ng-1.0.0b2-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "be2a25d9f272e93f4d0600f4d8e183f8276862034fe4409e4cbcdb49629dc216",
        "md5": "c3de999419a0274a9373f3c9e96938fc",
        "sha256": "791e839d5497c1de841046602f30c4b32c9b883ce46bcf47aa6cbdddafa2a073"
      },
      "downloads": -1,
      "filename": "aiida_cp2k_ng-1.0.0b2.tar.gz",
      "has_sig": false,
      "md5_digest": "c3de999419a0274a9373f3c9e96938fc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18948,
      "upload_time": "2019-05-08T08:59:32",
      "upload_time_iso_8601": "2019-05-08T08:59:32.234777Z",
      "url": "https://files.pythonhosted.org/packages/be/2a/25d9f272e93f4d0600f4d8e183f8276862034fe4409e4cbcdb49629dc216/aiida_cp2k_ng-1.0.0b2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}