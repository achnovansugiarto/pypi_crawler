{
  "info": {
    "author": "Keenan W. Wilkinson",
    "author_email": "keenanwilkinson@outlook.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "KnitCryption Documentation and how-to\n\nKnitCryption/KnitCrypter is intended to make encrypting files/strings/data\nsimpler and less of a hassle. Still a constant work in progress, It's not the\nend of the world is something is 'missing' from the overall project.\n\nThere are some basics to go over first, these are the main tools KnitCrypter has\nto offer.\n\nknitpattern; a knitpattern object requires a minimum of two arguments but has the\nfollowing available:\n\n    1. string; a string of unique characters which will be refrenced for \n    assignment. It is recommended to utilize the string library to produce all\n    available characters. This is done so that the user can define thier own\n    sequence.\n\n    2. base; this is the base type a knitpattern object will utilize to generate\n    numerical assignment values. At this current time, it only accepts 2-10 or\n    hex and oct as appropriate base types, but RND is looking into expanding the\n    functionality.\n\n    3. func; by default, there is a function already in place that just returns\n    the current value of iteration, but is left as a keyword that the user may\n    implement thier own values to assignment. e.g. 'lambda x,y: x**y' where 'x'\n    is already defined by the generator and any 'args' passed into the\n    knitpattern object will be passed into the following arguments of the \n    function.\n\nIf a sequence does not return with any equivalent, a successful knitpattern\nobject will be created! Congrats! After a new object is created, it will have\nthe following attributes available:\n\n    1. prefix; the prefix property will return the base type of the object in\n    string form. e.g. 'hex' returns '0x' or 'base 6' returns '6b'.\n\n    2. sequence; the sequence property returns a dict object after calling a \n    sub-property of either 'from_keys' or 'from_values'. 'from_keys' returns \n    the original dictionary where the keys are-- go figure --the keys of the\n    new dictionary object, 'from_values' being the inverse and returning a dict\n    object where the values are the head of the new dict object.\n\nknitpattern objects allow the user to get thier total length directly from \ncalling 'len(knitpattern)' but is not immediately iterable. Instead use the\nsequence property to iterate through a knitpattern object.\n\nOverall, a knitpattern object would be instantiated, like this:\n>>> assignment = lamda x,y: y**x\n>>> my_key = knitpattern('abcdefg...',hex,assignment,3)\n\nknitcrypt; a knitcrypt object is a context manager to allow encrypting entire\nfiles from a knitpattern object. A knitcrypt object requires a minimum of two\narguments but has the following available:\n\n    1. path; the file path knitcrypt is supposed to look for, and open for\n    modification.\n\n    2. pattern; the knitpattern object which will utilize it's sequence to\n    either encrypt or decrypt a file\n\n    3. encoding; by default, the encoding is set to 'UTF-8' but has been added\n    to allow the user to either change the encoding manually or read different\n    files.\n\nUpon entry of a knitcrypt object, a new _File_Struct is created which opens the\ndesired file. When a _File_Struct object is created, it will have the following\nattributes available for encrypting/decrypting:\n\n    1. contents; this property allows the user to view the contents that were\n    read from the file prior to writing the file again.\n\n    2. stitch; temporarily creates a _Needle_Struct as a _Stitch_Struct. Like\n    the name suggests, it's intended purpose is to allow the user the ability to\n    encrypt either all or specified lines of the contents.\n\n    3. unknit; temporarily creates a _Needle_Struct as an _Unknit_Struct. It's\n    intended purpose is to allow the user the ability to decrypt all or \n    specified lines of the contents.\n\n    4. close; writes the contents back onto the file, then closes the \n    connection.\n\nA _Needle_Struct, while not directly available is an integral part of the\nKnitCryption process. When calling on the _File_Struct object for modification,\na _Needle_Struct (such as stitch or unknit) currently has two attributes \navailable to the user:\n\n    1. from_lines; specifies the range of desired lines to be modified.\n\n    2. all_lines; modifies all lines found inside of the _File_Struct contents.\n\n    3. stamp_contents; appends a stamp stating that the file has been encrypted.\n\n    4. erase_stamp; verifies first that a stamp has been added to the end of the\n    file contents, then removes it if it does.\n\nBefore a knitcrypt object exits, it will call the _File_Struct object's close\nmethod to finalize the modification.\n\nOverall a knitcrypt object should be instantiated like so:\n>>> with knitcrypt('.\\somepath', my_key) as blanket:\n>>>     blanket.stitch.all_lines()\n>>>     blanket.stitch.stamp_contents()",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/WilkinsonK/KnitCryption",
    "keywords": "",
    "license": "GPL-3.0 license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "KnitCryption",
    "package_url": "https://pypi.org/project/KnitCryption/",
    "platform": "",
    "project_url": "https://pypi.org/project/KnitCryption/",
    "project_urls": {
      "Homepage": "https://github.com/WilkinsonK/KnitCryption"
    },
    "release_url": "https://pypi.org/project/KnitCryption/2.0.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Encrytion package to assist in hiding data",
    "version": "2.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7869934,
  "releases": {
    "2.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2855f45ae87c5dfa511f267201513b1dd4d551d89ae78c1ce01d5d7d7891deab",
          "md5": "986e4a5265a8037d9865f03297518064",
          "sha256": "68e835432847d9ddad0242bca301ff61a3c648ba4819a16a493d18ac8d7dc7bd"
        },
        "downloads": -1,
        "filename": "KnitCryption-2.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "986e4a5265a8037d9865f03297518064",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5122,
        "upload_time": "2020-08-01T23:57:37",
        "upload_time_iso_8601": "2020-08-01T23:57:37.688460Z",
        "url": "https://files.pythonhosted.org/packages/28/55/f45ae87c5dfa511f267201513b1dd4d551d89ae78c1ce01d5d7d7891deab/KnitCryption-2.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d792e049e3bf47c833437ebb9d9b702b7619c8e9d99119fca9c4d1c5fb489932",
          "md5": "287da48351fcf39e15bc6e39aca58f64",
          "sha256": "a08e2ee66d58ad73468604f8079b47f8a6f0f8e08bf8854463a71d39a11d2ade"
        },
        "downloads": -1,
        "filename": "KnitCryption-2.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "287da48351fcf39e15bc6e39aca58f64",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7695,
        "upload_time": "2020-08-02T01:59:45",
        "upload_time_iso_8601": "2020-08-02T01:59:45.773988Z",
        "url": "https://files.pythonhosted.org/packages/d7/92/e049e3bf47c833437ebb9d9b702b7619c8e9d99119fca9c4d1c5fb489932/KnitCryption-2.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1858e38cc3c66d2e4aec182cb48191ae4b857a3f838bcfc3a4f4163882e1ab94",
          "md5": "1c0a1fb546140f4e17711c4343b18b3d",
          "sha256": "434cd1220c3a71071da37eb47137539766ead4f899285320c0de74d93607e438"
        },
        "downloads": -1,
        "filename": "KnitCryption-2.1.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "1c0a1fb546140f4e17711c4343b18b3d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8837,
        "upload_time": "2020-08-03T06:57:24",
        "upload_time_iso_8601": "2020-08-03T06:57:24.010858Z",
        "url": "https://files.pythonhosted.org/packages/18/58/e38cc3c66d2e4aec182cb48191ae4b857a3f838bcfc3a4f4163882e1ab94/KnitCryption-2.1.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d792e049e3bf47c833437ebb9d9b702b7619c8e9d99119fca9c4d1c5fb489932",
        "md5": "287da48351fcf39e15bc6e39aca58f64",
        "sha256": "a08e2ee66d58ad73468604f8079b47f8a6f0f8e08bf8854463a71d39a11d2ade"
      },
      "downloads": -1,
      "filename": "KnitCryption-2.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "287da48351fcf39e15bc6e39aca58f64",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7695,
      "upload_time": "2020-08-02T01:59:45",
      "upload_time_iso_8601": "2020-08-02T01:59:45.773988Z",
      "url": "https://files.pythonhosted.org/packages/d7/92/e049e3bf47c833437ebb9d9b702b7619c8e9d99119fca9c4d1c5fb489932/KnitCryption-2.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}