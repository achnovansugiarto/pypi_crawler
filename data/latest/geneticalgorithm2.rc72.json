{
  "info": {
    "author": "Demetry Pascal",
    "author_email": "qtckpuhdsa@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "[![PyPI\nversion](https://badge.fury.io/py/geneticalgorithm2.svg)](https://pypi.org/project/geneticalgorithm2/)\n[![Downloads](https://pepy.tech/badge/geneticalgorithm2)](https://pepy.tech/project/geneticalgorithm2)\n[![Downloads](https://pepy.tech/badge/geneticalgorithm2/month)](https://pepy.tech/project/geneticalgorithm2)\n[![Downloads](https://pepy.tech/badge/geneticalgorithm2/week)](https://pepy.tech/project/geneticalgorithm2)\n\n[![Gitter](https://badges.gitter.im/geneticalgorithm2/community.svg)](https://gitter.im/geneticalgorithm2/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](https://github.com/PasaOpasen/geneticalgorithm2/pulls)\n\n**geneticalgorithm2** (from [DPEA](https://github.com/PasaOpasen/PasaOpasen.github.io/blob/master/EA_packages.md)) **is the supported advanced optimized fork of non-supported package** [geneticalgorithm](https://github.com/rmsolgi/geneticalgorithm) of *Ryan (Mohammad) Solgi*\n\n- [About](#about)\n- [Installation](#installation)\n- [Updates information](#updates-information)\n  - [**Future**](#future)\n  - [6.8.5 minor update](#685-minor-update)\n  - [6.8.4 minor update](#684-minor-update)\n  - [6.8.3 types update](#683-types-update)\n  - [6.8.2 patch](#682-patch)\n  - [6.8.1 patch](#681-patch)\n  - [6.8.0 minor update](#680-minor-update)\n  - [6.7.7 refactor](#677-refactor)\n  - [6.7.6 bug fix](#676-bug-fix)\n  - [6.7.5 refactor](#675-refactor)\n  - [6.7.4 bug fix](#674-bug-fix)\n  - [6.7.3 speed up](#673-speed-up)\n  - [6.7.2 little update](#672-little-update)\n  - [6.7.1 patch](#671-patch)\n  - [6.7.0 minor update (new features)](#670-minor-update-new-features)\n  - [6.6.2 patch (speed up)](#662-patch-speed-up)\n  - [6.6.1 patch](#661-patch)\n  - [6.6.0 minor update (refactoring)](#660-minor-update-refactoring)\n  - [6.5.1 patch](#651-patch)\n  - [6.5.0 minor update (refactoring)](#650-minor-update-refactoring)\n  - [6.4.1 patch (bug fix)](#641-patch-bug-fix)\n  - [6.4.0 minor update (refactoring)](#640-minor-update-refactoring)\n  - [6.3.0 minor update (refactoring)](#630-minor-update-refactoring)\n- [Working process](#working-process)\n  - [Main algorithm structure](#main-algorithm-structure)\n  - [How to run](#how-to-run)\n  - [Constructor parameters](#constructor-parameters)\n  - [Genetic algorithm's parameters](#genetic-algorithms-parameters)\n    - [AlgorithmParams object](#algorithmparams-object)\n    - [Parameters of algorithm](#parameters-of-algorithm)\n      - [**Count parameters**](#count-parameters)\n      - [**Crossover**](#crossover)\n      - [**Mutation**](#mutation)\n      - [**Selection**](#selection)\n  - [Methods and Properties of model:](#methods-and-properties-of-model)\n- [Examples for begginer](#examples-for-begginer)\n  - [A minimal example](#a-minimal-example)\n  - [The simple example with integer variables](#the-simple-example-with-integer-variables)\n  - [The simple example with Boolean variables](#the-simple-example-with-boolean-variables)\n  - [The simple example with mixed variables](#the-simple-example-with-mixed-variables)\n  - [Optimization problems with constraints](#optimization-problems-with-constraints)\n  - [Middle example: select fixed count of objects from set](#middle-example-select-fixed-count-of-objects-from-set)\n- [U should know these features](#u-should-know-these-features)\n  - [Available crossovers](#available-crossovers)\n  - [Function timeout](#function-timeout)\n  - [Standard GA vs. Elitist GA](#standard-ga-vs-elitist-ga)\n  - [Standard crossover vs. stud EA crossover](#standard-crossover-vs-stud-ea-crossover)\n  - [Creating better start population](#creating-better-start-population)\n    - [Select best N of kN](#select-best-n-of-kn)\n    - [Do local optimization](#do-local-optimization)\n    - [Optimization with oppositions](#optimization-with-oppositions)\n  - [Revolutions](#revolutions)\n  - [Duplicates removing](#duplicates-removing)\n  - [Cache](#cache)\n  - [Report checker](#report-checker)\n  - [Middle callbacks](#middle-callbacks)\n  - [How to compare efficiency of several versions of GA optimization](#how-to-compare-efficiency-of-several-versions-of-ga-optimization)\n  - [Hints on how to adjust genetic algorithm's parameters (from `geneticalgorithm` package)](#hints-on-how-to-adjust-genetic-algorithms-parameters-from-geneticalgorithm-package)\n  - [How to get maximum speed](#how-to-get-maximum-speed)\n    - [Don't use plotting](#dont-use-plotting)\n    - [Don't use progress bar](#dont-use-progress-bar)\n    - [Try to use faster optimizing function](#try-to-use-faster-optimizing-function)\n    - [Specify custom optimized `mutation`, `crossover`, `selection`](#specify-custom-optimized-mutation-crossover-selection)\n    - [Specify `fill_children` method](#specify-fill_children-method)\n- [Examples pretty collection](#examples-pretty-collection)\n  - [Optimization test functions](#optimization-test-functions)\n    - [Sphere](#sphere)\n    - [Ackley](#ackley)\n    - [AckleyTest](#ackleytest)\n    - [Rosenbrock](#rosenbrock)\n    - [Fletcher](#fletcher)\n    - [Griewank](#griewank)\n    - [Penalty2](#penalty2)\n    - [Quartic](#quartic)\n    - [Rastrigin](#rastrigin)\n    - [SchwefelDouble](#schwefeldouble)\n    - [SchwefelMax](#schwefelmax)\n    - [SchwefelAbs](#schwefelabs)\n    - [SchwefelSin](#schwefelsin)\n    - [Stairs](#stairs)\n    - [Abs](#abs)\n    - [Michalewicz](#michalewicz)\n    - [Scheffer](#scheffer)\n    - [Eggholder](#eggholder)\n    - [Weierstrass](#weierstrass)\n  - [Using GA in reinforcement learning](#using-ga-in-reinforcement-learning)\n  - [Using GA with image reconstruction by polygons](#using-ga-with-image-reconstruction-by-polygons)\n- [Popular questions](#popular-questions)\n  - [How to disable autoplot?](#how-to-disable-autoplot)\n  - [How to plot population scores?](#how-to-plot-population-scores)\n  - [How to specify evaluated function for all population?](#how-to-specify-evaluated-function-for-all-population)\n  - [What about parallelism?](#what-about-parallelism)\n  - [How to initialize start population? How to continue optimization with new run?](#how-to-initialize-start-population-how-to-continue-optimization-with-new-run)\n# About\n\n[**geneticalgorithm2**](https://pasaopasen.github.io/geneticalgorithm2/) is very flexible and highly optimized Python library for implementing classic\n[genetic-algorithm](https://towardsdatascience.com/introduction-to-optimization-with-genetic-algorithm-2f5001d9964b) (GA).\n\nFeatures of this package:\n\n* written on pure python\n* fast\n* no hard dependences (only numpy primary)\n* easy to use, easy to run\n* easy to logging\n* many plotting functions\n* many cases of crossover, mutation and selection\n* support of integer, boolean and real (continuous/discrete) variables types\n* support of mixed types of variables\n* support of classic, elitist and studEA genetic algorithm combinations\n* support of revolutions and duplicates utilization  \n* reach support of customization\n    \n# Installation\n\n```\npip install geneticalgorithm2\n```\n\nor \n\n```\npip3 install geneticalgorithm2\n```\n\n# Updates information\n\n## **Future**\n\n- duplicates removing and revolutions will be moved to `MiddleCallbacks` and removed as alone `run()` parameters\n- `function_timeout` and `function` will be moved to `run()` method\n- new stop criteria callbacks (min std, max functions evaluations)\n\n## 6.8.5 minor update\n\n- update `OppOpPopInit` `2.0.0->2.0.1`\n- set default `function_timeout` to `None` which means no use of function time checking\n- remove `joblib` and `func_timeout` from necessary dependences\n\n## 6.8.4 minor update\n\n- a bit of refactor\n- little optimizations\n- add empty field `fill_children(pop_matrix, parents_count)` to `geneticalgorithm2` class to specify children creating behaviour (what is the most intensive part of algorithm after optimizing func calculations), see [this](#specify-fill_children-method)\n\n## 6.8.3 types update\n\n- much more type hints\n\n## 6.8.2 patch\n\n- for printing info\n- fix logic: now population is always sorted before going to callbacks\n\n## 6.8.1 patch\n\n- printing progress bar to `'stderr'` or `'stdout'` or `None` (disable) by choice (`progress_bar_stream` argument of `run()`), deprecated `disable_progress_bar`\n- little speed up\n- new `geneticalgorithm2.vectorized_set_function` set function, which can be faster for big populations \n\n## 6.8.0 minor update\n\n- remove `crossover_probability` model parameter because of it has no sense to exist (and 1.0 value is better than others, take a look at [results](/tests/output/sense_of_crossover_prob__no_sense.png)). This parameter came from `geneticalgorithm` old package and did`t change before.\n\n## 6.7.7 refactor\n\n- change some behavior about parents selection\n\n## 6.7.6 bug fix\n\n- fix some bug of `variable_type=='bool'`\n- some refactor of progress bar\n- add some dependences to `setup.py`\n\n## 6.7.5 refactor\n\n- shorter progress bar (length can be controled by setting `PROGRESS_BAR_LEN` field of `geneticalgorithm2` class)\n- shorter logic of `run()`, more informative output \n\n## 6.7.4 bug fix\n\n- bug fix\n\n## 6.7.3 speed up\n\n- refactor to make `run()` method faster\n\n## 6.7.2 little update\n\n- better flexible logic for report, [take a look](#report-checker)\n- removed `show mean` parameter from `model.plot_result` and now model reports only best score by default, not average and so on (u can specify if u wanna report average too)\n- `plot_several_lines` useful function\n\n## 6.7.1 patch\n\n- changes according to new [OppOpPopInit](https://github.com/PasaOpasen/opp-op-pop-init) version\n\n## 6.7.0 minor update (new features)\n\n- add `mutation_discrete_type` and `mutation_discrete_probability` parameters in model. It controls mutation behavior for discrete (integer) variables and works like `mutation_type` and `mutation_probability` work for continuous (real) variables. Take a look at [algorithm parameters](#parameters-of-algorithm) \n\n## 6.6.2 patch (speed up)\n\n- fix and speed up mutation\n\n## 6.6.1 patch\n\n- removed unnecessary dependences\n\n## 6.6.0 minor update (refactoring)\n\n- deprecated `variable_type_mixed`, now use `variable_type` for mixed optimization too\n- deprecated `output_dict`, now it's better object with name `result`\n- refactor of big part of **tests**\n- refactor of README\n\n## 6.5.1 patch\n\n- replace `collections.Sequence` with `collections.abc.Sequence`, now it should work for `python3.10+`\n\n## 6.5.0 minor update (refactoring)\n\n- another form of data object using with middle callbacks (`MiddleCallbackData` dataclass instead of dictionary)\n- type hints for callbacks module \n\n## 6.4.1 patch (bug fix)\n\n- fix bug setting attribute to algorithm parameters (in middle callbacks) \n\n\n## 6.4.0 minor update (refactoring)\n\n- new valid forms for `start_generation`; now it's valid to use\n    * `None`\n    * `str` path to saved generation\n    * dictionary with structure `{'variables': variables/None, 'scores': scores/None}`\n    * `Generation` object: `Generation(variables = variables, scores = scores)`\n    * `np.ndarray` with shape `(samples, dim)` for only population or `(samples, dim+1)` for concatenated population and score (scores is the last matrix column)\n    * `tuple(np.ndarray/None, np.ndarray/None)` for variables and scores\n  \n  here `variables` is 2D numpy array with shape `(samples, dim)`, `scores` is 1D numpy array with scores (function values) for each sample; [here](tests/output/start_gen.py) and [here](#how-to-initialize-start-population-how-to-continue-optimization-with-new-run) u can see examples of using these valid forms \n\n\n## 6.3.0 minor update (refactoring)\n\n- type hints for entire part of functions\n- new valid forms for function parameters (now u don't need to use numpy arrays everywhere)\n- `AlgorithmParams` class for base GA algorithm parameters (instead of dictionary)\n- `Generation` class for saving/loading/returning generation (instead of dictionary)\n\nAll that classes are collected [in file](geneticalgorithm2/classes.py). To maintain backward compatibility, `AlgorithmParams` and `Generation` classes have dictionary-like interface for getting fields: u can use `object.field` or `object['field']` notations.\n\n\n# Working process\n\n## Main algorithm structure\n\n```\nPreprocess: making inner functions depends on params, making/loading start population\n\nwhile True:\n\n    if reason to stop (time is elapsed / no progress / generation count is reached / min value is reached):\n        break\n\n\n    select parents to crossover from last population and to put them to new population:\n        select (elit count) best samples\n        select (parents count - elit count) random samples (by selection function)\n\n    create (total samples count - parents count) children (samples from selected parents) and put them to new population:\n        while not all chilren are created:\n            select 2 random parents\n            make child1, child2 from them using crossover\n            mutate child1 by mutation (model.mut)\n            mutate child2 by middle mutation (model.mut_middle)\n            put children to new population\n    \n    remove duplicates, make revolutions, sort population by scores\n    use callbacks, use middle callbacks\n\nPostprocess: plotting results, saving\n\n```\n\n## How to run\n\nFirstly, u should **import needed packages**. All available (but not always necessary) imports are:\n\n```python\nimport numpy as np\n\nfrom geneticalgorithm2 import geneticalgorithm2 as ga # for creating and running optimization model\n\nfrom geneticalgorithm2 import Generation, AlgorithmParams, MiddleCallbackData # classes for comfortable parameters setting and getting\n\nfrom geneticalgorithm2 import Crossover, Mutations, Selection # classes for specific mutation and crossover behavior\n\nfrom geneticalgorithm2 import Population_initializer # for creating better start population\n\nfrom geneticalgorithm2 import np_lru_cache # for cache function (if u want)\n\nfrom geneticalgorithm2 import plot_pop_scores # for plotting population scores, if u want\n\nfrom geneticalgorithm2 import Callbacks # simple callbacks (will be deprecated)\n\nfrom geneticalgorithm2 import Actions, ActionConditions, MiddleCallbacks # middle callbacks\n```\n\nNext step: **define minimized function** like\n\n```python\ndef function(X: np.ndarray) -> float: # X as 1d-numpy array\n    return np.sum(X**2) + X.mean() + X.min() + X[0]*X[2] # some float result\n```\n\nIf u want to find *maximum*, use this idea:\n\n```python\nf_tmp = lambda arr: -target(arr)\n\n#\n# ... find global min\n#\n\ntagret_result = -global_min\n```\n\nOkay, also u should **create the bounds for each variable** (if exist) like here:\n\n```python\nvar_bound = np.array([[0,10]]*3) # 2D numpy array with shape (dim, 2)\n\n# also u can use Sequence of Tuples (from version 6.3.0)\nvar_bound = [\n    (0, 10),\n    (0, 10),\n    (0, 10)\n]\n\n```\nU don't need to use variable boundaries only if variable type of each variable is boolean.\n\nAfter that **create a `geneticalgorithm2` (was importing as ga) object**:\n\n```python\n# style before 6.3.0 version (but still works)\nmodel = ga(function, dimension = 3, \n                variable_type='real', \n                 variable_boundaries = var_bound,\n                 function_timeout = 10,\n                 algorithm_parameters={'max_num_iteration': None,\n                                       'population_size':100,\n                                       'mutation_probability': 0.1,\n                                       'mutation_discrete_probability': None,\n                                       'elit_ratio': 0.01,\n                                       'parents_portion': 0.3,\n                                       'crossover_type':'uniform',\n                                       'mutation_type': 'uniform_by_center',\n                                       'mutation_discrete_type': 'uniform_discrete',\n                                       'selection_type': 'roulette',\n                                       'max_iteration_without_improv':None}\n            )\n\n# from version 6.3.0 it is equal to\n\nmodel = ga(function, dimension = 3, \n                variable_type='real', \n                 variable_boundaries = var_bound,\n                 function_timeout = 10,\n                 algorithm_parameters=AlgorithmParams(\n                     max_num_iteration = None,\n                     population_size = 100,\n                     mutation_probability = 0.1,\n                     mutation_discrete_probability = None,\n                     elit_ratio = 0.01,\n                     parents_portion = 0.3,\n                     crossover_type = 'uniform',\n                     mutation_type = 'uniform_by_center',\n                     mutation_discrete_type = 'uniform_discrete',\n                     selection_type = 'roulette',\n                     max_iteration_without_improv = None\n                     )\n            )\n\n# or            \nmodel = ga(function, dimension = 3, \n                variable_type='real', \n                 variable_boundaries = var_bound,\n                 function_timeout = 10,\n                 algorithm_parameters=AlgorithmParams()\n            )           \n\n```\n\n**Run the search method**:\n\n```python\n# all of this parameters are default\nresult = model.run(\n    no_plot = False, \n    progress_bar_stream = 'stdout',\n    disable_printing = False,\n\n    set_function = None, \n    apply_function_to_parents = False, \n    start_generation = None,\n    studEA = False,\n    mutation_indexes = None,\n\n    init_creator = None,\n    init_oppositors = None,\n    duplicates_oppositor = None,\n    remove_duplicates_generation_step = None,\n    revolution_oppositor = None,\n    revolution_after_stagnation_step = None,\n    revolution_part = 0.3,\n    \n    population_initializer = Population_initializer(select_best_of = 1, local_optimization_step = 'never', local_optimizer = None),\n    \n    stop_when_reached = None,\n    callbacks = [],\n    middle_callbacks = [],\n    time_limit_secs = None, \n    save_last_generation_as = None,\n    seed = None\n    )\n\n# best solution\nprint(result.variable)\n\n# best score\nprint(result.score)\n\n# last population\nprint(result.last_population)\n\n```\n\n## Constructor parameters\n\n* **function** (`Callable[[np.ndarray], float]`) - the given objective function to be minimized  \nNOTE: This implementation minimizes the given objective function. (For maximization multiply function by a negative sign: the absolute value of the output would be the actual objective function)\n        \n* **dimension** (`int`) - the number of decision variables\n        \n* **variable_type** (`Union[str, Sequence[str]]`) - 'bool' if all variables are Boolean; 'int' if all variables are integer; and 'real' if all variables are real value or continuous. For mixed types use sequence of string of type for each variable\n        \n* **variable_boundaries** (`Optional[Union[np.ndarray, Sequence[Tuple[float, float]]]]`) - Default None; leave it None if variable_type is 'bool'; otherwise provide an sequence of tuples of length two as boundaries for each variable; the length of the array must be equal dimension. \nFor example, `np.array([[0,100],[0,200]])` or `[(0, 100), (0, 200)]` determines lower boundary 0 and upper boundary 100 for first and upper boundary 200 for second variable where dimension is 2.\n        \n* **function_timeout** (`float`) - if the given function does not provide \noutput before function_timeout (unit is seconds) the algorithm raise error.\nFor example, when there is an infinite loop in the given function. `None` means disabling\n        \n* **algorithm_parameters** (`Union[AlgorithmParams, Dict[str, Any]]`). Dictionary or AlgorithmParams object with fields:  \n    * @ **max_num_iteration** (`int/None`) - stoping criteria of the genetic algorithm (GA)  \n    * @ **population_size** (`int > 0`)   \n    * @ **mutation_probability** (`float in [0,1]`)\n    * @ **mutation_discrete_probability** (`float in [0,1]` or `None`)\n    * @ **elit_ration** (`float in [0,1]`) - part of elit objects in population; if > 0, there always will be 1 elit object at least  \n    * @ **parents_portion** (`float in [0,1]`) - part of parents from previous population to save in next population (including `elit_ration`)  \n    * @ **crossover_type** (`Union[str, Callable[[np.ndarray, np.ndarray], Tuple[np.ndarray, np.ndarray]]]`) - Default is `uniform`.\n    * @ **mutation_type** (`Union[str, Callable[[float, float, float], float]]`) - Default is `uniform_by_center`\n    * @ **mutation_discrete_type** (`Union[str, Callable[[int, int, int], int]]`) - Default is `uniform_discrete`\n    * @ **selection_type** (`Union[str, Callable[[np.ndarray, int], np.ndarray]]`) - Default is `roulette`\n    * @ **max_iteration_without_improv** (`int/None`) - maximum number of successive iterations without improvement. If `None` it is ineffective\n\n## Genetic algorithm's parameters\n\n### AlgorithmParams object\n\nThe parameters of GA is defined as a dictionary or `AlgorithmParams` object:\n\n```python\n\nalgorithm_param = AlgorithmParams(\n                max_num_iteration = None,\n                population_size = 100,\n                mutation_probability = 0.1,\n                mutation_discrete_probability = None,\n                elit_ratio = 0.01,\n                parents_portion = 0.3,\n                crossover_type = 'uniform',\n                mutation_type = 'uniform_by_center',\n                mutation_discrete_type = 'uniform_discrete',\n                selection_type = 'roulette',\n                max_iteration_without_improv = None\n            )\n\n\n# old style with dictionary\n# sometimes it's easier to use this style\n# especially if u need to set only few params\nalgorithm_param = {\n                   'max_num_iteration': None,\n                   'population_size':100,\n                   'mutation_probability': 0.1,\n                   'mutation_discrete_probability': None,\n                   'elit_ratio': 0.01,\n                   'parents_portion': 0.3,\n                   'crossover_type':'uniform',\n                   'mutation_type': 'uniform_by_center',\n                   'mutation_discrete_type': 'uniform_discrete',\n                   'selection_type': 'roulette',\n                   'max_iteration_without_improv':None\n                   }\n\n```\n\nTo get actual default params use code:\n```python\nparams = ga.default_params\n```\n\nTo get actual parameters of existing model use code:\n```python\nparams = model.param\n```\n\nAn example of setting a new set of parameters for genetic algorithm and running `geneticalgorithm2` for our first simple example again:\n\n```python\nimport numpy as np\nfrom geneticalgorithm2 import geneticalgorithm2 as ga\n\ndef f(X):\n    return np.sum(X)\n    \n    \nvarbound=[(0,10)]*3\n\nalgorithm_param = {'max_num_iteration': 3000,\n                   'population_size':100,\n                   'mutation_probability': 0.1,\n                   'mutation_discrete_probability': None,\n                   'elit_ratio': 0.01,\n                   'parents_portion': 0.3,\n                   'crossover_type':'uniform',\n                   'mutation_type': 'uniform_by_center',\n                   'mutation_discrete_type': 'uniform_discrete',\n                   'selection_type': 'roulette',\n                   'max_iteration_without_improv':None}\n\nmodel=ga(function=f,\n            dimension=3,\n            variable_type='real',\n            variable_boundaries=varbound,\n            algorithm_parameters=algorithm_param\n        )\n\nmodel.run()\n```\n**Important**. U may use the small dictionary with only important parameters; other parameters will be default. It means the dictionary\n```js\nalgorithm_param = {'max_num_iteration': 150,\n                   'population_size':1000}\n```\nis equal to:\n```js\nalgorithm_param = {'max_num_iteration': 150,\n                   'population_size':1000,\n                   'mutation_probability': 0.1,\n                   'mutation_discrete_probability': None,\n                   'elit_ratio': 0.01,\n                   'parents_portion': 0.3,\n                   'crossover_type':'uniform',\n                   'mutation_type': 'uniform_by_center',\n                   'mutation_discrete_type': 'uniform_discrete',\n                   'selection_type': 'roulette',\n                   'max_iteration_without_improv':None}\n```\n\nBut it is better to use `AlgorithmParams` object instead of dictionaries.\n\n### Parameters of algorithm\n\n#### **Count parameters**\n\n* **max_num_iteration**: The termination criterion of GA. \nIf this parameter's value is `None` the algorithm sets maximum number of iterations automatically as a function of the dimension, boundaries, and population size. The user may enter any number of iterations that they want. It is highly recommended that the user themselves determines the **max_num_iterations** and not to use `None`. Notice that **max_num_iteration** has been changed to 3000 (it was already `None`). \n\n* **population_size**: determines the number of trial solutions in each iteration.\n\n* **elit_ration**: determines the number of elites in the population. The default value is 0.01 (i.e. 1 percent). For example when population size is 100 and **elit_ratio** is 0.01 then there is one elite unit in the population. If this parameter is set to be zero then `geneticalgorithm2` implements a standard genetic algorithm instead of elitist GA. [See example](#standard-ga-vs-elitist-ga) of difference\n\n* **parents_portion**: the portion of population filled by the members of the previous generation (aka parents); default is 0.3 (i.e. 30 percent of population)\n\n* **max_iteration_without_improv**: if the algorithms does not improve the objective function over the number of successive iterations determined by this parameter, then GA stops and report the best found solution before the `max_num_iterations` to be met. The default value is `None`. \n\n#### **Crossover**\n\n* **crossover_type**: there are several options including `'one_point'`, `'two_point'`, `'uniform'`, `'segment'`, `'shuffle'` crossover functions; default is `'uniform'` crossover. U also can use crossover as functions from `Crossover` class:\n    * `Crossover.one_point()`\n    * `Crossover.two_point()`\n    * `Crossover.uniform()`\n    * `Crossover.uniform_window(window = 7)`\n    * `Crossover.shuffle()`\n    * `Crossover.segment()`\n    * `Crossover.mixed(alpha = 0.5)` -- only for real variables\n    * `Crossover.arithmetic()` -- only for real variables\n    \n    Have a look at [crossovers' logic](#available-crossovers)\n\n    If u want, write your own crossover function using simple syntax:\n    ```python\n    def my_crossover(parent_a: np.ndarray, parent_b: np.ndarray):\n        # some code\n        return child_1, child_2\n    ```\n\n#### **Mutation**\n\n* **mutation_probability**: determines the chance of each gene in each individual solution to be replaced by a random value. Works for continious variables or for all variables if **mutation_discrete_probability** is `None`\n\n* **mutation_discrete_probability**: works like **mutation_probability** but for discrete variables. If `None`, will be changed to **mutation_probability** value; so just don't specify this parameter if u don't need special mutation behaviour for discrete variables\n\n* **mutation_type**: there are several options (only for real variables) including `'uniform_by_x'`, `'uniform_by_center'`, `'gauss_by_x'`, `'gauss_by_center'`; default is `'uniform_by_center'`. U also can use mutation as functions from `Mutations` class:\n    * `Mutations.gauss_by_center(sd = 0.2)`\n    * `Mutations.gauss_by_x(sd = 0.1)`\n    * `Mutations.uniform_by_center()`\n    * `Mutations.uniform_by_x()`\n\n    (If u want) write your mutation function using syntax:\n    ```python\n    def my_mutation(current_value: float, left_border: float, right_border: float) -> float:\n        # some code\n        return new_value \n    ```\n\n* **mutation_discrete_type**: now there is only one option for discrete variables mutation: `uniform_discrete` (`Mutations.uniform_discrete()`) which works like `uniform_by_center` real mutation but with integer numbers. Anyway, this option was included at version 6.7.0 to support custom discrete mutations if u need it. For using custom mutation just set this parameter to function like\n  ```python\n    def my_mutation(current_value: int, left_border: int, right_border: int) -> int:\n        # some code\n        return new_value \n  ```\n\n#### **Selection**\n\n* **selection_type**: there are several options (only for real) including `'fully_random'` (just for fun), `'roulette'`, `'stochastic'`, `'sigma_scaling'`, `'ranking'`, `'linear_ranking'`, `'tournament'`; default is `roulette`. U also can use selection as functions from `Selection` class:\n    * `Selection.fully_random()`\n    * `Selection.roulette()`\n    * `Selection.stochastic()`\n    * `Selection.sigma_scaling(epsilon = 0.05)`\n    * `Selection.ranking()`\n    * `Selection.linear_ranking(selection_pressure = 1.5)`\n    * `Selection.tournament(tau = 2)`\n\n    If u want, write your selection function using syntax:\n    ```python\n    def my_mutation(sorted_scores: np.ndarray, parents_count: int):\n        # some code\n        return array_of_parents_indexes \n    ```\n![](tests/output/selections.png)\n\n## Methods and Properties of model:\n\nThe main method if **run()**. It has parameters:\n\n* **no_plot** (`bool`) - do not plot results using matplotlib by default\n\n* **progress_bar_stream** (`Optional[str]`) - `'stdout'` to print progress bar to `stdout`, `'stderr'` for `stderr`, `None` to disable progress bar (also it can be faster by 10-20 seconds)\n\n* **disable_printing** (`bool`) - don't print any text (except progress bar)\n\n* **set_function** (`Optional[Callable[[np.ndarray], np.ndarray]]`): 2D-array -> 1D-array function, which applies to matrix of population (size (samples, dimension)) to estimate their values (\"scores\" in some sense)\n        \n* **apply_function_to_parents** (`bool`) - apply function to parents from previous generation (if it's needed), it can be needed at working with games agents, but for other tasks will just waste time\n\n* **start_generation** (`Union[str, Dict[str, np.ndarray], Generation, np.ndarray, Tuple[Optional[np.ndarray], Optional[np.ndarray]]]`) -- one of cases ([take a look](#how-to-initialize-start-population-how-to-continue-optimization-with-new-run)):\n  *  `Generation` object\n  *  dictionary with structure `{'variables':2D-array of samples, 'scores': function values on samples}` (if `'scores'` value is `None` the scores will be compute)\n  *  path to `.npz` file (`str`) with saved generation  \n  *  `np.ndarray` (with shape `(samples, dim)` or `(samples, dim+1)`) \n  *  tuple of `np.ndarray`s / `None`. \n\n* **studEA** (`bool`) - using stud EA strategy (crossover with best object always). Default is false. [Take a look](#standard-crossover-vs-stud-ea-crossover)\n* **mutation_indexes** (`Optional[Union[Sequence[int], Set[int]]]`) - indexes of dimensions where mutation can be performed (all dimensions by default). [Example](tests/mut_indexes.py)\n\n* **init_creator**: (`Optional[Callable[[], np.ndarray]]`), the function creates population samples. By default -- random uniform for real variables and random uniform for int. [Example](#optimization-with-oppositions)\n* **init_oppositors**: (`Optional[Sequence[Callable[[np.ndarray], np.ndarray]]]`) -- the list of oppositors creates oppositions for base population. No by default. [Example](#optimization-with-oppositions)\n* **duplicates_oppositor**: `Optional[Callable[[np.ndarray], np.ndarray]]`, oppositor for applying after duplicates removing. By default -- using just random initializer from creator. [Example](#duplicates-removing)\n* **remove_duplicates_generation_step**: `None/int`, step for removing duplicates (have a sense with discrete tasks). No by default. [Example](#duplicates-removing)\n* **revolution_oppositor** = `Optional[Callable[[np.ndarray], np.ndarray]]`, oppositor for revolution time. No by default. [Example](#revolutions)\n* **revolution_after_stagnation_step** = `None/int`, create revolution after this generations of stagnation. No by default. [Example](#revolutions)\n* **revolution_part** (`float`): the part of generation to being oppose. By default is 0.3. [Example](#revolutions)\n\n* **population_initializer** (`Tuple[int, Callable[[np.ndarray, np.ndarray], Tuple[np.ndarray, np.ndarray]]]`) -- object for actions at population initialization step to create better start population. [Take a look](#creating-better-start-population)\n\n* **stop_when_reached** (`Optional[float]`) -- stop searching after reaching this value (it can be potential minimum or something else)\n\n* **callbacks** (`Optional[Sequence[Callable[[int, List[float],  np.ndarray, np.ndarray], None]]]`) - list of callback functions with structure:\n  ```python \n  def callback(generation_number, report_list, last_population_as_2D_array, last_population_scores_as_1D_array):\n      #\n      # do some action\n      #\n  ```\n    See [example of using callbacks](tests/callbacks.py). There are several callbacks in `Callbacks` class, such as:\n    * `Callbacks.SavePopulation(folder, save_gen_step = 50, file_prefix = 'population')`\n    * `Callbacks.PlotOptimizationProcess(folder, save_gen_step = 50, show = False, main_color = 'green', file_prefix = 'report')`\n\n* **middle_callbacks** (`Sequence`) - list of functions made `MiddleCallbacks` class (large opportunity, please, have a look at [this](#middle-callbacks)) \n\n\n* **time_limit_secs** (`Optional[float]`) - limit time of working (in seconds). If `None`, there is no time limit (limit only for count of generation and so on). See [little example of using](tests/time_limit.py). Also there is simple conversion function for conversion some time in seconds:\n  ```python\n  from truefalsepython import time_to_seconds\n\n  total_seconds = time_to_seconds(\n      days = 2, # 2 days\n      hours = 13, # plus 13 hours\n      minutes = 7, # plus 7 minutes\n      seconds = 44 # plus 44 seconds\n  )\n  ```\n\n* **save_last_generation_as** (`Optional[str]`) - path to `.npz` file for saving last_generation as numpy dictionary like `{'population': 2D-array, 'scores': 1D-array}`, `None` if doesn't need to save in file; [take a look](#how-to-initialize-start-population-how-to-continue-optimization-with-new-run)\n\n* **seed** (`Optional[int]`) - random seed (None is doesn't matter)\n\nIt would be more logical to use params like `studEA` as an algorithm param, but `run()`-way can be more comfortable for real using.\n\n    \n**output**:  \n  \n* `result`: is a wrap on last generation with fields:\n  * `last_generation` -- `Generation` object of last generation\n  * `variable` -- best unit of last generation\n  * `score` -- metric of the best unit\n  \n* `report`: is a record of the progress of the algorithm over iterations. Also u can specify to report not only best values. [Go to](#report-checker)\n\n\n\n\n# Examples for begginer\n\n## A minimal example \nAssume we want to find a set of `X = (x1,x2,x3)` that minimizes function `f(X) = x1 + x2 + x3` where `X` can be any real number in `[0, 10]`.\n\nThis is a trivial problem and we already know that the answer is `X = (0,0,0)` where `f(X) = 0`.  \n\nWe just use this simple example to see how to implement geneticalgorithm2. First we import geneticalgorithm2 and [numpy](https://numpy.org). Next, we define \nfunction `f` which we want to minimize and the boundaries of the decision variables. Then simply geneticalgorithm2 is called to solve the defined optimization problem as follows:\n\n```python\nimport numpy as np\nfrom geneticalgorithm2 import geneticalgorithm2 as ga\n\ndef f(X):\n    return np.sum(X)\n    \n    \nvarbound = [[0,10]]*3\n\nmodel = ga(function=f, dimension=3, variable_type='real', variable_boundaries=varbound)\n\nmodel.run()\n```\n\n    \n**geneticalgorithm2 has some arguments**:   \n1. Obviously the first argument is the function `f` we already defined.  \n2. Our problem has three variables so we set dimension equal `3`.   \n3. Variables are real (continuous) so we use string `'real'` to notify the type of \nvariables (geneticalgorithm2 accepts other types including boolean, integers and \nmixed; see other examples).  \n1. Finally, we input `varbound` which includes the boundaries of the variables. \nNote that the length of variable_boundaries must be equal to dimension.\n  \nIf you run the code, you should see a progress bar that shows the progress of the \ngenetic algorithm (GA) and then the solution, objective function value and the convergence curve as follows:\n\n![](https://github.com/PasaOpasen/geneticalgorithm2/blob/master/genetic_algorithm_convergence.gif)\n\nAlso we can access to the best answer of the defined optimization problem found by GA as a dictionary and a report of the progress of the genetic algorithm. \nTo do so we complete the code as follows:\n\n```python\nconvergence = model.report\n\nsolution = model.result\n```\n\n## The simple example with integer variables\n\nConsidering the problem given in the simple example above.\nNow assume all variables are integers. So `x1, x2, x3` can be any integers in `[0, 10]`.\nIn this case the code is as the following:\n\n```python\nimport numpy as np\nfrom geneticalgorithm2 import geneticalgorithm2 as ga\n\ndef f(X):\n    return np.sum(X)\n    \n    \nvarbound = [[0,10]]*3\n\nmodel = ga(function=f, dimension=3, variable_type='int', variable_boundaries=varbound)\n\nmodel.run()\n```\nSo, as it is seen the only difference is that for `variable_type` we use string `'int'`. \n\n## The simple example with Boolean variables\n\nConsidering the problem given in the simple example above.\nNow assume all variables are boolean instead of real or integer. So `X` can be either zero or one. Also instead of three let's have 30 variables.\nIn this case the code is as the following:\n\n```python\nimport numpy as np\nfrom geneticalgorithm2 import geneticalgorithm2 as ga\n\ndef f(X):\n    return np.sum(X)\n\nmodel = ga(function=f, dimension=30, variable_type='bool')\n\nmodel.run()\n```\n\nNote for variable_type we use string `'bool'` when all variables are boolean.  \nNote that when variable_type equal `'bool'` there is no need for `variable_boundaries` to be defined.\n\n## The simple example with mixed variables\n\nConsidering the problem given in the the simple example above where we want to minimize `f(X) = x1 + x2 + x3`. \nNow assume `x1` is a real (continuous) variable in `[0.5,1.5]`, `x2` is an integer variable in `[1,100]`, and `x3` is a boolean variable that can be either zero or one.\nWe already know that the answer is `X = (0.5,1,0)` where `f(X) = 1.5`\nWe implement geneticalgorithm2 as the following:\n\n```python\nimport numpy as np\nfrom geneticalgorithm2 import geneticalgorithm2 as ga\n\ndef f(X):\n    return np.sum(X)\n    \nvarbound = [[0.5,1.5],[1,100],[0,1]]\nvartype = ('real', 'int', 'int')\nmodel = ga(function=f, dimension=3, variable_type=vartype, variable_boundaries=varbound)\n\nmodel.run()\n```\n\n## Optimization problems with constraints\nIn all above examples, the optimization problem was unconstrained. Now consider that we want to minimize `f(X) = x1+x2+x3` where `X` is a set of real variables in `[0, 10]`. Also we have an extra constraint so that sum of `x1` and `x2` is equal or greater than 2. The minimum of `f(X)` is 2.\nIn such a case, a trick is to define penalty function. Hence we use the code below:\n\n```python\nimport numpy as np\nfrom geneticalgorithm2 import geneticalgorithm2 as ga\n\ndef f(X):\n    pen=0\n    if X[0]+X[1]<2:\n        pen=500+1000*(2-X[0]-X[1])\n    return np.sum(X)+pen\n    \nvarbound=[[0,10]]*3\n\nmodel=ga(function=f,dimension=3,variable_type='real',variable_boundaries=varbound)\n\nmodel.run()\n\n```\nAs seen above we add a penalty to the objective function whenever the constraint is not met.  \n\nSome hints about how to define a penalty function:  \n\n1. Usually you may use a constant greater than the maximum possible value of the objective function if the maximum is known or if we have a guess of that. Here the highest possible value of our function is 300 (i.e. if all variables were 10, `f(X)=300`). So I chose a constant of 500. So, if a trial solution is not in the feasible region even though its objective function may be small, the penalized objective function (fitness function) is worse than any feasible solution.\n2. Use a coefficient big enough and multiply that by the amount of violation. This helps the algorithm learn how to approach feasible domain.\n3. How to define penalty function usually influences the convergence rate of an evolutionary algorithm. In my [book on metaheuristics and evolutionary algorithms](https://www.wiley.com/en-us/Meta+heuristic+and+Evolutionary+Algorithms+for+Engineering+Optimization-p-9781119386995) you can learn more about that. \n4. Finally after you solved the problem test the solution to see if boundaries are met. If the solution does not meet constraints, it shows that a bigger penalty is required. However, in problems where optimum is exactly on the boundary of the feasible region (or very close to the constraints) which is common in some kinds of problems, a very strict and big penalty may prevent the genetic algorithm to approach the optimal region. In such a case designing an appropriate penalty function might be more challenging. Actually what we have to do is to design a penalty function that let the algorithm searches unfeasible domain while finally converge to a feasible solution. Hence you may need more sophisticated penalty functions. But in most cases the above formulation work fairly well.\n\n## Middle example: select fixed count of objects from set\n\nFor some task u need to think a lot and create good specific crossover or mutation functions. For example, take a look at this problem:\n\n    From set like X = {x1, x2, x3, ..., xn} u should select only k objects which get the best function value\n\nU can do it using this code:\n\n```python\nimport numpy as np\nfrom geneticalgorithm2 import geneticalgorithm2 as ga\n\n\nsubset_size = 20 # how many objects we can choose\n\nobjects_count = 100 # how many objects are in set\n\nmy_set = np.random.random(objects_count)*10 - 5 # set values\n\n# minimized function\ndef f(X):\n    return abs(np.mean(my_set[X==1]) - np.median(my_set[X==1]))\n\n# initialize start generation and params\n\nN = 1000 # size of population\nstart_generation = np.zeros((N, objects_count))\nindexes = np.arange(0, objects_count, dtype = np.int8) # indexes of variables\n\nfor i in range(N):\n    inds = np.random.choice(indexes, subset_size, replace = False)\n    start_generation[i, inds] = 1 \n\n\ndef my_crossover(parent_a, parent_b):\n    a_indexes = set(indexes[parent_a == 1])\n    b_indexes = set(indexes[parent_b == 1])\n    \n    intersect = a_indexes.intersection(b_indexes) # elements in both parents\n    a_only = a_indexes - intersect # elements only in 'a' parent\n    b_only = b_indexes - intersect\n    \n    child_inds = np.array(list(a_only) + list(b_only), dtype = np.int8)\n    np.random.shuffle(child_inds) # mix\n    \n    childs = np.zeros((2, parent_a.size))\n    if intersect:\n        childs[:, np.array(list(intersect))] = 1\n    childs[0, child_inds[:int(child_inds.size/2)]] = 1\n    childs[1, child_inds[int(child_inds.size/2):]] = 1\n    \n    return childs[0,:], childs[1,:]\n    \n\nmodel = ga(function=f, \n           dimension=objects_count, \n           variable_type='bool',\n           algorithm_parameters={\n                       'max_num_iteration': 500,\n                       'mutation_probability': 0, # no mutation, just crossover\n                       'elit_ratio': 0.05,\n                       'parents_portion': 0.3,\n                       'crossover_type': my_crossover,\n                       'max_iteration_without_improv': 20\n               }\n           )\n\nmodel.run(no_plot = False, start_generation=(start_generation, None))\n```\n\n# U should know these features\n\n## Available crossovers\n\nFor two example parents (*one with ones* and *one with zeros*) next crossovers will give same children ([examples](tests/crossovers_examples.py)): \n\n* **one_point**:\n\n|0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1|\n|:---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---:|\n|1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0|\n\n* **two_point**:\n\n|1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1|\n|:---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---:|\n|0 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 0 | 0|\n\n* **uniform**:\n\n|1 | 1 | 1 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0|\n|:---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---:|\n|0 | 0 | 0 | 1 | 0 | 0 | 1 | 1 | 1 | 1 | 1 | 0 | 1 | 1 | 1|\n\n* **uniform_window**:\n\n|1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 0 | 0 | 0 | 1 | 1 | 1|\n|:---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---:|\n|0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 0 | 0 | 0|\n\n* **shuffle**:\n\n|0 | 0 | 0 | 1 | 1 | 1 | 1 | 0 | 0 | 1 | 1 | 1 | 0 | 1 | 0|\n|:---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---:|\n|1 | 1 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 | 1 | 0 | 1|\n\n* **segment**:\n\n|0 | 1 | 1 | 0 | 0 | 1 | 0 | 1 | 0 | 0 | 1 | 0 | 0 | 1 | 1|\n|:---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---:|\n|1 | 0 | 0 | 1 | 1 | 0 | 1 | 0 | 1 | 1 | 0 | 1 | 1 | 0 | 0|\n\n* **arithmetic**:\n\n|0.13 | 0.13 | 0.13 | 0.13 | 0.13 | 0.13 | 0.13 | 0.13 | 0.13 | 0.13 | 0.13 | 0.13 | 0.13 | 0.13 | 0.13|\n|:---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---:|\n|0.87 | 0.87 | 0.87 | 0.87 | 0.87 | 0.87 | 0.87 | 0.87 | 0.87 | 0.87 | 0.87 | 0.87 | 0.87 | 0.87 | 0.87|\n\n* **mixed**:\n\n|0.63 | 0.84 | 1.1 | 0.73 | 0.67 | -0.19 | 0.3 | 0.72 | -0.18 | 0.61 | 0.84 | 1.14 | 1.36 | -0.37 | -0.19|\n|:---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---:|\n|0.51 | 0.58 | 0.43 | 0.42 | 0.55 | 0.49 | 0.57 | 0.48 | 0.46 | 0.56 | 0.56 | 0.54 | 0.44 | 0.51 | 0.4|\n\n\n## Function timeout\n\n**geneticalgorithm2** is designed such that if the given function does not provide\nany output before timeout (the default value is 10 seconds), the algorithm\nwould be terminated and raise the appropriate error. \n\nIn such a case make sure the given function\nworks correctly (i.e. there is no infinite loop in the given function). Also if the given function takes more than 10 seconds to complete the work\nmake sure to increase function_timeout in arguments.\n\n## Standard GA vs. Elitist GA\n\nThe convergence curve of an elitist genetic algorithm is always non-increasing. So, the best ever found solution is equal to the best solution of the last iteration. However, the convergence curve of a standard genetic algorithm is different. If `elit_ratio` is zero geneticalgroithm2 implements a standard GA. The output of geneticalgorithm2 for standard GA is the best ever found solution not the solution of the last iteration. The difference between the convergence curve of standard GA and elitist GA is shown below:\n\n![](tests/output/standard_vs_elitist.png)\n\n## Standard crossover vs. stud EA crossover\n\n[Stud EA](https://link.springer.com/chapter/10.1007%2FBFb0056910) is the idea of using crossover always with best object. So one of two parents is always the best object of population. It can help us in a lot of tasks!\n\n![](tests/output/studEA.png)\n\n## Creating better start population\n\nThere is `Population_initializer(select_best_of = 4, local_optimization_step = 'never', local_optimizer = None)` object for creating better start population. It has next arguments:\n\n* `select_best_of` (`int`) -- select `1/select_best_of` best part of start population. For example, for `select_best_of = 4` and `population_size = N` will be selected N best objects from 5N generated objects (if `start_generation = None`). If `start_generation` is not None, it will be selected best `size(start_generation)/N`  objects\n\n* `local_optimization_step` (`str`) -- when should we do local optimization? Available values:\n    \n    * `'never'` -- don't do local optimization\n    * `'before_select'` -- before selection best N objects (example: do local optimization for 5N objects and select N best results)\n    * `'after_select'` -- do local optimization on best selected N objects\n\n* `local_optimizer` (function) -- local optimization function like:\n    ```python\n    def loc_opt(object_as_array, current_score):\n        # some code\n        return better_object_as_array, better_score\n    ```\n\n### Select best N of kN\n\nThis little option can help u especially with multimodal tasks. \n\n![](tests/output/init_best_of.png)\n\n### Do local optimization\n\nWe can apply some local optimization on start generation before starting GA search. It can be some gradient descent or hill climbing and so on. Also we can apply it before selection best objects (on entire population) or after (on best part of population) and so forth.\n\nIn next example I'm using my [DiscreteHillClimbing](https://github.com/PasaOpasen/DiscreteHillClimbing) algorithm for local optimization my discrete task:\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nfrom DiscreteHillClimbing import Hill_Climbing_descent\n\nfrom geneticalgorithm2 import geneticalgorithm2 as ga\nfrom geneticalgorithm2 import Population_initializer\n\n\ndef f(arr):\n    arr2 = arr/25\n    return -np.sum(arr2*np.sin(np.sqrt(np.abs(arr2))))**5 + np.sum(np.abs(arr2))**2\n\niterations = 100    \n    \nvarbound = [[-100, 100]]*15\n\navailable_values = [np.arange(-100, 101)]*15\n\n\nmy_local_optimizer = lambda arr, score: Hill_Climbing_descent(function = f, available_predictors_values=available_values, max_function_evals=50, start_solution=arr )\n\n\nmodel = ga(function=f, dimension=varbound.shape[0], \n           variable_type='int', \n           variable_boundaries = varbound,\n           algorithm_parameters={\n               'max_num_iteration': iterations,\n               'population_size': 400\n               })\n\n\nfor time in ('before_select', 'after_select', 'never'):\n    model.run(no_plot = True,\n                  population_initializer = Population_initializer(\n                      select_best_of = 3,\n                      local_optimization_step = time,\n                      local_optimizer = my_local_optimizer\n                      )\n                  )\n\n    plt.plot(model.report, label = f\"local optimization time = '{time}'\")\n\n\nplt.xlabel('Generation')\nplt.ylabel('Minimized function (40 simulations average)')\nplt.title('Selection best N object before running GA')\nplt.legend()\n```\n\n![](tests/output/init_local_opt.png)\n\n### Optimization with oppositions\n\nAlso u can create start population with [oppositions](https://github.com/PasaOpasen/opp-op-pop-init). See [example of code](tests/best_of_N_with_opp.py)\n\n![](tests/output/init_best_of_opp.png)\n\n## Revolutions\n\nU can create [revolutions in your population](https://github.com/PasaOpasen/opp-op-pop-init) after some stagnation steps. It really can help u for some tasks. See [example](tests/revolution.py)\n\n![](tests/output/revolution.png)\n\n\n## Duplicates removing\n\nIf u remove duplicates each `k` generations, u can speed up the optimization process ([example](tests/remove_dups.py))\n\n![](tests/output/remove_dups.png)\n\n## Cache\n\nIt can be useful for run-speed to use cache with *some discrete tasks*. For this u can import `np_lru_cache` decorator and use it like here:\n\n```python\nimport np_lru_cache\n\n@np_lru_cache(maxsize = some_size)\ndef minimized_func(arr):\n    # code\n    return result\n\n#\n# run\n#    algorithm\n#\n\n\n# don't forget to clear cache\nminimized_func.cache_clear()\n```\n## Report checker\n\nBasically the model checks best population score (minimal score of generation) each generation and saves it to `report` field. Actually this sequence of numbers u see in big part of plots. This behavior is needed for several parts and u cannot disable it. But if u want to report some other metric without using [callbacks](#middle-callbacks), there is highly simple and fast way.\n\nAfter creating `model` but before running `run()` u need to append ur logic to `model.checked_reports` field. Take a look at example:\n\n```python\nimport numpy as np\n\nfrom geneticalgorithm2 import geneticalgorithm2 as ga\nfrom geneticalgorithm2 import plot_several_lines\n\ndef f(X):\n    return 50*np.sum(X) - np.sum(np.sqrt(X) * np.sin(X))\n\ndim = 25\nvarbound = [[0 ,10]]*dim\n\nmodel = ga(function=f, dimension=dim,\n           variable_type='real', variable_boundaries=varbound,\n           algorithm_parameters={\n               'max_num_iteration': 600\n           }\n)\n\n# here model exists and has checked_reports field\n# now u can append any functions to report\n\nmodel.checked_reports.extend(\n    [\n        ('report_average', np.mean),\n        ('report_25', lambda arr: np.quantile(arr, 0.25)),\n        ('report_50', np.median)\n    ]\n)\n\n# run optimization process\nmodel.run(no_plot = False)\n\n# now u have not only model.report but model.report_25 and so on\n\n#plot reports\nnames = [name for name, _ in model.checked_reports[::-1]]\nplot_several_lines(\n    lines=[getattr(model, name) for name in names],\n    colors=('green', 'black', 'red', 'blue'),\n    labels=['median value', '25% quantile', 'mean of population', 'best pop score'],\n    linewidths=(1, 1.5, 1, 2),\n    title=\"Several custom reports with base reports\",\n    save_as='./output/report.png'\n)\n```\n\n![](tests/output/report.png)\n\nAs u see, u should append tuple `(name of report, func to evaluate report)` to `model.checked_report`. It's highly recommended to start this name with `report_` (e. g. `report_my_median`). And the function u use will get 1D-numpy *sorted* array of population scores.\n\n\n## Middle callbacks\n\nThere is an amazing way to control optimization process using `MiddleCallbacks` class. Just learn next logic:\n\n1. u can use several `MiddleCallbacks` callbacks as list at `middle_callbacks` parameter in `run()` method\n2. each middle callback is the pair of `action` and `condition` functions\n3. `condition(data)` (`Callable[[MiddleCallbackData], bool]`) function gets `data` object (dataclass `MiddleCallbackData` from version 6.5.0) about primary model parameters and makes logical decision about applying `action` function\n4. `action(data)` (`Callable[[MiddleCallbackData],MiddleCallbackData]`) function modifies `data` objects as u need -- and model will be modified by new `data`\n5. `data` object is the structure with several parameters u can modify:\n   ```python\n    data = MiddleCallbackData(\n        last_generation=Generation.from_pop_matrix(pop),\n        current_generation=t,\n        report_list=self.report,\n\n        mutation_prob=self.prob_mut,\n        crossover_prob=self.prob_cross,\n        mutation=self.real_mutation,\n        crossover=self.crossover,\n        selection=self.selection,\n\n        current_stagnation=counter,\n        max_stagnation=self.max_stagnations,\n\n        parents_portion=self.param.parents_portion,\n        elit_ratio=self.param.elit_ratio,\n\n        set_function=self.set_function\n    )\n   ```  \n   So, the `action` function gets `data` objects and returns `data` object.\n\nIt's very simple to create your own `action` and `condition` functions. But there are several popular functions contained in `Actions` and `ActionConditions` classes:\n* `actions`:\n  * `Stop()` -- just stop optimization process\n  * `ReduceMutationProb(reduce_coef = 0.9)` -- reduce mutation probability\n  * `ChangeRandomCrossover(available_crossovers: Sequence[Callable[[np.ndarray, np.ndarray], Tuple[np.ndarray, np.ndarray]]])` -- change another (random) crossover from list of crossovers\n  * `ChangeRandomSelection(available_selections: Sequence[Callable[[np.ndarray, int], np.ndarray]])`\n  * `ChangeRandomMutation(available_mutations: Sequence[Callable[[float, float, float], float]])`\n  * `RemoveDuplicates(oppositor = None, creator = None, converter = None)`; see [doc](geneticalgorithm2/callbacks.py)\n  * `CopyBest(by_indexes)` -- copies best population object values (from dimensions in `by_indexes`) to all population\n  * `PlotPopulationScores(title_pattern = lambda data: f\"Generation {data['current_generation']}\", save_as_name_pattern = None)` -- plot population scores; needs 2 functions like `data`->string for title and file name (to save)\n* `conditions`:\n  * `ActionConditions.EachGen(generation_step = 10)` -- do action each `generation_step` generations\n  * `ActionConditions.Always()` do action each generations, equals to `ActionConditions.EachGen(1)`\n  * `ActionConditions.AfterStagnation(stagnation_generations = 50)` -- do action after `stagnation_generations` stagnation generations\n  * `ActionConditions.Several(list_of_conditions)` -- do action if all conditions in list are true\n\nTo combine `action` and `condition` to callback, just use `MiddleCallbacks.UniversalCallback(action, condition)` methods.\n\n\nThere are also next high-level useful callbacks:\n\n* `MiddleCallbacks.ReduceMutationGen(reduce_coef = 0.9, min_mutation = 0.005, reduce_each_generation = 50, reload_each_generation = 500)`\n* `MiddleCallbacks.GeneDiversityStats(step_generations_for_plotting:int = 10)` -- plots some duplicates statistics each gen ([example](/tests/plot_diversities.py))\n![](diversity.gif)\n\n\nSee [code example](tests/small_middle_callbacks.py)\n\n## How to compare efficiency of several versions of GA optimization\n\nTo compare efficiency of several versions of GA optimization (such as several values of several hyperparamenters or including/excepting some actions like oppositions) u should make some count of simulations and compare results using some statistical test. I have realized this logic [here](https://github.com/PasaOpasen/ab-testing-results-difference) \n\n## Hints on how to adjust genetic algorithm's parameters (from `geneticalgorithm` package)\n\nIn general the performance of a genetic algorithm or any evolutionary algorithm\ndepends on its parameters. Parameter setting of an evolutionary algorithm is important. Usually these parameters are adjusted based on experience and by conducting a sensitivity analysis.\nIt is impossible to provide a general guideline to parameter setting but the suggestions provided below may help:  \n\n* **Number of iterations**: Select a `max_num_iterations` sufficiently large; otherwise the reported solution may not be satisfactory. On the other hand \nselecting a very large number of iterations increases the run time significantly. So this is actually a compromise between\nthe accuracy you want and the time and computational cost you spend. \n\n* **Population size**: Given a constant number of functional evaluations (`max_num_iterations` times population_size) I would select smaller population size and greater iterations. However, a very small choice of population size is also deteriorative. For most problems I would select a population size of 100 unless the dimension of the problem is very large that needs a bigger population size.\n\n* **elit_ratio**: Although having few elites is usually a good idea and may increase the rate of convergence in some problems, having too many elites in the population may cause the algorithm to easily trap in a local optima. I would usually select only one elite in most cases. Elitism is not always necessary and in some problems may even be deteriorative.\n\n* **mutation_probability**: This is a parameter you may need to adjust more than the other ones. Its appropriate value heavily depends on the problem. Sometimes we may select\nmutation_probability as small as 0.01 (i.e. 1 percent) and sometimes even as large as 0.5 (i.e. 50 percent) or even larger. In general if the genetic algorithm trapped \nin a local optimum increasing the mutation probability may help. On the other hand if the algorithm suffers from stagnation reducing the mutation probability may be effective. However, this rule of thumb is not always true.\n\n* **parents_portion**: If parents_portion set zero, it means that the whole of the population is filled with the newly generated solutions. \nOn the other hand having this parameter equals 1 (i.e. 100 percent) means no new solution\nis generated and the algorithm would just repeat the previous values without any change which is not meaningful and effective obviously. Anything between these two may work. The exact value depends on the problem.\n\n* **crossover_type**: Depends on the problem. I would usually use uniform crossover. But testing the other ones in your problem is recommended.\n\n* **max_iteration_without_improv**: This is a parameter that I recommend being used cautiously. \nIf this parameter is too small then the algorithm may stop while it trapped in a local optimum.\nSo make sure you select a sufficiently large criteria to provide enough time for the algorithm to progress and to avoid immature convergence. \n\nFinally to make sure that the parameter setting is fine, we usually should run the \nalgorithm for several times and if convergence curves of all runs converged to the same objective function value we may accept that solution as the optimum. The number of runs\ndepends but usually five or ten runs is prevalent. Notice that in some problems\nseveral possible set of variables produces the same objective function value. \nWhen we study the convergence of a genetic algorithm we compare the objective function values not the decision variables.\n\n## How to get maximum speed\n\n### Don't use plotting\n\n```python\nresult = model.run(\n    no_plot = True, \n)\n```\n\n### Don't use progress bar\n\n```python\nresult = model.run(\n    progress_bar_stream = None,\n)\n```\n\n### Try to use faster optimizing function\n\nTry to speed up your optimizing `function` using Numpy, [Numba](https://numba.pydata.org/) or [Cython](https://cython.org/). If u can, write your own `set_function` (function which applies to whole population samples matrix) with cython optimizations, parallelism and so.\n\n### Specify custom optimized `mutation`, `crossover`, `selection`\n\nWrite faster implementations for model methods `mut`, `mut_middle`, `crossover`, `selection` and set them before running optimization process:\n\n```python\nmodel.mut = custom_mut\nmodel.crossover = custom_crossover\n\nmodel.run(...)\n```\n\n### Specify `fill_children` method\n\nFrom version `6.8.4` there is `fill_children` model method:\n\n```python\nself.fill_children: Optional[Callable[[array2D, int], None]] = None\n```\n\nIt is empty and does nothing; but if u specify it, u can get huge speed up at very intensive algorithm part. Take a look at [main algo structure](#main-algorithm-structure). There is a part with creating children from parents, this part is the most intensive because it uses python loops, calls sampling, crossover and mutations at each iteration. Using `fill_children`, u can rewrite this logic in your manner to speed up.\n\nSuppose u have new population matrix `pop` (type `np.float64`, shape `(population_size, dim_count)`) where first `parents_count` rows are selected parents, next rows are filled by random, so inside `fill_children` method u should fill last `population_size - parents_count` rows (children) by using some your logic. Expected (but not mandatory) logic like this:\n\n```python\nfor k in range(self.parents_count, self.population_size, 2):\n\n    r1, r2 = get_parents_inds()  # get 2 random parents indexes from [0, parents_count)\n\n    pvar1 = pop[r1]\n    pvar2 = pop[r2]\n\n    ch1, ch2 = self.crossover(pvar1, pvar2)  # crossover\n\n    # mutations\n    ch1 = self.mut(ch1)\n    ch2 = self.mut_middle(ch2, pvar1, pvar2)\n\n    # put to population\n    pop[k] = ch1\n    pop[k+1] = ch2\n```\n\n**Example**. In one task I use this algorithm many times (100 000 generations total), so the speed matters. Every sample item is the index of element in other array there, so `i`th sample element is always integer value from cut `[0, end[i]]`. I use uniform crossover and uniform mutation (work perfect for this task). So I specified creating children logic for this task using cython.\n\nContent of file `fill_children.pyx`:\n\n```cython\n#!python\n#cython: language_level=3\n\nimport numpy as np\n\ncimport numpy as np\n\nnp.import_array()\n\ncimport cython\n\nimport math\nimport random\n\n@cython.boundscheck(False)\n@cython.wraparound(False)\ndef fill_children(\n    np.ndarray[np.float64_t, ndim=2] pop,  # samples are integers but always float64 type\n    int parents_count, # count of already done parents\n\n    float mut_prob,  # mutation probability\n    np.ndarray[np.uint8_t, ndim=1] ends  # max elements for each dimension (min elements are 0)\n):\n\n    cdef:\n        Py_ssize_t i, k, population_size = pop.shape[0], dim_count = pop.shape[1], r1, r2\n\n        float v1, v2, tmp\n        np.ndarray[np.float64_t, ndim=1] cross, mut, mut_middle\n\n    # making 2 children at each iteration\n    for k in range(parents_count, population_size, 2): # C loop, not Python\n        \n        #\n        # 2 random parents (fast implementation)\n        #\n\n        r1 = random.randrange(parents_count)\n        r2 = random.randrange(parents_count)\n        if r1 == r2:\n            while r1 == r2:  # C loop!\n               r2 = random.randrange(parents_count) \n\n        #\n        # I always need these 3 random probs sequences, so the fastest way to obtain them is np.random.random\n        #\n        cross = np.random.random(dim_count)  # crossover probabilities for each dimension\n        mut = np.random.random(dim_count)\n        mut_middle = np.random.random(dim_count)\n\n        for i in range(dim_count):  # C loop for each dimension\n            v1 = pop[r1, i]  # first parent value\n            v2 = pop[r2, i]  # second parent value\n\n            if cross[i] < 0.5:  # random swap (uniform crossover), copy otherwise\n                tmp = v2\n                v2 = v1\n                v1 = tmp\n\n            if mut[i] < mut_prob:  # random mutation for first child\n                # fastest way to get random integer from [0, ends[i]]\n                # random.random() calls not always but only on mut[i] < mut_prob\n                v1 = math.floor(random.random() * (ends[i] + 1))\n\n            if mut_middle[i] < mut_prob: # mut_middle for second\n                tmp = random.random()\n                if v1 < v2:\n                    v2 = v1 + math.floor(tmp * (v2 - v1 + 1))  # integer from [v1, v2], v1 < v2\n                elif v1 > v2:\n                    v2 = v2 + math.floor(tmp * (v1 - v2 + 1)) # integer from [v2, v1], v2 < v1\n                else:\n                    v2 = math.floor(tmp * (ends[i] + 1))\n\n            #\n            # put values to children in array\n            #\n            pop[k, i] = v1\n            pop[k + 1, i] = v2\n\n```\n\nAfter compilation this file I can call it from python file to use inside GA:\n\n```python\n\nmut_prob = param['mutation_probability']\n\ndef fill_children(pop: array2D, parents_count: int):\n    \"\"\"wrapper on fill_children.fill_children with putting local variables mut_prob, ends\"\"\"\n    return fill_children.fill_children(\n        pop, parents_count, mut_prob, ends\n    )\n\nmodel.fill_children = fill_children\n\nmodel.run(...)\n```\n\n\n# Examples pretty collection\n\n## Optimization test functions\n\nHere there is the implementation of `geneticalgorithm2` for some benchmark problems. Test functions are got from my [`OptimizationTestFunctions`](https://github.com/PasaOpasen/OptimizationTestFunctions) package. \n\nThe code for optimizations process is same for each function and is contained [in file](tests/optimization_test_functions.py).\n\n### [Sphere](https://github.com/PasaOpasen/OptimizationTestFunctions#sphere)\n![](https://github.com/PasaOpasen/OptimizationTestFunctions/blob/main/tests/heatmap%20for%20Sphere.png)\n![](tests/output/opt_test_funcs/Optimization%20process%20for%20Sphere.png)\n\n### [Ackley](https://github.com/PasaOpasen/OptimizationTestFunctions#ackley)\n![](https://github.com/PasaOpasen/OptimizationTestFunctions/blob/main/tests/heatmap%20for%20Ackley.png)\n![](tests/output/opt_test_funcs/Optimization%20process%20for%20Ackley.png)\n\n### [AckleyTest](https://github.com/PasaOpasen/OptimizationTestFunctions#ackleytest)\n![](https://github.com/PasaOpasen/OptimizationTestFunctions/blob/main/tests/heatmap%20for%20AckleyTest.png)\n![](tests/output/opt_test_funcs/Optimization%20process%20for%20AckleyTest.png)\n\n### [Rosenbrock](https://github.com/PasaOpasen/OptimizationTestFunctions#rosenbrock)\n![](https://github.com/PasaOpasen/OptimizationTestFunctions/blob/main/tests/heatmap%20for%20Rosenbrock.png)\n![](tests/output/opt_test_funcs/Optimization%20process%20for%20Rosenbrock.png)\n\n### [Fletcher](https://github.com/PasaOpasen/OptimizationTestFunctions#fletcher)\n![](https://github.com/PasaOpasen/OptimizationTestFunctions/blob/main/tests/heatmap%20for%20Fletcher.png)\n![](tests/output/opt_test_funcs/Optimization%20process%20for%20Fletcher.png)\n\n### [Griewank](https://github.com/PasaOpasen/OptimizationTestFunctions#griewank)\n![](https://github.com/PasaOpasen/OptimizationTestFunctions/blob/main/tests/heatmap%20for%20Griewank.png)\n![](tests/output/opt_test_funcs/Optimization%20process%20for%20Griewank.png)\n\n### [Penalty2](https://github.com/PasaOpasen/OptimizationTestFunctions#penalty2)\n![](https://github.com/PasaOpasen/OptimizationTestFunctions/blob/main/tests/heatmap%20for%20Penalty2.png)\n![](tests/output/opt_test_funcs/Optimization%20process%20for%20Penalty2.png)\n\n### [Quartic](https://github.com/PasaOpasen/OptimizationTestFunctions#quartic)\n![](https://github.com/PasaOpasen/OptimizationTestFunctions/blob/main/tests/heatmap%20for%20Quartic.png)\n![](tests/output/opt_test_funcs/Optimization%20process%20for%20Quartic.png)\n\n### [Rastrigin](https://github.com/PasaOpasen/OptimizationTestFunctions#rastrigin)\n![](https://github.com/PasaOpasen/OptimizationTestFunctions/blob/main/tests/heatmap%20for%20Rastrigin.png)\n![](tests/output/opt_test_funcs/Optimization%20process%20for%20Rastrigin.png)\n\n### [SchwefelDouble](https://github.com/PasaOpasen/OptimizationTestFunctions#schwefeldouble)\n![](https://github.com/PasaOpasen/OptimizationTestFunctions/blob/main/tests/heatmap%20for%20SchwefelDouble.png)\n![](tests/output/opt_test_funcs/Optimization%20process%20for%20SchwefelDouble.png)\n\n### [SchwefelMax](https://github.com/PasaOpasen/OptimizationTestFunctions#schwefelmax)\n![](https://github.com/PasaOpasen/OptimizationTestFunctions/blob/main/tests/heatmap%20for%20SchwefelMax.png)\n![](tests/output/opt_test_funcs/Optimization%20process%20for%20SchwefelMax.png)\n\n### [SchwefelAbs](https://github.com/PasaOpasen/OptimizationTestFunctions#schwefelabs)\n![](https://github.com/PasaOpasen/OptimizationTestFunctions/blob/main/tests/heatmap%20for%20SchwefelAbs.png)\n![](tests/output/opt_test_funcs/Optimization%20process%20for%20SchwefelAbs.png)\n\n### [SchwefelSin](https://github.com/PasaOpasen/OptimizationTestFunctions#schwefelsin)\n![](https://github.com/PasaOpasen/OptimizationTestFunctions/blob/main/tests/heatmap%20for%20SchwefelSin.png)\n![](tests/output/opt_test_funcs/Optimization%20process%20for%20SchwefelSin.png)\n\n### [Stairs](https://github.com/PasaOpasen/OptimizationTestFunctions#stairs)\n![](https://github.com/PasaOpasen/OptimizationTestFunctions/blob/main/tests/heatmap%20for%20Stairs.png)\n![](tests/output/opt_test_funcs/Optimization%20process%20for%20Stairs.png)\n\n### [Abs](https://github.com/PasaOpasen/OptimizationTestFunctions#abs)\n![](https://github.com/PasaOpasen/OptimizationTestFunctions/blob/main/tests/heatmap%20for%20Abs.png)\n![](tests/output/opt_test_funcs/Optimization%20process%20for%20Abs.png)\n\n### [Michalewicz](https://github.com/PasaOpasen/OptimizationTestFunctions#michalewicz)\n![](https://github.com/PasaOpasen/OptimizationTestFunctions/blob/main/tests/heatmap%20for%20Michalewicz.png)\n![](tests/output/opt_test_funcs/Optimization%20process%20for%20Michalewicz.png)\n\n### [Scheffer](https://github.com/PasaOpasen/OptimizationTestFunctions#scheffer)\n![](https://github.com/PasaOpasen/OptimizationTestFunctions/blob/main/tests/heatmap%20for%20Scheffer.png)\n![](tests/output/opt_test_funcs/Optimization%20process%20for%20Scheffer.png)\n\n### [Eggholder](https://github.com/PasaOpasen/OptimizationTestFunctions#eggholder)\n![](https://github.com/PasaOpasen/OptimizationTestFunctions/blob/main/tests/heatmap%20for%20Eggholder.png)\n![](tests/output/opt_test_funcs/Optimization%20process%20for%20Eggholder.png)\n\n### [Weierstrass](https://github.com/PasaOpasen/OptimizationTestFunctions#weierstrass)\n![](https://github.com/PasaOpasen/OptimizationTestFunctions/blob/main/tests/heatmap%20for%20Weierstrass.png)\n![](tests/output/opt_test_funcs/Optimization%20process%20for%20Weierstrass.png)\n\n\n\n## Using GA in reinforcement learning\n\nSee [example of using GA optimization with keras neural networks](https://www.kaggle.com/demetrypascal/opengym-tasks-using-keras-and-geneticalgorithm2) for solving OpenGym tasks.\n\nBetter example is [OpenGym using cost2fitness and geneticalgorithm2](https://www.kaggle.com/demetrypascal/opengym-using-cost2fitness-and-geneticalgorithm2) where I use also my [cost2fitness](https://github.com/PasaOpasen/cost2fitness) package for fast forward propagation\n\n\n## Using GA with image reconstruction by polygons\n\nLinks:\n1. https://www.kaggle.com/demetrypascal/fork-of-imagereconstruction-with-geneticalgorithm2\n2. https://www.kaggle.com/demetrypascal/imagereconstructionpolygons-with-geneticalgorithm2\n\n\n# Popular questions\n\n## How to disable autoplot?\n\nJust use `no_plot = True` param in `run` method:\n\n```python\nmodel.run(no_plot = True)\n```\n\nIf u want, u can plot results later by using\n\n```python\nmodel.plot_results()\n```\n\nAlso u can create your pretty plots using `model.report` object (it's a list of values):\n\n```python\nre = np.array(model.report)\n\nplt.plot(re)\nplt.xlabel('Iteration')\nplt.ylabel('Objective function')\nplt.title('Genetic Algorithm')\nplt.show()\n```\n\n## How to plot population scores?\n\nThere are 2 ways to plot of scores of population:\n* use `plot_pop_scores(scores, title = 'Population scores', save_as = None)` function from `geneticalgorithm2` environment\n* use `plot_generation_scores(self, title = 'Last generation scores', save_as = None)` method of `ga` object for plotting scores of last generation (yes, it's wrapper of previous function)\n\nLet's check example:\n```python\nimport numpy as np\n\nfrom geneticalgorithm2 import geneticalgorithm2 as ga\n\nfrom geneticalgorithm2 import plot_pop_scores # for plotting scores without ga object\n\ndef f(X):\n    return 50*np.sum(X) - np.sum(np.sqrt(X)*np.sin(X))\n    \ndim = 25\nvarbound = [[0,10]]*dim\n\n# create start population\nstart_pop = np.random.uniform(0, 10, (50, dim))\n# eval scores of start population\nstart_scores = np.array([f(start_pop[i]) for i in range(start_pop.shape[0])])\n\n# plot start scores using plot_pop_scores function\nplot_pop_scores(start_scores, title = 'Population scores before beggining of searching', save_as= 'plot_scores_start.png')\n\n\nmodel = ga(function=f, dimension=dim, variable_type='real', variable_boundaries=varbound)\n# run optimization process\nmodel.run(no_plot = True,\n          start_generation={\n              'variables': start_pop,\n              'scores': start_scores\n              })\n# plot and save optimization process plot\nmodel.plot_results(save_as = 'plot_scores_process.png')\n\n# plot scores of last population\nmodel.plot_generation_scores(title = 'Population scores after ending of searching', save_as= 'plot_scores_end.png')\n```\n![](tests/output/plot_scores_start.png)\n![](tests/output/plot_scores_process.png)\n![](tests/output/plot_scores_end.png)\n\n\n\n## How to specify evaluated function for all population?\n\nU can do it using `set_function` parameter into `run()` method.\n\nThis function should get `numpy 2D-array` (samples x dimension) and return `1D-array` with results.\n\nBy default it uses `set_function = geneticalgorithm2.default_set_function(function)`, where\n\n```python\n    def default_set_function(function_for_set):\n        def func(matrix):\n            return np.array([function_for_set(matrix[i,:]) for i in range(matrix.shape[0])])\n        return func\n```\nU may want to use it for creating some specific or fast-vectorized evaluations like here:\n\n```python\n\ndef sigmoid(z):\n    return 1/(1+np.exp(-z))\n\nmatrix = np.random.random((1000,100))\n\ndef vectorised(X):\n    return sigmoid(matrix.dot(X))\n\nmodel.run(set_function = vectorised)\n```\n\n## What about parallelism?\n\nBy using `set_function` u can determine your own behavior for parallelism or u can use `geneticalgorithm2.set_function_multiprocess(f, n_jobs = -1)` for using just parallelism (recommended for heavy functions and big populations, not recommended for fast functions and small populations).\n\nFor example:\n\n```python\nimport numpy as np\nfrom geneticalgorithm2 import geneticalgorithm2 as ga\n\ndef f(X):\n    import math\n    a = X[0]\n    b = X[1]\n    c = X[2]\n    s = 0\n    for i in range(10000):\n        s += math.sin(a*i) + math.sin(b*i) + math.cos(c*i)\n\n    return s\n \n\nalgorithm_param = {'max_num_iteration': 50,\n                   'population_size':100,\n                   'mutation_probability':0.1,\n                   'elit_ratio': 0.01,\n                   'parents_portion': 0.3,\n                   'crossover_type':'uniform',\n                   'mutation_type': 'uniform_by_center',\n                   'selection_type': 'roulette',\n                   'max_iteration_without_improv':None}   \n    \nvarbound = np.array([[-10,10]]*3)\n\nmodel = ga(function=f, dimension=3, \n    variable_type='real',           \n    variable_boundaries=varbound, \n    algorithm_parameters = algorithm_param)\n\n########\n\n%time model.run()\n# Wall time: 1min 52s\n\n%time model.run(set_function= ga.set_function_multiprocess(f, n_jobs = 6))\n# Wall time: 31.7 s\n```\n\n## How to initialize start population? How to continue optimization with new run?\n\nFor this there is `start_generation` parameter in `run()` method. It's the dictionary with structure like returned `model.output_dict['last_generation']`. Let's see example how can u to use it:\n\n```python\nimport numpy as np\nfrom geneticalgorithm2 import geneticalgorithm2 as ga\n\ndef f(X):\n    return np.sum(X)\n    \ndim = 6\n    \nvarbound = [(0,10)]*dim\n\n\nalgorithm_param = {'max_num_iteration': 500,\n                   'population_size':100,\n                   'mutation_probability':0.1,\n                   'elit_ratio': 0.01,\n                   'parents_portion': 0.3,\n                   'crossover_type':'uniform',\n                   'max_iteration_without_improv':None}\n\nmodel = ga(function=f, \n           dimension=dim, \n           variable_type='real', \n           variable_boundaries=varbound,\n           algorithm_parameters = algorithm_param)\n\n# start generation\n# as u see u can use any values been valid for ur function\nsamples = np.random.uniform(0, 50, (300, dim)) # 300 is the new size of your generation\n\n\n\nmodel.run(no_plot = False, start_generation={'variables':samples, 'scores': None}) \n# it's not necessary to evaluate scores before\n# but u can do it if u have evaluated scores and don't wanna repeat calcucations\n\n\n\n# from version 6.3.0 it's recommended to use this form\nfrom geneticalgorithm2 import Generation\nmodel.run(no_plot = False, start_generation=Generation(variables = samples, scores = None))\n\n\n# from version 6.4.0 u also can use these forms\nmodel.run(no_plot = False, start_generation= samples)\nmodel.run(no_plot = False, start_generation= (samples, None))\n\n\n# if u have scores array, u can put it too\nscores = np.array([f(sample) for sample in samples])\nmodel.run(no_plot = False, start_generation= (samples, scores))\n\n\n##\n## after first run\n## best value = 0.10426190111045064\n##\n\n# okay, let's continue optimization using saved last generation\nmodel.run(no_plot = True, start_generation=model.output_dict['last_generation']) \n\n##\n## after second run\n## best value = 0.06128462776296528\n##\n\n```\n\nAlso u can save and load populations using likely code:\n\n```python\nimport numpy as np\n\nfrom geneticalgorithm2 import geneticalgorithm2 as ga\n\nfrom OptimizationTestFunctions import Eggholder\n\n\ndim = 2*15\n\nf =  Eggholder(dim)\n\nxmin, xmax, ymin, ymax = f.bounds\n        \nvarbound = np.array([[xmin, xmax], [ymin, ymax]]*15)\n    \nmodel = ga(function=f,\n               dimension = dim,\n               variable_type='real',\n               variable_boundaries=varbound,\n               algorithm_parameters = {\n                       'max_num_iteration': 300,\n                       'population_size': 100\n                       })\n\n# first run and save last generation to file\nfilename = \"eggholder_lastgen.npz\"\nmodel.run(save_last_generation_as = filename)\n\n\n# load start generation from file and run again (continue optimization)\nmodel.run(start_generation=filename)\n```\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PasaOpasen/geneticalgorithm2",
    "keywords": "solve,optimization,problem,genetic,algorithm,GA,easy,fast,genetic-algorithm,combinatorial,mixed,evolutionary",
    "license": "MIT",
    "maintainer": "Demetry Pascal",
    "maintainer_email": "",
    "name": "geneticalgorithm2",
    "package_url": "https://pypi.org/project/geneticalgorithm2/",
    "platform": null,
    "project_url": "https://pypi.org/project/geneticalgorithm2/",
    "project_urls": {
      "Homepage": "https://github.com/PasaOpasen/geneticalgorithm2"
    },
    "release_url": "https://pypi.org/project/geneticalgorithm2/6.8.5/",
    "requires_dist": [
      "numpy",
      "matplotlib",
      "typing-extensions",
      "OppOpPopInit (>=2.0.1)"
    ],
    "requires_python": "",
    "summary": "Supported highly optimized and flexible genetic algorithm package for python",
    "version": "6.8.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16333503,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63c57f204d8228f2e313c771b345d8e15857780c2400d762bad0b40fc721ab42",
          "md5": "68b2ad7708a23643e833201010410073",
          "sha256": "708760ddfdb4a8057bfe4446d2c5c6e60d159303ec20d28eecdb7f00f31b6baf"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "68b2ad7708a23643e833201010410073",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24460,
        "upload_time": "2020-11-15T16:20:43",
        "upload_time_iso_8601": "2020-11-15T16:20:43.505733Z",
        "url": "https://files.pythonhosted.org/packages/63/c5/7f204d8228f2e313c771b345d8e15857780c2400d762bad0b40fc721ab42/geneticalgorithm2-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "623829f1904afbf12db695323455f8769b556be6e59816f83b49164190224c0e",
          "md5": "9178ec068181e8895b190bb12076d55e",
          "sha256": "794f60c1b01757579e1e1f6025c41e8ba8d5b18c12ba84601127c6b7385e5170"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9178ec068181e8895b190bb12076d55e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16208,
        "upload_time": "2020-11-19T11:36:10",
        "upload_time_iso_8601": "2020-11-19T11:36:10.545783Z",
        "url": "https://files.pythonhosted.org/packages/62/38/29f1904afbf12db695323455f8769b556be6e59816f83b49164190224c0e/geneticalgorithm2-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f538ab3868455ef429adf484b26b68bc70469f671c6042fe1390a8fbbba93f64",
          "md5": "0836e3155f66e615c19f607ac708490d",
          "sha256": "2ab5de8b908c5331cea3db7fe3602065daafc2a9f8ce51abaf08b5b0b633a039"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0836e3155f66e615c19f607ac708490d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24774,
        "upload_time": "2020-11-19T11:36:13",
        "upload_time_iso_8601": "2020-11-19T11:36:13.202229Z",
        "url": "https://files.pythonhosted.org/packages/f5/38/ab3868455ef429adf484b26b68bc70469f671c6042fe1390a8fbbba93f64/geneticalgorithm2-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d63ff951fd6f1946fecc57736814cbf1e804b0d92745967e214bf5428fc9ea66",
          "md5": "ae4b3cbe7613b2903af1cbdae7b589a5",
          "sha256": "87ccc86295f7aa80dcdd1defd22a3f29971fa0a4066c89fe79a7fc881e1d14ee"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ae4b3cbe7613b2903af1cbdae7b589a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16439,
        "upload_time": "2020-11-19T20:07:40",
        "upload_time_iso_8601": "2020-11-19T20:07:40.897127Z",
        "url": "https://files.pythonhosted.org/packages/d6/3f/f951fd6f1946fecc57736814cbf1e804b0d92745967e214bf5428fc9ea66/geneticalgorithm2-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "274c42fb60c1f22f0ffc3cb202b940692f1b9f007e710b4cddb25fc6d145936e",
          "md5": "e2f9d763800550ba01abff1eab19d0bf",
          "sha256": "f806664bafc5d10c11889f311c2d5945508ee0aef616f452f915be2314568b5f"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e2f9d763800550ba01abff1eab19d0bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22012,
        "upload_time": "2020-11-19T20:07:42",
        "upload_time_iso_8601": "2020-11-19T20:07:42.841915Z",
        "url": "https://files.pythonhosted.org/packages/27/4c/42fb60c1f22f0ffc3cb202b940692f1b9f007e710b4cddb25fc6d145936e/geneticalgorithm2-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f42fbd8d7c8801759ba54968f004cedace79d2075bf30501943e53d4ccb751b",
          "md5": "93d78ea5ebaa3a36d968407015d11251",
          "sha256": "bea2c4275bb4cd7664c9ca314b26c1b30a375c3d3296e7c0367006b6eaa100ec"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93d78ea5ebaa3a36d968407015d11251",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16766,
        "upload_time": "2020-11-21T13:48:02",
        "upload_time_iso_8601": "2020-11-21T13:48:02.781988Z",
        "url": "https://files.pythonhosted.org/packages/5f/42/fbd8d7c8801759ba54968f004cedace79d2075bf30501943e53d4ccb751b/geneticalgorithm2-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1314e4956f890959831469327e94a92f84794533205d7b16ea7f90d4f989059f",
          "md5": "164fd6224d7e535491e245005fb9a645",
          "sha256": "468b8b556f713e4155406341b6b72e09688e0c2391c377c6bf0a4a5b84c94100"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "164fd6224d7e535491e245005fb9a645",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22833,
        "upload_time": "2020-11-21T13:48:04",
        "upload_time_iso_8601": "2020-11-21T13:48:04.640368Z",
        "url": "https://files.pythonhosted.org/packages/13/14/e4956f890959831469327e94a92f84794533205d7b16ea7f90d4f989059f/geneticalgorithm2-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97eb3bb5bb8c2c55cf545a3ef1b0d972eee8e28d969b5cbc5c73a1af78323dcb",
          "md5": "a05280874efe3b3e0fa056daba3828a8",
          "sha256": "a0ccbc61e8c723f18ae4063b2abc8b41376188a8cd1207d2dd0143ca255d6f3b"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a05280874efe3b3e0fa056daba3828a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17951,
        "upload_time": "2020-11-21T17:55:37",
        "upload_time_iso_8601": "2020-11-21T17:55:37.551374Z",
        "url": "https://files.pythonhosted.org/packages/97/eb/3bb5bb8c2c55cf545a3ef1b0d972eee8e28d969b5cbc5c73a1af78323dcb/geneticalgorithm2-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5190c5271cb2881f90b970067fb2daa605610fc8f592f72f2af0aab56e29956d",
          "md5": "6af10d24d6b8653ab69ca25cf2df7e9f",
          "sha256": "f79f49b302e632e51fd4e48d0a210411f8dbd16f2238bd929b9b8864a4069ad2"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6af10d24d6b8653ab69ca25cf2df7e9f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24876,
        "upload_time": "2020-11-21T17:55:39",
        "upload_time_iso_8601": "2020-11-21T17:55:39.424581Z",
        "url": "https://files.pythonhosted.org/packages/51/90/c5271cb2881f90b970067fb2daa605610fc8f592f72f2af0aab56e29956d/geneticalgorithm2-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "717619ea22dd601360b0c2b69cf087be1595a4aea29b30d92c8a4add8b2e2390",
          "md5": "ad00bb1f0ac3c30dc21a8bd5b75e67fd",
          "sha256": "bc45c0e483902563596ce402feaaae4a6b8bd7a1d42e2a177ca86e422419b2bb"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad00bb1f0ac3c30dc21a8bd5b75e67fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18108,
        "upload_time": "2020-11-22T17:37:17",
        "upload_time_iso_8601": "2020-11-22T17:37:17.654686Z",
        "url": "https://files.pythonhosted.org/packages/71/76/19ea22dd601360b0c2b69cf087be1595a4aea29b30d92c8a4add8b2e2390/geneticalgorithm2-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ef42f8d14d6d6bd8dc122ab79add68b10b9d27154a6a6a4493ad9375a2c91e5",
          "md5": "ec7a08d8a5913cfe8a3c514f67924651",
          "sha256": "e1f369941d7f6d4f80808439c12fbc12cb72116b31e6c5d21bd06ec715324f19"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ec7a08d8a5913cfe8a3c514f67924651",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25137,
        "upload_time": "2020-11-22T17:37:19",
        "upload_time_iso_8601": "2020-11-22T17:37:19.273643Z",
        "url": "https://files.pythonhosted.org/packages/3e/f4/2f8d14d6d6bd8dc122ab79add68b10b9d27154a6a6a4493ad9375a2c91e5/geneticalgorithm2-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dabd52e0ccd7f47f3856e0229c4374e805b18cc964ecea6a8ba329bc8cadc29",
          "md5": "6c88b144243ee1f0b5879bee72bb1c62",
          "sha256": "ff0bbad0b789fc6f471af3bc42deb9202475f848293d721bc845a0d60f5d65c3"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6c88b144243ee1f0b5879bee72bb1c62",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18836,
        "upload_time": "2020-11-24T10:22:54",
        "upload_time_iso_8601": "2020-11-24T10:22:54.944509Z",
        "url": "https://files.pythonhosted.org/packages/4d/ab/d52e0ccd7f47f3856e0229c4374e805b18cc964ecea6a8ba329bc8cadc29/geneticalgorithm2-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df439a1bfbc97f5ee7817fc2c078cb0b5710f04f55c2d3b01f029b581e39ca76",
          "md5": "c811dde3f62dda2b31e7761875264590",
          "sha256": "d5915b9fcf69a0756afd10d37a1791c9f843842b361030b10dae0c3cf55e711e"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c811dde3f62dda2b31e7761875264590",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26851,
        "upload_time": "2020-11-24T10:22:57",
        "upload_time_iso_8601": "2020-11-24T10:22:57.037148Z",
        "url": "https://files.pythonhosted.org/packages/df/43/9a1bfbc97f5ee7817fc2c078cb0b5710f04f55c2d3b01f029b581e39ca76/geneticalgorithm2-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b8dc3f084a26b64f4b1b30714b927373d5d334bf7a25608bc623a58355738cd",
          "md5": "6cd23bf7d538614994280c2ecf952051",
          "sha256": "600793169e6758bb34cc2eeeacba125c901103a27d6453d95b7e4569f6cbed0a"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6cd23bf7d538614994280c2ecf952051",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20311,
        "upload_time": "2020-11-27T23:58:23",
        "upload_time_iso_8601": "2020-11-27T23:58:23.001439Z",
        "url": "https://files.pythonhosted.org/packages/6b/8d/c3f084a26b64f4b1b30714b927373d5d334bf7a25608bc623a58355738cd/geneticalgorithm2-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "565a71465461cc3f4e7d1e3fdb548ccc2725241048384154cdd1bfcb7279c6ea",
          "md5": "7899befc656b2f2dd7a8468b8ad83e0e",
          "sha256": "e8c1cd2bb01e62bf9b9865cda2e92448993a004c22eecc7bb78fb01354c2c6f6"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7899befc656b2f2dd7a8468b8ad83e0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28658,
        "upload_time": "2020-11-27T23:58:25",
        "upload_time_iso_8601": "2020-11-27T23:58:25.011279Z",
        "url": "https://files.pythonhosted.org/packages/56/5a/71465461cc3f4e7d1e3fdb548ccc2725241048384154cdd1bfcb7279c6ea/geneticalgorithm2-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e694800ecc698df02d6794ad87548a2f70a70616b54c11842197b616c132b2ff",
          "md5": "cef57b46c5fa1e9029160599d28c0cb6",
          "sha256": "0758e5b12ebef374c90bc59dd613c963e8ce968d8d33603b6671ce6aa09f5077"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cef57b46c5fa1e9029160599d28c0cb6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20670,
        "upload_time": "2020-11-28T10:46:57",
        "upload_time_iso_8601": "2020-11-28T10:46:57.547162Z",
        "url": "https://files.pythonhosted.org/packages/e6/94/800ecc698df02d6794ad87548a2f70a70616b54c11842197b616c132b2ff/geneticalgorithm2-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0eb54707fbfac522f467e6dbcbb8662ccbea061f44599193434bd77fa42d1eb7",
          "md5": "6750bc2ae97d9ed396660644d9677e22",
          "sha256": "b2b9f7e10461984bab1f7cea4b869b4d39f81969c8ef21d3c77e5d39ec3782d4"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6750bc2ae97d9ed396660644d9677e22",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29449,
        "upload_time": "2020-11-28T10:46:59",
        "upload_time_iso_8601": "2020-11-28T10:46:59.845159Z",
        "url": "https://files.pythonhosted.org/packages/0e/b5/4707fbfac522f467e6dbcbb8662ccbea061f44599193434bd77fa42d1eb7/geneticalgorithm2-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d84dd671891f47d9199aa1c09204c633c78bc2940ac3c6d6839bd88ae7bb94fb",
          "md5": "62e749c73ec95bd4ebf8fe89ebde35e5",
          "sha256": "c638df45fbb8e1a0d2462c2893fee5b5d2e9a78237da72fec6dfea20e2aa0658"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-2.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "62e749c73ec95bd4ebf8fe89ebde35e5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21380,
        "upload_time": "2020-11-28T21:50:50",
        "upload_time_iso_8601": "2020-11-28T21:50:50.709769Z",
        "url": "https://files.pythonhosted.org/packages/d8/4d/d671891f47d9199aa1c09204c633c78bc2940ac3c6d6839bd88ae7bb94fb/geneticalgorithm2-2.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2dc81c5221326d8df92ba3a19bfa098451f142f31906f14133df5565534cd2bd",
          "md5": "63ad1b1602803f9421b1710b3e5434c0",
          "sha256": "1c88ff3d840f16c98ea0862e0bb98248ada377418a83c460b35e272205ec4df9"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "63ad1b1602803f9421b1710b3e5434c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30956,
        "upload_time": "2020-11-28T21:50:52",
        "upload_time_iso_8601": "2020-11-28T21:50:52.927958Z",
        "url": "https://files.pythonhosted.org/packages/2d/c8/1c5221326d8df92ba3a19bfa098451f142f31906f14133df5565534cd2bd/geneticalgorithm2-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0211f5156d8c31b25103e5e336f81d1ccd41ad64cd360b95836a587765e2262",
          "md5": "b5b01a625252030058451117e6dddb5a",
          "sha256": "909d76b49fc83ba7e5c75a21ad40f98bcee21c036702adc80f69d1277da3378d"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-3.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5b01a625252030058451117e6dddb5a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22387,
        "upload_time": "2020-11-29T22:49:02",
        "upload_time_iso_8601": "2020-11-29T22:49:02.723880Z",
        "url": "https://files.pythonhosted.org/packages/c0/21/1f5156d8c31b25103e5e336f81d1ccd41ad64cd360b95836a587765e2262/geneticalgorithm2-3.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ae50aa1ef53a90e12c223de9d62e8bad6470d32e27f1fbe4699e04af8815c75",
          "md5": "57b72dadbcc1cc74bc69521e97779ba8",
          "sha256": "0d4928496b47a76ec3a3d20b348d2522729231236adbb67de2a00bcadee50160"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "57b72dadbcc1cc74bc69521e97779ba8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32218,
        "upload_time": "2020-11-29T22:49:05",
        "upload_time_iso_8601": "2020-11-29T22:49:05.141285Z",
        "url": "https://files.pythonhosted.org/packages/4a/e5/0aa1ef53a90e12c223de9d62e8bad6470d32e27f1fbe4699e04af8815c75/geneticalgorithm2-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cad9ae974fad00542678a658b1f579950a98b6a078e05e94491a342bb0287e92",
          "md5": "c54ff07c1dbb6f7fafc5629795b2f70b",
          "sha256": "e4845b54cbb61af83ac9acda30b0520c420b25d8920c1eb246f88d53082d25d7"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-3.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c54ff07c1dbb6f7fafc5629795b2f70b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22689,
        "upload_time": "2020-12-06T14:37:58",
        "upload_time_iso_8601": "2020-12-06T14:37:58.361347Z",
        "url": "https://files.pythonhosted.org/packages/ca/d9/ae974fad00542678a658b1f579950a98b6a078e05e94491a342bb0287e92/geneticalgorithm2-3.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2009112950fb1d793d9d6cb1b64366ba0ac59e801b0379604160f184f2e3ec5d",
          "md5": "f11d5e8c28bd56cd401c31f1f1a04899",
          "sha256": "d1c05dd4a74230ee4f9888ca3d154d17737ae82f725304812a12ced0df836c96"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-3.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f11d5e8c28bd56cd401c31f1f1a04899",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32734,
        "upload_time": "2020-12-06T14:38:00",
        "upload_time_iso_8601": "2020-12-06T14:38:00.934345Z",
        "url": "https://files.pythonhosted.org/packages/20/09/112950fb1d793d9d6cb1b64366ba0ac59e801b0379604160f184f2e3ec5d/geneticalgorithm2-3.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00b14fd478df7d0c028e78d97fb52643c9b50e67336a06dc5e9296ad119ba5de",
          "md5": "cd6b924ca7ef10f6e0f1150f219d88ac",
          "sha256": "899330d8360604fd4c9e160c374f8e6ccb685f316222ad5ff265eb877aa4905d"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-3.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd6b924ca7ef10f6e0f1150f219d88ac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25516,
        "upload_time": "2020-12-07T00:09:49",
        "upload_time_iso_8601": "2020-12-07T00:09:49.762545Z",
        "url": "https://files.pythonhosted.org/packages/00/b1/4fd478df7d0c028e78d97fb52643c9b50e67336a06dc5e9296ad119ba5de/geneticalgorithm2-3.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "509b0ab7cdf6320780069a97621c113bb3fd19a6de38703a70ff7839c3f69834",
          "md5": "00b0ff9fd2fcb1ba73295284f59b4752",
          "sha256": "27b9bb992e10f1b9e51f56b6424c9d4198c8c7575895b353c802842308f5e180"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-3.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "00b0ff9fd2fcb1ba73295284f59b4752",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34391,
        "upload_time": "2020-12-07T00:09:52",
        "upload_time_iso_8601": "2020-12-07T00:09:52.368252Z",
        "url": "https://files.pythonhosted.org/packages/50/9b/0ab7cdf6320780069a97621c113bb3fd19a6de38703a70ff7839c3f69834/geneticalgorithm2-3.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5f04ab54df1ab8059ab2b74e49a8f658028a53ef0b16be395afe8f365d8ad29",
          "md5": "2e0ea11d35e5f08be9010d1c4af2826a",
          "sha256": "ac8936ceac0ea921ca3ba7ae61def5668bf341306e757c76aaf0ceddd82e814c"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-4.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e0ea11d35e5f08be9010d1c4af2826a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26555,
        "upload_time": "2020-12-07T17:36:01",
        "upload_time_iso_8601": "2020-12-07T17:36:01.365842Z",
        "url": "https://files.pythonhosted.org/packages/f5/f0/4ab54df1ab8059ab2b74e49a8f658028a53ef0b16be395afe8f365d8ad29/geneticalgorithm2-4.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16ddcf37605d09ff3dc95fe7e50e2f00cdfeb959d359985301b47853cf3a1cb6",
          "md5": "69ae4f5c511614ab2d8f958233d99d3f",
          "sha256": "31ae3f3d59923a0d7c0f3bdc0c34531126a89935fcece7c58a39e830e33e4a8e"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-4.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "69ae4f5c511614ab2d8f958233d99d3f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37109,
        "upload_time": "2020-12-07T17:36:03",
        "upload_time_iso_8601": "2020-12-07T17:36:03.745209Z",
        "url": "https://files.pythonhosted.org/packages/16/dd/cf37605d09ff3dc95fe7e50e2f00cdfeb959d359985301b47853cf3a1cb6/geneticalgorithm2-4.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5113736feaf185974da749bd7e52dbc4fa3a30670f6aba4b4aa59d7db48c528d",
          "md5": "dbd3816ce418cb4dfede765f86f454bf",
          "sha256": "fc12b402d33343a73a83bd8136ada73e00ea7a2d2ab4b7251b4c90d8799ef4a7"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-4.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dbd3816ce418cb4dfede765f86f454bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26650,
        "upload_time": "2020-12-09T14:27:02",
        "upload_time_iso_8601": "2020-12-09T14:27:02.500487Z",
        "url": "https://files.pythonhosted.org/packages/51/13/736feaf185974da749bd7e52dbc4fa3a30670f6aba4b4aa59d7db48c528d/geneticalgorithm2-4.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f4a5ed9713669a32ec41347c8a28dc925df3992bfcceee2d5369386b5a2a0db",
          "md5": "e2e14c220ed0b6aa4a7268a1714a65f0",
          "sha256": "71db2a7daaa6e9dea4642c15f8cdff87d2e82b2b8b5e5526e01d47f633b734a2"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-4.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e2e14c220ed0b6aa4a7268a1714a65f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37287,
        "upload_time": "2020-12-09T14:27:06",
        "upload_time_iso_8601": "2020-12-09T14:27:06.671233Z",
        "url": "https://files.pythonhosted.org/packages/3f/4a/5ed9713669a32ec41347c8a28dc925df3992bfcceee2d5369386b5a2a0db/geneticalgorithm2-4.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9252c5f04294b07875c6486984804c70237d50d4ab2618be2bccf45d0021c99d",
          "md5": "062ac546b6fabcdbf581cdd6e4cdb031",
          "sha256": "b6818b3ba813714582159d6a0c7391898dfb5045cea5b99423398ed5f8a3c4b1"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-4.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "062ac546b6fabcdbf581cdd6e4cdb031",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26769,
        "upload_time": "2020-12-10T19:12:49",
        "upload_time_iso_8601": "2020-12-10T19:12:49.266935Z",
        "url": "https://files.pythonhosted.org/packages/92/52/c5f04294b07875c6486984804c70237d50d4ab2618be2bccf45d0021c99d/geneticalgorithm2-4.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0072100d37f416332fd217ca699d3606067e64078869ef221e61bcacad2fb648",
          "md5": "0196040f30fb5215ea00258f0f1372e0",
          "sha256": "a17b5d1c8e20776bb6c66a0793454b22ee080d5bf1948a6709e2ec7285ab27ea"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-4.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0196040f30fb5215ea00258f0f1372e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37481,
        "upload_time": "2020-12-10T19:12:52",
        "upload_time_iso_8601": "2020-12-10T19:12:52.629271Z",
        "url": "https://files.pythonhosted.org/packages/00/72/100d37f416332fd217ca699d3606067e64078869ef221e61bcacad2fb648/geneticalgorithm2-4.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68cd37d679c303889c2b30df7018068a0597c610b75d3d56ee8c9fb560288cf8",
          "md5": "bc310bac5e792acc04e7bd00c9e05e19",
          "sha256": "97029fd57bf3543188a94fd0605fc034d3c1ba65305a1c914a076838720caf74"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-4.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc310bac5e792acc04e7bd00c9e05e19",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26770,
        "upload_time": "2020-12-11T16:25:30",
        "upload_time_iso_8601": "2020-12-11T16:25:30.989782Z",
        "url": "https://files.pythonhosted.org/packages/68/cd/37d679c303889c2b30df7018068a0597c610b75d3d56ee8c9fb560288cf8/geneticalgorithm2-4.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb7a1d288a9962eb500aa7fd3ba16d5bd97a3c1ced43f9405311393f81f24f8a",
          "md5": "5141fd0c031a8163df8cd9586a012c95",
          "sha256": "9d24bf961143671f41f4c2b446b1005127f8f6d06458d82f19f67bec462c0c76"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-4.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5141fd0c031a8163df8cd9586a012c95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37487,
        "upload_time": "2020-12-11T16:25:34",
        "upload_time_iso_8601": "2020-12-11T16:25:34.440609Z",
        "url": "https://files.pythonhosted.org/packages/eb/7a/1d288a9962eb500aa7fd3ba16d5bd97a3c1ced43f9405311393f81f24f8a/geneticalgorithm2-4.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f398af4aeffa8afbf3c49342e69156b704130a98b87c494677d1d904749656db",
          "md5": "35eb51236f638b9699e7ff4dd71c3640",
          "sha256": "fc9d2557b54ff2cce7bb608f7a667de582cd5f747370d8dd41c14d67c32ed29b"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-4.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35eb51236f638b9699e7ff4dd71c3640",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26773,
        "upload_time": "2020-12-11T18:12:20",
        "upload_time_iso_8601": "2020-12-11T18:12:20.278248Z",
        "url": "https://files.pythonhosted.org/packages/f3/98/af4aeffa8afbf3c49342e69156b704130a98b87c494677d1d904749656db/geneticalgorithm2-4.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "124c4223f16de28ce15e2ce8363815da924ba3f09b78b68a20578481aa661fbf",
          "md5": "ede7ec26837ce5bcd28e816c08bcf3d6",
          "sha256": "6a206a24918d1abd3ea42969cbf1591ed80ef69e5e9fe90aeeb73fd58a2c4d3e"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-4.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ede7ec26837ce5bcd28e816c08bcf3d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37497,
        "upload_time": "2020-12-11T18:12:23",
        "upload_time_iso_8601": "2020-12-11T18:12:23.586404Z",
        "url": "https://files.pythonhosted.org/packages/12/4c/4223f16de28ce15e2ce8363815da924ba3f09b78b68a20578481aa661fbf/geneticalgorithm2-4.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e5e17d4e68c6579f6cee16807ce702dc5648ef26e3d2d757216c037151fc6f9",
          "md5": "07d86166684a0a952f3d24d0594b9b43",
          "sha256": "88c3de7ef8be105b1c276f32cffe5268ec339c540ad4efa149bb00e30e6298a1"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-4.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "07d86166684a0a952f3d24d0594b9b43",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26784,
        "upload_time": "2020-12-11T21:07:01",
        "upload_time_iso_8601": "2020-12-11T21:07:01.567681Z",
        "url": "https://files.pythonhosted.org/packages/2e/5e/17d4e68c6579f6cee16807ce702dc5648ef26e3d2d757216c037151fc6f9/geneticalgorithm2-4.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76d9c6f910da0f0756038a54eb85f1955ccbfa943a15f5976af0cc5d598f61d2",
          "md5": "b7434d7d6dacd3ad5509e051a6e17eba",
          "sha256": "6d2992cee4c688517d57583819d624aa9e951d91e69e51f145f3e65c9f8bcc31"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-4.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b7434d7d6dacd3ad5509e051a6e17eba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37522,
        "upload_time": "2020-12-11T21:07:04",
        "upload_time_iso_8601": "2020-12-11T21:07:04.243731Z",
        "url": "https://files.pythonhosted.org/packages/76/d9/c6f910da0f0756038a54eb85f1955ccbfa943a15f5976af0cc5d598f61d2/geneticalgorithm2-4.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63de4f965509ff4cbd15c2c6c5c26ea90f0061efbf8b5d5160549bb78dab1dad",
          "md5": "7520e7ab8d0a804090b996b175ae678b",
          "sha256": "01621316051f60e2f94b21a90b02e853d90959c6d09f41d9d8659ab8c71558df"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-4.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7520e7ab8d0a804090b996b175ae678b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26829,
        "upload_time": "2020-12-18T11:57:46",
        "upload_time_iso_8601": "2020-12-18T11:57:46.081316Z",
        "url": "https://files.pythonhosted.org/packages/63/de/4f965509ff4cbd15c2c6c5c26ea90f0061efbf8b5d5160549bb78dab1dad/geneticalgorithm2-4.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "242d6cb5213f90a7a159b60ae96c87243d0b9010ec5006a5ee456de55b4ff714",
          "md5": "f769882655f3fbb9cf5e9a3c095ec999",
          "sha256": "abf5457701a9e39c6bace5f95bb29cc08c460efddcfef90083cea55758823059"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-4.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "f769882655f3fbb9cf5e9a3c095ec999",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37618,
        "upload_time": "2020-12-18T11:57:49",
        "upload_time_iso_8601": "2020-12-18T11:57:49.542507Z",
        "url": "https://files.pythonhosted.org/packages/24/2d/6cb5213f90a7a159b60ae96c87243d0b9010ec5006a5ee456de55b4ff714/geneticalgorithm2-4.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d7c36da597e44464470f3fd4990be784ce07f96c02166d083816cdf07433332",
          "md5": "5e36b72bf5c8fd1747442ad16ae80143",
          "sha256": "202fb5f8c51d2c52f16e6695cbba6cd636dd9f4fc50fb7aeb6eb7e9e95ed08f4"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e36b72bf5c8fd1747442ad16ae80143",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28664,
        "upload_time": "2020-12-18T19:16:06",
        "upload_time_iso_8601": "2020-12-18T19:16:06.399493Z",
        "url": "https://files.pythonhosted.org/packages/3d/7c/36da597e44464470f3fd4990be784ce07f96c02166d083816cdf07433332/geneticalgorithm2-5.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4c764a30452ba6ee0fd20368d256a73bdbe60c9a0ab971e46def26c7745dac1",
          "md5": "f0f8433e0d5641dca9935073429995d5",
          "sha256": "e58e281797d948d6ccb551cf65d47cfb67a0b9cb1af9c0a068ca007ddd235b0d"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f0f8433e0d5641dca9935073429995d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40134,
        "upload_time": "2020-12-18T19:16:09",
        "upload_time_iso_8601": "2020-12-18T19:16:09.963342Z",
        "url": "https://files.pythonhosted.org/packages/e4/c7/64a30452ba6ee0fd20368d256a73bdbe60c9a0ab971e46def26c7745dac1/geneticalgorithm2-5.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56cfe4fb81f536fc67111ffde3cf69a028fe2a75f376302fb5f6deed1c21a3ab",
          "md5": "071dfcce277f184d20b0ad3997f3b9c4",
          "sha256": "55923d39480279532ef84545bcade99f2fc8f31e18897a92b0b3004b7fbd3a64"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "071dfcce277f184d20b0ad3997f3b9c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28686,
        "upload_time": "2020-12-19T11:11:53",
        "upload_time_iso_8601": "2020-12-19T11:11:53.909165Z",
        "url": "https://files.pythonhosted.org/packages/56/cf/e4fb81f536fc67111ffde3cf69a028fe2a75f376302fb5f6deed1c21a3ab/geneticalgorithm2-5.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3151bec87b558af968e1ec3ec2e6b24703079106c21aecef43a7575df375a18c",
          "md5": "51299734ba6be0f9df0f4468ae4bc4df",
          "sha256": "a42b45e1ba6a3ba3a03c010b071930af850b1f38d47388c2b28b8399de0defb7"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "51299734ba6be0f9df0f4468ae4bc4df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40166,
        "upload_time": "2020-12-19T11:11:57",
        "upload_time_iso_8601": "2020-12-19T11:11:57.384792Z",
        "url": "https://files.pythonhosted.org/packages/31/51/bec87b558af968e1ec3ec2e6b24703079106c21aecef43a7575df375a18c/geneticalgorithm2-5.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a11dd4ed455036cbc24d61022fc9a528842afa0d96bb03752d5daa0e15de2c7",
          "md5": "ab2187a14e7902495a9eb59b44104459",
          "sha256": "b9d567d33e2c2c450581f56f41dfca0923c37d05bf1815647ff2d403128e0535"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ab2187a14e7902495a9eb59b44104459",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29650,
        "upload_time": "2020-12-25T22:55:41",
        "upload_time_iso_8601": "2020-12-25T22:55:41.221246Z",
        "url": "https://files.pythonhosted.org/packages/3a/11/dd4ed455036cbc24d61022fc9a528842afa0d96bb03752d5daa0e15de2c7/geneticalgorithm2-5.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "463cd17e96d66eafae8c100a01f19137d22b4b49f86d567102300ea41b77aec6",
          "md5": "dd0317d81e99189045d90ea1b72d1603",
          "sha256": "3bdc0ace0dbd546105675593986d08bfafa02a2df9fef8214f35b1b7946458cf"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dd0317d81e99189045d90ea1b72d1603",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41112,
        "upload_time": "2020-12-25T22:55:44",
        "upload_time_iso_8601": "2020-12-25T22:55:44.629464Z",
        "url": "https://files.pythonhosted.org/packages/46/3c/d17e96d66eafae8c100a01f19137d22b4b49f86d567102300ea41b77aec6/geneticalgorithm2-5.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cfe1f07d6e9f53f0ce4cdb086b4b723e44cb18dfc9731e3304795aa9f7b4ead",
          "md5": "2ad349291276efc32f3c743148f22dd2",
          "sha256": "450380c69041850ffce71d358ff1ff6c4485e6fb2c76f4cad7584635412d4e37"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ad349291276efc32f3c743148f22dd2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29655,
        "upload_time": "2020-12-25T22:59:18",
        "upload_time_iso_8601": "2020-12-25T22:59:18.683983Z",
        "url": "https://files.pythonhosted.org/packages/5c/fe/1f07d6e9f53f0ce4cdb086b4b723e44cb18dfc9731e3304795aa9f7b4ead/geneticalgorithm2-5.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3272cf327fc2b8c7981da0db434eef88605bc1852d1c9d605014a26f2631b62c",
          "md5": "3eaf6d5c142e17af4eab53d0161f6930",
          "sha256": "faf0bced7de0261e0fb7ca5e016e2360e3edd8bb6a0a8af4ef2c472fd7ab83d2"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3eaf6d5c142e17af4eab53d0161f6930",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41128,
        "upload_time": "2020-12-25T22:59:22",
        "upload_time_iso_8601": "2020-12-25T22:59:22.867085Z",
        "url": "https://files.pythonhosted.org/packages/32/72/cf327fc2b8c7981da0db434eef88605bc1852d1c9d605014a26f2631b62c/geneticalgorithm2-5.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e822f0fa874b4d0c5007d343e28316ededb7b4cdccf63dd92530e9a15428a7b",
          "md5": "c696dda782973bbb53d079dfca88c84e",
          "sha256": "4d715d56ce699fc02050f2e44db55663a7b058a690de5b2070afabc8fcd51738"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c696dda782973bbb53d079dfca88c84e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29251,
        "upload_time": "2020-12-27T18:10:05",
        "upload_time_iso_8601": "2020-12-27T18:10:05.339816Z",
        "url": "https://files.pythonhosted.org/packages/2e/82/2f0fa874b4d0c5007d343e28316ededb7b4cdccf63dd92530e9a15428a7b/geneticalgorithm2-5.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97945130aa111677446838fc47d1f71b3b5d941b3c83fe8e3db02865075fe633",
          "md5": "d22019337a8d3cd4db16c3d1e49e3f7c",
          "sha256": "6805499ef136b7f2b385cfdf74e6da3fe9661b2a3549e40e95bd623eaba00fc1"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d22019337a8d3cd4db16c3d1e49e3f7c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41266,
        "upload_time": "2020-12-27T18:10:08",
        "upload_time_iso_8601": "2020-12-27T18:10:08.791603Z",
        "url": "https://files.pythonhosted.org/packages/97/94/5130aa111677446838fc47d1f71b3b5d941b3c83fe8e3db02865075fe633/geneticalgorithm2-5.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9839789801fa56de1cb796c5acdeb9776894546947a33052fdb21a505e0dde6",
          "md5": "b0dae6ab3056f62253870e6d6f2ac19b",
          "sha256": "112e2e46746c5ba9cdf49101609291373b5bd023ebd3759d16cbfb6dfdc0ef4f"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0dae6ab3056f62253870e6d6f2ac19b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29255,
        "upload_time": "2020-12-27T18:23:39",
        "upload_time_iso_8601": "2020-12-27T18:23:39.450690Z",
        "url": "https://files.pythonhosted.org/packages/d9/83/9789801fa56de1cb796c5acdeb9776894546947a33052fdb21a505e0dde6/geneticalgorithm2-5.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1610a862eb36bc13f9d4f0831b22197f3e8109dba66c360bf5b06cee63dfe50",
          "md5": "e3df98be5bde5ff6b0a2e8d62e06c62c",
          "sha256": "862740a0a4b30abe75df66d4a95d8d15fefa69aa3a47efdc65ae2b9a8be1559b"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e3df98be5bde5ff6b0a2e8d62e06c62c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41260,
        "upload_time": "2020-12-27T18:23:42",
        "upload_time_iso_8601": "2020-12-27T18:23:42.854489Z",
        "url": "https://files.pythonhosted.org/packages/c1/61/0a862eb36bc13f9d4f0831b22197f3e8109dba66c360bf5b06cee63dfe50/geneticalgorithm2-5.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f52402ead0a685186741aed136a411b7c59bd60e6303059e14f7600714d4c1dc",
          "md5": "ea8fba4ee615448d1575f6d2afb7d0c7",
          "sha256": "10684bfb15b4a6f2543c17e0fa92ced8cb0599e0fc363c9358246d5d8fb9ca80"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea8fba4ee615448d1575f6d2afb7d0c7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29750,
        "upload_time": "2020-12-28T21:28:10",
        "upload_time_iso_8601": "2020-12-28T21:28:10.881966Z",
        "url": "https://files.pythonhosted.org/packages/f5/24/02ead0a685186741aed136a411b7c59bd60e6303059e14f7600714d4c1dc/geneticalgorithm2-5.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c0ac0d1d9c307b43a34c4df550cff8ecf1a3576c9a08a83ff92bafcff37eb87",
          "md5": "3d6fd3c3675293e4df0af8c013bdaf14",
          "sha256": "472452057839bad9342830e776c7cb6514f7beb14b5317d118857179e9ef1f31"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3d6fd3c3675293e4df0af8c013bdaf14",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42346,
        "upload_time": "2020-12-28T21:28:14",
        "upload_time_iso_8601": "2020-12-28T21:28:14.633269Z",
        "url": "https://files.pythonhosted.org/packages/6c/0a/c0d1d9c307b43a34c4df550cff8ecf1a3576c9a08a83ff92bafcff37eb87/geneticalgorithm2-5.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17c74058f792842947806a75dfdc2eaab288398c4a6b7b68c3e193534362098b",
          "md5": "1589bc029eb6090789bb01cb7763fa29",
          "sha256": "70ca84eef219040b1eb5eccd3ff3802769eaa0fc315ae5cc8758195bee68ea83"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1589bc029eb6090789bb01cb7763fa29",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30932,
        "upload_time": "2020-12-31T17:12:19",
        "upload_time_iso_8601": "2020-12-31T17:12:19.348780Z",
        "url": "https://files.pythonhosted.org/packages/17/c7/4058f792842947806a75dfdc2eaab288398c4a6b7b68c3e193534362098b/geneticalgorithm2-5.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15e570d1e2cbc73c7a1be3627d3e82c5cb0db3148ffb03ff19f5158ef0c88c5d",
          "md5": "2106b11dc7a9fa231f170c10b61085c4",
          "sha256": "942df4d006c59af36ef980b1d143bbff3c7e30efbf790e465938ca3757b6ce57"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2106b11dc7a9fa231f170c10b61085c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 43501,
        "upload_time": "2020-12-31T17:12:23",
        "upload_time_iso_8601": "2020-12-31T17:12:23.794824Z",
        "url": "https://files.pythonhosted.org/packages/15/e5/70d1e2cbc73c7a1be3627d3e82c5cb0db3148ffb03ff19f5158ef0c88c5d/geneticalgorithm2-5.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "713ce2ac13af52233835f42cc5c526512ad2686bf53c83322bb1e1e49500075e",
          "md5": "d158c2a65ac2dee3f9ec102b05a2b43a",
          "sha256": "0df40f71efe1eb50664d5cb27b69bbd84ebf5af0933d11b9815da82024ca5bc0"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d158c2a65ac2dee3f9ec102b05a2b43a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 31627,
        "upload_time": "2021-01-01T11:43:04",
        "upload_time_iso_8601": "2021-01-01T11:43:04.073098Z",
        "url": "https://files.pythonhosted.org/packages/71/3c/e2ac13af52233835f42cc5c526512ad2686bf53c83322bb1e1e49500075e/geneticalgorithm2-5.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50feeb811473d3ab2f37ceed9f89502b1f49bde778f8e3f0ca3735f8d1247c10",
          "md5": "bba1a635bf050c40a59721426b5c7bda",
          "sha256": "7a4f971b33ad769d9ea20f65e80d513db0d8d4ae6f2b99cf864c0c53745ef3f8"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bba1a635bf050c40a59721426b5c7bda",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44265,
        "upload_time": "2021-01-01T11:43:07",
        "upload_time_iso_8601": "2021-01-01T11:43:07.582273Z",
        "url": "https://files.pythonhosted.org/packages/50/fe/eb811473d3ab2f37ceed9f89502b1f49bde778f8e3f0ca3735f8d1247c10/geneticalgorithm2-5.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2245750f105ce36826f9d68ed8360c13cdf4f47b3421cc675202a0dab86817c",
          "md5": "c239f4f55b05df4cc2a711b10ec2e16a",
          "sha256": "ae01e34d602d2843bed8966215a24a9a0e5ee53c3ee38ceef098b0fd5f274986"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c239f4f55b05df4cc2a711b10ec2e16a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 33263,
        "upload_time": "2021-01-03T11:34:05",
        "upload_time_iso_8601": "2021-01-03T11:34:05.338892Z",
        "url": "https://files.pythonhosted.org/packages/d2/24/5750f105ce36826f9d68ed8360c13cdf4f47b3421cc675202a0dab86817c/geneticalgorithm2-5.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95a4802f6aab491e884588a6bc3469de02c04edaea07ff236396dd48809e49af",
          "md5": "a5844b9033fef17d5d95e5971c1feef3",
          "sha256": "f8555b8c1cf61ad06216ff356fbc2353fa217383ce17336b7eb00339d45804c3"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a5844b9033fef17d5d95e5971c1feef3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 46155,
        "upload_time": "2021-01-03T11:34:09",
        "upload_time_iso_8601": "2021-01-03T11:34:09.515968Z",
        "url": "https://files.pythonhosted.org/packages/95/a4/802f6aab491e884588a6bc3469de02c04edaea07ff236396dd48809e49af/geneticalgorithm2-5.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e8388a3fa4437af33fda99cbfb395bc6c2bf6a4a18465672fbcbcb16e6cb95c",
          "md5": "43eb7d4df9b3f249eee114636e857239",
          "sha256": "69a872c7285368f1c5628e693de3e023f4fa3646d20eedf22161e9145861c6f5"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "43eb7d4df9b3f249eee114636e857239",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 33293,
        "upload_time": "2021-01-05T11:20:47",
        "upload_time_iso_8601": "2021-01-05T11:20:47.218748Z",
        "url": "https://files.pythonhosted.org/packages/6e/83/88a3fa4437af33fda99cbfb395bc6c2bf6a4a18465672fbcbcb16e6cb95c/geneticalgorithm2-5.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d772e71230838da92296cc361aea41a78c8da1008cb607fa264a3859db57259",
          "md5": "b1a88ec9ad70a35c5a0025986e4b28de",
          "sha256": "4c6baee979bea9c81e619789403c1975fdfcc0ff3ae700c5845f07e95d25c931"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b1a88ec9ad70a35c5a0025986e4b28de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 46187,
        "upload_time": "2021-01-05T11:20:51",
        "upload_time_iso_8601": "2021-01-05T11:20:51.815909Z",
        "url": "https://files.pythonhosted.org/packages/0d/77/2e71230838da92296cc361aea41a78c8da1008cb607fa264a3859db57259/geneticalgorithm2-5.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72f50602392e6b985fae96cf83735e482f8c6650770491c2b3cd15bce5989f91",
          "md5": "948067714733c47fd20a7272258222f6",
          "sha256": "d737b3d74eaa5545f377dd9b799ce69f359107df01c51c16bb84ded955bb4334"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "948067714733c47fd20a7272258222f6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 33624,
        "upload_time": "2021-01-05T20:25:01",
        "upload_time_iso_8601": "2021-01-05T20:25:01.904960Z",
        "url": "https://files.pythonhosted.org/packages/72/f5/0602392e6b985fae96cf83735e482f8c6650770491c2b3cd15bce5989f91/geneticalgorithm2-5.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88efedcff40337d9861c0d024eaa39fe765ec07a34260d4caf178928b1f89c8f",
          "md5": "cbe6f89cbdc67dc3e4e097074bc86b59",
          "sha256": "945d43bcdeb93062f4f6aaa7ba991803a337df50f9a3de63e871c2f11b6d97c9"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cbe6f89cbdc67dc3e4e097074bc86b59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 46660,
        "upload_time": "2021-01-05T20:25:05",
        "upload_time_iso_8601": "2021-01-05T20:25:05.835837Z",
        "url": "https://files.pythonhosted.org/packages/88/ef/edcff40337d9861c0d024eaa39fe765ec07a34260d4caf178928b1f89c8f/geneticalgorithm2-5.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "046101c2ab18ff92a5d4a36cc9c2d4cc487d64eeba82831783ba65b50a4ac330",
          "md5": "253a8cbeca95343ca542cfc7a45d5f1b",
          "sha256": "2de5f94e7e9d435c7a4f8c4ccfd57342c3ed32049e2360a3dd0c349c7830214f"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "253a8cbeca95343ca542cfc7a45d5f1b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 34337,
        "upload_time": "2021-01-09T15:52:58",
        "upload_time_iso_8601": "2021-01-09T15:52:58.245632Z",
        "url": "https://files.pythonhosted.org/packages/04/61/01c2ab18ff92a5d4a36cc9c2d4cc487d64eeba82831783ba65b50a4ac330/geneticalgorithm2-5.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a7f549c43ed75cfc611bd87bd47d7a16a4a0a4e83b3198bc5be8eb3159b2589",
          "md5": "14cffb802e9131e3f153e55a66dda7e6",
          "sha256": "d3a994cbf2db74bea8306c4ad4be1e550786c670adc2b2d3dde8efa901c42538"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "14cffb802e9131e3f153e55a66dda7e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47775,
        "upload_time": "2021-01-09T15:53:02",
        "upload_time_iso_8601": "2021-01-09T15:53:02.950950Z",
        "url": "https://files.pythonhosted.org/packages/8a/7f/549c43ed75cfc611bd87bd47d7a16a4a0a4e83b3198bc5be8eb3159b2589/geneticalgorithm2-5.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0dc09c1a9e7ffa3b594c0d65f0ee8ccb766a983bbafdbd01d3cfef323b1fca53",
          "md5": "17d74f8d57d9123b9a92176f3e0526d0",
          "sha256": "130850d083e5f712ac49e8e626c65b59a578f1f49255be64cd7953948b8b392c"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "17d74f8d57d9123b9a92176f3e0526d0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35003,
        "upload_time": "2021-01-25T10:40:09",
        "upload_time_iso_8601": "2021-01-25T10:40:09.217017Z",
        "url": "https://files.pythonhosted.org/packages/0d/c0/9c1a9e7ffa3b594c0d65f0ee8ccb766a983bbafdbd01d3cfef323b1fca53/geneticalgorithm2-5.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b5f81b46abc477eca8accbcfd99e7337f6f643c1cf7ea3426fdb618cd0ee85f",
          "md5": "a927aa0a2b619a1ee2bbddcce745a9eb",
          "sha256": "eb65f3242c52691661bdc2a1464346c312b2c251518ecb6cd237b3767ee43075"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-5.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a927aa0a2b619a1ee2bbddcce745a9eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 48865,
        "upload_time": "2021-01-25T10:40:13",
        "upload_time_iso_8601": "2021-01-25T10:40:13.042790Z",
        "url": "https://files.pythonhosted.org/packages/8b/5f/81b46abc477eca8accbcfd99e7337f6f643c1cf7ea3426fdb618cd0ee85f/geneticalgorithm2-5.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c067e8c91ebbbd49fd5f2c5a33f49aad5af7b5bf3dc4aaf980902a51230699c8",
          "md5": "0cf57c331535d71eafd5a6543d2e9dcf",
          "sha256": "58c3f64d96d109961e644a3a4eeb2a600acd206c7c9f6b5bca19c1e5a63fb535"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0cf57c331535d71eafd5a6543d2e9dcf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 37014,
        "upload_time": "2021-01-28T14:01:44",
        "upload_time_iso_8601": "2021-01-28T14:01:44.841665Z",
        "url": "https://files.pythonhosted.org/packages/c0/67/e8c91ebbbd49fd5f2c5a33f49aad5af7b5bf3dc4aaf980902a51230699c8/geneticalgorithm2-6.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0bd19efee3427883bb389c1dbe65c49a314d973e4ad77bb4c5678ec40d1270c6",
          "md5": "861e558cd655c3f0cd1c598d31473ed8",
          "sha256": "4ebd654ed58d2f2c0001aad8035d255f8b97743d1588e44387a2a89782a5a3fa"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "861e558cd655c3f0cd1c598d31473ed8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 51948,
        "upload_time": "2021-01-28T14:01:48",
        "upload_time_iso_8601": "2021-01-28T14:01:48.589815Z",
        "url": "https://files.pythonhosted.org/packages/0b/d1/9efee3427883bb389c1dbe65c49a314d973e4ad77bb4c5678ec40d1270c6/geneticalgorithm2-6.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf3849f170e1cc99f255f6b445fe090c84753d00ac9b4e5d4997ebdfce424c77",
          "md5": "5dd95b567c6e602445fabe7c60390293",
          "sha256": "6bf63d1570e40fa29d81009d64e303f09abc9f8c1f972cbe627529bbe0298659"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5dd95b567c6e602445fabe7c60390293",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 37968,
        "upload_time": "2021-01-30T12:32:56",
        "upload_time_iso_8601": "2021-01-30T12:32:56.276420Z",
        "url": "https://files.pythonhosted.org/packages/bf/38/49f170e1cc99f255f6b445fe090c84753d00ac9b4e5d4997ebdfce424c77/geneticalgorithm2-6.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79932ade7af74b753b7f7a96a4b2879277ca329218aecf587a368c6352d981ac",
          "md5": "3a379a254eaf1e73a9de2964c16a0d91",
          "sha256": "7ebda047f87f3b1f08c58de6a59f26a784e0ffc459ce9284666aa0925ec03812"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3a379a254eaf1e73a9de2964c16a0d91",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 52809,
        "upload_time": "2021-01-30T12:33:00",
        "upload_time_iso_8601": "2021-01-30T12:33:00.360496Z",
        "url": "https://files.pythonhosted.org/packages/79/93/2ade7af74b753b7f7a96a4b2879277ca329218aecf587a368c6352d981ac/geneticalgorithm2-6.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7aa2306b422b8069d26605ce99186b476c982b07d7d82413807b7399772ee001",
          "md5": "b0d86c8879c6d5e9bfd3f99c7adc636b",
          "sha256": "ec6e318f637ab75612f2b0a9f79940612c7a584fec9ed9abf317a04b9465a070"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0d86c8879c6d5e9bfd3f99c7adc636b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 37955,
        "upload_time": "2021-01-30T16:31:39",
        "upload_time_iso_8601": "2021-01-30T16:31:39.485559Z",
        "url": "https://files.pythonhosted.org/packages/7a/a2/306b422b8069d26605ce99186b476c982b07d7d82413807b7399772ee001/geneticalgorithm2-6.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a406f6eeadb41dd799502a868ec1baf512ac142e7bcfb8cceaec16ebb17ff70",
          "md5": "22a0c17c55853e3b9587fdaac776f436",
          "sha256": "69858275a168adc2fd6b35b0578567a97f581174132c2c120354bb64aa2287a7"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "22a0c17c55853e3b9587fdaac776f436",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 52593,
        "upload_time": "2021-01-30T16:31:43",
        "upload_time_iso_8601": "2021-01-30T16:31:43.356373Z",
        "url": "https://files.pythonhosted.org/packages/0a/40/6f6eeadb41dd799502a868ec1baf512ac142e7bcfb8cceaec16ebb17ff70/geneticalgorithm2-6.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8eed8442180a66c8165a24da1b5738f01e123bd91a2f70ada3ea96b9f2ed13fc",
          "md5": "0b61723fe91d8451d000fc085a657abb",
          "sha256": "985700fe6cad954519f770a2e04b82ddc2d68616d826f4058b32b555ca246ab1"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b61723fe91d8451d000fc085a657abb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38174,
        "upload_time": "2021-01-31T17:52:38",
        "upload_time_iso_8601": "2021-01-31T17:52:38.135821Z",
        "url": "https://files.pythonhosted.org/packages/8e/ed/8442180a66c8165a24da1b5738f01e123bd91a2f70ada3ea96b9f2ed13fc/geneticalgorithm2-6.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "966fd28b4de2b01e1c976a03db35adb26250156acb733f79f651ae8a1c55a41b",
          "md5": "fc7c3ad7144df2bedd8625511f7de53c",
          "sha256": "af4e6fd2c89f82f0ab7773a40aeb12e02fce386646e04bd494c61fa8ff83a4cd"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fc7c3ad7144df2bedd8625511f7de53c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 52902,
        "upload_time": "2021-01-31T17:52:42",
        "upload_time_iso_8601": "2021-01-31T17:52:42.350826Z",
        "url": "https://files.pythonhosted.org/packages/96/6f/d28b4de2b01e1c976a03db35adb26250156acb733f79f651ae8a1c55a41b/geneticalgorithm2-6.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12c7ef2c7729eaad018dbeafd01eb9e6f488cdb541a5bdb3a72adf60f127d287",
          "md5": "4ef6cad1b0c1f12333f4d3e090fdca9e",
          "sha256": "a9f86bb31c563f197653cfb59d4bff1710f20f87b5193e85a4bb52ae6a4138c3"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ef6cad1b0c1f12333f4d3e090fdca9e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38349,
        "upload_time": "2021-02-03T10:00:57",
        "upload_time_iso_8601": "2021-02-03T10:00:57.548058Z",
        "url": "https://files.pythonhosted.org/packages/12/c7/ef2c7729eaad018dbeafd01eb9e6f488cdb541a5bdb3a72adf60f127d287/geneticalgorithm2-6.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e96ad608e24ed6b027aab6175ef5711b2dd7a42c0154b59a352b6ec4cced3ea6",
          "md5": "2f8695d23fcda922f8b860f6f7a3de11",
          "sha256": "9efef963f36a6520b3c65c53e5505189eb2b948a8589b1980dd9b25130bd8908"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2f8695d23fcda922f8b860f6f7a3de11",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 53123,
        "upload_time": "2021-02-03T10:01:03",
        "upload_time_iso_8601": "2021-02-03T10:01:03.132508Z",
        "url": "https://files.pythonhosted.org/packages/e9/6a/d608e24ed6b027aab6175ef5711b2dd7a42c0154b59a352b6ec4cced3ea6/geneticalgorithm2-6.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.2.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea11602fd99ea94941532f55ba6bea26c1e219e08d7ab38ff722679bb43d7d2b",
          "md5": "91111f5ab42b6583cc1f4cd298f5eda8",
          "sha256": "147415b9fea7a7580c604865b92681950019397399f1511837300c0f813f8762"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "91111f5ab42b6583cc1f4cd298f5eda8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 39190,
        "upload_time": "2021-06-24T09:12:34",
        "upload_time_iso_8601": "2021-06-24T09:12:34.297872Z",
        "url": "https://files.pythonhosted.org/packages/ea/11/602fd99ea94941532f55ba6bea26c1e219e08d7ab38ff722679bb43d7d2b/geneticalgorithm2-6.2.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b9a4610acfdd94a1a75c08431169d8b923a6bc1ec0ed512aaee2926eb75187f",
          "md5": "60dc6ec7a7c33e23aa48a2a9242f0c00",
          "sha256": "9aa7c26284bf669de22c0f061240c3a9f3a4f9ae3b87cf42118f81befc158070"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.10.tar.gz",
        "has_sig": false,
        "md5_digest": "60dc6ec7a7c33e23aa48a2a9242f0c00",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54157,
        "upload_time": "2021-06-24T09:12:38",
        "upload_time_iso_8601": "2021-06-24T09:12:38.330799Z",
        "url": "https://files.pythonhosted.org/packages/9b/9a/4610acfdd94a1a75c08431169d8b923a6bc1ec0ed512aaee2926eb75187f/geneticalgorithm2-6.2.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.2.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17029e7a3d05594b85a2047924fe3ff32b7d21ec8a9a1bb8878f2f58304fae6b",
          "md5": "f4618cdd9dd6d7542b5d588a21bac7dd",
          "sha256": "58772a7edd3ea9eb0f06c082ba5fcc5536a7b1b4875708cb728a7111003519ce"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f4618cdd9dd6d7542b5d588a21bac7dd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 39776,
        "upload_time": "2021-07-03T18:22:40",
        "upload_time_iso_8601": "2021-07-03T18:22:40.708744Z",
        "url": "https://files.pythonhosted.org/packages/17/02/9e7a3d05594b85a2047924fe3ff32b7d21ec8a9a1bb8878f2f58304fae6b/geneticalgorithm2-6.2.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19f3b7f372598be856f3aed1de53ef9f42b996618f6c5d897aa6989ad19082f4",
          "md5": "2d31c138ab4b5b718b03001ef197e878",
          "sha256": "5c6f40ff4266a4c5d5e79d8bd8b684df7750764d8abd938823f974d9eecf9f73"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.11.tar.gz",
        "has_sig": false,
        "md5_digest": "2d31c138ab4b5b718b03001ef197e878",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54857,
        "upload_time": "2021-07-03T18:22:45",
        "upload_time_iso_8601": "2021-07-03T18:22:45.213864Z",
        "url": "https://files.pythonhosted.org/packages/19/f3/b7f372598be856f3aed1de53ef9f42b996618f6c5d897aa6989ad19082f4/geneticalgorithm2-6.2.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.2.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2daebafe15d099b8810735b7143a79ca25491e247711cee8a76da60515b44f2",
          "md5": "90fa8f5defd27832f7c5ea29aed357c3",
          "sha256": "cf2130cfff0bdabe47f5406e9c88894bc662a1b99aa9e27027fedc9714226c7b"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90fa8f5defd27832f7c5ea29aed357c3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 39797,
        "upload_time": "2021-07-04T08:45:04",
        "upload_time_iso_8601": "2021-07-04T08:45:04.731178Z",
        "url": "https://files.pythonhosted.org/packages/f2/da/ebafe15d099b8810735b7143a79ca25491e247711cee8a76da60515b44f2/geneticalgorithm2-6.2.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f20d7a27426faa3ffc547c458f97556106e8cb5436dce50310771b2c2e82a38",
          "md5": "62ee4b368045fa7de58395b6c03bc402",
          "sha256": "35770fe58bec836fe1f2d0757410368c3be0e31adbebc3b165098474399dd092"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.12.tar.gz",
        "has_sig": false,
        "md5_digest": "62ee4b368045fa7de58395b6c03bc402",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54887,
        "upload_time": "2021-07-04T08:45:09",
        "upload_time_iso_8601": "2021-07-04T08:45:09.538786Z",
        "url": "https://files.pythonhosted.org/packages/0f/20/d7a27426faa3ffc547c458f97556106e8cb5436dce50310771b2c2e82a38/geneticalgorithm2-6.2.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a605ca559d6765b16f2f3ad6ca624a856de02238437ee31380c51af22ccde348",
          "md5": "9a74aaf1781b64eb8b4ccd6edb17d707",
          "sha256": "164ba9857f75e10c49caee0d3d8993d220263d8a2e3be607bb5e71581839366a"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a74aaf1781b64eb8b4ccd6edb17d707",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38557,
        "upload_time": "2021-02-14T10:18:57",
        "upload_time_iso_8601": "2021-02-14T10:18:57.008585Z",
        "url": "https://files.pythonhosted.org/packages/a6/05/ca559d6765b16f2f3ad6ca624a856de02238437ee31380c51af22ccde348/geneticalgorithm2-6.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f253f542c6fd76cb19af53ac23fb9c5f0fe30afc118a2a8f3cc3ed57aeef8cd",
          "md5": "39fbbe25d250221a18f453572a18f0d1",
          "sha256": "c97cbec400f91465a653f56e61c1458e6d2ef627480ac433f434bc2782a6ac68"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "39fbbe25d250221a18f453572a18f0d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 53407,
        "upload_time": "2021-02-14T10:19:01",
        "upload_time_iso_8601": "2021-02-14T10:19:01.390503Z",
        "url": "https://files.pythonhosted.org/packages/0f/25/3f542c6fd76cb19af53ac23fb9c5f0fe30afc118a2a8f3cc3ed57aeef8cd/geneticalgorithm2-6.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1e519dc743491d517cd0ff1490434bee91c77c0277dcabdd6288db2ebd26764",
          "md5": "0a5172368a673fb982dbea4baaf3146f",
          "sha256": "fcfa77d5ab81740f886abca151c4fb9f61a93d95754e832b7a759d4e1909b2e8"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a5172368a673fb982dbea4baaf3146f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38559,
        "upload_time": "2021-02-14T11:09:20",
        "upload_time_iso_8601": "2021-02-14T11:09:20.641964Z",
        "url": "https://files.pythonhosted.org/packages/e1/e5/19dc743491d517cd0ff1490434bee91c77c0277dcabdd6288db2ebd26764/geneticalgorithm2-6.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad95259e49afdd30ab1e23b320d929914c001ed384da0959b2ef49d397553d65",
          "md5": "15b6373822185dcfeeb1544e94a094b0",
          "sha256": "66e3dcac42660043f20d886cd19920b3c93e457cefde69019e08c6ad51e8a13f"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "15b6373822185dcfeeb1544e94a094b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 53403,
        "upload_time": "2021-02-14T11:09:24",
        "upload_time_iso_8601": "2021-02-14T11:09:24.673727Z",
        "url": "https://files.pythonhosted.org/packages/ad/95/259e49afdd30ab1e23b320d929914c001ed384da0959b2ef49d397553d65/geneticalgorithm2-6.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0601699ca1589433fdb3db7940b04e1d1b07766909b4ff2c518add13f2fe4d24",
          "md5": "0ccf8c2df78254ad2566f7749327f2b5",
          "sha256": "9089d93c91bdba45d5c181baea81ecaea717944bad69c03a7ec7bad85a765d45"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ccf8c2df78254ad2566f7749327f2b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38602,
        "upload_time": "2021-02-20T07:55:37",
        "upload_time_iso_8601": "2021-02-20T07:55:37.810324Z",
        "url": "https://files.pythonhosted.org/packages/06/01/699ca1589433fdb3db7940b04e1d1b07766909b4ff2c518add13f2fe4d24/geneticalgorithm2-6.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09e8bd8c47b6094741644b7b50573b4477f0bae467d200eca4d85b792bdf480c",
          "md5": "588c3b824936955826719672a16781b1",
          "sha256": "7996dabf57a803cb16ef5e59ba87c0f63c7acda97075e8b98e5aec6db0dd80e6"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "588c3b824936955826719672a16781b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 53436,
        "upload_time": "2021-02-20T07:55:41",
        "upload_time_iso_8601": "2021-02-20T07:55:41.397347Z",
        "url": "https://files.pythonhosted.org/packages/09/e8/bd8c47b6094741644b7b50573b4477f0bae467d200eca4d85b792bdf480c/geneticalgorithm2-6.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "629866d5bbf20c07d0d1b76f5dc7d6dac8fe9574373d099432fbf4add1baa4ef",
          "md5": "ebdf5b277f18efc6e0863a03670a6506",
          "sha256": "a62bd158d61068c5915cf0f6fe47ab3e05eb257638d284a12c96a129f4a3659d"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ebdf5b277f18efc6e0863a03670a6506",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38578,
        "upload_time": "2021-04-10T09:21:09",
        "upload_time_iso_8601": "2021-04-10T09:21:09.882456Z",
        "url": "https://files.pythonhosted.org/packages/62/98/66d5bbf20c07d0d1b76f5dc7d6dac8fe9574373d099432fbf4add1baa4ef/geneticalgorithm2-6.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ca9a751da0c46b78a5d809e585905de8a1de57bfe06e35250ac699cae190d8e",
          "md5": "bd74953b4eedb5c2aaafbeac219c90e3",
          "sha256": "c9d5f86d6bf6a511ad59c055e0bc1a89a13751c316d5181e78951702b220eaec"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "bd74953b4eedb5c2aaafbeac219c90e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 53410,
        "upload_time": "2021-04-10T09:21:14",
        "upload_time_iso_8601": "2021-04-10T09:21:14.658061Z",
        "url": "https://files.pythonhosted.org/packages/3c/a9/a751da0c46b78a5d809e585905de8a1de57bfe06e35250ac699cae190d8e/geneticalgorithm2-6.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d0ba5d27303f304c468bc6cebd9001b5919d3fa058c6b1ceec68eefa7fe0627",
          "md5": "93f3b6d98df79b4aea9c67f591d84703",
          "sha256": "0a91dbf508a7fae6761ea47a8b6e6e7c3e7e11cb83a1910166d40dd36c92e8af"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93f3b6d98df79b4aea9c67f591d84703",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38615,
        "upload_time": "2021-04-15T08:07:54",
        "upload_time_iso_8601": "2021-04-15T08:07:54.651439Z",
        "url": "https://files.pythonhosted.org/packages/4d/0b/a5d27303f304c468bc6cebd9001b5919d3fa058c6b1ceec68eefa7fe0627/geneticalgorithm2-6.2.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9253cf2b2bb128f92357ea5b15b5380612ae4ddf9338ad37be4222c5f5b74a5b",
          "md5": "90c395e071488e727e02c8275d148d93",
          "sha256": "646f5103a8165e74ee382806f4ce9c517259cba1c50335580ef1ad8927646c9c"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "90c395e071488e727e02c8275d148d93",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 53442,
        "upload_time": "2021-04-15T08:07:58",
        "upload_time_iso_8601": "2021-04-15T08:07:58.563205Z",
        "url": "https://files.pythonhosted.org/packages/92/53/cf2b2bb128f92357ea5b15b5380612ae4ddf9338ad37be4222c5f5b74a5b/geneticalgorithm2-6.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "604bc59ed7f292a1e609a81335ccacb2d6dcd4139a7a4183d75ba59bb4268fe6",
          "md5": "873099e1afec88aa28d44fcee8bfff38",
          "sha256": "4ec4a4ac57fe67408dfc591bc5ff06a833418982226232421d86b4ef683df7c9"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "873099e1afec88aa28d44fcee8bfff38",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38712,
        "upload_time": "2021-05-18T08:52:40",
        "upload_time_iso_8601": "2021-05-18T08:52:40.349579Z",
        "url": "https://files.pythonhosted.org/packages/60/4b/c59ed7f292a1e609a81335ccacb2d6dcd4139a7a4183d75ba59bb4268fe6/geneticalgorithm2-6.2.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "032a7d15a06c0cc9c340ac8e3cc18795b13dfe6e4bc038572fd8c4308ffadf9b",
          "md5": "9874c46a2cb7e69ff65768cfedec9c41",
          "sha256": "1225cdb41b2299d038151ddf583a1e7fa963a79365a57142815dc7dd1f517c7d"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "9874c46a2cb7e69ff65768cfedec9c41",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 53598,
        "upload_time": "2021-05-18T08:52:44",
        "upload_time_iso_8601": "2021-05-18T08:52:44.989239Z",
        "url": "https://files.pythonhosted.org/packages/03/2a/7d15a06c0cc9c340ac8e3cc18795b13dfe6e4bc038572fd8c4308ffadf9b/geneticalgorithm2-6.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bf0588db1da8b3dcb014aa033516e558703e4aae5ae3be7028b41759cf91c31",
          "md5": "c0ee6cb8aabec164df8ba6b37982db80",
          "sha256": "77bf0e9d31a93afe0de3e840fd24c1367ddf9a2765e88732c781549b3a028d08"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c0ee6cb8aabec164df8ba6b37982db80",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 39121,
        "upload_time": "2021-06-04T13:30:35",
        "upload_time_iso_8601": "2021-06-04T13:30:35.801895Z",
        "url": "https://files.pythonhosted.org/packages/5b/f0/588db1da8b3dcb014aa033516e558703e4aae5ae3be7028b41759cf91c31/geneticalgorithm2-6.2.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d22eccde77be2f3556d83db76266a10ddb38b46a818f43dd71575808e1e531f5",
          "md5": "63de6275a3801660b14db02e58057248",
          "sha256": "c75ae7bc13f3d62c9fdcdee77c85f4e0bc12c94b7c38e37f858c630a8f8eaec5"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.8.tar.gz",
        "has_sig": false,
        "md5_digest": "63de6275a3801660b14db02e58057248",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54102,
        "upload_time": "2021-06-04T13:30:40",
        "upload_time_iso_8601": "2021-06-04T13:30:40.142788Z",
        "url": "https://files.pythonhosted.org/packages/d2/2e/ccde77be2f3556d83db76266a10ddb38b46a818f43dd71575808e1e531f5/geneticalgorithm2-6.2.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.2.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2536b0d284e1f401fc9c08306ef2a8e9cffb0709931245964f775a53f8ebb071",
          "md5": "d9182fb931fa7cd7dc7c73ebf4b7a825",
          "sha256": "78e8332228aedf92b32137baf5e967b7b9b8dddd7639ded2b86c7531fcf32518"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d9182fb931fa7cd7dc7c73ebf4b7a825",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 39164,
        "upload_time": "2021-06-04T15:28:02",
        "upload_time_iso_8601": "2021-06-04T15:28:02.432490Z",
        "url": "https://files.pythonhosted.org/packages/25/36/b0d284e1f401fc9c08306ef2a8e9cffb0709931245964f775a53f8ebb071/geneticalgorithm2-6.2.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c7f0c28dd2c9c9d0251004e1ae5400add000b3eda9681b5ffb2ed1c0edf624d",
          "md5": "bda031b4a123b039a578c1a3556a2eca",
          "sha256": "cd237a1df08b83baa47e3dba2b38b1648d1b0ea091af069a2d832faf993fc195"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.2.9.tar.gz",
        "has_sig": false,
        "md5_digest": "bda031b4a123b039a578c1a3556a2eca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54134,
        "upload_time": "2021-06-04T15:28:05",
        "upload_time_iso_8601": "2021-06-04T15:28:05.610469Z",
        "url": "https://files.pythonhosted.org/packages/6c/7f/0c28dd2c9c9d0251004e1ae5400add000b3eda9681b5ffb2ed1c0edf624d/geneticalgorithm2-6.2.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4040a6ffcdd49d2fedbabcdeddb96f2de7154a581b111b3bd0b4f65e8dba2abe",
          "md5": "db4b24bce0a49e87c0582f227aa44c7c",
          "sha256": "d63925cf9fa4ee980db420faeab68c8c0cd0882c604ff27f17ed7e29022fab41"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db4b24bce0a49e87c0582f227aa44c7c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 42891,
        "upload_time": "2021-10-16T13:53:13",
        "upload_time_iso_8601": "2021-10-16T13:53:13.648889Z",
        "url": "https://files.pythonhosted.org/packages/40/40/a6ffcdd49d2fedbabcdeddb96f2de7154a581b111b3bd0b4f65e8dba2abe/geneticalgorithm2-6.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a9949420597c7a7d1de44a8aed96ddcf701c7b99fc72e358e3059c7f7edfe38",
          "md5": "4250e0406f0283a3dc525e6337eff28b",
          "sha256": "3921552fc1f335b4af60460f13ac2677f3ab5ac5f605757a28413dc667622a4e"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4250e0406f0283a3dc525e6337eff28b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 58356,
        "upload_time": "2021-10-16T13:53:18",
        "upload_time_iso_8601": "2021-10-16T13:53:18.797139Z",
        "url": "https://files.pythonhosted.org/packages/2a/99/49420597c7a7d1de44a8aed96ddcf701c7b99fc72e358e3059c7f7edfe38/geneticalgorithm2-6.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbc966fc39b489aa66079c5f7b1cea5c565a7209bd8f1b021bbff9d5c7d5ddfd",
          "md5": "26a4a0bdea200b366b76772e6b3c7101",
          "sha256": "214b5363c4bc39a429c22938ce68ed0568e234d6a183fdb0eeae1b619aced0ba"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "26a4a0bdea200b366b76772e6b3c7101",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 43607,
        "upload_time": "2021-10-24T10:59:21",
        "upload_time_iso_8601": "2021-10-24T10:59:21.727074Z",
        "url": "https://files.pythonhosted.org/packages/bb/c9/66fc39b489aa66079c5f7b1cea5c565a7209bd8f1b021bbff9d5c7d5ddfd/geneticalgorithm2-6.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f03146bd164b46caf7766d6f9d1a1ee0a366f91eb79d69a3fa33365f96bf61e0",
          "md5": "b338ad2af6b3c8bfa71e4c2f719a53f2",
          "sha256": "818ae3d1168974fe928cb0b08a7f6597cec7ffedd1b5017d7efb70906dcea6a8"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b338ad2af6b3c8bfa71e4c2f719a53f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 59536,
        "upload_time": "2021-10-24T10:59:25",
        "upload_time_iso_8601": "2021-10-24T10:59:25.524125Z",
        "url": "https://files.pythonhosted.org/packages/f0/31/46bd164b46caf7766d6f9d1a1ee0a366f91eb79d69a3fa33365f96bf61e0/geneticalgorithm2-6.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63b9278f141ef9bf5dfb7f404a6258f2687741f74135046448dec708146dbec7",
          "md5": "0c5b6110ce2942ba2f82a67f0e6cdd00",
          "sha256": "74bd2ced76493a15245525ea2494c7198f6ed199f6305fd429bad76f84de7af2"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c5b6110ce2942ba2f82a67f0e6cdd00",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 43672,
        "upload_time": "2021-11-26T08:25:42",
        "upload_time_iso_8601": "2021-11-26T08:25:42.336017Z",
        "url": "https://files.pythonhosted.org/packages/63/b9/278f141ef9bf5dfb7f404a6258f2687741f74135046448dec708146dbec7/geneticalgorithm2-6.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3d470182ded47a295ad5e14180e15554f984db06c5260a2544210b63db01a8e",
          "md5": "8b11726374a8e4321c193a3dde9f19b5",
          "sha256": "405bb36046f42ef126fb010521dab6c8487f22f72d1771cb07602d1534c1e534"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8b11726374a8e4321c193a3dde9f19b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 59721,
        "upload_time": "2021-11-26T08:25:46",
        "upload_time_iso_8601": "2021-11-26T08:25:46.241796Z",
        "url": "https://files.pythonhosted.org/packages/e3/d4/70182ded47a295ad5e14180e15554f984db06c5260a2544210b63db01a8e/geneticalgorithm2-6.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "094867fca221d27fd857fcc04123442419af8dd5d9033707f8a47bbfa8b9874b",
          "md5": "3105a5626d2d674ef9924e2fe1159200",
          "sha256": "4b8ef9e538ddf8f67939cb951318436cff547551c4d20bb62a83398ef4a2d4e1"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3105a5626d2d674ef9924e2fe1159200",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 44212,
        "upload_time": "2021-12-05T17:10:28",
        "upload_time_iso_8601": "2021-12-05T17:10:28.076658Z",
        "url": "https://files.pythonhosted.org/packages/09/48/67fca221d27fd857fcc04123442419af8dd5d9033707f8a47bbfa8b9874b/geneticalgorithm2-6.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5a7b4fcecdec286f9f6bfad32e890267ba351440501caa95067883bc57ad5f3",
          "md5": "85eec413dfab76c0446e09c2d5e81b28",
          "sha256": "42fb767fe002c2b2bb60bd825a31528b96beb7fc6f126660c303ea73f11da9ab"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "85eec413dfab76c0446e09c2d5e81b28",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 60195,
        "upload_time": "2021-12-05T17:10:31",
        "upload_time_iso_8601": "2021-12-05T17:10:31.873787Z",
        "url": "https://files.pythonhosted.org/packages/e5/a7/b4fcecdec286f9f6bfad32e890267ba351440501caa95067883bc57ad5f3/geneticalgorithm2-6.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83cda25eb0400bcc68fc7e9277e6af15aafbacfc8c2c88827e14bce8c7153d9b",
          "md5": "aa324e24727caaa3792fdc9d5774ce14",
          "sha256": "d3109c1ad7edb2782b99942ad3d9464f03e37a34b5b2d46bdcd7b84b5078a26e"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa324e24727caaa3792fdc9d5774ce14",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 44273,
        "upload_time": "2021-12-30T20:13:22",
        "upload_time_iso_8601": "2021-12-30T20:13:22.686511Z",
        "url": "https://files.pythonhosted.org/packages/83/cd/a25eb0400bcc68fc7e9277e6af15aafbacfc8c2c88827e14bce8c7153d9b/geneticalgorithm2-6.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b0c93553701d4cb10c427dd2f4ece7ab733a31198a5c5bae4b831e0793855cc",
          "md5": "53a95a98d7d2abbf6df572a58f763eaf",
          "sha256": "f4c652bd6f1514a712bf6f5c5bcf5d1c6308dd3097ecdccc6cb3a4cd511e1926"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "53a95a98d7d2abbf6df572a58f763eaf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 60256,
        "upload_time": "2021-12-30T20:13:26",
        "upload_time_iso_8601": "2021-12-30T20:13:26.238751Z",
        "url": "https://files.pythonhosted.org/packages/9b/0c/93553701d4cb10c427dd2f4ece7ab733a31198a5c5bae4b831e0793855cc/geneticalgorithm2-6.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "440a839bff5ef965731616d37987379547fa3cc3832dfea3c1836599d392cdd4",
          "md5": "9a7721849b8ba3b8ff69c4be2edb5dc5",
          "sha256": "211a8219d63d8c05e81da99ec3098556866ac42a8fb4fc7031646fe689dad2e4"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a7721849b8ba3b8ff69c4be2edb5dc5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 43397,
        "upload_time": "2022-03-30T18:23:15",
        "upload_time_iso_8601": "2022-03-30T18:23:15.511684Z",
        "url": "https://files.pythonhosted.org/packages/44/0a/839bff5ef965731616d37987379547fa3cc3832dfea3c1836599d392cdd4/geneticalgorithm2-6.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f81d61fe9e6d7e6529cf9e697df378941e371129724ae49259dca5e12d12ca4",
          "md5": "5025d8c3217d1f99c4dfd3f1cfe744ea",
          "sha256": "c85a2e82f8f0fd435b6367835d81a5f00740c9fef71497b28588a5206786fc11"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5025d8c3217d1f99c4dfd3f1cfe744ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 59098,
        "upload_time": "2022-03-30T18:23:18",
        "upload_time_iso_8601": "2022-03-30T18:23:18.443252Z",
        "url": "https://files.pythonhosted.org/packages/3f/81/d61fe9e6d7e6529cf9e697df378941e371129724ae49259dca5e12d12ca4/geneticalgorithm2-6.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2943199867a8249c6014a148fddf09288eba7ba4208fe3d14f7dc656bbdccf8",
          "md5": "26594c811de5beaef1162f75ead7d878",
          "sha256": "9a5d2462f08ba5f660e792fb75f221190994652f3c952065f08112e7004d94c6"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "26594c811de5beaef1162f75ead7d878",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 43406,
        "upload_time": "2022-03-31T15:35:25",
        "upload_time_iso_8601": "2022-03-31T15:35:25.509519Z",
        "url": "https://files.pythonhosted.org/packages/d2/94/3199867a8249c6014a148fddf09288eba7ba4208fe3d14f7dc656bbdccf8/geneticalgorithm2-6.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7809a579b2840e3474c16d3711b986e6cfa833bb0e4ac8532cbc863e8e080f8c",
          "md5": "06bdc6cb2b7e8f7597e05f081c39b7be",
          "sha256": "0a3cfceb37f5b20468f441799ee887bd75dc9828c17167db97cb5c2d97bf74e2"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "06bdc6cb2b7e8f7597e05f081c39b7be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 58483,
        "upload_time": "2022-03-31T15:35:29",
        "upload_time_iso_8601": "2022-03-31T15:35:29.405465Z",
        "url": "https://files.pythonhosted.org/packages/78/09/a579b2840e3474c16d3711b986e6cfa833bb0e4ac8532cbc863e8e080f8c/geneticalgorithm2-6.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45215ec469067b02b3900a14e687d17f364dfec6e481e32396030470e5f5ac89",
          "md5": "624e4beac98ba531fb1655a5c31f774d",
          "sha256": "d0a919ea754271011ab4cbcd8d7912001809d2ef2fea5f08df2b32192454525f"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.6.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "624e4beac98ba531fb1655a5c31f774d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 43412,
        "upload_time": "2022-04-05T17:38:21",
        "upload_time_iso_8601": "2022-04-05T17:38:21.787669Z",
        "url": "https://files.pythonhosted.org/packages/45/21/5ec469067b02b3900a14e687d17f364dfec6e481e32396030470e5f5ac89/geneticalgorithm2-6.6.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbd5fb76c2c935595ef45c2ffc390a4284a4e4b6f9c44ff94bb9177d56c7ceee",
          "md5": "045b34971dd290faae16de618315ec9b",
          "sha256": "1c0b320527ba7c545bab19540d57382b12b8218f9b662dc7b8f517e949aa8a94"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "045b34971dd290faae16de618315ec9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 58527,
        "upload_time": "2022-04-05T17:38:25",
        "upload_time_iso_8601": "2022-04-05T17:38:25.466363Z",
        "url": "https://files.pythonhosted.org/packages/fb/d5/fb76c2c935595ef45c2ffc390a4284a4e4b6f9c44ff94bb9177d56c7ceee/geneticalgorithm2-6.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45196a3964d07f40760c11c219b33762d3c944450e586355696c3fff307f771f",
          "md5": "fa42aecc3d4bcd7d3b2d3476e2f282a6",
          "sha256": "eb66e9f71001aadd900c56aa1de1bac01af503ee5ce3de50d8261a7219cee620"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fa42aecc3d4bcd7d3b2d3476e2f282a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 44305,
        "upload_time": "2022-04-06T15:46:29",
        "upload_time_iso_8601": "2022-04-06T15:46:29.532882Z",
        "url": "https://files.pythonhosted.org/packages/45/19/6a3964d07f40760c11c219b33762d3c944450e586355696c3fff307f771f/geneticalgorithm2-6.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81c5f4af55d8adf1d4e24aae942defa9779774c5f1a960ab5e15e20a9984e17b",
          "md5": "bdcadcb53cda2a2c55c0a5efafda0856",
          "sha256": "cd8723b11f49908dcab9f38ac29320411bb48a73b2f235e035f6457afe4b27d5"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bdcadcb53cda2a2c55c0a5efafda0856",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 60061,
        "upload_time": "2022-04-06T15:46:37",
        "upload_time_iso_8601": "2022-04-06T15:46:37.512646Z",
        "url": "https://files.pythonhosted.org/packages/81/c5/f4af55d8adf1d4e24aae942defa9779774c5f1a960ab5e15e20a9984e17b/geneticalgorithm2-6.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b4d066cea5d81af59c8f63664020bcce35b342d2050f9cce835955853290661",
          "md5": "8263b366e398834db94cb2c0367415cd",
          "sha256": "5ea2812cd8f26fe94f5f822e51e39503ec2c50ac23726746798da30f357ec0ec"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.7.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8263b366e398834db94cb2c0367415cd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 44961,
        "upload_time": "2022-04-07T14:31:56",
        "upload_time_iso_8601": "2022-04-07T14:31:56.499272Z",
        "url": "https://files.pythonhosted.org/packages/1b/4d/066cea5d81af59c8f63664020bcce35b342d2050f9cce835955853290661/geneticalgorithm2-6.7.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b291fca9c04b5cb86ddd6f17526c0494e1a021a0420b8b5671547f4dcd61108b",
          "md5": "76a3191f0c1054aaeab112afc89f51c9",
          "sha256": "8c49e53e69b5facf2f8974fac060e082dd1f9b74163b9b39d757125cf1438826"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "76a3191f0c1054aaeab112afc89f51c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 60716,
        "upload_time": "2022-04-07T14:32:00",
        "upload_time_iso_8601": "2022-04-07T14:32:00.040018Z",
        "url": "https://files.pythonhosted.org/packages/b2/91/fca9c04b5cb86ddd6f17526c0494e1a021a0420b8b5671547f4dcd61108b/geneticalgorithm2-6.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.7.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f512944f7a21f2dedf66720fb30fe764894fee5ae204483d6e4e1cd36fcdad9",
          "md5": "1043c5ca2139c3fffe8e9e23b346b1c0",
          "sha256": "718bb8533e326891cb2e40fe26e18f8cf3181d2cd079d3dbf5487e29f72af8c9"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.7.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1043c5ca2139c3fffe8e9e23b346b1c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 46598,
        "upload_time": "2022-04-08T08:54:47",
        "upload_time_iso_8601": "2022-04-08T08:54:47.277560Z",
        "url": "https://files.pythonhosted.org/packages/8f/51/2944f7a21f2dedf66720fb30fe764894fee5ae204483d6e4e1cd36fcdad9/geneticalgorithm2-6.7.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39f99fdd4d00d03df1fb9ec2b2c71c5d9bc40c0011aa623ecf849042eec0438c",
          "md5": "50118ea5a6ff0a8c694337a9a3ed19fd",
          "sha256": "ebd9468e5a87cb0b8312e484cd429ebbd116a9ac84a294789d21370ca8fffb23"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.7.2.tar.gz",
        "has_sig": false,
        "md5_digest": "50118ea5a6ff0a8c694337a9a3ed19fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 62457,
        "upload_time": "2022-04-08T08:54:50",
        "upload_time_iso_8601": "2022-04-08T08:54:50.977554Z",
        "url": "https://files.pythonhosted.org/packages/39/f9/9fdd4d00d03df1fb9ec2b2c71c5d9bc40c0011aa623ecf849042eec0438c/geneticalgorithm2-6.7.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.7.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4e6f18658a6e81032756bd3733b957db7a943c354e070ef87a2ba913271b6c4",
          "md5": "4aa4167fb88273601c344203af589a86",
          "sha256": "f819c156f48ea2bcb3250a85c1bed6fd066a5ad5fd29835b9270ac4ae90880ae"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.7.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4aa4167fb88273601c344203af589a86",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 46652,
        "upload_time": "2022-04-12T21:43:47",
        "upload_time_iso_8601": "2022-04-12T21:43:47.302282Z",
        "url": "https://files.pythonhosted.org/packages/e4/e6/f18658a6e81032756bd3733b957db7a943c354e070ef87a2ba913271b6c4/geneticalgorithm2-6.7.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "896e742c550299f0be381ef502a8e29bc3ff0f1b00160b5731d825210664d0a1",
          "md5": "b98379af60396f36c5bbe5ec2a69adac",
          "sha256": "6817b30bdde8f801c1efb890b14fbeffdf32527eb7d1b2b6788ed00cf3507248"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.7.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b98379af60396f36c5bbe5ec2a69adac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 62485,
        "upload_time": "2022-04-12T21:43:50",
        "upload_time_iso_8601": "2022-04-12T21:43:50.684890Z",
        "url": "https://files.pythonhosted.org/packages/89/6e/742c550299f0be381ef502a8e29bc3ff0f1b00160b5731d825210664d0a1/geneticalgorithm2-6.7.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.7.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8d9646be5f76b0b330ec57b30ad49ff8e809a9a0cb811dba54ddf088e2ef1f1",
          "md5": "8f53b0a2ecb5e5fbf048f4a502f00d89",
          "sha256": "9831c5e8f90e915f6e12916cd8514a9788224e93b53d09360b890f4c4a13e55b"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.7.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f53b0a2ecb5e5fbf048f4a502f00d89",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 47244,
        "upload_time": "2022-04-13T08:43:31",
        "upload_time_iso_8601": "2022-04-13T08:43:31.984820Z",
        "url": "https://files.pythonhosted.org/packages/f8/d9/646be5f76b0b330ec57b30ad49ff8e809a9a0cb811dba54ddf088e2ef1f1/geneticalgorithm2-6.7.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00a03d7cc6367aa17ef7e382e3d6fcc9cc99c67fe747dd8a6229d05e2d112c62",
          "md5": "eaa22f43445a55682bb80b0293b02413",
          "sha256": "8451c5b4b5c6e7680652ac937de54e66de28626aa75e4ed3a63a651e2504a8a9"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.7.4.tar.gz",
        "has_sig": false,
        "md5_digest": "eaa22f43445a55682bb80b0293b02413",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 62958,
        "upload_time": "2022-04-13T08:43:36",
        "upload_time_iso_8601": "2022-04-13T08:43:36.034546Z",
        "url": "https://files.pythonhosted.org/packages/00/a0/3d7cc6367aa17ef7e382e3d6fcc9cc99c67fe747dd8a6229d05e2d112c62/geneticalgorithm2-6.7.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.7.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "094cd3ec3d2054f014a2d1f123e63c8d79fe8a2a388f3dd43e4c35c15960dcf3",
          "md5": "01d227339628e02c17456182bdd96b2d",
          "sha256": "cf07b8646fdbdf8cc2636a28f085219e9fb82671ab2ed1eeda6e4cc90473f4bf"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.7.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01d227339628e02c17456182bdd96b2d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 46757,
        "upload_time": "2022-04-13T19:46:08",
        "upload_time_iso_8601": "2022-04-13T19:46:08.916807Z",
        "url": "https://files.pythonhosted.org/packages/09/4c/d3ec3d2054f014a2d1f123e63c8d79fe8a2a388f3dd43e4c35c15960dcf3/geneticalgorithm2-6.7.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a317e07b265ec7c64a3c822af4030220e9fa5d0450dc7b11ffc21f4db48d63c1",
          "md5": "8af6ceafd5bca838bce23c305e2eb981",
          "sha256": "363d9b70fcd82ebc838aaa3623a589e4be0f8b0b2605389fb7a2d41b4f77d1a0"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.7.5.tar.gz",
        "has_sig": false,
        "md5_digest": "8af6ceafd5bca838bce23c305e2eb981",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 62717,
        "upload_time": "2022-04-13T19:46:12",
        "upload_time_iso_8601": "2022-04-13T19:46:12.924293Z",
        "url": "https://files.pythonhosted.org/packages/a3/17/e07b265ec7c64a3c822af4030220e9fa5d0450dc7b11ffc21f4db48d63c1/geneticalgorithm2-6.7.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.7.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b79a94d4a4b8f0a8d819443c5bf0d62dc8b7df6c50a8af40eecfe6f4238da47e",
          "md5": "987b0e5a1cb2c10a15f210c89b3a7960",
          "sha256": "249f9fafb04b8ee5529d9823347eb0733f7cc0dd6b88642f1841b2151c250685"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.7.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "987b0e5a1cb2c10a15f210c89b3a7960",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 46853,
        "upload_time": "2022-04-17T00:21:15",
        "upload_time_iso_8601": "2022-04-17T00:21:15.826014Z",
        "url": "https://files.pythonhosted.org/packages/b7/9a/94d4a4b8f0a8d819443c5bf0d62dc8b7df6c50a8af40eecfe6f4238da47e/geneticalgorithm2-6.7.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a58b6aec223788e5727965919d5a14141a5401eb0a285a622463028f37428d3c",
          "md5": "b049c25ef72150b88151b408358ff604",
          "sha256": "959f37120927bde309bc6c20b186c9d72e3b25319bf417f316555008aa4d89c1"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.7.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b049c25ef72150b88151b408358ff604",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 62876,
        "upload_time": "2022-04-17T00:21:19",
        "upload_time_iso_8601": "2022-04-17T00:21:19.609238Z",
        "url": "https://files.pythonhosted.org/packages/a5/8b/6aec223788e5727965919d5a14141a5401eb0a285a622463028f37428d3c/geneticalgorithm2-6.7.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.7.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e51f94ca53885ff6a56c6ef18c6e1c4165399faae21b56eb10e2c38e4798414",
          "md5": "407ac8a1cd191e52f54fe089da9048ae",
          "sha256": "3e7360a699d75586320c4909fa001895e5dc7e4b44e7e51e11e324396e8b100d"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.7.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "407ac8a1cd191e52f54fe089da9048ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 47770,
        "upload_time": "2022-04-17T11:34:12",
        "upload_time_iso_8601": "2022-04-17T11:34:12.743798Z",
        "url": "https://files.pythonhosted.org/packages/0e/51/f94ca53885ff6a56c6ef18c6e1c4165399faae21b56eb10e2c38e4798414/geneticalgorithm2-6.7.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "667f004ee9a835380c4ac665a88bef9994b04e3d4aa17d257aa8085a484f5667",
          "md5": "0a8f0f515a373df78b8f2eb418d34447",
          "sha256": "a70b383fb5b7ec6227d6b653d78ca29232f27feab85dca26f2bc08c6db80bd47"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.7.7.tar.gz",
        "has_sig": false,
        "md5_digest": "0a8f0f515a373df78b8f2eb418d34447",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 63731,
        "upload_time": "2022-04-17T11:34:16",
        "upload_time_iso_8601": "2022-04-17T11:34:16.542101Z",
        "url": "https://files.pythonhosted.org/packages/66/7f/004ee9a835380c4ac665a88bef9994b04e3d4aa17d257aa8085a484f5667/geneticalgorithm2-6.7.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c911e6dce0b949b5f05b16fe2a6655d8ecab533c52c0b151eae177ec835a330f",
          "md5": "f5bf8043b77185028363792e9c141412",
          "sha256": "0a788bd88597aebe87eada7a9441a0fa286e05c2ad92a31ea7b0bb7c82a08868"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f5bf8043b77185028363792e9c141412",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 47687,
        "upload_time": "2022-04-17T17:22:55",
        "upload_time_iso_8601": "2022-04-17T17:22:55.123710Z",
        "url": "https://files.pythonhosted.org/packages/c9/11/e6dce0b949b5f05b16fe2a6655d8ecab533c52c0b151eae177ec835a330f/geneticalgorithm2-6.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d7a3c07e9f4c464ccdf1d9e4f270496400407f960ed15ab2a7421bdd04c92b1",
          "md5": "211cd582d7e2f39c3bf315451fd1c493",
          "sha256": "410e51f82dfe317d3111a4a86b18ed499500c2cbe376eef91b4d05855fcc2d34"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "211cd582d7e2f39c3bf315451fd1c493",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 63595,
        "upload_time": "2022-04-17T17:23:00",
        "upload_time_iso_8601": "2022-04-17T17:23:00.529276Z",
        "url": "https://files.pythonhosted.org/packages/6d/7a/3c07e9f4c464ccdf1d9e4f270496400407f960ed15ab2a7421bdd04c92b1/geneticalgorithm2-6.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c08ae54a0818cf03360b2276dc5b8c8efd18b2f923ecb24e5af47d23f7f185f0",
          "md5": "a867955ad62cab35800e7f47e14b29e7",
          "sha256": "457fa7e9e9dfabdd626cf78511653a86c194d943951a84fb7ea950b96ae86253"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.8.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a867955ad62cab35800e7f47e14b29e7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 47530,
        "upload_time": "2022-04-24T15:11:03",
        "upload_time_iso_8601": "2022-04-24T15:11:03.561157Z",
        "url": "https://files.pythonhosted.org/packages/c0/8a/e54a0818cf03360b2276dc5b8c8efd18b2f923ecb24e5af47d23f7f185f0/geneticalgorithm2-6.8.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2302b781406d16fcc01e185ddcb7e5aec077947e220c20529da42ee5d8771125",
          "md5": "641eed3e241c4ccb4fc8506ccc750ff4",
          "sha256": "7662479aff9aff177c9912b4551614214f3b38fd0bf5d2f60e67cc97e5a9e4e7"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "641eed3e241c4ccb4fc8506ccc750ff4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 63728,
        "upload_time": "2022-04-24T15:11:06",
        "upload_time_iso_8601": "2022-04-24T15:11:06.938685Z",
        "url": "https://files.pythonhosted.org/packages/23/02/b781406d16fcc01e185ddcb7e5aec077947e220c20529da42ee5d8771125/geneticalgorithm2-6.8.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.8.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da19c54153dcadee32a8a7f14962755e42af23100e76777c538425de2670d3e6",
          "md5": "8f2d1d2636f23efabe359cd106eeaa95",
          "sha256": "65a6ca4a2215cce4e4d081679966e2d1bac2413cc4c5e0ebadb8fb1d371bfe02"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.8.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f2d1d2636f23efabe359cd106eeaa95",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 47649,
        "upload_time": "2022-06-12T11:51:26",
        "upload_time_iso_8601": "2022-06-12T11:51:26.756944Z",
        "url": "https://files.pythonhosted.org/packages/da/19/c54153dcadee32a8a7f14962755e42af23100e76777c538425de2670d3e6/geneticalgorithm2-6.8.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04ee518e6f6554957068ce7f841378219e6df28b8406403dda3fef7c9c72cb78",
          "md5": "39e84412057903f18508c69530364186",
          "sha256": "e946838f27bf3f86bcd8f4bea3a647ac0837d1b928889f12a6f648d62383f246"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.8.2.tar.gz",
        "has_sig": false,
        "md5_digest": "39e84412057903f18508c69530364186",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 63798,
        "upload_time": "2022-06-12T11:51:30",
        "upload_time_iso_8601": "2022-06-12T11:51:30.561403Z",
        "url": "https://files.pythonhosted.org/packages/04/ee/518e6f6554957068ce7f841378219e6df28b8406403dda3fef7c9c72cb78/geneticalgorithm2-6.8.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.8.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87a702f1dd70e5a98076dd269e447b327767dde4fb1d797517ab0cf9262e5d18",
          "md5": "0d8520f82ec23fdb83100a3b15fe5ac2",
          "sha256": "3262bc33273273720ada82cb08c5b10089a3526cae2e4407c4461980a57ba39c"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.8.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0d8520f82ec23fdb83100a3b15fe5ac2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 48421,
        "upload_time": "2022-12-24T12:04:08",
        "upload_time_iso_8601": "2022-12-24T12:04:08.414494Z",
        "url": "https://files.pythonhosted.org/packages/87/a7/02f1dd70e5a98076dd269e447b327767dde4fb1d797517ab0cf9262e5d18/geneticalgorithm2-6.8.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37c545d06616279ef1f2e6dde930100585a519b0c574482e9fcee7f858c37edd",
          "md5": "e8cdda62a1d63091c7270e281bb45223",
          "sha256": "a3a5d6347f4797fd1f3f010f9dd5fc763ab8861abaea8ba73a510eb1578cc729"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.8.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e8cdda62a1d63091c7270e281bb45223",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 65344,
        "upload_time": "2022-12-24T12:04:10",
        "upload_time_iso_8601": "2022-12-24T12:04:10.882399Z",
        "url": "https://files.pythonhosted.org/packages/37/c5/45d06616279ef1f2e6dde930100585a519b0c574482e9fcee7f858c37edd/geneticalgorithm2-6.8.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.8.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "780042fb267f8417233a306dcf359d7cfe0ea21c98fd6831b523efe52163f759",
          "md5": "3a9490dfafbb2aa608ca99d0d2e45a6c",
          "sha256": "dc9ab21784f482c3ea1614970e9e21d5cc3085217e69c2f70e21e3fadf38c319"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.8.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a9490dfafbb2aa608ca99d0d2e45a6c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 48913,
        "upload_time": "2022-12-24T20:11:49",
        "upload_time_iso_8601": "2022-12-24T20:11:49.173331Z",
        "url": "https://files.pythonhosted.org/packages/78/00/42fb267f8417233a306dcf359d7cfe0ea21c98fd6831b523efe52163f759/geneticalgorithm2-6.8.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86c676080f9808827b89b3546945830a20f3816c96791c7dadaa7e5dde6b634d",
          "md5": "ab1309643a7c74e0fe2c0456d8e3dbaa",
          "sha256": "cc0900cbc0a8ab2bcd7fb744fe19be3e3ecfd06a4c24f4783bccec8dfd245408"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.8.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ab1309643a7c74e0fe2c0456d8e3dbaa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 65938,
        "upload_time": "2022-12-24T20:11:51",
        "upload_time_iso_8601": "2022-12-24T20:11:51.550464Z",
        "url": "https://files.pythonhosted.org/packages/86/c6/76080f9808827b89b3546945830a20f3816c96791c7dadaa7e5dde6b634d/geneticalgorithm2-6.8.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "6.8.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "597b53c3c4354168553950fa26e6434923ee9c4d6ab6eb7480aab0b63b2a5b7a",
          "md5": "14f76092398b54ccc8302578e178bb97",
          "sha256": "2fb5cb497e4a15920ac5495cd3c660e727113d7fe5cdc094d90712fe4784d0d0"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.8.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "14f76092398b54ccc8302578e178bb97",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 51598,
        "upload_time": "2023-01-06T17:49:11",
        "upload_time_iso_8601": "2023-01-06T17:49:11.605771Z",
        "url": "https://files.pythonhosted.org/packages/59/7b/53c3c4354168553950fa26e6434923ee9c4d6ab6eb7480aab0b63b2a5b7a/geneticalgorithm2-6.8.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef4e304977c279ddee6b8b92c1cdf8145011379460a30615d008ccf7bfefd5d0",
          "md5": "5ce18f011312aec8ebf5a8d979adf499",
          "sha256": "4e7dda56717dd81bae93637e070b5811cd32fe1b8d687d15fc461ad6610f3117"
        },
        "downloads": -1,
        "filename": "geneticalgorithm2-6.8.5.tar.gz",
        "has_sig": false,
        "md5_digest": "5ce18f011312aec8ebf5a8d979adf499",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 71066,
        "upload_time": "2023-01-06T17:49:14",
        "upload_time_iso_8601": "2023-01-06T17:49:14.425375Z",
        "url": "https://files.pythonhosted.org/packages/ef/4e/304977c279ddee6b8b92c1cdf8145011379460a30615d008ccf7bfefd5d0/geneticalgorithm2-6.8.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "597b53c3c4354168553950fa26e6434923ee9c4d6ab6eb7480aab0b63b2a5b7a",
        "md5": "14f76092398b54ccc8302578e178bb97",
        "sha256": "2fb5cb497e4a15920ac5495cd3c660e727113d7fe5cdc094d90712fe4784d0d0"
      },
      "downloads": -1,
      "filename": "geneticalgorithm2-6.8.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "14f76092398b54ccc8302578e178bb97",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 51598,
      "upload_time": "2023-01-06T17:49:11",
      "upload_time_iso_8601": "2023-01-06T17:49:11.605771Z",
      "url": "https://files.pythonhosted.org/packages/59/7b/53c3c4354168553950fa26e6434923ee9c4d6ab6eb7480aab0b63b2a5b7a/geneticalgorithm2-6.8.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef4e304977c279ddee6b8b92c1cdf8145011379460a30615d008ccf7bfefd5d0",
        "md5": "5ce18f011312aec8ebf5a8d979adf499",
        "sha256": "4e7dda56717dd81bae93637e070b5811cd32fe1b8d687d15fc461ad6610f3117"
      },
      "downloads": -1,
      "filename": "geneticalgorithm2-6.8.5.tar.gz",
      "has_sig": false,
      "md5_digest": "5ce18f011312aec8ebf5a8d979adf499",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 71066,
      "upload_time": "2023-01-06T17:49:14",
      "upload_time_iso_8601": "2023-01-06T17:49:14.425375Z",
      "url": "https://files.pythonhosted.org/packages/ef/4e/304977c279ddee6b8b92c1cdf8145011379460a30615d008ccf7bfefd5d0/geneticalgorithm2-6.8.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}