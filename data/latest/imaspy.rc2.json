{
  "info": {
    "author": "Karel van de Plassche",
    "author_email": "k.l.vandeplassche@differ.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Topic :: Utilities"
    ],
    "description": "# IMASPy\n\nIMASPy is (yet another) pure-python library to handle arbitrarily nested\ndata structures. IMASPy is designed for, but not necessarily bound to,\ninteracting with Interface Data Structures (IDSs) as defined by the\nIntegrated Modelling & Analysis Suite (IMAS) Data Model.\n\nIt provides:\n* An easy-to-install and easy-to-get started package by\n   * Not requiring an IMAS installation\n  * Not strictly requiring matching a Data Dictionary (DD) version\n* An pythonic alternative to the IMAS Python High Level Interface (HLI)\n* Checking of correctness on assign time, instead of database write time\n* Dynamically created in-memory pre-filled data trees from DD XML specifications\n\n## A word of caution\nDevelopment of this package continues under ITER contract at the [ITER bitbucket](https://git.iter.org/projects/IMAS/repos/imaspy). If you are interested in this development, contact the IMAS team on the [IMAS user slack](https://imasusers.slack.com) or open a [JIRA issue](https://jira.iter.org)\n\n## Documentation\nDocumentation is autogenerated from the source using [Sphinx](http://sphinx-doc.org/)\nand can be found at the [gitlab pages](https://klimex.gitlab.io/imaspy/).\n\n## Getting Started\n\nClone the repository on your local machine. To set up SSH keys for\nGitLab, look here: https://docs.gitlab.com/ee/ssh/\n``` bash\ngit clone git@gitlab.com:klimex/imaspy.git # Using SSH keys\ngit clone https://gitlab.com/klimex/imaspy.git # Using username/password\n```\n\nInstall IMASPy in developer mode with all the optional components it can find:\n```bash\ncd imaspy\npip install --user -e .[all]\n```\n\nFor now, let's assume you have a Data Dictionary specification available,\nand managed to compile the AL.\n``` python\n# Initialize an empty IDS\nimport imaspy as imas\nidsdef_dir = <path to IDSDef.xml>\nidsdef = os.path.join(idsdef_dir, 'IDSDef.xml')\nshot = 1234\nrun_in = 0\nimas_entry = imas.ids(shot, run_in, xml_path=idsdef, verbosity=2)\n```\n\nWe end up with a `IDSRoot` instance that is pre-filled with all defaults and\ndata structures defined in the given DD XML. We could've not given `xml_path`\nto create an empty `IDSRoot`. No interaction with any LL-AL has happened yet!\n\nCreate a PulseFile. This creates an empty PulseFile with the specified backend.\nThis _will_ overwrite pulsefiles with the same path. This does need an access\nlayer, IMASPy does not provide one out of the box currently.\n``` python\nfrom imas_entry._libs.imasdef import *\ninput_user_or_path = <path to pulsefiles, for example your username>\ninput_database = <database, for example 'iter' >\nimas_entry.create_env_backend(input_user_or_path, input_database, '3', MDSPLUS_BACKEND)\n```\n\nNow that the pulse file exists, put some data in our Python structure:\n``` python\nids = imas_entry.equilibrium\nids.ids_properties.homogeneous_time = 'special' #Whoops! This crashes, wrong type!\nids.ids_properties.homogeneous_time = IDS_TIME_MODE_HETEROGENEOUS # This field needs to be filled for all valid IDSs\nids.time = [0.1, 0.2, 0.3]\nids.time += 2 # Let's offset this by 2\n```\n\nNo database interaction has happened yet. We need to explicitly send it to the\nMDSPLUS pulsefile:\n``` python\nids.put() # This removes the pulsefile, and rebuilds it with our in-memory structure!\n```\n\nAnd now we can interact with the regular IMAS tools, for example to plot the\nstructures with IMASViz.\n\n\n### Prerequisites\n\nIMASPy is a standalone python package with optional dependencies. All needed\npython packages can be found in `requirements.txt`, and should all be publicly\navailable. A simple `pip install` should take care of everything.\n\n#### Being IMAS DD compatible\n\nTo check IMAS DD compatible, one needs the IDS definition XML file. This file\ncan usually be found at `$IMAS_PREFIX/include/IDSDef.xml` on your IMAS-enabled\nsystem. Otherwise, they can be build from source from the\n[ITER IMAS Core Data Dictionary repository](https://git.iter.org/projects/IMAS/repos/data-dictionary/browse).\n\n#### Interacting with IMAS AL\n\nInteraction with the IMAS AL is provided by Cython and Python wrappers provided\nby the Python High Level Interface. As Cython code, it needs to be compiled on\nyour local system. First make sure you can access the\n[ITER IMAS Access Layer repository](https://git.iter.org/projects/IMAS/repos/access-layer/browse)\nusing SSH `ssh://git@git.iter.org/imas/access-layer.git`.\nA copy of this repository will be cloned into `src` during build.\n\nGet the prerequisites:\n``` bash\npip install numpy cython gitpython\n```\n\nInstall in verbose mode. After installing, you should have a `ual_x_x_x`\ndirectory in your root. If not, something went wrong. Be sure to browse\nthe verbose log or open a ticket.\n``` bash\npip install --user -e .[all] -v\n```\n\n## Where does IMASPy live in IMAS ecosystem?\nIMASPy tries to fill a slightly different niche than existing tools. It aims\nto be an _alternative_ to Python HLI instead of a wrapper. It tries to be\ndynamic instead of pre-generated. Is hopes to be extendable instead of\nwrappable.\n\nA small, biased, and wildly incomplete of some common IMAS tools, and\nwhere they live with respect to IMASPy.\n``` mermaid\nclassDiagram\n  MDSPLUS_DATABASE .. LL_AL : puts\n  MDSPLUS_DATABASE .. LL_AL : gets\n  MDSPLUS_DATABASE .. LL_HDC : puts\n  MDSPLUS_DATABASE .. LL_HDC : gets\n  IMAS DD <.. PythonHLI: build dep\n  IMAS DD <-- IMASPy:  runtime dep\n  LL_HDC <-- HDC_python_bindings : calls\n  LL_AL <-- Cython_HLI : calls\n  Python_helpers <-- IMASPy: calls\n  HDC_python_bindings <.. IMASPy: Could call\n\n  Cython_HLI <-- Python_helpers : calls\n  Python_helpers <-- Python HLI: calls\n\n  IMASDD <..  IMASviz_codegen: build dep\n  IMASviz_codegen <..  IMASviz: build dep\n\n  PythonHLI <-- OMAS: calls\n  OMAS <-- OMFIT: calls\n  OMFIT <-- IMASgo : calls\n\n  PythonHLI <-- pyAL: calls\n  PythonHLI <-- JINTRAC_WORKFLOWS : calls\n  pyAL <-- HnCD_WORKFLOWS : calls\n  PythonHLI <-- HnCD_WORKFLOWS : calls\n  PythonHLI <-- IMASviz: calls\n```\n\n## Contributing\n\nIMASPy is open for contributions! Please open a\n[fork](https://docs.gitlab.com/ee/user/project/repository/forking_workflow.html#creating-a-fork)\nand create a\n[merge request](https://docs.gitlab.com/ee/user/project/repository/forking_workflow.html#merging-upstream)\nor request developer access to one of the maintainers.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file\nfor details\n\n## Acknowledgments\n\nInspired and bootstrapped by existing tools, notably the IMAS Python HLI,\nIMAS Python workflows, and OMAS.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/klimex/imaspy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "imaspy",
    "package_url": "https://pypi.org/project/imaspy/",
    "platform": "",
    "project_url": "https://pypi.org/project/imaspy/",
    "project_urls": {
      "Homepage": "https://gitlab.com/klimex/imaspy"
    },
    "release_url": "https://pypi.org/project/imaspy/0.1.1/",
    "requires_dist": [
      "numpy (>=1.15.4)",
      "IPython (>=7.2.0)",
      "imas ; extra == 'all'",
      "pytest (>=5.4.1) ; extra == 'all'",
      "pytest-cov (>=0.6) ; extra == 'all'",
      "sphinx (>=3.2.1) ; extra == 'all'",
      "sphinx-rtd-theme (>=0.5) ; extra == 'all'",
      "recommonmark (>=0.6) ; extra == 'all'",
      "sphinx-autosummary-accessors (>=0.1.2) ; extra == 'all'",
      "imas ; extra == 'backends_al'",
      "sphinx (>=3.2.1) ; extra == 'docs'",
      "sphinx-rtd-theme (>=0.5) ; extra == 'docs'",
      "recommonmark (>=0.6) ; extra == 'docs'",
      "sphinx-autosummary-accessors (>=0.1.2) ; extra == 'docs'",
      "imas ; extra == 'examples'",
      "pytest (>=5.4.1) ; extra == 'test'",
      "pytest-cov (>=0.6) ; extra == 'test'"
    ],
    "requires_python": ">3.6",
    "summary": "Pythonic wrappers for the IMAS Access Layer",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8924949,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "460f5e22ecb840759a10a5d87ffc9f6389b3dd6e05895df08e89d70dcca1ca42",
          "md5": "8794e38f0419e870ab122ecac035c1c5",
          "sha256": "9a9af917126cca9da76fa3329f43ff50927a9b22b32701787a649e5870b17f3d"
        },
        "downloads": -1,
        "filename": "imaspy-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8794e38f0419e870ab122ecac035c1c5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.6",
        "size": 54950,
        "upload_time": "2020-12-17T15:20:33",
        "upload_time_iso_8601": "2020-12-17T15:20:33.537218Z",
        "url": "https://files.pythonhosted.org/packages/46/0f/5e22ecb840759a10a5d87ffc9f6389b3dd6e05895df08e89d70dcca1ca42/imaspy-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3def3896d606755a5218ff8f9953dbfb09973700f313ef2f9853886326439789",
          "md5": "406098ea97ca8a27a1f087ec8f5a3b92",
          "sha256": "63e0f0c13c033644ad27b90e602716caf5eacdd91f0abb9ca6357774cdec89b3"
        },
        "downloads": -1,
        "filename": "imaspy-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "406098ea97ca8a27a1f087ec8f5a3b92",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 76576,
        "upload_time": "2020-12-17T15:21:21",
        "upload_time_iso_8601": "2020-12-17T15:21:21.880639Z",
        "url": "https://files.pythonhosted.org/packages/3d/ef/3896d606755a5218ff8f9953dbfb09973700f313ef2f9853886326439789/imaspy-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1.dev7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a600dac54bf46bc4a654b67bc3bd94d82ba4c9041a6c721da32f600670e6dfc",
          "md5": "ea7fccef7c165cb2e3688696e43fd356",
          "sha256": "262522c062ce343cc3fd07bbe341b469ff9c3fd1cf58602b30bc9737ac6fcb52"
        },
        "downloads": -1,
        "filename": "imaspy-0.1.1.dev7.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "ea7fccef7c165cb2e3688696e43fd356",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 63545,
        "upload_time": "2020-12-17T15:16:31",
        "upload_time_iso_8601": "2020-12-17T15:16:31.020619Z",
        "url": "https://files.pythonhosted.org/packages/4a/60/0dac54bf46bc4a654b67bc3bd94d82ba4c9041a6c721da32f600670e6dfc/imaspy-0.1.1.dev7.linux-x86_64.tar.gz",
        "yanked": true,
        "yanked_reason": "Superseded by real 0.1.1"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a75037afe064dcc19cb8c12f5afc5db10a12fddf1a20b8166fa5d00a645e8d4d",
          "md5": "125fa36e03cad278b981c313418a9a98",
          "sha256": "940b4f180180ce6d58c878198d64b65a541f8c3a4debe6a92016c515b597ecb9"
        },
        "downloads": -1,
        "filename": "imaspy-0.1.1.dev7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "125fa36e03cad278b981c313418a9a98",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.6",
        "size": 55028,
        "upload_time": "2020-12-17T15:16:29",
        "upload_time_iso_8601": "2020-12-17T15:16:29.355383Z",
        "url": "https://files.pythonhosted.org/packages/a7/50/37afe064dcc19cb8c12f5afc5db10a12fddf1a20b8166fa5d00a645e8d4d/imaspy-0.1.1.dev7-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "Superseded by real 0.1.1"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "460f5e22ecb840759a10a5d87ffc9f6389b3dd6e05895df08e89d70dcca1ca42",
        "md5": "8794e38f0419e870ab122ecac035c1c5",
        "sha256": "9a9af917126cca9da76fa3329f43ff50927a9b22b32701787a649e5870b17f3d"
      },
      "downloads": -1,
      "filename": "imaspy-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8794e38f0419e870ab122ecac035c1c5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">3.6",
      "size": 54950,
      "upload_time": "2020-12-17T15:20:33",
      "upload_time_iso_8601": "2020-12-17T15:20:33.537218Z",
      "url": "https://files.pythonhosted.org/packages/46/0f/5e22ecb840759a10a5d87ffc9f6389b3dd6e05895df08e89d70dcca1ca42/imaspy-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3def3896d606755a5218ff8f9953dbfb09973700f313ef2f9853886326439789",
        "md5": "406098ea97ca8a27a1f087ec8f5a3b92",
        "sha256": "63e0f0c13c033644ad27b90e602716caf5eacdd91f0abb9ca6357774cdec89b3"
      },
      "downloads": -1,
      "filename": "imaspy-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "406098ea97ca8a27a1f087ec8f5a3b92",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">3.6",
      "size": 76576,
      "upload_time": "2020-12-17T15:21:21",
      "upload_time_iso_8601": "2020-12-17T15:21:21.880639Z",
      "url": "https://files.pythonhosted.org/packages/3d/ef/3896d606755a5218ff8f9953dbfb09973700f313ef2f9853886326439789/imaspy-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}