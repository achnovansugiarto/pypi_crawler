{
  "info": {
    "author": "Konstantin Stepanov",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "IPRPC\n=====\n\nБиблиотека для разбора json-rpc подобных запросов, их валидации и вызова методов.\n\nПример использования::\n\n    from iprpc import method, MethodExecutor\n\n    class Handler:\n        @method()\n        async def sum(self, a: int, b: int) -> int:\n            return a + b\n\n    executor = MethodExecutor(Handler())\n    res = await executor.call(b'{\"method\":\"sum\",\"params\":{\"a\":1,\"b\":2}}')\n    assert res.result == 3\n    assert res.error is None\n\n    res = await executor.call(b'{\"method\":\"sum\",\"params\":{\"a\":\"NaN\",\"b\":2}}')\n    assert res.result is None\n    assert res.error is not None\n    print(res.error)\n    >> InvalidArguments(Exception('value is not a valid integer in a',),)\n\niprpc.MethodExecutor видит только те методы, которые отмечены декоратором iprpc.method.\nЕсли требуется дать сложное имя метода(например использовать спецсимволы в названии),\nто в декораторную функцию необходимо передать аргумент name с названием метода::\n\n    class Handler:\n        @method(name=\"math.sum\")\n        async def sum(self, a: int, b: int) -> int:\n            return a + b\n\nПри этом вызвать метод передав в него имя метода соответствующее название функции\npython уже не получится. Т.е., в примере выше, вызов\n`{\"method\":\"sum\",\"params\":{\"a\":1,\"b\":2}`\nзавершится ошибкой.\nНужно^ `{\"method\":\"math.sum\",\"params\":{\"a\":1,\"b\":2}`\n\nСтруктура запроса\n-----------------\n\nПо-умолчанию структура запроса должна соответствовать следующей JSON схеме::\n\n    {\n        \"type\": \"object\",\n        \"required\": [ \"method\" ],\n        \"properties\": {\n            \"method\": {\n                \"type\": \"string\"\n            },\n            \"params\": {\n                \"type\": \"object\"\n            }\n        }\n    }\n\nСтруктура может быть изменена. Ключи объека запроса с именем метода или/и параметрами\nмогут иметь другие значения.\nДля этого нужно в MethodExecutor передать аргумент method_key или/и params_key::\n\n    executor = iprpc.MethodExecutor(TestHandler(), method_key='name', params_key='args')\n    await executor.call(b'{\"name\":\"sum\",\"args\":{\"a\":1,\"b\":2}}')\n\nТакже аргументы метода можно передавать в корне запроса. Для этого params_key должен\nбыть равен None::\n\n    executor = iprpc.MethodExecutor(TestHandler(), params_key=None)\n    await executor.call(b'{\"method\":\"sum\",\"a\":1,\"b\":2}')\n\n\nВалидация с помощью JSON Schema\n-------------------------------\n\nДля задания правил валидации нужно передать в декоратор список правил.\nПравила представляют собой словарь, где ключ - это имя аргумента, а значение - это\njson схема.\nПример::\n\n    class Handler:\n\n        @method(validators={\"a\": {\"type\": \"integer\"},\"b\": {\"type\": \"integer\"}})\n        async def sum(self, a, b):\n            return a + b\n\n\n\nВалиация с помощью pydantinc\n----------------------------\n\nВалидация происходит автоматически если есть аннотации типов в объявлении метода.\nНапример::\n\n    class Handler:\n        @method()\n        async def sum(self, a: int, b: int):\n            return a + b\n\nПри этом в запросе можно передавать значение в виде строки или другого совместимого\nтипа, значение будет автоматически преобразовано(если это возможно).\n\n\nСериализация результата\n-----------------------\n\nРезультат вызываемой функции будет преобразован к простым типам данных для\nдальнейшей сериализация в JSON.\nНапример, если метод возвращает объект datetime, то он будет преобразован в строку в iso формате.\nДля большей информации см. функцию `pydantic.json.pydantic_encoder`\n\nСложный пример::\n\n    from pydantic import BaseModel\n\n    class User(BaseModel):\n        id: int\n        name: str\n\n    class Handler:\n        @method()\n        async def rename(self, model: User, name: str) -> User:\n            model.name = name\n            return model\n\n    executor = MethodExecutor(Handler())\n    r = await executor.call(b'{\"method\":\"rename\",\"params\":{\"model\": {\"id\": 1, \"name\": \"Jhon Snow\"},\"name\": \"Jon Snow\"}}'\n    print(r.result)\n    >> {'id': 1, 'name': 'Jon Snow'}\n\n\nJSON-RPC 2.0\n------------\n\nПример::\n\n    from iprpc import method, JsonRpcError, JsonRpcExecutor\n\n    class Handler:\n        @method()\n        async def do_something(self, arg1: str):\n            return arg1\n\n    executor = JsonRpcExecutor(Handler())\n\n    request = (\n        b'{\"jsonrpc\": \"2.0\", \"id\": 1, '\n        b'\"method\": \"do_something\", \"params\": {\"arg1\": 123}}'\n    )\n    resp = await executor.execute(request)\n\n    print('<< %s' % resp)\n    << b'{\"jsonrpc\": \"2.0\", \"id\": 1, \"result\": \"123\"}'\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.app.ipl/inplat/iprpc/",
    "keywords": "iprpc",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "iprpc",
    "package_url": "https://pypi.org/project/iprpc/",
    "platform": "",
    "project_url": "https://pypi.org/project/iprpc/",
    "project_urls": {
      "Homepage": "https://gitlab.app.ipl/inplat/iprpc/"
    },
    "release_url": "https://pypi.org/project/iprpc/0.2.3/",
    "requires_dist": [
      "jsonschema (>=3.2.0,<4.0.0)",
      "strict-rfc3339 (>=0.7,<0.8)",
      "pydantic (>=1.4,<2.0)",
      "tinyrpc (>=1.0.4,<2.0.0)",
      "aioapp-http (>=0.0.1b6,<0.0.2); extra == \"aioapp\"",
      "aiohttp (>=3.4.4,<4.0.0); extra == \"aiohttp\""
    ],
    "requires_python": ">=3.6,<4.0",
    "summary": "InPlat JSON RPC library",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8428739,
  "releases": {
    "0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "310b157f9f3b11c212ac054a435d68a6eb1d5d5eb26c05d45f6e4cf2bf00d45a",
          "md5": "01127a7cc0df9a0db80828365f3df538",
          "sha256": "6cc9848dd86747f8d4248bd6ae043958d1c8be5088902ebd8384b8da41ff75dc"
        },
        "downloads": -1,
        "filename": "iprpc-0-py3.6.egg",
        "has_sig": false,
        "md5_digest": "01127a7cc0df9a0db80828365f3df538",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "requires_python": "~=3.6",
        "size": 20085,
        "upload_time": "2020-04-10T12:34:07",
        "upload_time_iso_8601": "2020-04-10T12:34:07.793850Z",
        "url": "https://files.pythonhosted.org/packages/31/0b/157f9f3b11c212ac054a435d68a6eb1d5d5eb26c05d45f6e4cf2bf00d45a/iprpc-0-py3.6.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59471ddf75df2a917ef3d425429f684c0de899746ae918ca8b802c78c7397e20",
          "md5": "ebaad7af23d62f48a5f2fcd594a9f3c3",
          "sha256": "eae77163db9b3a714038e1cc52fc5c23d145e38fe558076c25b47677ac3b0eac"
        },
        "downloads": -1,
        "filename": "iprpc-0.tar.gz",
        "has_sig": false,
        "md5_digest": "ebaad7af23d62f48a5f2fcd594a9f3c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 12697,
        "upload_time": "2020-04-10T12:34:10",
        "upload_time_iso_8601": "2020-04-10T12:34:10.157206Z",
        "url": "https://files.pythonhosted.org/packages/59/47/1ddf75df2a917ef3d425429f684c0de899746ae918ca8b802c78c7397e20/iprpc-0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "467523f727dcdb0de5051f2f81dcf39911169e130ffae5ce8e5180c565759fb5",
          "md5": "964b093918fc92252441f9264d6463f7",
          "sha256": "1b0350ad6506a9e0fddefccd051762b90458b23dca8406299f0224634ce611ad"
        },
        "downloads": -1,
        "filename": "iprpc-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "964b093918fc92252441f9264d6463f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 14879,
        "upload_time": "2020-04-10T13:51:40",
        "upload_time_iso_8601": "2020-04-10T13:51:40.624526Z",
        "url": "https://files.pythonhosted.org/packages/46/75/23f727dcdb0de5051f2f81dcf39911169e130ffae5ce8e5180c565759fb5/iprpc-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26384a05ee9011a81ced410d8a324e3628648ec001a766c40355aec437209287",
          "md5": "32acffb77a0c078266e9e8bc76d3a9b6",
          "sha256": "6d902fb64b05a3d7fbfc36d324b07ef1b4b3ac1aba15161e5e7b190279c49e73"
        },
        "downloads": -1,
        "filename": "iprpc-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32acffb77a0c078266e9e8bc76d3a9b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 9118,
        "upload_time": "2020-09-14T16:32:31",
        "upload_time_iso_8601": "2020-09-14T16:32:31.282778Z",
        "url": "https://files.pythonhosted.org/packages/26/38/4a05ee9011a81ced410d8a324e3628648ec001a766c40355aec437209287/iprpc-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48599b423a3f687096b610bd457d9c488e63713a058cb6301d0f67f439255c7b",
          "md5": "c7a79cde498e83ad971bb325997bc1aa",
          "sha256": "c430dcfe5e179bd53e4a742b553e9e2d08af893be653170b50d859e930729556"
        },
        "downloads": -1,
        "filename": "iprpc-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c7a79cde498e83ad971bb325997bc1aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 10657,
        "upload_time": "2020-09-14T16:32:32",
        "upload_time_iso_8601": "2020-09-14T16:32:32.514780Z",
        "url": "https://files.pythonhosted.org/packages/48/59/9b423a3f687096b610bd457d9c488e63713a058cb6301d0f67f439255c7b/iprpc-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c11003d8ec8619fc13f3cc466010019a8ad1c1e66d6157317fa20bcad6139005",
          "md5": "451fdfab275d748e245caa2c87f92c2f",
          "sha256": "a5b561f6c1b2474da1d9a370e79a584679cd4ee8ce764ac84d4cc8e27d8f9e1a"
        },
        "downloads": -1,
        "filename": "iprpc-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "451fdfab275d748e245caa2c87f92c2f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 9115,
        "upload_time": "2020-10-16T15:03:24",
        "upload_time_iso_8601": "2020-10-16T15:03:24.529032Z",
        "url": "https://files.pythonhosted.org/packages/c1/10/03d8ec8619fc13f3cc466010019a8ad1c1e66d6157317fa20bcad6139005/iprpc-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "226ede3fbddc9cf1c9a397aa66486c41f90c58575c23b0e4885d9844f842e178",
          "md5": "b993f19e12af03c35c1049c1e39cc309",
          "sha256": "00a36628b6069a8d46c61394fa8bccde78a23ac0f99bc38b285cc2040f4bd7b1"
        },
        "downloads": -1,
        "filename": "iprpc-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b993f19e12af03c35c1049c1e39cc309",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 10663,
        "upload_time": "2020-10-16T15:03:25",
        "upload_time_iso_8601": "2020-10-16T15:03:25.913276Z",
        "url": "https://files.pythonhosted.org/packages/22/6e/de3fbddc9cf1c9a397aa66486c41f90c58575c23b0e4885d9844f842e178/iprpc-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c11003d8ec8619fc13f3cc466010019a8ad1c1e66d6157317fa20bcad6139005",
        "md5": "451fdfab275d748e245caa2c87f92c2f",
        "sha256": "a5b561f6c1b2474da1d9a370e79a584679cd4ee8ce764ac84d4cc8e27d8f9e1a"
      },
      "downloads": -1,
      "filename": "iprpc-0.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "451fdfab275d748e245caa2c87f92c2f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4.0",
      "size": 9115,
      "upload_time": "2020-10-16T15:03:24",
      "upload_time_iso_8601": "2020-10-16T15:03:24.529032Z",
      "url": "https://files.pythonhosted.org/packages/c1/10/03d8ec8619fc13f3cc466010019a8ad1c1e66d6157317fa20bcad6139005/iprpc-0.2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "226ede3fbddc9cf1c9a397aa66486c41f90c58575c23b0e4885d9844f842e178",
        "md5": "b993f19e12af03c35c1049c1e39cc309",
        "sha256": "00a36628b6069a8d46c61394fa8bccde78a23ac0f99bc38b285cc2040f4bd7b1"
      },
      "downloads": -1,
      "filename": "iprpc-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "b993f19e12af03c35c1049c1e39cc309",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4.0",
      "size": 10663,
      "upload_time": "2020-10-16T15:03:25",
      "upload_time_iso_8601": "2020-10-16T15:03:25.913276Z",
      "url": "https://files.pythonhosted.org/packages/22/6e/de3fbddc9cf1c9a397aa66486c41f90c58575c23b0e4885d9844f842e178/iprpc-0.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}