{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved",
      "Operating System :: MacOS",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development"
    ],
    "description": "[![Codecov](https://codecov.io/gh/mne-tools/mne-hfo/branch/master/graph/badge.svg)](https://codecov.io/gh/adam2392/mne-hfo)\n![.github/workflows/main.yml](https://github.com/mne-tools/mne-hfo/workflows/.github/workflows/main.yml/badge.svg)\n[![CircleCI](https://circleci.com/gh/mne-tools/mne-hfo.svg?style=svg)](https://circleci.com/gh/mne-tools/mne-hfo)\n![License](https://img.shields.io/pypi/l/mne-bids)\n[![Maintainability](https://api.codeclimate.com/v1/badges/fa5d3f4435c197409e56/maintainability)](https://codeclimate.com/github/mne-tools/mne-hfo/maintainability)\n[![PEP8](https://img.shields.io/badge/code%20style-pep8-orange.svg)](https://www.python.org/dev/peps/pep-0008/)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mne-hfo)\n[![Documentation Status](https://readthedocs.org/projects/mne-hfo/badge/?version=latest)](https://mne-hfo.readthedocs.io/en/latest/?badge=latest)\n[![PyPI Download count](https://pepy.tech/badge/mne-hfo)](https://pepy.tech/project/mne-hfo)\n\nMNE-HFO\n=======\n\nMNE-HFO is a Python package that computes estimates of high-frequency oscillations in iEEG data stored in\nthe [BIDS-compatible](https://bids.neuroimaging.io/) datasets with the help of\n[MNE-Python](https://mne.tools/stable/index.html).\n\nNOTE: This is currently in ALPHA stage, and we are looking for contributors. Please get in touch via Issues tab if you\nwould like to contribute.\n\nHigh frequency oscillations in epilepsy\n---------------------------------------\nA few notes that are worthy of reading. The initial papers on HFOs (Staba et al.)\nactually only observed HFOs on Hippocampus. In addition, the papers cited that are implemented all selected data before\ndeveloping their algorithm (i.e. selected channels with HFOs).\n\nIt is also noted that the Hilbert detector was used to show HFOs exist in normal brain function, possibly unassociated\nwith the epileptogenic zone.\n\nWhy?\n----\nCurrently HFO detection and algorithms are segmented in Matlab files, which are sometimes not open-source, or possibly\ndifficult to use. In addition, validation of HFO algorithms depend on i) sharing the algorithms ii) sharing the results\nwith others in a readable format and iii) comparing algorithms against each other on the same dataset.\n\nMNE-HFO links BIDS, MNE-Python and iEEG HFO event detection with the goal to make HFO detection more transparent, more\nrobust, and facilitate data and code sharing with co-workers and collaborators.\n\nInstallation\n------------\nInstallation can be done via a python virtual environment, using ``pipenv``. The package is hosted on ``pypi``, which\ncan be installed via pip, or pipenv. For additional installation instructions, see [CONTRIBUTING.md](https://github.com/mne-tools/mne-hfo/blob/master/CONTRIBUTING.md) document.\n\n    pip install mne-hfo\n\nor\n\n    pipenv install mne-hfo\n\nNote: Installation has been tested on MacOSX and Ubuntu, but should \nprobably work on Windows too.\n\nDocumentation and Usage\n-----------------------\n\nThe documentation can be found under the following links:\n\n- for the [stable release](https://mne.tools/mne-hfo/)\n- for the [latest (development) version](https://mne.tools/mne-hfo/dev/index.html)\n\nNote: Functionality has been tested on MacOSX and Ubuntu.\n\nBasic Working Example\n---------------------\n\nA basic working example is listed here, assuming one has loaded in a mne-Python ``Raw`` object already.\n\n    from mne_hfo import RMSDetector\n    detector = RMSDetector()\n\n    # assume user has loaded in raw iEEG data using mne-python\n    detector.fit(raw)\n\n    # get the HFO events as an *events.tsv style dataframe\n    hfo_event_df = detector.hfo_event_df\n\n    # get the HFO events as an *events.tsv style dataframe\n    hfo_annot_df = detector.hfo_df\n\n\nAll output to ``*events.tsv`` BIDS-compliant files will look like the following:\n\n| onset      | duration | sample | trial_type |\n| ---------- | -------- | ------ | ---------- |\n| 1     | 3    | 1000   | hfo_A2-A1  |\n\nwhich will imply that there is an HFO detected using a bipolar referencing at channel ``A2-A1``\nat 1 second with duration of 3 seconds. The onset sample occurs at sample 1000 (thus ``sfreq`` is 1000 Hz). If a\nmonopolar referencing is used, then the ``trial_type`` might be ``hfo_A2`` to imply that an HFO was detected at\nchannel ``A2``.\n\nAlternatively, one can output the data in the form of a derivatives ``Annotations`` \nDataFrame, which is the RECOMMENDED way. Outputting data according to BIDS Extension Proposal 21, instead would result in \nan ``*annotations.tsv`` file. \n\n| onset      | duration | label | channels |\n| ---------- | -------- | ------ | ---------- |\n| 1     |  3  | hfo  | A2-A1 | \n\nwith a corresponding ``*annotations.json`` file.\n\n    {\n        'IntendedFor': sub-01/ses-01/eeg/sub-01_ses-01_task-01_eeg.<ext>,\n        'Description': 'Automatic annotations of HFO events using mne-hfo.',\n    }\n\nOptimizing Hyperparameters\n--------------------------\n\nIn all ``MNE-HFO`` HFO detectors, we assume that there are hyper-parameters \nspecified by the proposed algorithm. These hyper-parameters can be tuned automatically \nusing the ``scikit-learn`` API for [GridSearchCV](https://scikit-learn.org/stable/modules/grid_search.html#grid-search).\n\n\n    from sklearn.metrics import make_scorer\n    from sklearn.model_selection import GridSearchCV\n    from mne_hfo.score import accuracy\n    from mne_hfo.sklearn import make_Xy_sklearn, DisabledCV\n\n    # define hyperparameter grid to search over\n    parameters = {'threshold': [1, 2, 3], 'win_size': [50, 100, 250]}\n\n    # define HFO detector\n    detector = LineLengthDetector()\n\n    # define a scoring function \n    scorer = make_scorer(accuracy)\n\n    # we don't use cross-validation since the\n    # HFO algorithm is deterministic\n    cv = DisabledCV()\n\n    # instantiate the GridSearch object\n    gs = GridSearchCV(detector, param_grid=parameters, scoring=scorer,\n                      cv=cv, refit=False, verbose=True)\n\n    # load in raw data\n    # raw = <load_in_raw_data>\n\n    # load in HFO annotations\n    # annot_df = <load_in_annotations>\n\n    # make sklearn compatible\n    raw_df, y = make_Xy_sklearn(raw, annot_df)\n\n    # run hyperparameter tuning based on accuracy score\n    gs.fit(raw_df, y, groups=None)\n\n    # show the results\n    print(gs.cv_results_[\"mean_test_score\"])\n\nIn the above example, to load in raw data, one can use [``mne-bids``](https://github.com/mne-tools/mne-bids)\nand to load in the annotations dataframe, one can check out our API \nfor different ways of doing so.\n\nCiting\n------\nFor testing and demo purposes, we use the dataset in [1]. If you use the demo/testing dataset, please cite that paper.\nIf you use ``mne-hfo`` itself in your research, please cite the paper (TBD).\n\n    Adam Li. (2021, February 1). MNE-HFO: An open-source Python implementation of HFO detection algorithms (Version 0.0.1). Zenodo. http://doi.org/10.5281/zenodo.4485036\n\nHistory and state of development\n--------------------------------\n\nThe initial code was adapted and taken from: https://gitlab.com/icrc-bme/epycom\nto turn into a sklearn-compatible API that works with ``mne-python``. Additional algorithms \nand functionality were added.\n\nReferences\n----------\n[1] Fedele T, Burnos S, Boran E, KrayenbÃ¼hl N, Hilfiker P, Grunwald T, Sarnthein J. Resection of high frequency\noscillations predicts seizure outcome in the individual patient. Scientific Reports. 2017;7(1):13836.\nhttps://www.nature.com/articles/s41598-017-13064-1\ndoi:10.1038/s41598-017-13064-1\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/mne-tools/mne-hfo.git",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://mne.tools/mne-hfo/stable/index.html",
    "keywords": "",
    "license": "BSD (3-clause)",
    "maintainer": "Adam Li",
    "maintainer_email": "adam2392@gmail.com",
    "name": "mne-hfo",
    "package_url": "https://pypi.org/project/mne-hfo/",
    "platform": "any",
    "project_url": "https://pypi.org/project/mne-hfo/",
    "project_urls": {
      "Bug Reports": "https://github.com/mne-tools/mne-hfo/issues",
      "Documentation": "https://mne.tools/mne-hfo/stable/index.html",
      "Download": "https://github.com/mne-tools/mne-hfo.git",
      "Homepage": "https://mne.tools/mne-hfo/stable/index.html",
      "Source": "https://github.com/mne-tools/mne-hfo"
    },
    "release_url": "https://pypi.org/project/mne-hfo/0.2/",
    "requires_dist": [
      "mne (>=0.23)",
      "mne-bids (>=0.7)",
      "numpy (>=1.14)",
      "scipy (>=0.18.1)",
      "scikit-learn (>=0.23)",
      "tqdm",
      "pandas (>=0.23.4)",
      "joblib (>=1.0.0) ; extra == 'full'",
      "matplotlib ; extra == 'full'"
    ],
    "requires_python": "~=3.6",
    "summary": "MNE-HFO: Facilitates estimation/detection of high-frequency oscillationevents on iEEG data with MNE-Python, MNE-BIDS and scikit-learn.",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10592073,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3d8263cecaa7bfa3b2bff882f21ddde8cb9d0811f136a743c89de7ef0b8ac24",
          "md5": "9fd10344dfa37372c3d9858235ab4df5",
          "sha256": "b7c29fd6c4fe428fd075cde86950c7aa6a7bab8bfe441f536091504694a38630"
        },
        "downloads": -1,
        "filename": "mne_hfo-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9fd10344dfa37372c3d9858235ab4df5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 47808,
        "upload_time": "2021-02-25T21:05:45",
        "upload_time_iso_8601": "2021-02-25T21:05:45.263380Z",
        "url": "https://files.pythonhosted.org/packages/c3/d8/263cecaa7bfa3b2bff882f21ddde8cb9d0811f136a743c89de7ef0b8ac24/mne_hfo-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b05313d3d5fcd9bb316c31da408ed6f06548d483f8fff349b165e1060f70a5d",
          "md5": "cebd92a315243db8479e3366ba61bac1",
          "sha256": "943f3bbf4e0dbca87a7779058e0d659ed25fdd8546c93da5fc7efd3b89e964f7"
        },
        "downloads": -1,
        "filename": "mne-hfo-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cebd92a315243db8479e3366ba61bac1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 1914343,
        "upload_time": "2021-02-25T21:05:49",
        "upload_time_iso_8601": "2021-02-25T21:05:49.299636Z",
        "url": "https://files.pythonhosted.org/packages/2b/05/313d3d5fcd9bb316c31da408ed6f06548d483f8fff349b165e1060f70a5d/mne-hfo-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "020334cbd88aaea165c1605f5ab2bfad3fac6b306767ef46fa7f559aa7133b5b",
          "md5": "47ea8cf67680c0b63ac3badb93f0704d",
          "sha256": "757dae7b2a834706b8c2695595eb8628b304ff71262c16a51957c556630623b4"
        },
        "downloads": -1,
        "filename": "mne_hfo-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47ea8cf67680c0b63ac3badb93f0704d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 52746,
        "upload_time": "2021-06-08T18:00:46",
        "upload_time_iso_8601": "2021-06-08T18:00:46.681012Z",
        "url": "https://files.pythonhosted.org/packages/02/03/34cbd88aaea165c1605f5ab2bfad3fac6b306767ef46fa7f559aa7133b5b/mne_hfo-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0363bbff215f84449bc0a7f4436ca9411b3c521ad827bf727c318505e8343b9c",
          "md5": "2d5bf5ebe5f7e95ff53fdf5d1e0a13e1",
          "sha256": "4f48854c43456f9383a386f8efda292b49801a89c2c4592ffdd126830de65a61"
        },
        "downloads": -1,
        "filename": "mne-hfo-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2d5bf5ebe5f7e95ff53fdf5d1e0a13e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 1919609,
        "upload_time": "2021-06-08T18:00:49",
        "upload_time_iso_8601": "2021-06-08T18:00:49.574808Z",
        "url": "https://files.pythonhosted.org/packages/03/63/bbff215f84449bc0a7f4436ca9411b3c521ad827bf727c318505e8343b9c/mne-hfo-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "020334cbd88aaea165c1605f5ab2bfad3fac6b306767ef46fa7f559aa7133b5b",
        "md5": "47ea8cf67680c0b63ac3badb93f0704d",
        "sha256": "757dae7b2a834706b8c2695595eb8628b304ff71262c16a51957c556630623b4"
      },
      "downloads": -1,
      "filename": "mne_hfo-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "47ea8cf67680c0b63ac3badb93f0704d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.6",
      "size": 52746,
      "upload_time": "2021-06-08T18:00:46",
      "upload_time_iso_8601": "2021-06-08T18:00:46.681012Z",
      "url": "https://files.pythonhosted.org/packages/02/03/34cbd88aaea165c1605f5ab2bfad3fac6b306767ef46fa7f559aa7133b5b/mne_hfo-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0363bbff215f84449bc0a7f4436ca9411b3c521ad827bf727c318505e8343b9c",
        "md5": "2d5bf5ebe5f7e95ff53fdf5d1e0a13e1",
        "sha256": "4f48854c43456f9383a386f8efda292b49801a89c2c4592ffdd126830de65a61"
      },
      "downloads": -1,
      "filename": "mne-hfo-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "2d5bf5ebe5f7e95ff53fdf5d1e0a13e1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.6",
      "size": 1919609,
      "upload_time": "2021-06-08T18:00:49",
      "upload_time_iso_8601": "2021-06-08T18:00:49.574808Z",
      "url": "https://files.pythonhosted.org/packages/03/63/bbff215f84449bc0a7f4436ca9411b3c521ad827bf727c318505e8343b9c/mne-hfo-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}