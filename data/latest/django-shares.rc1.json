{
  "info": {
    "author": "Troy Grosfield",
    "author_email": "UNKNOWN",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "NOTE: This is not stable yet and will likely change!  Please don't use in production until the 1.0 release.\n\n.. |travisci| image:: https://travis-ci.org/InfoAgeTech/django-sharing.png?branch=master\n  :target: http://travis-ci.org/InfoAgeTech/django-sharing\n.. |coveralls| image:: https://coveralls.io/repos/InfoAgeTech/django-sharing/badge.png\n  :target: https://coveralls.io/r/InfoAgeTech/django-sharing\n\n=====================================\ndjango-sharing |travisci| |coveralls|\n=====================================\ndjango-sharing is a python sharing module written for django that handles object sharing.  Don't clone.  Not stable.\n\nExample\n=======\nBasic example::\n\n    from django.contrib.contenttypes import generic\n    from django.db import models\n    from django_sharing.models import Share\n\n    class Car(models.Model):\n        \"\"\"A model that will be shared.\"\"\"\n        # Add the reverse relation since the shared object is a generic object.\n        shares = generic.GenericRelation(Share)\n\n\nExtending the sharing model::\n\n    from django.contrib.contenttypes import generic\n    from django.db import models\n    from django_sharing.models import AbstractShare\n\n    class CarShare(AbstractShare):\n        \"\"\"Extending the share model to add additional attributes.\"\"\"\n        day = models.CharField(max_length=50)\n\n    class Car(models.Model):\n        \"\"\"A model that will be shared.\"\"\"\n        # Add the reverse relation since the shared object is a generic object.\n        shares = generic.GenericRelation(CarShare)\n\n\nRunning Tests\n=============\nFrom the tests directory where the manage.py file is, run the following command::\n\n    python manage.py test",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/InfoAgeTech/django-sharing",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-shares",
    "package_url": "https://pypi.org/project/django-shares/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-shares/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/InfoAgeTech/django-sharing"
    },
    "release_url": "https://pypi.org/project/django-shares/0.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Sharing for django",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 982088,
  "releases": {
    "0.0.1": []
  },
  "urls": [],
  "vulnerabilities": []
}