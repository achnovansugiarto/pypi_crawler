{
  "info": {
    "author": "K. KOBAYASHI",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# crank\n\nNon-parallel voice conversion based on vector-quantized variational autoencoder with adversarial learning\n\n## Setup\n\n- Install Python dependency\n\n```sh\n$ git clone https://github.com/k2kobayashi/crank.git\n$ cd crank/tools\n$ make\n```\n\n- install dependency for mosnet\n\n```sh\n$ sudo apt install ffmpeg   # mosnet dependency\n```\n\n## Recipes\n- English\n    - VCC2020\n    - VCC2018 (Thanks to [@unilight](https://github.com/unilight))\n- Japanese\n    - jsv_ver1\n\n### Conversion samples\nYou can access several converted audio samples of VCC 2018 dataset in the [URL](https://k2kobayashi.github.io/crankSamples/).\n- [vcc2020v1](https://drive.google.com/file/d/1uInvCwggpBYmpplYxuIOidvJkPmav8kE/view?usp=sharing)\n- [vcc2018v1](https://drive.google.com/file/d/1-Z_Y9pahPQcKR0rqdhu4elI6Hz686qX6/view?usp=sharing)\n\n## Run VCC2020 recipe\n\ncrank has prepared recipe for Voice Conversion Challenge 2020.\nIn crank recipe, there are 7 stages to implement non-parallel voice conversion.\n\n- stage 0\n    - download dataset\n- stage 1\n    - initialization\n        - generate scp files and figures to be determine speaker-dependent parameters\n- stage 2\n    - feature extraction\n        - extract mlfb and mcep features\n- stage 3\n    - training\n- stage 4\n    - reconstuction\n        - generate reconstructed feature for fine-tuning of neural vocoder\n- stage 5\n    - evaluation\n        - convert evaluation waveform\n- stage 6\n    - synthesis\n        - synthesis waveform by pre-trained [ParallelWaveGAN](https://github.com/kan-bayashi/ParallelWaveGAN)\n        - synthesis waveform by GriffinLim\n- stage 7\n    - objective evalution\n        - mel-cepstrum distortion\n        - mosnet\n\n### Put dataset to downloads\n\nNote that dataset is only released for the participants (2020/05/26).\n```\n$ cd egs/vaevc/vcc2020v1\n$ mkdir downloads && cd downloads\n$ mv <path_to_zip>/vcc2020_{training,evaluation}.zip downloads\n$ unzip vcc2020_training.zip\n$ unzip vcc2020_evaluation.zip\n```\n\n### Run feature extraction and model training\n\nBecause the challenge defines its training and evaluation set, we have initially put configuration files.\nSo, you need to run from 2nd stage.\n\n```sh\n$ ./run.sh --n_jobs 10 --stage 2 --stop_stage 5\n```\n\nwhere the ```n_jobs``` indicates the number of CPU cores used in the training.\n\n\n## Configuration\nConfigurations are defined in ```conf/mlfb_vqvae.yml```.\nFollowings are explanation of representative parameters.\n\n- feature\n\nWhen you create your own recipe, be carefull to set parameters for feature extraction such as ```fs```, ```fftl```, ```hop_size```, ```framems```, ```shiftms```, and ```mcep_alpha```. These parameters depend on sampling frequency.\n\n- feat_type\n\nYou can choose ```feat_type``` either ```mlfb``` or ```mcep```.\nIf you choose ```mlfb```, the converted waveforms are generated by either GllifinLim vocoder or ParallelWaveGAN vocoder.\nIf you choose ```mcep```, the converted waveforms are generated by world vocoder (i.e., excitation generation and MLSA filtering).\n\n- trainer_type\n\nWe support training with ```vqvae```, ```lsgan```, ```cyclegan```, and ```stargan``` using same generator network.\n  - ```vqvae```: default vqvae setting\n  - ```lsgan```: vqvae with adversarial learning\n  - ```cyclegan```: vqvae with adevesarial learning and cyclic constraints\n  - ```stargan```: vqvae with adevesarial learning similar to cyclegan\n\n## Create your recipe\n\n### Copy recipe template\n\nPlease copy template directory to start creation of your recipe.\n\n```sh\n$ cp -r egs/vaevc/template egs/vaevc/<new_recipe>\n$ cd egs/vaevc/<new_recipe>\n```\n\n### Put .wav files\n\nYou need to put wav files appropriate directory.\nYou can choose either modifying ```download.sh``` or putting wav files.\nIn either case, the wav files should be located in each speaker like following\n```<new_recipe>/downloads/wav/{spkr1, spkr2, ..., spkr3}/*.wav```.\n\nIf you modify ```downaload.sh```,\n\n```sh\n$ vim local/download.sh\n```\n\nIf you put wav files,\n\n```sh\n$ mkdir downloads\n$ mv <path_to_your_wav_directory> downloads/wav\n$ touch downloads/.done\n```\n\n### Run initialization\n\nThe initialization process generates kaldi-like scp files.\n\n```sh\n$ ./run.sh --stage 0 --stop_stage 1\n```\n\nThen you modify speaker-dependent parameters in ```conf/spkr.yml``` using generated figures.\nPage 20~22 in [slide](https://www.slideshare.net/NU_I_TODALAB/hands-on-voice-conversion) help you how to set these parameters.\n\n\n### Run feature extraction, train, reconstruction, and evaluation\n\nAfter preparing configuration, you run it.\n\n```sh\n$ ./run.sh --stage 2 --stop_stage 7\n```\n\n## Citation\n\nPlease cite this paper when you use crank.\n\n```\nK. Kobayashi, W-C. Huang, Y-C. Wu, P.L. Tobing, T. Hayashi, T. Toda,\n\"crank: an open-source software for nonparallel voice conversion based on vector-quantized variational autoencoder\",\nProc. ICASSP, 2021. (accepted)\n```\n\n## Achknowledgements\n\nThank you [@kan-bayashi](https://github.com/kan-bayashi) for lots of contributions and encouragement helps.\n\n## Who we are\n\n- Kazuhiro Kobayashi [@k2kobayashi](https://github.com/k2kobayashi) [maintainer, design and development]\n\n- Wen-Chin Huang [@unilight](https://github.com/unilight) [maintainer, design and development]\n\n- [Tomoki Toda](https://sites.google.com/site/tomokitoda/) [advisor]\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/k2kobayashi/crank",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "crank-vc",
    "package_url": "https://pypi.org/project/crank-vc/",
    "platform": "",
    "project_url": "https://pypi.org/project/crank-vc/",
    "project_urls": {
      "Homepage": "https://github.com/k2kobayashi/crank"
    },
    "release_url": "https://pypi.org/project/crank-vc/0.4.1/",
    "requires_dist": [
      "torch (==1.7.1)",
      "torchvision (==0.8.2)",
      "pillow",
      "numpy",
      "scipy",
      "joblib",
      "matplotlib",
      "sprocket-vc",
      "parallel-wavegan",
      "tensorboardX",
      "torch-optimizer",
      "pytorch-lamb",
      "gdown",
      "museval",
      "typeguard"
    ],
    "requires_python": "",
    "summary": "Non-parallel Voice Conversion called crank",
    "version": "0.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10495474,
  "releases": {
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ecdfdb17e908815f940b4f7f2cf57a51b9eb0e053c64f0d2e71df9922387b81",
          "md5": "a6a2a7ea1d40e39af5b40ee6db283dcc",
          "sha256": "f6858e183d354e03c054de1fb72790c29c4e7120a5b0679a058548bb40b04471"
        },
        "downloads": -1,
        "filename": "crank_vc-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6a2a7ea1d40e39af5b40ee6db283dcc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4184,
        "upload_time": "2021-05-28T04:08:36",
        "upload_time_iso_8601": "2021-05-28T04:08:36.084805Z",
        "url": "https://files.pythonhosted.org/packages/6e/cd/fdb17e908815f940b4f7f2cf57a51b9eb0e053c64f0d2e71df9922387b81/crank_vc-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6eac109a3f33d3f2e11e671c58f9b002a8f1a2bdc6edce6efc44eddb7accd483",
          "md5": "217b9e7a619152444073bcf64b4bd0f6",
          "sha256": "fd1e299b365b06a79c8e49629a5e09427777b5ab767126d3da6d4536937e338f"
        },
        "downloads": -1,
        "filename": "crank-vc-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "217b9e7a619152444073bcf64b4bd0f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8106,
        "upload_time": "2021-05-28T04:08:37",
        "upload_time_iso_8601": "2021-05-28T04:08:37.578103Z",
        "url": "https://files.pythonhosted.org/packages/6e/ac/109a3f33d3f2e11e671c58f9b002a8f1a2bdc6edce6efc44eddb7accd483/crank-vc-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6ecdfdb17e908815f940b4f7f2cf57a51b9eb0e053c64f0d2e71df9922387b81",
        "md5": "a6a2a7ea1d40e39af5b40ee6db283dcc",
        "sha256": "f6858e183d354e03c054de1fb72790c29c4e7120a5b0679a058548bb40b04471"
      },
      "downloads": -1,
      "filename": "crank_vc-0.4.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a6a2a7ea1d40e39af5b40ee6db283dcc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4184,
      "upload_time": "2021-05-28T04:08:36",
      "upload_time_iso_8601": "2021-05-28T04:08:36.084805Z",
      "url": "https://files.pythonhosted.org/packages/6e/cd/fdb17e908815f940b4f7f2cf57a51b9eb0e053c64f0d2e71df9922387b81/crank_vc-0.4.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6eac109a3f33d3f2e11e671c58f9b002a8f1a2bdc6edce6efc44eddb7accd483",
        "md5": "217b9e7a619152444073bcf64b4bd0f6",
        "sha256": "fd1e299b365b06a79c8e49629a5e09427777b5ab767126d3da6d4536937e338f"
      },
      "downloads": -1,
      "filename": "crank-vc-0.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "217b9e7a619152444073bcf64b4bd0f6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8106,
      "upload_time": "2021-05-28T04:08:37",
      "upload_time_iso_8601": "2021-05-28T04:08:37.578103Z",
      "url": "https://files.pythonhosted.org/packages/6e/ac/109a3f33d3f2e11e671c58f9b002a8f1a2bdc6edce6efc44eddb7accd483/crank-vc-0.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}