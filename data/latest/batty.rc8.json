{
  "info": {
    "author": "Philipp Eller",
    "author_email": "peller.phys@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<h1> <img style=\"height:5em;\" alt=\"batty\" src=\"https://raw.githubusercontent.com/philippeller/batty/main/batty_logo.svg\"/> </h1> \n\n# BAT to Python (batty)\n\nA small python interface to the Bayesian Analysis Toolkit (BAT.jl) https://github.com/bat/BAT.jl\n\n\n* Please check out the minimal example to get started [below](#minimal-example)\n* To understand how to define a prior + likelihood, please read [this](#specifying-priors-and-likelihoods)\n* For experimental support of gradients, see [this](#hmc-with-gradients)\n\n# Quick Start\n\n## Installation\n\nThere are two parts to an installation, one concerning the python side, and one the julia side:\n\n* Python: `pip install batty`\n\n* Julia: `import Pkg; Pkg.add.([\"PyJulia\", \"DensityInterface\", \"Distributions\", \"ValueShapes\", \"TypedTables\", \"ArraysOfArrays\", \"ChainRulesCore\", \"BAT\"])`\n\n## Minimal Example\n\nThe code below is showing a minimal example:\n* using a gaussian likelihood and a uniform prior\n* generating samples via Metropolis-Hastings\n* plotting the resulting sampes\n* <s>estimating the integral value via BridgeSampling</s>\n\n\n```python\n%load_ext autoreload\n%autoreload 2\n```\n\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom batty import BAT_sampler, BAT, Distributions, jl\n```\n\n\n```python\nsampler = BAT_sampler(llh=lambda x : -0.5 * x**2, prior_specs=Distributions.Uniform(-3, 3))\nsampler.sample();\nsampler.corner();\n```\n\n\n    \n![png](https://raw.githubusercontent.com/philippeller/batty/main/README_files/README_4_0.png)\n    \n\n\n# Usage\n\n## Using Different Algotihms\n\nThere are a range of algorihtms available within BAT, and those can be further customized via arguments. Here are just a few examples:\n\n### MCMC Sampling:\n\n\n```python\nresults = {}\n```\n\n* Metropolis-Hastings:\n\n\n```python\nresults['Metropolis-Hastings'] = sampler.sample(strategy=BAT.MCMCSampling(nsteps=10_000, nchains=2))\n```\n\n* Metropolis-Hastings with Accept-Reject weighting:\n\n\n```python\nresults['Accept-Reject Weighting'] = sampler.sample(strategy=BAT.MCMCSampling(mcalg=BAT.MetropolisHastings(weighting=BAT.ARPWeighting()), nsteps=10_000, nchains=2))\n```\n\n* Prior Importance Sampling:\n\n\n```python\nresults['Prior Importance Sampling'] = sampler.sample(strategy=BAT.PriorImportanceSampler(nsamples=10_000))\n```\n\n* Sobol Sampler:\n\n\n```python\nresults['Sobol Quasi Random Numbers'] = sampler.sample(strategy=BAT.SobolSampler(nsamples=10_000))\n```\n\n* Grid Sampler:\n\n\n```python\nresults['Grid Points'] = sampler.sample(strategy=BAT.GridSampler(ppa=1000))\n```\n\nPlotting the different results:\n\n\n```python\nfig = plt.figure(figsize=(9,6))\nbins=np.linspace(-3, 3, 100)\nfor key, item in results.items():\n    plt.hist(item.v, weights=item.weight, bins=bins, density=True, histtype=\"step\", label=key);\nplt.legend()\n```\n\n\n\n\n    <matplotlib.legend.Legend at 0x7f069fcd5ee0>\n\n\n\n\n    \n![png](https://raw.githubusercontent.com/philippeller/batty/main/README_files/README_19_1.png)\n    \n\n\n# Specifying Priors and Likelihoods\n\nPriors are specified via Julia `Distributions`, multiple Dimensions can be defined via a `dict`, where the `key` is the dimension name and the value the distribution, or as a list in case flat vectors with paraeter names are used.\n\nBelow the example *with* parameter names\n\n\n```python\ns = np.array([[0.25, 0.4], [0.9, 0.75]])\nprior_specs = {'a' : Distributions.Uniform(-3,3), 'b' : Distributions.MvNormal(np.array([1.,1.]), jl.Array(s@s.T))}\n```\n\nThe log-likelihood (`llh`) can be any python callable, that returns the log-likelihood values. The first argument to the function is the object with paramneter values, here `x`. If the prior is simple (i.e. like in the example in the beginning, `x` is directly the parameter value). If the prior is specified via a `dict`, then `x` contains a field per parameter with the value.\nAny additional `args` to the llh can be given in the sampler, such as here `d` for data:\n\n\n```python\ndef llh(x, d):\n    return -0.5 * ((x.b[0] - d[0])**2 + (x.b[1] - d[1])**2/4) - x.a\n```\n\nOr alternatively *without* parameter names (this will result in a flat vector):\n\n\n```python\n# prior_specs = [Distributions.Uniform(-3,3), Distributions.MvNormal(np.array([1.,1.]), jl.Array(s@s.T))]\n# def llh(x, d):\n#     return -0.5 * ((x[1] - d[0])**2 + (x[2] - d[1])**2/4) - x[0]\n```\n\n\n```python\nd = [-1, 1]\n```\n\n\n```python\nsampler = BAT_sampler(llh=llh, prior_specs=prior_specs, llh_args=(d,))\n```\n\nLet us generate a few samples:\n\n\n```python\nsampler.sample(strategy=BAT.MCMCSampling(nsteps=10_000, nchains=2));\n```\n\n### Some interface to plotting tools are available\n\n* The **G**reat **T**riangular **C**onfusion (GTC) plot:\n\n\n```python\nsampler.gtc(figureSize=8, customLabelFont={'size':14}, customTickFont={'size':10});\n```\n\n    findfont: Font family ['Arial'] not found. Falling back to DejaVu Sans.\n    findfont: Font family ['Arial'] not found. Falling back to DejaVu Sans.\n\n\n\n    \n![png](https://raw.githubusercontent.com/philippeller/batty/main/README_files/README_31_1.png)\n    \n\n\n* The corner plot:\n\n\n```python\nsampler.corner(color='green');\n```\n\n\n    \n![png](https://raw.githubusercontent.com/philippeller/batty/main/README_files/README_33_0.png)\n    \n\n\n## HMC with Gradients\n\nThis at the moment only works with preiors defined as flat vectors!\n\n\n```python\nllh = lambda x : -0.5 * np.dot(x, x)\ngrad = lambda x : -x\nsampler = BAT_sampler(llh=llh, prior_specs=[Distributions.Uniform(-3, 3),], grad=grad, )\n\n# Or alternatively:\n# llh_and_grad = lambda x: (-0.5 * np.dot(x, x), -x)\n# sampler = BAT_sampler(llh=llh, prior_specs=[Distributions.Uniform(-3, 3),], llh_and_grad=llh_and_grad)\n\nsampler.sample(strategy=BAT.MCMCSampling(mcalg=BAT.HamiltonianMC()));\nsampler.corner();\n```\n\n\n    \n![png](https://raw.githubusercontent.com/philippeller/batty/main/README_files/README_35_0.png)\n    \n\n\n\n```python\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/philippeller/batty",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "batty",
    "package_url": "https://pypi.org/project/batty/",
    "platform": null,
    "project_url": "https://pypi.org/project/batty/",
    "project_urls": {
      "Homepage": "https://github.com/philippeller/batty"
    },
    "release_url": "https://pypi.org/project/batty/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "BAT to Python",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14899872,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d751d7ca2044693e44b3f2b6ccddd27063ba6b88196c2c475c715efd9fab2207",
          "md5": "3170d57236d66bed6fb6798f166f3440",
          "sha256": "30fd70cad60a95401e5afb627c1d1f9b9c90242fc2acdfbe3082b102f029fb77"
        },
        "downloads": -1,
        "filename": "batty-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3170d57236d66bed6fb6798f166f3440",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1176,
        "upload_time": "2022-02-02T14:02:45",
        "upload_time_iso_8601": "2022-02-02T14:02:45.799829Z",
        "url": "https://files.pythonhosted.org/packages/d7/51/d7ca2044693e44b3f2b6ccddd27063ba6b88196c2c475c715efd9fab2207/batty-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eef8f497a118fcec29f497f977de6f9c17cff770ed69ec062a1b65bb38bdec7b",
          "md5": "4f67c0becf41bc937fd6182e26b208b3",
          "sha256": "8465587f7c5908c54fceb9fe4f71c7715d02811adb62413111b7bd6109f96e81"
        },
        "downloads": -1,
        "filename": "batty-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4f67c0becf41bc937fd6182e26b208b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1343,
        "upload_time": "2022-02-04T15:42:22",
        "upload_time_iso_8601": "2022-02-04T15:42:22.016656Z",
        "url": "https://files.pythonhosted.org/packages/ee/f8/f497a118fcec29f497f977de6f9c17cff770ed69ec062a1b65bb38bdec7b/batty-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06b45662225643c3cd12749779ae5f0cec3afd271a0aedefa52186d0e47a9006",
          "md5": "696c18f031cc6a78173fe929322bd8e1",
          "sha256": "70b00670d921d2185d63864e47c24f283e5e6fdba3563c0d61c16fd4007904a5"
        },
        "downloads": -1,
        "filename": "batty-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "696c18f031cc6a78173fe929322bd8e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1347,
        "upload_time": "2022-02-04T15:43:55",
        "upload_time_iso_8601": "2022-02-04T15:43:55.847894Z",
        "url": "https://files.pythonhosted.org/packages/06/b4/5662225643c3cd12749779ae5f0cec3afd271a0aedefa52186d0e47a9006/batty-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04b554bb79374640f8ad677799624dd8db03e681fd0a425aa2564402ce347092",
          "md5": "7cab470fe5918eb89a3e66c79efbfc90",
          "sha256": "39b336b5eb8537aea11b4c7d449799eec91c53f3f096023c743d548e69b0ba61"
        },
        "downloads": -1,
        "filename": "batty-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7cab470fe5918eb89a3e66c79efbfc90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1378,
        "upload_time": "2022-03-24T16:05:17",
        "upload_time_iso_8601": "2022-03-24T16:05:17.551249Z",
        "url": "https://files.pythonhosted.org/packages/04/b5/54bb79374640f8ad677799624dd8db03e681fd0a425aa2564402ce347092/batty-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbb5ae9b470a1d0a2f874653ab694e3789d852a095b6c0d9fd95806a96142ff9",
          "md5": "a59f63a3134dd66ab70ea4a2e66e42ba",
          "sha256": "364068aeffae8420ef2200631789d38e169f275b2be5a0ec06d341f65480ab32"
        },
        "downloads": -1,
        "filename": "batty-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a59f63a3134dd66ab70ea4a2e66e42ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1399,
        "upload_time": "2022-03-28T13:03:02",
        "upload_time_iso_8601": "2022-03-28T13:03:02.410159Z",
        "url": "https://files.pythonhosted.org/packages/db/b5/ae9b470a1d0a2f874653ab694e3789d852a095b6c0d9fd95806a96142ff9/batty-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "511040f63e00f35498bc0ce4348225b78b520bbeaf1d3252ac0c03e126b33737",
          "md5": "880dc2077a36984ae2ab474bf498db0d",
          "sha256": "b86213eae5c7bb413c3e62ddeca817b671277735b92bf2f56520f3a62dc83215"
        },
        "downloads": -1,
        "filename": "batty-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "880dc2077a36984ae2ab474bf498db0d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3517,
        "upload_time": "2022-03-29T09:39:42",
        "upload_time_iso_8601": "2022-03-29T09:39:42.108828Z",
        "url": "https://files.pythonhosted.org/packages/51/10/40f63e00f35498bc0ce4348225b78b520bbeaf1d3252ac0c03e126b33737/batty-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "caa84438661ce9c459e035ba76e0a439cf6170df8c9976ff848f270d301fcac8",
          "md5": "fe3cc6b0c450bfa181e6576b83380061",
          "sha256": "2f5525a555660d14308bde463bed2572bcd274f61875bf83a3893449fd68c09c"
        },
        "downloads": -1,
        "filename": "batty-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "fe3cc6b0c450bfa181e6576b83380061",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5218,
        "upload_time": "2022-07-12T10:08:12",
        "upload_time_iso_8601": "2022-07-12T10:08:12.436091Z",
        "url": "https://files.pythonhosted.org/packages/ca/a8/4438661ce9c459e035ba76e0a439cf6170df8c9976ff848f270d301fcac8/batty-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65d1180abf1889f4b2f77cd9fbbe9ce83db733f66646588317d218e52f609371",
          "md5": "75f86d8624d6f46abfba7c8e16b09b56",
          "sha256": "dfd811faaff41b8de3fb6462c61bb507b46938327280d757d382629d4a3d3672"
        },
        "downloads": -1,
        "filename": "batty-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "75f86d8624d6f46abfba7c8e16b09b56",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7817,
        "upload_time": "2022-08-26T12:55:48",
        "upload_time_iso_8601": "2022-08-26T12:55:48.644892Z",
        "url": "https://files.pythonhosted.org/packages/65/d1/180abf1889f4b2f77cd9fbbe9ce83db733f66646588317d218e52f609371/batty-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "65d1180abf1889f4b2f77cd9fbbe9ce83db733f66646588317d218e52f609371",
        "md5": "75f86d8624d6f46abfba7c8e16b09b56",
        "sha256": "dfd811faaff41b8de3fb6462c61bb507b46938327280d757d382629d4a3d3672"
      },
      "downloads": -1,
      "filename": "batty-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "75f86d8624d6f46abfba7c8e16b09b56",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7817,
      "upload_time": "2022-08-26T12:55:48",
      "upload_time_iso_8601": "2022-08-26T12:55:48.644892Z",
      "url": "https://files.pythonhosted.org/packages/65/d1/180abf1889f4b2f77cd9fbbe9ce83db733f66646588317d218e52f609371/batty-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}