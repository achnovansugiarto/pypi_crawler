{
  "info": {
    "author": "Oleh Zamkovyi",
    "author_email": "oleh.zam@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# windsaloft\n\nConvert a vectorial raster field into streamlines. The output is in a convenient GeoJSON format.\n\n![streamlines](https://user-images.githubusercontent.com/157599/117187271-6e52c900-ade4-11eb-8f1c-aae793afae5d.png)\n\nInstallation\n-----\n\nInstall the latest version from the Python Package Index:\n\n\t$ pip install windsaloft\n\n\nUsage\n-----\n\nTo create the streamlines, a vectorial field is needed:\n\n\n\timport numpy as np\n\timport geojson\n\timport pygrib\n\timport windsaloft\n\n\tgrib = pygrib.open('data.grib2')\n\nU/V Components\n\n\tu = grib.select(shortName='u')[0].values\n\tv = grib.select(shortName='v')[0].values\n\nConvert GRIBs data to \"standard\" -180 to 180 extent global grids\n\n\tu = np.roll(u, u.shape[1] // 2, axis=1)\n\tv = np.roll(v, v.shape[1] // 2, axis=1)\n\nCalculate streams\n\n\tfeature_collection = windsaloft.jet_streams(u, v, pixel_dist=5, min_value=10, smooth=2, zigzag_degrees=45)\n\nWrite output to a file\n\n\twith open('streams.geojson', 'w') as fileout:\n\t    geojson.dump(feature_collection, fileout, sort_keys=True, separators=(',', ':'))\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/olehz/windsaloft",
    "keywords": "map weather geojson gis gfs streamline",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "windsaloft",
    "package_url": "https://pypi.org/project/windsaloft/",
    "platform": "",
    "project_url": "https://pypi.org/project/windsaloft/",
    "project_urls": {
      "Homepage": "https://github.com/olehz/windsaloft"
    },
    "release_url": "https://pypi.org/project/windsaloft/0.0.2/",
    "requires_dist": [
      "geojson",
      "numpy ; extra == 'test'",
      "pytest ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Convert U/V raster to streamlines (geojson)",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10268003,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "893889c000d3b1b41d3aea4497c96484675fe4c669ec04d83c447b5c6a022039",
          "md5": "9a3d90ec33c9ac84cc409d1235f2c6af",
          "sha256": "51169f2e13af4acceb93ecb8aead5664623ddb80313ac54854f76d772c1853c5"
        },
        "downloads": -1,
        "filename": "windsaloft-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a3d90ec33c9ac84cc409d1235f2c6af",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6541,
        "upload_time": "2021-05-05T18:09:58",
        "upload_time_iso_8601": "2021-05-05T18:09:58.863085Z",
        "url": "https://files.pythonhosted.org/packages/89/38/89c000d3b1b41d3aea4497c96484675fe4c669ec04d83c447b5c6a022039/windsaloft-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "893889c000d3b1b41d3aea4497c96484675fe4c669ec04d83c447b5c6a022039",
        "md5": "9a3d90ec33c9ac84cc409d1235f2c6af",
        "sha256": "51169f2e13af4acceb93ecb8aead5664623ddb80313ac54854f76d772c1853c5"
      },
      "downloads": -1,
      "filename": "windsaloft-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9a3d90ec33c9ac84cc409d1235f2c6af",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6541,
      "upload_time": "2021-05-05T18:09:58",
      "upload_time_iso_8601": "2021-05-05T18:09:58.863085Z",
      "url": "https://files.pythonhosted.org/packages/89/38/89c000d3b1b41d3aea4497c96484675fe4c669ec04d83c447b5c6a022039/windsaloft-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}