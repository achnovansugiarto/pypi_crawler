{
  "info": {
    "author": "Jo√£o Nogueira",
    "author_email": "joao.nogueira@datarisk.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "mletrics\n================\n\n<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->\n\n``` python\nfrom mletrics.stability import psi\nfrom mletrics.classification import ks\n```\n\n## Install\n\n`pip install mletrics`\n\n## How to use\n\n### Calculating psi values\n\n``` python\nimport numpy as np\nimport pandas as pd\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom scikitplot.metrics import plot_ks_statistic\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\n```\n\n``` python\nfrom pathlib import Path\n\np = Path('..')\ndf = pd.read_csv(p/'datasets/titanic.csv')\ndf.head()\n```\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Braund, Mr. Owen Harris</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A/5 21171</td>\n      <td>7.2500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>PC 17599</td>\n      <td>71.2833</td>\n      <td>C85</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Heikkinen, Miss. Laina</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>STON/O2. 3101282</td>\n      <td>7.9250</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803</td>\n      <td>53.1000</td>\n      <td>C123</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Allen, Mr. William Henry</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450</td>\n      <td>8.0500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n``` python\ncat_vars = ['Pclass', 'Sex', 'Embarked']\nnum_vars = ['Age', 'SibSp', 'Fare']\nfeatures = cat_vars + num_vars\ntarget = 'Survived'\n\nX = df[features].copy()\ny = df[target].copy()\n```\n\n``` python\nnum_pipe = Pipeline(steps=[\n        ('imputer', SimpleImputer(strategy='constant', fill_value=-999))\n])\n\ncat_pipe = Pipeline(steps=[\n        ('imputer', SimpleImputer(strategy='constant', fill_value='missing')),\n        ('ohe', OneHotEncoder(sparse=False, handle_unknown='ignore'))\n]) \n\ntransformers = ColumnTransformer(transformers=[\n                ('numeric', num_pipe, num_vars),\n                ('categoric', cat_pipe, cat_vars)\n])\n\nmodel = Pipeline(steps=[\n        ('transformers', transformers),\n        ('model', RandomForestClassifier(random_state=42, max_depth=3))\n])\n```\n\n``` python\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n```\n\n``` python\nmodel.fit(X_train, y_train)\n\ny_proba_train = model.predict_proba(X_train)[:,1]\ny_proba_test  = model.predict_proba(X_test)[:,1]\n```\n\ncalculate psi value for the model probability between train and test\n\n``` python\npsi(y_proba_train, y_proba_test)\n```\n\n    0.06001324825109782\n\n-   PSI \\< 0.1 - No change. You can continue using existing model.\n-   PSI \\>= 0.1 but less than 0.2 - Slight change is required.\n-   PSI \\>= 0.2 - Significant change is required. Ideally, you should\n    not use this model any more.\n\nReference:\nhttps://www.listendata.com/2015/05/population-stability-index.html\n\n### Calculating the KS\n\n``` python\nks(y_test, y_proba_test)\n```\n\n    0.5886743886743887\n\nComparing with the\n[ks](https://joaopcnogueira.github.io/mletrics/classification.html#ks)\ncalculated by `scikit-plot`:\n\n``` python\nplot_ks_statistic(y_test, np.column_stack([1-y_proba_test, y_proba_test]))\n```\n\n    <AxesSubplot:title={'center':'KS Statistic Plot'}, xlabel='Threshold', ylabel='Percentage below threshold'>\n\n![](index_files/figure-gfm/cell-11-output-2.png)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/joaopcnogueira/mletrics/",
    "keywords": "nbdev",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mletrics",
    "package_url": "https://pypi.org/project/mletrics/",
    "platform": null,
    "project_url": "https://pypi.org/project/mletrics/",
    "project_urls": {
      "Homepage": "https://github.com/joaopcnogueira/mletrics/"
    },
    "release_url": "https://pypi.org/project/mletrics/0.0.3/",
    "requires_dist": [
      "fastcore",
      "pandas",
      "scikit-learn",
      "scikit-plot"
    ],
    "requires_python": ">=3.7",
    "summary": "Machine learning metrics that are not easy to found",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14696346,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ec1d299953fd47bab22ab96d10264b45e12d67dbb941c3b20b7f085fdf37586",
          "md5": "2de7c553d3aab8de65c25ee1d9b3fcbd",
          "sha256": "a369308dba68ddec60e411abf68efb4bddd65a92142ac47e4bab293538bbadb3"
        },
        "downloads": -1,
        "filename": "mletrics-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2de7c553d3aab8de65c25ee1d9b3fcbd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9805,
        "upload_time": "2022-08-08T23:11:17",
        "upload_time_iso_8601": "2022-08-08T23:11:17.955024Z",
        "url": "https://files.pythonhosted.org/packages/3e/c1/d299953fd47bab22ab96d10264b45e12d67dbb941c3b20b7f085fdf37586/mletrics-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11a8886506a13e389d163b5c2f851886816f0210365604c7c926dc4229e12db1",
          "md5": "24e99bec9627147208cb5f672c053ac3",
          "sha256": "17d64327e6a8a08c6701cf83f277deda56fe56982a36d913ebf440d0ae2e55be"
        },
        "downloads": -1,
        "filename": "mletrics-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "24e99bec9627147208cb5f672c053ac3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 7997,
        "upload_time": "2022-08-08T23:11:19",
        "upload_time_iso_8601": "2022-08-08T23:11:19.560486Z",
        "url": "https://files.pythonhosted.org/packages/11/a8/886506a13e389d163b5c2f851886816f0210365604c7c926dc4229e12db1/mletrics-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1b62e35b0f9ca7e2bdffcd5697894c38349059bd7d12c0efff8a49181133d6b",
          "md5": "a24e91be2c1dc32aef6ce445ec1130e8",
          "sha256": "44b7ee2bc686abe4a82998df0e589a9f71f573b1477143efd3288a1c844b4ad0"
        },
        "downloads": -1,
        "filename": "mletrics-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a24e91be2c1dc32aef6ce445ec1130e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 11303,
        "upload_time": "2022-08-08T23:12:53",
        "upload_time_iso_8601": "2022-08-08T23:12:53.957676Z",
        "url": "https://files.pythonhosted.org/packages/a1/b6/2e35b0f9ca7e2bdffcd5697894c38349059bd7d12c0efff8a49181133d6b/mletrics-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "910c57bb6525461b4855d2886329ceef2d0796b19ce8f956fd549aba76878235",
          "md5": "ede7e510bf71e175f966f931d678990b",
          "sha256": "8d88412153cb808f5e55c14d593910700d36fa1e45b4d5069ee6f1a351f18c58"
        },
        "downloads": -1,
        "filename": "mletrics-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ede7e510bf71e175f966f931d678990b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 9409,
        "upload_time": "2022-08-08T23:12:56",
        "upload_time_iso_8601": "2022-08-08T23:12:56.248307Z",
        "url": "https://files.pythonhosted.org/packages/91/0c/57bb6525461b4855d2886329ceef2d0796b19ce8f956fd549aba76878235/mletrics-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63ba73bd72692836f00ba03c4af6fe1539d6aaad171ec22f7368488820608827",
          "md5": "473adfa606ce5fff79ac6aa6b3166c23",
          "sha256": "11eb58d540479275cd5b2d16876597e2c4701d3955842b7ffc079865f772be29"
        },
        "downloads": -1,
        "filename": "mletrics-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "473adfa606ce5fff79ac6aa6b3166c23",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9649,
        "upload_time": "2022-08-09T01:27:21",
        "upload_time_iso_8601": "2022-08-09T01:27:21.241771Z",
        "url": "https://files.pythonhosted.org/packages/63/ba/73bd72692836f00ba03c4af6fe1539d6aaad171ec22f7368488820608827/mletrics-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7de3de54d239da71bd441fb70b3172b0d260a10b6de044d9a866f078e2ada1e",
          "md5": "ff37e0985f965d6a4f852058c335e82d",
          "sha256": "606c13665f81aa3afd2ca69ecdedf9a7e82334de4edd6ffb2c4d277e0a751f6a"
        },
        "downloads": -1,
        "filename": "mletrics-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ff37e0985f965d6a4f852058c335e82d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9744,
        "upload_time": "2022-08-09T01:27:23",
        "upload_time_iso_8601": "2022-08-09T01:27:23.536001Z",
        "url": "https://files.pythonhosted.org/packages/b7/de/3de54d239da71bd441fb70b3172b0d260a10b6de044d9a866f078e2ada1e/mletrics-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "63ba73bd72692836f00ba03c4af6fe1539d6aaad171ec22f7368488820608827",
        "md5": "473adfa606ce5fff79ac6aa6b3166c23",
        "sha256": "11eb58d540479275cd5b2d16876597e2c4701d3955842b7ffc079865f772be29"
      },
      "downloads": -1,
      "filename": "mletrics-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "473adfa606ce5fff79ac6aa6b3166c23",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 9649,
      "upload_time": "2022-08-09T01:27:21",
      "upload_time_iso_8601": "2022-08-09T01:27:21.241771Z",
      "url": "https://files.pythonhosted.org/packages/63/ba/73bd72692836f00ba03c4af6fe1539d6aaad171ec22f7368488820608827/mletrics-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b7de3de54d239da71bd441fb70b3172b0d260a10b6de044d9a866f078e2ada1e",
        "md5": "ff37e0985f965d6a4f852058c335e82d",
        "sha256": "606c13665f81aa3afd2ca69ecdedf9a7e82334de4edd6ffb2c4d277e0a751f6a"
      },
      "downloads": -1,
      "filename": "mletrics-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "ff37e0985f965d6a4f852058c335e82d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 9744,
      "upload_time": "2022-08-09T01:27:23",
      "upload_time_iso_8601": "2022-08-09T01:27:23.536001Z",
      "url": "https://files.pythonhosted.org/packages/b7/de/3de54d239da71bd441fb70b3172b0d260a10b6de044d9a866f078e2ada1e/mletrics-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}