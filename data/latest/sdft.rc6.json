{
  "info": {
    "author": "Juergen Hock",
    "author_email": "juergen.hock@jurihock.de",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Other Audience",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: C",
      "Programming Language :: C++",
      "Programming Language :: Python :: 3",
      "Topic :: Artistic Software",
      "Topic :: Education",
      "Topic :: Multimedia :: Sound/Audio",
      "Topic :: Multimedia :: Sound/Audio :: Analysis",
      "Topic :: Multimedia :: Sound/Audio :: Sound Synthesis",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Sliding Discrete Fourier Transform (SDFT)\n\n![language](https://img.shields.io/badge/languages-C%2FC%2B%2B%20Python-blue)\n![license](https://img.shields.io/github/license/jurihock/sdft?color=green)\n![pypi](https://img.shields.io/pypi/v/sdft?color=gold)\n\nForward and inverse Sliding DFT according to [[1]](#1) and [[2]](#2) with following features:\n\n- Arbitrary number of DFT bins\n- Built-in analysis window functions Boxcar, Hann (default), Hamming and Blackman\n- Customizable time and frequency domain data type in C/C++\n- Endless single or multiple sample processing at once\n- Optional synthesis latency control parameter\n- Real-time low latency<sup>*</sup> analysis and synthesis capability\n\n<sup><sub>*) compared to STFT latency</sub></sup>\n\nThe [Sliding Discrete Fourier Transform (SDFT)](https://en.wikipedia.org/wiki/Sliding_DFT) is a recursive approach to compute the Fourier transform sample by sample. In this particular case it's more efficient than the FFT based [Short Time Fourier Transform (STFT)](https://en.wikipedia.org/wiki/Short-time_Fourier_transform) approach with one sample hops. On the other side, the SDFT is still known to suffer from accumulated errors and potential instabilities.\n\nThis implementation features the *modulated* SDFT algorithm, which is guaranteed to be stable while being accurate. It takes real valued samples and estimates the corresponding half size complex valued DFT vector for each of them. The length of the estimated DFT vector is not limited to the power of two. The eventually altered DFT vector can also be used to synthesize an output sample.\n\nCompared to STFT, the algorithmic synthesis latency of SDFT is lower and can additionally be reduced at the expense of signal to noise ratio. Spectral data processing coupled with reduced latency is especially useful for real-time applications, e.g. digital audio signal processing.\n\n## Basic usage\n\n### C\n\n```c\n#define SDFT_TD_FLOAT  // time domain data type (float by default)\n#define SDFT_FD_DOUBLE // frequency domain data type (double by default)\n\n#include <sdft/sdft.h> // see also src/c folder\n\nsize_t n = ...; // number of samples\nsize_t m = ...; // number of dft bins\n\nfloat* x = ...; // analysis samples of shape (n)\nfloat* y = ...; // synthesis samples of shape (n)\n\ndouble complex* dft = ...; // dft matrix of shape (n, m)\n\nsdft_t* sdft = sdft_alloc(m); // create sdft plan\n\nsdft_sdft_n(sdft, n, x, dft); // extract dft matrix from input samples\nsdft_isdft_n(sdft, n, dft, y); // synthesize output samples from dft matrix\n\nsdft_free(sdft); // destroy sdft plan\n```\n\n<details>\n<summary><strong>MSVC</strong></summary>\n<p/>\n\nDue to incomplete [C complex math support](https://docs.microsoft.com/cpp/c-runtime-library/complex-math-support) in MSVC, optionally use following universal typedefs:\n\n* `sdft_float_t` instead of `float`\n* `sdft_double_complex_t` instead of `double complex`\n\nor even better the corresponding generic typedefs:\n\n* `sdft_td_t`\n* `sdft_fdx_t`\n\nIn both cases, the underlying data type results from the `SDFT_TD_*` and `SDFT_FD_*` definitions.\n\n</details>\n\n<details>\n<summary><strong>No complex.h? No problem...</strong></summary>\n<p/>\n\nJust define `SDFT_NO_COMPLEX_H` to prevent `complex.h` from being included and internally enable compatible complex number representation instead:\n\n```c\ntypedef struct { sdft_fd_t r, i; } sdft_fdx_t;\n```\n\n</details>\n\n### C++\n\n```c++\n#include <sdft/sdft.h> // see also src/cpp folder\n\nsize_t n = ...; // number of samples\nsize_t m = ...; // number of dft bins\n\nfloat* x = ...; // analysis samples of shape (n)\nfloat* y = ...; // synthesis samples of shape (n)\n\nstd::complex<double>* dft = ...; // dft matrix of shape (n, m)\n\nSDFT<float, double> sdft(m); // create sdft plan for custom time and frequency domain data types\n\nsdft.sdft(n, x, dft); // extract dft matrix from input samples\nsdft.isdft(n, dft, y); // synthesize output samples from dft matrix\n```\n\nThe time domain data type defaults to `float` and the frequency domain data type to `double`.\n\n### Python\n\n```python\nfrom sdft import SDFT # see also src/python folder\n\nn = ... # number of samples\nm = ... # number of dft bins\n\nx = ... # analysis samples of shape (n)\n\nsdft = SDFT(m) # create sdft plan\n\ndft = sdft.sdft(x) # extract dft matrix from input samples\ny = sdft.isdft(dft) # synthesize output samples from dft matrix\n```\n\nFeel free to obtain current version from [PyPI](https://pypi.org/project/sdft) by executing `pip install sdft`.\n\n## Test spectrogram\n\nBelow you can see two spectrograms of the same audio file `test.wav` computed by SDFT and STFT with identical spectral resolution, window function and hop size. Do you see any significant differences between them?\n\n| SDFT | STFT |\n| ---- | ---- |\n| ![SDFT](https://github.com/jurihock/sdft/raw/main/test/sdft.png) | ![STFT](https://github.com/jurihock/sdft/raw/main/test/stft.png) |\n\nWell, the results are very similar, which is to be considered as the proof of concept...\n\n## See also\n\nIf you're interested in Sliding DFT with *logarithmic* frequency resolution, don't forget to browse my [jurihock/qdft](https://github.com/jurihock/qdft) project!\n\n## References\n\n1. <span id=\"1\">Krzysztof Duda (2010). Accurate, Guaranteed Stable, Sliding Discrete Fourier Transform. IEEE Signal Processing Magazine. https://ieeexplore.ieee.org/document/5563098</span>\n\n2. <span id=\"2\">Russell Bradford et al. (2005). Sliding is Smoother Than Jumping. International Computer Music Conference Proceedings. http://hdl.handle.net/2027/spo.bbp2372.2005.086</span>\n\n## License\n\n[github.com/jurihock/sdft](https://github.com/jurihock/sdft) is licensed under the terms of the MIT license.\nFor details please refer to the accompanying [LICENSE](https://github.com/jurihock/sdft/raw/main/LICENSE) file distributed with it.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jurihock/sdft",
    "keywords": "digital,audio,signal,processing,dasp,sliding,discrete,fourier,transform,sdft,stft,dft,fft,frequency,spectrum,algorithms,analysis,synthesis,c,cpp,python",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sdft",
    "package_url": "https://pypi.org/project/sdft/",
    "platform": null,
    "project_url": "https://pypi.org/project/sdft/",
    "project_urls": {
      "Homepage": "https://github.com/jurihock/sdft"
    },
    "release_url": "https://pypi.org/project/sdft/1.4/",
    "requires_dist": [
      "numpy"
    ],
    "requires_python": ">=3",
    "summary": "Forward and inverse Sliding Discrete Fourier Transform (Sliding DFT)",
    "version": "1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16434925,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba0caf405eacb636e6f436de23fa1d394cd4ac95146693291f9441ed4595eda8",
          "md5": "d42331171c222d91d093d429a7cd2608",
          "sha256": "ad1cf4f46a0a2d280f489fe7640e0885efd231ff288ba3295b2fee1800400cc1"
        },
        "downloads": -1,
        "filename": "sdft-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d42331171c222d91d093d429a7cd2608",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 4330,
        "upload_time": "2022-08-28T21:29:05",
        "upload_time_iso_8601": "2022-08-28T21:29:05.196387Z",
        "url": "https://files.pythonhosted.org/packages/ba/0c/af405eacb636e6f436de23fa1d394cd4ac95146693291f9441ed4595eda8/sdft-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78fd1f6fceca10b9dbb0b4a9aa267b2b3dbbb4e370f5e4d9c2d12cf9a31c8924",
          "md5": "a4f5345c62831696291419192fdeff16",
          "sha256": "0c9f3485dd181bbd617ccf9db64b1e51ad21762df6d2fb45d69faca202501433"
        },
        "downloads": -1,
        "filename": "sdft-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a4f5345c62831696291419192fdeff16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 4709,
        "upload_time": "2022-08-28T21:29:07",
        "upload_time_iso_8601": "2022-08-28T21:29:07.460412Z",
        "url": "https://files.pythonhosted.org/packages/78/fd/1f6fceca10b9dbb0b4a9aa267b2b3dbbb4e370f5e4d9c2d12cf9a31c8924/sdft-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5529371a02438ceefb9080eca90f1c9355167151417caf6bf2154c93a0a37913",
          "md5": "18c9fca8b426f218fb21244a65a74960",
          "sha256": "bd8f183845731e9de2c933e83663ae9bcb6c26892a185447fb604c8fa68ba03e"
        },
        "downloads": -1,
        "filename": "sdft-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "18c9fca8b426f218fb21244a65a74960",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 5385,
        "upload_time": "2022-09-01T22:04:02",
        "upload_time_iso_8601": "2022-09-01T22:04:02.643016Z",
        "url": "https://files.pythonhosted.org/packages/55/29/371a02438ceefb9080eca90f1c9355167151417caf6bf2154c93a0a37913/sdft-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f41be176f3251ee241f2badc8ce6ba6fd96cf215bef8b35f60c3fbe4f550b18",
          "md5": "7aaa906126444181f9e4a931cabd4b98",
          "sha256": "81f2086ab80582f02b656c8a3ac5ea2b0b764822ac40bc3b5492211003990643"
        },
        "downloads": -1,
        "filename": "sdft-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7aaa906126444181f9e4a931cabd4b98",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 5791,
        "upload_time": "2022-09-01T22:04:04",
        "upload_time_iso_8601": "2022-09-01T22:04:04.875772Z",
        "url": "https://files.pythonhosted.org/packages/2f/41/be176f3251ee241f2badc8ce6ba6fd96cf215bef8b35f60c3fbe4f550b18/sdft-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6d6ae47fd13dc2c455a090d8da79229632975e1092b35518a24de6050b7015c",
          "md5": "23c7046d8fda6a12a1396dfbb95e7d51",
          "sha256": "20a67e3b407c9c1e55bd0ae02d30b9b284d6563d011cc1e2d3a8708d40b4e757"
        },
        "downloads": -1,
        "filename": "sdft-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23c7046d8fda6a12a1396dfbb95e7d51",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 6014,
        "upload_time": "2022-09-07T17:33:42",
        "upload_time_iso_8601": "2022-09-07T17:33:42.603914Z",
        "url": "https://files.pythonhosted.org/packages/e6/d6/ae47fd13dc2c455a090d8da79229632975e1092b35518a24de6050b7015c/sdft-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c61ad4a864e62983383376a10f3cbe5070e931a7972d5c7541104cdd6236081",
          "md5": "3e7bef67de8fae1f5ff91b5b4bfca92a",
          "sha256": "c46abe9cacf00c460c586afbc14afc831bf76726f6c3ff56ae11ce497d57c64f"
        },
        "downloads": -1,
        "filename": "sdft-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3e7bef67de8fae1f5ff91b5b4bfca92a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 6702,
        "upload_time": "2022-09-07T17:33:44",
        "upload_time_iso_8601": "2022-09-07T17:33:44.647650Z",
        "url": "https://files.pythonhosted.org/packages/2c/61/ad4a864e62983383376a10f3cbe5070e931a7972d5c7541104cdd6236081/sdft-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81e8687fe980e80be91092d9a910cda733803d8ed6936e9a97dbe42363e85f8c",
          "md5": "2637652f2c232b0385f7fdb005b58f79",
          "sha256": "816a2478eee677e4450187f7d8d47f3f7f9b0566fcb06beb11c223461528df8d"
        },
        "downloads": -1,
        "filename": "sdft-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2637652f2c232b0385f7fdb005b58f79",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 6215,
        "upload_time": "2022-09-09T21:34:44",
        "upload_time_iso_8601": "2022-09-09T21:34:44.328731Z",
        "url": "https://files.pythonhosted.org/packages/81/e8/687fe980e80be91092d9a910cda733803d8ed6936e9a97dbe42363e85f8c/sdft-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e4a1af78aed28980c7eb1c44b93095aa36b1561c70e80b2d0b2354bc47f5695",
          "md5": "5bcc2cce7fafda58084ce043a7ae654b",
          "sha256": "ac146940dba5180fa7312c77ddf233d14d0f234522e2df8e662c174338865c32"
        },
        "downloads": -1,
        "filename": "sdft-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5bcc2cce7fafda58084ce043a7ae654b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 6937,
        "upload_time": "2022-09-09T21:34:46",
        "upload_time_iso_8601": "2022-09-09T21:34:46.058819Z",
        "url": "https://files.pythonhosted.org/packages/7e/4a/1af78aed28980c7eb1c44b93095aa36b1561c70e80b2d0b2354bc47f5695/sdft-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "facf6995521ed7f7817ead963fe0fce1f3fe03b083e03ce71d9afae59fe92323",
          "md5": "5850f167287a746adb74cb9ea1a01ffb",
          "sha256": "61040d46eae48ee4e4d83b675977d6118c859ef97f44f2cf61034cef787a3699"
        },
        "downloads": -1,
        "filename": "sdft-1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5850f167287a746adb74cb9ea1a01ffb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 6404,
        "upload_time": "2022-09-17T15:30:42",
        "upload_time_iso_8601": "2022-09-17T15:30:42.430508Z",
        "url": "https://files.pythonhosted.org/packages/fa/cf/6995521ed7f7817ead963fe0fce1f3fe03b083e03ce71d9afae59fe92323/sdft-1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f15ff391dcdd3019a72f32087e768ad9ad6190e413c4589e2939048e62d34ba",
          "md5": "b6a8f00acc34d4ba685b1bd420a4bcec",
          "sha256": "d28bc870a75b936e46ed2f590faa92c5b7169d1f16dbdfb280656ab9d55eea43"
        },
        "downloads": -1,
        "filename": "sdft-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b6a8f00acc34d4ba685b1bd420a4bcec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 7120,
        "upload_time": "2022-09-17T15:30:44",
        "upload_time_iso_8601": "2022-09-17T15:30:44.493547Z",
        "url": "https://files.pythonhosted.org/packages/8f/15/ff391dcdd3019a72f32087e768ad9ad6190e413c4589e2939048e62d34ba/sdft-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4470d2750abf9bc1d0c398311e2f31222b9bccf2fffb97c1eacc2587823985a3",
          "md5": "509425c282fd6bd1293c06f5cb163d48",
          "sha256": "276f0c59b723abf28d618639e711eb4d0d5f913e3a1ad1474a3734cf3bb47dc8"
        },
        "downloads": -1,
        "filename": "sdft-1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "509425c282fd6bd1293c06f5cb163d48",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 9782,
        "upload_time": "2023-01-15T11:32:36",
        "upload_time_iso_8601": "2023-01-15T11:32:36.983023Z",
        "url": "https://files.pythonhosted.org/packages/44/70/d2750abf9bc1d0c398311e2f31222b9bccf2fffb97c1eacc2587823985a3/sdft-1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b5d309683e56c89bdd4672d511f28d8389310ffe541b691b1953f95de1d17b6",
          "md5": "2fb32d80aa8155743586595d7295db94",
          "sha256": "495a591f9ee89d59489b65b25d11548754c9dad3401e884c550f74c51de0a889"
        },
        "downloads": -1,
        "filename": "sdft-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "2fb32d80aa8155743586595d7295db94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 10215,
        "upload_time": "2023-01-15T11:32:38",
        "upload_time_iso_8601": "2023-01-15T11:32:38.980752Z",
        "url": "https://files.pythonhosted.org/packages/0b/5d/309683e56c89bdd4672d511f28d8389310ffe541b691b1953f95de1d17b6/sdft-1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4470d2750abf9bc1d0c398311e2f31222b9bccf2fffb97c1eacc2587823985a3",
        "md5": "509425c282fd6bd1293c06f5cb163d48",
        "sha256": "276f0c59b723abf28d618639e711eb4d0d5f913e3a1ad1474a3734cf3bb47dc8"
      },
      "downloads": -1,
      "filename": "sdft-1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "509425c282fd6bd1293c06f5cb163d48",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 9782,
      "upload_time": "2023-01-15T11:32:36",
      "upload_time_iso_8601": "2023-01-15T11:32:36.983023Z",
      "url": "https://files.pythonhosted.org/packages/44/70/d2750abf9bc1d0c398311e2f31222b9bccf2fffb97c1eacc2587823985a3/sdft-1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0b5d309683e56c89bdd4672d511f28d8389310ffe541b691b1953f95de1d17b6",
        "md5": "2fb32d80aa8155743586595d7295db94",
        "sha256": "495a591f9ee89d59489b65b25d11548754c9dad3401e884c550f74c51de0a889"
      },
      "downloads": -1,
      "filename": "sdft-1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "2fb32d80aa8155743586595d7295db94",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 10215,
      "upload_time": "2023-01-15T11:32:38",
      "upload_time_iso_8601": "2023-01-15T11:32:38.980752Z",
      "url": "https://files.pythonhosted.org/packages/0b/5d/309683e56c89bdd4672d511f28d8389310ffe541b691b1953f95de1d17b6/sdft-1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}