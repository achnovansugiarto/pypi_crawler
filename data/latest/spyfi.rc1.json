{
  "info": {
    "author": "Bob Gregory",
    "author_email": "bob@codefiend.co.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Spyfi\n\n[![PyPI](https://img.shields.io/pypi/v/spyfi.svg)][pypi_]\n[![Status](https://img.shields.io/pypi/status/spyfi.svg)][status]\n[![Python Version](https://img.shields.io/pypi/pyversions/spyfi)][python version]\n[![License](https://img.shields.io/pypi/l/spyfi)][license]\n\n[![Read the documentation at https://spyfi.readthedocs.io/](https://img.shields.io/readthedocs/spyfi/latest.svg?label=Read%20the%20Docs)][read the docs]\n[![Tests](https://github.com/bobthemighty/spyfi/workflows/Tests/badge.svg)][tests]\n[![Codecov](https://codecov.io/gh/bobthemighty/spyfi/branch/main/graph/badge.svg)][codecov]\n\n[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)][pre-commit]\n[![Black](https://img.shields.io/badge/code%20style-black-000000.svg)][black]\n\n[pypi_]: https://pypi.org/project/spyfi/\n[status]: https://pypi.org/project/spyfi/\n[python version]: https://pypi.org/project/spyfi\n[read the docs]: https://spyfi.readthedocs.io/\n[tests]: https://github.com/bobthemighty/spyfi/actions?workflow=Tests\n[codecov]: https://app.codecov.io/gh/bobthemighty/spyfi\n[pre-commit]: https://github.com/pre-commit/pre-commit\n[black]: https://github.com/psf/black\n\nA quick and dirty way to turn your existing classes into spies.\n\n## Why though?\n\nI very often create spies for my tests by wrapping an interface around a list, eg.\n\n```python\nclass FakeEmailSender(list):\n\n    def send(self, address: str, message: str) -> None:\n        self.append((address, message))\n\n\ndef test_when_a_customer_signs_up():\n\n    sender = FakeEmailSender()\n    handler = SignupHandler(sender)\n\n    handler(\"user@domain.com\", \"password\")\n\n    assert ((\"user@domain.com\", \"welcome to the website\")) in sender\n```\n\nSometimes this is a little fiddly, particularly if you need to spy on a hierarchy of objects. Spyfi, pronounced \"spiffy\", is a quick way to instrument a python object graph and capture calls made to it.\n\n## Installation\n\nYou can install _Spyfi_ via [pip] from [PyPI]:\n\n```console\n$ pip install spyfi\n```\n\n## Usage\n\n```python\nfrom spyfi import Spy\n\n\nclass Thing:\n\n    def __init__(self, colour):\n        self.colour = colour\n\n    def say_hello(self, message):\n        print(f\"Hello, I am a {self.colour} thing: {message})\n\n\nclass ThingFactory:\n\n    def make_thing(self, colour:str) -> Thing:\n        return Thing(colour)\n\n\ndef test_thing_messages():\n\n    # Spiffy takes any old object and wraps its methods\n    # so that an arbitrary callback receives args and kwargs.\n    # In this case, we're appending all calls to a list.\n    spy = Spy(ThingFactory())\n\n    # The returned object is otherwise unchanged. `factory` is a real\n    # ThingFactory and behaves as normal.\n    factory = spy.target\n    factory.make_thing(\"blue\").say_hello(\"I like python\")\n\n    # Since we have access to the calls list, we can assert that\n    # particular methods were called with the right data.\n    assert len(spy.calls) == 2\n    assert calls[0].method == \"make_thing\"\n    assert calls[0].args == (\"blue\",)\n\n    # Spyfi includes a helper method to make assertions easier\n    assert spy.has(\"say_hello\")\n    assert spy.has(\"say_hello\", \"I like python\")\n```\n\n## Contributing\n\nContributions are very welcome.\nTo learn more, see the [Contributor Guide].\n\n## License\n\nDistributed under the terms of the [MIT license][license],\n_Spyfi_ is free and open source software.\n\n## Issues\n\nIf you encounter any problems,\nplease [file an issue] along with a detailed description.\n\n## Credits\n\nThis project was generated from [@cjolowicz]'s [Hypermodern Python Cookiecutter] template.\n\n[@cjolowicz]: https://github.com/cjolowicz\n[pypi]: https://pypi.org/\n[hypermodern python cookiecutter]: https://github.com/cjolowicz/cookiecutter-hypermodern-python\n[file an issue]: https://github.com/bobthemighty/spyfi/issues\n[pip]: https://pip.pypa.io/\n\n<!-- github-only -->\n\n[license]: https://github.com/bobthemighty/spyfi/blob/main/LICENSE\n[contributor guide]: https://github.com/bobthemighty/spyfi/blob/main/CONTRIBUTING.md\n[command-line reference]: https://spyfi.readthedocs.io/en/latest/usage.html\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bobthemighty/spyfi",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "spyfi",
    "package_url": "https://pypi.org/project/spyfi/",
    "platform": null,
    "project_url": "https://pypi.org/project/spyfi/",
    "project_urls": {
      "Changelog": "https://github.com/bobthemighty/spyfi/releases",
      "Documentation": "https://spyfi.readthedocs.io",
      "Homepage": "https://github.com/bobthemighty/spyfi",
      "Repository": "https://github.com/bobthemighty/spyfi"
    },
    "release_url": "https://pypi.org/project/spyfi/1.0.0a0/",
    "requires_dist": [
      "click (>=8.0.1)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "Spyfi",
    "version": "1.0.0a0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15833685,
  "releases": {
    "1.0.0a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4aaf18b40d35339e2c0e17f13997f22e253befcd2317e51959d0a2d942a519db",
          "md5": "9def869d9417565702c17cfb8056506d",
          "sha256": "de6c2d0167602ab62bd6de6b66fa77ccb7ba43dd3d0fee7dfea6d73b285321c2"
        },
        "downloads": -1,
        "filename": "spyfi-1.0.0a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9def869d9417565702c17cfb8056506d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 4637,
        "upload_time": "2022-11-20T22:54:10",
        "upload_time_iso_8601": "2022-11-20T22:54:10.440952Z",
        "url": "https://files.pythonhosted.org/packages/4a/af/18b40d35339e2c0e17f13997f22e253befcd2317e51959d0a2d942a519db/spyfi-1.0.0a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8de8e71b00d362dde65fbb0ce3f85a2bf1c4b68ec8c036830eac8ba37235d3ee",
          "md5": "46887192450f4439192c07274b53bccb",
          "sha256": "d441da44d9079e78162ce269c6489bf1937f758ccf3869d9142b358e3090ea80"
        },
        "downloads": -1,
        "filename": "spyfi-1.0.0a0.tar.gz",
        "has_sig": false,
        "md5_digest": "46887192450f4439192c07274b53bccb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 5323,
        "upload_time": "2022-11-20T22:54:11",
        "upload_time_iso_8601": "2022-11-20T22:54:11.927047Z",
        "url": "https://files.pythonhosted.org/packages/8d/e8/e71b00d362dde65fbb0ce3f85a2bf1c4b68ec8c036830eac8ba37235d3ee/spyfi-1.0.0a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4aaf18b40d35339e2c0e17f13997f22e253befcd2317e51959d0a2d942a519db",
        "md5": "9def869d9417565702c17cfb8056506d",
        "sha256": "de6c2d0167602ab62bd6de6b66fa77ccb7ba43dd3d0fee7dfea6d73b285321c2"
      },
      "downloads": -1,
      "filename": "spyfi-1.0.0a0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9def869d9417565702c17cfb8056506d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 4637,
      "upload_time": "2022-11-20T22:54:10",
      "upload_time_iso_8601": "2022-11-20T22:54:10.440952Z",
      "url": "https://files.pythonhosted.org/packages/4a/af/18b40d35339e2c0e17f13997f22e253befcd2317e51959d0a2d942a519db/spyfi-1.0.0a0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8de8e71b00d362dde65fbb0ce3f85a2bf1c4b68ec8c036830eac8ba37235d3ee",
        "md5": "46887192450f4439192c07274b53bccb",
        "sha256": "d441da44d9079e78162ce269c6489bf1937f758ccf3869d9142b358e3090ea80"
      },
      "downloads": -1,
      "filename": "spyfi-1.0.0a0.tar.gz",
      "has_sig": false,
      "md5_digest": "46887192450f4439192c07274b53bccb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 5323,
      "upload_time": "2022-11-20T22:54:11",
      "upload_time_iso_8601": "2022-11-20T22:54:11.927047Z",
      "url": "https://files.pythonhosted.org/packages/8d/e8/e71b00d362dde65fbb0ce3f85a2bf1c4b68ec8c036830eac8ba37235d3ee/spyfi-1.0.0a0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}