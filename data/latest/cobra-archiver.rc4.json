{
  "info": {
    "author": "yell0w4x",
    "author_email": "yell0w4x@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# CoBRA - Comprehensive Backing up and Restoration Archiver\n\nCobra is a tool for creating, managing and restoring backups. \nIt is designed to cover docker powered applications as well as it allows backing up of \nregular file system folders.\n\n![Cobra cli](https://github.com/yell0w4x/assets/raw/main/cobra-cli.png)\n\n## How to use\n\n```\npip install cobra-archiver\n```\n\n### CLI\n\nAfter that `cobra` command will be available from the command line.\n\nTo get the cli description please issue `cobra --help` or \ne.g. `cobra backup --help` to get help on certain command.\n\nThis will backup all the docker volumes as well as `/want/this/dir/backed/up` \ndirectory, but `skip-this-volume` `and-this-one`.\n\n```bash\ncobra backup build --push --dir /want/this/dir/backed/up \\\n    --creds /path/to/google-service-acc-key.json --folder-id google-drive-folder-id \\\n    --exclude skip-this-volume and-this-one\n```\n\nThis restores latest backup from the given remote folder.\n\n```bash\ncobra backup pull --latest --restore \\\n    --creds /path/to/google-service-acc-key.json --folder-id google-drive-folder-id\n```\n\n### Remote storage\n\nFor now Google Drive only supported. If you find this project useful you can contribute \nto enhance it. Or at least you can post a feature request.\n\n1. To have this work the [Google Service Account](https://cloud.google.com/iam/docs/service-accounts) is necessary.\n   The service account id (email) looks like `<the-name-you-choose>@hip-heading-376120.iam.gserviceaccount.com`. \n2. Under the service account you've created add the key pair and download it in `.json` format. \n3. Now create the folder within your Google Drive you wish to push the backups in.\n4. Share this folder with the service account (email) from step 1.\n\n### Hooks\n\nThey are listed below.\n\n```python\nHOOKS = ('before_build', 'after_build', 'before_push', 'after_push', \n         'before_pull', 'after_pull', 'before_restore', 'after_restore')\n```\n\nOne can either issue `cobra hooks init` that populates hook files to the default directory. \nOr put the hook files with the names e.g. `before_build.py` or `before_build.sh`. \nFor shell script `chmod +x before_build.sh` is necessary.\n\nCobra searches for `.py` file first if found imports it and execute `hook` fucntion as.\n\n```python\nhook(hook_name=hook_name, hooks_dir=hooks_dir, backup_dir=backup_dir, \n     filename=backup_filename, docker=docker_client)\n```\n\n* `hook_name` is the one from the list above\n* `hooks_dir` the directory where hooks reside\n* `backup_dir` the local backup directory where backup is stored \n* `filename` the backup file name\n* `docker` [DockerClient](https://docker-py.readthedocs.io/en/stable/client.html#docker.client.DockerClient) object\n\nIf `.py` file is not found. The default hook is called that continue searching for `.sh` file.\nIf latter found it's called via `subprocess.check_call()`. With the same params except `docker`.\n\nBy default `cobra` copies and packs the content of a volume. \nTo backup database with tools like `mongodump` or `pg_dump` one may use `before_build` hook\nand `--exclude volume-name` from the processing.\n`before_build` hook may look like this in such a case.\n\n```bash\n#!/usr/bin/env bash\n\n# Stop any containers that mangle database while dumping to have consistent dump\ndocker stop my-excellent-app\n\nMONGO_DUMP_DIR=/tmp/mongodump\nmkdir -p \"${MONGO_DUMP_DIR}\"\nmongodump --archive=\"${MONGO_DUMP_DIR}/mongo-dump-by-hook.tar.gz\" --db=test --gzip mongodb://mongo-container-name:27017\n\nThen start them again\ndocker start my-excellent-app\n```\n\nErrors that are propagated from hooks stop farther processing. \nTo see more details please inspect e2e test sources.\n\n### Default locations\n\nTo find out paths used by cobra one can issue following. \nOn my system I have this output.\n\n```bash\n$ cobra dirs\n/home/q/.local/share/cobra/backup\n/home/q/.cache/cobra\n/home/q/.local/share/cobra/hooks\n```\n\n### Python\n\nMinimum python version is 3.7.\n\n```python\nfrom cobra.api import Api\nfrom cobra.hooks import Hooks\nfrom docker import DockerClient\n\napi = Api(gateway=DockerClient(), hooks=Hooks())\napi.backup_build()\n```\n\nMethod parameters are described in cli help `cobra backup --help` e.g.\n\n## Run tests\n\n```bash\ngit clone https://github.com/yell0w4x/cobra.git\ncd cobra\n./run-tests --unit\n```\n \nThe above runs unit tests. To execute end-to-end tests run is as follows. \nNote that docker must reside in the system.\nTo install it on Ubuntu use `wget -qO- https://get.docker.com | sudo bash`. \nOn Manjaro (Arch) issue `sudo pacman -S docker`.\n\n```bash\n./run-tests --e2e --folder-id goolge-drive-folder-id --key path/to/google-service-account-key.json\n```\nor\n```bash\nGOOGLE_DRIVE_FOLDER_ID=goolge-drive-folder-id GOOGLE_SERVICE_ACC_KEY=path/to/key.json ./run-tests --e2e\n```\n\nThe tests are based on pytest. All the extra arguments are passed to pytest. \nE.g. to have verbose output use `-v` or `-vv`. To show stdout `-s`. \nTo run certain tests use `-k test_name` and etc. For details see the pytest docs.\n\n```bash\n./run-tests --help\nRun cobra unit and e2e tests.\n\nUsage:\n    ./run-tests [OPTIONS] [EXTRA_ARGS]\n\nAll the EXTRA_ARGS are passed to pytest\n\nOptions:\n    --help                Show help message\n    --unit                Run unit tests\n    --e2e                 Run e2e tests\n    --skip-build          Skip building dist files\n    --folder-id FOLDER_ID Google drive folder id to use as remote storage for e2e tests. \n                          If not given read from GOOGLE_DRIVE_FOLDER_ID environment variable.\n    --key KEY_FN          Path to google service account key file in json format\n                          If not given read from GOOGLE_SERVICE_ACC_KEY environment variable.\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yell0w4x/cobra",
    "keywords": "Docker volumes backup",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cobra-archiver",
    "package_url": "https://pypi.org/project/cobra-archiver/",
    "platform": null,
    "project_url": "https://pypi.org/project/cobra-archiver/",
    "project_urls": {
      "Bug Tracker": "https://github.com/yell0w4x/cobra/issues",
      "Homepage": "https://github.com/yell0w4x/cobra"
    },
    "release_url": "https://pypi.org/project/cobra-archiver/0.0.4/",
    "requires_dist": [
      "httplib2 (==0.21.0)",
      "idna (==3.4)",
      "iniconfig (==2.0.0)",
      "markdown-it-py (==2.1.0)",
      "attrs (==22.2.0)",
      "cachetools (==5.3.0)",
      "certifi (==2022.12.7)",
      "charset-normalizer (==3.0.1)",
      "docker (==6.0.1)",
      "exceptiongroup (==1.1.0)",
      "ezenv (==0.92)",
      "freezegun (==1.2.2)",
      "google-api-core (==2.11.0)",
      "google-api-python-client (==2.74.0)",
      "google-auth (==2.16.0)",
      "google-auth-httplib2 (==0.1.0)",
      "google-auth-oauthlib (==0.8.0)",
      "googleapis-common-protos (==1.58.0)",
      "mdurl (==0.1.2)",
      "oauthlib (==3.2.2)",
      "packaging (==23.0)",
      "pluggy (==1.0.0)",
      "protobuf (==4.21.12)",
      "pyasn1 (==0.4.8)",
      "pyasn1-modules (==0.2.8)",
      "Pygments (==2.14.0)",
      "pyparsing (==3.0.9)",
      "pyproject-hooks (==1.0.0)",
      "pytest (==7.2.1)",
      "pytest-lazy-fixture (==0.6.3)",
      "python-dateutil (==2.8.2)",
      "requests (==2.28.2)",
      "requests-oauthlib (==1.3.1)",
      "rich (==13.3.1)",
      "rsa (==4.9)",
      "six (==1.16.0)",
      "tomli (==2.0.1)",
      "uritemplate (==4.1.1)",
      "urllib3 (==1.26.14)",
      "websocket-client (==1.5.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Comprehensive Backing up and Restoration Archiver. Docker volumes, bind mounts and plain directory backup automation tool.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16949621,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8743a8c807f1312cc3a3fc203ed9295090d403222513deb1f83978f32e3f0cff",
          "md5": "2621342f5168194d7f48e3d24adaa22e",
          "sha256": "a887e7755e9f04d61e5c5a0bf52856213fa9033fd94ca8b74ed51d98c68be3ec"
        },
        "downloads": -1,
        "filename": "cobra_archiver-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2621342f5168194d7f48e3d24adaa22e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 25299,
        "upload_time": "2023-02-20T19:20:13",
        "upload_time_iso_8601": "2023-02-20T19:20:13.801741Z",
        "url": "https://files.pythonhosted.org/packages/87/43/a8c807f1312cc3a3fc203ed9295090d403222513deb1f83978f32e3f0cff/cobra_archiver-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2cf7e4dd729c36d6813f99455169b9861a0908e6f6fe35d68dfc1cef151d426",
          "md5": "19c97b931346a9ed0e64d76cac7e1cba",
          "sha256": "a5c699d6f1c6cfd30f848dd93bba94f4c8f9d14ca91b3987874481d7d90e4b0b"
        },
        "downloads": -1,
        "filename": "cobra-archiver-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "19c97b931346a9ed0e64d76cac7e1cba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 23405,
        "upload_time": "2023-02-20T19:20:16",
        "upload_time_iso_8601": "2023-02-20T19:20:16.044096Z",
        "url": "https://files.pythonhosted.org/packages/a2/cf/7e4dd729c36d6813f99455169b9861a0908e6f6fe35d68dfc1cef151d426/cobra-archiver-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b361e3f97fc9bbedc0cf2d159456acc9b153a3f81704d0514e8d3751964a1eb4",
          "md5": "4cc0441fa3e9c7394e185664902347c3",
          "sha256": "e818f9737ffe13d5dddbd56e9c0271b0b1846a1f9851bd89e35968cd25efdbad"
        },
        "downloads": -1,
        "filename": "cobra_archiver-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4cc0441fa3e9c7394e185664902347c3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 25302,
        "upload_time": "2023-02-20T19:23:03",
        "upload_time_iso_8601": "2023-02-20T19:23:03.328573Z",
        "url": "https://files.pythonhosted.org/packages/b3/61/e3f97fc9bbedc0cf2d159456acc9b153a3f81704d0514e8d3751964a1eb4/cobra_archiver-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0edea08dcf171abab6107e8cff19088dc5c9996e196b47754450f321aded1a09",
          "md5": "979a6695dfee82bb3c5d9f569a3b20e7",
          "sha256": "7240e1a3be1d33ce6ebd94ee41a195adfd4eacaac22c28d98f23b0de365b5274"
        },
        "downloads": -1,
        "filename": "cobra-archiver-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "979a6695dfee82bb3c5d9f569a3b20e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 23404,
        "upload_time": "2023-02-20T19:23:04",
        "upload_time_iso_8601": "2023-02-20T19:23:04.824883Z",
        "url": "https://files.pythonhosted.org/packages/0e/de/a08dcf171abab6107e8cff19088dc5c9996e196b47754450f321aded1a09/cobra-archiver-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "100db93fd0fdfc5fdc073382058ff0b1d9663913d96f7f6d7a51e87309e68a19",
          "md5": "ef0a3477e4e44a609de07a643ce6a25c",
          "sha256": "bebc1928d7039eef008fb88f1cc5ff6753a21806bc26e918fc6f0049a0100632"
        },
        "downloads": -1,
        "filename": "cobra_archiver-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef0a3477e4e44a609de07a643ce6a25c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 26278,
        "upload_time": "2023-02-20T20:13:38",
        "upload_time_iso_8601": "2023-02-20T20:13:38.067096Z",
        "url": "https://files.pythonhosted.org/packages/10/0d/b93fd0fdfc5fdc073382058ff0b1d9663913d96f7f6d7a51e87309e68a19/cobra_archiver-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52b6793ca64a69758e68a16ea9a2848e2dbdc2bfea9eeae0aad27a2085b01c11",
          "md5": "55a33ce16a6b14dbd1bb0c19aa2e735f",
          "sha256": "080199322d5cdbb04dfc020ce875f5300bec9311055bdc66167d79b82906b563"
        },
        "downloads": -1,
        "filename": "cobra-archiver-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "55a33ce16a6b14dbd1bb0c19aa2e735f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 25190,
        "upload_time": "2023-02-20T20:13:39",
        "upload_time_iso_8601": "2023-02-20T20:13:39.555148Z",
        "url": "https://files.pythonhosted.org/packages/52/b6/793ca64a69758e68a16ea9a2848e2dbdc2bfea9eeae0aad27a2085b01c11/cobra-archiver-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "effe866dc3c67d0ed1a9f36da0319dfae418ff42915e3ea01acb295cf67db955",
          "md5": "8e8d0eab95c299cfd37dc3d011301eed",
          "sha256": "8aa320d23b1312d7e90e3be987519bd1a50fe12931d7d851c6d8f313ea8210ae"
        },
        "downloads": -1,
        "filename": "cobra_archiver-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e8d0eab95c299cfd37dc3d011301eed",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 26296,
        "upload_time": "2023-02-20T20:29:20",
        "upload_time_iso_8601": "2023-02-20T20:29:20.638836Z",
        "url": "https://files.pythonhosted.org/packages/ef/fe/866dc3c67d0ed1a9f36da0319dfae418ff42915e3ea01acb295cf67db955/cobra_archiver-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11fd96a2c912252acd3facb6cb18516f3f539879c3b60d17723d1b41fbced0a0",
          "md5": "6c9360ca45112de2481cc8aa38ba6737",
          "sha256": "24599efa4435b46795b8941b770a556bb255fd82bc2779ec8f1687537e9d0a8d"
        },
        "downloads": -1,
        "filename": "cobra-archiver-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6c9360ca45112de2481cc8aa38ba6737",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 25211,
        "upload_time": "2023-02-20T20:29:22",
        "upload_time_iso_8601": "2023-02-20T20:29:22.400934Z",
        "url": "https://files.pythonhosted.org/packages/11/fd/96a2c912252acd3facb6cb18516f3f539879c3b60d17723d1b41fbced0a0/cobra-archiver-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "effe866dc3c67d0ed1a9f36da0319dfae418ff42915e3ea01acb295cf67db955",
        "md5": "8e8d0eab95c299cfd37dc3d011301eed",
        "sha256": "8aa320d23b1312d7e90e3be987519bd1a50fe12931d7d851c6d8f313ea8210ae"
      },
      "downloads": -1,
      "filename": "cobra_archiver-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8e8d0eab95c299cfd37dc3d011301eed",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 26296,
      "upload_time": "2023-02-20T20:29:20",
      "upload_time_iso_8601": "2023-02-20T20:29:20.638836Z",
      "url": "https://files.pythonhosted.org/packages/ef/fe/866dc3c67d0ed1a9f36da0319dfae418ff42915e3ea01acb295cf67db955/cobra_archiver-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "11fd96a2c912252acd3facb6cb18516f3f539879c3b60d17723d1b41fbced0a0",
        "md5": "6c9360ca45112de2481cc8aa38ba6737",
        "sha256": "24599efa4435b46795b8941b770a556bb255fd82bc2779ec8f1687537e9d0a8d"
      },
      "downloads": -1,
      "filename": "cobra-archiver-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "6c9360ca45112de2481cc8aa38ba6737",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 25211,
      "upload_time": "2023-02-20T20:29:22",
      "upload_time_iso_8601": "2023-02-20T20:29:22.400934Z",
      "url": "https://files.pythonhosted.org/packages/11/fd/96a2c912252acd3facb6cb18516f3f539879c3b60d17723d1b41fbced0a0/cobra-archiver-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}