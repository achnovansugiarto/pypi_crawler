{
  "info": {
    "author": "Adnan Ahmad",
    "author_email": "viperadnan@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# gdnan\nA Google Drive API wrapper written in python by [@viperadnan](https://viperadnan-git.github.io) with ♥️.\n\n## Project's Base\nThe base of the project taken from lzzy12's repo python-aria-mirror-bot and modified, improved and compiled in a pip package.\n\n### Installing\nInstall using pip\n```sh\npip3 install gdnan\n```\n\n### Usage\n```py\n# Importing Modules\nfrom gdnan import GoogleDrive, Auth, extractId, create_link\n\n# Client ID & Secret Obtained from Google Developer Console\nGooogleDriveClientID = \"9999199991-128shwbnwinpcqv6hn7b29wuww4gmji.apps.googleusercontent.com\"\nGooogleDriveClientSecret = \"2lhkFmsQ0W7wJaua72HwodjZ\"\n\n\n# The below method is only for one time, you cam use saved \n# credentials for later use.\n# Call the Auth module \nauth = Auth(GooogleDriveClientID, GooogleDriveClientSecret)\n\n# Get the Authorization URL\nprint(\"Open this url in browser and enter the received code\")\nprint(auth.get_url())\nreceived_code = input(\"Enter received code: \")\n\n# Exchange received code and get credentials\n# You can store the credentials wherever you want\ncredentials = auth.exchange_code(received_code)\n# Or save it in token.pickle or any other file\n                                    #optional\nauth.exchange_code(received_code, \"token.pickle\")\n\n\n# Now after generating .pickle or credentials you need to use only below steps\n# Authorized via credentials\ngd = GoogleDrive(credentials)\n# Or You can Authorize via .pickle file too\n# and can set the working directory, like for share drive.\nworkdir_id = extractId(\"https://drive.google.com/folderview?id=1Aricl6VpSiMmgFkgUSeTXiQh7WYxW6np\")\n                                 #optional\ngd = GoogleDrive(\"token.pickle\", workdir_id)\n\n# Upload file from local storage\nuploaded_file = gd.upload(\"path/to/file/or/folder/example.txt\")\n# Upload file to custom folder using folder's id               #Optional\nuploaded_file = gd.upload(\"path/to/file/or/folder/example.txt\", \"root\")\nprint(uploaded_file.name)\n>> example.txt\n\n# To get Google Drive url\nprint(uploaded_file.url)\n>> https://drive.google.com/uc?id=10xN4KBjKJXUwIHUv1R5rihbthYuENMUB&export=download\n# Alternate way\nprint(create_link(uploaded_file.id, uploaded_file.mimeType))\n>> https://drive.google.com/uc?id=10xN4KBjKJXUwIHUv1R5rihbthYuENMUB&export=download\n\n# To create a folder named \"Hello World !\"\n#                           # Name       # Parent ID\nfolder = gd.create_folder(\"Hello World!\", workdir_id)\nprint(folder.name)\n>> Hello World!\n\n# Clone/Copy file or folder, you can specify custom folder id by \"folder\" parameter\ncloned_file = gd.clone(uploaded_file.id)\nprint(cloned_file.name)\n>> example.txt\n\n# Move file from one folder to another\ngd.move(cloned_file.id, folder.id)\n\n# Make files public or set permission for the file to publically viewable\ngd.make_public(cloned_file.id)\n\n# Search for the file       #optional    #optional\nfiles, next_page_token = gd.search(uploaded_file.name, limit=2, folder=workdir_id)\nfor file in files:\n    print(file.name)\n>> example.txt\n\n# Move file to trash\ngd.delete(uploaded_file.id)\n# Delete file permanently\ngd.delete(folder.id, True)\n\n# Empty Trash of the users account\ngd.emptyTrash()\n```\n\n#### Using Service Accounts\nIf you want to use service accounts than put a copy of all of your service accounts in a folder and use code below\n```py\nfrom gdnan import GoogleDrive\ngd = GoogleDrive(\"path/to/service/account/folder\", workdir_id)\n```\nthis will automatically rename your service accounts to `0.json 1.json 2.json...` (if not renamed) and automatically switch between service accounts if daily quota exceeded.\n\n#### Testing\nTest code by running [test.py](./test.py) in your terminal with `python3 test.py`, don't forget to change the GooogleDriveClientID and GooogleDriveClientSecret.\n\n### Copyright & License\n- Copyright &copy; 2021 &mdash; [Adnan Ahmad](https://github.com/viperadnan-git)\n- Licensed under the terms of the [GNU General Public License Version 3 &dash; 29 June 2007](./LICENSE)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/viperadnan-git/gdnan/archive/v1.0.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/viperadnan-git/gdnan",
    "keywords": "GoogleDrive,GoogleDriveAPI,GDriveAPI,Google,Drive,Wrapper,GDrive",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gdnan",
    "package_url": "https://pypi.org/project/gdnan/",
    "platform": "",
    "project_url": "https://pypi.org/project/gdnan/",
    "project_urls": {
      "Download": "https://github.com/viperadnan-git/gdnan/archive/v1.0.0.tar.gz",
      "Homepage": "https://github.com/viperadnan-git/gdnan"
    },
    "release_url": "https://pypi.org/project/gdnan/1.0.0/",
    "requires_dist": [
      "google-api-python-client (<2.0.0,>=1.12.8)",
      "google-auth-httplib2 (<0.1.0,>=0.0.3)",
      "oauth2client",
      "tenacity"
    ],
    "requires_python": ">=3.6",
    "summary": "Google Drive API wrapper written in python 3.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10358426,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f937551f9276bb4883bc65268fa90806492c82a3a18f96a359bd07264afdcf5",
          "md5": "aa16deed03b72eb6316b1d6462624858",
          "sha256": "021916935b9a0a8e29aa0fee30f8550f13f48ea83338359a3e29419948a3be2d"
        },
        "downloads": -1,
        "filename": "gdnan-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa16deed03b72eb6316b1d6462624858",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20125,
        "upload_time": "2021-05-14T17:20:49",
        "upload_time_iso_8601": "2021-05-14T17:20:49.264837Z",
        "url": "https://files.pythonhosted.org/packages/4f/93/7551f9276bb4883bc65268fa90806492c82a3a18f96a359bd07264afdcf5/gdnan-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a930ca47a884b5f9fd92e1d7757433cb2851b554a01628f5ff5d8578b6a5e6d",
          "md5": "b4a18f7f9014f3199d19aad0f5cc9f4e",
          "sha256": "53edcda22955b382e67033c471274a732b3456ef5b5440f8941e8c62d6b9bbd1"
        },
        "downloads": -1,
        "filename": "gdnan-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b4a18f7f9014f3199d19aad0f5cc9f4e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8097,
        "upload_time": "2021-05-14T17:20:50",
        "upload_time_iso_8601": "2021-05-14T17:20:50.564627Z",
        "url": "https://files.pythonhosted.org/packages/3a/93/0ca47a884b5f9fd92e1d7757433cb2851b554a01628f5ff5d8578b6a5e6d/gdnan-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4f937551f9276bb4883bc65268fa90806492c82a3a18f96a359bd07264afdcf5",
        "md5": "aa16deed03b72eb6316b1d6462624858",
        "sha256": "021916935b9a0a8e29aa0fee30f8550f13f48ea83338359a3e29419948a3be2d"
      },
      "downloads": -1,
      "filename": "gdnan-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aa16deed03b72eb6316b1d6462624858",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 20125,
      "upload_time": "2021-05-14T17:20:49",
      "upload_time_iso_8601": "2021-05-14T17:20:49.264837Z",
      "url": "https://files.pythonhosted.org/packages/4f/93/7551f9276bb4883bc65268fa90806492c82a3a18f96a359bd07264afdcf5/gdnan-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a930ca47a884b5f9fd92e1d7757433cb2851b554a01628f5ff5d8578b6a5e6d",
        "md5": "b4a18f7f9014f3199d19aad0f5cc9f4e",
        "sha256": "53edcda22955b382e67033c471274a732b3456ef5b5440f8941e8c62d6b9bbd1"
      },
      "downloads": -1,
      "filename": "gdnan-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b4a18f7f9014f3199d19aad0f5cc9f4e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8097,
      "upload_time": "2021-05-14T17:20:50",
      "upload_time_iso_8601": "2021-05-14T17:20:50.564627Z",
      "url": "https://files.pythonhosted.org/packages/3a/93/0ca47a884b5f9fd92e1d7757433cb2851b554a01628f5ff5d8578b6a5e6d/gdnan-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}