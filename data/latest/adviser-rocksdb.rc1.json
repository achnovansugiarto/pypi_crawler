{
  "info": {
    "author": "Example Author",
    "author_email": "author@example.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Rocksdb Tuning Advisor\n\n## Motivation\n\nThe performance of Rocksdb is contingent on its tuning. However,\nbecause of the complexity of its underlying technology and a large number of\nconfigurable parameters, a good configuration is sometimes hard to obtain. The aim of\nthe python command-line tool, Rocksdb Advisor, is to automate the process of\nsuggesting improvements in the configuration based on advice from Rocksdb\nexperts.\n\n## Overview\n\nExperts share their wisdom as rules comprising of conditions and suggestions in the INI format (refer\n[rules.ini](https://github.com/facebook/rocksdb/blob/master/tools/advisor/advisor/rules.ini)).\nUsers provide the Rocksdb configuration that they want to improve upon (as the\nfamiliar Rocksdb OPTIONS file â€”\n[example](https://github.com/facebook/rocksdb/blob/master/examples/rocksdb_option_file_example.ini))\nand the path of the file which contains Rocksdb logs and statistics.\nThe [Advisor](https://github.com/facebook/rocksdb/blob/master/tools/advisor/advisor/rule_parser_example.py)\ncreates appropriate DataSource objects (for Rocksdb\n[logs](https://github.com/facebook/rocksdb/blob/master/tools/advisor/advisor/db_log_parser.py),\n[options](https://github.com/facebook/rocksdb/blob/master/tools/advisor/advisor/db_options_parser.py),\n[statistics](https://github.com/facebook/rocksdb/blob/master/tools/advisor/advisor/db_stats_fetcher.py) etc.)\nand provides them to the [Rules Engine](https://github.com/facebook/rocksdb/blob/master/tools/advisor/advisor/rule_parser.py).\nThe Rules uses rules from experts to parse data-sources and trigger appropriate rules.\nThe Advisor's output gives information about which rules were triggered,\nwhy they were triggered and what each of them suggests. Each suggestion\nprovided by a triggered rule advises some action on a Rocksdb\nconfiguration option, for example, increase CFOptions.write_buffer_size,\nset bloom_bits to 2 etc.\n\n## Usage\n\n### Prerequisites\nThe tool needs the following to run:\n* python3\n\n### Running the tool\nAn example command to run the tool:\n\n```shell\ncd rocksdb/tools/advisor\npython3 -m advisor.rule_parser_example --rules_spec=advisor/rules.ini --rocksdb_options=test/input_files/OPTIONS-000005 --log_files_path_prefix=test/input_files/LOG-0 --stats_dump_period_sec=20\n```\n\n### Command-line arguments\n\nMost important amongst all the input that the Advisor needs, are the rules\nspec and starting Rocksdb configuration. The configuration is provided as the\nfamiliar Rocksdb Options file (refer [example](https://github.com/facebook/rocksdb/blob/master/examples/rocksdb_option_file_example.ini)).\nThe Rules spec is written in the INI format (more details in\n[rules.ini](https://github.com/facebook/rocksdb/blob/master/tools/advisor/advisor/rules.ini)).\n\nIn brief, a Rule is made of conditions and is triggered when all its\nconstituent conditions are triggered. When triggered, a Rule suggests changes\n(increase/decrease/set to a suggested value) to certain Rocksdb options that\naim to improve Rocksdb performance. Every Condition has a 'source' i.e.\nthe data source that would be checked for triggering that condition.\nFor example, a log Condition (with 'source=LOG') is triggered if a particular\n'regex' is found in the Rocksdb LOG files. As of now the Rules Engine\nsupports 3 types of Conditions (and consequently data-sources):\nLOG, OPTIONS, TIME_SERIES. The TIME_SERIES data can be sourced from the\nRocksdb [statistics](https://github.com/facebook/rocksdb/blob/master/include/rocksdb/statistics.h)\nor [perf context](https://github.com/facebook/rocksdb/blob/master/include/rocksdb/perf_context.h).\n\nFor more information about the remaining command-line arguments, run:\n\n```shell\ncd rocksdb/tools/advisor\npython3 -m advisor.rule_parser_example --help\n```\n\n### Sample output\n\nHere, a Rocksdb log-based rule has been triggered:\n\n```shell\nRule: stall-too-many-memtables\nLogCondition: stall-too-many-memtables regex: Stopping writes because we have \\d+ immutable memtables \\(waiting for flush\\), max_write_buffer_number is set to \\d+\nSuggestion: inc-bg-flush option : DBOptions.max_background_flushes action : increase suggested_values : ['2']\nSuggestion: inc-write-buffer option : CFOptions.max_write_buffer_number action : increase\nscope: col_fam:\n{'default'}\n```\n\n## Running the tests\n\nTests for the code have been added to the\n[test/](https://github.com/facebook/rocksdb/tree/master/tools/advisor/test)\ndirectory. For example, to run the unit tests for db_log_parser.py:\n\n```shell\ncd rocksdb/tools/advisor\npython3 -m unittest -v test.test_db_log_parser\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/BaronStack/Rocksdb-Adviser.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Adviser-Rocksdb",
    "package_url": "https://pypi.org/project/Adviser-Rocksdb/",
    "platform": "",
    "project_url": "https://pypi.org/project/Adviser-Rocksdb/",
    "project_urls": {
      "Bug Tracker": "https://github.com/BaronStack/Rocksdb-Adviser/issues",
      "Homepage": "https://github.com/BaronStack/Rocksdb-Adviser.git"
    },
    "release_url": "https://pypi.org/project/Adviser-Rocksdb/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Rocksdb's log analyzer",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9592361,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6aefcf55e88694180f063e698522c62c417a5638a41d728a1de0826fa592838d",
          "md5": "17454a731eba2a8c44ee088bf8ba6113",
          "sha256": "c328d5df56a48b3f2285fc27233a7834c82c9e5dd1418ecb449fa01d67b420de"
        },
        "downloads": -1,
        "filename": "Adviser_Rocksdb-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "17454a731eba2a8c44ee088bf8ba6113",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 41025,
        "upload_time": "2021-03-02T13:18:58",
        "upload_time_iso_8601": "2021-03-02T13:18:58.602399Z",
        "url": "https://files.pythonhosted.org/packages/6a/ef/cf55e88694180f063e698522c62c417a5638a41d728a1de0826fa592838d/Adviser_Rocksdb-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8c0f5e964f91cbeb565a6f5ff234ba86fca2e0aef41689519ceea7f51ec9760",
          "md5": "917e139f5501b4473cd88beca8e2d2c5",
          "sha256": "20c543ac1def9a9b03f82db72c0e5d949fc7942ee05dbfbbfba6991659e9f78b"
        },
        "downloads": -1,
        "filename": "Adviser-Rocksdb-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "917e139f5501b4473cd88beca8e2d2c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31285,
        "upload_time": "2021-03-02T13:19:00",
        "upload_time_iso_8601": "2021-03-02T13:19:00.248978Z",
        "url": "https://files.pythonhosted.org/packages/e8/c0/f5e964f91cbeb565a6f5ff234ba86fca2e0aef41689519ceea7f51ec9760/Adviser-Rocksdb-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6aefcf55e88694180f063e698522c62c417a5638a41d728a1de0826fa592838d",
        "md5": "17454a731eba2a8c44ee088bf8ba6113",
        "sha256": "c328d5df56a48b3f2285fc27233a7834c82c9e5dd1418ecb449fa01d67b420de"
      },
      "downloads": -1,
      "filename": "Adviser_Rocksdb-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "17454a731eba2a8c44ee088bf8ba6113",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 41025,
      "upload_time": "2021-03-02T13:18:58",
      "upload_time_iso_8601": "2021-03-02T13:18:58.602399Z",
      "url": "https://files.pythonhosted.org/packages/6a/ef/cf55e88694180f063e698522c62c417a5638a41d728a1de0826fa592838d/Adviser_Rocksdb-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e8c0f5e964f91cbeb565a6f5ff234ba86fca2e0aef41689519ceea7f51ec9760",
        "md5": "917e139f5501b4473cd88beca8e2d2c5",
        "sha256": "20c543ac1def9a9b03f82db72c0e5d949fc7942ee05dbfbbfba6991659e9f78b"
      },
      "downloads": -1,
      "filename": "Adviser-Rocksdb-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "917e139f5501b4473cd88beca8e2d2c5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 31285,
      "upload_time": "2021-03-02T13:19:00",
      "upload_time_iso_8601": "2021-03-02T13:19:00.248978Z",
      "url": "https://files.pythonhosted.org/packages/e8/c0/f5e964f91cbeb565a6f5ff234ba86fca2e0aef41689519ceea7f51ec9760/Adviser-Rocksdb-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}