{
  "info": {
    "author": "aachurin",
    "author_email": "aachurin@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "> Despite the fact that this code is distributed under the MIT License, \n> IT IS PROHIBITED to use, copy, modify, merge, publish, distribute, sublicense,\n> and/or sell copies of the Software for any commercial or non-commercial purposes\n> by Jet Brains and any of its subsidiaries, parent organization or affiliates.\n\n<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/promisedio/promise/main/logo.svg\" alt=\"PromisedIO\" />\n</p>\n<p align=\"center\">\n    <b>PromisedIO</b>\n</p>\n\n###### PromisedIO is free and open source software released under the permissive MIT license.\n\nYou can read about promises [here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\n\n<!--- template:[promise] -->\n# promise module\n#### clearfreelists\n```python\nclearfreelists() -> None\n```\nClear all freelists.\n\n#### deferred\n```python\ndeferred() -> Deferred\n```\nCreate new [Deferred](#deferred) object.\n\n#### exec_async\n```python\nexec_async(coro: Coroutine, context: Any = None) -> None\n```\nStart new coroutine and set the `context` for the new coroutine.\n\n#### get_context\n```python\nget_context() -> Any\n```\nGet context of current corroutine.\n\n#### process_promise_chain\n```python\nprocess_promise_chain() -> int\n```\nProcess all scheduled (resolved or rejected) promises.\n\nReturns active promise count.\n\n#### run_forever\n```python\nrun_forever() -> None\n```\nStart simple event loop.\n\n#### setfreelistlimits\n```python\nsetfreelistlimits(promise_limit: int = -1, promiseiter_limit: int = -1, deferred_limit: int = -1, coroutine_limit: int = -1) -> None\n```\nUpdate freelist limits. Default limit for each type is 1024.\n\n### Deferred\n#### Deferred.promise\n```python\nDeferred.promise() -> Promise\n```\nGet related [Promise](#promise) object.\n\n#### Deferred.reject\n```python\nDeferred.reject(value: Exception) -> None\n```\nReject related [Promise](#promise) object with the given exception `value`.\n\n#### Deferred.resolve\n```python\nDeferred.resolve(value: Any) -> None\n```\nResolve related [Promise](#promise) object with the given `value`.\n\n### Lock\n#### Lock.__new__\n```python\nLock.__new__() -> Any\n```\nCreate new [Lock](#lock) object.\n\n#### Lock.acquire\n```python\nLock.acquire() -> Promise\n```\nAcquire the lock.\n\n#### Lock.release\n```python\nLock.release() -> Promise\n```\nRelease the lock.\n\n### Promise\n#### Promise.catch\n```python\nPromise.catch(rejected: Callable) -> Promise\n```\nThe same as `.then(None, rejected)`\n\n#### Promise.then\n```python\nPromise.then(fulfilled: Callable = None, rejected: Callable = None) -> Promise\n```\nCreate new [Promise](#promise).\n\nIt takes up to two arguments: callback functions for the success and failure cases of the promise.\n\n\n<!--- end:[promise] -->\n\n<!--- template:[PROMISE_API] -->\n<!--- end:[PROMISE_API] -->",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/promisedio/promise",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "promisedio-promise",
    "package_url": "https://pypi.org/project/promisedio-promise/",
    "platform": null,
    "project_url": "https://pypi.org/project/promisedio-promise/",
    "project_urls": {
      "Homepage": "https://github.com/promisedio/promise",
      "Repository": "https://github.com/promisedio/promise"
    },
    "release_url": "https://pypi.org/project/promisedio-promise/1.0.23/",
    "requires_dist": null,
    "requires_python": ">=3.10,<4.0",
    "summary": "High-performance promise implementation for Python",
    "version": "1.0.23",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13117612,
  "releases": {
    "1.0.23": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c92040664601b739bd409d324b72fd2240e0a69f1a8542ff3d491c4e51f5d202",
          "md5": "223a06c0627a016ccf604eaf30b33ff7",
          "sha256": "7605b5e460a9529b52fe6b3876ea0b1e78acf60b381629eead09683bb8401494"
        },
        "downloads": -1,
        "filename": "promisedio_promise-1.0.23-cp310-cp310-macosx_12_0_x86_64.whl",
        "has_sig": false,
        "md5_digest": "223a06c0627a016ccf604eaf30b33ff7",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.10,<4.0",
        "size": 82433,
        "upload_time": "2022-03-08T21:25:27",
        "upload_time_iso_8601": "2022-03-08T21:25:27.616213Z",
        "url": "https://files.pythonhosted.org/packages/c9/20/40664601b739bd409d324b72fd2240e0a69f1a8542ff3d491c4e51f5d202/promisedio_promise-1.0.23-cp310-cp310-macosx_12_0_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e11e04995ed7d2a8b6ddc81063f80ba33e12a52fc49f4184a3fbd266e89c87da",
          "md5": "7b755d2c3938640082a84821a8e5869e",
          "sha256": "603dbbcbe8043d98386be1fb58eb5deaa4b7aa55efb5b01ac1fca6ef8ab0c803"
        },
        "downloads": -1,
        "filename": "promisedio-promise-1.0.23.tar.gz",
        "has_sig": false,
        "md5_digest": "7b755d2c3938640082a84821a8e5869e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 16742,
        "upload_time": "2022-03-08T21:25:25",
        "upload_time_iso_8601": "2022-03-08T21:25:25.922969Z",
        "url": "https://files.pythonhosted.org/packages/e1/1e/04995ed7d2a8b6ddc81063f80ba33e12a52fc49f4184a3fbd266e89c87da/promisedio-promise-1.0.23.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c92040664601b739bd409d324b72fd2240e0a69f1a8542ff3d491c4e51f5d202",
        "md5": "223a06c0627a016ccf604eaf30b33ff7",
        "sha256": "7605b5e460a9529b52fe6b3876ea0b1e78acf60b381629eead09683bb8401494"
      },
      "downloads": -1,
      "filename": "promisedio_promise-1.0.23-cp310-cp310-macosx_12_0_x86_64.whl",
      "has_sig": false,
      "md5_digest": "223a06c0627a016ccf604eaf30b33ff7",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.10,<4.0",
      "size": 82433,
      "upload_time": "2022-03-08T21:25:27",
      "upload_time_iso_8601": "2022-03-08T21:25:27.616213Z",
      "url": "https://files.pythonhosted.org/packages/c9/20/40664601b739bd409d324b72fd2240e0a69f1a8542ff3d491c4e51f5d202/promisedio_promise-1.0.23-cp310-cp310-macosx_12_0_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e11e04995ed7d2a8b6ddc81063f80ba33e12a52fc49f4184a3fbd266e89c87da",
        "md5": "7b755d2c3938640082a84821a8e5869e",
        "sha256": "603dbbcbe8043d98386be1fb58eb5deaa4b7aa55efb5b01ac1fca6ef8ab0c803"
      },
      "downloads": -1,
      "filename": "promisedio-promise-1.0.23.tar.gz",
      "has_sig": false,
      "md5_digest": "7b755d2c3938640082a84821a8e5869e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 16742,
      "upload_time": "2022-03-08T21:25:25",
      "upload_time_iso_8601": "2022-03-08T21:25:25.922969Z",
      "url": "https://files.pythonhosted.org/packages/e1/1e/04995ed7d2a8b6ddc81063f80ba33e12a52fc49f4184a3fbd266e89c87da/promisedio-promise-1.0.23.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}