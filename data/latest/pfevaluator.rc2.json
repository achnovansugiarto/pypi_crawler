{
  "info": {
    "author": "Thieu",
    "author_email": "nguyenthieu2102@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Benchmark",
      "Topic :: Utilities"
    ],
    "description": "# pfevaluator: A library for evaluating performance metrics of Pareto fronts in multiple/many objective optimization problems\n\n[![GitHub release](https://img.shields.io/badge/release-1.1.0-yellow.svg)]()\n[![](https://img.shields.io/badge/python-3.7+-orange.svg)](https://www.python.org/downloads/release/python-370/)\n[![Wheel](https://img.shields.io/pypi/wheel/gensim.svg)](https://pypi.python.org/pypi/pfevaluator) \n[![PyPI version](https://badge.fury.io/py/permetrics.svg)](https://badge.fury.io/py/pfevaluator)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n\n\n---\n> \"Knowledge is power, sharing it is the premise of progress in life. It seems like a burden to someone, but it is the only way to achieve immortality.\"\n>  --- [Thieu Nguyen](https://www.researchgate.net/profile/Thieu_Nguyen6)\n---\n\n## Introduction\n\n\n### Dependencies\n* Python (>= 3.6)\n* Numpy (>= 1.18.1)\n* pygmo (>= 2.13.0) \n\n### User installation\nInstall the [current PyPI release](https://pypi.python.org/pypi/pfevaluator):\n```bash\npip install pfevaluator     \n```\n\nOr install the development version from GitHub:\n```bash\npip install git+https://github.com/thieu1995/pfevaluator\n```\n\n### Pareto front Performance Metrics\n\n##### Closeness: Metrics Measuring the Closeness of the Solutions to the True Pareto Front\n1. GD: Generational Distance\n2. IGD: Inverted Generational Distance\n3. MPFE: Maximum Pareto Front Error\n\n##### Closeness - Diversity: Metrics Measuring the Closeness of the Solutions to the True Pareto Front\n1. HV: Hyper Volume (Using Different Library)\n2. HAR: Hyper Area Ratio (Using Different Library)\n\n##### Distribution: Metrics Focusing on Distribution of the Solutions\n1. UD: Uniform Distribution\n2. S: Spacing\n3. STE: Spacing To Extend\n4. NDC: Number of Distinct Choices (Not Implemented Yet)\n\n##### Ratio: Metrics Assessing the Number of Pareto Optimal Solutions in the Set\n1. RNI: Ratio of Non-dominated Individuals\n2. ER: Error Ratio\n3. ONVG: Overall Non-dominated Vector Generation\n4. PDI: Pareto Dominance Indicator (Not Implemented Yet)\n\n##### Spread: Metrics Concerning Spread of the Solutions\n1. MS: Maximum Spread \n\n\n### Examples\n```code \n\n+ front: the file contains class Metric for evaluating all posible solution (population of obtained fronts).\n+ pfront (Pareto front): the file contains class Metric for evaluating the obtained front from each test case.\n+ tpfront: (True pareto front): the file contains class Metric for evaluating the obtained front and True pareto front\n (Reference front). Means, you need to pass the Reference front in this class.\n\n+ True pareto front (Reference front) can be obtained by:\n    1) You provide it (If you know the True Pareto front for your problem)\n    2) Calculate from all possible fronts obtained from all test case.\n        + Assumption you have N1 algorithms to test. \n        + Each algorithm give you a Obtained front. \n        + Each algorithm you run N2 independent trials --> Number of all possible fronts: N1 * N2 \n        + Pass all N1*N2 front in our function to calculate the Non-donminated Solutions (Reference front\n - Approximate Pareto front - True Pareto front)\n\n\nimport pfevaluator\n\n## Some avaiable performance metrics for evaluate each type of Pareto front.\npfront_metrics = [\"UD\", \"NDC\"]\ntpfront_metrics = [\"ER\", \"ONVG\", \"MS\", \"GD\", \"IDG\", \"MPFE\", \"S\", \"STE\"]\nvolume_metrics = [\"HV\", \"HAR\"]\n\npm = pfevaluator.metric_pfront(obtained_front, pfront_metrics)              # Evaluate for each algorithm in each trial\ntm = pfevaluator.metric_tpfront(obtained_front, reference_front, tpfront_metrics)        # Same above\nvm = pfevaluator.metric_volume(obtained_front, reference_front, volume_metrics, None, all_fronts=matrix_fitness)\n\n## obtained_front: is your front you found in each test case (each trial of each algorithm)\n## reference_front (True Pareto front): is your True Pareto front of your problem.\n##      If you don't know your True Pareto front, do the above step to get it from population of obtained fronts.\n##      Using this function: reference_front = pfevaluator.find_reference_front(matrix_fitness)\n##          matrix_fitness is all of your fronts in all test cases.\n\n## The results is dict such as:     pm = { \"UD\": 0.2, \"NDC\": 0.1 } \n\n```\n\n* The full test case in the file: examples/full.py\n\n\n### Important links\n\n* Official source code repo: https://github.com/thieu1995/pfevaluator\n* Download releases: https://pypi.org/project/pfevaluator/\n* Issue tracker: https://github.com/thieu1995/pfevaluator/issues\n* Change log: https://github.com/thieu1995/pfevaluator/blob/master/ChangeLog.md\n\n* This project also related to my another projects which are \"meta-heuristics\" and \"neural-network\", check it here\n    * https://github.com/thieu1995/opfunu\n    * https://github.com/thieu1995/metaheuristics\n    * https://github.com/thieu1995/mealpy\n    * https://github.com/thieu1995/permetrics\n    * https://github.com/chasebk\n\n## Contributions \n\n### Citation\n+ If you use pfevaluator in your project, please cite my works: \n```code \n@article{nguyen2019efficient,\n  title={Efficient Time-Series Forecasting Using Neural Network and Opposition-Based Coral Reefs Optimization},\n  author={Nguyen, Thieu and Nguyen, Tu and Nguyen, Binh Minh and Nguyen, Giang},\n  journal={International Journal of Computational Intelligence Systems},\n  volume={12},\n  number={2},\n  pages={1144--1161},\n  year={2019},\n  publisher={Atlantis Press}\n}\n```\n\n### Documents:\n\n1. Yen, G. G., & He, Z. (2013). Performance metric ensemble for multiobjective evolutionary algorithms. IEEE Transactions on Evolutionary Computation, 18(1), 131-144.\n2. Panagant, N., Pholdee, N., Bureerat, S., Yildiz, A. R., & Mirjalili, S. (2021). A Comparative Study of Recent Multi-objective Metaheuristics for Solving Constrained Truss Optimisation Problems. Archives of Computational Methods in Engineering, 1-17.\n3. Knowles, J., & Corne, D. (2002, May). On metrics for comparing nondominated sets. In Proceedings of the 2002 Congress on Evolutionary Computation. CEC'02 (Cat. No. 02TH8600) (Vol. 1, pp. 711-716). IEEE.\n4. Yen, G. G., & He, Z. (2013). Performance metric ensemble for multiobjective evolutionary algorithms. IEEE Transactions on Evolutionary Computation, 18(1), 131-144.\n5. Guerreiro, A. P., Fonseca, C. M., & Paquete, L. (2020). The hypervolume indicator: Problems and algorithms. arXiv preprint arXiv:2005.00515.\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/thieu1995/pfevaluator/archive/v1.1.0.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/thieu1995/pfevaluator",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pfevaluator",
    "package_url": "https://pypi.org/project/pfevaluator/",
    "platform": "",
    "project_url": "https://pypi.org/project/pfevaluator/",
    "project_urls": {
      "Download": "https://github.com/thieu1995/pfevaluator/archive/v1.1.0.zip",
      "Homepage": "https://github.com/thieu1995/pfevaluator"
    },
    "release_url": "https://pypi.org/project/pfevaluator/1.1.0/",
    "requires_dist": [
      "numpy (>=1.18.1)",
      "pygmo (>=2.13.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "pfevaluator: A library for evaluating performance metrics of Pareto fronts in multiple/many objective optimization problems",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9334867,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06112e9622b6925547dd2b9e50d559ee02b3ff95a2839ca9139f2999ada69338",
          "md5": "8736e71aeb3d03e387e75d7ab149692e",
          "sha256": "2e5b8c676c212d3d8be3975cf53050799d3c042677e07100cbe7648757120eff"
        },
        "downloads": -1,
        "filename": "pfevaluator-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8736e71aeb3d03e387e75d7ab149692e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13419,
        "upload_time": "2021-02-03T08:36:45",
        "upload_time_iso_8601": "2021-02-03T08:36:45.584309Z",
        "url": "https://files.pythonhosted.org/packages/06/11/2e9622b6925547dd2b9e50d559ee02b3ff95a2839ca9139f2999ada69338/pfevaluator-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "360433aa1f6a3e040ce347a63097f1a16e0e141f28bf4c229ba728e75d0a79c2",
          "md5": "ddba5672f5685139396abe3512fdbb16",
          "sha256": "dad3919a05e4e77efd199e3958cfab1fdb4a2087e590d18533ee850851f11325"
        },
        "downloads": -1,
        "filename": "pfevaluator-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ddba5672f5685139396abe3512fdbb16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12166,
        "upload_time": "2021-02-03T08:36:50",
        "upload_time_iso_8601": "2021-02-03T08:36:50.006803Z",
        "url": "https://files.pythonhosted.org/packages/36/04/33aa1f6a3e040ce347a63097f1a16e0e141f28bf4c229ba728e75d0a79c2/pfevaluator-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8888a6a3ee1123b8daf566c204e055db3721ff293a73922b492c9c3deae43c0c",
          "md5": "93b048ff0c7d73de495a4ca111a311c8",
          "sha256": "9af77aea57430045f4776f92e93619f6587d2024b25c1b2ab2a66d8f3ec611ec"
        },
        "downloads": -1,
        "filename": "pfevaluator-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93b048ff0c7d73de495a4ca111a311c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 64319,
        "upload_time": "2021-02-06T02:50:07",
        "upload_time_iso_8601": "2021-02-06T02:50:07.122043Z",
        "url": "https://files.pythonhosted.org/packages/88/88/a6a3ee1123b8daf566c204e055db3721ff293a73922b492c9c3deae43c0c/pfevaluator-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f326c26ef3438a28fe23d3f6575245689b4c8276ce81d338f3209c8cd840bcf",
          "md5": "bb426f44717c68476a9dfd0d40032576",
          "sha256": "80104822099bf1c70bb69b265ff37ec8d975baf3c881caeefafc1c7afb300e22"
        },
        "downloads": -1,
        "filename": "pfevaluator-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bb426f44717c68476a9dfd0d40032576",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 53846,
        "upload_time": "2021-02-06T02:50:08",
        "upload_time_iso_8601": "2021-02-06T02:50:08.576510Z",
        "url": "https://files.pythonhosted.org/packages/3f/32/6c26ef3438a28fe23d3f6575245689b4c8276ce81d338f3209c8cd840bcf/pfevaluator-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8888a6a3ee1123b8daf566c204e055db3721ff293a73922b492c9c3deae43c0c",
        "md5": "93b048ff0c7d73de495a4ca111a311c8",
        "sha256": "9af77aea57430045f4776f92e93619f6587d2024b25c1b2ab2a66d8f3ec611ec"
      },
      "downloads": -1,
      "filename": "pfevaluator-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "93b048ff0c7d73de495a4ca111a311c8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 64319,
      "upload_time": "2021-02-06T02:50:07",
      "upload_time_iso_8601": "2021-02-06T02:50:07.122043Z",
      "url": "https://files.pythonhosted.org/packages/88/88/a6a3ee1123b8daf566c204e055db3721ff293a73922b492c9c3deae43c0c/pfevaluator-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3f326c26ef3438a28fe23d3f6575245689b4c8276ce81d338f3209c8cd840bcf",
        "md5": "bb426f44717c68476a9dfd0d40032576",
        "sha256": "80104822099bf1c70bb69b265ff37ec8d975baf3c881caeefafc1c7afb300e22"
      },
      "downloads": -1,
      "filename": "pfevaluator-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bb426f44717c68476a9dfd0d40032576",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 53846,
      "upload_time": "2021-02-06T02:50:08",
      "upload_time_iso_8601": "2021-02-06T02:50:08.576510Z",
      "url": "https://files.pythonhosted.org/packages/3f/32/6c26ef3438a28fe23d3f6575245689b4c8276ce81d338f3209c8cd840bcf/pfevaluator-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}