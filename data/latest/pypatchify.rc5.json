{
  "info": {
    "author": "Niclas Doll",
    "author_email": "niclas@amazonis.net",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: GPU :: NVIDIA CUDA",
      "Intended Audience :: Science/Research",
      "License :: Freely Distributable",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Image Processing"
    ],
    "description": "# PyPatchify\n\n![Tests Master](https://github.com/ndoll1998/patchify/workflows/Tests/badge.svg)\n![Publish PyPI](https://github.com/ndoll1998/patchify/workflows/PyPI/badge.svg)\n\nFast and easy image and n-dimensional volume patchification\n\n## Install and Requirements\n\nThe package can be installed from [PyPI](https://pypi.org/project/pypatchify/):\n\n```bash\npip install pypatchify\n```\n\nIt supports both numpy arrays and pytorch tensors. However pytorch is not strictly required. The only necessary dependency is:\n\n - numpy >= 1.21.5\n\nTo install all dependencies (including pytorch and pytest) run the following\n\n```bash\npython -m pip install requirements.txt\n```\n\n## Hello World\n\nThe library is designed to be easy to use while keeping the computational overhead as low as possible. The following simple example shows how to patchify and unpatchify a batch of rgb images:\n\n```python\nimport pypatchify\nimport numpy as np\n# create 16 random rgb images\nimgs = np.random.uniform(0, 1, size=(16, 3, 256, 256))\n# patchify into non-overlapping blocks of size 64x64\npatched_imgs = pypatchify.patchify(imgs, (64, 64))\n# re-create the original images from the patches\nimgs = pypatchify.unpatchify(patched_imgs, (256, 256))\n```\n\nIn case the created patches are further processed, for example by passing them through a neural network, it might make sense to collapse the different patches into a batch size as follows:\n\n```python\nimgs = np.random.uniform(0, 1, size=(16, 3, 256, 256))\n# patchify into non-overlapping blocks of size 64x64\npatched_imgs = pypatchify.patchify_to_batches(imgs, (64, 64), batch_dim=0)\n# re-create the original images from the patches\nimgs = pypatchify.unpatchify_from_batches(patched_imgs, (256, 256), batch_dim=0)\n```\n\nNote that the implementations are not restricted to 2d images only but can patchify and unpatchify any multi-dimensional volume:\n\n```python\nvols = np.random.uniform(0, 1, size=(16, 32, 32, 64, 64))\n# patchify into non-overlapping blocks of size 61x8x32x16\npatched_vols = pypatchify.patchify_to_batches(vols, (16, 8, 32, 16), batch_dim=0)\n# re-create the original images from the patches\nvols = pypatchify.unpatchify_from_batches(patched_vols, (32, 32, 64, 64), batch_dim=0)\n```\n\n## GPU-Acceleration and Differentiable\n\nAlso when working with neural networks its probably more convenient to directly work with pytorch tensors. This can be done by simply passing the torch tensors to the function at hand. Note that all implementations allow gpu-tensors which drastically decrease the runtime of any of the patchification functions. Also there is no need to move memory between cpu and gpu.\n\n```python\nimport torch\nimport pypatchify\n# create a random img tensor and move to cuda\nimgs = torch.rand(16, 3, 256, 256).cuda()\n# patchify into non-overlapping blocks of size 64x64\npatched_imgs = pypatchify.patchify_to_batches(imgs, (64, 64), batch_dim=0)\n# re-create the original images from the patches\nimgs = pypatchify.unpatchify_from_batches(patched_imgs, (256, 256), batch_dim=0)\n```\n\nFurthermore all the functions are completly differentiable allowing for gradient propagation through patchification and un-patchification.\n\n```python\n# let f and g be differentiable functions\n# possibly neural networks\nf = torch.tanh # processes the images\ng = torch.sigmoid # processes the patched images\n# create a random img tensor and move to cuda\nimgs = torch.rand(16, 3, 256, 256, requires_grad=True)\n# apply functions and patchify\npatched_imgs = pypatchify.patchify_to_batches(f(imgs), (64, 64), batch_dim=0)\nunpatched_imgs = pypatchify.unpatchify_from_batches(g(patched_imgs), (256, 256), batch_dim=0)\n# compute some kind of loss and backpropagate\nloss = unpatched_imgs.sum() # dummy loss\nloss.backward()\n# check gradients in input imgs\ngrads = imgs.grad # should be all ones\n```\n\n## Other Frameworks\n\nThe library makes it very easy to support other frameworks besides numpy and pytorch. All work that needs to be done is to implement the following few functions:\n\n - shape: get the shape of a given tensor\n - strides: get the strides of the underlying memory\n - reshape: reshape a given tensor to a given shape\n - transpose: permute the dimensions of a given tensor to a given permuation\n - as_strided: apply a given shape and strides to the memory of a given tensor\n\nNote that most frameworks already support these functions. To now integrate the framework just inherit from the `pypatchify.patch.Patchify` class and enter the functions:\n\n```python\nclass NewFramework(Patchify[NewTensorType]):\n    # get shape and strides from tensor object\n    shape:Callable\n    strides:Callable\n    # tensor operations\n    reshape:Callable\n    transpose:Callable\n    as_strided:Callable\n```\n\nThe class now holds static member functions for all the patchification functionality including `patchify`, `unpatchify`, etc.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ndoll1998/patchify/tree/master",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pypatchify",
    "package_url": "https://pypi.org/project/pypatchify/",
    "platform": null,
    "project_url": "https://pypi.org/project/pypatchify/",
    "project_urls": {
      "Homepage": "https://github.com/ndoll1998/patchify/tree/master"
    },
    "release_url": "https://pypi.org/project/pypatchify/0.1.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Fast and easy image and n-dimensional volume patchification",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14755999,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00e4a4d189b9d31d27a28767af8603e7abdff46b0775290ed3b6a69e2a91c4dc",
          "md5": "316498f7dfdec175abe69bd39a6a33f0",
          "sha256": "8f414877279fb247f8d712b82727ef766a0224f97b4a9cf3ef3f4441dd5b9b29"
        },
        "downloads": -1,
        "filename": "pypatchify-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "316498f7dfdec175abe69bd39a6a33f0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10466,
        "upload_time": "2022-08-12T05:30:34",
        "upload_time_iso_8601": "2022-08-12T05:30:34.671306Z",
        "url": "https://files.pythonhosted.org/packages/00/e4/a4d189b9d31d27a28767af8603e7abdff46b0775290ed3b6a69e2a91c4dc/pypatchify-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd45783364b9eee2d4bcc2ccd062e9b75ecc428437cf4c9eac79891903cecd77",
          "md5": "28282e0a02fede4ee949897730ddbae6",
          "sha256": "74d27652f914afb844b0969e40051e41435da3acf3fcd3fccbb8061c8b65bce5"
        },
        "downloads": -1,
        "filename": "pypatchify-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "28282e0a02fede4ee949897730ddbae6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9300,
        "upload_time": "2022-08-12T05:30:36",
        "upload_time_iso_8601": "2022-08-12T05:30:36.290435Z",
        "url": "https://files.pythonhosted.org/packages/cd/45/783364b9eee2d4bcc2ccd062e9b75ecc428437cf4c9eac79891903cecd77/pypatchify-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcb772ae48f81f997619e69ab022cd7dbf321aaf14c9d71e380b830b56a91353",
          "md5": "099509b30775448285713d95cfccc88f",
          "sha256": "e4f042651a6ccf80a93315202fb64fff41654b24933c5416ca4f1a339c333174"
        },
        "downloads": -1,
        "filename": "pypatchify-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "099509b30775448285713d95cfccc88f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10488,
        "upload_time": "2022-08-12T05:37:19",
        "upload_time_iso_8601": "2022-08-12T05:37:19.669238Z",
        "url": "https://files.pythonhosted.org/packages/fc/b7/72ae48f81f997619e69ab022cd7dbf321aaf14c9d71e380b830b56a91353/pypatchify-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0ee75f75a88526d41ba1d8b6db76422548682cc667c8797d8915c5ddfa11629",
          "md5": "a452709a5ed6353108a652ca5d71369d",
          "sha256": "8829d5b2d0015fba43294e964813977699fc7858f3d9afa735a5288be9d9c5dc"
        },
        "downloads": -1,
        "filename": "pypatchify-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a452709a5ed6353108a652ca5d71369d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9293,
        "upload_time": "2022-08-12T05:37:21",
        "upload_time_iso_8601": "2022-08-12T05:37:21.396741Z",
        "url": "https://files.pythonhosted.org/packages/f0/ee/75f75a88526d41ba1d8b6db76422548682cc667c8797d8915c5ddfa11629/pypatchify-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5ecbcd19d0b5405485bd203fc42077d53afcc1addc7cbb8643cbfd8981c575b",
          "md5": "3c37ce00c006f139d67c8889d47e9eba",
          "sha256": "851e3d161addbc15c9bad5fde6b5e978f83aaa5545dad36eaa5f822902809fe7"
        },
        "downloads": -1,
        "filename": "pypatchify-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3c37ce00c006f139d67c8889d47e9eba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10744,
        "upload_time": "2022-08-12T10:12:22",
        "upload_time_iso_8601": "2022-08-12T10:12:22.263878Z",
        "url": "https://files.pythonhosted.org/packages/a5/ec/bcd19d0b5405485bd203fc42077d53afcc1addc7cbb8643cbfd8981c575b/pypatchify-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bde06017a14946e383d4cf981e91cadf33524611e23766a2856efcd282783e06",
          "md5": "bd4631c6c796f67ca70c4952d89e1111",
          "sha256": "208e2eab31bf0125807ab132aa63f8df589033d248fce0ccac41b797015030e9"
        },
        "downloads": -1,
        "filename": "pypatchify-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bd4631c6c796f67ca70c4952d89e1111",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9548,
        "upload_time": "2022-08-12T10:12:23",
        "upload_time_iso_8601": "2022-08-12T10:12:23.873798Z",
        "url": "https://files.pythonhosted.org/packages/bd/e0/6017a14946e383d4cf981e91cadf33524611e23766a2856efcd282783e06/pypatchify-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6a187210bb2f4c65da9d0dad5d80d1543202a6d113e898647309b0c7db48d94",
          "md5": "dddba54a9c5a97a424cbe947c6e57149",
          "sha256": "a684fc223ba64383f0ebc28fac35267ad52af5820e2e514511413f32d382fe1d"
        },
        "downloads": -1,
        "filename": "pypatchify-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dddba54a9c5a97a424cbe947c6e57149",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10738,
        "upload_time": "2022-08-12T17:04:07",
        "upload_time_iso_8601": "2022-08-12T17:04:07.450633Z",
        "url": "https://files.pythonhosted.org/packages/d6/a1/87210bb2f4c65da9d0dad5d80d1543202a6d113e898647309b0c7db48d94/pypatchify-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0aba17a0ca54dcbfb5508244772da04ac9531e3c9821343b594841f2df66d615",
          "md5": "4f66866bbfe7cec5169650e0a0249c13",
          "sha256": "912a075ecb37fff1f986485ec556bcb4137e5bc3fbcb191598b1989d6588acc7"
        },
        "downloads": -1,
        "filename": "pypatchify-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4f66866bbfe7cec5169650e0a0249c13",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9560,
        "upload_time": "2022-08-12T17:04:08",
        "upload_time_iso_8601": "2022-08-12T17:04:08.884503Z",
        "url": "https://files.pythonhosted.org/packages/0a/ba/17a0ca54dcbfb5508244772da04ac9531e3c9821343b594841f2df66d615/pypatchify-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5407b37a22368b689ca5d7e0aa053d17a5f9be57652efa03763f6aed743cc9fc",
          "md5": "ad643fdeb55a76ae50471726f170824e",
          "sha256": "fab74574b8ccda2de5cfa36eec6e02bd22daf8238830ba2a4f8926e842c355c3"
        },
        "downloads": -1,
        "filename": "pypatchify-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad643fdeb55a76ae50471726f170824e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11119,
        "upload_time": "2022-08-14T13:34:28",
        "upload_time_iso_8601": "2022-08-14T13:34:28.790730Z",
        "url": "https://files.pythonhosted.org/packages/54/07/b37a22368b689ca5d7e0aa053d17a5f9be57652efa03763f6aed743cc9fc/pypatchify-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f45ed11e5649b2f950466e5bbd7ecec540131b8a0182d174e662bab57a5493d0",
          "md5": "cd60b918cb721006424d06f4b86c0385",
          "sha256": "b13bae9891aeec9768c79eac3f3979b5f2ef91f1dcb006aa186b61003fe7ab38"
        },
        "downloads": -1,
        "filename": "pypatchify-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cd60b918cb721006424d06f4b86c0385",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9791,
        "upload_time": "2022-08-14T13:34:30",
        "upload_time_iso_8601": "2022-08-14T13:34:30.063188Z",
        "url": "https://files.pythonhosted.org/packages/f4/5e/d11e5649b2f950466e5bbd7ecec540131b8a0182d174e662bab57a5493d0/pypatchify-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5407b37a22368b689ca5d7e0aa053d17a5f9be57652efa03763f6aed743cc9fc",
        "md5": "ad643fdeb55a76ae50471726f170824e",
        "sha256": "fab74574b8ccda2de5cfa36eec6e02bd22daf8238830ba2a4f8926e842c355c3"
      },
      "downloads": -1,
      "filename": "pypatchify-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ad643fdeb55a76ae50471726f170824e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11119,
      "upload_time": "2022-08-14T13:34:28",
      "upload_time_iso_8601": "2022-08-14T13:34:28.790730Z",
      "url": "https://files.pythonhosted.org/packages/54/07/b37a22368b689ca5d7e0aa053d17a5f9be57652efa03763f6aed743cc9fc/pypatchify-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f45ed11e5649b2f950466e5bbd7ecec540131b8a0182d174e662bab57a5493d0",
        "md5": "cd60b918cb721006424d06f4b86c0385",
        "sha256": "b13bae9891aeec9768c79eac3f3979b5f2ef91f1dcb006aa186b61003fe7ab38"
      },
      "downloads": -1,
      "filename": "pypatchify-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "cd60b918cb721006424d06f4b86c0385",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9791,
      "upload_time": "2022-08-14T13:34:30",
      "upload_time_iso_8601": "2022-08-14T13:34:30.063188Z",
      "url": "https://files.pythonhosted.org/packages/f4/5e/d11e5649b2f950466e5bbd7ecec540131b8a0182d174e662bab57a5493d0/pypatchify-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}