{
  "info": {
    "author": "kmille",
    "author_email": "github@androidloves.me",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11"
    ],
    "description": "## Music Downloader  :notes: :headphones: :dancer: :unicorn:\n![tests](https://github.com/kmille/deezer-downloader/workflows/tests/badge.svg) ![push image to dockerhub](https://github.com/kmille/deezer-downloader/workflows/push%20to%20dockerhub/badge.svg) ![docker pulls](https://img.shields.io/docker/pulls/kmille2/deezer-downloader) ![latest tag](https://img.shields.io/github/v/tag/kmille/deezer-downloader?sort=semver) ![Python 3.6](https://img.shields.io/badge/python-%3E=3.6-blue.svg) ![pypi-version](https://img.shields.io/pypi/v/deezer-downloader) ![pypi-downloads](https://img.shields.io/pypi/dm/deezer-downloader)\n\n\n\n### Features\n\n- download songs, albums, public playlists from Deezer.com (account is required, free plan is enough)\n- download Spotify playlists (by parsing the Spotify website and download the songs from Deezer)\n- download as zip file (including m3u8 playlist file)\n- 320 kbit/s mp3s with ID3-Tags and album cover (UPDATE: right now only 128bkit/s mp3 works, see #66)\n- download songs via yt-dlp\n- KISS (keep it simple and stupid) front end\n- MPD integration (use it on a Raspberry Pi!)\n- simple REST api\n\n\n### How to use it\n\nThere is a settings file template called `settings.ini.example`. You can specify the download directory with  `download_dir`. Pressing the download button only downloads the song/album/playlist. If you set `use_mpd=True` in the `settings.ini` the backend will connect to mpd (localhost:6600) and update the music database. Pressing the play button will download the music. If `use_mpd=True`  is set the mpd database will be updated and the song/album/playlist will be added to the playlist. In `settings.ini` `music_dir` should be the music root location of mpd. The `download_dir` must be a subdirectory of `music_dir`. \n\nAs Deezer sometimes requires a captcha to login the auto login features was removed. Instead you have to manually insert a valid Deezer cookie to the `settings.ini`. The relevant cookie is the `arl` cookie. \n\n\n\n### How to use it\n#### with pip\nYou can run `pip install --user deezer-downloader`. Then you can run `~/.local/bin/deezer-downloader --help`\n\n#### with Docker\nYou can use the Docker image hosted on [hub.docker.com](https://hub.docker.com/r/kmille2/deezer-downloader). Login into your free Deezer account and grab the `arl` cookie. Then:\n\n```bash\nmkdir downloads\nsudo docker run -p 5000:5000 --volume $(pwd)/downloads/:/mnt/deezer-downloader --env DEEZER_COOKIE_ARL=changeme kmille2/deezer-downloader:latest \nxdg-open http://localhost:5000\n```\n\n#### with Vagrant\n\n```bash\t\nvagrant up\nvagrant ssh\nsudo vim /opt/deezer/settings.ini # insert your Deezer cookie\ncd /opt/deezer && sudo poetry run deezer-downloader --config settings.ini\n\n# On the host:\nxdg-open http://localhost:5000 # view frontend in the browser\nncmpcpp -h 127.0.0.1 # try the mpd client\n```\n\n#### as a service\n\nWe use it with nginx and [ympd](https://github.com/notandy/ympd) as mpd frontend\n\n- / goes to ympd\n- /d/ goes to the downloader\n\nThe deployment directory contains a systemd unit file and a nginx vhost config file. There is also a [patch](https://github.com/kmille/music-ansible/blob/master/roles/ympd/files/fix_header.patch) to add a link to the ympd frontend. The `debug` tab will show you the debug output of the app.Shortcuts\n\n\n\nIf you want to debug or build it from source: there is a docker-compose file in the docker directory. The `docker/downloads` directory is mounted into the container and will be used as download directory. You have to check the permissions of the `docker/downloads` directory as docker mounts it with the same owner/group/permissions as on the host. The `deezer` user in the docker container has uid 1000. If you also have the uid 1000 then there should be no problem. For debugging: `sudo docker-compose build --force-rm && sudo docker-compose up`\n\n#### developer setup (tested on Ubuntu Jammy)\n\n```bash\n  sudo apt-get update -q\n  sudo apt-get install -qy vim tmux git ffmpeg\n\n  # python3-poetry is too old (does not support groups ...)\n  sudo apt-get install -qy python3-pip\n  sudo pip install poetry\n  git clone https://github.com/kmille/deezer-downloader.git\n  cd deezer-downloader\n  poetry install\n  poetry run deezer-downloader --show-config-template > settings.ini\n\n  # enable yt-dlp\n  sudo pip install yt-dlp\n  sed -i 's,.*command = /usr/bin/yt-dlp.*,command = /usr/local/bin/yt-dlp,' settings.ini\n\n  # enable mpd\n  sudo apt-get install -yq mpd ncmpcpp\n  sudo sed -i 's,^music_directory.*,music_directory         \"/tmp/deezer-downloader\",' /etc/mpd.conf\n  sudo systemctl restart mpd\n  sed -i 's/.*use_mpd = False.*/use_mpd = True/' settings.ini\n\n  # 1) Adjust the Deezer cookie: vim settings.ini\n  # 2) Run tests: DEEZER_DOWNLOADER_CONFIG_FILE=settings.ini poetry run pytest -v -s\n  # 3) Run it: poetry run deezer-downloader --config settings.ini\n  # 4) Try out: ncmpcpp -h 127.0.0.1 && xdg-open http://localhost:5000\n  # 5) Downloaded files are in /tmp/deezer-downloader\n```\n\nctrl-m: focus search bar  \nEnter: serach for songs   \nAlt+Enter: search for albums  \nctrl-b: go to / (this is where our ympd is)  \nctrl-shift-[1-7] switch tabs    \n\n### Some screenshots\n\nSearch for songs. You can listen to a 30 second preview in the browser.  \n\n![](/docs/screenshots/2020-05-13-211356_screenshot.png)  \n\nSearch for albums. You can download them as zip file.  \n\n![](/docs/screenshots/2020-05-13-213544_screenshot.png)\n\nList songs of an album.\n\n![](/docs/screenshots/2020-05-13-211528_screenshot.png)\n\nDownload songs with youtube-dl  \n\n![](/docs/screenshots/2020-05-13-211622_screenshot.png)\n\nDownload a Spotify playlist.   \n\n![](/docs/screenshots/2020-05-13-211629_screenshot.png)  \n\nDownload a Deezer playlist.    \n\n![](/docs/screenshots/2020-05-13-211633_screenshot.png)  \n\nncmpcpp mpd client.  \n\n![](/docs/screenshots/2020-05-13-212025_screenshot.png)  \n\n### Tests\n\n```bash\ncd deezer-downloader\nDEEZER_DOWNLOADER_CONFIG_FILE=settings.ini poetry run pytest -v -s\n# if you don't setDEEZER_DOWNLOADER_CONFIG_FILE the default template file will be used. Some tests will fail because there is no valid arl_cookie.\n```\n\n### Deployment with Ansible (including mpd and ympd)\nhttps://github.com/kmille/music-ansible (almost always outdated)\n\n\n\n### Changelog\n\n#### Version 2.0.0 (27.03.2023)\n- use poetry as build system\n- build package and uploada to pypi\n- worker threads now \"daemon threads\" (they now just stop if you stop deezer-downloader)\n- update config template (remove http.debug)\n- update dependencies\n- switch to waitress (from gunicorn\n\n#### Version 1.3.3 (27.12.2021)\n- replace youtube-dl by yt-dl\n- update third party dependencies\n\n#### Version 1.3.2 (26.11.2021)\n- fix broken deezer download functionality (#66, removes the ability to download flac quality)\n- update third party dependencies\n- update ubuntu base image for the docker container\n\n#### Version 1.3.1 (21.01.2021)\n- allow to set download quality (flac|mp3) via environment variable DEEZER_FLAC_QUALITY (#43)\n\n#### Version 1.3 (05.11.2020)\n\n- feature: download your favorite Deezer songs\n- automated tests with Github Actions\n- push Docker image to [hub.docker.com](https://hub.docker.com/repository/docker/kmille2/deezer-downloader/general) with Github Actions\n\n#### Version 1.2 (01.11.2020)\n\n- **breaking change:** now use the `arl` cookie instead of the `sid` cookie. This cookie does not expire so we don't need the background thread that keeps the session alive\n- add support for flac as download format\n\n#### Version 1.1 (13.05.2020)\n\n- thanks to [luelista](https://github.com/luelista) for the contribution!\n- play 30 second preview in browser\n- add Vagrantfile\n- show album cover in search results\n- use a threaded queue for download tasks\n- list album songs\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kmille/deezer-downloader",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "deezer-downloader",
    "package_url": "https://pypi.org/project/deezer-downloader/",
    "platform": null,
    "project_url": "https://pypi.org/project/deezer-downloader/",
    "project_urls": {
      "Homepage": "https://github.com/kmille/deezer-downloader",
      "Repository": "https://github.com/kmille/deezer-downloader"
    },
    "release_url": "https://pypi.org/project/deezer-downloader/2.0.0.post1/",
    "requires_dist": [
      "requests (>=2.28.1,<3.0.0)",
      "flask (>=2.2.2,<3.0.0)",
      "python-mpd2 (>=3.0.5,<4.0.0)",
      "yt-dlp",
      "pycryptodome (>=3.16.0,<4.0.0)",
      "jinja2 (>=3.1.2,<4.0.0)",
      "flask-autoindex (>=0.6.6,<0.7.0)",
      "giphypop (>=0.3,<0.4)",
      "waitress (>=2.1.2,<3.0.0)"
    ],
    "requires_python": ">=3.10,<4.0",
    "summary": "download music from Deezer with a nice front end",
    "version": "2.0.0.post1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17473990,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6c190cd24a0a028c9700071fe1913a64e3957a9c13ac7ca5bd1658f121c7148",
          "md5": "bc13916798ee6b78529cd0225dee0488",
          "sha256": "2dbe0530e1a61b46fcd8c8758d4f59a545f2404ab1b9aaaaadc753528efb4024"
        },
        "downloads": -1,
        "filename": "deezer_downloader-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc13916798ee6b78529cd0225dee0488",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 835451,
        "upload_time": "2023-03-27T19:57:03",
        "upload_time_iso_8601": "2023-03-27T19:57:03.703638Z",
        "url": "https://files.pythonhosted.org/packages/a6/c1/90cd24a0a028c9700071fe1913a64e3957a9c13ac7ca5bd1658f121c7148/deezer_downloader-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f77e59936457427053ea922b4ebd04cb6b6881261a979545318ff82e6c09998b",
          "md5": "3ee547289b1da8282ff7eeb2b4e31b48",
          "sha256": "df0b6a5b43e13d241f1e9318fb0eb11d5de3fc2bdf4c7b0ce21bc809e895baa7"
        },
        "downloads": -1,
        "filename": "deezer_downloader-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3ee547289b1da8282ff7eeb2b4e31b48",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 834646,
        "upload_time": "2023-03-27T19:57:06",
        "upload_time_iso_8601": "2023-03-27T19:57:06.085095Z",
        "url": "https://files.pythonhosted.org/packages/f7/7e/59936457427053ea922b4ebd04cb6b6881261a979545318ff82e6c09998b/deezer_downloader-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "335cb2f8c7415cf67265be5e32dd788973403bc99914fcf327fa2dd53a62fff9",
          "md5": "7f75056f3a41a9bc262b7e9a1a9525a6",
          "sha256": "84a53f481ca6f601d18da9c957157e67719338dba7b6b625503d9f00a48984d5"
        },
        "downloads": -1,
        "filename": "deezer_downloader-2.0.0.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f75056f3a41a9bc262b7e9a1a9525a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 835559,
        "upload_time": "2023-03-28T06:49:20",
        "upload_time_iso_8601": "2023-03-28T06:49:20.398191Z",
        "url": "https://files.pythonhosted.org/packages/33/5c/b2f8c7415cf67265be5e32dd788973403bc99914fcf327fa2dd53a62fff9/deezer_downloader-2.0.0.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee276678fa4ba04551f6a092aaaf2e710f010ae01ab396dbfdec2b90f24de369",
          "md5": "1c602f793b1f2ee906c239d60cc3d7bd",
          "sha256": "b0a959e16a5c332d1b050dcc38912def15c4f5cd8dcd75ea2b1dcfa1c14a1c82"
        },
        "downloads": -1,
        "filename": "deezer_downloader-2.0.0.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "1c602f793b1f2ee906c239d60cc3d7bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 834762,
        "upload_time": "2023-03-28T06:49:22",
        "upload_time_iso_8601": "2023-03-28T06:49:22.647477Z",
        "url": "https://files.pythonhosted.org/packages/ee/27/6678fa4ba04551f6a092aaaf2e710f010ae01ab396dbfdec2b90f24de369/deezer_downloader-2.0.0.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "335cb2f8c7415cf67265be5e32dd788973403bc99914fcf327fa2dd53a62fff9",
        "md5": "7f75056f3a41a9bc262b7e9a1a9525a6",
        "sha256": "84a53f481ca6f601d18da9c957157e67719338dba7b6b625503d9f00a48984d5"
      },
      "downloads": -1,
      "filename": "deezer_downloader-2.0.0.post1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7f75056f3a41a9bc262b7e9a1a9525a6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 835559,
      "upload_time": "2023-03-28T06:49:20",
      "upload_time_iso_8601": "2023-03-28T06:49:20.398191Z",
      "url": "https://files.pythonhosted.org/packages/33/5c/b2f8c7415cf67265be5e32dd788973403bc99914fcf327fa2dd53a62fff9/deezer_downloader-2.0.0.post1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee276678fa4ba04551f6a092aaaf2e710f010ae01ab396dbfdec2b90f24de369",
        "md5": "1c602f793b1f2ee906c239d60cc3d7bd",
        "sha256": "b0a959e16a5c332d1b050dcc38912def15c4f5cd8dcd75ea2b1dcfa1c14a1c82"
      },
      "downloads": -1,
      "filename": "deezer_downloader-2.0.0.post1.tar.gz",
      "has_sig": false,
      "md5_digest": "1c602f793b1f2ee906c239d60cc3d7bd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 834762,
      "upload_time": "2023-03-28T06:49:22",
      "upload_time_iso_8601": "2023-03-28T06:49:22.647477Z",
      "url": "https://files.pythonhosted.org/packages/ee/27/6678fa4ba04551f6a092aaaf2e710f010ae01ab396dbfdec2b90f24de369/deezer_downloader-2.0.0.post1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}