{
  "info": {
    "author": "Luc van Donkersgoed",
    "author_email": "lucvandonkersgoed+python@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# AWS Nitro Secure Module (NSM) interface in native Python \nThis library offers a native Python interface to the `/dev/nsm` device in AWS Nitro Enclaves.\n\n## Installation\nTo install `aws_nsm_interface`, run:\n\n```\npip install aws_nsm_interface\n```\n\n### Requirements\n* To install: python>=3.6\n* To run: a Python application running in an AWS Nitro Enclave\n\n## Quickstart\n```python\nimport aws_nsm_interface\n\nfile_desc = aws_nsm_interface.open_nsm_device()\n\nrand_bytes = aws_nsm_interface.get_random(file_desc, 12) # Get 12 random bytes from /dev/nsm\nprint(rand_bytes)\n\npublic_rsa_key = b'1234' # An RSA public key exported as DER\n\nattestation_doc = aws_nsm_interface.get_attestation_doc(\n    file_desc,\n    public_key=public_rsa_key\n)['document']\n\nattestation_doc_b64 = base64.b64encode(attestation_doc).decode('utf-8')\n\naws_nsm_interface.close_nsm_device(file_desc)\n\n# Use `attestation_doc_b64` in your AWS KMS Decrypt call\n```\n\n## Public methods\nThe Python AWS NSM interface provides the following functions:\n\n```python\n# open_nsm_device() returns a file object for /dev/nsm\nopen_nsm_device() -> typing.TextIO\n# close_nsm_device() closes the file object\nclose_nsm_device(file_handle: typing.TextIO) -> None\n\n\n# All of the functions below raise an IoctlError in case of an exception.\n\n# Generate up to 256 random bytes with /dev/nsm. Returns the raw bytes.\nget_random(file_handle: typing.TextIO, length: int = 32) -> bytes\n# Example output: b'se\\xb7\\x05O<:\\x07W\\x8cfn'\n\n# Return an attestation doc generated by /dev/nsm. `user_data`, `nonce` and\n# `public_key` are all binary (bytes) and optional.\nget_attestation_doc(\n    file_handle: typing.TextIO,\n    user_data: bytes = None,\n    nonce: bytes = None,\n    public_key: bytes = None\n) -> dict\n# Example output: {'document': b'\\x84D\\xa1\\x018\"\\xa0Y ... \n# \\xeb|\\x1b\\xf6\\xb6\\x95\\xb4\\x9c[+x\\x8b'}\n\n\n# Describe the NSM and known PCRs.\ndescribe_nsm(file_handle: typing.TextIO) -> dict\n# Example output: {'version_major': 1, 'version_minor': 0, 'version_patch': 0,\n# 'module_id': 'i-00c89f181802cdef4-enc0175cd0dcee36866', 'max_pcrs': 32,\n# 'locked_pcrs': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n# 'digest': 'SHA384'}\n\n# Extend a PCR at the given index. Raises an IoctlError if the PCR is locked.\n# Returns the new data for the PCR.\nextend_pcr(file_handle: typing.TextIO, index: int, data: bytes) -> dict\n# Example output: {'data': b'\\x9c\\t\\x15Rk\\xb6(R~+mi\\xabs ...\n# \\xf6j\\xf8\\xbf\\xa3*A\\x19\\xc0\\x0cr\\x15\\xdf\\x1b'}\n\n# Returns a dictionary with the lock status and PCR data for the PCR at the \n# given index (index 0 returns PCR0, and so on).\ndescribe_pcr(file_handle: typing.TextIO, index: int) -> dict\n# Example output: {'lock': False, 'data': b'\\x9c\\t\\x15Rk\\xb6(R~ ...\n# \\x15\\xdf\\x1b'}\n\n# lock_pcr() locks the PCR at the given index.\nlock_pcr(file_handle: typing.TextIO, index: int) -> bool\n\n# lock_pcrs() locks the PCRs from 0 up to the given lock_range.\n# For example: a range of 5 will lock PCRs [0, 1, 2, 3, 4] - a range\n# of 5 starting at 0.\nlock_pcrs(file_handle: typing.TextIO, lock_range: int) -> bool\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/donkersgoed/aws-nsm-interface",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aws-nsm-interface",
    "package_url": "https://pypi.org/project/aws-nsm-interface/",
    "platform": "",
    "project_url": "https://pypi.org/project/aws-nsm-interface/",
    "project_urls": {
      "Homepage": "https://github.com/donkersgoed/aws-nsm-interface"
    },
    "release_url": "https://pypi.org/project/aws-nsm-interface/1.0.0/",
    "requires_dist": [
      "cbor2 (>=5.2.0)",
      "ioctl-opt (>=1.2.2)"
    ],
    "requires_python": ">=3.6",
    "summary": "Native Python interface for the AWS Nitro Secure Module (NSM)",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8665487,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2887384e8193896694f7d49942be20aca0fcafdef01e22ad902e2bc35bb72f4d",
          "md5": "bf00b4e5fe00f6b49e9df682f5f3f728",
          "sha256": "5a234d683949d5bf7a02d533f7788806e6a793af1ef2ce1b003700f6cb6f3474"
        },
        "downloads": -1,
        "filename": "aws_nsm_interface-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf00b4e5fe00f6b49e9df682f5f3f728",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8232,
        "upload_time": "2020-11-15T20:46:46",
        "upload_time_iso_8601": "2020-11-15T20:46:46.698253Z",
        "url": "https://files.pythonhosted.org/packages/28/87/384e8193896694f7d49942be20aca0fcafdef01e22ad902e2bc35bb72f4d/aws_nsm_interface-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "791ab8258f05db00744075cf64bb78bb77f2a85105aa0f1f2b88406a3ba64c61",
          "md5": "04bb977ad3f581f3fbaf656acfe67cd3",
          "sha256": "d349112beaf20f6f018d6a121ed61b6ca9548e1939c585ba5b5c59c35ce4b5bb"
        },
        "downloads": -1,
        "filename": "aws-nsm-interface-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "04bb977ad3f581f3fbaf656acfe67cd3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4860,
        "upload_time": "2020-11-15T20:46:47",
        "upload_time_iso_8601": "2020-11-15T20:46:47.960317Z",
        "url": "https://files.pythonhosted.org/packages/79/1a/b8258f05db00744075cf64bb78bb77f2a85105aa0f1f2b88406a3ba64c61/aws-nsm-interface-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2887384e8193896694f7d49942be20aca0fcafdef01e22ad902e2bc35bb72f4d",
        "md5": "bf00b4e5fe00f6b49e9df682f5f3f728",
        "sha256": "5a234d683949d5bf7a02d533f7788806e6a793af1ef2ce1b003700f6cb6f3474"
      },
      "downloads": -1,
      "filename": "aws_nsm_interface-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bf00b4e5fe00f6b49e9df682f5f3f728",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8232,
      "upload_time": "2020-11-15T20:46:46",
      "upload_time_iso_8601": "2020-11-15T20:46:46.698253Z",
      "url": "https://files.pythonhosted.org/packages/28/87/384e8193896694f7d49942be20aca0fcafdef01e22ad902e2bc35bb72f4d/aws_nsm_interface-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "791ab8258f05db00744075cf64bb78bb77f2a85105aa0f1f2b88406a3ba64c61",
        "md5": "04bb977ad3f581f3fbaf656acfe67cd3",
        "sha256": "d349112beaf20f6f018d6a121ed61b6ca9548e1939c585ba5b5c59c35ce4b5bb"
      },
      "downloads": -1,
      "filename": "aws-nsm-interface-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "04bb977ad3f581f3fbaf656acfe67cd3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4860,
      "upload_time": "2020-11-15T20:46:47",
      "upload_time_iso_8601": "2020-11-15T20:46:47.960317Z",
      "url": "https://files.pythonhosted.org/packages/79/1a/b8258f05db00744075cf64bb78bb77f2a85105aa0f1f2b88406a3ba64c61/aws-nsm-interface-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}