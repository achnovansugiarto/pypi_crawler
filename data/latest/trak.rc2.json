{
  "info": {
    "author": "Greg Pyle",
    "author_email": "chaoborid@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Office/Business",
      "Topic :: Text Editors :: Text Processing",
      "Topic :: Text Processing :: General",
      "Topic :: Utilities",
      "Typing :: Typed"
    ],
    "description": "# trak: A Text-File Writing Tracker #\n`trak` is a simple writing-progress tracker for text files of the type .tex, .txt, .md, and .html.\n\n## Description\nOnce invoked, `trak` initiates a writing _session_ and records an initial word\ncount for every _file_ monitored in each _project_ it knows about. After the\nwriting session, `trak` recounts and records word counts for every file whose final count\nvaries from its initial count. Session data are recorded and can be printed to\nstandard output or piped into a text file, which can later be imported into some\nother third-party program for analysis. \n\n`trak` allows you to list all projects and project files, record details about each\nwriting session, and keep track of writing records (e.g., most words written in a\nsingle session, longest writing streak, current writing streak, etc.). There is\nno computational overhead during an active writing session because `trak` simply\ncounts and records words at the beginning and end of a writing session---it does\nnot run in the background.\n\n## Installation\nThe easist way to install `trak` is to use Pip.\n\n```\n$ python3 -m pip install trak\n```\n\nYou can also download and install `trak` directly from GitHub. Simply clone the\n`trak` repository into whatever directory you use for downloaded programs (e.g.,\n`~/bin` in this example) and run the `setup.py` installation script.\n\n```\n$ cd ~/bin \n$ git clone https://github.com/Gambusia/trak.git\n$ cd trak\n$ python3 setup.py install \n```\n\n## Usage\nI do a lot of writing in text files (e.g., .txt, .tex, .md, and .html). Although\nmany of the commercially available writing programs have excellent\nwriting-progress tracking capabilities, there are very few such applications\navailable to those of us who write in plain text files. This application,\n`trak`, is my answer to this shortcoming. Admittedly, I wrote this little\nprogram to meet my own personal tracking needs. But if you think you might find\nit useful (and I hope you do), please feel free to use it.\n\nTo use `trak` simply type `trak` on the command line to initiate a tracking\nsession. Upon its first invocation, it won't do much.\n\n```\n$ trak\nNothing to track! Use the -n option to track a project.\n```\n\nTo track a new writing project, you have to tell `trak` where to look for it. A\nproject can be either a single file of type .tex, .txt, .md, or .html, or a\ndirectory. \n\n```\n$ trak -n\nProject name: myproject\nProject path: ~/path/to/my/project\n```\n\nYou will be asked to provide a name and path for the new project you'd like to\ntrack. Once you enter the required information, you will be presented with a\nmessage acknowledging that tracking has begun. If your project is a file, `trak`\nwill monitor both the time and number of words written in that file during any\ngiven writing session. If your project is a directory, then `trak` will gather\nall the files of type .tex, .txt., .md, or .html recursively through the entire\ndirectory structure of your project and track only the modified files,\nwriting-session duration, and number of words written during any given writing\nsession. `trak` stores your writing projects in a file so it can remember which\nprojects to monitor without you having to type them in before each writing\nsession.\n\nNow that we have something to track, type `trak` again at the prompt. \n\n```\n$ trak\nTracking started at 2020-10-26 07:25:04\nNumber of files tracked: 12\n```\n\nIn this example, this project is currently tracking 12 files and this writing\nsession started at 7:25 a.m. on Oct. 26, 2020. To see the tracking status, use\nthe `-z` flag.\n\n```\n$ trak -z\nTracking is ON\nThis tracking session began at 2020-10-26 07:25:04\nCurrent writing streak is 2 days\n```\n\nAs long as `trak` has some files to monitor, you simply start or stop tracking\nby typing the command `trak` on the command line without including any options.\n\n```\n$ trak\nTracking ended at 2020-10-26 07:34:53\nNo tracked files were modified. Session not recorded.\n```\n\nIn this example, tracking was halted before any of the monitored files were\nmodified and no data were recorded. `trak` only records writing-session data\nwhen monitored files are modified.\n\nTo see a basic list of available options, use the `-h` flag.\n\n```\nTrack and analyse writing progress\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d DELETE, --delete DELETE\n                        remove file or project from further tracking; remove\n                        ignored file to resume tracking\n  -e EXPORT, --export EXPORT\n                        export data to stdout\n  -l LIST, --list LIST  list ignores, files, sessions, or projects\n  -n, --new             track a new writing project\n  -r, --record          display all-time tracking records\n  -s, --summary         display summary of selected session\n  -x, --expunge         delete all data; restore factory defaults\n  -z, --status          determine whether tracking is on or off\n```\n\nThe `-d` option stands for `--delete` even though nothing really gets deleted\nfrom your file system. When you define a project for `trak` to monitor, if the\nproject is a directory, `trak` walks recursively through the entire directory\nstructure finding all files of type .tex, .txt, .md, and .html and monitors them\nfor writing activity. If these files remain unmodified during a writing session,\nthey're ignored. Only those files that show writing activity will be recorded.\nTherefore, there is little need to delete a file from tracking.\n\nHowever, in the event that you do want to stop monitoring a file, you can ignore\nit by using the `-d` option with the argument 'file' to indicate that you want\nto 'delete' (or, more appropriately, _ignore_) a file. You will be asked to make a\nselection among the files belonging to one of the tracked projects. \n\n```\n$ trak -d file\nProject in which file resides: my_project_name\n[0] /Path/to/my/file1.txt\n[1] /Path/to/my/file2.txt\n[2] /Path/to/my/mytexfile.tex\n[3] /Path/to/my/index.html\nChoose a file to ignore [0-3]: 2\nThe file /Path/to/my/mytexfile.tex will no longer be tracked\n``` \n\nTo convince yourself that the file is now being ignored, list all the files\ncurrently being monitored using the `-l` or `--list` option with the argument\n'files' to display a list of files grouped by project. You can also list\n'sessions', 'projects', and 'ignores' (i.e., ignored files). \n\n```\n$ trak -l files\nProject my_project_name:\n\n/Path/to/my/file1.txt\n/Path/to/my/file2.txt\n/Path/to/my/index.html\nTotal: 3 files tracked\n```\n\nFor a list of all the ignored files, we can also use the `-l` option.\n\n```\n$ trak -l ignores\nProject            Ignored Files\n-----------------  ------------------------\nmy_new_project     /Path/to/mytexfile.tex\n```\n\nThe display shows us that we currently have only one file currently being\nignored. If you'd like to stop ignoring this file, just delete the ignore using\nthe `-d` option.  \n\n```\n$ trak -d ignore\n[0] my_new_project /Path/to/mytexfile.tex\nSelect a file to stop ignoring [0-0]: 0\nThe file /Path/to/mytexfile.tex in project my_new_project will now be tracked\n``` \n\nOne of the reasons I wanted a writing tracker was to keep track of things like\nmy longest writing session, or most words written during a writing session, or\nlongest daily writing streak. You can access all of that by invoking the `-r`\noption.\n\n```\n$ trak -r\n--------------------------------  ------------------------------\nTotal number of words tracked     553\nTotal number of sessions tracked  7\nTotal number of modified files    5\nLongest session                   2020-10-20 0:06:58\nMost words written in a session   2020-10-20 182 words\nLongest writing streak            Starting on 2020-10-24: 2 days\nCurrent streak                    0 days\n--------------------------------  ------------------------------\n```\n\nAs you can see from the above output, the longest writing session occurred on\n2020-10-20 for an impressive 6 minutes and 58 seconds. Maybe you'd like to see a\nsummary of that writing session by invoking the `-s` option.  \n\n```\n$ trak -s\n[0] 2020-10-19 23:33:40 to 2020-10-19 23:36:52\n[1] 2020-10-19 23:44:05 to 2020-10-19 23:45:55\n[2] 2020-10-20 06:03:46 to 2020-10-20 06:09:06\n[3] 2020-10-20 23:20:46 to 2020-10-20 23:27:44\n[4] 2020-10-20 23:29:33 to 2020-10-20 23:31:17\n[5] 2020-10-20 23:32:13 to 2020-10-20 23:32:39\n[6] 2020-10-24 09:15:33 to 2020-10-24 09:17:11\nSelect session to summarise [0-6]: \n``` \n\nYou're presented with a list of all of the recorded writing sessions. Several\nsessions were recorded on the 2020-10-20, but number 3 looks like the session\nwe're interested in. Here is the output.  \n\n```\n----------------  ------------------------------------\nSession ID        2cb0cf46-135d-11eb-bfbd-787b8ac95650\nStart time        2020-10-20 23:20:46\nEnd time          2020-10-20 23:27:44\nTotal duration    0:06:58\nFiles modified    3\nTotal word count  125\n----------------  ------------------------------------\nModified Files\nProject     File         Words Written\n----------  ---------    --------------\nmyproject   test.html               36\nmyproject   test.txt                21\nmyproject   test.md                 68\n```\n\nAll the details about writing session 2cb0cf46-135d-11eb-bfbd-787b8ac95650 (an\nalpha-numeric ID number that's automatically generated by `trak`) are provided\nin the output. Notice that `trak` only tracks individual writing sessions. It\ndoes not track the start/stop times of writing in individual files. It only\ncalculates the word change (added or deleted) in the project's tracked files\nfrom the beginning to the end of a writing session.\n\nFinally, you may want to analyse the data yourself. The export function can be\ninvoked by calling the `-e` option together with an argument that tells `trak`\nwhich data to export (tracks, files, projects, or sessions). Comma-separated\ndata are simply written to standard output, which you can pipe into file on the\ncommand line and use however you like. The exported data even have\ncomma-separated column headers so it's clear what data have been exported. For\nexample, here is the exported output for 'tracks' (i.e., the files that have\nbeen modified since the first clean invokation of `trak`).  \n\n```\n$ trak -e tracks\ntrack_id, project_name, file_name, start_wc, end_wc\n2cb0cf46-135d-11eb-bfbd-787b8ac95650, myproject, test.html, 5, 41\n2cb0cf46-135d-11eb-bfbd-787b8ac95650, myproject, test.txt, 20, 41\n2cb0cf46-135d-11eb-bfbd-787b8ac95650, myproject, test.md, 16, 84\n668ff326-135e-11eb-a0cd-787b8ac95650, myproject, test.html, 41, 44\nc5dd9c8e-135e-11eb-b671-787b8ac95650, myproject, test.md, 94, 104\n```\n\nThis is just raw, comma-separated output of tracked data. The first row provides\nthe column headings (track_id is really the session ID, which can be used to\nlink exported session data with tracks). The output includes a track ID, project\nname, modified file name, starting word count, and ending word count. Obviously,\ndifferent data will be exported for files, projects, and sessions.\n\nFinally, you can clear all data from `trak` by calling the `-x` option. This\nsimply deletes all the data files used to store historical tracking data. This\nmight be a useful function after you've backed up all your data using the export\nfunction described immediately above.\n\nI hope you find this program useful. Good luck, and happy writing!\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Gambusia/trak",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "trak",
    "package_url": "https://pypi.org/project/trak/",
    "platform": "",
    "project_url": "https://pypi.org/project/trak/",
    "project_urls": {
      "Download": "https://github.com/Gambusia/trak"
    },
    "release_url": "https://pypi.org/project/trak/0.1.2/",
    "requires_dist": [
      "tabulate"
    ],
    "requires_python": "",
    "summary": "A simple writing-progress tracking tool for plain text files",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10487919,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b0826a47f8f5818a7bdcb07f0d6eec5eb4e443b3b67e2d0a814a0c3d80bfbe7",
          "md5": "76fb97466b737952f056f0d46000d0bb",
          "sha256": "231df38c17879642a88e329a2baceeb8f292e7b0722df62eb492773c14e20e01"
        },
        "downloads": -1,
        "filename": "trak-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "76fb97466b737952f056f0d46000d0bb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18286,
        "upload_time": "2021-05-27T05:23:59",
        "upload_time_iso_8601": "2021-05-27T05:23:59.495272Z",
        "url": "https://files.pythonhosted.org/packages/7b/08/26a47f8f5818a7bdcb07f0d6eec5eb4e443b3b67e2d0a814a0c3d80bfbe7/trak-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37d01316095e6eb32d9b83188d9994528dd10feaf8bd389913352221693689ce",
          "md5": "ce8c1672f1ee5995498d958a9ba4755a",
          "sha256": "f87c13e64840326d4674fab396fe8a9d8a732daf3896d9f6b1968a0251ed9f5d"
        },
        "downloads": -1,
        "filename": "trak-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ce8c1672f1ee5995498d958a9ba4755a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20011,
        "upload_time": "2021-05-27T05:24:00",
        "upload_time_iso_8601": "2021-05-27T05:24:00.867659Z",
        "url": "https://files.pythonhosted.org/packages/37/d0/1316095e6eb32d9b83188d9994528dd10feaf8bd389913352221693689ce/trak-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bc033b3cce02fd53345161fa1c2c6e36e4d92bbe1b164c716f7179037667b8d",
          "md5": "720b6ad36aa2df996161953b5377a5fb",
          "sha256": "32f921fa2fbfc029de7a005967fb29b69d27465a9b2d80a31639bd8c7e1fdb9d"
        },
        "downloads": -1,
        "filename": "trak-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "720b6ad36aa2df996161953b5377a5fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18349,
        "upload_time": "2021-05-27T12:49:14",
        "upload_time_iso_8601": "2021-05-27T12:49:14.680883Z",
        "url": "https://files.pythonhosted.org/packages/1b/c0/33b3cce02fd53345161fa1c2c6e36e4d92bbe1b164c716f7179037667b8d/trak-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a210a5a28f3cae9d4ab8b4d2dc6e56190a92511f410bee5247c7a27ae5fe59c3",
          "md5": "12cc9d8660738fdba19d33c7e1b183c9",
          "sha256": "331679983dff3581766ea0f5d64995343c23e559694a5a2a2058bd794a77c2e4"
        },
        "downloads": -1,
        "filename": "trak-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "12cc9d8660738fdba19d33c7e1b183c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20124,
        "upload_time": "2021-05-27T12:49:17",
        "upload_time_iso_8601": "2021-05-27T12:49:17.754783Z",
        "url": "https://files.pythonhosted.org/packages/a2/10/a5a28f3cae9d4ab8b4d2dc6e56190a92511f410bee5247c7a27ae5fe59c3/trak-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1bc033b3cce02fd53345161fa1c2c6e36e4d92bbe1b164c716f7179037667b8d",
        "md5": "720b6ad36aa2df996161953b5377a5fb",
        "sha256": "32f921fa2fbfc029de7a005967fb29b69d27465a9b2d80a31639bd8c7e1fdb9d"
      },
      "downloads": -1,
      "filename": "trak-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "720b6ad36aa2df996161953b5377a5fb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18349,
      "upload_time": "2021-05-27T12:49:14",
      "upload_time_iso_8601": "2021-05-27T12:49:14.680883Z",
      "url": "https://files.pythonhosted.org/packages/1b/c0/33b3cce02fd53345161fa1c2c6e36e4d92bbe1b164c716f7179037667b8d/trak-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a210a5a28f3cae9d4ab8b4d2dc6e56190a92511f410bee5247c7a27ae5fe59c3",
        "md5": "12cc9d8660738fdba19d33c7e1b183c9",
        "sha256": "331679983dff3581766ea0f5d64995343c23e559694a5a2a2058bd794a77c2e4"
      },
      "downloads": -1,
      "filename": "trak-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "12cc9d8660738fdba19d33c7e1b183c9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20124,
      "upload_time": "2021-05-27T12:49:17",
      "upload_time_iso_8601": "2021-05-27T12:49:17.754783Z",
      "url": "https://files.pythonhosted.org/packages/a2/10/a5a28f3cae9d4ab8b4d2dc6e56190a92511f410bee5247c7a27ae5fe59c3/trak-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}