{
  "info": {
    "author": "Guido U. Draheim",
    "author_email": "Guido.Draheim@gmx.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# edit docker image metadata\n\nThe initial motiviation for the creation of the tool came from\nthe fact that it is not possible to remove VOLUME entries in\nan image. You can basically change a USER or WORKDIR setting\nbut you can only ever add VOLUME and PORT entries.\n\nThe wish to REMOVE ALL VOLUMES came from the fact that I did\nwant to download a tested image for local tests where the\ndata part should be committed to the history as well in order\nto turn back both program and data to a defined state so that \nanother test run will start off the exact same checkpoint.\n\nWhile docker does not allow to edit the metadata of an image\ndirectly, there is a workaround - one may \"docker save\" an\nimage into an archive file that contains all the layers and\nmetadata json files. After modifying the content one can\n\"docker load\" the result back with the history being preserved.\n\nCorrecting some images from other sources became such a\nregular task that I started to fill in a python script to\nhelp with the daily work. In order to allow coworkers to\nunderstand what was intended, the input syntax is somewhat\ndescriptive (likeSQL).\n\n     ./docker-copyedit.py \\\n     FROM image1 INTO image2 REMOVE ALL VOLUMES\n         \n     ./docker-copyedit.py FROM image1 INTO image2 -vv \\\n         add volume /var/tmp\n     ./docker-copyedit.py FROM image1 INTO image2 -vv \\\n         REMOVE VOLUME /var/atlassian/jira-data\n     ./docker-copyedit.py FROM image1 INTO image2 -vv \\\n         REMOVE VOLUMES '/var/*' AND RM PORTS 80%0\n     \n     ./docker-copyedit.py \\\n         into image2 from image1 set no user\n     ./docker-copyedit.py \\\n         set null user and set null cmd from image1 into image2\n     ./docker-copyedit.py FROM image1 INTO image2 \\\n         set null user + set null cmd + rm all volumes\n\n     ./docker-copyedit.py FROM image1 INTO image2 -vv \\\n         set null entrypoint and set cmd /entrypoint.sh\n     ./docker-copyedit.py FROM image1 INTO image2 -vv \\\n         set shell cmd \"/entrypoint.sh foo\"\n     ./docker-copyedit.py FROM image1 INTO image2 -vv \\\n         set label author \"real me\" and rm labels old%\n     ./docker-copyedit.py FROM image1 INTO image2 -vv \\\n         set env MAINDIR \"/path\" and rm env backupdir\n\n     ./docker-copyedit.py FROM image1 INTO image2 -vv \\\n         REMOVE PORT 4444\n     ./docker-copyedit.py FROM image1 INTO image2 -vv \\\n         remove port ldap and rm port ldaps\n     ./docker-copyedit.py FROM image1 INTO image2 -vv \\\n         remove all ports\n     ./docker-copyedit.py FROM image1 INTO image2 -vv \\\n         add port ldap and add port ldaps\n\nOf course you may have image1 and image2 to be the same\ntag name but remember that the image hash value will \nchange while copyediting the image archive on the disk.\nYou will be left with a dangling old (untagged) image.\n\nOther than 'entrypoint','cmd' and 'user' you can also set \nthe string values for 'workdir'/'workingdir', 'domainname',\n'hostname', 'arch'/'architecture' and 'author' in configs.\nThe values in the env list and label list can be modified too.\nHealthcheck can be removed.\nIf the edit command did not really change something then\nthe edited image is not loaded back from disk. Instead the \nold image is possibly just tagged with the new name.\n\nBy default the tool will use a local \"load.tmp\" temporary\ndirectory. You may set \"-t $TMPDIR\" explicitly to have it\nrun in a normal temporary directory - but be aware that\nthe archive files during save/load can be quite big and the\ntool will even unpack the archives temporarily. That's why\nthe \"-t tmpdir\" should point to a space that is hopefully big\nenough (like the build server workspace you are already in).",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gdraheim/docker-copyedit",
    "keywords": "",
    "license": "EUPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "docker-copyedit",
    "package_url": "https://pypi.org/project/docker-copyedit/",
    "platform": null,
    "project_url": "https://pypi.org/project/docker-copyedit/",
    "project_urls": {
      "Homepage": "https://github.com/gdraheim/docker-copyedit"
    },
    "release_url": "https://pypi.org/project/docker-copyedit/1.4.6097/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "allows to deploy to systemd-controlled containers without starting an actual systemd daemon",
    "version": "1.4.6097",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17162479,
  "releases": {
    "1.4.4311": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a34099157b2f50116f4c7d3dc6bb77f0dfdc569aa39188ff2cf9bded4f7d870",
          "md5": "0b53a5159a53d528967b096e930e3212",
          "sha256": "5507faffa9f9c7951f0320e3c52005ebc669df747918b7d45569bc797ae35308"
        },
        "downloads": -1,
        "filename": "docker-copyedit-1.4.4311.tar.gz",
        "has_sig": false,
        "md5_digest": "0b53a5159a53d528967b096e930e3212",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23603,
        "upload_time": "2021-08-01T23:20:14",
        "upload_time_iso_8601": "2021-08-01T23:20:14.673755Z",
        "url": "https://files.pythonhosted.org/packages/1a/34/099157b2f50116f4c7d3dc6bb77f0dfdc569aa39188ff2cf9bded4f7d870/docker-copyedit-1.4.4311.tar.gz",
        "yanked": true,
        "yanked_reason": "wrong README"
      }
    ],
    "1.4.4312": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3ccfe9b54656f755da8c38d5a218e4e52f9a3d49b8f8076a12deff1d6ac23d0",
          "md5": "15f5d3dc0230ddf2c17b6edf1344a4c6",
          "sha256": "8eb1813d824feb44378b965a9534fde6dcf60c101c69d4968f08875d8a940a5d"
        },
        "downloads": -1,
        "filename": "docker-copyedit-1.4.4312.tar.gz",
        "has_sig": false,
        "md5_digest": "15f5d3dc0230ddf2c17b6edf1344a4c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25471,
        "upload_time": "2021-08-01T23:26:40",
        "upload_time_iso_8601": "2021-08-01T23:26:40.817024Z",
        "url": "https://files.pythonhosted.org/packages/c3/cc/fe9b54656f755da8c38d5a218e4e52f9a3d49b8f8076a12deff1d6ac23d0/docker-copyedit-1.4.4312.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.5016": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c2ad8ac9f0a2d38273cef2330c1d3aff454de2e201594cdb196366ccd3d67e4",
          "md5": "a75c8aabe2916d8cbbec3d8036728c60",
          "sha256": "4199562b2c9081c11524dc68075c47f3c9d118735d7282227e7c94edfb767e8a"
        },
        "downloads": -1,
        "filename": "docker-copyedit-1.4.5016.tar.gz",
        "has_sig": false,
        "md5_digest": "a75c8aabe2916d8cbbec3d8036728c60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25685,
        "upload_time": "2022-01-08T14:40:33",
        "upload_time_iso_8601": "2022-01-08T14:40:33.117311Z",
        "url": "https://files.pythonhosted.org/packages/0c/2a/d8ac9f0a2d38273cef2330c1d3aff454de2e201594cdb196366ccd3d67e4/docker-copyedit-1.4.5016.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.6097": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da82ec8d170a542f07ee05c17fed3d19cf1bca9f8866835a3ebb7b5756b280c1",
          "md5": "7d2799bc31058c2fb05089945a28dfaa",
          "sha256": "b6503e6a9e8a9af10f3e2f9f05e733f9f063ee9278fa732b90359e911b84696e"
        },
        "downloads": -1,
        "filename": "docker-copyedit-1.4.6097.tar.gz",
        "has_sig": false,
        "md5_digest": "7d2799bc31058c2fb05089945a28dfaa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25706,
        "upload_time": "2023-03-05T08:47:22",
        "upload_time_iso_8601": "2023-03-05T08:47:22.129364Z",
        "url": "https://files.pythonhosted.org/packages/da/82/ec8d170a542f07ee05c17fed3d19cf1bca9f8866835a3ebb7b5756b280c1/docker-copyedit-1.4.6097.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "da82ec8d170a542f07ee05c17fed3d19cf1bca9f8866835a3ebb7b5756b280c1",
        "md5": "7d2799bc31058c2fb05089945a28dfaa",
        "sha256": "b6503e6a9e8a9af10f3e2f9f05e733f9f063ee9278fa732b90359e911b84696e"
      },
      "downloads": -1,
      "filename": "docker-copyedit-1.4.6097.tar.gz",
      "has_sig": false,
      "md5_digest": "7d2799bc31058c2fb05089945a28dfaa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 25706,
      "upload_time": "2023-03-05T08:47:22",
      "upload_time_iso_8601": "2023-03-05T08:47:22.129364Z",
      "url": "https://files.pythonhosted.org/packages/da/82/ec8d170a542f07ee05c17fed3d19cf1bca9f8866835a3ebb7b5756b280c1/docker-copyedit-1.4.6097.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}