{
  "info": {
    "author": "Integration team",
    "author_email": "integrations@test-gear.io",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Test Gear TMS adapter for Nose\n\n![Test Gear](https://raw.githubusercontent.com/testgear-tms/adapters-python/master/images/banner.png)\n\n## Getting Started\n\n### Compatibility\n\n| Test Gear | Adapter |\n|-----------|---------|\n| 3.5       | 2.0     |\n| 4.0       | 2.1     |\n\n### Installation\n\n```\npip install testgear-adapter-nose\n```\n\n## Usage\n\n### Configuration\n\n#### File\n\n1. Create **connection_config.ini** file in the root directory of the project:\n    ```\n    [testgear]\n    URL = <url>\n    privateToken = <token>\n    projectId = <id>\n    configurationId = <id>\n    testRunId = <optional id>\n    testRunName = <optional name>\n    adapterMode = <optional>\n    certValidation = <optional boolean>\n    \n    # This section are optional. It enables debug mode.\n    [debug]\n    tmsProxy = {\"http\": \"http://localhost:8888\", \"https\": \"http://localhost:8888\"}\n    ```\n\n2. Fill parameters with your configuration, where:\n    * `URL` - location of the TMS instance\n\n    * `privateToken` - API secret key\n        1. go to the https://{DOMAIN}/user-profile profile\n        2. copy the API secret key\n\n    * `projectId` - ID of project in TMS instance.\n\n        1. create a project\n        2. open DevTools -> network\n        3. go to the project https://{DOMAIN}/projects/{PROJECT_GLOBAL_ID}/tests\n        4. GET-request project, Preview tab, copy id field\n\n    * `configurationId` - ID of configuration in TMS instance.\n\n        1. create a project\n        2. open DevTools -> network\n        3. go to the project https://{DOMAIN}/projects/{PROJECT_GLOBAL_ID}/tests\n        4. GET-request configurations, Preview tab, copy id field\n\n    * `testRunId` - id of the created test run in TMS instance. `testRunId` is optional. If it is not provided, it is\n      created automatically.\n\n    * `testRunName` - parameter for specifying the name of test run in TMS instance. `testRunName` is optional. If it is\n      not provided, it is created automatically.\n\n    * `adapterMode` - adapter mode. Default value - 0. The adapter supports following modes:\n\n        * 0 - in this mode, the adapter filters tests by test run ID and configuration ID, and sends the results to the\n          test run.\n        * 1 - in this mode, the adapter sends all results to the test run without filtering.\n        * 2 - in this mode, the adapter creates a new test run and sends results to the new test run.\n    \n    * `certValidation` - it enables/disables certificate validation. `certValidation` is optional.\n\n    * `tmsProxy` - it enables debug mode. `tmsProxy` is optional.\n\n3. Create **unittest.cfg** file in the root directory of the project:\n   ```\n    [unittest]\n    plugins = testgear_adapter_nose.plugin\n    ```\n\n#### ENV\n\nYou can use environment variables (environment variables take precedence over file variables):\n\n* `TMS_URL` - location of the TMS instance.\n\n* `TMS_PRIVATE_TOKEN` - API secret key.\n\n* `TMS_PROJECT_ID` - ID of a project in TMS instance.\n\n* `TMS_CONFIGURATION_ID` - ID of a configuration in TMS instance.\n\n* `TMS_ADAPTER_MODE` - adapter mode. Default value - 0.\n\n* `TMS_TEST_RUN_ID` - ID of the created test-run in TMS instance. `TMS_TEST_RUN_ID` is optional. If it is not provided,\n  it is created automatically.\n\n* `TMS_TEST_RUN_NAME` - name of the new test-run.`TMS_TEST_RUN_NAME` is optional. If it is not provided, it is created\n  automatically.\n\n* `TMS_CONFIG_FILE` - name of the configuration file. `TMS_CONFIG_FILE` is optional. If it is not provided, it is used\n  default file name.\n\n* `TMS_PROXY` - it enables debug mode. `TMS_PROXY` is optional.\n\n* `TMS_CERT_VALIDATION` - it enables/disables certificate validation. `TMS_CERT_VALIDATION` is optional.\n\n#### Examples\n\nLaunch with a connection_config.ini file in the root directory of the project:\n\n```\n$ nose2 --testgear\n```\n\nIf you want to enable debug mode then\nsee [How to enable debug logging?](https://github.com/testgear-tms/adapters-python/tree/main/testgear-python-commons)\n\n### Decorators\n\nDecorators can be used to specify information about autotest.\n\nDescription of decorators:\n\n- `testgear.workItemIds` - linking an autotest to a test case\n- `testgear.displayName` - name of the autotest in the TMS system (can be replaced with documentation strings)\n- `testgear.externalId` - ID of the autotest within the project in the TMS System\n- `testgear.title` - title in the autotest card\n- `testgear.description` - description in the autotest card\n- `testgear.labels` - tags in the work item\n- `testgear.link` - links in the autotest card\n- `testgear.step` - the designation of the step called in the body of the test or other step\n\nAll decorators support the use of parameterization attributes\n\nDescription of methods:\n\n- `testgear.addLinks` - links in the autotest result\n- `testgear.addAttachments` - uploading files in the autotest result\n- `testgear.addMessage` - information about autotest in the autotest result\n- `testgear.step` - usage in the \"with\" construct to designation a step in the body of the test\n\n### Examples\n\n#### Simple test\n\n```py\nimport pytest\nimport testgear\n\n\n# Test with a minimal set of decorators\n@testgear.externalId('Simple_autotest2')\ndef test_2():\n    \"\"\"Simple autotest 2\"\"\"\n    assert oneStep()\n    assert twoStep()\n\n\n@testgear.step\ndef oneStep():\n    assert oneOneStep()\n    assert oneTwoStep()\n    return True\n\n\n@testgear.step\ndef twoStep():\n    return True\n\n\n@testgear.step('step 1.1', 'description')\ndef oneOneStep():\n    return True\n\n\n@testgear.step('step 2')\ndef oneTwoStep():\n    return True\n```\n\n#### Parameterized test\n\n```py\n# Parameterized test with a full set of decorators\nfrom os.path import join, dirname\n\nimport testgear\nfrom nose2.tools import params\n\n@params(1, 2, 3)\n@testgear.workItemIds(627)\n@testgear.externalId('param {num}')\n@testgear.displayName('param {num}')\n@testgear.title('Test with params')\n@testgear.description('E2E_autotest')\n@testgear.labels('parameters', 'test')\n@testgear.links(url='https://dumps.example.com/module/JCP-777')\n@testgear.links(url='https://dumps.example.com/module/JCP-777',\n              title='JCP-777',\n              type=testgear.LinkType.RELATED,\n              description='Description of JCP-777')\ndef test_nums(num):\n    assert num < 4\n```\n\n# Contributing\n\nYou can help to develop the project. Any contributions are **greatly appreciated**.\n\n* If you have suggestions for adding or removing projects, feel free\n  to [open an issue](https://github.com/testgear-tms/adapters-python/issues/new) to discuss it, or directly create a pull\n  request after you edit the *README.md* file with necessary changes.\n* Please make sure you check your spelling and grammar.\n* Create individual PR for each suggestion.\n* Please also read through\n  the [Code Of Conduct](https://github.com/testgear-tms/adapters-python/blob/master/CODE_OF_CONDUCT.md) before posting\n  your first idea as well.\n\n# License\n\nDistributed under the Apache-2.0 License.\nSee [LICENSE](https://github.com/testgear-tms/adapters-python/blob/master/LICENSE.md) for more information.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/testgear-tms/adapters-python/",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "testgear-adapter-nose",
    "package_url": "https://pypi.org/project/testgear-adapter-nose/",
    "platform": null,
    "project_url": "https://pypi.org/project/testgear-adapter-nose/",
    "project_urls": {
      "Homepage": "https://github.com/testgear-tms/adapters-python/"
    },
    "release_url": "https://pypi.org/project/testgear-adapter-nose/2.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Nose adapter for Test Gear",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17398865,
  "releases": {
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23253421420a818042aa20683290730f4094e6fbc77295be84fd0d50ae0174bc",
          "md5": "2168208ef5f5d8f6b6db239ee08f5a59",
          "sha256": "b29d5f44950692384634d8550c607938a010e2319dc05156b2a5f6609760b116"
        },
        "downloads": -1,
        "filename": "testgear-adapter-nose-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2168208ef5f5d8f6b6db239ee08f5a59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9416,
        "upload_time": "2023-03-22T13:42:50",
        "upload_time_iso_8601": "2023-03-22T13:42:50.310577Z",
        "url": "https://files.pythonhosted.org/packages/23/25/3421420a818042aa20683290730f4094e6fbc77295be84fd0d50ae0174bc/testgear-adapter-nose-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "23253421420a818042aa20683290730f4094e6fbc77295be84fd0d50ae0174bc",
        "md5": "2168208ef5f5d8f6b6db239ee08f5a59",
        "sha256": "b29d5f44950692384634d8550c607938a010e2319dc05156b2a5f6609760b116"
      },
      "downloads": -1,
      "filename": "testgear-adapter-nose-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2168208ef5f5d8f6b6db239ee08f5a59",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9416,
      "upload_time": "2023-03-22T13:42:50",
      "upload_time_iso_8601": "2023-03-22T13:42:50.310577Z",
      "url": "https://files.pythonhosted.org/packages/23/25/3421420a818042aa20683290730f4094e6fbc77295be84fd0d50ae0174bc/testgear-adapter-nose-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}