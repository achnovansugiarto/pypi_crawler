{
  "info": {
    "author": "Hal Gurgenci",
    "author_email": "h.gurgenci@uq.edu.au",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PyPi, GitHub, ReadTheDocs competencies #\nAfter spending one week trying to get ReadTheDocs documentation for `melib` without success, I decided to start from small and start learbibg the ropes the first.  Hence, this project.\n\nIn this project, I will start from a simple package with no dependencies.  Once I figure out how to `pypi` and `readthedocs` it, I will gradually make it more and more complex until I reach `melib` complexity.  This file will document the progress.\n\n## One Module, one file : `hgdemo.circle.py` ##\nI checked a few 'single module' entries on `GitHub` to find an example to follow.\n\nI picked `requests` as an example because\n* It is popular and reputable package\n* It has `ReadTheDocs` documentation\n* The repository has only one module (like my `melib`)\n\nStructure for the `GitHub` repository `requests`:\n* Owner name: psf https://github.com/psf\n* Repository name: requests https://github.com/psf/requests \n* Repository structure\n  * `.github ` I am not sure what this is for.  My guess is you need it when you have collaboration with multiple coders.\n  * `docs` Documentation folder (it looks like the documentation was created using sphinx)\n  * `ext` This includes image files presumably all from other sources\n  * `requests` This is the folder where you have the module files\n    * `__init.py__.py`\n    * `__version__.py`\n    * `_internal.utils.py`\n    * `adapters.py`\n    * (and 14 other files with `py` extsnsions)\n\nSo let us create a structure for `hgdemo` using the repository `requests` as en example.<br>\n$ `mkdir hgdemo`\n\nThis folder will be the `hgdemo` module.  All python files will be in this folder.  <br>\n$ `cd hgdemo`\n\nCreate `circle.py` module with two functions in the module folder (`hgdemo`).  These are `area(r)` and `peri(r)`.  Both functions and the module file itself have docstrings. \n\nThen create an empty file called `__init__.py` in the same folder as `circle.py` (the inner `hgdemo` folder)\n\nFinally, make a `docs` folder in the root folder.  We can now start following the `sphinx` process to create local dumentation.\n\n\n### Local Documentation using `sphinx` ###\nThis is the folder structure at this point:\n* `hgdemo`\n  * `docs`\\ (empty folder)\n  * `hgdemo`\\\n    * `__init__.py`  (empty file)\n    * `circle.py` (with two functions: `area` and `peri`)\n  * `README.md` (this file)\n\nIn VS Code, go to the `docs` folder and enter  \n$ `sphinx-quickstart`\n\nEnter the questions as follows:\n\nSeparate source and build directories (y/n)[n]: Pick the default ([n])  \nProject name: hgdemo  \nAuthor name(s): H Gurgenci  \nProject release []: June 2021  \nProject language [en]: __  \n\n`sphinx` then ends with the note thatr the following files were created:\n```\nCreating file H:\\My Documents\\git\\hgdemo\\docs\\conf.py.\nCreating file H:\\My Documents\\git\\hgdemo\\docs\\index.rst.\nCreating file H:\\My Documents\\git\\hgdemo\\docs\\Makefile.\nCreating file H:\\My Documents\\git\\hgdemo\\docs\\make.bat.\n```\nThis is the folder structure at this point:\n* `hgdemo`\n  * `docs`\\\n    * `_build`\\\n    * `_static`\\\n    * `_templates`\\\n    * `conf.py`\n    * `index.rst`\n    * `make.bat`\n    * `Makefile`\n  * `hgdemo`\\\n    * `__init__.py`  (empty file)\n    * `circle.py` (with two functions: `area` and `peri`)\n  * `README.md` (this file)\n\n#### Edit `conf.py` ####\n\nPath\n\n```\nimport os\nimport sys\nsys.path.insert(0, os.path.abspath('..'))\n```\n\nExtensions (I copied this from the conf file in the requests repository):\n\n```\nextensions = [\n    \"sphinx.ext.autodoc\",\n    \"sphinx.ext.intersphinx\",\n    \"sphinx.ext.todo\",\n    \"sphinx.ext.viewcode\",\n]\n```\n#### Edit `index.rst` ####\n\nThis is the `index` file after I edit it:\n```\n.. hgdemo documentation master file, created by sphinx-quickstart on Thu Jun  3 15:18:04 2021.\n\nhgdemo documents python package creation process\n================================================\n\nA simple header\n===============\nThe module has two files: circle.py and square.py.\nI did go through the process with one file (circle) first and then repeated the process.\nA log of my actions can be seen in the file README.md.\n\n   print(hgdemo.circle(2)\n   >> 12.56\n\nGuide\n^^^^^\n\n.. toctree::\n   :maxdepth: 2\n\n   api.rst\n\nIndices and tables\n==================\n\n* :ref:`genindex`\n* :ref:`modindex`\n* :ref:`search`\n```\n\n#### Create `api.rst` ####\n\nI create an `pi.rst` file with the following contents:\n\n```\nhgdemo API reference\n========================\n\n.. module:: hgdemo\n\nThis is a short API file demonstrating the bare essentials.\n\n.. automodule:: hgdemo.circle\n    :members:\n```\n#### Run `./make html` ####\nThe docs/_build/html/api.html and docs/_build/html/index.html files are generated by sphinx.  All good.\n\n### Remote Documentation ###\n* `git init` on `H:\\My Documents\\git\\hgdemo`\n* Create `.gitignore` with my standard ignore lines:\n  * *.pyc\n  * tmp\n  * pop\n  * .ipynb_checkpoints\n* `git add -A`\n* `git commit -am `'the first commit'\n* log in to github\n* Create `hgdemo` as an empty repository\n* `git remote add origin` https://github.com/Gurgenci/hgdemo.git\n* `git branch -M main`\n* `git push origin main`\n* Log in to `ReadtheDocs.org`\n* Import a repository (hgdemo)\n\nThe documentation is created: http://hgdemo.readthedocs.io/ \n\n## Create a second module, `square`. ##\nThe second module has two functions: `area`, `side` and it imports `numpy`.\n#### Add it to the local `git` ####\n* Add the following two lines to the end of `api.rst`:\n```  * \n.. automodule:: hgdemo.square\n    :members:\n```\n* ./make html\n#### Add it to the github: ####\n* `git add -A`\n* `git commit -am ` 'the secod module: square'\n* `git push origin main`\n* Refresh the `Overview` in `ReadtheDocs` project `hgdemo`\n* Build Version\n  * (even when I refresh, ReadtheDocs sometimes fails to reead the new the project and the Billd fails.  I then reset and wipe and latest and start again.  This usually works.)\n\n`ReadTheDocs` did not process `square.py` .  The build notes says:\n```\nWARNING: autodoc: failed to import module 'square' from module 'hgdemo'; the following exception was raised:\nNo module named 'numpy'\n```\nUnfortunately, the `requests` does not seem to be accessing `numpy`. \n\n#### `requirements.txt` ####\nI add the following file to `docs` folder:\n```\n  numpy>=1.0\n```\nThis made it possible to import `square`.  But there were problems in the documentation.\n\nRename `area` in `square` to `sqarea` and repeat `./make html`.\n\nThis time it worked.  I also note that I had to refresh the readthedocs `View Docs` pages to see the new changes.  Maybe this was the problem in the previous build.\n\n## Register the `hgdemo` in PyPi ##\n* Create two files in the root folder:\n\n_setup.cfg_:\n```\n  [metadata]\n  name = hgdemo\n  version = 0.0.1\n  author = Hal Gurgenci\n  author_email = h.gurgenci@uq.edu.au\n  description = For analysing strength of machine elements\n  long_description = file: README.md\n  long_description_content_type = text/markdown\n  url = https://github.com/Gurgenci/hgdemo\n  classifiers =\n      Programming Language :: Python :: 3\n      License :: OSI Approved :: MIT License\n      Operating System :: OS Independent\n\n  [options]\n  packages = find:\n  python_requires = >=3.0\n  include_package_data = True\n```\n_pyproject.toml_ :\n```\n  [build-system]\n  requires = [\n      \"setuptools>=42\",\n      \"wheel\"\n  ]\n  build-backend = \"setuptools.build_meta\"\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Gurgenci/hgdemo",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hgdemo",
    "package_url": "https://pypi.org/project/hgdemo/",
    "platform": "",
    "project_url": "https://pypi.org/project/hgdemo/",
    "project_urls": {
      "Homepage": "https://github.com/Gurgenci/hgdemo"
    },
    "release_url": "https://pypi.org/project/hgdemo/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.0",
    "summary": "Learning how to post python packages in PyPi, github, ReadtheDocs",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10573519,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "468ab885e2d112e060848f61024814d9b1e7f247c521be69e66a493d57579299",
          "md5": "4486811352fa76efda551f545c04548d",
          "sha256": "bed106f8e199c435f5de0b6d20bff3a325510d7ed617f23296e5e153b2d516bc"
        },
        "downloads": -1,
        "filename": "hgdemo-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4486811352fa76efda551f545c04548d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 17407,
        "upload_time": "2021-06-07T03:06:55",
        "upload_time_iso_8601": "2021-06-07T03:06:55.742169Z",
        "url": "https://files.pythonhosted.org/packages/46/8a/b885e2d112e060848f61024814d9b1e7f247c521be69e66a493d57579299/hgdemo-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2cf5ae2256ff8e293beeaf4072b5f88083282c712387ef71afef3aa10b943c7",
          "md5": "f2a95d577be7be395b21f1ec117ae1d1",
          "sha256": "04766bb3e40636db14d6e2c0f01a6952926845df4353e058494bc8dbac4a3776"
        },
        "downloads": -1,
        "filename": "hgdemo-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f2a95d577be7be395b21f1ec117ae1d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 16805,
        "upload_time": "2021-06-07T03:06:56",
        "upload_time_iso_8601": "2021-06-07T03:06:56.898698Z",
        "url": "https://files.pythonhosted.org/packages/e2/cf/5ae2256ff8e293beeaf4072b5f88083282c712387ef71afef3aa10b943c7/hgdemo-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "468ab885e2d112e060848f61024814d9b1e7f247c521be69e66a493d57579299",
        "md5": "4486811352fa76efda551f545c04548d",
        "sha256": "bed106f8e199c435f5de0b6d20bff3a325510d7ed617f23296e5e153b2d516bc"
      },
      "downloads": -1,
      "filename": "hgdemo-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4486811352fa76efda551f545c04548d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.0",
      "size": 17407,
      "upload_time": "2021-06-07T03:06:55",
      "upload_time_iso_8601": "2021-06-07T03:06:55.742169Z",
      "url": "https://files.pythonhosted.org/packages/46/8a/b885e2d112e060848f61024814d9b1e7f247c521be69e66a493d57579299/hgdemo-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e2cf5ae2256ff8e293beeaf4072b5f88083282c712387ef71afef3aa10b943c7",
        "md5": "f2a95d577be7be395b21f1ec117ae1d1",
        "sha256": "04766bb3e40636db14d6e2c0f01a6952926845df4353e058494bc8dbac4a3776"
      },
      "downloads": -1,
      "filename": "hgdemo-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f2a95d577be7be395b21f1ec117ae1d1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.0",
      "size": 16805,
      "upload_time": "2021-06-07T03:06:56",
      "upload_time_iso_8601": "2021-06-07T03:06:56.898698Z",
      "url": "https://files.pythonhosted.org/packages/e2/cf/5ae2256ff8e293beeaf4072b5f88083282c712387ef71afef3aa10b943c7/hgdemo-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}