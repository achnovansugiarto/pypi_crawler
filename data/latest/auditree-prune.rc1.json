{
  "info": {
    "author": "Auditree Security and Compliance",
    "author_email": "al.finkelstein@ibm.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![OS Compatibility][platform-badge]](#prerequisites)\n[![Python Compatibility][python-badge]][python-dl]\n[![pre-commit][pre-commit-badge]][pre-commit]\n[![Code validation](https://github.com/ComplianceAsCode/auditree-prune/workflows/format%20%7C%20lint%20%7C%20test/badge.svg)][lint-test]\n[![Upload Python Package](https://github.com/ComplianceAsCode/auditree-prune/workflows/PyPI%20upload/badge.svg)][pypi-upload]\n\n# auditree-prune\n\nThe Auditree evidence removal tool.\n\n## Introduction\n\nAuditree `prune` is a command line tool that assists in managing evidence locker\nabandoned evidence.  It provides a thoughtful way to remove evidence from an\nevidence locker while retaining the evidence metadata so that, if necessary,\nretrieving the removed evidence from git history is made easier.  Auditree `prune`\ndoes this by handling the removal of the evidence file(s) from an evidence locker\ngit repository and providing \"tombstoned\" metadata that can be used to map back to\na point in time where the evidence still existed in the evidence locker.\n\n## Prerequisites\n\n- Supported for execution on OSX and LINUX.\n- Supported for execution with Python 3.6 and above.\n\nPython 3 must be installed, it can be downloaded from the [Python][python-dl]\nsite or installed using your package manager.\n\nPython version can be checked with:\n\n```sh\npython --version\n```\n\nor\n\n```sh\npython3 --version\n```\n\nThe `prune` tool is available for download from [PyPI](https://pypi.org/).\n\n## Installation\n\nIt is best practice, but not mandatory, to run `prune` from a dedicated Python\nvirtual environment.  Assuming that you have the Python [virtualenv][virtual-env]\npackage already installed, you can create a virtual environment named `venv` by\nexecuting `virtualenv venv` which will create a `venv` folder at the location of\nwhere you executed the command.  Alternatively you can use the python `venv` module\nto do the same.\n\n```sh\npython3 -m venv venv\n```\n\nAssuming that you have a virtual environment and that virtual environment is in\nthe current directory then to install a new instance of `prune`, activate\nyour virtual environment and use `pip` to install `prune` like so:\n\n```sh\n. ./venv/bin/activate\npip install auditree-prune\n```\n\nAs we add new features to `prune` you will want to upgrade your `prune`\npackage.  To upgrade `prune` to the most recent version do:\n\n```sh\n. ./venv/bin/activate\npip install auditree-prune --upgrade\n```\n\nSee [pip documentation][pip-docs] for additional options when using `pip`.\n\n## Configuration\n\nSince Auditree `prune` interacts with Git repositories, it requires Git remote\nhosting service credentials in order to do its thing.  Auditree `prune` will by\ndefault look for a `username` and `token` in a `~/.credentials` file.  You can\noverride the credentials file location by using the `--creds` option on a `prune`\nCLI execution. Valid section headings include `github`, `github_enterprise`, `bitbucket`,\nand `gitlab`.  Below is an example of the expected credentials entry.\n\n```ini\n[github]\nusername=your-gh-username\ntoken=your-gh-token\n```\n\n## Execution\n\nAuditree `prune` is a simple CLI that performs the function of archiving off\nabandoned evidence.  As such, it has two execution modes; a `push-remote` mode and\na `dry-run` mode.  Both modes will clone a git repository and place it into the\n`$TMPDIR/prune` folder.  Both modes will also provide handy progress output as\n`prune` processes the abandoned evidence.  The final step in both modes is to remove\nthe locally cloned repository from the temp directory.  However, `push-remote` will\npush the changes to the remote repository before removing the locally cloned copy\nwhereas `dry-run` will not.\n\nAs most CLIs, Auditree `prune` comes with a help facility.\n\n```sh\nprune -h\n```\n\n```sh\nprune push-remote -h\n```\n\n```sh\nprune dry-run -h\n```\n\n### push-remote mode\n\nUse the `push-remote` mode when you want your changes to be applied to the remote\nevidence locker.  You can provide as many _evidence path_/_reason for removal_\nkey/value pairs as you need as part of the `--config` or as contents of your\n`--config-file`.\n\n```sh\nprune push-remote https://github.com/org-foo/repo-bar --config '{\"raw/foo/bar.json\":\"bar.json is abandoned\",...}'\n```\n\n```sh\nprune push-remote https://github.com/org-foo/repo-bar --config-file ./path/to/my/prune/evidence.json\n```\n\n### dry-run mode\n\nUse the `dry-run` mode when you want don't your changes to be applied to the remote\nevidence locker and are just interested in seeing what effect the execution will have\non our evidence locker before you commit to pushing your changes to the remote repository.\nYou can provide as many _evidence path_/_reason for removal_ key/value pairs as you\nneed as part of the `--config` or as contents of your `--config-file`.\n\n```sh\nprune dry-run https://github.com/org-foo/repo-bar --config '{\"raw/foo/bar.json\":\"bar.json is abandoned\",...}'\n```\n\n```sh\nprune dry-run https://github.com/org-foo/repo-bar --config-file ./path/to/my/prune/evidence.json\n```\n\n\n[platform-badge]: https://img.shields.io/badge/platform-osx%20|%20linux-orange.svg\n[python-badge]: https://img.shields.io/badge/python-v3.6+-blue.svg\n[pre-commit-badge]: https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white\n[python-dl]: https://www.python.org/downloads/\n[pre-commit]: https://github.com/pre-commit/pre-commit\n[pip-docs]: https://pip.pypa.io/en/stable/reference/pip/\n[virtual-env]: https://pypi.org/project/virtualenv/\n[lint-test]: https://github.com/ComplianceAsCode/auditree-prune/actions?query=workflow%3A%22Test+python+code+%26+lint%22\n[pypi-upload]: https://github.com/ComplianceAsCode/auditree-prune/actions?query=workflow%3A%22Upload+Python+Package%22\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://auditree.github.io/",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "auditree-prune",
    "package_url": "https://pypi.org/project/auditree-prune/",
    "platform": "",
    "project_url": "https://pypi.org/project/auditree-prune/",
    "project_urls": {
      "Homepage": "https://auditree.github.io/"
    },
    "release_url": "https://pypi.org/project/auditree-prune/1.0.0/",
    "requires_dist": [
      "auditree-framework (>=1.0.0)",
      "pre-commit (>=2.4.0) ; extra == 'dev'",
      "pytest (>=4.4.1) ; extra == 'dev'",
      "pytest-cov (>=2.6.1) ; extra == 'dev'",
      "recommonmark ; extra == 'dev'",
      "Sphinx (>=1.7.2) ; extra == 'dev'",
      "setuptools ; extra == 'dev'",
      "wheel ; extra == 'dev'",
      "twine ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "The Auditree evidence removal tool",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7802218,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "591aa8490efb0d58b78c1c52f210a5db730e2793c3eae9d612f12280da7ff8d5",
          "md5": "a87f437d50241f95101cafcaa302c37c",
          "sha256": "2c1d372edc6877a9718cb204acec0012a4394b72a0455012829dd037e26581e8"
        },
        "downloads": -1,
        "filename": "auditree_prune-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a87f437d50241f95101cafcaa302c37c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 12074,
        "upload_time": "2020-07-27T20:42:24",
        "upload_time_iso_8601": "2020-07-27T20:42:24.636628Z",
        "url": "https://files.pythonhosted.org/packages/59/1a/a8490efb0d58b78c1c52f210a5db730e2793c3eae9d612f12280da7ff8d5/auditree_prune-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "680eb29066af5194727b265834a6fad69d24eb004b405cfd4d25551cd090f7a2",
          "md5": "4b81fb2029366ea0ab81ecf2ff3085f3",
          "sha256": "9a2a707cc618e08695944ddbd3fa5634e1f548c397c490cf364f6b54601bc0cf"
        },
        "downloads": -1,
        "filename": "auditree-prune-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4b81fb2029366ea0ab81ecf2ff3085f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9462,
        "upload_time": "2020-07-27T20:42:26",
        "upload_time_iso_8601": "2020-07-27T20:42:26.745704Z",
        "url": "https://files.pythonhosted.org/packages/68/0e/b29066af5194727b265834a6fad69d24eb004b405cfd4d25551cd090f7a2/auditree-prune-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "591aa8490efb0d58b78c1c52f210a5db730e2793c3eae9d612f12280da7ff8d5",
        "md5": "a87f437d50241f95101cafcaa302c37c",
        "sha256": "2c1d372edc6877a9718cb204acec0012a4394b72a0455012829dd037e26581e8"
      },
      "downloads": -1,
      "filename": "auditree_prune-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a87f437d50241f95101cafcaa302c37c",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 12074,
      "upload_time": "2020-07-27T20:42:24",
      "upload_time_iso_8601": "2020-07-27T20:42:24.636628Z",
      "url": "https://files.pythonhosted.org/packages/59/1a/a8490efb0d58b78c1c52f210a5db730e2793c3eae9d612f12280da7ff8d5/auditree_prune-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "680eb29066af5194727b265834a6fad69d24eb004b405cfd4d25551cd090f7a2",
        "md5": "4b81fb2029366ea0ab81ecf2ff3085f3",
        "sha256": "9a2a707cc618e08695944ddbd3fa5634e1f548c397c490cf364f6b54601bc0cf"
      },
      "downloads": -1,
      "filename": "auditree-prune-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4b81fb2029366ea0ab81ecf2ff3085f3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9462,
      "upload_time": "2020-07-27T20:42:26",
      "upload_time_iso_8601": "2020-07-27T20:42:26.745704Z",
      "url": "https://files.pythonhosted.org/packages/68/0e/b29066af5194727b265834a6fad69d24eb004b405cfd4d25551cd090f7a2/auditree-prune-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}