{
  "info": {
    "author": "SignalFx, Inc.",
    "author_email": "signalfx-oss@splunk.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "#########################\nElasticSearch Opentracing\n#########################\n\nThis package enables distributed tracing for the Python elasticsearch-py and elasticsearch-dsl libraries.\n\nInstalation\n===========\n\nRun the following command:\n\n    $ pip install signalfx-instrumentation-elasticsearch\n\nGetting started\n===============\n\nPlease see the examples directory. Overall, usage requires that a tracer gets set, and initialize the Elasticsearch client specifying `TracingTransport` as tracing class, and optionally set an active span (to be used as parent span when tracing the actual Elasticsearch statements):\n\n.. code-block:: python\n\n    import elasticsearch_opentracing\n\n    elasticsearch_opentracing.init_tracing(tracer) # An OpenTracing compatible tracer.\n    es = Elasticsearch(transport_class=elasticsearch_opentracing.TracingTransport)\n\n    elasticsearch_opentracing.set_active_span(main_span) # Optional.\n\n    es.index(index='test-index', doc_type='tweet', id=99, body={\n        'author': 'linus',\n        'text': 'Hello there',\n        'timestamp': datetime.now(),\n    })\n    res = es.get(index='test-index', doc_type='tweet', id=99)\n\n    elasticsearch_opentracing.clear_active_span()\n\nBy default, all Elasticsearch requests are traced. It's possible to have it set to false when initializing the library, and call `enable_tracing` and `disable_tracing` to explicitly trace statements happening within that section:\n\n.. code-block:: python\n\n    elasticsearch_opentracing.init_tracing(tracer, trace_all_requests=False)\n\n    elasticsearch_opentracing.enable_tracing()\n\n    res1 = es.get(index='test-index', doc_type='tweet', id=99)\n    res2 = es.get(index='test-index', doc_type='user', id=666)\n\n    elasticsearch_opentracing.disable_tracing()\n\nWhen using `trace_all_requests`, any calls made to `enable_tracing` and `disable_tracing` are ignored.\n\nIn case of an exception happening under this block, an implicit call to `disable_tracing` will take place, with the request causing the error including error information with it.\n\nDSL\n===\n\nWhen using the `elasticsearch-dsl` library (which runs on top of `elasticsearch-py`), the same semantics and calls are used. When creating a default connection, the transport can be specified as well:\n\n.. code-block:: python\n\n    # elasticsearch_dsl.connections.connections\n    connections.create_connection(hosts=['127.0.0.1'],\n                                  transport_class=elasticsearch_opentracing.TracingTransport)\n\n\nMultithreading\n==============\n\nTracing and parent span data is kept as thread local data, which means that applications using many threads (Django, Flask, Pyramid, etc) will work just fine.\n\nFurther information\n===================\n\nIf youâ€™re interested in learning more about the OpenTracing standard, please visit `opentracing.io`_ or `join the mailing list`_. If you would like to implement OpenTracing in your project and need help, feel free to send us a note at `community@opentracing.io`_.\n\n.. _opentracing.io: http://opentracing.io/\n.. _join the mailing list: http://opentracing.us13.list-manage.com/subscribe?u=180afe03860541dae59e84153&id=19117aa6cd\n.. _community@opentracing.io: community@opentracing.io",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/signalfx/python-elasticsearch/tarball/1.0.1",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/signalfx/python-elasticsearch/",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "signalfx-instrumentation-elasticsearch",
    "package_url": "https://pypi.org/project/signalfx-instrumentation-elasticsearch/",
    "platform": "any",
    "project_url": "https://pypi.org/project/signalfx-instrumentation-elasticsearch/",
    "project_urls": {
      "Download": "https://github.com/signalfx/python-elasticsearch/tarball/1.0.1",
      "Homepage": "https://github.com/signalfx/python-elasticsearch/"
    },
    "release_url": "https://pypi.org/project/signalfx-instrumentation-elasticsearch/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "OpenTracing support for Elasticsearch",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9226383,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5af46580b941a9fa46f46a6e84428553b65441d9e2f263a19d4dd08f20a60259",
          "md5": "3650e629825b539cf84067a031ec72cb",
          "sha256": "caecd448c12c8b61053fc8d67c72f45253747d035d1f8ca273dab9b3db73ace4"
        },
        "downloads": -1,
        "filename": "signalfx-instrumentation-elasticsearch-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3650e629825b539cf84067a031ec72cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7892,
        "upload_time": "2021-01-25T17:54:31",
        "upload_time_iso_8601": "2021-01-25T17:54:31.592705Z",
        "url": "https://files.pythonhosted.org/packages/5a/f4/6580b941a9fa46f46a6e84428553b65441d9e2f263a19d4dd08f20a60259/signalfx-instrumentation-elasticsearch-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70dee506dcfe434cb889032a9f73ccf4704552724a3f1136ce1ef20c34a44d62",
          "md5": "dd4bc4a84cf9e958063e909b50fbd810",
          "sha256": "0833932fb0df0ac8408eb79bfbfd8ee935a07f807494b332ba4eaf786505673b"
        },
        "downloads": -1,
        "filename": "signalfx-instrumentation-elasticsearch-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dd4bc4a84cf9e958063e909b50fbd810",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7888,
        "upload_time": "2021-01-25T18:52:06",
        "upload_time_iso_8601": "2021-01-25T18:52:06.954342Z",
        "url": "https://files.pythonhosted.org/packages/70/de/e506dcfe434cb889032a9f73ccf4704552724a3f1136ce1ef20c34a44d62/signalfx-instrumentation-elasticsearch-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "70dee506dcfe434cb889032a9f73ccf4704552724a3f1136ce1ef20c34a44d62",
        "md5": "dd4bc4a84cf9e958063e909b50fbd810",
        "sha256": "0833932fb0df0ac8408eb79bfbfd8ee935a07f807494b332ba4eaf786505673b"
      },
      "downloads": -1,
      "filename": "signalfx-instrumentation-elasticsearch-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "dd4bc4a84cf9e958063e909b50fbd810",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7888,
      "upload_time": "2021-01-25T18:52:06",
      "upload_time_iso_8601": "2021-01-25T18:52:06.954342Z",
      "url": "https://files.pythonhosted.org/packages/70/de/e506dcfe434cb889032a9f73ccf4704552724a3f1136ce1ef20c34a44d62/signalfx-instrumentation-elasticsearch-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}