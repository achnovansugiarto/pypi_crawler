{
  "info": {
    "author": "Baidu NLP",
    "author_email": "nlp-parser@baidu.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# DDParser\n - 应用工具\n   - [基于句法分析的隐式向量表示工具](./tools/representation)\n   - [基于句法分析的显式结构表示工具](./tools/struct_info)\n - DDParser\n   - [依存句法分析简介](#依存句法分析简介)\n   - [项目介绍](#项目介绍)\n   - [快速开始](#快速开始)\n   - [进阶使用](#进阶使用)\n   - [数据集介绍](#数据集介绍)\n   - [文件结构](#文件结构)\n   - [后期计划](#后期计划)\n   - [参考资料](#参考资料)\n   - [文献引用](#文献引用)\n   - [如何贡献](#如何贡献)\n\n[![PyPi Latest Release](https://img.shields.io/pypi/v/ddparser.svg)](https://pypi.org/project/ddparser/)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](./LICENSE)\n\n\n## 依存句法分析简介\n\n依存句法分析是自然语言处理核心技术之一，旨在通过分析句子中词语之间的依存关系来确定句子的句法结构，如下图实例所示：\n![struct](./ddparser/struct.png)<br>\n依存句法分析作为底层技术，可直接用于提升其他NLP任务的效果，这些任务包括但不限于语义角色标注、语义匹配、事件抽取等。该技术具有很高的研究价值及应用价值。为了方便研究人员和商业合作伙伴共享效果领先的依存句法分析技术，我们开源了基于大规模标注数据训练的高性能的依存句法分析工具，并提供一键式安装及预测服务，用户只需一条命令即可获取依存句法分析结果。\n\n## 项目介绍\nDDParser(Bai**d**u **D**ependency **Parser**)是百度自然语言处理部基于深度学习平台飞桨([PaddlePaddle](https://www.paddlepaddle.org.cn/))和大规模标注数据研发的依存句法分析工具。其训练数据不仅覆盖了多种输入形式的数据，如键盘输入query、语音输入query，还覆盖了多种场景的数据，如新闻、论坛。该工具在随机评测数据上取得了优异的效果。同时，该工具使用简单，一键完成安装及预测。\n\n### 效果说明\n| 数据集   | UAS    | LAS    |\n| :------- | :----- | :----- |\n| CTB5     | 90.31% | 89.06% |\n| DuCTB1.0 | 94.80% | 92.88% |\n\n- **CTB5**: [Chinese Treebank 5.0](https://catalog.ldc.upenn.edu/LDC2005T01) 是Linguistic Data Consortium (LDC)在2005年发布的中文句法树库，包含18,782条句子，语料主要来自新闻和杂志，如新华社日报。\n- **DuCTB1.0**: `Baidu Chinese Treebank1.0`是百度构建的中文句法树库，即本次所发布的依存句法分析工具-DDParser的训练数据来源，具体信息参见[数据来源](#数据来源)\n  \n<font size=3 color=gray>注：由于CTB5数据集规模较小，最优模型（即评测模型）使用了句子的word级表示、POS(词性标签)表示、以及预训练词向量，而DuCTB1.0数据集规模较大，其最优模型仅使用了句子的word级和char级表示。</font>\n\n\n## 快速开始\n\n### 版本依赖\n* `python`: >=3.7.0\n* [`paddlepaddle`](https://www.paddlepaddle.org.cn/): >=2.3\n* [`LAC`](https://github.com/baidu/lac): >=2.1\n<br>\n\n### 一键安装\n用户可以使用以下方式进行一键安装及预测：\n- pip安装 pip install ddparser                         \n- 半自动安装 先从 https://pypi.org/project/ddparser/ 下载包，解压后使用`python setup.py install`安装包。\n\n### 功能使用\n#### 未分词方式\n* 代码示例\n```python\n>>> from ddparser import DDParser\n>>> ddp = DDParser()\n>>> # 单条句子\n>>> ddp.parse(\"百度是一家高科技公司\")\n[{'word': ['百度', '是', '一家', '高科技', '公司'], 'head': [2, 0, 5, 5, 2], 'deprel': ['SBV', 'HED', 'ATT', 'ATT', 'VOB']}]\n>>> # 多条句子\n>>> ddp.parse([\"百度是一家高科技公司\", \"他送了一本书\"])\n[{'word': ['百度', '是', '一家', '高科技', '公司'], 'head': [2, 0, 5, 5, 2], 'deprel': ['SBV', 'HED', 'ATT', 'ATT', 'VOB']}, \n{'word': ['他', '送', '了', '一本', '书'], 'head': [2, 0, 2, 5, 2], 'deprel': ['SBV', 'HED', 'MT', 'ATT', 'VOB']}]\n>>> # 输出概率和词性标签\n>>> ddp = DDParser(prob=True, use_pos=True)\n>>> ddp.parse([\"百度是一家高科技公司\"])\n[{'word': ['百度', '是', '一家', '高科技', '公司'], 'postag': ['ORG', 'v', 'm', 'n', 'n'], 'head': [2, 0, 5, 5, 2], 'deprel': ['SBV', 'HED', 'ATT', 'ATT', 'VOB'], 'prob': [1.0, 1.0, 1.0, 1.0, 1.0]}]\n>>> # buckets=True, 数据集长度不均时处理速度更快\n>>> ddp = DDParser(buckets=True)\n>>> # 使用GPU\n>>> ddp = DDParser(use_cuda=True)\n```\n\n#### 已分词方式\n* 代码示例\n```python\n>>> from ddparser import DDParser\n>>> ddp = DDParser()\n>>> ddp.parse_seg([['百度', '是', '一家', '高科技', '公司'], ['他', '送', '了', '一本', '书']])\n[{'word': ['百度', '是', '一家', '高科技', '公司'], 'head': [2, 0, 5, 5, 2], 'deprel': ['SBV', 'HED', 'ATT', 'ATT', 'VOB']}, \n{'word': ['他', '送', '了', '一本', '书'], 'head': [2, 0, 2, 5, 2], 'deprel': ['SBV', 'HED', 'MT', 'ATT', 'VOB']}]\n>>> # 输出概率\n>>> ddp = DDParser(prob=True)\n>>> ddp.parse_seg([['百度', '是', '一家', '高科技', '公司']])\n[{'word': ['百度', '是', '一家', '高科技', '公司'], 'head': [2, 0, 5, 5, 2], 'deprel': ['SBV', 'HED', 'ATT', 'ATT', 'VOB'], 'prob': [1.0, 1.0, 1.0, 1.0, 1.0]}]\n```\n<font size=3 color=gray>注：标签含义见[依存句法分析标注关系集合](#依存句法分析标注关系集合)。</font>\n## 进阶使用\n### 项目下载\n\n用户可以通过`git clone https://github.com/baidu/DDParser`下载源码，并且执行下列命令安装依赖库：\n```shell\npip install --upgrade paddlepaddle-gpu\npip install --upgrade LAC\n```\n\n### 模型下载\n我们发布了基于`DuCTB1.0`训练的模型，通过执行`cd ddparser && sh download_pretrained_model.sh`下载模型，模型将保存在./ddparser/model_files/baidu下。\n\n### 训练\n用户可以通过`sh run_train.sh`训练模型。详细命令如下所示：\n\n```\nCUDA_VISIBLE_DEVICES=0 python -u run.py \\\n        --mode=train \\\n        --use_cuda \\\n        --feat=none \\\n        --preprocess \\\n        --model_files=model_files/baidu \\\n        --train_data_path=data/baidu/train.txt \\\n        --valid_data_path=data/baidu/dev.txt \\\n        --test_data_path=data/baidu/test.txt \\\n        --buckets=15\n```\n<font size=3 color=gray>注：用户可通过修改`train_data_path`, `valid_data_path`和`test_data_path`指定训练集，评估集和测试集, 参数含义见[参数说明](#参数说明)，所用数据集格式见[数据格式说明](#数据格式说明)。</font>\n\n### 评估\n用户可以通过执行`sh download_data.sh`下载我们提供的评估集，其将保存在./data/baidu/下。该评估集共2,592条句子，平均长度为11.27字符。<br>\n用户可以通过执行`sh run_evaluate.sh`评估模型效果，详细命令如下所示：\n```shell\nCUDA_VISIBLE_DEVICES=0 python run.py \\\n                                --mode=evaluate \\\n                                --use_cuda \\\n                                --model_files=model_files/baidu \\\n                                --test_data_path=data/baidu/test.txt \\\n                                --buckets=15 \\\n                                --tree\n```\n<font size=3 color=gray>注：用户可通过修改`test_data_path`指定评估集,所用数据集格式见[数据格式说明](#数据格式说明)。</font>\n\n### 预测\n基于源码，我们提供两种基于命令行的预测方法，分别用于已分词数据和未分词数据。\n\n**基于已分词数据的预测**<br>\n\n预测的输入数据要求以[`CoNLL-X`](#数据格式说明)([官方说明](https://ilk.uvt.nl/~emarsi/download/pubs/14964.pdf))格式组织，缺失字段使用“-”代替。通过执行`sh run_predict.sh`进行预测，详细命令如下所示：\n```shell\nCUDA_VISIBLE_DEVICES=0 python run.py \\\n                                --mode=predict \\\n                                --use_cuda \\\n                                --model_files=model_files/baidu \\\n                                --infer_data_path=data/baidu/test.txt \\\n                                --infer_result_path=data/baidu/test.predict \\\n                                --buckets=15 \\\n                                --tree \n```\n<font size=3 color=gray>注：用户可通过修改`infer_data_path`和`infer_result_path`指定要预测的数据集和预测结果的路径。</font>\n\n**基于未分词数据的预测**<br>\n预测的输入数据为字符串形式，一行一条数据。通过执行`sh run_predict_query.sh`对来自标准输入的数据进行预测，详细命令如下所示：\n```shell\nCUDA_VISIBLE_DEVICES=0 python run.py \\\n                                --mode=predict_q \\\n                                --use_cuda \\\n                                --model_files=model_files/baidu \\\n                                --buckets=15 \\\n                                --tree\n```\n<font size=3 color=gray>注：默认调用[`LAC`](https://github.com/baidu/lac)预测分词和词性<br></font>\n\n### 参数说明\n```\nmode: 任务模式（train, evaluate, predict, predict_q）\nconfig_path：保存超参文件的路径\nmodel_files：保存模型的路径\ntrain_data_path：训练集文件的路径\nvalid_data_path：验证集文件的路径\ntest_data_path：测试集文件的路径\ninfer_data_path：待预测文件的路径\npretrained_embedding_dir：预训练词向量的路径\nbatch_size：批尺寸\nlog_path：日志的路径\nlog_level: 日志等级，默认INFO（'DEBUG', 'INFO', 'WARNING', 'ERROR', 'FATAL'）\ninfer_result_path：预测结果保存的路径\nuse_cuda：如果设置，则使用GPU\npreprocess：训练模式下的使用参数，设置表示会基于训练数据进行词统计等操作，不设置默认使用已统计好的信息（节省统计时间）；针对同一训练数据，多次训练可不设置该参数。\nseed：随机数种子（默认：1）\nthreads：控制每个paddle实例的线程数\ntree：确保输出结果是正确的依存句法树\nprob：如果设置，则输出每个弧的概率，保存在结果的PROB列。\nfeat：选择输入的特征（none，char，pos；ernie-*模型feat只能选择none）\nbuckets：选择最大分桶数（默认：15）\npunct：评估结果的时候是否包含标点\nencoding_model：选择底层模型, 默认ernie-lstm(lstm, transformer, ernie-1.0, ernie-tiny, ernie-lstm)\n```\n### 数据格式说明\n本项目数据格式基于CoNLL-X([官方说明](https://ilk.uvt.nl/~emarsi/download/pubs/14964.pdf))的风格，缺少的字段使用\"-\"代替（用户只用关注ID，FROM，HEAD，DEPREL，PROB等列即可），如“百度是一家高科技公司”的可解析为如下格式：\n```\nID      FROM   LEMMA CPOSTAG POSTAG  FEATS   HEAD    DEPREL   PROB   PDEPREL\n1       百度    百度    -       -       -       2       SBV     1.0     -\n2       是      是      -       -       -       0       HED     1.0     -\n3       一家    一家    -       -       -       5       ATT     1.0     -\n4       高科技  高科技  -       -       -       5       ATT     1.0     -\n5       公司    公司    -       -       -       2       VOB     1.0     -\n```\n\n## 数据集介绍\n### 依存句法分析标注关系集合\nDuCTB1.0数据集含14种标注关系，具体含义见下表：\n\n| Label |  关系类型  | 说明                     | 示例                           |\n| :---: | :--------: | :----------------------- | :----------------------------- |\n|  SBV  |  主谓关系  | 主语与谓词间的关系       | 他送了一本书(他<--送)          |\n|  VOB  |  动宾关系  | 宾语与谓词间的关系       | 他送了一本书(送-->书)          |\n|  POB  |  介宾关系  | 介词与宾语间的关系       | 我把书卖了（把-->书）          |\n|  ADV  |  状中关系  | 状语与中心词间的关系     | 我昨天买书了（昨天<--买）      |\n|  CMP  |  动补关系  | 补语与中心词间的关系     | 我都吃完了（吃-->完）          |\n|  ATT  |  定中关系  | 定语与中心词间的关系     | 他送了一本书(一本<--书)        |\n|   F   |  方位关系  | 方位词与中心词的关系     | 在公园里玩耍(公园-->里)        |\n|  COO  |  并列关系  | 同类型词语间关系         | 叔叔阿姨(叔叔-->阿姨)          |\n|  DBL  |  兼语结构  | 主谓短语做宾语的结构     | 他请我吃饭(请-->我，请-->吃饭) |\n|  DOB  | 双宾语结构 | 谓语后出现两个宾语       | 他送我一本书(送-->我，送-->书) |\n|  VV   |  连谓结构  | 同主语的多个谓词间关系   | 他外出吃饭(外出-->吃饭)        |\n|  IC   |  子句结构  | 两个结构独立或关联的单句 | 你好，书店怎么走？(你好<--走)  |\n|  MT   |  虚词成分  | 虚词与中心词间的关系     | 他送了一本书(送-->了)          |\n|  HED  |  核心关系  | 指整个句子的核心         |                                |\n\n### 数据来源\nDuCTB1.0：`Baidu Chinese Treebank 1.0`是百度构建的中文依存句法树库，包含近100万句子（本次发布模型的训练数据近53万句）。语料来自搜索query、网页句子，覆盖了手写、语音等多种输入形式，同时覆盖了新闻、论坛等多种场景。\n\n## 文件结构\n```text\n.\n├── LICENSE\n├── README.md\n├── requirements.txt   #依赖模块及版本要求\n├── ddparser           #DDParser的核心代码，包含模型，测试数据，运行脚本等\n```\n\n## 后期计划\n-  蒸馏模型，减小模型体积\n\n\n## 参考资料\n本项目所用方法出自论文[《Deep Biaffine Attention for Neural Dependency Parsing》](https://arxiv.org/abs/1611.01734)，对应的pytorch版本参见[yzhangcs/parser](https://github.com/yzhangcs/parser)。\n\n## 文献引用\n如果您的学术工作成果中使用了DDParser，请您增加下述引用。我们非常欣慰DDParser能够对您的学术工作带来帮助。\n```text\n@misc{zhang2020practical,\n    title={A Practical Chinese Dependency Parser Based on A Large-scale Dataset},\n    author={Shuai Zhang and Lijie Wang and Ke Sun and Xinyan Xiao},\n    year={2020},\n    eprint={2009.00901},\n    archivePrefix={arXiv},\n    primaryClass={cs.CL}\n}\n```\n\n## 如何贡献\n我们欢迎开发者向DDParser贡献代码。如果您开发了新功能或发现了bug，欢迎给我们提交PR。\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/baidu/ddparser",
    "keywords": "ddparser chinese depencency parser",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ddparser",
    "package_url": "https://pypi.org/project/ddparser/",
    "platform": "any",
    "project_url": "https://pypi.org/project/ddparser/",
    "project_urls": {
      "Homepage": "https://github.com/baidu/ddparser"
    },
    "release_url": "https://pypi.org/project/ddparser/1.0.8/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A chinese dependency parser tool by Baidu NLP.",
    "version": "1.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16697958,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44731927d93aebe43151b16d0d747ca4b7d61801d1f7b9540d3cef5c4e421597",
          "md5": "b2a5618e66ae6bc384e0cdb7f4efd9e8",
          "sha256": "e659d493361233acfda05f8b8721c4078c131c737d626543380c7a1ff09d447d"
        },
        "downloads": -1,
        "filename": "ddparser-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b2a5618e66ae6bc384e0cdb7f4efd9e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 76875,
        "upload_time": "2020-08-03T03:32:49",
        "upload_time_iso_8601": "2020-08-03T03:32:49.258317Z",
        "url": "https://files.pythonhosted.org/packages/44/73/1927d93aebe43151b16d0d747ca4b7d61801d1f7b9540d3cef5c4e421597/ddparser-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42e66a7cffabcc6defe27b91b051a7081855f6a28a7e2c7b1203f0a967646800",
          "md5": "f6dd4bcfb3887697e87a54b7bf78aaba",
          "sha256": "4990b1e8f4f58505838d8a7b9d4122c42fabfdc164f3bb955dcf77abbf2cdc31"
        },
        "downloads": -1,
        "filename": "ddparser-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f6dd4bcfb3887697e87a54b7bf78aaba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 115473,
        "upload_time": "2020-08-24T02:16:07",
        "upload_time_iso_8601": "2020-08-24T02:16:07.151265Z",
        "url": "https://files.pythonhosted.org/packages/42/e6/6a7cffabcc6defe27b91b051a7081855f6a28a7e2c7b1203f0a967646800/ddparser-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "290bb0fe0ccffc0b234b9e1e78d9faba6928ccd63a2ca9e036921169f95c6b99",
          "md5": "f00d18c85af8023bddd297f82bcecac6",
          "sha256": "c5e2502bb1a8e0fee932cd5ccfa20f663fbaf6385de97cabd8af25691680bbe3"
        },
        "downloads": -1,
        "filename": "ddparser-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f00d18c85af8023bddd297f82bcecac6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 90888,
        "upload_time": "2020-12-03T07:19:27",
        "upload_time_iso_8601": "2020-12-03T07:19:27.142850Z",
        "url": "https://files.pythonhosted.org/packages/29/0b/b0fe0ccffc0b234b9e1e78d9faba6928ccd63a2ca9e036921169f95c6b99/ddparser-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e5679cb4b8819d8dd1cbdc59eef7a377e501b5ca61d0b0bedae02e44b4f2582",
          "md5": "5cdb6690534850100d32217e512c568b",
          "sha256": "d4b6d56ac861f5dc59cebb29546536e382eacd7224350b3da123fce04bf2867d"
        },
        "downloads": -1,
        "filename": "ddparser-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5cdb6690534850100d32217e512c568b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 185468,
        "upload_time": "2021-05-24T08:05:15",
        "upload_time_iso_8601": "2021-05-24T08:05:15.484251Z",
        "url": "https://files.pythonhosted.org/packages/1e/56/79cb4b8819d8dd1cbdc59eef7a377e501b5ca61d0b0bedae02e44b4f2582/ddparser-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d31c0ae8eb735ee63dbed36780dc75a113887e7390ab96cd6223c6216f7a6638",
          "md5": "2df4c86db746a2779b8a00efd7240abd",
          "sha256": "fc6790aef5512f6e9044db7b574bfdc3ff3c64db20b1d38b53463fa57b7409fc"
        },
        "downloads": -1,
        "filename": "ddparser-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2df4c86db746a2779b8a00efd7240abd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 69458,
        "upload_time": "2021-05-24T08:50:36",
        "upload_time_iso_8601": "2021-05-24T08:50:36.186537Z",
        "url": "https://files.pythonhosted.org/packages/d3/1c/0ae8eb735ee63dbed36780dc75a113887e7390ab96cd6223c6216f7a6638/ddparser-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa15f84fcb039ef4da8a686941d9a703bd99b52e162542becf70081a4469d38c",
          "md5": "5bebcd79d4264809091e5b4ce7f00c58",
          "sha256": "b7bb494352e68fb62cab8498160394d8708d15d23987e8fa68997dfe2211e10f"
        },
        "downloads": -1,
        "filename": "ddparser-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5bebcd79d4264809091e5b4ce7f00c58",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 69400,
        "upload_time": "2021-05-24T12:09:31",
        "upload_time_iso_8601": "2021-05-24T12:09:31.594380Z",
        "url": "https://files.pythonhosted.org/packages/fa/15/f84fcb039ef4da8a686941d9a703bd99b52e162542becf70081a4469d38c/ddparser-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9691571774291145b2ffbeffc1004be18c64ef6fced8fe6755af8896259dbac8",
          "md5": "cb0822cd07824556e2840c570b53eb74",
          "sha256": "9b85f0a02e1ae14978f9ac8c9cfcba06489352c64c0f1f18c27fcec53a48a601"
        },
        "downloads": -1,
        "filename": "ddparser-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb0822cd07824556e2840c570b53eb74",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 69349,
        "upload_time": "2021-07-11T11:15:29",
        "upload_time_iso_8601": "2021-07-11T11:15:29.628684Z",
        "url": "https://files.pythonhosted.org/packages/96/91/571774291145b2ffbeffc1004be18c64ef6fced8fe6755af8896259dbac8/ddparser-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cfb2bd99fd9202b4560fa8fc2c4e76cf464bd8f86fa581879b4f5f26e69d418e",
          "md5": "553aeabd5b844d21233c8d0be262f221",
          "sha256": "f5ae167fbbcc5ce0bc3b97ef2ea61f9e946286f254c11fc883bf4d6d7f5f8821"
        },
        "downloads": -1,
        "filename": "ddparser-1.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "553aeabd5b844d21233c8d0be262f221",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 137541,
        "upload_time": "2022-12-19T11:53:19",
        "upload_time_iso_8601": "2022-12-19T11:53:19.881749Z",
        "url": "https://files.pythonhosted.org/packages/cf/b2/bd99fd9202b4560fa8fc2c4e76cf464bd8f86fa581879b4f5f26e69d418e/ddparser-1.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82dac467c098cdae76d12916015287c983bafb947d48aed05804143416e6a8bb",
          "md5": "3592df2fc9552cff466b968c8702bd1d",
          "sha256": "53f45e9c79748520e49172e5fe94ac9b0eed5e0b8a191ec2807f1717218dd5e0"
        },
        "downloads": -1,
        "filename": "ddparser-1.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3592df2fc9552cff466b968c8702bd1d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 137622,
        "upload_time": "2023-02-05T03:09:22",
        "upload_time_iso_8601": "2023-02-05T03:09:22.092330Z",
        "url": "https://files.pythonhosted.org/packages/82/da/c467c098cdae76d12916015287c983bafb947d48aed05804143416e6a8bb/ddparser-1.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82dac467c098cdae76d12916015287c983bafb947d48aed05804143416e6a8bb",
        "md5": "3592df2fc9552cff466b968c8702bd1d",
        "sha256": "53f45e9c79748520e49172e5fe94ac9b0eed5e0b8a191ec2807f1717218dd5e0"
      },
      "downloads": -1,
      "filename": "ddparser-1.0.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3592df2fc9552cff466b968c8702bd1d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 137622,
      "upload_time": "2023-02-05T03:09:22",
      "upload_time_iso_8601": "2023-02-05T03:09:22.092330Z",
      "url": "https://files.pythonhosted.org/packages/82/da/c467c098cdae76d12916015287c983bafb947d48aed05804143416e6a8bb/ddparser-1.0.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}