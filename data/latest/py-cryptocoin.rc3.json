{
  "info": {
    "author": "Theodorus van der Sluijs",
    "author_email": "theo@vandersluijs.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "Python CryptoCoin\n=================\n\nThis python3 script is based on the `coinmarketcap\nAPI <https://coinmarketcap.com/api/>`__\n\nFor getting coin data you can use the shortcodes for the coins.\n\nSo you don't have to use 'Basic Attention Token' but 'bat' is enough to\nget the coin data.\n\nLimits\n------\n\nPlease limit requests to no more than 10 per minute.\n\nEndpoints update every 5 minutes.\n\nCreate your own caching mechanism to keep requests to minimum\n\nHow do I get set up?\n--------------------\n\n-  Install this script with:\n\n   -  pip3 py\\_cryptocoin --upgrade (or pip py\\_nsapi --upgrade )\n\n-  ready to use it!\n\nCurrent Coins\n-------------\n\n'btc' : 'Bitcoin', 'eth' : 'Ethereum', 'xrp' : 'Ripple', 'bch' :\n'Bitcoin Cash', 'ada' : 'Cardano', 'ltc' : 'Litecoin', 'xem' : 'NEM',\n'neo' : 'NEO', 'xlm' : 'Stellar', 'eos' : 'EOS', 'miota' : 'IOTA',\n'dash' : 'Dash', 'xmr' : 'Monero', 'trx' : 'TRON', 'btg' : 'Bitcoin\nGold', 'icx' : 'ICON', 'qtum' : 'Qtum', 'etc' : 'Ethereum Classic',\n'lsk' : 'Lisk', 'xrb' : 'RaiBlocks', 'ven' : 'VeChain', 'omg' :\n'OmiseGO', 'usdt' : 'Tether', 'ppt' : 'Populous', 'zec' : 'Zcash', 'xvg'\n: 'Verge', 'sc' : 'Siacoin', 'bnb' : 'Binance Coin', 'strat' :\n'Stratis', 'bcn' : 'Bytecoin', 'steem' : 'Steem', 'ardr' : 'Ardor',\n'snt' : 'Status', 'mkr' : 'Maker', 'rep' : 'Augur', 'bts' : 'BitShares',\n'kcs' : 'KuCoin Shares', 'waves' : 'Waves', 'zrx' : '0x', 'doge' :\n'Dogecoin', 'etn' : 'Electroneum', 'veri' : 'Veritaseum', 'kmd' :\n'Komodo', 'dcr' : 'Decred', 'drgn' : 'Dragonchain', 'wtc' : 'Walton',\n'dcn' : 'Dentacoin', 'lrc' : 'Loopring', 'ark' : 'Ark', 'salt' : 'SALT',\n'qash' : 'QASH', 'dgb' : 'DigiByte', 'bat' : 'Basic Attention Token',\n'gnt' : 'Golem', 'hsr' : 'Hshare', 'knc' : 'Kyber Network', 'gas' :\n'Gas', 'wax' : 'WAX', 'ethos' : 'Ethos', 'pivx' : 'PIVX', 'gbyte' :\n'Byteball Bytes', 'fun' : 'FunFair', 'aion' : 'Aion', 'rhoc' : 'RChain',\n'zcl' : 'ZClassic', 'fct' : 'Factom', 'smart' : 'SmartCash', 'dent' :\n'Dent', 'mona' : 'MonaCoin', 'elf' : 'aelf', 'powr' : 'Power Ledger',\n'dgd' : 'DigixDAO', 'kin' : 'Kin', 'rdd' : 'ReddCoin', 'ae' :\n'Aeternity', 'btm' : 'Bytom', 'nas' : 'Nebulas', 'sys' : 'Syscoin',\n'req' : 'Request Network', 'nebl' : 'Neblio', 'link' : 'ChainLink',\n'eng' : 'Enigma', 'xp' : 'Experience Points', 'gxs' : 'GXShares', 'maid'\n: 'MaidSafeCoin', 'sub' : 'Substratum', 'xzc' : 'ZCoin', 'nxs' :\n'Nexus', 'nxt' : 'Nxt', 'med' : 'MediBloc', 'emc' : 'Emercoin', 'btx' :\n'Bitcore', 'bnt' : 'Bancor', 'cnd' : 'Cindicator', 'qsp' : 'Quantstamp',\n'cnx' : 'Cryptonex', 'icn' : 'Iconomi', 'game' : 'GameCredits', 'pay' :\n'TenX', 'part' : 'Particl'\n\nGlobal Data\n-----------\n\nThe global data return a Dictionary (DICT) with total market cap and\nvolume of currencies\n\nParameters\n~~~~~~~~~~\n\nOptional parameters: - (string) convert - return 24h volume, and market\ncap in terms of another currency. Valid values are: - \"AUD\", \"BRL\",\n\"CAD\", \"CHF\", \"CLP\", \"CNY\", \"CZK\", \"DKK\", \"EUR\", \"GBP\", \"HKD\", \"HUF\",\n\"IDR\", \"ILS\", \"INR\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PHP\",\n\"PKR\", \"PLN\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"TWD\", \"ZAR\"\n\nReturn Fields\n~~~~~~~~~~~~~\n\nYou will get a DICT with the followin fields\n\n-  total\\_market\\_cap\\_usd\n-  total\\_24h\\_volume\\_usd\n-  bitcoin\\_percentage\\_of\\_market\\_cap\n-  active\\_currencies\n-  active\\_assets\n-  active\\_markets\n-  last\\_updated\n\nExample code\n~~~~~~~~~~~~\n\n.. code:: python3\n\n    import CryptoCoin\n\n    cc = CryptoCoin()\n    data = cc.getGlobalData() #standard currency (USD)\n\n    #or\n\n    data = cc.getGlobalData('EUR') #to get by currency\n\n    print(data)\n\nCoin Data\n---------\n\nReturns al information about one cryptocoin and the pricing\n\nIf you add the convert parameter it will return the cryptocoin price in\nthat currency\n\nParameters\n~~~~~~~~~~\n\n-  (string) cryptocoin shortcode, see Current Coins above what to use\n\nOptional parameters: -(string) currency - return price, 24h volume, and\nmarket cap in terms of another currency. Valid values are: - \"AUD\",\n\"BRL\", \"CAD\", \"CHF\", \"CLP\", \"CNY\", \"CZK\", \"DKK\", \"EUR\", \"GBP\", \"HKD\",\n\"HUF\", \"IDR\", \"ILS\", \"INR\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"NZD\",\n\"PHP\", \"PKR\", \"PLN\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"TWD\", \"ZAR\"\n\nReturn Fields\n~~~~~~~~~~~~~\n\nYou will get a DICT with the followin fields\n\n-  id\n-  name\n-  symbol\n-  rank\n-  price\\_usd [depening on convert / currency]\n-  price\\_btc\n-  24h\\_volume\\_usd [depening on convert / currency]\n-  market\\_cap\\_usd [depening on convert / currency]\n-  available\\_supply\n-  total\\_supply\n-  max\\_supply\n-  percent\\_change\\_1h\n-  percent\\_change\\_24h\n-  percent\\_change\\_7d\n-  last\\_updated\n\nExample code\n~~~~~~~~~~~~\n\n.. code:: python3\n\n    import CryptoCoin\n\n    coin = \"bat\"\n\n    cc = CryptoCoin()\n    data = cc.(coin) # standard US Dollars\n\n    #or\n\n    data = cc.(coin, \"EUR\") #get the coin price back in Euro's\n\n    print(data)\n\nAll Coins Data\n--------------\n\nReturns al information about all current know cryptocoins and the\npricing\n\nIf you add the convert parameter it will return the cryptocoin price in\nthat currency\n\nParameters\n~~~~~~~~~~\n\nOptional parameters: - (int) start - return results from rank [start]\nand above - (int) limit - return a maximum of [limit] results (default\nis 100, use 0 to return all results) - (string) currency - return price,\n24h volume, and market cap in terms of another currency. Valid values\nare: - \"AUD\", \"BRL\", \"CAD\", \"CHF\", \"CLP\", \"CNY\", \"CZK\", \"DKK\", \"EUR\",\n\"GBP\", \"HKD\", \"HUF\", \"IDR\", \"ILS\", \"INR\", \"JPY\", \"KRW\", \"MXN\", \"MYR\",\n\"NOK\", \"NZD\", \"PHP\", \"PKR\", \"PLN\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\",\n\"TWD\", \"ZAR\"\n\nReturn Fields\n~~~~~~~~~~~~~\n\nYou will get a DICT with the followin fields\n\n-  id\n-  name\n-  symbol\n-  rank\n-  price\\_usd [depening on convert / currency]\n-  price\\_btc\n-  24h\\_volume\\_usd [depening on convert / currency]\n-  market\\_cap\\_usd [depening on convert / currency]\n-  available\\_supply\n-  total\\_supply\n-  max\\_supply\n-  percent\\_change\\_1h\n-  percent\\_change\\_24h\n-  percent\\_change\\_7d\n-  last\\_updated\n\nExample code\n~~~~~~~~~~~~\n\n.. code:: python3\n\n    import CryptoCoin\n\n    cc = CryptoCoin()\n    data = cc.getAllCoinData() # Get default data in US Dollars\n\n    start = 100\n    limit = 10\n    currency = \"EUR\"\n\n    data = cc.getAllCoinData(start, limit, currrency)\n\n    print(data)\n\nWho do I talk to?\n-----------------\n\n-  Theodorus van der Sluijs\n-  theo@vandersluijs.nl\n\nLicense\n-------\n\nAttribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)\n\nYou are free to:\n~~~~~~~~~~~~~~~~\n\n-  Share — copy and redistribute the material in any medium or format\n-  Adapt — remix, transform, and build upon the material\n\n-The licensor cannot revoke these freedoms as long as you follow the\nlicense terms.-\n\nUnder the following terms:\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n-  Attribution — You must give appropriate credit, provide a link to the\n   license, and indicate if changes were made. You may do so in any\n   reasonable manner, but not in any way that suggests the licensor\n   endorses you or your use.\n-  NonCommercial — You may not use the material for commercial purposes.\n-  ShareAlike — If you remix, transform, or build upon the material, you\n   must distribute your contributions under the same license as the\n   original.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/tvdsluijs/py_cryptocoin",
    "keywords": "trains transport train dutch ns",
    "license": "CC BY-NC-SA 4.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-cryptocoin",
    "package_url": "https://pypi.org/project/py-cryptocoin/",
    "platform": "",
    "project_url": "https://pypi.org/project/py-cryptocoin/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/tvdsluijs/py_cryptocoin"
    },
    "release_url": "https://pypi.org/project/py-cryptocoin/1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python3 CryptoCoin data parser",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3522741,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35bbe2579c2451dd85ecbe5cbb3c866e3533c29e34e108673a406d544c44a79e",
          "md5": "a5cebbfc709f4c1208fa5b6dc7d0810a",
          "sha256": "bd60c1f19e5bd2f97b44132a82f4c81b0112d7bb467f96179f6f765f63b7ce8f"
        },
        "downloads": -1,
        "filename": "py_cryptocoin-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a5cebbfc709f4c1208fa5b6dc7d0810a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5970,
        "upload_time": "2018-01-21T12:25:51",
        "upload_time_iso_8601": "2018-01-21T12:25:51.140176Z",
        "url": "https://files.pythonhosted.org/packages/35/bb/e2579c2451dd85ecbe5cbb3c866e3533c29e34e108673a406d544c44a79e/py_cryptocoin-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2c0f300faa2b5cfbfd36665a2cdcbd39a41c754cd3a993f05675a8938500b43",
          "md5": "e535dbfb5008a1bd7b08242035257b2e",
          "sha256": "bd7d1842b5d977e2af327c557a397afb9cb7c93ff9d0e05832e879f698e46c94"
        },
        "downloads": -1,
        "filename": "py_cryptocoin-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e535dbfb5008a1bd7b08242035257b2e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6372,
        "upload_time": "2018-01-21T14:41:36",
        "upload_time_iso_8601": "2018-01-21T14:41:36.379749Z",
        "url": "https://files.pythonhosted.org/packages/a2/c0/f300faa2b5cfbfd36665a2cdcbd39a41c754cd3a993f05675a8938500b43/py_cryptocoin-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "620fedd13464499595bf210676e20dab288f399339ba8585995f59209c90ae69",
          "md5": "4205fe9948e3a2fedfa6fe8de61bb5cd",
          "sha256": "87a1a9cf1c2571874f7ed14e08b1de9536fbdeafbd73675d808b5a2ce74eb4a6"
        },
        "downloads": -1,
        "filename": "py_cryptocoin-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4205fe9948e3a2fedfa6fe8de61bb5cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7243,
        "upload_time": "2018-01-26T06:32:50",
        "upload_time_iso_8601": "2018-01-26T06:32:50.558977Z",
        "url": "https://files.pythonhosted.org/packages/62/0f/edd13464499595bf210676e20dab288f399339ba8585995f59209c90ae69/py_cryptocoin-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "620fedd13464499595bf210676e20dab288f399339ba8585995f59209c90ae69",
        "md5": "4205fe9948e3a2fedfa6fe8de61bb5cd",
        "sha256": "87a1a9cf1c2571874f7ed14e08b1de9536fbdeafbd73675d808b5a2ce74eb4a6"
      },
      "downloads": -1,
      "filename": "py_cryptocoin-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4205fe9948e3a2fedfa6fe8de61bb5cd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7243,
      "upload_time": "2018-01-26T06:32:50",
      "upload_time_iso_8601": "2018-01-26T06:32:50.558977Z",
      "url": "https://files.pythonhosted.org/packages/62/0f/edd13464499595bf210676e20dab288f399339ba8585995f59209c90ae69/py_cryptocoin-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}