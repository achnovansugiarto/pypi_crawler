{
  "info": {
    "author": "Bea Steers",
    "author_email": "bea.steers@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Confuse - Jinja Variables\nSimple Ansible-style variable parsing for Confuse config files using Jinja2.\n\n## Install\n\n```bash\npip install confuse_jinja\n```\n\n## Usage\n\n```python\nimport confuse_jinja\nconfuse_jinja.enable()\n# now you can use jinja2 templates inside your keys\n\nconfig = confuse.Configuration('asdf', read=False)\nconfig.set({\n    'asdf': {\n        'blah': 'asdf{{ C.other.thing }}'\n    },\n    'nested': '{{ C.asdf }}',\n    'other': {'thing': 456}\n})\n\nassert config['asdf']['blah'].get() == 'asdf456'\nassert config['nested'].get() == {'blah': 'asdf456'}\n```\n\n## How it works\n - for any config values that are a string, render it as a jinja2 template\n - try to parse rendered string as python using ast functions graciously pulled from ansible's source code\n    - if a valid python object (list, dict, etc.) can be parsed from the string the object will be returned, otherwise it will return as a string.\n\n## TODO:\n - test in a yaml file (possible syntax errors)\n - enable on a config-by-config object basis instead of globally.\n    - would need to replace `ConfigView.__getitem__` for a single Config\n    - would require using `self.Subview` instead of global `Subview`",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/beasteers/confuse_jinja",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "confuse-jinja",
    "package_url": "https://pypi.org/project/confuse-jinja/",
    "platform": "",
    "project_url": "https://pypi.org/project/confuse-jinja/",
    "project_urls": {
      "Homepage": "https://github.com/beasteers/confuse_jinja"
    },
    "release_url": "https://pypi.org/project/confuse-jinja/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7242525,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1c1269c3391e617ad42d79dcc6fe410fc9fdf07a138157ca59c846a86be9721",
          "md5": "ddeb2e0ddd9b4d68793b391f36bb5c24",
          "sha256": "71cd0a37483faa356d38287bd626591148f9eaea20742144bc2f6c49fd616aa5"
        },
        "downloads": -1,
        "filename": "confuse_jinja-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ddeb2e0ddd9b4d68793b391f36bb5c24",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3864,
        "upload_time": "2020-05-14T18:27:52",
        "upload_time_iso_8601": "2020-05-14T18:27:52.741491Z",
        "url": "https://files.pythonhosted.org/packages/d1/c1/269c3391e617ad42d79dcc6fe410fc9fdf07a138157ca59c846a86be9721/confuse_jinja-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d1c1269c3391e617ad42d79dcc6fe410fc9fdf07a138157ca59c846a86be9721",
        "md5": "ddeb2e0ddd9b4d68793b391f36bb5c24",
        "sha256": "71cd0a37483faa356d38287bd626591148f9eaea20742144bc2f6c49fd616aa5"
      },
      "downloads": -1,
      "filename": "confuse_jinja-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ddeb2e0ddd9b4d68793b391f36bb5c24",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3864,
      "upload_time": "2020-05-14T18:27:52",
      "upload_time_iso_8601": "2020-05-14T18:27:52.741491Z",
      "url": "https://files.pythonhosted.org/packages/d1/c1/269c3391e617ad42d79dcc6fe410fc9fdf07a138157ca59c846a86be9721/confuse_jinja-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}