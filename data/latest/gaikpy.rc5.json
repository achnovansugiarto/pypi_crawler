{
  "info": {
    "author": "Erik Strahl",
    "author_email": "strahl@informatik.uni-hamburg.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# Introduction\n\n![Nico using ik](https://github.com/knowledgetechnologyuhh/gaikpy/blob/main/nico_ik.jpg?raw=true \"NICO ik\")\n\ngaikpy is a pure python approach to solve the inverse kinematics for every URDF modelled robot.\n\ngaikpy solves the inverse kinematics for every URDF based robot model using a genetic algorithm approach. No pretraining is needed. gaikpy is completely realised in python. gaikpy has already integrated the [NICO robot](https://www.inf.uni-hamburg.de/en/inst/ab/wtm/research/neurobotics/nico.html), but you can easily extend this with every robot with a URDF model at hand. Just take the URDF and define your chain ( containing the joints you want to use) , calculate the ik and maybe visualize it. \n\nIf you use the library in an academic context, you can cite it by citing the paper below. We analysed the ik in a hybrid manipulation context for the NICO robot ( the measured calculation times in the paper are already outdated, gaikpy is much faster now ).\n\nNeuro-Genetic Visuomotor Architecture for Robotic Grasping   \nMatthias Kerzel, Josua Spisak, Erik Strahl, Stefan Wermter\nArtificial Neural Networks and Machine Learning â€“ ICANN 2020, pages 533-545 - 2020.\n\nhttps://www2.informatik.uni-hamburg.de/wtm/publications/2020/KSSW20/ICANN_2020__Neuro_Genetic_Visuomotor_Framework_Preprint.pdf\n\n# History and credits\n\nThe Neuro Inspired COmpanion ( or [NICO](https://www.inf.uni-hamburg.de/en/inst/ab/wtm/research/neurobotics/nico.html) ) is the robot we developed at the [Knowledge Technology group](https://www.inf.uni-hamburg.de/en/inst/ab/wtm/about.html) at the [University of Hamburg](https://www.uni-hamburg.de/en.html) to fullfill our [research needs](https://www2.informatik.uni-hamburg.de/wtm/publications/2017/KSMNHW17/NICO_RO-MAN_2017-PREPRINT-2017.pdf). \n\nOur philosophy is to have a full python based interface for the NICO ( besides our ROS based interface ), so we searched first for an existing python based ik library. We found [ikpy](https://github.com/Phylliade/ikpy), which is a great software, but was at least at time we started not able to solve the full-pose ik ( but only the position ) for our NICO robot. \n\nAs we favour the idea of bioinspired algoritms in our group and one of our former students has [developed a genetic based ik approach in C#](https://ieeexplore.ieee.org/document/7866587), we took parts of this concept and adapted this to our python approach, which you see here with gaikpy.\n\n\n![Nico using ik](https://github.com/knowledgetechnologyuhh/gaikpy/blob/main/nico_opt.gif?raw=true \"NICO ik\")\n\n# Installation\n\n## From the pypi repository\n\n+ create a python environment\n\n    python3 -m venv env\n+ activate the environement\n\n    source ./env/bin/activate\n+ get gaikpy and the depening packages\n\n    pip install gaikpy\n+ run the demo\n\n    demo.py\n\n## Using the souce code from github\n\n+ Clone the repository with git clone\n\n    git clone https://github.com/knowledgetechnologyuhh/gaikpy.git\n+ Change to the directory\n\n    cd gaikpy\n+ Create a python environment\n\n    python3 -m venv env\n+ Activate your environment \n\n    source ./env/bin/activate\n+ Install\n\n    python setup.py develop \n\nor \n\n    python setup.py install\n+ Run the test\n\n    python setup.py test\nYou should have no errors ( warnings are fine, the included libraries might throw some)\n+ Run the demo\n\n    python demo.py\n\n\n# Build the docs\n\n+ cd gaikpy/docs\n+ make html\n+ browse at gaikpy/docs/build/html\n\n# Usage\n\nUse the gaikpy to solve the full pose ik for you. \n\nThe pip package and the github rep contain both the NICO urdf model, so that you use it instantly.\n\nThe demo.py program uses the NICO model and calculates the ik for some test values.\n\nTake a look at demo.py and adapt it to you usecase or robot:\n\nStart with your imports\n\n    #!/usr/bin/env python\n    # -*- coding: utf-8 -*-\n\n    import gaikpy\n    from gaikpy import chain\n    from gaikpy import robot\n    from gaikpy import chain_definitions\n    import time\n    import pickle\n    import os\n\n\nWe need a URDF, which is the ROS, but as well in other context, model representation of a robot\nHere we take take NICO model that is included in the package\n\n    nico_path = gaikpy.get_nico_urdf_path()+\"/complete_modified_bounds.urdf\"\n\nWe have to define a chain containing the URDF and a list of joint / link combinations with all joints \ntaking part in he movement. Below is a definiion o the right NICO arm\n\n    rightchain = chain.Chain.from_urdf_file(\n                # The path to he URDF\n                nico_path , \n                # The chain: We start with a link and the first joint up to the last joint involved\n                base_elements=[\"torso:11\", \"r_shoulder_z\", \"right_shoulder:11\", \n                \"r_shoulder_y\", \"right_collarbone:11\", \"r_arm_x\", \"right_upper_arm:11\", \"r_elbow_y\", \n                \"right_lower_arm:11\", \"r_wrist_z\",\"right_wrist:11\", \"r_wrist_x\", \n                \"right_palm:11\", \"r_ringfingers_x\"],\n                # Not all the joints listed have to take part in the movement\n                # This is a mask blending out joints inbetween the chain \n                # (here we do not want to involve the finger joints) \n                active_joints_mask=[False, True, True, True, True, True, True, False, False, False])\n\n\nFor visualization we built he a full robot model\nagain using the URDF\n\n    nico_right_chain=chain_definitions.nico_right_chain_active\n    nico=robot.robot(nico_path,nico_right_chain)\n\nWe use some poses, where we can be sure, that they are mechanically \nreachable (cause we have used forward kinematics to generate the dataset, see this in the examples about generating movement examples)\n\n    with open(gaikpy.get_nico_data_path()+'/nico_right_20_new.p', 'rb') as f:\n                sample_set = pickle.load(f)\n\nGo through all the samples in file\nThis contains pairs of poses in Eukledian and in the joint space \nOf cours we use only the Eukledian ones in this example\n\n    for sample in sample_set:\n\n        # joi is the data in joint space for the robot (not used)\n        # sfwr is the pose in Euklidan space\n        (joi,sfwr)=sample\n        print (\"Original pose: \\n\" + str(sfwr))\n\n        # Show a target pointer in the scene, so that we know, which pose NICOs hand shoul take \n        nico.update_target(sfwr)\n\nCalculate the IK, get the robots joint values\n\n        ik_kor = rightchain.inverse_kinematics(sfwr, method=\"ga_simple\",include_orientation=True,\n                            numGenerations=1000,max_iter=100000,dist_acc=0.01,or_acc=0.1,\n                            multiproc=True,orientation_weight=-1)\n\n        # Change the joint data to the full joint representation\n        joi=rightchain.active_from_full(ik_kor)\n\n        # Get the Eukledian pose using orward kinematics\n        fwr=rightchain.forward_kinematics(ik_kor,full_kinematics=False)\n\n        #Let us compare the results\n        print (\"gaikpy result: \\n\" + str(fwr))\n\nUpdate the pose on the visualised NICO\n\n        nico.update_robot_pose(joi)\n\n        #Wait a time to display the result\n        time.sleep(0.3)\n\n\n# Use other robots\n\nUsing other robots is very easy, if you have a URDF model of the robot at hand. Just take the URDF model and list the joints and links of your active chain until the end effector. Just adapt the demo.py or the NICO example ./examples/visualise_NICO.py to see how it works.\nWe will integrate other robots by default in the future. \n\n# License\n\nGNU GENERAL PUBLIC LICENSE Version 3\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/knowledgetechnologyuhh/gaikpy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gaikpy",
    "package_url": "https://pypi.org/project/gaikpy/",
    "platform": "Posix; Linux; MacOS X; Windows",
    "project_url": "https://pypi.org/project/gaikpy/",
    "project_urls": {
      "Homepage": "https://github.com/knowledgetechnologyuhh/gaikpy"
    },
    "release_url": "https://pypi.org/project/gaikpy/0.3.4.2/",
    "requires_dist": [
      "Sphinx",
      "m2r2",
      "sphinxcontrib-napoleon",
      "numpy",
      "scipy (==1.4.1)",
      "sympy",
      "math3d",
      "matplotlib",
      "transforms3d",
      "urdfpy",
      "ikpy (==3.0.1)"
    ],
    "requires_python": "",
    "summary": "Calculates and visualises forward and (full-pose) inverse kinematic realised with a genetic algorithm (ga) for URDF models",
    "version": "0.3.4.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9319412,
  "releases": {
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89e718400e993abe63d3c19169ad2f4ed38c9d8e2625704897587a8cfad4f410",
          "md5": "e3b968de21635f095f5e2a5cb1922f2d",
          "sha256": "1bf543b0f7fe8c5ec6d64e07bfabc04b34fe7de51b8f6e26dabce3c7f754ccc8"
        },
        "downloads": -1,
        "filename": "gaikpy-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e3b968de21635f095f5e2a5cb1922f2d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 51680694,
        "upload_time": "2020-12-02T15:21:22",
        "upload_time_iso_8601": "2020-12-02T15:21:22.799551Z",
        "url": "https://files.pythonhosted.org/packages/89/e7/18400e993abe63d3c19169ad2f4ed38c9d8e2625704897587a8cfad4f410/gaikpy-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef1d35351f0403d6217586eca9909a2a49a4eb155438a9a95f1f54a2ce945a67",
          "md5": "3fabde6f0289ae949cb02d2089728079",
          "sha256": "d5f2577b9af31592a565a3b4206946654ba230dde8aa1939bea4dfc0db96f110"
        },
        "downloads": -1,
        "filename": "gaikpy-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3fabde6f0289ae949cb02d2089728079",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 51705373,
        "upload_time": "2020-12-02T16:35:01",
        "upload_time_iso_8601": "2020-12-02T16:35:01.534547Z",
        "url": "https://files.pythonhosted.org/packages/ef/1d/35351f0403d6217586eca9909a2a49a4eb155438a9a95f1f54a2ce945a67/gaikpy-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45f74ee4188a9f598e1a5807aed98df074d643cad3928c61acfa4dba7d932673",
          "md5": "a96e18f4e103dad0d88ab3d740781753",
          "sha256": "59f621856541202473255553383a2e32cee26683edfd7961a07dccac0fb0975a"
        },
        "downloads": -1,
        "filename": "gaikpy-0.3.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a96e18f4e103dad0d88ab3d740781753",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28030473,
        "upload_time": "2020-12-04T17:12:22",
        "upload_time_iso_8601": "2020-12-04T17:12:22.913909Z",
        "url": "https://files.pythonhosted.org/packages/45/f7/4ee4188a9f598e1a5807aed98df074d643cad3928c61acfa4dba7d932673/gaikpy-0.3.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2de400a9968db5bf3b32a404f44f61ca78ae8356fcd15850ee2f389b820f2e0a",
          "md5": "8fccdfb8f81418a72447aa7f16d558c7",
          "sha256": "1c1dc194616e1dafa4e39cafe8f763a58177c2bf91b288f4024cd9453432458e"
        },
        "downloads": -1,
        "filename": "gaikpy-0.3.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8fccdfb8f81418a72447aa7f16d558c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 51683256,
        "upload_time": "2020-12-04T17:12:29",
        "upload_time_iso_8601": "2020-12-04T17:12:29.772746Z",
        "url": "https://files.pythonhosted.org/packages/2d/e4/00a9968db5bf3b32a404f44f61ca78ae8356fcd15850ee2f389b820f2e0a/gaikpy-0.3.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "921838448cfd09b85ba1f422f48a5832620bc09d75e7512c630456068a53a250",
          "md5": "981364ec5796a780f2b240cbb2e79d4e",
          "sha256": "b6f5aee7e4f61af263fb945d8fe2038ed208887eee8ba04122db6a9a3f42f60e"
        },
        "downloads": -1,
        "filename": "gaikpy-0.3.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "981364ec5796a780f2b240cbb2e79d4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28031880,
        "upload_time": "2020-12-07T16:59:26",
        "upload_time_iso_8601": "2020-12-07T16:59:26.411301Z",
        "url": "https://files.pythonhosted.org/packages/92/18/38448cfd09b85ba1f422f48a5832620bc09d75e7512c630456068a53a250/gaikpy-0.3.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c026a0b8749389324ef224f41f6fdff6923218f1b920f998851a9eb08100acb",
          "md5": "c758a47c5c122e475be6add07899d704",
          "sha256": "95710a7afb328ae2657edd32a3d042e64a0b564f5bad98e336ee224d503e0874"
        },
        "downloads": -1,
        "filename": "gaikpy-0.3.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c758a47c5c122e475be6add07899d704",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 51686309,
        "upload_time": "2020-12-07T16:59:37",
        "upload_time_iso_8601": "2020-12-07T16:59:37.598410Z",
        "url": "https://files.pythonhosted.org/packages/9c/02/6a0b8749389324ef224f41f6fdff6923218f1b920f998851a9eb08100acb/gaikpy-0.3.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d097b7fc81185748ca8b63fcde477e3de52654fd67dd19136102ef966b908fb",
          "md5": "b1bee912ee7afe238b7ae22e0ef874a6",
          "sha256": "519750bfb975eda627a81dac13bd09da61f2911536e683b5beeda75e4ca1560a"
        },
        "downloads": -1,
        "filename": "gaikpy-0.3.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1bee912ee7afe238b7ae22e0ef874a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28032008,
        "upload_time": "2021-02-04T16:43:30",
        "upload_time_iso_8601": "2021-02-04T16:43:30.210782Z",
        "url": "https://files.pythonhosted.org/packages/9d/09/7b7fc81185748ca8b63fcde477e3de52654fd67dd19136102ef966b908fb/gaikpy-0.3.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2449468af31a4eacde0874186d338942f1e77da9bc226f26a673d416c1d8a191",
          "md5": "60da60c637dad89d7f738821d45fc80e",
          "sha256": "7f75b917474c47d64d158f9963552ad0ce4a6f7b2c170e9cdeae6d7a2986ad6b"
        },
        "downloads": -1,
        "filename": "gaikpy-0.3.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "60da60c637dad89d7f738821d45fc80e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 51686551,
        "upload_time": "2021-02-04T16:43:59",
        "upload_time_iso_8601": "2021-02-04T16:43:59.911271Z",
        "url": "https://files.pythonhosted.org/packages/24/49/468af31a4eacde0874186d338942f1e77da9bc226f26a673d416c1d8a191/gaikpy-0.3.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d097b7fc81185748ca8b63fcde477e3de52654fd67dd19136102ef966b908fb",
        "md5": "b1bee912ee7afe238b7ae22e0ef874a6",
        "sha256": "519750bfb975eda627a81dac13bd09da61f2911536e683b5beeda75e4ca1560a"
      },
      "downloads": -1,
      "filename": "gaikpy-0.3.4.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b1bee912ee7afe238b7ae22e0ef874a6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 28032008,
      "upload_time": "2021-02-04T16:43:30",
      "upload_time_iso_8601": "2021-02-04T16:43:30.210782Z",
      "url": "https://files.pythonhosted.org/packages/9d/09/7b7fc81185748ca8b63fcde477e3de52654fd67dd19136102ef966b908fb/gaikpy-0.3.4.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2449468af31a4eacde0874186d338942f1e77da9bc226f26a673d416c1d8a191",
        "md5": "60da60c637dad89d7f738821d45fc80e",
        "sha256": "7f75b917474c47d64d158f9963552ad0ce4a6f7b2c170e9cdeae6d7a2986ad6b"
      },
      "downloads": -1,
      "filename": "gaikpy-0.3.4.2.tar.gz",
      "has_sig": false,
      "md5_digest": "60da60c637dad89d7f738821d45fc80e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 51686551,
      "upload_time": "2021-02-04T16:43:59",
      "upload_time_iso_8601": "2021-02-04T16:43:59.911271Z",
      "url": "https://files.pythonhosted.org/packages/24/49/468af31a4eacde0874186d338942f1e77da9bc226f26a673d416c1d8a191/gaikpy-0.3.4.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}