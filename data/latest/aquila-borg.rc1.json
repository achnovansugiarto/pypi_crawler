{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: CEA CNRS Inria Logiciel Libre License, version 2.1 (CeCILL-2.1)",
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Natural Language :: English",
      "Programming Language :: C",
      "Programming Language :: C++",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "==================================================\nBORG: Bayesian Origin Reconstruction from Galaxies\n==================================================\n\nCopyright(c) 2009-2020 Jens Jasche, 2014-2020 Guilhem Lavaux\n\nVersion 2.1\n\nDescription\n-----------\n\nThis is the main component of the Bayesian Large Scale Structure inference\npipeline.\n\nA lot of complementary informations are available on the wiki https://www.aquila-consortium.org/.\n\nCloning all the modules\n-----------------------\n\nThe ARES software is only the foundation for other modules that adds many more functionalities to the framework.\n\nNotably, the Aquila collaboration has developped the BORG extension that encodes advanced forward model and complex likelihoods\nto run inferences on galaxy clustering, lyman-alpha, and more.\n\nTo get access to the extra modules please contact Aquila consortium members, who will tell you what are the policy in places.\nOnce your account on bitbucket is authorized you may use the script `get-aquila-modules.sh`. The procedure is as follow:\n\n* first change to the desired branch (i.e. develop/2.1) with `git checkout the_interesting_branch`\n* clone all the adequate modules `get-aquila-modules.sh --clone`\n* setup the branches for the modules `get-aquila-modules.sh --branch-set`\n* Polish up your environment by installing the git hooks `get-aquila-modules.sh --hooks`\n\n**NOTE** the git hook require the availability `clang-format` to check on the formatting. If it is not present, then it will fail\nthe execution.\n\nBuilding\n--------\n\nThere is a special command line that prepares prepares build system to compile\nall tools and libraries. It resides in the root directory of the ares source\ntree and is called \"build.sh\". By default it will build everything in the\n\"build\" subdirectory. To get all the options please run with the option\n\"--help\".\n\nAfter the tool has bee run, you can move to the build directory and execute\n\"make\", which will build everything.\n\nPlease pay attention warnings and error messages. The most important are color marked.\nNotably some problems may occur if two versions of the same compiler are used for C and C++.\nTo adjust that it is sufficient to explicitly specify the compiler path with the options '--c-compiler'\nand '--cxx-compiler' of \"build.sh\".\n\n*Note*: When modules are present in extra/, you may prevent them from building by putting an empty file called `DO_NOT_BUILD` in the\ncorresponding directory folder of the concerned module. For example, to prevent `borg` from building do `touch extra/borg/DO_NOT_BUILD`\nfrom the present directory and the build system will ignore `borg`.\n\nCompiler compatibilities\n------------------------\n\nTested on GCC 7.0 - 10.2.\nSome performance regressions were noted with gcc 8.1.\nCountermeasures have been introduced though some corner cases\nmay still be a bit slower. Clang is unaffected by this regression.\n\nNote that GCC <= 6 fails because it does not support correctly C++14 features.\n\n\nDocumentation\n-------------\n\nPlease refer to `docs/README.txt`.\n\nModules\n-------\n\nThe core package supports to have extensions statically linked to the core.\nThey have to be put in extra/ and the cmake scripts will automatically link\nto it. Check 'extra/demo/' for an example.\n\nUsage policy\n------------\n\nIf you are using |ares| for your project, please cite the following articles for ARES2, ARES3 and BORG3:\n\n* Jasche, Kitaura, Wandelt, 2010, MNRAS, 406, 1 (arXiv 0911.2493)\n* Jasche & Lavaux, 2015, MNRAS, 447, 2 (arXiv 1402.1763)\n* Lavaux & Jasche, 2016, MNRAS, 455, 3 (arXiv 1509.05040)\n* Jasche & Lavaux, 2019, A&A, 625, A64 (arXiv 1806.11117)\n\nHowever, bear in mind that depending on the features that you are using you may want to cite other papers as well.\nHere is a non-exhaustive list of those articles:\n\n* Model development:\n\n  * HADES epoch:\n\n    * HMC, exponential transform, linear bias: Jasche, Kitaura, Wandelt, 2010, 406, 1 (arXiv 0911.2493)\n    * HMC, exponential transform, power law bias:\n\n      * Jasche, Leclercq, Wandelt, 2015\n      * Jasche, Wandelt, 2012, MNRAS, 425, 1042 (arXiv 1106.2757)\n\n  * Foreground/Robustification:\n\n    * Jasche, Lavaux, 2017, A&A (arXiv:1706.08971)\n    * Porqueres, Kodi Ramanah, Jasche, Lavaux, 2019, A&A (arXiv: 1812.05113)\n\n  * Cosmic expansion model:\n\n    * Kodi Ramanah, Lavaux, Jasche, Wandelt, 2019, A&A (arXiv: 1808.07496)\n\n  * Photometric redshifts\n\n    * HADES with Photo-Z: Jasche & Wandelt, 2012, MNRAS, 425, 1042 (arXiv: 1106.2757)\n\n  * Galaxy shear:\n\n    * Porqueres, Heavens, Mortlock & Lavaux, 2021, MNRAS, 502, 3035 (arXiv 2011.07722)\n    * Porqueres, Heavens, Mortlock & Lavaux, 2022, MNRAS, 509, 3194 (arXiv 2108.04825)\n\n  * Cosmic velocity field:\n\n    * Prideaux-Ghee, Leclercq, Lavaux, Heavens, Jasche, 2022, MNRAS (arXiv: 2204.00023)\n    * Boruah, Lavaux, Hudson, 2022, MNRAS (arXiv 2111.15535)\n\n  * BORG-PM\n\n    * Jasche & Lavaux, 2019, A&A, 625, A64 (arXiv 1806.11117)\n\n  * EFT bias model and likelihood\n\n    * Schmidt, Elsner, Jasche, Nguyen, Lavaux, JCAP 01, 042 (2019) (arXiv:1808.02002)\n    * Schmidt, Cabass, Jasche, Lavaux, JCAP 11, 008 (2020) (arXiv:2004.06707)\n\n\n* Data applications\n\n  * SDSS Main Galaxy sample:\n  * SDSS3 LRG sample:\n\n    * Lavaux, Jasche & Leclercq, 2019, arXiv:1909.06396\n\n  * 2M++ sample:\n\n    * Lavaux & Jasche, 2016, MNRAS, 455, 3 (arXiv 1509.05040)\n    * Jasche & Lavaux, 2019, A&A, 625, A64 (arXiv 1806.11117)\n\n|hades| and |borg| papers have a different listing.\n\nFor a full listing of publications from the Aquila consortium. Please check\nhttps://aquila-consortium.org/publications.html\n\nAcknowledgements\n----------------\n\nThis work has been funded by the following grants and institutions over the\nyears:\n\n* the DFG cluster of excellence \"Origin and Structure of the Universe\"\n  (http://www.universe-cluster.de).\n* Institut Lagrange de Paris (grant ANR-10-LABX-63, http://ilp.upmc.fr) within\n  the context of the Idex SUPER subsidized by the French government through\n  the Agence Nationale de la Recherche (ANR-11-IDEX-0004-02).\n* BIG4 (ANR-16-CE23-0002) (https://big4.iap.fr)\n* The \"Programme National de Cosmologie et Galaxies\" (PNCG, CNRS/INSU)\n* Through the grant code ORIGIN, it has received support from\n  the \"Domaine d'Interet Majeur (DIM) Astrophysique et Conditions d'Apparitions\n  de la Vie (ACAV)\" from Ile-de-France region.\n",
    "description_content_type": "text/plain",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "cosmology,inference,simulation,statistics",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aquila-borg",
    "package_url": "https://pypi.org/project/aquila-borg/",
    "platform": null,
    "project_url": "https://pypi.org/project/aquila-borg/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/aquila-borg/2.1/",
    "requires_dist": [
      "numpy"
    ],
    "requires_python": ">=3.6",
    "summary": "ARES/BORG engine packaged in a Python module",
    "version": "2.1",
    "yanked": true,
    "yanked_reason": "borg transitional package wrongly bundled"
  },
  "last_serial": 17479948,
  "releases": {
    "2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97fe9be7f5e789413e7040943f2793f9abfa0563b49dcb480edd887aa326413f",
          "md5": "ed8d7f6d4279086e7d1477222ec1e949",
          "sha256": "a1e3ea7f487924a49d59b8dd23952e5c4648fef6a7036f4254373532cd210181"
        },
        "downloads": -1,
        "filename": "aquila_borg-2.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "ed8d7f6d4279086e7d1477222ec1e949",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.6",
        "size": 16967286,
        "upload_time": "2023-03-28T15:20:57",
        "upload_time_iso_8601": "2023-03-28T15:20:57.185547Z",
        "url": "https://files.pythonhosted.org/packages/97/fe/9be7f5e789413e7040943f2793f9abfa0563b49dcb480edd887aa326413f/aquila_borg-2.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "yanked": true,
        "yanked_reason": "borg transitional package wrongly bundled"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "97fe9be7f5e789413e7040943f2793f9abfa0563b49dcb480edd887aa326413f",
        "md5": "ed8d7f6d4279086e7d1477222ec1e949",
        "sha256": "a1e3ea7f487924a49d59b8dd23952e5c4648fef6a7036f4254373532cd210181"
      },
      "downloads": -1,
      "filename": "aquila_borg-2.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "ed8d7f6d4279086e7d1477222ec1e949",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.6",
      "size": 16967286,
      "upload_time": "2023-03-28T15:20:57",
      "upload_time_iso_8601": "2023-03-28T15:20:57.185547Z",
      "url": "https://files.pythonhosted.org/packages/97/fe/9be7f5e789413e7040943f2793f9abfa0563b49dcb480edd887aa326413f/aquila_borg-2.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": true,
      "yanked_reason": "borg transitional package wrongly bundled"
    }
  ],
  "vulnerabilities": []
}