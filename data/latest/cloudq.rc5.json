{
  "info": {
    "author": "Shinichiro Takizawa, AIST",
    "author_email": "shinichiro.takizawa@aist.go.jp",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# CloudQ\n\nCloud storage-based meta scheduler\n\nCopyright 2022 National Institute of Advanced Industrial Science and Technology (AIST), Japan and\nHitachi, Ltd.\n\nThis program is licensed under the Apache License, Version2.0.\n\n\n## Overview\n\nCloudQ is a job management system that targets on executing AI/HPC tasks on on-premise systems, cloud and supercomputers with a unified interface.\nIt has the following features.\n\n- Input, output and status of jobs are stored on an Amazon S3 compatible object storage.\n- User can write a jobscript in two formats; **local jobscript** and **meta jobscript**.\n  A job described in meta jobscript can run on any systems managed under CloudQ.\n  A job described in local jobscript runs only on a specific system, but the job can use all functions the system provides.\n- The installation and administration of CloudQ do not require administrator privileges.\n\nCloudQ consists of two components.\n\nOne is **Agent** which submits jobs and manages them on a system.\nIf you have accounts on multiple clouds or supercomputers, you can submit jobs to them using CloudQ by installing Agents on them.\n\nCurrently, CloudQ Agent supports the following systems.\n\n- [ABCI](https://abci.ai/)\n- [Amazon Web Services (AWS)](https://aws.amazon.com/)\n\nThe second CloudQ component is **Client**.\nBy using Client on a user's terminal, user can submit and manage jobs on CloudQ.\n\n![CloudQ Architecture](/docs/fig_cloudq_arch.png)\n\nCloudQ provides an additional component named **Builder**.\nBuilder helps setting up compute clusters on clouds.\n\nCurrently, CloudQ Builder for AWS is available.\nCloudQ Builder for AWS creates clusters using Slurm as their job scheduler.\nIt installs CloudQ Agent on cluster's head node.\n\n## Requirements\n\nCloudQ Client\n- OS: Linux, MacOS and Windows\n- Python: 3.8 or newer (Tested on Python 3.8.7)\n- AWS CLI: 2.1.30 or newer (Tested on AWS CLI 2.1.30)\n\nCloudQ Agent\n- OS: Linux compatible OS (Tested on CentOS 7.5 and Amazon Linux 2)\n- Python: 3.8 or newer (Tested on Python 3.8.7)\n- AWS CLI: 2.1.30 or newer (Tested on AWS CLI 2.1.30)\n\nCloudQ Builder for AWS\n- OS: Linux, MacOS and Windows\n- Python: 3.8 or newer (Tested on Python 3.8.7)\n- AWS CLI: 2.1.30 or newer (Tested on AWS CLI 2.1.30)\n- AWS ParallelCluster: 3.0.3\n\n\n## Installation\n\n[Installation Guide](/docs/INSTALLATION_GUIDE.md) describes how to install and configure CloudQ.\n\nThe following documents describe how to setup CloudQ environment in a specific scenario.\n\n1. [Use ABCI](/docs/EXAMPLE_ABCI.md)\n   - Use ABCI as the compute resource and ABCI Cloud Storage as the job storage.\n\n2. [Use AWS](/docs/EXAMPLE_AWS.md)\n   - Use AWS as the compute resource and the job storage.\n\n3. Use ABCI and AWS (coming soon)\n   - Use ABCI and AWS as the compute resources and ABCI Cloud Storage as the job storage.\n\n\n## Usage\n\n### Agent\n\nIn an environment where CloudQ Agent does not run automatically, you need to launch CloudQ Agent as follows.\n\n```console\n$ cloudqd --daemon\n```\n\nOn compute clusters built by Builder for AWS, CloudQ Agent automatically starts.\n\n### Client\n\n#### Submit a Job\n\nThe following example submits a job described in local jobscript.\n\n```console\n$ cloudqcli submit --script cloudq/example/ljob_tf_mnist.abci.sh \\\n                   --submit_to YOUR_SYSTEM --submit_opt 'SUBMIT_OPTION'\nJob (3f7e7681) ljob_tf_mnist.abci.sh has been submitted.\n```\n\nThe following example submits a job described in meta jobscript.\n\n```console\n$ cloudqcli submit --script cloudq/example/mjob_tf_mnist.sh\nJob (e210c27c) mjob_tf_mnist.sh has been submitted.\n```\n\n#### Submit a Dependent Job\n\nThe following example submits a job that depends on other jobs.\n\n```console\n$ cloudqcli submit --script cloudq/example/ljob_tf_mnist.abci.sh \\\n                   --submit_to YOUR_SYSTEM --submit_opt 'SUBMIT_OPTION' \\\n                   --hold_jid '3f7e7681,e210c27c'\nJob (fc2d6f45) ljob_tf_mnist.abci.sh has been submitted.\n```\n\n#### Submit an Array Job\n\nThe following example submits an array job.\n\n```console\n$ cloudqcli submit --script cloudq/example/mjob_array.sh --array_tid 1-4:1\nJob (a38c9a9f) mjob_array.sh has been submitted.\n```\n\nIn the meta jobscript, the environment variables can be used to refer to task ID and other information.\nSee [Environment variables](#environment-variables)\n\n#### Check the Status of a Job\n\n```console\n$ cloudqcli stat --id e210c27c\nuuid                  e210c27c\njobid                 5150599\nname                  mjob_tf_mnist.sh\njobscript_type        meta\nhold_jid\narray_tid\nsubmit_to\nsubmit_opt\nstate                 DONE\nworkdir               YOUR_HOME/.cloudq/cache/e210c27c\nrun_system            abci\nlocal_account         YOUR_ACCOUNT\nlocal_group           YOUR_GROUP\nsubmit_command        qsub -g YOUR_GROUP mjob_tf_mnist.sh\ntime_submit           2021/01/13 09:55:34\ntime_receive          2021/01/13 10:05:47\ntime_ready            2021/01/13 10:05:47\ntime_start            2021/01/13 10:06:16\ntime_stageout_start   2021/01/13 10:06:33\ntime_stageout_finish  2021/01/13 10:06:33\ntime_finish           2021/01/13 10:06:33\nsize_input            516\nsize_output           1329\nerror_msg\nsubmit_opt_local      -g YOUR_GROUP\nlocal_name            mjob_tf_mnist_local.sh\n```\n\n#### Cancel a Job\n\n```console\n$ cloudqcli cancel --id e210c27c\nJob (e210c27c) is canceled.\n```\n\n#### Display Log Messages\n\nThe following example display stdout messages of a job.\n\n```console\n$ cloudqcli log --id 3f7e7681\n    <display stdout of the job>\n```\n\nThe following example display stderr messages of a job.\n\n```console\n$ cloudqcli log --id 3f7e7681 --error\n    <display stdout of the job>\n```\n\nThe following example display log messages of an CloudQ Agent.\n\n```console\n$ cloudqcli log --agent YOUR_SYSTEM\n    <display agent log>\n```\n\n#### Stageout (Get Job Input/Output/Log Files)\n\n```console\n$ cloudqcli stageout --id 3f7e7681\n    <download job files in the current directory>\n```\n\n#### Delete Jobs or Agent logs\n\nThe following example deletes a completed job.\n\n```console\n$ cloudqcli delete --id 3f7e7681\nJob (3f7e7681) is deleted.\n```\n\nThe following example delete all completed jobs.\n\n```console\n$ cloudqcli delete --all\nJob (3f7e7681) is deleted.\nJob (e210c27c) is deleted.\n```\n\nThe following example deletes a agent log.\n\n```console\n$ cloudqcli delete --agent YOUR_SYSTEM\nAgent log (YOUR_SYSTEM) is deleted.\n```\n\n#### List Submitted/Running Jobs\n\n```console\n$ cloudqcli list\n      job-ID                  name     state  run-system            submit at\n-----------------------------------------------------------------------------\n    3f7e7681  ljob_tf_mnist.abci.s      RUN         abci  2021/01/13 09:51:22\n    e210c27c      mjob_tf_mnist.sh      READY       abci  2021/01/13 09:55:34\n    fc2d6f45  ljob_tf_mnist.abci.s      INIT              2021/01/13 10:02:50\n```\n\n#### List Completed Jobs\n\n```console\n$ cloudqcli history\n      job-ID                  name     state  run-system            submit at             start at            finish at\n-----------------------------------------------------------------------------------------------------------------------\n    3f7e7681  ljob_tf_mnist.abci.s      ERROR       abci  2021/01/13 09:51:22\n    e210c27c      mjob_tf_mnist.sh      DONE        abci  2021/01/13 09:55:34  2021/01/13 10:06:16  2021/01/13 10:06:33\n```\n\n### Builder for AWS\n\nCloudQ Builder for AWS is provided as `cloudqaws` command.\nIt uses AWS default profile to build a cluster.\nBe aware that the AWS default profile is properly set.\n\n#### Create a Cluster\n\n`cloudqaws create` creates a cluster on AWS.\nBefore creating a cluster, you need to set up an SSH key pairs to log in to the cluster head node.\n\n```console\n$ cloudqaws create --name your-cluster-name \\\n                   --keypair YOUR-KEYPAIR-NAME \\\n                   --cs_profile abci --cs_endpoint https://s3.abci.ai \\\n                   --cs_bucket cloudq\nThe stack (your-cluster-name-vpc) is creating. Please wait a minute.\nThe stack (your-cluster-name-nodes) is creating. Please wait a minute.\nAWS compute cluster (your-cluster-name) has been created.\n```\n\n#### List Clusters\n\n`cloudqaws list` shows you status of compute clusters you requested to create.\n\n```console\n$ cloudqaws list\nCluster Name     Status     Creation Time\n---------------------------------------------------\nyour-cluster-01  COMPLETED  2022/01/23 11:22:33 UTC\nyour-cluster-02  COMPLETED  2022/02/01 23:59:59 UTC\nyour-cluster-03  CREATING\nyour-cluster-04  FAILED\n```\n\n#### Delete a Cluster\n\n```console\n$ cloudqaws delete --name your-cluster-name\nThe stack (your-cluster-name-nodes) is deleting. Please wait a minute.\nThe stack (your-cluster-name-vpc) is deleting. Please wait a minute.\nAWS compute cluster (your-cluster-name) has been deleted.\n```\n\n\n## Meta Jobscript\n\nMeta jobscript is introduced to write a jobscript that runs on any systems CloudQ supports.\nA jobscript written in Meta jobscript is converted to a local jobscript by a CloudQ agent when it receives a job.\nMeta jobscript can use the following directives, functions and environment variables.\n\n### Directives\n\n|  Name  |  Explanation  | ABCI | AWS Compute Cluster |\n| ---- | ---- | ---- | ---- |\n|  run_on  |  [Optional] Name of a system that runs the job. If not specified, the job will be executed on the earliest scheduled system.  | Available | Available |\n|  project  |  [Mandatory] Name of a research project.  It can be used for charge on some systems.  | Available | Unavailable |\n|  resource  |  [Mandatory] Name of resource type used to run the job.  | Available | Available |\n|  n_resource  |  [Mandatory] Number of resources used to run the job.  | Available | Available |\n|  walltime  |  [Optional] Walltime requested.  If not specified, the default walltime on the system is applied.  | Available | Available |\n|  other_opts  |  [Optional] Options to the job submission command appended when the job is submitted.  | Available | Available |\n|  container_img  |  [Optional] URL of container image used in the job.  It can be specified multiple times.  | Available | Unavailable |\n\n### Functions\n\n#### Launch Container\n\n```shell\ncq_container_run IMG [CMD]\n```\n\nIt launchs a container using the specified image.\nThe container runtime the system supports is used.\n\nArguments\n- IMG:\tPath of a container image.\n- CMD:\tA command and its options executed in the container.\n\nAvailability\n- ABCI: Available\n- AWS Compute Cluster: Unavailable\n\n#### Copy Cloud Storage Object\n\n```shell\nabci_cs_cp SRC DST [ENDPOINT [PROFILE]]\n```\n\nIt copies files and objects between cloud storage and local filesystem.\n\nArguments\n- SRC:\tURL of source files/objects.\n- DST:\tURL of destination files/objects.\n- ENDPOINT:\t URL of cloud storage endpoint.  It not specified, the endpoint URL specified in configuration file is used.\n- PROFILE:\tName of AWS profile. If not specified, the AWS profile specified in configuration file is used.\n\nAvailability\n- ABCI: Available\n- AWS Compute Cluster: Available\n\n### Environment Variables\n\n|  Name  |  Explanation  | ABCI | AWS Compute Cluster |\n| ---- | ---- | ---- | ---- |\n|  SYSTEM  |  Name of a system that runs the job.  | Available | Available |\n|  CONTAINER_IMG#  |  File name of a container image.  # will be replaced by a serial number starting with 0.  | Available | Unavailable |\n|  ARY_TASK_ID  |  Task ID of an array job.  | Available | Available |\n|  ARY_TASK_FIRST  |  Task ID of the first task of an array job.  | Available | Available |\n|  ARY_TASK_LAST  |  Task ID of the last task of an array job.  | Available | Available |\n|  ARY_TASK_STEPSIZE  |  Step size of IDs of an array job.  | Available | Available |\n\n### Example\n\nExample meta jobscripts can be found in `cloudq/example` directory.\n\n- mjob_array.sh\n  - Array job example\n- mjob_pt_mnist.sh\n  - Download container image from NGC and then train MNIST using PyTorch on a singularity container\n- mjob_tf_mnist.sh\n  - Download container image from NGC and then train MNIST using TensorFlow on a singularity container\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aistairc/cloudq",
    "keywords": "",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cloudq",
    "package_url": "https://pypi.org/project/cloudq/",
    "platform": "any",
    "project_url": "https://pypi.org/project/cloudq/",
    "project_urls": {
      "Homepage": "https://github.com/aistairc/cloudq"
    },
    "release_url": "https://pypi.org/project/cloudq/1.1.1/",
    "requires_dist": [
      "boto3",
      "botocore",
      "pathos",
      "pyyaml ; extra == 'aws'",
      "aws-parallelcluster ; extra == 'aws'"
    ],
    "requires_python": ">=3.8",
    "summary": "A cloud storage-based meta scheduler.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14327111,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b9d00a599400e9fa76266cc6970bbde0d9a8e5b9d3eb3c6d4765a632c2449d6",
          "md5": "d1f8ecd54e37e36957d857b9418fb48c",
          "sha256": "c16406df4c97e71dba021aae5660d5ab1a277e4b9752ffe1b064ef15fce6293f"
        },
        "downloads": -1,
        "filename": "cloudq-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d1f8ecd54e37e36957d857b9418fb48c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35134,
        "upload_time": "2022-03-11T13:50:18",
        "upload_time_iso_8601": "2022-03-11T13:50:18.914488Z",
        "url": "https://files.pythonhosted.org/packages/6b/9d/00a599400e9fa76266cc6970bbde0d9a8e5b9d3eb3c6d4765a632c2449d6/cloudq-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea91e4078966bdb7cc57c677c06c113e20fdf0b6af8afc1f177ccf6240763a86",
          "md5": "4c9bbd14572a36edc36db32dcfcc5830",
          "sha256": "401cdbb2b6e433a1b9c59d36e68f7aaf9bb486c6777854dc2adce527f64197c0"
        },
        "downloads": -1,
        "filename": "cloudq-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c9bbd14572a36edc36db32dcfcc5830",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35820,
        "upload_time": "2022-03-11T16:18:36",
        "upload_time_iso_8601": "2022-03-11T16:18:36.984646Z",
        "url": "https://files.pythonhosted.org/packages/ea/91/e4078966bdb7cc57c677c06c113e20fdf0b6af8afc1f177ccf6240763a86/cloudq-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4630dc36da36f53486665d25af15d39108ad1e71f3a6778761ff3841767cb98d",
          "md5": "8701516821750956203e53fb188572fa",
          "sha256": "6c5cc78e65dba0355ecbaee8460b681f5c797feb1e694ca6d59d06cfffb22562"
        },
        "downloads": -1,
        "filename": "cloudq-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8701516821750956203e53fb188572fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35824,
        "upload_time": "2022-03-11T17:21:03",
        "upload_time_iso_8601": "2022-03-11T17:21:03.833054Z",
        "url": "https://files.pythonhosted.org/packages/46/30/dc36da36f53486665d25af15d39108ad1e71f3a6778761ff3841767cb98d/cloudq-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d9b6aab5dc6f6ebd0e0af6a7f40506a4cd7b834f578efbe680179de9172ba1b",
          "md5": "3f990979d8de316cab7482c237100b55",
          "sha256": "7872f3fc11194d52c7145241f33cda9c968f132ed1eae5b6ed75cfd9ecb4fe6f"
        },
        "downloads": -1,
        "filename": "cloudq-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f990979d8de316cab7482c237100b55",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 60169,
        "upload_time": "2022-07-04T04:41:15",
        "upload_time_iso_8601": "2022-07-04T04:41:15.138560Z",
        "url": "https://files.pythonhosted.org/packages/4d/9b/6aab5dc6f6ebd0e0af6a7f40506a4cd7b834f578efbe680179de9172ba1b/cloudq-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0a1a7502417c4a092999d447c3035bb4a396b165a9436a6aa4363e8f20f299a",
          "md5": "fdf0727e82d3464e817379de7e7b7f6b",
          "sha256": "f00bddc9edbffb9a9d292d1405cc5784e466539fcb976d848e4884f16bd19566"
        },
        "downloads": -1,
        "filename": "cloudq-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fdf0727e82d3464e817379de7e7b7f6b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 60147,
        "upload_time": "2022-07-04T06:55:10",
        "upload_time_iso_8601": "2022-07-04T06:55:10.083844Z",
        "url": "https://files.pythonhosted.org/packages/d0/a1/a7502417c4a092999d447c3035bb4a396b165a9436a6aa4363e8f20f299a/cloudq-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d0a1a7502417c4a092999d447c3035bb4a396b165a9436a6aa4363e8f20f299a",
        "md5": "fdf0727e82d3464e817379de7e7b7f6b",
        "sha256": "f00bddc9edbffb9a9d292d1405cc5784e466539fcb976d848e4884f16bd19566"
      },
      "downloads": -1,
      "filename": "cloudq-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fdf0727e82d3464e817379de7e7b7f6b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 60147,
      "upload_time": "2022-07-04T06:55:10",
      "upload_time_iso_8601": "2022-07-04T06:55:10.083844Z",
      "url": "https://files.pythonhosted.org/packages/d0/a1/a7502417c4a092999d447c3035bb4a396b165a9436a6aa4363e8f20f299a/cloudq-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}