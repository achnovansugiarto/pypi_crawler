{
  "info": {
    "author": "Nicolas Gargaud <jacen92@gmail.com>",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Games/Entertainment :: Simulation",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# AstralBot-python\n\npython3 implementation of the astralbot connector and a tool to load a python script\n\nThis library can be used to interact with an AstralBot instance.  \nIt will run the logic to play the game selected on the AstralBot.\n\nThe astral bot will propagate events throught websocket, each time a message is received the same function is called.  \nYou must implement this function and provide it to the AstralBot connector.  \nThis function will take an 'engine' parameter which represent the current state of the game engine and an 'info' parameter.  \nThis last one represent the information on the current running game like the screen data and game state.  \nIn response of each call to the function you can return an object representing the action to take.  \nIn the future you will be able to return a list of actions.\n\nThe game engine expose some API throught the websocket message protocol representing available actions.\nHere is the list:\n\n|   API   | args |     description                                           |\n|---------|------|-----------------------------------------------------------|\n| ping    |      | ping the engine to trigger again .state and .info         |\n| start   | name | start the game with the name 'name'                       |\n| clickAt | x, y | make the mouse click somewhere in the screen in info.data |\n\nAn example is available in astralbot-example.py\n\nAstralBot lifecycle\n-------------------\n\nApplication start (uninitialized) -> game engine init (initialized) => you are now allowed to start a game (the list is in engine.games).  \nGame Engine start a game (starting) -> game process is started (started) -> game is configuring (ready) => your are allowed to play.\n\nDuring the transition between started and ready a script can configure the game to change the difficulty or to join a server.  \nThe screen is sent according to the game script parameters (500ms in minesweeper_beginner). This information can be found in the 'game' object.  \nThe goal is to implement all the logic to play the game remotly.\n\nHow to implement your bot?\n=========================\n\nThe first thing to do is to import the library and to set the AstralBot instance address\n\n```\nAstralBot = from astralbot import AstralBot\nastralUrl = 'localhost:8080'\n```\n\nAnd to instanciate the astralbot connector you will call this:\n\n```\noptions = { \"verbose\": True }\nab = AstralBot(astralUrl, options, loop)\n// You can save all received screens in the disk.\n// Notes: each screenshot will be replaced at each run.\n// ab.enable_screen_saving()\n// or\n// ab.enable_screen_saving(\"./directory_for_screenshots\")\n//\n// In the case the astral engine is protected you can add authentication informations\n// ab.set_auth(\"myBot\", \"v1.0.0\", \"t0ken\")\n//\n// Then run the bot:\nab.run()\n```\n\nNote that you can enable the screen saving mecanism to keep each screenshots sent by the astral engine.  \nThey will be save in a screenshot directory at the same level of your script.  \nAlso note that the bot will try to connect every second at startup to let the engine starts.\n\nAs you can see the AstralBot constructor take a `loop` parameter (name it like you want).  \nIt should be a function which will be called at each event sent by the astral engine.  \nThis function takes 2 parameters:\n\n* `engine`: the current engine state (see lifecycle) and informations (list of supported games)\n* `game`: the current game state and information (player status, screen data, list of available commands)\n\nThis function should return an object representing the action to ask to the astral engine.\n\nAn exemple of implementation could be:\n\n```\ndef loop(engine, game):\n  action = {}\n  print(\" * EngineState:\", state)\n  print(\" * GameInfo:\", game)\n\n  return action\n```\n\nIn this function you will start the targetted game when the astral engine become ready and you will decide which action to ask to the engine.\n\nYou can find a full example [here](src/astralbot-example.py).\n\nWhere to find an astral instance?\n=================================\n\nThe astral engine is available as a docker image or (soon) a desktop application.\nYou will find all information [here](https://github.com/AstralBotAI/AstralBot-engine).\n\nWhere to find the community?\n============================\n\nA discord server is availble, let me know to get the link.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AstralBotAI/AstralBot-py",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "astralbot",
    "package_url": "https://pypi.org/project/astralbot/",
    "platform": "",
    "project_url": "https://pypi.org/project/astralbot/",
    "project_urls": {
      "Homepage": "https://github.com/AstralBotAI/AstralBot-py"
    },
    "release_url": "https://pypi.org/project/astralbot/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Library to interact with an astralBot instance.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10702394,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79c78069cd95ebfcedb303632157af8482b9e097aab7edb599a03f7a41826a27",
          "md5": "1935a43932d8792ae8ca0962df4a656e",
          "sha256": "808313105a604d83689d826d14bc7521a126caa35d434ffa05564320efb9563b"
        },
        "downloads": -1,
        "filename": "astralbot-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1935a43932d8792ae8ca0962df4a656e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3042,
        "upload_time": "2021-06-19T19:15:29",
        "upload_time_iso_8601": "2021-06-19T19:15:29.462897Z",
        "url": "https://files.pythonhosted.org/packages/79/c7/8069cd95ebfcedb303632157af8482b9e097aab7edb599a03f7a41826a27/astralbot-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68473dd1b6a71527d90f210a4e54bfb77c0a9897b42e6b99d26e15006f5eadd6",
          "md5": "d9865506c5d5eefb51deb7f2e7d7b30c",
          "sha256": "aacdd310c6a3aca5533c1160ed4cf0d1df6b8a389712429b803b24bcf4c00561"
        },
        "downloads": -1,
        "filename": "astralbot-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d9865506c5d5eefb51deb7f2e7d7b30c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3428,
        "upload_time": "2021-06-19T21:42:00",
        "upload_time_iso_8601": "2021-06-19T21:42:00.500072Z",
        "url": "https://files.pythonhosted.org/packages/68/47/3dd1b6a71527d90f210a4e54bfb77c0a9897b42e6b99d26e15006f5eadd6/astralbot-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57d2f345000492b0a2457dafc53c2ccd224c08dd27bfe729db880b67e6189e86",
          "md5": "65cf67c287ffd131392ee6e9abc99345",
          "sha256": "b0b8e2be5f75e579a4352c9d91d03e70718c1f7bfb9b12228bb378e45c9a08f7"
        },
        "downloads": -1,
        "filename": "astralbot-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "65cf67c287ffd131392ee6e9abc99345",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5414,
        "upload_time": "2021-06-20T16:37:30",
        "upload_time_iso_8601": "2021-06-20T16:37:30.782911Z",
        "url": "https://files.pythonhosted.org/packages/57/d2/f345000492b0a2457dafc53c2ccd224c08dd27bfe729db880b67e6189e86/astralbot-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b1fe3040fcad1fc6de5e25bffc291724c0e7c8b05ea0980718483b6a19e5811",
          "md5": "3f84e4af19d4bb8ecdea42d41fb41499",
          "sha256": "f856cdb95b739805bb3f402a6bfc625014f15457ac17411fd5c753b58d7052cc"
        },
        "downloads": -1,
        "filename": "astralbot-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3f84e4af19d4bb8ecdea42d41fb41499",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7468,
        "upload_time": "2021-06-21T14:18:52",
        "upload_time_iso_8601": "2021-06-21T14:18:52.670997Z",
        "url": "https://files.pythonhosted.org/packages/0b/1f/e3040fcad1fc6de5e25bffc291724c0e7c8b05ea0980718483b6a19e5811/astralbot-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0b1fe3040fcad1fc6de5e25bffc291724c0e7c8b05ea0980718483b6a19e5811",
        "md5": "3f84e4af19d4bb8ecdea42d41fb41499",
        "sha256": "f856cdb95b739805bb3f402a6bfc625014f15457ac17411fd5c753b58d7052cc"
      },
      "downloads": -1,
      "filename": "astralbot-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3f84e4af19d4bb8ecdea42d41fb41499",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7468,
      "upload_time": "2021-06-21T14:18:52",
      "upload_time_iso_8601": "2021-06-21T14:18:52.670997Z",
      "url": "https://files.pythonhosted.org/packages/0b/1f/e3040fcad1fc6de5e25bffc291724c0e7c8b05ea0980718483b6a19e5811/astralbot-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}