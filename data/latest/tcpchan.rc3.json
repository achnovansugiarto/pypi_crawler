{
  "info": {
    "author": "Frank Chang",
    "author_email": "frank@csie.io",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet",
      "Topic :: System :: Networking"
    ],
    "description": "TCPChan\n====\n\n[![PyPI version](https://badge.fury.io/py/tcpchan.svg)](https://badge.fury.io/py/tcpchan)\n\n***TCPChan*** is a TCP connection multiplexing library that enables working with multiple *channels* in a single TCP connection. TCPChan can boost the efficiency of the short-lived connections by eliminating the overhead of connection setup, especially in high-latency links (e.g. cross-continental links).\n\nThe core part of the library is decoupled from I/O libraries so it's possible to bring your own I/O library. For convenience, an Asyncio-based protocol implementation is provided for easy integration with Asyncio applications.\n\nWarning: TCPChan is built for fun and educational purpose, it is not fully tested, and neither is it widely deployed. Use it at your own risk.\n\n## Guide\nWIP\n\n### Installation\n#### Install via Pip\n```bash\npip install tcpchan\n```\n\n#### Install latest version from GitHub\n```basb\ngit clone --depth 1 https://github.com/frankurcrazy/tcpchan\ncd tcpchan; python setup.py install\n```\n\n#### Dependencies\n1. python >= 3.7\n1. fpack >= 1.0.0\n\n### Usage\nWIP\n\n#### Channel\nInherit `tcpchan.core.chan.Channel` and implements `data_received` callback.\n```python\nfrom tcpchan.core.chan import Channel\n\nclass CustomChannel(Channel):\n    def data_received(self, data):\n        # Do stuff upon data reception\n```\n\n#### Connection\nCreate `ServerConnection` or `ClientConnection` instance upon connection establishment in server/client. And pass the channel factory to the Connection.\n\n##### Server connection creation\n```python\nfrom tcpchan.core.conn import ServerConnection\n\nconn = ServerConnection(lambda: CustomChannel())\n```\n\n##### Client connection creation\n```python\nfrom tcpchan.core.conn import ClientConnection\n\nconn = ClientConnection(lambda: CustomChannel())\n```\n\n#### Events\n```python\nfrom tcpchan.core import (\n    HandshakeSuccess, DataTransmit,\n    ChannelCreated, ChannelClosed\n)\n```\n\n#### Asyncio\nTCPChan provides an Asyncio-based protocol implementation so that one can easily integrate TCPChan in their Asyncio applications.\n\nFor server-side application, `TCPChanServerProtocol` can be used, likewise, for client-side application, `TCPChanClientProtocol` can be used.\n\n```python\nimport asyncio\nfrom tcpchan.aio import TCPChanServerProtocol\nfrom tcpchan.core.chan import Channel\n\n\nclass CustomChannel(Channel):\n    def data_received(self, data):\n        # Do stuff upon data reception\n        ...\n\n\nclass MyProtocol(TCPChanServerProtocol):\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n\n        self._channels = {}  # Mapping for channels\n\n    def handshake_success(self):\n        # Do something on handshake success\n        ...\n\n    def handshake_failed(self, reason):\n        # Do something on handshake failure\n        ...\n\n    def channel_created(self, channel):\n        # Do something on channel creation\n        self._channels[channel.channel_id] = channel\n\n    def channel_closed(self, channel_id):\n        # Do something when a channel is closed\n        del self._channels[channel_id]\n\n\nloop = asyncio.get_event_loop()\n\n\n# To initialize `Protocol`, channel factory function is required.\nserver = await loop.create_server(\n    lambda: MyProtocol(lambda: CustomChannel()),\n    host=\"localhost\",\n    port=9487,\n    start_serving=True,\n)\nloop.run_forever()\n```\n\n## LICENSE\nBSD\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/frankurcrazy/tcpchan",
    "keywords": "tcp,multiplexer,mux,stream,channel",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tcpchan",
    "package_url": "https://pypi.org/project/tcpchan/",
    "platform": "",
    "project_url": "https://pypi.org/project/tcpchan/",
    "project_urls": {
      "Homepage": "https://github.com/frankurcrazy/tcpchan",
      "Repository": "https://github.com/frankurcrazy/tcpchan"
    },
    "release_url": "https://pypi.org/project/tcpchan/0.1.1/",
    "requires_dist": [
      "fpack (>=1.0.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "tcpchan is a TCP (de)multiplexer",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8206156,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51e743119c20b6feff4628e5a9b6d1a26cd7e015369cee6cf249c587667fe15a",
          "md5": "e56490c6b83202b945111ab437e687ce",
          "sha256": "5bb19286880e1456223a225336ed16f87aafea7aeed63e685178797c8b017dd7"
        },
        "downloads": -1,
        "filename": "tcpchan-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e56490c6b83202b945111ab437e687ce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9727,
        "upload_time": "2020-09-02T08:40:25",
        "upload_time_iso_8601": "2020-09-02T08:40:25.310565Z",
        "url": "https://files.pythonhosted.org/packages/51/e7/43119c20b6feff4628e5a9b6d1a26cd7e015369cee6cf249c587667fe15a/tcpchan-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c371a7a3f47c3222833f3c6e81001d3de0282066c6b6573e632e212c3d2f264b",
          "md5": "0eebc2296d0fe091b65cdd67f9d4db03",
          "sha256": "b15850fc1db5d26dd5db219ad86f0f4a57931e2b1d3b1d350ef35989d72be63b"
        },
        "downloads": -1,
        "filename": "tcpchan-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0eebc2296d0fe091b65cdd67f9d4db03",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8595,
        "upload_time": "2020-09-02T08:40:27",
        "upload_time_iso_8601": "2020-09-02T08:40:27.625648Z",
        "url": "https://files.pythonhosted.org/packages/c3/71/a7a3f47c3222833f3c6e81001d3de0282066c6b6573e632e212c3d2f264b/tcpchan-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8131fbce2fcee9e2b5b6b4edd66ffc10c4353a728ad134db3f773a4fffcbd39d",
          "md5": "ca9e6e523ae438c99025e49bd21e6486",
          "sha256": "4dea29d2cae4e853f31f49bdfc63a1303ce17d4887647a48f248bd784c194075"
        },
        "downloads": -1,
        "filename": "tcpchan-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ca9e6e523ae438c99025e49bd21e6486",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11571,
        "upload_time": "2020-09-02T10:07:04",
        "upload_time_iso_8601": "2020-09-02T10:07:04.642779Z",
        "url": "https://files.pythonhosted.org/packages/81/31/fbce2fcee9e2b5b6b4edd66ffc10c4353a728ad134db3f773a4fffcbd39d/tcpchan-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84682f963320712175026e05bae5ed539e6937c8df174553a7baa8eec7e95d83",
          "md5": "e79bff5798ee63bd91f11641a64937b2",
          "sha256": "64d69549a0e5d0cfb77fdd831c6d9ad812d587540766d2027c39915fceccaec0"
        },
        "downloads": -1,
        "filename": "tcpchan-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e79bff5798ee63bd91f11641a64937b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8994,
        "upload_time": "2020-09-02T10:07:05",
        "upload_time_iso_8601": "2020-09-02T10:07:05.947878Z",
        "url": "https://files.pythonhosted.org/packages/84/68/2f963320712175026e05bae5ed539e6937c8df174553a7baa8eec7e95d83/tcpchan-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bd454555e61dc5b57d1a001bd93598d303dbfad55a758ebcc0ab7ac54def4b5",
          "md5": "8dd1ea19e962f53185ceb1b30558a53f",
          "sha256": "30346d065a7fe0c3dd0339fd42c236a7af0b5286fc06eedd67ee7c9d5a184a67"
        },
        "downloads": -1,
        "filename": "tcpchan-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8dd1ea19e962f53185ceb1b30558a53f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9903,
        "upload_time": "2020-09-17T06:13:52",
        "upload_time_iso_8601": "2020-09-17T06:13:52.261589Z",
        "url": "https://files.pythonhosted.org/packages/5b/d4/54555e61dc5b57d1a001bd93598d303dbfad55a758ebcc0ab7ac54def4b5/tcpchan-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f396c340b4eb6941342451566c6a9470b689ce1fded11e83e65f41ae8f1d661a",
          "md5": "902b0818cc7ae1d4ce726acae5f164af",
          "sha256": "3fdb044490a09e095db8bf9f3b1ff2351f39f7568914dd11fa70828d395c87ce"
        },
        "downloads": -1,
        "filename": "tcpchan-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "902b0818cc7ae1d4ce726acae5f164af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9288,
        "upload_time": "2020-09-17T06:13:53",
        "upload_time_iso_8601": "2020-09-17T06:13:53.824196Z",
        "url": "https://files.pythonhosted.org/packages/f3/96/c340b4eb6941342451566c6a9470b689ce1fded11e83e65f41ae8f1d661a/tcpchan-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5bd454555e61dc5b57d1a001bd93598d303dbfad55a758ebcc0ab7ac54def4b5",
        "md5": "8dd1ea19e962f53185ceb1b30558a53f",
        "sha256": "30346d065a7fe0c3dd0339fd42c236a7af0b5286fc06eedd67ee7c9d5a184a67"
      },
      "downloads": -1,
      "filename": "tcpchan-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8dd1ea19e962f53185ceb1b30558a53f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 9903,
      "upload_time": "2020-09-17T06:13:52",
      "upload_time_iso_8601": "2020-09-17T06:13:52.261589Z",
      "url": "https://files.pythonhosted.org/packages/5b/d4/54555e61dc5b57d1a001bd93598d303dbfad55a758ebcc0ab7ac54def4b5/tcpchan-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f396c340b4eb6941342451566c6a9470b689ce1fded11e83e65f41ae8f1d661a",
        "md5": "902b0818cc7ae1d4ce726acae5f164af",
        "sha256": "3fdb044490a09e095db8bf9f3b1ff2351f39f7568914dd11fa70828d395c87ce"
      },
      "downloads": -1,
      "filename": "tcpchan-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "902b0818cc7ae1d4ce726acae5f164af",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 9288,
      "upload_time": "2020-09-17T06:13:53",
      "upload_time_iso_8601": "2020-09-17T06:13:53.824196Z",
      "url": "https://files.pythonhosted.org/packages/f3/96/c340b4eb6941342451566c6a9470b689ce1fded11e83e65f41ae8f1d661a/tcpchan-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}