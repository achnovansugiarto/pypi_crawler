{
  "info": {
    "author": "Jintao Huang",
    "author_email": "huangjintao@mail.ustc.edu.cn",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# LeetCode-Py\n[![Python Version](https://img.shields.io/pypi/pyversions/leetcode-alg)](https://pypi.org/project/leetcode-alg/)\n[![PyPI Status](https://badge.fury.io/py/leetcode-alg.svg)](https://badge.fury.io/py/leetcode-alg)\n[![License](https://img.shields.io/badge/License-MIT-blue.svg)](https://github.com/Jintao-Huang/LeetCode-Py/blob/main/LICENSE)\n\n\n## 介绍\n1. `LeetCode-Py`仓库中包含2大内容. (**持续更新中**)\n   1. 包含大量leetcode(python)题目的解答(将会收集**1k题**以上, 目前处于开发中). \n   2. 算法库: `leetcode-alg`. \n2. `LeetCode-Py`的**习题解答的风格**是在最优复杂度的前提下, 写出最简洁的代码, 不做过多细节的优化. 旨在将**最优雅**的python代码放入`answer/`文件夹内. \n3. `leetcode-alg`是针对leetcode解题的数据结构和算法库, 其**设计哲学**是: 以通用性为核心, 并以最大可能进行性能优化. \n\n\n## 性能和功能\n1. `answer/`中**time击败**: (不使用trick)\n   1. 100%: 1, 11, 16, 18, 39, 42, 57, 72, 84, 85, 146, 167, 200, 300, 354, 416, 435, 518, 1143, 1349, 2096, 2171, 2203\n   2. 95%: 2, 28, 40, 51, 52, 56, 102, 107, 112, 113, 124, 153, 204, 207, 210, 239, 307, 322, 454, 496, 503, 704, 875, 1044, o51\n   3. 85%: 4, 15, 19, 92, 208, 215, 876, 1584, o40\n   4. 60%: \n   5. 其他: \n2. 已有的功能: (持续更新中)\n   1. 算法: \n      1. array: unique, partition, partition2, merge, merge2, diff, quick_select, two_sum\n      2. dp: LIS, LIS2, LCS, LCS2, LCS3, edit_distance, matrix_chain, matrix_chain2\n      3. graph: dijkstra, dijkstra2, dijkstra3, kruskal, prim, prim2, topo_sort, Dinic, hungarian\n      4. greed: merge_intervals, merge_intervals2\n      5. knapsack: knapsack, knapsackV, knapsackC, knapsackCV\n      6. linkedlist: reverse_list, find_mid_node, find_last_kth_node\n      7. math: is_prime, find_primes\n      8. monotone_deque: monotone_deque, monotone_deque2\n      9. monotone_stack: monotone_stack, monotone_stack2, monotone_stack3, largest_rect, largest_rect2\n      10. search: lower_bound, upper_bound, n_queens\n      11. string: build_nextval, kmp\n      12. tree: find_path, find_common_ancestor, inorder_traversal, level_order_traversal\n      13. unimportant: \n          1. array: reverse, euclidean_dist, manhattan_dist, prefix_sum\n          2. bisect: bisect_left, bisect_right, binary_search\n          3. math: gcd, lcm, fast_pow\n          4. random: randperm\n          5. sort: quick_sort, merge_sort, heap_sort, heap_sort2\n   2. 数据结构:\n      1. binary_indexed_tree: BinaryIndexedTree, BinaryIndexedTree2\n      2. heap: Heap, Heap2\n      3. linkedlist: LinkedListNode, LinkedList\n      4. segment_tree: SegmentTree, SegmentTree2\n      5. sorted_list: SimpleSortedList\n      6. string_hasher: StringHasher, StringHasher2\n      7. trie: TrieTreeNode, Trie\n      8. union_find: UnionFind\n      9. unimportant: \n         1. ordered_dict: OrderedDict\n   3. LeetCode Tools:\n      1. 数据结构: ListNode, TreeNode\n      2. tools: to_linkedlist, from_linkedlist, to_tree, from_tree, call_callable_list\n3. todo\n   1. 算法: \n      1. monotone_deque: next_ge_k_len, prev_le_k_len\n      2. monotone_stack: next_ge_min\n      3. string_op: string_add, string_mul\n      4. tree: bst_min, bst_max\n      5. unimportant: \n         1. math: int2str, prime_factor, BigInteger\n   2. 数据结构: \n      1. extension: BBST, HuffmanTree, RBTree\n\n\n\n\n## 安装和使用\n1. 安装: \n    ```bash\n    # (推荐)将此仓库下载的本地, 进入setup.py所在目录, 输入以下命令\n    pip install .\n    # or 从pypi下载\n    pip install leetcode-alg -U\n    ```\n    \n2. 使用: 例子可以查看`answer/`\n   ```python\n   from leetcode_alg import *\n   # if you want to import additional features\n   from leetcode_alg.ext import *\n   ```\n\n\n\n## 索引\n### 数据结构\n1. 线段树: 307\n   1. Lazy: \n   2. 离散化: o51\n   3. -(易混淆): 2021\n2. 树状数组: 307\n   1. 变体: \n   2. 离散化: o51\n3. SortedList: o51\n4. 哈希表: 1143, 2183, 416\n   1. N数: 1, 15, 454\n5. 链表: \n   1. 前向链表: 2, 19, 21, 23, 24, 25, 92, 876, 2181\n   2. 双向循环链表: OrderedDict\n6. 单调栈/队列\n   1. 单调栈: 496, 503\n      1. 双向: 42, 84, 85\n   2. 单调队列: 239\n7. 前缀树(Trie): 208\n   1. -(易混淆): 14\n8. 栈: 20\n9. 堆: 23, 215, o40\n   1. 可动态修改的堆(Heap2): dijkstra, prim\n10. UnionFind: kruskal, 200\n11. OrderedDict: 146(LRU)\n\n\n\n\n### 算法\n1. 分治法: \n   1. 2路: 常见2路递归(merge sort, quick_sort, 树的dfs等), 23\n2. 二分查找: \n   1. 自己设计cond: \n      1. lower_bound: 4, 153, 875\n      2. upper_bound: \n   2. 直接调用bisect: 704\n      1. LIS: 300, 354, 435(非递减), 1143(LCS)\n3. 滑动窗口: 3\n4. 搜索:\n   1. 链: \n      1. 回溯: 17, 22, 39, 40, 51, 52\n   2. 树: \n      1. 回溯: 113\n      2. dfs: 112, 124\n         1. 公共祖先: 2096\n         2. 递归模式dfs: 112\n      3. bfs: 102, 107\n   3. 图: \n      1. dfs: 200\n      2. bfs: 200\n5. 图算法: \n   1. dijkstra: 2203(重边的处理)\n   2. kruskal(稀疏图): 1584\n   3. prim(稠密图): 1584\n   4. 拓扑排序: 207, 210\n   5. dinic: 1349\n   6. 匈牙利算法: 1349\n6. DP(or memo-dfs): \n   1. nums\\[i..j\\]: 5\n   2. nums\\[..i\\]: 300, 435\n   3. s\\[..i\\], s\\[..j\\]: 72, 1143\n   4. 双dp: 42, 2167\n   5. 背包: 39, 322, 416, 518\n7. 双指针: 11, 42\n   1. N数: 15, 16, 18, 167\n8. 贪心: 11, 12, 42, 2037, 2038, 2182\n   1. 区间贪心: 56, 57, 435\n9. 位运算: 2166\n10. 字符串: \n    1. 字符串哈希: 28, 1044\n    2. kmp: 28\n\n\n\n#### 其他 \n1. 中心法: 双向单调栈, 5, 2171, 2203\n2. 去重: \n   1. N数: 15, 16, 18\n3. 排序: 离散化, kruskal, 2171\n   1. N数: 同双指针N数\n   2. map有序化: 2021, 2165, 2170, 2183\n   3. with贪心: 区间贪心, 2037\n      1. -(非显式的sort): 12, 2182\n4. int溢出: 7, 8\n5. 分类讨论: \n   1. 次大/小: 2170, 2182\n      1. 不以0开头: 7, 8, 2165\n   2. 其他: 线段树的query_range, 4, find_common_ancestor(2096)\n6. 随机算法: 215, o40, quick_sort\n7. 数学: \n   1. gcd: 2183\n   2. 质数: 204\n8. 日期: \n\n\n\n\n### 未分类 \n1. 暴力: 2180\n2. 过于简单: 2022, 2164, 2169\n3. 6, 9, 13, 2043\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Jintao-Huang/LeetCode-Py",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "leetcode-alg",
    "package_url": "https://pypi.org/project/leetcode-alg/",
    "platform": null,
    "project_url": "https://pypi.org/project/leetcode-alg/",
    "project_urls": {
      "Homepage": "https://github.com/Jintao-Huang/LeetCode-Py"
    },
    "release_url": "https://pypi.org/project/leetcode-alg/0.1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "`leetcode-alg`是针对leetcode解题的数据结构和算法库, 其设计准则是: 以通用性为核心, 并以最大可能进行性能优化.",
    "version": "0.1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17364545,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efece1d56498630aa46d9822033bbbc99da0458637a4d0af12c5d3cc39399e86",
          "md5": "8814a924789777fcb522413418d01d4c",
          "sha256": "1b8486945f3aa5f4545f43ac32882dc9bec456d41b84907354be64cd544149b4"
        },
        "downloads": -1,
        "filename": "leetcode_alg-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8814a924789777fcb522413418d01d4c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 30742,
        "upload_time": "2023-03-19T02:31:35",
        "upload_time_iso_8601": "2023-03-19T02:31:35.183491Z",
        "url": "https://files.pythonhosted.org/packages/ef/ec/e1d56498630aa46d9822033bbbc99da0458637a4d0af12c5d3cc39399e86/leetcode_alg-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "238c7e8663c6d60f998dc10d77249865dfdd88334b167401e0a60cf6eb09e682",
          "md5": "54e795fcb2b27e6d24a961d38877f997",
          "sha256": "73c001b2bba38775043c82cc5a597ef0ff770680c318ad5581f0987558c1ad63"
        },
        "downloads": -1,
        "filename": "leetcode_alg-0.1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "54e795fcb2b27e6d24a961d38877f997",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 30726,
        "upload_time": "2023-03-20T14:29:59",
        "upload_time_iso_8601": "2023-03-20T14:29:59.186407Z",
        "url": "https://files.pythonhosted.org/packages/23/8c/7e8663c6d60f998dc10d77249865dfdd88334b167401e0a60cf6eb09e682/leetcode_alg-0.1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7df94d91bf3151c25dd51b6431274133299584621ea1e113f095941bfaf0f19d",
          "md5": "484fa8647e7afc493cdf9ac3a431d524",
          "sha256": "e7dfeeced8fa7e8d17542c4f06b073d76818afc64cae56a5d88e83599a738368"
        },
        "downloads": -1,
        "filename": "leetcode_alg-0.1.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "484fa8647e7afc493cdf9ac3a431d524",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 10864,
        "upload_time": "2023-03-02T16:04:53",
        "upload_time_iso_8601": "2023-03-02T16:04:53.672988Z",
        "url": "https://files.pythonhosted.org/packages/7d/f9/4d91bf3151c25dd51b6431274133299584621ea1e113f095941bfaf0f19d/leetcode_alg-0.1.0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "238c7e8663c6d60f998dc10d77249865dfdd88334b167401e0a60cf6eb09e682",
        "md5": "54e795fcb2b27e6d24a961d38877f997",
        "sha256": "73c001b2bba38775043c82cc5a597ef0ff770680c318ad5581f0987558c1ad63"
      },
      "downloads": -1,
      "filename": "leetcode_alg-0.1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "54e795fcb2b27e6d24a961d38877f997",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 30726,
      "upload_time": "2023-03-20T14:29:59",
      "upload_time_iso_8601": "2023-03-20T14:29:59.186407Z",
      "url": "https://files.pythonhosted.org/packages/23/8c/7e8663c6d60f998dc10d77249865dfdd88334b167401e0a60cf6eb09e682/leetcode_alg-0.1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}