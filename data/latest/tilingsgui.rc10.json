{
  "info": {
    "author": "Permuta Triangle",
    "author_email": "permutatriangle@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Education",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "Tilings GUI\n===========\n\nA graphical interface for `Tilings`_.\n\nInstall and run\n---------------\n\n.. code:: sh\n\n   pip install tilingsgui\n   tilingsgui\n   tilingsgui -j 'tilingsgui json object'\n\nNote for Linux\n~~~~~~~~~~~~~~\n\nPyperclip requires clipboard tools that might not come pre-installed.\n\n.. code:: sh\n\n   sudo apt-get install xclip\n\nWithout them the app still works but pasting won’t.\n\nKnown issues\n------------\n* \n\nReport a bug\n~~~~~~~~~~~~\nAlong with the description of the bug, please provide a json of the tiling which is exportable in the gui.\n\nUser manual\n-----------\n\nSummary\n~~~~~~~\n* |add_point| Point insertion\n* |add_custom| Permutation insertion\n* |export| Export\n* |factor| Factor\n* |factor_int| Factor with interleaving\n* |fusion_c| Fusion with column set\n* |fusion_r| Fusion with row set\n* |fusion_comp_c| Component fusion with column set\n* |fusion_comp_r| Component fusion with row set\n* |htc| Highlight hovered cell\n* |move| Move\n* |obstr_trans| Obstruction transitivity\n* |place_east| East placement\n* |place_north| North placement\n* |place_south| South placement\n* |place_west| West placement\n* |pplace_east| East partial placement\n* |pplace_north| North partial placement\n* |pplace_south| South partial placement\n* |pplace_west| West partial placement\n* |pretty| Pretty points\n* |undo| Undo\n* |redo| Redo\n* |rowcolsep| Row column separation\n* |sequence| Sequece\n* |shading| Shading\n* |show_cross| Show crossing\n* |show_local| Show localized\n* |str| Print\n* |verification| Verification\n* |tikz| Tikz\n* |obstruction_inferral| Obstruction inferral\n\nTiling input\n~~~~~~~~~~~~\nThe input box directly above the tiling canvas can be used to create an initial tiling. It accepts both strings and json, using ``from_string`` and ``from_json`` respectively. A right click activates it. To confirm your input, press enter or click away from the text box. Escape cancels the input. Right clicking when activated will paste whatever is on the clipboard.\n\n**Example**:\nThe following two inputs are two ways of producing the same initial tiling.\n\n.. code::\n\n   1432_12345\n   \n   {\"class_module\": \"tilings.tiling\", \"comb_class\": \"Tiling\", \"obstructions\": [{\"patt\": [0, 3, 2, 1], \"pos\": [[0, 0], [0, 0], [0, 0], [0, 0]]}, {\"patt\": [0, 1, 2, 3, 4], \"pos\": [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]}], \"requirements\": [], \"assumptions\": []}\n   \nThe initial tiling in question would be the following.\n\n.. code:: sh\n\n   +-+\n   |1|\n   +-+\n   1: Av(0321, 01234)\n   \n\nCell insertion\n~~~~~~~~~~~~~~\nTo insert a permutation into a single cell, one can choose either to add a point, |add_point|, or a custom permutation, |add_custom|. For the latter, the latest confirmed input in the text box above the button grid is used. The text box works just like the one for inputting tilings. It uses ``to_standard`` to convert the input to a permutation. After having selected the permutation to insert, then clicking a cell will insert it. Left click inserts it as a requirement while a right click inserts it as a obstruction, using ``add_single_cell_requirement`` and ``add_single_cell_obstruction`` respectively.\n\nFactor\n~~~~~~\nThere are two types of factorization, factor |factor| and factor with interleaving |factor_int|. In both cases they are applied to the cell that is clicked. Two active cells are in the same factor if they are in the same row or column, or they share an obstruction or a requirement. For factoring with interleaving, two non-empty cells are in the same factor if they share an obstruction or a requirement.\n\nPlace points\n~~~~~~~~~~~~\nBy clicking a point of a requirement, we pass its gridded permutation along with its index within it to ``place_point_of_gridded_permutation`` and the direction set by the button chosen, east |place_east|, north |place_north|, south |place_south| or west |place_west|.\n\n.. code:: python\n\n   def place_point_of_gridded_permutation(\n           self, gp: GriddedPerm, idx: int, direction: int\n       ) -> \"Tiling\":\n           \"\"\"\n           Return the tiling where the directionmost occurrence of the idx point\n           in the gridded permutaion gp is placed.\n           \"\"\"\n\nPartially place points\n~~~~~~~~~~~~~~~~~~~~~~\nBy clicking a point of a requirement, we pass its gridded permutation along with its index within it to ``partial_place_point_of_gridded_permutation`` and the direction set by the button chosen, east |pplace_east|, north |pplace_north|, south |pplace_south| or west |pplace_west|.\n\n.. code:: python\n\n    def partial_place_point_of_gridded_permutation(\n        self, gp: GriddedPerm, idx: int, direction: int\n    ) -> \"Tiling\":\n        \"\"\"\n        Return the tiling where the directionmost occurrence of the idx point\n        in the gridded permutaion gp is placed. The point is placed onto its\n        own row or own column depending on the direction.\n        \"\"\"\n\nFusion\n~~~~~~\nLet ``c_r`` and ``c_c`` be the row and column respectively of the clicked cell. There are 4 types of fusions available. Fusion with ``row=c_r``, |fusion_r|, fusion with ``col=c_c``, |fusion_c|, component fusion with ``row=c_r``, |fusion_comp_r|, and component fusion with ``col=c_c``, |fusion_comp_c|. If the fusion are invalid, then exceptions are caught and nothing happens. \n\nFusion:\n\n.. code:: python\n\n   \"\"\"\n   Fuse the tilings.\n   If `row` is not `None` then `row` and `row+1` are fused together.\n   If `col` is not `None` then `col` and `col+1` are fused together.\n   \"\"\"\n\nComponent fusion:\n\n.. code:: python\n\n   \"\"\"\n   Fuse the tilings in such a way that it can be unfused by drawing a line between skew/sum-components.\n   If `row` is not `None` then `row` and `row+1` are fused together.\n   If `col` is not `None` then `col` and `col+1` are fused together.\n   \"\"\"\n\nUndo and redo\n~~~~~~~~~~~~~\nGiven that there are previously drawn tilings, then undo, |undo|, will redraw the one before the last action. If you wish to revert the undo, you can use redo, |redo|. There is a limit on how many tilings are stored in memory.\n\nRow column separation\n~~~~~~~~~~~~~~~~~~~~~\n|rowcolsep| splits the row and columns of a tilings using the inequalities implied by the length two obstructions.\n\nObstruction transitivity\n~~~~~~~~~~~~~~~~~~~~~~~~\n|obstr_trans| adds length 2 obstructions to the tiling using transitivity over positive cells.\n\nExport\n~~~~~~\nExport, |export|, will store the current tiling in memory and upon closing the app, will add all stored tilings in the session to ``./export/history.json``. There is a session limit so the file become too large. If the session limit is reached, than adding more will remove the oldest. The format of the json can be seen below with time and tiling values empty. Any time export is used, a copy of the history is placed in the current working directory.\n\n.. code:: JSON\n\n  [\n    {\n      \"session_time\": \"\",\n      \"tilings\": [\n        {\n          \"tiling_time\": \"\",\n          \"tiling\": {}\n        },\n        {\n          \"tiling_time\": \"\",\n          \"tiling\": {}\n        }\n      ]\n    },\n    {\n      \"session_time\": \"\",\n      \"tilings\": [\n        {\n          \"tiling_time\": \"\",\n          \"tiling\": {}\n        }\n      ]\n    }\n  ]\n\nPrint\n~~~~~\nWriting the current tiling to ``stdout``, |str|, will produce both the ``__str__`` and ``__repr__`` representation of the tiling. An example output is shown below.\n\n.. code:: sh\n\n   +-+-+-+\n   | |●| |\n   +-+-+-+\n   |1| |1|\n   +-+-+-+\n   1: Av(021)\n   ●: point\n   Crossing obstructions:\n   01: (0, 0), (2, 0)\n   Requirement 0:\n   0: (1, 1)\n\n   Tiling(obstructions=(GriddedPerm(Perm((0,)), ((0, 1),)), GriddedPerm(Perm((0,)), ((1, 0),)), GriddedPerm(Perm((0,)), ((2, 1),)), GriddedPerm(Perm((0, 1)), ((0, 0), (2, 0))), GriddedPerm(Perm((0, 1)), ((1, 1), (1, 1))), GriddedPerm(Perm((1, 0)), ((1, 1), (1, 1))), GriddedPerm(Perm((0, 2, 1)), ((0, 0), (0, 0), (0, 0))), GriddedPerm(Perm((0, 2, 1)), ((2, 0), (2, 0), (2, 0)))), requirements=((GriddedPerm(Perm((0,)), ((1, 1),)),),), assumptions=())\n\nSequence\n~~~~~~~~\nThe first few terms of the sequence of gridded permutations griddable on the current tiling can be written to ``stdout``, |sequence|, where for example the following tiling\n\n.. code:: sh\n\n   +-+-+-+-+\n   | |●| | |\n   +-+-+-+-+\n   |1| |1| |\n   +-+-+-+-+\n   | | | |●|\n   +-+-+-+-+\n   | | |1| |\n   +-+-+-+-+\n   1: Av(021)\n   ●: point\n   Crossing obstructions:\n   01: (0, 2), (2, 2)\n   01: (2, 0), (2, 2)\n   Requirement 0:\n   0: (1, 3)\n   Requirement 1:\n   0: (3, 1)\n\nwould produce this output.\n\n.. code:: sh\n\n   [0, 0, 1, 3, 9, 28, 90, 297]\n\nShading\n~~~~~~~\nWith shading on, |shading|, then a 1 restriction is not drawn as a point but rather as a filled cell.\n\nPretty points\n~~~~~~~~~~~~~\nWith pretty points on, |pretty|, then 12 and 21 restrictions along with a 1 requirement within the same cell are drawn as a single point.\n\nShow localized\n~~~~~~~~~~~~~~\nWith localized shown, |show_local|, requirements and obstructions that are contained in a single cell are shown. Without it they are not.\n\nShow crossing\n~~~~~~~~~~~~~\nWith crossing shown, |show_cross|, requirements and obstructions that reach across different cells are shown. Without it they are not.\n\nHighlight hovered cell\n~~~~~~~~~~~~~~~~~~~~~~\nTurning on the hovered cell highlighting, |htc|, obstructions in the hovered cell are colored differently.\n\nObstruction inferral\n~~~~~~~~~~~~~~~~~~~~\nAdd all obstructions up to a length that does not change the set of gridded permutations. Pressing |obstruction_inferral| will use the upper right input box to determine the lenght. It is maxed at 7 and defaults to 3.\n\nTikz\n~~~~\nUse |tikz| to produce the current tiling with the current positions as a tikz figure.\n\nVerification\n~~~~~~~~~~~~\nGiven a tiling ``t``, the verification button, |verification|, will produce the following result.\n\n.. code:: python\n\n   [\n      BasicVerificationStrategy().verified(t),\n      DatabaseVerificationStrategy().verified(t),\n      ElementaryVerificationStrategy().verified(t),\n      InsertionEncodingVerificationStrategy().verified(t),\n      LocallyFactorableVerificationStrategy().verified(t),\n      LocalVerificationStrategy(no_factors=False).verified(t),\n      MonotoneTreeVerificationStrategy().verified(t),\n      OneByOneVerificationStrategy().verified(t)\n   ]\n\nAn example output is shown below.\n\n.. code:: sh\n\n   BasicVerificationStrategy             : True\n   DatabaseVerificationStrategy          : False\n   ElementaryVerificationStrategy        : False\n   InsertionEncodingVerificationStrategy : True\n   LocallyFactorableVerificationStrategy : False\n   LocalVerificationStrategy             : True\n   MonotoneTreeVerificationStrategy      : False\n   OneByOneVerificationStrategy          : True\n\n\n.. _Tilings: https://github.com/PermutaTriangle/Tilings\n\n.. |add_point| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/add_point.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |add_custom| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/add_custom.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |export| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/export.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |factor| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/factor.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |factor_int| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/factor_int.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |fusion_c| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/fusion_c.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |fusion_comp_c| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/fusion_comp_c.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |fusion_comp_r| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/fusion_comp_r.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |fusion_r| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/fusion_r.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |htc| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/htc.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |move| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/move.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |obstr_trans| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/obstr_trans.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |place_east| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/place_east.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |place_north| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/place_north.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |place_south| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/place_south.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |place_west| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/place_west.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |pplace_east| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/pplace_east.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |pplace_north| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/pplace_north.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |pplace_south| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/pplace_south.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |pplace_west| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/pplace_west.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |pretty| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/pretty.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |redo| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/redo.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |rowcolsep| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/rowcolsep.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |sequence| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/sequence.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |shading| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/shading.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |show_cross| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/show_cross.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |show_local| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/show_local.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |str| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/str.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |undo| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/undo.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |verification| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/verification.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |tikz| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/tikz.svg\n   :scale: 200 %\n   :alt: img-error\n\n.. |obstruction_inferral| image:: https://raw.githubusercontent.com/PermutaTriangle/tilingsgui/develop/tilingsgui/resources/img/svg/obs_inf.svg\n   :scale: 200 %\n   :alt: img-error",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PermutaTriangle/tilingsgui",
    "keywords": "gui permutation tiling pyglet",
    "license": "BSD-3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tilingsgui",
    "package_url": "https://pypi.org/project/tilingsgui/",
    "platform": "",
    "project_url": "https://pypi.org/project/tilingsgui/",
    "project_urls": {
      "Homepage": "https://github.com/PermutaTriangle/tilingsgui",
      "Source": "https://github.com/PermutaTriangle/tilingsgui",
      "Tracker": "https://github.com/PermutaTriangle/tilingsgui/issues"
    },
    "release_url": "https://pypi.org/project/tilingsgui/0.2.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A graphical user interface for tilings.",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8668658,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4062206632fd9be1e6347cc21683aee73f15589e21181af61a366c0a59307cb3",
          "md5": "0d1440469742ceed04348342aed8e91d",
          "sha256": "8a506e17e9557096c08273f483a3b41b055493811bb446f609895f424eb32f8a"
        },
        "downloads": -1,
        "filename": "tilingsgui-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0d1440469742ceed04348342aed8e91d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 455825,
        "upload_time": "2020-07-01T14:31:07",
        "upload_time_iso_8601": "2020-07-01T14:31:07.322834Z",
        "url": "https://files.pythonhosted.org/packages/40/62/206632fd9be1e6347cc21683aee73f15589e21181af61a366c0a59307cb3/tilingsgui-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ad67b2d4e8b616106ffa178067eb0c2b641dcd7581e31dc136fbfea57b92a9a",
          "md5": "8e7c2a64e4baccf0d36923de25d1c62a",
          "sha256": "62543de54227df047e00975e8acd914386d0207dba23978cfefccaffd2ed7ab5"
        },
        "downloads": -1,
        "filename": "tilingsgui-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8e7c2a64e4baccf0d36923de25d1c62a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 433015,
        "upload_time": "2020-07-01T14:31:09",
        "upload_time_iso_8601": "2020-07-01T14:31:09.849634Z",
        "url": "https://files.pythonhosted.org/packages/9a/d6/7b2d4e8b616106ffa178067eb0c2b641dcd7581e31dc136fbfea57b92a9a/tilingsgui-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8716f79e75f8dec4fe513beeef6db472740cdfbe7aeda46647713e6b2708565a",
          "md5": "ff93c174d5de3ed0ee69f53b7f837aa6",
          "sha256": "4f7bd1cdcedf89be125a7cd1f64d49b598cf55b68575b3ebf85be87f1b4e8942"
        },
        "downloads": -1,
        "filename": "tilingsgui-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ff93c174d5de3ed0ee69f53b7f837aa6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 440998,
        "upload_time": "2020-07-15T14:07:50",
        "upload_time_iso_8601": "2020-07-15T14:07:50.194748Z",
        "url": "https://files.pythonhosted.org/packages/87/16/f79e75f8dec4fe513beeef6db472740cdfbe7aeda46647713e6b2708565a/tilingsgui-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0af69abd83af660218725d8e5d0bf886b21db4dbc4970bf04f937fc024f9aebf",
          "md5": "e5c4e35a150007acdd6185c650cb024b",
          "sha256": "044ae5cb207d9a40bad98ce10219a1bba10fe4cde84b23e8a417c80c3fab7eca"
        },
        "downloads": -1,
        "filename": "tilingsgui-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e5c4e35a150007acdd6185c650cb024b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 441123,
        "upload_time": "2020-07-18T16:39:35",
        "upload_time_iso_8601": "2020-07-18T16:39:35.742782Z",
        "url": "https://files.pythonhosted.org/packages/0a/f6/9abd83af660218725d8e5d0bf886b21db4dbc4970bf04f937fc024f9aebf/tilingsgui-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da857a10ae1dd761b01ffe91bd2f471aca4f2e1af8239317d5aede10d74a7762",
          "md5": "656876f56925a340c4dfd17bbb134c78",
          "sha256": "727410fe95b009b7b5225bfecb220d675e5a2780afacd1eb8e4ec5f94fae8d00"
        },
        "downloads": -1,
        "filename": "tilingsgui-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "656876f56925a340c4dfd17bbb134c78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 441143,
        "upload_time": "2020-07-20T14:08:49",
        "upload_time_iso_8601": "2020-07-20T14:08:49.664456Z",
        "url": "https://files.pythonhosted.org/packages/da/85/7a10ae1dd761b01ffe91bd2f471aca4f2e1af8239317d5aede10d74a7762/tilingsgui-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcffc6baa33319c110ec5445f3fb997c742852bc77e37da397fb5df51be70b11",
          "md5": "c8e1e2467585a4b7c273e09e6e05a66a",
          "sha256": "b0af4d91ccb0d15bc99ef80265746bec48b4ce8b40018fef21009889ab012567"
        },
        "downloads": -1,
        "filename": "tilingsgui-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c8e1e2467585a4b7c273e09e6e05a66a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 467393,
        "upload_time": "2020-08-31T20:03:50",
        "upload_time_iso_8601": "2020-08-31T20:03:50.940370Z",
        "url": "https://files.pythonhosted.org/packages/dc/ff/c6baa33319c110ec5445f3fb997c742852bc77e37da397fb5df51be70b11/tilingsgui-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89069c5c2d39c0f2aa23ba1ebf87dba2049e7b8937b8d3f0c1274c0814fac9d5",
          "md5": "4f9b4aa392adb0705f547e357d0ce579",
          "sha256": "b3bc10b24f06185daf29d07f4e23d1d271be6d52ca5db9d39d7fb65f11709104"
        },
        "downloads": -1,
        "filename": "tilingsgui-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4f9b4aa392adb0705f547e357d0ce579",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 481384,
        "upload_time": "2020-09-10T17:04:23",
        "upload_time_iso_8601": "2020-09-10T17:04:23.860452Z",
        "url": "https://files.pythonhosted.org/packages/89/06/9c5c2d39c0f2aa23ba1ebf87dba2049e7b8937b8d3f0c1274c0814fac9d5/tilingsgui-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13b1e0011b119fbc12abcbddae73e4872b00bb1bb97cf60a7bed8bce1ebc6464",
          "md5": "a16dbf1836e147c8f3dbbfdbc775e7d8",
          "sha256": "35c93e2c9f661c5c4d842cc2742059fb1730a1801e30bd234b8e8fad9c39b923"
        },
        "downloads": -1,
        "filename": "tilingsgui-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "a16dbf1836e147c8f3dbbfdbc775e7d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 481397,
        "upload_time": "2020-09-11T13:17:29",
        "upload_time_iso_8601": "2020-09-11T13:17:29.919032Z",
        "url": "https://files.pythonhosted.org/packages/13/b1/e0011b119fbc12abcbddae73e4872b00bb1bb97cf60a7bed8bce1ebc6464/tilingsgui-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58bda220e5195c526c19b8f3036723dac0aeded22758a3034907554b5f044b70",
          "md5": "d2bf3458130efd465ca2b4422169cec0",
          "sha256": "e030bd6b66efbd7880df77d3b41843e6cc8fe9c933d81c123311a6a3ce839698"
        },
        "downloads": -1,
        "filename": "tilingsgui-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d2bf3458130efd465ca2b4422169cec0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 481561,
        "upload_time": "2020-09-15T11:37:13",
        "upload_time_iso_8601": "2020-09-15T11:37:13.125488Z",
        "url": "https://files.pythonhosted.org/packages/58/bd/a220e5195c526c19b8f3036723dac0aeded22758a3034907554b5f044b70/tilingsgui-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9db9b37e00e197915c957d2b11e0989f7bcaebde5a6dda351a52848c80aea854",
          "md5": "75fa0db98fd20c5bc8999b2db8e59050",
          "sha256": "853da4327fafa9d6904df899c70c33b6d093fbef6a44ee42fd049e2363a816df"
        },
        "downloads": -1,
        "filename": "tilingsgui-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "75fa0db98fd20c5bc8999b2db8e59050",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 481662,
        "upload_time": "2020-09-15T12:05:03",
        "upload_time_iso_8601": "2020-09-15T12:05:03.026374Z",
        "url": "https://files.pythonhosted.org/packages/9d/b9/b37e00e197915c957d2b11e0989f7bcaebde5a6dda351a52848c80aea854/tilingsgui-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07b4b559605498151719fba68b9f79fe995d70324e49785c21bb16be3df22e50",
          "md5": "581ace9aef288a6f3500f8e36585d104",
          "sha256": "422e58a8a7a8c9bb075ca50b42987567d6ea4f568a803400b864be5ff47594d6"
        },
        "downloads": -1,
        "filename": "tilingsgui-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "581ace9aef288a6f3500f8e36585d104",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 481988,
        "upload_time": "2020-11-16T09:09:29",
        "upload_time_iso_8601": "2020-11-16T09:09:29.825727Z",
        "url": "https://files.pythonhosted.org/packages/07/b4/b559605498151719fba68b9f79fe995d70324e49785c21bb16be3df22e50/tilingsgui-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "07b4b559605498151719fba68b9f79fe995d70324e49785c21bb16be3df22e50",
        "md5": "581ace9aef288a6f3500f8e36585d104",
        "sha256": "422e58a8a7a8c9bb075ca50b42987567d6ea4f568a803400b864be5ff47594d6"
      },
      "downloads": -1,
      "filename": "tilingsgui-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "581ace9aef288a6f3500f8e36585d104",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 481988,
      "upload_time": "2020-11-16T09:09:29",
      "upload_time_iso_8601": "2020-11-16T09:09:29.825727Z",
      "url": "https://files.pythonhosted.org/packages/07/b4/b559605498151719fba68b9f79fe995d70324e49785c21bb16be3df22e50/tilingsgui-0.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}