{
  "info": {
    "author": "Krish Shah",
    "author_email": "shahkrish2016@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "\n# cardano-method\n\n[![release](https://img.shields.io/badge/dynamic/json.svg?label=release&url=https://pypi.org/pypi/cardano-method/json&query=%24.info.version&colorB=blue)](https://pypi.org/project/cardano-method/)\n\nA fast, reliable Python library to solve cubic equations of all kinds. You can test out `cardano-method` [in your browser](https://replit.com/@Vndom/CardanoMethod-Playground#main.py).\n\n## How It Works\n\n`cardano-method` implements Gerolamo Cardano's famous method of solving cubic equations - 'Cardano's Method'. Split amongst various stages of processing, this library **mirrors the steps described in Cardano's Method**.\n\n## Installation\n\n```\n$ pip install cardano-method\n```\n\n## Usage\n\n```python\nfrom cardano_method import CubicEquation\n\na = CubicEquation([1, 3, 4, 4])\n\nprint(a.answers)\n# [(-2+0j), (-0.5+1.322875j), (-0.5-1.322875j)]\n```\n\nNote that the ``answers`` attribute contains a list of [`complex`](https://docs.python.org/3/library/cmath.html#module-cmath) objects representing the zeroes of the cubic equation.\n\n<!-- ## How It Works\n\n### How -->\n\n<!-- definition of depressed cubic equation (mention that this is a specific case of the generalized idea of a depressed polynomial) -->\n\n<!-- Cardano's Method is a multi-step process that allows the solutions of a cubic equation to be determined. -->\n\n<!-- #### Depression of the Cubic Equation\n\n$$p(x) = \\sum_{i=0}^3 a_ix^i = a_3x^3 + a_2x_2 + a_1x_1 + a_0$$\n\n$$p(x) = a(x-\\alpha)(x-\\beta)(x-\\gamma)$$\n\nNotice how $p\\left(x-\\frac{a_2}{3a_3}\\right) = q(x)$! Substituting in  $q$ in terms of $p$ and its coefficients! Making the substitution and simplifying, we get\n\n$$p(x) = a_3x^3 + a_2x^2 + a_1x + a_0$$\n\n$$\\Rightarrow p\\left(x-\\frac{a_2}{3a_3}\\right) = q(x) = a_3x^3 + x\\left(a_1-\\frac{a_2^2}{3a_3}\\right) + \\left[\\frac{2a_2^3}{27a_3^2} - \\frac{a_1a_2}{3a_3} + a_0\\right]$$\n\nThen, after standardizing the coefficients to 1 and a bit more math and definitions, we arrive at the solutions to the given cubic equation:\n\n$$\\Bigg \\{\\sqrt[3]{\\frac{-G + \\sqrt{G^2+4H^3}}{2}} - \\frac{H}{\\sqrt[3]{\\frac{-G + \\sqrt{G^2+4H^3}}{2}}} - \\frac{a_2}{3a_3},  \\sqrt[3]{\\frac{-G + \\sqrt{G^2+4H^3}}{2}}\\omega - \\frac{H\\omega^2}{\\sqrt[3]{\\frac{-G + \\sqrt{G^2+4H^3}}{2}}} - \\frac{a_2}{3a_3}, \\\\ \n\\sqrt[3]{\\frac{-G + \\sqrt{G^2+4H^3}}{2}}\\omega^2 - \\frac{H\\omega}{\\sqrt[3]{\\frac{-G + \\sqrt{G^2+4H^3}}{2}}} - \\frac{a_2}{3a_3}\\Bigg \\}$$\n\nIf this looks complicated, don't worry - we agree too! The CardanoMethod package's ``CubicEquation`` handles all of this on the back-end and abstracts away all of the complex math. -->\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/isobarbaric/CardanoMethod",
    "keywords": "algebra,cardano,cardano-method,coefficients,complex,complex numbers,cubic,cubic equation,depressed cubic,equation,imaginary,method,polynomial,quadratic equation,real,roots,square root,zeroes",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cardano-method",
    "package_url": "https://pypi.org/project/cardano-method/",
    "platform": null,
    "project_url": "https://pypi.org/project/cardano-method/",
    "project_urls": {
      "Homepage": "https://github.com/isobarbaric/CardanoMethod"
    },
    "release_url": "https://pypi.org/project/cardano-method/1.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A basic cubic equation solver",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15074518,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4be0038b59a3b26c244aa6378db5e46f9847c5d23f56cbb6d4ba58a1999bae0",
          "md5": "32d8717262721dba1a924590c5592663",
          "sha256": "e68169be296586e5e3ae2d19698874c43563c745dd3abbaa2dfa990b1f355398"
        },
        "downloads": -1,
        "filename": "cardano_method-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32d8717262721dba1a924590c5592663",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6282,
        "upload_time": "2022-09-13T03:37:26",
        "upload_time_iso_8601": "2022-09-13T03:37:26.159542Z",
        "url": "https://files.pythonhosted.org/packages/c4/be/0038b59a3b26c244aa6378db5e46f9847c5d23f56cbb6d4ba58a1999bae0/cardano_method-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44d7c47372c8abe0cf49585348770b329a6537113bfc1cdb398bd212e150c65e",
          "md5": "3f466a00bb58a80d67630fdcfe39585b",
          "sha256": "272346fae41c0fa512e2a595f348aa69e0af3d7de3f2d00d210c32537d4321b0"
        },
        "downloads": -1,
        "filename": "cardano-method-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3f466a00bb58a80d67630fdcfe39585b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5631,
        "upload_time": "2022-09-13T03:37:27",
        "upload_time_iso_8601": "2022-09-13T03:37:27.760809Z",
        "url": "https://files.pythonhosted.org/packages/44/d7/c47372c8abe0cf49585348770b329a6537113bfc1cdb398bd212e150c65e/cardano-method-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96178332a63ae4137375af70dc84a1a0b4c2dd5f2b47123e629843bdb3e8a866",
          "md5": "93a66bad12e3e694eadf2aaa68e5c7bf",
          "sha256": "8b5021e63e0e8c7feb1202bc7482a7271d4da57655b82c382ce81aa423cebf29"
        },
        "downloads": -1,
        "filename": "cardano_method-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93a66bad12e3e694eadf2aaa68e5c7bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6285,
        "upload_time": "2022-09-13T03:41:29",
        "upload_time_iso_8601": "2022-09-13T03:41:29.383965Z",
        "url": "https://files.pythonhosted.org/packages/96/17/8332a63ae4137375af70dc84a1a0b4c2dd5f2b47123e629843bdb3e8a866/cardano_method-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20c019c0f76fa40582cfc764710d87449b99a0aa37a538b8660814d5b9ae8bd4",
          "md5": "360958066f6cfb95d59c141c8f30bd81",
          "sha256": "23ece032ab1a1f411410096f66bda74bc3d30e314e23f82867ad99aaad42ca0b"
        },
        "downloads": -1,
        "filename": "cardano-method-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "360958066f6cfb95d59c141c8f30bd81",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5624,
        "upload_time": "2022-09-13T03:41:31",
        "upload_time_iso_8601": "2022-09-13T03:41:31.258593Z",
        "url": "https://files.pythonhosted.org/packages/20/c0/19c0f76fa40582cfc764710d87449b99a0aa37a538b8660814d5b9ae8bd4/cardano-method-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "96178332a63ae4137375af70dc84a1a0b4c2dd5f2b47123e629843bdb3e8a866",
        "md5": "93a66bad12e3e694eadf2aaa68e5c7bf",
        "sha256": "8b5021e63e0e8c7feb1202bc7482a7271d4da57655b82c382ce81aa423cebf29"
      },
      "downloads": -1,
      "filename": "cardano_method-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "93a66bad12e3e694eadf2aaa68e5c7bf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6285,
      "upload_time": "2022-09-13T03:41:29",
      "upload_time_iso_8601": "2022-09-13T03:41:29.383965Z",
      "url": "https://files.pythonhosted.org/packages/96/17/8332a63ae4137375af70dc84a1a0b4c2dd5f2b47123e629843bdb3e8a866/cardano_method-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "20c019c0f76fa40582cfc764710d87449b99a0aa37a538b8660814d5b9ae8bd4",
        "md5": "360958066f6cfb95d59c141c8f30bd81",
        "sha256": "23ece032ab1a1f411410096f66bda74bc3d30e314e23f82867ad99aaad42ca0b"
      },
      "downloads": -1,
      "filename": "cardano-method-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "360958066f6cfb95d59c141c8f30bd81",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5624,
      "upload_time": "2022-09-13T03:41:31",
      "upload_time_iso_8601": "2022-09-13T03:41:31.258593Z",
      "url": "https://files.pythonhosted.org/packages/20/c0/19c0f76fa40582cfc764710d87449b99a0aa37a538b8660814d5b9ae8bd4/cardano-method-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}