{
  "info": {
    "author": "Anas Dadi",
    "author_email": "dadi.anas@hotmail.fr",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pydockercompose \n## Description\n\nThis package is a python package for generating Docker Compose file.\nIt contains two classes :\n*   DockerCompose : It represents docker-compose file.\n    In this version, it supports adding the following parameters:\n       -  version\n       -  services\n       -  volumes\n       -  networks\n*   Service: This class represent docker compose service. \n    In this version, Service class supports adding the following parameters:\n    *   container_name\n    *   image\n    *   build\n    *   environment\n    *   restart\n    *   ports\n    *   volumes\n    *   networks\n    *   ulimits\n    *   links\n    *   depends_on\n    *   command\n    *   entrypoint\n    *   network_mode\n\nTo find out more about these parameters, you can check [docker-compose](https://docs.docker.com/compose/compose-file/compose-file-v3/) documentation.\n\n## Usecase\n\nIn this example we used `pydockercompose` package to generate `docker-compose.yml` for :\n- ElasticSearch service\n- ElasticSearch Client service that will be built using Dockerfile.\n\n        import pydockercompose\n        import os,sys\n\n        def generate_elastic_docker_compose_file():\n            docker_compose = DockerCompose(version=\"3.3\")\n        \n            # Create ElasticSearch service.\n            elastic_svc = Service(container_name=\"es\",\n                                  image=\"elasticsearch:7.13.3\",\n                                  restart=\"on-failure\",\n                                  ports=[\"9200:9200\"],\n                                  networks=[\"es-network\"],\n                                  volumes=[\"es-data:/usr/share/elasticsearch/data\"],\n                                  environments=[\"discovery.type=single-node\"])\n            elastic_svc.set_ulimits(\"memlock\", {\"soft\": -1, \"hard\": -1})\n        \n            # Create ElasticSearch Customer service.\n            cmd = \"while [ 1 -e 1 ]; do curl 'http://es:9200/' && sleep 3 ; done\"\n            with open(\"Dockerfile\", \"w\") as dockerfile:\n                dockerfile.write(\"FROM alpine:3\\nRUN apk add curl\\nCMD \"+cmd)\n            customer_svc = Service(container_name=\"es-customer\",\n                                   build=\".\",\n                                   restart=\"on-failure\",\n                                   depends_on=[\"es\"],\n                                   networks=[\"es-network\"])\n        \n            # Add services to DockerCompose object.\n            docker_compose.add_service(\"es\", elastic_svc)\n            docker_compose.add_service(\"es-customer\", customer_svc)\n        \n            # Add the network es-network\n            docker_compose.add_network(\"es-network\", {\"driver\": \"bridge\"})\n        \n            # Add the volume es-data\n            docker_compose.add_volumes(\"es-data\", {\"driver\": \"local\"})\n            return docker_compose\n        \n        \n        if __name__ == '__main__':\n            generate_elastic_docker_compose_file().to_yaml()\n            os.system(\"docker-compose up\")\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DadiAnas/pydockercompose",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pydockercompose",
    "package_url": "https://pypi.org/project/pydockercompose/",
    "platform": "",
    "project_url": "https://pypi.org/project/pydockercompose/",
    "project_urls": {
      "Bug Tracker": "https://github.com/DadiAnas/pydockercompose/issues",
      "Homepage": "https://github.com/DadiAnas/pydockercompose"
    },
    "release_url": "https://pypi.org/project/pydockercompose/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.0",
    "summary": "Package to generate docker compose files.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11492377,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0247fb8c5dbaafa79bf4433e2e8123d215a0cdbcadb328c8b363212fd52255c",
          "md5": "8d1bf7a569dc1d62a3523800ccf07a7c",
          "sha256": "05582865223a1ff6877a255cab974c0a74b2c7222775d327cf1f6681c9b95b58"
        },
        "downloads": -1,
        "filename": "pydockercompose-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d1bf7a569dc1d62a3523800ccf07a7c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 5736,
        "upload_time": "2021-09-19T15:55:44",
        "upload_time_iso_8601": "2021-09-19T15:55:44.210062Z",
        "url": "https://files.pythonhosted.org/packages/c0/24/7fb8c5dbaafa79bf4433e2e8123d215a0cdbcadb328c8b363212fd52255c/pydockercompose-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97167226f3c7a8da2488dc2fad4a60d78ad3f320eaff292389f5400a9ec1d8d7",
          "md5": "0b9dc4ea6e16698bc8ace29285094e06",
          "sha256": "6c6c35f455bfd89eac02f37b180e87b7218a97d07853ed068a342e3bff82070d"
        },
        "downloads": -1,
        "filename": "pydockercompose-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0b9dc4ea6e16698bc8ace29285094e06",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 5236,
        "upload_time": "2021-09-19T15:55:45",
        "upload_time_iso_8601": "2021-09-19T15:55:45.342147Z",
        "url": "https://files.pythonhosted.org/packages/97/16/7226f3c7a8da2488dc2fad4a60d78ad3f320eaff292389f5400a9ec1d8d7/pydockercompose-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c0247fb8c5dbaafa79bf4433e2e8123d215a0cdbcadb328c8b363212fd52255c",
        "md5": "8d1bf7a569dc1d62a3523800ccf07a7c",
        "sha256": "05582865223a1ff6877a255cab974c0a74b2c7222775d327cf1f6681c9b95b58"
      },
      "downloads": -1,
      "filename": "pydockercompose-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8d1bf7a569dc1d62a3523800ccf07a7c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.0",
      "size": 5736,
      "upload_time": "2021-09-19T15:55:44",
      "upload_time_iso_8601": "2021-09-19T15:55:44.210062Z",
      "url": "https://files.pythonhosted.org/packages/c0/24/7fb8c5dbaafa79bf4433e2e8123d215a0cdbcadb328c8b363212fd52255c/pydockercompose-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "97167226f3c7a8da2488dc2fad4a60d78ad3f320eaff292389f5400a9ec1d8d7",
        "md5": "0b9dc4ea6e16698bc8ace29285094e06",
        "sha256": "6c6c35f455bfd89eac02f37b180e87b7218a97d07853ed068a342e3bff82070d"
      },
      "downloads": -1,
      "filename": "pydockercompose-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0b9dc4ea6e16698bc8ace29285094e06",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.0",
      "size": 5236,
      "upload_time": "2021-09-19T15:55:45",
      "upload_time_iso_8601": "2021-09-19T15:55:45.342147Z",
      "url": "https://files.pythonhosted.org/packages/97/16/7226f3c7a8da2488dc2fad4a60d78ad3f320eaff292389f5400a9ec1d8d7/pydockercompose-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}