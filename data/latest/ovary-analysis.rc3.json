{
  "info": {
    "author": "Kevin Yamauchi",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: X11 Applications :: Qt",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Utilities"
    ],
    "description": "# ovary-analysis\n\n`ovary-analysis` is a python package for analysis of ovarian follicles from ultrasound images. `ovary-analysis` contains \nthe `follicle-finder` pipeline for the automated segmentation and measurement of ovarian follicles.\n\n## Graphical User Interface\nIf you would like a graphical user interface for the `follicle-finder` segmentation pipeline, please see our \n[`follicle-tracker` napari plugin.](https://github.com/leopold-franz/follicle-tracker).\n\n## Usage\n### Segmentation and measurement\nYou can perform automated segmentation and measurement via the FollicleFinder command line interface. To see options \nof FollicleFinder you can type `follicle-finder --help` in your terminal (you must first activate your \n`follicle-finder environment).\n\n```bash\n$ follicle-finder --help\nusage: follicle-finder [-h] [-i IMAGE_PATH] [--image-key IMAGE_KEY] [--ovary-seg-config OVARY_SEG_CONFIG]\n                       [--follicle-seg-config FOLLICLE_SEG_CONFIG] [--ovary-model OVARY_MODEL]\n                       [--follicle-model FOLLICLE_MODEL]\n                       [--ovary-probability-threshold OVARY_PROBABILITY_THRESHOLD]\n                       [--ovary-dilation-size OVARY_DILATION_SIZE]\n                       [--follicle-probability-threshold FOLLICLE_PROBABILITY_THRESHOLD]\n                       [--follicle-volume-threshold FOLLICLE_VOLUME_THRESHOLD] [-o OUTPUT_DIRECTORY]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i IMAGE_PATH, --image IMAGE_PATH\n                        raw image path (default: None)\n  --image-key IMAGE_KEY\n                        raw image key (default: raw_rescaled)\n  --ovary-seg-config OVARY_SEG_CONFIG\n                        path to the ovary segmentation configuration file (default: )\n  --follicle-seg-config FOLLICLE_SEG_CONFIG\n                        path to the follicle segmentation configuration file (default: )\n  --ovary-model OVARY_MODEL\n                        path to the ovary model. if not provided, built-in model is used. (default: )\n  --follicle-model FOLLICLE_MODEL\n                        path to the follicle model. if not provided, built-in model is used. (default: )\n  --ovary-probability-threshold OVARY_PROBABILITY_THRESHOLD\n                        probabilty threshold for binarizing ovary prediction (default: 0.8)\n  --ovary-dilation-size OVARY_DILATION_SIZE\n                        size of the dilation to perform on the ovary segmentation (default: 10)\n  --follicle-probability-threshold FOLLICLE_PROBABILITY_THRESHOLD\n                        probabilty threshold for binarizing follicle prediction (default: 0.5)\n  --follicle-volume-threshold FOLLICLE_VOLUME_THRESHOLD\n                        minimum volume (# voxels) for a follicle to be included (default: 30)\n  -o OUTPUT_DIRECTORY, --output OUTPUT_DIRECTORY\n                        output directory path (default: )\n```\nTo perform segmentation with the default options you can enter the following into your terminal\n\n```bash\n$ follicle-finder --image /path/to/image --output /path/to/output/directory\n```\nwhere `/path/to/image` is the path to your image to be segmented and `/path/to/output/directory` is the path to the \ndirectory in which the results will be saved. Following the completion of the pipeline, you find two files in your \noutput directory:\n- `segmentation.h5`: the segmentated image with the follicles in the `follicles` key and the ovary in the `ovary` key.\n- `measurements.csv`: the table of measurements for each detected follicle.\n\nIf you would like to perform segmentation with your own model (see instructions for training below), you can use the \nfollowing command:\n\n```bash\n$ follicle-finder --image /path/to/image --ovary-model /path/to/ovary/model --follicle-model /path/to/follicle/model \n--output /path/to/output/directory\n```\nwhere `/path/to/ovary/model` and `path/to/follicle/model` are the paths to the ovary and follicle models, respectively.\n\n### Training a model \nWe have included example scripts for training and performing cross validation in the `examples` directory. Due to \nthe compute time of training and cross validation, we have designed these scripts for usage with a scientific \ncompute cluster with an LSF job queue. Please file an issue if you would like help running on a different computing \nsetup.\n\n- ovary model: `examples/make_ovary_cross_validation.py`\n- follicle model: `examples/make_follicle_cross_validation.py`\n\n## Installation\n### Pre-requisites\n- computer with an nvidia GPU. We have tested on a P1000, P4000, and RTX2080Ti.\n- CUDA > 11.3 installed on the computer\n- anaconda or miniconda python\n\n### Installation with conda\nYou can install `follicle-finder` via our conda environment file. To do so, first install anaconda or miniconda on \nyour computer. Then, download the [`environment_denoise.yml file`](https://git.bsse.ethz.ch/iber/ovary-analysis/-/raw/master/environment_denoise.yml?inline=false) (right click the link and \"Save as...\"). In \nyour terminal, \nnavigate to the directory you downloaded the `environment_denoise.yml` file to:\n\n```bash\ncd <path/to/downloaded/environment_denoise.yml>\n```\n\nThen create the `follicle-finder` environment and \n\n```bash\nconda env create -f environment.yml\n```\n\nOnce the environment has been created, you can activate it and use `follicle-finder` as described below.\n\n```bash\nconda activate follicle-finder\n```\n\n## Development installation\n\nYou can set up your development environment with our conda dev environment file. To do so, first install \nanaconda or miniconda on your computer. Then, download the [`environment_dev.yml file`](https://git.bsse.ethz.ch/iber/ovary-analysis/-/raw/master/environment_dev.yml?inline=false) (right click the link and \"Save as...\"). In your \nterminal, navigate to the directory you downloaded the `environment_dev.yml` file to:\n\n```bash\ncd <path/to/downloaded/environment_dev.yml>\n```\n\nThen create the `follicle-tracker` environment and \n\n```bash\nconda env create -f environment_dev.yml\n```\n\nOnce the environment has been created, you can activate it and install `follicle-finder` as described below.\n\n```bash\nconda activate follice_tracker\n```\n\nNavigate to the directory you would like to download the `ovary-analysis` repository to and then clone the \nfollicle-tracker repository.\n\n```bash\ncd /path/to/repo/parent/directory\ngit clone git@git.bsse.ethz.ch:iber/ovary-analysis.git\n```\n\nNavigate into the `ovary-analysis` directory and install in editable mode with all dependencies.\n\n```bash\ncd ovary-analysis\npip install -e .\n```\n\nWe use pre-commit to ensure code style is uniform across the repository. To set up pre-commit, run the following in \nyour terminal.\n\n```bash\npre-commit install\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://git.bsse.ethz.ch/iber/ovary-analysis",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://git.bsse.ethz.ch/iber/ovary-analysis",
    "keywords": "",
    "license": "BSD 3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ovary-analysis",
    "package_url": "https://pypi.org/project/ovary-analysis/",
    "platform": null,
    "project_url": "https://pypi.org/project/ovary-analysis/",
    "project_urls": {
      "Download": "https://git.bsse.ethz.ch/iber/ovary-analysis",
      "Homepage": "https://git.bsse.ethz.ch/iber/ovary-analysis"
    },
    "release_url": "https://pypi.org/project/ovary-analysis/0.0.3/",
    "requires_dist": null,
    "requires_python": ">3.7",
    "summary": "ovarian follicle analysis pipeline",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13871305,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6c39596f8b75d52c2a349b21ae60c1a48c65cba2b34b4081ef1a0012f16636c",
          "md5": "55cebcc8fa47523a82d0d901085de030",
          "sha256": "9c32dcd76c73c16ae33ef5185947175e697cb6c1908a20b8107534e7d6151067"
        },
        "downloads": -1,
        "filename": "ovary-analysis-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "55cebcc8fa47523a82d0d901085de030",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.7",
        "size": 41786,
        "upload_time": "2022-05-03T09:48:58",
        "upload_time_iso_8601": "2022-05-03T09:48:58.255925Z",
        "url": "https://files.pythonhosted.org/packages/a6/c3/9596f8b75d52c2a349b21ae60c1a48c65cba2b34b4081ef1a0012f16636c/ovary-analysis-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4153a244476920a0b1e14d85aa39c3ce81e17ecd63db6db7d51b852f616fde22",
          "md5": "ed37f5ecb2156d60720fd048f0e0562d",
          "sha256": "d6a31c87305d19d26173d95efcb533aeaec4e057e0cf21df23b68ed1932dc485"
        },
        "downloads": -1,
        "filename": "ovary-analysis-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ed37f5ecb2156d60720fd048f0e0562d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.7",
        "size": 41772,
        "upload_time": "2022-05-05T11:44:50",
        "upload_time_iso_8601": "2022-05-05T11:44:50.801302Z",
        "url": "https://files.pythonhosted.org/packages/41/53/a244476920a0b1e14d85aa39c3ce81e17ecd63db6db7d51b852f616fde22/ovary-analysis-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e978e9abeab54502b1de3e574611d4853e15671af467062fc464e6b6ed491ee4",
          "md5": "d6688fb5668a4448c1bb10996919354a",
          "sha256": "29418c01d643ef8d97f303de644603192acbfb2303b72f9bc3d3321dc58d65bf"
        },
        "downloads": -1,
        "filename": "ovary-analysis-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d6688fb5668a4448c1bb10996919354a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.7",
        "size": 92508715,
        "upload_time": "2022-05-19T23:19:48",
        "upload_time_iso_8601": "2022-05-19T23:19:48.166698Z",
        "url": "https://files.pythonhosted.org/packages/e9/78/e9abeab54502b1de3e574611d4853e15671af467062fc464e6b6ed491ee4/ovary-analysis-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e978e9abeab54502b1de3e574611d4853e15671af467062fc464e6b6ed491ee4",
        "md5": "d6688fb5668a4448c1bb10996919354a",
        "sha256": "29418c01d643ef8d97f303de644603192acbfb2303b72f9bc3d3321dc58d65bf"
      },
      "downloads": -1,
      "filename": "ovary-analysis-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "d6688fb5668a4448c1bb10996919354a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">3.7",
      "size": 92508715,
      "upload_time": "2022-05-19T23:19:48",
      "upload_time_iso_8601": "2022-05-19T23:19:48.166698Z",
      "url": "https://files.pythonhosted.org/packages/e9/78/e9abeab54502b1de3e574611d4853e15671af467062fc464e6b6ed491ee4/ovary-analysis-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}