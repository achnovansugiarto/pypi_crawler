{
  "info": {
    "author": "Gabriele N. Tornetta",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<p align=\"center\"><img src=\"art/austin_die_cut_sticker.png\" alt=\"Austin\"></p>\n\n<h3 align=\"center\">A Frame Stack Sampler for CPython</h3>\n\n<p align=\"center\">\n  <img src=\"art/tux.svg\"\n       height=\"24px\" />\n  &nbsp;&nbsp;&nbsp;&nbsp;\n  <img src=\"art/apple.svg\" />\n  &nbsp;&nbsp;&nbsp;&nbsp;\n  <img src=\"art/win.svg\"\n       height=\"24px\" />\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/P403n1x87/austin/actions?query=workflow%3ATests\">\n    <img src=\"https://github.com/P403n1x87/austin/workflows/Tests/badge.svg\"\n         alt=\"GitHub Action Status: Tests\" />\n  </a>\n  <a href=\"https://github.com/P403n1x87/austin/actions?query=workflow%3AChecks\">\n    <img src=\"https://github.com/P403n1x87/austin/workflows/Checks/badge.svg\"\n         alt=\"GitHub Action Status: Checks\" />\n  </a>\n  <a href=\"https://codecov.io/gh/P403n1x87/austin\">\n    <img src=\"https://codecov.io/gh/P403n1x87/austin/branch/master/graph/badge.svg?token=OEDWB2IYBR\"\n         alt=\"Code coverage\"/>\n  </a>\n  <a href=\"https://github.com/P403n1x87/austin/releases/latest\">\n    <img src=\"http://img.shields.io/github/v/release/p403n1x87/austin\"\n         alt=\"latest release\" />\n  </a>\n  <a href=\"https://github.com/P403n1x87/austin/blob/master/LICENSE.md\">\n    <img src=\"https://img.shields.io/badge/license-GPLv3-ff69b4.svg\"\n         alt=\"LICENSE\" />\n  </a>\n\n  <br/>\n\n  <a href=\"https://chocolatey.org/packages/austin/\">\n    <img src=\"https://img.shields.io/chocolatey/v/austin\"\n         alt=\"Chocolatey Version\" />\n  </a>\n  <a href=\"https://anaconda.org/conda-forge/austin\">\n    <img src=\"https://img.shields.io/conda/vn/conda-forge/austin.svg\"\n         alt=\"Conda Version\" />\n  </a>\n  <a href=\"https://packages.debian.org/unstable/austin\">\n    <img src=\"https://badges.debian.net/badges/debian/unstable/austin/version.svg\"\n         alt=\"Debian package status\" />\n  </a>\n  <a href=\"https://formulae.brew.sh/formula/austin\">\n    <img src=\"https://img.shields.io/homebrew/v/austin\"\n         alt=\"homebrew\" />\n  </a>\n  <a href=\"https://snapcraft.io/austin\">\n    <img src=\"https://snapcraft.io/austin/badge.svg\"\n         alt=\"austin Snap Store Build Status\" />\n  </a>\n\n</p>\n\n<p align=\"center\">\n  <a href=\"https://snapcraft.io/austin\" title=\"Get it from the Snap Store\">\n    <img src=\"https://snapcraft.io/static/images/badges/en/snap-store-black.svg\"\n         alt=\"Get it from the Snap Store\" />\n  </a>\n</p>\n\n<p align=\"center\">\n  <a href=\"#synopsis\"><b>Synopsis</b></a>&nbsp;&bull;\n  <a href=\"#installation\"><b>Installation</b></a>&nbsp;&bull;\n  <a href=\"#usage\"><b>Usage</b></a>&nbsp;&bull;\n  <a href=\"#cheat-sheet\"><b>Cheat sheet</b></a>&nbsp;&bull;\n  <a href=\"#compatibility\"><b>Compatibility</b></a>&nbsp;&bull;\n  <a href=\"#why--austin\"><b>Why <img src=\"art/austin_logo.svg\" height=\"20px\" /> Austin</b></a>&nbsp;&bull;\n  <a href=\"#examples\"><b>Examples</b></a>&nbsp;&bull;\n  <a href=\"#contribute\"><b>Contribute</b></a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://www.buymeacoffee.com/Q9C1Hnm28\" target=\"_blank\">\n    <img src=\"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\"\n         alt=\"Buy Me A Coffee\" />\n  </a>\n</p>\n\n----\n\n<p align=\"center\"><i>This is the nicest profiler I‚Äôve found for Python. It‚Äôs\ncross-platform, doesn‚Äôt need me to change the code that‚Äôs being profiled, and\nits output can be piped directly into <code>flamegraph.pl</code>. I just used it\nto pinpoint a gross misuse of SQLAlchemy at work that‚Äôs run in some code at the\nend of each day, and now I can go home earlier.</i><br/><br/>-- gthm on <a\nhref=\"https://lobste.rs/s/qairy5/austin_python_frame_stack_sampler_for\">lobste.rs</a></p>\n\n<p align=\"center\"><i>If people are looking for a profiler, Austin looks pretty\ncool. Check it out!</i><br/><br/>-- Michael Kennedy on <a\nhref=\"https://www.youtube.com/watch?v=eFgybynhMrs\">Python Bytes 180</a></p>\n\n<p align=\"center\"> <a href=\"https://twitter.com/AustinSampler\">Follow <img\nsrc=\"art/austin_logo.svg\" height=\"20px\" /> on <img\nsrc=\"https://upload.wikimedia.org/wikipedia/en/thumb/9/9f/Twitter_bird_logo_2012.svg/1024px-Twitter_bird_logo_2012.svg.png\"\nheight=\"18px\" alt=\"Twitter\" /></a>\n</p>\n\n----\n\n\n# Synopsis\n\nAustin is a Python frame stack sampler for CPython written in pure C. Samples\nare collected by reading the CPython interpreter virtual memory space to\nretrieve information about the currently running threads along with the stack of\nthe frames that are being executed. Hence, one can use Austin to easily make\npowerful statistical profilers that have minimal impact on the target\napplication and that don't require any instrumentation.\n\n\nThe key features of Austin are:\n- Zero instrumentation;\n- Minimal impact;\n- Fast and lightweight;\n- Time and memory profiling;\n- Built-in support for multi-process applications (e.g. `mod_wsgi`).\n\nThe simplest way to turn Austin into a full-fledged profiler is to use together\nwith the [VS\nCode](https://marketplace.visualstudio.com/items?itemName=p403n1x87.austin-vscode)\nextension or combine it with [FlameGraph] or [Speedscope]. However, Austin's\nsimple output format can be piped into any other external or custom tool for\nfurther processing. Look, for instance, at the following Python TUI\n\n\n<p align=\"center\">\n  <img src=\"art/austin-tui.png\"\n       style=\"box-shadow: #111 0px 0px 16px;\" />\n</p>\n\nCheck out [A Survey of Open-Source Python\nProfilers](https://www.usenix.org/system/files/login/articles/login_winter19_12_norton.pdf)\nby Peter Norton for a general overview of Austin.\n\nKeep reading for more tool ideas and examples!\n\n---\n\n<p align=\"center\">üíú</br><i>Austin is a free and open-source project. A lot of\neffort goes into its development to ensure the best performance and that it\nstays up-to-date with the latest Python releases. If you find it useful,\nconsider <a href=\"https://github.com/sponsors/P403n1x87\">sponsoring</a> this\nproject.</i></br>üôè</p>\n\n---\n\n# Installation\n\nAustin is available from the major software repositories of the most popular\nplatforms. Check out the [latest release] page for pre-compiled binaries and\ninstallation packages.\n\nOn Linux, it can be installed using `autotools` or as a snap from the [Snap\nStore](https://snapcraft.io/store). The latter will automatically perform the\nsteps of the `autotools` method with a single command. On distributions derived\nfrom Debian, Austin can be installed from the official repositories with\nAptitude. Anaconda users can install Austin from [Conda Forge].\n\nOn Windows, Austin can be easily installed from the command line using either\n[Chocolatey] or [Scoop]. Alternatively, you can download the installer from the\n[latest release] page.\n\nOn macOS, Austin can be easily installed from the command line using [Homebrew].\nAnaconda users can install Austin from [Conda Forge].\n\nFor any other platform, compiling Austin from sources is as easy as cloning the\nrepository and running the C compiler. The [Releases][releases] page has many\npre-compiled binaries that are ready to be uncompressed and used.\n\n## With `autotools`\n\nInstalling Austin using `autotools` amounts to the usual `./configure`, `make`\nand `make install` finger gymnastic. The only dependency is the standard C\nlibrary. Before proceeding with the steps below, make sure that the `autotools`\nare installed on your system. Refer to your distro's documentation for details\non how to do so.\n\n~~~ console\ngit clone --depth=1 https://github.com/P403n1x87/austin.git && cd austin\nautoreconf --install\n./configure\nmake\nmake install\n~~~\n\n> **NOTE** Some Linux distributions, like Manjaro, might require the execution\n> of `automake --add-missing` before `./configure`.\n\nAlternatively, sources can be compiled with just a C compiler (see below).\n\n\n## From the Snap Store\n\nAustin can be installed on [many major Linux\ndistributions](https://snapcraft.io/docs/installing-snapd) from the Snap Store\nwith the following command\n\n~~~ console\nsudo snap install austin --classic\n~~~\n\n\n## On Debian and Derivatives\n\nOn March 30 2019 Austin was accepted into the official Debian repositories and\ncan therefore be installed with the `apt` utility.\n\n~~~ console\nsudo apt-get update -y && sudo apt-get install austin -y\n~~~\n\n## On macOS\n\nAustin can be installed on macOS using [Homebrew](https://docs.brew.sh):\n\n~~~ console\nbrew install austin\n~~~\n\n\n## From Chocolatey\n\nTo install [Austin from Chocolatey](https://chocolatey.org/packages/austin), run\nthe following command from the command line or from PowerShell\n\n~~~ console\nchoco install austin\n~~~\n\nTo upgrade run the following command from the command line or from PowerShell:\n\n~~~ console\nchoco upgrade austin\n~~~\n\n\n## From Scoop\n\nTo install Austin using Scoop, run the following command from the command line\nor PowerShell\n\n~~~ console\nscoop install austin\n~~~\n\nTo upgrade run the following command from the command line or PowerShell:\n\n~~~ console\nscoop update\n~~~\n\n\n## From Conda Forge\n\nAnaconda users on Linux and macOS can install Austin from [Conda Forge] with the\ncommand\n\n~~~ console\nconda install -c conda-forge austin\n~~~\n\n## From Sources without `autotools`\n\nTo install Austin from sources using the GNU C compiler, without `autotools`,\nclone the repository with\n\n~~~ console\ngit clone --depth=1 https://github.com/P403n1x87/austin.git\n~~~\n\nOn Linux, one can then use the command\n\n~~~ console\ngcc -O3 -Os -Wall -pthread src/*.c -o src/austin\n~~~\n\nwhereas on macOS it is enough to run\n\n~~~ console\ngcc -O3 -Os -Wall src/*.c -o src/austin\n~~~\n\nOn Windows, the `-lpsapi -lntdll` switches are needed\n\n~~~ console\ngcc -O3 -Os -Wall -lpsapi -lntdll src/*.c -o src/austin\n~~~\n\nAdd `-DDEBUG` if you need a more verbose log. This is useful if you encounter a\nbug with Austin and you want to report it here.\n\n\n# Usage\n\n<!-- [[[cog\nfrom subprocess import check_output\nprint(\"~~~\")\nprint(check_output([\"src/austin\", \"--help\"]).decode().strip())\nprint(\"~~~\")\n]]] -->\n~~~\nUsage: austin [OPTION...] command [ARG...]\nAustin is a frame stack sampler for CPython that is used to extract profiling\ndata out of a running Python process (and all its children, if required) that\nrequires no instrumentation and has practically no impact on the tracee.\n\n  -b, --binary               Emit data in the MOJO binary format. See\n                             https://github.com/P403n1x87/austin/wiki/The-MOJO-file-format\n                             for more details.\n  -C, --children             Attach to child processes.\n  -e, --exclude-empty        Do not output samples of threads with no frame\n                             stacks.\n  -f, --full                 Produce the full set of metrics (time +mem -mem).\n  -g, --gc                   Sample the garbage collector state.\n  -h, --heap=n_mb            Maximum heap size to allocate to increase sampling\n                             accuracy, in MB (default is 0).\n  -i, --interval=n_us        Sampling interval in microseconds (default is\n                             100). Accepted units: s, ms, us.\n  -m, --memory               Profile memory usage.\n  -o, --output=FILE          Specify an output file for the collected samples.\n  -p, --pid=PID              Attach to the process with the given PID.\n  -P, --pipe                 Pipe mode. Use when piping Austin output.\n  -s, --sleepless            Suppress idle samples to estimate CPU time.\n  -t, --timeout=n_ms         Start up wait time in milliseconds (default is\n                             100). Accepted units: s, ms.\n  -w, --where=PID            Dump the stacks of all the threads within the\n                             process with the given PID.\n  -x, --exposure=n_sec       Sample for n_sec seconds only.\n  -?, --help                 Give this help list\n      --usage                Give a short usage message\n  -V, --version              Print program version\n\nMandatory or optional arguments to long options are also mandatory or optional\nfor any corresponding short options.\n\nReport bugs to <https://github.com/P403n1x87/austin/issues>.\n~~~\n<!-- [[[end]]] -->\n\nThe output is a sequence of frame stack samples, one on each line. The format is\nthe collapsed one that is recognised by [FlameGraph] so that it can be piped\nstraight to `flamegraph.pl` for a quick visualisation, or redirected to a file\nfor some further processing.\n\nBy default, each line has the following structure:\n\n~~~\nP<pid>;T<tid>[;[frame]]* [metric]*\n~~~\n\nwhere the structure of `[frame]` and the number and type of metrics on each line\ndepend on the mode.\n\n\n## Environment variables\n\nSome behaviour of Austin can be configured via environment variables.\n\n| Variable            | Effect                                                      |\n| ------------------- | ----------------------------------------------------------- |\n| `AUSTIN_NO_LOGGING` | Disables all [log messages](#logging) (since Austin 3.4.0). |\n\n\n## Normal Mode\n\nIn normal mode, the `[frame]` part of each emitted sample has the structure\n\n~~~\n[frame] := <module>:<function>:<line number>\n~~~\n\nEach line then ends with a single `[metric]`, i.e. the sampling time measured in\nmicroseconds.\n\n\n> **NOTE** This was changed in Austin 3. In previous version, the alternative\n> format used to be the default one.\n\n\n## Binary Mode\n\nThe output generated by Austin by default can be quickly visualised by some\nexisting tools without further processing. However, this comes at the cost of\npotentially big raw output files. The binary mode can be used to produce a more\ncompact binary representation of the collected data, and more efficiently, by\nexploiting the performance enhancement of internal caching of frame data.\n\nThe `mojo2austin` CLI tool that comes with the [`austin-python`] Python package\ncan be used to convert a MOJO file back to the standard Austin output. Be aware\nthat the resulting file might be quite large, well over 4 times the size of the\nMOJO file itself.\n\nMore details about the [MOJO] binary format can be found in the [Wiki].\n\n*Since Austin 3.4.0*.\n\n\n## Column-level Location Information\n\nSince Python 3.11, code objects carry finer-grained location information at the\ncolumn level. When using the binary MOJO format, Austin can extract this extra\nlocation information when profiling code running with versions of the\ninterpreter that expose this data.\n\n*Since Austin 3.5.0*.\n\n\n## Memory and Full Metrics\n\nWhen profiling in memory mode with the `-m` or `--memory` switch, the metric\nvalue at the end of each line is the memory delta between samples, measured in\nbytes. In full mode (`-f` or `--full` switches), each sample ends with a\ncomma-separated list of three values: the time delta, the idle state (1 for\nidle, 0 otherwise) and the RSS memory delta (positive for memory allocations,\nnegative for deallocations). This way it is possible to estimate wall-clock\ntime, CPU time and memory pressure, all from a single run.\n\n> **NOTE** The reported memory allocations and deallocations are obtained by\n> computing resident memory deltas between samples. Hence these values give an\n> idea of how much _physical_ memory is being requested/released.\n\n\n## Multi-process Applications\n\nAustin can be told to profile multi-process applications with the `-C` or\n`--children` switch. This way Austin will look for new children of the parent\nprocess.\n\n\n## Garbage Collector Sampling\n\nAustin can sample the Python garbage collector state for applications running\nwith Python 3.7 and later versions. If the `-g`/`--gc` option is passed, Austin\nwill append `:GC:` at the end of each collected frame stack whenever the garbage\ncollector is collecting. This gives you a measure of how *busy* the Python GC is\nduring a run.\n\n*Since Austin 3.1.0*.\n\n\n## Where?\n\nIf you are only interested in what is currently happening inside a Python\nprocess, you can have a quick overview printed on the terminal with the\n`-w/--where` option. This takes the PID of the process whose threads you want to\ninspect, e.g.\n\n~~~ console\nsudo austin -w `pgrep -f my-running-python-app`\n~~~\n\nBelow is an example of what the output looks like\n\n<p align=\"center\">\n  <img src=\"art/austin-where.png\"\n       alt=\"Austin where mode example\"\n       style=\"box-shadow: #111 0px 0px 16px;\" />\n</p>\n\nThis works with the `-C/--children` option too. The emojis to the left indicate\nwhether the thread is active or sleeping and whether the process is a child or\nnot.\n\n*Since Austin 3.3.0*.\n\n\n## Sampling Accuracy\n\nAustin tries to keep perturbations to the tracee at a minimum. To do so, the\ntracee is never halted. To improve sampling accuracy, Austin can allocate a heap\nthat is used to get large snapshots of the private VM of the tracee that is\nlikely to contain frame information in a single attempt. The larger the heap is\nallowed the grow, the more accurate the results. The maximum size of the heap\nthat Austin is allowed to allocate can be controlled with the `-h/--heap`\noption, followed by the maximum size in bytes. By default, Austin does not\nallocate a heap, which is ideal for systems with limited resources. If you think\nyour results are not accurate, try setting this parameter.\n\n*Since Austin 3.2.0*.\n\n*Changed in Austin 3.3.0*: the default heap size is 0.\n\n\n## Native Frame Stack\n\nIf you want observability into the native frame stacks, you can use the\n`austinp` variant of `austin` which can be obtained by compiling the source\nwith `-DAUSTINP` on Linux, or from the released binaries.\n\n`austinp` makes use of `ptrace` to halt the application and grab a\nsnapshot of the call stack with `libunwind`. If you are compiling `austinp` from\nsources make sure that you have the development version of the `libunwind`\nlibrary available on your system, for example on Ubuntu,\n\n~~~ console\nsudo apt install libunwind-dev binutils-dev\n~~~\n\nand compile with\n\n~~~ console\ngcc -O3 -Os -Wall -pthread src/*.c -DAUSTINP -lunwind-ptrace -lunwind-generic -lbfd -o src/austinp\n~~~\n\nthen use as per normal. The extra `-k/--kernel` option is available with\n`austinp` which allows sampling kernel call stacks as well.\n\n> **WARNING** Since `austinp` uses `ptrace`, the impact on the tracee is no\n> longer minimal and it becomes higher at smaller sampling intervals. Therefore\n> the use of `austinp` is not recommended in production environments. For this\n> reason, the default sampling interval for `austinp` is 10 milliseconds.\n\nThe `austinp-resolve` tool from the [`austin-python`] Python package can be used\nto resolve the VM addresses to source and line numbers, provided that the\nreferenced binaries have DWARF debug symbols. Internally, the tool uses\n`addr2line(1)` to determine the source name and line number given an address,\nwhen possible.\n\n> Whilst `austinp` comes with a stripped-down implementation of `addr2line`, it\n> is only used for the \"where\" option, as resolving symbols at runtime is\n> expensive. This is to minimise the impact of austinp on the tracee, increase\n> accuracy and maximise the sampling rate.\n\nThe [where](#where) option is also available for the `austinp` variant and will\nshow both native and Python frames. Highlighting helps tell frames apart. The\n`-k` option outputs Linux kernel frames too, as shown in this example\n\n<p align=\"center\">\n  <img src=\"art/austin-where-kernel.png\"\n       alt=\"Austin where mode example\"\n       style=\"box-shadow: #111 0px 0px 16px;\" />\n</p>\n\n> **NOTE** If you have installed Austin from the Snap Store, the `austinp`\n> executable will be available as `austin.p` from the command line.\n\n\n## Logging\n\nAustin uses `syslog` on Linux and macOS, and `%TEMP%\\austin.log` on Windows\nfor log messages, so make sure to watch these to get execution details and\nstatistics. _Bad_ frames are output together with the other frames. In general,\nentries for bad frames will not be visible in a flame graph as all tests show\nerror rates below 1% on average.\n\nLogging can be disabled using [environment variables](#environment-variables).\n\n\n## Cheat sheet\n\nAll the above Austin options and arguments are summarised in a cheat sheet that\nyou can find in the [doc](https://github.com/P403n1x87/austin/blob/master/doc/)\nfolder in either the SVG, PDF or PNG format\n\n<p align=\"center\">\n  <img src=\"doc/cheatsheet.png\"\n       style=\"box-shadow: #111 0px 0px 16px;\" />\n</p>\n\n# Compatibility\n\nAustin supports Python 2.3-2.7 and 3.3-3.11 and has been tested on the\nfollowing platforms and architectures\n\n|             | <img src=\"art/tux.svg\" /> | <img src=\"art/win.svg\"/> | <img src=\"art/apple.svg\"/> |\n| ----------- | ------------------------- | ------------------------ | -------------------------- |\n| **x86_64**  | ‚úì                         | ‚úì                        | ‚úì                          |\n| **i686**    | ‚úì                         |                          | ‚úì                          |\n| **arm64**   | ‚úì                         |                          | ‚úì                          |\n| **ppc64le** | ‚úì                         |                          |                            |\n\n> **NOTE** Austin *might* work with other versions of Python on all the\n> platforms and architectures above. So it is worth giving it a try even if\n> your system is not listed below.\n\nBecause of platform-specific details, Austin usage may vary slightly. Below are\nfurther compatibility details to be aware of.\n\n\n## On Linux\n\nAustin requires the `CAP_SYS_PTRACE` capability to attach to an external\nprocess. This means that you will have to either use ``sudo`` when attaching to\na running Python process or grant the CAP_SYS_PTRACE capability to the Austin\nbinary with, e.g.\n\n~~~ console\nsudo setcap cap_sys_ptrace+ep `which austin`\n~~~\n\nTo use Austin with Docker, the `--cap-add SYS_PTRACE` option needs to be passed\nwhen starting a container.\n\n\n## On MacOS\n\nDue to the **System Integrity Protection**, introduced in **MacOS** with El\nCapitan, and the [Hardened Runtime][hardened runtime], introduced in Mojave,\nAustin cannot profile Python processes that use an executable located in the\n`/bin` folder, even with `sudo`. This is the case for the system-provided\nversion of Python, and the one installed with the official installers from\n[python.org](https://python.org). Other installation methods, like\n[pyenv][pyenv] or [Anaconda][anaconda] or\n[Homebrew](https://formulae.brew.sh/formula/austin) are known to work with\nAustin, out of the box.\n\nTo use Austin with Python from the official installer, you could remove the\nsignature from the binaries with\n~~~ console\ncodesign --remove-signature /Library/Frameworks/Python.framework/Versions/<M.m>/bin/python3\ncodesign --remove-signature /Library/Frameworks/Python.framework/Versions/<M.m>/Resources/Python.app/Contents/MacOS/Python\n~~~\nAlternatively, you could self-sign the Austin binary with the [Debugging Tool\nEntitlement][dte], as done for debugging tools like GDB. However, this method\nhas not been tested.\n\n> Austin requires the use of `sudo` to work on MacOS. To avoid having to type\n> the password every time you use Austin, consider adding a rule to the\n> `sudoers` file, e.g.\n> ~~~\n> yourusername  ALL = (root) NOPASSWD: /usr/local/bin/austin\n> ~~~\n\n\n# Why Austin\n\nWhen there already are similar tools out there, it's normal to wonder why one\nshould be interested in yet another one. So here is a list of features that\ncurrently distinguish Austin.\n\n- **Written in pure C** Austin is written in pure C code. There are no\n  dependencies on third-party libraries except for the standard C library and\n  the API provided by the Operating System.\n\n- **Just a sampler** Austin is just a frame stack sampler. It looks into a\n  running Python application at regular intervals of time and dumps whatever\n  frame stack it finds. The samples can then be analysed at a later time so that\n  Austin can sample at rates higher than other non-C alternatives that perform\n  some aggregations at run-time.\n\n- **Simple output, powerful tools** Austin uses the collapsed stack format of\n  FlameGraph that is easy to parse. You can then go and build your own tool to\n  analyse Austin's output. You could even make a _player_ that replays the\n  application execution in slow motion, so that you can see what has happened in\n  temporal order.\n\n- **Small size** Austin compiles to a single binary executable of just a bunch\nof KB.\n\n- **Easy to maintain** Occasionally, the Python C API changes and Austin will\nneed to be adjusted to new releases. However, given that Austin, like CPython,\nis written in C, implementing the new changes is rather straight-forward.\n\n\n# Examples\n\nThe following flame graph has been obtained with the command\n\n~~~ console\naustin -i 1ms ./test.py | sed '/^#/d' | ./flamegraph.pl --countname=Œºs > test.svg\n~~~\n\nwhere the sample `test.py` script has the execute permission and the following\ncontent\n\n~~~ python\n#!/usr/bin/env python3\n\nimport dis\n\nfor i in range(1000):\n    dis.dis(dis.dis)\n~~~\n\n<object data=\"art/dis_fg.svg\" type=\"image/svg+xml\" width=\"100%\" >\n  <img src=\"art/dis_fg.svg\" style=\"width:100%;\"/>\n</object>\n\nTo profile Apache2 WSGI application, one can attach Austin to the web server\nwith\n\n~~~ console\naustin -Cp `pgrep apache2 | head -n 1`\n~~~\n\nAny child processes will be automatically detected as they are created and\nAustin will sample them too.\n\n\n## IDE Extensions\n\nIt is easy to write your own extension for your favourite text editor. This, for\nexample, is a demo of a [Visual Studio Code] extension that highlights the most\nhit lines of code straight into the editor\n\n<p align=\"center\">\n  <img src=\"art/vscode-demo.gif\"\n       style=\"box-shadow: #111 0px 0px 16px;\" />\n</p>\n\n\n## Austin TUI\n\nThe [Austin TUI] is a text-based user interface for Austin that gives you a\ntop-like view of what is currently running inside a Python application. It is\nmost useful for scripts that have long-running procedures as you can see where\nexecution is at without tracing instructions in your code. You can also save the\ncollected data from within the TUI and feed it to Flame Graph for visualisation,\nor convert it to the [pprof] format.\n\nIf you want to give it a go you can install it using `pip` with\n\n~~~ console\npip install austin-tui --upgrade\n~~~\n\nand run it with\n\n~~~ console\naustin-tui [OPTION...] command [ARG...]\n~~~\n\nwith the same command line as Austin. Please note that the `austin` binary\nshould be available from within the `PATH` environment variable in order for the\nTUI to work.\n\n> The TUI is based on `python-curses`. The version included with the standard\n> Windows installations of Python is broken so it won't work out of the box. A\n> solution is to install the wheel of the port to Windows from\n> [this](https://www.lfd.uci.edu/~gohlke/pythonlibs/#curses) page. Wheel files\n> can be installed directly with `pip`, as described in the\n> [linked](https://pip.pypa.io/en/latest/user_guide/#installing-from-wheels)\n> page.\n\n<!-- ![austin-tui thread navigation](art/austin-tui_threads_nav.gif) -->\n<p align=\"center\">\n  <img src=\"art/austin-tui.gif\"\n       style=\"box-shadow: #111 0px 0px 16px;\" />\n</p>\n\n\n## Austin Web\n\n[Austin Web] is a web application that wraps around Austin. At its core, Austin\nWeb is based on [d3-flame-graph] to display a _live_ flame graph in the browser,\nthat refreshes every 3 seconds with newly collected samples. Austin Web can also\nbe used for _remote_ profiling by setting the `--host` and `--port` options.\n\nIf you want to give it a go you can install it using `pip` with\n\n~~~ console\npip install austin-web --upgrade\n~~~\n\nand run it with\n\n~~~ console\naustin-web [OPTION...] command [ARG...]\n~~~\n\nwith the same command line as Austin. This starts a simple HTTP server that\nserves on `localhost` by default. When no explicit port is given, Austin Web\nwill use an ephemeral one.\n\nPlease note that the `austin` binary should be available from within the `PATH`\nenvironment variable in order for Austin Web to work.\n\n<p align=\"center\">\n  <img src=\"art/austin-web.gif\"\n       style=\"box-shadow: #111 0px 0px 16px;\" />\n</p>\n\n\n## Speedscope\n\nAustin output is now supported by [Speedscope]. However, the [`austin-python`]\nlibrary comes with format conversion tools that allow converting the output from\nAustin to the Speedscope JSON format.\n\nIf you want to give it a go you can install it using `pip` with\n\n~~~ console\npip install austin-python --upgrade\n~~~\n\nand run it with\n\n~~~ console\naustin2speedscope [-h] [--indent INDENT] [-V] input output\n~~~\n\nwhere `input` is a file containing the output from Austin and `output` is the\nname of the JSON file to use to save the result of the conversion, ready to be\nused on [Speedscope].\n\n<p align=\"center\">\n  <img src=\"art/speedscope.png\"\n       style=\"box-shadow: #111 0px 0px 16px;\" />\n</p>\n\n## Google pprof\n\nAustin's format can also be converted to the Google pprof format using the\n`austin2pprof` utility that comes with [`austin-python`]. If you want to give it\na go you can install it using `pip` with\n\n~~~ console\npip install austin-python --upgrade\n~~~\n\nand run it with\n\n~~~ console\naustin2pprof [-h] [-V] input output\n~~~\n\nwhere `input` is a file containing the output from Austin and `output` is the\nname of the protobuf file to use to save the result of the conversion, ready to\nbe used with [Google's pprof tools][pprof].\n\n\n# Contribute\n\nIf you like Austin and you find it useful, there are ways for you to contribute.\n\nIf you want to help with the development, then have a look at the open issues\nand have a look at the [contributing guidelines](CONTRIBUTING.md) before you\nopen a pull request.\n\nYou can also contribute to the development of the Austin by becoming a sponsor\nand/or by [buying me a coffee](https://www.buymeacoffee.com/Q9C1Hnm28) on BMC or\nby chipping in a few pennies on [PayPal.Me](https://www.paypal.me/gtornetta/1).\n\n<p align=\"center\">\n  <a href=\"https://www.buymeacoffee.com/Q9C1Hnm28\"\n     target=\"_blank\">\n  <img src=\"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\"\n       alt=\"Buy Me A Coffee\" />\n  </a>\n</p>\n\n\n----\n\n<p align=\"center\">\n  <a href=\"https://twitter.com/AustinSampler\">\n    Follow <img src=\"art/austin_logo.svg\" height=\"20px\" /> on <img src=\"https://upload.wikimedia.org/wikipedia/en/thumb/9/9f/Twitter_bird_logo_2012.svg/1024px-Twitter_bird_logo_2012.svg.png\" height=\"18px\" alt=\"Twitter\" />\n  </a>\n</p>\n\n\n[`austin-python`]: https://github.com/P403n1x87/austin-python\n[Austin TUI]: https://github.com/P403n1x87/austin-tui\n[Austin Web]: https://github.com/P403n1x87/austin-web\n[Chocolatey]: https://chocolatey.org/\n[Conda Forge]: https://anaconda.org/conda-forge/austin\n[d3-flame-graph]: https://github.com/spiermar/d3-flame-graph\n[dte]: https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_security_cs_debugger\n[FlameGraph]: https://github.com/brendangregg/FlameGraph\n[hardened runtime]: https://developer.apple.com/documentation/security/hardened_runtime\n[Homebrew]: https://formulae.brew.sh/formula/austin\n[latest release]: https://github.com/P403n1x87/austin/releases/latest\n[MOJO]: https://github.com/P403n1x87/austin/wiki/The-MOJO-file-format\n[pprof]: https://github.com/google/pprof\n[pyenv]: https://github.com/pyenv/pyenv\n[releases]: https://github.com/P403n1x87/austin/releases\n[Scoop]: https://scoop.sh/\n[Speedscope]: https://speedscope.app\n[Visual Studio Code]: https://marketplace.visualstudio.com/items?itemName=p403n1x87.austin-vscode\n[Wiki]: https://github.com/P403n1x87/austin/wiki\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "austin-dist",
    "package_url": "https://pypi.org/project/austin-dist/",
    "platform": null,
    "project_url": "https://pypi.org/project/austin-dist/",
    "project_urls": {
      "Bug Tracker": "https://github.com/P403n1x87/austin/issues",
      "Homepage": "https://github.com/P403n1x87/austin",
      "Source Code": "https://github.com/P403n1x87/austin"
    },
    "release_url": "https://pypi.org/project/austin-dist/3.5.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Austin - Frame Stack Sampler for CPython",
    "version": "3.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17345498,
  "releases": {
    "3.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23cca825ed50031cdf1414c489bbed1bc02d10461dc221177911b5b59c9cd73c",
          "md5": "2a20894f645b88b22bfa13bd25a5e9be",
          "sha256": "b0ce10c3be6b92c70f4cbc28d729535c9de90c10b2fd52a532b17d19b884d26e"
        },
        "downloads": -1,
        "filename": "austin_dist-3.4.1-py2.py3-none-macosx_11_0_x86_64.whl",
        "has_sig": false,
        "md5_digest": "2a20894f645b88b22bfa13bd25a5e9be",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 40599,
        "upload_time": "2023-03-17T20:56:05",
        "upload_time_iso_8601": "2023-03-17T20:56:05.257090Z",
        "url": "https://files.pythonhosted.org/packages/23/cc/a825ed50031cdf1414c489bbed1bc02d10461dc221177911b5b59c9cd73c/austin_dist-3.4.1-py2.py3-none-macosx_11_0_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efe0aa299be1253d453d7139079bb89096739183a6f94fb7cdc7a8759537ce11",
          "md5": "d6fb1af329af87290b66e52c633daaab",
          "sha256": "4a74a8210d3d70984952e80053066f3d919b9bc4d199a1e92928645768c18667"
        },
        "downloads": -1,
        "filename": "austin_dist-3.4.1-py2.py3-none-manylinux_2_12_x86_64.manylinux2010_x86_64.whl",
        "has_sig": false,
        "md5_digest": "d6fb1af329af87290b66e52c633daaab",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 670117,
        "upload_time": "2023-03-17T20:56:07",
        "upload_time_iso_8601": "2023-03-17T20:56:07.314356Z",
        "url": "https://files.pythonhosted.org/packages/ef/e0/aa299be1253d453d7139079bb89096739183a6f94fb7cdc7a8759537ce11/austin_dist-3.4.1-py2.py3-none-manylinux_2_12_x86_64.manylinux2010_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc5495f49a6fd62a6fea554c9e8da6a720add34101bc57e98fd348a532721337",
          "md5": "8958aec603ce543be338dfe3fde0c836",
          "sha256": "72f348cf6654fc55c859416a614b0ab3cf3739a5674b7bcc2a4f4d8343aede8a"
        },
        "downloads": -1,
        "filename": "austin_dist-3.4.1-py2.py3-none-manylinux_2_17_aarch64.manylinux2014_aarch64.whl",
        "has_sig": false,
        "md5_digest": "8958aec603ce543be338dfe3fde0c836",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 632916,
        "upload_time": "2023-03-17T20:56:09",
        "upload_time_iso_8601": "2023-03-17T20:56:09.375522Z",
        "url": "https://files.pythonhosted.org/packages/dc/54/95f49a6fd62a6fea554c9e8da6a720add34101bc57e98fd348a532721337/austin_dist-3.4.1-py2.py3-none-manylinux_2_17_aarch64.manylinux2014_aarch64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20ef35346c2f773b9aece3154db9b65017d7fdc9a85a5ddad3e7f06fd7d7ee06",
          "md5": "9bff98411e22e529845b48f56f5c216f",
          "sha256": "94184ad427d4c90bef914f80c6cdca5570316e3ca0b6e04ae4a389a5ab14f4f8"
        },
        "downloads": -1,
        "filename": "austin_dist-3.4.1-py2.py3-none-manylinux_2_17_armv7l.manylinux2014_armv7l.whl",
        "has_sig": false,
        "md5_digest": "9bff98411e22e529845b48f56f5c216f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 494318,
        "upload_time": "2023-03-17T20:56:11",
        "upload_time_iso_8601": "2023-03-17T20:56:11.367464Z",
        "url": "https://files.pythonhosted.org/packages/20/ef/35346c2f773b9aece3154db9b65017d7fdc9a85a5ddad3e7f06fd7d7ee06/austin_dist-3.4.1-py2.py3-none-manylinux_2_17_armv7l.manylinux2014_armv7l.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a73f5243c51cd639c05dd59a6166d57bc6a9074719c5eb704f90b3211ba20e18",
          "md5": "e17df7c5f2cc3e3f9087c37dd72a322a",
          "sha256": "390ba6d427ae89ab2def43e042799c0d1bc2da7242402f24f83a592a069d5d46"
        },
        "downloads": -1,
        "filename": "austin_dist-3.4.1-py2.py3-none-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl",
        "has_sig": false,
        "md5_digest": "e17df7c5f2cc3e3f9087c37dd72a322a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 834268,
        "upload_time": "2023-03-17T20:56:13",
        "upload_time_iso_8601": "2023-03-17T20:56:13.019985Z",
        "url": "https://files.pythonhosted.org/packages/a7/3f/5243c51cd639c05dd59a6166d57bc6a9074719c5eb704f90b3211ba20e18/austin_dist-3.4.1-py2.py3-none-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e26c3638d94b04bbd819e41aeb9f5f07001f998cb1b5b19f4903cbbbcea529f",
          "md5": "608551e587542c9279bd4a3bdc46d44e",
          "sha256": "b2edb01b784985b72cf2917a033b31cb0e11cb71bec0135f01397c9bde0ff216"
        },
        "downloads": -1,
        "filename": "austin_dist-3.4.1-py2.py3-none-musllinux_1_1_aarch64.whl",
        "has_sig": false,
        "md5_digest": "608551e587542c9279bd4a3bdc46d44e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 37276,
        "upload_time": "2023-03-17T20:56:14",
        "upload_time_iso_8601": "2023-03-17T20:56:14.742549Z",
        "url": "https://files.pythonhosted.org/packages/9e/26/c3638d94b04bbd819e41aeb9f5f07001f998cb1b5b19f4903cbbbcea529f/austin_dist-3.4.1-py2.py3-none-musllinux_1_1_aarch64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23e5001d7eaf1529427b26eed1ab54a147dd293f402af5b19a49a1983a273c0f",
          "md5": "dbf6ab0c9a7b718d293ad12389b7630c",
          "sha256": "0973c956b9299b408fd09b76a9a2d5867d333c4f6b7a29d599955e9b488f81c8"
        },
        "downloads": -1,
        "filename": "austin_dist-3.4.1-py2.py3-none-musllinux_1_1_armv7l.whl",
        "has_sig": false,
        "md5_digest": "dbf6ab0c9a7b718d293ad12389b7630c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 34653,
        "upload_time": "2023-03-17T20:56:16",
        "upload_time_iso_8601": "2023-03-17T20:56:16.356388Z",
        "url": "https://files.pythonhosted.org/packages/23/e5/001d7eaf1529427b26eed1ab54a147dd293f402af5b19a49a1983a273c0f/austin_dist-3.4.1-py2.py3-none-musllinux_1_1_armv7l.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18c9709f2c31c0263f5fce72faf2b75fb647fb7f1426e98a7b12a3d4d10ccb61",
          "md5": "d5cf426b4e829894e41f6691e82cb2db",
          "sha256": "b0e47c1f4b6a734e39073f188d058368a92ad48f22aa297f25c57ce7627da5a1"
        },
        "downloads": -1,
        "filename": "austin_dist-3.4.1-py2.py3-none-musllinux_1_1_ppc64le.whl",
        "has_sig": false,
        "md5_digest": "d5cf426b4e829894e41f6691e82cb2db",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 38088,
        "upload_time": "2023-03-17T20:56:18",
        "upload_time_iso_8601": "2023-03-17T20:56:18.535225Z",
        "url": "https://files.pythonhosted.org/packages/18/c9/709f2c31c0263f5fce72faf2b75fb647fb7f1426e98a7b12a3d4d10ccb61/austin_dist-3.4.1-py2.py3-none-musllinux_1_1_ppc64le.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39140483ff2a22d2f7ec03e564dd0d32320c50f030d22be3299e38270c23e522",
          "md5": "052d4f9c63c564be5df55cbac982a53b",
          "sha256": "955fc54cfaaf0ac2c2fef3b91164e74bd5e9150f3a0ac946d9a8dd4fba351e77"
        },
        "downloads": -1,
        "filename": "austin_dist-3.4.1-py2.py3-none-musllinux_1_1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "052d4f9c63c564be5df55cbac982a53b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 37418,
        "upload_time": "2023-03-17T20:56:20",
        "upload_time_iso_8601": "2023-03-17T20:56:20.203344Z",
        "url": "https://files.pythonhosted.org/packages/39/14/0483ff2a22d2f7ec03e564dd0d32320c50f030d22be3299e38270c23e522/austin_dist-3.4.1-py2.py3-none-musllinux_1_1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e42a66bcf2e443a9a9ef6856de4cf36af09c6a035516a38134f77dd074a1f807",
          "md5": "5bc94f73fab197af98b6512932b62030",
          "sha256": "db9a4b7f86487becb2133de233bf2fa7bf0c409ff37ef5d10abfbdbdcee36607"
        },
        "downloads": -1,
        "filename": "austin_dist-3.4.1-py2.py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "5bc94f73fab197af98b6512932b62030",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 80402,
        "upload_time": "2023-03-17T20:56:22",
        "upload_time_iso_8601": "2023-03-17T20:56:22.004019Z",
        "url": "https://files.pythonhosted.org/packages/e4/2a/66bcf2e443a9a9ef6856de4cf36af09c6a035516a38134f77dd074a1f807/austin_dist-3.4.1-py2.py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "994bc99dbb6c4606dd53a5b04ff896c9f939aa56ca3c655b7a2fe74ed2bc5237",
          "md5": "c1959a5edda9c1c1ba9ef4216f265bae",
          "sha256": "391925a836a706ed3c5f0a9702b96b3f80eb8488387c5bd99fefbc44a5948399"
        },
        "downloads": -1,
        "filename": "austin_dist-3.5.0-py2.py3-none-macosx_11_0_arm64.whl",
        "has_sig": false,
        "md5_digest": "c1959a5edda9c1c1ba9ef4216f265bae",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 41350,
        "upload_time": "2023-03-18T13:26:53",
        "upload_time_iso_8601": "2023-03-18T13:26:53.135697Z",
        "url": "https://files.pythonhosted.org/packages/99/4b/c99dbb6c4606dd53a5b04ff896c9f939aa56ca3c655b7a2fe74ed2bc5237/austin_dist-3.5.0-py2.py3-none-macosx_11_0_arm64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3549eb70565ee4c727795300e7939a41e28fb2eac29e52742e741f76e4a8ffa8",
          "md5": "f537498d26568fcd845ea4db7a1e74ce",
          "sha256": "4e0044591db628463b01549708dc0d89174c7018d235f92e8ac721e67b8fb163"
        },
        "downloads": -1,
        "filename": "austin_dist-3.5.0-py2.py3-none-macosx_11_0_x86_64.whl",
        "has_sig": false,
        "md5_digest": "f537498d26568fcd845ea4db7a1e74ce",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 42086,
        "upload_time": "2023-03-18T12:11:08",
        "upload_time_iso_8601": "2023-03-18T12:11:08.711244Z",
        "url": "https://files.pythonhosted.org/packages/35/49/eb70565ee4c727795300e7939a41e28fb2eac29e52742e741f76e4a8ffa8/austin_dist-3.5.0-py2.py3-none-macosx_11_0_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d10915e45f548a2d72a230bbf8ddc9487685287992c687a402c787633174fda5",
          "md5": "443e42cb505cf844a01b00aba1f467c1",
          "sha256": "e45441d87874755fb677e15713400b081497353213e9232a6c63525d33e1d211"
        },
        "downloads": -1,
        "filename": "austin_dist-3.5.0-py2.py3-none-manylinux_2_12_x86_64.manylinux2010_x86_64.whl",
        "has_sig": false,
        "md5_digest": "443e42cb505cf844a01b00aba1f467c1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 674302,
        "upload_time": "2023-03-18T12:11:10",
        "upload_time_iso_8601": "2023-03-18T12:11:10.966198Z",
        "url": "https://files.pythonhosted.org/packages/d1/09/15e45f548a2d72a230bbf8ddc9487685287992c687a402c787633174fda5/austin_dist-3.5.0-py2.py3-none-manylinux_2_12_x86_64.manylinux2010_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb452cdf2a48e27da8488490970549eee163cb440b321072fd6b1a9f2700ce8c",
          "md5": "170087362da5cac7de7d63c49fbf67dc",
          "sha256": "2a6a67a448da9efaf2716fce5d0bee2ce749a86a723d101168ebf8bb748170af"
        },
        "downloads": -1,
        "filename": "austin_dist-3.5.0-py2.py3-none-manylinux_2_17_aarch64.manylinux2014_aarch64.whl",
        "has_sig": false,
        "md5_digest": "170087362da5cac7de7d63c49fbf67dc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 636718,
        "upload_time": "2023-03-18T12:11:12",
        "upload_time_iso_8601": "2023-03-18T12:11:12.952178Z",
        "url": "https://files.pythonhosted.org/packages/bb/45/2cdf2a48e27da8488490970549eee163cb440b321072fd6b1a9f2700ce8c/austin_dist-3.5.0-py2.py3-none-manylinux_2_17_aarch64.manylinux2014_aarch64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cc434ede517cc488c1dd111d42072d73feedc40c70d1a12dc93f8a9e37b277a",
          "md5": "088727ee12bc16d7411adfd03bab9644",
          "sha256": "23d1b654cd9160f86a035e09540c4f6628609f13e36d4f9f876de937cf2c517b"
        },
        "downloads": -1,
        "filename": "austin_dist-3.5.0-py2.py3-none-manylinux_2_17_armv7l.manylinux2014_armv7l.whl",
        "has_sig": false,
        "md5_digest": "088727ee12bc16d7411adfd03bab9644",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 497453,
        "upload_time": "2023-03-18T12:11:14",
        "upload_time_iso_8601": "2023-03-18T12:11:14.357727Z",
        "url": "https://files.pythonhosted.org/packages/1c/c4/34ede517cc488c1dd111d42072d73feedc40c70d1a12dc93f8a9e37b277a/austin_dist-3.5.0-py2.py3-none-manylinux_2_17_armv7l.manylinux2014_armv7l.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e83db9bba3faad5d785fdae68aaf45e5f71f07740fb539201b4b18d6418a15da",
          "md5": "ea2c9a3143f4aec60947c147516d4ffa",
          "sha256": "261085d408a7258622017f7f87bd080986d613055a277d13296e27a01ea51df3"
        },
        "downloads": -1,
        "filename": "austin_dist-3.5.0-py2.py3-none-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl",
        "has_sig": false,
        "md5_digest": "ea2c9a3143f4aec60947c147516d4ffa",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 838279,
        "upload_time": "2023-03-18T12:11:16",
        "upload_time_iso_8601": "2023-03-18T12:11:16.433345Z",
        "url": "https://files.pythonhosted.org/packages/e8/3d/b9bba3faad5d785fdae68aaf45e5f71f07740fb539201b4b18d6418a15da/austin_dist-3.5.0-py2.py3-none-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca5e289e8f00fb9fb136bc215d12ade3ed019f7520800ad622da8f5be456b073",
          "md5": "25aa81c9f79d15069687ec405d64b208",
          "sha256": "e3950dd1675e25064f20b0515d39b9da7ab34d44d6807a299074cc0e2b724365"
        },
        "downloads": -1,
        "filename": "austin_dist-3.5.0-py2.py3-none-musllinux_1_1_aarch64.whl",
        "has_sig": false,
        "md5_digest": "25aa81c9f79d15069687ec405d64b208",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 39007,
        "upload_time": "2023-03-18T12:11:18",
        "upload_time_iso_8601": "2023-03-18T12:11:18.164451Z",
        "url": "https://files.pythonhosted.org/packages/ca/5e/289e8f00fb9fb136bc215d12ade3ed019f7520800ad622da8f5be456b073/austin_dist-3.5.0-py2.py3-none-musllinux_1_1_aarch64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9522c8d8df7e49e47695908a658db996a94bcd15f44acf2884d38fff2de3eaf2",
          "md5": "f06731f2c92a87366cc9e2e71d50f9f6",
          "sha256": "9a2081cd050755fb428c6e00e2ffc1efdaa6f44ec17da56c88d4f678152652de"
        },
        "downloads": -1,
        "filename": "austin_dist-3.5.0-py2.py3-none-musllinux_1_1_armv7l.whl",
        "has_sig": false,
        "md5_digest": "f06731f2c92a87366cc9e2e71d50f9f6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 35985,
        "upload_time": "2023-03-18T12:11:19",
        "upload_time_iso_8601": "2023-03-18T12:11:19.381652Z",
        "url": "https://files.pythonhosted.org/packages/95/22/c8d8df7e49e47695908a658db996a94bcd15f44acf2884d38fff2de3eaf2/austin_dist-3.5.0-py2.py3-none-musllinux_1_1_armv7l.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1bc17c85e47debcd8da35f74a9d1d765f38777f2ced3bbe8a8ae7055de9d461",
          "md5": "28a5a37b40f32500883ad6c832f8fb1c",
          "sha256": "216e13d12328217e54204005a27bd94d2d55c1721cd4eb5c831bf2175ce52a7e"
        },
        "downloads": -1,
        "filename": "austin_dist-3.5.0-py2.py3-none-musllinux_1_1_ppc64le.whl",
        "has_sig": false,
        "md5_digest": "28a5a37b40f32500883ad6c832f8fb1c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 40075,
        "upload_time": "2023-03-18T12:11:21",
        "upload_time_iso_8601": "2023-03-18T12:11:21.120693Z",
        "url": "https://files.pythonhosted.org/packages/d1/bc/17c85e47debcd8da35f74a9d1d765f38777f2ced3bbe8a8ae7055de9d461/austin_dist-3.5.0-py2.py3-none-musllinux_1_1_ppc64le.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e02332f06d646fb7f823177de0896a0333d5677571eb8d3af9bc83eca70b512",
          "md5": "d4d9ac0253cfa28b37ac65934c040b3b",
          "sha256": "847f101cfd48307b920146e7ad95465df64e6f76f88a9e403c4b5a274a9d0fbd"
        },
        "downloads": -1,
        "filename": "austin_dist-3.5.0-py2.py3-none-musllinux_1_1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "d4d9ac0253cfa28b37ac65934c040b3b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 39278,
        "upload_time": "2023-03-18T12:11:22",
        "upload_time_iso_8601": "2023-03-18T12:11:22.420191Z",
        "url": "https://files.pythonhosted.org/packages/2e/02/332f06d646fb7f823177de0896a0333d5677571eb8d3af9bc83eca70b512/austin_dist-3.5.0-py2.py3-none-musllinux_1_1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "551cffdc850d884e67e2b9190869fabf4de79f12b0ba955e3273a7b5559ac0b0",
          "md5": "ed672675760ba31126e94ad8cfa58544",
          "sha256": "42cd65409bcdab0acb6a37a1f541300ebac6997b5985b0de25231b84f8b9cba7"
        },
        "downloads": -1,
        "filename": "austin_dist-3.5.0-py2.py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "ed672675760ba31126e94ad8cfa58544",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 81723,
        "upload_time": "2023-03-18T12:11:24",
        "upload_time_iso_8601": "2023-03-18T12:11:24.094650Z",
        "url": "https://files.pythonhosted.org/packages/55/1c/ffdc850d884e67e2b9190869fabf4de79f12b0ba955e3273a7b5559ac0b0/austin_dist-3.5.0-py2.py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "994bc99dbb6c4606dd53a5b04ff896c9f939aa56ca3c655b7a2fe74ed2bc5237",
        "md5": "c1959a5edda9c1c1ba9ef4216f265bae",
        "sha256": "391925a836a706ed3c5f0a9702b96b3f80eb8488387c5bd99fefbc44a5948399"
      },
      "downloads": -1,
      "filename": "austin_dist-3.5.0-py2.py3-none-macosx_11_0_arm64.whl",
      "has_sig": false,
      "md5_digest": "c1959a5edda9c1c1ba9ef4216f265bae",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 41350,
      "upload_time": "2023-03-18T13:26:53",
      "upload_time_iso_8601": "2023-03-18T13:26:53.135697Z",
      "url": "https://files.pythonhosted.org/packages/99/4b/c99dbb6c4606dd53a5b04ff896c9f939aa56ca3c655b7a2fe74ed2bc5237/austin_dist-3.5.0-py2.py3-none-macosx_11_0_arm64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3549eb70565ee4c727795300e7939a41e28fb2eac29e52742e741f76e4a8ffa8",
        "md5": "f537498d26568fcd845ea4db7a1e74ce",
        "sha256": "4e0044591db628463b01549708dc0d89174c7018d235f92e8ac721e67b8fb163"
      },
      "downloads": -1,
      "filename": "austin_dist-3.5.0-py2.py3-none-macosx_11_0_x86_64.whl",
      "has_sig": false,
      "md5_digest": "f537498d26568fcd845ea4db7a1e74ce",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 42086,
      "upload_time": "2023-03-18T12:11:08",
      "upload_time_iso_8601": "2023-03-18T12:11:08.711244Z",
      "url": "https://files.pythonhosted.org/packages/35/49/eb70565ee4c727795300e7939a41e28fb2eac29e52742e741f76e4a8ffa8/austin_dist-3.5.0-py2.py3-none-macosx_11_0_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d10915e45f548a2d72a230bbf8ddc9487685287992c687a402c787633174fda5",
        "md5": "443e42cb505cf844a01b00aba1f467c1",
        "sha256": "e45441d87874755fb677e15713400b081497353213e9232a6c63525d33e1d211"
      },
      "downloads": -1,
      "filename": "austin_dist-3.5.0-py2.py3-none-manylinux_2_12_x86_64.manylinux2010_x86_64.whl",
      "has_sig": false,
      "md5_digest": "443e42cb505cf844a01b00aba1f467c1",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 674302,
      "upload_time": "2023-03-18T12:11:10",
      "upload_time_iso_8601": "2023-03-18T12:11:10.966198Z",
      "url": "https://files.pythonhosted.org/packages/d1/09/15e45f548a2d72a230bbf8ddc9487685287992c687a402c787633174fda5/austin_dist-3.5.0-py2.py3-none-manylinux_2_12_x86_64.manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bb452cdf2a48e27da8488490970549eee163cb440b321072fd6b1a9f2700ce8c",
        "md5": "170087362da5cac7de7d63c49fbf67dc",
        "sha256": "2a6a67a448da9efaf2716fce5d0bee2ce749a86a723d101168ebf8bb748170af"
      },
      "downloads": -1,
      "filename": "austin_dist-3.5.0-py2.py3-none-manylinux_2_17_aarch64.manylinux2014_aarch64.whl",
      "has_sig": false,
      "md5_digest": "170087362da5cac7de7d63c49fbf67dc",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 636718,
      "upload_time": "2023-03-18T12:11:12",
      "upload_time_iso_8601": "2023-03-18T12:11:12.952178Z",
      "url": "https://files.pythonhosted.org/packages/bb/45/2cdf2a48e27da8488490970549eee163cb440b321072fd6b1a9f2700ce8c/austin_dist-3.5.0-py2.py3-none-manylinux_2_17_aarch64.manylinux2014_aarch64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1cc434ede517cc488c1dd111d42072d73feedc40c70d1a12dc93f8a9e37b277a",
        "md5": "088727ee12bc16d7411adfd03bab9644",
        "sha256": "23d1b654cd9160f86a035e09540c4f6628609f13e36d4f9f876de937cf2c517b"
      },
      "downloads": -1,
      "filename": "austin_dist-3.5.0-py2.py3-none-manylinux_2_17_armv7l.manylinux2014_armv7l.whl",
      "has_sig": false,
      "md5_digest": "088727ee12bc16d7411adfd03bab9644",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 497453,
      "upload_time": "2023-03-18T12:11:14",
      "upload_time_iso_8601": "2023-03-18T12:11:14.357727Z",
      "url": "https://files.pythonhosted.org/packages/1c/c4/34ede517cc488c1dd111d42072d73feedc40c70d1a12dc93f8a9e37b277a/austin_dist-3.5.0-py2.py3-none-manylinux_2_17_armv7l.manylinux2014_armv7l.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e83db9bba3faad5d785fdae68aaf45e5f71f07740fb539201b4b18d6418a15da",
        "md5": "ea2c9a3143f4aec60947c147516d4ffa",
        "sha256": "261085d408a7258622017f7f87bd080986d613055a277d13296e27a01ea51df3"
      },
      "downloads": -1,
      "filename": "austin_dist-3.5.0-py2.py3-none-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl",
      "has_sig": false,
      "md5_digest": "ea2c9a3143f4aec60947c147516d4ffa",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 838279,
      "upload_time": "2023-03-18T12:11:16",
      "upload_time_iso_8601": "2023-03-18T12:11:16.433345Z",
      "url": "https://files.pythonhosted.org/packages/e8/3d/b9bba3faad5d785fdae68aaf45e5f71f07740fb539201b4b18d6418a15da/austin_dist-3.5.0-py2.py3-none-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ca5e289e8f00fb9fb136bc215d12ade3ed019f7520800ad622da8f5be456b073",
        "md5": "25aa81c9f79d15069687ec405d64b208",
        "sha256": "e3950dd1675e25064f20b0515d39b9da7ab34d44d6807a299074cc0e2b724365"
      },
      "downloads": -1,
      "filename": "austin_dist-3.5.0-py2.py3-none-musllinux_1_1_aarch64.whl",
      "has_sig": false,
      "md5_digest": "25aa81c9f79d15069687ec405d64b208",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 39007,
      "upload_time": "2023-03-18T12:11:18",
      "upload_time_iso_8601": "2023-03-18T12:11:18.164451Z",
      "url": "https://files.pythonhosted.org/packages/ca/5e/289e8f00fb9fb136bc215d12ade3ed019f7520800ad622da8f5be456b073/austin_dist-3.5.0-py2.py3-none-musllinux_1_1_aarch64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9522c8d8df7e49e47695908a658db996a94bcd15f44acf2884d38fff2de3eaf2",
        "md5": "f06731f2c92a87366cc9e2e71d50f9f6",
        "sha256": "9a2081cd050755fb428c6e00e2ffc1efdaa6f44ec17da56c88d4f678152652de"
      },
      "downloads": -1,
      "filename": "austin_dist-3.5.0-py2.py3-none-musllinux_1_1_armv7l.whl",
      "has_sig": false,
      "md5_digest": "f06731f2c92a87366cc9e2e71d50f9f6",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 35985,
      "upload_time": "2023-03-18T12:11:19",
      "upload_time_iso_8601": "2023-03-18T12:11:19.381652Z",
      "url": "https://files.pythonhosted.org/packages/95/22/c8d8df7e49e47695908a658db996a94bcd15f44acf2884d38fff2de3eaf2/austin_dist-3.5.0-py2.py3-none-musllinux_1_1_armv7l.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d1bc17c85e47debcd8da35f74a9d1d765f38777f2ced3bbe8a8ae7055de9d461",
        "md5": "28a5a37b40f32500883ad6c832f8fb1c",
        "sha256": "216e13d12328217e54204005a27bd94d2d55c1721cd4eb5c831bf2175ce52a7e"
      },
      "downloads": -1,
      "filename": "austin_dist-3.5.0-py2.py3-none-musllinux_1_1_ppc64le.whl",
      "has_sig": false,
      "md5_digest": "28a5a37b40f32500883ad6c832f8fb1c",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 40075,
      "upload_time": "2023-03-18T12:11:21",
      "upload_time_iso_8601": "2023-03-18T12:11:21.120693Z",
      "url": "https://files.pythonhosted.org/packages/d1/bc/17c85e47debcd8da35f74a9d1d765f38777f2ced3bbe8a8ae7055de9d461/austin_dist-3.5.0-py2.py3-none-musllinux_1_1_ppc64le.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2e02332f06d646fb7f823177de0896a0333d5677571eb8d3af9bc83eca70b512",
        "md5": "d4d9ac0253cfa28b37ac65934c040b3b",
        "sha256": "847f101cfd48307b920146e7ad95465df64e6f76f88a9e403c4b5a274a9d0fbd"
      },
      "downloads": -1,
      "filename": "austin_dist-3.5.0-py2.py3-none-musllinux_1_1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "d4d9ac0253cfa28b37ac65934c040b3b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 39278,
      "upload_time": "2023-03-18T12:11:22",
      "upload_time_iso_8601": "2023-03-18T12:11:22.420191Z",
      "url": "https://files.pythonhosted.org/packages/2e/02/332f06d646fb7f823177de0896a0333d5677571eb8d3af9bc83eca70b512/austin_dist-3.5.0-py2.py3-none-musllinux_1_1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "551cffdc850d884e67e2b9190869fabf4de79f12b0ba955e3273a7b5559ac0b0",
        "md5": "ed672675760ba31126e94ad8cfa58544",
        "sha256": "42cd65409bcdab0acb6a37a1f541300ebac6997b5985b0de25231b84f8b9cba7"
      },
      "downloads": -1,
      "filename": "austin_dist-3.5.0-py2.py3-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "ed672675760ba31126e94ad8cfa58544",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 81723,
      "upload_time": "2023-03-18T12:11:24",
      "upload_time_iso_8601": "2023-03-18T12:11:24.094650Z",
      "url": "https://files.pythonhosted.org/packages/55/1c/ffdc850d884e67e2b9190869fabf4de79f12b0ba955e3273a7b5559ac0b0/austin_dist-3.5.0-py2.py3-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}