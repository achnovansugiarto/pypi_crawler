{
  "info": {
    "author": "Suzumizaki-Kimitaka(鈴見咲 君高)",
    "author_email": "info@h12u.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Environment :: Web Environment",
      "Framework :: Sphinx",
      "Framework :: Sphinx :: Extension",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Documentation",
      "Topic :: Documentation :: Sphinx",
      "Topic :: Text Processing",
      "Topic :: Utilities"
    ],
    "description": "yogosyu extension\n=================\n\n.. note::\n\n   Japanese version of this document is also available, on the `site\n   <http://h12u.com/sphinx/yogosyu/README_ja.html>`_ or the doc\n   folder of this package.\n\n.. role:: fn_rst\n\nIntroduction\n------------\nCurrently, June 7, 2015, Sphinx 1.3.1 sorts indices *only* with\n'Normalization Form Canonical Decomposition(NFD)'. And what is worse,\ngrouping is done *only* with US-ASCII. There is non or few problems \nwhen you use the language similar to English, because the NFD method\ndecompose diacritical marks.\n\nBut with the other languages, the grouping is useless. Almost all\ncharacters are grouped into 'Symbols'. What a meaningless behavior\nit is!\n\nI don't know what happens with each language in the world, but one \nof the worst might be Japanese case. The many terms are written with\nkanzi (kanji, 漢字, Chinese characters), and the sorting should be\ndone by how to read, that generally cannot be defined from the\ncharacters of the terms.\n\nThis extension tries to resolve these problems above, using sortorder_.\nNot only with these problematic languages, you can define the alternate\nsort order for any language you want.\n\nSorry to say, this extension can resolve :code:`.. glossary::` directive\nonly, by replacing with :code:`.. yogosyu::` one. Other directives like\n:code:`index` would be resolved with future release. \n\nLicense\n-------\n2-clause BSD, same as the Sphinx project.\n\nInstallation\n------------\nYou can install or uninstall this package like another Python packages.\nAlso, you can use this package without installing this package on your Python\nsystems, the configuration file of Sphinx(:fn_rst:`conf.py`) enable you to use.\n\nSystem requirements\n...................\nTested with 32bit version of Python 2.7.10 and 64bit version of 3.4.3,\nboth on the Microsoft Windows 8.1 Pro 64bit edition. But with another\nversions and on another OSs would be usable.\n\nPython 3 is required if you need full unicode support.\nWhen used with Python 2, the usable character set is limited\nwith local encoding.\n\n.. caution::\n\n   There's a thing important to know: This extension depends on both\n   docutils 0.12 and Sphinx 1.3.1. The patching is usable *UNTIL* the\n   some functions keep same as these versions of the modules.\n\n   There is more stable extension, called gosyu_. but 'gosyu' generates\n   :fn_rst:`std-gosyu.html` as a domain index, instead of\n   :fn_rst:`genindex.html`\n\nHow to install\n..............\nYou can install this package as you will do with another one.\n\n#. Open a console and do :code:`pip install yogosyu`.\n\n   On the MS-Windows,\n   :code:`<python_installed_path>\\Scripts\\pip.exe install yogosyu`.\n\n#. Or when you get zip archive like :fn_rst:`yogosyu-2.0.5(.zip)`\n   where '2.0.5' is version number,\n   change current directiory to the folder that has the zip file,\n   and do :code:`pip install yogosyu-2.0.5.zip`.\n\n   On the MS-Windows,\n   :code:`<python_installed_path>\\Scripts\\pip.exe install yogosyu-2.0.5.zip`.\n\n#. Or, this way is the Sphinx specific, you can use this package just extracted\n   any folder you want. the :fn_rst:`conf.py` enables you to use the themes and\n   extensions.\n\nIf you don't resolve dependencies, you also have to get sortorder_ module.\n\nHow to use\n----------\n\n1) Add the paths\n................\nAs another extensions, you can use this extension by editing :fn_rst:`conf.py`.\n\nFirst, you should add:\n\n.. code-block:: python\n\n  # add 4 lines below\n  import distutils.sysconfig\n  site_package_path = distutils.sysconfig.get_python_lib()\n  sys.path.insert(0, os.path.join(site_package_path, 'sortorder'))\n  sys.path.insert(0, os.path.join(site_package_path, 'sphinxcontrib/yogosyu'))\n\nOr, when you don't install with pip or like,\n\n.. code-block:: python\n\n  # add just 2 line below\n  sys.path.insert(0, '<path_to_the_folder_contains_sortorder___init___py>')\n  sys.path.insert(0, '<path_to_the_folder_contains_yogosyu_py>')\n\nIf you want to use your own sort order module(.py file), you should add\nthe path of it, too:\n\n.. code-block:: python\n\n  # after adding paths as above, add the line below.\n  sys.path.insert(0, '<path_to_the_folder_sort_order_xx_py>')\n\n.. note::\n\n  The module sortorder_ has each preset order for some languages.\n \n  Please read the document of the module to know how to use them or how\n  to make your own order.\n\n2) declare the extensions\n.........................\nNext, add yogosyu extension into :code:`extension` list:\n\n.. code-block:: python\n\n   language = 'xx' # make sure your language if you want to use autodetect\n\n   #\n   # (snip...)\n   #\n\n   extension = [\n     'sort_order_xx', # omit when using one of preset sort order or autodetect\n     'sortorder', # you can omit always, because 'yogosyu' automatically loads\n     'yogosyu', # you can omit if activate next line, but this is main module\n     'user_ordered_index_patch', # omit when you DON'T use general indices\n   ] # Of course you can add another extensions.\n\n3) replace 'glossary' with 'yogosyu'\n....................................\nNow, just replace :code:`.. glossary::` with :code:`.. yogosyu::`.\nWhen :code:`:sorted:` is given, the terms are sorted in each glossary.\n\nAnd anyway, the general index in :fn_rst:`genindex.html` is also sorted\nas you want to define.\n\n4) add the how to read each terms\n.................................\nFor the languages like Japanese, :code:`.. yogosyu::` directive has another \noption :code:`:yomimark: <a separater char>`. the separator is a character\nyou want to use split. When the separator is given, the term can be followed\nthe string how to read. If you think some terms don't need the reading, you\ncan simply omit for the terms.\n\nConsider to use the preset Japanese sort order defined in sortorder_\nextension:\n\n.. code-block:: python\n\n   language = 'ja'\n\n   #\n   # (snip...)\n   #\n\n   extension = [\n     'user_ordered_index_patch',\n   ]  # all omitted modules will be automatically loaded\n\nAnd write glossary like:\n\n.. code-block:: rst\n\n  .. yogosyu::\n    :sorted:\n    :yomimark: 、\n\n    ひらがな\n\n      比較的曲線が多い日本語の表音文字\n\n    カタカナ\n\n      比較的直線が多い日本語の表音文字\n\n    漢字、かんじ\n\n      日本語でも使われる表意文字\n\n    英字、えいじ\n\n      義務教育で教わるため、日本語でもよく使われる表音文字\n\n    記号、きごう\n\n      国内国外を問わず多種多様な記号が携帯電話などでも使えるようになってきた\n\nThe separator is :code:`、` (U+3001) in this case.\n\nThis reorders the terms :code:`英字 -> カタカナ -> 漢字 -> 記号 -> ひらがな`.\nThe preset :fn_rst:`sortorder.ja` module sorts them depending on\n:code:`えいじ, カタカナ, かんじ, きごう, ひらがな`.\n\nAnd in the :fn_rst:`genindex.html`, :code:`カタカナ, 漢字, 記号` is grouped in\none heading :code:`か`. Also because the module desides it depending on how to\nread.\n\n.. note::\n\n   If you want to use space(U+0020) or tab(U+0009) for the separator, you can\n   write :code:`:yomimark: space` or :code:`:yomimark: tab`.\n\nRelated products\n----------------\n- unicode_ids_\n\n  - enable the Sphinx to generate URL with Non-ASCII characters.\n\n- sortorder_\n\n  - the base module of this product.\n\n- gosyu_\n\n  - anothor implementation for the same purpose of this package.\n    more stable against Sphinx updates, but the terms are not included\n    :fn_rst:`genindex.html` but :fn_rst:`std-gosyu.html`.\n\nAuthor\n------\nSuzumizaki-Kimitaka(鈴見咲 君高), 2011-2015\n\nHistory\n-------\n2.0.5(2015-07-04):\n\n  - part the modules sortorder_ and unicode_ids_ from this package.\n  - First Uploaded to PyPI.\n\n2013-12-07:\n\n  Add Python 3 support.\n\n2013-12-06:\n\n  updated to meet Sphinx 1.2.\n\n2011-05-24:\n\n  First release. Includes sortorder_ and unicode_ids_.\n\n.. _sortorder: https://pypi.python.org/pypi/sortorder\n.. _unicode_ids: https://pypi.python.org/pypi/unicode_ids\n.. _gosyu: https://pypi.python.org/pypi/gosyu",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://h12u.com/sphinx/yogosyu/",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "yogosyu",
    "package_url": "https://pypi.org/project/yogosyu/",
    "platform": "any",
    "project_url": "https://pypi.org/project/yogosyu/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://h12u.com/sphinx/yogosyu/"
    },
    "release_url": "https://pypi.org/project/yogosyu/2.0.5/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Fix the Sphinx to enable any order to sort indices",
    "version": "2.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1618932,
  "releases": {
    "2.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "317d8f144272152de5c19b55c4b789c5791b79ec2a80e91a4690b52ce7606405",
          "md5": "4a165c38c89b8979e9de9ce10bd7bdb4",
          "sha256": "c4e02ac6da19a5ab018167024b1c84c0b2df756884d96aca162e8625bddf72a9"
        },
        "downloads": -1,
        "filename": "yogosyu-2.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a165c38c89b8979e9de9ce10bd7bdb4",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "requires_python": null,
        "size": 245288,
        "upload_time": "2015-07-04T03:55:53",
        "upload_time_iso_8601": "2015-07-04T03:55:53.112068Z",
        "url": "https://files.pythonhosted.org/packages/31/7d/8f144272152de5c19b55c4b789c5791b79ec2a80e91a4690b52ce7606405/yogosyu-2.0.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2452854fc3d855d37817502d4a5f3c15b3c9736f7185a025506e6df7c409c9b",
          "md5": "e5068643d3704bd8a35257f4c3a0dd06",
          "sha256": "1bb0ea20a0272a21e494083c773d17e788a533defa5b18d68a1e2673ed7c3048"
        },
        "downloads": -1,
        "filename": "yogosyu-2.0.5.zip",
        "has_sig": false,
        "md5_digest": "e5068643d3704bd8a35257f4c3a0dd06",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 316685,
        "upload_time": "2015-07-04T03:55:47",
        "upload_time_iso_8601": "2015-07-04T03:55:47.448624Z",
        "url": "https://files.pythonhosted.org/packages/e2/45/2854fc3d855d37817502d4a5f3c15b3c9736f7185a025506e6df7c409c9b/yogosyu-2.0.5.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "317d8f144272152de5c19b55c4b789c5791b79ec2a80e91a4690b52ce7606405",
        "md5": "4a165c38c89b8979e9de9ce10bd7bdb4",
        "sha256": "c4e02ac6da19a5ab018167024b1c84c0b2df756884d96aca162e8625bddf72a9"
      },
      "downloads": -1,
      "filename": "yogosyu-2.0.5-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4a165c38c89b8979e9de9ce10bd7bdb4",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 245288,
      "upload_time": "2015-07-04T03:55:53",
      "upload_time_iso_8601": "2015-07-04T03:55:53.112068Z",
      "url": "https://files.pythonhosted.org/packages/31/7d/8f144272152de5c19b55c4b789c5791b79ec2a80e91a4690b52ce7606405/yogosyu-2.0.5-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e2452854fc3d855d37817502d4a5f3c15b3c9736f7185a025506e6df7c409c9b",
        "md5": "e5068643d3704bd8a35257f4c3a0dd06",
        "sha256": "1bb0ea20a0272a21e494083c773d17e788a533defa5b18d68a1e2673ed7c3048"
      },
      "downloads": -1,
      "filename": "yogosyu-2.0.5.zip",
      "has_sig": false,
      "md5_digest": "e5068643d3704bd8a35257f4c3a0dd06",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 316685,
      "upload_time": "2015-07-04T03:55:47",
      "upload_time_iso_8601": "2015-07-04T03:55:47.448624Z",
      "url": "https://files.pythonhosted.org/packages/e2/45/2854fc3d855d37817502d4a5f3c15b3c9736f7185a025506e6df7c409c9b/yogosyu-2.0.5.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}