{
  "info": {
    "author": "Matthew Scott",
    "author_email": "matt@11craft.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Overview of Radiant Voices\n==========================\n\n\n\nPart of the Metrasynth_ project.\n\n.. _Metrasynth: https://metrasynth.github.io/\n\nRadiant Voices provides tools to\n**create, read, modify, and write SunVox files**.\nThis includes project files ending in ``.sunvox``,\nand module/synth files ending in ``.sunsynth``.\n\n\n\n\nSunVox data structures and APIs\n-------------------------------\n\nRadiant Voices strives toward 100% coverage of\nall data structures used by SunVox files,\nexposing APIs for creating and manipulating those structures.\n\nUsing these APIs, you can do things not possible\nwith the standard SunVox interface or the SunVox DLL, such as:\n\n- `algorithmic composition`_\n- parametric synth/module design\n- structure and complexity analysis\n- automatic `graph layout`_ of modules\n- and more...\n\nOur collective imagination is the limit!\n\n..  _algorithmic composition:\n    https://en.wikipedia.org/wiki/Algorithmic_composition\n\n..  _graph layout:\n    https://en.wikipedia.org/wiki/Graph_drawing\n\n\nSupport for multiple languages\n------------------------------\n\nMultiple programming languages are supported.\n\nThis is accomplished by combining a structured file format specification\nwith a code generation framework.\n\nSupported languages currently include:\n\n- Python 3.8+\n- Typescript\n\n\nInteraction with the SunVox DLL\n-------------------------------\n\nBy combining Radiant Voices with sunvox-dll-python_ for Python\n(or the SunVox library wrapper for your language),\none can also create alternative editing and performance tools\nto use alongside, or instead of, the official SunVox app.\n\nThe two packages work together to provide convenient high-level\nAPIs for loading project and module objects directly into\nplayback slots managed by the SunVox DLL.\n\nSome possibilities might include:\n\n- alternative project editors\n- generative_ sound design using `genetic algorithms`_\n- network-enabled performance tools\n\nWhat can *you* come up with?\n\n..  _sunvox-dll-python:\n    https://sunvox-dll-python.readthedocs.io/\n\n..  _generative:\n    https://en.wikipedia.org/wiki/Generative_Design\n\n..  _genetic algorithms:\n    https://en.wikipedia.org/wiki/Genetic_algorithm\n\n\nSunVox file format documentation\n--------------------------------\n\nRadiant Voices intends to serve as a *de facto* source of documentation\nabout the format, as there is currently `no official documentation for the\nSunVox file format <http://www.warmplace.ru/forum/viewtopic.php?t=1943#p5562>`__.\n\nThe interpretation of SunVox file formats is based on a mix of \"clean room\"\nstyle inspection of what SunVox writes to disk when a file is edited\na specific way, the `most recent BSD-licensed source code\nfor the SunVox audio engine <https://github.com/warmplace/sunvox_sources>`__,\nand consultation with NightRadio (the author of SunVox).\n\nDocumentation is provided in the form of prose in the English language,\nas well as a specification defined in YAML format.\n\n\nRequirements\n------------\n\n- A supported programming language.\n\n- OS and platform supported by `sunvox-dll-python`_, if working with\n  the native SunVox DLL.\n\n\nAbout SunVox\n------------\n\nFrom the `SunVox home page`_:\n\n    SunVox is a small, fast and powerful modular synthesizer with pattern-based sequencer (tracker).\n    It is a tool for those people who like to compose music wherever they are, whenever they wish.\n    On any device. SunVox is available for Windows, OS X, Linux, Maemo, Meego, Raspberry Pi,\n    Windows Mobile (WindowsCE), PalmOS, iOS and Android.\n\n.. _SunVox home page: http://www.warmplace.ru/soft/sunvox/\n\nChangelog\n=========\n\n\n1.0.3\n-----\n\nBug fix release.\n\n\nAdditions (All versions)\n........................\n\n- Adds test to load all files in ``tests/files/extra/``,\n  to ensure that all example files included with SunVox can be loaded without error.\n\n\nFixes (All versions)\n....................\n\n- Fixes loading of some projects where modules were deleted.\n\n\nFixes (Python version)\n......................\n\n- Fixes ``rv.tools.player`` decoding of module names.\n\n- Fixes loading of some projects where patterns were deleted.\n\n- Fixes loading of user-defined controllers when loading MetaModules.\n\n\n1.0.2\n-----\n\nBug fix release.\n\nFixes (Python version)\n......................\n\n- Avoids rearranging modules during project loading.\n\n\n1.0.1\n-----\n\nBug fix release.\n\nFixes (all versions)\n....................\n\n- Adds correct range information for delay controllers in Delay and Echo modules.\n\n\n1.0.0\n-----\n\nThe themes of this release are:\n\n- New JavaScript version of Radiant Voices.\n\n- Support for new modules, controllers, options, and curves in SunVox 1.9.6c.\n\n- Improved general compatibility with the SunVox file format.\n\n- Improved documentation of the SunVox file format.\n\n- Radiant Voices API improvements.\n\n\nMajor change: ``genrv`` code generator\n......................................\n\nTo support porting Radiant Voices to more languages than just Python,\nand keeping these ports in sync with new versions of SunVox,\nthis release introduces a new code-generation tool, ``genrv``.\n\n``genrv`` is written in Python, and uses Jinja2 templates to generate\nsource code in various target languages, based on a spec written in YAML.\n\nThe generated code is run through code-formatting tools,\nsaved directly into the final package structure,\nand committed to the git repository as any other code would be.\n\nBase classes for all module types are generated this way.\nThey include controllers, options, and controller value enums.\nThe actual classes for each module inherit from these base classes\nand add module-specific behavior maintained by hand.\n\n\nMajor change: JavaScript port\n.............................\n\nRadiant Voices now has a JavaScript port, written in TypeScript.\nIt pairs well with the JavaScript/WebAssembly version of the SunVox library.\n\nIt is not a 1-to-1 port from the Python version, although\nit is designed to allow you to do the same things.\n\nAs of this release, each version has strengths and weaknesses compared to the other.\nOver time, we will work towards parity as we strive toward 100% compatibility with\nSunVox.\n\n\nAdditions (all versions)\n........................\n\n- Adds ``Project.receive_sync_midi`` and ``Project.receive_sync_other`` flags.\n\n- Adds ``ADSR`` module.\n\n- Adds ``Ctl2Note`` module.\n\n- Adds ``Pitch Detector`` module.\n\n- Adds ``harmonics`` to enum for ``AnalogGenerator.waveform`` controller.\n\n- Adds new values to enum for ``SpectraVoice.h_type`` controller:\n  ``overtones1+``, ``overtones2+``, ``overtones3+``, ``overtones4+``, ``metal``.\n\n- Adds ``Amplifier.gain`` controller.\n\n- Adds ``AnalogGenerator.true_zero_attack_release`` option.\n\n- Adds new values to enum for ``AnalogGenerator.waveform`` controller:\n  ``noise_with_spline_interpolation``,\n  ``white_noise``,\n  ``pink_noise``,\n  ``red_noise``,\n  ``blue_noise``,\n  ``violet_noise``,\n  ``grey_noise``.\n\n- Adds ``LFO.freq_scale_pct`` controller.\n\n- Adds ``LFO.smooth_transitions`` controller.\n\n- Adds ``Sound2Ctl.send_only_changed_values`` option.\n\n- Adds new options to ``MetaModule``:\n  ``receive_notes_from_keyboard``, ``do_not_receive_notes_from_keyboard``.\n\n- Adds ``PitchShifter.bypass_if_pitch_eq_0`` controller.\n\n- Adds new value to enum for ``Compressor.mode`` controller:\n  ``peak_zero_latency``.\n\n- Adds new values and value names to enum for ``Distortion.type`` controller:\n  ``clipping`` is the new name for ``lim``.\n  ``foldback`` is the new name for ``sat``.\n  ``foldback2``, ``foldback3``, ``overflow`` are new values.\n\n- Adds new value to enum for ``Lfo.waveform`` controller:\n  ``random_interpolated``.\n\n- Adds ``DrumSynth.bass_panning`` controller.\n\n- Adds ``DrumSynth.hihat_panning`` controller.\n\n- Adds ``DrumSynth.snare_panning`` controller.\n\n- Adds ``MultiCtl.response`` controller.\n\n- Adds ``MultiCtl.sample_rate_hz`` controller.\n\n- Increases the maximum value of ``Gpio.pin_in`` and ``Gpio.pin_out``\n  controllers to ``256``.\n\n- Renames ``Kicker.vol_addition`` controller to ``Kicker.boost``,\n  to reflect naming in SunVox 1.9.4.\n\nAdditions (Python version)\n..........................\n\n- Ports all test cases from JavaScript version.\n  Note: A limited number of test cases are not yet completely ported.\n\n- Adds ``Project.restart_position`` attribute.\n\n- Adds ``Project.detach_module(module)`` method.\n\n- Adds ``patch_decompiler`` tool.\n\n- Adds ``Pattern.project`` attribute, set once attached to a project.\n\n- Adds ``Note.pattern`` and ``Note.project`` to allow notes to be project-aware.\n\n- Adds ``Note.module_index`` property, converts ``Note.module`` to 0-based index.\n\n- Adds ``Note.mod`` property, allows setting a note's module via an actual\n  `Module` instance (instead of an int).\n\nChanges (All versions)\n......................\n\n- Updates module option reading, writing, and setting to reflect\n  changes in SunVox 1.9.6.\n\nChanges (Python version)\n........................\n\n- Uses `dict` instead of `OrderedDict`, as modern Python's built-in `dict`\n  maintains key order.\n\n- Renames ``incoming_links`` to ``in_links``.\n\n- Renames ``controller_number`` to ``ctl_index``, and ``gain_percentage`` to ``gain_pct``,\n  to more closely reflect the naming in the JavaScript version.\n\n- Adds type annotations to support static analysis tools and IDEs.\n\n- Renames \"dirty waveform\" to \"drawn waveform\".\n\n- Updates default ``sunvox_version`` and ``based_on_version`` of\n  newly-created ``Project`` containers to reflect file format version 1.9.6.1.\n\n- Updates ``MetaModule.behaviors`` to include ``sends_notes``.\n\n- Now uses black_ to format all Python modules.\n\n..  _black:\n    https://black.readthedocs.io/en/stable/\n\n- ``Project.attach_module`` now raises ``ModuleOwnershipError``\n  if the module is already attached to a project.\n\n- ``Project.attach_module`` now re-uses empty module indexes,\n  instead of always appending to the end.\n\n- ``Project.connect`` now raises ``ModuleOwnershipError`` if modules\n  do not share a common parent.\n\n- Python 3.8 is now required.\n\n- ``Project.attach_pattern`` now returns the index of the attached pattern.\n\nFixes (all versions)\n....................\n\n- Correctly reads and writes ``SLnK`` chunks,\n  thus correctly keeping the connection order between modules\n  that have more than one connection going in or out.\n\n- Renames ``Sample.loop_end`` to ``Sample.loop_len``.\n\n- Fixes how effects embedded into ``Sampler.effect`` are serialized.\n\n- Updates ``out_controller`` of ``Pitch2Ctl``, ``Sound2Ctl``, and ``Velocity2Ctl``\n  to have correct range of 0..255.\n\n\nFixes (Python version)\n......................\n\n- Fixes writing of controller values to use signed ints instead of unsigned.\n\n- Fixes reading/writing of ``VorbisPlayer.finetune`` controller values.\n\n- Updates the ``helloworld`` example to use correct APIs.\n\n- Parses chunk IDs in a case-sensitive way, to prevent incorrect\n  parsing of chunks such as ``SLnK``.\n\n\n0.4.0.dev2 (2018-03-11)\n-----------------------\n\nFixes\n.....\n\n- Corrects a packaging error that included unnecessary cache data from\n  documentation builds.\n\n\n0.4.0.dev1 (2018-03-11)\n-----------------------\n\nAdditions\n.........\n\n- Adds documentation about the SunVox file format.\n\n- Adds equality checking to ``Range``.\n\n- Adds ``Module.midi_in_always`` attribute, defaulting to ``False``.\n  When ``True``, the module will respond to MIDI events regardless of\n  whether it's selected in the SunVox UI.\n\n- Adds ``Module.midi_in_channel`` attribute, defaulting to ``0`` (all channels).\n  Set to 1-16 to make the module respond to only a specific MIDI channel.\n\n- Adds ``Project.time_grid2`` attribute.\n\n- Adds ``MultiSynth.curve2_influence`` controller.\n\n- Adds ``MetaModule.event_output`` option (default: ``True``).\n\n- Adds ``MultiSynth.trigger`` option (default: ``False``).\n\n- Adds ``ModuleFlags`` and ``VisibleModuleFlags`` enums for reading/writing\n  ``Module.flags``.\n\n- Adds ``PatternFlags`` and ``PatternAppearanceFlags`` enums for reading/writing\n  ``Pattern.flags`` and ``Pattern.appearance_flags``.\n\n- Adds ``Visualization``, ``LevelMode``, ``Orientation``, and ``OscilloscopeMode``\n  for reading/writing the ``Module.visualization`` structure.\n\n- Adds ``Project.selected_generator`` attribute.\n\n- Adds ``Lfo.Waveform.triangle`` constant.\n\n- Adds ``Lfo.generator`` controller.\n\n- Adds ``Reverb.random_seed`` controller.\n\n- Adds ``Sampler.pitch_envelope`` and ``Sampler.effect_control_envelopes[]``\n  containing new envelopes from SunVox 1.9.3.\n\n- Adds ``Sampler.effect`` to contain an optional ``SunSynth`` instance\n  which in turn contains the effect being modulated by the\n  effect control envelopes.\n\n- Adds ``Sampler.Sample.loop_sustain`` flag.\n\n- Adds ``Sampler.ignore_velocity_for_volume`` option.\n\n- Adds ``Container.clone()`` method.\n\n- Adds ``Project.pattern_lines()`` method, which iterates over a range of project lines\n  and yields information about the active pattern lines for each project line.\n\n- Adds ``Pattern.source_method()`` and ``PatternClone.source_method()``,\n  to determine the source pattern for any given pattern or pattern clone.\n\nChanges\n.......\n\n- Python 3.6 is now required.\n\n- While writing files, ``CHFF`` and ``CHFR`` chunks will not be written\n  if they always have a value of ``0``.\n\n- ``AnalogGenerator.unsmooth_frequency_change`` option is now inverted to\n  ``.smooth_frequency_change``.\n\n- Updates ``Sampler`` and ``Sampler.Envelope`` to support SunVox 1.9.3 format.\n  When a pre-1.9.3 formatted Sampler is loaded, it will be upgraded to 1.9.3 format.\n\n- More detailed exception message when attempting to set an out-of-range value\n  to a controller.\n\n- Ignores chunk types no longer used by modern SunVox versions:\n  ``PSYN``, ``PCTL``, and ``PAMD``.\n\n- Ignores value of ``CHNK`` when reading module-specific chunks.\n\n- Does not write the optional -1 to the end of ``SLNK`` chunks.\n\n- Uses the value mapping curve when converting a ``MultiCtl.value``\n  to downstream controllers.\n\n- Updates ``MetaModule.play_patterns``, which is now of type\n  ``MetaModule.PlayPatterns`` instead of ``bool``.\n  This introduces support for the new\n  ``MetaModule.PlayPatterns.on_no_repeat`` value.\n\n- Uses the Fruchterman-Reingold layout algorithm from NetworkX\n  for auto-layout of modules, not PyGraphviz neato algorithm.\n  This affects the arguments accepted by ``Project.layout()``.\n\n- Improves variable names generated from MetaModule\n  user defined controller labels.\n\nFixes\n.....\n\n- ``SMIN`` (module MIDI output device name) is now correctly read and written.\n\n- ``SMII`` and ``SMIC`` chunks are now encoded as unsigned int32\n  (was previously signed).\n\n- Strings now use UTF-8 encoding.\n\n- All module types now have a correct default ``.flags`` attribute.\n\n- After ``MetaModule.update_user_defined_controllers()`` is called,\n  user defined controllers will have correct ``value_type`` set.\n  (This avoids errors such as 44100 being out of the 0..32768 range.)\n\n- In ``MetaModule``, when a user defined controller mapping points to\n  a non-existent module, the mapping will be ignored.\n  (Was throwing an ``AttributeError``)\n\n- When ``Module`` options are loaded from older projects,\n  assume ``0`` as a default value if there are not enough bytes.\n  (Was throwing an ``IndexError``)\n\n- Range validation for ``Lfo.freq`` and ``Vibrato.freq``\n  now depends on the value of the ``frequency_unit`` controller.\n  Some modules created in earlier versions of SunVox have out-of-range values.\n  These are only warned about using ``logging``,\n  instead of the standard behavior of raising an exception.\n\n- Writes correct value of ``CHNK`` when writing module-specific chunks.\n\n- Default to signed 8-bit int when a ``CHFF`` value was 0.\n\n\n0.3.0 (2017-04-18)\n------------------\n\nAdditions\n.........\n\n- Adds ``propagate`` argument to ``MultiCtl.reflect()``.\n  Defaults to ``True`` which causes the new ``MultiCtl.value`` to\n  immediately propagate to all mapped controllers,\n  including the one that was just reflected.\n\n  Set to ``False`` if you only want to set ``MultiCtl.value``\n  without propagating to mapped controllers.\n\n- Pass a value for ``initial`` when calling ``MultiCtl.macro()`` to\n  set and propagate an initial value. Default behavior is to not set a value.\n\nChanges\n.......\n\n- The ``repr`` of a ``CompactRange`` instance now shows that class name,\n  instead of ``Range``.\n\nFixes\n.....\n\n- Fixes algorithm for propagating ``MultiCtl.value`` changes to\n  mapped controllers.\n\n- Fixes algorithm for reflecting mapped controllers back to ``MultiCtl.value``.\n\n\n0.2.0 (2017-04-02)\n------------------\n\nAdditions\n.........\n\n- Adds ``Controller.pattern_value()`` instance method, to map a controller's\n  value to a pattern value in the range of 0x0000-0x8000.\n\n- Adds ``ALL_NOTES`` constant to see if a ``NOTECMD`` is a note or a command.\n  (Example: ``if some_note in ALL_NOTES: ...``)\n\n- Adds ``tabular_repr()`` instance methods to ``Note`` and ``Pattern``,\n  returning a tabular representation suitable for inclusion in text documents.\n\n- Adds ``behaviors`` attribute to all module classes, describing the\n  types of information each module can send and receive.\n\n- Adds package-specific exception base classes to ``rv.errors``.\n\n- Adds support for reading, writing, and modifying controller MIDI mappings.\n\n- Adds a ``MultiCtl.macro()`` static method, for quickly creating a\n  ``MultiCtl`` that controls several similar controllers on connected modules.\n\n- Adds a ``MultiCtl.reflect()`` instance method, for setting a ``MultiCtl``'s\n  value based on the destination controller mapped at a given index.\n\n- Adds ``# TODO: ...`` notes to indicate unimplemented features.\n\n- Allows property-style access to user-defined controllers on ``MetaModule``s\n  using a ``u_`` prefix. For example, if there's a user-defined controller\n  named \"Attack\", it will be accessible via the ``.u_attack`` property.\n\n- Adds ``ArrayChunk.set_via_fn()`` method, for setting various curves using\n  the output of a function.\n\n- Adds ``DRUMNOTE``, ``BDNOTE``, ``HHNOTE``, and ``SDNOTE`` enumerations to\n  ``DrumSynth`` class, providing note aliases for easier programming of\n  drum sequences.\n\n- Adds ``Pattern.set_via_fn()`` and ``.set_via_gen()`` instance methods,\n  for altering a pattern based on the output of a function or generator.\n\nChanges\n.......\n\n- Renames ``Output`` module's module group to ``\"Output\"``.\n\n- When using ``Project.layout()``, default to using ``dot`` layout engine.\n\n- Uses a direct port of SunVox's algorithm for mapping ``MultiCtl`` values\n  to destination controllers.\n\n- Uses 1.9.2.0 as SunVox version number when writing projects to files.\n\n- Allows using separate x/y offsets and factors during ``Project.layout()``\n\nFixes\n.....\n\n- Uses same sharp note notation as used by SunVox (lowercase indicates sharp).\n\n- Honor ``prog`` keyword arg when passed into ``Project.layout()`` method.\n\n- Does not require pattern ``x`` or ``y`` to be divisible by 4.\n\n- Assigns correct controller number to user-defined controllers on\n  ``MetaModule``.\n\n- Corrects the max value allowed in a ``MultiSynth`` velocity/velocity curve.\n\n- Moves ``pygraphviz`` from ``requirements/base.txt`` to ``.../tools.txt``\n  to be more Windows-friendly.\n\n\n0.1.1 (2016-11-09)\n------------------\n\n- Fixes upload to PyPI.\n\n\n0.1.0 (2016-11-09)\n------------------\n\n- Initial release.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/metrasynth/radiant-voices",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "radiant-voices",
    "package_url": "https://pypi.org/project/radiant-voices/",
    "platform": "any",
    "project_url": "https://pypi.org/project/radiant-voices/",
    "project_urls": {
      "Homepage": "https://github.com/metrasynth/radiant-voices"
    },
    "release_url": "https://pypi.org/project/radiant-voices/1.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Create, read, modify, and write SunVox files.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10077030,
  "releases": {
    "0.1.0": [],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60ae8d78b2de032106ef1c5d28992623ce656aee02df7f1b48e44447b0af3fbe",
          "md5": "b4761decf18992b94bd64394e956ad7f",
          "sha256": "28ad0c883a620656dbe37fd72ac5a6d5c99e29d3978afbbc3bcb6e0ffb9f9721"
        },
        "downloads": -1,
        "filename": "radiant-voices-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b4761decf18992b94bd64394e956ad7f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 49324,
        "upload_time": "2016-11-09T18:16:54",
        "upload_time_iso_8601": "2016-11-09T18:16:54.295052Z",
        "url": "https://files.pythonhosted.org/packages/60/ae/8d78b2de032106ef1c5d28992623ce656aee02df7f1b48e44447b0af3fbe/radiant-voices-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cdc1ece1113611d191c57d45539eb4a40ed95d60e536e3d4ab556ee01ccceb01",
          "md5": "c67fd74a574bd3e0f0c345ec98867998",
          "sha256": "b3c4bc837aa6e9226b516becdb2c2c9a4037c1a9c9efc2412131eb7e52f38b15"
        },
        "downloads": -1,
        "filename": "radiant-voices-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c67fd74a574bd3e0f0c345ec98867998",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 55892,
        "upload_time": "2017-04-03T01:18:13",
        "upload_time_iso_8601": "2017-04-03T01:18:13.783422Z",
        "url": "https://files.pythonhosted.org/packages/cd/c1/ece1113611d191c57d45539eb4a40ed95d60e536e3d4ab556ee01ccceb01/radiant-voices-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccf806a015f47d0fee1ef4f7a3de595538d6e07860c3f2d1c894261cd57d5781",
          "md5": "427ddfa2bf194618c9489d04a4a71c32",
          "sha256": "f285c7f93419138307c9d260c88bf619ac80e276794745c2674141753ab25d62"
        },
        "downloads": -1,
        "filename": "radiant-voices-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "427ddfa2bf194618c9489d04a4a71c32",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 56467,
        "upload_time": "2017-04-18T16:07:16",
        "upload_time_iso_8601": "2017-04-18T16:07:16.528394Z",
        "url": "https://files.pythonhosted.org/packages/cc/f8/06a015f47d0fee1ef4f7a3de595538d6e07860c3f2d1c894261cd57d5781/radiant-voices-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51c254e87ca8f703d11a4d7439fdc413f9a182968a6f658f0e9561613f4b9d14",
          "md5": "f548dfd565f8699aaf87c8315ace0bd2",
          "sha256": "2ebd905efc36a5b8588ed7340c96d22d345e460a1ae470a76f0f2f6828d0a744"
        },
        "downloads": -1,
        "filename": "radiant_voices-0.4.0.dev1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f548dfd565f8699aaf87c8315ace0bd2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 75021,
        "upload_time": "2018-03-11T16:48:21",
        "upload_time_iso_8601": "2018-03-11T16:48:21.715719Z",
        "url": "https://files.pythonhosted.org/packages/51/c2/54e87ca8f703d11a4d7439fdc413f9a182968a6f658f0e9561613f4b9d14/radiant_voices-0.4.0.dev1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0d4c58a1ed8b64e33bd6a35fc28467ab671e29fb050520101a642125251f3c8",
          "md5": "c1a13b31b2c99e9f02f681a371b62156",
          "sha256": "79619b7885a9c510d1f252d69725a86a9d72fd722eda3fdbf9c3f4a4d93e04aa"
        },
        "downloads": -1,
        "filename": "radiant-voices-0.4.0.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "c1a13b31b2c99e9f02f681a371b62156",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2178097,
        "upload_time": "2018-03-11T16:48:23",
        "upload_time_iso_8601": "2018-03-11T16:48:23.967237Z",
        "url": "https://files.pythonhosted.org/packages/d0/d4/c58a1ed8b64e33bd6a35fc28467ab671e29fb050520101a642125251f3c8/radiant-voices-0.4.0.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0.dev2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd7e5835c0967fa2580f141d0c35bd4005274407c63f2e29e4ce2b742a9be4b8",
          "md5": "4fb417846c5979bcb31f222b4b5dbc11",
          "sha256": "1da25ad2b8e4b7d79e474d041337e02e87316e4c9629fc5f9060790b771ddbe7"
        },
        "downloads": -1,
        "filename": "radiant_voices-0.4.0.dev2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4fb417846c5979bcb31f222b4b5dbc11",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 75137,
        "upload_time": "2018-03-11T16:55:47",
        "upload_time_iso_8601": "2018-03-11T16:55:47.083137Z",
        "url": "https://files.pythonhosted.org/packages/bd/7e/5835c0967fa2580f141d0c35bd4005274407c63f2e29e4ce2b742a9be4b8/radiant_voices-0.4.0.dev2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3005f23e2e7aaf51b88e5b8c6ecee3e47b50dcf220ddaefe921ae302c01d0071",
          "md5": "22a0f35f6fd1266cff2b38ce8c47bfca",
          "sha256": "d6ac80afce311449c1a44e52c736047325779ec2c7fbe5e2a067a46cebf5ec3f"
        },
        "downloads": -1,
        "filename": "radiant-voices-0.4.0.dev2.tar.gz",
        "has_sig": false,
        "md5_digest": "22a0f35f6fd1266cff2b38ce8c47bfca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 76431,
        "upload_time": "2018-03-11T16:55:48",
        "upload_time_iso_8601": "2018-03-11T16:55:48.220463Z",
        "url": "https://files.pythonhosted.org/packages/30/05/f23e2e7aaf51b88e5b8c6ecee3e47b50dcf220ddaefe921ae302c01d0071/radiant-voices-0.4.0.dev2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b1a6c819ef1e70ae857476e2ff212d7ae6751ea293842af2264918899fa009c",
          "md5": "f5798d0c3db7251ab9e2a86b410b0c2b",
          "sha256": "61448f9c42a09ccc744bfdbc91305523b2e7b31cb77c2981e28037a4b8437e4b"
        },
        "downloads": -1,
        "filename": "radiant-voices-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f5798d0c3db7251ab9e2a86b410b0c2b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 143663,
        "upload_time": "2021-02-27T20:44:01",
        "upload_time_iso_8601": "2021-02-27T20:44:01.038852Z",
        "url": "https://files.pythonhosted.org/packages/8b/1a/6c819ef1e70ae857476e2ff212d7ae6751ea293842af2264918899fa009c/radiant-voices-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a734f3d1fec66a2662d8b3e142712ef3472152b53c5efcbe3fafd9b28de30d0e",
          "md5": "a325645179fd7223b226ef161ef32493",
          "sha256": "703008ed182951ead1f64e8aa4d004b41d57f8dc48f82cc6cf3a72afe6695ac7"
        },
        "downloads": -1,
        "filename": "radiant-voices-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a325645179fd7223b226ef161ef32493",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 144839,
        "upload_time": "2021-03-03T23:10:57",
        "upload_time_iso_8601": "2021-03-03T23:10:57.225979Z",
        "url": "https://files.pythonhosted.org/packages/a7/34/f3d1fec66a2662d8b3e142712ef3472152b53c5efcbe3fafd9b28de30d0e/radiant-voices-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "832136283385f86d0eac7478853cf60c86e622137d85429ac0b626db7523d701",
          "md5": "6f7862107b10e255753b2a5348c50109",
          "sha256": "7a2780ad7ee7f9403002583503945c2362785b472404daff6378d8ca26b41610"
        },
        "downloads": -1,
        "filename": "radiant-voices-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6f7862107b10e255753b2a5348c50109",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 145759,
        "upload_time": "2021-03-30T21:47:21",
        "upload_time_iso_8601": "2021-03-30T21:47:21.830744Z",
        "url": "https://files.pythonhosted.org/packages/83/21/36283385f86d0eac7478853cf60c86e622137d85429ac0b626db7523d701/radiant-voices-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc73f96e4dd11a207f623b09dcad1b83ac0b4e89dd392a629dd0caa3e7960b61",
          "md5": "b2b68a4c6d919f0318cb87203bd38aa2",
          "sha256": "b12eacb036be6d3dad57339bc4d009e416070d2141b41e8312028248e7a6800a"
        },
        "downloads": -1,
        "filename": "radiant-voices-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b2b68a4c6d919f0318cb87203bd38aa2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 147394,
        "upload_time": "2021-04-15T19:55:24",
        "upload_time_iso_8601": "2021-04-15T19:55:24.327388Z",
        "url": "https://files.pythonhosted.org/packages/bc/73/f96e4dd11a207f623b09dcad1b83ac0b4e89dd392a629dd0caa3e7960b61/radiant-voices-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc73f96e4dd11a207f623b09dcad1b83ac0b4e89dd392a629dd0caa3e7960b61",
        "md5": "b2b68a4c6d919f0318cb87203bd38aa2",
        "sha256": "b12eacb036be6d3dad57339bc4d009e416070d2141b41e8312028248e7a6800a"
      },
      "downloads": -1,
      "filename": "radiant-voices-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "b2b68a4c6d919f0318cb87203bd38aa2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 147394,
      "upload_time": "2021-04-15T19:55:24",
      "upload_time_iso_8601": "2021-04-15T19:55:24.327388Z",
      "url": "https://files.pythonhosted.org/packages/bc/73/f96e4dd11a207f623b09dcad1b83ac0b4e89dd392a629dd0caa3e7960b61/radiant-voices-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}