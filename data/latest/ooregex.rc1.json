{
  "info": {
    "author": "Titanium Brain",
    "author_email": "titaniumbrain@vivaldi.net",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<h1 align=\"center\">\nooregex\n</h1>\n\n![GitHub release (latest SemVer)](https://img.shields.io/github/v/release/TitaniumBrain/ooregex?sort=semver)\n![PyPI - Downloads](https://img.shields.io/pypi/dm/ooregex?color=orange&label=%E2%AC%87%20downloads)\n![GitHub](https://img.shields.io/github/license/TitaniumBrain/ooregex?color=blue)\n![Code Style - Black](https://img.shields.io/badge/code%20style-black-000000.svg)\n\nA simple, object oriented, regular expression generator.\n\n`ooregex` is a package aimed at providing a simple syntax for composing\nregular expressions, without having to memorise their syntax.\n\nIt **does not** guarantee that the expressions generated are the most efficient.\n\nIt is assumed that users have some understanding of [regular expressions](https://docs.python.org/3/library/re.html), as there's nothing preventing invalid expressions from being generated.\n\n*This project most likely still needs more testing, so I won't bump it to version 1.0 until I'm sure it's good enough.*\n\n## Installation\n\nYou can install this package using pip with the command\n\n```bash\npip install ooregex\n```\n\n## Usage\n\nThe main purpose of this package is generating regular expressions to be used in other projects, for example, with the built-in re module.\n\nSee the full documentation [here](docs/tutorial.md).\n\nImport the module with:\n\n```python\nimport ooregex\n```\n\nAlternatively, import only the symbols that you need:\n\n```python\nfrom ooregex import (...)\n```\n\nNow let's build an expression for matching a price tag:\n\n```python\nimport re\n\nfrom ooregex import *\n\npattern = Regex(\n    Group(name=\"price\", expression=Regex(\n        DIGIT[1:],\n        Optional(DOT + DIGIT[:]))\n        ),\n    Group(name=\"currency\", expression=\n        AnyOf(\"$£€\")\n        ),\n)\n# (?P<price>\\d+(?:\\.\\d*)?)(?P<currency>[$£€])\n\ntest_str = \"Sales! Everything for 9.99£!\"\n\nprice_tag = re.search(str(pattern), test_str)\n\nif price_tag is not None:\n    price = price_tag.group(\"price\")\n    currency = price_tag.group(\"currency\")\n\n    print(price, currency)\n    # 9.99 £\n```\n\nLet's examine the pattern:\n\nWe have 2 groups:\n* a group named \"price\" consisting of:\n    * one or more digits\n    * optionally:\n        * a dot\n        * zero or more digits\n* a group named \"currency\" consisting of:\n    * any character from \"$£€\"\n\nLook how much clearer it is compared to the generated string:\n`(?P<price>\\d+(?:\\.\\d*)?)(?P<currency>[$£€])`\n\n## Report a bug\n\nIf you find a bug, you can [open an issue](https://github.com/TitaniumBrain/ooregex/issues) or [email me](mailto:titaniumbrain@vivaldi.net?subject=(ooregex)%20Bug%20Report).\n\n\n## License\n\nThis package is available under the [MIT license](https://choosealicense.com/licenses/mit/).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/TitaniumBrain/ooregex",
    "keywords": "regex,object oriented",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ooregex",
    "package_url": "https://pypi.org/project/ooregex/",
    "platform": null,
    "project_url": "https://pypi.org/project/ooregex/",
    "project_urls": {
      "Documentation": "https://github.com/TitaniumBrain/ooregex/docs/",
      "Homepage": "https://github.com/TitaniumBrain/ooregex"
    },
    "release_url": "https://pypi.org/project/ooregex/0.2.0/",
    "requires_dist": null,
    "requires_python": ">=3.7,<4.0",
    "summary": "A simple, object-oriented, regular expression generator.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15904582,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09d387973c49c610c317e8f6390aa5877a976dd24b6ffa5020f804035bfb456a",
          "md5": "b8e902e869b1584cf3f2d8cd7477de73",
          "sha256": "8249c89068d59c28f82f28f3be067ae0b56b173b483432386497e7e4f71ada8c"
        },
        "downloads": -1,
        "filename": "ooregex-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b8e902e869b1584cf3f2d8cd7477de73",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 10578,
        "upload_time": "2022-11-27T14:03:20",
        "upload_time_iso_8601": "2022-11-27T14:03:20.212771Z",
        "url": "https://files.pythonhosted.org/packages/09/d3/87973c49c610c317e8f6390aa5877a976dd24b6ffa5020f804035bfb456a/ooregex-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11bf8fbe3f72d3fd36b6802cdd87c3e51dfe7de37b24c9a26b20390b782d6834",
          "md5": "a0b2d2bfc0ed77dcaff8b06f00ada189",
          "sha256": "6d48ff36b58f62846e9ef5072faf642e66a192c86d0ba7e553aebda575df566d"
        },
        "downloads": -1,
        "filename": "ooregex-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a0b2d2bfc0ed77dcaff8b06f00ada189",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 11557,
        "upload_time": "2022-11-27T14:03:21",
        "upload_time_iso_8601": "2022-11-27T14:03:21.851890Z",
        "url": "https://files.pythonhosted.org/packages/11/bf/8fbe3f72d3fd36b6802cdd87c3e51dfe7de37b24c9a26b20390b782d6834/ooregex-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "09d387973c49c610c317e8f6390aa5877a976dd24b6ffa5020f804035bfb456a",
        "md5": "b8e902e869b1584cf3f2d8cd7477de73",
        "sha256": "8249c89068d59c28f82f28f3be067ae0b56b173b483432386497e7e4f71ada8c"
      },
      "downloads": -1,
      "filename": "ooregex-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b8e902e869b1584cf3f2d8cd7477de73",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 10578,
      "upload_time": "2022-11-27T14:03:20",
      "upload_time_iso_8601": "2022-11-27T14:03:20.212771Z",
      "url": "https://files.pythonhosted.org/packages/09/d3/87973c49c610c317e8f6390aa5877a976dd24b6ffa5020f804035bfb456a/ooregex-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "11bf8fbe3f72d3fd36b6802cdd87c3e51dfe7de37b24c9a26b20390b782d6834",
        "md5": "a0b2d2bfc0ed77dcaff8b06f00ada189",
        "sha256": "6d48ff36b58f62846e9ef5072faf642e66a192c86d0ba7e553aebda575df566d"
      },
      "downloads": -1,
      "filename": "ooregex-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a0b2d2bfc0ed77dcaff8b06f00ada189",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 11557,
      "upload_time": "2022-11-27T14:03:21",
      "upload_time_iso_8601": "2022-11-27T14:03:21.851890Z",
      "url": "https://files.pythonhosted.org/packages/11/bf/8fbe3f72d3fd36b6802cdd87c3e51dfe7de37b24c9a26b20390b782d6834/ooregex-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}