{
  "info": {
    "author": "FactSet Research Systems",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![FactSet](https://raw.githubusercontent.com/factset/enterprise-sdk/main/docs/images/factset-logo.svg)](https://www.factset.com)\n\n# FactSet Concordance client library for Python\n\n[![PyPi](https://img.shields.io/pypi/v/fds.sdk.FactSetConcordance)](https://pypi.org/project/fds.sdk.FactSetConcordance/)\n[![Apache-2 license](https://img.shields.io/badge/license-Apache2-brightgreen.svg)](https://www.apache.org/licenses/LICENSE-2.0)\n\nThe FactSet Concordance API provides the ability to programmatically look up several types of entities by their name and other attributes. It attempts to match attributes that you supply for the entity and returns as many match candidates as it can find. The result is a \\\"concorded\\\" FactSet Entity Permanent identifier.  The Entity Identifier can then be used as input throughout FactSet's Content soultions, such as Content APIs and Standard DataFeeds.<p> There are two types of workflows supported in the API. The first workflow type follows traditional API conventions in that a request is accepted and a response is returned synchronously. The second workflow type involves a background task. With this workflow, a task is created for uploading a set of queries, and then the client polls for the task to complete. Once the task has completed, the client retrieves the concordance results throught the decisions endpoint.</p>\n\n\nThis Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:\n\n- API version: 2.5.0\n- Package version: 0.21.5\n- Build package: org.openapitools.codegen.languages.PythonClientCodegen\n\n## Requirements\n\n* Python >= 3.7\n\n## Installation\n\n### Poetry\n\n```shell\npoetry add fds.sdk.utils fds.sdk.FactSetConcordance\n```\n\n### pip\n\n```shell\npip install fds.sdk.utils fds.sdk.FactSetConcordance\n```\n\n## Usage\n\n1. [Generate authentication credentials](../../../../README.md#authentication).\n2. Setup Python environment.\n   1. Install and activate python 3.7+. If you're using [pyenv](https://github.com/pyenv/pyenv):\n\n      ```sh\n      pyenv install 3.9.7\n      pyenv shell 3.9.7\n      ```\n\n   2. (optional) [Install poetry](https://python-poetry.org/docs/#installation).\n3. [Install dependencies](#installation).\n4. Run the following:\n\n```python\nfrom fds.sdk.utils.authentication import ConfidentialClient\n\nimport fds.sdk.FactSetConcordance\nfrom fds.sdk.FactSetConcordance.api import entity_match_api\nfrom fds.sdk.FactSetConcordance.models import *\nfrom dateutil.parser import parse as dateutil_parser\nfrom pprint import pprint\n\n# See configuration.py for a list of all supported configuration parameters.\n\n# Examples for each supported authentication method are below,\n# choose one that satisfies your use case.\n\n# (Preferred) OAuth 2.0: FactSetOAuth2\n# See https://github.com/FactSet/enterprise-sdk#oauth-20\n# for information on how to create the app-config.json file\n# See https://github.com/FactSet/enterprise-sdk-utils-python#authentication\n# for more information on using the ConfidentialClient class\nconfiguration = fds.sdk.FactSetConcordance.Configuration(\n    fds_oauth_client=ConfidentialClient('/path/to/app-config.json')\n)\n\n# Basic authentication: FactSetApiKey\n# See https://github.com/FactSet/enterprise-sdk#api-key\n# for information how to create an API key\n# configuration = fds.sdk.FactSetConcordance.Configuration(\n#     username='USERNAME-SERIAL',\n#     password='API-KEY'\n# )\n\n# Enter a context with an instance of the API client\nwith fds.sdk.FactSetConcordance.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = entity_match_api.EntityMatchApi(api_client)\n    name = \"FactSet\" # str | Name of Entity to match.\n    country = \"US\" # str | ISO2 country code corresponding to the entity name that is used when evaluating candidates for a match. For a list of ISO2 Country codes, visit [OA 8754](https://my.apps.factset.com/oa/pages/8754). (optional)\n    state = \"CT\" # str | Two-character state code corresponding to the entity name that is used when evaluating candidates for a match. Currently, only US state codes are supported. (optional)\n    url = \"url_example\" # str | URL corresponding to the entity name that is used when evaluating candidates for a match. (optional)\n    include_entity_type = [\n        \"PUB\",\n    ] # [str] | Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Only candidates with an entity type specified will be considered for the final match result. Multiple types can be entered separated by commas.   |Entity Type Code|Entity Type Description|Entity Type Code|Entity Type Description|   |---|---|---|---|   |ABS|Asset-Backed||MED|Broadcast Call Sign|   |BAS|Business Association (JP)||MUC|Mutual Fd-Closed End|   |CAC|Consolidated Accounting||MUE|Mutual Fd-ETF|   |CMD|Commodity||MUT|Mutual Fd-Open End|   |COL|College/University||NPO|Non-Profit Organization|   |CUR|Currency||OPD|Operating Division|   |ESP|Emp Stk Ownership Plan||OTH|Other|   |EXT|Extinct||PEF|Pension Fund|   |FAF|Family of Fds (VC/Pvt EQ)||PRO|Real Property|   |FND|Foundation/Endowment||PUB|Public Company|   |FNS|Financing Subsidiary/SPE||PVF|Private Eq Fd/Alt Invt|   |FRX|ForEx||PVT|Private Company|   |GOV|Government||SOV|Sovereign Wealth Fund|   |HED|Hedge Fund||SUB|Subsidiary|   |HOL|Holding Company||TRU|Trust/Trustee|   |IDX|Index||UMB|Umbrella Fund|   |VEN|Venture Capital Fund||JVT|Joint Venture|  (optional)\n    exclude_entity_type = [\n        \"EXT\",\n    ] # [str] | Three-character FactSet entity type code used to filter candidates in order to determine the final match result. Candidates with an entity type specified will *not* be considered for the final match result. Multiple types can be entered separated by commas.   |Entity Type Code|Entity Type Description|Entity Type Code|Entity Type Description|   |---|---|---|---| |ABS|Asset-Backed||MED|Broadcast Call Sign| |BAS|Business Association (JP)||MUC|Mutual Fd-Closed End| |CAC|Consolidated Accounting||MUE|Mutual Fd-ETF| |CMD|Commodity||MUT|Mutual Fd-Open End| |COL|College/University||NPO|Non-Profit Organization| |CUR|Currency||OPD|Operating Division| |ESP|Emp Stk Ownership Plan||OTH|Other| |EXT|Extinct||PEF|Pension Fund| |FAF|Family of Fds (VC/Pvt EQ)||PRO|Real Property| |FND|Foundation/Endowment||PUB|Public Company| |FNS|Financing Subsidiary/SPE||PVF|Private Eq Fd/Alt Invt| |FRX|ForEx||PVT|Private Company| |GOV|Government||SOV|Sovereign Wealth Fund| |HED|Hedge Fund||SUB|Subsidiary| |HOL|Holding Company||TRU|Trust/Trustee| |IDX|Index||UMB|Umbrella Fund| |VEN|Venture Capital Fund||JVT|Joint Venture|  (optional)\n    include_entity_sub_type = [\n        \"PR\",\n    ] # [str] | Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Only candidates with an entity subtype specified will be considered for the final match result. Multiple types can be entered separated by commas.   |Entity Subtype Code|Entity Subtype Description|Entity Subtype Code|Entity Subtype Description|   |---|---|---|---|   |AR|Arbitrage|IC|Investment Company|   |BM|Bank Investment Division|IN|Insurance Company|   |BR|Broker|MF|Mutual Fund Manager|   |CP|Corporate|ML|Master Ltd Part|   |CU|Custodial|MM|Market Maker|   |FF|Fund of Funds Manager|PB|Private Banking/Wealth Mgmt|   |FH|Fund of Hedge Funds Manager|PF|Pension Fund Manager|   |FO|Foundation/Endowment Manager|PP|Real Estate Manager|   |FS|Fund Distributor|RE|Research Firm|   |FU|Fund|SB|Subsidiary Branch|   |FY|Family Office|ST|Stock Borrowing/Lending|   |GV|Govt (Fed/Local/Agency)|SV|Sovereign Wealth Manager|   |HF|Hedge Fund Manager|VC|Venture Capital/Pvt Equity|   |IA|Investment Adviser|   |IB|Investment Banking|  (optional)\n    exclude_entity_sub_type = [\n        \"HF\",\n    ] # [str] | Two-character FactSet entity subtype code used to filter candidates in order to determine the final match result. Candidates with an entity subtype specified will not be considered for the final match result. Multiple types can be entered separated by commas. |Entity Subtype Code|Entity Subtype Description|Entity Subtype Code|Entity Subtype Description| |---|---|---|---| |AR|Arbitrage|IC|Investment Company| |BM|Bank Investment Division|IN|Insurance Company| |BR|Broker|MF|Mutual Fund Manager| |CP|Corporate|ML|Master Ltd Part| |CU|Custodial|MM|Market Maker| |FF|Fund of Funds Manager|PB|Private Banking/Wealth Mgmt| |FH|Fund of Hedge Funds Manager|PF|Pension Fund Manager| |FO|Foundation/Endowment Manager|PP|Real Estate Manager| |FS|Fund Distributor|RE|Research Firm| |FU|Fund|SB|Subsidiary Branch| |FY|Family Office|ST|Stock Borrowing/Lending| |GV|Govt (Fed/Local/Agency)|SV|Sovereign Wealth Manager| |HF|Hedge Fund Manager|VC|Venture Capital/Pvt Equity| |IA|Investment Adviser| |IB|Investment Banking|  (optional)\n    include_parent = False # bool | Flag to include parent entities in the list of candidates. This parameter does not influence the match result. (optional) if omitted the server will use the default value of False\n    bic = \"bic_example\" # str | Input identifiers for the BICCode - Bank Indentification Code symbol Type. (optional)\n    bbg_ticker = \"bbgTicker_example\" # str | Input identifiers for the Bloomberg Listing and Regional Ticker symbol Type (optional)\n    cik = \"cik_example\" # str | Input identifiers for the CIK - Edgar Central Index Keys symbol type (optional)\n    crd = \"crd_example\" # str | Input identifiers for the CRD - Central Registration Depository symbol type (optional)\n    cusip = \"cusip_example\" # str | Input identifiers for the CUSIP symbol type (optional)\n    duns = \"duns_example\" # str | Input identifiers for the DUNS - Dun & Bradstreet Data Universal Numbering System symbol type (optional)\n    ein = \"ein_example\" # str | Input identifiers for the EIN - Employer Identification Number symbol type (optional)\n    rssd = \"rssd_example\" # str | Input identifiers for the RSSD - Federal Reserve RSSD symbol type (optional)\n    fitch = \"fitch_example\" # str | Input identifiers for the Fitch - Fitch Ratings symbol type (optional)\n    isin = \"isin_example\" # str | Input identifiers for the ISIN - International Securities Identification Number symbol type (optional)\n    lei = \"lei_example\" # str | Input identifiers for the LEI - Legal Entity Identifier symbol type (optional)\n    bbg_figi = \"bbgFigi_example\" # str | Input identifiers for the Bloomberg Listing/Regional/Security ID symbol type (optional)\n    md = \"md_example\" # str | Input identifiers for the Moody's Ratings Identifier type (optional)\n    ticker = \"ticker_example\" # str | Input identifiers for the Price Ticker symbol type (optional)\n    spr = \"spr_example\" # str | Input identifiers for the S&PRating - S&P Ratings Identifier symbol type (optional)\n    sedol = \"sedol_example\" # str | Input identifiers for the SEDOL symbol type (optional)\n    ticker_exchange = \"tickerExchange_example\" # str | Input identifiers for the TickerExchange (optional)\n    ticker_region = \"TickerRegion\" # str | Input identifiers for the TickerRegion. (optional)\n    ukch = \"UKCompanyHouse\" # str | Input identifiers for the UKCH - UK Company House symbol type (optional)\n    valoren = \"valoren_example\" # str | Input identifiers for the Valoren (\\\"Valor\\\") symbol type (optional)\n    wkn = \"wkn_example\" # str | Input identifiers for the WKN - German Securities symbol type (optional)\n\n    try:\n        # Get Entity Candidates and Matches for a single name and attributes.\n        api_response = api_instance.get_entity_match(name, country=country, state=state, url=url, include_entity_type=include_entity_type, exclude_entity_type=exclude_entity_type, include_entity_sub_type=include_entity_sub_type, exclude_entity_sub_type=exclude_entity_sub_type, include_parent=include_parent, bic=bic, bbg_ticker=bbg_ticker, cik=cik, crd=crd, cusip=cusip, duns=duns, ein=ein, rssd=rssd, fitch=fitch, isin=isin, lei=lei, bbg_figi=bbg_figi, md=md, ticker=ticker, spr=spr, sedol=sedol, ticker_exchange=ticker_exchange, ticker_region=ticker_region, ukch=ukch, valoren=valoren, wkn=wkn)\n        pprint(api_response)\n    except fds.sdk.FactSetConcordance.ApiException as e:\n        print(\"Exception when calling EntityMatchApi->get_entity_match: %s\\n\" % e)\n\n    # Get response, http status code and response headers\n    # try:\n    #     # Get Entity Candidates and Matches for a single name and attributes.\n    #     api_response, http_status_code, response_headers = api_instance.get_entity_match_with_http_info(name, country=country, state=state, url=url, include_entity_type=include_entity_type, exclude_entity_type=exclude_entity_type, include_entity_sub_type=include_entity_sub_type, exclude_entity_sub_type=exclude_entity_sub_type, include_parent=include_parent, bic=bic, bbg_ticker=bbg_ticker, cik=cik, crd=crd, cusip=cusip, duns=duns, ein=ein, rssd=rssd, fitch=fitch, isin=isin, lei=lei, bbg_figi=bbg_figi, md=md, ticker=ticker, spr=spr, sedol=sedol, ticker_exchange=ticker_exchange, ticker_region=ticker_region, ukch=ukch, valoren=valoren, wkn=wkn)\n    #     pprint(api_response)\n    #     pprint(http_status_code)\n    #     pprint(response_headers)\n    # except fds.sdk.FactSetConcordance.ApiException as e:\n    #     print(\"Exception when calling EntityMatchApi->get_entity_match: %s\\n\" % e)\n\n    # Get response asynchronous\n    # try:\n    #     # Get Entity Candidates and Matches for a single name and attributes.\n    #     async_result = api_instance.get_entity_match_async(name, country=country, state=state, url=url, include_entity_type=include_entity_type, exclude_entity_type=exclude_entity_type, include_entity_sub_type=include_entity_sub_type, exclude_entity_sub_type=exclude_entity_sub_type, include_parent=include_parent, bic=bic, bbg_ticker=bbg_ticker, cik=cik, crd=crd, cusip=cusip, duns=duns, ein=ein, rssd=rssd, fitch=fitch, isin=isin, lei=lei, bbg_figi=bbg_figi, md=md, ticker=ticker, spr=spr, sedol=sedol, ticker_exchange=ticker_exchange, ticker_region=ticker_region, ukch=ukch, valoren=valoren, wkn=wkn)\n    #     api_response = async_result.get()\n    #     pprint(api_response)\n    # except fds.sdk.FactSetConcordance.ApiException as e:\n    #     print(\"Exception when calling EntityMatchApi->get_entity_match: %s\\n\" % e)\n\n    # Get response, http status code and response headers asynchronous\n    # try:\n    #     # Get Entity Candidates and Matches for a single name and attributes.\n    #     async_result = api_instance.get_entity_match_with_http_info_async(name, country=country, state=state, url=url, include_entity_type=include_entity_type, exclude_entity_type=exclude_entity_type, include_entity_sub_type=include_entity_sub_type, exclude_entity_sub_type=exclude_entity_sub_type, include_parent=include_parent, bic=bic, bbg_ticker=bbg_ticker, cik=cik, crd=crd, cusip=cusip, duns=duns, ein=ein, rssd=rssd, fitch=fitch, isin=isin, lei=lei, bbg_figi=bbg_figi, md=md, ticker=ticker, spr=spr, sedol=sedol, ticker_exchange=ticker_exchange, ticker_region=ticker_region, ukch=ukch, valoren=valoren, wkn=wkn)\n    #     api_response, http_status_code, response_headers = async_result.get()\n    #     pprint(api_response)\n    #     pprint(http_status_code)\n    #     pprint(response_headers)\n    # except fds.sdk.FactSetConcordance.ApiException as e:\n    #     print(\"Exception when calling EntityMatchApi->get_entity_match: %s\\n\" % e)\n\n```\n\n### Using Pandas\n\nTo convert an API response to a Pandas DataFrame, it is necessary to transform it first to a dictionary.\n```python\nimport pandas as pd\n\nresponse_dict = api_response.to_dict()['data']\n\nsimple_json_response = pd.DataFrame(response_dict)\nnested_json_response = pd.json_normalize(response_dict)\n```\n\n### Debugging\n\nThe SDK uses the standard library [`logging`](https://docs.python.org/3/library/logging.html#module-logging) module.\n\nSetting `debug` to `True` on an instance of the `Configuration` class sets the log-level of related packages to `DEBUG` \nand enables additional logging in Pythons [HTTP Client](https://docs.python.org/3/library/http.client.html).\n\n**Note**: This prints out sensitive information (e.g. the full request and response). Use with care.\n\n```python\nimport logging\nimport fds.sdk.FactSetConcordance\n\nlogging.basicConfig(level=logging.DEBUG)\n\nconfiguration = fds.sdk.FactSetConcordance.Configuration(...)\nconfiguration.debug = True\n```\n\n\n## Documentation for API Endpoints\n\nAll URIs are relative to *https://api.factset.com/content*\n\nClass | Method | HTTP request | Description\n------------ | ------------- | ------------- | -------------\n*EntityMatchApi* | [**get_entity_match**](docs/EntityMatchApi.md#get_entity_match) | **GET** /factset-concordance/v2/entity-match | Get Entity Candidates and Matches for a single name and attributes.\n*EntityMatchApi* | [**get_entity_match_for_list**](docs/EntityMatchApi.md#get_entity_match_for_list) | **POST** /factset-concordance/v2/entity-match | Get a list of Entity Candidates and Matches for a requested list of up to 25 names and attributes.\n*EntityMatchBulkApi* | [**get_entity_decisions**](docs/EntityMatchBulkApi.md#get_entity_decisions) | **GET** /factset-concordance/v2/entity-decisions | Get the decisions of matches for the requested taskId.\n*EntityMatchBulkApi* | [**get_entity_task_for_list**](docs/EntityMatchBulkApi.md#get_entity_task_for_list) | **POST** /factset-concordance/v2/entity-task | Input a file with names and attributes, creating a taskId.\n*EntityMatchBulkApi* | [**get_entity_task_status**](docs/EntityMatchBulkApi.md#get_entity_task_status) | **GET** /factset-concordance/v2/entity-task-status | Gets the status of the requested taskId or all tasks for a User\n*MappingsApi* | [**get_entity_mapping_delete_for_list**](docs/MappingsApi.md#get_entity_mapping_delete_for_list) | **POST** /factset-concordance/v2/entity-mapping-delete | Deletes mapping specified by the client.\n*MappingsApi* | [**get_entity_mapping_for_list**](docs/MappingsApi.md#get_entity_mapping_for_list) | **POST** /factset-concordance/v2/entity-mapping | Saves a single-mapping specified by the client.\n*MappingsApi* | [**get_entity_universe**](docs/MappingsApi.md#get_entity_universe) | **GET** /factset-concordance/v2/entity-universe | Retrieve all saved mappings within a requested universe\n*MappingsApi* | [**get_entity_universe_for_list**](docs/MappingsApi.md#get_entity_universe_for_list) | **POST** /factset-concordance/v2/entity-universe | Retrieve all saved mappings within a requested universe or large list of client ids\n*PeopleMappingApi* | [**get_people_mapping_delete_for_list**](docs/PeopleMappingApi.md#get_people_mapping_delete_for_list) | **POST** /factset-concordance/v2/people-mapping-delete | Deletes mapping specified by the client.\n*PeopleMappingApi* | [**get_people_mapping_for_list**](docs/PeopleMappingApi.md#get_people_mapping_for_list) | **POST** /factset-concordance/v2/people-mapping | Saves a single-mapping specified by the client.\n*PeopleMappingApi* | [**get_people_universe**](docs/PeopleMappingApi.md#get_people_universe) | **GET** /factset-concordance/v2/people-universe | Retrieve all saved mappings within a requested universe\n*PeopleMappingApi* | [**get_people_universe_for_list**](docs/PeopleMappingApi.md#get_people_universe_for_list) | **POST** /factset-concordance/v2/people-universe | Retrieve all saved mappings within a requested universe or large list of client ids\n*PeopleMatchApi* | [**get_people_match**](docs/PeopleMatchApi.md#get_people_match) | **GET** /factset-concordance/v2/people-match | Find potential people matches given a person&#39;s name.People matches can be retrieved using person&#39;s name and other attributes like firstname, middlename and lastname.\n*PeopleMatchApi* | [**get_people_match_for_list**](docs/PeopleMatchApi.md#get_people_match_for_list) | **POST** /factset-concordance/v2/people-match | Find potential people matches given a person&#39;s name.\n*PeopleMatchBulkApi* | [**get_people_decisions**](docs/PeopleMatchBulkApi.md#get_people_decisions) | **GET** /factset-concordance/v2/people-decisions | Get the decisions of matches for the requested taskId.\n*PeopleMatchBulkApi* | [**get_people_task_for_list**](docs/PeopleMatchBulkApi.md#get_people_task_for_list) | **POST** /factset-concordance/v2/people-task | Create a People Concordance Task.\n*PeopleMatchBulkApi* | [**get_people_task_status**](docs/PeopleMatchBulkApi.md#get_people_task_status) | **GET** /factset-concordance/v2/people-task-status | Get the Status of the People Tasks.\n*SnowflakeApi* | [**get_snowflake_entity_match_for_list**](docs/SnowflakeApi.md#get_snowflake_entity_match_for_list) | **POST** /factset-concordance/v2/snowflake-entity-match | Perform an entity search and return a snowflake-friendly response. Up to 25 Names per request.\n*UniversesApi* | [**get_entity_universe_statistics**](docs/UniversesApi.md#get_entity_universe_statistics) | **GET** /factset-concordance/v2/entity-universe-statistics | Get statistics on a given universe\n*UniversesApi* | [**get_universe_for_list**](docs/UniversesApi.md#get_universe_for_list) | **POST** /factset-concordance/v2/universe | Create a new universe\n*UniversesApi* | [**get_universe_statistics**](docs/UniversesApi.md#get_universe_statistics) | **GET** /factset-concordance/v2/universe-statistics | Get statistics on a given universe\n*UniversesApi* | [**get_universes**](docs/UniversesApi.md#get_universes) | **GET** /factset-concordance/v2/universes | Fetch metadata for universes\n*UniversesApi* | [**get_update_universe_for_list**](docs/UniversesApi.md#get_update_universe_for_list) | **POST** /factset-concordance/v2/update-universe | Update metadata for an existing universe\n\n\n## Documentation For Models\n\n - [CreateUniverseRequest](docs/CreateUniverseRequest.md)\n - [EntityDecisionsResponse](docs/EntityDecisionsResponse.md)\n - [EntityMapping](docs/EntityMapping.md)\n - [EntityMappingDeleteRequest](docs/EntityMappingDeleteRequest.md)\n - [EntityMappingDeleteResponse](docs/EntityMappingDeleteResponse.md)\n - [EntityMappingRequest](docs/EntityMappingRequest.md)\n - [EntityMappingResponse](docs/EntityMappingResponse.md)\n - [EntityMatch](docs/EntityMatch.md)\n - [EntityMatchRequest](docs/EntityMatchRequest.md)\n - [EntityMatchRequestInput](docs/EntityMatchRequestInput.md)\n - [EntityMatchesResponse](docs/EntityMatchesResponse.md)\n - [EntityResponse](docs/EntityResponse.md)\n - [EntityTaskResponse](docs/EntityTaskResponse.md)\n - [EntityTaskStatus](docs/EntityTaskStatus.md)\n - [EntityTaskStatusResponse](docs/EntityTaskStatusResponse.md)\n - [EntityUniverseRequest](docs/EntityUniverseRequest.md)\n - [EntityUniverseResponse](docs/EntityUniverseResponse.md)\n - [EntityUniverseStatisticsResponse](docs/EntityUniverseStatisticsResponse.md)\n - [ErrorResponse](docs/ErrorResponse.md)\n - [ErrorResponseSubErrors](docs/ErrorResponseSubErrors.md)\n - [MapStatus](docs/MapStatus.md)\n - [PeopleDecisions](docs/PeopleDecisions.md)\n - [PeopleDecisionsResponse](docs/PeopleDecisionsResponse.md)\n - [PeopleMapping](docs/PeopleMapping.md)\n - [PeopleMappingDeleteResponse](docs/PeopleMappingDeleteResponse.md)\n - [PeopleMappingRequest](docs/PeopleMappingRequest.md)\n - [PeopleMappingResponse](docs/PeopleMappingResponse.md)\n - [PeopleMatch](docs/PeopleMatch.md)\n - [PeopleMatchRequest](docs/PeopleMatchRequest.md)\n - [PeopleMatchRequestInput](docs/PeopleMatchRequestInput.md)\n - [PeopleMatchesResponse](docs/PeopleMatchesResponse.md)\n - [PeopleTask](docs/PeopleTask.md)\n - [PeopleTaskResponse](docs/PeopleTaskResponse.md)\n - [PeopleTaskStatus](docs/PeopleTaskStatus.md)\n - [PeopleTaskStatusResponse](docs/PeopleTaskStatusResponse.md)\n - [PeopleUniverseRequest](docs/PeopleUniverseRequest.md)\n - [PeopleUniverseResponse](docs/PeopleUniverseResponse.md)\n - [SnowflakeEntityMatchRequest](docs/SnowflakeEntityMatchRequest.md)\n - [SnowflakeEntityMatchResponse](docs/SnowflakeEntityMatchResponse.md)\n - [Universe](docs/Universe.md)\n - [UniverseMeta](docs/UniverseMeta.md)\n - [UniverseMetaResponse](docs/UniverseMetaResponse.md)\n - [UniverseStatistics](docs/UniverseStatistics.md)\n - [UniverseStatisticsResponse](docs/UniverseStatisticsResponse.md)\n - [UniversesResponse](docs/UniversesResponse.md)\n - [UpdateUniverseRequest](docs/UpdateUniverseRequest.md)\n\n\n## Documentation For Authorization\n\n\n## FactSetApiKey\n\n- **Type**: HTTP basic authentication\n\n\n## FactSetOAuth2\n\n- **Type**: OAuth\n- **Flow**: application\n- **Authorization URL**: \n- **Scopes**: N/A\n\n\n## Notes for Large OpenAPI documents\nIf the OpenAPI document is large, imports in fds.sdk.FactSetConcordance.apis and fds.sdk.FactSetConcordance.models may fail with a\nRecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions:\n\nSolution 1:\nUse specific imports for apis and models like:\n- `from fds.sdk.FactSetConcordance.api.default_api import DefaultApi`\n- `from fds.sdk.FactSetConcordance.model.pet import Pet`\n\nSolution 2:\nBefore importing the package, adjust the maximum recursion limit as shown below:\n```\nimport sys\nsys.setrecursionlimit(1500)\nimport fds.sdk.FactSetConcordance\nfrom fds.sdk.FactSetConcordance.apis import *\nfrom fds.sdk.FactSetConcordance.models import *\n```\n\n## Contributing\n\nPlease refer to the [contributing guide](../../../../CONTRIBUTING.md).\n\n## Copyright\n\nCopyright 2022 FactSet Research Systems Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FactSet/enterprise-sdk/tree/main/code/python/FactSetConcordance/v2",
    "keywords": "FactSet,API,SDK",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fds.sdk.FactSetConcordance",
    "package_url": "https://pypi.org/project/fds.sdk.FactSetConcordance/",
    "platform": null,
    "project_url": "https://pypi.org/project/fds.sdk.FactSetConcordance/",
    "project_urls": {
      "Homepage": "https://github.com/FactSet/enterprise-sdk/tree/main/code/python/FactSetConcordance/v2"
    },
    "release_url": "https://pypi.org/project/fds.sdk.FactSetConcordance/0.21.5/",
    "requires_dist": [
      "urllib3 (>=1.25.3)",
      "python-dateutil",
      "fds.sdk.utils (>=1.0.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "FactSet Concordance client library for Python",
    "version": "0.21.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17016740,
  "releases": {
    "0.20.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "602de09cef630cd384d314439aa3dc92724624b11d0ea829e930f225666a33f5",
          "md5": "53c9d73b2fd67844335f34169b5b4f8e",
          "sha256": "16a3ea6979649b24cc842485932621f1e726929bce9e11bd56703876cc2596b3"
        },
        "downloads": -1,
        "filename": "fds.sdk.FactSetConcordance-0.20.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "53c9d73b2fd67844335f34169b5b4f8e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 159701,
        "upload_time": "2022-05-24T16:05:19",
        "upload_time_iso_8601": "2022-05-24T16:05:19.236616Z",
        "url": "https://files.pythonhosted.org/packages/60/2d/e09cef630cd384d314439aa3dc92724624b11d0ea829e930f225666a33f5/fds.sdk.FactSetConcordance-0.20.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.21.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d8a505b6c69994fed582b8c180787d8db95150d8cf8d8009bc67602dccd7c3c",
          "md5": "f9b1c018766b4fe9c04d81f05b6d8ce7",
          "sha256": "06dedc08f05d2b64e4d6eff0b55183d7172226f064b5ea25306007746648a0eb"
        },
        "downloads": -1,
        "filename": "fds.sdk.FactSetConcordance-0.21.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f9b1c018766b4fe9c04d81f05b6d8ce7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 232590,
        "upload_time": "2022-07-21T13:51:31",
        "upload_time_iso_8601": "2022-07-21T13:51:31.956814Z",
        "url": "https://files.pythonhosted.org/packages/3d/8a/505b6c69994fed582b8c180787d8db95150d8cf8d8009bc67602dccd7c3c/fds.sdk.FactSetConcordance-0.21.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.21.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07d8d5d96a45ed791a59149a7e96dc79ce1b527e7a169f6af26008ad305563fa",
          "md5": "50edd249a07c337f6f63f1b9c83e6d4c",
          "sha256": "d9a87f1e8441c2e8e11114096ec705d9fd71aceff7bd3b0d95f04b92c0c00a12"
        },
        "downloads": -1,
        "filename": "fds.sdk.FactSetConcordance-0.21.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "50edd249a07c337f6f63f1b9c83e6d4c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 232589,
        "upload_time": "2022-08-31T19:37:12",
        "upload_time_iso_8601": "2022-08-31T19:37:12.855372Z",
        "url": "https://files.pythonhosted.org/packages/07/d8/d5d96a45ed791a59149a7e96dc79ce1b527e7a169f6af26008ad305563fa/fds.sdk.FactSetConcordance-0.21.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.21.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f97216ca1bf66afcffba6863722deb33ada67580ac0c7328ef487aff6d9e2349",
          "md5": "f1e9294ddbac05954c555b7f8f545bec",
          "sha256": "9a0f328b83c6baed2a2598e19fd17f6b1a76a25d4b8c66661548ca0a1db50233"
        },
        "downloads": -1,
        "filename": "fds.sdk.FactSetConcordance-0.21.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f1e9294ddbac05954c555b7f8f545bec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 233665,
        "upload_time": "2022-10-24T13:28:09",
        "upload_time_iso_8601": "2022-10-24T13:28:09.421234Z",
        "url": "https://files.pythonhosted.org/packages/f9/72/16ca1bf66afcffba6863722deb33ada67580ac0c7328ef487aff6d9e2349/fds.sdk.FactSetConcordance-0.21.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.21.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cd7d6aa653d9012fc4fcbd07e367a530790963c74dc2beee2e192c0607fb3c7",
          "md5": "5f52d004551d17790ed049b28f076d61",
          "sha256": "60d7e2141b3465b6a853766c65f095a96f3760358715f6a344c2b39e7e2d3b03"
        },
        "downloads": -1,
        "filename": "fds.sdk.FactSetConcordance-0.21.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f52d004551d17790ed049b28f076d61",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 240604,
        "upload_time": "2022-11-03T21:26:40",
        "upload_time_iso_8601": "2022-11-03T21:26:40.088499Z",
        "url": "https://files.pythonhosted.org/packages/4c/d7/d6aa653d9012fc4fcbd07e367a530790963c74dc2beee2e192c0607fb3c7/fds.sdk.FactSetConcordance-0.21.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.21.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b7b3565540ff36a27c0f20969e7d8211a6ba0d7b4fde2bb5dafcd87abbadfef",
          "md5": "d44421db64197fedaf7f2f9ba644a509",
          "sha256": "95e1c4eac151fd3b94c6b32592fc3065061ceae027b45011aed18435b5122e18"
        },
        "downloads": -1,
        "filename": "fds.sdk.FactSetConcordance-0.21.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d44421db64197fedaf7f2f9ba644a509",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 240863,
        "upload_time": "2022-12-13T19:22:46",
        "upload_time_iso_8601": "2022-12-13T19:22:46.607350Z",
        "url": "https://files.pythonhosted.org/packages/7b/7b/3565540ff36a27c0f20969e7d8211a6ba0d7b4fde2bb5dafcd87abbadfef/fds.sdk.FactSetConcordance-0.21.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.21.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69d4eb24522b28ff5734a4fb9bdd759c7b76538de64c840303516e67434666c4",
          "md5": "ec6a30c3c3767ea027a2ecebba543ca6",
          "sha256": "7d8be74fad076816683bb40598cf076a1f004ba68e4d2fbe760e46b325746cb3"
        },
        "downloads": -1,
        "filename": "fds.sdk.FactSetConcordance-0.21.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ec6a30c3c3767ea027a2ecebba543ca6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 241356,
        "upload_time": "2023-02-24T17:24:49",
        "upload_time_iso_8601": "2023-02-24T17:24:49.415727Z",
        "url": "https://files.pythonhosted.org/packages/69/d4/eb24522b28ff5734a4fb9bdd759c7b76538de64c840303516e67434666c4/fds.sdk.FactSetConcordance-0.21.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c80999dc46d3ef585250d818089ddbdd44d4beed132ebd2a5859b5e9322fb5c",
          "md5": "808ce8888e0803a7bd27e302f72afb86",
          "sha256": "fb37dff374bcdf09ca44ea403c2ca0cfc64bd31cdc40e921312ad9c0fa117224"
        },
        "downloads": -1,
        "filename": "fds.sdk.FactSetConcordance-0.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "808ce8888e0803a7bd27e302f72afb86",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 114400,
        "upload_time": "2022-02-02T14:38:37",
        "upload_time_iso_8601": "2022-02-02T14:38:37.886576Z",
        "url": "https://files.pythonhosted.org/packages/7c/80/999dc46d3ef585250d818089ddbdd44d4beed132ebd2a5859b5e9322fb5c/fds.sdk.FactSetConcordance-0.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f669b765357a0089ee5ab4b6d9d0eeb4c933430b5bce93a4bb9e3a3c0f74f23d",
          "md5": "403f0084f3a9c228194024edddb573d1",
          "sha256": "7e371a314935bb4f87c11a31d8a47bbe2bb3ce4f17d557fa9a84d19c6be1bd40"
        },
        "downloads": -1,
        "filename": "fds.sdk.FactSetConcordance-0.8.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "403f0084f3a9c228194024edddb573d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 118316,
        "upload_time": "2022-02-14T21:42:13",
        "upload_time_iso_8601": "2022-02-14T21:42:13.901176Z",
        "url": "https://files.pythonhosted.org/packages/f6/69/b765357a0089ee5ab4b6d9d0eeb4c933430b5bce93a4bb9e3a3c0f74f23d/fds.sdk.FactSetConcordance-0.8.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a263a667dd3c2142d9aed13595a659ed17d45c84957ef2ee99dacd4649d75c3",
          "md5": "f8ac1ed39a2162c76d7bf7193dae3c19",
          "sha256": "94d7fcf24dd7b35145918d29b60a10b9a215b0bad9635be712281101204c08ac"
        },
        "downloads": -1,
        "filename": "fds.sdk.FactSetConcordance-0.8.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f8ac1ed39a2162c76d7bf7193dae3c19",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 122477,
        "upload_time": "2022-05-24T16:05:17",
        "upload_time_iso_8601": "2022-05-24T16:05:17.892966Z",
        "url": "https://files.pythonhosted.org/packages/6a/26/3a667dd3c2142d9aed13595a659ed17d45c84957ef2ee99dacd4649d75c3/fds.sdk.FactSetConcordance-0.8.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0fa296b53535d188f21a481c903593ea4838af7c641895560fb0176400d29c9",
          "md5": "b1e656588bb7828cc86b96c2938e002b",
          "sha256": "2ffa77a574c56d7285eccc305f9d2ddd53cf42882d7c8d74c6471472930f7f62"
        },
        "downloads": -1,
        "filename": "fds.sdk.FactSetConcordance-0.8.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1e656588bb7828cc86b96c2938e002b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 122512,
        "upload_time": "2022-07-21T13:51:30",
        "upload_time_iso_8601": "2022-07-21T13:51:30.711833Z",
        "url": "https://files.pythonhosted.org/packages/a0/fa/296b53535d188f21a481c903593ea4838af7c641895560fb0176400d29c9/fds.sdk.FactSetConcordance-0.8.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "693472c1712b59b7c4f218be5301705c97b982fecb8a92ebc6e8c13e8c440938",
          "md5": "a3c355a3e8ca97c516e7020bf5f8e2a7",
          "sha256": "1c0311ff9ca893e6c660a9d1f669c617589a9f1a90e0d5e207fda1fed27853d7"
        },
        "downloads": -1,
        "filename": "fds.sdk.FactSetConcordance-0.8.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a3c355a3e8ca97c516e7020bf5f8e2a7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 122515,
        "upload_time": "2022-08-31T19:37:11",
        "upload_time_iso_8601": "2022-08-31T19:37:11.558421Z",
        "url": "https://files.pythonhosted.org/packages/69/34/72c1712b59b7c4f218be5301705c97b982fecb8a92ebc6e8c13e8c440938/fds.sdk.FactSetConcordance-0.8.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbe46e6382d5f924b54c0ce6b24af76cf478d65e045ab6dc8b235ffb4ba4cec1",
          "md5": "99e8f00ba3a10f67be519c9eb918ee23",
          "sha256": "f29c37ce280a574b4f5bf2d91df545a2137b3be68a6d99a097bd28aa4aa92a4e"
        },
        "downloads": -1,
        "filename": "fds.sdk.FactSetConcordance-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "99e8f00ba3a10f67be519c9eb918ee23",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 150626,
        "upload_time": "2022-02-02T14:38:39",
        "upload_time_iso_8601": "2022-02-02T14:38:39.341612Z",
        "url": "https://files.pythonhosted.org/packages/db/e4/6e6382d5f924b54c0ce6b24af76cf478d65e045ab6dc8b235ffb4ba4cec1/fds.sdk.FactSetConcordance-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc087a60a90ec22cfd02a941bc7fbd6ba3fc848f18090b4e3d0ad17cd634dc2d",
          "md5": "69d3bb86399e7258545f7026845b3072",
          "sha256": "d188bcb6cdace7bbc36ea520fdc0b450799ad97fdc67f2ed32f2c18198fa32a2"
        },
        "downloads": -1,
        "filename": "fds.sdk.FactSetConcordance-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69d3bb86399e7258545f7026845b3072",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 154695,
        "upload_time": "2022-02-14T21:42:14",
        "upload_time_iso_8601": "2022-02-14T21:42:14.883987Z",
        "url": "https://files.pythonhosted.org/packages/fc/08/7a60a90ec22cfd02a941bc7fbd6ba3fc848f18090b4e3d0ad17cd634dc2d/fds.sdk.FactSetConcordance-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "69d4eb24522b28ff5734a4fb9bdd759c7b76538de64c840303516e67434666c4",
        "md5": "ec6a30c3c3767ea027a2ecebba543ca6",
        "sha256": "7d8be74fad076816683bb40598cf076a1f004ba68e4d2fbe760e46b325746cb3"
      },
      "downloads": -1,
      "filename": "fds.sdk.FactSetConcordance-0.21.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ec6a30c3c3767ea027a2ecebba543ca6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 241356,
      "upload_time": "2023-02-24T17:24:49",
      "upload_time_iso_8601": "2023-02-24T17:24:49.415727Z",
      "url": "https://files.pythonhosted.org/packages/69/d4/eb24522b28ff5734a4fb9bdd759c7b76538de64c840303516e67434666c4/fds.sdk.FactSetConcordance-0.21.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}