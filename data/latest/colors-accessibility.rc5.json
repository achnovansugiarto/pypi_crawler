{
  "info": {
    "author": "Piotr Hryniewicz",
    "author_email": "phryniewicz.dev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<p align=\"center\">\n  <img src=\"colors_accessibility/static/colors_accessibility_logo.svg\" alt=\"Logo\" />\n</p>\n\n<p align=\"center\">\n  <a href=\"/LICENSE\">\n    <img src=\"https://img.shields.io/github/license/phryniewicz/colors-accessibility\" alt=\"MIT License\" />\n  </a>\n  <a href=\"/SIZE\">\n    <img src=\"https://img.shields.io/github/repo-size/phryniewicz/colors-accessibility\" alt=\"Repository Size\" />\n  </a>\n  <a href=\"/ISSUES\">\n    <img src=\"https://img.shields.io/bitbucket/issues/phryniewicz/colors-accessibility\" alt=\"Issues\" />\n  </a>\n  <a href=\"/LANGUAGES\">\n    <img src=\"https://img.shields.io/github/languages/count/phryniewicz/colors-accessibility\" alt=\"Languages\" />\n  </a>\n</p>\n\n# Table of Contents:\n<a name=\"table-of-contents\"></a>\n\n* [Introduction](#introduction)\n* [Overview](#overview)\n* [Installation](#installation)\n* [Usage](#usage)\n  * [Color](#color)\n    * [Input values](#input-values)\n    * [Conversions](#conversions)\n    * [Relative luminance](#relative-luminance)\n    * [Single space representation](#single-space-representation)\n    * [Color representations](#color-representations)\n    * [Values to dictionary](#values-to-dictionary)\n  * [Accessibility processor](#accessibility-processor)\n    * [Contrast ratio](#contrast-ratio)\n    * [WCAG compliant colors representation](#wcag-compliant-colors-representation)\n* [Further improvements](#further-improvements)\n\n\n\n\n# Introduction\n<a name=\"introduction\"></a>\nThis library help to handle different color values inputs in three color spaces: `RGB`, `HSL` and `HEX`.\nThe main functionality is ability to check the contrast between two colors as well adjusting those colors to fit \nWCAG 2.1 specification.\n\n# Overview\n<a name=\"overview\"></a>\n\nThis library provides two main features:\n* A class ***Color*** that represents a color in many \npossible color spaces. This class provides following functionalities:\n  * Validating color values for each color space - using ***Validator*** class.\n  * Processing (formatting) color values for each color space - changing format of values to list, dictionary, as well\n  as normalizing values in appropriate color spaces.\n  * Converting color values between color spaces.\n* A class ***AccessibilityProcessor*** that provides following\nfunctionalities:\n  * Calculating contrast ratio between two colors.\n  * Checking if the contrast between two colors has ratio big enough for levels **AA** and **AAA**, \n  with ration **4.5:1** and **7:1** respectively. \n  * Calculating and getting color that is **AA** or **AAA** level of contrast with the given color - by changing \n  either **foreground** color, **background** color or both.\n\n\n# Installation\n<a name=\"installation\"></a>\nTo install `colors-accessibility` library, run the following command:\n```\npip install colors-accessibility\n```\n`color-accessibility` library does not have any dependencies.\n\n# Usage\n<a name=\"usage\"></a>\n\n## Color\n<a name=\"color\"></a>\n\n***Color*** class currently handles three color spaces: `rgb`, `hsl`, and `hex`.\nThis class can process different type of input values. To initialize a color, following inputs are valid:\n\n### Input values\n<a name=\"input-values\"></a>\n\nFor `rgb` color space:\n\n<div align=\"center\">\n  <img src=\"colors_accessibility/static/rgb_representations.svg\" alt=\"rgb color inputs\" width=75%/>\n</div>\n<details>\n<summary>Code</summary>\n\n```\nfrom colors_accessibility import Color\n\n\n# All representations below are valid and will be processed correctly.\nvalid_rgb_representations = [\n [100, 20, 50], ['100', 20, 50], ['100', '20', '50'], {'red': 200, 'green': 20, 'blue': 50},\n {'r': '50', 'g': 0.2, 'b': 100}\n]\n\ncolors = [\n  Color('rgb', representation) for representation in valid_rgb_representations\n]\n```\n</details>  \n\nFor `hex` color space:\n\n<div align=\"center\">\n  <img src=\"colors_accessibility/static/hex_representations.svg\" alt=\"hex color inputs\" width=75%/>\n</div>\n<details>\n<summary>Code</summary>\n\n```\nfrom colors_accessibility import Color\n\n\n# All representations below are valid and will be processed correctly.\nvalid_hex_representations = [\n '1ad', '#1ad', '1ac4bb', '#1ac4bb', ['1ad'], ['#11aabb'],\n  {'hex': '1ac4ba'}\n]\n\ncolors = [\n  Color('hex', representation) for representation in valid_hex_representations\n]\n```\n</details>\n\nFor `hsl` color space:\n\n<div align=\"center\">\n  <img src=\"colors_accessibility/static/hsl_representations.svg\" alt=\"hsl color inputs\" width=75%/>\n</div>\n<details>\n<summary>Code</summary>\n\n```\nfrom colors_accessibility import Color\n\n\n# All representations below are valid and will be processed correctly.\nvalid_hsl_representations = [\n [120, 0.1, 0.2], ['120', 20, 0.1], ['120', '20', '0.1'],\n {'hue': '0.89', 'saturation': 20, 'lightness': '0.1'}\n]\n\ncolors = [\n  Color('hsl', representation) for representation in valid_hsl_representations\n]\n```\n</details>\n\n### Conversions\n<a name=\"Conversions\"></a>\n\n`Color` class provides functionality of converting between `rgb`, `hsl` and `hex` color spaces.\nWe can both calculate color values in different color space an\n\n<div align=\"center\">\n  <img src=\"colors_accessibility/static/color_conversions.svg\" alt=\"color conversions\" width=75%/>\n</div>\n<details>\n<summary>Code</summary>\n\n```\nfrom colors_accessibility import Color\n\n\ncolor = Color('rgb', {'red': 170, 'green': 0.23, 'blue': 0})\nprint(color)\n\n# Calculate coordinates in different color spaces:\n\nhex_color_values = color.to_hex()\nprint(hex_color_values)\n\nhsl_color_values = color.to_hsl()\nprint(hsl_color_values)\n\n# Set color to different color space:\ncolor.set_to('hex')\nprint(color)\n```\n</details>\n\n### Relative luminance\n<a name=\"relative-luminance\"></a>\nWe also have an ability to calculate [relative luminance](https://en.wikipedia.org/wiki/Relative_luminance) of a color.\n\n<div align=\"center\">\n  <img src=\"colors_accessibility/static/relative_luminance.svg\" alt=\"relative luminance\" width=75%/>\n</div>\n<details>\n<summary>Code</summary>\n\n```\nfrom colors_accessibility import Color\n\n\ncolor = Color('rgb', {'red': 170, 'green': 0.23, 'blue': 0})\n\nrelative_luminance = color.relative_luminance()\nprint(relative_luminance)\n```\n</details>\n\n### Single space representation\n<a name=\"single-space-representation\"></a>\nWe can get color representations for the specified color. We can choose from: `rgb`, `hsl`, `hex` and `all`. With `all`\nwe get representation for all three color spaces.\n\n<div align=\"center\">\n  <img src=\"colors_accessibility/static/get_single_space_representation.svg\" alt=\"get single space representation\" width=75%/>\n</div>\n<details>\n<summary>Code</summary>\n\n```\nfrom colors_accessibility import Color\n\n\ncolor = Color('rgb', [120, 53, 89])\nprint(color)\n\nrepresentation = color.get_representations('hex')\nprint(representation\n```\n</details>\n\n### Color representations\n<a name=\"color-representations\"></a>\nHere we get the representations for all three spaces.\n\n<div align=\"center\">\n  <img src=\"colors_accessibility/static/get_color_representations.svg\" alt=\"get color representations\" width=75%/>\n</div>\n<details>\n<summary>Code</summary>\n\n```\nfrom colors_accessibility import Color\n\n\ncolor = Color('rgb', [120, 53, 89])\nprint(color)\n\nrepresentation = color.get_representations('all')\n\nprint(representation.rgb)\nprint(representation.hex)\nprint(representation.hsl)\n```\n</details>\n\n### Values to dictionary\n<a name=\"values-to-dictionary\"></a>\nWe can format the color representation to a dictionary.\n\n<div align=\"center\">\n  <img src=\"colors_accessibility/static/to_dictionary.svg\" alt=\"values to dictionary\" width=75%/>\n</div>\n<details>\n<summary>Code</summary>\n\n```\nfrom colors_accessibility import Color\n\n\ncolor = Color('rgb', [120, 50, 0.3])\nprint(color.color_values)\n\nvalues_dictionary_representations = color.to_dict()\nprint(values_dictionary_representations)\n```\n</details>\n\n## Accessibility processor\n<a name=\"accessibility-processor\"></a>\n\n### Contrast ratio\n<a name=\"contrast-ratio\"></a>\nWe can calculate contrast ratio of a color.\n\n<div align=\"center\">\n  <img src=\"colors_accessibility/static/accessibility_processor_contrast.svg\" alt=\"contrast ratio\" width=75%/>\n</div>\n<details>\n<summary>Code</summary>\n\n```\nfrom colors_accessibility import Color\n\n\nrgb_color = Color('rgb', [120, 53, 89])\nhex_color = Color('hex', '#783957')\n\nprocessor = AccessibilityProcessor(rgb_color, hex_color)\nprint(processor)\n\nrgb_luminance, hex_luminance = processor.get_luminance_values(\n  processor.foreground_color,\n  processor.background_color\n)\nprint(rgb_luminance)\nprint(hex_luminance)\n\nconstrast = processor.calculate_contrast(rgb_luminance, hex_luminance)\nprint(contrast)\n```\n</details>\n\n### WCAG compliant colors representation\n<a name=\"wcag-compliant-colors-representation\"></a>\nWe can get the WCAG compliant colors representation - we get them by tweaking HSL color values till contrast between the\ntwo input colors are on adequate levels.\n\n<div align=\"center\">\n  <img src=\"colors_accessibility/static/wcag_compliant_representation.svg\" alt=\"wcag compliant representation\" width=75%/>\n</div>\n<details>\n<summary>Code</summary>\n\n```\nfrom colors_accessibility import AccessibilityProcessor, Color\nfrom pprint import pprint\n\n\nrgb_color = Color('rgb', [120, 198, 73])\nhex_color = Color('hex', '#783957')\n\nprocessor = AccessibilityProcessor(rgb_color, hex_color)\nwcag_compliant_colors = processor.get_all_wcag_compliant_color()\npprint(wcag_compliant_colors.get('lightness').get('background'))\n```\n</details>\n\n# Further improvements\n<a name=\"further-improvements\"></a>\nHere are some of the planned further improvements:\n\n- [ ] Add ability to get color representations for more color spaces\n- [ ] Refactor the code\n- [ ] Add methods to print color representations\n- [ ] Add methods for easier getting well formatted color representations\n- [ ] Add more tests to increase the coverage\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/phryniewicz/colors-accessibility",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "colors-accessibility",
    "package_url": "https://pypi.org/project/colors-accessibility/",
    "platform": null,
    "project_url": "https://pypi.org/project/colors-accessibility/",
    "project_urls": {
      "Bug Tracker": "https://github.com/phryniewicz/colors-accessibility/issues",
      "Homepage": "https://github.com/phryniewicz/colors-accessibility"
    },
    "release_url": "https://pypi.org/project/colors-accessibility/0.0.5/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Package to process and change colors between color spaces and to tweak input colors to meet WCAG 2.1 accessibility standards.",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14010032,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8f7508269c857c8ca39b22589eca3c98c28d808514ae3bc6317e1a58c149286",
          "md5": "5e8cdde28454780da749adffbbf320bf",
          "sha256": "72195f145fbc0dd3b377ca0a99bb2bd834773bdb29e40f3dcc649ed790c3c6b4"
        },
        "downloads": -1,
        "filename": "colors_accessibility-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e8cdde28454780da749adffbbf320bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16703,
        "upload_time": "2022-05-29T19:41:44",
        "upload_time_iso_8601": "2022-05-29T19:41:44.060392Z",
        "url": "https://files.pythonhosted.org/packages/f8/f7/508269c857c8ca39b22589eca3c98c28d808514ae3bc6317e1a58c149286/colors_accessibility-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "087a869847ce5796fbd03cb29d7d60dbd82dba2a9abee4f515bfcd07ec941850",
          "md5": "fdb60806dd5a1421bad9408b49663c46",
          "sha256": "2f6e3dc60fe477afa4281ee5743204635d3ad8e46784bf971f66d3be192b2988"
        },
        "downloads": -1,
        "filename": "colors_accessibility-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fdb60806dd5a1421bad9408b49663c46",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16633,
        "upload_time": "2022-05-29T19:41:45",
        "upload_time_iso_8601": "2022-05-29T19:41:45.815407Z",
        "url": "https://files.pythonhosted.org/packages/08/7a/869847ce5796fbd03cb29d7d60dbd82dba2a9abee4f515bfcd07ec941850/colors_accessibility-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa2032396629a8378a988b19229ab6f7ff2460b17f18e081d12d1871d0149da9",
          "md5": "340ba33d713be5358e283c01b4531625",
          "sha256": "13f3a12e79d2bd9a38d35b22fb35fc99b1a7a33a59ccbadb1503948dc174ac4c"
        },
        "downloads": -1,
        "filename": "colors_accessibility-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "340ba33d713be5358e283c01b4531625",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16809,
        "upload_time": "2022-05-30T23:16:29",
        "upload_time_iso_8601": "2022-05-30T23:16:29.690641Z",
        "url": "https://files.pythonhosted.org/packages/aa/20/32396629a8378a988b19229ab6f7ff2460b17f18e081d12d1871d0149da9/colors_accessibility-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3fa13dc72ce82e1f05a2bf5210393d7ad3de21b05fbdb0d4bded4310c7558d0",
          "md5": "87c77fd360ac2fca3a2594915206386a",
          "sha256": "f3ecdf5ba8ac335b4c7ddbc0656c4c8fc16d77dee54568a3c550243f9c198c16"
        },
        "downloads": -1,
        "filename": "colors_accessibility-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "87c77fd360ac2fca3a2594915206386a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16290,
        "upload_time": "2022-05-30T23:16:31",
        "upload_time_iso_8601": "2022-05-30T23:16:31.292884Z",
        "url": "https://files.pythonhosted.org/packages/b3/fa/13dc72ce82e1f05a2bf5210393d7ad3de21b05fbdb0d4bded4310c7558d0/colors_accessibility-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "841a25250903c0bb684639fada73c757d32788979a57a44eed4195499f8200d3",
          "md5": "f6e2c02684f8beec872b03f45d32bbae",
          "sha256": "85fa8091e74285629010c41f6a3e8340d6059083a6dc6ecdeb9a9f0bbf40803c"
        },
        "downloads": -1,
        "filename": "colors_accessibility-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f6e2c02684f8beec872b03f45d32bbae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16802,
        "upload_time": "2022-05-31T05:52:42",
        "upload_time_iso_8601": "2022-05-31T05:52:42.204641Z",
        "url": "https://files.pythonhosted.org/packages/84/1a/25250903c0bb684639fada73c757d32788979a57a44eed4195499f8200d3/colors_accessibility-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e04ccdc4cf7648bb791551946d5d3fbefb1a773caae33ab38f7b7b34d134b386",
          "md5": "cf98d9fd414a305a47ae8445b6c32ba3",
          "sha256": "1d127bbda65191ef4377b1ae56c4a077efc5db603674fd290e194ea143852169"
        },
        "downloads": -1,
        "filename": "colors_accessibility-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cf98d9fd414a305a47ae8445b6c32ba3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16275,
        "upload_time": "2022-05-31T05:52:43",
        "upload_time_iso_8601": "2022-05-31T05:52:43.974125Z",
        "url": "https://files.pythonhosted.org/packages/e0/4c/cdc4cf7648bb791551946d5d3fbefb1a773caae33ab38f7b7b34d134b386/colors_accessibility-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc0c9e7887cc477ba58b92f56a32f72bbacc875ef03236497abd50bbe9da8485",
          "md5": "0b141feaf616476011b397b624a8b42e",
          "sha256": "6892b0bf6f675ca0ca1e24079f26372deda943b83b846d49e7f060963cf0c92e"
        },
        "downloads": -1,
        "filename": "colors_accessibility-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b141feaf616476011b397b624a8b42e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16864,
        "upload_time": "2022-06-01T15:29:59",
        "upload_time_iso_8601": "2022-06-01T15:29:59.101904Z",
        "url": "https://files.pythonhosted.org/packages/fc/0c/9e7887cc477ba58b92f56a32f72bbacc875ef03236497abd50bbe9da8485/colors_accessibility-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eab5688dcce0195c2c0da9b6a4390dff2ba747334515b5414a6541940c856894",
          "md5": "cdae566a6351446dffaf8f57b4d9a86d",
          "sha256": "4b3c21b71455ec5a5693e1338a43b18fda93cc86b3e2464fdc389f00d98e63d0"
        },
        "downloads": -1,
        "filename": "colors_accessibility-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cdae566a6351446dffaf8f57b4d9a86d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16343,
        "upload_time": "2022-06-01T15:30:01",
        "upload_time_iso_8601": "2022-06-01T15:30:01.216649Z",
        "url": "https://files.pythonhosted.org/packages/ea/b5/688dcce0195c2c0da9b6a4390dff2ba747334515b5414a6541940c856894/colors_accessibility-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4de70fe6a88c99d652505a62a95402c35ac519c3074c942869ad800487656b16",
          "md5": "71b830136115af898167325cd78df95a",
          "sha256": "af55618aa47fc96eaa397d60774d2e4f08bfa08da2807d47b4002d5bf3f944fd"
        },
        "downloads": -1,
        "filename": "colors_accessibility-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71b830136115af898167325cd78df95a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16778,
        "upload_time": "2022-06-02T08:44:31",
        "upload_time_iso_8601": "2022-06-02T08:44:31.195311Z",
        "url": "https://files.pythonhosted.org/packages/4d/e7/0fe6a88c99d652505a62a95402c35ac519c3074c942869ad800487656b16/colors_accessibility-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05b9b189057b60fac0f5f206eee6f77f5402019ed29d5935f76c8dd0673fa4d0",
          "md5": "b73245670ec9938eda07fea4e1e9a11d",
          "sha256": "46e1d4b3d76dd178d0bb8d69c6f9f96d556cf8aeb63fda8ae8056ea19f6c08fd"
        },
        "downloads": -1,
        "filename": "colors_accessibility-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b73245670ec9938eda07fea4e1e9a11d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16236,
        "upload_time": "2022-06-02T08:44:32",
        "upload_time_iso_8601": "2022-06-02T08:44:32.787640Z",
        "url": "https://files.pythonhosted.org/packages/05/b9/b189057b60fac0f5f206eee6f77f5402019ed29d5935f76c8dd0673fa4d0/colors_accessibility-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4de70fe6a88c99d652505a62a95402c35ac519c3074c942869ad800487656b16",
        "md5": "71b830136115af898167325cd78df95a",
        "sha256": "af55618aa47fc96eaa397d60774d2e4f08bfa08da2807d47b4002d5bf3f944fd"
      },
      "downloads": -1,
      "filename": "colors_accessibility-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "71b830136115af898167325cd78df95a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 16778,
      "upload_time": "2022-06-02T08:44:31",
      "upload_time_iso_8601": "2022-06-02T08:44:31.195311Z",
      "url": "https://files.pythonhosted.org/packages/4d/e7/0fe6a88c99d652505a62a95402c35ac519c3074c942869ad800487656b16/colors_accessibility-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "05b9b189057b60fac0f5f206eee6f77f5402019ed29d5935f76c8dd0673fa4d0",
        "md5": "b73245670ec9938eda07fea4e1e9a11d",
        "sha256": "46e1d4b3d76dd178d0bb8d69c6f9f96d556cf8aeb63fda8ae8056ea19f6c08fd"
      },
      "downloads": -1,
      "filename": "colors_accessibility-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "b73245670ec9938eda07fea4e1e9a11d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 16236,
      "upload_time": "2022-06-02T08:44:32",
      "upload_time_iso_8601": "2022-06-02T08:44:32.787640Z",
      "url": "https://files.pythonhosted.org/packages/05/b9/b189057b60fac0f5f206eee6f77f5402019ed29d5935f76c8dd0673fa4d0/colors_accessibility-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}