{
  "info": {
    "author": "Le Tuan Anh",
    "author_email": "tuananh.ke@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: Chinese (Simplified)",
      "Natural Language :: Chinese (Traditional)",
      "Natural Language :: English",
      "Natural Language :: Indonesian",
      "Natural Language :: Japanese",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Integrated Semantic Framework\n\nA Python 3 implementation of the [Integrated Semantic Framework](https://osf.io/9udjk/) that provides computational deep semantic analysis by combining structural semantics from construction grammars and lexical semantics from ontologies in a single representation.\n\n`coolisf` is only a back-end semantic parsing module that runs on command-line interaface or in Python programs.\nIf you want a friendly graphical user interface, please use [visualkopasu](https://github.com/letuananh/visualkopasu/).\n\n## A quick glance\n\nTo parse a sentence, use coolisf `text` command\n\n```bash\npython -m coolisf text \"I drink green tea.\" -f dmrs\n\n:`I drink green tea.` (len=5)\n------------------------------------------------------------\ndmrs {\n  10000 [pron<0:1> x ind=+ num=sg pers=1 pt=std];\n  10001 [pronoun_q<0:1> x ind=+ num=sg pers=1 pt=std];\n  10002 [_drink_v_1_rel<2:7> e mood=indicative perf=- prog=- sf=prop tense=pres];\n  10003 [udef_q<8:18> x num=sg pers=3];\n  10004 [_green+tea_n_1_rel<8:18> x num=sg pers=3];\n  0:/H -> 10002;\n  10001:RSTR/H -> 10000;\n  10002:ARG1/NEQ -> 10000;\n  10002:ARG2/NEQ -> 10004;\n  10003:RSTR/H -> 10004;\n}\n# 10002 -> 01170052-v[drink/lelesk]\n# 10004 -> 07935152-n[green tea/lelesk]\n...\n```\n\nFor batch processing, create a text file with each sentence on a separate line.\nFor example here is the content of the file `demo.txt`\n\n```\nI drink green tea.\nSherlock Holmes has three guard dogs.\nA soul is not a living thing.\nDo you have any green tea chest?\n```\n\nAfter that, run the following `parse` command to analyse the text and write the output to `demo_out.xml`\n\n```bash\npython -m coolisf parse demo.txt -o demo_out.xml\n```\n\nHere is an example of using coolisf in a Python code\n\n```python\nfrom coolisf import GrammarHub\nghub = GrammarHub()\n# parse an English text\nsent = ghub.ERG_ISF.parse(\"I love drip coffee.\")\n# print semantic structures for all potential readings\nfor reading in sent:\n    print(reading.dmrs())\n```\n\nOutput\n\n```bash\ndmrs {\n  10000 [pron<0:1> x ind=+ num=sg pers=1 pt=std];\n  10001 [pronoun_q<0:1> x ind=+ num=sg pers=1 pt=std];\n  10002 [_love_v_1_rel<2:6> e mood=indicative perf=- prog=- sf=prop tense=pres];\n  10003 [udef_q<7:19> x num=sg pers=3];\n  10004 [_drip+coffee_n_1_rel<7:19> x num=sg pers=3];\n  0:/H -> 10002;\n  10001:RSTR/H -> 10000;\n  10002:ARG1/NEQ -> 10000;\n  10002:ARG2/NEQ -> 10004;\n  10003:RSTR/H -> 10004;\n}\n...\n```\n\nFore more information, please refer to the documentation for coolisf at https://coolisf.readthedocs.io\n\n## Install\n\nThe `coolisf` package itself is available on [PyPI](https://pypi.org/project/coolisf/) and it can be installed using pip\n\n```bash\npip install coolisf\n```\n\nHowever, it can be tricky to acquire all the required components and data. Please find version specific prerequisites and installation instructions on coolisf's [official Github release page](https://github.com/letuananh/intsem.fx/releases).\n\nIf you encounter any problems or difficulties, please submit a ticket for support at: https://github.com/letuananh/intsem.fx/issues",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/letuananh/intsem.fx/",
    "keywords": "linguistics,analysis,semantics,meaning,nlp,HPSG,ERG,MRS,DMRS,grammar,Sign-based Construction Grammar,wordnet,wsd,word-sense disambiguation",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "coolisf",
    "package_url": "https://pypi.org/project/coolisf/",
    "platform": "any",
    "project_url": "https://pypi.org/project/coolisf/",
    "project_urls": {
      "Bug Tracker": "https://github.com/letuananh/intsem.fx/issues",
      "Homepage": "https://github.com/letuananh/intsem.fx/",
      "Source Code": "https://github.com/letuananh/intsem.fx"
    },
    "release_url": "https://pypi.org/project/coolisf/0.2.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A Python 3 implementation of the Integrated Semantic Framework that provides computational deep semantic analysis by combining structural semantics from construction grammars and lexical semantics from ontologies in a single representation.",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10346315,
  "releases": {
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66fb6a8734faa93e90832f60f38edfc5deb6c9c7a114313eac3bd987b8fef887",
          "md5": "cb74da4f2c1243d6728fe1e170cd65e9",
          "sha256": "44b4c5f9ab93a1dc5c9c9d58c8711b0f810d02f2de4d61627c8965f0b9260cc3"
        },
        "downloads": -1,
        "filename": "coolisf-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cb74da4f2c1243d6728fe1e170cd65e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 734109,
        "upload_time": "2021-05-13T16:40:13",
        "upload_time_iso_8601": "2021-05-13T16:40:13.184354Z",
        "url": "https://files.pythonhosted.org/packages/66/fb/6a8734faa93e90832f60f38edfc5deb6c9c7a114313eac3bd987b8fef887/coolisf-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2872f27e30b2484bca7563d5d39ca6fbdba6e355be17881046edb0525c94ac2",
          "md5": "ad65dad800d58d435c070c92ce9fffdd",
          "sha256": "c28d4a822008aeb98afaeb8ad33b93dfda4fc3ad45980508cf31914b0589de6c"
        },
        "downloads": -1,
        "filename": "coolisf-0.2.3b2.tar.gz",
        "has_sig": false,
        "md5_digest": "ad65dad800d58d435c070c92ce9fffdd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 738524,
        "upload_time": "2021-05-09T14:56:02",
        "upload_time_iso_8601": "2021-05-09T14:56:02.587729Z",
        "url": "https://files.pythonhosted.org/packages/a2/87/2f27e30b2484bca7563d5d39ca6fbdba6e355be17881046edb0525c94ac2/coolisf-0.2.3b2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "66fb6a8734faa93e90832f60f38edfc5deb6c9c7a114313eac3bd987b8fef887",
        "md5": "cb74da4f2c1243d6728fe1e170cd65e9",
        "sha256": "44b4c5f9ab93a1dc5c9c9d58c8711b0f810d02f2de4d61627c8965f0b9260cc3"
      },
      "downloads": -1,
      "filename": "coolisf-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "cb74da4f2c1243d6728fe1e170cd65e9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 734109,
      "upload_time": "2021-05-13T16:40:13",
      "upload_time_iso_8601": "2021-05-13T16:40:13.184354Z",
      "url": "https://files.pythonhosted.org/packages/66/fb/6a8734faa93e90832f60f38edfc5deb6c9c7a114313eac3bd987b8fef887/coolisf-0.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}