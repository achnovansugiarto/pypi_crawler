{
  "info": {
    "author": "JÃ³zsef Sallai",
    "author_email": "jozsef@sallai.me",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Internet",
      "Topic :: Software Development :: Libraries",
      "Topic :: Utilities"
    ],
    "description": "# Peekalink Python API wrapper\n\nAn API wrapper/client library for the [Peekalink][peekalink-url] link previewing\nservice.\n\n## Table of Contents\n\n- [Getting Started](#getting-started)\n- [API](#api)\n  - [`peekalink.Client`](#peekalinkclient)\n  - [`peekalink.LinkPreview`](#peekalinklinkpreview)\n  - [`peekalink.ContentType`](#peekalinkcontenttype)\n  - [`peekalink.ImageAsset`](#peekalinkimageasset)\n  - [`peekalink.YouTubeDetails`](#peekalinkyoutubedetails)\n  - [`peekalink.TwitterDetails`](#peekalinktwitterdetails)\n  - [`peekalink.LinkError`](#peekalinklinkerror)\n- [Contribution](#contribution)\n- [License](#license)\n\n## Getting Started\n\n**Install the package:**\n\n```\npip install peekalink\n```\n\n**Instantiate the client:**\n\n```py\nfrom peekalink import Client\n\npeekalink = Client(api_key='your_api_key')\n```\n\n**Preview a link:**\n\n```py\npreview = peekalink.preview('https://www.youtube.com/watch?v=2oeWbRRiN2I')\nprint(preview.title)\n\nif preview.is_youtube():\n  youtube_details = preview.youtube()\n  print(youtube_details.duration)\n```\n\n## API\n\n### `peekalink.Client`\n\nRepresents a Peekalink API client instance.\n\n#### Methods\n\n- `__init__(api_key: str, base_url: str) -> Client`\n\nInstantiates a new API client instance with the given `api_key` and `base_url`.\nIf the `base_url` is not provided, it will default to https://api.peekalink.io.\nThe `base_url` should NOT have a trailing slash.\n\n- `set_base_url(base_url: str)`\n\nSets the client's base URL. It should NOT have a trailing slash.\n\n- `set_api_key(api_key: str)`\n\nSets the client's API key.\n\n- `preview(link: str) -> LinkPreview`\n\nReturns preview information about a given link. If the response is non-200, it\nwill raise a `LinkError`.\n\n- `is_available(link: str) -> bool`\n\nChecks whether a given link is available.\n\n### `peekalink.LinkPreview`\n\nRepresents details about a given link's preview.\n\n#### Attributes\n\n- `url: str`\n- `domain: str`\n- `last_updated: datetime`\n- `next_update: datetime`\n- `content_type: ContentType`\n- `mime_type: str`\n- `size: int | None`\n- `redirected: bool`\n- `redirection_url: str | None`\n- `redirection_count: int | None`\n- `redirection_trail: list[str] | None`\n- `title: str | None`\n- `description: str | None`\n- `name: str`\n- `trackers_detected: bool`\n- `icon: ImageAsset | None`\n- `image: ImageAsset | None`\n\n#### Methods\n\n- `@staticmethod from_json(json: dict)`\n\nFactory method that turns a JSON dict into a `LinkPreview`.\n\n- `is_youtube() -> bool`\n\nReturns `True` if the details were included in the response and they contain\ninformation about a YouTube video.\n\n- `is_twitter() -> bool`\n\nReturns `True` if the details were included in the response and they contain\ninformation about a tweet.\n\n- `youtube() -> YouTubeDetails | None`\n\nReturns a `YouTubeDetails` object if the link contains details to a YouTube\nvideo, otherwise `None`.\n\n- `twitter() -> TwitterDetails | None`\n\nReturns a `TwitterDetails` object if the link contains details to a tweet,\notherwise `None`.\n\n- `to_json_dict() -> dict`\n\nReturns a JSON-compliant dictionary containing the data of the current\n`LinkPreview` instance.\n\n### `peekalink.ContentType`\n\nEnum-like class that represents the type of the content that's available on a\ngiven link.\n\n#### Members\n\n- `ContentType.HTML`\n- `ContentType.IMAGE`\n- `ContentType.VIDEO`\n- `ContentType.GIF`\n\n### `peekalink.ImageAsset`\n\nRepresents an image asset, such as the favicon or the OG image of the link.\n\n#### Attributes\n\n- `url: str`\n- `width: int`\n- `height: int`\n\n#### Methods\n\n- `@staticmethod from_json(json: dict) -> ImageAsset`\n\nFactory method that turns a JSON dict into an `ImageAsset`.\n\n- `to_json_dict() -> dict`\n\nReturns a JSON-compliant dictionary containing the data of the current\n`ImageAsset` instance.\n\n### `peekalink.YouTubeDetails`\n\nRepresents a set of details regarding the YouTube video a given link points to.\n\n#### Attributes\n\n- `video_id: str`\n- `duration: float`\n- `view_count: int`\n- `like_count: int`\n- `dislike_count: int`\n- `comment_count: int`\n- `published_at: datetime`\n\n#### Methods\n\n- `@staticmethods from_json(json: dict) -> YouTubeDetails`\n\nFactory method that turns a JSON dict into a `YouTubeDetails`.\n\n- `to_json_dict() -> dict`\n\nReturns a JSON-compliant dictionary containing the data of the current\n`YouTubeDetails` instance.\n\n### `peekalink.TwitterDetails`\n\nRepresents a set of details regarding the tweet a given link points to.\n\n#### Attributes\n\n- `status_id: str`\n- `retweet_count: int`\n- `likes_count: int`\n- `published_at: datetime`\n\n#### Methods\n\n- `@staticmethods from_json(json: dict) -> TwitterDetails`\n\nFactory method that turns a JSON dict into a `TwitterDetails`.\n\n- `to_json_dict() -> dict`\n\nReturns a JSON-compliant dictionary containing the data of the current\n`TwitterDetails` instance.\n\n### peekalink.LinkError`\n\nAn exception that can be raised by the Link Preview service, to better identify\nwhy it was not possible to retrieve the details of a link.\n\n#### Attributes\n\n- `code: int` - The HTTP status code. You can check against one of the built-in\nerror types that are included in the `LinkError` class.\n\n#### Members\n\n- `LinkError.LINK_MAX_REDIRECTS = 400`\n- `LinkError.LINK_IS_PRIVATE = 403`\n- `LinkError.LINK_DOES_NOT_EXIST = 404`\n- `LinkError.LINK_TIMED_OUT = 408`\n- `LinkError.LINK_EMPTY = 409`\n- `LinkError.LINK_PREVIEW_ERROR = 409`\n- `LinkError.LINK_UNREACHABLE = 409`\n- `LinkError.LINK_CONTENT_TOO_LARGE = 413`\n\n## Contribution\n\n**1. Clone the repository**\n\n```\ngit clone git@github.com:jozsefsallai/peekalink.py.git\ncd peekalink.py\n```\n\n**2. Create a virtual env**\n\n```\npython -m venv .venv\nsource .venv/bin/activate\n```\n\n**3. Install the dependencies**\n\n```\npip install -r requirements.txt\n```\n\nOnce you make your changes, please make sure the unit tests are passing:\n\n```\npython -m unittest discover -s peekalink/tests -p 'test_*.py'\n```\n\nIf you add a feature, make sure to also include an appropriate unit test.\n\n## License\n\nMIT.\n\n[peekalink-url]: https://www.peekalink.io/\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jozsefsallai/peekalink.py",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "peekalink",
    "package_url": "https://pypi.org/project/peekalink/",
    "platform": "",
    "project_url": "https://pypi.org/project/peekalink/",
    "project_urls": {
      "Bug Tracker": "https://github.com/jozsefsallai/peekalink.py/issues",
      "Homepage": "https://github.com/jozsefsallai/peekalink.py"
    },
    "release_url": "https://pypi.org/project/peekalink/1.0.1/",
    "requires_dist": [
      "python-dateutil (==2.8.1)",
      "requests (>=2.5.4)"
    ],
    "requires_python": ">=3.7.0",
    "summary": "A Peekalink API wrapper for Python",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10830110,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a939de1d399f8711af46f63ab942746c4efb64e4a8aac55e81e42a1b17ddc95f",
          "md5": "602e5006790ec6147bcd0d7dc7297b3a",
          "sha256": "3413f9e78a2b0dcda648eec223cb62ef0c121b36a12dba84deea56fbac360c70"
        },
        "downloads": -1,
        "filename": "peekalink-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "602e5006790ec6147bcd0d7dc7297b3a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.0",
        "size": 11628,
        "upload_time": "2021-06-27T14:58:51",
        "upload_time_iso_8601": "2021-06-27T14:58:51.683386Z",
        "url": "https://files.pythonhosted.org/packages/a9/39/de1d399f8711af46f63ab942746c4efb64e4a8aac55e81e42a1b17ddc95f/peekalink-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55825da78cb6d1458442d6714411fe127d5a8c53916932c38b1604f51d427f64",
          "md5": "f17f8312416d9a027923d2f25f3c1b29",
          "sha256": "53433b510a1fbe0879551863338f1fcf0df717abfc2d7fd8872d4355bf51e9b7"
        },
        "downloads": -1,
        "filename": "peekalink-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f17f8312416d9a027923d2f25f3c1b29",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0",
        "size": 10605,
        "upload_time": "2021-06-27T14:58:53",
        "upload_time_iso_8601": "2021-06-27T14:58:53.654181Z",
        "url": "https://files.pythonhosted.org/packages/55/82/5da78cb6d1458442d6714411fe127d5a8c53916932c38b1604f51d427f64/peekalink-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc7c43c00358aba0baffaf9bdcb223a20073e81c9359369c66eef2c493d7bfeb",
          "md5": "51b84b8470ff612274e4ce6ca7eb63ee",
          "sha256": "1191a6571b1fd1091166b6e6a76f0b17a42946668bb4a039638f00ea88a7f104"
        },
        "downloads": -1,
        "filename": "peekalink-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "51b84b8470ff612274e4ce6ca7eb63ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 11629,
        "upload_time": "2021-07-06T00:17:22",
        "upload_time_iso_8601": "2021-07-06T00:17:22.822944Z",
        "url": "https://files.pythonhosted.org/packages/bc/7c/43c00358aba0baffaf9bdcb223a20073e81c9359369c66eef2c493d7bfeb/peekalink-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d09652cd1262e4d6d16c47b3d1e88e0f04d8ac715eff66b01681df950e279bc",
          "md5": "f6c5f100b12d036c8d6d90540dca22df",
          "sha256": "4ab8b695c2502630b498244bc2bd6676d8289c81159b8e0764ef8acb0c2fc77b"
        },
        "downloads": -1,
        "filename": "peekalink-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f6c5f100b12d036c8d6d90540dca22df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 10646,
        "upload_time": "2021-07-06T00:17:24",
        "upload_time_iso_8601": "2021-07-06T00:17:24.827802Z",
        "url": "https://files.pythonhosted.org/packages/4d/09/652cd1262e4d6d16c47b3d1e88e0f04d8ac715eff66b01681df950e279bc/peekalink-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc7c43c00358aba0baffaf9bdcb223a20073e81c9359369c66eef2c493d7bfeb",
        "md5": "51b84b8470ff612274e4ce6ca7eb63ee",
        "sha256": "1191a6571b1fd1091166b6e6a76f0b17a42946668bb4a039638f00ea88a7f104"
      },
      "downloads": -1,
      "filename": "peekalink-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "51b84b8470ff612274e4ce6ca7eb63ee",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.0",
      "size": 11629,
      "upload_time": "2021-07-06T00:17:22",
      "upload_time_iso_8601": "2021-07-06T00:17:22.822944Z",
      "url": "https://files.pythonhosted.org/packages/bc/7c/43c00358aba0baffaf9bdcb223a20073e81c9359369c66eef2c493d7bfeb/peekalink-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d09652cd1262e4d6d16c47b3d1e88e0f04d8ac715eff66b01681df950e279bc",
        "md5": "f6c5f100b12d036c8d6d90540dca22df",
        "sha256": "4ab8b695c2502630b498244bc2bd6676d8289c81159b8e0764ef8acb0c2fc77b"
      },
      "downloads": -1,
      "filename": "peekalink-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f6c5f100b12d036c8d6d90540dca22df",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.0",
      "size": 10646,
      "upload_time": "2021-07-06T00:17:24",
      "upload_time_iso_8601": "2021-07-06T00:17:24.827802Z",
      "url": "https://files.pythonhosted.org/packages/4d/09/652cd1262e4d6d16c47b3d1e88e0f04d8ac715eff66b01681df950e279bc/peekalink-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}