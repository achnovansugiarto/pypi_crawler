{
  "info": {
    "author": "Mehera Emrich",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Arrpy #\n\nA lightweight module allowing simple manipulation of 2D arrays using base python list objects. Designed for use in pandas-incompatible situations, such as when working in Jython. Allows import and export of spreadsheets, finding the mean across rows or columns, and row extraction.\n\n## download ##\nrun 'pip install arrpy'\n\n## Import and export ##\n\n**open_df**(file, delim_type = \"csv\", subarray = \"col\", e = 'utf-8-sig')\nOpen *file* and return a corresponding list of lists.\n*file* is a string denoting the path of the 2D data of interest.\n*delim type* is a string denoting the column separators used in *file*. Currently accepts \"csv\" and \"tab\".\n*subarray* is a string denoting whether the respective subarrays in the list created will correspond to a row or a columns of *file*.\n*e* is a string denoting the encoding of the *file*.\n\n**write_csv**(arr, path, subarray = \"col\")\nWrite *arr* to *file*.\n*arr* is a list of lists.\n*file* is a string denoting the path to write to.\n*subarray* is a string denoting whether the respective subarrays in *arr* will correspond to a row or column of *file*.\n\n## List manipulation ##\n\n**append_row**(arr, row, base_check = True, deep = True)\nOutput a new list object with *row* appended to *arr*.\n*arr* is a list of lists.\n*row* is a list to append to *arr*.\n*base_check* is a boolean to determine whether to run a set of basic compatibilty checks on *arr* (type, length, dimension count, and raggedness)\n*deep* is a boolean to determine whether to append *row* to a deep (True) or shallow copy of *arr* (False).\n\n**del_row**(arr, row, base_check = True)\nOutput a new list object with *row* deleted from *arr*.\n*arr* is a list of lists.\n*row* is an object that is coercible to 0 <= int <= len(arr[0]).\n*base_check* is a boolean to determine whether to run a set of basic compatibilty checks on *arr* (type, length, dimension count, and raggedness)\n\n## List processing ##\n\n**avg_col**(arr, base_check = True, dim_check = False)\nOutputs the arithmetic mean of the columns (subarrays) of *arr* as a list.\n*arr* is a list of lists.\n*base_check* is a boolean to determine whether to run a set of basic compatibilty checks on *arr* (type, length, dimension count, and raggedness)\n*dim_check* is a boolean to determine whether to check if *arr* has a consistent number of dimensions. This can be slow for larger *arr*.\n\n**avg_row**(arr, base_check = True, dim_check = False)\nOutputs the arithmetic mean of the rows (a given index of each subarray) of *arr* as a list.\n*arr* is a list of lists.\n*base_check* is a boolean to determine whether to run a set of basic compatibilty checks on *arr* (type, length, dimension count, and raggedness)\n*dim_check* is a boolean to determine whether to check if *arr* has a consistent number of dimensions. This can be slow for larger *arr*.\n\n**row_extract**(arr, row, base_check = True)\nOutputs the selected row (given index of each subarray of *arr*) as a list.\n*arr* is a list of lists.\n*row* is an object that is coercible to 0 <= int <= len(arr[0]).\n*base_check* is a boolean to determine whether to run a set of basic compatibilty checks on *arr* (type, length, dimension count, and raggedness)\n*dim_check* is a boolean to determine whether to check if *arr* has a consistent number of dimensions. This can be slow for larger *arr*.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/meemrich/arrpy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "arrpy",
    "package_url": "https://pypi.org/project/arrpy/",
    "platform": "",
    "project_url": "https://pypi.org/project/arrpy/",
    "project_urls": {
      "Bug Tracker": "https://github.com/meemrich/arrpy/issues",
      "Homepage": "https://github.com/meemrich/arrpy"
    },
    "release_url": "https://pypi.org/project/arrpy/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "arrpy is a 2D array manipulation module",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10197814,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de5d532f7ca9599e0b5ad080c9f7e3af5f1815da49f05e4047d5efbc669ee625",
          "md5": "372f3fbfde9515d96f994ff068ad1378",
          "sha256": "9eda9669481720653adea6a69b28ece3ba1ca0b53386a7fd3524ae0bee192b18"
        },
        "downloads": -1,
        "filename": "arrpy-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "372f3fbfde9515d96f994ff068ad1378",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 12156,
        "upload_time": "2021-04-28T15:25:09",
        "upload_time_iso_8601": "2021-04-28T15:25:09.024908Z",
        "url": "https://files.pythonhosted.org/packages/de/5d/532f7ca9599e0b5ad080c9f7e3af5f1815da49f05e4047d5efbc669ee625/arrpy-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e48c9dc4ae6868eef42314cf76ce7cec90543bbe284c10ae93ec8a5b3e3534d0",
          "md5": "c8128977067ec67788c9ca71de69c30e",
          "sha256": "ba6fdf8ca614694d4dd1733b6c64cab5038c40bbcb9cf76fe4f6b37497b31a11"
        },
        "downloads": -1,
        "filename": "arrpy-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c8128977067ec67788c9ca71de69c30e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 10318,
        "upload_time": "2021-04-28T15:25:10",
        "upload_time_iso_8601": "2021-04-28T15:25:10.118538Z",
        "url": "https://files.pythonhosted.org/packages/e4/8c/9dc4ae6868eef42314cf76ce7cec90543bbe284c10ae93ec8a5b3e3534d0/arrpy-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de5d532f7ca9599e0b5ad080c9f7e3af5f1815da49f05e4047d5efbc669ee625",
        "md5": "372f3fbfde9515d96f994ff068ad1378",
        "sha256": "9eda9669481720653adea6a69b28ece3ba1ca0b53386a7fd3524ae0bee192b18"
      },
      "downloads": -1,
      "filename": "arrpy-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "372f3fbfde9515d96f994ff068ad1378",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 12156,
      "upload_time": "2021-04-28T15:25:09",
      "upload_time_iso_8601": "2021-04-28T15:25:09.024908Z",
      "url": "https://files.pythonhosted.org/packages/de/5d/532f7ca9599e0b5ad080c9f7e3af5f1815da49f05e4047d5efbc669ee625/arrpy-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e48c9dc4ae6868eef42314cf76ce7cec90543bbe284c10ae93ec8a5b3e3534d0",
        "md5": "c8128977067ec67788c9ca71de69c30e",
        "sha256": "ba6fdf8ca614694d4dd1733b6c64cab5038c40bbcb9cf76fe4f6b37497b31a11"
      },
      "downloads": -1,
      "filename": "arrpy-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c8128977067ec67788c9ca71de69c30e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 10318,
      "upload_time": "2021-04-28T15:25:10",
      "upload_time_iso_8601": "2021-04-28T15:25:10.118538Z",
      "url": "https://files.pythonhosted.org/packages/e4/8c/9dc4ae6868eef42314cf76ce7cec90543bbe284c10ae93ec8a5b3e3534d0/arrpy-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}