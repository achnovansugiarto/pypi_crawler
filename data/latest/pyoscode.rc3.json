{
  "info": {
    "author": "Fruzsina Agocs",
    "author_email": "fa325@cam.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Natural Language :: English",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Astronomy",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Scientific/Engineering :: Physics",
      "Topic :: Scientific/Engineering :: Visualization"
    ],
    "description": "========================================================================\noscode: Oscillatory ordinary differential equation solver\n========================================================================\n\n.. image:: https://codecov.io/gh/fruzsinaagocs/oscode/branch/joss-paper/graph/badge.svg\n        :target: https://codecov.io/gh/fruzsinaagocs/oscode\n        :alt: codecov status\n.. image:: https://travis-ci.org/fruzsinaagocs/oscode.svg?branch=master\n        :target: https://travis-ci.org/fruzsinaagocs/oscode\n        :alt: Travis CI build status\n.. image:: https://readthedocs.org/projects/oscode/badge/?version=latest\n        :target: https://oscode.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n.. image:: https://badges.gitter.im/oscode-help/community.svg\n        :target: https://gitter.im/oscode-help/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge\n        :alt: Chat on gitter\n.. image:: https://img.shields.io/badge/License-BSD%203--Clause-blue.svg\n        :target: https://opensource.org/licenses/BSD-3-Clause\n        :alt: BSD 3-clause license\n.. image:: https://img.shields.io/pypi/dm/pyoscode?color=indigo \n        :target: https://pypi.org/project/pyoscode/\n        :alt: PyPI downloads\n.. image:: https://joss.theoj.org/papers/d4c9396ef9b2b595e2f3881a4f8a7cda/status.svg\n        :target: https://joss.theoj.org/papers/d4c9396ef9b2b595e2f3881a4f8a7cda\n        :alt: JOSS status\n\n\n|\n|\n\n.. contents::\n   :local:\n\n|\n\nAbout\n-----\n\nOscode is a C++ tool with a Python interface that solves **osc**\\illatory\n**o**\\rdinary **d**\\ifferential **e**\\quations efficiently. It is designed to\ndeal with equations of the form\n\n.. image:: \n    https://github.com/fruzsinaagocs/oscode/raw/master/pyoscode/images/oscillator.png\n\nwhere |gamma| (friction term) and |omega| (frequency) can be given as arrays.\n\n.. |gamma| image:: https://github.com/fruzsinaagocs/oscode/raw/master/pyoscode/images/gamma.png\n\n.. |omega| image:: https://github.com/fruzsinaagocs/oscode/raw/master/pyoscode/images/omega.png\n\nOscode makes use of an analytic approximation of x(t) embedded in a\nstepping procedure to skip over long regions of oscillations, giving a reduction\nin computing time. The approximation is valid when the frequency changes slowly\nrelative to the timescales of integration, it is therefore worth applying when\nthis condition holds for at least some part of the integration range. \n\nFor the details of the numerical method used by oscode, see Citation_.\n\n\nInstallation\n------------\n\nDependencies\n~~~~~~~~~~~~\n\nBasic requirements for using the C++ interface:\n\n- C++11 or later\n- `Eigen <http://eigen.tuxfamily.org/index.php?title=Main_Page>`__ (a header-only library included in this source)\n\nThe strictly necessary Python dependencies are automatically installed when you use `pip` or the `setup.py`. They are:\n\n- `numpy <https://pypi.org/project/numpy/>`__\n\nThe *optional* dependencies are: \n\n- for tests\n    - `scipy <https://pypi.org/project/scipy/>`__ \n    - `pytest <https://docs.pytest.org/en/stable/getting-started.html>`__ \n- for examples/plotting\n    - `matplotlib <https://pypi.org/project/matplotlib/>`__\n    - `scipy <https://pypi.org/project/scipy/>`__ \n- for generating offline documentation\n    - `sphinx <https://pypi.org/project/Sphinx/>`__ \n    - `doxygen <https://www.doxygen.nl/index.html>`__\n    - `breathe <https://pypi.org/project/breathe/>`__\n    - `exhale <https://pypi.org/project/exhale/>`__\n\n\nPython\n~~~~~~\n\n``pyoscode`` can be installed via pip \n\n.. code:: bash\n   \n   pip install pyoscode\n\nor via the setup.py\n\n.. code:: bash\n\n   git clone https://github.com/fruzsinaagocs/oscode\n   cd oscode\n   python setup.py install --user\n\nor\n\n.. code:: bash\n\n   git clone https://github.com/fruzsinaagocs/oscode\n   cd oscode\n   pip install .\n\nYou can then import ``pyoscode`` from anywhere. Omit the ``--user`` option if\nyou wish to install globally or in a virtual environment. If you have any\ndifficulties, check out the `FAQs - Installation\n<https://github.com/fruzsinaagocs/oscode#installation-1>`__ section below. \n\nYou can check that things are working by running `tests/` (also ran by Travis continuous integration):\n\n.. code:: bash\n\n   pytest tests/\n\nC++\n~~~\n\n``oscode`` is a header-only C++ package, it requires no installation.\n\n.. code:: bash\n\n   git clone https://github.com/fruzsinaagocs/oscode\n\nand then include the relevant header files in your C++ code:\n\n.. code:: c\n\n    #include \"solver.hpp\"\n    #include \"system.hpp\"\n\n\nQuick start\n-----------\n\nTry the following quick examples. They are available in the `examples\n<https://github.com/fruzsinaagocs/oscode/tree/master/examples/>`__.\n\nPython\n~~~~~~\n\n:Introduction to pyoscode: |intro_binder|\n:Cosmology examples: |cosmology_binder|\n:Scipy 2020 lecture notebook: |scipy_binder|\n\n.. |intro_binder| image:: https://mybinder.org/badge_logo.svg\n   :target: https://mybinder.org/v2/gh/fruzsinaagocs/oscode/master?filepath=examples/introduction_to_pyoscode.ipynb\n\n.. |cosmology_binder| image:: https://mybinder.org/badge_logo.svg\n   :target: https://mybinder.org/v2/gh/fruzsinaagocs/oscode/master?filepath=examples/cosmology.ipynb\n\n.. |scipy_binder| image:: https://mybinder.org/badge_logo.svg\n :target: https://mybinder.org/v2/gh/fruzsinaagocs/oscode/master?filepath=examples/pyoscode_scipy.ipynb\n\n\n.. image::\n    https://github.com/fruzsinaagocs/oscode/raw/master/pyoscode/images/spectra.gif\n    :width: 800\n\nC++\n~~~\n\n:Introduction to oscode: `examples/burst.cpp`\n:To plot results from `burst.cpp`: `examples/plot_burst.py`\n\nTo compile and run:\n\n.. code:: bash\n\n    g++ -g -Wall -std=c++11 -c -o burst.o burst.cpp\n    g++ -g -Wall -std=c++11 -o burst burst.o\n    ./burst\n\n\nDocumentation\n-------------\n\nDocumentation is hosted at `readthedocs <https://oscode.readthedocs.io>`__.\n\nTo build your own local copy of the documentation you can run:\n\n.. code:: bash\n\n   cd pyoscode/docs\n   make html\n\nCitation\n--------\n\nIf you use ``oscode`` to solve equations for a publication, please cite:\n\n- `Efficient method for solving highly oscillatory ordinary differential equations with applications to physical systems <https://doi.org/10.1103/PhysRevResearch.2.013030>`__,\n- `Dense output for highly oscillatory numerical solutions  <https://arxiv.org/abs/2007.05013>`__\n\nContributing\n------------\n\nAny comments and improvements to this project are welcome. You can contribute\nby:\n\n- Opening and `issue <https://www.github.com/fruzsinaagocs/oscode/issues/>`__ to report bugs and propose new features.\n- Making a pull request.\n\nFurther help\n------------\n\nYou can get help by submitting an issue or posting a message on `Gitter <https://gitter.im/oscode-help/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge>`__.\n\nFAQs\n----\n\nInstallation\n~~~~~~~~~~~~\n\n1. Eigen import errors:\n    .. code:: bash\n\n       pyoscode/_pyoscode.hpp:6:10: fatal error: Eigen/Dense: No such file or directory\n        #include <Eigen/Dense>\n                  ^~~~~~~~~~~~~\n\n    Try explicitly including the location of your Eigen library via the\n    ``CPLUS_INCLUDE_PATH`` environment variable, for example:\n\n    .. code:: bash\n\n       CPLUS_INCLUDE_PATH=/usr/include/eigen3 python setup.py install --user\n       # or \n       CPLUS_INCLUDE_PATH=/usr/include/eigen3 pip install pyoscode\n\n    where  ``/usr/include/eigen3`` should be replaced with your system-specific\n    eigen location.\n\nThanks\n------\n\nMany thanks to **Will Handley**, **Lukas Hergt**, **Anthony Lasenby**, and **Mike Hobson** for\ntheir support and advice regarding the algorithm behind `oscode`.\nThere are many packages without which some part of `oscode` (e.g. testing and\nexamples) wouldn't run as nicely and smoothly, thank you all developers for\nmaking and maintaining these open-source projects. A special thanks goes to the\ndevs of `exhale <https://pypi.org/project/exhale/>`__ for making the beautiful C++ documentation possible. \n\n\nChangelog\n---------\n\n- 1.0.2: current version\n    - Fixed getting correct numpy include directories\n- 1.0.1:\n    - Added `pyproject.toml` to handle build dependencies (numpy)\n- 1.0.0:\n    - Dense output\n    - Arrays for frequency and damping term need not be evenly spaced\n    - Automatic C++ documentation on readthedocs\n    - Eigen included in source for pip installability\n    - First pip release :)\n- 0.1.2:\n    - Bug that occurred when beginning and end of integration coincided\n      corrected\n- 0.1.1:\n    - Automatic detection of direction of integration\n- 0.1.0:\n    - Memory leaks at python interface fixed\n    - C++ documentation added",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fruzsinaagocs/oscode",
    "keywords": "PPS,cosmic inflation,cosmology,oscillatory,ODE",
    "license": "oscode",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyoscode",
    "package_url": "https://pypi.org/project/pyoscode/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyoscode/",
    "project_urls": {
      "Documentation": "https://oscode.readthedocs.io",
      "Homepage": "https://github.com/fruzsinaagocs/oscode"
    },
    "release_url": "https://pypi.org/project/pyoscode/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "oscode: Oscillatory ordinary differential equation solver",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8813267,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "639c034a8f0d4544674f31277c9a2ecc70ba9ea46010bfa7e33eb20caec4535f",
          "md5": "0fb39103ea4999a800d74e39c0dc3c3e",
          "sha256": "9a464d9bdb2d9704bbb2d957eb71765cd05883d6f2191793bd3062ac3a1e10d7"
        },
        "downloads": -1,
        "filename": "pyoscode-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0fb39103ea4999a800d74e39c0dc3c3e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 70199892,
        "upload_time": "2020-10-07T15:19:41",
        "upload_time_iso_8601": "2020-10-07T15:19:41.808845Z",
        "url": "https://files.pythonhosted.org/packages/63/9c/034a8f0d4544674f31277c9a2ecc70ba9ea46010bfa7e33eb20caec4535f/pyoscode-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96131197ec8d1baa55853928edc6a82798de3ac77c6c49b3734c52e35a032969",
          "md5": "7887a5c47d136713abd404bc6e9c7080",
          "sha256": "b70ae8f511fbf151afc2b7172ba417afea67abe531864b639177a09bae3fa5dc"
        },
        "downloads": -1,
        "filename": "pyoscode-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7887a5c47d136713abd404bc6e9c7080",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 820564,
        "upload_time": "2020-12-03T16:20:44",
        "upload_time_iso_8601": "2020-12-03T16:20:44.265391Z",
        "url": "https://files.pythonhosted.org/packages/96/13/1197ec8d1baa55853928edc6a82798de3ac77c6c49b3734c52e35a032969/pyoscode-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b67b00c03577bff52ce5ffa6d694887b76d09ee4d568198099eac9134a09a96",
          "md5": "edd5ea9cd6f912f791cc798f500be68a",
          "sha256": "aad2b47bb3a4d7ff487822aca76a3489622ed338a71009a33c6b4bb87aae6768"
        },
        "downloads": -1,
        "filename": "pyoscode-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "edd5ea9cd6f912f791cc798f500be68a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 820682,
        "upload_time": "2020-12-03T16:54:13",
        "upload_time_iso_8601": "2020-12-03T16:54:13.865669Z",
        "url": "https://files.pythonhosted.org/packages/6b/67/b00c03577bff52ce5ffa6d694887b76d09ee4d568198099eac9134a09a96/pyoscode-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6b67b00c03577bff52ce5ffa6d694887b76d09ee4d568198099eac9134a09a96",
        "md5": "edd5ea9cd6f912f791cc798f500be68a",
        "sha256": "aad2b47bb3a4d7ff487822aca76a3489622ed338a71009a33c6b4bb87aae6768"
      },
      "downloads": -1,
      "filename": "pyoscode-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "edd5ea9cd6f912f791cc798f500be68a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 820682,
      "upload_time": "2020-12-03T16:54:13",
      "upload_time_iso_8601": "2020-12-03T16:54:13.865669Z",
      "url": "https://files.pythonhosted.org/packages/6b/67/b00c03577bff52ce5ffa6d694887b76d09ee4d568198099eac9134a09a96/pyoscode-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}