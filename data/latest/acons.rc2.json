{
  "info": {
    "author": "Bosco Ho",
    "author_email": "apposite@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries",
      "Topic :: Utilities"
    ],
    "description": "\n# ACONS\n\nAn asynchronous command-line runner for use in async web-servers like [fastapi](https://fastapi.tiangolo.com/).\n\nSometimes, you want to run command-line utilities and expose the output to a web-server. However, it's a bit tricky to capture the console output while it's running, and also allow the web-client to kill the job mid-process.\n\n`acons` can execute command-line processes as an async function, where output can be retrieved via another async function, and a kill signal can be sent at any time.\n\n### Install\n\n    pip install acons\n\n### run\n\nFunction interface:\n\n    run(command, run_dir=None, is_parse=False, job_id=None)\n\n - `command`: str of command-line command\n - `run_dir`: optional starting directory of the command\n - `is_parse`: optional flag to parse the output as tsv file into a list\n             of dictionaries\n - `job_id`: optional id that will be used to `flush_lines` and `kill_job`\n\nTo use in an async function:\n\n    await acons.run('ls', job_id='my-special-id-123')\n\nTo test the output in a sync version:\n\n    import acons\n    output = acons.sync_run('ls')\n    \n### flush_lines\n\nIn an async function:\n    \n    lines = await acons.flush_lines('my-special-id-123')\n\nThis will return the console lines produced by the job since the last call to `acons.flush_lines`\n\n### kill_job\n\nIn an async function:\n\n    `await kill_job('my-special-id-123')\n\nSends the kill signal for the job.\n\n### Parameters d\n\n`acons.RUN_INTERVAL_IN_S = 0.2` - determines how long the function polls for each interval\n\n`acons.SLEEP_INTERVAL_IN_S = 0.5` - determines how long the function sleeps between intervals\n\n`acons.N_MAX_JOB = 100` - maximum number of jobs that stores output using an LRU cache\n\n## Example server\n\nA simple fastapi-server/vue-client is included that demonstrates `acons` in action. \n\nConcurrent command-line commands can be typed in and executed. The console output will be piped back into the web-client, and the job can be cancelled at any time.\n\nWhen the job is completed, the entire console output is made available through the Monaco web-editor . \n\nDownload the .zip version of this package, then run the server:\n\n    ./test-server.sh\n\nwhich is essentially:\n\n    uvicorn server:app --reload --port=5200\n\nCommunication between client/server is via an rpc-json interface as described in [rpcseed](https://github.com/boscoh/rpcseed).\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/boscoh/acons",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "acons",
    "package_url": "https://pypi.org/project/acons/",
    "platform": "",
    "project_url": "https://pypi.org/project/acons/",
    "project_urls": {
      "Homepage": "https://github.com/boscoh/acons"
    },
    "release_url": "https://pypi.org/project/acons/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Async command-line runner",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10774600,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb7b3986de5358100cf06667f11d5978e1c4e4d5af0cdd28317b7afb2ec3d329",
          "md5": "da89d85f6f0fa5138833d428cfa969cf",
          "sha256": "d9da11f597dd5e3c9299c18f6af54f8a5732042b681ba40a1030d77826451c1b"
        },
        "downloads": -1,
        "filename": "acons-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "da89d85f6f0fa5138833d428cfa969cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4820,
        "upload_time": "2021-06-16T03:16:09",
        "upload_time_iso_8601": "2021-06-16T03:16:09.562022Z",
        "url": "https://files.pythonhosted.org/packages/cb/7b/3986de5358100cf06667f11d5978e1c4e4d5af0cdd28317b7afb2ec3d329/acons-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06738302e59347480562b9b1874cdc2bbfab7a61b49beb1abb3290ee292ecb85",
          "md5": "d578bf88af931831fd259d6f37e87cfa",
          "sha256": "01a75ae3d38fd92fc05862b5be577e14b0feb11be48bdfc80f399707179e91fb"
        },
        "downloads": -1,
        "filename": "acons-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d578bf88af931831fd259d6f37e87cfa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3932,
        "upload_time": "2021-06-16T03:16:11",
        "upload_time_iso_8601": "2021-06-16T03:16:11.496418Z",
        "url": "https://files.pythonhosted.org/packages/06/73/8302e59347480562b9b1874cdc2bbfab7a61b49beb1abb3290ee292ecb85/acons-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "510b5de7a8ad50c4e74efcf22eb444dea59c45797ca8f882164b4d16b7f1b680",
          "md5": "d8d981efc8c5e5bda0db76879899e4e8",
          "sha256": "44edce3d61ec917437ac42209bef703feebc20b2d1eafcfad89a1da8873f9b28"
        },
        "downloads": -1,
        "filename": "acons-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d8d981efc8c5e5bda0db76879899e4e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8718,
        "upload_time": "2021-06-29T09:58:30",
        "upload_time_iso_8601": "2021-06-29T09:58:30.648877Z",
        "url": "https://files.pythonhosted.org/packages/51/0b/5de7a8ad50c4e74efcf22eb444dea59c45797ca8f882164b4d16b7f1b680/acons-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "510b5de7a8ad50c4e74efcf22eb444dea59c45797ca8f882164b4d16b7f1b680",
        "md5": "d8d981efc8c5e5bda0db76879899e4e8",
        "sha256": "44edce3d61ec917437ac42209bef703feebc20b2d1eafcfad89a1da8873f9b28"
      },
      "downloads": -1,
      "filename": "acons-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d8d981efc8c5e5bda0db76879899e4e8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8718,
      "upload_time": "2021-06-29T09:58:30",
      "upload_time_iso_8601": "2021-06-29T09:58:30.648877Z",
      "url": "https://files.pythonhosted.org/packages/51/0b/5de7a8ad50c4e74efcf22eb444dea59c45797ca8f882164b4d16b7f1b680/acons-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}