{
  "info": {
    "author": "Jeff Dairiki",
    "author_email": "dairiki@dairiki.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Plugins",
      "Environment :: Web Environment",
      "Framework :: Lektor",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Version Control :: Git",
      "Topic :: Text Processing"
    ],
    "description": "# Lektor-Git-Timestamp\n\n[![PyPI version](https://img.shields.io/pypi/v/lektor-git-timestamp.svg)](https://pypi.org/project/lektor-git-timestamp/)\n[![PyPI Supported Python Versions](https://img.shields.io/pypi/pyversions/lektor-git-timestamp.svg)](https://pypi.python.org/pypi/lektor-git-timestamp/)\n[![GitHub license](https://img.shields.io/github/license/dairiki/lektor-git-timestamp)](https://github.com/dairiki/lektor-git-timestamp/blob/master/LICENSE)\n[![GitHub Actions (Tests)](https://github.com/dairiki/lektor-git-timestamp/workflows/Tests/badge.svg)](https://github.com/dairiki/lektor-git-timestamp)\n\nThis Lektor plugin implements a new datetime-like type,\n`gittimestamp`, which gets it's default value from git timestamps.\nThis can be used to implement auto-updating `pub_date` and `last_mod`\nfields in Lektor datamodels.\n\n## Description\n\nThe `gittimestamp` type behaves just like the built-in `datetime`\ntype, except that if the field is left blank in `contents.lr` a\ndefault value will be deduced from git timestamps for the file (or\npossibly the file’s filesystem mtime.)\n\nIf an explicit value for the field is not found, the git log for the\nsource file (typically `contents.lr`) is searched using `git log\n--follow --remove-empty -- <source_filename>`, and the author\ntimestamp of all matching commits are considered.  Additionally, if\nthe source file is dirty with respect to git’s HEAD, or if the file is\nnot checked into the git tree, the file’s mtime is prepended to that\nlist of timestamps.  That list of timestamps is filtered based on the\n`ignore_commits` and `skip_first_commit` options (see below); then,\nfinally, a timestamp is selected from those that remain based on the\nsetting of the `strategy` option.\n\n### Options\n\nThe `gittimestamp` type supports the following options.\n\n#### `ignore_commits`\n\nThis can be set to a string, which is interpreted as a regular\nexpression.  Any git commits whose commit message matches this pattern\nare ignored when computing a default timestamp value for the field.\n(The matching is performed using `re.search`.)\n\n#### `skip_first_commit`\n\nIf this boolean option is set, the first commit in the git log for the\nsource file will be ignored.  This is useful for implementing a\n`last_mod` field which has a defined value only if the source file has\nactually been modified since the initial commit.\n\n#### `strategy`\n\nThis option determines which timestamp is selected from the git log\n(and/or the file mtime).  This can be set to one of four values:\n\n- `last`: If the source file is dirty (with respect to the git HEAD\n    tree), the mtime of the file is used.  Otherwise, the timestamp of\n    the last (nominally the most recent) non-ignored git commit is\n    used. This is the default strategy.\n\n- `first`: The timestamp of the first (nominally the earliest) commit\n    is used.\n\n- `latest`: The latest timestamp is used.  Normally this produces the same\n    result at `last`, however due to rebasing, cherry-picking, etc. the git timestamps\n    may not be monotonically increasing, in which case this option causes the\n    greatest (most recent) timestamp remaining after any filtering to be selected.\n\n- `earliest`: The earliest timestamp is used.  Normally this produces the same\n    result at `first`, but if the timestamps in the git log are not monotonic,\n    this will select the minimum of all the timestamps remaining after any filtering.\n\n## Examples\n\nHere is a simple example excerpt from a datamodel file:\n\n```ini\n<...>\n\n[fields.last_mod]\nlabel = Time last modified\ntype = gittimestamp\n\n```\n\nOn a page using the above datamodel, so long as the `last_mod` field\nis left blank in the `contents.lr` file, the page modification time\nwill be deduced from timestamp of the most recent git commit which\naffected that `contents.lr`.  (Or if that file is dirty, the value of\n`last_mod` will be taken from the file’s filesystem mtime.)\n\n----\n\nHere is a more complicated example which demonstrates the use of all the options.\n\n```ini\n<...>\n\n[fields.pub_date]\nlabel = Time first published\ntype = gittimestamp\nstrategy = first\n\n[fields.last_mod]\nlabel = Time last modified\ntype = gittimestamp\nignore_commits = \\[nochange\\]\nskip_first_commit = true\n\n```\n\nThis will get the default value of the `pub_date` field from the\ntimestamp of the first (earliest) git commit for the source file.\n\nThe default value for `last_mod` will, as in the previous example, be taken from the\nmost recent commit for the file, except that:\n\n- any commits whose commit message include the tag `[nochange]` will be ignored\n- the first commit (the one whose timestamp is used for `pub_date`) is ignored\n\nIf there has only been one commit of the source file, `last_mod` will not have\na default value.  (It will evaluate to a jinja2 Undefined instance.)\n\n## Warning: On sorting by `gittimestamp` in `Lektor <= 3.2`\n\nA common use case for timestamps is for sorting records.\nE.g. in a blog one generally wants to display posts in reverse\nchronological order by post date.  This generally won't work using\n`gittimestamp` timestamps under any currently released version of Lektor.\n\nThe `gittimestamp` type is implemented using a _field\ndescriptor_. (This is required in order to defer computation of the\nfield value until after the record for the page is available.) In\n`lektor<=3.2`, field descriptors are supported for most usages, the\n_one glaring exception_ being when sorting records.\n\nThis was fixed in Lektor PR\n[#789](https://github.com/lektor/lektor/pull/789) which was merged to\nthe master branch on February 6, 2021.\nUnfortunately, the last released version of Lektor (as of August 12,\n2021) is version 3.2, released August 20, 2020.  For now, you'll have\nto install Lektor from git if you want to be able to sort records by\n`gittimestamp`.\n\n## Author\n\nJeff Dairiki <dairiki@dairiki.org>\n\n## Changelog\n\n### Release 0.1.0.post1 (2021-08-12)\n\nNo code changes.\n\nAdd warning to README about `lektor > 3.2` (not yet released) being\nrequired in order to be able to sort records by `gittimestamp` fields.\n\n### Release 0.1 (2021-02-05)\n\nNo code changes.\n\nUpdate development status classifier to \"stable\".\n\nAdd functional tests.\n\n### Release 0.1a2 (2021-02-03)\n\n#### Bugs Fixed\n\nFixed attrocious typo which prevented the use of anything other than the\ndefault `strategy=last` for picking timestamps.\n\n### Release 0.1a1 (2020-06-16)\n\nInitial release.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dairiki/lektor-git-timestamp",
    "keywords": "Lektor plugin",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lektor-git-timestamp",
    "package_url": "https://pypi.org/project/lektor-git-timestamp/",
    "platform": "",
    "project_url": "https://pypi.org/project/lektor-git-timestamp/",
    "project_urls": {
      "Homepage": "https://github.com/dairiki/lektor-git-timestamp"
    },
    "release_url": "https://pypi.org/project/lektor-git-timestamp/0.1.post1/",
    "requires_dist": [
      "lektorlib"
    ],
    "requires_python": "",
    "summary": "Lektor type to deduce page modification time from git",
    "version": "0.1.post1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11166457,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e55748bed09f57bfd17a8603d3686edd69758a23d695e67ba190bf69a1ac097d",
          "md5": "447e7d51add3b07fff79fbb0fb5f981a",
          "sha256": "13401a99a72fba9f32244fd914901b7a8ad698625448f6f8c96cc1dc2d0ea8e3"
        },
        "downloads": -1,
        "filename": "lektor_git_timestamp-0.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "447e7d51add3b07fff79fbb0fb5f981a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6291,
        "upload_time": "2021-02-05T22:06:54",
        "upload_time_iso_8601": "2021-02-05T22:06:54.506290Z",
        "url": "https://files.pythonhosted.org/packages/e5/57/48bed09f57bfd17a8603d3686edd69758a23d695e67ba190bf69a1ac097d/lektor_git_timestamp-0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0de39356a5ac9badc239155fbeea67cf831575f43f9ccee54c7ddb4f9829575",
          "md5": "649af644e92fa22632ef2d9299ea7d36",
          "sha256": "b113ff25f74286b8606301701bad5735cc1f97e6d31209c2df372793479df5f0"
        },
        "downloads": -1,
        "filename": "lektor-git-timestamp-0.1.tar.gz",
        "has_sig": true,
        "md5_digest": "649af644e92fa22632ef2d9299ea7d36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11388,
        "upload_time": "2021-02-05T22:06:55",
        "upload_time_iso_8601": "2021-02-05T22:06:55.551033Z",
        "url": "https://files.pythonhosted.org/packages/f0/de/39356a5ac9badc239155fbeea67cf831575f43f9ccee54c7ddb4f9829575/lektor-git-timestamp-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c38068046961d9654040131c902fa83b1fa8d39212f50b338435c8bf0ac7d17",
          "md5": "90e54968595b4748054889565a409d39",
          "sha256": "669459f82717094bc62bde4c542ea351cde4b921784e1c8aaa6067e3d901e67f"
        },
        "downloads": -1,
        "filename": "lektor_git_timestamp-0.1.post1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "90e54968595b4748054889565a409d39",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6878,
        "upload_time": "2021-08-12T23:45:24",
        "upload_time_iso_8601": "2021-08-12T23:45:24.554358Z",
        "url": "https://files.pythonhosted.org/packages/4c/38/068046961d9654040131c902fa83b1fa8d39212f50b338435c8bf0ac7d17/lektor_git_timestamp-0.1.post1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3722a845659275b700e3d4dbec6f77bfd3153f7d52052fb4305b0b9e636e705a",
          "md5": "553cb5e9a73af101189f0cf64669659e",
          "sha256": "c20418c153116e0e57f2ff59649246c2edc0c1a337952dbbe11261041be19dd7"
        },
        "downloads": -1,
        "filename": "lektor-git-timestamp-0.1.post1.tar.gz",
        "has_sig": true,
        "md5_digest": "553cb5e9a73af101189f0cf64669659e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11506,
        "upload_time": "2021-08-12T23:45:25",
        "upload_time_iso_8601": "2021-08-12T23:45:25.602799Z",
        "url": "https://files.pythonhosted.org/packages/37/22/a845659275b700e3d4dbec6f77bfd3153f7d52052fb4305b0b9e636e705a/lektor-git-timestamp-0.1.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ec1b29fee4453b08b76cd9a9a7be7de5059860289f4fffa613ea8f5fca2d55c",
          "md5": "2efe84501efb23d9bbdb0f536d314807",
          "sha256": "0573f8a025ba785ff38836986f5bca1edfa33dbf6e07a631f12fcb3ebbb2d887"
        },
        "downloads": -1,
        "filename": "lektor_git_timestamp-0.1a1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "2efe84501efb23d9bbdb0f536d314807",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6193,
        "upload_time": "2020-06-16T23:19:56",
        "upload_time_iso_8601": "2020-06-16T23:19:56.658303Z",
        "url": "https://files.pythonhosted.org/packages/6e/c1/b29fee4453b08b76cd9a9a7be7de5059860289f4fffa613ea8f5fca2d55c/lektor_git_timestamp-0.1a1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "512b62edfb142cabd27a0aacc2612f8ad6784e00338b85aac0bb7469b5ed1857",
          "md5": "8d97804954da6e39355604e82be45440",
          "sha256": "b018ce585250cf22d2ac50b00474b15c294e41caff7f27b25274a561e07d6f6b"
        },
        "downloads": -1,
        "filename": "lektor-git-timestamp-0.1a1.tar.gz",
        "has_sig": true,
        "md5_digest": "8d97804954da6e39355604e82be45440",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9908,
        "upload_time": "2020-06-16T23:19:59",
        "upload_time_iso_8601": "2020-06-16T23:19:59.324005Z",
        "url": "https://files.pythonhosted.org/packages/51/2b/62edfb142cabd27a0aacc2612f8ad6784e00338b85aac0bb7469b5ed1857/lektor-git-timestamp-0.1a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35f8743b0a5001528aabf5d5623aabd7c690cb90ab4783da6de484993e8a9dbf",
          "md5": "be3465be47ca099144d02c4001ef02f7",
          "sha256": "bde69999fa9b63b0283e3871e087d7ba912b7385f5759de5cc56bc584d007adc"
        },
        "downloads": -1,
        "filename": "lektor_git_timestamp-0.1a2-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "be3465be47ca099144d02c4001ef02f7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6259,
        "upload_time": "2021-02-04T02:38:05",
        "upload_time_iso_8601": "2021-02-04T02:38:05.822781Z",
        "url": "https://files.pythonhosted.org/packages/35/f8/743b0a5001528aabf5d5623aabd7c690cb90ab4783da6de484993e8a9dbf/lektor_git_timestamp-0.1a2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a084e43a1ec59c57b2c545c5ac19aa07f0ee8db0917039640463b5af76edf5b7",
          "md5": "0b08cbd87fd6b95408bcca693d922431",
          "sha256": "b5572fd7f0e6e1fa31fbb142449b2c87e5e2595038b01b84f3dbf39d5b8895c3"
        },
        "downloads": -1,
        "filename": "lektor-git-timestamp-0.1a2.tar.gz",
        "has_sig": true,
        "md5_digest": "0b08cbd87fd6b95408bcca693d922431",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10102,
        "upload_time": "2021-02-04T02:38:22",
        "upload_time_iso_8601": "2021-02-04T02:38:22.768310Z",
        "url": "https://files.pythonhosted.org/packages/a0/84/e43a1ec59c57b2c545c5ac19aa07f0ee8db0917039640463b5af76edf5b7/lektor-git-timestamp-0.1a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4c38068046961d9654040131c902fa83b1fa8d39212f50b338435c8bf0ac7d17",
        "md5": "90e54968595b4748054889565a409d39",
        "sha256": "669459f82717094bc62bde4c542ea351cde4b921784e1c8aaa6067e3d901e67f"
      },
      "downloads": -1,
      "filename": "lektor_git_timestamp-0.1.post1-py2.py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "90e54968595b4748054889565a409d39",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 6878,
      "upload_time": "2021-08-12T23:45:24",
      "upload_time_iso_8601": "2021-08-12T23:45:24.554358Z",
      "url": "https://files.pythonhosted.org/packages/4c/38/068046961d9654040131c902fa83b1fa8d39212f50b338435c8bf0ac7d17/lektor_git_timestamp-0.1.post1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3722a845659275b700e3d4dbec6f77bfd3153f7d52052fb4305b0b9e636e705a",
        "md5": "553cb5e9a73af101189f0cf64669659e",
        "sha256": "c20418c153116e0e57f2ff59649246c2edc0c1a337952dbbe11261041be19dd7"
      },
      "downloads": -1,
      "filename": "lektor-git-timestamp-0.1.post1.tar.gz",
      "has_sig": true,
      "md5_digest": "553cb5e9a73af101189f0cf64669659e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11506,
      "upload_time": "2021-08-12T23:45:25",
      "upload_time_iso_8601": "2021-08-12T23:45:25.602799Z",
      "url": "https://files.pythonhosted.org/packages/37/22/a845659275b700e3d4dbec6f77bfd3153f7d52052fb4305b0b9e636e705a/lektor-git-timestamp-0.1.post1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}