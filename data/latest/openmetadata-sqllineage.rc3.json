{
  "info": {
    "author": "OpenMetadata Committers",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "# SQLLineage\nSQL Lineage Analysis Tool powered by Python.\n\nThis is a fork authored by the OpenMetadata community, where we are adding `sqlfluff` as a parsing backend instead of `sqlparse`.\n\n[![image](https://img.shields.io/pypi/v/sqllineage.svg)](https://pypi.org/project/sqllineage/)\n[![image](https://img.shields.io/pypi/status/sqllineage.svg)](https://pypi.org/project/sqllineage/)\n[![image](https://img.shields.io/pypi/pyversions/sqllineage.svg)](https://pypi.org/project/sqllineage/)\n[![image](https://img.shields.io/pypi/l/sqllineage.svg)](https://pypi.org/project/sqllineage/)\n[![Build Status](https://github.com/reata/sqllineage/workflows/build/badge.svg)](https://github.com/reata/sqllineage/actions)\n[![Documentation Status](https://readthedocs.org/projects/sqllineage/badge/?version=latest)](https://sqllineage.readthedocs.io/en/latest/?badge=latest)\n[![codecov](https://codecov.io/gh/reata/sqllineage/branch/master/graph/badge.svg)](https://codecov.io/gh/reata/sqllineage)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![security: bandit](https://img.shields.io/badge/security-bandit-yellow.svg)](https://github.com/PyCQA/bandit)\n\nNever get the hang of a SQL parser? SQLLineage comes to the rescue. Given a SQL command, SQLLineage will tell you its\nsource and target tables, without worrying about Tokens, Keyword, Identifier and all the jagons used by SQL parsers.\n\nBehind the scene, SQLLineage uses the fantastic [`sqlparse`](https://github.com/andialbrecht/sqlparse) library to parse \nthe SQL command, and bring you all the human-readable result with ease.\n\n## Demo & Documentation\nTalk is cheap, show me a [demo](https://reata.github.io/sqllineage/).\n\n[Documentation](https://sqllineage.readthedocs.io) is online hosted by readthedocs, and you can check the \n[release note](https://sqllineage.readthedocs.io/en/latest/release_note/changelog.html) there.\n\n\n## Quick Start\nInstall sqllineage via PyPI:\n```bash\n$ pip install sqllineage\n```\n\nUsing sqllineage command to parse a quoted-query-string:\n```\n$ sqllineage -e \"insert into db1.table1 select * from db2.table2\"\nStatements(#): 1\nSource Tables:\n    db2.table2\nTarget Tables:\n    db1.table1\n```\n\nOr you can parse a SQL file with -f option:\n```\n$ sqllineage -f foo.sql\nStatements(#): 1\nSource Tables:\n    db1.table_foo\n    db1.table_bar\nTarget Tables:\n    db2.table_baz\n```\n\n## Advanced Usage\n\n### Multiple SQL Statements\nLineage result combined for multiple SQL statements, with intermediate tables identified:\n```\n$ sqllineage -e \"insert into db1.table1 select * from db2.table2; insert into db3.table3 select * from db1.table1;\"\nStatements(#): 2\nSource Tables:\n    db2.table2\nTarget Tables:\n    db3.table3\nIntermediate Tables:\n    db1.table1\n```\n\n### Verbose Lineage Result\nAnd if you want to see lineage result for every SQL statement, just toggle verbose option\n```\n$ sqllineage -v -e \"insert into db1.table1 select * from db2.table2; insert into db3.table3 select * from db1.table1;\"\nStatement #1: insert into db1.table1 select * from db2.table2;\n    table read: [Table: db2.table2]\n    table write: [Table: db1.table1]\n    table cte: []\n    table rename: []\n    table drop: []\nStatement #2: insert into db3.table3 select * from db1.table1;\n    table read: [Table: db1.table1]\n    table write: [Table: db3.table3]\n    table cte: []\n    table rename: []\n    table drop: []\n==========\nSummary:\nStatements(#): 2\nSource Tables:\n    db2.table2\nTarget Tables:\n    db3.table3\nIntermediate Tables:\n    db1.table1\n```\n\n### Column-Level Lineage\nWe also support column level lineage in command line interface, set level option to column, all column lineage path will \nbe printed.\n\n```sql\nINSERT OVERWRITE TABLE foo\nSELECT a.col1,\n       b.col1     AS col2,\n       c.col3_sum AS col3,\n       col4,\n       d.*\nFROM bar a\n         JOIN baz b\n              ON a.id = b.bar_id\n         LEFT JOIN (SELECT bar_id, sum(col3) AS col3_sum\n                    FROM qux\n                    GROUP BY bar_id) c\n                   ON a.id = sq.bar_id\n         CROSS JOIN quux d;\n\nINSERT OVERWRITE TABLE corge\nSELECT a.col1,\n       a.col2 + b.col2 AS col2\nFROM foo a\n         LEFT JOIN grault b\n              ON a.col1 = b.col1;\n```\n\nSuppose this sql is stored in a file called foo.sql\n\n```\n$ sqllineage -f foo.sql -l column\n<default>.corge.col1 <- <default>.foo.col1 <- <default>.bar.col1\n<default>.corge.col2 <- <default>.foo.col2 <- <default>.baz.col1\n<default>.corge.col2 <- <default>.grault.col2\n<default>.foo.* <- <default>.quux.*\n<default>.foo.col3 <- c.col3_sum <- <default>.qux.col3\n<default>.foo.col4 <- col4\n```\n\n### Lineage Visualization\nOne more cool feature, if you want a graph visualization for the lineage result, toggle graph-visualization option\n\nStill using the above SQL file\n```\nsqllineage -g -f foo.sql\n```\nA webserver will be started, showing DAG representation of the lineage result in browser:\n\n- Table-Level Lineage\n\n<img src=\"https://raw.githubusercontent.com/reata/sqllineage/master/docs/_static/table.jpg\" alt=\"Table-Level Lineage\">\n\n- Column-Level Lineage\n\n<img src=\"https://raw.githubusercontent.com/reata/sqllineage/master/docs/_static/column.jpg\" alt=\"Column-Level Lineage\">\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/open-metadata/openmetadata-sqllineage",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "openmetadata-sqllineage",
    "package_url": "https://pypi.org/project/openmetadata-sqllineage/",
    "platform": null,
    "project_url": "https://pypi.org/project/openmetadata-sqllineage/",
    "project_urls": {
      "Homepage": "https://github.com/open-metadata/openmetadata-sqllineage"
    },
    "release_url": "https://pypi.org/project/openmetadata-sqllineage/1.0.2/",
    "requires_dist": [
      "sqlparse (>=0.3.1)",
      "networkx (>=2.4)",
      "sqlfluff (==2.0.0a6)",
      "bandit (==1.7.1) ; extra == 'ci'",
      "black ; extra == 'ci'",
      "flake8 ; extra == 'ci'",
      "flake8-blind-except ; extra == 'ci'",
      "flake8-builtins ; extra == 'ci'",
      "flake8-import-order ; extra == 'ci'",
      "flake8-logging-format ; extra == 'ci'",
      "mypy (==0.971) ; extra == 'ci'",
      "pytest ; extra == 'ci'",
      "pytest-cov ; extra == 'ci'",
      "tox ; extra == 'ci'",
      "twine ; extra == 'ci'",
      "wheel ; extra == 'ci'",
      "Sphinx (>=3.2.0) ; extra == 'docs'",
      "sphinx-rtd-theme (>=0.5.0) ; extra == 'docs'"
    ],
    "requires_python": ">=3.7",
    "summary": "OpenMetadata SQL Lineage for Analysis Tool powered by Python and sqlfluff based on sqllineage.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17204683,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9336a3acbd2cbfa525933ad946c953c9e70a5beace6b7409d274a4053ca5e85b",
          "md5": "c4692d4888288d43dc0f59c6bfb59a0e",
          "sha256": "326cadfa6373e7405ecfda3b97ee46b21f93d1ad7aab4538d86475167edc63f3"
        },
        "downloads": -1,
        "filename": "openmetadata_sqllineage-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c4692d4888288d43dc0f59c6bfb59a0e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4366024,
        "upload_time": "2023-01-18T14:49:12",
        "upload_time_iso_8601": "2023-01-18T14:49:12.207933Z",
        "url": "https://files.pythonhosted.org/packages/93/36/a3acbd2cbfa525933ad946c953c9e70a5beace6b7409d274a4053ca5e85b/openmetadata_sqllineage-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48bfea3d10c8b60598d9fa846544b9f25c7b73e63bc141ba630af6edffcc6ac5",
          "md5": "0c67c9a5b49c08f4a9853791acd51238",
          "sha256": "88bae45f07c52e971a8378bf8668532a4b6bf80bd90d62a448dc4c1a33c5659a"
        },
        "downloads": -1,
        "filename": "openmetadata-sqllineage-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0c67c9a5b49c08f4a9853791acd51238",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4597427,
        "upload_time": "2023-01-18T14:49:15",
        "upload_time_iso_8601": "2023-01-18T14:49:15.203467Z",
        "url": "https://files.pythonhosted.org/packages/48/bf/ea3d10c8b60598d9fa846544b9f25c7b73e63bc141ba630af6edffcc6ac5/openmetadata-sqllineage-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "028ddb9a0cc2421b90d99b167615ea3e13387708c04d6658f4a4ad2e03cd2cf8",
          "md5": "417979c132af278314321d46907277e8",
          "sha256": "77b845412e10338dccab6f263c5fee08719ce7f19aefcc574acbbdd578f68954"
        },
        "downloads": -1,
        "filename": "openmetadata_sqllineage-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "417979c132af278314321d46907277e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4366267,
        "upload_time": "2023-01-19T17:41:35",
        "upload_time_iso_8601": "2023-01-19T17:41:35.828205Z",
        "url": "https://files.pythonhosted.org/packages/02/8d/db9a0cc2421b90d99b167615ea3e13387708c04d6658f4a4ad2e03cd2cf8/openmetadata_sqllineage-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18098fe51244f1f26f220b0a41cd8e079846fa09a75c712e45f09faa6c6079d5",
          "md5": "bf08327e47b22c3ec7627df52bfa30e1",
          "sha256": "dd58623e6c38aa0a3a6c1a1f0f57fee63727d0df9964a3ad99b77a46a55668af"
        },
        "downloads": -1,
        "filename": "openmetadata-sqllineage-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bf08327e47b22c3ec7627df52bfa30e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4597656,
        "upload_time": "2023-01-19T17:41:38",
        "upload_time_iso_8601": "2023-01-19T17:41:38.623464Z",
        "url": "https://files.pythonhosted.org/packages/18/09/8fe51244f1f26f220b0a41cd8e079846fa09a75c712e45f09faa6c6079d5/openmetadata-sqllineage-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6dd3fc149c95177666c8333bd861046480bdbf102fc25fc600cca833255a2b75",
          "md5": "2a0612c64ae452231418da42d1f3ffc8",
          "sha256": "cf82117ca661178a9d598c878d806deae3f4562140196ba48841f90671369f08"
        },
        "downloads": -1,
        "filename": "openmetadata_sqllineage-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a0612c64ae452231418da42d1f3ffc8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4391329,
        "upload_time": "2023-03-08T09:31:57",
        "upload_time_iso_8601": "2023-03-08T09:31:57.422238Z",
        "url": "https://files.pythonhosted.org/packages/6d/d3/fc149c95177666c8333bd861046480bdbf102fc25fc600cca833255a2b75/openmetadata_sqllineage-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b45376e810d4bc6af63d204c5854c8d1072212c4ce70584be26d338292f47a68",
          "md5": "4fe4219cd285f7254083b27a4cb765e5",
          "sha256": "eb2e7004d2309f6e138e8b3a66c65303de8ed40467823c21ff79f54d06ae306d"
        },
        "downloads": -1,
        "filename": "openmetadata-sqllineage-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4fe4219cd285f7254083b27a4cb765e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4622516,
        "upload_time": "2023-03-08T09:31:59",
        "upload_time_iso_8601": "2023-03-08T09:31:59.985964Z",
        "url": "https://files.pythonhosted.org/packages/b4/53/76e810d4bc6af63d204c5854c8d1072212c4ce70584be26d338292f47a68/openmetadata-sqllineage-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6dd3fc149c95177666c8333bd861046480bdbf102fc25fc600cca833255a2b75",
        "md5": "2a0612c64ae452231418da42d1f3ffc8",
        "sha256": "cf82117ca661178a9d598c878d806deae3f4562140196ba48841f90671369f08"
      },
      "downloads": -1,
      "filename": "openmetadata_sqllineage-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2a0612c64ae452231418da42d1f3ffc8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 4391329,
      "upload_time": "2023-03-08T09:31:57",
      "upload_time_iso_8601": "2023-03-08T09:31:57.422238Z",
      "url": "https://files.pythonhosted.org/packages/6d/d3/fc149c95177666c8333bd861046480bdbf102fc25fc600cca833255a2b75/openmetadata_sqllineage-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b45376e810d4bc6af63d204c5854c8d1072212c4ce70584be26d338292f47a68",
        "md5": "4fe4219cd285f7254083b27a4cb765e5",
        "sha256": "eb2e7004d2309f6e138e8b3a66c65303de8ed40467823c21ff79f54d06ae306d"
      },
      "downloads": -1,
      "filename": "openmetadata-sqllineage-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4fe4219cd285f7254083b27a4cb765e5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 4622516,
      "upload_time": "2023-03-08T09:31:59",
      "upload_time_iso_8601": "2023-03-08T09:31:59.985964Z",
      "url": "https://files.pythonhosted.org/packages/b4/53/76e810d4bc6af63d204c5854c8d1072212c4ce70584be26d338292f47a68/openmetadata-sqllineage-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}