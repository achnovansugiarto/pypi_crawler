{
  "info": {
    "author": "Phillip Wenig <phillip.wenig@hpi.de>",
    "author_email": "Phillip Wenig <phillip.wenig@hpi.de>",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python"
    ],
    "description": "<div align=\"center\">\n<img width=\"100px\" src=\"./Logo.png\" alt=\"Series2Graph++ logo\"/>\n\n# Series2Graph++\n\n[![release info](https://img.shields.io/badge/Release-1.0.2-blue)](https://gitlab.hpi.de/phillip.wenig/s2gpp/-/releases/1.0.2)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![pipeline status](https://gitlab.hpi.de/akita/s2gpp/badges/main/pipeline.svg)](https://gitlab.hpi.de/akita/s2gpp/-/commits/main)\n[![dependency status](https://deps.rs/crate/s2gpp/1.0.2/status.svg)](https://deps.rs/crate/s2gpp/1.0.2)\n</div>\n\n_Series2Graph++_ (S2G++) is a time series anomaly detection algorithm based on the [Series2Graph](https://helios2.mi.parisdescartes.fr/~themisp/series2graph/) (S2G) and the [DADS](https://hpi.de/naumann/s/dads) algorithms. \nS2G++ can handle multivariate time series whereas S2G and DADS can cope with only univariate time series. \nMoreover, S2G++ takes ideas from DADS to run distributedly in a computer cluster.\nS2G++ is written in _Rust_ and leverages the [actix](https://github.com/actix/actix) and [actix-telepathy](https://github.com/wenig/actix-telepathy) libraries.\n\n## Quick Start\n\n### Requirements\n\n- Rust 1.58\n- openblas\n- (Docker)\n\nTo have `openblas` available to the Rust build process, do the following on Debian (Linux):\n\n```shell\nsudo apt install build-essential gfortran libopenblas-base libopenblas-dev gcc\n```\n\n### Installation\n\n#### From source\n\n```shell\ngit pull https://gitlab.hpi.de/akita/s2gpp\ncd s2gpp\ncargo build\n```\n\n#### Docker\n\nThe base image `akita/rust-base` must be available to your machine.\n\n```shell\ngit pull https://gitlab.hpi.de/akita/s2gpp\ncd s2gpp\ndocker build s2gpp .\n```\n\n### Usage (bin)\n\n#### Parameters\n\nPattern:\n```shell\ns2gpp --local-host <IP:Port> --pattern-length <Int> --latent <Int> --query-length <Int> --rate <Int> --threads <Int> --cluster-nodes <Int> --score-output-path <Path> [main --data-path <Path> | sub --mainhost <IP:Port>]\n```\n\nS2G++ expects one of two sub-commands with its specific parameters:\n\n- `main` (The head computer in a cluster)\n  - `data-path` (The path to the input time series)\n- `sub` (The other computers in a cluster; only necessary in a distributed setting)\n  - `mainhost` (The ip-address to the main computer in a cluster)\n\nBefore these sub-commands are used, general parameters must be defined:\n\n- `local-host` (The ip-address with port to bind the listener on.)\n- `pattern-length` (Size of the sliding window, independent of anomaly length, but should in the best case be larger.)\n- `latent` (Size of latent embedding space. This space is the input for the PCA calculation afterwards.)\n- `query-length` (Size of the sliding windows used to find anomalies (query subsequences). query-length must be >= pattern-length!)\n- `rate` (Number of angles used to extract pattern nodes. A higher value will lead to high precision, but at the cost of increased computation time.)\n- `threads` (Number of helper threads started besides the main thread. (min=1))\n- `cluster-nodes` (Size of the computer cluster.)\n- `score-output-path` (Path the score are written to.)\n- `column-start-idx` (How many columns to skip)\n- `column-end-idx` (Until which column to use (exclusive). Can also take negative numbers to count from the end.)\n- `self-correction` (Whether S2G++ will correct the direction of the time embedding if too few\n  transactions are available)\n\n#### Input Format\n\nThe input format of the time series is expected to be a CSV with header. Each column represents a channel of the timeseries.\nSometimes, time series files include also the labels and an index. You can skip columns with the `column-start-idx` / `column-end-idx` range pattern. It behave like Python ranges.\n\n### Usage (lib)\n\n_Cargo.toml_\n```toml\n[dependencies]\ns2gpp = \"1.0.2\"\n```\n\n_your Rust app_\n\n```rust\nfn some_fn(timeseries: Array2<f32>) -> Result<Array1<f32>, ()> {\n  let params = s2gpp::Parameters::default();\n  let anomaly_score = s2gpp::s2gpp(params, Some(timeseries))?.unwrap();\n  Ok(anomaly_score)\n}\n```\n\n## Python\n\nWe have wrapped the Rust code in a [Python package](https://pypi.org/project/s2gpp/), that can be used without installing Rust.\n\n### Installation\n\n#### PyPI\n\n```shell\npip install s2gpp\n```\n\n#### Build with Docker\n\n```shell\nmake build-docker\npip install wheels/s2gpp-*.whl\n```\n\n#### Build from Source\n\n```shell\nmake install\n```\n\n### Usage\n\n#### Single Machine\n\n```python\nfrom s2gpp import Series2GraphPP\nimport pandas as pd\n\nts = pd.read_csv(\"data/ts_0.csv\").values\n\nmodel = Series2GraphPP(pattern_length=100)\nanomaly_scores = model.fit_predict(ts)\n```\n\n#### Distributed\n\n```python\nfrom s2gpp import DistributedSeries2GraphPP\nfrom pathlib import Path\n\n# run on one machine\ndef main_node():\n    dataset_path = Path(\"data/ts_0.csv\")\n  \n    model = DistributedSeries2GraphPP.main(local_host=\"127.0.0.1:1992\", n_cluster_nodes=2, pattern_length=100)\n    model.fit_predict(dataset_path)\n\n# run on other machine\ndef sub_node():\n    model = DistributedSeries2GraphPP.sub(local_host=\"127.0.0.1:1993\", mainhost=\"127.0.0.1:1992\", n_cluster_nodes=2, pattern_length=100)\n    model.fit_predict()\n```\n\n## Cite\n\nPlease cite this work, when using it!\n\n```bibtex\n@software{Wenig_Series2Graph_2022,\n  author = {Wenig, Phillip},\n  month = {6},\n  title = {{Series2Graph++}},\n  version = {1.0.2},\n  year = {2022}\n}\n```\n\n## References\n\n[1] P. Boniol and T. Palpanas, Series2Graph: Graph-based Subsequence Anomaly Detection in Time Series, PVLDB (2020) [link](https://helios2.mi.parisdescartes.fr/~themisp/series2graph/data/Series2Graph.pdf)\n\n[2] Schneider, J., Wenig, P. & Papenbrock, T. Distributed detection of sequential anomalies in univariate time series. The VLDB Journal 30, 579â€“602 (2021). [link](https://doi.org/10.1007/s00778-021-00657-6)\n\n",
    "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/HPI-Information-Systems/S2Gpp",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "s2gpp",
    "package_url": "https://pypi.org/project/s2gpp/",
    "platform": null,
    "project_url": "https://pypi.org/project/s2gpp/",
    "project_urls": {
      "Homepage": "https://github.com/HPI-Information-Systems/S2Gpp",
      "repository": "https://github.com/HPI-Information-Systems/S2Gpp"
    },
    "release_url": "https://pypi.org/project/s2gpp/1.0.2/",
    "requires_dist": [
      "scikit-learn~=1.1"
    ],
    "requires_python": "",
    "summary": "Algorithm for Highly Efficient Detection of Correlation Anomalies in Multivariate Time Series",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14140584,
  "releases": {
    "0.8.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "272f772ab0d8650aafe5ab616276272ef44a221b15837310b9328d071b7e1340",
          "md5": "c51505c4b7f5c3a31f42d5d03b760cd0",
          "sha256": "a219e0078694bbbcaec43a26c877311ce03aa485dcb36c7ffce29f52705de139"
        },
        "downloads": -1,
        "filename": "s2gpp-0.8.1-cp39-cp39-manylinux_2_27_x86_64.whl",
        "has_sig": false,
        "md5_digest": "c51505c4b7f5c3a31f42d5d03b760cd0",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 3897264,
        "upload_time": "2022-06-01T08:38:33",
        "upload_time_iso_8601": "2022-06-01T08:38:33.952889Z",
        "url": "https://files.pythonhosted.org/packages/27/2f/772ab0d8650aafe5ab616276272ef44a221b15837310b9328d071b7e1340/s2gpp-0.8.1-cp39-cp39-manylinux_2_27_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a83f497284871e3e460df55fe1135c2d7b8d94b349d276fcc46a29cb307a3730",
          "md5": "2463c3f74796dd6c8ad32ffb9f37b3c9",
          "sha256": "74f8aacba577e817ac2a999ae275cad8e8da694fb36a8d649a5aeb97c91f0ace"
        },
        "downloads": -1,
        "filename": "s2gpp-0.8.2-cp38-cp38-manylinux_2_28_x86_64.whl",
        "has_sig": false,
        "md5_digest": "2463c3f74796dd6c8ad32ffb9f37b3c9",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 3786828,
        "upload_time": "2022-06-01T09:57:05",
        "upload_time_iso_8601": "2022-06-01T09:57:05.410883Z",
        "url": "https://files.pythonhosted.org/packages/a8/3f/497284871e3e460df55fe1135c2d7b8d94b349d276fcc46a29cb307a3730/s2gpp-0.8.2-cp38-cp38-manylinux_2_28_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e84d7d68ca27335e1ad6863a61ed0318d2bba73c6ac19269ee38e8c8dffa45cb",
          "md5": "23ae28494c86598b8bfe6e71c74bcb05",
          "sha256": "af75b18cc4a6d8fe0e41a75f1900e9febf795512b718d9372aefb7e39233ba67"
        },
        "downloads": -1,
        "filename": "s2gpp-1.0.0-cp38-cp38-manylinux_2_28_x86_64.whl",
        "has_sig": false,
        "md5_digest": "23ae28494c86598b8bfe6e71c74bcb05",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 3857299,
        "upload_time": "2022-06-03T09:26:27",
        "upload_time_iso_8601": "2022-06-03T09:26:27.224727Z",
        "url": "https://files.pythonhosted.org/packages/e8/4d/7d68ca27335e1ad6863a61ed0318d2bba73c6ac19269ee38e8c8dffa45cb/s2gpp-1.0.0-cp38-cp38-manylinux_2_28_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "874231ffe825531c14535bf9b13d96a1ec6930d7fbf57e8faab12899fdf563b6",
          "md5": "80e2042742d4b516aade27c86900b72d",
          "sha256": "e9c972c60b88be9fd5796436eb0f4bee35465a96b4243ae21bf7531cb15c585f"
        },
        "downloads": -1,
        "filename": "s2gpp-1.0.1-cp38-cp38-manylinux_2_28_x86_64.whl",
        "has_sig": false,
        "md5_digest": "80e2042742d4b516aade27c86900b72d",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 3076936,
        "upload_time": "2022-06-15T14:14:12",
        "upload_time_iso_8601": "2022-06-15T14:14:12.477615Z",
        "url": "https://files.pythonhosted.org/packages/87/42/31ffe825531c14535bf9b13d96a1ec6930d7fbf57e8faab12899fdf563b6/s2gpp-1.0.1-cp38-cp38-manylinux_2_28_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3c1d0857ceaa7cbc78e4497df8a704f421afcd9bc229b9a2448a277027f0b41",
          "md5": "0fa443a017bc680cd88998919d9f4d8f",
          "sha256": "9d558eec07a68d28c0cba15f3cc5b809b71af9ca6668ba8298a50b6cb7d40e86"
        },
        "downloads": -1,
        "filename": "s2gpp-1.0.2-cp38-cp38-manylinux_2_28_x86_64.whl",
        "has_sig": false,
        "md5_digest": "0fa443a017bc680cd88998919d9f4d8f",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 3060036,
        "upload_time": "2022-06-15T14:45:38",
        "upload_time_iso_8601": "2022-06-15T14:45:38.680785Z",
        "url": "https://files.pythonhosted.org/packages/c3/c1/d0857ceaa7cbc78e4497df8a704f421afcd9bc229b9a2448a277027f0b41/s2gpp-1.0.2-cp38-cp38-manylinux_2_28_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c3c1d0857ceaa7cbc78e4497df8a704f421afcd9bc229b9a2448a277027f0b41",
        "md5": "0fa443a017bc680cd88998919d9f4d8f",
        "sha256": "9d558eec07a68d28c0cba15f3cc5b809b71af9ca6668ba8298a50b6cb7d40e86"
      },
      "downloads": -1,
      "filename": "s2gpp-1.0.2-cp38-cp38-manylinux_2_28_x86_64.whl",
      "has_sig": false,
      "md5_digest": "0fa443a017bc680cd88998919d9f4d8f",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": null,
      "size": 3060036,
      "upload_time": "2022-06-15T14:45:38",
      "upload_time_iso_8601": "2022-06-15T14:45:38.680785Z",
      "url": "https://files.pythonhosted.org/packages/c3/c1/d0857ceaa7cbc78e4497df8a704f421afcd9bc229b9a2448a277027f0b41/s2gpp-1.0.2-cp38-cp38-manylinux_2_28_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}