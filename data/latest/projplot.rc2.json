{
  "info": {
    "author": "Kanika Choptra, Martin Lysy",
    "author_email": "mlysy@uwaterloo.ca",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# **projplot**: Utilities for Creating Projection Plots\n\n**projplot** provides a set of tools to assess whether or not an optimization algorithm has converged to a local optimum.  Its main function does this by visualizing the \"projection plots\" of the objective function `f(x)` -- that is, by plotting `f` against each coordinate of `x` with the other coordinates fixed at the corresponding elements of the candidate optimal solution `x_opt`.  \n\nThis package has a similar goal to the R package [**optimCheck**](https://github.com/mlysy/optimCheck).\n\n## Installation\n\nThis package is available on [PyPi](https://pypi.org/project/projplot/) and can be installed as follows:\n\n```bash\npip install projplot\n```\n\n## Documentation\n\nAvailable on [Read the Docs](http://projplot.readthedocs.io/).\n\n## Example\n\nAn overview of the package functionality is illustrated with the following example. Let `f(x) = x^TAx - 2b^Tx` denote a quadratic objective function in `x`, which is in the d-dimensional real space. If `A` is a positive-definite `d x d` matrix, then the unique minimum of `f(x)` is `x_opt =A^{-1}b`. \n\nFor example, suppose we have\n\n```python\nimport numpy as np\n\nA = np.array([[3., 2.],\n              [2., 7.]])\nb = np.array([1., 10.])\n```\n\nThen we have that the optimal solution is `x_opt = (-0.765, 1.647)`. Now, **projplot** allows us to complete a visual check. The following information will need to be provided:\n\n* The objective function (`obj_fun`): This can be either a vectorized or non-vectorized function. \n*  Optimal values (`x_opt`): This will be the optimal solution for your function. \n*  Upper and lower bounds for each parameter (`x_lims`): This will provide an initial range of values to observe.\n*  Parameter names (`x_names`): These are the names of your parameters, i.e. theta, mu, sigma\n*  The number of points to plot for each parameter (`n_pts`): This is the number of points that each parameter will be evaluated at for their respective plot. \n\n```python\n# Optimal values\nx_opt = np.array([-0.765,  1.647])\n\n# Upper and lower bounds for each component of x\nx_lims = np.array([[-3., 1], [0, 4]])\n\n# Parameter names\nx_names = [\"x1\", \"x2\"]\n\n# Number of evaluation points per coordinate\nn_pts = 10\n\nimport projplot as pjp\n\ndef obj_fun(x):\n    '''Compute x'Ax - 2b'x.'''\n    y = np.dot(np.dot(x.T, A), x) - 2 * np.dot(b, x)\n    return y\n\n# Obtain plots with vertical x lines\npjp.proj_plot(obj_fun, x_opt=x_opt, x_lims=x_lims,\n              x_names=x_names, n_pts=n_pts,\n              opt_vlines=True)\n```\n\n![alt](docs/images/plot_vlines.png)\n\n### Further Reading\n\nSee documentation for [advanced use cases](https://projplot.readthedocs.io/en/latest/example.html#advanced-use-cases) and an [FAQ](https://projplot.readthedocs.io/en/latest/faq.html).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kanikadchopra/projplot",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "projplot",
    "package_url": "https://pypi.org/project/projplot/",
    "platform": null,
    "project_url": "https://pypi.org/project/projplot/",
    "project_urls": {
      "Bug Tracker": "https://github.com/mlysy/projplot",
      "Homepage": "https://github.com/kanikadchopra/projplot"
    },
    "release_url": "https://pypi.org/project/projplot/1.0/",
    "requires_dist": [
      "numpy",
      "pandas",
      "seaborn"
    ],
    "requires_python": "",
    "summary": "Projection plots for assessing convergence of optimization routines",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15771014,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81f3df1c89bc5cba14a0a0b09ce525270637371181e09bc8dad0e9dd7f210360",
          "md5": "8077e62a81abb2c9475453536332a3d1",
          "sha256": "7585c9083bbba66cd9a5a25caef17013f6312fcb84f21175a622fbae940f68fe"
        },
        "downloads": -1,
        "filename": "projplot-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8077e62a81abb2c9475453536332a3d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15681,
        "upload_time": "2022-07-03T22:49:38",
        "upload_time_iso_8601": "2022-07-03T22:49:38.549182Z",
        "url": "https://files.pythonhosted.org/packages/81/f3/df1c89bc5cba14a0a0b09ce525270637371181e09bc8dad0e9dd7f210360/projplot-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1be65f68647c235f7496f917f40fcf29ca18fa99e2c1b3edbe0da9ad28bcdebb",
          "md5": "c50f474462ec6a6b56e36a02fae314fa",
          "sha256": "0ccc2dd8ec0dc6effebcb077ae7640eff8953e713d85a05f1b1309800b5d28e8"
        },
        "downloads": -1,
        "filename": "projplot-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c50f474462ec6a6b56e36a02fae314fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17604,
        "upload_time": "2022-03-02T05:00:13",
        "upload_time_iso_8601": "2022-03-02T05:00:13.271434Z",
        "url": "https://files.pythonhosted.org/packages/1b/e6/5f68647c235f7496f917f40fcf29ca18fa99e2c1b3edbe0da9ad28bcdebb/projplot-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e1f79610239b679b496853d050ebf52f42a935376a740cef23d75acace55f17",
          "md5": "16dccf005831e7d631674f362d916883",
          "sha256": "323bc79c88803c6d75da4948bd1590a18739bcfc1bdbb4d8e01e5414fc5f6fb9"
        },
        "downloads": -1,
        "filename": "projplot-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "16dccf005831e7d631674f362d916883",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5554,
        "upload_time": "2022-11-15T04:10:10",
        "upload_time_iso_8601": "2022-11-15T04:10:10.651615Z",
        "url": "https://files.pythonhosted.org/packages/1e/1f/79610239b679b496853d050ebf52f42a935376a740cef23d75acace55f17/projplot-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1e1f79610239b679b496853d050ebf52f42a935376a740cef23d75acace55f17",
        "md5": "16dccf005831e7d631674f362d916883",
        "sha256": "323bc79c88803c6d75da4948bd1590a18739bcfc1bdbb4d8e01e5414fc5f6fb9"
      },
      "downloads": -1,
      "filename": "projplot-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "16dccf005831e7d631674f362d916883",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5554,
      "upload_time": "2022-11-15T04:10:10",
      "upload_time_iso_8601": "2022-11-15T04:10:10.651615Z",
      "url": "https://files.pythonhosted.org/packages/1e/1f/79610239b679b496853d050ebf52f42a935376a740cef23d75acace55f17/projplot-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}