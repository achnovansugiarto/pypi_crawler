{
  "info": {
    "author": "Reduan Achtibat",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<h3 align=\"center\">\n  <img src=\"images/crp_logo.png\" width=\"400\"/>\n\n  An open-source library for neural network interpretability built on [zennit](https://github.com/chr5tphr/zennit) \n\n  with Relevance and Activation Maximization.\n</h3>\n\n[![PyPI version](https://badge.fury.io/py/zennit-crp.svg)](https://badge.fury.io/py/zennit-crp)\n![Tests status](https://img.shields.io/badge/tests-passing-brightgreen)\n\n## **Concept Relevance Propagation (CRP)**\ncomputes conditional attributions for in latent space defined concepts that allow to\n- localize concepts in input space\n- compute their relative importance to the final classification output\n- and hierarchically decompose higher-level concepts into low-level concepts\n\nIn addition, this repository ships with\n\n## **Relevance Maximization**\n\nan explaining-by-example strategy for concepts that illustrates the most <em>useful</em> pattern for prediction, unlike _Activation Maximization_, which reveals patterns that lead to _strong activation_.\n\n## **Activation Maximization**\nas reference sampling approach and class-wide statistics are also supplied for comparision.\n\nCurious? Then take a look at our [preprint](https://arxiv.org/abs/2206.03208):\n\n```\n@article{achtibat2022from,\n  title = {From \"Where\" to \"What\": Towards Human-Understandable Explanations through Concept Relevance Propagation},\n  author  = {Achtibat, Reduan and\n             Dreyer, Maximilian and\n             Eisenbraun, Ilona and\n             Bosse, Sebastian and\n             Wiegand, Thomas and\n             Samek, Wojciech and\n             Lapuschkin, Sebastian},\n  journal={arXiv},\n  year = {2022},\n  volume={abs/2206.03208},\n  doi     = {10.48550/ARXIV.2206.03208},\n  url     = {https://arxiv.org/abs/2206.03208},\n}\n\n```\n\n## Why Concept Relevance Propagation?\n\nFor a detailed discussion, feel free to check out the paper, but here we will give a summary of the most exciting features:\n\n<details>\n  <summary>Overview</summary>\nCRP applied on three age range predictions given different input samples from the Adience dataset\nfor age and gender estimation.\n\n![text](https://raw.githubusercontent.com/rachtibat/zennit-crp/master/images/overview.png \"Title\")\n\n**(Left):** Traditional heatmaps are rather\nuninformative despite being class-specific.\nHere, heatmaps only hint at the locations of relevant body parts, but what feature(s) in particular the model has recognized in those regions remains open for interpretation by the stakeholder, which, depending on the domain, may prove to be highly ambiguous. In this case, they indicate that the model seems to focus on the eye region during inference in all cases.\n\n**(Rightmost):** Intermediate features encoded by the model in general\ncan be investigated using global XAI (Activation or Relevance Maximization). Choosing a particular layer, individual channels can be\nassigned concepts. However, during\ninference, global XAI alone does not inform which features are recognized, used and combined\nby the model in per-sample inference.\n\n**(Center):** By combining local and global XAI, _glocal_ XAI is able to assign (relevance) attribution scores to individual neuron(-group)s. This tells, which concepts have been involved in a particular prediction. Further, concept-conditional heatmaps can be computed, indicating where a recognized concept identified as relevant has its origin in a sample’s input space. Vice versa, choosing a specific region in input space, the local relevance attribution, responsible concepts can be traced\nback. Lastly, peripheral information can be masked out of the shown reference examples using\nconditionally computed heatmap attributions for further focusing the feature visualization on the\nconcept’s defining parts, which increases interpretability and clarity:\n\nConcentrating on the eye region, we immediately recognize that the topmost sample has been predicted into age group (3-7)\ndue to the sample’s large irides and round eyes, while the middle sample is predicted as (25-32), as\nmore of the sclera is visible and eyebrows are more ostensible. For the bottom sample the model\nhas predicted class (60+) based on its recognition of heavy wrinkles around the eyes and on the\neyelids, and pronounced tear sacs next to a large knobby nose.\n\n</details>\n\n<details>\n  <summary>Disentangling Explanations</summary>\n\n<img src=\"images/disentangling.png\"/>\n\nTarget concept “dog” is described by a combination of lower-level concepts such as “snout”, “eye” and “fur”. CRP heatmaps regarding individual concepts, and their contribution to the prediction of “dog”, can be generated by applying masks to filter-channels in the backward pass. Global (in the context of an input sample) relevance of a concept wrt. to the explained prediction can thus not only be measured in latent space, but also precisely visualized, localized and measured in input space. The concept-conditional computation reveals the relatively high importance of the spatially distributed “fur” feature for the prediction of “dog”, compared to the feature “eye”.\n\n</details>\n\n<details>\n  <summary>Localization of Concepts</summary>\n\n<img src=\"images/local.png\" width=300/>\n\nCRP applied in combination with local aggregation of relevance scores over regions $I_1$ and $I_2$ in order to locally assess conceptual importance and localize concepts involved in inference.\n\n</details>\n\n<details>\n  <summary>Relevance vs. Activation Maximization</summary>\n\nActivation- and relevance-based sample selection.\n\n![text](https://raw.githubusercontent.com/rachtibat/zennit-crp/master/images/relevance_maximization.png \"Title\")\n\n**a)** Activation scores only measure\nthe stimulation of a latent filter without considering its role and impact during inference. Relevance scores are contextual to distinct model outputs and describe how features\nare utilized in a DNN’s prediction of a specific class.\n\n**b)** As a result, samples selected\nbased on Activation Maximization only represent maximized latent neuron activation, while\nsamples based on Relevance Maximization represent features which are actually useful and\nrepresentative for solving a prediction task.\n\n_(A) ActMax identifies a concept that encodes for white strokes. RelMax, however, shows that this concept is not simply used to find white strokes, but white characters!_\n\n**c)** Assume we wish to find representative examples for features $x_1$\nand $x_2$. Even though a sample leads to a high activation score in a given layer and neuron (group) — here $x_1$ and $x_2$ — it does not necessarily result in high relevance or contribution to inference: The feature transformation $w$ of a linear layer with inputs $x_1$ and $x_2$, which is followed by a ReLU non-linearity, is shown. Here, samples from the blue cluster of feature activations lead to high activation values for both features $x_1$ and $x_2$, and would be selected by ActMax, but receive zero relevance, as they lead to an inactive neuron output after the ReLU, and are thus of no value to following layers. That is, even though\nthe given samples activate features $x_1$ and $x_2$ maximally strong, they can not contribute\nmeaningfully to the prediction process through the context determined by $w$. Thus, samples\nselected as representative via activation might not be representative to the overall decision\nprocess of the model. Representative examples selected based on relevance, however, are\nguaranteed to play an important role in the model’s decision process.\n\n**d):** Correlation analyses are shown for an intermediate ResNet layer’s channel and neuron. Neurons that are on average highly activated are not, in general, also highly relevant, as a correlation coeﬀicient of $c = 0.111$ shows, since a specific combination of activation magnitudes is important for neurons to be representative in a larger model context.\n\n</details>\n\n<details>\n  <summary>Hierarchical Concept Decomposition through Attribution Graphs</summary>\n\nDecomposing a high-level concept into its lower-level concepts.\n\n<img src=\"images/hierarchical.png\" width=400/>\n\nGiven an interesting concept encoded by channel j in layer l, relevance quantities computed during a CRP backward pass can then be utilized to identify how its relevance distributes across lower layer channels (here shown side-by-side in an exploded view).\n\n</details>\n\n## Project status\n\nProject is under active development but should be stable. Please expect interfaces to change in future releases.\n\n## Installation\n\nTo install directly from PyPI using pip, write:\n\n```shell\n$ pip install zennit-crp[fast_img]\n```\n\nAlternatively, install from a manually cloned repository to try out the tutorials:\n\n```shell\n$ git clone https://github.com/rachtibat/zennit-crp\n$ pip install ./zennit-crp\n```\n\n## Documentation\n\nStill under development, but you can refer to the tutorials below.\nDocstrings are also missing in some places.\n\n## Tutorials\n\nCheck out the [jupyter notebook tutorials.](https://github.com/rachtibat/zennit-crp/tree/master/tutorials) Please start with attribution and then feature_visualization.\n\n## Quickstart\n\n### Conditional Attributions\n\n```python\nfrom crp.attribution import CondAttribution\nfrom crp.concepts import ChannelConcept\nfrom crp.helper import get_layer_names\n\nfrom zennit.composites import EpsilonPlusFlat\nfrom zennit.canonizers import SequentialMergeBatchNorm\n\n# define LRP rules and canonizers in zennit\ncomposite = EpsilonPlusFlat([SequentialMergeBatchNorm()])\n\n# load CRP toolbox\nattribution = CondAttribution(model)\n\n# here, each channel is defined as a concept\n# or define your own notion!\ncc = ChannelConcept()\n\n# get layer names of Conv2D and MLP layers\nlayer_names = get_layer_names(model, [nn.Conv2d, nn.Linear])\n\n# get a conditional attribution for channel 50 in layer features.27 wrt. output 1\nconditions = [{'features.27': [50], 'y': [1]}]\n\nattr = attribution(data, conditions, composite, record_layer=layer_names)\n\n# heatmap and prediction\nattr.heatmap, attr.prediction\n# activations and relevances for each layer name\nattr.activations, attr.relevances\n\n# relative importance of each concept for final prediction\nrel_c = cc.attribute(attr.relevances['features.40'])\n# most relevant channels in features.40\nconcept_ids = torch.argsort(rel_c, descending=True)\n```\n\n### Feature Visualization\n\n```python\nfrom crp.visualization import FeatureVisualization\nfrom crp.image import plot_grid\n\n# define which concept is used in each layer\nlayer_map = {(name, cc) for name in layer_names}\n\n# compute visualization (it takes for VGG16 and ImageNet testset on Titan RTX 30 min)\nfv = FeatureVisualization(attribution, dataset, layer_map)\nfv.run(composite, 0, len(dataset))\n\n# visualize MaxRelevance reference images for top-5 concepts\nref_c = fv.get_max_reference(composite, concept_ids[:5], 'features.40', 'relevance')\n\nplot_grid(ref_c)\n```\n\n## Roadmap\n\nComing soon...\n\n- [ ] Unit tests\n- [ ] Distributed HPC-Cluster support\n- [ ] Complete MaskHook Tutorial\n- [ ] Visualization for the Attribution Graph\n- [ ] Documentation\n\n## Contributing\n\n### Code Style\n\nWe use [PEP8](https://www.python.org/dev/peps/pep-0008) with a line-width of 120 characters. For\ndocstrings we use [numpydoc](https://numpydoc.readthedocs.io/en/latest/format.html).\n\nWe use [`pylint`](https://pypi.org/project/pylint/) for style checks.\n\nTests are still missing.\n\nWe are open to any improvements (:\n\n## License\n\nBSD 3-Clause Clear License\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rachtibat/zennit-crp",
    "keywords": "",
    "license": "BSD 3-Clause Clear License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zennit-crp",
    "package_url": "https://pypi.org/project/zennit-crp/",
    "platform": null,
    "project_url": "https://pypi.org/project/zennit-crp/",
    "project_urls": {
      "Homepage": "https://github.com/rachtibat/zennit-crp"
    },
    "release_url": "https://pypi.org/project/zennit-crp/0.5.3/",
    "requires_dist": [
      "zennit (<=0.4.6)",
      "torch (>=1.7.0)",
      "tqdm",
      "matplotlib",
      "Pillow-SIMD ; extra == 'fast_img'"
    ],
    "requires_python": ">=3.8",
    "summary": "Concept Relevance Propagation and Relevance Maximization",
    "version": "0.5.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16374762,
  "releases": {
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41a71cd23854a4aa9fdf5594948e0c1105db63629cf5e8712170b69da40b37e0",
          "md5": "d098ffdc1ddd8f46c8bd40137947fca8",
          "sha256": "66244301034ed414558f3bf0ad9cae7136929ce4047e11c25fbf8e1d953d43b2"
        },
        "downloads": -1,
        "filename": "zennit_crp-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d098ffdc1ddd8f46c8bd40137947fca8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 27858,
        "upload_time": "2022-06-10T23:34:25",
        "upload_time_iso_8601": "2022-06-10T23:34:25.653764Z",
        "url": "https://files.pythonhosted.org/packages/41/a7/1cd23854a4aa9fdf5594948e0c1105db63629cf5e8712170b69da40b37e0/zennit_crp-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8189def02064f9f1f6f340d53e6d5f408471768da66b4a80c1351381377ceafc",
          "md5": "af78e13b1d19bda0b31b0bfc20380a8b",
          "sha256": "ba00e246f3bdad8a6cfbb4fa8ace70320e090d76fabda7a1b946126d69bdf92f"
        },
        "downloads": -1,
        "filename": "zennit-crp-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "af78e13b1d19bda0b31b0bfc20380a8b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 28089,
        "upload_time": "2022-06-10T23:34:27",
        "upload_time_iso_8601": "2022-06-10T23:34:27.771907Z",
        "url": "https://files.pythonhosted.org/packages/81/89/def02064f9f1f6f340d53e6d5f408471768da66b4a80c1351381377ceafc/zennit-crp-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00cd9810d788f00ee6bd049a2fb19e43d8d61df1b79896f49764ae44a1f8ca72",
          "md5": "f30987bc06925f47f032134156d746af",
          "sha256": "be9b07ce92996c997bd3fbbf2a7d6522af9072ff27b21c5918e0b7e17b28c42f"
        },
        "downloads": -1,
        "filename": "zennit_crp-0.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f30987bc06925f47f032134156d746af",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 27618,
        "upload_time": "2022-06-11T01:00:29",
        "upload_time_iso_8601": "2022-06-11T01:00:29.132524Z",
        "url": "https://files.pythonhosted.org/packages/00/cd/9810d788f00ee6bd049a2fb19e43d8d61df1b79896f49764ae44a1f8ca72/zennit_crp-0.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "433c8a01e8e326a023071438c9619a1d7313aa20d8b2f0d8a210217d0393c991",
          "md5": "838c8ecd2531fad04da9fb61b5a7a7b6",
          "sha256": "db23071b959b7839da38d2c8bbbff19019e601b0f8b9d490121ff59e3d0262dd"
        },
        "downloads": -1,
        "filename": "zennit-crp-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "838c8ecd2531fad04da9fb61b5a7a7b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 27899,
        "upload_time": "2022-06-11T01:00:31",
        "upload_time_iso_8601": "2022-06-11T01:00:31.241644Z",
        "url": "https://files.pythonhosted.org/packages/43/3c/8a01e8e326a023071438c9619a1d7313aa20d8b2f0d8a210217d0393c991/zennit-crp-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07a6c423c26ae81d1fed5f006072682cd1381bcfec33f8cd7314a5a0d2375c27",
          "md5": "1c769d72286107db749a2ae17bc47cbb",
          "sha256": "a2abb611767341a9fea9d5b47629e57e822eb1002130d83202c7669498cd41c4"
        },
        "downloads": -1,
        "filename": "zennit_crp-0.4.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c769d72286107db749a2ae17bc47cbb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 27624,
        "upload_time": "2022-07-14T19:27:13",
        "upload_time_iso_8601": "2022-07-14T19:27:13.545065Z",
        "url": "https://files.pythonhosted.org/packages/07/a6/c423c26ae81d1fed5f006072682cd1381bcfec33f8cd7314a5a0d2375c27/zennit_crp-0.4.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec1cd21b8062e3407593b98a1471ba8bd2c15cdf8e70731e83db180e73621c89",
          "md5": "800b5319f17696c31613c8cfac717e77",
          "sha256": "32b055fab59b6510341cd6aae09abad29b31ef165ee555dd4be01c5208e0d9ab"
        },
        "downloads": -1,
        "filename": "zennit-crp-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "800b5319f17696c31613c8cfac717e77",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 27917,
        "upload_time": "2022-07-14T19:27:15",
        "upload_time_iso_8601": "2022-07-14T19:27:15.789150Z",
        "url": "https://files.pythonhosted.org/packages/ec/1c/d21b8062e3407593b98a1471ba8bd2c15cdf8e70731e83db180e73621c89/zennit-crp-0.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c6e9ffcaac3a4be57a3354104525288b79f93e39bc275f37cc5a62984a1f5fe",
          "md5": "57a644b785287ad8728a786e357e9222",
          "sha256": "8f5f39c74a90802f44de0b5e9e0abf59d99caab48a52794942f80e9b1a0468c1"
        },
        "downloads": -1,
        "filename": "zennit_crp-0.4.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "57a644b785287ad8728a786e357e9222",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 27808,
        "upload_time": "2022-11-01T10:58:52",
        "upload_time_iso_8601": "2022-11-01T10:58:52.182277Z",
        "url": "https://files.pythonhosted.org/packages/5c/6e/9ffcaac3a4be57a3354104525288b79f93e39bc275f37cc5a62984a1f5fe/zennit_crp-0.4.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15c1aac86c968b31dc33e7a90d3beb52166a41b7d92f1822caf42a57973f8bc5",
          "md5": "28981a9ad0a0b6f4db56361500cd24cb",
          "sha256": "8babdf3cedad0c621ceb59fa9f50c5b6db1412698d39f662d4a99122e1aefdda"
        },
        "downloads": -1,
        "filename": "zennit-crp-0.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "28981a9ad0a0b6f4db56361500cd24cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 28078,
        "upload_time": "2022-11-01T10:58:53",
        "upload_time_iso_8601": "2022-11-01T10:58:53.869088Z",
        "url": "https://files.pythonhosted.org/packages/15/c1/aac86c968b31dc33e7a90d3beb52166a41b7d92f1822caf42a57973f8bc5/zennit-crp-0.4.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "302934dc297ce8b1bf2aa3d056d1d478300648e8560cae48bcc34972d51f6c6d",
          "md5": "5ba96dcd91d63316d8e0bb180fd4f231",
          "sha256": "dcb811d499b0ae19b42c6f3f67ca38aaae13331ecf73ce3649b8b18cafd4fbd9"
        },
        "downloads": -1,
        "filename": "zennit_crp-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ba96dcd91d63316d8e0bb180fd4f231",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 33107,
        "upload_time": "2022-11-01T11:16:10",
        "upload_time_iso_8601": "2022-11-01T11:16:10.841595Z",
        "url": "https://files.pythonhosted.org/packages/30/29/34dc297ce8b1bf2aa3d056d1d478300648e8560cae48bcc34972d51f6c6d/zennit_crp-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3eb1d30847a82658e24bb498f735511271d4404a95a0fc426521828b0d51f803",
          "md5": "329f21a056f58271d3d2ed3c31858a21",
          "sha256": "e2e63c1e24856ef4114087233bde99fb4f31813e7d87e15d99aa069ec4e7b5a3"
        },
        "downloads": -1,
        "filename": "zennit-crp-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "329f21a056f58271d3d2ed3c31858a21",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 32664,
        "upload_time": "2022-11-01T11:16:12",
        "upload_time_iso_8601": "2022-11-01T11:16:12.666400Z",
        "url": "https://files.pythonhosted.org/packages/3e/b1/d30847a82658e24bb498f735511271d4404a95a0fc426521828b0d51f803/zennit-crp-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02b4126cd276a8890d750eeb45462cbecb546dd8473b85abb676cb5cadf9f78c",
          "md5": "136daa763e138b8eeda0b258f26bfa16",
          "sha256": "1078fceefb3a8f3d0963c869f89f7e57f24457a8a80e0c2fbcbf8a69f117d6be"
        },
        "downloads": -1,
        "filename": "zennit_crp-0.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "136daa763e138b8eeda0b258f26bfa16",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 32687,
        "upload_time": "2022-12-05T13:53:41",
        "upload_time_iso_8601": "2022-12-05T13:53:41.505039Z",
        "url": "https://files.pythonhosted.org/packages/02/b4/126cd276a8890d750eeb45462cbecb546dd8473b85abb676cb5cadf9f78c/zennit_crp-0.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5da38ddc9e1a7f6346625a68b058322dd0810a548e2330e3edf3e29962dc4d3d",
          "md5": "7f90047f6d5bd3615195af3bade1abb3",
          "sha256": "1dfd7bb3e65d05f1a2ff5463560b2dcbf1ccb257138b6d24adbfa55accc9a33f"
        },
        "downloads": -1,
        "filename": "zennit-crp-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7f90047f6d5bd3615195af3bade1abb3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 32998,
        "upload_time": "2022-12-05T13:53:43",
        "upload_time_iso_8601": "2022-12-05T13:53:43.721250Z",
        "url": "https://files.pythonhosted.org/packages/5d/a3/8ddc9e1a7f6346625a68b058322dd0810a548e2330e3edf3e29962dc4d3d/zennit-crp-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68695665a42dd8352c5c4cb781646709a6676977005a234f3e1af597f7c7818e",
          "md5": "065d104a5d081d03c721a8c8aed2076e",
          "sha256": "67209008de575f3753e85973c1fcfd92e573628277b54e7ec9262ff2f49536d6"
        },
        "downloads": -1,
        "filename": "zennit_crp-0.5.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "065d104a5d081d03c721a8c8aed2076e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 32782,
        "upload_time": "2023-01-10T13:03:31",
        "upload_time_iso_8601": "2023-01-10T13:03:31.007773Z",
        "url": "https://files.pythonhosted.org/packages/68/69/5665a42dd8352c5c4cb781646709a6676977005a234f3e1af597f7c7818e/zennit_crp-0.5.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e5d432c976e097b99e2b391cdd60c2860e4ad8b548d24ee7ee7ca0727b17145",
          "md5": "7362fba68c65f74e67988aa1d67add79",
          "sha256": "ee5a9e77539e494840070d118b92e380f9e79448947f0c28f31fb9c6b9ba43ee"
        },
        "downloads": -1,
        "filename": "zennit-crp-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7362fba68c65f74e67988aa1d67add79",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 33335,
        "upload_time": "2023-01-10T13:03:33",
        "upload_time_iso_8601": "2023-01-10T13:03:33.514879Z",
        "url": "https://files.pythonhosted.org/packages/6e/5d/432c976e097b99e2b391cdd60c2860e4ad8b548d24ee7ee7ca0727b17145/zennit-crp-0.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "68695665a42dd8352c5c4cb781646709a6676977005a234f3e1af597f7c7818e",
        "md5": "065d104a5d081d03c721a8c8aed2076e",
        "sha256": "67209008de575f3753e85973c1fcfd92e573628277b54e7ec9262ff2f49536d6"
      },
      "downloads": -1,
      "filename": "zennit_crp-0.5.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "065d104a5d081d03c721a8c8aed2076e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 32782,
      "upload_time": "2023-01-10T13:03:31",
      "upload_time_iso_8601": "2023-01-10T13:03:31.007773Z",
      "url": "https://files.pythonhosted.org/packages/68/69/5665a42dd8352c5c4cb781646709a6676977005a234f3e1af597f7c7818e/zennit_crp-0.5.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6e5d432c976e097b99e2b391cdd60c2860e4ad8b548d24ee7ee7ca0727b17145",
        "md5": "7362fba68c65f74e67988aa1d67add79",
        "sha256": "ee5a9e77539e494840070d118b92e380f9e79448947f0c28f31fb9c6b9ba43ee"
      },
      "downloads": -1,
      "filename": "zennit-crp-0.5.3.tar.gz",
      "has_sig": false,
      "md5_digest": "7362fba68c65f74e67988aa1d67add79",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 33335,
      "upload_time": "2023-01-10T13:03:33",
      "upload_time_iso_8601": "2023-01-10T13:03:33.514879Z",
      "url": "https://files.pythonhosted.org/packages/6e/5d/432c976e097b99e2b391cdd60c2860e4ad8b548d24ee7ee7ca0727b17145/zennit-crp-0.5.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}