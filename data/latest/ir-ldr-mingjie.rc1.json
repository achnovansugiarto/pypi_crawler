{
  "info": {
    "author": "Mingjie Jian",
    "author_email": "ssaajianmingjie@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: IPython",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Astronomy"
    ],
    "description": "# ir_ldr\n\nThe package `ir_ldr` is for measuring the spectral line depth of the APOGEE and WINERED spectra, calculating the line depth ratio (LDR) and finally deriving the effective temperature (T_LDR).\n\nThe LDR-Teff relations inside this package are from [Jian+19](https://ui.adsabs.harvard.edu/abs/2019MNRAS.485.1310J/abstract), [Taniguchi+18](https://ui.adsabs.harvard.edu/abs/2018MNRAS.473.4993T/abstract) and Jian+20a (in prep.). Please also refer to [Fukue+15](https://ui.adsabs.harvard.edu/abs/2015ApJ...812...64F/abstract).\n\nThis package relys on `numpy`, `pandas`, `matplotlib` and `scipy`; it is based on python 3.\n\n# Installation\n\n`pip install ir_ldr`\n\n# Tutorial\n\nThe synthetic spectra of a dwarf star (Teff=5000 K, logg=4.5 dex and feh=0 dex; generated from MOOG) in `ir_ldr/file/dwarf` for an example of T_LDR calculation.\n\n```py\n# Load the linelist.\nlinelist = ir_ldr.load_linelist('yj', 'dwarf-j20a')\n\n# Here we use all the orders of synthetic spectra.\nfor order in [43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57]:\n    # Load the synthetic spectra\n    spec = pd.read_csv(ir_ldr.__path__[0] + '/file/example_spectra/dwarf/order{}.txt'.format(order),\n                       sep=' +', skiprows=2, engine='python', names=['wav', 'residual'])\n    wav = spec['wav'].values\n    residual = spec['residual'].values\n\n    # Select the line pairs for a specific order\n    linelist_sub = linelist[linelist['order'] == order]\n    if len(linelist_sub) == 0:\n        continue\n    linelist_sub.reset_index(drop=True, inplace=True)\n\n    # Measure the line depth of low(1)- and high(2)-EP line.\n    # Here the signal to noise ratio for the target star and telluric standard are\n    # manually set as 300, but the S_N of synthetic spectra is much higher than that.\n    d1 = ir_ldr.depth_measure(wav, residual, linelist_sub['linewav1'], suffix=1, S_N=[300, 300])\n    d2 = ir_ldr.depth_measure(wav, residual, linelist_sub['linewav2'], suffix=2, S_N=[300, 300])\n\n    # Calculate the logLDR value.\n    lgLDR = ir_ldr.cal_ldr(d1, d2, type='lgLDR')\n    # Combine the Dataframes of one order.\n    record = ir_ldr.combine_df([linelist_sub, d1, d2, lgLDR])\n\n    if order == 43:\n        record_all = record\n    else:\n        record_all = pd.concat([record_all, record], sort=False)\n\n# Calculate T_LDR\nLDR = ir_ldr.ldr2tldr_winered_solar(record_all, df_output=True)\n```\n\nAnd the result `(T_LDR, T_LDR_err)` is:\n```py\nLDR[0:2]\n>>> (5009.857201559249, 22.35966233607925)\n# Note the T_LDR_err is not an accurate estimation here since the S_N is manually set.\n```\n\n# Author\n\nMingjie Jian (ssaajianmingjie@gmail.com)\n\nPhD student, Department of Astronomy, the University of Tokyo\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MingjieJian/ir_ldr",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ir-ldr-mingjie",
    "package_url": "https://pypi.org/project/ir-ldr-mingjie/",
    "platform": "",
    "project_url": "https://pypi.org/project/ir-ldr-mingjie/",
    "project_urls": {
      "Homepage": "https://github.com/MingjieJian/ir_ldr"
    },
    "release_url": "https://pypi.org/project/ir-ldr-mingjie/0.1.4/",
    "requires_dist": [
      "numpy (>=1.17.0)",
      "pandas (>=0.20.0)",
      "matplotlib (>=3.0.0)",
      "scipy (>=1.0.0)"
    ],
    "requires_python": "",
    "summary": "The python package to deal with infrared LDR and Teff.",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6841137,
  "releases": {
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0013a1272092cd828fb95441b98bdae6a2f165444cee6964d667b6c7b12822a4",
          "md5": "7d47c47afddd80791fa47ed03a04451e",
          "sha256": "723e7ba3f02ef111e76ec282ee09137d23626fb243069875496aabafdd8be55b"
        },
        "downloads": -1,
        "filename": "ir_ldr_mingjie-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d47c47afddd80791fa47ed03a04451e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 163661,
        "upload_time": "2020-03-19T04:35:10",
        "upload_time_iso_8601": "2020-03-19T04:35:10.944735Z",
        "url": "https://files.pythonhosted.org/packages/00/13/a1272092cd828fb95441b98bdae6a2f165444cee6964d667b6c7b12822a4/ir_ldr_mingjie-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0013a1272092cd828fb95441b98bdae6a2f165444cee6964d667b6c7b12822a4",
        "md5": "7d47c47afddd80791fa47ed03a04451e",
        "sha256": "723e7ba3f02ef111e76ec282ee09137d23626fb243069875496aabafdd8be55b"
      },
      "downloads": -1,
      "filename": "ir_ldr_mingjie-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7d47c47afddd80791fa47ed03a04451e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 163661,
      "upload_time": "2020-03-19T04:35:10",
      "upload_time_iso_8601": "2020-03-19T04:35:10.944735Z",
      "url": "https://files.pythonhosted.org/packages/00/13/a1272092cd828fb95441b98bdae6a2f165444cee6964d667b6c7b12822a4/ir_ldr_mingjie-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}