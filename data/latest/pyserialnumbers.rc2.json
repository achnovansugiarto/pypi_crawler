{
  "info": {
    "author": "Fabrice Voillat",
    "author_email": "dev@dassym.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PySerialNumbers\nThe *PySerialNumbers* library offers functionalities for manipulating serial numbers.\nIn particular the possibility of reading a character string formatted according to the ad hoc grammar,\nthen of converting it into a list of serial numbers.\n\nVersion: 1.0.0 (2022-10-17)\n\nThis program is free software: you can redistribute it and/or modify \nit under the terms of the **GNU General Public License** as published by \nthe Free Software Foundation, either version 3 of the License, or \n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, \nbut WITHOUT ANY WARRANTY; without even the implied warranty of \nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the \nGNU General Public License for more details. \n\nYou can consult the GNU General Public License on <http://www.gnu.org/licenses/gpl-3.0.html>.\n\n\n## Install\n\nThis installs a package that can be used from *Python* (`import serialnumbers`).\n\nTo install for all users on the system, administrator rights (root) may be required.\n\n*PySerialNumbers* library requires [Python](https://www.python.org) 3.4 or later.\n\n### From PyPI\n\n*PySerialNumbers* can be installed from PyPI:\n\n> python -m pip install PySerialNumber\n\nUse `python` or `python3` depending on your system.\nUsually `python` on a *Windows* system and `python3` on a *GNU/Linux* system.\n\n\n### From source\n\nDownload the archive from <https://github.com/dassym/PySerialNumber/releases>.\nUnpack the archive, enter the PySerialNumber-x.y.z directory and run:\n\n> python -m pip install -e ./\n\nUse `python` or `python3` depending on your system.\nUsually `python` on a *Windows* system and `python3` on a *GNU/Linux* system.\n\n## Usage\n\nThis example shows how to create a list of 20 serial numbers from `SN01` to `SN20` according a string defining this list.\n\n\timport serialnumbers\n\tlist(serialnumbers.SerialNumberList('SN01-SN10'))\n\t\nThe same example but with a different way of describing the list. \n\n\tlist(serialnumbers.SerialNumberList('SN01:20'))\n\nThis example shows how to create a list of 16 serial numbers from `SN01` to `SN04` and `SN09` to `SN20` .\n\n\tlist(serialnumbers.SerialNumberList('SN01-SN20;-SN05:4'))\n\t\nThe serial number list ad hoc grammar is described bellow according [ANTLR](https://github.com/antlr/antlr4/blob/master/doc/index.md) notation.\n\n\t/**\n\t * Grammar to define one or more serial numbers.\n\t */\n\t \n\tgrammar serialnumbers;\n\t\n\t/**\n\t * List of serial numbers ranges\n\t */ \n\tlist : range ( ';' range )* ;\n\t\t\n\t/**\n\t * Range of serial numbers. \n\t */ \n\trange : '-'? sn ( '-' sn | ':' DIGIT+ )? ;\n\t\n\t/**\n\t * serial number. \n\t */ \n\tsn : ALPHANUM* DIGIT+ ALPHA* ;\n\t\n\t/**\n\t * Digit characters\n\t */ \n\tDIGIT : [0-9] ;\n\t\n\t/**\n\t * Alphabetic characters\n\t */ \n\tALPHA : [A-Za-z] | '+' | '/' | '*' | '.' | ',' | '$' | '#' | '@' | '~' | '_' ;\n\t\n\t/**\n\t * Alphabetic and numeric characters  \n\t */ \n\tALPHANUM : ALPHA | DIGIT ;\n\t\n\n\t\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dassym/PySerialNumbers",
    "keywords": "Dassym,motor,api,dapi",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PySerialNumbers",
    "package_url": "https://pypi.org/project/PySerialNumbers/",
    "platform": null,
    "project_url": "https://pypi.org/project/PySerialNumbers/",
    "project_urls": {
      "Homepage": "https://github.com/dassym/PySerialNumbers"
    },
    "release_url": "https://pypi.org/project/PySerialNumbers/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.4",
    "summary": "The PySerialNumbers library offers functionalities for manipulating serial numbers.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15438757,
  "releases": {
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d708d02938e4324b606a291ca15499b36e637beb5c0c8b555cd74e6500e3f34a",
          "md5": "849620d4b6e7bdc218345c9a81da7b5d",
          "sha256": "2ed20be8e4ebd9ed6d556367fce71788ffa3b6a6a39c6a4c48c618d31108cd74"
        },
        "downloads": -1,
        "filename": "PySerialNumbers-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "849620d4b6e7bdc218345c9a81da7b5d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 10054,
        "upload_time": "2022-06-16T09:04:41",
        "upload_time_iso_8601": "2022-06-16T09:04:41.850044Z",
        "url": "https://files.pythonhosted.org/packages/d7/08/d02938e4324b606a291ca15499b36e637beb5c0c8b555cd74e6500e3f34a/PySerialNumbers-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3dae22b3d012728ab35586f15165e7043457c56d528efdd5a50945f9a8810e5",
          "md5": "07ffd264d396d9177cf113b4f85ff443",
          "sha256": "266a4518b6f0c96b781bc308572a9a0a455ad67195ae82d1945bd405b14d7a6c"
        },
        "downloads": -1,
        "filename": "PySerialNumbers-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "07ffd264d396d9177cf113b4f85ff443",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 8922,
        "upload_time": "2022-06-16T09:04:43",
        "upload_time_iso_8601": "2022-06-16T09:04:43.152884Z",
        "url": "https://files.pythonhosted.org/packages/b3/da/e22b3d012728ab35586f15165e7043457c56d528efdd5a50945f9a8810e5/PySerialNumbers-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd2a5226dff327ea285b5bb671af91d3295dddb38606c9e7a66747b23397f568",
          "md5": "dd708bc834457b2d6525ca853331d085",
          "sha256": "391b44426d085a742fc2c123b2f2804486c7a1a6948d2ac7a750e993dc1e5b35"
        },
        "downloads": -1,
        "filename": "PySerialNumbers-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dd708bc834457b2d6525ca853331d085",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 10035,
        "upload_time": "2022-10-17T16:24:41",
        "upload_time_iso_8601": "2022-10-17T16:24:41.305276Z",
        "url": "https://files.pythonhosted.org/packages/dd/2a/5226dff327ea285b5bb671af91d3295dddb38606c9e7a66747b23397f568/PySerialNumbers-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "846b5dbed828cced08c20326a92546db9f6fffa01b71293d0c2ea31a1518b9e8",
          "md5": "450f75231a462754b01361ddf670f7cb",
          "sha256": "727bf002a8509052b1e558ec4b848086120f1ac8988f0b9365fab371f06be60f"
        },
        "downloads": -1,
        "filename": "PySerialNumbers-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "450f75231a462754b01361ddf670f7cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 8904,
        "upload_time": "2022-10-17T16:24:42",
        "upload_time_iso_8601": "2022-10-17T16:24:42.611296Z",
        "url": "https://files.pythonhosted.org/packages/84/6b/5dbed828cced08c20326a92546db9f6fffa01b71293d0c2ea31a1518b9e8/PySerialNumbers-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd2a5226dff327ea285b5bb671af91d3295dddb38606c9e7a66747b23397f568",
        "md5": "dd708bc834457b2d6525ca853331d085",
        "sha256": "391b44426d085a742fc2c123b2f2804486c7a1a6948d2ac7a750e993dc1e5b35"
      },
      "downloads": -1,
      "filename": "PySerialNumbers-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dd708bc834457b2d6525ca853331d085",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4",
      "size": 10035,
      "upload_time": "2022-10-17T16:24:41",
      "upload_time_iso_8601": "2022-10-17T16:24:41.305276Z",
      "url": "https://files.pythonhosted.org/packages/dd/2a/5226dff327ea285b5bb671af91d3295dddb38606c9e7a66747b23397f568/PySerialNumbers-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "846b5dbed828cced08c20326a92546db9f6fffa01b71293d0c2ea31a1518b9e8",
        "md5": "450f75231a462754b01361ddf670f7cb",
        "sha256": "727bf002a8509052b1e558ec4b848086120f1ac8988f0b9365fab371f06be60f"
      },
      "downloads": -1,
      "filename": "PySerialNumbers-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "450f75231a462754b01361ddf670f7cb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 8904,
      "upload_time": "2022-10-17T16:24:42",
      "upload_time_iso_8601": "2022-10-17T16:24:42.611296Z",
      "url": "https://files.pythonhosted.org/packages/84/6b/5dbed828cced08c20326a92546db9f6fffa01b71293d0c2ea31a1518b9e8/PySerialNumbers-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}