{
  "info": {
    "author": "Ed Whetstone",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.11",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Observatory\nObservatory is a suite of tools for event-driven and observable python, including:\n\n- Standalone [event emitters](#EventHooks) inspired by Qt's Signals\n- [Event decorators](#Events) for adding observability to otherwise-opaque functions\n- [Data Types](#Observable-Types) for observable assignment and mutation\n- A basic [Publish-Subscribe](#Publish/Subscribe) implementation\n\n## EventHooks\n\nEventHooks can be connected to one or more \"observers\", callables that are\ninvoked when the EventHook is emitted (with or without arguments):\n\n```python\ndef say_hello(x):                # <-- function to call when events occur\n    print(f\"hello {x}\")\n\nan_event_hook = EventHook()     # <-- event hook as a standalone object\n\nan_event_hook.connect(print_it) # <-- add observer\n\nevent_triggered.emit(\"events\")  # <-- emit event hook\n\n# output: hello events\n```\n\nFunctions (or static methods) can also be connected to a specific event hook at\ndefinition by using the \"observes\" decorator:\n\n```python\n@observes(an_event_hook)\ndef print_it(x):\n    print(f\"hello {x}\")\n```\n\n### Type Hinting\n\nEventHooks can be annotated to indicate the arguments that are expected to be\nemitted and passed to the observer:\n\n```python\nan_event_hook: EventHook[str] = EventHook()\n```\n\nThis should give static type checkers a good clue when emitting from and\nconnecting to the event hook. Type hinting only supports positional arguments\ncurrently -- static type checking may break if you need to emit keyword\narguments directly to observers.\n\n## Events\n\nEvent objects use EventHooks to add observability to otherwise opaque methods\nand functions.  The EventHooks attached to an Event always emit an EventData\nobject with information about the Event.  See the Event class for more details.\n\nExample:\n```python\ndef start(event_data):\n    print(\"hello!\")\n\ndef stop(event_data):\n    print(\"goodbye!\")\n\n@event()\ndef function_one():\n    print(\"in some_function\")\n\nsome_function.about_to_run.connect(start)\nsome_function.completed.connect(stop)\n\nsome_function()\n# output: hello\n# output: in some_function\n# output: goodbye\n```\n\n### Adding Context to Events\n\nThere are two ways to add additional information to an event -- \"extra\" data,\nand \"tags\".\n\n\"extra\" data is a globally-defined dictionary that is shared between all calls\nto a given event:\n\n```python\n@event(extra={\"project\": \"SuperProject\"})\ndef my_event():\n    ...\n```\n\n\"tags\", on the other hand, are assigned to *one particular execution* of an\nevent.  Tags should be used when the data is likely to change each time an\nevent is called.  Tags can be assigned using dictionary-style keys on an event,\nwithin the function call.\n\nThis can be useful to get additional information into your logging, telemetry,\nor other event-based systems::\n```python\n@event()\ndef my_event(asset_name):\n    my_event[\"asset\"] = asset_name\n    ...\n```\n\n## Observable Types\n\nThe provided observable data types allow us to connect callbacks to changes to our data.\n\n### Assignment\nNot strictly a data type itself, the `ObservableAttr` object emits an event hook every time the given attribute name is assigned a new value.\n\n```python\nclass X:\n    attr = ObservableAttr(default=5)\n\nx = X()\n\n@observes(x.assigned)\ndef print_it(new_value):\n\tprint(f\"new value is {new_value}\")\n\nx.attr = 10\n# output: \"new value is 10\"\n```\n\n### Observable Lists and Dicts\nObservatory currently provides two observable data types - `ObservableList` and `ObservableDict`.  These allow us to connect observers to changes that mutate the data in-place.\n\n```python\nx = ObservableList([1, 2])\n\n@observes(x.appended)\ndef correction(value):\n    if value == 5:\n        print(\"three, sir!\")\n\nx.append(5)\n# output: \"three, sir!\"\n```\n\n## Publish/Subscribe\n\"Publish-subscribe\" is a special case of the observer\npattern, where subjects and observers are mediated by a third object.\n\nAn Event Broker is a middle-man object between events and their callbacks,\nallowing event-generating objects (publishers) and callbacks (subscribers)\nto never know about each-other's existence.  A subscriber can subscribe to\nan event broker that has no publishers, and a publisher can publish to an\nevent broker with no subscribers.\n\nIn order to make event filtering easier, event brokers can be organized into a\nhierarchy:\n\n```python\ntop_level_broker = get_event_broker(\"top\")\nchild_broker = top_level_broker.child(\"middle\")\ngrandchild_broker = child_broker.child(\"bottom\")\n```\n\nA publisher can send data to subscribers via the broker broadcast function:\n\n```python\nbroker.broadcast(\"positional arg\", keyword_arg=None)\n```\n\nA subscriber can receive data from publishers by connecting to the broker's\nbroadcast_sent event:\n\n```python\nbroker.broadcast_sent.connect(subscriber_function)\n```\n\n\nThread Safety\n-------------\n\nA primitive (hah) attempt has been made at thread-safety by using a single\nre-entrant lock for all functions that modify state in events.  Thread-safety\nis not *guaranteed*, but should be sufficient for most use cases.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "event,observer,observability,observables,pubsub,pub-sub,publish,subscribe",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "observatory",
    "package_url": "https://pypi.org/project/observatory/",
    "platform": null,
    "project_url": "https://pypi.org/project/observatory/",
    "project_urls": {
      "documentation": "https://github.com/sharpencrag/observatory#readme",
      "homepage": "https://github.com/sharpencrag/observatory",
      "repository": "https://github.com/sharpencrag/observatory"
    },
    "release_url": "https://pypi.org/project/observatory/2.0.0/",
    "requires_dist": [
      "pre-commit>=3.2.0; extra == \"dev\""
    ],
    "requires_python": ">=3.11",
    "summary": "Observable, event-driven python!",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17409482,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c71ed2c61c596615be8f0a2c1a127a1babdfd2eb004d85a41fa7010719413f6",
          "md5": "4cee1279c38ccef617a3076cf37329fb",
          "sha256": "351f562b297df90febeb678912475c9d72f261ca6be9b796b26c2a4d64fa35c9"
        },
        "downloads": -1,
        "filename": "observatory-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4cee1279c38ccef617a3076cf37329fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.11",
        "size": 13788,
        "upload_time": "2023-03-22T06:19:28",
        "upload_time_iso_8601": "2023-03-22T06:19:28.353975Z",
        "url": "https://files.pythonhosted.org/packages/1c/71/ed2c61c596615be8f0a2c1a127a1babdfd2eb004d85a41fa7010719413f6/observatory-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d34078283ff51db9fe8e6446e8c32af802c43c3a48ef5505ec2bbca850cc5e8e",
          "md5": "d4768fd9ae0316ee12373dc28302a783",
          "sha256": "58c95cc5e01e9b970aca6cd7db217150cb142cdf721019eec109a098c6451e73"
        },
        "downloads": -1,
        "filename": "observatory-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d4768fd9ae0316ee12373dc28302a783",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.11",
        "size": 13787,
        "upload_time": "2023-03-22T06:22:11",
        "upload_time_iso_8601": "2023-03-22T06:22:11.077075Z",
        "url": "https://files.pythonhosted.org/packages/d3/40/78283ff51db9fe8e6446e8c32af802c43c3a48ef5505ec2bbca850cc5e8e/observatory-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce6bd127d5020e984879f006f9152366b9f8737c881d0820900192e13a4be908",
          "md5": "452fa697130c275d7f48393f999cf816",
          "sha256": "0b2a2f0b5eb602a6fc7bdb60299e155e40be0f4e2e9f8704fa5f6014c59f1920"
        },
        "downloads": -1,
        "filename": "observatory-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "452fa697130c275d7f48393f999cf816",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.11",
        "size": 18573,
        "upload_time": "2023-03-22T06:22:13",
        "upload_time_iso_8601": "2023-03-22T06:22:13.145833Z",
        "url": "https://files.pythonhosted.org/packages/ce/6b/d127d5020e984879f006f9152366b9f8737c881d0820900192e13a4be908/observatory-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fe1007fc1fbeaed08250f137bfc7e6c6caf36a721afc2ada25dd18349d73dd2",
          "md5": "78d38309bb9e14643fcaafaad37da76e",
          "sha256": "42ff9307752db01b850a6d4d2ba950700eaaaf0787fd9173d21370486c472835"
        },
        "downloads": -1,
        "filename": "observatory-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "78d38309bb9e14643fcaafaad37da76e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.11",
        "size": 13834,
        "upload_time": "2023-03-23T04:00:10",
        "upload_time_iso_8601": "2023-03-23T04:00:10.486249Z",
        "url": "https://files.pythonhosted.org/packages/3f/e1/007fc1fbeaed08250f137bfc7e6c6caf36a721afc2ada25dd18349d73dd2/observatory-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1648ad09762d5d58331025c7538be8aaeee2bba8c820624e1d440b455ce128f0",
          "md5": "4fd5b8d060ffddcfaa6931cbd35ccd42",
          "sha256": "5ee3c6f409cdfc9a2ae567bc34632a0d447f7cbbd7d9da04031647281217b7bd"
        },
        "downloads": -1,
        "filename": "observatory-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4fd5b8d060ffddcfaa6931cbd35ccd42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.11",
        "size": 18786,
        "upload_time": "2023-03-23T04:00:12",
        "upload_time_iso_8601": "2023-03-23T04:00:12.532188Z",
        "url": "https://files.pythonhosted.org/packages/16/48/ad09762d5d58331025c7538be8aaeee2bba8c820624e1d440b455ce128f0/observatory-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3fe1007fc1fbeaed08250f137bfc7e6c6caf36a721afc2ada25dd18349d73dd2",
        "md5": "78d38309bb9e14643fcaafaad37da76e",
        "sha256": "42ff9307752db01b850a6d4d2ba950700eaaaf0787fd9173d21370486c472835"
      },
      "downloads": -1,
      "filename": "observatory-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "78d38309bb9e14643fcaafaad37da76e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.11",
      "size": 13834,
      "upload_time": "2023-03-23T04:00:10",
      "upload_time_iso_8601": "2023-03-23T04:00:10.486249Z",
      "url": "https://files.pythonhosted.org/packages/3f/e1/007fc1fbeaed08250f137bfc7e6c6caf36a721afc2ada25dd18349d73dd2/observatory-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1648ad09762d5d58331025c7538be8aaeee2bba8c820624e1d440b455ce128f0",
        "md5": "4fd5b8d060ffddcfaa6931cbd35ccd42",
        "sha256": "5ee3c6f409cdfc9a2ae567bc34632a0d447f7cbbd7d9da04031647281217b7bd"
      },
      "downloads": -1,
      "filename": "observatory-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4fd5b8d060ffddcfaa6931cbd35ccd42",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.11",
      "size": 18786,
      "upload_time": "2023-03-23T04:00:12",
      "upload_time_iso_8601": "2023-03-23T04:00:12.532188Z",
      "url": "https://files.pythonhosted.org/packages/16/48/ad09762d5d58331025c7538be8aaeee2bba8c820624e1d440b455ce128f0/observatory-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}