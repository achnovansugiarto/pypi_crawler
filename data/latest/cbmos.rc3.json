{
  "info": {
    "author": "Sonja Mathias et al.",
    "author_email": "sonja.mathias@it.uu.se",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# CBMOS\n\nCBMOS is a Python framework for the numerical analysis of center-based models.\nIt focuses on flexibility and ease of use and is capable of simulating up to a\nfew thousand cells within a few seconds, or even up to 10,000 cells if GPU\nsupport is available. CBMOS shines best for exploratory tasks and prototyping,\nfor instance when one wants to compare different sets of parameters or solvers.\nAt the moment, it implements most popular force functions, a few first and\nsecond-order explicit solvers, and even one implicit solver.\n\n## Installation\nCBMOS is available on PyPI and can be installed through:\n```\npip install cbmos\n```\n\n## Getting Started\n### Initial condition\n\nSetting up the initial condition of a simulation is very simple, all you need is create a list of cell objects. In this example we set up a Cartesian grid of 25 cells. Each cell will immediately divides after the simulation starts. This behavior is defined by the list of `CellDivisionEvent` objects. We then plot the current cell configuration using the basic plotting function provided in the `utils` module.\n\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nimport cbmos\nimport cbmos.force_functions as ff\nimport cbmos.solvers.euler_forward as ef\nimport cbmos.cell as cl\nimport cbmos.utils as utils\nimport cbmos.events as events\n\nn_x = 5\nn_y = 5\ncoordinates = utils.generate_cartesian_coordinates(n_x, n_y)\n\nsheet = [\n    cl.ProliferatingCell(\n        i, # Cell ID, must be unique to each cell\n        [x,y], # Initial coordinates\n        -6.0, # Birthtime, in this case 6 hours before the simulation starts\n        True, # Whether or not the cell is proliferating\n        lambda t: 6 + t # Function generating the next division time\n    )\n    for i, (x, y) in enumerate(coordinates)\n]\n\nevent_list = [\n    events.CellDivisionEvent(cell)\n    for cell in sheet\n]\n```\n\n\n```python\nutils.plot_2d_population(sheet)\n```\n\n![png](.images/output_4_0.png)\n\n### Simulation\n\nIn this simulation, we use the Gls force and the Euler forward solver. The force function's parameters are given to the simulate function as a dictionary. Parameters can also be passed to the solver in the same way. This function returns a tuple containing the time points and a list of cells for each of these time points. If needed a detailed log of the division events can be displayed by [setting the log level](https://docs.python.org/3/howto/logging.html) to `debug`.\n\n\n```python\n# Initialize model\nmodel = cbmos.CBModel(ff.Gls(), ef.solve_ivp, dimension=2)\n\ndt = 0.01\nt_data = np.arange(0, 4, dt)\n\nt_data, history = model.simulate(\n    sheet, # Initial cell configuration\n    t_data, # Times at which the history is saved\n    {\"mu\": 5.70, \"s\": 1.0, \"rA\": 1.5}, # Force parameters\n    {'dt': dt}, # Solver parameters\n    event_list=event_list\n)\n```\n\n\n```python\nutils.plot_2d_population(history[-1])\n```\n\n\n![png](.images/output_8_0.png)\n\n\n## Documentation\nThe package's documentation, as well as a few examples are available at\n[somathias.github.io/cbmos/](https://somathias.github.io/cbmos/)\n\n## Publications\n\n- Mathias, S., Coulier, A., Bouchnita, A. et al. Impact of Force Function\n  Formulations on the Numerical Simulation of Centre-Based Models. Bull Math\n  Biol 82, 132 (2020). [DOI](https://doi.org/10.1007/s11538-020-00810-2) (tag `exp-Mathias2020`)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/somathias/cbmos",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cbmos",
    "package_url": "https://pypi.org/project/cbmos/",
    "platform": "",
    "project_url": "https://pypi.org/project/cbmos/",
    "project_urls": {
      "Bug Tracker": "https://github.com/somathias/cbmos/issues",
      "Homepage": "https://github.com/somathias/cbmos"
    },
    "release_url": "https://pypi.org/project/cbmos/0.2.0/",
    "requires_dist": [
      "numpy (>=1.18)",
      "scipy (>=1.4.0)",
      "parse",
      "matplotlib",
      "cupy ; extra == 'gpu'"
    ],
    "requires_python": "",
    "summary": "A framework for numerical analysis of center-based cell models",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12323409,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7deffce37fd4c1c9f14aa66aa08c7a824d59ded01f783ad45f22361bc7fb763",
          "md5": "14ff68ec33d49604aadc7372fca5dbd0",
          "sha256": "a543d93412808d0f087da84e7f3bf3f2d4f4cbc2abb73d5f5cd35c44a6db122f"
        },
        "downloads": -1,
        "filename": "cbmos-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "14ff68ec33d49604aadc7372fca5dbd0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16245,
        "upload_time": "2021-03-22T10:23:34",
        "upload_time_iso_8601": "2021-03-22T10:23:34.131271Z",
        "url": "https://files.pythonhosted.org/packages/f7/de/ffce37fd4c1c9f14aa66aa08c7a824d59ded01f783ad45f22361bc7fb763/cbmos-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f563b995de8846bcd1a9102c1331d2efce6e52f9dcf2726a495ea03b9f9666d",
          "md5": "7410ffcea90cbdb912849f66d67aea39",
          "sha256": "827ce76422f48720f7e58a560253539ac28abd55cb232d8d25a244eadc1d2065"
        },
        "downloads": -1,
        "filename": "cbmos-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7410ffcea90cbdb912849f66d67aea39",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13531,
        "upload_time": "2021-03-22T10:23:35",
        "upload_time_iso_8601": "2021-03-22T10:23:35.111589Z",
        "url": "https://files.pythonhosted.org/packages/6f/56/3b995de8846bcd1a9102c1331d2efce6e52f9dcf2726a495ea03b9f9666d/cbmos-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c257d6aba1cfc46bae5c41c7dcd216136e8bee5e761348c6cfb4733aaa8a14f4",
          "md5": "847503aed71c577755ec352e216afc8a",
          "sha256": "10baf7eef75a86004a5b60a6f40acbf92b47e36b5e22b397d6d5b95500bf9d03"
        },
        "downloads": -1,
        "filename": "cbmos-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "847503aed71c577755ec352e216afc8a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18642,
        "upload_time": "2021-12-10T15:13:26",
        "upload_time_iso_8601": "2021-12-10T15:13:26.801233Z",
        "url": "https://files.pythonhosted.org/packages/c2/57/d6aba1cfc46bae5c41c7dcd216136e8bee5e761348c6cfb4733aaa8a14f4/cbmos-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7cce6b9921ce6379d139f1a73a02c70bac498a830ba10b0cea4e9f277fac8c0",
          "md5": "b1fe7007ab3909182b0dfd5555c730c0",
          "sha256": "d05745ab8fa5f6e39acddfeee90ce670804e56b0dd3125ab0f2334287787da09"
        },
        "downloads": -1,
        "filename": "cbmos-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b1fe7007ab3909182b0dfd5555c730c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15722,
        "upload_time": "2021-12-10T15:13:28",
        "upload_time_iso_8601": "2021-12-10T15:13:28.205314Z",
        "url": "https://files.pythonhosted.org/packages/d7/cc/e6b9921ce6379d139f1a73a02c70bac498a830ba10b0cea4e9f277fac8c0/cbmos-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32b6b5d94f7d6160e5509a5ffc9e92e8797672e6f8d285b30ca591ec8c27d6a8",
          "md5": "15755ca186d8579bb90d3645c8b7c9a2",
          "sha256": "30520cbb7cfbbe969476815bf8dcd769dff997b2609226196053c0257760c2e4"
        },
        "downloads": -1,
        "filename": "cbmos-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "15755ca186d8579bb90d3645c8b7c9a2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18656,
        "upload_time": "2021-12-16T11:40:03",
        "upload_time_iso_8601": "2021-12-16T11:40:03.600902Z",
        "url": "https://files.pythonhosted.org/packages/32/b6/b5d94f7d6160e5509a5ffc9e92e8797672e6f8d285b30ca591ec8c27d6a8/cbmos-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3ff5a546e7d46df2c9714c2c15df271ab5e905d9f94102b3485eb907bce2b98",
          "md5": "e57901cfadb7f7b032ea95bb89be0b93",
          "sha256": "6a4c2328cc74ed89a563adf2637897a0a6b8df901a05323a589db02c91c50b2d"
        },
        "downloads": -1,
        "filename": "cbmos-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e57901cfadb7f7b032ea95bb89be0b93",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15849,
        "upload_time": "2021-12-16T11:40:04",
        "upload_time_iso_8601": "2021-12-16T11:40:04.854815Z",
        "url": "https://files.pythonhosted.org/packages/c3/ff/5a546e7d46df2c9714c2c15df271ab5e905d9f94102b3485eb907bce2b98/cbmos-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32b6b5d94f7d6160e5509a5ffc9e92e8797672e6f8d285b30ca591ec8c27d6a8",
        "md5": "15755ca186d8579bb90d3645c8b7c9a2",
        "sha256": "30520cbb7cfbbe969476815bf8dcd769dff997b2609226196053c0257760c2e4"
      },
      "downloads": -1,
      "filename": "cbmos-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "15755ca186d8579bb90d3645c8b7c9a2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18656,
      "upload_time": "2021-12-16T11:40:03",
      "upload_time_iso_8601": "2021-12-16T11:40:03.600902Z",
      "url": "https://files.pythonhosted.org/packages/32/b6/b5d94f7d6160e5509a5ffc9e92e8797672e6f8d285b30ca591ec8c27d6a8/cbmos-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c3ff5a546e7d46df2c9714c2c15df271ab5e905d9f94102b3485eb907bce2b98",
        "md5": "e57901cfadb7f7b032ea95bb89be0b93",
        "sha256": "6a4c2328cc74ed89a563adf2637897a0a6b8df901a05323a589db02c91c50b2d"
      },
      "downloads": -1,
      "filename": "cbmos-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e57901cfadb7f7b032ea95bb89be0b93",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15849,
      "upload_time": "2021-12-16T11:40:04",
      "upload_time_iso_8601": "2021-12-16T11:40:04.854815Z",
      "url": "https://files.pythonhosted.org/packages/c3/ff/5a546e7d46df2c9714c2c15df271ab5e905d9f94102b3485eb907bce2b98/cbmos-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}