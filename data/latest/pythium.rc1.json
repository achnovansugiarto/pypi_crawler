{
  "info": {
    "author": "lucas",
    "author_email": "ly_liubo@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP :: Browsers",
      "Topic :: Software Development :: Testing"
    ],
    "description": "#### Pyium \n***\nPython based Page Factory design pattern test library, similar to Java's Page Factory pattern, \ndesigned to reduce code redundancy, easy to use, are very descriptiveï¼Œ make the code more \nreadable and understandable and with a high degree of scalability.\n\n- Supports locate element with annotation\n- Supports multiple positioning methods for the same element\n- Supports dynamically locate element\n\n#### Install\n***\n`pip install pythium`\n\n#### Usage\n***\n\n```python\nfrom pythium import find_by, android_find_by, ios_find_by\nfrom pythium import find_all, ios_find_all, android_find_all, Page, by\nfrom appium.webdriver.webelement import WebElement as MobileElement\nfrom selenium.webdriver.remote.webelement import WebElement\nfrom typing import Any, List\n\n\nclass LoginPage(Page):\n\n    @find_by(css=\".search\")\n    @ios_find_by(ios_predicate='value == \"Search something\"')\n    @android_find_by(android_uiautomator='resourceId(\"com.app:id/search_txtbox\")')\n    def search_input(self) -> WebElement: ...\n\n    @property\n    @find_by(css=\".search\")\n    @ios_find_by(ios_predicate='value == \"Search something\"')\n    @android_find_by(android_uiautomator='resourceId(\"com.app:id/search_txtbox\")')\n    def search_input_with_property(self) -> WebElement: ...\n\n    @property\n    @find_all(by(css=\".icon-logo1\"), by(css=\".icon-logo\"))\n    def find_all_web_test(self) -> WebElement: return Any\n\n    @property\n    @ios_find_all(by(ios_predicate='value == \"Search something\"'), by(ios_predicate='value == \"Search result\"'))\n    @android_find_all(by(android_uiautomator='resourceId(\"com.app:id/search_txtbox\")'),\n                      by(android_uiautomator='resourceId(\"com.app:id/search_txtbox\")'))\n    def find_all_mobile_test(self) -> WebElement: return Any\n\n    # for dynamical locator\n    @find_by(xpath=\"//div[{n}]/a[{k}]/div[{m}]/{f}\")\n    @ios_find_by(xpath=\"//div[1]/a[{n}]/div[{k}]\")\n    def dynamical_locator(self, n, k, m=4, f=6) -> WebElement: ...\n\n    # for list WebElements\n    @find_by(css=\".login\")\n    def list_web_elements(self) -> List[MobileElement]: ...\n\n    def _is_loaded(self):\n        print(\"implement something...\")\n\n\nif __name__ == '__main__':\n    from selenium import webdriver\n\n    driver = webdriver.Chrome()\n    login = LoginPage(driver)\n    # no @property\n    login.search_input.click()\n    # with @property\n    login.search_input_with_property.click()\n    # for dynamical locator\n    login.dynamical_locator(2, 3, 4, 5).click()\n    # for list WebElement\n    print(len(login.list_web_elements()))\n```\n\nThe`@find_all`, `@ios_find_all`, `@android_find_all` annotations locates the web element using more than one criteria, \n\ngiven that at least one criteria match. it uses an OR conditional relationship between the multiple `@xxx_find_by`.\n\nexample: `@find_all(by(css=\".icon-logo1\"), by(id=\"icon\"))` \n\nfirst will find element `by(css=\".icon-logo1\")`, if found, return `WebElement`; \n\nif not found, will find element `by(id=\"icon\")`, if found, return `WebElement`, if not found, will raise `Exception`.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lucas234/pythium",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pythium",
    "package_url": "https://pypi.org/project/pythium/",
    "platform": null,
    "project_url": "https://pypi.org/project/pythium/",
    "project_urls": {
      "Homepage": "https://github.com/lucas234/pythium"
    },
    "release_url": "https://pypi.org/project/pythium/1.0.1/",
    "requires_dist": [
      "selenium (==4.1)",
      "Appium-Python-Client (==2.7.1)"
    ],
    "requires_python": ">=3",
    "summary": "Python based Page Factory.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15784708,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7c4975a57f359c92383438df047c627f0fa6287bca5bccf0d7766af1e7b13d6",
          "md5": "2e424b8d00551cad934e1f1e8c590cdb",
          "sha256": "e4b0f30e7502976cac5bb60c3f4dd9d0a98a4f9fea621794ffae9939346b5f93"
        },
        "downloads": -1,
        "filename": "pythium-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e424b8d00551cad934e1f1e8c590cdb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 4801,
        "upload_time": "2022-11-16T06:18:29",
        "upload_time_iso_8601": "2022-11-16T06:18:29.480078Z",
        "url": "https://files.pythonhosted.org/packages/f7/c4/975a57f359c92383438df047c627f0fa6287bca5bccf0d7766af1e7b13d6/pythium-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ea1d02d976b765f4599c4b026e1cde980731e47e0e08d0c6aa021b9ae8b3a90",
          "md5": "a87ff80ca0f0c82c8dea19454b3a3b28",
          "sha256": "315a7da16ee16f9da2acbc92cfba09c1a39fd17c1a5d3846ec33e082ea0f30a4"
        },
        "downloads": -1,
        "filename": "pythium-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a87ff80ca0f0c82c8dea19454b3a3b28",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 4884,
        "upload_time": "2022-11-16T06:18:31",
        "upload_time_iso_8601": "2022-11-16T06:18:31.352853Z",
        "url": "https://files.pythonhosted.org/packages/5e/a1/d02d976b765f4599c4b026e1cde980731e47e0e08d0c6aa021b9ae8b3a90/pythium-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f7c4975a57f359c92383438df047c627f0fa6287bca5bccf0d7766af1e7b13d6",
        "md5": "2e424b8d00551cad934e1f1e8c590cdb",
        "sha256": "e4b0f30e7502976cac5bb60c3f4dd9d0a98a4f9fea621794ffae9939346b5f93"
      },
      "downloads": -1,
      "filename": "pythium-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2e424b8d00551cad934e1f1e8c590cdb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 4801,
      "upload_time": "2022-11-16T06:18:29",
      "upload_time_iso_8601": "2022-11-16T06:18:29.480078Z",
      "url": "https://files.pythonhosted.org/packages/f7/c4/975a57f359c92383438df047c627f0fa6287bca5bccf0d7766af1e7b13d6/pythium-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ea1d02d976b765f4599c4b026e1cde980731e47e0e08d0c6aa021b9ae8b3a90",
        "md5": "a87ff80ca0f0c82c8dea19454b3a3b28",
        "sha256": "315a7da16ee16f9da2acbc92cfba09c1a39fd17c1a5d3846ec33e082ea0f30a4"
      },
      "downloads": -1,
      "filename": "pythium-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a87ff80ca0f0c82c8dea19454b3a3b28",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 4884,
      "upload_time": "2022-11-16T06:18:31",
      "upload_time_iso_8601": "2022-11-16T06:18:31.352853Z",
      "url": "https://files.pythonhosted.org/packages/5e/a1/d02d976b765f4599c4b026e1cde980731e47e0e08d0c6aa021b9ae8b3a90/pythium-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}