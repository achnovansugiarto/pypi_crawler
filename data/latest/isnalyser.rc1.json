{
  "info": {
    "author": "Maroussia Bednarkiewicz, Stefan Wezel, Álvaro Tejero Cantero",
    "author_email": "maroussia.b@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![PyPI \nversion](https://img.shields.io/badge/pypi%20package-0.0.1-brightgreen)](https://img.shields.io/badge/pypi%20package-0.0.1-brightgreen)\n[![Contributions \nwelcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat)](https://github.com/Maroussia/isnalyser/blob/master/README.md)\n[![GitHub \nlicense](https://img.shields.io/badge/license-GNU-orange)](https://github.com/Maroussia/isnalyser/blob/master/LICENSE)\n\n# Automated isnād tree visualisations\n\nFor scholars studying Ḥadīth texts, drawing an __isnād__ tree with more than 40 transmitters is a tidious work and finding the right medium to desplay it fully can even prove to be impossible. The `isnalyser` is a simple program for the automation of __isnād__ trees drawing and their customable display in handy formats.\n\n\n  <img src=\"https://user-images.githubusercontent.com/12030245/95599970-13c1dc00-0a52-11eb-96e9-f9969fdd572f.png\" width=\"350\">\n\n\n\n## The motivation behind the project\n\nThe `isnalyser` aims at facilitating the analysis of large quantity of __aḥādīth__ and more specifically their chains of transmiters or __asānid__ by allowing scholars to visualise these chains of transmitters quickly in a complete graph that includes geo-spatial and chronological information.\n\n## Who is it for?\n\nThe `isnalyser` is open-source and publicly available. It is meant for scholars in Ḥadīth studies who are analysing a great number of __aḥādīth__ and need to visualise their chains of transmitters in a single graph. The program can also be used by any scholars in Islamic studies or else who want to visualise the transmission of a text or its recension history. All data that follows the pattern of numerous chains of transmitters/scribes/citations/etc. can serve as input for the present program. \n\n## How?\n\nIsnalyser can be installed easily and is ready to use within seconds.\n\n### Installation\n```bash\npip install isnalyser\n```\n### Usage\n- A nice function of isnalyser is *view_graph*. Let's import it!\n\n```python\nfrom isnalyser import view_graph\n```\n- Now, if you already **have some data** available that you want to display as an Isnad tree, you can use the function we just imported like so:\n\n```python\nview_graph(\n\t'/path/to/your/data/transmitters.csv', # path to transmitters file\n\t'/path/to/your/data/transmissions.csv', # path to transmissions file\n\t15) # step size of timeline\n```\n\n- If you **don't have any data yet**, or just want to get a feel for it, we provided some examples. By looking at them, you can also find out how the data needs to be structured for isnalyser to work.\n\n```python\nview_graph(\n\t'', # you can write anyting here, as we don't need it\n\t'', # same is true here\n\t15, # 15 is a good step size for the example\n\tuse_example=True) # use example data\n```\n\n## Contributing\n\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dhakara/isnalyser",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "isnalyser",
    "package_url": "https://pypi.org/project/isnalyser/",
    "platform": "",
    "project_url": "https://pypi.org/project/isnalyser/",
    "project_urls": {
      "Homepage": "https://github.com/dhakara/isnalyser"
    },
    "release_url": "https://pypi.org/project/isnalyser/0.1.0/",
    "requires_dist": [
      "pandas (>=0.24.2)",
      "graphviz (>=0.11.1)",
      "matplotlib (>=2.0.0)",
      "numpy (>=1.12.0)"
    ],
    "requires_python": ">=3.5",
    "summary": "Create isnad graphs automatically.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8511470,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f393b95016dc1cc60325b10fa87756fece89476d2248bd7864eda17755b51164",
          "md5": "3975ec94d4801dc657196f87865d782f",
          "sha256": "64e0c4f85dc72ab2c8a69ee47c56e2b262f10e7e64e07bf1bd6d27b29fba881c"
        },
        "downloads": -1,
        "filename": "isnalyser-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3975ec94d4801dc657196f87865d782f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 20921,
        "upload_time": "2020-10-27T10:38:14",
        "upload_time_iso_8601": "2020-10-27T10:38:14.097358Z",
        "url": "https://files.pythonhosted.org/packages/f3/93/b95016dc1cc60325b10fa87756fece89476d2248bd7864eda17755b51164/isnalyser-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e1445f4ce7d47e19bce1f81972d3fc8eac731946b754ae7a66f16ded65e2022",
          "md5": "8342000346967560126133b2ee79149d",
          "sha256": "8f7bbff7afb2c08624391f47fd2339776fda7cd24f196a3458da841b32c52b3c"
        },
        "downloads": -1,
        "filename": "isnalyser-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8342000346967560126133b2ee79149d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 8254,
        "upload_time": "2020-10-27T10:38:17",
        "upload_time_iso_8601": "2020-10-27T10:38:17.922996Z",
        "url": "https://files.pythonhosted.org/packages/6e/14/45f4ce7d47e19bce1f81972d3fc8eac731946b754ae7a66f16ded65e2022/isnalyser-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f393b95016dc1cc60325b10fa87756fece89476d2248bd7864eda17755b51164",
        "md5": "3975ec94d4801dc657196f87865d782f",
        "sha256": "64e0c4f85dc72ab2c8a69ee47c56e2b262f10e7e64e07bf1bd6d27b29fba881c"
      },
      "downloads": -1,
      "filename": "isnalyser-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3975ec94d4801dc657196f87865d782f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 20921,
      "upload_time": "2020-10-27T10:38:14",
      "upload_time_iso_8601": "2020-10-27T10:38:14.097358Z",
      "url": "https://files.pythonhosted.org/packages/f3/93/b95016dc1cc60325b10fa87756fece89476d2248bd7864eda17755b51164/isnalyser-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6e1445f4ce7d47e19bce1f81972d3fc8eac731946b754ae7a66f16ded65e2022",
        "md5": "8342000346967560126133b2ee79149d",
        "sha256": "8f7bbff7afb2c08624391f47fd2339776fda7cd24f196a3458da841b32c52b3c"
      },
      "downloads": -1,
      "filename": "isnalyser-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8342000346967560126133b2ee79149d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 8254,
      "upload_time": "2020-10-27T10:38:17",
      "upload_time_iso_8601": "2020-10-27T10:38:17.922996Z",
      "url": "https://files.pythonhosted.org/packages/6e/14/45f4ce7d47e19bce1f81972d3fc8eac731946b754ae7a66f16ded65e2022/isnalyser-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}