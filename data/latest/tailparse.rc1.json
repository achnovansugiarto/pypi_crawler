{
  "info": {
    "author": "Vincent A. Saulys",
    "author_email": "Vincent A Saulys <vincent@saulys.me>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: Log Analysis"
    ],
    "description": "# `tailparse`\n\n[![codecov](https://codecov.io/gh/valexandersaulys/tailparse/branch/master/graph/badge.svg)](https://codecov.io/gh/valexandersaulys/tailparse)\n\nMeant to mimic, sort of, how the OG [logparser for MS\nServer](https://en.wikipedia.org/wiki/Logparser) worked. \n\nVery much a work-in-progress atm. Goal is to make this a standalone\npython executable for deployment on servers. Will probably have to\nchange the name to make space on package repos. \n\n## Installation\n\n`tailparse` has no dependencies to install. It only works with\npython 3 and has only been tested in python 3.10. Presumably it would\nwork with any python 3. \n```\npython3 setup.py install --user\n```\n\nThis will install it in your home directory\n(i.e. `home/<username>/.local/bin/`) and doesn't require sudo\nprivileges. \n\n\n## Usage\n\n`tailparse -q <sqlite-query> your.logs`\n\nHelp:\n```\n$ tailparse --help\nusage: tailparse [-h] [-p] [-i INPUT_FORMAT] [-q QUERY] [-r MAX_ROWS] [-s SAVE_DB] [-f FILE] [logs]\n\nProcess logs as if they were SQL.\n\npositional arguments:\n  logs                  The path to the input log we're processing. If not present, will use stdin.\n\noptions:\n  -h, --help            show this help message and exit\n  -p, --print           Print out the requisite columns\n  -i INPUT_FORMAT, --input-format INPUT_FORMAT\n                        The format of the log we're processing. Defaults to 'nginx'. Options include ['nginx']\n  -q QUERY, --query QUERY\n                        The query to execute. Don't include any 'FROM' statement as this is added automatically. If not\n                        included, make sure to include a -f/--file arugmenet\n  -r MAX_ROWS, --max-rows MAX_ROWS\n                        Number of max rows to print. Defaults to 20. Put 0 to print all.\n  -s SAVE_DB, --save-db SAVE_DB\n                        Whether to save the resulting SQLite data file. Defaults to not saving it and using ':memory:'\n                        instead. If the database exists, then the log file will not be used to populate it and instead it\n                        will be read from. This can be helpful if you're running a lot of queries as the log file doesn't\n                        need to be re-parsed everytime.\n  -f FILE, --file FILE  Execute multiple queries contained with a file. Can be used in place of -q/--query\n```\n\n\n### Caching the database on-disk\n\nIt can help to write the SQL database to disk instead of reading from\nmemory. This can be done with the `-s` or `--save-db` arguments:\n```\n$ time tailparse -s tmp.sqlite3.db -q \"SELECT COUNT(*) FROM logs\" sample.logs\nCOUNT(*)\n100090\n\nreal    0m1.026s\nuser    0m0.835s\nsys     0m0.117s\n$ time tailparse -s tmp.sqlite3.db -q \"SELECT COUNT(*) FROM logs\" sample.logs\nCOUNT(*)\n100090\n\nreal    0m0.648s\nuser    0m0.533s\nsys     0m0.095s\n\n# and without any caching\n$ time tailparse -q \"SELECT COUNT(*) FROM logs\" sample.logs\nCOUNT(*)\n100090\n\nreal    0m0.910s\nuser    0m0.866s\nsys     0m0.045s\n```\n\nNote that if you do this, `tailparse` will not attempt to rewrite the database\n\n\n## Running Tests\n\nTo run tests, at the top level run the following:\n```\n./test.sh\n```\n\nTo get coverage reports, which requires the [`coverage`\nmodule](https://coverage.readthedocs.io/en/6.5.0/), you can run:\n```\n./test.sh -h\n```\n\nWhile testing relies entirely on `unittest`, which is built-in,\n`coverage` and `mypy` are used to do coverage reports and type\nchecking, respectively. `./test.sh` will check for these installs at\nruntime.  \n\n\n## Contributing\n\nFeel free to make a PR! \n\nNote that this library is trying very hard to avoid any dependencies\nand stay core-python-only. If there is a strong reason to include one,\nplease include a reason why.  \n\n`black` is used for all code formatting. Testing will be required for\nany contributions. \n\n\n## Todos  \n  \n+ [ ] write [proper\n      tests](https://docs.python.org/3/library/unittest.html) \n      \n  + [X] split the `logparser.py` file up into separate chunks \n  \n  + [ ] `tailparse.execute.execute_query`: write integration tests\n        against this and check for the output string -- _all for 'nginx'_\n        \n    + [x] include `sample.log` via `shuf -n N input > output`\n    + [x] `SELECT * FROM logs LIMIT 1`\n    + [x] `SELECT * FROM logs LIMIT 2`\n    + [x] `SELECT * FROM logs`: stops at 20 by default\n    + [x] `SELECT * FROM logs`, w/max_rows=0: does not stop at 20\n    + [x] `SELECT *`: complains before it executes\n    + [x] w/`query_file`: write to `/tmp` and clean up after\n    + [x] w/`save_db`: write to `/tmp` and clean up after\n    + [x] w/`print_columns`: as `True`, should print just columns\n    \n  + [x] `tailparse.print_output.print_output`: write unit tests\n        against this and check for output string\n        \n  + [x] write testing shell script -- should fail if `mypy` fails or\n        if `coverage` and `mypy` aren't installed\n\n+ [ ] update the README to use current version screenshots\n\n+ [ ] add `--version` argument\n\n+ [ ] write proper contribution guides, especially for new log formats\n\n+ [ ] write proper `Make` file to make it easy for people to see whats\n      going on\n\n+ [x] remove pandas dependency and only use pure python\n\n+ [x] support writing to disk for the sqlite3 database, not just to\n      memory \n\n+ [ ] support other formats, not just Nginx\n  + [ ] apache \n  + [ ] [morgan](https://www.npmjs.com/package/morgan)\n\n+ [x] Ability to process multiple SQL commands in a text file,\n      separated by line\n      \n+ [ ] infer the table (e.g. `FROM logs`) so I don't have to specify it\n      everytime \n\n\n## License\n\n[GPL-v3](https://www.gnu.org/licenses/gpl-3.0.en.html)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/valexandersaulys/tailparse",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tailparse",
    "package_url": "https://pypi.org/project/tailparse/",
    "platform": null,
    "project_url": "https://pypi.org/project/tailparse/",
    "project_urls": {
      "Bug Tracker": "https://github.com/valexandersaulys/tailparse/issues",
      "Homepage": "https://github.com/valexandersaulys/tailparse"
    },
    "release_url": "https://pypi.org/project/tailparse/0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Parser Nginx logs like SQL",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15588940,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f545c80e1e0185f3bf88ee1d1404cfa29560374c2f162e4ec6f93d8eb0bf33d6",
          "md5": "cce3b8575eeb8a4642c2690d137e1146",
          "sha256": "25598fa76712788d05ff0c151ebdf6c672452ae7fdc709325da2cc8f21098735"
        },
        "downloads": -1,
        "filename": "tailparse-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cce3b8575eeb8a4642c2690d137e1146",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23764,
        "upload_time": "2022-10-30T19:49:54",
        "upload_time_iso_8601": "2022-10-30T19:49:54.157210Z",
        "url": "https://files.pythonhosted.org/packages/f5/45/c80e1e0185f3bf88ee1d1404cfa29560374c2f162e4ec6f93d8eb0bf33d6/tailparse-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac6c86832608fbf24406436b156810392b0ef866d6d9d7fab9d1ab33071637f8",
          "md5": "eaacac0f1ddd8a8d6310bc44064a9500",
          "sha256": "618ff065d67679d1a308096aa9c469789f2a3374fc7c367bddfd35d4aec56689"
        },
        "downloads": -1,
        "filename": "tailparse-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "eaacac0f1ddd8a8d6310bc44064a9500",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23594,
        "upload_time": "2022-10-30T19:49:56",
        "upload_time_iso_8601": "2022-10-30T19:49:56.532876Z",
        "url": "https://files.pythonhosted.org/packages/ac/6c/86832608fbf24406436b156810392b0ef866d6d9d7fab9d1ab33071637f8/tailparse-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f545c80e1e0185f3bf88ee1d1404cfa29560374c2f162e4ec6f93d8eb0bf33d6",
        "md5": "cce3b8575eeb8a4642c2690d137e1146",
        "sha256": "25598fa76712788d05ff0c151ebdf6c672452ae7fdc709325da2cc8f21098735"
      },
      "downloads": -1,
      "filename": "tailparse-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cce3b8575eeb8a4642c2690d137e1146",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 23764,
      "upload_time": "2022-10-30T19:49:54",
      "upload_time_iso_8601": "2022-10-30T19:49:54.157210Z",
      "url": "https://files.pythonhosted.org/packages/f5/45/c80e1e0185f3bf88ee1d1404cfa29560374c2f162e4ec6f93d8eb0bf33d6/tailparse-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ac6c86832608fbf24406436b156810392b0ef866d6d9d7fab9d1ab33071637f8",
        "md5": "eaacac0f1ddd8a8d6310bc44064a9500",
        "sha256": "618ff065d67679d1a308096aa9c469789f2a3374fc7c367bddfd35d4aec56689"
      },
      "downloads": -1,
      "filename": "tailparse-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "eaacac0f1ddd8a8d6310bc44064a9500",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 23594,
      "upload_time": "2022-10-30T19:49:56",
      "upload_time_iso_8601": "2022-10-30T19:49:56.532876Z",
      "url": "https://files.pythonhosted.org/packages/ac/6c/86832608fbf24406436b156810392b0ef866d6d9d7fab9d1ab33071637f8/tailparse-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}