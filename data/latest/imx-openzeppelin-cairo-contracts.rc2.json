{
  "info": {
    "author": "Immutable X + OpenZeppelin Community",
    "author_email": "starknet-security@immutable.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent"
    ],
    "description": "# OpenZeppelin Contracts for Cairo\n\n[![Tests and linter](https://github.com/OpenZeppelin/cairo-contracts/actions/workflows/python-app.yml/badge.svg)](https://github.com/OpenZeppelin/cairo-contracts/actions/workflows/python-app.yml)\n\n**A library for secure smart contract development** written in Cairo for [StarkNet](https://starkware.co/product/starknet/), a decentralized ZK Rollup.\n\n## Usage\n\n> ## ⚠️ WARNING! ⚠️\n>\n> This repo contains highly experimental code.\n> Expect rapid iteration.\n> **Use at your own risk.**\n\n### First time?\n\nBefore installing Cairo on your machine, you need to install `gmp`:\n\n```bash\nsudo apt install -y libgmp3-dev # linux\nbrew install gmp # mac\n```\n\n> If you have any troubles installing gmp on your Apple M1 computer, [here’s a list of potential solutions](https://github.com/OpenZeppelin/nile/issues/22).\n\n### Set up your project\n\nCreate a directory for your project, then `cd` into it and create a Python virtual environment.\n\n```bash\nmkdir my-project\ncd my-project\npython3 -m venv env\nsource env/bin/activate\n```\n\nInstall the [Nile](https://github.com/OpenZeppelin/nile) development environment and then run `init` to kickstart a new project. Nile will create the project directory structure and install [the Cairo language](https://www.cairo-lang.org/docs/quickstart.html), a [local network](https://github.com/Shard-Labs/starknet-devnet/), and a [testing framework](https://docs.pytest.org/en/6.2.x/).\n\n```bash\npip install cairo-nile\nnile init\n```\n\n### Install the library\n\n```bash\npip install openzeppelin-cairo-contracts\n```\n\n### Use a basic preset\n\nPresets are ready-to-use contracts that you can deploy right away. They also serve as examples of how to use library modules. [Read more about presets](https://docs.openzeppelin.com/contracts-cairo/0.4.0b/extensibility#presets).\n\n```cairo\n# contracts/MyToken.cairo\n\n%lang starknet\n\nfrom openzeppelin.token.erc20.presets.ERC20 import constructor\n```\n\nCompile and deploy it right away:\n\n```bash\nnile compile\n\nnile deploy MyToken <name> <symbol> <decimals> <initial_supply> <recipient> --alias my_token\n```\n\n> Note that `<initial_supply>` is expected to be two integers i.e. `1` `0`. See [Uint256](https://docs.openzeppelin.com/contracts-cairo/0.4.0b/utilities#uint256) for more information.\n\n### Write a custom contract using library modules\n\n[Read more about libraries](https://docs.openzeppelin.com/contracts-cairo/0.4.0b/extensibility#libraries).\n\n```cairo\n%lang starknet\n\nfrom starkware.cairo.common.cairo_builtins import HashBuiltin\nfrom starkware.cairo.common.uint256 import Uint256\nfrom openzeppelin.security.pausable.library import Pausable\nfrom openzeppelin.token.erc20.library import ERC20\n\n(...)\n\n@external\nfunc transfer{\n        syscall_ptr : felt*,\n        pedersen_ptr : HashBuiltin*,\n        range_check_ptr\n    }(recipient: felt, amount: Uint256) -> (success: felt):\n    Pausable.assert_not_paused()\n    ERC20.transfer(recipient, amount)\n    return (TRUE)\nend\n```\n\n## Learn\n\n### Documentation\n\nCheck out the [full documentation site](https://docs.openzeppelin.com/contracts-cairo)! Featuring:\n\n- [Accounts](https://docs.openzeppelin.com/contracts-cairo/0.4.0b/accounts)\n- [ERC20](https://docs.openzeppelin.com/contracts-cairo/0.4.0b/erc20)\n- [ERC721](https://docs.openzeppelin.com/contracts-cairo/0.4.0b/erc721)\n- [Contract extensibility pattern](https://docs.openzeppelin.com/contracts-cairo/0.4.0b/extensibility)\n- [Proxies and upgrades](https://docs.openzeppelin.com/contracts-cairo/0.4.0b/proxies)\n- [Security](https://docs.openzeppelin.com/contracts-cairo/0.4.0b/security)\n- [Utilities](https://docs.openzeppelin.com/contracts-cairo/0.4.0b/utilities)\n\n### Cairo\n\n- [StarkNet official documentation](https://www.cairo-lang.org/docs/hello_starknet/index.html#hello-starknet)\n- [Cairo language documentation](https://www.cairo-lang.org/docs/hello_cairo/index.html#hello-cairo)\n- Perama's [Cairo by example](https://perama-v.github.io/cairo/by-example/)\n- [Cairo 101 workshops](https://www.youtube.com/playlist?list=PLcIyXLwiPilV5RBZj43AX1FY4FJMWHFTY)\n\n### Nile\n\n- [Getting started with StarkNet using Nile](https://medium.com/coinmonks/starknet-tutorial-for-beginners-using-nile-6af9c2270c15)\n- [How to manage smart contract deployments with Nile](https://medium.com/@martriay/manage-your-starknet-deployments-with-nile-%EF%B8%8F-e849d40546dd)\n\n## Development\n\n### Set up the project\n\nClone the repository\n\n```bash\ngit clone git@github.com:OpenZeppelin/cairo-contracts.git\n```\n\n`cd` into it and create a Python virtual environment:\n\n```bash\ncd cairo-contracts\npython3 -m venv env\nsource env/bin/activate\n```\n\nInstall dependencies:\n\n```bash\npython -m pip install .\n```\n\n### Compile the contracts\n\n```bash\nnile compile --directory src\n\n🤖 Compiling all Cairo contracts in the src directory\n🔨 Compiling src/openzeppelin/token/erc20/library.cairo\n🔨 Compiling src/openzeppelin/token/erc20/presets/ERC20Mintable.cairo\n🔨 Compiling src/openzeppelin/token/erc20/presets/ERC20Pausable.cairo\n🔨 Compiling src/openzeppelin/token/erc20/presets/ERC20Upgradeable.cairo\n🔨 Compiling src/openzeppelin/token/erc20/presets/ERC20.cairo\n🔨 Compiling src/openzeppelin/token/erc20/IERC20.cairo\n🔨 Compiling src/openzeppelin/token/erc721/enumerable/library.cairo\n🔨 Compiling src/openzeppelin/token/erc721/library.cairo\n🔨 Compiling src/openzeppelin/token/erc721/utils/ERC721Holder.cairo\n🔨 Compiling src/openzeppelin/token/erc721/presets/ERC721MintablePausable.cairo\n🔨 Compiling src/openzeppelin/token/erc721/presets/ERC721MintableBurnable.cairo\n🔨 Compiling src/openzeppelin/token/erc721/presets/ERC721EnumerableMintableBurnable.cairo\n🔨 Compiling src/openzeppelin/token/erc721/IERC721.cairo\n🔨 Compiling src/openzeppelin/token/erc721/IERC721Metadata.cairo\n🔨 Compiling src/openzeppelin/token/erc721/IERC721Receiver.cairo\n🔨 Compiling src/openzeppelin/token/erc721/enumerable/IERC721Enumerable.cairo\n🔨 Compiling src/openzeppelin/access/ownable/library.cairo\n🔨 Compiling src/openzeppelin/security/reentrancyguard/library.cairo\n🔨 Compiling src/openzeppelin/security/safemath/library.cairo\n🔨 Compiling src/openzeppelin/security/pausable/library.cairo\n🔨 Compiling src/openzeppelin/security/initializable/library.cairo\n🔨 Compiling src/openzeppelin/utils/constants/library.cairo\n🔨 Compiling src/openzeppelin/introspection/erc165/library.cairo\n🔨 Compiling src/openzeppelin/introspection/erc165/IERC165.cairo\n🔨 Compiling src/openzeppelin/upgrades/library.cairo\n🔨 Compiling src/openzeppelin/upgrades/presets/Proxy.cairo\n🔨 Compiling src/openzeppelin/account/library.cairo\n🔨 Compiling src/openzeppelin/account/presets/EthAccount.cairo\n🔨 Compiling src/openzeppelin/account/presets/Account.cairo\n🔨 Compiling src/openzeppelin/account/presets/AddressRegistry.cairo\n🔨 Compiling src/openzeppelin/account/IAccount.cairo\n✅ Done\n```\n\n### Run tests\n\nRun tests using [tox](https://tox.wiki/en/latest/), tox automatically creates an isolated testing environment:\n\n```bash\ntox\n\n====================== test session starts ======================\nplatform linux -- Python 3.7.2, pytest-7.1.2, py-1.11.0, pluggy-1.0.0\nrootdir: /home/readme/cairo-contracts, configfile: tox.ini\nplugins: asyncio-0.18.3, xdist-2.5.0, forked-1.4.0, web3-5.29.0, typeguard-2.13.3\nasyncio: mode=auto\ngw0 [185] / gw1 [185]\n......................................................................................\n......................................................................................\n............    [100%]\n```\n\n### Run Tests in Docker\n\nFor M1 users or those who are having trouble with library/python versions you can alternatively run the tests within a docker container. Using the following as a Dockerfile placed in the root directory of the project:\n\n```dockerfile\nFROM python:3.7\n\nRUN pip install tox\nRUN mkdir cairo-contracts\nCOPY . cairo-contracts\nWORKDIR cairo-contracts\nENTRYPOINT tox\n```\n\nAfter its placed there run:\n\n```bash\ndocker build -t cairo-tests .\ndocker run cairo-tests\n```\n\n### Parallel Testing\n\nThis repo utilizes the [pytest-xdist](https://pytest-xdist.readthedocs.io/en/latest/) plugin which runs tests in parallel. This feature increases testing speed; however, conflicts with a shared state can occur since tests do not run in order. To overcome this, independent cached versions of contracts being tested should be provisioned to each test case. Here's a simple fixture example:\n\n```python\nfrom utils import get_contract_class, cached_contract\n\n@pytest.fixture(scope='module')\ndef foo_factory():\n    # get contract class\n    foo_cls = get_contract_class('Foo')\n\n    # deploy contract\n    starknet = await Starknet.empty()\n    foo = await starknet.deploy(contract_class=foo_cls)\n\n    # copy the state and cache contract\n    state = starknet.state.copy()\n    cached_foo = cached_contract(state, foo_cls, foo)\n\n    return cached_foo\n```\n\nSee [Memoization](https://docs.openzeppelin.com/contracts-cairo/0.4.0b/utilities#memoization) in the Utilities documentation for a more thorough example on caching contracts.\n\n> Note that this does not apply for stateless libraries such as SafeMath.\n\n## Security\n\n> ⚠️ Warning! ⚠️\n> This project is still in a very early and experimental phase. It has never been audited nor thoroughly reviewed for security vulnerabilities. Do not use in production.\n\nRefer to [SECURITY.md](SECURITY.md) for more details.\n\n## Contribute\n\nOpenZeppelin Contracts for Cairo exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution](CONTRIBUTING.md) guide!\n\n### Markdown linter\n\nTo keep the markdown files neat and easy to edit, we utilize DavidAnson's [markdownlint](https://github.com/DavidAnson/markdownlint) linter. You can find the listed rules [here](https://github.com/DavidAnson/markdownlint/blob/main/doc/Rules.md). Note that the following rules are disabled:\n\n- `MD013: line length`\n\n  - to enable paragraphs without internal line breaks\n\n- `MD033: inline HTML`\n\n  - to enable .md files to have duplicate headers and separate them by identifiers\n\nBefore creating a PR, check that documentation changes are compliant with our markdown rules by running:\n\n```bash\ntox -e lint\n```\n\n## License\n\nOpenZeppelin Contracts for Cairo is released under the [MIT License](LICENSE).\n",
    "description_content_type": "text/markdown; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/immutable/cairo-contracts",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "imx-openzeppelin-cairo-contracts",
    "package_url": "https://pypi.org/project/imx-openzeppelin-cairo-contracts/",
    "platform": "any",
    "project_url": "https://pypi.org/project/imx-openzeppelin-cairo-contracts/",
    "project_urls": {
      "Homepage": "https://github.com/immutable/cairo-contracts"
    },
    "release_url": "https://pypi.org/project/imx-openzeppelin-cairo-contracts/0.5.0/",
    "requires_dist": [
      "importlib-metadata (>=4.0)",
      "setuptools ; extra == 'testing'",
      "tox ; extra == 'testing'",
      "pytest ; extra == 'testing'"
    ],
    "requires_python": "",
    "summary": "Library for secure smart contract development written in Cairo",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15161918,
  "releases": {
    "0.0.post1.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71fb7deda96f38f7375101deafe6aaf7d5b3b91be2cd14b8ff2994ca24790960",
          "md5": "62a836671d5431d36f01a49cb8c23841",
          "sha256": "3cb844fdada1938e402b9a3f30ef883da10d88b0222a4e7744912ed620787048"
        },
        "downloads": -1,
        "filename": "imx_openzeppelin_cairo_contracts-0.0.post1.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "62a836671d5431d36f01a49cb8c23841",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38262,
        "upload_time": "2022-09-21T04:30:34",
        "upload_time_iso_8601": "2022-09-21T04:30:34.188192Z",
        "url": "https://files.pythonhosted.org/packages/71/fb/7deda96f38f7375101deafe6aaf7d5b3b91be2cd14b8ff2994ca24790960/imx_openzeppelin_cairo_contracts-0.0.post1.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01b8169c6a121742f594e15e0181d43c690efe12f511f1dd5580c3ab11de68a0",
          "md5": "99d55698eb25fbbf5d8e2d2a1b79a91f",
          "sha256": "344508bd27fe1f2dba6a1fa703db2b73ee80ee34b64f5c24ba24c40588f064c5"
        },
        "downloads": -1,
        "filename": "imx_openzeppelin_cairo_contracts-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "99d55698eb25fbbf5d8e2d2a1b79a91f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38159,
        "upload_time": "2022-09-21T05:33:55",
        "upload_time_iso_8601": "2022-09-21T05:33:55.326668Z",
        "url": "https://files.pythonhosted.org/packages/01/b8/169c6a121742f594e15e0181d43c690efe12f511f1dd5580c3ab11de68a0/imx_openzeppelin_cairo_contracts-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "056e11dca1b733098c8e98799e011e87ce59a03db74e9b5a451467b14a71fe2b",
          "md5": "daa737806145082b15f58ce16b534a2a",
          "sha256": "078371dd44c11bdf03400137ea09da6aee3318a7b15570c3f30b99839ae1c289"
        },
        "downloads": -1,
        "filename": "imx_openzeppelin_cairo_contracts-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "daa737806145082b15f58ce16b534a2a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 130483,
        "upload_time": "2022-09-21T05:33:58",
        "upload_time_iso_8601": "2022-09-21T05:33:58.176519Z",
        "url": "https://files.pythonhosted.org/packages/05/6e/11dca1b733098c8e98799e011e87ce59a03db74e9b5a451467b14a71fe2b/imx_openzeppelin_cairo_contracts-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "01b8169c6a121742f594e15e0181d43c690efe12f511f1dd5580c3ab11de68a0",
        "md5": "99d55698eb25fbbf5d8e2d2a1b79a91f",
        "sha256": "344508bd27fe1f2dba6a1fa703db2b73ee80ee34b64f5c24ba24c40588f064c5"
      },
      "downloads": -1,
      "filename": "imx_openzeppelin_cairo_contracts-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "99d55698eb25fbbf5d8e2d2a1b79a91f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 38159,
      "upload_time": "2022-09-21T05:33:55",
      "upload_time_iso_8601": "2022-09-21T05:33:55.326668Z",
      "url": "https://files.pythonhosted.org/packages/01/b8/169c6a121742f594e15e0181d43c690efe12f511f1dd5580c3ab11de68a0/imx_openzeppelin_cairo_contracts-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "056e11dca1b733098c8e98799e011e87ce59a03db74e9b5a451467b14a71fe2b",
        "md5": "daa737806145082b15f58ce16b534a2a",
        "sha256": "078371dd44c11bdf03400137ea09da6aee3318a7b15570c3f30b99839ae1c289"
      },
      "downloads": -1,
      "filename": "imx_openzeppelin_cairo_contracts-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "daa737806145082b15f58ce16b534a2a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 130483,
      "upload_time": "2022-09-21T05:33:58",
      "upload_time_iso_8601": "2022-09-21T05:33:58.176519Z",
      "url": "https://files.pythonhosted.org/packages/05/6e/11dca1b733098c8e98799e011e87ce59a03db74e9b5a451467b14a71fe2b/imx_openzeppelin_cairo_contracts-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}