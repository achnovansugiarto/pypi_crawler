{
  "info": {
    "author": "",
    "author_email": "Ken Greim <ken.greim+vatsimapi@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Games/Entertainment :: Simulation",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# What is PyVatsim?\nPyVatsim is a Python library to interact with data from Vatsim's live datafeed, currently located at: http://data.vatsim.net/. It implements Python objects to access the underlying Vatsim data in a Pythonic way, and also parses certain data into developer friendly formats (e.g., timestamp strings into Python datetime objects). \n\nBecause Vatsim's datafeed is updated every ~15 seconds, Py-API supports configurable caching of data from the datafeed so that each access method does not fetch the datafeed (although a \"force update\" override exists if needed).\n\n# Status\nThis project is in alpha state. It currently offers full functionality to access the Vatsim live data (with time-based caching support), but\nfurther work is needed in the areas of: documentation, error handling, caching, configurability, testing.\n\n# Installation\n\nThe easiest way to install is via pip.\n```\npip install pyvatsim\n```\n\nAlternatively, you can use the `pyvatsim` folder or `liveapi.py` as a package or single-file module, respectively. Make sure you have the necessary 3rd-party libraries installed with `pip` (at the moment, only `requests` is required).\n\n# How to Develop\nClone the repo and create a new Python virtual environment using `requirements.txt`, which should look something like:\n```\ngit clone https://github.com/kengreim/PyVatsim.git\ncd pyvatsim\npython3 -m venv venv\n./venv/Scripts/Activate\npip install -r requirements.txt\n```\n\n# Full Documentation\nTBD\n\n# Known Issues and Noteworthy Considerations\nTBD\n\n# Examples\n\n## Create API object\nUse default caching periods (60 seconds for METARs and 15 seconds for network data)\n```python\nimport pyvatsim\napi = pyvatsim.VatsimLiveAPI()\n```\n\n## Create API object with different cache TTLs\nConfigurable with the `DATA_TTL` and `METAR_TTL` arguments, which speciy how long network data and METAR data should be cached (in seconds), respectively\n```python\nimport pyvatsim\n# 1 min network data cache and 5 min METAR cache\napi = pyvatsim.VatsimLiveAPI(DATA_TTL=60, METAR_TTL=300)\n```\n\n## Retrieve all pilots or controllers and iterate through them\n`pilots()` returns a dictionary of `Pilot` instances with each `Pilot.cid` as the dictionary key\n\n`controllers()` returns a dictionary of `Controller` instances with each `Controller.cid` as the dictionary key\n```python\np = api.pilots()\nfor cid, pilot in p.items():\n    # Do something here\n\nc = api.controllers()\nfor cid, controller in c.items():\n    # Do something here\n```\n\n## Retrieve a list of pilots  or controllers based on multiple CIDs\n`cids` argument expects either a single integer or a list of integers.\n\n`pilots(cid)` returns a dictionary of `Pilot` instances based on exact CID matches, or `None` if no matches are found\n\n`controllers(cid)` returns a dictionary of `Controller` instances based on exact CID matches, or `None` if no matches are found\n```python\np = api.pilots(cids=[123456, 234567, 345678])\nfor cid, pilot in p.items():\n    # Do something here\n\nc = api.controllers(cids=[123456, 234567, 345678])\nfor cid, controller in c.items():\n    # Do something here\n```\n\n## Retrieve a list of pilots or controllers based on one or more string regular expressions\n`callsigns` argument expects either a single string or a list of strings. `callsigns` argument will be ignored if `cids` argument is provided, as in the example above.\n\n`pilots(callsigns)` will evaluate each string as a Python regular expression and return a dictionary of `Pilot` instances where the Pilot's callsign matches one of the given callsign regular expressions (using `re.search`), or `None` if no matches are found\n\n`controllers(callsigns)` will evaluate each string as a Python regular expression and return a dictionary of `Controller` instances where the Controller's callsign matches one of the given callsign regular expressions (using `re.search`), or `None` if no matches are found\n```python\np = api.pilots(callsigns=['UAL123', 'UAL', 'SWA'])\nfor cid, pilot in p.items():\n    # Do something here\n\n# Note that last item uses regex to match OAK_CTR, OAK_41_CTR, OAK_44_CTR, etc. but not OAK_GND\nc = api.controllers(callsigns=['SFO', 'SJC', 'OAK.*_CTR'])\nfor cid, controller in c.items():\n    # Do something here\n```\n\n## Retrieve a single pilot or controller by Vatsim CID or callsign\n`cid` argument expects an integer. `callsign` argument expects a string. . If both `cid` and `callsign` arguments are provided, only `cid` will be used.\n\n`pilot()` returns a single `Pilot` instance based on exact CID or callsign string match (both are unique on the Vatsim network for Pilots) or `None`\n\n`controller()` returns a single `Controller` instance based on exact CID or callsign string match (both are unique on the Vatsim network for Controllers) or `None`\n```python\np1 = api.pilot(cid=123456)\np2 = api.pilot(callsign='UAL123')\n\nc1 = api.controller(cid=123456)\nc2 = api.controller(callsign='SFO_TWR')\n```\n\n## Retrieve all METARs\n```python\nm = api.metars()\nfor field, metar in m.items():\n    # Do something\n```\n\n## Retrieve a subset of METARs\n```python\nm = api.metars(['KSFO', 'KLAX', 'KSJC'])\nfor field, metar in m.items():\n    # Do something\n```\n\n## Retrieve a single METAR\n```python\nm = api.metar('KSFO')\n```\n\n## Access information about a pilot and their flightplan\n```python\np = api.pilots()\nfor cid, pilot in p.items():\n    if pilot.flight_plan is not None:\n        print('%s departed from %s and is going to %s at current altitude %i' % (pilot.callsign, pilot.flight_plan.departure, pilot.flight_plan.arrival, pilot.altitude))\n    else:\n        print('%s is at current altitude %i with no flight plan' % (pilot.callsign, pilot.altitude))\n```\n\n## Get information about a controller\n```python\nc = api.controllers()\nfor cid, controller in c.items():\n    print('%s controlling position %s on %s' % (controller.name, controller.callsign, controller.frequency))\n```\n\n# Todo\nTBD\n\n# License\nVatsim Py-API is licensed under the MIT License.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyvatsim",
    "package_url": "https://pypi.org/project/pyvatsim/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyvatsim/",
    "project_urls": {
      "Bug Tracker": "https://github.com/kengreim/Vatsim-Py-API/issues",
      "Homepage": "https://github.com/kengreim/Vatsim-Py-API"
    },
    "release_url": "https://pypi.org/project/pyvatsim/0.1.2/",
    "requires_dist": [
      "requests>=2.28"
    ],
    "requires_python": ">=3.10",
    "summary": "Library to access Vatsim live data and APIs",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15931452,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08d3675c399ce1ecee7cef1f504489cbb256f62751febdf918381ac4612d2ffe",
          "md5": "843a5e9fb227d201e1aab09d7f08aba5",
          "sha256": "4122d845f89fbc047abca1a52a4f3c4564e24071cb7aa9c7b7525b46e7c814ff"
        },
        "downloads": -1,
        "filename": "pyvatsim-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "843a5e9fb227d201e1aab09d7f08aba5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9055,
        "upload_time": "2022-11-29T06:43:19",
        "upload_time_iso_8601": "2022-11-29T06:43:19.633863Z",
        "url": "https://files.pythonhosted.org/packages/08/d3/675c399ce1ecee7cef1f504489cbb256f62751febdf918381ac4612d2ffe/pyvatsim-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb64fba8fca0ef5dc6a855ecee1c342790cafee9b5fd4119acfe34a6b1bad43a",
          "md5": "63e038255c3a6383fa91c7970bf45730",
          "sha256": "5de9b992ada0b50da67c87af82e19bdff482be0a15ca5fdd236ed6b7c63554b0"
        },
        "downloads": -1,
        "filename": "pyvatsim-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "63e038255c3a6383fa91c7970bf45730",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11032,
        "upload_time": "2022-11-29T06:43:21",
        "upload_time_iso_8601": "2022-11-29T06:43:21.151350Z",
        "url": "https://files.pythonhosted.org/packages/cb/64/fba8fca0ef5dc6a855ecee1c342790cafee9b5fd4119acfe34a6b1bad43a/pyvatsim-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48a9fe9e80205f82b60b2be4ce9aa082d531b077405e810deb2b83ce919ab36a",
          "md5": "10621624dff7b926cbb11eee4688dbdc",
          "sha256": "463a22f543593e23cd002770564e22e558a6f24f58f680505c69ea98abbb5e4d"
        },
        "downloads": -1,
        "filename": "pyvatsim-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10621624dff7b926cbb11eee4688dbdc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8334,
        "upload_time": "2022-11-29T07:06:27",
        "upload_time_iso_8601": "2022-11-29T07:06:27.389482Z",
        "url": "https://files.pythonhosted.org/packages/48/a9/fe9e80205f82b60b2be4ce9aa082d531b077405e810deb2b83ce919ab36a/pyvatsim-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86c412c362fc5dec4789f76495d11c42a396db09d7fd421e4c373d3ae499ca6d",
          "md5": "7afe19ea9d13cf570480bde0f63a2c66",
          "sha256": "3af8e8cc79d329270dfa74a86c628a1e9d8290684181098fc252a2823d8b5960"
        },
        "downloads": -1,
        "filename": "pyvatsim-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7afe19ea9d13cf570480bde0f63a2c66",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11047,
        "upload_time": "2022-11-29T07:06:29",
        "upload_time_iso_8601": "2022-11-29T07:06:29.228396Z",
        "url": "https://files.pythonhosted.org/packages/86/c4/12c362fc5dec4789f76495d11c42a396db09d7fd421e4c373d3ae499ca6d/pyvatsim-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b077957d27d5b6a9b82add92cf43062cdb5bb8b8b96916415680fcba9a78e94d",
          "md5": "bee4b106a08397f0e69ccf3ea484f57f",
          "sha256": "be7f62b35998cad50a18aa6c6bac06bcdc0dc6e1e60155521d8a54bb03eab435"
        },
        "downloads": -1,
        "filename": "pyvatsim-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bee4b106a08397f0e69ccf3ea484f57f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 8634,
        "upload_time": "2022-11-29T18:29:39",
        "upload_time_iso_8601": "2022-11-29T18:29:39.929344Z",
        "url": "https://files.pythonhosted.org/packages/b0/77/957d27d5b6a9b82add92cf43062cdb5bb8b8b96916415680fcba9a78e94d/pyvatsim-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcabf08a7c876b61538af6dc3f04bc8672f27d821c7502b23c445ca1ca2ac0e3",
          "md5": "3be96c5ce7dc767bf97287e74278e698",
          "sha256": "852c2a9f4ec3a32640a8f6763eb1f1fa4378201757ee6f97b0ff770aeee4d14c"
        },
        "downloads": -1,
        "filename": "pyvatsim-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3be96c5ce7dc767bf97287e74278e698",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 11644,
        "upload_time": "2022-11-29T18:29:41",
        "upload_time_iso_8601": "2022-11-29T18:29:41.347692Z",
        "url": "https://files.pythonhosted.org/packages/bc/ab/f08a7c876b61538af6dc3f04bc8672f27d821c7502b23c445ca1ca2ac0e3/pyvatsim-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b077957d27d5b6a9b82add92cf43062cdb5bb8b8b96916415680fcba9a78e94d",
        "md5": "bee4b106a08397f0e69ccf3ea484f57f",
        "sha256": "be7f62b35998cad50a18aa6c6bac06bcdc0dc6e1e60155521d8a54bb03eab435"
      },
      "downloads": -1,
      "filename": "pyvatsim-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bee4b106a08397f0e69ccf3ea484f57f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 8634,
      "upload_time": "2022-11-29T18:29:39",
      "upload_time_iso_8601": "2022-11-29T18:29:39.929344Z",
      "url": "https://files.pythonhosted.org/packages/b0/77/957d27d5b6a9b82add92cf43062cdb5bb8b8b96916415680fcba9a78e94d/pyvatsim-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bcabf08a7c876b61538af6dc3f04bc8672f27d821c7502b23c445ca1ca2ac0e3",
        "md5": "3be96c5ce7dc767bf97287e74278e698",
        "sha256": "852c2a9f4ec3a32640a8f6763eb1f1fa4378201757ee6f97b0ff770aeee4d14c"
      },
      "downloads": -1,
      "filename": "pyvatsim-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "3be96c5ce7dc767bf97287e74278e698",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 11644,
      "upload_time": "2022-11-29T18:29:41",
      "upload_time_iso_8601": "2022-11-29T18:29:41.347692Z",
      "url": "https://files.pythonhosted.org/packages/bc/ab/f08a7c876b61538af6dc3f04bc8672f27d821c7502b23c445ca1ca2ac0e3/pyvatsim-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}