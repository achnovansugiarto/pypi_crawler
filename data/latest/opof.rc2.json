{
  "info": {
    "author": "Yiyuan Lee",
    "author_email": "yiyuan.lee@rice.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<p align=\"center\">\n    <img src=\"https://github.com/opoframework/opof/blob/master/docs/_static/img/banner.svg?raw=true\" width=\"500px\"/>\n</p>\n\nOPOF, the Open-Source Planner Optimization Framework, is an open source framework for developing domains and algorithms for planner optimization. It provides a standard API to communicate between optimization algorithms and domains, along with a set of stable algorithm implementations. \n\nOur complete documentation is available at [https://opof.kavrakilab.org](https://opof.kavrakilab.org).\n\n[![Build and Test](https://github.com/opoframework/opof/actions/workflows/build_and_test.yml/badge.svg)](https://github.com/opoframework/opof/actions/workflows/build_and_test.yml)\n\nOPOF is maintained by the [Kavraki Lab](https://kavrakilab.org) at Rice University.\n\n## Algorithms\n\nOPOF includes the following stable algorithm implementations. \n\n* [Generator-Critic (GC)](https://opof.kavrakilab.org/algorithms/GC.html) - Learns a conditional and stochastic generator using gradient-based deep learning techniques.\n* [SMAC](https://opof.kavrakilab.org/algorithms/SMAC.html) - Learns an unconditional and deterministic generator using the latest Bayesian optimization techniques. Wrapper around the actively maintained [SMAC3](https://github.com/automl/SMAC3) Bayesian optimization library. \n\nWe expect the list to grow with time, and welcome any additions.\n\n## Domains\n\nDomains are available as external packages maintained separately from OPOF. Some existing domain include:\n\n* [opof-grid2d](https://github.com/opoframework/opof-grid2d) - Simple navigation domains in a 2D grid world to help users familiarize with OPOF. They also act as a sanity check for developing optimization algorithms.\n* [opof-sbmp](https://github.com/opoframework/opof-sbmp) - Sampling-based motion planning (SBMP) domains for high-DoF robots to accomplish real-world picking tasks. They include the optimization of planner hyperparameters, sampling distributions, and projections.\n* [opof-pomdp](https://github.com/opoframework/opof-pomdp) - Online POMDP planning domains for 2D navigation under uncertainty. They include the optimization of macro-actions.\n\nWe expect the list to grow with time, and welcome any additions.\n\n## Installation\n\nTo install OPOF's core library, run `pip install opof`.\n\nExternal packages containing additional domains and algorithms may be installed alongside OPOF. Please refer to the specific package's setup instructions.\n\nOPOF is officially tested and supported for Python 3.9, 3.10, 3.11 on Linux.\n\n## API\nBelow is an example of interacting with the `RandomWalk2D[11]` domain. \n\n```python\nfrom opof_grid2d.domains import RandomWalk2D\n\ndomain = RandomWalk2D(11)\nproblems = domain.create_problem_set()\nplanner = domain.create_planner()\n\nparameters = [pspace.rand(100).numpy() for pspace in domain.composite_parameter_space()]\nfor i in range(100):\n    result = planner(problems(), [p[i] for p in parameters])\n    print(result[\"objective\"])\n```\n\nUsing our built-in `opof.algorithms.GC` planner optimization algorithm is surprisingly easy.\n\n```python\n   from opof_grid2d.domains import RandomWalk2D\n   from opof.algorithms import GC\n\n   domain = RandomWalk2D(11)\n   algo = GC(domain, iterations=100000, eval_folder=\"results/RandomWalk2D[11]\")\n   algo()\n```\n\nEvaluation results stored at ``results/RandomWalk2D[11]`` can be viewed by running\n\n```console\n  $ tensorboard --logdir=results/\n```\n\nOur complete documentation is available at [https://opof.kavrakilab.org](https://opof.kavrakilab.org).\n\n## Citing\nTBC\n\n## License\n\nOPOF is licensed under the [BSD-3 license](https://github.com/opoframework/opof/blob/master/LICENSE.md).\n\nOPOF is maintained by the [Kavraki Lab](https://www.kavrakilab.org/) at Rice University, funded in part by NSF RI 2008720 and Rice University funds.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://opof.kavrakilab.org",
    "keywords": "opof,optimization,machine learning,reinforcement learning,planning,robotics",
    "license": "BSD-3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "opof",
    "package_url": "https://pypi.org/project/opof/",
    "platform": null,
    "project_url": "https://pypi.org/project/opof/",
    "project_urls": {
      "Documentation": "https://opof.kavrakilab.org",
      "Homepage": "https://opof.kavrakilab.org",
      "Source": "https://github.com/opoframework/opof"
    },
    "release_url": "https://pypi.org/project/opof/0.2.0/",
    "requires_dist": [
      "torch",
      "tqdm",
      "pyyaml",
      "swig",
      "smac (==2.0.0)",
      "scikit-learn (==1.2.0)",
      "tensorboard",
      "pytest ; extra == 'tests'",
      "pytest-cov ; extra == 'tests'"
    ],
    "requires_python": ">=3.9",
    "summary": "Open-source framework for solving the Planner Optimization Problem",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17262241,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "474d6aec5fb6b0a76c5901e2bbaf4de1f9ee4b4157a09cf2823ff09e17dd4a03",
          "md5": "220044cbafa186ae175c7ff4c0930913",
          "sha256": "c1f8febda9414676107efe078be9731beea42fb5cfc05ca63dcf97cb8316d986"
        },
        "downloads": -1,
        "filename": "opof-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "220044cbafa186ae175c7ff4c0930913",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1914,
        "upload_time": "2023-01-26T16:31:16",
        "upload_time_iso_8601": "2023-01-26T16:31:16.643170Z",
        "url": "https://files.pythonhosted.org/packages/47/4d/6aec5fb6b0a76c5901e2bbaf4de1f9ee4b4157a09cf2823ff09e17dd4a03/opof-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "415b736bf0f6b09e52416bfed647b86b6782ad9e7d2ad810507773e58606731f",
          "md5": "2d313a99c6477e68d9b98a9eeaeec799",
          "sha256": "307a597f7b389fecb54e88dd353246712e560be1a893b63d9a60882c477bab39"
        },
        "downloads": -1,
        "filename": "opof-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d313a99c6477e68d9b98a9eeaeec799",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 32566,
        "upload_time": "2023-03-12T18:00:56",
        "upload_time_iso_8601": "2023-03-12T18:00:56.423712Z",
        "url": "https://files.pythonhosted.org/packages/41/5b/736bf0f6b09e52416bfed647b86b6782ad9e7d2ad810507773e58606731f/opof-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "415b736bf0f6b09e52416bfed647b86b6782ad9e7d2ad810507773e58606731f",
        "md5": "2d313a99c6477e68d9b98a9eeaeec799",
        "sha256": "307a597f7b389fecb54e88dd353246712e560be1a893b63d9a60882c477bab39"
      },
      "downloads": -1,
      "filename": "opof-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2d313a99c6477e68d9b98a9eeaeec799",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 32566,
      "upload_time": "2023-03-12T18:00:56",
      "upload_time_iso_8601": "2023-03-12T18:00:56.423712Z",
      "url": "https://files.pythonhosted.org/packages/41/5b/736bf0f6b09e52416bfed647b86b6782ad9e7d2ad810507773e58606731f/opof-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}