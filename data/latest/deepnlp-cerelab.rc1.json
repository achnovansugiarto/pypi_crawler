{
  "info": {
    "author": "Dat Tien Nguyen and Hieu Trung Pham",
    "author_email": "nduc0231@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# DeepNLP\nThis is a new natural language processing library based on modern deep learning methods. The library focus on basic NLP tasks such as: POS (part of speech), NER (named entity recognition) and DP (dependency parsing). The main language is English but we are working hard to support Vietnamese and others in the near future.\n\n## Installation ðŸ”¥\n- This repository is tested on python 3.7+ and Tensorflow 2.8+\n- Deepnlp can be installed using pip as follows: \n```\npip install deepnlp-cerelab \n```\n- Deepnlp can also be installed from source with the following commands: \n```\ngit clone https://github.com/hieupth/deepnlp.git\ncd deepnlp/\npip install -e .\n```\n## Tutorials ðŸ¥®\n\n- [1. Sentence Segmentation](#sentence_tokenize)\n- [2. Word Tokenizer](#word_tokenize)\n- [3. Install and load pretrained model and vocabs](#pretrained)\n- [4. POS Tagging](#xpos)\n- [5. Named Entity Recognition](#ner)\n- [6. Dependency Parsing](#parser)\n- [7. Multil Task](#multi)\n- [8. Clear Cache](#cache)\n- [9. List of pretrained models](#list_pretrained)\n\n### 1. Sentence Segmentation\n<a name= 'sentence_tokenize'></a>\nUsage\n\n```python\n>>> import deepnlp \n>>> text = \"\"\"\\\nMr. Smith bought cheapsite.com for 1.5 million dollars, i.e. he paid a lot for it. Did he mind? Adam Jones Jr. thinks he didn't. In any case, this isn't true... Well, with a probability of .9 it isn't.\n\"\"\"\n>>> deepnlp.sentence_tokenize(text)\n['Mr. Smith bought cheapsite.com for 1.5 million dollars, i.e. he paid a lot for it.',\n 'Did he mind?',\n \"Adam Jones Jr. thinks he didn't.\",\n \"In any case, this isn't true...\",\n \"Well, with a probability of .9 it isn't.\",\n '']\n```\n### 2. Word Tokenize\nUsage\n<a name= 'word_tokenize'> </a>\n\n```python\n>>> import deepnlp \n>>> text = \"I have an apple.\"\n>>> deepnlp.word_tokenize(text)\n['I', 'have', 'an', 'apple', '.']\n```\n### 3. Install and load pretrained model and vocabs \n- Install pretrained model and vocabs\n<a name= 'pretrained'></a>\n\n```python \n>>> import deepnlp\n>>> deepnlp.download('deepnlp_eng')\n```\n- Or you can also install pretrained model and vocabs independently of each other \n\n```python\n>>> import deepnlp \n>>> deepnlp.download_model('deepnlp_eng')\n>>> deepnlp.download_vocabs('deepnlp_eng')\n```\n- Load models and vocabs \n\n```python\n>>> import deepnlp \n>>> model = deepnlp.load_model('deepnlp_eng')\n>>> vocabs= deepnlp.load_vocabs('deepnlp_eng', task= 'multi') # pos, ner, dp\n```\n### 4. POS Tagging\n<a name= 'xpos'></a>\n\n- With `PosTagger` class \n```python\n>>> import deepnlp\n>>> model= deepnlp.PosTagger('deepnlp_eng')\n>>> model \nmodel_name: deepnlp_eng, vocab_name: deepnlp_eng, tokenizer_name: distilroberta-base\n>>> output= model.inference('I have an apple.', device= 'cpu') # default device = 'cpu'\n>>> output\n<deepnlp.utils.data_struct.TokenClassificationData at 0x7fbc3ddbab90>\n>>> output.value()\n{'Sequence': 'I have an apple.',\n 'Inference': {'I': {'score': 0.9175689, 'label': 'PRP'},\n  'have': {'score': 0.9232193, 'label': 'VBP'},\n  'an': {'score': 0.9158458, 'label': 'DT'},\n  'apple': {'score': 0.86957675, 'label': 'NN'},\n  '.': {'score': 0.8892631, 'label': '.'}}}\n>>> deepnlp.print_out([output])\nI have an apple.\n1\tI\tPRP\n2\thave\tVBP\n3\tan\tDT\n4\tapple\tNN\n5\t.       .\n```\n- With `pipeline` class\n\n```python\n>>> import deepnlp \n>>> model= deepnlp.load_model('deepnlp_eng')\n>>> pipeline= deepnlp.pipeline(model, task= 'pos_tagger')\n>>> output= pipeline(\"I have an apple.\", device= 'cpu') # default device = 'cpu'\n>>> deepnlp.print_out([output])\nI have an apple.\n1\tI\tPRP\n2\thave\tVBP\n3\tan\tDT\n4\tapple\tNN\n5\t.       .\n```\n### 5. Named Entity Recognition\n<a name= 'ner'></a>\nWith `NerTagger` class \n\n```python \n>>> import deepnlp\n>>> model = deepnlp.NerTagger('deepnlp_eng')\n>>> output= model.inference('Please confirm your song choice: Same Old War, playing on the kitchen speaker', device= 'cpu') # default device = 'cpu'\noutput\n<deepnlp.utils.data_struct.TokenClassificationData at 0x7f69d9504750>\n>>> output.value()\n{'Sequence': 'Please confirm your song choice: Same Old War, playing on the kitchen speaker',\n 'Inference': {'Same': {'score': 0.922773, 'label': 'B-MISC'},\n  'Old': {'score': 0.9353856, 'label': 'I-MISC'},\n  'War': {'score': 0.92017937, 'label': 'I-MISC'}}}\n>>> deepnlp.print_out([output], del_prefix_ner= False) # if you set del_prefix_ner= True, B-MISC or I-MISC will become MISC \nPlease confirm your song choice: Same Old War, playing on the kitchen speaker\n1\tPlease\t    O\n2\tconfirm\t    O\n3\tyour\t    O\n4\tsong        O\n5\tchoice \t    O\n6\tSame\t    B-MISC\n7\tOld\t    I-MISC\n8\tWar\t    I-MISC\n9\t,\t    O\n10\tplaying\t    O\n11\ton\t    O\n12\tthe\t    O\n13\tkitchen\t    O\n14\tspeaker\t    O\n```\nWith `pipeline` class \n\n```python\n>>> import deepnlp\n>>> model= deepnlp.load_model('deepnlp_eng')\n>>> pipeline= deepnlp.pipeline(model, task= 'ner_tagger')\n>>> output= pipeline(\"Please confirm your song choice: Same Old War, playing on the kitchen speaker\") \n>>> deepnlp.print_out([output], del_prefix_ner= True, device= 'cpu') # default device = 'cpu'\nPlease confirm your song choice: Same Old War, playing on the kitchen speaker\n1\tPlease\t    O\n2\tconfirm\t    O\n3\tyour\t    O\n4\tsong        O\n5\tchoice \t    O\n6\tSame\t    MISC\n7\tOld\t    MISC\n8\tWar\t    MISC\n9\t,\t    O\n10\tplaying\t    O\n11\ton\t    O\n12\tthe\t    O\n13\tkitchen\t    O\n14\tspeaker\t    O\n```\n### 6. Dependency Parsing \n<a name= 'parser'></a>\nWith `DPParser` class\n\n```python \n>>> import deepnlp\n>>> model = deepnlp.DPParser('deepnlp_eng')\n>>> output= model.inference(\"I have an apple.\", device= 'cpu') # default device = 'cpu'\n>>> output \n<deepnlp.utils.data_struct.ParserData at 0x7f69da3125d0>\n>>> output.value()\n{'Sequence': 'I have an apple.',\n 'Inference': {'xpos': ['PRP', 'VBP', 'DT', 'NN', '.'],\n  'head': [2, 0, 4, 2, 2],\n  'rela': ['nsubj', 'root', 'det', 'obj', 'punct']}}\n>>> deepnlp.print_out([output])\nI have an apple.\n1\tI\t    PRP\t  2\t  nsubj\n2\thave\t    VBP\t  0\t  root\n3\tan\t    DT\t  4\t  det\n4\tapple\t    NN\t  2\t  obj\n5\t.\t    .\t  2\t  punct\n```\nWith `pipeline` class \n\n```python \n>>> import deepnlp\n>>> model= deepnlp.load_model('deepnlp_eng')\n>>> pipeline= deepnlp.pipeline(model, task= 'dp_parser')\n>>> output= pipeline(\"I have an apple.\", device= 'cpu') # default device = 'cpu'\n>>> deepnlp.print_out([output])\nI have an apple.\n1\tI\t    PRP\t  2\t  nsubj\n2\thave\t    VBP\t  0\t  root\n3\tan\t    DT\t  4\t  det\n4\tapple\t    NN\t  2\t  obj\n5\t.\t    .\t  2\t  punct\n```\n\n### 7. Multi Task \n<a name= 'multi'></a>\nWith `MultiTask`\n\n```python\n>>> import deepnlp\n>>> model = deepnlp.MultiTask('deepnlp_eng')\n>>> output= model.inference(\"Please confirm your song choice: Same Old War, playing on the kitchen speaker\", device= 'cpu') # default device = 'cpu'\n>>> output \n<deepnlp.utils.data_struct.MultiData at 0x7f69da8f7650>\n>>> deepnlp.print_out([output])\nPlease confirm your song choice: Same Old War, playing on the kitchen speaker\n1\tPlease\t  UH\tO\t2\tdiscourse\n2\tconfirm\t  VB\tO\t0\troot\n3\tyour\t  PRP$\tO \t5\tnmod:poss\n4\tsong\t  NN\tO\t5\tcompound\n5\tchoice\t  NN\tO \t2\tobj\n6\tSame\t  JJ\tMISC\t8\tamod\n7\tOld\t  NNP\tMISC\t8\tcompound\n8\tWar\t  NNP\tMISC\t2\tobj\n9\t,\t  ,\tO\t2\tpunct\n10\tplaying\t  VBG\tO\t2\tadvcl\n11\ton\t  IN\tO\t14\tcase\n12\tthe\t  DT\tO\t14\tdet\n13\tkitchen\t  NN\tO\t14\tcompound\n14\tspeaker   NN\tO\t10\tobl\n```\nWith `pipeline` \n\n```python\n>>> import deepnlp \n>>> model= deepnlp.load_model('deepnlp_eng')\n>>> pipeline= deepnlp.pipeline(model, task= 'multi')\n>>> output= pipeline(\"Please confirm your song choice: Same Old War, playing on the kitchen speaker\", device= 'cpu') # default device = 'cpu'\n>>> deepnlp.print_out([output])\nPlease confirm your song choice: Same Old War, playing on the kitchen speaker\n1\tPlease\t  UH\tO\t2\tdiscourse\n2\tconfirm\t  VB\tO\t0\troot\n3\tyour\t  PRP$\tO \t5\tnmod:poss\n4\tsong\t  NN\tO\t5\tcompound\n5\tchoice\t  NN\tO \t2\tobj\n6\tSame\t  JJ\tMISC\t8\tamod\n7\tOld\t  NNP\tMISC\t8\tcompound\n8\tWar\t  NNP\tMISC\t2\tobj\n9\t,\t  ,\tO\t2\tpunct\n10\tplaying\t  VBG\tO\t2\tadvcl\n11\ton\t  IN\tO\t14\tcase\n12\tthe\t  DT\tO\t14\tdet\n13\tkitchen\t  NN\tO\t14\tcompound\n14\tspeaker   NN\tO\t10\tobl\n```\n### 8. Clear Cache\n<a name= 'cache'></a>\n\n- Remove pretrained model and vocabs `deepnlp_eng`\n```python\n>>> deepnlp.clear_cache('deepnlp_eng')\n```\n- Or\n```python\n>>> deepnlp.clear_model('deepnlp_eng')\n>>> deepnlp.clear_vocabs('deepnlp_eng') \n```\n\n### 9. List of pretrained models\n<a name= 'list_pretrained'></a>\n- `deppnlp_eng` - support for English:  <a href= 'https://drive.google.com/drive/folders/1ub0T9T70lcrAq5C3fH3fy8QqCgkYSZlm?usp=sharing'>download pretrained model</a> - <a href= 'https://drive.google.com/drive/folders/1SS7ra-xnaAQ2Y5KeR5ulQAqu-OtPKbhJ?usp=sharing'>download vocabs </a>\n- `deepnlp_vie` - support for Vietnamese: Will be updated in the future\n## License\n[Apache 2.0 License](https://github.com/hieupth/deepnlp). <br>\nCopyright &copy; 2022 [Hieu Pham](https://github.com/hieupth). All rights reserved.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hieupth/deepnlp",
    "keywords": "deepnlp",
    "license": "",
    "maintainer": "Dat Tien Nguyen",
    "maintainer_email": "nduc0231@gmail.com",
    "name": "deepnlp-cerelab",
    "package_url": "https://pypi.org/project/deepnlp-cerelab/",
    "platform": null,
    "project_url": "https://pypi.org/project/deepnlp-cerelab/",
    "project_urls": {
      "Homepage": "https://github.com/hieupth/deepnlp"
    },
    "release_url": "https://pypi.org/project/deepnlp-cerelab/1.0.2/",
    "requires_dist": [
      "transformers (>=4.21.3)",
      "tensorflow (>=2.8.2)",
      "numpy",
      "gdown (>=4.4.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Natural language processing package based on modern deep learning methods",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15075836,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7088fd129318c13e6d7173cc9adb60ccddd95360c6ef95ffb2d117a15880a524",
          "md5": "9fa973003899b7f32a868872a9e1440a",
          "sha256": "d313870ee8933f81f123835b2a744c1bde47ccdf013ca5ba093971b0b616cceb"
        },
        "downloads": -1,
        "filename": "deepnlp_cerelab-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9fa973003899b7f32a868872a9e1440a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13793,
        "upload_time": "2022-09-13T07:02:20",
        "upload_time_iso_8601": "2022-09-13T07:02:20.674970Z",
        "url": "https://files.pythonhosted.org/packages/70/88/fd129318c13e6d7173cc9adb60ccddd95360c6ef95ffb2d117a15880a524/deepnlp_cerelab-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35884d6a5ece03f0bd15ac59b27ba4df22a91787a80937f843b5e512584923af",
          "md5": "ab230b5bf97dfe0dee3cf75a52df3184",
          "sha256": "76fe678148f15133feb3023b3adafc2a9644cb8715df068142a1d729114733be"
        },
        "downloads": -1,
        "filename": "deepnlp-cerelab-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ab230b5bf97dfe0dee3cf75a52df3184",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14613,
        "upload_time": "2022-09-13T07:02:24",
        "upload_time_iso_8601": "2022-09-13T07:02:24.472645Z",
        "url": "https://files.pythonhosted.org/packages/35/88/4d6a5ece03f0bd15ac59b27ba4df22a91787a80937f843b5e512584923af/deepnlp-cerelab-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7088fd129318c13e6d7173cc9adb60ccddd95360c6ef95ffb2d117a15880a524",
        "md5": "9fa973003899b7f32a868872a9e1440a",
        "sha256": "d313870ee8933f81f123835b2a744c1bde47ccdf013ca5ba093971b0b616cceb"
      },
      "downloads": -1,
      "filename": "deepnlp_cerelab-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9fa973003899b7f32a868872a9e1440a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 13793,
      "upload_time": "2022-09-13T07:02:20",
      "upload_time_iso_8601": "2022-09-13T07:02:20.674970Z",
      "url": "https://files.pythonhosted.org/packages/70/88/fd129318c13e6d7173cc9adb60ccddd95360c6ef95ffb2d117a15880a524/deepnlp_cerelab-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35884d6a5ece03f0bd15ac59b27ba4df22a91787a80937f843b5e512584923af",
        "md5": "ab230b5bf97dfe0dee3cf75a52df3184",
        "sha256": "76fe678148f15133feb3023b3adafc2a9644cb8715df068142a1d729114733be"
      },
      "downloads": -1,
      "filename": "deepnlp-cerelab-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ab230b5bf97dfe0dee3cf75a52df3184",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 14613,
      "upload_time": "2022-09-13T07:02:24",
      "upload_time_iso_8601": "2022-09-13T07:02:24.472645Z",
      "url": "https://files.pythonhosted.org/packages/35/88/4d6a5ece03f0bd15ac59b27ba4df22a91787a80937f843b5e512584923af/deepnlp-cerelab-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}