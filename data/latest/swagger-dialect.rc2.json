{
  "info": {
    "author": "robertbetts",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Database :: Front-Ends"
    ],
    "description": "# swagger-dialect\nSQLAlchemy Swagger definition reflection \n\n*Swagger_DBAPI* : DBAPI compatible class that returns Swagger model definitions as:\n* Tables\n* Columns\n* Foreign key relationships\n\nVery important to Note, currently a primary key identity column `id` is added to each extracted table definition\n\n*SwaggerDialect* : SQLAlchemy dialect which can translate the schema extraction via Swagger_DBAPI into valid SQLAlchemy MetaData\n\nPython 10 support only as use is made of the new match statement syntax\n\nHere is an example where Python code is generated for SQLAlchemy from the Swagger definitions. (sqlacodegen>=3.0rc1)\n\n```python\nimport logging\nimport argparse\nimport sys\nfrom contextlib import ExitStack\nfrom typing import TextIO\nfrom sqlalchemy.engine import create_engine\nfrom sqlalchemy.schema import MetaData\nfrom sqlacodegen.generators import DeclarativeGenerator\n\nfrom swagger_dialect import register_swagger_dialect\n\nLOGGING_FORMAT = \"[%(levelname)1.1s %(asctime)s.%(msecs)03d %(process)d %(module)s:%(lineno)d %(name)s] %(message)s\"\n\nregister_swagger_dialect()\n\n\ndef get_args():\n    parser = argparse.ArgumentParser(\n        description=\"Generates SQLAlchemy model code from an existing database.\"\n    )\n    parser.add_argument(\n        \"--option\", nargs=\"*\", help=\"options passed to the generator class\"\n    )\n    parser.add_argument(\n        \"--version\", action=\"store_true\", help=\"print the version number and exit\"\n    )\n    parser.add_argument(\n        \"--schemas\", help=\"load tables from the given schemas (comma separated)\"\n    )\n    parser.add_argument(\n        \"--tables\", help=\"tables to process (comma-separated, default: all)\"\n    )\n    parser.add_argument(\"--noviews\", action=\"store_true\", help=\"ignore views\")\n    parser.add_argument(\"--outfile\", help=\"file to write output to (default: stdout)\")\n    return parser.parse_args()\n\n\ndef run_reflection(url, model_file_name=None):\n\n    # Use reflection to fill in the metadata\n    engine = create_engine(url)\n    metadata = MetaData()\n    tables = None\n    incl_views = False\n    schemas = [None]\n    for schema in schemas:\n        metadata.reflect(engine, schema, incl_views, tables)\n\n    args = get_args()\n    generator = DeclarativeGenerator(metadata, engine, set(args.option or ()))\n\n    # Open the target file (if given)\n    with ExitStack() as stack:\n        outfile: TextIO\n        if model_file_name:\n            outfile = open(model_file_name, \"w\", encoding=\"utf-8\")\n            stack.enter_context(outfile)\n        else:\n            outfile = sys.stdout\n        outfile.write(generator.generate())\n\nif __name__ == \"__main__\":\n    run_reflection(url='swagger://MyAppSwagger.yaml', model_file_name=\"generated_model.py\")\n\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/robertbetts/swagger-dialect",
    "keywords": "import,physical address,file path",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "swagger-dialect",
    "package_url": "https://pypi.org/project/swagger-dialect/",
    "platform": null,
    "project_url": "https://pypi.org/project/swagger-dialect/",
    "project_urls": {
      "Homepage": "https://github.com/robertbetts/swagger-dialect"
    },
    "release_url": "https://pypi.org/project/swagger-dialect/0.0.3/",
    "requires_dist": [
      "sqlalchemy (>=1.4.0)",
      "pyyaml (>=6.0)",
      "pytest (>=7.0.0) ; extra == 'testing'",
      "sqlacodegen (>=3.0rc1) ; extra == 'testing'"
    ],
    "requires_python": ">3.10.0",
    "summary": "Swagger definition SQLAlchemy reflection",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13752184,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3ffbd0a8a3d96893802f9f88d81091faeb6afe8deb3cd4da471179804545571",
          "md5": "d1b5b50840c178d48c66bf14f0ea2ad1",
          "sha256": "bb1d3588c4d19a473d21ceb0060c940a4c26c830d86ff85a34448fc4637b2ee9"
        },
        "downloads": -1,
        "filename": "swagger_dialect-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d1b5b50840c178d48c66bf14f0ea2ad1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.10.0",
        "size": 6806,
        "upload_time": "2022-05-08T22:31:53",
        "upload_time_iso_8601": "2022-05-08T22:31:53.665401Z",
        "url": "https://files.pythonhosted.org/packages/b3/ff/bd0a8a3d96893802f9f88d81091faeb6afe8deb3cd4da471179804545571/swagger_dialect-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5eedbb199f8d9b9f3c8eb2b00d3d7166e2bf3c818c004e07e77b9cf7966a008",
          "md5": "5796f6aad7fae6647f4a467cc3ce7a72",
          "sha256": "02aec99b7d29c8ad1f5f072ad865ca4172ca74cd556fbc9d364dc74c1e637c5a"
        },
        "downloads": -1,
        "filename": "swagger_dialect-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5796f6aad7fae6647f4a467cc3ce7a72",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.10.0",
        "size": 6807,
        "upload_time": "2022-05-08T22:46:11",
        "upload_time_iso_8601": "2022-05-08T22:46:11.670366Z",
        "url": "https://files.pythonhosted.org/packages/b5/ee/dbb199f8d9b9f3c8eb2b00d3d7166e2bf3c818c004e07e77b9cf7966a008/swagger_dialect-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b5eedbb199f8d9b9f3c8eb2b00d3d7166e2bf3c818c004e07e77b9cf7966a008",
        "md5": "5796f6aad7fae6647f4a467cc3ce7a72",
        "sha256": "02aec99b7d29c8ad1f5f072ad865ca4172ca74cd556fbc9d364dc74c1e637c5a"
      },
      "downloads": -1,
      "filename": "swagger_dialect-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5796f6aad7fae6647f4a467cc3ce7a72",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">3.10.0",
      "size": 6807,
      "upload_time": "2022-05-08T22:46:11",
      "upload_time_iso_8601": "2022-05-08T22:46:11.670366Z",
      "url": "https://files.pythonhosted.org/packages/b5/ee/dbb199f8d9b9f3c8eb2b00d3d7166e2bf3c818c004e07e77b9cf7966a008/swagger_dialect-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}