{
  "info": {
    "author": "Murdo Maclachlan",
    "author_email": "murdomaclachlan@duck.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# smooth_logger\n\nA simple logger made primarily for my own personal use. Was made out of a combination of necessity and being so lazy that I overflowed into being productive and instead of searching for a library that suited my needs, I wrote my own.\n\n## Installation\n\nsmooth-logger can be installed through pip. Either download the latest release from Codeberg/GitHub, or do `pip install smooth-logger` to install from PyPi. For the latest commits, check the `dev` branches on the repositories.\n\nsmooth-logger was written in Python 3.9, but should work with Python 3.5 and up. A minimum of 3.5 is required due to the project's use of type hinting, which was introduced in that version.\n\nsmooth-logger supports Linux, macOS and Windows.\n\n## Usage\n\nUsage of smooth-logger is, as it should be, quite simple.\n\nThe `Logger` model provides a number of methods for your use:\n\n- `Logger.clean()` erases all log entries currently in memory.\n- `Logger.define_output_path()` is primarily intended as an internal method; it detects the user's operating system and home folder and, using the provided program name and creates a log folder in the appropriate location (`~/.config/{program_name}` on Linux and macOS, `AppData\\Roaming\\{program_name}` on Windows).\n- `Logger.get()` allows you to retrieve either the most recent log entry or all log entries, optionally filtered by scope.\n- `Logger.get_time()` returns the full date & time, or optionally just the date, in ISO-8601 formatting.\n- `Logger.init_bar()` initialises the `ProgressBar` model imported from the `smooth_progress` dependency.\n- `Logger.notify()` sends a desktop notification using the `plyer` dependency.\n- `Logger.new()` creates and, depending on scope, prints a new log entry.\n- `Logger.output()` saves all log entries of appropriate scope to the log file and cleans the log array for the next group of log entries. A new log file is created for each new day. This method only attempts to create or update the log file if there are entries of an appropriate scope to be written to it; if there are none, it just executes `Logger.clean()`.\n\nWhen initialising the Logger, you can optionally provide values to associate with each scope:\n\n- 0: disabled, do not print to console or save to log file\n- 1: enabled, print to console but do not save to log file\n- 2: maximum, print to console and save to log file\n\nThe scopes available, along with their default values and suggested use cases, are:\n\n- DEBUG (0): Information for debugging the program.\n- ERROR (2): Errors that the program can recover from but impact functionality or performance.\n- FATAL (2): Errors that mean the program must continue; handled crashes.\n- INFO (1): General information for the user.\n- WARNING (2): Things that have no immediate impact to functionality but could cause errors later on.\n\nHere is a simple example showing the initialisation of the logger:\n\n```\nimport smooth_logger\n\nLog = smooth_logger.Logger(\"Program\")\nLog.new(\"This is a log message!\", \"INFO\")\n```\n\n## Roadmap\n\nA roadmap of planned future improvements and features:\n\n- Allow the creation of custom scopes. These would be instance-specific and not hard saved in any way. Suggested format and example:\n\n  ```\n  Log.add_scope(name: str, description: str, default_value: int)\n  \n  Log.add_scope(\"NEWSCOPE\", \"A new scope of mine!\", 1)\n  ```\n  \n  Potentially also allow removal of scopes. In this situation, default scopes should be removable, but doing so should log a warning.\n  \n\n- Allow editing of the values of existing scopes post-initialisation. For example:\n\n  ```\n  Log.edit_scope(name: str, new_value: int)\n  \n  Log.edit_scope(\"DEBUG\", 1)\n  ```\n  \n  to temporarily enable debug statements. This feature would probably see the most use from custom scopes.\n  \n\n- Add an optional argument `notify: bool` to `Logger.new()` to allow log entries to be created and notified in one statement, rather than the two currently required.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://codeberg.org/MurdoMaclachlan/smooth_logger",
    "keywords": "",
    "license": "AGPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "smooth-logger",
    "package_url": "https://pypi.org/project/smooth-logger/",
    "platform": null,
    "project_url": "https://pypi.org/project/smooth-logger/",
    "project_urls": {
      "Homepage": "https://codeberg.org/MurdoMaclachlan/smooth_logger"
    },
    "release_url": "https://pypi.org/project/smooth-logger/0.1.0/",
    "requires_dist": [
      "plyer",
      "smooth-progress"
    ],
    "requires_python": "",
    "summary": "A simple logger made primarily for my own personal use. Made from a combination of necessity and so much sloth that it overflowed into productivity.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14779504,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c09120600a783d27102e30ac226c43b94ab469b07559ceea1661a886b5346a3",
          "md5": "e852df48a8a334c8a96179c2e66bbb90",
          "sha256": "d9e515d0a7be83c3886d26de8d32ed6c0069c343373ef45836c799113b98ba6e"
        },
        "downloads": -1,
        "filename": "smooth_logger-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e852df48a8a334c8a96179c2e66bbb90",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17865,
        "upload_time": "2022-08-16T17:45:21",
        "upload_time_iso_8601": "2022-08-16T17:45:21.901071Z",
        "url": "https://files.pythonhosted.org/packages/8c/09/120600a783d27102e30ac226c43b94ab469b07559ceea1661a886b5346a3/smooth_logger-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9792368ffb2a7d515d1e299c747f0168bb11298f93cc5e6b17d51e987621c046",
          "md5": "ba7b6c426fdc0801b36afb5fd0b315a6",
          "sha256": "219ea2f5c947266fe967b921f15219f5e435d91663f034fd1a0155ffbab07acd"
        },
        "downloads": -1,
        "filename": "smooth_logger-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ba7b6c426fdc0801b36afb5fd0b315a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17501,
        "upload_time": "2022-08-16T17:45:23",
        "upload_time_iso_8601": "2022-08-16T17:45:23.857245Z",
        "url": "https://files.pythonhosted.org/packages/97/92/368ffb2a7d515d1e299c747f0168bb11298f93cc5e6b17d51e987621c046/smooth_logger-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8c09120600a783d27102e30ac226c43b94ab469b07559ceea1661a886b5346a3",
        "md5": "e852df48a8a334c8a96179c2e66bbb90",
        "sha256": "d9e515d0a7be83c3886d26de8d32ed6c0069c343373ef45836c799113b98ba6e"
      },
      "downloads": -1,
      "filename": "smooth_logger-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e852df48a8a334c8a96179c2e66bbb90",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17865,
      "upload_time": "2022-08-16T17:45:21",
      "upload_time_iso_8601": "2022-08-16T17:45:21.901071Z",
      "url": "https://files.pythonhosted.org/packages/8c/09/120600a783d27102e30ac226c43b94ab469b07559ceea1661a886b5346a3/smooth_logger-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9792368ffb2a7d515d1e299c747f0168bb11298f93cc5e6b17d51e987621c046",
        "md5": "ba7b6c426fdc0801b36afb5fd0b315a6",
        "sha256": "219ea2f5c947266fe967b921f15219f5e435d91663f034fd1a0155ffbab07acd"
      },
      "downloads": -1,
      "filename": "smooth_logger-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ba7b6c426fdc0801b36afb5fd0b315a6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17501,
      "upload_time": "2022-08-16T17:45:23",
      "upload_time_iso_8601": "2022-08-16T17:45:23.857245Z",
      "url": "https://files.pythonhosted.org/packages/97/92/368ffb2a7d515d1e299c747f0168bb11298f93cc5e6b17d51e987621c046/smooth_logger-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}