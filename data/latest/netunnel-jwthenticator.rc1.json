{
  "info": {
    "author": "Claroty Open Source",
    "author_email": "opensource@claroty.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# NETunnel-JWThenticator\nAn authentication plugin of [NETunnel](https://github.com/claroty/netunnel) that\nuses [JWThenticator](https://github.com/claroty/jwthenticator) to provide key-based\nauthentication between **peers**.\n\nThe plugin designed to be used in a server-server NETunnel models (although it can\nbe used in a client-server model as well) where each machine has a web server\nthat exposes a JWThenticator and a NETunnel service.\nThe web server protects the NETunnel routes by verifying that the JWT token\nin every request's `Authorization` header is signed by the local JWThenticator\nservice.\n\nWhen a new peer is registered on a NETunnel server, you'll need to provide a\nkey, which you're obligated to make sure it is registered on the remote\nJWThenticator server.\nThe plugin will make a request to the remote JWThenticator server for a refresh\ntoken, using the provided key. The refresh token will be stored as the auth data\nof this peer, and for every new request, the plugin will make sure there is a\nvalid JWT token that it received from the remote JWTheneticator server using the\nrefresh token. \n\n## Getting Started\n### Installing\n```bash\npip install netunnel-jwthenticator\n```\n### Usage\nThe plugin was designed to be used in a server-server model of NETunnel, so the\nexamples will focus on that. Each machine should have a running JWThenticator server\nand a NETunnel server with this plugin activated:\n```bash\npython -m netunnel.server --auth-plugin netunnel_jwthenticator.JWThenticatorAuthServer\n```\nMake sure both the JWThenticator and NETunnel are listening only on localhost, and\nhave your web server proxy NETunnel on `/netunnel` and JWThenticator on `/jwthenticator`.\nexpose only the \"public\" routes for JWThenticator:\n- `/authenticate`\n- `/refresh`\n- `/validate`\n- `/jwks`\n\nAs for NETunnel, have your web server expose the following routes only after validating\nthe JWT token of each request: \n- `/version`\n- `/channels`\n- `/channels/*`\n\nFor example, for an NGINX web server, you could use the `auth_request` directive to\nachieve that:\n```\nhttp {\n    map $http_upgrade $connection_upgrade {\n        default upgrade;\n        '' close;\n    }\n\n    server {\n        listen 443 ssl;\n\n        location /netunnel/ {\n            auth_request _jwthenticator_validate;\n            if ($uri !~ \"^/netunnel/version$|^/netunnel/channels$|^/netunnel/channels/.+$\") {\n                return 403;\n            }\n            rewrite /netunnel/(.*) /$1 break;\n            proxy_pass http://127.0.0.1:4040;\n\n            # support websockets\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection $connection_upgrade;\n        }\n\n        location /jwthenticator/ {\n            if ($uri !~ \"^/jwthenticator/authenticate$|^/jwthenticator/refresh$|^/jwthenticator/validate$|^/jwthenticator/jwks$\") {\n                return 403;\n            }\n            rewrite /jwthenticator/(.*) /$1 break;\n            proxy_pass http://127.0.0.1:5050;\n        }\n\n        location _jwthenticator_validate {\n            internal;\n            proxy_pass_request_body off;\n            proxy_set_header Content-Length \"\";\n            proxy_pass http://127.0.0.1:5050/validate_request;\n        }\n    }\n}\n```\n\n### Custom URIs\nIf you wish to use different URIs than `/netunnel` and `/jwthenticator`, you can do so for NETunnel, you'll\nanyway need to provide the full URL when registering the peer.\nAs for JWThenticator, the plugin assumes the remote JWThenticator is at `/jwthenticator`,\nso you'll have to initialize it differently by either providing the following flag to\nnetunnel server: `--auth-data '{\"remote_uri\": \"<new-uri>\"}'` or by settings the following\nenvironment before starting the server: `export JWTHENTICATOR_URI=<new-uri>`\n\n# Changelog\n# 1.0.1\nFirst release\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/claroty/netunnel-jwthenticator",
    "keywords": "",
    "license": "Apache 2",
    "maintainer": "Claroty Open Source",
    "maintainer_email": "opensource@claroty.com",
    "name": "netunnel-jwthenticator",
    "package_url": "https://pypi.org/project/netunnel-jwthenticator/",
    "platform": "",
    "project_url": "https://pypi.org/project/netunnel-jwthenticator/",
    "project_urls": {
      "Homepage": "https://github.com/claroty/netunnel-jwthenticator"
    },
    "release_url": "https://pypi.org/project/netunnel-jwthenticator/1.0.1/",
    "requires_dist": [
      "netunnel (>=1.0.2)",
      "jwthenticator (>=1.0.0)",
      "YURL (>=1.0.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "JWThenticator plugin for NETunnel",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9342792,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "478324e9dabe7afa6fb66c8702beccbec2d485136ccbdd72b69b01e2dfeecb2b",
          "md5": "aa277109c9a782639a346159fa913de9",
          "sha256": "778d07a45578bc7ef5a7bc6a8e1f601d77a414f1618ee4a9504ea663d36733a8"
        },
        "downloads": -1,
        "filename": "netunnel_jwthenticator-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa277109c9a782639a346159fa913de9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8772,
        "upload_time": "2021-02-07T13:55:38",
        "upload_time_iso_8601": "2021-02-07T13:55:38.750497Z",
        "url": "https://files.pythonhosted.org/packages/47/83/24e9dabe7afa6fb66c8702beccbec2d485136ccbdd72b69b01e2dfeecb2b/netunnel_jwthenticator-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5eb04f5b784db64e5f9ffde8f4fa57c10e0462b6bf4e98ba4695ef36cf45d016",
          "md5": "06e508687ab01e2f5a4a7f813f982426",
          "sha256": "dde39120c501cb66170c1b5136fd5916e494007b76cbba39831ca5c2bd4eec3a"
        },
        "downloads": -1,
        "filename": "netunnel-jwthenticator-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "06e508687ab01e2f5a4a7f813f982426",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8435,
        "upload_time": "2021-02-07T13:55:40",
        "upload_time_iso_8601": "2021-02-07T13:55:40.206187Z",
        "url": "https://files.pythonhosted.org/packages/5e/b0/4f5b784db64e5f9ffde8f4fa57c10e0462b6bf4e98ba4695ef36cf45d016/netunnel-jwthenticator-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "478324e9dabe7afa6fb66c8702beccbec2d485136ccbdd72b69b01e2dfeecb2b",
        "md5": "aa277109c9a782639a346159fa913de9",
        "sha256": "778d07a45578bc7ef5a7bc6a8e1f601d77a414f1618ee4a9504ea663d36733a8"
      },
      "downloads": -1,
      "filename": "netunnel_jwthenticator-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aa277109c9a782639a346159fa913de9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8772,
      "upload_time": "2021-02-07T13:55:38",
      "upload_time_iso_8601": "2021-02-07T13:55:38.750497Z",
      "url": "https://files.pythonhosted.org/packages/47/83/24e9dabe7afa6fb66c8702beccbec2d485136ccbdd72b69b01e2dfeecb2b/netunnel_jwthenticator-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5eb04f5b784db64e5f9ffde8f4fa57c10e0462b6bf4e98ba4695ef36cf45d016",
        "md5": "06e508687ab01e2f5a4a7f813f982426",
        "sha256": "dde39120c501cb66170c1b5136fd5916e494007b76cbba39831ca5c2bd4eec3a"
      },
      "downloads": -1,
      "filename": "netunnel-jwthenticator-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "06e508687ab01e2f5a4a7f813f982426",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8435,
      "upload_time": "2021-02-07T13:55:40",
      "upload_time_iso_8601": "2021-02-07T13:55:40.206187Z",
      "url": "https://files.pythonhosted.org/packages/5e/b0/4f5b784db64e5f9ffde8f4fa57c10e0462b6bf4e98ba4695ef36cf45d016/netunnel-jwthenticator-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}