{
  "info": {
    "author": "Varshneyabhushan",
    "author_email": "varshneyacoder@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "kudoSudoku \n**********\n|p3| |p1| |p2| \n\n\n\n.. |p1| image:: https://img.shields.io/travis/Varshneyabhushan/kudoSudoku.svg\n   :alt: Build status\n   :target: https://travis-ci.org/Varshneyabhushan/kudoSudoku\n   \n\n.. |p2| image:: https://img.shields.io/github/stars/Varshneyabhushan/kudoSudoku.svg?style=social&logo=github&label=Stars\n   :alt: GitHub stars\n   :target: https://github.com/Varshneyabhushan/kudoSudoku\n\n\n.. |p3| image:: https://img.shields.io/github/license/mashape/apistatus.svg \n   :alt: license\n\n\n\n\nA sudoku solver that solves the puzzle using constraint programming\n\nInstallation\n============\n\nInstallation through pip:\n\n.. code-block:: shell\n\n    pip install kudosudoku\n\nInstallation through cloning:\n\n.. code-block:: shell\n\n    git clone https://github.com/Varshneyabhushan/kudoSudoku.git\n    cd kudoSudoku\n    python setup.py install\n\n\nUsage\n=====\n\n* import class **sudoku** from the module.\n* pass puzzle to be solved as list of lists\n* **sudoku** has a method called **solve( )** that returns the solved puzzle\n* output will be an object with the following keys\n    1. `done` : \"describing status if its done or not\"\n    2. `iterations` : \"number of times puzzle is re visited\"\n    3. `guesses` : \"number of places where it had to guess\"\n    4. `timeTaken` : \"Time taken to conclude\"\n    5. `solution` : \"Final answer(will be a list of list of integers)\"\n\n\n\nExample\n=======\n\nTo solve this sudoku\n\n.. image:: https://raw.githubusercontent.com/Varshneyabhushan/kudoSudoku/master/2x2.png\n   :alt: a 2x2 sudoku\n\nInput has to be:\n\n\n.. code-block:: python\n\n   [[0,2,4,0],[1,0,0,3],[4,0,0,2],[0,1,3,0]]\n\n\n\nAs python language is case sensitive,you have to import **kudoSudoku**,not **kudosudoku**.\n\n\n.. code-block:: python\n\n    from kudoSudoku import sudoku\n    puzzle = [[0,2,4,0],[1,0,0,3],[4,0,0,2],[0,1,3,0]]\n    table = sudoku(puzzle)\n    result = table.solve()\n    print(result)\n\n\nOutput:\n\n.. code-block:: python\n\n\n    {'done': True, 'iterations': 2, 'guesses': 0, 'timeTaken': 0.0013199988754573474, 'solution': [[3, 2, 4, 1], [1, 4, 2, 3], [4, 3, 1, 2], [2, 1, 3, 4]]}\n\n\n2X2 sudoku is taken just to demonstrate. It works for any nxn sudoku",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/VarshneyaB/kudoSudoku.git",
    "keywords": "sudoku solving solve puzzle kudos constraint",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kudosudoku",
    "package_url": "https://pypi.org/project/kudosudoku/",
    "platform": "",
    "project_url": "https://pypi.org/project/kudosudoku/",
    "project_urls": {
      "Homepage": "https://github.com/VarshneyaB/kudoSudoku.git"
    },
    "release_url": "https://pypi.org/project/kudosudoku/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Sudoku solver,that solves sudoku puzzles using constraint programming",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3658559,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7791ae255806f02ba7c9db5ac62e2ae5ccca65fd139eaaae5a8cf2e618120e48",
          "md5": "2c8328400b926aa07aa2ac8463b8682f",
          "sha256": "4b9f3bca03f9c18290dee3a7b996918892af497c17f17977a22fa8a026561aef"
        },
        "downloads": -1,
        "filename": "kudosudoku-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2c8328400b926aa07aa2ac8463b8682f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4782,
        "upload_time": "2018-03-11T08:14:27",
        "upload_time_iso_8601": "2018-03-11T08:14:27.504698Z",
        "url": "https://files.pythonhosted.org/packages/77/91/ae255806f02ba7c9db5ac62e2ae5ccca65fd139eaaae5a8cf2e618120e48/kudosudoku-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7791ae255806f02ba7c9db5ac62e2ae5ccca65fd139eaaae5a8cf2e618120e48",
        "md5": "2c8328400b926aa07aa2ac8463b8682f",
        "sha256": "4b9f3bca03f9c18290dee3a7b996918892af497c17f17977a22fa8a026561aef"
      },
      "downloads": -1,
      "filename": "kudosudoku-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "2c8328400b926aa07aa2ac8463b8682f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4782,
      "upload_time": "2018-03-11T08:14:27",
      "upload_time_iso_8601": "2018-03-11T08:14:27.504698Z",
      "url": "https://files.pythonhosted.org/packages/77/91/ae255806f02ba7c9db5ac62e2ae5ccca65fd139eaaae5a8cf2e618120e48/kudosudoku-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}