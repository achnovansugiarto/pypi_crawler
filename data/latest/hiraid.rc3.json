{
  "info": {
    "author": "Darren Chambers",
    "author_email": "darren.chambers@hitachivantara.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Work in progress\nhiraid is a Python raidcom wrapper for communicating with Hitachi enterprise storage arrays.\nraidcom output is parsed to json and also stored beneath storageobject.views.\n\nThe primary purpose of this library is to underpin the Hitachi Vantara opensource ansible project: https://github.com/hv-ps/Hitachi.Raidcom.Ansible\n\n### Install Latest\n> pip3 install git+https://github.com/hv-ps/hiraid.git\n\n### Quick start\n> from hiraid.raidcom import Raidcom  \n> storage_serial = 53511  \n> horcm_instance = 0  \n> storage = Raidcom(storage_serial,0)  \n> ports = storage.getport()  \n> print(json.dumps(ports.view,indent=4))  \n> print(json.dumps(ports.stats))  \n\n### Index your host groups, luns and associated ldevs\n> storage.getpool(key='basic')  \n> ports = storage.getport().view.keys()  \n> hostgroups = storage.concurrent_gethostgrps(ports=ports)  \n> allhsds = [f\"{port}-{gid}\" for port in hostgroups.view for gid in hostgroups.view[port]['_GIDS']]  \n> storage.concurrent_getportlogins(ports=ports)  \n> storage.concurrent_gethbawwns(portgids=allhsds)  \n> storage.concurrent_getluns(portgids=allhsds)  \n> ldevlist = set([ self.raidcom.views['_ports'][port]['_GIDS'][gid]['_LUNS'][lun]['LDEV'] for port in self.raidcom.views['_ports'] for gid in self.raidcom.views['_ports'][port].get('_GIDS',{}) for lun in self.raidcom.views['_ports'][port]['_GIDS'][gid].get('_LUNS',{}) ])  \n> storage.concurrent_getldevs(ldevlist)  \n> file = f\"/var/tmp/{storage.serial}__{datetime.now().strftime('%d-%m-%Y_%H.%M.%S')}.json\"  \n> with open(file,'w') as w:  \n>   w.write(json.dumps(storage.views,indent=4))\n\n### raidqry\n> rq = storage.raidqry()  \n> rq = storage.raidqry(datafilter={'Serial#':'350147'})  \n> rq = storage.raidqry(datafilter={'callable':lambda a : int(a['Cache(MB)']) > 50000})  \n> print(rq.data)  \n> print(rq.view)  \n> print(rq.cmd)  \n> print(rq.returncode)  \n> print(rq.stdout)  \n> print(rq.stderr)\n\n### getldev\n> l = storage.getldev(ldev_id=20000)  \n> l = storage.getldev(ldev_id=20000-21000,datafilter={'LDEV_NAMING':'HAVING_THIS_LABEL'})  \n> l = storage.getldev(ldev_id=20000-21000,datafilter={'callable':lambda a : float(a.get(Used_Block(GB)',0)) > 960000})  \n\n> for ldev in l.data:  \n>  print(ldev['LDEV'])  \n\n### getport\n> p = storage.getport()  \n> p = storage.getport(datafilter={'callable':lambda a : a['TYPE'] == 'FIBRE' and 'TAR' in a['ATTR']})  \n\n### gethostgrp\n> h = storage.gethostgrp(port=\"cl1-a\")  \n> h = storage.gethostgrp(port=\"cl1-a\",datafilter={'HMD':''VMWARE_EX'})  \n> h = storage.gethostgrp(port=\"cl1-a\",datafilter={'callable':lambda a : 'TEST' in a['GROUP_NAME']})  \n\n### gethostgrp_key_detail\n> h = storage.gethostgrp_key_detail(port=\"cl1-a\")  \n> h = storage.gethostgrp_key_detail(port=\"cl1-a\",datafilter={'HMD':''VMWARE_EX'})  \n> h = storage.gethostgrp_key_detail(port=\"cl1-a\",datafilter={'callable':lambda a : 'TEST' in a['GROUP_NAME']})  \n\n### getlun\n> l = storage.getlun(port=\"cl1-a-1\")  \n> l = storage.getlun(port=\"cl1-a-1\",datafilter={'LDEV':['12001','12002']})  \n> l = storage.getlun(port=\"cl1-e-1\",datafilter={'callable':lambda a : int(a['LUN']) > 10})  \n> l = storage.getlun(port=\"cl1-e-1\",datafilter={'callable':lambda a : int(a['LDEV']) > 12000})  \n\n### getpool\n> p = storage.getpool()  \n\n### getcommandstatus\n### resetcommandstatus\n### lockresource\n### unlockresource\n### raidqry  \n### getresource\n### getresourcebyname\n### getldevlist\n### gethbawwn\n### getportlogin\n### getcopygrp\n### getpath\n### getparitygrp\n### getlicense\n### getsnapshot\n### getsnapshotgroup\n### addsnapshotgroup\n### createsnapshot\n### unmapsnapshotsvol\n### resyncsnapshotmu\n### snapshotevtwait\n### snapshotgroupevtwait\n### deletesnapshotmu\n### addldev\n### extendldev\n### deleteldev\n### addresource\n### deleteresource\n### addhostgrpresource\n### deletehostgrpresourceid\n### addhostgrpresourceid\n### addldevresource\n### deleteldevresourceid\n### deleteldevresource\n### addhostgrp\n### deletehostgrp\n### resethostgrp\n### addlun\n### deletelun\n### unmapldev\n### mapldev\n### modifyldevname\n### modifyldevcapacitysaving\n### modifyhostgrp\n### adddevicegrp\n### addcopygrp\n### addhbawwn\n### addwwnnickname\n### setwwnnickname\n### gethostgrptcscan\n### raidscanremote\n### raidscanmu\n### getrcu\n### gethostgrprgid\n### concurrent_gethostgrps\n### concurrent_gethbawwns\n### concurrent_getluns\n### concurrent_getldevs\n### concurrent_getportlogins\n### concurrent_raidscanremote\n### concurrent_addluns\n### concurrent_addldevs\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hv-ps/hiraid",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hiraid",
    "package_url": "https://pypi.org/project/hiraid/",
    "platform": null,
    "project_url": "https://pypi.org/project/hiraid/",
    "project_urls": {
      "Homepage": "https://github.com/hv-ps/hiraid"
    },
    "release_url": "https://pypi.org/project/hiraid/1.0.22/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Hitachi raidcom wrapper",
    "version": "1.0.22",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17380467,
  "releases": {
    "1.0.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec7fdffd2af54086e7611ff57ea796caae6d5738d13ba8a038558eefd55d3ab9",
          "md5": "411e1527b16ce1be7d92fb9a46a5ab64",
          "sha256": "51d325529949f8f8ac8ed2af758163540db6d2dd552cbefdac484f335b4749bb"
        },
        "downloads": -1,
        "filename": "hiraid-1.0.17-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "411e1527b16ce1be7d92fb9a46a5ab64",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 60085,
        "upload_time": "2022-10-27T10:54:18",
        "upload_time_iso_8601": "2022-10-27T10:54:18.159502Z",
        "url": "https://files.pythonhosted.org/packages/ec/7f/dffd2af54086e7611ff57ea796caae6d5738d13ba8a038558eefd55d3ab9/hiraid-1.0.17-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.21": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8ca2458b1dba156b82fd2c21173aaf2c863f34b4f50cdd7986ce4040b15d5df",
          "md5": "96d55ff38278c74f63f254f851a3cf34",
          "sha256": "887a9d4542e1da103e1cf9c9894d827c3726c53b2c4dce1a828e3e7a101bb1cb"
        },
        "downloads": -1,
        "filename": "hiraid-1.0.21-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "96d55ff38278c74f63f254f851a3cf34",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 152835,
        "upload_time": "2023-03-16T16:11:53",
        "upload_time_iso_8601": "2023-03-16T16:11:53.198185Z",
        "url": "https://files.pythonhosted.org/packages/e8/ca/2458b1dba156b82fd2c21173aaf2c863f34b4f50cdd7986ce4040b15d5df/hiraid-1.0.21-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.22": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10bfbaf9aaf53c433bf57019d630831f70bb3ba896cd1d3c552c8cceaee7c07a",
          "md5": "57589ba3c303f01699f3eb406adc90d6",
          "sha256": "2b95fee1743c5ab9fc0922aa63f9ecaf076c586a65c5074d5604c08d2b35e856"
        },
        "downloads": -1,
        "filename": "hiraid-1.0.22-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "57589ba3c303f01699f3eb406adc90d6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 153597,
        "upload_time": "2023-03-21T14:31:28",
        "upload_time_iso_8601": "2023-03-21T14:31:28.815199Z",
        "url": "https://files.pythonhosted.org/packages/10/bf/baf9aaf53c433bf57019d630831f70bb3ba896cd1d3c552c8cceaee7c07a/hiraid-1.0.22-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10bfbaf9aaf53c433bf57019d630831f70bb3ba896cd1d3c552c8cceaee7c07a",
        "md5": "57589ba3c303f01699f3eb406adc90d6",
        "sha256": "2b95fee1743c5ab9fc0922aa63f9ecaf076c586a65c5074d5604c08d2b35e856"
      },
      "downloads": -1,
      "filename": "hiraid-1.0.22-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "57589ba3c303f01699f3eb406adc90d6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 153597,
      "upload_time": "2023-03-21T14:31:28",
      "upload_time_iso_8601": "2023-03-21T14:31:28.815199Z",
      "url": "https://files.pythonhosted.org/packages/10/bf/baf9aaf53c433bf57019d630831f70bb3ba896cd1d3c552c8cceaee7c07a/hiraid-1.0.22-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}