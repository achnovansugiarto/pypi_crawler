{
  "info": {
    "author": "Asahi Ushio",
    "author_email": "asahi1992ushio@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# [Kex](https://pypi.org/project/kex/)\n*Kex* is a python library for unsurpervised keyword extractions, supporting the following features: \n- [Easy interface for keyword extraction with a variety of algorithms](https://github.com/asahi417/kex#extract-keywords-with-kex)\n- [Quick benchmarking over 15 English public datasets](https://github.com/asahi417/kex#benchmark-on-15-public-datasets)\n- [Custom keyword extractor implementation support](https://github.com/asahi417/kex#implement-custom-extractor-with-kex)\n\n## Get Started\nInstall via pip\n```shell script\npip install kex\n```\n\n## Extract Keywords with Kex\nBuilt-in algorithms in *kex* is below:\n- `FirstN`: heuristic baseline to pick up first n phrases as keywords \n- `TF`: scoring by term frequency\n- `TFIDF`: scoring by TFIDF\n- `LexSpec`: scoring by [lexical specificity](https://www.aclweb.org/anthology/N15-1059.pdf)\n- `TextRank`: [Mihalcea et al., 04](https://web.eecs.umich.edu/~mihalcea/papers/mihalcea.emnlp04.pdf)\n- `SingleRank`: [Wan et al., 08](https://aclanthology.info/pdf/C/C08/C08-1122.pdf)\n- `TopicalPageRank`: [Liu et al.,10](http://nlp.csai.tsinghua.edu.cn/~lzy/publications/emnlp2010.pdf)\n- `SingleTPR`: [Sterckx et al.,15](https://core.ac.uk/download/pdf/55828317.pdf)\n- `TopicRank`: [Bougouin et al.,13](http://www.aclweb.org/anthology/I13-1062)\n- `PositionRank`: [Florescu et al.,18](http://people.cs.ksu.edu/~ccaragea/papers/acl17.pdf)\n- `TFIDFRank`: SingleRank + TFIDF based word distribution prior\n- `LexRank`: SingleRank + lexical specificity based word distribution prior\n\nBasic usage:\n\n```python\n>>> import kex\n>>> model = kex.SingleRank()  # any algorithm listed above\n>>> sample = '''\nWe propose a novel unsupervised keyphrase extraction approach that filters candidate keywords using outlier detection.\nIt starts by training word embeddings on the target document to capture semantic regularities among the words. It then\nuses the minimum covariance determinant estimator to model the distribution of non-keyphrase word vectors, under the\nassumption that these vectors come from the same distribution, indicative of their irrelevance to the semantics\nexpressed by the dimensions of the learned vector representation. Candidate keyphrases only consist of words that are\ndetected as outliers of this dominant distribution. Empirical results show that our approach outperforms state\nof-the-art and recent unsupervised keyphrase extraction methods.\n'''\n>>> model.get_keywords(sample, n_keywords=2)\n[{'stemmed': 'non-keyphras word vector',\n  'pos': 'ADJ NOUN NOUN',\n  'raw': ['non-keyphrase word vectors'],\n  'offset': [[47, 49]],\n  'count': 1,\n  'score': 0.06874471825637762,\n  'n_source_tokens': 112},\n {'stemmed': 'semant regular word',\n  'pos': 'ADJ NOUN NOUN',\n  'raw': ['semantic regularities words'],\n  'offset': [[28, 32]],\n  'count': 1,\n  'score': 0.06001468574146248,\n  'n_source_tokens': 112}]\n```\n\n### Compute a statistical prior\nAlgorithms such as `TF`, `TFIDF`, `TFIDFRank`, `LexSpec`, `LexRank`, `TopicalPageRank`, and `SingleTPR` need to compute\na prior distribution beforehand by\n```python\n>>> import kex\n>>> model = kex.SingleTPR()\n>>> test_sentences = ['documentA', 'documentB', 'documentC']\n>>> model.train(test_sentences, export_directory='./tmp')\n``` \n\nPriors are cached and can be loaded on the fly as \n```python\n>>> import kex\n>>> model = kex.SingleTPR()\n>>> model.load('./tmp')\n```\n\n### Supported language\nCurrently algorithms are available only in English, but soon we will relax the constrain to allow other language to be supported.\n\n## Benchmark on 15 Public Datasets\nUsers can fetch 15 public keyword extraction datasets via [`kex.get_benchmark_dataset`](https://github.com/asahi417/kex/blob/master/kex/_get_dataset.py#L41).\n\n```python\n>>> import kex\n>>> json_line, language = kex.get_benchmark_dataset('Inspec')\n>>> json_line[0]\n{\n    'keywords': ['kind infer', 'type check', 'overload', 'nonstrict pure function program languag', ...],\n    'source': 'A static semantics for Haskell\\nThis paper gives a static semantics for Haskell 98, a non-strict ...',\n    'id': '1053.txt'\n}\n```\n \nPlease take a look an [example script](https://github.com/asahi417/kex/blob/master/examples/benchmark.py) to run a benchmark on those datasets.\n\n## Implement Custom Extractor with Kex\nWe provide an API to run a basic pipeline for preprocessing, by which one can implement a custom keyword extractor.\n\n```python\nimport kex\n\nclass CustomExtractor:\n    \"\"\" Custom keyword extractor example: First N keywords extractor \"\"\"\n\n    def __init__(self, maximum_word_number: int = 3):\n        \"\"\" First N keywords extractor \"\"\"\n        self.phrase_constructor = kex.PhraseConstructor(maximum_word_number=maximum_word_number)\n\n    def get_keywords(self, document: str, n_keywords: int = 10):\n        \"\"\" Get keywords\n\n         Parameter\n        ------------------\n        document: str\n        n_keywords: int\n\n         Return\n        ------------------\n        a list of dictionary consisting of 'stemmed', 'pos', 'raw', 'offset', 'count'.\n        eg) {'stemmed': 'grid comput', 'pos': 'ADJ NOUN', 'raw': ['grid computing'], 'offset': [[11, 12]], 'count': 1}\n        \"\"\"\n        phrase_instance, stemmed_tokens = self.phrase_constructor.tokenize_and_stem_and_phrase(document)\n        sorted_phrases = sorted(phrase_instance.values(), key=lambda x: x['offset'][0][0])\n        return sorted_phrases[:min(len(sorted_phrases), n_keywords)]\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/asahi417/kex/archive/v2.0.5.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/asahi417/kex",
    "keywords": "keyword-extraction,nlp,information-retrieval",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kex",
    "package_url": "https://pypi.org/project/kex/",
    "platform": "",
    "project_url": "https://pypi.org/project/kex/",
    "project_urls": {
      "Download": "https://github.com/asahi417/kex/archive/v2.0.5.tar.gz",
      "Homepage": "https://github.com/asahi417/kex"
    },
    "release_url": "https://pypi.org/project/kex/2.0.5/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Light/easy keyword extraction from documents.",
    "version": "2.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9374936,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cead8e39ff3555bbcad71e00f945ff5f5d299359280ccbd8b8eae8c1f3ded39",
          "md5": "75f7311d282836f0ab98ea8a3357db4d",
          "sha256": "6ac528aefb6787e56d110c14a823bf24bc127b5f69569fc97ec1ee5c4ce69275"
        },
        "downloads": -1,
        "filename": "kex-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "75f7311d282836f0ab98ea8a3357db4d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19592,
        "upload_time": "2021-01-27T21:54:48",
        "upload_time_iso_8601": "2021-01-27T21:54:48.520862Z",
        "url": "https://files.pythonhosted.org/packages/2c/ea/d8e39ff3555bbcad71e00f945ff5f5d299359280ccbd8b8eae8c1f3ded39/kex-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00fca1087370761bf5e9041a639ecb71f10f7d087dae00d78a5acd19c6c77a9e",
          "md5": "6319aa5aceab249aceb32390ae673d37",
          "sha256": "2d9b1a1ca694222302f2bca601c5de7a9a126daab0de52591c3b1a61a08e05c6"
        },
        "downloads": -1,
        "filename": "kex-2.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6319aa5aceab249aceb32390ae673d37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19685,
        "upload_time": "2021-02-02T16:38:24",
        "upload_time_iso_8601": "2021-02-02T16:38:24.424603Z",
        "url": "https://files.pythonhosted.org/packages/00/fc/a1087370761bf5e9041a639ecb71f10f7d087dae00d78a5acd19c6c77a9e/kex-2.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b49609ab7e52798ed9578ac00184aed6279e2a3ec271f51814239228cc651af",
          "md5": "36b098df7577830b508ad826de9cfcdb",
          "sha256": "55c28fbdce4f13a5fda41a17eb4793be0c413f9d109e023811face2aaa34128d"
        },
        "downloads": -1,
        "filename": "kex-2.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "36b098df7577830b508ad826de9cfcdb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19330,
        "upload_time": "2021-02-09T20:40:59",
        "upload_time_iso_8601": "2021-02-09T20:40:59.235137Z",
        "url": "https://files.pythonhosted.org/packages/2b/49/609ab7e52798ed9578ac00184aed6279e2a3ec271f51814239228cc651af/kex-2.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b6830a5d43afd0786c056caf099de3ad0d0eddece8ec962382be6e69b18b34a",
          "md5": "b07e666ad02c7b151d2d2e4e684e2434",
          "sha256": "70faf12f5d6c633e622fbf2ecf4066fca1d0d2bc9135c840feb782c3a859db78"
        },
        "downloads": -1,
        "filename": "kex-2.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b07e666ad02c7b151d2d2e4e684e2434",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18044,
        "upload_time": "2021-02-10T14:58:00",
        "upload_time_iso_8601": "2021-02-10T14:58:00.499945Z",
        "url": "https://files.pythonhosted.org/packages/3b/68/30a5d43afd0786c056caf099de3ad0d0eddece8ec962382be6e69b18b34a/kex-2.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b6830a5d43afd0786c056caf099de3ad0d0eddece8ec962382be6e69b18b34a",
        "md5": "b07e666ad02c7b151d2d2e4e684e2434",
        "sha256": "70faf12f5d6c633e622fbf2ecf4066fca1d0d2bc9135c840feb782c3a859db78"
      },
      "downloads": -1,
      "filename": "kex-2.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "b07e666ad02c7b151d2d2e4e684e2434",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 18044,
      "upload_time": "2021-02-10T14:58:00",
      "upload_time_iso_8601": "2021-02-10T14:58:00.499945Z",
      "url": "https://files.pythonhosted.org/packages/3b/68/30a5d43afd0786c056caf099de3ad0d0eddece8ec962382be6e69b18b34a/kex-2.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}