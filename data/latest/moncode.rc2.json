{
  "info": {
    "author": "Mark Smith",
    "author_email": "judy@judy.co.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# moncode\n\nMoncode is a small CLI tool which takes source code from the clipboard,\nformats it using the MongoDB presentation color-scheme and code font,\nand then puts the result back on the clipboard.\n\nThe result looks a bit like this:\n\n![A Python slide with lovely syntax-highlighted code.](assets/python_slide.png)\n\n## Installing it\n\nI recommend you use [pipx](https://pipxproject.github.io/pipx/)\nto install moncode as a command-line tool.\nIf you have pipx you can install it like this:\n\n```bash\npipx install moncode\n```\n\nIf you don't want to install pipx, you can install it with pip,\nbut it's not really recommended:\n\n```bash\n# This will install moncode into your system python:\npip install moncode\n```\n\n## Using it\n\nMoncode is fully documented.\nThe command you'll probably use most is `format`, like this:\n\n### moncode format\n\nThis is the way I use it:\n\n1. Copy some Python code from my IDE\n2. Run `moncode format -l python` in a terminal window.\n   Now the Python code in my clipboard has been repaced by syntax-highlighted Python code.\n3. Paste the result into Google Slides (or Powerpoint or whatever.)\n\nThere are a bunch of other ways to use the tool,\ntaking input from stdin or a file on disk,\nand sending the results to stdout or a file on disk.\nThe command options are fully documented:\n\n```bash\n# Copy code from the clipboard, format it as RTF and then copy the result to the clipboard.\nmoncode format\n\n# Specify the language if the guess is wrong:\nmoncode format --language ruby\n\n# Read code from stdin and copy result to clipboard:\ncat sample_inputs/sample.js | moncode format\n\n# Read from sample.py and write to output.rtf:\nmoncode format -i sample.py -o output.rtf\n\n# Read from the clipboard, and write to stdout:\nmoncode format -o -\n\n# Format the code from the clipboard as HTML and write to output.html\nmoncode format -o output.html -f html\n```\n\n```text\nOptions:\n  -l, --language TEXT      The programming language to be formatted. If not\n                           supplied, this will be guessed from the file name\n                           or content. It's better to supply it if you can.\n                           Run `moncode languages` to see a list of supported\n                           input languages.\n\n  -i, --input FILENAME     The path to a code file to be formatted. If not\n                           supplied, either code will be read from stdin, or\n                           else copied from the clipboard.\n\n  -o, --output FILENAME    The path to write output to.\n  -f, --format [html|rtf]  The output format. Defaults to 'rtf' (which is good\n                           for copy-pasting).\n\n  -q, --quiet              Run quietly.\n  -v, --verbose            Run loudly.\n  --help                   Show this message and exit.\n```\n\nWhen running `moncode format`, I recommend you pass the `-l` flag,\nspecifying the programming language of the input code.\nIf you don't, moncode will guess the language, and likely get it wrong.\nWhat languages are supported?\nGlad you asked...\n\n### moncode languages\n\nTo get a list of all the supported input languages, run `moncode languages`.\nThe result will look something like this...\n\n```text\n$ moncode languages\nabap, abnf, ada, adl, agda, aheui, ahk, alloy, ampl, antlr, antlr-as, antlr-cpp, antlr-csharp, antlr-java, antlr-objc, antlr-perl, antlr-python, antlr-ruby, apacheconf, apl, applescript, arduino, as, as3, aspectj, aspx-cs, aspx-vb, asy, at, augeas, autoit, awk\nbasemake, bash, bat, bbcbasic, bbcode, bc, befunge, bib, blitzbasic, blitzmax, bnf, boa, boo, boogie, brainfuck, bst, bugs\nc, c-objdump, ca65, cadl, camkes, capdl, capnp, cbmbas, ceylon, cfc, cfengine3, cfm, cfs, chai, chapel, charmci, cheetah, cirru, clay, clean, clojure, clojurescript, cmake, cobol, cobolfree, coffee-script, common-lisp, componentpascal, console, control, coq, cpp, cpp-objdump, cpsa, cr, crmsh, croc, cryptol, csharp, csound, csound-document, csound-score, css, css+django, css+erb, css+genshitext, css+lasso, css+mako, css+mozpreproc, css+myghty, css+php, css+smarty, cucumber, cuda, cypher, cython\nd, d-objdump, dart, dasm16, delphi, dg, diff, django, docker, doscon, dpatch, dtd, duel, dylan, dylan-console, dylan-lid\nearl-grey, easytrieve, ebnf, ec, ecl, eiffel, elixir, elm, emacs, email, erb, erl, erlang, evoque, extempore, ezhil\nfactor, fan, fancy, felix, fennel, fish, flatline, floscript, forth, fortran, fortranfixed, foxpro, freefem, fsharp\ngap, gas, genshi, genshitext, glsl, gnuplot, go, golo, gooddata-cl, gosu, groff, groovy, gst\nhaml, handlebars, haskell, haxeml, hexdump, hlsl, hsail, hspec, html, html+cheetah, html+django, html+evoque, html+genshi, html+handlebars, html+lasso, html+mako, html+myghty, html+ng2, html+php, html+smarty, html+twig, html+velocity, http, hx, hybris, hylang\ni6t, icon, idl, idris, iex, igor, inform6, inform7, ini, io, ioke, irc, isabelle\nj, jags, jasmin, java, javascript+mozpreproc, jcl, jlcon, js, js+cheetah, js+django, js+erb, js+genshitext, js+lasso, js+mako, js+myghty, js+php, js+smarty, jsgf, json, json-object, jsonld, jsp, julia, juttle\nkal, kconfig, kmsg, koka, kotlin\nlagda, lasso, lcry, lean, less, lhs, lidr, lighty, limbo, liquid, live-script, llvm, llvm-mir, llvm-mir-body, logos, logtalk, lsl, lua\nmake, mako, maql, mask, mason, mathematica, matlab, matlabsession, md, mime, minid, modelica, modula2, monkey, monte, moocode, moon, mosel, mozhashpreproc, mozpercentpreproc, mql, ms, mscgen, mupad, mxml, myghty, mysql\nnasm, ncl, nemerle, nesc, newlisp, newspeak, ng2, nginx, nim, nit, nixos, notmuch, nsis, numpy, nusmv\nobjdump, objdump-nasm, objective-c, objective-c++, objective-j, ocaml, octave, odin, ooc, opa, openedge\npacmanconf, pan, parasail, pawn, peg, perl, perl6, php, pig, pike, pkgconfig, plpgsql, pony, postgresql, postscript, pot, pov, powershell, praat, prolog, properties, protobuf, ps1con, psql, pug, puppet, py2tb, pycon, pypylog, pytb, python, python2\nqbasic, qml, qvto\nracket, ragel, ragel-c, ragel-cpp, ragel-d, ragel-em, ragel-java, ragel-objc, ragel-ruby, raw, rb, rbcon, rconsole, rd, reason, rebol, red, redcode, registry, resource, rexx, rhtml, ride, rnc, roboconf-graph, roboconf-instances, robotframework, rql, rsl, rst, rts, rust\nsarl, sas, sass, sc, scala, scaml, scdoc, scheme, scilab, scss, sgf, shen, shexc, sieve, silver, slash, slim, slurm, smali, smalltalk, smarty, sml, snobol, snowball, solidity, sourceslist, sp, sparql, spec, splus, sql, sqlite3, squidconf, ssp, stan, stata, swift, swig, systemverilog\ntads3, tap, tasm, tcl, tcsh, tcshcon, tea, termcap, terminfo, terraform, tex, text, thrift, todotxt, toml, trac-wiki, treetop, ts, tsql, ttl, turtle, twig, typoscript, typoscriptcssdata, typoscripthtmldata\nucode, unicon, urbiscript, usd\nvala, vb.net, vbscript, vcl, vclsnippets, vctreestatus, velocity, verilog, vgl, vhdl, vim\nwdiff, webidl, whiley\nx10, xml, xml+cheetah, xml+django, xml+erb, xml+evoque, xml+lasso, xml+mako, xml+myghty, xml+php, xml+smarty, xml+velocity, xorg.conf, xquery, xslt, xtend, xul+mozpreproc\nyaml, yaml+jinja\nzeek, zephir, zig\n```\n\nPhew! That's a lot of languages, isn't it?\nAny of these values are supported by the `-l` option to `moncode format`\n\n## Development\n\nRun the following to install the project (and dev dependencies) into your active virtualenv:\n\n```bash\npip install -e .[dev]\n```\n\nRun tests with:\n\n```bash\nmake test\n```\n\nRun tests under different versions of Python with:\n\n```bash\ntox\n```\n\n\n",
    "description_content_type": "text/markdown; variant=GFM",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/judy2k/moncode",
    "keywords": "tui,console,syntax,formatting,rtf,presentation,code",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "moncode",
    "package_url": "https://pypi.org/project/moncode/",
    "platform": "",
    "project_url": "https://pypi.org/project/moncode/",
    "project_urls": {
      "Homepage": "https://github.com/judy2k/moncode"
    },
    "release_url": "https://pypi.org/project/moncode/0.0.2/",
    "requires_dist": [
      "click (~=7.1)",
      "pyperclip (~=1.8)",
      "pygments (~=2.6)",
      "pytest ; extra == 'dev'",
      "coverage[toml] (>=5.0.2) ; extra == 'dev'",
      "prospector[with_pyroma] ; extra == 'dev'",
      "black ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "wheel ; extra == 'dev'",
      "pytest ; extra == 'tests'",
      "coverage[toml] (>=5.0.2) ; extra == 'tests'"
    ],
    "requires_python": "",
    "summary": "Take code from the clipboard and format it for MongoDB slides.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7308284,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df3d648d977f83b726e1a0de61b18429da70b857a4f2da8e352f77361f9b9b06",
          "md5": "786c487fc75aefdaa3a72ac723f01669",
          "sha256": "63b94e19286272c7b3ce98932d3849001da79e5c2abcc166d73345d445c4a0ca"
        },
        "downloads": -1,
        "filename": "moncode-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "786c487fc75aefdaa3a72ac723f01669",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8159,
        "upload_time": "2020-05-22T16:39:24",
        "upload_time_iso_8601": "2020-05-22T16:39:24.448567Z",
        "url": "https://files.pythonhosted.org/packages/df/3d/648d977f83b726e1a0de61b18429da70b857a4f2da8e352f77361f9b9b06/moncode-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "066074ad4ee17c348a68e6b5b7fe6f4f71655bf7d479c99aab7e25c29ff4b452",
          "md5": "8b5830fdadd04e3700ca1de48c2da661",
          "sha256": "46dd6d4cffededc029fb791cdc9d60678bb906beb4abce645db8b0c483de5e0b"
        },
        "downloads": -1,
        "filename": "moncode-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b5830fdadd04e3700ca1de48c2da661",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8318,
        "upload_time": "2020-05-23T12:04:28",
        "upload_time_iso_8601": "2020-05-23T12:04:28.623203Z",
        "url": "https://files.pythonhosted.org/packages/06/60/74ad4ee17c348a68e6b5b7fe6f4f71655bf7d479c99aab7e25c29ff4b452/moncode-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6010af2f48b5dea838b2bac5f4c75e731c69f2910255574bb97e1084a80d47aa",
          "md5": "28ea43bedcaef60641d0c6eff8924c36",
          "sha256": "6c771eef8c79ac3dc9708941ba6b61c3b788c10b88d5f383e2de1f44e3039e1a"
        },
        "downloads": -1,
        "filename": "moncode-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "28ea43bedcaef60641d0c6eff8924c36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 64989,
        "upload_time": "2020-05-23T12:04:30",
        "upload_time_iso_8601": "2020-05-23T12:04:30.070778Z",
        "url": "https://files.pythonhosted.org/packages/60/10/af2f48b5dea838b2bac5f4c75e731c69f2910255574bb97e1084a80d47aa/moncode-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "066074ad4ee17c348a68e6b5b7fe6f4f71655bf7d479c99aab7e25c29ff4b452",
        "md5": "8b5830fdadd04e3700ca1de48c2da661",
        "sha256": "46dd6d4cffededc029fb791cdc9d60678bb906beb4abce645db8b0c483de5e0b"
      },
      "downloads": -1,
      "filename": "moncode-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8b5830fdadd04e3700ca1de48c2da661",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8318,
      "upload_time": "2020-05-23T12:04:28",
      "upload_time_iso_8601": "2020-05-23T12:04:28.623203Z",
      "url": "https://files.pythonhosted.org/packages/06/60/74ad4ee17c348a68e6b5b7fe6f4f71655bf7d479c99aab7e25c29ff4b452/moncode-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6010af2f48b5dea838b2bac5f4c75e731c69f2910255574bb97e1084a80d47aa",
        "md5": "28ea43bedcaef60641d0c6eff8924c36",
        "sha256": "6c771eef8c79ac3dc9708941ba6b61c3b788c10b88d5f383e2de1f44e3039e1a"
      },
      "downloads": -1,
      "filename": "moncode-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "28ea43bedcaef60641d0c6eff8924c36",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 64989,
      "upload_time": "2020-05-23T12:04:30",
      "upload_time_iso_8601": "2020-05-23T12:04:30.070778Z",
      "url": "https://files.pythonhosted.org/packages/60/10/af2f48b5dea838b2bac5f4c75e731c69f2910255574bb97e1084a80d47aa/moncode-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}