{
  "info": {
    "author": "",
    "author_email": "Kam One <info.kamutils@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: CeCILL-B Free Software License Agreement (CECILL-B)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7",
      "Topic :: Database",
      "Topic :: Scientific/Engineering :: GIS"
    ],
    "description": "Library for converting Oracle SDO GEOMETRY into spatial objects which implements the [\\_\\_geo_interface\\_\\_](https://gist.github.com/sgillies/2217756) protocol (GeoJSON-like dict).  \nSupported geometry types are : Point, Linestring, Polygon, MultiPoint, MultiLinestring, MultiPolygon and Collection.  \n\nConverted geometry can be used directly by other packages that support **\\_\\_geo_interface\\_\\_** like [Shapely](https://shapely.readthedocs.io/en/stable/manual.html) or [GeoPandas](https://geopandas.org/en/stable).  \n*Kamutils* also provides a WKT representation (Well Known Text) of the converted geometry.\n\n*Kamutils* allows geometry conversion for database versions that does not implement `SDO_UTIL` methods `TO_WKTGEOMETRY` or `TO_JSON` / `TO_GEOJSON`, or implement them partially.  \nFor example, you may encounter an error *3D geometries are not supported by geometry WKB/WKT generation* with the `SDO_UTIL.TO_WKTGEOMETRY` method applied on geometry with X,Y,Z coordinates.\n\n*Kamutils* includes other miscellaneous utilities.\n\n## License\n*Kamutils* is licensed under CeCILL-B license, a BSD-like french/european license.\n\nLicense in English : https://www.cecill.info/licences/Licence_CeCILL-B_V1-en.html  \nLicense in French : https://www.cecill.info/licences/Licence_CeCILL-B_V1-fr.html\n\n## Requirements\n*Kamutils* has been tested with :\n\n- Python 3.7\n- oracledb 1.1.1\n\nDependencies : none\n\n## Oracle SDO GEOMETRY conversion\n\n### Example 1 - Read and convert geometry with `convert_from_sdo_geometry()`\n\timport oracledb\n\tfrom kamutils.spatial import convert_from_sdo_geometry\n\n\toracledb.init_oracle_client()\n\tconnection = oracledb.connect(user=\"Test\", password=\"********\",dsn=\"MY_DSN\")\n\n\twith connection.cursor() as cursor:\n\t\tcursor.execute(\"select geometry, ID from MY_BASE.MY_TABLE where ID='l1'\")\n\t\trow = cursor.fetchone()\n\t\tif row:\n\t\t\tspatial_object = convert_from_sdo_geometry(row[0])\n\t\t\tif spatial_object.error is None:\n\t\t\t\tprint('converted object :')\n\t\t\t\tprint(spatial_object)\n\t\t\t\tprint('srid :',spatial_object.srid)\n\t\t\t\tprint('error :',spatial_object.error)\n\t\t\t\tprint('to WKT:')\n\t\t\t\tprint(spatial_object.wkt())\n\t\t\telse:\n\t\t\t\tprint(spatial_object.error)\n\t\t\t\tprint('id :',spatial_object.error.id)\n\t\t\t\tprint('msg :',spatial_object.error.msg)\n\noutput :\n\n\tconverted object :\n\t<SpatialObject - type:LineString srid:None {'type': 'LineString', 'coordinates': [(10.0, 25.0, 0.0), (20.0, 30.0, 0.0), (25.0, 25.0, 0.0), (30.0, 30.0, 0.0)], 'measures': None}>\n\tsrid : None\n\terror : None\n\tto WKT:\n\tLINESTRING Z(10.0 25.0 0.0,20.0 30.0 0.0,25.0 25.0 0.0,30.0 30.0 0.0)\n\noutput in case of error :\n\n\tError 2 : Unknown geometry : SDO_GTYPE = 0\n\tid : 2\n\tmsg : Unknown geometry : SDO_GTYPE = 0\n\n### Example 2 - Interoperability\n\t. . .\n\tspo = convert_from_sdo_geometry(row[0])\n\timport json\n\tprint('json dump :')\n\tprint(json.dumps(spo.__geo_interface__))\n\tprint()\n\n\tfrom shapely import geometry\n\tobj=geometry.shape(spo)\n\tprint('shapely :')\n\tprint(type(obj))\n\tprint(obj)\n\tprint()\n\n\timport geojson\n\tobj=geojson.mapping.to_mapping(spo)\n\tprint('geojson :')\n\tprint(type(obj))\n\tprint(obj)\n\tprint()\n\n\timport plpygis\n\tobj=plpygis.Geometry.shape(spo)\n\tprint('plpygis :')\n\tprint(type(obj))\n\tprint(obj)\n\noutput :\n\n\tjson dump :\n\t{\"type\": \"LineString\", \"coordinates\": [[10.0, 25.0, 0.0], [20.0, 30.0, 0.0], [25.0, 25.0, 0.0], [30.0, 30.0, 0.0]]}\n\n\tshapely :\n\t<class 'shapely.geometry.linestring.LineString'>\n\tLINESTRING Z (10 25 0, 20 30 0, 25 25 0, 30 30 0)\n\n\tgeojson :\n\t<class 'dict'>\n\t{'type': 'LineString', 'coordinates': [(10.0, 25.0, 0.0), (20.0, 30.0, 0.0), (25.0, 25.0, 0.0), (30.0, 30.0, 0.0)]}\n\n\tplpygis :\n\t<class 'plpygis.geometry.LineString'>\n\t01020000800400000000000000000024400000000000003940000000000000000000000000000034400000000000003e4\n\t000000000000000000000000000003940000000000000394000000000000000000000000000003e400000000000003e40\n\t0000000000000000\n\n### Example 3 - Conversion to ArcGis geometry\n\timport arcpy\n\t. . .\n\tspo = convert_from_sdo_geometry(row[0])\n\tif spo.srid is None:\n\t\t# supposing you know the actual coordinates system of the source geometry\n\t\tsrid = KNOWN_SRID\n\telse:\n\t\tsrid = spo.srid\n\tarcpy_geom = arcpy.FromWKT(spo.wkt(), arcpy.SpatialReference(srid))\n\n### Classes and fonctions\nFunction `convert_from_sdo_geometry` : converts a `SDO_GEOMETRY` object and returns a `SpatialObject` instance.  \nModule : `kamutils.spatial`\n\nClass `SpatialObject`  \nModule : `kamutils.spatial`  \nProperties :\n- `type` : returns the geometry type (see [Geometry types constants](#geometry-types))\n- `srid` : returns the srid (Spatial Reference IDentifier) wich identifies the coordinate system of the geometry. If not defined, return `None`\n- `error` : returns the conversion error if any or `None`.  \n`error` is an instance of class `Error`\n- `__geo_interface__` : returns a GeoJSON dict representation of the geometry. The geometry is not converted to EPSG:4326 regardless of its srid.\n- `is_valid` : returns `True` if the geometry is valid, i.e. there is no conversion error, `False` in other cases\n\nMethods :\n- `wkt()` : returns the WKT representation of the geometry\n- `geometries()` : returns an iterator over all sub-objects in case of a collection (flattening all sub-collections). If the `SpatialObject` is not a collection, the iterator returns the object itself.\n\n\nClass `Error`  \nModule : `kamutils.exceptions`  \nAttributes :\n- `id` : returns the error id (see [Error codes](#error-codes))\n- `msg` : returns the error message\n\n### <a id=\"geometry-types\"></a>Geometry types\nTo import Geometry types constants :\n\n\tfrom kamutils.spatial import GEOMETRY_TYPE\n\nConstant list :\n| Constant name | Value |\n| --------- | :---------: |\n| GEOMETRY_TYPE.POINT | 1 |\n| GEOMETRY_TYPE.LINESTRING | 2 |\n| GEOMETRY_TYPE.POLYGON | 3 |\n| GEOMETRY_TYPE.COLLECTION | 4 |\n| GEOMETRY_TYPE.MULTIPOINT | 5 |\n| GEOMETRY_TYPE.MULTILINESTRING | 6 |\n| GEOMETRY_TYPE.MULTIPOLYGON | 7 |\n\n\n### <a id=\"error-codes\"></a>Error codes\nTo import Error codes constants :\n\n\tfrom kamutils.exceptions import ERROR\n\nConstant list :\n| Constant name | Value |\n| --------- | :---------: |\n| ERROR.EXCEPTION | -1 |\n| ERROR.INVALID_SDO_GEOMETRY | 1 |\n| ERROR.UNKNOW_TYPE | 2 |\n| ERROR.UNSUPPORTED_GEOMETRY | 3 |\n| ERROR.INVALID_GEOMETRY | 4\n\n### Limitations\nThe following geometry types are partially supported :\n| SDO_ETYPE | SDO_INTERPRETATION | Type (\\*) | Limitation | \n| :-------: | :---------: | ----------- | ----------- |\n| 1 | 0 | Oriented point | The point is converted but the orientation is ignored |\n| 1 | > 1 | Point cluster | Converted to `Multipoint` |\n| 2 | 2 | Line string made up of circular arcs | Circular arcs are transformed into straight line segments connecting the arc's coordinates |\n| 4 | > 1 | Compound line string with vertices connected by straight line segments or by circular arcs | Circular arcs are transformed into straight line segments connecting the arc's coordinates |\n| 1003<br>2003 | 2 | Polygon made up of a connected sequence of circular arcs | Circular arcs are transformed into straight line segments connecting the arc's coordinates |\n| 1005<br>2005 |  | Compound polygon with some vertices connected by straight line segments and some by circular arcs | Circular arcs are transformed into straight line segments connecting the arc's coordinates |\n\n\\* From [Oracle SDO_GEOMETRY Object Type - Values and Semantics in SDO_ELEM_INFO](https://docs.oracle.com/en/database/oracle/oracle-database/21/spatl/spatial-datatypes-metadata.html#GUID-270AE39D-7B83-46D0-9DD6-E5D99C045021)\n\nThe following geometry types are not supported by the current version. They produce an error `UNSUPPORTED_GEOMETRY`.\n| SDO_ETYPE | SDO_INTERPRETATION | Type (\\*) |\n| :-------: | :---------: | ----------- |\n| 0 |  | Geometry types not supported by Oracle Spatial |\n| 2 | 3 | NURBS curve |\n| 1003 | 3 | Optimized rectangle |\n| 1003 | 4 | Circle |\n| 1007 | 1 | Solid |\n| 1007 | 3 | Solid of type 'optimized box' |\n| 1008 |  | Multi Solid |\n| 2003 | 3 | Optimized rectangle |\n| 2003 | 4 | Circle |\n\n## Other utilities\n*To be completed*\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kamutils",
    "package_url": "https://pypi.org/project/kamutils/",
    "platform": null,
    "project_url": "https://pypi.org/project/kamutils/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/kamutils/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Converts Oracle SDO_GEOMETRY into spatial objects which implements the __geo_interface__ protocol (GeoJSON-like dict). Supports also WKT conversion.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16600135,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9c679132054a7a396d972e1dea6fcfe4e6c3f47b273fbda77656723792801e7",
          "md5": "854d6dc823e9bdec23517dc44ab9168c",
          "sha256": "491a4d6c31baf0ef981388415dab8bf48a1a006c4399867d8bf5dc9fce16757a"
        },
        "downloads": -1,
        "filename": "kamutils-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "854d6dc823e9bdec23517dc44ab9168c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 26268,
        "upload_time": "2023-01-28T10:28:59",
        "upload_time_iso_8601": "2023-01-28T10:28:59.053851Z",
        "url": "https://files.pythonhosted.org/packages/b9/c6/79132054a7a396d972e1dea6fcfe4e6c3f47b273fbda77656723792801e7/kamutils-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45969bc27a0a34f748a91fe23519da1be0aae41b3924b14a79094154cc6e6010",
          "md5": "cb6f6354d941d521a8457db0d8b29358",
          "sha256": "b009ba80c1eb5dfffb2b8e8150ff3e7ab69d521bf37021f1933c80e96ea9efe8"
        },
        "downloads": -1,
        "filename": "kamutils-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cb6f6354d941d521a8457db0d8b29358",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 25535,
        "upload_time": "2023-01-28T10:29:01",
        "upload_time_iso_8601": "2023-01-28T10:29:01.061755Z",
        "url": "https://files.pythonhosted.org/packages/45/96/9bc27a0a34f748a91fe23519da1be0aae41b3924b14a79094154cc6e6010/kamutils-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b9c679132054a7a396d972e1dea6fcfe4e6c3f47b273fbda77656723792801e7",
        "md5": "854d6dc823e9bdec23517dc44ab9168c",
        "sha256": "491a4d6c31baf0ef981388415dab8bf48a1a006c4399867d8bf5dc9fce16757a"
      },
      "downloads": -1,
      "filename": "kamutils-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "854d6dc823e9bdec23517dc44ab9168c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 26268,
      "upload_time": "2023-01-28T10:28:59",
      "upload_time_iso_8601": "2023-01-28T10:28:59.053851Z",
      "url": "https://files.pythonhosted.org/packages/b9/c6/79132054a7a396d972e1dea6fcfe4e6c3f47b273fbda77656723792801e7/kamutils-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "45969bc27a0a34f748a91fe23519da1be0aae41b3924b14a79094154cc6e6010",
        "md5": "cb6f6354d941d521a8457db0d8b29358",
        "sha256": "b009ba80c1eb5dfffb2b8e8150ff3e7ab69d521bf37021f1933c80e96ea9efe8"
      },
      "downloads": -1,
      "filename": "kamutils-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cb6f6354d941d521a8457db0d8b29358",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 25535,
      "upload_time": "2023-01-28T10:29:01",
      "upload_time_iso_8601": "2023-01-28T10:29:01.061755Z",
      "url": "https://files.pythonhosted.org/packages/45/96/9bc27a0a34f748a91fe23519da1be0aae41b3924b14a79094154cc6e6010/kamutils-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}