{
  "info": {
    "author": "Kévin Da Sylva - Pierre Peterlongo",
    "author_email": "Kevin.Da-Silva@inria.fr, pierre.peterlongo@inria.fr",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# StrainFLAIR\n\n**StrainFLAIR** (STRAIN-level proFiLing using vArIation gRaph) is a tool for strain identification and quantification that uses variation graph representation of genes sequences. The input is a collection of complete genomes, draft genomes or metagenome-assembled genomes from which genes will be predicted. StrainFLAIR is sub-divided into two main parts: first, an indexing step that stores clusters of reference genes into variation graphs, and then, a query step using mapping of metagenomic reads to infere strain-level abundances in the queried sample.\n\n<img src=\"doc/overview.png\" width=\"500\">\n\n\n\nStrainFLAIR is composed of several modules. Each module of the pipeline is described below.\n\n## Dependencies (all installed by the Install procedure)\n* [prodigal](https://github.com/hyattpd/Prodigal)\n* [cdhit](https://github.com/weizhongli/cdhit)\n* [minimap2](https://github.com/lh3/minimap2)\n* [seqwish](https://github.com/ekg/seqwish)\n* [vg](https://github.com/vgteam/vg)\n* [pandas](https://pandas.pydata.org/)\n\n## Install \n\n```bash\n git clone https://github.com/kevsilva/StrainFLAIR\n cd StrainFLAIR\n conda env create -p Strain --file env.yml\n conda activate ./Strain\n pip install strainflair\n```\n\n\n\n## StrainFLAIR pipeline\n\n### Usage\n\n`StrainFLAIR.sh` is a pipeline combining the indexation and query steps. Mapping is to be done separately.\n\nTODO\n\n### Full indexation and query example\n\nTODO\n\n## \n\n## StrainFLAIR modules\n\n#### Module `genes_prediction` : prediction of protein-coding genes from each input sequence\n\nFrom the input reference sequences, protein-coding genes are predicted using **Prodigal**. To reduce mapping bias at the extremities, predicted genes can be extended on both ends if the reference sequence it originates from allows it.\n\nExample: `genes_prediction -s file_of_fasta_files.txt -o my_output_directory_name -l 75`\n\n#### Module `cd-hit-est`: clustering of the predicted genes\n\nGenes are clustered using **CD-HIT**. Genes are then grouped into gene families and the resulting clusters are composed of similar genes according to the user-defined thresholds and parameters.\n\nExample: `cd-hit-est -i my_genes_not_extended.fasta -o clusters_files_name -c 0.95 -aS 0.90 -g 1 -d 0 -M 0 -T 0 -G 0`\n\n#### Module `graphs_construction` and `concat_graphs`: building a variation graph representing the gene clusters\n\nEach gene cluster (gene family) is converted into a variation graph. All variation graphs are then concatenated into a single one and indexed.\n\nExample: \n```\ngraphs_construction -s my_genes_extended.fasta -c cluster_file.clstr -o my_output_directory_name\nconcat_graphs -i my_input_directory_name -s 1000\nvg view final_graph.vg > final_graph.gfa\nvg prune final_graph.vg | vg index -g final_graph.gcsa -\nvg index -x final_graph.xg final_graph.vg\nvg snarls final_graph.vg > final_graph.snarls\n```\n\n#### Mapping reads onto a variation graph\n\nMapping of reads onto a variation graph is done using `vg mpmap` from **vg toolkit**. The output needs to be into the JSON format.\n\nExample: \n```\nvg mpmap -x final_graph.xg -g final_graph.gcsa -s final_graph.snarls -f my_reads.fastq.gz -t 24 -M 10 -m -L 0 > mapping_output.gamp \nvg view -j -K mapping_output.gamp  > mapping_output.json\n```\n\n#### Module `json2csv`: Gene-level abundances\n\nMapping results are processed according to our developed algorithm to attribute abundances to the reference genes.\n\nExample: `json2csv -g final_graph.gfa -m mapping_output.json -p dict_clusters.pickle -o output_file_name`\n\n#### Module `compute_strains_abundance`: Strain-level abundances\n\nGene-level abundances are converted into strain-level abundances. Strain abundance is set to zero if not metting the threshold of proportion of detected genes.\n\nExample: `compute_strains_abundance -i gene_level_table.csv -o my_output_directory -t proportion_detected_genes_threshold`\n\n## Contact\n\nKévin Da Silva: kevin.da-silva@inria.fr\n\nPierre Peterlongo: pierre.peterlongo@inria.fr\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kevsilva/StrainFLAIR",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "StrainFlair",
    "package_url": "https://pypi.org/project/StrainFlair/",
    "platform": "",
    "project_url": "https://pypi.org/project/StrainFlair/",
    "project_urls": {
      "Homepage": "https://github.com/kevsilva/StrainFLAIR"
    },
    "release_url": "https://pypi.org/project/StrainFlair/0.0.2/",
    "requires_dist": [
      "pandas (>=1.2.1)",
      "Bio (>=0.3.0)"
    ],
    "requires_python": "",
    "summary": "StrainFLAIR (STRAIN-level proFiLing using vArIation gRaph) is a tool for strain identification and quantification that uses variation graph representation of genes sequences",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9222026,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "328ff4decd299af8563c342867d8f4b273027e756a951047fde11f963545db15",
          "md5": "9aa9bb069b81eb99c0456b73227cdc34",
          "sha256": "eb884ece97aad41fb1942f2604b1509f752a8f18dc76e59880572da8624898c1"
        },
        "downloads": -1,
        "filename": "StrainFlair-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9aa9bb069b81eb99c0456b73227cdc34",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35975,
        "upload_time": "2021-01-25T09:46:28",
        "upload_time_iso_8601": "2021-01-25T09:46:28.299956Z",
        "url": "https://files.pythonhosted.org/packages/32/8f/f4decd299af8563c342867d8f4b273027e756a951047fde11f963545db15/StrainFlair-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0230d66a83da82ab5b797711eff482d05337dde3480d29ae51f0383233c8d49",
          "md5": "9026499b9da9c9e9c6c1c0b4dce128f5",
          "sha256": "f8e539801171aa86f660ec350cc84d6b64236cfd912e7f9e7cc50f917cf3546a"
        },
        "downloads": -1,
        "filename": "StrainFlair-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9026499b9da9c9e9c6c1c0b4dce128f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20141,
        "upload_time": "2021-01-25T09:46:29",
        "upload_time_iso_8601": "2021-01-25T09:46:29.390160Z",
        "url": "https://files.pythonhosted.org/packages/d0/23/0d66a83da82ab5b797711eff482d05337dde3480d29ae51f0383233c8d49/StrainFlair-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "328ff4decd299af8563c342867d8f4b273027e756a951047fde11f963545db15",
        "md5": "9aa9bb069b81eb99c0456b73227cdc34",
        "sha256": "eb884ece97aad41fb1942f2604b1509f752a8f18dc76e59880572da8624898c1"
      },
      "downloads": -1,
      "filename": "StrainFlair-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9aa9bb069b81eb99c0456b73227cdc34",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 35975,
      "upload_time": "2021-01-25T09:46:28",
      "upload_time_iso_8601": "2021-01-25T09:46:28.299956Z",
      "url": "https://files.pythonhosted.org/packages/32/8f/f4decd299af8563c342867d8f4b273027e756a951047fde11f963545db15/StrainFlair-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d0230d66a83da82ab5b797711eff482d05337dde3480d29ae51f0383233c8d49",
        "md5": "9026499b9da9c9e9c6c1c0b4dce128f5",
        "sha256": "f8e539801171aa86f660ec350cc84d6b64236cfd912e7f9e7cc50f917cf3546a"
      },
      "downloads": -1,
      "filename": "StrainFlair-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "9026499b9da9c9e9c6c1c0b4dce128f5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20141,
      "upload_time": "2021-01-25T09:46:29",
      "upload_time_iso_8601": "2021-01-25T09:46:29.390160Z",
      "url": "https://files.pythonhosted.org/packages/d0/23/0d66a83da82ab5b797711eff482d05337dde3480d29ae51f0383233c8d49/StrainFlair-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}