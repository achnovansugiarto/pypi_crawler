{
  "info": {
    "author": "tokentranslator-group",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# proposalsampler\nExperimental project. For given proposal or equation it generate its implementation (context or sample space $\\Omega$ or model (like model for theory in logic therms))\nat which this proposal (or equation) is true.\nFor example below, given the sent \"abelian(G) \\\\and subgroup(H, G,) => abelian(H)\", the program will generate some groups (described with they generators (like in GAP)) for G, H, at which this proposal is true (i.e. $\\Omega = {\\{H_{i}, G_{i}\\} | where i \\leq n}$ where $n$ is count of samples to be generated).\nOnly part of that \"arguments\" of the proposal can be given ($\\Theta$) such that only remained part ($\\Psi$) ought to be generated (so $\\Omega = \\Theta + \\Psi$).  \nThe main idea is that such samples can give you better understanding of a proposal itself, especially if such proposal have been taken from some abstract math theory. \n\n##### sampling proposals:\n\n```\nfrom tokentranslator.db_models.model_main import TokenizerDB\nfrom tokentranslator.env.clause.clause_main import Clause\n\nmodel = TokenizerDB()\n\n# switch to clauses db:\nmodel.change_dialect_db(\"cs\")\n\nclause = Clause(\"abelian(G) \\\\and subgroup(H, G,) => abelian(H)\", db=model)\nclause.parser.parse()\n\n# now import and use sampling:\nfrom proposalsampler.sampling.slambda.tests_slambda_main import test_ventries \nfrom proposalsampler.sampling.slambda import slambda_main as sm\n\n# for this example test_ventries[3] is init data for proposal clause:\ntest_ventries[3] =\n{'G': ('(1,4)(2,3)', '(1,3)(2,4)'),\n \"['s', 1, 0, 0]\": True,\n \"['s', 1, 1, 0]\": True,\n 'idd': \"['s']\",\n 'successors_count': 0}\n\n# so group G is given but group H is not, and must be found\n# during sampling:\nsampler = sm.Sampler(clause.net_out, test_ventries[3])\n\nsampler.run()\n# if successors found, they entries would look like:\n\n{'G': ('(1,4)(2,3)', '(1,3)(2,4)'),  'H': ('(1,3)(2,4)', '(1,4)(2,3)')\", ['s', 1, 1, 0]\": True, \"['s', 1, 0, 0]\": True, 'idd': \"['s', 4, 3, 0]\", 'successors_count': 0, 'checked_nodes': [\"['s']\", \"['s', 1]\", \"['s', 1, 1, 0]\", \"['s', 1, 0, 0]\", \"['s', 0, 0]\"], 'failure_statuses': {}, 'parent_idd': \"['s', 4, 3]\", \"['s']\": True, \"['s', 0, 0]\": True, \"['s', 1]\": True}\n\n# so group H found and in this case H = Group('(1,3)(2,4)', '(1,4)(2,3)') (= G but proposal is still holding) \n# if no results were generated, try run again.\n```\n\n##### sampling equations:\n```\n>>> e = Equation(\"f(a*x+b*y)=a*f(x)+b*f(y)\")\n>>> e.parser.parse()\n>>> e.sampling.sympy.sampling_vars()\n>>> # or e.sampling.sympy.sampling_subs()\n\n>>> e.sampling.sympy.show_rand()\n>>> # or \"\".join(e.eq_tree.flatten('rand_sympy'))\n\nsin(0.243*0.570+0.369*0.078)=0.243*sin(0.570)+0.369*sin(0.078)\n```\n### Requirements\n```\npip install -r requirements.txt\n```\n\n### Installation and running\n```\npip install proposalsampler\n```\n\n### GUI:\nThere is also a GUI for this project at <br/>\nhttps://github.com/tokentranslator-group/tokentranslator-gui\n\n### Tests:\nsee `tests/test_list.txt`\n\n### References:\n##### Sampling:\nProbabilistic Models of Cognition: https://probmods.org/\n\n(eng: George Pólya: Mathematics and Plausible Reasoning, Princeton University Press 1954, 2 volumes (Vol. 1: Induction and Analogy in Mathematics, Vol. 2: Patterns of Plausible Inference)\n\n(ru: Джордж Пойа: Математика и правдоподобные рассуждения)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tokentranslator-group/proposalsampler",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "proposalsampler",
    "package_url": "https://pypi.org/project/proposalsampler/",
    "platform": "",
    "project_url": "https://pypi.org/project/proposalsampler/",
    "project_urls": {
      "Homepage": "https://github.com/tokentranslator-group/proposalsampler"
    },
    "release_url": "https://pypi.org/project/proposalsampler/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "proposal sampler",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13056135,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d68f58f127c719609224ad9d3f0b175d205a5a7347a88e154ecbee0fadb1eb4",
          "md5": "597ddad34493ebb118bdf720c5953a06",
          "sha256": "d4932e096476b7fecf15c34bf0d1c5794e7f2663ec662385635d3d620333e912"
        },
        "downloads": -1,
        "filename": "proposalsampler-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "597ddad34493ebb118bdf720c5953a06",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 36066,
        "upload_time": "2022-03-02T10:40:05",
        "upload_time_iso_8601": "2022-03-02T10:40:05.420535Z",
        "url": "https://files.pythonhosted.org/packages/8d/68/f58f127c719609224ad9d3f0b175d205a5a7347a88e154ecbee0fadb1eb4/proposalsampler-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2f41134d3ca80c2cd6992400b81811677699a0d98aca7a344b1c77337bd1e68",
          "md5": "c894b3f2554656dabcb948b285451a82",
          "sha256": "d121eed50229ef95324f8dbc6008c764b67fdff825339bf6d07adffffefc06a8"
        },
        "downloads": -1,
        "filename": "proposalsampler-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c894b3f2554656dabcb948b285451a82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30103,
        "upload_time": "2022-03-02T10:40:07",
        "upload_time_iso_8601": "2022-03-02T10:40:07.127297Z",
        "url": "https://files.pythonhosted.org/packages/a2/f4/1134d3ca80c2cd6992400b81811677699a0d98aca7a344b1c77337bd1e68/proposalsampler-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2.dev3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "265a034d0ce162a2c5b52d334191fc0848e595ea20ffbecd1cabcb33cdf8d1bb",
          "md5": "c120afca62363050b743edbccc702f74",
          "sha256": "fa7d0e08edcb68c934aa65260b87ac12664f1cb9ce060809c45cc61f4d0805de"
        },
        "downloads": -1,
        "filename": "proposalsampler-0.0.2.dev3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c120afca62363050b743edbccc702f74",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 36127,
        "upload_time": "2022-03-02T10:24:12",
        "upload_time_iso_8601": "2022-03-02T10:24:12.279049Z",
        "url": "https://files.pythonhosted.org/packages/26/5a/034d0ce162a2c5b52d334191fc0848e595ea20ffbecd1cabcb33cdf8d1bb/proposalsampler-0.0.2.dev3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4a35cfd543313809d177cb651cc728595bd77a5e3d00769d2b3f7b67a5b460a",
          "md5": "6af546045aa3911ceab72622eeb3e18c",
          "sha256": "21b9e448a66a469b3e34f1f5ffa013e4ae2e1ac5da7e5206d5aa2046516e9cd1"
        },
        "downloads": -1,
        "filename": "proposalsampler-0.0.2.dev3.tar.gz",
        "has_sig": false,
        "md5_digest": "6af546045aa3911ceab72622eeb3e18c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30111,
        "upload_time": "2022-03-02T10:24:14",
        "upload_time_iso_8601": "2022-03-02T10:24:14.104895Z",
        "url": "https://files.pythonhosted.org/packages/a4/a3/5cfd543313809d177cb651cc728595bd77a5e3d00769d2b3f7b67a5b460a/proposalsampler-0.0.2.dev3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8d68f58f127c719609224ad9d3f0b175d205a5a7347a88e154ecbee0fadb1eb4",
        "md5": "597ddad34493ebb118bdf720c5953a06",
        "sha256": "d4932e096476b7fecf15c34bf0d1c5794e7f2663ec662385635d3d620333e912"
      },
      "downloads": -1,
      "filename": "proposalsampler-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "597ddad34493ebb118bdf720c5953a06",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 36066,
      "upload_time": "2022-03-02T10:40:05",
      "upload_time_iso_8601": "2022-03-02T10:40:05.420535Z",
      "url": "https://files.pythonhosted.org/packages/8d/68/f58f127c719609224ad9d3f0b175d205a5a7347a88e154ecbee0fadb1eb4/proposalsampler-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2f41134d3ca80c2cd6992400b81811677699a0d98aca7a344b1c77337bd1e68",
        "md5": "c894b3f2554656dabcb948b285451a82",
        "sha256": "d121eed50229ef95324f8dbc6008c764b67fdff825339bf6d07adffffefc06a8"
      },
      "downloads": -1,
      "filename": "proposalsampler-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c894b3f2554656dabcb948b285451a82",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 30103,
      "upload_time": "2022-03-02T10:40:07",
      "upload_time_iso_8601": "2022-03-02T10:40:07.127297Z",
      "url": "https://files.pythonhosted.org/packages/a2/f4/1134d3ca80c2cd6992400b81811677699a0d98aca7a344b1c77337bd1e68/proposalsampler-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}