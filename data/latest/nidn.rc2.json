{
  "info": {
    "author": "ESA Advanced Concepts Team",
    "author_email": "pablo.gomez@esa.int",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "# Neural Inverse Design of Nanostructures (NIDN)\n\n[![Documentation Status](https://readthedocs.org/projects/nidn/badge/?version=latest)](https://nidn.readthedocs.io/en/latest/?badge=latest) ![GitHub Workflow Status (branch)](https://img.shields.io/github/workflow/status/esa/nidn/Running%20tests/main?style=flat-square) ![GitHub last commit](https://img.shields.io/github/last-commit/esa/nidn?style=flat-square)\n![GitHub](https://img.shields.io/github/license/esa/nidn?style=flat-square) ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/nidn?style=flat-square)\n![GitHub contributors](https://img.shields.io/github/contributors/esa/nidn?style=flat-square)\n![GitHub issues](https://img.shields.io/github/issues/esa/nidn?style=flat-square) ![GitHub pull requests](https://img.shields.io/github/issues-pr/esa/nidn?style=flat-square)\n\n<!-- TABLE OF CONTENTS -->\n<details open=\"open\">\n  <summary>Table of Contents</summary>\n  <ol>\n    <li>\n      <a href=\"#about-the-project\">About The Project</a>\n      <ul>\n        <li><a href=\"#built-with\">Built With</a></li>\n      </ul>\n    </li>\n    <li>\n      <a href=\"#getting-started\">Getting Started</a>\n      <ul>\n        <li><a href=\"#prerequisites\">Prerequisites</a></li>\n        <li><a href=\"#installation\">Installation</a></li>\n        <li><a href=\"#test\">Test</a></li>\n      </ul>\n    </li>\n    <li><a href=\"#usage\">Usage</a></li>\n    <li><a href=\"#contributing\">Contributing</a></li>\n    <li><a href=\"#license\">License</a></li>\n    <li><a href=\"#contact\">Contact</a></li>\n  </ol>\n</details>\n\n<!-- ABOUT THE PROJECT -->\n\n## About The Project\n\nNeural Inverse Design of Nanostructures (NIDN) is a Python project by the Advanced Concepts Team of ESA. The goal of the project is to enable inverse design of stacks of nanostructures, metamaterials, photonic crystals, etc., using neural networks in PyTorch. As forward models, it supports [rigorous coupled-wave analysis](https://en.wikipedia.org/wiki/Rigorous_coupled-wave_analysis) and a [finite-difference time-domain](https://eecs.wsu.edu/~schneidj/ufdtd/) solver. There is an accompanying paper about to be published.\n\n<p align=\"center\">\n  <a href=\"https://github.com/esa/nidn\">\n    <img src=\"docs/source/NIDN_Scheme_v2.drawio.drawio.png\" alt=\"Scheme\"  width=\"910\" height=\"459\">\n  </a>\n  <p align=\"center\">\n    Neural Inverse Design of Nanostructures with PyTorch\n    <br />\n    <a href=\"https://nidn.readthedocs.io\"><strong>Explore the docs »</strong></a>\n    <br />\n    <br />\n    <a href=\"https://github.com/esa/NIDN/blob/main/notebooks/Inverse_Material_Design_with_RCWA.ipynb\">View Example notebook</a>\n    ·\n    <a href=\"https://github.com/esa/nidn/issues\">Report Bug</a>\n    ·\n    <a href=\"https://github.com/esa/nidn/issues\">Request Feature</a>\n  </p>\n</p>\n\n### Built With\n\nThis project is based on:\n\n- [grcwa](https://github.com/weiliangjinca/grcwa) which was modified to include [PyTorch](https://pytorch.org/) support to allow neural network training.\n- [fdtd](https://github.com/flaport/fdtd) which was modified to allow training neural networks with it and match the setup of NIDN\n\nFor more details than provided with NIDN on the forward models please refer to their docs. The adaptations of there code are in the folders [nidn/trcwa/](https://github.com/esa/NIDN/tree/main/nidn/trcwa) and [nidn/fdtd/](https://github.com/esa/NIDN/tree/main/nidn/fdtd).\n\nBelow you can see results of an exemplary optimization of a three-uniform-layer material to design a 1150nm filter.\n\n![Exemplary optimization of a three-uniform-layer material to design a 1150nm filter. | width=300](/examples/BP-filter-3layer-opt.gif)\n![Exemplary optimization of a three-uniform-layer material to design a 1150nm filter. | width=300](/examples/BP-filter-3layer-eps.gif)\n<!-- GETTING STARTED -->\n\n## Getting Started\n\nThis is a brief guide how to set up NIDN.\n\n### Installation\n\nThe easiest way is to pip install NIDN via\n\n`pip install nidn`.\n\nAlternatively, to use the latest code from this repo `git clone` the repository and make sure you have all the requirements installed.\n\nTo set up a conda environment for the project run `conda env create -f environment.yml`.\n\nThis will create a conda environment called `nidn` for it.\n\nIf you just want to install the module in your current environment you can run\n\n`pip install .` in the root folder where the `setup.py` is located.\n\nWhile NIDN does support GPU utilization there are only modest performance benefits to it at time of writing.\n\n### Test\n\nAfter cloning the repository, developers can check the functionality of NIDN by running the following command in the `nidn/tests` directory:\n\n```sh\npytest\n```\n\n<!-- USAGE EXAMPLES -->\n\n## Usage\n\n### Config\n\nNIDN uses a central config file which is passed through the entire program. The default config parameters can be seen [here](https://github.com/esa/NIDN/blob/main/nidn/utils/resources/default_config.toml). Practical usage of the config files is demonstrated in the [included Jupyter notebook](https://github.com/esa/NIDN/tree/main/notebooks).\n\n### Use Case 1: Forward Model Simulation\n\nThis serves to compute the spectral characteristics of a material. The Jupyter notebooks [Forward_Model_Simulation_with_FDTD.ipynb](https://github.com/esa/NIDN/blob/main/notebooks/Forward_Model_Simulation_with_FDTD.ipynb) and [Forward_Model_Simulation_with_RCWA.ipynb](https://github.com/esa/NIDN/blob/main/notebooks/Forward_Model_Simulation_with_RCWA.ipynb) demonstrate this use case.\n\n### Use Case 2: Inverse Design of Nanostructures\n\nThis is the case you aim to design a material matching some target spectral characteristics. A thorough explanation is given in the Jupyter notebooks [Inverse_Material_Design_with_FDTD.ipynb](https://github.com/esa/NIDN/blob/main/notebooks/Inverse_Material_Design_with_FDTD.ipynb) and [Inverse_Material_Design_with_RCWA.ipynb](https://github.com/esa/NIDN/blob/main/notebooks/Inverse_Material_Design_with_RCWA.ipynb).\n\n### Logging & Docs\n\nTo change the logging verbosity call `nidn.setLogLevel(level)` where level is one of `TRACE`,`DEBUG`,`INFO`,`WARN` and `ERROR`.\n\nDetailed docs of NIDN are [online](https://nidn.readthedocs.io/en/latest/) can be built with sphinx. To do so, make sure [sphinx](https://www.sphinx-doc.org/en/master/usage/installation.html) is installed and run `make html` in the docs folder to get a local html version of the docs. readthedocs support may follow.\n\n### Supported Materials\n\nIf you try to design a material with the `classification` approach (see [mentioned notebooks](https://github.com/esa/NIDN/blob/main/notebooks/Inverse_Material_Design_with_RCWA.ipynb) for more details), all materials in the [materials folder](https://github.com/esa/NIDN/tree/main/nidn/materials/data) will be utilized. You can manually add other materials there using data from, e.g., [refractiveindex.info](https://refractiveindex.info/).\n\n<!-- ROADMAP -->\n\n## Roadmap\n\nSee the [open issues](https://github.com/esa/nidn/issues) for a list of proposed features (and known issues).\n\n<!-- CONTRIBUTING -->\n\n## Contributing\n\nThe project is open to community contributions. Feel free to open an [issue](https://github.com/esa/nidn/issues) or write us an email if you would like to discuss a problem or idea first.\n\nIf you want to contribute, please\n\n1. Fork the project on [GitHub](https://github.com/esa/nidn).\n2. Get the most up-to-date code by following this quick guide for installing nidn from source:\n   1. Get [miniconda](https://docs.conda.io/en/latest/miniconda.html) or similar\n   2. Clone the repo\n   ```sh\n   git clone https://github.com/esa/nidn.git\n   ```\n   3. With the default configuration PyTorch with CUDA\n      support is installed.\n      If this should not happen, comment out `cudatoolkit` in the `environment.yml`.\n   4. Set up the environment. This creates a conda environment called\n      `nidn` and installs the required dependencies.\n   ```sh\n   conda env create -f environment.yml\n   conda activate nidn\n   ```\n\nOnce the installation is done, you are ready to contribute.\nPlease note that PRs should be created from and into the `main` branch.\n\n3. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)\n4. Commit your Changes (`git commit -m 'Add some AmazingFeature'`)\n5. Push to the Branch (`git push origin feature/AmazingFeature`)\n6. Open a Pull Request on the `main` branch.\n\nand we will have a look at your contribution as soon as we can.\n\nFurthermore, please make sure that your PR passes all automated tests. Review will only happen after that.\nOnly PRs created on the `main` branch with all tests passing will be considered.\n\n<!-- LICENSE -->\n\n## License\n\nDistributed under the GPL-3.0 License. See [LICENSE](https://github.com/esa/nidn/blob/main/LICENSE) for more information.\n\n<!-- CONTACT -->\n\n## Contact\n\nCreated by ESA's [Advanced Concepts Team](https://www.esa.int/gsp/ACT/index.html)\n\n- Pablo Gómez - `pablo.gomez at esa.int`\n\nProject Link: [https://github.com/esa/nidn](https://github.com/esa/nidn)\n\n<!-- ACKNOWLEDGEMENTS\nThis README was based on https://github.com/othneildrew/Best-README-Template\n-->\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/esa/nidn",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nidn",
    "package_url": "https://pypi.org/project/nidn/",
    "platform": null,
    "project_url": "https://pypi.org/project/nidn/",
    "project_urls": {
      "Homepage": "https://github.com/esa/nidn",
      "Source": "https://github.com/esa/nidn/"
    },
    "release_url": "https://pypi.org/project/nidn/0.1.1/",
    "requires_dist": [
      "dotmap (>=1.3.24)",
      "loguru (>=0.5.3)",
      "matplotlib (>=3.3.3)",
      "numpy (>=1.20.0)",
      "pandas (>=1.3.1)",
      "scipy (>=1.6.0)",
      "tqdm (>=4.56.1)",
      "toml (>=0.10.2)",
      "torch (>=1.9)"
    ],
    "requires_python": ">=3.8, <4",
    "summary": "A package for inverse material design of nanostructures using neural networks.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15021009,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c10008a1deab329de9e5d29c8a6845ae5ea2b3f527ff146e7e8ce8064e2d555e",
          "md5": "e2c0928335c3f6c0cbc87ae0d9e2536c",
          "sha256": "9b20401cbff1231428a7e99e8567c73bb0cdef0f585d9c5d730f277090f07b9d"
        },
        "downloads": -1,
        "filename": "nidn-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e2c0928335c3f6c0cbc87ae0d9e2536c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8, <4",
        "size": 172762,
        "upload_time": "2022-05-30T16:11:07",
        "upload_time_iso_8601": "2022-05-30T16:11:07.393523Z",
        "url": "https://files.pythonhosted.org/packages/c1/00/08a1deab329de9e5d29c8a6845ae5ea2b3f527ff146e7e8ce8064e2d555e/nidn-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8538cf11f04243808f872d864be540c2192fb1f77d87ae54c22312ef8eca4149",
          "md5": "36773d1380e88249cb912b285b40af9f",
          "sha256": "10c0f505f0b484e96ea5e8e0944a921bcafa37ca6413cdf8c9d9f926891ce9cf"
        },
        "downloads": -1,
        "filename": "nidn-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "36773d1380e88249cb912b285b40af9f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8, <4",
        "size": 152367,
        "upload_time": "2022-05-30T16:11:09",
        "upload_time_iso_8601": "2022-05-30T16:11:09.340881Z",
        "url": "https://files.pythonhosted.org/packages/85/38/cf11f04243808f872d864be540c2192fb1f77d87ae54c22312ef8eca4149/nidn-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc5a4dfe017c5fa0e89b8ad89f6ad5759d32195440dd74a980212d356826ec44",
          "md5": "bd82b45fec5289b4aa57d2e3a5f3572f",
          "sha256": "b2def07153de16e779dd725f860d146bd5fcc0804b6dc99262e8291aa4bf9490"
        },
        "downloads": -1,
        "filename": "nidn-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bd82b45fec5289b4aa57d2e3a5f3572f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8, <4",
        "size": 180288,
        "upload_time": "2022-09-07T15:51:16",
        "upload_time_iso_8601": "2022-09-07T15:51:16.193070Z",
        "url": "https://files.pythonhosted.org/packages/cc/5a/4dfe017c5fa0e89b8ad89f6ad5759d32195440dd74a980212d356826ec44/nidn-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cc92508f41d053815c4375f460da28f0e770a6271738b2e899bb93ff2ccb975",
          "md5": "115111916ecc97142b22244f5ef08314",
          "sha256": "8bbdc0ea512f524fa6c5bc9940e29f0f987283a6a120dbc5227f08c8f0e6aa8f"
        },
        "downloads": -1,
        "filename": "nidn-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "115111916ecc97142b22244f5ef08314",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8, <4",
        "size": 160138,
        "upload_time": "2022-09-07T15:51:18",
        "upload_time_iso_8601": "2022-09-07T15:51:18.605076Z",
        "url": "https://files.pythonhosted.org/packages/7c/c9/2508f41d053815c4375f460da28f0e770a6271738b2e899bb93ff2ccb975/nidn-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc5a4dfe017c5fa0e89b8ad89f6ad5759d32195440dd74a980212d356826ec44",
        "md5": "bd82b45fec5289b4aa57d2e3a5f3572f",
        "sha256": "b2def07153de16e779dd725f860d146bd5fcc0804b6dc99262e8291aa4bf9490"
      },
      "downloads": -1,
      "filename": "nidn-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bd82b45fec5289b4aa57d2e3a5f3572f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8, <4",
      "size": 180288,
      "upload_time": "2022-09-07T15:51:16",
      "upload_time_iso_8601": "2022-09-07T15:51:16.193070Z",
      "url": "https://files.pythonhosted.org/packages/cc/5a/4dfe017c5fa0e89b8ad89f6ad5759d32195440dd74a980212d356826ec44/nidn-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7cc92508f41d053815c4375f460da28f0e770a6271738b2e899bb93ff2ccb975",
        "md5": "115111916ecc97142b22244f5ef08314",
        "sha256": "8bbdc0ea512f524fa6c5bc9940e29f0f987283a6a120dbc5227f08c8f0e6aa8f"
      },
      "downloads": -1,
      "filename": "nidn-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "115111916ecc97142b22244f5ef08314",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8, <4",
      "size": 160138,
      "upload_time": "2022-09-07T15:51:18",
      "upload_time_iso_8601": "2022-09-07T15:51:18.605076Z",
      "url": "https://files.pythonhosted.org/packages/7c/c9/2508f41d053815c4375f460da28f0e770a6271738b2e899bb93ff2ccb975/nidn-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}