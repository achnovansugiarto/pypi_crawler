{
  "info": {
    "author": "Gerard Colas des Francs, Peter R. Wiecha",
    "author_email": "pwiecha@laas.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "***********************************\nRequirements / Installation\n***********************************\n\nRetarded 3-layer Greens Tensors for pyGDM2 based on a fortran implementation by GÃ©rard Colas des Francs.\n\npyGDM2 is available on `pypi <https://pypi.python.org/pypi/pygdm2/>`_ and `gitlab <https://gitlab.com/wiechapeter/pyGDM2>`_. \n\nDetailed documentation with many examples is can be found at the `pyGDM2 documentation website <https://wiechapeter.gitlab.io/pyGDM2-doc/>`_. See also the `documentation paper on arXiv (1802.04071) <https://arxiv.org/abs/1802.04071>`_ or a more `theoretical review about the GDM method <https://doi.org/10.1088/0034-4885/68/8/R05>`_.\n\n\n\n\n\n\nRequirements\n================================\n\nPython\n------------------\n    - **python** (3.5+, `python <https://www.python.org/>`_)\n    - **numpy** (`numpy <http://www.numpy.org/>`_)\n    - **numba** (`numba <https://numba.pydata.org/>`_)\n    - **python headers** (under linux install the package *python-dev* or *python-devel*)\n\n\nFortran\n------------------\n    - *fortran* compiler (tested with **gfortran**. `gcc <https://gcc.gnu.org/fortran/>`_)\n    - **f2py** (comes with **numpy**. `link <http://www.numpy.org/>`_)\n\n\nOptional Python packages\n-------------------------------------\n    - **scipy** >= v0.17.0, lower versions supported with restrictions (*Strongly recommended*. Used for standard solver LU decomposition and several tools. `scipy <https://www.scipy.org/>`_)\n\n\n\nInstallation under linux\n=============================================\n\nVia pip\n-------------------------------\n\nInstall from pypi repository via\n\n.. code-block:: bash\n    \n    $ pip install pygdm2_retard\n\n\n\nVia setup script\n-------------------------------\n\nThe easiest possibility to compile pyGDM2_retard is via the \nsetup-script, which uses the extended *distutils* from *numpy*. \n\nTo install the pyGDM2_retard module, run in the source directory:\n\n.. code-block:: bash\n    \n    $ pip3 install -U .\n\nor\n\n.. code-block:: bash\n    \n    $ python3 setup.py install\n\nTo install as a user installation without administrator rights:\n\n.. code-block:: bash\n    \n    $ pip3 install -U . --user\n\nTo install to a entirely free, user-defined location, use the *prefix* option:\n\n.. code-block:: bash\n    \n    $ python3 setup.py install --prefix=/some/specific/location\n\n\nTo only compile without installation, use\n\n.. code-block:: bash\n    \n    $ python3 setup.py build\n\n\n        \n\n\nInstallation under windows\n=============================================\n\nFor windows, we recommend `Anaconda <https://www.anaconda.com/download/#windows>`_ in which pyGDM can be installed easily via pip. On pip we provide python 3.5+ windows binaries of the pyGDM2_retard module \n\nVia pip\n-------------------------------\n\nWe provide a 64bit windows binary on the pypi repository (tested on Win7 and Win10). Install via\n\n.. code-block:: bash\n    \n    $ pip install pygdm2_retard\n\n    \nCompile using the Anaconda distribution (tested with anaconda3)\n------------------------------------------------------------------------------------------\n    \n1. get the repo (e.g. download from gitlab)\n\n2. install gcc compiler:\n\n   .. code-block:: bash\n    \n        $ conda install m2w64-toolchain libpython\n\n3. compile fortran parts:\n\n   .. code-block:: bash\n    \n        $ python setupy.py build\n\n4. install:\n\n   .. code-block:: bash\n    \n        $ python setupy.py install\n\n\n\n\n\nInstallation under Mac OS X\n=============================================\n\nShould work under anaconda python as described above for compilation on windows.\n\n\n\nAuthors\n=========================\n\nfortran implementation\n-------------------------\n   - G\\. Colas des Francs\n\npython interface\n------------------------\n   - P\\. R. Wiecha",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/wiechapeter/pyGDM2",
    "keywords": "coupled dipoles method,green dyadic method,electrodynamical simulations,nano optics,frequency-domain",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyGDM2-retard",
    "package_url": "https://pypi.org/project/pyGDM2-retard/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyGDM2-retard/",
    "project_urls": {
      "Homepage": "https://gitlab.com/wiechapeter/pyGDM2"
    },
    "release_url": "https://pypi.org/project/pyGDM2-retard/0.2/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "A python full-field electrodynamical solver, based on the Green dyadic method (volume integral technique in frequency domain).",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10250772,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f914f280a834684e788bbeb11fc1540a44a379fdeb0fd869a9f707dc06925c6",
          "md5": "d2a4f61087d5ad0f15282e141be890d5",
          "sha256": "6c606cfec20c42142442d2fc13aa831df6ebe34ce7c7600bf512abdc0082799f"
        },
        "downloads": -1,
        "filename": "pyGDM2_retard-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d2a4f61087d5ad0f15282e141be890d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 94304,
        "upload_time": "2021-05-04T07:48:05",
        "upload_time_iso_8601": "2021-05-04T07:48:05.688839Z",
        "url": "https://files.pythonhosted.org/packages/9f/91/4f280a834684e788bbeb11fc1540a44a379fdeb0fd869a9f707dc06925c6/pyGDM2_retard-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f914f280a834684e788bbeb11fc1540a44a379fdeb0fd869a9f707dc06925c6",
        "md5": "d2a4f61087d5ad0f15282e141be890d5",
        "sha256": "6c606cfec20c42142442d2fc13aa831df6ebe34ce7c7600bf512abdc0082799f"
      },
      "downloads": -1,
      "filename": "pyGDM2_retard-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d2a4f61087d5ad0f15282e141be890d5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 94304,
      "upload_time": "2021-05-04T07:48:05",
      "upload_time_iso_8601": "2021-05-04T07:48:05.688839Z",
      "url": "https://files.pythonhosted.org/packages/9f/91/4f280a834684e788bbeb11fc1540a44a379fdeb0fd869a9f707dc06925c6/pyGDM2_retard-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}