{
  "info": {
    "author": "shencar",
    "author_email": "barak.shencar@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<h1 align=\"center\">\n  <br>\n  <img src=\"doc/logo.png\" alt=\"vcfio\" width=\"60%\">\n  <br>\n\n\n</h1>\n\n# üî≠ Overview\nvcfio is an **efficient** and **easy-to-use** package for [VCF](https://samtools.github.io/hts-specs/VCFv4.2.pdf) reading, writing and manipluation.<br>\nIt is designed for robust variant processing, and requires *minimum* computing resources.\n\n- ‚ö° Fast - iterate >4500 variants per second\n- ü™∂ Lightweight - automatically parses only **crucial information** about variants (CHROM, POS, ID, REF, ALT, QUAL, FILTER), all the other information (INFO and SAMPLES) is parsed on demand\n- üèÅ Efficient - No advanced parsing of lines and casting to hugh memory objects\n- üîå Dependency free - We do have optional dependencies which enhance the package\n\n# üéØ Why ? \nThe existing python VCF solutions were **extremely inefficient** - parsing every variant line in advance and casting \nevery bit of data into their own objects or a list of strings, which is very memory-consuming.\n\nThis affected our runtime by a huge factor.\n\n**We wrote vcfio to overcome those issues, making it a lightweight and dependency-free package.**\n\n\n# ‚öôÔ∏è Ô∏èInstallation\n```bash\n# Basic installation\npip install vcfio\n\n# Include optional dependencies\npip install vcfio[bio]\n```\n\n# ‚≠ê Features\n:heavy_check_mark: **Read and write** plain and compressed vcf (no specification needed) - `file.vcf`, `file.vcf.gz`, `file.vcf.bgz`.<br>\n:heavy_check_mark: **Automatically infer** the type of values in the file. For example `'1,2,3'` will yield `[1, 2, 3]`.<br>\n:heavy_check_mark: **Parse** values __*on demand*__ for maximum efficiency.<br>\n:heavy_check_mark: **Fetch** variant ranges within a chromosome.\n\n# ‚ùì How to Use\n### VcfReader\nHere are some examples of what you can do with VcfReader\n(We recommend you explore all the available methods)\n<details>\n    <summary>Click to view usage!</summary>\n    <img src=\"doc/vcfreader.gif\">\n    <img src=\"doc/vcfreaderfetch.gif\">\n</details>\n\n```python\nimport vcfio\n\nwith vcfio.VcfReader('/path/to/file.vcf') as reader:\n    # Iterate variants\n    for variant in reader:  # type: vcfio.Variant\n        print(variant.to_vcf_line())\n        \n        # Iterate the variant's samples\n        for sample_name, sample in variant.samples.items():  # type: AnyStr, EasyDict\n            # Try to find \"AD\" in sample, if not found - find in variant's info, if the value is a dot - return None\n            ad = variant.get_value('AD', sample_name, empty_value='.')        \n            zygosity = variant.get_zygosity(sample_name)\n\n    # Fetch variants within the range chr3:1-1000\n    for variant in reader.fetch('chr3', start=1, end=1000):  # type: vcfio.Variant\n        print(variant)\n```\n### VcfWriter\nHere is an example of what you can do with VcfWriter\n<details>\n    <summary>Click to view usage!</summary>\n    <img src=\"doc/vcfwriter.gif\">\n</details>\n\n```python\nimport vcfio\n\n# This will open an existing vcf, introduce a new value to each variant's INFO and write to another vcf.gz\nwith vcfio.VcfReader('/path/to/output_file.vcf.gz') as reader, \\\n        vcfio.VcfWriter('/path/to/output.vcf', headers=reader.headers) as writer:  \n    for variant in reader:  # type: vcfio.Variant\n        variant.info['new_info_field'] = 'new_info_value'\n        writer.write_variant(variant)\n```\n\n### Variant\nHere are some examples of what you can do with Variant\n(We recommend you to explore all the available methods)\n<details>\n    <summary>Click to view usage!</summary>\n    <img src=\"doc/variant.gif\">\n</details>\n\n```python\nimport vcfio\n\nvariant_line = \"chr1\t726\t.\tG\tC,T\t500\t.\tDP=200;MQ=250.00\tGT:AD:AF:DP:GQ\t0/1:10,160,30:0.8,0.15:200:420\"\n\n# This will parse the raw variant line into a Variant instance\nvariant = vcfio.Variant.from_variant_line(variant_line, sample_names=['proband'])\nprint(\n    variant.quality,                        # --> 726\n    variant.chromosome,                     # --> \"chr1\"\n    variant.alt,                            # --> [\"C\", \"T\"]\n    variant.get_zygosity('proband'),        # --> \"HET\"\n    variant.get_value('MQM', 'proband'),    # --> 250\n    variant.samples['proband'].get('GT')    # --> \"0/1\"\n)\n```\n\n### EasyDict\nA Dict-inherited class with a smart `get` method. It's main (and only) feature is to automatically infer the type of the value it returns.\nA vcf file rarely specifies the type of values within the variant's data so this object makes a bioinformaticaion's life easier and exempts him from casting-duty.\nIt is used in `vcfio.Variant`'s attributes.\n```python\nd = EasyDict({\n\t'simple_int': 1,\n\t'not_simple_int': '2',\n\t'this_is_not_a_list': ['abc'],\n\t'list_of_numbers': ['1', 2, '3.1'],\n\t'this_is_a_real_list': ['a', 'b', 'c'],\n\t'dot_is_not_a_value': '.',\n    'this_is_a_list': '1,2,3',\n    'this_is_a_list_but_i_like_strings': '1,2,3'\n}) \nd.get('simple_int')                                                 # --> 1\nd.get('not_simple_int', infer_type=True)                            # --> 2\nd.get('this_is_not_a_list', infer_type=True)                        # --> 'abc'\nd.get('list_of_numbers', infer_type=True)                           # --> [1, 2, 3.1]\nd.get('this_is_a_real_list', infer_type=True)                       # --> ['a', 'b', 'c']\nd.get('dot_is_not_a_value', empty_value='.', infer_type=True)       # --> None\nd.get('this_is_a_list', empty_value='.', infer_type=True)           # --> [1, 2, 3]\nd.get('this_is_a_list_but_i_like_strings', empty_value='.')         # --> '1,2,3' \n```\n\n# Credits\nThis package uses the following open source packages:\n- [PyVCF](https://github.com/jdoughertyii/PyVCF/)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/emedgene/vcfio",
    "keywords": "vcf,variant,genetics,bioinformatics,emedgene,illumina",
    "license": "MIT",
    "maintainer": "shencar",
    "maintainer_email": "barak.shencar@gmail.com",
    "name": "vcfio",
    "package_url": "https://pypi.org/project/vcfio/",
    "platform": null,
    "project_url": "https://pypi.org/project/vcfio/",
    "project_urls": {
      "Homepage": "https://github.com/emedgene/vcfio",
      "Repository": "https://github.com/emedgene/vcfio"
    },
    "release_url": "https://pypi.org/project/vcfio/1.0.0/",
    "requires_dist": [
      "biopython (>=1.79,<2.0); extra == \"bio\"",
      "pysam (>=0.18,<0.19); extra == \"bio\""
    ],
    "requires_python": ">=3.6,<4.0",
    "summary": "A simple and efficient VCF manipulation package.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13892357,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bece0ed6afd2f9b7f5dc1bedf871711623dbcfee0c4b242f3152d4b9a35b5b4b",
          "md5": "ced5942968cbcfe92b58e12f5b1a0077",
          "sha256": "e99c4f1cd60708eca05adecb720efa3c24ba355a1184e12e9d36acdbd6bef1b8"
        },
        "downloads": -1,
        "filename": "vcfio-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ced5942968cbcfe92b58e12f5b1a0077",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 14543,
        "upload_time": "2022-05-22T12:54:03",
        "upload_time_iso_8601": "2022-05-22T12:54:03.614251Z",
        "url": "https://files.pythonhosted.org/packages/be/ce/0ed6afd2f9b7f5dc1bedf871711623dbcfee0c4b242f3152d4b9a35b5b4b/vcfio-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06972d8b3537f5f097efedd46f01593915d1aeea825b46bcaa4457271befd6c5",
          "md5": "8a3a0811c14f61ad2125b25826dcfd64",
          "sha256": "38e0d9a181721477cab4a29b8c8c06b74960ccd6870d045d9f0d14b3cc17f56d"
        },
        "downloads": -1,
        "filename": "vcfio-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8a3a0811c14f61ad2125b25826dcfd64",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 13821,
        "upload_time": "2022-05-22T12:54:05",
        "upload_time_iso_8601": "2022-05-22T12:54:05.229405Z",
        "url": "https://files.pythonhosted.org/packages/06/97/2d8b3537f5f097efedd46f01593915d1aeea825b46bcaa4457271befd6c5/vcfio-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "277c74343758d9c1b268ffd5da05f317848a7a06636adf0625a5bbcbf7076fd5",
          "md5": "8394848a4df57aa51b68ad2cb3e81281",
          "sha256": "b297f024bb381d60e7d2ae167626f6ab1d0e370a0e835f39857734ed03a43239"
        },
        "downloads": -1,
        "filename": "vcfio-1.0.0.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8394848a4df57aa51b68ad2cb3e81281",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 14593,
        "upload_time": "2022-05-22T12:48:59",
        "upload_time_iso_8601": "2022-05-22T12:48:59.916393Z",
        "url": "https://files.pythonhosted.org/packages/27/7c/74343758d9c1b268ffd5da05f317848a7a06636adf0625a5bbcbf7076fd5/vcfio-1.0.0.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18cd99a207aaf1307c050fa6d12de22e7f4f2ec267c7c25e5eb27ef71a8abd6f",
          "md5": "8c3664f0e01c14cfe034aa05472185c3",
          "sha256": "61f701c948c74a0f953d889ce5ce013cdc12ce49cd78da4254956864102ddf91"
        },
        "downloads": -1,
        "filename": "vcfio-1.0.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "8c3664f0e01c14cfe034aa05472185c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 13836,
        "upload_time": "2022-05-22T12:49:01",
        "upload_time_iso_8601": "2022-05-22T12:49:01.817738Z",
        "url": "https://files.pythonhosted.org/packages/18/cd/99a207aaf1307c050fa6d12de22e7f4f2ec267c7c25e5eb27ef71a8abd6f/vcfio-1.0.0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bece0ed6afd2f9b7f5dc1bedf871711623dbcfee0c4b242f3152d4b9a35b5b4b",
        "md5": "ced5942968cbcfe92b58e12f5b1a0077",
        "sha256": "e99c4f1cd60708eca05adecb720efa3c24ba355a1184e12e9d36acdbd6bef1b8"
      },
      "downloads": -1,
      "filename": "vcfio-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ced5942968cbcfe92b58e12f5b1a0077",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4.0",
      "size": 14543,
      "upload_time": "2022-05-22T12:54:03",
      "upload_time_iso_8601": "2022-05-22T12:54:03.614251Z",
      "url": "https://files.pythonhosted.org/packages/be/ce/0ed6afd2f9b7f5dc1bedf871711623dbcfee0c4b242f3152d4b9a35b5b4b/vcfio-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "06972d8b3537f5f097efedd46f01593915d1aeea825b46bcaa4457271befd6c5",
        "md5": "8a3a0811c14f61ad2125b25826dcfd64",
        "sha256": "38e0d9a181721477cab4a29b8c8c06b74960ccd6870d045d9f0d14b3cc17f56d"
      },
      "downloads": -1,
      "filename": "vcfio-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8a3a0811c14f61ad2125b25826dcfd64",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4.0",
      "size": 13821,
      "upload_time": "2022-05-22T12:54:05",
      "upload_time_iso_8601": "2022-05-22T12:54:05.229405Z",
      "url": "https://files.pythonhosted.org/packages/06/97/2d8b3537f5f097efedd46f01593915d1aeea825b46bcaa4457271befd6c5/vcfio-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}