{
  "info": {
    "author": "uezo",
    "author_email": "uezo@uezo.net",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "# ChatdollKit Server SDK for Python\n\nSDK to create remote skill server for ChatdollKit. See also 👉 [ChatdollKit](https://github.com/uezo/ChatdollKit)\n\n[🇯🇵日本語のREADMEはこちら](https://github.com/uezo/chatdollkit-dialog-python/blob/master/README.ja.md)\n\n# Install\n\n```bash\n$ pip install chatdollkit\n```\n\nAlso install application framework you like. We support [Flask](https://flask.palletsprojects.com/) and [FastAPI](https://fastapi.tiangolo.com/).\n\n```bash\n$ pip install flask\n```\n\nOr\n\n```bash\n$ pip install fastapi uvicorn\n```\n\n\n# Quick start\n\n## Server side\n\nRun example API server that just echo what user says.\n\n```bash\n$ python run_flask.py\n```\n\nOr\n\n```bash\n$ uvicorn run_fastapi:app --port 12345 --reload\n```\n\n## Client side\n\nSee [ChatdollKit Documentation > Setup Skill client (ChatdollKit device)](https://github.com/uezo/ChatdollKit/blob/master/manual.md#setup-skill-client-chatdollkit-device) to use `Examples/SkillServer`.\n\nIf you want to run skill server on host other than localhost configure URLs on the inspector of `HttpSkillRouter` and `HttpPrompter`.\n\nAfter setting up both server and client, run your Chatdoll app and start conversation. Your 3D model will echo what you say.\n\n\n# Create your own Skill Server\n\nBasically Skill(s), Server application and Entrypoint are required to create your Skill Server as following chapters.\n\nFirst of all, make `allinone.py` and import required libraries.\n\n```python\nfrom flask import Flask\nfrom chatdollkit.app import SkillBase, AppBase\nfrom chatdollkit.models import (\n    Request, Response, State, IntentExtractionResult, Intent\n)\nfrom chatdollkit.controllers.flask_controller import bp as api_bp\n```\n\n## 1. Skill\n\nMake `EchoSkill` class that extends `SkillBase` and implement `process` methods to return response that includes a Text-to-Speech voice request.\n\n```python\nclass EchoSkill(SkillBase):\n    topic = \"echo\"\n\n    def process(self, request: Request, state: State) -> Response:\n        # Just echo\n        resp = Response(Id=request.Id)\n        resp.AddVoiceTTS(request.Text)\n        return resp\n```\n\n## 2. Server application\n\nMake `MyApp` that extends `AppBase` and implement `get_prompt` methods that requires voice input to user and `extract_intent` to route to `EchoSkill`.\n\n```python\nclass MyApp(AppBase):\n    # Register skill(s)\n    skills = [EchoSkill]\n\n    def get_prompt(self, request: Request, state: State) -> Response:\n        # Return prompt message\n        resp = Response(Id=\"_\" if request is None else request.Id)\n        resp.AddVoiceTTS(\"This prompt is from server. Please say something.\")\n        return resp\n\n    def extract_intent(self, request: Request, state: State) -> IntentExtractionResult:\n        # Always extract Echo intent\n        return IntentExtractionResult(Intent=Intent(Name=EchoSkill.topic))\n```\n\n## 3. Application entry point\n\nLastly, Add the instance of `MyApp` to Flask application and register API controller blueprint to app.\n\n```python\n# Create Flask app\napp = Flask(__name__)\n# Create ChatdollKit server app and set it to Flask application\napp.chatdoll_app = MyApp(app.logger, True)\n# Register API controller\napp.register_blueprint(api_bp)\n\nif __name__ == \"__main__\":\n    # Start API\n    app.run(port=\"12345\", debug=True)\n```\n\nSee the example if you want to create FastAPI-based skill server.\n\n\n# Use other application framework\n\nTo use application framework other than Flask and FastAPI, create controller that handles http request from ChatdollKit client by your self. You can reuse Skill, Server application and models. See `chatdollkit.controllers.flask_controller.py` or `fastapi_controller.py`.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/uezo/chatdollkit-server-python",
    "keywords": "",
    "license": "Apache v2",
    "maintainer": "uezo",
    "maintainer_email": "uezo@uezo.net",
    "name": "chatdollkit",
    "package_url": "https://pypi.org/project/chatdollkit/",
    "platform": "",
    "project_url": "https://pypi.org/project/chatdollkit/",
    "project_urls": {
      "Homepage": "https://github.com/uezo/chatdollkit-server-python"
    },
    "release_url": "https://pypi.org/project/chatdollkit/0.3.0/",
    "requires_dist": [
      "pydantic"
    ],
    "requires_python": "",
    "summary": "SDK to create remote skill server for ChatdollKit.",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10917185,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "448921fbdeffbb2a4ce61f934075671529ab80d3901b27592c7494e38e2721d8",
          "md5": "0dc31b5493e2560a6e28ae0795438ceb",
          "sha256": "23a53b52287dcbe0509a61c19ea39c46d4caf4ed65e8c82143182596346740c3"
        },
        "downloads": -1,
        "filename": "chatdollkit-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0dc31b5493e2560a6e28ae0795438ceb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12515,
        "upload_time": "2020-11-24T12:06:14",
        "upload_time_iso_8601": "2020-11-24T12:06:14.334091Z",
        "url": "https://files.pythonhosted.org/packages/44/89/21fbdeffbb2a4ce61f934075671529ab80d3901b27592c7494e38e2721d8/chatdollkit-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a44816e16f544179ce0ac66c6f620a041dc391874b0eb3924c95c3eacdff6132",
          "md5": "3fa170aacb74af27662b2600f19d84db",
          "sha256": "bc3c036d0e7b3d63b072924b930555b6914986f5cd1b9338ad330a6575314a63"
        },
        "downloads": -1,
        "filename": "chatdollkit-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3fa170aacb74af27662b2600f19d84db",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12506,
        "upload_time": "2020-11-24T12:08:17",
        "upload_time_iso_8601": "2020-11-24T12:08:17.538735Z",
        "url": "https://files.pythonhosted.org/packages/a4/48/16e16f544179ce0ac66c6f620a041dc391874b0eb3924c95c3eacdff6132/chatdollkit-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37a60be28ded9353f3707d9e47447a22513df587549ce6ded2e110a10458b55d",
          "md5": "93cb58e07fa86f8da50bf7c7fb7055a6",
          "sha256": "6ba6f75ccc240d08cd7c42f96a0bc16d79dbbdabf58fce5d2bd140a5f3fd1198"
        },
        "downloads": -1,
        "filename": "chatdollkit-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93cb58e07fa86f8da50bf7c7fb7055a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12549,
        "upload_time": "2020-12-05T13:27:31",
        "upload_time_iso_8601": "2020-12-05T13:27:31.645099Z",
        "url": "https://files.pythonhosted.org/packages/37/a6/0be28ded9353f3707d9e47447a22513df587549ce6ded2e110a10458b55d/chatdollkit-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f13229601a7d979e8efd8ef0ea1f1f4f1d638b0783e08159ec9a262e52fd04d1",
          "md5": "eb985a6f346227f3680fcdae457d3bec",
          "sha256": "5d45c168b0ab2312efd98430f5f0eeef9395535eb07a761f894a770f12869133"
        },
        "downloads": -1,
        "filename": "chatdollkit-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb985a6f346227f3680fcdae457d3bec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12335,
        "upload_time": "2021-07-15T11:41:51",
        "upload_time_iso_8601": "2021-07-15T11:41:51.382379Z",
        "url": "https://files.pythonhosted.org/packages/f1/32/29601a7d979e8efd8ef0ea1f1f4f1d638b0783e08159ec9a262e52fd04d1/chatdollkit-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f13229601a7d979e8efd8ef0ea1f1f4f1d638b0783e08159ec9a262e52fd04d1",
        "md5": "eb985a6f346227f3680fcdae457d3bec",
        "sha256": "5d45c168b0ab2312efd98430f5f0eeef9395535eb07a761f894a770f12869133"
      },
      "downloads": -1,
      "filename": "chatdollkit-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "eb985a6f346227f3680fcdae457d3bec",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12335,
      "upload_time": "2021-07-15T11:41:51",
      "upload_time_iso_8601": "2021-07-15T11:41:51.382379Z",
      "url": "https://files.pythonhosted.org/packages/f1/32/29601a7d979e8efd8ef0ea1f1f4f1d638b0783e08159ec9a262e52fd04d1/chatdollkit-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}