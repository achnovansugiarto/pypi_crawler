{
  "info": {
    "author": "Vladimir Roncevic",
    "author_email": "elektron.ronca@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)",
      "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.1",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<img align=\"right\" src=\"https://raw.githubusercontent.com/vroncevic/armpicom/dev/docs/armpicom_logo.png\" width=\"25%\">\n\n# Generate RPI project configuration/build setup\n\n☯️ **armpicom** is toolset for generation of RPI project configuration/build setup.\n\nDeveloped in 🐍 **[python](https://www.python.org/)** code.\n\n[![codecov](https://codecov.io/gh/vroncevic/armpicom/branch/dev/graph/badge.svg?token=4VZJXM0YBA)](https://codecov.io/gh/vroncevic/armpicom)\n[![circleci](https://circleci.com/gh/vroncevic/armpicom/tree/main.svg?style=svg)](https://circleci.com/gh/vroncevic/armpicom/tree/main)\n\nThe README is used to introduce the modules and provide instructions on\nhow to install the modules, any machine dependencies it may have and any\nother information that should be provided before the modules are installed.\n\n[![armpicom python checker](https://img.shields.io/github/workflow/status/vroncevic/armpicom/armpicom_python_checker?style=flat&label=armpicom%20python%20checker)](https://github.com/vroncevic/armpicom/actions/workflows/armpicom_python_checker.yml) [![armpicom package checker](https://img.shields.io/github/workflow/status/vroncevic/armpicom/armpicom_package_checker?style=flat&label=armpicom%20package%20checker)](https://github.com/vroncevic/armpicom/actions/workflows/armpicom_package_checker.yml) [![GitHub issues open](https://img.shields.io/github/issues/vroncevic/armpicom.svg)](https://github.com/vroncevic/armpicom/issues) [![GitHub contributors](https://img.shields.io/github/contributors/vroncevic/armpicom.svg)](https://github.com/vroncevic/armpicom/graphs/contributors)\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n**Table of Contents**\n\n- [Installation](#installation)\n    - [Install using pip](#install-using-pip)\n    - [Install using build](#install-using-build)\n    - [Install using py setup](#install-using-py-setup)\n    - [Install using docker](#install-using-docker)\n- [Dependencies](#dependencies)\n- [Generation flow of pyp setup](#generation-flow-of-pyp-setup)\n- [Tool structure](#tool-structure)\n- [Docs](#docs)\n- [Contributing](#contributing)\n- [Copyright and licence](#copyright-and-licence)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n### Installation\n\nUsed next development environment\n\n![Development environment](https://raw.githubusercontent.com/vroncevic/armpicom/dev/docs/debtux.png)\n\n[![armpicom python2 build](https://img.shields.io/github/workflow/status/vroncevic/armpicom/armpicom_python2_build?style=flat&label=armpicom%20python2%20build)](https://github.com/vroncevic/armpicom/actions/workflows/armpicom_python2_build.yml) [![armpicom python3 build](https://img.shields.io/github/workflow/status/vroncevic/armpicom/armpicom_python3_build?style=flat&label=armpicom%20python3%20build)](https://github.com/vroncevic/armpicom/actions/workflows/armpicom_python3_build.yml)\n\nCurrently there are three ways to install package\n* Install process based on using pip mechanism\n* Install process based on build mechanism\n* Install process based on setup.py mechanism\n* Install process based on docker mechanism\n\n##### Install using pip\n\nPython 📦 is located at **[pypi.org](https://pypi.org/project/armpicom/)**.\n\nYou can install by using pip\n\n```bash\n# python2\npip2 install armpicom\n# python3\npip3 install armpicom\n```\n\n##### Install using build\n\nNavigate to release **[page](https://github.com/vroncevic/armpicom/releases/)** download and extract release archive 📦.\n\nTo install **armpicom** 📦 type the following\n\n```bash\ntar xvzf armpicom-x.y.z.tar.gz\ncd armpicom-x.y.z/\n# python2\nwget https://bootstrap.pypa.io/pip/2.7/get-pip.py\npython2 get-pip.py \npython2 -m pip install --upgrade setuptools\npython2 -m pip install --upgrade pip\npython2 -m pip install --upgrade build\npip2 install -r requirements.txt\npython2 -m build --no-isolation --wheel\npip2 install ./dist/armpicom-*-py2-none-any.whl\nrm -f get-pip.py\nchmod 755 /usr/local/lib/python2.7/dist-packages/usr/local/bin/armpicom_run.py\nln -s /usr/local/lib/python2.7/dist-packages/usr/local/bin/armpicom_run.py /usr/local/bin/armpicom_run.py\n# python3\nwget https://bootstrap.pypa.io/get-pip.py\npython3 get-pip.py \npython3 -m pip install --upgrade setuptools\npython3 -m pip install --upgrade pip\npython3 -m pip install --upgrade build\npip3 install -r requirements.txt\npython3 -m build --no-isolation --wheel\npip3 install ./dist/armpicom-*-py3-none-any.whl\nrm -f get-pip.py\nchmod 755 /usr/local/lib/python3.9/dist-packages/usr/local/bin/armpicom_run.py\nln -s /usr/local/lib/python3.9/dist-packages/usr/local/bin/armpicom_run.py /usr/local/bin/armpicom_run.py\n```\n\n##### Install using py setup\n\nNavigate to **[release page](https://github.com/vroncevic/armpicom/releases)** download and extract release archive 📦.\n\nTo install **armpicom** 📦 locate and run setup.py with arguments\n\n```bash\ntar xvzf armpicom-x.y.z.tar.gz\ncd armpicom-x.y.z\n# python2\npip2 install -r requirements.txt\npython2 setup.py install_lib\npython2 setup.py install_egg_info\n# python3\npip3 install -r requirements.txt\npython3 setup.py install_lib\npython3 setup.py install_egg_info\n```\n\n##### Install using docker\n\nYou can use Dockerfile to create image/container 🚢.\n\n[![armpicom docker checker](https://img.shields.io/github/workflow/status/vroncevic/armpicom/armpicom_docker_checker?style=flat&label=armpicom%20docker%20checker)](https://github.com/vroncevic/armpicom/actions/workflows/armpicom_docker_checker.yml)\n\n### Dependencies\n\n**armpicom** requires next modules and libraries\n\n* [ats-utilities - Python App/Tool/Script Utilities](https://pypi.org/project/ats-utilities/)\n\n### Generation flow of pyp setup\n\nBase flow of generation process\n\n![Setup generation flow](https://raw.githubusercontent.com/vroncevic/armpicom/dev/docs/python_setup_flow.png)\n\n### Tool structure\n\n**armpicom** is based on OOP.\n\n🧰 Tool structure\n\n```bash\narmpicom/\n├── conf/\n│   ├── armpicom.cfg\n│   ├── armpicom.logo\n│   ├── armpicom_util.cfg\n│   ├── project.yaml\n│   └── template/\n│       ├── build/\n│       │   └── armpicom.md\n│       ├── CMakeLists.template\n│       ├── pico_sdk_import.template\n│       ├── pro_auto_set_url.template\n│       └── src/\n│           ├── CMakeLists.template\n│           └── main.template\n├── __init__.py\n├── log/\n│   └── armpicom.log\n├── pro/\n│   ├── config/\n│   │   ├── __init__.py\n│   │   ├── pro_name.py\n│   │   └── template_dir.py\n│   ├── __init__.py\n│   ├── read_template.py\n│   └── write_template.py\n└── run/\n    └── armpicom_run.py\n\n8 directories, 19 files\n```\n\n### Docs\n\n[![Documentation Status](https://readthedocs.org/projects/armpicom/badge/?version=latest)](https://armpicom.readthedocs.io/en/latest/?badge=latest)\n\n📗 More documentation and info at\n\n* [armpicom.readthedocs.io](https://armpicom.readthedocs.io/en/latest/)\n* [www.python.org](https://www.python.org/)\n\n### Contributing\n\n🌎 🌍 🌏 [Contributing to armpicom](CONTRIBUTING.md)\n\n### Copyright and licence\n\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0) [![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n\nCopyright (C) 2021 by [vroncevic.github.io/armpicom](https://vroncevic.github.io/armpicom)\n\n**armpicom** is free software; you can redistribute it and/or modify\nit under the same terms as Python itself, either Python version 2.x/3.x or,\nat your option, any later version of Python 3 you may have available.\n\nLets help and support PSF.\n\n[![Python Software Foundation](https://raw.githubusercontent.com/vroncevic/armpicom/dev/docs/psf-logo-alpha.png)](https://www.python.org/psf/)\n\n[![Donate](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif)](https://psfmember.org/index.php?q=civicrm/contribute/transact&reset=1&id=2)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://vroncevic.github.io/armpicom",
    "keywords": "setup,python,install,RPI Pico,CMake,generator",
    "license": "GPL 2021 Free software to use and distributed it.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "armpicom",
    "package_url": "https://pypi.org/project/armpicom/",
    "platform": "any",
    "project_url": "https://pypi.org/project/armpicom/",
    "project_urls": {
      "Homepage": "https://vroncevic.github.io/armpicom"
    },
    "release_url": "https://pypi.org/project/armpicom/1.5.3/",
    "requires_dist": [
      "ats-utilities"
    ],
    "requires_python": ">=2.7",
    "summary": "Python package for generation of RPI configuration/build",
    "version": "1.5.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13632976,
  "releases": {
    "1.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a74e338facde101227c341883e36d29dfb93bb60bea37e9745d96f93e98ccd2",
          "md5": "9710be8ed9ba76b324cd69215c537c27",
          "sha256": "6c3f8b61b0470d835639c6912d62b8f551d4a3e02faad07f754e7b981b2a59c2"
        },
        "downloads": -1,
        "filename": "armpicom-1.5.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "9710be8ed9ba76b324cd69215c537c27",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=2.7",
        "size": 36005,
        "upload_time": "2022-04-26T23:16:21",
        "upload_time_iso_8601": "2022-04-26T23:16:21.551324Z",
        "url": "https://files.pythonhosted.org/packages/8a/74/e338facde101227c341883e36d29dfb93bb60bea37e9745d96f93e98ccd2/armpicom-1.5.3-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "963a9868610eb492567b90ab9b7da0a50f84edc11b6a430fab2575f49f830077",
          "md5": "aa7f98c4b87ff39517d02c1f0c29c91e",
          "sha256": "39255ef30b32979f68ba040b4b5feeddcb974994b05ef9814cda29ec1724628a"
        },
        "downloads": -1,
        "filename": "armpicom-1.5.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa7f98c4b87ff39517d02c1f0c29c91e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 36003,
        "upload_time": "2022-04-26T23:16:23",
        "upload_time_iso_8601": "2022-04-26T23:16:23.928687Z",
        "url": "https://files.pythonhosted.org/packages/96/3a/9868610eb492567b90ab9b7da0a50f84edc11b6a430fab2575f49f830077/armpicom-1.5.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a74e338facde101227c341883e36d29dfb93bb60bea37e9745d96f93e98ccd2",
        "md5": "9710be8ed9ba76b324cd69215c537c27",
        "sha256": "6c3f8b61b0470d835639c6912d62b8f551d4a3e02faad07f754e7b981b2a59c2"
      },
      "downloads": -1,
      "filename": "armpicom-1.5.3-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "9710be8ed9ba76b324cd69215c537c27",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": ">=2.7",
      "size": 36005,
      "upload_time": "2022-04-26T23:16:21",
      "upload_time_iso_8601": "2022-04-26T23:16:21.551324Z",
      "url": "https://files.pythonhosted.org/packages/8a/74/e338facde101227c341883e36d29dfb93bb60bea37e9745d96f93e98ccd2/armpicom-1.5.3-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "963a9868610eb492567b90ab9b7da0a50f84edc11b6a430fab2575f49f830077",
        "md5": "aa7f98c4b87ff39517d02c1f0c29c91e",
        "sha256": "39255ef30b32979f68ba040b4b5feeddcb974994b05ef9814cda29ec1724628a"
      },
      "downloads": -1,
      "filename": "armpicom-1.5.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aa7f98c4b87ff39517d02c1f0c29c91e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.7",
      "size": 36003,
      "upload_time": "2022-04-26T23:16:23",
      "upload_time_iso_8601": "2022-04-26T23:16:23.928687Z",
      "url": "https://files.pythonhosted.org/packages/96/3a/9868610eb492567b90ab9b7da0a50f84edc11b6a430fab2575f49f830077/armpicom-1.5.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}