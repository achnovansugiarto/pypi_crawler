{
  "info": {
    "author": "ivanl.exe",
    "author_email": "ivan.exe@pm.me",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<h1>Glyth Graph</h1>\n\n<p style=\"text-align:right\">Revision for 0.01</p>\n\n<b><h3 style=\"text-align:center\">A simple, yet versatile, package for graphing equations on a 2-dimensional text canvas</h3></b>\n\n### List of contents:\n1. Brief Introduction\n2. Process Overview\n3. Technical Overview\n4. Function Glossary\n5. Code Example\n6. Legal (MIT license)\n\n<b><h2 style=\"text-align:center\">Brief Introduction</h3></b>\n\n---\n\n<p>Glyth Graph is an open-source python package, for graphing equations onto a 2-dimensional array (named the <i>canvas</i>) with a variety of arguments to draw within a specific range and bound. Scaling to the width and height of the <i>canvas</i> in proportion</p>.\n\n<b><h2 style=\"text-align:center\">Process Overview</h3></b>\n\n---\n\n### glyth_graph_basic():\n<p>Upon attaching the constructor to an object a 2D array with the declared <i>resolution</i> size will be filled with the chosen <i>blank_glyth</i>, named the <i>canvas</i>.</p>\n\n### draw_graph():\n1. Check whether the given <i>char_x</i> (x-axis position of the canvas) is within the bounds of the canvas <i>width</i> as stated in the <i>resolution</i>.\n2. If not formatted the equation will be simplified into an expression without 'y', '=' and any spaces.\n3. If not given the y-axis bounds for the equation within the x-axis range will be calculated by repetedly incrementing the x variable.\n4. Then an <i>x</i> variable will be calculated by mapping the <i>char_x</i> from the width to the x-axis range of the equation, equally distributing each increment of <i>char_x</i> in the x-axis.\n5. The <i>x</i> variable will be substitued into the equation to form a y-axis value, which will be mapped from the y-axis bounds of the equation to the canvas <i>height</i>.\n6. Finally, the 2D coordinate of the <i>char_x</i> and <i>char_y</i> value on the canvas will be replaced by the chosen glyth.\n\n<b><h2 style=\"text-align:center\">Technical Overview</h3></b>\n\n---\n\nThe package operates on mapping values between the x and f(x) from the graph equation to the given resolution of the canvas, translating coordinates with a non-uniform scaling factor to draw a glyth by a 2D index.\n\n## <br> Notation form of the equation for mapping char<sub>x</sub> to <i>x</i>\n<br><img src=\"https://user-images.githubusercontent.com/85190509/147881201-c6d5ead3-66e4-401a-aebb-dd3667a28003.png\" alt=\"x-axis Value Equation\">\n\n<br>where range<sub>from</sub> and range<sub>to</sub> are respectively the given x-axis region of the equation to draw.\n\n---\n\n## <br>Notation form of the equation for mapping <i>f(x)</i>, equal to <i>y</i>, to <i>char<sub>y</sub></i>\n<br><img src=\"https://user-images.githubusercontent.com/85190509/147881319-6d72f223-21fe-44b0-a281-91cf6a05e150.png\" alt=\"y-axis Canvas Index Equation\">\n\n<br>where max and min are respectively the calculated (or given) maximum and minimum y-axis values for the equation within the x-axis region.\n\n<b><h2 style=\"text-align:center\">Function Glossary</h3></b>\n\n---\n\n### graph_basic(resolution: str, blank_glyth: str = None) -> None\n    The constructor of the class to create an attached object, setup the canvas array with the arguements given, both the size and blank (background) glyth\n\n     - resolution: the width by the height of the canvas measured in character glyths | 'x'.join([width, height])\n     - blank_glyth: the background glyth used for spacing the graph\n\n### format_equation(equation: str) -> str\n    Format the graph equation such that all unecessary characters are removed to be processed, this includes removal of 'y' and '=' if given an equation to form an expression and all ' ' (spaces) present\n\n    - equation: the mathematical equation of the graph going to be drawn\n\n### y_bounds(self, equation: str, x_range: tuple) -> tuple\n    Calculate the upper and lower bounds in the y-axis of a graph equation between the given x-axis range, to be used later for mapping positions\n\n    - equation: the mathematical equation of the graph going to be drawn\n    - x_range: a tuple of the x-axis range between which the graph will be used, all outside this is unnecessary\n\n### draw_graph(char_x: int, equation: str, glyth: str, x_range: tuple, y_bounds: tuple = None) -> list:\n    Draw a glyth onto the canvas array dependent on given arguments in relation to the graph equation, including the x-axis range and y-axis bounds of the 2-dimensional section of the graph and character position along the canvas\n\n    - char_x: the x_axis glyth position of the canvas, such that it starts to the leftmost position (0) to the rightmost (canvas width - 1) | 0 <= char_x < canvas width\n    - equation: the mathematical equation of the graph going to be drawn\n    - glyth: the character/s to be drawn onto the canvas at the calculated coordinate relative to the graph equation\n    - x_range: a tuple of the x-axis range between which the graph will be used, all outside this is unnecessary | (range_from, range_to)\n    - y_bounds: a tuple of the y-axis bounds for the x-axis region of the graph, including both the minimum and maximum values | (min, max)\n\n### clear_canvas() -> None:\n    Clear the canvas by replacing all indicies in the array with the blank glyth assigned in the constructor, removing any graphs drawn\n\n### print_canvas(clear: bool = None) -> None:\n    Pretty print the canvas array into equal rows of the set width with newline character moving to the next row, as each index is printed incrementally\n\n    - clear: a boolean value (either True or False) whether to clear the each canvas array index after printing the index | True or False\n\n\n\n<b><h2 style=\"text-align:center\">Code Example</h3></b>\n\n---\n\n### A simple code example showing the usage of all functions in the package, with the user inputting variables to produce the wanted graph/s onto the canvas array as random Base64 character glyths: <br><br>\n\n```python\nfrom glyth_graph import graph_basic\nfrom random import choice\n\ncharacter_set = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+/'\n\nprint('---Glyth Graph---')\n\nprint('\\n---Resolution---')\nwidth = int(input('Width (chars): '))\nheight = int(input('Height (chars): '))\n\nglyth_graph = graph_basic(\n    resolution = 'x'.join([str(width), str(height)]),\n    blank_glyth = '  '\n)\n\nwhile True:\n    print('\\n---Graph Properties---')\n    equation = glyth_graph.format_equation(input('Equation: '))\n    range_from, range_to = int(input('x-axis From: ')), int(input('x-axis To: '))\n    print()\n\n    bounds = glyth_graph.y_bounds(\n        equation = equation,\n        x_range = (range_from, range_to)\n    )\n\n    for char_x in range(0, width):\n        glyth_graph.draw_graph(\n            char_x = char_x,\n            equation = equation,\n            glyth = choice(character_set),\n            x_range = (range_from, range_to),\n            y_bounds = bounds\n        )\n\n    glyth_graph.print_canvas()\n```\n\n<br>An example of an output to the program, which can vary with custom values for all given inputs, pretty printing the canvas array:<br><br>\n\n```\n---Glyth Graph---\n\n---Resolution---\nWidth (chars): 100\nHeight (chars): 30\n\nWidth: 100 | Height: 30\n\n---Graph Properties---\nEquation: y = math.sin(x)\nx-axis From: 0\nx-axis To: 6.283185\n\n                     LbvwLB+K\n                  Rp8        49D\n                MB              FgW\n              Kt                   O\n            i6                      +w\n           t                          f\n          z                            LZ\n        k7                               q\n       9                                  q\n      Y                                    G\n     3                                      yP\n    r                                         c\n   9                                           h\n  C                                             4\n f                                               K\nl                                                 M                                               oe\n                                                   o                                             7\n                                                    y                                           n\n                                                     O                                         e\n                                                      tf                                      0\n                                                        M                                    u\n                                                         r                                  O\n                                                          I                               lv\n                                                           o8                            w\n                                                             L                          A\n                                                              Q2                      uO\n                                                                w                   LD\n                                                                 zvu              8x\n                                                                    nGl        xMw\n                                                                       XsohPTDx\n\n\n```\n\n<b><h2 style=\"text-align:center\">License (MIT)</h3></b>\n\n---\n<br>\n\n|Permissions|Conditions|Limitations|\n|---|---|---|\n|Commercial use|License and copyright notice|Liability|\n|Distribution||Warranty|\n|Modification|||\n|Private use|||\n\n```\nMIT License\n\nCopyright (c) 2021 Ivan (GitHub: ivanl-exe, E-Mail: ivan.exe@pm.me)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ivanl-exe/glyph-graph",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "glyth-graph",
    "package_url": "https://pypi.org/project/glyth-graph/",
    "platform": "",
    "project_url": "https://pypi.org/project/glyth-graph/",
    "project_urls": {
      "Bug Tracker": "https://github.com/ivanl-exe/glyph-graph/issues",
      "Homepage": "https://github.com/ivanl-exe/glyph-graph"
    },
    "release_url": "https://pypi.org/project/glyth-graph/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A simple, yet versatile, package for graphing equations on a 2-dimensional text canvas",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12465696,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a15dabbf723d74f670c29fe3e0db8288da4e3cc38a735b10a65d096aea82932",
          "md5": "e216d81c5077e95fe1eda63dca805672",
          "sha256": "9ef574263843c9156d77f8f552c8e3ca0a87032ba20c7f5f10aff8f57e8e3435"
        },
        "downloads": -1,
        "filename": "glyth_graph-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e216d81c5077e95fe1eda63dca805672",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7842,
        "upload_time": "2022-01-03T16:59:53",
        "upload_time_iso_8601": "2022-01-03T16:59:53.672613Z",
        "url": "https://files.pythonhosted.org/packages/3a/15/dabbf723d74f670c29fe3e0db8288da4e3cc38a735b10a65d096aea82932/glyth_graph-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1612fe2617b9a6cc3bb552b9443697a90abdefe430a391e10178ceb3746d4cc",
          "md5": "6f4228a23d2a90984cff4c4188dbe454",
          "sha256": "a0a1089d916494261a610f8b58ff4d573b5b12d8ea427930d61cd3eaf9dcb2c7"
        },
        "downloads": -1,
        "filename": "glyth-graph-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6f4228a23d2a90984cff4c4188dbe454",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6453,
        "upload_time": "2022-01-03T16:59:55",
        "upload_time_iso_8601": "2022-01-03T16:59:55.714902Z",
        "url": "https://files.pythonhosted.org/packages/f1/61/2fe2617b9a6cc3bb552b9443697a90abdefe430a391e10178ceb3746d4cc/glyth-graph-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a15dabbf723d74f670c29fe3e0db8288da4e3cc38a735b10a65d096aea82932",
        "md5": "e216d81c5077e95fe1eda63dca805672",
        "sha256": "9ef574263843c9156d77f8f552c8e3ca0a87032ba20c7f5f10aff8f57e8e3435"
      },
      "downloads": -1,
      "filename": "glyth_graph-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e216d81c5077e95fe1eda63dca805672",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7842,
      "upload_time": "2022-01-03T16:59:53",
      "upload_time_iso_8601": "2022-01-03T16:59:53.672613Z",
      "url": "https://files.pythonhosted.org/packages/3a/15/dabbf723d74f670c29fe3e0db8288da4e3cc38a735b10a65d096aea82932/glyth_graph-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f1612fe2617b9a6cc3bb552b9443697a90abdefe430a391e10178ceb3746d4cc",
        "md5": "6f4228a23d2a90984cff4c4188dbe454",
        "sha256": "a0a1089d916494261a610f8b58ff4d573b5b12d8ea427930d61cd3eaf9dcb2c7"
      },
      "downloads": -1,
      "filename": "glyth-graph-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6f4228a23d2a90984cff4c4188dbe454",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6453,
      "upload_time": "2022-01-03T16:59:55",
      "upload_time_iso_8601": "2022-01-03T16:59:55.714902Z",
      "url": "https://files.pythonhosted.org/packages/f1/61/2fe2617b9a6cc3bb552b9443697a90abdefe430a391e10178ceb3746d4cc/glyth-graph-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}