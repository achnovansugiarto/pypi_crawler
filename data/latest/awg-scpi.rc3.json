{
  "info": {
    "author": "Stephen Goadhouse",
    "author_email": "sgoadhouse@virginia.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Physics",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# awg-scpi\n\n# Description\n\nControl of Arbitrary Waveform Generators (AWG) with SCPI Command Sets through python via PyVisa\n\nThis uses the brilliant PyVISA python package along with the PyVisa-PY\naccess mode which eliminates the need for the (very buggy, in my\nexperience) VISA library to be installed on your computer. However,\nPyVISA-PY does require `libusb` which is needed for FTDI control and\nother things.\n\nThe intent is to support as many AWGs as is\npossible. However, I only have access to one \nso that is what has been coded and tested. If you are interested in\nadding support for some other SCPI AWG,\nthen contact me for details in how to add those. \n\n# Installation\n\nThe bible for installing Python packages is:\nhttps://packaging.python.org/en/latest/tutorials/installing-packages/\nUltimately, consult that page for how to install this package. If you\nprefer to try commands that worked when this package was written, go\nahead and give the following a try.\n\nTo install the awg-scpi package, clone this GIT repository and then\nrun the following command in the top level folder:\n\n```\npython -m pip install .\n```\n\nAlternatively, can add a path to this package to the environment\nvariable PYTHONPATH or even add the path to it at the start of your\npython script. Use your favorite web search engine to find out more\ndetails. If you follow this route, you will need to also install all\nof the dependant packages which are shown below under Requirements.\n\nEven better, awg-scpi is on PyPi. So you can simply use the\nfollowing and the required dependancies should get installed for you:\n\n```\npip install awg_scpi\n```\n\n## Requirements\n* [argparse](https://docs.python.org/3/library/argparse.html) \n* [python](http://www.python.org/)\n   * pyvisa no longer supports python 2.7+ so neither does this package\n* [pyvisa 1.11.3](https://pyvisa.readthedocs.io/en/stable/)\n* [pyvisa-py 0.5.2](https://pyvisa-py.readthedocs.io/en/latest/) \n* [quantiphy 2.3.0](http://quantiphy.readthedocs.io/en/stable/) \n\nWith the use of pyvisa-py, you should not have to install the National\nInstruments VISA driver.\n\n## Features\n\nThis code is not an exhaustive coverage of all available commands and\nqueries of AWGs. The features that do exist are mainly\nones that improve productivity like saving and loading configuration. \n\nCurrently, this is a list of the features that are supported so far:\n\n* _needs to be updated_\n\nIt is expected that new interfaces will be added over time to control\nand automate the AWG. The key features that would be good to\nadd next are: ....\n\n## Channels\n\nAlmost all functions require a target channel. Once a\nchannel is passed into a function, the object will remember it and\nmake it the default for all subsequence function calls that do not\nsupply a channel. The channel value is a string or can also be a list\nof strings, in the case of setupAutoscale(). Currently, the valid\nchannel values are:\n\n* '1' for analog channel 1\n* '2' for analog channel 2\n\n## Usage and Examples\nThe code is a basic class for controlling and accessing the\nsupported AWGs.\n\nThe examples are written to access the AWG over\nethernet/TCPIP. So the examples need to know the IP address of your\nspecific AWG. Also, PyVISA can support other access\nmechanisms, like USB. So the examples must be edited to use the\nresource string or VISA descriptor of your particular\ndevice. Alternatively, you can set an environment variable, AWG\\_IP\nto the desired VISA resource string before running the code. If not using\nethernet to access your device, search online for the proper resource\nstring needed to access your device.\n\nFor more detailed examples, see:\n\n```\nawg.py -h\n```\n\nA basic example that sets up a basic wave and enables the output.\n\n```python\nfrom awg_scpi import AWG\n\nfrom time import sleep    \nimport argparse\nparser = argparse.ArgumentParser(description='Access and control an AWG')\nparser.add_argument('chan', nargs='?', type=int, help='Channel to access/control (starts at 1)', default=1)\nargs = parser.parse_args()\n\nfrom os import environ\nresource = environ.get('AWG_IP', 'TCPIP0::172.16.2.13::INSTR')\ninstr = AWG(resource)\n\n## Upgrade Object to best match based on IDN string\ninstr = instr.getBestClass()\n\n## Open this object and work with it\ninstr.open()\n\nprint('Using SCPI Device:     ' + instr.idn() + ' of series: ' + instr.series + '\\n')\n\n# set the channel (can pass channel to each method or just set it\n# once and it becomes the default for all following calls)\ninstr.channel = str(args.chan)\n\nif instr.isOutputHiZ(instr.channel):\n    print(\"Output High Impedance\")\nelse:\n    print(\"Output 50 ohm load\")\n\ninstr.beeperOn()\n\n# return to default parameters\ninstr.reset()               \n\ninstr.setWaveType('SINE')\ninstr.setFrequency(34.4590897823e3)\ninstr.setVoltageProtection(6.6)\ninstr.setAmplitude(3.2)\ninstr.setOffset(1.6)\ninstr.setPhase(0.45)\n\nprint(\"Voltage Protection is set to maximum: {}V Amplitude (assumes 0V offset)\".format(instr.queryVoltageProtection()))\n\n# turn on the channel\ninstr.outputOn()\n\n# return to LOCAL mode\ninstr.setLocal()\n\ninstr.close()\n```\n\n## Taking it Further\nThis implements a small subset of available commands.\n\nFor information on what is possible for the Siglent SDG6022X and other SDG series arbitrary waveform generators, see the\n[SDG Series Arbitrary Waveform Generator](https://siglentna.com//wp-content/uploads/dlm_uploads/2019/12/SDG_Programming-Guide_PG02-E04A.pdf)\n\nFor what is possible with general instruments that adhere to the\nIEEE 488 SCPI specification, see the\n[SCPI 1999 Specification](http://www.ivifoundation.org/docs/scpi-99.pdf)\nand the\n[SCPI Wikipedia](https://en.wikipedia.org/wiki/Standard_Commands_for_Programmable_Instruments) entry.\n\n## Contact\nPlease send bug reports or feedback to Stephen Goadhouse\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sgoadhouse/awg_scpi",
    "keywords": "Siglent,SDG6022X,PyVISA,VISA,SCPI,INSTRUMENT",
    "license": "MIT",
    "maintainer": "Stephen Goadhouse",
    "maintainer_email": "sgoadhouse@virginia.edu",
    "name": "awg-scpi",
    "package_url": "https://pypi.org/project/awg-scpi/",
    "platform": null,
    "project_url": "https://pypi.org/project/awg-scpi/",
    "project_urls": {
      "Homepage": "https://github.com/sgoadhouse/awg_scpi"
    },
    "release_url": "https://pypi.org/project/awg-scpi/0.2.2/",
    "requires_dist": [
      "pyvisa (>=1.11.3)",
      "pyvisa-py (>=0.5.2)",
      "argparse",
      "QuantiPhy (>=2.3.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Control of Arbitrary Waveform Generators (AWG) with SCPI command sets like Siglent SDG6022X through python via PyVisa",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14508503,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4994c67e18520e11ea7b50165c55d65c858f03f768d0fa34c477989435963e6",
          "md5": "95b012150aff2d110d15dd71ad4a79dd",
          "sha256": "41904755c1ecdb67424232c721e46b10f838ffef70c6de8888f800cee3c1a951"
        },
        "downloads": -1,
        "filename": "awg_scpi-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "95b012150aff2d110d15dd71ad4a79dd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 27770,
        "upload_time": "2022-07-14T18:42:21",
        "upload_time_iso_8601": "2022-07-14T18:42:21.699833Z",
        "url": "https://files.pythonhosted.org/packages/a4/99/4c67e18520e11ea7b50165c55d65c858f03f768d0fa34c477989435963e6/awg_scpi-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70426e8f1f23baede135ecae54560ffa110be90ddad03e53637f02d4b2669975",
          "md5": "b6830173e952d3d2501fd0c4152a79cf",
          "sha256": "c5b4eee00c6e77b1d783f7267d7906be0608c11afb410ac07bbc6d468d7ab586"
        },
        "downloads": -1,
        "filename": "awg_scpi-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b6830173e952d3d2501fd0c4152a79cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 30334,
        "upload_time": "2022-07-14T18:42:23",
        "upload_time_iso_8601": "2022-07-14T18:42:23.803969Z",
        "url": "https://files.pythonhosted.org/packages/70/42/6e8f1f23baede135ecae54560ffa110be90ddad03e53637f02d4b2669975/awg_scpi-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52a93d1222ad3c8f5fc9da681ba816023dc8266cc1a19946d4b10af800914a5f",
          "md5": "3820e7bf815743998002f895eaedb61c",
          "sha256": "dd90639d2aeb8d3f94d67debabc49a6de5a883f76c59602822dfdd8656c4ac7e"
        },
        "downloads": -1,
        "filename": "awg_scpi-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3820e7bf815743998002f895eaedb61c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 32243,
        "upload_time": "2022-07-20T01:45:22",
        "upload_time_iso_8601": "2022-07-20T01:45:22.757874Z",
        "url": "https://files.pythonhosted.org/packages/52/a9/3d1222ad3c8f5fc9da681ba816023dc8266cc1a19946d4b10af800914a5f/awg_scpi-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b977269f2a38fe3804fa484b0aa3d828c18d3e22060b067effcf71d8005aefc9",
          "md5": "8a1ce043070d1762413b31c22ca5c130",
          "sha256": "cb48890b7c4e7e4f4a5ae1ed486e234edacf904945c3075c0b42f2092f617d2d"
        },
        "downloads": -1,
        "filename": "awg_scpi-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8a1ce043070d1762413b31c22ca5c130",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 34726,
        "upload_time": "2022-07-20T01:45:25",
        "upload_time_iso_8601": "2022-07-20T01:45:25.116505Z",
        "url": "https://files.pythonhosted.org/packages/b9/77/269f2a38fe3804fa484b0aa3d828c18d3e22060b067effcf71d8005aefc9/awg_scpi-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ec44e7d127613de285c517075e0b84df5049711c719bfe703d643227db61e38",
          "md5": "6115a288103301c325c5658a6d6fdfef",
          "sha256": "f0d873a45b833dc45fe6935293742cc15d1134d3d956d63b4a5dd9475602784b"
        },
        "downloads": -1,
        "filename": "awg_scpi-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6115a288103301c325c5658a6d6fdfef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35940,
        "upload_time": "2022-07-21T19:01:16",
        "upload_time_iso_8601": "2022-07-21T19:01:16.680264Z",
        "url": "https://files.pythonhosted.org/packages/2e/c4/4e7d127613de285c517075e0b84df5049711c719bfe703d643227db61e38/awg_scpi-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62eb1801d23636dbfecfabfcbebd99d5c1e42562fedc0bd58d68ffe4f31aff3b",
          "md5": "7c051b56222edd2f580764ea350b4375",
          "sha256": "892af1d3cd29d0d3a100a94be1679fb9a845fba49cc082351a3b0b757553d976"
        },
        "downloads": -1,
        "filename": "awg_scpi-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7c051b56222edd2f580764ea350b4375",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 39656,
        "upload_time": "2022-07-21T19:01:18",
        "upload_time_iso_8601": "2022-07-21T19:01:18.785584Z",
        "url": "https://files.pythonhosted.org/packages/62/eb/1801d23636dbfecfabfcbebd99d5c1e42562fedc0bd58d68ffe4f31aff3b/awg_scpi-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ec44e7d127613de285c517075e0b84df5049711c719bfe703d643227db61e38",
        "md5": "6115a288103301c325c5658a6d6fdfef",
        "sha256": "f0d873a45b833dc45fe6935293742cc15d1134d3d956d63b4a5dd9475602784b"
      },
      "downloads": -1,
      "filename": "awg_scpi-0.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6115a288103301c325c5658a6d6fdfef",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 35940,
      "upload_time": "2022-07-21T19:01:16",
      "upload_time_iso_8601": "2022-07-21T19:01:16.680264Z",
      "url": "https://files.pythonhosted.org/packages/2e/c4/4e7d127613de285c517075e0b84df5049711c719bfe703d643227db61e38/awg_scpi-0.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "62eb1801d23636dbfecfabfcbebd99d5c1e42562fedc0bd58d68ffe4f31aff3b",
        "md5": "7c051b56222edd2f580764ea350b4375",
        "sha256": "892af1d3cd29d0d3a100a94be1679fb9a845fba49cc082351a3b0b757553d976"
      },
      "downloads": -1,
      "filename": "awg_scpi-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7c051b56222edd2f580764ea350b4375",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 39656,
      "upload_time": "2022-07-21T19:01:18",
      "upload_time_iso_8601": "2022-07-21T19:01:18.785584Z",
      "url": "https://files.pythonhosted.org/packages/62/eb/1801d23636dbfecfabfcbebd99d5c1e42562fedc0bd58d68ffe4f31aff3b/awg_scpi-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}