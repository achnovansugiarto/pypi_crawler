{
  "info": {
    "author": "Juan L Gamella",
    "author_email": "juangamella@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Invariant Causal Prediction (ICP) Algorithm for Causal Discovery\n\nThis is a Python implementation of the Invariant Causal Prediction (ICP) algorithm from the 2016 [paper](https://rss.onlinelibrary.wiley.com/doi/pdfdirect/10.1111/rssb.12167) *\"Causal inference using invariant prediction: identification and confidence intervals\"* by Jonas Peters, Peter BÃ¼hlmann and Nicolai Meinshausen.\n\nAt the point of writing, and to the best of my knowledge, the only other publicly available implementation of the algorithm is in the [R package](https://cran.r-project.org/web/packages/InvariantCausalPrediction/index.html) written by the original authors.\n\n## Installation\n\nYou can clone this repo or install the python package via pip:\n\n```bash\npip install causalicp\n```\n\nThe package is still at its infancy and its API is subject to change. However, this will be done with care: non backward-compatible changes to the API are reflected by a change to the minor or major version number,\n\n> e.g. *code written using causalicp==0.1.2 will run with causalicp==0.1.3, but may not run with causalicp==0.2.0.*\n\nThe code has been written with an emphasis on readability and on\nkeeping the dependency footprint to a minimum; to this end, the only\ndependencies outside the standard library are `numpy`, `scipy` and\n`termcolor`.\n\n## Documentation\n\nYou can find the complete documentation at https://icp.readthedocs.io/en/latest/. For completeness, we include here an overview and an example.\n\n### Running the algorithm: `causalicp.fit`\n\nTo run the algorithm, the function `fit` is provided:\n\n```python\ncausalicp.fit(data, target, alpha=0.05, sets=None, precompute=True, verbose=False, color=True):\n```\n\n**Parameters**\n\n- ***data*** (numpy.ndarray or list of array-like): The data from all\n  experimental settings. Each element of the list/array is a\n  2-dimensional array with a sample from a different setting, where\n  columns correspond to variables and rows to observations\n  (data-points). The data also contains the response variable, which\n  is specified with the `target` parameter.\n- ***target*** (int) The index of the response or target variable of\n  interest.\n- ***alpha*** (float, default=0.05 The level of the test procedure,\n  taken from `[0,1]`. Defaults to `0.05`.\n- ***sets*** (list of set or None, default=None): The sets for which ICP\n  will test invariance. An error is raised if a set is not a subset of\n  `{0,...,p-1}` or it contains the target, where `p` is the total\n  number of variables (including the target). If `None` all possible\n  subsets of predictors will be considered.\n- ***precompute*** (bool, default=True): Wether to precompute the sample\n  covariance matrix to speed up linear regression during the testing\n  of each predictor set. For large sample sizes this drastically\n  reduces the overall execution time, but it may result in numerical\n  instabilities for highly correlated data. If set to `False`, for\n  each set of predictors the regression is done using an iterative\n  least-squares solver on the raw data.\n- ***verbose*** (bool, default=False): If ICP should run in verbose\n  mode, i.e. displaying information about completion and the result of\n  tests.\n- ***color*** (bool, default=True): If the output produced when\n  `verbose=True` should be color encoded (not recommended if your\n  terminal does not support ANSII color formatting), see\n  [termcolor](https://pypi.org/project/termcolor/).\n\n**Raises**\n\n- ***ValueError***: If the value of some of the parameters is not\n  appropriate, e.g. `alpha` is negative, `data` contains samples with\n  different number of variables, or `sets` contains invalid sets.\n- ***TypeError*** : If the type of some of the parameters was not expected (see examples below).\n\n**Returns**\n\nThe result of the algorithm is returned in a `causalicp.Result` object, with the following attributes:\n\n- ***p*** (int): The total number of variables in the data (including\n    the response/target).\n- ***target*** (int): The index of the\n    response/target.\n- ***estimate*** (set or None): The estimated parental set returned by\n    ICP, or `None` if all sets of predictors were rejected.\n- ***accepted_sets*** (list of set): A list containing the accepted sets\n  of predictors.\n- ***rejected_sets*** (list of set): \n    A list containing the rejected sets of predictors.\n- ***pvalues*** (dict of (int, float)): A dictionary containing the\n    p-value for the causal effect of each individual predictor. The\n    target/response is included in the dictionary and has value `nan`.\n- ***conf_intervals*** (numpy.ndarray or None): A `2 x p` array of\n    floats representing the confidence interval for the causal effect\n    of each variable. Each column corresponds to a variable, and the\n    first and second row correspond to the lower and upper limit of\n    the interval, respectively. The column corresponding to the\n    target/response is set to `nan`.\n\n### An example\n\nWe generate interventional data from a linear-Gaussian SCM using\n[`sempler`](https://github.com/juangamella/sempler) (not a\ndependency of `causalicp`).\n\n```python\nimport sempler, sempler.generators\nimport numpy as np\nnp.random.seed(12)\n\n# Generate a random graph and construct a linear-Gaussian SCM\nW = sempler.generators.dag_avg_deg(4, 2.5, 0.5, 2)\nscm = sempler.LGANM(W, (-1,1), (1,2))\n\n# Generate a sample for setting 1: Observational setting\ndata = [scm.sample(n=100)]\n\n# Setting 2: Shift-intervention on X1\ndata += [scm.sample(n=130, shift_interventions = {1: (3.1, 5.4)})]\n\n# Setting 3: Do-intervention on X2\ndata += [scm.sample(n=98, do_interventions = {2: (-1, 3)})]\n```\n\nRunning ICP for the response variable `3`, at a significance level of `0.05`.\n\n```python\nimport causalicp as icp\nresult = icp.fit(data, 3, alpha=0.05, precompute=True, verbose=True, color=False)\n\n# Output:\n\n# Tested sets and their p-values:\n#   set() rejected : 2.355990957880749e-10\n#   {0} rejected : 7.698846116207467e-16\n#   {1} rejected : 4.573866047163566e-09\n#   {2} rejected : 8.374476052441259e-08\n#   {0, 1} accepted : 0.7330408066181638\n#   {0, 2} rejected : 2.062882130448634e-15\n#   {1, 2} accepted : 0.8433000000649277\n#   {0, 1, 2} accepted : 1\n# Estimated parental set: {1}\n```\n\nThe estimate, accepted sets, etc. are attributes of the `causalicp.Result` object:\n\n```python\nresult.estimate\n# {1}\n\nresult.accepted_sets\n# [{0, 1}, {1, 2}, {0, 1, 2}]\n\nresult.rejected_sets\n# [set(), {0}, {1}, {2}, {0, 2}]\n\nresult.pvalues\n# {0: 0.8433000000649277, 1: 8.374476052441259e-08, 2: 0.7330408066181638, 3: nan}\n\nresult.conf_intervals\n# array([[0.        , 0.57167295, 0.        ,        nan],\n#        [2.11059461, 0.7865869 , 3.87380337,        nan]])\n```\n\n## Code structure\n\nThe code is divided in two modules:\n\n- `icp.py` which contains the implementation of the algorithm (`fit`\n  function) and the definition of the `Result` object.\n- `data.py` which contains a class to manage the multi-environment\n  data and perform the linear regression for each set in an efficient\n  way.\n\n## Tests\n\nUnit tests and doctests are included. Additionally, the output of the\noverall procedure has been checked over tens of thousands of random graphs against that of the [R\npackage](https://cran.r-project.org/web/packages/InvariantCausalPrediction/index.html)\nby the original authors. Of\ncourse, this doesn't mean there are no bugs, but hopefully it means\n*they are less likely* :)\n\nThe tests can be run with `make tests`. This will also execute the\ndoctests, generate `1000` random SCMs + interventions, and run the `R`\nimplementation on them for comparison. You can add\n`SUITE=<module_name>` to run a particular module only. There are,\nhowever, additional dependencies to run the tests. You can find these\nin\n[`requirements_tests.txt`](https://github.com/juangamella/icp/blob/master/requirements_tests.txt)\nand\n[`R_requirements_tests.txt`](https://github.com/juangamella/icp/blob/master/R_requirements_tests.txt).\n\n## Feedback\n\nI hope you find this useful! Feedback and (constructive) criticism is always welcome, just shoot me an [email](mailto:juan.gamella@stat.math.ethz.ch) :)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/juangamella/icp",
    "keywords": "",
    "license": "BSD 3-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "causalicp",
    "package_url": "https://pypi.org/project/causalicp/",
    "platform": "",
    "project_url": "https://pypi.org/project/causalicp/",
    "project_urls": {
      "Homepage": "https://github.com/juangamella/icp"
    },
    "release_url": "https://pypi.org/project/causalicp/0.1.1/",
    "requires_dist": [
      "numpy (>=1.17.3)",
      "scipy (>=1.4.0)",
      "termcolor (>=1.1.0)"
    ],
    "requires_python": "",
    "summary": "Python implementation of the Invariant Causal Prediction (ICP) algorithm for causal discovery.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10337611,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66a8683d92e79b5fff1efb2588478cb1e9a655e1243bb0e885df0caac7a380b8",
          "md5": "fa28bcdd3bc09215d0a4e474db4e2a95",
          "sha256": "7458f0c25039a66faf2bfa8ffcf708c85ce6f71cbe54c54e2f347ab42b3c0918"
        },
        "downloads": -1,
        "filename": "causalicp-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fa28bcdd3bc09215d0a4e474db4e2a95",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16860,
        "upload_time": "2021-05-12T19:28:12",
        "upload_time_iso_8601": "2021-05-12T19:28:12.997750Z",
        "url": "https://files.pythonhosted.org/packages/66/a8/683d92e79b5fff1efb2588478cb1e9a655e1243bb0e885df0caac7a380b8/causalicp-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7eef30004b2febfcc1eac3b5be093c3e7f90a62456f790215961c4b719f8fcf0",
          "md5": "167166de816a54120fec174e4ebd8a6c",
          "sha256": "226244734b4c5cd81fae9c8b75569a10aa1b8741043ac096661f48745dc4915c"
        },
        "downloads": -1,
        "filename": "causalicp-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "167166de816a54120fec174e4ebd8a6c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19032,
        "upload_time": "2021-05-12T19:28:14",
        "upload_time_iso_8601": "2021-05-12T19:28:14.430632Z",
        "url": "https://files.pythonhosted.org/packages/7e/ef/30004b2febfcc1eac3b5be093c3e7f90a62456f790215961c4b719f8fcf0/causalicp-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76f6028371339cfff3873e4fb094728a25f2798078f13a946a5e3e9a411848c9",
          "md5": "1493d95a644316c40a361eebea32799b",
          "sha256": "267625df0943f0b6d6bd7a51e6f5493a9e81405b584db09e2f32e42e039d325e"
        },
        "downloads": -1,
        "filename": "causalicp-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1493d95a644316c40a361eebea32799b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16837,
        "upload_time": "2021-05-12T20:04:24",
        "upload_time_iso_8601": "2021-05-12T20:04:24.742049Z",
        "url": "https://files.pythonhosted.org/packages/76/f6/028371339cfff3873e4fb094728a25f2798078f13a946a5e3e9a411848c9/causalicp-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d403d3e50232e66e485a465f8dfb9c32e8b67ef62822b62c4b0adc1221dec44",
          "md5": "2ee249a236bbd8091ebb8d33c7e9d765",
          "sha256": "e3f2cd5357081d13d1adb5dcdb63f4d1ed2273a12c5596cfc075d78711c1802d"
        },
        "downloads": -1,
        "filename": "causalicp-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2ee249a236bbd8091ebb8d33c7e9d765",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19041,
        "upload_time": "2021-05-12T20:04:27",
        "upload_time_iso_8601": "2021-05-12T20:04:27.238117Z",
        "url": "https://files.pythonhosted.org/packages/9d/40/3d3e50232e66e485a465f8dfb9c32e8b67ef62822b62c4b0adc1221dec44/causalicp-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "76f6028371339cfff3873e4fb094728a25f2798078f13a946a5e3e9a411848c9",
        "md5": "1493d95a644316c40a361eebea32799b",
        "sha256": "267625df0943f0b6d6bd7a51e6f5493a9e81405b584db09e2f32e42e039d325e"
      },
      "downloads": -1,
      "filename": "causalicp-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1493d95a644316c40a361eebea32799b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16837,
      "upload_time": "2021-05-12T20:04:24",
      "upload_time_iso_8601": "2021-05-12T20:04:24.742049Z",
      "url": "https://files.pythonhosted.org/packages/76/f6/028371339cfff3873e4fb094728a25f2798078f13a946a5e3e9a411848c9/causalicp-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d403d3e50232e66e485a465f8dfb9c32e8b67ef62822b62c4b0adc1221dec44",
        "md5": "2ee249a236bbd8091ebb8d33c7e9d765",
        "sha256": "e3f2cd5357081d13d1adb5dcdb63f4d1ed2273a12c5596cfc075d78711c1802d"
      },
      "downloads": -1,
      "filename": "causalicp-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2ee249a236bbd8091ebb8d33c7e9d765",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19041,
      "upload_time": "2021-05-12T20:04:27",
      "upload_time_iso_8601": "2021-05-12T20:04:27.238117Z",
      "url": "https://files.pythonhosted.org/packages/9d/40/3d3e50232e66e485a465f8dfb9c32e8b67ef62822b62c4b0adc1221dec44/causalicp-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}