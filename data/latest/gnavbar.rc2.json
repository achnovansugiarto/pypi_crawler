{
  "info": {
    "author": "LAOGUObest",
    "author_email": "LAOGUOszyyds1804@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10"
    ],
    "description": "**GNavbar** is an expansion package based on PyQt5 (PySide2). It can be\nused to create navigation bars on the windows generated by PyQt5\n(PySide2). It can save time for users to manually set the navigation\nbar. It also supports self-designed navigation bar styles to make the\nwindow more beautiful. At the same time, GNavbar also supports unlimited\nnesting!\n\nThis version is the **first** release of the GNavbar module, and the previous version is a beta version.\n\nSupported Platforms\n^^^^^^^^^^^^^^^^^^^\n\n**Operating system**: Windows x64 bit >= 8.1 , Other OS have not been\ntested\n\n**Python**: Python >= 3.10\n\n**Others**: PyQt5 or PySide2 (Currently, other versions of Qt for Python\nare not supported)\n\nAuthor\n^^^^^^\n\nMr. LAOGUObest, a young programmer from the earth.\n\nInstallation\n^^^^^^^^^^^^\n\nGNavbar can be installed from PyPI\n\n``pip install GNavbar``\n\nIf the download speed in your region is too slow, you can use the mirror\nstation as follows\n\n``pip install -i [URL of the mirror station] GNavbar``\n\nSupport from GNavbar package\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIf you want to get help and some information about your GNavbar package,\nyou can enter the following code in the Python editor\n\n.. code:: python\n\n   import GNavbar\n   GNavbar.help()\n\nSimilarly, we can enter the following code to start the demo window\nprogram in GNavbar.\n\n.. code:: python\n\n   GNavbar.run()\n\nExpected Updates (v1.0→v1.1)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n1 . Navigation bar centering function will be added.\n\n2 . The function of customized navigation bar will be improved.\n\nSimple usage\n^^^^^^^^^^^^\n\nThis is a simple example of using GNavbar, but the final effect is very\nugly. Because the code is really too simple.\n\n.. code:: python\n\n   import sys\n   #Several modules here are replaced by '*'.\n   try:\n       from PyQt5.QtCore import *\n       from PyQt5.QtGui import *\n       from PyQt5.QtWidgets import *\n   except ImportError:\n       from PySide2.QtCore import *\n       from PySide2.QtGui import *\n       from PySide2.QtWidgets import *\n   from GNavbar import *\n\n   class Demo(QFrame):\n       def __init__(self):\n           super(Demo,self).__init__()\n           self.resize(494, 300)\n           #Create a Navigation Bar.\n           self.n = GNavbar(self)\n           #Add items to the navigation bar and set the size of the items.\n           self.n.addNavbar(100,50)\n           #Set text for navigation bar items.\n           self.n.setNavbarText(i=0,text='First GNavbar')\n           #Set the page corresponding to the navigation bar item.\n           self.n.setPage(0,self.page1)\n           #Set the grid layout so that the navigation bar is rolled out to the entire window.\n           self.gridLayout = QGridLayout(self)\n           self.gridLayout.setObjectName(u\"gridLayout\")\n           self.gridLayout.setContentsMargins(0, 0, 0, 0)\n           self.gridLayout.addWidget(self.n, 0, 0, 0, 0)\n           QMetaObject.connectSlotsByName(self)\n           self.setWindowTitle(\"GNavbar DemoWindow\")\n       def page1(self,frame):\n           #Specific contents of the corresponding page of the navigation bar.\n           self.pushButton = QPushButton(frame)\n           self.pushButton.setObjectName(u\"pushButton\")\n           self.pushButton.setGeometry(QRect(0, 0, 100, 100))\n           self.pushButton.setText(\"Hello GNavbar\")\n\n   if __name__ == \"__main__\":\n       #run\n       app = QApplication(sys.argv)\n       demo = Demo()\n       demo.show()\n       sys.exit(app.exec())\n\nThe previous example is the simplest way to use it.\n\nAdd Style\n^^^^^^^^^\n\nWe can add some “meat and blood” to make it look beautiful, as in the\nfollowing example. The default navigation bar in GNavbar is the left\nnavigation bar. If you don’t like the left navigation bar, you can\nchange it to the right, top, or bottom navigation bar with the following\ncode.\n\n.. code:: python\n\n   self.n.setLeft()\n   self.n.setRight()\n   self.n.setTop()\n   self.n.setBottom()\n\nWe can also set the StyleSheet for the navigation bar. These style\nsheets do not inherit to the page corresponding to the navigation bar\nitem. They only work on the navigation bar.In this way, we can set the\nstyle on the navigation bar with confidence and boldness, without\nworrying about other content being affected by it.\n\n.. code:: python\n\n   self.n.setStyleSheet(u\"background-color: rgb(40,40,150);\")\n\nIf you don’t like setting the style sheet to achieve the background\ncolor, you can set the background color, the selected color and the\nforeground color by setting the theme color.\n\n.. code:: python\n\n   #Note: The colors here only support the form of ‘qRgb()’.\n   self.n.setColor(qRgb(40,40,150),qRgb(100,100,250),qRgb(255,255,255))\n\nNext, we set the spacing between adjacent navigation bar items. The\ndefault value in GNavbar is no gap. It can make the navigation bar more\nbeautiful.\n\n.. code:: python\n\n   #Set spacing to 10.\n   self.n.setSpacing(10)\n\nIf you want to set more fonts, there are two ways for you to choose. You\ncan set the font of the entire navigation bar; You can also set the font\nof a navigation bar item.\n\n.. code:: python\n\n   #Set the font of navigation bar.\n   self.n.setFont(size=15,bold=True,font='Microsoft YaHei UI')\n   #Set the font of a navigation bar item,Set fonts when setting text.\n   self.n.setNavbarText(self,i=0,text='First GNavbar',size=15,bold=True,font='Microsoft YaHei UI')\n\nOf course, there are more methods for style setting, which are listed\nbelow.\n\n.. code:: python\n\n   #Note:All 'i', 'index', 'width', 'height' and 'size' are integer.\n   #Set the horizontal and vertical distance between two adjacent items on the navigation bar.\n   self.n.setGrid(width,height)\n   #Set the size of navigation bar items.\n   self.n.setNavbarSize(i,width,height)\n   #Set horizontal alignment for all text on the navigation bar,The default is horizontal center alignment.\n   self.n.AutoTextCenter()\n   self.n.AutoTextLeft()\n   self.n.AutoTextRight()\n   #Set icon for navigation bar item.\n   self.n.setNavbarIcon(i,icon,size)\n   #Delete navigation bar Item.\n   self.n.deleteNavbar(i)\n   #Set the background color of navigation bar item,Color is limited to qRgb.\n   self.n.setNavbarColor(i,color)\n   #Set to automatically determine the size of the navigation bar according to the window size,where 'w' and 'h' are multiples of window width and height.\n   self.n.setAutoSize(w,h)\n   #Sets the fixed size of the navigation bar. This method has the opposite effect to setAutoSize().\n   self.n.setSize(width,height)\n   #Set the mode of the navigation bar to icon mode.\n   self.n.setIconMode()\n   #Set the mode of the navigation bar to list mode.\n   self.n.setListMode()\n   #Force navigation bar refresh\n   self.n.u()\n   #Switch the page corresponding to the navigation bar.\n   self.n.change(index)\n   #Set whether to open the navigation bar box border,only bool value.\n   self.n.box(tf)\n   #Set the content of the navigation bar item to synchronize to its page.\n   self.n.setFlowFrame(i)\n   #Delete Page Synchronization.\n   self.n.delFlow(i)\n   #Set custom navigation bar item.\n   self.n.setOwnNavbar(i,widget)\n\nThis is all the content of this version of GNavbar. How about it? Is it\neasy to use? Is it powerful? I believe you can use it to make beautiful\nwindow programs! Let’s work together!\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://laoguobest.com",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "GNavbar",
    "package_url": "https://pypi.org/project/GNavbar/",
    "platform": null,
    "project_url": "https://pypi.org/project/GNavbar/",
    "project_urls": {
      "Homepage": "https://laoguobest.com"
    },
    "release_url": "https://pypi.org/project/GNavbar/1.0.221019/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Navigation bar expansion package based on PyQt5 and PySide2.(x64 bit os only)",
    "version": "1.0.221019",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15450960,
  "releases": {
    "1.0.221017": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07f42cf91f7edbbd87eba51a8b1519c2355f7000444936cf091dabfa59c43d70",
          "md5": "ec8ef3f1a452ab3950ebf82a4797b12c",
          "sha256": "eace2f23e025a5c1f908a771495b86b118520ae8bc657c49761682eb297292da"
        },
        "downloads": -1,
        "filename": "GNavbar-1.0.221017-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ec8ef3f1a452ab3950ebf82a4797b12c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 184436,
        "upload_time": "2022-10-17T15:25:32",
        "upload_time_iso_8601": "2022-10-17T15:25:32.540995Z",
        "url": "https://files.pythonhosted.org/packages/07/f4/2cf91f7edbbd87eba51a8b1519c2355f7000444936cf091dabfa59c43d70/GNavbar-1.0.221017-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b7d424e95801ddea9846a5b230dc775b208389e2a60965caa8a49d236cada22",
          "md5": "0e06a8744bd0162ccec9c16d9ab745fd",
          "sha256": "e2066871446c4b9c8052546b653068bb877d32eea0cd7169545cd07c8cef6003"
        },
        "downloads": -1,
        "filename": "GNavbar-1.0.221017.tar.gz",
        "has_sig": false,
        "md5_digest": "0e06a8744bd0162ccec9c16d9ab745fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 184917,
        "upload_time": "2022-10-17T15:25:34",
        "upload_time_iso_8601": "2022-10-17T15:25:34.832575Z",
        "url": "https://files.pythonhosted.org/packages/4b/7d/424e95801ddea9846a5b230dc775b208389e2a60965caa8a49d236cada22/GNavbar-1.0.221017.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.221019": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c721539b9ea395cfcc270d4460167857b01503f0cc4c8edf51806ce2e6465869",
          "md5": "f132bb0414d2f286c976b7e640f53a00",
          "sha256": "e3db7a467cf9fdf8b79c62c5f3c1cc5aab1bca69328d519e0016e3d32a2204aa"
        },
        "downloads": -1,
        "filename": "GNavbar-1.0.221019-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f132bb0414d2f286c976b7e640f53a00",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 187967,
        "upload_time": "2022-10-18T15:54:20",
        "upload_time_iso_8601": "2022-10-18T15:54:20.334300Z",
        "url": "https://files.pythonhosted.org/packages/c7/21/539b9ea395cfcc270d4460167857b01503f0cc4c8edf51806ce2e6465869/GNavbar-1.0.221019-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eec9d81cc7a9ae96c0d7791d3ce4221ef148dddd068ae1bcfce2b7901648f12f",
          "md5": "e912f714a6fea93254347749f2e94f9c",
          "sha256": "7074e40199ca9735117c8f26aa6af175ba6809cd0b68cf572c842ecb72b44afc"
        },
        "downloads": -1,
        "filename": "GNavbar-1.0.221019.tar.gz",
        "has_sig": false,
        "md5_digest": "e912f714a6fea93254347749f2e94f9c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 188129,
        "upload_time": "2022-10-18T15:54:22",
        "upload_time_iso_8601": "2022-10-18T15:54:22.793873Z",
        "url": "https://files.pythonhosted.org/packages/ee/c9/d81cc7a9ae96c0d7791d3ce4221ef148dddd068ae1bcfce2b7901648f12f/GNavbar-1.0.221019.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c721539b9ea395cfcc270d4460167857b01503f0cc4c8edf51806ce2e6465869",
        "md5": "f132bb0414d2f286c976b7e640f53a00",
        "sha256": "e3db7a467cf9fdf8b79c62c5f3c1cc5aab1bca69328d519e0016e3d32a2204aa"
      },
      "downloads": -1,
      "filename": "GNavbar-1.0.221019-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f132bb0414d2f286c976b7e640f53a00",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 187967,
      "upload_time": "2022-10-18T15:54:20",
      "upload_time_iso_8601": "2022-10-18T15:54:20.334300Z",
      "url": "https://files.pythonhosted.org/packages/c7/21/539b9ea395cfcc270d4460167857b01503f0cc4c8edf51806ce2e6465869/GNavbar-1.0.221019-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eec9d81cc7a9ae96c0d7791d3ce4221ef148dddd068ae1bcfce2b7901648f12f",
        "md5": "e912f714a6fea93254347749f2e94f9c",
        "sha256": "7074e40199ca9735117c8f26aa6af175ba6809cd0b68cf572c842ecb72b44afc"
      },
      "downloads": -1,
      "filename": "GNavbar-1.0.221019.tar.gz",
      "has_sig": false,
      "md5_digest": "e912f714a6fea93254347749f2e94f9c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 188129,
      "upload_time": "2022-10-18T15:54:22",
      "upload_time_iso_8601": "2022-10-18T15:54:22.793873Z",
      "url": "https://files.pythonhosted.org/packages/ee/c9/d81cc7a9ae96c0d7791d3ce4221ef148dddd068ae1bcfce2b7901648f12f/GNavbar-1.0.221019.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}