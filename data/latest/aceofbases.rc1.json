{
  "info": {
    "author": "Juan L. Mateo",
    "author_email": "mateojuan@uniovi.es",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License"
    ],
    "description": "**ACEofBASEs** is a tool to determine sites to be editted with the CRISPR/Cas9 technology\nin a input sequence and predict its potential off-target sites. The online version of\n**ACEofBASEs** is available at http://aceofbases.cos.uni-heidelberg.de/\n\nThis is a command line version of **ACEofBASEs** that is designed mainly to allow search\nof large volume of sequences and higher flexibility.\n\nIf you use this tool for your scientific work, please cite it as:\n\tCornean, A., Gierten, J., Welz, B., Mateo, J.L., Thumberger, T. and Wittbrodt, J.\n\tStemmer, M., Thumberger, T., del Sol Keyer, M., Wittbrodt, J. and Mateo, J.L.\n\t*Precise in vivo functional analysis of DNA variants with base editing using ACEofBASEs target prediction.*\n\t**eLife (2022)**.\n\n# Requirements\n\n**ACEofBASEs** is implemented in Python and it requires a version 3.5 or above.\n\nIn addition we relay on the short read aligner Bowtie 1 to identify the\noff-target sites. Bowtie can be downloaded from this site\nhttp://bowtie-bio.sourceforge.net/index.shtml in binary format for the main\nplatforms.\nYou need to create an indexed version of the genome sequence of your\ntarget species. This can be done with the tool bowtie-build included in the\nBowtie installation. For that you simply need a fasta file containing the genome\nsequence. To get the index you can do something like:\n```\n$ bowtie-build -r -f <your-fasta-file> <index-name>\n```\n\nThe previous command will create the index files in the current folder.\n\nTo handle 2bit files and, optionally, gene and exon annotations we use the python library\n[bx-python](https://bitbucket.org/james_taylor/bx-python/).\n\nThe exon and gene files contain basically the coordinates of those elements in\n[bed format](http://genome.ucsc.edu/FAQ/FAQformat#format1), which are the first\nthree columns of the file. The exon file can contain two more columns with the\nID and name of the corresponding gene.\nYou can generate easily such kind of files for you target organism using the\nscript `gff2bedFiles` included in this package. As the name\nof this script suggests, you only need a GFF file with the annotation.\nAdditionally, you can also use [Ensembl Biomart](http://www.ensembl.org/biomart),\nif your species is available there, to generate files complying with these\nrequirements.\n\nIn case of difficulties with these files contact us and we can provide you the\nfiles you need or help to generate them on your own.\n# Install\n\nPlease, refer to the file `INSTALL.md`.\n\n# Usage\n\nAfter a successful installation you should have the main **ACEofBASEs** executable,\ntogether with the script to generate the gene/exons files, ready to be used.\nYou can run **ACEofBASEs** with the -h flag to get a detailed list of the available\nparameters. For instance:\n```\n$ aceofbases -h\n```\n\nAt minimum it is necessary to specify the input (multi)fasta file (--input), the\nBowtie index (--index) and the 2bit file (--twobit). In this case **ACEofBASEs**\nassumes that the Bowtie and blat executables can be found in the `PATH` system variable,\nthere are not gene and exon files to use and the rest of parameters will take default values.\nNotice that the index parameter to specify here refers to the name of the\nindex, without any file extension, together with the path, if necessary.\n\nA command for a typical run will look something like this:\n```\n$ aceofbases --input <query.fasta> --index <path/index-name> --twobit <file.2bit> --output <output-folder>\n```\nThe result of the run will be three files for each sequence in the input query\nfile. These files will have extension .fasta, .xls and html, containing,\nrespectively, the sequence of the target sites, their detailed information either\nas tab separated file that can be open with any spreadsheet program or the html file to be open\nwith any web browser. The name of the output file(s) will be taken from the\nname of the sequences in the input fasta file.\n\n## Generating Exon/Gene files\nFor any species you have to work with it is very likely that there is an\nannotation file in GFF format. From any of these files you can generate\nthe files that **ACEofBASEs** needs to annotate the off-target sites.\nThe script `gff2bedFiles` expects as first argument the input file in\n[GFF version 3](https://github.com/The-Sequence-Ontology/Specifications/blob/master/gff3.md)\nformat.\nFiles in this format can be usually found with their corresponding assemblies\nin the web sites NCBI or Ensembl.\nWith the input file downloaded, it doesn't need to be uncompressed if it is in\ngz format, specify it as first argument to the script followed by\nthe prefix you prefer for the output files.\n```\n$ gff2bedFiles <input-gff> <prefix>\n```\nThe result will be two files named `<prefix>_exons.bed.gz` and\n`<prefix>_genes.bed.gz`.\nThese files are compressed, to save space, and can be passed directly to\n**ACEofBASEs**.\n\n# Docker image\n**ACEofBASEs** is also available as a Docker image at https://hub.docker.com/r/juanlmateo/aceofbases\nThis image contains everything ready to use **ACEofBASEs**.\nSimply download the image with this command\n```\ndocker pull juanlmateo/aceofbases:latest\n```\nWith this image you can run the commands `aceofbases` and `gff2bedFiles`, but also\nyou can run Bowtie to create the index of your target species or faToTwoBit to create the 2bit file.\n\nBelow you have an example that shows how to get CRISPR/Cas candidates for a\nsequence using the yeast as target species. This example shows all the steps,\nfrom creating the Bowtie index, the exon and gene files to the generation of\nthe final output.\n```\n# downloading the genome of the target species in fasta forma\nwget ftp://ftp.ensembl.org/pub/release-105/fasta/saccharomyces_cerevisiae/dna/Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa.gz\n# building the bowtie index from the fasta file\ndocker run -v `pwd`:/data/ aceofbases bowtie-build -r -f Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa.gz saccharomyces_cerevisiae\n# downloading the annotation of this assembly in GFF format\nwget ftp://ftp.ensembl.org/pub/release-105/gff3/saccharomyces_cerevisiae/Saccharomyces_cerevisiae.R64-1-1.105.gff3.gz\n# generating the exon and gene files\ndocker run -v `pwd`:/data/ aceofbases gff2bedFiles Saccharomyces_cerevisiae.R64-1-1.105.gff3.gz saccharomyces_cerevisiae\n# generating the 2bit file\nocker run -v `pwd`:/data/ aceofbases faToTwoBit Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa.gz yeast.2bit\n# defining the input sequence(s)\necho -e \">YDL194W\\nATGGATCCTAATAGTAACAGTTCTAGCGAAACATTACGCCAAGAGAAACAGGGTTTCCTA\" > test.fa\n# running ACEofBASEs\ndocker run -v `pwd`:/data/ aceofbases aceofbases --input test.fa --index saccharomyces_cerevisiae --twobit yeast.2bit --exons saccharomyces_cerevisiae_exons.bed.gz --genes saccharomyces_cerevisiae_genes.bed.gz\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/juanlmateo/aceofbases_standalone",
    "keywords": "CRISPR",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aceofbases",
    "package_url": "https://pypi.org/project/aceofbases/",
    "platform": null,
    "project_url": "https://pypi.org/project/aceofbases/",
    "project_urls": {
      "Bug Tracker": "https://bitbucket.org/juanlmateo/aceofbases_standalone/issues",
      "Homepage": "https://bitbucket.org/juanlmateo/aceofbases_standalone"
    },
    "release_url": "https://pypi.org/project/aceofbases/1.0.0/",
    "requires_dist": [
      "bx-python"
    ],
    "requires_python": ">=3.5",
    "summary": "ACEofBASEs, a careful evaluation of BaseEdits",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13295487,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83b8d605ba40572011e5bf51dd19675a12aadced9a2fc897e486115fe55d8294",
          "md5": "06429873f2012af28b1c6559af2d6ce2",
          "sha256": "a3954b93e951478f371beaac3e1c0e817c39ac2a1b9ffc7374163f3f9605d117"
        },
        "downloads": -1,
        "filename": "aceofbases-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "06429873f2012af28b1c6559af2d6ce2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 29667,
        "upload_time": "2022-03-25T17:12:47",
        "upload_time_iso_8601": "2022-03-25T17:12:47.473067Z",
        "url": "https://files.pythonhosted.org/packages/83/b8/d605ba40572011e5bf51dd19675a12aadced9a2fc897e486115fe55d8294/aceofbases-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d7fc157f6f11c0e279843ccff9f81fab697378d8f14276f4231b205f95be961",
          "md5": "f0cce9708fd0047823d78771a020fd83",
          "sha256": "9f9c02be5bfe3e106362b6afcdae330b3c4e42ddaae4dd6c465c4625bca67522"
        },
        "downloads": -1,
        "filename": "aceofbases-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f0cce9708fd0047823d78771a020fd83",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 29621,
        "upload_time": "2022-03-25T17:12:49",
        "upload_time_iso_8601": "2022-03-25T17:12:49.418621Z",
        "url": "https://files.pythonhosted.org/packages/7d/7f/c157f6f11c0e279843ccff9f81fab697378d8f14276f4231b205f95be961/aceofbases-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "83b8d605ba40572011e5bf51dd19675a12aadced9a2fc897e486115fe55d8294",
        "md5": "06429873f2012af28b1c6559af2d6ce2",
        "sha256": "a3954b93e951478f371beaac3e1c0e817c39ac2a1b9ffc7374163f3f9605d117"
      },
      "downloads": -1,
      "filename": "aceofbases-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "06429873f2012af28b1c6559af2d6ce2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 29667,
      "upload_time": "2022-03-25T17:12:47",
      "upload_time_iso_8601": "2022-03-25T17:12:47.473067Z",
      "url": "https://files.pythonhosted.org/packages/83/b8/d605ba40572011e5bf51dd19675a12aadced9a2fc897e486115fe55d8294/aceofbases-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d7fc157f6f11c0e279843ccff9f81fab697378d8f14276f4231b205f95be961",
        "md5": "f0cce9708fd0047823d78771a020fd83",
        "sha256": "9f9c02be5bfe3e106362b6afcdae330b3c4e42ddaae4dd6c465c4625bca67522"
      },
      "downloads": -1,
      "filename": "aceofbases-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f0cce9708fd0047823d78771a020fd83",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 29621,
      "upload_time": "2022-03-25T17:12:49",
      "upload_time_iso_8601": "2022-03-25T17:12:49.418621Z",
      "url": "https://files.pythonhosted.org/packages/7d/7f/c157f6f11c0e279843ccff9f81fab697378d8f14276f4231b205f95be961/aceofbases-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}