{
  "info": {
    "author": "Nathan Clegg",
    "author_email": "Nathan_5095@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "=========================================\nCoPrA\n=========================================\n\n*Asyncronous Python REST and WebSocket Clients for Coinbase Pro*\n\n-----------------------------------------\n\n| |Version| |Build Status| |Docs|\n\n|\n\n| **Quick Links**: `Documentation <https://copra.readthedocs.io/en/latest/>`__ - `Source Code <https://github.com/tpodlaski/copra>`__ - `PyPi <https://pypi.org/project/copra/>`__\n\n| **Related**: `Coinbase Pro Digital Currency Exchange <https://pro.coinbase.com/>`__ - `Coinbase Pro REST API <https://docs.pro.coinbase.com/#api>`_ - `Coinbase Pro WebSocket API <https://docs.pro.coinbase.com/#websocket-feed>`_\n\n-----------------------------------------\n\nIntroduction\n------------\n\nThe CoPrA \\(**Co**\\ inbase **Pr**\\ o **A**\\ sync\\) package provides asyncronous REST and WebSocket clients written in Python for use with the Coinbase Pro digital currency trading platform. To learn about Coinbase Pro's REST and WebSocket APIs as well as how to obtain an API key for authentication to those services, please see `Coinbase Pro's API documentation <https://docs.pro.coinbase.com/>`__.\n\nCoPrA Features\n--------------\n\n* compatible with Python 3.5 or greater\n* utilizes Python's `asyncio <https://docs.python.org/3/library/asyncio.html>`__ concurrency framework\n* open source (`MIT <https://github.com/tpodlaski/copra/blob/master/LICENSE>`__ license)\n\nREST Features\n+++++++++++++\n\n* Asyncronous REST client class with 100% of the account management, trading, and market data functionality offered by the Coinbase Pro REST API.\n* supports user authentication\n* built on **aiohttp**, the asynchronous HTTP client/server framework for asyncio and Python\n\nWebSocket Features\n++++++++++++++++++\n\n* Asyncronous WebSocket client class with callback hooks for managing every phase of a Coinbase Pro WebSocket session\n* supports user authentication\n* built on **Autobahn|Python**, the open-source (MIT) real-time framework for web, mobile & the Internet of Things.\n\n\nExamples\n--------\n\nREST\n++++\nWithout a Coinbase Pro API key, ``copra.rest.Client`` has access to all of the public market data that Coinbase makes available.\n\n.. code:: python\n\n    # 24hour_stats.py\n\n    import asyncio\n\n    from copra.rest import Client\n\n    loop = asyncio.get_event_loop()\n\n    client = Client(loop)\n\n    async def get_stats():\n        btc_stats = await client.get_24hour_stats('BTC-USD')\n        print(btc_stats)\n\n    loop.run_until_complete(get_stats())\n    loop.run_until_complete(client.close())\n\nRunning the above:\n\n.. code:: bash\n\n    $ python3 24hour_stats.py\n    {'open': '3914.96000000', 'high': '3957.10000000', 'low': '3508.00000000', 'volume': '37134.10720409', 'last': '3670.06000000', 'volume_30day': '423047.53794129'}\n\nIn conjunction with a Coinbase Pro API key, ``copra.rest.Client`` can be used to trade cryptocurrency and manage your Coinbase pro account. This example also shows how  ``copra.rest.Client`` can be used as a context manager.\n\n.. code:: python\n\n    # btc_account_info.py\n\n    import asyncio\n\n    from copra.rest import Client\n\n    KEY = YOUR_API_KEY\n    SECRET = YOUR_API_SECRET\n    PASSPHRASE = YOUR_API_PASSPHRASE\n\n    BTC_ACCOUNT_ID = YOUR_BTC_ACCOUNT_ID\n\n    loop = asyncio.get_event_loop()\n\n    async def get_btc_account():\n        async with Client(loop, auth=True, key=KEY, \n                          secret=SECRET, passphrase=PASSPHRASE) as client:\n\n            btc_account = await client.account(BTC_ACCOUNT_ID)\n            print(btc_account)\n\n    loop.run_until_complete(get_btc_account())\n\nRunning the above:\n\n.. code:: bash\n\n    $ python3 btc_account_info.py\n    {'id': '1b121cbe-bd4-4c42-9e31-7047632fc7c7', 'currency': 'BTC', 'balance': '26.1023109600000000', 'available': '26.09731096', 'hold': '0.0050000000000000', 'profile_id': '151d9abd-abcc-4597-ae40-b6286d72a0bd'}\n    \nWebSocket\n+++++++++\n\nWhile ``copra.websocket.Client`` is meant to be overridden, but it can be used 'as is' to test the module through the command line.\n\n.. code:: python\n\n    # btc_heartbeat.py\n\n    import asyncio\n    \n    from copra.websocket import Channel, Client\n    \n    loop = asyncio.get_event_loop()\n\n    ws = Client(loop, Channel('heartbeat', 'BTC-USD'))\n\n    try:\n        loop.run_forever()\n    except KeyboardInterrupt:\n        loop.run_until_complete(ws.close())\n        loop.close()\n\nRunning the above:\n\n.. code:: bash\n\n    $ python3 btc_heartbeat.py\n    {'type': 'subscriptions', 'channels': [{'name': 'heartbeat', 'product_ids': ['BTC-USD']}]}\n    {'type': 'heartbeat', 'last_trade_id': 45950713, 'product_id': 'BTC-USD', 'sequence': 6254273323, 'time': '2018-07-05T22:36:30.823000Z'}\n    {'type': 'heartbeat', 'last_trade_id': 45950714, 'product_id': 'BTC-USD', 'sequence': 6254273420, 'time': '2018-07-05T22:36:31.823000Z'}\n    {'type': 'heartbeat', 'last_trade_id': 45950715, 'product_id': 'BTC-USD', 'sequence': 6254273528, 'time': '2018-07-05T22:36:32.823000Z'}\n    {'type': 'heartbeat', 'last_trade_id': 45950715, 'product_id': 'BTC-USD', 'sequence': 6254273641, 'time': '2018-07-05T22:36:33.823000Z'}\n    {'type': 'heartbeat', 'last_trade_id': 45950715, 'product_id': 'BTC-USD', 'sequence': 6254273758, 'time': '2018-07-05T22:36:34.823000Z'}\n    {'type': 'heartbeat', 'last_trade_id': 45950720, 'product_id': 'BTC-USD', 'sequence': 6254273910, 'time': '2018-07-05T22:36:35.824000Z'}\n    .\n    .\n    .\n\nA Coinbase Pro API key allows ``copra.websocket.Client`` to authenticate with the Coinbase WebSocket server giving you access to feeds specific to your user account.\n\n.. code:: python\n\n    # user_channel.py\n\n    import asyncio\n\n    from copra.websocket import Channel, Client\n\n    KEY = YOUR_API_KEY\n    SECRET = YOUR_API_SECRET\n    PASSPHRASE = YOUR_API_PASSPHRASE\n    \n    loop = asyncio.get_event_loop()\n\n    channel = Channel('user', 'LTC-USD')\n\n    ws = Client(loop, channel, auth=True, key=KEY, secret=SECRET, passphrase=PASSPHRASE)\n\n    try:\n        loop.run_forever()\n    except KeyboardInterrupt:\n        loop.run_until_complete(ws.close())\n        loop.close()\n        \n\nRunning the above:\n\n.. code:: bash\n\n    $ python3 user_channel.py\n    {'type': 'subscriptions', 'channels': [{'name': 'user', 'product_ids': ['LTC-USD']}]}\n    {'type': 'received', 'order_id': '42d2677d-0d37-435f-a776-e9e7f81ff22b', 'order_type': 'limit', 'size': '50.00000000', 'price': '1.00000000', 'side': 'buy', 'client_oid': '00098b59-4ac9-4ff8-ba16-bd2ef673f7b7', 'product_id': 'LTC-USD', 'sequence': 2311323871, 'user_id': '642394321fdf8242c4006432', 'profile_id': '039ee148-d490-44f9-9aed-0d1f6412884', 'time': '2018-07-07T17:33:29.755000Z'}\n    {'type': 'open', 'side': 'buy', 'price': '1.00000000', 'order_id': '42d2677d-0d37-435f-a776-e9e7f81ff22b', 'remaining_size': '50.00000000', 'product_id': 'LTC-USD', 'sequence': 2311323872, 'user_id': '642394321fdf8242c4006432', 'profile_id': '039ee148-d490-44f9-9aed-0d1f6412884', 'time': '2018-07-07T17:33:29.755000Z'}\n    .\n    .\n    .\n\nVersioning\n----------\n\nWe use `SemVer <http://semver.org/>`__ for versioning. For the versions available, see the `tags on this repository <https://github.com/tpodlaski/copra/tags>`__.\n\n\nLicense\n-------\n\nThis project is licensed under the **MIT License** - see the `LICENSE file <https://github.com/tpodlaski/copra/blob/master/LICENSE>`_ for details\n\n\nAuthors\n-------\n**Tony Podlaski** - http://www.neuraldump.net \n\nSee also the list of `contributers <https://github.com/tpodlaski/copra/blob/master/CONTRIBUTING.rst>`__ who participated in this project.\n\nContributing\n------------\nPlease read `CONTRIBUTING.rst <https://github.com/tpodlaski/copra/blob/master/CONTRIBUTING.rst>`__ for details on our code of conduct, and the process for submitting pull requests to us.\n\n\nCredits\n-------\n\nThis package was created with `Cookiecutter <https://github.com/audreyr/cookiecutter>`__ and the `audreyr/cookiecutter-pypackage <https://github.com/audreyr/cookiecutter-pypackage>`__ project template.\n\n\n.. |Version| image:: https://img.shields.io/pypi/v/copra.svg\n   :target: https://pypi.python.org/pypi/copra\n   \n.. |Build Status| image:: https://img.shields.io/travis/tpodlaski/copra.svg\n   :target: https://travis-ci.org/tpodlaski/copra\n   \n.. |Docs| image:: https://readthedocs.org/projects/copra/badge/?version=latest\n   :target: https://copra.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\n\n=======\nHistory\n=======\n\n0.1.0 (2018-07-06)\n------------------\n\n* First release on PyPI.\n\n0.2.0 (2018-07-07)\n------------------\n\n* Added Client authentication.\n\n0.3.0 (2018-07-09)\n------------------\n\n* Added reconnect option to Client.\n\n0.4.0 (2018-07-10)\n------------------\n* Added subscribe and unsubscribe methods to Client.\n\n1.0.0 (2018-07-12)\n------------------\n* Added full documentation of the CoPrA API.\n\n1.0.1 (2018-07-12)\n------------------\n* Fixed typos in the documentation.\n\n1.0.2 (2018-07-12)\n------------------\n* Added Examples page to the documentation.\n\n1.0.3 (2018-07-16)\n------------------\n* More documentation typos fixed.\n\n1.0.4 - 1.0.5 (2018-07-17)\n--------------------------\n* Non-API changes.\n\n1.0.6 (2018-08-19)\n------------------\n* Updated Autobahn requirement to 18.8.1\n\n1.0.7 (2018-08-19)\n------------------\n* Modified Travis config to test against Python 3.7.\n\n1.1.0 (2018-11-27)\n------------------\n* Added REST client.\n\n1.1.2 (2018-12-01)\n------------------\n* Updated documentation formatting.\n\n1.2.0 (2019-01-04)\n------------------\n* Created copra.rest package and moved old copra.rest module to\n  copra.rest.client.\n* Created copra.websocket package and moved old copra.websocket module to\n  copra.websocket.client.\n* Add imports to copra.rest.__init__ and copra.websocket.__init__ so that\n  classes and attributes can still be imported as they were before.\n* Rewrote and completed unit tests from copra.websocket.\n\n1.2.5 (2019-01-05)\n------------------\n* Updated copra.websocket.client unit tests to ignore those that are \n  incompatible with Python 3.5 due to Mock methods that were not yet \n  implemented.\n  \n1.2.6 (2019-01-07)\n------------------\n* Updated the REST client to attach an additional query string parameter \n  to all GET requests. The parameter, 'no-cache', is a timestamp and ensures\n  that the Coinbase server responds to all GET requests with fresh and not\n  cached content.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Nathan5095/CoinWebsock",
    "keywords": "copra coinbase pro gdax api bitcoin litecoin etherium rest websocket client",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "CoinWebsock",
    "package_url": "https://pypi.org/project/CoinWebsock/",
    "platform": "",
    "project_url": "https://pypi.org/project/CoinWebsock/",
    "project_urls": {
      "Homepage": "https://github.com/Nathan5095/CoinWebsock"
    },
    "release_url": "https://pypi.org/project/CoinWebsock/1.3.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Asyncronous Python REST and WebSocket Clients for the Coinbase Pro virtual currency trading platform.",
    "version": "1.3.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9072379,
  "releases": {
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3cfef3efcc16cb9e83ed4125f61ce61a13051855ddea39c902ca7a13b32f686",
          "md5": "c817db6cbae76758aa2f240416f9fc42",
          "sha256": "0c7acebd4dffcc4af3a7ace8fa12e64f6ac45c907ad51b332eb5c596b6c03fba"
        },
        "downloads": -1,
        "filename": "CoinWebsock-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c817db6cbae76758aa2f240416f9fc42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 60083,
        "upload_time": "2021-01-06T21:54:10",
        "upload_time_iso_8601": "2021-01-06T21:54:10.232940Z",
        "url": "https://files.pythonhosted.org/packages/d3/cf/ef3efcc16cb9e83ed4125f61ce61a13051855ddea39c902ca7a13b32f686/CoinWebsock-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71f859df8f297eb4fff1fa805463b4f42a2a14a02eaee9307c82854e121c757e",
          "md5": "bff43b56724a6e0fb10ca17ae8ea1641",
          "sha256": "befb2c4df9ef77504b6d30177f848187639cd8c779718b640e3ae818ddd5461d"
        },
        "downloads": -1,
        "filename": "CoinWebsock-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bff43b56724a6e0fb10ca17ae8ea1641",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 58135,
        "upload_time": "2021-01-06T22:14:01",
        "upload_time_iso_8601": "2021-01-06T22:14:01.632863Z",
        "url": "https://files.pythonhosted.org/packages/71/f8/59df8f297eb4fff1fa805463b4f42a2a14a02eaee9307c82854e121c757e/CoinWebsock-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7dbe5d6716b96d8ef70b94697db43f8de2d9b9a06853cf4fafacca87fa95a0f",
          "md5": "eabe74bb2bc95b445db2fb93b9c82d3c",
          "sha256": "1e98db2ac23ac6644401a9af4369d91c2503022d7fd40438bfced411c3bd6076"
        },
        "downloads": -1,
        "filename": "CoinWebsock-1.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "eabe74bb2bc95b445db2fb93b9c82d3c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 58153,
        "upload_time": "2021-01-06T22:27:31",
        "upload_time_iso_8601": "2021-01-06T22:27:31.316424Z",
        "url": "https://files.pythonhosted.org/packages/a7/db/e5d6716b96d8ef70b94697db43f8de2d9b9a06853cf4fafacca87fa95a0f/CoinWebsock-1.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98e31c6297fa1359d738ecee1616cd50b804c0c665f178a406283dc6255d74f8",
          "md5": "5a0e0aa7a9e7ce113c3f256502ec3057",
          "sha256": "e1332c0e6b7d8d0a0952bd8f67c6db40b2088e69cdb3fae8313a308192cfd8f7"
        },
        "downloads": -1,
        "filename": "CoinWebsock-1.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5a0e0aa7a9e7ce113c3f256502ec3057",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 58160,
        "upload_time": "2021-01-06T23:05:52",
        "upload_time_iso_8601": "2021-01-06T23:05:52.016137Z",
        "url": "https://files.pythonhosted.org/packages/98/e3/1c6297fa1359d738ecee1616cd50b804c0c665f178a406283dc6255d74f8/CoinWebsock-1.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "98e31c6297fa1359d738ecee1616cd50b804c0c665f178a406283dc6255d74f8",
        "md5": "5a0e0aa7a9e7ce113c3f256502ec3057",
        "sha256": "e1332c0e6b7d8d0a0952bd8f67c6db40b2088e69cdb3fae8313a308192cfd8f7"
      },
      "downloads": -1,
      "filename": "CoinWebsock-1.3.3.tar.gz",
      "has_sig": false,
      "md5_digest": "5a0e0aa7a9e7ce113c3f256502ec3057",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 58160,
      "upload_time": "2021-01-06T23:05:52",
      "upload_time_iso_8601": "2021-01-06T23:05:52.016137Z",
      "url": "https://files.pythonhosted.org/packages/98/e3/1c6297fa1359d738ecee1616cd50b804c0c665f178a406283dc6255d74f8/CoinWebsock-1.3.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}