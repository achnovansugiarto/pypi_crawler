{
  "info": {
    "author": "Nenad Bogojević",
    "author_email": "nenad.bogojevic@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Topic :: Home Automation"
    ],
    "description": "This is a library that allows communication with Midea dehumidifier appliances via the local area network.\n\n# midea-beautiful-dehumidifier\n[![Build Status](https://github.com/nbogojevic/midea-beautiful-dehumidifier/actions/workflows/python-publish.yml/badge.svg)](https://github.com/nbogojevic/midea-beautiful-dehumidifier/actions/workflows/python-publish.yml)\n[![PyPI](https://img.shields.io/pypi/v/midea_beautiful_dehumidifier.svg?maxAge=3600)](https://pypi.org/project/midea_beautiful_dehumidifier/)\n\nThis library allows discovering Midea dehumidifiers on local network, getting their state and controlling then. The name comes from Chinese name for Midea (美的) which translates to _beautiful_ in English. \n\nThis library inspired from the repository at [mac-zhou/midea-msmart](https://github.com/mac-zhou/midea-msmart) which provides similar functionality for air conditioners and [barban-dev/midea_inventor_dehumidifier](https://github.com/barban-dev/midea_inventor_dehumidifier) cloud based functionality for dehumidifiers. This library may include verbatim or adapted portions of the code from those two projects.\n\n\nThanks also to [yitsushi's project](https://github.com/yitsushi/midea-air-condition), [NeoAcheron's project](https://github.com/NeoAcheron/midea-ac-py), [andersonshatch's project](https://github.com/andersonshatch/midea-ac-py).\n\n\n## Supported appliances\n\nThe library works only Midea dehumidifiers supporting V3 protocol. Both appliances with and without ion function are supported.\n\nSome examples of supported dehumidifiers:\n\n* Comfee MDDF-16DEN7-WF or MDDF-20DEN7-WF (tested with 20L version)\n* Inventor EVA ΙΟΝ Pro Wi-Fi (EP3-WiFi 16L/20L) (tested with 20L version)\n* Inventor Eva II Pro Wi-Fi (EVP-WF16L/20L)\n* Pro Breeze 30L Smart Dehumidifier with Wifi / App Control\n\nIt may as well work with other Midea Wi-Fi dehumidifiers.\n\n## Dehumidifier data\n\nThe following dehumidifier data is accessible via library: \n\n* on/off switch (boolean, can be set)\n* current relative humidity (read-only)\n* target relative humidity (can be set)\n* active mode (can be set)\n* fan speed (can be set)\n* ion mode status (boolean, can be set)\n* tank is full (boolean, read-only)\n* appliance name (read-only). Set through Midea mobile application.\n* appliance serial number (read-only) \n* appliance IPv4 address (read-only)\n* token and key for local network access (read-only, only v3 appliances)\n* filter replacement indicator (boolean, read-only, if supported on appliance)\n* pump on/off switch (boolean, can be set, if supported on appliance)\n* defrosting mode indicator (boolean, read-only, if supported on appliance)\n* internal error code (read-only)\n\n\n## Discovery\n\nThis library is able to discover appliances on local network. This is done by broadcasting UDP packets on all local networks interfaces to ports 6445. Appliances will respond to this broadcast with their description packet. Following discovery, communication switchers to TCP over port 6444. This communication is encrypted, and, for appliances with version 3 firmware the library needs a token/key combination associated to each appliance. This can be either provided as arguments or retrieved from Midea app account. Once obtained, the token/key pair can be reused for an appliance multiple times. The library can also retrieve the list of registered appliances from Midea app account and obtain additional information for devices (eg. name). \n\nLibrary connects to Midea cloud API using credentials from NetHome Plus mobile app. You can use other Midea app mobile applications if you obtain their application key and id. See [midea_beautiful_dehumidifier/midea.py](midea_beautiful_dehumidifier/midea.py) for some examples. Application key and application id must match, otherwise library won't be able to sign in.\n\nThe discovery should work on Linux and Windows based systems, however it doesn't work in Windows Subsystem for Linux and may not work in Docker containers or VMs depending on network setup. For example, VM or container needs to have rights to broadcast to physical network to make discovery work. On workaround is to run discovery from non-virtualized environment host. \n\nIf this discovery mechanism doesn't work on particular set-up, it is still possible to either target appliances directly using their IP address when it is known or to retrieve or setting their status using cloud service. \n\n### Network considerations\n\nDiscovery requires that both appliance and the machine performing discovery are present on the same subnet. Discovery process will issue UDP broadcast request on the local private networks discovered from host's network adapters. The library only scans private network ranges using this method (e.g. 10.0.0.0 – 10.255.255.255, \t172.16.0.0 – 172.31.255.255 and 192.168.0.0 – 192.168.255.255) It is also possible to explicitly provide networks or even single addresses to scan and in this case there is no limitation on address ranges, however, beware of sending broadcast requests to public ip networks.\n\n## Local protocol support\n\nLibrary supports following protocols:\n\n* cloud based status reading and writing (no local access needed)\n* v3 local protocol with compatible devices (requires TOKEN/KEY combination)\n* v2 local protocol with compatible devices (TO BE TESTED) \n\n## Logging\n\nLibrary logs additional information at log level 5. Credentials information like username, password or token keys should never be logged, but you can use command line tool to display token and key data. \n\n\n## Command Line Usage\n\n### Installing package\n\n```shell\npip install --upgrade midea-beautiful-dehumidifier\n```\n\n### Command line tool help\n\n```shell\nmidea_beautiful_dehumidifier-cli --help\nmidea_beautiful_dehumidifier-cli discover --help\nmidea_beautiful_dehumidifier-cli set --help\nmidea_beautiful_dehumidifier-cli status --help\n```\n\n### Discovery\n\nDiscover dehumidifier appliances on the local network:\n\n```shell\nmidea_beautiful_dehumidifier-cli discover --account ACCOUNT_EMAIL --password PASSWORD\n```\n\nShow tokens used to connect to appliances via local network\n```shell\nmidea_beautiful_dehumidifier-cli discover --account ACCOUNT_EMAIL --password PASSWORD --credentials\n```\n\nSearch for devices by providing explicit network address\n\n```shell\nmidea_beautiful_dehumidifier-cli discover --account ACCOUNT_EMAIL --password PASSWORD --network 192.0.1.3 --credentials\n```\n\nSearch for devices by providing explicit network range\n\n```shell\nmidea_beautiful_dehumidifier-cli discover --account ACCOUNT_EMAIL --password PASSWORD --network 192.0.1.2/24 --credentials\n```\n\n### Appliance status\n\nGet status of an appliance using known TOKEN and KEY (e.g. retrieved using `discover` command)\n\n```shell\nmidea_beautiful_dehumidifier-cli status --ip APPLIANCE_IP_ADDRESS --token TOKEN --key KEY\n```\n\nGet status of an appliance using Midea app credentials\n\n```shell\nmidea_beautiful_dehumidifier-cli status --ip APPLIANCE_IP_ADDRESS --account ACCOUNT_EMAIL --password PASSWORD\n```\n\nGet status of an appliance via Midea cloud API (note the usage of `--id` and `--cloud` options)\n\n```shell\nmidea_beautiful_dehumidifier-cli status --id APPLIANCE_ID --account ACCOUNT_EMAIL --password PASSWORD --cloud\n```\n\n### Set appliance attribute\n\nSet target relative humidity (0-100)\n\n```shell\nmidea_beautiful_dehumidifier-cli set --ip APPLIANCE_IP_ADDRESS --token TOKEN --key KEY --humidity 55\n```\nSets operating mode (number 1 to 4)\n```shell\nmidea_beautiful_dehumidifier-cli set --ip APPLIANCE_IP_ADDRESS --token TOKEN --key KEY --mode 1\n```\nSet fan strength (0-100)\n```shell\nmidea_beautiful_dehumidifier-cli set --ip APPLIANCE_IP_ADDRESS --token TOKEN --key KEY --fan 40\n```\nTurn on/off ion mode (0 or 1)\n```shell\nmidea_beautiful_dehumidifier-cli set --ip APPLIANCE_IP_ADDRESS --token TOKEN --key KEY --ion 1\n```\nTurn on/off ion mode (0 or 1)\n```shell\nmidea_beautiful_dehumidifier-cli set --ip APPLIANCE_IP_ADDRESS --token TOKEN --key KEY --on 1\n```\nTurn on/off pump (0 or 1)\n```shell\nmidea_beautiful_dehumidifier-cli set --ip APPLIANCE_IP_ADDRESS --token TOKEN --key KEY --pump 1\n```\nCombinations multiple settings\n```shell\nmidea_beautiful_dehumidifier-cli set --ip APPLIANCE_IP_ADDRESS --token TOKEN --key KEY --fan 60 --humidity 50\n```\nSet target humidity via Midea cloud API (note the usage of `--id` and `--cloud` options)\n```shell\nmidea_beautiful_dehumidifier-cli set --id APPLIANCE_ID --account ACCOUNT_EMAIL --password PASSWORD --humidity 55 --cloud\n```\n\n### Watch appliance status\n\nWatch appliance status allows to debug packets received when polling it. It will repeatedly retrieve appliance status with specified pauses between each poll. Polling can be interrupted via keyboard.\n\nContinuously watch status of an appliance using known TOKEN and KEY (e.g. retrieved using `discover` command) with interval of 10 seconds between polling\n\n```shell\nmidea_beautiful_dehumidifier-cli watch --ip APPLIANCE_IP_ADDRESS --token TOKEN --key KEY --interval 10\n```\n\nContinuously watch status of an appliance using Midea app credentials with interval of 30 seconds between polling\n\n```shell\nmidea_beautiful_dehumidifier-cli status --ip APPLIANCE_IP_ADDRESS --account ACCOUNT_EMAIL --password PASSWORD --interval 30\n```\n\n### Specifying log level\n\nLog level is specified using `--log` option:\n\nSet `DEBUG` level\n\n```shell\nmidea_beautiful_dehumidifier-cli --log DEBUG discover --account ACCOUNT_EMAIL --password PASSWORD\n```\nVery verbose level (may contain confidential information)\n```shell\nmidea_beautiful_dehumidifier-cli --log NOTSET discover --account ACCOUNT_EMAIL --password PASSWORD\n```\nSet `WARNING` level (default log level if option was not specified)\n```shell\nmidea_beautiful_dehumidifier-cli --log WARNING discover --account ACCOUNT_EMAIL --password PASSWORD\n```\n\n## Code examples\n\nDiscover appliances on local network:\n\n```python\nfrom midea_beautiful_dehumidifier import find_appliances\n\nappliances = find_appliances(\n    account=\"USER_EMAIL@example.com\",  # Account e-mail\n    password=\"secret_password\",  # Account password\n)\nfor appliance in appliances:\n    print(f\"{appliance!r}\")\n```\n\nGet appliance state:\n\n```python\nfrom midea_beautiful_dehumidifier import appliance_state\n\nappliance = appliance_state(\n    ip=192.0.1.2,  # APPLIANCE_IP_ADDRESS \n    token=\"TOKEN\",  # TOKEN obtained from Midea API\n    key=\"KEY\",  # Token KEY obtained from Midea API\n)\nprint(f\"{appliance!r}\")\n```\n\n\nGet appliance state from cloud:\n\n```python\nfrom midea_beautiful_dehumidifier import appliance_state\n\nappliance = appliance_state( \n    account=\"USER_EMAIL@example.com\",  # Account e-mail\n    password=\"secret_password\",  # Account password\n    id=123412341234,  # Appliance id obtained from Midea API \n)\nprint(f\"{appliance!r}\")\n```\n\n## Build the library\n\nLibrary is automatically built, packaged and published to [PyPI](https://pypi.org/project/midea-beautiful-dehumidifier/) when a Git Hub release is published.\n\n## See also\n\n* https://github.com/nbogojevic/homeassistant-midea-dehumidifier-lan\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nbogojevic/midea-beautiful-dehumidifier",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "midea-beautiful-dehumidifier",
    "package_url": "https://pypi.org/project/midea-beautiful-dehumidifier/",
    "platform": "",
    "project_url": "https://pypi.org/project/midea-beautiful-dehumidifier/",
    "project_urls": {
      "Homepage": "https://github.com/nbogojevic/midea-beautiful-dehumidifier"
    },
    "release_url": "https://pypi.org/project/midea-beautiful-dehumidifier/0.6.1/",
    "requires_dist": [
      "cryptography (>=3.4)",
      "requests (>=2.25.1)",
      "ifaddr (>=0.1.7)"
    ],
    "requires_python": "",
    "summary": "A library to control Midea dehumidifiers via the Local area network",
    "version": "0.6.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12729946,
  "releases": {
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecc74b3ccf42534024d527e6b1ab4cc3c81e09c1aebbba29093594bd574c290c",
          "md5": "8537a47dabd84266c7e1aff03214b3ca",
          "sha256": "520a8ae6b338b91f553979b11128aede6b62c6cf63291061badf3b7fb3662bbf"
        },
        "downloads": -1,
        "filename": "midea_beautiful_dehumidifier-0.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8537a47dabd84266c7e1aff03214b3ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28796,
        "upload_time": "2021-12-24T18:43:34",
        "upload_time_iso_8601": "2021-12-24T18:43:34.948886Z",
        "url": "https://files.pythonhosted.org/packages/ec/c7/4b3ccf42534024d527e6b1ab4cc3c81e09c1aebbba29093594bd574c290c/midea_beautiful_dehumidifier-0.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2251cf13b838dd59fa2914fe8c0f4f20a0e2745623c4b27126837e0e496a2cd0",
          "md5": "73e72f0c37b74ffcfe7f51ec31376012",
          "sha256": "220b0d63cc1f7aecf5b701d6741f1c06084952bb86cc678ec1c070267088f145"
        },
        "downloads": -1,
        "filename": "midea-beautiful-dehumidifier-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "73e72f0c37b74ffcfe7f51ec31376012",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27043,
        "upload_time": "2021-12-24T18:43:36",
        "upload_time_iso_8601": "2021-12-24T18:43:36.461180Z",
        "url": "https://files.pythonhosted.org/packages/22/51/cf13b838dd59fa2914fe8c0f4f20a0e2745623c4b27126837e0e496a2cd0/midea-beautiful-dehumidifier-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "041fcfcf3d016bada2333e7307ebb638be77b57583ba43e01073ec312181a58e",
          "md5": "71a1a42e1cb980703ea169e3eeb8f181",
          "sha256": "6597a08f883554542c5361b90ba7c9db465dd3fea8729ad1fa629dff9027550b"
        },
        "downloads": -1,
        "filename": "midea_beautiful_dehumidifier-0.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71a1a42e1cb980703ea169e3eeb8f181",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 31599,
        "upload_time": "2021-12-28T21:01:48",
        "upload_time_iso_8601": "2021-12-28T21:01:48.547750Z",
        "url": "https://files.pythonhosted.org/packages/04/1f/cfcf3d016bada2333e7307ebb638be77b57583ba43e01073ec312181a58e/midea_beautiful_dehumidifier-0.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "711213e870e23a4220cf57405ba6f8501d474067c3cb8d64f780f47551e8b1f6",
          "md5": "aa07144adf2ef34f5d6998cf6439fa86",
          "sha256": "307c29ab30d2952d91e6a533e8867596db51eafd4da30782219523591ffda1df"
        },
        "downloads": -1,
        "filename": "midea-beautiful-dehumidifier-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "aa07144adf2ef34f5d6998cf6439fa86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30053,
        "upload_time": "2021-12-28T21:01:50",
        "upload_time_iso_8601": "2021-12-28T21:01:50.155087Z",
        "url": "https://files.pythonhosted.org/packages/71/12/13e870e23a4220cf57405ba6f8501d474067c3cb8d64f780f47551e8b1f6/midea-beautiful-dehumidifier-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13e3fe9bb762eb5ebb41da0b503537c1044d775ab896ca9423e6f8546da87742",
          "md5": "fd7c24261ab26ae6a61aa2c1c43fe550",
          "sha256": "bae9f9a73e264a736986ba0128cb2c640ebf475e39ca4fa600b339bbc77d5323"
        },
        "downloads": -1,
        "filename": "midea_beautiful_dehumidifier-0.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fd7c24261ab26ae6a61aa2c1c43fe550",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 32788,
        "upload_time": "2021-12-30T18:28:06",
        "upload_time_iso_8601": "2021-12-30T18:28:06.907761Z",
        "url": "https://files.pythonhosted.org/packages/13/e3/fe9bb762eb5ebb41da0b503537c1044d775ab896ca9423e6f8546da87742/midea_beautiful_dehumidifier-0.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d348747c37d104d5c11466790cb76110b974f2997a476b1918aa9e831132d2d",
          "md5": "76d1919f049bfbcbf6a1949e8c95d460",
          "sha256": "68c884a64320754b70ed7e7a93537a63165bcfab1e59460240609a7333985d6e"
        },
        "downloads": -1,
        "filename": "midea-beautiful-dehumidifier-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "76d1919f049bfbcbf6a1949e8c95d460",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31288,
        "upload_time": "2021-12-30T18:28:08",
        "upload_time_iso_8601": "2021-12-30T18:28:08.223154Z",
        "url": "https://files.pythonhosted.org/packages/6d/34/8747c37d104d5c11466790cb76110b974f2997a476b1918aa9e831132d2d/midea-beautiful-dehumidifier-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "13e3fe9bb762eb5ebb41da0b503537c1044d775ab896ca9423e6f8546da87742",
        "md5": "fd7c24261ab26ae6a61aa2c1c43fe550",
        "sha256": "bae9f9a73e264a736986ba0128cb2c640ebf475e39ca4fa600b339bbc77d5323"
      },
      "downloads": -1,
      "filename": "midea_beautiful_dehumidifier-0.6.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fd7c24261ab26ae6a61aa2c1c43fe550",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 32788,
      "upload_time": "2021-12-30T18:28:06",
      "upload_time_iso_8601": "2021-12-30T18:28:06.907761Z",
      "url": "https://files.pythonhosted.org/packages/13/e3/fe9bb762eb5ebb41da0b503537c1044d775ab896ca9423e6f8546da87742/midea_beautiful_dehumidifier-0.6.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6d348747c37d104d5c11466790cb76110b974f2997a476b1918aa9e831132d2d",
        "md5": "76d1919f049bfbcbf6a1949e8c95d460",
        "sha256": "68c884a64320754b70ed7e7a93537a63165bcfab1e59460240609a7333985d6e"
      },
      "downloads": -1,
      "filename": "midea-beautiful-dehumidifier-0.6.1.tar.gz",
      "has_sig": false,
      "md5_digest": "76d1919f049bfbcbf6a1949e8c95d460",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 31288,
      "upload_time": "2021-12-30T18:28:08",
      "upload_time_iso_8601": "2021-12-30T18:28:08.223154Z",
      "url": "https://files.pythonhosted.org/packages/6d/34/8747c37d104d5c11466790cb76110b974f2997a476b1918aa9e831132d2d/midea-beautiful-dehumidifier-0.6.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}