{
  "info": {
    "author": "Saiprasad Balasubramanian",
    "author_email": "sai.cosmo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Cowin Tracker\n\nPython API wrapper for CoWin, India's digital platform launched by the government to help citizens register themselves\nfor the vaccination drive by booking an appointment at the nearby vaccination centres\n\nThe process to look-up for available slots to take the vaccine is tedious as you need to log in to the portal every time\n\nThis wrapper is meant to enable folks to build their own versions of a system to lookup for vaccine availablity either\nin a district or in a particular pin code.\n\nExample:\n\n```python\nfrom cowin_api import CoWinAPI\n\ncowin = CoWinAPI()\n\nstates = cowin.get_states()\nprint(states)\n```\n\n# Install\n\n`pip install cowin`\n\n# Usage\n\nThe wrapper currently covers four endpoints used by the CoWin portal specified below.\n\n## Initialize\n\n```python\nfrom cowin_api import CoWinAPI\n\ncowin = CoWinAPI()\n```\n\n## Get all the available states\n\nReturns the list of states in which vaccine drive is being conducted. This also returns the `state_id` which would be\nrequired in the subsequent requests.\n\n```python\nfrom cowin_api import CoWinAPI\n\ncowin = CoWinAPI()\nstates = cowin.get_states()\nprint(states)\n```\n\n<details>\n  <summary>Sample Response:</summary>\n\n```json\n{\n  \"states\": [\n    {\n      \"state_id\": 1,\n      \"state_name\": \"Andaman and Nicobar Islands\"\n    },\n    {\n      \"state_id\": 2,\n      \"state_name\": \"Andhra Pradesh\"\n    }\n  ],\n  \"ttl\": 24\n}\n```\n\n</details>\n\n---\n\n## Get all the available districts\n\nReturns the list of districts in a particular states in which vaccine drive is being conducted. This also returns\nthe `district_id` which would be required in the subsequent requests.\n\nIn this method, you would need to pass the `state_id` retrieved from the previous method.\n\n```python\nfrom cowin_api import CoWinAPI\n\nstate_id = '21'\ncowin = CoWinAPI()\ndistricts = cowin.get_districts(state_id)\nprint(districts)\n\n```\n\n<details>\n  <summary>Sample Response:</summary>\n\n```json\n{\n  \"districts\": [\n    {\n      \"district_id\": 395,\n      \"district_name\": \"Mumbai\"\n    },\n    {\n      \"district_id\": 363,\n      \"district_name\": \"Pune\"\n    }\n  ],\n  \"ttl\": 24\n}\n```\n\n</details>\n\n---\n\n## Get all the centers available in a district\n\nUse this method to lookup for centers based on a `district_id` or a list of `district_ids`. This method is broader than\nsearching by pin code as it covers the whole district.\n\nIn this method, you would need to pass the `district_id` retrieved from the previous methods. By default, the method\nlooks-up for slots with today's date. For any other dates pass the date in DD-MM-YYYY format.\n\n```python\nfrom cowin_api import CoWinAPI\n\ndistrict_id = '395'\ndate = '03-05-2021'  # Optional. Takes today's date by default\nmin_age_limit = 18  # Optional. By default returns centers without filtering by min_age_limit\n\ncowin = CoWinAPI()\navailable_centers = cowin.get_availability_by_district(district_id, date, min_age_limit)\nprint(available_centers)\n```\n\n<details>\n  <summary>Sample Response:</summary>\n\n```json\n{\n  \"centers\": [\n    {\n      \"center_id\": 561660,\n      \"name\": \"BKC COVID Facility4 (18-44 Yr)\",\n      \"state_name\": \"Maharashtra\",\n      \"district_name\": \"Mumbai\",\n      \"block_name\": \"Ward H East Corporation - MH\",\n      \"pincode\": 400051,\n      \"lat\": 19,\n      \"long\": 72,\n      \"from\": \"09:00:00\",\n      \"to\": \"17:00:00\",\n      \"fee_type\": \"Free\",\n      \"sessions\": [\n        {\n          \"session_id\": \"524ee1c1-550f-4e02-be36-79259175aa30\",\n          \"date\": \"02-05-2021\",\n          \"available_capacity\": 0,\n          \"min_age_limit\": 18,\n          \"vaccine\": \"\",\n          \"slots\": [\n            \"09:00AM-11:00AM\",\n            \"11:00AM-01:00PM\",\n            \"01:00PM-03:00PM\",\n            \"03:00PM-05:00PM\"\n          ]\n        },\n        {\n          \"session_id\": \"faf4a93e-fdf2-48f2-93de-254d19136d87\",\n          \"date\": \"03-05-2021\",\n          \"available_capacity\": 0,\n          \"min_age_limit\": 18,\n          \"vaccine\": \"\",\n          \"slots\": [\n            \"09:00AM-11:00AM\",\n            \"11:00AM-01:00PM\",\n            \"01:00PM-03:00PM\",\n            \"03:00PM-05:00PM\"\n          ]\n        }\n      ]\n    }\n  ]\n}\n```\n\n</details>\n\n\n---\n\n## Get all the available centers in a pin code\n\nUse this method to lookup for centers based on a `pin_code` or a list of `pin_codes`. By default, the method looks-up\nfor slots with today's date. For any other dates pass the date in DD-MM-YYYY format.\n\n```python\nfrom cowin_api import CoWinAPI\n\npin_code = \"400080\"\ndate = '03-05-2021'  # Optional. Default value is today's date\nmin_age_limit = 18  # Optional. By default returns centers without filtering by min_age_limit\n\ncowin = CoWinAPI()\navailable_centers = cowin.get_availability_by_pincode(pin_code, date, min_age_limit)\nprint(available_centers)\n```\n\n<details>\n  <summary>Sample Response:</summary>\n\n```json\n{\n  \"centers\": [\n    {\n      \"center_id\": 574933,\n      \"name\": \"SEVEN HIILS 2 Age (18-44)\",\n      \"state_name\": \"Maharashtra\",\n      \"district_name\": \"Mumbai\",\n      \"block_name\": \"Ward K East Corporation - MH\",\n      \"pincode\": 400059,\n      \"lat\": 19,\n      \"long\": 72,\n      \"from\": \"09:00:00\",\n      \"to\": \"17:00:00\",\n      \"fee_type\": \"Free\",\n      \"sessions\": [\n        {\n          \"session_id\": \"0645407e-fe72-4483-85d4-99ba4c567758\",\n          \"date\": \"03-05-2021\",\n          \"available_capacity\": 0,\n          \"min_age_limit\": 18,\n          \"vaccine\": \"\",\n          \"slots\": [\n            \"09:00AM-11:00AM\",\n            \"11:00AM-01:00PM\",\n            \"01:00PM-03:00PM\",\n            \"03:00PM-05:00PM\"\n          ]\n        },\n        {\n          \"session_id\": \"0c4bc740-5429-4359-a2a4-428cf8649e38\",\n          \"date\": \"08-05-2021\",\n          \"available_capacity\": 0,\n          \"min_age_limit\": 45,\n          \"vaccine\": \"\",\n          \"slots\": [\n            \"09:00AM-11:00AM\",\n            \"11:00AM-01:00PM\",\n            \"01:00PM-03:00PM\",\n            \"03:00PM-05:00PM\"\n          ]\n        }\n      ]\n    },\n    {\n      \"center_id\": 574931,\n      \"name\": \"SEVEN HIILS 1\",\n      \"state_name\": \"Maharashtra\",\n      \"district_name\": \"Mumbai\",\n      \"block_name\": \"Ward K East Corporation - MH\",\n      \"pincode\": 400059,\n      \"lat\": 19,\n      \"long\": 72,\n      \"from\": \"09:00:00\",\n      \"to\": \"18:00:00\",\n      \"fee_type\": \"Free\",\n      \"sessions\": [\n        {\n          \"session_id\": \"819ca013-67f5-4074-8614-f49b7c41878f\",\n          \"date\": \"08-05-2021\",\n          \"available_capacity\": 0,\n          \"min_age_limit\": 45,\n          \"vaccine\": \"\",\n          \"slots\": [\n            \"09:00AM-11:00AM\",\n            \"11:00AM-01:00PM\",\n            \"01:00PM-03:00PM\",\n            \"03:00PM-06:00PM\"\n          ]\n        }\n      ]\n    },\n    {\n      \"center_id\": 574935,\n      \"name\": \"SEVEN HIILS 3\",\n      \"state_name\": \"Maharashtra\",\n      \"district_name\": \"Mumbai\",\n      \"block_name\": \"Ward K East Corporation - MH\",\n      \"pincode\": 400059,\n      \"lat\": 19,\n      \"long\": 72,\n      \"from\": \"12:00:00\",\n      \"to\": \"17:00:00\",\n      \"fee_type\": \"Free\",\n      \"sessions\": [\n        {\n          \"session_id\": \"4cfc728b-ce00-4e39-9285-8679130fbcb0\",\n          \"date\": \"08-05-2021\",\n          \"available_capacity\": 0,\n          \"min_age_limit\": 45,\n          \"vaccine\": \"\",\n          \"slots\": [\n            \"12:00PM-01:00PM\",\n            \"01:00PM-02:00PM\",\n            \"02:00PM-03:00PM\",\n            \"03:00PM-05:00PM\"\n          ]\n        }\n      ]\n    }\n  ]\n}\n```\n\n</details>\n\n---\n\n# Notes:\n\nThe API's of CoWin may at times return a 401 Unauthorized response. To mitigate this we are passing user agents in the\nrequest. Still, if the issue persists please wait for a few minutes before trying again.\n\nPlease try not to spam the CoWin servers and try to keep a timeout between subsequent requests if you are polling at a\nfixed interval\n\n---\n\n# Roadmap:\n\n- [x] Add a filter to search by age group of 18-45 and 45+\n- [x] Allow user to search for multiple pin codes\n- [x] Allow user to search for multiple districts\n- [ ] Catch and raise custom exceptions\n- [ ] Implement Rate Limiting\n- [ ] Implement mocking in test cases\n\n---\n\n# Contributions\n\nContributions are always welcome!\n\nThe roadmap given above is just a line of thought. Please feel free to contribute any other method which you feel could\nbe helpful.\n\n---\n\n# License:\n\nMIT License\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/backtrackbaba/cowin",
    "keywords": "cowin,covid,vaccine",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cowin",
    "package_url": "https://pypi.org/project/cowin/",
    "platform": "",
    "project_url": "https://pypi.org/project/cowin/",
    "project_urls": {
      "Bug Reports": "https://github.com/backtrackbaba/cowin/issues",
      "Homepage": "https://github.com/backtrackbaba/cowin",
      "Source": "https://github.com/backtrackbaba/cowin"
    },
    "release_url": "https://pypi.org/project/cowin/0.0.5/",
    "requires_dist": [
      "fake-useragent (==0.1.11)",
      "pytest (==6.2.3)",
      "requests (==2.25.1)"
    ],
    "requires_python": ">=3.6, <4",
    "summary": "Python wrapper for CoWin API",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10294206,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7883569384160dce535a5aeff7623a95279e1c45944925c30c8ed2897f366c60",
          "md5": "165f56ec08422505ea242fc54dfe6cf6",
          "sha256": "bb798b2b6bcb131038a42a248e29cf0180bd0a9b57de43ed8e813c1505945069"
        },
        "downloads": -1,
        "filename": "cowin-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "165f56ec08422505ea242fc54dfe6cf6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 3297,
        "upload_time": "2021-05-02T15:22:33",
        "upload_time_iso_8601": "2021-05-02T15:22:33.826834Z",
        "url": "https://files.pythonhosted.org/packages/78/83/569384160dce535a5aeff7623a95279e1c45944925c30c8ed2897f366c60/cowin-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb5d6cae0591ff18d8c2919243fd8860d34c5a1d5bbe592fa856bce919f51b78",
          "md5": "634bae1c2784938392dcb9a2a39c11a2",
          "sha256": "8cdec5619c257985932b58513cb63669e1b30995b5ed0b11991100f82106d0f2"
        },
        "downloads": -1,
        "filename": "cowin-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "634bae1c2784938392dcb9a2a39c11a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 2741,
        "upload_time": "2021-05-02T15:22:35",
        "upload_time_iso_8601": "2021-05-02T15:22:35.453407Z",
        "url": "https://files.pythonhosted.org/packages/cb/5d/6cae0591ff18d8c2919243fd8860d34c5a1d5bbe592fa856bce919f51b78/cowin-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "327e5ef0a8af84d63d0654a36b530cba3dd01f862111395d4f8471ee0cfd063b",
          "md5": "7ebdaa086ac091652d074f360c4b5d27",
          "sha256": "3780d0f5cde8da472db09f53fcffcd88240ff2774cac6ae40bc055d260562571"
        },
        "downloads": -1,
        "filename": "cowin-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ebdaa086ac091652d074f360c4b5d27",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 4774,
        "upload_time": "2021-05-02T16:04:00",
        "upload_time_iso_8601": "2021-05-02T16:04:00.718048Z",
        "url": "https://files.pythonhosted.org/packages/32/7e/5ef0a8af84d63d0654a36b530cba3dd01f862111395d4f8471ee0cfd063b/cowin-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f911240c8d209ed0514e2e78285ed3b57673d6c1d9b431728d1dbbcd471e72f5",
          "md5": "95442e1d82aa4a30f05b3bf98b433a2d",
          "sha256": "4f93e839f7527fbcfcf12f700ee3fd955e58af84313a63591362122ae5252492"
        },
        "downloads": -1,
        "filename": "cowin-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "95442e1d82aa4a30f05b3bf98b433a2d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 4945,
        "upload_time": "2021-05-02T16:04:03",
        "upload_time_iso_8601": "2021-05-02T16:04:03.016567Z",
        "url": "https://files.pythonhosted.org/packages/f9/11/240c8d209ed0514e2e78285ed3b57673d6c1d9b431728d1dbbcd471e72f5/cowin-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b678248acc687ff7ab70588936b8ada61378d20c239809e7a8a56ea3d47c13d",
          "md5": "0359b46fd4eaf4b7d351c372faac5ee4",
          "sha256": "19c619aa3dbe34b2d15f17647cdd18411411ae7fec378a07b04f776a5b8e71c9"
        },
        "downloads": -1,
        "filename": "cowin-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0359b46fd4eaf4b7d351c372faac5ee4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 5282,
        "upload_time": "2021-05-03T04:39:17",
        "upload_time_iso_8601": "2021-05-03T04:39:17.803585Z",
        "url": "https://files.pythonhosted.org/packages/0b/67/8248acc687ff7ab70588936b8ada61378d20c239809e7a8a56ea3d47c13d/cowin-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eab9283cd460133f167d2f2f4964b4cc7c7571ba690a3780ae803057cf839140",
          "md5": "a3eb5ec40738438c58345d41352e5869",
          "sha256": "a971a0b86fe311f716a77e05f021fc29bd76f64bda3223022644d220d50377ad"
        },
        "downloads": -1,
        "filename": "cowin-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a3eb5ec40738438c58345d41352e5869",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 5468,
        "upload_time": "2021-05-03T04:39:20",
        "upload_time_iso_8601": "2021-05-03T04:39:20.944455Z",
        "url": "https://files.pythonhosted.org/packages/ea/b9/283cd460133f167d2f2f4964b4cc7c7571ba690a3780ae803057cf839140/cowin-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1a893e547525a8f2653846175d7da71e0fce96c0915b7f7f169978e7ec913f6",
          "md5": "0e1487fc28692b836ea0daa622a08d94",
          "sha256": "e0035ad2480c347b7715fe5f4a67ba3d86c5abc4cd1cd45e69c8cb80b000d152"
        },
        "downloads": -1,
        "filename": "cowin-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e1487fc28692b836ea0daa622a08d94",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 5264,
        "upload_time": "2021-05-04T14:02:41",
        "upload_time_iso_8601": "2021-05-04T14:02:41.739596Z",
        "url": "https://files.pythonhosted.org/packages/c1/a8/93e547525a8f2653846175d7da71e0fce96c0915b7f7f169978e7ec913f6/cowin-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "623c8b0cbb70a2fccea2589d7ef923ca36fa70d459bdfd21cb1b1af1ac9d8db1",
          "md5": "9950e39fac30aa99aa63f4ebecaf3b22",
          "sha256": "c7a9c7f84d4a7f02b3200cc412cb9888c2d8d2bb30f2b9ef091e8e79c7a15f86"
        },
        "downloads": -1,
        "filename": "cowin-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9950e39fac30aa99aa63f4ebecaf3b22",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 5453,
        "upload_time": "2021-05-04T14:02:45",
        "upload_time_iso_8601": "2021-05-04T14:02:45.729596Z",
        "url": "https://files.pythonhosted.org/packages/62/3c/8b0cbb70a2fccea2589d7ef923ca36fa70d459bdfd21cb1b1af1ac9d8db1/cowin-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d82215a654a6e6c66749f652c984f73f59c146b2cb87456006ae240e94ba72b8",
          "md5": "85d933d8e8c7f2279dc2f137295e88f9",
          "sha256": "8640ca8d99e2abcaddad178a26a635b80a2a40f0c69cacbb0ede124c9d323905"
        },
        "downloads": -1,
        "filename": "cowin-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "85d933d8e8c7f2279dc2f137295e88f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 5704,
        "upload_time": "2021-05-08T10:32:11",
        "upload_time_iso_8601": "2021-05-08T10:32:11.698787Z",
        "url": "https://files.pythonhosted.org/packages/d8/22/15a654a6e6c66749f652c984f73f59c146b2cb87456006ae240e94ba72b8/cowin-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8da00c79dba7beb879556d8f6c19c013b7c89067bb7ae8915d086a9c0279d5e",
          "md5": "270427fb93b70d6e25edccbdce933d11",
          "sha256": "7d4b66a456b602017ba461a25c9cfc4dfc6abcc10752a85945b903b1c39ab1d9"
        },
        "downloads": -1,
        "filename": "cowin-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "270427fb93b70d6e25edccbdce933d11",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 5892,
        "upload_time": "2021-05-08T10:32:16",
        "upload_time_iso_8601": "2021-05-08T10:32:16.699417Z",
        "url": "https://files.pythonhosted.org/packages/d8/da/00c79dba7beb879556d8f6c19c013b7c89067bb7ae8915d086a9c0279d5e/cowin-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d82215a654a6e6c66749f652c984f73f59c146b2cb87456006ae240e94ba72b8",
        "md5": "85d933d8e8c7f2279dc2f137295e88f9",
        "sha256": "8640ca8d99e2abcaddad178a26a635b80a2a40f0c69cacbb0ede124c9d323905"
      },
      "downloads": -1,
      "filename": "cowin-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "85d933d8e8c7f2279dc2f137295e88f9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <4",
      "size": 5704,
      "upload_time": "2021-05-08T10:32:11",
      "upload_time_iso_8601": "2021-05-08T10:32:11.698787Z",
      "url": "https://files.pythonhosted.org/packages/d8/22/15a654a6e6c66749f652c984f73f59c146b2cb87456006ae240e94ba72b8/cowin-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d8da00c79dba7beb879556d8f6c19c013b7c89067bb7ae8915d086a9c0279d5e",
        "md5": "270427fb93b70d6e25edccbdce933d11",
        "sha256": "7d4b66a456b602017ba461a25c9cfc4dfc6abcc10752a85945b903b1c39ab1d9"
      },
      "downloads": -1,
      "filename": "cowin-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "270427fb93b70d6e25edccbdce933d11",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <4",
      "size": 5892,
      "upload_time": "2021-05-08T10:32:16",
      "upload_time_iso_8601": "2021-05-08T10:32:16.699417Z",
      "url": "https://files.pythonhosted.org/packages/d8/da/00c79dba7beb879556d8f6c19c013b7c89067bb7ae8915d086a9c0279d5e/cowin-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}