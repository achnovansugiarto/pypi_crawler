{
  "info": {
    "author": "Tim Jagenberg",
    "author_email": "tim.jagenberg@piscada.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: Other/Proprietary License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development"
    ],
    "description": "# Picada Cloud\n\nLibrary for the Piscada Cloud including authentication and data access.\n\n## Features\n\n- Login to Piscada Cloud and retrieve credentials\n- Persist credentialss locally\n- Read historic values for multiple tags as a Pandas DataFrame\n- Possible apply time-based linear interpolation to measurements\n- Utils to add fractional representations of periods: day, week, year\n\n## Install\n\nInstall from PyPI:\n\n```shell\npip install piscada-cloud\n```\n\nor\n\n```shell\npoetry add piscada-cloud\n```\n\nInstall from local source:\n\n```shell\npip install --editable path/to/piscada_cloud\n```\n\nor\n\n```shell\npoetry add path/to/piscada_cloud\n```\n\n## Usage\n\n### Authentication\n\nTo log-in interactively and persist the retrieved credentials on disk (under `$HOME/.piscada_credentials`) simply run:\n\n```shell\npython -m piscada_cloud.auth\n```\n\nor\n\n```shell\npoetry run python -m piscada_cloud.auth\n```\n\nAny future invocation, e.g. `credentials = piscada_cloud.auth.persisted_login()` will return the credentials on disk without user interaction.\n\n`credentials = piscada_cloud.auth.login(username, password, host)` can be used to retrieve the credentials programmatically.\n\n### Getting Data\n\nThe credentials retrieved through the login can be used to get the host and acccesss-token for the historical data API:\n\n```python\nfrom piscada_cloud import auth\n\ncredentials = auth.login_persisted()\nhost, token = auth.get_historian_credentials(credentials)\n```\n\nThe host and token can be used to retrieve historic data as a Pandas DataFrame.\nThe `get_historic_values` method takes a row of parameters:\n\n- `start`: Datetime object\n- `end`: Datetime object\n- `tags`: List of `Tag` objects\n- `host` (optional): Endpoint to which we send the historian queries. e.g. `historian.piscada.online`.\n- `token` (optional): Access token, associated with the endpoint, used for authentication.\n\nThe if the `host` or `token` arguments are not provided, the environment variables `HISTORIAN_HOST` and `HISTORIAN_TOKEN` are used in stead, respectively.\n\n```python\nfrom datetime import datetime, timedelta, timezone\n\nfrom piscada_cloud.data import get_historic_values\nfrom piscada_cloud.mappings import Tag\n\n\ntags = [\n    Tag(controller_id=\"fe7bd2c3-6c20-44d4-aecc-df5822457400\", name=\"ServerCpuUsage\"),\n    Tag(controller_id=\"fe7bd2c3-6c20-44d4-aecc-df5822457400\", name=\"ServerMemoryUsage\"),\n]\n\ndf = get_historic_values(\n    start=datetime.now(timezone.utc) - timedelta(days=30),\n    end=datetime.now(timezone.utc),\n    tags=tags\n)\n```\n\n## Write Data\n\nIn this example the column `oCU135001RT90_MV` is selected and the average value is calculated using the method `.mean()`.\n\nTo write the result back to the Piscada Cloud, the `data` module offers the `write_value` function. It takes these arguments:\n\n- `tag`: A `Tag` object\n- `value`: The float, string, or dict value to write to the tag. Float and string will be sent as is, dict will be serialised as JSON string.\n- `timestamp` (optional): The timestamp in milliseconds since epoch at which to write the value, by default `int(time.time() * 1000)`.\n- `host`: Endpoint to send post request. Overrides the default, which is `os.environ['WRITEAPI_HOST']`.\n- `token`: Access token accosiated with the host. Overrides the default, which is `os.environ['WRITEAPI_TOKEN']`.\n\nThe `Tag.name` must use the prefix `py_` as this is the only namespace allowed for writing data via the API.\n\n```python\nfrom piscada_cloud.data import write_value\nfrom piscada_cloud.mappings import Tag\n\n\nmean = df[\"oCU135001RT90_MV\"].mean()\nresponse = write_value(Tag(controller_id=\"0798ac4a-4d4f-4648-95f0-12676b3411d5\", name=\"py_oCU135001RT90_MV_1h_mean\"), value=mean)\nif response.ok:\n    print(\"OK\")\nelse:\n    print(response.text)\n```\n\nThe `response` returned by the `write_value` method allows to check if the writing of data was successful `response.ok == True`.\n\n### Manipulations\n\nIn order to support analysis in the context of periodic patters, the `manipulations` allow you to add fractional representations of day, week, and year as additional columns in the DataFrame:\n\n- 00:00:00 -> 0.0 --- 23:59:59 -> 1.0\n- Monday 00:00:00 -> 0.0 --- Sunday 23:59:59 -> 1.0\n- 1st Jan. 00:00:00 -> 0.0 --- 31st Dec. 23:59:59 -> 1.0\n\n```python\nfrom piscada_cloud import manipulations\n\nmanipulations.add_weekdays(data)\nmanipulations.add_day_fraction(data)\nmanipulations.add_week_fraction(data)\nmanipulations.add_year_fraction(data)\n```\n\n## Development\n\nEnable the provided git pre commit hook: `ln -s ./qa.sh .git/hooks/pre-commit`\n\n## Requirements\n\nThe package will support the two latest version of Python.\n\n## Authors\n\n- Tim Jagenberg [tim.jagenberg@piscada.com](mailto:tim.jagenberg@piscada.com)\n- Filip Henrik Larsen [filip.larsen@piscada.com](mailto:filip.larsen@piscada.com)\n\n## License\n\nÂ© Piscada AS 2019\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://piscada.com/",
    "keywords": "piscada,automation,building-automation,fish-farming,assisted-living",
    "license": "Other/Proprietary License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "piscada-cloud",
    "package_url": "https://pypi.org/project/piscada-cloud/",
    "platform": null,
    "project_url": "https://pypi.org/project/piscada-cloud/",
    "project_urls": {
      "Homepage": "https://piscada.com/"
    },
    "release_url": "https://pypi.org/project/piscada-cloud/7.0.5/",
    "requires_dist": [
      "requests (>=2.26.0,<3.0.0)",
      "pandas (>=1.3.4,<2.0.0)",
      "isort (>=5.10.1,<6.0.0)",
      "toml (>=0.10.2,<0.11.0)",
      "numpy (>=1.23.4,<2.0.0)",
      "pylint (>=2.15.5,<3.0.0)",
      "pyarrow (>=10.0.1,<11.0.0)"
    ],
    "requires_python": ">=3.10,<4.0",
    "summary": "Library for the Piscada Cloud including authentication and data access.",
    "version": "7.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16903229,
  "releases": {
    "6.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c6d8578a77cbfae9acf0ca5917612a3f0f7e70447caa644edca07f9ff0e37d5",
          "md5": "b3c5a9aae912c9286f1314351368f8b9",
          "sha256": "4f9cd9d4eb541e00e6819022f6b45e59f7397b090faaaa308749a981ef23fc9d"
        },
        "downloads": -1,
        "filename": "piscada_cloud-6.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3c5a9aae912c9286f1314351368f8b9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 18101,
        "upload_time": "2021-06-10T14:14:40",
        "upload_time_iso_8601": "2021-06-10T14:14:40.597974Z",
        "url": "https://files.pythonhosted.org/packages/8c/6d/8578a77cbfae9acf0ca5917612a3f0f7e70447caa644edca07f9ff0e37d5/piscada_cloud-6.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b5e3da5ccf615ed102bd3311e2f0d6126569c9599ca6d12b4e294db9ba6ed2e",
          "md5": "5cab86b1a92b7a2a165283f52f93f52f",
          "sha256": "2cb5528ff547ddcffeea28d3b2ce40086a50f9533c327e5045f4113df3dc8837"
        },
        "downloads": -1,
        "filename": "piscada_cloud-6.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5cab86b1a92b7a2a165283f52f93f52f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 17254,
        "upload_time": "2021-06-10T14:14:41",
        "upload_time_iso_8601": "2021-06-10T14:14:41.767258Z",
        "url": "https://files.pythonhosted.org/packages/1b/5e/3da5ccf615ed102bd3311e2f0d6126569c9599ca6d12b4e294db9ba6ed2e/piscada_cloud-6.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "7.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4ad6a422cae56bd6e1c45ea2ca0257422a4806c889c06387414e156597e38d6",
          "md5": "3652d741ab06baed5d199c20bbb5ab49",
          "sha256": "4e0bda88d5e6d2d39efdce10646456a530ad51055a5235b861b55ce6e344ea4c"
        },
        "downloads": -1,
        "filename": "piscada_cloud-7.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3652d741ab06baed5d199c20bbb5ab49",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 19855,
        "upload_time": "2022-02-24T08:15:35",
        "upload_time_iso_8601": "2022-02-24T08:15:35.292376Z",
        "url": "https://files.pythonhosted.org/packages/d4/ad/6a422cae56bd6e1c45ea2ca0257422a4806c889c06387414e156597e38d6/piscada_cloud-7.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3cfbda8e21b90570e27a78e2e0eb91b5da7640b7cffb6a9444b77ab7606c33e0",
          "md5": "4ec65641e83539c28cf7bc19df26e3cf",
          "sha256": "82e02af3884a09e2b6cea6b097346e2eb01e5a569e526e867037c451b4b6c4c9"
        },
        "downloads": -1,
        "filename": "piscada_cloud-7.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4ec65641e83539c28cf7bc19df26e3cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 19143,
        "upload_time": "2022-02-24T08:15:36",
        "upload_time_iso_8601": "2022-02-24T08:15:36.866565Z",
        "url": "https://files.pythonhosted.org/packages/3c/fb/da8e21b90570e27a78e2e0eb91b5da7640b7cffb6a9444b77ab7606c33e0/piscada_cloud-7.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "7.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4a88ee13c6f8bd1956f5a7f91988497430ff445d2aa80fec44657dd46ffb1c7",
          "md5": "bc8c2810be68efb0dc1b8d6f48f2c13d",
          "sha256": "6c6516e42c3cdd0558aa42ea4f878e5c4554c0b4a9b2f9e3c5346c55bb0965fa"
        },
        "downloads": -1,
        "filename": "piscada_cloud-7.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc8c2810be68efb0dc1b8d6f48f2c13d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 20008,
        "upload_time": "2022-10-12T13:59:43",
        "upload_time_iso_8601": "2022-10-12T13:59:43.627189Z",
        "url": "https://files.pythonhosted.org/packages/c4/a8/8ee13c6f8bd1956f5a7f91988497430ff445d2aa80fec44657dd46ffb1c7/piscada_cloud-7.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "162ed4e91a8f2f25c2ab3fa23d29f2d5df8891330c881670091ac2e8fb9d6025",
          "md5": "8c4e9c71a0cc408b5f961bbc589323e9",
          "sha256": "25f8b6d04268227f2642585a4789810b4047f8d49fec74b7644088e50a4ffcdf"
        },
        "downloads": -1,
        "filename": "piscada_cloud-7.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8c4e9c71a0cc408b5f961bbc589323e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 19244,
        "upload_time": "2022-10-12T13:59:44",
        "upload_time_iso_8601": "2022-10-12T13:59:44.738154Z",
        "url": "https://files.pythonhosted.org/packages/16/2e/d4e91a8f2f25c2ab3fa23d29f2d5df8891330c881670091ac2e8fb9d6025/piscada_cloud-7.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "7.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27e942ea0b00a28c0cbe1eddf012d6b9560cff74279c0ff3ddb42b51ca07ffac",
          "md5": "b772cfc01eac17d7ca9ddf3f114fcc5f",
          "sha256": "75af2dd6e7f79821d3c54c717697833e23a5e2a307af90160ac3bf5153a7c381"
        },
        "downloads": -1,
        "filename": "piscada_cloud-7.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b772cfc01eac17d7ca9ddf3f114fcc5f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 20418,
        "upload_time": "2023-02-17T13:58:39",
        "upload_time_iso_8601": "2023-02-17T13:58:39.020600Z",
        "url": "https://files.pythonhosted.org/packages/27/e9/42ea0b00a28c0cbe1eddf012d6b9560cff74279c0ff3ddb42b51ca07ffac/piscada_cloud-7.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c356fd71deb4f31faf566ebf38840cf03dcfa5990266eb5cca16c76c5b3ff8b1",
          "md5": "b016d5a3e7378aa6924ed74a58f18e45",
          "sha256": "9a8adeec9828337c85d036e198316273d89bf4d1d70411c3bf849402561e0504"
        },
        "downloads": -1,
        "filename": "piscada_cloud-7.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b016d5a3e7378aa6924ed74a58f18e45",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 19593,
        "upload_time": "2023-02-17T13:58:40",
        "upload_time_iso_8601": "2023-02-17T13:58:40.187778Z",
        "url": "https://files.pythonhosted.org/packages/c3/56/fd71deb4f31faf566ebf38840cf03dcfa5990266eb5cca16c76c5b3ff8b1/piscada_cloud-7.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "27e942ea0b00a28c0cbe1eddf012d6b9560cff74279c0ff3ddb42b51ca07ffac",
        "md5": "b772cfc01eac17d7ca9ddf3f114fcc5f",
        "sha256": "75af2dd6e7f79821d3c54c717697833e23a5e2a307af90160ac3bf5153a7c381"
      },
      "downloads": -1,
      "filename": "piscada_cloud-7.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b772cfc01eac17d7ca9ddf3f114fcc5f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 20418,
      "upload_time": "2023-02-17T13:58:39",
      "upload_time_iso_8601": "2023-02-17T13:58:39.020600Z",
      "url": "https://files.pythonhosted.org/packages/27/e9/42ea0b00a28c0cbe1eddf012d6b9560cff74279c0ff3ddb42b51ca07ffac/piscada_cloud-7.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c356fd71deb4f31faf566ebf38840cf03dcfa5990266eb5cca16c76c5b3ff8b1",
        "md5": "b016d5a3e7378aa6924ed74a58f18e45",
        "sha256": "9a8adeec9828337c85d036e198316273d89bf4d1d70411c3bf849402561e0504"
      },
      "downloads": -1,
      "filename": "piscada_cloud-7.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "b016d5a3e7378aa6924ed74a58f18e45",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 19593,
      "upload_time": "2023-02-17T13:58:40",
      "upload_time_iso_8601": "2023-02-17T13:58:40.187778Z",
      "url": "https://files.pythonhosted.org/packages/c3/56/fd71deb4f31faf566ebf38840cf03dcfa5990266eb5cca16c76c5b3ff8b1/piscada_cloud-7.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}