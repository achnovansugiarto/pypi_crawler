{
  "info": {
    "author": "ChenXinqun",
    "author_email": "chenxinqun163@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "conciseSchedules -- 这是一个简洁的兼容crontab语法的定时器工具\n==========================\n[![PyPI](https://img.shields.io/pypi/v/conciseSchedules.svg)](https://pypi.org/project/conciseSchedules/)\n\n## conciseSchedules 有两种工作模式:\n一种是\"crontab_tasks\", 兼容 crontab 语法, 只支持以shell启动脚本的方式启动定时器, 即subprocess.Popen所支持的方式启动. 最小时间颗粒度为分钟.\n一种是\"schedule_tasks\",  既兼容 crontab 语法, 又支持 conciseSchedules 语法, 只支持通过 python callable 对象启动定时器, 即threading.Thread所支持的方式启动. 最小时间颗粒度为秒.\n##### 首先, 介绍一下\"schedule_tasks\"工作模式, 要使用它很简单:\nconciseSchedules {   \n                    'second': int or None or tuple(strat, end),\n                    'minute': int or None or tuple(strat, end),\n                    'hour': int or None or tuple(strat, end),\n                    'day': int or None or tuple(strat, end),\n                    'month': int or None or tuple(strat, end),\n                    'weekday': int or None or tuple(strat, end),\n                }\n1.不需要的时间颗粒度, 可以不传, 即为None. 至少要有一个颗粒度不为None. \n所有为None的颗粒度, 如果比有值的颗粒度小, 则设置为1, 如果比有值的颗粒度大, 则设置为all.\n2.如果传int类型,  >= 0 的值则表示明确的时间, 即第几(秒, 分, 时, 日, 月) 或 周几, 其中颗粒度为天的时候, 传0无效. 如果传-1, 则相当于crontab \"*/1\"的语法, 即\"每1(秒, 分, 时, 日, 月, 周)\", 其中'weekday' 0表示星期日, 1-6表示星期一至星期六, 传-1的话, 会被解释为每周启动一次, 且时间设定为每周1的1点1分启动.\n3.如果传二元素元祖, 则相当于crontab \"int-int\" 即从几至几.\n``` \n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# test.py\n\n\ndef test():\n    print('hello conciseSchedules!', test.__name__)\n\n\nif __name__ == '__main__':\n    import conciseSchedules as scheduler\n\n    tasks_conf = {\n        'schedule_tasks':[\n        {'schedule':{'second': -1}, 'target': test,}    # 每秒钟启动一次\n        {'schedule':{'minute': -1}, 'target': test,}    # 每分钟启动一次. 默认是每分钟的第1秒.\n        {'schedule':{'second': 15, 'minute': (10-20))}, 'target': test,}    # 每小时的10-12分的第15秒启动\n        {'schedule':{'hour': -1)}, 'target': test,}           # 每小时启动一次.默认是每小时的1分1秒.\n        {'schedule':{'minute': 1, 'hour': 10, 'day': 1, 'month': 10)}, 'target': test,}     # 每年10月1日10点1分启动.\n        ], \n    }\n    scheduler.set_tasks(tasks_conf)\n    scheduler.run_loop()\n\n```\n这样就创建了五个定时器.\n\n#### 你还可以这样:\n``` \n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# test.py\n\n\ndef test():\n    print('hello conciseSchedules!', test.__name__)\n\n\nif __name__ == '__main__':\n    import conciseSchedules as scheduler\n\n    task = {'schedule_tasks': {'schedule':{'second': -1}, 'target': test,}}    # 每秒钟启动一次\n    scheduler.add_task(task)\n    scheduler.run_loop()\n\n``` \n这样动态添加单个任务.\n\n#### 同时你还可以使用装饰器:\n``` \n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# test.py\n\nimport conciseSchedules as scheduler\n\n\n@scheduler.task(schedule={'second': -1})\ndef test():\n    print('hello conciseSchedules!', test.__name__)\n\n\nif __name__ == '__main__':\n    scheduler.run_loop()\n\n``` \n#### 需要注意的是, 装饰器, 只支持独立的 function, 不支持任何挂靠在类下面的 method. 如果有需要用到类的时候, 请用 function 封装一层.\n\n##### 如果需要给被装饰的函数传参, 你可以这样:\n``` \n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# test.py\n\nimport conciseSchedules as scheduler\n\n\n@scheduler.task(schedule={'second': -1}, args=('Tony'), kwargs={'age': 18})\ndef test(name, age=None):\n    print('hello conciseSchedules!', name, age)\n\n\nif __name__ == '__main__':\n    scheduler.run_loop()\n\n``` \n\n#### 如果你要在 \"crontab_tasks\" 模式使用 crontab 语法, 把以上例子中 'schedule': {} 关键字改成 'crontab': '*/1 * * * * *' 就行了. 要注意 'schedule_tasks' 工作模式下, crontab 支持秒级颗粒度, 第一位是 \"秒\", 第二位及以后是 \"分 时 日 月 周\". \n\n================================= \n### 下面是\"crontab_tasks\"工作模式:\ncrontab \"分 时 日 月 周\" 共五种颗粒度, 用空格隔开. 支持语法: \"*\" 任何时间, \"*/3\" 每逢3(能整除3), \"1-10\" 在 1至10之间, \"1\" 精确到1. 例如: \"*/1 1 * * *\" 则表示每天1点的每1分钟启动. 如果 周 的参数是 \"*/1\", 则表示每周启动一次, 且启动时间在周1, 如果是\"*/> 1\", 则会被解释成\"能 整除 大于1的数的星期几启动\" 而不是每年的第几周启动. 至于其它, 请参考 crontab 文档.\n``` \n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# test.py\ndef test():\n    print('hello conciseSchedules!', test.__name__)\n\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# start.py\n\n\nif __name__ == '__main__':\n    import conciseSchedules as scheduler\n    tasks_conf = {\n        'crontab_tasks':[\n        {'crontab':'*/1 ', 'target': test,}    # 每分钟启动一次. 默认是每分钟的第1秒.\n        {'crontab':\"\", 'target': test,}    # 每小时的10-12分启动\n        {'crontab':{'hour': -1)}, 'target': test,}           # 每小时启动一次.默认是每小时的1分1秒.\n        {'crontab':{'minute': 1, 'hour': 10, 'day': 1, 'month': 10)}, 'target': test,}     # 每年10月1日10点1分启动.\n        ], \n    }\n    scheduler.set_tasks(tasks_conf)\n    scheduler.run_loop()\n    \"\"\"如果要配合系统 crontab 来使用, 请使用 scheduler.run() 方法\"\"\"\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/chenxinqun/conciseSchedules",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "ChenXinqun <chenxinqun163@163.com>",
    "maintainer_email": "chenxinqun163@163.com",
    "name": "conciseSchedules",
    "package_url": "https://pypi.org/project/conciseSchedules/",
    "platform": "",
    "project_url": "https://pypi.org/project/conciseSchedules/",
    "project_urls": {
      "Homepage": "https://github.com/chenxinqun/conciseSchedules"
    },
    "release_url": "https://pypi.org/project/conciseSchedules/1.0.3/",
    "requires_dist": [
      "pytz",
      "tzlocal"
    ],
    "requires_python": ">=3.5.0",
    "summary": "A Concise Schedules module -- conciseSchedules for Python.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5512380,
  "releases": {
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66db1befa684d56245e5a35390db0df32db01d5b9eca835ebaa35f08fa39bb92",
          "md5": "4d3b2f87a11d5ec725ffaa8963a92dcf",
          "sha256": "ececf03751b3a774efc8dddee697d777c00c601ee8de9fae6aecd8a1badfe0b2"
        },
        "downloads": -1,
        "filename": "conciseSchedules-1.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d3b2f87a11d5ec725ffaa8963a92dcf",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5.0",
        "size": 8472,
        "upload_time": "2019-06-28T08:31:46",
        "upload_time_iso_8601": "2019-06-28T08:31:46.928157Z",
        "url": "https://files.pythonhosted.org/packages/66/db/1befa684d56245e5a35390db0df32db01d5b9eca835ebaa35f08fa39bb92/conciseSchedules-1.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5f53a580cc4df3680b2cd03cd9c0aeee999f7b360bc0c1f84f5c9165188c481",
          "md5": "36d3255f29c732310d88b41580fa42a5",
          "sha256": "d29bf29d89707cfe5df88f410075b6b14207c20d3011f26881b71ac3ba5ffeab"
        },
        "downloads": -1,
        "filename": "conciseSchedules-1.0.3-py3.6.egg",
        "has_sig": false,
        "md5_digest": "36d3255f29c732310d88b41580fa42a5",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "requires_python": ">=3.5.0",
        "size": 15275,
        "upload_time": "2019-06-28T08:31:48",
        "upload_time_iso_8601": "2019-06-28T08:31:48.446781Z",
        "url": "https://files.pythonhosted.org/packages/c5/f5/3a580cc4df3680b2cd03cd9c0aeee999f7b360bc0c1f84f5c9165188c481/conciseSchedules-1.0.3-py3.6.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d05911c16ac80622da3ca59321f4fe58fc3824eba51fb6d35873b75ff9a4bbc",
          "md5": "4509735f61de2e2702f0795a78a38e79",
          "sha256": "291345bb5a6709e7eb838e500180adf05c233004d32f4232b0dee41bfdaf463f"
        },
        "downloads": -1,
        "filename": "conciseSchedules-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4509735f61de2e2702f0795a78a38e79",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.0",
        "size": 8665,
        "upload_time": "2019-06-28T08:31:50",
        "upload_time_iso_8601": "2019-06-28T08:31:50.180598Z",
        "url": "https://files.pythonhosted.org/packages/2d/05/911c16ac80622da3ca59321f4fe58fc3824eba51fb6d35873b75ff9a4bbc/conciseSchedules-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "66db1befa684d56245e5a35390db0df32db01d5b9eca835ebaa35f08fa39bb92",
        "md5": "4d3b2f87a11d5ec725ffaa8963a92dcf",
        "sha256": "ececf03751b3a774efc8dddee697d777c00c601ee8de9fae6aecd8a1badfe0b2"
      },
      "downloads": -1,
      "filename": "conciseSchedules-1.0.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4d3b2f87a11d5ec725ffaa8963a92dcf",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.5.0",
      "size": 8472,
      "upload_time": "2019-06-28T08:31:46",
      "upload_time_iso_8601": "2019-06-28T08:31:46.928157Z",
      "url": "https://files.pythonhosted.org/packages/66/db/1befa684d56245e5a35390db0df32db01d5b9eca835ebaa35f08fa39bb92/conciseSchedules-1.0.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c5f53a580cc4df3680b2cd03cd9c0aeee999f7b360bc0c1f84f5c9165188c481",
        "md5": "36d3255f29c732310d88b41580fa42a5",
        "sha256": "d29bf29d89707cfe5df88f410075b6b14207c20d3011f26881b71ac3ba5ffeab"
      },
      "downloads": -1,
      "filename": "conciseSchedules-1.0.3-py3.6.egg",
      "has_sig": false,
      "md5_digest": "36d3255f29c732310d88b41580fa42a5",
      "packagetype": "bdist_egg",
      "python_version": "3.6",
      "requires_python": ">=3.5.0",
      "size": 15275,
      "upload_time": "2019-06-28T08:31:48",
      "upload_time_iso_8601": "2019-06-28T08:31:48.446781Z",
      "url": "https://files.pythonhosted.org/packages/c5/f5/3a580cc4df3680b2cd03cd9c0aeee999f7b360bc0c1f84f5c9165188c481/conciseSchedules-1.0.3-py3.6.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2d05911c16ac80622da3ca59321f4fe58fc3824eba51fb6d35873b75ff9a4bbc",
        "md5": "4509735f61de2e2702f0795a78a38e79",
        "sha256": "291345bb5a6709e7eb838e500180adf05c233004d32f4232b0dee41bfdaf463f"
      },
      "downloads": -1,
      "filename": "conciseSchedules-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "4509735f61de2e2702f0795a78a38e79",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5.0",
      "size": 8665,
      "upload_time": "2019-06-28T08:31:50",
      "upload_time_iso_8601": "2019-06-28T08:31:50.180598Z",
      "url": "https://files.pythonhosted.org/packages/2d/05/911c16ac80622da3ca59321f4fe58fc3824eba51fb6d35873b75ff9a4bbc/conciseSchedules-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}