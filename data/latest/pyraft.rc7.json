{
  "info": {
    "author": "Lee, Ki-Yeul",
    "author_email": "lynix94@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "pyraft - Python raft implementation\n-----------------------------------\n\npyraft\n~~~~~~\n\nThe pyraft is a python raft implementation. This implementation can be\nused as daemon (like consul and zookeeper). But the main purpose of this\nis to be integrated in python application.\n\nYou can import raft.py and extend RaftNode functions by adding handler\nfunctions or inherit it easily\n\nBasic usage\n~~~~~~~~~~~\n\nYou can download pyraft by pip\n\n::\n\n   pip3 install pyraft\n\nYou can run raft node by using run_raft.py of example. like below.\n\n::\n\n   python3 run.py -a IP:PORT [-i NODE_ID] [-e ENSEMBLE_LIST]\n     ex) python3 run_raft.py -a 127.0.0.1:5010 -i 1 -e 2/127.0.0.1:5020,3/127.0.0.1:5030\n     ex) python3 run_raft.py -a 127.0.0.1:5010 -i 1 -e 127.0.0.1:5020,127.0.0.1:5030\n   lynix@~/lab/pyraft$ \n   lynix@~/lab/pyraft$ python3 run_raft.py -i 1 -a 127.0.0.1:5010\n   [INFO][1-1(c):2020-04-05 17:51:46.806923] get 1. voters: ['1']\n   [INFO][1-1(c):2020-04-05 17:51:46.807097] 1 is a leader\n   [INFO][1-1(c):2020-04-05 17:51:46.807145] on_leader called\n\nor run by -m option like below\n\n::\n\n   lynix@~/lab/pyraft$ python3 -m pyraft.run_raft -i 1 -a 127.0.0.1:5010\n   [INFO][1-1(c):2020-04-13 01:13:38.982386] get 1. voters: ['1']\n   [INFO][1-1(c):2020-04-13 01:13:38.982443] 1 is a leader\n   [INFO][1-1(c):2020-04-13 01:13:38.982839] on_leader called\n\n-i is a node id and it will be same as -a if its omitted. -a is the\naddress of this node. The pyraft use port to listen client and use port\n+ 1 for internal raft processing.\n\n-e is the comma separated ensemble lists. NID/IP:PORT is the format of\nother node.\n\nYou can run node 2 and 3 like below\n\n::\n\n   lynix@~/lab/pyraft$ python3 run_raft.py -i 2 -a 127.0.0.1:5020 -e 1/127.0.0.1:5010,3/127.0.0.1:5030\n   [INFO][2-0(c):2020-04-05 18:19:32.689253] connect to 1\n   ...\n   [INFO][2-11(f):2020-04-05 18:20:05.292156] connect to 3 ok\n\n::\n\n   lynix@~/lab/pyraft$ python3 run_raft.py -i 3 -a 127.0.0.1:5030 -e 1/127.0.0.1:5010,2/127.0.0.1:5020\n   [INFO][3-0(c):2020-04-05 18:20:04.443755] connect to 1\n   [WARN][3-0(c):2020-04-05 18:20:04.444187] node 1 already exists\n   [WARN][3-0(c):2020-04-05 18:20:04.444228] node 3 already exists\n   ...\n   [INFO][3-1(c):2020-04-05 18:20:05.292312] get 1. voters: ['3']\n   [INFO][3-2(c):2020-04-05 18:20:06.245078] get 1. voters: ['3']\n   [INFO][3-11(c):2020-04-05 18:20:06.292755] on_follower called\n\nThe pyraft provides get, set, del, expire commands with the redis\nprotocol (RESP) interface. You can read from all of nodes but you should\nwrite to master node (relay from follower is not implemented yet)\n\nBelow is an example.\n\n::\n\n   lynix@~/lab/pyraft$ telnet localhost 5010\n   Trying 127.0.0.1...\n   Connected to localhost.\n   Escape character is '^]'.\n   set key value\n   +OK\n   get key\n   +value\n\n\n   lynix@~/lab/pyraft$ telnet localhost 5020\n   Trying 127.0.0.1...\n   Connected to localhost.\n   Escape character is '^]'.\n   get key\n   +value\n\nDynamic node management\n~~~~~~~~~~~~~~~~~~~~~~~\n\nThe pyraft node can be run without ensemble context. It’ll run as\ncandidate alone if there is no ensemble option. If ensemble option is\nadded, It send its information to node and receive previous ensemble\ncontext at that time.\n\nSo you can run first node like below. (without ensemble option)\n\n::\n\n   lynix@~/lab/pyraft$ python3 run_raft.py -i 1 -a 127.0.0.1:5010\n   [INFO][1-1(c):2020-04-05 22:48:42.412140] get 1. voters: ['1']\n   [INFO][1-1(c):2020-04-05 22:48:42.412275] 1 is a leader\n   [INFO][1-1(c):2020-04-05 22:48:42.412336] on_leader called\n\nThen node one vote and make itself as leader.\n\nThen second node can be run like below. it names itself as node 2 and\nrequest to node 1 ensemble info.\n\nThen it receives there are node 1 and 2 only and get ping from leader.\nAnd it turns to follower.\n\n::\n\n   lynix@~/lab/pyraft$ python3 run_raft.py -i 2 -a 127.0.0.1:5020 -e 127.0.0.1:5010\n   [INFO][2-0(c):2020-04-05 22:48:58.663016] connect to __TEMP_127.0.0.1:5010__\n   [WARN][2-0(c):2020-04-05 22:48:58.663430] node 2 already exists\n   ...\n   [INFO][2-5(c):2020-04-05 22:49:00.418973] get 1. voters: ['2']\n   [INFO][2-11(c):2020-04-05 22:49:00.419175] on_follower called\n\nNode 3 can be run like below. it also names itself as node 3 and request\nto node 2 (or node 1 also possible) ensemble info. Then it gets node 1,\n2 and 3 as ensemble info. Node 1 and 2 also expand ensemble with node 3.\n\n::\n\n   lynix@~/lab/pyraft$ python3 run_raft.py -i 3 -a 127.0.0.1:5030 -e 127.0.0.1:5020\n   [INFO][3-0(c):2020-04-05 22:49:10.616798] connect to __TEMP_127.0.0.1:5020__\n   [WARN][3-0(c):2020-04-05 22:49:10.617187] node 3 already exists\n   ...\n   [INFO][3-3(c):2020-04-05 22:49:12.239592] get 1. voters: ['3']\n   [INFO][3-4(c):2020-04-05 22:49:12.425958] get 1. voters: ['3']\n   [INFO][3-11(c):2020-04-05 22:49:12.426090] on_follower called\n\nlogging and snapshot\n~~~~~~~~~~~~~~~~~~~~\n\nThe pyraft node make its checkpoint in every 100000 log entries. (can be\nchanged by raft.CONF_LOG_MAX)\n\nOr generate checkpoint snapshot by ‘checkpoint’ comand. Then it writes\nits data to raft_NODENAME_TIMESTAMP_INDEX.dat. The pyraft node also\nwrites append_entry log to raft_NODENAME_INDEX.log to get persistence.\n\nThe snapshot date is now made by expr() of python. And you can read data\nby editor. (It will be use pickle later)\n\nThe first pyraft node can start from snapshot by -l option. But other\nnode can get snapshot data from leader node.\n\nExtend RaftNode functions\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe pyraft has RaftWorker class in it to handle user request (get, set,\ndel, expire, expreat …). RaftWorker get user request and find it in its\nhandler table. (RaftWorker.handler)\n\nYou can add other kind of commands in it to handle other user requests\nlike below\n\n::\n\n   n.worker.handler['lrange'] = [do_lrange, 'r', 0, 2]\n\ndo_lrange is callback function and ‘r’ means read only (do not invoke\nappend_entry), 0 and 2 is minimum and maximum parameter of this\nfunction.\n\nYou can add on_leader, on_follower and on_candidate callback if you\nhandle node change event.\n\nBelow is url check example shows this.\n\n::\n\n   def url_checker(node):\n       while not node.shutdown_flag:\n           time.sleep(5)\n\n           if node.state != 'l':\n               continue\n\n           for k, v in node.data.items():\n               if not k.startswith('url_'):\n                   continue\n\n               try:\n                   url = v\n                   if not v.startswith('http'):\n                       url = 'https://' + v\n\n                   result = urllib.request.urlopen(url).read()\n                   print('url %s is ok' % k) \n               except Exception as e:\n                   print('url %s is bad - %s' % (k, e))\n\n\n   def url_check_start(node):\n       print('url check start...')\n       if not hasattr(node, 'checker'):\n           node.checker = threading.Thread(target=url_checker, args=(node,))\n           node.checker.start()\n\n\n   node = raft.make_default_node()\n\n   node.worker.handler['on_leader'] = url_check_start\n\n   node.start()\n   node.join()\n\nWhen you start this example (run_ex1.py file in the project). It checks\nurl is available or not in every 5 seconds. Only the leader of ensemble\nnode checks this and if leader is down. New elected leader starts\nchecking by ‘on_leader’ callback.\n\nLike above example, you can integrate raft consensus in your own\napplication easily. And you can also inherit RaftNode if you want to\nmake more complex raft integrated application.\n\nI hope this project is useful to make raft integrated application. And\nany kind of questions or contributions are welcome.\n\nThanks.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lynix94/pyraft",
    "keywords": "python,raft,replication,pyraft",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyraft",
    "package_url": "https://pypi.org/project/pyraft/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyraft/",
    "project_urls": {
      "Homepage": "https://github.com/lynix94/pyraft"
    },
    "release_url": "https://pypi.org/project/pyraft/1.0.0/",
    "requires_dist": [
      "redis (==3.4.1)",
      "setuptools (==41.2.0)"
    ],
    "requires_python": ">=3",
    "summary": "python raft implementation with resp interface",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15826850,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff566d2c30377aaa4e365f5f3bc58a9dbc88180602d7111c22326fe39b53255c",
          "md5": "b3774196b28c9b531b683b5b2b4db036",
          "sha256": "101c088f9ce8ffead34ac253ef22092e4c6c5f45e66d5b7f374bd0c3d64aa71f"
        },
        "downloads": -1,
        "filename": "pyraft-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3774196b28c9b531b683b5b2b4db036",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 11109,
        "upload_time": "2020-04-12T15:59:16",
        "upload_time_iso_8601": "2020-04-12T15:59:16.396691Z",
        "url": "https://files.pythonhosted.org/packages/ff/56/6d2c30377aaa4e365f5f3bc58a9dbc88180602d7111c22326fe39b53255c/pyraft-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a0b2067f8137734495111859da86af57e21876b72c07d7beb1d1b55b921a05b",
          "md5": "b0574f4b5edbf241f867d39c032026d3",
          "sha256": "d95dcb5d1fb232c25d9fa9fcc246bd59667b9cdfcf5b95d217e9cc33a4c8665d"
        },
        "downloads": -1,
        "filename": "pyraft-0.1.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0574f4b5edbf241f867d39c032026d3",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 11384,
        "upload_time": "2020-04-12T16:32:37",
        "upload_time_iso_8601": "2020-04-12T16:32:37.130068Z",
        "url": "https://files.pythonhosted.org/packages/7a/0b/2067f8137734495111859da86af57e21876b72c07d7beb1d1b55b921a05b/pyraft-0.1.1-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efdd954945f1b12ec2b5d5094993a8beb0960bcd973742cabf2335d247a45170",
          "md5": "c308ee2c6164a4d37e9a6671c09a17d6",
          "sha256": "8d21681085fb4e9f6773b8c94f0b6bbaa12d2f9171cbc6362dd253230e19e3a9"
        },
        "downloads": -1,
        "filename": "pyraft-0.1.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "c308ee2c6164a4d37e9a6671c09a17d6",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 11436,
        "upload_time": "2020-04-12T17:04:28",
        "upload_time_iso_8601": "2020-04-12T17:04:28.132726Z",
        "url": "https://files.pythonhosted.org/packages/ef/dd/954945f1b12ec2b5d5094993a8beb0960bcd973742cabf2335d247a45170/pyraft-0.1.2-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "883aa817ace99b3367841dbd2f782e6d96f438772c1029b6ebdc135aa5ea1bd3",
          "md5": "b568464bd4e42ac8ab3e96be14afceaf",
          "sha256": "ad8f7140a2716b7e997d32a95bbbcca3a666bfaccb495b1f9665f979cac67956"
        },
        "downloads": -1,
        "filename": "pyraft-0.1.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "b568464bd4e42ac8ab3e96be14afceaf",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 11445,
        "upload_time": "2020-04-12T17:17:59",
        "upload_time_iso_8601": "2020-04-12T17:17:59.756309Z",
        "url": "https://files.pythonhosted.org/packages/88/3a/a817ace99b3367841dbd2f782e6d96f438772c1029b6ebdc135aa5ea1bd3/pyraft-0.1.3-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7aa768955bbc78e56a724207f6aca683a6ebbba83d65c20234527c22e169097e",
          "md5": "612bb4ea4af2fcadcbc44e4ff7e3ff5d",
          "sha256": "4ad11958430a3e30a85a1200974bd4686058c30b3a5b0a526f47cedb9ba6a27d"
        },
        "downloads": -1,
        "filename": "pyraft-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "612bb4ea4af2fcadcbc44e4ff7e3ff5d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 10607,
        "upload_time": "2020-04-13T16:47:36",
        "upload_time_iso_8601": "2020-04-13T16:47:36.950593Z",
        "url": "https://files.pythonhosted.org/packages/7a/a7/68955bbc78e56a724207f6aca683a6ebbba83d65c20234527c22e169097e/pyraft-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4635595705df6acc3e225523ed869da601fc03a981454522d9a4899825a22376",
          "md5": "b542d2b4fbe09100f376744bab00d7a9",
          "sha256": "15ed3ed40aa3f1d0f17ec54355766bb6b3996909d07780c3053ac03f816b8e57"
        },
        "downloads": -1,
        "filename": "pyraft-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b542d2b4fbe09100f376744bab00d7a9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 29741,
        "upload_time": "2022-11-19T20:05:30",
        "upload_time_iso_8601": "2022-11-19T20:05:30.451081Z",
        "url": "https://files.pythonhosted.org/packages/46/35/595705df6acc3e225523ed869da601fc03a981454522d9a4899825a22376/pyraft-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12e49da2b580b5f7730fcd3e51b00629d640fc4acdf381c9919d451e8f41fe94",
          "md5": "f68f16dbde4877e9bbc1247262f5a4de",
          "sha256": "2a71b84969a19f3fd9ce0167298b821f5f3de0e7ccc6ea4b69f7d0f9f75604fb"
        },
        "downloads": -1,
        "filename": "pyraft-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f68f16dbde4877e9bbc1247262f5a4de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 27571,
        "upload_time": "2022-11-19T20:05:32",
        "upload_time_iso_8601": "2022-11-19T20:05:32.667986Z",
        "url": "https://files.pythonhosted.org/packages/12/e4/9da2b580b5f7730fcd3e51b00629d640fc4acdf381c9919d451e8f41fe94/pyraft-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b499fa6cde6cc9a8d75780934d2faf09e93e321017bee4be090202f7c0ab970d",
          "md5": "5a432a9ccbd0274a86fa97c596515afe",
          "sha256": "4fb34f46440cb506d9bdfb89ae376b7cf269a6f9ef1f0e32facd1375d1105aaf"
        },
        "downloads": -1,
        "filename": "pyraft-1.0.0.dev0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a432a9ccbd0274a86fa97c596515afe",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3",
        "size": 30026,
        "upload_time": "2022-11-19T19:45:02",
        "upload_time_iso_8601": "2022-11-19T19:45:02.793249Z",
        "url": "https://files.pythonhosted.org/packages/b4/99/fa6cde6cc9a8d75780934d2faf09e93e321017bee4be090202f7c0ab970d/pyraft-1.0.0.dev0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25df21507541fbb2cd8a86e4dfa1eec543cdd61c7a2bcf247d9b715ec7481bba",
          "md5": "e752d6c00b1233aff7c28fbd4a853aa9",
          "sha256": "3aff7328d3adeccc14032f4f4e8b2ec9df50241645f82a1471ad143098fea1fb"
        },
        "downloads": -1,
        "filename": "pyraft-1.0.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "e752d6c00b1233aff7c28fbd4a853aa9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 28350,
        "upload_time": "2022-11-19T19:45:05",
        "upload_time_iso_8601": "2022-11-19T19:45:05.077579Z",
        "url": "https://files.pythonhosted.org/packages/25/df/21507541fbb2cd8a86e4dfa1eec543cdd61c7a2bcf247d9b715ec7481bba/pyraft-1.0.0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4635595705df6acc3e225523ed869da601fc03a981454522d9a4899825a22376",
        "md5": "b542d2b4fbe09100f376744bab00d7a9",
        "sha256": "15ed3ed40aa3f1d0f17ec54355766bb6b3996909d07780c3053ac03f816b8e57"
      },
      "downloads": -1,
      "filename": "pyraft-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b542d2b4fbe09100f376744bab00d7a9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 29741,
      "upload_time": "2022-11-19T20:05:30",
      "upload_time_iso_8601": "2022-11-19T20:05:30.451081Z",
      "url": "https://files.pythonhosted.org/packages/46/35/595705df6acc3e225523ed869da601fc03a981454522d9a4899825a22376/pyraft-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "12e49da2b580b5f7730fcd3e51b00629d640fc4acdf381c9919d451e8f41fe94",
        "md5": "f68f16dbde4877e9bbc1247262f5a4de",
        "sha256": "2a71b84969a19f3fd9ce0167298b821f5f3de0e7ccc6ea4b69f7d0f9f75604fb"
      },
      "downloads": -1,
      "filename": "pyraft-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f68f16dbde4877e9bbc1247262f5a4de",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 27571,
      "upload_time": "2022-11-19T20:05:32",
      "upload_time_iso_8601": "2022-11-19T20:05:32.667986Z",
      "url": "https://files.pythonhosted.org/packages/12/e4/9da2b580b5f7730fcd3e51b00629d640fc4acdf381c9919d451e8f41fe94/pyraft-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}