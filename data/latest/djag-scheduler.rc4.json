{
  "info": {
    "author": "Mohith Reddy",
    "author_email": "dev.m0hithreddy@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development"
    ],
    "description": "# Djag Scheduler\n\n**(Dj)ango Task D(AG) (Scheduler)**\n\n## Overview\n\n- Djag scheduler associates scheduling information with the celery tasks\n- The task schedule is persisted in the database using Django ORM\n- Djag scheduler supports task dependencies\n- Djag scheduler can handle misfire events\n- The schedules can be managed through the Django admin interface\n- Djag scheduler adopts event driven approach\n\n## Quick Setup\n\n1. Install djag-scheduler from [``pypi``](https://pypi.org/project/djag-scheduler)\n\n    ```shell\n    pip install djag-scheduler\n    ```\n\n2. Add [``djag_scheduler``](https://github.com/m0hithreddy/djag-scheduler),\n   [``timezone_field``](https://github.com/mfogel/django-timezone-field),\n   [``django_json_widget``](https://github.com/jmrivas86/django-json-widget) (installed by default)\n   to the Django INSTALLED_APPS\n\n   ```python\n   INSTALLED_APPS = [\n        ...,\n        \n        # Djag Scheduler Apps\n        'timezone_field',\n        'django_json_widget',\n        'djag_scheduler'\n   ]\n   ```\n   \n3. It is highly recommended to configure [``Django Timezone``](https://docs.djangoproject.com/en/dev/ref/settings/#use-tz)\n   since djag-scheduler relies on Django ORM.\n\n   ```python\n   USE_TZ = True\n   ```\n\n4. [Optional Configurations](#optional-configurations) (In Django project settings).\n   \n   ```python\n   ...\n   \n   # Djag Scheduler Configuration\n   [CELERY_NAMESPACE]_TIMEZONE = 'UTC'\n   DJAG_MAX_WAIT_INTERVAL = 0\n   DJAG_SYNC_RETRY_INTERVAL = 600\n   DJAG_KOMBU_CONN_ARGS = {}\n   DJAG_EVENT_QUEUE_NAME = 'DJAG_EVENT_QUEUE-8763051701'\n   ```\n\n5. Run migrations\n\n   ```shell\n   python manage.py migrate\n   ```\n\nNow you can run the server, navigate to the Django admin interface and start creating schedules.\n\n> **Note:** This creates the schedules for the djag-scheduler, and this alone will not run the tasks. \n> See [Running Celery Services](#running-celery-services) for the schedule execution\n\n## Running Celery Services\n\nDjag Scheduler provides a [custom scheduler class](https://docs.celeryproject.org/en/stable/userguide/periodic-tasks.html#using-custom-scheduler-classes)\nwhich can be used with the celery services.\n\n1. [Configure celery](https://docs.celeryproject.org/en/stable/django/first-steps-with-django.html)\n   in your Django project and add [celery tasks](https://docs.celeryproject.org/en/stable/django/first-steps-with-django.html#using-the-shared-task-decorator)\n   \n\n2. Run celery worker service from the Django project root\n\n   ```shell\n   celery -A [project_name] worker --loglevel=info\n   ```\n   \n3. Run celery beat service from the Django project root\n\n   ```shell\n   celery -A [project_name] beat -l info --scheduler djag_scheduler.scheduler:DjagScheduler \n   ```\n\nDjag Scheduler will fetch the schedules from the database and starts executing the tasks. Both worker and \nbeat services can be started in [one process](https://django-celery-beat.readthedocs.io/en/latest/#example-running-periodic-tasks).\nServices can be [daemonized](https://docs.celeryproject.org/en/stable/userguide/daemonizing.html) as well\n\n## Optional Configurations\n\n- **[[CELERY_NAMESPACE]_TIMEZONE](https://docs.celeryproject.org/en/stable/django/first-steps-with-django.html)**:\n  Djag scheduler uses the same default timezone the celery is configured to use (Timezone can be configured per crontab).\n  **Default**: ``UTC``\n  \n\n- **DJAG_MAX_WAIT_INTERVAL**: Defines how long scheduler can be stuck in await of an event. Non-positive values will tell \n  the scheduler to wait for events indefinitely (Djag scheduler can be completely event driven). **Default (sec)**: ``0``\n\n  \n- **DJAG_SYNC_RETRY_INTERVAL**: The interval for retrying the sync from Python to DB for sync-failed tasks (Djag scheduler\n  continuously syncs the task metadata like last-cron, exceptions, run-counts, etc...). **Default (sec)**: ``600``\n\n  \n- **DJAG_KOMBU_CONN_ARGS**: Djag scheduler implements event driven approach by leveraging the message broker. It is fair to\n  assume that the project which uses celery have a message broker configured. This option is used in creating [kombu.Connection](https://docs.celeryq.dev/projects/kombu/en/stable/reference/kombu.html#connection)\n  object to the message broker. **Default (dict)**: ``{}``\n\n\n- **DJAG_EVENT_QUEUE_NAME**: The [queue](https://docs.celeryq.dev/projects/kombu/en/stable/reference/kombu.simple.html#kombu.simple.SimpleQueue) \n  through which the Djag scheduler events are exchanged. **Default**: ``DJAG_EVENT_QUEUE-8763051701``\n\n## Dependency Resolution\n\nDjag Scheduler at the core builds [Task DAG](https://en.wikipedia.org/wiki/Directed_acyclic_graph) for dependency management.\nBut due to the addition of crontab information, djag-scheduler resolves dependencies slightly in a different way. \nThe following conditions are to be met for the task (depender) to execute:\n\n- There should be a task (depender) crontab event pending execution (on-time, delayed, coalesced, ...).\n\n- For each dependency, depender crontab event should fall before or on the dependee last executed cron.\n\nSometimes we might need to wait for the depender's execution to execute the next version of the dependee (A<sub>1</sub> \n-> B<sub>1</sub>, B<sub>1</sub> -> None but B<sub>2</sub> -> A<sub>1</sub>). Such dependencies between dependee -> depender \ncan be defined by checking the [``Future Depends``](#admin-interface) flag. Task-B (dependee) can not future depend on\nTask-A (depender) unless Task-A (depender) depends on Task-B (dependee). The future dependency is assumed to be resolved\nwhen the depender (Task-A) never ran or when the depender (Task-A) is not running and the depender (Task-A) next cron\nfalls beyond dependee (Task-B) last cron.\n\n### Cycle Detection\nDjag scheduler performs basic cycle detection. Cycle detection becomes tricky with future dependencies in place. It is\neasy to trick Djag scheduler into insolvency (state of being stuck). Consider following tasks and their crontabs,\ndependencies respectively. A depends on B and C, B depends on C and C future depends on A.\n\n![Task-DAG](https://raw.githubusercontent.com/m0hithreddy/djag-scheduler/main/assets/images/Task-DAG.png)\n\nLet's assume all tasks have same base-cron (starting time). A is waiting for B, C; B is waiting for C but C future is \nwaiting for A. By the rules of Dependency Resolution C will run first, post that B will run, and at last A will run.\nAfter the first run, task's state will be as follows:\n\n![Task-State](https://raw.githubusercontent.com/m0hithreddy/djag-scheduler/main/assets/images/Task-State.png)\n\nNow again by the rules of Dependency Resolution, A can not run because it's next-cron falls after B's last-cron, B can \nnot run because it's next-cron falls after C's last-cron, and C can not run because A's next-cron falls before C's\nlast-cron; This freezes the Task-DAG. Therefore, Future-Dependency should be used with the sense of meaning.\n\n## Admin Interface\n\nThis section is to help with the different form fields of the admin interface. Most of the fields are straightforward.\nThe following listed fields might require some attention:\n\n### Crontabs\n\n- Crontabs are managed through [``croniter``](https://github.com/kiorky/croniter), and timezones through [``django-timezone-field``](https://github.com/mfogel/django-timezone-field)\n\n- By default, timezone is set to [``[CELERY_NAMESPACE]_TIMEZONE``](https://docs.celeryproject.org/en/stable/django/first-steps-with-django.html) \n  else ``UTC``.\n  \n### Periodic Tasks\n\n- Grace Period: Number of seconds from the actual cron value for the task to be categorized as a misfire\n\n- Skip Misfires: Skip all the misfire events\n\n- Coalesce Misfires: Run one event (latest among misfires) for all the misfires\n  \n- Cron Base: Initial time for evaluating crontab. The time displayed will be in Django's [``TIME_ZONE``](https://docs.djangoproject.com/en/3.2/ref/settings/#time-zone).\n  In the backend the cron base will be converted to crontab timezone before evaluation.\n\n- Task's ``*args or **kwargs`` can be set under ``Arguments`` section. The rendered JSON widget \n  comes from [``django-json-widget``](https://github.com/jmrivas86/django-json-widget)\n  \n- The celery tasks can declare optional **``djag_run_dt``** argument for getting the execution cron of the task.\n\n### Task Dependencies\n\n- Future Depends: Declares future dependency. Task-B can not future depend on Task-A unless Task-A depends on Task-B. \n  See [``Dependency Resolution``]()\n  \n### User Actions\n\n- The idea is to provide a mechanism for creating actions, which serves as control signals for the running tasks.\n  For generic purposes, only ``Unclassified Action`` is added to the drop-down.\n\n- Some internal actions are created for the Djag scheduler's functioning.\n\n### User Action Audits\n\n- Audit for [``User Actions``](#user-actions)\n\n## Contributing\n\n``djag-scheduler`` is one of the important component of the project [I](mailto:dev.m0hithreddy@mail.com) work on. I would\nbe trying my fullest to keep it bug-free. Any contribution in form of bug-report, bug-fix and new feature is welcomed.\n\n## Initial Credits\n\n[``djag-scheduler``](https://github.com/m0hithreddy/djag-scheduler) started as an extended version of\n[``django-celery-beat``](https://github.com/celery/django-celery-beat), providing support for task dependencies and\nresiliency. ``django-celery-beat`` served as a reference in writing a database-backed custom ``Scheduler`` for celery-beat \nservice. For more information see, [``LICENSE``](https://github.com/m0hithreddy/djag-scheduler/blob/main/LICENSE)\n\n# ChangeLog\n\n### 2.0.1\n- Handle exceptions related to optional configurations\n\n### 2.0.0\n- Rework on dependency resolution and re-define future dependency.\n- Adopt event driven approach.\n- Remove dependency on Django Cache\n- Handle task related exceptions.\n- Tasks can optionally declare djag_run_dt argument to get the current execution cron\n- Meaningful optional configurations :)\n- Enhancements in admin interface and many more\n\n### 1.0.0\n- Bug Fix: Crontab constructed wrongly\n\n### 0.0.1\n- Initial Release\n\n# Credits\n\n### Authors\n- Mohith Reddy <dev.m0hithreddy@gmail.com>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/m0hithreddy/djag-scheduler",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "djag-scheduler",
    "package_url": "https://pypi.org/project/djag-scheduler/",
    "platform": null,
    "project_url": "https://pypi.org/project/djag-scheduler/",
    "project_urls": {
      "Bug Tracker": "https://github.com/m0hithreddy/djag-scheduler/issues",
      "Homepage": "https://github.com/m0hithreddy/djag-scheduler"
    },
    "release_url": "https://pypi.org/project/djag-scheduler/2.0.1/",
    "requires_dist": [
      "Django (<5.0.0,>=4.0.0)",
      "celery (<6.0.0,>=5.0.0)",
      "croniter (<2.0.0,>=1.0.0)",
      "django-timezone-field (<6.0.0,>=5.0.0)",
      "toposort (<2.0.0,>=1.0.0)",
      "django-json-widget (<2.0.0,>=1.0.0)",
      "tzdata (<2023.0,>=2022.1)"
    ],
    "requires_python": "",
    "summary": "'Django database backed celery periodic task scheduler with support for task dependency graph'",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15890544,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86296926b0ca372d00a1564726f9e21cd7aa372d4718b13e73aa57e71a578add",
          "md5": "41bfa2ccfe54bf1228562382ff4ebd9f",
          "sha256": "4e2faf1c7569b9486f1837fc1a335d4049d8ddbcf1a2dbc99f8a89e028b899d5"
        },
        "downloads": -1,
        "filename": "djag_scheduler-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41bfa2ccfe54bf1228562382ff4ebd9f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 43091,
        "upload_time": "2021-10-23T18:06:27",
        "upload_time_iso_8601": "2021-10-23T18:06:27.024971Z",
        "url": "https://files.pythonhosted.org/packages/86/29/6926b0ca372d00a1564726f9e21cd7aa372d4718b13e73aa57e71a578add/djag_scheduler-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63cea1bb49f93538698e98d17ba25f92e2c1667cba5aabb884b3379d85b6d7b8",
          "md5": "1a5dbd94722a737834f9ff30fc26c344",
          "sha256": "168a039568fc8d8a81d7a6244d98f38bec9be8be2c5c6f3a0288f34babca2729"
        },
        "downloads": -1,
        "filename": "djag-scheduler-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1a5dbd94722a737834f9ff30fc26c344",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25967,
        "upload_time": "2021-10-23T18:06:29",
        "upload_time_iso_8601": "2021-10-23T18:06:29.805695Z",
        "url": "https://files.pythonhosted.org/packages/63/ce/a1bb49f93538698e98d17ba25f92e2c1667cba5aabb884b3379d85b6d7b8/djag-scheduler-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5006d9147bef38336e896c7e32906b89c03cdf5430b17e07bbf35471a74288fc",
          "md5": "0a64a2f027e04b47773a64fc9573e877",
          "sha256": "3de02ddf0621b9c55af7b58e1015b5e6e021a891e833aaa594c468d1abc87a1a"
        },
        "downloads": -1,
        "filename": "djag_scheduler-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a64a2f027e04b47773a64fc9573e877",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30411,
        "upload_time": "2022-07-13T18:10:09",
        "upload_time_iso_8601": "2022-07-13T18:10:09.733015Z",
        "url": "https://files.pythonhosted.org/packages/50/06/d9147bef38336e896c7e32906b89c03cdf5430b17e07bbf35471a74288fc/djag_scheduler-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6796bc963bbaa3a834d24fc6dc690e05a74b0ed5c13a65d115bb56b54f09b1d3",
          "md5": "ac1e758baeadf4a53784a596f7be75fc",
          "sha256": "600868c136450998031868a6686fd453bf6d1581bbbd8451374590be23a174f4"
        },
        "downloads": -1,
        "filename": "djag-scheduler-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ac1e758baeadf4a53784a596f7be75fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26042,
        "upload_time": "2022-07-13T18:10:14",
        "upload_time_iso_8601": "2022-07-13T18:10:14.338116Z",
        "url": "https://files.pythonhosted.org/packages/67/96/bc963bbaa3a834d24fc6dc690e05a74b0ed5c13a65d115bb56b54f09b1d3/djag-scheduler-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "896b0a4a976c886c3ab0ead17ac5184c82673249abf363d92aef6ad5e2b14abd",
          "md5": "5aa2296be0080e7e85133a74864947ca",
          "sha256": "66f76a21ec1d77c83536c2cf89e29d71db209b6f2b4a7126e276d7b80a4b7d8e"
        },
        "downloads": -1,
        "filename": "djag_scheduler-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5aa2296be0080e7e85133a74864947ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 34276,
        "upload_time": "2022-11-24T17:14:22",
        "upload_time_iso_8601": "2022-11-24T17:14:22.874749Z",
        "url": "https://files.pythonhosted.org/packages/89/6b/0a4a976c886c3ab0ead17ac5184c82673249abf363d92aef6ad5e2b14abd/djag_scheduler-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c16a6ed88574963a28f9cc9202a1ee5e8219a1519090c2c1846239e28d3d9d9c",
          "md5": "01547cabc0d6aacad13293c36ba5f7b6",
          "sha256": "79146ecc82b6bd7378ec57a7f2719962668caa3ba15972e6d755c1500f6f560a"
        },
        "downloads": -1,
        "filename": "djag-scheduler-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "01547cabc0d6aacad13293c36ba5f7b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29240,
        "upload_time": "2022-11-24T17:14:25",
        "upload_time_iso_8601": "2022-11-24T17:14:25.733334Z",
        "url": "https://files.pythonhosted.org/packages/c1/6a/6ed88574963a28f9cc9202a1ee5e8219a1519090c2c1846239e28d3d9d9c/djag-scheduler-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90b051b69ccf94a1c286cda0dabfb502d49141f5a73ea43cb98634293be4c67e",
          "md5": "bb81ad8954b9db301ec48817ac709871",
          "sha256": "2313e88463206293218789ee068cd50bf7c1a89cf37df26c4a3ad0248eeea581"
        },
        "downloads": -1,
        "filename": "djag_scheduler-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bb81ad8954b9db301ec48817ac709871",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 34327,
        "upload_time": "2022-11-25T14:06:57",
        "upload_time_iso_8601": "2022-11-25T14:06:57.371952Z",
        "url": "https://files.pythonhosted.org/packages/90/b0/51b69ccf94a1c286cda0dabfb502d49141f5a73ea43cb98634293be4c67e/djag_scheduler-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df3331c40969a6e7171d79e7df4a6404d91af4687153c3d9301f4dab46f67023",
          "md5": "037183cb44cee7d312e9588d72bc6228",
          "sha256": "8a9c6ff7a95c7d106e3c7eb5963a3e0852c427e737c1b6447f13add390208f2c"
        },
        "downloads": -1,
        "filename": "djag-scheduler-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "037183cb44cee7d312e9588d72bc6228",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29364,
        "upload_time": "2022-11-25T14:06:59",
        "upload_time_iso_8601": "2022-11-25T14:06:59.678963Z",
        "url": "https://files.pythonhosted.org/packages/df/33/31c40969a6e7171d79e7df4a6404d91af4687153c3d9301f4dab46f67023/djag-scheduler-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "90b051b69ccf94a1c286cda0dabfb502d49141f5a73ea43cb98634293be4c67e",
        "md5": "bb81ad8954b9db301ec48817ac709871",
        "sha256": "2313e88463206293218789ee068cd50bf7c1a89cf37df26c4a3ad0248eeea581"
      },
      "downloads": -1,
      "filename": "djag_scheduler-2.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bb81ad8954b9db301ec48817ac709871",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 34327,
      "upload_time": "2022-11-25T14:06:57",
      "upload_time_iso_8601": "2022-11-25T14:06:57.371952Z",
      "url": "https://files.pythonhosted.org/packages/90/b0/51b69ccf94a1c286cda0dabfb502d49141f5a73ea43cb98634293be4c67e/djag_scheduler-2.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "df3331c40969a6e7171d79e7df4a6404d91af4687153c3d9301f4dab46f67023",
        "md5": "037183cb44cee7d312e9588d72bc6228",
        "sha256": "8a9c6ff7a95c7d106e3c7eb5963a3e0852c427e737c1b6447f13add390208f2c"
      },
      "downloads": -1,
      "filename": "djag-scheduler-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "037183cb44cee7d312e9588d72bc6228",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 29364,
      "upload_time": "2022-11-25T14:06:59",
      "upload_time_iso_8601": "2022-11-25T14:06:59.678963Z",
      "url": "https://files.pythonhosted.org/packages/df/33/31c40969a6e7171d79e7df4a6404d91af4687153c3d9301f4dab46f67023/djag-scheduler-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}