{
  "info": {
    "author": "Victor Navarro",
    "author_email": "victor@vimtor.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Testing"
    ],
    "description": "<div align=\"center\">\n   <h1 align=\"center\">quickd</h1>\n   <p align=\"center\">Decorator type-based dependency injection for Python</p>\n   <p align=\"center\">\n    <img alt=\"GitHub Workflow Status\" src=\"https://img.shields.io/github/workflow/status/vimtor/quickd/Test\">\n    <img alt=\"GitHub release (latest by date)\" src=\"https://img.shields.io/github/v/release/vimtor/quickd\">\n    <img alt=\"GitHub\" src=\"https://img.shields.io/github/license/vimtor/quickd\">\n    <img alt=\"PyPI - Downloads\" src=\"https://img.shields.io/pypi/dw/quickd\">\n   </p>\n</div>\n\n## 📦 Installation\n\nThe package `quickd` supports Python >= 3.5. You can install it by doing:\n\n```shell\n$ pip install quickd\n```\n\n## 📜 Example\n\nHere is a quick example:\n\n```python\nfrom quickd import inject, factory\n\n\nclass Database:\n    pass\n\n\nclass PostgreSQL(Database):\n    def __str__(self):\n        return 'PostgreSQL'\n\n\nclass MySQL(Database):\n    def __str__(self):\n        return 'MySQL'\n\n\n@inject\ndef print_database(database: Database):\n    return print(database)\n\n\n@factory\ndef choose_database() -> Database:\n    return PostgreSQL()\n\n\nprint_database()  # Prints: PostgreSQL\nprint_database(MySQL())  # Prints: MySQL\n```\n\n## 🚀 Usage\n\nThere are only 3 decorators that compose the whole framework\n\n### `@factory`\n\n- Registers an instance for a specific type for later use with `@inject`\n- Is mandatory to annotate the function with the return type of the class that you want to inject later\n- It is **not** dynamic, so the implementation can only be chosen once\n\n```python\nfrom quickd import factory\n\n\n@factory\ndef choose_database() -> Database:\n    return PostgreSQL()\n```\n\n### `@inject`\n\n- Injects dependencies to a function by matching its arguments types with what has been registered\n- As you can see below, it also works with constructors\n\n```python\nfrom quickd import inject\n\n\n@inject\ndef print_database(database: Database):\n    return print(database)\n\n\nclass UserService:\n    @inject\n    def __init__(self, database: Database): pass\n```\n\n### `@service`\n\n- Registers a class to be later injectable without using `@factory`\n- It also applies `@inject` to its constructor\n\n```python\nfrom quickd import service, inject\n\n\n@service\nclass UserService:\n    def __init__(self):\n        self.users = ['Bob', 'Tom']\n\n    def all(self):\n        return self.users\n\n    def add(self, user):\n        self.users.append(user)\n\n\n@inject\ndef get_users(service: UserService):\n    return service.all()\n\n\n@inject\ndef add_user(service: UserService):\n    return service.add(\"Pol\")\n\n\nget_users()  # ['Bob', 'Tom']\nadd_user()\nget_users()  # ['Bob', 'Tom', 'Pol']\n```\n\n## 👨‍🍳 Recipes\n\nHere are some common solutions to scenarios you will face.\n\n### Interfaces\n\n```python\nfrom abc import abstractmethod\nfrom quickd import inject, factory\n\n\nclass UserRepository:\n    @abstractmethod\n    def save(self, user):\n        pass\n\n    @abstractmethod\n    def search(self, id):\n        pass\n\n\nclass UserCreator:\n    @inject\n    def __int__(self, repository: UserRepository):\n        self.repository = repository\n\n    def create(self, user):\n        self.repository.save(user)\n\n\nclass MySQLUserRepository(UserRepository):\n    def __int__(self, host, password):\n        self.sql = MySQLConnection(host, password)\n\n    def save(self, user):\n        self.sql.execute('INSERT ...')\n\n    def search(self, id):\n        self.sql.execute('SELECT ...')\n\n\n@factory\ndef choose_user_repository() -> UserRepository:  # Notice super class is being used\n    return MySQLUserRepository('user', '123')\n```\n\n### Testing\n\nFollowing the above example we can create a unit test mocking the persistance, which will make our tests easier and\nfaster.\n\n```python\nfake_user = {'id': 1, 'name': 'Tom'}\n\n\nclass FakeUserRepository(UserRepository):\n    def save(self, user):\n        assert user == fake_user\n\n\nrepository = FakeUserRepository()\nuser_creator = UserCreator(repository)\n\nuser_creator.create(fake_user)\n```\n\n### Configuration\n\nThere are multiple ways to configure your classes. A simple approach is to use environment variables on your factory\nannotated methods.\n\n```python\nimport os\nfrom quickd import factory\n\n\n@factory\ndef choose_database() -> Database:\n    username = os.environ.get(\"POSTGRES_USER\")\n    password = os.environ.get(\"POSTGRES_PASS\")\n    return PostgreSQL(username, password)\n```\n\n## 🧠 Motivation\n\nDependency injection provides a great way to decouple your classes in order to improve testability and maintainability.\n\nFrameworks like [Spring](https://spring.io/) or [Symfony](https://symfony.com/) are loved by the community.\n\n> I will just add a parameter to the constructor and Spring will fill with a global instance of the class\n\nThese frameworks rely heavy on the type system, to know which class should go where.\n\nFrom Python 3.5 we have the [typing](https://docs.python.org/3/library/typing.html) package. This addition allows us to\nhave the dependency injection framework that Python deserves.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vimtor/quickd",
    "keywords": "dependency injection,unif of work,decorators,typings",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "quickd",
    "package_url": "https://pypi.org/project/quickd/",
    "platform": "",
    "project_url": "https://pypi.org/project/quickd/",
    "project_urls": {
      "Bug Tracker": "https://github.com/vimtor/quickd/issues",
      "Homepage": "https://github.com/vimtor/quickd"
    },
    "release_url": "https://pypi.org/project/quickd/0.1.1/",
    "requires_dist": [
      "twine ; extra == 'build'",
      "wheel ; extra == 'build'",
      "pytest ; extra == 'tests'"
    ],
    "requires_python": ">=3.5",
    "summary": "Decorator type based dependency injection",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9759796,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cc7303c695a5c67fbc937ae052b3fe84ca962189fd6846985f0f3fb4fead894",
          "md5": "6ce598b4020d463bbadba0e52cfae25b",
          "sha256": "08341c4bde5a1fa184b450d27ebbc193833a8927e0037f6a1927bb0a6d25cc52"
        },
        "downloads": -1,
        "filename": "quickd-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ce598b4020d463bbadba0e52cfae25b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 5583,
        "upload_time": "2021-03-12T23:19:51",
        "upload_time_iso_8601": "2021-03-12T23:19:51.403336Z",
        "url": "https://files.pythonhosted.org/packages/5c/c7/303c695a5c67fbc937ae052b3fe84ca962189fd6846985f0f3fb4fead894/quickd-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c436aa234026b61f42f328b3bc4476af6cd462444246f424ffb7382796e67f4",
          "md5": "aae2ef7dec4eafa96a766570376f0ac1",
          "sha256": "367529f972990a387e39dabbf5e8a7a74bc4c5d9d167810703b2bcd791ddf13c"
        },
        "downloads": -1,
        "filename": "quickd-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "aae2ef7dec4eafa96a766570376f0ac1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 5673,
        "upload_time": "2021-03-12T23:19:52",
        "upload_time_iso_8601": "2021-03-12T23:19:52.851707Z",
        "url": "https://files.pythonhosted.org/packages/6c/43/6aa234026b61f42f328b3bc4476af6cd462444246f424ffb7382796e67f4/quickd-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d35cc2de61a26053bc8d77327b0ba6f936ebd8ef313fb347568f067642031f79",
          "md5": "f422a04759b49c3aa2949aa9bb496fd0",
          "sha256": "9e61a6d5b6ef38b34479835e434de8efc84ed5a799c27a0cba7029fc43091509"
        },
        "downloads": -1,
        "filename": "quickd-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f422a04759b49c3aa2949aa9bb496fd0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 5593,
        "upload_time": "2021-03-13T10:38:44",
        "upload_time_iso_8601": "2021-03-13T10:38:44.178670Z",
        "url": "https://files.pythonhosted.org/packages/d3/5c/c2de61a26053bc8d77327b0ba6f936ebd8ef313fb347568f067642031f79/quickd-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d140109de9a82d95bf18be7d65d9769aa677e166aa3598e6dade740478e69bc",
          "md5": "8568cd6653cba78c9275a3d73d167d98",
          "sha256": "48a19f55eca9c56c74ef1e0b199ecfc1498ba358df139bd282b45d4675308728"
        },
        "downloads": -1,
        "filename": "quickd-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8568cd6653cba78c9275a3d73d167d98",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 5680,
        "upload_time": "2021-03-13T10:38:45",
        "upload_time_iso_8601": "2021-03-13T10:38:45.431160Z",
        "url": "https://files.pythonhosted.org/packages/1d/14/0109de9a82d95bf18be7d65d9769aa677e166aa3598e6dade740478e69bc/quickd-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d35cc2de61a26053bc8d77327b0ba6f936ebd8ef313fb347568f067642031f79",
        "md5": "f422a04759b49c3aa2949aa9bb496fd0",
        "sha256": "9e61a6d5b6ef38b34479835e434de8efc84ed5a799c27a0cba7029fc43091509"
      },
      "downloads": -1,
      "filename": "quickd-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f422a04759b49c3aa2949aa9bb496fd0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 5593,
      "upload_time": "2021-03-13T10:38:44",
      "upload_time_iso_8601": "2021-03-13T10:38:44.178670Z",
      "url": "https://files.pythonhosted.org/packages/d3/5c/c2de61a26053bc8d77327b0ba6f936ebd8ef313fb347568f067642031f79/quickd-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d140109de9a82d95bf18be7d65d9769aa677e166aa3598e6dade740478e69bc",
        "md5": "8568cd6653cba78c9275a3d73d167d98",
        "sha256": "48a19f55eca9c56c74ef1e0b199ecfc1498ba358df139bd282b45d4675308728"
      },
      "downloads": -1,
      "filename": "quickd-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8568cd6653cba78c9275a3d73d167d98",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 5680,
      "upload_time": "2021-03-13T10:38:45",
      "upload_time_iso_8601": "2021-03-13T10:38:45.431160Z",
      "url": "https://files.pythonhosted.org/packages/1d/14/0109de9a82d95bf18be7d65d9769aa677e166aa3598e6dade740478e69bc/quickd-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}