{
  "info": {
    "author": "Bart≈Çomiej Nowak",
    "author_email": "n.bartek3762@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "|  |  |                                                                                                                             |\n|--------------------|---------------------|-----------------------------------------------------------------------------------------------------------------------------|\n| :memo: | **License** | [![License](https://img.shields.io/:license-mit-blue.svg)](http://doge.mit-license.org)                                     |\n| :package: | **PyPi** | [![PyPi](https://badge.fury.io/py/django-dynamic-from-clause.svg)](https://pypi.org/project/django-dynamic-from-clause/)    |\n| <img src=\"https://cdn.iconscout.com/icon/free/png-256/django-1-282754.png\" width=\"22px\" height=\"22px\" align=\"center\" /> | **Django Versions** | 2.0, 2.1, 2.2, 3.0, 3.1, 3.2, 4.0, 4.1                                                                                      |\n| <img src=\"http://www.iconarchive.com/download/i73027/cornmanthe3rd/plex/Other-python.ico\" width=\"22px\" height=\"22px\" align=\"center\" /> | **Python Versions** | 3.6, 3.7, 3.8, 3.9, 3.10                                                                                                    |\n\n## How to install?\n\n    pip install django-dynamic-from-clause\n\n# **IDEA**\n**The IDEA is to be able to map a tabular functions, any sql/queries outputs, and other, to Django models!**\n\nWe want any database operation/object which has tabular output (such as table, view, function, queries, and so on), to be mapped\nto a dedicated django model. We want to be able to use the ORM methods (like select related, prefetch, annotations\nand others) on that model.\n\nWe are doing so by giving you the ability to define the **SQL FROM clause** dynamically and fill (if it is a function) it with args.\nSee examples to check how powerful it might be.\n\n# Examples:\n#### Wrap aggregation result\n```python\nfrom django.db import models\n\nfrom django_dynamic_from_clause.models import DynamicFromClauseBaseModel\n\n# regular models\nclass Owner(models.Model):\n    name = models.CharField(max_length=512)\n\n\nclass InventoryRecord(models.Model):\n    count = models.IntegerField()\n    owner = models.ForeignKey(\n        Owner, related_name='inventory_records', on_delete=models.CASCADE\n    )\n\n\n# Our perspective for the InventoryRecordQuerySet\nclass AggregatedInventoryPerspective(DynamicFromClauseBaseModel):\n    count_sum = models.IntegerField()\n    owner = models.ForeignKey(\n        Owner,\n        related_name='+', # Feel free to set the related name and use it. It will work without problems. \n        on_delete=models.DO_NOTHING,\n        primary_key=True # We have to pick a field which will mimic the primary key\n     )\n\n# Lets make some aggregations\naggr_inv_records_queryset = InventoryRecord.objects.values(\n    \"owner\"\n).annotate(\n    count_sum=models.Sum(\"count\")\n)\n# Generated SQL is: \n# 'SELECT \"test_app_inventoryrecord\".\"owner_id\", SUM(\"test_app_inventoryrecord\".\"count\") AS \"count_sum\" \n# FROM \"test_app_inventoryrecord\" \n# GROUP BY \"test_app_inventoryrecord\".\"owner_id\"'\n#\n# And example output is: <QuerySet [{'owner': 36, 'count_sum': 24}]>\n\n\n# Let use ORM on the results from the aggr_inv_records_queryset\naggregated_inv_records = AggregatedInventoryPerspective.objects.set_source_from_queryset(\n    aggr_inv_records_queryset\n).select_related('owner')\n\n# Generated SQL is:\n# SELECT \n#   \"_aggregatedinventoryperspective\".\"count_sum\", \n#   \"_aggregatedinventoryperspective\".\"owner_id\",\n#   \"test_app_owner\".\"id\", \"test_app_owner\".\"name\" \n# FROM (\n#    SELECT \"test_app_inventoryrecord\".\"owner_id\", SUM(\"test_app_inventoryrecord\".\"count\") AS \"count_sum\" \n#    FROM \"test_app_inventoryrecord\" \n#    GROUP BY \"test_app_inventoryrecord\".\"owner_id\") AS \"_aggregatedinventoryperspective\" \n#    INNER JOIN \"test_app_owner\" ON (\"_aggregatedinventoryperspective\".\"owner_id\" = \"test_app_owner\".\"id\"\n# )\n# and example output is: \n#   <DynamicFromClauseQuerySet [<AggregatedInventoryPerspective: AggregatedInventoryPerspective object (36)>]>\naggregated_inv_records.get().owner  # return an owner :), Our perspective can be prefetched from the Owner model as well.\n\n```\n\n#### Filter trough results of the window annotation on same queryset\n```python\nfrom django.db import models\nfrom django.db.models import QuerySet\nfrom django.db.models import F, Window\nfrom django.db.models.functions import Rank\n\nfrom django_dynamic_from_clause.query import DynamicFromClauseQuerySet\n\n# Regular django model, with extra objects manager \nclass Human(models.Model):\n    objects = QuerySet.as_manager()\n    dynamic_from_clause_objects = DynamicFromClauseQuerySet.as_manager()\n    weight = models.IntegerField()\n    height = models.IntegerField()\n\n# We would like to annotate rank, and filter through it, \n# which is imposible in regular django without raw query. \n# Django will throw NotSupportedError\nhumans_with_rank = Human.objects.all().annotate(rank=Window(\n    expression=Rank(),\n    order_by=[F('height'), F('weight')]\n))\n\n# But we can easily overcome that!\n# By using our manager, to make query from the query\nhumans_with_rank_less_or_equal_two = Human.dynamic_from_clause_objects.set_source_from_queryset(\n    humans_with_rank\n).get(rank__lte=2)\n# Let's see how generated query looks like:\n# SELECT \n#   \"test_app_human\".\"id\", \"test_app_human\".\"weight\",\n#   \"test_app_human\".\"height\", \"test_app_human\".\"rank\" AS \"rank\" \n# FROM (\n#   SELECT \n#       \"test_app_human\".\"id\",\n#       \"test_app_human\".\"weight\", \n#       \"test_app_human\".\"height\",\n#       RANK() OVER (ORDER BY \"test_app_human\".\"height\", \"test_app_human\".\"weight\") AS \"rank\" \n#   FROM \"test_app_human\"\n# ) AS \"test_app_human\" \n# WHERE \"test_app_human\".\"rank\" <= 2\n# And we still deal with a Human objects!\n# <DynamicFromClauseQuerySet [<Human: Human object (218)>, <Human: Human object (216)>]>\n```\n\n#### Let's use some database functions - check which rows are lock-ed on provided table\n```python\nfrom django.db import models\nfrom django.db.models import Func\nfrom django.contrib.postgres.fields import ArrayField\n\nfrom django_dynamic_from_clause.models import DynamicFromClauseBaseModel\n\n\nclass ExampleModel(models.Model):\n    pass\n\n\nclass PGRowLocks(Func):  # you have to create pgrowlock extension first\n    function = 'pgrowlocks'\n    template = \"%(function)s('%(expressions)s')\"\n\n\n# This model maps to the pgrowslocks function output which is all locks on provided table\nclass PgRowsLocks(DynamicFromClauseBaseModel):\n    EXPRESSION_CLASS = PGRowLocks \n\n    locked_row = ArrayField(models.PositiveIntegerField(), size=2, primary_key=True)\n    locker = models.PositiveBigIntegerField()\n    multi = models.BooleanField()\n    xids = ArrayField(models.PositiveIntegerField())\n    modes = models.PositiveIntegerField(models.TextField())\n    pids = ArrayField(models.SmallIntegerField())\n\n# Now we can easy check what is locked on which table :)\nlocked_rows = PgRowsLocks.objects.fill_expression_with_parameters(\n        ExampleModel._meta.db_table\n).all()    \n```\n#### My tabular function\n`\ncooming soon, for now check tests\n`\n\n## Note:\nWe have to specify which field is the primary key on the model \n\n## Available methods\n...\n\n# How it works?\n\nThe Code is easy. The only thing which we do here is to extend the django SQL compiler and change how it creates the from_clause. The library has very little code.\n\n# Motivation\n\nI think that this approach has sense cus I saw a lot of problems or ugly solutions which have tried to:   \n* use table functions,  \n* serialize objects on aggregated queryset (better to deal with objects then {\"a__b\": value} after aggregation)  \n* make selects over nested queries,  \n* replacing what database should do with python code,   \n* \"manually\" prefetching on serializers lvl, \n* and others ugly things.\n\nI think that this library contains a good idea, and a reasonable attempt, to solve issues like the above.\n\n# TODO:\n- Migrations (here or in other library like the django-db-views - db functions can be a good replacement for views, cus views always calculate the whole dataset which can raise performance issues). \n\n# How to work with repo\nadd your .env file in the main directory, which set up POSTGRES env variables. Check conftest.py file for more details.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/BezBartek/django-dynamic-from-clause",
    "keywords": "Django,Django from,From clause,Dynamic from clause,Django table function,Django nested query,Expression to model,Wrap queryset,Dynamic perspective,Evaluate model from queryset",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-dynamic-from-clause",
    "package_url": "https://pypi.org/project/django-dynamic-from-clause/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-dynamic-from-clause/",
    "project_urls": {
      "Homepage": "https://github.com/BezBartek/django-dynamic-from-clause"
    },
    "release_url": "https://pypi.org/project/django-dynamic-from-clause/0.0.6/",
    "requires_dist": [
      "Django"
    ],
    "requires_python": "",
    "summary": "Gives the ability to dynamically configure SQL For clause for models. This give you ability to wrap any sql into models and use ORM features on it.",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14897242,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11fa60447cc46b785354dc2af44b5cf0c3e03950d87803ca2fbb114ff813377f",
          "md5": "b89d49089efca980ca9107061ed6071f",
          "sha256": "0ac40d4919d6a6cd81beafffb1e58c58bc887dccbc930784cb4e6e0b7d61c87e"
        },
        "downloads": -1,
        "filename": "django_dynamic_from_clause-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b89d49089efca980ca9107061ed6071f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6465,
        "upload_time": "2022-07-07T16:17:59",
        "upload_time_iso_8601": "2022-07-07T16:17:59.194826Z",
        "url": "https://files.pythonhosted.org/packages/11/fa/60447cc46b785354dc2af44b5cf0c3e03950d87803ca2fbb114ff813377f/django_dynamic_from_clause-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9081c9caa904fb52385220515001cdba84e3dc9b4dfa5d60e6f329f32283e26",
          "md5": "e766a06277771dab8a38564200209850",
          "sha256": "5659cabede8d5e69626a28b4bb3b7e23d9a2114e240d366cacfa22fd5270b53f"
        },
        "downloads": -1,
        "filename": "django-dynamic-from-clause-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e766a06277771dab8a38564200209850",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5631,
        "upload_time": "2022-07-07T16:18:00",
        "upload_time_iso_8601": "2022-07-07T16:18:00.961848Z",
        "url": "https://files.pythonhosted.org/packages/b9/08/1c9caa904fb52385220515001cdba84e3dc9b4dfa5d60e6f329f32283e26/django-dynamic-from-clause-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a46cdbd3f94e25999f65e68a3553cbb19d13f2248f11d18c7fc57d0f6cbe05f",
          "md5": "ad40ae9e0ba6d7e71ce88e38cecfe80b",
          "sha256": "6c975df72c89954c47707bc627566573e2286d01626d88680d67e5723c02aad2"
        },
        "downloads": -1,
        "filename": "django_dynamic_from_clause-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad40ae9e0ba6d7e71ce88e38cecfe80b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6333,
        "upload_time": "2022-07-07T16:25:03",
        "upload_time_iso_8601": "2022-07-07T16:25:03.240028Z",
        "url": "https://files.pythonhosted.org/packages/0a/46/cdbd3f94e25999f65e68a3553cbb19d13f2248f11d18c7fc57d0f6cbe05f/django_dynamic_from_clause-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b69b75783a9ca6e6d19e0b4bab60e120821af32b12886c58a277e338cd0d640a",
          "md5": "f9e39d87cb9ce9a1a54af7cf6f6c6c65",
          "sha256": "824ee3b9d910997e65565c933663c61a3f407f4d9af8284da89a046c75709bb0"
        },
        "downloads": -1,
        "filename": "django-dynamic-from-clause-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f9e39d87cb9ce9a1a54af7cf6f6c6c65",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5613,
        "upload_time": "2022-07-07T16:25:05",
        "upload_time_iso_8601": "2022-07-07T16:25:05.436838Z",
        "url": "https://files.pythonhosted.org/packages/b6/9b/75783a9ca6e6d19e0b4bab60e120821af32b12886c58a277e338cd0d640a/django-dynamic-from-clause-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77cf264ec5a3052d8fab133a006c3f298cb59872d1af025bd7b1fb3607cd4285",
          "md5": "416206502a64bdafa81f135ffb880bd3",
          "sha256": "ab95145099679b20e5e19c93e712919cf8bedae49569de14038cfaf153933f31"
        },
        "downloads": -1,
        "filename": "django_dynamic_from_clause-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "416206502a64bdafa81f135ffb880bd3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7003,
        "upload_time": "2022-07-07T17:48:09",
        "upload_time_iso_8601": "2022-07-07T17:48:09.336083Z",
        "url": "https://files.pythonhosted.org/packages/77/cf/264ec5a3052d8fab133a006c3f298cb59872d1af025bd7b1fb3607cd4285/django_dynamic_from_clause-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2aa35b5f87c28bb21d42537bc97f50f8be3a6f383a4d59320c1ca7509856543",
          "md5": "cc4f0e9148e9ab794e02497baf3963de",
          "sha256": "41ef62197b343ef393fbf3894af4475148d67d6576dd437d0c588e5d960b7bc1"
        },
        "downloads": -1,
        "filename": "django-dynamic-from-clause-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cc4f0e9148e9ab794e02497baf3963de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6619,
        "upload_time": "2022-07-07T17:48:11",
        "upload_time_iso_8601": "2022-07-07T17:48:11.613344Z",
        "url": "https://files.pythonhosted.org/packages/b2/aa/35b5f87c28bb21d42537bc97f50f8be3a6f383a4d59320c1ca7509856543/django-dynamic-from-clause-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aee74706f7a41836800a3dcb09357190147592062e48647730c67517db3a5fd2",
          "md5": "feffbf5cc06598f57a94e253e96a9928",
          "sha256": "bb67dfb72b767d0a48ccb9aed325e233041e64b7d0f6de0de786282cd17913be"
        },
        "downloads": -1,
        "filename": "django_dynamic_from_clause-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "feffbf5cc06598f57a94e253e96a9928",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7722,
        "upload_time": "2022-07-08T11:06:13",
        "upload_time_iso_8601": "2022-07-08T11:06:13.370954Z",
        "url": "https://files.pythonhosted.org/packages/ae/e7/4706f7a41836800a3dcb09357190147592062e48647730c67517db3a5fd2/django_dynamic_from_clause-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "272c02a337f867f87c2cafe19ee2d822cf39f08092ea9ae28c4c7a988e08c1ce",
          "md5": "d095bfbdbd14fd099014e0423380c81b",
          "sha256": "616882a63a387d8bda056ef10f350e181bdeecc73adc21748d6f822de7c06002"
        },
        "downloads": -1,
        "filename": "django-dynamic-from-clause-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d095bfbdbd14fd099014e0423380c81b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7226,
        "upload_time": "2022-07-08T11:06:15",
        "upload_time_iso_8601": "2022-07-08T11:06:15.537788Z",
        "url": "https://files.pythonhosted.org/packages/27/2c/02a337f867f87c2cafe19ee2d822cf39f08092ea9ae28c4c7a988e08c1ce/django-dynamic-from-clause-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c39dc4641bd9640a40aa63666569094c527a2ba5f3980be59236057bc7d3e953",
          "md5": "b41f07fbea3983cc0fab9a15b98abeba",
          "sha256": "20704fcca7806a094af3db24e283e2a167b36fd5083c442f5bd55b63c3e14f6c"
        },
        "downloads": -1,
        "filename": "django_dynamic_from_clause-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b41f07fbea3983cc0fab9a15b98abeba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7835,
        "upload_time": "2022-07-11T08:44:18",
        "upload_time_iso_8601": "2022-07-11T08:44:18.143801Z",
        "url": "https://files.pythonhosted.org/packages/c3/9d/c4641bd9640a40aa63666569094c527a2ba5f3980be59236057bc7d3e953/django_dynamic_from_clause-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02b2af75a5d81e7be8d4f4ef8c071ce80fdc613e10283eb402d90317198b72b3",
          "md5": "dd1415dcca8f54d7d5f50866158d0d9b",
          "sha256": "75ef613992512c74da4965b186c66d1231196801e773bfe405ed161880fddb34"
        },
        "downloads": -1,
        "filename": "django-dynamic-from-clause-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "dd1415dcca8f54d7d5f50866158d0d9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7293,
        "upload_time": "2022-07-11T08:44:20",
        "upload_time_iso_8601": "2022-07-11T08:44:20.115789Z",
        "url": "https://files.pythonhosted.org/packages/02/b2/af75a5d81e7be8d4f4ef8c071ce80fdc613e10283eb402d90317198b72b3/django-dynamic-from-clause-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7c8786f76e2def8bc1635adb7e5a34c78bde87b66c25c5bfa6cd0f172e1732b",
          "md5": "4d01db7b2b877764a8242b8f1cc4a6be",
          "sha256": "b54e798787d96367669382ad09225ce36172eec7010b74d4378238658cdfb3c6"
        },
        "downloads": -1,
        "filename": "django_dynamic_from_clause-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d01db7b2b877764a8242b8f1cc4a6be",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9174,
        "upload_time": "2022-08-26T10:42:58",
        "upload_time_iso_8601": "2022-08-26T10:42:58.790632Z",
        "url": "https://files.pythonhosted.org/packages/c7/c8/786f76e2def8bc1635adb7e5a34c78bde87b66c25c5bfa6cd0f172e1732b/django_dynamic_from_clause-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61d80c2ef0f3aa320c806adb6fe1a6037430ab7513ef66b635a41a63bf68e1c0",
          "md5": "e26d361def6ae2cd5dd49c833450fd18",
          "sha256": "c8e3591fc95fbdf95d60952388ca7c63202ac8f914bcc1edcfd51485f8343796"
        },
        "downloads": -1,
        "filename": "django-dynamic-from-clause-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "e26d361def6ae2cd5dd49c833450fd18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7349,
        "upload_time": "2022-08-26T10:43:00",
        "upload_time_iso_8601": "2022-08-26T10:43:00.816086Z",
        "url": "https://files.pythonhosted.org/packages/61/d8/0c2ef0f3aa320c806adb6fe1a6037430ab7513ef66b635a41a63bf68e1c0/django-dynamic-from-clause-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c7c8786f76e2def8bc1635adb7e5a34c78bde87b66c25c5bfa6cd0f172e1732b",
        "md5": "4d01db7b2b877764a8242b8f1cc4a6be",
        "sha256": "b54e798787d96367669382ad09225ce36172eec7010b74d4378238658cdfb3c6"
      },
      "downloads": -1,
      "filename": "django_dynamic_from_clause-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4d01db7b2b877764a8242b8f1cc4a6be",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9174,
      "upload_time": "2022-08-26T10:42:58",
      "upload_time_iso_8601": "2022-08-26T10:42:58.790632Z",
      "url": "https://files.pythonhosted.org/packages/c7/c8/786f76e2def8bc1635adb7e5a34c78bde87b66c25c5bfa6cd0f172e1732b/django_dynamic_from_clause-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "61d80c2ef0f3aa320c806adb6fe1a6037430ab7513ef66b635a41a63bf68e1c0",
        "md5": "e26d361def6ae2cd5dd49c833450fd18",
        "sha256": "c8e3591fc95fbdf95d60952388ca7c63202ac8f914bcc1edcfd51485f8343796"
      },
      "downloads": -1,
      "filename": "django-dynamic-from-clause-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "e26d361def6ae2cd5dd49c833450fd18",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7349,
      "upload_time": "2022-08-26T10:43:00",
      "upload_time_iso_8601": "2022-08-26T10:43:00.816086Z",
      "url": "https://files.pythonhosted.org/packages/61/d8/0c2ef0f3aa320c806adb6fe1a6037430ab7513ef66b635a41a63bf68e1c0/django-dynamic-from-clause-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}