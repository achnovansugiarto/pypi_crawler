{
  "info": {
    "author": "DataLad Developers",
    "author_email": "team@datalad.org",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "## --- UNDER DEVELOPMENT ---\n*This repository is undergoing continuous development and all branches should be considered unstable*\n\n---\n[![Documentation Status](https://readthedocs.org/projects/datalad-catalog/badge/?version=latest)](http://docs.datalad.org/projects/catalog/en/latest/?badge=latest)\n[![GitHub release](https://img.shields.io/github/release/datalad/datalad-catalog.svg)](https://GitHub.com/datalad/datalad-catalog/releases/)\n[![PyPI version fury.io](https://badge.fury.io/py/datalad-catalog.svg)](https://pypi.python.org/pypi/datalad-catalog/)\n[![docs](https://github.com/datalad/datalad-catalog/actions/workflows/docbuild.yml/badge.svg)](https://github.com/datalad/datalad-catalog/actions/workflows/docbuild.yml)\n[![Build status](https://ci.appveyor.com/api/projects/status/github/datalad/datalad-catalog?branch=main&svg=true)](https://ci.appveyor.com/project/mih/datalad-catalog/branch/main)\n[![codecov.io](https://codecov.io/github/datalad/datalad-catalog/coverage.svg?branch=main)](https://codecov.io/github/datalad/datalad-catalog?branch=main)\n[![crippled-filesystems](https://github.com/datalad/datalad-catalog/actions/workflows/test_crippledfs.yml/badge.svg)](https://github.com/datalad/datalad-catalog/actions/workflows/test_crippledfs.yml)\n[![pages-build-deployment](https://github.com/datalad/datalad-catalog/actions/workflows/pages/pages-build-deployment/badge.svg)](https://github.com/datalad/datalad-catalog/actions/workflows/pages/pages-build-deployment)\n[![push_catalog_to_gh_pages](https://github.com/datalad/datalad-catalog/actions/workflows/deploy_demo.yml/badge.svg)](https://github.com/datalad/datalad-catalog/actions/workflows/deploy_demo.yml)<!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->\n[![All Contributors](https://img.shields.io/badge/all_contributors-11-orange.svg?style=flat-square)](#contributors-)\n<!-- ALL-CONTRIBUTORS-BADGE:END -->\n\n\n<picture>\n  <source media=\"(prefers-color-scheme: light)\" srcset=\"docs/source/_static/datacat0_hero.svg\">\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"docs/source/_static/datacat0_hero_lightbg.svg\">\n  <img alt=\"DataCat logo\" src=\"docs/source/_static/datacat0_hero.svg\">\n</picture>\n\n<br>\n\nDataLad Catalog is a free and open source command line tool, with a Python API, that assists with the automatic generation of user-friendly, browser-based data catalogs from structured metadata. It is an extension to [DataLad](https://datalad.org) and forms part of the broader ecosystem of DataLad's distributed metadata handling and (meta)data publishing tools.\n\n## 1. Online demo\n\nNavigate to [https://datalad.github.io/datalad-catalog/](https://datalad.github.io/datalad-catalog/) to view a live demo of a catalog generated with DataLad Catalog.\n\nThis demo site is hosted via GitHub Pages and it builds from the `gh-pages` branch of this repository.\n\n<div style=\"text-align:center;\">\n    <img src=\"docs/source/_static/datalad_catalog_demo.svg\" width=\"75%\"></img>\n</div>\n\n## 2. How it works\n\nDataLad Catalog can receive commands to `create` a new catalog, `add` and `remove` metadata entries to/from an existing catalog, `serve` an existing catalog locally, and more. Metadata can be provided to DataLad Catalog from any number of arbitrary metadata sources, as an aggregated set or as individual metadata items. DataLad Catalog has a dedicated [schema](https://datalad.github.io/datalad-catalog/display_schema) (using the [JSON Schema](https://json-schema.org/) vocabulary) against which incoming metadata items are validated. This schema allows for standard metadata fields as one would expect for datasets of any kind (such as `name`, `doi`, `url`, `description`, `license`, `authors`, and more), as well as fields that support identification, versioning, dataset context and linkage, and file tree specification.\n\nThe process of generating a catalog, after metadata entry validation, involves:\n1. aggregation of the provided metadata into the catalog filetree, and\n2. generating the assets required to render the user interface in a browser.\n\nThe output is a set of structured metadata files, as well as a [Vue.js](https://vuejs.org/)-based browser interface that understands how to render this metadata in the browser. What is left for the user is to host this content on their platform of choice and to serve it for the world to see.\n\n<br>\n<div style=\"text-align:center;\">\n  <picture>\n    <source media=\"(prefers-color-scheme: light)\" srcset=\"docs/source/_static/datacat4_the_catalog.svg\">\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"docs/source/_static/datacat4_the_catalog_lightbg.svg\">\n    <img src=\"docs/source/_static/datacat4_the_catalog.svg\" width=\"75%\"></img>\n  </picture>\n</div>\n\n\n## 3. Install `datalad-catalog`\n\n### Step 1 - Setup and activate virtual environment\n\nWith your virtual environment manager of choice, create a virtual environment and ensure\nyou have a recent version of Python installed. Then activate the environment. E.g. with `venv`:\n\n```\npython -m venv my_catalog_env\nsource my_catalog_env/bin/activate\n```\n\n### Step 2 - Install the package from PyPI\n\nRun the following from your command line:\n\n```\npip install datalad-catalog\n```\n\nIf you are a developer and would like to contribute to the code, instead clone the code base from GitHub and install with `pip` local changes :\n\n```\ngit clone https://github.com/datalad/datalad-catalog.git\ncd datalad-catalog\npip install -e .\n```\n\nCongratulations! You have now installed `datalad-catalog`.\n\n#### Note on dependencies:\n\nBecause this is an extension to `datalad` and builds on metadata handling functionality, the installation process also installs [`datalad`](https://github.com/datalad/datalad) and [`datalad-metalad`](https://github.com/datalad/datalad-metalad) as dependencies, although these do not have to be used as the only sources of metadata for a catalog.\n\nWhile the catalog generation process does not expect data to be structured as DataLad datasets, it can still be very useful to do so when building a full (meta)data management pipeline from raw data to catalog publishing. For complete instructions on how to install `datalad` and `git-annex`, please refer to the [DataLad Handbook](https://handbook.datalad.org/en/latest/intro/installation.html).\n\nSimilarly, the metadata input to `datalad-catalog` can come from any source as long as it conforms to the catalog schema. While the catalog does not expect metadata originating only from `datalad-metalad`'s extractors, this tool has advanced metadata handling capabilities that will integrate seamlessly with DataLad datasets and the catalog generation process.\n\n\n## 4. Generating a catalog\n\nThe overall catalog generation process actually starts several steps before the involvement of `datalad-catalog`. Steps include:\n\n1. curating data into datasets (a group of files in an hierarchical tree)\n2. adding metadata to datasets and files (the process for this and the resulting metadata formats and content vary widely depending on domain, file types, data availability, and more)\n3. extracting the metadata using an automated tool to output metadata items into a standardized and queryable set\n4. in the current context: translating the metadata into the [catalog schema](https://datalad.github.io/datalad-catalog/display_schema)\n5. in the current context: using `datalad-catalog` to generate a catalog from the [schema-conforming metadata](https://datalad.github.io/datalad-catalog/display_schema)\n\nThe first four steps in this list can follow any arbitrarily specified procedures and can use any arbitrarily specified tools to get the job done. If these steps are completed, correctly formatted data can be input, together with some configuration details, to `datalad-catalog`. This tool then provides several basic commands for catalog generation and customization. *For example:*\n\n```bash\n\ndatalad catalog validate -m <path/to/input/data>\n# Validate input data located at <path/to/input/data> according to the catalog's schema.\n\ndatalad catalog create -c <path/to/catalog/directory> -m <path/to/input/data>\n# Create a catalog at location <path/to/catalog/directory>, using input data located at <path/to/input/data>.\n\ndatalad catalog add -c <path/to/catalog/directory> -m <path/to/input/data>\n# Add metadata to an existing catalog at location <path/to/catalog/directory>, using input data located at <path/to/input/data>.\n\ndatalad catalog set-super -c <path/to/catalog/directory> -i <dataset_id> -v <dataset_version>\n# Set the superdataset of an existing catalog at location <path/to/catalog/directory>, where the superdataset id and version are provided as arguments. The superdataset will be the first dataset displayed when navigating to the root URL of a catalog.\n\ndatalad catalog serve -c <path/to/catalog/directory>\n# Serve the content of the catalog at location <path/to/catalog/directory> via a local HTTP server.\n\ndatalad catalog workflow-new -c <path/to/catalog/directory> -d <path/to/superdataset>\n# Run a workflow for recursive metadata extraction (using datalad-metalad), translating metadata to the catalog schema (using JQ bindings), and adding the translated metadata to a new catalog.\n\ndatalad catalog workflow-update -c <path/to/catalog/directory> -d <path/to/superdataset> -s <path/to/subdataset>\n# Run a workflow for updating a catalog after registering a subdataset to the superdataset which the catalog represents. This workflow includes extraction (using datalad-metalad), translating metadata to the catalog schema (using JQ bindings), and adding the translated metadata to the existing catalog.\n```\n\n<div id=\"tutorial\"><div>\n\n## 5. Tutorial\n\nTo explore the basic functionality of `datalad-catalog`, please refer to [these tutorials](https://github.com/datalad/tutorials/tree/master/notebooks/catalog_tutorials#readme).\n\n\n## 6. An example workflow\n\nThe DataLad ecosystem provides a complete set of free and open source tools that, together, provide full control over dataset/file access and distribution, version control, provenance tracking, metadata addition/extraction/aggregation, and catalog generation. \n\nDataLad itself can be used for decentralised management of data as lightweight, portable and extensible representations. DataLad MetaLad can extract structured high- and low-level metadata and associate it with these datasets or with individual files. And at the end of the workflow, DataLad Catalog can turn the structured metadata into a user-friendly data browser.\n\nImportantly, DataLad Catalog can operate independently as well. Since it provides its own [schema](https://datalad.github.io/datalad-catalog/display_schema) in a standard vocabulary, any metadata that conforms to this schema can be submitted to the tool in order to generate a catalog. Metadata items do not necessarily have to be derived from DataLad datasets, and the metadata extraction does not have to be conducted via DataLad MetaLad.\n\nEven so, the provided set of tools can be particularly powerful when used together in a distributed (meta)data management pipeline.\n\n<br>\n<div style=\"text-align:center;\">\n  <picture>\n    <source media=\"(prefers-color-scheme: light)\" srcset=\"docs/source/_static/datacat3_the_toolset.svg\">\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"docs/source/_static/datacat3_the_toolset_lightbg.svg\">\n    <img src=\"docs/source/_static/datacat3_the_toolset.svg\" width=\"75%\"></img>\n  </picture>\n</div>\n\n\n## 7. Contributing\n\n### Feedback / comments\n\nPlease [create a new issue](https://github.com/jsheunis/data-browser-from-metadata/issues/new) if you have any feedback, comments, or requests.\n\n### Developer requirements\n\nIf you'd like to contribute as a developer, you need to install a number of extra dependencies:\n\n```\ncd datalad-catalog\npip install -r requirements-devel.txt\n```\n\nThis installs `sphinx` and related packages for documentation building, `coverage` for code coverage, and `pytest` for testing.\n\n### Contribution process\n\nTo make a contribution to the code or documentation, please:\n\n- create an issue describing the bug/feature\n- fork the project repository,\n- create a branch from `main`,\n- check that tests succeed: from the project root directory, run `pytest`\n- commit your changes,\n- push to your fork\n- create a pull request with a clear description of the changes\n\n## Contributors ✨\n\nThanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://jsheunis.github.io/\"><img src=\"https://avatars.githubusercontent.com/u/10141237?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Stephan Heunis</b></sub></a><br /><a href=\"https://github.com/datalad/datalad-catalog/issues?q=author%3Ajsheunis\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/datalad/datalad-catalog/commits?author=jsheunis\" title=\"Code\">💻</a> <a href=\"#content-jsheunis\" title=\"Content\">🖋</a> <a href=\"#data-jsheunis\" title=\"Data\">🔣</a> <a href=\"https://github.com/datalad/datalad-catalog/commits?author=jsheunis\" title=\"Documentation\">📖</a> <a href=\"#design-jsheunis\" title=\"Design\">🎨</a> <a href=\"#ideas-jsheunis\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"#infra-jsheunis\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">🚇</a> <a href=\"#maintenance-jsheunis\" title=\"Maintenance\">🚧</a> <a href=\"https://github.com/datalad/datalad-catalog/commits?author=jsheunis\" title=\"Tests\">⚠️</a> <a href=\"#question-jsheunis\" title=\"Answering Questions\">💬</a></td>\n    <td align=\"center\"><a href=\"https://github.com/aqw\"><img src=\"https://avatars.githubusercontent.com/u/765557?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Alex Waite</b></sub></a><br /><a href=\"#data-aqw\" title=\"Data\">🔣</a> <a href=\"#design-aqw\" title=\"Design\">🎨</a> <a href=\"#ideas-aqw\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"https://github.com/datalad/datalad-catalog/commits?author=aqw\" title=\"Code\">💻</a> <a href=\"#userTesting-aqw\" title=\"User Testing\">📓</a> <a href=\"https://github.com/datalad/datalad-catalog/issues?q=author%3Aaqw\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"http://juliankosciessa.eu\"><img src=\"https://avatars.githubusercontent.com/u/40263608?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Julian Kosciessa</b></sub></a><br /><a href=\"#userTesting-jkosciessa\" title=\"User Testing\">📓</a> <a href=\"#tutorial-jkosciessa\" title=\"Tutorials\">✅</a> <a href=\"#ideas-jkosciessa\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"https://github.com/datalad/datalad-catalog/commits?author=jkosciessa\" title=\"Documentation\">📖</a> <a href=\"https://github.com/datalad/datalad-catalog/issues?q=author%3Ajkosciessa\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"http://www.adina-wagner.com\"><img src=\"https://avatars.githubusercontent.com/u/29738718?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Adina Wagner</b></sub></a><br /><a href=\"https://github.com/datalad/datalad-catalog/commits?author=adswa\" title=\"Documentation\">📖</a> <a href=\"https://github.com/datalad/datalad-catalog/issues?q=author%3Aadswa\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/datalad/datalad-catalog/commits?author=adswa\" title=\"Code\">💻</a> <a href=\"#design-adswa\" title=\"Design\">🎨</a> <a href=\"#ideas-adswa\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"#infra-adswa\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">🚇</a> <a href=\"#maintenance-adswa\" title=\"Maintenance\">🚧</a> <a href=\"https://github.com/datalad/datalad-catalog/commits?author=adswa\" title=\"Tests\">⚠️</a> <a href=\"#question-adswa\" title=\"Answering Questions\">💬</a></td>\n    <td align=\"center\"><a href=\"http://www.onerussian.com\"><img src=\"https://avatars.githubusercontent.com/u/39889?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Yaroslav Halchenko</b></sub></a><br /><a href=\"#userTesting-yarikoptic\" title=\"User Testing\">📓</a> <a href=\"#ideas-yarikoptic\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n    <td align=\"center\"><a href=\"http://psychoinformatics.de\"><img src=\"https://avatars.githubusercontent.com/u/136479?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Michael Hanke</b></sub></a><br /><a href=\"#ideas-mih\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n    <td align=\"center\"><a href=\"https://github.com/bpoldrack\"><img src=\"https://avatars.githubusercontent.com/u/10498301?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Benjamin Poldrack</b></sub></a><br /><a href=\"#ideas-bpoldrack\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/christian-monch\"><img src=\"https://avatars.githubusercontent.com/u/17925232?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Christian Mönch</b></sub></a><br /><a href=\"#ideas-christian-monch\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"https://github.com/datalad/datalad-catalog/issues?q=author%3Achristian-monch\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/datalad/datalad-catalog/commits?author=christian-monch\" title=\"Code\">💻</a> <a href=\"https://github.com/datalad/datalad-catalog/commits?author=christian-monch\" title=\"Documentation\">📖</a> <a href=\"https://github.com/datalad/datalad-catalog/commits?author=christian-monch\" title=\"Tests\">⚠️</a> <a href=\"#question-christian-monch\" title=\"Answering Questions\">💬</a> <a href=\"https://github.com/datalad/datalad-catalog/pulls?q=is%3Apr+reviewed-by%3Achristian-monch\" title=\"Reviewed Pull Requests\">👀</a> <a href=\"#design-christian-monch\" title=\"Design\">🎨</a></td>\n    <td align=\"center\"><a href=\"https://github.com/mslw\"><img src=\"https://avatars.githubusercontent.com/u/11985212?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Michał Szczepanik</b></sub></a><br /><a href=\"https://github.com/datalad/datalad-catalog/issues?q=author%3Amslw\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/datalad/datalad-catalog/commits?author=mslw\" title=\"Code\">💻</a> <a href=\"https://github.com/datalad/datalad-catalog/commits?author=mslw\" title=\"Documentation\">📖</a> <a href=\"https://github.com/datalad/datalad-catalog/commits?author=mslw\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/loj\"><img src=\"https://avatars.githubusercontent.com/u/15157717?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Laura Waite</b></sub></a><br /><a href=\"#ideas-loj\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"https://github.com/datalad/datalad-catalog/commits?author=loj\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"http://manukapp.itch.io\"><img src=\"https://avatars.githubusercontent.com/u/86295664?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Leonardo Muller-Rodriguez</b></sub></a><br /><a href=\"#userTesting-Manukapp\" title=\"User Testing\">📓</a> <a href=\"https://github.com/datalad/datalad-catalog/pulls?q=is%3Apr+reviewed-by%3AManukapp\" title=\"Reviewed Pull Requests\">👀</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!\n",
    "description_content_type": "text/markdown; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/datalad/datalad-catalog",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "datalad-catalog",
    "package_url": "https://pypi.org/project/datalad-catalog/",
    "platform": null,
    "project_url": "https://pypi.org/project/datalad-catalog/",
    "project_urls": {
      "Homepage": "https://github.com/datalad/datalad-catalog"
    },
    "release_url": "https://pypi.org/project/datalad-catalog/0.2.1/",
    "requires_dist": [
      "datalad (>=0.17)",
      "datalad-metalad (>=0.4.1)",
      "jsonschema",
      "pyyaml",
      "jq ; platform_system != \"Windows\"",
      "nose ; extra == 'devel'",
      "coverage ; extra == 'devel'",
      "pytest ; extra == 'devel'"
    ],
    "requires_python": ">=3.7",
    "summary": "DataLad Catalog",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17190752,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fa774bc2f76c88693d444e10c1077b75ab51c2e48098f2251d9ec0fa498a663",
          "md5": "ac465a41ccf9bf18a66ba54b8fdfb885",
          "sha256": "01f47020e382b1a85eae55547890fef3f6e98ff9041889ea99b4e6d18afa227c"
        },
        "downloads": -1,
        "filename": "datalad_catalog-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac465a41ccf9bf18a66ba54b8fdfb885",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 606408,
        "upload_time": "2022-09-13T11:54:31",
        "upload_time_iso_8601": "2022-09-13T11:54:31.941286Z",
        "url": "https://files.pythonhosted.org/packages/3f/a7/74bc2f76c88693d444e10c1077b75ab51c2e48098f2251d9ec0fa498a663/datalad_catalog-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb6e37ef6b1b817563fbf9822c8f46a1b8a526743695e6303a99efb2c5502e54",
          "md5": "adfa199154de8f853833e62612da3edb",
          "sha256": "de7ec26745336372ca3487d54ba332105fa9d7792e5d01c22e71e94bc3242c09"
        },
        "downloads": -1,
        "filename": "datalad_catalog-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "adfa199154de8f853833e62612da3edb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6482505,
        "upload_time": "2022-09-13T11:54:39",
        "upload_time_iso_8601": "2022-09-13T11:54:39.580001Z",
        "url": "https://files.pythonhosted.org/packages/bb/6e/37ef6b1b817563fbf9822c8f46a1b8a526743695e6303a99efb2c5502e54/datalad_catalog-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "580fd2defc124ef842a86c0ff5f3f5640cbc76668fc14062fae1c841785af8be",
          "md5": "21c2cee2a146025ff60d60e0933fc8ee",
          "sha256": "b117535ee8a03c227425497343af7cf2936bdccda32e0881b170de6d4fb9dcb9"
        },
        "downloads": -1,
        "filename": "datalad_catalog-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "21c2cee2a146025ff60d60e0933fc8ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 606403,
        "upload_time": "2022-09-13T14:56:53",
        "upload_time_iso_8601": "2022-09-13T14:56:53.833378Z",
        "url": "https://files.pythonhosted.org/packages/58/0f/d2defc124ef842a86c0ff5f3f5640cbc76668fc14062fae1c841785af8be/datalad_catalog-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f808671466890c177f915a8438ff57c871fca4b587fa9e5f653257fda4ddaf31",
          "md5": "9b7750d1778a4c78277b2cc4cc17f119",
          "sha256": "b4d2d4c25f97a5b1730a4c96fbc88b39257c2c2e13b9626e729ce73af33ca6b1"
        },
        "downloads": -1,
        "filename": "datalad_catalog-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9b7750d1778a4c78277b2cc4cc17f119",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6482336,
        "upload_time": "2022-09-13T14:56:55",
        "upload_time_iso_8601": "2022-09-13T14:56:55.508787Z",
        "url": "https://files.pythonhosted.org/packages/f8/08/671466890c177f915a8438ff57c871fca4b587fa9e5f653257fda4ddaf31/datalad_catalog-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "104f79abe84e5515a7b2135c260c811ba9e00b222856b3e0b7ab5ebd4a9344d9",
          "md5": "cc0f161d5469d472c15d7731b1dea8fe",
          "sha256": "010463f97a950a649ebdd079fe71f095ad6b3a10d245f6dcf74975bef759bee6"
        },
        "downloads": -1,
        "filename": "datalad_catalog-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc0f161d5469d472c15d7731b1dea8fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 642636,
        "upload_time": "2022-09-16T11:47:19",
        "upload_time_iso_8601": "2022-09-16T11:47:19.819847Z",
        "url": "https://files.pythonhosted.org/packages/10/4f/79abe84e5515a7b2135c260c811ba9e00b222856b3e0b7ab5ebd4a9344d9/datalad_catalog-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "495daf50eb09964e8831a6ae3c1c24eee1959be8927c010aab1c4d7ae1ca1d9c",
          "md5": "5d9ffe80c364abda01754ed5be08bc71",
          "sha256": "db898bd36f2af9d11e05467ccb6096e1510d3eb0bee9e35c7affc05bb8c841c4"
        },
        "downloads": -1,
        "filename": "datalad_catalog-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5d9ffe80c364abda01754ed5be08bc71",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6496759,
        "upload_time": "2022-09-16T11:47:21",
        "upload_time_iso_8601": "2022-09-16T11:47:21.654926Z",
        "url": "https://files.pythonhosted.org/packages/49/5d/af50eb09964e8831a6ae3c1c24eee1959be8927c010aab1c4d7ae1ca1d9c/datalad_catalog-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "085848e0887ee206db164d5a7dbc5795beec7429fd84cd7efe332b6b18f13ecf",
          "md5": "5bb0d02f0a1f585fd029d6305b928053",
          "sha256": "62a399194a640476a06bfc1eca45d3cf53c2650bc64dcff5eafe986b040f83ce"
        },
        "downloads": -1,
        "filename": "datalad_catalog-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5bb0d02f0a1f585fd029d6305b928053",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 675944,
        "upload_time": "2022-11-24T08:02:07",
        "upload_time_iso_8601": "2022-11-24T08:02:07.804578Z",
        "url": "https://files.pythonhosted.org/packages/08/58/48e0887ee206db164d5a7dbc5795beec7429fd84cd7efe332b6b18f13ecf/datalad_catalog-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ff9cb7baa0e64f71d4565c398d8dcf6e9b14ffc17202a7318e718626c49dd40",
          "md5": "5b5c6ae404fd2655e5ba47cd9ee4a55d",
          "sha256": "94b5f7378a22401a31c02552d70aeb6f74894e1b177e32c7edd5fee0ef5dcf2b"
        },
        "downloads": -1,
        "filename": "datalad_catalog-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5b5c6ae404fd2655e5ba47cd9ee4a55d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6528147,
        "upload_time": "2022-11-24T08:02:10",
        "upload_time_iso_8601": "2022-11-24T08:02:10.233348Z",
        "url": "https://files.pythonhosted.org/packages/5f/f9/cb7baa0e64f71d4565c398d8dcf6e9b14ffc17202a7318e718626c49dd40/datalad_catalog-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06e79d04093a74eb694e674a77363122002b0854d6e733a1089b97d689863c18",
          "md5": "b911728c957c72b7b2315a3ca72e1ec5",
          "sha256": "3943bdde7a3076567bd28e83131ff825fc65241a6bb4f1eb0949abfc9c33d3a7"
        },
        "downloads": -1,
        "filename": "datalad_catalog-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b911728c957c72b7b2315a3ca72e1ec5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 676067,
        "upload_time": "2023-03-07T12:46:49",
        "upload_time_iso_8601": "2023-03-07T12:46:49.088044Z",
        "url": "https://files.pythonhosted.org/packages/06/e7/9d04093a74eb694e674a77363122002b0854d6e733a1089b97d689863c18/datalad_catalog-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5614c84a12adc41d91fb04dbe2851bf512e59895c9c4a93d4a0f1dfa916b1a5d",
          "md5": "481b513f55bea0e72bd2ea88bfd8bb9e",
          "sha256": "8fcf1d4b687878e95ecad3145c12af80a78485baa76fbe33b4430676b82888f8"
        },
        "downloads": -1,
        "filename": "datalad_catalog-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "481b513f55bea0e72bd2ea88bfd8bb9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6528518,
        "upload_time": "2023-03-07T12:46:51",
        "upload_time_iso_8601": "2023-03-07T12:46:51.023956Z",
        "url": "https://files.pythonhosted.org/packages/56/14/c84a12adc41d91fb04dbe2851bf512e59895c9c4a93d4a0f1dfa916b1a5d/datalad_catalog-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "06e79d04093a74eb694e674a77363122002b0854d6e733a1089b97d689863c18",
        "md5": "b911728c957c72b7b2315a3ca72e1ec5",
        "sha256": "3943bdde7a3076567bd28e83131ff825fc65241a6bb4f1eb0949abfc9c33d3a7"
      },
      "downloads": -1,
      "filename": "datalad_catalog-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b911728c957c72b7b2315a3ca72e1ec5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 676067,
      "upload_time": "2023-03-07T12:46:49",
      "upload_time_iso_8601": "2023-03-07T12:46:49.088044Z",
      "url": "https://files.pythonhosted.org/packages/06/e7/9d04093a74eb694e674a77363122002b0854d6e733a1089b97d689863c18/datalad_catalog-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5614c84a12adc41d91fb04dbe2851bf512e59895c9c4a93d4a0f1dfa916b1a5d",
        "md5": "481b513f55bea0e72bd2ea88bfd8bb9e",
        "sha256": "8fcf1d4b687878e95ecad3145c12af80a78485baa76fbe33b4430676b82888f8"
      },
      "downloads": -1,
      "filename": "datalad_catalog-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "481b513f55bea0e72bd2ea88bfd8bb9e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 6528518,
      "upload_time": "2023-03-07T12:46:51",
      "upload_time_iso_8601": "2023-03-07T12:46:51.023956Z",
      "url": "https://files.pythonhosted.org/packages/56/14/c84a12adc41d91fb04dbe2851bf512e59895c9c4a93d4a0f1dfa916b1a5d/datalad_catalog-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}