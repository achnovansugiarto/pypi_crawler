{
  "info": {
    "author": "Alex SIFEL",
    "author_email": "alex.sifel@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# oocas\r\n\r\n[![PyPI version fury.io](https://badge.fury.io/py/oocas.svg)](https://pypi.python.org/pypi/oocas/)\r\n[![PyPI license](https://img.shields.io/pypi/l/oocas.svg)](https://pypi.python.org/pypi/oocas/)\r\n[![PyPI download month](https://img.shields.io/pypi/dm/oocas.svg)](https://pypi.python.org/pypi/oocas/)\r\n\r\n**oocas** is an out-of-core data processing framework built for pandas. Its main purpose is local ETL processing of large data by sequentially processing smaller files.\r\n\r\n## Installation\r\n\r\n```bash\r\npip install oocas\r\n```\r\n\r\n```bash\r\nconda install -c conda-forge oocas \r\n```\r\n\r\n## Usage\r\n\r\nThe data, which are specified by a list of file paths, are read, transformed, and written/returned. In a transform substep data can be cached to be available in later transform substeps. A processing pipeline is build out of callable components.\r\n\r\n+ **Process**\r\n+ **Read**, **FileRead**, ParquetRead, ParquetMetadataRead, **MultiRead**\r\n+ **Transform**, **CacheTransform**\r\n+ **Cache**, IndexCache, TimeIndexCache\r\n+ **Write**, **FileWrite**, ParquetWrite, **MultiWrite**\r\n\r\nHigh level components (bold) support plugin callables in addition to a variety of other useful arguments. Low level components inherit their behavior by passing a predefined method this way.\r\n\r\n## Examples\r\n\r\nExamples can be found in the docs.\r\n\r\n### Read files to dataframe\r\n```python\r\nimport oocas as oc\r\n\r\npaths = oc.find_paths('data/raw')\r\nsqp = oc.Process(oc.ParquetRead(), progress_bar=False)\r\ndf = pd.concat(sqp(paths), axis=0)\r\n```\r\n\r\n###  Random sampling\r\n```python\r\nimport oocas as oc\r\n\r\nsqp = oc.Process(\r\n    oc.ParquetMetaDataRead(),\r\n    lambda x: x.num_rows,\r\n    progress_bar=False)\r\n\r\nnrows = sum(sqp(paths))                     \r\nsample_idxs = np.random.choice(nrows, 10**3)\r\n\r\ndef sample(df, cache):\r\n    adjusted_idxs = sample_idxs - cache.data\r\n    cache(cache.data + len(df))\r\n    return df.iloc[[                                      \r\n        idx for idx in adjusted_idxs\\\r\n             if idx >= 0 and idx < len(df)\r\n    ]].copy()\r\n\r\nsqp = oc.Process(\r\n    oc.ParquetRead(),\r\n    oc.CacheTransform(sample, cache=0))\r\n\r\nsample_df = pd.concat(sqp(paths), axis=0)\r\n```\r\n\r\n###  Time series moving average\r\n```python\r\nimport oocas as oc\r\n\r\ndef moving_average(df, cache):\r\n    nrows = len(df)\r\n    df = pd.concat([cache.data, df])\r\n    cache(df)\r\n    return df.rolling(cache.lookback)\\\r\n        .mean().iloc[-nrows:]\r\n    \r\nsqp = oc.Process(\r\n    oc.ParquetRead(),\r\n    oc.CacheTransform(\r\n        moving_average,\r\n        oc.TimeIndexCache('1H')),\r\n    oc.ParquetWrite(\r\n        path_part_replace=('raw', 'mavg'),\r\n        mkdirs=True))\r\n\r\nmavg_paths = sqp(paths)\r\n```\r\n\r\n### N-to-1 file write\r\n\r\n```python\r\nimport oocas as oc\r\n\r\npickle_multi_to_one_write = oc.FileWrite(\r\n    lambda x, path, **kwargs:\\\r\n        x.to_pickle(path, **kwargs),\r\n    path_transform=lambda x: x[0],\r\n    path_part_replace=('raw', 'pickle'),\r\n    name_transform=lambda x:\\\r\n        '_'.join(x.split('_')[1:]),\r\n    suffix='.pkl.gz',\r\n    mkdirs=True,\r\n    overwrite=True,\r\n    compression='infer')\r\n```\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://alvail.github.io/oocas",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "oocas",
    "package_url": "https://pypi.org/project/oocas/",
    "platform": null,
    "project_url": "https://pypi.org/project/oocas/",
    "project_urls": {
      "Homepage": "https://alvail.github.io/oocas"
    },
    "release_url": "https://pypi.org/project/oocas/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Out-of-core data processing framework for pandas",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14568533,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c64d87724ce709015c9d0a269a2c9123482aa7154bffe7ea79e0e2d7d6c27540",
          "md5": "172ebe0baedab2f2d84ec1a4f8c652b4",
          "sha256": "244dfe7278c912b4395e41fcaa0ee2fbd95775ef7869db83ade9b5e3314ce979"
        },
        "downloads": -1,
        "filename": "oocas-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "172ebe0baedab2f2d84ec1a4f8c652b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3966640,
        "upload_time": "2022-07-27T18:04:49",
        "upload_time_iso_8601": "2022-07-27T18:04:49.478847Z",
        "url": "https://files.pythonhosted.org/packages/c6/4d/87724ce709015c9d0a269a2c9123482aa7154bffe7ea79e0e2d7d6c27540/oocas-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c64d87724ce709015c9d0a269a2c9123482aa7154bffe7ea79e0e2d7d6c27540",
        "md5": "172ebe0baedab2f2d84ec1a4f8c652b4",
        "sha256": "244dfe7278c912b4395e41fcaa0ee2fbd95775ef7869db83ade9b5e3314ce979"
      },
      "downloads": -1,
      "filename": "oocas-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "172ebe0baedab2f2d84ec1a4f8c652b4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3966640,
      "upload_time": "2022-07-27T18:04:49",
      "upload_time_iso_8601": "2022-07-27T18:04:49.478847Z",
      "url": "https://files.pythonhosted.org/packages/c6/4d/87724ce709015c9d0a269a2c9123482aa7154bffe7ea79e0e2d7d6c27540/oocas-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}