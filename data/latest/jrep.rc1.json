{
  "info": {
    "author": "James C. Wise",
    "author_email": "jameschristopherwise@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# JREP\n\nJREP is a general-purpose command line utility that takes the basic concept of GREP and transforms it into an infinitely more versatile tool fit for the modern world.\n\nBasically I couldn't find a good GREP for windows and GREP itself kinda sucks so I did it myself. Excpect dumb bodges and messy code despite my efforts to keep both to a minimum.\n\nCheck [here](#compatibility) for compatibility info\n\nThe current output of `jrep --help`:  \nFor details, [check below](#extended-help-messages)\n\n<!--<HELP MSG>-->\n```\nusage: jrep.py [--help [topic]] [--string] [--enhanced-engine]\n               [--file FILE [FILE ...]] [--glob GLOB [GLOB ...]]\n               [--include-dirs]\n               [--stdin-files | --stdin-globs | --stdin-anti-match-strings]\n               [--no-duplicates] [--no-name-duplicates]\n               [--name-regex Regex [Regex ...]]\n               [--name-anti-regex Regex [Regex ...]]\n               [--name-ignore-regex Regex [Regex ...]]\n               [--full-name-regex Regex [Regex ...]]\n               [--full-name-anti-regex Regex [Regex ...]]\n               [--full-name-ignore-regex Regex [Regex ...]]\n               [--name-glob Glob [Glob ...]]\n               [--name-anti-glob Glob [Glob ...]]\n               [--name-ignore-glob Glob [Glob ...]]\n               [--full-name-glob Glob [Glob ...]]\n               [--full-name-anti-glob Glob [Glob ...]]\n               [--full-name-ignore-glob Glob [Glob ...]]\n               [--dir-name-regex Regex [Regex ...]]\n               [--dir-name-anti-regex Regex [Regex ...]]\n               [--dir-name-ignore-regex Regex [Regex ...]]\n               [--dir-full-name-regex Regex [Regex ...]]\n               [--dir-full-name-anti-regex Regex [Regex ...]]\n               [--dir-full-name-ignore-regex Regex [Regex ...]]\n               [--file-regex Regex [Regex ...]]\n               [--file-anti-regex Regex [Regex ...]]\n               [--file-ignore-regex Regex [Regex ...]]\n               [--match-regex Regex [Regex ...]]\n               [--match-anti-regex Regex [Regex ...]]\n               [--match-ignore-regex Regex [Regex ...]] [--sort SORT]\n               [--sort-regex Regex [Regex ...]] [--sort-dir SORT_DIR]\n               [--no-headers] [--print-dir-names] [--print-file-names]\n               [--print-full-paths] [--print-posix-paths]\n               [--dont-print-matches] [--print-match-offset]\n               [--print-match-range] [--replace Regex [Regex ...]]\n               [--sub Regex [Regex ...]] [--name-sub Regex [Regex ...]]\n               [--dir-name-sub Regex [Regex ...]] [--escape]\n               [--count COUNT [COUNT ...]] [--limit LIMIT [LIMIT ...]]\n               [--depth-first] [--glob-root-dir GLOB_ROOT_DIR]\n               [--match-whole-lines] [--print-failed-files] [--no-warn]\n               [--hard-warn] [--weave-matches] [--strict-weave]\n               [--pre-match-exec cmd] [--match-exec cmd]\n               [--if-match-exec-before cmd] [--if-match-exec-after cmd]\n               [--if-no-match-exec-after cmd] [--pre-file-exec cmd]\n               [--file-exec cmd] [--if-file-exec-before cmd]\n               [--if-file-exec-after cmd] [--if-no-file-exec-after cmd]\n               [--pre-dir-exec cmd] [--dir-exec cmd]\n               [--if-dir-exec-before cmd] [--if-dir-exec-after cmd]\n               [--if-no-dir-exec-after cmd] [--order ORDER [ORDER ...]]\n               [--no-flush] [--force-flush] [--print-rundata] [--verbose]\n               [Regex ...]\n\noptions:\n  --help [topic], -h [topic]            show this help message and exit OR use\n                                        `--help [topic]` for help with [topic]\n\nFiles and regexes:\n  Regex                                 Regex(es) to process matches for\n                                        (reffered to as \"get regexes\")\n                                        \n  --string, -s                          Treat get regexes as strings. Doesn't\n                                        apply to any other options.\n  --enhanced-engine, -E                 Use alternate regex engine from\n                                        https://pypi.org/project/regex/\n                                        \n  --file FILE [FILE ...], -f FILE [FILE ...]\n                                        A list of files to check\n  --glob GLOB [GLOB ...], -g GLOB [GLOB ...]\n                                        A list of globs to check\n  --include-dirs                        Process directories as files\n                                        \n  --stdin-files, -F                     Treat STDIN as a list of files\n  --stdin-globs, -G                     Treat STDIN as a list of globs\n  --stdin-anti-match-strings            Treat STDIN as a list of strings to\n                                        not match\n\nFilters:\n  --no-duplicates, -D                   Don't print duplicate matches (See\n                                        also: --order)\n  --no-name-duplicates                  Don't process files whose names have\n                                        already been processed (takes --name-\n                                        sub, --print-full-paths and --print-\n                                        posix-paths)\n                                        \n  --name-regex Regex [Regex ...], -t Regex [Regex ...]\n                                        If a file name matches all supplied\n                                        regexes, keep going. Otherwise\n                                        continue\n  --name-anti-regex Regex [Regex ...], -T Regex [Regex ...]\n                                        Like --name-regex but excludes file\n                                        names that match any of the supplied\n                                        regexes\n  --name-ignore-regex Regex [Regex ...]\n                                        Like --name-anti-regex but doesn't\n                                        contribute to --count *-failed-files\n  --full-name-regex Regex [Regex ...]   Like --name-regex but for absolute\n                                        file paths (C:/xyz instead of xyz)\n  --full-name-anti-regex Regex [Regex ...]\n                                        Like --name-anti-regex but applied to\n                                        full file paths\n  --full-name-ignore-regex Regex [Regex ...]\n                                        Like --full-name-anti-regex but\n                                        doesn't contribute to --count\n                                        *-failed-files\n                                        \n  --name-glob Glob [Glob ...]           If a file name matches all supplied\n                                        globs, keep going. Otherwise continue\n  --name-anti-glob Glob [Glob ...]      Like --name-glob but excludes file\n                                        names that match any of the supplied\n                                        globs\n  --name-ignore-glob Glob [Glob ...]    Like --name-anti-glob but doesn't\n                                        contribute to --count *-failed-files\n  --full-name-glob Glob [Glob ...]      Like --name-glob but for absolute file\n                                        paths (C:/xyz instead of xyz)\n  --full-name-anti-glob Glob [Glob ...]\n                                        Like --name-anti-glob but applied to\n                                        full file paths\n  --full-name-ignore-glob Glob [Glob ...]\n                                        Like --full-name-anti-glob but doesn't\n                                        contribute to --count *-failed-files\n                                        \n  --dir-name-regex Regex [Regex ...]    If a directory name matches all\n                                        supplied regexes, enter it. Otherwise\n                                        continue\n  --dir-name-anti-regex Regex [Regex ...]\n                                        Like --dir-name-regex but excludes\n                                        directories that match any of the\n                                        supplied regexes\n  --dir-name-ignore-regex Regex [Regex ...]\n                                        Like --dir-name-anti-regex but doesn't\n                                        contribute to --count total-failed-\n                                        dirs\n  --dir-full-name-regex Regex [Regex ...]\n                                        Like --dir-name-regex but for absolute\n                                        directory paths (C:/xyz instead of\n                                        xyz)\n  --dir-full-name-anti-regex Regex [Regex ...]\n                                        Like --dir-name-anti-regex but applied\n                                        to full directory paths\n  --dir-full-name-ignore-regex Regex [Regex ...]\n                                        Like --dir-full-name-anti-regex but\n                                        doesn't contribute to --count total-\n                                        failed-dirs\n                                        \n  --file-regex Regex [Regex ...]        Regexes to test file contents for\n  --file-anti-regex Regex [Regex ...]   Like --file-regex but excludes files\n                                        that match of the supplied regexes\n  --file-ignore-regex Regex [Regex ...]\n                                        Like --file-anti-regex but doesn't\n                                        contribute to --count *-failed-files\n                                        \n  --match-regex Regex [Regex ...]       Groups are split along lone *. Matches\n                                        from the Nth get regex are tested with\n                                        the Nth group\n  --match-anti-regex Regex [Regex ...]  Like --match-regex but excludes\n                                        matches that match any of the supplied\n                                        regexes\n  --match-ignore-regex Regex [Regex ...]\n                                        Like --match-anti-regex but doesn't\n                                        contribute to --count *-failed-matches\n\nSorting:\n  --sort SORT, -S SORT                  Sort files by ctime, mtime, atime,\n                                        name, or size. Prefix key with \"r\" to\n                                        reverse. A windows-esque \"blockwise\"\n                                        sort is also available. Run jrep\n                                        --help blockwise for more info\n  --sort-regex Regex [Regex ...]        Regexes to apply to file names keys\n                                        (like --replace) for purposes of\n                                        sorting (EXPERIMENTAL)\n  --sort-dir SORT_DIR                   --sort on a per-directory basis\n\nOutput:\n  --no-headers, -H                      Don't print match: or file: before\n                                        lines\n                                        \n  --print-dir-names, -d                 Print names of explored directories\n  --print-file-names, -n                Print file names as well as matches\n  --print-full-paths, -p                Print full file paths\n  --print-posix-paths, -P               Replace \\ with / when printing file\n                                        paths\n  --dont-print-matches, -N              Don't print matches (use with --print-\n                                        file-names to only print names)\n  --print-match-offset, -o              Print where the match starts in the\n                                        file as a hexadecimal number (ignores\n                                        -H)\n  --print-match-range, -O               Print where the match starts and ends\n                                        in the file as a hexadecimal number\n                                        (implies -o)\n\nReplace/Sub:\n  --replace Regex [Regex ...], -r Regex [Regex ...]\n                                        Regex replacement\n  --sub Regex [Regex ...], -R Regex [Regex ...]\n                                        re.sub argument pairs after --replace\n                                        is applied. Run jrep.py --help sub for\n                                        more info\n  --name-sub Regex [Regex ...]          Applies --sub to file names. A lone *\n                                        separates subsitutions for y/z and\n                                        C:/x/y/z\n  --dir-name-sub Regex [Regex ...]      --name-sub but for directory names\n  --escape, -e                          Escape back slashes, newlines,\n                                        carriage returns, and non-printable\n                                        characters\n\nMisc.:\n  --count COUNT [COUNT ...], -c COUNT [COUNT ...]\n                                        Count match/file/dir per file, dir,\n                                        and/or total (Ex: --count fm dir-\n                                        files)\n  --limit LIMIT [LIMIT ...], -l LIMIT [LIMIT ...]\n                                        Limit match/file/dir per file, dir,\n                                        and/or total (Ex: --limit filematch=1\n                                        total_dirs=5)\n                                        \n  --depth-first                         Enter subdirectories before processing\n                                        files\n  --glob-root-dir GLOB_ROOT_DIR         Root dir to run globs in (JANK)\n                                        \n  --match-whole-lines, -L               Match whole lines like FINDSTR\n  --print-failed-files                  Print file names even if they fail\n                                        (Partially broken)\n  --no-warn                             Don't print warning messages\n  --hard-warn                           Throw errors instead of warnings\n  --weave-matches, -w                   Weave regex matchdes (print first\n                                        results for each get regex, then\n                                        second results, etc.)\n  --strict-weave, -W                    Only print full weave sets\n\nExec:\n  --pre-match-exec cmd                  Command to run before printing each\n                                        match\n  --match-exec cmd                      Command to run after printing each\n                                        match\n  --if-match-exec-before cmd            Command to run as soon as least one\n                                        match passes\n  --if-match-exec-after cmd             Command to run at the end if at least\n                                        one match passed\n  --if-no-match-exec-after cmd          Command to run at the end if at no\n                                        matches passed\n                                        \n  --pre-file-exec cmd                   Command to run before printing each\n                                        file name\n  --file-exec cmd                       Command to run after printing each\n                                        file name\n  --if-file-exec-before cmd             Command to run as soon as least one\n                                        file passes\n  --if-file-exec-after cmd              Command to run at the end if at least\n                                        one file passed\n  --if-no-file-exec-after cmd           Command to run at the end if at no\n                                        files passed\n                                        \n  --pre-dir-exec cmd                    Command to run before printing each\n                                        dir name\n  --dir-exec cmd                        Command to run after printing each dir\n                                        name\n  --if-dir-exec-before cmd              Command to run as soon as least one\n                                        dir passes\n  --if-dir-exec-after cmd               Command to run at the end if at least\n                                        one dir passed\n  --if-no-dir-exec-after cmd            Command to run at the end if at no\n                                        dirs passed\n\nDebugging/Advanced:\n  --order ORDER [ORDER ...]             The order in which modifications to\n                                        matches are applied. Run jrep --help\n                                        order for more info\n  --no-flush                            Improves speed by disabling manually\n                                        flushing the stdout buffer (ideal for\n                                        chaining commands)\n  --force-flush                         Always flush STDOUT (slow)\n  --print-rundata                       Print raw runData JSON at the end\n                                        (used for debugging)\n  --verbose, -v                         Verbose info\nThe following have extended help that can be seen with --help [topic]: sub, blockwise, order, exec\n```\n<!--</HELP MSG>-->\n\n# Extended help messages\n\nThese can be accessed by doing `jrep --help [topic]` where `[topic]` is the part in parenthesis\n\n<!--<EXTHELP MSGS>-->\n## (`sub`) --sub advanced usage\nThe easiest way to explain advanced uses of `--sub` is to give an example. So take `--sub a ? b ? c d e f + x ? y z * ? t ? e d * abc xyz` as an example.    \nWhat it means is the following\n  \n- `a ? b ? c d e f`: If a match from get regex 0 matches `a` and not `b`, replace `c` with `d` and `e` with `f`  \n- `+`: New conditions but stay on the same get regex  \n- `x ? y z`: If a match from get regex 0 matches `x`, replace `y` with `z`  \n- `*`: Move on to the next get regex  \n- `? t ? e d`: If a match from get regex 1 does't match `t`, replace `e` with `d`  \n- `*`: Move on to the next get regex  \n- `abc xyz`: Replace `abc` with `xyz` without any conditions  \n  \nObviously 99% of use cases don't need conditionals at all so just doing `--sub abc def * uvw xyz` is sufficient\n\n## (`blockwise`) Blockwise sorting\nA generic sort function will think \"file10.jpg\" comes before \"file2.jpg\"  \nWindows, on the other hand, has code that treats the number part as a number  \nBlockwise sort mimics this behaviour by  \n1. Splitting filenames into groups of number and non-number characters. Ex. `abc123def456.jpg` -> `[\"abc\", \"123\", \"def\", \"456\", \".jpg\"]`  \n2. When comparing 2 filenames, compare the first element (\"block\") of both name's lists according to the following two rules\n\t1. If either block is made of non-number characters, compare the two blocks as strings  \n\t2. If both blocks are numbers, compare them as numbers  \n  \nThe end result is that file2.jpg is correctly placed before file10.jpg\n\n## (`order`) `--order` usage\n`--order` determines the order of functions that process matches  \n- The default value for `--order` is replace, match-whole-lines, sub, stdin-anti-match-strings, match-regex, no-name-duplicates, no-duplicates, print-dir-name, print-name, print-match  \n- Changing the order of `sub`, `replace`, and `match-whole-lines` will mostly \"work\" but the output will make next to no sense  \n- The main purpose of this is to move `match-regex` and `no-duplicates` to earlier in the chain\n\n## (`exec`) Using the `--exec` family of options\nUsage looks like `--exec \"echo {}\"` or just `--exec \"echo\"`  \n`--match-exec`/`--exec`: after  printing matches  \n`--pre-match-exec`: before printing matches  \n`--match-exec`: after  printing file names  \n`--pre-match-exec`: before printing file names  \n`--dir-exec`: after  printing directory names  \n`--pre-dir-exec`: before printing directory names\n<!--</EXTHELP MSGS>-->\n\n# Compatibility\n\n&nbsp;|Python 3.6|3.7|3.8|3.9|3.10\n|:-:|:-:|:-:|:-:|:-:|:-:|\nWindows 10  |? |? |? |? |Y \nUbuntu 20.04|? |? |Y?|? |? \n\n- I primarily develop JREP on a Windows 10 machine running Python 3.10\n- Due to how I override some internal stuff I'll need to test each version of python individually\n- I don't have a Mac machine or the $1000 required to get one. It *probably* works but don't count on it\n\nThe end goal is for JREP to 100% work on\n- Windows 7 through 11\n- The second latest LTS releases of every major Linux distro\n- The past decade of Mac machines\n\nI don't think there's much (if any) platform-specific jank in JREP but it'll take a while to confirm that\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Scripter17/JREP",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "JREP",
    "package_url": "https://pypi.org/project/JREP/",
    "platform": null,
    "project_url": "https://pypi.org/project/JREP/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Scripter17/JREP/issues",
      "Homepage": "https://github.com/Scripter17/JREP"
    },
    "release_url": "https://pypi.org/project/JREP/0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A CLI tool based on GREP designed for the modern world",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13974588,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8960f5e35e0f62c8f3c1619ecf2c67e73a3f223a08cb39e3942b899dcbc3a759",
          "md5": "84290bb62e5cb05af8750cca478ca96c",
          "sha256": "ef0fb132b6ac3625a1d5903aa2aeed838540fe580545045fa316c41fdef4a838"
        },
        "downloads": -1,
        "filename": "JREP-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84290bb62e5cb05af8750cca478ca96c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 42763,
        "upload_time": "2022-05-30T06:08:39",
        "upload_time_iso_8601": "2022-05-30T06:08:39.423653Z",
        "url": "https://files.pythonhosted.org/packages/89/60/f5e35e0f62c8f3c1619ecf2c67e73a3f223a08cb39e3942b899dcbc3a759/JREP-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8686213a46a15a10ed1c9b04acc20206dff7059457f603439fc1319b0c020ae2",
          "md5": "c5868f482bc1c28bb32bf6c6dc285131",
          "sha256": "a4553ffe2912a8b0cde6ec2226d0208af0bd33f5fc89f44eb8db4adb4f431188"
        },
        "downloads": -1,
        "filename": "JREP-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c5868f482bc1c28bb32bf6c6dc285131",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 40383,
        "upload_time": "2022-05-30T06:08:40",
        "upload_time_iso_8601": "2022-05-30T06:08:40.682372Z",
        "url": "https://files.pythonhosted.org/packages/86/86/213a46a15a10ed1c9b04acc20206dff7059457f603439fc1319b0c020ae2/JREP-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8960f5e35e0f62c8f3c1619ecf2c67e73a3f223a08cb39e3942b899dcbc3a759",
        "md5": "84290bb62e5cb05af8750cca478ca96c",
        "sha256": "ef0fb132b6ac3625a1d5903aa2aeed838540fe580545045fa316c41fdef4a838"
      },
      "downloads": -1,
      "filename": "JREP-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "84290bb62e5cb05af8750cca478ca96c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 42763,
      "upload_time": "2022-05-30T06:08:39",
      "upload_time_iso_8601": "2022-05-30T06:08:39.423653Z",
      "url": "https://files.pythonhosted.org/packages/89/60/f5e35e0f62c8f3c1619ecf2c67e73a3f223a08cb39e3942b899dcbc3a759/JREP-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8686213a46a15a10ed1c9b04acc20206dff7059457f603439fc1319b0c020ae2",
        "md5": "c5868f482bc1c28bb32bf6c6dc285131",
        "sha256": "a4553ffe2912a8b0cde6ec2226d0208af0bd33f5fc89f44eb8db4adb4f431188"
      },
      "downloads": -1,
      "filename": "JREP-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c5868f482bc1c28bb32bf6c6dc285131",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 40383,
      "upload_time": "2022-05-30T06:08:40",
      "upload_time_iso_8601": "2022-05-30T06:08:40.682372Z",
      "url": "https://files.pythonhosted.org/packages/86/86/213a46a15a10ed1c9b04acc20206dff7059457f603439fc1319b0c020ae2/JREP-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}