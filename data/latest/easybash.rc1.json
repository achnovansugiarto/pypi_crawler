{
  "info": {
    "author": "André Luís",
    "author_email": "andreluisos@me.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "# About\n\neasybash Basher helps you to easily and safely run BASH commands in a Python program using subprocess Popen.\n\nIt's basically a subprocess Popen wrapper.\n\nThe idea is to provide an easy way to execute shell commands without compromising safety. Even though it's possible to pass `shell=True` to Popen in order to execute complex commands, it's not recommended and it's mostly not needed with this package.\n\n# Used libraries\n\n```\nshlex\nsubprocess\ntime\n```\n\nThis package requires no Python third party libraries.\n\n# Installation\n\nYou can install it directly from PyPi using pip:\n\n`pip install easybash`\n\nYou can also install it directly from this repository:\n\n`pip install git+https://github.com/andreluisos/easybash.git`\n\n# Usage\n\n## Importing\nBasher is an object of easybash. So you can import it with the following code:\n\n```python\nfrom easybash import Basher\n```\n\n## Running a command and waiting for the execution to end\n\n```python\nfrom easybash import Basher\n\nBasher('sleep 3')\n```\n## You can add a message \n\n```python\nfrom easybash import Basher\n\nBasher('sleep 3', msg='Sleeping for 3 seconds')\n```\n![msg example](https://github.com/andreluisos/easybash/raw/master/img/1.gif)\n\n## You can debug the execution\n\n```python\nfrom easybash import Basher\n\nBasher('sleep 3', msg='Sleeping for 3 seconds', debug=True)\n```\n![debug example](https://github.com/andreluisos/easybash/raw/master/img/2.gif)\n\n## You can print the stdout/stderr of the command\n\n```python\nfrom easybash import Basher\n\nprint(Basher('ls', msg='Listing files in this dir').stdout)\n```\n![stdout1 example](https://github.com/andreluisos/easybash/raw/master/img/3.gif)\n\n## You can do whatever you want with the output\n\n```python\nfrom easybash import Basher\n\n[print(line) for line in Basher('ls').stdout.split()]\n```\n![stdout2 example](https://github.com/andreluisos/easybash/raw/master/img/4.gif)\n\n## You don't have to wait for command execution to keep running your code\n\n```python\nfrom easybash import Basher\n\ncmd = Basher('sleep 20', wait=False)\nprint(cmd.pid)\n```\n![wait example](https://github.com/andreluisos/easybash/raw/master/img/5.gif)\n\n## Basher will automatically reconize pipes, so you can easily run commands\n*Redirections are being implemented*.\n```python\nfrom easybash import Basher\n\nprint(Basher('ls | wc -l | wc -l').stdout)\n```\n![pipe example](https://github.com/andreluisos/easybash/raw/master/img/6.png)\n\n## You can change the current working directory\n\n```python\nfrom easybash import Basher\n\nprint(Basher('ls', cwd='/home/andreluisos/test').stdout)\n```\n![cwd example](https://github.com/andreluisos/easybash/raw/master/img/7.png)\n\n## You can pass shell=True, but it's not recomended!\nThe idea of the module is to provide an easy way to execute shell commands without compromising safety.\nRedirections will be implemented soon.\n\n```python\nfrom easybash import Basher\n\nBasher('ls', shell=True)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "bash,sh,shell,linux",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "easybash",
    "package_url": "https://pypi.org/project/easybash/",
    "platform": null,
    "project_url": "https://pypi.org/project/easybash/",
    "project_urls": {
      "Documentation": "https://github.com/andreluisos/easybash",
      "Issues": "https://github.com/andreluisos/easybash/issues",
      "Source": "https://github.com/andreluisos/easybash"
    },
    "release_url": "https://pypi.org/project/easybash/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Python shell command helper using the subprocess Popen.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14805493,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a96fabd883321747ad89386ac40a3cb935408ec9da3c60c069853f2ba2cac4b",
          "md5": "754e9f43ae767142e54a1abf52430247",
          "sha256": "4bad2bc56243b224bff21843634bc4cfc0267295b654658a795dfd707a65f325"
        },
        "downloads": -1,
        "filename": "easybash-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "754e9f43ae767142e54a1abf52430247",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16603,
        "upload_time": "2022-08-18T20:55:50",
        "upload_time_iso_8601": "2022-08-18T20:55:50.868450Z",
        "url": "https://files.pythonhosted.org/packages/2a/96/fabd883321747ad89386ac40a3cb935408ec9da3c60c069853f2ba2cac4b/easybash-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e14abf1fa2d2431f2909f82a7b4ec60e4b29d6d34c5fa7d1344064d82f5733c9",
          "md5": "4eb27dd3237a03bcf89549b921c71d01",
          "sha256": "09f4e5f11402aade89898bfb3216dd7b2f011c7246ce7ea638fc88471f373fcd"
        },
        "downloads": -1,
        "filename": "easybash-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4eb27dd3237a03bcf89549b921c71d01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16309,
        "upload_time": "2022-08-18T20:55:52",
        "upload_time_iso_8601": "2022-08-18T20:55:52.700889Z",
        "url": "https://files.pythonhosted.org/packages/e1/4a/bf1fa2d2431f2909f82a7b4ec60e4b29d6d34c5fa7d1344064d82f5733c9/easybash-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a96fabd883321747ad89386ac40a3cb935408ec9da3c60c069853f2ba2cac4b",
        "md5": "754e9f43ae767142e54a1abf52430247",
        "sha256": "4bad2bc56243b224bff21843634bc4cfc0267295b654658a795dfd707a65f325"
      },
      "downloads": -1,
      "filename": "easybash-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "754e9f43ae767142e54a1abf52430247",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16603,
      "upload_time": "2022-08-18T20:55:50",
      "upload_time_iso_8601": "2022-08-18T20:55:50.868450Z",
      "url": "https://files.pythonhosted.org/packages/2a/96/fabd883321747ad89386ac40a3cb935408ec9da3c60c069853f2ba2cac4b/easybash-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e14abf1fa2d2431f2909f82a7b4ec60e4b29d6d34c5fa7d1344064d82f5733c9",
        "md5": "4eb27dd3237a03bcf89549b921c71d01",
        "sha256": "09f4e5f11402aade89898bfb3216dd7b2f011c7246ce7ea638fc88471f373fcd"
      },
      "downloads": -1,
      "filename": "easybash-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4eb27dd3237a03bcf89549b921c71d01",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16309,
      "upload_time": "2022-08-18T20:55:52",
      "upload_time_iso_8601": "2022-08-18T20:55:52.700889Z",
      "url": "https://files.pythonhosted.org/packages/e1/4a/bf1fa2d2431f2909f82a7b4ec60e4b29d6d34c5fa7d1344064d82f5733c9/easybash-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}