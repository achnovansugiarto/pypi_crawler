{
  "info": {
    "author": "Jan-Christoph Klie",
    "author_email": "git@mrklie.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Human Machine Interfaces",
      "Topic :: Software Development :: Libraries",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "# galahad\n\n<a href='https://inception-galahad.readthedocs.io/en/latest'>\n    <img src='https://readthedocs.org/projects/inception-galahad/badge/?version=latest' alt='Documentation Status' />\n</a>\n\n\nMachine learning model server for NLP that can predict AND train. It can be e.g. used for interactive machine\nlearning setups or as an external recommender with [INCEpTION](https://inception-project.github.io/).\nIt provides a REST-like interface and hence is integrable with a wide range of applications and use cases.\n\n## Installation\n\nYou can install the newest version via\n\n    pip install galahad\n\n## Usage\n\n`galahad` is a server-based application that uses [FastApi](https://fastapi.tiangolo.com/)\nin the background. To get started, create a Python script like the one below.\n\n    import logging\n    \n    import uvicorn\n    \n    from galahad.server import GalahadServer\n    from galahad.server.contrib.ner.spacy_ner import SpacyNerTagger\n    from galahad.server.contrib.pos.spacy_pos import SpacyPosTagger\n    from galahad.server.contrib.sentence_classification.sklearn_sentence_classifier import SklearnSentenceClassifier\n    \n    server = GalahadServer(\"my_data_folder\")\n    server.add_classifier(\"SpacyPOS\", SpacyPosTagger(\"en_core_web_sm\"))\n    server.add_classifier(\"SpacyNER\", SpacyNerTagger(\"en_core_web_sm\"))\n    server.add_classifier(\"Sent\", SklearnSentenceClassifier())\n    \n    \n    if __name__ == \"__main__\":\n        logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.DEBUG)\n    \n        uvicorn.run(server, host=\"127.0.0.1\", port=8000)\n\nThis starts `galahad` so that you can use it e.g. together with the `galahad` client\nor as a recommender in [INCEpTION](https://inception-project.github.io/).\n\nAlternatively, you can run it on the command line via `uvicorn main:server`, where `main` is the name of your script \n(in this case, *main.py*) and `server` the name of your `GalahadServer` variable.\n\n## API documentation\n\nWhen running a Galahad instance, you can view the REST API documentation on http://localhost:8000/redoc .\n\n## Examples\n\n`galahad` can be used with a wide range of different clients. A few examples are described in the following:\n\n### INCEpTION\n\n[INCEpTION](https://inception-project.github.io/) is a semantic annotation platform offering intelligent \nassistance and knowledge management. It is widely used in the NLP community for annotating text.\n`galahad` can be used to provide annotation suggestions to improve annotation speed and quality.\nThese can either be static or dynamic. For the latter, `galahad` models are trained and updated during annotation\nto provide better suggestions the more data is annotated.\n\nIn order to connect INCEpTION and `galahad`, you first need to write a server Python script like above. add models to\nyour server and then run it. In INCEpTION, in your project, go to the recommender settings.\nAdd a external recommender V2 to INCEpTION, check the server connection and then select a classifer\nfrom the list. You are now ready to annotate!\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/inception-project/inception-external-recommender-v2/main/img/galahad_inception.gif\" />\n</p>\n\nAs an example, here we annotate named entities and use a pre-trained [Spacy](https://spacy.io/) model.\nGray are recommendations and red are real annotations. Annotators can accept, reject or ignore suggestions\nmade by Galahad.\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/inception-project/inception-external-recommender-v2/main/img/inception_galahad_ner.png\" />\n</p>\n\n### Gradio\n\nAfter starting a Galahad instance, you can visualize the predictions of pretrained models via\n[Gradio](https://gradio.app/). For that, just run \n\n    python examples/gradio_demo.py TASK_NAME\n\nWe currently support part-of-speech tagging (`pos`) and named entity recognition (`ner`) as tasks.\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/inception-project/inception-external-recommender-v2/main/img/gradio_ner.png\" alt=\"Gradio named entity recognition demo\"/>\n</p>\n\n### Python client\n\nGalahad comes with a Python client that you can use to programmatically access the API without worrying about the \nunderlying protocol. Please refer to the API documentation of Galahad that describes how to use it.\n\n## Architecture\n\nGalahad works on the basis of *datasets*, *documents*, *classifiers*, *models*, **annotations**.\n\n- **Document**: A document contains the text and annotations. \n- **Dataset**: a dataset groups annotated documents together, representing e.g. an annotated corpus.\n- **Classifier**: A classifier is a machine learning algorithm that can be used to make predictions and can be optionally\n  be trained. The result of training is called the *model*. There can be multiple models for each classifier, e.g. one\n  per user. \n- **Annotations**: Annotations consist of a type and features. Annotations can either represent spans by having a begin\n  and end feature that points into the text or be standalone.\n\n### Document representation\n\nDocuments are represented as JSON objects. They have a text, a version and annotations. Annotations are grouped by \ntheir type. An example document looks like the following:\n\n```json\n{\n    \"text\": \"Joe waited for the train . The train was late .\",\n    \"version\": 23,\n    \"annotations\": {\n        \"t.token\": [\n            {\"begin\": 0, \"end\": 3},\n            {\"begin\": 4, \"end\": 10},\n            {\"begin\": 11, \"end\": 14},\n            {\"begin\": 15, \"end\": 18},\n            {\"begin\": 19, \"end\": 24},\n            {\"begin\": 25, \"end\": 26},\n            {\"begin\": 27, \"end\": 30},\n            {\"begin\": 31, \"end\": 36},\n            {\"begin\": 37, \"end\": 40},\n            {\"begin\": 41, \"end\": 45},\n            {\"begin\": 46, \"end\": 47}\n        ],\n        \"t.sentence\": [\n            {\"begin\": 0, \"end\": 26},\n            {\"begin\": 27, \"end\": 47}\n        ],\n        \"t.named_entity\": [\n            {\"begin\": 0, \"end\": 3, \"features\": {\"f.value\": \"PER\"}}\n        ]\n    }\n}\n```\n\n### Disk layout\n\nGalahad stores datasets, documents and models on disk. The layout looks like the following:\n\n    data\n    ├───datasets\n    │   └───dataset1\n    │       └───document1\n    │       └───document2\n    │   └───dataset2\n    ├───locks\n    ├───models\n    │   └───classifier1\n    │   └───classifier2\n\nWe also plan to add additional store alternatives to Galahad, for instance SQLite.\n\n### Classifier training\n\nClassifier training is done by creating a new process that then takes over the training. This is needed because of the\nGIL in Python. If we did not do this, then the main thread would be blocked and the web app could not respond to new requests.\nAlso, only one model could be trained at the time. \n\nWhen the request to train a classifier arrives, it is first checked whether training is not already\nrunning. Training the same classifier twice at the same time is prevented by using file locks.\n\n## Development\n\nThe required dependencies are managed by **pip**. A virtual environment\ncontaining all needed packages for development and production can be\ncreated and activated by\n\n    python3 -m venv venv\n    source venv/bin/activate\n    pip install -e \".[all]\"\n    make get_test_dependencies\n\n",
    "description_content_type": "text/markdown; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/inception-project/inception-external-recommender-v2",
    "keywords": "inception",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "galahad",
    "package_url": "https://pypi.org/project/galahad/",
    "platform": null,
    "project_url": "https://pypi.org/project/galahad/",
    "project_urls": {
      "Bug Tracker": "https://github.com/inception-project/inception-external-recommender-v2/issues",
      "Documentation": "https://github.com/inception-project/inception-external-recommender-v2",
      "Homepage": "https://github.com/inception-project/inception-external-recommender-v2",
      "Source Code": "https://github.com/inception-project/inception-external-recommender-v2"
    },
    "release_url": "https://pypi.org/project/galahad/0.1.0.dev0/",
    "requires_dist": [
      "fastapi (==0.75.*)",
      "uvicorn[standard] (==0.17.*)",
      "sortedcontainers (>==2.4.*)",
      "joblib (==1.1.*)",
      "filelock (==3.6.*)",
      "requests (==2.27.*)",
      "requests-toolbelt (==0.9.*)",
      "pytest ; extra == 'all'",
      "datasets ; extra == 'all'",
      "black ; extra == 'all'",
      "isort ; extra == 'all'",
      "sphinx ; extra == 'all'",
      "sphinx-autodoc-typehints ; extra == 'all'",
      "sphinx-rtd-theme ; extra == 'all'",
      "sphinx-autoapi ; extra == 'all'",
      "m2r2 ; extra == 'all'",
      "sphinx-copybutton ; extra == 'all'",
      "sphinx-rst-builder ; extra == 'all'",
      "spacy (==3.2.*) ; extra == 'all'",
      "scikit-learn (>=0.24.*) ; extra == 'all'",
      "gradio (==2.9.*) ; extra == 'all'",
      "nltk (==3.7) ; extra == 'all'",
      "spacy (==3.2.*) ; extra == 'contrib'",
      "scikit-learn (>=0.24.*) ; extra == 'contrib'",
      "gradio (==2.9.*) ; extra == 'demo'",
      "nltk (==3.7) ; extra == 'demo'",
      "black ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "sphinx ; extra == 'doc'",
      "sphinx-autodoc-typehints ; extra == 'doc'",
      "sphinx-rtd-theme ; extra == 'doc'",
      "sphinx-autoapi ; extra == 'doc'",
      "m2r2 ; extra == 'doc'",
      "sphinx-copybutton ; extra == 'doc'",
      "sphinx-rst-builder ; extra == 'doc'",
      "scikit-learn (>=0.24.*) ; extra == 'sklearn'",
      "spacy (==3.2.*) ; extra == 'spacy'",
      "pytest ; extra == 'test'",
      "datasets ; extra == 'test'"
    ],
    "requires_python": ">=3.7.0",
    "summary": "Machine learning model server that can predict AND train",
    "version": "0.1.0.dev0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13912470,
  "releases": {
    "0.1.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83b71ba7ac651a546f98177ea90b7e341413c771b236b1c5c37c0383fb941e09",
          "md5": "47e7610f3a3fccbf48632416b576d45c",
          "sha256": "bd4279966e19c2f59a3f47e05182f79af310f9c09305426875e107fef5c03eca"
        },
        "downloads": -1,
        "filename": "galahad-0.1.0.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47e7610f3a3fccbf48632416b576d45c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 20223,
        "upload_time": "2022-05-23T19:46:54",
        "upload_time_iso_8601": "2022-05-23T19:46:54.891324Z",
        "url": "https://files.pythonhosted.org/packages/83/b7/1ba7ac651a546f98177ea90b7e341413c771b236b1c5c37c0383fb941e09/galahad-0.1.0.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "338d52a1a021464d37ea94f0330a641af7c23a40f2b6fe968b83af9b77943087",
          "md5": "cbad8243f09af6feb96fbf5e13222e3e",
          "sha256": "6127c543547f56bc9005b422385ec00845de3f07ce0716986a028b0120cf159a"
        },
        "downloads": -1,
        "filename": "galahad-0.1.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "cbad8243f09af6feb96fbf5e13222e3e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 19329,
        "upload_time": "2022-05-23T19:46:57",
        "upload_time_iso_8601": "2022-05-23T19:46:57.806193Z",
        "url": "https://files.pythonhosted.org/packages/33/8d/52a1a021464d37ea94f0330a641af7c23a40f2b6fe968b83af9b77943087/galahad-0.1.0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "83b71ba7ac651a546f98177ea90b7e341413c771b236b1c5c37c0383fb941e09",
        "md5": "47e7610f3a3fccbf48632416b576d45c",
        "sha256": "bd4279966e19c2f59a3f47e05182f79af310f9c09305426875e107fef5c03eca"
      },
      "downloads": -1,
      "filename": "galahad-0.1.0.dev0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "47e7610f3a3fccbf48632416b576d45c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.0",
      "size": 20223,
      "upload_time": "2022-05-23T19:46:54",
      "upload_time_iso_8601": "2022-05-23T19:46:54.891324Z",
      "url": "https://files.pythonhosted.org/packages/83/b7/1ba7ac651a546f98177ea90b7e341413c771b236b1c5c37c0383fb941e09/galahad-0.1.0.dev0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "338d52a1a021464d37ea94f0330a641af7c23a40f2b6fe968b83af9b77943087",
        "md5": "cbad8243f09af6feb96fbf5e13222e3e",
        "sha256": "6127c543547f56bc9005b422385ec00845de3f07ce0716986a028b0120cf159a"
      },
      "downloads": -1,
      "filename": "galahad-0.1.0.dev0.tar.gz",
      "has_sig": false,
      "md5_digest": "cbad8243f09af6feb96fbf5e13222e3e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.0",
      "size": 19329,
      "upload_time": "2022-05-23T19:46:57",
      "upload_time_iso_8601": "2022-05-23T19:46:57.806193Z",
      "url": "https://files.pythonhosted.org/packages/33/8d/52a1a021464d37ea94f0330a641af7c23a40f2b6fe968b83af9b77943087/galahad-0.1.0.dev0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}