{
  "info": {
    "author": "monomonedula",
    "author_email": "valh@tuta.io",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![codecov](https://codecov.io/gh/monomonedula/nvelope/branch/master/graph/badge.svg?token=yunFiDdUEK)](https://codecov.io/gh/monomonedula/nvelope)\n[![Build Status](https://app.travis-ci.com/monomonedula/nvelope.svg?branch=master)](https://app.travis-ci.com/monomonedula/nvelope)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Downloads](https://pepy.tech/badge/nvelope)](https://pepy.tech/project/nvelope)\n# nvelope\n\nDefine your JSON schema as Python dataclasses\n\nIt's kinda like Pydantic but better.\n\nNow with JSON-schema generation!\n\n## Installation\n`pip install nvelope`\n\n\n## The problem it solves\n\nWith `nvelope` you can define dataclasses which know how to convert themselves from/to JSON.\nAll with custom checks and custom defined conversions from/to JSON for any type you want to put into your dataclass.\n\nThis library was designed with extensibility in mind, \nso it relies on interfaces (for the most part) rather than \nsome weird inheritance stuff and other magic.\n\nYou can (and probably should) take a look at the code! \nThe code base is microscopic compared to Pydantic.\n\n\n\n## Usage\n\nSay you have a JSON representing a user in your app looking something like this\n```json\n{\n    \"id\": 530716139,\n    \"username\": \"johndoe\",\n    \"language_code\": \"en\"\n}\n```\n\nYou define an envelope for it\n\n```python\nfrom dataclasses import dataclass\n\nfrom nvelope import (Obj, int_conv, string_conv)\n\n@dataclass      # note the @dataclass decorator, it is important\nclass User(Obj):\n    _conversion = {\n        \"id\": int_conv,\n        \"language_code\": string_conv,\n        \"username\": string_conv,\n    }\n\n    id: int\n    language_code: str\n    username: str\n\n```\n\n\nNow you have a model that knows how to read data from the JSON \n(not the raw string, actually, but to the types that are allowed by the\nstandard `json.dumps` function e.g. `dict`, `list`, `str`, `int`, `float`, `bool`, `None` ) ...\n\n```python\nuser = User.from_json(\n    {\n        \"id\": 530716139,\n        \"username\": \"johndoe\",\n        \"language_code\": \"en\"\n    }\n)\n```\n... and knows how to convert itself into JSON \n\n```python\nUser(\n    id=530716139,\n    username=\"johndoe\",\n    language_code=\"en\",\n).as_json() \n\n# returns a dictionary {\n#     \"id\": 530716139,\n#     \"username\": \"johndoe\",\n#     \"language_code\": \"en\"\n# }\n```\n\n\n### Compound envelopes\nYou can also define compound envelopes.\n\nSay we want to define a message and include info about the sender.\nHaving defined the `User` envelope, we can do it like this:\n\n```python\nfrom nvelope import CompoundConv\n\n@dataclass\nclass Message(Obj):\n    _conversion = {\n        \"message_id\": int_conv,\n        \"from_\": CompoundConv(User),\n        \"text\": string_conv,\n    }\n\n    from_: User\n    text: str\n    message_id: int\n```\nand use it the same way:\n\n```python\n# reading an obj from parsed json like this\n\nMessage.from_json(\n    {\n        \"message_id\": 44,\n        \"text\": \"hello there\",\n        \"from_\": {\n            \"id\": 530716139,\n            \"username\": \"johndoe\",\n            \"language_code\": \"en\"\n        }\n    }\n)\n\n# and dumping an object to json like this\n\nimport json\n\njson.dumps(\n    Message(\n        message_id=44,\n        text=\"whatever\",\n        from_=User(\n            id=530716139,\n            username=\"johndoe\",\n            language_code=\"en\",\n        )\n    ).as_json()\n)\n```\n\n\n### Arrays\n\nThis is how you define arrays:\n\n```python\nfrom nvelope import Arr, CompoundConv\n\n\nclass Users(Arr):\n    conversion = CompoundConv(User)\n\n\n# Same API inherited from nvelope.Compound interface\n\nUsers.from_json(\n    [\n        {\n            \"id\": 530716139,\n            \"username\": \"johndoe\",\n            \"language_code\": \"en\",\n        },\n        {\n            \"id\": 452341341,\n            \"username\": \"ivandrago\",\n            \"language_code\": \"ru\",\n        }\n    ]\n)\n\nUsers(\n    [\n        User(\n            id=530716139,\n            username=\"johndoe\",\n            language_code=\"en\",\n        ),\n        User(\n            id=452341341,\n            username=\"ivandrago\",\n            language_code=\"ru\",\n        ),\n    ]\n).as_json()\n```\n\n### Field aliases\n\nAt some point you may need to define an envelope for an API containing certain field names which cannot be\nused in python since they are reserved keywords (such as `def`, `from`, etc.).\n\nThere's a solution for this:\n\n```python\nfrom dataclasses import dataclass\nfrom nvelope import Obj, string_conv, CompoundConv, AliasTable\n\n@dataclass\nclass Comment(Obj):\n    _conversion = {\n        \"text\": string_conv,\n        \"from_\": CompoundConv(User),\n    }\n    \n    \n    _alias_table = AliasTable({\"from_\": \"from\"})\n            \n    text: str\n    from_: User\n\n```\n\nIn this case `from` key gets replaced by `from_` in the python model. \nThe `from_` field gets translated back to `from` when calling `.as_json()`\n\n### Missing and optional fields\n\nThere's a difference between fields that can be set to `None` and fields which may be missing in the JSON at all.\n\nThis is how you specify that a some field may be missing from the JSON and that's OK:\n```python\nfrom dataclasses import dataclass\nfrom typing import Optional\n\nfrom nvelope import MaybeMissing, Obj, OptionalConv, AliasTable\n\n@dataclass\nclass Comment(Obj):\n    _alias_table = AliasTable(\n        {\"from_\": \"from\"}\n    )\n    \n    text: str\n    img: Optional[str]          # this field can be set to None (null), but is must always be present in the JSON\n    from_: MaybeMissing[User]   # this field can be missing from JSON body\n\n    _conversion = {\n        \"text\": string_conv,\n        \"img\": OptionalConv(string_conv),   # note the wrapping with OptionalConv\n        \"from_\": CompoundConv(User),\n    }\n\n```\n\nThis is how you check if the `MaybeMissing` field is actually missing\n```python\ncomment.from_.has()     # returns False if the field is missing\n```\n\nand this is how you get the value:\n```python\ncomment.value()     # raises an error if there's no value, \n                    # so it is recommended to check the output of .has()\n                    #  before calling .value() \n```\n\n### Json-schema support\nThe `Comment` model from we have defined generates schema like this:\n```python\n    Comment.schema()\n```\n\nwith the returned schema looking like this:\n```python\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"from\": {\n            \"properties\": {\n                \"id\": {\"type\": \"integer\"},\n                \"language_code\": {\"type\": \"string\"},\n                \"username\": {\"type\": \"string\"},\n            },\n            \"required\": [\"id\", \"language_code\", \"username\"],\n            \"type\": \"object\",\n        },\n        \"img\": {\"type\": [\"string\", \"null\"]},\n        \"text\": {\"type\": \"string\"},\n    },\n    \"required\": [\"text\", \"img\"],\n}\n```\n**NOTE**: `nvelope` does not perform json schema checks.\n\n### Custom conversions\n\n\nYou may define a custom conversions inheriting from `nvelope.nvelope.Conversion` abstract base class \nor using `nvelope.nvelope.ConversionOf` class. \n\nFor example, this is how `datetime_iso_format_conv` is defined:\n\n```python\nfrom nvelope import WithTypeCheckOnDump, ConversionOf\n\ndatetime_iso_format_conv = WithTypeCheckOnDump(\n    datetime.datetime,\n    ConversionOf(\n        to_json=lambda v: v.isoformat(),\n        from_json=lambda s: datetime.datetime.fromisoformat(s),\n    ),\n)\n\n```\n\nSay we want to jsonify a `datetime` field as POSIX timestamp, instead of storing it in ISO string format.\n\n```python\ndatetime_timestamp_conv = ConversionOf(\n    to_json=lambda v: v.timestamp(),\n    from_json=lambda s: datetime.datetime.fromtimestamp(s),\n    schema={\"type\": \"number\"},\n)\n```\n\nWe could also add `WithTypeCheckOnDump` wrapper in order to add explicit check that \nthe value passed into `.from_json()`\nis indeed `float`.\n\n```python\nfrom nvelope import ConversionOf\n\ndatetime_timestamp_conv = WithTypeCheckOnDump(\n    float,\n    ConversionOf(\n        to_json=lambda v: v.timestamp(),\n        from_json=lambda s: datetime.datetime.fromtimestamp(s),\n        schema={\"type\": \"number\"},\n    )\n)\n```\n\nYou may also go further and implement custom conversion.\nInherit from `nvelope.Conversion` interface, implement its abstract methods, and you are good to go.\n\n\n### Custom compounds\n\nYou can also define custom alternatives to `nvelope.Obj` and `nvelope.Arr`.\nIt will work fine as long as they inherit `nvelope.Compound` interface.\n\nIt currently required 3 methods:\n- `from_json` \n- `as_json`\n- `schema`\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/monomonedula/nvelope",
    "keywords": "serialization,deserialization,json,marshalling,unmarshalling,utility",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nvelope",
    "package_url": "https://pypi.org/project/nvelope/",
    "platform": null,
    "project_url": "https://pypi.org/project/nvelope/",
    "project_urls": {
      "Homepage": "https://github.com/monomonedula/nvelope",
      "Repository": "https://github.com/monomonedula/nvelope"
    },
    "release_url": "https://pypi.org/project/nvelope/1.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.8,<4.0",
    "summary": "Painless JSON marshalling and unmarshalling",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13976430,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa150a4d1e9bd1b095ad8ca1310ad801bb279254db6fb5909d6e55b013d03cf8",
          "md5": "22334fb0a77b58fabe46118a0d7f5561",
          "sha256": "40d917f72765edba2b652666ff850e51ee017039cdaffbf0e8cfcd3671669971"
        },
        "downloads": -1,
        "filename": "nvelope-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "22334fb0a77b58fabe46118a0d7f5561",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 6092,
        "upload_time": "2021-10-07T07:21:57",
        "upload_time_iso_8601": "2021-10-07T07:21:57.073112Z",
        "url": "https://files.pythonhosted.org/packages/fa/15/0a4d1e9bd1b095ad8ca1310ad801bb279254db6fb5909d6e55b013d03cf8/nvelope-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "618cf0f4fa933b84bf7bb325da341641701ddb7bb3543a33f0153ef316f4b32c",
          "md5": "41e5b9c646103e85a3e2d10a8461631a",
          "sha256": "2b7a05a6cc99daf53c683655f10e2e6fa2323fc80a0ef031e78f007d1c02fae8"
        },
        "downloads": -1,
        "filename": "nvelope-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "41e5b9c646103e85a3e2d10a8461631a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 7399,
        "upload_time": "2021-10-07T07:21:59",
        "upload_time_iso_8601": "2021-10-07T07:21:59.053083Z",
        "url": "https://files.pythonhosted.org/packages/61/8c/f0f4fa933b84bf7bb325da341641701ddb7bb3543a33f0153ef316f4b32c/nvelope-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "978de0cd4cfe553906372275b7faf60e3f3a8f39cd575cf9aeb4d7db377fa4ad",
          "md5": "33c5e23a4e409a0b71e80f5d00eb9251",
          "sha256": "612c4e0ff19f8d8d86a91f1af4df5b95d4c51a1cc028480abc58f31a6d97c3b0"
        },
        "downloads": -1,
        "filename": "nvelope-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "33c5e23a4e409a0b71e80f5d00eb9251",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 6351,
        "upload_time": "2021-10-17T12:51:41",
        "upload_time_iso_8601": "2021-10-17T12:51:41.668444Z",
        "url": "https://files.pythonhosted.org/packages/97/8d/e0cd4cfe553906372275b7faf60e3f3a8f39cd575cf9aeb4d7db377fa4ad/nvelope-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa81dc0f4ed29f0038623e9b23e3a2c3e0595a636cedc8d7d2d1c5049be906d4",
          "md5": "8423e6abfde634f1b31a462092945fbf",
          "sha256": "6eb389e8a010904fc7821f79026e4a11e57959eaa4ddcb579bfc071a0d1aa048"
        },
        "downloads": -1,
        "filename": "nvelope-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8423e6abfde634f1b31a462092945fbf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 7680,
        "upload_time": "2021-10-17T12:51:44",
        "upload_time_iso_8601": "2021-10-17T12:51:44.156741Z",
        "url": "https://files.pythonhosted.org/packages/fa/81/dc0f4ed29f0038623e9b23e3a2c3e0595a636cedc8d7d2d1c5049be906d4/nvelope-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ee06a2dcac8fef02d2ef868eff4f95694b04793e4625ce2dda43cab0815e377",
          "md5": "baa10c0769d142e2e07018d1e19acb9e",
          "sha256": "60ddbd2aa907bb599b73622e293c751f85f2a4c0ab8ed167e69cbf43291d3a01"
        },
        "downloads": -1,
        "filename": "nvelope-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "baa10c0769d142e2e07018d1e19acb9e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 6385,
        "upload_time": "2021-11-16T16:39:57",
        "upload_time_iso_8601": "2021-11-16T16:39:57.118169Z",
        "url": "https://files.pythonhosted.org/packages/3e/e0/6a2dcac8fef02d2ef868eff4f95694b04793e4625ce2dda43cab0815e377/nvelope-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6780405eb9e480c86024e65ad2c2dbca26283d5ebbe334afaba15a9cf7d5118f",
          "md5": "4875c27a760d735ed30826438f210311",
          "sha256": "fee4df43cf9937201ebfbd288225b2c32bac5be19d3a0bd93770f24a70730859"
        },
        "downloads": -1,
        "filename": "nvelope-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4875c27a760d735ed30826438f210311",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 7722,
        "upload_time": "2021-11-16T16:39:58",
        "upload_time_iso_8601": "2021-11-16T16:39:58.697753Z",
        "url": "https://files.pythonhosted.org/packages/67/80/405eb9e480c86024e65ad2c2dbca26283d5ebbe334afaba15a9cf7d5118f/nvelope-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c09344da20e39385c2142a1138fc750ce2ecb52540a6c8e3a1a4e955d64c7732",
          "md5": "4c9114e59035196723ce67cb10cfc64c",
          "sha256": "64db93f4902e97c72392bef4adf2753753b14a13b07d2d6151a00680f37199da"
        },
        "downloads": -1,
        "filename": "nvelope-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c9114e59035196723ce67cb10cfc64c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 6410,
        "upload_time": "2021-11-23T19:39:56",
        "upload_time_iso_8601": "2021-11-23T19:39:56.510402Z",
        "url": "https://files.pythonhosted.org/packages/c0/93/44da20e39385c2142a1138fc750ce2ecb52540a6c8e3a1a4e955d64c7732/nvelope-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "513ceda8ede7400576fe24dbdcd8a56a392526e700098c4e7f754d0d549b764c",
          "md5": "a5c00e357eb871ed76ad90b80807f03b",
          "sha256": "ea1f7b522cb70c477958326c7a7d8bda8ac28d784cdb22f1112638fa9599c6c1"
        },
        "downloads": -1,
        "filename": "nvelope-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a5c00e357eb871ed76ad90b80807f03b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 7735,
        "upload_time": "2021-11-23T19:39:58",
        "upload_time_iso_8601": "2021-11-23T19:39:58.615188Z",
        "url": "https://files.pythonhosted.org/packages/51/3c/eda8ede7400576fe24dbdcd8a56a392526e700098c4e7f754d0d549b764c/nvelope-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66545f68cf22bdbba048fede8ed6da9dcfd4193420e1a66ee3b53bc011c16ea3",
          "md5": "8c6aafabc7947c7abd082946c0fffb56",
          "sha256": "b95c98da5e8c5c7d772a0420c8963a316948e9f9b4c3446d5bf43d3a2fcfd855"
        },
        "downloads": -1,
        "filename": "nvelope-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c6aafabc7947c7abd082946c0fffb56",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 6965,
        "upload_time": "2021-12-10T16:25:37",
        "upload_time_iso_8601": "2021-12-10T16:25:37.737921Z",
        "url": "https://files.pythonhosted.org/packages/66/54/5f68cf22bdbba048fede8ed6da9dcfd4193420e1a66ee3b53bc011c16ea3/nvelope-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46b891e8891ae5231f70f48339f56250816c4dc689ad141575afe725c65f326e",
          "md5": "008a1ef92696e23569ca4848bd3292e0",
          "sha256": "b5e79f81466e1b1261f4bc5c4c6722fdef02b2463dc4a87173a893ca7be9ff28"
        },
        "downloads": -1,
        "filename": "nvelope-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "008a1ef92696e23569ca4848bd3292e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 8282,
        "upload_time": "2021-12-10T16:25:39",
        "upload_time_iso_8601": "2021-12-10T16:25:39.683590Z",
        "url": "https://files.pythonhosted.org/packages/46/b8/91e8891ae5231f70f48339f56250816c4dc689ad141575afe725c65f326e/nvelope-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6becfa44b2f10d626ecad59620623a2dfd409e5ac541adcdcf99af52e87dfb46",
          "md5": "a78436d122b17f8ab22526007fe3db97",
          "sha256": "203c5e8a6ee214a33d7fd9a4ff84c66323fdd5e1eecc5bb36c52322a5f5102a3"
        },
        "downloads": -1,
        "filename": "nvelope-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a78436d122b17f8ab22526007fe3db97",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 10104,
        "upload_time": "2022-02-03T12:42:34",
        "upload_time_iso_8601": "2022-02-03T12:42:34.105344Z",
        "url": "https://files.pythonhosted.org/packages/6b/ec/fa44b2f10d626ecad59620623a2dfd409e5ac541adcdcf99af52e87dfb46/nvelope-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f49ef057fc75d2b43ef5794dba237bf33ad0414bdb96f09c167003ec8a9af2b",
          "md5": "f7cf24afaa232424a2439936f811e87f",
          "sha256": "cf362c9874bf94b89f739aab34e68868cca05f7cb7bee69afc50a192bef7e2f8"
        },
        "downloads": -1,
        "filename": "nvelope-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f7cf24afaa232424a2439936f811e87f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 12722,
        "upload_time": "2022-02-03T12:42:36",
        "upload_time_iso_8601": "2022-02-03T12:42:36.091881Z",
        "url": "https://files.pythonhosted.org/packages/1f/49/ef057fc75d2b43ef5794dba237bf33ad0414bdb96f09c167003ec8a9af2b/nvelope-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c133f43be2dc40c37a1ba13bd57516422edea8ec8e67b623ba40267f1eb205d",
          "md5": "784cb0d4736b8dcc4d476f5861693db0",
          "sha256": "929fe6f791947e218c20c9320da6b5504ad8c471095432d1a52bae5638fe3b7c"
        },
        "downloads": -1,
        "filename": "nvelope-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "784cb0d4736b8dcc4d476f5861693db0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 10388,
        "upload_time": "2022-05-30T10:38:09",
        "upload_time_iso_8601": "2022-05-30T10:38:09.268549Z",
        "url": "https://files.pythonhosted.org/packages/0c/13/3f43be2dc40c37a1ba13bd57516422edea8ec8e67b623ba40267f1eb205d/nvelope-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12586f49a5a55d4242aad6f9aca52b6351e42abfe28d43c4f4fc3c9831e28e8f",
          "md5": "25337cd466a3ea65c126a66bbb473e3e",
          "sha256": "8073d5487962000405439bf90dec1cedd99fd5bb366b2fbd026f7579b1c0d878"
        },
        "downloads": -1,
        "filename": "nvelope-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "25337cd466a3ea65c126a66bbb473e3e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 12987,
        "upload_time": "2022-05-30T10:38:11",
        "upload_time_iso_8601": "2022-05-30T10:38:11.396142Z",
        "url": "https://files.pythonhosted.org/packages/12/58/6f49a5a55d4242aad6f9aca52b6351e42abfe28d43c4f4fc3c9831e28e8f/nvelope-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c133f43be2dc40c37a1ba13bd57516422edea8ec8e67b623ba40267f1eb205d",
        "md5": "784cb0d4736b8dcc4d476f5861693db0",
        "sha256": "929fe6f791947e218c20c9320da6b5504ad8c471095432d1a52bae5638fe3b7c"
      },
      "downloads": -1,
      "filename": "nvelope-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "784cb0d4736b8dcc4d476f5861693db0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 10388,
      "upload_time": "2022-05-30T10:38:09",
      "upload_time_iso_8601": "2022-05-30T10:38:09.268549Z",
      "url": "https://files.pythonhosted.org/packages/0c/13/3f43be2dc40c37a1ba13bd57516422edea8ec8e67b623ba40267f1eb205d/nvelope-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "12586f49a5a55d4242aad6f9aca52b6351e42abfe28d43c4f4fc3c9831e28e8f",
        "md5": "25337cd466a3ea65c126a66bbb473e3e",
        "sha256": "8073d5487962000405439bf90dec1cedd99fd5bb366b2fbd026f7579b1c0d878"
      },
      "downloads": -1,
      "filename": "nvelope-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "25337cd466a3ea65c126a66bbb473e3e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 12987,
      "upload_time": "2022-05-30T10:38:11",
      "upload_time_iso_8601": "2022-05-30T10:38:11.396142Z",
      "url": "https://files.pythonhosted.org/packages/12/58/6f49a5a55d4242aad6f9aca52b6351e42abfe28d43c4f4fc3c9831e28e8f/nvelope-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}