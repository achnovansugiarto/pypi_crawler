{
  "info": {
    "author": "James Sparc",
    "author_email": "jimmysparc@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Tornado-tryton\n> Adds Tryton support to the Tornado application.\n<!--  Live demo — TO DO [_here_](https://api.example.com). <!-- If you have the project hosted somewhere, include the link here. -->\n\n> Please, add stars to this project on [github](https://github.com/TinKurbatoff/tornado-tryton) if this was helpful for your project. Share your questions and thoughts. Always welcome! \n\n## Table of Contents\n* [General Info](#general-information)\n* [Technologies Used](#technologies-used)\n* [Features](#features)\n* [Screenshots](#screenshots)\n* [Setup](#setup)\n* [Usage](#usage)\n* [Project Status](#project-status)\n* [Room for Improvement](#room-for-improvement)\n* [Acknowledgements](#acknowledgements)\n* [Contact](#contact)\n<!-- * [License](#license) -->\n\n\n## General Information\n- This module helps to connect to tryton back-end from Tornado web application \n- I created a Mobile App that used data from Tryton DB to operate, there is a [flask_tryton](https://pypi.org/project/flask-tryton/) module, but I don't want to use flask as it blocking a server and wasn't intended to use in multi-user multitasking operations. As I use Tornado as API back-end I needed to connect a Tornado back-end to Tryton DB and its models. \n<!-- You don't have to answer all the questions - just the ones relevant to your project. -->\n\n\n## Technologies Used\n- trytond - version 5.8.1\n- tornado - version 6.1\n\n\n## Features\nList the ready features here:\n- Supports async operations (the main advantage of using Tornado over Flask)\n- Reads/writes to a Tryton database in a non-blocking manner.\n- Supports all data models, including user-defined, from the Pool of the installed Tryton ERP.\n\n\n\n## Screenshots\n![TODO: Example screenshot](./img/screenshot.png)\n<!-- If you have screenshots you'd like to share, include them here. -->\n\n\n## Setup\n```\n$pip3 install tornado_tryton\n```\n\n## Usage\nBy default transactions are read-only except for PUT, POST, DELETE and PATCH request methods. \nYou need trytond with all your user modules installed and proper trytond.conf database configuration set:\n```\n[database]\nuri =  postgresql://tryton:<my_secret_password>@postgres:5432/\n```\n\n```\n#!python3\nfrom tornado_tryton import Tryton # class to connect to Tryton DB\n\nimport json\n\n## Tornado webserver modules\nfrom tornado.web import RequestHandler\nfrom tornado.gen import coroutine # used for async execution in earlier version of Python \nfrom tornado.options import define, options # to access to a server-wide configuration \n\nTRYTON_CONFIG = '/etc/trytond.conf' # Check Tryton's doc for Tryton configuration details, access to Tryton DB is configured here \n\n############## TRYTON INTEGRATION #################\ndefine('config', default={\"TRYTON_DATABASE\" : \"tryton\", \"TRYTON_CONFIG\" : TRYTON_CONFIG}, help='app config path')\ntryton = Tryton(options)\nUser = tryton.pool.get('res.user') # Important class type - User\n\n@tryton.default_context # To create a default context of Tryton transactions\ndef default_context():\n    return User.get_preferences(context_only=True)\n## —————————————————————————————————————————————————————————\n\n###########  RESPONDER FOR API REQUEST, HTML requests are handled in the same way.\nclass TrytonUser(RequestHandler):\n    \"\"\"Request for log in to Tryton\"\"\"\n    SUPPORTED_METHODS = (\"GET\", \"POST\",)\n\n    def jsonify(self, data, status=200):\n        header = \"Content-Type\"\n        body = \"application/json\"\n        self.set_header(header, body)\n        self.set_status(status)\n        self.write(json.dumps(data))\n\n    @tryton.transaction() ## To initiate tryton transaction and pass \"local\" request details \n    async def post(self, login, password):            \n\n        # Check login and authorize\n        user = User.search([('login', 'ilike', login)]) # Use `ilike` to ignore char case in login             \n        if len(user)>0:\n            # So, login is exist\n            user, = User.search([('login', 'ilike', login)]) # to get the the first from the list if many\n            parameters = {}\n            parameters['password'] = password\n            user_id = User.get_login(user.login, parameters) # bicrypt hash function\n            if user_id:\n                ## If user_id found — everyting is correct\n                return self.jsonify(data={\"result\" : \"success\"}, status = 200)\n            else:\n                ## If none found — password is incorrect\n                return self.jsonify({\"result\" : \"wrong password\"}, status=401)\n        else:\n            return self.jsonify({\"result\" : \"unknown user\"}, status=401)\n```\n\n\n## Project Status\nProject is: _in progress_ .\n\n\n## Room for Improvement\nIt is tested with only one server configuration and may have some issues in production.\n\nRoom for improvement:\n- Test with more than 10 concurrent connections\n- Add a large file-handling support\n\nTo do:\n- TODO: Switch context if there are MANY Tryton databases/accounts available.\n- TODO: e-mailing support\n\n\n## Acknowledgements\nGive credit here.\n- This project was inspired by [Tryton community](https://discuss.tryton.org/)...\n- This project is based on the flask_tryton module at [PyPi](https://pypi.org/project/flask-tryton/)...\n- Many thanks to Cédric Krier for support of the Tryton project and prompt answers on the forum.\n\n\n## Contact\nFeel free to contact me with any questions!\n\n<!-- Optional -->\n## License\nProject is maintained under GNU GPL v.3 \n<!-- This project is open source and available under the [... License](). -->\n\n<!-- You don't have to include all sections - just the one's relevant to your project -->\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/TinKurbatoff/tornado-tryton",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tornado-tryton",
    "package_url": "https://pypi.org/project/tornado-tryton/",
    "platform": "",
    "project_url": "https://pypi.org/project/tornado-tryton/",
    "project_urls": {
      "Bug Tracker": "https://github.com/TinKurbatoff/tornado-tryton/issues",
      "Homepage": "https://github.com/TinKurbatoff/tornado-tryton"
    },
    "release_url": "https://pypi.org/project/tornado-tryton/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Adds Tryton support to Tornado application.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10410836,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "659f62512d2362e4a6450b17d2aef1d865625801cf9bcd81356b334d5ac4b6ee",
          "md5": "b1aeea641cac37fb8833a94b912eb40e",
          "sha256": "5fc0ee6034a487775a65453700afa3ba4a5fc09d47a985061dd4602353d45fb8"
        },
        "downloads": -1,
        "filename": "tornado_tryton-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1aeea641cac37fb8833a94b912eb40e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18849,
        "upload_time": "2021-05-19T22:35:58",
        "upload_time_iso_8601": "2021-05-19T22:35:58.641011Z",
        "url": "https://files.pythonhosted.org/packages/65/9f/62512d2362e4a6450b17d2aef1d865625801cf9bcd81356b334d5ac4b6ee/tornado_tryton-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c67aa68fbcd59114b4a0052619db26149bf40d206688fe4f75769ff747604f68",
          "md5": "987572508c3b1d9df660b6f767e349e3",
          "sha256": "7f16c8906f8301162b790fe0dbff0f0b129fa4d0b21a2e74184871ee971221d2"
        },
        "downloads": -1,
        "filename": "tornado-tryton-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "987572508c3b1d9df660b6f767e349e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20709,
        "upload_time": "2021-05-19T22:36:00",
        "upload_time_iso_8601": "2021-05-19T22:36:00.817920Z",
        "url": "https://files.pythonhosted.org/packages/c6/7a/a68fbcd59114b4a0052619db26149bf40d206688fe4f75769ff747604f68/tornado-tryton-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80e1c17d3a5a4a6f37f55b06bbd5145cdf1a18bdc3e92de09abe0973508d0839",
          "md5": "da9bded4c304a58a32f311a51ee756d0",
          "sha256": "ada7cb26cf9b542e621cc6bda342c82648a0d4775122bd267132b8b97a997487"
        },
        "downloads": -1,
        "filename": "tornado_tryton-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "da9bded4c304a58a32f311a51ee756d0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21369,
        "upload_time": "2021-05-19T23:32:59",
        "upload_time_iso_8601": "2021-05-19T23:32:59.693219Z",
        "url": "https://files.pythonhosted.org/packages/80/e1/c17d3a5a4a6f37f55b06bbd5145cdf1a18bdc3e92de09abe0973508d0839/tornado_tryton-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "80e1c17d3a5a4a6f37f55b06bbd5145cdf1a18bdc3e92de09abe0973508d0839",
        "md5": "da9bded4c304a58a32f311a51ee756d0",
        "sha256": "ada7cb26cf9b542e621cc6bda342c82648a0d4775122bd267132b8b97a997487"
      },
      "downloads": -1,
      "filename": "tornado_tryton-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "da9bded4c304a58a32f311a51ee756d0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 21369,
      "upload_time": "2021-05-19T23:32:59",
      "upload_time_iso_8601": "2021-05-19T23:32:59.693219Z",
      "url": "https://files.pythonhosted.org/packages/80/e1/c17d3a5a4a6f37f55b06bbd5145cdf1a18bdc3e92de09abe0973508d0839/tornado_tryton-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}