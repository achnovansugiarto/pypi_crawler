{
  "info": {
    "author": "Dawid Kraczkowski",
    "author_email": "dawid.kraczkowski@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "# chocs-aws-xray\nAWS X-Ray middleware for chocs library.\n\n## Installation \nthrough poetry:\n```shell\npoetry add chocs_middleware.xray\n```\nor through pip:\n```shell\npip install chocs_middleware.xray\n```\n\n## Usage\n\nThe following snippet is the simplest integration example.\n\n> Please note x-ray won't work in WSGI mode, it has to be deployed as aws lambda in order to work.\n> \n```python\nfrom chocs import Application, HttpResponse, serve\nfrom chocs_middleware.xray import AwsXRayMiddleware\n\napp = Application(AwsXRayMiddleware())\n\n\n@app.get(\"/hello\")\ndef say_hello(request):\n    return HttpResponse(\"Hello\")\n\nserve(app)\n```\n\n### Setting up custom error handler\n\nAWS X-Ray middleware provides a way to setup a custom error handler which may become handy when you\nneed to supplement your logs with additional information. Please consider the following example:\n\n```python\nfrom chocs import Application, HttpResponse, HttpStatus\nfrom chocs_middleware.xray import AwsXRayMiddleware\n\ndef error_handler(request, error, segment):\n    segment.add_exception(error)\n    \n    return HttpResponse(\"NOT OK\", HttpStatus.INTERNAL_SERVER_ERROR)\n\napp = Application(AwsXRayMiddleware(error_handler=error_handler))\n\n\n@app.get(\"/hello\")\ndef say_hello(request):\n    raise Exception(\"Not Today!\")\n    return HttpResponse(\"Hello\")\n\n```\n\n> To learn more about error_handler interface please click [here.](\"./chocs_middleware/xray/middleware.py:16\") \n\n### Accessing x-ray recorded from within your application layer\n```python\nfrom chocs import Application, HttpResponse\nfrom chocs_middleware.xray import AwsXRayMiddleware\n\napp = Application(AwsXRayMiddleware())\n\n@app.get(\"/hello\")\ndef say_hello(request):\n    xray_recorder = request.attributes[\"aws_xray_recorder\"] # Here is the instance of your recorder.\n    \n    return HttpResponse(\"OK\")\n\n```\n\nThat's all.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kodemore/chocs-aws-xray",
    "keywords": "aws,x-ray,chocs,http,middleware",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "chocs-middleware.xray",
    "package_url": "https://pypi.org/project/chocs-middleware.xray/",
    "platform": "",
    "project_url": "https://pypi.org/project/chocs-middleware.xray/",
    "project_urls": {
      "Documentation": "https://github.com/kodemore/chocs-aws-xray",
      "Homepage": "https://github.com/kodemore/chocs-aws-xray",
      "Repository": "https://github.com/kodemore/chocs-aws-xray"
    },
    "release_url": "https://pypi.org/project/chocs-middleware.xray/1.0.0/",
    "requires_dist": [
      "chocs (>=1.0.0,<2.0.0)",
      "aws-xray-sdk (>=2.9.0,<3.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "Middleware to integrate aws x-ray with chocs.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12605508,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6792bff1cd72721d381064b0d9e4941dabf321e0d520e329ad216c2f2525a983",
          "md5": "f0e3d5b5f120d7de8ab959abbf18235c",
          "sha256": "4cdeeef1cb88422e36624520d1815c2d05176094eeb1d353ad14c6467a8270a4"
        },
        "downloads": -1,
        "filename": "chocs_middleware.xray-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f0e3d5b5f120d7de8ab959abbf18235c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 4539,
        "upload_time": "2022-01-18T09:12:22",
        "upload_time_iso_8601": "2022-01-18T09:12:22.960312Z",
        "url": "https://files.pythonhosted.org/packages/67/92/bff1cd72721d381064b0d9e4941dabf321e0d520e329ad216c2f2525a983/chocs_middleware.xray-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6792bff1cd72721d381064b0d9e4941dabf321e0d520e329ad216c2f2525a983",
        "md5": "f0e3d5b5f120d7de8ab959abbf18235c",
        "sha256": "4cdeeef1cb88422e36624520d1815c2d05176094eeb1d353ad14c6467a8270a4"
      },
      "downloads": -1,
      "filename": "chocs_middleware.xray-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f0e3d5b5f120d7de8ab959abbf18235c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 4539,
      "upload_time": "2022-01-18T09:12:22",
      "upload_time_iso_8601": "2022-01-18T09:12:22.960312Z",
      "url": "https://files.pythonhosted.org/packages/67/92/bff1cd72721d381064b0d9e4941dabf321e0d520e329ad216c2f2525a983/chocs_middleware.xray-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}