{
  "info": {
    "author": "NonProjects",
    "author_email": "thenonproton@pm.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Security :: Cryptography",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Archiving :: Backup"
    ],
    "description": "TGBOX: encrypted cloud storage based on Telegram\n================================================\n.. image:: https://readthedocs.org/projects/tgbox/badge/?version=latest\n\n.. code-block:: python\n\n        from tgbox.api import (\n            TelegramClient,\n            make_remotebox,\n            make_localbox\n        )\n        from asyncio import run as asyncio_run\n        from tgbox.keys import Phrase, make_basekey\n        from getpass import getpass # Hidden input\n\n        # Phone number linked to your Telegram account\n        PHONE_NUMBER = '+10000000000'\n\n        # This two will not work. Get your own at https://my.telegram.org\n        API_ID, API_HASH = 1234567, '00000000000000000000000000000000'\n\n        async def main():\n            tc = TelegramClient(\n                phone_number = PHONE_NUMBER,\n                api_id = API_ID,\n                api_hash = API_HASH\n            )\n            await tc.connect() # Connecting with Telegram\n            await tc.send_code() # Requesting login code\n\n            await tc.log_in(\n                code = int(input('Code: ')),\n                password = getpass('Pass: ')\n            )\n            # Generating your passphrase\n            p = Phrase.generate()\n            print(p.phrase.decode())\n\n            # WARNING: This will use 1GB of RAM for a\n            # couple of seconds. See help(make_basekey)\n            basekey = make_basekey(p)\n\n            # Make EncryptedRemoteBox\n            erb = await make_remotebox(tc)\n            # Make DecryptedLocalBox\n            dlb = await make_localbox(erb, basekey)\n            # Obtain DecryptedRemoteBox\n            drb = await erb.decrypt(dlb=dlb)\n\n            # CATTRS is a File's CustomAttributes. You\n            # can specify any you want. Here we will add\n            # a \"comment\" attr with a true statement :^)\n            cattrs = {'comment': b'Cats are cool B-)'}\n\n            # Preparing file for upload. This will return a PreparedFile object\n            pf = await dlb.prepare_file(open('cats.png','rb'), cattrs=cattrs)\n\n            # Uploading PreparedFile to the RemoteBox\n            # and return DecryptedRemoteBoxFile\n            drbf = await drb.push_file(pf)\n\n            # Retrieving some info from the RemoteBoxFile\n            print('File size:', drbf.size, 'bytes')\n            print('File name:', drbf.file_name)\n\n            # You can also access all information about\n            # the RemoteBoxFile you need from the LocalBox\n            dlbf = await dlb.get_file(drbf.id)\n\n            print('File path:', dlbf.file_path)\n            print('Custom Attributes:', dlbf.cattrs)\n\n            # Downloading file back.\n            await drbf.download()\n\n            # Close all connections\n            # after work was done\n            await erb.done()\n            await dlb.done()\n\n        asyncio_run(main())\n\nMotivation\n----------\n\nThe Telegram is beautiful app. Not only by mean of features and Client API, but it's also good in cryptography and secure messaging. In the last years, core and client devs of Telegram mostly work for \"social-network features\", i.e video chats and message reactions which is OK, but there also can be plenty of \"crypto-related\" things.\n\nTarget\n------\n\nThis *[unofficial]* library targets to be a PoC of **encrypted file storage** inside the Telegram, but can be used as standalone API.\n\nAbstract\n--------\n\nWe name *\"encrypted cloud storage\"* as **Box** and the API to it as **Tgbox**. There is **two** of boxes: the **RemoteBox** and the **LocalBox**. They define a basic primitives. You can share your Box and separate Files with other people absolutely secure - only You and someone you want will have decryption key, even through insecure communication canals (`e2e <https://en.wikipedia.org/wiki/End-to-end_encryption>`__). You can make unlimited amount of Boxes, Upload & Download speed is **faster** than in official Telegram clients and maximum filesize is around **2GB** and around **4GB** for Premium users.\n\nDocumentation\n-------------\n\nSee `ReadTheDocs <https://tgbox.readthedocs.io/>`__ for main information and help.\n\nYou can also build docs from the source\n\n.. code-block:: console\n\n   git clone https://github.com/NonProject/tgbox --branch=indev\n   cd tgbox && python3 -m pip install .[doc] # Install with doc\n   cd docs && make html && firefox _build/html/index.html\n\nThird party & thanks to\n-----------------------\n- `⭐️ <https://github.com/NonProjects/tgbox/stargazers>`__ **Stargazers!**\n- `Sphinx_rtd_theme <https://github.com/readthedocs/sphinx_rtd_theme>`__ (`MIT <https://github.com/readthedocs/sphinx_rtd_theme/blob/master/LICENSE>`__)\n- `Regex <https://github.com/mrabarnett/mrab-regex>`__ (`LICENSE <https://github.com/mrabarnett/mrab-regex/blob/hg/LICENSE.txt>`__)\n- `Aiosqlite <https://github.com/omnilib/aiosqlite>`__ (`MIT <https://github.com/omnilib/aiosqlite/blob/main/LICENSE>`__)\n- `Telethon <https://github.com/LonamiWebs/Telethon>`__ (`MIT <https://github.com/LonamiWebs/Telethon/blob/master/LICENSE>`__)\n- `Ecdsa <https://github.com/tlsfuzzer/python-ecdsa>`__ (`LICENSE <https://github.com/tlsfuzzer/python-ecdsa/blob/master/LICENSE>`__)\n- `Filetype <https://github.com/h2non/filetype.py>`__ (`MIT <https://github.com/h2non/filetype.py/blob/master/LICENSE>`__)\n- `Cryptg <https://github.com/cher-nov/cryptg>`__ (`LICENSE <https://github.com/cher-nov/cryptg/blob/master/LICENSE.txt>`__)\n- `Cryptography <https://github.com/pyca/cryptography>`__ (`LICENSE <https://github.com/pyca/cryptography/blob/main/LICENSE>`__)\n\nResources\n---------\n- Official **developer channel**: `@nontgbox <https://telegram.me/nontgbox>`__\n- **Example** TGBOX **container**: `@nontgbox_non <https://telegram.me/nontgbox_non>`__",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/NonProjects/tgbox/archive/refs/tags/v1.1.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/NonProjects/tgbox",
    "keywords": "Telegram,Cloud-Storage,Cloud,API,Asyncio,Non-official",
    "license": "LGPL-2.1",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tgbox",
    "package_url": "https://pypi.org/project/tgbox/",
    "platform": null,
    "project_url": "https://pypi.org/project/tgbox/",
    "project_urls": {
      "Download": "https://github.com/NonProjects/tgbox/archive/refs/tags/v1.1.1.tar.gz",
      "Homepage": "https://github.com/NonProjects/tgbox"
    },
    "release_url": "https://pypi.org/project/tgbox/1.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Encrypted cloud storage API based on a Telegram API",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17422384,
  "releases": {
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6636e7622e9880eeea87b56deef23c1fd6cbf6b74e8d73af63fdbba3aaf22ad4",
          "md5": "46212a50169fa87c633ee7ced7ee55c3",
          "sha256": "f26b3048da56a4ed5756bea7a76f42a2f317fc59ded6b4353b8cb0a05dc1b1f0"
        },
        "downloads": -1,
        "filename": "tgbox-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "46212a50169fa87c633ee7ced7ee55c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 80103,
        "upload_time": "2021-12-13T20:11:54",
        "upload_time_iso_8601": "2021-12-13T20:11:54.274861Z",
        "url": "https://files.pythonhosted.org/packages/66/36/e7622e9880eeea87b56deef23c1fd6cbf6b74e8d73af63fdbba3aaf22ad4/tgbox-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "201b7bfb920dffd34022c4a92fe1b124de83fb9843b7b657d8499c86ccb9e97a",
          "md5": "79abcbe83dfec2e0b474849fd4c6de95",
          "sha256": "4c65fa271c91170d9baf174da868cab326b5f28bd5b3ed4713d15c5fcec1d41f"
        },
        "downloads": -1,
        "filename": "tgbox-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "79abcbe83dfec2e0b474849fd4c6de95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 81202,
        "upload_time": "2021-12-20T10:47:20",
        "upload_time_iso_8601": "2021-12-20T10:47:20.361367Z",
        "url": "https://files.pythonhosted.org/packages/20/1b/7bfb920dffd34022c4a92fe1b124de83fb9843b7b657d8499c86ccb9e97a/tgbox-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3907bb4db5b148754e669508fc49c4b040cb320c1ea5de15909f61809eb5dbda",
          "md5": "9916f000dbedaf397f55f979c81f9c26",
          "sha256": "058f2e422af4ba3baf8f39b0b50f08875822d3d6cb853a4d7eef47e998595a97"
        },
        "downloads": -1,
        "filename": "tgbox-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9916f000dbedaf397f55f979c81f9c26",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 80704,
        "upload_time": "2022-01-06T22:37:40",
        "upload_time_iso_8601": "2022-01-06T22:37:40.631691Z",
        "url": "https://files.pythonhosted.org/packages/39/07/bb4db5b148754e669508fc49c4b040cb320c1ea5de15909f61809eb5dbda/tgbox-0.3.2.tar.gz",
        "yanked": true,
        "yanked_reason": "This version have critical bug, don't use it. See https://github.com/NonProjects/tgbox/commit/c0a25b6842efee26cd452ae74090da80ea9eb508#comments for more details."
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22d006fb1fa1f6dbe25ccf1fcab1b611e1c2fa0ef0921f3ea4617368f13e9eef",
          "md5": "1aa5c938059caba87c2809318469803a",
          "sha256": "2f3efd0a4da411d5bd553b2dbf9c0460de1eec5362cf8d9f7a88e46f60916a5b"
        },
        "downloads": -1,
        "filename": "tgbox-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1aa5c938059caba87c2809318469803a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 81048,
        "upload_time": "2022-01-09T17:07:02",
        "upload_time_iso_8601": "2022-01-09T17:07:02.255552Z",
        "url": "https://files.pythonhosted.org/packages/22/d0/06fb1fa1f6dbe25ccf1fcab1b611e1c2fa0ef0921f3ea4617368f13e9eef/tgbox-0.3.3.tar.gz",
        "yanked": true,
        "yanked_reason": "This version have critical bug, don't use it. See https://github.com/NonProjects/tgbox/commit/c0a25b6842efee26cd452ae74090da80ea9eb508#comments for more details."
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0567138ccc7f92d3ac3bc01f7e8e5e6d0ad29cea292c27e1af1289ae265d7abc",
          "md5": "6a411f3eeec0778f1e692de60045cb64",
          "sha256": "14a81b8a8ed2c258ffae4a003d4a793bb143fb87c77a1a88a9235253b38c6d74"
        },
        "downloads": -1,
        "filename": "tgbox-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6a411f3eeec0778f1e692de60045cb64",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 85644,
        "upload_time": "2022-08-19T12:33:08",
        "upload_time_iso_8601": "2022-08-19T12:33:08.325000Z",
        "url": "https://files.pythonhosted.org/packages/05/67/138ccc7f92d3ac3bc01f7e8e5e6d0ad29cea292c27e1af1289ae265d7abc/tgbox-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3a3640b78966d40b8b0541aac45718d1232f38991d4852a3adc5a7698f897f1",
          "md5": "b74f24b0ff8f877a770ef39abc1e8231",
          "sha256": "7c6d56ce3dbc6241b076a385ba91bf133430b8a762562da74d30ade30c5a9bfd"
        },
        "downloads": -1,
        "filename": "tgbox-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b74f24b0ff8f877a770ef39abc1e8231",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 76840,
        "upload_time": "2023-03-21T17:21:58",
        "upload_time_iso_8601": "2023-03-21T17:21:58.495389Z",
        "url": "https://files.pythonhosted.org/packages/c3/a3/640b78966d40b8b0541aac45718d1232f38991d4852a3adc5a7698f897f1/tgbox-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b10b34de27162b17c0c220a03b19b80938f8753a3ecc847e9277c200b2a2434",
          "md5": "3848a282f5b24c73869047f92764b43a",
          "sha256": "fc8457c462fd4884763607dc28318a7c6d3430537fd93a743299d8bb926f86b2"
        },
        "downloads": -1,
        "filename": "tgbox-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3848a282f5b24c73869047f92764b43a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 76878,
        "upload_time": "2023-03-23T22:43:50",
        "upload_time_iso_8601": "2023-03-23T22:43:50.966059Z",
        "url": "https://files.pythonhosted.org/packages/7b/10/b34de27162b17c0c220a03b19b80938f8753a3ecc847e9277c200b2a2434/tgbox-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7b10b34de27162b17c0c220a03b19b80938f8753a3ecc847e9277c200b2a2434",
        "md5": "3848a282f5b24c73869047f92764b43a",
        "sha256": "fc8457c462fd4884763607dc28318a7c6d3430537fd93a743299d8bb926f86b2"
      },
      "downloads": -1,
      "filename": "tgbox-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3848a282f5b24c73869047f92764b43a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 76878,
      "upload_time": "2023-03-23T22:43:50",
      "upload_time_iso_8601": "2023-03-23T22:43:50.966059Z",
      "url": "https://files.pythonhosted.org/packages/7b/10/b34de27162b17c0c220a03b19b80938f8753a3ecc847e9277c200b2a2434/tgbox-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}