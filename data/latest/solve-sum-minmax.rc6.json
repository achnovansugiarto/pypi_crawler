{
  "info": {
    "author": "Yewen Zhou",
    "author_email": "yz4175@columbia.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![Github All Releases](https://img.shields.io/github/license/Hegelim/solve-sum-minmax)]()\n[![Github All Releases](https://img.shields.io/github/v/release/Hegelim/solve-sum-minmax)]()\n[![Github All Releases](https://img.shields.io/github/downloads/Hegelim/solve-sum-minmax/total)]()\n[![Github All Releases](https://img.shields.io/github/issues/Hegelim/solve-sum-minmax)]()  \n**About**:  \n`solve-sum-minmax` is a Python module that allows you to solve a sum of min/max equations \nby taking advantage of the powerful `sympy` library. For instance, say you want to \nsolve this equation: min(400, 500x) + min(200, 500x) + min(0, 500x) = 700 \nwith the assumption that x is within range (0, 1).  \nIn Math, the rigorous way would \nrequire you to set up all possible conditions, which \nmight result in huge computation. \nCurrently, there aren't any available packages in Python\nthat allows you to solve this kind of equation fastly and efficiently. Thus,\nthis package is developed to fill the void and hopefully be of use to the broad \npopulation.  \n****\n**Quick Start**:  \nLet's say you want to solve the equation \nmin(500, 600a) + max(400, 500a) = 500. However, solving it in Math means you \nwould have to set up the conditions, then solve the check for each one of them, \nwhich sounds like a lot of work, especially for smart people like you \nwho know how to take advantage of existing tools. So you ask yourself,\n\"What if there is a library that lets me solve it like a piece of cake?\" Well, \nthere is a library for you now! First off, you need to install it via pip \nin your terminal like below:  \n```\npip install solve-sum-minmax\n```\nThen to solve your problem, simply type in these\ncodes in your Python console: \n```\n>>> from solve-sum-minmax import solver\n>>> eq = \"min(500, 600*a) + max(400, 500*a) = 500\"\n>>> solver.auto_solve(eq, \"a\")\nFiniteSet(1/6)\n```\nWhola! In fact, this is a pretty complex problem, but \nyou just solved it with 3 lines of code. But hold on, what does it mean? \nLet's break it down: the core function \n`auto_solve` takes in two required parameters \n`equation` and `var_name`. `equation` takes in a string of the equation you want to solve \nand `var_name` lets you define your variable with flexibility, such as `\"a\"`\nor `\"x\"`, although currently, it only supports `\"a\"`. \nYou can also pass in `\"low\"`, `\"high\"`, which lets you specify the range \nof your variable. Further details are included in the docstring \nif you are interested.  \n****\n**Perks**:  \n* **Fast**: the module solves a set of complex min and max equations usually \n  under 100 ms, depending on your hardware. \nFor example, for an equation as complex as below, it takes 7 ms on average to \n  give you a solution:\n  \n```\n>>> from solve-sum-minmax import solver \n>>> eq = \"max(600*a, 400) + min(200*a, 500) + min(100, 300*a) + 50*a = 600\"\n>>> %timeit solver.auto_solve(eq, \"a\")\nFiniteSet(4/11)\n7.1 ms ± 225 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n```\n* **Accurate**: it handles exact Rational numbers and intervals. \n* **Flexible**：you have a lot of flexibility in defining your equation, \n  see below. \n****\n**Format guide**:  \nBecause the module depends heavily on regular expressions, please follow \nthe guide on how to define your equations carefully, or the module might break.   \nIn a nutshell, wrap the equation you want to solve in a string with the format\nsimilar to the example: \n```\n>>> eq = \"20 + max(600*a, 400) + min(200*a, 500) + min(100, 300*a) + 50*a = 600\"\n```\nBefore we delve into explanations in details, let's define a few terms: \n* **value_term**: the value you want to solve your equation for, here it's `600`. \n* **minmax_term**: it is what it means in English, for example, `max(600*a, 400)`.\n* **cons_var_term**: terms with constants times variables, such as `50*a`.\n\nIn brief, what you **can** do include:\n* put the variable either in the 1st or 2nd place inside the parenthesis, for \nexample, either `min(200, 300*a)` or `min(300*a, 200)` is fine.\n* use min and max together in one equation.\n* use + and/or -. \n* have constants in front of min or max, such as `2*min(400, 400a)`.\n* have any space between each component.\n* have leading 0s before variable, such as `min(0*a, 200)`.\n* have constants inside min or max, such as `min(20, 30)`.\n\nWhat you **can't** do include: \n* use `==` instead of `=`.\n* for the `cons_var_term`, have variables before constants, such as `a*50` \ninstead of `50*a`.\n* missing any parenthesis. \n* use other operators instead of + or -.\n* missing any necessary `*` operator for each variable.\n* put any constants on the left-hand side of the equation. Do me a favor, if \nyou have any constants, subtract it from the right-hand side and \n  rearrange your terms before using the module. \n****\n**Limitations**:  \n* Currently, the module only supports `\"a\"` as the variable. \n* Because the module heavily depends on regular expressions, \n  the user needs to follow the format of the \nequation carefully, or the module might break.\n* The equation must be uni-variate, i.e., there can only be one independent \nvariable. \n****\n**Version history**: \nVersion | Core Ideas | Return Rationals | Return Intervals | Error Handling\n------------ | ------------- | ------------- | ------------- | ------------- \nv0.0.1 | numerical methods | No | No | No\nv0.0.2 | numerical methods | No | No | No\nv0.0.3 | combinations | Yes | No | No  \nv0.0.4 | intervals | Yes | Yes | No \nv0.1.0 | intervals | Yes | Yes | Yes \n****\n**Contact**:  \n* **Email**: yz4175@columbia.edu\n* **Collaboration**: collaborations are welcomed, please email me if you \nare interested.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hegelim/solve-sum-minmax",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "solve-sum-minmax",
    "package_url": "https://pypi.org/project/solve-sum-minmax/",
    "platform": "",
    "project_url": "https://pypi.org/project/solve-sum-minmax/",
    "project_urls": {
      "Homepage": "https://github.com/hegelim/solve-sum-minmax"
    },
    "release_url": "https://pypi.org/project/solve-sum-minmax/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A package to solve the sum of min/max equations",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10823566,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3df48fad036af42f381f6447ec658275e3392fe56cc745100a7fb3889c01a7b9",
          "md5": "55d01294c047fe6acdf627f3206d7ddb",
          "sha256": "b53b7a7e53502e3c9016bf6c0b70b84cb33e8712b67342a3f5a3e1b9800978e5"
        },
        "downloads": -1,
        "filename": "solve_sum_minmax-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "55d01294c047fe6acdf627f3206d7ddb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3511,
        "upload_time": "2021-06-23T02:23:01",
        "upload_time_iso_8601": "2021-06-23T02:23:01.259137Z",
        "url": "https://files.pythonhosted.org/packages/3d/f4/8fad036af42f381f6447ec658275e3392fe56cc745100a7fb3889c01a7b9/solve_sum_minmax-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3cbd3a4f5967d9c308e5dc2e3f4573084da009b89e5916a75aeb5b4ee91afb9",
          "md5": "884c5fd01f5c482a18a4434082b86df7",
          "sha256": "28d5a583b2b97bf9792a01891dfa9bc287be6e93b77b9dbc6625ca66ebdea2b9"
        },
        "downloads": -1,
        "filename": "solve-sum-minmax-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "884c5fd01f5c482a18a4434082b86df7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3094,
        "upload_time": "2021-06-23T02:23:04",
        "upload_time_iso_8601": "2021-06-23T02:23:04.560462Z",
        "url": "https://files.pythonhosted.org/packages/c3/cb/d3a4f5967d9c308e5dc2e3f4573084da009b89e5916a75aeb5b4ee91afb9/solve-sum-minmax-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19cc6d0a089bc453639c945143f1ce7b91c93c0d0663e1e52f0d6aa9e5240cd6",
          "md5": "dcf5af0306562d2cf8ddc01b20463c3d",
          "sha256": "a99a9db397c78069fc02b4a04280a6d982359ccd88e16407f5d604c7b7a00f0f"
        },
        "downloads": -1,
        "filename": "solve_sum_minmax-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dcf5af0306562d2cf8ddc01b20463c3d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3842,
        "upload_time": "2021-06-23T08:49:04",
        "upload_time_iso_8601": "2021-06-23T08:49:04.676938Z",
        "url": "https://files.pythonhosted.org/packages/19/cc/6d0a089bc453639c945143f1ce7b91c93c0d0663e1e52f0d6aa9e5240cd6/solve_sum_minmax-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "867c7d00a12a8b5351d77cb75b0fe7f1a3bf103f56507e535b06527cbe615790",
          "md5": "efb7fad207bb75f20ad61373f5da5851",
          "sha256": "d56d93a42fbb135f93cc2aa57891688c573c9d576945fa648a1a327f34f31566"
        },
        "downloads": -1,
        "filename": "solve-sum-minmax-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "efb7fad207bb75f20ad61373f5da5851",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3423,
        "upload_time": "2021-06-25T08:16:19",
        "upload_time_iso_8601": "2021-06-25T08:16:19.319838Z",
        "url": "https://files.pythonhosted.org/packages/86/7c/7d00a12a8b5351d77cb75b0fe7f1a3bf103f56507e535b06527cbe615790/solve-sum-minmax-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a3d12995415e6b912910a3297fe7e07a6062d63fe4213f319082a94a507b706",
          "md5": "efaf53f707173449559d06613bb16027",
          "sha256": "84bada5abdd6d250b8dd2765499c9598047cacf93aa059cc4696f110b644a8e6"
        },
        "downloads": -1,
        "filename": "solve_sum_minmax-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "efaf53f707173449559d06613bb16027",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4839,
        "upload_time": "2021-06-25T08:16:18",
        "upload_time_iso_8601": "2021-06-25T08:16:18.058559Z",
        "url": "https://files.pythonhosted.org/packages/8a/3d/12995415e6b912910a3297fe7e07a6062d63fe4213f319082a94a507b706/solve_sum_minmax-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1dca8bd4ff8a970495ab4aced5aa4b17cee13d36be442de40cdc71bbbe72dbd4",
          "md5": "27b09b87442cc21358869e7116f25476",
          "sha256": "9067deb7a10a8809c315be1d6cfc44ae5d9268f5e761d239d88f9a8e54b5b726"
        },
        "downloads": -1,
        "filename": "solve-sum-minmax-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "27b09b87442cc21358869e7116f25476",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4526,
        "upload_time": "2021-06-25T08:16:20",
        "upload_time_iso_8601": "2021-06-25T08:16:20.835715Z",
        "url": "https://files.pythonhosted.org/packages/1d/ca/8bd4ff8a970495ab4aced5aa4b17cee13d36be442de40cdc71bbbe72dbd4/solve-sum-minmax-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "455c53ab8c64b1c37b96853671297a5f36ddbec8fd6a27924610525479505a6d",
          "md5": "fd17970c3355acb2c89e6053a8a16605",
          "sha256": "a13e2535207dc8333906858945a85e05d1738d583a9cd00cce0361794401a04e"
        },
        "downloads": -1,
        "filename": "solve_sum_minmax-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fd17970c3355acb2c89e6053a8a16605",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7299,
        "upload_time": "2021-07-02T09:46:34",
        "upload_time_iso_8601": "2021-07-02T09:46:34.429220Z",
        "url": "https://files.pythonhosted.org/packages/45/5c/53ab8c64b1c37b96853671297a5f36ddbec8fd6a27924610525479505a6d/solve_sum_minmax-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e6ea2c3aa752cc260c95ef3dfe69e16f16c77a3f83f18840e7e4049e025a4a0",
          "md5": "f83c39d884846e0bb513bd3e8a592b5a",
          "sha256": "f56d7816678f58513bdb95651f111d7e947fa26f7ca86435b8f3752f46a093e1"
        },
        "downloads": -1,
        "filename": "solve-sum-minmax-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f83c39d884846e0bb513bd3e8a592b5a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8974,
        "upload_time": "2021-07-02T09:46:36",
        "upload_time_iso_8601": "2021-07-02T09:46:36.282334Z",
        "url": "https://files.pythonhosted.org/packages/7e/6e/a2c3aa752cc260c95ef3dfe69e16f16c77a3f83f18840e7e4049e025a4a0/solve-sum-minmax-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9916fbd20340a93546bd4ae6f6f1e6c43f068358cdc24fa7fbe5e0aac7f9ca16",
          "md5": "f57f0e2f9da3aebb4b50c56b1ec28f23",
          "sha256": "e2f5539c562869da90fcfbb7544e9dbf16725ce9632ea234d8e9e982c85e28b7"
        },
        "downloads": -1,
        "filename": "solve_sum_minmax-0.1.0-py3.9.egg",
        "has_sig": false,
        "md5_digest": "f57f0e2f9da3aebb4b50c56b1ec28f23",
        "packagetype": "bdist_egg",
        "python_version": "0.1.0",
        "requires_python": ">=3.6",
        "size": 14365,
        "upload_time": "2021-07-05T06:41:49",
        "upload_time_iso_8601": "2021-07-05T06:41:49.565291Z",
        "url": "https://files.pythonhosted.org/packages/99/16/fbd20340a93546bd4ae6f6f1e6c43f068358cdc24fa7fbe5e0aac7f9ca16/solve_sum_minmax-0.1.0-py3.9.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa039ae21dda61a0c7576aa62770888775e7221045557ccad87ff08c303fe3a0",
          "md5": "272a60939de53da11d6f8f16e48cb94e",
          "sha256": "c1a4f539782ce2b423569358c63fc78b3927bc16cb7405a1b6fb931dac63e55d"
        },
        "downloads": -1,
        "filename": "solve_sum_minmax-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "272a60939de53da11d6f8f16e48cb94e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8904,
        "upload_time": "2021-07-03T11:37:51",
        "upload_time_iso_8601": "2021-07-03T11:37:51.186446Z",
        "url": "https://files.pythonhosted.org/packages/fa/03/9ae21dda61a0c7576aa62770888775e7221045557ccad87ff08c303fe3a0/solve_sum_minmax-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4b5d2ce40de7b395aae6753ab7e331bc619765207429d914f27cbfcd694a596",
          "md5": "35524d253f1174fe4e445e8b9170e889",
          "sha256": "ecd23a1644f315160e8349c6219c30d9d4c713c70abc21bd52aa92589d667b22"
        },
        "downloads": -1,
        "filename": "solve-sum-minmax-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "35524d253f1174fe4e445e8b9170e889",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10300,
        "upload_time": "2021-07-03T11:37:53",
        "upload_time_iso_8601": "2021-07-03T11:37:53.039874Z",
        "url": "https://files.pythonhosted.org/packages/d4/b5/d2ce40de7b395aae6753ab7e331bc619765207429d914f27cbfcd694a596/solve-sum-minmax-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b2c421a7a690ac3d5c25a407502a6f49e74e8ebc39790f3e8cddb7fe04a12b7",
          "md5": "432efab72ea0300cb373062253c70a1c",
          "sha256": "666680ce9353e1bcbd25bbe92f11d77f7362a491f1049d42f617775530c8e5c0"
        },
        "downloads": -1,
        "filename": "solve_sum_minmax-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "432efab72ea0300cb373062253c70a1c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8907,
        "upload_time": "2021-07-05T06:44:17",
        "upload_time_iso_8601": "2021-07-05T06:44:17.932495Z",
        "url": "https://files.pythonhosted.org/packages/4b/2c/421a7a690ac3d5c25a407502a6f49e74e8ebc39790f3e8cddb7fe04a12b7/solve_sum_minmax-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4b2c421a7a690ac3d5c25a407502a6f49e74e8ebc39790f3e8cddb7fe04a12b7",
        "md5": "432efab72ea0300cb373062253c70a1c",
        "sha256": "666680ce9353e1bcbd25bbe92f11d77f7362a491f1049d42f617775530c8e5c0"
      },
      "downloads": -1,
      "filename": "solve_sum_minmax-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "432efab72ea0300cb373062253c70a1c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8907,
      "upload_time": "2021-07-05T06:44:17",
      "upload_time_iso_8601": "2021-07-05T06:44:17.932495Z",
      "url": "https://files.pythonhosted.org/packages/4b/2c/421a7a690ac3d5c25a407502a6f49e74e8ebc39790f3e8cddb7fe04a12b7/solve_sum_minmax-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}