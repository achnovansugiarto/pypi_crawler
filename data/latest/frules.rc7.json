{
  "info": {
    "author": "MichaÅ‚ Jaworski",
    "author_email": "swistakm@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![Build Status](https://travis-ci.org/swistakm/frules.svg?branch=master)](https://travis-ci.org/swistakm/frules)\n[![Coverage Status](https://coveralls.io/repos/swistakm/frules/badge.svg?branch=master)](https://coveralls.io/r/swistakm/frules?branch=master)\n\n# frules - simple functional fuzzy rules\n\n\nFrules stands for **fuzzy/funtional rules**. It allows to work easily with\nfuzzy rules and variables.\n\nInstallation:\n\n    pip install frules\n\n\n## Linguistic variables and expressions\nExpression is a core concept in frules. `Expression` class represents subrange\nof [linguistic variable](http://en.wikipedia.org/wiki/Fuzzy_logic#Linguistic_variables) in\nfuzzy logic.\n\nVariables in classical math take numerical values. in fuzzy logic, the\n*linguistic variables* are non-numeric and are described with expressions.\nExpressions map continuous variable like nemerical temperature to its\nlinguistic counterpart. For example temperature can be described as cold, warm\nor hot. There is no strict boundary between cold and warm - this is why this\nexpressions are fuzzy.\n\nTo create new expression we use function that takes numerical value of\ncontiunous variable and returns *truth value*. Truth value ranges between\n0 and 1 - it's a degree of membership of continous value to that linguistic\nvariable.\n\n```python\nfrom frules.expressions import Expression\n#We know that anything over 50 degrees is hot and below 40 is't hot\nhot = Expression(lambda x: min(1, max((x - 40) / 10., 0)))\n```\n\nThis ugly lambda is representation of some fuzzy set. If we take a look how it\nbehaves, we'll see that it in fact returns 1 for anything over 50, 0 for\nanything below 40 and some linear values between 40 and 50:\n\n```python\n>>> map(lambda x: {x: min(1, max((x - 40) / 10., 0))}, xrange(35, 55, 2))\n[{35: 0}, {37: 0}, {39: 0}, {41: 0.1}, {43: 0.3}, {45: 0.5}, {47: 0.7}, {49: 0.9}, {51: 1}, {53: 1}\n```\n\nUsing a lot of lambdas in practice makes your code a mess. Fuzzy expressions\ndescribed this way are additionally hard to write because of some value\nassertions they must satisfy.\n\nThis is why we ancapsulate don't use raw functions and encapsulate them with\nexpressions. Moreover frules provides a bunch of helpers that eases definition\nof new expressions. Example of full set of expressions for temperature variable\ncould look this way:\n\n```python\nfrom frules.expressions import Expression as E\nfrom frules.expressions import ltrapezoid, trapezoid, rtrapezoid\n\ncold = E(ltrapezoid(10, 20), \"cold\")        # anything below 10, more is fuzzy\nwarm = E(trapezoid(10, 20, 30, 35), \"warm\") # anything between 20 and 30\nhot = E(rtrapezoid(30, 35), \"hot\")          # anything over 35, less is fuzzy\n```\n\nExpressions can be reused/mixed using logical operators:\n\n```python\ncold_or_hot = cold || warm\nnot_hot = !hot\n```\n\nOptional names will be helpful when we start to work with fuzzy rules.\n\n## Fuzzy rules\nAlthough expressions define linguistic variables, they aren't strictly bound\nto any variable. They are rather the adjectives we use to describe something and\ntheir meaning depends strictly on context. Both *person* and *data* could\nbe *big* but this particular adjective has slighlty different meaning in each\ncase.\n\n`Rule` objects bounds continous variable with expressions. Rules also can also\nbe evaluated to see how true they are for given continous input.\n\n```\n>>> from frules.rules import Rule\n>>> is_hot = Rule(temperature=hot)\n>>> is_hot.eval(temperature=5)\n0.8\n```\n\nRules can be mixed using logical operators (`&` and `|`) to create more\nsophisticated rules that allow fuzzy reasoning:\n\n```python\nfrom frules.expressions import Expression as E\nfrom frules.rules import Rule as R\nfrom frules.expressions import ltrapezoid, trapezoid, rtrapezoid\n\n# car age expressions\nold = E(ltrapezoid(2001, 2008), \"old\")\nnew = E(rtrapezoid(2013, 2014), \"new\")\nnot_so_old = - (old & new)\n\n# power expressions\nstrong = E(rtrapezoid(50, 100), \"strong\")\nweak = E(ltrapezoid(50, 100), \"weak\")\n\n# price expression\nexpensive = E(rtrapezoid(25000, 30000), \"expensive\")\ncheap = - expensive\n\n# yes expression\nyes = E(lambda yes: float(yes), \"yes\") # converts bool to float\n\n\n# rules\nis_attractive = R(production_year=not_so_old) & R(horsepower=strong)\nshould_buy = is_attractive & R(price=cheap)\n```\n\nHaving such set of rules we can do some reasoning:\n\n```\n>>> should_buy\n(((age = !(old & new) & horsepower = strong) & !None = None) & cost = !expensive)\n>>> should_buy.eval(horsepower=70, production_year=2012, price=15000)\n0.4\n>>>\n>>> candidates = {\n...     \"car1\": {\"horsepower\": 70, \"production_year\": 2012, \"price\": 15000},\n...     \"car2\": {\"horsepower\": 150, \"production_year\": 2010, \"price\": 30000},\n...     \"car3\": {\"horsepower\": 90, \"production_year\": 2014, \"price\": 10000},\n...     \"car4\": {\"horsepower\": 85, \"production_year\": 2009, \"price\": 35000},\n... }\n>>> max(candidates.iteritems(), key=lambda (key, inputs): is_hot.eval(**inputs))\n('car3', {'horsepower': 90, 'price': 10000, 'production_year': 2014})\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/swistakm/frules",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "frules",
    "package_url": "https://pypi.org/project/frules/",
    "platform": "",
    "project_url": "https://pypi.org/project/frules/",
    "project_urls": {
      "Homepage": "https://github.com/swistakm/frules"
    },
    "release_url": "https://pypi.org/project/frules/0.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "simple functional fuzzy rules implementation",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8502972,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48de154daed73fa1f86ebbfe24ae20f0f06e40c14769d487123e500be24e2cbd",
          "md5": "7a40fdb5961898a34811cbb0bba6eda7",
          "sha256": "ac1d0a892c291999c86aa3ecf91fc3201d88356e3ebb65ba718656a0d096f3f9"
        },
        "downloads": -1,
        "filename": "frules-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7a40fdb5961898a34811cbb0bba6eda7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6230,
        "upload_time": "2014-02-27T15:11:18",
        "upload_time_iso_8601": "2014-02-27T15:11:18.345234Z",
        "url": "https://files.pythonhosted.org/packages/48/de/154daed73fa1f86ebbfe24ae20f0f06e40c14769d487123e500be24e2cbd/frules-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a39ed156bd645970778897079f060b1aa26c86c49e1c9fac6ccff8fe65786b80",
          "md5": "45a1184a0637cdb19864fb62a9c4fb70",
          "sha256": "76caaa93e34614a64de552b1bc35467a2e4d0e715e4e1a3cbc3f58fc2e570ccb"
        },
        "downloads": -1,
        "filename": "frules-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "45a1184a0637cdb19864fb62a9c4fb70",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8080,
        "upload_time": "2014-02-28T14:53:29",
        "upload_time_iso_8601": "2014-02-28T14:53:29.346696Z",
        "url": "https://files.pythonhosted.org/packages/a3/9e/d156bd645970778897079f060b1aa26c86c49e1c9fac6ccff8fe65786b80/frules-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89a131bb80c5a140f6368f50b3d34c7c1f3a4423a7c0b5e78504ac71c6704257",
          "md5": "ea73133c60a9874e955085b46316b5ff",
          "sha256": "68879770bd9d412f07b30eadc7e3a7fd69c82f25b5b2c956127ec406045d4606"
        },
        "downloads": -1,
        "filename": "frules-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ea73133c60a9874e955085b46316b5ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8532,
        "upload_time": "2014-05-16T15:04:18",
        "upload_time_iso_8601": "2014-05-16T15:04:18.991393Z",
        "url": "https://files.pythonhosted.org/packages/89/a1/31bb80c5a140f6368f50b3d34c7c1f3a4423a7c0b5e78504ac71c6704257/frules-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12eef8ab2adfcd67744311fe43c775d21489a1a3ca31ece509135e29099f4ae7",
          "md5": "540441f77adc2b9fb451f932090451d1",
          "sha256": "74a8b27ed3f3dba25583c0678831cbd28147b02874c899397f0678cfbbce6761"
        },
        "downloads": -1,
        "filename": "frules-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "540441f77adc2b9fb451f932090451d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9403,
        "upload_time": "2015-06-19T14:30:25",
        "upload_time_iso_8601": "2015-06-19T14:30:25.759777Z",
        "url": "https://files.pythonhosted.org/packages/12/ee/f8ab2adfcd67744311fe43c775d21489a1a3ca31ece509135e29099f4ae7/frules-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc3ad172dfecefafb7d1f810c923f7c400e47e00ec1d2c03addfe92db039a83f",
          "md5": "8a2f1fc6785b5e7c96c62a00bbb97fbc",
          "sha256": "7e2be080b0ddef594b88c851872483dc63c0edefd5ec8dfd6a845cc574a2737b"
        },
        "downloads": -1,
        "filename": "frules-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8a2f1fc6785b5e7c96c62a00bbb97fbc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9879,
        "upload_time": "2020-10-26T14:38:10",
        "upload_time_iso_8601": "2020-10-26T14:38:10.410779Z",
        "url": "https://files.pythonhosted.org/packages/dc/3a/d172dfecefafb7d1f810c923f7c400e47e00ec1d2c03addfe92db039a83f/frules-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "edc4c5c1f4e64ebf6850dd8682dbd157b745a224631d3ab5cfee190742ae6cd3",
          "md5": "5b7e07a83ffc3320e44fbf881976ed27",
          "sha256": "af81cfbccaf3a2b3697ad12a9791743e71b15e58167fa3eda5ea1a81ab32db03"
        },
        "downloads": -1,
        "filename": "frules-0.2.0rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5b7e07a83ffc3320e44fbf881976ed27",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9917,
        "upload_time": "2020-10-26T14:29:53",
        "upload_time_iso_8601": "2020-10-26T14:29:53.099743Z",
        "url": "https://files.pythonhosted.org/packages/ed/c4/c5c1f4e64ebf6850dd8682dbd157b745a224631d3ab5cfee190742ae6cd3/frules-0.2.0rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a62e03216a8299c8d683ff1c676080d5974be839572ba31de3fb4d32f433dff",
          "md5": "b816fc98e5599104109d45406f2560a7",
          "sha256": "c639ea9f2275407e66b3c622635598a0763fede2e479d2b7dbbbddd03497f70e"
        },
        "downloads": -1,
        "filename": "frules-0.2.0rc2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b816fc98e5599104109d45406f2560a7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9920,
        "upload_time": "2020-10-26T14:33:15",
        "upload_time_iso_8601": "2020-10-26T14:33:15.263290Z",
        "url": "https://files.pythonhosted.org/packages/0a/62/e03216a8299c8d683ff1c676080d5974be839572ba31de3fb4d32f433dff/frules-0.2.0rc2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc3ad172dfecefafb7d1f810c923f7c400e47e00ec1d2c03addfe92db039a83f",
        "md5": "8a2f1fc6785b5e7c96c62a00bbb97fbc",
        "sha256": "7e2be080b0ddef594b88c851872483dc63c0edefd5ec8dfd6a845cc574a2737b"
      },
      "downloads": -1,
      "filename": "frules-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8a2f1fc6785b5e7c96c62a00bbb97fbc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9879,
      "upload_time": "2020-10-26T14:38:10",
      "upload_time_iso_8601": "2020-10-26T14:38:10.410779Z",
      "url": "https://files.pythonhosted.org/packages/dc/3a/d172dfecefafb7d1f810c923f7c400e47e00ec1d2c03addfe92db039a83f/frules-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}