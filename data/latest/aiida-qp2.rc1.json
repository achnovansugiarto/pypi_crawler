{
  "info": {
    "author": "Evgeny Posenitskiy",
    "author_email": "posenitskiy@irsamc.ups-tlse.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: AiiDA",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python"
    ],
    "description": "[![Build Status](https://github.com/TREX-CoE/aiida-qp2/workflows/ci/badge.svg?branch=master)](https://github.com/q-posev/aiida-qp2/actions)\n[![PyPI version](https://badge.fury.io/py/aiida-qp2.svg)](https://badge.fury.io/py/aiida-qp2)\n\n# aiida-qp2\n\nAiiDA plugin for [Quantum Package 2.0](https://github.com/QuantumPackage/qp2) (QP2).\n\nThis plugin is the modified output of the\n[AiiDA plugin cutter](https://github.com/aiidateam/aiida-plugin-cutter),\nintended to help developers get started with their AiiDA plugins.\n\n## Repository contents\n\n* [`qp2/`](qp2/): The main source code of the plugin package\n  * [`calculations.py`](qp2/calculations.py): A new `QP2Calculation` `CalcJob` class\n  * [`parsers.py`](qp2/parsers.py): A new `Parser` for the `QP2Calculation`\n* [`docs/`](docs/): A documentation template. The [ReadTheDocs documentation](https://trex-coe.github.io/aiida-qp2/) is built and deployed on the `gh-pages` branch.\n* [`examples/`](examples/): Examples of how to submit a calculation using this plugin\n* [`LICENSE`](LICENSE): License for your plugin\n* [`MANIFEST.in`](MANIFEST.in): Configure non-Python files to be included for publication on [PyPI](https://pypi.org/)\n* [`README.md`](README.md): This file\n* [`setup.json`](setup.json): Plugin metadata for registration on [PyPI](https://pypi.org/) and the [AiiDA plugin registry](https://aiidateam.github.io/aiida-registry/) (including entry points)\n* [`setup.py`](setup.py): Installation script for pip / [PyPI](https://pypi.org/)\n* [`.pre-commit-config.yaml`](.pre-commit-config.yaml): Configuration of [pre-commit hooks](https://pre-commit.com/) that sanitize coding style and check for syntax errors. Enable via `pip install -e .[pre-commit] && pre-commit install`\n* [`.github/`](.github/): [Github Actions](https://github.com/features/actions) configuration\n  * [`ci.yml`](.github/workflows/ci.yml): runs tests and builds documentation at every new commit\n  * [`publish-on-pypi.yml`](.github/workflows/publish-on-pypi.yml): automatically deploy git tags to PyPI\n\n\n## Features\n\n* Initialize a wave function file (EZFIO) based on `StructureData` instance and `qp_create_ezfio` dictionary.\nThis step can optionally use `BasisSet` and/or `Pseudopotential` nodes produced by the\n[`aiida-gaussian-datatypes`](https://github.com/addman2/aiida-gaussian-datatypes/tree/development_trvb) plugin.\n* Run calculations (e.g. HF, CIPSI) in a given order according to the `qp_commands` list. Some pre- or post-processing (e.g. `shell` scripting) is also possible by providing a list of commands in `qp_prepend` or `qp_append` keys of the `parameters` Dict, respectively.\n* Export TREXIO file from the QP-native EZFIO format.\n\n\n## Installation\n\n```shell\npip install aiida-qp2\nverdi quicksetup  # better to set up a new profile\nverdi plugin list aiida.calculations  # should now show your calclulation plugins\n```\n\n## Usage\n\n See [`Demo-aiida-qp.md`](examples/Demo-aiida-qp.md) and `.py` files in the [`examples/`](examples/) directory.\n\nFor instance, the `example_trexio_from_xyz.py` is the 3-step workflow using the plugin.\n\n```shell\nverdi daemon start     # make sure the daemon is running\ncd examples\npython example_trexio_from_xyz.py   # prepare and submit the calculation\nverdi process list -a  # check record of calculation\n```\n\n1. Create the EZFIO wave function file from the `hcn.xyz` file using a given basis set.\n2. Run SCF calculation using the previously created wave function and parse the output file looking for the Hartree-Fock energy.\n3. Export TREXIO wave function file by converting EZFIO format using `TREXIO_TEXT` back end.\n\n\n## Development\n\n```shell\ngit clone https://github.com/TREX-CoE/aiida-qp2 .\ncd aiida-qp2\npip install -e .[pre-commit]  # install extra dependencies\npre-commit install  # install pre-commit hooks\n```\n\n## License\n\nMIT\n\n## Contact\n\nposenitskiy@irsamc.ups-tlse.fr\n\nscemama@irsamc.ups-tlse.fr\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/TREX-CoE/aiida-qp2",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiida-qp2",
    "package_url": "https://pypi.org/project/aiida-qp2/",
    "platform": "",
    "project_url": "https://pypi.org/project/aiida-qp2/",
    "project_urls": {
      "Homepage": "https://github.com/TREX-CoE/aiida-qp2"
    },
    "release_url": "https://pypi.org/project/aiida-qp2/0.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "AiiDA plugin for the Quantum Package 2.0",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13020102,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0e624ef45e05de1266ccdd8639a2eec8cbdb32b54a22e288c11d6b144a2e37c",
          "md5": "0b2f88dc145a018466d0cfedfd182745",
          "sha256": "dcfd92c4d3a9bbd3e6a3199aa1b78925c2a1ea1e5b4a4066094d646fd432aa01"
        },
        "downloads": -1,
        "filename": "aiida-qp2-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0b2f88dc145a018466d0cfedfd182745",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9781,
        "upload_time": "2022-02-26T19:09:11",
        "upload_time_iso_8601": "2022-02-26T19:09:11.456789Z",
        "url": "https://files.pythonhosted.org/packages/f0/e6/24ef45e05de1266ccdd8639a2eec8cbdb32b54a22e288c11d6b144a2e37c/aiida-qp2-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f0e624ef45e05de1266ccdd8639a2eec8cbdb32b54a22e288c11d6b144a2e37c",
        "md5": "0b2f88dc145a018466d0cfedfd182745",
        "sha256": "dcfd92c4d3a9bbd3e6a3199aa1b78925c2a1ea1e5b4a4066094d646fd432aa01"
      },
      "downloads": -1,
      "filename": "aiida-qp2-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0b2f88dc145a018466d0cfedfd182745",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9781,
      "upload_time": "2022-02-26T19:09:11",
      "upload_time_iso_8601": "2022-02-26T19:09:11.456789Z",
      "url": "https://files.pythonhosted.org/packages/f0/e6/24ef45e05de1266ccdd8639a2eec8cbdb32b54a22e288c11d6b144a2e37c/aiida-qp2-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}