{
  "info": {
    "author": "PyTorch Core Team",
    "author_email": "soumith@pytorch.org",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "torchvision\n===========\n\n.. image:: https://travis-ci.org/pytorch/vision.svg?branch=master\n    :target: https://travis-ci.org/pytorch/vision\n\n.. image:: https://codecov.io/gh/pytorch/vision/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/pytorch/vision\n\n.. image:: https://pepy.tech/badge/torchvision\n    :target: https://pepy.tech/project/torchvision\n\n.. image:: https://img.shields.io/badge/dynamic/json.svg?label=docs&url=https%3A%2F%2Fpypi.org%2Fpypi%2Ftorchvision%2Fjson&query=%24.info.version&colorB=brightgreen&prefix=v\n    :target: https://pytorch.org/docs/stable/torchvision/index.html\n\n\nThe torchvision package consists of popular datasets, model architectures, and common image transformations for computer vision.\n\n\nInstallation\n============\n\nTorchVision requires PyTorch 1.4 or newer.\n\nAnaconda:\n\n.. code:: bash\n\n    conda install torchvision -c pytorch\n\npip:\n\n.. code:: bash\n\n    pip install torchvision\n\nFrom source:\n\n.. code:: bash\n\n    python setup.py install\n    # or, for OSX\n    # MACOSX_DEPLOYMENT_TARGET=10.9 CC=clang CXX=clang++ python setup.py install\n\nBy default, GPU support is built if CUDA is found and ``torch.cuda.is_available()`` is true.\nIt's possible to force building GPU support by setting ``FORCE_CUDA=1`` environment variable,\nwhich is useful when building a docker image.\n\nImage Backend\n=============\nTorchvision currently supports the following image backends:\n\n* `Pillow`_ (default)\n\n* `Pillow-SIMD`_ - a **much faster** drop-in replacement for Pillow with SIMD. If installed will be used as the default.\n\n* `accimage`_ - if installed can be activated by calling :code:`torchvision.set_image_backend('accimage')`\n\n.. _Pillow : https://python-pillow.org/\n.. _Pillow-SIMD : https://github.com/uploadcare/pillow-simd\n.. _accimage: https://github.com/pytorch/accimage\n\nC++ API\n=======\nTorchVision also offers a C++ API that contains C++ equivalent of python models. \n\nInstallation From source:\n\n.. code:: bash\n\n    mkdir build\n    cd build\n    # Add -DWITH_CUDA=on support for the CUDA if needed\n    cmake ..\n    make \n    make install\n\nOnce installed, the library can be accessed in cmake (after properly configuring ``CMAKE_PREFIX_PATH``) via the :code:`TorchVision::TorchVision` target:\n\n.. code:: rest\n\n\tfind_package(TorchVision REQUIRED)\n\ttarget_link_libraries(my-target PUBLIC TorchVision::TorchVision)\n\nThe ``TorchVision`` package will also automatically look for the ``Torch`` package and add it as a dependency to ``my-target``,\nso make sure that it is also available to cmake via the ``CMAKE_PREFIX_PATH``.\n\nFor an example setup, take a look at ``examples/cpp/hello_world``.\n\nDocumentation\n=============\nYou can find the API documentation on the pytorch website: http://pytorch.org/docs/master/torchvision/\n\nContributing\n============\nWe appreciate all contributions. If you are planning to contribute back bug-fixes, please do so without any further discussion. If you plan to contribute new features, utility functions or extensions, please first open an issue and discuss the feature with us.\n\nDisclaimer on Datasets\n======================\n\nThis is a utility library that downloads and prepares public datasets. We do not host or distribute these datasets, vouch for their quality or fairness, or claim that you have license to use the dataset. It is your responsibility to determine whether you have permission to use the dataset under the dataset's license.\n\nIf you're a dataset owner and wish to update any part of it (description, citation, etc.), or do not want your dataset to be included in this library, please get in touch through a GitHub issue. Thanks for your contribution to the ML community!\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pytorch/vision",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rpi-torchvision",
    "package_url": "https://pypi.org/project/rpi-torchvision/",
    "platform": "",
    "project_url": "https://pypi.org/project/rpi-torchvision/",
    "project_urls": {
      "Homepage": "https://github.com/pytorch/vision"
    },
    "release_url": "https://pypi.org/project/rpi-torchvision/0.7.0/",
    "requires_dist": [
      "numpy",
      "torch",
      "pillow (>=4.1.1)",
      "scipy ; extra == 'scipy'"
    ],
    "requires_python": "",
    "summary": "image and video datasets and models for torch deep learning",
    "version": "0.7.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10340912,
  "releases": {
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d56d7aac9ba9f464f1be4969e4c0a355997a6e666b955c2ceba90d932f7e7d23",
          "md5": "a3a6c231358b8209513c3358421ff75a",
          "sha256": "75ad6153fc95d4da9154e09dd3557386f38046b610789d7837e4fe84a9f5c19b"
        },
        "downloads": -1,
        "filename": "rpi_torchvision-0.7.0-cp37-cp37m-linux_armv7l.whl",
        "has_sig": false,
        "md5_digest": "a3a6c231358b8209513c3358421ff75a",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 5477419,
        "upload_time": "2021-05-13T02:07:59",
        "upload_time_iso_8601": "2021-05-13T02:07:59.992479Z",
        "url": "https://files.pythonhosted.org/packages/d5/6d/7aac9ba9f464f1be4969e4c0a355997a6e666b955c2ceba90d932f7e7d23/rpi_torchvision-0.7.0-cp37-cp37m-linux_armv7l.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d56d7aac9ba9f464f1be4969e4c0a355997a6e666b955c2ceba90d932f7e7d23",
        "md5": "a3a6c231358b8209513c3358421ff75a",
        "sha256": "75ad6153fc95d4da9154e09dd3557386f38046b610789d7837e4fe84a9f5c19b"
      },
      "downloads": -1,
      "filename": "rpi_torchvision-0.7.0-cp37-cp37m-linux_armv7l.whl",
      "has_sig": false,
      "md5_digest": "a3a6c231358b8209513c3358421ff75a",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": null,
      "size": 5477419,
      "upload_time": "2021-05-13T02:07:59",
      "upload_time_iso_8601": "2021-05-13T02:07:59.992479Z",
      "url": "https://files.pythonhosted.org/packages/d5/6d/7aac9ba9f464f1be4969e4c0a355997a6e666b955c2ceba90d932f7e7d23/rpi_torchvision-0.7.0-cp37-cp37m-linux_armv7l.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}