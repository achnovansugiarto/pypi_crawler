{
  "info": {
    "author": "Josh VanderLinden",
    "author_email": "codekoala@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Artistic Software",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Multimedia :: Graphics"
    ],
    "description": "django-watermark\n================\n\nThis project provides a simple way for you to apply custom watermarks\nto images on your django-powered website.\n\nAuthored by `Josh VanderLinden <http://www.codekoala.com//>`_, and some great\n`contributors <https://github.com/codekoala/django-watermark/contributors>`_.\n\n.. image:: https://img.shields.io/pypi/v/django-watermark.svg\n    :target: https://pypi.python.org/pypi/django-watermark/\n\n.. image:: https://img.shields.io/pypi/dm/django-watermark.svg\n    :target: https://pypi.python.org/pypi/django-watermark/\n\n.. image:: https://img.shields.io/github/license/bashu/django-watermark.svg\n    :target: https://pypi.python.org/pypi/django-watermark/\n\n.. image:: https://landscape.io/github/bashu/django-watermark/develop/landscape.svg?style=flat\n    :target: https://landscape.io/github/bashu/django-watermark/develop\n\nFeatures\n--------\n\n* Opacity: the filter allows you to specify the transparency level for your\n  watermark image\n* Watermark positioning: you have several options for positioning watermarks on\n  your images\n\n  * Absolute: you can specify exact pixel locations for your watermark\n  * Relative: you can use percentages to place your watermark\n  * Corners: you can position your watermark in the corners of your images\n  * Random: you can tell the filter to randomly generate a position for your\n    watermark\n  * Center: you can place watermarks in the center of the target image\n\n* Scaling: the watermark can be scaled to cover your images or specify a\n  scaling factor to use\n* Tiling: the watermark can be tiled across your images\n* Greyscale: you can convert the watermark to be greyscale before having it\n  applied to the target image.\n* Rotation: you can rotate your watermark a certain number of degrees or have\n  the rotation be random.\n\nRequirements\n------------\n\n``django-watermark`` relies upon the `Python Imaging Library <http://python-pillow.github.io/>`_.\nIt was tested with latest Pillow, `PIL <http://www.pythonware.com/products/pil/>`_ 1.1.7 is supported but not recommended.\n\nInstallation\n------------\n\nEither clone this repository into your project, or install with ``pip install django-watermark``\n\nFirst of all, you must add this project to your list of ``INSTALLED_APPS`` in\n``settings.py`` :\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...\n        'watermarker',\n    )\n\nRun ``./manage.py syncdb``. This creates the tables in your database\nthat are necessary for operation.\n\nPlease see ``example`` application. This application is used to manually\ntest the functionalities of this package. This also serves as a good\nexample.\n\nYou need Django 1.4 or above to run that. It might run on older\nversions but that is not tested.\n\nUpgrading from 0.1.6\n~~~~~~~~~~~~~~~~~~~~\n\nUpgrading from 0.1.6 is likely to cause problems trying to apply a\nmigration when the tables already exist. In this case a fake migration\nneeds to be applied:\n\n.. code-block:: shell\n\n    ./manage.py migrate watermarker 0001 --fake\n\nConfiguration (optional)\n------------------------\n\nWhile we're in this section, I might as well mention a settings\nvariable that you can override: ``WATERMARK_QUALITY``. This should\nbe an integer between 0 and 100.  The default is 85.\n\nBy default, ``django-watermark`` obscures the original image's file\nname, as the original requirements were to make it impossible to\ndownload the watermark-less image.  As of version 0.1.6, you can set\n``WATERMARK_OBSCURE_ORIGINAL`` to ``False`` in your ``setings.py`` to\nmake the original image file name accessible to the user.\n\n``django-watermark`` also lets you configure how random watermark\npositioning should work.  By default, a when a watermark is to be\npositioned randomly, only one watermarked image will be generated.  If\nyou wish to generate a random position for an image's watermark on\neach request, set ``WATERMARK_RANDOM_POSITION_ONCE`` to ``False`` in\nyour ``settings.py``.\n\nUsage\n-----\n\nAs mentioned above, you have several options when using ``django-watermark``.\nThe first thing you must do is load the filter for the template in which you\nwish to apply watermarks to your images.\n\n.. code-block:: html+django\n\n    {% load watermark %}\n\nFrom the Django admin, go ahead and populate your database with some watermarks\nthat you want to apply to your regular images.  Simply specify a name for the\nwatermark and upload the watermark image itself.  *It's probably not a good\nidea to put commas in your watermark names.*  Watermarks should be transparent\nPNG files for best results.  I can't make any guarantees that other formats\nwill work nicely.\n\nThe first parameter to the ``watermark`` filter _must_ be the name you\nspecified for the watermark in the Django admin.  You can then choose from a\nfew other parameters to customize the application of the watermark.  Here they\nare:\n\n* ``position`` - This one is quite customizable.  First, you can plug your\n  watermark into one corner of your images by using one of ``BR``, ``BL``,\n  ``TR``, and ``TL``.  These represent 'bottom-right', 'bottom-left',\n  'top-right', and 'top-left' respectively.\n\n  Alternatively, you can use relative or absolute positioning for the\n  watermark.  Relative positioning uses percentages; absolute positioning uses\n  exact pixels.  You can mix and match these two modes of positioning, but you\n  cannot mix and match relative/absolute with the corner positioning.  When\n  using relative/absolute positioning, the value for the ``position`` parameter\n  is ``XxY``, where ``X`` is the left value and ``Y`` is the top value.  The\n  left and top values must be separated with a lowercase ``x``.\n\n  If you wanted your watermark image to show up in the center of any image you\n  want to watermark, you would use a position parameter such as\n  ``position=50%x50%`` or even ``position=C``.  If you wanted the watermark to\n  show up half-way between the left and right edges of the image and 100 pixels\n  from the top, you would use a position parameter such as\n  ``position=50%x100``.\n\n  Finally, you may tell the filter to generate a position for your watermark\n  dynamically.  To do this, use ``position=R``.\n* ``opacity`` - This parameter allows you to specify the transparency of the\n  applied watermark.  The value must be an integer between 0 and 100, where 0\n  is fully transparent and 100 is fully opaque.  By default, the opacity is set\n  at 50%.\n* ``tile`` - If you want your watermark to tile across the entire image, you\n  simply specify a parameter such as ``tile=1``.\n* ``scale`` - If you'd like to have the watermark as big as possible on the\n  target image and fully visible, you might want to use ``scale=F``.  When you\n  want your watermark size corresponding to a percentage of source image, use\n  ``scale=R`` and define in your settings something like\n  ``WATERMARK_PERCENTAGE=40``. The default percentage value is 30. If you\n  want to specify a particular scaling factor, just use something like\n  ``scale=1.43``.\n* ``greyscale`` - If you want your watermark to be greyscale, you can specify\n  the parameter ``greyscale=1`` and all color saturation will go away.\n* ``rotation`` - Set this parameter to any integer between 0 and 359 (really\n  any integer should work, but for your own sanity I recommend keeping the\n  value between 0 and 359).  If you want the rotation to be random, use\n  ``rotation=R`` instead of an integer.\n* ``obscure`` - Set this parameter to 0 to make the original image's filename\n  visible to the user.  Default is 1 (or True) to obscure the original\n  filename.\n* ``quality`` - Set this to an integer between 0 and 100 to specify the quality\n  of the resulting image.  Default is 85.\n* ``random_position_once`` - Set this to 0 or 1 to specify the random\n  positioning behavior for the image's watermark.  When set to 0, the watermark\n  will be randomly placed on each request.  When set to 1, the watermark will\n  be positioned randomly on the first request, and subsequent requests will use\n  the produced image.  Default is ``True`` (random positioning only happens on\n  first request).\n\nExamples\n~~~~~~~~\n\n* ``{{ image_url|watermark:\"My Watermark,position=br,opacity=35\" }}``\n\n  Looks for a watermark named \"My Watermark\", place it in the bottom-right\n  corner of the target image, using a 35% transparency level.\n\n* ``{{ image_url|watermark:\"Your Watermark,position=tl,opacity=75\" }}``\n\n  Looks for a watermark named \"Your Watermark\", place it in the top-left corner\n  of the target image, using a 75% transparency level.\n\n* ``{{ image_url|watermark:\"The Watermark,position=43%x80%,opacity=40\" }}``\n\n  Looks for a watermark named \"The Watermark\", places it at 43% on the x-axis\n  and 80% of the y-axis of the target image, at a transparency level of 40%.\n\n* ``{{ image_url|watermark:\"The Watermark,position=R,opacity=10,rotation=45\" }}``\n\n  Looks for a watermark named \"The Watermark\", randomly generates a position\n  for it, at a transparency level of 10%, rotated 45 degrees.\n\n* ``{{ image_url|watermark:\"w00t,opacity=40,tile=1\" }}``\n\n  Looks for a watermark called \"w00t\", tiles it across the entire target image,\n  at a transparency level of 40%.\n\nCredits\n-------\n\nI didn't write any of the code that actually applies the watermark.  I snagged\nit from http://code.activestate.com/recipes/362879/ and turned it into a Django\npluggable application. Props to Shane Hathaway.\n\nLicense\n-------\n\n``django-watermark`` is released under the BSD license.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/ojengwa/django-watermark/",
    "keywords": "django,watermark,image,photo,logo",
    "license": "BSD License",
    "maintainer": "Bernard Ojengwa",
    "maintainer_email": "bernardojengwa@gmail.com",
    "name": "django3-watermark",
    "package_url": "https://pypi.org/project/django3-watermark/",
    "platform": "",
    "project_url": "https://pypi.org/project/django3-watermark/",
    "project_urls": {
      "Homepage": "http://github.com/ojengwa/django-watermark/"
    },
    "release_url": "https://pypi.org/project/django3-watermark/0.2.0/",
    "requires_dist": [
      "django (>=1.4)",
      "django-appconf",
      "pillow",
      "six"
    ],
    "requires_python": "",
    "summary": "Quick and efficient way to apply watermarks to images in Django.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7313982,
  "releases": {
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32201a5e2ee30e27f65752289be03e087dbd931abf7aa160a842408fa8510afe",
          "md5": "bfaafd8872d26656df4d2fe6bde87cf1",
          "sha256": "b11c48dae83f0dc03494529d277f59433187fd36b9b6a5c60624bb1e200d8fe2"
        },
        "downloads": -1,
        "filename": "django3_watermark-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bfaafd8872d26656df4d2fe6bde87cf1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18019,
        "upload_time": "2020-05-24T15:56:25",
        "upload_time_iso_8601": "2020-05-24T15:56:25.905382Z",
        "url": "https://files.pythonhosted.org/packages/32/20/1a5e2ee30e27f65752289be03e087dbd931abf7aa160a842408fa8510afe/django3_watermark-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7fc2e5da1c9207d7a0745fcce35d15931bc7926633978e8738c2068372333227",
          "md5": "ccbf6050ca44998d4b3e89ab7a40a161",
          "sha256": "f0d7f54ecf934d112f0becbeaf8aab8923ce64a6474450f72469c1099e3ab277"
        },
        "downloads": -1,
        "filename": "django3-watermark-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "ccbf6050ca44998d4b3e89ab7a40a161",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15955,
        "upload_time": "2020-05-24T15:56:28",
        "upload_time_iso_8601": "2020-05-24T15:56:28.283752Z",
        "url": "https://files.pythonhosted.org/packages/7f/c2/e5da1c9207d7a0745fcce35d15931bc7926633978e8738c2068372333227/django3-watermark-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4608a491ffd6fc3caf908c4fc1233d0a1eb5901cb15f2d319892c21de83d911",
          "md5": "8a4c1ac1178a0541b9432d025d3b822c",
          "sha256": "e8da375944b6324516ce69605ee773ffea2124c220122e652bd71b8bee67a743"
        },
        "downloads": -1,
        "filename": "django3_watermark-0.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8a4c1ac1178a0541b9432d025d3b822c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18020,
        "upload_time": "2020-05-24T16:09:01",
        "upload_time_iso_8601": "2020-05-24T16:09:01.820424Z",
        "url": "https://files.pythonhosted.org/packages/b4/60/8a491ffd6fc3caf908c4fc1233d0a1eb5901cb15f2d319892c21de83d911/django3_watermark-0.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1174414da577f838170b37f3e84e3bc99813082dd0d3dab52cac836f9144fc2",
          "md5": "8c03635e41b3c5e6c0f2230290ef6030",
          "sha256": "35453378de81ea646591293cfd03c55d03b4529286010a4c1ca7dde81460f268"
        },
        "downloads": -1,
        "filename": "django3-watermark-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "8c03635e41b3c5e6c0f2230290ef6030",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15975,
        "upload_time": "2020-05-24T16:09:02",
        "upload_time_iso_8601": "2020-05-24T16:09:02.877352Z",
        "url": "https://files.pythonhosted.org/packages/e1/17/4414da577f838170b37f3e84e3bc99813082dd0d3dab52cac836f9144fc2/django3-watermark-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f7e2c3717af721b9342666b7a8131dae87095262e4157867c3521f95032cf6f",
          "md5": "9ae12da04a19cfbbf5158e54ad6cd6bd",
          "sha256": "db10a0467f6367f421cdb3043eaea9953a2a16c8247ee549eea3d8701cb3a033"
        },
        "downloads": -1,
        "filename": "django3_watermark-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9ae12da04a19cfbbf5158e54ad6cd6bd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18024,
        "upload_time": "2020-05-24T16:11:12",
        "upload_time_iso_8601": "2020-05-24T16:11:12.096146Z",
        "url": "https://files.pythonhosted.org/packages/2f/7e/2c3717af721b9342666b7a8131dae87095262e4157867c3521f95032cf6f/django3_watermark-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c942ad8da57fa67c2f5699a1601fbbd3efcc071f4d8c44a4cefaad285d74aaaa",
          "md5": "4c11b26b858f62da30e1a3a5881f47b9",
          "sha256": "d48920a92c80922c6440ec4d708c0b5573faf1bb56ad43b30920861c4ca77095"
        },
        "downloads": -1,
        "filename": "django3-watermark-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4c11b26b858f62da30e1a3a5881f47b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15970,
        "upload_time": "2020-05-24T16:11:13",
        "upload_time_iso_8601": "2020-05-24T16:11:13.418108Z",
        "url": "https://files.pythonhosted.org/packages/c9/42/ad8da57fa67c2f5699a1601fbbd3efcc071f4d8c44a4cefaad285d74aaaa/django3-watermark-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f7e2c3717af721b9342666b7a8131dae87095262e4157867c3521f95032cf6f",
        "md5": "9ae12da04a19cfbbf5158e54ad6cd6bd",
        "sha256": "db10a0467f6367f421cdb3043eaea9953a2a16c8247ee549eea3d8701cb3a033"
      },
      "downloads": -1,
      "filename": "django3_watermark-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9ae12da04a19cfbbf5158e54ad6cd6bd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18024,
      "upload_time": "2020-05-24T16:11:12",
      "upload_time_iso_8601": "2020-05-24T16:11:12.096146Z",
      "url": "https://files.pythonhosted.org/packages/2f/7e/2c3717af721b9342666b7a8131dae87095262e4157867c3521f95032cf6f/django3_watermark-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c942ad8da57fa67c2f5699a1601fbbd3efcc071f4d8c44a4cefaad285d74aaaa",
        "md5": "4c11b26b858f62da30e1a3a5881f47b9",
        "sha256": "d48920a92c80922c6440ec4d708c0b5573faf1bb56ad43b30920861c4ca77095"
      },
      "downloads": -1,
      "filename": "django3-watermark-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4c11b26b858f62da30e1a3a5881f47b9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15970,
      "upload_time": "2020-05-24T16:11:13",
      "upload_time_iso_8601": "2020-05-24T16:11:13.418108Z",
      "url": "https://files.pythonhosted.org/packages/c9/42/ad8da57fa67c2f5699a1601fbbd3efcc071f4d8c44a4cefaad285d74aaaa/django3-watermark-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}