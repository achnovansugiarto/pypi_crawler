{
  "info": {
    "author": "Mohamed Abdou",
    "author_email": "matex512@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Extra-Streamlit-Components\n\n[![Downloads](https://pepy.tech/badge/extra-streamlit-components)](https://pepy.tech/project/extra-streamlit-components)\n\nAn all-in-one place, to find complex or just not available components by default on streamlit.\n\n_Explained in details in my book [Web Application Development with Streamlit](https://amzn.to/3RQZiEa)_\n\n<a href=\"https://amzn.to/3RQZiEa\"><img src=\"https://raw.githubusercontent.com/mkhorasani/streamlit_authenticator_test/main/Web%20App%20Web%20Dev%20with%20Streamlit%20-%20Cover.png\" width=\"200\" height=\"300\"> \n\n\n## Components\n\nFirstly, add `import extra_streamlit_components as stx`\n\n- ### Router\n- Route to specific pages in Streamlit. This leverages the use of query parameters to make custom routes in your Streamlit application. For best experience, make sure to include the st.cache function decorator while initializing the Router object.\n  ```python\n    @st.cache(allow_output_mutation=True, hash_funcs={\"_thread.RLock\": lambda _: None})\n    def init_router():\n        return stx.Router({\"/home\": home, \"/landing\": landing})\n\n    def home():\n        return st.write(\"This is a home page\")\n\n    def landing():\n        return st.write(\"This is the landing page\")\n\n    router = init_router()\n    router.show_route_view()\n\n    c1, c2, c3 = st.columns(3)\n\n    with c1:\n        st.header(\"Current route\")\n        current_route = router.get_url_route()\n        st.write(f\"{current_route}\")\n    with c2:\n        st.header(\"Set route\")\n        new_route = st.text_input(\"route\")\n        if st.button(\"Route now!\"):\n            router.route(new_route)\n    with c3:\n        st.header(\"Session state\")\n        st.write(st.session_state)\n  ```\n\n- ### Cookie Manager\n  The long awaited between-sessions in-browser cookies store and manager! It stores cookies in a strict same-site behaviour. \n\n  To add an expiry date to a cookie use the `expires_at` parameter in the set function. By default, it will expire after 1 day.\n  \n  **Security Note:** _In shared domains such as share.streamlit.io, other web developers can have access to the cookies you set and the same goes for you. This is not to be treaded as security bug but a circumstance the developer need to be aware of._\n  \n    ```python\n    import datetime\n    st.write(\"# Cookie Manager\")\n\n    @st.cache(allow_output_mutation=True)\n    def get_manager():\n        return stx.CookieManager()\n\n    cookie_manager = get_manager()\n\n    st.subheader(\"All Cookies:\")\n    cookies = cookie_manager.get_all()\n    st.write(cookies)\n\n    c1, c2, c3 = st.columns(3)\n\n    with c1:\n        st.subheader(\"Get Cookie:\")\n        cookie = st.text_input(\"Cookie\", key=\"0\")\n        clicked = st.button(\"Get\")\n        if clicked:\n            value = cookie_manager.get(cookie=cookie)\n            st.write(value)\n    with c2:\n        st.subheader(\"Set Cookie:\")\n        cookie = st.text_input(\"Cookie\", key=\"1\")\n        val = st.text_input(\"Value\")\n        if st.button(\"Add\"):\n            cookie_manager.set(cookie, val, expires_at=datetime.datetime(year=2022, month=2, day=2))\n    with c3:\n        st.subheader(\"Delete Cookie:\")\n        cookie = st.text_input(\"Cookie\", key=\"2\")\n        if st.button(\"Delete\"):\n            cookie_manager.delete(cookie)\n    ```\n\n  ![](Demo_Assets/cookie_manager.gif)\n\n- ### TabBar\n  Inspire from React's `ScrollMenu`, this component receives a list of `TabBarItemData`, and returns the `id` of the\n  selected tab\n  ```python\n  chosen_id = stx.tab_bar(data=[\n      stx.TabBarItemData(id=1, title=\"ToDo\", description=\"Tasks to take care of\"),\n      stx.TabBarItemData(id=2, title=\"Done\", description=\"Tasks taken care of\"),\n      stx.TabBarItemData(id=3, title=\"Overdue\", description=\"Tasks missed out\"),\n  ], default=1)\n  st.info(f\"{chosen_id=}\")\n  ```\n\n  ![](Demo_Assets/tab_bar.gif)\n\n- ### BouncingImage\n  Probably not the best naming but this component, renders an image by its path or url, and animates by zooming in and\n  out repetitively giving an illusion of a bounce.\n\n  ```python\n  image_url = \"https://streamlit.io/images/brand/streamlit-logo-secondary-colormark-darktext.svg\"\n  stx.bouncing_image(image_source=image_url, animate=True, animation_time=1500, height=200, width=600)\n  ```\n  ![](Demo_Assets/bouncing_images.gif)\n\n- ### StepperBar\n  A streamlit wrapper on MaterialUI's Stepper\n\n  ```python\n  val = stx.stepper_bar(steps=[\"Ready\", \"Get Set\", \"Go\"])\n  st.info(f\"Phase #{val}\")\n  ```\n  ![](Demo_Assets/stepper_bar_demo.gif)\n\n\n\n[![\"Buy Me A Coffee\"](https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png)](https://www.buymeacoffee.com/mohamed512)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Mohamed-512/Extra-Streamlit-Components",
    "keywords": "Python,Streamlit,React,JavaScript",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "extra-streamlit-components-SEM",
    "package_url": "https://pypi.org/project/extra-streamlit-components-SEM/",
    "platform": null,
    "project_url": "https://pypi.org/project/extra-streamlit-components-SEM/",
    "project_urls": {
      "Homepage": "https://github.com/Mohamed-512/Extra-Streamlit-Components"
    },
    "release_url": "https://pypi.org/project/extra-streamlit-components-SEM/0.1.55/",
    "requires_dist": [
      "streamlit (>=0.86)"
    ],
    "requires_python": ">=3.6",
    "summary": "An all-in-one place, to find complex or just natively unavailable components on streamlit.",
    "version": "0.1.55",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15680084,
  "releases": {
    "0.1.55": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b46a56779cfcbfdf7ea55f072c35748a330dfbdf04edcf849b5a4aea5ad333e3",
          "md5": "b304bc32344c839ea4b16997f57bc81e",
          "sha256": "a762863c2d5797d9bc107d58bbce8a159ab182e876e6862f72247e0b97c22f7d"
        },
        "downloads": -1,
        "filename": "extra_streamlit_components_SEM-0.1.55-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b304bc32344c839ea4b16997f57bc81e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11448,
        "upload_time": "2022-11-07T03:44:54",
        "upload_time_iso_8601": "2022-11-07T03:44:54.238126Z",
        "url": "https://files.pythonhosted.org/packages/b4/6a/56779cfcbfdf7ea55f072c35748a330dfbdf04edcf849b5a4aea5ad333e3/extra_streamlit_components_SEM-0.1.55-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27518fe8f6b0ccc2063b9593c9207369d88625e41f15773cace29d237b39e86e",
          "md5": "d35c1c711963a486b62c0ab7b75b8243",
          "sha256": "80e3b338b946641f8f05eea8fc48b86d6bf579a6b2d570ff486897b3b1e9199c"
        },
        "downloads": -1,
        "filename": "extra_streamlit_components_SEM-0.1.55.tar.gz",
        "has_sig": false,
        "md5_digest": "d35c1c711963a486b62c0ab7b75b8243",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11494,
        "upload_time": "2022-11-07T03:44:56",
        "upload_time_iso_8601": "2022-11-07T03:44:56.312384Z",
        "url": "https://files.pythonhosted.org/packages/27/51/8fe8f6b0ccc2063b9593c9207369d88625e41f15773cace29d237b39e86e/extra_streamlit_components_SEM-0.1.55.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b46a56779cfcbfdf7ea55f072c35748a330dfbdf04edcf849b5a4aea5ad333e3",
        "md5": "b304bc32344c839ea4b16997f57bc81e",
        "sha256": "a762863c2d5797d9bc107d58bbce8a159ab182e876e6862f72247e0b97c22f7d"
      },
      "downloads": -1,
      "filename": "extra_streamlit_components_SEM-0.1.55-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b304bc32344c839ea4b16997f57bc81e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11448,
      "upload_time": "2022-11-07T03:44:54",
      "upload_time_iso_8601": "2022-11-07T03:44:54.238126Z",
      "url": "https://files.pythonhosted.org/packages/b4/6a/56779cfcbfdf7ea55f072c35748a330dfbdf04edcf849b5a4aea5ad333e3/extra_streamlit_components_SEM-0.1.55-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "27518fe8f6b0ccc2063b9593c9207369d88625e41f15773cace29d237b39e86e",
        "md5": "d35c1c711963a486b62c0ab7b75b8243",
        "sha256": "80e3b338b946641f8f05eea8fc48b86d6bf579a6b2d570ff486897b3b1e9199c"
      },
      "downloads": -1,
      "filename": "extra_streamlit_components_SEM-0.1.55.tar.gz",
      "has_sig": false,
      "md5_digest": "d35c1c711963a486b62c0ab7b75b8243",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11494,
      "upload_time": "2022-11-07T03:44:56",
      "upload_time_iso_8601": "2022-11-07T03:44:56.312384Z",
      "url": "https://files.pythonhosted.org/packages/27/51/8fe8f6b0ccc2063b9593c9207369d88625e41f15773cace29d237b39e86e/extra_streamlit_components_SEM-0.1.55.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}