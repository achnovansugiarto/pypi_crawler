{
  "info": {
    "author": "Austin Hunt",
    "author_email": "huntaj@cofc.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Cascade CMS Filename Rule Enforcer\nThis package was developed to automate the enforcement of file naming conventions in an enterprise instance of Cascade CMS 8 for the College of Charleston, but has been re-written in a way that allows you to set the configuration for your own Cascade CMS environment. With over 100 sites to manage, and each site containing improperly named resources that were allowed in the previous Cascade Server 7 from which we migrated, we needed a way of automatically detecting improper file names (file names with spaces and capitalized letters) and fixing them dynamically. This package handles that automation in an object-oriented way. \n\n## How To Use \nYou can refer to the test() method [here](https://github.com/austinjhunt/CascadeCMS-filename-rule-enforcer/blob/master/cascade-filename-enforcer/ruleenforcer.py) if you want a more extensive example of usage, but here is the basic flow of using the package. \n* I recommend first creating and activating a virtual environment:\n* ```python3.6 -m venv venv && source venv/bin/activate ```\n* Next, install the package using ```pip```\n* ``` pip install py-cascade8-filename-enforcer ```\n* Create a python file, e.g. ```test.py```\n* Inside the file, add the following content \n```\nfrom cascade8_filename_enforcer.enforcer import CascadeCMSFileNameRuleEnforcer\n\n# specific to my example, I need quote to correctly parse \n# the password from the environment variable\nfrom requests.utils import quote \n# Set your configuration variables\n# I like to use os.environ.get() to pull from environment variables. \nimport os\n# There is a start-dev-template.sh script you can use to set the values for these.\ncpass = quote(os.environ.get('CASCADE_CMS_PASS',''))\ncuser = os.environ.get('CASCADE_CMS_USER','')\n# The base URL of the Cascade 8 REST API. THIS SHOULD END WITH /api/v1\nrestapi= os.environ.get('CASCADE_CMS_REST_API_BASE','') \n\n# Create a rule enforcer \nrule_enforcer = CascadeCMSFileNameRuleEnforcer(\n    cuser=cuser, cpass=cpass, restapi=restapi\n)\nsite_name = \"name_of_your_site\"\nsite_id = \"id_of_your_site\"\n# Call the recursive traversal function that will also \n# fix your improperly named assets as well as return a list of \n# the ones it fixes in the form of: \n[\n    {\n        \"old\": \"old BAD name.png\",\n        \"new\": \"old-bad-name.png\"\n    },\n    {\n        \"old\": \"old BAD name 2.png\",\n        \"new\": \"old-bad-name-2.png\"\n    },... \n] \nassets_fixed = rule_enforcer.traverse(\n    current_parent_folder=f'{site_name}',\n    site_full_assets_list=[], # initialize empty list \n    # sites for which you want to skip enforcement\n    skip_sites=[\"_Auto-Migrated Global_\", \"_skeleton.cofc.edu\"] \n)\nprint(assets_fixed) \npublish_result = rule_enforcer.publish_site(site_id)\nprint(publish_result)\n```\nThe following is a more elaborate use of the package to iterate over many sites and keep a record of what \nwas changed for each in JSON format. \n```\ndef main(): \n    \"\"\" Production call - loop through all Cascade CMS sites and \n    fix improper filenames, keeping a record of the resources changed in \n    a local JSON file \"\"\" \n    # Create rule enforcer\n    cpass = quote(os.environ.get('CASCADE_CMS_PASS',''))\n    cuser = os.environ.get('CASCADE_CMS_USER','')\n    restapi= os.environ.get('CASCADE_CMS_REST_API_BASE','')\n    rule_enforcer = CascadeCMSFileNameRuleEnforcer(\n        cpass=cpass, cuser=cuser, restapi=restapi\n    ) \n    site_dicts = []\n    for s in rule_enforcer.get_all_sites():\n        site_name = s['path']['path']\n        site_id = s['id'] \n        # Start with the base of site_name/content. initialize a\n        print(f\"Beginning scan for invalid filenames in site {site_name}\")\n        site_dictionary = {\n            f'{site_name}': {\n                'bad_assets': rule_enforcer.traverse(\n                    current_parent_folder=f'{site_name}/content',\n                    site_full_assets_list=[], # always empty initially\n                    skip_sites=[\"_Auto-Migrated Global_\", \"_skeleton.cofc.edu\"] # sites to skip enforcement\n                )\n            } \n        }\n        site_dictionary[site_name]['publish_result'] = rule_enforcer.publish_site(site_id) \n        site_dicts.append(site_dictionary)\n        with open('site_read.json', 'w') as f:\n            json.dump(site_dicts, f)\n        print(f\"Completed scan of site {site_name}\")\n\nif __name__ == \"__main__\":\n    # One site: redesign.cofc.edu \n    # test()\n    # All sites!\n    main()\n```\n--- \n## Notes\n* If your site(s) does not have a root /content folder (e.g. sitename.edu/content in Cascade), be sure to remove the /content portion of the current_parent_folder argument. \n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/austinjhunt/CascadeCMS-filename-rule-enforcer",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-cascade8-filename-enforcer",
    "package_url": "https://pypi.org/project/py-cascade8-filename-enforcer/",
    "platform": "",
    "project_url": "https://pypi.org/project/py-cascade8-filename-enforcer/",
    "project_urls": {
      "Bug Tracker": "https://github.com/austinjhunt/CascadeCMS-filename-rule-enforcer/issues",
      "Homepage": "https://github.com/austinjhunt/CascadeCMS-filename-rule-enforcer"
    },
    "release_url": "https://pypi.org/project/py-cascade8-filename-enforcer/0.0.3/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": ">=3.6",
    "summary": "A Python package utilizing the Cascade CMS 8 REST API to enforce file name rules, namely 1) all lowercase, 2) spaces replaced with hyphens, 3) no trailing spaces",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9577281,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7939c7f2fa3fd7d7b5c179a0fe68009f6d991a68b2d29c72d2c5aeaa83807015",
          "md5": "5078f0043c475fe0c35668707d4a9130",
          "sha256": "eb8346d900e80199f04dbd9285ac308001d12e7d9ace9815270e6b3590cee51a"
        },
        "downloads": -1,
        "filename": "py_cascade8_filename_enforcer-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5078f0043c475fe0c35668707d4a9130",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20101,
        "upload_time": "2021-03-01T21:07:11",
        "upload_time_iso_8601": "2021-03-01T21:07:11.114413Z",
        "url": "https://files.pythonhosted.org/packages/79/39/c7f2fa3fd7d7b5c179a0fe68009f6d991a68b2d29c72d2c5aeaa83807015/py_cascade8_filename_enforcer-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9afafa7e16a13ea760182681150d368da758c4d5f1e7b9eafb17f3f254c344e",
          "md5": "7441ff44b514059fa01c854f909e0814",
          "sha256": "155e36b9877ff167a42977bb144475a596a00ff4dcf6d78083ce27b723d09e76"
        },
        "downloads": -1,
        "filename": "py-cascade8-filename-enforcer-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7441ff44b514059fa01c854f909e0814",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6875,
        "upload_time": "2021-03-01T21:07:12",
        "upload_time_iso_8601": "2021-03-01T21:07:12.419954Z",
        "url": "https://files.pythonhosted.org/packages/b9/af/afa7e16a13ea760182681150d368da758c4d5f1e7b9eafb17f3f254c344e/py-cascade8-filename-enforcer-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f976b97cc778aee8ce5f7f6ea0955544d69e57095dadceec6a0863616fad90dc",
          "md5": "41907cadf8c74081b90be5351e380cb2",
          "sha256": "76e1074decf7422b0a972fee9282072a2cd6942258d463fce3eb94ec1b994327"
        },
        "downloads": -1,
        "filename": "py_cascade8_filename_enforcer-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41907cadf8c74081b90be5351e380cb2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8504,
        "upload_time": "2021-03-01T21:16:50",
        "upload_time_iso_8601": "2021-03-01T21:16:50.911649Z",
        "url": "https://files.pythonhosted.org/packages/f9/76/b97cc778aee8ce5f7f6ea0955544d69e57095dadceec6a0863616fad90dc/py_cascade8_filename_enforcer-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fda423368439cafff68837292f3ce9593b77c79bca4d5983d19622e9bdd81c6",
          "md5": "1d92e7eca5c0868b9b7d93645c51b625",
          "sha256": "2b147c375242ebea99df983d7b5e33f421a7f517e1177f05a9fd2adbffec808a"
        },
        "downloads": -1,
        "filename": "py-cascade8-filename-enforcer-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1d92e7eca5c0868b9b7d93645c51b625",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6911,
        "upload_time": "2021-03-01T21:16:52",
        "upload_time_iso_8601": "2021-03-01T21:16:52.169875Z",
        "url": "https://files.pythonhosted.org/packages/8f/da/423368439cafff68837292f3ce9593b77c79bca4d5983d19622e9bdd81c6/py-cascade8-filename-enforcer-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f976b97cc778aee8ce5f7f6ea0955544d69e57095dadceec6a0863616fad90dc",
        "md5": "41907cadf8c74081b90be5351e380cb2",
        "sha256": "76e1074decf7422b0a972fee9282072a2cd6942258d463fce3eb94ec1b994327"
      },
      "downloads": -1,
      "filename": "py_cascade8_filename_enforcer-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "41907cadf8c74081b90be5351e380cb2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8504,
      "upload_time": "2021-03-01T21:16:50",
      "upload_time_iso_8601": "2021-03-01T21:16:50.911649Z",
      "url": "https://files.pythonhosted.org/packages/f9/76/b97cc778aee8ce5f7f6ea0955544d69e57095dadceec6a0863616fad90dc/py_cascade8_filename_enforcer-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8fda423368439cafff68837292f3ce9593b77c79bca4d5983d19622e9bdd81c6",
        "md5": "1d92e7eca5c0868b9b7d93645c51b625",
        "sha256": "2b147c375242ebea99df983d7b5e33f421a7f517e1177f05a9fd2adbffec808a"
      },
      "downloads": -1,
      "filename": "py-cascade8-filename-enforcer-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "1d92e7eca5c0868b9b7d93645c51b625",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6911,
      "upload_time": "2021-03-01T21:16:52",
      "upload_time_iso_8601": "2021-03-01T21:16:52.169875Z",
      "url": "https://files.pythonhosted.org/packages/8f/da/423368439cafff68837292f3ce9593b77c79bca4d5983d19622e9bdd81c6/py-cascade8-filename-enforcer-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}