{
  "info": {
    "author": "KaasToast",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Pisslink.py\n===========\n\nMinimalistic lavalink wrapper based on wavelink. Made for Pycord.\n\nPrerequisites\n=============\n\nMake sure you have a running\n`lavalink <https://github.com/freyacodes/Lavalink>`__ server.\n\nInstallation\n============\n\n::\n\n   pip install git+https://github.com/KaasToast/Pisslink.py\n\nBasic example\n=============\n\n.. code:: py\n\n   import discord\n   import pisslink\n   import re\n\n   from discord.commands import slash_command\n   from discord.ext import commands\n\n   YOUTUBE_REGEX = re.compile(r'^((?:https?:)?\\/\\/)?((?:www|m)\\.)?((?:youtube\\.com|youtu.be))(\\/(?:[\\w\\-]+\\?v=|embed\\/|v\\/)?)([\\w\\-]+)(\\S+)?$')\n\n   class Client(discord.Bot):\n\n       def __init__(self):\n           super().__init__()\n\n   class Music(commands.Cog):\n\n       def __init__(self, client):\n           self.client = client\n           self.client.loop.create_task(self.node())\n\n       async def node(self):\n           await self.client.wait_until_ready()\n           await pisslink.NodePool.create_node(\n               client = self.client,\n               host = '127.0.0.1',\n               port = 2333,\n               password = 'youshallnotpass'\n           )\n\n       @slash_command()\n       async def play(self, ctx, query):\n           '''Play a song from youtube.'''\n           player = ctx.voice_client\n           await ctx.defer()\n           if not player: # try to connect to the voice channel\n               if not ctx.author.voice:\n                   return await ctx.respond('You are not connected to a voice channel.')\n               else:\n                   try:\n                       channel = ctx.author.voice.channel\n                       await channel.connect(cls=pisslink.Player())\n                       player = ctx.voice_client\n                   except discord.Forbidden:\n                       return await ctx.respond('I do not have access to this channel.')\n           if not ctx.author.voice or player.channel != ctx.author.voice.channel: # check if author is in same channel as the bot\n               await ctx.respond('You must be in the same channel as the bot.')\n           else:\n               if YOUTUBE_REGEX.match(query): # check if query is url.\n                   track = await pisslink.PisslinkTrack.get(query, return_first=True)\n               else: # query is not a url\n                   track = await pisslink.PisslinkTrack.search(query, return_first=True)\n               if not track: # check if track was found\n                   await ctx.respond('Song not found.')\n               else: # play the track\n                   await player.play(track)\n                   await ctx.respond(f'Playing {track.title}.')\n\n   client = Client()\n   client.add_cog(Music(client))\n   client.run('TOKEN')\n\nFor advanced usage see\n`advanced.py <https://github.com/KaasToast/Pisslink.py/blob/main/examples/advanced.py>`__\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/BigCord-py/Pisslink",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pisslink",
    "package_url": "https://pypi.org/project/pisslink/",
    "platform": "",
    "project_url": "https://pypi.org/project/pisslink/",
    "project_urls": {
      "Homepage": "https://github.com/BigCord-py/Pisslink"
    },
    "release_url": "https://pypi.org/project/pisslink/1.0.2/",
    "requires_dist": [
      "aiohttp (<3.9.0,>=3.6.0)"
    ],
    "requires_python": "",
    "summary": "Minimalistic lavalink wrapper based on wavelink. Made for Pycord.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12703633,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef7659073b86d5527b597b2ad594977d650c4d9fc46b8209624e0e8e7116c9ba",
          "md5": "ef0b1c625d8b185fb0665452050e383e",
          "sha256": "84d82457026c715e40e605708e12f8f48e92e227928865e93bbce722b1bbcda8"
        },
        "downloads": -1,
        "filename": "pisslink-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef0b1c625d8b185fb0665452050e383e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11504,
        "upload_time": "2022-01-26T22:08:23",
        "upload_time_iso_8601": "2022-01-26T22:08:23.699042Z",
        "url": "https://files.pythonhosted.org/packages/ef/76/59073b86d5527b597b2ad594977d650c4d9fc46b8209624e0e8e7116c9ba/pisslink-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5eb64c50902c3ff729b0b3f8bd20642bf9085ad3f5ba2eca55814a11f46cb76",
          "md5": "32b83f9732b67d70d8d106ecf7e7ff2c",
          "sha256": "40474a0d07c76ae4c43463ce1d3c625527d55fe4a8454dac4c26692f6457cc37"
        },
        "downloads": -1,
        "filename": "pisslink-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "32b83f9732b67d70d8d106ecf7e7ff2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9365,
        "upload_time": "2022-01-26T22:08:24",
        "upload_time_iso_8601": "2022-01-26T22:08:24.899368Z",
        "url": "https://files.pythonhosted.org/packages/c5/eb/64c50902c3ff729b0b3f8bd20642bf9085ad3f5ba2eca55814a11f46cb76/pisslink-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "344c32b162431e7cec09e8497bd1610cb70a132d15b4a43d89de756daf419442",
          "md5": "cd9d861dfc8604ddc832e005f00fe67f",
          "sha256": "b790c6b40fb6be5c38e0713ec4badbf58ce98f1d60d8a686852be1d286f37169"
        },
        "downloads": -1,
        "filename": "pisslink-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd9d861dfc8604ddc832e005f00fe67f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12473,
        "upload_time": "2022-01-26T22:13:00",
        "upload_time_iso_8601": "2022-01-26T22:13:00.320290Z",
        "url": "https://files.pythonhosted.org/packages/34/4c/32b162431e7cec09e8497bd1610cb70a132d15b4a43d89de756daf419442/pisslink-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1bcdc13574b62ed81505ae169b082c9e123823d8d5c5876fc49ba1b30b61c17",
          "md5": "e687423183a5744879959f5506f95281",
          "sha256": "8efd9132ebb31d2c7da1fa765b96c41c3256b650ad973bf6b30c1632ad6249e9"
        },
        "downloads": -1,
        "filename": "pisslink-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e687423183a5744879959f5506f95281",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10816,
        "upload_time": "2022-01-26T22:13:02",
        "upload_time_iso_8601": "2022-01-26T22:13:02.139785Z",
        "url": "https://files.pythonhosted.org/packages/d1/bc/dc13574b62ed81505ae169b082c9e123823d8d5c5876fc49ba1b30b61c17/pisslink-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "344c32b162431e7cec09e8497bd1610cb70a132d15b4a43d89de756daf419442",
        "md5": "cd9d861dfc8604ddc832e005f00fe67f",
        "sha256": "b790c6b40fb6be5c38e0713ec4badbf58ce98f1d60d8a686852be1d286f37169"
      },
      "downloads": -1,
      "filename": "pisslink-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cd9d861dfc8604ddc832e005f00fe67f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12473,
      "upload_time": "2022-01-26T22:13:00",
      "upload_time_iso_8601": "2022-01-26T22:13:00.320290Z",
      "url": "https://files.pythonhosted.org/packages/34/4c/32b162431e7cec09e8497bd1610cb70a132d15b4a43d89de756daf419442/pisslink-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d1bcdc13574b62ed81505ae169b082c9e123823d8d5c5876fc49ba1b30b61c17",
        "md5": "e687423183a5744879959f5506f95281",
        "sha256": "8efd9132ebb31d2c7da1fa765b96c41c3256b650ad973bf6b30c1632ad6249e9"
      },
      "downloads": -1,
      "filename": "pisslink-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "e687423183a5744879959f5506f95281",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10816,
      "upload_time": "2022-01-26T22:13:02",
      "upload_time_iso_8601": "2022-01-26T22:13:02.139785Z",
      "url": "https://files.pythonhosted.org/packages/d1/bc/dc13574b62ed81505ae169b082c9e123823d8d5c5876fc49ba1b30b61c17/pisslink-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}