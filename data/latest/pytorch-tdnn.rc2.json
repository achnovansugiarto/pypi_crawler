{
  "info": {
    "author": "Desh Raj",
    "author_email": "r.desh26@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# pytorch-tdnn\n\nImplementation of Time Delay Neural Network (TDNN) and Factorized TDNN (TDNN-F)\nin PyTorch, available as layers which can be used directly.\n\n### Setup\n\nFor using (no development required)\n\n```bash\npip install pytorch-tdnn\n```\n\nTo install for development, clone the repository, and then run the following from\nwithin the root directory.\n\n```bash\npip install -e .\n``` \n\n### Usage\n\n#### Using the TDNN layer\n\n```python\nfrom pytorch_tdnn.tdnn import TDNN as TDNNLayer\n\ntdnn = TDNNLayer(\n  512, # input dim\n  512, # output dim\n  [-3,0,3], # context\n)\n\ny = tdnn(x)\n```\n\nHere, `x` should have the shape `(batch_size, input_dim, sequence_length)`. \n\n**Note:** The `context` list should follow these constraints:\n  * The length of the list should be 2 or an odd number.\n  * If the length is 2, it should be of the form `[-1,1]` or `[-3,3]`, but not\n  `[-1,3]`, for example.\n  * If the length is an odd number, they should be evenly spaced with a 0 in the\n  middle. For example, `[-3,0,3]` is allowed, but `[-3,-1,0,1,3]` is not.\n\n#### Using the TDNNF layer\n\n```python\nfrom pytorch_tdnn.tdnnf import TDNNF as TDNNFLayer\n\ntdnnf = TDNNFLayer(\n  512, # input dim\n  512, # output dim\n  256, # bottleneck dim\n  1, # time stride\n)\n\ny = tdnnf(x, semi_ortho_step=True)\n```\n\nThe argument `semi_ortho_step` determines whether to take the step towards semi-\northogonality for the constrained convolutional layers in the 3-stage splicing. \nIf this call is made from within a `forward()` function of an\n`nn.Module` class, it can be set as follows to approximate Kaldi-style training\nwhere the step is taken once every 4 iterations:\n\n```python\nimport random\nsemi_ortho_step = self.training and (random.uniform(0,1) < 0.25)\n```\n\n**Note:** Time stride should be greater than or equal to 0. For example, if\nthe time stride is 1, a context of `[-1,1]` is used for each stage of splicing.\n\n### Credits\n\n* The TDNN implementation is based on: https://github.com/jonasvdd/TDNN and https://github.com/m-wiesner/nnet_pytorch.\n* Semi-orthogonal convolutions used in TDNN-F are based on: https://github.com/cvqluu/Factorized-TDNN.\n* Thanks to [Matthew Wiesner](https://github.com/m-wiesner) for helpful discussions\nabout the implementations.\n\nThis repository aims to wrap up these implementations in easy-installable PyPi\npackages, which can be used directly in PyTorch based neural network training.\n\n### Issues\n\nIf you find any bugs in the code, please raise an Issue, or email me at\n`r.desh26@gmail.com`.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/desh2608/pytorch-tdnn",
    "keywords": "speech recognition,time delay neural networks,factored TDNN,acoustic modeling",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytorch-tdnn",
    "package_url": "https://pypi.org/project/pytorch-tdnn/",
    "platform": "",
    "project_url": "https://pypi.org/project/pytorch-tdnn/",
    "project_urls": {
      "Homepage": "https://github.com/desh2608/pytorch-tdnn"
    },
    "release_url": "https://pypi.org/project/pytorch-tdnn/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "TDNN and TDNN-F layers in PyTorch",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8937051,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "adc6767d65dffe71bb6f5783fab9a9d3d6a1590c46b271d579583528ae3d9353",
          "md5": "b7627da3db29328a1cd1cbf45820fce8",
          "sha256": "4629a38344719f84c7e8b361c216ea155c5c49158bc42c604273185760286f74"
        },
        "downloads": -1,
        "filename": "pytorch-tdnn-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b7627da3db29328a1cd1cbf45820fce8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5058,
        "upload_time": "2020-12-15T22:31:39",
        "upload_time_iso_8601": "2020-12-15T22:31:39.589456Z",
        "url": "https://files.pythonhosted.org/packages/ad/c6/767d65dffe71bb6f5783fab9a9d3d6a1590c46b271d579583528ae3d9353/pytorch-tdnn-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a52dc856464a68c6c0998086e24bd6dfe656cbe334b746118681f42f9e9a12f",
          "md5": "cf654e5441524d195a21ff7d0ceaa446",
          "sha256": "2b10ae0d54bfab1ca1e3d7d133dca9d25493e905f1982eb03af58b8e2f0e2ab7"
        },
        "downloads": -1,
        "filename": "pytorch-tdnn-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cf654e5441524d195a21ff7d0ceaa446",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5388,
        "upload_time": "2020-12-18T22:18:43",
        "upload_time_iso_8601": "2020-12-18T22:18:43.534841Z",
        "url": "https://files.pythonhosted.org/packages/5a/52/dc856464a68c6c0998086e24bd6dfe656cbe334b746118681f42f9e9a12f/pytorch-tdnn-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5a52dc856464a68c6c0998086e24bd6dfe656cbe334b746118681f42f9e9a12f",
        "md5": "cf654e5441524d195a21ff7d0ceaa446",
        "sha256": "2b10ae0d54bfab1ca1e3d7d133dca9d25493e905f1982eb03af58b8e2f0e2ab7"
      },
      "downloads": -1,
      "filename": "pytorch-tdnn-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cf654e5441524d195a21ff7d0ceaa446",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5388,
      "upload_time": "2020-12-18T22:18:43",
      "upload_time_iso_8601": "2020-12-18T22:18:43.534841Z",
      "url": "https://files.pythonhosted.org/packages/5a/52/dc856464a68c6c0998086e24bd6dfe656cbe334b746118681f42f9e9a12f/pytorch-tdnn-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}