{
  "info": {
    "author": "Lincoln Innovation",
    "author_email": "labinnovation@mel.lincoln.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# lincolntools-config\n\n> lincolntools : Python toolbox made in [Lincoln France](http://www.lincoln.fr)\n\n* Author: Lincoln Innovation\n* Creation date: 2020-10-01\n* see [AUTHORS.md](./AUTHORS.md)\n\nThis package belongs to the `lincolntools` namespace <br>\nThe goal of this package is to provide the necessary tools to create a unique and global configuration object that can be queried anywhere in a Python project.\n\n\n## Table of content\n\n1. [Documentation](#documentation)\n2. [Tests](#tests)\n3. [Contribute](#contribute)\n4. [History](#historique)\n5. [Credits](#credits)\n\n## Installation\n\n```bash\n    pip install lincolntools-config\n```\n\n## How to use\nThere are several possibilities to load a YAML configuration file :\n* Provide the path to **a file** which will be processed and transformed into a Python `dict`\n* Provide the path to **a folder** that contains one or more YAML files that will be concatenated into a single object.\n\n\n\n### Example\nIn the following examples we suppose our config folder has the given structure :\n\n```bash\n└── config\n    ├── config_foo\n        ├── foo.yaml               \n        └── foo.template \n    └── config_bar\n        ├── bar.yaml               \n        └── bar.template \n```\n*foo.yaml*\n```yaml\nfoo:\n    foo_key : foo_value\n```\n\n*bar.yaml*\n```yaml\nbar:\n    bar_key : bar_value\n```\n\nCode :\n\n```python\nfrom lincolntools.config import Config\nmy_config = Config('/path/to/config')\nprint(my_config.conf)\n# {'foo': {'foo_key': 'foo_value'}, 'bar': {'bar_key': 'bar_value'}, '_version': 1}\nprint(my_config.get('foo'))\n# {'foo_key': 'foo_value'}\n\nprint(my_config.get('foo').get('foo_key'))\n# foo_value\n\nprint(my_config.get('foo')['foo_key']) # same as above but with another syntax\n# foo_value\n\nprint(my_config.flatten())\n# {'foo-foo_key': 'foo_value', 'bar-bar_key': 'bar_value'}\n\nprint(my_config.dump())\n# _version: 2\n# bar:\n#   bar_key: bar_value\n# foo:\n#   foo_key: foo_value\n```\n\n### Important\nThe `Config` class is based on the Single design pattern ([official documentation](https://python-3-patterns-idioms-test.readthedocs.io/en/latest/Singleton.html)). <br>\n**TLDR** : Only one instance of `Config` can be initialized during the whole program lifetime.\n \n```python\nfrom lincolntools.config import Config\nmy_first_config = Config('/path/to/config') # ok, no other instance exists\nmy_other_config = Config('/path/to/config') # nok\n# Exception: This is a singleton\n```\n\n## Tests\nLaunch tests with the default Python version :\n```bash\n# in the project folder\npytest\n````\nLaunch tests on multiple Python versions (see [`tox.ini`](./tox.ini)) :\n\n```bash\n# in the project folder\ntox\n```\n\n## History\n\nVoir [HISTORY.md](./HISTORY.md)\n\n\n## Credits\n\nThis package was inspired by Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n*  _Cookiecutter: https://github.com/audreyr/cookiecutter\n*  _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n\n# History\n\n\n## 1.0.0 (2020-10-01)\n\n* First version\n\n## 1.0.1 (2021-01-15)\n\n* Adding cfg_path argument in get/get_instance methods\n* Adding easydict for more convenient navigation\n\n## 1.0.2 (2021-01-15)\n\n* Now look for .yaml and .yml files when directory is provided\n\n## 1.0.3 (2021-02-05)\n\n* Concatenante yaml files before parsing. Allows anchor to be cross files.\n\n\n## 1.0.4 (2021-08-10)\n\n* Documentation and comments translation.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Lincoln-France/lincolntools-config/archive/refs/tags/v1.0.5.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Lincoln-France/lincolntools-config",
    "keywords": "configuration,yaml,lincoln,lincolntools,lincolntools-config",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lincolntools-config",
    "package_url": "https://pypi.org/project/lincolntools-config/",
    "platform": "",
    "project_url": "https://pypi.org/project/lincolntools-config/",
    "project_urls": {
      "Download": "https://github.com/Lincoln-France/lincolntools-config/archive/refs/tags/v1.0.5.tar.gz",
      "Homepage": "https://github.com/Lincoln-France/lincolntools-config"
    },
    "release_url": "https://pypi.org/project/lincolntools-config/1.0.5/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Boîte à outils Python made in Lincoln",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11696297,
  "releases": {
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6fab35591c6f34b64be2eed90863014332c4d14f4e279a6caee7bbdfb7f1ca16",
          "md5": "3049ec7aee21fcd22854513ff10d800d",
          "sha256": "c4507d53544e36c4b51c3e26fd5da4d30f0fc7b3186faaa18e7427ce28d5157d"
        },
        "downloads": -1,
        "filename": "lincolntools_config-1.0.4-py3.8.egg",
        "has_sig": false,
        "md5_digest": "3049ec7aee21fcd22854513ff10d800d",
        "packagetype": "bdist_egg",
        "python_version": "1.0.4",
        "requires_python": ">=3.5",
        "size": 13681,
        "upload_time": "2021-10-08T13:11:37",
        "upload_time_iso_8601": "2021-10-08T13:11:37.976886Z",
        "url": "https://files.pythonhosted.org/packages/6f/ab/35591c6f34b64be2eed90863014332c4d14f4e279a6caee7bbdfb7f1ca16/lincolntools_config-1.0.4-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "326bfcfdd9ff22f9c7b495173be6713ba04bd221cb32798b7fa98a2889145b21",
          "md5": "c92c65b37ae08953d62291299607e0fd",
          "sha256": "8d36e54779e7a1d551e75486df55eb4a1a873b83f3fc66b5535b365bb1bf2722"
        },
        "downloads": -1,
        "filename": "lincolntools-config-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "c92c65b37ae08953d62291299607e0fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 22419,
        "upload_time": "2021-10-08T13:12:12",
        "upload_time_iso_8601": "2021-10-08T13:12:12.492434Z",
        "url": "https://files.pythonhosted.org/packages/32/6b/fcfdd9ff22f9c7b495173be6713ba04bd221cb32798b7fa98a2889145b21/lincolntools-config-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "326bfcfdd9ff22f9c7b495173be6713ba04bd221cb32798b7fa98a2889145b21",
        "md5": "c92c65b37ae08953d62291299607e0fd",
        "sha256": "8d36e54779e7a1d551e75486df55eb4a1a873b83f3fc66b5535b365bb1bf2722"
      },
      "downloads": -1,
      "filename": "lincolntools-config-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "c92c65b37ae08953d62291299607e0fd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 22419,
      "upload_time": "2021-10-08T13:12:12",
      "upload_time_iso_8601": "2021-10-08T13:12:12.492434Z",
      "url": "https://files.pythonhosted.org/packages/32/6b/fcfdd9ff22f9c7b495173be6713ba04bd221cb32798b7fa98a2889145b21/lincolntools-config-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}