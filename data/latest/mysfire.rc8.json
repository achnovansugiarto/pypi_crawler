{
  "info": {
    "author": "David Chan",
    "author_email": "david@iridescent.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Mysfire - Load data faster than light :)\n\nMysfire takes the headache out of writing dataset and data loader code for pytorch (that you usually repeat time and\ntime again). Mysfire encourages code reuse between projects when possible, and allows for easy extensibility when code\nreuse is impossible. Not only this, mysfire makes it easy to scale your datasets to hundreds of nodes, without thinking:\ncloud storage support is built in (and easy to extend), making it a powerful tool when going from your local laptop to\nyour public or private cloud.\n\n## Installation\n\nInstall this library with pip - `pip install mysfire[all]`\n\nFor a restricted subset of the data loading types, you can use different options:\n\n```bash\npip install mysfire # Default options, only basic processors\npip install mysfire[s3] # Include options for S3 connection\npip install mysfire[image] # Include image processors\npip install mysfire[video] # Include video processors\npip install mysfire[h5py] # Include H5py processors\npip install mysfire[nlp] # Include NLP processors\n```\n\n## Tour\n\nEach mysfire dataset is composed of three components:\n\n1. A definition describing the types of data (and preprocessing steps) in each column of your tabular file. Usually,\n   this is just the header of your CSV or TSV file.\n2. A tabular data store (usually just a CSV or TSV file, but we can load tabular data from S3, SQL or any other\n   extensible columnular store)\n3. A set of processors for processing and loading the data. For most common data types, these processors are built in,\n   but we recognize that every dataset is different, so we make it as easy as possible to add new processors, or\n   download third party processors from the mysfire community hub.\n\nLet's look at a hello-world mysfire dataset:\n\n```tsv\n# simple_dataset.tsv\nclass:int   data:npy\n0   sample_0.npy\n1   sample_1.npy\n2   sample_2.npy\n```\n\nThat's it. Easy as defining the types of each of the objects and a name for each column as a header in a TSV file. The\ndata is then super easy to load to your normal PyTorch workflow:\n\n```py\nfrom mysfire import DataLoader\n# Returns a standard PyTorch DataLoader, just replace the dataset with the TSV file!\ntrain_dataloader = DataLoader('simple_dataset.tsv', batch_size = 3, num_workers=12)\nfor batch in train_dataloader:\n    print(batch)\n```\n\nThis dataset will produce a dictionary:\n\n```py\n{\n    'class': [0, 1, 2]\n    'data': np.ndarray # Array of shape [BS x ...]\n}\n```\n\nWe handle loading, collating, and batching the data, so you can focus on training models, and iterating on experiments.\nOnboarding new datasets is as easy as setting up the new TSV file, and changing the links. No more messing around with\nthe code to add a new dataset switch! No coding that numpy loading dataset for the 100th time either - we've already\nlearned to handle all kinds of numpy types (even ragged arrays!)\n\nNeed S3? That's as easy as configuring a column with your S3 details:\n\n```\n# simple_s3_dataset.tsv\nclass:int   data:npy(s3_access_key=\"XXX\",s3_secret_key=\"XXX\",s3_endpoint=\"XXX\")\n0   s3://data/sample_0.npy\n1   s3://data/sample_1.npy\n2   s3://data/sample_2.npy\n```\n\nMerging two S3 sources? Configure each column independently:\n\n```\n# multisource_s3_dataset.tsv\nclass:int  data_a:npy(s3_access_key=\"AAA\",s3_secret_key=\"AAA\",s3_endpoint=\"AAA\")    data_b:npy(s3_access_key=\"BBB\",s3_secret_key=\"BBB\",s3_endpoint=\"BBB\")\n0   s3://data/sample_0.npy   s3://data/sample_0.npy\n1   s3://data/sample_1.npy   s3://data/sample_1.npy\n2   s3://data/sample_2.npy   s3://data/sample_2.npy\n```\n\nWorried about putting your keys in a dataset file? Use `$S3_SECRET_KEY` (a `$` prefix) to load environment variables at\nruntime.\n\n```\n# simple_s3_dataset.tsv\nclass:int   data:npy(s3_access_key=$S3_ACCESS_KEY,s3_secret_key=$S3_SECRET_KEY,s3_endpoint=$S3_ENDPOINT)\n0   s3://data/sample_0.npy\n1   s3://data/sample_1.npy\n2   s3://data/sample_2.npy\n```\n\nLoading images or video?\n\n```\n# multimedia_s3_dataset.tsv\nclass:int   picture:img(resize=256)  frames:video(uniform_temporal_subsample=16)\n0   image_1.png     video_1.mp4\n1   image_2.jpg     video_2.mp4\n2   image_3.JPEG     video_3.mp4\n```\n\nNeed to do NLP? Huggingface Tokenizers is built in\n\n```\n# tokenization_s3_dataset.tsv\nclass:int   labels:nlp.huggingface_tokenization(tokenizer_json=\"./tokenizer.json\")\n0   Hello world!\n1   Welcome to the Mysfire data processors\n```\n\nWorking with PyTorch Lightning? LightningDataModules are built in:\n\n```py\nfrom mysfire import LightningDataModule\ndatamodule = LightningDataModule(\n    'train.tsv',\n    'validate.tsv',\n    'test.tsv'\n)\n```\n\nNeed to run something at test-time? All you need to do is build a OneShotLoader:\n\n```py\nfrom mysfire import OneShotLoader\n\nloader = OneShotLoader(filename='train.tsv') # Initialize from a TSV\nloader = OneShotLoader(columns=[\"class:int\", \"data:npy\"]) # or pass the columns directly!\n\n\ndata = loader([[\"field 1\", \"field 2\"],[\"field 1\", \"field 2\"]]) # Load data with a single method\n```\n\nNeed to load a custom datatype? Or extend the existing datatypes? It's super easy:\n\n```py\nfrom mysfire import register_processor, Processor\n\n# Register the processor with mysfire before creating a dataset\n@register_processor\nclass StringAppendProcessor(Processor):\n\n    # Setup an init function with any optional arguments that are parsed from the column. We handle all of the\n    # complicated parsing for you, just take all options as Optional[str] arguments!\n    def __init__(self, string_to_append: Optional[str] = None):\n        self._string_to_append = string_to_append\n\n    # Define a typestring that is matched against the TSV columns. Registered processors take precidence over\n    # processors that are loaded by default\n    @classmethod\n    def typestr(cls):\n        return \"str\"\n\n    # Define a collate function for your data type which handles batching. If this is missing, we use the standard\n    # torch collate function instead\n    def collate(self, batch: List[Optional[str]]) -> List[str]:\n        return [b or \"\" for b in batch]\n\n    # Add a call function which transforms the string data in the TSV into a single data sample.\n    def __call__(self, value: str) -> str:\n        return value + self._string_to_append if self._string_to_append else \"\"\n```\n\nWant to add remote data loading to your processor? It's as easy as:\n\n```py\nfrom mysfire import register_processor, S3Processor\n\n# Start by extending the S3 processor\n@register_processor\nclass S3FileProcessor(S3Processor):\n    def __init__(self,\n                 s3_endpoint: Optional[str] = None,\n                 s3_access_key: Optional[str] = None,\n                 s3_secret_key: Optional[str] = None,\n                 s3_region: Optional[str] = None,):\n\n        super().__init__(\n            s3_endpoint=s3_endpoint,\n            s3_access_key=s3_access_key,\n            s3_secret_key=s3_secret_key,\n            s3_region=s3_region,\n        )\n\n    @classmethod\n    def typestr(cls):\n        return \"str\"\n\n    def collate(self, batch: List[Optional[str]]) -> List[str]:\n        return [b or \"\" for b in batch]\n\n    def __call__(self, value: str) -> Optional[str]:\n        try:\n            # Use resolve_to_local to fetch any file in S3 to a local filepath (or use a local file path if it's local)\n            with self.resolve_to_local(value) as f:\n                with open(f, 'r') as fp:\n                    return f\n        except Exception as ex:\n            return None\n```\n\nFor full details, and to check out everything that we offer, check out our docs!\n\n## Useful?\n\nCite us!\n\n```\nBibtex\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/davidmchan/mysfire",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mysfire",
    "package_url": "https://pypi.org/project/mysfire/",
    "platform": null,
    "project_url": "https://pypi.org/project/mysfire/",
    "project_urls": {
      "Homepage": "https://github.com/davidmchan/mysfire"
    },
    "release_url": "https://pypi.org/project/mysfire/0.4.5/",
    "requires_dist": [
      "numpy (~=1.16)",
      "torch (~=1.4)",
      "sly (~=0.4)",
      "pyarrow (~=6.0.1)",
      "pytest (~=7.0)",
      "h5py (~=3.0.0) ; extra == 'all'",
      "tokenizers (~=0.11) ; extra == 'all'",
      "torchvision (~=0.11) ; extra == 'all'",
      "pillow (~=8.3.1) ; extra == 'all'",
      "pytorchvideo (~=0.1.5) ; extra == 'all'",
      "boto3 (~=1.16.9) ; extra == 'all'",
      "filetype (~=1.0.10) ; extra == 'all'",
      "google-cloud-storage (~=2.1.0) ; extra == 'all'",
      "av (~=8.1.0) ; extra == 'all'",
      "memory-tempfile (~=2.2.3) ; extra == 'all'",
      "transformers (~=4.17.0) ; extra == 'all'",
      "h5py (~=3.0.0) ; extra == 'dev'",
      "tokenizers (~=0.11) ; extra == 'dev'",
      "torchvision (~=0.11) ; extra == 'dev'",
      "pillow (~=8.3.1) ; extra == 'dev'",
      "pytorchvideo (~=0.1.5) ; extra == 'dev'",
      "boto3 (~=1.16.9) ; extra == 'dev'",
      "filetype (~=1.0.10) ; extra == 'dev'",
      "google-cloud-storage (~=2.1.0) ; extra == 'dev'",
      "av (~=8.1.0) ; extra == 'dev'",
      "memory-tempfile (~=2.2.3) ; extra == 'dev'",
      "mypy (~=0.931) ; extra == 'dev'",
      "flake8 (~=3.9.2) ; extra == 'dev'",
      "black (~=21.7b0) ; extra == 'dev'",
      "flake8-black (~=0.2.3) ; extra == 'dev'",
      "isort (~=5.9.3) ; extra == 'dev'",
      "commitizen (~=2.20.4) ; extra == 'dev'",
      "pre-commit (~=2.13.0) ; extra == 'dev'",
      "h5py (~=3.0.0) ; extra == 'h5py'",
      "torchvision (~=0.11) ; extra == 'image'",
      "pillow (~=8.3.1) ; extra == 'image'",
      "tokenizers (~=0.11) ; extra == 'nlp'",
      "transformers (~=4.17.0) ; extra == 'nlp'",
      "boto3 (~=1.16.9) ; extra == 's3'",
      "filetype (~=1.0.10) ; extra == 's3'",
      "google-cloud-storage (~=2.1.0) ; extra == 's3'",
      "pytorchvideo (~=0.1.5) ; extra == 'video'",
      "torchvision (~=0.11) ; extra == 'video'",
      "pillow (~=8.3.1) ; extra == 'video'",
      "av (~=8.1.0) ; extra == 'video'"
    ],
    "requires_python": "",
    "summary": "Fast (and opinionated) data loading for pytorch",
    "version": "0.4.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13274991,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5830dfad00da307a620b63fc57e0fe7c460a10914d1367e89e2c683efa5d18c8",
          "md5": "9a9c9972b528222241f22c787d35ee00",
          "sha256": "9ba94be1e0d2161cc6a7bcb7a5768e58df67fc286ccf2ce7c0b0b25e9b7004c9"
        },
        "downloads": -1,
        "filename": "mysfire-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a9c9972b528222241f22c787d35ee00",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21207,
        "upload_time": "2022-01-26T19:00:35",
        "upload_time_iso_8601": "2022-01-26T19:00:35.785661Z",
        "url": "https://files.pythonhosted.org/packages/58/30/dfad00da307a620b63fc57e0fe7c460a10914d1367e89e2c683efa5d18c8/mysfire-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b7df4ea768b588f3b78b6fb3844e1a23d53083335cec70d2de5fd1e8564371f",
          "md5": "a11aa72d269fdd6b06601b1016ec684d",
          "sha256": "6571556b1a73b474e9a27f68f39b20c278d627633a080db3c34de698077a56e3"
        },
        "downloads": -1,
        "filename": "mysfire-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a11aa72d269fdd6b06601b1016ec684d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18663,
        "upload_time": "2022-01-26T19:00:37",
        "upload_time_iso_8601": "2022-01-26T19:00:37.728211Z",
        "url": "https://files.pythonhosted.org/packages/3b/7d/f4ea768b588f3b78b6fb3844e1a23d53083335cec70d2de5fd1e8564371f/mysfire-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f8668a891d471eba241a3e1dbd2f759a5d2e30487c114a4aabcbab3ec7e8a03",
          "md5": "88ee45984ef318fa89bed5fe2df07675",
          "sha256": "197533c81bc1edb516c93c90cb39bb9f035b51e4a5778658977640a4be1214e6"
        },
        "downloads": -1,
        "filename": "mysfire-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "88ee45984ef318fa89bed5fe2df07675",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21589,
        "upload_time": "2022-01-27T00:18:09",
        "upload_time_iso_8601": "2022-01-27T00:18:09.346616Z",
        "url": "https://files.pythonhosted.org/packages/7f/86/68a891d471eba241a3e1dbd2f759a5d2e30487c114a4aabcbab3ec7e8a03/mysfire-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bab70ebc4a642dc6fd2b779d3c8dcfc1da8889a2041cfe8814ab8ca61c39618e",
          "md5": "beaed5379aba7067d4d188985605faa4",
          "sha256": "329fe014761a3517cd1ecc5e14d5e1a51e42ee056ff487f080f46e1747b04e9f"
        },
        "downloads": -1,
        "filename": "mysfire-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "beaed5379aba7067d4d188985605faa4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19081,
        "upload_time": "2022-01-27T00:18:10",
        "upload_time_iso_8601": "2022-01-27T00:18:10.669514Z",
        "url": "https://files.pythonhosted.org/packages/ba/b7/0ebc4a642dc6fd2b779d3c8dcfc1da8889a2041cfe8814ab8ca61c39618e/mysfire-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7798dd40981a6416ea96c5cec61871839933f7d4e67c56d11e06080330d6a15f",
          "md5": "69c12873f9de5b0e6b58254f6b64dc0f",
          "sha256": "c7a9d8af6eb52771a7ee835498dfde226864252e453300a4c4b64133f392122b"
        },
        "downloads": -1,
        "filename": "mysfire-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69c12873f9de5b0e6b58254f6b64dc0f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24867,
        "upload_time": "2022-02-18T22:28:08",
        "upload_time_iso_8601": "2022-02-18T22:28:08.232619Z",
        "url": "https://files.pythonhosted.org/packages/77/98/dd40981a6416ea96c5cec61871839933f7d4e67c56d11e06080330d6a15f/mysfire-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75d4836d823f90001dc7f4e53043277af914a099645c757c2f40e033ee1a9f04",
          "md5": "af6327ed426389915bdb1130b550f2ac",
          "sha256": "7081846a1d89b08b209b65c1b3ccdbbb2970721668fc69d000ca3dc51b81f46b"
        },
        "downloads": -1,
        "filename": "mysfire-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "af6327ed426389915bdb1130b550f2ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24031,
        "upload_time": "2022-02-18T22:28:10",
        "upload_time_iso_8601": "2022-02-18T22:28:10.104737Z",
        "url": "https://files.pythonhosted.org/packages/75/d4/836d823f90001dc7f4e53043277af914a099645c757c2f40e033ee1a9f04/mysfire-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44503a3aff9440fe08ec2a1ad64fefdef8ebc8b72eeac7089b1d72fe1f8e7189",
          "md5": "8f0b1d8a8315ff72cfab74e6177e7006",
          "sha256": "ed0db170446e1e9585763f7eac4d0852e0e8e8ac21c7cb5d53fa8316408acb1d"
        },
        "downloads": -1,
        "filename": "mysfire-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f0b1d8a8315ff72cfab74e6177e7006",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24866,
        "upload_time": "2022-02-18T22:57:14",
        "upload_time_iso_8601": "2022-02-18T22:57:14.048429Z",
        "url": "https://files.pythonhosted.org/packages/44/50/3a3aff9440fe08ec2a1ad64fefdef8ebc8b72eeac7089b1d72fe1f8e7189/mysfire-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7ac8640637a59e9d0667e9d699b078b7e55e8eebb7be067d6df07aaf4d87ede",
          "md5": "5ccf4234e6dcf22b01d695bef7ebab37",
          "sha256": "5e34cf267ff5bf5278bd1e1426b820e6e99dc58af35493d169b19d044c9d9b59"
        },
        "downloads": -1,
        "filename": "mysfire-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5ccf4234e6dcf22b01d695bef7ebab37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24065,
        "upload_time": "2022-02-18T22:57:15",
        "upload_time_iso_8601": "2022-02-18T22:57:15.784736Z",
        "url": "https://files.pythonhosted.org/packages/d7/ac/8640637a59e9d0667e9d699b078b7e55e8eebb7be067d6df07aaf4d87ede/mysfire-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f67dcdd2ec8c64b3157ea69a4d0db14f6a7cab8c7b4e006c0cfd897b9fb23445",
          "md5": "1e92ff6d05b4244f2dcb458c4ab5c21b",
          "sha256": "c132c16f80b7aa5399f14c3b40e1724ed8d3e0c80fdf7621a4c8d0dca8e21c2c"
        },
        "downloads": -1,
        "filename": "mysfire-0.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e92ff6d05b4244f2dcb458c4ab5c21b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24865,
        "upload_time": "2022-02-18T23:09:39",
        "upload_time_iso_8601": "2022-02-18T23:09:39.335469Z",
        "url": "https://files.pythonhosted.org/packages/f6/7d/cdd2ec8c64b3157ea69a4d0db14f6a7cab8c7b4e006c0cfd897b9fb23445/mysfire-0.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a658dd40ca4ef02884ad913934fc07198971de10a5d97eb6bfcfa8c46307dce",
          "md5": "6aa1fca957c956a8129e1c0af425a501",
          "sha256": "8600f48698ded8e45a97c0da038562c54d9ecdb1637166c58359c4233463c2eb"
        },
        "downloads": -1,
        "filename": "mysfire-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6aa1fca957c956a8129e1c0af425a501",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24101,
        "upload_time": "2022-02-18T23:09:41",
        "upload_time_iso_8601": "2022-02-18T23:09:41.225541Z",
        "url": "https://files.pythonhosted.org/packages/9a/65/8dd40ca4ef02884ad913934fc07198971de10a5d97eb6bfcfa8c46307dce/mysfire-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "229ab8560178e9b83a6ce991a4fa6f936c42347ad24b600876097be0060f9d06",
          "md5": "994601f3561883c7f6955b8722277f32",
          "sha256": "1349ca00174a90f3337c006bc14eda312f83dfb6f412ca78ff180931f4a16f0d"
        },
        "downloads": -1,
        "filename": "mysfire-0.4.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "994601f3561883c7f6955b8722277f32",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26930,
        "upload_time": "2022-02-18T23:17:48",
        "upload_time_iso_8601": "2022-02-18T23:17:48.152160Z",
        "url": "https://files.pythonhosted.org/packages/22/9a/b8560178e9b83a6ce991a4fa6f936c42347ad24b600876097be0060f9d06/mysfire-0.4.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4e4ad877ab0f0dbdfde364b233451033af4d8ed61ec3a14ad32601e53b30ea0",
          "md5": "de6b6f0175d5b0b6b5d170026cf815fe",
          "sha256": "a4381e85318afef75e0acc9734b82d6d4b306b77b6a45a04af8d80062388ee3f"
        },
        "downloads": -1,
        "filename": "mysfire-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "de6b6f0175d5b0b6b5d170026cf815fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25480,
        "upload_time": "2022-02-18T23:17:50",
        "upload_time_iso_8601": "2022-02-18T23:17:50.018656Z",
        "url": "https://files.pythonhosted.org/packages/f4/e4/ad877ab0f0dbdfde364b233451033af4d8ed61ec3a14ad32601e53b30ea0/mysfire-0.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2f9da9790e8c55db9e5d3a4327b968296ab048240337496638b40f042603a9b",
          "md5": "c543fb4c6ad50aea52fc4a13ce2b3392",
          "sha256": "ce44d09b3a89d65de945730f8fcf5df19e6486bbf657b2d828c8e5464eeaa0c8"
        },
        "downloads": -1,
        "filename": "mysfire-0.4.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c543fb4c6ad50aea52fc4a13ce2b3392",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30964,
        "upload_time": "2022-03-05T01:10:15",
        "upload_time_iso_8601": "2022-03-05T01:10:15.504158Z",
        "url": "https://files.pythonhosted.org/packages/e2/f9/da9790e8c55db9e5d3a4327b968296ab048240337496638b40f042603a9b/mysfire-0.4.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80b3a2b4920d8b8e5b8e907bd57f301cd05a739748b1a3efabea3a5e9630179d",
          "md5": "5744cb0938cb7c787e526e97607f7d3d",
          "sha256": "cfa4f54ea272f64bf285794dcf53ce1c32bbbf3eda54030fb08d68d95ed8aec2"
        },
        "downloads": -1,
        "filename": "mysfire-0.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "5744cb0938cb7c787e526e97607f7d3d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27404,
        "upload_time": "2022-03-05T01:10:17",
        "upload_time_iso_8601": "2022-03-05T01:10:17.141199Z",
        "url": "https://files.pythonhosted.org/packages/80/b3/a2b4920d8b8e5b8e907bd57f301cd05a739748b1a3efabea3a5e9630179d/mysfire-0.4.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1add1be8d861ac5a3e5437802284098bf85bb348c04b319e5c3fe1df2fe6b63f",
          "md5": "73ef027ec2da906f90c4afeea6461204",
          "sha256": "55140553ae9c955f4f1a226287c9bd4eb013f36612f6bff90937f2ac8a00fd6d"
        },
        "downloads": -1,
        "filename": "mysfire-0.4.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73ef027ec2da906f90c4afeea6461204",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 31507,
        "upload_time": "2022-03-23T20:27:48",
        "upload_time_iso_8601": "2022-03-23T20:27:48.381203Z",
        "url": "https://files.pythonhosted.org/packages/1a/dd/1be8d861ac5a3e5437802284098bf85bb348c04b319e5c3fe1df2fe6b63f/mysfire-0.4.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76552196faf2141c35ec9399ee547f21ad0230332a16f7164fef672eb6d9f591",
          "md5": "53311b879c53008bfc5d10b303da62da",
          "sha256": "00f782946bd8f0adbe3b0ccf7d3f10f2b2dbdf237dac77570a17ec9804c0f973"
        },
        "downloads": -1,
        "filename": "mysfire-0.4.5.tar.gz",
        "has_sig": false,
        "md5_digest": "53311b879c53008bfc5d10b303da62da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28009,
        "upload_time": "2022-03-23T20:27:49",
        "upload_time_iso_8601": "2022-03-23T20:27:49.484897Z",
        "url": "https://files.pythonhosted.org/packages/76/55/2196faf2141c35ec9399ee547f21ad0230332a16f7164fef672eb6d9f591/mysfire-0.4.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1add1be8d861ac5a3e5437802284098bf85bb348c04b319e5c3fe1df2fe6b63f",
        "md5": "73ef027ec2da906f90c4afeea6461204",
        "sha256": "55140553ae9c955f4f1a226287c9bd4eb013f36612f6bff90937f2ac8a00fd6d"
      },
      "downloads": -1,
      "filename": "mysfire-0.4.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "73ef027ec2da906f90c4afeea6461204",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 31507,
      "upload_time": "2022-03-23T20:27:48",
      "upload_time_iso_8601": "2022-03-23T20:27:48.381203Z",
      "url": "https://files.pythonhosted.org/packages/1a/dd/1be8d861ac5a3e5437802284098bf85bb348c04b319e5c3fe1df2fe6b63f/mysfire-0.4.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "76552196faf2141c35ec9399ee547f21ad0230332a16f7164fef672eb6d9f591",
        "md5": "53311b879c53008bfc5d10b303da62da",
        "sha256": "00f782946bd8f0adbe3b0ccf7d3f10f2b2dbdf237dac77570a17ec9804c0f973"
      },
      "downloads": -1,
      "filename": "mysfire-0.4.5.tar.gz",
      "has_sig": false,
      "md5_digest": "53311b879c53008bfc5d10b303da62da",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 28009,
      "upload_time": "2022-03-23T20:27:49",
      "upload_time_iso_8601": "2022-03-23T20:27:49.484897Z",
      "url": "https://files.pythonhosted.org/packages/76/55/2196faf2141c35ec9399ee547f21ad0230332a16f7164fef672eb6d9f591/mysfire-0.4.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}