{
  "info": {
    "author": null,
    "author_email": "许灿标 <lcctoor@outlook.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License"
    ],
    "description": "# Project description\n\nThe most elegant mysql ORM in history.\n\n# Installation and documentation\n\nInstall：`pip install coolmysql`\n\n[Documentation](https://github.com/lcctoor/lccpy/blob/main/coolmysql/docs/doc.md)\n\n[中文文档](https://github.com/lcctoor/lccpy/blob/main/coolmysql/docs/doc_zh.md)\n\n# Bug submission and feature proposal\n\nYou can contact me through [Github-Issues](https://github.com/lcctoor/lccpy/issues), [WeChat](https://raw.githubusercontent.com/lcctoor/me/main/author/WeChatQR.jpg), [Technology exchange group on WeChat](https://raw.githubusercontent.com/lcctoor/me/main/ExchangeGroup/PythonTecQR.jpg) .\n\n# About the author\n\nAuthor：许灿标\n\nEmail：lcctoor@outlook.com\n\n[Home Page](https://github.com/lcctoor/me/blob/main/home.md) | [WeChat](https://raw.githubusercontent.com/lcctoor/me/main/author/WeChatQR.jpg) | [Python technology exchange group on WeChat](https://raw.githubusercontent.com/lcctoor/me/main/ExchangeGroup/PythonTecQR.jpg)\n\nOpen source projects：[Make Python simpler](https://github.com/lcctoor/lccpy#readme)\n\n# Syntax Preview\n\nImport：\n\n```python\nfrom pymysql import connect\nfrom coolmysql import ORM, mc, mf\n```\n\nCreate an ORM:\n\n```python\ndef mkconn():\n    return connect(\n        host = 'localhost',\n        port = 3306,\n        user = 'root',\n        password = '123456789'\n    )\n\norm = ORM(mkconn=mkconn)  # account ORM\ndb = orm['city']  # db ORM\nsheet = db['school']  # sheet ORM\n```\n\nAdd data:\n\n```python\nline1 = {'name': 'tony 1', 'age':11, 'report_date':'2023-01-11'}\nline2 = {'name': 'tony 2', 'age':12, 'report_date':'2023-01-12'}\nline3 = {'name': 'tony 3', 'age':13, 'report_date':'2023-01-13'}\nline4 = {'name': 'tony 4', 'age':14, 'report_date':'2023-01-14'}\nline5 = {'name': 'tony 5', 'age':15, 'report_date':'2023-01-15'}\nline6 = {'name': 'tony 6', 'age':16, 'report_date':'2023-01-16'}\n\nr1 = sheet + line1  # Add a row of data\nr2 = sheet + [line2, line3, line4, line5, line6]  # Add multiple rows of data\n```\n\nQuery example:\n\n```python\nsheet[:]  # Query all data\n\nsheet[3]  # Query Article 3 data\n\nsheet[mc.age>13][mc.name=='tony 5'][1]  # Query the first data with the age greater than 13 and the name 'tony 5'\n```\n\nModify Example:\n\n```python\nsheet[mc.age>10][2:5] = {\n    'vision': 5.0,\n    'gender': 'male',\n    'like': 'football, basketball, painting, rope skipping'\n}\n```\n\nDelete example:\n\n```python\n# Delete all data with age>=15\nsheet[mc.age>=15][:] = None\n\n# Delete the second data that is older than 10 and likes football\nsheet[mc.age>10][mc.like.re('football')][2] = None\n\n# Delete all data\nsheet[:] = None\n```\n\nSlice example:\n\n```python\nsheet[filter]...[filter][:]  # Query all qualified data\nsheet[filter]...[filter][:] = None  # Delete all eligible data\nsheet[filter]...[filter][:] = {'grade':'junior 1'}  # Modify all eligible data\n\nsheet[filter]...[filter][1]  # Query the first eligible item\nsheet[filter]...[filter][1] = None  # Delete the eligible Article 1\nsheet[filter]...[filter][1] = {'grade':'junior 1'}  # Modify Article 1 that meets the conditions\n\nsheet[filter]...[filter][3:7]  # Query eligible items 3 to 7\nsheet[filter]...[filter][3:7] = None  # Delete articles 3 to 7 that meet the conditions\nsheet[filter]...[filter][3:7] = {'grade':'junior 1'}  # Modify articles 3 to 7 that meet the conditions\n```\n\nFilter：\n\n| **Code** |\n| -------------- |\n| mc.age > 10    |\n| mc.age >= 10   |\n| mc.age < 10    |\n| ...            |\n\n| **Code**                       | **Explanation**                                             |\n| ------------------------------------ | ----------------------------------------------------------------- |\n| mc.grade.isin('grade 3', 'senior 2') | If the field value is a member of the input value, it matches     |\n| mc.age.notin(10, 30, 45)             | If the field value is not a member of the input value, it matches |\n\n| **Code**     |\n| ------------------ |\n| mc.name.re('tony') |\n\n| **Code**                                                              | **Explanation** |\n| --------------------------------------------------------------------------- | --------------------- |\n| [ mc.age>3 ][ mc.age<100 ]                                                  | Intersection          |\n| [ (mc.age==30)&#124; (mc.age>30) &#124; (mc.age<30) &#124; (mc.age==None) ] | Union                 |\n| [ (mc.age>3) - (mc.age>100) ]                                               | Difference set        |\n| [ ~(mc.age>100) ]                                                           | Complement            |\n\nonly the name and age fields are returned:\n\n```python\nsheet[mc.age>11][mc.age<30]['name','age'][:]\n```\n\nfor all data with an age greater than 12, the first step is in descending order by age, and the second step is in ascending order by name. After sorting, the second to fourth data items are returned:\n\n```python\nsheet[mc.age>12].order(age=False, name=True)[2:4]\n```\n\nStatistics：\n\n| **Project**       | **Syntax**        | **Return**                                        |\n| ----------------------- | ----------------------- | ------------------------------------------------------- |\n| All fields              | sheet.getColumns( )     | [{'name':'id', 'comment':'', 'type':'int'}, {...}, ...] |\n| Total data              | len( sheet )            | 0                                                       |\n| Data volume with age>10 | len( sheet[mc.age>10] ) | 0                                                       |\n\norm (account ORM):\n\n| **Function**                | **Syntax**  | **Return**                                                     |\n| --------------------------------- | ----------------- | -------------------------------------------------------------------- |\n| Obtain the names of all libraries | orm.getDbNames( ) | ['information_schema', 'mysql', 'performance_schema', 'sys', 'city'] |\n| check whether a library exists.   | 'city'  in  orm   | True                                                                 |\n| Number of statistical databases   | len( orm )        | 5                                                                    |\n\ndb (database ORM):\n\n| **Function**             | **Syntax**    | **Return** |\n| ------------------------------ | ------------------- | ---------------- |\n| obtain the names of all sheets | db.getSheetNames( ) | ['school']       |\n| check whether a sheet exists.  | 'school'  in  db    | True             |\n| Number of statistical sheets   | len( db )           | 1                |\n\nCall mysql functions：\n\n```python\nsheet[mf.year('report_date') == 2023][:]\nsheet[mf.year('report_date') == 2029][:] = None\nsheet[mf.year('report_date') == 2023][2:5] = {'gender':'female'}\n```\n\nExecute native SQL statements：\n\n```python\ndata, cursor = sheet.execute('select name from school limit 1')\ndata\n# >>> [{'name': 'tony 1'}]\n\ndata, cursor = sheet.execute('update school set like=\"Python\" limit 3')\ncursor.rowcount\n# >>> 3\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": "coolmysql,pymysql,mysql",
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "coolmysql",
    "package_url": "https://pypi.org/project/coolmysql/",
    "platform": null,
    "project_url": "https://pypi.org/project/coolmysql/",
    "project_urls": {
      "Documentation": "https://github.com/lcctoor/lccpy/blob/main/coolmysql/docs/doc.md"
    },
    "release_url": "https://pypi.org/project/coolmysql/1.2/",
    "requires_dist": [
      "pymysql",
      "vtype",
      "coolfunc"
    ],
    "requires_python": null,
    "summary": "The most elegant mysql ORM in history",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17510350,
  "releases": {
    "1.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "fdc06161a05fcfa006bf209db56a17b7a2f5ff3bea24364d4350df78a22615f1",
          "md5": "9a358b7fed6007075f9c357fdf5f2273",
          "sha256": "d3d06d33ba9d912eb70dfb03ec0c9c643273d803173dddbf51a15f4a5f8bfd6f"
        },
        "downloads": -1,
        "filename": "coolmysql-1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a358b7fed6007075f9c357fdf5f2273",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11787,
        "upload_time": "2023-03-16T14:45:23",
        "upload_time_iso_8601": "2023-03-16T14:45:23.714284Z",
        "url": "https://files.pythonhosted.org/packages/fd/c0/6161a05fcfa006bf209db56a17b7a2f5ff3bea24364d4350df78a22615f1/coolmysql-1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "56e8c09a4e992233a6f908d07d44c577e281e963f29d1898d6e5b0f5bedbb380",
          "md5": "ceeae56f9911b8c402932f2886be0c38",
          "sha256": "b48eebedaef320ca43032d0d63369d305338f8a13c4761a69bbdd0d995a22465"
        },
        "downloads": -1,
        "filename": "coolmysql-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ceeae56f9911b8c402932f2886be0c38",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16529,
        "upload_time": "2023-03-16T14:45:34",
        "upload_time_iso_8601": "2023-03-16T14:45:34.119468Z",
        "url": "https://files.pythonhosted.org/packages/56/e8/c09a4e992233a6f908d07d44c577e281e963f29d1898d6e5b0f5bedbb380/coolmysql-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "b17252609a9ee984be2fbc8bab979489b2d67d10af9442bb91e221d4cbe64d4d",
          "md5": "7aaa45541841e23ce87fbd7cbd1e08db",
          "sha256": "d382f00ae7e8e83edfa684046420b3bcc3acfa4c21620c04bd41a26f00abc01c"
        },
        "downloads": -1,
        "filename": "coolmysql-1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7aaa45541841e23ce87fbd7cbd1e08db",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11935,
        "upload_time": "2023-03-30T12:16:45",
        "upload_time_iso_8601": "2023-03-30T12:16:45.356417Z",
        "url": "https://files.pythonhosted.org/packages/b1/72/52609a9ee984be2fbc8bab979489b2d67d10af9442bb91e221d4cbe64d4d/coolmysql-1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "16e0e553f93246c56b4c8abe47d8fda302c54aae80f8d9f8ae9a5c43024a6725",
          "md5": "a6e232d8950d53b742bab756ecff902b",
          "sha256": "9ded66472c38b1bf8969796e6b08054bf91209e384b4a5e998b9a689a33ea892"
        },
        "downloads": -1,
        "filename": "coolmysql-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a6e232d8950d53b742bab756ecff902b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13100,
        "upload_time": "2023-03-30T12:16:48",
        "upload_time_iso_8601": "2023-03-30T12:16:48.142898Z",
        "url": "https://files.pythonhosted.org/packages/16/e0/e553f93246c56b4c8abe47d8fda302c54aae80f8d9f8ae9a5c43024a6725/coolmysql-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "b17252609a9ee984be2fbc8bab979489b2d67d10af9442bb91e221d4cbe64d4d",
        "md5": "7aaa45541841e23ce87fbd7cbd1e08db",
        "sha256": "d382f00ae7e8e83edfa684046420b3bcc3acfa4c21620c04bd41a26f00abc01c"
      },
      "downloads": -1,
      "filename": "coolmysql-1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7aaa45541841e23ce87fbd7cbd1e08db",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 11935,
      "upload_time": "2023-03-30T12:16:45",
      "upload_time_iso_8601": "2023-03-30T12:16:45.356417Z",
      "url": "https://files.pythonhosted.org/packages/b1/72/52609a9ee984be2fbc8bab979489b2d67d10af9442bb91e221d4cbe64d4d/coolmysql-1.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "16e0e553f93246c56b4c8abe47d8fda302c54aae80f8d9f8ae9a5c43024a6725",
        "md5": "a6e232d8950d53b742bab756ecff902b",
        "sha256": "9ded66472c38b1bf8969796e6b08054bf91209e384b4a5e998b9a689a33ea892"
      },
      "downloads": -1,
      "filename": "coolmysql-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a6e232d8950d53b742bab756ecff902b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13100,
      "upload_time": "2023-03-30T12:16:48",
      "upload_time_iso_8601": "2023-03-30T12:16:48.142898Z",
      "url": "https://files.pythonhosted.org/packages/16/e0/e553f93246c56b4c8abe47d8fda302c54aae80f8d9f8ae9a5c43024a6725/coolmysql-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}