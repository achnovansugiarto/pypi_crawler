{
  "info": {
    "author": "Joeran Bosma",
    "author_email": "Joeran.Bosma@radboudumc.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Report Guided Annotation\n![Tests](https://github.com/DIAGNijmegen/Report-Guided-Annotation/actions/workflows/tests.yml/badge.svg)\n\n## Background\nDeep learning-based diagnostic performance increases with more annotated data, but manual annotation is a bottleneck in most fields. Experts evaluate diagnostic images during clinical routine, and write their findings in reports. Automatic annotation based on clinical reports could overcome the manual labelling bottleneck. This repository implements the generation of dense annotations from model predictions, guided by the target number of structures. \n\n## ðŸ“– Citation\nIf you use this algorithm in your work, please cite our work:\n\nJ. S. Bosma, A. Saha, M. Hosseinzadeh, I. Slootweg, M. de Rooij, and H. Huisman (2022), \"_Semi-supervised learning with report-guided lesion annotation for deep learning-based prostate cancer detection in bpMRI_\", to be submitted\n\n\n## Installation\nReport Guided Annotation is pip-installable:\n\n`pip install report_guided_annotation`\n\n\n## Usage\n### Preparation\nTo generate annotations from softmax predictions, prepare the input folder in the following format: \n\n```\npath/to/softmax/folder/\nâ”œâ”€â”€ num_lesions_to_retain_map.json\nâ”œâ”€â”€ ProstateX-0000.nii.gz\nâ”œâ”€â”€ ProstateX-0001.nii.gz\nâ”œâ”€â”€ ProstateX-0002.nii.gz\n...\n```\nSee [tests/input](https://github.com/DIAGNijmegen/Report-Guided-Annotation/tree/main/tests/input) for an example. Allowed file extensions: `.nii.gz`, `.nii`, `.mha`, `.mhd`, `.npy`, and `.npz` from nnUNet. \n\nThe number of lesions to retain should be stored as a json dictionary, with the filenames of the predictions as keys, and the number of structures to retain as values (in this example, the PI-RADS â‰¥ 3 lesions were counted):\n```python\n{\n    \"ProstateX-0000.nii.gz\": 1,\n    \"ProstateX-0001.nii.gz\": 1,\n    \"ProstateX-0002.nii.gz\": 2,\n    ...\n}\n```\n\n### Generation\nGenerate automatic annotations from the command line:\n\n```\npython3 -m report_guided_annotation --input=/path/to/input/folder/ --output=/path/to/output/folder\n```\n\nOr from a Python script:\n```python\nfrom report_guided_annotation import create_automatic_annotations_for_folder\n\ncreate_automatic_annotations_for_folder(\n    input_dir=\"/path/to/input/folder/\",\n    output_dir=\"/path/to/output/folder/\"\n)\n```\n\n## Mechanism\nFrom each softmax volume we create distinct lesion candidates, as illustrated in the figure below. Specifically, we create a lesion candidate by starting at the most confident voxel, and including all connected voxels (in 3D) with at least 40% of the peak's confidence. After a lesion candidate is extracted, we remove it from the model prediction and continue to the next peak. \n\nThe automatic voxel-level annotations are generated by keeping the n<sub>sig</sub> most confident lesion candidates, with n<sub>sig</sub> the number of clinically significant report findings (in this example, the number of PI-RADS â‰¥ 3 lesions). If there are fewer lesion candidates than clinically significant report findings, the case is excluded (no automatic annotation will be saved, unless explicitly requested with `--skip_if_insufficient_lesions=0` or `skip_if_insufficient_lesions=False`). \n\nThe masks for each finding is binarized and saved to the output folder. \n\nLesion candidate extraction from softmax prediction:\n![dynamic-lesion-extraction](https://user-images.githubusercontent.com/5995183/143723222-b3c39e4b-90c0-4152-a75f-fa096c03288c.png)\n\nThis is how report-guided automatic annotations would fit in an end-to-end pipeline:\n\n![Prostate MRI csPCa Detection with Report Guided Annotations Social](https://user-images.githubusercontent.com/5995183/143723276-fdb448c6-7ae6-4ace-adf0-d32e4c688dee.png)\n\n\n## Extract PI-RADS Scores from Radiology Report\nThe PI-RADS score extraction from radiology report was designed with the reports from RUMC in mind. Please verify if your institution's reports are similar, and modify the code accordingly!\n\n### Input:\nRadiology report for prostate cancer detection, reported with PI-RADS v2. \n\n### Mechanism:\nMost of the radiology reports in our dataset were generated from a template, and \nmodified to provide additional information. Although multiple templates were used\nover the years, this resulted in structured reports for most visits. This makes a\nrule-based natural language processing script a reliable and transparent way to\nextract PI-RADS scores from our radiology reports.\n\nSimply counting the occurrences of `PI-RADS 4/5` in the report body is reasonably\neffective, but has some pitfalls. For example, prior PI-RADS scores are often\nreferenced during follow-up visits, resulting in false positive matches. Findings\ncan also be grouped and described jointly, resulting in false negatives. To improve\nthe reliability of the PI-RADS extraction from radiology reports, we extract the\nscores in two steps.\n\nFirst, we try to split the radiology reports in sections for individual findings,\nby searching for text that matches the following structure:\n```\n[Finding] (number indicator) [number]\n```\nWhere `Finding` matches the Dutch translations `afwijking`, `laesie`, `markering`\nor `regio`. The optional number indicators are `nr.`, `mark` and `nummer`. The\nnumber at the end matches one or multiple numbers (e.g., `1` or `2+3`).\n\nSecondly, we extract the PI-RADS scores by searching for text that matches the\nfollowing structure:\n```\n[PI-RADS] (separators) [number 1-5]\n```\nWhere the optional separators include `v2 category` and `:`. The dash between `PI`\nand `RADS' is optional. The T2W, DWI and DCE scores are extracted analogous to the\nPI-RADS score, while also allowing joint extraction:\n```\nT2W/DWI/DCE score: [1-5]/[1-5]/[-+]\n```\nIn this instance, the first number is matched with the T2W score, the second with\nDWI and the `+` or `-` with DCE.\n\nIn case the report could not be split in sections per lesion, we apply strict pattern\nmatching on the full report. During strict pattern matching we only extract T2W, DWI\nand DCE scores jointly, to ensure the scores are from the same lesion. The resulting\nPI-RADS scores are extracted from the full report and matched to the individual scores.\n\nExample report sections with the text matching the PI-RADS, T2W, DWI and DCE scores\ncoloured in are shown in J. S. Bosma, et. al. \"Report Guided Automatic Lesion Annotation\nfor Deep Learning Prostate Cancer Detection in bpMRI\", to be submitted, Figure 2.\n\n### Output:\nFor each report, the PI-RADS scores are returned in the following format:\n```python\n[\n    (1, {'T2W': '3', 'DWI': '5', 'DCE': '+', 'tot': 5}),\n    (2, {'T2W': '2', 'DWI': '2', 'DCE': '+', 'tot': 2})\n]\n```\n\n### Usage\nThe scores can be extracted using a Python script:\n```python\nfrom report_guided_annotation import extract_pirads_scores\n\n# read radiology report\nwith open(\"tests/reports/sample_1.txt\")\n    report = fp.read()\n\n# extract PI-RADS scores from radiology report\nscores = extract_pirads_scores(\n    report=report\n)\n```\n\nTo combine the report reading with the report guided annotation procedure, parse the reports and save the result in the format described above:\n```python\nimport os\nimport json\nfrom report_guided_annotation import extract_pirads_scores\n\npath_to_reports = \"tests/reports\"\npath_to_softmax = \"tests/parse_reports_output\"\n\nnum_lesions_to_retain_map = {}\n\nfor fn in os.listdir(path_to_reports):\n    if not '.txt' in fn:\n        print(f\"Skipped {fn}, not a report?\")\n\n    # read radiology report\n    with open(os.path.join(path_to_reports, fn)) as fp:\n        report = fp.read()\n    \n    # extract PI-RADS scores from radiology report\n    scores = extract_pirads_scores(\n        report=report\n    )\n\n    # count number of PI-RADS >= 4 lesions\n    pirads_scores = [int(lesion_scores['tot'])\n                     for (lesion_id, lesion_scores) in scores\n                     if lesion_scores['tot'] is not None]\n    num_pirads_45 = sum([score >= 4 for score in pirads_scores])\n\n    # store number of clinically significant report findings\n    softmax_fn = fn.replace(\".txt\", \".nii.gz\")\n    num_lesions_to_retain_map[softmax_fn] = num_pirads_45\n\n# save number of lesion candidates to retain\nwith open(os.path.join(path_to_softmax, \"num_lesions_to_retain_map.json\"), \"w\") as fp:\n    json.dump(num_lesions_to_retain_map, fp, indent=4)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DIAGNijmegen/Report-Guided-Annotation",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "report-guided-annotation",
    "package_url": "https://pypi.org/project/report-guided-annotation/",
    "platform": "unix",
    "project_url": "https://pypi.org/project/report-guided-annotation/",
    "project_urls": {
      "Bug Tracker": "https://github.com/DIAGNijmegen/Report-Guided-Annotation/issues",
      "Homepage": "https://github.com/DIAGNijmegen/Report-Guided-Annotation"
    },
    "release_url": "https://pypi.org/project/report-guided-annotation/0.2.7/",
    "requires_dist": [
      "numpy",
      "tqdm",
      "SimpleITK",
      "scipy",
      "pytest (>=6.0) ; extra == 'testing'",
      "pytest-cov (>=2.0) ; extra == 'testing'",
      "mypy (>=0.910) ; extra == 'testing'",
      "flake8 (>=3.9) ; extra == 'testing'",
      "tox (>=3.24) ; extra == 'testing'"
    ],
    "requires_python": ">=3.6",
    "summary": "Report Guided Annotation",
    "version": "0.2.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15777854,
  "releases": {
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31c3e00b7110c240fdbff91b4ce805584a42ccddb8fa05cf00e93ff5e9534a51",
          "md5": "041fdf68773ff00e8a95241c5507fe43",
          "sha256": "152a101eeea2275fa3c4ecb30ec52bd89c0ec864206e16372d9663445677f086"
        },
        "downloads": -1,
        "filename": "report_guided_annotation-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "041fdf68773ff00e8a95241c5507fe43",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19094,
        "upload_time": "2022-07-02T18:53:49",
        "upload_time_iso_8601": "2022-07-02T18:53:49.715722Z",
        "url": "https://files.pythonhosted.org/packages/31/c3/e00b7110c240fdbff91b4ce805584a42ccddb8fa05cf00e93ff5e9534a51/report_guided_annotation-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d3ad2038850272221313931229ca482fc000c5452aa30c0ffcf4a8f34802be6",
          "md5": "953b5a1daa9d7ffa00e6cf53ff77cab3",
          "sha256": "f8537807f45edb23d01a101bfb18399ee501bc72e1d8ca6207652d28593ed720"
        },
        "downloads": -1,
        "filename": "report_guided_annotation-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "953b5a1daa9d7ffa00e6cf53ff77cab3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19603,
        "upload_time": "2022-07-02T18:53:51",
        "upload_time_iso_8601": "2022-07-02T18:53:51.898751Z",
        "url": "https://files.pythonhosted.org/packages/5d/3a/d2038850272221313931229ca482fc000c5452aa30c0ffcf4a8f34802be6/report_guided_annotation-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "691a55ef9d5edb4982ea4f4cf67d3c7cb963190f8f1622f66c6038b9704b8ed8",
          "md5": "75475d8a4be6a49a08a290d8c8e33001",
          "sha256": "20f29aad607c7520e591dc551466855721a94b24f6825b752ed167161fcfc217"
        },
        "downloads": -1,
        "filename": "report_guided_annotation-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "75475d8a4be6a49a08a290d8c8e33001",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20066,
        "upload_time": "2022-08-16T09:14:00",
        "upload_time_iso_8601": "2022-08-16T09:14:00.947110Z",
        "url": "https://files.pythonhosted.org/packages/69/1a/55ef9d5edb4982ea4f4cf67d3c7cb963190f8f1622f66c6038b9704b8ed8/report_guided_annotation-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85d45ca90e097657f5ea823d2c214a1acf76442c8d0274afcab0343825262ce4",
          "md5": "cbb35b0602a3bf6eb7fd92486d3f36ce",
          "sha256": "4d75bfeec3279671821d109029ffac563d5458e41bb2d976bf98aa9b0a44326e"
        },
        "downloads": -1,
        "filename": "report_guided_annotation-0.2.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cbb35b0602a3bf6eb7fd92486d3f36ce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19591,
        "upload_time": "2022-08-16T09:16:26",
        "upload_time_iso_8601": "2022-08-16T09:16:26.283631Z",
        "url": "https://files.pythonhosted.org/packages/85/d4/5ca90e097657f5ea823d2c214a1acf76442c8d0274afcab0343825262ce4/report_guided_annotation-0.2.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26aa35889212eafe96202760cdc2373c52f1845d8f68dfb442853c788f85f006",
          "md5": "1b2eaa6f0acf03bd6f0512f0c1f31c0f",
          "sha256": "812fde68c27ab47df351c6f89584a976c5424e66f10d2716afb660691dc7a664"
        },
        "downloads": -1,
        "filename": "report_guided_annotation-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "1b2eaa6f0acf03bd6f0512f0c1f31c0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20067,
        "upload_time": "2022-08-16T09:16:28",
        "upload_time_iso_8601": "2022-08-16T09:16:28.141410Z",
        "url": "https://files.pythonhosted.org/packages/26/aa/35889212eafe96202760cdc2373c52f1845d8f68dfb442853c788f85f006/report_guided_annotation-0.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fcdfed38a1c95bd3ca81617611ebbf488c44436824edd221ad373abac03281b",
          "md5": "bb7be52f1b0ce2363cbf26cb510ace9e",
          "sha256": "2a0b84a6b30b84815be85fbafcf4624011d03025d3168965a73de518ccf3e5bc"
        },
        "downloads": -1,
        "filename": "report_guided_annotation-0.2.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bb7be52f1b0ce2363cbf26cb510ace9e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19626,
        "upload_time": "2022-11-15T15:59:11",
        "upload_time_iso_8601": "2022-11-15T15:59:11.834211Z",
        "url": "https://files.pythonhosted.org/packages/5f/cd/fed38a1c95bd3ca81617611ebbf488c44436824edd221ad373abac03281b/report_guided_annotation-0.2.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "513a30b84d69472a97bfc10c0d044159d6409f6075e888b2978b2b98b58fe703",
          "md5": "d811023cd835546dc22051e694e77a07",
          "sha256": "23aba1692e7d39c36bba38ac54caf83d746a52fbc2a2b3e31b753abe26723215"
        },
        "downloads": -1,
        "filename": "report_guided_annotation-0.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "d811023cd835546dc22051e694e77a07",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20205,
        "upload_time": "2022-11-15T15:59:14",
        "upload_time_iso_8601": "2022-11-15T15:59:14.486673Z",
        "url": "https://files.pythonhosted.org/packages/51/3a/30b84d69472a97bfc10c0d044159d6409f6075e888b2978b2b98b58fe703/report_guided_annotation-0.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5fcdfed38a1c95bd3ca81617611ebbf488c44436824edd221ad373abac03281b",
        "md5": "bb7be52f1b0ce2363cbf26cb510ace9e",
        "sha256": "2a0b84a6b30b84815be85fbafcf4624011d03025d3168965a73de518ccf3e5bc"
      },
      "downloads": -1,
      "filename": "report_guided_annotation-0.2.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bb7be52f1b0ce2363cbf26cb510ace9e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 19626,
      "upload_time": "2022-11-15T15:59:11",
      "upload_time_iso_8601": "2022-11-15T15:59:11.834211Z",
      "url": "https://files.pythonhosted.org/packages/5f/cd/fed38a1c95bd3ca81617611ebbf488c44436824edd221ad373abac03281b/report_guided_annotation-0.2.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "513a30b84d69472a97bfc10c0d044159d6409f6075e888b2978b2b98b58fe703",
        "md5": "d811023cd835546dc22051e694e77a07",
        "sha256": "23aba1692e7d39c36bba38ac54caf83d746a52fbc2a2b3e31b753abe26723215"
      },
      "downloads": -1,
      "filename": "report_guided_annotation-0.2.7.tar.gz",
      "has_sig": false,
      "md5_digest": "d811023cd835546dc22051e694e77a07",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 20205,
      "upload_time": "2022-11-15T15:59:14",
      "upload_time_iso_8601": "2022-11-15T15:59:14.486673Z",
      "url": "https://files.pythonhosted.org/packages/51/3a/30b84d69472a97bfc10c0d044159d6409f6075e888b2978b2b98b58fe703/report_guided_annotation-0.2.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}