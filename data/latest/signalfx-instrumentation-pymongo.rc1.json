{
  "info": {
    "author": "SignalFx, Inc.",
    "author_email": "info@signalfx.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "###################\nPyMongo OpenTracing\n###################\n\nThis package enables tracing `Mongo`_ commands in a `PyMongo`_ ``MongoClient`` via `The OpenTracing Project`_. \nOnce a production system contends with real concurrency or splits into many services, crucial (and\nformerly easy) tasks become difficult: user-facing latency optimization, root-cause analysis of backend\nerrors, communication about distinct pieces of a now-distributed system, etc. Distributed tracing\nfollows a request on its journey from inception to completion from mobile/browser all the way to the\nmicroservices. \n\nAs core services and libraries adopt OpenTracing, the application builder is no longer burdened with\nthe task of adding basic tracing instrumentation to their own code. In this way, developers can build\ntheir applications with the tools they prefer and benefit from built-in tracing instrumentation.\nOpenTracing implementations exist for major distributed tracing systems and can be bound or swapped\nwith a one-line configuration change.\n\nIf you want to learn more about the underlying Python API, visit the Python `source code`_.\n\n.. _Mongo: https://www.mongodb.com/\n.. _PyMongo: http://api.mongodb.com/python/current/\n.. _The OpenTracing Project: http://opentracing.io/\n.. _source code: https://github.com/signalfx/python-pymongo/\n\nInstallation\n============\n\nRun the following command:\n\n.. code-block:: \n\n    $ pip install signalfx-instrumentation-pymongo\n\nUsage\n=====\n\nThis PyMongo monitor allows the tracing of database queries and commands using the OpenTracing API.\nAll that it requires is for a ``CommandTracing`` listener instance to be initialized using an instance\nof an OpenTracing tracer and registered via the ``pymongo.monitoring`` module.\n\nInitialize\n----------\n\n``CommandTracing`` takes the ``Tracer`` instance that is supported by OpenTracing and an optional\ndictionary of desired tags for each created span. To create a ``CommandTracing`` object, you can\neither pass in a tracer object directly or default to the ``opentracing.tracer`` global tracer that's\nset elsewhere in your application:\n\n.. code-block:: python\n\n    from pymongo_opentracing import CommandTracing\n    from pymongo import monitoring\n\n    opentracing_tracer = ## some OpenTracing tracer implementation\n    # All future clients will have CommandTracing registered for their events\n    monitoring.register(CommandTracing(opentracing_tracer,\n                                       span_tags={'MyCustomTag': 'HelpfulVal'}))\n\nor\n\n.. code-block:: python\n\n    from pymongo_opentracing import CommandTracing\n    import opentracing\n    import pymongo\n\n    opentracing.tracer = ## some OpenTracing tracer implementation\n    # Only this client will have CommandTracing trace their events\n    client = pymongo.MongoClient(event_listeners=[CommandTracing()])\n\nFurther Information\n===================\n\nIf you're interested in learning more about the OpenTracing standard, please visit\n`opentracing.io`_ or `join the mailing list`_. If you would like to implement OpenTracing\nin your project and need help, feel free to send us a note at `community@opentracing.io`_.\n\n.. _opentracing.io: http://opentracing.io/\n.. _join the mailing list: http://opentracing.us13.list-manage.com/subscribe?u=180afe03860541dae59e84153&id=19117aa6cd\n.. _community@opentracing.io: community@opentracing.io",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "http://github.com/signalfx/python-pymongo/tarball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/signalfx/python-pymongo",
    "keywords": "",
    "license": "Apache Software License v2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "signalfx-instrumentation-pymongo",
    "package_url": "https://pypi.org/project/signalfx-instrumentation-pymongo/",
    "platform": "any",
    "project_url": "https://pypi.org/project/signalfx-instrumentation-pymongo/",
    "project_urls": {
      "Download": "http://github.com/signalfx/python-pymongo/tarball/master",
      "Homepage": "http://github.com/signalfx/python-pymongo"
    },
    "release_url": "https://pypi.org/project/signalfx-instrumentation-pymongo/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "OpenTracing support for PyMongo",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9226283,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c61d4837d94372f1acfceed9549cf61eb23f8f1789d296eeba01b74c22847968",
          "md5": "753ed1bd22953e3269a16091ae274c26",
          "sha256": "4e6379d7040558c812ca1783050090e315f3bedf50982f2793954e7a8d718faf"
        },
        "downloads": -1,
        "filename": "signalfx-instrumentation-pymongo-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "753ed1bd22953e3269a16091ae274c26",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4124,
        "upload_time": "2021-01-25T18:39:25",
        "upload_time_iso_8601": "2021-01-25T18:39:25.699437Z",
        "url": "https://files.pythonhosted.org/packages/c6/1d/4837d94372f1acfceed9549cf61eb23f8f1789d296eeba01b74c22847968/signalfx-instrumentation-pymongo-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c61d4837d94372f1acfceed9549cf61eb23f8f1789d296eeba01b74c22847968",
        "md5": "753ed1bd22953e3269a16091ae274c26",
        "sha256": "4e6379d7040558c812ca1783050090e315f3bedf50982f2793954e7a8d718faf"
      },
      "downloads": -1,
      "filename": "signalfx-instrumentation-pymongo-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "753ed1bd22953e3269a16091ae274c26",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4124,
      "upload_time": "2021-01-25T18:39:25",
      "upload_time_iso_8601": "2021-01-25T18:39:25.699437Z",
      "url": "https://files.pythonhosted.org/packages/c6/1d/4837d94372f1acfceed9549cf61eb23f8f1789d296eeba01b74c22847968/signalfx-instrumentation-pymongo-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}