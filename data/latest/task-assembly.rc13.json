{
  "info": {
    "author": "Dave Schultz",
    "author_email": "dave@daveschultzconsulting.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Task Assembly Client\nTools for working with the Task Assembly service for managing crowdwork projects.\n\n## Initial Setup\nStart by installing the task-assembly client by running the following command.\n\n```shell\npip install task-assembly\n```\n\nNote that the task-assembly client uses some AWS resources. If you haven't done so already, you will need to install\nthe AWS CLI and configure it with your credentials (`aws configure`) before using the client. \n\nNext, run the following command to configure your Task Assembly API key:\n\n```shell\ntask-assembly configure --key <api-key>\n```\n\nAt any point, you can run the following command to check that your account has been correctly configured:\n\n```shell\ntask-assembly configure --validate\n```\n\n## Example project\nIf you are new to Task Assembly, you can start with a small sample project by running `task-assembly example` to \ncopy a set of files to your working directory. These can be used with the instructions below to set up your first\nproject and help you build familiarity with how Task Assembly works.\n\n## Project setup\n\nFirst, we'll need to create a task-type for this project. This is just a placeholder and will be removed in\nfuture updates to Task Assembly. Simply run the following command and capture the id that is generated.\nWhen building the example application, use `NumbersExample` as the type name.\n\n```shell\ntask-assembly create_task_type <type_name>\n```\n\nNow, we'll want to create a new Task Definition for our task using the Task Type created in the previous step.\nWhen building the example application, use `Numbers` as the definition name.\n\n```shell\ntask-assembly create_task_definition <definition_name> <task_type_id>\n```\n\nThis will generate a new definition for our project and write a definition.json file that we will use to capture\nour task attributes.\n\n## Build the Task Definition\nNow we can update the `definition.json` file with the appropriate attributes for our task. We've included\nthe core attributes for the example task below:\n\n```yaml\nDefinitionId: <your_definition_id>\nTaskType: <your_task_type_id>\nTitle: Convert number to text\nDescription: Write out a number as text\nRewardCents: 10\nLifetime: 3600\nAssignmentDuration: 300\nDefaultAssignments: 2\nMaxAssignments: 5\nAutoApprovalDelay: 0\n```\n\nYou can now run the following command to update the definition in Task Assembly:\n\n```shell\ntask-assembly update_task_definition\n```\n\nThe task interface for our project is in the `template.html` file, and you will note that it uses a very similar \ntemplating language as Amazon SageMaker Ground Truth and the Amazon MTurk website. In most cases you can simply\ncopy/paste existing task templates from those tools and update the variable names within the `{{ name }}` values.\nTo apply this new task template to our definition, we can simply add a reference to it in our `definition.json` file:\n\n```yaml\nTemplateFile: template.html\n```\nThen run the `update_task_defintion` command again.\n```shell\ntask-assembly update_task_definition\n```\n\nThe `update_task_definition` command can be used to submit any future changes you make to your definition.json.\n\n## Create a task in the sandbox\nNow that we've completed the setup for our task, we should start by creating a test task in the *Sandbox* environment.\nThe Sandbox is a mirror of the Production environment but no money changes hands and work isn't generally completed\nunless you do it yourself. This is a great way to validate that your task is set up correctly before putting it in the\nhands of *real* Workers.\n\nNote: The MTurk Sandbox is distinct from the Production environment, you will want to create a new account at\nhttps://requestersandbox.mturk.com with the same email address as your Production account and also link it to the same\nAWS account.\n\nTo create a single MTurk task in the Sandbox, you can use the following command. The `--sandbox` flag lets Task\nAssembly know to create the task in the appropriate environment and the `--assignments 1` flag indicates that we\nonly need to ask one Worker to provide an answer to the task (just you). Finally, `number=4` provides the input\ndata to our task interface which refers to `{{ number }}` from the html template.\n\n```shell\ntask-assembly create_task --sandbox --assignments 1 number=4\n```\n\nTake note of the task ID that is returned. You'll need that to retrieve the results.\n\nThis will create a new task for you in the Worker Sandbox, which you can view and work on by visiting\nhttps://workersandbox.mturk.com. You'll likely need to create an account there, feel free to use your personal \nAmazon account or any other account you wish. Once you're logged in, you can search for your username or\nthe title of the task. Then you can accept and complete the task.\n\nAfter you've completed your task, give MTurk and Task Assembly a few moments to process the result. Then run \nthe following to get the output.\n\n```shell\ntask-assembly get_task <task_id>\n```\n\n## Create a *real* task\nNow we can repeat the same process to create a task in the Production environment by simply removing the\n`--sandbox` and `--assignments` flags.\n\n```shell\ntask-assembly create_task number=4\n```\n\nThe same `get_task` command can be used to retrieve results of the created task.\n\n## Result Processing\nYou may have noticed that the task result above includes `Result` and `Responses` values that looks a bit like this:\n\n```json\n{\n  \"Result\": {\n    \"default\": [\n      {\n        \"WorkerId\": \"A12NBGVI9QN3DQ\",\n        \"Result\": {\n          \"default\": {\n            \"numberAsText\": \"Four\"\n          }\n        },\n        \"AssignmentId\": \"3ERMJ6L4DYRPC5L5VMTQ0TYQKQG7M2\"\n      },\n      {\n        \"WorkerId\": \"ACKG8OU1KHKO2\",\n        \"Result\": {\n          \"default\": {\n            \"numberAsText\": \"four\"\n          }\n        },\n        \"AssignmentId\": \"3FTYUGLFSUK7L719U0FQJJX0K6T5D3\"\n      }\n    ]\n  },\n  \"Responses\": [\n    {\n      \"WorkerId\": \"A12NBGVI9QN3DQ\",\n      \"Result\": {\n        \"default\": {\n          \"numberAsText\": \"Four\"\n        }\n      },\n      \"AssignmentId\": \"3ERMJ6L4DYRPC5L5VMTQ0TYQKQG7M2\"\n    },\n    {\n      \"WorkerId\": \"ACKG8OU1KHKO2\",\n      \"Result\": {\n        \"default\": {\n          \"numberAsText\": \"four\"\n        }\n      },\n      \"AssignmentId\": \"3FTYUGLFSUK7L719U0FQJJX0K6T5D3\"\n    }\n  ]\n}\n```\n\nThis output is the `default` structure that Task Assembly uses and ensures that all the relevant data is included.\nOf course, simplifying this output is preferred and will greatly simplify downstream data processing. To do this, we'll\nuse `handlers` that will perform data processing on each response and completed task. In most cases, AWS Lambda \nfunctions are the best option for these steps and Task Assembly helps this process by generating the Lambdas on your \nbehalf if you wish. This tutorial will use Task Assembly to manage the Lambdas, but you're welcome to create and deploy\nthem normally using your preferred approach (Console, Cloud Formation, CDK, etc).\n\nIf building the example application you'll find the handler code for this tutorial in the `handlers.py` file. The first \nfunction `process_response` simply retrieves the `numberAsText` form field and returns it. We can pull it into our \nproject adding the following to our `definition.json`:\n\n```yaml\nHandlerFile: handlers.py\nSubmissionHandlers:\n- Name:  value\n  FunctionName:  process_response\n```\n\nThis tells Task Assembly to run the `process_response` on the form outputs and return it in an attribute name `value`.\nTo test how this impacts task results, run the following to update the task definition and then *redrive* the task\nresults to reprocess the results:\n\n```shell\ntask-assembly update_task_definition\ntask-assembly redrive_task <task-id>\n```\n\nNow the `Responses` list should be the following, simpler, representation of the Worker responses.\n\n```json\n[\n  {\n    \"WorkerId\": \"A12NBGVI9QN3DQ\",\n    \"Result\": {\n      \"value\": \"Four\"\n    },\n    \"AssignmentId\": \"3ERMJ6L4DYRPC5L5VMTQ0TYQKQG7M2\"\n  },\n  {\n    \"WorkerId\": \"ACKG8OU1KHKO2\",\n    \"Result\": {\n      \"value\": \"four\"\n    },\n    \"AssignmentId\": \"3FTYUGLFSUK7L719U0FQJJX0K6T5D3\"\n  }\n]\n```\n\nNext, we want to consolidate these two responses into a single value as a result for this task. To do that, we'll \nadd a *consolidation* handler. The `consolidate_result` function in the example handles this step by simply looking \nfor agreement between Workers. If two Workers agree, then we'll use that result. If not, we'll return `{'extend': True}` \nwhich will prompt Task Assembly to ask an additional Worker to provide a response, up to the `MaxAssignments`. To add\nthis function to our task definition, we simply include the following in our `definition.json`.\n\n```yaml\nHandlerFile: handlers.py\nSubmissionHandlers:\n- Name:  value\n  FunctionName:  process_response\nConsolidationHandlers: \n- Name: value\n  FunctionName: consolidate_result\n```\n\nRunning `update_task_definition` and `redrive_task` will invoke this new consolidation logic, and we will now have a\nsingle value result for our task.\n\n```json\n{\n  \"value\": \"four\"\n}\n```\n\n## Create a batch\nNow that our task is set up, we can run it on a larger set of data. If using the example, the `batch.csv` file contains \na small batch of data. It is simply a single column CSV with column header `number` that corresponds to our task input, \nbut multiple values can be used for more complex projects. To submit the batch, the following command can be used. The \nfirst parameter is the name we want to give the batch `numbers1`, followed by the source data file for the batch, \n`batch.csv`. Finally, we provide an S3 location we will use to store the input and output files created by Task Assembly.\n\n```shell\ntask-assembly submit_batch numbers1 batch.csv s3://taskassembly-test/batches\n```\n\nThe result is a batch_id we can use to monitor progress and retrieve the results. To get batch status, the following\ncan be used:\n\n```shell\ntask-assembly get_batch_status <batch_id>\n```\n\nThis command can be used to monitor your batch progress. When the batch is complete, running the following\nto retrieve the results to a CSV file.\n\n```shell\ntask-assembly get_batch_results <batch_id> output.csv\n```\n\n## Improving Quality\nThe last step is to establish some test tasks that we can use to ensure we're getting Workers who will \ndo a good job on our task. For the example we've created a data file of known or *gold* answers in `gold.json`.\nWhen Workers first start working on this task they will be prompted to answer at least two of these before\nthey can work on our *real* data.\n\nTo evaluate accuracy, we'll add a new handler `score_response` that scores each Worker's response. For\nthis we'll use a very simple comparison and give them a score of 100 if they provide an exact match,\n80 if they don't match on the inclusion of \"and\" or \"-\" in their answer (i.e. \"twenty-four\" or \n\"one hundred and six\"), and 0 if they still don't match.\n\nThe following statements can be added to our `definition.json` file to enable scoring of new workers.\nAs you can see, Workers will need to complete at least two tests with an average score of 80 before \nthey can begin working on the *real* tasks. Note that because it generally takes at least 10-15 seconds \nbefore scoring is complete so Workers will often be asked to do a third test if they quickly accept another\ntask after completing their second test.\n\n```yaml\nScoringHandler: \n  FunctionName: score_response\nGoldAnswersFile: gold.json\nTestPolicy:\n  MinTests: 2\n  MinScore: 80\n```\n\nWe can now create a new batch to begin using the new scoring that we've created. However, because scoring\ndoesn't work well with small batches, expand the size of your `batch.csv` file to at least 20 numbers\nbefore submitting a new batch to Workers. This limitation is a result of how MTurk handles HITs with\nfewer than 10 Assignments and will be addressed in a future release of Task Assembly.\nEven with a larger set items in this test batch, you may not get responses for all of your items, however\nsubsequent batches should have higher yield.\n\nOnce you've submitted a new batch, you'll note that `get_batch_results` will now show test responses in\nthe results. Because this is the first time we've run a batch with scoring enabled, all Workers will need\nto complete 2-3 test tasks. This means that we'll see a larger number of test responses and fewer *Task*\nresponses in our counts. In future batches the portion of responses associated with tests will steadily\ndecline.\n\n```\n - Response Counts:\n     Task: 36\n     Test: 109\n     Total: 145\n```\n\nTo see how Workers did on your tests and their relative contribution to the final output, run\n`task_assembly list_workers workers.csv` to generate a report on how many responses\neach Worker has provided for this task definition and their scores on the test tasks.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "task-assembly",
    "package_url": "https://pypi.org/project/task-assembly/",
    "platform": null,
    "project_url": "https://pypi.org/project/task-assembly/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/task-assembly/0.1.13/",
    "requires_dist": [
      "api-client (>=1.3.1,<2.0.0)",
      "larry (>=0.2.12,<0.3.0)",
      "boto3 (>=1.26.0,<2.0.0)",
      "tabulate (>=0.9.0,<0.10.0)",
      "toml (>=0.10.2,<0.11.0)",
      "pyyaml (>=6.0,<7.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "SDK and CLI for using the Task Assembly crowdwork service",
    "version": "0.1.13",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16859550,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b125736dcc964fed7fdd45838441674ef4522bced979fde51dc24bc2d90e83ea",
          "md5": "cc460264f097bf50f3c2c2bc68e91b4a",
          "sha256": "ebd6417b7861f29cc90bfc8f572bb1eb54e1fcd443e34304b8579f64e0ff14c4"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc460264f097bf50f3c2c2bc68e91b4a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 8344,
        "upload_time": "2022-10-31T16:27:59",
        "upload_time_iso_8601": "2022-10-31T16:27:59.322028Z",
        "url": "https://files.pythonhosted.org/packages/b1/25/736dcc964fed7fdd45838441674ef4522bced979fde51dc24bc2d90e83ea/task_assembly-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80deb95d2e9be78fae95cfeb73790be20c234647f443248102933b18f5581555",
          "md5": "fbdceeeff9efef8a0692408ebca09d25",
          "sha256": "c6ff7d680dca41c1238eb2d70e451dc50552c38861cd587d6ddec18e0aa7e966"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fbdceeeff9efef8a0692408ebca09d25",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 8628,
        "upload_time": "2022-10-31T19:52:09",
        "upload_time_iso_8601": "2022-10-31T19:52:09.675510Z",
        "url": "https://files.pythonhosted.org/packages/80/de/b95d2e9be78fae95cfeb73790be20c234647f443248102933b18f5581555/task_assembly-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d24906cbf8fb546dda585fd3a18ecd5e9c6373273a0d1aa9abf3d990216ed027",
          "md5": "739001ece2d012c74932e86fa2b0d3a3",
          "sha256": "cbc4cf4f4180e08db5b7686682312e832fef436d2437bc62edfbf403732be27d"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "739001ece2d012c74932e86fa2b0d3a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 18279,
        "upload_time": "2023-02-13T02:25:23",
        "upload_time_iso_8601": "2023-02-13T02:25:23.368611Z",
        "url": "https://files.pythonhosted.org/packages/d2/49/06cbf8fb546dda585fd3a18ecd5e9c6373273a0d1aa9abf3d990216ed027/task_assembly-0.1.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f25b2a78473c9c3eff548e43a94a908d8005ebec295ad9396ffb45786c971b90",
          "md5": "4e089f0e48b61b1244f9a1dfe2861ecb",
          "sha256": "d1c82e9c440fcd0cec135d3396a7f96a97f4b2cae42be8037bdc348c1b2e3554"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "4e089f0e48b61b1244f9a1dfe2861ecb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 21360,
        "upload_time": "2023-02-13T02:25:24",
        "upload_time_iso_8601": "2023-02-13T02:25:24.641362Z",
        "url": "https://files.pythonhosted.org/packages/f2/5b/2a78473c9c3eff548e43a94a908d8005ebec295ad9396ffb45786c971b90/task_assembly-0.1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e38f35d5dcebb3dbee942ff7e90cd5aa80d603a4b214e262a872f954768240de",
          "md5": "fe496f28759bf2b8afce0ced2edfe381",
          "sha256": "68394f4f5823bd72e3e39a9f6076d20edb926467a6e32281b3031f9859499422"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe496f28759bf2b8afce0ced2edfe381",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 18469,
        "upload_time": "2023-02-14T17:52:28",
        "upload_time_iso_8601": "2023-02-14T17:52:28.809345Z",
        "url": "https://files.pythonhosted.org/packages/e3/8f/35d5dcebb3dbee942ff7e90cd5aa80d603a4b214e262a872f954768240de/task_assembly-0.1.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f3e6b771d3d39f7f5fbd5fe17974266cce85df1317dd9520740264a31f93bdc",
          "md5": "1dac9dd79e93acc6435232a05651d1bb",
          "sha256": "c599d35e3ec4c83675f93d9925369e517e30198877afccb0103964432ea1eaa1"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.11.tar.gz",
        "has_sig": false,
        "md5_digest": "1dac9dd79e93acc6435232a05651d1bb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 21553,
        "upload_time": "2023-02-14T17:52:30",
        "upload_time_iso_8601": "2023-02-14T17:52:30.441473Z",
        "url": "https://files.pythonhosted.org/packages/7f/3e/6b771d3d39f7f5fbd5fe17974266cce85df1317dd9520740264a31f93bdc/task_assembly-0.1.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3220df68cbee5608dd88c4f12d6f2b073823ee1f8b8d60e5ccd73f0e623c6d4",
          "md5": "c24f4bfb1f4895ecd4a23ad102332271",
          "sha256": "43499baaf50a33f5f5689b2a2ffb2b49141d19ecbb4e282335c95743902ee416"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c24f4bfb1f4895ecd4a23ad102332271",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 18431,
        "upload_time": "2023-02-14T18:05:03",
        "upload_time_iso_8601": "2023-02-14T18:05:03.490211Z",
        "url": "https://files.pythonhosted.org/packages/e3/22/0df68cbee5608dd88c4f12d6f2b073823ee1f8b8d60e5ccd73f0e623c6d4/task_assembly-0.1.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d59ab209d30481b76c096f40f33730f7664fb6e0ac642630a8303421543aa52",
          "md5": "7eb2e0e440bcb5caa7d87744580c0d41",
          "sha256": "dad8e1f6bce0a5e854185b9e5702138dac44e35dbf2dc2697abcdeb5eed4e702"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.12.tar.gz",
        "has_sig": false,
        "md5_digest": "7eb2e0e440bcb5caa7d87744580c0d41",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 21513,
        "upload_time": "2023-02-14T18:05:05",
        "upload_time_iso_8601": "2023-02-14T18:05:05.082751Z",
        "url": "https://files.pythonhosted.org/packages/2d/59/ab209d30481b76c096f40f33730f7664fb6e0ac642630a8303421543aa52/task_assembly-0.1.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e399e74300e8387b5014d0d81097b3b0972b2ed8e51aba7ed6dfa802f052592d",
          "md5": "6eac089f49d25e2a08c5dccaf32c289f",
          "sha256": "0d0108a9cba86ce119d8a07b8f80f129ee60875155f4bb08316b96af5ef3593a"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6eac089f49d25e2a08c5dccaf32c289f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 18440,
        "upload_time": "2023-02-14T18:53:55",
        "upload_time_iso_8601": "2023-02-14T18:53:55.959002Z",
        "url": "https://files.pythonhosted.org/packages/e3/99/e74300e8387b5014d0d81097b3b0972b2ed8e51aba7ed6dfa802f052592d/task_assembly-0.1.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48c757f4af17f7644de3331cdb013d6f0dcb365b495c74b9b59773d89f7a8713",
          "md5": "5f913341acbe72b831275747926fd7c9",
          "sha256": "cc3c39ab11c7e8defd7e02b8c2d6a91f13fc0a4eeb02d2ae779a294b2830fc28"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.13.tar.gz",
        "has_sig": false,
        "md5_digest": "5f913341acbe72b831275747926fd7c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 21529,
        "upload_time": "2023-02-14T18:53:57",
        "upload_time_iso_8601": "2023-02-14T18:53:57.529124Z",
        "url": "https://files.pythonhosted.org/packages/48/c7/57f4af17f7644de3331cdb013d6f0dcb365b495c74b9b59773d89f7a8713/task_assembly-0.1.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f585728e5c2218fae79fd6e4d6e8936433040b75d480b86dfa834be457fd76f",
          "md5": "e5c14d4ad08e30314848a7fa4979db70",
          "sha256": "ee3bdf41acacb9e379457c2e76d62497c0a4c1d7b7211aed0b540dd8b58e74a0"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5c14d4ad08e30314848a7fa4979db70",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 8710,
        "upload_time": "2022-11-24T17:42:58",
        "upload_time_iso_8601": "2022-11-24T17:42:58.868056Z",
        "url": "https://files.pythonhosted.org/packages/5f/58/5728e5c2218fae79fd6e4d6e8936433040b75d480b86dfa834be457fd76f/task_assembly-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65d8391c487389f115eac9bf1935cabb9ee0f3b435fdfa1f638fa51718462656",
          "md5": "5f5425f9d7079667c84715307a61af6f",
          "sha256": "9289815aec7bed61479c9cf9ccf752a602915f94546fecd4d07f0a8fa27f844f"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f5425f9d7079667c84715307a61af6f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 8702,
        "upload_time": "2022-11-25T20:51:35",
        "upload_time_iso_8601": "2022-11-25T20:51:35.843011Z",
        "url": "https://files.pythonhosted.org/packages/65/d8/391c487389f115eac9bf1935cabb9ee0f3b435fdfa1f638fa51718462656/task_assembly-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "baf1e5180ad70f95ed72b953a1b26a8241db6449d12bb84d12b7ce61f60a55b1",
          "md5": "d907503aec51b06ad5284f5101f12f49",
          "sha256": "7f7a4a36b751f8ff281a548cf2919b823b999dcebd1edeb2d318bb66d91af187"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d907503aec51b06ad5284f5101f12f49",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 8705,
        "upload_time": "2022-11-26T18:23:20",
        "upload_time_iso_8601": "2022-11-26T18:23:20.949784Z",
        "url": "https://files.pythonhosted.org/packages/ba/f1/e5180ad70f95ed72b953a1b26a8241db6449d12bb84d12b7ce61f60a55b1/task_assembly-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e5c423e47386820d8d1d59b53f5d49f3d1541dd56261c81b7462467b77176f3",
          "md5": "8c1991f91f10989b025ebe1e59d9206c",
          "sha256": "438642313f1a7bad5c2eb5f99fa75d950496113cc8202553ce01ea4e56342600"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c1991f91f10989b025ebe1e59d9206c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 9307,
        "upload_time": "2023-01-06T19:16:30",
        "upload_time_iso_8601": "2023-01-06T19:16:30.943796Z",
        "url": "https://files.pythonhosted.org/packages/9e/5c/423e47386820d8d1d59b53f5d49f3d1541dd56261c81b7462467b77176f3/task_assembly-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0991724c4eeac6a0de18e23d6997ac9863a11775e5f92c496df75dce2258016a",
          "md5": "2ed1b56b294f0c45802d3ab8c980ea80",
          "sha256": "3a752dfcf9450f8b3e1e077a1d981ab63a2a6523f91604cf627b9e82bffe0adb"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2ed1b56b294f0c45802d3ab8c980ea80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 8364,
        "upload_time": "2023-01-06T19:16:32",
        "upload_time_iso_8601": "2023-01-06T19:16:32.235473Z",
        "url": "https://files.pythonhosted.org/packages/09/91/724c4eeac6a0de18e23d6997ac9863a11775e5f92c496df75dce2258016a/task_assembly-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df4b08745d819f49d12d519c266a562cd68490a9938b6fd0c12a8bb4e2842f47",
          "md5": "a8fed4b15c33a9005a0892ab35f753e3",
          "sha256": "1ad0cc9709ca29b0e7b186140cd267ec8c5238860a65b9b1c1e98d8499de108f"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a8fed4b15c33a9005a0892ab35f753e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 10567,
        "upload_time": "2023-01-09T04:23:57",
        "upload_time_iso_8601": "2023-01-09T04:23:57.695610Z",
        "url": "https://files.pythonhosted.org/packages/df/4b/08745d819f49d12d519c266a562cd68490a9938b6fd0c12a8bb4e2842f47/task_assembly-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "520fcebff8535f3710dab5ab9553aa608ba766832f501a8dcd544fc4b18ddfe2",
          "md5": "4d280d0dfa6956f4798d0e11d7d9636d",
          "sha256": "89e1c2d9c5b747ca6e499908f49f9fc41fbc3d4c7431cfe45102b54606a797dd"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "4d280d0dfa6956f4798d0e11d7d9636d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 8922,
        "upload_time": "2023-01-09T04:23:58",
        "upload_time_iso_8601": "2023-01-09T04:23:58.743898Z",
        "url": "https://files.pythonhosted.org/packages/52/0f/cebff8535f3710dab5ab9553aa608ba766832f501a8dcd544fc4b18ddfe2/task_assembly-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b89115043a3998adb9cc01f43bac68f8fa6ceabb878312101f50fec8c0c1a89f",
          "md5": "ccfbeb854c43c6904ea14728232015ce",
          "sha256": "03fd0782b310142cf27a42e33794bb41477e5efee2a043a7a9476b1884218627"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ccfbeb854c43c6904ea14728232015ce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 11419,
        "upload_time": "2023-01-10T20:19:39",
        "upload_time_iso_8601": "2023-01-10T20:19:39.451755Z",
        "url": "https://files.pythonhosted.org/packages/b8/91/15043a3998adb9cc01f43bac68f8fa6ceabb878312101f50fec8c0c1a89f/task_assembly-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af427565b406a345a3c9c07101b9655343ebd0786ef67355f714bba993735290",
          "md5": "5151663e31bce6c907ec67c241caf2f6",
          "sha256": "50a517026263515ff8416876f0853d23d2769bee031119bbf8d3df8e41455ae4"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "5151663e31bce6c907ec67c241caf2f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 9745,
        "upload_time": "2023-01-10T20:19:40",
        "upload_time_iso_8601": "2023-01-10T20:19:40.779928Z",
        "url": "https://files.pythonhosted.org/packages/af/42/7565b406a345a3c9c07101b9655343ebd0786ef67355f714bba993735290/task_assembly-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecaa1a70b8f8a87492f7cd973dc01d20aa9f4b8dc4466c44f8128d40fe172331",
          "md5": "adfcc904e12dd7d5ed72640e86e8fd75",
          "sha256": "290f707f329e95bee0530f7be23534269a84d1c2fe1018f901f217dc426c337f"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "adfcc904e12dd7d5ed72640e86e8fd75",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 11801,
        "upload_time": "2023-02-12T05:36:07",
        "upload_time_iso_8601": "2023-02-12T05:36:07.971235Z",
        "url": "https://files.pythonhosted.org/packages/ec/aa/1a70b8f8a87492f7cd973dc01d20aa9f4b8dc4466c44f8128d40fe172331/task_assembly-0.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfe7200be2142dabe22178b9153c728c71c269f6db4f429adf4402e10ead5428",
          "md5": "c90a498343eda5e7c9c3fab9b2c05047",
          "sha256": "4290774f26f2265d38a611a6c18156299ff140ab8587e1ecf4a2b676b18b3777"
        },
        "downloads": -1,
        "filename": "task_assembly-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "c90a498343eda5e7c9c3fab9b2c05047",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 10240,
        "upload_time": "2023-02-12T05:36:09",
        "upload_time_iso_8601": "2023-02-12T05:36:09.503288Z",
        "url": "https://files.pythonhosted.org/packages/df/e7/200be2142dabe22178b9153c728c71c269f6db4f429adf4402e10ead5428/task_assembly-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e399e74300e8387b5014d0d81097b3b0972b2ed8e51aba7ed6dfa802f052592d",
        "md5": "6eac089f49d25e2a08c5dccaf32c289f",
        "sha256": "0d0108a9cba86ce119d8a07b8f80f129ee60875155f4bb08316b96af5ef3593a"
      },
      "downloads": -1,
      "filename": "task_assembly-0.1.13-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6eac089f49d25e2a08c5dccaf32c289f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 18440,
      "upload_time": "2023-02-14T18:53:55",
      "upload_time_iso_8601": "2023-02-14T18:53:55.959002Z",
      "url": "https://files.pythonhosted.org/packages/e3/99/e74300e8387b5014d0d81097b3b0972b2ed8e51aba7ed6dfa802f052592d/task_assembly-0.1.13-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "48c757f4af17f7644de3331cdb013d6f0dcb365b495c74b9b59773d89f7a8713",
        "md5": "5f913341acbe72b831275747926fd7c9",
        "sha256": "cc3c39ab11c7e8defd7e02b8c2d6a91f13fc0a4eeb02d2ae779a294b2830fc28"
      },
      "downloads": -1,
      "filename": "task_assembly-0.1.13.tar.gz",
      "has_sig": false,
      "md5_digest": "5f913341acbe72b831275747926fd7c9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 21529,
      "upload_time": "2023-02-14T18:53:57",
      "upload_time_iso_8601": "2023-02-14T18:53:57.529124Z",
      "url": "https://files.pythonhosted.org/packages/48/c7/57f4af17f7644de3331cdb013d6f0dcb365b495c74b9b59773d89f7a8713/task_assembly-0.1.13.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}