{
  "info": {
    "author": "Lin Zhenyu",
    "author_email": "linzhenyu1996@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# ifree \n\n[![Python package](https://img.shields.io/badge/Python-ifree-orange)](https://github.com/linzhenyuyuchen/ifree/actions)\n[![PyPI](https://img.shields.io/pypi/v/ifree)](https://pypi.org/project/ifree/)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/ifree.svg)\n[![License](https://img.shields.io/pypi/l/ifree)](https://github.com/linzhenyuyuchen/ifree/blob/master/LICENSE)\n\n**ifree** is a small python package for making you free. \n\n- Radiomics Feature Extraction\n- Feature Pre-Processing and Selecting, \n- Dicom Processing\n- Crop CT/MR according to RT Structure\n- Calculate dose volume histogram (DVH)\n\nOne of the main benefits of **ifree** is that it handles data easily (see [example below](#example)).\n\n\n## Installation\n\n**ifree** can be installed with pip:\n\n```bash\npip install ifree\n```\nFor the bleeding edge version, install directly from github (consider adding `--force-reinstall`):\n```bash\npip install git+git://github.com/linzhenyuyuchen/ifree.git\n```\nor by cloning the repo:\n```bash\ngit clone https://github.com/linzhenyuyuchen/ifree.git\ncd ifree\npython setup.py install\n```\n\n## Example\n\n### Feature Processing\n\n#### Radiomics Feature Extractor\n\nradiomics.yaml\n\n```yaml\n# https://github.com/Radiomics/pyradiomics/blob/master/examples/exampleSettings/exampleMR_NoResampling.yaml\n# https://github.com/Radiomics/pyradiomics/blob/master/examples/exampleSettings/MR_2D_extraction.yaml\nimageType:\n  Original: {}\n  LoG:\n   # If the in-plane spacing is large (> 2mm), consider removing sigma value 1.\n   sigma: [ 1.0, 3.0, 5.0 ]\n  Wavelet: {}\n\nsetting:\n  label: 1 # 255\n#  interpolator: 'sitkBSpline'\n#  resampledPixelSpacing: [2, 2, 2]\n\n#  normalize: true\n#  normalizeScale: 100  # This allows you to use more or less the same bin width.\n\nfeatureClass:\n  firstorder:\n  shape:\n  glcm:\n  glrlm:\n  glszm:\n  gldm:\n  ngtdm:\n```\n\n```python\nfrom ifree import processing\n\nidx = list()\nimagePaths = list()\nmaskPaths = list()\nparamPath = \"./radiomics.yaml\"\noutputPath = \"./features.csv\"\n\nhelper = processing.FeatureExtractor(idx, imagePaths, maskPaths, paramPath, outputPath)\nhelper.extract(force=True)\n\n```\n\n#### Feature Pre-Processing\n\n```python\ndf_train = pd.DataFrame()\ndf_test = pd.DataFrame()\nhelper = processing.FeatureProcess(df_train, df_test)\n# preprocessing methods\nhelper.simpleImpute(strategy='mean') # mean, median, most_frequent, constant\nhelper.standardScale()\nhelper.normalizer()\nhelper.minMaxScaler()\nhelper.pca(n_components=10)\narray_train = helper.X_train\narray_test = helper.X_test\n```\n\n\n#### Feature Selector\n\n```python\nx_array = np.array()\ny_list = list()\nfeatureNames = list()\nselector = processing.FeatureSelector(x_array, y_list, featureNames)\n# selection methods\nx_array_new, y_array_new = selector.univarSelector(top_k=600, method_name=\"f_classif\", inplace=True)\nprint(x_array_new.shape)\nx_array_new, y_array_new = selector.ttestSelector(inplace=True)\nprint(x_array_new.shape)\nx_array_new, y_array_new = selector.mannSelector(inplace=True)\nprint(x_array_new.shape)\nx_array_new, y_array_new = selector.modelSelector(inplace=True)\nprint(x_array_new.shape)\n# name of selected features \nprint(selector.featureNames)\n```\n\n---\n\n### Dicom Processing\n\n#### Crop CT/MR according to RT\n\n```python\nfrom ifree import dicom\n\n# get paths for CT, MR, DOSE and RT\nfileDir = \"./p/\"\nctfiles, rtfile, mrfiles, dosefile, patientID, patientName = dicom.GetFilePath(fileDir)\n\n# get MRs or CTs related to RT and copy them to new dir\npatientNames, patientIDs, id2mrs, id2rt, id2dose = dicom.archiveFiles(old_Dir, new_Dir, copyed=True)\n\n# crop ROI-MASK and its CT or MR\nroiName = \"ctv\"\nnewDir = \"./p/\"\nnewSize = [100, 100, 100] # leave None to get origin size\nidx_done_list = dicom.cropROI(id2mrs, id2rt, roiName, newDir, newSize)\n\nidx_done_list = dicom.cropDose(id2dose, id2rt, roiName, newDir, newSize)\n```\n\n### Get Dose-Volume Histogram (DVH)\n\n```python\n# Get Dose-Volume Histogram (DVH)\nrtssfile = \"./RT.dicom\"\nrtdosefile = \"./RS.dicom\"\n# percents is the space between 0-100\nroiname = \"Body\"\ndata, percents = dicom.get_dvh_of_key(rtssfile, rtdosefile)\ndose_list, max_value, min_value, mean_value = data[roiname]\n\n# saved to dataframe\ndose_features = {}\nroiname = \"Body\"\nfor i, (pid, rtssfile) in enumerate(id2rt.item()):\n    rtdosefile = id2dose[pid]\n    # percents is the space between 0-100\n    data, percents = dicom.get_dvh_of_key(rtssfile, rtdosefile)\n    dose_list, max_value, min_value, mean_value = data[roiname]\n    tmp = {\"pid\": pid, \"dose_max\": max_value, \"dose_min\": min_value, \"dose_mean\": mean_value,}\n    for i, pc in enumerate(percents):\n        tmp[f\"dose_{pc}\"] = dose_list[i]\n    dose_features[i] = tmp\ndf_dose_features = pd.DataFrame.from_dict(dose_features, orient='index')\ndf_dose_features.head()\n```\n\n\nFor more examples, see the [examples folder](https://github.com/linzhenyuyuchen/ifree/tree/master/examples).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/linzhenyuyuchen/ifree",
    "keywords": "ifree",
    "license": "BSD license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ifree",
    "package_url": "https://pypi.org/project/ifree/",
    "platform": "",
    "project_url": "https://pypi.org/project/ifree/",
    "project_urls": {
      "Homepage": "https://github.com/linzhenyuyuchen/ifree"
    },
    "release_url": "https://pypi.org/project/ifree/1.1.1/",
    "requires_dist": [
      "dicom2nifti",
      "dicompyler-core",
      "lifelines",
      "itk",
      "minepy",
      "numpy",
      "numpy (>=1.15.4)",
      "pandas (>=0.24.2)",
      "pyradiomics",
      "scikit-image (>=0.14)",
      "scipy",
      "SimpleITK",
      "sklearn",
      "tqdm",
      "vtk"
    ],
    "requires_python": ">=3.6",
    "summary": "i love freedom, free my hand.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10287404,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e6f8a39578753098abfee8e824fd178c8e5fb0b153c0ccbb4b99727f791c075",
          "md5": "aef7925f9b6d73e50c587425787098ad",
          "sha256": "4bde87c3198f5c5bee7b33982b6e66ad5b90fad43c51b6a62f9d7760085bcfc4"
        },
        "downloads": -1,
        "filename": "ifree-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aef7925f9b6d73e50c587425787098ad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16754,
        "upload_time": "2021-05-07T13:57:43",
        "upload_time_iso_8601": "2021-05-07T13:57:43.495009Z",
        "url": "https://files.pythonhosted.org/packages/5e/6f/8a39578753098abfee8e824fd178c8e5fb0b153c0ccbb4b99727f791c075/ifree-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d6ca7e8e2124adb44ef2c151073d24caa45c9ef7217b3f6d9767da66994f8f2",
          "md5": "0a7b8c4f8d2888c299ec61e2348859e1",
          "sha256": "351114e0e62806ffd8041182b48a889429a5095e840438a3334cea749ce18652"
        },
        "downloads": -1,
        "filename": "ifree-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0a7b8c4f8d2888c299ec61e2348859e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16833,
        "upload_time": "2021-05-07T13:57:46",
        "upload_time_iso_8601": "2021-05-07T13:57:46.998875Z",
        "url": "https://files.pythonhosted.org/packages/1d/6c/a7e8e2124adb44ef2c151073d24caa45c9ef7217b3f6d9767da66994f8f2/ifree-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad5a1f189507ea408f834e55d49d86db06388eff23ab7d209f612e7f3be55b46",
          "md5": "1795809e12d538646689902f1a0f076a",
          "sha256": "85d74eb36830f21c5a11c8d30df5318caf3ccb23ca36f8bcd89ed949d0032cdb"
        },
        "downloads": -1,
        "filename": "ifree-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1795809e12d538646689902f1a0f076a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16781,
        "upload_time": "2021-05-07T14:33:48",
        "upload_time_iso_8601": "2021-05-07T14:33:48.623099Z",
        "url": "https://files.pythonhosted.org/packages/ad/5a/1f189507ea408f834e55d49d86db06388eff23ab7d209f612e7f3be55b46/ifree-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27da323548ab4d622932ccbc8bffeb2289da13bc80198e591d12fd9233811f90",
          "md5": "c843b6c58f6b49ec92d8ed45fba4409d",
          "sha256": "9552fe2f194d1a21664351717d484311180ad7b4f07ac482583263bce1425e97"
        },
        "downloads": -1,
        "filename": "ifree-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c843b6c58f6b49ec92d8ed45fba4409d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16873,
        "upload_time": "2021-05-07T14:33:51",
        "upload_time_iso_8601": "2021-05-07T14:33:51.122863Z",
        "url": "https://files.pythonhosted.org/packages/27/da/323548ab4d622932ccbc8bffeb2289da13bc80198e591d12fd9233811f90/ifree-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ad5a1f189507ea408f834e55d49d86db06388eff23ab7d209f612e7f3be55b46",
        "md5": "1795809e12d538646689902f1a0f076a",
        "sha256": "85d74eb36830f21c5a11c8d30df5318caf3ccb23ca36f8bcd89ed949d0032cdb"
      },
      "downloads": -1,
      "filename": "ifree-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1795809e12d538646689902f1a0f076a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 16781,
      "upload_time": "2021-05-07T14:33:48",
      "upload_time_iso_8601": "2021-05-07T14:33:48.623099Z",
      "url": "https://files.pythonhosted.org/packages/ad/5a/1f189507ea408f834e55d49d86db06388eff23ab7d209f612e7f3be55b46/ifree-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "27da323548ab4d622932ccbc8bffeb2289da13bc80198e591d12fd9233811f90",
        "md5": "c843b6c58f6b49ec92d8ed45fba4409d",
        "sha256": "9552fe2f194d1a21664351717d484311180ad7b4f07ac482583263bce1425e97"
      },
      "downloads": -1,
      "filename": "ifree-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c843b6c58f6b49ec92d8ed45fba4409d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 16873,
      "upload_time": "2021-05-07T14:33:51",
      "upload_time_iso_8601": "2021-05-07T14:33:51.122863Z",
      "url": "https://files.pythonhosted.org/packages/27/da/323548ab4d622932ccbc8bffeb2289da13bc80198e591d12fd9233811f90/ifree-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}