{
  "info": {
    "author": "Sense Street",
    "author_email": "engineering@sensestreet.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# sensestreet\nThis is a Python client for Sense Street API.\n\n# Run the client\nIn order to use the client, import SenseStreetClient from sensestreet:\n```\nfrom sensestreet import SenseStreetClient\n```\nand provide the app_id and api_url:\n```\nclient = SenseStreetClient(app_id=\"test\", api_url=\"https://server.com/api\")\n```\nTo simply ping the server, use:\n```\nclient.ping()\n```\n\n# Overview of all functions:\n\n## Pings\n```\nping()\n```\nSends ping to the server to check if server is up and responding.\n\n```\nping_auth()\n```\nSimilar to ping but with authorisation - easy way to check if you're authorised to send requests to the server.\n\n## Requests to prediction server:\n\n```\npredict_rfqs(conversation, options)\n```\nSends request to predict rfqs in a conversation. Conversation has to be either a dict or a json.\n\n```\nchat_snippet_predict_rfqs(chat_snippet, options)\n```\nSends request to predict rfqs in the conversation. Conversation has to be either a dict or a json. The difference between this function and the one above is the structure of the conversation, <em>predict_rfqs</em> is for a conversation in the Sense Street's format, while <em>chat_snippet_predict_rfqs</em> is for conversation that is a cutout from the chat.\n\n## Batch job requests:\n```\nupload_files_with_conversations(files_paths)\n```\nUploads specified files with conversation to be processed by the server. It returns an id for each file that will be nedded later on to obtain processed conversations. To run this function you need to have permission to open these files. Make sure you're not trying to upload over 1Gb of files in a single request.\n\n```\nupload_file_with_bond(file_path)\n```\nUploads file with bond data to the server.\n\n```\nget_processed_conv_file(file_id, save_path)\n```\nReturns file with processed conversations, <em>file_id</em> is the id that was returned during the files upload - by the <em>upload_files_with_conversations</em> function.\n\n```\nget_conv_file_status(file_id)\n```\nReturns the status of the uploaded file. With this function you can check if the file has already been processed by the server and is ready for download.\n\n# How to use your key to authorise requests\nIn order to send requests to the server you need to obtain a pair of keys - public and private (if you don't have a key contact the Sense Street to get one). In order to be correctly authorised by the server initialised the SenseStreetClient with the paths to both of the keys:\n\n```\nclient = SenseStreetClient(\n    app_id=\"id of your app\",\n    api_url=\"https://server.com/api\",\n    priv_key_path='path to your private key',\n    pub_key_path='path to your public key'\n    )\n```\n\n# How to define proxies\nIn order to use proxy provide a dict of proxies when initializing Sense Street Client. The <em>proxies</em> parameter has a form of a dictionary mapping protocol to the URL of the proxy, eg.:\n```\nclient = SenseStreetClient(\n    app_id=\"id of your app\",\n    api_url=\"https://server.com/api\",\n    proxies = {\n        \"https\": \"https://10.10.1.10:1080\",\n        }\n    )\n```\n\nTo read more about proxies refer to: https://requests.readthedocs.io/en/latest/user/advanced/#proxies",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://sensestreet.com",
    "keywords": "",
    "license": "Apache",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sensestreet",
    "package_url": "https://pypi.org/project/sensestreet/",
    "platform": null,
    "project_url": "https://pypi.org/project/sensestreet/",
    "project_urls": {
      "Homepage": "https://sensestreet.com"
    },
    "release_url": "https://pypi.org/project/sensestreet/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15801200,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7d3838bab3e82ab44193a0b58021982acabe55696b24439456590546b5b849e",
          "md5": "ab2dcd792cd543d9dde51151456c11fe",
          "sha256": "b5e8741c3265a37821c62b2e5328b542bd38c224b820d73727e1da83c533be84"
        },
        "downloads": -1,
        "filename": "sensestreet-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ab2dcd792cd543d9dde51151456c11fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9915,
        "upload_time": "2022-10-13T07:48:41",
        "upload_time_iso_8601": "2022-10-13T07:48:41.231536Z",
        "url": "https://files.pythonhosted.org/packages/f7/d3/838bab3e82ab44193a0b58021982acabe55696b24439456590546b5b849e/sensestreet-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad448fe0d4a5565a3cf10886ad43d1b1ec1d6887f990d46877386a5869d50b7f",
          "md5": "fe8bddaecbf35b960e882ea9a46f3056",
          "sha256": "49558eb582fadba32c6676d8248d564a2ba3aad3c6017483b46520d249f08fc2"
        },
        "downloads": -1,
        "filename": "sensestreet-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fe8bddaecbf35b960e882ea9a46f3056",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9925,
        "upload_time": "2022-11-17T08:38:46",
        "upload_time_iso_8601": "2022-11-17T08:38:46.344376Z",
        "url": "https://files.pythonhosted.org/packages/ad/44/8fe0d4a5565a3cf10886ad43d1b1ec1d6887f990d46877386a5869d50b7f/sensestreet-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a8146043b05c123eaf58d9b8a75035d111472ea2f272534145daa21ab63a973",
          "md5": "4864d4911640647f61222bff8e12277f",
          "sha256": "a60882137340242777121122a4239f42dc02d44cd0403bf670de6ced513827a6"
        },
        "downloads": -1,
        "filename": "sensestreet-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4864d4911640647f61222bff8e12277f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9915,
        "upload_time": "2022-11-17T12:44:01",
        "upload_time_iso_8601": "2022-11-17T12:44:01.176492Z",
        "url": "https://files.pythonhosted.org/packages/3a/81/46043b05c123eaf58d9b8a75035d111472ea2f272534145daa21ab63a973/sensestreet-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a8146043b05c123eaf58d9b8a75035d111472ea2f272534145daa21ab63a973",
        "md5": "4864d4911640647f61222bff8e12277f",
        "sha256": "a60882137340242777121122a4239f42dc02d44cd0403bf670de6ced513827a6"
      },
      "downloads": -1,
      "filename": "sensestreet-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4864d4911640647f61222bff8e12277f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9915,
      "upload_time": "2022-11-17T12:44:01",
      "upload_time_iso_8601": "2022-11-17T12:44:01.176492Z",
      "url": "https://files.pythonhosted.org/packages/3a/81/46043b05c123eaf58d9b8a75035d111472ea2f272534145daa21ab63a973/sensestreet-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}