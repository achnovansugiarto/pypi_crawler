{
  "info": {
    "author": "Marcos Moura",
    "author_email": "gabbyru2@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<h1 align=\"center\">\n    <img alt=\"OpticalPyber\" ttle=\"OpticalPyber\" src=\"https://github.com/marcos-moura97/opticalpyber/blob/main/docs/logo.png\" width=\"30%\" height=\"auto\"/>\n</h1>\n\n<p align=\"center\">\n  <a href=\"#about-the-project\">About the Project</a>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n  <a href=\"#requirements\">Requirements</a>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n  <a href=\"#examples\">Examples</a>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n  <a href=\"#next-steps\">Next Steps</a>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n  <a href=\"#references\">References</a>\n</p>\n\n<br />\n\n## About the Project\n\nPackage with tools to analize waveguides and optical fibers. This package uses numerical methods to find the eigenvalues related to the propagation modes and other characteristics of the waveguide. Currently, this package supports three types of waveguide: Planar, Retangular and Optical Fibers.\n\nThis package is made based on python codes used during my graduation, this codes can be found in [this repository](https://github.com/marcos-moura97/eletromagnetism_python.git).\n\n## Requirements\n- numpy\n- scipy\n- matplotlib (if you want to plot something)\n\n## Examples\n\n### Planar Waveguide\n\n- Find the effective index and plot the profile dispersion curve for modes TM0, TM1 and TM2 in an symetric guide [1-2].\n```\nfrom opticalpyber import PlanarWaveguide\nimport matplotlib.pyplot as plt\n\n# materials\nn1 = 3.38       #core\nn2 = 3          #cladding\nn3 = n2         #substrate\n\nd = 2.5E-6      #core length\nlbd = 1E-6      # wavelength\n\nguide = PlanarWaveguide(n1, n2, n3, d)\n\nfor mode in range(3):\n    Ey = guide.calculateDispersionField(lbd, mode=\"TM\", mode_number=mode)\n\n    # make the x arrays\n    x = np.arange(-2*guide.lbd,2*guide.lbd,guide.dx)\n\n    # ploting\n    plt.figure(mode)\n    plt.plot(x,Ey[:-1],'b')\n    # plot the bars that divide the materials\n    plt.plot([-guide.a,-guide.a],[-guide.amplitude,guide.amplitude],'k--') # substracte / core\n    plt.plot([guide.a,guide.a],[-guide.amplitude,guide.amplitude],'k--')   # core / cladding\n    # some info\n    plt.title(f'Dispersion of Ey for mode TM{mode}')\n    plt.xlabel('y')\n    plt.ylabel('Ey')\n    plt.xticks([-guide.a,guide.a], ['-a','a'])\n    plt.show()\n\n```\n\n### Retangular Waveguide\n\n- Find the effective index and plot the profile dispersion curve for modes TM0 in an symetric rib waveguide[1].\n\n```\nimport matplotlib.pyplot as plt\n\n## materials\n\nn1 = 3.50125  # core\nn2 = 3.5  # substrate/rib\nn3 = 3  # cladding\n\nd = 2 * 8e-6  # core length\n\nh = 3e-6  # rib bigger height\nt = 1e-6  # rib smaller height, if =0, than is a ridge waveguide\nhc = 6.5e-6  # core height\n\nlbd = 1.32e-6  # wavelength\n\nguide = RetangularWaveguide(n1, n2, n3, d, h, t, hc)\nall_modes = guide.calculateNeff(lbd)\nprint(guide.neff)\n\n(XX, YY, Zx) = guide.calculateDispersionFieldX()\n\n# Ploting\nplt.figure()\n# plot\nplt.contourf(XX, YY, Zx)\n# structure plot\nplt.plot([-(3*guide.a), -guide.a, -guide.a, guide.a, guide.a, 3*guide.a],\n         [guide.hc+guide.t, guide.hc+guide.t, guide.hc+guide.h, guide.hc+guide.h, guide.hc+guide.t, guide.hc+guide.t], 'k')\nplt.plot([-(3*guide.a), 3*guide.a], [guide.hc, guide.hc], 'k')\nplt.plot([-(3*guide.a), 3*guide.a], [0, 0], 'k')\n# labels\nplt.xticks([-guide.a,guide.a], ['-a','a'])\nplt.yticks([0,guide.hc,guide.hc+guide.t, guide.hc+guide.h], ['0','hc','hc+t','hc+h'])\n# limits\nplt.xlim([-(3*guide.a), 3*guide.a])\nplt.ylim([-guide.t, guide.hc+guide.h+guide.t])\n\nplt.show()\n\n```\n\n### Optical Fiber\n\n- Find and plot the modes LP01, LP11 and LP21 of an Step-index fiber[4].\n\n```\nfrom opticalpyber import OpticalFiber\nimport matplotlib.pyplot as plt\n\n# materials\nn1 = 1.45 # core\nn2 = 1.4  # cladding\n\n# diameter of the core\nd = 16E-6 # um\n\n# wavelength of analysis\nlbd = 8.11E-6 # um\n\nfiber = OpticalFiber(n1, n2, d)\n\nfor mode in range(3):\n    modes = fiber.findMModes(lbd, mode)\n    print(f'For mode M = {mode} we found {len(modes)} values.')\n    print(modes)\n\n    # plot the modes\n    (x, y, z) = fiber.calculateDispersionField(modes[-1], dx=1e-8)\n\n    plt.figure(mode)\n    plt.contourf(x, y, z)\n    plt.colorbar()\n    plt.show()\n```\n\n## Next Steps\n\n- Unit Tests\n- Add Slot Waveguides\n- More Robust Optical Fiber Model\n\n## References\n\n[1] Okamoto, K. (2021). Fundamentals of optical waveguides. Elsevier.\n\n[2] GHATAK, A. A., Ghatak, A., Thyagarajan, K., & Thyagarajan, K. (1998). An introduction to fiber optics. Cambridge university press.\n\n[3] Orfanidis, S. J. (2002). Electromagnetic waves and antennas.\n\n[4] Paschotta, D., 2022. LP Modes. [online] Rp-photonics.com. Available at: <https://www.rp-photonics.com/lp_modes.html> [Accessed 15 April 2022].\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/marcos-moura97/opticalpyber",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "opticalpyber",
    "package_url": "https://pypi.org/project/opticalpyber/",
    "platform": null,
    "project_url": "https://pypi.org/project/opticalpyber/",
    "project_urls": {
      "Homepage": "https://github.com/marcos-moura97/opticalpyber"
    },
    "release_url": "https://pypi.org/project/opticalpyber/0.0.1/",
    "requires_dist": [
      "numpy",
      "scipy"
    ],
    "requires_python": "",
    "summary": "Package with tools to waveguides and optical fibers",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13578102,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "726a1f6df8618ce709dfc5c21ba99e2ee46e48cfa1f51ce904e6a96265f48857",
          "md5": "a47e24fe006758e1f461b0692e5f5825",
          "sha256": "f7194cbd652b236649b738978c2d80118af8b08d7745e14b5e944b4deb99471b"
        },
        "downloads": -1,
        "filename": "opticalpyber-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a47e24fe006758e1f461b0692e5f5825",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11557,
        "upload_time": "2022-04-21T12:03:28",
        "upload_time_iso_8601": "2022-04-21T12:03:28.491515Z",
        "url": "https://files.pythonhosted.org/packages/72/6a/1f6df8618ce709dfc5c21ba99e2ee46e48cfa1f51ce904e6a96265f48857/opticalpyber-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55fde95a0950622e0f97269f6eba25f6f465ca7b1107292b9dcde1050c81b350",
          "md5": "82833c3d8ab62eb690b1291f9ad5c5aa",
          "sha256": "8c836655d0dcfc39f00b822197df34e018c339498acc40e247bff59b726b75b3"
        },
        "downloads": -1,
        "filename": "opticalpyber-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "82833c3d8ab62eb690b1291f9ad5c5aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11196,
        "upload_time": "2022-04-21T12:03:30",
        "upload_time_iso_8601": "2022-04-21T12:03:30.296013Z",
        "url": "https://files.pythonhosted.org/packages/55/fd/e95a0950622e0f97269f6eba25f6f465ca7b1107292b9dcde1050c81b350/opticalpyber-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "726a1f6df8618ce709dfc5c21ba99e2ee46e48cfa1f51ce904e6a96265f48857",
        "md5": "a47e24fe006758e1f461b0692e5f5825",
        "sha256": "f7194cbd652b236649b738978c2d80118af8b08d7745e14b5e944b4deb99471b"
      },
      "downloads": -1,
      "filename": "opticalpyber-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a47e24fe006758e1f461b0692e5f5825",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11557,
      "upload_time": "2022-04-21T12:03:28",
      "upload_time_iso_8601": "2022-04-21T12:03:28.491515Z",
      "url": "https://files.pythonhosted.org/packages/72/6a/1f6df8618ce709dfc5c21ba99e2ee46e48cfa1f51ce904e6a96265f48857/opticalpyber-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "55fde95a0950622e0f97269f6eba25f6f465ca7b1107292b9dcde1050c81b350",
        "md5": "82833c3d8ab62eb690b1291f9ad5c5aa",
        "sha256": "8c836655d0dcfc39f00b822197df34e018c339498acc40e247bff59b726b75b3"
      },
      "downloads": -1,
      "filename": "opticalpyber-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "82833c3d8ab62eb690b1291f9ad5c5aa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11196,
      "upload_time": "2022-04-21T12:03:30",
      "upload_time_iso_8601": "2022-04-21T12:03:30.296013Z",
      "url": "https://files.pythonhosted.org/packages/55/fd/e95a0950622e0f97269f6eba25f6f465ca7b1107292b9dcde1050c81b350/opticalpyber-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}