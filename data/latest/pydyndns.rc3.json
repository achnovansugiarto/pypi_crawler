{
  "info": {
    "author": "Christopher Head",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: No Input/Output (Daemon)",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Internet :: Name Service (DNS)"
    ],
    "description": "Overview\n========\n\nPyDynDNS sends dynamic DNS updates to a DNS server. PyDynDNS’s principles are\nas follows:\n* PyDynDNS allows a computer to register *its own* address on a DNS server.\n  PyDynDNS will not help a DHCP server register all its clients. PyDynDNS is\n  useful for situations where the DHCP server in use is not able to issue DNS\n  updates.\n* PyDynDNS uses the DNS protocol to perform dynamic updates. Many commercial\n  dynamic DNS providers use HTTP-based update interfaces instead. PyDynDNS does\n  not support those interfaces.\n* PyDynDNS will update A and AAAA records only.\n* PyDynDNS is small and lightweight and is intended to be run from a Cron job\n  or DHCP client address-change callback. It is perfectly reasonable to run\n  PyDynDNS every minute or so. It will only send updates when changes have been\n  made.\n\n\n\nDependencies\n============\n\nPyDynDNS requires the following packages, all of which are available via `pip`:\n* dnspython\n* netifaces\n\n\n\nUsage\n=====\n\nPyDynDNS can be invoked from the command line. It uses standard command-line\noption parsing and understand the `-h` and `--help` options to display usage\ninformation.\n\nThe name to register is taken from the computer’s current hostname. The\naddresses to register is taken from one or more network interfaces, which are\npassed on the command line. The server to talk to is taken from the SOA record\ncovering the computer’s hostname. Each update deletes all records associated\nwith the hostname then registers a new A or AAAA record for each of the host’s\nIP addresses.\n\nA pair of Windows Task Scheduler job files are provided in the\n`examples/tasksched` subdirectory. These assume PyDynDNS has been installed at\n`C:\\Python3.7\\Bin\\PyDynDNS`. The `Normal.xml` job runs every ten minutes,\nstarting ten minutes after system boot, to keep the DNS names up to date as IP\naddresses change. The `Force.xml` job runs once at boot with the `-f` option,\nto ensure that updates other operating systems may have made are flushed out\nand the system’s current address is registered properly.\n\n\n\nConfiguration File\n==================\n\nPyDynDNS uses a JSON-formatted configuration file. The top-level configuration\nfile must be a JSON object with the following keys:\n* cache (required, string or boolean): The name of the cache file, `true` to\n  use the platform-default cache file, or `false` to not use a cache file.\n  PyDynDNS writes into this file each time it performs an update. When invoked,\n  it first checks the cache file to decide whether an update needs to be\n  performed; if no data has changed compared to the cache file, the update is\n  skipped. On a single-OS computer, this file can be stored anywhere. On a\n  multi-OS computer, this file should probably be stored somewhere that is\n  destroyed on reboot, so that any registration changes made while other OSes\n  are booted will be overwritten. If omitted, no cache file is used and every\n  invocation results in an update being sent.\n* ipv4 (required, boolean): Whether or not to register IPv4 (A) records.\n* ipv6 (required, object): Configuration regarding IPv6; see below.\n* logging (required, object): A logging configuration, as described by the\n  Python logging configuration dictionary schema at\n  <https://docs.python.org/3/library/logging.config.html#logging-config-dictschema>.\n  Note that a logger named `pydyndns` is used for all output.\n* ttl (required, number): The time to live for created DNS records, in seconds.\n* tsig (optional, object): Configuration regarding TSIG authentication; see below.\n\n\nipv6 object\n-----------\n\nThe ipv6 object contains the following keys:\n* enable (required, boolean): Whether or not to register IPv6 (AAAA) records.\n* teredo (required, boolean): Whether to include Teredo addresses.\n\n\ntsig object\n-----------\n\nThe tsig object, if present, contains the following keys:\n* algorithm (required, string): The name of the TSIG algorithm to use, one of\n  `hmac-md5`, `hmac-sha1`, `hmac-sha224`, `hmac-sha256`, `hmac-sha384`, or\n  `hmac-sha512`.\n* key (required, string): The base-64-encoded shared secret.\n* keyname (required, string): The name of the key, which must match the key\n  name the server is expecting.\n\n\nExample logger object for UNIX syslog dæmon output\n--------------------------------------------------\n\n```JSON\n{\n\t\"version\": 1,\n\t\"formatters\": {\n\t\t\"syslog\": {\n\t\t\t\"format\": \"%(name)s: %(message)s\"\n\t\t}\n\t},\n\t\"handlers\": {\n\t\t\"syslog\": {\n\t\t\t\"class\": \"logging.handlers.SysLogHandler\",\n\t\t\t\"address\": \"/dev/log\",\n\t\t\t\"facility\": \"local0\",\n\t\t\t\"formatter\": \"syslog\"\n\t\t}\n\t},\n\t\"root\": {\n\t\t\"level\": \"WARNING\",\n\t\t\"handlers\": [\"syslog\"]\n\t}\n}\n```\n\n\nExample logger object for Windows event logger output\n-----------------------------------------------------\n\nThis requires Python Win32 extensions to be installed (`python -m pip install\npypiwin32`).\n\nIf you are running under a low-privilege Windows account (e.g. Local Service),\nyou will be able to write messages to the event log, but not register new event\nsources. Running PyDynDNS once as an adminstrator with the NTEventLogHandler\nconfigured will register the event source, after which subsequent invocations\ncan be made from the low-privilege account.\n\n```JSON\n{\n\t\"version\": 1,\n\t\"formatters\": {\n\t\t\"eventlog\": {\n\t\t\t\"format\": \"%(message)s\"\n\t\t}\n\t},\n\t\"handlers\": {\n\t\t\"eventlog\": {\n\t\t\t\"class\": \"logging.handlers.NTEventLogHandler\",\n\t\t\t\"appname\": \"PyDynDNS\",\n\t\t\t\"formatter\": \"eventlog\"\n\t\t}\n\t},\n\t\"root\": {\n\t\t\"level\": \"WARNING\",\n\t\t\"handlers\": [\"eventlog\"]\n\t}\n}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/Hawk777/pydyndns",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pydyndns",
    "package_url": "https://pypi.org/project/pydyndns/",
    "platform": "",
    "project_url": "https://pypi.org/project/pydyndns/",
    "project_urls": {
      "Homepage": "https://gitlab.com/Hawk777/pydyndns"
    },
    "release_url": "https://pypi.org/project/pydyndns/1.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Sends dynamic DNS updates to a DNS server.",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11980955,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd0362bc9350b088f4f0f192f756b869377b5c118d6eecd576ada5c9cd2d8787",
          "md5": "0593fc93352135e1e79eab19c41e4d44",
          "sha256": "416dd4f1a813d5cbbaba1d814ec21367602177a7752b1a48c90460657c658131"
        },
        "downloads": -1,
        "filename": "pydyndns-1.0.1.tar.gz",
        "has_sig": true,
        "md5_digest": "0593fc93352135e1e79eab19c41e4d44",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12557,
        "upload_time": "2020-08-25T16:15:01",
        "upload_time_iso_8601": "2020-08-25T16:15:01.100358Z",
        "url": "https://files.pythonhosted.org/packages/fd/03/62bc9350b088f4f0f192f756b869377b5c118d6eecd576ada5c9cd2d8787/pydyndns-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84bdbc800cfe87356e36b26dfc3caa9a19779cd1f57a45013d1c5e395348cc88",
          "md5": "15c4f556075545f62630464ed20f67e9",
          "sha256": "a90df975789b18bf4572253618f6eedd606fb0fe1e7e27af82bd69d8319e3444"
        },
        "downloads": -1,
        "filename": "pydyndns-1.1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "15c4f556075545f62630464ed20f67e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13433,
        "upload_time": "2020-12-22T02:25:36",
        "upload_time_iso_8601": "2020-12-22T02:25:36.288576Z",
        "url": "https://files.pythonhosted.org/packages/84/bd/bc800cfe87356e36b26dfc3caa9a19779cd1f57a45013d1c5e395348cc88/pydyndns-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8b496e6f95b6671b26cda302f96e81eeb829a6ef0836edab7daf4920f81d86e",
          "md5": "c96def3efb2437767d939f315b9916cb",
          "sha256": "6fb1a76c9f84997f31733e57609df4261539246ada914245d348d913dc045e71"
        },
        "downloads": -1,
        "filename": "pydyndns-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c96def3efb2437767d939f315b9916cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13945,
        "upload_time": "2021-11-10T06:08:39",
        "upload_time_iso_8601": "2021-11-10T06:08:39.604519Z",
        "url": "https://files.pythonhosted.org/packages/d8/b4/96e6f95b6671b26cda302f96e81eeb829a6ef0836edab7daf4920f81d86e/pydyndns-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d8b496e6f95b6671b26cda302f96e81eeb829a6ef0836edab7daf4920f81d86e",
        "md5": "c96def3efb2437767d939f315b9916cb",
        "sha256": "6fb1a76c9f84997f31733e57609df4261539246ada914245d348d913dc045e71"
      },
      "downloads": -1,
      "filename": "pydyndns-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c96def3efb2437767d939f315b9916cb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13945,
      "upload_time": "2021-11-10T06:08:39",
      "upload_time_iso_8601": "2021-11-10T06:08:39.604519Z",
      "url": "https://files.pythonhosted.org/packages/d8/b4/96e6f95b6671b26cda302f96e81eeb829a6ef0836edab7daf4920f81d86e/pydyndns-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}