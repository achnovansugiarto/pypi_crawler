{
  "info": {
    "author": "Jeremy Retailleau",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "#####\nJound\n#####\n\nJound is a Python program which can invent new words from the analysis of a\nlist of words.\n\nIt can analyze a text and assemble all words it contains to a file. This list\nof words can then be analyzed in order to generate a statistical file which\nrecords the number of occurrences of each letter after a particular combination\nof two letters. Finally, the statistical file can be used in order to generate\nwords using a `Markov chain`_.\n\n.. code-block:: bash\n\n    >>> jound assemble Moby_Dick.txt\n    [jound] INFO: Assemble words from target: Moby_Dick.txt\n    [jound] INFO: Writing 7756 words to ./words.txt\n\n    >>> jound analyze words.txt\n    [jound] INFO: Generate statistics from target: words.txt\n    [jound] INFO: Writing statistics to ./stats.bin\n\n    >>> jound generate 10 -s stats.bin\n    gook\n    shancity\n    ruts\n    woure\n    duchic\n    appermoven\n    speriatrawk\n    gantinge\n    faltch\n    jound\n\n\nThis project was inspired by this excellent article:\n`La machine à inventer des mots`_ (in French)\n\n\n.. _Markov chain: https://en.wikipedia.org/wiki/Markov_chain\n.. _La machine à inventer des mots: https://sciencetonnante.wordpress.com/2015/10/16/la-machine-a-inventer-des-mots-video/",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/buddly27/jound",
    "keywords": "word,generator,markov,chain",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jound",
    "package_url": "https://pypi.org/project/jound/",
    "platform": "",
    "project_url": "https://pypi.org/project/jound/",
    "project_urls": {
      "Homepage": "http://github.com/buddly27/jound"
    },
    "release_url": "https://pypi.org/project/jound/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Word generator using a Markov chain",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3327426,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb34808d274a83a0693976ca2339d699b5d4c8a5ef1b23b99a9d78e8a8ff9b41",
          "md5": "13e3371379291132da3a8eb36dcd65c8",
          "sha256": "9a2321fb5b087d2cade62a91f42cbacae756200bc38ade1786ee4b67cf202b16"
        },
        "downloads": -1,
        "filename": "jound-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "13e3371379291132da3a8eb36dcd65c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8796,
        "upload_time": "2017-11-13T02:28:24",
        "upload_time_iso_8601": "2017-11-13T02:28:24.777822Z",
        "url": "https://files.pythonhosted.org/packages/eb/34/808d274a83a0693976ca2339d699b5d4c8a5ef1b23b99a9d78e8a8ff9b41/jound-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eb34808d274a83a0693976ca2339d699b5d4c8a5ef1b23b99a9d78e8a8ff9b41",
        "md5": "13e3371379291132da3a8eb36dcd65c8",
        "sha256": "9a2321fb5b087d2cade62a91f42cbacae756200bc38ade1786ee4b67cf202b16"
      },
      "downloads": -1,
      "filename": "jound-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "13e3371379291132da3a8eb36dcd65c8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8796,
      "upload_time": "2017-11-13T02:28:24",
      "upload_time_iso_8601": "2017-11-13T02:28:24.777822Z",
      "url": "https://files.pythonhosted.org/packages/eb/34/808d274a83a0693976ca2339d699b5d4c8a5ef1b23b99a9d78e8a8ff9b41/jound-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}