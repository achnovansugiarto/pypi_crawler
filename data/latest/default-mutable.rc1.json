{
  "info": {
    "author": "Rood Repo",
    "author_email": "roodrepo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Default Mutable\n==========\n\n### *Prevent mutable default value behavior*\n\nDefault Mutable is a Python decorator that overrides default mutable values and prevents object mutation from one call to another. More info on https://docs.python-guide.org/writing/gotchas/\n\n## Features\n\n- Easy to use\n- Preset default value\n\n## Advantages\n\n- Highly flexible\n- Lightweight and independent\n- Open-source\n- Real use cases\n- Support & documentation\n\n## Authors\n\n- Rudy Fernandez\n\n## Install\nThe easiest way to install default_mutable using pip:\n`pip install default_mutable`\n\n## [Examples](https://github.com/roodrepo/default_mutable/blob/v0-dev/examples/example1.py)\n\n\nPythonâ€™s default arguments are evaluated once when the function is defined, not each time the function is called (like it is in say, Ruby). This means that if you use a mutable default argument and mutate it, you will and have mutated that object for all future calls to the function as well.\n```python\ndef function1(idx, dict1 = {}, list1 = [], element = 'a'):\n    list1.append(element)\n    dict1[f'{element}{idx}'] = f'{element}{idx}'\n    print('', idx, dict1, list1)\n\nprint('')\nprint('function1:')\nfunction1(idx= 1)   # 1 {'a1': 'a1'} ['a']\nfunction1(idx= 2)   # 2 {'a1': 'a1', 'a2': 'a2'} ['a', 'a']\n```\n\n---\n\nSetting all the arguments with mutable default arguments to an **EMPTY** dictionary or list\n```python\nfrom default_mutable.DefaultMutable import defaultMutable\n\n@defaultMutable\ndef function2(idx, dict1 = {}, list1 = [], element = 'a'):\n    list1.append(element)\n    dict1[f'{element}{idx}'] = f'{element}{idx}'\n    print('', idx, dict1, list1)\n\nprint('')\nprint('function2:')\nfunction2(1)    # 1 {'a1': 'a1'} ['a']\nfunction2(2)    # 2 {'a2': 'a2'} ['a']\n```\n\n---\n\nSetting all the arguments with mutable default arguments to an **EMPTY** dictionary or list\n```python\nfrom default_mutable.DefaultMutable import defaultMutable\n\n@defaultMutable\ndef function2_2(idx, dict1 = {}, list1 = ['list_init'], element = 'a'):\n    list1.append(element)\n    dict1[f'{element}{idx}'] = f'{element}{idx}'\n    print('', idx, dict1, list1)\n\nprint('')\nprint('function2_2:')\nfunction2_2(1)    # 1 {'a1': 'a1'} ['a']\nfunction2_2(2)    # 2 {'a2': 'a2'} ['a']\n```\n\n---\n\nWhen the decorator is executed with not arguments, we get the default behavior (same as \"function1\")\n```python\nfrom default_mutable.DefaultMutable import defaultMutable\n\n@defaultMutable()\ndef function3(idx, dict1 = {}, list1 = [], element = 'a'):\n    list1.append(element)\n    dict1[f'{element}{idx}'] = f'{element}{idx}'\n    print('', idx, dict1, list1)\n\nprint('')\nprint('function3:')\nfunction3(idx= 1)   # 1 {'a1': 'a1'} ['a']\nfunction3(idx= 2)   # 2 {'a1': 'a1', 'a2': 'a2'} ['a', 'a']\n```\n\n---\n\nAs no value is passed, the decorator set the default value for \"dict1\" and \"list1\" an empty dictionary and empty list\n```python\nfrom default_mutable.DefaultMutable import defaultMutable\n\n@defaultMutable('dict1', 'list1')\ndef function4(idx, dict1 = {}, list1 = [], element = 'a'):\n    list1.append(element)\n    dict1[f'{element}{idx}'] = f'{element}{idx}'\n    print('', idx, dict1, list1)\n\nprint('')\nprint('function4:')\nfunction4(idx= 1)   # 1 {'a1': 'a1'} ['a']\nfunction4(idx= 2)   # 2 {'a2': 'a2'} ['a']\n```\n\n---\n\nAs no value is passed, the decorator set the default value for \"dict1\" and \"list1\" an empty dictionary and empty list\n```python\nfrom default_mutable.DefaultMutable import defaultMutable\n\n@defaultMutable('dict1', 'list1')\ndef function4_2(idx, dict1 = {}, list1 = ['init'], element = 'a'):\n    list1.append(element)\n    dict1[f'{element}{idx}'] = f'{element}{idx}'\n    print('', idx, dict1, list1)\n\nprint('')\nprint('function4_2:')\nfunction4_2(idx= 1)   # 1 {'a1': 'a1'} ['a']\nfunction4_2(idx= 2)   # 2 {'a2': 'a2'} ['a']\n```\n\n---\nAs no value is passed, the decorator set the default value for \"list1\" an empty list. \"dict1\" has the default behavior\n```python\nfrom default_mutable.DefaultMutable import defaultMutable\n\n@defaultMutable('list1')\ndef function4_3(idx, dict1 = {}, list1 = [], element = 'a'):\n    list1.append(element)\n    dict1[f'{element}{idx}'] = f'{element}{idx}'\n    print('', idx, dict1, list1)\n\nprint('')\nprint('function4_3:')\nfunction4_3(idx= 1) # 1 {'a1': 'a1'} ['a']\nfunction4_3(idx= 2) # 2 {'a1': 'a1', 'a2': 'a2'} ['a']\n```\n\n---\nThe default values are mutable and \"list1\" get incremented from one function to the other\n```python\ndef function5(idx, dict1 = {}, list1 = ['init'], element = 'a'):\n    list1.append(element)\n    dict1[f'{element}{idx}'] = f'{element}{idx}'\n    print('', idx, dict1, list1)\n\nprint('')\nprint('function5:')\nfunction5(idx= 1)   # 1 {'a1': 'a1'} ['init', 'a']\nfunction5(idx= 2)   # 2 {'a1': 'a1', 'a2': 'a2'} ['init', 'a', 'a']\n```\n\n---\nDefault value for \"list1\" is not an empty list\n```python\nfrom default_mutable.DefaultMutable import defaultMutable\n\n@defaultMutable('dict1', list1= ['init'])\ndef function6(idx, dict1 = {}, list1 = ['init'], element = 'a'):\n    list1.append(element)\n    dict1[f'{element}{idx}'] = f'{element}{idx}'\n    print('', idx, dict1, list1)\n\nprint('')\nprint('function6:')\nfunction6(idx= 1)   # 1 {'a1': 'a1'} ['init', 'a']\nfunction6(idx= 2)   # 2 {'a2': 'a2'} ['init', 'a']\n```\n\n---\nDefault value for \"list1\" is not an empty list\n```python\nfrom default_mutable.DefaultMutable import defaultMutable\n\n@defaultMutable('dict1', list1= ['init'])\ndef function7(idx, dict1 = {}, list1 = [], element = 'a'):\n    list1.append(element)\n    dict1[f'{element}{idx}'] = f'{element}{idx}'\n    print('', idx, dict1, list1)\n\nprint('')\nprint('function7:')\nfunction7(idx= 1)   # 1 {'a1': 'a1'} ['init', 'a']\nfunction7(idx= 2)   # 2 {'a2': 'a2'} ['init', 'a']\n```\n\n---\nDefault value are empty dictionary and empty list\n```python\nfrom default_mutable.DefaultMutable import defaultMutable\n\n@defaultMutable('dict1', list1= [])\ndef function7_2(idx, dict1 = {}, list1 = ['init'], element = 'a'):\n    list1.append(element)\n    dict1[f'{element}{idx}'] = f'{element}{idx}'\n    print('', idx, dict1, list1)\n\nprint('')\nprint('function7_2:')\nfunction7_2(idx= 1) # 1 {'a1': 'a1'} ['a']\nfunction7_2(idx= 2) # 2 {'a2': 'a2'} ['a']\n```\n---\nDefault value are empty dictionary and empty list\n```python\nfrom default_mutable.DefaultMutable import defaultMutable\n\n@defaultMutable('dict1', 'list1')\ndef function7_3(idx, dict1 = {}, list1 = ['init'], element = 'a'):\n    list1.append(element)\n    dict1[f'{element}{idx}'] = f'{element}{idx}'\n    print('', idx, dict1, list1)\n\nprint('')\nprint('function7_3:')\nfunction7_3(idx= 1) # 1 {'a1': 'a1'} ['a']\nfunction7_3(idx= 2) # 2 {'a2': 'a2'} ['a']\n```\n\n---\nDefault value for \"dict1\" and \"list1\" are preset\n```python\nfrom default_mutable.DefaultMutable import defaultMutable\n\n@defaultMutable(dict1= {'dict_init': 'dict_init'}, list1= ['init'])\ndef function8(idx, dict1 = {}, list1 = [], element = 'a'):\n    list1.append(element)\n    dict1[f'{element}{idx}'] = f'{element}{idx}'\n    print('', idx, dict1, list1)\n\nprint('')\nprint('function8:')\nfunction8(idx= 1)   # 1 {'dict_init': 'dict_init', 'a1': 'a1'} ['init', 'a']\nfunction8(idx= 2)   # 2 {'dict_init': 'dict_init', 'a2': 'a2'} ['init', 'a']\n```\n\n---\nPassed values are not overridden\n```python\nfrom default_mutable.DefaultMutable import defaultMutable\n\n@defaultMutable(dict1= {'dict_init': 'dict_init'}, list1= ['init'])\ndef function9(idx, dict1 = {}, list1 = [], element = 'a'):\n    list1.append(element)\n    dict1[f'{element}{idx}'] = f'{element}{idx}'\n    print('', idx, dict1, list1)\n\nprint('')\nprint('function9:')\nfunction9(idx= 1, dict1= {'dict_value': 'dict_value'}, list1= ['list_value'])   # 1 {'dict_value': 'dict_value', 'a1': 'a1'} ['list_value', 'a']\nfunction9(idx= 2, dict1= {'dict_value': 'dict_value'}, list1= ['list_value'])   # 2 {'dict_value': 'dict_value', 'a2': 'a2'} ['list_value', 'a']\n\n```\n\n---\nPassed values are not overridden\n```python\nfrom default_mutable.DefaultMutable import defaultMutable\n\n@defaultMutable(dict1= {'dict_init': 'dict_init'}, list1= ['init'])\ndef function10(idx, dict1 = {}, list1 = [], element = 'a'):\n    list1.append(element)\n    dict1[f'{element}{idx}'] = f'{element}{idx}'\n    print('', idx, dict1, list1)\n\nprint('')\nprint('function10:')\nfunction10(1, {'dict_value': 'dict_value'}, ['list_value']) # 1 {'dict_value': 'dict_value', 'a1': 'a1'} ['list_value', 'a']\nfunction10(2, {'dict_value': 'dict_value'}, ['list_value']) # 2 {'dict_value': 'dict_value', 'a2': 'a2'} ['list_value', 'a']\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/roodrepo/default_mutable",
    "keywords": "default arguments,default list,default dict,decorator",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "default-mutable",
    "package_url": "https://pypi.org/project/default-mutable/",
    "platform": null,
    "project_url": "https://pypi.org/project/default-mutable/",
    "project_urls": {
      "Homepage": "https://github.com/roodrepo/default_mutable",
      "Repository": "https://github.com/roodrepo/default_mutable"
    },
    "release_url": "https://pypi.org/project/default-mutable/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3,<4",
    "summary": "Prevent mutable default arguments behavior",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13134230,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85cbebc03758753e537b7d7a929532eef558ed22452b5506c3322fb07fd06e62",
          "md5": "84cc86a2390b76e3bed1a47c94f6b03c",
          "sha256": "578aef7579fb25a3f4beb5b3e1c0644c43cd18a6d4c446696eea1c82130c9403"
        },
        "downloads": -1,
        "filename": "default_mutable-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84cc86a2390b76e3bed1a47c94f6b03c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3,<4",
        "size": 5201,
        "upload_time": "2022-03-10T05:31:41",
        "upload_time_iso_8601": "2022-03-10T05:31:41.445173Z",
        "url": "https://files.pythonhosted.org/packages/85/cb/ebc03758753e537b7d7a929532eef558ed22452b5506c3322fb07fd06e62/default_mutable-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15b8f697a35b5df1a73cfb0958c4788f26e51e8bc940ce3fe49840bac7e701cc",
          "md5": "b4efb524e711fd9ea0d8c3647c1a9893",
          "sha256": "65a122fa1219efdc1cf2075468d32fb329ec2ab75271b48e5b91b3b1b5f24ea3"
        },
        "downloads": -1,
        "filename": "default_mutable-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b4efb524e711fd9ea0d8c3647c1a9893",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3,<4",
        "size": 4893,
        "upload_time": "2022-03-10T05:31:44",
        "upload_time_iso_8601": "2022-03-10T05:31:44.213082Z",
        "url": "https://files.pythonhosted.org/packages/15/b8/f697a35b5df1a73cfb0958c4788f26e51e8bc940ce3fe49840bac7e701cc/default_mutable-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "85cbebc03758753e537b7d7a929532eef558ed22452b5506c3322fb07fd06e62",
        "md5": "84cc86a2390b76e3bed1a47c94f6b03c",
        "sha256": "578aef7579fb25a3f4beb5b3e1c0644c43cd18a6d4c446696eea1c82130c9403"
      },
      "downloads": -1,
      "filename": "default_mutable-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "84cc86a2390b76e3bed1a47c94f6b03c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3,<4",
      "size": 5201,
      "upload_time": "2022-03-10T05:31:41",
      "upload_time_iso_8601": "2022-03-10T05:31:41.445173Z",
      "url": "https://files.pythonhosted.org/packages/85/cb/ebc03758753e537b7d7a929532eef558ed22452b5506c3322fb07fd06e62/default_mutable-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "15b8f697a35b5df1a73cfb0958c4788f26e51e8bc940ce3fe49840bac7e701cc",
        "md5": "b4efb524e711fd9ea0d8c3647c1a9893",
        "sha256": "65a122fa1219efdc1cf2075468d32fb329ec2ab75271b48e5b91b3b1b5f24ea3"
      },
      "downloads": -1,
      "filename": "default_mutable-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b4efb524e711fd9ea0d8c3647c1a9893",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3,<4",
      "size": 4893,
      "upload_time": "2022-03-10T05:31:44",
      "upload_time_iso_8601": "2022-03-10T05:31:44.213082Z",
      "url": "https://files.pythonhosted.org/packages/15/b8/f697a35b5df1a73cfb0958c4788f26e51e8bc940ce3fe49840bac7e701cc/default_mutable-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}