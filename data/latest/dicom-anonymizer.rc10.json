{
  "info": {
    "author": "Laurenn Lam",
    "author_email": "laurenn.lam@kitware.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# DicomAnonymizer\n\nPython package to anonymize DICOM files.\nThe anonymization answer to the standard . More information about dicom fields for anonymization can be found [here](http://dicom.nema.org/dicom/2013/output/chtml/part15/chapter_E.html#table_E.1-1).\n\nThe default behaviour of this package is to anonymize DICOM fields referenced in [dicomfields](dicomanonymizer/dicomfields.py).\n\nDicom fields are separated into different groups. Each groups will be anonymized in a different way.\n\n| Group | Action | Action definition |\n| --- | --- | --- |\n| D_TAGS | replace | Replace with a non-zero length value that may be a dummy value and consistent with the VR** |\n| Z_TAGS | empty | Replace with a zero length value, or a non-zero length value that may be a dummy value and consistent with the VR** |\n| X_TAGS | delete | Completely remove the tag |\n| U_TAGS | replace_UID | Replace all UID's number with a random one in order to keep consistent. Same UID will have the same replaced value |\n| Z_D_TAGS | empty_or_replace | Replace with a non-zero length value that may be a dummy value and consistent with the VR** |\n| X_Z_TAGS | delete_or_empty | Replace with a zero length value, or a non-zero length value that may be a dummy value and consistent with the VR** |\n| X_D_TAGS | delete_or_replace | Replace with a non-zero length value that may be a dummy value and consistent with the VR** |\n| X_Z_D_TAGS | delete_or_empty_or_replace | Replace with a non-zero length value that may be a dummy value and consistent with the VR** |\n| X_Z_U_STAR_TAGS | delete_or_empty_or_replace_UID | If it's a UID, then all numbers are randomly replaced. Else, replace with a zero length value, or a non-zero length value that may be a dummy value and consistent with the VR**|\n| ALL_TAGS | | Contains all previous defined tags\n\n\n# How to build it ?\n\nThe sources files can be packaged by using:\n`python ./setup.py bdist_wheel`\n\nThis command will generate a wheel package in `dist` folder which can be then installed as a python package using\n`pip install ./dist/dicom_anonymizer-1.0.7-py2.py3-none-any.whl`\n\nInstalling this package will also install an executable named `dicom-anonymizer`. In order to use it, please refer to the next section.\n\n\n\n# How to use it ?\n\nThis package allows to anonymize a selection of DICOM field (defined or overrided).\nThe way on how the DICOM fields are anonymized can also be overrided.\n\n- **[required]** InputPath = Full path to a single DICOM image or to a folder which contains dicom files\n- **[required]** OutputPath = Full path to the anonymized DICOM image or to a folder. This folder has to exist.\n- [optional] ActionName = Defined an action name that will be applied to the DICOM tag.\n- [optional] Dictionary = Path to a JSON file which defines actions that will be applied on specific dicom tags (see below)\n\n\n\n## Default behaviour\n\nYou can use the default anonymization behaviour describe above.\n\n```python\ndicom-anonymizer Input Output\n```\n\n\n## Private tags\n\nDefault behavior of the dicom anonymizer is to delete private tags.\nBut you can bypass it:\n- Solution 1: Use regexp to define which private tag you want to keep/update (cf [custom rules](#custom-rules))\n- Solution 2: Use dicom-anonymizer.exe option to keep all private tags : `--keepPrivateTags`\n\n\n\n## Custom rules\nYou can manually add new rules in order to have different behaviors with certain tags.\nThis will allow you to override default rules:\n\n**Executable**:\n```python\ndicom-anonymizer InputFilePath OutputFilePath -t '(0x0001, 0x0001)' ActionName -t '(0x0001, 0x0005)' ActionName2\n```\nThis will apply the `ActionName` to the tag `'(0x0001, 0x0001)'` and `ActionName2` to `'(0x0001, 0x0005)'`\n\n**Note**: ActionName has to be defined in [actions list](#actions-list)\n\nExample 1: The default behavior of the patient's ID is to be replaced by an empty or null value. If you want to keep this value, then you'll have to run :\n```python\npython anonymizer.py InputFilePath OutputFilePath -t '(0x0010, 0x0020)' keep\n```\nThis command will override the default behavior executed on this tag and the patient's ID will be kept.\n\nExample 2: We just want to change the study date from 20080701 to 20080000, then we'll use the regexp\n```python\npython anonymizer.py InputFilePath OutputFilePath -t '(0x0008, 0x0020)' 'regexp' '0701$' '0000'\n```\n\n\n## Custom rules with dictionary file\n\nInstead of having a big command line with several new actions, you can create your own dictionary by creating a json file `dictionary.json` :\n```json\n{\n    \"(0x0002, 0x0002)\": \"ActionName\",\n    \"(0x0003, 0x0003)\": \"ActionName\",\n    \"(0x0004, 0x0004)\": \"ActionName\",\n    \"(0x0005, 0x0005)\": \"ActionName\"\n}\n```\nSame as before, the `ActionName` has to be defined in the [actions list](#actions-list).\n\n```python\ndicom-anonymizer InputFilePath OutputFilePath --dictionary dictionary.json\n```\n\nIf you want to use the **regexp** action in a dictionary:\n```json\n{\n    \"(0x0002, 0x0002)\": \"ActionName\",\n    \"(0x0008, 0x0020)\": {\n        \"action\": \"regexp\",\n        \"find\": \"0701$\",\n        \"replace\": \"0000\"\n    }\n}\n```\n\n## Custom/overrides actions\n\nHere is a small example which keeps all metadata but updates the series description\nby adding a suffix passed as a parameter.\n```python\nimport argparse\nfrom dicomanonymizer import *\n\ndef main():\n    parser = argparse.ArgumentParser(add_help=True)\n    parser.add_argument('input', help='Path to the input dicom file or input directory which contains dicom files')\n    parser.add_argument('output', help='Path to the output dicom file or output directory which will contains dicom files')\n    parser.add_argument('--suffix', action='store', help='Suffix that will be added at the end of series description')\n    args = parser.parse_args()\n\n    input_dicom_path = args.input\n    output_dicom_path = args.output\n\n    extraAnonymizationRules = {}\n\n    def setupSeriesDescription(dataset, tag):\n        element = dataset.get(tag)\n        if element is not None:\n            element.value = element.value + '-' + args.suffix\n\n    # ALL_TAGS variable is defined on file dicomfields.py\n    # the 'keep' method is already defined into the dicom-anonymizer\n    # It will overrides the default behaviour\n    for i in allTags:\n        extraAnonymizationRules[i] = keep\n\n    if args.suffix:\n        extraAnonymizationRules[(0x0008, 0x103E)] = setupSeriesDescription\n\n    # Launch the anonymization\n    anonymize(input_dicom_path, output_dicom_path, extraAnonymizationRules)\n\nif __name__ == \"__main__\":\n    main()\n```\n\nIn your own file, you'll have to define:\n- Your custom functions. Be careful, your functions always have in inputs a dataset and a tag\n- A dictionary which map your functions to a tag\n\n## Anonymize dicom tags without dicom file\n\nIf for some reason, you need to anonymize dicom fields without initial dicom file (extracted from a database for example). Here is how you can do it:\n```python\nfrom dicomanonymizer import *\n\ndef main():\n\n  # Create a list of tags object that should contains id, type and value\n  fields = [\n    { # Replaced by Anonymized\n      'id': (0x0040, 0xA123),\n      'type': 'LO',\n      'value': 'Annie de la Fontaine',\n    },\n    { # Replaced with empty value\n      'id': (0x0008, 0x0050),\n      'type': 'TM',\n      'value': 'bar',\n    },\n    { # Deleted\n      'id': (0x0018, 0x4000),\n      'type': 'VR',\n      'value': 'foo',\n    }\n  ]\n\n  # Create a readable dataset for pydicom\n  data = pydicom.Dataset()\n\n  # Add each field into the dataset\n  for field in fields:\n    data.add_new(field['id'], field['type'], field['value'])\n\n  anonymize_dataset(data)\n\nif __name__ == \"__main__\":\n    main()\n```\nFor more information about the pydicom's Dataset, please refer [here](https://github.com/pydicom/pydicom/blob/995ac6493188313f6a2e6355477baba9f543447b/pydicom/dataset.py).\nYou can also add a dictionnary as previously :\n```python\n    dictionary = {}\n\n    def newMethod(dataset, tag):\n        element = dataset.get(tag)\n        if element is not None:\n            element.value = element.value + '- generated with new method'\n\n    dictionary[(0x0008, 0x103E)] = newMethod\n    anonymize_dataset(data, dictionary)\n```\n\n# Actions list\n\n| Action | Action definition |\n| --- | --- |\n| empty | Replace with a zero length value, or a non-zero length value that may be a dummy value and consistent with the VR** |\n| delete | Completely remove the tag |\n| keep | Do nothing on the tag |\n| clean | Don't use it for now. This is not implemented |\n| replace_UID | Replace all UID's number with a random one in order to keep consistent. Same UID will have the same replaced value |\n| empty_or_replace | Replace with a non-zero length value that may be a dummy value and consistent with the VR** |\n| delete_or_empty | Replace with a zero length value, or a non-zero length value that may be a dummy value and consistent with the VR** |\n| delete_or_replace | Replace with a non-zero length value that may be a dummy value and consistent with the VR** |\n| deleteOrEmplyOrReplace | Replace with a non-zero length value that may be a dummy value and consistent with the VR** |\n| delete_or_empty_or_replace_UID | If it's a UID, then all numbers are randomly replaced. Else, replace with a zero length value, or a non-zero length value that may be a dummy value and consistent with the VR** |\n|regexp| These action is not a common action. It allows to use regexp to modify values|\n\n\n** VR: Value Representation\n\nWork originally done by Edern Haumont\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/KitwareMedical/dicom-anonymizer",
    "keywords": "dicom anonymizer medical",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dicom-anonymizer",
    "package_url": "https://pypi.org/project/dicom-anonymizer/",
    "platform": "",
    "project_url": "https://pypi.org/project/dicom-anonymizer/",
    "project_urls": {
      "Homepage": "https://github.com/KitwareMedical/dicom-anonymizer"
    },
    "release_url": "https://pypi.org/project/dicom-anonymizer/1.0.10/",
    "requires_dist": [
      "pydicom",
      "tqdm"
    ],
    "requires_python": "",
    "summary": "Program to anonymize dicom files with default and custom rules",
    "version": "1.0.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17302142,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e4f20a8d560f14eb085af2b6e81011df76633e24e39d4c24289b504aff7f1a3",
          "md5": "826a2c6b3195d0c1f0abe090180c5961",
          "sha256": "054aba7cf4cf72fc5037cb1ba3f0c2ee8167b30c52a366f16879470ee6d85c53"
        },
        "downloads": -1,
        "filename": "dicom_anonymizer-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "826a2c6b3195d0c1f0abe090180c5961",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11525,
        "upload_time": "2020-01-30T11:40:37",
        "upload_time_iso_8601": "2020-01-30T11:40:37.970316Z",
        "url": "https://files.pythonhosted.org/packages/5e/4f/20a8d560f14eb085af2b6e81011df76633e24e39d4c24289b504aff7f1a3/dicom_anonymizer-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fdf24420acbaf7136af06b3fcee1db15376f86f772887606c928a54d9becc21",
          "md5": "bd6e060cfb6a98cd666c48260ced2ec2",
          "sha256": "120105cd2a44ebdee444b358173b9cf587fcb5aa992adaa48e2d2a66bcf8fa4d"
        },
        "downloads": -1,
        "filename": "dicom_anonymizer-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bd6e060cfb6a98cd666c48260ced2ec2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11162,
        "upload_time": "2020-01-30T11:40:41",
        "upload_time_iso_8601": "2020-01-30T11:40:41.025625Z",
        "url": "https://files.pythonhosted.org/packages/5f/df/24420acbaf7136af06b3fcee1db15376f86f772887606c928a54d9becc21/dicom_anonymizer-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81ce5649fbc15443791d154889eca7c647743e4aa84db9a88e89c747873ddcd5",
          "md5": "8c3388ddcc29413297d6d9b16c4b7749",
          "sha256": "d75fb2e8da8fdf75455f76e943684906cb430a2d8289edbbff420dd0295a1e0b"
        },
        "downloads": -1,
        "filename": "dicom_anonymizer-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c3388ddcc29413297d6d9b16c4b7749",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11913,
        "upload_time": "2020-02-04T15:08:35",
        "upload_time_iso_8601": "2020-02-04T15:08:35.076073Z",
        "url": "https://files.pythonhosted.org/packages/81/ce/5649fbc15443791d154889eca7c647743e4aa84db9a88e89c747873ddcd5/dicom_anonymizer-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09131f78f4cd83467e74b8f25d7aa4ec8e6609048589b994d911c12e22d47c21",
          "md5": "5a1068628a248c01a5b741c84cc5ffba",
          "sha256": "78be83a44957b23561a1096736216c1a7d9e0dc1c6ef6c2bee04d91b0784b8d2"
        },
        "downloads": -1,
        "filename": "dicom_anonymizer-1.0.10-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a1068628a248c01a5b741c84cc5ffba",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 15464,
        "upload_time": "2021-06-01T13:28:28",
        "upload_time_iso_8601": "2021-06-01T13:28:28.918795Z",
        "url": "https://files.pythonhosted.org/packages/09/13/1f78f4cd83467e74b8f25d7aa4ec8e6609048589b994d911c12e22d47c21/dicom_anonymizer-1.0.10-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24bb1ac82ce3ce4af312c57cf8e80b74f740970985b7e0f3c4d5bdc4ed02105b",
          "md5": "bee610c63f989aca09a2a0a4f29a84e0",
          "sha256": "fcb8e3e50e19401e1c89380f20606c41f7da7a676771dc94119b7f710405e3ac"
        },
        "downloads": -1,
        "filename": "dicom_anonymizer-1.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bee610c63f989aca09a2a0a4f29a84e0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11890,
        "upload_time": "2020-02-04T17:01:36",
        "upload_time_iso_8601": "2020-02-04T17:01:36.251571Z",
        "url": "https://files.pythonhosted.org/packages/24/bb/1ac82ce3ce4af312c57cf8e80b74f740970985b7e0f3c4d5bdc4ed02105b/dicom_anonymizer-1.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17355957ff761ccff923b794ce02abd53b12836a32870c5d17ad2aafa9c01ab2",
          "md5": "016463180c0f5035955ae7480c341b55",
          "sha256": "9b62a3bb85e99daff0cd1b128335208cb62f27ddbae19ff46a1942cdca966abd"
        },
        "downloads": -1,
        "filename": "dicom_anonymizer-1.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "016463180c0f5035955ae7480c341b55",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 12221,
        "upload_time": "2020-02-06T15:22:38",
        "upload_time_iso_8601": "2020-02-06T15:22:38.346399Z",
        "url": "https://files.pythonhosted.org/packages/17/35/5957ff761ccff923b794ce02abd53b12836a32870c5d17ad2aafa9c01ab2/dicom_anonymizer-1.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f9d86723dc14c8c6b2b4838f140b5fd44590976117706da8334c2ae58675128",
          "md5": "bd9af8812a52861af6443e0c8581835d",
          "sha256": "ab9eb745d45de6017387250290967013e3f37edee9fcdeba6575e294216ded47"
        },
        "downloads": -1,
        "filename": "dicom_anonymizer-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "bd9af8812a52861af6443e0c8581835d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10918,
        "upload_time": "2020-02-06T15:22:54",
        "upload_time_iso_8601": "2020-02-06T15:22:54.027464Z",
        "url": "https://files.pythonhosted.org/packages/9f/9d/86723dc14c8c6b2b4838f140b5fd44590976117706da8334c2ae58675128/dicom_anonymizer-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79b192ceed73b318bbd6ded3fc13438fedcf8d9f0bfdc2f19d6165c07ac32b01",
          "md5": "5276f50d7722d08cc961a28af462cf86",
          "sha256": "c874f679d6cabf1469c8d5a57d6c90d7fff528ce85a37a562003d3f44d10fe61"
        },
        "downloads": -1,
        "filename": "dicom_anonymizer-1.0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5276f50d7722d08cc961a28af462cf86",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11892,
        "upload_time": "2020-02-25T10:14:54",
        "upload_time_iso_8601": "2020-02-25T10:14:54.783433Z",
        "url": "https://files.pythonhosted.org/packages/79/b1/92ceed73b318bbd6ded3fc13438fedcf8d9f0bfdc2f19d6165c07ac32b01/dicom_anonymizer-1.0.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b45a3eb3853b8b9a749457e3e540306b537b64f8866de7758719cdf539e7176b",
          "md5": "32f08164d7fcc70f41c14f930e6d2d42",
          "sha256": "9eab47b3be848d8fa27b61f379c231ff33f1d37ac7931eac457053da1adb7856"
        },
        "downloads": -1,
        "filename": "dicom_anonymizer-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "32f08164d7fcc70f41c14f930e6d2d42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11478,
        "upload_time": "2020-02-25T10:15:15",
        "upload_time_iso_8601": "2020-02-25T10:15:15.148780Z",
        "url": "https://files.pythonhosted.org/packages/b4/5a/3eb3853b8b9a749457e3e540306b537b64f8866de7758719cdf539e7176b/dicom_anonymizer-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c3ccb75ee5305a1e60de6f26789d9e912148047972361a5ac3835f32e416f3a",
          "md5": "066b4e715c0854c9bb5c7aa0a84ef0f6",
          "sha256": "f77567bee0592ab36a4c8aec86cf9ace0184a5e1a1862906935b8b202b2ff9b2"
        },
        "downloads": -1,
        "filename": "dicom_anonymizer-1.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "066b4e715c0854c9bb5c7aa0a84ef0f6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11890,
        "upload_time": "2020-02-25T10:43:07",
        "upload_time_iso_8601": "2020-02-25T10:43:07.071574Z",
        "url": "https://files.pythonhosted.org/packages/8c/3c/cb75ee5305a1e60de6f26789d9e912148047972361a5ac3835f32e416f3a/dicom_anonymizer-1.0.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17fc68d09a1abbc0806ff46bb085b0c8940d612e11753c5384296296e6f09caf",
          "md5": "c192c5024c766d2b771b469c98a3123a",
          "sha256": "1dd3e8e5fbe99009cc31365f77a052c17ce268da88638925748c4adc181d95e1"
        },
        "downloads": -1,
        "filename": "dicom_anonymizer-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "c192c5024c766d2b771b469c98a3123a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11463,
        "upload_time": "2020-02-25T10:43:09",
        "upload_time_iso_8601": "2020-02-25T10:43:09.762502Z",
        "url": "https://files.pythonhosted.org/packages/17/fc/68d09a1abbc0806ff46bb085b0c8940d612e11753c5384296296e6f09caf/dicom_anonymizer-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b87c2ccb14d0068a42b941a1bcbdfd1db1a631dcdf9ae5d6bea8ef69eb00f4b0",
          "md5": "dec0e3230af710b0b820e5ed826cc47f",
          "sha256": "b8a90e750a3969836b7233aa7b22340f02c1410e754e12bb828500373a9af639"
        },
        "downloads": -1,
        "filename": "dicom_anonymizer-1.0.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dec0e3230af710b0b820e5ed826cc47f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 13041,
        "upload_time": "2020-11-05T12:42:40",
        "upload_time_iso_8601": "2020-11-05T12:42:40.323059Z",
        "url": "https://files.pythonhosted.org/packages/b8/7c/2ccb14d0068a42b941a1bcbdfd1db1a631dcdf9ae5d6bea8ef69eb00f4b0/dicom_anonymizer-1.0.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6779c4dfd76c088c02702d910e46cb2be48b4926bb713cf5784b406dcebfa4a1",
          "md5": "b21d0ac7218c23e860da3b8080d4c00a",
          "sha256": "62ad0ca4ed7e67dbd07fea27ce4e0a539c660658619f3cdd54041d1db8ed0f06"
        },
        "downloads": -1,
        "filename": "dicom_anonymizer-1.0.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b21d0ac7218c23e860da3b8080d4c00a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 14734,
        "upload_time": "2021-03-16T08:31:24",
        "upload_time_iso_8601": "2021-03-16T08:31:24.364894Z",
        "url": "https://files.pythonhosted.org/packages/67/79/c4dfd76c088c02702d910e46cb2be48b4926bb713cf5784b406dcebfa4a1/dicom_anonymizer-1.0.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fff2300691c34d02b573d6dd38eaf510103b79cffdb0144b37a935375710ee27",
          "md5": "250e1fc729fce3dce5ba6b381b22a32f",
          "sha256": "551e4ac60735509d97aa6844286b31a67376004c23c2d38969aeca85b9a39d01"
        },
        "downloads": -1,
        "filename": "dicom_anonymizer-1.0.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "250e1fc729fce3dce5ba6b381b22a32f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 15346,
        "upload_time": "2021-04-01T15:46:17",
        "upload_time_iso_8601": "2021-04-01T15:46:17.976633Z",
        "url": "https://files.pythonhosted.org/packages/ff/f2/300691c34d02b573d6dd38eaf510103b79cffdb0144b37a935375710ee27/dicom_anonymizer-1.0.9-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2d36adcfcbf5847a7fc5c3609535ec58c4e6fc16c9b8778da3686b4819001ee",
          "md5": "5ecd5bce9a7b05e5362cc5571e9eaf68",
          "sha256": "15d6cc98e3899288dfb9b6081a18d991e25a0e28d4ee0a1407de56ff10154ca9"
        },
        "downloads": -1,
        "filename": "dicom_anonymizer-1.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "5ecd5bce9a7b05e5362cc5571e9eaf68",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15910,
        "upload_time": "2023-03-15T11:12:38",
        "upload_time_iso_8601": "2023-03-15T11:12:38.549670Z",
        "url": "https://files.pythonhosted.org/packages/a2/d3/6adcfcbf5847a7fc5c3609535ec58c4e6fc16c9b8778da3686b4819001ee/dicom_anonymizer-1.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "09131f78f4cd83467e74b8f25d7aa4ec8e6609048589b994d911c12e22d47c21",
        "md5": "5a1068628a248c01a5b741c84cc5ffba",
        "sha256": "78be83a44957b23561a1096736216c1a7d9e0dc1c6ef6c2bee04d91b0784b8d2"
      },
      "downloads": -1,
      "filename": "dicom_anonymizer-1.0.10-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5a1068628a248c01a5b741c84cc5ffba",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 15464,
      "upload_time": "2021-06-01T13:28:28",
      "upload_time_iso_8601": "2021-06-01T13:28:28.918795Z",
      "url": "https://files.pythonhosted.org/packages/09/13/1f78f4cd83467e74b8f25d7aa4ec8e6609048589b994d911c12e22d47c21/dicom_anonymizer-1.0.10-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}