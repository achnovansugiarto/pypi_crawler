{
  "info": {
    "author": "yfauser",
    "author_email": "yfauser@yahoo.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Topic :: Utilities"
    ],
    "description": "Max Open Window Notifier\n========================\n\nThis little script (daemon) will poll for the status of all window\nsensors known to a MAX Cube system (http://www.eq-3.de) and check for\nopen windows.\n\nIt will then check the temperature at the location of your house using\nOpen Weather Map (http://openweathermap.org), and if the temperature is\nbellow a specified threshold it will send a notification using a\nnotifier plugin.\n\nToday the only available notifier plugin is using the Pushover service\n(https://pushover.net) to send notifications e.g. to mobile phones.\n\nIt has been created to safe energy by reminding you to close your\nwindows after ventilation.\n\nInstallation\n------------\n\nMax Open Window Notifier can be installed using PIP\n\n.. code:: bash\n\n    sudo pip install maxwindownotify\n\nUsage\n~~~~~\n\nYou can use the CLI help function to get the details on how to start the\ndaemon, and what options are available:\n\n.. code:: bash\n\n    $ maxwindownotify --help\n    usage: maxwindownotify.py [-h] [-i INTERVAL] [-n NETWORK] [-c CITY]\n                              [-t THRESHOLD] -k OWMAPPID [-s] [-u USER] [-p TOKEN]\n                              [-v]\n\n    This deamon polls the MAX Cube for all window status. If a window is open\n    longer than twice the poll interval a notification will be sent using the\n    notifier plugin\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -i INTERVAL, --interval INTERVAL\n                            polling interval in minutes (default 30 minutes)\n      -n NETWORK, --network NETWORK\n                            Network Address to send search broadcast for MAX Cube\n                            (default 192.168.178.0/24)\n      -c CITY, --city CITY  the city name or code in OpenWeatherMap to retrieve\n                            the outside temperature from (default Munich, Germany)\n      -t THRESHOLD, --threshold THRESHOLD\n                            the temperature threshold for suppressing\n                            notifications (default: 12C)\n      -k OWMAPPID, --owmappid OWMAPPID\n                            the API Key (APPID) to authenticate with Open Weather\n                            Map\n      -s, --simulation      randomly simulate open windows\n      -u USER, --user USER  the username (or user key) used for the notifier\n                            module\n      -p TOKEN, --token TOKEN\n                            the password (or app token) used for the notifier\n                            module\n      -v, --verbose         increase output verbosity\n\n    As an alternative to the commandline, params can be placed in a file, one per\n    line, and specified on the commandline like 'maxwindownotify.py @params.conf'.\n\nExample:\n\n.. code:: bash\n\n    maxwindownotify -k 82k4v1b99s41212e5bf5490432bb89f4 -u abcCKnM9uYhjng3kLV6czGFUsmZ76D -p ahxYZcjhXT6P5zDt265LGyuLVaDQNx -i 15 -c Berlin -t 8",
    "description_content_type": null,
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/yfauser/maxwindownotify",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "maxwindownotify",
    "package_url": "https://pypi.org/project/maxwindownotify/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/maxwindownotify/",
    "project_urls": {
      "Homepage": "http://github.com/yfauser/maxwindownotify"
    },
    "release_url": "https://pypi.org/project/maxwindownotify/1.1.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "This little script (daemon) will poll for the status of all window sensors known to a MAX Cube system and check for open windows",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1884235,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ecfc1271bc018f7da07a7f5421f83562e3078d92d25eef9aaec22a2627018a8",
          "md5": "d525c3c688a66f6f52dacaff342961d2",
          "sha256": "f9024f15e1666461099e9915c0094f71b9b14d3310ebc87cad1014c3913d3722"
        },
        "downloads": -1,
        "filename": "maxwindownotify-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d525c3c688a66f6f52dacaff342961d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10029,
        "upload_time": "2015-12-27T20:53:59",
        "upload_time_iso_8601": "2015-12-27T20:53:59.607682Z",
        "url": "https://files.pythonhosted.org/packages/8e/cf/c1271bc018f7da07a7f5421f83562e3078d92d25eef9aaec22a2627018a8/maxwindownotify-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a87c467f7ab59d1f204a824be9baf874d97b5b19c2af49d23760003ed01d81d",
          "md5": "9fbe800ba9db61799638f0ce21f7ea23",
          "sha256": "7d110deb817ee06b76cec18b62fa962349802f2eb9e84d4151826e51a64e579f"
        },
        "downloads": -1,
        "filename": "maxwindownotify-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9fbe800ba9db61799638f0ce21f7ea23",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10300,
        "upload_time": "2015-12-29T19:15:53",
        "upload_time_iso_8601": "2015-12-29T19:15:53.703271Z",
        "url": "https://files.pythonhosted.org/packages/5a/87/c467f7ab59d1f204a824be9baf874d97b5b19c2af49d23760003ed01d81d/maxwindownotify-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eff76bdee202e04fe848ad2f0db03257c7e01cde3e6a6d3524f408e9b894d043",
          "md5": "235771e4c33fcb8e6a4d8f4d617fc39b",
          "sha256": "924951fbb5870d43c84335256d716a80642d9187fdf3f9c6fcf534ab2b9d26d7"
        },
        "downloads": -1,
        "filename": "maxwindownotify-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "235771e4c33fcb8e6a4d8f4d617fc39b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10269,
        "upload_time": "2016-01-01T10:25:47",
        "upload_time_iso_8601": "2016-01-01T10:25:47.009874Z",
        "url": "https://files.pythonhosted.org/packages/ef/f7/6bdee202e04fe848ad2f0db03257c7e01cde3e6a6d3524f408e9b894d043/maxwindownotify-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eff76bdee202e04fe848ad2f0db03257c7e01cde3e6a6d3524f408e9b894d043",
        "md5": "235771e4c33fcb8e6a4d8f4d617fc39b",
        "sha256": "924951fbb5870d43c84335256d716a80642d9187fdf3f9c6fcf534ab2b9d26d7"
      },
      "downloads": -1,
      "filename": "maxwindownotify-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "235771e4c33fcb8e6a4d8f4d617fc39b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10269,
      "upload_time": "2016-01-01T10:25:47",
      "upload_time_iso_8601": "2016-01-01T10:25:47.009874Z",
      "url": "https://files.pythonhosted.org/packages/ef/f7/6bdee202e04fe848ad2f0db03257c7e01cde3e6a6d3524f408e9b894d043/maxwindownotify-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}