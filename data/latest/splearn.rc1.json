{
  "info": {
    "author": "Jingles",
    "author_email": "jinglescode@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Python Signal Processing\n\nSignal processing can be daunting; this repo contains tutorials on understanding and applying signal processing using NumPy and PyTorch.\n\n**splearn** is a package for signal processing and machine learning with Python. It is built on top of [NumPy](https://numpy.org) and [SciPy](https://www.scipy.org), to provide easy to use functions from common signal processing tasks to machine learning. \n\n## Table of Contents\n\n- [Tutorials](#tutorials)\n- [Getting Started](#getting-started)\n- [Disclaimer on Datasets](#disclaimer-on-datasets)\n\n--- \n\n## Tutorials\n\nWe aim to bridge the gap for anyone who are new signal processings to get started, check out the [tutorials](https://github.com/jinglescode/python-signal-processing/tree/master/tutorials) to get started on signal processings.\n\n### 1. Signal composition (time, sampling rate and frequency)\n\nIn order to begin the signal processing adventure, we need to understand what we are dealing with. In the first tutorial, we will uncover what is a signal, and what it is made up of. We will look at how the sampling rate and frequency can affect a signal. We will also see what happens when we combine multiple signals of different frequencies.\n\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/jinglescode/python-signal-processing/blob/master/tutorials/Signal%20composition%20-%20time%2C%20sampling%20rate%20and%20frequency.ipynb)\n\n### 2. Fourier Transform\n\nIn the first tutorial, we learned that combining multiple signals will produce a new signal where all the frequencies are jumbled up. In this tutorial, we will learn about Fourier Transform and how it can take a complex signal and decompose it to the frequencies that made it up.\n\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/jinglescode/python-signal-processing/blob/master/tutorials/Fourier%20Transform.ipynb)\n\n### 3. Denoising with mean-smooth filter\n\nHow can we apply the simplest filter to perform denoising? Introduce the running mean filter; we can remove noise that is normally distributed relative to the signal of interest.\n\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/jinglescode/python-signal-processing/blob/master/tutorials/Denoising%20with%20mean-smooth%20filter.ipynb)\n\n## Getting Started\n\n### Installation\n\nCurrently, this has not been released. Use Git or checkout with SVN, and install the dependencies:\n\n```\ngit clone https://github.com/jinglescode/python-signal-processing.git\npip install -r requirements.txt\n```\n\n### Dependencies\n\nSee [requirements.txt](https://github.com/jinglescode/python-signal-processing/tree/master/requirements.txt).\n\n### Usage\n\nLet's generate a 2D-signal, sampled at 100-Hz. Design and apply a 4th-order bandpass Butterworth filter with a cutoff frequency between 5-Hz and 20-Hz.\n\n```python\nfrom splearn.data.generate import signal\nfrom splearn.filter.butter import butter_bandpass\n\nsignal_2d = signal(\n    length_seconds=4, \n    sampling_rate=100, \n    frequencies=[[4,7,11,17,40, 50],[1, 3]],\n    plot=True\n)\n\nsignal_2d_filtered = butter_bandpass(\n    signal=signal_2d, \n    lowcut=5, \n    highcut=20, \n    sample_rate=100,\n    type='sos',\n    order=4, \n    plot=True,\n    plot_xlim=[3,20]\n)\n```\n\n## Disclaimer on Datasets\n\nWe do not host or distribute these datasets, vouch for their quality or fairness, or claim that you have license to use the dataset. It is your responsibility to determine whether you have permission to use the dataset under the dataset's license.\n\nIf you're a dataset owner and wish to update any part of it (description, citation, etc.), or do not want your dataset to be included in this library, please get in touch through a GitHub issue. Thanks for your contribution to the ML community!\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jinglescode/python-signal-processing",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "splearn",
    "package_url": "https://pypi.org/project/splearn/",
    "platform": "",
    "project_url": "https://pypi.org/project/splearn/",
    "project_urls": {
      "Homepage": "https://github.com/jinglescode/python-signal-processing"
    },
    "release_url": "https://pypi.org/project/splearn/0.1a1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "splearn: package for signal processing and machine learning with Python.",
    "version": "0.1a1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8776918,
  "releases": {
    "0.1a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5949ac6754c468943f53ffbf80752a93ce398d38ee75cf9e16a2b1fd5314662",
          "md5": "70ea9b4b4c89ead0f8ae219ec41ea3b7",
          "sha256": "8cb749aa4f83767c559dc0b9b2a9f7125a17525d6ffc9c9e29eab81244e2ff11"
        },
        "downloads": -1,
        "filename": "splearn-0.1a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70ea9b4b4c89ead0f8ae219ec41ea3b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9110,
        "upload_time": "2020-11-30T03:16:25",
        "upload_time_iso_8601": "2020-11-30T03:16:25.162960Z",
        "url": "https://files.pythonhosted.org/packages/f5/94/9ac6754c468943f53ffbf80752a93ce398d38ee75cf9e16a2b1fd5314662/splearn-0.1a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f134afb9cb07e3cfbd28ae5597deb6d33e416abaedfee700acc87e39fc59b42",
          "md5": "8d18e7de6f96391fd04310f5075430ab",
          "sha256": "dd7a47bcdc180ad5be9d79c61f1d2f9ecce2ce77942c0254217b4a0761d8302b"
        },
        "downloads": -1,
        "filename": "splearn-0.1a1.tar.gz",
        "has_sig": false,
        "md5_digest": "8d18e7de6f96391fd04310f5075430ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8452,
        "upload_time": "2020-11-30T03:16:27",
        "upload_time_iso_8601": "2020-11-30T03:16:27.070244Z",
        "url": "https://files.pythonhosted.org/packages/0f/13/4afb9cb07e3cfbd28ae5597deb6d33e416abaedfee700acc87e39fc59b42/splearn-0.1a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f5949ac6754c468943f53ffbf80752a93ce398d38ee75cf9e16a2b1fd5314662",
        "md5": "70ea9b4b4c89ead0f8ae219ec41ea3b7",
        "sha256": "8cb749aa4f83767c559dc0b9b2a9f7125a17525d6ffc9c9e29eab81244e2ff11"
      },
      "downloads": -1,
      "filename": "splearn-0.1a1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "70ea9b4b4c89ead0f8ae219ec41ea3b7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9110,
      "upload_time": "2020-11-30T03:16:25",
      "upload_time_iso_8601": "2020-11-30T03:16:25.162960Z",
      "url": "https://files.pythonhosted.org/packages/f5/94/9ac6754c468943f53ffbf80752a93ce398d38ee75cf9e16a2b1fd5314662/splearn-0.1a1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f134afb9cb07e3cfbd28ae5597deb6d33e416abaedfee700acc87e39fc59b42",
        "md5": "8d18e7de6f96391fd04310f5075430ab",
        "sha256": "dd7a47bcdc180ad5be9d79c61f1d2f9ecce2ce77942c0254217b4a0761d8302b"
      },
      "downloads": -1,
      "filename": "splearn-0.1a1.tar.gz",
      "has_sig": false,
      "md5_digest": "8d18e7de6f96391fd04310f5075430ab",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8452,
      "upload_time": "2020-11-30T03:16:27",
      "upload_time_iso_8601": "2020-11-30T03:16:27.070244Z",
      "url": "https://files.pythonhosted.org/packages/0f/13/4afb9cb07e3cfbd28ae5597deb6d33e416abaedfee700acc87e39fc59b42/splearn-0.1a1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}