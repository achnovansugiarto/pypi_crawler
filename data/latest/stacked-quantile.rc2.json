{
  "info": {
    "author": "Shay Hill",
    "author_email": "shay_public@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# stacked_quantile\n\n'Stacked' quantile functions. Close to weighted quantile functions.\n\nThese functions are used to calculate quantiles of a set of values, where each value\nhas a weight. The typical process for calculating a weighted quantile is to create a\nCDF from the weights, then interpolate the values to find the quantile.\n\nThese functions, however, treat weighted values (given integer weights) exactly as\nmultiple values.\n\nSo, values `(1, 2, 3)` with weights `(4, 5, 6)` will be treated as\n\n```\n(1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3)\n```\n\nIf the quantile falls exactly between\ntwo values, the non-weighted average of the two values is returned. This is\nconsistent with the \"weights as occurrences\" interpretation. Strips all zero-weight\nvalues, so these will never be included in such averages.\n\nIf using non-integer weights, the results will be as if some scalar were applied to\nmake all weights into integers.\n\nThis \"weights as occurrences\" interpretation has two pitfalls:\n\n1.  Identical values will be returned for different quantiles (e.g., the results\n    for quantiles == 0.5, 0.6, and 0.7 might be identical). The effect of this is\n    that some some common data practices like \"robust scalar\" will *not* be\n    robust because of the potential for a 0 interquartile range. Again this is\n    consistent, because the same thing could happen with repeated, non-weighted\n    values.\n\n2.  With any number of values, the stacked_median could still be the first or\n    last value (if it has enough weight), so separating by the median is not\n    robust. This could also happen with repeaded, non-weighted values. One\n    workaround is to divide the values into group_a = values strictly < median,\n    group_b = values strictly > median, then add == median to the smaller group.\n\n\nwhere `FPArray: TypeAlias = npt.NDArray[np.floating[Any]]`\n\n\n``` python\ndef get_stacked_quantile(values: FParray, weights: FPArray, quantile: float) -> float:\n    \"\"\"Get a weighted quantile for a vector of values.\n\n    :param values: array of values with shape (n,)\n    :param weights: array of weights where weights.shape == values.shape\n    :param quantile: quantile to calculate, in [0, 1]\n    :return: weighted quantile of values\n    :raises ValueError: if values and weights do not have the same length\n    :raises ValueError: if quantile is not in interval [0, 1]\n    :raises ValueError: if values array is empty (after removing zero-weight values)\n    :raises ValueError: if weights are not all positive\n    \"\"\"\n```\n\n``` python\ndef get_stacked_quantiles(\n    values: FPArray, weights: FPArray, quantile: float\n) -> FPArray:\n    \"\"\"Get a weighted quantile for an array of vectors.\n\n    :param values: array of vectors with shape (..., m)\n        will return one m-length vector\n    :param weights: array of weights with shape (..., 1)\n        where shape[:-1] == values.shape[:-1]\n    :param quantile: quantile to calculate, in [0, 1]\n    :return: axiswise weighted quantile of an m-length vector\n    :raises ValueError: if values and weights do not have the same shape[:-1]\n\n    The \"gotcha\" here is that the weights must be passed as 1D vectors, not scalars.\n    \"\"\"\n```\n\n``` python\ndef get_stacked_median(values: FPArray, weights: FPArray) -> float:\n    \"\"\"Get a weighted median for a value.\n\n    :param values: array of values with shape (n,)\n    :param weights: array of weights where weights.shape == values.shape\n    :return: weighted median of values\n    :raises ValueError: if values and weights do not have the same length\n    :raises ValueError: if values array is empty (after removing zero-weight values)\n    :raises ValueError: if weights are not all positive\n    \"\"\"\n```\n\n``` python\ndef get_stacked_medians(values: FPArray, weights: FPArray) -> FPArray:\n    \"\"\"Get a weighted median for an array of vectors.\n\n    :param values: array of vectors with shape (..., m)\n        will return one m-length vector\n    :param weights: array of weights with shape (..., 1)\n        where shape[:-1] == values.shape[:-1]\n    :return: axiswise weighted median of an m-length vector\n    :raises ValueError: if values and weights do not have the same shape[:-1]\n\n    The \"gotcha\" here is that the weights must be passed as 1D vectors, not scalars.\n    \"\"\"\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "stacked-quantile",
    "package_url": "https://pypi.org/project/stacked-quantile/",
    "platform": null,
    "project_url": "https://pypi.org/project/stacked-quantile/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/stacked-quantile/0.3.0/",
    "requires_dist": [
      "numpy (>=1.24.1,<2.0.0)"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17355448,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbd574682eaad9da03571e032da2b90fea94aca7b2be65d173f712172315f4c4",
          "md5": "689b10019ed73573438ed81869344fcd",
          "sha256": "b3a5fd6d3b05b731e89376158d923a39ec95be152446c25ec2e4458ddb99c5b2"
        },
        "downloads": -1,
        "filename": "stacked_quantile-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "689b10019ed73573438ed81869344fcd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 4971,
        "upload_time": "2023-01-18T02:58:13",
        "upload_time_iso_8601": "2023-01-18T02:58:13.750487Z",
        "url": "https://files.pythonhosted.org/packages/bb/d5/74682eaad9da03571e032da2b90fea94aca7b2be65d173f712172315f4c4/stacked_quantile-0.2.0-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "syntax error with python versions <= 3.10"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d804850bad516e63eb49885d66c7fba2e406123045b771eed91445f0f089fd4",
          "md5": "d30635045a230885b2c67bfa985f36a5",
          "sha256": "627233e362a7b65b1bfbb2efdd3fc8a6e04501342cfce41a152749dc9b42d213"
        },
        "downloads": -1,
        "filename": "stacked_quantile-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d30635045a230885b2c67bfa985f36a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 4209,
        "upload_time": "2023-01-18T02:58:15",
        "upload_time_iso_8601": "2023-01-18T02:58:15.287249Z",
        "url": "https://files.pythonhosted.org/packages/8d/80/4850bad516e63eb49885d66c7fba2e406123045b771eed91445f0f089fd4/stacked_quantile-0.2.0.tar.gz",
        "yanked": true,
        "yanked_reason": "syntax error with python versions <= 3.10"
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "813a753cf8772e3c7876f8fe6c0dcf54c9ba514540134b18a803d02cb4fad2da",
          "md5": "7e7065f4af1b2c794a548706d6b5ffa2",
          "sha256": "a432b1971439274e2d3277de0ad896a19a1f9e691c8fe8a43c0a02d142f5e453"
        },
        "downloads": -1,
        "filename": "stacked_quantile-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e7065f4af1b2c794a548706d6b5ffa2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 5421,
        "upload_time": "2023-03-19T17:50:28",
        "upload_time_iso_8601": "2023-03-19T17:50:28.564856Z",
        "url": "https://files.pythonhosted.org/packages/81/3a/753cf8772e3c7876f8fe6c0dcf54c9ba514540134b18a803d02cb4fad2da/stacked_quantile-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b0648197359c51b93df112fb0ad8823f6e9960feb526d1887a3663dd9d6d5c2",
          "md5": "567bcb65393d4180d5e71aee0d8a3397",
          "sha256": "bd848846c569b6b7e43d05f44cb47bc24016d168f6d47be045c2027e9c45464b"
        },
        "downloads": -1,
        "filename": "stacked_quantile-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "567bcb65393d4180d5e71aee0d8a3397",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 4572,
        "upload_time": "2023-03-19T17:50:30",
        "upload_time_iso_8601": "2023-03-19T17:50:30.496704Z",
        "url": "https://files.pythonhosted.org/packages/7b/06/48197359c51b93df112fb0ad8823f6e9960feb526d1887a3663dd9d6d5c2/stacked_quantile-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "813a753cf8772e3c7876f8fe6c0dcf54c9ba514540134b18a803d02cb4fad2da",
        "md5": "7e7065f4af1b2c794a548706d6b5ffa2",
        "sha256": "a432b1971439274e2d3277de0ad896a19a1f9e691c8fe8a43c0a02d142f5e453"
      },
      "downloads": -1,
      "filename": "stacked_quantile-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7e7065f4af1b2c794a548706d6b5ffa2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 5421,
      "upload_time": "2023-03-19T17:50:28",
      "upload_time_iso_8601": "2023-03-19T17:50:28.564856Z",
      "url": "https://files.pythonhosted.org/packages/81/3a/753cf8772e3c7876f8fe6c0dcf54c9ba514540134b18a803d02cb4fad2da/stacked_quantile-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7b0648197359c51b93df112fb0ad8823f6e9960feb526d1887a3663dd9d6d5c2",
        "md5": "567bcb65393d4180d5e71aee0d8a3397",
        "sha256": "bd848846c569b6b7e43d05f44cb47bc24016d168f6d47be045c2027e9c45464b"
      },
      "downloads": -1,
      "filename": "stacked_quantile-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "567bcb65393d4180d5e71aee0d8a3397",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 4572,
      "upload_time": "2023-03-19T17:50:30",
      "upload_time_iso_8601": "2023-03-19T17:50:30.496704Z",
      "url": "https://files.pythonhosted.org/packages/7b/06/48197359c51b93df112fb0ad8823f6e9960feb526d1887a3663dd9d6d5c2/stacked_quantile-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}