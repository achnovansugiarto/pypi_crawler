{
  "info": {
    "author": "",
    "author_email": "Markus Sifft <markus.sifft@rub.de>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# SignalSnap: Signal Analysis In Python Made Easy \nby M. Sifft and D. HÃ¤gele\n\nWe present a fast Python toolbox for the higher-order spectral analysis of time series. The usual second-order \npower spectrum and its higher-order generalization - so-called bi- and trispectra - are efficiently calculated \non any platform. The toolbox supports GPU acceleration using the ArrayFire library. The treatment of large datasets \nis not limited by available RAM. We were able to process 11.6 GB of data (given in the hdf5 format) within just one \nminute to obtain a power spectrum with a one-million-point resolution using a five-year-old Nvidia GeForce GTX 1080. \nSimilarly, 1000x1000 points of a trispectrum were obtained from processing 3.3 GB of data per minute.\n\nHere, a few outstanding features of SignalSnap:\n* Errors of spectral values are automatically calculated ([beginners example](Examples/Calculating%20Spectra%20from%20Numpy%20Array.ipynb), [example](Examples/Higher-Order%20Example:%20Mixing%20of%20Gaussian%20Noise.ipynb))\n* Support for just-in-time import from hdf data (dataset does not have to fit in RAM) ([example](Examples/Calculating%20Polyspectra%20from%20Measurement.ipynb))\n* Functions for conversion of Numpy array to hdf data is also provided ([example](Examples/Conversion%20of%20CSV%20to%20h5.ipynb))\n* Functions for storing and loading calculated data together with metadata ([example](Examples/Storing%20and%20Loading%20Spectra.ipynb)) \n* Correlations between two time series can be calculated ([example](Examples/Correlations%20Between%20Two%20Time%20Series.ipynb))\n* All calculation can be performed on GPU (NVidia and AMD) (see Arrayfire) ([example](Examples/Comparing%20CPU%20to%20GPU.ipynb))\n* Advanced plotting options for two-dimensional higher-order spectra \n* Usage of unbiased estimators for higher-order cumulants (see Literature)\n* Efficient implementation of the confined Gaussian window for an optimal RMS time-bandwidth product (see Literature)\n* Special functions for the verification of the stationarity of a signal ([example](Examples/Testing%20the%20Stationarity%20of%20a%20Signal.ipynb))\n\n## Installation\nSignalSnap is available on `pip` and can be installed with \n```bash\npip install signalsnap\n```\n\n### Installation of Arrayfire\nFor GPU calculations the high performance library Arrayfire is used. The Python wrapper ([see here](https://github.com/arrayfire/arrayfire-python)) \nis automatically installed when installing SignalSnap, however, [ArrayFire C/C++ libraries](https://arrayfire.com/download) need to be installed separately.\n\n\n## Documentation\nA comprehensive documentation of SignalSnap will follow soon. \n\n### Examples\nExamples for every function of the package are currently added to the folder Examples. Here are a few lines \nto get you started. We will generate some white noise as signal/dataset store it as Numpy array called `y`.\n\n```python\nimport signalsnap as snp\nimport numpy as np\n\nrng = np.random.default_rng()\n\n# ------ Generation of white noise -----\nf_unit = 'kHz'\nfs = 10e3  # sampling rate in kHz\nN = 1e5  # number of points\nt = np.arange(N) / fs  # unit is automatically chosen to be 1/f_unit = ms\ny = rng.normal(scale=1, size=t.shape)\n```\n\nNow we creat a spectrum object and feed it with the data. This object will store the dataset, \nlater the spectra and errors, all freely chosen variables and contains \nthe methods for calculating the spectra, plotting and storing.\n\n```python\nspec = snp.Spectrum(data=y, delta_t=1/fs, f_unit=f_unit)\nT_window = 0.02 # in ms\nf_max = 5e3 # in kHz\nf, s, serr = spec.calc_spec(order_in=[2], T_window=T_window, f_max=f_max, backend='cpu')\n```\n\n```\nActual T_window: 0.02\nMaximum frequency: 5000.0\nNumber of points: 101\n```\n![data in first window](Examples/plots/example_window.png)\n\nThe output will show you the actual length of a window (in case your T_window is not a multiple of 1/fs), the maximum \nfrequency (Nyquist frequency) and the number of point of the calculated spectrum. The data points in the first window \nare plotted, so you can verify the window length (which is also given in points by chunk shape). The function will \nreturn `f` the frequencies at which the spectrum has been calculated, `s` the spectral values, and `serr` the error \nof the spectra value (1 sigma).\n\nVisualization of the results is just as easy as the calculation.\n\n```python\nfig = spec.plot(order_in=[2], f_max=f_max/2)\n```\n![power spectrum of the data](Examples/plots/example_s2.png)\n\nBesides the power spectrum (blue line) the error bands (1 to 5 sigma) are shown as grey lines in the plot.\nNow, we can even verify that we are dealing with true Gaussian noise by calculating the higher-order spectra of the time\nseries.\n\n## Why higher-order spectra?\nHigher-order spectra contain additional information that is not contained within a power spectrum. The toolbox is \ncapable of calculating the third- and four-order spectrum (also called bi- and trispectrum, respectively). These have \nthe following properties:\n* Spectra beyond second order are not sensitive to Gaussian noise.\n* Bispectrum: shows contributions whenever the phase of two frequencies and their sum are phase correlated (e.g. by \nmixing two signals)\n* Trispectrum: can be interpreted as intensity correlation between two frequencies\n\nLet's calculate all spectra up to fourth order of the dataset above and verify that the signal does not deviate \nsignificantly from Gaussian noise using the first property (has no significant higher-order contributions). We \nonly have to change the `order_in` argument:\n\n```python\nf, s, serr = spec.calc_spec(order_in=[2, 3, 4], T_window=T_window, f_max=f_max, backend='cpu')\n```\n\nPlotting can also be done as before by changing the `order_in` argument:\n```python\nfig = spec.plot(order_in=[2, 3, 4], f_max=f_max/2, green_alpha=0)\n```\n![polyspectra of the data](Examples/plots/example_poly_no_errors.png)\n\nNow, the third-and fourth-order spectra (S3 and S4) are visible. Just like the power spectrum they are noisy.\nTo decide which of the fluctuations are significant we need a way of displaying errors in the two-dimensional\nplots. Here, errors are visualized be overlaying a green color on the spectral contributions which deviate from \nzero less than a certain number of standard deviations. \n\n```python\nfig = spec.plot(order_in=[2, 3, 4], f_max=f_max/2, sigma=3)\n```\n![polyspectra of the data](Examples/plots/example_poly.png)\n\nClearly, all higher-order contributions are nothing but noise and we have, therefore, verifed that our \noriginal dataset was Gaussian noise (and even white noise due to the flat power spectrum).\n\n## Support\nThe development of the SignalSnap package is supported by the working group Spectroscopy of Condensed Matter of the \nFaculty of Physics and Astronomy at the Ruhr University Bochum.\n\n## Dependencies\nFor the package multiple libraries are used for the numerics and displaying the results:\n* NumPy\n* SciPy\n* MatPlotLib\n* tqdm\n* Numba\n* h5py\n* ArrayFire\n\n## Literature\nUnbiased estimators are used for the calculation of higher-order cumulants. Their derivation can be found in\n[this paper](https://arxiv.org/abs/2011.07992). An explanation for how the spectra are calculated can be found in\nAppendix B of [this paper](https://doi.org/10.1103/PhysRevResearch.3.033123).",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "signalsnap",
    "package_url": "https://pypi.org/project/signalsnap/",
    "platform": null,
    "project_url": "https://pypi.org/project/signalsnap/",
    "project_urls": {
      "Bug Tracker": "https://github.com/MarkusSifft/SignalSnap/issues",
      "Homepage": "https://github.com/MarkusSifft/SignalSnap"
    },
    "release_url": "https://pypi.org/project/signalsnap/0.1.6/",
    "requires_dist": [
      "arrayfire",
      "h5py",
      "matplotlib",
      "numba",
      "numpy",
      "scipy",
      "tqdm"
    ],
    "requires_python": ">=3.7",
    "summary": "Spectra at your fingertips",
    "version": "0.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16500259,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2668b182f7fc99792010eed5f5624d940b96c8875c5b9d3d10564134ba8ad5c2",
          "md5": "dbb5d34f8a9eaef5fbf3f8eed47d1243",
          "sha256": "2370e3c5fed0da5f3bca628a820a2155b45834320ae2bd888d59b0d8841389bc"
        },
        "downloads": -1,
        "filename": "signalsnap-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dbb5d34f8a9eaef5fbf3f8eed47d1243",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17068,
        "upload_time": "2022-12-09T12:15:53",
        "upload_time_iso_8601": "2022-12-09T12:15:53.677845Z",
        "url": "https://files.pythonhosted.org/packages/26/68/b182f7fc99792010eed5f5624d940b96c8875c5b9d3d10564134ba8ad5c2/signalsnap-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7834aa1496cd5ad819cb6a446c1887adeb8b9ee0c44bbea6edb2629fc7df3e4",
          "md5": "5a604433b6274f8d822229e4911c5b69",
          "sha256": "3a97abcc07d91a286ff9d3c547e655559193f8575efe1be9fa0803dc9a4d321f"
        },
        "downloads": -1,
        "filename": "signalsnap-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5a604433b6274f8d822229e4911c5b69",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 29403446,
        "upload_time": "2022-12-09T12:16:11",
        "upload_time_iso_8601": "2022-12-09T12:16:11.102125Z",
        "url": "https://files.pythonhosted.org/packages/e7/83/4aa1496cd5ad819cb6a446c1887adeb8b9ee0c44bbea6edb2629fc7df3e4/signalsnap-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1be92459a1fe96d5ec1245fd226e29b779efba56af1a9dac0e6ee48446c42807",
          "md5": "9075963569ac7b64440a0d6b11a282ea",
          "sha256": "7d031dfea473b7f00e7b32af68dd7028ba79850662dccecbb978e9b9e6e95196"
        },
        "downloads": -1,
        "filename": "signalsnap-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9075963569ac7b64440a0d6b11a282ea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17182,
        "upload_time": "2022-12-09T12:30:53",
        "upload_time_iso_8601": "2022-12-09T12:30:53.541427Z",
        "url": "https://files.pythonhosted.org/packages/1b/e9/2459a1fe96d5ec1245fd226e29b779efba56af1a9dac0e6ee48446c42807/signalsnap-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c8e2f31ba08a4521a43b3eedf2dc80cf50766aad1e4814fb5f13a07d167216a",
          "md5": "251a828d0ebbb1cdf7b9513bbdcd0524",
          "sha256": "e4ea535878ab4e8464855310435e9be7ca66d54b642090e9496c36e199d8fef4"
        },
        "downloads": -1,
        "filename": "signalsnap-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "251a828d0ebbb1cdf7b9513bbdcd0524",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 29403596,
        "upload_time": "2022-12-09T12:30:59",
        "upload_time_iso_8601": "2022-12-09T12:30:59.042089Z",
        "url": "https://files.pythonhosted.org/packages/3c/8e/2f31ba08a4521a43b3eedf2dc80cf50766aad1e4814fb5f13a07d167216a/signalsnap-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ee1df20a73aa33068892c527af28a332a55b312aa99105650c836bda707f8bf",
          "md5": "8b706cabd09b6d7580fc3a276a1a1b6a",
          "sha256": "1cb134531ad41140c3ec72a662dd7e93b4ecba574aa8c4b7b3bee43776524e88"
        },
        "downloads": -1,
        "filename": "signalsnap-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b706cabd09b6d7580fc3a276a1a1b6a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 22195,
        "upload_time": "2023-01-19T11:37:37",
        "upload_time_iso_8601": "2023-01-19T11:37:37.717329Z",
        "url": "https://files.pythonhosted.org/packages/7e/e1/df20a73aa33068892c527af28a332a55b312aa99105650c836bda707f8bf/signalsnap-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c88e40e687095d7ea3dc7bcff48b0d506d95391995a4dfa2280373488d317fbf",
          "md5": "723700f1f5e8d0282673e015365747e0",
          "sha256": "59a70eae8a95ef75f4f349a025c5aea92591785b8e379de31efc9b0a64a50d0e"
        },
        "downloads": -1,
        "filename": "signalsnap-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "723700f1f5e8d0282673e015365747e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26546374,
        "upload_time": "2023-01-19T11:37:52",
        "upload_time_iso_8601": "2023-01-19T11:37:52.729212Z",
        "url": "https://files.pythonhosted.org/packages/c8/8e/40e687095d7ea3dc7bcff48b0d506d95391995a4dfa2280373488d317fbf/signalsnap-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8dc0efc9a5b373d2e760a4f71c221f8c9c72288d50b72dbba5b997d58e7f5734",
          "md5": "a07823ed560e3d7c6a557f5f5660e709",
          "sha256": "0128c32e598728edaab96380605b2ffb494320b9b37b1f46ebbc1c18f533e5f4"
        },
        "downloads": -1,
        "filename": "signalsnap-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a07823ed560e3d7c6a557f5f5660e709",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19242,
        "upload_time": "2023-01-19T13:57:41",
        "upload_time_iso_8601": "2023-01-19T13:57:41.081837Z",
        "url": "https://files.pythonhosted.org/packages/8d/c0/efc9a5b373d2e760a4f71c221f8c9c72288d50b72dbba5b997d58e7f5734/signalsnap-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6808b63800c51ea3276cd4f46d85757bac6d41d3334dddd7ce1254e816802677",
          "md5": "77c27b86109465dfb18a6073c0e682f1",
          "sha256": "2c86c8a47b932a806ebaee876fcfbdaee9dce34499cb0660c79093b5978d59dc"
        },
        "downloads": -1,
        "filename": "signalsnap-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "77c27b86109465dfb18a6073c0e682f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20326,
        "upload_time": "2023-01-19T13:57:42",
        "upload_time_iso_8601": "2023-01-19T13:57:42.849563Z",
        "url": "https://files.pythonhosted.org/packages/68/08/b63800c51ea3276cd4f46d85757bac6d41d3334dddd7ce1254e816802677/signalsnap-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8abf4efa73fb4a29ce31c826869810e5ce60e6d5f86c9cbce76b83c2a7055ceb",
          "md5": "549a3f924643969f2cbd5d0b3da3c7aa",
          "sha256": "0f352c2bb52fcab046c7cd3a4c301035e60b77054fb9b69850269b13fd50b36d"
        },
        "downloads": -1,
        "filename": "signalsnap-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "549a3f924643969f2cbd5d0b3da3c7aa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 420886,
        "upload_time": "2023-01-20T11:26:14",
        "upload_time_iso_8601": "2023-01-20T11:26:14.765626Z",
        "url": "https://files.pythonhosted.org/packages/8a/bf/4efa73fb4a29ce31c826869810e5ce60e6d5f86c9cbce76b83c2a7055ceb/signalsnap-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d50d800bb596a58e072ae46c48aee098e30824fd4a52766f13b89fb46b40fae",
          "md5": "b306f3d336250956691b5e4a6ba6fd22",
          "sha256": "9526f38f38bfc5ce4e152e75278d5156dc83153ebfaffcf204f81de5c92fb457"
        },
        "downloads": -1,
        "filename": "signalsnap-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b306f3d336250956691b5e4a6ba6fd22",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26593227,
        "upload_time": "2023-01-20T11:26:32",
        "upload_time_iso_8601": "2023-01-20T11:26:32.267958Z",
        "url": "https://files.pythonhosted.org/packages/3d/50/d800bb596a58e072ae46c48aee098e30824fd4a52766f13b89fb46b40fae/signalsnap-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fef8b4065f0b5629c2878921ce7f4025d9a639b22f1cfbc989d1e24149553d3a",
          "md5": "d010532f9be6bca70fdc3650bfc03d6b",
          "sha256": "3df9e68a6f30105bb9fee0cfea029f98655b0c8a4366848492ff23f376b8ceb1"
        },
        "downloads": -1,
        "filename": "signalsnap-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d010532f9be6bca70fdc3650bfc03d6b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 420884,
        "upload_time": "2023-01-20T11:27:38",
        "upload_time_iso_8601": "2023-01-20T11:27:38.655329Z",
        "url": "https://files.pythonhosted.org/packages/fe/f8/b4065f0b5629c2878921ce7f4025d9a639b22f1cfbc989d1e24149553d3a/signalsnap-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e4db62bff4052bb4c4d4aa6501c493375a05d4f36f05d1242fad9ef4f560845",
          "md5": "1481c2ca2275fac3c6d6baa23ed9defa",
          "sha256": "aaa0080e61c7ee879e86ebe54724203ee3a056f764b45083f52b79428a79132b"
        },
        "downloads": -1,
        "filename": "signalsnap-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "1481c2ca2275fac3c6d6baa23ed9defa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26593230,
        "upload_time": "2023-01-20T11:27:47",
        "upload_time_iso_8601": "2023-01-20T11:27:47.560942Z",
        "url": "https://files.pythonhosted.org/packages/5e/4d/b62bff4052bb4c4d4aa6501c493375a05d4f36f05d1242fad9ef4f560845/signalsnap-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fef8b4065f0b5629c2878921ce7f4025d9a639b22f1cfbc989d1e24149553d3a",
        "md5": "d010532f9be6bca70fdc3650bfc03d6b",
        "sha256": "3df9e68a6f30105bb9fee0cfea029f98655b0c8a4366848492ff23f376b8ceb1"
      },
      "downloads": -1,
      "filename": "signalsnap-0.1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d010532f9be6bca70fdc3650bfc03d6b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 420884,
      "upload_time": "2023-01-20T11:27:38",
      "upload_time_iso_8601": "2023-01-20T11:27:38.655329Z",
      "url": "https://files.pythonhosted.org/packages/fe/f8/b4065f0b5629c2878921ce7f4025d9a639b22f1cfbc989d1e24149553d3a/signalsnap-0.1.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5e4db62bff4052bb4c4d4aa6501c493375a05d4f36f05d1242fad9ef4f560845",
        "md5": "1481c2ca2275fac3c6d6baa23ed9defa",
        "sha256": "aaa0080e61c7ee879e86ebe54724203ee3a056f764b45083f52b79428a79132b"
      },
      "downloads": -1,
      "filename": "signalsnap-0.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "1481c2ca2275fac3c6d6baa23ed9defa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 26593230,
      "upload_time": "2023-01-20T11:27:47",
      "upload_time_iso_8601": "2023-01-20T11:27:47.560942Z",
      "url": "https://files.pythonhosted.org/packages/5e/4d/b62bff4052bb4c4d4aa6501c493375a05d4f36f05d1242fad9ef4f560845/signalsnap-0.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}