{
  "info": {
    "author": "Geoffrey M. Poore",
    "author_email": "gpoore@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Education",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Education :: Testing"
    ],
    "description": "# text2qti – Create quizzes in QTI format from Markdown-based plain text\n\ntext2qti converts\n[Markdown](https://daringfireball.net/projects/markdown/)-based plain text\nfiles into quizzes in QTI format (version 1.2), which can be imported by\n[Canvas](https://www.instructure.com/canvas/) and other educational software.\nIt supports multiple-choice, true/false, multiple-answers, numerical,\nshort-answer (fill-in-the-blank), essay, and file-upload questions.  It\nincludes basic support for LaTeX math within Markdown, and allows a limited\nsubset of [siunitx](https://ctan.org/pkg/siunitx) notation for units and for\nnumbers in scientific notation.\n\n\n\n## Examples\n\ntext2qti allows quick and efficient quiz creation.  Example\n**multiple-choice** plain-text quiz question that can be converted to QTI and\nthen imported by Canvas:\n\n```\n1.  What is 2+3?\na)  6\nb)  1\n*c) 5\n```\n\nA **question** is created by a line that starts with a number followed by a\nperiod and one or more spaces or tabs (\"`1. `\").  Possible **choices** are\ncreated by lines that start with a letter followed by a closing parenthesis\nand one or more spaces or tabs (\"`a) `\").  Numbers and letters do not have to\nbe ordered or unique.  The **correct** choice is designated with an asterisk\n(\"`*c) `\").  All question and choice text is processed as\n[Markdown](https://daringfireball.net/projects/markdown/).\n\nThere is also support for a quiz title and description, as well as question\ntitles, point values, and feedback.  Note that unlike most other text, titles\nlike quiz and question titles are treated as plain text, not Markdown, due to\nthe QTI format.  **Also note that Canvas correctly shows question titles\nwithin its quiz editor for instructors, but always replaces them with titles\nlike \"Question 1\" in the student view.**  Question point values must be\npositive integers or half-integers.\n\n```\nQuiz title: Addition\nQuiz description: Checking addition.\n\nTitle: An addition question\nPoints: 2\n1.  What is 2+3?\n... General question feedback.\n+   Feedback for correct answer.\n-   Feedback for incorrect answer.\na)  6\n... Feedback for this particular answer.\nb)  1\n... Feedback for this particular answer.\n*c) 5\n... Feedback for this particular answer.\n```\n\n**Multiple-answers questions** use `[]` or `[ ]` for incorrect answers and\n`[*]` for correct answers.\n\n```\n1.  Which of the following are dinosaurs?\n[ ] Woolly mammoth\n[*] Tyrannosaurus rex\n[*] Triceratops\n[ ] Smilodon fatalis\n```\n\n**Numerical questions** use an equals sign followed by one or\nmore spaces or tabs followed by the numerical answer.  Acceptable answers can\nbe designated as a range of the form `[<min>, <max>]` or as a correct answer\nwith a specified acceptable margin of error `<ans> +- <margin>`.  When the\nlatter form is used, `<margin>` can be either a number or a percentage.\n`<margin>` can be omitted when the answer is an integer and an exact answer is\nrequired.  In this case, scientific notation is not permitted, but the\nunderscore can be used as a digit separator; for example, `1000` and `1_000`\nare both valid, but `1e3` is not.  An exact answer can be required for\nfloating-point numbers, but this requires an explicit `+- 0`, since a range is\ntypically more appropriate for floating-point values.  Numerical questions\nhave the limitation that the absolute value of the smallest acceptable answer\nmust be greater than or equal to 0.0001 (1e-4).\n\n```\n1.  What is the square root of 2?\n=   1.4142 +- 0.0001\n\n2.  What is the cube root of 2?\n=   [1.2598, 1.2600]\n\n3.  What is 2+3?\n=   5\n```\n\n**Short-answer (fill-in-the-blank) questions** use an asterisk followed by one\nor more spaces or tabs followed by an answer.  Multiple acceptable answers can\nbe given.  Answers are restricted to a single line each and are treated as\nplain text, not Markdown.\n```\n1.  Who lives at the North Pole?\n*   Santa\n*   Santa Claus\n*   Father Christmas\n*   Saint Nicholas\n*   Saint Nick\n```\n\n**Essay questions** are indicated by a sequence of three or more underscores.\nThey only support general question feedback.\n\n```\n1.  Write an essay.\n... General question feedback.\n____\n```\n\n**File-upload questions** are indicated by a sequence of three or more\ncircumflex accents.  They only support general question feedback.\n```\n1.  Upload a file.\n... General question feedback.\n^^^^\n```\n\n**Text regions** outside of questions are supported.  Note that unlike most\nother text, titles like text region titles are treated as plain text, not\nMarkdown, due to the QTI format.  Also note that Canvas apparently ignores the\ntext region title and only displays the text itself.  Text regions are not\nrequired to have both a title and text; either may be used alone, but the\ntitle must come first when both are present.\n```\nText title:  Instructions about the next questions\nText:  General comments about the next questions.\n```\n\n\n## Installation\n\nInstall **Python 3.6+** if it is not already available on your machine.  See\nhttps://www.python.org/, or use the package manager or app store for your\noperating system.  Depending on your use case, you may want to consider a\nPython distribution like [Anaconda](https://www.anaconda.com/distribution/)\ninstead.\n\nInstall\n[setuptools](https://packaging.python.org/tutorials/installing-packages/)\nfor Python if it is not already installed.  This can be accomplished by\nrunning\n```\npython -m pip install setuptools\n```\non the command line.  Depending on your system, you may need to use `python3`\ninstead of `python`.  This will often be the case for Linux and OS X.\n\nInstall text2qti by running this on the command line:\n```\npython -m pip install text2qti\n```\nDepending on your system, you may need to use `python3` instead of `python`.\nThis will often be the case for Linux and OS X.\n\n\n### Upgrading\n\n```\npython -m pip install text2qti --upgrade\n```\nDepending on your system, you may need to use `python3` instead of `python`.\nThis will often be the case for Linux and OS X.\n\n\n### Installing the development version\n\nIf you want to install the development version to use the latest features,\ndownload `text2qti` from [GitHub](https://github.com/gpoore/text2qti) and\nextract the files.  A few different ways to install the development version\nare listed below.  Depending on your system, you may need to use `python3`\ninstead of `python` in the commands below.  This will often be the case for\nLinux and OS X.\n\n* You can install using the included `setup.py` by running\n  ```\n  python setup.py install\n  ```\n  Depending on your system configuration, especially if you do not have root\n  or administrator privileges, you may want to\n  [customize the installation location](https://docs.python.org/3.8/install/#alternate-installation-the-user-scheme).\n  For example, you can add `--user` to install under `%APPDATA%\\Python` (Windows), `~/.local` (UNIX, and Mac OS X non-framework builds), or\n  `~/Library/Python/<VERSION>` (Mac framework builds):\n  ```\n  python setup.py install --user\n  ```\n* You can install using `pip`.  For example, in the directory with `setup.py`,\n  run this:\n  ```\n  python -m pip install .\n  ```\n\n\n\n\n## Usage\n\ntext2qti has been designed to create QTI files for use with\n[Canvas](https://www.instructure.com/canvas/).  Some features may not be\nsupported by other educational software.  You should **always preview**\nquizzes or assessments after converting them to QTI and importing them.\n\nWrite your quiz or assessment in a plain text file.  You can use a basic\neditor like Notepad or gedit, or a code editor like\n[VS Code](https://code.visualstudio.com/).  You can even use Microsoft Word,\nas long as you save your file as plain text (*.txt).\n\ntext2qti includes a graphical application and a command-line application.\n\n* To use the graphical application, open a command line and run `text2qti_tk`.\n\n* To use the command-line application, open a command line in the same folder\n  or directory as your quiz file.  Under Windows, you can hold the SHIFT\n  button down on the keyboard, then right click next to your file, and select\n  \"Open PowerShell window here\" or \"Open command window here\".  You can also\n  launch \"Command Prompt\" or \"PowerShell\" through the Start menu, and then\n  navigate to your file using `cd`.\n\n  Run the `text2qti` application using a command like this:\n  ```\n  text2qti quiz.txt\n  ```\n  Replace \"quiz.txt\" with the name of your file.  This will create a file like\n  `quiz.zip` (with \"quiz\" replaced by the name of your file) which is the\n  converted quiz in QTI format.\n\nInstructions for using the QTI file with Canvas:\n  * Go to the course in which you want to use the quiz.\n  * Go to Settings, click on \"Import Course Content\", select \"QTI .zip file\",\n    choose your file, and click \"Import\".  Typically you should not need to\n    select a question bank; that should be managed automatically.\n  * While the quiz upload will often be very fast, there is an additional\n    processing step that can take up to several minutes.  The status will\n    probably appear under \"Current Jobs\" after upload.\n  * Once the quiz import is marked as \"Completed\", the imported quiz should be\n    available under Quizzes.  If the imported quiz does not appear after\n    several minutes, there may be an error in your quiz file or a bug in\n    `text2qti`.  When Canvas encounters an invalid quiz file, it tends to fail\n    silently; instead of reporting an error in the quiz file, it just never\n    creates a quiz based on the invalid file.\n  * You should **always preview the quiz before use**.  text2qti can detect a\n    number of potential issues, but not everything.\n\nTypically, you should start your quizzes with a title, like this:\n```\nQuiz title: Title here\n```\nOtherwise, all quizzes will have the default title \"Quiz\", so it will be\ndifficult to tell them apart.  Another option is to rename quizzes after\nimporting them.  Note that unlike most other text, the title is treated as\nplain text, not Markdown, due to the QTI format.\n\nWhen you run `text2qti` for the first time, it will attempt to create a\nconfiguration file called `.text2qti.bespon` in your home or user directory.\nIt will also ask for an institutional LaTeX rendering URL.  This is only\nneeded if you plan to use LaTeX math; if not, simply press ENTER to continue.\n * If you use Canvas, log into your account and look in the browser address\n   bar.  You will typically see an address that starts with something like\n   `institution.instructure.com/` or `canvas.institution.edu/`, with\n   `institution` replaced by the name of your school or an abbreviation for\n   it.  The LateX rendering URL that you want to use will then be something\n   like `https://institution.instructure.com/equation_images/` or\n   `https://canvas.institution.edu/equation_images/`, with `institution`\n   replaced by the appropriate value for your school.  If the URL is like the\n   second form, you may need to replace the `.edu` domain with the appropriate\n   value for your institution.\n * If you use other educational software that handles LaTeX in a manner\n   compatible with Canvas, consult the documentation for your software.  Or\n   perhaps create a simple quiz within the software using its built-in tools,\n   then export the quiz to QTI and look through the resulting output to find\n   the URL.\n * If you are using educational software that does not handle LaTeX in a\n   manner compatible with Canvas, try the `--pandoc-mathml` command-line\n   option when creating QTI files (note that this requires that\n   [Pandoc](https://pandoc.org/) be installed).  If that does not work, please\n   open an issue requesting support for that software, and include as much\n   information as possible about how that software processes LaTeX.\n\n\n\n## Additional features\n\n### Question groups\n\nA question group contains multiple questions, and only a specified number of\nthese are randomly selected and used each time a quiz is taken.\n\n```\nGROUP\npick: 1\npoints per question: 1\n\n1.  A question.\n*a) true\nb)  false\n\n2.  Another question.\n*a) true\nb)  false\n\nEND_GROUP\n```\n\nThe number of questions from the group that are used is specified with\n\"`pick:`\".  If this is omitted, it defaults to `1`.  The points assigned per\nquestion is specified with \"`points per question:`\".  If this is omitted, it\ndefaults to `1`.  All questions within a group must be worth the same number\nof points.\n\n\n### Executable code blocks\n\ntext2qti can execute the code in Markdown-style fenced code blocks.  Code can\nbe used to generate questions within a quiz.  Everything written to stdout by\nthe executed code is included in the quiz file; the code block is replaced by\nstdout.\n\n``````\n```{.python .run}\nimport textwrap\nfor x in [2, 3]:\n    print(textwrap.dedent(rf\"\"\"\n        1.  What is ${x}\\times 5$?\n        *a) ${x*5}$\n        b)  ${x+1}$\n        \"\"\"))\n```\n``````\n\n\nFor code to be executed, there are a few requirements:\n\n* The code block fences (` ``` `) must not be indented; the code block must be\n  at the top level of the document, not part of a question, choice, or\n  feedback.\n\n* As a security measure, code execution is disabled by default, so executable\n  code blocks will trigger an error.  Run `text2qti` with the option\n  `--run-code-blocks` to enable code execution, or set `run_code_blocks =\n  true` in the text2qti config file in your user or home directory.\n\n* The text immediately after the opening fence must have the form\n  `{.lang .run}` or `{.lang .run executable=<executable>}`.  This is inspired\n  by the code-block attributes in\n  [Pandoc Markdown](https://pandoc.org/MANUAL.html).\n\n  If the keyword argument `executable` is not provided, then `lang` must\n  designate an executable that can run the code once the code has been saved\n  to a file.  In the example above, `python` is extracted from the first line\n  (` ```{.python .run}`),  code is saved in a temporary file, and then the\n  file is executed via `python <file>`.\n\n  If `executable` is used to specify an executable, then `lang` is ignored by\n  `text2qti`, but it is still useful since some editors will use it to provide\n  syntax highlighting.\n\n  When `executable` is specified, the executable path must be quoted with\n  double quotes `\"` if it contains anything other than the tilde, Unicode word\n  characters, numbers, forward slashes, periods, hyphens, and underscores.\n  When the executable path is quoted, backslashes and quotation marks are\n  still prohibited; forward slashes should be used under all operating systems\n  including Windows.  A leading `~` in the executable path is expanded to the\n  user's home directory under all operating systems including Windows.\n\n* **Special Python note**:  When `.python` is used with an executable code\n  block without specifying an `executable`, code will run with `python3` if\n  either of these conditions is met:\n\n    - `python3` exists on the system and `python` is equivalent to `python2`.\n\n    - `python` does not exist on the system, but `python3` does exist.\n\n  To avoid ambiguity, you may want to use `.python3` and `.python2` rather\n  than `.python` when working with operating systems other than Windows, or\n  when working with a Windows installation that includes a `python3`\n  executable or symlink.  It is also possible to be even more specific by\n  using something like `.python3.8`.\n\nEach code block is executed in its own process, so data and variables are not\nshared between code blocks.\n\nIf an executable code block generates multiple questions that are identical,\nor multiple choices for a single question that are identical, this will be\ndetected by `text2qti` and an error will be reported.  Questions or choices\nthat may be equivalent, but are not represented by exactly the same text,\ncannot be detected (for example, things like `100` versus `1e2`, or `answer`\nversus `Answer`).\n\n\n### Additional quiz options\n\nThere are additional quiz options that can be set immediately after the quiz\ntitle and quiz description.  These all take values `true` or `false`.  For\nexample, `shuffle answers: true` could be on the line right after the quiz\ndescription.\n\n* `shuffle answers` — Shuffle answer order for questions.\n* `show correct answers` — Show correct answers after submission.\n* `one question at a time` — Only show one question at a time.\n* `can't go back` — Don't allow going back to the previous question when in\n  `one question at a time` mode.\n\n\n\n\n## Details for writing quiz text\n\ntext2qti processes almost all text as\n[Markdown](https://daringfireball.net/projects/markdown/), using\n[Python-Markdown](https://python-markdown.github.io/).  (The only exceptions\nare the quiz title, question titles, and text region titles, which are\nprocessed as plain text due to the QTI format, plus the acceptable answers\nfor short-answer questions.)  For example, `*emphasized*` produces *emphasized*\ntext, which typically appears as italics.  Text can be styled using Markdown\nnotation, or with HTML.  Remember to preview quizzes after conversion to QTI,\nespecially when using any significant amount of HTML.\n\nPython-Markdown provides several\n[extensions to basic Markdown](https://python-markdown.github.io/extensions/).\nCurrently, the following extensions are enabled:\n* `smarty`:  Automatic curly quotation marks and dashes.\n* `sane_lists`:  List behavior is closer to what might be expected.\n* `def_list`:  Definition lists of this form:\n  ```\n  term\n  :   definition\n* `fenced_code`:  Fenced code blocks (` ``` ` or `~~~`).\n* `footnotes`:  Footnotes using this form:\n  ```\n  Normal text [^1].\n\n  [^1]: Footnote text.\n* `tables`:  Tables of this form:\n  ```\n  Header | Header\n  ------ | ------\n  Cell   | Cell\n  Cell   | Cell\n  ```\n* `md_in_html`:  Text inside HTML tags is treated as Markdown.  This requires\n  setting the attribute `markdown=\"1\"` in the opening tag for block-level\n  elements.  See the\n  [documentation](https://python-markdown.github.io/extensions/md_in_html/)\n  for more details about proper usage and potential issues.\n\nWhile indented Markdown code blocks are supported, fenced code blocks should\nbe preferred.  Indented code can interfere with the preprocessor that strips\nHTML comments and handles LaTeX math and siunitx notation.\n\n\n### Titles\n\nQuiz, question, and text region titles are limited to a single paragraph.  If\nthis paragraph is wrapped over multiple lines, all lines after the first must\nbe indented by at least two spaces or one tab, and share the same indentation.\nAll tabs are expanded to 4 spaces before indentation is compared, following\nthe typical Markdown approach.\n\nAll titles are treated as plain text, not Markdown, due to the QTI format.\n\nTitles are always optional, but when they are used for a given element, they\nare always required to be first, before any other attributes.\n\n\n### Descriptions, questions, choices, feedback, and text regions\n\nDescriptions, questions, choices, feedback, and text regions may span multiple\nparagraphs and include arbitrary Markdown content like code blocks or\nquotations.  Everything must be indented to at least the same level as the\nstart of the first paragraph on the initial line.  All tabs are expanded to 4\nspaces before indentation is compared, following the typical Markdown\napproach.  For example,\n```\n1.  A question paragraph that is long enough to wrap onto a second line.\n    The second line must be indented to match up with the start of the\n    paragraph text on the first line.\n\n    Another paragraph.\n```\nNote that the acceptable answers for short-answer questions are treated as\nplain text and limited to a single line, and numerical answers are also\nprocessed specially and limited to a single line.\n\n\n### Images\n\nImages are included with the standard Markdown syntax:\n```\n![alt_text](image_file)\n```\nIt will typically be easiest to put your image files in the same folder or\ndirectory as the quiz file, so you can use something like `![alt](image.jpg)`.\nHowever, file paths are supported, including `~` user expansion under all\noperating systems.  All image paths not starting with `http://` or `https://`\nare assumed to refer to local image files (files on your machine), and will\nresult in errors if these files are not found.\n\n[Pandoc-style attributes](https://pandoc.org/MANUAL.html#images) can be used\nwith images:\n```\n![alt_text](image_file){#id .class1 .class2 width=10em height=5em}\n```\nThis allows image id, classes, and dimensions to be specified without\nresorting to HTML.\n\n\n### LaTeX\n\nBy default, text2qti supports LaTeX using a Canvas LaTeX rendering URL.  This\ncan be set during installation, or by editing the configuration file\n`.text2qti.bespon` in your home or user directory.  It is possible to convert\nLaTeX to MathML instead with the `--pandoc-mathml` command-line option.  This\nrequires that [Pandoc](https://pandoc.org/) be installed for converting LaTeX\nto MathML.  For example, to create a quiz you might run a command like this:\n```\ntext2qti --pandoc-mathml quiz.txt\n```\nWhen `--pandoc-mathml` is used, a cache file `_text2qti_cache.zip` will be\ncreated in the quiz file directory.  This is used to store Pandoc MathML\noutput to increase performance for long quizzes with lots of math.\n\ntext2qti supports inline LaTeX math within dollar signs `$`.  There must be a\nnon-space character immediately after the opening `$` and immediately before\nthe closing `$`.  For example, `$F = ma$`.  LaTeX math is limited to what is\nsupported by Canvas or whatever other educational software you are using.  It\nis usually a good idea to preview imported quizzes before assigning them,\nbecause text2qti cannot detect LaTeX incompatibilities or limitations.  There\nis currently not support for block LaTeX math; only inline math is supported.\n\nWhen using Canvas with LaTeX math, be aware that in some cases Canvas's\nvertical alignment of math leaves much to be desired.  Sometimes this can be\nimproved by including `\\vphantom{fg}` or `\\strut` at the beginning of an\nequation.  An alternative is simply to use LaTeX for all question or choice\ntext (via `\\text`, etc.).\n\ntext2tqi supports a limited subset of LaTeX\n[siunitx](https://ctan.org/pkg/siunitx) notation.  You can use notation like\n`\\num{1.23e5}` to enter numbers in scientific notation.  This would result in\n`1.23×10⁵`.  You can use notation like `\\si{m/s}` or `\\si{N.m}` to enter\nunits.  These would result in `m/s` and `N·m`.  Unit macros currently are not\nsupported, with these exceptions: `\\degree`, `\\celsius`, `\\fahrenheit`,\n`\\ohm`, `\\micro`.  Finally, numbers and units can be combined with notation\nlike `\\SI{1.23e5}{m/s}`.  All of these can be used inside or outside LaTeX\nmath.\n\nTechnical note: LaTeX and siunitx support are currently implemented as\npreprocessors that are used separately from Python-Markdown.  In rare cases,\nthis may lead to conflicts with Markdown syntax.  These features may be\nreimplemented as Python-Markdown extensions in the future.\n\n\n### Comments\n\nThere are multiple ways to add comments within a quiz file.  In all cases,\ncomments are completely removed during quiz creation and do not appear in the\nfinal quiz in any form.\n\nAt the top level of a quiz document (outside of questions, choices, or\nfeedback) there are two types of comments.  These comments cannot be indented.\n* Line comments:  Any line that starts with a percent sign `%` is discarded.\n* Multiline comments:  If a line starts with `COMMENT`, that line and all\n  subsequent lines are discarded through a line that starts with\n  `END_COMMENT`.  The `COMMENT` and `END_COMMENT` delimiters must be on lines\n  by themselves; otherwise, an error is raised.\n\nWithin Markdown text, standard HTML comments of the form `<!--comment-->` may\nbe used.  These are stripped out during processing and do not appear in the\nfinal QTI file.  HTML comments are not supported within LaTeX math.\n\nTechnical note:  HTML comments are currently stripped in a preprocessing step\nseparate from Python-Markdown.  In rare cases, this may conflict with raw HTML\nembedded in Markdown.  This feature may be reimplemented as a Python-Markdown\nextension in the future.\n\n\n\n## Export solutions to PDF and HTML\n\nThere is basic support for exporting quiz solutions in Pandoc Markdown, PDF,\nand HTML formats.  This is currently only available in the command-line\napplication.  Solutions exported as Pandoc Markdown are only suitable for use\nwith LaTeX and HTML.  Exporting solutions as PDF requires\n[Pandoc](https://pandoc.org/) and a LaTeX installation (such as [TeX\nLive](https://www.tug.org/texlive/) or [MiKTeX](https://miktex.org/)).  There\nis currently no built-in support for customizing export, although you can edit\nthe Pandoc Markdown output before processing it via Pandoc.\n\nTo save solutions and also create a QTI file, use\n`--solutions <solutions_file>`.  To save solutions without creating a QTI\nfile, use `--only-solutions <solutions_file>`.  `<solutions_file>` must have\nan `.md` or `.markdown` extension for Pandoc Markdown export, `.pdf` for PDF\nexport, or `.html` for HTML export.  `--solutions` and `--only-solutions` can\nbe used multiple times to generate solutions in multiple formats.\n\nWhen using `--only-solutions`, be aware that solutions and QTI may differ if\nexecutable code blocks generate problems using random numbers. Consider\ncreating solutions and QTI at the same time (`--solutions`), or setting a seed\nfor the random number generator so it is reproducible.\n\n\n### Customizing questions for solutions\n\nEach question can provide a solution or other important information that is\n*only* included in the solutions, *never* in the QTI.  This is particularly\nuseful for essay and upload questions, since they are defined without\nspecifying an answer and require manual grading.  For example,\n```\n1.  Write an essay about text2qti.\n\n!   This is important information about what the essay should cover.\n\n    This will only appear in the solutions, and can be as long or short as\n    you wish.\n\n____\n```\nThe syntax for a question solution is the same as that for question feedback,\nexcept that an exclamation point `!` is used instead of `...` or `+` or `-`.\n\n\n### Quiz options\n\nAt the beginning of a quiz, there are some quiz-level options that can be set\nto customize solutions.  These all take `true`/`false` values, and are `false`\nby default.  For example, add `solutions sample groups: true` at the beginning\nof a quiz.\n\n* `feedback is solution` — This disables the special question solution syntax\n  involving `!`, and treats general question feedback (`...`) as both feedback\n  and solution.  This is useful when you want to give students solution\n  information as part of the QTI feedback and also include this same\n  information in solutions.\n\n* `solutions sample groups` — By default, *all* questions in a question group\n  are included in solutions, with a notice about the number that are randomly\n  selected when the quiz is taken, unless the question group has `solutions\n  pick` set to use a different value.\n\n  This option causes only a sample of the questions in a group to be included\n  in the solutions.  This option displays the first N questions in a group\n  sequentially, where N is the group `solutions pick` value if it has been\n  set, and otherwise the `pick` value if it has been set, and otherwise 1.  It\n  is possible for solutions to include N random questions from a group instead\n  of the first N questions; see `solutions randomize groups`.\n\n* `solutions randomize groups` — For each question group, randomize the order\n  in which questions are displayed in solutions.  If only some questions from\n  a group are included in solutions (`solutions sample groups` is `true` or\n  `solutions pick` is set), also randomize which questions are displayed\n  instead of taking all displayed questions sequentially from the beginning of\n  the group.\n\n  Randomization is not used by default for two reasons that relate to quizzes\n  using `solutions pick` or `solutions sample groups`.  First, including group\n  questions sequentially allows specially chosen, representative questions to\n  be placed at the beginning of the group so that they will appear in\n  solutions.  If a group contains many questions that are generated by an\n  executable code block, a random selection might not provide a sample that is\n  representative.  Second, if a quiz is used several semesters or years in a\n  row with only minor modifications, and new randomized solutions are\n  distributed each time, this means that eventually all questions would be\n  distributed in solutions, rather than only a fixed subset.\n\n\n### Customizing groups for solutions\n\nWhen a quiz is taken, the number of questions randomly selected from a\nquestion group is the value of `pick` if `pick` is set for the group and\notherwise 1.  However, by default solutions will include *all* questions from\na group.  There are two ways to modify this.\n\nIt is possible to modify the number of questions displayed in solutions for a\nspecific group by setting `solutions pick` for the group.  This causes only\nthe specified number of questions from the group to be displayed in solutions.\nThe questions that are displayed are taken sequentially from the beginning of\nthe group by default, with no randomization.  For randomization, see the\nquiz-level option `solutions randomize groups`.\n\nIt is also possible to modify the number of questions displayed in solutions\nfor *all* groups in a quiz by setting the quiz-level option `solutions sample\ngroups` to `true`.  This option displays the first N questions in a group\nsequentially, where N is the group `solutions pick` value if it has been set,\nand otherwise the `pick` value if it has been set, and otherwise 1.  It is\npossible for solutions to include N random questions from a group instead of\nthe first N questions; see `solutions randomize groups`.\n\nIn the example below, the solutions would include 2 questions from the group,\neven though only 1 is displayed when the quiz is taken.  The first 2 questions\nwould be included in solutions, unless `solutions randomize groups: true` is\nincluded at the beginning of the quiz.\n\n```\nGROUP\npick: 1\nsolutions pick: 2\n\n1.  A question.\n*a) true\nb)  false\n\n2.  Another question.\n*a) true\nb)  false\n\n3.  Yet another question.\n*a) true\nb)  false\n\nEND_GROUP\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/gpoore/text2qti",
    "keywords": "QTI,IMS Question & Test Interoperability,quiz,test,exam,assessment,markdown,LaTeX,plain text",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "text2qti",
    "package_url": "https://pypi.org/project/text2qti/",
    "platform": null,
    "project_url": "https://pypi.org/project/text2qti/",
    "project_urls": {
      "Homepage": "http://github.com/gpoore/text2qti"
    },
    "release_url": "https://pypi.org/project/text2qti/0.6.0/",
    "requires_dist": [
      "bespon (>=0.4)",
      "markdown (>=3.2)"
    ],
    "requires_python": ">=3.6",
    "summary": "Create quizzes in QTI format from Markdown-based plain text",
    "version": "0.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14956937,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5cea76d497f4eb3964a08d61fea7e6252f57078c04360a98c9fd93bdff2decb",
          "md5": "c3ca1775f00f9664fe6eb51ee5f651e0",
          "sha256": "2aa036d55ad4b3a9941af39df2d48290b41fc4f77c8d6fff14c01a1965b4a869"
        },
        "downloads": -1,
        "filename": "text2qti-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c3ca1775f00f9664fe6eb51ee5f651e0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24508,
        "upload_time": "2020-04-01T21:08:37",
        "upload_time_iso_8601": "2020-04-01T21:08:37.072855Z",
        "url": "https://files.pythonhosted.org/packages/c5/ce/a76d497f4eb3964a08d61fea7e6252f57078c04360a98c9fd93bdff2decb/text2qti-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01afb5c4a707f03d344c033c90ef736f7e8320ede412b29d174ac6eb4963dc79",
          "md5": "6974a2f825ad8e35ff39536bc74edddd",
          "sha256": "a69b1aebf749b0327dc91eaf123f16b0452587a6ff793579ab512122cf000686"
        },
        "downloads": -1,
        "filename": "text2qti-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6974a2f825ad8e35ff39536bc74edddd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24327,
        "upload_time": "2020-04-01T21:08:38",
        "upload_time_iso_8601": "2020-04-01T21:08:38.981058Z",
        "url": "https://files.pythonhosted.org/packages/01/af/b5c4a707f03d344c033c90ef736f7e8320ede412b29d174ac6eb4963dc79/text2qti-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b14ffdda92049d3e29581b2badaaefd2b1992bf3cba733695e2e03ab851babd7",
          "md5": "ff510bae0258c9dbb0df98082392672a",
          "sha256": "a4ec7a9e432e2a7b0ea7217ecb39846f9caeaf7e6daac8690010c82cfd7ff761"
        },
        "downloads": -1,
        "filename": "text2qti-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff510bae0258c9dbb0df98082392672a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 31743,
        "upload_time": "2020-04-24T02:04:47",
        "upload_time_iso_8601": "2020-04-24T02:04:47.229713Z",
        "url": "https://files.pythonhosted.org/packages/b1/4f/fdda92049d3e29581b2badaaefd2b1992bf3cba733695e2e03ab851babd7/text2qti-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53a400115725b0d4bd41e1d9266f0dd44e6228c6e5519edb6a83492c3b5a9b3e",
          "md5": "6295f3924cce0bd50314a7a188d18194",
          "sha256": "4a8a6e6bac0ad037a2c5fc7bdc511ab88336c0bed165467f99d99225ad0b429b"
        },
        "downloads": -1,
        "filename": "text2qti-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6295f3924cce0bd50314a7a188d18194",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 34300,
        "upload_time": "2020-04-24T02:04:48",
        "upload_time_iso_8601": "2020-04-24T02:04:48.431664Z",
        "url": "https://files.pythonhosted.org/packages/53/a4/00115725b0d4bd41e1d9266f0dd44e6228c6e5519edb6a83492c3b5a9b3e/text2qti-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b938ac1cb365853273feb96b30fab2579efc8eee4b19a2678d06482975070368",
          "md5": "0a95e8757972f018b6324ebb69ac894b",
          "sha256": "3833f14ad692a51c1aa6a7b9abcf002d13727d6f575061cab87ce4129a98d00a"
        },
        "downloads": -1,
        "filename": "text2qti-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a95e8757972f018b6324ebb69ac894b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 36552,
        "upload_time": "2020-05-26T18:09:57",
        "upload_time_iso_8601": "2020-05-26T18:09:57.250799Z",
        "url": "https://files.pythonhosted.org/packages/b9/38/ac1cb365853273feb96b30fab2579efc8eee4b19a2678d06482975070368/text2qti-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26bdfd80565eb6aa2b141c93424644a967969ecbd0c9a157b672737a59a62694",
          "md5": "cf80ef2630efa2f285328838c15f712c",
          "sha256": "bf3740cefd6b90885b9d05ced52a43d1b9a8a12b815a89cea1d356df2ba86c7a"
        },
        "downloads": -1,
        "filename": "text2qti-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cf80ef2630efa2f285328838c15f712c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 41073,
        "upload_time": "2020-05-26T18:09:58",
        "upload_time_iso_8601": "2020-05-26T18:09:58.834992Z",
        "url": "https://files.pythonhosted.org/packages/26/bd/fd80565eb6aa2b141c93424644a967969ecbd0c9a157b672737a59a62694/text2qti-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d129b7af30cfd3af1320d88cf7aa294c337b9584f64fb3471c8e34464367c2e",
          "md5": "1d97218580d5a3a8f6e951fa170f2dfa",
          "sha256": "977b7dcd97f1b29d80a8518369bb45b489f6f6cd394c0f0c8d2005ebcc857993"
        },
        "downloads": -1,
        "filename": "text2qti-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d97218580d5a3a8f6e951fa170f2dfa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 38069,
        "upload_time": "2020-07-17T16:37:36",
        "upload_time_iso_8601": "2020-07-17T16:37:36.503873Z",
        "url": "https://files.pythonhosted.org/packages/5d/12/9b7af30cfd3af1320d88cf7aa294c337b9584f64fb3471c8e34464367c2e/text2qti-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "148a29f04e64c2524759fde8b79269baafa970bdf4ff8b183d723d9e58add38b",
          "md5": "1e5056383aac3b1c0e3d00899e270a1b",
          "sha256": "c0b291c8663b8585c0a09d03950519213064768146082a277a0eda849241298a"
        },
        "downloads": -1,
        "filename": "text2qti-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1e5056383aac3b1c0e3d00899e270a1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 43755,
        "upload_time": "2020-07-17T16:37:38",
        "upload_time_iso_8601": "2020-07-17T16:37:38.150832Z",
        "url": "https://files.pythonhosted.org/packages/14/8a/29f04e64c2524759fde8b79269baafa970bdf4ff8b183d723d9e58add38b/text2qti-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a157a736db0644fa6ed463c3ef1d63d7812be9dc2482b0bcd59341bdb415329",
          "md5": "1d5f09a07a5a1a19288af85e9b32d3c2",
          "sha256": "2f2d6f3603a7fc74441a750fcc1a54bd3839f83b6df66d53ae0386bdbe3c5c48"
        },
        "downloads": -1,
        "filename": "text2qti-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d5f09a07a5a1a19288af85e9b32d3c2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 44774,
        "upload_time": "2020-09-29T04:31:25",
        "upload_time_iso_8601": "2020-09-29T04:31:25.843115Z",
        "url": "https://files.pythonhosted.org/packages/5a/15/7a736db0644fa6ed463c3ef1d63d7812be9dc2482b0bcd59341bdb415329/text2qti-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcc27c23c3fe2f5158676c83820f8c478a71931907ad6910d3bd2e1d302f7e74",
          "md5": "014a41be6f111ffcd36cc020aa9c409c",
          "sha256": "254277f29033622799f4675bdfe2e05932967f78c9b1fc01d9bb9b2f9967b549"
        },
        "downloads": -1,
        "filename": "text2qti-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "014a41be6f111ffcd36cc020aa9c409c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 49796,
        "upload_time": "2020-09-29T04:31:28",
        "upload_time_iso_8601": "2020-09-29T04:31:28.047893Z",
        "url": "https://files.pythonhosted.org/packages/bc/c2/7c23c3fe2f5158676c83820f8c478a71931907ad6910d3bd2e1d302f7e74/text2qti-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "110f3a91f5d5f754fba59809ee17a837bb81b3854bf526737cf0a322f92354bb",
          "md5": "089fd75af0522820ec76a8b39542c9ea",
          "sha256": "47ae6dcb0f2840314010b067dfdd9bff1c439a6d110fd216288ae9ccaf09f02d"
        },
        "downloads": -1,
        "filename": "text2qti-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "089fd75af0522820ec76a8b39542c9ea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 53650,
        "upload_time": "2022-09-01T01:03:52",
        "upload_time_iso_8601": "2022-09-01T01:03:52.742072Z",
        "url": "https://files.pythonhosted.org/packages/11/0f/3a91f5d5f754fba59809ee17a837bb81b3854bf526737cf0a322f92354bb/text2qti-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c989c9194934477c9ba1aa991cca8368b35602e08e5ae99cdf91e53583cb6861",
          "md5": "0360bc4303d856b59b51b8ef1436c457",
          "sha256": "528f39fd5a2cc6dd452458305a4ca1e50d249a365d7d9cba378b9ea53b686cd0"
        },
        "downloads": -1,
        "filename": "text2qti-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0360bc4303d856b59b51b8ef1436c457",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 68090,
        "upload_time": "2022-09-01T01:03:55",
        "upload_time_iso_8601": "2022-09-01T01:03:55.809498Z",
        "url": "https://files.pythonhosted.org/packages/c9/89/c9194934477c9ba1aa991cca8368b35602e08e5ae99cdf91e53583cb6861/text2qti-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "110f3a91f5d5f754fba59809ee17a837bb81b3854bf526737cf0a322f92354bb",
        "md5": "089fd75af0522820ec76a8b39542c9ea",
        "sha256": "47ae6dcb0f2840314010b067dfdd9bff1c439a6d110fd216288ae9ccaf09f02d"
      },
      "downloads": -1,
      "filename": "text2qti-0.6.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "089fd75af0522820ec76a8b39542c9ea",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 53650,
      "upload_time": "2022-09-01T01:03:52",
      "upload_time_iso_8601": "2022-09-01T01:03:52.742072Z",
      "url": "https://files.pythonhosted.org/packages/11/0f/3a91f5d5f754fba59809ee17a837bb81b3854bf526737cf0a322f92354bb/text2qti-0.6.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c989c9194934477c9ba1aa991cca8368b35602e08e5ae99cdf91e53583cb6861",
        "md5": "0360bc4303d856b59b51b8ef1436c457",
        "sha256": "528f39fd5a2cc6dd452458305a4ca1e50d249a365d7d9cba378b9ea53b686cd0"
      },
      "downloads": -1,
      "filename": "text2qti-0.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0360bc4303d856b59b51b8ef1436c457",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 68090,
      "upload_time": "2022-09-01T01:03:55",
      "upload_time_iso_8601": "2022-09-01T01:03:55.809498Z",
      "url": "https://files.pythonhosted.org/packages/c9/89/c9194934477c9ba1aa991cca8368b35602e08e5ae99cdf91e53583cb6861/text2qti-0.6.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}