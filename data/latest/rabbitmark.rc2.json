{
  "info": {
    "author": "Soren I. Bjornstad",
    "author_email": "contact@sorenbjornstad.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "# RabbitMark\n\n**RabbitMark** is a powerful desktop bookmark manager built on the Qt framework,\n    designed for efficiently managing large collections of websites.\n\n\n## Features\n\n* **Tag-based organization**. Folders don't work well for bookmarks; things usually belong in multiple places.\n* **Lightning-fast filter and search**.\n* **Simple CLI** to search and open items without launching RabbitMark.\n* Full-featured **link-checker** to quickly find broken links and correct your bookmarks.\n* **Deep integration with the Internet Archive's WayBackMachine**.\n  Easily locate snapshots of websites that have gone offline using binary search,\n  request an immediate snapshot of a site you want to preserve,\n  and replace broken links found by the link checker with snapshots.\n* **Private bookmarks**, a simple way to hide some bookmarks when other people are looking at your screen.\n* **Browser-independent**: never worry about losing or migrating your bookmarks when you switch browsers again.\n* **Open, interchangeable file format**: uses a simple SQLite database and can import and export CSVs.\n* **Free and open-source**, GNU GPL3 license.\n\n\n## Installation\n\nRabbitMark can be installed through pip:\n\n```\npip install rabbitmark\n```\n\n\n## Adding bookmarks\n\nWhen you launch RabbitMark by typing `rabbitmark`,\n    RabbitMark will create a new, empty database for you.\n\n![A blank RabbitMark database](screenshots/empty.png)\n\nTo add your first bookmark, choose **Bookmark > New**.\nYou'll be prompted to add a name, URL, tags, and description.\nMost of these are self-explanatory.\nTags are comma-separated, and each tag you enter will be added to the tag pane on the left.\nHere's an example for Google:\n\n![An example entry for Google](screenshots/google.png)\n\nIn most cases, you'll likely want to add bookmarks by copying a URL to your clipboard,\n    then choosing **Bookmark > New from Clipboard**.\nThis works exactly the same way,\n    except that the URL field is pre-filled with the URL on your clipboard\n\nThere are two additional checkboxes at the bottom, *Private* and *Skip linkcheck*.\n\n**Private** will make this bookmark invisible\n    until you choose **File > Show Private Items**;\n    this is an easy way to prevent people casually looking at your screen\n    from seeing sensitive bookmarks.\n(This setting does not encrypt anything;\n anyone sitting down at your computer while you're not there\n can easily turn on this option and see your private bookmarks.\n If you have *really* sensitive bookmarks, you should find another solution.)\nIf all bookmarks in a tag are private, the tag won't appear in the list either.\n\n**Skip linkcheck** will tell the link-checker\n     not to try to determine if this site is accessible when you run the link check.\nSee *Finding link rot*, below, for more information.\n\n\n## Searching your bookmarks\n\nBy default, RabbitMark will show all of your bookmarks in the bookmark table pane.\nYou can limit this to find bookmarks of interest in two ways:\n    by selecting one or more tags in the left pane,\n    and by typing text into the **Filter** box at the top of the screen.\n\nOnce you've found what you're looking for,\n    click the **Copy** button next to the URL to copy it to your clipboard,\n    or the **Browse to** button to open it in a new tab in your default browser.\nYou can also use the respective keyboard shortcuts, **Ctrl+Shift+C** and **Ctrl+B**.\n\n![An example search for bookmarks tagged 'coding' and containing the word 'python'](screenshots/coding-python.png)\n\n\n### Tags\n\nIn most cases, you'll likely select a single tag in the left pane.\nThis will show only bookmarks that have that exact tag.\nFor more complicated searches, you can also select multiple tags.\nBy default, this will find all bookmarks that have at least one of those tags (an OR search),\n    but you can change this to find only bookmarks that have both tags\n    using the drop-down menu underneath the tags list.\n\n\n### Filtering\n\nThe filter box searches for substrings in the name, the URL, and the description.\nThis means that usually typing a word or two you expect to be related to the bookmark\n    will bring it up.\nNote that currently you cannot search for multiple words that aren't adjacent\n    (for example, in the screenshot below, typing `Python Ruby` would return no results\n     even though there's a bookmark whose title contains both `Python` and `Ruby`,\n     since they're separated by the word `vs`).\nIn practice, I have been using this filtering method for about ten years\n    and have never been frustrated by this limitation.\n\n\n## Managing tags\n\nOnce you have a lot of bookmarks, you'll likely find you've ended up\n    with duplicate tags, useless tags, and poorly named tags.\nYou can merge, delete, or rename tags from the **Tags** menu;\n    the only trick here is that these options only work with a single tag selected,\n    so for instance to merge a tag,\n    you select the tag you want to merge,\n    then choose the Merge option,\n    then type the name of the tag you want to merge it into.\n\n\n## Working with the WayBackMachine\n\nThe Internet Archive's [WayBackMachine](https://archive.org/web/) project\n    is an essential tool for any serious web user.\nIn many cases, a website that has gone permanently offline\n    or had its URL structure mangled so that links to it no longer work\n    will have been archived in the WayBackMachine at some earlier date,\n    and you'll be able to access the page you were looking for there.\nRabbitMark includes several features\n    to make working with the WayBackMachine more convenient.\n\n### Find in WayBackMachine\n\nIf you find that a link in your collection no longer works,\n    choose **Bookmark > Find in WayBackMachine** or press **Ctrl+W**\n    to search the WayBackMachine for snapshots of the site.\nIf it has at least one snapshot, you'll see a dialog like this one:\n\n![The WayBackMachine dialog](screenshots/waybackmachine.png)\n\nThe dialog initially starts with the most recent existing snapshot.\nYou can test the snapshot using the **Copy** and **Browse to** options\n    just as you would in RabbitMark's main screen.\nIf the snapshot has the content you're looking for,\n    choose **Use this snapshot as this site's URL in my database**.\nOtherwise, you can **Try an older snapshot** and check again,\n    and so on until you find a snapshot that both works\n    and is reasonably recent.\nThe dialog carries out a [binary search][bs] on the available snapshots,\n    which is the mathematically fastest way to land\n    on the best possible snapshot.\n\nIf the link returned a 404 at crawl time\n    (that is, when the WayBackMachine initially tried to take a snapshot,\n     it couldn't find the page),\nyou'll be warned at the top of the dialog.\nIn this case, you ordinarily don't need to test the link at all –\n    you can just choose to try an older snapshot\n    until that warning goes away,\n    and then continue from there.\n\n[bs]: https://www.khanacademy.org/computing/computer-science/algorithms/binary-search/a/binary-search\n\n\n### Request WayBackMachine Snapshot\n\nSometimes you might find a really cool but very obscure web page\n    and want to save it to your bookmarks.\nSince there is a lot of content on the Internet <super>[citation needed]</super>,\n    the WayBackMachine isn't able to snapshot everything all the time,\n    and there may not be a snapshot of very obscure pages.\nIn this case, it's smart to choose **Bookmark > Request WayBackMachine Snapshot**;\n    this will ask the WayBackMachine to grab and permanently store a new snapshot\n    on the fly for you,\n    so if the page ever goes offline in the future,\n    you'll be able to retrieve a copy with **Find in WayBackMachine**.\n\n\n## Finding link rot\n\nOver time, some bookmarks in your collection will inevitably stop working,\n    due to the [link rot][lr] endemic to the web.\nIt's often useful to check for this proactively\n    and correct links\n    or delete permanently inaccessible ones.\n\nTo get started, choose **Tools > Find Broken Links** or press **Ctrl+L**.\nA dialog like this one will appear,\n    and RabbitMark will proceed to ask each website\n    if the content is still available:\n\n![Scanning for link rot](screenshots/link-rot-scanning.png)\n\n(Specifically, it sends HTTP HEAD requests for best performance.)\n\nOnce it finishes up, you'll see the *Review broken links* dialog:\n\n![Handling link rot](screenshots/link-rot-review.png)\n\nOn the left, you can see and page through all the bookmarks\n    that failed the link check for one reason or another.\nOn the right, information of the current bookmark is shown.\nAt the top are *Error details*; when available,\n    this shows exactly what the website reported was wrong.\nIf there is no clear report of the problem,\n    or the error is an unusual one,\n    you may wish to click **Browse to** and see what's wrong for yourself.\n\nTo fix the issue, you can either directly edit the *Bookmark* area,\n    or choose one of the *Actions* at the bottom.\nChoosing **Dismiss** will remove the item from the list on the left,\n    but keep the bookmark in your database;\n    you can use this to keep track of which bookmarks you've dealt with.\n\nOccasionally a site will wrongly report that it's unavailable\n    when accessed via the link checker,\n    but work normally when accessed in your browser.\n(This is usually because a website trying to avoid spammy robots\n makes collateral damage out of useful automated crawlers like RabbitMark's.)\nIn this case, the easiest course of action is to turn on the *Skip linkcheck* flag\n    and then **Dismiss** the bookmark.\nThis means that you won't be advised in the future\n    if the page is legitimately no longer accessible,\n    but this is usually preferable to receiving false reports\n    that the site isn't working every time you check your links!\n\nBe aware that the link checker is not infallible.\nSometimes a link may still appear to work from the link-checker's perspective\n    (it gets an HTTP 200 from the website,\n     meaning the page exists and is functioning normally),\n    but not contain the same content it used to.\nMost humans would consider that a “broken link,”\n    but there's no way for the link checker to know that the content is different\n    than it used to be.\nNevertheless, the link checker is extremely helpful\n    for keeping large databases in good order.\n\n[lr]: https://en.wikipedia.org/wiki/Link_rot\n\n\n## Importing and exporting\n\nYou can export all your bookmarks to a CSV file\n    containing the name, URL, description, and tags of each entry\n    by choosing **File > Export CSV**.\n\nYou can import bookmarks from a CSV file\n    by choosing **File > Import CSV**.\nThe format is a little more flexible here:\n    you'll be asked to map columns in the CSV file\n    to at least the *Name* and *URL* fields in RabbitMark;\n    you can also choose to map\n    a (quoted) column of comma-separated tags or a column of descriptions\n    to the appropriate fields in RabbitMark,\n    if you have these columns in your CSV file.\nRabbitMark will skip importing any bookmarks that have the same URL\n    as a bookmark you already have in your collection,\n    so it's safe to or import a file that might have some sites you already have bookmarks for,\n    or a file that gets added to periodically.\n\n## CLI\n\nRabbitMark offers a simple CLI that you can use to find and browse to bookmarks\n    without opening RabbitMark.\nCurrently you cannot edit the database through the CLI\n    (I'd be happy to accept PRs for this:\n     I just haven't implemented it because I don't need it).\nTo learn about the CLI, type `rabbitmark --help`.\n\n\n## Environment\n\nBy default, RabbitMark places its SQLite database\n    in a `RabbitMark` folder\n    in your computer's AppData (Windows), Library (Mac) or XDG_HOME (Linux) folder.\nIf you'd like the database to be stored somewhere else,\n    or you want to use more than one database,\n    you can control the database location\n    by setting the `RABBITMARK_DATABASE` environment variable\n    to the path to a `.db` file,\n    e.g., `/home/soren/my-rabbitmark-database.db`.\nRabbitMark will create this file on startup if it doesn't exist\n    (but any parent folders need to exist).\n\nRabbitMark has an experimental, undocumented Pocket integration\n    that can retrieve read items from Pocket\n    or send bookmarks to Pocket for later reading;\n    the main issue right now is that the only authentication flows available\n    don't work well with desktop applications.\nI am hoping this will change in the future\n    and make enabling this for everyone feasible;\n    the integration is really quite slick,\n    except for the fact that it's nearly impossible to set up!\nYou can enable this integration by setting `RABBITMARK_POCKET_INTEGRATION` to `1`,\n    but you will need to read the source code to figure out how it works,\n    create your own Pocket app and API keys,\n    obtain an OAuth token through some weird hack,\n    and manually edit your RabbitMark database to configure it,\n    so this is not for the faint of heart.\n**I will not provide support on this integration.**\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sobjornstad/rabbitmark",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rabbitmark",
    "package_url": "https://pypi.org/project/rabbitmark/",
    "platform": null,
    "project_url": "https://pypi.org/project/rabbitmark/",
    "project_urls": {
      "Homepage": "https://github.com/sobjornstad/rabbitmark"
    },
    "release_url": "https://pypi.org/project/rabbitmark/0.2.1/",
    "requires_dist": [
      "SQLAlchemy (~=1.3.5)",
      "requests (~=2.21.0)",
      "PyQt5 (~=5.15.2)",
      "pyperclip (~=1.8.2)",
      "tabulate (==0.9.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "powerful tag-based bookmark manager for the desktop",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15826624,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "710dd7134aac5446ad53cd6513c0cec45bc1cac7f06c8b40befd10856e9a3a3e",
          "md5": "90344b041de83ec07a33882e4ce39fac",
          "sha256": "ed0c87c68fb7c5532d8ab00b80344c3b8816236cc7bdaf3b1f0581ec7ae8c226"
        },
        "downloads": -1,
        "filename": "rabbitmark-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90344b041de83ec07a33882e4ce39fac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 337864,
        "upload_time": "2022-11-19T18:42:28",
        "upload_time_iso_8601": "2022-11-19T18:42:28.347208Z",
        "url": "https://files.pythonhosted.org/packages/71/0d/d7134aac5446ad53cd6513c0cec45bc1cac7f06c8b40befd10856e9a3a3e/rabbitmark-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cda2f7a835dbee8fc672524bb0445393da5ee5bd9d84e6bfb10fd1f834a0ac0f",
          "md5": "9d7091f1a65760fcc7134c3fa19441c0",
          "sha256": "2a355e78d57dfb74d26c0ceba0dda30f2a41df3568dcf2ce590040531e3d05e5"
        },
        "downloads": -1,
        "filename": "rabbitmark-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9d7091f1a65760fcc7134c3fa19441c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 314667,
        "upload_time": "2022-11-19T18:42:30",
        "upload_time_iso_8601": "2022-11-19T18:42:30.961777Z",
        "url": "https://files.pythonhosted.org/packages/cd/a2/f7a835dbee8fc672524bb0445393da5ee5bd9d84e6bfb10fd1f834a0ac0f/rabbitmark-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53120959db35e79a3b49122e0d4dbe029320f0e3c0ad7fb8333139ad2354cd2d",
          "md5": "d6f033e86fb0736e013fc9c4c2a83450",
          "sha256": "a3e7aa941afde79c2d9db2e8e9659958253ab5cd529e66e42e2884d6508dee19"
        },
        "downloads": -1,
        "filename": "rabbitmark-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d6f033e86fb0736e013fc9c4c2a83450",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 343117,
        "upload_time": "2022-11-19T18:46:51",
        "upload_time_iso_8601": "2022-11-19T18:46:51.348457Z",
        "url": "https://files.pythonhosted.org/packages/53/12/0959db35e79a3b49122e0d4dbe029320f0e3c0ad7fb8333139ad2354cd2d/rabbitmark-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8aadfec4d2fd51cae6936974afc98f13661c0744c7eba9b307669e980c5c05c",
          "md5": "424c081c6f42c933652954ed081fa20b",
          "sha256": "4cff5d5d890cb19ae00c7a7b232288f9a87663fb9c7cc0b45cace26958b5c376"
        },
        "downloads": -1,
        "filename": "rabbitmark-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "424c081c6f42c933652954ed081fa20b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 319912,
        "upload_time": "2022-11-19T18:46:52",
        "upload_time_iso_8601": "2022-11-19T18:46:52.753902Z",
        "url": "https://files.pythonhosted.org/packages/d8/aa/dfec4d2fd51cae6936974afc98f13661c0744c7eba9b307669e980c5c05c/rabbitmark-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "53120959db35e79a3b49122e0d4dbe029320f0e3c0ad7fb8333139ad2354cd2d",
        "md5": "d6f033e86fb0736e013fc9c4c2a83450",
        "sha256": "a3e7aa941afde79c2d9db2e8e9659958253ab5cd529e66e42e2884d6508dee19"
      },
      "downloads": -1,
      "filename": "rabbitmark-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d6f033e86fb0736e013fc9c4c2a83450",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 343117,
      "upload_time": "2022-11-19T18:46:51",
      "upload_time_iso_8601": "2022-11-19T18:46:51.348457Z",
      "url": "https://files.pythonhosted.org/packages/53/12/0959db35e79a3b49122e0d4dbe029320f0e3c0ad7fb8333139ad2354cd2d/rabbitmark-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d8aadfec4d2fd51cae6936974afc98f13661c0744c7eba9b307669e980c5c05c",
        "md5": "424c081c6f42c933652954ed081fa20b",
        "sha256": "4cff5d5d890cb19ae00c7a7b232288f9a87663fb9c7cc0b45cace26958b5c376"
      },
      "downloads": -1,
      "filename": "rabbitmark-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "424c081c6f42c933652954ed081fa20b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 319912,
      "upload_time": "2022-11-19T18:46:52",
      "upload_time_iso_8601": "2022-11-19T18:46:52.753902Z",
      "url": "https://files.pythonhosted.org/packages/d8/aa/dfec4d2fd51cae6936974afc98f13661c0744c7eba9b307669e980c5c05c/rabbitmark-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}