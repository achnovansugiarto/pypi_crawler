{
  "info": {
    "author": "Ralf Schlatterbeck",
    "author_email": "rsc@runtux.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Other Audience",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "Antenna Plotting Program\n========================\n\n:Author: Ralf Schlatterbeck <rsc@runtux.com>\n\n.. |--| unicode:: U+2013   .. en dash\n.. |__| unicode:: U+2013   .. en dash without spaces\n    :trim:\n.. |_| unicode:: U+00A0 .. Non-breaking space\n    :trim:\n.. |-| unicode:: U+202F .. Thin non-breaking space\n    :trim:\n\nThis is a program to plot antenna-related data resulting from an antenna\nsimulation. It can read the text output produced by nec2c_ and my\npython mininec port pymininec_. Most notably it can plot antenna\nfar-field pattern in both 2D (Azimuth and Elevation) and 3D (as a 3D\ngraphic that can be rotated and zoomed). It supports a local display\nprogram (using matplotlib_) and a HTML output version that displays\neverything using javascript (using plotly_). The program features a\n``--help`` option. If the program called with ``--help`` does not\ndisplay a ``-H`` or ``--export-html`` option, you most likely do not\nhave a recent version of plotly_ installed. In that case only the\nmatplotlib_ variant is available.\n\nThe program started out as a companion-program to my pymininec_\nproject and is now an independent program.\n\nThe plot program can also display output files of nec2c_, not only\nfrom pymininec_.\n\nStandalone Plotting with Matplotlib\n-----------------------------------\n\nThe default is to plot all available\ngraphics, including an interactive 3d view. In addition with the\n``--azimuth`` or ``--elevation`` options you can get an Azimuth\ndiagram::\n\n    plot-antenna --azimuth test/12-el-1deg.pout\n\n.. figure:: https://raw.githubusercontent.com/schlatterbeck/plot-antenna/master/test/12-el-azimuth.png\n    :align: center\n\nor an elevation diagram::\n\n    plot-antenna --elevation test/12-el-1deg.pout\n\n.. figure:: https://raw.githubusercontent.com/schlatterbeck/plot-antenna/master/test/12-el-elevation.png\n    :align: center\n\nrespectively. Note that I used an output file with 1-degree resolution\nin elevation and azimuth angles not with 5 degrees as in the example\nabove. The pattern look smoother but a 3D-view will be very slow due to\nthe large number of points. The plot program also has a ``--help``\noption for further information. In particular the scaling of the antenna\nplot can be selected using the ``--scaling-method`` option with an\nadditional keyword which can be one of ``linear``, ``linear_db``, and\n``linear_voltage`` in addition to the default of ``arrl`` scaling. You\nmay consult Cebik's [1]_ article for explanation of the different\ndiagrams. The ``linear_voltage`` option is not explained by Cebik, it is\nin-between the ``linear`` and ``linear_db`` scaling options.\n\nThe latest version accepts several plot parameters, ``--elevation``,\n``--azimuth``, ``--plot3d``, ``--plot-vswr``, and ``--geo`` which are\nplotted into one diagram. The default is to plot the first four graphs.\nWith the ``--output`` option pictures can directly be saved without\ndisplaying the graphics on the screen. Note that unfortunately the\ngeometry display with the ``--geo`` option does not perform very well\nbecause matplotlib_ has poor support for panning and scaling in 3D\nplots.\n\nThe latest version has key-bindings for scrolling through the\nfrequencies of an antenna simulation. So if you have an output file with\na simulation of multiple frequencies (either with pymininec_ or\nnec2c_) you can display diagrams for the next frequency by typing\n``+``, and to the previous frequency by typing ``-``. For newer versions\nof matplotlib_ you can display a scrollbar for the frequencies with\nthe ``--with-slider`` option.\n\nOther keybindings switch the scaling for the antenna plots, ``a``\nswitches to ``arrl`` scaling, ``l`` switches to linear scaling, ``d``\nswitches to linear dB scaling, and ``v`` switches to linear voltage\nscaling.\n\nFinally the ``w`` key toggles display of the 3d diagram from/to\nwireframe display. Note that the wireframe display may not be supported\non all versions of matplotlib_ and/or graphics cards.\n\nPlotting for the Browser with Plotly\n------------------------------------\n\nAll the plot supported for matplotlib_ are also supported with plotly_.\nThese are ``--elevation``, ``--azimuth``, ``--plot3d``, ``--plot-vswr``,\nand ``--geo``. The plots can be either exported to a .html file using\nthe ``-H`` or ``--export-html`` option (with an additional filename to\nexport to) or injected into a running browser using the ``-S`` or\n``--show-in-browser`` option.\n\nUnlike for matplotlib_, each plot selected with an option is either\nshown in a separate window in the browser or exported to a separate\nfile. If exporting to a file, additional output options can be selected\nwith the ``--html-export-option`` setting. The default is to export the\nfile with all javascript included (adds about 3MB to the file size).\nWith ``--html-export-option=directory`` the javascript is not included\nand a ``plotly.min.js`` file is expected in the same directory as the\nexported file. This file ships with the plotly_ distribution. When\nexporting to a file, the plot name is appended to the file name given,\nthis allows export to several different plots in one program invocation.\n\nThe scaling variants selected with the ``--scaling-method`` option\ncannot currently be changed at runtime with the plotly_ plots. As with\nmatplotlib_, the default is ``arrl`` scaling.\n\nAll plots are interactive. For the far-field pattern\nplots (Azimuth, Elevation, 3D) frequencies can be selected in the legend\nto the right of the plot. With mouse-over you can see the current angle\n(Elevation or Azimuth with the 2D plots and both for the 3D plot) and\nthe gain at that point. For the 2D variants, more than one frequency can\nbe selected for plotting. This allows comparison of pattern between\ndifferent frequencies. For the 3D plot, the frequencies in the legend\nact like radio-buttons, only one at a time can be selected.\n\nWith the --geo option you get a display of the antenna geometry.\nUnfortunately plotly_ seems to have limitations on the zoom depths, so\nfor large antennas it is not possible to see the plot in deep detail. As\nof this writing not all geometry details are displayed. In particular 2D\npatches in NEC, transmission lines in NEC, and visualization of loaded\nsegments (e.g. with a capacity) are not shown.\n\n.. [1] L. B. Cebik. Radiation plots: Polar or rectangular; log or linear.\n    In Antenna Modeling Notes [2], chapter 48, pages 366â€“379. Available\n    in Cebik's `Antenna modelling notes episode 48`_\n.. [2] L. B. Cebik. Antenna Modeling Notes, volume 2. antenneX Online\n    Magazine, 2003. Available with antenna models from the `Cebik\n    collection`_.\n\n.. _`Cebik collection`:\n    http://on5au.be/Books/allmodnotes.zip\n.. _`Antenna modelling notes episode 48`:\n    http://on5au.be/content/amod/amod48.html\n.. _nec2c: https://packages.debian.org/stable/hamradio/nec2c\n.. _pymininec: https://github.com/schlatterbeck/pymininec\n.. _matplotlib: https://matplotlib.org/\n.. _plotly: https://github.com/plotly/plotly.py",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/schlatterbeck/plot-antenna",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "plot-antenna",
    "package_url": "https://pypi.org/project/plot-antenna/",
    "platform": "Any",
    "project_url": "https://pypi.org/project/plot-antenna/",
    "project_urls": {
      "Homepage": "https://github.com/schlatterbeck/plot-antenna"
    },
    "release_url": "https://pypi.org/project/plot-antenna/1.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Antenna plotting program for plotting antenna simulation results",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15586500,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03219ec64d883c732907d1e26aeb6cf2b5af2352378676dc9ee7cdf05ed05498",
          "md5": "dd22035f08e4a74093a2131250bacc4b",
          "sha256": "883bd2f9088a527f4e70174b0cab771ef6c00dd1aa6f098b03354cb7cd1670f4"
        },
        "downloads": -1,
        "filename": "plot-antenna-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dd22035f08e4a74093a2131250bacc4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 21431,
        "upload_time": "2022-10-30T13:03:25",
        "upload_time_iso_8601": "2022-10-30T13:03:25.988633Z",
        "url": "https://files.pythonhosted.org/packages/03/21/9ec64d883c732907d1e26aeb6cf2b5af2352378676dc9ee7cdf05ed05498/plot-antenna-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "03219ec64d883c732907d1e26aeb6cf2b5af2352378676dc9ee7cdf05ed05498",
        "md5": "dd22035f08e4a74093a2131250bacc4b",
        "sha256": "883bd2f9088a527f4e70174b0cab771ef6c00dd1aa6f098b03354cb7cd1670f4"
      },
      "downloads": -1,
      "filename": "plot-antenna-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "dd22035f08e4a74093a2131250bacc4b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 21431,
      "upload_time": "2022-10-30T13:03:25",
      "upload_time_iso_8601": "2022-10-30T13:03:25.988633Z",
      "url": "https://files.pythonhosted.org/packages/03/21/9ec64d883c732907d1e26aeb6cf2b5af2352378676dc9ee7cdf05ed05498/plot-antenna-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}