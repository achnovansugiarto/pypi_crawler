{
  "info": {
    "author": "Herwin Bozet",
    "author_email": "herwin.bozet@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: The Unlicense (Unlicense)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# Mooss - Serialize\n\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/mooss-serialize.svg)](https://pypi.python.org/pypi/mooss-serialize/)\n\n&nbsp;&nbsp;\n\n[![PyPI status](https://img.shields.io/pypi/status/mooss-serialize.svg)](https://pypi.python.org/pypi/mooss-serialize/)\n\n[![PyPi version](https://badgen.net/pypi/v/mooss-serialize/)](https://pypi.com/project/mooss-serialize)\n\n&nbsp;&nbsp;\n\n[![PyPI download month](https://img.shields.io/pypi/dm/mooss-serialize.svg)](https://pypi.python.org/pypi/mooss-serialize/)\n\n&nbsp;&nbsp;\n\n[![GitHub issues](https://img.shields.io/github/issues/aziascreations/mooss-serialize.svg)](https://GitHub.com/aziascreations/mooss-serialize/issues/)\n\n&nbsp;&nbsp;\n\n[![PyPI license](https://img.shields.io/pypi/l/mooss-serialize.svg)](https://pypi.python.org/pypi/mooss-serialize/)\n\n\n\n**⚠️ This package is a work-in-progress, it is not suitable nor reliable for any applications yet ⚠️**\n\n\n\nA Python package to help with serialization and deserialization of *dataclasses* through the help of a common interface\n\nwhile also insuring the parsed data is properly typed and handled.\n\n\n\nThis package was created because I often found myself needing to deserialize nested dataclasses with *slightly complex*\n\nvalue types, and because all other solutions I found were either too bloated or didn't work properly with what I had.\n\n\n\nIt is by no mean a replacement for other packages, but should suffice when dealing with *slightly complex* data\n\nstructures.\n\n\n\n## Setup\n\n\n\n### Requirements\n\n* Python 3.9 or newer.&nbsp;&nbsp;&nbsp;&nbsp;<sub><sup>(CPython and PyPy are both supported !)</sup></sub>\n\n\n\n### Installation\n\nRun one of the following commands to install the package:\n\n```bash\n\npython -m pip install --upgrade mooss-serialize\n\npip install --upgrade mooss-serialize\n\n```\n\n\n\n## Usage\n\n<!-- TODO: Add references to the IDeserializable class ! -->\n\n\n\nIn order to use this package, you simply have to create a class that extends the provided `ISerializable` interface\n\nthat also has the `dataclass` decorator, add some variable annotations with the desired types, and then use the\n\nprovided class methods to serialize and deserialize it easily.\n\n\n\nSee the examples below for more information\n\n\n\n### Creating classes\n\nThe following classes have more complex and fluid typing for their variables that will help illustrate the main\n\nadvantage of this package over oneliners and other simpler deserializers.\n\n```python\n\nfrom dataclasses import dataclass\n\nfrom typing import Optional, Union\n\n\n\nfrom mooss.serialize.interface import ISerializable\n\n\n\n@dataclass\n\nclass Address(ISerializable):\n\n    country: str\n\n    city: str\n\n    zip_code: Optional[int]\n\n    # TODO: Implement non-serializable fields  (has_multiple_mailboxes: bool)\n\n    street: str = \"Unknown\"\n\n\n\n@dataclass\n\nclass Person(ISerializable):\n\n    name: str\n\n    address: Union[Address, str, None]\n\n```\n\n\n\n### Preparing the raw data\n\nWe are preparing a dictionary that represent the non-deserialized data.\n\n```python\n\n# Representing the 'Person' and 'Address' classes.\n\n# The 'zip_code' field can be removed and will be 'None' since it uses the 'Optional' annotation.\n\ndata_person_full: dict = {\n\n    \"name\": \"John Smith\",\n\n    \"address\": {\n\n        \"country\": \"Belgium\",\n\n        \"city\": \"Brussels\",\n\n        \"zip_code\": 1000,\n\n        \"street\": \"Rue de la Tribune\",\n\n    },\n\n}\n\n\n\n# Only representing the 'Person' class and replacing the 'Address' class by a string.\n\ndata_person_simple: dict = {\n\n    \"name\": \"John Smith\",\n\n    \"address\": \"Rue de la Tribune, 1000 Brussels, Belgium\"\n\n}\n\n```\n\nThis data can also be represented as a JSON string when using `from_json` in the next step.\n\n\n\n### Parsing the data\n\n```python\n\nperson_full = Person.from_dict(data_person_full)\n\n\n\nprint(person_full)\n\n```\n\n\n\n### Other parameters\n\nThe `from_dict` and `from_json` methods features a couple of parameters that can help you influence the way it will react and process some\n\nspecific cases depending on your requirements.\n\n\n\n<details>\n\n    <summary>Click here to expand list of all the available parameters</summary>\n\n    This information is also available in the methods' docstring.\n\n    <table>\n\n        <tr>\n\n            <td><b>Parameter</b></td>\n\n            <td><b>Type</b></td>\n\n            <td><b>Description</b></td>\n\n            <td><b>Default</b></td>\n\n        </tr>\n\n        <tr>\n\n            <td><code>data_dict</code></td>\n\n            <td><code>dict</code></td>\n\n            <td>Data to be deserialized</td>\n\n            <td><i>Required</i></td>\n\n        </tr>\n\n        <tr>\n\n            <td><code>data_json</code></td>\n\n            <td><code>dict</code></td>\n\n            <td>Data to be parsed into a dict and be deserialized</td>\n\n            <td><i>Required</i></td>\n\n        </tr>\n\n        <tr>\n\n            <td><code>allow_unknown</code></td>\n\n            <td><code>bool</code></td>\n\n            <td>Allow unknown fields to be processed instead of raising a <code>ValueError</code> exception,\n\nother parameters will determine their use if <code>True</code>.</td>\n\n            <td><code>False</code></td>\n\n        </tr>\n\n        <tr>\n\n            <td><code>add_unknown_as_is</code></td>\n\n            <td><code>bool</code></td>\n\n            <td>Adds unknown fields/values as-is in the final class if <code>allow_unknown</code> is also <code>True</code>.</td>\n\n            <td><code>False</code></td>\n\n        </tr>\n\n        <tr>\n\n            <td><code>allow_as_is_unknown_overloading</code></td>\n\n            <td><code>bool</code></td>\n\n            <td>Allow unknown fields/values to overload existing class attributes.</td>\n\n            <td><code>False</code></td>\n\n        </tr>\n\n        <tr>\n\n            <td><code>allow_missing_required</code></td>\n\n            <td><code>bool</code></td>\n\n            <td>TODO</td>\n\n            <td><code>False</code></td>\n\n        </tr>\n\n        <tr>\n\n            <td><code>allow_missing_nullable</code></td>\n\n            <td><code>bool</code></td>\n\n            <td>TODO</td>\n\n            <td><code>False</code></td>\n\n        </tr>\n\n        <tr>\n\n            <td><code>add_unserializable_as_dict</code></td>\n\n            <td><code>bool</code></td>\n\n            <td>TODO</td>\n\n            <td><code>False</code></td>\n\n        </tr>\n\n        <tr>\n\n            <td><code>validate_type</code></td>\n\n            <td><code>bool</code></td>\n\n            <td>Enables a strict type check between the class' serializable fields and the given data.</td>\n\n            <td><code>True</code></td>\n\n        </tr>\n\n        <tr>\n\n            <td><code>parsing_depth</code></td>\n\n            <td><code>int</code></td>\n\n            <td>The recursive depth to which the deserialization process will go.<br>(<code>-1</code> means infinite)</td>\n\n            <td><code>-1</code></td>\n\n        </tr>\n\n        <tr>\n\n            <td><code>do_deep_copy</code></td>\n\n            <td><code>bool</code></td>\n\n            <td>Performs a deep copy of the given 'data_dict' to prevent modifications from affecting other variables\n\nthat may reference it.</td>\n\n            <td><code>False</code></td>\n\n        </tr>\n\n    </table>\n\n</details>\n\n\n\n## Type annotations\n\nSince the `dataclass` decorator is required on any class that extends `ISerializable`, the methods can easily detect\n\nand validate the different types for the given data, which in turn can help you reduce the amount of check you will\n\nhave to perform on the final deserialized data.\n\n\n\nThis approach was used due to the fact that many one-liners and small helpers available on the internet do not\n\nimplement this type of checks and usually leave you with potentially invalidly-typed data, or simply data that is not\n\ndeserialized properly in the case of nested deserializable classes.\n\n\n\nIt should be noted that undefined fields can also be supported and copied as-is if the right parameters are given\n\nto the methods, but this isn't done by default to prevent silent errors and overloading existing attributes !\n\n\n\n### Supported types\n\nThese types should cover 99% of the uses cases for this package, however, in the event you would wish to use\n\nunsupported types, you can always do so by using the `Any` type to skip type checking for a given field.\n\n\n\n* **Primitives:**<br>\n\n`str`, `int`, `float`, `bool`\n\n* **Simple sets:**<br>\n\n`list`, `dict`, `tuple`, `set`\n\n* **Composed sets\\*:**<br>\n\n`list[...]`, `dict[...]`, `tuple[...]`, `set[...]`\n\n* **Variable types\\*:**<br>\n\n`Union`, `Optional`, `Any`\n\n\n\n<sup>*: Has some limitations on what can be contained between the square brackets.</sup>\n\n\n\n### Limitations\n\nThese limitations are put in place due to the fact that I don't have the time to implement a proper way to\n\nsupport weird and unusual data types.\n\n\n\n[...] If you want to handle these, you can either add support for it yourself or use a specialized and bulkier\n\npackage.\n\n\n\n* Mixed complex types: list[ISerializable, primitive]\n\n  * A mix of primitives and sets should work but should preferably not be used.\n\n\n\n#### More specific and rare types\n\nTypes and utilities such as the ones listed below should be supported at some point, but since it is not urgent,\n\nthere is no set timeline for their implementation.\n\n\n\n*List of types and utilities that may be supported:*<br>\n\n`Set`, `Collection`, `NamedTuple`, `NewType`, `Mapping`, `Sequence`, `TypeVar` and `Iterable`.\n\n\n\n## Contributing\n\nIf you want more information on how to contribute to this package, you should refer to [develop.md](develop.md).\n\n\n\n## License\n\n[Unlicense](LICENSE)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aziascreations/mooss-serialize",
    "keywords": "",
    "license": "",
    "maintainer": "Herwin Bozet",
    "maintainer_email": "herwin.bozet@gmail.com",
    "name": "mooss-serialize",
    "package_url": "https://pypi.org/project/mooss-serialize/",
    "platform": null,
    "project_url": "https://pypi.org/project/mooss-serialize/",
    "project_urls": {
      "Homepage": "https://github.com/aziascreations/mooss-serialize"
    },
    "release_url": "https://pypi.org/project/mooss-serialize/0.0.5/",
    "requires_dist": [
      "nose2 (<1.0.0,>=0.11.0) ; extra == 'dev'",
      "semver (<3.0.0,>=2.13.0) ; extra == 'dev'",
      "check-manifest (<1.0,>=0.47) ; extra == 'dev'"
    ],
    "requires_python": ">=3.9",
    "summary": "A Python package to help with serialization and deserialization of dataclasses through the help of a common interface while also insuring the parsed data is properly typed and handled in many situations.",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13137069,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79abeb745587aaeef58145ab317410bb906d72f94fc4403788708f6831722f16",
          "md5": "05ae0d664c0090f97cb66e266ec1fc97",
          "sha256": "c20e5569821d9a0f2f02e8ce96dc0029e8776c1a66d74cfb53b52c219a787bd8"
        },
        "downloads": -1,
        "filename": "mooss_serialize-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05ae0d664c0090f97cb66e266ec1fc97",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 4402,
        "upload_time": "2022-03-04T03:35:16",
        "upload_time_iso_8601": "2022-03-04T03:35:16.658911Z",
        "url": "https://files.pythonhosted.org/packages/79/ab/eb745587aaeef58145ab317410bb906d72f94fc4403788708f6831722f16/mooss_serialize-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "118e0eea91cca866934363b9043ea24938b1be2c757668bdf63a560aef7e2f3e",
          "md5": "cf3fa1e47649eaee033b74c095cc8948",
          "sha256": "a399487021bcc133b089fb303c41d560c1f770688eeb1f64e6a47849bee10ac6"
        },
        "downloads": -1,
        "filename": "mooss-serialize-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cf3fa1e47649eaee033b74c095cc8948",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 3702,
        "upload_time": "2022-03-04T03:35:20",
        "upload_time_iso_8601": "2022-03-04T03:35:20.057152Z",
        "url": "https://files.pythonhosted.org/packages/11/8e/0eea91cca866934363b9043ea24938b1be2c757668bdf63a560aef7e2f3e/mooss-serialize-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99b5c980dbffc9595f7ddeea857e115d4cef568b813f0bec9cc2a161f466aa11",
          "md5": "0781836f852232c4df4de91d01d94784",
          "sha256": "313b05b8025b855104fe6152c113bd39d8ac46b726c2f097c8712edc1d322b1c"
        },
        "downloads": -1,
        "filename": "mooss_serialize-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0781836f852232c4df4de91d01d94784",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 4466,
        "upload_time": "2022-03-04T03:35:18",
        "upload_time_iso_8601": "2022-03-04T03:35:18.064616Z",
        "url": "https://files.pythonhosted.org/packages/99/b5/c980dbffc9595f7ddeea857e115d4cef568b813f0bec9cc2a161f466aa11/mooss_serialize-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4886d4569e8621874b16e71bcbc1d472e2b11de8e1efe888529ebbad1a47769",
          "md5": "9a1f17ba40d0822b17c908150b730067",
          "sha256": "a9d2b532c838e5ec47a6dc8da28bf0524765d71d7a7f1b671befd3f4dee84a5d"
        },
        "downloads": -1,
        "filename": "mooss-serialize-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9a1f17ba40d0822b17c908150b730067",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 3784,
        "upload_time": "2022-03-04T03:35:21",
        "upload_time_iso_8601": "2022-03-04T03:35:21.162281Z",
        "url": "https://files.pythonhosted.org/packages/a4/88/6d4569e8621874b16e71bcbc1d472e2b11de8e1efe888529ebbad1a47769/mooss-serialize-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbbf4d2533e1ac26d2db2dce1f6d786d98d299995e3a78abc3291df562cfc667",
          "md5": "42437e2f4e29f28c6b242726e33b8f72",
          "sha256": "455a448a8dbf6d94308704d45f741610a2ecd400c3a695d09a52180b42b0ab19"
        },
        "downloads": -1,
        "filename": "mooss_serialize-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "42437e2f4e29f28c6b242726e33b8f72",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 6582,
        "upload_time": "2022-03-04T03:33:54",
        "upload_time_iso_8601": "2022-03-04T03:33:54.082607Z",
        "url": "https://files.pythonhosted.org/packages/fb/bf/4d2533e1ac26d2db2dce1f6d786d98d299995e3a78abc3291df562cfc667/mooss_serialize-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da71d1bb012916661869bd30d03df005de4ef056910dd42c53a42ca1f3a9832b",
          "md5": "3b99bba0d13dd787e1d23559a600b3e6",
          "sha256": "d9d40fa64d0447d415c2b55b140de5dbf0a588a1c9f15e144df5bc34f598436f"
        },
        "downloads": -1,
        "filename": "mooss-serialize-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3b99bba0d13dd787e1d23559a600b3e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 8625,
        "upload_time": "2022-03-04T03:34:15",
        "upload_time_iso_8601": "2022-03-04T03:34:15.209996Z",
        "url": "https://files.pythonhosted.org/packages/da/71/d1bb012916661869bd30d03df005de4ef056910dd42c53a42ca1f3a9832b/mooss-serialize-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce7add69fe2cbd133bb4f36fea45a33a33e8ec87a8b7a19f7491cdb7574de00d",
          "md5": "5764ee9a97ae5375905d1626ca06e7e4",
          "sha256": "f1f2b5c6a1cafa459170094d0da422e6175586eae2d9394f8537dbc35fe5c72b"
        },
        "downloads": -1,
        "filename": "mooss_serialize-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5764ee9a97ae5375905d1626ca06e7e4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 9835,
        "upload_time": "2022-03-08T21:59:51",
        "upload_time_iso_8601": "2022-03-08T21:59:51.539537Z",
        "url": "https://files.pythonhosted.org/packages/ce/7a/dd69fe2cbd133bb4f36fea45a33a33e8ec87a8b7a19f7491cdb7574de00d/mooss_serialize-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47a799bb6aa0431a40b25a63f9de2eb1a1ed3c127590ac52bdf0fd7a0ad081d0",
          "md5": "d31c417ef348171c7135ecd513545aab",
          "sha256": "5e5516981467891fff86d901342fd09a2ae4f6671fa9564d9f3e413f11d18f80"
        },
        "downloads": -1,
        "filename": "mooss-serialize-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d31c417ef348171c7135ecd513545aab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 15116,
        "upload_time": "2022-03-08T21:59:52",
        "upload_time_iso_8601": "2022-03-08T21:59:52.913000Z",
        "url": "https://files.pythonhosted.org/packages/47/a7/99bb6aa0431a40b25a63f9de2eb1a1ed3c127590ac52bdf0fd7a0ad081d0/mooss-serialize-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f6e6957e359b2578b8dd019cc9ccd50c81112b1f544d1113ca0dac3ca45f9ac",
          "md5": "476431e166629b291b7437516a11bd5e",
          "sha256": "2c2ac67c0de0fba71a43b53f56d5544c1f2e700a422f2e2d0d25fd7a58767c29"
        },
        "downloads": -1,
        "filename": "mooss_serialize-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "476431e166629b291b7437516a11bd5e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 11339,
        "upload_time": "2022-03-10T11:10:59",
        "upload_time_iso_8601": "2022-03-10T11:10:59.999844Z",
        "url": "https://files.pythonhosted.org/packages/3f/6e/6957e359b2578b8dd019cc9ccd50c81112b1f544d1113ca0dac3ca45f9ac/mooss_serialize-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1f1a66bce5eb7baee19a12a3f1b8b99d8cc3007591e330ce62a4825dd0d27c3",
          "md5": "2963391ce30e68259ca88c73fafb7b22",
          "sha256": "5468c65d851e65f35e67fbf0f7b6e66d6d1c3383d6be8402dfc2425440b95d97"
        },
        "downloads": -1,
        "filename": "mooss-serialize-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2963391ce30e68259ca88c73fafb7b22",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 18325,
        "upload_time": "2022-03-10T11:11:01",
        "upload_time_iso_8601": "2022-03-10T11:11:01.131411Z",
        "url": "https://files.pythonhosted.org/packages/a1/f1/a66bce5eb7baee19a12a3f1b8b99d8cc3007591e330ce62a4825dd0d27c3/mooss-serialize-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3f6e6957e359b2578b8dd019cc9ccd50c81112b1f544d1113ca0dac3ca45f9ac",
        "md5": "476431e166629b291b7437516a11bd5e",
        "sha256": "2c2ac67c0de0fba71a43b53f56d5544c1f2e700a422f2e2d0d25fd7a58767c29"
      },
      "downloads": -1,
      "filename": "mooss_serialize-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "476431e166629b291b7437516a11bd5e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 11339,
      "upload_time": "2022-03-10T11:10:59",
      "upload_time_iso_8601": "2022-03-10T11:10:59.999844Z",
      "url": "https://files.pythonhosted.org/packages/3f/6e/6957e359b2578b8dd019cc9ccd50c81112b1f544d1113ca0dac3ca45f9ac/mooss_serialize-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a1f1a66bce5eb7baee19a12a3f1b8b99d8cc3007591e330ce62a4825dd0d27c3",
        "md5": "2963391ce30e68259ca88c73fafb7b22",
        "sha256": "5468c65d851e65f35e67fbf0f7b6e66d6d1c3383d6be8402dfc2425440b95d97"
      },
      "downloads": -1,
      "filename": "mooss-serialize-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "2963391ce30e68259ca88c73fafb7b22",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 18325,
      "upload_time": "2022-03-10T11:11:01",
      "upload_time_iso_8601": "2022-03-10T11:11:01.131411Z",
      "url": "https://files.pythonhosted.org/packages/a1/f1/a66bce5eb7baee19a12a3f1b8b99d8cc3007591e330ce62a4825dd0d27c3/mooss-serialize-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}