{
  "info": {
    "author": "Dr. Nick",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: C",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "UltraJSON\n=========\n\n.. image:: https://img.shields.io/pypi/v/ujson.svg\n    :alt: PyPI version\n    :target: https://pypi.python.org/pypi/ujson\n\n.. image:: https://img.shields.io/pypi/pyversions/ujson.svg\n    :alt: Supported Python versions\n    :target: https://pypi.python.org/pypi/ujson\n\n.. image:: https://img.shields.io/pypi/dm/ujson.svg\n    :alt: PyPI downloads\n    :target: https://pypistats.org/packages/ujson\n\n.. image:: https://github.com/ultrajson/ultrajson/workflows/Test/badge.svg\n    :alt: GitHub Actions status\n    :target: https://github.com/ultrajson/ultrajson/actions?query=workflow%3ATest\n\n.. image:: https://travis-ci.com/ultrajson/ultrajson.svg?branch=master\n    :alt: Travis CI status\n    :target: https://travis-ci.com/ultrajson/ultrajson\n\n.. image:: https://zenodo.org/badge/1418941.svg\n   :alt: DOI\n   :target: https://zenodo.org/badge/latestdoi/1418941\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :alt: Code style: Black\n    :target: https://github.com/psf/black\n\nUltraJSON is an ultra fast JSON encoder and decoder written in pure C with bindings for Python 3.5+.\n\nTo install it just run pip as usual:\n\n.. code-block:: sh\n\n    $ pip install ujson\n\n=======================\nWARNING - READ THIS NOW\n=======================\nThis version of ujson is specifically intended to fix a segmentation fault in ujson until this_ PR is merged (and backported to 3.2)\n\n.. _this: https://github.com/ultrajson/ultrajson/pull/469\n\n============\nUsage\n============\nMay be used as a drop in replacement for most other JSON parsers for Python:\n\n.. code-block:: python\n\n    >>> import ujson\n    >>> ujson.dumps([{\"key\": \"value\"}, 81, True])\n    '[{\"key\":\"value\"},81,true]'\n    >>> ujson.loads(\"\"\"[{\"key\": \"value\"}, 81, true]\"\"\")\n    [{u'key': u'value'}, 81, True]\n\n~~~~~~~~~~~~~~~\nEncoder options\n~~~~~~~~~~~~~~~\nencode_html_chars\n-----------------\nUsed to enable special encoding of \"unsafe\" HTML characters into safer Unicode sequences. Default is ``False``:\n\n.. code-block:: python\n\n    >>> ujson.dumps(\"<script>John&Doe\", encode_html_chars=True)\n    '\"\\\\u003cscript\\\\u003eJohn\\\\u0026Doe\"'\n\nensure_ascii\n-------------\nLimits output to ASCII and escapes all extended characters above 127. Default is true. If your end format supports UTF-8 setting this option to false is highly recommended to save space:\n\n.. code-block:: python\n\n    >>> ujson.dumps(u\"\\xe5\\xe4\\xf6\")\n    '\"\\\\u00e5\\\\u00e4\\\\u00f6\"'\n    >>> ujson.dumps(u\"\\xe5\\xe4\\xf6\", ensure_ascii=False)\n    '\"\\xc3\\xa5\\xc3\\xa4\\xc3\\xb6\"'\n\nescape_forward_slashes\n----------------------\nControls whether forward slashes (``/``) are escaped. Default is ``True``:\n\n.. code-block:: python\n\n    >>> ujson.dumps(\"http://esn.me\")\n    '\"http:\\/\\/esn.me\"'\n    >>> ujson.dumps(\"http://esn.me\", escape_forward_slashes=False)\n    '\"http://esn.me\"'\n\nindent\n------\nControls whether indention (\"pretty output\") is enabled. Default is ``0`` (disabled):\n\n.. code-block:: python\n\n    >>> ujson.dumps({\"foo\": \"bar\"})\n    '{\"foo\":\"bar\"}'\n    >>> ujson.dumps({\"foo\": \"bar\"}, indent=4)\n    {\n        \"foo\":\"bar\"\n    }\n\n==========\nBenchmarks\n==========\n*UltraJSON* calls/sec compared to other popular JSON parsers with performance gain specified below each.\n\n~~~~~~~~~~~~~\nTest machine:\n~~~~~~~~~~~~~\n\nLinux 5.0.0-1032-azure x86_64 #34-Ubuntu SMP Mon Feb 10 19:37:25 UTC 2020\n\n~~~~~~~~~\nVersions:\n~~~~~~~~~\n\n- CPython 3.8.2 (default, Feb 28 2020, 14:28:43) [GCC 7.4.0]\n- nujson    : 1.35.2\n- orjson    : 2.6.1\n- simplejson: 3.17.0\n- ujson     : 2.0.2\n\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n|                                                                               | ujson      | nujson     | orjson     | simplejson | json       |\n+===============================================================================+============+============+============+============+============+\n| Array with 256 doubles                                                        |            |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| encode                                                                        |     22,082 |      4,282 |     76,975 |      5,328 |      5,436 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| decode                                                                        |     24,127 |     34,349 |     29,059 |     14,174 |     13,822 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| Array with 256 UTF-8 strings                                                  |            |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| encode                                                                        |      3,557 |      2,528 |     24,300 |      3,061 |      2,068 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| decode                                                                        |      2,030 |      2,490 |        931 |        406 |        358 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| Array with 256 strings                                                        |            |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| encode                                                                        |     39,041 |     31,769 |     76,403 |     16,615 |     16,910 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| decode                                                                        |     25,185 |     24,287 |     34,437 |     32,388 |     27,999 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| Medium complex object                                                         |            |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| encode                                                                        |     10,382 |     11,427 |     32,995 |      3,959 |      5,275 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| decode                                                                        |      9,785 |      9,796 |     11,515 |      5,898 |      7,200 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| Array with 256 True values                                                    |            |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| encode                                                                        |    114,341 |    101,039 |    344,256 |     62,382 |     72,872 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| decode                                                                        |    149,367 |    151,615 |    181,123 |    114,597 |    130,392 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| Array with 256 dict{string, int} pairs                                        |            |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| encode                                                                        |     13,715 |     14,420 |     51,942 |      3,271 |      6,584 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| decode                                                                        |     12,670 |     11,788 |     12,176 |      6,743 |      8,278 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs                         |            |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| encode                                                                        |         50 |         54 |        216 |         10 |         23 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| decode                                                                        |         32 |         32 |         30 |         20 |         23 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs, outputting sorted keys |            |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| encode                                                                        |         46 |         41 |            |          8 |         24 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| Complex object                                                                |            |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| encode                                                                        |        533 |        582 |            |        408 |        431 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+\n| decode                                                                        |        466 |        454 |            |        154 |        164 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+------------+",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/das-intensity/ultrajson",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/das-intensity/ultrajson",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ujson-segfix",
    "package_url": "https://pypi.org/project/ujson-segfix/",
    "platform": "any",
    "project_url": "https://pypi.org/project/ujson-segfix/",
    "project_urls": {
      "Download": "https://github.com/das-intensity/ultrajson",
      "Homepage": "https://github.com/das-intensity/ultrajson",
      "Source": "https://github.com/das-intensity/ultrajson"
    },
    "release_url": "https://pypi.org/project/ujson-segfix/3.2.1.dev3/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Ultra fast JSON encoder and decoder for Python - with segfault fix",
    "version": "3.2.1.dev3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11080592,
  "releases": {
    "3.2.1.dev3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f95ced2de6963d55e9ae8f4f5a6660e52f8068cf6f6972c06eecf085490dd346",
          "md5": "1df17afff2b7f0cd6552bd42879b337a",
          "sha256": "3e6ce4dc75f2ed076e78b6044c7dcc667472ffbd18035a9bf29c6d2531c68fe9"
        },
        "downloads": -1,
        "filename": "ujson-segfix-3.2.1.dev3.tar.gz",
        "has_sig": false,
        "md5_digest": "1df17afff2b7f0cd6552bd42879b337a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 7132717,
        "upload_time": "2021-08-03T15:08:51",
        "upload_time_iso_8601": "2021-08-03T15:08:51.525856Z",
        "url": "https://files.pythonhosted.org/packages/f9/5c/ed2de6963d55e9ae8f4f5a6660e52f8068cf6f6972c06eecf085490dd346/ujson-segfix-3.2.1.dev3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f95ced2de6963d55e9ae8f4f5a6660e52f8068cf6f6972c06eecf085490dd346",
        "md5": "1df17afff2b7f0cd6552bd42879b337a",
        "sha256": "3e6ce4dc75f2ed076e78b6044c7dcc667472ffbd18035a9bf29c6d2531c68fe9"
      },
      "downloads": -1,
      "filename": "ujson-segfix-3.2.1.dev3.tar.gz",
      "has_sig": false,
      "md5_digest": "1df17afff2b7f0cd6552bd42879b337a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 7132717,
      "upload_time": "2021-08-03T15:08:51",
      "upload_time_iso_8601": "2021-08-03T15:08:51.525856Z",
      "url": "https://files.pythonhosted.org/packages/f9/5c/ed2de6963d55e9ae8f4f5a6660e52f8068cf6f6972c06eecf085490dd346/ujson-segfix-3.2.1.dev3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}