{
  "info": {
    "author": "Chau Nguyen",
    "author_email": "chau@etri.re.kr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
      "Programming Language :: Python :: 2.7"
    ],
    "description": ".. You should enable this project on travis-ci.org and coveralls.io to make\n   these badges work. The necessary Travis and Coverage config files have been\n   generated for you.\n\n.. .. image:: https://travis-ci.org/etri-sodas/ckanext-resourceauthorizer.svg?branch=master\n    :target: https://travis-ci.org/etri-sodas/ckanext-resourceauthorizer\n\n.. .. image:: https://coveralls.io/repos/etri-sodas/ckanext-resourceauthorizer/badge.svg\n  :target: https://coveralls.io/r/etri-sodas/ckanext-resourceauthorizer\n\n.. .. image:: https://pypip.in/download/ckanext-resourceauthorizer/badge.svg\n    :target: https://pypi.python.org/pypi/etri-sodas/ckanext-resourceauthorizer/\n    :alt: Downloads\n\n.. .. image:: https://pypip.in/version/ckanext-resourceauthorizer/badge.svg\n    :target: https://pypi.python.org/pypi/ckanext-resourceauthorizer/\n    :alt: Latest Version\n\n.. .. image:: https://pypip.in/py_versions/ckanext-resourceauthorizer/badge.svg\n    :target: https://pypi.python.org/pypi/ckanext-resourceauthorizer/\n    :alt: Supported Python versions\n\n.. .. image:: https://pypip.in/status/ckanext-resourceauthorizer/badge.svg\n    :target: https://pypi.python.org/pypi/ckanext-resourceauthorizer/\n    :alt: Development Status\n\n.. .. image:: https://pypip.in/license/ckanext-resourceauthorizer/badge.svg\n    :target: https://pypi.python.org/pypi/ckanext-resourceauthorizer/\n    :alt: License\n\n===========================================================\nckanext-resourceauthorizer - Resource authorizing extension\n===========================================================\n\n.. Put a description of your extension here:\n   What does it do? What features does it have?\n   Consider including some screenshots or embedding a video!\n\nResourceauthorizer is a extension for enalbing the acl-based permission control at resource-level in CKAN, which currently only support role-based access permission at dataset-level.\n\nThis extension provides an ability to let users specify who (users or organizations) can or cannot access a certain resource.\n\nNotes:\n\n* Access permission setting for an organization will affect all members of the organization.\n* Extension always uses access permission at user-level as the final decision if there exists both rules for user and organization.\n* Allowing user/organization to access a resource will enable the access of the dataset metadata for that user/organization.\n\n.. image:: https://drive.google.com/uc?id=1QUiZNw96luC8uE8ujy1cF4N8F_sYYQgV\n\n------------\nRequirements\n------------\n\nThis extension was developed and tested under CKAN-2.7.3\n\n------------\nInstallation\n------------\n\n.. Add any additional install steps to the list below.\n   For example installing any non-Python dependencies or adding any required\n   config settings.\n\nTo install ckanext-resourceauthorizer:\n\n1. Activate your CKAN virtual environment, for example::\n\n     . /usr/lib/ckan/default/bin/activate\n\n2. Install the ckanext-resourceauthorizer Python package into your virtual environment::\n\n     pip install ckanext-resourceauthorizer\n\n3. Add ``resourceauthorizer`` to the ``ckan.plugins`` setting in your CKAN\n   config file (by default the config file is located at\n   ``/etc/ckan/default/production.ini``).\n\n4. Restart CKAN. For example if you've deployed CKAN with Apache on Ubuntu::\n\n    sudo service apache2 reload\n\n\n---------------\nConfig Settings\n---------------\n\nRun the following command to create the necessary tables in the database (ensuring the pyenv is activated)::\n\n    (pyenv) $ paster --plugin=ckanext-resourceauthorizer resourceauthorizer initdb --config=/etc/ckan/default/production.ini\n\nRun the following command to reindex the CKAN metadata in solr (ensuring the pyenv is activated)::\n\n    (pyenv) $ paster --plugin=ckan search-index rebuild --config=/etc/ckan/default/production.ini\n\nFinally, restart CKAN to have the changes take affect:\n\n    sudo service apache2 restart\n\n\n\n------------------------\nDevelopment Installation\n------------------------\n\nTo install ckanext-resourceauthorizer for development, activate your CKAN virtualenv and\ndo::\n\n    git clone https://github.com/etri-sodas/ckanext-resourceauthorizer.git\n    cd ckanext-resourceauthorizer\n    python setup.py develop\n    pip install -r dev-requirements.txt\n\n\n-----------------\nRunning the Tests\n-----------------\n\nTo run the tests, do::\n\n    nosetests --nologcapture --with-pylons=test.ini\n\nTo run the tests and produce a coverage report, first make sure you have\ncoverage installed in your virtualenv (``pip install coverage``) then run::\n\n    nosetests --nologcapture --with-pylons=test.ini --with-coverage --cover-package=ckanext.resourceauthorizer --cover-inclusive --cover-erase --cover-tests\n\n\n----------------------------------------------\nRegistering ckanext-resourceauthorizer on PyPI\n----------------------------------------------\n\nckanext-resourceauthorizer should be availabe on PyPI as\nhttps://pypi.python.org/pypi/ckanext-resourceauthorizer. If that link doesn't work, then\nyou can register the project on PyPI for the first time by following these\nsteps:\n\n1. Create a source distribution of the project::\n\n     python setup.py sdist\n\n2. Register the project::\n\n     python setup.py register\n\n3. Upload the source distribution to PyPI::\n\n     python setup.py sdist upload\n\n4. Tag the first release of the project on GitHub with the version number from\n   the ``setup.py`` file. For example if the version number in ``setup.py`` is\n   0.0.1 then do::\n\n       git tag 0.0.1\n       git push --tags\n\n================\nAcknowledgements\n================\n\nThis work was supported by Institute for Information & communications Technology Promotion (IITP) grant funded by the Korea government (MSIT) (No.2017-00253, Development of an Advanced Open Data Distribution Platform based on International Standards)",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/etri-sodas/ckanext-resourceauthorizer",
    "keywords": "CKAN",
    "license": "AGPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ckanext-resourceauthorizer",
    "package_url": "https://pypi.org/project/ckanext-resourceauthorizer/",
    "platform": "",
    "project_url": "https://pypi.org/project/ckanext-resourceauthorizer/",
    "project_urls": {
      "Homepage": "https://github.com/etri-sodas/ckanext-resourceauthorizer"
    },
    "release_url": "https://pypi.org/project/ckanext-resourceauthorizer/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "An extension for authorizing resources",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3754565,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d903d4943efc42a441ff8720a0310a91bca7d50e68e6cd0af2fc2914a8e66b8",
          "md5": "1cd9977c270ac6f5e01c79b77ee02d3d",
          "sha256": "f06a99c15cd70b501187c4b38a2075391cebee6f00df16e7b70c16a9ba551ddd"
        },
        "downloads": -1,
        "filename": "ckanext-resourceauthorizer-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1cd9977c270ac6f5e01c79b77ee02d3d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26230,
        "upload_time": "2018-04-11T07:00:10",
        "upload_time_iso_8601": "2018-04-11T07:00:10.149213Z",
        "url": "https://files.pythonhosted.org/packages/0d/90/3d4943efc42a441ff8720a0310a91bca7d50e68e6cd0af2fc2914a8e66b8/ckanext-resourceauthorizer-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0d903d4943efc42a441ff8720a0310a91bca7d50e68e6cd0af2fc2914a8e66b8",
        "md5": "1cd9977c270ac6f5e01c79b77ee02d3d",
        "sha256": "f06a99c15cd70b501187c4b38a2075391cebee6f00df16e7b70c16a9ba551ddd"
      },
      "downloads": -1,
      "filename": "ckanext-resourceauthorizer-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1cd9977c270ac6f5e01c79b77ee02d3d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26230,
      "upload_time": "2018-04-11T07:00:10",
      "upload_time_iso_8601": "2018-04-11T07:00:10.149213Z",
      "url": "https://files.pythonhosted.org/packages/0d/90/3d4943efc42a441ff8720a0310a91bca7d50e68e6cd0af2fc2914a8e66b8/ckanext-resourceauthorizer-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}