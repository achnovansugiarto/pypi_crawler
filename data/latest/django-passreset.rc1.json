{
  "info": {
    "author": "Ben Davis",
    "author_email": "bendavis78@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "=====================\nDjango Password Reset\n=====================\nThis app simplifies the process for adding password reset functionality to your\nsite. It takes advantage of django's exising password reset workflow, but\nsimplifies the process of adding urls to your site. This also allows you to\ncreate multiple password reset workflows for one site using namespacing.\n\n\nInstallation\n------------\n\nJust add `\"passreset\"` to `INSTALLED_APPS`, and include `passreset.urls`\nin your urlconf module:\n\n.. code:: python\n\n    from django.conf.urls import url, include\n    import passreset\n    urlpatterns = [\n        #...\n        url(r'^profile/passreset/', include(passreset.urls))\n    ]\n\nYou can then link to the password reset form by reversing `\"passreset:reset-password\"`:\n\n.. code::\n\n   <a href=\"{% url \"passreset:reset-password\" %}\">Forgot password?</a>\n\nThe app takes care of the rest, with the help of django's built-in password\nreset workflow. Note that `passreset.urls` an object, not a module. Using\n`include('passreset.urls')` will raise an ImportError.\n\nTo quickly add password reset functionality to your existing admin, just include\n`passreset.admin_urls`:\n\n.. code:: python\n\n    from django.conf.urls.defaults import url, include\n    import passreset\n    \n    urlpatterns = [\n      url(r'^admin/passreset/', include(passreset.admin_urls),\n      url(r'^admin/', include(admin.site.urls)),\n    )\n\nAs an added convenience, the passreset app automatically overrides the default\nadmin site's login template to add a \"forgot password?\" link.\n\n\nNamespacing\n-----------\n\nIf you need multiple password-reset workflows for one site, you must use the\n`passreset.urls_ns()` function. Note that you should not use the `namespace`\nkeyword argument to include:\n\n.. code:: python\n\n    import passreset\n    urpatterns = [\n        url(r'^profile/reset-password', include(passreset.urls_ns(\n            'user-passreset', login_url='/profile/login'))),\n        url(r'^staff/reset-password', include(passreset.urls_ns(\n            'staff-passreset', login_url='/staff/loging'))),\n    ]\n\nIf login_url is not supplied, settings.LOGIN_URL is used. You can also pass a \n``template_path`` argument to specify a base path for templates used in the app\ninstance.\n\nYou can then reverse any of the passreset urls using the new namespace:\n\n.. code::\n  \n  <a href=\"{% url \"staff-passreset:reset-password\" %}\">Forgot password?</a>\n\n\nTemplates\n---------\n\nThe default templates form passreset all extend `\"passreset/base.html\"`, You can\ncreate an override for this template in your project (eg,\n`my_project/templates/passreset/base.html`), and have it extend your site's base\ntemplate. The templates all use a block called `passreset_content`. So, all you\nneed to do is include that block inside your site's main content block:\n\n.. code::\n\n   {% extends \"mysite/base.html\" %}\n   {% block content %}\n     {% block passreset_content %}\n     {% endblock %}\n   {% endblock %}\n\nThe `urls_ns` function also accepts a `tpl_path` parameter, which allows you to\noverride any of the templates used by passreset. The path is a template\ndirectory that may contain any of the following: \n\n* reset_password.html\n* done.html\n* confirm.html\n* complete.html\n* email.html\n* subject.ttx\n\n\nAdmin\n-----\n\nThe `passreset.admin_urls` urlconf is basically a convenience shortcut for\n`passreset.urls_ns('admin-passreset', login_url='admin:login')`. As stated\nabove, passreset overrides the default admin login template with a \"Forgot\npassword?\" link, which basically looks like this:\n\n.. code:: html\n\n   <a href=\"{% url admin-passreset:reset-password }\">Forgot password?</a>\n\nYou can use the admin passreset urls together with another passreset instance\nwithout using namespacing:\n\n.. code:: python\n\n    urlpatterns += patterns('',\n      url(r'^admin/passreset/', include(passreset.admin_urls)),\n      url(r'^admin/', include(admin.site.urls)),\n      url(r'^profile/passreset', include('passreset.urls')),\n    )\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/bendavis78",
    "keywords": "django admin",
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-passreset",
    "package_url": "https://pypi.org/project/django-passreset/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-passreset/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/bendavis78"
    },
    "release_url": "https://pypi.org/project/django-passreset/0.3/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Easily add password reset workflows to your django project.",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1235275,
  "releases": {
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "435cf41fb6a04e5a10f74dd6dfec0c2960f0865e9dae237c98ac4f829971a687",
          "md5": "278cd4214805b74c721ecc3f3a18af40",
          "sha256": "213d437cf6a3d4ebc2788c6d6e0a82916c183a1ae25dbde216f73d753b45f1d4"
        },
        "downloads": -1,
        "filename": "django-passreset-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "278cd4214805b74c721ecc3f3a18af40",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5943,
        "upload_time": "2014-09-23T17:34:23",
        "upload_time_iso_8601": "2014-09-23T17:34:23.622774Z",
        "url": "https://files.pythonhosted.org/packages/43/5c/f41fb6a04e5a10f74dd6dfec0c2960f0865e9dae237c98ac4f829971a687/django-passreset-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "435cf41fb6a04e5a10f74dd6dfec0c2960f0865e9dae237c98ac4f829971a687",
        "md5": "278cd4214805b74c721ecc3f3a18af40",
        "sha256": "213d437cf6a3d4ebc2788c6d6e0a82916c183a1ae25dbde216f73d753b45f1d4"
      },
      "downloads": -1,
      "filename": "django-passreset-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "278cd4214805b74c721ecc3f3a18af40",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5943,
      "upload_time": "2014-09-23T17:34:23",
      "upload_time_iso_8601": "2014-09-23T17:34:23.622774Z",
      "url": "https://files.pythonhosted.org/packages/43/5c/f41fb6a04e5a10f74dd6dfec0c2960f0865e9dae237c98ac4f829971a687/django-passreset-0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}