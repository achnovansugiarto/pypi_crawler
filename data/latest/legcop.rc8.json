{
  "info": {
    "author": "James Tollefson",
    "author_email": "james.l.tollefson@alaskaupdate.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# legcop \n\nThe `legcop` (Legislature Common Operating Picture) package provides python libraries to interact with various APIs containing information\nabout legislative activity in the U.S. Congress and the 54 States & Territories.\n\nYou can install legcop using `pip install legcop`\n\n## Table of Contents\n\n1. [LEGISCAN](#legiscan)\n\n    1. [Importing](#importing)\n    2. [Methods](#methods)\n\n\n## LEGISCAN\n\nThe LegiScan API provides access to the legislative activity of the U.S. State\nand Federal Legislatures. \n\nUse of the LegiScan API requires an API key which you may obtain for free at \nhttps://legiscan.com/legiscan.\n\nTo learn more about LegiScan's internal functionality you can always peruse the \nuser manual/documentation at https://legiscan.com/gaits/documentation/legiscan.\n\n#### Importing\n\nWe interact with LegiScan using `LegiScan` objects.\n\n```python\n#import\nfrom legcop import LegiScan\n\n#instantiate LegiScan\napi_key = #YOUR API KEY HERE\nlegis = LegiScan(api_key)\n\n``` \n\nThe `LegiScan` object provides functions to interact with each of the API\nendpoints defined in the https://legiscan.com documentation. The best way to learn\nwhat the API offers is to simply start exploring. A good place to start is with\nthe list of all available legislative sessions for a particular state.\n\nLet's take a look at what's available for Alaska. Bear in mind that LegiScan\nexpects postal abbreviations for the state name, and therefore so does this\npackage.\n\n```python\nstate = 'ak'\nak_sessions = legis.get_session_list(state=state)\n\nprint(ak_sessions)\n\n```\n\nThis prints the following:\n\n```\n[{'session_id': 1622, 'state_id': 2, 'year_start': 2019, 'year_end': 2020, 'special': 0, \n    'session_name': '31st Legislature', 'name': '31st Legislature', \n    'session_hash': '38cb885fdbd4f65551b7f55c887da845', 'push_safe': 0}, \n{'session_id': 1397, 'state_id': 2, 'year_start': 2017, 'year_end': 2018, \n    'special': 0, 'session_name': '30th Legislature', 'name': '30th Legislature', \n    'session_hash': '4d7b98daa30b3e4459ae14d6b288a301', 'push_safe': 1}, \n{'session_id': 1117, 'state_id': 2, 'year_start': 2015, 'year_end': 2016, \n    'special': 0, 'session_name': '29th Legislature', 'name': '29th Legislature', \n    'session_hash': '49a2faf62f731cb5d6bd0e67689d2045', 'push_safe': 1}, \n{'session_id': 991, 'state_id': 2, 'year_start': 2013, 'year_end': 2014, \n    'special': 0, 'session_name': '28th Legislature', 'name': '28th Legislature', \n    'session_hash': 'c20fa4dfbc1f76119875f11ec6eed813', 'push_safe': 1}, \n{'session_id': 122, 'state_id': 2, 'year_start': 2011, 'year_end': 2012, \n    'special': 0, 'session_name': '27th Legislature', 'name': '27th Legislature', \n    'session_hash': 'b8b0ebf9519f5ff319453b5ac136bbfa', 'push_safe': 1}, \n{'session_id': 58, 'state_id': 2, 'year_start': 2009, 'year_end': 2010, \n    'special': 0, 'session_name': '26th Legislature', 'name': '26th Legislature', \n    'session_hash': '0a97bd55407d490f885805d7f7eee984', 'push_safe': 1}]\n```\n\nAs you can see, each session comes with a `session_id`, `year_start`, and \n`year_end`. Using this information we can choose a session and pull the list of \nassociated datasets from the API.\n\nFor this example we'll simply look at the most recent session, which is at index\n`0` in the `ak_sessions` list.\n\n```python\n#get start year of most recent Alaska Legislature session\nstart_most_recent_session = ak_sessions[0]['year_start']\n\n#get access key for most recent session\ndatasetlist = legis.get_dataset_list(state=state, \n                                     year=start_most_recent_session)\n\n#assign the associated access_key and session_id to variables\naccess_key = datasetlist[0]['access_key']\nsession_id = datasetlist[0]['session_id']\n```\n\nNow that we have the `access_key` and `session_id` for the legislative session\nwe're interested in we can pull the full dataset from the API.\n\n```python\n#pull dataset\ndataset = legis.get_dataset(session_id=session_id, access_key=access_key)\n\n#assert that the dataset is good to go\nassert dataset['status'] == 'OK'\n```\n\nThe API returns a zipped, non-human-readable file. `LegiScan` provides a \nconvenient method for translating this into a human-readable zipfile.\n\n```\nreadable_dataset = legis.recode_zipfile(dataset)\n```\n\nYou now have a `zipfile.ZipFile` object. To learn more about the available \nmethods on this object have a look at the documentation at \nhttps://docs.python.org/3/library/zipfile.html. \n\nHere's an example of how to read the contents of one of the zipped files using\n `zipfile`.\n\n```python\n#get list of all filenames in the dataset\nnamelist = readable_dataset.namelist()\n\n#select one\nitem = namelist[0]\ncontent = readable_dataset.read(item)\n\n#convert this from bytes to python dict\nimport json\ncontent = content.decode('UTF-8')\ncontent = json.loads(content)\n\nfor key, value in content['bill'].items():\n    print('{}: {}'.format(key, value))\n```\n\nThis prints out the following for Alaska House Bill 1:\n\n```\nbill_id: 1146445\nchange_hash: 1b8cdc5d7c7e19020f3b215db7f2abed\nsession_id: 1622\nsession: {'session_id': 1622, 'session_name': '31st Legislature', \n        'session_title': '31st Legislature', 'year_start': 2019, \n        'year_end': 2020, 'special': 0}\nurl: https://legiscan.com/AK/bill/HB1/2019\nstate_link: http://www.akleg.gov/basis/Bill/Detail/31?Root=HB1\ncompleted: 0\nstatus: 1\nstatus_date: 2019-02-20\nprogress: [{'date': '2019-02-20', 'event': 1}, {'date': '2019-02-20', 'event': 9}]\nstate: AK\nstate_id: 2\nbill_number: HB1\nbill_type: B\nbill_type_id: 1\nbody: H\nbody_id: 13\ncurrent_body: H\ncurrent_body_id: 13\ntitle: License In-home Care Providers/agencies\ndescription: An Act relating to the Department of Health and Social Services; \n            relating to in-home personal care services agencies; establishing \n            the In-Home Personal Care Services Advisory Board; and providing \n            for an effective date.\ncommittee: {'committee_id': 2134, 'chamber': 'H', 'chamber_id': 13, \n            'name': 'Health & Social Services'}\npending_committee_id: 2134\nhistory: [{'date': '2019-02-20', 'action': 'PREFILE RELEASED 1/7/19', \n            'chamber': 'H', 'chamber_id': 13, 'importance': 0}, \n        {'date': '2019-02-20', 'action': 'READ THE FIRST TIME - REFERRALS', \n            'chamber': 'H', 'chamber_id': 13, 'importance': 1}, \n        {'date': '2019-02-20', 'action': 'HSS, L&C', 'chamber': 'H', \n            'chamber_id': 13, 'importance': 0}, \n        {'date': '2019-02-20', 'action': 'REFERRED TO HEALTH & SOCIAL SERVICES', \n            'chamber': 'H', 'chamber_id': 13, 'importance': 1}]\nsponsors: [{'people_id': 19096, 'person_hash': 'q63acg3w', 'party_id': 2, \n            'party': 'R', 'role_id': 1, 'role': 'Rep', 'name': 'DeLena Johnson', \n            'first_name': 'DeLena', 'middle_name': 'M.', 'last_name': 'Johnson', \n            'suffix': '', 'nickname': '', 'district': 'HD-011', 'ftm_eid': 9405351, \n            'votesmart_id': 153695, 'opensecrets_id': '', 'knowwho_pid': 499617, \n            'ballotpedia': 'Delena_Johnson', 'sponsor_type_id': 1, \n            'sponsor_order': 1, 'committee_sponsor': 0, 'committee_id': '0'}]\nsasts: []\nsubjects: [{'subject_id': 4508, 'subject_name': 'Disabilities'}, \n           {'subject_id': 4478, 'subject_name': 'Licensing'}, \n           {'subject_id': 4545, 'subject_name': 'Medical Care'}, \n           {'subject_id': 4552, 'subject_name': 'Occupations & Professions'}, \n           {'subject_id': 4481, 'subject_name': 'Senior Citizens'}]\ntexts: [{'doc_id': 1844262, 'date': '2019-01-07', 'type': 'Introduced', \n        'type_id': 1, 'mime': 'application/pdf', 'mime_id': 2, \n        'url': 'https://legiscan.com/AK/text/HB1/id/1844262', \n        'state_link': 'http://www.akleg.gov/PDF/31/Bills/HB0001A.PDF', \n        'text_size': 497807}]\nvotes: []\namendments: []\nsupplements: []\ncalendar: []\n```\n\n#### Methods\n\nIt may be the case that you have a very specific item of interest and don't want\nto pull down an entire legislative session's dataset. legiscan.com provides\nconvenient API calls to meet this need. For each of these, `LegiScan` provides \nan associated function. \n\n##### `get_session_list(state)`\n\nGet list of all available sessions for a state\n\n##### `get_master_list(state=None, session_id=None)`\n\nGet list of bills for the current session in a state or for a given session \nidentifier\n\n##### `get_bill(bill_id=None, state=None, bill_number=None)`\n\nGet primary bill detail information including sponsors, committee references, \nfull history, bill text, and roll call information.\n\nThis function expects either a bill identifier or a state and bill number \ncombination. The bill identifier is preferred, and required for fetching bills\nfrom prior sessions.\n\n\n##### `get_bill_text(bill_id, use_base64=False)`\n\nGet bill text, including date, draft revision information, and MIME type. \n\nIf `use_base64` is False (default) bill text is returned in ASCII for easy\nreadability.\n\nOtherwise, text is base64 encoded to allow for PDF and Word \ndata transfers.\n\n##### `get_amendment(amendment_id)`\n\nGet amendment text including date, adoption status, MIME type, and \ntitle/description information. Amendment text is encoded in base64 to allow for\nPDF and Word data transfers.\n\n##### `get_supplement(supplement_id)`\n\nGet supplement text including type of supplement, date, MIME type and text \ndescription/information. Supplement text is base64 encoded to allow for PDF and \nWord data transfer.\n\n##### `get_roll_call(roll_call_id)`\n\nRoll call detail for individual votes and summary information.\n\n##### `get_person(people_id)`\n\nLegislator information including name, role, and a followthemoney.org person \nidentifier.\n\n##### `search(state, bill_number=None, query=None, year=2, page=1)`\n\nGet a page of results for a search against the LegiScan full text engine; \nreturns a paginated result set.\n\nSpecify a bill number or query string. Year can be an exact year or a number \nbetween 1 and 4, inclusive. These integers have the following meanings:\n    1 = all years\n    2 = current year, the default\n    3 = recent years\n    4 = prior years\nPage is the result set page number to return\n\n##### `get_dataset_list(state=None, year=None)`\n\nGet a list of available datasets with optional filters\n\n##### `get_dataset(session_id = None, access_key=None)`\n\nReturns a single ZIP archive for the requested dataset containing all bills,\nvotes, and people for the selected session.\n\nTo get a list of available datasets use `get_dataset_list()`. Select an \n`access_key` and `session_id` from the results to use an inputs for \n`get_dataset()`.\n\n##### `get_session_people(session_id)`\n\nRetrieve a list of people records active in a specific session id\n\n##### `get_sponsored_list(people_id)`\n\nRetrieve a list of bills sponsored by an individual legislator\n\n##### `recode_zipfile(zipped_dataset)`\n\nThis function re-encodes the zipped dataset produced by the API to make it \nhuman-readable. \n\nIt then returns a zipfile.Zipfile object. For more information about how to \naccess/manipulate this object, refer to the zipfile docs:\n\nhttps://docs.python.org/3/library/zipfile.html#zipfile-objects\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jamestollefson/legcop",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "legcop",
    "package_url": "https://pypi.org/project/legcop/",
    "platform": "",
    "project_url": "https://pypi.org/project/legcop/",
    "project_urls": {
      "Homepage": "https://github.com/jamestollefson/legcop"
    },
    "release_url": "https://pypi.org/project/legcop/0.0.5/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "API utilities to access legislative information from across the 54 U.S. States and Territories",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9096399,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "875a5069ac70115dc9635f64640d2f475402cfe895339a79efffc85d21def0cc",
          "md5": "9feddc991859f61d466a8ef8f28a30ae",
          "sha256": "1796e85573d74eac2503278d7064130256a2fd0ba8e0f076ce8405317c5056b6"
        },
        "downloads": -1,
        "filename": "legcop-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9feddc991859f61d466a8ef8f28a30ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6012,
        "upload_time": "2020-10-31T22:49:29",
        "upload_time_iso_8601": "2020-10-31T22:49:29.208506Z",
        "url": "https://files.pythonhosted.org/packages/87/5a/5069ac70115dc9635f64640d2f475402cfe895339a79efffc85d21def0cc/legcop-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0088fe3bf70bbfb9356e3c218fba9dcc0a4e80a4f7fea7908af8ed24f20cc657",
          "md5": "f59872fff526089bcc38b84925c86764",
          "sha256": "d256ed104b9febec26c8a0649e44d1523408c01e065d0608e6c30c0a209d9682"
        },
        "downloads": -1,
        "filename": "legcop-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f59872fff526089bcc38b84925c86764",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6205,
        "upload_time": "2020-10-31T22:49:33",
        "upload_time_iso_8601": "2020-10-31T22:49:33.495668Z",
        "url": "https://files.pythonhosted.org/packages/00/88/fe3bf70bbfb9356e3c218fba9dcc0a4e80a4f7fea7908af8ed24f20cc657/legcop-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e92787d5681ea11423e5192c67ca679a493af934556de2a27458cf2484fa83e7",
          "md5": "9691456bb13f6097c83329655dcfe6ee",
          "sha256": "8d695a6f533e7963e86690b62f2b558a8d09a4483d41b28ee67338915161f93e"
        },
        "downloads": -1,
        "filename": "legcop-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9691456bb13f6097c83329655dcfe6ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6011,
        "upload_time": "2020-11-01T08:14:55",
        "upload_time_iso_8601": "2020-11-01T08:14:55.739706Z",
        "url": "https://files.pythonhosted.org/packages/e9/27/87d5681ea11423e5192c67ca679a493af934556de2a27458cf2484fa83e7/legcop-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1d9e4f31fee7536149161d4ea73081379900dfe1a38cc071774a70202c5a235",
          "md5": "3198d87e53a368f25d321f6ab4a4e97d",
          "sha256": "413b310447288bf361b154b19897b2ce8d6667f99dd127932630c3c72817b610"
        },
        "downloads": -1,
        "filename": "legcop-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3198d87e53a368f25d321f6ab4a4e97d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6209,
        "upload_time": "2020-11-01T08:14:56",
        "upload_time_iso_8601": "2020-11-01T08:14:56.661723Z",
        "url": "https://files.pythonhosted.org/packages/f1/d9/e4f31fee7536149161d4ea73081379900dfe1a38cc071774a70202c5a235/legcop-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54ad245d59ac6e65bf8d7d96c4d4d286eef87fd6bd4319415c0d7ee8c7615f4d",
          "md5": "3a58f41d5366274323ea9d81e921f497",
          "sha256": "633de2668a7e3c32aeb2ec357e8682e94521cdab52cb282b5d4439a67e7be5d4"
        },
        "downloads": -1,
        "filename": "legcop-0.0.2.dev1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a58f41d5366274323ea9d81e921f497",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6068,
        "upload_time": "2020-11-01T21:44:08",
        "upload_time_iso_8601": "2020-11-01T21:44:08.351358Z",
        "url": "https://files.pythonhosted.org/packages/54/ad/245d59ac6e65bf8d7d96c4d4d286eef87fd6bd4319415c0d7ee8c7615f4d/legcop-0.0.2.dev1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcc2740e38392c5034c1215cf0ede39c4db495e04f33e01b4a10856d4ff79ee5",
          "md5": "bc0ce0c6e6d2090c14ea61fbe52e9a28",
          "sha256": "13d4dd8c4979639698b6758883429437a4660d7a9b6a42411c9988e3bce9ed50"
        },
        "downloads": -1,
        "filename": "legcop-0.0.2.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "bc0ce0c6e6d2090c14ea61fbe52e9a28",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6214,
        "upload_time": "2020-11-01T21:44:09",
        "upload_time_iso_8601": "2020-11-01T21:44:09.582771Z",
        "url": "https://files.pythonhosted.org/packages/dc/c2/740e38392c5034c1215cf0ede39c4db495e04f33e01b4a10856d4ff79ee5/legcop-0.0.2.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2.dev2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6be111aede36f3714d55eed0f89838caced093409b36a045a34194c412355d49",
          "md5": "cb43ff4b5be6ffc01bdc5c4962e2a23b",
          "sha256": "04cbbf94a64bf6621a54a86f02ee8b1cd603af8b64d3112928bed5d164c506c2"
        },
        "downloads": -1,
        "filename": "legcop-0.0.2.dev2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb43ff4b5be6ffc01bdc5c4962e2a23b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9518,
        "upload_time": "2020-11-01T21:52:07",
        "upload_time_iso_8601": "2020-11-01T21:52:07.397843Z",
        "url": "https://files.pythonhosted.org/packages/6b/e1/11aede36f3714d55eed0f89838caced093409b36a045a34194c412355d49/legcop-0.0.2.dev2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd4ceff0dbaceea7cb5c4f65328b34e295e7f19fe72ce0105eda36a6783ec02d",
          "md5": "067f5ac0525ac9dcff1770bfb8f26bce",
          "sha256": "da6d8597b6e09562344f403618a1d0a98d11847836dbc4fe5d0867cfcacd3b52"
        },
        "downloads": -1,
        "filename": "legcop-0.0.2.dev2.tar.gz",
        "has_sig": false,
        "md5_digest": "067f5ac0525ac9dcff1770bfb8f26bce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8515,
        "upload_time": "2020-11-01T21:52:08",
        "upload_time_iso_8601": "2020-11-01T21:52:08.510674Z",
        "url": "https://files.pythonhosted.org/packages/bd/4c/eff0dbaceea7cb5c4f65328b34e295e7f19fe72ce0105eda36a6783ec02d/legcop-0.0.2.dev2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0cde3f5358e263ea65a320d98173fb05f4f65c9703c93fb3b9cc41dad08dce09",
          "md5": "4f099ed56060c19ae8812774ac8d7323",
          "sha256": "1f514b65820d351cfd3f71e988ff5e24858b0c54242bd1607f7b2cceb35956c8"
        },
        "downloads": -1,
        "filename": "legcop-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f099ed56060c19ae8812774ac8d7323",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12846,
        "upload_time": "2020-11-01T22:04:55",
        "upload_time_iso_8601": "2020-11-01T22:04:55.611207Z",
        "url": "https://files.pythonhosted.org/packages/0c/de/3f5358e263ea65a320d98173fb05f4f65c9703c93fb3b9cc41dad08dce09/legcop-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef8fb283af1b61175ea86c93711e56e9ede774a03dc948d18a1605cb12f4b600",
          "md5": "0352627132f8039a00785ddab9a4358b",
          "sha256": "a929b09ce1725cd33d2d6279483de4e05b84a3b9e3df3b33ef5e23fe11af0223"
        },
        "downloads": -1,
        "filename": "legcop-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0352627132f8039a00785ddab9a4358b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9679,
        "upload_time": "2020-11-01T22:04:56",
        "upload_time_iso_8601": "2020-11-01T22:04:56.886833Z",
        "url": "https://files.pythonhosted.org/packages/ef/8f/b283af1b61175ea86c93711e56e9ede774a03dc948d18a1605cb12f4b600/legcop-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de3a08abe8d913437e8dbeb4528f46a44bba2efe63c5eaab449b1f32f817ad44",
          "md5": "8fcc049d04d8eed5981dea3cbe768908",
          "sha256": "309f0d69804e14caab36468d006ba94745213db31de16517e83777b58aa3bb25"
        },
        "downloads": -1,
        "filename": "legcop-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8fcc049d04d8eed5981dea3cbe768908",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12842,
        "upload_time": "2020-11-01T22:30:16",
        "upload_time_iso_8601": "2020-11-01T22:30:16.166784Z",
        "url": "https://files.pythonhosted.org/packages/de/3a/08abe8d913437e8dbeb4528f46a44bba2efe63c5eaab449b1f32f817ad44/legcop-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74a57d27fb1ea27e6223ce0f4b0486d3cf8fceea8ffe17ad2a886b9d1b234c41",
          "md5": "75d88be691b0b391c643f7755230da1c",
          "sha256": "e08ab701ff5524df9ff303ed91cf2d5cc75eb0b0076d828bc917adbfc596c275"
        },
        "downloads": -1,
        "filename": "legcop-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "75d88be691b0b391c643f7755230da1c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9675,
        "upload_time": "2020-11-01T22:30:17",
        "upload_time_iso_8601": "2020-11-01T22:30:17.507664Z",
        "url": "https://files.pythonhosted.org/packages/74/a5/7d27fb1ea27e6223ce0f4b0486d3cf8fceea8ffe17ad2a886b9d1b234c41/legcop-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3b41a0635033fcdfc66e6e1514fe932630db29956263551e11aa3206b7739ef",
          "md5": "32fa89e38e6f181861c4dd403433614c",
          "sha256": "9ce1a664eae509b1cbdcc6fe01328731e4c016950ceea9fdcf28661177c6282c"
        },
        "downloads": -1,
        "filename": "legcop-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32fa89e38e6f181861c4dd403433614c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12981,
        "upload_time": "2021-01-10T07:52:18",
        "upload_time_iso_8601": "2021-01-10T07:52:18.600954Z",
        "url": "https://files.pythonhosted.org/packages/e3/b4/1a0635033fcdfc66e6e1514fe932630db29956263551e11aa3206b7739ef/legcop-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b34d3bea11bf60675ad6d246570c34c7d6ed8f923428091b4dd4fb2aa03762a6",
          "md5": "ddee5094d88a442f62e6a3e88e04efc8",
          "sha256": "053af50859d7ab9b5d606897e05497fb394c80d5c7edcce8a3281d59cbdf7f93"
        },
        "downloads": -1,
        "filename": "legcop-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "ddee5094d88a442f62e6a3e88e04efc8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9759,
        "upload_time": "2021-01-10T07:52:20",
        "upload_time_iso_8601": "2021-01-10T07:52:20.993107Z",
        "url": "https://files.pythonhosted.org/packages/b3/4d/3bea11bf60675ad6d246570c34c7d6ed8f923428091b4dd4fb2aa03762a6/legcop-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e227d8bf5334954e7f49a93c6e2b4a35d2d5a2b7e2d555b30d19dca878804741",
          "md5": "93fabd9686de02d468ecdd40b3dc0bc2",
          "sha256": "b12c37de30c72b0dac4981432c789ee2d083f1c4de93203d7b81834230fea3a4"
        },
        "downloads": -1,
        "filename": "legcop-0.0.5.dev1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93fabd9686de02d468ecdd40b3dc0bc2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13039,
        "upload_time": "2021-01-10T01:43:47",
        "upload_time_iso_8601": "2021-01-10T01:43:47.206981Z",
        "url": "https://files.pythonhosted.org/packages/e2/27/d8bf5334954e7f49a93c6e2b4a35d2d5a2b7e2d555b30d19dca878804741/legcop-0.0.5.dev1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33031f521fee307b4c64a3bd7f95d9bc6d3125329d1bd23b2eb952b13abdf6c9",
          "md5": "a08c20161b2fe7718757dedb6db5c845",
          "sha256": "02620562bca39f0044a0603ac9f6b32b746058364cc6989dd550daea096238ba"
        },
        "downloads": -1,
        "filename": "legcop-0.0.5.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "a08c20161b2fe7718757dedb6db5c845",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9766,
        "upload_time": "2021-01-10T01:43:48",
        "upload_time_iso_8601": "2021-01-10T01:43:48.879464Z",
        "url": "https://files.pythonhosted.org/packages/33/03/1f521fee307b4c64a3bd7f95d9bc6d3125329d1bd23b2eb952b13abdf6c9/legcop-0.0.5.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e3b41a0635033fcdfc66e6e1514fe932630db29956263551e11aa3206b7739ef",
        "md5": "32fa89e38e6f181861c4dd403433614c",
        "sha256": "9ce1a664eae509b1cbdcc6fe01328731e4c016950ceea9fdcf28661177c6282c"
      },
      "downloads": -1,
      "filename": "legcop-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "32fa89e38e6f181861c4dd403433614c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 12981,
      "upload_time": "2021-01-10T07:52:18",
      "upload_time_iso_8601": "2021-01-10T07:52:18.600954Z",
      "url": "https://files.pythonhosted.org/packages/e3/b4/1a0635033fcdfc66e6e1514fe932630db29956263551e11aa3206b7739ef/legcop-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b34d3bea11bf60675ad6d246570c34c7d6ed8f923428091b4dd4fb2aa03762a6",
        "md5": "ddee5094d88a442f62e6a3e88e04efc8",
        "sha256": "053af50859d7ab9b5d606897e05497fb394c80d5c7edcce8a3281d59cbdf7f93"
      },
      "downloads": -1,
      "filename": "legcop-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "ddee5094d88a442f62e6a3e88e04efc8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9759,
      "upload_time": "2021-01-10T07:52:20",
      "upload_time_iso_8601": "2021-01-10T07:52:20.993107Z",
      "url": "https://files.pythonhosted.org/packages/b3/4d/3bea11bf60675ad6d246570c34c7d6ed8f923428091b4dd4fb2aa03762a6/legcop-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}