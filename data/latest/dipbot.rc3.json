{
  "info": {
    "author": "circius",
    "author_email": "circius@posteo.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Utilities"
    ],
    "description": "[![Build Status](https://travis-ci.org/circius/webdiplomacy-bot.svg?branch=master)](https://travis-ci.org/circius/webdiplomacy-bot)\n[![Coverage Status](https://coveralls.io/repos/github/circius/webdiplomacy-bot/badge.svg?branch=master)](https://coveralls.io/github/circius/webdiplomacy-bot?branch=master)\n\n## summary\n\nThis is a discord bot which scrapes the current status of a game at\nwebdiplomacy and announces that information on discord.\n\nIt also incorporates a very rudimentary cli tool which does the same\nthing on the host.\n\n*Note that at the moment dipbot can only handle a single game*,\nalthough the CLI functionality can fairly straightforwardly be\nadjusted to parse different games (there's guidance on this below.)\n\n## daemon functionality\n\nThe daemon, which is run as `dipbot daemon`, spawns a discord bot\nbased on discord.py. It depends on a couple of environment variables\ndescribed below.\n\nHere is the bot's help dialogue, which describes the commands it\nsupports:\n\n``` shell\nStatus:\n  status   instructs me to report on the status of my webdip game.\n  status!  same as `$status`, but mentioning @everyone\n  status?  same as `$status`, but with additional information about the game\n  status?! same as `$status?`, but mentioning @everyone\nâ€‹No Category:\n  help     Shows this message\n\nType $help command for more info on a command.\nYou can also type $help category for more info on a category.\n```\n\nA `$status` request produces output in the\nfollowing format:\n\n``` shell\n\"It is the [game-phase] of the [season] of [year].\n\nWe are awaiting the orders of:\n[list of non-ready players with their order statuses]\nThere are [N] days until the deadline, which is at [date]\"\n```\n\nrun as `dipbot report`, dipbot will produce the output of `$status`.\n\n## configuration\n\nboth `dipbot daemon` and `dipbot report` receive their configuration\nfrom environment variables. Both need to know which game to look at;\n`dipbot daemon` also needs to know its discord API key.\n\n### compulsory environment variables\n\nIn order to know which game to parse, the environment variable\nWEBDIP_GAME_ID must be set to the corresponding webdiplomacy.com game\nid. This is the number at the end of the webdiplomacy url for the\ngame; for instance, in the following URL, the id is 111111\n\nhttps://webdiplomacy.net/board.php?gameID=111111\n\nIn addition, to host the discord bot yourself it's necessary to create\na bot account as described\n[here](https://discordpy.readthedocs.io/en/latest/discord.html), and\nto set the environment variable DISCORD_API_KEY to the value of the\nbot's token.\n\nthese [environment\nvariables](https://www.gnu.org/software/bash/manual/html_node/Environment.html)\ncan be set for a single session like this:\n\n``` shell\n$ export WEBDIP_GAME_ID=[game_id]\n$ export DISCORD_API_KEY=[api_key]\n```\nthat will let dipbot work in the current shell; to avoid having to run these commands, you can put the variable assignments in the config file for your shell (~/.bashrc, ~/.zshrc or whatever).\n\n### handling multiple games\n\nBoth `dipbot daemon` and `dipbot report` will get whatever game has\nthe id specified by WEBDIP_GAME_ID. You could therefore make little\nwrapper scripts for dipbot report and get reports on as many games as\nyou liked. In future an option to specify the game id on the\ncommandline will be added to eliminate this minor inconvenience.\n\n\n## installation\n\nthe most recent release is available from pip:\n\n``` shell\n$ pip install --user dipbot\n```\n\nafter which, so long as your PATH is properly configured, you should be able to run dipbot directly from the shell:\n\n``` shell\n$ dipbot\n```\n\n## usage\n\nthere are two subcommands available:\n\n``` shell\n$ dipbot report\n```\n\nwhich parses the status of the game and reports it to the shell before quitting, and\n\n``` shell\n$ dipbot daemon\n```\n\nwhich attempts to initialize a discord bot corresponding to the token stored in DISCORD_API_KEY.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/circius/webdiplomacy-bot/archive/0.12.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/circius/webdiplomacy-bot",
    "keywords": "webdiplomacy,bot,discord",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dipbot",
    "package_url": "https://pypi.org/project/dipbot/",
    "platform": "",
    "project_url": "https://pypi.org/project/dipbot/",
    "project_urls": {
      "Download": "https://github.com/circius/webdiplomacy-bot/archive/0.12.tar.gz",
      "Homepage": "https://github.com/circius/webdiplomacy-bot"
    },
    "release_url": "https://pypi.org/project/dipbot/0.12/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "webdiplomacy status reporter bot for discord",
    "version": "0.12",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7144184,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2ecef8fcab845f91406d3333346e88aed711c5b8bd6913e01aad6cc91fafc37",
          "md5": "192d6619f5fa9cd0e771a2842adc75bd",
          "sha256": "d74f61a61edb88e8435531f3ece067822ef336e286eb0c6e2010ae76aeed3b31"
        },
        "downloads": -1,
        "filename": "dipbot-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "192d6619f5fa9cd0e771a2842adc75bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5159,
        "upload_time": "2020-04-04T18:45:08",
        "upload_time_iso_8601": "2020-04-04T18:45:08.739482Z",
        "url": "https://files.pythonhosted.org/packages/b2/ec/ef8fcab845f91406d3333346e88aed711c5b8bd6913e01aad6cc91fafc37/dipbot-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a35b159d933626ca3e2931f69748f137d910ffe1808850016fc1a169cbe0efc",
          "md5": "9885342e471ed5c67100efec01d490c4",
          "sha256": "910df45d4f1b3278840ba2181fdf4e02eb7205ac0881ef372e4c92e79a4b1306"
        },
        "downloads": -1,
        "filename": "dipbot-0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "9885342e471ed5c67100efec01d490c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5378,
        "upload_time": "2020-04-07T18:00:04",
        "upload_time_iso_8601": "2020-04-07T18:00:04.447126Z",
        "url": "https://files.pythonhosted.org/packages/0a/35/b159d933626ca3e2931f69748f137d910ffe1808850016fc1a169cbe0efc/dipbot-0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "935ddf39fcbf01caca2b0bd3640223919044ffed7d258fc67404aa91f2c82ade",
          "md5": "dbb91751a25676b4a0f5076037417cd9",
          "sha256": "9e96a5433ea0928c69506b5bea4178ff7eed4d1bfeaa2967b98821292cdba9d9"
        },
        "downloads": -1,
        "filename": "dipbot-0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "dbb91751a25676b4a0f5076037417cd9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10046,
        "upload_time": "2020-05-01T10:48:05",
        "upload_time_iso_8601": "2020-05-01T10:48:05.666919Z",
        "url": "https://files.pythonhosted.org/packages/93/5d/df39fcbf01caca2b0bd3640223919044ffed7d258fc67404aa91f2c82ade/dipbot-0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "935ddf39fcbf01caca2b0bd3640223919044ffed7d258fc67404aa91f2c82ade",
        "md5": "dbb91751a25676b4a0f5076037417cd9",
        "sha256": "9e96a5433ea0928c69506b5bea4178ff7eed4d1bfeaa2967b98821292cdba9d9"
      },
      "downloads": -1,
      "filename": "dipbot-0.12.tar.gz",
      "has_sig": false,
      "md5_digest": "dbb91751a25676b4a0f5076037417cd9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10046,
      "upload_time": "2020-05-01T10:48:05",
      "upload_time_iso_8601": "2020-05-01T10:48:05.666919Z",
      "url": "https://files.pythonhosted.org/packages/93/5d/df39fcbf01caca2b0bd3640223919044ffed7d258fc67404aa91f2c82ade/dipbot-0.12.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}