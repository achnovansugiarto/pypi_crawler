{
  "info": {
    "author": "PyWorks",
    "author_email": "pyworksasia@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "# pyworks-generator\n\nThis code generator creates pydantic model from an openapi file and others.\n\n[![Build Status](https://github.com/pyworksasia/pyworks-generator/workflows/Test/badge.svg)](https://github.com/pyworksasia/pyworks-generator/actions?query=workflow%3ATest)\n[![PyPI version](https://badge.fury.io/py/pyworks-generator.svg)](https://pypi.python.org/pypi/pyworks-generator)\n[![Downloads](https://pepy.tech/badge/pyworks-generator/month)](https://pepy.tech/project/pyworks-generator)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pyworks-generator)](https://pypi.python.org/pypi/pyworks-generator)\n[![codecov](https://codecov.io/gh/pyworksasia/pyworks-generator/branch/master/graph/badge.svg)](https://codecov.io/gh/pyworksasia/pyworks-generator)\n![license](https://img.shields.io/github/license/pyworksasia/pyworks-generator.svg)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Total alerts](https://img.shields.io/lgtm/alerts/g/pyworksasia/pyworks-generator.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/pyworksasia/pyworks-generator/alerts/)\n[![Language grade: Python](https://img.shields.io/lgtm/grade/python/g/pyworksasia/pyworks-generator.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/pyworksasia/pyworks-generator/context:python)\n\n## Help\nSee [documentation](https://pyworksasia.github.io/pyworks-generator) for more details.\n\n## Supported source types\n-  OpenAPI 3 (YAML/JSON, [OpenAPI Data Type](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#data-types))\n-  JSON Schema ([JSON Schema Core](http://json-schema.org/draft/2019-09/json-schema-validation.html)/[JSON Schema Validation](http://json-schema.org/draft/2019-09/json-schema-validation.html))\n-  JSON/YAML/CSV Data (it will be converted to JSON Schema)\n-  Python dictionary (it will be converted to JSON Schema)\n\n## Implemented list\n### OpenAPI 3 and JsonSchema\n#### DataType\n-  string (include patter/minLength/maxLenght)\n-  number (include maximum/exclusiveMaximum/minimum/exclusiveMinimum/multipleOf/le/ge)\n-  integer (include maximum/exclusiveMaximum/minimum/exclusiveMinimum/multipleOf/le/ge)\n-  boolean\n-  array\n-  object\n\n##### String Format \n-  date\n-  datetime\n-  time\n-  password\n-  email\n-  idn-email \n-  uuid (uuid1/uuid2/uuid3/uuid4/uuid5)\n-  ipv4\n-  ipv6\n-  hostname\n-  decimal\n\n#### Other schema\n-  enum (as enum.Enum or typing.Literal)\n-  allOf (as Multiple inheritance)\n-  anyOf (as typing.Union)\n-  oneOf (as typing.Union)\n-  $ref ([http extra](#http-extra-option) is required when resolving $ref for remote files.)\n-  $id (for [JSONSchema](https://json-schema.org/understanding-json-schema/structuring.html#the-id-property))\n\n## Installation\n\nTo install `pyworks-generator`:\n```bash\n$ pip install pyworks-generator\n```\n\n### `http` extra option\nIf you want to resolve `$ref` for remote files then you should specify `http` extra option.\n```bash\n$ pip install pyworks-generator[http]\n```\n\n## Usage\n\nThe `pwgen` command:\n```bash\nusage: pwgen [-h] [--url URL]  [--input INPUT] [--input-file-type {auto,openapi,jsonschema,json,yaml,dict,csv}] [--output OUTPUT]\n                         [--base-class BASE_CLASS] [--field-constraints] [--snake-case-field] [--strip-default-none] [--disable-appending-item-suffix]\n                         [--allow-population-by-field-name] [--enable-faux-immutability] [--use-default] [--force-optional] [--strict-nullable]\n                         [--disable-timestamp] [--use-standard-collections] [--use-generic-container-types] [--use-schema-description]\n                         [--reuse-model] [--enum-field-as-literal {all,one}] [--set-default-enum-member] [--class-name CLASS_NAME]\n                         [--custom-template-dir CUSTOM_TEMPLATE_DIR] [--extra-template-data EXTRA_TEMPLATE_DATA] [--aliases ALIASES]\n                         [--target-python-version {3.6,3.7,3.8,3.9}] [--validation] [--encoding ENCODING] [--debug] [--version]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --input INPUT         Input file/directory (default: stdin)\n  --url URL             Input file URL. `--input` is ignore when `--url` is used\n  --input-file-type {auto,openapi,jsonschema,json,yaml,dict,csv}\n                        Input file type (default: auto)\n  --output OUTPUT       Output file (default: stdout)\n  --base-class BASE_CLASS\n                        Base Class (default: pydantic.BaseModel)\n  --field-constraints   Use field constraints and not con* annotations\n  --snake-case-field    Change camel-case field name to snake-case\n  --strip-default-none  Strip default None on fields\n  --disable-appending-item-suffix\n                        Disable appending `Item` suffix to model name in an array\n  --allow-population-by-field-name\n                        Allow population by field name\n  --enable-faux-immutability\n                        Enable faux immutability\n  --use-default         Use default value even if a field is required\n  --force-optional      Force optional for required fields\n  --strict-nullable     Treat default field as a non-nullable field (only OpenAPI)\n  --disable-timestamp   Disable timestamp on file headers\n  --use-standard-collections\n                        Use standard collections for type hinting (list, dict)\n  --use-generic-container-types\n                        Use generic container types for type hinting (typing.Sequence, typing.Mapping). If `--use-standard-\n                        collections` option is set, then import from collections.abc instead of typing\n  --use-schema-description\n                        Use schema description to populate class docstring\n  --reuse-model         Re-use models on the field when a module has the model with the same content\n  --enum-field-as-literal {all,one}\n                        Parse enum field as literal. all: all enum field type are Literal. one: field type is Literal when an enum has only\n                        one possible value\n  --set-default-enum-member\n                        Set enum members as default values for enum field\n  --class-name CLASS_NAME\n                        Set class name of root model\n  --custom-template-dir CUSTOM_TEMPLATE_DIR\n                        Custom template directory\n  --extra-template-data EXTRA_TEMPLATE_DATA\n                        Extra template data\n  --aliases ALIASES     Alias mapping file\n  --target-python-version {3.6,3.7,3.8,3.9}\n                        target python version (default: 3.7)\n  --validation          Enable validation (Only OpenAPI)\n  --encoding ENCODING   The encoding of input and output (default: utf-8)\n  --debug               show debug message\n  --version             show version\n```\n\n## Example\n### OpenAPI\n```sh\n# Generate models from a local file.\n$ pwgen --input api.yaml --output model.py\n# or directly from a URL.\n$ pwgen --url https://<INPUT FILE URL> --output model.py\n```\n\n<details>\n<summary>api.yaml</summary>\n<pre>\n<code>\n```yaml\nopenapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  license:\n    name: MIT\nservers:\n  - url: http://petstore.swagger.io/v1\npaths:\n  /pets:\n    get:\n      summary: List all pets\n      operationId: listPets\n      tags:\n        - pets\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: A paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n                x-amazon-apigateway-integration:\n                  uri:\n                    Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PythonVersionFunction.Arn}/invocations\n                  passthroughBehavior: when_no_templates\n                  httpMethod: POST\n                  type: aws_proxy\n    post:\n      summary: Create a pet\n      operationId: createPets\n      tags:\n        - pets\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n                x-amazon-apigateway-integration:\n                  uri:\n                    Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PythonVersionFunction.Arn}/invocations\n                  passthroughBehavior: when_no_templates\n                  httpMethod: POST\n                  type: aws_proxy\n  /pets/{petId}:\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    x-amazon-apigateway-integration:\n      uri:\n        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PythonVersionFunction.Arn}/invocations\n      passthroughBehavior: when_no_templates\n      httpMethod: POST\n      type: aws_proxy\ncomponents:\n  schemas:\n    Pet:\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        tag:\n          type: string\n    Pets:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Pet\"\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n    apis:\n      type: array\n      items:\n        type: object\n        properties:\n          apiKey:\n            type: string\n            description: To be used as a dataset parameter value\n          apiVersionNumber:\n            type: string\n            description: To be used as a version parameter value\n          apiUrl:\n            type: string\n            format: uri\n            description: \"The URL describing the dataset's fields\"\n          apiDocumentationUrl:\n            type: string\n            format: uri\n            description: A URL to the API console for each API\n```\n</code>\n</pre>\n</details>\n\n`model.py`:\n```python\n# generated by pwgen:\n#   filename:  api.yaml\n#   timestamp: 2020-06-02T05:28:24+00:00\n\nfrom __future__ import annotations\n\nfrom typing import List, Optional\n\nfrom pydantic import AnyUrl, BaseModel, Field\n\n\nclass Pet(BaseModel):\n    id: int\n    name: str\n    tag: Optional[str] = None\n\n\nclass Pets(BaseModel):\n    __root__: List[Pet]\n\n\nclass Error(BaseModel):\n    code: int\n    message: str\n\n\nclass Api(BaseModel):\n    apiKey: Optional[str] = Field(\n        None, description='To be used as a dataset parameter value'\n    )\n    apiVersionNumber: Optional[str] = Field(\n        None, description='To be used as a version parameter value'\n    )\n    apiUrl: Optional[AnyUrl] = Field(\n        None, description=\"The URL describing the dataset's fields\"\n    )\n    apiDocumentationUrl: Optional[AnyUrl] = Field(\n        None, description='A URL to the API console for each API'\n    )\n\n\nclass Apis(BaseModel):\n    __root__: List[Api]\n```\n\n## PyPi \n\n[https://pypi.org/project/pyworks-generator](https://pypi.org/project/pyworks-generator)\n\n## License\n\npyworks-generator is released under the MIT License.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pyworksasia/pyworks-generator",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyworks-generator",
    "package_url": "https://pypi.org/project/pyworks-generator/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyworks-generator/",
    "project_urls": {
      "Homepage": "https://github.com/pyworksasia/pyworks-generator"
    },
    "release_url": "https://pypi.org/project/pyworks-generator/0.1.0/",
    "requires_dist": [
      "PySnooper (<1.0.0,>=0.4.1)",
      "argcomplete (<2.0,>=1.10)",
      "black (>=19.10b0)",
      "genson (<2.0,>=1.2.1)",
      "inflect (<6.0,>=4.1.0)",
      "isort (<6.0,>=4.3.21)",
      "jinja2 (<3.0,>=2.10.1)",
      "openapi-spec-validator (<0.4,>=0.2.8)",
      "prance (<1.0,>=0.18.2)",
      "toml (<1.0.0,>=0.10.0)",
      "pydantic[email] (<2.0,>=1.5.1) ; python_version < \"3.9\"",
      "pydantic[email] (<2.0,>=1.7.2) ; python_version >= \"3.9\"",
      "codecov ; extra == 'all'",
      "freezegun ; extra == 'all'",
      "httpx ; extra == 'all'",
      "isort ; extra == 'all'",
      "mkdocs ; extra == 'all'",
      "mkdocs-material ; extra == 'all'",
      "mypy ; extra == 'all'",
      "pytest-benchmark ; extra == 'all'",
      "pytest-cov ; extra == 'all'",
      "pytest-mock ; extra == 'all'",
      "pytest-runner ; extra == 'all'",
      "pytest (>=4.6) ; extra == 'all'",
      "setuptools-scm ; extra == 'all'",
      "twine ; extra == 'all'",
      "wheel ; extra == 'all'",
      "codecov ; extra == 'ci'",
      "mkdocs ; extra == 'docs'",
      "mkdocs-material ; extra == 'docs'",
      "httpx ; extra == 'http'",
      "pytest-runner ; extra == 'setup'",
      "setuptools-scm ; extra == 'setup'",
      "freezegun ; extra == 'test'",
      "isort ; extra == 'test'",
      "mypy ; extra == 'test'",
      "pytest-benchmark ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "pytest-mock ; extra == 'test'",
      "pytest (>=4.6) ; extra == 'test'",
      "twine ; extra == 'wheel'",
      "wheel ; extra == 'wheel'"
    ],
    "requires_python": ">=3.6.1",
    "summary": "PyWorks Code Generator",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9899674,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20b9ca53f2e711fa79866bd6cd0aa1df777aa9f2314ae44f0d43088fa68be5d9",
          "md5": "a9ce6407a56de8d6b1cba7d661a9c698",
          "sha256": "42a1a0a32701b81d7e13b734dcce8623e6c164e2b17bfac0f2edf2e495061e35"
        },
        "downloads": -1,
        "filename": "pyworks_generator-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a9ce6407a56de8d6b1cba7d661a9c698",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.1",
        "size": 231168,
        "upload_time": "2021-03-27T15:59:34",
        "upload_time_iso_8601": "2021-03-27T15:59:34.497213Z",
        "url": "https://files.pythonhosted.org/packages/20/b9/ca53f2e711fa79866bd6cd0aa1df777aa9f2314ae44f0d43088fa68be5d9/pyworks_generator-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de7811aefff3df9965d83b21fed43a673fa7cf67af5b29bce109fee7bd252fbc",
          "md5": "d4a35827f5528c655da3b8a3fe9f731e",
          "sha256": "e13bc772e8f06f764173cf9f844495c073b8275c16faddedeed6124c956a9ac0"
        },
        "downloads": -1,
        "filename": "pyworks-generator-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d4a35827f5528c655da3b8a3fe9f731e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.1",
        "size": 103573,
        "upload_time": "2021-03-27T15:59:36",
        "upload_time_iso_8601": "2021-03-27T15:59:36.569759Z",
        "url": "https://files.pythonhosted.org/packages/de/78/11aefff3df9965d83b21fed43a673fa7cf67af5b29bce109fee7bd252fbc/pyworks-generator-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "20b9ca53f2e711fa79866bd6cd0aa1df777aa9f2314ae44f0d43088fa68be5d9",
        "md5": "a9ce6407a56de8d6b1cba7d661a9c698",
        "sha256": "42a1a0a32701b81d7e13b734dcce8623e6c164e2b17bfac0f2edf2e495061e35"
      },
      "downloads": -1,
      "filename": "pyworks_generator-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a9ce6407a56de8d6b1cba7d661a9c698",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.1",
      "size": 231168,
      "upload_time": "2021-03-27T15:59:34",
      "upload_time_iso_8601": "2021-03-27T15:59:34.497213Z",
      "url": "https://files.pythonhosted.org/packages/20/b9/ca53f2e711fa79866bd6cd0aa1df777aa9f2314ae44f0d43088fa68be5d9/pyworks_generator-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de7811aefff3df9965d83b21fed43a673fa7cf67af5b29bce109fee7bd252fbc",
        "md5": "d4a35827f5528c655da3b8a3fe9f731e",
        "sha256": "e13bc772e8f06f764173cf9f844495c073b8275c16faddedeed6124c956a9ac0"
      },
      "downloads": -1,
      "filename": "pyworks-generator-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d4a35827f5528c655da3b8a3fe9f731e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.1",
      "size": 103573,
      "upload_time": "2021-03-27T15:59:36",
      "upload_time_iso_8601": "2021-03-27T15:59:36.569759Z",
      "url": "https://files.pythonhosted.org/packages/de/78/11aefff3df9965d83b21fed43a673fa7cf67af5b29bce109fee7bd252fbc/pyworks-generator-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}