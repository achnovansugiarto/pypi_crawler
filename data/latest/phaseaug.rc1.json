{
  "info": {
    "author": "junjun3518",
    "author_email": "junjun3518@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# PhaseAug\n\n**PhaseAug: A Differentiable Augmentation for Speech Synthesis to Simulate One-to-Many Mapping**<br>\nJunhyeok Lee, Seungu Han, Hyunjae Cho, Wonbin Jung @ [MINDsLab Inc.](https://github.com/mindslab-ai), SNU, KAIST\n\n[![arXiv](https://img.shields.io/badge/arXiv-2211.04610-brightgreen.svg?style=flat-square)](https://arxiv.org/abs/2211.04610) [![GitHub Repo stars](https://img.shields.io/github/stars/mindslab-ai/phaseaug?color=yellow&label=PhaseAug&logo=github&style=flat-square)](https://github.com/mindslab-ai/phaseaug) [![githubio](https://img.shields.io/badge/GitHub.io-Audio_Samples-blue?logo=Github&style=flat-square)](https://mindslab-ai.github.io/phaseaug/)\n\n\n**Abstract** : Previous generative adversarial network (GAN)-based neural vocoders are trained to reconstruct the exact ground truth waveform from the paired mel-spectrogram and do not consider the one-to-many relationship of speech synthesis. This conventional training causes overfitting for both the discriminators and the generator, leading to the periodicity artifacts in the generated audio signal. In this work, we present PhaseAug, the first differentiable augmentation for speech synthesis that rotates the phase of each frequency bin to simulate one-to-many mapping. With our proposed method, we outperform baselines without any architecture modification. Code and audio samples will be available at https://github.com/mindslab-ai/phaseaug.\n\nSubmitted to ICASSP 2023\n\n![phasor](asset/phaseaug_phasor.png) \n\n\n## TODO\n- Errata in paper will be fixed. Section 2.5 in paper, transition band half-width 0.06-> 0.012\n- Section 2.5, mention about multiplyinng rotation matrix to \"the left side of F(x)\" will be added.\n- We will uplade PhaseAug to [pypi](https://pypi.org).\n\n## Use PhaseAug\n- Install `alias-free-torch==0.0.6` and `phaseaug`\n```bash\npip install alias-free-torch==0.0.6 phaseaug \n```\n- Insert PhaseAug in your code, check [train.py](./train.py) as a example.\n```python\nfrom phaseaug import PhaseAug\n...\n# define phaseaug\naug = PhaseAug()\n...\n#discriminator update phase\naug_y, aug_y_g = aug.forward_sync(y, y_g_hat.detach())\ny_df_hat_r, y_df_hat_g, _, _ = mpd(aug_y, aug_y_g)\ny_ds_hat_r, y_ds_hat_g, _, _ = msd(aug_y, aug_y_g)\n...\n#generator update phase\naug_y, aug_y_g = aug.forward_sync(y, y_g_hat)\ny_df_hat_r, y_df_hat_g, fmap_f_r, fmap_f_g = mpd(\n                        aug_y, aug_y_g)\ny_ds_hat_r, y_ds_hat_g, fmap_s_r, fmap_s_g = msd(\n                        aug_y, aug_y_g)\n```\n\n## Requirements\n- [Pytorch>=1.7.0](https://pytorch.org/) for [alias-free-torch](https://github.com/junjun3518/alias-free-torch)\n- The requirements are highlighted in [requirements.txt](./requirements.txt).\n- We also provide docker setup [Dockerfile](./Dockerfile).\n```\ndocker build -t=phaseaug --build-arg USER_ID=$(id -u) --build-arg GROUP_ID=$(id -g) --build-arg USER_NAME=$USER\n```\n- Cloned [official HiFi-GAN repo](https://github.com/jik876/hifi-gan).\n- Downloaded [LJ Speech Dataset](https://keithito.com/LJ-Speech-Dataset/).\n- (optional) [MelGAN](https://github.com/descriptinc/melgan-neurips) generator\n\n## Training\n0. Clone this repository and copy python files to hifi-gan folder\n```bash\ngit clone --recursive https://github.com/mindslab-ai/phaseaug\ncp ./phaseaug/*.py ./phaseaug/hifi-gan/\ncd ./phaseaug/hifi-gan\n```\n\n  - optional: MelGAN generator\n  ```bash\n  cp ./phaseaug/config_v1_melgan.json ./phaseaug/hifi-gan/\n  ```\n  - Change generator to MelGAN generator at train.py\n  ```python\n  # import MelGanGenerator as Generator at [train.py](./train.py)\n  #from models import Generator # remove original import Generator\n  from models import MelGANGenerator as Generator\n  ```\n\n1. Modify dataset path at `train.py`\n```python\n     parser.add_argument('--input_wavs_dir',\n                         default='path/LJSpeech-1.1/wavs_22k')\n     parser.add_argument('--input_mels_dir',\n                         default='path/LJSpeech-1.1/wavs_22k')\n```\n\n2. Run train.py\n```\npython train.py --config config_v1.json --aug --filter --data_ratio {0.01/0.1/1.} --name phaseaug_hifigan\n```\n```\npython train.py --config config_v1_melgan.json --aug --filter --data_ratio {0.01/0.1/1.} --name phaseaug_melgan\n```\n\n\n## References\nThis implementation uses code from following repositories:\n- [Official HiFi-GAN implementation](https://github.com/jik876/hifi-gan)\n- [Official MelGAN implementation](https://github.com/descriptinc/melgan-neurips)\n- [Official CARGAN implementation](https://github.com/descriptinc/cargan)\n- [alias-free-torch](https://github.com/junjun3518/alias-free-torch)\n\nThis README and the webpage for the audio samples are inspired by:\n- [LJ Speech Dataset](https://keithito.com/LJ-Speech-Dataset/)\n- [Official HiFi-GAN implementation](https://github.com/jik876/hifi-gan)\n\n## Citation & Contact\n\nIf this repostory useful for yout research, please consider citing!\n```bib\n@inproceedings{phaseaug,\n  author={Lee, Junhyeok and Han, Seungu and Cho, Hyunjae and Jung, Wonbin},\n  title={{PhaseAug: A Differentiable Augmentation for Speech Synthesis to Simulate One-to-Many Mapping}},\n  journal = {arXiv preprint arXiv:2211.04610},\n  year=2022,\n}\n```\nIf you have a question or any kind of inquiries, please contact Junhyeok Lee at [jun3518@mindslab.ai](mailto:jun3518@mindslab.ai)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mindslab-ai/phaseaug",
    "keywords": "torch,pytorch,augmentation,diffaugment,speech synthesis,vocoder",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "phaseaug",
    "package_url": "https://pypi.org/project/phaseaug/",
    "platform": null,
    "project_url": "https://pypi.org/project/phaseaug/",
    "project_urls": {
      "Homepage": "https://github.com/mindslab-ai/phaseaug"
    },
    "release_url": "https://pypi.org/project/phaseaug/0.0.2/",
    "requires_dist": [
      "torch",
      "alias-free-torch"
    ],
    "requires_python": ">=3",
    "summary": "PhaseAug: A Differentiable Augmentation for Speech Synthesis to Simulate One-to-Many Mapping",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15836577,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "873cb067eeb2d37840d1617bda7cf174f3983d6c829464471ecb94ce354b60e5",
          "md5": "5c6765b9495aeb6d898cb1fdc917a1f9",
          "sha256": "5b23d0eec20f7fa49c6f5496f76ae70dfc2298b47f94b5b32f3e31a53b0d1918"
        },
        "downloads": -1,
        "filename": "phaseaug-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c6765b9495aeb6d898cb1fdc917a1f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 5632,
        "upload_time": "2022-11-21T06:16:49",
        "upload_time_iso_8601": "2022-11-21T06:16:49.475900Z",
        "url": "https://files.pythonhosted.org/packages/87/3c/b067eeb2d37840d1617bda7cf174f3983d6c829464471ecb94ce354b60e5/phaseaug-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b690783971f9e52992b6f62cff067329aee96ab7405163fe62e20d34710513c5",
          "md5": "94368e4b86ae858a4f07f6568c2aef0c",
          "sha256": "b746c0b13c41dadcf60af344bc1814d3e6d1ebb6beb770994451e03e0ac49d8c"
        },
        "downloads": -1,
        "filename": "phaseaug-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "94368e4b86ae858a4f07f6568c2aef0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 5829,
        "upload_time": "2022-11-21T06:16:51",
        "upload_time_iso_8601": "2022-11-21T06:16:51.543340Z",
        "url": "https://files.pythonhosted.org/packages/b6/90/783971f9e52992b6f62cff067329aee96ab7405163fe62e20d34710513c5/phaseaug-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "873cb067eeb2d37840d1617bda7cf174f3983d6c829464471ecb94ce354b60e5",
        "md5": "5c6765b9495aeb6d898cb1fdc917a1f9",
        "sha256": "5b23d0eec20f7fa49c6f5496f76ae70dfc2298b47f94b5b32f3e31a53b0d1918"
      },
      "downloads": -1,
      "filename": "phaseaug-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5c6765b9495aeb6d898cb1fdc917a1f9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 5632,
      "upload_time": "2022-11-21T06:16:49",
      "upload_time_iso_8601": "2022-11-21T06:16:49.475900Z",
      "url": "https://files.pythonhosted.org/packages/87/3c/b067eeb2d37840d1617bda7cf174f3983d6c829464471ecb94ce354b60e5/phaseaug-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b690783971f9e52992b6f62cff067329aee96ab7405163fe62e20d34710513c5",
        "md5": "94368e4b86ae858a4f07f6568c2aef0c",
        "sha256": "b746c0b13c41dadcf60af344bc1814d3e6d1ebb6beb770994451e03e0ac49d8c"
      },
      "downloads": -1,
      "filename": "phaseaug-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "94368e4b86ae858a4f07f6568c2aef0c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 5829,
      "upload_time": "2022-11-21T06:16:51",
      "upload_time_iso_8601": "2022-11-21T06:16:51.543340Z",
      "url": "https://files.pythonhosted.org/packages/b6/90/783971f9e52992b6f62cff067329aee96ab7405163fe62e20d34710513c5/phaseaug-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}