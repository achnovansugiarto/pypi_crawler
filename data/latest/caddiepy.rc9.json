{
  "info": {
    "author": "Maiykol",
    "author_email": "michael.hartung@uni-hamburg.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<p align=\"center\">\n  <img alt=\"CADDIE Logo\" src=\"https://github.com/Maiykol/caddiepy/blob/main/caddie_logo.png?raw=true\" />\n</p>\n\n\n# caddiepy\n\nThe python package to the <a href=\"https://exbio.wzw.tum.de/caddie/\" target=\"_blank\">Cancer Driver Drug Interaction Explorer (CADDIE)</a>. It  provides an interface for a variety of CADDIEs functionalities, giving the user the possibility to execute tasks on CADDIE programmatically without using the website. This allows to run a larger number of drug-target search or drug repurposing tasks and to implement CADDIE into your programs. For more information about CADDIE, visit the <a href=\"https://exbio.wzw.tum.de/caddie/documentation\" target=\"_blank\">documentation</a>.\n\n\n# Working example\n\n```\nimport caddiepy\n\ngene_list = ['PTEN', 'MYC']\n\n# verify that genes exist in CADDIE\ncaddie_gene_list = caddiepy.api.map_gene_id(gene_list).json()['genes']\n\ntask = caddiepy.Task('drug', 'network_proximity', [gene['graphId'] for gene in caddie_gene_list])\n# customize parameters\ntask.set_parameter('result_size', 5)\ntask.set_parameter('include_indirect_drugs', True)\ntask.set_parameter('gene_interaction_datasets', ['IID'])\ntask.set_parameter('drug_interaction_datasets', ['DrugBank'])\n# start task\ntask.run()\n# get result when task is finished, if task is still running wait until it is finished\nresult = task.get_result()\n```\n\n# Pipeline example (drug target search folled by drug search)\n\nNote: The following pipeline can also be called as:\n\n```\ngene_list = ['FBXW7', 'PTEN', 'MYC']\nresulting_drugs = caddiepy.pipeline(gene_list)['drugObjects']\n```\n\n```\ngene_list = ['FBXW7', 'PTEN', 'MYC']\n\n# verify that genes exist in CADDIE\ncaddie_gene_list = caddiepy.api.map_gene_id(gene_list).json()['genes']\n\ntask = caddiepy.Task('drug-target', 'multi-steiner', [gene['graphId'] for gene in caddie_gene_list])\n# customize parameters\ntask.set_parameter('result_size', 20)\ntask.set_parameter('gene_interaction_datasets', ['BioGRID'])\n# start task\ntask.run()\n# get result when task is finished, if task is still running wait until it is finished\nresult_drug_targets = task.get_result()\n\ntask = caddiepy.Task('drug', 'trustrank', result_drug_targets['network']['nodes'])\n# customize parameters\ntask.set_parameter('result_size', 20)\ntask.set_parameter('include_indirect_drugs', True)\ntask.set_parameter('gene_interaction_datasets', ['IID'])\ntask.set_parameter('drug_interaction_datasets', ['DrugBank'])\n# start task\ntask.run()\n# get result when task is finished, if task is still running wait until it is finished\nresulting_drugs = task.get_result()['drugObjects']\n```\n\n# How to use\n\n## Import\nImport the module:\n```\nimport caddiepy\n```\n\n## 2 Steps to repurpose drugs and find drug-targets\nStep 1: Map genes to CADDIE gene IDs. This step is necessary to verify the genes exist in the CADDIE database. The gene objects returned contains a mapping to different IDs.\n```\n# gene list is a list of gene identifiers: entrez, uniprot ac or hugo\ncaddiepy.api.map_gene_id(gene_list)\n\n# example to receive list of caddie IDs\ncaddie_gene_list = caddiepy.api.map_gene_id(gene_list).json()['genes']\ncaddie_gene_id_list = [gene['graphId'] for gene in caddie_gene_list]\n```\n\nStep 2: Use CADDIE IDs to find putative drug-targets or candidate drugs using one of CADDIEs algorithms\n\nDrug-target algorithms: \n- multisteiner\n- keypathwayminer\n- trustrank\n- harmonic_centraliy\n- degree_centraliy\n- betweenness_centraliy\n\nDrug algorithms:\n- trustrank\n- harmonic_centraliy\n- degree_centraliy\n- network_proximity\n\n```\n# target is either 'drug' or 'drug-target'\n# caddie_gene_id_list is a list of caddie gene IDs (like g123, g234, ...)\ntask = caddiepy.Task(target, algorithm, caddie_gene_id_list)\n# set parameters like this (for a full list of parameters and the available datasets look below)\ntask.set_parameter('result_size', 50)\ntask.set_parameter('gene_interaction_datasets', [gene_interaction_dataset1, gene_interaction_dataset2, ...])\ntask.set_parameter('drug_interaction_datasets', [drug_interaction_dataset1, drug_interaction_dataset2, ...])\n# start task\ntask.run()\n# get result when task is finished, if task is still running wait until it is finished\nresult = task.get_result()\n```\n\n## Algorithm parameters\n\nThe full list of parameters for each algorithm (for an explanation, visit the <a href=\"https://exbio.wzw.tum.de/caddie/documentation\" target=\"_blank\">documentation</a>). For all available input options (dataset names, cancer-types) see below.\n\n```\n# multisteiner\ntask.set_parameter('num_trees', 5)\ntask.set_parameter('tolerance', 10)\ntask.set_parameter('hub_penalty', 0)\ntask.set_parameter('max_deg', sys.maxsize)\ntask.set_parameter('gene_interaction_datasets', gene_interaction_dataset_list)\ntask.set_parameter('mutation_cancer_type', mutation_cancer_type)\ntask.set_parameter('expression_cancer_type', expression_cancer_type)\ntask.set_parameter('tissue', tissue)\n\n# keypathwayminer\ntask.set_parameter('k', 5)\n\n# trustrank\ntask.set_parameter('damping_factor', 0.85)\ntask.set_parameter('hub_penalty', 0)\ntask.set_parameter('max_deg', sys.maxsize)\ntask.set_parameter('gene_interaction_datasets', gene_interaction_dataset_list)\ntask.set_parameter('drug_interaction_datasets', drug_interaction_dataset_list)\ntask.set_parameter('mutation_cancer_type', mutation_cancer_type)\ntask.set_parameter('expression_cancer_type', expression_cancer_type)\ntask.set_parameter('tissue', tissue)\ntask.set_parameter('include_nutraceutical_drugs', boolean)\ntask.set_parameter('only_atc_l_drugs', boolean)\ntask.set_parameter('include_indirect_drugs', boolean)\ntask.set_parameter('include_non_approved_drugs', boolean)\ntask.set_parameter('filter_paths', boolean)\ntask.set_parameter('available_drugs', available_drug_list)\n# only avaibale if drug_interaction_dataset_list = ['drugbank']\ntask.set_parameter('drug_target_action', drug_effect)\n\n# degree_centrality\ntask.set_parameter('hub_penalty', 0)\ntask.set_parameter('max_deg', sys.maxsize)\ntask.set_parameter('gene_interaction_datasets', gene_interaction_dataset_list)\ntask.set_parameter('drug_interaction_datasets', drug_interaction_dataset_list)\ntask.set_parameter('mutation_cancer_type', mutation_cancer_type)\ntask.set_parameter('expression_cancer_type', expression_cancer_type)\ntask.set_parameter('tissue', tissue)\ntask.set_parameter('include_nutraceutical_drugs', boolean)\ntask.set_parameter('only_atc_l_drugs', boolean)\ntask.set_parameter('include_indirect_drugs', boolean)\ntask.set_parameter('include_non_approved_drugs', boolean)\ntask.set_parameter('filter_paths', boolean)\ntask.set_parameter('available_drugs', available_drug_list)\n# only avaibale if drug_interaction_dataset_list = ['drugbank']\ntask.set_parameter('drug_target_action', drug_effect)\n\n# harmonic_centrality\ntask.set_parameter('hub_penalty', 0)\ntask.set_parameter('max_deg', sys.maxsize)\ntask.set_parameter('gene_interaction_datasets', gene_interaction_dataset_list)\ntask.set_parameter('drug_interaction_datasets', drug_interaction_dataset_list)\ntask.set_parameter('mutation_cancer_type', mutation_cancer_type)\ntask.set_parameter('expression_cancer_type', expression_cancer_type)\ntask.set_parameter('tissue', tissue)\ntask.set_parameter('include_nutraceutical_drugs', boolean)\ntask.set_parameter('only_atc_l_drugs', boolean)\ntask.set_parameter('include_indirect_drugs', boolean)\ntask.set_parameter('include_non_approved_drugs', boolean)\ntask.set_parameter('filter_paths', boolean)\ntask.set_parameter('available_drugs', available_drug_list)\n# only avaibale if drug_interaction_dataset_list = ['drugbank']\ntask.set_parameter('drug_target_action', drug_effect)\n\n# betweenness_centrality\ntask.set_parameter('hub_penalty', 0)\ntask.set_parameter('max_deg', sys.maxsize)\ntask.set_parameter('gene_interaction_datasets', gene_interaction_dataset_list)\ntask.set_parameter('mutation_cancer_type', mutation_cancer_type)\ntask.set_parameter('expression_cancer_type', expression_cancer_type)\ntask.set_parameter('tissue', tissue)\ntask.set_parameter('filter_paths', boolean)\n\n# network_proximity\ntask.set_parameter('hub_penalty', 0)\ntask.set_parameter('max_deg', sys.maxsize)\ntask.set_parameter('gene_interaction_datasets', gene_interaction_dataset_list)\ntask.set_parameter('drug_interaction_datasets', drug_interaction_dataset_list)\ntask.set_parameter('mutation_cancer_type', mutation_cancer_type)\ntask.set_parameter('expression_cancer_type', expression_cancer_type)\ntask.set_parameter('tissue', tissue)\ntask.set_parameter('include_nutraceutical_drugs', boolean)\ntask.set_parameter('only_atc_l_drugs', boolean)\ntask.set_parameter('include_indirect_drugs', boolean)\ntask.set_parameter('include_non_approved_drugs', boolean)\ntask.set_parameter('filter_paths', boolean)\ntask.set_parameter('available_drugs', available_drug_list)\n# only avaibale if drug_interaction_dataset_list = ['drugbank']\ntask.set_parameter('drug_target_action', drug_effect)\n```\n\n## List all available datasets\n\nList all available gene interaction datasets:\n```\ncaddiepy.api.get_gene_interaction_datasets().json()\n```\n\nList all available drug interaction datasets:\n```\ncaddiepy.api.get_drug_interaction_datasets().json()\n```\n\nList all available tissues:\n```\ncaddiepy.api.get_tissues().json()\n```\n\nList all available expression cancer types:\n```\ncaddiepy.api.get_expression_cancer_types().json()\n```\n\nList all available mutation cancer types:\n```\ncaddiepy.api.get_mutation_cancer_types().json()\n```\n\nList all available drug effects (only relevant when working with DrugBank):\n```\ncaddiepy.api.get_drug_effects().json()\n```\n\nLook up drugs in the CADDIE database and their interactions with genes:\n```\ncaddiepy.api.drug_lookup(search_string, database_name)\n```\n\n\n\n## Logging\nConfigure the logging level like this:\n```\nimport logging\nlogging.basicConfig(level=logging.DEBUG)\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://pypi.python.org/pypi/caddiepy/",
    "keywords": "",
    "license": "LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "caddiepy",
    "package_url": "https://pypi.org/project/caddiepy/",
    "platform": null,
    "project_url": "https://pypi.org/project/caddiepy/",
    "project_urls": {
      "Homepage": "http://pypi.python.org/pypi/caddiepy/"
    },
    "release_url": "https://pypi.org/project/caddiepy/0.2.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "The python package to the Cancer Driver Drug Interaction Explorer (CADDIE)",
    "version": "0.2.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17509439,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3df3475caed90a6f3e87d458321676a5494bb5455cbad4be14a177fa6fcd7ff0",
          "md5": "cfdb93ba1662b9d6fb7facb0efd94c68",
          "sha256": "2e10c9c1d43e43d46ed2befdd569e783199e992748a723d0444a5e36587eb28e"
        },
        "downloads": -1,
        "filename": "caddiepy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cfdb93ba1662b9d6fb7facb0efd94c68",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3792,
        "upload_time": "2021-08-18T13:26:40",
        "upload_time_iso_8601": "2021-08-18T13:26:40.474323Z",
        "url": "https://files.pythonhosted.org/packages/3d/f3/475caed90a6f3e87d458321676a5494bb5455cbad4be14a177fa6fcd7ff0/caddiepy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5c8a541c11754d8e7a6c08d5c31aea47f6bee3dc7083a04f47400b8339dbafa",
          "md5": "2016cedef49589b73f11d94e0ae62979",
          "sha256": "bb641529bc5e3e9f76b4e2924e9d86c9e390ddb4d568f84dce2e83bb826a2db3"
        },
        "downloads": -1,
        "filename": "caddiepy-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2016cedef49589b73f11d94e0ae62979",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4022,
        "upload_time": "2021-08-18T14:35:46",
        "upload_time_iso_8601": "2021-08-18T14:35:46.989811Z",
        "url": "https://files.pythonhosted.org/packages/c5/c8/a541c11754d8e7a6c08d5c31aea47f6bee3dc7083a04f47400b8339dbafa/caddiepy-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5777cde75ebfe962ab72b56488ee23e33daf623d685e339c01cfd496f6e404cc",
          "md5": "0c8a0ba4346ca6ea14d6136b9baf44c3",
          "sha256": "cddb20e4650865972ea71189ebcc6b484300f44952c39708f9f65d38054f6825"
        },
        "downloads": -1,
        "filename": "caddiepy-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0c8a0ba4346ca6ea14d6136b9baf44c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8466,
        "upload_time": "2021-08-23T06:48:43",
        "upload_time_iso_8601": "2021-08-23T06:48:43.311854Z",
        "url": "https://files.pythonhosted.org/packages/57/77/cde75ebfe962ab72b56488ee23e33daf623d685e339c01cfd496f6e404cc/caddiepy-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6645b0b8827f60e200f5ece161220188ddf892bcbe5a353cbfbc574288250c1d",
          "md5": "b22a95d8c42cc7829f2fd030ada5294a",
          "sha256": "304fa58f650d343753fb772598d63f432b36e4ac4a40b74823761bca0cfb3afc"
        },
        "downloads": -1,
        "filename": "caddiepy-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b22a95d8c42cc7829f2fd030ada5294a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9119,
        "upload_time": "2022-01-12T09:21:31",
        "upload_time_iso_8601": "2022-01-12T09:21:31.516323Z",
        "url": "https://files.pythonhosted.org/packages/66/45/b0b8827f60e200f5ece161220188ddf892bcbe5a353cbfbc574288250c1d/caddiepy-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "657cfb69a7e2ec3b9f226e700026a5de3d164a945f0c38008698118dc9aa4642",
          "md5": "434e6aa3234165bb3d3355a84ad1f802",
          "sha256": "025b002d5a6cb5948b2260695276017228c9de012cf99dc710070357d8a5f7b5"
        },
        "downloads": -1,
        "filename": "caddiepy-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "434e6aa3234165bb3d3355a84ad1f802",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9581,
        "upload_time": "2022-01-12T13:51:07",
        "upload_time_iso_8601": "2022-01-12T13:51:07.943588Z",
        "url": "https://files.pythonhosted.org/packages/65/7c/fb69a7e2ec3b9f226e700026a5de3d164a945f0c38008698118dc9aa4642/caddiepy-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2e64010246682589a670ad56a4db7ed1a8fcf1d866d12af197ae8cfd14df1bb",
          "md5": "36476eafc16f57606a6848bf7d0f91ec",
          "sha256": "b12e2c03e3f30b44640fc08f52e752f9e126cb0eedd0d5cc25984ed435614247"
        },
        "downloads": -1,
        "filename": "caddiepy-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "36476eafc16f57606a6848bf7d0f91ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9578,
        "upload_time": "2022-02-07T17:52:16",
        "upload_time_iso_8601": "2022-02-07T17:52:16.833979Z",
        "url": "https://files.pythonhosted.org/packages/d2/e6/4010246682589a670ad56a4db7ed1a8fcf1d866d12af197ae8cfd14df1bb/caddiepy-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3dd49fa8f9bdbea6b7c9afbd713f5a60e9054867b9688aa0619ddea65639e100",
          "md5": "820476727489b89dc0446834ef17cba5",
          "sha256": "ae491cf07a4864df5ef76055e95267e8bf20d4db5ec1edabfbf09ed6d4542a31"
        },
        "downloads": -1,
        "filename": "caddiepy-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "820476727489b89dc0446834ef17cba5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9620,
        "upload_time": "2022-02-08T15:50:57",
        "upload_time_iso_8601": "2022-02-08T15:50:57.655578Z",
        "url": "https://files.pythonhosted.org/packages/3d/d4/9fa8f9bdbea6b7c9afbd713f5a60e9054867b9688aa0619ddea65639e100/caddiepy-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a10e485d8a0f113e9036974542ff7b981712ac787425675c3aca6ec8c9c9dd2",
          "md5": "9a0059195deff731d0cecccbd0b2c93e",
          "sha256": "e835f920015f5d9f7c8e1d9195f3a106b9f39cafb2293a032be10566b22274c7"
        },
        "downloads": -1,
        "filename": "caddiepy-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9a0059195deff731d0cecccbd0b2c93e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10051,
        "upload_time": "2022-02-16T16:35:47",
        "upload_time_iso_8601": "2022-02-16T16:35:47.401640Z",
        "url": "https://files.pythonhosted.org/packages/0a/10/e485d8a0f113e9036974542ff7b981712ac787425675c3aca6ec8c9c9dd2/caddiepy-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ea0b2214f4d88c21ce3f8c6bfd731833d62960f3523fe4086ed12483be35fd8",
          "md5": "92ce71539a149c2271878cbd971d17d2",
          "sha256": "76b71f76db7f67b808fdaee5111d0d6879442009684283dc9d464ff2f69fb81a"
        },
        "downloads": -1,
        "filename": "caddiepy-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "92ce71539a149c2271878cbd971d17d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10036,
        "upload_time": "2023-03-30T11:50:30",
        "upload_time_iso_8601": "2023-03-30T11:50:30.393960Z",
        "url": "https://files.pythonhosted.org/packages/4e/a0/b2214f4d88c21ce3f8c6bfd731833d62960f3523fe4086ed12483be35fd8/caddiepy-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4ea0b2214f4d88c21ce3f8c6bfd731833d62960f3523fe4086ed12483be35fd8",
        "md5": "92ce71539a149c2271878cbd971d17d2",
        "sha256": "76b71f76db7f67b808fdaee5111d0d6879442009684283dc9d464ff2f69fb81a"
      },
      "downloads": -1,
      "filename": "caddiepy-0.2.5.tar.gz",
      "has_sig": false,
      "md5_digest": "92ce71539a149c2271878cbd971d17d2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10036,
      "upload_time": "2023-03-30T11:50:30",
      "upload_time_iso_8601": "2023-03-30T11:50:30.393960Z",
      "url": "https://files.pythonhosted.org/packages/4e/a0/b2214f4d88c21ce3f8c6bfd731833d62960f3523fe4086ed12483be35fd8/caddiepy-0.2.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}