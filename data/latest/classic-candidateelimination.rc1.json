{
  "info": {
    "author": "Safir Motiwala",
    "author_email": "safirmotiwala@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "Candidate-Elimination Algorithm\n===================\n\n\nCandidate-Elimination Algorithm is a Machine Learning Algorithm that builds the version space from Specific Hypothesis and General Hypothesis.\n\n----------\n\n\nInstallation\n-------------\nInstall directly from my [PyPi](https://pypi.org/project/classic-CandidateElimination/)\n\n> pip install classic-CandidateElimination\n\nOr Clone the [Repository](https://github.com/safir72347/ML-CandidateElimination-PyPi) and install\n\n> python3 setup.py install\n\nParameters\n-------------\n\n## * X_train \n-------------\nThe Training Set array consisting of Features.\n\n## * y_train\n-------------\nThe Training Set array consisting of Outcome.\n\n\nAttributes\n-------------\n\n## * fit(X_train, y_train)\n-------------\nFit the Training Set to the model.\n\n## * predict(y_test)\n-------------\nPredict the Test Set Results.\n\n\n\n<i class=\"icon-file\"></i> Documentation\n-------------\n\n### 1.  Install the package\n>  pip install classic_FindS\n\n### 2. Import the library\n>  from classic_CandidateElimination import Candidate_Elimination\n\n### 3. Create an object for FindS class\n> ce = Candidate_Elimination()\n\n### 4. Fit your Training Set to the model\n> fs.fit(X_train, y_train)\n\n### 5. Predict your Test Set results\n> y_pred = fs.predict(y_test)\n\n----------\n\n\n\nExample Code\n-------------\n\n### 1. Import the dataset and Preprocess\n> * import numpy as np\n> * import pandas as pd\n> * dataset = pd.read_csv('Covid-19_Data.csv')\n> * result = {'Yes':1, 'No':0}\n> * dataset['Covid_19'] = dataset['Covid_19'].map(result)\n> * X = dataset.iloc[:, 0:5].values\n> * y = dataset.iloc[:, -1].values\n\n> * from sklearn.model_selection import KFold\n> * kf = KFold(n_splits=10)\n> * for train_index, test_index in kf.split(X,y):\n>\t * X_train, X_test = X[train_index], X[test_index]\n>\t * y_train, y_test = y[train_index], y[test_index]\n\n### 2. Use the Find-S Library\n> * from classic_CandidateElimination import Candidate_Elimination\n> * ce = Candidate_Elimination()            \n> * ce.fit(X_train, y_train)\n> * y_pred = ce.predict(X_test) \n\n\n----------\n\n\n\nFootnotes\n-------------\n\nYou can find the code at my [Github](https://github.com/safir72347/ML-CandidateElimination-PyPi).\n\n\n\nConnect with me on Social Media\n-------------\n\n* [https://www.github.com/safir72347](www.github.com/safir72347)\n* [https://www.linkedin.com/in/safir72347/](https://www.linkedin.com/in/safir72347/)\n* [https://www.instagram.com/safir_12_10/](https://www.instagram.com/safir_12_10/)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/safir72347/ML-CandidateElimination-PyPi",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "classic-CandidateElimination",
    "package_url": "https://pypi.org/project/classic-CandidateElimination/",
    "platform": "",
    "project_url": "https://pypi.org/project/classic-CandidateElimination/",
    "project_urls": {
      "Homepage": "https://github.com/safir72347/ML-CandidateElimination-PyPi"
    },
    "release_url": "https://pypi.org/project/classic-CandidateElimination/2.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.0",
    "summary": "Candidate-Elimination Algorithm is a Machine Learning Algorithm that builds the version space from Specific Hypothesis and General Hypothesis.",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8164275,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c75ad9ce828c7225b1504bdb64683e4f8be02f927149118a4e8bdf8219cfd61",
          "md5": "dc76d486bcdba95cdd1d612f45e263fc",
          "sha256": "62c64748ab5e7f90771bf6571df254c7289757c43b2909ed31a07b39bc253869"
        },
        "downloads": -1,
        "filename": "classic_CandidateElimination-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc76d486bcdba95cdd1d612f45e263fc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 4166,
        "upload_time": "2020-09-11T12:28:35",
        "upload_time_iso_8601": "2020-09-11T12:28:35.652813Z",
        "url": "https://files.pythonhosted.org/packages/1c/75/ad9ce828c7225b1504bdb64683e4f8be02f927149118a4e8bdf8219cfd61/classic_CandidateElimination-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b642c734d145b485a690c88542ac7f86d13569dd4decd3645a017887aaccbb92",
          "md5": "e3d0a8e3ee77ea03bf65e4188feee4dc",
          "sha256": "9521c3226d281485b29e3c57f478cd98e4efc2c892544ad1253ce609263ad96c"
        },
        "downloads": -1,
        "filename": "classic_CandidateElimination-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e3d0a8e3ee77ea03bf65e4188feee4dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 3170,
        "upload_time": "2020-09-11T12:28:39",
        "upload_time_iso_8601": "2020-09-11T12:28:39.736124Z",
        "url": "https://files.pythonhosted.org/packages/b6/42/c734d145b485a690c88542ac7f86d13569dd4decd3645a017887aaccbb92/classic_CandidateElimination-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1c75ad9ce828c7225b1504bdb64683e4f8be02f927149118a4e8bdf8219cfd61",
        "md5": "dc76d486bcdba95cdd1d612f45e263fc",
        "sha256": "62c64748ab5e7f90771bf6571df254c7289757c43b2909ed31a07b39bc253869"
      },
      "downloads": -1,
      "filename": "classic_CandidateElimination-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dc76d486bcdba95cdd1d612f45e263fc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.0",
      "size": 4166,
      "upload_time": "2020-09-11T12:28:35",
      "upload_time_iso_8601": "2020-09-11T12:28:35.652813Z",
      "url": "https://files.pythonhosted.org/packages/1c/75/ad9ce828c7225b1504bdb64683e4f8be02f927149118a4e8bdf8219cfd61/classic_CandidateElimination-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b642c734d145b485a690c88542ac7f86d13569dd4decd3645a017887aaccbb92",
        "md5": "e3d0a8e3ee77ea03bf65e4188feee4dc",
        "sha256": "9521c3226d281485b29e3c57f478cd98e4efc2c892544ad1253ce609263ad96c"
      },
      "downloads": -1,
      "filename": "classic_CandidateElimination-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e3d0a8e3ee77ea03bf65e4188feee4dc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.0",
      "size": 3170,
      "upload_time": "2020-09-11T12:28:39",
      "upload_time_iso_8601": "2020-09-11T12:28:39.736124Z",
      "url": "https://files.pythonhosted.org/packages/b6/42/c734d145b485a690c88542ac7f86d13569dd4decd3645a017887aaccbb92/classic_CandidateElimination-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}