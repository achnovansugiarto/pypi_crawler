{
  "info": {
    "author": "Paul K Korir, PhD",
    "author_email": "pkorir@ebi.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Terminals",
      "Topic :: Text Processing",
      "Topic :: Text Processing :: Markup",
      "Topic :: Utilities"
    ],
    "description": "[![PyPI version](https://badge.fury.io/py/styled.svg)](https://badge.fury.io/py/styled) ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/styled.svg) [![Coverage Status](https://coveralls.io/repos/github/emdb-empiar/styled/badge.svg?branch=master)](https://coveralls.io/github/emdb-empiar/styled?branch=master) [![Build Status](https://travis-ci.org/emdb-empiar/styled.svg?branch=master)](https://travis-ci.org/emdb-empiar/styled)\n\n# `styled`: Style your terminal with ease!\n\n## Getting Started\n\nTo get it from `PyPI` use\n\n```bash\npip install styled\n```\n\nIt's best to do this in a virtual environment.\n\n```bash\n# anaconda/miniconda\nconda create -n styled python\nsource activate styled\npip install styled\n\n# virtualenv\nvirtualenv /path/to/env/styled -p /path/to/python\nsource /path/to/envs/styled/bin/activate\npip install styled\n\n```\n\nThere are two ways to use `styled`:\n* _interactively_ using the `styled` CLI which has three commands: `try`, `demo` and `version`; type `styled` to read the instructions;\n* _programmatically_ through the `Styled` class. \n\n## Concepts\nTo style a string, you need to delimit the portion to be styled with double brackets `[[ ... ]]` then make sure that the following _three (3)_ conditions hold:\n\n* separate the text from the styles with a pipe (`|`),\n* quote the text part with either a pair of single (`'...'`) or double (`\"...\"`) quotes, then \n* separate each style with a colon (`:`)\n\nThere are _three (3)_ types of styles:\n\n* _text styling_ such as `bold`, `blink`, `underlined` etc.\n* *foreground colours*, such as `fg-red`,\n* *background colours*, such as `bg-blue`.\n\nIf you want to style an extended piece of text you can use the special style marker `no-end` signaling that current style will not be interrupted for as long as possible. This can be useful if you want to style a long stretch of text e.g. a paragraph. Use the \nspecial marker `yes-end` to terminate a `no-end` marker.\n\n## Interactive Use\nThe fastest way to get started is to use the `try` command:\n\n![Trying your hand out of a string of formatted text](try.png) _Trying out a formatted string._\n\nYou can reference the available styles using the `demo` command, which by default shows colours.\n\n![Viewing the colour palette](colours.png) _Colour Palette_\n\nUse `demo formats` to view formatting options.\n\n![Viewing the formatting options](formats.png) _Formatting Options_\n\n## Programmatic Use\n\nTo use `styled` programmatically, use the `Styled` class as follows:\n\n```python\nfrom styled import Styled\ns = Styled(\"We are [[ 'bold'|bold ]] men!\")\nprint(s)\n```\n\nYou can perform string formatting _directly_ in the constructor.\n\n```python\nfrom styled import Styled\ns = Styled(\"There were up to [[ '{}'|bold:fg-red ]] people who handed over themselves to the \\\n[[ '{police}'|fg-black:bg-red:bold ]].\", 24, police='policia')\nprint(s)\n```\n\n```python\nfrom styled import Styled\ns = Styled(\"There were up to [[ '{}'|bold:fg-red:no-end ]] people who handed over themselves to the \\\n[[ '{police}'|fg-black:bg-red:bold ]].\", 24, police='policia')\nprint(s)\n``` \n\nThe above example will have all the text until the next marker affected by the red foreground styling. You can also \nmanually enforce an end marker by using `yes-end` as a style. By default, all style markers will terminate on the \ntext to be styled. So, for example\n\n```python\nfrom styled import Styled\n# an example of a terminating end marker\ns = Styled(\"There were up to [[ '{}'|bold:fg-red:no-end ]] people who handed over themselves [[ ''|yes-end ]] to the \\\n[[ '{police}'|fg-black:bg-red:bold ]].\", 24, police='policia')\nprint(s)\n``` \n\nwill suspend red foreground at the end of the word 'themselves'.\n\nYou can only have one foreground and one background colour. Ignoring this produces a `StyleError`\n\n```python\nfrom styled import Styled\ns = Styled(\"There were up to [[ '{}'|bold:fg-red:fg-blue ]] people who handed over themselves to the [[ '{police}'|fg-black:bg-red:bold ]].\", 24, police='policia')\n```\n\n```shell\nTraceback (most recent call last):\n  File \"/Users/pkorir/miniconda2/envs/styled/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 2878, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"<ipython-input-3-0993b680f88b>\", line 1, in <module>\n    s = Styled(\"There were up to [[ '{}'|bold:fg-red:fg-blue ]] people who handed over themselves to the [[ '{police}'|fg-black:bg-red:bold ]].\", 24, police='policia')\n  File \"/Users/pkorir/PycharmProjects/styled/styled/styled.py\", line 55, in __init__\n    self._validate(self._tokens)\n  File \"/Users/pkorir/PycharmProjects/styled/styled/styled.py\", line 156, in _validate\n    raise StyleError(\"Multiple foreground styles for text '{}': {}\".format(text, ', '.join(styles)))\nStyleError: Multiple foreground styles for text '24': bold, fg-red, fg-blue\n```\n\nInputting an invalid `style` also raises a `StyleError`\n\n```python\nfrom styled import Styled\ns = Styled(\"This just can't just [[ 'go'|underline ]] on forever! \")\n```\n\n```shell\nTraceback (most recent call last):\n  File \"/Users/pkorir/miniconda2/envs/styled/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 2878, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"<ipython-input-4-528d6d2ac4f4>\", line 1, in <module>\n    s = Styled(\"This just can't just [[ 'go'|underline ]] on forever! \")\n  File \"/Users/pkorir/PycharmProjects/styled/styled/styled.py\", line 59, in __init__\n    self._styled = self._transform(self._plain, self._cleaned_tokens)\n  File \"/Users/pkorir/PycharmProjects/styled/styled/styled.py\", line 99, in _transform\n    styled += plain[i:start] + self.transform(token)\n  File \"/Users/pkorir/PycharmProjects/styled/styled/styled.py\", line 87, in transform\n    raise StyleError(\"Unknown style '{}'\".format(style_))\nStyleError: Unknown style 'underline'\n```\n\n(In case you're wondering, it should have been `underlined` not `underline`.)\n\n\n## Concatenation\n\nConcatenating a normal string and a `Styled` string produces a `Styled` string, which is a subclass of string. \nInternally, though, everything is a Unicode string.\n\n```shell\nfrom styled import Styled\ns = Styled(\"This just can't just [[ 'go'|underlined ]] on forever! \")\nu = \"She shouted back!\"\nprint(type(s + u))\n# <class 'styled.styled.Styled'>\nprint(type(u + s))\n# <class 'styled.styled.Styled'>\ns += \"Gloria!\"\nprint(type(s))\n# <class 'styled.styled.Styled'>\n```\n\n## Validation\n\nThe process of generating the output involves some validation - to check that styles are sane. At present,\nonly multiple fore- and background colours are checked. This will be expanded as needed.\n\n## Cleaning Styles\n\nIn addition to validation, styles are cleaned. Cleaning ensures that the final set of styles is non-redundant.\n\n```python\nfrom styled import Styled\ns = Styled(\"It takes enormous [[ 'courage'|bold:bold:bold ]] to admit that you're wrong.\")\nprint(s._tokens)\n# [(19, 49, 'courage', ['bold', 'bold', 'bold'])]\nprint(s._cleaned_tokens)\n# [(19, 49, 'courage', ['bold'])]\n```\n\n## Backstory\nWelcome to `styled`, a simple Python package that makes a breeze of writing beautiful text to the terminal. \nThe main innovation behind `styled` is the dead-simple user interface which does away with the user's need to know \nanything other than the style names. Behind the scenes `styled` handles everything to keep \nyour styles consistent and redundant and informing you when you have made formatting errors.\n\n`styled` was borne out of the frustration encountered in using other packages which muddle the boundary between\n_user-space_ and _design-space_. The user should be free to be a _user_, and it is the _designer's_ job to hide the \nimplementation behind a simple user interface that facilitates the user's task. This is what I've tried to do. If I have \nfailed to live up to this please let me know. I'm sure together we can come up with something better.\n\n## Aspirations?\n\nWhen I grow up I want to have my own Python string declaration like so:\n\n```shell\n# hey! I'm a styled string\ns = s\"You have to [[ 'believe'|fg-red ]] it to [[ 'see'|fg-green ]] it!\"\n```\n\n## Special Thanks\n\nTo the following people\n\n* **Dimitris Zlatanidis** (for the inspiration and resources in his package `colored` available at <https://gitlab.com/dslackw/colored>)\n* **Cesare Catavitello** (for being the _first_ user)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/emdb-empiar/styled",
    "keywords": "style, terminal, colours, format",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "styled",
    "package_url": "https://pypi.org/project/styled/",
    "platform": null,
    "project_url": "https://pypi.org/project/styled/",
    "project_urls": {
      "Homepage": "https://github.com/emdb-empiar/styled",
      "changelog": "https://github.com/emdb-empiar/styled",
      "documentation": "https://github.com/emdb-empiar/styled",
      "repository": "https://github.com/emdb-empiar/styled"
    },
    "release_url": "https://pypi.org/project/styled/0.3.0/",
    "requires_dist": [
      "pytest (>6.0) ; extra == 'test'",
      "pytest-cov ; extra == 'test'"
    ],
    "requires_python": ">=3.7",
    "summary": "Style your terminal with ease!",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15753593,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19fd3cf7ebab3497469c86b185e3a4bc1a214ff66d8c9555284a3b98f4330c7d",
          "md5": "83de1b6ae29060a8962d4e8f653f7cb9",
          "sha256": "93a5b4fe395288319e895bc938ede0381848585fd5b1a20f7875b16e329c928f"
        },
        "downloads": -1,
        "filename": "styled-0.1.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "83de1b6ae29060a8962d4e8f653f7cb9",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 14455,
        "upload_time": "2019-02-08T12:57:37",
        "upload_time_iso_8601": "2019-02-08T12:57:37.545958Z",
        "url": "https://files.pythonhosted.org/packages/19/fd/3cf7ebab3497469c86b185e3a4bc1a214ff66d8c9555284a3b98f4330c7d/styled-0.1.2-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f806bc0f4f26655482f6ce06897dabea6f4cb6631cf8acfcc2b11dffcc964e2b",
          "md5": "17dbb68a8a5af4d38f808a716ca72b04",
          "sha256": "9133fc38e133092c2b4b9a767399ec19e736d404adc1683267ba91c36c19826a"
        },
        "downloads": -1,
        "filename": "styled-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "17dbb68a8a5af4d38f808a716ca72b04",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14400,
        "upload_time": "2019-02-08T12:57:40",
        "upload_time_iso_8601": "2019-02-08T12:57:40.255927Z",
        "url": "https://files.pythonhosted.org/packages/f8/06/bc0f4f26655482f6ce06897dabea6f4cb6631cf8acfcc2b11dffcc964e2b/styled-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2.post0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "537a5cb0963922a0adf9422ad0fcd4aa495944d767c27704c8eac59588e1561f",
          "md5": "502a2444ce2cbe1adca90515ac96d874",
          "sha256": "4d0a540a14e75a0955bd0f9ab5082d58a5d6b43477408f37a5528b156e5cff72"
        },
        "downloads": -1,
        "filename": "styled-0.1.2.post0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "502a2444ce2cbe1adca90515ac96d874",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 14459,
        "upload_time": "2019-02-08T15:51:33",
        "upload_time_iso_8601": "2019-02-08T15:51:33.483227Z",
        "url": "https://files.pythonhosted.org/packages/53/7a/5cb0963922a0adf9422ad0fcd4aa495944d767c27704c8eac59588e1561f/styled-0.1.2.post0-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "107f3d3230b597796a393e550314e012552778273ef137222acc0cd5f043fe28",
          "md5": "30395f52dc643358fefb2e04c50a7c43",
          "sha256": "3f6bf539d6e63920d50febcd02b2c6f974623e7a08d309914edd95b59ef6030e"
        },
        "downloads": -1,
        "filename": "styled-0.1.2.post0.tar.gz",
        "has_sig": false,
        "md5_digest": "30395f52dc643358fefb2e04c50a7c43",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14261,
        "upload_time": "2019-02-08T15:51:35",
        "upload_time_iso_8601": "2019-02-08T15:51:35.145800Z",
        "url": "https://files.pythonhosted.org/packages/10/7f/3d3230b597796a393e550314e012552778273ef137222acc0cd5f043fe28/styled-0.1.2.post0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7c5241496e543de927616f9aac134a5f074209fa9d7d507178471a2b5236f05",
          "md5": "b2a1c22c7fa2c334da0b8aa0964807bb",
          "sha256": "1f2535d5aa86c9d894be39fe896d22d76ee7e299979cd5537c84fe3dd9ac4936"
        },
        "downloads": -1,
        "filename": "styled-0.2.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "b2a1c22c7fa2c334da0b8aa0964807bb",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 15104,
        "upload_time": "2019-05-10T13:43:28",
        "upload_time_iso_8601": "2019-05-10T13:43:28.564317Z",
        "url": "https://files.pythonhosted.org/packages/f7/c5/241496e543de927616f9aac134a5f074209fa9d7d507178471a2b5236f05/styled-0.2.0-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88d9ceb2294a62577bb31a2cab075dc3329330e8bdde1312528ea7c40a22e349",
          "md5": "0b91118e9ecc19b6dc1d06ae2ead5ffc",
          "sha256": "91ab8022913de87fe1a614d3caeebafe046fd20cdd7d821a61738c1ce86e7276"
        },
        "downloads": -1,
        "filename": "styled-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0b91118e9ecc19b6dc1d06ae2ead5ffc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13038,
        "upload_time": "2019-05-10T13:43:30",
        "upload_time_iso_8601": "2019-05-10T13:43:30.468442Z",
        "url": "https://files.pythonhosted.org/packages/88/d9/ceb2294a62577bb31a2cab075dc3329330e8bdde1312528ea7c40a22e349/styled-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0.post0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76c3f68e1389a553bed4744dfe6cac55220f7698a3b98a37d0487db434a3abf6",
          "md5": "abc2787171750845a8e95ceb4526f130",
          "sha256": "f932de243a12bf7a263162b00a5eb8aea75ce259118c6d343cf33be4554bd8c1"
        },
        "downloads": -1,
        "filename": "styled-0.2.0.post0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "abc2787171750845a8e95ceb4526f130",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 15459,
        "upload_time": "2019-05-10T14:36:17",
        "upload_time_iso_8601": "2019-05-10T14:36:17.580500Z",
        "url": "https://files.pythonhosted.org/packages/76/c3/f68e1389a553bed4744dfe6cac55220f7698a3b98a37d0487db434a3abf6/styled-0.2.0.post0-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3cd8d7cff87d1cd0842ce8f17867780c0366744e5fb752ec80db6034aa2373c",
          "md5": "298fd8038db0e88deeaba9bd73e0711d",
          "sha256": "a3214d65db7fb12348ac6fb5b462dfeec7c26901b6694414433fe7ceee8d6d31"
        },
        "downloads": -1,
        "filename": "styled-0.2.0.post0.tar.gz",
        "has_sig": false,
        "md5_digest": "298fd8038db0e88deeaba9bd73e0711d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13865,
        "upload_time": "2019-05-10T14:36:19",
        "upload_time_iso_8601": "2019-05-10T14:36:19.144779Z",
        "url": "https://files.pythonhosted.org/packages/e3/cd/8d7cff87d1cd0842ce8f17867780c0366744e5fb752ec80db6034aa2373c/styled-0.2.0.post0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd74bf34711fdc41f29bec9a007a68bd436c2ea566cc291540afeedc343a956b",
          "md5": "cb9e4f33ade7e6889fdeb17d48c703c7",
          "sha256": "25da04dbc3ef47ef8dda8fd25b30675236925bd3e8188e12d44aab38bffdf3a7"
        },
        "downloads": -1,
        "filename": "styled-0.2.0.post1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb9e4f33ade7e6889fdeb17d48c703c7",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 15517,
        "upload_time": "2019-05-10T14:45:26",
        "upload_time_iso_8601": "2019-05-10T14:45:26.028814Z",
        "url": "https://files.pythonhosted.org/packages/fd/74/bf34711fdc41f29bec9a007a68bd436c2ea566cc291540afeedc343a956b/styled-0.2.0.post1-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a11c709b2fdf63935cf2b355349fea7ad06eb9ec970b66dd63b789380590e420",
          "md5": "0fb47ae52801eefec8104d610dd61e2f",
          "sha256": "430c73c6127c8e58187719fec7b66ae692d0b909f553a183ffce119cef1748d4"
        },
        "downloads": -1,
        "filename": "styled-0.2.0.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "0fb47ae52801eefec8104d610dd61e2f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13963,
        "upload_time": "2019-05-10T14:45:27",
        "upload_time_iso_8601": "2019-05-10T14:45:27.388485Z",
        "url": "https://files.pythonhosted.org/packages/a1/1c/709b2fdf63935cf2b355349fea7ad06eb9ec970b66dd63b789380590e420/styled-0.2.0.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdd51954af074662fb08005df67f37e510bba4ffb0ca21a6b32d3ea5ab54698d",
          "md5": "9c37f1c3e79c4fd99a3153b94483d8a7",
          "sha256": "0a70a7c6b917266b20fec1e6a9b0cc1c836cc24613afecb0f48e8f854cc34596"
        },
        "downloads": -1,
        "filename": "styled-0.2.0.post2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "9c37f1c3e79c4fd99a3153b94483d8a7",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 15574,
        "upload_time": "2021-01-14T13:02:03",
        "upload_time_iso_8601": "2021-01-14T13:02:03.428589Z",
        "url": "https://files.pythonhosted.org/packages/fd/d5/1954af074662fb08005df67f37e510bba4ffb0ca21a6b32d3ea5ab54698d/styled-0.2.0.post2-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a34f6fc60cc00904971ae1d9eca3af3996bc7553c62962a031b7ba15bd0102a",
          "md5": "6eedd8670eff7eedfbd83fab7abca83b",
          "sha256": "fea454b799b6af082a7f120d5471665701aca18ac6b83c35129326e82e7514e8"
        },
        "downloads": -1,
        "filename": "styled-0.2.0.post2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6eedd8670eff7eedfbd83fab7abca83b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15573,
        "upload_time": "2021-01-14T13:02:04",
        "upload_time_iso_8601": "2021-01-14T13:02:04.821977Z",
        "url": "https://files.pythonhosted.org/packages/9a/34/f6fc60cc00904971ae1d9eca3af3996bc7553c62962a031b7ba15bd0102a/styled-0.2.0.post2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2d01177436e416bc3fd54a92997a9979c561838ac1e6201dd4a5ad965edc0a8",
          "md5": "abe4dddd931995c7fba8bfac08a43f16",
          "sha256": "b1dee1a0722181220acd281856061d6b292d52c28c27cce16f16e3739c6bd91e"
        },
        "downloads": -1,
        "filename": "styled-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "abe4dddd931995c7fba8bfac08a43f16",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 14312,
        "upload_time": "2022-11-13T22:20:59",
        "upload_time_iso_8601": "2022-11-13T22:20:59.453014Z",
        "url": "https://files.pythonhosted.org/packages/b2/d0/1177436e416bc3fd54a92997a9979c561838ac1e6201dd4a5ad965edc0a8/styled-0.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11d2ed5502cc2c7300cfd4d2a8d86625b43f40e7fdd3d24af7437a72f075ac69",
          "md5": "0308a856b5882a07585a428477d0cdc2",
          "sha256": "cc5bdde0b5f843df57d5db162387327c97bf9da49a2e5377b46645de40a20037"
        },
        "downloads": -1,
        "filename": "styled-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0308a856b5882a07585a428477d0cdc2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 28241,
        "upload_time": "2022-11-13T22:21:01",
        "upload_time_iso_8601": "2022-11-13T22:21:01.011744Z",
        "url": "https://files.pythonhosted.org/packages/11/d2/ed5502cc2c7300cfd4d2a8d86625b43f40e7fdd3d24af7437a72f075ac69/styled-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b2d01177436e416bc3fd54a92997a9979c561838ac1e6201dd4a5ad965edc0a8",
        "md5": "abe4dddd931995c7fba8bfac08a43f16",
        "sha256": "b1dee1a0722181220acd281856061d6b292d52c28c27cce16f16e3739c6bd91e"
      },
      "downloads": -1,
      "filename": "styled-0.3.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "abe4dddd931995c7fba8bfac08a43f16",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.7",
      "size": 14312,
      "upload_time": "2022-11-13T22:20:59",
      "upload_time_iso_8601": "2022-11-13T22:20:59.453014Z",
      "url": "https://files.pythonhosted.org/packages/b2/d0/1177436e416bc3fd54a92997a9979c561838ac1e6201dd4a5ad965edc0a8/styled-0.3.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "11d2ed5502cc2c7300cfd4d2a8d86625b43f40e7fdd3d24af7437a72f075ac69",
        "md5": "0308a856b5882a07585a428477d0cdc2",
        "sha256": "cc5bdde0b5f843df57d5db162387327c97bf9da49a2e5377b46645de40a20037"
      },
      "downloads": -1,
      "filename": "styled-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0308a856b5882a07585a428477d0cdc2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 28241,
      "upload_time": "2022-11-13T22:21:01",
      "upload_time_iso_8601": "2022-11-13T22:21:01.011744Z",
      "url": "https://files.pythonhosted.org/packages/11/d2/ed5502cc2c7300cfd4d2a8d86625b43f40e7fdd3d24af7437a72f075ac69/styled-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}