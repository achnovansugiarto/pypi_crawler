{
  "info": {
    "author": "Ragul s",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# StatsFLow Library\r\n\r\n[![forthebadge made-with-python](http://ForTheBadge.com/images/badges/made-with-python.svg)](https://www.python.org/)                 \r\n[![Python 3.9](https://img.shields.io/badge/python-3.9-blue.svg)](https://www.python.org/downloads/release/python-390/)   \r\n\r\n## Functionality of the StatsFLow\r\n- This Python package consist of various statistical modules and function that can be  very\r\nuseful for data preprocessing,data transformation,EDA and seamlessly improves the performance of Ml-Pipeline.\r\n\r\n## Usage\r\n\r\n- Make sure you have Python installed in your system.\r\n- Run Following command in the CMD.\r\n```\r\n  pip install statsflow\r\n```\r\n## Example for  probplot_transform() function\r\n\r\n```\r\n# importing the data  \r\ndf=pd.read_csv(\"data/UCI_Credit_Card.csv\")\r\ndf.head()\r\n ```\r\n\r\n```\r\n#import probplot_transform function\r\nfrom statsflow import probplot_transform\r\n\r\n```\r\n\r\n```\r\n# apply the probplot_transform function\r\n\r\ndf['bill']=probplot_transform(feature=df['LIMIT_BAL'],trans_method='default')\r\n\r\n\r\n\r\n\r\n```\r\n<img src=\"https://github.com/ragulslrk/img/blob/main/default.png\">\r\n\r\n\r\n# Apply the probplot_transform function with various transformation['log','box_cox','recip','sqrt','expo']\r\n\r\n```\r\n#Exponential transformation\r\ndf['bill_expo']=probplot_transform(feature=df['LIMIT_BAL'],trans_method='expo')\r\n```\r\n<img src=\"https://github.com/ragulslrk/img/blob/main/expo.png\">\r\n\r\n\r\n```\r\n#Square root transformation\r\ndf['bill_sqrt']=probplot_transform(feature=df['LIMIT_BAL'],trans_method='sqrt')\r\n```\r\n<img src=\"https://github.com/ragulslrk/img/blob/main/sqrt.png\">\r\n\r\n```\r\n# Box-cox  transformation\r\ndf['bill_box_cox']=probplot_transform(feature=df['LIMIT_BAL'],trans_method='box_cox')\r\n```\r\n<img src=\"https://github.com/ragulslrk/img/blob/main/box-cox.png\">\r\n\r\n```\r\n# Logarithmic Transformation\r\ndf['bill_log']=probplot_transform(feature=df['LIMIT_BAL'],trans_method='log')\r\n```\r\n<img src=\"https://github.com/ragulslrk/img/blob/main/logarthimic.png\">\r\n\r\n```\r\n#Reciprocal Transformation \r\ndf['bill_log']=probplot_transform(feature=df['LIMIT_BAL'],trans_method='recip')\r\n\r\n```\r\n<img src=\"https://github.com/ragulslrk/img/blob/main/recip.png\">\r\n\r\n\r\n## Note \r\n-For Initial version i have only include the probplot_transform function.soon i will try to implement new statistical functions.\r\n\r\n## Probplot Transform Function:\r\n### Description:\r\nThis function used to interpret whether the given data follows normal distribution by using histogram and probplot. if the data not follows normal distribution then with the help of the trans_method param it can transform the data using Box-Cox,Logarithmic,Reciprocal,Square Root,Exponential Transformation.\r\n\r\n## Args: \r\n[feature(pd.Series),trans_method('default','log','box_cox','recip','sqrt','expo')]\r\n\r\n\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ragulslrk/statsflow_pkgs",
    "keywords": "statistics,plotting,probplot,data transformation",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "statsflow",
    "package_url": "https://pypi.org/project/statsflow/",
    "platform": null,
    "project_url": "https://pypi.org/project/statsflow/",
    "project_urls": {
      "Homepage": "https://github.com/ragulslrk/statsflow_pkgs"
    },
    "release_url": "https://pypi.org/project/statsflow/0.0.1/",
    "requires_dist": [
      "numpy",
      "pandas",
      "matplotlib",
      "scipy"
    ],
    "requires_python": ">=3.9",
    "summary": "This Python package consist of various statistical modules and function that can be  very useful for data preprocessing,data transformation,EDA and seamlessly improves the performance of Ml-Pipeline",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17333340,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9eb01a7915414de708c863ab209b04e5cb3c3a77131861756744ef3912dced89",
          "md5": "a1b8373f9170920e0463418f2938b19e",
          "sha256": "ce2d09b6d0e007799cb7c9f2985559728e63c81fcc7550a04c6b074f0cfb0a5e"
        },
        "downloads": -1,
        "filename": "statsflow-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a1b8373f9170920e0463418f2938b19e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 4920,
        "upload_time": "2023-03-17T11:15:13",
        "upload_time_iso_8601": "2023-03-17T11:15:13.622873Z",
        "url": "https://files.pythonhosted.org/packages/9e/b0/1a7915414de708c863ab209b04e5cb3c3a77131861756744ef3912dced89/statsflow-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "109c9865be5a0545878edba23b4556b357c7125e732e87e450ee4c5c5b105c15",
          "md5": "efd3ad85da560ccd317204c00d01ff8b",
          "sha256": "d51af16bf1dc2e6b23e4302d6f7ad1e613ecb137ee3752c63ff1ab802e6f6d96"
        },
        "downloads": -1,
        "filename": "statsflow-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "efd3ad85da560ccd317204c00d01ff8b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 3549,
        "upload_time": "2023-03-17T11:15:16",
        "upload_time_iso_8601": "2023-03-17T11:15:16.071463Z",
        "url": "https://files.pythonhosted.org/packages/10/9c/9865be5a0545878edba23b4556b357c7125e732e87e450ee4c5c5b105c15/statsflow-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9eb01a7915414de708c863ab209b04e5cb3c3a77131861756744ef3912dced89",
        "md5": "a1b8373f9170920e0463418f2938b19e",
        "sha256": "ce2d09b6d0e007799cb7c9f2985559728e63c81fcc7550a04c6b074f0cfb0a5e"
      },
      "downloads": -1,
      "filename": "statsflow-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a1b8373f9170920e0463418f2938b19e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 4920,
      "upload_time": "2023-03-17T11:15:13",
      "upload_time_iso_8601": "2023-03-17T11:15:13.622873Z",
      "url": "https://files.pythonhosted.org/packages/9e/b0/1a7915414de708c863ab209b04e5cb3c3a77131861756744ef3912dced89/statsflow-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "109c9865be5a0545878edba23b4556b357c7125e732e87e450ee4c5c5b105c15",
        "md5": "efd3ad85da560ccd317204c00d01ff8b",
        "sha256": "d51af16bf1dc2e6b23e4302d6f7ad1e613ecb137ee3752c63ff1ab802e6f6d96"
      },
      "downloads": -1,
      "filename": "statsflow-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "efd3ad85da560ccd317204c00d01ff8b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 3549,
      "upload_time": "2023-03-17T11:15:16",
      "upload_time_iso_8601": "2023-03-17T11:15:16.071463Z",
      "url": "https://files.pythonhosted.org/packages/10/9c/9865be5a0545878edba23b4556b357c7125e732e87e450ee4c5c5b105c15/statsflow-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}