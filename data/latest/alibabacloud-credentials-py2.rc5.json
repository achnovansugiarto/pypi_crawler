{
  "info": {
    "author": "Alibaba Cloud",
    "author_email": "alibaba-cloud-sdk-dev-team@list.alibaba-inc.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Topic :: Software Development"
    ],
    "description": "English | [简体中文](README-CN.md)\n![](https://aliyunsdk-pages.alicdn.com/icons/AlibabaCloud.svg)\n\n# Alibaba Cloud Credentials for Python2\n\n## Installation\n- **Install with pip**\n\nPython SDK uses a common package management tool named `pip`. If pip is not installed, see the [pip user guide](https://pip.pypa.io/en/stable/installing/ \"pip User Guide\") to install pip.\n\n```bash\n# Install the alibabacloud_credentials_py2\npip install alibabacloud_credentials_py2\n```\n\n## Usage\n\nBefore you begin, you need to sign up for an Alibaba Cloud account and retrieve your [Credentials](https://usercenter.console.aliyun.com/#/manage/ak).\n\n### Credential Type\n\n#### access_key\n\nSetup access_key credential through [User Information Management][ak], it have full authority over the account, please keep it safe. Sometimes for security reasons, you cannot hand over a primary account AccessKey with full access to the developer of a project. You may create a sub-account [RAM Sub-account][ram] , grant its [authorization][permissions]，and use the AccessKey of RAM Sub-account.\n\n```python\nfrom alibabacloud_credentials.client import Client\nfrom alibabacloud_credentials.models import Config\n\nconfig = Config(\n    type='access_key',                    # credential type\n    access_key_id='accessKeyId',          # AccessKeyId\n    access_key_secret='accessKeySecret',  # AccessKeySecret\n)\ncred = Client(config)\n\naccess_key_id = cred.get_access_key_id()\naccess_key_secret = cred.get_access_key_secret()\ncred_type = cred.get_type()\n```\n\n\n\n#### sts\n\nCreate a temporary security credential by applying Temporary Security Credentials (TSC) through the Security Token Service (STS).\n\n```python\nfrom alibabacloud_credentials.client import Client\nfrom alibabacloud_credentials.models import Config\n\nconfig = Config(\n    type='sts',                           # credential type\n    access_key_id='accessKeyId',          # AccessKeyId\n    access_key_secret='accessKeySecret',  # AccessKeySecret\n    security_token='securityToken'        # STS Token\n)\ncred = Client(config)\n\naccess_key_id = cred.get_access_key_id()\naccess_key_secret = cred.get_access_key_secret()\nsecurity_token = cred.get_security_token()\ncred_type = cred.get_type()\n```\n\n\n\n#### ram_role_arn\n\nBy specifying [RAM Role][RAM Role], the credential will be able to automatically request maintenance of STS Token. If you want to limit the permissions([How to make a policy][policy]) of STS Token, you can assign value for `Policy`.\n\n```python\nfrom alibabacloud_credentials.client import Client\nfrom alibabacloud_credentials.models import Config\n\nconfig = Config(\n    type='ram_role_arn',                  # credential type\n    access_key_id='accessKeyId',          # AccessKeyId\n    access_key_secret='accessKeySecret',  # AccessKeySecret\n    security_token='securityToken',       # STS Token\n    role_arn='roleArn',                   # Format: acs:ram::USER_ID:role/ROLE_NAME\n    role_session_name='roleSessionName',  # Role Session Name\n    policy='policy',                      # Not required, limit the permissions of STS Token\n    role_session_expiration=3600          # Not required, limit the Valid time of STS Token\n)\ncred = Client(config)\n\naccess_key_id = cred.get_access_key_id()\naccess_key_secret = cred.get_access_key_secret()\nsecurity_token = cred.get_security_token()\ncred_type = cred.get_type()\n```\n\n\n\n#### OIDC Role ARN\n\nBy specifying [OIDC Role][OIDC Role], the credential will be able to automatically request maintenance of STS Token. If you want to limit the permissions([How to make a policy][policy]) of STS Token, you can assign value for `Policy`.\n\n```python\nfrom alibabacloud_credentials.client import Client\nfrom alibabacloud_credentials.models import Config\n\nconfig = Config(\n    type='oidc_role_arn',                  # credential type\n    access_key_id='accessKeyId',          # AccessKeyId\n    access_key_secret='accessKeySecret',  # AccessKeySecret\n    security_token='securityToken',       # STS Token\n    role_arn='roleArn',                   # Format: acs:ram::USER_ID:role/ROLE_NAME\n    oidc_provider_arn='oidcProviderArn',  # Format: acs:ram::USER_Id:oidc-provider/OIDC Providers\n    oidc_token_file_path='/Users/xxx/xxx',# oidc_token_file_path can be replaced by setting environment variable: ALIBABA_CLOUD_OIDC_TOKEN_FILE\n    role_session_name='roleSessionName',  # Role Session Name\n    policy='policy',                      # Not required, limit the permissions of STS Token\n    role_session_expiration=3600          # Not required, limit the Valid time of STS Token\n)\ncred = Client(config)\n\naccess_key_id = cred.get_access_key_id()\naccess_key_secret = cred.get_access_key_secret()\nsecurity_token = cred.get_security_token()\ncred_type = cred.get_type()\n```\n\n\n\n#### ecs_ram_role\n\nBy specifying the role name, the credential will be able to automatically request maintenance of STS Token.\n\n```python\nfrom alibabacloud_credentials.client import Client\nfrom alibabacloud_credentials.models import Config\n\nconfig = Config(\n    type='ecs_ram_role',      # credential type\n    role_name='roleName'      # `roleName` is optional. It will be retrieved automatically if not set. It is highly recommended to set it up to reduce requests.\n)\ncred = Client(config)\n\naccess_key_id = cred.get_access_key_id()\naccess_key_secret = cred.get_access_key_secret()\nsecurity_token = cred.get_security_token()\ncred_type = cred.get_type()\n```\n\n\n\n#### rsa_key_pair\n\nBy specifying the public key ID and the private key file, the credential will be able to automatically request maintenance of the AccessKey before sending the request. Only Japan station is supported.\n\n```python\nfrom alibabacloud_credentials.client import Client\nfrom alibabacloud_credentials.models import Config\n\nconfig = Config(\n    type='rsa_key_pair',                  # credential type\n    private_key_file='privateKeyFile',    # The file path to store the PrivateKey\n    public_key_id='publicKeyId'           # PublicKeyId of your account\n)\ncred = Client(config)\n\naccess_key_id = cred.get_access_key_id()\naccess_key_secret = cred.get_access_key_secret()\nsecurity_token = cred.get_security_token()\ncred_type = cred.get_type()\n```\n\n\n\n#### bearer\n\nIf credential is required by the Cloud Call Centre (CCC), please apply for Bearer Token maintenance by yourself.\n\n```python\nfrom alibabacloud_credentials.client import Client\nfrom alibabacloud_credentials.models import Config\n\nconfig = Config(\n    type='bearer',                        # credential type\n    bearer_token='bearerToken',           # BearerToken\n)\ncred = Client(config)\n\naccess_key_id = cred.get_access_key_id()\naccess_key_secret = cred.get_access_key_secret()\nsecurity_token = cred.get_security_token()\ncred_type = cred.get_type()\n```\n\n### Use the default credential provider chain\n\n```python\nfrom alibabacloud_credentials.client import Client as CredClient\nfrom alibabacloud_ocr20191230.client import Client as OcrClient\nfrom alibabacloud_ocr20191230.models import GetAsyncJobResultRequest\nfrom alibabacloud_tea_rpc.models import Config\nfrom alibabacloud_tea_util.models import RuntimeOptions\n\ncred = CredClient()\nconfig = Config(credential=cred)\n\nclient = OcrClient(config)\n\nrequest = GetAsyncJobResultRequest(\n    job_id='<job_id>'\n)\n\nruntime_options = RuntimeOptions()\nresponse = client.get_async_job_result(request, runtime_options)\n```\n\nThe default credential provider chain looks for available credentials, with following order:\n\n1.Environment Credentials\n\nLook for environment credentials in environment variable. If the `ALIBABA_CLOUD_ACCESS_KEY_ID` and `ALIBABA_CLOUD_ACCESS_KEY_SECRET` environment variables are defined and are not empty, the program will use them to create default credentials.\n\n2.Credentials File\n\nIf there is `~/.alibabacloud/credentials default file (Windows shows C:\\Users\\USER_NAME\\.alibabacloud\\credentials)`, the program automatically creates credentials with the specified type and name. The default file is not necessarily exist, but a parse error will throw an exception. The name of configuration item is lowercase.This configuration file can be shared between different projects and between different tools. Because it is outside of the project and will not be accidentally committed to the version control. The path to the default file can be modified by defining the `ALIBABA_CLOUD_CREDENTIALS_FILE` environment variable. If not configured, use the default configuration `default`. You can also set the environment variables `ALIBABA_CLOUD_PROFILE` to use the configuration.\n\n```ini\n[default]                          # default setting\nenable = true                      # Enable，Enabled by default if this option is not present\ntype = access_key                  # Certification type: access_key\naccess_key_id = foo                # Key\naccess_key_secret = bar            # Secret\n\n[client1]                          # configuration that is named as `client1`\ntype = ecs_ram_role                # Certification type: ecs_ram_role\nrole_name = EcsRamRoleTest         # Role Name\n\n[client2]                          # configuration that is named as `client2`\nenable = false                     # Disable\ntype = ram_role_arn                # Certification type: ram_role_arn\nregion_id = cn-test\npolicy = test                      # optional Specify permissions\naccess_key_id = foo\naccess_key_secret = bar\nrole_arn = role_arn\nrole_session_name = session_name   # optional\n\n[client3]                          # configuration that is named as `client3`\ntype = rsa_key_pair                # Certification type: rsa_key_pair\npublic_key_id = publicKeyId        # Public Key ID\nprivate_key_file = /your/pk.pem    # Private Key file\n\n[client3]                          # configuration that is named as `client3`\ntype = rsa_key_pair                # Certification type: rsa_key_pair\npublic_key_id = publicKeyId        # Public Key ID\nprivate_key_file = /your/pk.pem    # Private Key file\n\n[client4]                          # configuration that is named as `client4`\nenable = false                     # Disable\ntype = oidc_role_arn               # Certification type: oidc_role_arn\nregion_id = cn-test                 \npolicy = test                      # optional Specify permissions\naccess_key_id = foo                # optional\naccess_key_secret = bar            # optional\nrole_arn = role_arn\noidc_provider_arn = oidc_provider_arn\noidc_token_file_path = /xxx/xxx    # can be replaced by setting environment variable: ALIBABA_CLOUD_OIDC_TOKEN_FILE              \nrole_session_name = session_name   # optional\n```\n\n3.Instance RAM Role\n\nIf the environment variable `ALIBABA_CLOUD_ECS_METADATA` is defined and not empty, the program will take the value of the environment variable as the role name and request <http://100.100.100.200/latest/meta-data/ram/security-credentials/> to get the temporary Security credentials.\n\n\n## Issues\n\n[Opening an Issue](https://github.com/aliyun/credentials-python2/issues/new), Issues not conforming to the guidelines may be closed immediately.\n\n## Changelog\nDetailed changes for each release are documented in the [release notes](./ChangeLog.md).\n\n## References\n* [Latest Release](https://github.com/aliyun/credentials-python2)\n\n## License\n[Apache-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n\nCopyright (c) 2009-present, Alibaba Cloud All rights reserved.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aliyun/credentials-python2",
    "keywords": "alibabacloud,sdk,tea",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "alibabacloud-credentials-py2",
    "package_url": "https://pypi.org/project/alibabacloud-credentials-py2/",
    "platform": "any",
    "project_url": "https://pypi.org/project/alibabacloud-credentials-py2/",
    "project_urls": {
      "Homepage": "https://github.com/aliyun/credentials-python2"
    },
    "release_url": "https://pypi.org/project/alibabacloud-credentials-py2/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "The alibabacloud credentials module of alibabaCloud Python2 SDK.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16647874,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3182758cf4adc56a16ff6be7e0d7b9d6c2d90f5ede0dbba72a8513b70758385c",
          "md5": "3b3c94545c7bfeaac67ca59be4072510",
          "sha256": "468a6ee7c64e1539861500a9d349db9ff629949fa570eb9f9497826d1095c133"
        },
        "downloads": -1,
        "filename": "alibabacloud_credentials_py2-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3b3c94545c7bfeaac67ca59be4072510",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13476,
        "upload_time": "2020-12-25T06:45:17",
        "upload_time_iso_8601": "2020-12-25T06:45:17.454976Z",
        "url": "https://files.pythonhosted.org/packages/31/82/758cf4adc56a16ff6be7e0d7b9d6c2d90f5ede0dbba72a8513b70758385c/alibabacloud_credentials_py2-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c7b551525841b37cc0ff43268ed57fc368583b9f76389e4ca99f3d2b718a222",
          "md5": "96faff4b2b0a6f855cff7411c8121679",
          "sha256": "75b5982709a5bf62f29211418fcf2cb47a8bacb5c18c379d287836b559a6ad59"
        },
        "downloads": -1,
        "filename": "alibabacloud_credentials_py2-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "96faff4b2b0a6f855cff7411c8121679",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13495,
        "upload_time": "2021-02-03T08:12:20",
        "upload_time_iso_8601": "2021-02-03T08:12:20.531430Z",
        "url": "https://files.pythonhosted.org/packages/8c/7b/551525841b37cc0ff43268ed57fc368583b9f76389e4ca99f3d2b718a222/alibabacloud_credentials_py2-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f239ba55f3ec33434576d4310be0a6f491914fcbcfda47d21940bef3a6ef297d",
          "md5": "ac89bb169d73520595eb4a341a1f2c98",
          "sha256": "11a4cf43b1c3b29982209ca8fc6dfb56c1f331013ee61b6a8784eb698fe3b5da"
        },
        "downloads": -1,
        "filename": "alibabacloud_credentials_py2-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ac89bb169d73520595eb4a341a1f2c98",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13584,
        "upload_time": "2021-03-01T08:20:15",
        "upload_time_iso_8601": "2021-03-01T08:20:15.150990Z",
        "url": "https://files.pythonhosted.org/packages/f2/39/ba55f3ec33434576d4310be0a6f491914fcbcfda47d21940bef3a6ef297d/alibabacloud_credentials_py2-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be2cbb5c4dca7373e0e1d5fd4ae085f04b5dc1dfeacfa3e1555ea6e3262ae136",
          "md5": "4c536baf22c9824d8679664e484dfad3",
          "sha256": "a0a426db3532739072ec9f202debd5d372c2065d6dd8e27460c7ee4e0f9b8dc0"
        },
        "downloads": -1,
        "filename": "alibabacloud_credentials_py2-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4c536baf22c9824d8679664e484dfad3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14693,
        "upload_time": "2022-10-13T06:27:07",
        "upload_time_iso_8601": "2022-10-13T06:27:07.594759Z",
        "url": "https://files.pythonhosted.org/packages/be/2c/bb5c4dca7373e0e1d5fd4ae085f04b5dc1dfeacfa3e1555ea6e3262ae136/alibabacloud_credentials_py2-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78a4b3711c70d7177c2e2d5a49f7609d09c2ecb702d94bc50b90e4cfbbb6daa8",
          "md5": "4f5415bd921317b9f235eb775fe5b98e",
          "sha256": "8f2d7f5f01e7ae74f3c2a4817b6f8d55e7dabd44755a9a6b8e0c980926cf5259"
        },
        "downloads": -1,
        "filename": "alibabacloud_credentials_py2-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4f5415bd921317b9f235eb775fe5b98e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14840,
        "upload_time": "2023-02-01T08:19:10",
        "upload_time_iso_8601": "2023-02-01T08:19:10.320126Z",
        "url": "https://files.pythonhosted.org/packages/78/a4/b3711c70d7177c2e2d5a49f7609d09c2ecb702d94bc50b90e4cfbbb6daa8/alibabacloud_credentials_py2-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "78a4b3711c70d7177c2e2d5a49f7609d09c2ecb702d94bc50b90e4cfbbb6daa8",
        "md5": "4f5415bd921317b9f235eb775fe5b98e",
        "sha256": "8f2d7f5f01e7ae74f3c2a4817b6f8d55e7dabd44755a9a6b8e0c980926cf5259"
      },
      "downloads": -1,
      "filename": "alibabacloud_credentials_py2-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4f5415bd921317b9f235eb775fe5b98e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14840,
      "upload_time": "2023-02-01T08:19:10",
      "upload_time_iso_8601": "2023-02-01T08:19:10.320126Z",
      "url": "https://files.pythonhosted.org/packages/78/a4/b3711c70d7177c2e2d5a49f7609d09c2ecb702d94bc50b90e4cfbbb6daa8/alibabacloud_credentials_py2-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}