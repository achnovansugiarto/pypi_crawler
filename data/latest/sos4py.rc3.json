{
  "info": {
    "author": "Alfredo Chavarria Vargas",
    "author_email": "alchav06@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "======\nsos4py\n======\n\n\n.. image:: https://img.shields.io/pypi/v/sos4py.svg\n        :target: https://pypi.python.org/pypi/sos4py\n\n\nsos4py is a convenience layer for Python environment to access services, extract data, and allow querying from SOS instances.\n\n\n* Free software: Apache Software License 2.0\n\n\nFeatures\n--------\n*   Allows connection to an SOS service using OWSLib.\n\n*   Explore and summarize service capabilities, sensor metadata, offerings, observed properties, available phenomena and features of interest.\n\n*   Query requests to an SOS service for Get Data Availability.\n\n*   Query requests to an SOS service for getting observation data.\n\n*   Query requests to an SOS service for getting observation site data.\n\nUsage\n-----\n\n**EXAMPLES OF THE PACKAGE CAN BE SEEN:**: https://github.com/52North/sos4py/tree/master/examples\n\n**Connecting to an SOS service:**\n *Description*\n  Base class of a connection to a Sensor Observation Service. The result is class object SensorObservationService_2_0_0(object) of the OWSLib (<https://github.com/geopython/OWSLib/blob/master/owslib/swe/observation/sos200.py>)\n *Usage*\n     ``def connection_sos(url,\n     xml=None,\n     username=None,\n     password=None,):``\n\n *Parameters*\n\n    xml : str\n      Xml file path.\n\n    username : str\n      Username to access the SOS service.\n\n    password : str\n      User password to access the SOS service.\n\n *Example*\n\n    ``from sos4py.main import connection_sos``\n\n    ``service = sos4py('http://sensorweb.demo.52north.org/52n-sos-webapp/sos/kvp')``\n\n**Get capabilities functions (summaries):**\n *Description*\n  Construction class sos_2_0_0. Implements the the return of the function *connection_sos()* as input. The methods of the class can be used for metadata retrieval of sensors, and observation data queries.\n\n *Usage*\n     ``class sos_2_0_0(self, url, version, xml=None, username=None, password=None):``\n\n *Methods*\n  ``sosServiceIdentification()`` The identification section of a SOS v2.0 capabilities document. This function queries the identification metadata available and returns the data as a pandas Series dataframe. \n\n  ``sosProvider()`` The provider section of an SOS v2.0 capabilities document. This function queries the provider metadata available and returns the data as a pandas Series dataframe.     \n\n  ``sosOperationsMetadata()`` Elements in an OperationsMetadata object.This function queries the operations available of a SOS v2.0 capabilities document and returns the data as a pandas Series dataframe.  \n\n  ``sosOfferings()`` Explore offerings section of an SOS v2.0 capabilities document. This function queries the offerings and returns the data as a pandas Series dataframe. \n\n  ``sosPhenomena()`` Queries a SOS v2.0 for all its phenomena. Returns a list of the phenomena ids.\n\n  ``sosFeaturesOfInterest()`` Queries a SOS v2.0 for all its features of interest. Returns a list of the feature of interest ids.\n\n *Examples*\n\n    ``from sos4py.main import connection_sos``\n\n    ``service = connection_sos('http://sensorweb.demo.52north.org/52n-sos-webapp/sos/kvp')``\n\n    ``service.sosServiceIdentification()``\n\n    ``service.sosProvider()``\n\n    ``service.sosOperationsMetadata()``\n\n    ``service.sosOfferings()``\n\n    ``service.phenomena()``\n\n\n**Get Data Availability function:**        \n *Description*\n  Base class of a connection to a Sensor Observation Service. The result is class object SensorObservationService_2_0_0(object) of the OWSLib (<https://github.com/geopython/OWSLib/blob/master/owslib/swe/observation/sos200.py>)\n\n *Usage*\n\n ``def get_data_availability(object, procedures=None, observedProperties=None, featuresOfInterest=None, offerings=None, method=None, **kwargs)``\n\n *Parameters*\n\n    object : str\n      Xml file path.\n\n    procedures : list of str\n      Query the data based on the availability of the indicated procedures.\n\n    observedProperties: list of str\n      Query the data based on the availability of the indicated observed properties.\n\n    featuresOfInterest : list of str\n      Query the data based on the availability of the indicated features of interest.\n\n    offerings : list of str\n      Query the data based on the availability of the indicated offerings.\n\n    method : str\n      'Get' or 'Post' request parameter.\n\n\n *Examples*\n\n      ``service.get_data_availability()``\n\n\n      ``service.get_data_availability(procedures=['http://www.52north.org/test/procedure/6'], \n      featuresOfInterest=['http://www.52north.org/test/featureOfInterest/6'])``\n\n\n\n**Get sites function:**        \n *Description*\n  Method to retrieve sites from an SOS. The result is a GeoDataFrame.\n\n *Usage*\n\n ``def get_sites(self, include_phenomena=False)``\n\n *Parameters*\n\n    include_phenomena : boolean, optional\n      Whether or not flags for the existance of phenomenona (e.g. water temperature) should be included (default is False)\n\n\n *Examples*\n\n      ``service.get_sites()``\n\n      ``service.get_sites(include_phenomena = True)``\n\n\n**Get data function:**        \n *Description*\n  Method to get observation data from an SOS. The result is a DataFrame.\n\n *Usage*\n\n ``def get_data(self, sites=None, phenomena=None, procedures=None, begin=None, end=None)``\n\n *Parameters*\n\n    sites : non-empty list of str, optional\n       observation sites/sensor locations\n\n    phenomena : non-empty list of str, optional\n       phenomena, e.g. water temperature\n\n    procedures : non-empty list of str, optional\n       measurement procedures of the observation, e.g. measurements in 2 m water depth\n\n    begin : str, optional if end is not provided\n       begin of time period in the form 'YYYY-MM-DDThh:mm:ssZ', e.g. '2020-01-01T10:00:00Z'\n\n    end : str, optional if begin is not provided\n       end of time period in the form 'YYYY-MM-DDThh:mm:ssZ', e.g. '2020-01-02T10:00:00Z'  \n\n  It is recommended to provide at least one of sites, phenomena or procedures. Otherwise the request may take very long.\n\n *Examples*\n\n      ``service.get_data()``\n\n      ``service.get_data(sites=['Sensor location 1'],phenomena=['water temperature','salinity'])``\n\n\n\nCredits\n-------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n=======\nHistory\n=======\n\n0.1.0 (2020-05-09)\n------------------\n\n* First release on PyPI.\n\n\n0.2.0 (2020-08-20)\n------------------\n\n* Add method get_feature_of_interest()\n* Add example for accessing and plotting sensor data\n\n0.3.0 (2020-08-30)\n------------------\n\n* Add method get_data()\n* Add method get_sites()\n* Add method sosFeaturesOfInterest()\n* Update example notebook for accessing and plotting sensor data\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/52North/sos4py/archive/v0.3.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/52North/sos4py",
    "keywords": "sos4py",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sos4py",
    "package_url": "https://pypi.org/project/sos4py/",
    "platform": "",
    "project_url": "https://pypi.org/project/sos4py/",
    "project_urls": {
      "Download": "https://github.com/52North/sos4py/archive/v0.3.0.tar.gz",
      "Homepage": "https://github.com/52North/sos4py"
    },
    "release_url": "https://pypi.org/project/sos4py/0.3.0/",
    "requires_dist": [
      "OWSLib",
      "pandas",
      "geopandas",
      "shapely",
      "pyproj"
    ],
    "requires_python": ">=3.5",
    "summary": "sos4py is a convenience layer for Python environment to access services from SOS instances.",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8153550,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "722090f85e7f0a08ff00d951d023c3872adc132434c4269529cd0d50ffcb9eac",
          "md5": "148670a3ed9a5f1d223b1a4b5e687557",
          "sha256": "6cf4a59198b37a34095243226a4ec1bca4977558d1b083e2784a6e20bc65fb49"
        },
        "downloads": -1,
        "filename": "sos4py-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "148670a3ed9a5f1d223b1a4b5e687557",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 14620,
        "upload_time": "2020-06-02T19:11:19",
        "upload_time_iso_8601": "2020-06-02T19:11:19.653961Z",
        "url": "https://files.pythonhosted.org/packages/72/20/90f85e7f0a08ff00d951d023c3872adc132434c4269529cd0d50ffcb9eac/sos4py-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "644f63054a901c62ddb3d3eb8cfcc15d60ed2ba184e599f9d52781c21f89685b",
          "md5": "8d56f813f3a3ce472d3a11c59d7b8944",
          "sha256": "a11d710df8a4fe4a2b427883f1d902d6882fad19b6a22b5bcaf608687036c9e5"
        },
        "downloads": -1,
        "filename": "sos4py-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d56f813f3a3ce472d3a11c59d7b8944",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 12377,
        "upload_time": "2020-08-20T12:58:58",
        "upload_time_iso_8601": "2020-08-20T12:58:58.312921Z",
        "url": "https://files.pythonhosted.org/packages/64/4f/63054a901c62ddb3d3eb8cfcc15d60ed2ba184e599f9d52781c21f89685b/sos4py-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a864635b5f178abb9a843140db4c34efec81a83ae247464d93b32cf1196d522",
          "md5": "555995f7b5922c18052597fd6b3f2bf7",
          "sha256": "97ffdc10c500fe4fc244c2b629c0c7eefa57581f813d0397109b2d037e93ca4e"
        },
        "downloads": -1,
        "filename": "sos4py-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "555995f7b5922c18052597fd6b3f2bf7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 18178,
        "upload_time": "2020-08-20T12:58:59",
        "upload_time_iso_8601": "2020-08-20T12:58:59.809689Z",
        "url": "https://files.pythonhosted.org/packages/8a/86/4635b5f178abb9a843140db4c34efec81a83ae247464d93b32cf1196d522/sos4py-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed9a5a48702c30bfe25c4814be5cdf416d6f3bec17f41aa5af1905ceb05affa0",
          "md5": "f802e6b5570438bfd23c43186b02ecbb",
          "sha256": "738fa6b9c0c045320705e6bdbb44499274ec7e990aece9f4287ae7a94ed212e8"
        },
        "downloads": -1,
        "filename": "sos4py-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f802e6b5570438bfd23c43186b02ecbb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 14511,
        "upload_time": "2020-08-30T11:00:36",
        "upload_time_iso_8601": "2020-08-30T11:00:36.534531Z",
        "url": "https://files.pythonhosted.org/packages/ed/9a/5a48702c30bfe25c4814be5cdf416d6f3bec17f41aa5af1905ceb05affa0/sos4py-0.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6d3fbcb9227e5f5045f992eb101b01b944e29566ff2afd23f8aff905abd4451",
          "md5": "da44b7dfd5a7e2c690415ff22657f380",
          "sha256": "7214c2f955934f3cdfb7727d316c7267df7ebb16d1522639665340742afdde5f"
        },
        "downloads": -1,
        "filename": "sos4py-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "da44b7dfd5a7e2c690415ff22657f380",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 20351,
        "upload_time": "2020-08-30T11:00:38",
        "upload_time_iso_8601": "2020-08-30T11:00:38.184239Z",
        "url": "https://files.pythonhosted.org/packages/e6/d3/fbcb9227e5f5045f992eb101b01b944e29566ff2afd23f8aff905abd4451/sos4py-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ed9a5a48702c30bfe25c4814be5cdf416d6f3bec17f41aa5af1905ceb05affa0",
        "md5": "f802e6b5570438bfd23c43186b02ecbb",
        "sha256": "738fa6b9c0c045320705e6bdbb44499274ec7e990aece9f4287ae7a94ed212e8"
      },
      "downloads": -1,
      "filename": "sos4py-0.3.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f802e6b5570438bfd23c43186b02ecbb",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.5",
      "size": 14511,
      "upload_time": "2020-08-30T11:00:36",
      "upload_time_iso_8601": "2020-08-30T11:00:36.534531Z",
      "url": "https://files.pythonhosted.org/packages/ed/9a/5a48702c30bfe25c4814be5cdf416d6f3bec17f41aa5af1905ceb05affa0/sos4py-0.3.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e6d3fbcb9227e5f5045f992eb101b01b944e29566ff2afd23f8aff905abd4451",
        "md5": "da44b7dfd5a7e2c690415ff22657f380",
        "sha256": "7214c2f955934f3cdfb7727d316c7267df7ebb16d1522639665340742afdde5f"
      },
      "downloads": -1,
      "filename": "sos4py-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "da44b7dfd5a7e2c690415ff22657f380",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 20351,
      "upload_time": "2020-08-30T11:00:38",
      "upload_time_iso_8601": "2020-08-30T11:00:38.184239Z",
      "url": "https://files.pythonhosted.org/packages/e6/d3/fbcb9227e5f5045f992eb101b01b944e29566ff2afd23f8aff905abd4451/sos4py-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}