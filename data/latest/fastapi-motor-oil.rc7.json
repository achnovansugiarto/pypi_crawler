{
  "info": {
    "author": "Peter Volf",
    "author_email": "do.volfp@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11"
    ],
    "description": "# FastAPI-motor-oil\n\n`FastAPI-motor-oil` is a collection of async utilities for working with MongoDB and conveniently creating performant APIs with async web frameworks such a [FastAPI](https://fastapi.tiangolo.com/).\n\nKey features:\n\n- Database **model** design with `Pydantic`.\n- Relationship support and validation using async **validators and delete rules** with a declarative, decorator-based syntax.\n- Typed **utilities** for convenient model and API creation.\n- A complete and customizable **async service layer** with **transaction support** that integrates all the above to keep your API and business logic clean, flexible, and easy to understand.\n\nBy providing a convenient, declarative middle layer between MongoDB and your API, `FastAPI-motor-oil` is halfway between an object document mapper (based on `Pydantic`) and a database driver (by wrapping the async `motor` driver).\n\nSee the [full documentation here](https://volfpeter.github.io/fastapi-motor-oil/).\n\n## Installation\n\nThe library is available on PyPI and can be installed with:\n\n```console\n$ pip install fastapi-motor-oil\n```\n\n## Example\n\nPrerequisites:\n\n- MongoDB (e.g. the Community Edition) installed and running locally;\n- `fastapi` with all its dependencies (`pip install fastapi[all]`);\n- This library (`pip install fastapi-motor-oil`).\n\nIn this example we will create:\n\n- a simple `TreeNode` document model with a `name` and an optional reference to a `parent` node and some delete rules;\n- the services that are necessary to create, read, update, and delete documents;\n- a `fastapi` `APIRouter` factory that can be included in `fastapi` applications;\n- and the `fastapi` application itself.\n\nThe project layout under your root directory will be as follows:\n\n- `/tree_app`\n  - `__init__.py`\n  - `api.py`\n  - `main.py`\n  - `model.py`\n  - `service.py`\n\nModel definitions (in `model.py`):\n\n```python\nfrom fastapi_motor_oil import DocumentModel, StrObjectId, UTCDatetime\nfrom pydantic import BaseModel\n\nclass TreeNode(DocumentModel):\n    \"\"\"\n    Tree node document model.\n    \"\"\"\n\n    name: str\n    parent: StrObjectId | None\n    created_at: UTCDatetime\n\nclass TreeNodeCreate(BaseModel):\n    \"\"\"\n    Tree node creation model.\n    \"\"\"\n\n    name: str\n    parent: StrObjectId | None\n\nclass TreeNodeUpdate(BaseModel):\n    \"\"\"\n    Tree node update model.\n    \"\"\"\n\n    name: str | None\n    parent: StrObjectId | None\n\n```\n\nService implementation (in `service.py`):\n\n```python\nfrom typing import Any\nfrom collections.abc import Sequence\nfrom datetime import datetime, timezone\n\nfrom bson import ObjectId\nfrom fastapi_motor_oil import (\n    CollectionOptions,\n    MongoQuery,\n    MongoService,\n    delete_rule,\n    validator,\n)\nfrom motor.core import AgnosticClientSession\n\nfrom .model import TreeNodeCreate, TreeNodeUpdate\n\nclass TreeNodeService(MongoService[TreeNodeCreate, TreeNodeUpdate]):\n    \"\"\"\n    Tree node database services.\n    \"\"\"\n\n    __slots__ = ()\n\n    collection_name: str = \"tree_nodes\"\n\n    collection_options: CollectionOptions | None = None\n\n    @delete_rule(\"pre\")  # Delete rule that remove the subtrees of deleted nodes.\n    async def dr_delete_subtree(\n        self, session: AgnosticClientSession, ids: Sequence[ObjectId]\n    ) -> None:\n        child_ids = await self.find_ids({\"parent\": {\"$in\": ids}}, session=session)\n        if len(child_ids) > 0:\n            # Recursion\n            await self.delete_many(\n                {\"_id\": {\"$in\": child_ids}}, options={\"session\": session}\n            )\n\n    @delete_rule(\"deny\")  # Delete rule that prevents the removal of root nodes.\n    async def dr_deny_if_root(\n        self, session: AgnosticClientSession, ids: Sequence[ObjectId]\n    ) -> None:\n        root_cnt = await self.count_documents(\n            {\"$and\": [{\"_id\": {\"$in\": ids}}, {\"parent\": None}]},\n            options={\"session\": session},\n        )\n        if root_cnt > 0:\n            raise ValueError(\"Can not delete root nodes.\")\n\n    @validator(\"insert-update\")\n    async def v_parent_valid(\n        self, query: MongoQuery | None, data: TreeNodeCreate | TreeNodeUpdate\n    ) -> None:\n        if data.parent is None:  # No parent node is always fine\n            return\n\n        if not await self.exists(data.parent):  # Parent must exist.\n            raise ValueError(\"Parent does not exist.\")\n\n        if isinstance(data, TreeNodeCreate):  # No more checks during creation.\n            return\n\n        matched_ids = (\n            (await self.find_ids(query)) if isinstance(data, TreeNodeUpdate) else []\n        )\n        if data.parent in matched_ids:  # Self reference is forbidden.\n            raise ValueError(\"Self-reference.\")\n\n    async def _convert_for_insert(self, data: TreeNodeCreate) -> dict[str, Any]:\n        return {\n            **(await super()._convert_for_insert(data)),\n            \"created_at\": datetime.now(timezone.utc),\n        }\n```\n\nRouting implementation (in `api.py`):\n\n```python\nfrom typing import Any\n\nfrom fastapi import APIRouter, Depends, HTTPException, status\nfrom fastapi_motor_oil import (\n    AgnosticDatabase,\n    DatabaseProvider,\n    DeleteError,\n    DeleteResultModel,\n    StrObjectId,\n)\n\nfrom .model import TreeNode, TreeNodeCreate, TreeNodeUpdate\nfrom .service import TreeNodeService\n\ndef make_api(\n    *,\n    get_database: DatabaseProvider,\n    prefix: str = \"/tree-node\",\n) -> APIRouter:\n    \"\"\"\n    Tree node `APIRouter` factory.\n\n    Arguments:\n        get_database: FastAPI dependency that returns the `AgnosticDatabase`\n                      database instance for the API.\n        prefix: The prefix for the created `APIRouter`.\n\n    Returns:\n        The created `APIRouter` instance.\n    \"\"\"\n    api = APIRouter(prefix=prefix)\n\n    @api.get(\"/\", response_model=list[TreeNode])\n    async def get_all(\n        database: AgnosticDatabase = Depends(get_database),\n    ) -> list[dict[str, Any]]:\n        svc = TreeNodeService(database)\n        return [d async for d in svc.find()]\n\n    @api.post(\"/\", response_model=TreeNode)\n    async def create(\n        data: TreeNodeCreate,\n        database: AgnosticDatabase = Depends(get_database),\n    ) -> dict[str, Any]:\n        svc = TreeNodeService(database)\n\n        try:\n            result = await svc.insert_one(data)\n        except Exception:\n            raise HTTPException(\n                status_code=status.HTTP_400_BAD_REQUEST, detail=\"Creation failed.\"\n            )\n\n        if (created := await svc.get_by_id(result.inserted_id)) is not None:\n            return created\n\n        raise HTTPException(status.HTTP_409_CONFLICT)\n\n    @api.get(\"/{id}\", response_model=TreeNode)\n    async def get_by_id(\n        id: StrObjectId,\n        database: AgnosticDatabase = Depends(get_database),\n    ) -> dict[str, Any]:\n        svc = TreeNodeService(database)\n        if (result := await svc.get_by_id(id)) is not None:\n            return result\n\n        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail=str(id))\n\n    @api.put(\"/{id}\", response_model=TreeNode)\n    async def update_by_id(\n        id: StrObjectId,\n        data: TreeNodeUpdate,\n        database: AgnosticDatabase = Depends(get_database),\n    ) -> dict[str, Any]:\n        svc = TreeNodeService(database)\n\n        try:\n            result = await svc.update_by_id(id, data)\n        except Exception:\n            raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=str(id))\n\n        if result.matched_count == 0:\n            raise HTTPException(status.HTTP_404_NOT_FOUND, detail=str(id))\n\n        if (updated := await svc.get_by_id(id)) is not None:\n            return updated\n\n        raise HTTPException(status.HTTP_404_NOT_FOUND, detail=str(id))\n\n    @api.delete(\"/{id}\", response_model=DeleteResultModel)\n    async def delete_by_id(\n        id: StrObjectId,\n        database: AgnosticDatabase = Depends(get_database),\n    ) -> DeleteResultModel:\n        svc = TreeNodeService(database)\n        try:\n            result = await svc.delete_by_id(id)\n        except DeleteError:\n            raise HTTPException(status.HTTP_400_BAD_REQUEST, detail=str(id))\n        if result.deleted_count == 0:\n            raise HTTPException(status.HTTP_404_NOT_FOUND, detail=str(id))\n\n        return DeleteResultModel(delete_count=result.deleted_count)\n\n    return api\n```\n\nApplication (in `main.py`):\n\n```python\nfrom functools import lru_cache\n\nfrom fastapi import FastAPI\nfrom motor.motor_asyncio import AsyncIOMotorClient, AsyncIOMotorDatabase\n\n@lru_cache(maxsize=1)\ndef get_database() -> AsyncIOMotorDatabase:\n    \"\"\"Database provider dependency for the created API.\"\"\"\n    mongo_connection_string = \"mongodb://127.0.0.1:27017\"\n    database_name = \"tree-db\"\n    client = AsyncIOMotorClient(mongo_connection_string)\n    return client[database_name]\n\ndef register_routes(app: FastAPI) -> None:\n    \"\"\"Registers all routes of the application.\"\"\"\n    from .api import make_api as make_tree_node_api\n\n    api_prefix = \"/api/v1\"\n\n    app.include_router(\n        make_tree_node_api(get_database=get_database),\n        prefix=api_prefix,\n    )\n\ndef create_app() -> FastAPI:\n    app = FastAPI()\n\n    register_routes(app)\n\n    return app\n```\n\nWith everything in place, you can serve the application by executing `uvicorn tree_app.main:create_app --reload --factory` in your root directory. Go to [http://127.0.0.1:8000/docs](http://127.0.0.1:8000/docs) in the browser to see and try the created REST API.\n\n## Requirements\n\nThe project depends on `motor` (the official asyncio MongoDB driver, which is built on top of `pymongo` and `bson`) and `pydantic`.\n\n`fastapi` is not an actual dependency, but the code was written with `fastapi` applications with a REST API in mind.\n\n## Development\n\nUse `black` for code formatting and `mypy` for static code analysis.\n\n## Contributing\n\nContributions are welcome.\n\n## License - MIT\n\nThe library is open-sourced under the conditions of the [MIT license](https://choosealicense.com/licenses/mit/).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fastapi-motor-oil",
    "package_url": "https://pypi.org/project/fastapi-motor-oil/",
    "platform": null,
    "project_url": "https://pypi.org/project/fastapi-motor-oil/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/fastapi-motor-oil/0.4.2/",
    "requires_dist": [
      "motor (>=3.1.1,<4.0.0)",
      "pydantic (>=1.10.5,<2.0.0)"
    ],
    "requires_python": ">=3.10,<4.0",
    "summary": "Collection of async utilities for working with MongoDB and conveniently creating performant APIs with async web frameworks such a FastAPI.",
    "version": "0.4.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17145336,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b803472edcef8467da5d4a408ec40f89fbd17086318fee99fa4e6651a6559751",
          "md5": "76a41bb847e7f23eca7b57494536722c",
          "sha256": "c11d4ee3592106cbf0f9984d18f759ec009d3526a723238b6555a13af6cb64f7"
        },
        "downloads": -1,
        "filename": "fastapi_motor_oil-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "76a41bb847e7f23eca7b57494536722c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 9231,
        "upload_time": "2023-02-06T10:36:18",
        "upload_time_iso_8601": "2023-02-06T10:36:18.822830Z",
        "url": "https://files.pythonhosted.org/packages/b8/03/472edcef8467da5d4a408ec40f89fbd17086318fee99fa4e6651a6559751/fastapi_motor_oil-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "233bd792d29af098b8544df4c2b6ca86ae68c70405a7cae4bf402465a88a90d3",
          "md5": "4f15111930d7218e01bbcd357facbc57",
          "sha256": "3807effc371e13f31c07ab879fe13d77dcfa12a557fa75400134b2224661defb"
        },
        "downloads": -1,
        "filename": "fastapi-motor-oil-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4f15111930d7218e01bbcd357facbc57",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 10184,
        "upload_time": "2023-02-06T10:36:21",
        "upload_time_iso_8601": "2023-02-06T10:36:21.664051Z",
        "url": "https://files.pythonhosted.org/packages/23/3b/d792d29af098b8544df4c2b6ca86ae68c70405a7cae4bf402465a88a90d3/fastapi-motor-oil-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca2296219ddd6f8efdabc809c3239368b600755c8a8566822fd40102fd62a15c",
          "md5": "764edc7ff144861985bc365ddffe3a76",
          "sha256": "f36dbd9d17deaeb7f3ab30e5bbbf1c1a674b73c07050a2c84b7a4d651a0724e1"
        },
        "downloads": -1,
        "filename": "fastapi_motor_oil-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "764edc7ff144861985bc365ddffe3a76",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 8951,
        "upload_time": "2023-02-23T21:00:53",
        "upload_time_iso_8601": "2023-02-23T21:00:53.123498Z",
        "url": "https://files.pythonhosted.org/packages/ca/22/96219ddd6f8efdabc809c3239368b600755c8a8566822fd40102fd62a15c/fastapi_motor_oil-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95c1fa1fd2e312035519ebaa0f9c27ac65ab50791569637e6f5e802ff7edc5e7",
          "md5": "565174ee8d9f9a059ee07e6411027d4e",
          "sha256": "04f9219dda866bd6a2d465b12c52cc6a25d6f60a6356e2dcea94c35c3770531a"
        },
        "downloads": -1,
        "filename": "fastapi_motor_oil-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "565174ee8d9f9a059ee07e6411027d4e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 10473,
        "upload_time": "2023-02-23T21:00:55",
        "upload_time_iso_8601": "2023-02-23T21:00:55.580147Z",
        "url": "https://files.pythonhosted.org/packages/95/c1/fa1fd2e312035519ebaa0f9c27ac65ab50791569637e6f5e802ff7edc5e7/fastapi_motor_oil-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2cddc9d918bc6172446b22a56c2f33e5e185951d0897cd809fa651d0bc6e780",
          "md5": "1a35cdd4fc9bb0ea51cffe215ff637bc",
          "sha256": "c1caf3fd29ea8bde4f3448d673ac4e90b36eaad13ce32f3b5d979acc497f89d7"
        },
        "downloads": -1,
        "filename": "fastapi_motor_oil-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1a35cdd4fc9bb0ea51cffe215ff637bc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 14546,
        "upload_time": "2023-02-28T20:46:51",
        "upload_time_iso_8601": "2023-02-28T20:46:51.400601Z",
        "url": "https://files.pythonhosted.org/packages/e2/cd/dc9d918bc6172446b22a56c2f33e5e185951d0897cd809fa651d0bc6e780/fastapi_motor_oil-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d5b195fd2569f7346a6884f2e890b29974f148955e574c497f1a6cc0aa953ed",
          "md5": "41cbe5ed1bc4255bb5e47a3d72cb671f",
          "sha256": "167b54dc7a2b36843081b4df83ebffa14b8cb926c71861fff542058e3f626e9f"
        },
        "downloads": -1,
        "filename": "fastapi_motor_oil-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "41cbe5ed1bc4255bb5e47a3d72cb671f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 15263,
        "upload_time": "2023-02-28T20:46:53",
        "upload_time_iso_8601": "2023-02-28T20:46:53.443678Z",
        "url": "https://files.pythonhosted.org/packages/9d/5b/195fd2569f7346a6884f2e890b29974f148955e574c497f1a6cc0aa953ed/fastapi_motor_oil-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abb233df189a0d41e51d95ac6125efa1f9bd3fe4a527589ea1641c4a8ee8c7d2",
          "md5": "505e17824511f8a472085feed486a3c0",
          "sha256": "597dba2870c19c5d757dbc3cd9b0b89aea3ee0430f5366ce35c9b86b0dd6f662"
        },
        "downloads": -1,
        "filename": "fastapi_motor_oil-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "505e17824511f8a472085feed486a3c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 14818,
        "upload_time": "2023-03-01T10:53:26",
        "upload_time_iso_8601": "2023-03-01T10:53:26.303756Z",
        "url": "https://files.pythonhosted.org/packages/ab/b2/33df189a0d41e51d95ac6125efa1f9bd3fe4a527589ea1641c4a8ee8c7d2/fastapi_motor_oil-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7d05300b0c85e670378e6db9fb57564dd9bec7e4bf929427d335218bfa4c8ed",
          "md5": "3870652164a587cdeaf6d72879b7e19f",
          "sha256": "cf45a35e615e8be824c9be119e46618fdb1a97b71fcdc2c947c6e45d8400b103"
        },
        "downloads": -1,
        "filename": "fastapi_motor_oil-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3870652164a587cdeaf6d72879b7e19f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 15775,
        "upload_time": "2023-03-01T10:53:28",
        "upload_time_iso_8601": "2023-03-01T10:53:28.808124Z",
        "url": "https://files.pythonhosted.org/packages/c7/d0/5300b0c85e670378e6db9fb57564dd9bec7e4bf929427d335218bfa4c8ed/fastapi_motor_oil-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13119b10e1fa613d585c3a14948763c16b091a120386ef1badda4fcc6c9c69f3",
          "md5": "6d512a1d8016e759d792aa4a4b3c2706",
          "sha256": "83e8b006afbccc05f63ef1fa87a28361a9148fdb9258b34878a2942080e89065"
        },
        "downloads": -1,
        "filename": "fastapi_motor_oil-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6d512a1d8016e759d792aa4a4b3c2706",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 15563,
        "upload_time": "2023-03-03T14:52:34",
        "upload_time_iso_8601": "2023-03-03T14:52:34.441875Z",
        "url": "https://files.pythonhosted.org/packages/13/11/9b10e1fa613d585c3a14948763c16b091a120386ef1badda4fcc6c9c69f3/fastapi_motor_oil-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73382d823eaea6cc5e18cd63af0b2287a650d6106beb89a0979364d46bd2e963",
          "md5": "6cd3412898eaf2f1f4491a7fb64a0627",
          "sha256": "eb3eaabb20f40c78c2161f745710fbb4db2e3d7c0a46ce3bf99aa9d177c4e4b6"
        },
        "downloads": -1,
        "filename": "fastapi_motor_oil-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6cd3412898eaf2f1f4491a7fb64a0627",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 17139,
        "upload_time": "2023-03-03T14:52:36",
        "upload_time_iso_8601": "2023-03-03T14:52:36.664730Z",
        "url": "https://files.pythonhosted.org/packages/73/38/2d823eaea6cc5e18cd63af0b2287a650d6106beb89a0979364d46bd2e963/fastapi_motor_oil-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5845f24ba4a56e58860ff8fc5b070c88fc21b30c86a8a1147e89fe24fa58dcfe",
          "md5": "e4b91c4e8c866238cf8f2c781dfe8f62",
          "sha256": "b17beebe9eacc71e7a420592c983e186b5eb2d4786a4b518ed7586f444111ea5"
        },
        "downloads": -1,
        "filename": "fastapi_motor_oil-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4b91c4e8c866238cf8f2c781dfe8f62",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 15562,
        "upload_time": "2023-03-03T14:55:11",
        "upload_time_iso_8601": "2023-03-03T14:55:11.729868Z",
        "url": "https://files.pythonhosted.org/packages/58/45/f24ba4a56e58860ff8fc5b070c88fc21b30c86a8a1147e89fe24fa58dcfe/fastapi_motor_oil-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74e96d50b126875b74f6fb0267e003f2f93c6a5beffbb30a5837ef901dbe7e43",
          "md5": "9d04caed842e485fb9c459262d0bf8d1",
          "sha256": "f01edb019683e7b7a9277386fb00cbaabf6c59d5362058291ff3eebc7fe7787f"
        },
        "downloads": -1,
        "filename": "fastapi_motor_oil-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9d04caed842e485fb9c459262d0bf8d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 17111,
        "upload_time": "2023-03-03T14:55:14",
        "upload_time_iso_8601": "2023-03-03T14:55:14.295464Z",
        "url": "https://files.pythonhosted.org/packages/74/e9/6d50b126875b74f6fb0267e003f2f93c6a5beffbb30a5837ef901dbe7e43/fastapi_motor_oil-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef6237d59f03d3cc236764d321f64791acf585803d0ce44276aea4f3930ffa57",
          "md5": "ff182388579ca12eecef9e2a8aceb37e",
          "sha256": "2b58412e95185618c0ac8d3d5598ae7942107db49f6b2dfefb228ea59c296d29"
        },
        "downloads": -1,
        "filename": "fastapi_motor_oil-0.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff182388579ca12eecef9e2a8aceb37e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 15529,
        "upload_time": "2023-03-03T15:05:27",
        "upload_time_iso_8601": "2023-03-03T15:05:27.156501Z",
        "url": "https://files.pythonhosted.org/packages/ef/62/37d59f03d3cc236764d321f64791acf585803d0ce44276aea4f3930ffa57/fastapi_motor_oil-0.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d10560a737a68daf7d36ca68f44982369b1711b6cde29a3814bfc2f8212c7d64",
          "md5": "ebb5e8b09f6655ab6de8e2169f0159ee",
          "sha256": "bdc4a7db7b54a1d9c20f3f930b58709b852c4198f933c575e02ce93aa68340d5"
        },
        "downloads": -1,
        "filename": "fastapi_motor_oil-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ebb5e8b09f6655ab6de8e2169f0159ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 17088,
        "upload_time": "2023-03-03T15:05:28",
        "upload_time_iso_8601": "2023-03-03T15:05:28.895448Z",
        "url": "https://files.pythonhosted.org/packages/d1/05/60a737a68daf7d36ca68f44982369b1711b6cde29a3814bfc2f8212c7d64/fastapi_motor_oil-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef6237d59f03d3cc236764d321f64791acf585803d0ce44276aea4f3930ffa57",
        "md5": "ff182388579ca12eecef9e2a8aceb37e",
        "sha256": "2b58412e95185618c0ac8d3d5598ae7942107db49f6b2dfefb228ea59c296d29"
      },
      "downloads": -1,
      "filename": "fastapi_motor_oil-0.4.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ff182388579ca12eecef9e2a8aceb37e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 15529,
      "upload_time": "2023-03-03T15:05:27",
      "upload_time_iso_8601": "2023-03-03T15:05:27.156501Z",
      "url": "https://files.pythonhosted.org/packages/ef/62/37d59f03d3cc236764d321f64791acf585803d0ce44276aea4f3930ffa57/fastapi_motor_oil-0.4.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d10560a737a68daf7d36ca68f44982369b1711b6cde29a3814bfc2f8212c7d64",
        "md5": "ebb5e8b09f6655ab6de8e2169f0159ee",
        "sha256": "bdc4a7db7b54a1d9c20f3f930b58709b852c4198f933c575e02ce93aa68340d5"
      },
      "downloads": -1,
      "filename": "fastapi_motor_oil-0.4.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ebb5e8b09f6655ab6de8e2169f0159ee",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 17088,
      "upload_time": "2023-03-03T15:05:28",
      "upload_time_iso_8601": "2023-03-03T15:05:28.895448Z",
      "url": "https://files.pythonhosted.org/packages/d1/05/60a737a68daf7d36ca68f44982369b1711b6cde29a3814bfc2f8212c7d64/fastapi_motor_oil-0.4.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}