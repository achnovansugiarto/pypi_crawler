{
  "info": {
    "author": "Jack Houlden",
    "author_email": "xjackh@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Lazy Network Engineer (LNE)\n\nLazy Network Engineer (lne) is an amalgamation of tools and APIs put together in one easy to use script\n\n## Features\n\n### Subnet Calculator\n\nBasic subnet calculator\n\n#### Example\n\n```\njack@jumpbox:~/python/lazy-network-engineer(master⚡) » python3 main.py -sc 10.7.90.24/27\n╒══════════════╤═════════════════╕\n│ Address      │ 10.7.90.24      │\n├──────────────┼─────────────────┤\n│ Mask         │ 255.255.255.224 │\n├──────────────┼─────────────────┤\n│ CIDR         │ 10.7.90.24/27   │\n├──────────────┼─────────────────┤\n│ Network      │ 10.7.90.0       │\n├──────────────┼─────────────────┤\n│ Broadcast    │ 10.7.90.31      │\n├──────────────┼─────────────────┤\n│ Wildcard     │ 0.0.0.31        │\n├──────────────┼─────────────────┤\n│ Usable hosts │ 30              │\n╘══════════════╧═════════════════╛\n\n```\n\n### IP WHOIS\n\nhttps://stat.ripe.net/docs/data_api\n\n#### Example\n\nUsing RIPE database run a WHOIS against the IP provided\n\n```\njack@jumpbox:~/python/lazy-network-engineer(master⚡) » python3 main.py --whois 213.146.141.1\n+-----------------+----------------------------------------------+\n|   IP Address    |                213.146.141.1                 |\n+=================+==============================================+\n| Prefix          | 213.146.141.0/24                             |\n+-----------------+----------------------------------------------+\n| Base Prefix     | 213.146.128.0/19                             |\n+-----------------+----------------------------------------------+\n| Network Name    | I-SENTRAL-HOSTING-1                          |\n+-----------------+----------------------------------------------+\n| Description     | I-SENTRAL SECURITY LTD (ATL) Managed Hosting |\n+-----------------+----------------------------------------------+\n| ASN             | 13009                                        |\n+-----------------+----------------------------------------------+\n| ASN Description | Redcentric Plc                               |\n+-----------------+----------------------------------------------+\n| Maintainer      | VDATA-MNT                                    |\n+-----------------+----------------------------------------------+\n| Country Code    | GB                                           |\n+-----------------+----------------------------------------------+\n\n```\n\n### IP Reputation\n\nUses API from https://www.abuseipdb.com/\n\nProvides an \"Abuse Score\" - the closer to 100 the more confidence you can have that the abuses reported are correct. All abuses are use reported, mostly automatically by Fail2Ban.\n\nAlso displays the last few reports on the IP requested\n\nThe domain provided is not the PTR record but what the end user has reported it as.\n\n#### Example\n\n```\njack@jumpbox:~/python/lazy-network-engineer(master⚡) » python3 main.py -r 45.146.164.166\n+-------------------------+----------------------------------------------------+\n|       IP Address        |                   45.146.164.166                   |\n+=========================+====================================================+\n| Domain                  | mastercommunications.ru                            |\n+-------------------------+----------------------------------------------------+\n| ISP                     | Mastercom LLC                                      |\n+-------------------------+----------------------------------------------------+\n| Country                 | RU                                                 |\n+-------------------------+----------------------------------------------------+\n| Abuse Score             | 100                                                |\n+-------------------------+----------------------------------------------------+\n| Total Reports (90 days) | 1606                                               |\n+-------------------------+----------------------------------------------------+\n| Last Reported           | 2020-11-15T13:03:04+00:00                          |\n+-------------------------+----------------------------------------------------+\n| Latest Reports          | Nov 15 13:03:01 scw-6657dc sshd[30568]:            |\n|                         | pam_unix(sshd:auth): authentication failure;       |\n|                         | logname= uid=0 euid=0 tty=ssh ruser=               |\n|                         | rhost=45.146.164.166                               |\n|                         | Nov 15 13:03:01 scw-6657dc sshd[30568]:            |\n|                         | pam_unix(sshd:auth): authentication failure;       |\n|                         | logname= uid=0 euid=0 tty=ssh ruser=               |\n|                         | rhost=45.146.164.166                               |\n|                         | Nov 15 13:03:03 scw-6657dc sshd[30568]: Failed     |\n|                         | password for invalid user admin from               |\n|                         | 45.146.164.166 port 8889 ssh2                      |\n|                         | ...                                                |\n+-------------------------+----------------------------------------------------+\n\n```\n\n\n### BGP\n\nhttps://bgpview.docs.apiary.io/#reference/0/asn/view-asn-details?console=1\n\n#### ASN Lookup\n\nRuns an API call against BGPView for the AS provided. If more than 50 prefixes are advertised it will be truncated to save on space\n\n#### Example\n\n```\njack@jumpbox:~/python/lazy-network-engineer(master⚡) » python3 main.py --asn 13009\n+--------------------+---------------------------------------------------------+\n|        Name        |                        VData Ltd                        |\n+====================+=========================================================+\n| ASN                | 13009                                                   |\n+--------------------+---------------------------------------------------------+\n| Country            | GB                                                      |\n+--------------------+---------------------------------------------------------+\n| Email Contact      | abuse@redcentricplc.com, peering@redcentricplc.com,     |\n|                    | support@redcentricplc.com,                              |\n|                    | darren.marshall@redcentricplc.com,                      |\n|                    | abuse@redcenticplc.com, sean.cavenay@redcentricplc.com  |\n+--------------------+---------------------------------------------------------+\n| Abuse Contact      | abuse@redcentricplc.com, abuse@redcenticplc.com         |\n+--------------------+---------------------------------------------------------+\n| Traffic Estimation | 5-10Gbps                                                |\n+--------------------+---------------------------------------------------------+\n| IPv4 Prefixes      | 45.14.252.0/24, 46.235.168.0/21, 85.118.0.0/19,         |\n|                    | 91.209.34.0/24, 94.199.144.0/21, 151.147.184.0/24,      |\n|                    | 151.147.185.0/24, 151.147.186.0/24, 151.147.187.0/24,   |\n|                    | 178.250.96.0/21, 185.65.100.0/22, 185.81.160.0/22,      |\n|                    | 185.95.175.0/24, 188.95.128.0/21, 192.166.136.0/24,     |\n|                    | 193.164.114.0/24, 213.146.128.0/19, 216.245.64.0/18     |\n+--------------------+---------------------------------------------------------+\n| IPv6 Prefixes      | 2a02:2998::/32, 2a03:a000::/32                          |\n+--------------------+---------------------------------------------------------+\n```\n\n#### Peering Status\n\n\n\n### MAC Vendor Lookup\n\nUses https://macvendors.com/api to get information on the MAC address vendor.\n\n#### REGEX\n\nIt will match the MAC address against the below regex, which should match all common standards:\n\n```\nregex = (\"^([0-9A-Fa-f]{2}[:-])\" +\n        \"{5}([0-9A-Fa-f]{2})|\" +\n        \"([0-9a-fA-F]{4}\\\\.\" +\n        \"[0-9a-fA-F]{4}\\\\.\" +\n        \"[0-9a-fA-F]{4})$\")\n```\n#### Example\n\n```\njack@jumpbox:~/python/lazy-network-engineer(master⚡) »python3 main.py --mac-lookup 18-31-BF-69-9D-46\n╒═══════════════════╤═══════════════════════╕\n│ MAC Address       │ Vendor                │\n├───────────────────┼───────────────────────┤\n│ 18-31-BF-69-9D-46 │ ASUSTek COMPUTER INC. │\n╘═══════════════════╧═══════════════════════╛\n\n```\n\n### Rate Limit Calculator\n\nRate limit calculator based on Ciscos reccommendation - https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/qos_plcshp/configuration/15-mt/qos-plcshp-15-mt-book/qos-plcshp-oview.html\n\n#### Example\n\n```\njack@jumpbox:~/python/lazy-network-engineer(master⚡) » python3 main.py -rl 1000000\n+-----------------+---------+\n|    Function     |  Bits   |\n+=================+=========+\n| Requested Speed | 1000000 |\n+-----------------+---------+\n| Normal Burst    | 187500  |\n+-----------------+---------+\n| Extended Burst  | 375000  |\n+-----------------+---------+\n```\n\n### Bit Converter\n\nTake the given input and turn convert it into all the other data formats.\n\n5 decimal places for floating point numbers was chosen as it doesn't over complicate the output and also keeps some percision on the outputted variables. If you want more percision this can be supplied via a 2nd argument. This is detailed below\n\nThis command should accept most inputs \"100megabyte, 100Mb, 100mb, 100megabyte, 100bit, 100b, 100byte, 100B\". If you're not using the full word make sure that you get your notation correct :)\n\n#### Example\n\n```\njack@jumpbox:~/python/lazy-network-engineer(master⚡) » python3 main.py -c 100byte\n╒══════════╤═══════════╕\n│ Byte     │       100 │\n╞══════════╪═══════════╡\n│ Bit      │ 800.00000 │\n├──────────┼───────────┤\n│ Byte     │ 100.00000 │\n├──────────┼───────────┤\n│ Kilobit  │   0.78160 │\n├──────────┼───────────┤\n│ Kilobyte │   0.09760 │\n├──────────┼───────────┤\n│ Megabit  │   0.00076 │\n├──────────┼───────────┤\n│ Megabyte │   0.00010 │\n├──────────┼───────────┤\n│ Gigabit  │   0.00000 │\n├──────────┼───────────┤\n│ Gigabyte │   0.00000 │\n├──────────┼───────────┤\n│ Terabit  │   0.00000 │\n├──────────┼───────────┤\n│ Terabyte │   0.00000 │\n╘══════════╧═══════════╛\n\n```\n\nIf you want to specify more decimal places than the standard 5, supply a 2nd value as an integer:\n\n```\njack@jumpbox:~/python/lazy-network-engineer(master⚡) » python3 main.py -c 100byte 10\n╒══════════╤════════════════╕\n│ Byte     │            100 │\n╞══════════╪════════════════╡\n│ Bit      │ 800.0000000000 │\n├──────────┼────────────────┤\n│ Byte     │ 100.0000000000 │\n├──────────┼────────────────┤\n│ Kilobit  │   0.7816000000 │\n├──────────┼────────────────┤\n│ Kilobyte │   0.0976000000 │\n├──────────┼────────────────┤\n│ Megabit  │   0.0007629600 │\n├──────────┼────────────────┤\n│ Megabyte │   0.0000953674 │\n├──────────┼────────────────┤\n│ Gigabit  │   0.0000007451 │\n├──────────┼────────────────┤\n│ Gigabyte │   0.0000000931 │\n├──────────┼────────────────┤\n│ Terabit  │   0.0000000007 │\n├──────────┼────────────────┤\n│ Terabyte │   0.0000000001 │\n╘══════════╧════════════════╛\n\n```\n\n### SSL Checks\n\nUsing the SSL Labs API to check SSL certs against the requested domain - https://www.ssllabs.com/projects/ssllabs-apis/index.html\n\nIt will provide a rolling output as it scans each host against a domain and give you what stage it is on.\n\nOnce the testing is completed it will provide you with the grades for each host and a link to the full report page\n\n#### Examples\n\n##### Progress \n\n```\njack@jumpbox:~/python/lazy-network-engineer(master⚡) » python3 main.py -ssl wintelguy.com\n+----------+---------------+\n|   Host   | wintelguy.com |\n+==========+===============+\n| Port     | 443           |\n+----------+---------------+\n| Protocol | http          |\n+----------+---------------+\n| Status   | IN_PROGRESS   |\n+----------+---------------+\n+------------+--------------+\n| IP Address | 3.222.63.253 |\n+============+==============+\n| Status     | Ready        |\n+------------+--------------+\n| Grade      | B            |\n+------------+--------------+\n| Progress   | 100          |\n+------------+--------------+\n+--------------+------------------------+\n|  IP Address  |      34.234.60.54      |\n+==============+========================+\n| Status       | In progress            |\n+--------------+------------------------+\n| Current Step | TESTING_BLEICHENBACHER |\n+--------------+------------------------+\n| Progress     | 90                     |\n+--------------+------------------------+\n\n```\n\n##### Completion\n\n```\njack@jumpbox:~/python/lazy-network-engineer(master⚡) » python3 main.py -ssl https://wintelguy.com\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+------------+-----------------------+\n|    Host    | https://wintelguy.com |\n+============+=======================+\n| Port       | 443                   |\n+------------+-----------------------+\n| Protocol   | http                  |\n+------------+-----------------------+\n| IP Address | 3.222.63.253          |\n+------------+-----------------------+\n| Grade      | B                     |\n+------------+-----------------------+\n| Warnings   | 0                     |\n+------------+-----------------------+\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+------------+-----------------------+\n|    Host    | https://wintelguy.com |\n+============+=======================+\n| Port       | 443                   |\n+------------+-----------------------+\n| Protocol   | http                  |\n+------------+-----------------------+\n| IP Address | 34.234.60.54          |\n+------------+-----------------------+\n| Grade      | B                     |\n+------------+-----------------------+\n| Warnings   | 0                     |\n+------------+-----------------------+\nhttps://www.ssllabs.com/ssltest/analyze.html?d=https://wintelguy.com\n\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jaaacck/lazy-network-engineer",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lazy-network-engineer-jaaacck",
    "package_url": "https://pypi.org/project/lazy-network-engineer-jaaacck/",
    "platform": "",
    "project_url": "https://pypi.org/project/lazy-network-engineer-jaaacck/",
    "project_urls": {
      "Homepage": "https://github.com/jaaacck/lazy-network-engineer"
    },
    "release_url": "https://pypi.org/project/lazy-network-engineer-jaaacck/0.1a0/",
    "requires_dist": null,
    "requires_python": ">=3.5.2",
    "summary": "Lots of scripts and APIs bundled together in one easy to use CLI",
    "version": "0.1a0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8664389,
  "releases": {
    "0.1a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8cb5451b025f4d43269dec640f432d47a57695a6d68f8d4e4530124af88ae1a",
          "md5": "f1287144ec5dc2e882d0360f626d7b0a",
          "sha256": "0bec8cf26d155604557cd23f9c91b8dc96b067488d0f433eb2c97d7ecfd1e5a6"
        },
        "downloads": -1,
        "filename": "lazy_network_engineer_jaaacck-0.1a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f1287144ec5dc2e882d0360f626d7b0a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.2",
        "size": 29437,
        "upload_time": "2020-11-15T16:45:47",
        "upload_time_iso_8601": "2020-11-15T16:45:47.354538Z",
        "url": "https://files.pythonhosted.org/packages/a8/cb/5451b025f4d43269dec640f432d47a57695a6d68f8d4e4530124af88ae1a/lazy_network_engineer_jaaacck-0.1a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e2a0bdfd23df3c37792df44b2026f7812252b994976ac9693ef63fee20bb747",
          "md5": "bbd30b00a76b92e0e96e0af7c876b463",
          "sha256": "196f19cd6990f5f7e50975923ad395b90c65b8b5c16b4f4034435eb8674adfa1"
        },
        "downloads": -1,
        "filename": "lazy-network-engineer-jaaacck-0.1a0.tar.gz",
        "has_sig": false,
        "md5_digest": "bbd30b00a76b92e0e96e0af7c876b463",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.2",
        "size": 30288,
        "upload_time": "2020-11-15T16:45:48",
        "upload_time_iso_8601": "2020-11-15T16:45:48.711435Z",
        "url": "https://files.pythonhosted.org/packages/3e/2a/0bdfd23df3c37792df44b2026f7812252b994976ac9693ef63fee20bb747/lazy-network-engineer-jaaacck-0.1a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a8cb5451b025f4d43269dec640f432d47a57695a6d68f8d4e4530124af88ae1a",
        "md5": "f1287144ec5dc2e882d0360f626d7b0a",
        "sha256": "0bec8cf26d155604557cd23f9c91b8dc96b067488d0f433eb2c97d7ecfd1e5a6"
      },
      "downloads": -1,
      "filename": "lazy_network_engineer_jaaacck-0.1a0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f1287144ec5dc2e882d0360f626d7b0a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5.2",
      "size": 29437,
      "upload_time": "2020-11-15T16:45:47",
      "upload_time_iso_8601": "2020-11-15T16:45:47.354538Z",
      "url": "https://files.pythonhosted.org/packages/a8/cb/5451b025f4d43269dec640f432d47a57695a6d68f8d4e4530124af88ae1a/lazy_network_engineer_jaaacck-0.1a0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3e2a0bdfd23df3c37792df44b2026f7812252b994976ac9693ef63fee20bb747",
        "md5": "bbd30b00a76b92e0e96e0af7c876b463",
        "sha256": "196f19cd6990f5f7e50975923ad395b90c65b8b5c16b4f4034435eb8674adfa1"
      },
      "downloads": -1,
      "filename": "lazy-network-engineer-jaaacck-0.1a0.tar.gz",
      "has_sig": false,
      "md5_digest": "bbd30b00a76b92e0e96e0af7c876b463",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5.2",
      "size": 30288,
      "upload_time": "2020-11-15T16:45:48",
      "upload_time_iso_8601": "2020-11-15T16:45:48.711435Z",
      "url": "https://files.pythonhosted.org/packages/3e/2a/0bdfd23df3c37792df44b2026f7812252b994976ac9693ef63fee20bb747/lazy-network-engineer-jaaacck-0.1a0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}