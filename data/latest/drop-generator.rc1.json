{
  "info": {
    "author": "Mascha Loomis",
    "author_email": "mascha.loomis@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Games/Entertainment",
      "Topic :: Games/Entertainment :: Role-Playing",
      "Topic :: Utilities"
    ],
    "description": "# RPG Loot Drop Engine\nWhat started as a personal project of getting better at python and learning about lootboxes turned into something that might be useful to others.\n\nThese sites helped me understand the basic concept and mechanics of loot boxes/tables:\n* [How to code monster loot drops](https://gamedevelopment.tutsplus.com/tutorials/how-to-code-monster-loot-drops--cms-20449)\n* [Loot Drop Tables](https://lostgarden.home.blog/2014/12/08/loot-drop-tables/)\n\nWhen I stumbled across this two article series, I was \"Booyah!!!!\".  The original code was written in C#.  This project is my resulting translation.\n* [Loot-Tables, Random Maps and Monsters - Part I](https://www.codeproject.com/Articles/420046/Loot-Tables-Random-Maps-and-Monsters-Part-I)\n* [Loot-Tables, Random Maps and Monsters - Part II](https://www.codeproject.com/Articles/420845/Loot-Tables-Random-Maps-and-Monsters-Part-II)\n\nDifferences between the original and this engine:\n* The flag `always` will always drop *at least* one item from a table or of that item.  Initial testing showed that `always` would always drop *one and only* one.  To always drop *one and only one* `always` and `unique` will both need to be `true`.\n* The `Randomizer`  was not implemented\n* The `IRDSObjectCreator` and subsequent code was not implemented.  I didn't see the need, based on what I was trying to do.\n\n## Install \n\n`pip install drop-generator`\n\n## Sample code\n```python\nfrom dropgen.RDSTable import RDSTable\nfrom dropgen.RDSItem import RDSItem\n\nif __name__ == '__main__':\n    loot_table = RDSTable(count=5)\n\n    loot_table.add_entry(RDSItem(\"Ham Sandwich\"))\n    loot_table.add_entry(RDSItem(\"Felt Hat\"))\n    loot_table.add_entry(RDSItem(\"Diamond Ring\"))\n    loot_table.add_entry(RDSItem(\"Red Brick\"))\n    loot_table.add_entry(RDSItem(\"Feral Cat\"))\n    loot_table.add_entry(RDSItem(\"Empty Flask\"))\n    loot_table.add_entry(RDSItem(\"Someone's garbage\"))\n\n    results = loot_table.rds_result\n\n    print(\"Simple loot drop. Everything has the same chance\")\n    for result in results:\n        print(f\"\\t{result}\")\n```\n\n## Code changes to try out\nFlags can be set at `RDSItem` or `RDSTable` creation time or set/adjusted upon being added to the parent `RDSTable`. \n\n```python\nloot_table.add_entry(RDSItem(\"Feral Cat\", probability=5))\n```\nand\n```python\nloot_table.add_entry(RDSItem(\"Feral Cat\"), probability=5)\n```\nThese two statements functionally achieve the same thing.\n\nThe flags you can set.\n* `always`: An item or item from a table will *always* drop at least once.  If enough items/tables are marked with `always`, then actual drops could actually exceed what is defined (`count`)in the parent table.\n* `unique`: If the item is selected, then it will be dropped *only* once.\n* `probability`: The probability of the item dropping.  [Wikipedia](https://en.wikipedia.org/wiki/Probability)\n* `enabled`: Will this item drop.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/ramencatz/python-loot",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drop-generator",
    "package_url": "https://pypi.org/project/drop-generator/",
    "platform": "",
    "project_url": "https://pypi.org/project/drop-generator/",
    "project_urls": {
      "Homepage": "https://gitlab.com/ramencatz/python-loot"
    },
    "release_url": "https://pypi.org/project/drop-generator/0.0.35/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "RPG Loot Drop Engine",
    "version": "0.0.35",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9202417,
  "releases": {
    "0.0.35": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ccd96a6aee0a27fb7c9bf0e88ebb71718619621e362588c73ab0ebdfbe0553f",
          "md5": "a04fc2dce8a316aead577c42e938358c",
          "sha256": "4e41c0dc8b34f1f5298675b4aee88803ddff9691b4f037cc29042e7945d6d751"
        },
        "downloads": -1,
        "filename": "drop_generator-0.0.35-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a04fc2dce8a316aead577c42e938358c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 9505,
        "upload_time": "2021-01-22T11:05:39",
        "upload_time_iso_8601": "2021-01-22T11:05:39.931489Z",
        "url": "https://files.pythonhosted.org/packages/2c/cd/96a6aee0a27fb7c9bf0e88ebb71718619621e362588c73ab0ebdfbe0553f/drop_generator-0.0.35-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e858a8a33ffa1c2cfa98bcc255cd5786632f1a72a52c9cd8d68308a8e88d28bd",
          "md5": "132b75f8a9bb1160b0912da50ad75aff",
          "sha256": "391a7dba1c74319b1cddffd4795de60649267f0e349d94b0cb73bf3a606061ed"
        },
        "downloads": -1,
        "filename": "drop-generator-0.0.35.tar.gz",
        "has_sig": false,
        "md5_digest": "132b75f8a9bb1160b0912da50ad75aff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 6665,
        "upload_time": "2021-01-22T11:05:41",
        "upload_time_iso_8601": "2021-01-22T11:05:41.027529Z",
        "url": "https://files.pythonhosted.org/packages/e8/58/a8a33ffa1c2cfa98bcc255cd5786632f1a72a52c9cd8d68308a8e88d28bd/drop-generator-0.0.35.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ccd96a6aee0a27fb7c9bf0e88ebb71718619621e362588c73ab0ebdfbe0553f",
        "md5": "a04fc2dce8a316aead577c42e938358c",
        "sha256": "4e41c0dc8b34f1f5298675b4aee88803ddff9691b4f037cc29042e7945d6d751"
      },
      "downloads": -1,
      "filename": "drop_generator-0.0.35-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a04fc2dce8a316aead577c42e938358c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 9505,
      "upload_time": "2021-01-22T11:05:39",
      "upload_time_iso_8601": "2021-01-22T11:05:39.931489Z",
      "url": "https://files.pythonhosted.org/packages/2c/cd/96a6aee0a27fb7c9bf0e88ebb71718619621e362588c73ab0ebdfbe0553f/drop_generator-0.0.35-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e858a8a33ffa1c2cfa98bcc255cd5786632f1a72a52c9cd8d68308a8e88d28bd",
        "md5": "132b75f8a9bb1160b0912da50ad75aff",
        "sha256": "391a7dba1c74319b1cddffd4795de60649267f0e349d94b0cb73bf3a606061ed"
      },
      "downloads": -1,
      "filename": "drop-generator-0.0.35.tar.gz",
      "has_sig": false,
      "md5_digest": "132b75f8a9bb1160b0912da50ad75aff",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 6665,
      "upload_time": "2021-01-22T11:05:41",
      "upload_time_iso_8601": "2021-01-22T11:05:41.027529Z",
      "url": "https://files.pythonhosted.org/packages/e8/58/a8a33ffa1c2cfa98bcc255cd5786632f1a72a52c9cd8d68308a8e88d28bd/drop-generator-0.0.35.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}