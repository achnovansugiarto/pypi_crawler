{
  "info": {
    "author": "Luc Jonveaux",
    "author_email": "kelu124@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "[![ko-fi](https://www.ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/G2G81MT0G)\n\n\n# How to setup the board using only a usb cable\n\n# Beware! If you use this, you just need to have a usb cable plugged in.\n\nInstall jumpers and connectors as indicated in the figure below. Jumpers necessary are the white and the green ones. \n\n![](https://raw.githubusercontent.com/kelu124/echomods/master/include/community/Abdulrhman/unnamed.jpg)\n\n\n# Installation \n\n## Preparing Python\n\nLet's install what is required\n\n`pip3 install un0usb`\n\nIf you face issues, you can still download the rest of the main modules.\n\n`pip3 install pyftdi matplotlib numpy scipy `\n\n## Installing iceprog to flash the fpga\n\niceprog is the software used to put the fpga on the flash storage on the board, which will be read by the fpga on boot. The easiest way is to :\n\n`sudo apt install fpga-icestorm`\n\nIf this doesnâ€™t work, then this may work:\n\n```\nsudo apt-get install libftdi-dev git gcc \ngit clone https://github.com/cliffordwolf/icestorm.git\ncd iceprog\nmake \nsudo make install\n```\n\nThis will create and install the iceprog utility, used to flash the fpga program (bitstream).\n\n## FTDI rules.\n\n*Notes for Linux*: Create a file /etc/udev/rules.d/53-lattice-ftdi.rules with the following line in it to allow uploading bit-streams as unprivileged user:\n\n`ATTRS{idVendor}==\"0403\", ATTRS{idProduct}==\"6014\", MODE=\"0660\", GROUP=\"plugdev\", TAG+=\"uaccess\"`\n\nThis should solve usb access rules.\n\n## Board specific install files\n\nDownload the [install pack](https://github.com/kelu124/un0rick/blob/master/usb/install_pack.zip) or by \n\n`wget https://github.com/kelu124/un0rick/raw/master/usb/install_pack.zip`\n\n\n## Connect the usb cable\n\nCheck that the FTDI device is well created by typing:\n\n`dmesg`\n\n# Programming it\n\nUnzip it, inside, there's the bin to program the fpga :\n \n`iceprog usb.bin`\n\n# Running python\n\n## Test\n\nThere is a test bench for the python lib matching the usb firmware, from the `pip` package. Installation is as follows.\n\n```\nwget https://github.com/kelu124/python-usb-un0rick/raw/master/usb.bin\niceprog usb.bin \n```\n\nwhich will flash the board.\n\n## Using the python lib\n\n### Imports\n\nTo import the lib:\n\n`import un0usb as USB`\n\nI encourage the reader to go inside [this libs source](https://github.com/kelu124/python-usb-un0rick/tree/master/un0usb), which is already documented.\n\n### Create the device\n\nthen connect to the FPGA\n\n```python\n# Check the version\nUSB.__version__\n# init FTDI device\nfpga = USB.FpgaControl('ftdi://ftdi:2232:/', spi_freq=8E6)\n# reload configuration (optional step - just to fill BRAM (DACGAIN registers) with initial values)\nfpga.reload()\n# reset fpga\nfpga.reset()\n```\n### Run acqs\n\nTo play with custom gain and pulse parameters:\n\n```python\nfpga.set_pulseform(initDelay=5, POn=16, PInter=16, Poff=5000)\ngain = [int(100 + ((1000-100)*x*x*x/32/32/32)) for x in range(32)]\nacq_res = fpga.do_acquisition(acq_lines=2, gain=gain, double_rate=True) \nplt.plot(acq_res[0])\n```\n\n### Save acqs\n\n```python\n# Let's save the previous acquisition\nfpga.save(\"Test\") \n# And display it in more details\nplot = USB.FView() \nplot.readfile('Test.npz')\n```\n\n### Pulser control\n\nTo control the waveform, one would set the `fpga.csr.ponw`, `fpga.csr.interw` and `fpga.csr.poffw`, that are respectively integers for setting the width (timing) of the pulse, width of a relaxation period before damping, and then duration of damping. Unit are (1/128us).\n\nThe `fpga.csr.initdel` register is the delay between the beginning of the acquisiton and the pulse. \n\n```\nfpga.csr.initdel = InitDel\nfpga.csr.ponw = PONWidth\nfpga.csr.interw = INTERWidth\nfpga.csr.poffw = PDAMP\n```\n\nBelow is plotted amplitude of an echo as a function of the `fpga.csr.ponw` for a 4MHz transducer. One sees that a setting at `16` provides most\n\n![](https://raw.githubusercontent.com/kelu124/echomods/master/matty/20201031a/amplitude.png)\n\n(See [full experiment here](https://github.com/kelu124/echomods/tree/master/matty/20201031a)).\n\n### Gain and acquisitions\n\nAnd do acquisitions with `acq_res = fpga.do_acquisition(acq_lines=32, gain=gain, double_rate=True)` which will return an array of `acq_lines` acquisitions, of length 256us at 64Msps.\n`double_rate=True` provides a half clock offset to odd lines, so that one can interleave two subsequent acquisition to have, in a fixed setting, a 128Msps acquisition.\n\nThe `gain` setting is an array of integers, of length 32, that can range from 0 to 1023, controlling gain for each of the 32 8us-segment of acquisition within the 256us line. \n\n\n### Other registers\n\n* `fpga.csr.led3 = 0` sets LED3 off. led1, led2, led3 are possible, can be set to 0 or 1.\n* `fpga.csr.topturnX` reads input 1 to 3 on the input header.\n* `fpga.csr.jumperX` reads jumper 1 to 3 close to the programming jumper.\n* `fpga.csr.outXice` writes/reads output 1 to 3.\n* `fpga.csr.nblines = acq_lines - 1` is the register controlling the number of lines acquired.\n* `fpga.csr.dacout` reads the DAC/TGC/VGA level outside of acquisitions.\n* `fpga.csr.acqstart = 1` to start the acquisition\n* `fpga.csr.drmode = int(double_rate)` triggers the interleaving mode.\n* `fpga.csr.acqstart = 1` to start the acquisition\n* `fpga.csr.acqdone` is equal to 0 during acquisitions.\n* `fpga.csr.author` reads the ID of the author of the binary.\n* `fpga.csr.version` reads the ID of the author's binary.\n\n# Example of acquisitons\n\n## Raw signal, with DAC\n\nThe signal is in blue, the gain levels are in green. Here there are 32 visible steps, of 8us each.\n![](https://raw.githubusercontent.com/kelu124/echomods/master/matty/20201103a/Acq%200.png)\n\n## Detail of an echo\n\n![](https://raw.githubusercontent.com/kelu124/echomods/master/matty/20201026a/fpga_ctrl/img/4.png)\n\n## Interleaved acquisiton mode = ON\n\nDoublign acquisition speed (yellow and red dots below)\n\n![](https://raw.githubusercontent.com/kelu124/echomods/master/matty/20201026a/fpga_ctrl/img/6.png)\n\n# License\n\nThis work is based on two previous TAPR projects, [the echOmods project](https://github.com/kelu124/echomods/), and the [un0rick project](https://github.com/kelu124/un0rick) - its boards are open hardware and software, developped with open-source elements as much as possible.\n\nCopyright Kelu124 (kelu124@gmail.com) 2020.\n\n* The hardware is licensed under TAPR Open Hardware License (www.tapr.org/OHL)\n* The software components are free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n* The documentation is licensed under a [Creative Commons Attribution-ShareAlike 3.0 Unported License](http://creativecommons.org/licenses/by-sa/3.0/).\n\n## Disclaimer\n\nThis project is distributed WITHOUT ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING OF MERCHANTABILITY, SATISFACTORY QUALITY AND FITNESS FOR A PARTICULAR PURPOSE. \n\n\n# Changelog\n\n\n* 0.2.7: Solving: Savefile naming issue",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/kelu124/python-usb-un0rick/archive/v0.2.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://un0rick.cc",
    "keywords": "ultrasound,usb,un0rick",
    "license": "gpl-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "un0usb",
    "package_url": "https://pypi.org/project/un0usb/",
    "platform": "",
    "project_url": "https://pypi.org/project/un0usb/",
    "project_urls": {
      "Download": "https://github.com/kelu124/python-usb-un0rick/archive/v0.2.1.tar.gz",
      "Homepage": "http://un0rick.cc"
    },
    "release_url": "https://pypi.org/project/un0usb/0.2.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Library for un0rick usb interface",
    "version": "0.2.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8900541,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b91810fbb1a246cf9b0b260fc007c8fb52055874b5de1b2f4067e331b5559d4",
          "md5": "821c5f49046f12c0999af7a429785bad",
          "sha256": "c7ab4432de9216a0c9be5dc714fd21d0e11889ef047eac1847a8bea16395b753"
        },
        "downloads": -1,
        "filename": "un0usb-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "821c5f49046f12c0999af7a429785bad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6026,
        "upload_time": "2020-11-04T15:24:29",
        "upload_time_iso_8601": "2020-11-04T15:24:29.578942Z",
        "url": "https://files.pythonhosted.org/packages/7b/91/810fbb1a246cf9b0b260fc007c8fb52055874b5de1b2f4067e331b5559d4/un0usb-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2382f5f78a87e64ec6a172d9d6bfafaa9e8aa8a733befaf79ce8c60a57767b2",
          "md5": "6ce02a6c5a4c9afbaf55603779b7cc36",
          "sha256": "1b67235a9bbdf0cd8e5300ed3b48c2a61a2d9d0b93a067ab633b3306880d5f57"
        },
        "downloads": -1,
        "filename": "un0usb-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6ce02a6c5a4c9afbaf55603779b7cc36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6024,
        "upload_time": "2020-11-04T15:29:36",
        "upload_time_iso_8601": "2020-11-04T15:29:36.926780Z",
        "url": "https://files.pythonhosted.org/packages/d2/38/2f5f78a87e64ec6a172d9d6bfafaa9e8aa8a733befaf79ce8c60a57767b2/un0usb-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "745ff854bc2ded7832bc542000e11e9cae34769003ecf5d33cc749554832005d",
          "md5": "4575b4a21a7352e1529a11d4c3660963",
          "sha256": "688b9c45955786007bae13b7abc1da6c9793ea47dde1e69db2b8741373381fc7"
        },
        "downloads": -1,
        "filename": "un0usb-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4575b4a21a7352e1529a11d4c3660963",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6027,
        "upload_time": "2020-11-04T15:39:32",
        "upload_time_iso_8601": "2020-11-04T15:39:32.524853Z",
        "url": "https://files.pythonhosted.org/packages/74/5f/f854bc2ded7832bc542000e11e9cae34769003ecf5d33cc749554832005d/un0usb-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc72d64adbe3f12d8fac1c2fad86e08caaa824236caca0f7f55fdff69c4dfff0",
          "md5": "85614c84144f6276333d9cf94a358a00",
          "sha256": "9d0a0efa0f43c08758d24eb43f276bd811f60a08fbb3de00137c936c3e2e7e84"
        },
        "downloads": -1,
        "filename": "un0usb-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "85614c84144f6276333d9cf94a358a00",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6073,
        "upload_time": "2020-11-04T15:47:59",
        "upload_time_iso_8601": "2020-11-04T15:47:59.603729Z",
        "url": "https://files.pythonhosted.org/packages/bc/72/d64adbe3f12d8fac1c2fad86e08caaa824236caca0f7f55fdff69c4dfff0/un0usb-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c683b2f86242a2e9add82f1e677b8fb957e346836d4afcdd269e91862cb7c3c7",
          "md5": "f8ad08b1530be2d7cdd1cb547a343e50",
          "sha256": "639381c4c86e0fd3cbbb71cb641dcc77903c8ddc58ae5f9d394e53326a9520b9"
        },
        "downloads": -1,
        "filename": "un0usb-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f8ad08b1530be2d7cdd1cb547a343e50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6740,
        "upload_time": "2020-11-05T17:30:19",
        "upload_time_iso_8601": "2020-11-05T17:30:19.862783Z",
        "url": "https://files.pythonhosted.org/packages/c6/83/b2f86242a2e9add82f1e677b8fb957e346836d4afcdd269e91862cb7c3c7/un0usb-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8903ba606739b05902410b7b421ab6e0d93b28cb8184e5a0164f30074d513a4b",
          "md5": "ebf633e10979c205ba0f54199db499b4",
          "sha256": "316abc7b9b8754a2e6ed5d5a75246ca3dfb61d00156595e64fffca90022c9c7f"
        },
        "downloads": -1,
        "filename": "un0usb-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ebf633e10979c205ba0f54199db499b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25053,
        "upload_time": "2020-11-06T15:16:06",
        "upload_time_iso_8601": "2020-11-06T15:16:06.066248Z",
        "url": "https://files.pythonhosted.org/packages/89/03/ba606739b05902410b7b421ab6e0d93b28cb8184e5a0164f30074d513a4b/un0usb-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a344d2e2e0846300f123a5ce86448adb3b036bbdb55ec6fdb98c51caf95464c",
          "md5": "9aef2378dd175e95706552592cf3b64d",
          "sha256": "43553e3a3c299dc537c6e48ad540fe00a03c356549fd43afd3db1aacc590a311"
        },
        "downloads": -1,
        "filename": "un0usb-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "9aef2378dd175e95706552592cf3b64d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28896,
        "upload_time": "2020-11-07T15:29:08",
        "upload_time_iso_8601": "2020-11-07T15:29:08.170779Z",
        "url": "https://files.pythonhosted.org/packages/0a/34/4d2e2e0846300f123a5ce86448adb3b036bbdb55ec6fdb98c51caf95464c/un0usb-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68d430da0fc9c23889a97ba658b1fc951133e1d3e8919ee0649049e5237337ba",
          "md5": "3725e560b4c23640a0a6ed055a3b2894",
          "sha256": "f43c53f5912d84914a4256b886b0e0799ba83c2d340cf93cb7cea3c92f214e74"
        },
        "downloads": -1,
        "filename": "un0usb-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "3725e560b4c23640a0a6ed055a3b2894",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29641,
        "upload_time": "2020-11-09T21:11:59",
        "upload_time_iso_8601": "2020-11-09T21:11:59.564149Z",
        "url": "https://files.pythonhosted.org/packages/68/d4/30da0fc9c23889a97ba658b1fc951133e1d3e8919ee0649049e5237337ba/un0usb-0.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbb6dd959099619c835351ba5f60f28a89937a481c55bb919c2c2c8cbbe07de3",
          "md5": "cef4bf7b2fe92a9fdd78983ac95f7dfa",
          "sha256": "d9fb02305e1a60c1c91de680f8b9b942de260d1a71f8c8b8916da70b1afa9ebe"
        },
        "downloads": -1,
        "filename": "un0usb-0.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "cef4bf7b2fe92a9fdd78983ac95f7dfa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 48892,
        "upload_time": "2020-12-14T23:22:41",
        "upload_time_iso_8601": "2020-12-14T23:22:41.706119Z",
        "url": "https://files.pythonhosted.org/packages/fb/b6/dd959099619c835351ba5f60f28a89937a481c55bb919c2c2c8cbbe07de3/un0usb-0.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fbb6dd959099619c835351ba5f60f28a89937a481c55bb919c2c2c8cbbe07de3",
        "md5": "cef4bf7b2fe92a9fdd78983ac95f7dfa",
        "sha256": "d9fb02305e1a60c1c91de680f8b9b942de260d1a71f8c8b8916da70b1afa9ebe"
      },
      "downloads": -1,
      "filename": "un0usb-0.2.7.tar.gz",
      "has_sig": false,
      "md5_digest": "cef4bf7b2fe92a9fdd78983ac95f7dfa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 48892,
      "upload_time": "2020-12-14T23:22:41",
      "upload_time_iso_8601": "2020-12-14T23:22:41.706119Z",
      "url": "https://files.pythonhosted.org/packages/fb/b6/dd959099619c835351ba5f60f28a89937a481c55bb919c2c2c8cbbe07de3/un0usb-0.2.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}