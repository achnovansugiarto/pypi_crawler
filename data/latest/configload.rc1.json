{
  "info": {
    "author": "Noah Pendleton",
    "author_email": "2538614+noahp@users.noreply.github.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "[![Code style:\nblack](https://img.shields.io/badge/code%20style-black-000000.svg?style=for-the-badge)](https://github.com/ambv/black)\n[![GitHub Workflow\nStatus](https://img.shields.io/github/workflow/status/noahp/configload/main-ci?style=for-the-badge)](https://github.com/noahp/configload/actions)\n[![PyPI\nversion](https://img.shields.io/pypi/v/configload.svg?style=for-the-badge)](https://pypi.org/project/configload/)\n[![PyPI\npyversions](https://img.shields.io/pypi/pyversions/configload.svg?style=for-the-badge)](https://pypi.python.org/pypi/configload/)\n[![License:\nMIT](https://img.shields.io/badge/License-MIT-brightgreen.svg?style=for-the-badge)](https://opensource.org/licenses/MIT)\n\n- [Install](#install)\n- [Usage](#usage)\n- [Limitations](#limitations)\n  - [Flat structure](#flat-structure)\n  - [Simple types only](#simple-types-only)\n  - [`.ini` default section](#ini-default-section)\n- [Config File Formats](#config-file-formats)\n\n<!-- omit in toc -->\n# configload\n\nTeeny package to support loading a dataclass from a config file (`.ini`,\n`.json`; optionally, with extensions `.yaml`, `.toml`).\n\n_Note: [dynaconf](https://github.com/rochacbruno/dynaconf) is a **much** more\nfeatureful implementation of a similar idea, so for anything serious it might be\na better choice! see also [configloader](https://pypi.org/project/configloader/)\nfor another similar implementation_\n\n## Install\n\n```bash\n# install with extras: support for yaml and toml (requires extra dependencies)\npip install configload[yaml,toml]\n```\n\n## Usage\n\nInstantiate a child class like so:\n\n```python\nfrom configload import PyConfigFile\n\nclass MyConfigClass(PyConfigFile):\n    # setting defaults makes it simpler to instantiate\n    yolo: int = 1234\n    heyo: str = \"hi!\"\n    numbertime: float = 1.23\n\nmyconfig = MyConfigClass(configfile=\"settings.ini\")\n\n# keys from \"settings.ini\" that match fields in the dataclass will be converted\n# to specified types and loaded into myconfig. unknown keys are silently skipped\n```\n\n## Limitations\n\n### Flat structure\n\nTo keep things consistent between ini and structured formats, and due to the\nlimitations of dataclasses, really only top-level (flat) structure is suited to\nthis.\n\nFor example, this JSON:\n\n```json\n{\n    \"top_level_key\": {\n        \"nested_key\": 1\n    }\n}\n```\n\nWill result in a dataclass with a `dict` field `.top_level_key`, but after that,\nnested values will have to use dict semantics, i.e.:\n\n```python\n# to access nested keys:\nmyconfig.top_level_key[\"nested_key\"]\n```\n\n### Simple types only\n\nOnly simple dataclass types (`str`, `int`, `list`, `dict`, etc) are supported,\nand ini format only supports scalar types.\n\n_**TODO**_ support may be added for more complex data types by using\n`ast.literal_eval` to convert string repr of a data structure in an ini key\nvalue, but this is:\n\n- kinda sketchy, error prone\n- might not be that useful anyway ðŸ¤·\n\nExample might be:\n\n```ini\n[DEFAULT]\n# python string repr of a dictionary\nkey_1 = { \"nested_key\": 123, }\n```\n\n### `.ini` default section\n\nThe `.ini` format has section markers (eg `[DEFAULT]`) as optional, but the\npython standard library configparser requires at least one section marker.\n\nThis library (`configload`) will _only_ parse keys from the `[DEFAULT]`\nsection, all other sections are ignored.\n\nIf the ini file doesn't contain a `[DEFAULT]` section an error will be raised.\n\n## Config File Formats\n\nSubjective comparision:\n\n- `.ini` - built into python standard library, supports comments, no types\n- `.json` - built in, no comments ðŸ˜ž, types\n- `.yaml` - not built in, comments, types\n- `.toml` - not built in, comments, types\n\n\n",
    "description_content_type": "text/markdown; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/noahp/configload",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "configload",
    "package_url": "https://pypi.org/project/configload/",
    "platform": "",
    "project_url": "https://pypi.org/project/configload/",
    "project_urls": {
      "Code": "https://github.com/noahp/configload",
      "Homepage": "https://github.com/noahp/configload",
      "Issue tracker": "https://github.com/noahp/configload/issues"
    },
    "release_url": "https://pypi.org/project/configload/0.0.1/",
    "requires_dist": [
      "tomlkit ; extra == 'toml'",
      "pyyaml ; extra == 'yaml'"
    ],
    "requires_python": ">=3.8",
    "summary": "install packages and run Python with them",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7597476,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8b0e4a68dce7cf027070c24cca25c4734d78a20d1c6a3c45392e49724f3dd66",
          "md5": "93078590546ca043319258351be4beed",
          "sha256": "7b6d84ee15bc8e9e92f5ba70c2701ccee3b54a136ecb9432bbee0efcd9997eda"
        },
        "downloads": -1,
        "filename": "configload-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93078590546ca043319258351be4beed",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 5131,
        "upload_time": "2020-06-30T15:37:49",
        "upload_time_iso_8601": "2020-06-30T15:37:49.975475Z",
        "url": "https://files.pythonhosted.org/packages/e8/b0/e4a68dce7cf027070c24cca25c4734d78a20d1c6a3c45392e49724f3dd66/configload-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e8b0e4a68dce7cf027070c24cca25c4734d78a20d1c6a3c45392e49724f3dd66",
        "md5": "93078590546ca043319258351be4beed",
        "sha256": "7b6d84ee15bc8e9e92f5ba70c2701ccee3b54a136ecb9432bbee0efcd9997eda"
      },
      "downloads": -1,
      "filename": "configload-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "93078590546ca043319258351be4beed",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 5131,
      "upload_time": "2020-06-30T15:37:49",
      "upload_time_iso_8601": "2020-06-30T15:37:49.975475Z",
      "url": "https://files.pythonhosted.org/packages/e8/b0/e4a68dce7cf027070c24cca25c4734d78a20d1c6a3c45392e49724f3dd66/configload-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}