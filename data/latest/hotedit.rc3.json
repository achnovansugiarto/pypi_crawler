{
  "info": {
    "author": "Cory Dodt",
    "author_email": "121705+corydodt@users.noreply.github.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# hotedit\n\nA simple library for opening your user's favorite text editor\n\nThe `hotedit()` API looks at a few places in the shell environment for\na useful text editor, invokes it with your text, and finally returns\nthe edited result to your program (or raises an exception if an error \noccurred invoking the editor). \n\n## Install\n\n```shell\npip install hotedit\n```\n\n### Installation for maintainers\n\nAfter checking out github source, work with it using [Poetry].\n\n1. Install `poetry`: \n  ```\n  curl -sSL https://install.python-poetry.org | python3 -\n  ```\n\n2. Activate your poetry shell in the git repo you checked out, and install dependencies:\n  ```\n  poetry shell\n  ...\n\n  poetry install -E test\n  ```\n\n3. Run tests:\n  ```\n  make test\n  ```\n\n[poetry]: https://python-poetry.org\n\n## Use\n\n```python\n# Get a string from the Internet so we can edit it:\nimport requests\nURL = \"https://pastebin.com/raw/Df9NAmYc\"\nresponse = requests.get(URL)\n\n\"\"\"\nCall `hotedit()` to launch the text editor to edit what was in the pastebin\ndocument.\n\nThe first argument `initial` is the string to be shown in your editing buffer.\nThis creates a temp file, later deleted.\n\nOther useful arguments:\n  - validate_unchanged (default False): When True, raise `Unchanged` exception when\n    the user did not make any edits.\n  - delete_temp (default True): When False, doesn't delete the temp file (for \n    troubleshooting).\n  - find_editor (default `hotedit.editor.determine_editor`): a zero-argument\n    callable that returns the path to an editor executable (see below)\n\"\"\"\nfrom hotedit import hotedit\nedited = hotedit(response.text)\n# `edited` is the string returned from editing.\n\nprint(\"Your edited text:\")\nfor line in edited.splitlines():\n    print(f\"> {line}\")\n\n# At this point we might upload the new string back to pastebin.\n```\n\n## How it determines your editor\n\nHotedit looks at your shell environment to determine which editor you're using.\n\nIt follows some very simple rules.\n\n1. Check the following in order for a useful editor:\n    1. `git config core.editor`\n    1. `EDITOR` environment variable\n    1. `VISUAL` environment variable\n\n2. If one of these is a string, that string is returned as the path to an editor.\n\n3. `hotedit()` itself will raise an exception if the path returned is not an\n   editor executable, but it does not keep trying other options if this happens.\n\nThis means if `core.editor` is unset, `$EDITOR` is set to a path that's missing,\nand `$VISUAL` is set to a valid path to an editor, `hotedit` will use `$EDITOR`\nand fail, without checking `$VISUAL`.\n\n### Overriding editor search with `find_editor`\n\nIf you don't like hotedit's search order, you can pass your own `find_editor`\nfunction. Commonly, you want to try a different location first, then try the\ndefault options. Here's an implementation of that:\n\n```python\nimport os\nimport hotedit, hotedit.editor\n\ndef my_find_editor():\n    if os.environ.get(\"MY_APP_TEXT_EDITOR\"):\n        return os.environ[\"MY_APP_TEXT_EDITOR\"]\n    return hotedit.editor.determine_editor()\n\nedited = hotedit.hotedit(\"[MY_APP config]...\", find_editor=my_find_editor)\n...\n```\n\n\n## Suggestions for setting your editor\n\nMany editor values _just work_, especially if they are commonly used in the\nterminal. For example, you can just set `EDITOR=nano` or `EDITOR=vim`.\n\nEditors that open in their own window, or make use of an already-open window,\nalmost always provide a command-line option for exactly the use cases\nhotedit is used for. For example, try the following:\n\n(Open a new gvim window, or open a tab in an existing gvim window, respectively):\n```\nEDITOR=\"gvim -f\"  # or\nEDITOR=\"gvim --remote-tab-wait\"\n```\n\n(Open a tab in VS Code):\n```\nEDITOR=\"code -w\"\n```\n\nIf your users are likely to be using git, the best experience for them is usually\nto invoke an editor the same way git would invoke one to ask for a commit\nmessage. While it's not up to the `hotedit` library to tell you how to live your\nlife, here's how you would do that:\n\n```\n# VS code, for example\ngit config core.editor \"code -w\"\n```\n\n----\n\n## Maintainer section: releasing\n\nTo cut a release of this software, automated tests must pass. Check under `Actions` for the latest commit.\n\n#### Create an RC branch and test\n\n- We use the Gitflow process. For a release, this means that you should have a v1.2.3-rc branch under your \n  develop branch. Like this:\n  ```\n    main  \n    └── develop  \n        └── v1.2.3-rc\n  ```\n\n- Update *this file*.\n  \n  1. Confirm that the docs make sense for the current release.\n  1. Check links!\n  1. Update the Changelog section at the bottom.\n\n- Perform whatever tests are necessary.\n\n#### Tag and cut the release with Github Actions\n\n- Once you have tested in this branch, create a tag in the v1.2.3-rc branch:\n  ```\n  git tag -a -m v1.2.3 v1.2.3\n  git push --tags\n  ```\n\n- Navigate to https://github.com/corydodt/hotedit/actions and run the action labeled `... release`.\n\n    - You will be asked to choose a branch. Choose your rc branch, e.g. `v1.2.3-rc`\n\n    - If you run this action without creating a tag on v1.2.3-rc first, the action will fail with an error and nothing will happen.\n\n  If you have correctly tagged a commit and chosen the right branch, this will run and create a new release on the [Releases page].\n\n- Edit the release on that page \n\n#### Merge up\n\n- Finish up by merging your `-rc` branch into \n  1. `main` and then \n  2. `develop`.\n\n## Changelog\n\n<details><summary>(About: Keep-a-Changelog text format)</summary>\n\nThe format is based on [Keep a Changelog], and this project adheres to [Semantic\nVersioning].\n</details>\n\n### versions [0.9.1.post2]\n\n- Initial public release.\n- Automated builds, automated tests.\n\n\n[Unreleased]: https://github.com/corydodt/hotedit/compare/v0.9.1.post2..HEAD\n[0.9.1.post2]:        https://github.com/corydodt/hotedit/compare/v0.0..v0.9.1.post2\n[0.0]:        https://github.com/corydodt/hotedit/tree/v0.0\n\n\n[latest release]: https://github.com/corydodt/hotedit/releases/latest\n\n[Releases page]: https://github.com/corydodt/hotedit/releases\n\n[Keep a Changelog]: https://keepachangelog.com/en/1.0.0/\n\n[Semantic Versioning]: https://semver.org/spec/v2.0.0.html\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hotedit",
    "package_url": "https://pypi.org/project/hotedit/",
    "platform": null,
    "project_url": "https://pypi.org/project/hotedit/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/hotedit/0.9.1.post2/",
    "requires_dist": [
      "pytest (>=6.2,<7.0); extra == \"test\"",
      "pytest-cov (>=3.0.0,<4.0.0)",
      "pytest-flakes (>=4.0.5,<5.0.0); extra == \"test\""
    ],
    "requires_python": ">=3.6.2,<4",
    "summary": "Automatically find and launch an editor with a stream of text to edit; then save",
    "version": "0.9.1.post2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13485618,
  "releases": {
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc2f7b9ee9014cb0b781c03f0aaf79fc3624d5ea1624da2f077c304693cd23c5",
          "md5": "f56656880dcf58988eb6083b2c5248e1",
          "sha256": "38677642c7a5e8aff45b5832aa63625febc033bc84b5fd2df14baea8d10c7a1b"
        },
        "downloads": -1,
        "filename": "hotedit-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f56656880dcf58988eb6083b2c5248e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 3375,
        "upload_time": "2022-03-28T06:00:49",
        "upload_time_iso_8601": "2022-03-28T06:00:49.285645Z",
        "url": "https://files.pythonhosted.org/packages/bc/2f/7b9ee9014cb0b781c03f0aaf79fc3624d5ea1624da2f077c304693cd23c5/hotedit-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "195e4a4dcc76506791485fa317dcf9874cd4c4b6670fbe9d2fae883187eb69e0",
          "md5": "5e8e55688b02af55f153b7c5272decc8",
          "sha256": "dd8053a7450fab42aa6f270a4f3f4408f8ffcd7e071f3e17c6c8f04df82330c0"
        },
        "downloads": -1,
        "filename": "hotedit-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5e8e55688b02af55f153b7c5272decc8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 3062,
        "upload_time": "2022-03-28T06:00:51",
        "upload_time_iso_8601": "2022-03-28T06:00:51.135235Z",
        "url": "https://files.pythonhosted.org/packages/19/5e/4a4dcc76506791485fa317dcf9874cd4c4b6670fbe9d2fae883187eb69e0/hotedit-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "298759335a327e5562753a14120aabacb7404e184a1114219a5fa113c244d857",
          "md5": "68e8cd185951bc68bb60f4cd70d39e14",
          "sha256": "3b30993a35ed7047750f6c1c906868488313f6566679d8f4755687cdcc3daa0d"
        },
        "downloads": -1,
        "filename": "hotedit-0.9.1.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "68e8cd185951bc68bb60f4cd70d39e14",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<4",
        "size": 6133,
        "upload_time": "2022-04-12T05:56:26",
        "upload_time_iso_8601": "2022-04-12T05:56:26.181129Z",
        "url": "https://files.pythonhosted.org/packages/29/87/59335a327e5562753a14120aabacb7404e184a1114219a5fa113c244d857/hotedit-0.9.1.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a215f370824db8dc9c6d96e2c4b44d0c5f9d9e825c5c2aae0099b33690cb56a",
          "md5": "35606f98b8696b02bc53922c70d7307d",
          "sha256": "0c3fe44f0e134fe1982d18a1ee26bc91ec0b78154eac9b571fd46d0b31a56f57"
        },
        "downloads": -1,
        "filename": "hotedit-0.9.1.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "35606f98b8696b02bc53922c70d7307d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<4",
        "size": 7984,
        "upload_time": "2022-04-12T05:56:27",
        "upload_time_iso_8601": "2022-04-12T05:56:27.840482Z",
        "url": "https://files.pythonhosted.org/packages/0a/21/5f370824db8dc9c6d96e2c4b44d0c5f9d9e825c5c2aae0099b33690cb56a/hotedit-0.9.1.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6684ffc01a904df4e91aeba37783e7ef8bb7d241a691288a7254dc99dccce917",
          "md5": "8612ec9ac28f1fc79ecf12aa463258f3",
          "sha256": "5fb34042245c05679fc8273160ef7c20fbac432ff8e09d692978a60cb2d0ee80"
        },
        "downloads": -1,
        "filename": "hotedit-0.9.1.post2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8612ec9ac28f1fc79ecf12aa463258f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<4",
        "size": 6136,
        "upload_time": "2022-04-12T06:10:39",
        "upload_time_iso_8601": "2022-04-12T06:10:39.811018Z",
        "url": "https://files.pythonhosted.org/packages/66/84/ffc01a904df4e91aeba37783e7ef8bb7d241a691288a7254dc99dccce917/hotedit-0.9.1.post2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c1aedc5ec7c0d08a8892ab09baf62ae6e70ef3f9961f5cc1b1369138d8134dc",
          "md5": "2df81ed5b554de8b38fc5242d968b866",
          "sha256": "1b23c43dcee48b83eddf9528615781a3b8e427a1260d5d834de7e35ce6d2f643"
        },
        "downloads": -1,
        "filename": "hotedit-0.9.1.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "2df81ed5b554de8b38fc5242d968b866",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<4",
        "size": 7988,
        "upload_time": "2022-04-12T06:10:41",
        "upload_time_iso_8601": "2022-04-12T06:10:41.366603Z",
        "url": "https://files.pythonhosted.org/packages/3c/1a/edc5ec7c0d08a8892ab09baf62ae6e70ef3f9961f5cc1b1369138d8134dc/hotedit-0.9.1.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6684ffc01a904df4e91aeba37783e7ef8bb7d241a691288a7254dc99dccce917",
        "md5": "8612ec9ac28f1fc79ecf12aa463258f3",
        "sha256": "5fb34042245c05679fc8273160ef7c20fbac432ff8e09d692978a60cb2d0ee80"
      },
      "downloads": -1,
      "filename": "hotedit-0.9.1.post2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8612ec9ac28f1fc79ecf12aa463258f3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.2,<4",
      "size": 6136,
      "upload_time": "2022-04-12T06:10:39",
      "upload_time_iso_8601": "2022-04-12T06:10:39.811018Z",
      "url": "https://files.pythonhosted.org/packages/66/84/ffc01a904df4e91aeba37783e7ef8bb7d241a691288a7254dc99dccce917/hotedit-0.9.1.post2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3c1aedc5ec7c0d08a8892ab09baf62ae6e70ef3f9961f5cc1b1369138d8134dc",
        "md5": "2df81ed5b554de8b38fc5242d968b866",
        "sha256": "1b23c43dcee48b83eddf9528615781a3b8e427a1260d5d834de7e35ce6d2f643"
      },
      "downloads": -1,
      "filename": "hotedit-0.9.1.post2.tar.gz",
      "has_sig": false,
      "md5_digest": "2df81ed5b554de8b38fc5242d968b866",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.2,<4",
      "size": 7988,
      "upload_time": "2022-04-12T06:10:41",
      "upload_time_iso_8601": "2022-04-12T06:10:41.366603Z",
      "url": "https://files.pythonhosted.org/packages/3c/1a/edc5ec7c0d08a8892ab09baf62ae6e70ef3f9961f5cc1b1369138d8134dc/hotedit-0.9.1.post2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}