{
  "info": {
    "author": "nacos",
    "author_email": "755063194@qq.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# nacos-sdk-python\nA Python implementation of Nacos OpenAPI.\n\nsee: https://nacos.io/zh-cn/docs/open-API.html\n\n[![Pypi Version](https://badge.fury.io/py/nacos-sdk-python.svg)](https://badge.fury.io/py/nacos-sdk-python)\n[![License](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](https://github.com/nacos-group/nacos-sdk-python/blob/master/LICENSE)\n\n\n### Supported Python versionï¼š\n\nPython 2.7\nPython 3.6\nPython 3.7\n\n### Supported Nacos version\nNacos 0.8.0\n\n\n## Installation\n```shell\npip install nacos-sdk-python\n```\n\n## Getting Started\n```python\nimport nacos\n\nSERVER_ADDRESSES = \"server addresses split by comma\"\nNAMESPACE = \"***\"\n\nclient = nacos.NacosClient(SERVER_ADDRESSES, namespace=NAMESPACE)\n\n# get config\ndata_id = \"config.nacos\"\ngroup = \"group\"\nprint(client.get_config(data_id, group))\n```\n\n## Configuration\n```\nclient = NacosClient(server_addresses, namespace=your_ns)\n```\n\n* *server_addresses* - **required**  - Nacos server address, comma separated if more than 1.\n* *namespace* - Namespace. | default: `None`\n\n#### Extra Options\nExtra option can be set by `set_options`, as following:\n\n```\nclient.set_options({key}={value})\n```\n\nConfigurable options are:\n\n* *default_timeout* - Default timeout for get config from server in seconds.\n* *pulling_timeout* - Long polling timeout in seconds.\n* *pulling_config_size* - Max config items number listened by one polling process.\n* *callback_thread_num* - Concurrency for invoking callback.\n* *failover_base* - Dir to store failover config files.\n* *snapshot_base* - Dir to store snapshot config files.\n* *no_snapshot* - To disable default snapshot behavior, this can be overridden by param *no_snapshot* in *get* method.\n\n## API Reference\n \n### Get Config\n>`NacosClient.get_config(data_id, group, timeout, no_snapshot)`\n\n* `param` *data_id* Data id.\n* `param` *group* Group, use `DEFAULT_GROUP` if no group specified.\n* `param` *timeout* Timeout for requesting server in seconds.\n* `param` *no_snapshot* Whether to use local snapshot while server is unavailable.\n* `return` \nW\nGet value of one config item following priority:\n\n* Step 1 - Get from local failover dir(default: `${cwd}/nacos-data/data`).\n  * Failover dir can be manually copied from snapshot dir(default: `${cwd}/nacos-data/snapshot`) in advance.\n  * This helps to suppress the effect of known server failure.\n    \n* Step 2 - Get from one server until value is got or all servers tried.\n  * Content will be save to snapshot dir after got from server.\n\n* Step 3 - Get from snapshot dir.\n\n### Add Watchers\n>`NacosClient.add_config_watchers(data_id, group, cb_list)`\n\n* `param` *data_id* Data id.\n* `param` *group* Group, use `DEFAULT_GROUP` if no group specified.\n* `param` *cb_list* List of callback functions to add.\n* `return`\n\nAdd watchers to a specified config item.\n* Once changes or deletion of the item happened, callback functions will be invoked.\n* If the item is already exists in server, callback functions will be invoked for once.\n* Multiple callbacks on one item is allowed and all callback functions are invoked concurrently by `threading.Thread`.\n* Callback functions are invoked from current process.\n\n### Remove Watcher\n>`NacosClient.remove_config_watcher(data_id, group, cb, remove_all)`\n\n* `param` *data_id* Data id.\n* `param` *group* Group, use \"DEFAULT_GROUP\" if no group specified.\n* `param` *cb* Callback function to delete.\n* `param` *remove_all* Whether to remove all occurrence of the callback or just once.\n* `return`\n\nRemove watcher from specified key.\n\n### Publish Config\n>`NacosClient.publish_config(data_id, group, content, timeout)`\n\n* `param` *data_id* Data id.\n* `param` *group* Group, use \"DEFAULT_GROUP\" if no group specified.\n* `param` *content* Config value.\n* `param` *timeout* Timeout for requesting server in seconds.\n* `return` True if success or an exception will be raised.\n\nPublish one data item to Nacos.\n* If the data key is not exist, create one first.\n* If the data key is exist, update to the content specified.\n* Content can not be set to None, if there is need to delete config item, use function **remove** instead.\n\n### Remove Config\n>`NacosClient.remove_config(data_id, group, timeout)`\n* `param` *data_id* Data id.\n* `param` *group* Group, use \"DEFAULT_GROUP\" if no group specified.\n* `param` *timeout* Timeout for requesting server in seconds.\n* `return` True if success or an exception will be raised.\n\nRemove one data item from Nacos.\n\n### Register Instance\n>`NacosClient.add_naming_instance(service_name, ip, port, cluster_name, weight, metadata, enable, healthy)`\n* `param` *service_name*  **required** Service name to register to.\n* `param` *ip*  **required** IP of the instance.\n* `param` *port* **required** Port of the instance.\n* `param` *cluster_name* Cluster to register to.\n* `param` *weight* A float number for load balancing weight.\n* `param` *metadata* Extra info in JSON string format.\n* `param` *enable* A bool value to determine whether instance is enabled or not.\n* `param` *healthy* A bool value to determine whether instance is healthy or not.\n* `return` True if success or an exception will be raised.\n\n### Deregister Instance\n>`NacosClient.remove_naming_instance(service_name, ip, port, cluster_name)`\n* `param` *service_name*  **required** Service name to deregister from.\n* `param` *ip*  **required** IP of the instance.\n* `param` *port* **required** Port of the instance.\n* `param` *cluster_name* Cluster to deregister from.\n* `return` True if success or an exception will be raised.\n\n### Modify Instance\n>`NacosClient.modify_naming_instance(service_name, ip, port, cluster_name, weight, metadata, enable)`\n* `param` *service_name*  **required** Service name.\n* `param` *ip*  **required** IP of the instance.\n* `param` *port* **required** Port of the instance.\n* `param` *cluster_name* Cluster name.\n* `param` *weight* A float number for load balancing weight.\n* `param` *metadata* Extra info in JSON string format.\n* `param` *enable* A bool value to determine whether instance is enabled or not.\n* `return` True if success or an exception will be raised.\n\n### Query Instances\n>`NacosClient.list_naming_instance(service_name, clusters, healthy_only)`\n* `param` *service_name*  **required** Service name to query.\n* `param` *clusters* Cluster names separated by comma.\n* `param` *healthy_only* A bool value for querying healthy instances or not.\n* `return` Instance info list if success or an exception will be raised.\n\n### Query Instance Detail\n>`NacosClient.get_naming_instance(service_name, ip, port, cluster_name)`\n* `param` *service_name*  **required** Service name.\n* `param` *ip*  **required** IP of the instance.\n* `param` *port* **required** Port of the instance.\n* `param` *cluster_name* Cluster name.\n* `return` Instance info if success or an exception will be raised.\n\n### Send Instance Beat\n>`NacosClient.send_heartbeat(service_name, ip, port, cluster_name, weight, metadata)`\n* `param` *service_name*  **required** Service name.\n* `param` *ip*  **required** IP of the instance.\n* `param` *port* **required** Port of the instance.\n* `param` *cluster_name* Cluster to register to.\n* `param` *weight* A float number for load balancing weight.\n* `param` *metadata* Extra info in JSON string format.\n* `return` A JSON object include server recommended beat interval if success or an exception will be raised.\n\n## Debugging Mode\nDebugging mode if useful for getting more detailed log on console.\n\nDebugging mode can be set by:\n```\nNacosClient.set_debugging()\n# only effective within the current process\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nacos-group/nacos-sdk-python",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-nacos",
    "package_url": "https://pypi.org/project/django-nacos/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-nacos/",
    "project_urls": {
      "Homepage": "https://github.com/nacos-group/nacos-sdk-python"
    },
    "release_url": "https://pypi.org/project/django-nacos/0.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python client for Nacos.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7870702,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96561659a20b69451acdf498af2666374ed5af471c186be19507f593c3a1f066",
          "md5": "7f0bf951cf3b9436f8116aad8380eec0",
          "sha256": "34e1fc7da1ccfe9e62a3becd9fca28d379604daa8585cd98b8b9d59834e8dd26"
        },
        "downloads": -1,
        "filename": "django_nacos-0.1.2-py3.6.egg",
        "has_sig": false,
        "md5_digest": "7f0bf951cf3b9436f8116aad8380eec0",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "requires_python": null,
        "size": 49741,
        "upload_time": "2020-08-03T08:59:57",
        "upload_time_iso_8601": "2020-08-03T08:59:57.615231Z",
        "url": "https://files.pythonhosted.org/packages/96/56/1659a20b69451acdf498af2666374ed5af471c186be19507f593c3a1f066/django_nacos-0.1.2-py3.6.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e83f9b41c50acff8f35760be1fe30c0c3959641e9f26065d359d46426715bcac",
          "md5": "97564cb5eed923bd234346de5bd3ce30",
          "sha256": "410e3d657b1ef469b0ea92747e106af543fc5f5a6bb2160be65f9479aa1c498e"
        },
        "downloads": -1,
        "filename": "django_nacos-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "97564cb5eed923bd234346de5bd3ce30",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11243,
        "upload_time": "2020-08-03T09:00:05",
        "upload_time_iso_8601": "2020-08-03T09:00:05.317740Z",
        "url": "https://files.pythonhosted.org/packages/e8/3f/9b41c50acff8f35760be1fe30c0c3959641e9f26065d359d46426715bcac/django_nacos-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1453bae475725179ad89543c485a35c05759815c4ca22392f5c6ad2564e9307",
          "md5": "1f877fca5407049851c0e35b15d9300a",
          "sha256": "f4522c3a816182ec2e6f7c80988fd9b8f2b8a98c951126715840864f2591f919"
        },
        "downloads": -1,
        "filename": "django-nacos-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1f877fca5407049851c0e35b15d9300a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11237,
        "upload_time": "2020-08-03T09:09:35",
        "upload_time_iso_8601": "2020-08-03T09:09:35.446792Z",
        "url": "https://files.pythonhosted.org/packages/e1/45/3bae475725179ad89543c485a35c05759815c4ca22392f5c6ad2564e9307/django-nacos-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e1453bae475725179ad89543c485a35c05759815c4ca22392f5c6ad2564e9307",
        "md5": "1f877fca5407049851c0e35b15d9300a",
        "sha256": "f4522c3a816182ec2e6f7c80988fd9b8f2b8a98c951126715840864f2591f919"
      },
      "downloads": -1,
      "filename": "django-nacos-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "1f877fca5407049851c0e35b15d9300a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11237,
      "upload_time": "2020-08-03T09:09:35",
      "upload_time_iso_8601": "2020-08-03T09:09:35.446792Z",
      "url": "https://files.pythonhosted.org/packages/e1/45/3bae475725179ad89543c485a35c05759815c4ca22392f5c6ad2564e9307/django-nacos-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}