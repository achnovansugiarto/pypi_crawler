{
  "info": {
    "author": "Josh Levy-Kramer",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Utilities"
    ],
    "description": "[![PyPI](https://img.shields.io/pypi/v/dataclassframe)](https://pypi.org/project/dataclassframe/)\n![Python](https://img.shields.io/badge/python-3.6%20%7C%203.7%20%7C%203.8%20%7C%203.9-blue)\n[![Build Status](https://travis-ci.com/joshlk/dataclassframe.svg?branch=main)](https://travis-ci.com/joshlk/dataclassframe)\n[![Documentation](https://readthedocs.org/projects/pip/badge/?version=latest&style=flat)](https://joshlk.github.io/dataclassframe)\n\n# dataclassframe\n\nA dataclass container with multi-indexing and bulk operations.\nProvides the typed benefits and ergonomics of dataclasses while having the efficiency of [Pandas dataframes](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html).\n\nThe container is based on [data-oriented design][1] by optimising the memory layout of the stored data, providing fast\nbulk operations and a smaller memory footprint for large collections.\nBulk operations are enabled using Pandas which has a rich set of vectorised methods for both numerical and string\ndata types.\n\nMulti-indexing provides the ability to use multiple fields as keys to index the records.\nThis is suitable for bidirectional and inverse dictionary keys.\n\nA DataClassFrame provides good ergonomics for production code as columns are immutable\nand columns/data types are well defined by the dataclasses.\nThis makes it easier for users to understand the \"shape\" of the data in large projects and refactor when necessary.\n\n## Installing\n\nGet the latest version using pip/PyPi\n\n```shell\npip install dataclassframe\n```\n\n## Feature comparison\n\n| Container                                       | Positional indexing | Key indexing | Multi-key indexing | Data-oriented design | Column-wise opperations | Type hints | Use in prod |\n|-------------------------------------------------|---------------------|--------------|--------------------|----------------------|-------------------------|------------|-------------|\n| DataClassFrame                                  | ✅                   | ✅            | ✅                  | ✅                    | ✅                       | ✅          | ✅           |\n| List                                            | ✅                   | ❌            | ❌                  | ❌                    | ❌                       | ✅          | ✅           |\n| Dictionary                                      | ❌                   | ✅            | ❌                  | ❌                    | ❌                       | ✅          | ✅           |\n| [MIDict](https://github.com/ShenggaoZhu/midict) | ✅                   | ✅            | ✅                  | ❌                    | ❌                       | ✅          | ✅           |\n| [Pandas DataFrame](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html)                               | ✅                   | ✅            | ✅                  | ✅                    | ✅                       | ❌          | ❌           |\n\n## Show by example\n\nA container data-type for dataclasses...\n```python\nfrom dataclasses import dataclass\nfrom dataclassframe import DataClassFrame\n\n@dataclass\nclass ExampleDC:\n    field1: str\n    field2: int\n\nrecords = [\n    ExampleDC('a', 1),\n    ExampleDC('b', 2),\n    ExampleDC('c', 3),\n]\n\ndcf = DataClassFrame(\n        record_class=ExampleDC,\n        data=records,\n        index=['field1', 'field2']\n)\n```\n\nWhich acts like a ordered dictionary with multi-indexing...\n```python\n# Obtain record `ExampleDC('b', 2)`\nrow_idx = dcf.iat[1]    # Using positional index\nrow_f1 = dcf.at['b']    # Using index of `field1`\nrow_f2 = dcf.at[:, 2]   # Using index of `field2`\nassert row_idx == row_f1 == row_f2\n```\n\nWith bulk operations on the columns..\n```python\nassert dcf.cols.field2.sum() == 6\n```\n\nWorks nicely with Python 3 type hints...\n```python\ndcf: DataClassFrame[ExampleDC]\ndcf.iat[1]: ExampleDC\n```\n\n## Design\n\nIt's no secret that under the hood DataClassFrames are using Pandas DataFrames to store data.\nThe data is converted where possible to Pandas Series, which in turn use Numpy arrays. When the user accesses a record the data is then converted back into the dataclass provided at initialisation.\n\nPandas provides many advantages over of using a simple list of dataclasses or similar such as better memory\nfootprint and fast vectorised operations. However using Pandas DataFrames directly in production code is [considered by the author and others as an anti-pattern][2].\nSpecifically as DataFrames are column-wise mutable and therefore difficult to determine at code-time what columns\nthe dataframe contains i.e. its shape. It also does not provide any type-hinting benefits.\n\n[1]: https://jamesmcm.github.io/blog/2020/07/25/intro-dod/\n[2]: https://devanla.com/posts/do-not-create-that-dataframe.html\n\n## Todo\n\n- [ ] Slicing and dataclassframe views for accessing data and setting data\n- [ ] Append and inserts\n- [ ] Data-oriented design for Numpy fields\n\n## Changelog\n\nAll notable changes to this project will be documented here.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\n### [0.1.0] - 2020-10-22\n#### Added\n- Initial release of `dataclassframe`\n\n\n## License\n\n© Josh Levy-Kramer 2020. dataclassframe is released under the MIT license.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/joshlk/dataclassframe",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dataclassframe",
    "package_url": "https://pypi.org/project/dataclassframe/",
    "platform": "",
    "project_url": "https://pypi.org/project/dataclassframe/",
    "project_urls": {
      "Code": "https://github.com/joshlk/dataclassframe",
      "Documentation": "https://joshlk.github.io/dataclassframe",
      "Homepage": "https://github.com/joshlk/dataclassframe",
      "Issue tracker": "https://github.com/joshlk/dataclassframe/issues"
    },
    "release_url": "https://pypi.org/project/dataclassframe/0.1.0/",
    "requires_dist": [
      "pandas",
      "dataclasses ; python_version < \"3.7\"",
      "pytest ; extra == 'dev'",
      "wheel ; extra == 'dev'",
      "setuptools ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "sphinx (>=3.2.1) ; extra == 'dev'",
      "codecov ; extra == 'dev'",
      "recommonmark ; extra == 'dev'",
      "sphinx-rtd-theme ; extra == 'dev'",
      "bump2version ; extra == 'dev'",
      "sphinx ; extra == 'docs'",
      "sphinx-rtd-theme ; extra == 'docs'"
    ],
    "requires_python": ">=3.6",
    "summary": "A dataclass container with multi-indexing and bulk operations",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8562399,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9deb31f0cc1536646903856516474ed1306e9953e6f12f9c121886b6969596a",
          "md5": "8e0773fa0db51a9f2d9b4dfca5f53d23",
          "sha256": "b400fa8a500f8995d492370498f1ec44367efa9dc76dd7269ee64c209e1c45ca"
        },
        "downloads": -1,
        "filename": "dataclassframe-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e0773fa0db51a9f2d9b4dfca5f53d23",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8761,
        "upload_time": "2020-11-02T17:24:34",
        "upload_time_iso_8601": "2020-11-02T17:24:34.882457Z",
        "url": "https://files.pythonhosted.org/packages/e9/de/b31f0cc1536646903856516474ed1306e9953e6f12f9c121886b6969596a/dataclassframe-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38562d7339c7c6139de751a89ac3a0e7fb2701e1c5dd5dfd52242529b764f1d8",
          "md5": "bb610b12ff16d3c20611b6cf7c86402d",
          "sha256": "0a12255d8c3e0f2bfa5ac711b94a97c5a6dba7ee48a44e323509d6990749a0ca"
        },
        "downloads": -1,
        "filename": "dataclassframe-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bb610b12ff16d3c20611b6cf7c86402d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12526,
        "upload_time": "2020-11-02T17:24:38",
        "upload_time_iso_8601": "2020-11-02T17:24:38.301184Z",
        "url": "https://files.pythonhosted.org/packages/38/56/2d7339c7c6139de751a89ac3a0e7fb2701e1c5dd5dfd52242529b764f1d8/dataclassframe-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e9deb31f0cc1536646903856516474ed1306e9953e6f12f9c121886b6969596a",
        "md5": "8e0773fa0db51a9f2d9b4dfca5f53d23",
        "sha256": "b400fa8a500f8995d492370498f1ec44367efa9dc76dd7269ee64c209e1c45ca"
      },
      "downloads": -1,
      "filename": "dataclassframe-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8e0773fa0db51a9f2d9b4dfca5f53d23",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8761,
      "upload_time": "2020-11-02T17:24:34",
      "upload_time_iso_8601": "2020-11-02T17:24:34.882457Z",
      "url": "https://files.pythonhosted.org/packages/e9/de/b31f0cc1536646903856516474ed1306e9953e6f12f9c121886b6969596a/dataclassframe-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "38562d7339c7c6139de751a89ac3a0e7fb2701e1c5dd5dfd52242529b764f1d8",
        "md5": "bb610b12ff16d3c20611b6cf7c86402d",
        "sha256": "0a12255d8c3e0f2bfa5ac711b94a97c5a6dba7ee48a44e323509d6990749a0ca"
      },
      "downloads": -1,
      "filename": "dataclassframe-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bb610b12ff16d3c20611b6cf7c86402d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 12526,
      "upload_time": "2020-11-02T17:24:38",
      "upload_time_iso_8601": "2020-11-02T17:24:38.301184Z",
      "url": "https://files.pythonhosted.org/packages/38/56/2d7339c7c6139de751a89ac3a0e7fb2701e1c5dd5dfd52242529b764f1d8/dataclassframe-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}