{
  "info": {
    "author": "hirorich",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# moray\n>**<span>README</span>.md is a translation of README_jp.md.<br />So, there may be a mistranslation.**\n\n- Package for creating HTML GUI using Python modules and JavaScript.\n- Managing Python functions in modules.\n\n***\n## Contents\n- [Install](#install)\n- [Directory Structure](#directory-structure)\n- [Usage](#usage)\n  - [Starting the app](#starting-the-app)\n  - [App options](#app-options)\n  - [Call Python from JavaScript](#call-python-from-javascript)\n  - [Call JavaScript from Python](#call-javascript-from-python)\n  - [Abnormal exit handler](#abnormal-exit-handler)\n  - [Logging](#logging)\n- [Packages using](#packages-using)\n\n***\n## Install\n- Execute the following command.\n  ```\n  pip install moray\n  ```\n\n***\n## Directory Structure\n- The moray application consists of a front-end with .html, .js, .css, etc., and a back-end with Python scripts.\n- **/moray.js and /moray/ cannot be used, because moray use them.**\n  ```\n  python_script.py     <-- Python script\n  web/                 <-- static web directory\n    index.html\n    css/\n      style.css\n    img/\n      logo.png\n  ```\n\n***\n## Usage\n### Starting the app\n- Suppose you put all the frontend files in `web` directory, including your start page `index.html`, then the app is started like this.\n  ``` python\n  import moray\n  \n  moray.run('web')\n  ```\n    - This will open a browser to `http://localhost:<automatically picked port>/index.html`.\n\n### App options\n- Additional options can be passed to `moray.run()` as keyword arguments.\n  - start_page\n    - str type (Default: '')\n    - Your start page.\n      - If `''`, index.html will be opened.\n  - host\n    - str type (Default: 'localhost')\n    - Hostname to use for the Bottle server.\n      - `'localhost'` or IP address is allowed.\n  - port\n    - int type (Default: 0)\n    - Port to use for the Bottle server.\n      - `0` or a value between `1025` and `65535` is allowed.\n  - browser\n    - str type (Default: 'chrome')\n    - Browser to use.\n      - Only `'chrome'` can be used.\n  - cmdline_args\n    - list of str type (Default: [])\n    - Command line arguments to start the browser.\n  - position\n    - tuple of 2 int type (Default: None)\n    - The (left, top) of the main window in pixels.\n      - If not specified, `None`.\n  - size\n    - tuple of 2 int type (Default: None)\n    - The (width, height) of the main window in pixels.\n      - If not specified, `None`.\n\n- Example\n  ``` python\n  import moray\n  \n  moray.run(\n      'web',\n      start_page = 'index.html',\n      host = 'localhost',\n      port = 8000,\n      browser = 'chrome',\n      cmdline_args = ['--disable-http-cache', '--incognito'],\n      position = (400, 200),\n      size = (800, 600)\n  )\n  ```\n\n### Call Python from JavaScript\n- **New thread is created for each Python call.**\n- py_module.py\n  ``` python\n  import moray\n  \n  # Expose by decorator so that it can be called from JavaScript.\n  @moray.expose\n  def py_func(arg):\n      return 'result'\n  ```\n- js_module.js\n  ``` javascript\n  // Import exposed Python function.\n  // import {<function name>} from '/moray/py/<module name>.js'\n  import {py_func} from '/moray/py/py_module.js'\n  \n  // Call Python function.\n  py_func('arg')\n  \n  // To get the return value,\n  // use \"then\" and \"catch\" of Promise object.\n  py_func('arg').then(\n      // Execution result is returned.\n      v => ・・・\n  ).catch(\n      // Exception message is returned.\n      v => ・・・\n  )\n  ```\n\n### Call JavaScript from Python\n- **If a Python function is called within a JavaScript function, it will be in a different thread than the calling Python function.**\n- js_module.js\n  ``` javascript\n  import moray from '/moray.js'\n  import {py_func} from '/moray/py/py_module.js'\n  \n  // Expose so that it can be called from Python.\n  const js_func(arg) = function() {\n      return 'result'\n  }\n  moray.expose(js_func)\n  \n  // Call Python function.\n  py_func()\n  ```\n- py_module.py\n  ``` python\n  import moray\n  \n  @moray.expose\n  def py_func():\n      \n      # Call JavaScript function.\n      moray.js.js_func('arg')\n      \n      try:\n          # To get the return value,\n          # use \"moray.js.<function name>(<arguments>)()\".\n          result = moray.js.js_func('arg')()\n      except Exception as e:\n          # When an exception is raised in JavaScript.\n          print(e)\n  ```\n\n### Abnormal exit handler\n- `\"moray.onclose\"` is handler that moray end.\n- js_module.js\n  ``` javascript\n  import moray from '/moray.js'\n  \n  // Define a function in \"moray.onclose\".\n  // \"evt\" is null.\n  moray.onclose = function(evt) {\n      alert('moray closed');\n  }\n  ```\n\n### Logging\n- `moray` uses `logging` module to logging.\n- So you can set up a logger for `\"moray\"` to logging.\n- Example\n  ``` python\n  import logging\n  \n  format = '[%(asctime)s][%(levelname)s] %(message)s (at %(name)s:%(lineno)s)'\n  formatter = logging.Formatter(format)\n  \n  handler = logging.StreamHandler()\n  handler.setLevel(logging.DEBUG)\n  handler.setFormatter(formatter)\n  \n  logger = logging.getLogger('moray')\n  logger.addHandler(handler)\n  logger.setLevel(logging.INFO)\n  ```\n\n***\n## Packages using\n- [bottle-websocket](https://pypi.org/project/bottle-websocket/)\n  - [MIT License](https://github.com/zeekay/bottle-websocket/blob/master/LICENSE)\n- [requests](https://pypi.org/project/requests/)\n  - [Apache License 2.0](https://github.com/psf/requests/blob/main/LICENSE)\n- [Jinja2](https://pypi.org/project/Jinja2/)\n  - [BSD License (BSD-3-Clause)](https://github.com/pallets/jinja/blob/main/LICENSE.rst)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hirorich/moray",
    "keywords": "gui,html,javascript",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "moray",
    "package_url": "https://pypi.org/project/moray/",
    "platform": "",
    "project_url": "https://pypi.org/project/moray/",
    "project_urls": {
      "Bug Tracker": "https://github.com/hirorich/moray/issues",
      "Homepage": "https://github.com/hirorich/moray"
    },
    "release_url": "https://pypi.org/project/moray/0.0.1/",
    "requires_dist": [
      "bottle-websocket",
      "requests",
      "Jinja2"
    ],
    "requires_python": ">=3.9",
    "summary": "Package for creating HTML GUI using Python modules and JavaScript.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11590057,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "692ce230e691c20f7ccbc6bdcec0c227586d9d2708edfa74ce56704c4be99e4a",
          "md5": "90bf28bd7d4fef84092cfabdcecd1f5e",
          "sha256": "265f36aa580eb3c4ed06c6ddfc82a204aa0af26d510bd7f1ce8fc43313cb567f"
        },
        "downloads": -1,
        "filename": "moray-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90bf28bd7d4fef84092cfabdcecd1f5e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 19807,
        "upload_time": "2021-09-30T04:55:53",
        "upload_time_iso_8601": "2021-09-30T04:55:53.786647Z",
        "url": "https://files.pythonhosted.org/packages/69/2c/e230e691c20f7ccbc6bdcec0c227586d9d2708edfa74ce56704c4be99e4a/moray-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2cb2bf1a7a6e88498c6fbc0a74b128e37aaa7a2a75a1df617f6696e791feecc",
          "md5": "28cf5bdc3b1d43aa4ee8e9d6f8f2b994",
          "sha256": "03d5fd0731407d22c9b40727f0ee2a80f8c121d36a5d17de356ab41cf6452387"
        },
        "downloads": -1,
        "filename": "moray-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "28cf5bdc3b1d43aa4ee8e9d6f8f2b994",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 17541,
        "upload_time": "2021-09-30T04:55:55",
        "upload_time_iso_8601": "2021-09-30T04:55:55.296164Z",
        "url": "https://files.pythonhosted.org/packages/f2/cb/2bf1a7a6e88498c6fbc0a74b128e37aaa7a2a75a1df617f6696e791feecc/moray-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "692ce230e691c20f7ccbc6bdcec0c227586d9d2708edfa74ce56704c4be99e4a",
        "md5": "90bf28bd7d4fef84092cfabdcecd1f5e",
        "sha256": "265f36aa580eb3c4ed06c6ddfc82a204aa0af26d510bd7f1ce8fc43313cb567f"
      },
      "downloads": -1,
      "filename": "moray-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "90bf28bd7d4fef84092cfabdcecd1f5e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 19807,
      "upload_time": "2021-09-30T04:55:53",
      "upload_time_iso_8601": "2021-09-30T04:55:53.786647Z",
      "url": "https://files.pythonhosted.org/packages/69/2c/e230e691c20f7ccbc6bdcec0c227586d9d2708edfa74ce56704c4be99e4a/moray-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f2cb2bf1a7a6e88498c6fbc0a74b128e37aaa7a2a75a1df617f6696e791feecc",
        "md5": "28cf5bdc3b1d43aa4ee8e9d6f8f2b994",
        "sha256": "03d5fd0731407d22c9b40727f0ee2a80f8c121d36a5d17de356ab41cf6452387"
      },
      "downloads": -1,
      "filename": "moray-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "28cf5bdc3b1d43aa4ee8e9d6f8f2b994",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 17541,
      "upload_time": "2021-09-30T04:55:55",
      "upload_time_iso_8601": "2021-09-30T04:55:55.296164Z",
      "url": "https://files.pythonhosted.org/packages/f2/cb/2bf1a7a6e88498c6fbc0a74b128e37aaa7a2a75a1df617f6696e791feecc/moray-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}