{
  "info": {
    "author": "The ReproMan Team and Contributors",
    "author_email": "team@reproman.org",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# ReproMan\n\n[![Supports python version](https://img.shields.io/pypi/pyversions/datalad)](https://pypi.org/project/datalad/)\n[![GitHub release](https://img.shields.io/github/release/ReproNim/reproman.svg)](https://GitHub.com/ReproNim/reproman/releases/)\n[![PyPI version fury.io](https://badge.fury.io/py/reproman.svg)](https://pypi.python.org/pypi/reproman/)\n[![Travis tests status](https://secure.travis-ci.org/ReproNim/reproman.png?branch=master)](https://travis-ci.org/ReproNim/reproman)\n[![codecov.io](https://codecov.io/github/ReproNim/reproman/coverage.svg?branch=master)](https://codecov.io/github/ReproNim/reproman?branch=master)\n[![Documentation](https://readthedocs.org/projects/reproman/badge/?version=latest)](https://reproman.readthedocs.io/en/latest/?badge=latest)\n\n\nReproMan aims to simplify creation and management of computing environments\nin Neuroimaging.  While concentrating on Neuroimaging use-cases, it is\nby no means is limited to this field of science and tools will find\nutility in other fields as well.\n\n# Status\n\nReproMan is under rapid development. While\nthe code base is still growing the focus is increasingly shifting towards\nrobust and safe operation with a sensible API. There has been no major public\nrelease yet, as organization and configuration are still subject of\nconsiderable reorganization and standardization. \n\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md) if you are interested in\ninternals and/or contributing to the project.\n\n# Installation\n\nReproMan requires Python 3 (>= 3.6).\n\n## Linux'es and OSX (Windows yet TODO) - via pip\n\nBy default, installation via pip (`pip install reproman`) installs core functionality of reproman\nallowing for managing datasets etc.  Additional installation schemes\nare available, so you could provide enhanced installation via\n`pip install 'reproman[SCHEME]'` where `SCHEME` could be\n\n- tests\n     to also install dependencies used by unit-tests battery of the reproman\n- full\n     to install all of possible dependencies, e.g. [DataLad](http://datalad.org)\n\nFor installation through `pip` you would need some external dependencies\nnot shipped from it (e.g. `docker`, `singularity`, etc.) for which please refer to\nthe next section.  \n\n## Debian-based systems\n\nOn Debian-based systems we recommend to enable [NeuroDebian](http://neuro.debian.net)\nfrom which we will soon provide recent releases of ReproMan.  We will also provide backports of\nall necessary packages from that repository.\n\n\n## Dependencies\n\nOur `setup.py` and corresponding packaging describes all necessary dependencies.\nOn Debian-based systems we recommend to enable [NeuroDebian](http://neuro.debian.net)\nsince we use it to provide backports of recent fixed external modules we\ndepend upon.  Additionally, if you would\nlike to develop and run our tests battery see [CONTRIBUTING.md](CONTRIBUTING.md)\nregarding additional dependencies.\n\n# A typical workflow for `reproman run`\n\nThis example is heavily based on the [\"Typical workflow\"](https://github.com/ReproNim/containers/#a-typical-workflow)\nexample created for [///repronim/containers](https://github.com/ReproNim/containers/)\nwhich we refer you to discover more about YODA principles etc.  In this reproman example we will\nfollow exactly the same goal -- running MRIQC on a sample dataset -- but this time utilizing\nReproMan's ability to run computation remotely. DataLad and `///repronim/containers` will\nstill be used for data and containers logistics, while reproman will establish a little [HTCondor](https://research.cs.wisc.edu/htcondor/)\ncluster in the AWS cloud, run the analysis, and fetch the results.\n\n## Step 1: Create the HTCondor AWS EC2 cluster\n\nIf it is the first time you are using ReproMan to interact with AWS cloud services, you should first provide\nReproMan with secret credentials to interact with AWS. For that edit its configuration file\n(`~/.config/reproman/reproman.cfg` on Linux, `~/Library/Application Support/reproman/reproman.cfg` on OSX)\n\n    [aws]\n    access_key_id = ...\n    secret_access_key = ...\n\n**Disclaimer/Warning: Never share or post those secrets publicly.**\n\nfilling out the `...`s.  If `reproman` fails to find this information, error message `Unable to locate credentials` will appear.\n\nRun (need to be done once, makes resource available for `reproman login` or `reproman run`):\n\n```shell\nreproman create aws-hpc2 -t aws-condor -b size=2 -b instance_type=t2.medium\n```\nto create a new ReproMan resource: 2 AWS EC2 instances, with HTCondor installed (we use [NITRC-CE](https://www.nitrc.org/projects/nitrc_es/) instances).\n\n**Disclaimer/Warning: It is important to monitor your cloud resources in the cloud provider dashboard(s)\nto ensure absent run away instances etc. to help avoid incuring heavy cost for used cloud services.**\n\n## Step 2: Create analysis DataLad dataset and run computation on aws-hpc2\n\nFollowing script is an exact replica from [///repronim/containers](https://github.com/ReproNim/containers/#a-typical-workflow)\nwhere only the `datalad containers-run` command, which fetches data locally and runs computation locally and serially, is replaced with\n`reproman run` which publishes dataset (without data) to the remote resource, fetches the data, runs computation\nvia HTCondor in parallel across 2 nodes, and then fetches results back:\n\n```shell\n#!/bin/sh\n(  # so it could be just copy pasted or used as a script\nPS4='> '; set -xeu  # to see what we are doing and exit upon error\n# Work in some temporary directory\ncd $(mktemp -d ${TMPDIR:-/tmp}/repro-XXXXXXX)\n# Create a dataset to contain mriqc output\ndatalad create -d ds000003-qc -c text2git\ncd ds000003-qc\n# Install our containers collection:\ndatalad install -d . ///repronim/containers\n# (optionally) Freeze container of interest to the specific version desired\n# to facilitate reproducibility of some older results\ndatalad run -m \"Downgrade/Freeze mriqc container version\" \\\n    containers/scripts/freeze_versions bids-mriqc=0.16.0\n# Install input data:\ndatalad install -d . -s https://github.com/ReproNim/ds000003-demo sourcedata\n# Setup git to ignore workdir to be used by pipelines\necho \"workdir/\" > .gitignore && datalad save -m \"Ignore workdir\" .gitignore\n# Execute desired preprocessing in parallel across two subjects\n# on remote AWS EC2 cluster, creating a provenance record\n# in git history containing all condor submission scripts and logs, and\n# fetching them locally\nreproman run -r aws-hpc2 \\\n   --sub condor --orc datalad-pair \\\n   --jp \"container=containers/bids-mriqc\" --bp subj=02,13 --follow \\\n   --input 'sourcedata/sub-{p[subj]}' \\\n   --output . \\\n   '{inputs}' . participant group -w workdir --participant_label '{p[subj]}'\n)\n```\n[ReproMan: Execute](https://reproman.readthedocs.io/en/latest/execute.html) documentation section\nprovides more information on the underlying principles behind [`reproman run`](https://reproman.readthedocs.io/en/latest/generated/man/reproman-run.html)\ncommand.\n\n## Step 3: Remove resource\n\nWhenever everything is computed and fetched, and you are satisfied with the results, use `reproman delete aws-hpc2` to terminate\nremote cluster in AWS, to not cause unnecessary charges.\n\n# License\n\nMIT/Expat\n\n\n# Disclaimer\n\nIt is in a beta stage -- majority of the functionality is usable but\nDocumentation and API enhancements is WiP to make it better.  Please do not be\nshy of filing an issue or a pull request. See [CONTRIBUTING.md](CONTRIBUTING.md)\nfor the guidance.\n\n[Git]: https://git-scm.com\n[Git-annex]: http://git-annex.branchable.com",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "reproman",
    "package_url": "https://pypi.org/project/reproman/",
    "platform": "",
    "project_url": "https://pypi.org/project/reproman/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/reproman/0.4.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Neuroimaging Computational Environments Manager",
    "version": "0.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9292346,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "280b6818847ed59e2339c07c5eb5136706350c8b98df2f2c4193b41068df5e83",
          "md5": "990634a01741a006d0441e066a2dc8fd",
          "sha256": "b29ec051ea0257f9b0840ce171a0fd6f4d0ec323b100ad542edb3bcadf16a8a2"
        },
        "downloads": -1,
        "filename": "reproman-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "990634a01741a006d0441e066a2dc8fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 758180,
        "upload_time": "2019-09-11T19:03:19",
        "upload_time_iso_8601": "2019-09-11T19:03:19.203055Z",
        "url": "https://files.pythonhosted.org/packages/28/0b/6818847ed59e2339c07c5eb5136706350c8b98df2f2c4193b41068df5e83/reproman-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6080d5dd704dc492dff98175ad13bf783dbb193cfc1ae0ea547dfcaf3a4733b8",
          "md5": "f2791d40c8fc672058db4e3ba1f36574",
          "sha256": "97cef041a54e7ff1737cff54a42b9af38549766db046e31743b5098696e21043"
        },
        "downloads": -1,
        "filename": "reproman-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f2791d40c8fc672058db4e3ba1f36574",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 759278,
        "upload_time": "2019-10-18T20:42:48",
        "upload_time_iso_8601": "2019-10-18T20:42:48.218215Z",
        "url": "https://files.pythonhosted.org/packages/60/80/d5dd704dc492dff98175ad13bf783dbb193cfc1ae0ea547dfcaf3a4733b8/reproman-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2b5d9ad3fe4d18f6317ad63b115f7287379fe3b4b97aadc0266f8f120d2ffdf",
          "md5": "2c61095e0191b979e7cdf8b2ae6ca580",
          "sha256": "68435ae07c66c27d48816a835ca262f7a082f0c962e011445fac92b87a94a28a"
        },
        "downloads": -1,
        "filename": "reproman-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2c61095e0191b979e7cdf8b2ae6ca580",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 786799,
        "upload_time": "2020-10-21T17:14:47",
        "upload_time_iso_8601": "2020-10-21T17:14:47.905896Z",
        "url": "https://files.pythonhosted.org/packages/d2/b5/d9ad3fe4d18f6317ad63b115f7287379fe3b4b97aadc0266f8f120d2ffdf/reproman-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52f58f24d06f74c1201ec56e449f7bc443416179feafcae18073e4128d5f8c1e",
          "md5": "0049d7b2db0414cc316bc4b4b6e0c533",
          "sha256": "38d0bb7ae4ab90cebcebe37d58b883766cc5d054938e527ed6cab5b9bda4d894"
        },
        "downloads": -1,
        "filename": "reproman-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0049d7b2db0414cc316bc4b4b6e0c533",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 788834,
        "upload_time": "2021-01-26T17:53:57",
        "upload_time_iso_8601": "2021-01-26T17:53:57.387177Z",
        "url": "https://files.pythonhosted.org/packages/52/f5/8f24d06f74c1201ec56e449f7bc443416179feafcae18073e4128d5f8c1e/reproman-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63dbdc75c6ddd8a35ff32e9a3739c5ead060ca02ff8b9e90b22241afe9f9a2f6",
          "md5": "cfadd0347a16b800a95a6f4681d19077",
          "sha256": "845e3ac09013c40b70bf6a4996fa320e80e51efa01231433f5aa12518c0d1687"
        },
        "downloads": -1,
        "filename": "reproman-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cfadd0347a16b800a95a6f4681d19077",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 794373,
        "upload_time": "2021-02-02T04:24:57",
        "upload_time_iso_8601": "2021-02-02T04:24:57.754832Z",
        "url": "https://files.pythonhosted.org/packages/63/db/dc75c6ddd8a35ff32e9a3739c5ead060ca02ff8b9e90b22241afe9f9a2f6/reproman-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "63dbdc75c6ddd8a35ff32e9a3739c5ead060ca02ff8b9e90b22241afe9f9a2f6",
        "md5": "cfadd0347a16b800a95a6f4681d19077",
        "sha256": "845e3ac09013c40b70bf6a4996fa320e80e51efa01231433f5aa12518c0d1687"
      },
      "downloads": -1,
      "filename": "reproman-0.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "cfadd0347a16b800a95a6f4681d19077",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 794373,
      "upload_time": "2021-02-02T04:24:57",
      "upload_time_iso_8601": "2021-02-02T04:24:57.754832Z",
      "url": "https://files.pythonhosted.org/packages/63/db/dc75c6ddd8a35ff32e9a3739c5ead060ca02ff8b9e90b22241afe9f9a2f6/reproman-0.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}