{
  "info": {
    "author": "Gavin Chan",
    "author_email": "gavincyi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "===============\nAuto deprecator\n===============\n\n\n.. image:: https://img.shields.io/pypi/v/auto_deprecator.svg\n        :target: https://pypi.python.org/pypi/auto-deprecator\n\n.. image:: https://travis-ci.org/auto-deprecator/auto-deprecator.svg\n        :target: https://travis-ci.org/auto-deprecator/auto-deprecator\n\n.. image:: https://readthedocs.org/projects/auto-deprecator/badge/?version=latest\n        :target: https://auto-deprecator.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n.. image:: https://img.shields.io/pypi/dm/auto-deprecator.svg\n\n\nDeprecation toolkit in Python\n\n* Free software: MIT license\n* Documentation: https://auto-deprecator.readthedocs.io.\n\n\nHow does it work?\n-----------------\n\nThe library provides the full cycle to deprecate a function in the following ways\n\n.. image:: https://raw.githubusercontent.com/auto-deprecator/auto-deprecator/master/docs/cycle.png\n\nFor example, a function called ``old_hello_world`` should be deprecated in the version 2.0.0, while the current version of the library is 1.0.0.\n\nAdd a decorator ``deprecate`` above the function like the below can manage the mentioned deprecation cycle.\n\n.. code-block:: python\n\n  from auto_deprecator import deprecate\n\n\n  @deprecate(expiry='2.0.0', current='1.9.0')\n  def old_hello_world():\n      return print(\"Hello world!\")\n\n\n  def hello_world():\n      return print(\"Hello world again!\")\n\n\nYou can also suggest the replacing function / method. For details, please refer to the section `Provide hints to users`_.\n\n\nWarning Stage\n#############\n\nAlert the users the deprecation time\n====================================\n\nWhen the user calls the methods or initializes the objects which will be deprecated \nin the next version or on an expected date, the user should receive the warning of\nthe future deprecation but get the return in success. The default warning handler is to throw a ``DeprecationWarning`` and the handle method can be customized in the section `Customize the deprecation handling`_\n\n.. code-block:: python\n\n  >>> old_hello_world()\n  Hello world!\n  DeprecationWarning: The function \"old_hello_world\" will be deprecated on version 2.0.0\n\n\nTest as if deprecated\n=====================\n\nBefore the component is deprecated, unit / integration testing should be run\nto ensure the deprecation does not break the existing flow. Pass in the environment\nvariables in the testing to simulate that the version is deployed.\n\n.. code-block:: console\n\n  (bash) hello-world-app\n  Hello world!\n  DeprecationWarning: The function \"old_hello_world\" will be deprecated in version 2.0.0\n\n.. code-block:: console\n\n  (bash) DEPRECATED_VERSION=2.0.0 hello-world-app\n  Traceback (most recent call last):\n   ...\n  RuntimeError: The function \"old_hello_world\" is deprecated in version 2.0.0\n\n\nExpired Stage\n#############\n\nIf the current version has reached the function expiry version, \ncalling the deprecated function will trigger the exception by default.\n\n\n.. code-block:: python\n\n  from auto_deprecator import deprecate\n\n  __version__ = '2.0.0'\n\n\n  @deprecate(expiry='2.0.0', current=__version__)\n  def old_hello_world():\n      return print(\"Hello world!\")\n\n\nFor example, the above function is called by the downstream\nprocess ``after-hello-world``. The owner of the process is not\naware that the function should be deprecated and replaced by\nanother function, and the process is crashed by the default\nexception. To work around the exception in the production,\nbefore a proper fix is provided, the environment variable\n``DEPRECATED_VERSION`` can be injected in the downstream process.\n\n\n.. code-block:: bash\n\n  DEPRECATED_VERSION=1.9 after-hello-world\n\n\nCleaning Stage\n##############\n\n\nAutomatic deprecation before release\n====================================\n\nDeprecating the functions is no longer a manual work. Every time before release,\nrun the command ``auto-deprecate`` to remove the functions deprecated in the coming\nversion.\n\n.. code-block:: console\n\n  $ auto-deprecate hello_world.py --version 2.0.0\n\nThe command removes the function ``old_hello_world`` from the source codes as the expiry version is 2.0.0. Also, if the source file does not require to import the ``auto-deprecate`` anymore (as all the functions have already been deprecated), the import line will be removed as well.\n\n.. code-block:: console\n\n  $ git difftool -y -x sdiff\n  from auto_deprecator import deprecate                         <\n                                                                <\n                                                                <\n  @deprecate(expiry='2.0.0', current='1.9.0')                   <\n  def old_hello_world():                                        <\n      return print(\"Hello world!\")                              <\n                                                                <\n                                                                <\n  def hello_world():                                              def hello_world():\n      return print(\"Hello world again!\")                        /     return print(\"Hello world again!\")\n\n\nThe function with a comment line to state the expiry version is\nanother way to inform the script ``auto-deprecate`` to remove the\npart of the code when it is expired. For example,\n\n.. code-block:: python\n\n    def old_hello_world():\n        # auto-deprecate: expiry=2.0.0\n        print('hello world')\n\nFor the details of the comment hints, please refer to the section `Auto deprecation hints in comments`_.\n\nInstallation\n------------\n\nThe library can be easily installed with pip\n\n.. code-block:: console\n\n  pip install auto-deprecator\n\n\n\nAlternative Installation\n------------------------\n\nIf the auto-deprecator is included and the functions are\nwell deprecated (following the whole cycle mentioned above),\nyour software does not need auto-deprecator anymore. For\ndevelopers who are not comfortable to include a library not\nalways in use as a dependency, they can just clone the source\ncode into your project instead.\n\nFor example, your Python project contains a module called\n\"utils\" to maintain all the utility functions.\n\n.. code-block:: console\n\n  .\n  ├── setup.py\n  └── test_py_project\n      ├── cli.py\n      ├── __init__.py\n      ├── test_py_project.py\n      └── utils\n          └── __init__.py\n\nWith the bash command \"curl\",\n\n.. code-block:: console\n\n  curl https://raw.githubusercontent.com/auto-deprecator/auto-deprecator/develop/auto_deprecator/__init__.py -o $DEST\n\nthe source code of auto-deprecator can be cloned into the\ntarget directory, i.e. \"test_py_project/utils\" in the example\n\n.. code-block:: console\n\n  curl https://raw.githubusercontent.com/auto-deprecator/auto-deprecator/develop/auto_deprecator/__init__.py -o test_py_project/utils/auto_deprecator.py\n\n\nFeatures\n--------\n\nProvide hints to users\n######################\n\nProvide the parameter \"relocate\", the warning / error message will inform the user about \nthe relocated method.\n\n.. code-block:: python\n\n  @deprecate(expiry='2.1.0', current='2.0.0', relocate='new_compute_method')\n  def compute_method():\n      return 'hello world'\n\n.. code-block:: python\n\n  >>> old_hello_world()\n  Hello world!\n  DeprecationWarning: The function \"old_hello_world\" will be deprecated on version 2.0.0..\n                      Please use method / function \"new_compute_method\".\n\n\nImport current version from module name\n#######################################\n\nInstead of importing the version (``__version__``) in the module,\n\n.. code-block:: python\n\n  from your_package import __version__\n\n  @deprecate(expiry='2.1.0', current=__version__)\n  def compute_method():\n      return 'hello world'\n\nspecifying the module name, which includes the version attribute, can\nhelp maintain the source code in a clean manner.\n\n.. code-block:: python\n\n  @deprecate(expiry='2.1.0', version_module='your_package')\n  def compute_method():\n      return 'hello world'\n\nEspecially if the function is removed by the action ``auto-deprecate``,\nthe unused import will not be left in the module.\n\nCustomize the deprecation handling\n##################################\n\nBy default, the ``deprecate`` decorator raise ``DeprecationWarning`` for the future expiry and ``RuntimeError`` on the expiration. The behavior can be modified so as to fit in the infrastructure / production environment.\n\nFor example, the ``DeprecationWarning`` can be replaced by a simple print out by injecting a callable function into the parameter ``warn_handler``.\n\n.. code-block:: python\n\n  @deprecate(expiry='2.1.0', current='2.0.0', warn_handler=print)\n  def compute_method():\n      return 'hello world'\n\n\nSame for injecting a callable function into the parameter ``error_handler``, the behavior is replaced if the function is deprecated.\n\n\nAuto deprecation hints in comments\n##################################\n\nThe auto deprecation script handles not only the expiry parts wrapped by the decorator, but also those stated with comments.\nThe comment line in the format ``# auto-deprecate: expiry=<version>``\nin the scope of the function or class is treated same as the\ndecorator hints ``@deprecate(expiry=\"version\", ...)``.\n\nFor example, the below function will be removed\n\n.. code-block:: python\n\n    # hello_world.py\n\n\n    def old_hello_world():\n        # auto-deprecate: expiry=2.0.0\n        print('hello world')\n\nwhen the script is called with current version greater than 2.0.0\n\n.. code-block:: console\n\n    $ auto-deprecate hello_world.py --version 2.1.0\n\n\n=======\nHistory\n=======\n\n2020.4.0 (2020-04-23)\n---------------------\n\n* Support deprecation hints in comments\n* Simplify the project architecture\n\n2020.3.0 (2020-04-11)\n---------------------\n\n* Support automatic deprecation in the directory\n* Support customizing the deprecation handler\n\n2020.2.0 (2020-02-11)\n---------------------\n\n* Introduce parameter version_module in the deprecate decorator, to\n  import the version dynamically\n* Removed magic version import\n\n2010.1.0, 2010.1.1, 2010.1.2 (2020-01-21)\n-----------------------------------------\n\n* Support alerting the users the deprecate version\n* Support testing with environment variables\n* Support automatically deprecate the expiry source code\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/auto-deprecator/auto-deprecator",
    "keywords": "auto_deprecator",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "auto-deprecator",
    "package_url": "https://pypi.org/project/auto-deprecator/",
    "platform": "",
    "project_url": "https://pypi.org/project/auto-deprecator/",
    "project_urls": {
      "Homepage": "https://github.com/auto-deprecator/auto-deprecator"
    },
    "release_url": "https://pypi.org/project/auto-deprecator/2020.5.0/",
    "requires_dist": [
      "pytest (>=3) ; extra == 'test'"
    ],
    "requires_python": ">=3.5",
    "summary": "Python decorator and command to automate deprecating components",
    "version": "2020.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7208854,
  "releases": {
    "2020.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ba37fd8d13e1e94fb7ec92826bfbc4ef26634732669167c56ed373181bac5e7",
          "md5": "c246fba106aa2066841eaf15ea1101f4",
          "sha256": "e3909ea2b482c7475f715f9bf6815ee701d6f8609bd8c30407cc4702cdad29c5"
        },
        "downloads": -1,
        "filename": "auto_deprecator-2020.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c246fba106aa2066841eaf15ea1101f4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 6644,
        "upload_time": "2020-01-20T16:17:36",
        "upload_time_iso_8601": "2020-01-20T16:17:36.686091Z",
        "url": "https://files.pythonhosted.org/packages/8b/a3/7fd8d13e1e94fb7ec92826bfbc4ef26634732669167c56ed373181bac5e7/auto_deprecator-2020.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db758593fa950c493fc0b8114599c90655c5b26755af1b7b750c365c34c04485",
          "md5": "736f99355f83d1db40b9462b3c1cbed0",
          "sha256": "31717ab3cbc53a970f2b149347ee0bd5c841db37dbb70c00cb3426a1fb0afb3b"
        },
        "downloads": -1,
        "filename": "auto_deprecator-2020.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "736f99355f83d1db40b9462b3c1cbed0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 14540,
        "upload_time": "2020-01-20T16:17:39",
        "upload_time_iso_8601": "2020-01-20T16:17:39.314783Z",
        "url": "https://files.pythonhosted.org/packages/db/75/8593fa950c493fc0b8114599c90655c5b26755af1b7b750c365c34c04485/auto_deprecator-2020.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93e39bd7a2020a05293d50aa4aff399c1938b0bf3b51a9b37a144a6933c8abbe",
          "md5": "0f002fc51367f44fe10408dc889215d8",
          "sha256": "f13d6d9100c28499426578bbd24cc981444695fd97c92bdc0c54fd29027b1971"
        },
        "downloads": -1,
        "filename": "auto_deprecator-2020.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f002fc51367f44fe10408dc889215d8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 7420,
        "upload_time": "2020-01-30T15:39:59",
        "upload_time_iso_8601": "2020-01-30T15:39:59.510266Z",
        "url": "https://files.pythonhosted.org/packages/93/e3/9bd7a2020a05293d50aa4aff399c1938b0bf3b51a9b37a144a6933c8abbe/auto_deprecator-2020.1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8d8214ed8ad3f8a9894708ae0e25492851a6375990744e39e140aa69ee12a6a",
          "md5": "3f9f6cd98b564d391944efb735e48002",
          "sha256": "b4382cd5e18917859b9c839c9bb77ea851faa0402ecdfcc7aa83ea53c8d55272"
        },
        "downloads": -1,
        "filename": "auto_deprecator-2020.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3f9f6cd98b564d391944efb735e48002",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 16558,
        "upload_time": "2020-01-30T15:40:01",
        "upload_time_iso_8601": "2020-01-30T15:40:01.048625Z",
        "url": "https://files.pythonhosted.org/packages/a8/d8/214ed8ad3f8a9894708ae0e25492851a6375990744e39e140aa69ee12a6a/auto_deprecator-2020.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b7cb62331d0e4c5bc1331506a664a8aa773cf79e6e90659a18705f677cf370f",
          "md5": "cdd9798ff5ba1d41cd466e02b644da1a",
          "sha256": "0197ff0df5175155441bb1d7b613cc4142e0881c6a17d1d0ba3d846398bbad7d"
        },
        "downloads": -1,
        "filename": "auto_deprecator-2020.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cdd9798ff5ba1d41cd466e02b644da1a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 7839,
        "upload_time": "2020-02-10T17:59:20",
        "upload_time_iso_8601": "2020-02-10T17:59:20.070382Z",
        "url": "https://files.pythonhosted.org/packages/8b/7c/b62331d0e4c5bc1331506a664a8aa773cf79e6e90659a18705f677cf370f/auto_deprecator-2020.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ac91d55cffdec90aa67b6de529a4f26ae6f696c5284684cd7d46dbd915aebc7",
          "md5": "0d1b645dd276724233732f5dc74cb9eb",
          "sha256": "5591de95dc2f8aff620bbe462006d98e784f1a8544ac95530d83d4865bcd228c"
        },
        "downloads": -1,
        "filename": "auto_deprecator-2020.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0d1b645dd276724233732f5dc74cb9eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 17308,
        "upload_time": "2020-02-10T17:59:22",
        "upload_time_iso_8601": "2020-02-10T17:59:22.087544Z",
        "url": "https://files.pythonhosted.org/packages/5a/c9/1d55cffdec90aa67b6de529a4f26ae6f696c5284684cd7d46dbd915aebc7/auto_deprecator-2020.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf57a23b237c43c55cb76a7adabefa5bf4bb7bf18db5243785be17646eabe2a0",
          "md5": "5af495f73db854b3f282200751f63f36",
          "sha256": "9540691527992d9d7ea0e1d6fe47ad3cfe66f521b9de68d0a20968c8edfcabf4"
        },
        "downloads": -1,
        "filename": "auto_deprecator-2020.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5af495f73db854b3f282200751f63f36",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 8648,
        "upload_time": "2020-04-11T15:50:00",
        "upload_time_iso_8601": "2020-04-11T15:50:00.538606Z",
        "url": "https://files.pythonhosted.org/packages/bf/57/a23b237c43c55cb76a7adabefa5bf4bb7bf18db5243785be17646eabe2a0/auto_deprecator-2020.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0772cd9226250b6fb0fd046d35b906e6642789729ac9c518034713d18e52c68",
          "md5": "7555cf926b26223998c99cc927ffa68c",
          "sha256": "5c8c47189fe2c64d345f3d918c20546a7c122949fabea80704e29185fdf4b8e2"
        },
        "downloads": -1,
        "filename": "auto_deprecator-2020.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7555cf926b26223998c99cc927ffa68c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 52787,
        "upload_time": "2020-04-11T15:50:02",
        "upload_time_iso_8601": "2020-04-11T15:50:02.695801Z",
        "url": "https://files.pythonhosted.org/packages/c0/77/2cd9226250b6fb0fd046d35b906e6642789729ac9c518034713d18e52c68/auto_deprecator-2020.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d02849dea4d724b1dafef27257213dcf3f69840ae630ecca18467dc0c50d9066",
          "md5": "9baec3d01972ed67cad21d0cd5a7f340",
          "sha256": "69da8f9036079dc44784cf52d9d9d192f3acae5bb2dca846f8fc79a564d1c942"
        },
        "downloads": -1,
        "filename": "auto_deprecator-2020.4.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9baec3d01972ed67cad21d0cd5a7f340",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 9520,
        "upload_time": "2020-04-22T18:20:16",
        "upload_time_iso_8601": "2020-04-22T18:20:16.125177Z",
        "url": "https://files.pythonhosted.org/packages/d0/28/49dea4d724b1dafef27257213dcf3f69840ae630ecca18467dc0c50d9066/auto_deprecator-2020.4.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afdfd50e0b6ed1f93b9634df87eba6003c45cd3b131544584ebf7a9c4c7046ae",
          "md5": "178e35f8e71d357d4f52eec0f2cd5f55",
          "sha256": "c798d23c83904788eb5607447285f15cda72dfc07947a6ae67a77d1645e39e41"
        },
        "downloads": -1,
        "filename": "auto_deprecator-2020.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "178e35f8e71d357d4f52eec0f2cd5f55",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 89753,
        "upload_time": "2020-04-22T18:20:18",
        "upload_time_iso_8601": "2020-04-22T18:20:18.133417Z",
        "url": "https://files.pythonhosted.org/packages/af/df/d50e0b6ed1f93b9634df87eba6003c45cd3b131544584ebf7a9c4c7046ae/auto_deprecator-2020.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3a0b5622df34d4af71e8484c67ecb7f0ed6399e4401957b275e1934ffeb7cc9",
          "md5": "df378cd3a762fdbfe2b014d5c2da5287",
          "sha256": "5e0cab71289ad8767bdc4fd65a33bb435f55136346317d805dcbbbbd23eb3183"
        },
        "downloads": -1,
        "filename": "auto_deprecator-2020.5.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df378cd3a762fdbfe2b014d5c2da5287",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 9596,
        "upload_time": "2020-05-10T14:49:47",
        "upload_time_iso_8601": "2020-05-10T14:49:47.079836Z",
        "url": "https://files.pythonhosted.org/packages/a3/a0/b5622df34d4af71e8484c67ecb7f0ed6399e4401957b275e1934ffeb7cc9/auto_deprecator-2020.5.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10ed53025cb0b850a67ced7104253b2d718385bea996ea436668f91a4c13134e",
          "md5": "dedc9439c635d93c7496adccbfe35004",
          "sha256": "bc6ebf0862e04da8c071216bdf56f9733a5c690f1504ea64808f3f0588e43a8c"
        },
        "downloads": -1,
        "filename": "auto_deprecator-2020.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dedc9439c635d93c7496adccbfe35004",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 89815,
        "upload_time": "2020-05-10T14:49:49",
        "upload_time_iso_8601": "2020-05-10T14:49:49.180397Z",
        "url": "https://files.pythonhosted.org/packages/10/ed/53025cb0b850a67ced7104253b2d718385bea996ea436668f91a4c13134e/auto_deprecator-2020.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3a0b5622df34d4af71e8484c67ecb7f0ed6399e4401957b275e1934ffeb7cc9",
        "md5": "df378cd3a762fdbfe2b014d5c2da5287",
        "sha256": "5e0cab71289ad8767bdc4fd65a33bb435f55136346317d805dcbbbbd23eb3183"
      },
      "downloads": -1,
      "filename": "auto_deprecator-2020.5.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "df378cd3a762fdbfe2b014d5c2da5287",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.5",
      "size": 9596,
      "upload_time": "2020-05-10T14:49:47",
      "upload_time_iso_8601": "2020-05-10T14:49:47.079836Z",
      "url": "https://files.pythonhosted.org/packages/a3/a0/b5622df34d4af71e8484c67ecb7f0ed6399e4401957b275e1934ffeb7cc9/auto_deprecator-2020.5.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10ed53025cb0b850a67ced7104253b2d718385bea996ea436668f91a4c13134e",
        "md5": "dedc9439c635d93c7496adccbfe35004",
        "sha256": "bc6ebf0862e04da8c071216bdf56f9733a5c690f1504ea64808f3f0588e43a8c"
      },
      "downloads": -1,
      "filename": "auto_deprecator-2020.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "dedc9439c635d93c7496adccbfe35004",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 89815,
      "upload_time": "2020-05-10T14:49:49",
      "upload_time_iso_8601": "2020-05-10T14:49:49.180397Z",
      "url": "https://files.pythonhosted.org/packages/10/ed/53025cb0b850a67ced7104253b2d718385bea996ea436668f91a4c13134e/auto_deprecator-2020.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}