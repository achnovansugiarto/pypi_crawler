{
  "info": {
    "author": "EnvKey",
    "author_email": "support@envkey.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Security",
      "Topic :: Security :: Cryptography"
    ],
    "description": "# publish testing package - do not use\n\n# envkey-python\n\nIntegrate [EnvKey](https://www.envkey.com) with your Python projects to keep API keys, credentials, and other configuration securely and automatically in sync for developers and servers.\n\nCompatible with Python 2 and 3.\n\n## Installation\n\n```bash\n$ pip install envkey\n```\n\nThen at the entry point of your application:\n\n```python\nimport envkey\n```\n\nFor **Django**, you should put the above in `manage.py` and `wsgi.py`. Also see the [note on casting below](#django-environ-casting) if you're migrating from `django-environ`.\n\n## Usage\n\nGenerate an `ENVKEY` in the [EnvKey App](https://github.com/envkey/envkey-app). Then set `ENVKEY=...`, either in a gitignored `.env` file in the root of your project (in development) or in an environment variable (on servers).\n\nNow all your EnvKey variables will be available in `os.environ`.\n\nOr as a bit of syntactic sugar to avoid needing to always import `os` alongside `envkey`, you can call `envkey.get`, which delegates to `os.environ.get`. For example:\n\n```python\nimport envkey\n\nmy_var = envkey.get(\"SOME_ENVKEY_VAR\")\n\n```\n\n### Errors\n\nThe package will throw an error if an `ENVKEY` is missing or invalid.\n\n### Example\n\nAssume you have `STRIPE_SECRET_KEY` set for the `development` environment in the EnvKey App. You generate a local development `ENVKEY`.\n\nIn your project's **gitignored** `.env` file:\n\n```bash\n# .env\nENVKEY=GsL8zC74DWchdpvssa9z-nk7humd7hJmAqNoA\n```\n\nIn `app.py`:\n\n```python\nstripe.api_key = os.environ['STRIPE_SECRET_KEY']\n```\n\nOr using the `envkey.get` sugar:\n\n```python\nstripe.api_key = envkey.get('STRIPE_SECRET_KEY')\n```\n\nNow `STRIPE_SECRET_KEY` will stay automatically in sync for all the developers on your team.\n\nFor a server, generate a server `ENVKEY` in the EnvKey App, then set the `ENVKEY` as an environment variable instead of putting it in a `.env` file.\n\nNow your servers will stay in sync as well. If you need to rotate your `STRIPE_SECRET_KEY` you can do it in a few seconds in the EnvKey App, restart your servers, and you're good to go. All your team's developers and all your servers will have the new value.\n\n### Overriding Vars\n\nThis package will not overwrite existing environment variables or additional variables set in a `.env` file. This can be convenient for customizing environments that otherwise share the same configuration. You can also use [sub-environments](https://blog.envkey.com/development-staging-production-and-beyond-85f26f65edd6) in the EnvKey App for this purpose.\n\n### Working Offline\n\nThis package caches your encrypted config in development so that you can still use it while offline. Your config will still be available (though possibly not up-to-date) the next time you lose your internet connection. If you do have a connection available, envkey will always load the latest config. Your cached encrypted config is stored in `$HOME/.envkey/cache`\n\nFor caching purposes, it's assumed you're in development mode when a `.env` file exists in the root of your project.\n\n### Disabling autoload\n\nIf you'd like to have more control over how your config is loaded, you can prevent the package from auto-loading on import by setting `ENVKEY_DISABLE_AUTOLOAD=1` either in your `.env` file or as an environment variable.\n\nYou can then load your config explicitly like this:\n\n```python\nimport envkey\n\nenvkey.load(cache_enabled=True, dot_env_enabled=True, dot_env_path=\".env\")\n```\n\nFor even more flexibility, you can just fetch your config as a dict (without setting it on `os.environ`) like this:\n\n```python\nimport envkey\nimport os\n\nconfig = envkey.fetch_env(os.environ['ENVKEY'], cache_enabled=True)\n```\n\n### django-environ casting\n\nIf you happen to be migrating from `django-environ` to EnvKey, watch out for the fact that EnvKey *does not* cast variables to booleans or any other non-string types as `django-environ` does. All variables set by EnvKey will be *strings* in accordance with the cross-platform environment variable standard. See: https://twitter.com/manishsinhaha/status/1265746057377361921\n\n## envkey-fetch binaries\n\nIf you look in the `ext` directory of this package, you'll find a number of `envkey-fetch` binaries for various platforms and architectures. These are output by the [envkey-fetch Go library](https://github.com/envkey/envkey-fetch). It contains EnvKey's core cross-platform fetching, decryption, verification, web of trust, redundancy, and caching logic. It is completely open source.\n\n## x509 error / ca-certificates\n\nOn a stripped down OS like Alpine Linux, you may get an `x509: certificate signed by unknown authority` error when this package attempts to load your config. [envkey-fetch](https://github.com/envkey/envkey-fetch) tries to handle this by including its own set of trusted CAs via [gocertifi](https://github.com/certifi/gocertifi), but if you're getting this error anyway, you can fix it by ensuring that the `ca-certificates` dependency is installed. On Alpine you'll want to run:\n```\napk add --no-cache ca-certificates\n```\n\n## Further Reading\n\nFor more on EnvKey in general:\n\nRead the [docs](https://docs.envkey.com).\n\nRead the [integration quickstart](https://docs.envkey.com/integration-quickstart.html).\n\nRead the [security and cryptography overview](https://security.envkey.com).\n\n## Need help? Have questions, feedback, or ideas?\n\nPost an [issue](https://github.com/envkey/envkey-python/issues) or email us: [support@envkey.com](mailto:support@envkey.com).\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/org2321/reponame",
    "keywords": "security,secrets management,configuration management,environment variables,configuration,python",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "darcy-bingley-wickham",
    "package_url": "https://pypi.org/project/darcy-bingley-wickham/",
    "platform": "",
    "project_url": "https://pypi.org/project/darcy-bingley-wickham/",
    "project_urls": {
      "Homepage": "https://github.com/org2321/reponame"
    },
    "release_url": "https://pypi.org/project/darcy-bingley-wickham/0.0.8/",
    "requires_dist": [
      "python-dotenv (>=0.13.0)"
    ],
    "requires_python": "",
    "summary": "publish testing package - do not use",
    "version": "0.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9137601,
  "releases": {
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05bf04126968541bd04324c29de00f127735b3cbbb6a31dff838b2f945d9b7ce",
          "md5": "86298c7b686de066b583eb6cd954f826",
          "sha256": "8763f20612b46fb4447e45da1b3340074cc56bac5ed86318800b937b394d41e5"
        },
        "downloads": -1,
        "filename": "darcy_bingley_wickham-0.0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86298c7b686de066b583eb6cd954f826",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11756904,
        "upload_time": "2021-01-14T20:24:13",
        "upload_time_iso_8601": "2021-01-14T20:24:13.786344Z",
        "url": "https://files.pythonhosted.org/packages/05/bf/04126968541bd04324c29de00f127735b3cbbb6a31dff838b2f945d9b7ce/darcy_bingley_wickham-0.0.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "787886ef1c6d4be09e57b273f3eb1b3ec70a74dfc26512d4b94dcaa2e9514f51",
          "md5": "5ae9cb50c489972bb50622c8a54d5593",
          "sha256": "ced7335c7c3e045030835eb34690d8104ef1b9cb9389b426714357826d401a8d"
        },
        "downloads": -1,
        "filename": "darcy_bingley_wickham-0.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ae9cb50c489972bb50622c8a54d5593",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11759156,
        "upload_time": "2021-01-14T21:09:29",
        "upload_time_iso_8601": "2021-01-14T21:09:29.305502Z",
        "url": "https://files.pythonhosted.org/packages/78/78/86ef1c6d4be09e57b273f3eb1b3ec70a74dfc26512d4b94dcaa2e9514f51/darcy_bingley_wickham-0.0.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a35b5fc606860d756cb9b4a4d20c959014dceb28d46c515b8e6f7afe5c32b2fa",
          "md5": "c74d2637d7f1b8c9c4b6f72fb819bb91",
          "sha256": "afc76889694cf8893d13c6ca49d9655cfbcba48665c73e047d8e1a9b11f7d212"
        },
        "downloads": -1,
        "filename": "darcy_bingley_wickham-0.0.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c74d2637d7f1b8c9c4b6f72fb819bb91",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11759172,
        "upload_time": "2021-01-14T21:11:05",
        "upload_time_iso_8601": "2021-01-14T21:11:05.443822Z",
        "url": "https://files.pythonhosted.org/packages/a3/5b/5fc606860d756cb9b4a4d20c959014dceb28d46c515b8e6f7afe5c32b2fa/darcy_bingley_wickham-0.0.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "174cb608de94810fd31d1504bbd33a48cc914fff1dc45de08c5a8696a1558b32",
          "md5": "9bc7633a6f717a28512f3df81ab27c76",
          "sha256": "54a9c801dd1eeaf1c7c4fbdda6c1d6c42917d3a7f894fd400a9b7eaa6cd406ed"
        },
        "downloads": -1,
        "filename": "darcy_bingley_wickham-0.0.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9bc7633a6f717a28512f3df81ab27c76",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11759172,
        "upload_time": "2021-01-14T21:11:24",
        "upload_time_iso_8601": "2021-01-14T21:11:24.978610Z",
        "url": "https://files.pythonhosted.org/packages/17/4c/b608de94810fd31d1504bbd33a48cc914fff1dc45de08c5a8696a1558b32/darcy_bingley_wickham-0.0.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb6b4fa8c45db25bf2b76170bde35d42ddc65fd54b1ca02573d4e31345cd1a32",
          "md5": "051f36793ebc181a701c3ece884cfe92",
          "sha256": "512510f0c5c32aff51f8855bc2be6a54b87c44ff6163d2f1c37df4c5bd602438"
        },
        "downloads": -1,
        "filename": "darcy_bingley_wickham-0.0.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "051f36793ebc181a701c3ece884cfe92",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11759214,
        "upload_time": "2021-01-14T22:23:14",
        "upload_time_iso_8601": "2021-01-14T22:23:14.883255Z",
        "url": "https://files.pythonhosted.org/packages/cb/6b/4fa8c45db25bf2b76170bde35d42ddc65fd54b1ca02573d4e31345cd1a32/darcy_bingley_wickham-0.0.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cb6b4fa8c45db25bf2b76170bde35d42ddc65fd54b1ca02573d4e31345cd1a32",
        "md5": "051f36793ebc181a701c3ece884cfe92",
        "sha256": "512510f0c5c32aff51f8855bc2be6a54b87c44ff6163d2f1c37df4c5bd602438"
      },
      "downloads": -1,
      "filename": "darcy_bingley_wickham-0.0.8-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "051f36793ebc181a701c3ece884cfe92",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 11759214,
      "upload_time": "2021-01-14T22:23:14",
      "upload_time_iso_8601": "2021-01-14T22:23:14.883255Z",
      "url": "https://files.pythonhosted.org/packages/cb/6b/4fa8c45db25bf2b76170bde35d42ddc65fd54b1ca02573d4e31345cd1a32/darcy_bingley_wickham-0.0.8-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}