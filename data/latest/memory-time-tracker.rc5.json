{
  "info": {
    "author": "Luca Cappelletti, Tommaso Fontana",
    "author_email": "cappelletti.luca94@gmail.com, tommaso.fontana.96@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Memory Time Tracker\n=================================\n|pip| |downloads|\n\nMemory time tracker is a simple python tool to track the memory and time requirements of software across both very brief (milliseconds) and large (days) time and memory requirements through adaptative log resolution.\n\nThe reports are CSV files with two columns, the first one with the time delta and the second one with the required RAM.\n\nTracking upwards to crash\n------------------------------------\nThis package handles gracefully also use cases where the tracked software\ndies because of OOM or generally crashes by adding a ``0,0`` as the last line of the CSV document\nit produces when the execution finishes nominally while adding a ``-1,-1`` when the execution\nfinishes with a detectable exception. When there are crashes not detectable through exceptions,\nsuch as machine freezes because of OOM, kernel panics or other things, neither ``0,0``nor ``1,1`` are (inevitably) written at the end of the CSV.\n\nTo help distinguish the different possible completion statuses, we have prepared three methods:\n\n* ``has_completed_successfully`` to detect whether the execution has been completed without hiccups.\n* ``has_crashed_gracefully`` to detect crashes that raised \"normal\" exceptions.\n* ``has_crashed_ungracefully`` to detect crashes that did not raise \"normal\" exceptions, such as OOM and core dumps.\n\nSee more below in the Examples section.\n\nRequirements\n----------------------------\nPlease do note that this package makes use of `proc/meminfo <https://man7.org/linux/man-pages/man5/proc.5.html>`_,\nso it is strictly compatible only with Linux systems.\n\nLike most tracker systems, this one works best if there is a limited amount of noise in the system.\nDo not run other software while running the benchmark, or your results may be skewed.\n\nInstalling package\n----------------------------\nAs usual, to install this package from Pypi, just run:\n\n.. code:: bash\n\n    pip install memory_time_tracker\n\n\nUsage example\n---------------------------\nYou can use this package to track the execution of a given method as follows:\n\n.. code:: python\n\n    from memory_time_tracker import Tracker, has_completed_successfully, has_crashed_gracefully, has_crashed_ungracefully, plot_reports\n    from time import sleep\n    import numpy as np\n\n    def example_function():\n        \"\"\"Small example of function that takes 2 seconds.\"\"\"\n        arrays = []\n        for _ in range(10):\n            arrays.append(np.zeros((10000, 10000)))\n            sleep(0.2)\n\n    def example_function_which_crashes():\n        \"\"\"Small example of function that takes 2 seconds and crashes.\"\"\"\n        arrays = []\n        for _ in range(20):\n            arrays.append(np.zeros((10000, 5000)))\n            sleep(0.1)\n        raise ValueError(\"Argh! I'm crashig!\")\n\n    # The path where we will store the log\n    path1 = \"/tmp/tracker_example.csv\"\n    # The path where we will store the log with the crash\n    path2 = \"/tmp/tracker_example_with_crash.csv\"\n\n    # Create the tracker context\n    with Tracker(path1):\n        example_function()\n\n    # Wait between tracking to allow for memory to free\n    sleep(20)\n\n    # Create the tracker context to handle crashable libraries\n    try:\n        with Tracker(path2, verbose=True):\n            example_function_which_crashes()\n    except Exception:\n        pass\n\n    print(\n        \"Successful: \", has_completed_successfully(path1),\n        \"Crashed gracefully: \", has_crashed_gracefully(path1),\n        \"Crashed ungracefully: \", has_crashed_ungracefully(path1)\n    )\n    # Successful:  True Crashed gracefully:  False Crashed ungracefully:  False\n\n    print(\n        \"Successful: \", has_completed_successfully(path2),\n        \"Crashed gracefully: \", has_crashed_gracefully(path2),\n        \"Crashed ungracefully: \", has_crashed_ungracefully(path2)\n    )\n    # Successful:  False Crashed gracefully:  True Crashed ungracefully:  False  \n\n    plot_reports([path1, path2])\n\n\nYou can `run it on Colab here <https://colab.research.google.com/drive/17RhQQyP8gmIb1qprQwOVPwut_mZgA01K?usp=sharing>`_.\n\nThe above example should generate a picture such as this one:\n\n.. image:: example.png\n  :width: 400\n  :alt: Alternative text\n\nNote that there is some noise in the RAM and time measurements as it was executed on COLAB.\n\nAuthors and License\n---------------------------\nThis package was developed by `Luca Cappelletti <https://github.com/LucaCappelletti94>`_ and `Tommaso Fontana <https://github.com/zommiommy>`_ and is released under `MIT License <https://github.com/LucaCappelletti94/memory_time_tracker/blob/main/LICENSE>`_.\n\n\n.. |pip| image:: https://badge.fury.io/py/memory-time-tracker.svg\n    :target: https://badge.fury.io/py/memory-time-tracker\n    :alt: Pypi project\n\n.. |downloads| image:: https://pepy.tech/badge/memory-time-tracker\n    :target: https://pepy.tech/badge/memory-time-tracker\n    :alt: Pypi total project downloads",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/LucaCappelletti94/memory_time_tracker",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "memory-time-tracker",
    "package_url": "https://pypi.org/project/memory-time-tracker/",
    "platform": null,
    "project_url": "https://pypi.org/project/memory-time-tracker/",
    "project_urls": {
      "Homepage": "https://github.com/LucaCappelletti94/memory_time_tracker"
    },
    "release_url": "https://pypi.org/project/memory-time-tracker/0.0.5/",
    "requires_dist": null,
    "requires_python": ">=3.6.0",
    "summary": "Python tool to track the memory and time requirements of software.",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13427528,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e2567fe9241fbb9bdbc28b14a0e44866979c887c7f4fed287b4e780d62ccf3c",
          "md5": "709432d8107a27e783cffef74bd0feae",
          "sha256": "c7a4892e4b53949dcba08115b69d7653d1e5cebe4ba9d0f2b614a0c780d07ed3"
        },
        "downloads": -1,
        "filename": "memory_time_tracker-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "709432d8107a27e783cffef74bd0feae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 5086,
        "upload_time": "2022-04-06T08:27:12",
        "upload_time_iso_8601": "2022-04-06T08:27:12.338689Z",
        "url": "https://files.pythonhosted.org/packages/7e/25/67fe9241fbb9bdbc28b14a0e44866979c887c7f4fed287b4e780d62ccf3c/memory_time_tracker-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f55ec518b78764dc95cef0a518711ce9dbe85ca2528919849ca09ddf0fbf41a5",
          "md5": "0fc60ef59a0c7b2c591b60ab88eb8f5b",
          "sha256": "1fa8c6c3db8ce4b3cde78917d40c7f8fa04b51c62eb4fd97be3bc6789d47a006"
        },
        "downloads": -1,
        "filename": "memory_time_tracker-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0fc60ef59a0c7b2c591b60ab88eb8f5b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 6982,
        "upload_time": "2022-04-06T09:13:39",
        "upload_time_iso_8601": "2022-04-06T09:13:39.650287Z",
        "url": "https://files.pythonhosted.org/packages/f5/5e/c518b78764dc95cef0a518711ce9dbe85ca2528919849ca09ddf0fbf41a5/memory_time_tracker-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0a17f207d2d2e56581cc92e6b6888d9ee9ad5c991b67302b2a7f8cc38389c04",
          "md5": "ab089f88f88477b406a85401db2a7ff2",
          "sha256": "87b579e8371643e9261eede9c4adab36017a99c60c9c529a4e2ce5e363a89af6"
        },
        "downloads": -1,
        "filename": "memory_time_tracker-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ab089f88f88477b406a85401db2a7ff2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 6988,
        "upload_time": "2022-04-06T09:29:06",
        "upload_time_iso_8601": "2022-04-06T09:29:06.357236Z",
        "url": "https://files.pythonhosted.org/packages/a0/a1/7f207d2d2e56581cc92e6b6888d9ee9ad5c991b67302b2a7f8cc38389c04/memory_time_tracker-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43b89e496ce1ff4b685c690de22dcff70d78d1daafaad03d9aa321955ea02428",
          "md5": "49e2237c73981fce0f1eca69259b6148",
          "sha256": "4a12d33e1bbd99676bc1bb9c9bf77d264a164371c35cb09552c7eab253319cbd"
        },
        "downloads": -1,
        "filename": "memory_time_tracker-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "49e2237c73981fce0f1eca69259b6148",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 6989,
        "upload_time": "2022-04-06T10:13:30",
        "upload_time_iso_8601": "2022-04-06T10:13:30.012567Z",
        "url": "https://files.pythonhosted.org/packages/43/b8/9e496ce1ff4b685c690de22dcff70d78d1daafaad03d9aa321955ea02428/memory_time_tracker-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "943bf7c3162002089b9e11726dc08b8a1afcaca5fbda6a5603b330f72e658dc5",
          "md5": "0052f85e0bf9eab4f02ac9053e9d9a29",
          "sha256": "b9c5f72d565bab1f3fec3b5f62e91fefe7242c001fd76b9278e557a426adb853"
        },
        "downloads": -1,
        "filename": "memory_time_tracker-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0052f85e0bf9eab4f02ac9053e9d9a29",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 8516,
        "upload_time": "2022-04-06T10:39:16",
        "upload_time_iso_8601": "2022-04-06T10:39:16.149091Z",
        "url": "https://files.pythonhosted.org/packages/94/3b/f7c3162002089b9e11726dc08b8a1afcaca5fbda6a5603b330f72e658dc5/memory_time_tracker-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "943bf7c3162002089b9e11726dc08b8a1afcaca5fbda6a5603b330f72e658dc5",
        "md5": "0052f85e0bf9eab4f02ac9053e9d9a29",
        "sha256": "b9c5f72d565bab1f3fec3b5f62e91fefe7242c001fd76b9278e557a426adb853"
      },
      "downloads": -1,
      "filename": "memory_time_tracker-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "0052f85e0bf9eab4f02ac9053e9d9a29",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 8516,
      "upload_time": "2022-04-06T10:39:16",
      "upload_time_iso_8601": "2022-04-06T10:39:16.149091Z",
      "url": "https://files.pythonhosted.org/packages/94/3b/f7c3162002089b9e11726dc08b8a1afcaca5fbda6a5603b330f72e658dc5/memory_time_tracker-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}