{
  "info": {
    "author": "Nicholas Gorman",
    "author_email": "n.gorman@unsw.edu.au",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "## Table of Contents\r\n- [Introduction](https://github.com/UNSW-CEEM/nempy#introduction)\r\n- [Motivation](https://github.com/UNSW-CEEM/nempy#motivation)\r\n- [Documentation](https://github.com/UNSW-CEEM/nempy#documentation)\r\n- [Community](https://github.com/UNSW-CEEM/nempy#community)\r\n- [Installation](https://github.com/UNSW-CEEM/nempy#installation)\r\n- [A simple example](https://github.com/UNSW-CEEM/nempy#a-simple-example)\r\n- [A detailed example](https://github.com/UNSW-CEEM/nempy#a-detailed-example)\r\n\r\n## Introduction\r\nNempy is a python package for modelling the dispatch procedure of the Australian National Electricity Market (NEM). The idea is \r\nthat you can start simple, like in the [example below](https://github.com/UNSW-CEEM/nempy#a-simple-example), and grow the complexity of your model by adding features such as \r\nramping constraints, interconnectors, FCAS markets and more.\r\n\r\nA brief introduction to the NEM can be found at the link below:\r\n\r\nhttps://aemo.com.au/-/media/Files/Electricity/NEM/National-Electricity-Market-Fact-Sheet.pdf\r\n\r\n## Documentation\r\nA more detailed introduction to Nempy, examples, and reference documentation can be found on the \r\n[readthedocs](https://nempy.readthedocs.io/en/latest/) page.\r\n\r\n## Community\r\nNempy is open-source and we welcome all forms of community engagement, some more info is provided below.\r\n\r\n### Support\r\nYou can seek suport for using Nempy using the discussion tab on GitHub (https://github.com/UNSW-CEEM/nempy/discussions), checking the issues register (https://github.com/UNSW-CEEM/nempy/issues), or by contacting Nick directly n.gorman at unsw.edu.au.\r\n\r\n### Reporting issues\r\nIssues with Nempy can be reported via the issues register (https://github.com/UNSW-CEEM/nempy/issues), issues submissions do not need to adhere to any particular format.\r\n\r\n### Contributing\r\nContributions via pull requests are welcome. Contributions should; follow the PEP8 style guide (with exception of line length up to 120 rather than 80), ensure that all existing automated tests continue to pass (unless you are explicitly changing intended behavour, please highlight this in your pull request description), implement automated tests for new features, and provided doc strings for public interfaces. \r\n\r\n### Get in touch\r\nThis project is being lead by Nick Gorman, a PhD candidate at the University for New South Wales and the Collaboration \r\non Energy and Environmental Markets (CEEM). As part the project we hope to engage with and support prospective users of\r\nthe software. Feel welcome to get in touch if you have any questions, want to provide feed back, have a feature request,\r\nare interested in collaborating or just want to discuss this project. You can contact Nick via n.gorman at unsw.edu.au.      \r\n\r\n## Installation\r\nInstalling nempy to use in your project is easy.\r\n\r\n`pip install nempy`\r\n\r\nTo install for development purposes, such as adding new features. Download the source code, unzip, cd into the directory, then install.\r\n\r\n`pip install e .[dev]`\r\n\r\nThen the test suite can be run using.\r\n\r\n`python -m pytest`\r\n\r\n## A simple example\r\n```python\r\nimport pandas as pd\r\nfrom nempy import markets\r\n\r\n# Volume of each bid, number of bands must equal number of bands in price_bids.\r\nvolume_bids = pd.DataFrame({\r\n    'unit': ['A', 'B'],\r\n    '1': [20.0, 50.0],  # MW\r\n    '2': [20.0, 30.0],  # MW\r\n    '3': [5.0, 10.0]  # More bid bands could be added.\r\n})\r\n\r\n# Price of each bid, bids must be monotonically increasing.\r\nprice_bids = pd.DataFrame({\r\n    'unit': ['A', 'B'],\r\n    '1': [50.0, 50.0],  # $/MW\r\n    '2': [60.0, 55.0],  # $/MW\r\n    '3': [100.0, 80.0]  # . . .\r\n})\r\n\r\n# Other unit properties\r\nunit_info = pd.DataFrame({\r\n    'unit': ['A', 'B'],\r\n    'region': ['NSW', 'NSW'],  # MW\r\n})\r\n\r\n# The demand in the region\\s being dispatched\r\ndemand = pd.DataFrame({\r\n    'region': ['NSW'],\r\n    'demand': [120.0]  # MW\r\n})\r\n\r\n# Create the market model\r\nmarket = markets.SpotMarket(unit_info=unit_info, \r\n                            market_regions=['NSW'])\r\nmarket.set_unit_volume_bids(volume_bids)\r\nmarket.set_unit_price_bids(price_bids)\r\nmarket.set_demand_constraints(demand)\r\n\r\n# Calculate dispatch and pricing\r\nmarket.dispatch()\r\n\r\n# Return the total dispatch of each unit in MW.\r\nprint(market.get_unit_dispatch())\r\n#   unit service  dispatch\r\n# 0    A  energy      40.0\r\n# 1    B  energy      80.0\r\n\r\n# Return the price of energy in each region.\r\nprint(market.get_energy_prices())\r\n#   region  price\r\n# 0    NSW   60.0\r\n```\r\n\r\n## A detailed example\r\nThe example demonstrates the broad range of market features that can be implemented with nempy and the use of auxiliary \r\nmodelling tools for accessing historical market data published by AEMO and preprocessing it for compatibility with nempy.\r\n    \r\nWarning: this example downloads approximately 8.5 GB of data from AEMO.\r\n```python\r\n# Notice: this script downloads large volumes of historical market data from AEMO's nemweb portal.\r\n\r\nimport sqlite3\r\nimport pandas as pd\r\nfrom nempy import markets\r\nfrom nempy.historical_inputs import loaders, mms_db, \\\r\n    xml_cache, units, demand, interconnectors, \\\r\n    constraints\r\n\r\ncon = sqlite3.connect('market_management_system.db')\r\nmms_db_manager = mms_db.DBManager(connection=con)\r\n\r\nxml_cache_manager = xml_cache.XMLCacheManager('cache_directory')\r\n\r\n# The second time this example is run on a machine this flag can\r\n# be set to false to save downloading the data again.\r\ndownload_inputs = True\r\n\r\nif download_inputs:\r\n    # This requires approximately 5 GB of storage.\r\n    mms_db_manager.populate(start_year=2019, start_month=1,\r\n                            end_year=2019, end_month=1)\r\n\r\n    # This requires approximately 3.5 GB of storage.\r\n    xml_cache_manager.populate_by_day(start_year=2019, start_month=1, start_day=1,\r\n                                      end_year=2019, end_month=1, end_day=1)\r\n\r\nraw_inputs_loader = loaders.RawInputsLoader(\r\n    nemde_xml_cache_manager=xml_cache_manager,\r\n    market_management_system_database=mms_db_manager)\r\n\r\n# A list of intervals we want to recreate historical dispatch for.\r\ndispatch_intervals = ['2019/01/01 12:00:00',\r\n                      '2019/01/01 12:05:00',\r\n                      '2019/01/01 12:10:00',\r\n                      '2019/01/01 12:15:00',\r\n                      '2019/01/01 12:20:00',\r\n                      '2019/01/01 12:25:00',\r\n                      '2019/01/01 12:30:00']\r\n\r\n# List for saving outputs to.\r\noutputs = []\r\n\r\n# Create and dispatch the spot market for each dispatch interval.\r\nfor interval in dispatch_intervals:\r\n    raw_inputs_loader.set_interval(interval)\r\n    unit_inputs = units.UnitData(raw_inputs_loader)\r\n    interconnector_inputs = interconnectors.InterconnectorData(raw_inputs_loader)\r\n    constraint_inputs = constraints.ConstraintData(raw_inputs_loader)\r\n    demand_inputs = demand.DemandData(raw_inputs_loader)\r\n\r\n    unit_info = unit_inputs.get_unit_info()\r\n    market = markets.SpotMarket(market_regions=['QLD1', 'NSW1', 'VIC1',\r\n                                                'SA1', 'TAS1'],\r\n                                unit_info=unit_info)\r\n\r\n    # Set bids\r\n    volume_bids, price_bids = unit_inputs.get_processed_bids()\r\n    market.set_unit_volume_bids(volume_bids)\r\n    market.set_unit_price_bids(price_bids)\r\n\r\n    # Set bid in capacity limits\r\n    unit_bid_limit = unit_inputs.get_unit_bid_availability()\r\n    market.set_unit_bid_capacity_constraints(unit_bid_limit)\r\n    cost = constraint_inputs.get_constraint_violation_prices()['unit_capacity']\r\n    market.make_constraints_elastic('unit_bid_capacity', violation_cost=cost)\r\n\r\n    # Set limits provided by the unconstrained intermittent generation\r\n    # forecasts. Primarily for wind and solar.\r\n    unit_uigf_limit = unit_inputs.get_unit_uigf_limits()\r\n    market.set_unconstrained_intermitent_generation_forecast_constraint(\r\n        unit_uigf_limit)\r\n    cost = constraint_inputs.get_constraint_violation_prices()['uigf']\r\n    market.make_constraints_elastic('uigf_capacity', violation_cost=cost)\r\n\r\n    # Set unit ramp rates.\r\n    ramp_rates = unit_inputs.get_ramp_rates_used_for_energy_dispatch()\r\n    market.set_unit_ramp_up_constraints(\r\n        ramp_rates.loc[:, ['unit', 'initial_output', 'ramp_up_rate']])\r\n    market.set_unit_ramp_down_constraints(\r\n        ramp_rates.loc[:, ['unit', 'initial_output', 'ramp_down_rate']])\r\n    cost = constraint_inputs.get_constraint_violation_prices()['ramp_rate']\r\n    market.make_constraints_elastic('ramp_up', violation_cost=cost)\r\n    market.make_constraints_elastic('ramp_down', violation_cost=cost)\r\n\r\n    # Set unit FCAS trapezium constraints.\r\n    unit_inputs.add_fcas_trapezium_constraints()\r\n    cost = constraint_inputs.get_constraint_violation_prices()['fcas_max_avail']\r\n    fcas_availability = unit_inputs.get_fcas_max_availability()\r\n    market.set_fcas_max_availability(fcas_availability)\r\n    market.make_constraints_elastic('fcas_max_availability', cost)\r\n    cost = constraint_inputs.get_constraint_violation_prices()['fcas_profile']\r\n    regulation_trapeziums = unit_inputs.get_fcas_regulation_trapeziums()\r\n    market.set_energy_and_regulation_capacity_constraints(regulation_trapeziums)\r\n    market.make_constraints_elastic('energy_and_regulation_capacity', cost)\r\n    scada_ramp_down_rates = unit_inputs.get_scada_ramp_down_rates_of_lower_reg_units()\r\n    market.set_joint_ramping_constraints_lower_reg(scada_ramp_down_rates)\r\n    market.make_constraints_elastic('joint_ramping_lower_reg', cost)\r\n    scada_ramp_up_rates = unit_inputs.get_scada_ramp_up_rates_of_raise_reg_units()\r\n    market.set_joint_ramping_constraints_raise_reg(scada_ramp_up_rates)\r\n    market.make_constraints_elastic('joint_ramping_raise_reg', cost)\r\n    contingency_trapeziums = unit_inputs.get_contingency_services()\r\n    market.set_joint_capacity_constraints(contingency_trapeziums)\r\n    market.make_constraints_elastic('joint_capacity', cost)\r\n\r\n    # Set interconnector definitions, limits and loss models.\r\n    interconnectors_definitions = \\\r\n        interconnector_inputs.get_interconnector_definitions()\r\n    loss_functions, interpolation_break_points = \\\r\n        interconnector_inputs.get_interconnector_loss_model()\r\n    market.set_interconnectors(interconnectors_definitions)\r\n    market.set_interconnector_losses(loss_functions,\r\n                                     interpolation_break_points)\r\n\r\n    # Add generic constraints and FCAS market constraints.\r\n    fcas_requirements = constraint_inputs.get_fcas_requirements()\r\n    market.set_fcas_requirements_constraints(fcas_requirements)\r\n    violation_costs = constraint_inputs.get_violation_costs()\r\n    market.make_constraints_elastic('fcas', violation_cost=violation_costs)\r\n    generic_rhs = constraint_inputs.get_rhs_and_type_excluding_regional_fcas_constraints()\r\n    market.set_generic_constraints(generic_rhs)\r\n    market.make_constraints_elastic('generic', violation_cost=violation_costs)\r\n    unit_generic_lhs = constraint_inputs.get_unit_lhs()\r\n    market.link_units_to_generic_constraints(unit_generic_lhs)\r\n    interconnector_generic_lhs = constraint_inputs.get_interconnector_lhs()\r\n    market.link_interconnectors_to_generic_constraints(\r\n        interconnector_generic_lhs)\r\n\r\n    # Set the operational demand to be met by dispatch.\r\n    regional_demand = demand_inputs.get_operational_demand()\r\n    market.set_demand_constraints(regional_demand)\r\n    \r\n    # Get unit dispatch without fast start constraints and use it to\r\n    # make fast start unit commitment decisions.\r\n    market.dispatch()\r\n    dispatch = market.get_unit_dispatch()\r\n    fast_start_profiles = unit_inputs.get_fast_start_profiles_for_dispatch(dispatch)\r\n    market.set_fast_start_constraints(fast_start_profiles)\r\n    if 'fast_start' in market.get_constraint_set_names():\r\n        cost = constraint_inputs.get_constraint_violation_prices()['fast_start']\r\n        market.make_constraints_elastic('fast_start', violation_cost=cost)\r\n\r\n    # If AEMO historical used the over constrained dispatch rerun\r\n    # process then allow it to be used in dispatch. This is needed\r\n    # because sometimes the conditions for over constrained dispatch\r\n    # are present but the rerun process isn't used.\r\n    if constraint_inputs.is_over_constrained_dispatch_rerun():\r\n        market.dispatch(allow_over_constrained_dispatch_re_run=True,\r\n                        energy_market_floor_price=-1000.0,\r\n                        energy_market_ceiling_price=14500.0,\r\n                        fcas_market_ceiling_price=1000.0)\r\n    else:\r\n        # The market price ceiling and floor are not needed here\r\n        # because they are only used for the over constrained\r\n        # dispatch rerun process.\r\n        market.dispatch(allow_over_constrained_dispatch_re_run=False)\r\n\r\n    # Save prices from this interval\r\n    prices = market.get_energy_prices()\r\n    prices['time'] = interval\r\n    outputs.append(prices.loc[:, ['time', 'region', 'price']])\r\n\r\ncon.close()\r\nprint(pd.concat(outputs))\r\n#                   time region      price\r\n# 0  2019/01/01 12:00:00   NSW1  91.870167\r\n# 1  2019/01/01 12:00:00   QLD1  76.190796\r\n# 2  2019/01/01 12:00:00    SA1  86.899534\r\n# 3  2019/01/01 12:00:00   TAS1  89.805037\r\n# 4  2019/01/01 12:00:00   VIC1  84.984255\r\n# 0  2019/01/01 12:05:00   NSW1  91.870496\r\n# 1  2019/01/01 12:05:00   QLD1  64.991736\r\n# 2  2019/01/01 12:05:00    SA1  87.462599\r\n# 3  2019/01/01 12:05:00   TAS1  90.178036\r\n# 4  2019/01/01 12:05:00   VIC1  85.556009\r\n# 0  2019/01/01 12:10:00   NSW1  91.870496\r\n# 1  2019/01/01 12:10:00   QLD1  64.991736\r\n# 2  2019/01/01 12:10:00    SA1  86.868556\r\n# 3  2019/01/01 12:10:00   TAS1  89.983716\r\n# 4  2019/01/01 12:10:00   VIC1  84.936150\r\n# 0  2019/01/01 12:15:00   NSW1  91.870496\r\n# 1  2019/01/01 12:15:00   QLD1  64.776456\r\n# 2  2019/01/01 12:15:00    SA1  86.844540\r\n# 3  2019/01/01 12:15:00   TAS1  89.582288\r\n# 4  2019/01/01 12:15:00   VIC1  84.990796\r\n# 0  2019/01/01 12:20:00   NSW1  91.870496\r\n# 1  2019/01/01 12:20:00   QLD1  64.776456\r\n# 2  2019/01/01 12:20:00    SA1  87.496112\r\n# 3  2019/01/01 12:20:00   TAS1  90.291144\r\n# 4  2019/01/01 12:20:00   VIC1  85.594840\r\n# 0  2019/01/01 12:25:00   NSW1  91.870167\r\n# 1  2019/01/01 12:25:00   QLD1  64.991736\r\n# 2  2019/01/01 12:25:00    SA1  87.519993\r\n# 3  2019/01/01 12:25:00   TAS1  90.488064\r\n# 4  2019/01/01 12:25:00   VIC1  85.630617\r\n# 0  2019/01/01 12:30:00   NSW1  91.870496\r\n# 1  2019/01/01 12:30:00   QLD1  64.991736\r\n# 2  2019/01/01 12:30:00    SA1  87.462000\r\n# 3  2019/01/01 12:30:00   TAS1  90.196284\r\n# 4  2019/01/01 12:30:00   VIC1  85.573321\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/UNSW-CEEM/nempy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nempy",
    "package_url": "https://pypi.org/project/nempy/",
    "platform": null,
    "project_url": "https://pypi.org/project/nempy/",
    "project_urls": {
      "Homepage": "https://github.com/UNSW-CEEM/nempy"
    },
    "release_url": "https://pypi.org/project/nempy/1.1.6/",
    "requires_dist": [
      "pandas (<2.0.0,>=1.0.0)",
      "mip (<2.0.0,>=1.11.0)",
      "xmltodict (==0.12.0)",
      "requests (<3.0.0,>=2.0.0)",
      "pytest (>=6.2.5) ; extra == 'dev'",
      "twine ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "A flexible tool kit for modelling Australia's National Electricity Market dispatch procedure.",
    "version": "1.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16413703,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0129c47e5350d95e6ad7da76240182084d78da77fb36276deee9cce28aa62135",
          "md5": "4fbb761d67b3ccd07832f2d66db2d6f2",
          "sha256": "cf85c1fbf45d9a8f6d348926f41fac48bd8545e5f0450e87f7e7cb9856fe1d9f"
        },
        "downloads": -1,
        "filename": "nempy-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4fbb761d67b3ccd07832f2d66db2d6f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 75371,
        "upload_time": "2020-10-01T06:24:54",
        "upload_time_iso_8601": "2020-10-01T06:24:54.412236Z",
        "url": "https://files.pythonhosted.org/packages/01/29/c47e5350d95e6ad7da76240182084d78da77fb36276deee9cce28aa62135/nempy-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbdd1a92b46fdb0f485e2badcf502b3711e96979659f4aec8bc2a95ed411556e",
          "md5": "4b449572f0a21f071a7ee2f781f9a3b0",
          "sha256": "2a42eff18c696fe6ad7092ef1e161045e8aae4b9193b2626e7007232b1bb76ec"
        },
        "downloads": -1,
        "filename": "nempy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4b449572f0a21f071a7ee2f781f9a3b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8976346,
        "upload_time": "2020-10-01T06:25:03",
        "upload_time_iso_8601": "2020-10-01T06:25:03.332466Z",
        "url": "https://files.pythonhosted.org/packages/bb/dd/1a92b46fdb0f485e2badcf502b3711e96979659f4aec8bc2a95ed411556e/nempy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1f78a989d60bc75e981b5491b315a464e5199ef01244df05be99befdaf00735",
          "md5": "3b8caa4128a37996126f5cc3303bce57",
          "sha256": "97e9d8327e7e9b860c4cfb0862fa7293038c9be02db7f6b3199311d12dbf5f35"
        },
        "downloads": -1,
        "filename": "nempy-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b8caa4128a37996126f5cc3303bce57",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 122829,
        "upload_time": "2020-10-01T06:54:38",
        "upload_time_iso_8601": "2020-10-01T06:54:38.126607Z",
        "url": "https://files.pythonhosted.org/packages/f1/f7/8a989d60bc75e981b5491b315a464e5199ef01244df05be99befdaf00735/nempy-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8416e9274faf0265e686f864fa5ec237a4357485c73276c9ff2673a5ccf58239",
          "md5": "13c7079f52f3ac9d06add485e2a5b6ae",
          "sha256": "531ff10bb074267394c1f540adc49f55a90f742bc7f735e1211220ca8caa2944"
        },
        "downloads": -1,
        "filename": "nempy-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "13c7079f52f3ac9d06add485e2a5b6ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8976371,
        "upload_time": "2020-10-01T06:54:49",
        "upload_time_iso_8601": "2020-10-01T06:54:49.885885Z",
        "url": "https://files.pythonhosted.org/packages/84/16/e9274faf0265e686f864fa5ec237a4357485c73276c9ff2673a5ccf58239/nempy-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46cfbb6c080312f932005b7c487bc504a988b7ba67c4d7d6eddc01aba06ed229",
          "md5": "6516cd72d9cffb2d85eed428b1ab7219",
          "sha256": "92cbb3943411189b905d3324ad67141672e9cfce4196189b631b3dd004f5c1db"
        },
        "downloads": -1,
        "filename": "nempy-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6516cd72d9cffb2d85eed428b1ab7219",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 122789,
        "upload_time": "2020-10-08T04:22:09",
        "upload_time_iso_8601": "2020-10-08T04:22:09.256406Z",
        "url": "https://files.pythonhosted.org/packages/46/cf/bb6c080312f932005b7c487bc504a988b7ba67c4d7d6eddc01aba06ed229/nempy-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd604a125fdcbbb410f13f5e01518b4ca5820f8ebd816fc1aad36841b77a97df",
          "md5": "c2889a11b76d21bac41a75145fb4c5e7",
          "sha256": "db1877ef724a6e967f2611a60edd7a5b5ca6ddbf1ccddbf901d60ce9846436e7"
        },
        "downloads": -1,
        "filename": "nempy-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c2889a11b76d21bac41a75145fb4c5e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8976568,
        "upload_time": "2020-10-08T04:22:15",
        "upload_time_iso_8601": "2020-10-08T04:22:15.887398Z",
        "url": "https://files.pythonhosted.org/packages/dd/60/4a125fdcbbb410f13f5e01518b4ca5820f8ebd816fc1aad36841b77a97df/nempy-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdd62285603969bb6027c7c1f0a46883985f0b602d8f24fc5ca0d8d69b6dee7d",
          "md5": "7979b82f35d229a1f2f72883b77983dc",
          "sha256": "eb40ece0848ba951f334bbd0d699fd57a34e93ebf6d3add94b97352c626006a9"
        },
        "downloads": -1,
        "filename": "nempy-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7979b82f35d229a1f2f72883b77983dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 122834,
        "upload_time": "2020-10-16T03:40:30",
        "upload_time_iso_8601": "2020-10-16T03:40:30.675495Z",
        "url": "https://files.pythonhosted.org/packages/bd/d6/2285603969bb6027c7c1f0a46883985f0b602d8f24fc5ca0d8d69b6dee7d/nempy-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "075ba00ebbbaa935b35f63fc158d2e6c216ee4c4914716e70d30710772b29e02",
          "md5": "f3c247db22096fe7f61132db773ee76f",
          "sha256": "7e3fcad6774396e5f7cbe858c04334f58f189f3df5955b160d42c1b4f0e92290"
        },
        "downloads": -1,
        "filename": "nempy-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f3c247db22096fe7f61132db773ee76f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9185352,
        "upload_time": "2020-10-16T03:40:43",
        "upload_time_iso_8601": "2020-10-16T03:40:43.805585Z",
        "url": "https://files.pythonhosted.org/packages/07/5b/a00ebbbaa935b35f63fc158d2e6c216ee4c4914716e70d30710772b29e02/nempy-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14a3d55cd3f26f49ec979fd862808c3ef0e14fb628d68ebf7b3cba382df86121",
          "md5": "48721c79e9e569f9841b2fbb3356ff7d",
          "sha256": "771fef6f44e37e5908289b5cd0147a464079de45199598e35056bc7bf0357124"
        },
        "downloads": -1,
        "filename": "nempy-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "48721c79e9e569f9841b2fbb3356ff7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 122811,
        "upload_time": "2020-10-16T05:15:34",
        "upload_time_iso_8601": "2020-10-16T05:15:34.037995Z",
        "url": "https://files.pythonhosted.org/packages/14/a3/d55cd3f26f49ec979fd862808c3ef0e14fb628d68ebf7b3cba382df86121/nempy-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e4ec37125357bb2c4f826d9ddeb5ba9f1e118f8295005cbb2adec3b94558b36",
          "md5": "be9f8b8da0f18aee0c8dc67e63c4b982",
          "sha256": "1d3ca32163eba667b03b9eaebf425e73322955c359b6c3496c13c4d3e7195356"
        },
        "downloads": -1,
        "filename": "nempy-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "be9f8b8da0f18aee0c8dc67e63c4b982",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9185324,
        "upload_time": "2020-10-16T05:15:54",
        "upload_time_iso_8601": "2020-10-16T05:15:54.462792Z",
        "url": "https://files.pythonhosted.org/packages/2e/4e/c37125357bb2c4f826d9ddeb5ba9f1e118f8295005cbb2adec3b94558b36/nempy-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "463a2570df55a0bc65fd0c0cad3ffe14b404081b649aa86254b2ead82bf31e48",
          "md5": "e9b9bde9c235a9609d9ffa05216840af",
          "sha256": "e47f6931d7c8cda829f4e629fac43651db8f38326d20347b8f8c7071de351076"
        },
        "downloads": -1,
        "filename": "nempy-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e9b9bde9c235a9609d9ffa05216840af",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 102224,
        "upload_time": "2021-10-19T04:02:39",
        "upload_time_iso_8601": "2021-10-19T04:02:39.945406Z",
        "url": "https://files.pythonhosted.org/packages/46/3a/2570df55a0bc65fd0c0cad3ffe14b404081b649aa86254b2ead82bf31e48/nempy-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf53fcae86e68da861619b84a5ee4eb0a02443c03b0710c8300623b941999765",
          "md5": "57500b695a78ec322d3ad94efad487d4",
          "sha256": "ab73aa8a3f249dad6c9d980bfd9e13462b233c1a662244bf296b17747fd99676"
        },
        "downloads": -1,
        "filename": "nempy-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "57500b695a78ec322d3ad94efad487d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4493223,
        "upload_time": "2021-10-19T04:03:14",
        "upload_time_iso_8601": "2021-10-19T04:03:14.280887Z",
        "url": "https://files.pythonhosted.org/packages/cf/53/fcae86e68da861619b84a5ee4eb0a02443c03b0710c8300623b941999765/nempy-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3232771f6575df3cecab058abe45255f360643ebdb05cd9f1d8cfe9d46989ca9",
          "md5": "1f303ee0e3059f185a7f5a3d1adfff65",
          "sha256": "0a053d380ec8b35eb8a1323315028b90d06f76f52f43d6feed57f10024b059ae"
        },
        "downloads": -1,
        "filename": "nempy-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f303ee0e3059f185a7f5a3d1adfff65",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 102202,
        "upload_time": "2021-12-01T22:04:06",
        "upload_time_iso_8601": "2021-12-01T22:04:06.135699Z",
        "url": "https://files.pythonhosted.org/packages/32/32/771f6575df3cecab058abe45255f360643ebdb05cd9f1d8cfe9d46989ca9/nempy-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5ca12e92825fb19b3d5865244109586d2183dd7cc98193ee5037b59f53c77a1",
          "md5": "5bc4f0c3c454d163c3303855be01b25f",
          "sha256": "a655cf86827bfc91a2d6f2384204301c5c03c6342512e2a59b4dc610d432e38d"
        },
        "downloads": -1,
        "filename": "nempy-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5bc4f0c3c454d163c3303855be01b25f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4493543,
        "upload_time": "2021-12-01T22:04:10",
        "upload_time_iso_8601": "2021-12-01T22:04:10.013233Z",
        "url": "https://files.pythonhosted.org/packages/f5/ca/12e92825fb19b3d5865244109586d2183dd7cc98193ee5037b59f53c77a1/nempy-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9160aaf627e5e16b021acb3cd4f59f7d4e017fb56c57d37f235593dc08860b4",
          "md5": "dc9f4b363dbe9ce524a4004b51f3e06e",
          "sha256": "872e2684fe1e6dd5f7461ffa30547bc75207e7c448b51f4781b27ebf057de331"
        },
        "downloads": -1,
        "filename": "nempy-1.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc9f4b363dbe9ce524a4004b51f3e06e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 103119,
        "upload_time": "2022-02-15T03:54:08",
        "upload_time_iso_8601": "2022-02-15T03:54:08.905524Z",
        "url": "https://files.pythonhosted.org/packages/c9/16/0aaf627e5e16b021acb3cd4f59f7d4e017fb56c57d37f235593dc08860b4/nempy-1.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a40ffbf7b4f86c02e6609cb130c17007dfa8b215115602631548d23b9a40007",
          "md5": "dc72c9ecdc5d86e7a1df460f4a129504",
          "sha256": "cc48f834e53a60645f64e394f634670b3bff16e8f6931ca2b15e7935c05de912"
        },
        "downloads": -1,
        "filename": "nempy-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "dc72c9ecdc5d86e7a1df460f4a129504",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4854915,
        "upload_time": "2022-02-15T03:54:13",
        "upload_time_iso_8601": "2022-02-15T03:54:13.386916Z",
        "url": "https://files.pythonhosted.org/packages/4a/40/ffbf7b4f86c02e6609cb130c17007dfa8b215115602631548d23b9a40007/nempy-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c342059631af5a2c67e08ed6c6e757394dacba8c0f68ac2132bf5922fd4b0edd",
          "md5": "cbe78a923031ab8cf91f17aa210b7320",
          "sha256": "5eaf0f67f09d11795364d32c1e4b71ae262462490fe2140af44061eaa069f477"
        },
        "downloads": -1,
        "filename": "nempy-1.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cbe78a923031ab8cf91f17aa210b7320",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 103119,
        "upload_time": "2022-02-15T04:46:19",
        "upload_time_iso_8601": "2022-02-15T04:46:19.462414Z",
        "url": "https://files.pythonhosted.org/packages/c3/42/059631af5a2c67e08ed6c6e757394dacba8c0f68ac2132bf5922fd4b0edd/nempy-1.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a9e8e6f967064ff9240b555e5d0c0e6b1959a710121b35ebb9dcfdc5b010186",
          "md5": "9d7e7738b77731308e6ca7166689f308",
          "sha256": "e216d2391950bf9f57ef05f9484980055f443ff174eca2f5c0a7ceb82f6dfb57"
        },
        "downloads": -1,
        "filename": "nempy-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9d7e7738b77731308e6ca7166689f308",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4854887,
        "upload_time": "2022-02-15T04:46:23",
        "upload_time_iso_8601": "2022-02-15T04:46:23.426286Z",
        "url": "https://files.pythonhosted.org/packages/4a/9e/8e6f967064ff9240b555e5d0c0e6b1959a710121b35ebb9dcfdc5b010186/nempy-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c11eb66dbb354792f3869d6ac7e8a797885db77cb2635ee35daf983b220e992b",
          "md5": "896ad35a62a7b9afe4e6be21fbea6a45",
          "sha256": "cf03a240b1d6bb5e2be953db25816699dbc38fcbf30d0afb26b1e5cb640d05ea"
        },
        "downloads": -1,
        "filename": "nempy-1.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "896ad35a62a7b9afe4e6be21fbea6a45",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 103128,
        "upload_time": "2022-04-21T01:35:30",
        "upload_time_iso_8601": "2022-04-21T01:35:30.751922Z",
        "url": "https://files.pythonhosted.org/packages/c1/1e/b66dbb354792f3869d6ac7e8a797885db77cb2635ee35daf983b220e992b/nempy-1.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c04e21ac3493ca10ec0ace7481ff752a5bfd6429a2ea72341c2596aae387b42",
          "md5": "24a22e13b71215fedd975f5fa33b2b96",
          "sha256": "ab925680defcdf30e2511f189857ad76fcc749934ae978c673fc772df99bf4a5"
        },
        "downloads": -1,
        "filename": "nempy-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "24a22e13b71215fedd975f5fa33b2b96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6696166,
        "upload_time": "2022-04-21T01:35:34",
        "upload_time_iso_8601": "2022-04-21T01:35:34.726647Z",
        "url": "https://files.pythonhosted.org/packages/4c/04/e21ac3493ca10ec0ace7481ff752a5bfd6429a2ea72341c2596aae387b42/nempy-1.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23efc2ccdea20df3228ff9535b5db0ad15143b5cd5850e1b958f347d66cd8632",
          "md5": "ce3dea24e6b90eeb90446034cb23f7a2",
          "sha256": "c57078c70cd7ae1071588e3003199a31b7c0d66d934cc0d7e0c935f05073b335"
        },
        "downloads": -1,
        "filename": "nempy-1.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce3dea24e6b90eeb90446034cb23f7a2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 103184,
        "upload_time": "2022-04-29T04:33:24",
        "upload_time_iso_8601": "2022-04-29T04:33:24.096838Z",
        "url": "https://files.pythonhosted.org/packages/23/ef/c2ccdea20df3228ff9535b5db0ad15143b5cd5850e1b958f347d66cd8632/nempy-1.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "edf29ac75fd566311c238bb987c2e5b07c22dc4122f7d016b945bba2c9f17f4a",
          "md5": "1c6977dfef44a57717308824c18e02ed",
          "sha256": "8b6a789b114d4f81fbc98a63db091813add8b0e9367f7a26f27862ea77be03c0"
        },
        "downloads": -1,
        "filename": "nempy-1.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1c6977dfef44a57717308824c18e02ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6696173,
        "upload_time": "2022-04-29T04:33:28",
        "upload_time_iso_8601": "2022-04-29T04:33:28.787295Z",
        "url": "https://files.pythonhosted.org/packages/ed/f2/9ac75fd566311c238bb987c2e5b07c22dc4122f7d016b945bba2c9f17f4a/nempy-1.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f972548363d072ab2ddcc399ddf2c8a9a577b90921a500776595860f4f0c9b7d",
          "md5": "42d54dfba8ac0f5fc14bd06a70f9d992",
          "sha256": "d8527c441ed10eb11c689037559c6fda02de7c95bed67dc5b21fd31ea7f846c7"
        },
        "downloads": -1,
        "filename": "nempy-1.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "42d54dfba8ac0f5fc14bd06a70f9d992",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 103264,
        "upload_time": "2023-01-13T04:13:18",
        "upload_time_iso_8601": "2023-01-13T04:13:18.309136Z",
        "url": "https://files.pythonhosted.org/packages/f9/72/548363d072ab2ddcc399ddf2c8a9a577b90921a500776595860f4f0c9b7d/nempy-1.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f2ce438512d38a83ef512b5ec49f1bbefa71b2ff3c5ff8b8881cb3d0bf7d1e9",
          "md5": "2f2c8f2679f0c57ef7a9b1e2586487fa",
          "sha256": "afc270c5058deb6979ca2e10fd75730091b46be1ec19fa21e14e2c00f54fd9bf"
        },
        "downloads": -1,
        "filename": "nempy-1.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "2f2c8f2679f0c57ef7a9b1e2586487fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6394872,
        "upload_time": "2023-01-13T04:13:32",
        "upload_time_iso_8601": "2023-01-13T04:13:32.084186Z",
        "url": "https://files.pythonhosted.org/packages/3f/2c/e438512d38a83ef512b5ec49f1bbefa71b2ff3c5ff8b8881cb3d0bf7d1e9/nempy-1.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f972548363d072ab2ddcc399ddf2c8a9a577b90921a500776595860f4f0c9b7d",
        "md5": "42d54dfba8ac0f5fc14bd06a70f9d992",
        "sha256": "d8527c441ed10eb11c689037559c6fda02de7c95bed67dc5b21fd31ea7f846c7"
      },
      "downloads": -1,
      "filename": "nempy-1.1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "42d54dfba8ac0f5fc14bd06a70f9d992",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 103264,
      "upload_time": "2023-01-13T04:13:18",
      "upload_time_iso_8601": "2023-01-13T04:13:18.309136Z",
      "url": "https://files.pythonhosted.org/packages/f9/72/548363d072ab2ddcc399ddf2c8a9a577b90921a500776595860f4f0c9b7d/nempy-1.1.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3f2ce438512d38a83ef512b5ec49f1bbefa71b2ff3c5ff8b8881cb3d0bf7d1e9",
        "md5": "2f2c8f2679f0c57ef7a9b1e2586487fa",
        "sha256": "afc270c5058deb6979ca2e10fd75730091b46be1ec19fa21e14e2c00f54fd9bf"
      },
      "downloads": -1,
      "filename": "nempy-1.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "2f2c8f2679f0c57ef7a9b1e2586487fa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6394872,
      "upload_time": "2023-01-13T04:13:32",
      "upload_time_iso_8601": "2023-01-13T04:13:32.084186Z",
      "url": "https://files.pythonhosted.org/packages/3f/2c/e438512d38a83ef512b5ec49f1bbefa71b2ff3c5ff8b8881cb3d0bf7d1e9/nempy-1.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}