{
  "info": {
    "author": "Example Author",
    "author_email": "author@example.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# Two  Layer Perceptron\n\nA Two Layer Perceptron(specialized Multi Layer Perceptron) from scratch.\nThe whole program is implemented on the principles of Object Oriented Programming Design.\nThe program fetches mnist data, stores into a database then retrieves it using APIs.\nThese APIs for creation, storing and retreiving from the database has also been implemented from scratch on the lines of OOPD.\n\n\n\n## Authors\n\n- Giridhar S. [MT21026]\n- Palani Vigneshwar [MT21062]\n- Shashwat Vaibhav [Mt21082]\n- Arpit Mathur [MT20328]\n\n## Necessary Modules\nThe modules and standard routines need to be pre-installed are as follows:-\n- numpy\n- pandas\n- matplotlib\n- sklearn\n- sqlite3\n- pycallgraph\n\n## Necessary Imports\n- numpy  \n- pandas \n- matplotlib.pyplot\n- matplotlib.image\n- sklearn.datasets.load_digits\n- sqlite3\n- sklearn.preprocessing.StandardScaler\n- sklearn.preprocessing.MinMaxScaler\n- sklearn.model_selection.train_test_split\n- sklearn.metrics.classification_report\n- sklearn.model_selection accuracy_score\n- pycallgraph.PyCallGraph \n- pycallgraph.output.GraphvizOutput\n- pycallgraph.Config\n- pycallgraph.GlobbingFilter\n\n## Classes Defined\n\n### `DescribeNCreate:`\n- provides methods to get information, descriptive statistics and dataframe creation utility\n- accepts bunch dataset during instantiation.\n### `DataBASE:`\n- Inherits from `DescribeNCreate` class\n- Provides method to create and store to a database from dataframe proovided to it.\n- Implements all the Schema creation, insertion and exception handling for Database Error from scratch.\n### `FetchFB:`\n- Inherits from `DataBASE` class\n- provides utility to fetch database rows by  implementing fetch query from scratch.\n- performs exception handling.\n### `newDataBase:`\n- instantiated by providing database name and table name of our choice.\n- provide methods to store the results from 2 Layer Perceptron into a database.\n- performs schema creation and Insertion queries from scratch.\n### `Activation_Function:`\n- It acts as a generic class to implement several activation functions such as `Sigmoid`, `ReLu`, `Tanh` and `Softmax`.\n### `propagation:`\n- inherits from `Activation_Function` class.\n- implements methods necessary for forward and backward propagation.\n### `tlp:`\n- most imporrtant of all,  inherits from `propagation` class.\n- provides methods to set weights, hyperparameters parameters, initialization and updation.\n- provides the important fit and predict utility.\n- provides accuracy_score utility as well.\n- all the methods implemented from scratch.\n\n## Folders,Files wheel and installation info @Giridhar\n### `oopd_iiitd_group9-0.0.1-py3-none-any.whl:`\n- Wheel file which can be installed via -> pip install oopd_iiitd_group9-0.0.1-py3-none-any.whl\n- the classes in the wheel file can be accessed as follows -> from project.code import *\n- the project above is a folder in the wheel file\n\n### `main:`\n- This folder contains the files with running code\n- This folder contains two files main_code.py and code_with_whl.py\n\n### `main_code.py:`\n- This file contains the main code with all the classes.\n\n### `code_with_whl.py:`\n- This file contains only the code in main(). The whl file installed is used here and the classes from the wheel file is used here\n- Please look into `oopd_iiitd_group9-0.0.1-py3-none-any.whl` section\n\n### `src:`\n- This folder is used to create the whl file i.e. for packaging\n- It is not the main running folder.\n\n### `dist:`\n- This also contains the .whl file and got why building the file\n\n### `doxygen_html:`\n- This folder contains all the html files generated by doxygen.\n\n### `profiling_pycallgraph:`\n- This is the profiling report created using pycallgraph and is in the format of .png\n\n### `UML Class diagram:`\n- This is the UML class diagram visualising the classes and the relations in the main code.\n\n### `setup.cfg`\n- Used in creating the wheel file (.whl file)\n\n### `pyproject.toml`\n- Used in creating the wheel file (.whl file)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pypa/sampleproject",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "oopd-iiitd-group10",
    "package_url": "https://pypi.org/project/oopd-iiitd-group10/",
    "platform": "",
    "project_url": "https://pypi.org/project/oopd-iiitd-group10/",
    "project_urls": {
      "Bug Tracker": "https://github.com/pypa/sampleproject/issues",
      "Homepage": "https://github.com/pypa/sampleproject"
    },
    "release_url": "https://pypi.org/project/oopd-iiitd-group10/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A small example package",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12268878,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5789846bc81a26f12be35bf7f46ed3bf8370d7d3e46cd109033c7e2de541fb0",
          "md5": "00c8f176b135ce71b51f2f087ef3eb40",
          "sha256": "3bd55555ac06b4cd057f9c25308d88327ec4ad980ee7b81d8888407c74ce738a"
        },
        "downloads": -1,
        "filename": "oopd_iiitd_group10-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "00c8f176b135ce71b51f2f087ef3eb40",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9018,
        "upload_time": "2021-12-10T16:19:25",
        "upload_time_iso_8601": "2021-12-10T16:19:25.243029Z",
        "url": "https://files.pythonhosted.org/packages/b5/78/9846bc81a26f12be35bf7f46ed3bf8370d7d3e46cd109033c7e2de541fb0/oopd_iiitd_group10-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb327ac188b70b106c68a397d758fb70781830f0511f7210ff5741b1ca06f941",
          "md5": "c9d0b67c1ed5805d7d61d5cb1f16c79f",
          "sha256": "b9a13560e9bb2651ae0d3e697aa3e09204b5fe4362d1c5d24849c3746a83df42"
        },
        "downloads": -1,
        "filename": "oopd_iiitd_group10-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c9d0b67c1ed5805d7d61d5cb1f16c79f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8755,
        "upload_time": "2021-12-10T16:19:26",
        "upload_time_iso_8601": "2021-12-10T16:19:26.373278Z",
        "url": "https://files.pythonhosted.org/packages/fb/32/7ac188b70b106c68a397d758fb70781830f0511f7210ff5741b1ca06f941/oopd_iiitd_group10-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b5789846bc81a26f12be35bf7f46ed3bf8370d7d3e46cd109033c7e2de541fb0",
        "md5": "00c8f176b135ce71b51f2f087ef3eb40",
        "sha256": "3bd55555ac06b4cd057f9c25308d88327ec4ad980ee7b81d8888407c74ce738a"
      },
      "downloads": -1,
      "filename": "oopd_iiitd_group10-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "00c8f176b135ce71b51f2f087ef3eb40",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9018,
      "upload_time": "2021-12-10T16:19:25",
      "upload_time_iso_8601": "2021-12-10T16:19:25.243029Z",
      "url": "https://files.pythonhosted.org/packages/b5/78/9846bc81a26f12be35bf7f46ed3bf8370d7d3e46cd109033c7e2de541fb0/oopd_iiitd_group10-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fb327ac188b70b106c68a397d758fb70781830f0511f7210ff5741b1ca06f941",
        "md5": "c9d0b67c1ed5805d7d61d5cb1f16c79f",
        "sha256": "b9a13560e9bb2651ae0d3e697aa3e09204b5fe4362d1c5d24849c3746a83df42"
      },
      "downloads": -1,
      "filename": "oopd_iiitd_group10-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c9d0b67c1ed5805d7d61d5cb1f16c79f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8755,
      "upload_time": "2021-12-10T16:19:26",
      "upload_time_iso_8601": "2021-12-10T16:19:26.373278Z",
      "url": "https://files.pythonhosted.org/packages/fb/32/7ac188b70b106c68a397d758fb70781830f0511f7210ff5741b1ca06f941/oopd_iiitd_group10-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}