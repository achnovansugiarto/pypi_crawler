{
  "info": {
    "author": "Windsor AI",
    "author_email": "dev@windsor.ai",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# RedditAdsWindsorApi\n\n`RedditAdsWindsorApi` is a python package makes it easy to get marketing data from Reddit into python.\n\n[Windsor.ai](https://windsor.ai/) allows to get marketing data from any platform. It simplifies the complexity of dealing with multiple platforms, unlocking unified, valuable information in a format that matters to you. For more details checkout [onboard.windsor.ai](https://onboard.windsor.ai/).\n\n## Features\n\n✅ Easy access to marketing data via windsor.ai APIs\n\n✅ Lightweight (single dependency - [requests](https://pypi.org/project/requests/))\n\n✅ Supports both python 2.7+ and 3\n\n## Other Supported marketing and platforms\n\n✅ Google Analytics\n\n✅ Google Ads\n\n✅ Facebook Ads\n\n✅ Facebook organic\n\n✅ Bing Ads\n\n✅ Linkedin Ads\n\n✅ Hubspot\n\n✅ Salesforce\n\n✅ Google search console\n\n✅ Criteo\n\n✅ Reddit\n\n✅ Tiktok\n\n✅ Appnexus\n\n✅ Campaign Manager\n\n✅ Twitter\n\n✅ Awin\n\n✅ Adroll\n\n✅ Shopify\n\n✅ Klaviyo\n\n✅ Airtable\n\n✅ Intercom\n\n✅ Zoho\n\n✅ Idealo\n\n✅ Pinterest\n\n✅ Appsflyer\n\n✅ Adobe\n\n\n\n\n\n## Usage\n\n### Installation\n\n```sh\npip install RedditAdsWindsorApi\n```\n\n### Registration\n\nYou need to get a free API key to access windsor.ai's APIs. Register your account first and add a datasource like facebook ads and then get the API key. For more details check out our official [API documentation](https://windsor.ai/api-documentation/) and [this article](https://windsor.ai/api-fields/). Get the API key at https://onboard.windsor.ai \n\n### Minimal Example\n\n```python\nfrom RedditAdsWindsorApi.client import Client\nfrom RedditAdsWindsorApi.enums import LAST_7D\nfrom RedditAdsWindsorApi.enums import FIELD_SOURCE, FIELD_CAMPAIGN, FIELD_CLICKS\n\napi_key = 'xxx'  # Get it from your windsor.ai account. It's recommended to store and get this securely, for example an env variable.\n\n# Setup a client object with the API key\nclient = Client(api_key)\n\n# Call the /connectors API.\ncampaign_clicks = client.connectors(date_preset=LAST_7D, fields=[FIELD_SOURCE, FIELD_CAMPAIGN, FIELD_CLICKS])\n\n# can also be run like:\ncampaign_clicks = client.connectors(date_preset='last_7d', fields=['date','clicks','spend'])\n\n# Response will be a python dict (parsed from the json response recieved).\nprint(campaign_clicks)\n\n[\n  {'date': '2021-04-15', 'clicks': 3, 'spend': 8.139999999999999},\n  {'date': '2021-04-15', 'clicks': 2, 'spend': 6.51},\n  {'date': '2021-04-15', 'clicks': 1, 'spend': 3.88},\n  {'date': '2021-04-15', 'clicks': 4, 'spend': 3.275311},\n  {'date': '2021-04-15', 'clicks': 6, 'spend': 1.408321}\n  ],\n\n# Get Google Ads data only\ncampaign_clicks = client.connectors(\n    connector=\"google_ads\",\n    date_preset=LAST_7D,\n    fields=[\"account_name\", \"campaign\", \"clicks\", \"datasource\", \"source\", \"spend\"]\n)\n\n# Get Facebook Ads data only\ncampaign_clicks = client.connectors(\n    connector=\"facebook\",\n    date_preset=LAST_7D,\n    fields=[\"account_name\", \"campaign\", \"clicks\", \"datasource\", \"source\", \"spend\"]\n)\n\n# Get list of all possible connectors (i.e: Google Ads, Facebook Ads, Twitter, Tik Tok etc.)\nlist_connectors = client.list_connectors\nprint(list_connectors)\n\n['adform', 'adobe', 'adroll', 'all', 'amazon_ads', 'amazon_s3', 'amazon_sp', 'apple_search_ads', 'appnexus', 'appsflyer', 'awin', 'bing', 'cm360', 'criteo' 'currency_conversion', 'daisycon', 'dv360', 'facebook', 'facebook_leads', 'facebook_organic', 'gmailcsv', 'google_ad_manager', 'google_ads', 'google_pagespeed', 'googleanalytics', 'googleanalytics4', 'googlesheets', 'hubspot', 'idealo', 'instagram', 'klaviyo', 'linkedin', 'linkedin_organic', 'mailchimp', 'outbrain', 'pinterest', 'quora', 'reddit', 'rtbhouse', 'salesforce', 'searchconsole', 'sftp', 'shopify', 'Reddit', 'stripe', 'taboola', 'tiktok', 'twitter', 'twitter_organic', 'vertaa', 'zoho']\n\n# Sample with date specific ranges.\ndataset_with_ranges = client.connectors(\n      date_from=\"2022-10-18\",\n      date_to=\"2022-10-20\",\n      fields=[\"account_name\", \"campaign\", \"clicks\", \"datasource\", \"source\", \"spend\", \"date\"]\n)\n```\n\n### List of fields\nThe full list of fields that the package accepts is given in https://windsor.ai/connector/all/. Fields can be common to all the connectors or specific for each company.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/windsor-ai/RedditAdsWindsorApi",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "RedditAdsWindsorApi",
    "package_url": "https://pypi.org/project/RedditAdsWindsorApi/",
    "platform": null,
    "project_url": "https://pypi.org/project/RedditAdsWindsorApi/",
    "project_urls": {
      "Homepage": "https://github.com/windsor-ai/RedditAdsWindsorApi"
    },
    "release_url": "https://pypi.org/project/RedditAdsWindsorApi/1.0.6/",
    "requires_dist": [
      "requests (~=2.25.1)"
    ],
    "requires_python": "",
    "summary": "Easy access to windsor.ai Reddit APIs",
    "version": "1.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15625092,
  "releases": {
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad661381550f2084ed7007e8b58ca86db09a07cdf73975c57a4d504e0db37463",
          "md5": "3cb1ca02aa7ca4326ed8b266e33cd89b",
          "sha256": "52bc48340798a15c8bab14d472631c388e18dc1f58fd925ffba796ee34aaccb7"
        },
        "downloads": -1,
        "filename": "RedditAdsWindsorApi-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3cb1ca02aa7ca4326ed8b266e33cd89b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5001,
        "upload_time": "2022-11-02T10:06:11",
        "upload_time_iso_8601": "2022-11-02T10:06:11.235329Z",
        "url": "https://files.pythonhosted.org/packages/ad/66/1381550f2084ed7007e8b58ca86db09a07cdf73975c57a4d504e0db37463/RedditAdsWindsorApi-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40d355c70964903d0a4570a27a458729061a1d84cc43b00ced1a835c3bd075d9",
          "md5": "ce2da82a2d7b24de750c1dde89ce31cb",
          "sha256": "3acdfa53573ef85e07d89ded1d8844841a037209257b70f36fb97f58758b44a9"
        },
        "downloads": -1,
        "filename": "RedditAdsWindsorApi-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce2da82a2d7b24de750c1dde89ce31cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5678,
        "upload_time": "2022-11-02T10:06:10",
        "upload_time_iso_8601": "2022-11-02T10:06:10.026159Z",
        "url": "https://files.pythonhosted.org/packages/40/d3/55c70964903d0a4570a27a458729061a1d84cc43b00ced1a835c3bd075d9/RedditAdsWindsorApi-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "40d355c70964903d0a4570a27a458729061a1d84cc43b00ced1a835c3bd075d9",
        "md5": "ce2da82a2d7b24de750c1dde89ce31cb",
        "sha256": "3acdfa53573ef85e07d89ded1d8844841a037209257b70f36fb97f58758b44a9"
      },
      "downloads": -1,
      "filename": "RedditAdsWindsorApi-1.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ce2da82a2d7b24de750c1dde89ce31cb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5678,
      "upload_time": "2022-11-02T10:06:10",
      "upload_time_iso_8601": "2022-11-02T10:06:10.026159Z",
      "url": "https://files.pythonhosted.org/packages/40/d3/55c70964903d0a4570a27a458729061a1d84cc43b00ced1a835c3bd075d9/RedditAdsWindsorApi-1.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}