{
  "info": {
    "author": "cjlmonster",
    "author_email": "cjlmonster@163.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "## python环境备份与迁移\n\n### 原环境执行以下命令，备份环境所需\n> pip freeze > requirements.txt\n\n\n### 新环境执行以下命令还原\n> pip install -r requirements.txt\n\n## Python argparse模块使用步骤\n\n### 样例\n``` python\nimport argparse\n\nparser = argparse.ArgumentParser(proj='cmd', description='Process some integers.')\n\nparser.add_argument('integers', metavar='N', type=int, nargs='+',\n                    help='an integer for the accumulator')\nparser.add_argument('--sum', dest='accumulate', action='store_const',\n                    const=sum, default=max,\n                    help='sum the integers (default: find the max)')\n                    \nargs = parser.parse_args()\nprint(args.accumulate(args.integers))\n```\n### ArgumentParser对象详解\n``` python\nclass argparse.ArgumentParser(\n    prog=None,                  # 设定程序名称 (defaul: sys.argv[0])\n    usage=None,                 # 替换默认的Usage信息\n    description=None,           # 程序简要信息说明(参数说明前)\n    epilog=None,                # 附加信息说明(参数说明后)\n    parents=[],                 # 继承父解析器(parser)\n    formatter_class=argparse.HelpFormatter,     # 自定义帮忙信息显示格式(4种)\n    prefix_chars='-',           # 参数前缀符号(默认为-,如：-h/--help)\n    fromfile_prefix_chars=None, # 从文件中引用参数（与在命令行直接写作用一致，解决参数过多的情况）\n    argument_default=None,      # 可设置argparse.SUPPRESS阻止默认参数默认值\n    conflict_handler='error',   # 参数冲突处理\n    add_help=True,              # 帮助信息中默认添加\"-h, --help\"描述\n    allow_abbrev=True           # 允许参数缩写\n)\n\n\n```\n\n### add_argument()方法\n\n``` python\nArgumentParser.add_argument(\n    name or flags...    # 选项的名称或列表,例如：foo/-f/--foo\n    [, action]      # 采取的基本操作\n                        store(默认)         存储参数值\n                        store_const        使用该字符串选项时，取用const值\n                        store_true         使用该字符串选项时，参数值置为True\n                        store_false        使用该字符串选项时，参数值置为False\n                        append             同一个命令行中多次使用该字符串选项时，以追加的方式将值添加到list中\n                        append_const       将多个字符串选项的const值合并到一个list\n                        count              统计选项出现的次数 （如：\"-vvv\",则最终值为3）\n                        help               parser默认会添加一个help action。(一般不用理会)\n                        version            打印版本信息\n                        也可以自定义action类\n    [, nargs]       # 该参数值要求的数量\n                        数值       指明参数个数\n                        ?         提供了参数则取参数值；\n                                    无参数但声明了选项字符串则取const值；\n                                    无参数也未声明选择字符串则取default值\n                        *         所有参数存入list\n                        +         与*类似，但参数个数不能为空\n                        argparse.REMAINDER  原封不动的记录参数到list中，通常用于将这些参数传递到其它的命令行工具。\n    [, const]       # action/nargs部分要求的常值\n                        1、当action=\"store_const\"或者\"append_const\"时需要设置\n                        2、当选项为(-f/--foo),nargs='?'，同时未提供具体参数时，取用该值。\n    [, default]     # 参数默认值\n    [, type]        # 参数类型（内建参数或者函数，也可是自定义函数）\n    [, choices]     # 允许的参数值（白名单）,tuple/range\n    [, required]    # 选项是否必须，设置为True表示选项必填。\n    [, help]        # 参数说明,可以用其它类似 %(prog)s 格式调用prog值；可设置argparse.SUPPRESS使该选项在帮助信息中不可见。\n    [, metavar]     # 定义参数在Usage信息中的名称\n    [, dest]        # 解析后的属性名称\n)\n\n\n```\n\n### git .gitignore 忽略规则\n\n``` \n#注释           .gitignore的注释\n*.txt           忽略所有 .txt 后缀的文件\n!src.a          忽略除 src.a 外的其他文件\n/todo           仅忽略项目根目录下的 todo 文件，不包括 src/todo\nbuild/          忽略 build/目录下的所有文件，过滤整个build文件夹；\ndoc/*.txt       忽略doc目录下所有 .txt 后缀的文件，但不包括doc子目录的 .txt 的文件\n  \nbin/:           忽略当前路径下的 bin 文件夹，该文件夹下的所有内容都会被忽略，不忽略 bin 文件\n/bin:           忽略根目录下的 bin 文件\n/*.c:           忽略 cat.c，不忽略 build/cat.c\ndebug/*.obj:    忽略debug/io.obj，不忽略 debug/common/io.obj和tools/debug/io.obj\n**/foo:         忽略/foo, a/foo, a/b/foo等\na/**/b:         忽略a/b, a/x/b, a/x/y/b等\n!/bin/run.sh    不忽略bin目录下的run.sh文件\n*.log:          忽略所有 .log 文件\nconfig.js:      忽略当前路径的 config.js 文件\n  \n/mtk/           忽略整个文件夹\n*.zip           忽略所有.zip文件\n/mtk/do.c       忽略某个具体文件\n```\n\n### git rm -r --cached\n\n有时候，gitignore考虑不全面，发现有不该提交的文件已经提交后，仅仅在.gitignore中加入忽略是不行的。这个时候需要执行:\n> git rm -r --cached 文件/文件夹名字\n\n去掉已经托管的文件，然后提交即可。\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.cjlmonster.cn",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cjlpytoolkit",
    "package_url": "https://pypi.org/project/cjlpytoolkit/",
    "platform": "python3",
    "project_url": "https://pypi.org/project/cjlpytoolkit/",
    "project_urls": {
      "Homepage": "https://www.cjlmonster.cn"
    },
    "release_url": "https://pypi.org/project/cjlpytoolkit/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "常用Python工具库或脚本命令",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13922024,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27abb2c8887fcbf2fa9846e41375b1b045e1d1e5157a40f03c4192683d748872",
          "md5": "2bf65ac54bbacbaaab040f89d11ca5cb",
          "sha256": "935c172a924b30019637a38ed3fa4dffff123149a1f9281086140f1359e35d41"
        },
        "downloads": -1,
        "filename": "cjlpytoolkit-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2bf65ac54bbacbaaab040f89d11ca5cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 5768,
        "upload_time": "2022-05-24T14:35:41",
        "upload_time_iso_8601": "2022-05-24T14:35:41.529981Z",
        "url": "https://files.pythonhosted.org/packages/27/ab/b2c8887fcbf2fa9846e41375b1b045e1d1e5157a40f03c4192683d748872/cjlpytoolkit-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "27abb2c8887fcbf2fa9846e41375b1b045e1d1e5157a40f03c4192683d748872",
        "md5": "2bf65ac54bbacbaaab040f89d11ca5cb",
        "sha256": "935c172a924b30019637a38ed3fa4dffff123149a1f9281086140f1359e35d41"
      },
      "downloads": -1,
      "filename": "cjlpytoolkit-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2bf65ac54bbacbaaab040f89d11ca5cb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 5768,
      "upload_time": "2022-05-24T14:35:41",
      "upload_time_iso_8601": "2022-05-24T14:35:41.529981Z",
      "url": "https://files.pythonhosted.org/packages/27/ab/b2c8887fcbf2fa9846e41375b1b045e1d1e5157a40f03c4192683d748872/cjlpytoolkit-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}