{
  "info": {
    "author": "Wiserli Pvt Ltd",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# WaterMap Library\r\n\r\n### Watnet and DeepWaterMap Method for Water Detection in Satellite Imagery.\r\n\r\nThis library contains Watnet and DeepWaterMap methods for the detction of surface water in satellite imagery.\r\n\r\n## Input Image:\r\n\r\nInput image should be a six band tif image containing the following bands: red, green, blue, near infrared, shortwave infrared 1 and shortwave infrared 2 (the band number of 2, 3, 4, 8, 11, and 12 of sentinel-2 image).\r\n\r\n## How to use this library:\r\n\r\n### --Step 1\r\n\r\nEnter the following commands for installing the library, and then configure the python and deep learning environment.\r\nThe deep learning software used in this repo is Tensorflow 2.\r\n  ~~~console\r\n  pip install WaterMap\r\n  ~~~\r\n\r\n### -- Step 2\r\n\r\n- Output in array form:\r\nIn the pytest.py file provide the input image path and run the file to get ouptut in array form array\r\n- Output in png form:\r\nIn the pytest.py file provide input to the \"out_png_path\" to store the output path to a particular path.\r\n- Output in tif form:\r\nIn the pytest.py file provide input to the \"out_tif_path\" to store the output path to a particular path.\r\n- All the output can also be achieved simultaneously by providing both the png and tif output path.\r\n- Example Code for watnet method:\r\n~~~console\r\n  wn.predict(img_path, out_png_path='sample_images/dwm_coastal1.png')\r\n~~~\r\n- Example Code for deepwatermap method:\r\n~~~console\r\n dwm.predict(img_path, out_png_path='sample_images/dwm_coastal1.png')\r\n~~~\r\n\r\n## Thresholding Option:\r\n\r\nThere is also a option to provide the threshold to both th methods as an input:\r\n\r\n- Example Code for deepwatermap method:\r\n- default threshold for watnet is 0.5 and for deepwatermap is 0.35\r\n~~~console\r\n dwm.predict(img_path, out_png_path='sample_images/dwm_coastal1.png',threshold='0.5')\r\n~~~\r\n\r\n### Downloading the Image from Google Earth Engine on Google Drive\r\n- On google earth engine open code editor.\r\n- Select the area of interest from the map and run the following code:\r\n~~~console\r\nvar data = ee.ImageCollection(\"COPERNICUS/S2_SR\")\r\nvar image= data.filterDate('2022-07-22','2022-07-23')\r\nvar dataset = image.filterBounds(aoi).select(['B2', 'B3', 'B4','B8', 'B11', 'B12']);\r\nprint(dataset);\r\nMap.addLayer(dataset);\r\nExport.image.toDrive({\r\n  image:dataset.mosaic(),\r\n  description:'sentinel',\r\n  scale:10,\r\n  region:aoi,\r\n})\r\n~~~\r\n- Run the above code and select the task option on the left hand side.\r\n- There a run option will popup. Click on it.\r\n- An pop window will be open afterwards asking the folder details to save the image and the file format.\r\n- Select the file format as tif\r\n- A six band tif image will now be downloaded in google drive.\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "WaterMap",
    "package_url": "https://pypi.org/project/WaterMap/",
    "platform": null,
    "project_url": "https://pypi.org/project/WaterMap/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/WaterMap/1.0.1/",
    "requires_dist": [
      "numpy (~=1.22.1)",
      "tifffile (~=2022.8.12)",
      "matplotlib (~=3.5.1)",
      "gdown (~=4.5.1)",
      "tensorflow (~=2.10.0)"
    ],
    "requires_python": "",
    "summary": "Water Mapping from Remote Sensing Images",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17381061,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4ff8622cbf7aebfa68f677c891ecfa3c8ffd00bd50b312fb56cb8e9e69d065d",
          "md5": "2c577225e4b56587d0e76027f4dcf806",
          "sha256": "5e4d656345d82caada3a7762768e8e06c23ed04e8ca4dd8e569f94539bc4dab0"
        },
        "downloads": -1,
        "filename": "WaterMap-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c577225e4b56587d0e76027f4dcf806",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7023,
        "upload_time": "2023-03-21T12:55:43",
        "upload_time_iso_8601": "2023-03-21T12:55:43.974836Z",
        "url": "https://files.pythonhosted.org/packages/e4/ff/8622cbf7aebfa68f677c891ecfa3c8ffd00bd50b312fb56cb8e9e69d065d/WaterMap-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00eccb50b69af198f61de3f965c15d3e3f38ecb993c1c3f30bbb2ebdd656dcba",
          "md5": "745600ec34f496d5a869836f8b44f130",
          "sha256": "7af89ae5f2376e557f89d78cd82c395c61cf79f22392049dde7a7334ed1412d6"
        },
        "downloads": -1,
        "filename": "WaterMap-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "745600ec34f496d5a869836f8b44f130",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6379,
        "upload_time": "2023-03-21T12:55:45",
        "upload_time_iso_8601": "2023-03-21T12:55:45.991071Z",
        "url": "https://files.pythonhosted.org/packages/00/ec/cb50b69af198f61de3f965c15d3e3f38ecb993c1c3f30bbb2ebdd656dcba/WaterMap-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da9e8c2f69c9f460c85fa17982e8a2f1d7b9826873e2ba58cfef6478a8b5cdd8",
          "md5": "b1d24440e978731f22c4ad967c0abd3e",
          "sha256": "4592fee245438cac6a5e8caeda62da66c1c384bace937d9c010a777c1d5ce158"
        },
        "downloads": -1,
        "filename": "WaterMap-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1d24440e978731f22c4ad967c0abd3e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8130,
        "upload_time": "2023-03-21T14:57:01",
        "upload_time_iso_8601": "2023-03-21T14:57:01.632062Z",
        "url": "https://files.pythonhosted.org/packages/da/9e/8c2f69c9f460c85fa17982e8a2f1d7b9826873e2ba58cfef6478a8b5cdd8/WaterMap-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "da9e8c2f69c9f460c85fa17982e8a2f1d7b9826873e2ba58cfef6478a8b5cdd8",
        "md5": "b1d24440e978731f22c4ad967c0abd3e",
        "sha256": "4592fee245438cac6a5e8caeda62da66c1c384bace937d9c010a777c1d5ce158"
      },
      "downloads": -1,
      "filename": "WaterMap-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b1d24440e978731f22c4ad967c0abd3e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8130,
      "upload_time": "2023-03-21T14:57:01",
      "upload_time_iso_8601": "2023-03-21T14:57:01.632062Z",
      "url": "https://files.pythonhosted.org/packages/da/9e/8c2f69c9f460c85fa17982e8a2f1d7b9826873e2ba58cfef6478a8b5cdd8/WaterMap-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}