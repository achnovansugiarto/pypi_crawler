{
  "info": {
    "author": "Vitalis Salis",
    "author_email": "vitsalis@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PyCG - Practical Python Call Graphs\n\nPyCG generates call graphs for Python code using static analysis.\nIt efficiently supports\n* Higher order functions\n* Twisted class inheritance schemes\n* Automatic discovery of imported modules for further analysis\n* Nested definitions\n\nYou can read the full methodology as well as a complete evaluation on the\n[ICSE 2021 paper](https://vitsalis.com/papers/pycg.pdf).\n\nYou can cite PyCG as follows.\nVitalis Salis, Thodoris Sotiropoulos, Panos Louridas, Diomidis Spinellis and Dimitris Mitropoulos.\nPyCG: Practical Call Graph Generation in Python.\nIn _43rd International Conference on Software Engineering, ICSE '21_,\n25â€“28 May 2021.\n\n# Installation\n\nPyCG is implemented in Python3 and requires Python version 3.4 or higher.\nIt also has no dependencies. Simply:\n```\npip install pycg\n```\n\n# Usage\n\n```\n~ >>> pycg -h\nusage: __main__.py [-h] [--package PACKAGE] [--fasten] [--product PRODUCT]\n                        [--forge FORGE] [--version VERSION] [--timestamp TIMESTAMP]\n                        [--max-iter MAX_ITER] [--operation {call-graph,key-error}]\n                        [--as-graph-output AS_GRAPH_OUTPUT] [-o OUTPUT]\n                        [entry_point ...]\n\npositional arguments:\n  entry_point           Entry points to be processed\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --package PACKAGE     Package containing the code to be analyzed\n  --fasten              Produce call graph using the FASTEN format\n  --product PRODUCT     Package name\n  --forge FORGE         Source the product was downloaded from\n  --version VERSION     Version of the product\n  --timestamp TIMESTAMP\n                        Timestamp of the package's version\n  --max-iter MAX_ITER   Maximum number of iterations through source code. If not specified a fix-point iteration will be performed.\n  --operation {call-graph,key-error}\n                        Operation to perform. Choose call-graph for call graph generation (default) or key-error for key error detection on dictionaries.\n  --as-graph-output AS_GRAPH_OUTPUT\n                        Output for the assignment graph\n  -o OUTPUT, --output OUTPUT\n                        Output path\n```\n\nThe following command line arguments should used only when `--fasten` is\nprovied:\n\n- `--product`: The name of the package.\n- `--forge`: Source the package was downloaded from.\n- `--version`: The version of the package.\n- `--timestamp` : The timestamp of the package's version.\n\n# Call Graph Output\n\n## Simple JSON format\n\nThe call edges are in the form of an adjacency list where an edge `(src, dst)`\nis represented as an entry of `dst` in the list assigned to key `src`:\n\n```\n{\n    \"node1\": [\"node2\", \"node3\"],\n    \"node2\": [\"node3\"],\n    \"node3\": []\n}\n```\n\n## FASTEN Format\n\nFor an up-to-date description of the FASTEN format refer to the\n[FASTEN\nwiki](https://github.com/fasten-project/fasten/wiki/Extended-Revision-Call-Graph-format#python).\n\n# Key Errors Output\n\nWe are currently experimenting on identifying potential invalid dictionary\naccesses on Python dictionaries (key errors).\nThe output format for key errors is a list of dictionaries containing:\n- The file name in which the key error was identified\n- The line number inside the file\n- The namespace of the accessed dictionary\n- The key used to access the dictionary\n\n```\n[{\n    \"filename\": \"mod.py\",\n    \"lineno\": 2,\n    \"namespace\": \"mod.<dict1>\",\n    \"key\": \"key2\"\n},\n{\n    \"filename\": \"mod.py\",\n    \"lineno\": 8,\n    \"namespace\": \"mod.<dict1>\",\n    \"key\": \"nokey\"\n}]\n```\n\n# Examples\n\nAll the entry points are known and we want the simple JSON format\n```\n~ >>> pycg --package pkg_root pkg_root/module1.py pkg_root/subpackage/module2.py -o cg.json\n```\n\nAll entry points are not known and we want the simple JSON format\n```\n~ >>> pycg --package django $(find django -type f -name \"*.py\") -o django.json\n```\n\nWe want the FASTEN format:\n```\n~ >>> pycg --package pypi_pkg --fasten --product \"pypipkg\" --forge \"PyPI\" \\\n        --version \"0.1\" --timestamp 42 \\\n        pypi_pkg/module1.py pkg_root/subpackage/module2.py -o cg.json\n```\n\n# Running Tests\n\nFrom the root directory:\n```\nmake test\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vitsalis/pycg",
    "keywords": "",
    "license": "Apache Software License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pycg",
    "package_url": "https://pypi.org/project/pycg/",
    "platform": null,
    "project_url": "https://pypi.org/project/pycg/",
    "project_urls": {
      "Homepage": "https://github.com/vitsalis/pycg"
    },
    "release_url": "https://pypi.org/project/pycg/0.0.6/",
    "requires_dist": null,
    "requires_python": ">=3.4",
    "summary": "Practical Python Call Graphs",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14287482,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a92ac119aeba3a20dbc0aa4746b0be4dce74e8b554890f70dcec3fb1cced68f",
          "md5": "d8ef6550842fd753a0edbdc7f5017be4",
          "sha256": "5938615010e8d7bd5a37c25606c6f147195aa84c7fa9ebcef04e60cd890a181c"
        },
        "downloads": -1,
        "filename": "pycg-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d8ef6550842fd753a0edbdc7f5017be4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 58242,
        "upload_time": "2021-06-25T09:57:33",
        "upload_time_iso_8601": "2021-06-25T09:57:33.508106Z",
        "url": "https://files.pythonhosted.org/packages/4a/92/ac119aeba3a20dbc0aa4746b0be4dce74e8b554890f70dcec3fb1cced68f/pycg-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd24fa85dfaad405eac9a4df7fcf5ac2ff96d2d628f303bc5ca3b17a643d3bb3",
          "md5": "4aa6eed11aae121c76ba1de51aca92da",
          "sha256": "8315628a0bca7c57fac657a0e24c2fd953e5f43460bcded2c055fc477f02b8ca"
        },
        "downloads": -1,
        "filename": "pycg-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4aa6eed11aae121c76ba1de51aca92da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29548,
        "upload_time": "2021-01-17T18:42:49",
        "upload_time_iso_8601": "2021-01-17T18:42:49.154986Z",
        "url": "https://files.pythonhosted.org/packages/dd/24/fa85dfaad405eac9a4df7fcf5ac2ff96d2d628f303bc5ca3b17a643d3bb3/pycg-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0af0ea9be07879a1e8b47564d5005dde74081e9337957e3e86560bdd4c2f0cb",
          "md5": "4d4a57129d63e3ed49d0b8d08fb7f9a8",
          "sha256": "bb4e5a52c177bdb1cc21025168e7870a52e9d5f71e1ec4b64c9aedf5d4944bda"
        },
        "downloads": -1,
        "filename": "pycg-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d4a57129d63e3ed49d0b8d08fb7f9a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 58241,
        "upload_time": "2021-06-25T09:58:26",
        "upload_time_iso_8601": "2021-06-25T09:58:26.033570Z",
        "url": "https://files.pythonhosted.org/packages/f0/af/0ea9be07879a1e8b47564d5005dde74081e9337957e3e86560bdd4c2f0cb/pycg-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b3cbe63a80eaa2d11ab729298617d40752d953543193556fc173460ee5e2688",
          "md5": "44cd75ea2181604885a99b1dd2130db7",
          "sha256": "ecfdada7604bcfc8881e391412af1a392766a570c6a9f9e29816642d7c52081e"
        },
        "downloads": -1,
        "filename": "pycg-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "44cd75ea2181604885a99b1dd2130db7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31369,
        "upload_time": "2021-06-25T09:58:27",
        "upload_time_iso_8601": "2021-06-25T09:58:27.303899Z",
        "url": "https://files.pythonhosted.org/packages/8b/3c/be63a80eaa2d11ab729298617d40752d953543193556fc173460ee5e2688/pycg-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80573b318a001a710399a35cd30c9fb7c573d109444c0f342e9585c2b95b7c44",
          "md5": "cdbde021b75b6e0d2986005a4d341516",
          "sha256": "45600fc60efb27a8f5d1d98d3085419ead08504be2d233aae380702362de9666"
        },
        "downloads": -1,
        "filename": "pycg-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "cdbde021b75b6e0d2986005a4d341516",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34172,
        "upload_time": "2022-03-24T19:50:11",
        "upload_time_iso_8601": "2022-03-24T19:50:11.061677Z",
        "url": "https://files.pythonhosted.org/packages/80/57/3b318a001a710399a35cd30c9fb7c573d109444c0f342e9585c2b95b7c44/pycg-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e377528e26c2e17db868cb97e6733dbf88e759f30d65cf60d898f346d1a5348",
          "md5": "8b1b6886f95b5959a0ef2ff336721a6a",
          "sha256": "1fdc1c809de0a0c2358e115c7c67a5db1be1802a932b5e9e77ced3ae04edbac1"
        },
        "downloads": -1,
        "filename": "pycg-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "8b1b6886f95b5959a0ef2ff336721a6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 34392,
        "upload_time": "2022-06-29T18:11:54",
        "upload_time_iso_8601": "2022-06-29T18:11:54.380887Z",
        "url": "https://files.pythonhosted.org/packages/7e/37/7528e26c2e17db868cb97e6733dbf88e759f30d65cf60d898f346d1a5348/pycg-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7e377528e26c2e17db868cb97e6733dbf88e759f30d65cf60d898f346d1a5348",
        "md5": "8b1b6886f95b5959a0ef2ff336721a6a",
        "sha256": "1fdc1c809de0a0c2358e115c7c67a5db1be1802a932b5e9e77ced3ae04edbac1"
      },
      "downloads": -1,
      "filename": "pycg-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "8b1b6886f95b5959a0ef2ff336721a6a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 34392,
      "upload_time": "2022-06-29T18:11:54",
      "upload_time_iso_8601": "2022-06-29T18:11:54.380887Z",
      "url": "https://files.pythonhosted.org/packages/7e/37/7528e26c2e17db868cb97e6733dbf88e759f30d65cf60d898f346d1a5348/pycg-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}