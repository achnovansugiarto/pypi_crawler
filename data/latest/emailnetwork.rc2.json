{
  "info": {
    "author": "Samuel Chan",
    "author_email": "s@supertype.ai",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Email Network\n\n## Description\nNetwork graphing utilities for email/mailbox data.\n\n<img align=\"left\" width=\"50%\" src=\"https://github.com/onlyphantom/emailnetwork/blob/main/assets/graph1.png?raw=true\" style=\"margin-right:10%\">\n<img align=\"left\" width=\"50%\" src=\"https://github.com/onlyphantom/emailnetwork/blob/main/assets/graph4.png?raw=true\" style=\"margin-right:10%\">\n<img align=\"left\" width=\"50%\" src=\"https://github.com/onlyphantom/emailnetwork/raw/main/assets/graph5.png?raw=true\" style=\"margin-right:10%\">\n<img align=\"left\" width=\"50%\" src=\"https://github.com/onlyphantom/emailnetwork/blob/main/assets/graph3.png?raw=true\" style=\"margin-right:10%\">\n\n\nFor the social scientists, creating social networks from your mailbox data and among other things:\n* Discover subgroups within your organization (whether the different task forces established were as cohesive as it seems on the outside)  \n* Study social actors (most emails from Marketing involve Peter and Andy) and their relative influence  \n* Identify the key social groups (Sales team hangs out a lot, but the IT / product division less so)\n* Key account managers of the company (Despite being with the company only recently, Margaretha is connected to more key clients than her peers)\n\n\nIf you're a graph theorist and looking for something more statistical:\n* Support directed and undirected graphs (**implemented in version 0.0.2**, see below)\n* Also output statistical measurements such as centrality distribution (**planned for version 0.0.3**)\n* Betweenness, closeness, hubness, distance histograms plotting (**planned for version 0.0.3**) \n* Exports to `.graphml` format for use in other graphing software (**implemented in version 0.0.2**)\n\n## Dependencies\n* Python 3.7+\n* Only dependencies are NetworkX and Matplotlib\n\n## Example Usage\nTo install `emailnetwork`:\n```\npip install emailnetwork\n```\n\nA sample `.mbox` file is provided to you, but you can obtain export your own mailbox from your email service provider. If you use Google (Gmail), you can [use the Google Takeout service](https://takeout.google.com/settings/takeout) to export your mail data.\n\n\n```python\nfrom emailnetwork.extract import MBoxReader\nreader = MBoxReader('path-to-mbox.mbox')\nprint(f'{len(reader)} emails in the sample mbox.')\n\n# extract a specific email\nemail = reader.mbox[5]\nemailmsg = extract_meta(email)\n\n# filter emails by certain date\nthisyearmails = reader.filter_by_date('>=', '2021-01-05')\n\n# print email domains of recipients\nprint(emailmsg.recipients)\nprint(emailmsg.recipients[0].domain)\n\n# extract all emails\nemails = reader.extract()\n```\n\nFor graph visualization:\n```py\nfrom emailnetwork.extract import MBoxReader\n# Read from .mbox\nMBOX_PATH = f'{os.path.dirname(__file__)}/tests/test.mbox'\nreader = MBoxReader(MBOX_PATH)\n\n# Try the following: \n# plot a single directed graph the email at index 3\nplot_single_directed(reader,3)\n\n# plot a single undirected graph the email at index 3, show title in plot\nplot_single_undirected(reader, 1, showtitle=True)\n\n# plot a directed graph, optionally specifying a layout style\nplot_directed(reader)\nplot_directed(reader, 'shell')\n# optionally export a .graphml to your working directory for use\n# in other network / graphing software\nplot_undirected(reader, 'spring', graphml=True)\n```\n\n#### Email Header Analysis \n<img align=\"left\" width=\"40%\" src=\"https://github.com/onlyphantom/emailnetwork/raw/main/assets/histo.png?raw=true\" style=\"margin-right:10%\">\nTo obtain a histogram:\n\n```py\nfrom emailnetwork.extract import MBoxReader\nreader = MBoxReader('path-to-mbox')\nheaders = HeaderCounter(reader)\nheaders.histogram()\n# to show only top 10 header, set an optional n parameter\n# headers.histogram(n=10)\n```\nBecause `HeaderCounter` is a subclass of Python's `Counter`, you can also perform operations such as `headers.most_common(8)` to get the 8 most-common headers from the `mbox` file.\n\nIf you want to find all email headers with the word \"spam\" in it (e.g spam score, other antispam mechanism), you can use Python's `filter()` function:\n```python\nreader = MBoxReader('path-to-mbox')\nheaders = HeaderCounter(reader)\nspamheaders = list(filter(lambda v: \"spam\" in v.lower(), headers.keys()))\n# return:\n# ['X-Spam-Checked-In-Group', 'X-Microsoft-Antispam-PRVS', 'X-Microsoft-Antispam-Untrusted', 'X-Microsoft-Antispam-Message-Info-Original', 'X-Forefront-Antispam-Report-Untrusted', 'x-ms-exchange-antispam-messagedata', 'X-Microsoft-Antispam', 'X-Microsoft-Antispam-Message-Info', 'X-Forefront-Antispam-Report', 'X-Mimecast-Spam-Score', 'x-microsoft-antispam-prvs', 'x-microsoft-antispam', 'x-microsoft-antispam-message-info', 'x-forefront-antispam-report']\n```\n\n#### Mailbox Summary\n\nTo get a simple barchart on the distribution of email domains in your `.mbox`, you can create a `DomainSummary` object and call the `.plot()` function:\n\n<img align=\"left\" width=\"50%\" src=\"https://github.com/onlyphantom/emailnetwork/raw/main/assets/summaryplot.png\" />\n\n```python\nfrom emailnetwork.summary import DomainSummary\nsummary = DomainSummary(reader)\nsummary.plot()\n```\n\nYou can also return a `Counter()` (a subclass of `dict`) instead of a plot:\n\n```python\nsummary.summary\n# return:\n# Counter({'supertype.ai': 203, 'hubspot.com': 115, 'gmail.com': 75, 'google.com': 53, 'adcolony.com': 38, 'fbworkmail.com': 35, 'elementor.com': 29, 'payoneer.com': 15, 'gogame.net': 14, 'zoomd.com': 13, 'am.atlassian.com': 10, 'theafternaut.com': 6, 'alegrium.com': 5, 'accounts.google.com': 4, 'e.atlassian.com': 4, 'tnbaura.com': 4, 'support.lazada.sg': 4, '3kraters.com': 3, 'go.facebookmail.com': 2, 'docs.google.com': 2, 'mail.hellosign.com': 2, 'algorit.ma': 2, 'supertype.atlassian.net': 2, 'ucdconnect.ie': 2, 'mc.facebookmail.com': 1, 'inplacesoftware.com': 1, 'aura.co': 1, 'atlassian.com': 1, 'greenhouse.io': 1})\n```\n##### Why Python 3.7+?\nPython 3.7+ is required because the package is written to take advantage of many features of Python 3.7 and above. \n\nExamples of features that were used extensively in the creation of this package:\n* [Dataclasses, new in Python 3.7](https://www.youtube.com/watch?v=sH_jLQvnpBo)\n* [Insertion-ordered Dictionaries, new in Python 3.7](https://www.youtube.com/watch?v=h-DBWPjpqWY)\n* [Typing (Type hints), new in Python 3.5](https://docs.python.org/3/library/typing.html)\n* [Formatted string literal, new in Python 3.6](https://docs.python.org/3/reference/lexical_analysis.html#f-strings)\n## Testing\nGit clone, and run `nosetests`. You can also run nosetests with coverage:\n```\nnosetests --with-coverage --cover-package=emailnetwork\n\n.........\nName                       Stmts   Miss  Cover\n----------------------------------------------\nemailnetwork/__init__.py       2      0   100%\nemailnetwork/emails.py        55     11    80%\nemailnetwork/extract.py       54     11    80%\nemailnetwork/graph.py        120     82    32%\nemailnetwork/network.py       13      7    46%\nemailnetwork/utils.py         32     17    47%\nemailnetwork/version.py        1      0   100%\n----------------------------------------------\nTOTAL                        277    128    54%\n----------------------------------------------------------------------\nRan 9 tests in 3.226s\n\nOK\n```\n\nAll tests are located in the `/tests/` directory.\n\n\n## Authors and Copyright\n\nSamuel Chan, Supertype [Supertype](https://supertype.ai)\n\nVincentius Christopher Calvin, Supertype [https://supertype.ai](https://supertype.ai)\n\nIf you find the code useful in your project, please link to this repository in your citation.\n\n##### The MIT License (MIT)\n\nCopyright (c) 2021 Supertype Pte Ltd\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/onlyphantom/emailnetwork",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "emailnetwork",
    "package_url": "https://pypi.org/project/emailnetwork/",
    "platform": "",
    "project_url": "https://pypi.org/project/emailnetwork/",
    "project_urls": {
      "Homepage": "http://github.com/onlyphantom/emailnetwork"
    },
    "release_url": "https://pypi.org/project/emailnetwork/0.0.2/",
    "requires_dist": [
      "matplotlib",
      "networkx"
    ],
    "requires_python": ">=3.7",
    "summary": "Network graphing utilities for email/mailbox (.mbox) data",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9851057,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d76356ad7c5a6a380f924796fbdb1ef451880042507d19ac69354634c1727e0",
          "md5": "8556ceb893e0bdcf1e61e0e104185c60",
          "sha256": "46bc036f725a29e908167e53b8b2df8a5338a5e82087dff28749bcc392f92aca"
        },
        "downloads": -1,
        "filename": "emailnetwork-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8556ceb893e0bdcf1e61e0e104185c60",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 275661,
        "upload_time": "2021-01-27T08:53:55",
        "upload_time_iso_8601": "2021-01-27T08:53:55.235898Z",
        "url": "https://files.pythonhosted.org/packages/3d/76/356ad7c5a6a380f924796fbdb1ef451880042507d19ac69354634c1727e0/emailnetwork-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "530c9125fe3796c55f1fe1e735ed7ab57dcc53dd49d74bf599aac82a040a7000",
          "md5": "b2039dccd7b5ed64ca257d2ca3ea9d8e",
          "sha256": "0209901bb50c494e4cc632ac05d93f2997579bbec2ffe294599ce9397c81d0f0"
        },
        "downloads": -1,
        "filename": "emailnetwork-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b2039dccd7b5ed64ca257d2ca3ea9d8e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 274822,
        "upload_time": "2021-01-27T08:53:56",
        "upload_time_iso_8601": "2021-01-27T08:53:56.973146Z",
        "url": "https://files.pythonhosted.org/packages/53/0c/9125fe3796c55f1fe1e735ed7ab57dcc53dd49d74bf599aac82a040a7000/emailnetwork-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4398675c5e867665924db07b95536577379bb2b87fa6cb3cbfeafce400c75f83",
          "md5": "7d7bd93fba6b45033d157f248905abfb",
          "sha256": "308738c824386a5d15f48725c36ceb84c6b341b67d0eded85f491ff827c51d07"
        },
        "downloads": -1,
        "filename": "emailnetwork-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d7bd93fba6b45033d157f248905abfb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 281124,
        "upload_time": "2021-03-23T03:39:58",
        "upload_time_iso_8601": "2021-03-23T03:39:58.039761Z",
        "url": "https://files.pythonhosted.org/packages/43/98/675c5e867665924db07b95536577379bb2b87fa6cb3cbfeafce400c75f83/emailnetwork-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8884556c803aeddfeb18072991d7d33f75b8a8b0e148049be38f3e0f30b2b39c",
          "md5": "79bd3ffbe8f69306be1b771a12ce6e37",
          "sha256": "1a77e72281bd1a9783f3cf646f326906415354b5aea8d381de9da668a96ae975"
        },
        "downloads": -1,
        "filename": "emailnetwork-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "79bd3ffbe8f69306be1b771a12ce6e37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 280009,
        "upload_time": "2021-03-23T03:39:59",
        "upload_time_iso_8601": "2021-03-23T03:39:59.543299Z",
        "url": "https://files.pythonhosted.org/packages/88/84/556c803aeddfeb18072991d7d33f75b8a8b0e148049be38f3e0f30b2b39c/emailnetwork-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4398675c5e867665924db07b95536577379bb2b87fa6cb3cbfeafce400c75f83",
        "md5": "7d7bd93fba6b45033d157f248905abfb",
        "sha256": "308738c824386a5d15f48725c36ceb84c6b341b67d0eded85f491ff827c51d07"
      },
      "downloads": -1,
      "filename": "emailnetwork-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7d7bd93fba6b45033d157f248905abfb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 281124,
      "upload_time": "2021-03-23T03:39:58",
      "upload_time_iso_8601": "2021-03-23T03:39:58.039761Z",
      "url": "https://files.pythonhosted.org/packages/43/98/675c5e867665924db07b95536577379bb2b87fa6cb3cbfeafce400c75f83/emailnetwork-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8884556c803aeddfeb18072991d7d33f75b8a8b0e148049be38f3e0f30b2b39c",
        "md5": "79bd3ffbe8f69306be1b771a12ce6e37",
        "sha256": "1a77e72281bd1a9783f3cf646f326906415354b5aea8d381de9da668a96ae975"
      },
      "downloads": -1,
      "filename": "emailnetwork-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "79bd3ffbe8f69306be1b771a12ce6e37",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 280009,
      "upload_time": "2021-03-23T03:39:59",
      "upload_time_iso_8601": "2021-03-23T03:39:59.543299Z",
      "url": "https://files.pythonhosted.org/packages/88/84/556c803aeddfeb18072991d7d33f75b8a8b0e148049be38f3e0f30b2b39c/emailnetwork-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}