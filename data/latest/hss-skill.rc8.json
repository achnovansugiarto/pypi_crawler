{
  "info": {
    "author": "Patrick Fial",
    "author_email": "mg.m@gmx.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# HSS - Skill\n\nLibrary for creating skills based on the [Hermes Skill Server](https://github.com/patrickjane/hss-server).\n\nA Node.JS library is also available, check out [HSS-Skill](https://github.com/patrickjane/node-hss-skill).\n\n# Installation\n\nSimply use `pip`:\n\n```\n(hss) pi@ceres:~/development/myskill $ pip3 install hss_skill\n```\n\n\n# Overview\nThe `hss_skill` package contains tools for fast and easy development of skills for the [Hermes Skill Server](https://github.com/patrickjane/hss-server). The goal is to let skill developers only care about their own skill implementation, while the internal stuff (communication with the skill-server, reading configuration, etc) is provided out-of-the-box by the `hss_skill` package.\n\nThe package provides a base class for skills `BaseSkill` which does all the incovenient stuff, like communication with the skill server, reading configuration file etc.\n\n# Getting started\n\nYour skill implementation must provide the following components:\n\n- installed `hss_skill` module\n- `main.py` file as entrypoint\n- `skill.json` file containing meta infos about your skill\n- your skill implementation (e.g. `myskill.py`)\n- `requirements.txt` file containing python dependencies, at least `hss_skill`\n- [optional] `config.ini.default` file containing your skill's configuration (default) parameters\n\nIn addition, for interaction with `rhasspy` voice assistant:\n\n- [optional] `sentences.ini` containing the sentences `rhasspy` should use (only YOUR SKILLs sentences)\n- [optional] `slots.json` containing slot definitions your skill uses\n\nIf `sentences.ini` is provided, `hss-cli` will register the sentences at `rhasspy` upon skill installation, and trigger `rhasspy` for training.\n\nSame applies to `slots.json`.\n\nIn order to support multiple languages, a skill may have the following files instead of `slots.json` and `sentences.ini`: \n\n- `slotsdict.[LANG].json` (multiple, one per language with `LANG` beeing the language code in lower case, e.g. \"de_de\")\n- `sentences.[LANG].ini` (multiple, one per language with `LANG` beeing the language code in lower case, e.g. \"de_de\") \n\n## Boilerplate\n\nYour `main.py` might be sufficient if it looks roughly like this:\n\n```\nimport myskill\n\nif __name__ == \"__main__\":\n    skill = myskill.MoodSkill()\n    skill.run()\n```\n\nYour `requirements.txt` could look like:\n\n```\nhss_skill>=0.4.2\ncertifi\ngeopy>=1.20.0\nrequests>=2.22.0\n```\n\n## Your skill implementation\n\nWhen developing skills, a subclass of `BaseSkill` **must** implement the **coroutine**:\n\n#### `async def handle(request, session_id, site_id, intent_name, slots, mapped_slots)`\n\nA coroutine which is called every time an intent which was registered by your skill is recognized and should be answered.\n\nUsually, the parameters `intent_name` and `slots` might be sufficient, however the full original intent is provided in the `request` parameter, and `session_id` and `site_id` can be used to do session- and site-based intent handling.\n\nThe implementation of this method should *usually* return with the execution of either `BaseSkill.answer` or `BaseSkill.followup` to finish intent handling (see below).\n\nTo support multiple languages with one skill implementation, `mapped_slots` is provided, which contains each slot translated to a slot-identifier (instead of the raw slot string). See chapter \"Multiple languages support\".\n\n\n### Example\n\nA minimal example of a skill (myskill.py) might look as:\n\n\n```\nfrom hss_skill import hss\n\nclass MoodSkill(hss.BaseSkill):\n    def __init__(self):\n        super().__init__()   # important, call super's constructor\n\n    async def handle(self, request, session_id, site_id, intent_name, slots):\n        return self.answer(session_id, site_id, \"Thanks, I am fine\")\n```\n\n\n## Contents of `skill.json`\n\nThe `skill.json` is a mandatory file containing meta info about your skill. It is used both during installation as well as when your skill is run.\n\nIt could look like the following:\n\n```\n{\n    \"platform\": \"hss-python\",\n    \"type\": \"weather\",\n    \"name\": \"hss-s710-mood\",\n    \"version\": \"1.0.0\",\n    \"author\": \"Some Dude\",\n    \"intents\": [\"s710:howAreYou\"],\n    \"shortDescription\": \"Some funny chatting\",\n    \"version\": \"1.0.0\",\n    \"language\": \"en_GB\"\n}\n```\n\nProperties explained:\n\n##### `platform` (mandatory)\n\nMust be `hss-python`, stating the skill is a python based HSS skill.\n\n#### `type` (mandatory)\n\nType of skill, e.g. `weather`. Must be one of:\n\n- `weather`\n- `calendar`\n- `music`\n- `datetime`\n- `news`\n- `games`\n- `fun`\n- `utility`\n- `automation`\n\n#### `version` (mandatory)\n\nThe version number of the skill.\n\n#### `author` (mandatory)\n\nThe name of the author of the skill.\n\n#### `intents` (mandatory)\n\nAn array of strings containing all intents the skill can handle.\n\n#### `shortDescription` (mandatory)\n\nA short description of your skill. Will be shown in the HSS registry skill list.\n\n#### `version` (optional)\n\nA string describing your skill's version.\n\n#### `language` (mandatory)\n\nA four-letter code string determining your skill's default language. When the skill supports more than one language, this property shall be an array (e.g. `[\"de_DE\", \"en_GB\"]`).\n\n\n## Base class\n\nIn addition, `BaseSkill` provides several methods and properties which aid in skill development.\n\n#### `BaseSkill.log`\n\nLogger object which can be used for logging.\n\n#### `BaseSkill.default_language`\n\nThe default language as determined by the `BaseSkill` class.\n\nCan be changed by the skill implementation any time to affect the behaviour of the below mentioned methods.\n\nThe default language is determined in the follow way (and order):    \n\n- config.ini section `skill` parameter `language`\n- skill.json `language` property (first language, if `language` is an array)\n- fall back to `en_GB`\n\n\n#### `def answer(session_id, site_id, response_message, lang)`\n\nThe `answer`-method should be called after the intent has been fully handled. This method also allows to send a response-text, which will then be forwarded to the TTS the your voice assistant.\n\nThe parameters `session_id` and `site_id` should be the ones provided by `handle`, while the `text` parameter shall be the text which shall be asked by the voice assistant.\n\nIf the `lang` parameter is not given, `BaseSkill.default_language` will be used.\n\n#### `def followup(session_id, site_id, question, lang, intent_filter = None)`\n\nThe `followup `-method should be called when the skill does not yet want to finish handling, but instead needs to ask for additional input. The `question`-text will be forwarded to the TTS of the voice assistant. In addition, a filter for intents (array of strings) can be given (see [hermes protocol docs](https://docs.snips.ai/reference/dialogue#continue-session)).\n\nThe parameters `session_id` and `site_id` should be the ones provided by `handle`, while the `question` parameter shall be the text which shall be asked by the voice assistant.\n\nIf the `lang` parameter is not given, `BaseSkill.default_language` will be used.\n\n#### `async def say(text, siteId = None, lang = None)`\n\nThe `say` coroutine can be used to trigger the voice assistant to say a given text using its TTS. There is no further session- or intent handling involved.\n\nIf the `lang` parameter is not given, `BaseSkill.default_language` will be used.\n\nSince `say` is a **coroutine**, it must be `await`-ed.\n\n#### `async def ask(text, siteId = None, lang = None, intent_filter = None)`\n\nThe `ask` coroutine can be used to start a new session. This will usually cause the voice assistant to speak the provided `text` using its TTS, and then listen for intents. Recognized intents may then be processed again.\n\nIf the `lang` parameter is not given, `BaseSkill.default_language` will be used.\n\nOptionally, an `intent_filter` (array of strings) can be given which will be forwarded to the voice assistant (see [hermes protocol docs](https://docs.snips.ai/reference/dialogue#start-session)).\n\nSince `ask` is a **coroutine**, it must be `await`-ed.\n\n\n\n### Timers\n\nThe `BaseSkill` class provides a convenience method for setting up timers, which will execute a given callback function after a given timeout. This might be useful if the skill wants to trigger actions on its own at a given time.\n\nCurrently, as a limitation, only one timer can be active at a time. This will most likely change in the future, so that an arbitrary number of timers can be scheduled.\n\nFor this, two coroutines are provided:\n\n#### `async def timer(timeout, callback, user = None, reschedule = False)`\n\nSchedules a new timer. `timeout` shall be `int` and denote the numer of seconds until the provided **coroutine** `callback` is executed. If `user` is given, it will be passed to `callback` upon execution.\n\nIf a timer is already running, new scheduling will fail unless `True` is given for `reschedule`. In the latter case, the previous timer will be cancelled before a new timer is scheduled.\n\n#### `async def cancel_timer(strict = True)`\n\nCancels an existing timer. If `True` is given for `strict`, an error message will be printed when `cancel_timer` is called but no timer is running.\n\n### Example\n\n```\n    async def handle(self, request, session_id, site_id, intent_name, slots, mapped_slots):\n\n        ... # skill handling code\n\n        # schedule timer in 10 seconds\n\n        await self.timer(10, self.do_timer, \"Can I ask you a question?\", reschedule = True)\n\n        # finish intent handling\n\n        return self.answer(session_id, site_id, response_message)\n\n    async def do_timer(self, text):\n\n        # ask a question\n\n        await self.ask(text, siteId = \"default\", intent_filter = [\"s710:confirm\", \"s710:reject\"])\n```\n\n### Multiple languages support\n\nIn order to support more than one language, a skill might need the following:\n\n- sentences in all supported languages\n- slots in all supported languages\n- determination of current/active language\n- easy handling of language specific slots in the code\n\n`hss-skill` supports all of this, thus enabling developers to easily implement more than one language in their skills.\n\n#### sentences.ini\n\nIn order to support more than one language, instead of providing a file named `sentences.ini`, provide one file per language, and include the language code (lowercase) in the filename:\n\n- `sentences.de_de.ini`\n- `sentences.en_gb.ini`\n\n#### slots\n\nIn order to support more than one language, instead of providing a file named `slots.json`, provide one file per language, and include the language code (lowercase) in the filename. Also, the file does not contain arrays, but dictionary instead:\n\n- `slotsdict.de_de.json`\n- `slotsdict.en_gb.json`\n\nThe idea is, that it will be cumbersome to work with the localized, language-specific slot strings in the code, when multiple languages are involved. Therefore, the `slotsdict.json` files provide a mapping from localized (\"real\") slots strings to slot-identifiers, which will be the same for every language. Those slot-identifiers will be provided to the `handle()` method in the `mapped_slots` parameters.\n\nThe files might contain:\n\n```\nslotsdict.de_de.json:\n\n{\n   \"relative_time\": {\n      \"now\": [\"jetzt\", \"gerade\", \"später\", \"nachher\", \"gegen später\"],\n      \"today\": [\"heute\"],\n      \"todayMorning\": [\"heute früh\", \"heute morgen\"]\n   }\n}\n\nslotsdict.en_gb.json:\n\n{\n   \"relative_time\": {\n      \"now\": [\"now\", \"right now\", \"later\", \"then\", \"towards later\", \"around later\"],\n      \"today\": [\"today\"],\n      \"todayMorning\": [\"this morning\", \"ealier today\"]\n   }\n}\n```\n\nSo, if, for example, a slot with the text \"nachher\" is recognized (with german language enable), `handle()` will receive `nachher` in the `slots` parameter, and `now` in the `mapped_slots` parameter.\n\nIf a slot with the text \"right now\" is recognized (with english language enable), `handle()` will receive `right now` in the `slots` parameter, and `now` in the `mapped_slots` parameter.\n\nThis means, that the skill implementation can rely on a language-independent slot-identifer (`now` in the above example) while still having access to the original, language-specific slot value (`nachher`/`right now`).\n\nWhen installing a skill with the above slot-dictionaries, `hss-cli` will still register slots as usual at the voice assistant. It will, however, only register the slots for the language which is selected upon installation.\n\n# Configuration\n\nIf your skill needs its own configuration parameters which must be supplied by the user (e.g. access tokens, ...), you can provide a `config.ini.default` file.\n\nThis file is meant to a) give default values for configuration options and b) contain empty configuration values, which must be filled by the user upon skill installation. See [Hermes Skill Server](https://github.com/patrickjane/hss-server) for details about skill installation.\n\nUpon installation `config.ini.default` will be copied into `config.ini`, and values will be filled by the user. `config.ini.default` will remain untouched.\n\n#### Example\n\n```\n[skill]\nconfirmation = I am okay, what about you?\n```\n\nIn code, you can access the configuration using the `BaseSkill`'s `cfg` member. It will be a dictionary object resembling your configuration.\n\n```\n    async def handle(self, request, session_id, site_id, intent_name, slots):\n        return self.answer(session_id, site_id, self.cfg[\"skill\"][\"confirmation\"])\n\n```\n\n# Skill installation\nPlease refer to [Hermes Skill Server](https://github.com/patrickjane/hss-server).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/patrickjane/hss-skill",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hss-skill",
    "package_url": "https://pypi.org/project/hss-skill/",
    "platform": "",
    "project_url": "https://pypi.org/project/hss-skill/",
    "project_urls": {
      "Homepage": "https://github.com/patrickjane/hss-skill"
    },
    "release_url": "https://pypi.org/project/hss-skill/0.5.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Library for creating voice assistant skills for the hermes skill server (hss-server)",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7729222,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f5ad6c7eb8e252ccf366db912360ad88658e49ec4bca4c808f5203d1d03a4a4",
          "md5": "44298ec7ec987eba91bf023fe978315b",
          "sha256": "40c527e659950d254ce94098a25cad5f9d7ec28f82653ab49c7c9a0ea105f0a1"
        },
        "downloads": -1,
        "filename": "hss_skill-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "44298ec7ec987eba91bf023fe978315b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5983,
        "upload_time": "2020-05-04T11:07:00",
        "upload_time_iso_8601": "2020-05-04T11:07:00.481648Z",
        "url": "https://files.pythonhosted.org/packages/5f/5a/d6c7eb8e252ccf366db912360ad88658e49ec4bca4c808f5203d1d03a4a4/hss_skill-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "789026de1eb699739c6f19e5ce11612632b57c5f63813880ecefb98e27dfaef8",
          "md5": "bd1953e1f59326726edfc35312c27303",
          "sha256": "4019d76f111afa396dc0cde59031df3ea736e2a568597b38ffee6e4c0d61e26e"
        },
        "downloads": -1,
        "filename": "hss_skill-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bd1953e1f59326726edfc35312c27303",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4407,
        "upload_time": "2020-05-04T11:07:02",
        "upload_time_iso_8601": "2020-05-04T11:07:02.572811Z",
        "url": "https://files.pythonhosted.org/packages/78/90/26de1eb699739c6f19e5ce11612632b57c5f63813880ecefb98e27dfaef8/hss_skill-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f63781db40ad12ddf9a84c917612cea48c6ee76859909d7308401ec76eb62a5b",
          "md5": "e13e0f4acf1f13e15889e281a89ae7a8",
          "sha256": "c097626a5d81b07a19b2d37942561cbc9ba6fc4748ea03489306a36ef50b4a96"
        },
        "downloads": -1,
        "filename": "hss_skill-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e13e0f4acf1f13e15889e281a89ae7a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6007,
        "upload_time": "2020-05-06T08:55:03",
        "upload_time_iso_8601": "2020-05-06T08:55:03.289400Z",
        "url": "https://files.pythonhosted.org/packages/f6/37/81db40ad12ddf9a84c917612cea48c6ee76859909d7308401ec76eb62a5b/hss_skill-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffa05da59ec9cec7333da03555eadd16ae6b4289e62848b19689bcf9399bbd89",
          "md5": "6ef7f6a9f727bd32a25debf68d78aa80",
          "sha256": "9e577d6c7deff01f63955465c63b02f27b94f193bb877a2df79b72688da29e45"
        },
        "downloads": -1,
        "filename": "hss_skill-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6ef7f6a9f727bd32a25debf68d78aa80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4424,
        "upload_time": "2020-05-06T08:55:04",
        "upload_time_iso_8601": "2020-05-06T08:55:04.129994Z",
        "url": "https://files.pythonhosted.org/packages/ff/a0/5da59ec9cec7333da03555eadd16ae6b4289e62848b19689bcf9399bbd89/hss_skill-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4118455345b5de33d1e3b63695d23dfd2b68ae61febeb3477a60ddd28533b6f",
          "md5": "7c4343726f9eaeb940566d778331ac4a",
          "sha256": "0762bea680fce8d7c1bc2f6f8453793868396742bd94eed47e7f7a8a445c023c"
        },
        "downloads": -1,
        "filename": "hss_skill-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7c4343726f9eaeb940566d778331ac4a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5993,
        "upload_time": "2020-05-06T09:05:39",
        "upload_time_iso_8601": "2020-05-06T09:05:39.204097Z",
        "url": "https://files.pythonhosted.org/packages/b4/11/8455345b5de33d1e3b63695d23dfd2b68ae61febeb3477a60ddd28533b6f/hss_skill-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1849bdc6294078ab2a5162f4e8ae68d0885fef19416863c33d8a910a6a5de5b9",
          "md5": "62729a7b540bc9041575d7798a86952f",
          "sha256": "72532c9951dd342de41300b9fbbbf6ad9ceacc59c6b168f038db0d1ed923726d"
        },
        "downloads": -1,
        "filename": "hss_skill-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "62729a7b540bc9041575d7798a86952f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4415,
        "upload_time": "2020-05-06T09:05:40",
        "upload_time_iso_8601": "2020-05-06T09:05:40.062816Z",
        "url": "https://files.pythonhosted.org/packages/18/49/bdc6294078ab2a5162f4e8ae68d0885fef19416863c33d8a910a6a5de5b9/hss_skill-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e4a430c7280042fbb797e84d57845b40dfde7605fda738c53879211e40309cb",
          "md5": "1a125de58362a12595f800b178dca2a5",
          "sha256": "26045c21a5f419c5e80e0af04f49a7867b18e1a108a98f5c0da1b1beebdbf321"
        },
        "downloads": -1,
        "filename": "hss_skill-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1a125de58362a12595f800b178dca2a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8721,
        "upload_time": "2020-06-07T17:55:11",
        "upload_time_iso_8601": "2020-06-07T17:55:11.353931Z",
        "url": "https://files.pythonhosted.org/packages/6e/4a/430c7280042fbb797e84d57845b40dfde7605fda738c53879211e40309cb/hss_skill-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10e411d802d1e713695d92706b23a4269d30ee2ac092b5d2a558fff06de0422a",
          "md5": "bb0d5cd7d728a75659407c1da009795e",
          "sha256": "087e61cf7f3736303c48a9c987c84506992870e131abf57d2a1ae484fb6cff3f"
        },
        "downloads": -1,
        "filename": "hss_skill-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bb0d5cd7d728a75659407c1da009795e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7697,
        "upload_time": "2020-06-07T17:55:12",
        "upload_time_iso_8601": "2020-06-07T17:55:12.480046Z",
        "url": "https://files.pythonhosted.org/packages/10/e4/11d802d1e713695d92706b23a4269d30ee2ac092b5d2a558fff06de0422a/hss_skill-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa60c576e76db209842d59973d959cfca15cafd6b15825e50470b52e2260087c",
          "md5": "2d4c5b2ea00d5297b7ecd74b93b14d0e",
          "sha256": "4661fcf847f0f061f9f5e49699561b4c3117e14806c87e51f85df75c15bf0601"
        },
        "downloads": -1,
        "filename": "hss_skill-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d4c5b2ea00d5297b7ecd74b93b14d0e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9300,
        "upload_time": "2020-06-11T17:01:20",
        "upload_time_iso_8601": "2020-06-11T17:01:20.657612Z",
        "url": "https://files.pythonhosted.org/packages/aa/60/c576e76db209842d59973d959cfca15cafd6b15825e50470b52e2260087c/hss_skill-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7367ec209b0b12fe5885f5a6829090de36161b0cceefc3287bf1ce0e6e67b827",
          "md5": "b3becda92ec3f6a2e091d429af4c35c1",
          "sha256": "eef00d02af548311d9c5d7d63c459af8491ac2849edf4516f572adfc405a18be"
        },
        "downloads": -1,
        "filename": "hss_skill-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b3becda92ec3f6a2e091d429af4c35c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9610,
        "upload_time": "2020-06-11T17:01:21",
        "upload_time_iso_8601": "2020-06-11T17:01:21.721347Z",
        "url": "https://files.pythonhosted.org/packages/73/67/ec209b0b12fe5885f5a6829090de36161b0cceefc3287bf1ce0e6e67b827/hss_skill-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "252c701d74930df336c0b5450566f4dbd2ab2bf6fffb7b4e137f30cb522ccf9f",
          "md5": "a67ce9a0ed5c1ee9e5746b7b5ea3b3d7",
          "sha256": "7cbd457b684f53c4a6783c5d05c2327180cf281a16df89d47c711c3367ddaad2"
        },
        "downloads": -1,
        "filename": "hss_skill-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a67ce9a0ed5c1ee9e5746b7b5ea3b3d7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9305,
        "upload_time": "2020-06-12T19:49:53",
        "upload_time_iso_8601": "2020-06-12T19:49:53.888615Z",
        "url": "https://files.pythonhosted.org/packages/25/2c/701d74930df336c0b5450566f4dbd2ab2bf6fffb7b4e137f30cb522ccf9f/hss_skill-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f76d503e64263d0571d9d7beda5c1fa1f9d469a3d3e4bf93500dcbace9287f13",
          "md5": "6c73bab9642eab40d3fa1e23b6e2602f",
          "sha256": "e0b16b5fcb11015fad3529e92cbb64aab756280eece5a34cc3af959f4a632a47"
        },
        "downloads": -1,
        "filename": "hss_skill-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6c73bab9642eab40d3fa1e23b6e2602f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9605,
        "upload_time": "2020-06-12T19:49:54",
        "upload_time_iso_8601": "2020-06-12T19:49:54.990784Z",
        "url": "https://files.pythonhosted.org/packages/f7/6d/503e64263d0571d9d7beda5c1fa1f9d469a3d3e4bf93500dcbace9287f13/hss_skill-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83e87e2e04210a0f3f00597a946da59ec636324c2da2ea19afeed9708ebe9d1f",
          "md5": "bec76a3c68e3a90ed7117fcadb08c4af",
          "sha256": "74374ec05f0a21a25530f45be0eb170c3b3bdc46cab2cffbcf472c6d38d10a3f"
        },
        "downloads": -1,
        "filename": "hss_skill-0.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bec76a3c68e3a90ed7117fcadb08c4af",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9815,
        "upload_time": "2020-06-13T10:40:15",
        "upload_time_iso_8601": "2020-06-13T10:40:15.422436Z",
        "url": "https://files.pythonhosted.org/packages/83/e8/7e2e04210a0f3f00597a946da59ec636324c2da2ea19afeed9708ebe9d1f/hss_skill-0.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "792913bbd225ac6fe7c4b4afbc2919994ae28fb1ca789131e79128616bccefe4",
          "md5": "224b629f4657a74adddea90fa95f79e3",
          "sha256": "f3d3c8f10646bd489758acdc4c8b94f2bd5bb2e4e37503c95a2ac40e3eaa2372"
        },
        "downloads": -1,
        "filename": "hss_skill-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "224b629f4657a74adddea90fa95f79e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11681,
        "upload_time": "2020-06-13T10:40:16",
        "upload_time_iso_8601": "2020-06-13T10:40:16.851023Z",
        "url": "https://files.pythonhosted.org/packages/79/29/13bbd225ac6fe7c4b4afbc2919994ae28fb1ca789131e79128616bccefe4/hss_skill-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8199da0e1099a6088789ef3d5bd7d9d4634fc557beffc9aa707a7879853f5eb",
          "md5": "ac7454fa105bfde932bab58644235828",
          "sha256": "549c0abdb22b1b50e2caa257df09025aaaf887cdd784a032f530165fcd628746"
        },
        "downloads": -1,
        "filename": "hss_skill-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac7454fa105bfde932bab58644235828",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11575,
        "upload_time": "2020-07-18T13:46:59",
        "upload_time_iso_8601": "2020-07-18T13:46:59.470767Z",
        "url": "https://files.pythonhosted.org/packages/a8/19/9da0e1099a6088789ef3d5bd7d9d4634fc557beffc9aa707a7879853f5eb/hss_skill-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e457e1a01844e5ff891ad844ab381d3604029f87e7d0b17801d4f311fced9db",
          "md5": "604adf3436101a91771ccc3a326ed9aa",
          "sha256": "331e0bfd673be6260a721017449f5d6832fd309b830f10975fd90989d9118c81"
        },
        "downloads": -1,
        "filename": "hss_skill-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "604adf3436101a91771ccc3a326ed9aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14551,
        "upload_time": "2020-07-18T13:47:00",
        "upload_time_iso_8601": "2020-07-18T13:47:00.821303Z",
        "url": "https://files.pythonhosted.org/packages/9e/45/7e1a01844e5ff891ad844ab381d3604029f87e7d0b17801d4f311fced9db/hss_skill-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a8199da0e1099a6088789ef3d5bd7d9d4634fc557beffc9aa707a7879853f5eb",
        "md5": "ac7454fa105bfde932bab58644235828",
        "sha256": "549c0abdb22b1b50e2caa257df09025aaaf887cdd784a032f530165fcd628746"
      },
      "downloads": -1,
      "filename": "hss_skill-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ac7454fa105bfde932bab58644235828",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11575,
      "upload_time": "2020-07-18T13:46:59",
      "upload_time_iso_8601": "2020-07-18T13:46:59.470767Z",
      "url": "https://files.pythonhosted.org/packages/a8/19/9da0e1099a6088789ef3d5bd7d9d4634fc557beffc9aa707a7879853f5eb/hss_skill-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9e457e1a01844e5ff891ad844ab381d3604029f87e7d0b17801d4f311fced9db",
        "md5": "604adf3436101a91771ccc3a326ed9aa",
        "sha256": "331e0bfd673be6260a721017449f5d6832fd309b830f10975fd90989d9118c81"
      },
      "downloads": -1,
      "filename": "hss_skill-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "604adf3436101a91771ccc3a326ed9aa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 14551,
      "upload_time": "2020-07-18T13:47:00",
      "upload_time_iso_8601": "2020-07-18T13:47:00.821303Z",
      "url": "https://files.pythonhosted.org/packages/9e/45/7e1a01844e5ff891ad844ab381d3604029f87e7d0b17801d4f311fced9db/hss_skill-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}