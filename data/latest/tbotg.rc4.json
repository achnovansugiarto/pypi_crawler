{
  "info": {
    "author": "Emin Martinian",
    "author_email": "emin.martinian@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 3"
    ],
    "description": "Introduction\n============\n\nThis repository provides a python library to make it easy to create\ntelegram bots using the python telegram API.\n\nThe basic idea is that you can define a function similar to the way you\nwould with the `click framework <https://click.palletsprojects.com>`__\nand then automatically convert that into a form suitable for telegram.\n\nIdeally, creating commands in a telegram bot should but just as easy as\nwriting a python function.\n\nGetting Started\n===============\n\nThe following describes how to get started as quickly as possible.\n\nInstall via pip\n---------------\n\nDo the usual ``pip install tbotg``.\n\nUse BotFather to create a bot\n-----------------------------\n\nFirst, use the botfather to create a bot:\n\n#. Go to ``BotFather`` in a Telegram chat.\n#. Type ``/newbot`` to request a new bot.\n#. Type the desired name when ``BotFather`` asks you for it.\n#. Save the token ``BotFather`` gives you in ``~/.ox_secrets.csv`` as\n\n.. code:: example\n\n    name,category,values,notes\n    token,YOUR_BOT_NAME,YOUR_TOKEN\n\n-  The ``~/.ox_secrets.csv`` file is a simple CSV file used to manage\n   secret information such as your telegram bot token.\n\nCreate a python file for your command\n-------------------------------------\n\nNext, create a python file for your bot. For example, you could create a\npython file named ``mybot.py`` as shown below:\n\n.. code:: python\n\n    \"Example to show how to use tbotg\"\n\n    import click\n\n    from tbotg.core.main_bot import TelegramMainBot\n    from tbotg.core.bcmds import ClickCmd\n\n\n    @click.command()\n    @click.option('--say', '/say', help='What to say')\n    @click.option('--count', '/count', type=int, help='How many times to repeat.')\n    def repeatntimes(say, count):\n        \"Repeat something N times.\"\n        return 'I will repeat it %i times: %s' % (\n            count, ', '.join([say.upper()] * count))\n\n\n    class MyBot(TelegramMainBot):\n        \"\"\"Example bot.\n        \"\"\"\n\n        @classmethod\n        def make_cmds(cls):\n            \"Make commands for bot.\"\n\n            return [ClickCmd(repeatntimes)]\n\nStart the server\n----------------\n\nRun the serve using the ``tcli`` script provided by ``tbotg`` via the\nfollowing command line:\n\n.. code:: bash\n\n    tcli serve --bot_cls MyBot --module 'mybot' --with_name ${YOUR_BOT_NAME}\n\nwhere ``${YOUR_BOT_NAME}`` is the name of the bot you created with\n``BotFather``\n\nNote that you will need your ``PYTHONPATH`` set properly for python to\nfind your ``mybot.py`` module. For example, you could do something like\n\n::\n\n    export PYTHONPATH=${PYTHONPATH}:`dirname /path/to/mybot.py`\n\nTest the command on telegram\n----------------------------\n\nTo test your command,\n\n#. Start a chat with your bot on telegram.\n#. Do ``/help`` to see available commands.\n#. Do ``/repeatntimes`` to run your command\n#. Click on the parameter buttons to set the values of ``say`` and\n   ``count``.\n#. Click the ``confirm`` button to run the command.\n\nNote that you can also include command line arguments when calling a\ncommand in Telegram via something like:\n\n.. code:: example\n\n    /repeatntimes /say hi\n\nand that option will be automatically filled in. Note that it is best to\nuse a leading slash (``/``) for these kinds of options and not the usual\ndouble hyphen (``--``) since some versions of Telegram `auto-replace\ndouble\nhyphens <https://github.com/telegramdesktop/tdesktop/issues/522>`__ with\na \"long dash\".\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/aocks/tbotg",
    "keywords": "telegram generic bots",
    "license": "GPL3",
    "maintainer": null,
    "maintainer_email": null,
    "name": "tbotg",
    "package_url": "https://pypi.org/project/tbotg/",
    "platform": null,
    "project_url": "https://pypi.org/project/tbotg/",
    "project_urls": {
      "Homepage": "http://github.com/aocks/tbotg"
    },
    "release_url": "https://pypi.org/project/tbotg/0.3.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Tools for Telegram generic bots.",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16440045,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1de0d6b0a85b931e8d8f7e08b73f9f1d582b27309faa2fa4474be69ebe0de75",
          "md5": "06e834aa94b9133c16c55579dabdf269",
          "sha256": "bfd984c1ca1ba3b67ec96189b796d120d69b65eb68a3bc8ec72abce218e87c34"
        },
        "downloads": -1,
        "filename": "tbotg-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "06e834aa94b9133c16c55579dabdf269",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24819,
        "upload_time": "2021-11-27T18:43:09",
        "upload_time_iso_8601": "2021-11-27T18:43:09.082659Z",
        "url": "https://files.pythonhosted.org/packages/e1/de/0d6b0a85b931e8d8f7e08b73f9f1d582b27309faa2fa4474be69ebe0de75/tbotg-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4db34d008baa4b1c21e56548f80256d595139249b21c1bcee5bdca21cb5737c",
          "md5": "0d78d4a6b56e7e3e8e1f17e2ed63b5ce",
          "sha256": "9839928c07aaa35ee80978db0433c624d840d096cfb2f5f290cf00b112071b14"
        },
        "downloads": -1,
        "filename": "tbotg-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0d78d4a6b56e7e3e8e1f17e2ed63b5ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12715,
        "upload_time": "2021-11-27T18:56:59",
        "upload_time_iso_8601": "2021-11-27T18:56:59.545345Z",
        "url": "https://files.pythonhosted.org/packages/c4/db/34d008baa4b1c21e56548f80256d595139249b21c1bcee5bdca21cb5737c/tbotg-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab3266e560275f9bf7ac1f3c2460816a2990e9b6da3362331882552a38c42358",
          "md5": "b460ea5a27c5133bfeec2acdb610ff5a",
          "sha256": "4887bb5c4fc022c5d0b343fee7d843a8d5e919b6747994c0dd1a1e9c33f67809"
        },
        "downloads": -1,
        "filename": "tbotg-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b460ea5a27c5133bfeec2acdb610ff5a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13811,
        "upload_time": "2021-11-30T18:01:42",
        "upload_time_iso_8601": "2021-11-30T18:01:42.444894Z",
        "url": "https://files.pythonhosted.org/packages/ab/32/66e560275f9bf7ac1f3c2460816a2990e9b6da3362331882552a38c42358/tbotg-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e29b1509e32023d89379dc993e450d2b98e3d3d5369032f8cc9b9c0d6bb3018",
          "md5": "cb71fb3b6375f4b7b31e50cf96638227",
          "sha256": "34628f72a0e9839c2602d02bf555c3682b412cdca04309daeb5868b92b514d6c"
        },
        "downloads": -1,
        "filename": "tbotg-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cb71fb3b6375f4b7b31e50cf96638227",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19743,
        "upload_time": "2023-01-16T03:31:22",
        "upload_time_iso_8601": "2023-01-16T03:31:22.712778Z",
        "url": "https://files.pythonhosted.org/packages/6e/29/b1509e32023d89379dc993e450d2b98e3d3d5369032f8cc9b9c0d6bb3018/tbotg-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6e29b1509e32023d89379dc993e450d2b98e3d3d5369032f8cc9b9c0d6bb3018",
        "md5": "cb71fb3b6375f4b7b31e50cf96638227",
        "sha256": "34628f72a0e9839c2602d02bf555c3682b412cdca04309daeb5868b92b514d6c"
      },
      "downloads": -1,
      "filename": "tbotg-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cb71fb3b6375f4b7b31e50cf96638227",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19743,
      "upload_time": "2023-01-16T03:31:22",
      "upload_time_iso_8601": "2023-01-16T03:31:22.712778Z",
      "url": "https://files.pythonhosted.org/packages/6e/29/b1509e32023d89379dc993e450d2b98e3d3d5369032f8cc9b9c0d6bb3018/tbotg-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}