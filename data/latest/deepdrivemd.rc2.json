{
  "info": {
    "author": "Alexander Brace, Hyungro Lee, Heng Ma, Anda Trifan, Matteo Turilli, Igor Yakushin, Li Tan, Andre Merzky, Tod Munson, Ian Foster, Shantenu Jha, Arvind Ramanathan",
    "author_email": "ramanathana@anl.gov, shantenu.jha@rutgers.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "# DeepDriveMD-F (DeepDriveMD-pipeline)\n\nDeepDriveMD-F: Deep-Learning Driven Adaptive Molecular Simulations (file-based continual learning loop)\n\n[![Documentation Status](https://readthedocs.org/projects/deepdrivemd-pipeline/badge/?version=latest)](https://deepdrivemd-pipeline.readthedocs.io/en/latest/?badge=latest)\n\nDetails can be found in the [documentation](https://deepdrivemd-pipeline.readthedocs.io/en/latest/). For more information, please see our [website](https://deepdrivemd.github.io/).\n\n## How to run\n\nRunning DeepDriveMD requires the use of virtual environment. At this point we distinguish different stage runs of DeepDriveMD using different virtual environments to alleviate package compatibility with associated dependencies across different stages.\n\nFor instance, below is a list of Python versions used by different virtual environments:\n\n- RCT env: Python 3.7.8\n- OpenMM env: Python 3.7.9\n- pytorch (AAE) env: Python 3.7.9\n- keras-cvae (CVAE) & rapids-dbscan: Python 3.6.12\n\n### Setup\n\n#### Stage: molecular_dynamics\n\n1. Install `deepdrivemd` into a virtualenv with a Python virtual environment:\n\n```\npython3 -m venv env\nsource env/bin/activate\npip install --upgrade pip setuptools wheel\npip install -e .\n```\n\nOr with a Conda virtual environment:\n\n```\n. ~/miniconda3/etc/profile.d/conda.sh\nconda create -n deepdrivemd python=3.7.9\nconda activate deepdrivemd\npip install --upgrade pip setuptools wheel\nconda install scipy (this step is needed if a failure of installing scipy is observed)\npip install -e .\n```\n\n2. Install OpenMM:\n\n- by source code (for Linux ppc64le, e.g., Summit)\nhttps://gist.github.com/lee212/4bbfe520c8003fbb91929731b8ea8a1e\n\n- by conda (for Linux x86\\_64, e.g., PSC Bridges)\n```\nmodule load anaconda3\nmodule load cuda/9.2\nsource /opt/packages/anaconda/anaconda3-5.2.0/etc/profile.d/conda.sh\nconda install -c omnia/label/cuda92 openmm\n```\n\n3. In some places, DeepDriveMD relies on external libraries to configure MD simulations and import specific ML models.\n\nFor MD, install the `mdtools` package found here: https://github.com/braceal/MD-tools\n\n```\ngit clone https://github.com/braceal/MD-tools.git\npip install .\n```\n\nFor ML (specifically the AAE model), install the `molecules` package found here: https://github.com/braceal/molecules/tree/main\n\n```\ngit clone https://github.com/braceal/molecules.git\npip install .\n```\n\n#### Stage: machine_learning\n\n1. Install the `deepdrivemd` virtual environment as above (`deepdrivemd` is needed in all the virtual environments since each task uses the DDMD_API to communicate with the outputs of other tasks).\n\n2. Install the `keras-CVAE` model with `rapidsai DBSCAN` package found here: https://www.ibm.com/docs/en/wmlce/1.6.2?topic=installing-mldl-frameworks\n\n```\nconda config --prepend channels https://public.dhe.ibm.com/ibmdl/export/pub/software/server/ibm-ai/conda/\nconda install powerai-rapids\n```\n\n3. Install packages `scikit-learn` and `h5py` version 2.10.0:\n\n```\nconda install scikit-learn h5py=2.10.0\n```\n\n4. Install the `tensorflow-gpu` package (need to compile with CUDA 10.2.89, not compatible with CUDA 10.1.243 and CUDA 11.1.1 or higher versions):\n\n```\nconda install tensorflow-gpu\n```\n\n### Generating a YAML input spec:\n\nFirst, run this command to get a _sample_ YAML config file:\n\n```\npython -m deepdrivemd.config\n```\n\nThis will write a file named `deepdrivemd_template.yaml` which should be adapted for the experiment at hand. You should configure the `molecular_dynamics_stage`, `aggregation_stage`, `machine_learning_stage`, `model_selection_stage` and `agent_stage` sections to use the appropriate run commands and environment setups.\n\n### Running an experiment\n\nThen, launch an experiment with:\n\n```\npython -m deepdrivemd.deepdrivemd -c <experiment_config.yaml>\n```\n\nThis experiment should be launched\n\n### Note on input data\n\nThe input PDB and topology files should have the following structure:\n\n```\nls data/sys*\n\ndata/sys1:\ncomp.pdb comp.top\n\ndata/sys2:\ncomp.pdb comp.top\n```\nWhere the topology files are optional and only used when `molecular_dynamics_stage.task_config.solvent_type` is \"explicit\". Only one system directory is needed but an arbitrary number are supported. Also note that the system directory names are arbitrary. The path to the `data` directory should be passed into the config via `molecular_dynamics_stage.initial_pdb_dir`.\n\n# DeepDriveMD-S (Streaming asynchronous execution with ADIOS)\n\nThe streaming version of DeepDriveMD uses the adios2 package.\n\n`adios2` is installed with spack:\n```\nspack install adios2 +python -mpi\n```\n\nTo use adios2 in python, one needs to load the corresponding module, for example, with\n```\nmodule load adios2\n```\nor\n```\nspack load adios2\n```\nand to set up `PYTHONPATH` to the corresponding subdirectory of the adios2 installation: \n```\nexport PYTHONPATH=<ADIOS2_dir>/lib/python<version>/site-packages/:$PYTHONPATH\n```\n\nTo make a small 30m, 12 simulation, 1 aggregator, test run of DeepDriveMD-S, cd into `test/` and run\n```\nmake run1\n```\nTo make a large 12h, 120 simulations, 10 aggregators run do\n```\nmake run2\n```\nin DeepDriveMD-pipeline directory.\n\nTo watch how one of the aggregation files grows, do, for example\n```\nmake watch1 d=3\t\n```\nassuming that the experiment directory is `../Outputs/3`.\n\nTo watch what happens in one of the simulation task directory, do\n```\nmake watch2 d=3\n```\n\nTo watch the log for task 0014 (for run1 it corresponds to the outlier search log), do\n```\nmake watch3 d=0014\n```\n\nTo clean after the run, do\n```\nmake clean d=3\n```\n\n\nThe configuration files for the run, including `generate.py` that is used to create `config.yaml`, adios xml files for SST streams between simulations and aggregators and for BP files between aggregators and the downstream two components, are in a subdirectory of\ntest/bba, for example, `test1_stream` (run1) and `lassen-keras-dbscan_stream` (run2). Yaml files are generated by running `./generate.py > config.yaml` or, if you prefer, you can edit `config.yaml` directly and not use `generate.py`.\n\nTo use multiple input files, put the corresponding pdb files into `cfg.initial_pdb_dir`. The simulation sorts pdb files from this directory and picks up the one corresponding to its task id modulo the number of pdb files.\n\n# Contributing\n\nPlease report **bugs**, **feature requests**, or **questions** through the [Issue Tracker](https://github.com/DeepDriveMD/DeepDriveMD-pipeline/issues).\n\nIf you are looking to contribute, please see [`CONTRIBUTING.md`](https://github.com/DeepDriveMD/DeepDriveMD-pipeline/blob/main/CONTRIBUTING.md).\n\n# License\n\nDeepDriveMD has a MIT license, as seen in the [LICENSE](https://github.com/DeepDriveMD/DeepDriveMD-pipeline/blob/main/LICENSE.md) file.\n\nMIT License\n\nCopyright (c) 2021 DeepDriveMD-F\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://deepdrivemd.github.io/",
    "keywords": "workflow,machine-learning,complex-biological-systems,multi-scale-molecular-simulations",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "deepdrivemd",
    "package_url": "https://pypi.org/project/deepdrivemd/",
    "platform": null,
    "project_url": "https://pypi.org/project/deepdrivemd/",
    "project_urls": {
      "Homepage": "https://deepdrivemd.github.io/"
    },
    "release_url": "https://pypi.org/project/deepdrivemd/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Deep-Learning Driven Adaptive Molecular Simulations",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13878943,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d782b520a650fcac791b282d2b7a42f896b051ca6a17c2287f196015682b73d",
          "md5": "24e3d7e3c0ae0ff7b09ac4a98a55fd75",
          "sha256": "3fa9ac26b2262111243bb5c7a506f4f602c4b172cc3583b80f3fb05c6fe4f289"
        },
        "downloads": -1,
        "filename": "deepdrivemd-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "24e3d7e3c0ae0ff7b09ac4a98a55fd75",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 43467,
        "upload_time": "2021-05-13T20:05:15",
        "upload_time_iso_8601": "2021-05-13T20:05:15.094924Z",
        "url": "https://files.pythonhosted.org/packages/1d/78/2b520a650fcac791b282d2b7a42f896b051ca6a17c2287f196015682b73d/deepdrivemd-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "400533bff5811e0d2e34260c50053878109be50a3e5abf43dc77e15d0bc3b5f8",
          "md5": "96dbd79d8c42c9f1634df225a585d96d",
          "sha256": "66fb46ba0cf20d575425c0c58143e02bb078d58088b5c9a4ad13f1be8f60a0aa"
        },
        "downloads": -1,
        "filename": "deepdrivemd-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "96dbd79d8c42c9f1634df225a585d96d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 32947,
        "upload_time": "2021-05-13T20:05:16",
        "upload_time_iso_8601": "2021-05-13T20:05:16.540915Z",
        "url": "https://files.pythonhosted.org/packages/40/05/33bff5811e0d2e34260c50053878109be50a3e5abf43dc77e15d0bc3b5f8/deepdrivemd-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e7d38268b916216b26c9de1165eaefc0da1f5f50f3fb3ade7c49fd947e869cb",
          "md5": "21cd958a5283827c95f4466568d04863",
          "sha256": "49cd60075c369e0bbd94521b6754f00483d2ac0799fa8454f00e7c3e753cbb97"
        },
        "downloads": -1,
        "filename": "deepdrivemd-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "21cd958a5283827c95f4466568d04863",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 69300,
        "upload_time": "2022-05-20T14:54:08",
        "upload_time_iso_8601": "2022-05-20T14:54:08.523579Z",
        "url": "https://files.pythonhosted.org/packages/1e/7d/38268b916216b26c9de1165eaefc0da1f5f50f3fb3ade7c49fd947e869cb/deepdrivemd-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1e7d38268b916216b26c9de1165eaefc0da1f5f50f3fb3ade7c49fd947e869cb",
        "md5": "21cd958a5283827c95f4466568d04863",
        "sha256": "49cd60075c369e0bbd94521b6754f00483d2ac0799fa8454f00e7c3e753cbb97"
      },
      "downloads": -1,
      "filename": "deepdrivemd-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "21cd958a5283827c95f4466568d04863",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 69300,
      "upload_time": "2022-05-20T14:54:08",
      "upload_time_iso_8601": "2022-05-20T14:54:08.523579Z",
      "url": "https://files.pythonhosted.org/packages/1e/7d/38268b916216b26c9de1165eaefc0da1f5f50f3fb3ade7c49fd947e869cb/deepdrivemd-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}