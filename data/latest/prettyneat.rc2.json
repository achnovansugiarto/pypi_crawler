{
  "info": {
    "author": "Dennis G. Wilson",
    "author_email": "d9w@pm.me",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Artificial Life"
    ],
    "description": "# prettyNEAT\n![swingup](demo/img/swing.gif) ![biped](demo/img/biped.gif)\n![ant](demo/img/ant.gif) ![racer](demo/img/race.gif)\n\n\nNeuroevolution of Augmenting Topologies (NEAT) algorithm in numpy, built for multicore use and OpenAI's gym interface.\n\nOriginal paper by Ken Stanley and Risto Miikkulainen: [Evolving Neural Networks Through Augmenting Topologies](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.28.5457&rep=rep1&type=pdf)\n\nImplementation created by [Adam\nGaier](https://scholar.google.com/citations?user=GGyARB8AAAAJ&hl=en) and\noriginally released as part of the [Google Brain Tokyo\nWorkshop](https://github.com/google/brain-tokyo-workshop).\n\n## Installation\n\nprettyNEAT can be downloaded from pypi:\n\n`pip install prettyNEAT`\n\nOr installed locally\n\n``` sh\ngit clone https://github.com/d9w/prettyNEAT\ncd prettyNEAT\npython setup.py install\n```\n\n### Other dependencies\n\nThe provided example scripts which evolve individuals for `gym` environments\nhave further dependencies, including `mpi4py` for distributed evaluation. To\ninstall these additional dependencies, do:\n\n`pip install -r requirements.txt`\n\n## Running NEAT\n\n![swingup](demo/img/swing.gif) ![swingup](demo/img/swing.gif)\n\n\nThe 'cartpole_swingup' task doesn't have any dependencies and is set as the default task, try it with the default parameters:\n\nTraining command:\n```\npython evolution.py\n```\n\nTo view the performance of a trained controller (default `log/test_best.out` loaded):\n\n```\npython evaluation.py\n```\n\nTo load and test a specific network:\n```\npython neat_test.py -i demo/swingup.out\n```\n\n\n## Data Gathering and Visualization\n\nData about each run is stored by default in the `log` folder with the `test` prefix, though a new prefix can be specified:\n\n```\npython evolution.py -o myExperiment_\n```\nOutput files will still be placed in the 'log' folder but prepended with the 'myExperiment_' prefix\n\nIn addition to the best performing individual, prettyNEAT regularly updates a `_stats.out` file with run statistics. These statistics are stored as comma seperated values, and some helper functions are shown to display these statistics as well as the topology of the evolved networks.\n\nsee `prettyNeat_demo.ipynb` notebook for example usage.\n\n## Distributed evaluation\n\nprettyNeat uses an ask/tell pattern to handle parallelization:\n\n```\n  neat = Neat(hyp)  # Initialize Neat with hyperparameters\n  for gen in range(hyp['maxGen']):        \n    pop = neat.ask()            # Get newly evolved individuals from NEAT  \n    reward = batchMpiEval(pop)  # Send population to workers to evaluate\n    neat.tell(reward)           # Send fitness values back to NEAT    \n```\n\nThe number of workers can be specified when called from the command line:\n\n```\npython evo_distributed.py -n 8\n```\n\n\nAlgorithm hyperparameters are stored in a .json file. Default parameters specified with `-d`, modification with a `-p`:\n\n```\npython evo_distributed.py -d config/neat_default.json\n```\n\nor to use default except for certain changes\n\n```\npython evo_distributed.py -p config/swingup.json       # Swing up with standard parameters\npython evo_distributed.py -p config/swing_allAct.json  # Swing up but allow hidden nodes to have several activations\n```\nThe full list of hyperparameters is explained in [hypkey.txt](config/hypkey.txt)\n\n---\n## Extensions and Differences from Canonical NEAT\n\nA few key differences and common extensions from the original NEAT paper have been included:\n\n- Compatibility threshold update\n    - The compatibility threshold is regularly updated to keep the number of species near a desired number. Though use of this update is widespread and mentioned on the [NEAT User's Page](https://www.cs.ucf.edu/~kstanley/neat.html), to my knowledge it has never been explicitly mentioned in a publication.\n\n- Activation functions\n    - Unless a specific activation function to be used by all hidden nodes is specified in the hyperparameters, when a new node is created it can chosen from a list of activation functions defined by the task. A probability of mutating the activation function is also defined. This allows the code to easily handle extensions for HyperNEAT and CPPN experiments.\n    \n- Rank-based Fitness\n    - The canonical NEAT uses raw fitness values to determine the relative fitness of individuals and species. This can cause scaling problems, and can't handle negative fitness values. PrettyNEAT instead ranks the population and assigns each individual a real-valued fitness based on this ranking.\n\n- Multi-objective\n    - Many extensions of NEAT involve optimizing for additional objectives (age, number of connections, novelty, etc) and we include non-dominated sorting of the population by multiple objectives. The probability that these alternate objectives are applied can also be tuned (e.g. normal optimization, but 20% chance of ranking based on fitness _and_ number of connections). This can be used with or without speciation.\n    \n- Weight Tuning with CMA-ES\n    - Networks produced by PrettyNEAT are exported in the form of weight matrices and a vector of activation functions. We provide an interface to further tune the weights of these networks with CMA-ES: \n    \n    ```\n    python cmaes.py -i log/test_best.out\n    ```\n\n--- \n## Other NEAT resources\n\n- [Weight Agnostic Neural Networks (WANN)](https://github.com/google/brain-tokyo-workshop/tree/master/WANNRelease)\n- [NEAT Software](http://eplex.cs.ucf.edu/neat_software/)\n- [NEAT gym](https://github.com/simondlevy/NEAT-Gym)\n- [NEAT python](https://github.com/CodeReclaimers/neat-python)\n- [PyTorch NEAT](https://github.com/uber-research/PyTorch-NEAT)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/d9w/prettyNEAT",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "prettyNEAT",
    "package_url": "https://pypi.org/project/prettyNEAT/",
    "platform": "",
    "project_url": "https://pypi.org/project/prettyNEAT/",
    "project_urls": {
      "Bug Tracker": "https://github.com/d9w/prettyNEAT/issues",
      "Homepage": "https://github.com/d9w/prettyNEAT"
    },
    "release_url": "https://pypi.org/project/prettyNEAT/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "NeuroEvolution of Augmenting Topologies in Python",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9996794,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51480ef54311c57523781e1fc69524df9ac8255d1ca739120d9c938d5179a8dc",
          "md5": "c376a2421ca8ee246790ca0b7a8474a9",
          "sha256": "29d355f56b46ab27442b54e1d977a1744ce54271a096a46be2348582c78b5733"
        },
        "downloads": -1,
        "filename": "prettyNEAT-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c376a2421ca8ee246790ca0b7a8474a9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 48521,
        "upload_time": "2021-04-07T11:55:37",
        "upload_time_iso_8601": "2021-04-07T11:55:37.922653Z",
        "url": "https://files.pythonhosted.org/packages/51/48/0ef54311c57523781e1fc69524df9ac8255d1ca739120d9c938d5179a8dc/prettyNEAT-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4fa7fd969571e6a2ec381c5e29af64105b206e478dd368d610be5b0c4f1be07b",
          "md5": "6fe3aed517295cf59548907d623d1f93",
          "sha256": "d17b27f9faa1b410ba86c21a900435ed9338abb066b73b2f61fbc107f09bfea0"
        },
        "downloads": -1,
        "filename": "prettyNEAT-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6fe3aed517295cf59548907d623d1f93",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 39074,
        "upload_time": "2021-04-07T11:55:39",
        "upload_time_iso_8601": "2021-04-07T11:55:39.347787Z",
        "url": "https://files.pythonhosted.org/packages/4f/a7/fd969571e6a2ec381c5e29af64105b206e478dd368d610be5b0c4f1be07b/prettyNEAT-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbaa63d659ac413c0d883587682eb13fc8373fe4dc5acc39ae97bfd8810824cb",
          "md5": "ff42d62830b3f4d00ba2357320219c4f",
          "sha256": "0e7e3ac48e0ed571317b15938b6f4e0e8198cac18cca4593d4abdff9949703bf"
        },
        "downloads": -1,
        "filename": "prettyNEAT-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ff42d62830b3f4d00ba2357320219c4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 39044,
        "upload_time": "2021-04-07T12:02:22",
        "upload_time_iso_8601": "2021-04-07T12:02:22.958743Z",
        "url": "https://files.pythonhosted.org/packages/bb/aa/63d659ac413c0d883587682eb13fc8373fe4dc5acc39ae97bfd8810824cb/prettyNEAT-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bbaa63d659ac413c0d883587682eb13fc8373fe4dc5acc39ae97bfd8810824cb",
        "md5": "ff42d62830b3f4d00ba2357320219c4f",
        "sha256": "0e7e3ac48e0ed571317b15938b6f4e0e8198cac18cca4593d4abdff9949703bf"
      },
      "downloads": -1,
      "filename": "prettyNEAT-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ff42d62830b3f4d00ba2357320219c4f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 39044,
      "upload_time": "2021-04-07T12:02:22",
      "upload_time_iso_8601": "2021-04-07T12:02:22.958743Z",
      "url": "https://files.pythonhosted.org/packages/bb/aa/63d659ac413c0d883587682eb13fc8373fe4dc5acc39ae97bfd8810824cb/prettyNEAT-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}