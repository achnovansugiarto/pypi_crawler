{
  "info": {
    "author": "",
    "author_email": "Verificarlo contributors <verificarlo@googlegroups.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Information Analysis"
    ],
    "description": "# significantdigits package - v0.1.2\n\nCompute the number of significant digits based on the paper [Confidence Intervals for Stochastic Arithmetic](https://arxiv.org/abs/1807.09655).\nThis package is also inspired from the [Jupyter notebook](https://github.com/interflop/stochastic-confidence-intervals/blob/master/Intervals.ipynb) included with the publication.\n\n## Getting started\n\nThis synthetic example illustrates how to compute significant digits\nof a results sample with a given known reference:\n\n```python\n>>> import significantdigits as sig\n>>> import numpy as np\n>>> from numpy.random import uniform as U\n>>> np.random.seed(0)\n>>> eps = 2**-52\n>>> # simulates results with epsilon differences\n>>> X = [1+U(-1,1)*eps for _ in range(10)]\n>>> sig.significant_digits(X, reference=1)\n>>> 51.02329058847853\n```\n\nor with the CLI interface assuming `X` is in `test.txt`:\n\n```bash\n> significantdigits --metric significant -i \"$(cat test.txt)\" --input-format stdin --reference 1\n> (51.02329058847853,)\n```\nIf the reference is unknown, one can use the sample average:\n\n```python\n...\n>>> sig.significant_digits(X, reference=np.mean(X))\n>>> 51.02329058847853\n```\n## Installation\n\n```bash\n    python3 -m pip install -U significantdigits\n```\n\nor if you want the lastest version of the code, you can install from\nthe repository directly\n\n```bash\n    python3 -m pip install -U git+https://github.com/verificarlo/significantdigits.git\n    # or if you don't have 'git' installed\n    python3 -m pip install -U https://github.com/verificarlo/significantdigits/zipball/master\n```\n\n## Advanced Usage\n\n### Inputs types\n\nFunctions accept the following types for the inputs:\n```python\n    InputType: np.ndarray | tuple | list\n```\nThose types are accessible with the `get_input_type` function.\n\n### Z computation\n\nMetric are computed using Z, the distance\nbetween the samples and the reference.\nThey are four possible cases depending on the\ndistance and the nature of the reference that are\nsummarized in this table:\n\n|                    | constant reference (x) | random variable reference (Y) |\n| ------------------ | ---------------------- | ----------------------------- |\n| Absolute precision | Z = X - x              | Z = X - Y                     |\n| Relative precision | Z = X/x - 1            | Z = X/Y - 1                   |\n\n\n```python\ncompute_z(array: ~InputType, reference: Optional[~ReferenceType], error: significantdigits._significantdigits.Error | str, axis: int, shuffle_samples: bool = False) -> ~InputType\n    Compute Z, the distance between the random variable and the reference\n\n    Compute Z, the distance between the random variable and the reference\n    with three cases depending on the dimensions of array and reference:\n\n    X = array\n    Y = reference\n    Three cases:\n        - Y is none\n            The case when X = Y\n            We split X in two and set one group to X and the other to Y\n        - X.ndim == Y.ndim\n            X and Y have the same dimension\n            It it the case when Y is a random variable\n        - X.ndim - 1 == Y.ndim or Y.ndim == 0\n            Y is a scalar value\n\n    Parameters\n    ----------\n    array : InputType\n        The random variable\n    reference : Optional[ReferenceType]\n        The reference to compare against\n    error : Method.Error | str\n        The error function to compute Z\n    axis : int, default=0\n        The axis or axes along which compute Z\n    shuflle_samples : bool, default=False\n        If True, shuffles the groups when the reference is None\n\n    Returns\n    -------\n    array : numpy.ndarray\n        The result of Z following the error method choose\n```\n\n### Methods\n\nTwo methods exist for computing both significant and contributing digits\ndepending on wether the sample follow a Centered Normal distribution or not.\nYou can pass the method to the function by using the `Method` enum provided by the package. \nThe functions also accept the name as a string\n`\"cnh\"` for `Method.CNH` and `\"general\"` for `Method.General`.\n\n```python\nclass Method(AutoName):\n    \"\"\"\n    CNH: Centered Normality Hypothesis\n         X follows a Gaussian law centered around the reference or\n         Z follows a Gaussian law centered around 0\n    General: No assumption about the distribution of X or Z\n    \"\"\"\n    CNH = auto()\n    General = auto()\n```\n\n### Significant digits\n\n\n\n```python\nsignificant_digits(array: ~InputType,\n                   reference: Optional[~ReferenceType] = None,\n                   axis: int = 0, base: int = 2,\n                   error: str | significantdigits._significantdi\n    Compute significant digits\n\n    This function computes with a certain probability\n    the number of bits that are significant.\n\n    Parameters\n    ----------\n    array: InputType\n        Element to compute\n    reference: Optional[ReferenceType], optional=None\n        Reference for comparing the array\n    base: int, optional=2\n        Base in which represent the significant digits\n    axis: int, optional=0\n        Axis or axes along which the significant digits are computed\n    error : Error | str, optional=Error.Relative\n        Error function to use to compute error between array and reference.\n    method : Method | str, optional=Method.CNH\n        Method to use for the underlying distribution hypothesis\n    probability : float, default=0.95\n        Probability for the significant digits result\n    confidence : float, default=0.95\n        Confidence level for the significant digits result\n    shuffle_samples : bool, optional=False\n        If reference is None, the array is split in two and \\\n        comparison is done between both pieces. \\\n        If shuffle_samples is True, it shuffles pieces.\n\n    Returns\n    -------\n    ndarray\n        array_like containing contributing digits\n\n```\n\n### Contributing digits\n\n```python\ncontributing_digits(array: ~InputType, reference: Optional[~ReferenceType] = None, axis: int = 0, base: int = 2, error: str | significantdigits._significantdigits.Error = <Error.Re$\n    Compute contributing digits\n\n\n    This function computes with a certain probability the number of bits\n    of the mantissa that will round the result towards the correct reference\n    value[1]_\n\n    Parameters\n    ----------\n    array: InputArray\n        Element to compute\n    reference: Optional[ReferenceArray], default=None\n        Reference for comparing the array\n    axis: int, default=0\n        Axis or axes along which the contributing digits are computed\n        default: None\n    error : Error | str, default=Error.Relative\n        Error function to use to compute error between array and reference.\n    method : Method | str, default=Method.CNH\n        Method to use for the underlying distribution hypothesis\n    probability : float, default=0.51\n        Probability for the contributing digits result\n    confidence : float, default=0.95\n        Confidence level for the contributing digits result\n    shuffle_samples : bool, default=False\n        If reference is None, the array is split in two and\n        comparison is done between both pieces.\n        If shuffle_samples is True, it shuffles pieces.\n\n    Returns\n    -------\n    ndarray\n        array_like containing contributing digits\n\n```\n### Utils functions\n\nThese are utility functions for the general case.\n\n`probability_estimation_general`\nallows having an estimation\non the lower bound probability given the sample size.\n\n`minimum_number_of_trials` gives the minimal sample size\nrequired to reach requested `probability` and `confidence`.\n\n```python\nprobability_estimation_general(success: int, trials: int, confidence: float) -> float\n    Computes probability lower bound for Bernouilli process\n\n    This function computes the probability associated with metrics\n    computed in the general case (without assumption on the underlying\n    distribution). Indeed, in that case the probability is given by the\n    sample size with a certain confidence level.\n\n    Parameters\n    ----------\n    success : int\n        Number of success for a Bernoulli experiment\n    trials : int\n        Number of trials for a Bernoulli experiment\n    confidence : float\n        Confidence level for the probability lower bound estimation\n\n    Returns\n    -------\n    float\n        The lower bound probability with `confidence` level to have `success` successes for `trials` trials\n```\n\n```python\n\nminimum_number_of_trials(probability: float, confidence: float) -> int\n    Computes the minimum number of trials to have probability and confidence\n\n    This function computes the minimal sample size required to have\n    metrics with a certain probability and confidence for the general case\n    (without assumption on the underlying distribution).\n\n    For example, if one wants significant digits with proabability p = 99%\n    and confidence (1 - alpha) = 95%, it requires at least 299 observations.\n\n    Parameters\n    ----------\n    probability : float\n        Probability\n    confidence : float\n        Confidence\n\n    Returns\n    -------\n    int\n        Minimal sample size to have given probability and confidence\n\n```\n\n### License\n\nThis file is part of the Verificarlo project,\nunder the Apache License v2.0 with LLVM Exceptions.\nSPDX-License-Identifier: Apache-2.0 WITH LLVM-exception.\nSee https://llvm.org/LICENSE.txt for license information.\n\nCopyright (c) 2020-2022 Verificarlo Contributors\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Copyright 2022 Verificarlo project  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "significantdigits",
    "package_url": "https://pypi.org/project/significantdigits/",
    "platform": null,
    "project_url": "https://pypi.org/project/significantdigits/",
    "project_urls": {
      "Bug Tracker": "https://github.com/verificarlo/significantdigits/issues"
    },
    "release_url": "https://pypi.org/project/significantdigits/0.1.2/",
    "requires_dist": [
      "attrs>=21.2.0",
      "icecream>=2.1.3",
      "iniconfig>=1.1.1",
      "numpy>=1.22.0",
      "packaging>=21.2",
      "pluggy>=1.0.0",
      "py>=1.10.0",
      "pyparsing>=2.4.7",
      "pytest>=6.2.5",
      "scipy>=1.7.3",
      "toml>=0.10.2"
    ],
    "requires_python": ">=3.8",
    "summary": "Solid stochastic statistic analysis of Stochastic Arithmetic",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16676364,
  "releases": {
    "0.1.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "574faa85c98927b5da298c74e2c41d196acf7953eaa21e10eade714851249e25",
          "md5": "1a033bb2232e29c780dbbf57c19affe1",
          "sha256": "a36e8ab68abcc6039d0ee1cbad1a3a1ce138c02241d2e69df3a53861efc1a162"
        },
        "downloads": -1,
        "filename": "significantdigits-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1a033bb2232e29c780dbbf57c19affe1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 24992,
        "upload_time": "2022-11-09T22:29:21",
        "upload_time_iso_8601": "2022-11-09T22:29:21.686951Z",
        "url": "https://files.pythonhosted.org/packages/57/4f/aa85c98927b5da298c74e2c41d196acf7953eaa21e10eade714851249e25/significantdigits-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "2b13e18cafbbfb53f9bbe0c8089edc268ca0c8b63527f38976cef60f110ceb5c",
          "md5": "30a08302579f6f00861c84c7ccf31201",
          "sha256": "3b82357db1fe2007eae2c1c9e2665864fe01e38f1ed4268e5ba0819049a45faf"
        },
        "downloads": -1,
        "filename": "significantdigits-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "30a08302579f6f00861c84c7ccf31201",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 18477,
        "upload_time": "2022-11-09T22:29:24",
        "upload_time_iso_8601": "2022-11-09T22:29:24.352962Z",
        "url": "https://files.pythonhosted.org/packages/2b/13/e18cafbbfb53f9bbe0c8089edc268ca0c8b63527f38976cef60f110ceb5c/significantdigits-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50cd3de6d51acb6917d17dd286ea464a041006cdb4c42546db0eb8ea93edb17b",
          "md5": "d8404614cce3e30396d2adce23668c29",
          "sha256": "ee5001f5941aadc1c5c8b07276a57e10db9acbb8b356b157428841ebfb9cf27b"
        },
        "downloads": -1,
        "filename": "significantdigits-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d8404614cce3e30396d2adce23668c29",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 25045,
        "upload_time": "2023-01-10T20:21:37",
        "upload_time_iso_8601": "2023-01-10T20:21:37.662441Z",
        "url": "https://files.pythonhosted.org/packages/50/cd/3de6d51acb6917d17dd286ea464a041006cdb4c42546db0eb8ea93edb17b/significantdigits-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7234ee40913bc59c0f822868c38d22e961c05e37170ef129d30b3b5155897dec",
          "md5": "af2c986f67a415444a3e5cb6b39cc236",
          "sha256": "64eddfaea264cf9589a51e02ae175d76187a5bfb6b5a19aa0ec6d56d553afc45"
        },
        "downloads": -1,
        "filename": "significantdigits-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "af2c986f67a415444a3e5cb6b39cc236",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 18307,
        "upload_time": "2023-01-10T20:21:38",
        "upload_time_iso_8601": "2023-01-10T20:21:38.957119Z",
        "url": "https://files.pythonhosted.org/packages/72/34/ee40913bc59c0f822868c38d22e961c05e37170ef129d30b3b5155897dec/significantdigits-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3146e98f65d2c34858bcb3aa9ae9127aa2bd7730c963f2bdef5867d14303c28b",
          "md5": "9832c97d0caa961fab6332d6ce4d1375",
          "sha256": "7931a375a11eb6f4a0bf90e0dd3a3c64a62e6a1e4c396698b005c28fd3dcdb24"
        },
        "downloads": -1,
        "filename": "significantdigits-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9832c97d0caa961fab6332d6ce4d1375",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 25045,
        "upload_time": "2023-02-03T02:12:33",
        "upload_time_iso_8601": "2023-02-03T02:12:33.074328Z",
        "url": "https://files.pythonhosted.org/packages/31/46/e98f65d2c34858bcb3aa9ae9127aa2bd7730c963f2bdef5867d14303c28b/significantdigits-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a4688fcbee765fde607132438f0efb127440327f90a72b348be48b548d6a07a",
          "md5": "ad265435c5b3d834e71e82a46dc3a84b",
          "sha256": "63f90dbcda8d4c167a289efa3ef15ba7c30d073c29c89c7ed1eb011f6a341e00"
        },
        "downloads": -1,
        "filename": "significantdigits-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ad265435c5b3d834e71e82a46dc3a84b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 18310,
        "upload_time": "2023-02-03T02:12:34",
        "upload_time_iso_8601": "2023-02-03T02:12:34.663723Z",
        "url": "https://files.pythonhosted.org/packages/7a/46/88fcbee765fde607132438f0efb127440327f90a72b348be48b548d6a07a/significantdigits-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3146e98f65d2c34858bcb3aa9ae9127aa2bd7730c963f2bdef5867d14303c28b",
        "md5": "9832c97d0caa961fab6332d6ce4d1375",
        "sha256": "7931a375a11eb6f4a0bf90e0dd3a3c64a62e6a1e4c396698b005c28fd3dcdb24"
      },
      "downloads": -1,
      "filename": "significantdigits-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9832c97d0caa961fab6332d6ce4d1375",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 25045,
      "upload_time": "2023-02-03T02:12:33",
      "upload_time_iso_8601": "2023-02-03T02:12:33.074328Z",
      "url": "https://files.pythonhosted.org/packages/31/46/e98f65d2c34858bcb3aa9ae9127aa2bd7730c963f2bdef5867d14303c28b/significantdigits-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7a4688fcbee765fde607132438f0efb127440327f90a72b348be48b548d6a07a",
        "md5": "ad265435c5b3d834e71e82a46dc3a84b",
        "sha256": "63f90dbcda8d4c167a289efa3ef15ba7c30d073c29c89c7ed1eb011f6a341e00"
      },
      "downloads": -1,
      "filename": "significantdigits-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ad265435c5b3d834e71e82a46dc3a84b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 18310,
      "upload_time": "2023-02-03T02:12:34",
      "upload_time_iso_8601": "2023-02-03T02:12:34.663723Z",
      "url": "https://files.pythonhosted.org/packages/7a/46/88fcbee765fde607132438f0efb127440327f90a72b348be48b548d6a07a/significantdigits-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}