{
  "info": {
    "author": "vikas",
    "author_email": "x.vikassoni@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "===================\nEasy Api Validation\n===================\n\nThis is a python-package that makes data-validation easier for python developers.\nIt provides interfaces like Field, IterableField, Validaion etc for validation.\n\nQuick Start\n-----------\n\nIn order to use this library, you first need to go through the following steps:\n\nInstallation\n~~~~~~~~~~~~\nInstall this library in a `virtualenv`_ using pip. `virtualenv`_ is a tool to\ncreate isolated Python environments. The basic problem it addresses is one of\ndependencies and versions, and indirectly permissions.\n\nWith `virtualenv`_, it's possible to install this library without needing system\ninstall permissions, and without clashing with the installed system\ndependencies.\n\n.. _`virtualenv`: https://virtualenv.pypa.io/en/latest/\n\nSupported Python Versions\n^^^^^^^^^^^^^^^^^^^^^^^^^\nPython >= 3.5\n\nMac/Linux\n^^^^^^^^^\n\n.. code-block:: sh\n\n    $ pip install virtualenv\n    $ virtualenv venv -p python3\n    $ . venv/bin/activate\n    $ source venv/bin/activate\n    $ pip install git+https://github.com/soni-vikas/api-validaion.git#egg=api-validation'\n\nExample Usage\n~~~~~~~~~~~~~\nValidation.validate:\n    It will return tuple of length 2: validated_payload, error_flag, validation_status\n    In case of any validation failure, the first value will be the error message & the second value will be True.\n    In case there are no errors, the first value will be the validated payload, the second value will be False\n\nField: describes how to validate a field.\n\nIteratorField: subclass of Field, used for a list or any other iterator.\n\n1. Example: Validate literals\n\n.. code:: py\n\n    from api.validations import Validation\n\n    print(Validation.validate(\"123\", int, \"user\")) # (123, True)\n\n2. Example: Custom validation\n\n.. code:: py\n\n    from api.validations import Validation\n    def _check_in_list(x, ls):\n        if x not in ls:\n            raise ValueError()\n\n        return x\n\n    device = [\"cpu\", \"gpu\"]\n    print(Validation.validate(\"cpu\", lambda x: _check_in_list(x, device), \"device\"))\n    # ('cpu', False)\n\n    print(Validation.validate(\"amd\", lambda x: _check_in_list(x, device), \"device\"))\n    # (\"Field 'device' is in an invalid format.\", True)\n\n3. Example: Validation for iterables using Field\n\n.. code:: py\n\n    from api.validations import Validation\n    from api.validations import Field, IterableField\n    import re\n\n    employee = {\n        \"name\": \"vikas soni\",\n        \"phone\": \"8080808080\",\n        \"org_ids\": [\n            123,\n            345\n        ]\n    }\n\n    validation_dict = {\n        \"name\": Field(required=True, pattern=re.compile(\"[a-z]+( [a-z]+)*\"), null=True),\n        \"phone\": Field(required=True, pattern=re.compile(\"^[1-9][0-9]{9}$\"), null=True),\n        \"org_ids\": IterableField(required=True, sub_pattern=int)\n    }\n    payload, error = Validation.validate(employee, validation_dict)\n    print(payload)\n    print(error)\n\n    # {'name': 'vikas soni', 'phone': '8080808080', 'org_ids': [123, 345]}\n    # False\n\n3. Example: Validation for iterables using JSON schema\n\n.. code:: py\n\n    from api.validations import Validation\n    import re\n\n    employee = {\n        \"name\": \"vikas soni\",\n        \"phone\": \"8080808080\",\n        \"org_ids\": [\n            123,\n            345\n        ]\n    }\n\n    validation_dict = {\n        \"name\": {\n            'pattern': re.compile(r'[a-z]+( [a-z]+)*'),\n            'required': True,\n            'null': True\n        },\n        \"phone\": {\n            'pattern': re.compile(\"^[1-9][0-9]{9}$\"),\n            'required': True,\n            'null': True\n        },\n        \"org_ids\": {\n            'pattern': list,\n            'required': True,\n            'null': False,\n            'sub_pattern': int\n        }\n    }\n    payload, error = Validation.validate(employee, validation_dict)\n    print(payload)\n    print(error)\n\n    # {'name': 'vikas soni', 'phone': '8080808080', 'org_ids': [123, 345]}\n    # False\n\nfor more examples, see tests cases available in tests/\n\nDevelopment\n-----------\n\nGetting Started\n~~~~~~~~~~~~~~~\nAssuming that you have Python and ``virtualenv`` installed, set up your\nenvironment and install the required dependencies defined above:\n\n.. code-block:: sh\n\n    $ git clone https://github.com/soni-vikas/api-validaion.git\n    $ cd api-validation\n    $ virtualenv venv -p python3\n    ...\n    $ . venv/bin/activate\n    $ pip install -e .\n\nRunning Tests\n~~~~~~~~~~~~~\nYou can run tests in all supported Python versions using ``python setup.py test``. By default,\nit will run all of the unit and functional tests.\n\n.. code-block:: sh\n\n    $ python setup.py test\n\nYou can also run individual tests with your default Python version:\nsee ```--help```.\n\n.. code-block:: sh\n\n    $ python setup.py test --help\n\n\nFor any query raise an issue or create a pull request.\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/soni-vikas/easy-api-validation",
    "keywords": "api",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ApiValidations",
    "package_url": "https://pypi.org/project/ApiValidations/",
    "platform": "",
    "project_url": "https://pypi.org/project/ApiValidations/",
    "project_urls": {
      "Homepage": "https://github.com/soni-vikas/easy-api-validation"
    },
    "release_url": "https://pypi.org/project/ApiValidations/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "api-validation package.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8780735,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69d4e472616d147feb0043fbe59129cb00650ebafbd088379361161ce6ce82fa",
          "md5": "2bab5ebee96f18ca982911d83efb2022",
          "sha256": "f31bf142f80f5bccc9c9a2592269bd5f28a5d5b7e53a75afd0433b8f7ea78ac6"
        },
        "downloads": -1,
        "filename": "ApiValidations-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2bab5ebee96f18ca982911d83efb2022",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5998,
        "upload_time": "2020-11-30T15:55:35",
        "upload_time_iso_8601": "2020-11-30T15:55:35.134671Z",
        "url": "https://files.pythonhosted.org/packages/69/d4/e472616d147feb0043fbe59129cb00650ebafbd088379361161ce6ce82fa/ApiValidations-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8952d60b9220047c3382f8ee62fe36e3487aab30185f34d914eae0e1b12648aa",
          "md5": "a5a4c8a0ced8d98bb1044d08aa0018b4",
          "sha256": "1ee60117e7f0d34e9d11c0d957ea7ec9978b49fe33fe61bb09eb93d21ac9054d"
        },
        "downloads": -1,
        "filename": "ApiValidations-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a5a4c8a0ced8d98bb1044d08aa0018b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5623,
        "upload_time": "2020-11-30T15:55:36",
        "upload_time_iso_8601": "2020-11-30T15:55:36.777233Z",
        "url": "https://files.pythonhosted.org/packages/89/52/d60b9220047c3382f8ee62fe36e3487aab30185f34d914eae0e1b12648aa/ApiValidations-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "69d4e472616d147feb0043fbe59129cb00650ebafbd088379361161ce6ce82fa",
        "md5": "2bab5ebee96f18ca982911d83efb2022",
        "sha256": "f31bf142f80f5bccc9c9a2592269bd5f28a5d5b7e53a75afd0433b8f7ea78ac6"
      },
      "downloads": -1,
      "filename": "ApiValidations-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2bab5ebee96f18ca982911d83efb2022",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5998,
      "upload_time": "2020-11-30T15:55:35",
      "upload_time_iso_8601": "2020-11-30T15:55:35.134671Z",
      "url": "https://files.pythonhosted.org/packages/69/d4/e472616d147feb0043fbe59129cb00650ebafbd088379361161ce6ce82fa/ApiValidations-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8952d60b9220047c3382f8ee62fe36e3487aab30185f34d914eae0e1b12648aa",
        "md5": "a5a4c8a0ced8d98bb1044d08aa0018b4",
        "sha256": "1ee60117e7f0d34e9d11c0d957ea7ec9978b49fe33fe61bb09eb93d21ac9054d"
      },
      "downloads": -1,
      "filename": "ApiValidations-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a5a4c8a0ced8d98bb1044d08aa0018b4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5623,
      "upload_time": "2020-11-30T15:55:36",
      "upload_time_iso_8601": "2020-11-30T15:55:36.777233Z",
      "url": "https://files.pythonhosted.org/packages/89/52/d60b9220047c3382f8ee62fe36e3487aab30185f34d914eae0e1b12648aa/ApiValidations-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}