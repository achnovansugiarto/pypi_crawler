{
  "info": {
    "author": "Jason Farquhar",
    "author_email": "jason@mindaffect.nl",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "mindaffectBCI\n=============\nThis repository contains the python SDK code for the Brain Computer Interface (BCI) developed by the company `Mindaffect <https://mindaffect.nl>`_.\n\nOnline Documentation and Tutorials\n----------------------------------\nAvailable at: `https://mindaffect-bci.readthedocs.io/ <https://mindaffect-bci.readthedocs.io/en/latest/tutorials.html>`_\n\nInstallation\n------------\n\nTo install from **source** (currently the recommended method):\n  1. Clone or download this repository::\n\n       git clone https://github.com/mindaffect/pymindaffectBCI\n\n  #. Install the necessary bits to your local python path:\n\n    1. change to the directory where you cloned the repository.\n\n    #. Add this module to the python path, and install dependencies::\n   \n         pip install -e .\n\nTo install as a python library::\n\n    pip install --upgrade mindaffectBCI\n\nInstallation Test\n-----------------\n\nYou can run a quick test if the installation without any additional hardware by running::\n\n  python3 -m mindaffectBCI.online_bci --acquisition fakedata\n\nEssentially, this run the SDK test code which simulates a *fake* EEG source and then runs the full BCI sequence, with decoder discovery, calibration and prediction.\n\nIf all is successfully installed then you should see a window like this open up.\n\n<img src='docs/images/mainmenu.png' width=300>\n\nIf you now press 2 you should see a flickering grid of \"buttons\" like below.  You should see a random one briefly flash green (it's the target) then rapidly flicker and eventually turn blue (to indicate it's selected.)\n\n<img src='docs/images/selectionMatrix.png' width=300>\n\nIf all this works then you have successfully installed the mindaffectBCI python software. You should now ensure your hardware (display, amplifier) is correctly configured before jumping into BCI control.\n\n\nImportant: FrameRate Check\n--------------------------\n\nFor rapid visual stimulation BCI (like the noisetagging BCI), it is *very* important that the visual flicker be displayed *accurately*.  However, as the graphics performance of computers varies widely it is hard to know in advance if a particular configuration is accurate enough.  To help with this we also provide a graphics performance checker, which will validate that your graphics system is correctly configured.  You can run this with::\n\n  python3 -m mindaffectBCI.examples.presentation.framerate_check\n\nAs this runs it will show in a window your current graphics frame-rate and, more importantly, the variability in the frame times.  For good BCI performance this jitter should be <1ms.  If you see jitter greater than this you should probably adjust your graphics card settings.  The most important setting to consider is to be sure that you  have `_vsync_ <https://en.wikipedia.org/wiki/Screen_tearing#Vertical_synchronization>` *turned-on*.  Many graphics cards turn this off by default, as it (in theory) gives higher frame rates for gaming.  However, for our system, frame-rate is less important than *exact*  timing, hence always turn vsync on for visual Brain-Compuber-Interfaces!\n\n\nBrain Computer Interface Test\n-----------------------------\n\nIf you have:\n  1. installed `pyglet <https://pyglet.org>`_ , e.g. using `pip3 install pyglet`\n  #. installed `brainflow <https://brainflow.org>`_ , e.g. using `pip3 install brainflow`\n  #. have connected an `openBCI ganglion <https://shop.openbci.com>`_ ,\n  #. have followed `MindAffect headset layout.pdf <https://github.com/mindaffect/Headset/blob/master/MindAffect%20headset%20layout.pdf>`_ to attach the electrodes to the back of your head.\n\nThen you can jump directly to trying a fully functional simple letter matrix BCI using::\n\n  python3 -m mindaffectBCI.online_bci\n\nNote: For more information on how to run an on-line BCI, *including using other supported amplifiers*, see our complete `on-line documentation <mindaffect-bci.readthedocs.io>`_ and in particular our `tutorials section <https://mindaffect-bci.readthedocs.io/en/latest/tutorials.html>`_.\n\nGetting Support\n---------------\n\nIf you run into and issue you can either directly raise an issue on the projects `github page <https://github.com/mindaffect/pymindaffectBCI>`_ \n\n..\n    or directly contact the developers on `gitter <https://gitter.im/mindaffect>`_ -- to complain, complement, or just chat:\n\n    .. image:: https://badges.gitter.im/mindaffect/unitymindaffectBCI.svg\n      :target: https://gitter.im/mindaffect/pymindaffectBCI?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\n\nFile Structure\n--------------\nThis repository is organized roughly as follows:\n\n- `mindaffectBCI <mindaffectBCI>`_ - contains the python package containing the mindaffectBCI SDK.  Important modules within this package are: \n  - `noisetag.py <mindaffectBCI/noisetag.py>`_ - This module contains the main API for developing User Interfaces with BCI control\n  - `utopiaController.py <minaffectBCI/utopiaController.py>`_ - This module contains the application level APIs for interacting with the MindAffect Decoder.\n  - `utopiaclient.py <mindaffectBCI/utopiaclient.py>`_ - This module contains the low-level networking functions for communicating with the MindAffect Decoder - which is normally a separate computer running the eeg analysis software.\n  - stimseq.py -- This module contains the low-level functions for loading and codebooks - which define how the presented stimuli will look.\n\n- `decoder <mindaffectBCI/decoder>`_ - contains our open source python based Brain Computer Interface decoder, for both on-line and off-line analysis of neuro-imaging data. Important modules within this package are:\n  - `decoder.py <mindaffectBCI/decoder/decoder.py>`_ - This module contains the code for the on-line decoder.\n  - `offline_analysis.ipynb <mindaffectBCI/decoder/offline_analysis.ipynb>`_ - This `juypter <https://jupyter.org/>`_ notebook contains to run an off-line analysis of previously saved data from the mindaffectBCI or other publically available BCI datasets. \n   \n- `examples <mindaffectBCI/examples/>`_ - contains python based examples for Presentation and Output parts of the BCI. Important sub-directories\n   - `output <mindaffectBCI/examples/output/>`_ - Example output modules.  An output module translates BCI based selections into actions.\n   - `presentation <mindaffectBCI/examples/presentation/>`_ - Example presentation modules.  A presentation module, presents the BCI stimulus to the user, and is normally the main UI.  In particular here we have:\n     - `framerate_check.py <mindaffectBCI/examples/presentation/framerate_check.py>`_ - Which you can run to test if your display settings (particularly vsync) are correct for accurate flicker presentation.\n     - `selectionMatrix.py <mindaffectBCI/examples/presentation/selectionMatrix.py>`_ - Which you can run as a simple example of using the mindaffectBCI to select letters from an on-screen grid.\n\n   - `utilities <mindaffectBCI/examples/utilities/>`_ - Useful utilities, such as a simple *raw* signal viewer\n   - `acquisition <mindaffectBCI/examples/acquisition/>`_ - Example data acquisition modules.  An acquisition module interfaces with the EEG measurment hardware and streams time-stamped data to the hub.\n\n- `docs <docs/>`_ -- contains the documentation.\n\n  - `source <docs/source>`_ -- contains the source for the documentation, in particular this directory contains the juypter notebooks for tutorials on how to use the mindaffectBCI.\n  \n    - `online_bci.ipynb <docs/source/quickstart.ipynb>`_ - This `juypter <https://jupyter.org/>`_ notebook contains the code to run a complete on-line noise-tagging BCI",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/mindaffect/pymindaffectBCI",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mindaffectBCI2",
    "package_url": "https://pypi.org/project/mindaffectBCI2/",
    "platform": null,
    "project_url": "https://pypi.org/project/mindaffectBCI2/",
    "project_urls": {
      "Homepage": "http://github.com/mindaffect/pymindaffectBCI"
    },
    "release_url": "https://pypi.org/project/mindaffectBCI2/0.10.0/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "The MindAffect BCI python SDK",
    "version": "0.10.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13216273,
  "releases": {
    "0.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6067c0a684e3ad5900c842e96e1266af7b5e6c47bd62848f0bafffb9c639466",
          "md5": "8478b0597adba10fd9b3a4a746a65a3b",
          "sha256": "baf3360de81b27c923eac01e8bb6e182d439195669405ba79d4b36c60d40e3e9"
        },
        "downloads": -1,
        "filename": "mindaffectBCI2-0.10.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8478b0597adba10fd9b3a4a746a65a3b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 7433399,
        "upload_time": "2022-03-18T13:05:21",
        "upload_time_iso_8601": "2022-03-18T13:05:21.654711Z",
        "url": "https://files.pythonhosted.org/packages/c6/06/7c0a684e3ad5900c842e96e1266af7b5e6c47bd62848f0bafffb9c639466/mindaffectBCI2-0.10.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c6067c0a684e3ad5900c842e96e1266af7b5e6c47bd62848f0bafffb9c639466",
        "md5": "8478b0597adba10fd9b3a4a746a65a3b",
        "sha256": "baf3360de81b27c923eac01e8bb6e182d439195669405ba79d4b36c60d40e3e9"
      },
      "downloads": -1,
      "filename": "mindaffectBCI2-0.10.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8478b0597adba10fd9b3a4a746a65a3b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 7433399,
      "upload_time": "2022-03-18T13:05:21",
      "upload_time_iso_8601": "2022-03-18T13:05:21.654711Z",
      "url": "https://files.pythonhosted.org/packages/c6/06/7c0a684e3ad5900c842e96e1266af7b5e6c47bd62848f0bafffb9c639466/mindaffectBCI2-0.10.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}