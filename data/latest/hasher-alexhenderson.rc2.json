{
  "info": {
    "author": "Alex Henderson",
    "author_email": "alex.henderson@manchester.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Hasher #\n\nPython package to generate a stable hash value for either a single file, or a folder containing many files and \nsub-folders.\n\n## Features ##\n- The default hash type is `sha256`, although the user can specify any valid hash type provided by `hashlib`.\n- A single hash is generated from a folder, regardless of how many files and sub-folders it contains.\n- For a single file, the filename can be included into the hash if required (default is not to include).\n- Filenames relative to the initial source location are incorporated into the hash to define the folder structure.\n- For a folder, the folder name can be included into the hash if required (default is not to include).\n- Empty files and folders are hashed as their relative filename, thereby preserving the true folder structure.\n- Hashes of individual 'filename + file contents' hashes are first generated, before being sorted, and then\n    re-hashed. This prevents issues with filename ordering during the recursion process.\n- The Posix version of folder names are used in the hash to allow for cross-platform stability.\n- Folder names are relative to the source location, not absolute paths. For example with a source location of\n    `C:\\mydata\\hashme`, with the following structure:\n\n            C:\\mydata\\hashme\n            C:\\mydata\\hashme\\file1\n            C:\\mydata\\hashme\\file2\n            C:\\mydata\\hashme\\folder1\\file3\n            C:\\mydata\\hashme\\folder1\\subfolder2\\file4\n\n    The hash list will consist of individual hashes of:\n\n        'hashme', (if requested; default is not to include)\n        'hashme/file1' followed by the contents of that file,\n        'hashme/file2' followed by the contents of that file,\n        'hashme/folder1/file3' followed by the contents of that file,\n        'hashme/folder1/subfolder2/file4' followed by the contents of that file.\n\n    This hash list is then sorted for stability, before the final hash is calculated from each of the individual\n    hashes.\n\n    This process preserves the names, and relative locations, of each file within the folder structure, together\n    with the contents of the files therein. Empty files and folders are also recognised by their filename/folder name\n- Logging is implemented at the INFO level.\n\n## Notes ##\nIncorporation of the filename (single file hash), or folder name (folder hash), creates a hash that is a unique\nidentifier of that file/folder, including its name. If the filename/folder name is not included (default), the\nhash will be a unique identifier for the *contents* of the file/folder, even if it has a different name.\n\n## Examples ##\n\n### Example 1 ###\nAssuming a folder with a source location of `C:\\mydata\\hashme`, generate a hash of the folder and contents \nusing `sha256`, and excluding the folder name (`hashme`). The `hexdigest` here is an example output.     \n\n    from hasher import Hasher\n\n    source = r\"C:\\mydata\\hashme\"\n    hasher = Hasher()\n    h = hasher.generate(source)\n    if h:\n        print(f\"source: {source}\")\n        print(f\"hash name: {h.name}\")\n        print(f\"hash digest: {h.hexdigest()}\")\n        print(\"...or...\")\n        print(f\"source: {hasher.source()}\")\n        print(f\"hash name: {hasher.hash_name()}\")\n        print(f\"hash digest: {h.hexdigest()}\")\n\noutput  \n\n    source: C:\\mydata\\hashme\n    hash name: sha256\n    hash digest: 71d7434...<snip>...8077fb\n    ...or...\n    source: C:\\mydata\\hashme\n    hash name: sha256\n    hash digest: 71d7434...<snip>...8077fb\n\n### Example 2 ###\nScenario as for Example 1. Generate a `md5` hash\n\n    from hasher import Hasher\n\n    source = r\"C:\\mydata\\hashme\"\n    hasher = Hasher()\n    h = hasher.generate(source, hash_type='md5')\n    if h:\n        print(f\"hash name: {h.name}\")\n        print(f\"hash digest: {h.hexdigest()}\")\n\noutput\n\n    hash name: md5\n    hash digest: 64be08f...<snip>...924872\n\n### Example 3 ###\nScenario as for Example 2, but incorporating the folder name in the hash.\n\n    from hasher import Hasher\n\n    source = r\"C:\\mydata\\hashme\"\n    hasher = Hasher()\n    h = hasher.generate(source, hash_type='md5', include_source_str=True)\n    if h:\n        print(f\"hash name: {h.name}\")\n        print(f\"hash digest: {h.hexdigest()}\")\n\noutput\n\n    hash name: md5\n    hash digest: f2865fa...<snip>...6679c3\n\n## Requirements ##\n\n    python >= 3.7\n    pytest\n\n### Installation ###\n\n    pip install hasher-AlexHenderson==1.1.1\n\n\n## Usage rights ##\nCopyright (c) 2022 Alex Henderson (alex.henderson@manchester.ac.uk)   \nLicensed under the MIT License. See https://opensource.org/licenses/MIT      \nSPDX-License-Identifier: MIT   \nVersion 1.1.1   \nSee https://github.com/AlexHenderson/hasher for the most recent version  \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AlexHenderson/hasher",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hasher-AlexHenderson",
    "package_url": "https://pypi.org/project/hasher-AlexHenderson/",
    "platform": null,
    "project_url": "https://pypi.org/project/hasher-AlexHenderson/",
    "project_urls": {
      "Bug Tracker": "https://github.com/AlexHenderson/hasher/issues",
      "Homepage": "https://github.com/AlexHenderson/hasher"
    },
    "release_url": "https://pypi.org/project/hasher-AlexHenderson/1.1.1/",
    "requires_dist": [
      "pytest (>=7.0.1)"
    ],
    "requires_python": ">=3.7",
    "summary": "Python package to generate a stable hash value for either a single file, or a folder containing many files and sub-folders.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13100537,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90ba40c0df33d1e8c76d67e2a50a672bf5bddcdd05dc5daaf3d99961a3c9242b",
          "md5": "0104b9b7330b1d7e1864aef4c63a3562",
          "sha256": "0c9b4c159bf9311935964b35122323e2d9b7f16027a4f709594274c928c8c9b0"
        },
        "downloads": -1,
        "filename": "hasher_AlexHenderson-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0104b9b7330b1d7e1864aef4c63a3562",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7753,
        "upload_time": "2022-03-05T17:50:39",
        "upload_time_iso_8601": "2022-03-05T17:50:39.190931Z",
        "url": "https://files.pythonhosted.org/packages/90/ba/40c0df33d1e8c76d67e2a50a672bf5bddcdd05dc5daaf3d99961a3c9242b/hasher_AlexHenderson-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9de7c6d8a1f5b9394e1c1ae7881d4639ba514b951234584a7f231c902e2ee912",
          "md5": "e3cb72a9fb3195897599424c69042e13",
          "sha256": "1035b6ddfe596ba03ff7f0d098866016b0ca49de44230ebc1f50039b964cef79"
        },
        "downloads": -1,
        "filename": "hasher-AlexHenderson-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e3cb72a9fb3195897599424c69042e13",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6635,
        "upload_time": "2022-03-05T17:50:41",
        "upload_time_iso_8601": "2022-03-05T17:50:41.079194Z",
        "url": "https://files.pythonhosted.org/packages/9d/e7/c6d8a1f5b9394e1c1ae7881d4639ba514b951234584a7f231c902e2ee912/hasher-AlexHenderson-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6dc245e900b1a4df1c0a233636088a248edebf79afa072f1442ec71cbf71874",
          "md5": "ef206af941581564fca721e81ef80be0",
          "sha256": "26213389a3b7c2944a35980bc6103e3c2c813e16f0e44314708c2fad42842d40"
        },
        "downloads": -1,
        "filename": "hasher_AlexHenderson-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef206af941581564fca721e81ef80be0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7777,
        "upload_time": "2022-03-07T11:22:37",
        "upload_time_iso_8601": "2022-03-07T11:22:37.873739Z",
        "url": "https://files.pythonhosted.org/packages/c6/dc/245e900b1a4df1c0a233636088a248edebf79afa072f1442ec71cbf71874/hasher_AlexHenderson-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7c3bdc11959aac8b6e4f5d4db4c541bdd810415b62e883b6228a66b05b022e7",
          "md5": "a00ca1a82e4cbc89856f559f3698ccb3",
          "sha256": "63ad393a04bf2dbea9c06296d168b1b2a513cc78bc48fbe3366cbcdd8087e6de"
        },
        "downloads": -1,
        "filename": "hasher-AlexHenderson-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a00ca1a82e4cbc89856f559f3698ccb3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6679,
        "upload_time": "2022-03-07T11:22:39",
        "upload_time_iso_8601": "2022-03-07T11:22:39.502597Z",
        "url": "https://files.pythonhosted.org/packages/d7/c3/bdc11959aac8b6e4f5d4db4c541bdd810415b62e883b6228a66b05b022e7/hasher-AlexHenderson-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c6dc245e900b1a4df1c0a233636088a248edebf79afa072f1442ec71cbf71874",
        "md5": "ef206af941581564fca721e81ef80be0",
        "sha256": "26213389a3b7c2944a35980bc6103e3c2c813e16f0e44314708c2fad42842d40"
      },
      "downloads": -1,
      "filename": "hasher_AlexHenderson-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ef206af941581564fca721e81ef80be0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7777,
      "upload_time": "2022-03-07T11:22:37",
      "upload_time_iso_8601": "2022-03-07T11:22:37.873739Z",
      "url": "https://files.pythonhosted.org/packages/c6/dc/245e900b1a4df1c0a233636088a248edebf79afa072f1442ec71cbf71874/hasher_AlexHenderson-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d7c3bdc11959aac8b6e4f5d4db4c541bdd810415b62e883b6228a66b05b022e7",
        "md5": "a00ca1a82e4cbc89856f559f3698ccb3",
        "sha256": "63ad393a04bf2dbea9c06296d168b1b2a513cc78bc48fbe3366cbcdd8087e6de"
      },
      "downloads": -1,
      "filename": "hasher-AlexHenderson-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a00ca1a82e4cbc89856f559f3698ccb3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 6679,
      "upload_time": "2022-03-07T11:22:39",
      "upload_time_iso_8601": "2022-03-07T11:22:39.502597Z",
      "url": "https://files.pythonhosted.org/packages/d7/c3/bdc11959aac8b6e4f5d4db4c541bdd810415b62e883b6228a66b05b022e7/hasher-AlexHenderson-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}