{
  "info": {
    "author": "Thomas Elvey",
    "author_email": "tomelvey@googlemail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# dbt-athena\n\n* Supports dbt version `1.0.*`\n* Supports [Seeds][seeds]\n* Correctly detects views and their columns\n* Support [incremental models][incremental]\n  * Support two incremental update strategies: `insert_overwrite` and `append`\n  * Does **not** support the use of `unique_key`\n* **Only** supports Athena engine 2\n  * [Changing Athena Engine Versions][engine-change]\n\n[seeds]: https://docs.getdbt.com/docs/building-a-dbt-project/seeds\n[incremental]: https://docs.getdbt.com/docs/building-a-dbt-project/building-models/configuring-incremental-models\n[engine-change]: https://docs.aws.amazon.com/athena/latest/ug/engine-versions-changing.html\n\n### Installation\n\n* `pip install dbt-athena-adapter`\n* Or `pip install git+https://github.com/Tomme/dbt-athena.git`\n\n### Prerequisites\n\nTo start, you will need an S3 bucket, for instance `my-staging-bucket` and an Athena database:\n\n```sql\nCREATE DATABASE IF NOT EXISTS analytics_dev\nCOMMENT 'Analytics models generated by dbt (development)'\nLOCATION 's3://my-staging-bucket/'\nWITH DBPROPERTIES ('creator'='Foo Bar', 'email'='foo@bar.com');\n```\n\nNotes:\n- Take note of your AWS region code (e.g. `us-west-2` or `eu-west-2`, etc.).\n- You can also use [AWS Glue](https://docs.aws.amazon.com/athena/latest/ug/glue-athena.html) to create and manage Athena databases.\n\n### Credentials\n\nThis plugin does not accept any credentials directly. Instead, [credentials are determined automatically](https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html) based on `aws cli`/`boto3` conventions and\nstored login info. You can configure the AWS profile name to use via `aws_profile_name`. Checkout DBT profile configuration below for details.\n\n### Configuring your profile\n\nA dbt profile can be configured to run against AWS Athena using the following configuration:\n\n| Option          | Description                                                                     | Required?  | Example             |\n|---------------- |-------------------------------------------------------------------------------- |----------- |-------------------- |\n| s3_staging_dir  | S3 location to store Athena query results and metadata                          | Required   | `s3://bucket/dbt/`  |\n| region_name     | AWS region of your Athena instance                                              | Required   | `eu-west-1`         |\n| schema          | Specify the schema (Athena database) to build models into (lowercase **only**)  | Required   | `dbt`               |\n| database        | Specify the database (Data catalog) to build models into (lowercase **only**)   | Required   | `awsdatacatalog`    |\n| poll_interval   | Interval in seconds to use for polling the status of query results in Athena    | Optional   | `5`                 |\n| aws_profile_name| Profile to use from your AWS shared credentials file.                           | Optional   | `my-profile`        |\n| work_group| Identifier of Athena workgroup   | Optional   | `my-custom-workgroup`        |\n| num_retries| Number of times to retry a failing query | Optional  | `3`  | `5`\n\n**Example profiles.yml entry:**\n```yaml\nathena:\n  target: dev\n  outputs:\n    dev:\n      type: athena\n      s3_staging_dir: s3://athena-query-results/dbt/\n      region_name: eu-west-1\n      schema: dbt\n      database: awsdatacatalog\n      aws_profile_name: my-profile\n      work_group: my-workgroup\n```\n\n_Additional information_\n* `threads` is supported\n* `database` and `catalog` can be used interchangeably\n\n### Usage notes\n\n### Models\n\n#### Table Configuration\n\n* `external_location` (`default=none`)\n  * The location where Athena saves your table in Amazon S3\n  * If `none` then it will default to `{s3_staging_dir}/tables`\n  * If you are using a static value, when your table/partition is recreated underlying data will be cleaned up and overwritten by new data\n* `partitioned_by` (`default=none`)\n  * An array list of columns by which the table will be partitioned\n  * Limited to creation of 100 partitions (_currently_)\n* `bucketed_by` (`default=none`)\n  * An array list of columns to bucket data\n* `bucket_count` (`default=none`)\n  * The number of buckets for bucketing your data\n* `format` (`default='parquet'`)\n  * The data format for the table\n  * Supports `ORC`, `PARQUET`, `AVRO`, `JSON`, or `TEXTFILE`\n* `write_compression` (`default=none`)\n  * The compression type to use for any storage format that allows compression to be specified. To see which options are available, check out [CREATE TABLE AS][create-table-as]\n* `field_delimiter` (`default=none`)\n  * Custom field delimiter, for when format is set to `TEXTFILE`\n  \nMore information: [CREATE TABLE AS][create-table-as]\n\n[run_started_at]: https://docs.getdbt.com/reference/dbt-jinja-functions/run_started_at\n[invocation_id]: https://docs.getdbt.com/reference/dbt-jinja-functions/invocation_id\n[create-table-as]: https://docs.aws.amazon.com/athena/latest/ug/create-table-as.html\n\n#### Supported functionality\n\nSupport for incremental models:\n* Support two incremental update strategies with partitioned tables: `insert_overwrite` and `append`\n* Does **not** support the use of `unique_key`\n\nDue to the nature of AWS Athena, not all core dbt functionality is supported.\nThe following features of dbt are not implemented on Athena:\n* Snapshots\n\n#### Known issues\n\n* Quoting is not currently supported\n  * If you need to quote your sources, escape the quote characters in your source definitions:\n  \n  ```yaml\n  version: 2\n\n  sources:\n    - name: my_source\n      tables:\n        - name: first_table\n          identifier: \"first table\"       # Not like that\n        - name: second_table\n          identifier: \"\\\"second table\\\"\"  # Like this\n  ```\n\n* Tables, schemas and database should only be lowercase\n* **Only** supports Athena engine 2\n  * [Changing Athena Engine Versions][engine-change]\n\n### Running tests\n\nFirst, install the adapter and its dependencies using `make` (see [Makefile](Makefile)):\n\n```bash\nmake install_deps\n```\n\nNext, configure the environment variables in [dev.env](dev.env) to match your Athena development environment. Finally, run the tests using `make`:\n\n```bash\nmake run_tests\n```\n\n### Community\n\n* [fishtown-analytics/dbt][fishtown-analytics/dbt]\n* [fishtown-analytics/dbt-presto][fishtown-analytics/dbt-presto]\n* [Dandandan/dbt-athena][Dandandan/dbt-athena]\n* [laughingman7743/PyAthena][laughingman7743/PyAthena]\n\n[fishtown-analytics/dbt]: https://github.com/fishtown-analytics/dbt\n[fishtown-analytics/dbt-presto]: https://github.com/fishtown-analytics/dbt-presto\n[Dandandan/dbt-athena]: https://github.com/Dandandan/dbt-athena\n[laughingman7743/PyAthena]: https://github.com/laughingman7743/PyAthena\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Tomme/dbt-athena",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dbt-athena-adapter",
    "package_url": "https://pypi.org/project/dbt-athena-adapter/",
    "platform": null,
    "project_url": "https://pypi.org/project/dbt-athena-adapter/",
    "project_urls": {
      "Homepage": "https://github.com/Tomme/dbt-athena"
    },
    "release_url": "https://pypi.org/project/dbt-athena-adapter/1.0.1/",
    "requires_dist": [
      "dbt-core (>=1.0.1)",
      "pyathena (>=2.2.0)",
      "boto3 (>=1.18.12)",
      "tenacity (>=6.3.1)"
    ],
    "requires_python": "",
    "summary": "The athena adapter plugin for dbt (data build tool)",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14686679,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbf4b78a3bee4033c2dd5ec647a63e0774ef93bf90ef2830002c002401d2e119",
          "md5": "ef9db5d6a2b62b9e5101dad8fe035e33",
          "sha256": "d812f865780445feadbc34ab9340cb53895a0c38ade930820a6a2002e0df1a2f"
        },
        "downloads": -1,
        "filename": "dbt_athena_adapter-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef9db5d6a2b62b9e5101dad8fe035e33",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24535,
        "upload_time": "2022-08-08T09:24:49",
        "upload_time_iso_8601": "2022-08-08T09:24:49.965157Z",
        "url": "https://files.pythonhosted.org/packages/cb/f4/b78a3bee4033c2dd5ec647a63e0774ef93bf90ef2830002c002401d2e119/dbt_athena_adapter-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c0c17610e1d35abf4e9c4b16c83b2d593babc5060f7c688aea35efd80206b2f",
          "md5": "37301cce47d6951243b48c2de93039f7",
          "sha256": "e92c0c3c8ef996345728740d370efd141ca67eabf83b637e5939380e99099c0b"
        },
        "downloads": -1,
        "filename": "dbt-athena-adapter-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "37301cce47d6951243b48c2de93039f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20668,
        "upload_time": "2022-08-08T09:24:51",
        "upload_time_iso_8601": "2022-08-08T09:24:51.347462Z",
        "url": "https://files.pythonhosted.org/packages/8c/0c/17610e1d35abf4e9c4b16c83b2d593babc5060f7c688aea35efd80206b2f/dbt-athena-adapter-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cbf4b78a3bee4033c2dd5ec647a63e0774ef93bf90ef2830002c002401d2e119",
        "md5": "ef9db5d6a2b62b9e5101dad8fe035e33",
        "sha256": "d812f865780445feadbc34ab9340cb53895a0c38ade930820a6a2002e0df1a2f"
      },
      "downloads": -1,
      "filename": "dbt_athena_adapter-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ef9db5d6a2b62b9e5101dad8fe035e33",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 24535,
      "upload_time": "2022-08-08T09:24:49",
      "upload_time_iso_8601": "2022-08-08T09:24:49.965157Z",
      "url": "https://files.pythonhosted.org/packages/cb/f4/b78a3bee4033c2dd5ec647a63e0774ef93bf90ef2830002c002401d2e119/dbt_athena_adapter-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8c0c17610e1d35abf4e9c4b16c83b2d593babc5060f7c688aea35efd80206b2f",
        "md5": "37301cce47d6951243b48c2de93039f7",
        "sha256": "e92c0c3c8ef996345728740d370efd141ca67eabf83b637e5939380e99099c0b"
      },
      "downloads": -1,
      "filename": "dbt-athena-adapter-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "37301cce47d6951243b48c2de93039f7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20668,
      "upload_time": "2022-08-08T09:24:51",
      "upload_time_iso_8601": "2022-08-08T09:24:51.347462Z",
      "url": "https://files.pythonhosted.org/packages/8c/0c/17610e1d35abf4e9c4b16c83b2d593babc5060f7c688aea35efd80206b2f/dbt-athena-adapter-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}