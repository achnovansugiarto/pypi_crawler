{
  "info": {
    "author": "Matthew Wimberly",
    "author_email": "matthew.wimb@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<div align=\"center\">\n    <img src=\"https://github.com/mattdood/graph-ein/raw/master/assets/ein-space.gif\" alt=\"Gif of Ein from Cowboy Bebop in space\"/>\n</div>\n\n**Note:** I do not make any claims to the [Cowboy Bebop](https://en.wikipedia.org/wiki/Cowboy_Bebop) assets, names, or trademarks.\n\n# Graph-Ein\nA graph database implemented in [SQLite](https://sqlite.org/index.html). This is\ngreat for creating a standalone, single file graph database.\n\n<img src=\"https://img.shields.io/github/issues/mattdood/graph-ein\"\n    target=\"https://github.com/mattdood/graph-ein/issues\"\n    alt=\"Badge for GitHub issues.\"/>\n<img src=\"https://img.shields.io/github/forks/mattdood/graph-ein\"\n    target=\"https://github.com/mattdood/graph-ein/forks\"\n    alt=\"Badge for GitHub forks.\"/>\n<img src=\"https://img.shields.io/github/stars/mattdood/graph-ein\"\n    alt=\"Badge for GitHub stars.\"/>\n<img src=\"https://img.shields.io/github/license/mattdood/graph-ein\"\n    target=\"https://github.com/mattdood/graph-ein/raw/master/LICENSE\"\n    alt=\"Badge for GitHub license, MIT.\"/>\n<img src=\"https://img.shields.io/twitter/url?url=https%3A%2F%2Fgithub.com%2Fmattdood%2Fgraph-ein\"\n    target=\"https://twitter.com/intent/tweet?text=Wow:&url=https%3A%2F%2Fgithub.com%2Fmattdood%2Fgraph-ein\"\n    alt=\"Badge for sharable Twitter link.\"/>\n[![Pytest](https://github.com/mattdood/graph-ein/actions/workflows/ci.yml/badge.svg)](https://github.com/mattdood/graph-ein/actions/workflows/ci.yml)\n[![PyPI version](https://badge.fury.io/py/ein-graph.svg)](https://badge.fury.io/py/ein-graph)\n\n## Installation\nTo install the project, run the following:\n\n```\npip install ein-graph\n```\n\n## Usage\nThe project generates a database file if one is not provided. The database itself\nis accessible; however, the `Graph` object is the typical interface that should\nbe used for interacting with the data stored.\n\n### Database\nSQLite database files are created for each separate database path that is provided.\nThese are utilized upon instantiation of the `Graph` object, which will discover\neach of the data objects stored in the file.\n\nThe database can be connected to via [DBeaver](https://dbeaver.io) or some other\ndatabase client if you'd like to explore the data.\n\n**Note:** For users that want to utilize additional SQLite features there are\nmethods for executing arbitrary statements/multiple statements.\n\n#### Schemas\nDatabases have a concept of \"schemas\" that are used to organize disparate nodes\nand edges from each other. As such, a schema is needed for each of the node/edge\ndata points added.\n\nSchemas are stored in table-form as follows:\n```\n<schema_name>_nodes\n<schema_name>_edges\n```\n\nTo look at these in action use the following on your database using a database client:\n```sql\n-- from \"select-schemas.sql\"\nSELECT\n    name\nFROM\n    sqlite_master\nWHERE\n    type = 'table'\n    AND\n    tbl_name LIKE '%' || ? || '%'\n;\n```\n**Note:** The above should only be used after a setup has been performed to create\na client and add a schema.\n\n### Graph\nThe `Graph` instantiates with all current data in the supplied path.\n\nGraphs operate with \"schemas\" that help to logically separate different sub-graphs.\nThese graphs can be connected via `Edge` objects to bridge clusters of nodes.\n\nAny data added/updated/deleted via the `Graph` is also reflected at the database\nlevel at time of execution.\n\n```python\nfrom ein.graph import Graph\n\n\ngraph = Graph(db_path=\"test.db\")\ngraph.add_schema(\"some_schema\")\n```\n\n### Nodes\nEach `Node` object is a representation of data stored in the database, all data\nshould be capable of being rendered to JSON.\n\n```python\nfrom ein.node import Node\n\n\nnode = Node(\n    schema_name=\"some_schema\",\n    id=\"my-id\",\n    body={\n        \"some-key\": 1,\n        \"other-key\": \"data\"\n    },\n)\n```\n\n### Edges\nThe graph's `Edge`s are a pair of nodes with a relationship. These contain the\n`source` and `target` nodes (and optionally `properties` for weights).\n\n```python\nfrom ein.edge import Edge\n\n\nedge = Edge(\n    schema_name=\"some_schema\",\n    source=Node(...),\n    target=Node(...),\n)\n```\n\nTo bridge `Node` objects between two schemas the `schema_name=` argument\nshould be supplied. This will be the database schema that the edge is stored in,\nbut the schemas of the `source` and `target` will be discovered from the `Node`\nobjects.\n\n```python\nfrom ein.edge import Edge\n\n\nnode_one = Node(\n    schema_name=\"some_schema\",\n    ...,\n)\n\nnode_two = Node(\n    schema_name=\"some_other_schema\",\n    ...,\n)\n\nedge = Edge(\n    schema_name=node_one.schema_name,\n    source=node_one,\n    target=node_two,\n)\n\nprint(edge.source_schema_name) # some_schema\nprint(edge.target_schema_name) # some_other_schema\n```\n\n## Releasing builds\nTo release builds for the project we use a combination of tagging and changes to\n`setup.py`.\n\nFor any releases to `test.pypi.org` use a change to the `version=\"...\"` inside of\n`setup.py`. Once a PR is merged into the main project the test release will be updated.\n\nAny prod releases to `pypi.org` require a tagged version number. This should be done locally\nby running the following:\n\n```bash\ngit checkout master\ngit pull master\ngit tag v<version-number-here>\ngit push origin v<version-number-here>\n```\n\n### Rollbacks of versions\nTo roll a version back we need to delete the tagged release from the prod PyPI,\nthen delete the GitHub tag.\n\n```\ngit tag -d v<version-number-here>\ngit push origin :v<version-number-here>\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mattdood/graph-ein",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ein-graph",
    "package_url": "https://pypi.org/project/ein-graph/",
    "platform": null,
    "project_url": "https://pypi.org/project/ein-graph/",
    "project_urls": {
      "Bug Tracker": "https://github.com/mattdood/graph-ein/issues",
      "Homepage": "https://github.com/mattdood/graph-ein"
    },
    "release_url": "https://pypi.org/project/ein-graph/0.0.12/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A graph database implemented in SQLite.",
    "version": "0.0.12",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15347462,
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35728566fdb47f683cc7ccb886d07d6bd7d91063814d11c75233f9c2db16342a",
          "md5": "afe854cda68abf2998266c88ff849597",
          "sha256": "954bf545bbcdf9533bac2244eda483be1830a1401a040238c8f48c76903ecb32"
        },
        "downloads": -1,
        "filename": "ein_graph-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "afe854cda68abf2998266c88ff849597",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14802,
        "upload_time": "2022-06-20T03:39:33",
        "upload_time_iso_8601": "2022-06-20T03:39:33.809908Z",
        "url": "https://files.pythonhosted.org/packages/35/72/8566fdb47f683cc7ccb886d07d6bd7d91063814d11c75233f9c2db16342a/ein_graph-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cf4ed688b60e06b1a86841409728a75fe5d680b5bf8a505c8af51eeaa1ef6a6",
          "md5": "e6513a88a6f92dd460885192ac3f3a63",
          "sha256": "3a34b16615b563c30c970158618d1a517de57bfe342f5f6b2c96d6189910a5bd"
        },
        "downloads": -1,
        "filename": "ein-graph-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "e6513a88a6f92dd460885192ac3f3a63",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15455,
        "upload_time": "2022-06-20T03:39:35",
        "upload_time_iso_8601": "2022-06-20T03:39:35.673511Z",
        "url": "https://files.pythonhosted.org/packages/4c/f4/ed688b60e06b1a86841409728a75fe5d680b5bf8a505c8af51eeaa1ef6a6/ein-graph-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6eb61712f56a004a0eb13568eadb47c0b40e26564a5433479464f16c54311fb",
          "md5": "8986b70b34976c2a1c02314b721e595e",
          "sha256": "bfe5f1b0d6dfe91e9bb4ffc9718e0b7ec80f60465b5033c55d1f903d4f9575bf"
        },
        "downloads": -1,
        "filename": "ein_graph-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8986b70b34976c2a1c02314b721e595e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15903,
        "upload_time": "2022-07-04T03:43:46",
        "upload_time_iso_8601": "2022-07-04T03:43:46.928401Z",
        "url": "https://files.pythonhosted.org/packages/f6/eb/61712f56a004a0eb13568eadb47c0b40e26564a5433479464f16c54311fb/ein_graph-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c2e9e053dec11f2a5fd1c5e9c50559f5388f303b6311959437b18e6fd2c3282",
          "md5": "2461d78fca077f74325b12964e3ddce1",
          "sha256": "8322a29fa6beb6c44833e58967bb46bfc3e7be5251886ff3cc4c927c1e6093ab"
        },
        "downloads": -1,
        "filename": "ein-graph-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "2461d78fca077f74325b12964e3ddce1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17283,
        "upload_time": "2022-07-04T03:43:48",
        "upload_time_iso_8601": "2022-07-04T03:43:48.321140Z",
        "url": "https://files.pythonhosted.org/packages/8c/2e/9e053dec11f2a5fd1c5e9c50559f5388f303b6311959437b18e6fd2c3282/ein-graph-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b5f8fe495e296ea54c03dec6b835d9a3c339c93619e63ccff8755567958912a",
          "md5": "38b81fedc95a497dcf4584df500d26e6",
          "sha256": "01f07d429c05275e3e00290f3df46982b5383baaa089a25f5418f7078a43e7c5"
        },
        "downloads": -1,
        "filename": "ein_graph-0.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "38b81fedc95a497dcf4584df500d26e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15920,
        "upload_time": "2022-10-09T00:40:29",
        "upload_time_iso_8601": "2022-10-09T00:40:29.094822Z",
        "url": "https://files.pythonhosted.org/packages/9b/5f/8fe495e296ea54c03dec6b835d9a3c339c93619e63ccff8755567958912a/ein_graph-0.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff6c4c6f435cadc6ddf29e3f43b10c72ad32c43a92f58d703df4a3cee0621055",
          "md5": "dac80fcf2147cc27b2a7fd6fe4dd6f72",
          "sha256": "2ffefc2c4e9b0b6f2febcd728edf4a3e957c55e51653e096845c12581055252c"
        },
        "downloads": -1,
        "filename": "ein-graph-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "dac80fcf2147cc27b2a7fd6fe4dd6f72",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17298,
        "upload_time": "2022-10-09T00:40:30",
        "upload_time_iso_8601": "2022-10-09T00:40:30.750901Z",
        "url": "https://files.pythonhosted.org/packages/ff/6c/4c6f435cadc6ddf29e3f43b10c72ad32c43a92f58d703df4a3cee0621055/ein-graph-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9b5f8fe495e296ea54c03dec6b835d9a3c339c93619e63ccff8755567958912a",
        "md5": "38b81fedc95a497dcf4584df500d26e6",
        "sha256": "01f07d429c05275e3e00290f3df46982b5383baaa089a25f5418f7078a43e7c5"
      },
      "downloads": -1,
      "filename": "ein_graph-0.0.12-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "38b81fedc95a497dcf4584df500d26e6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 15920,
      "upload_time": "2022-10-09T00:40:29",
      "upload_time_iso_8601": "2022-10-09T00:40:29.094822Z",
      "url": "https://files.pythonhosted.org/packages/9b/5f/8fe495e296ea54c03dec6b835d9a3c339c93619e63ccff8755567958912a/ein_graph-0.0.12-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff6c4c6f435cadc6ddf29e3f43b10c72ad32c43a92f58d703df4a3cee0621055",
        "md5": "dac80fcf2147cc27b2a7fd6fe4dd6f72",
        "sha256": "2ffefc2c4e9b0b6f2febcd728edf4a3e957c55e51653e096845c12581055252c"
      },
      "downloads": -1,
      "filename": "ein-graph-0.0.12.tar.gz",
      "has_sig": false,
      "md5_digest": "dac80fcf2147cc27b2a7fd6fe4dd6f72",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 17298,
      "upload_time": "2022-10-09T00:40:30",
      "upload_time_iso_8601": "2022-10-09T00:40:30.750901Z",
      "url": "https://files.pythonhosted.org/packages/ff/6c/4c6f435cadc6ddf29e3f43b10c72ad32c43a92f58d703df4a3cee0621055/ein-graph-0.0.12.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}