{
  "info": {
    "author": "Fernando Garcia",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# BinanceTrading\n\nBinanceTrading is a custom trading library using the Binance API for executing or backtesting trading strategies. It is hardcoded to only trade coins against USD Tether.\n\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install.\n\n```bash\npip install binancetrading\n```\n\nIf you are on windows, follow these [instructions](https://dev.binance.vision/t/cant-run-any-websocket-example-on-binance-connector-python-on-windows/4957/2) to be able to use Binance websocket client.\n\n## Usage\nTo use this library it is necesary to have Binance API keys, it is also possible to work with Binance Testnet keys. Here we store them as environment variables.\n\nGet the current coin balances in the account.\n```python\nimport os\nfrom binancetrading import Account\n\nAPI = os.environ.get('BINANCE_API')\nSECRET = os.environ.get('BINANCE_SECRET')\n\naccount = Account(API, SECRET, paper_trade=False, apiurl='https://api.binance.com')\nbalances = account.account_balances()\n\nprint(balances)\n```\n\nPrint the last ten 1 minute candlesticks of BTCUSDT.\n```python\nfrom binancetrading import Exchange\n\nexchange = Exchange()\ndata = exchange.kline_df('BTC', '1m', 10)\n\nprint(data)\n```\nSee more [examples](https://github.com/fegarciad/BinanceTrading/tree/main/examples).\n\n## Modules\n\n### Account\n\nThe account class is where all the relevant account data is stored like cash and token positions. It has methods to retrieve balances and these are updated if a trade is made.\n\n### Exchange\n\nThe exchange module is responsible for retrieving data from the Binance API using websockets and requests. It is also responsible for executing trades.\n\n### Trading bot\n\nTo trade and test stragies it is necessary to create an instance of an trading bot, which will retrieve data from the exchange and execute orders given by the strategy. These trades are made by an account instance.\n\n### Strategies\n\nThe strategies module contains the trading strategies to use. These are basic starting points and it is encouraged to implement own strategies. These should follow the TradingStrategy abstract base class.\n\n### Backtesting\n\nThe backtesting module is to make an event driven trading strategy backtest. It also prints price charts with entry and exit points given by the strategy.\n\n## Further development\n\nInclude an strategy optimizer module to optimize the parameters of a trading strategy using backtest results.\n\nMake order size a percentage of current holdings or dependant on the trading strategy.\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fegarciad/BinanceTrading",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "binancetrading",
    "package_url": "https://pypi.org/project/binancetrading/",
    "platform": "",
    "project_url": "https://pypi.org/project/binancetrading/",
    "project_urls": {
      "Homepage": "https://github.com/fegarciad/BinanceTrading"
    },
    "release_url": "https://pypi.org/project/binancetrading/0.0.1/",
    "requires_dist": [
      "numpy",
      "pandas",
      "matplotlib",
      "binance-connector"
    ],
    "requires_python": ">=3.7",
    "summary": "Custom trading module using Binance API",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12333424,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6409d4cd63778dc250d298826c072691e12bc62589c4949047e011fa565383a",
          "md5": "4645dd4314010b2ea3f26f277904b803",
          "sha256": "bc28e29d4d5c44f73614b9a91c0afdae693975c257431d860242248784d4fab6"
        },
        "downloads": -1,
        "filename": "binancetrading-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4645dd4314010b2ea3f26f277904b803",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 15064,
        "upload_time": "2021-12-16T21:45:35",
        "upload_time_iso_8601": "2021-12-16T21:45:35.642267Z",
        "url": "https://files.pythonhosted.org/packages/e6/40/9d4cd63778dc250d298826c072691e12bc62589c4949047e011fa565383a/binancetrading-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff5c0ae05302837427b4e8dd8407a7d23dad04aa53e59be2553264669f2c52e5",
          "md5": "7f149467f4fddaf8846301762c19d562",
          "sha256": "3f08cbd5ea3ccc43bbf582d1de7771d363360920ad5acb0152a32f55d85f5255"
        },
        "downloads": -1,
        "filename": "binancetrading-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7f149467f4fddaf8846301762c19d562",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13383,
        "upload_time": "2021-12-16T21:45:37",
        "upload_time_iso_8601": "2021-12-16T21:45:37.889045Z",
        "url": "https://files.pythonhosted.org/packages/ff/5c/0ae05302837427b4e8dd8407a7d23dad04aa53e59be2553264669f2c52e5/binancetrading-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e6409d4cd63778dc250d298826c072691e12bc62589c4949047e011fa565383a",
        "md5": "4645dd4314010b2ea3f26f277904b803",
        "sha256": "bc28e29d4d5c44f73614b9a91c0afdae693975c257431d860242248784d4fab6"
      },
      "downloads": -1,
      "filename": "binancetrading-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4645dd4314010b2ea3f26f277904b803",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 15064,
      "upload_time": "2021-12-16T21:45:35",
      "upload_time_iso_8601": "2021-12-16T21:45:35.642267Z",
      "url": "https://files.pythonhosted.org/packages/e6/40/9d4cd63778dc250d298826c072691e12bc62589c4949047e011fa565383a/binancetrading-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff5c0ae05302837427b4e8dd8407a7d23dad04aa53e59be2553264669f2c52e5",
        "md5": "7f149467f4fddaf8846301762c19d562",
        "sha256": "3f08cbd5ea3ccc43bbf582d1de7771d363360920ad5acb0152a32f55d85f5255"
      },
      "downloads": -1,
      "filename": "binancetrading-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7f149467f4fddaf8846301762c19d562",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 13383,
      "upload_time": "2021-12-16T21:45:37",
      "upload_time_iso_8601": "2021-12-16T21:45:37.889045Z",
      "url": "https://files.pythonhosted.org/packages/ff/5c/0ae05302837427b4e8dd8407a7d23dad04aa53e59be2553264669f2c52e5/binancetrading-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}