{
  "info": {
    "author": "Steinwurf ApS",
    "author_email": "contact@steinwurf.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Plugins",
      "Framework :: Pytest",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development",
      "Topic :: Software Development :: Testing"
    ],
    "description": "============\nIntroduction\n============\n\n|PyPi| |Waf Python Tests| |Black| |Flake8| |Pip Install|\n\n.. |PyPi| image:: https://badge.fury.io/py/pytest-dummynet.svg\n    :target: https://badge.fury.io/py/pytest-dummynet\n\n.. |Waf Python Tests| image:: https://github.com/steinwurf/pytest-dummynet/actions/workflows/python-waf.yml/badge.svg\n   :target: https://github.com/steinwurf/pytest-dummynet/actions/workflows/python-waf.yml\n\n.. |Flake8| image:: https://github.com/steinwurf/pytest-dummynet/actions/workflows/flake.yml/badge.svg\n    :target: https://github.com/steinwurf/pytest-dummynet/actions/workflows/flake.yml\n\n.. |Black| image:: https://github.com/steinwurf/pytest-dummynet/actions/workflows/black.yml/badge.svg\n      :target: https://github.com/steinwurf/pytest-dummynet/actions/workflows/black.yml\n\n.. |Pip Install| image:: https://github.com/steinwurf/pytest-dummynet/actions/workflows/pip.yml/badge.svg\n      :target: https://github.com/steinwurf/pytest-dummynet/actions/workflows/pip.yml\n\n\npytest-dummynet provides a py.test fixture for working with dummy-networks\nin pytest on Linux machines. By dummy-networks we refer to setups with network\nnamespaces, virtual ethernets, etc.\n\nThe DummyNet class is a python wrapper for the linux 'ip netns' and 'ip link'\ntools. The methods of the class parse args directly to the command-line in your\nlinux OS.\n\nSo far, Ubuntu and Debian are supported, but please make sure, that you\nhave the iproute2 linux-package installed with::\n\n    apt-get install iproute2\n\nOther Linux operating systems have not been tested, but feel free to open an\nissue if support is needed.\n\n.. contents:: Table of Contents:\n   :local:\n\nInstallation\n============\n\nTo install pytest-dummynet::\n\n    pip install pytest-dummynet\n\nUsage\n=====\n\nTo make it easy to use in with `pytest` the DummyNet object can be\ninjected into a test function by using the dummynet fixture.\n\nExample::\n\n    def test_run_fail(dummynet):\n\n        with dummynet.host() as shell:\n\n            demo0 = shell.netns_add(name=\"namespace1\")\n            demo1 = shell.netns_add(name=\"namespace2\")\n\n            shell.link_veth_add(p1_name=\"peer1\", p2_name=\"peer2\")\n\nThe ``dummynet`` argument is an instance of the DummyNet class.\n\nFor a complete example of a local network setup see the test in\n'test/test_dummynet.py'.\n\nYou can try playing around with the class methods in dummynet.py and call the\ncommands in self.shell.run(cmd) from the command-line. This can give a better\nidea of the functionality.\n\n\nRelase new version\n==================\n\n1. Edit NEWS.rst and wscript (set correct VERSION)\n2. Run ::\n\n    ./waf upload\n\nSource code\n===========\n\nThe main functionality is found in ``src/dummy_net.py`` and the\ncorresponding unit test is in ``test/test_dummynet.py`` if you\nwant to play/modify/fix the code this would, in most cases, be the place\nto start.\n\nDeveloper Notes\n===============\n\nWe try to make our projects as independent as possible of a local system setup.\nFor example with our native code (C/C++) we compile as much as possible from\nsource, since this makes us independent of what is currently installed\n(libraries etc.) on a specific machine.\n\nTo \"fetch\" sources we use Waf (https://waf.io/) augmented with dependency\nresolution capabilities: https://github.com/steinwurf/waf\n\nThe goal is to enable a work-flow where running::\n\n    ./waf configure\n    ./waf build --run_tests\n\nConfigures, builds and runs any available tests for a given project, such that\nyou as a developer can start hacking at the code.\n\nFor Python project this is a bit unconventional, but we think it works well.\n\nTests\n=====\n\nThe tests will run automatically by passing ``--run_tests`` to waf::\n\n    ./waf --run_tests\n\nThis follows what seems to be \"best practice\" advise, namely to install the\npackage in editable mode in a virtualenv.\n\nNotes\n=====\n\n* Why use an ``src`` folder (https://hynek.me/articles/testing-packaging/).\n  tl;dr you should run your tests in the same environment as your users would\n  run your code. So by placing the source files in a non-importable folder you\n  avoid accidentally having access to resources not added to the Python\n  package your users will install...\n* Python packaging guide: https://packaging.python.org/distributing/\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/steinwurf/pytest-dummynet",
    "keywords": "pytest py.test testing unit tests plugin dummynet",
    "license": "BSD 3-clause \"New\" or \"Revised\" License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytest-dummynet",
    "package_url": "https://pypi.org/project/pytest-dummynet/",
    "platform": "",
    "project_url": "https://pypi.org/project/pytest-dummynet/",
    "project_urls": {
      "Homepage": "https://github.com/steinwurf/pytest-dummynet"
    },
    "release_url": "https://pypi.org/project/pytest-dummynet/2.1.0/",
    "requires_dist": [
      "pytest",
      "docker"
    ],
    "requires_python": "",
    "summary": "A py.test plugin providing access to a dummynet.",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12313079,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cddc942d87cf7d7c3ce4e3db83e4422d56938980eb020d61d73786557741acd7",
          "md5": "c9bfb5f8c7d611ee3f430494e4c8829a",
          "sha256": "26727942b2025cb2eaaad7ad08213cc1d8d8558dc29f514d5170cf5f880daa45"
        },
        "downloads": -1,
        "filename": "pytest_dummynet-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c9bfb5f8c7d611ee3f430494e4c8829a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7131,
        "upload_time": "2021-10-12T13:50:29",
        "upload_time_iso_8601": "2021-10-12T13:50:29.445546Z",
        "url": "https://files.pythonhosted.org/packages/cd/dc/942d87cf7d7c3ce4e3db83e4422d56938980eb020d61d73786557741acd7/pytest_dummynet-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0d07b303d284dbe02de4c71f08e39d3ba4b61be17271c3c64fe88070de70ccc",
          "md5": "3a84be41e889710efb0848b0491e17f3",
          "sha256": "b4c15c5dfabfbbeab447af52c504c549ad298ce88eddbdceee22c5047bb48a6c"
        },
        "downloads": -1,
        "filename": "pytest_dummynet-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a84be41e889710efb0848b0491e17f3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7334,
        "upload_time": "2021-10-13T07:49:17",
        "upload_time_iso_8601": "2021-10-13T07:49:17.955198Z",
        "url": "https://files.pythonhosted.org/packages/a0/d0/7b303d284dbe02de4c71f08e39d3ba4b61be17271c3c64fe88070de70ccc/pytest_dummynet-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48d5f5f3d9522b10bcbac4f83948d5b54ce531bd70de7069b446c6ec6e0375c9",
          "md5": "c3940876325d2c278e2734d03cf8ba09",
          "sha256": "11a510774d578646e1e4592faee98d48617789ec70c2cec31120f10f62a538bc"
        },
        "downloads": -1,
        "filename": "pytest_dummynet-1.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c3940876325d2c278e2734d03cf8ba09",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9411,
        "upload_time": "2021-12-10T14:05:39",
        "upload_time_iso_8601": "2021-12-10T14:05:39.682145Z",
        "url": "https://files.pythonhosted.org/packages/48/d5/f5f3d9522b10bcbac4f83948d5b54ce531bd70de7069b446c6ec6e0375c9/pytest_dummynet-1.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "234988f5b777e1b87c52ec5995b37b247c164aa418264d773a8bed989d19a3eb",
          "md5": "a68cf9b2220ccd06fa64693261417085",
          "sha256": "1219348a65a6457fea8f9447c19e2811b568f58f7fccb02ca1b6bf7e8838df93"
        },
        "downloads": -1,
        "filename": "pytest_dummynet-2.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a68cf9b2220ccd06fa64693261417085",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9936,
        "upload_time": "2021-12-15T12:36:18",
        "upload_time_iso_8601": "2021-12-15T12:36:18.671877Z",
        "url": "https://files.pythonhosted.org/packages/23/49/88f5b777e1b87c52ec5995b37b247c164aa418264d773a8bed989d19a3eb/pytest_dummynet-2.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d84589d24b2a350cd39e43306435fb424c605bee3ca67b73b83c02e94fa9367c",
          "md5": "44e06600f1b89c6d6ebe7ea188dea868",
          "sha256": "1447a2029496ff99c0e3c3eec9da4077908b1aa3e6377e855cefd9a155680dad"
        },
        "downloads": -1,
        "filename": "pytest_dummynet-2.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "44e06600f1b89c6d6ebe7ea188dea868",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9928,
        "upload_time": "2021-12-15T13:25:20",
        "upload_time_iso_8601": "2021-12-15T13:25:20.444473Z",
        "url": "https://files.pythonhosted.org/packages/d8/45/89d24b2a350cd39e43306435fb424c605bee3ca67b73b83c02e94fa9367c/pytest_dummynet-2.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d84589d24b2a350cd39e43306435fb424c605bee3ca67b73b83c02e94fa9367c",
        "md5": "44e06600f1b89c6d6ebe7ea188dea868",
        "sha256": "1447a2029496ff99c0e3c3eec9da4077908b1aa3e6377e855cefd9a155680dad"
      },
      "downloads": -1,
      "filename": "pytest_dummynet-2.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "44e06600f1b89c6d6ebe7ea188dea868",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 9928,
      "upload_time": "2021-12-15T13:25:20",
      "upload_time_iso_8601": "2021-12-15T13:25:20.444473Z",
      "url": "https://files.pythonhosted.org/packages/d8/45/89d24b2a350cd39e43306435fb424c605bee3ca67b73b83c02e94fa9367c/pytest_dummynet-2.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}