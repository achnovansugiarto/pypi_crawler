{
  "info": {
    "author": "Johannes Fischer",
    "author_email": "<aulasparticularesdealemaosp@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Text Editors :: Text Processing",
      "Topic :: Text Processing :: Filters",
      "Topic :: Text Processing :: General",
      "Topic :: Text Processing :: Indexing",
      "Topic :: Utilities"
    ],
    "description": "\n### Tired of vectorization, df.apply and df.map? How about an old school inplace-for-loop? :)\n\n\n\n#### Usage - DataFrame\n\n\n\n```python\n\npip install \n\n```\n\n\n\n```python\n\n    from a_pandas_ex_old_school_for_loop import pd_add_old_school_for_loop\n\n    pd_add_old_school_for_loop()\n\n    import pandas as pd\n\n    df = pd.read_csv(\"https://raw.githubusercontent.com/pandas-dev/pandas/main/doc/data/titanic.csv\")\n\n\n\n    df\n\n    Out[3]:\n\n         PassengerId  Survived  Pclass  ...     Fare Cabin  Embarked\n\n    0              1         0       3  ...   7.2500   NaN         S\n\n    1              2         1       1  ...  71.2833   C85         C\n\n    2              3         1       3  ...   7.9250   NaN         S\n\n    3              4         1       1  ...  53.1000  C123         S\n\n    4              5         0       3  ...   8.0500   NaN         S\n\n    ..           ...       ...     ...  ...      ...   ...       ...\n\n    886          887         0       2  ...  13.0000   NaN         S\n\n    887          888         1       1  ...  30.0000   B42         S\n\n    888          889         0       3  ...  23.4500   NaN         S\n\n    889          890         1       1  ...  30.0000  C148         C\n\n    890          891         0       3  ...   7.7500   NaN         Q\n\n    [891 rows x 12 columns]\n\n\n\n\n\n    for item in df.ds_set_values_with_loop():\n\n        try:\n\n            if item['get_value']() > 2:\n\n                item['set_value'](10000000)\n\n        except Exception:\n\n            continue\n\n\n\n\n\n    df\n\n    Out[5]:\n\n         PassengerId  Survived    Pclass  ...        Fare Cabin  Embarked\n\n    0              1         0  10000000  ...  10000000.0   NaN         S\n\n    1              2         1         1  ...  10000000.0   C85         C\n\n    2       10000000         1  10000000  ...  10000000.0   NaN         S\n\n    3       10000000         1         1  ...  10000000.0  C123         S\n\n    4       10000000         0  10000000  ...  10000000.0   NaN         S\n\n    ..           ...       ...       ...  ...         ...   ...       ...\n\n    886     10000000         0         2  ...  10000000.0   NaN         S\n\n    887     10000000         1         1  ...  10000000.0   B42         S\n\n    888     10000000         0  10000000  ...  10000000.0   NaN         S\n\n    889     10000000         1         1  ...  10000000.0  C148         C\n\n    890     10000000         0  10000000  ...  10000000.0   NaN         Q\n\n    [891 rows x 12 columns]\n\n```\n\n\n\n#### Usage - Series in a DataFrame\n\n\n\n```python\n\n    from a_pandas_ex_old_school_for_loop import pd_add_old_school_for_loop\n\n    pd_add_old_school_for_loop()\n\n    import pandas as pd\n\n    df = pd.read_csv(\"https://raw.githubusercontent.com/pandas-dev/pandas/main/doc/data/titanic.csv\")\n\n\n\n    df\n\n    Out[3]:\n\n         PassengerId  Survived  Pclass  ...     Fare Cabin  Embarked\n\n    0              1         0       3  ...   7.2500   NaN         S\n\n    1              2         1       1  ...  71.2833   C85         C\n\n    2              3         1       3  ...   7.9250   NaN         S\n\n    3              4         1       1  ...  53.1000  C123         S\n\n    4              5         0       3  ...   8.0500   NaN         S\n\n    ..           ...       ...     ...  ...      ...   ...       ...\n\n    886          887         0       2  ...  13.0000   NaN         S\n\n    887          888         1       1  ...  30.0000   B42         S\n\n    888          889         0       3  ...  23.4500   NaN         S\n\n    889          890         1       1  ...  30.0000  C148         C\n\n    890          891         0       3  ...   7.7500   NaN         Q\n\n    [891 rows x 12 columns]\n\n\n\n\n\n    for item in df.PassengerId.ds_set_values_with_loop():\n\n        try:\n\n            if item['get_value']() > 2:\n\n                item['set_value'](10000000)\n\n        except Exception:\n\n            continue\n\n\n\n    df\n\n    Out[3]:\n\n         PassengerId  Survived  Pclass  ...     Fare Cabin  Embarked\n\n    0              1         0       3  ...   7.2500   NaN         S\n\n    1              2         1       1  ...  71.2833   C85         C\n\n    2       10000000         1       3  ...   7.9250   NaN         S\n\n    3       10000000         1       1  ...  53.1000  C123         S\n\n    4       10000000         0       3  ...   8.0500   NaN         S\n\n    ..           ...       ...     ...  ...      ...   ...       ...\n\n    886     10000000         0       2  ...  13.0000   NaN         S\n\n    887     10000000         1       1  ...  30.0000   B42         S\n\n    888     10000000         0       3  ...  23.4500   NaN         S\n\n    889     10000000         1       1  ...  30.0000  C148         C\n\n    890     10000000         0       3  ...   7.7500   NaN         Q\n\n    [891 rows x 12 columns]\n\n```\n\n\n\n#### Update lists and dicts inside cells\n\n\n\n```python\n\nfrom a_pandas_ex_old_school_for_loop import pd_add_old_school_for_loop\n\nfrom random import randrange\n\npd_add_old_school_for_loop()\n\nimport pandas as pd\n\ndf = pd.read_csv(\"https://raw.githubusercontent.com/pandas-dev/pandas/main/doc/data/titanic.csv\")\n\ngetrandomlist = lambda x: [\n\n    [[randrange(1, 100), randrange(1, 100)] * 1] * randrange(1, 10)\n\n]\n\ndf[\"listtest\"] = df.PassengerId.map(getrandomlist)\n\ndf\n\nOut[4]: \n\n     PassengerId  ...                                           listtest\n\n0              1  ...         [[[88, 15], [88, 15], [88, 15], [88, 15]]]\n\n1              2  ...  [[[15, 63], [15, 63], [15, 63], [15, 63], [15,...\n\n2              3  ...             [[[46, 9], [46, 9], [46, 9], [46, 9]]]\n\n3              4  ...         [[[71, 12], [71, 12], [71, 12], [71, 12]]]\n\n4              5  ...  [[[55, 44], [55, 44], [55, 44], [55, 44], [55,...\n\n..           ...  ...                                                ...\n\n886          887  ...  [[[81, 15], [81, 15], [81, 15], [81, 15], [81,...\n\n887          888  ...                                       [[[18, 70]]]\n\n888          889  ...                                       [[[16, 35]]]\n\n889          890  ...  [[[48, 54], [48, 54], [48, 54], [48, 54], [48,...\n\n890          891  ...  [[[11, 99], [11, 99], [11, 99], [11, 99], [11,...   \n\n\n\n\n\nfor item in df.listtest.ds_set_values_with_loop():\n\n    try:\n\n        if item['get_value']() > 15:\n\n            item['set_value'](15000000)\n\n    except Exception:\n\n        continue     \n\n\n\n\n\ndf\n\nOut[6]: \n\n     PassengerId  ...                                           listtest\n\n0              1  ...  [[[15000000, 15], [15000000, 15], [15000000, 1...\n\n1              2  ...  [[[15, 15000000], [15, 15000000], [15, 1500000...\n\n2              3  ...  [[[15000000, 9], [15000000, 9], [15000000, 9],...\n\n3              4  ...  [[[15000000, 12], [15000000, 12], [15000000, 1...\n\n4              5  ...  [[[15000000, 15000000], [15000000, 15000000], ...\n\n..           ...  ...                                                ...\n\n886          887  ...  [[[15000000, 15], [15000000, 15], [15000000, 1...\n\n887          888  ...                           [[[15000000, 15000000]]]\n\n888          889  ...                           [[[15000000, 15000000]]]\n\n889          890  ...  [[[15000000, 15000000], [15000000, 15000000], ...\n\n890          891  ...  [[[11, 15000000], [11, 15000000], [11, 1500000...\n\n[891 rows x 13 columns]\n\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hansalemaos/a_pandas_ex_old_school_for_loop",
    "keywords": "list,dict,python,nested,pandas,DataFrame,Series",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "a-pandas-ex-old-school-for-loop",
    "package_url": "https://pypi.org/project/a-pandas-ex-old-school-for-loop/",
    "platform": null,
    "project_url": "https://pypi.org/project/a-pandas-ex-old-school-for-loop/",
    "project_urls": {
      "Homepage": "https://github.com/hansalemaos/a_pandas_ex_old_school_for_loop"
    },
    "release_url": "https://pypi.org/project/a-pandas-ex-old-school-for-loop/0.1/",
    "requires_dist": [
      "flatten-any-dict-iterable-or-whatsoever",
      "nestednop",
      "pandas",
      "useful-functions-easier-life"
    ],
    "requires_python": "",
    "summary": "How about an old school inplace-for-loop for Pandas DataFrames? :)",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15397535,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2915b73e01515dc3bc13459993ac1770aecf0f8a60f37f841818cd3eee534fd5",
          "md5": "5491f0d4cac7be336cb00c1cc9e0419c",
          "sha256": "503b91184050249c9ab92a201d4c0ae1e777e2f10e9ba7899ac4319b25d60c0b"
        },
        "downloads": -1,
        "filename": "a_pandas_ex_old_school_for_loop-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5491f0d4cac7be336cb00c1cc9e0419c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7943,
        "upload_time": "2022-10-13T10:49:40",
        "upload_time_iso_8601": "2022-10-13T10:49:40.831209Z",
        "url": "https://files.pythonhosted.org/packages/29/15/b73e01515dc3bc13459993ac1770aecf0f8a60f37f841818cd3eee534fd5/a_pandas_ex_old_school_for_loop-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0014f1374dcb15db0fa7cf579c11d361365924ce2dbd97625837e9752758bbab",
          "md5": "52c20b569dec57275cb93a6c0a034014",
          "sha256": "a23e373e16ed1c16128fb51e4b6308a69342726b65ff0f91fa9992bbcce740fe"
        },
        "downloads": -1,
        "filename": "a_pandas_ex_old_school_for_loop-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "52c20b569dec57275cb93a6c0a034014",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6021,
        "upload_time": "2022-10-13T10:49:42",
        "upload_time_iso_8601": "2022-10-13T10:49:42.747452Z",
        "url": "https://files.pythonhosted.org/packages/00/14/f1374dcb15db0fa7cf579c11d361365924ce2dbd97625837e9752758bbab/a_pandas_ex_old_school_for_loop-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2915b73e01515dc3bc13459993ac1770aecf0f8a60f37f841818cd3eee534fd5",
        "md5": "5491f0d4cac7be336cb00c1cc9e0419c",
        "sha256": "503b91184050249c9ab92a201d4c0ae1e777e2f10e9ba7899ac4319b25d60c0b"
      },
      "downloads": -1,
      "filename": "a_pandas_ex_old_school_for_loop-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5491f0d4cac7be336cb00c1cc9e0419c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7943,
      "upload_time": "2022-10-13T10:49:40",
      "upload_time_iso_8601": "2022-10-13T10:49:40.831209Z",
      "url": "https://files.pythonhosted.org/packages/29/15/b73e01515dc3bc13459993ac1770aecf0f8a60f37f841818cd3eee534fd5/a_pandas_ex_old_school_for_loop-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0014f1374dcb15db0fa7cf579c11d361365924ce2dbd97625837e9752758bbab",
        "md5": "52c20b569dec57275cb93a6c0a034014",
        "sha256": "a23e373e16ed1c16128fb51e4b6308a69342726b65ff0f91fa9992bbcce740fe"
      },
      "downloads": -1,
      "filename": "a_pandas_ex_old_school_for_loop-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "52c20b569dec57275cb93a6c0a034014",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6021,
      "upload_time": "2022-10-13T10:49:42",
      "upload_time_iso_8601": "2022-10-13T10:49:42.747452Z",
      "url": "https://files.pythonhosted.org/packages/00/14/f1374dcb15db0fa7cf579c11d361365924ce2dbd97625837e9752758bbab/a_pandas_ex_old_school_for_loop-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}