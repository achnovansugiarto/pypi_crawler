{
  "info": {
    "author": "Fauna, Inc",
    "author_email": "priority@fauna.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9",
      "Topic :: Database",
      "Topic :: Database :: Front-Ends"
    ],
    "description": "Fauna Python\n==============\n\n.. image:: https://img.shields.io/pypi/v/fauna.svg?maxAge=21600\n  :target: https://pypi.python.org/pypi/fauna\n.. image:: https://img.shields.io/badge/license-MPL_2.0-blue.svg?maxAge=2592000\n  :target: https://raw.githubusercontent.com/fauna/fauna-python/main/LICENSE\n\nPython driver for `Fauna <https://fauna.com>`_.\n\n.. warning::\n    This driver is in beta release and not recommended for production use.\n    It operates with the Fauna database service via an API which is also in\n    beta release and is not recommended for production use. This driver is\n    not compatible with v4 or earlier versions of Fauna. If you would like\n    to participate in the private beta program contact product@fauna.com.\n    \n\nInstallation\n------------\n\n.. code-block:: bash\n\n    pip install fauna\n\n\nCompatibility\n-------------\n\nThe following versions of Python are supported:\n\n* Python 3.9\n* Python 3.10\n* Python 3.11\n\n\nBasic Usage\n-------------\nYou can expect a ``Client`` instance to have reasonable defaults, like the Fauna endpoint ``https://db.fauna.com`` and a global HTTP client, but you will always need to configure a secret.\n\nYou can configure your secret by passing it directly to the client or by setting an environment variable.\n\nSupported Environment Variables:\n\n* ``FAUNA_ENDPOINT``: The Fauna endpoint to use. For example, ``http://localhost:8443``\n* ``FAUNA_SECRET``: The Fauna secret to use.\n\n.. code-block:: python\n\n    from fauna import fql\n    from fauna.client import Client, QuerySuccess\n    from fauna.errors import FaunaException\n\n    client = Client()\n    # The client defaults to using using the value stored FAUNA_SECRET for its secret.\n    # Either set the FAUNA_SECRET env variable or retrieve it from a secret store.\n    # As a best practice, don't store your secret directly in your code.\n\n    try:\n        # create a collection\n        create_col = fql('Collection.create({ name: \"Dogs\" })')\n        client.query(create_col)\n\n        # create a document\n        create_doc = fql('Dogs.create({ name: \"Scout\" })')\n        res: QuerySuccess = client.query(create_doc)\n        doc = res.data\n        print(doc)\n    except FaunaException as e:\n        # handle errors\n        print(e)\n\nQuery Composition\n-----------------\n\nThis driver supports query composition with Python primitives, lists, dicts, and other FQL queries. Serialization to and from user-defined classes is not yet supportedâ€”for now, adapt your classes into a dict or list prior to using it in composition.\n\nFor FQL templates, denote variables with ``${}`` and pass variables as kwargs to ``fql()``. You can escape a variable by prepending an additional ``$``.\n\n.. code-block:: python\n\n    from fauna import fql\n    from fauna.client import Client\n\n    def user_by_tin(tin: str):\n        return fql('Users.byTin(${tin})', tin=tin)\n\n    def render_user():\n        return fql('{ name, address }')\n\n    tin = \"123\"\n    q = fql(\"\"\"let u = ${user}\n    u ${render}\n    \"\"\", user=user_by_tin(tin), render=render_user())\n\n    client = Client()\n    res = client.query(q)\n\nDocument Streaming\n------------------\n\nNot implemented\n\nQuery Stats\n------------------\n\nStats are returned on query responses and ServiceErrors.\n\n.. code-block:: python\n\n    from fauna import fql\n    from fauna.client import Client, QuerySuccess, QueryStats\n    from fauna.errors import AuthenticationError, ServiceError\n\n    client = Client()\n\n    def emit_stats(stats: QueryStats):\n        print(f\"Compute Ops: {stats.compute_ops}\")\n        print(f\"Read Ops: {stats.read_ops}\")\n        print(f\"Write Ops: {stats.write_ops}\")\n\n    try:\n        q = fql('Collection.create({ name: \"Dogs\" })')\n        qs: QuerySuccess = client.query(q)\n        emit_stats(qs.stats)\n    except AuthenticationError as e:\n        print(e)\n    except ServiceError as e:\n        if e.query_info is not None:\n            emit_stats(e.query_info.stats)\n        # more error handling...\n\n\nSetup\n-----\n\n.. code-block:: bash\n\n    $ virtualenv venv\n    $ source venv/bin/activate\n    $ pip install . .[test] .[lint]\n\n\nTesting\n-------\n\nWe use pytest. You can run tests directly or with docker. If you run integration tests directly, you must have fauna running locally.\n\nIf you want to run fauna, then run integration tests separately:\n\n.. code-block:: bash\n\n    $ make docker-fauna\n    $ source venv/bin/activate\n    $ make install\n    $ make integration-test\n\nTo run unit tests locally:\n\n.. code-block:: bash\n\n    $ source venv/bin/activate\n    $ make install\n    $ make unit-test\n\nTo stand up a container and run all tests at the same time:\n\n.. code-block:: bash\n\n    $ make docker-test\n\nSee the ``Makefile`` for more.\n\nCoverage\n--------\n\n.. code-block:: bash\n\n    $ source venv/bin/activate\n    $ make coverage\n\nContribute\n----------\n\nGitHub pull requests are very welcome.\n\n\nLicense\n-------\n\nCopyright 2023 `Fauna, Inc. <https://fauna.com>`_\n\nLicensed under the Mozilla Public License, Version 2.0 (the\n\"License\"); you may not use this software except in compliance with\nthe License. You can obtain a copy of the License at\n\n`http://mozilla.org/MPL/2.0/ <http://mozilla.org/MPL/2.0/>`_\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied. See the License for the specific language governing\npermissions and limitations under the License.\n\n\n.. _`tests`: https://github.com/fauna/fauna-python/blob/main/tests/\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fauna/fauna-python",
    "keywords": "faunadb fauna",
    "license": "MPL 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fauna",
    "package_url": "https://pypi.org/project/fauna/",
    "platform": null,
    "project_url": "https://pypi.org/project/fauna/",
    "project_urls": {
      "Homepage": "https://github.com/fauna/fauna-python"
    },
    "release_url": "https://pypi.org/project/fauna/0.3.0/",
    "requires_dist": [
      "iso8601",
      "future",
      "httpx[http2]",
      "yapf ; extra == 'lint'",
      "pytest ; extra == 'test'",
      "pytest-env ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "pytest-httpx ; extra == 'test'",
      "pytest-subtests ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Fauna Python driver for FQL 10+",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17517556,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5618179d5ddcc4246581502cd4775d0d8401ec0731adb53a9c5b922484ebb9b4",
          "md5": "7ed179214e8d3cf74393971900613760",
          "sha256": "47a4099506ca980445ab1c2aa2cdfd6c167e066a138be5dcdd8776fbf8b85a53"
        },
        "downloads": -1,
        "filename": "fauna-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ed179214e8d3cf74393971900613760",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 23334,
        "upload_time": "2023-03-22T18:32:17",
        "upload_time_iso_8601": "2023-03-22T18:32:17.308017Z",
        "url": "https://files.pythonhosted.org/packages/56/18/179d5ddcc4246581502cd4775d0d8401ec0731adb53a9c5b922484ebb9b4/fauna-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02b949382a61102693949e5b5e6c0e80884d86cc3a3326cc12320e8cf7e55695",
          "md5": "c2da220ba949069353557f48c7ac1960",
          "sha256": "cd29ef1007f42f95ee43c435055bd69f1d2d830ad3106b91d15f76a43bd8cf5d"
        },
        "downloads": -1,
        "filename": "fauna-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c2da220ba949069353557f48c7ac1960",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 24472,
        "upload_time": "2023-03-27T15:22:32",
        "upload_time_iso_8601": "2023-03-27T15:22:32.389909Z",
        "url": "https://files.pythonhosted.org/packages/02/b9/49382a61102693949e5b5e6c0e80884d86cc3a3326cc12320e8cf7e55695/fauna-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd6f0d0e1be302f700264216811c3bc668d5198b32926f78e2457e26e6097701",
          "md5": "94f275a0ce1d980344d13ee3957b401b",
          "sha256": "761c98960a947c00053ed929a2dd8e30537b07a79bc446c91775836edbbe7c0e"
        },
        "downloads": -1,
        "filename": "fauna-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94f275a0ce1d980344d13ee3957b401b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 24492,
        "upload_time": "2023-03-30T23:25:26",
        "upload_time_iso_8601": "2023-03-30T23:25:26.161510Z",
        "url": "https://files.pythonhosted.org/packages/fd/6f/0d0e1be302f700264216811c3bc668d5198b32926f78e2457e26e6097701/fauna-0.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd6f0d0e1be302f700264216811c3bc668d5198b32926f78e2457e26e6097701",
        "md5": "94f275a0ce1d980344d13ee3957b401b",
        "sha256": "761c98960a947c00053ed929a2dd8e30537b07a79bc446c91775836edbbe7c0e"
      },
      "downloads": -1,
      "filename": "fauna-0.3.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "94f275a0ce1d980344d13ee3957b401b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 24492,
      "upload_time": "2023-03-30T23:25:26",
      "upload_time_iso_8601": "2023-03-30T23:25:26.161510Z",
      "url": "https://files.pythonhosted.org/packages/fd/6f/0d0e1be302f700264216811c3bc668d5198b32926f78e2457e26e6097701/fauna-0.3.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}