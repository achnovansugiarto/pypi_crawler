{
  "info": {
    "author": "['Antoine Daurat <antoine@autoretouch.com>', 'Oliver Allweyer <oliver@autoretouch.com>', 'Till Lorentzen <till@autoretouch.com>']",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# autoRetouch client\n\n## Installation\n\nPrerequisites: Sign up for free at https://app.autoretouch.com.\n\n### from pypi\n\n```python\npip install autoretouch\n```\n\n### for development\n\nclone this repo and then\n```\npip install -e .\n```\n\n## CLI\n\nCLI for interacting with [autoretouch: the ai-powered image editing platform](https://app.autoretouch.com).\n\nProcess images straight from your terminal.\n\n### Features \n\n* auto-completion for bash, zsh\n\n### Usage\n```\nUsage: autoretouch [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  -h, --help  Show this message and exit.\n\nCommands:\n  balance        show your organization's current balance\n  config         configure/show which organization and workflow are used by default\n    get          show the organization and workflow that are currently used by default\n    set          configure the organization and/or workflow that are used by default\n  login          authenticate with your autoretouch account\n  logout         revoke and remove stored refresh token from disk\n  organization   show details of given organization\n  organizations  list all your organizations\n  process        process an image or a folder of images and wait for the result\n  upload         upload an image from disk\n  workflows      show workflows\n```\n\n\n## python client\n\nWork in Progress Python client implementation for the most important public API endpoints for https://www.autoretouch.com.\n\nAPI documentation: https://docs.api.autoretouch.com\n\n\n### Usage\n\nThis package exposes a single class `AutoretouchClient` allowing high- and low-level interactions with the autoRetouch API.\n\n#### High-level\n\n##### Batch \n\nIn most cases, you would like to process images according to some workflow within the scope of an organization.\nTo do so, you can simply\n\n```python3\nfrom autoretouch.api_client.client import AutoRetouchAPIClient\n\norganization_id = \"e722e62e-5b2e-48e1-8638-25890e7279e3\"\n\nar_client = AutoRetouchAPIClient(\n    organization_id=organization_id,\n    # by default the client saves and reloads your credentials here:\n    credentials_path=\"~/.config/autoretouch-credentials.json\"\n)\n\nworkflow_id = \"26740cd0-3a04-4329-8ba2-e0d6de5a4aaf\"\ninput_dir = \"images_to_retouch/\"\noutput_dir = \"retouched_images/\"\n\n# starts a thread for each image and download the results to output_dir\nar_client.process_batch(workflow_id, input_dir, output_dir)\n```\n---\n**Note**\n\n- Get your `organization_id` from https://app.autoretouch.com/organization > Copy Organization ID.\n- Get your `workflow_id` from https://app.autoretouch.com/workflows > `â‹®` > Workflow API Information > id.\n---\n\n##### Single Image\n\nIf you wish to process a single image with a workflow, you can do\n\n```python\nar_client.process_image(\"my_image.png\", workflow_id, output_dir)\n```\n\nThis is the method called internally by `proces_batch`. It will \n1. upload the image\n2. start an execution\n3. poll every 2 seconds for the status of the execution\n4. download the result to `output_dir` or return `False` if the execution failed \n\nThis is the recommended way to efficiently process images through our asynchronous api.  \n\n##### Authentication\n\nThe `AutoRetouchAPIClient` authenticates itself with the [device flow](https://auth0.com/docs/get-started/authentication-and-authorization-flow/device-authorization-flow) of `auth0`.\nUpon instantiation of the client, you can configure\n- whether credentials should be persisted or not through `save_credentials=`\n- where credentials should be persisted/loaded from through `credentials_path=`\n\nIf you don't pass a `credentials_path`, the client will first check if you passed a `refresh_token` with which it can obtain credentials.\n\nIf this argument is also `None`, the client will trigger a device flow from the top.\nIt will open a window in your browser asking you to confirm a device code.\nThe client will be authenticated once you confirmed.\n\nBy default, `credentials_path` and `refresh_token` are `None` but `save_credentials=True`.\nThe first time you use the client, this triggers the device flow and saves the obtained credentials to `~/.config/autoretouch-credentials.json`.\nAfter that, it automatically falls back to this path and authenticates itself without you having to do anything :wink:\n\n\n#### Low-level Endpoints\n\nfor finer interactions with the API, the client exposes methods corresponding to endpoints.\n\nTODO: table with `method name & signature | api docs link`\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "BSD Zero",
    "maintainer": "",
    "maintainer_email": "",
    "name": "autoretouch",
    "package_url": "https://pypi.org/project/autoretouch/",
    "platform": null,
    "project_url": "https://pypi.org/project/autoretouch/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/autoretouch/0.0.2/",
    "requires_dist": [
      "requests",
      "click (==8.1.3)",
      "click-log (==0.4.0)"
    ],
    "requires_python": "",
    "summary": "cli and python package to communicate with the autoRetouch API",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13898694,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ed71dc976364a91e824ffe459d2753efe1b27bdaa0a7750f6ff3c187af204b4",
          "md5": "09b2c66b31e1637648d77533bbd98eaf",
          "sha256": "cf21ef0fc134117dc3d6f60956b533b22395e99b9428ee8d93f25667438984cf"
        },
        "downloads": -1,
        "filename": "autoretouch-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "09b2c66b31e1637648d77533bbd98eaf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14262,
        "upload_time": "2022-05-20T09:32:16",
        "upload_time_iso_8601": "2022-05-20T09:32:16.857312Z",
        "url": "https://files.pythonhosted.org/packages/9e/d7/1dc976364a91e824ffe459d2753efe1b27bdaa0a7750f6ff3c187af204b4/autoretouch-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1920ee3384f0f3654b62d0411312a73b3376952e476811fa0c0c3b8321d617d3",
          "md5": "3f882a0a99f9cbc0d718b3ee4faa714b",
          "sha256": "2fda15a90de4374a99b9f7d6eeeb9d0d0fb121579cc4259b71862d42b34cc16d"
        },
        "downloads": -1,
        "filename": "autoretouch-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3f882a0a99f9cbc0d718b3ee4faa714b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16091,
        "upload_time": "2022-05-20T09:32:18",
        "upload_time_iso_8601": "2022-05-20T09:32:18.689707Z",
        "url": "https://files.pythonhosted.org/packages/19/20/ee3384f0f3654b62d0411312a73b3376952e476811fa0c0c3b8321d617d3/autoretouch-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cd11c3cc6acc94221bdd039162c3a1b67c4cdb01f61e8674ff27bf199a6824b",
          "md5": "122ed64b1108ec22f2112e72f44cfa1d",
          "sha256": "6de2745c1f4f30dd357183031624a1306256d0cd67c0f4bcaeb78891d44225af"
        },
        "downloads": -1,
        "filename": "autoretouch-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "122ed64b1108ec22f2112e72f44cfa1d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14836,
        "upload_time": "2022-05-23T07:38:02",
        "upload_time_iso_8601": "2022-05-23T07:38:02.621227Z",
        "url": "https://files.pythonhosted.org/packages/2c/d1/1c3cc6acc94221bdd039162c3a1b67c4cdb01f61e8674ff27bf199a6824b/autoretouch-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e21a9a40921959a585436f55402a2366228a5d4487025c46dee65f7cf1a1fb32",
          "md5": "5c08142636e8c353b425768a1b8c7e3a",
          "sha256": "0b75e82ecaddaade30e0707a403fd5e182116cdafdf767ea9ae93a042332bf99"
        },
        "downloads": -1,
        "filename": "autoretouch-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5c08142636e8c353b425768a1b8c7e3a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16664,
        "upload_time": "2022-05-23T07:38:04",
        "upload_time_iso_8601": "2022-05-23T07:38:04.089838Z",
        "url": "https://files.pythonhosted.org/packages/e2/1a/9a40921959a585436f55402a2366228a5d4487025c46dee65f7cf1a1fb32/autoretouch-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2cd11c3cc6acc94221bdd039162c3a1b67c4cdb01f61e8674ff27bf199a6824b",
        "md5": "122ed64b1108ec22f2112e72f44cfa1d",
        "sha256": "6de2745c1f4f30dd357183031624a1306256d0cd67c0f4bcaeb78891d44225af"
      },
      "downloads": -1,
      "filename": "autoretouch-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "122ed64b1108ec22f2112e72f44cfa1d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14836,
      "upload_time": "2022-05-23T07:38:02",
      "upload_time_iso_8601": "2022-05-23T07:38:02.621227Z",
      "url": "https://files.pythonhosted.org/packages/2c/d1/1c3cc6acc94221bdd039162c3a1b67c4cdb01f61e8674ff27bf199a6824b/autoretouch-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e21a9a40921959a585436f55402a2366228a5d4487025c46dee65f7cf1a1fb32",
        "md5": "5c08142636e8c353b425768a1b8c7e3a",
        "sha256": "0b75e82ecaddaade30e0707a403fd5e182116cdafdf767ea9ae93a042332bf99"
      },
      "downloads": -1,
      "filename": "autoretouch-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "5c08142636e8c353b425768a1b8c7e3a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16664,
      "upload_time": "2022-05-23T07:38:04",
      "upload_time_iso_8601": "2022-05-23T07:38:04.089838Z",
      "url": "https://files.pythonhosted.org/packages/e2/1a/9a40921959a585436f55402a2366228a5d4487025c46dee65f7cf1a1fb32/autoretouch-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}