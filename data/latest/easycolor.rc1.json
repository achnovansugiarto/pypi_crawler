{
  "info": {
    "author": "George T. Gougoudis",
    "author_email": "george_gougoudis@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.3",
      "Programming Language :: Python :: 2.4",
      "Programming Language :: Python :: 2.5",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.1",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Terminals"
    ],
    "description": "Python Easy Color\n======================\nColor output in python2/3 made easy!\n\nDescription\n===========\n\nMake python color ouput easy in UNIX terminals\nthat support ANSI sequences.\n\nInstallation\n============\n``pip install easycolor``\n\nDocumentation\n=============\n\nCheck the documentation at: (http://easycolor.readthedocs.io/en/latest/)\nalso available at: (https://georgetg.github.io/easycolor/)\n\nSource Code\n===========\n\nCheck at github: (https://github.com/GeorgeTG/easycolor)\n\nLicense\n=======\n\nCopyright George T. Gougoudis 2016. BSD 3-Clause license; see LICENSE file.\n\n\nBasic usage\n===========\n\nTo wrap text, the wrap function must be imported.\n\n.. code-block:: python\n\n    from easycolor.style import wrap as _w\n\nThe text is then wrapped as easy as\n\n.. code-block:: python\n\n    # wrap text, appends a style-reset\n    print(_w('yellow on red', fg='yellow', bg='red'))\n    print('normal text')\n\nTo compile a style, the make_style function is used:\n\n.. code-block:: python\n\n    from easycolor.style import make_style, RESET\n\nExample:\n\n.. code-block:: python\n\n    # define some styles\n    black_on_white = make_style(fg='black', bg='white')\n    # we have to reset the background here\n    red_bold = make_style(fg='red', bg='reset', opt='bold')\n    # An options reset is only possible with a total reset\n    # we can however negate an option to remove it('!option').\n    green_bold_underline = make_style(fg='green', opt=('!bold', 'underline'))\n\n    print(black_on_white + 'Black on white' + red_bold + 'Red bold' +\n          green_bold_underline + 'Green not bold underline' + RESET)\n    \n**Note**: For advanced formatting use the easycolor.parser module.\n\n\nAdvanced usage\n==============\n\nFirst obtain an instance\n\n.. code-block:: python\n   \n    from easycolor.parser import ColorParser\n    parser = ColorParser()\n\nThen for printing\n\n.. code-block:: python\n\n    cprint = parser.cprint\n    # Add rainbow colors!\n    cprint(\"\"\"<f:red>r<f:yellow>ai<f:green>nb<f:blue>o<f:magenta>w\"\"\"\n           \"\"\"</f>o</f>bn</f>ia</f>r</f>\"\"\")\n    # complex foreground - background\n    cprint(\"\"\"<f:red,b:yellow>red on yellow</b>just red<b:black>red on black!\"\"\"\n           \"\"\"<f:green>green on black</f>again red on black</f,b>normal\"\"\")\n\nParse a format string for a colored logger, for later use\n\n.. code-block:: python\n    \n    INFO = parser.parse(\"[<f:cyan>INFO</f>] <o:bold>{}\")\n    print(INFO.format('Some info..'))",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GeorgeTG/easycolor",
    "keywords": "color colour terminal text ansi",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "easycolor",
    "package_url": "https://pypi.org/project/easycolor/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/easycolor/",
    "project_urls": {
      "Homepage": "https://github.com/GeorgeTG/easycolor"
    },
    "release_url": "https://pypi.org/project/easycolor/0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Terminal colors made easy!",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2541731,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3cbad2ef8c639e49e41c7c2579bbac8a65dcd542419eeebdc8afc6be5016ea3f",
          "md5": "cd7df457fb2b369a50d8ed537736e9a9",
          "sha256": "e6cf9fa1863f2129e267a3f4e24c90898fe8da6618294c78565ae7f17d1b4463"
        },
        "downloads": -1,
        "filename": "easycolor-0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd7df457fb2b369a50d8ed537736e9a9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7306,
        "upload_time": "2016-12-28T02:25:32",
        "upload_time_iso_8601": "2016-12-28T02:25:32.291103Z",
        "url": "https://files.pythonhosted.org/packages/3c/ba/d2ef8c639e49e41c7c2579bbac8a65dcd542419eeebdc8afc6be5016ea3f/easycolor-0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "684c8d4bc46b59006daec8f185216e089138c7e098d778a833d215aebc9a948c",
          "md5": "5e02d553d35726b8ff6ebe427cbb6121",
          "sha256": "d00eeefad954946a1118c8042a69713c68942b8d7c6e1ec2ed8da018888072a9"
        },
        "downloads": -1,
        "filename": "easycolor-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5e02d553d35726b8ff6ebe427cbb6121",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5073,
        "upload_time": "2016-12-28T01:39:17",
        "upload_time_iso_8601": "2016-12-28T01:39:17.950283Z",
        "url": "https://files.pythonhosted.org/packages/68/4c/8d4bc46b59006daec8f185216e089138c7e098d778a833d215aebc9a948c/easycolor-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3cbad2ef8c639e49e41c7c2579bbac8a65dcd542419eeebdc8afc6be5016ea3f",
        "md5": "cd7df457fb2b369a50d8ed537736e9a9",
        "sha256": "e6cf9fa1863f2129e267a3f4e24c90898fe8da6618294c78565ae7f17d1b4463"
      },
      "downloads": -1,
      "filename": "easycolor-0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cd7df457fb2b369a50d8ed537736e9a9",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 7306,
      "upload_time": "2016-12-28T02:25:32",
      "upload_time_iso_8601": "2016-12-28T02:25:32.291103Z",
      "url": "https://files.pythonhosted.org/packages/3c/ba/d2ef8c639e49e41c7c2579bbac8a65dcd542419eeebdc8afc6be5016ea3f/easycolor-0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "684c8d4bc46b59006daec8f185216e089138c7e098d778a833d215aebc9a948c",
        "md5": "5e02d553d35726b8ff6ebe427cbb6121",
        "sha256": "d00eeefad954946a1118c8042a69713c68942b8d7c6e1ec2ed8da018888072a9"
      },
      "downloads": -1,
      "filename": "easycolor-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5e02d553d35726b8ff6ebe427cbb6121",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5073,
      "upload_time": "2016-12-28T01:39:17",
      "upload_time_iso_8601": "2016-12-28T01:39:17.950283Z",
      "url": "https://files.pythonhosted.org/packages/68/4c/8d4bc46b59006daec8f185216e089138c7e098d778a833d215aebc9a948c/easycolor-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}