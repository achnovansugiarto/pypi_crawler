{
  "info": {
    "author": "Zhenlin Chen",
    "author_email": "chenzhenlin@ict.ac.cn",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pDeepXL: MS/MS spectrum prediction for cross-linked peptide pairs by deep learning\n\nTable of Contents\n=================\n* [Introduction](#introduction)\n* [Installation](#installation)\n* [Script mode](#script-mode)\n    * [Single prediction](#single-prediction)\n        * [pDeepXL.predict.predict_single](#pdeepxlpredictpredict_single)\n        * [pDeepXL.plot.plot_single](#pdeepxlplotplot_single)\n        * [Demonstration](#demonstration)\n    * [Batch prediction](#batch-prediction)\n        * [pDeepXL.predict.predict_batch](#pdeepxlpredictpredict_batch)\n        * [pDeepXL.predict.save_result_batch](#pdeepxlpredictsave_result_batch)\n        * [pDeepXL.plot.plot_batch](#pdeepxlplotplot_batch)\n        * [pDeepXL.predict.generate_spectra_library](#pdeepxlpredictgenerate_spectra_library)\n        * [Demonstration](#demonstration-1)\n* [Command line mode](#command-line-mode)\n    * [Batch prediction](#batch-prediction-1)\n        * [pDeepXL_predict_save_batch](#pdeepxl_predict_save_batch)\n        * [pDeepXL_predict_save_plot_batch](#pdeepxl_predict_save_plot_batch)\n        * [Demonstration](#demonstration-2)\n* [Citation](#citation)\n\nCreated by [gh-md-toc](https://github.com/ekalinin/github-markdown-toc)\n\n## Introduction\n\nIn cross-linking mass spectrometry, identification of cross-linked peptide pairs heavily relies on similarity measurements between experimental spectra and theoretical ones. The lack of accurate ion intensities in theoretical spectra impairs the performances of search engines for cross-linked peptide pairs, especially at proteome scales. Here, we introduce pDeepXL, a deep neural network to predict MS/MS spectra of cross-linked peptide pairs. We used the transfer learning technique to train pDeepXL, facilitating the training with limited benchmark data of cross-linked peptide pairs. Test results on over ten datasets showed that pDeepXL accurately predicted spectra of both non-cleavable DSS/BS3/Leiker cross-linked peptide pairs (>80% of predicted spectra have Pearson correlation coefficients (PCCs) higher than 0.9), and cleavable DSSO/DSBU cross-linked peptide pairs (>75% of predicted spectra have PCCs higher than 0.9). Furthermore, we showed that accurate prediction was achieved for unseen datasets using an online fine-tunning technique. Finally, integrating pDeepXL into a database search engine increased the number of identified cross-linked spectra by 18% on average.\n\n## Installation\n\nPlease install pDeepXL from PyPI. During installation, all required dependencies will be installed automatically. \n\n```shell\npip install pDeepXL\n```\n\nPlease also download example datasets from [here](https://github.com/pFindStudio/pDeepXL/raw/master/pDeepXL/examples/examples.zip), which will be used in the following tutorial. There are two example datasets in the downloaded zip file, one is for non-cleavable cross-linkers DSS/Leiker (`examples/non_cleavable`), and the other is for cleavable cross-linkers DSSO/DSBU (`examples/cleavable`). For each dataset, there are 2 folders: the `data` folder contains 1 file with 15 cross-linked peptide pairs, and the `predict_results` folder contains predicted MS/MS spectra and the corresponding images.\n\n## Script mode\n\nFor developers, pDeepXL can be easily integrated into a new python project. Once installation, import pDeepXL using two lines:\n\n```python\nimport pDeepXL.predict\nimport pDeepXL.plot\n```\n\n### Single prediction\n\n#### pDeepXL.predict.predict_single\n\nUse the function `pDeepXL.predict.predict_single` to predict a spectrum for a single cross-linked peptide pair.\n\n```python\npredictions=pDeepXL.predict.predict_single(prec_charge,instrument,NCE_low,NCE_medium,NCE_high,crosslinker,seq1,mods1,linksite1,seq2,mods2,linksite2)\n```\n\nThe arguments contain information about the input cross-linked peptide pair:\n\n* **prec_charge** (int): the precursor charge of the cross-linked peptide pair. Only charges in [2+, 5+] are supported.\n* **instrument** (str): the mass spectrometer name. Only instruments in ['QEPlus','QE','QEHF','QEHFX','Fusion','Lumos'] are supported.\n* **NCE_low, NCE_medium, NCE_high** (floats): the low, medium, and high normalized collision energies (NCE). Only NCEs in [0.0, 100.0] are supported.\n* **crosslinker** (str): the cross-linker name. Only cross-linkers in ['DSS','Leiker','DSSO','DSBU'] are supported.\n* **seq1** (str): the first sequence.\n* **mods1** (dict): the modifications on the first sequence, where the key is the position (zero-based numbering) of a modification, and the value is the corresponding modification name. For example, `{3: 'Carbamidomethyl[C]'}` means Carbamidomethyl modified the 4th Cys. Only modifications in ['Carbamidomethyl[C]','Oxidation[M]'] are support.\n* **linksite1** (int): the cross-linked site of the first sequence (also zero-based numbering).\n* **seq2** (str): same description to **seq1**.\n* **mods2** (dict): same description to **mods1**.\n* **linksite2** (int): same description to **linksite1**.\n\n\nReturn value is a tuple containing 3 elements, where the last one is the predicted intensity matrix, which can be used to plot the predicted spectrum subsequently.\n\n#### pDeepXL.plot.plot_single\n\nUse the function `pDeepXL.plot.plot_single` to plot a single predicted spectrum.\n\n```\npDeepXL.plot.plot_single(title,prec_charge,crosslinker,seq1,mods1,linksite1,seq2,mods2,linksite2,predictions[2],path_fig)\n```\n\nThe arguments contain information about the input cross-linked peptide pair:\n\n* **title** (str): the title of the predicted spectrum.\n* **prec_charge,crosslinker,seq1,mods1,linksite1,seq2,mods2,linksite2**: same descriptions to those for `pDeepXL.predict.predict_single`.\n* **predictions[2]** (tuple): the last element of the returned value of `pDeepXL.predict.predict_single`, and the tuple contains predicted intensity matrices for the first and the second sequences.\n* **path_fig** (str): the path of the figure to be generated.\n\n#### Demonstration\n\nFor example, run the following python script to predict and plot the demo non-cleavable cross-linked peptide pair (**please use your local path**):\n\n```python\n# input example of a non-cleavable cross-linked peptide pair\n# ecoli_enri0228_E_bin5_7ul.11740.11740.4.0.dta\nprec_charge,instrument,NCE_low,NCE_medium,NCE_high,crosslinker,seq1,mods1,linksite1,seq2,mods2,linksite2=\\\n4,'QE',0.0,27.0,0.0,'Leiker','EISCVDSAELGKASR',{3: 'Carbamidomethyl[C]'},11,'KIIIGK',{},0\n# please use your local path\npath_non_clv_fig=r'/pFindStudio/pDeepXL/pDeepXL/examples/non_cleavable/predicted_non_clv_spectrum.png'\ntitle='example of non-cleavable cross-linked spectrum'\n\nnon_clv_predictions=pDeepXL.predict.predict_single(prec_charge,instrument,NCE_low,NCE_medium,NCE_high,crosslinker,seq1,mods1,linksite1,seq2,mods2,linksite2)\npDeepXL.plot.plot_single(title,prec_charge,crosslinker,seq1,mods1,linksite1,seq2,mods2,linksite2,non_clv_predictions[2],path_non_clv_fig)\n```\n\nRun the following python script to predict and plot the demo cleavable cross-linked peptide pair (**please use your local path**):\n\n```python\n# input example of a cleavable cross-linked peptide pair\n# HEK293_FAIMS_60_70_80_Fr2.32448.32448.3.0.dta\nprec_charge,instrument,NCE_low,NCE_medium,NCE_high,crosslinker,seq1,mods1,linksite1,seq2,mods2,linksite2=\\\n3,'Lumos',21.0,27.0,33.0,'DSSO','VLLDVKLK',{},5,'EVASAKPK',{},5\n# please use your local path\npath_clv_fig=r'/pFindStudio/pDeepXL/pDeepXL/examples/cleavable/predicted_clv_spectrum.png'\ntitle='example of cleavable cross-linked spectrum'\n\nclv_predictions=pDeepXL.predict.predict_single(prec_charge,instrument,NCE_low,NCE_medium,NCE_high,crosslinker,seq1,mods1,linksite1,seq2,mods2,linksite2)\npDeepXL.plot.plot_single(title,prec_charge,crosslinker,seq1,mods1,linksite1,seq2,mods2,linksite2,clv_predictions[2],path_clv_fig)\n```\n\n### Batch prediction\n\nIf you want to predict spectra for many cross-linked peptide pairs, batch prediction is a better and more efficient way to do this. Before batch prediction, please prepare a data file containing all cross-linked peptide pairs you want to predict. In the data file, one line for one cross-linked peptide pair, and the column header is: `title\tscan\tcharge\tinstrument\tNCE_low\tNCE_medium\tNCE_high\tcrosslinker\tseq1\tmods1\tlinksite1\tseq2\tmods2\tlinksite2`, which is separated by the tab `\\t`. These parameters have been described in the [Single prediction](#Single-prediction) section. Below is a demo table, and you can find the example non-cleavable data file from [here](https://github.com/pFindStudio/pDeepXL/blob/master/pDeepXL/examples/non_cleavable/data/non_clv_dataset.txt), and the example cleavable data file from [here](https://github.com/pFindStudio/pDeepXL/blob/master/pDeepXL/examples/cleavable/data/clv_dataset.txt).\n\n\n|title|scan|charge|instrument|NCE_low|NCE_medium|NCE_high|crosslinker|seq1|mods1|linksite1|seq2|mods2|linksite2|\n|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|\n|C_Lee_011216_ymitos_WT_Gly_BS3_XL_12_R2.57721.57721.4.0.dta|57721|4|Fusion|0.0|30.0|0.0|DSS|FKYAPGTIVLYAER|{}|1|INELTLLVQKR|{}|9|\n|C_Lee_090916_ymitos_BS3_XL_B13_C1_13_Rep1.14188.14188.3.0.dta|14188|3|Lumos|0.0|30.0|0.0|DSS|KLEDAEGQENAASSE|{}|0|DINLLKNGK|{}|5|\n|ecoli_enri0302_E_bin8_7ul_re.5306.5306.3.0.dta|5306|3|QE|0.0|27.0|0.0|Leiker|LKEIIHQQMGGLR|{8: 'Oxidation[M]'}|1|KPNACK|{4: 'Carbamidomethyl[C]'}|0|\n|ecoli_enri0228_E_bin5_7ul.11740.11740.4.0.dta|11740|4|QE|0.0|27.0|0.0|Leiker|EISCVDSAELGKASR|{3: 'Carbamidomethyl[C]'}|11|KIIIGK|{}|0|\n\n#### pDeepXL.predict.predict_batch\n\nUse the function `pDeepXL.predict.predict_batch` for batch prediction.\n\n```python\npredictions=pDeepXL.predict.predict_batch(path_data_file, is_non_cleavable)\n```\n\nThe arguments contain information about the input data:\n\n* **path_data_file** (str): the path of the data file, whose format likes the table above, and please make sure the `title` is unique for each line.\n* **is_non_cleavable** (bool): whether the data is cross-linked by non-cleavable or cleavable cross-linkers. `True` for non-cleavable and `False` for cleavable. Please note that one data file could not contain both non-cleavable and cleavable cross-linked peptide pairs.\n\nReturn value is a tuple containing all predicted spectra. \n\n#### pDeepXL.predict.save_result_batch\n\nBefore spectra plot, please save prediction results to a file, which will be used to plot spectra subsequently. Use the function `pDeepXL.predict.save_result_batch` to save the batch prediction results.\n\n```python\npDeepXL.predict.save_result_batch(path_result_file, predictions)\n```\n\nThe arguments contain information about the result file path and the prediction results:\n\n* **path_result_file** (str): the path of the result file to be generated.\n* **predictions** (tuple): the batch prediction results returned by the function `pDeepXL.predict.predict_batch`.\n\n#### pDeepXL.plot.plot_batch\n\nThen, use the function `pDeepXL.plot.plot_batch` to batch plot all predicted spectra.\n\n```python\npDeepXL.plot.plot_batch(path_result_file, path_img_folder)\n```\n\nThe arguments contain information about the result file path and the image folder path:\n\n* **path_result_file** (str): the path of the result file generated by the function `pDeepXL.predict.save_result_batch`.\n* **path_img_folder** (str): the path of the image folder about to contain all predicted spectra.\n\n#### pDeepXL.predict.generate_spectra_library\n\nIn batch prediction mode, you can also save the prediction results to a spectra library file. The supported spectra library format includes `*.blib` and `*.msp`.\n\nUse the function `pDeepXL.predict.generate_spectra_library` to generate a spectra library file from prediction results.\n\n```python\npDeepXL.predict.generate_spectra_library(path_spectra_library_file, library_format, predictions)\n```\n\nThe arguments contain information about the spectra library file and the prediction results:\n\n* **path_spectra_library_file** (str): the path of the spectra library file to be generated.\n* **library_format** (str): the spectra library format. Only formats in ['blib','msp'] are supported.\n* **predictions** (tuple): the batch prediction results returned by the function `pDeepXL.predict.predict_batch`.\n\n#### Demonstration\n\nFor example, run the following python script to batch predict and plot the demo non-cleavable cross-linked dataset, and then save the prediction results to a `blib` spectra library file (**please use your local path**):\n\n```python\n# --- non cleavable cross-linked example ----\n# please use your local path\npath_non_clv_data_file=r'/pFindStudio/pDeepXL/pDeepXL/examples/non_cleavable/data/non_clv_dataset.txt'\npath_non_clv_result_file=r'/pFindStudio/pDeepXL/pDeepXL/examples/non_cleavable/predict_results/non_clv_predicted_res.txt'\npath_non_clv_img_folder=r'/pFindStudio/pDeepXL/pDeepXL/examples/non_cleavable/predict_results/imgs'\n\nnon_clv_predictions=pDeepXL.predict.predict_batch(path_non_clv_data_file, True)\npDeepXL.predict.save_result_batch(path_non_clv_result_file, non_clv_predictions)\npDeepXL.plot.plot_batch(path_non_clv_result_file, path_non_clv_img_folder)\n\nnon_clv_library_format='blib'\npath_non_clv_spectra_library_file=r'/pFindStudio/pDeepXL/pDeepXL/examples/non_cleavable/predict_results/non_clv_spectra_library.blib'\npDeepXL.predict.generate_spectra_library(path_non_clv_spectra_library_file, non_clv_library_format, non_clv_predictions)\n```\n\nRun the following python script to batch predict and plot the demo cleavable cross-linked dataset, and then save the prediction results to a `msp` spectra library file (**please use your local path**):\n\n```python\n# --- cleavable cross-linked example ----\n# please use your local path\npath_clv_data_file=r'/pFindStudio/pDeepXL/pDeepXL/examples/cleavable/data/clv_dataset.txt'\npath_clv_result_file=r'/pFindStudio/pDeepXL/pDeepXL/examples/cleavable/predict_results/clv_predicted_res.txt'\npath_clv_img_folder=r'/pFindStudio/pDeepXL/pDeepXL/examples/cleavable/predict_results/imgs'\n\nclv_predictions=pDeepXL.predict.predict_batch(path_clv_data_file, False)\npDeepXL.predict.save_result_batch(path_clv_result_file, clv_predictions)\npDeepXL.plot.plot_batch(path_clv_result_file, path_clv_img_folder)\n\nclv_library_format='msp'\npath_clv_spectra_library_file=r'/pFindStudio/pDeepXL/pDeepXL/examples/cleavable/predict_results/clv_spectra_library.msp'\npDeepXL.predict.generate_spectra_library(path_clv_spectra_library_file, clv_library_format, clv_predictions)\n```\n\n## Command line mode\n\nFor ordinary users who know little about programming, pDeepXL also provides the interactive command line mode. Only batch prediction is available for the command line mode.\n\n### Batch prediction\n\nAfter installation of pDeepXL from PyPI, pDeepXL provides two command line entry points. You can run pDeepXL directly in the command line window without python programming.\n\n#### pDeepXL_predict_save_batch\n\nUse the command `pDeepXL_predict_save_batch` to batch predict and save the prediction results to file or spectra library.\n\n```shell\npDeepXL_predict_save_batch path_data_file is_non_cleavable path_result_file save_format\n```\n\nThe command accepts four arguments:\n\n* **path_data_file** (str): the path of the data file.\n* **is_non_cleavable** (int): whether the data is cross-linked by non-cleavable or cleavable cross-linkers. 1 for non-cleavable and 0 for cleavable.\n* **path_result_file** (str): the path of the prediction result file to be generated.\n* **save_format** (str): the format of the prediction result file. If you want to generate spectra library file, set it as `blib` or `msp`, otherwise, just set it as `txt`.\n\n\n#### pDeepXL_predict_save_plot_batch\n\nUse the command `pDeepXL_predict_save_plot_batch` if you also want to batch plot all predicted spectra.\n\n```shell\npDeepXL_predict_save_plot_batch path_data_file is_non_cleavable path_result_file save_format path_img_folder\n```\n\nThe command accepts five arguments, including four arguments same to the command `pDeepXL_predict_save_batch`:\n\n* **path_img_folder** (str): the path of the image folder about to contain all predicted spectra.\n\n\n#### Demonstration\n\nFor example, run the following command to batch predict the demo non-cleavable cross-linked dataset, and then save the prediction results to a `msp` spectra library file (**please use your local path**):\n\n```shell\n# --- non cleavable cross-linked example ----\n# please use your local path\npDeepXL_predict_save_batch /pFindStudio/pDeepXL/pDeepXL/examples/non_cleavable/data/non_clv_dataset.txt 1 /pFindStudio/pDeepXL/pDeepXL/examples/non_cleavable/predict_results/non_clv_predicted_res.txt msp\n```\n\nRun the following command to batch predict and plot the demo cleavable cross-linked dataset, and DO NOT save the prediction results to a spectra library file (**please use your local path**):\n\n```python\n# --- cleavable cross-linked example ----\n# please use your local path\npDeepXL_predict_save_plot_batch /pFindStudio/pDeepXL/pDeepXL/examples/cleavable/data/clv_dataset.txt 0 /pFindStudio/pDeepXL/pDeepXL/examples/cleavable/predict_results/clv_predicted_res.txt txt /pFindStudio/pDeepXL/pDeepXL/examples/cleavable/predict_results/imgs\n```\n\n Here are two examples of predicted spectra, one for DSS and the other for DSSO.\n\n![HEK293_DSS_FAIMS_405060_Fr1.36531.36531.4.0.dta.png](https://github.com/pFindStudio/pDeepXL/raw/master/pDeepXL/examples/non_cleavable/predict_results/imgs/HEK293_DSS_FAIMS_405060_Fr1.36531.36531.4.0.dta.png)\n\n![HEK293_FAIMS_60_70_80_Fr2.32448.32448.3.0.dta.png](https://github.com/pFindStudio/pDeepXL/raw/master/pDeepXL/examples/cleavable/predict_results/imgs/HEK293_FAIMS_60_70_80_Fr2.32448.32448.3.0.dta.png)\n\n\n## Citation\n\n```\npDeepXL: MS/MS spectrum prediction for cross-linked peptide pairs by deep learning. under review.\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pFindStudio/pDeepXL",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pDeepXL",
    "package_url": "https://pypi.org/project/pDeepXL/",
    "platform": "",
    "project_url": "https://pypi.org/project/pDeepXL/",
    "project_urls": {
      "Homepage": "https://github.com/pFindStudio/pDeepXL"
    },
    "release_url": "https://pypi.org/project/pDeepXL/1.2.0/",
    "requires_dist": [
      "tqdm",
      "numpy",
      "matplotlib",
      "seaborn",
      "scikit-learn",
      "scipy",
      "torch",
      "torchvision"
    ],
    "requires_python": ">=3.6",
    "summary": "MS/MS spectrum prediction for cross-linked peptide pairs by deep learning",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9272751,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29d7e8295a8468bf43d84876fd5140c3fea0bb05aecd4171f17a497d9486d3d7",
          "md5": "881c3152c0256940ec233df52f95821f",
          "sha256": "1cbb8936f1bfeccd8f06881d73045f6f159aac829267fe08b79bb79c92f00622"
        },
        "downloads": -1,
        "filename": "pDeepXL-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "881c3152c0256940ec233df52f95821f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15499,
        "upload_time": "2021-01-22T08:17:03",
        "upload_time_iso_8601": "2021-01-22T08:17:03.148512Z",
        "url": "https://files.pythonhosted.org/packages/29/d7/e8295a8468bf43d84876fd5140c3fea0bb05aecd4171f17a497d9486d3d7/pDeepXL-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4045c1a78f283cba2cb1dc72022f972d3954403d1e10b73fe2941cfbb612a50",
          "md5": "879d7c24eb666460bc9bc658e1e39af7",
          "sha256": "5d2376eaca8b023e20543c2e773db089323b4a7925a9ad68287d0f1cf2fc5281"
        },
        "downloads": -1,
        "filename": "pDeepXL-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "879d7c24eb666460bc9bc658e1e39af7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3251,
        "upload_time": "2021-01-22T08:17:04",
        "upload_time_iso_8601": "2021-01-22T08:17:04.264609Z",
        "url": "https://files.pythonhosted.org/packages/b4/04/5c1a78f283cba2cb1dc72022f972d3954403d1e10b73fe2941cfbb612a50/pDeepXL-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f0ee7eafbf2d79029e3c9e8d8bb1c66cb5153e21280e7c7376a64b4db0b0bbe",
          "md5": "c2a0d3f914a4d0552215f4e2481b414c",
          "sha256": "9f7d9a5062a7db2326a2cc65fa5333cc00908306b563b4c157cfad3bf33dbae9"
        },
        "downloads": -1,
        "filename": "pDeepXL-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c2a0d3f914a4d0552215f4e2481b414c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15516,
        "upload_time": "2021-01-22T08:34:58",
        "upload_time_iso_8601": "2021-01-22T08:34:58.288099Z",
        "url": "https://files.pythonhosted.org/packages/3f/0e/e7eafbf2d79029e3c9e8d8bb1c66cb5153e21280e7c7376a64b4db0b0bbe/pDeepXL-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a4a8d268576da53b661ed854247176fd5f9ce82dc3339cd7af1254836fc22bd",
          "md5": "c744730febba3851df473dcfbf182ff7",
          "sha256": "9f52e6f2958a8481045cee64e0adc2e12ee2d4c4a825625d669f304ce94bc85d"
        },
        "downloads": -1,
        "filename": "pDeepXL-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c744730febba3851df473dcfbf182ff7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3268,
        "upload_time": "2021-01-22T08:34:59",
        "upload_time_iso_8601": "2021-01-22T08:34:59.288835Z",
        "url": "https://files.pythonhosted.org/packages/3a/4a/8d268576da53b661ed854247176fd5f9ce82dc3339cd7af1254836fc22bd/pDeepXL-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "043025f57d5e253a588fa98fc4412537388443de2720bf43d8328ff5f44bc809",
          "md5": "9457c7d98228d072f511d889c8a8f137",
          "sha256": "f9034b140a5c1b693b91fb08b2ad756616dda1b960a595eb4725287c95d3919e"
        },
        "downloads": -1,
        "filename": "pDeepXL-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9457c7d98228d072f511d889c8a8f137",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 34323,
        "upload_time": "2021-01-22T14:30:16",
        "upload_time_iso_8601": "2021-01-22T14:30:16.229421Z",
        "url": "https://files.pythonhosted.org/packages/04/30/25f57d5e253a588fa98fc4412537388443de2720bf43d8328ff5f44bc809/pDeepXL-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecc831c15b0e15bc50450b05710f406515ab6d631cedb30793b464aad3635345",
          "md5": "d9934604da85afc5bd987c9d6a13b749",
          "sha256": "fc7a38aadf715fa58b4ba15f695129a0000f47c0544261c00c7866bd79e21ae2"
        },
        "downloads": -1,
        "filename": "pDeepXL-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d9934604da85afc5bd987c9d6a13b749",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21666,
        "upload_time": "2021-01-22T14:30:17",
        "upload_time_iso_8601": "2021-01-22T14:30:17.519618Z",
        "url": "https://files.pythonhosted.org/packages/ec/c8/31c15b0e15bc50450b05710f406515ab6d631cedb30793b464aad3635345/pDeepXL-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f6d973a67695c5d3e186fb22b4531db094b6e76b1614892c0bad2cfce5e131f",
          "md5": "f3d8c9ff5f586bc8008ade9aafa39d9d",
          "sha256": "fc408522d45fe85fb8891732bd66fc53b911f1e25ab55dfffc0b784bbacd9db2"
        },
        "downloads": -1,
        "filename": "pDeepXL-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3d8c9ff5f586bc8008ade9aafa39d9d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19438069,
        "upload_time": "2021-01-22T15:11:59",
        "upload_time_iso_8601": "2021-01-22T15:11:59.553898Z",
        "url": "https://files.pythonhosted.org/packages/1f/6d/973a67695c5d3e186fb22b4531db094b6e76b1614892c0bad2cfce5e131f/pDeepXL-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7d770a54ed5e1d122fc373db54c31ce3288394d9839781015c0bf741abc35c0",
          "md5": "43ad952ea2151af8d5407799789eb50a",
          "sha256": "eb66881ec4e3207a2c5b7159057614bd95cf553aabc589414f94b40754875477"
        },
        "downloads": -1,
        "filename": "pDeepXL-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "43ad952ea2151af8d5407799789eb50a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19420441,
        "upload_time": "2021-01-22T15:12:08",
        "upload_time_iso_8601": "2021-01-22T15:12:08.712773Z",
        "url": "https://files.pythonhosted.org/packages/a7/d7/70a54ed5e1d122fc373db54c31ce3288394d9839781015c0bf741abc35c0/pDeepXL-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fabc3975cd0675d78fab0d4f6fce68288b0b1fef8f3e0d1950a40d3a3d7ff54a",
          "md5": "891cbc843c8020945de12d7224685892",
          "sha256": "a7164017252ef0b0fe89966cbdee009f5d3571bf74bda1bb78b24cc5d97e950c"
        },
        "downloads": -1,
        "filename": "pDeepXL-1.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "891cbc843c8020945de12d7224685892",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19438508,
        "upload_time": "2021-01-22T15:51:05",
        "upload_time_iso_8601": "2021-01-22T15:51:05.110373Z",
        "url": "https://files.pythonhosted.org/packages/fa/bc/3975cd0675d78fab0d4f6fce68288b0b1fef8f3e0d1950a40d3a3d7ff54a/pDeepXL-1.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8dd48501e9b461fa7267d379b516b34fe6a6dc646f99ec448c18a009d2228e0",
          "md5": "2d7d88ad0030694671f52f54c0a7a894",
          "sha256": "aea68c8966bab87e25ee5a607b6d133780550f34ea9b253c6029b64a98c2102e"
        },
        "downloads": -1,
        "filename": "pDeepXL-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2d7d88ad0030694671f52f54c0a7a894",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19420589,
        "upload_time": "2021-01-22T15:51:16",
        "upload_time_iso_8601": "2021-01-22T15:51:16.377361Z",
        "url": "https://files.pythonhosted.org/packages/a8/dd/48501e9b461fa7267d379b516b34fe6a6dc646f99ec448c18a009d2228e0/pDeepXL-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "def473f7efc52ec6cc098fe6aa1eb2773f330bd2f096022c4c88652159f14a96",
          "md5": "34f878b4ff40587e7b7658bbc564d66e",
          "sha256": "b7a9250f982073c4699db3fc1d441bd5f0af40d99d13243c28e3a37faedfe55d"
        },
        "downloads": -1,
        "filename": "pDeepXL-1.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "34f878b4ff40587e7b7658bbc564d66e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19439577,
        "upload_time": "2021-01-23T03:54:12",
        "upload_time_iso_8601": "2021-01-23T03:54:12.024043Z",
        "url": "https://files.pythonhosted.org/packages/de/f4/73f7efc52ec6cc098fe6aa1eb2773f330bd2f096022c4c88652159f14a96/pDeepXL-1.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbcfab87ef8e9c2b470b6e5d367ae8fcecd0bd438732da1b2cb7eb29e9356622",
          "md5": "6900313bf09779dc8b57945a906c7ac7",
          "sha256": "4fe4d0b654d6e71fd44cb2da0a582b96385e704f396d0fc24b08edfa2df3473d"
        },
        "downloads": -1,
        "filename": "pDeepXL-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6900313bf09779dc8b57945a906c7ac7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19421218,
        "upload_time": "2021-01-23T03:54:25",
        "upload_time_iso_8601": "2021-01-23T03:54:25.471339Z",
        "url": "https://files.pythonhosted.org/packages/cb/cf/ab87ef8e9c2b470b6e5d367ae8fcecd0bd438732da1b2cb7eb29e9356622/pDeepXL-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fba820575b7f8ecee9d3446f595639d51776cdaaa07faeaf3550ec0db5c3260a",
          "md5": "76f6451f9cb817e0832d0f9ec57f2a91",
          "sha256": "7a614b089bef34f53ac6e2c4ea22a95832e2b0d238e81aa82f2e62b986a5b7a3"
        },
        "downloads": -1,
        "filename": "pDeepXL-1.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "76f6451f9cb817e0832d0f9ec57f2a91",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19439800,
        "upload_time": "2021-01-23T07:55:54",
        "upload_time_iso_8601": "2021-01-23T07:55:54.437329Z",
        "url": "https://files.pythonhosted.org/packages/fb/a8/20575b7f8ecee9d3446f595639d51776cdaaa07faeaf3550ec0db5c3260a/pDeepXL-1.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a4f066739fc0ec2e6bd9a406aaef4aa49c3291e32e3c8109ffc2b70e1753595",
          "md5": "5bae4c6dc211a4526969924b8e6614d1",
          "sha256": "fcefd2d173b6277b7d6371d80441528ab709e1be0e19f898c4bcccb752eb92b6"
        },
        "downloads": -1,
        "filename": "pDeepXL-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "5bae4c6dc211a4526969924b8e6614d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19421449,
        "upload_time": "2021-01-23T07:56:00",
        "upload_time_iso_8601": "2021-01-23T07:56:00.907921Z",
        "url": "https://files.pythonhosted.org/packages/4a/4f/066739fc0ec2e6bd9a406aaef4aa49c3291e32e3c8109ffc2b70e1753595/pDeepXL-1.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92c3e0c952900c051d4132ccdbdb2cd4fe1190c8eb09d515b0b2277e91641800",
          "md5": "a081323eae80a2fbac6efb4391a4f616",
          "sha256": "12c64ba87e8af809febd5e031a80827182855572172443a28f4cce6b3dd65035"
        },
        "downloads": -1,
        "filename": "pDeepXL-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a081323eae80a2fbac6efb4391a4f616",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19443756,
        "upload_time": "2021-01-30T12:51:57",
        "upload_time_iso_8601": "2021-01-30T12:51:57.854520Z",
        "url": "https://files.pythonhosted.org/packages/92/c3/e0c952900c051d4132ccdbdb2cd4fe1190c8eb09d515b0b2277e91641800/pDeepXL-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "747b9a03f2e3c73855987fd015e9ad3231895aaa2c59fc29e0da3ebd44f2a486",
          "md5": "f2e1941a667b0c24e2fe61bef109039e",
          "sha256": "455565a4e492d774a2241ae3116c010b9495fa67bd37f96dddd7751cb609c8be"
        },
        "downloads": -1,
        "filename": "pDeepXL-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f2e1941a667b0c24e2fe61bef109039e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19434348,
        "upload_time": "2021-01-30T12:52:04",
        "upload_time_iso_8601": "2021-01-30T12:52:04.966006Z",
        "url": "https://files.pythonhosted.org/packages/74/7b/9a03f2e3c73855987fd015e9ad3231895aaa2c59fc29e0da3ebd44f2a486/pDeepXL-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "92c3e0c952900c051d4132ccdbdb2cd4fe1190c8eb09d515b0b2277e91641800",
        "md5": "a081323eae80a2fbac6efb4391a4f616",
        "sha256": "12c64ba87e8af809febd5e031a80827182855572172443a28f4cce6b3dd65035"
      },
      "downloads": -1,
      "filename": "pDeepXL-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a081323eae80a2fbac6efb4391a4f616",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 19443756,
      "upload_time": "2021-01-30T12:51:57",
      "upload_time_iso_8601": "2021-01-30T12:51:57.854520Z",
      "url": "https://files.pythonhosted.org/packages/92/c3/e0c952900c051d4132ccdbdb2cd4fe1190c8eb09d515b0b2277e91641800/pDeepXL-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "747b9a03f2e3c73855987fd015e9ad3231895aaa2c59fc29e0da3ebd44f2a486",
        "md5": "f2e1941a667b0c24e2fe61bef109039e",
        "sha256": "455565a4e492d774a2241ae3116c010b9495fa67bd37f96dddd7751cb609c8be"
      },
      "downloads": -1,
      "filename": "pDeepXL-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f2e1941a667b0c24e2fe61bef109039e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19434348,
      "upload_time": "2021-01-30T12:52:04",
      "upload_time_iso_8601": "2021-01-30T12:52:04.966006Z",
      "url": "https://files.pythonhosted.org/packages/74/7b/9a03f2e3c73855987fd015e9ad3231895aaa2c59fc29e0da3ebd44f2a486/pDeepXL-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}