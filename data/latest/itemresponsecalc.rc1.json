{
  "info": {
    "author": "Arne Leijon",
    "author_email": "leijon@kth.se",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Topic :: Multimedia :: Sound/Audio",
      "Topic :: Scientific/Engineering :: Information Analysis"
    ],
    "description": "Package **ItemResponseCalc** implements probabilistic Bayesian analysis\nof responses from a questionnaire designed to measure individual `traits', \ni.e., preferences, judgments, or capabilities.\n\nThe analysis is based on *Item Response Theory (IRT)*.\nThis is a family of probabilistic models designed to handle responses to test instruments for any purpose in social, psychological, or educational research.\nThe analysis model estimates individual parameters numerically on an objective *interval scale*,\nalthough the raw input data are *subjective*\nand indicate only an *ordinal* judgment for each item in the questionnaire.\n\nThis implementation uses the *Graded Response Model* (Samejima, 1997; Fox, 2010), \napplied with a logistic distribution for the latent random variable assumed to determine each response.\nThis model treats subjects' responses\nas determined by the outcome of a latent individual trait variable,\ni.e., somewhat similar to the latent internal \"sensation\"\nvariable assumed to determine responses in psycho-physical experiments.\n\nAnother model for similar data might be the Partial Credits Model (Masters, 1982; Fox, 2010),\nwhich belongs to the Rasch family.\n\n## Data Collection\nThe present package version can only handle discrete *ordinal* response data.\nThe response alternatives must represent a natural order, e.g., \n`strongly disagree`, `disagree`, `no opinion`, `agree`, `strongly agree`.\n\nThis package *does not include* functions to administer the data collection;\nit can only use existing recorded data.\nThe present version *does not include* functions to validate the statistical properties of the questionnaire itself,\nand thus cannot help in the design of a questionnaire.\nIt can only analyze recorded response data sets obtained from an existing test instrument.\n\nThe package can analyze response data with the following features:\n\n1. The questionnaire may include several items.\n\n1. The items may be designed to measure either \n\ta single individual trait, or several traits.\n\tThe analysis will automatically determine how many traits are needed\n\tto effectively model the complete set of response data.\n    \tThe analysis results will show estimated values for each trait.\n\n 1. Separate model parameters are estimated for the traits of individual respondents, \n \tand for the response scale of each item.\n\tThe analysis results will show which items are associated with each individual trait.\n\tThe results also show how the trait scale corresponds to the ordinal responses for each item.\n\n1. The number of response alternatives may differ among questionnaire items.\n\tEach item must have at least two response alternatives,\n\teven if one alternative is not explicitly shown in the questionnaire. \n\t(For example, if an item requires a Yes/No answer, \n\tonly the Yes alternative might be shown as a tick box, \n\tand the absence of a tick mark is interpreted as a No answer.) \n\n1. Data for one or more distinct **Participant Groups** may be included.\n\tThe analysis will show predicted differences between the populations\n\tfrom which the groups are recruited.\n\tThe statistical credibility is calculated *jointly* for all population differences,\n\taccounting for the effects of multiple comparisons.\t\n\n1. The analysis model can use input data stored in various file formats. \n\tThe user can specify different recoding functions for each input source, \n\te.g., to handle different codes for missing responses, \n\tor different wordings for the response alternatives. \n\tResponses are recoded into an ordinal integer index 1, 2, etc., for each item.\n\n1. The analysis can handle missing responses in the input data sets. \t\n\n1. The user may specify arbitrary inclusion criteria for respondent records,\n\tseparately for each input file.\n\n1. The present version does not distinguish *repeated* responses from a single subject. \n\tAll input records are treated as independent, \n\tassumed to be given by different respondents.\n\nThe Bayesian model is hierarchical.\nThe package can estimate predictive distributions of results for\n* a random individual in each population represented by a group of respondents,\n* the mean in each population represented by a group of respondents,\n* a random individual in the total population for which all respondent groups are representative.\nAll results are saved in files with figures and tables, with user-selectable formats. \n\n## Package Documentation\nGeneral information and version history is given in the package doc-string that may be accessed by command\n`help(ItemResponseCalc)`.\n\nSpecific information about the organization and accepted formats of input data files\nis presented in the doc-string of module item_response_data, accessible via `help(ItemResponseCalc.item_response_data)`.\nThe most flexible file format is an Excel (xlsx) work-sheet, where each row\ncontains all responses from one subject, with one column for each item.\n\nAfter running an analysis, the logging output file briefly explains\nthe analysis results presented in figures and tables.\n\n## Usage\n1. Install the most recent package version:\n    `python3 -m pip install --upgrade ItemResponseCalc`\n\n1. Copy the template script `run_irt.py`, rename it, and\n    edit the copy as suggested in the template, to specify\n    - your questionnaire and response alternatives,\n    - the respondent groups and corresponding input data files,\n    - a directory where all output result files will be stored.\n\n1. Run your edited script: `python3 run_my_irt.py`.\n\n## Requirements\nThis package requires Python 3.6 or newer, with Numpy 1.17 or newer, Scipy, and Matplotlib,\nas well as a support package samppy, and openpyxl for reading xlsx files.\nThe pip installer will check and install these required packages if needed.\n\nIf the user needs to access data in a MySQL database, \na connection package must be installed manually, e.g., as\n `python3 -m pip install  mysql-connector-python`\n\nIf the user needs to analyze SPSS (.sav) data files, \nit is recommended to first use SPSS to convert the data to xlsx or csv file format.\n\n## References\nA. Leijon, H. Dillon, L. Hickson, M. Kinkel, S. E. Kramer, and P. Nordqvist (2020).\nAnalysis of Data from the International Outcome Inventory for Hearing Aids (IOI-HA) using Bayesian Item Response Theory.\n*Manuscript in preparation*. Contact the package author for more information.\n\nJ.-P. Fox (2010). *Bayesian Item Response Modeling: Theory and Applications*. Statistics for Social and Behavioral Sciences. Springer.\n\nG. N. Masters (1982). A Rasch model for partial credit scoring. *Psychometrika*, 47(2):149–174.\n\nF. Samejima (1997). Graded response model. In W. J. v. D. Linden and R. K. Hambleton, eds., *Handbook of Modern Item Response Theory*, p. 85–100. Springer, New York.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "questionnaire item-response-theory Bayesian",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ItemResponseCalc",
    "package_url": "https://pypi.org/project/ItemResponseCalc/",
    "platform": "",
    "project_url": "https://pypi.org/project/ItemResponseCalc/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/ItemResponseCalc/0.5.0/",
    "requires_dist": [
      "numpy (>=1.17)",
      "scipy",
      "matplotlib",
      "samppy",
      "openpyxl"
    ],
    "requires_python": ">=3.6",
    "summary": "Statistical Analysis of Questionnaire Response Data",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7428222,
  "releases": {
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd04297d040e5480ecdf45d0515324136aa9040c6501209eb2a9e7e47a27d0cd",
          "md5": "90aa6fd7678e55eabd6b3df2ab71bd5f",
          "sha256": "54550fcd40a3545873f7bf488a0edbf3caafcafc0340f4bed222fa43395eba3b"
        },
        "downloads": -1,
        "filename": "ItemResponseCalc-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90aa6fd7678e55eabd6b3df2ab71bd5f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 83231,
        "upload_time": "2020-06-09T02:28:54",
        "upload_time_iso_8601": "2020-06-09T02:28:54.726730Z",
        "url": "https://files.pythonhosted.org/packages/fd/04/297d040e5480ecdf45d0515324136aa9040c6501209eb2a9e7e47a27d0cd/ItemResponseCalc-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b65a1af8fa2ac84c405db1ad2704434272d9710947bb613111ad0d5b401f4a31",
          "md5": "61eef8ebfdfc379a72b619e240e1213d",
          "sha256": "ca6bcef4b4e014901980d3221009929f7524b442ab99a2319aaee00852784642"
        },
        "downloads": -1,
        "filename": "ItemResponseCalc-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "61eef8ebfdfc379a72b619e240e1213d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 69871,
        "upload_time": "2020-06-09T02:28:59",
        "upload_time_iso_8601": "2020-06-09T02:28:59.945203Z",
        "url": "https://files.pythonhosted.org/packages/b6/5a/1af8fa2ac84c405db1ad2704434272d9710947bb613111ad0d5b401f4a31/ItemResponseCalc-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd04297d040e5480ecdf45d0515324136aa9040c6501209eb2a9e7e47a27d0cd",
        "md5": "90aa6fd7678e55eabd6b3df2ab71bd5f",
        "sha256": "54550fcd40a3545873f7bf488a0edbf3caafcafc0340f4bed222fa43395eba3b"
      },
      "downloads": -1,
      "filename": "ItemResponseCalc-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "90aa6fd7678e55eabd6b3df2ab71bd5f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 83231,
      "upload_time": "2020-06-09T02:28:54",
      "upload_time_iso_8601": "2020-06-09T02:28:54.726730Z",
      "url": "https://files.pythonhosted.org/packages/fd/04/297d040e5480ecdf45d0515324136aa9040c6501209eb2a9e7e47a27d0cd/ItemResponseCalc-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b65a1af8fa2ac84c405db1ad2704434272d9710947bb613111ad0d5b401f4a31",
        "md5": "61eef8ebfdfc379a72b619e240e1213d",
        "sha256": "ca6bcef4b4e014901980d3221009929f7524b442ab99a2319aaee00852784642"
      },
      "downloads": -1,
      "filename": "ItemResponseCalc-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "61eef8ebfdfc379a72b619e240e1213d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 69871,
      "upload_time": "2020-06-09T02:28:59",
      "upload_time_iso_8601": "2020-06-09T02:28:59.945203Z",
      "url": "https://files.pythonhosted.org/packages/b6/5a/1af8fa2ac84c405db1ad2704434272d9710947bb613111ad0d5b401f4a31/ItemResponseCalc-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}