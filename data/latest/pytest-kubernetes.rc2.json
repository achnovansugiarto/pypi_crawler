{
  "info": {
    "author": "Michael Schilonka",
    "author_email": "michael@blueshoe.io",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Pytest",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Testing"
    ],
    "description": "# pytest-kubernetes\npytest-kubernetes is a lightweight pytest plugin that makes managing (local) Kubernetes clusters a breeze. You can easily spin up a Kubernetes cluster with one [pytest fixure](https://docs.pytest.org/en/latest/explanation/fixtures.html) and remove them again.\nThe fixture comes with some simple functions to interact with the cluster, for example `kubectl(...)` that allows you to run typical *kubectl* commands against this cluster without worring \nabout the *kubeconfig* on the test machine.\n\n**Features:**\n- Set up and tear down (local) Kubernetes clusters with *minikube*, *k3d* and *kind*\n- Configure the cluster to recreate for each test case (default), or keep it across multiple test cases\n- Automatic management of the *kubeconfig*\n- Simple functions to run kubectl commands (with *dict* output), reading logs and load custom container images\n- Wait for certain conditions in the cluster\n- Port forward Kubernetes-based services (using kubectl port-forward) easily during a test case\n- Management utils for custom pytest-fixtures (for example pre-provisioned clusters)\n \n## Installation\nThis plugin can be installed from PyPI:\n- `pip install pytest-kubernetes`\n- `poetry add -D pytest-kubernetes`\n\nNote that this package provides entrypoint hooks to be automatically loaded with pytest.\n\n## Requirements\npytest-kubernetes expects the following components to be available on the test machine:\n- [`kubectl`](https://kubernetes.io/docs/reference/kubectl/)\n- [`minikube`](https://minikube.sigs.k8s.io/docs/start/) (optional for minikube-based clusters)\n- [`k3d`](https://k3d.io/) (optional for k3d-based clusters)\n- [`kind`](https://kind.sigs.k8s.io/) (optional for kind-based clusters)\n- [Docker](https://docs.docker.com/get-docker/) (optional for Docker-based Kubernetes clusters)\n\nPlease make sure they are installed to run pytest-kubernetes properly.\n\n## Reference\n\n### Fixture\n\n#### k8s\nThe _k8s_ fixture provides access to an automatically selected Kubernetes provider (depending on the availability on the host). The priority is: k3d, kind, minikube-docker and minikube-kvm2.\n\nThe fixture passes a manager object of type *AClusterManager*.\n\nIt provides the following interface:\n- `kubectl(...)`: Execute kubectl command against this cluster (defaults to `dict` as returning format)\n- `apply(...)`: Apply resources to this cluster, either from YAML file, or Python dict\n- `load_image(...)`: Load a container image into this cluster\n- `wait(...)`: Wait for a target and a condition\n- `port_forwarding(...)`: Port forward a target\n- `logs(...)`: Get the logs of a pod\n- `version()`: Get the Kubernetes version of this cluster\n- `create(...)`: Create this cluster\n- `delete()`: Delete this cluster\n- `reset()`: Delete this cluster (if it exists) and create it again\n\nThe interface provides proper typing and should be easy to work with.\n\n**Example**\n\n```python\ndef test_a_feature_with_k3d(k8s: AClusterManager):\n    k8s.create()\n    k8s.apply(\n        {\n            \"apiVersion\": \"v1\",\n            \"kind\": \"ConfigMap\",\n            \"data\": {\"key\": \"value\"},\n            \"metadata\": {\"name\": \"myconfigmap\"},\n        },\n    )\n    k8s.apply(\"./dependencies.yaml\")\n    k8s.load_image(\"my-container-image:latest\")\n    k8s.kubectl(\n        [\n            \"run\",\n            \"test\",\n            \"--image\",\n            \"my-container-image:latest\",\n            \"--restart=Never\",\n            \"--image-pull-policy=Never\",\n        ]\n    )\n```\nThis cluster will be deleted once the test case is over.\n\n> Please note that you need to set *\"--image-pull-policy=Never\"* for images that you loaded into the cluster via the `k8s.load(name: str)` function (see example above).\n\n### Marks\npytest-kubernetes uses [*pytest marks*](https://docs.pytest.org/en/7.1.x/how-to/mark.html) for specifying the cluster configuration for a test case\n\nCurrently the following settings are supported:\n\n- *provider* (str): request a specific Kubernetes provider for the test case \n- *cluster_name* (str): request a specific cluster name\n- *keep* (bool): keep the cluster across multiple test cases\n\n\n**Example**\n```python\n@pytest.mark.k8s(provider=\"minikube\", cluster_name=\"test1\", keep=True)\ndef test_a_feature_in_minikube(k8s: AClusterManager):\n    ...\n```\n\n### Utils\nTo write custom Kubernetes-based fixtures in your project you can make use of the following util functions.\n\n\n#### `select_provider_manager`\nThis function returns a deriving class of *AClusterManager* that is not created and wrapped in a fixture yet.\n\n`select_provider_manager(name: Optional[str] = None) -> Type[AClusterManager]`\n\nThe returning object gets called with the init parameters of *AClusterManager*, the `cluster_name: str`.\n\n**Example**\n```python\n@pytest.fixture(scope=\"session\")\ndef k8s_with_workload(request):\n    cluster = select_provider_manager(\"k3d\")(\"my-cluster\")\n    # if minikube should be used\n    # cluster = select_provider_manager(\"minikube\")(\"my-cluster\")\n    cluster.create()\n    # init the cluster with a workload\n    cluster.apply(\"./fixtures/hello.yaml\")\n    cluster.wait(\"deployments/hello-nginxdemo\", \"condition=Available=True\")\n    yield cluster\n    cluster.delete()\n```\nIn this example, the cluster remains active for the entire session and is only deleted once pytest is done.\n\n> Note that `yield` notation that is prefered by pytest to express clean up tasks for this fixture.\n\n## Examples\nPlease find more examples in *tests/vendor.py* in this repository. These test cases are written as users of pytest-kubernetes would write test cases in their projects.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytest-kubernetes",
    "package_url": "https://pypi.org/project/pytest-kubernetes/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytest-kubernetes/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pytest-kubernetes/0.2.0/",
    "requires_dist": [
      "pytest (>=7.2.1,<8.0.0)",
      "pyyaml (>=6.0,<7.0)"
    ],
    "requires_python": ">=3.8.1,<4.0.0",
    "summary": "",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16891278,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b72cd78a8cbbc483dc46bb4ed5f06c8e794b6844d73f7930a1647199b42a1b8b",
          "md5": "aa88d5aa744e02bb2436d55eb3c3e844",
          "sha256": "4e76d50f93971860776f0a8e2af41a5f9bcbae08f24e4bbe9acba010ae778c32"
        },
        "downloads": -1,
        "filename": "pytest_kubernetes-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa88d5aa744e02bb2436d55eb3c3e844",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 9748,
        "upload_time": "2023-02-15T14:55:21",
        "upload_time_iso_8601": "2023-02-15T14:55:21.083229Z",
        "url": "https://files.pythonhosted.org/packages/b7/2c/d78a8cbbc483dc46bb4ed5f06c8e794b6844d73f7930a1647199b42a1b8b/pytest_kubernetes-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2b7f3a12654b14d71122f82d641449e51b0febacb1739bf6455ef51d20ac522",
          "md5": "4186467c6cb6808b741d59fb5de642e2",
          "sha256": "cbaea3b0a522c1d78c5464cf1e905efc5323c56923dccf9a6d963fcecfb868a5"
        },
        "downloads": -1,
        "filename": "pytest_kubernetes-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4186467c6cb6808b741d59fb5de642e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 13807,
        "upload_time": "2023-02-15T14:55:23",
        "upload_time_iso_8601": "2023-02-15T14:55:23.067345Z",
        "url": "https://files.pythonhosted.org/packages/e2/b7/f3a12654b14d71122f82d641449e51b0febacb1739bf6455ef51d20ac522/pytest_kubernetes-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b5b25d36743ea7b1f484360dc72708e74b307dd4fc1d4c831155a90dbca166e",
          "md5": "fe3a1e701d1a49278597b06c2a2a6f6c",
          "sha256": "4e37a24c2055351d47cf49b11d24c0c84708962263aa8480cd22fdf725b1ef5f"
        },
        "downloads": -1,
        "filename": "pytest_kubernetes-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe3a1e701d1a49278597b06c2a2a6f6c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 16037,
        "upload_time": "2023-02-16T17:27:09",
        "upload_time_iso_8601": "2023-02-16T17:27:09.884178Z",
        "url": "https://files.pythonhosted.org/packages/7b/5b/25d36743ea7b1f484360dc72708e74b307dd4fc1d4c831155a90dbca166e/pytest_kubernetes-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cde8b11a76d6ec8360a55aa44e6198d1079e8ce0d8e55eebbd592a027c01f84a",
          "md5": "5b5de5bfab0a4cce49a7de43c8a95c5e",
          "sha256": "6b84ed7190ce0a08e75f47607e3b2d04f581ed784eb3264a6213609ee24e8fe5"
        },
        "downloads": -1,
        "filename": "pytest_kubernetes-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5b5de5bfab0a4cce49a7de43c8a95c5e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.1,<4.0.0",
        "size": 14708,
        "upload_time": "2023-02-16T17:27:12",
        "upload_time_iso_8601": "2023-02-16T17:27:12.137631Z",
        "url": "https://files.pythonhosted.org/packages/cd/e8/b11a76d6ec8360a55aa44e6198d1079e8ce0d8e55eebbd592a027c01f84a/pytest_kubernetes-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7b5b25d36743ea7b1f484360dc72708e74b307dd4fc1d4c831155a90dbca166e",
        "md5": "fe3a1e701d1a49278597b06c2a2a6f6c",
        "sha256": "4e37a24c2055351d47cf49b11d24c0c84708962263aa8480cd22fdf725b1ef5f"
      },
      "downloads": -1,
      "filename": "pytest_kubernetes-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fe3a1e701d1a49278597b06c2a2a6f6c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8.1,<4.0.0",
      "size": 16037,
      "upload_time": "2023-02-16T17:27:09",
      "upload_time_iso_8601": "2023-02-16T17:27:09.884178Z",
      "url": "https://files.pythonhosted.org/packages/7b/5b/25d36743ea7b1f484360dc72708e74b307dd4fc1d4c831155a90dbca166e/pytest_kubernetes-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cde8b11a76d6ec8360a55aa44e6198d1079e8ce0d8e55eebbd592a027c01f84a",
        "md5": "5b5de5bfab0a4cce49a7de43c8a95c5e",
        "sha256": "6b84ed7190ce0a08e75f47607e3b2d04f581ed784eb3264a6213609ee24e8fe5"
      },
      "downloads": -1,
      "filename": "pytest_kubernetes-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5b5de5bfab0a4cce49a7de43c8a95c5e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.1,<4.0.0",
      "size": 14708,
      "upload_time": "2023-02-16T17:27:12",
      "upload_time_iso_8601": "2023-02-16T17:27:12.137631Z",
      "url": "https://files.pythonhosted.org/packages/cd/e8/b11a76d6ec8360a55aa44e6198d1079e8ce0d8e55eebbd592a027c01f84a/pytest_kubernetes-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}