{
  "info": {
    "author": "Jimmy Yeh",
    "author_email": "chienfeng0719@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# logger-master\n**A package for pushing serialized error log which generated by [loguru](https://github.com/Delgan/loguru \"loguru\") to remote storage.**\n\n## Description:\nA package for pushing serialized error log which generated by [loguru](https://github.com/Delgan/loguru \"loguru\") to remote storage (including mongodb / redis / fluentd).\n\n## How To Use:\n\n### With MongoDB\n* parameters:\n    - mongo_instance(object): mongodb instance\n    - mongo_db(str): database for storing log data\n    - mongo_collection(str): collection for storing log data\n    - terminal_displayed(bool): display log information on terminal screen or not\n    - rotation(str): [loguru](https://github.com/Delgan/loguru#modern-string-formatting-using-braces-style) rotation\n    - serialize(bool): data serialized or not\n    - log_format(str): [loguru](https://github.com/Delgan/loguru#modern-string-formatting-using-braces-style) format\n    - log_path(str): file path for storing log data\n    - custom_func(function): function for custom serialized data\n```python\nimport json\nfrom pymongo import MongoClient\nfrom logger_master.logger import MongoLogger\n\n# pushing log to mongodb instance\n\nmongo_uri = 'mongodb://root:root@localhost:27017/?authMechanism=SCRAM-SHA-1'\nmongo_instance = MongoClient(mongo_uri)\n\n# basic usage for pushing log with specific database and collection\nlogger = MongoLogger(mongo_instance=mongo_instance,\n                     mongo_db='my_log',\n                     mongo_collection='my_log_collection')\n\n# pushing serialize log to ./my_log/log_file\nlogger = MongoLogger(mongo_instance=mongo_instance,\n                     mongo_db='my_log',\n                     mongo_collection='my_log_collection',\n                     serialize=True,\n                     log_path='./my_log/log_file',\n                     rotation='1 week')\n\n# disable display log on screen\nlogger = MongoLogger(mongo_instance=mongo_instance,\n                     mongo_db='my_log',\n                     mongo_collection='my_log_collection',\n                     log_path='./my_log/log_file',\n                     terminal_displayed=False)\n\n# pushing serialized log with custom format\ndef custom_function(serialized_data):\n    if not isinstance(serialized_data, dict):\n        serialized_data = json.loads(serialized_data)\n    serialized_data.update({'new_key': 'new_value'})\n    return serialized_data\n\n\nlogger = MongoLogger(mongo_instance=mongo_instance,\n                     mongo_db='my_log',\n                     mongo_collection='my_log_collection', \n                     custom_func=custom_function)\n\ntry:\n    100 / 0\nexcept Exception as e:\n    logger.error(str(e))\n```\n\n### With Redis\n* parameters:\n    - redis_instance(object): redis instance\n    - key_prefix(str): prefix for redis key\n    - terminal_displayed(bool): display log information on terminal screen or not\n    - rotation(str): [loguru](https://github.com/Delgan/loguru#modern-string-formatting-using-braces-style) rotation\n    - serialize(bool): data serialized or not\n    - log_format(str): [loguru](https://github.com/Delgan/loguru#modern-string-formatting-using-braces-style) format\n    - log_path(str): file path for storing log data\n    - custom_func(function): function for custom serialized data\n```python\nimport json\nimport redis\nfrom logger_master.logger import RedisLogger\n\n# basic usage for pushing log to redis instance\n\nredis_instance = redis.StrictRedis(host='localhost',\n                                   password='root',\n                                   port='root')\n\n# pushing log to mongodb with 'my_error_log' key prefix\nlogger = RedisLogger(redis_instance=redis_instance,\n                     key_prefix='my_error_log')\n\n# pushing serialize log to ./my_log/log_file\nlogger = RedisLogger(redis_instance=redis_instance,\n                     key_prefix='my_error_log',\n                     serialize=True,\n                     log_path='./my_log/log_file',\n                     rotation='1 week')\n\n# disable display log on screen\nlogger = RedisLogger(redis_instance=redis_instance,\n                     key_prefix='my_error_log',\n                     log_path='./my_log/log_file',\n                     terminal_displayed=False)\n\n# pushing serialized log with custom format\ndef custom_function(serialized_data):\n    if not isinstance(serialized_data, dict):\n        serialized_data = json.loads(serialized_data)\n    serialized_data.update({'new_key': 'new_value'})\n    return serialized_data\n\n\nlogger = RedisLogger(redis_instance=redis_instance,\n                     key_prefix='my_error_log',\n                     custom_func=custom_function)\n\ntry:\n    100 / 0\nexcept Exception as e:\n    logger.error(str(e))\n```\n\n### With Fluentd\n* parameters:\n    - hostname(str): fluentd hostname\n    - port(int): fluentd port\n    - key_prefix(str): prefix for fluentd key\n    - terminal_displayed(bool): display log information on terminal screen or not\n    - rotation(str): [loguru](https://github.com/Delgan/loguru#modern-string-formatting-using-braces-style) rotation\n    - serialize(bool): data serialized or not\n    - log_format(str): [loguru](https://github.com/Delgan/loguru#modern-string-formatting-using-braces-style) format\n    - log_path(str): file path for storing log data\n    - custom_func(function): function for custom serialized data\n```python\nimport json\nfrom logger_master import FluentdLogger\n\n# pushing log log to fluentd\n\n# basic usage for pushing log data to fluentd\nlogger = FluentdLogger(hostname='localhost',\n                       port=24224,\n                       key_prefix='mongo')\n\n# pushing serialize log to ./my_log/log_file\nlogger = FluentdLogger(hostname='localhost',\n                       port=24224,\n                       key_prefix='mongo',\n                       serialize=True,\n                       log_path='./my_log/log_file',\n                       rotation='1 week')\n\n# disable display log on screen\nlogger = FluentdLogger(hostname='localhost',\n                       port=24224,\n                       key_prefix='mongo',\n                       log_path='./my_log/log_file',\n                       terminal_displayed=False)\n\n\n# pushing serialized log with custom format\ndef custom_function(serialized_data):\n    if not isinstance(serialized_data, dict):\n        serialized_data = json.loads(serialized_data)\n    serialized_data.update({'new_key': 'new_value'})\n    return serialized_data\n\n\nlogger = FluentdLogger(hostname='localhost',\n                       port=24224,\n                       key_prefix='mongo',\n                       custom_func=custom_function)\n\ntry:\n    1 / 0\nexcept Exception as e:\n    logger.error(msg=str(e))\n```\n**you can also push log to both fluentd and mongodb with [fluent-plugin-mongo](https://docs.fluentd.org/output/mongo).**\n\n---\n<a href=\"https://www.buymeacoffee.com/jimmyyyeh\" target=\"_blank\"><img src=\"https://cdn.buymeacoffee.com/buttons/v2/default-blue.png\" alt=\"Buy Me A Coffee\" height=\"40\" width=\"175\"></a>\n\n**Buy me a coffee, if you like it!**\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/chienfeng0719/logger-master",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "logger-master",
    "package_url": "https://pypi.org/project/logger-master/",
    "platform": "",
    "project_url": "https://pypi.org/project/logger-master/",
    "project_urls": {
      "Homepage": "https://github.com/chienfeng0719/logger-master"
    },
    "release_url": "https://pypi.org/project/logger-master/0.0.3/",
    "requires_dist": [
      "loguru (==0.5.3)",
      "fluent-logger (==0.9.6)"
    ],
    "requires_python": ">=3.6",
    "summary": "A package for pushing serialized error log which generated by loguru to remote storage like mongodb / redis / fluentd",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8481358,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76a7caf4883776753ea7c0f9549489d4b208c0ada5d100b335d7dfa7082acda7",
          "md5": "ae62424e7866ff3f9f7e9cdf133a5082",
          "sha256": "0c50a8a16bfedfe0438ce91fb6e510ca02d3cf17b619ebc596da5874fd53461f"
        },
        "downloads": -1,
        "filename": "logger_master-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ae62424e7866ff3f9f7e9cdf133a5082",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5545,
        "upload_time": "2020-10-23T03:32:16",
        "upload_time_iso_8601": "2020-10-23T03:32:16.563978Z",
        "url": "https://files.pythonhosted.org/packages/76/a7/caf4883776753ea7c0f9549489d4b208c0ada5d100b335d7dfa7082acda7/logger_master-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b6dfccbf46b55c7b7da47871fbf683114c42348467d6634244af1e2b17b3fc4",
          "md5": "1052fa1e3669a142dbc787e3145f4165",
          "sha256": "31a0d92cb396beab7a888e3dc5bccda9bf92e78233a70ed0279fda16b0fc3bbf"
        },
        "downloads": -1,
        "filename": "logger-master-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1052fa1e3669a142dbc787e3145f4165",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4698,
        "upload_time": "2020-10-23T03:32:19",
        "upload_time_iso_8601": "2020-10-23T03:32:19.531661Z",
        "url": "https://files.pythonhosted.org/packages/4b/6d/fccbf46b55c7b7da47871fbf683114c42348467d6634244af1e2b17b3fc4/logger-master-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c737fb593c0330a96edd6a380685b52b7258de82e3c95f5b1468c677b199e6ae",
          "md5": "0d9d8fcf331d896691225286032dfafa",
          "sha256": "5d25bd3786ad82eee37aa1417a6f059bdb4bceeea88383641e6b35ed7f19fe44"
        },
        "downloads": -1,
        "filename": "logger_master-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0d9d8fcf331d896691225286032dfafa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5560,
        "upload_time": "2020-10-23T04:01:43",
        "upload_time_iso_8601": "2020-10-23T04:01:43.163456Z",
        "url": "https://files.pythonhosted.org/packages/c7/37/fb593c0330a96edd6a380685b52b7258de82e3c95f5b1468c677b199e6ae/logger_master-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5734f4b89bbe179ca47737da7245d5a90143b7077b24daa3f75842f39d006231",
          "md5": "3c0ca1a16efb642b89fba23f5a568c81",
          "sha256": "ad85ee9c2a4e9a0491e576b82f72c4e14bc38632e14f5aaef15be601d0e5db12"
        },
        "downloads": -1,
        "filename": "logger-master-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3c0ca1a16efb642b89fba23f5a568c81",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4664,
        "upload_time": "2020-10-23T04:01:45",
        "upload_time_iso_8601": "2020-10-23T04:01:45.541247Z",
        "url": "https://files.pythonhosted.org/packages/57/34/f4b89bbe179ca47737da7245d5a90143b7077b24daa3f75842f39d006231/logger-master-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aeb68c2b6c8c04c9080072ba25ea6da84180bc31d5a46e421c0d75d8a474a1e9",
          "md5": "35b53e95edb64a9b2c57ca53d9e34838",
          "sha256": "d329ba814cfd0938dc6fb395e93ab36a08e47c407f743b016135ae5c782a2949"
        },
        "downloads": -1,
        "filename": "logger_master-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35b53e95edb64a9b2c57ca53d9e34838",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5840,
        "upload_time": "2020-10-23T04:28:23",
        "upload_time_iso_8601": "2020-10-23T04:28:23.804284Z",
        "url": "https://files.pythonhosted.org/packages/ae/b6/8c2b6c8c04c9080072ba25ea6da84180bc31d5a46e421c0d75d8a474a1e9/logger_master-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ecb81d39e7a4085ea9259dedffcbabc56a34c52e62b04870c1f183837ddfee4",
          "md5": "2bdd08e6cfa4a1874b6e3134f01f08ad",
          "sha256": "4af544d2275ec6eeb38624633f7eb02b1bc6d5cf06e716d5099a89ab1b6a0772"
        },
        "downloads": -1,
        "filename": "logger-master-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2bdd08e6cfa4a1874b6e3134f01f08ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5348,
        "upload_time": "2020-10-23T04:28:25",
        "upload_time_iso_8601": "2020-10-23T04:28:25.448854Z",
        "url": "https://files.pythonhosted.org/packages/2e/cb/81d39e7a4085ea9259dedffcbabc56a34c52e62b04870c1f183837ddfee4/logger-master-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aeb68c2b6c8c04c9080072ba25ea6da84180bc31d5a46e421c0d75d8a474a1e9",
        "md5": "35b53e95edb64a9b2c57ca53d9e34838",
        "sha256": "d329ba814cfd0938dc6fb395e93ab36a08e47c407f743b016135ae5c782a2949"
      },
      "downloads": -1,
      "filename": "logger_master-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "35b53e95edb64a9b2c57ca53d9e34838",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5840,
      "upload_time": "2020-10-23T04:28:23",
      "upload_time_iso_8601": "2020-10-23T04:28:23.804284Z",
      "url": "https://files.pythonhosted.org/packages/ae/b6/8c2b6c8c04c9080072ba25ea6da84180bc31d5a46e421c0d75d8a474a1e9/logger_master-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ecb81d39e7a4085ea9259dedffcbabc56a34c52e62b04870c1f183837ddfee4",
        "md5": "2bdd08e6cfa4a1874b6e3134f01f08ad",
        "sha256": "4af544d2275ec6eeb38624633f7eb02b1bc6d5cf06e716d5099a89ab1b6a0772"
      },
      "downloads": -1,
      "filename": "logger-master-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "2bdd08e6cfa4a1874b6e3134f01f08ad",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5348,
      "upload_time": "2020-10-23T04:28:25",
      "upload_time_iso_8601": "2020-10-23T04:28:25.448854Z",
      "url": "https://files.pythonhosted.org/packages/2e/cb/81d39e7a4085ea9259dedffcbabc56a34c52e62b04870c1f183837ddfee4/logger-master-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}