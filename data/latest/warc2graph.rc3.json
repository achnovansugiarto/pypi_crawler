{
  "info": {
    "author": "Pascal Hein, Mona Ulrich, Claus-Michael Schlesinger, Andr√© Blessing, Evelyne Dinulescu-Roth",
    "author_email": "pascal.hein@ilw.uni-stuttgart.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Text Processing :: Markup :: HTML"
    ],
    "description": "# warc2graph\n\nWarc2graph extracts a graph data structure from WARC files. The module was built to dig deeper into WARC files. It extracts (almost) all internal and external references from a WARC file by analyzing the WARC header and the payload. Multiple methods can be used for extraction, single or combined. Warc2graph has a CLI interface and can be used as a python module. The output when using the CLI interface consists of graph data in a standard graph XML format GEXF and several visualizations of that data using different visualization algorithms. We acknowledge that visualizations carry an epistemic value and thus need to be designed according to the analyzed objects and research questions. Warc2graph uses [NetworkX](https://networkx.org/) as its graph data and analytics backend, so more involved graph data analytics can be realized when using warc2graph as a python module. \n\nThe initial purpose of warc2graph was to analyze and visualize the textual structure of net literature works in the [DLA corpus of net literature works and blogs](http://literatur-im-netz.dla-marbach.de/) dating from the early time of the web in the 1990s up to the 2000s. Development is part of the [Science Data Center for Literature](https://sdc4lit.de) research project. We now consider warc2graph as a tool for detailed WARC analytics regarding the referential structure of the archived sites and hope that it will be useful for the web archiving and web research community. \n\nWarc2graph is under active development.\n\nIf you consider using warc2graph for a research project or in an archival context, please get in touch! We'd love to hear about your work. \n\nWarc2graph has been presented at the Electronic Literature Organization Conference 2020: \\\n| Overview and Video: <https://elmcip.net/critical-writing/networks-net-literature-modelling-extracting-and-visualizing-link-based-networks>\n| Conference Paper (PDF): <https://elmcip.net/sites/default/files/media/critical_writing/attachments/claus-michael_schlesinger_mona_ulrich_pascal_hein_and_andre_blessing_networks_of_net_literature_-_modelling_extracting_and_visualizing_192.pdf>\n\n## Installation\n\nwarc2graph requires Python >= 3.6.\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install warc2graph.\n\n```shell\npip install warc2graph\n```\n\nAlternatively you can install manually using the python package [setuptools](https://pypi.org/project/setuptools/).\n\n```shell\ngit clone https://github.com/dla-marbach/warc2graph.git\ncd warc2graph\npython3 setup.py build\npython3 setup.py install --user\n```\n\nTo be able to use the dot algorithm to visualize the graph, make sure, to have [GraphViz](https://graphviz.org/) installed.\n\n## Usage\n\nYou can use the package in your python projects, or you can use the provided command line interface. While the former\noffers more possibilities, the latter might be more intuitive. \n\n### CLI\n\nThe installation of the package provides the `warc2graph` command for your terminal. Call `warc2graph --help` to get an\noverview over the available options.\n\n#### One warc file\nIf you want to create a model for only one warc file simply call\n```shell\nwarc2graph path/to/warc.warc.gz\n```\n\nIf the warc file is not on you file system, and you want it to be downloaded from the internet, you can pass an url. You \nhave to pass the parameter `d`.\n\n```shell\nwarc2graph url/to/warc.warc.gz d\n```\n\n#### List of warc files\nIf you want to create a model using a list of warc files all together archiving one big website, first create a list of\nall the warc files.\n\n```shell\nls path/to/warcs/*.warc.gz >> list_of_warcs.txt\n```\n\nYou can also create the file manually, it should look as follows.\n```\npath/to/warc1.warc.gz\npath/to/warc2.warc.gz\npath/to/warc3.warc.gz\npath/to/warc4.warc.gz\n```\n\nThen call warc2graph with the parameter `wl`, and the list as an input file.\n```shell\nwarc2graph list_of_warcs.txt wl\n```\n\n#### List of live webpages\nYou can also model a website that is not archived. Create a plain text file containing the urls to all the webpages you\nwant to consider. This file should look as follows.\n\n```\nurl/to/webpage1.html\nurl/to/webpage2.htm\n```\n\nThen call warc2graph with the parameter `ll`, and the list as an input file.\n\n```shell\nwarc2graph list_of_webpages.txt ll\n```\n\n#### Further options\n- methods to use\n- create visualisation\n- blacklist\n\n\n### Python package\nYou can inspect the `examples.ipynb` using [jupyter notebook](https://jupyter.org/) for some interactive examples.\n\nOur package relies heavily on the [networkx](https://networkx.org/) package. Read its documentation for further\ninformation about the possibilities and interfaces for the analysis of networkx graphs. \n\n#### Creating and plotting a model\n\n```python\nimport warc2graph  # our package\nimport matplotlib.pyplot as plt  # plot graphs\nimport networkx as nx  # handle graphs\n\n# assign the path to a warc file to a variable\nwarc_path = \"tests/WEB-20210202165627638-00000-24143~clarin02~8443.warc.gz\"\n\n# create a basic model with all resources as nodes and all links and embeddings as edges\nbasic_model = warc2graph.create_graph(warc_path)\n\n# visualizing the graph using the graphviz \"dot\" algorithm\nfig, ax = plt.subplots(1, figsize=(8, 4))\npos = nx.drawing.nx_agraph.graphviz_layout(basic_model, prog=\"dot\")\nnx.draw_networkx(basic_model, with_labels=False, pos=pos, ax=ax)\nplt.draw()\n```\n\n![Visualized Graph](example.png \"Visualized Graph\")\n\n#### Calculating different graph metrics\n\n```python\nimport warc2graph  # our package\nimport networkx as nx  # handle graphs\nfrom pprint import PrettyPrinter  # print dicts nicely\n\npp = PrettyPrinter()\n\nwarc_path = \"tests/WEB-20210202165627638-00000-24143~clarin02~8443.warc.gz\"\nbasic_model = warc2graph.create_graph(warc_path)\ndegree_centralities = nx.algorithms.centrality.degree_centrality(basic_model)\n\npp.pprint(degree_centralities)\n```\nOutputs:\n```python\n{'http://httpd.apache.org/': 0.07692307692307693,\n 'http://www.scientificlinux.org/': 0.07692307692307693,\n 'https://clarin09.ims.uni-stuttgart.de/': 0.23076923076923078,\n 'https://clarin09.ims.uni-stuttgart.de/icons/apache_pb2.gif': 0.07692307692307693,\n 'https://clarin09.ims.uni-stuttgart.de/sdc_warc/angular1.html': 0.23076923076923078,\n 'https://clarin09.ims.uni-stuttgart.de/sdc_warc/index.html': 0.8461538461538463,\n 'https://clarin09.ims.uni-stuttgart.de/sdc_warc/jquery.html': 0.23076923076923078,\n 'https://clarin09.ims.uni-stuttgart.de/sdc_warc/js/angular.min.js': 0.07692307692307693,\n 'https://clarin09.ims.uni-stuttgart.de/sdc_warc/js/jquery-1.11.3.min.js': 0.07692307692307693,\n 'https://clarin09.ims.uni-stuttgart.de/sdc_warc/page1.html': 0.15384615384615385,\n 'https://clarin09.ims.uni-stuttgart.de/sdc_warc/page2.html': 0.15384615384615385,\n 'https://clarin09.ims.uni-stuttgart.de/sdc_warc/page_target_ang1.html': 0.07692307692307693,\n 'https://clarin09.ims.uni-stuttgart.de/sdc_warc/page_target_jquery1.html': 0.07692307692307693,\n 'https://clarin09.ims.uni-stuttgart.de/sdc_warc/page_target_jquery2.html': 0.07692307692307693}\n```\n\n#### Enriched models\nYou can also enrich the models using the original data.\n\n```python\nimport warc2graph  # our package\n\n# assign the path to a warc file to a variable\nwarc_path = \"tests/WEB-20210202165627638-00000-24143~clarin02~8443.warc.gz\"\n\n# create an enriched model, structured like the basic model but containing the html content and counts of all tags\nenriched_model = warc2graph.create_graph(warc_path, include_content=True, count_tags=True)\n\nindex_node = \"https://clarin09.ims.uni-stuttgart.de/sdc_warc/index.html\"\nprint(enriched_model.nodes[index_node][\"counted_tags\"])\n# prints:\n# {'html': 1, 'head': 1, 'meta': 1, 'title': 1, 'body': 1, 'a': 4, 'br': 6}\n\nprint(enriched_model.nodes[index_node][\"content\"])\n```\nPrints:\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<title>Insert title here</title>\n</head>\n<body>\n\n<a href=\"page1.html\">page1</a>\n\n<br>\n<br>\n<a href=\"page2.html\">page2</a>\n\n<br>\n<br>\n<a href=\"angular1.html\">angular1</a>\n\n\n<br>\n<br>\n<a href=\"jquery.html\">jquery</a>\n\n</body>\n</html>\n```\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\nAll contributed Code will be licensed under the GNU Lesser General Public License.\n\nBy contributing you accept the following terms and conditions:\n* You grant the rights for your contribution to be used, distributed and modified together with warc2graph and under\n  the same license.\n* Your contribution consists of your work, no third party holds rights over it.\n* You grant us the right to redistribute the software including your contribution under a different (permissive or\n  non-permissive) open source license.\n\n## License\nwarc2graph is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nwarc2graph is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with warc2graph.  If not, see https://www.gnu.org/licenses/lgpl-3.0.html.\n\nConsider [COPYING](COPYING) and [COPYING.LGPL](COPYING.LGPL).\n\n\n## Acknowledgement\nwarc2graph makes heavy and critical use of following open source libraries:\n\n* [BeautifulSoup](https://www.crummy.com/software/BeautifulSoup/bs4/doc/)\n* [matplotlib](https://matplotlib.org/)\n* [NetworkX](https://networkx.org/)\n* [Selenium](https://www.selenium.dev/)\n* [Setuptools](https://setuptools.readthedocs.io/en/latest/)\n* [Warcio](https://github.com/webrecorder/warcio)\n* [webdriver-manager](https://github.com/SergeyPirogov/webdriver_manager)\n* [trafilatura](https://trafilatura.readthedocs.io/en/latest/)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dla-marbach/warc2graph",
    "keywords": "",
    "license": "LGPL v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "warc2graph",
    "package_url": "https://pypi.org/project/warc2graph/",
    "platform": null,
    "project_url": "https://pypi.org/project/warc2graph/",
    "project_urls": {
      "Homepage": "https://github.com/dla-marbach/warc2graph"
    },
    "release_url": "https://pypi.org/project/warc2graph/0.2/",
    "requires_dist": [
      "beautifulsoup4 (>=4.9.3)",
      "matplotlib (>=3.3.3)",
      "networkx (>=2.5)",
      "selenium (>=3.141.0)",
      "setuptools (>=51.0.0)",
      "warcio (>=1.7.4)",
      "webdriver-manager (>=3.3.0)",
      "trafilatura (>=0.9.0)",
      "lxml (>=4.6.0)",
      "numpy (==1.19.5) ; python_version < \"3.7\""
    ],
    "requires_python": ">=3.6",
    "summary": "Warc2graph extracts a graph data structure from WARC files.",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14023170,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0735aabf0a59ac85f7e79fd68c592ce083d9675851d75099ace5ffa6856e978c",
          "md5": "65ec2ad1a799efbe86695b2f094fe0ef",
          "sha256": "88704d52ee9340a3efb148b2d8a8af9ba266c44d831a46c6cf6340558dafd539"
        },
        "downloads": -1,
        "filename": "warc2graph-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "65ec2ad1a799efbe86695b2f094fe0ef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 33018,
        "upload_time": "2021-05-07T10:09:40",
        "upload_time_iso_8601": "2021-05-07T10:09:40.606973Z",
        "url": "https://files.pythonhosted.org/packages/07/35/aabf0a59ac85f7e79fd68c592ce083d9675851d75099ace5ffa6856e978c/warc2graph-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8a8c7815983634aa3f2194c13e129c8b2bfd79eaf7ae7afc7547088232dee0f",
          "md5": "50cefeba2b8387a94cb58bb119a7159d",
          "sha256": "9043aedd3d5b75a46e02a52a4f4cc764e1c96e2f1c352c3bbaadd431c4a47b78"
        },
        "downloads": -1,
        "filename": "warc2graph-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "50cefeba2b8387a94cb58bb119a7159d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 32033,
        "upload_time": "2021-05-07T10:09:43",
        "upload_time_iso_8601": "2021-05-07T10:09:43.502787Z",
        "url": "https://files.pythonhosted.org/packages/a8/a8/c7815983634aa3f2194c13e129c8b2bfd79eaf7ae7afc7547088232dee0f/warc2graph-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ed755b5bcf0e1fc1940bc69ad380d3d7b826fe36e82cdacde5a09599acebbd6",
          "md5": "fb4395324da4d7247ea450e4595234ed",
          "sha256": "821eb97ececde2684fb212614c659f994879d66bafe87282cbbeb05f3c50bc4f"
        },
        "downloads": -1,
        "filename": "warc2graph-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb4395324da4d7247ea450e4595234ed",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 33040,
        "upload_time": "2021-05-07T10:38:34",
        "upload_time_iso_8601": "2021-05-07T10:38:34.735190Z",
        "url": "https://files.pythonhosted.org/packages/8e/d7/55b5bcf0e1fc1940bc69ad380d3d7b826fe36e82cdacde5a09599acebbd6/warc2graph-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb16ddd58ef030b65a34d7082c0e71d4980fb7eadd5ad4f3133b29cb4e28a723",
          "md5": "119091dcce6821373f82a7150a3696d0",
          "sha256": "fc6c1f76e472994f338407a58d2a035e82daeff0806da54f471a8642ff569d21"
        },
        "downloads": -1,
        "filename": "warc2graph-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "119091dcce6821373f82a7150a3696d0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 34840,
        "upload_time": "2022-06-03T11:38:24",
        "upload_time_iso_8601": "2022-06-03T11:38:24.258734Z",
        "url": "https://files.pythonhosted.org/packages/fb/16/ddd58ef030b65a34d7082c0e71d4980fb7eadd5ad4f3133b29cb4e28a723/warc2graph-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fb16ddd58ef030b65a34d7082c0e71d4980fb7eadd5ad4f3133b29cb4e28a723",
        "md5": "119091dcce6821373f82a7150a3696d0",
        "sha256": "fc6c1f76e472994f338407a58d2a035e82daeff0806da54f471a8642ff569d21"
      },
      "downloads": -1,
      "filename": "warc2graph-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "119091dcce6821373f82a7150a3696d0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 34840,
      "upload_time": "2022-06-03T11:38:24",
      "upload_time_iso_8601": "2022-06-03T11:38:24.258734Z",
      "url": "https://files.pythonhosted.org/packages/fb/16/ddd58ef030b65a34d7082c0e71d4980fb7eadd5ad4f3133b29cb4e28a723/warc2graph-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}