{
  "info": {
    "author": "Masoud Iranmehr",
    "author_email": "masoud.iranmehr@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Welcome to MAVROS_Python_Examples\n\n*Author:* Masoud Iranmehr\n\n*Github Page:* [https://github.com/masoudir/mavros_python_examples](https://github.com/masoudir/mavros_python_examples)\n\n*Web Page:* [https://masoudir.github.io/mavros_tutorial/](https://masoudir.github.io/mavros_tutorial/)\n\n# Introduction\n\nThis is a python implementation of the MAVROS examples.\n\n# Install Requirements\n\n## Install some requirements\nJust follow this command:\n\n* `sudo apt-get install python-dev python-pip python3-dev python3-pip python3-rospkg` - Installs python3 and pip3.\n\n## Install Ardupilot-SITL\nreference : [https://ardupilot.org/dev/docs/building-setup-linux.html](https://ardupilot.org/dev/docs/building-setup-linux.html)\n\n## Install MAVProxy *(Auxiliary)*\nI prefer to use external proxy if I needed for MAVlink protocol. MAVProxy can forward any MAVLink messages from input to other TCP/UDP/Serial ports. It would be helpful if you are using one vehicle for two or more GCS or controller nodes. To install just use this command:\n\n* `pip install MAVProxy` - Install MAVProxy with pip in python2\n\n## Install ROS\nROS is semi-Operating System for robots. ROS is generally available for many programming languages such as C++, Python, \nJavascript and etc. It's free and easy to use. Until now there are three supported versions of ROS (kinetic, melodic and\nneotic) and I prefer to use melodic in this document. To install ROS-melodic, there are two ways of installing from \nready-built binary files or installing from source. I prefer to install the full-version of ros-melodic. If you are not \nusing ubuntu, it's likely to face some problems in installing ROS from binary files mentioned in ROS tutorials from \nsource, because its procedure is common for any kinds of linux platforms.\n\nFor install ROS-melodic from source you can refer to this [link](http://wiki.ros.org/melodic/Installation/Source).\n\nFor install ROS-melodic from binary files you can refer to this [link](http://wiki.ros.org/melodic/Installation/Ubuntu).\n\n## Install MAVROS\n\nIf you want to have installed ROS from binary files, this is recommended to install MAVROS from binary files too. \n\n### Install MAVROS from binary files\n\nFor this, you can refer to this [link](https://ardupilot.org/dev/docs/ros-install.html).\n\nFor case of ease, the commands to be executed for installing MAVROS from binary files are as below:\n\n    sudo apt-get install ros-melodic-mavros ros-melodic-mavros-extras\n    wget https://raw.githubusercontent.com/mavlink/mavros/master/mavros/scripts/install_geographiclib_datasets.sh\n    chmod a+x install_geographiclib_datasets.sh\n    ./install_geographiclib_datasets.sh\n\n### Install MAVROS from source\n\nIf you are not using ubuntu, this is strongly recommended to install MAVROS from source due to the similarity between \nvarious Linux distributions. You can refer to this [link](https://github.com/mavlink/mavros/tree/master/mavros#installation) \nfor full documentation. But here is the abstract commands:\n\n* `source <ROS_INSTALL_PATH>/devel/setup.bash` - Defines the installed folder of ROS (You can insert this command at the bottom of ~/.bashrc file to automatically run this command while opening a new shell. For this, you can use this command: `sudo nano ~/.bashrc`) \n\n* `roscore` - Brings up ros core for accessing its functions and built packages\n\n* `sudo apt-get install python-catkin-tools python-rosinstall-generator -y` - Installs python packages related to ros\n\n* `cd ~/my_catkin_ws/src` - Jump to catkin src folder\n\n* `git clone https://github.com/ros-geographic-info/unique_identifier.git` - clone unique_identifier package\n\n* `git clone https://github.com/ros-geographic-info/geographic_info.git` - clone geographic_info package\n\n* `cd ~/my_catkin_ws` - Jump to catkin folder\n\n* `catkin init` - Initialize catkin workspace\n\n* `wstool init src` - Initialize ros package installer\n\n* `rosinstall_generator --rosdistro melodic mavlink | tee /tmp/mavros.rosinstall` - Install MAVLink (we use the melodic reference for all ROS distros as it's not distro-specific and up to date)\n\n* `rosinstall_generator --upstream mavros | tee -a /tmp/mavros.rosinstall` - Install MAVROS: get source (upstream - released)\n\n* `wstool merge -t src /tmp/mavros.rosinstall` - Create workspace & deps\n\n* `wstool update -t src -j4` - Builds the ros workspace\n\n* `rosdep install --from-paths src --ignore-src -y` - Install packages for ros\n\n* `./src/mavros/mavros/scripts/install_geographiclib_datasets.sh` - Install GeographicLib datasets\n\n* `catkin build` - Build source\n\n* `source devel/setup.bash` - Uses setup.bash or setup.zsh from workspace so that rosrun can find nodes from this workspace\n\nFor installing MAVROS from binary packages please refer to [https://ardupilot.org/dev/docs/ros-install.html#installing-mavros](https://ardupilot.org/dev/docs/ros-install.html#installing-mavros).\n\n# Ignite Rover robot\n\n\n## Bringing up Ardupilot-SITL for Rover\n\n* `cd <Your_Ardupilot_Instalation_Folder>/ardupilot/Tools/autotest/` - Jump to ardupilot folder\n\n* `python sim_vehicle.py -v Rover` - Start Rover vehicle \n\nBecareful to do not use python3 to run or build MAVProxy due to some mismatches found in this package with MAVProxy \nmodules such as \"map\" and \"console\".\n\n\nNote that if you want to show other SITL modules such as map or console, you can use these commands:\n\n    python sim_vehicle.py -v Rover --map --console\n\nOr alternatively you can mention them inside SITL terminal:\n\n    module load map\n\n    module load console\n\nNote: Please be patient when ardupilot is compiling robots at first time. This takes 2-3 minutes to complete.\n\nYou can see that ardupilot-sitl created some outputs such as \"127.0.0.1:14550\" \"127.0.0.1:14551\". These are auxiliary UDP ports for communicating this vehicle to another MAVProxy console. We use these ports in examples.    \n\n## Connect Rover to MAVROS\n\nAt first you have to source ROS and MAVROS. If you have installed them from binary files, follow these commands:\n\n* `source /opt/ros/melodic/setup.bash` - Defines the installed folder of ROS and MAVROS\n\nOr if you have installed them from source, follow these commands:\n\n* `source <ROS_INSTALL_PATH>/devel/setup.bash` - Defines the installed folder of ROS (You can insert this command at the bottom of ~/.bashrc file to automatically run this command while opening a new shell. For this, you can use this command: `sudo nano ~/.bashrc`)\n\n* `source <MAVROS_INSTALL_PATH>/devel/setup.bash` - Defines the installed folder of MAVROS (You can insert this command at the bottom of ~/.bashrc file to automatically run this command while opening a new shell. For this, you can use this command: `sudo nano ~/.bashrc`)\n\nThen it is the time for bringing up the core of ros:\n\n* `roscore` - Brings up ros core for accessing its functions and built packages\n\nAfterwards, you have to tell the MAVROS how to find the vehicle you are using it:\n\n* `roslaunch mavros apm.launch fcu_url:=udp://:14550@` - Connects vehicle from UDP:14550 port to MAVROS\n\nOr if you want to connect to your robot via TCP port remotely, you can use this command\n\n* `roslaunch mavros apm.launch fcu_url:=tcp://<REMOTE_HOST>:<TCP_PORT>@` - Connects vehicle from REMOTE_HOST:TCP_PORT port to MAVROS\n\n# Install MAVROS_Python_Examples\n\nMavros_python_examples supports python3. For downloading it via git, just use these commands:\n\n```bash\ngit clone https://www.github.com/masoudir/mavros_python_examples\ncd mavros_python_examples\n```\n\nOr you can easily install this package via pip:\n\n```bash\npip3 install -U mavros_python_examples\n```  \n\nThe -U parameter allow to update simple_udp_proxy version if it is already installed.\n\n# How to use\n\n## Run the test file\n\nIf you download this project with git, you can run the example via this command:\n\n* `python3 test/rover.py`\n\nThis will create a node with the name of \"node1\" and then it will connect to the ArduRover vehicle you brought up via the former \nstep, then it will set the value of \"CRUISE_SPEED\" parameter to 2 and then it will change the vehicle\nmode to \"GUIDED\". Then it will ARM the vehicle and then force the vehicle to move to the destination of \n{\"lat\":50.15189, \"lon\":10.484885}. \n\n## Implement on your project\n\nIf you have installed this package via pip3, you can just write a sample code like this:\n\n    from mavros_python_examples.roverHandler import *\n    import threading\n    import time\n\n\n    class MyRoverHandler(RoverHandler):\n        def __init__(self):\n            super().__init__()\n\n            self.user_thread = threading.Timer(0, self.user)\n            self.user_thread.daemon = True\n            self.user_thread.start()\n\n        def user(self):\n            while True:\n                time.sleep(1)\n                print(\"arm:\", self.armed, \"mode:\", self.mode)\n                print(\"set param:\", self.set_param(\"CRUISE_SPEED\", 2, 0))\n                if self.connected:\n                    print(\"get param:\", self.get_param(\"CRUISE_SPEED\"))\n                    self.change_mode(MODE_GUIDED)\n                    self.arm(True)\n                    self.move(50.15189, 10.484885, 0)\n\n\n\n    if __name__ == \"__main__\":\n        v = MyRoverHandler()\n        v.enable_topics_for_read()\n        v.connect(\"node1\", rate=10)\n\nThis will create a node with the name of \"node1\" and then it will connect to the ArduRover vehicle you brought up via the former \nstep, then it will set the value of \"CRUISE_SPEED\" parameter to 2 and then it will change the vehicle\nmode to \"GUIDED\". Then it will ARM the vehicle and then force the vehicle to move to the destination of \n{\"lat\":50.15189, \"lon\":10.484885}. \n\n\n# License\n\nThe source code generated by Masoud Iranmehr (@masoudir) is available under the permissive MIT License.\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/masoudir/mavros_python_examples",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mavros-python-examples",
    "package_url": "https://pypi.org/project/mavros-python-examples/",
    "platform": "",
    "project_url": "https://pypi.org/project/mavros-python-examples/",
    "project_urls": {
      "Homepage": "https://github.com/masoudir/mavros_python_examples"
    },
    "release_url": "https://pypi.org/project/mavros-python-examples/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "MAVROS examples",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8596167,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbd435a5b9dc6271c622dc841563d6781d616d0f155503161b1264be5d22b293",
          "md5": "35a40046e3758be2f27b1d18eb6b0111",
          "sha256": "e63a9a04baab80f3e68c19359faf4fae1cb5d38889a9783eda251a7e9baf895c"
        },
        "downloads": -1,
        "filename": "mavros_python_examples-0.0.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "35a40046e3758be2f27b1d18eb6b0111",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=3.6",
        "size": 7765,
        "upload_time": "2020-11-06T11:54:47",
        "upload_time_iso_8601": "2020-11-06T11:54:47.958778Z",
        "url": "https://files.pythonhosted.org/packages/db/d4/35a5b9dc6271c622dc841563d6781d616d0f155503161b1264be5d22b293/mavros_python_examples-0.0.3-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8acf4c9a23eff12d91a3e266b80e7a8f4b0e9bb6edefebb53cea256f7cabe19",
          "md5": "27af0305e68128f4e16e5911f9fc992d",
          "sha256": "6e1ee6f75c2379dd14a690484f41253b6150baf2baab036f559406ae2f8d79b4"
        },
        "downloads": -1,
        "filename": "mavros_python_examples-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "27af0305e68128f4e16e5911f9fc992d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6418,
        "upload_time": "2020-11-06T11:54:49",
        "upload_time_iso_8601": "2020-11-06T11:54:49.541527Z",
        "url": "https://files.pythonhosted.org/packages/f8/ac/f4c9a23eff12d91a3e266b80e7a8f4b0e9bb6edefebb53cea256f7cabe19/mavros_python_examples-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dbd435a5b9dc6271c622dc841563d6781d616d0f155503161b1264be5d22b293",
        "md5": "35a40046e3758be2f27b1d18eb6b0111",
        "sha256": "e63a9a04baab80f3e68c19359faf4fae1cb5d38889a9783eda251a7e9baf895c"
      },
      "downloads": -1,
      "filename": "mavros_python_examples-0.0.3-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "35a40046e3758be2f27b1d18eb6b0111",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": ">=3.6",
      "size": 7765,
      "upload_time": "2020-11-06T11:54:47",
      "upload_time_iso_8601": "2020-11-06T11:54:47.958778Z",
      "url": "https://files.pythonhosted.org/packages/db/d4/35a5b9dc6271c622dc841563d6781d616d0f155503161b1264be5d22b293/mavros_python_examples-0.0.3-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f8acf4c9a23eff12d91a3e266b80e7a8f4b0e9bb6edefebb53cea256f7cabe19",
        "md5": "27af0305e68128f4e16e5911f9fc992d",
        "sha256": "6e1ee6f75c2379dd14a690484f41253b6150baf2baab036f559406ae2f8d79b4"
      },
      "downloads": -1,
      "filename": "mavros_python_examples-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "27af0305e68128f4e16e5911f9fc992d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6418,
      "upload_time": "2020-11-06T11:54:49",
      "upload_time_iso_8601": "2020-11-06T11:54:49.541527Z",
      "url": "https://files.pythonhosted.org/packages/f8/ac/f4c9a23eff12d91a3e266b80e7a8f4b0e9bb6edefebb53cea256f7cabe19/mavros_python_examples-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}