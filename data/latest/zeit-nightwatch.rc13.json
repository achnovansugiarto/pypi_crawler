{
  "info": {
    "author": "Zeit Online",
    "author_email": "zon-backend@zeit.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": ".. image:: https://github.com/ZeitOnline/zeit.nightwatch/workflows/Run%20tests/badge.svg\n   :alt: Test status badge\n\n\n===============\nzeit.nightwatch\n===============\n\npytest helpers for http smoke tests\n\n\nMaking HTTP requests\n====================\n\n``zeit.nightwatch.Browser`` wraps a `requests <https://pypi.org/project/requests/>`_ ``Session`` to provide some convenience features:\n\n- Instantiate with a base url, and then only use paths:\n  ``http = Browser('https://example.com'); http.get('/foo')``\n  will request https://example.com/foo\n- A convenience ``http`` fixture is provided, which can be configured via the ``nightwatch_config`` fixture.\n- Use call instead of get, because it's just that *little bit* shorter.\n  (``http('/foo')`` instead of ``http.get('/foo')``)\n- Fill and submit forms, powered by `mechanicalsoup <https://pypi.org/project/MechanicalSoup/>`_.\n  (We've customized this a bit, so that responses are only parsed with beautifulsoup if a feature like forms or links is actually used.)\n- Logs request and response headers, so pytest prints these on test failures, to help debugging.\n- Use ``sso_login(username, password)`` to log into https://meine.zeit.de.\n- See source code for specific API details.\n\n\nExample usage::\n\n    @pytest.fixture(scope='session')\n    def nightwatch_config():\n        return dict(browser=dict(\n            baseurl='https://example.com',\n            sso_url='https://meine.zeit.de/anmelden',\n        ))\n\n    def test_my_site(http):\n        r = http.get('/something')\n        assert r.status_code == 200\n\n    def test_login(http):\n        http('/login')\n        http.select_form()\n        http.form['username'] = 'joe@example.com'\n        http.form['password'] = 'secret'\n        r = http.submit()\n        assert '/home' in r.url\n\n    def test_meinezeit_redirects_to_konto_after_login(http):\n        r = http.sso_login('joe@example.com', 'secret')\n        assert r.url == 'https://www.zeit.de/konto'\n\n\nExamining HTML responses\n========================\n\nnightwatch adds two helper methods to the ``requests.Response`` object:\n\n* ``xpath()``: parses the response with ``lxml.html`` and then calls ``xpath()`` on that document\n* ``css()``: converts the selector to xpath using `cssselect <https://pypi.org/project/cssselect/>`_ and then calls ``xpath()``\n\n\nExample usage::\n\n    def test_error_page_contains_home_link(http):\n        r = http('/nonexistent')\n        assert r.status_code == 404\n        assert r.css('a.home')\n\n\nControlling a browser with Selenium\n===================================\n\n``zeit.nightwatch.WebDriverChrome`` inherits from ``selenium.webdriver.Chrome`` to provide some convenience features:\n\n- Instantiate with a base url, and then only use paths:\n  ``browser = WebDriverChrome('https://example.com'); browser.get('/foo')``\n- A convenience ``selenium`` fixture is provided, which can be configured via the ``nightwatch_config`` fixture.\n- ``wait()`` wraps ``WebDriverWait`` and converts ``TimeoutException` into an ``AssertionError``\n- Use ``sso_login(username, password)`` to log into https://meine.zeit.de\n- See source code for specific API details.\n\nnightwatch also declares a pytest commandline option ``--selenium-visible`` to help toggling headless mode,\nand adds a ``selenium`` mark to all tests that use a ``selenium`` fixture, so you can (de)select them with ``pytest -m selenium`` (or ``-m 'not selenium'``).\nSince you'll probably want to set a base url, you have to provide this fixture yourself.\n\n\nExample usage::\n\n    @pytest.fixture(scope='session')\n    def nightwatch_config():\n        return dict(selenium=dict(\n            baseurl='https://example.com',\n        ))\n\n    def test_js_based_video_player(selenium):\n        from selenium.webdriver.common.by import By\n        from selenium.webdriver.support import expected_conditions as EC\n        s = selenium\n        s.get('/my-video')\n        s.wait(EC.presence_of_element_located((By.CLASS_NAME, 'videoplayer')))\n\n\nAdvanced usecase: To intercept/modify browser requests with `selenium-wire <https://pypi.org/project/selenium-wire/>`_, install that package (e.g. ``pip install selenium-wire``) and set ``driver_class=ProxiedWebDriverChrome`` in the nightwatch ``selenium`` config::\n\n    @pytest.fixture(scope='session')\n    def nightwatch_config():\n        return dict(selenium=dict(\n            baseurl='https://example.com',\n            driver_class='ProxiedWebDriverChrome',\n        ))\n\n    def test_inject_authorization_header(selenium):\n        s = selenium\n        s.request_interceptor = lambda x: r.headers['authorization'] = 'Bearer MYTOKEN'\n        s.get('/protected-page')\n\n\nControlling a browser with playwright\n=====================================\n\nAs an alternative to Selenium (above) nightwatch also supports playwright;\nmostly by pulling in the ``pytest-playwright`` plugin, so you can use their fixtures, with some convenience features:\n\n- Configure a base url, and then only use paths:\n  ``page.goto('/foo')``\n\nExample usage::\n\n    @pytest.fixture(scope='session')\n    def nightwatch_config():\n        return dict(selenium=dict(\n            baseurl='https://example.com',\n        ))\n\n    def test_playwright_works(page):\n        page.goto('/something')\n\n\nRunning against different environments\n======================================\n\nTo help with running the same tests against e.g. a staging and production environment, nightwatch declares a pytest commandline option ``--nightwatch-environment``.\n\nA pattern we found helpful is using a fixture to provide environment-specific settings, like this::\n\n    CONFIG_STAGING = {\n        'base_url': 'https://staging.example.com',\n        'username': 'staging_user',\n        'password': 'secret',\n    }\n\n    CONFIG_PRODUCTION = {\n        'base_url': 'https://www.example.com',\n        'username': 'production_user',\n        'password': 'secret2',\n    }\n\n    @pytest.fixture(scope='session')\n    def nightwatch_config(nightwatch_environment):\n        config = globals()['CONFIG_%s' % nightwatch_environment.upper()]\n        return dict(environment=nightwatch_environment, browser=config)\n\n    def test_some_integration_that_has_no_staging(http, nightwatch_config):\n        if nightwatch_config['environment'] != 'production':\n            pytest.skip('The xyz integration has no staging')\n        r = http('/trigger-xyz')\n        assert r.json()['message'] == 'OK'\n\n\nSending test results to prometheus\n==================================\n\nLike the medieval night watch people who made the rounds checking that doors were locked,\nour use case for this library is continuous black box high-level tests that check that main functional areas of our systems are working.\n\nFor this purpose, we want to integrate the test results with our monitoring system, which is based on `Prometheus <https://prometheus.io>`_.\nWe've taken inspiration from the `pytest-prometheus <https://pypi.org/project/pytest-prometheus/>`_ plugin, and tweaked it a little to use a stable metric name, so we can write a generic alerting rule.\n\nThis uses the configured `Pushgateway <https://prometheus.io/docs/practices/pushing/>`_ to record metrics like this (the ``environment`` label is populated from ``--nightwatch-environment``, see above)::\n\n    nightwatch_check{test=\"test_error_page_contains_home_link\",environment=\"staging\",job=\"website\"}=1  # pass=1, fail=0\n\nClients should set the job name, e.g. like this::\n\n    def pytest_configure(config):\n        config.option.prometheus_job_name = 'website'\n\nThis functionality is disabled by default, nightwatch declares a pytest commandline option ``--prometheus`` which has to be present to enable pushing the metrics.\nThere also are commandline options to override the pushgateway url etc., please see the source code for those details.\n\n\nzeit.nightwatch changes\n=======================\n\n1.6.0 (2022-12-16)\n------------------\n\n- Support playwright\n\n\n1.5.1 (2022-06-24)\n------------------\n\n- Use non-deprecated selenium API\n\n\n1.5.0 (2022-03-25)\n------------------\n\n- Support `selenium-wire` in addition to `selenium`\n\n\n1.4.2 (2022-02-21)\n------------------\n\n- ZO-712: Set referer explicitly during sso_login, required for csrf validation\n\n\n1.4.1 (2021-10-27)\n------------------\n\n- Include tests & setup in tarball to support `devpi test`\n\n\n1.4.0 (2021-10-26)\n------------------\n\n- Add patch to requests\n\n\n1.3.3 (2021-04-01)\n------------------\n\n- Support contains instead of equals for `find_link`\n\n\n1.3.2 (2021-02-18)\n------------------\n\n- Record skipped tests as passed to prometheus, not failed\n\n\n1.3.1 (2021-02-17)\n------------------\n\n- Handle same metric name (and testname only as label) correctly\n\n\n1.3.0 (2021-02-17)\n------------------\n\n- Allow to configure the test browsers via a config fixture\n\n\n1.2.0 (2021-02-17)\n------------------\n\n- Add convenience `nightwatch` fixture and toplevel API\n\n- Add first test & fix package setup\n\n\n1.1.0 (2021-02-12)\n------------------\n\n- Include prometheus functionality here, to fix pushgateway bug\n  and support sending the test name as a label.\n\n- Declare namespace package properly\n\n\n1.0.0 (2021-02-11)\n------------------\n\n- Initial release\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ZeitOnline/zeit.nightwatch",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zeit.nightwatch",
    "package_url": "https://pypi.org/project/zeit.nightwatch/",
    "platform": null,
    "project_url": "https://pypi.org/project/zeit.nightwatch/",
    "project_urls": {
      "Homepage": "https://github.com/ZeitOnline/zeit.nightwatch"
    },
    "release_url": "https://pypi.org/project/zeit.nightwatch/1.6.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "pytest helpers for http smoke tests",
    "version": "1.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16126907,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb0145e16efb1cbbb198baa64c12d3d714ecb3f20c83aec6a23c5c2586b4ceb2",
          "md5": "6d7736984132f9f7b01af50676cc4fc4",
          "sha256": "12cb7233b648a9d950ee9187a014c95f861716af647b0aa671603669d734a56b"
        },
        "downloads": -1,
        "filename": "zeit.nightwatch-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6d7736984132f9f7b01af50676cc4fc4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9108,
        "upload_time": "2021-02-11T16:03:12",
        "upload_time_iso_8601": "2021-02-11T16:03:12.210243Z",
        "url": "https://files.pythonhosted.org/packages/cb/01/45e16efb1cbbb198baa64c12d3d714ecb3f20c83aec6a23c5c2586b4ceb2/zeit.nightwatch-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2e855129f6e3a4df7ff9952f39eebcb7fec98bf645251e04f8f60f7846d5c96",
          "md5": "9afdca9c103cc2990cd15aeb1b049b34",
          "sha256": "e8811c3931df897b114f75178e5ae9b56574c497742f7818e3eea84a5daad3be"
        },
        "downloads": -1,
        "filename": "zeit.nightwatch-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9afdca9c103cc2990cd15aeb1b049b34",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11199,
        "upload_time": "2021-02-12T10:23:40",
        "upload_time_iso_8601": "2021-02-12T10:23:40.145478Z",
        "url": "https://files.pythonhosted.org/packages/e2/e8/55129f6e3a4df7ff9952f39eebcb7fec98bf645251e04f8f60f7846d5c96/zeit.nightwatch-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18d5e531eeb84d547966da132c65be5cf9a3df79c9ad73890af89249dbf6c417",
          "md5": "a9c379d86239d72c883238042f5d2b7e",
          "sha256": "d98bb38d78b37f2fe2cc1d97bef0b44f5e871c1effcba10b80ade37b2d3c0a54"
        },
        "downloads": -1,
        "filename": "zeit.nightwatch-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a9c379d86239d72c883238042f5d2b7e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12812,
        "upload_time": "2021-02-17T10:17:01",
        "upload_time_iso_8601": "2021-02-17T10:17:01.819106Z",
        "url": "https://files.pythonhosted.org/packages/18/d5/e531eeb84d547966da132c65be5cf9a3df79c9ad73890af89249dbf6c417/zeit.nightwatch-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59b7b22d6da3ddfc44f398035a51a8227f41061a67436c6f3d888ee7a578f0a4",
          "md5": "3628af3003baa5540036e08a519be07d",
          "sha256": "998358c0a04ef3460e68f7a8e0c8fe54beae3978a219b2c8a8bf3f67b38f1ac3"
        },
        "downloads": -1,
        "filename": "zeit.nightwatch-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3628af3003baa5540036e08a519be07d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12722,
        "upload_time": "2021-02-17T12:53:29",
        "upload_time_iso_8601": "2021-02-17T12:53:29.809606Z",
        "url": "https://files.pythonhosted.org/packages/59/b7/b22d6da3ddfc44f398035a51a8227f41061a67436c6f3d888ee7a578f0a4/zeit.nightwatch-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2868249adf04da36e4c5e6cb0246816b2093a308b9bd188f40888cb505e3c82",
          "md5": "e36ee925ea92bfc3d93c212f755cc2c5",
          "sha256": "f8c6674fbf2d0374a6e29adc487d181dd90d0f04af57b2efe0855886b25daba3"
        },
        "downloads": -1,
        "filename": "zeit.nightwatch-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e36ee925ea92bfc3d93c212f755cc2c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12825,
        "upload_time": "2021-02-17T16:02:28",
        "upload_time_iso_8601": "2021-02-17T16:02:28.098816Z",
        "url": "https://files.pythonhosted.org/packages/c2/86/8249adf04da36e4c5e6cb0246816b2093a308b9bd188f40888cb505e3c82/zeit.nightwatch-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9bf76c753b2a8c8eb3ec86fa3e80d82fee0648b4828d9d1ae675faaa25bf7e92",
          "md5": "d3c6d894793cc792882b115fa92d15c0",
          "sha256": "e5410c6ad803c41f4015b04a67a9b8b4a5bf5cbeeaa9731281d0ee35d6e08836"
        },
        "downloads": -1,
        "filename": "zeit.nightwatch-1.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d3c6d894793cc792882b115fa92d15c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12991,
        "upload_time": "2021-02-18T07:50:10",
        "upload_time_iso_8601": "2021-02-18T07:50:10.100959Z",
        "url": "https://files.pythonhosted.org/packages/9b/f7/6c753b2a8c8eb3ec86fa3e80d82fee0648b4828d9d1ae675faaa25bf7e92/zeit.nightwatch-1.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbbbba9a78d3817486243168c2d906c44ec44fc3504f00536ea6df975314f2ad",
          "md5": "eb10ba2d396c67f3f82299b2dd73bfd3",
          "sha256": "7bdf71f4ab62e617745c324d8b3e80d23a081af78210fa8972ac746252ca0471"
        },
        "downloads": -1,
        "filename": "zeit.nightwatch-1.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "eb10ba2d396c67f3f82299b2dd73bfd3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13317,
        "upload_time": "2021-04-01T11:53:47",
        "upload_time_iso_8601": "2021-04-01T11:53:47.988501Z",
        "url": "https://files.pythonhosted.org/packages/cb/bb/ba9a78d3817486243168c2d906c44ec44fc3504f00536ea6df975314f2ad/zeit.nightwatch-1.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54918ee814a7756adb41041c19736f01037f6a7a4004f7200076d460d2de27e3",
          "md5": "d97347fe91d273a532e28b0b629797ae",
          "sha256": "9dbfe55f1457e698269d235eca290b72aa65f2f88cc28d6af58289a2693f04cc"
        },
        "downloads": -1,
        "filename": "zeit.nightwatch-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d97347fe91d273a532e28b0b629797ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9278,
        "upload_time": "2021-10-27T09:13:42",
        "upload_time_iso_8601": "2021-10-27T09:13:42.398398Z",
        "url": "https://files.pythonhosted.org/packages/54/91/8ee814a7756adb41041c19736f01037f6a7a4004f7200076d460d2de27e3/zeit.nightwatch-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d9fbabacca398e6d0ceaad9f26c1a235758bf63506409ed5fba6656bef63d75",
          "md5": "0503beca58156ebe5036d220156f4254",
          "sha256": "b9774cb18c230e479756d8478c2d989686b9941b6582f526a58b456c1c4dda25"
        },
        "downloads": -1,
        "filename": "zeit.nightwatch-1.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0503beca58156ebe5036d220156f4254",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12095,
        "upload_time": "2021-10-27T09:13:00",
        "upload_time_iso_8601": "2021-10-27T09:13:00.620887Z",
        "url": "https://files.pythonhosted.org/packages/8d/9f/babacca398e6d0ceaad9f26c1a235758bf63506409ed5fba6656bef63d75/zeit.nightwatch-1.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66f583b68816522c9a206c34ac60f2fd5f1f3afa090099a20c29ff280ded76ac",
          "md5": "db6f30ab76e72e892b01b163e3b5ea69",
          "sha256": "f790d0abdaded403b2774f4ab116233bb6986d7d63fd9d800fd1e5573f38582f"
        },
        "downloads": -1,
        "filename": "zeit.nightwatch-1.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "db6f30ab76e72e892b01b163e3b5ea69",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13515,
        "upload_time": "2022-02-21T12:28:28",
        "upload_time_iso_8601": "2022-02-21T12:28:28.793998Z",
        "url": "https://files.pythonhosted.org/packages/66/f5/83b68816522c9a206c34ac60f2fd5f1f3afa090099a20c29ff280ded76ac/zeit.nightwatch-1.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f045c24974f9c4a171421513d4ad08b43f1573b463ab366f10b00f9e7d449059",
          "md5": "cf959326938f9307a9027388ded4cf86",
          "sha256": "c86a0b8141f5a4db97240a18da3a82c6694ffd6b2859b39e3e28f1b466ff092d"
        },
        "downloads": -1,
        "filename": "zeit.nightwatch-1.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cf959326938f9307a9027388ded4cf86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17465,
        "upload_time": "2022-03-25T07:27:56",
        "upload_time_iso_8601": "2022-03-25T07:27:56.114051Z",
        "url": "https://files.pythonhosted.org/packages/f0/45/c24974f9c4a171421513d4ad08b43f1573b463ab366f10b00f9e7d449059/zeit.nightwatch-1.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a37d11bee73e1ff556e373e2837be350716d87a814befd9e7eba81ab4435f7b",
          "md5": "6159db6a63b401e087a34bb40b552ae0",
          "sha256": "fe8fd9188f986641a2d8a10c30822ce6767e3eeaa741f46bae48edcec7c72349"
        },
        "downloads": -1,
        "filename": "zeit.nightwatch-1.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6159db6a63b401e087a34bb40b552ae0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17615,
        "upload_time": "2022-06-24T11:53:29",
        "upload_time_iso_8601": "2022-06-24T11:53:29.050261Z",
        "url": "https://files.pythonhosted.org/packages/9a/37/d11bee73e1ff556e373e2837be350716d87a814befd9e7eba81ab4435f7b/zeit.nightwatch-1.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "625bef487143054f9dc245963d04a09495f26ae7db99c81049703f51f960901e",
          "md5": "64c28427524b357c5a2b1cb94a70d080",
          "sha256": "739950d6d76d55b4b9000e354015c7d2d9eaae33b875108e0c3d2d2f8094c59a"
        },
        "downloads": -1,
        "filename": "zeit.nightwatch-1.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "64c28427524b357c5a2b1cb94a70d080",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18952,
        "upload_time": "2022-12-16T14:24:30",
        "upload_time_iso_8601": "2022-12-16T14:24:30.349396Z",
        "url": "https://files.pythonhosted.org/packages/62/5b/ef487143054f9dc245963d04a09495f26ae7db99c81049703f51f960901e/zeit.nightwatch-1.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "625bef487143054f9dc245963d04a09495f26ae7db99c81049703f51f960901e",
        "md5": "64c28427524b357c5a2b1cb94a70d080",
        "sha256": "739950d6d76d55b4b9000e354015c7d2d9eaae33b875108e0c3d2d2f8094c59a"
      },
      "downloads": -1,
      "filename": "zeit.nightwatch-1.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "64c28427524b357c5a2b1cb94a70d080",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18952,
      "upload_time": "2022-12-16T14:24:30",
      "upload_time_iso_8601": "2022-12-16T14:24:30.349396Z",
      "url": "https://files.pythonhosted.org/packages/62/5b/ef487143054f9dc245963d04a09495f26ae7db99c81049703f51f960901e/zeit.nightwatch-1.6.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}