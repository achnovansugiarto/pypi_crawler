{
  "info": {
    "author": "AssemblyAI",
    "author_email": "<ryan@assemblyai.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MinImagen\n### A Minimal implementation of the [Imagen](https://imagen.research.google/) text-to-image model.\n\n<br/>\n\n<p align=\"center\"><img src=\"https://github.com/AssemblyAI-Examples/MinImagen/raw/main/images/model_structure.png?raw=True\" width=\"700\"/></p>\n\n<br/>\n\n### See [Build Your Own Imagen Text-to-Image Model](www.assemblyai.com/blog/build-your-own-imagen-text-to-image-model/) for a tutorial on how to build MinImagen.\n\n### See [How Imagen Actually Works](https://www.assemblyai.com/blog/how-imagen-actually-works/) for a detailed explanation of Imagen's operating principles.\n\n<br/>\n\nGiven a caption of an image, the text-to-image model **Imagen** will generate an image that reflects the scene described by the caption. The model is a [cascading diffusion model](https://arxiv.org/abs/2106.15282), using a [T5 text encoder](https://arxiv.org/abs/1910.10683) to generate a caption encoding which conditions a base image generator and then a sequence of super-resolution models through which the output of the base image generator is passed.\n\nIn particular, two notable contributions are the developments of:\n1. [**Noise Conditioning Augmentation**](https://www.assemblyai.com/blog/how-imagen-actually-works/#robust-cascaded-diffusion-models), which noises low-resolution conditioning images in the super-resolution models, and\n2. [**Dynamic Thresholding**](https://www.assemblyai.com/blog/how-imagen-actually-works/#dynamic-thresholding) which helps prevent image saturation at high [classifier-free guidance](https://www.assemblyai.com/blog/how-imagen-actually-works/#classifier-free-guidance) weights.\n\n<br/>\n\n## Table of Contents\n- [Attribution Note](#attribution-note)\n- [Installation](#installation)\n- [Documentation](#documentation)\n- [Usage - Command Line](#usage---command-line)\n    - [`main.py`](#mainpy) - training and image generation in sequence\n    - [`train.py`](#trainpy) - training a MinImagen instance\n    - [`inference.py`](#inferencepy) - generated images using a MinImagen instance\n- [Usage - Package](#usage---package)\n    - [Training](#training)\n    - [Image Generation](#image-generation)\n- [Additional Resources](#additional-resources)\n- [Socials](#socials)\n\n<br/>\n\n## Attribution Note\nThis implementation is largely based on Phil Wang's [Imagen implementation](https://github.com/lucidrains/imagen-pytorch).\n\n<br/>\n\n## Installation\nTo install MinImagen, run the following command in the terminal:\n```bash\n$ pip install minimagen\n```\n**Note that MinImagen requires Python3.9 or higher**\n\n<br/>\n\n## Documentation\nSee the [MinImagen Documentation](https://assemblyai-examples.github.io/MinImagen/) to learn more about the package.\n\n<br/>\n\n## Usage - Command Line\nIf you have cloned this repo, you can use the provided scripts to get started with MinImagen.\n\n<br/>\n\n### `main.py`\nFor the most basic usage, simply enter the MinImagen directory and run the following in the terminal:\n```bash\n$ python main.py\n```\nThis will create a small MinImagen instance and train it on a tiny amount of data, and then use this MinImagen instance to generate an image.\n\n<a id=\"training-directory\">After<a/> running the script, you will see a directory called `training_<TIMESTAMP>`. \n1. This directory is called a *Training Directory* and is generated when training a MinImagen instance. \n2. It contains information about the configuration (`parameters` subdirectory), and contains the model checkpoints (`state_dicts` and `tmp` directories). \n3. It also contains a `training_progress.txt` file that records training progress.\n\nYou will also see a directory called `generated_images_<TIMESTEP>`.\n1. This directory contains a folder of images generated by the model (`generated_images`).\n2. It also contains `captions.txt` files, which documents the captions that were input to get the images (where the line index of a given caption corresponds to the image number in the `generated_iamges` folder).\n3. Finally, this directory also contains `imagen_training_directory.txt`, which specifies the name of the Training Directory used to load the MinImagen instance / generate images. \n\n<br/>\n    \n### `train.py`\n\n`main.py` simply runs `train.py` and `inference.py` in series, the former to train the model and the latter to generate the image.\n\nTo train a model, simply run `train.py` and specify relevant command line arguments. The [possible arguments](https://github.com/AssemblyAI-Examples/MinImagen/blob/d7de8350db17713fb630e127c010020820953872/minimagen/training.py#L178) are:\n\n- `--PARAMETERS` or `-p`, which specifies a directory that specifies the MinImagen configuration to use. It should be structured like a `parameters` subdirectory within a Training Directory (example in [`parameters`](https://github.com/AssemblyAI-Examples/MinImagen/tree/main/parameters)).\n- `--NUM_WORKERS\"` or `-n`, which specifies the number of workers to use for the DataLoaders.\n- `--BATCH_SIZE` or `-b`, which specifies the batch size to use during training.\n- `--MAX_NUM_WORDS` or `-mw`, which specifies the maximum number of words allowed in a caption.\n- `--IMG_SIDE_LEN` or `-s`, specifies the final side length of the square images the MinImagen will output.\n- `--EPOCHS` or `-e`, which specifies the number of training epochs.\n- `--T5_NAME` `-t5`, which specifies the name of T5 encoder to use.\n- `--TRAIN_VALID_FRAC` or `-f`, which specifies the fraction of dataset to use for training (vs. validation).\n- `--TIMESTEPS` or `-t`, which specifies the number of timesteps in Diffusion Process.\n- `--OPTIM_LR` or `-lr`, which specifies the learning rate for Adam optimizer.\n- `--ACCUM_ITER` or `-ai`, which specifies the number of batches to accumulate for gradient accumulation.\n- `--CHCKPT_NUM` or `-cn`, which specifies the interval of batches to create a temporary model checkpoint at during training.\n- `--VALID_NUM` or `-vn`, which specifies the number of validation images to use. If None, uses full amount from train/valid split. The reason for including this is that, even with an e.g. 0.99 `--TRAIN_VALID_FRAC`, a prohibitively large number of images could still be left for validation for very large datasets.\n- `--RESTART_DIRECTORY` or `-rd`, training directory to load MinImagen instance from if resuming training. A new Training Directory will be created for the training, leaving the previous Training Directory from which the checkpoint is loaded unperturbed.\n- `--TESTING` or `-test`, which is used to run the script with a small MinImagen instance and small dataset for testing.\n\nFor example, to run a small training using the provided example [`parameters`](https://github.com/AssemblyAI-Examples/MinImagen/tree/main/parameters) folder, run the following in the terminal:\n\n```bash\npython train.py --PARAMETERS ./parameters --BATCH_SIZE 2 --TIMESTEPS 25 --TESTING\n```\nAfter execution, you will see a new `training_<TIMESTAMP>` [Training Directory](#training-directory) that contains the files as [listed above](#training-directory) from the training.\n    \n<br/>\n    \n### `inference.py`\n    \nTo generate images using a model from a [Training Directory](#training-directory), we can use `inference.py`. Simply run `inference.py` and specify relevant command line arguments. The possible arguments are:\n    \n- `--TRAINING_DIRECTORY\"` or `-d`, which specifies the training directory from which to load the MinImagen instance for inference.\n- `--CAPTIONS` or `-c`, which specifies either (a) a single caption to generate an image for, or (b) a filepath to a `.txt` file that contains a list of captions to generate images for, where each caption is on a new line.\n    \nFor example, to generate images for the example captions provided in [`captions.txt`](https://github.com/AssemblyAI-Examples/MinImagen/blob/main/captions.txt) using the model generated from the above training line, simply run\n    \n```bash\npython inference.py -CAPTIONS captions.txt --TRAINING_DIRECTORY training_<TIMESTAMP>    \n```\n\nwhere `TIMESTAMP` is replaced with the appropriate value from your training.\n    \n<br/>\n\n## Usage - Package\n\n### Training\n    \nA minimal training script using the `minimagen` package is shown below. See [`train.py`](https://github.com/AssemblyAI-Examples/MinImagen/blob/main/train.py) for a more built-up version of the below code.\n    \n```python\nimport os\nfrom datetime import datetime\n\nimport torch.utils.data\nfrom torch import optim\n\nfrom minimagen.Imagen import Imagen\nfrom minimagen.Unet import Unet, Base, Super, BaseTest, SuperTest\nfrom minimagen.generate import load_minimagen, load_params\nfrom minimagen.t5 import get_encoded_dim\nfrom minimagen.training import get_minimagen_parser, ConceptualCaptions, get_minimagen_dl_opts, \\\n    create_directory, get_model_params, get_model_size, save_training_info, get_default_args, MinimagenTrain, \\\n    load_restart_training_parameters, load_testing_parameters\n\n# Get device\ndevice = torch.device(\"cuda:0\" if torch.cuda.is_available() else \"cpu\")\n\n# Command line argument parser\nparser = get_minimagen_parser()\nargs = parser.parse_args()\n\n# Create training directory\ntimestamp = datetime.now().strftime(\"%Y%m%d_%H%M%S\")\ndir_path = f\"./training_{timestamp}\"\ntraining_dir = create_directory(dir_path)\n\n# Replace some cmd line args to lower computational load.\nargs = load_testing_parameters(args)\n\n# Load subset of Conceptual Captions dataset.\ntrain_dataset, valid_dataset = ConceptualCaptions(args, smalldata=True)\n\n# Create dataloaders\ndl_opts = {**get_minimagen_dl_opts(device), 'batch_size': args.BATCH_SIZE, 'num_workers': args.NUM_WORKERS}\ntrain_dataloader = torch.utils.data.DataLoader(train_dataset, **dl_opts)\nvalid_dataloader = torch.utils.data.DataLoader(valid_dataset, **dl_opts)\n\n# Use small U-Nets to lower computational load.\nunets_params = [get_default_args(BaseTest), get_default_args(SuperTest)]\nunets = [Unet(**unet_params).to(device) for unet_params in unets_params]\n\n# Specify MinImagen parameters\nimagen_params = dict(\n    image_sizes=(int(args.IMG_SIDE_LEN / 2), args.IMG_SIDE_LEN),\n    timesteps=args.TIMESTEPS,\n    cond_drop_prob=0.15,\n    text_encoder_name=args.T5_NAME\n)\n\n# Create MinImagen from UNets with specified imagen parameters\nimagen = Imagen(unets=unets, **imagen_params).to(device)\n\n# Fill in unspecified arguments with defaults to record complete config (parameters) file\nunets_params = [{**get_default_args(Unet), **i} for i in unets_params]\nimagen_params = {**get_default_args(Imagen), **imagen_params}\n\n# Get the size of the Imagen model in megabytes\nmodel_size_MB = get_model_size(imagen)\n\n# Save all training info (config files, model size, etc.)\nsave_training_info(args, timestamp, unets_params, imagen_params, model_size_MB, training_dir)\n\n# Create optimizer\noptimizer = optim.Adam(imagen.parameters(), lr=args.OPTIM_LR)\n\n# Train the MinImagen instance\nMinimagenTrain(timestamp, args, unets, imagen, train_dataloader, valid_dataloader, training_dir, optimizer, timeout=30)\n```\n\n### Image Generation\n    \nA minimal inference script using the `minimagen` package is shown below. See [`inference.py`](https://github.com/AssemblyAI-Examples/MinImagen/blob/main/inference.py) for a more built-up version of the below code.\n\n```python\nfrom argparse import ArgumentParser\nfrom minimagen.generate import load_minimagen, sample_and_save\n\n# Command line argument parser\nparser = ArgumentParser()\nparser.add_argument(\"-d\", \"--TRAINING_DIRECTORY\", dest=\"TRAINING_DIRECTORY\", help=\"Training directory to use for inference\", type=str)\nargs = parser.parse_args()\n\n# Specify the caption(s) to generate images for\ncaptions = ['a happy dog']\n\n# Use `sample_and_save` to generate and save the iamges\nsample_and_save(captions, training_directory=args.TRAINING_DIRECTORY)\n\n\n\n# Alternatively, rather than specifying a Training Directory, you can input just a MinImagen instance to use for image generation.\n# In this case, information about the MinImagen instance used to generate the images will not be saved.\nminimagen = load_minimagen(args.TRAINING_DIRECTORY)\nsample_and_save(captions, minimagen=minimagen)    \n```\n    \nTo see more of what MinImagen has to offer, or to get additional details on the scripts above, check out the [MinImagen Documentation](https://assemblyai-examples.github.io/MinImagen/)\n\n## Additional Resources\n\n- For a step-by-step guide on how to build the version of Imagen in this repository, see [Build Your Own Imagen Text-to-Image Model](www.assemblyai.com/blog/build-your-own-imagen-text-to-image-model/).\n- For an deep-dive into how Imagen works, see [How Imagen Actually Works](https://www.assemblyai.com/blog/how-imagen-actually-works/).\n- For additional learning resources for Machine Learning and Deep Learning, check out our [Blog](https://www.assemblyai.com/blog/).\n- Check out our [YouTube channel](https://www.youtube.com/c/AssemblyAI) for videos and other learning resources on Machine Learning and Deep Learning.\n- [Follow our newsletter](https://assemblyai.us17.list-manage.com/subscribe?u=cb9db7b18b274c2d402a56c5f&id=2116bf7c68) to stay up to date on our recent content.\n- Read about Diffusion Models in our [Introduction to Diffusion Models for Machine Learning](https://www.assemblyai.com/blog/diffusion-models-for-machine-learning-introduction/) guide.\n- Read more about Imagen here.\n    \n## Socials\n- Follow us on [Twitter](https://twitter.com/AssemblyAI) for more Deep Learning content.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "imagen,text-to-image,diffusion model,super resolution,image generation,machine learning,deep learning,pytorch,python",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "minimagen",
    "package_url": "https://pypi.org/project/minimagen/",
    "platform": null,
    "project_url": "https://pypi.org/project/minimagen/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/minimagen/0.0.9/",
    "requires_dist": [
      "aiohttp (==3.8.1)",
      "aiosignal (==1.2.0)",
      "async-timeout (==4.0.2)",
      "attrs (==21.4.0)",
      "certifi (==2022.6.15)",
      "charset-normalizer (==2.1.0)",
      "colorama (==0.4.5)",
      "datasets (==2.3.2)",
      "dill (==0.3.5.1)",
      "einops (==0.4.1)",
      "einops-exts (==0.0.3)",
      "filelock (==3.7.1)",
      "frozenlist (==1.3.0)",
      "fsspec (==2022.5.0)",
      "future (==0.18.2)",
      "huggingface-hub (==0.8.1)",
      "idna (==3.3)",
      "multidict (==6.0.2)",
      "multiprocess (==0.70.13)",
      "numpy (==1.23.1)",
      "packaging (==21.3)",
      "pandas (==1.4.3)",
      "Pillow (==9.2.0)",
      "pyarrow (==8.0.0)",
      "pyparsing (==3.0.9)",
      "python-dateutil (==2.8.2)",
      "pytz (==2022.1)",
      "PyYAML (==6.0)",
      "regex (==2022.7.9)",
      "requests (==2.28.1)",
      "resize-right (==0.0.2)",
      "responses (==0.18.0)",
      "sentencepiece (==0.1.96)",
      "six (==1.16.0)",
      "tdqm (==0.0.1)",
      "tokenizers (==0.12.1)",
      "torch (==1.12.0)",
      "torchvision (==0.13.0)",
      "tqdm (==4.64.0)",
      "transformers (==4.20.1)",
      "typing-extensions (==4.3.0)",
      "urllib3 (==1.26.10)",
      "xxhash (==3.0.0)",
      "yarl (==1.7.2)"
    ],
    "requires_python": "",
    "summary": "Minimal Imagen text-to-image model implementation.",
    "version": "0.0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14782316,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50f524c92782dd94b7d6247e427c396a084c1366d815861f82492e54e0c0c455",
          "md5": "838122458d6ba17885f936d8a94f5883",
          "sha256": "830e4dfed35cb7c05ec1ef7fb723a5b043b42c11997743bbbd8bbdd730e55254"
        },
        "downloads": -1,
        "filename": "minimagen-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "838122458d6ba17885f936d8a94f5883",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27617,
        "upload_time": "2022-07-16T19:34:41",
        "upload_time_iso_8601": "2022-07-16T19:34:41.555144Z",
        "url": "https://files.pythonhosted.org/packages/50/f5/24c92782dd94b7d6247e427c396a084c1366d815861f82492e54e0c0c455/minimagen-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b5cbc41d68c83d1693ea64c1ebf9d4e7e26c114fd31ebbbf1b0f9eab2683492",
          "md5": "efc991fb3ea07df0d3c2326a7045a134",
          "sha256": "1fd85ed2fea0044a74e195a914af6c856e3fa24624ae79722159ccdc340e8029"
        },
        "downloads": -1,
        "filename": "minimagen-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "efc991fb3ea07df0d3c2326a7045a134",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24969,
        "upload_time": "2022-07-16T19:34:43",
        "upload_time_iso_8601": "2022-07-16T19:34:43.247862Z",
        "url": "https://files.pythonhosted.org/packages/2b/5c/bc41d68c83d1693ea64c1ebf9d4e7e26c114fd31ebbbf1b0f9eab2683492/minimagen-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a341b7284f70e25bdf38ec48c00261000c53e71dcf2caf681314cfd45ef268c",
          "md5": "ec2e239c02558257d6a8996241e97a79",
          "sha256": "3b92386eca8133b5c53955c592593bae2d2fb18794490b665901bc37551ce7b6"
        },
        "downloads": -1,
        "filename": "minimagen-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ec2e239c02558257d6a8996241e97a79",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 52671,
        "upload_time": "2022-07-16T19:46:05",
        "upload_time_iso_8601": "2022-07-16T19:46:05.154210Z",
        "url": "https://files.pythonhosted.org/packages/1a/34/1b7284f70e25bdf38ec48c00261000c53e71dcf2caf681314cfd45ef268c/minimagen-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b174903dc13f6ef8d148776ce3b1a3fc69f34d3e0c9ab710313b1c3c8c82af4a",
          "md5": "a6b1364b323c4ee30814a70248a26860",
          "sha256": "8b3b2d7b589040c2b5819d28fb8d29ea05fb4490c95edf52c851032aa3831e60"
        },
        "downloads": -1,
        "filename": "minimagen-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a6b1364b323c4ee30814a70248a26860",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24997,
        "upload_time": "2022-07-16T19:46:07",
        "upload_time_iso_8601": "2022-07-16T19:46:07.359285Z",
        "url": "https://files.pythonhosted.org/packages/b1/74/903dc13f6ef8d148776ce3b1a3fc69f34d3e0c9ab710313b1c3c8c82af4a/minimagen-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe509ccd415b0d5e57b21cabb8fab0760769e2c4eeac4b395d4d6c19a7b4f169",
          "md5": "2280afd46831c3e4efb401d24f2ed3ff",
          "sha256": "79490ee9176364cfb4adcf16d5bcd0c357d91811b186e8afaea3f5be2041cc39"
        },
        "downloads": -1,
        "filename": "minimagen-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2280afd46831c3e4efb401d24f2ed3ff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 52668,
        "upload_time": "2022-07-16T19:50:26",
        "upload_time_iso_8601": "2022-07-16T19:50:26.801153Z",
        "url": "https://files.pythonhosted.org/packages/fe/50/9ccd415b0d5e57b21cabb8fab0760769e2c4eeac4b395d4d6c19a7b4f169/minimagen-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0bfdde197666e316098186dc75df41a833bcd9e10ade7506f275ca559e23ace8",
          "md5": "60b47f592f85cce21efb393ed8ac896a",
          "sha256": "54cb239bd9b95b808844dd547531c73436c6ec4935157b299e7729fc33cf4dd7"
        },
        "downloads": -1,
        "filename": "minimagen-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "60b47f592f85cce21efb393ed8ac896a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24939,
        "upload_time": "2022-07-16T19:50:30",
        "upload_time_iso_8601": "2022-07-16T19:50:30.783205Z",
        "url": "https://files.pythonhosted.org/packages/0b/fd/de197666e316098186dc75df41a833bcd9e10ade7506f275ca559e23ace8/minimagen-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64c888d487710b9cd0697a3744f12b33e6e7db363fa01c7bc3b0c5c9f9db933f",
          "md5": "35a77823c33064a573631132bb2f8c3d",
          "sha256": "ca9d4bb89387a7e970a6995419374ae11b10035bd4aacc69bacfd9ee5a5d9d05"
        },
        "downloads": -1,
        "filename": "minimagen-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35a77823c33064a573631132bb2f8c3d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27831,
        "upload_time": "2022-07-17T17:43:46",
        "upload_time_iso_8601": "2022-07-17T17:43:46.059188Z",
        "url": "https://files.pythonhosted.org/packages/64/c8/88d487710b9cd0697a3744f12b33e6e7db363fa01c7bc3b0c5c9f9db933f/minimagen-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c70a7347052ff1ae8ca4983a04aa9ad14085b7233bbc8816439f2870fbdb0b1",
          "md5": "d7c39de5cf78666315fae6f85e63bf24",
          "sha256": "fc5369a4618217cf32e7c4fb02a67e442c62d4e5074d2bf171cb74ed398af5e8"
        },
        "downloads": -1,
        "filename": "minimagen-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d7c39de5cf78666315fae6f85e63bf24",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25219,
        "upload_time": "2022-07-17T17:43:47",
        "upload_time_iso_8601": "2022-07-17T17:43:47.558863Z",
        "url": "https://files.pythonhosted.org/packages/6c/70/a7347052ff1ae8ca4983a04aa9ad14085b7233bbc8816439f2870fbdb0b1/minimagen-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "685b424da39eff82a5a6013b46d504c47afce120738d3e4b85d1d104ecaefcd7",
          "md5": "302809360f62b99a08fd47bee65ccbfb",
          "sha256": "ff57412e51e566c641493b328e9cba5c3ce561cd7c8490e10752885efab60103"
        },
        "downloads": -1,
        "filename": "minimagen-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "302809360f62b99a08fd47bee65ccbfb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 39564,
        "upload_time": "2022-08-16T15:25:34",
        "upload_time_iso_8601": "2022-08-16T15:25:34.631390Z",
        "url": "https://files.pythonhosted.org/packages/68/5b/424da39eff82a5a6013b46d504c47afce120738d3e4b85d1d104ecaefcd7/minimagen-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "514cbec6d703247fcd36c1a168ede562e8fbc96a99c490c521c61a8ed3c9063d",
          "md5": "0eaf6daeccb79324e80b1547d4a8d961",
          "sha256": "f17cb502a27172670e01fd88d467f54fd70692c2cb2a8a98d19d1b4e0c490591"
        },
        "downloads": -1,
        "filename": "minimagen-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0eaf6daeccb79324e80b1547d4a8d961",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37626,
        "upload_time": "2022-08-16T15:25:36",
        "upload_time_iso_8601": "2022-08-16T15:25:36.757328Z",
        "url": "https://files.pythonhosted.org/packages/51/4c/bec6d703247fcd36c1a168ede562e8fbc96a99c490c521c61a8ed3c9063d/minimagen-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6fe67e2ef4053d731cfcef4df81512aceaa1d49361aa03541d306d43ce90530",
          "md5": "5910ae629e76b9bb009c5e473ae49b89",
          "sha256": "346a3563dd2da8d608349a3f0642b93e635d19a625af2a455d56f8872e7d5c64"
        },
        "downloads": -1,
        "filename": "minimagen-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5910ae629e76b9bb009c5e473ae49b89",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 39585,
        "upload_time": "2022-08-16T15:35:03",
        "upload_time_iso_8601": "2022-08-16T15:35:03.220891Z",
        "url": "https://files.pythonhosted.org/packages/c6/fe/67e2ef4053d731cfcef4df81512aceaa1d49361aa03541d306d43ce90530/minimagen-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cbbc5bfc6ed8e86dae0f7f5b3108c82e47a38ed520271e4d0d8b85a70a2eec7",
          "md5": "b2b7ff41e939a5c1de6afeeb422dd447",
          "sha256": "4ec5ce6a8eae4f97ce933be018ef46b983f04f58aeb7ded60a0796036e2b4724"
        },
        "downloads": -1,
        "filename": "minimagen-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b2b7ff41e939a5c1de6afeeb422dd447",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37689,
        "upload_time": "2022-08-16T15:35:05",
        "upload_time_iso_8601": "2022-08-16T15:35:05.264593Z",
        "url": "https://files.pythonhosted.org/packages/6c/bb/c5bfc6ed8e86dae0f7f5b3108c82e47a38ed520271e4d0d8b85a70a2eec7/minimagen-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "492198a89afa037f0f4dc8489d20f42b61e311c04ddc6c9586f3051ff0643f9b",
          "md5": "ac6baa9930a57fb795244fb25658de3e",
          "sha256": "ed6d624f503da123d4c2e46c378e1cf533319c91834f6bb43e916d5c39a4766a"
        },
        "downloads": -1,
        "filename": "minimagen-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac6baa9930a57fb795244fb25658de3e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 39642,
        "upload_time": "2022-08-16T18:52:20",
        "upload_time_iso_8601": "2022-08-16T18:52:20.325505Z",
        "url": "https://files.pythonhosted.org/packages/49/21/98a89afa037f0f4dc8489d20f42b61e311c04ddc6c9586f3051ff0643f9b/minimagen-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eab0d4dd9777ff4c37d5284e3a92a97dc31bb6e67922506cae7dee62879650f0",
          "md5": "980a9c28f2019ff36bc21485015199ea",
          "sha256": "196b879eadd70792d7559d85555d666778c4b782fc1458b5ed8d612b0ac58846"
        },
        "downloads": -1,
        "filename": "minimagen-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "980a9c28f2019ff36bc21485015199ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37789,
        "upload_time": "2022-08-16T18:52:24",
        "upload_time_iso_8601": "2022-08-16T18:52:24.234632Z",
        "url": "https://files.pythonhosted.org/packages/ea/b0/d4dd9777ff4c37d5284e3a92a97dc31bb6e67922506cae7dee62879650f0/minimagen-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86a60c2157197e448566556c43a068459dd7a22071fa5df9b4862b06d1d666a0",
          "md5": "a6c7bf1bd71ee4a0332fe6ff0c2a208f",
          "sha256": "32f691a47ff18109686938c5100b32a1cc90aa6664e2468738d56456e283360a"
        },
        "downloads": -1,
        "filename": "minimagen-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6c7bf1bd71ee4a0332fe6ff0c2a208f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 39748,
        "upload_time": "2022-08-16T19:48:15",
        "upload_time_iso_8601": "2022-08-16T19:48:15.954669Z",
        "url": "https://files.pythonhosted.org/packages/86/a6/0c2157197e448566556c43a068459dd7a22071fa5df9b4862b06d1d666a0/minimagen-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3da8b1a8697fbd70be3d9dfdc6384ea8eb3e27c382490c86973ef0674fd6f9e5",
          "md5": "78973e79a2e74474fb3f153e8f82e4d3",
          "sha256": "43e3839c9ab250b67df3cd1cd21df92b02165474c094a58bff39b851af45f664"
        },
        "downloads": -1,
        "filename": "minimagen-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "78973e79a2e74474fb3f153e8f82e4d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37990,
        "upload_time": "2022-08-16T19:48:17",
        "upload_time_iso_8601": "2022-08-16T19:48:17.707540Z",
        "url": "https://files.pythonhosted.org/packages/3d/a8/b1a8697fbd70be3d9dfdc6384ea8eb3e27c382490c86973ef0674fd6f9e5/minimagen-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a76992ff2789a699cd0a1f42a31a2117b7a9e296fd9c64b373c0d0af4a955e7a",
          "md5": "b3102be22a4c8a79b0eab83b0abde11e",
          "sha256": "c563cbd21bdabfdd5419b63d96943e189e288cd8fff711f392264a86207cd8ab"
        },
        "downloads": -1,
        "filename": "minimagen-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3102be22a4c8a79b0eab83b0abde11e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 43018,
        "upload_time": "2022-08-16T23:30:20",
        "upload_time_iso_8601": "2022-08-16T23:30:20.936839Z",
        "url": "https://files.pythonhosted.org/packages/a7/69/92ff2789a699cd0a1f42a31a2117b7a9e296fd9c64b373c0d0af4a955e7a/minimagen-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c54fe1868637069e5cc9507e538a7b1d30299b44b1daf80e64223bd1e1d14b7a",
          "md5": "8a60ad3bebdfa45138047e14161d5c05",
          "sha256": "ddda1c57c83fabd81635a4e42a4b067eb294000f7e80ee1b35a013ec904c0835"
        },
        "downloads": -1,
        "filename": "minimagen-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "8a60ad3bebdfa45138047e14161d5c05",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 43874,
        "upload_time": "2022-08-16T23:30:23",
        "upload_time_iso_8601": "2022-08-16T23:30:23.057896Z",
        "url": "https://files.pythonhosted.org/packages/c5/4f/e1868637069e5cc9507e538a7b1d30299b44b1daf80e64223bd1e1d14b7a/minimagen-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a76992ff2789a699cd0a1f42a31a2117b7a9e296fd9c64b373c0d0af4a955e7a",
        "md5": "b3102be22a4c8a79b0eab83b0abde11e",
        "sha256": "c563cbd21bdabfdd5419b63d96943e189e288cd8fff711f392264a86207cd8ab"
      },
      "downloads": -1,
      "filename": "minimagen-0.0.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b3102be22a4c8a79b0eab83b0abde11e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 43018,
      "upload_time": "2022-08-16T23:30:20",
      "upload_time_iso_8601": "2022-08-16T23:30:20.936839Z",
      "url": "https://files.pythonhosted.org/packages/a7/69/92ff2789a699cd0a1f42a31a2117b7a9e296fd9c64b373c0d0af4a955e7a/minimagen-0.0.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c54fe1868637069e5cc9507e538a7b1d30299b44b1daf80e64223bd1e1d14b7a",
        "md5": "8a60ad3bebdfa45138047e14161d5c05",
        "sha256": "ddda1c57c83fabd81635a4e42a4b067eb294000f7e80ee1b35a013ec904c0835"
      },
      "downloads": -1,
      "filename": "minimagen-0.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "8a60ad3bebdfa45138047e14161d5c05",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 43874,
      "upload_time": "2022-08-16T23:30:23",
      "upload_time_iso_8601": "2022-08-16T23:30:23.057896Z",
      "url": "https://files.pythonhosted.org/packages/c5/4f/e1868637069e5cc9507e538a7b1d30299b44b1daf80e64223bd1e1d14b7a/minimagen-0.0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}