{
  "info": {
    "author": "",
    "author_email": "zheka2304 <author@example.com>, MaXFeeD <author@example.com>, SDesya74 <author@example.com>, 80LK <author@example.com>, DMHYT <author@example.com>, ToxesFoxes <author@example.com>, DDShadowRU <author@example.com>, NikolaySavenko <author@example.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Inner Core Mod Toolchain\n\n[![FAQ](https://img.shields.io/badge/figure_out-FAQ-888888?style=for-the-badge)](FAQ.md)\n[![Windows](https://img.shields.io/badge/windows-compatible-blue?style=for-the-badge&logo=windows&logoColor=white)](README.md)\n[![Linux](https://img.shields.io/badge/linux-compatible-yellowgreen?style=for-the-badge&logo=linux&logoColor=white)](README.md)\n\n**Inner Core Mod Toolchain for Horizon** is a toolchain that allows you to efficiently develop and build modifications for mobile Minecraft: Bedrock Edition directly from your PC.\n\n## Requirements\n\nTo work correctly, this toolchain requires:\n\n- [Python](https://www.python.org/) 3.7 or higher\n- [node.js](https://nodejs.org/en/) 10.15.1 or higher (for TypeScript modding), `tsc` must also be installed (to do this, run `npm install -g tsc`)\n- [Android NDK](https://github.com/android/ndk/wiki/Unsupported-Downloads#r16b) version r16b (for C++ modding), otherwise it can be installed by toolchain when needed\n- [Java Development Kit 1.8](https://adoptium.net/temurin/releases/?version=8) (for Java modding)\n\nIt is obligatory to install only first component, the rest can be installed when necessary.\n\n## Installation\n\nYou can simply download repository, however we recommend using install script. It will help you install all necessary components for more efficient use. Open a terminal in the folder that will be used to install toolchain and enter command following the information from interactive console.\n\n```sh\npython -c \"from urllib import request; exec(request.urlopen('https://raw.githubusercontent.com/zheka2304/innercore-mod-toolchain/master/toolchain-setup.py').read().decode('utf-8'))\"\n```\n\nAlternatively, save [toolchain-setup.py](https://raw.githubusercontent.com/zheka2304/innercore-mod-toolchain/master/toolchain-setup.py) for more installation and import options. Run the following command for more details.\n\n```sh\npython toolchain-setup.py --help\n```\n\n[![Inner Core/Horizon Mods Development | Setting up the Environment](.github/environment.jpg)](https://www.youtube.com/watch?v=ofwKkRYh97k)\n\n### Modding with Visual Studio Code\n\nFor the best user experience, it is recommended to install [Visual Studio Code](https://code.visualstudio.com/download). This environment is great for modding and can be easily improved with extensions and toolchain itself. This repository already contains all necessary files for easy interaction with this editor.\n\nIt is also recommended to install the following extensions:\n\n- ESLint (Microsoft), TSLint now deprecated\n- C/C++ Extension Pack (Microsoft)\n- Extension Pack for Java (Microsoft)\n\nJust clone or [download this repository](https://github.com/zheka2304/innercore-mod-toolchain/archive/refs/heads/master.zip) and open [toolchain.code-workspace](toolchain.code-workspace), it contains everything you need to start your journey! Use *Ctrl+Shift+B* to access all available options.\n\n### Modding with IntelliJ IDEA\n\nMost of the features are also implemented to work with [IntelliJ IDEA](https://www.jetbrains.com/idea/download/). Use build menu to access the available scripts, or use console for more information.\n\n### Modding with a third party editor\n\nInner Core Mod Toolchain does not require an installed editor, much less an environment, to develop mods. You can run build and configuration scripts directly from console or by opening files located in *toolchain/toolchain* folder. We recommend checking out the *toolchain/toolchain/python/task.py* script for details.\n\n## Multiproject? I really want it?\n\nNow toolchain works with projects as separate components. We've just made things easier for you by separating the settings of toolchain from most build.\n\nUse the imports below to simply copy your *make.json* project into updated toolchain, and if you don't like something, you can always revert to old one. Shall we try?\n\n## First build\n\nTo start the first build, use `Build` task or run `./build-all.bat` or `./build-all.sh` from console. You will be prompted to select a project, install additional components, and connect to the device. Most of these operations will no longer be required.\n\n## Configuration files\n\nThere are three types of configurations for managing projects, builds, and the toolchain itself. They describe complete process of building your project.\n\n- make.json — to control the assembly of projects\n- toolchain.json — toolchain configuration and basic properties for *make.json*\n- template.json — template for subsequent generation *make.json*\n\nA detailed description of each of the files can be found in [article](CONFIG.md).\n\n## Importing, creating and removing projects\n\nFor each of the operations, tasks `Import Project`, `New Project` and `Remove Project` are provided, respectively, as well as commands `./import-project.bat`, `./import-project.sh`, `./new- project.bat`, `./new-project.sh`, `./remove-project.bat` and `./remove-project.sh`. All operations are accompanied by interactions in console, which means that a detailed description of each of them is not required.\n\n## Selection between your projects\n\nUse the `Select Project` task or `./select-project.bat` or `./select-project.sh` command to open selection menu. In case you can't find your project, check `projectLocations` property in your *toolchain.json* or import the project using toolchain.\n\nIn addition, for Visual Studio Code tasks `Select Project by Active File`, `Build by Active File`, e.g. are provided. They are hidden from *Ctrl+P > Tasks: Run Task* menu by default, but are available from the build menu *Ctrl+Shift+B* and can be displayed by changing *.vscode/tasks.json* manually.\n\n## Distribution update\n\nRun the `Check for Updates` task or `./update-toolchain.bat` or `./update-toolchain.sh` command. Local components and toolchain itself will be rechecked for updates. When updating, only the folder of toolchain itself is affected, only configuration files and scripts are changed. The rest of files cannot be deleted under any circumstances, or they will be moved to a copy with *.bak* suffix.\n\n### Component management\n\nComponents can be installed using `Integrity Components` or commands `./component-integrity.bat` or `./component-integrity.sh`. You can install or update them at any time using the same command, there is no uninstallation for components.\n\n## Publishing project\n\nOnce development is complete, the next step is to publish to [Mod Browser](https://icmods.mineprogramming.org/). Execute the `Assemble Mod for Release` task or `./assemble-release.bat` or `./assemble-release.sh` command. An archive *<folder_name>.icmod* will be created at the root of folder. It is already completely ready for publication to site. Read [article](https://github.com/zheka2304/InnerCore/blob/master/developer-guide-en.md) for details.\n\n## Documentation and futher steps\n\nAll documentation is available at <https://docs.mineprogramming.org>. Here you can find information about available APIs, learn the basics of modding and get acquainted with existing projects.\n\nSlightly outdated, but no less useful information can be found at <https://wiki.mineprogramming.org>.\n\n## Contribution\n\nYes, and yes again! Fork repository to yourself, we will all be happy with the new functionality. Development is done on [develop branch](https://github.com/zheka2304/innercore-mod-toolchain/tree/develop), any pull requests outside this branch will be rejected.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "innercore-mod-toolchain",
    "package_url": "https://pypi.org/project/innercore-mod-toolchain/",
    "platform": null,
    "project_url": "https://pypi.org/project/innercore-mod-toolchain/",
    "project_urls": {
      "Bug Tracker": "https://github.com/zheka2304/innercore-mod-toolchain/issues",
      "Homepage": "https://github.com/zheka2304/innercore-mod-toolchain"
    },
    "release_url": "https://pypi.org/project/innercore-mod-toolchain/1664916402965/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Inner Core Mod Toolchain for Horizon is a toolchain that allows you to efficiently develop and build modifications for mobile Minecraft: Bedrock Edition directly from your PC.",
    "version": "1664916402965",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15306391,
  "releases": {
    "1664916402965": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5cbdcc3df231cf1c1e9070b576ff76132ce1a090ca7072b6959c996e8bf1d4c",
          "md5": "7793aa2e559b44ca0cd4980cd5ebc37d",
          "sha256": "db8c35b98c17ef562251c059356c1913f8162c2b68cbc7294bda6a562c4b1efd"
        },
        "downloads": -1,
        "filename": "innercore_mod_toolchain-1664916402965-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7793aa2e559b44ca0cd4980cd5ebc37d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 55080,
        "upload_time": "2022-10-04T20:51:10",
        "upload_time_iso_8601": "2022-10-04T20:51:10.273596Z",
        "url": "https://files.pythonhosted.org/packages/d5/cb/dcc3df231cf1c1e9070b576ff76132ce1a090ca7072b6959c996e8bf1d4c/innercore_mod_toolchain-1664916402965-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab8f50e17ad7002d006145dfd916b4f98879c1b69289fc7e683d97ff3f8b5eac",
          "md5": "0411d2a7b8c0d78dc025be9bcd9caa57",
          "sha256": "9a01545104dfc704db40e8aeb9cf3e6dc412f4e87bc1ad11f5e522cefc3b3a50"
        },
        "downloads": -1,
        "filename": "innercore_mod_toolchain-1664916402965.tar.gz",
        "has_sig": false,
        "md5_digest": "0411d2a7b8c0d78dc025be9bcd9caa57",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 895142,
        "upload_time": "2022-10-04T20:51:18",
        "upload_time_iso_8601": "2022-10-04T20:51:18.356286Z",
        "url": "https://files.pythonhosted.org/packages/ab/8f/50e17ad7002d006145dfd916b4f98879c1b69289fc7e683d97ff3f8b5eac/innercore_mod_toolchain-1664916402965.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d5cbdcc3df231cf1c1e9070b576ff76132ce1a090ca7072b6959c996e8bf1d4c",
        "md5": "7793aa2e559b44ca0cd4980cd5ebc37d",
        "sha256": "db8c35b98c17ef562251c059356c1913f8162c2b68cbc7294bda6a562c4b1efd"
      },
      "downloads": -1,
      "filename": "innercore_mod_toolchain-1664916402965-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7793aa2e559b44ca0cd4980cd5ebc37d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 55080,
      "upload_time": "2022-10-04T20:51:10",
      "upload_time_iso_8601": "2022-10-04T20:51:10.273596Z",
      "url": "https://files.pythonhosted.org/packages/d5/cb/dcc3df231cf1c1e9070b576ff76132ce1a090ca7072b6959c996e8bf1d4c/innercore_mod_toolchain-1664916402965-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ab8f50e17ad7002d006145dfd916b4f98879c1b69289fc7e683d97ff3f8b5eac",
        "md5": "0411d2a7b8c0d78dc025be9bcd9caa57",
        "sha256": "9a01545104dfc704db40e8aeb9cf3e6dc412f4e87bc1ad11f5e522cefc3b3a50"
      },
      "downloads": -1,
      "filename": "innercore_mod_toolchain-1664916402965.tar.gz",
      "has_sig": false,
      "md5_digest": "0411d2a7b8c0d78dc025be9bcd9caa57",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 895142,
      "upload_time": "2022-10-04T20:51:18",
      "upload_time_iso_8601": "2022-10-04T20:51:18.356286Z",
      "url": "https://files.pythonhosted.org/packages/ab/8f/50e17ad7002d006145dfd916b4f98879c1b69289fc7e683d97ff3f8b5eac/innercore_mod_toolchain-1664916402965.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}