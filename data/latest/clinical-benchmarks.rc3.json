{
  "info": {
    "author": "Alex Bennett, Pengcheng Wang",
    "author_email": "alexmbennett2@gmail.com, cheng666999@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# clinical-benchmarks\nA comprehensive set of clinical benchmarks\n\n## Installation\n\n* **(Recommended)** Create the `benchmark` environment: `conda env create -f environment.yml`\n* Pip install: `pip install clinical_benchmarks`\n\n## Usage\n\n### Regenerate data files\n\nIf you'd like to regenerate the data files from the source datasets, you'll need to have a Google Cloud Platform (GCP) account, BigQuery dataset, and GCS storage bucket prepared. These are used to (1) create intermediate tables, (2) copy those tables out of BigQuery to GCS, and finally (3) download the tables locally.\n\nAs described by the [Python Client for Google BigQuery](https://googleapis.dev/python/bigquery/latest/index.html), setup requires you to:\n\n* [Select or create a Cloud Platform project.](https://console.cloud.google.com/project)\n* [Enable billing for your project.](https://cloud.google.com/billing/docs/how-to/modify-project#enable_billing_for_a_project)\n* [Enable the Google Cloud BigQuery API.](https://cloud.google.com/bigquery)\n* [Setup Authentication.](https://googleapis.dev/python/google-api-core/latest/auth.html)\n\nOnce you have GCP project, have created a BigQuery dataset, and have created a GCP storage bucket, you can use environment variables to specify them when running the download script:\n\n```sh\nexport GCP_PROJECT='MY-GCP-PROJECT'\nexport BQ_DATASET='MY-BIGQUERY-DATASET'\nexport GCS_BUCKET='MY-STORAGE-BUCKET'\nexport MODEL_DIR='MY-SAVE-DIR'\nclinical_benchmarks download\n```\n\n**If you are not a Linux/MacOS user**\nAlternatively, you can specify the values at the command line:\n\n```sh\nclinical_benchmarks --csv_dir MY-SAVE-DIR download --project MY-GCP-PROJECT --dataset MY-BIGQUERY-DATASET --bucket MY-STORAGE-BUCKET\n```\n\nIf you prefer to mannually regenerate the data files\nCheck the data_pipeline.ipynb which prepared runnable cells to download data files\n\n### Create task dependent datasets\n#### Available Tasks\n\t- Vancoymydin Dosing Prediction (Reinforcement Learning)\n\t- Heparin Dosing Prediction (Reinforcement Learning)\n\nAll tasks are designed as data processing class, inherited from the BaseDataProcessor class.\nEach task class has two methods, **create_task_df** and **save_task_df**. (detail see task.py)\n\n#### Procedure of creating task datasets\n(check data_pipeline.ipynb for runnable example)\n1. Modify the **environment_config.env** file with your own environment variables\n2. Import necessary packages and use **dotenv** to load **environment_config.env**\n   \t```python3\n\timport dotenv\n\tenv_file = 'path_to_environment.env'\n\tdotenv.load_dotenv(env_file, override=True)\n\t```\n3. Choose a task, such as Vancomycin dosing prediction.\n4. Create the task object.\n    ```python3\n    vanco = VancomycinDosingDataProcessor()\n    ```\n5. Create task dataframe by calling method **create_task_df**. This method require two arguments, **time_step** and **agg**. \n**time_step** determines the time interval (hourly based) between each state, and **agg** determines the aggregation method that will be used during dataframe merging process, such as \"last\". \n    ```python3\n\ttime_step = 4\n\tagg = 'last'\n    vanco.create_task_df(time_step, agg)\n\t# featured_cohort_with_time is the outcome task_df\n\tdisplay(vanco.featured_cohort_with_time)\n    ```\n6. Save the task dataframe created in step 5 to a given directory by calling method **save_task_df**. This method require two arguments, **csv_dir** and **filename**. \n**csv_dir** needs to be a Path object, which specify the directory you would like to save the task_df, and **filename** is a str that represent the output file name (the filename must has a .csv.gz extension).\n    ```python3\n\tcsv_dir = Path('YOUR_SAVE_DIR')\n\tfilename = 'vancomycin_dosing_task.csv.gz'\n\t# will save vanco.featured_cohort_with_time as a .csv.gz file\n\tvanco.save_task_df(save_dir, filename)\n    ```\n7. Check your saving directory, and try it with your model!\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kind-lab/clinical-benchmarks",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "clinical-benchmarks",
    "package_url": "https://pypi.org/project/clinical-benchmarks/",
    "platform": null,
    "project_url": "https://pypi.org/project/clinical-benchmarks/",
    "project_urls": {
      "Homepage": "https://github.com/kind-lab/clinical-benchmarks"
    },
    "release_url": "https://pypi.org/project/clinical-benchmarks/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A repo of clinical benchmarks for MIMIC-IV",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14943838,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d70e2e57b556751654a1624b490056f775660abe3336262a9dc0adb217fca74",
          "md5": "a7b51b35665efc41474528f8db078383",
          "sha256": "a7e67ccba785608200684187079dae370b2e9a48c85fffab513d8d38ac771ab9"
        },
        "downloads": -1,
        "filename": "clinical_benchmarks-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a7b51b35665efc41474528f8db078383",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 1577,
        "upload_time": "2021-05-03T14:45:10",
        "upload_time_iso_8601": "2021-05-03T14:45:10.863837Z",
        "url": "https://files.pythonhosted.org/packages/8d/70/e2e57b556751654a1624b490056f775660abe3336262a9dc0adb217fca74/clinical_benchmarks-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e4b212f7e1f9d967c4943520095091f611dd4c96ad1c63a71ad21748c4b1c47",
          "md5": "2b30f33c892fca89c1df12109aebedad",
          "sha256": "0118a33baf4c5d609a7376681900e482d95605c6ecf2d4eef92661838710d77b"
        },
        "downloads": -1,
        "filename": "clinical_benchmarks-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b30f33c892fca89c1df12109aebedad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 31875,
        "upload_time": "2022-08-30T17:43:23",
        "upload_time_iso_8601": "2022-08-30T17:43:23.498614Z",
        "url": "https://files.pythonhosted.org/packages/6e/4b/212f7e1f9d967c4943520095091f611dd4c96ad1c63a71ad21748c4b1c47/clinical_benchmarks-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10bd59d01da69d561cb712208acfb9682abe87218bd40772b433d51092a8ea2d",
          "md5": "004355bb12e839feb5c45f2ac90b13ea",
          "sha256": "f0244312ce7f756ab9b1b494d4ec576789694da520a4d7732a51fd5f68873be1"
        },
        "downloads": -1,
        "filename": "clinical_benchmarks-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "004355bb12e839feb5c45f2ac90b13ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23573,
        "upload_time": "2022-08-30T17:43:25",
        "upload_time_iso_8601": "2022-08-30T17:43:25.479086Z",
        "url": "https://files.pythonhosted.org/packages/10/bd/59d01da69d561cb712208acfb9682abe87218bd40772b433d51092a8ea2d/clinical_benchmarks-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b1c31b10503b1c071cbf6daf165c27d2616cab66a15b03db9d6affe9a55ab55",
          "md5": "828564c4f36e18356952c44bcf1f1fcb",
          "sha256": "d10ffda97da7d144452fc91638f3442d1effeedec8a6b2a9aa41ce7aea875653"
        },
        "downloads": -1,
        "filename": "clinical_benchmarks-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "828564c4f36e18356952c44bcf1f1fcb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 32745,
        "upload_time": "2022-08-31T04:19:49",
        "upload_time_iso_8601": "2022-08-31T04:19:49.459357Z",
        "url": "https://files.pythonhosted.org/packages/0b/1c/31b10503b1c071cbf6daf165c27d2616cab66a15b03db9d6affe9a55ab55/clinical_benchmarks-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "633995086339770c82752ee72ca014c6df2020c69727e6e09e0062be34a8acaf",
          "md5": "b69c96748e3713f41e352f7599b43ad0",
          "sha256": "3087ae220b823d690dc1ed5f5713112784f5882512d9b281e6e5f9e66acb8aed"
        },
        "downloads": -1,
        "filename": "clinical_benchmarks-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b69c96748e3713f41e352f7599b43ad0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24174,
        "upload_time": "2022-08-31T04:19:51",
        "upload_time_iso_8601": "2022-08-31T04:19:51.093142Z",
        "url": "https://files.pythonhosted.org/packages/63/39/95086339770c82752ee72ca014c6df2020c69727e6e09e0062be34a8acaf/clinical_benchmarks-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0b1c31b10503b1c071cbf6daf165c27d2616cab66a15b03db9d6affe9a55ab55",
        "md5": "828564c4f36e18356952c44bcf1f1fcb",
        "sha256": "d10ffda97da7d144452fc91638f3442d1effeedec8a6b2a9aa41ce7aea875653"
      },
      "downloads": -1,
      "filename": "clinical_benchmarks-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "828564c4f36e18356952c44bcf1f1fcb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 32745,
      "upload_time": "2022-08-31T04:19:49",
      "upload_time_iso_8601": "2022-08-31T04:19:49.459357Z",
      "url": "https://files.pythonhosted.org/packages/0b/1c/31b10503b1c071cbf6daf165c27d2616cab66a15b03db9d6affe9a55ab55/clinical_benchmarks-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "633995086339770c82752ee72ca014c6df2020c69727e6e09e0062be34a8acaf",
        "md5": "b69c96748e3713f41e352f7599b43ad0",
        "sha256": "3087ae220b823d690dc1ed5f5713112784f5882512d9b281e6e5f9e66acb8aed"
      },
      "downloads": -1,
      "filename": "clinical_benchmarks-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b69c96748e3713f41e352f7599b43ad0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 24174,
      "upload_time": "2022-08-31T04:19:51",
      "upload_time_iso_8601": "2022-08-31T04:19:51.093142Z",
      "url": "https://files.pythonhosted.org/packages/63/39/95086339770c82752ee72ca014c6df2020c69727e6e09e0062be34a8acaf/clinical_benchmarks-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}