{
  "info": {
    "author": "Shay Hill",
    "author_email": "shay_public@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "## Non-rational Bezier curves and splines (composite Bezier curves)\n\nThis package exists mostly to create C2-continuous, non-rational cubic Bezier splines. In other words, this will approximate or interpolate a sequence of points into a sequence of non-rational cubic Bezier curves.\n\nShould be relatively fast, but this isn't suited for heavy math. This is for taking some points you have and making a nice-looking curve out of them. Specifically, a cubic Bezier spline, which is made from the type of curves used in SVG, fonts, and other vector-base programs. I am only interested in feature requests that directly apply to that purpose. This is not an exercise in completism.\n\n### install\n\n    pip install cubic_bezier_spline\n\n### this package will\n\n* Evaluate, differentiate, elevate, and split non-rational Bezier curves of any degree\n* Construct non-rational cubic Bezier splines (open and closed, approximating and interpolating)\n* Evaluate and differentiate non-rational Bezier splines of any degree\n\n### this package will not**\n\n* Work with rational Bezier splines, b-splines, NURBS, or any other generalization of Bezier curves\n* Decrease curve degree\n* Approximate curve intersections\n* Approximate the length of a curve\n* \"Stroke\" (move left or right) a curve<br/>\n\n** much of the \"will not\" features can be found here: https://github.com/dhermes/bezier\n\n### Public classes / functions\n\n    # a c2-continuous cubic Bezier spline near the control points\n    new_open_approximating_spline([(x0, y0), (x1, y1), ...])\n\n    # a c2-continuous cubic Bezier spline near the control points\n    new_closed_approximating_spline([(x0, y0), (x1, y1), ...])\n\n    # a c2-continuous cubic Bezier spline through the control points\n    new_open_interpolating_spline([(x0, y0), (x1, y1), ...])\n\n    # a c2-continuous cubic Bezier spline through the control points\n    new_closed_interpolating_spline([(x0, y0), (x1, y1), ...])\n\nAny of these will return a BezierSpline object. This object has a some of the usual methods (e.g., elevate, derivative, split) to help find path normals or do some light modeling, but you may be most interested in.\n\n    # plot the spline at a given point, where time is 0 to\n    # (number of input points + 1)\n    spline(time: float)\n\n    # an svg data string\n    # (the d=\"\" attribute of an SVG path object)\n    spline.svg_data\n\n### Examples\n\nSome of these use double and triple repeated points to create \"knots\". This isn't a special function, just a feature of Bezier math. The idea is clearer with a picture.\n\n![spline types](doc/knot_examples.png)\n\n### Most of the math can be found in:\n\n* A Primer on Bezier Curves<br/>\nhttps://pomax.github.io/bezierinfo/\n* UCLS-Math-149-Mathematics-of-Computer-Graphics-lecture-notes<br/>\nhttps://www.stkent.com/assets/pdfs/UCLA-Math-149-Mathematics-of-Computer-Graphics-lecture-notes.pdf\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cubic-bezier-spline",
    "package_url": "https://pypi.org/project/cubic-bezier-spline/",
    "platform": null,
    "project_url": "https://pypi.org/project/cubic-bezier-spline/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/cubic-bezier-spline/0.3.1/",
    "requires_dist": [
      "numpy (>=1.24.2,<2.0.0)",
      "paragraphs (>=0.2.0,<0.3.0)"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "Create C2-continuous, non-rational cubic Bézier splines. In other words, this will approximate or interpolate a sequence of points into a sequence of non-rational cubic Bézier curves.",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16783574,
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6bcdb1e081cc2e6924f919251740cc4c81b7694a1003e9798af7536b4d216930",
          "md5": "3744d9854fbb88a475eecb9df5ac8f48",
          "sha256": "38cc1a4c3b107c4b1030f40ccc7e092c47e9fdef500d942a84df79a5496dbb85"
        },
        "downloads": -1,
        "filename": "cubic_bezier_spline-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3744d9854fbb88a475eecb9df5ac8f48",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 12171,
        "upload_time": "2023-02-08T22:27:30",
        "upload_time_iso_8601": "2023-02-08T22:27:30.233678Z",
        "url": "https://files.pythonhosted.org/packages/6b/cd/b1e081cc2e6924f919251740cc4c81b7694a1003e9798af7536b4d216930/cubic_bezier_spline-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2606c59a01dbd2e9bd36eade2899aede432307cbcc27e3ae51533a7059bde195",
          "md5": "f1fa329d689a46666a9fb42140d393c7",
          "sha256": "bb68211d1630aec046072b037fe3a90295ed3f422e243e3f56e4496564b1a7db"
        },
        "downloads": -1,
        "filename": "cubic_bezier_spline-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f1fa329d689a46666a9fb42140d393c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 9764,
        "upload_time": "2023-02-08T22:27:31",
        "upload_time_iso_8601": "2023-02-08T22:27:31.842680Z",
        "url": "https://files.pythonhosted.org/packages/26/06/c59a01dbd2e9bd36eade2899aede432307cbcc27e3ae51533a7059bde195/cubic_bezier_spline-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52436b9182e9b9561f708e5238b927d955fa7d0c78ec238bf252138bbe55cfa2",
          "md5": "46399e6901f7a961bdb20d956dea42b1",
          "sha256": "86ba2ffdd5062c5b88cb8b4ecbae6aaac5145d9da89a7032a8bd0c1f8978c97d"
        },
        "downloads": -1,
        "filename": "cubic_bezier_spline-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46399e6901f7a961bdb20d956dea42b1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 12369,
        "upload_time": "2023-02-10T04:42:03",
        "upload_time_iso_8601": "2023-02-10T04:42:03.922949Z",
        "url": "https://files.pythonhosted.org/packages/52/43/6b9182e9b9561f708e5238b927d955fa7d0c78ec238bf252138bbe55cfa2/cubic_bezier_spline-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4246953a72202910f0f2f02f957be6d1bc6b89ab64aad338a944d02eef98d05",
          "md5": "1326b72e8df21b1b1a42c8db3566af9b",
          "sha256": "dcbe343c981b58bcff857e86396e87b14d36ed3b0992d2d0ce884cc41eaa41cc"
        },
        "downloads": -1,
        "filename": "cubic_bezier_spline-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1326b72e8df21b1b1a42c8db3566af9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 9875,
        "upload_time": "2023-02-10T04:42:05",
        "upload_time_iso_8601": "2023-02-10T04:42:05.103278Z",
        "url": "https://files.pythonhosted.org/packages/f4/24/6953a72202910f0f2f02f957be6d1bc6b89ab64aad338a944d02eef98d05/cubic_bezier_spline-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "52436b9182e9b9561f708e5238b927d955fa7d0c78ec238bf252138bbe55cfa2",
        "md5": "46399e6901f7a961bdb20d956dea42b1",
        "sha256": "86ba2ffdd5062c5b88cb8b4ecbae6aaac5145d9da89a7032a8bd0c1f8978c97d"
      },
      "downloads": -1,
      "filename": "cubic_bezier_spline-0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "46399e6901f7a961bdb20d956dea42b1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 12369,
      "upload_time": "2023-02-10T04:42:03",
      "upload_time_iso_8601": "2023-02-10T04:42:03.922949Z",
      "url": "https://files.pythonhosted.org/packages/52/43/6b9182e9b9561f708e5238b927d955fa7d0c78ec238bf252138bbe55cfa2/cubic_bezier_spline-0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f4246953a72202910f0f2f02f957be6d1bc6b89ab64aad338a944d02eef98d05",
        "md5": "1326b72e8df21b1b1a42c8db3566af9b",
        "sha256": "dcbe343c981b58bcff857e86396e87b14d36ed3b0992d2d0ce884cc41eaa41cc"
      },
      "downloads": -1,
      "filename": "cubic_bezier_spline-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1326b72e8df21b1b1a42c8db3566af9b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 9875,
      "upload_time": "2023-02-10T04:42:05",
      "upload_time_iso_8601": "2023-02-10T04:42:05.103278Z",
      "url": "https://files.pythonhosted.org/packages/f4/24/6953a72202910f0f2f02f957be6d1bc6b89ab64aad338a944d02eef98d05/cubic_bezier_spline-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}