{
  "info": {
    "author": "Luke Campagnola",
    "author_email": "luke.campagnola@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Other Environment",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "MetaArray\n=========\n\nMetaArray is a class that extends ndarray, adding support for per-axis metadata storage. This class is useful for\nstoring data arrays along with units, axis names, column names, axis values, etc. MetaArray objects can be indexed and\nsliced arbitrarily using named axes and columns.\n\nJustification\n-------------\n\nConsider data in the following shape:\n\n![3x5x3 cube. X: Signal(Voltage 0, Voltage 1, Current 0). Y: Time(0.0-0.5). Z: Trial(0-2)](https://raw.githubusercontent.com/outofculture/metaarray/main/example.png \"3 signals across time and trial\")\n\nNotice that each axis has a name and can store different types of meta information:\n\n* The Signal axis has named columns with different units for each column\n* The Time axis associates a numerical value with each row\n* The Trial axis uses normal integer indexes\n\nData from this array would best be accessed variously using those names:\n\n```python\ninitial_v1s = data[:, \"Voltage 1\", 0]\ntrial1_v0 = data[\"Trial\": 1, \"Signal\": \"Voltage 0\"]\ntime3_to_7 = data[\"Time\": slice(3, 7)]\n```\n\nFeatures\n--------\n\n* Per axis meta-information:\n    * Named axes\n    * Numerical values with units (e.g., \"Time\" axis above)\n    * Column names/units (e.g., \"Signal\" axis above)\n* Indexing by name:\n    * Index each axis by name, so there is no need to remember order of axes\n    * Within an axis, index each column by name, so there is no need to remember the order of columns\n* Read/write files easily (in HDF5 format)\n* Append, extend, and sort convenience functions\n\nDocumentation\n-------------\n\n### Installation\n\n`pip install MetaArray`\n\n### Instantiation\n\nAccepted Syntaxes:\n\n```python\n# Constructs MetaArray from a preexisting ndarray with the provided info\nMetaArray(ndarray, info)\n\n# Constructs MetaArray from file written using MetaArray.write()\nMetaArray(file='fileName')\n```\n\n`info` parameter: This parameter specifies the entire set of metadata for this MetaArray and must follow a specific\nformat. First, info is a list of axis descriptions:`\n\n```python\ninfo = [axis1, axis2, axis3, ...]\n```\n\nEach axis description is a dict which may contain:\n\n* \"name\": the name of the axis\n* \"values\": a list or 1D ndarray of values, one per index in the axis\n* \"cols\": a list of column descriptions `[col1, col2, col3, ...]`\n* \"units\": the units associated with the numbers listed in \"values\"\n\nAll of these parameters are optional. A column description, likewise, is a dict which may contain:\n\n* \"name\": the name of the column\n* \"units\": the units for all values under this column\n\nIn the case where meta information is to apply to the entire array, (for example, if the entire array uses the same\nunits) simply add an extra axis description to the end of the info list. All dicts may contain any extra information you\nwant.\n\nFor example, the data set depicted above would look like:\n\n```python\nMetaArray((3, 6, 3), dtype=float, info=[\n    {\"name\": \"Signal\", \"cols\": [\n        {\"name\": \"Voltage 0\", \"units\": \"V\"},\n        {\"name\": \"Voltage 1\", \"units\": \"V\"},\n        {\"name\": \"Current 0\", \"units\": \"A\"}\n    ]\n     },\n    {\"name\": \"Time\", \"units\": \"msec\", \"values\": [0.0, 0.1, 0.2, 0.3, 0.4, 0.5]},\n    {\"name\": \"Trial\"},\n    {\"note\": \"Just some extra info\"}\n]\n```\n\n### Accessing Data\n\nData can be accessed through a variety of methods:\n\n* Standard indexing -- You may always just index the array exactly as you would any ndarray\n* Named axes -- If you don't remember the order of axes, you may specify the axis to be indexed or sliced like this:\n\n```python\ndata[\"AxisName\": index]\ndata[\"AxisName\": slice(...)]\n```\n\nNote that since this syntax hijacks the original slice mechanism, you must specify a slice using slice() if you want to\nuse named axes.\n\n* Column selection--If you don't remember the index of a column you wish to select, you may substitute the column's name\n  for the index number. Lists of column names are also acceptable. For example:\n\n```python\ndata[\"AxisName\": \"ColumnName\"]\ndata[\"ColumnName\"]  # Works only if the named column exists for this axis\ndata[[\"ColumnName1\", \"ColumnName2\"]]\n```\n\n* Boolean selection--works as you might normally expect, for example:\n\n```python\nsel = data[\"ColumnName\", 0, 0] > 0.2\ndata[sel]\n```\n\n* Access axis values using MetaArray.axisValues(), or .xvals() for short.\n* Access axis units using .axisUnits(), column units using .columnUnits()\n* Access any other parameter directly through the info list with .infoCopy()\n\n### File I/O\n\n```python\ndata.write('fileName')\nnewData = MetaArray(file='fileName')\n```\n\n### Performance Tips\n\nMetaArray is a subclass of ndarray which overrides the `__getitem__` and `__setitem__` methods. Since these methods must\nalter the structure of the meta information for each access, they are quite slow compared to the native methods. As a\nresult, many builtin functions will run very slowly when operating on a MetaArray. It is recommended, therefore, that\nyou recast your arrays before performing these operations like this:\n\n```python\ndata = MetaArray(...)\ndata.mean()  # very slow\ndata.view(ndarray).mean()  # native speed\n```\n\n### More Examples\n\nA 2D array of altitude values for a topographical map might look like\n\n```python\ninfo = [\n    {'name': 'lat', 'title': 'Latitude'},\n    {'name': 'lon', 'title': 'Longitude'},\n    {'title': 'Altitude', 'units': 'm'}\n]\n```\n\nIn this case, every value in the array represents the altitude in feet at the lat, lon position represented by the array\nindex. All of the following return the value at lat=10, lon=5:\n\n```python\narray[10, 5]\narray['lon': 5, 'lat': 10]\narray['lat': 10][5]\n```\n\nNow suppose we want to combine this data with another array of equal dimensions that represents the average rainfall for\neach location. We could easily store these as two separate arrays or combine them into a 3D array with this description:\n\n```python\ninfo = [\n    {\n        'name': 'vals',\n        'cols': [\n            {'name': 'altitude', 'units': 'm'},\n            {'name': 'rainfall', 'units': 'cm/year'},\n        ],\n    },\n    {'name': 'lat', 'title': 'Latitude'},\n    {'name': 'lon', 'title': 'Longitude'},\n]\n```\n\nWe can now access the altitude values with `array[0]` or `array['altitude']`, and the rainfall values with `array[1]`\nor `array['rainfall']`. All of the following return the rainfall value at lat=10, lon=5:\n\n```python\narray[1, 10, 5]\narray['lon': 5, 'lat': 10, 'val': 'rainfall']\narray['rainfall', 'lon': 5, 'lat': 10]\n```\n\nNotice that in the second example, there is no need for an extra (4th) axis description since the actual values are\ndescribed (name and units) in the column info for the first axis.\n\nContact\n---------\nLuke Campagnola - `[firstname][lastname]@gmail.com`\n\n\nChangelog\n---------\n\n#### 2.0.3\nFixes install dependency (thanks @spahlimi).\n\n#### 2.0.0\nInitial independent release.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/outofculture/metaarray",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MetaArray",
    "package_url": "https://pypi.org/project/MetaArray/",
    "platform": null,
    "project_url": "https://pypi.org/project/MetaArray/",
    "project_urls": {
      "Homepage": "https://github.com/outofculture/metaarray"
    },
    "release_url": "https://pypi.org/project/MetaArray/2.0.5/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "N-dimensional array with metadata such as axis titles, units, and column names.",
    "version": "2.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15513316,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84db2f9f6f652ed0b6aec0a7d7e3ecda1dc4c4e2bda3d595091c6fdd8878d3fd",
          "md5": "d37f38612b4fc7247b4ed180d013b744",
          "sha256": "ac2d30860802e966adfe2243379254097d45563fc7507ff8b256491222a73a99"
        },
        "downloads": -1,
        "filename": "MetaArray-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d37f38612b4fc7247b4ed180d013b744",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18036,
        "upload_time": "2021-07-16T22:31:50",
        "upload_time_iso_8601": "2021-07-16T22:31:50.879638Z",
        "url": "https://files.pythonhosted.org/packages/84/db/2f9f6f652ed0b6aec0a7d7e3ecda1dc4c4e2bda3d595091c6fdd8878d3fd/MetaArray-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c937247af68e24466c28c105d8aaa77faddfb34ef64a3aabc97c09a50d853ab",
          "md5": "0e81200d43c73a6de1fa2e2824e2faea",
          "sha256": "48cbc3f30dd9365f82f05ace6a6ef44855083ec2d388f4936a2bb940ae6f98ec"
        },
        "downloads": -1,
        "filename": "MetaArray-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0e81200d43c73a6de1fa2e2824e2faea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18174,
        "upload_time": "2021-07-16T22:44:37",
        "upload_time_iso_8601": "2021-07-16T22:44:37.900415Z",
        "url": "https://files.pythonhosted.org/packages/5c/93/7247af68e24466c28c105d8aaa77faddfb34ef64a3aabc97c09a50d853ab/MetaArray-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "555d01ce23af47261543ff95e142c0855b29f4a64946436507242e5eee8e67cd",
          "md5": "525924647b54ab7c7d36c6bfb2d21451",
          "sha256": "87e8d6c24b48d94049d3b5b11eae952d3633400bead4e081f1c57b3073335935"
        },
        "downloads": -1,
        "filename": "MetaArray-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "525924647b54ab7c7d36c6bfb2d21451",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18233,
        "upload_time": "2021-07-16T22:50:44",
        "upload_time_iso_8601": "2021-07-16T22:50:44.337262Z",
        "url": "https://files.pythonhosted.org/packages/55/5d/01ce23af47261543ff95e142c0855b29f4a64946436507242e5eee8e67cd/MetaArray-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9acb45dd2cadb8ac0697c467e92d60fe371cf9dfc6b554df8e63a683deddb22e",
          "md5": "3cedb28cd980afecb518dd7391379fd2",
          "sha256": "ea2a6cfd79a64d243f31bd6b6446440702c0c249a84f7d12d95cc9bbf9a6078f"
        },
        "downloads": -1,
        "filename": "MetaArray-2.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3cedb28cd980afecb518dd7391379fd2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18129,
        "upload_time": "2022-04-18T16:54:34",
        "upload_time_iso_8601": "2022-04-18T16:54:34.606749Z",
        "url": "https://files.pythonhosted.org/packages/9a/cb/45dd2cadb8ac0697c467e92d60fe371cf9dfc6b554df8e63a683deddb22e/MetaArray-2.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80828131e84a40d43b314798dfb61d935075cae5dcc46b110a2c84fcdcd93f87",
          "md5": "43298c1489576fbf1586fd5fda8e73e3",
          "sha256": "7527c82a22aa748059e31cfe8d528dd6667506392632e6e90f386752aad4d8b7"
        },
        "downloads": -1,
        "filename": "MetaArray-2.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "43298c1489576fbf1586fd5fda8e73e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18166,
        "upload_time": "2022-10-21T14:10:22",
        "upload_time_iso_8601": "2022-10-21T14:10:22.282197Z",
        "url": "https://files.pythonhosted.org/packages/80/82/8131e84a40d43b314798dfb61d935075cae5dcc46b110a2c84fcdcd93f87/MetaArray-2.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56572cc63f8530e9dac897e9d026630be00622682aa412527195e878ee4e5a36",
          "md5": "ad6aa4e37b45786bed893d076c8e5642",
          "sha256": "c3e81d38109b547333d68e2950207e19d76f4f6c1b584d569a6429a3b0299f9f"
        },
        "downloads": -1,
        "filename": "MetaArray-2.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "ad6aa4e37b45786bed893d076c8e5642",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18445,
        "upload_time": "2022-10-24T19:58:45",
        "upload_time_iso_8601": "2022-10-24T19:58:45.200826Z",
        "url": "https://files.pythonhosted.org/packages/56/57/2cc63f8530e9dac897e9d026630be00622682aa412527195e878ee4e5a36/MetaArray-2.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "56572cc63f8530e9dac897e9d026630be00622682aa412527195e878ee4e5a36",
        "md5": "ad6aa4e37b45786bed893d076c8e5642",
        "sha256": "c3e81d38109b547333d68e2950207e19d76f4f6c1b584d569a6429a3b0299f9f"
      },
      "downloads": -1,
      "filename": "MetaArray-2.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "ad6aa4e37b45786bed893d076c8e5642",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 18445,
      "upload_time": "2022-10-24T19:58:45",
      "upload_time_iso_8601": "2022-10-24T19:58:45.200826Z",
      "url": "https://files.pythonhosted.org/packages/56/57/2cc63f8530e9dac897e9d026630be00622682aa412527195e878ee4e5a36/MetaArray-2.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}