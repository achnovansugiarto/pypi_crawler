{
  "info": {
    "author": "Seyed Pozveh",
    "author_email": "s.pozveh@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# piplyr package\nThe piplyr package is a simple wrapier around the pandas library that makes it easy to perform common data manipulation similar to dplyr style. The package provides a piplyr class that can be initialized with a DataFrame and provides methods for performing tasks such as group by, sort by, select, drop, rename, filter and SQL like functionality.\n\n## Installation\nYou can install the package using pip:\n\n```\npip install piplyr==0.0.8\nfrom piplyr.main import piplyr\n```\n\nUsage\nThe package can be used by first importing the piplyr class and then initializing it with a DataFrame. The package provides several methods that can be used to manipulate the DataFrame.\n\n```\nimport pandas as pd\nfrom piplyr.main import piplyr\n```\n\n\n```\n## Create a sample DataFrame\ndf = pd.DataFrame({'A': [1, 2, 3, 4], 'B': [5, 6, 7, 8],'C': ['a','b','c','d']})\n\n## Initialize the piplyr class with the DataFrame\npi = piplyr(df)\n```\n\n\n## Methods\n\n### group_by\nThe group_by method can be used to group the DataFrame by a specified column.\n\n```\npi.group_by(\"C\")\n```\n\n### sort_by\nThe sort_by method can be used to sort the DataFrame by a specified column in ascending or descending order.\n\n```\npi.sort_by(\"A\", False)\n```\n\n### select\nThe select method can be used to select specified columns from the DataFrame.\n\n```\npi.select(\"A\", \"C\")\n```\n### drop_col\nThe drop_col method can be used to drop a specified column from the DataFrame.\n\n```\npi.drop_col(\"A\")\n```\n### rename_col\nThe rename_col method can be used to rename columns of the DataFrame.\n\n```\npi.rename_col(\n    {\n \"A\":\"A_A\",\n \"B\":\"NEW_B_NAME\"\n    }\n)\n```\n\n### filter\nThe filter method can be used to filter the DataFrame based on a given query. The query should be in the format of a valid pandas query, using the syntax df.query(\"column_name pierator value\")\n\n```\npi.filter(\"A > 2\")\n\n```\n\n### mutate\nThis method allows you to create a new column in your dataframe by apilying an expression to existing columns.\n```\npi.mutate('C', 'A + B')\n```\n\n### sql_mutate\nCreates a new variable in the dataframe by performing a SQL mutate pieration on an existing variable or an expression.\n\n```\npi.sql_mutate('x + y', 'sum')\n```\n\n### sql_plyr\nSQL like functionality\nThe piplyr also provides SQL like functionality by creating a SQLite connection and saving the DataFrame as a table in memory. The query method can be used to execute a SQL query on the DataFrame.\nWhen refering to the datat frame inside the query, you should use 'df' no matter what the name of your\ndataframe is.\n\n```\n# Execute a SQL query\ndf_with_a_name = pd.DataFrame({'x': [1, 2, 3], 'y': [4, 5, 6]})\npi = piplyr(df_with_a_name)\npi.sql_query('SELECT * FROM df WHERE x > 2')\n```\n\n### case_when\nThis is similar to case when function of SQL, \nif you would like to replace an existing column with the results, use it as a target_var\n\n``` \ndf = pd.DataFrame({'A': [1, 2, 3, 4], 'B': [5, 6, 7, 8],'C': ['a','b','c','d']})\npi = piplyr(df)\n\npi.case_when(\n [\n   (\" C == 'a' \",\"AAA\"),\n   (\"C in ('b','c','d')\",\"OTHER\"),\n ],\n target_var=\"new_col\"\n ) \n\n```\n\n### summarize\nThis method allows to perform groupby and aggregation on the dataframe.\nThe aggregation function to apily to the variable can be a string for built-in aggregation functions such as 'mean' or 'sum'\nor a user-defined function.\n\n\n### Chaining\nAll the methods provided by the piplyr class return the piplyr object, allowing you to chain multiple methods together to perform multiple data manipulation tasks in one line.\n\n```\npi.group_by(\"C\").sort_by(\"A\", False).select(\"A\", \"C\")\n```\n### clean_names()\nThis method can be used to clean the name of variables\n\n```\ndf = pd.DataFrame({'key is': ['A', 'B', 'C', 'D'], 'Value_ dD': [1, 1, 1, 4]})\npiplyr(df).clean_names().to_df\n```\n\n### skim\nThis method provides a compact overview of the key characteristics of a dataframe.\nIt can also be used after other data manipulation pierations such as select, sql_dplyr, filter, etc. \n```\npi.skim()\n```\n\n\n## separate():\n\n Separates a column into multiple columns based on a separator.\n\n Args:\n     col: The name of the column to be separated\n     into: A list of names for the new columns that will be created\n     sep: The separator used to split the values in `col` (default is None, meaning to split on whitespace)\n     remove: A flag to remove the original column (default is False)\n     extra: What to do if there are extra values that don't fit in the new columns, pitions are 'drop', 'merge' and 'warn' (default is 'warn')\n \n\n```\n  ### Example:\n     df = pd.DataFrame({'A': [1, 2, 3, 4], 'B': ['a_/*b', 'c_d', 'e_f', 'g*_h']})\n     pi = piplyr(df)\n     pi.separate(col='B', into=['B1', 'B2'], sep='_', remove=True)\n \n```\n\n ## str_pad\n  \n Pads strings in the dataframe to the specified width\n\n Args:\n     width: The width to pad the strings to\n     side: The side to pad the strings (either 'left' or 'right', default is 'left')\n     pad: The character to pad the strings with (default is ' ')\n\n\n```\n  ### Example:\n     df = pd.DataFrame({'A': ['hello', 'world', 'foo', 'bar']})\n     pi = piplyr(df)\n     pi.str_pad(10, side='right', pad='*')\n ``` \n \n\n ## str_sub\n\n\n Replaces a pattern in strings in the dataframe with a replacement string\n\n Args:\n     pattern: The pattern to search for in the strings\n     replacement: The replacement string\n\n\n```\n  ### Example:\n     df = pd.DataFrame({'A': ['hello', 'world', 'foo', 'bar']})\n     pi = piplyr(df)\n     pi.str_sub('o', '0')\n  \n ```\n\n ## str_extract\n  \n Extracts the first occurrence of a pattern from each string in a column\n \n Args:\n     pattern: A regular expression pattern to match in the strings\n     col: The column name to extract the substring from. If None, apilies to all columns with object dtype.\n \n ```\n  ### Example:\n     df = pd.DataFrame({'col1': ['abc123', 'def456', 'ghi789']})\n     pi = piplyr(df)\n     pi.str_extract(pattern='[a-z]+', col='col1')\n  \n ```\n\n\n\n ## str_detect\n Check if a string pattern is present in a specific column\n\n Args:\n     col: the name of the column to be searched\n     pattern: the string pattern to be searched for\n\n ```\n  ### Example:\n     df = pd.DataFrame({'col1': ['abc', 'def', 'ghi', 'jkl']})\n     pi = piplyr(df)\n     pi.str_detect(col='col1', pattern='a')\n  \n ```\n    \n ## fct_lump\n  \n Lumps levels of a factor column into 'Other' level for levels that apiear less than n times\n\n Args:\n     column: The name of the column containing the factor levels\n     n: The number of times a level should apiear to avoid being lumped (default is 10)\n     other_level: The name of the new level for the lumped levels (default is 'Other')\n \n ```\n  ### Example:\n     df = pd.DataFrame({'A': [1, 2, 3, 4], 'B': ['A', 'B', 'C', 'A']})\n     pi = piplyr(df)\n     pi.fct_lump(column='B', n=2, other_level='Rare')\n  \n ```\n\n ## fct_infreq\n  \n Lumps levels of a factor column into 'Other' level for levels that apiear less than a fraction of total\n\n Args:\n     column: The name of the column containing the factor levels\n     frac: The fraction of the total number of times a level should apiear to avoid being lumped (default is 0.01)\n     other_level: The name of the new level for the lumped levels (default is 'Other')\n \n ```\n  ### Example:\n     df = pd.DataFrame({'A': [1, 2, 3, 4], 'B': ['A', 'B', 'C', 'A']})\n     pi = piplyr(df)\n     pi.fct_infreq(column='B', frac=0.5, other_level='Rare')\n  \n ```\n ## fct_relevel\n  \n Relevels the factor column to put the reference level first\n\n Args:\n     col: The name of the factor column\n     ref: The reference level to put first\n     after: Whether to put the reference level after (True) or before (False) the other levels (default is True)\n \n ```\n  ### Example:\n     df = pd.DataFrame({'col1': [1, 2, 3, 4], 'col2': ['A', 'B', 'C', 'D']})\n     pi = piplyr(df)\n     pi.fct_relevel(col='col2', ref='B', after=False)\n  \n ```\n\n    \n ## fct_recode\n  \n Recodes factor levels in a given column\n\n Args:\n     col: The column name to be recoded\n     values: The old factor levels to be recoded\n     labels: The new factor levels (default is None)\n     drop: Specifies whether to drop unused levels (default is False)\n\n\n## Recommened style of writing codes: \n### Example 1\n```\n\ndf = pd.DataFrame({'x': [1, 2, 3, 4, 5, 6],\n 'y': [4, 5, 6, 7, 8, 9],\n 'z':['a','b','a','b','a','a']\n       })\n\npi  = piplyr(df)\n\n(\npi.\nmutate('x+y','x2').\nsql_plyr('SELECT x,x2,y,z, (AVG(x2) over()) as x3 FROM df').\nselect('x','x2','x3','z').\nfilter('x > 2')\n)\n\n```\n### Example 2\n```\n\ndf = pd.DataFrame({'x': [1, 2, 3, 4, 5, 6],\n 'y': [4, 5, 6, 7, 8, 9],\n 'z':['a','b','a','b','a','a']\n       })\n\n\npi  = piplyr(df)\n(\npi.\nmutate('x+y','x2').\nsql_plyr('SELECT x,x2,y,z, (AVG(x2) over()) as x3 FROM df').\nselect('x','x2','x3','z').\nfilter('x > 2').\nsummarize(group_var='z',var='x2',agg_func='mean')\n).to_df.reset_index()\n\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "piplyr",
    "package_url": "https://pypi.org/project/piplyr/",
    "platform": null,
    "project_url": "https://pypi.org/project/piplyr/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/piplyr/0.0.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Pandas with dplyr style",
    "version": "0.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16691793,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4029205414ad2446c85c59cff8c5b3afcb40f9175d991ef924bef56f758f84b1",
          "md5": "4d49c2240b01dded9c9aede8799ca228",
          "sha256": "079f36359d2e044774c7968989dc3163dc7fcdfa539297d37d93657c8f6130d6"
        },
        "downloads": -1,
        "filename": "piplyr-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d49c2240b01dded9c9aede8799ca228",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9685,
        "upload_time": "2023-02-04T01:29:37",
        "upload_time_iso_8601": "2023-02-04T01:29:37.046655Z",
        "url": "https://files.pythonhosted.org/packages/40/29/205414ad2446c85c59cff8c5b3afcb40f9175d991ef924bef56f758f84b1/piplyr-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e1565840ab0e33e3ef4c8a95b12ee496df1f44e00d1056ccda2dcd4ee87b1d5",
          "md5": "cd8d8dc16b502ffb330f0497fb29875d",
          "sha256": "4088dcd0193e5d48880599cc85e30ff8caf93d1677672695e982942d36030887"
        },
        "downloads": -1,
        "filename": "piplyr-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cd8d8dc16b502ffb330f0497fb29875d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10421,
        "upload_time": "2023-02-04T01:29:39",
        "upload_time_iso_8601": "2023-02-04T01:29:39.332412Z",
        "url": "https://files.pythonhosted.org/packages/3e/15/65840ab0e33e3ef4c8a95b12ee496df1f44e00d1056ccda2dcd4ee87b1d5/piplyr-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c37caf50c9a4a39a39c1c4d48459d89998fa67bbd0519926a4673afce486a63a",
          "md5": "2aa548ff100de0825faaee4a53c8c1b3",
          "sha256": "e1b9ea94de9b94ea9347704c73520386fda1e99c1f370060b0cf48106f91d29a"
        },
        "downloads": -1,
        "filename": "piplyr-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2aa548ff100de0825faaee4a53c8c1b3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9664,
        "upload_time": "2023-02-04T01:32:50",
        "upload_time_iso_8601": "2023-02-04T01:32:50.418778Z",
        "url": "https://files.pythonhosted.org/packages/c3/7c/af50c9a4a39a39c1c4d48459d89998fa67bbd0519926a4673afce486a63a/piplyr-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "283f43a964c4973244def7fa711cc57a1eefb4cb6452d6a19609fdd62f53041f",
          "md5": "f4ff40522b1d286a7a190639de9c6a5f",
          "sha256": "ecf53e649008a7f65b4ae02cff96e37b74aa94c42d465691c378e2492faa80d4"
        },
        "downloads": -1,
        "filename": "piplyr-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f4ff40522b1d286a7a190639de9c6a5f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10373,
        "upload_time": "2023-02-04T01:32:52",
        "upload_time_iso_8601": "2023-02-04T01:32:52.261751Z",
        "url": "https://files.pythonhosted.org/packages/28/3f/43a964c4973244def7fa711cc57a1eefb4cb6452d6a19609fdd62f53041f/piplyr-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "863c06d198a965035c02120190fc1c395867a90ecd616cf97539c3f6f38c29d8",
          "md5": "c6b43736d03565f345e0688563e3ec01",
          "sha256": "76fd837fc6eb2a0ef81843d50927ed41e00456cad1aad922b60892244238a64e"
        },
        "downloads": -1,
        "filename": "piplyr-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c6b43736d03565f345e0688563e3ec01",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9684,
        "upload_time": "2023-02-04T01:45:19",
        "upload_time_iso_8601": "2023-02-04T01:45:19.037744Z",
        "url": "https://files.pythonhosted.org/packages/86/3c/06d198a965035c02120190fc1c395867a90ecd616cf97539c3f6f38c29d8/piplyr-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4fd9e03d3fd5352eb4063bb193dbd399de28079a449f45ef4c341814f86316d2",
          "md5": "939ba0f70480cbdc304aacd2f68586e2",
          "sha256": "9da7b60cbad5d19c672fb633da0dfbd1d5107eeebae964a385c2cc76b1a81106"
        },
        "downloads": -1,
        "filename": "piplyr-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "939ba0f70480cbdc304aacd2f68586e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10383,
        "upload_time": "2023-02-04T01:45:21",
        "upload_time_iso_8601": "2023-02-04T01:45:21.379725Z",
        "url": "https://files.pythonhosted.org/packages/4f/d9/e03d3fd5352eb4063bb193dbd399de28079a449f45ef4c341814f86316d2/piplyr-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca06a7df301aa0add18991b74b99644530f646d25e71d80c988663f4cf5a4854",
          "md5": "53f5970cf4c290cd0bd5aabec738b9da",
          "sha256": "9116da8817b24b1d5e71d750a08773eefd68eed2c11bb2f1c186a5a189c20f7e"
        },
        "downloads": -1,
        "filename": "piplyr-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "53f5970cf4c290cd0bd5aabec738b9da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10849,
        "upload_time": "2023-02-04T02:17:41",
        "upload_time_iso_8601": "2023-02-04T02:17:41.606042Z",
        "url": "https://files.pythonhosted.org/packages/ca/06/a7df301aa0add18991b74b99644530f646d25e71d80c988663f4cf5a4854/piplyr-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c7ad886ed8e1e83659f0b8395d1432a7921419819fb0ad8f3722eabad68422c",
          "md5": "8586542c40f270f3b7425dff574c1c78",
          "sha256": "933c9f8f0c7af63ccb5e34a3801de4d94f6d434cf805857cc94abf07f68b41fb"
        },
        "downloads": -1,
        "filename": "piplyr-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "8586542c40f270f3b7425dff574c1c78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11139,
        "upload_time": "2023-02-04T02:17:43",
        "upload_time_iso_8601": "2023-02-04T02:17:43.861280Z",
        "url": "https://files.pythonhosted.org/packages/8c/7a/d886ed8e1e83659f0b8395d1432a7921419819fb0ad8f3722eabad68422c/piplyr-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52f8068c8dbe80de0ee9b111d1fce741f6fe419f8dc6f5732662dba7aca18794",
          "md5": "710e199e2d6c2f407e3d55946e2c7f3d",
          "sha256": "fe87ecef6bbb7fdbdfe11b394ed19bd544ce63378b8bb244802a5ec8c6e5e1e5"
        },
        "downloads": -1,
        "filename": "piplyr-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "710e199e2d6c2f407e3d55946e2c7f3d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10854,
        "upload_time": "2023-02-04T03:53:26",
        "upload_time_iso_8601": "2023-02-04T03:53:26.389726Z",
        "url": "https://files.pythonhosted.org/packages/52/f8/068c8dbe80de0ee9b111d1fce741f6fe419f8dc6f5732662dba7aca18794/piplyr-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f6691f5efac976cfeb797833b46ec5e89d2819db588fcf12f495747720614a3",
          "md5": "9bece986e97c01075dca4b47f08dc508",
          "sha256": "122bb910e40b32b21303cb79045815566c4ab406e490617a100f4092d73f8d6d"
        },
        "downloads": -1,
        "filename": "piplyr-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "9bece986e97c01075dca4b47f08dc508",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11154,
        "upload_time": "2023-02-04T03:53:28",
        "upload_time_iso_8601": "2023-02-04T03:53:28.269006Z",
        "url": "https://files.pythonhosted.org/packages/9f/66/91f5efac976cfeb797833b46ec5e89d2819db588fcf12f495747720614a3/piplyr-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b46cb7297144bdfc3cbeab754037b72d545e24d53ca8e3f13e61109e39db842e",
          "md5": "5dc8a8d34486e40c748447bd6e79de03",
          "sha256": "70f67bbd9f3f8c5b11cc870e3dec1e525cd79e10e335785dc95f80ed3917f382"
        },
        "downloads": -1,
        "filename": "piplyr-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5dc8a8d34486e40c748447bd6e79de03",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10879,
        "upload_time": "2023-02-04T08:25:46",
        "upload_time_iso_8601": "2023-02-04T08:25:46.356388Z",
        "url": "https://files.pythonhosted.org/packages/b4/6c/b7297144bdfc3cbeab754037b72d545e24d53ca8e3f13e61109e39db842e/piplyr-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b2fd99685c410364fb3711d6892c22f5265286b789de3438b9bbe42ff19e035",
          "md5": "ae29378ab91a7ab0c9e273fd5264ed81",
          "sha256": "67bb8042dbbfa5ce3368d02f8b2be014d0012bd2b21275fae0cecde7795023d3"
        },
        "downloads": -1,
        "filename": "piplyr-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "ae29378ab91a7ab0c9e273fd5264ed81",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11157,
        "upload_time": "2023-02-04T08:25:48",
        "upload_time_iso_8601": "2023-02-04T08:25:48.581065Z",
        "url": "https://files.pythonhosted.org/packages/6b/2f/d99685c410364fb3711d6892c22f5265286b789de3438b9bbe42ff19e035/piplyr-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b46cb7297144bdfc3cbeab754037b72d545e24d53ca8e3f13e61109e39db842e",
        "md5": "5dc8a8d34486e40c748447bd6e79de03",
        "sha256": "70f67bbd9f3f8c5b11cc870e3dec1e525cd79e10e335785dc95f80ed3917f382"
      },
      "downloads": -1,
      "filename": "piplyr-0.0.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5dc8a8d34486e40c748447bd6e79de03",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10879,
      "upload_time": "2023-02-04T08:25:46",
      "upload_time_iso_8601": "2023-02-04T08:25:46.356388Z",
      "url": "https://files.pythonhosted.org/packages/b4/6c/b7297144bdfc3cbeab754037b72d545e24d53ca8e3f13e61109e39db842e/piplyr-0.0.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6b2fd99685c410364fb3711d6892c22f5265286b789de3438b9bbe42ff19e035",
        "md5": "ae29378ab91a7ab0c9e273fd5264ed81",
        "sha256": "67bb8042dbbfa5ce3368d02f8b2be014d0012bd2b21275fae0cecde7795023d3"
      },
      "downloads": -1,
      "filename": "piplyr-0.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "ae29378ab91a7ab0c9e273fd5264ed81",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11157,
      "upload_time": "2023-02-04T08:25:48",
      "upload_time_iso_8601": "2023-02-04T08:25:48.581065Z",
      "url": "https://files.pythonhosted.org/packages/6b/2f/d99685c410364fb3711d6892c22f5265286b789de3438b9bbe42ff19e035/piplyr-0.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}