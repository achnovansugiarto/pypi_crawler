{
  "info": {
    "author": "Martine S. Lenders",
    "author_email": "m.lenders@fu-berlin.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "=======================================\npylibschc: A python wrapper for libSCHC\n=======================================\n\n.. image:: https://github.com/anr-bmbf-pivot/pylibschc/actions/workflows/test.yml/badge.svg\n   :target: https://github.com/anr-bmbf-pivot/pylibschc/actions/workflows/test.yml\n\n.. image:: https://codecov.io/gh/anr-bmbf-pivot/pylibschc/branch/main/graph/badge.svg?token=KPOQ0ERP9H\n   :target: https://codecov.io/gh/anr-bmbf-pivot/pylibschc\n\n.. image:: https://img.shields.io/pypi/status/pylibschc\n   :alt: PyPI - Status\n   :target: https://pypi.org/project/pylibschc/\n\n.. image:: https://img.shields.io/pypi/pyversions/pylibschc\n   :alt: PyPI - Python Version\n   :target: https://pypi.org/project/pylibschc/\n\nThis provides a pythonic wrapper for `libSCHC`_.\n\nInstallation\n============\n\nYou can use ``pip`` to install the package once from `PyPI`_:\n\n.. code:: bash\n\n   pip install pylibschc\n\nUsage\n=====\n\nMore documentation can be found `here <https://anr-bmbf-pivot.github.io/pylibschc>`_.\n\nRules\n-----\nRules are managed using a `pydantic`_ model, i.e., they can be loaded from a correctly typed\ndictionary (e.g. generated from a JSON or YAML file) using the |pylibschc.rules|_ module:\n\n    >>> import json\n    >>> from pylibschc.rules import Config\n    >>>\n    >>> with open(\"tests/artifacts/rules_example.json\", encoding=\"utf-8\") as f:\n    ...    rules = Config(**json.load(f))\n    ...    config = rules.deploy()\n\n**Do not forget** to call the |pylibschc.rules.Config.deploy|_ method if you change any rules to\nre-deploy the rules with libSCHC.\n\nThe header file for the rules, so they can be used with libSCHC on an embedded device, can be\ngenerated using\n\n    >>> with open(\"rule_config.h\", \"w\", encoding=\"utf-8\") as f:\n    ...     written = f.write(rules.to_c_header())\n\nAn example for such a dictionary is provided in `rules_example.json`_ as JSON, the documentation of\nthe concrete `pydantic`_ model you can find its\n`API reference <https://anr-bmbf-pivot.github.io/pylibschc/pylibschc/rules.html>`_.\n\nCompression/Decompression\n-------------------------\n\nBoth compression and decompression can be achieved by using the\n|pylibschc.compressor.CompressorDecompressor|_ class. We use `scapy`_ in our example\nto construct a valid CoAP over IPv6 packet for compression for which the\n|pylibschc.compressor.CompressorDecompressor.output|_ method is\ncalled:\n\n    >>> from scapy.all import IPv6, UDP, raw\n    >>> from scapy.contrib.coap import CoAP\n    >>> import pylibschc.compressor\n    >>>\n    >>> comp_dec = pylibschc.compressor.CompressorDecompressor(device=config.devices[0])\n    >>> pkt = raw(\n    ...     IPv6(hlim=64, src=\"2001:db8::1\", dst=\"2001:db8:1::2\")\n    ...     / UDP(\n    ...         sport=5683,\n    ...         dport=61618,\n    ...     )\n    ...     / CoAP(\n    ...         ver=1,\n    ...         code=\"2.05 Content\",\n    ...         type=\"NON\",\n    ...         msg_id=0x23B3,\n    ...         token=b\"\\x32\\x3a\\xf3\\xa3\",\n    ...         paymark=b\"\\xff\",\n    ...     )\n    ...     / (\n    ...         b'[{\"id\":1, \"name\":\"CJ.H.L.(Joe) Lecomte) Heliport\",\"code\":\"YOY\",\"country\":\"CA\"}]'\n    ...     )\n    ... )\n    >>> res, bit_array = comp_dec.output(pkt, direction=pylibschc.rules.Direction.UP)\n    >>> res\n    <CompressionResult.COMPRESSED: 1>\n    >>> bit_array.buffer\n    b'\\x01\\t3#\\xaf:5\\xb7\\xb2&\\x96B#\\xa3\\x12\\xc2\\x02&\\xe6\\x16\\xd6R#\\xa2$4\\xa2\\xe4\\x82\\xe4\\xc2\\xe2\\x84\\xa6\\xf6R\\x92\\x04\\xc6V6\\xf6\\xd7FR\\x92\\x04\\x86V\\xc6\\x97\\x06\\xf7\\'B\"\\xc2&6\\xf6FR#\\xa2%\\x94\\xf5\\x92\"\\xc2&6\\xf7V\\xe7G\\'\\x92#\\xa2$4\\x12\\'\\xd5\\xd0'\n\nFor decompression, the |pylibschc.compressor.CompressorDecompressor.input|_ method is called:\n\n    >>> comp_dec.input(bit_array, direction=pylibschc.rules.Direction.UP)\n    b'`\\x00\\x00\\x00\\x00`\\x11@ \\x01\\r\\xb8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01 \\x01\\r\\xb8\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x163\\xf0\\xb2\\x00`r\\xf2TE#\\xb32:\\xf3\\xa3\\xff[{\"id\":1, \"name\":\"CJ.H.L.(Joe) Lecomte) Heliport\",\"code\":\"YOY\",\"country\":\"CA\"}]'\n    >>> pkt == comp_dec.input(bit_array, direction=pylibschc.rules.Direction.UP)\n    True\n\nBoth |pylibschc.compressor.CompressorDecompressor.input|_ and\n|pylibschc.compressor.CompressorDecompressor.output|_ take either |pylibschc.libschc.BitArray|_- or\n|bytes|_-typed variables as input.\n\nFragmentation/Reassembly\n------------------------\n\nFor fragmentation, call the |pylibschc.fragmenter.FragmenterReassembler.output|_ method of a\n|pylibschc.fragmenter.FragmenterReassembler|_ object. To actually send then from the, a send\nfunction needs to be `registered for the device`_ of the fragmenter. For reassembly or to handle\nacknowledgments, call the |pylibschc.fragmenter.FragmenterReassembler.input|_ method of a\n|pylibschc.fragmenter.FragmenterReassembler|_ object. Both\n|pylibschc.fragmenter.FragmenterReassembler.input|_ and\n|pylibschc.fragmenter.FragmenterReassembler.output|_, take either |pylibschc.libschc.BitArray|_- or\n|bytes|_-typed variables as input.\n\n    >>> import asyncio\n    >>> import logging\n    >>> import pylibschc.fragmenter\n    >>>\n    >>> fragmenter_queue = None\n    >>> loop = None\n    >>> timer_tasks = {}\n    >>> reassembly_buffer = None\n    >>> # shorten waiting times for this example\n    >>> config.devices[0].duty_cycle_ms = 500\n    >>>\n    >>> def send(buffer):\n    ...     fragmenter_queue.put_nowait({\"cmd\": \"send\", \"data\": buffer})\n    ...     return len(buffer)\n    ...\n    >>> def post_timer_task(conn, timer_task, delay_sec, arg):\n    ...     if conn in timer_tasks:\n    ...         remove_timer_entry(conn)\n    ...     timer_tasks[conn] = loop.call_later(delay_sec, timer_task, arg)\n    ...\n    >>> def remove_timer_entry(conn):\n    ...     if conn in timer_tasks:\n    ...         timer_tasks[conn].cancel()\n    ...         del timer_tasks[conn]\n    ...\n    >>> def end_rx(conn):\n    ...     reassembly_buffer.set_result(conn.mbuf)\n    ...\n    >>> def end_tx(conn):\n    ...     fragmenter_queue.put_nowait({\"cmd\": \"end_tx\"})\n    ...\n    >>> async def asyncized_input(reassembler, buffer):\n    ...     return reassembler.input(buffer)\n    ...\n    >>> async def fragment_and_reassemble():\n    ...     # just making sure these variables are initialized in the same loop\n    ...     global fragmenter_queue\n    ...     global loop\n    ...     global reassembly_buffer\n    ...\n    ...     fragmenter_queue = asyncio.Queue()\n    ...     loop = asyncio.get_running_loop()\n    ...     reassembly_buffer = loop.create_future()\n    ...     fragmenter = pylibschc.fragmenter.FragmenterReassembler(\n    ...         device=config.devices[0],\n    ...         mode=pylibschc.fragmenter.FragmentationMode.NO_ACK,\n    ...         post_timer_task=post_timer_task,\n    ...         end_tx=end_tx,\n    ...         remove_timer_entry=remove_timer_entry,\n    ...     )\n    ...     fragmenter.register_send(send)\n    ...     reassembler = pylibschc.fragmenter.FragmenterReassembler(\n    ...         device=config.devices[0],\n    ...         post_timer_task=post_timer_task,\n    ...         end_rx=end_rx,\n    ...         remove_timer_entry=remove_timer_entry,\n    ...     )\n    ...     print(\"fragmenter.output ->\", fragmenter.output(bit_array))\n    ...     cmd = {}\n    ...     while cmd.get(\"cmd\") != \"end_tx\":\n    ...         cmd = await asyncio.wait_for(fragmenter_queue.get(), timeout=2)\n    ...         if cmd[\"cmd\"] == \"send\":\n    ...             print(\n    ...                 \"reassembler.input ->\",\n    ...                 await asyncized_input(reassembler, cmd[\"data\"])\n    ...             )\n    ...     return await asyncio.wait_for(reassembly_buffer, timeout=5)\n    ...\n    >>> asyncio.run(fragment_and_reassemble()) == bit_array.buffer\n    fragmenter.output -> FragmentationResult.SUCCESS\n    reassembler.input -> ReassemblyStatus.ONGOING\n    reassembler.input -> ReassemblyStatus.COMPLETED\n    True\n\nWhile this example uses `asyncio`_ to parallelize timer calls, any method to establish concurrency\ncan be used (see `test for a threaded fragmenter/reassembler`_ for an example using the\n`threading`_ module) as long as the access to libSCHC (including calls to timer tasks) is\nsynchronized.\n\nLicense\n=======\n\nThis code is published under the GNU General Public License Version 3 (GPLv3). Please keep in mind,\nthat libSCHC is dual licensed for non-open source use. For more, have a look at the\n`license information <https://github.com/imec-idlab/libschc/blob/master/README.md#license>`_ over at\nlibSCHC.\n\n.. _`libSCHC`: https://github.com/imec-idlab/libschc\n.. _`PyPI`: https://pypi.org/project/pylibschc\n.. _`pydantic`: https://pydantic.dev\n.. _`scapy`: https://scapy.net/\n.. |pylibschc.rules| replace:: ``pylibschc.rules``\n.. _`pylibschc.rules`: https://anr-bmbf-pivot.github.io/pylibschc/pylibschc/rules.html#pylibschc.rules\n.. |pylibschc.rules.Config.deploy| replace:: ``deploy()``\n.. _`pylibschc.rules.Config.deploy`: https://anr-bmbf-pivot.github.io/pylibschc/pylibschc/rules.html#pylibschc.rules.Config.deploy\n.. _`rules_example.json`: https://github.com/anr-bmbf-pivot/pylibschc/blob/main/tests/artifacts/rules_example.json\n.. |pylibschc.compressor.CompressorDecompressor| replace:: ``pylibschc.compressor.Decompressor``\n.. _`pylibschc.compressor.CompressorDecompressor`: https://anr-bmbf-pivot.github.io/pylibschc/pylibschc/compressor.html#pylibschc.compressor.CompressorDecompressor\n.. |pylibschc.compressor.CompressorDecompressor.output| replace:: ``output()``\n.. _`pylibschc.compressor.CompressorDecompressor.output`: https://anr-bmbf-pivot.github.io/pylibschc/pylibschc/compressor.html#pylibschc.compressor.CompressorDecompressor.output\n.. |pylibschc.compressor.CompressorDecompressor.input| replace:: ``input()``\n.. _`pylibschc.compressor.CompressorDecompressor.input`: https://anr-bmbf-pivot.github.io/pylibschc/pylibschc/compressor.html#pylibschc.compressor.CompressorDecompressor.input\n.. |pylibschc.libschc.BitArray| replace:: ``BitArray``\n.. _`pylibschc.libschc.BitArray`: https://anr-bmbf-pivot.github.io/pylibschc/pylibschc/libschc.html#pylibschc.libschc.BitArray\n.. |bytes| replace:: ``bytes``\n.. _`bytes`: https://docs.python.org/3/library/stdtypes.html#bytes\n.. |pylibschc.fragmenter.FragmenterReassembler| replace:: ``pylibschc.fragmenter.FragmenterReassembler``\n.. _`pylibschc.fragmenter.FragmenterReassembler`: https://anr-bmbf-pivot.github.io/pylibschc/pylibschc/fragmenter.html#pylibschc.fragmenter.FragmenterReassembler\n.. |pylibschc.fragmenter.FragmenterReassembler.output| replace:: ``output()``\n.. _`pylibschc.fragmenter.FragmenterReassembler.output`: https://anr-bmbf-pivot.github.io/pylibschc/pylibschc/fragmenter.html#pylibschc.fragmenter.FragmenterReassembler.output\n.. _`registered for the device`: https://anr-bmbf-pivot.github.io/pylibschc/pylibschc/fragmenter.html#pylibschc.fragmenter.FragmenterReassembler.register_send\n.. |pylibschc.fragmenter.FragmenterReassembler.input| replace:: ``input()``\n.. _`pylibschc.fragmenter.FragmenterReassembler.input`: https://anr-bmbf-pivot.github.io/pylibschc/pylibschc/fragmenter.html#pylibschc.fragmenter.FragmenterReassembler.input\n.. _`asyncio`: https://docs.python.org/3/library/asyncio.html\n.. _`test for a threaded fragmenter/reassembler`: https://github.com/anr-bmbf-pivot/pylibschc/blob/main/tests/test_fragmenter.py\n.. _`threading`: https://docs.python.org/3/library/threading.html\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/anr-bmbf-pivot/pylibschc",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/anr-bmbf-pivot/pylibschc",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pylibschc",
    "package_url": "https://pypi.org/project/pylibschc/",
    "platform": null,
    "project_url": "https://pypi.org/project/pylibschc/",
    "project_urls": {
      "Download": "https://github.com/anr-bmbf-pivot/pylibschc",
      "Homepage": "https://github.com/anr-bmbf-pivot/pylibschc"
    },
    "release_url": "https://pypi.org/project/pylibschc/0.2.0b2/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "pylibschc - A python wrapper for libSCHC",
    "version": "0.2.0b2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16972519,
  "releases": {
    "0.0.1a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21dc90650b88cb157305ffae237cfd99ff3d5d4774c277c7a4aa5b24639c9113",
          "md5": "e8672fe5c30f53d5ced08bdf7d6a15dd",
          "sha256": "54548fc2818d51be1e7daa55fca3007e44414d098ff5cea5f2a38d1c1817d0ac"
        },
        "downloads": -1,
        "filename": "pylibschc-0.0.1a0.tar.gz",
        "has_sig": false,
        "md5_digest": "e8672fe5c30f53d5ced08bdf7d6a15dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 57228232,
        "upload_time": "2023-02-10T11:55:43",
        "upload_time_iso_8601": "2023-02-10T11:55:43.177901Z",
        "url": "https://files.pythonhosted.org/packages/21/dc/90650b88cb157305ffae237cfd99ff3d5d4774c277c7a4aa5b24639c9113/pylibschc-0.0.1a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcb2200a9b5c90c5c5fba2b2e7cd921a52f8c464a096106d6785b7591b04237c",
          "md5": "5189446d87c50fc09cc3f58d88b22f96",
          "sha256": "35a2c83e1fec075b54a2245223856a9a7c76eed969dc40aa9296c217dd333d97"
        },
        "downloads": -1,
        "filename": "pylibschc-0.0.1b0.tar.gz",
        "has_sig": false,
        "md5_digest": "5189446d87c50fc09cc3f58d88b22f96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 241145,
        "upload_time": "2023-02-10T12:41:46",
        "upload_time_iso_8601": "2023-02-10T12:41:46.300183Z",
        "url": "https://files.pythonhosted.org/packages/bc/b2/200a9b5c90c5c5fba2b2e7cd921a52f8c464a096106d6785b7591b04237c/pylibschc-0.0.1b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f15c66acab23ba2aeb8637855c817c2d0447d57f7307f0e4b7d473c8542dec95",
          "md5": "59d06308cfed0843fbc5d5b942264511",
          "sha256": "f724d33e841d8d12adf337f5b7ff9b5f1eab022fd2a15ee8bd2b66fa461c6291"
        },
        "downloads": -1,
        "filename": "pylibschc-0.0.1b1.tar.gz",
        "has_sig": false,
        "md5_digest": "59d06308cfed0843fbc5d5b942264511",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 241318,
        "upload_time": "2023-02-15T14:10:41",
        "upload_time_iso_8601": "2023-02-15T14:10:41.140726Z",
        "url": "https://files.pythonhosted.org/packages/f1/5c/66acab23ba2aeb8637855c817c2d0447d57f7307f0e4b7d473c8542dec95/pylibschc-0.0.1b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b16292b3eac09e64b5a3de196aa84f9bbc4bd8dd2070fe91032a572c4f11c77e",
          "md5": "09b7ed3d9d3051aba49974aa631204ae",
          "sha256": "2c40eae6b36e025775b2d7c9cd4df33123f901022005dec1091a99293df42083"
        },
        "downloads": -1,
        "filename": "pylibschc-0.0.1b2.tar.gz",
        "has_sig": false,
        "md5_digest": "09b7ed3d9d3051aba49974aa631204ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 241331,
        "upload_time": "2023-02-16T14:15:31",
        "upload_time_iso_8601": "2023-02-16T14:15:31.426673Z",
        "url": "https://files.pythonhosted.org/packages/b1/62/92b3eac09e64b5a3de196aa84f9bbc4bd8dd2070fe91032a572c4f11c77e/pylibschc-0.0.1b2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1b3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84cad61bfcf728b0d322d14f1f6a5fa7a29fe7a18438472f991b93aa7af1d194",
          "md5": "c43a8bd86640c2c9ba6d87a263c4e040",
          "sha256": "768dbfb87ad4067b131019aa7c065dd460d9ffb6f4d9e17ad0711f00d4dc8a62"
        },
        "downloads": -1,
        "filename": "pylibschc-0.0.1b3.tar.gz",
        "has_sig": false,
        "md5_digest": "c43a8bd86640c2c9ba6d87a263c4e040",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 241445,
        "upload_time": "2023-02-16T15:12:42",
        "upload_time_iso_8601": "2023-02-16T15:12:42.497416Z",
        "url": "https://files.pythonhosted.org/packages/84/ca/d61bfcf728b0d322d14f1f6a5fa7a29fe7a18438472f991b93aa7af1d194/pylibschc-0.0.1b3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13018b1c65f6bc045f5d3122d24cfda648f567044944451cd95aebebb6932806",
          "md5": "7e407869cad6818b506f73dbf24bf6e7",
          "sha256": "6ceadc0f6757928b419eb5665cc295eb73f1bc796e6a2b9697107517df0cc199"
        },
        "downloads": -1,
        "filename": "pylibschc-0.1.0b0.tar.gz",
        "has_sig": false,
        "md5_digest": "7e407869cad6818b506f73dbf24bf6e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 241556,
        "upload_time": "2023-02-16T16:30:12",
        "upload_time_iso_8601": "2023-02-16T16:30:12.766269Z",
        "url": "https://files.pythonhosted.org/packages/13/01/8b1c65f6bc045f5d3122d24cfda648f567044944451cd95aebebb6932806/pylibschc-0.1.0b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1aacdbe817cda21e9b6d827f7852e7546c4c062728f5fce02a4b1a785b322932",
          "md5": "020bb1d7d9ef9b14376e4fe0fcfd96f9",
          "sha256": "656b8bcc68829f65ebdca6591d4bd61538d73c38be05466ac88f6e4dc32a0506"
        },
        "downloads": -1,
        "filename": "pylibschc-0.2.0b0.tar.gz",
        "has_sig": false,
        "md5_digest": "020bb1d7d9ef9b14376e4fe0fcfd96f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 244018,
        "upload_time": "2023-02-20T20:14:23",
        "upload_time_iso_8601": "2023-02-20T20:14:23.957374Z",
        "url": "https://files.pythonhosted.org/packages/1a/ac/dbe817cda21e9b6d827f7852e7546c4c062728f5fce02a4b1a785b322932/pylibschc-0.2.0b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2345591b306cfb935cd51c95d0bd207a01c851833308fa767e585006633e069",
          "md5": "da0d6142907ae375786eb05ead6f6942",
          "sha256": "b48d52d886cd2aa95250cf843a31b99d20b6533013de3860e978fc09c84ba030"
        },
        "downloads": -1,
        "filename": "pylibschc-0.2.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "da0d6142907ae375786eb05ead6f6942",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 243983,
        "upload_time": "2023-02-21T10:31:54",
        "upload_time_iso_8601": "2023-02-21T10:31:54.492990Z",
        "url": "https://files.pythonhosted.org/packages/b2/34/5591b306cfb935cd51c95d0bd207a01c851833308fa767e585006633e069/pylibschc-0.2.0b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7293df8a497e5a99cd89163ba662a679b7598a03a61b714f9bb6f3169d3e6b1",
          "md5": "3895a1872edfd2e88040fc09c30663f4",
          "sha256": "c5c5be58c69a1e1ea0792db538bc0a53eea47fe878b8b42ba7b927a4d66a8b2c"
        },
        "downloads": -1,
        "filename": "pylibschc-0.2.0b2.tar.gz",
        "has_sig": false,
        "md5_digest": "3895a1872edfd2e88040fc09c30663f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 244063,
        "upload_time": "2023-02-22T07:30:32",
        "upload_time_iso_8601": "2023-02-22T07:30:32.751149Z",
        "url": "https://files.pythonhosted.org/packages/d7/29/3df8a497e5a99cd89163ba662a679b7598a03a61b714f9bb6f3169d3e6b1/pylibschc-0.2.0b2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d7293df8a497e5a99cd89163ba662a679b7598a03a61b714f9bb6f3169d3e6b1",
        "md5": "3895a1872edfd2e88040fc09c30663f4",
        "sha256": "c5c5be58c69a1e1ea0792db538bc0a53eea47fe878b8b42ba7b927a4d66a8b2c"
      },
      "downloads": -1,
      "filename": "pylibschc-0.2.0b2.tar.gz",
      "has_sig": false,
      "md5_digest": "3895a1872edfd2e88040fc09c30663f4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 244063,
      "upload_time": "2023-02-22T07:30:32",
      "upload_time_iso_8601": "2023-02-22T07:30:32.751149Z",
      "url": "https://files.pythonhosted.org/packages/d7/29/3df8a497e5a99cd89163ba662a679b7598a03a61b714f9bb6f3169d3e6b1/pylibschc-0.2.0b2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}