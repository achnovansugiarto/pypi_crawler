{
  "info": {
    "author": "Aaron Finocchiaro",
    "author_email": "afinny10@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PyBLS\n\nThe PyBLS module is a python module specifically designed to interact with the Bureau of Labor Statistics\nAPI and transform the results into a Pandas Dataframe. \n\n## Prerequisites\n\nThe following python packages must be installed into your environment:\n\n| Package | Version |\n| ------- | ------- |\n| Pandas | 1.2.3+ |\n| requests | 2.25.1+ |\n\nAny versions lower than this may work, but have not been tested. \n\n## Setup\n\nThis tool is designed to only interact with version 2 of the Bureau of Labor Statistics API, which *requires* the user to have an API key from the BLS. To obtain a key [follow this link](https://www.bls.gov/developers/home.htm) and select 'registration'. This will allow you to sign up for an API key.\n\nPyBLS is designed to have your API key be set in an environment variable in the terminal that you are working in. Once the BLS has issued you your API key, set the following environment variable using one of the 2 processes below based on your machine-type:\n\nWindows:\n```psh\n$Env:BLS_API_KEY='{YOUR_API_KEY}'\n```\n\nMac/Linux:\n```sh\nexport BLS_API_KEY='{YOUR_API_KEY}'\n```\n\nThere are several advantages to using an API key and version 2 of the Bureau of Labor Statistics API, but the main one is that this will allow a user to query their API up to 500 times per day as opposed to only 25 times with version 1. Version 2 also allows for laregr timeframes per query, and more series IDs in a single query.\n\n## Usage\n\nBelow is a simple example of how PyBLS could be called:\n\n```python\nfrom pybls.bls_data import BlsData\n\nmy_bls_data = BlsData(\n    ['ENUUS00040010','ENU0400040010'],\n    2015,\n    2020\n)\n```\n\nFrom here, follow the API guide to see what you are able to do with this BlsData object that has just been instantiated.\n\n## API\n\n### `BlsData.from_json`\n\nAlternate constructor for BlsData that takes a json file of data returned from the BLS\nAPI and uses it to create a BlsData object. Mainly used for testing to limit calls to the BLS api, and so\nwork can be done offline by just saving the api data locally.\n\n```python\nimport json\nfrom pybls.bls_data import BlsData\n\nmy_bls_data = BlsData.from_json('json_file_with_raw_bls_data.json')\n```\n\n### `BlsData.write_to_json`\n\nWrites raw data from BLS API out to a json file to avoid having to re-query the API for testing.\n\nArguments:\n- file_name = str; Name of the file that should be outputted.\n\n```python\nfrom pybls.bls_data import BlsData\n\nmy_bls_data = BlsData(\n    ['ENUUS00040010','ENU0400040010'],\n    2015,\n    2020\n)\n\nmy_bls_data.write_to_json('bls_json_data.json')\n```\n\n### `BlsData.create_graph`\n\nReturns a graph-able plotly object from the given data and constructed dataframe. Renames columns based on the mapping of seriesIDs to locations from the BLS area codes.\nArguments:\n- title = str; graph title\n- graph_type = str; the style of graph to be used **(only accepts `line` and `bar`)**\n- custom_column_names = dict; mapping of seriesID to custom defined column names. Default=`None`\n- transpose = bool; transpose df to graph correctly. Default=False\n- short_location_names = bool; removes the state from the coumn names to shorten the length. Default=`True`\n- graph_labels = dict; a mapping of x and y axis labels to output a graph with custom labels Default=`None`\n\nReturns a plotly express object.\n\nfrom pybls.bls_data import BlsData\n\n```python\nmy_bls_data = BlsData(\n    ['ENUUS00040010','ENU0400040010'],\n    2015,\n    2020\n)\n\nfig = my_bls_data.create_graph('BLS API Test Graph', 'line', graph_labels = {'date': 'Date', 'value': 'Amount in USD'})\n\nfig.show()\n```\n\n### `BlsData.create_table`\n\nCreates an html table from the dataframe with cleaned columns.\nArguments:\n- custom_column_names = dict; mapping of series ID to custom column name. Default=`None`\n- short_location_names = bool; removes the state from the coumn names to shorten the length. Default=`True`\n- index_color = str; the color to apply to the index column and header row. Default=`None`\n- descending = bool; changes indexes to sort on descending if True. Default=`False`\n- index_label = str; adds a custom index label to the index column in a table. Default=''\n- lines = str: colors the borders between cells with a specified color.\n- align = str: aligns the text inside of cells in either right, left, or center. Default=None\nReturns plotly.graph_object.Figure() object.\n\n```python\nmy_bls_data = BlsData(\n    ['ENUUS00040010','ENU0400040010'],\n    2015,\n    2020\n)\n\nfig = my_bls_data.create_table(\n    custom_column_names = {'ENUUS00040010' : 'Entire US', 'ENU0400040010' : 'Arizona'},\n    index_color='orange',\n    descending=True,\n    line_color='black',\n    align='left')\n\nfig.show()\n```\n\n### `BlsData.clean_df`\n\nCleans the standard dataframe up by renaming columns with locations, or applying the custom column names.\nArguments:\n- custom_column_names = dict; mapping of series ID to custom column name. `Default`=`None`\n- short_location_names = bool; removes the state from the coumn names to shorten the length. Default=`True`\n\nMIT License\n\nCopyright (c) [year] [fullname]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/a-finocchiaro/bls-data/archive/refs/tags/0.0.1.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/a-finocchiaro/bls-data",
    "keywords": "Pandas,Bureau,Labor,Statistics,Plotly",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bls-data",
    "package_url": "https://pypi.org/project/bls-data/",
    "platform": "",
    "project_url": "https://pypi.org/project/bls-data/",
    "project_urls": {
      "Download": "https://github.com/a-finocchiaro/bls-data/archive/refs/tags/0.0.1.zip",
      "Homepage": "https://github.com/a-finocchiaro/bls-data"
    },
    "release_url": "https://pypi.org/project/bls-data/0.0.2/",
    "requires_dist": [
      "pandas",
      "plotly",
      "requests"
    ],
    "requires_python": ">=3.7",
    "summary": "A Python library to parse and visualize Bureau of Labor Statistics Data",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11521082,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "975153892ab98a596f7d252ec6a6cb4b690e856a9b68d1b03ee9f6167d1c052a",
          "md5": "7e3825499c553afbcfd7116f38201c35",
          "sha256": "5718fb32e6cf187bef4a7d62499646e334a4a30a54c06878ba617804bea32049"
        },
        "downloads": -1,
        "filename": "bls_data-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e3825499c553afbcfd7116f38201c35",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4595,
        "upload_time": "2021-08-06T17:45:54",
        "upload_time_iso_8601": "2021-08-06T17:45:54.503839Z",
        "url": "https://files.pythonhosted.org/packages/97/51/53892ab98a596f7d252ec6a6cb4b690e856a9b68d1b03ee9f6167d1c052a/bls_data-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d750a73daa314acbb32379c05f7abe8dc74a34e3e92fa6e96d693a6b7ee85789",
          "md5": "c1390390b44596036208668bb217041d",
          "sha256": "e4940fd44deb5b765170455af8a638dc36120a6180326109764f734b12320389"
        },
        "downloads": -1,
        "filename": "bls_data-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c1390390b44596036208668bb217041d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4267,
        "upload_time": "2021-08-06T17:45:56",
        "upload_time_iso_8601": "2021-08-06T17:45:56.132905Z",
        "url": "https://files.pythonhosted.org/packages/d7/50/a73daa314acbb32379c05f7abe8dc74a34e3e92fa6e96d693a6b7ee85789/bls_data-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "003bcf994106ec4cb6d35c542e645954867c99647834b804271d50e411377662",
          "md5": "0c4c1467fcfbbf149762a05f18356b8d",
          "sha256": "b3f6630446ede79c72a64776d04dce81760aca1424395840418e7b51b3c15dc3"
        },
        "downloads": -1,
        "filename": "bls_data-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c4c1467fcfbbf149762a05f18356b8d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 157286,
        "upload_time": "2021-09-22T19:29:40",
        "upload_time_iso_8601": "2021-09-22T19:29:40.094568Z",
        "url": "https://files.pythonhosted.org/packages/00/3b/cf994106ec4cb6d35c542e645954867c99647834b804271d50e411377662/bls_data-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "915f480786ccc2f9752e002ec148219187f33dab53279e112ca1abf41b728119",
          "md5": "3208b977a6bb947108fc9045f56ce05b",
          "sha256": "9a20ec2bebe5ef026b85961ef05b449d3cb45d387cf1cd114d6e01ae0a23bc0e"
        },
        "downloads": -1,
        "filename": "bls_data-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3208b977a6bb947108fc9045f56ce05b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 155590,
        "upload_time": "2021-09-22T19:29:42",
        "upload_time_iso_8601": "2021-09-22T19:29:42.099664Z",
        "url": "https://files.pythonhosted.org/packages/91/5f/480786ccc2f9752e002ec148219187f33dab53279e112ca1abf41b728119/bls_data-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "003bcf994106ec4cb6d35c542e645954867c99647834b804271d50e411377662",
        "md5": "0c4c1467fcfbbf149762a05f18356b8d",
        "sha256": "b3f6630446ede79c72a64776d04dce81760aca1424395840418e7b51b3c15dc3"
      },
      "downloads": -1,
      "filename": "bls_data-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0c4c1467fcfbbf149762a05f18356b8d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 157286,
      "upload_time": "2021-09-22T19:29:40",
      "upload_time_iso_8601": "2021-09-22T19:29:40.094568Z",
      "url": "https://files.pythonhosted.org/packages/00/3b/cf994106ec4cb6d35c542e645954867c99647834b804271d50e411377662/bls_data-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "915f480786ccc2f9752e002ec148219187f33dab53279e112ca1abf41b728119",
        "md5": "3208b977a6bb947108fc9045f56ce05b",
        "sha256": "9a20ec2bebe5ef026b85961ef05b449d3cb45d387cf1cd114d6e01ae0a23bc0e"
      },
      "downloads": -1,
      "filename": "bls_data-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "3208b977a6bb947108fc9045f56ce05b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 155590,
      "upload_time": "2021-09-22T19:29:42",
      "upload_time_iso_8601": "2021-09-22T19:29:42.099664Z",
      "url": "https://files.pythonhosted.org/packages/91/5f/480786ccc2f9752e002ec148219187f33dab53279e112ca1abf41b728119/bls_data-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}