{
  "info": {
    "author": "\"Santeri Paajanen, Shreyas Kaptan\"",
    "author_email": "santeri.e.paajanen@helsinki.fi",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# OPLS #\n\nOPLS and PLS regressors\n\n## Installation\n\nRun\n\n```\npip install .\n```\n\n## Usage\n\nGiven a structure file and trajectory as `struct.pdb` and `traj.xtc` we can e.g. define a function as the distance of two specific C alpha atoms:\n\n```py\nimport MDAnalysis as mda\nimport numpy as np\n\n# Make universe and load trajectory to memory\nu = mda.Universe(\"struct.pdb\",\"traj.xtc\")\ncoords = np.array([u.atoms.positions.copy() for ts in u.trajectory])\n# Calculate function as distance between res 2 and 150 CA\nsel = u.select_atoms(\"resid 2 150 and name CA\")\ny = np.linalg.norm(coords[:,sel.indices[0],:]-coords[:,sel.indices[1],:], axis=-1)\n# Flatten from N by M by 3 dimensions to N by 3M\nX = coords.reshape((coords.shape[0],-1))\n```\n\nNow that we have shape N by 3M array of X values and a one dimensional y, we can start running the OPLS\n\n```py\nfrom OPLS import PLS, OPLS\n\nopls = OPLS(n_components=1).fit(X,y)\n```\n\nThis will fit a one component OPLS model on the data. To get a new X array, where we have filtered out the orthogonal components, we can use the transform function\n\n```py\nX_filt = opls.transform(X)\n```\n\nFinally to get our model, we can fit the PLS with the filtered data.\n\n```py\npls = PLS(n_components=5).fit(X_filt,y)\n```\n\nIf we have a new set of data, called `X_new`, we can predict the y values for it as\n\n```py\nX_new_filt = opls.transform(X_new)\ny_new_predicted = pls.predict(X_new_filt)\n```\nor if the corresponding `y_new` are known, we can estimate the coefficient of determination (`r2`) with\n\n```py\nX_new_filt = opls.transform(X_new)\nr2 = pls.score(X_new_filt, y_new)\n```\n\nHaving to run two separate models one after the other can be tiresome, so the package also includes as `OPLS_PLS` object, which does the above much easier:\n\n\n```py\nfrom OPLS import OPLS_PLS\n\n# Fitting:\nopls_pls = OPLS_PLS(n_components=1,pls_components=5).fit(X,y)\n\n# Predicting:\ny_new_predicted = opls_pls.predict(X_new)\n\n# Scoring:\nr2 = opls_pls.score(X_new, y_new)\n```\n\n\n## References\n\nMain references for OPLS:\n    \n    [1] Wold S, et al. PLS-regression: a basic tool of chemometrics.\n        Chemometr Intell Lab Sys 2001, 58, 109â€“130.\n    [2] Bylesjo M, et al. Model Based Preprocessing and Background\n        Elimination: OSC, OPLS, and O2PLS. in Comprehensive Chemometrics.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "OPLS-MD",
    "package_url": "https://pypi.org/project/OPLS-MD/",
    "platform": null,
    "project_url": "https://pypi.org/project/OPLS-MD/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/OPLS-MD/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "PLS and OPLS regressors",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16745945,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad8d1b94a9310283fa7640464726b540926d0ed9b5f45538e61fefd165ed5c44",
          "md5": "d7e7e4e0157cab04c160b957a3fe026f",
          "sha256": "51b6fa60497abe482d5da8f6ed9857bb336ce68a4751cdb3eb1a69ccb5506d97"
        },
        "downloads": -1,
        "filename": "OPLS_MD-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d7e7e4e0157cab04c160b957a3fe026f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12204,
        "upload_time": "2023-02-08T12:19:56",
        "upload_time_iso_8601": "2023-02-08T12:19:56.665319Z",
        "url": "https://files.pythonhosted.org/packages/ad/8d/1b94a9310283fa7640464726b540926d0ed9b5f45538e61fefd165ed5c44/OPLS_MD-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49d0820310d6bb4d7c55cd132b5084596bda52b47aefb4ffa6ea3fcb3e7b95b0",
          "md5": "70752977ced0cb4ac645c1678afe1a55",
          "sha256": "bd84984fd9a80e260750e1b15dcec6ede8544cdc2b291244971d3db50241fe48"
        },
        "downloads": -1,
        "filename": "OPLS-MD-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "70752977ced0cb4ac645c1678afe1a55",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 12001,
        "upload_time": "2023-02-08T12:19:58",
        "upload_time_iso_8601": "2023-02-08T12:19:58.680906Z",
        "url": "https://files.pythonhosted.org/packages/49/d0/820310d6bb4d7c55cd132b5084596bda52b47aefb4ffa6ea3fcb3e7b95b0/OPLS-MD-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ad8d1b94a9310283fa7640464726b540926d0ed9b5f45538e61fefd165ed5c44",
        "md5": "d7e7e4e0157cab04c160b957a3fe026f",
        "sha256": "51b6fa60497abe482d5da8f6ed9857bb336ce68a4751cdb3eb1a69ccb5506d97"
      },
      "downloads": -1,
      "filename": "OPLS_MD-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d7e7e4e0157cab04c160b957a3fe026f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 12204,
      "upload_time": "2023-02-08T12:19:56",
      "upload_time_iso_8601": "2023-02-08T12:19:56.665319Z",
      "url": "https://files.pythonhosted.org/packages/ad/8d/1b94a9310283fa7640464726b540926d0ed9b5f45538e61fefd165ed5c44/OPLS_MD-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "49d0820310d6bb4d7c55cd132b5084596bda52b47aefb4ffa6ea3fcb3e7b95b0",
        "md5": "70752977ced0cb4ac645c1678afe1a55",
        "sha256": "bd84984fd9a80e260750e1b15dcec6ede8544cdc2b291244971d3db50241fe48"
      },
      "downloads": -1,
      "filename": "OPLS-MD-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "70752977ced0cb4ac645c1678afe1a55",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 12001,
      "upload_time": "2023-02-08T12:19:58",
      "upload_time_iso_8601": "2023-02-08T12:19:58.680906Z",
      "url": "https://files.pythonhosted.org/packages/49/d0/820310d6bb4d7c55cd132b5084596bda52b47aefb4ffa6ea3fcb3e7b95b0/OPLS-MD-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}