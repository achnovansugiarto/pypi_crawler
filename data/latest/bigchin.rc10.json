{
  "info": {
    "author": "DFWastaken",
    "author_email": "dfwastaken.work@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Description\r\n===========\r\n**This small library contains some useful functions that you would need in the implementation of projects. Every time the library is updated, and many other useful functions are added to it**\r\n\r\nInnovations\r\n===========\r\nUpdate 1.0 - Adding the Perform, system class\r\n____\r\nUpdate 1.1 - Bug fixes\r\n____\r\nUpdate 1.1.5 - Bug fixes\r\n____\r\nUpdate 1.1.7 - Bug fixes\r\n____\r\nUpdate 1.1.9 - Bug fixes\r\n____\r\nUpdate 1.2 - Bug fixes\r\n____\r\nUpdate 1.2.2 - Officially prepared module\r\n____\r\nUpdate 1.2.6 - Adding the kalive class\r\n____\r\nUpdate 1.2.8 - Adding exceptions to the kalive class\r\n____\r\nUpdate 1.2.9 - Adding exceptions to the kalive class\r\nUsing\r\n===========\r\nUsing 1.2.6\r\n-----------\r\n### This class of functions adds the ability to support your variables/applications in some partial elements\r\nSupported list:\r\n* Discord Bot alive\r\n```python\r\nimport discord\r\nclient = commands.Bot()\r\ntoken = \"123X456\"\r\nkalive(\"discord.Client\").checkalive(client, token)\r\n```\r\n#### Thus, if you maintain the state of your Discord bot using the Flash module (keep alive), then this kalive function will handle exceptions and errors in your token or bot startup.\r\nUsing 1.0\r\n-----------\r\n### In the code below, you can make a small game that depends on luck. With this function, you can specify the chances of \"winning\" and return *True*, or lose.\r\n```python\r\nfrom bigchin import perform\r\nmy_chance = perform.perchance(50) # 50 - Your chances\r\nif my_chance is True:\r\n    print(\"Win!\")\r\nelif my_chance is False:\r\n    print(\"lose.\")\r\n```\r\nIf you win, then you return *True*. In case of defeat - *False*\r\n**Maximum chances: 100**\r\n**Minimum chances: 0** _(Best of all - 1)_\r\n\r\n\r\n\r\n### In the next function you will be able to set your *maximum unit of luck*\r\n```python\r\nfrom bigchin import perform\r\nmy_custom_max_chance = 200 # 200 - Your any number\r\nmy_chance = perform.perchances(my_custom_max_chance)\r\nif my_chance > 50:\r\n    print(\"Win!\")\r\nelif my_chance <= 50:\r\n    print(\"lose.\")\r\n```\r\n\r\n### If you are working with a large and important project, and you choose numbers as the maximum size, except for the standard ones [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000], then you will have to quickly enter into the console - *\"y\"* _(Operation confirmation)_.\r\nAs we know, if you specify the number of the maximum size of the odds except [100, 200, 300, 400, 500, 600, 700, 800, 900, 100], **then you will have a warning where confirmation of the operation is required.**\r\nTo skip it, set an additional parameter to *True*\r\n```python\r\nfrom bigchin import perform\r\nmy_custom_max_chance = 450 # 450 - Your any number\r\nmy_chance = perform.perchances(my_custom_max_chance, True)\r\nif my_chance > 50:\r\n    print(\"Win!\")\r\nelif my_chance <= 50:\r\n    print(\"lose.\")\r\n```\r\n\r\n\r\n\r\n### In the **system** class, it will be possible to view system functions or information in future updates.\r\n#### Version view (1)\r\n```python\r\nimport bigchin\r\nversion = bigchin.system.ver()\r\nprint(version)\r\n```\r\n#### Version view (2)\r\n```python\r\nfrom bigchin import system\r\nversion = system.ver()\r\nprint(version)\r\n```\r\n\r\n\r\n\r\n### There is a small analogue of the *perchance* function. If you need to use several variables at once, then you can use the following function\r\n```python\r\nfrom bigchin import perform\r\nmy_dict_chance = perform.permchance(10, 20, 40) # 10, 20, 40 - Your chances\r\nprint(my_dict_chance)\r\n```\r\nIn the output we will get *dict* with our variables\r\n\r\n\r\n\r\n### If you are working on some game (Let's say daily-rewards), then you definitely need a system with a *calculation of luck for a certain reward*. In the next function you will be able to implement this\r\n```python\r\nfrom bigchin import perform\r\nmy_chance = perform.СЃpermchance(30, 60) # 30, 60 - Your chances\r\nprint(my_chance)\r\n```\r\nIn the console, we will most likely see: - **60**\r\n\r\nLet's say you need a program for determining the luck of some boxing, case (gaming) that are designed only on luck. The most expensive rewards will be likely with 10% chances (for example), and the most ordinary ones with 90%. \r\nThe *СЃpermchance* function simplifies this implementation. Here is an example code corresponding to our above-mentioned \"game\" designed for luck\"\r\n```python\r\nfrom bigchin import perform\r\nprobability_a_price_reward = 10 # 10%\r\nprobability_of_usual_reward = 90 # 90 %\r\nresult = perform.СЃpermchance(probability_a_price_reward, probability_of_usual_reward)\r\nif result == probability_a_price_reward:\r\n    print(\"Win!\")\r\nelif result == probability_of_usual_reward:\r\n    print(\"so-so...\")\r\n```\r\nThat is, the probability for a **valuable reward is 10%**, and for an **ordinary, standard reward is 90%**\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://raw.githubusercontent.com/DFekatsaW/Big-Chin./main/bigchin.py",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DFekatsaW/Big-Chin.",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bigchin",
    "package_url": "https://pypi.org/project/bigchin/",
    "platform": null,
    "project_url": "https://pypi.org/project/bigchin/",
    "project_urls": {
      "Download": "https://raw.githubusercontent.com/DFekatsaW/Big-Chin./main/bigchin.py",
      "Homepage": "https://github.com/DFekatsaW/Big-Chin."
    },
    "release_url": "https://pypi.org/project/bigchin/1.2.9/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A small library for your projects",
    "version": "1.2.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15282598,
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "240a83b64ff00c10ecaa2b2e089da7876aa6e106e63b02c86f0eaac743eb3f04",
          "md5": "0583e83f24e8cd4091d0617b1cc71941",
          "sha256": "3600a93e4b3e88e9d72a49def0f91fe2e3fcbef6aa333e99b54721bac7bb3252"
        },
        "downloads": -1,
        "filename": "bigchin-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0583e83f24e8cd4091d0617b1cc71941",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2352,
        "upload_time": "2022-10-01T21:09:43",
        "upload_time_iso_8601": "2022-10-01T21:09:43.312758Z",
        "url": "https://files.pythonhosted.org/packages/24/0a/83b64ff00c10ecaa2b2e089da7876aa6e106e63b02c86f0eaac743eb3f04/bigchin-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b9717461a6d6b90c7740d7fe6e5846f8ca34a02671771a5591f56e00e89a316",
          "md5": "1afcef22215f8321f7b554cd96c38175",
          "sha256": "232b032849d7abb2a265955e818446b5e8c44d79cdc0c555125fe0f9b6d5648b"
        },
        "downloads": -1,
        "filename": "bigchin-1.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1afcef22215f8321f7b554cd96c38175",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2345,
        "upload_time": "2022-10-01T21:27:27",
        "upload_time_iso_8601": "2022-10-01T21:27:27.533620Z",
        "url": "https://files.pythonhosted.org/packages/5b/97/17461a6d6b90c7740d7fe6e5846f8ca34a02671771a5591f56e00e89a316/bigchin-1.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f762abb5acfb1ae942b19713b90e877a4877bc3d4e731f6a6df0e0950321cfd",
          "md5": "eb680b1453060f061cca6007fc10c030",
          "sha256": "efa8115b12ceeb18003afcdc923470e5de3a4986684849622c4851cc990c292b"
        },
        "downloads": -1,
        "filename": "bigchin-1.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "eb680b1453060f061cca6007fc10c030",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3931,
        "upload_time": "2022-10-01T21:50:55",
        "upload_time_iso_8601": "2022-10-01T21:50:55.615472Z",
        "url": "https://files.pythonhosted.org/packages/2f/76/2abb5acfb1ae942b19713b90e877a4877bc3d4e731f6a6df0e0950321cfd/bigchin-1.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f5f3c5ebf326888dde5982d14e54b8ea982d67f3d5ebf2268bfd64470e4b992",
          "md5": "9c52b74817b3f663866ccbeb2606be18",
          "sha256": "b6dd94689cbee183b8ec8e534b4d7a648927b8b16a8a9e99b02a18f03554dbd9"
        },
        "downloads": -1,
        "filename": "bigchin-1.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "9c52b74817b3f663866ccbeb2606be18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3926,
        "upload_time": "2022-10-02T07:28:40",
        "upload_time_iso_8601": "2022-10-02T07:28:40.954112Z",
        "url": "https://files.pythonhosted.org/packages/0f/5f/3c5ebf326888dde5982d14e54b8ea982d67f3d5ebf2268bfd64470e4b992/bigchin-1.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "792ecb28194f01a11cff7afd9847ca29bcc7f176d00bc7d543386fa1644c2d52",
          "md5": "346407afef1f223eaecaee6d919c7a16",
          "sha256": "97d8bf26113a2d6a0c48c4a655ab4da3c8f95b8b4ca57436dde55658353d0eca"
        },
        "downloads": -1,
        "filename": "bigchin-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "346407afef1f223eaecaee6d919c7a16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3908,
        "upload_time": "2022-10-02T08:09:49",
        "upload_time_iso_8601": "2022-10-02T08:09:49.026720Z",
        "url": "https://files.pythonhosted.org/packages/79/2e/cb28194f01a11cff7afd9847ca29bcc7f176d00bc7d543386fa1644c2d52/bigchin-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27604051a025b5277d2a9c68c0691a4b43cb6d6db58fb9e14b2431bd84053e67",
          "md5": "dcd621880d992e365a0aea294120d0b2",
          "sha256": "8fbf0fb40e66beee0b63cb0b8bc47cf7b494f0bcc3214d993186861c23780dbb"
        },
        "downloads": -1,
        "filename": "bigchin-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "dcd621880d992e365a0aea294120d0b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3919,
        "upload_time": "2022-10-02T08:26:50",
        "upload_time_iso_8601": "2022-10-02T08:26:50.497455Z",
        "url": "https://files.pythonhosted.org/packages/27/60/4051a025b5277d2a9c68c0691a4b43cb6d6db58fb9e14b2431bd84053e67/bigchin-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a318d9f8863b4a3d106cb084e04f0016533a5a384f79d2eb916879927a4db7b5",
          "md5": "95d39a60ffe26ab6c7209aef33093660",
          "sha256": "1304d96ecfc54cef1b98201c32f09c6519eaf6625dcddb68f36712c332ace6cb"
        },
        "downloads": -1,
        "filename": "bigchin-1.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "95d39a60ffe26ab6c7209aef33093660",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4201,
        "upload_time": "2022-10-02T09:53:43",
        "upload_time_iso_8601": "2022-10-02T09:53:43.640022Z",
        "url": "https://files.pythonhosted.org/packages/a3/18/d9f8863b4a3d106cb084e04f0016533a5a384f79d2eb916879927a4db7b5/bigchin-1.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f8dc66475be1726088a33a9f4ab1844bcd7b47c35d9236d95472b1c35aeec4c",
          "md5": "c58c75a7abc0a65a35f4e13e0bf947ef",
          "sha256": "433714c2ffdbe6b29784f12a1ae742431494932ab45ee7c4cb135e68f1d7d10f"
        },
        "downloads": -1,
        "filename": "bigchin-1.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c58c75a7abc0a65a35f4e13e0bf947ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4192,
        "upload_time": "2022-10-02T09:57:48",
        "upload_time_iso_8601": "2022-10-02T09:57:48.915888Z",
        "url": "https://files.pythonhosted.org/packages/7f/8d/c66475be1726088a33a9f4ab1844bcd7b47c35d9236d95472b1c35aeec4c/bigchin-1.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cc4b6b25ed95e047a176154ed35d3328f7ac9719b01a68dabda368fc3d26db8",
          "md5": "3a2476fc542adbab3693ca2cbb646b76",
          "sha256": "f7c780f3db0a5e429d39d0845827c201a768f05127588c810fe1df4bd8f7c15d"
        },
        "downloads": -1,
        "filename": "bigchin-1.2.8.tar.gz",
        "has_sig": false,
        "md5_digest": "3a2476fc542adbab3693ca2cbb646b76",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4555,
        "upload_time": "2022-10-02T16:36:05",
        "upload_time_iso_8601": "2022-10-02T16:36:05.917705Z",
        "url": "https://files.pythonhosted.org/packages/7c/c4/b6b25ed95e047a176154ed35d3328f7ac9719b01a68dabda368fc3d26db8/bigchin-1.2.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4ca47e1cce3aa8c1d63abd932fbd0ab08dda18b98940c8052c333b0496de500",
          "md5": "7bea6303d26905c8274ecfc505b12ad3",
          "sha256": "0fa24786f4fd455c7a9c5307ea0ea6b56294f8f203b9ea033552760a97cc600d"
        },
        "downloads": -1,
        "filename": "bigchin-1.2.9.tar.gz",
        "has_sig": false,
        "md5_digest": "7bea6303d26905c8274ecfc505b12ad3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4680,
        "upload_time": "2022-10-02T16:52:11",
        "upload_time_iso_8601": "2022-10-02T16:52:11.477400Z",
        "url": "https://files.pythonhosted.org/packages/b4/ca/47e1cce3aa8c1d63abd932fbd0ab08dda18b98940c8052c333b0496de500/bigchin-1.2.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b4ca47e1cce3aa8c1d63abd932fbd0ab08dda18b98940c8052c333b0496de500",
        "md5": "7bea6303d26905c8274ecfc505b12ad3",
        "sha256": "0fa24786f4fd455c7a9c5307ea0ea6b56294f8f203b9ea033552760a97cc600d"
      },
      "downloads": -1,
      "filename": "bigchin-1.2.9.tar.gz",
      "has_sig": false,
      "md5_digest": "7bea6303d26905c8274ecfc505b12ad3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4680,
      "upload_time": "2022-10-02T16:52:11",
      "upload_time_iso_8601": "2022-10-02T16:52:11.477400Z",
      "url": "https://files.pythonhosted.org/packages/b4/ca/47e1cce3aa8c1d63abd932fbd0ab08dda18b98940c8052c333b0496de500/bigchin-1.2.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}