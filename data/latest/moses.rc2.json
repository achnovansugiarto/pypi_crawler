{
  "info": {
    "author": "Kay Zheng",
    "author_email": "l04m33@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.4"
    ],
    "description": "Moses\n#####\n\nMoses 是一个使用加密连接的 Socks5 代理，原理与 `ShadowSocks`_ 一致，\n不过加密方法换成了 TLS, 支持服务端、客户端双向验证，更安全，不过连接\n速度也更慢。\n\n.. _ShadowSocks: https://shadowsocks.org/\n\n安裝\n####\n\n.. code-block:: text\n\n    ❯ pip install moses\n\n或者使用最新代码：\n\n.. code-block:: text\n\n    ❯ git clone https://github.com/l04m33/moses.git\n    ❯ pip install ./moses\n\n使用方法\n########\n\n.. code-block:: text\n\n    ❯ moses -h\n    usage: moses [-h] (-c | -s) [-b <ADDRESS>:<PORT>] [-n] [-l LOCAL_CERT]\n                 [-r REMOTE_CERT] [-e CIPHERS] [--backlog BACKLOG]\n                 [--loglevel {critical,fatal,error,warning,info,debug}]\n                 [--block-size BLOCK_SIZE] [-k KEEPALIVE] [-p <ADDRESS>:<PORT>]\n                 [-f <ADDRESS>:<PORT>]\n\n    optional arguments:\n      -h, --help            show this help message and exit\n\n    Common Options:\n      -c, --client          Client mode\n      -s, --server          Server mode\n      -b <ADDRESS>:<PORT>, --bind <ADDRESS>:<PORT>\n                            IP & port to bind (default: :1080)\n      -n, --no-tls          Do not use TLS encryption\n      -l LOCAL_CERT, --local-cert LOCAL_CERT\n                            Local SSL certificates (default: ./local.pem)\n      -r REMOTE_CERT, --remote-cert REMOTE_CERT\n                            Remote SSL certificates (default: ./remote.pem)\n      -e CIPHERS, --ciphers CIPHERS\n                            Ciphers to use for encryption. Run `openssl ciphers`\n                            to see available ciphers\n      --backlog BACKLOG     Backlog for the listening socket (default: 128)\n      --loglevel {critical,fatal,error,warning,info,debug}\n                            Log level (default: info)\n      --block-size BLOCK_SIZE\n                            Block size for data streaming, in bytes (default:\n                            2048)\n      -k KEEPALIVE, --keepalive KEEPALIVE\n                            TCP keepalive parameters, in the form of\n                            <keepalive_time>,<keepalive_probes>,<keepalive_intvl>.\n                            See `man 7 tcp` for details (default: keepalive\n                            disabled)\n\n    Client Options:\n      -p <ADDRESS>:<PORT>, --peer <ADDRESS>:<PORT>\n                            Peer (server) address\n\n    Server Options:\n      -f <ADDRESS>:<PORT>, --forward <ADDRESS>:<PORT>\n                            Simply forward all connections to the given address\n\nSocks5 代理\n###########\n\n启动服务器：\n\n.. code-block:: text\n\n    ❯ moses -s -b some.server.addr.ess:32000 \\\n            -l server_key.pem -r client_cert.pem\n\n启动客户端：\n\n.. code-block:: text\n\n    ❯ moses -c -b 127.0.0.1:1080 -p some.server.addr.ess:32000 \\\n            -l client_key.pem -r server_cert.pem\n\n转发 HTTP 代理\n##############\n\nMoses 本身没有实现 HTTP 代理，不过你可以用 Moses 将 HTTP 代理请求转\n发到其他 HTTP 代理程序（例如 Privoxy_ ）上。假设你的服务器在 8118 端\n口上配置了一个 Privoxy 实例，这样启动 Moses 服务器即可：\n\n.. code-block:: text\n\n    ❯ moses -s -b some.server.addr.ess:32000 \\\n            -f 127.0.0.1:8118 \\\n            -l server_key.pem -r client_cert.pem\n\n.. _Privoxy: http://www.privoxy.org/\n\nLinux 下的全局透明代理\n######################\n\n``staff`` 是一个透明代理脚本，通过与 ``moses`` 配合可以自动转发\n所有 DNS 请求和 TCP 连接， poor man's VPN :)\n\n使用方法（假设 Moses 客户端运行在 127.0.0.1:1080 上）：\n\n.. code-block:: text\n\n    ❯ staff -p 127.0.0.1:1080\n\n然后用 iptables 添加这三条规则（当然 eth0 要替换成你自己的网络接口）：\n\n.. code-block:: text\n\n    ❯ iptables -t nat -I OUTPUT -o eth0 -p udp --dport 53  -j DNAT --to 127.0.0.1:32000\n    ❯ iptables -t nat -I OUTPUT -o eth0 -p tcp --dport 80  -j DNAT --to 127.0.0.1:32000\n    ❯ iptables -t nat -I OUTPUT -o eth0 -p tcp --dport 443 -j DNAT --to 127.0.0.1:32000\n\n这样所有 DNS 请求和目标端口是 80、443 的 TCP 连接都会走 Moses 代理。\n\n你也可以更进一步，用 geoip 规则忽略某墙国的 IP （需要安装 `xtables-addons`_ ）：\n\n.. code-block:: text\n\n    ❯ iptables -t nat -I OUTPUT -o eth0 -p tcp -m geoip ! --dst-cc CN -j DNAT --to 127.0.0.1:32000\n\n要查看其他选项的用法，执行 ``staff -h`` .\n\n.. _xtables-addons: http://xtables-addons.sourceforge.net/\n\nLicense\n#######\n\nMIT.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/l04m33/moses",
    "keywords": "socks,proxy",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "moses",
    "package_url": "https://pypi.org/project/moses/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/moses/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/l04m33/moses"
    },
    "release_url": "https://pypi.org/project/moses/0.10.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "TLS encrypted socks5 proxy",
    "version": "0.10.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2394547,
  "releases": {
    "0.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "840d783ac17bd7ce07a1cd5f1ec4c4c3c1d6feee1b09a743933c4bed94e7c68b",
          "md5": "d88628aa5e9349686d86f3e41986e97a",
          "sha256": "e3a1068099d9bb9768e71380f452e18c4f523b7c95208ba1e8f123d3af6dfce7"
        },
        "downloads": -1,
        "filename": "moses-0.10.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d88628aa5e9349686d86f3e41986e97a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17844,
        "upload_time": "2016-10-12T04:27:49",
        "upload_time_iso_8601": "2016-10-12T04:27:49.533612Z",
        "url": "https://files.pythonhosted.org/packages/84/0d/783ac17bd7ce07a1cd5f1ec4c4c3c1d6feee1b09a743933c4bed94e7c68b/moses-0.10.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2546d2cc5c0ed87633cb566bbe8a30a296dc3363daf0b4095b45c126be84bb27",
          "md5": "efd58ae4f0fed600e5e4dfd9be82cc02",
          "sha256": "113f2b4668fc1b2ef59fce64ec85c9fe251363437b2bf15029744840284d929d"
        },
        "downloads": -1,
        "filename": "moses-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "efd58ae4f0fed600e5e4dfd9be82cc02",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14203,
        "upload_time": "2016-04-12T13:52:21",
        "upload_time_iso_8601": "2016-04-12T13:52:21.360930Z",
        "url": "https://files.pythonhosted.org/packages/25/46/d2cc5c0ed87633cb566bbe8a30a296dc3363daf0b4095b45c126be84bb27/moses-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "840d783ac17bd7ce07a1cd5f1ec4c4c3c1d6feee1b09a743933c4bed94e7c68b",
        "md5": "d88628aa5e9349686d86f3e41986e97a",
        "sha256": "e3a1068099d9bb9768e71380f452e18c4f523b7c95208ba1e8f123d3af6dfce7"
      },
      "downloads": -1,
      "filename": "moses-0.10.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d88628aa5e9349686d86f3e41986e97a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17844,
      "upload_time": "2016-10-12T04:27:49",
      "upload_time_iso_8601": "2016-10-12T04:27:49.533612Z",
      "url": "https://files.pythonhosted.org/packages/84/0d/783ac17bd7ce07a1cd5f1ec4c4c3c1d6feee1b09a743933c4bed94e7c68b/moses-0.10.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}