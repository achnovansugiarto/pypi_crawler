{
  "info": {
    "author": "Joan Puigcerver",
    "author_email": "joapuipe@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Image Recognition",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# nnutils-pytorch\n\n[![Build Status](https://travis-ci.org/jpuigcerver/nnutils.svg?branch=master)](https://travis-ci.org/jpuigcerver/nnutils)\n\nPyTorch bindings of different neural network-related utilities implemented for\nCPUs and GPUs (CUDA).\n\nSo far, most of the utils are related to my need of working with images of\ndifferent sizes grouped into batches with padding.\n\n## Included functions\n\n### Adaptive pooling\n\nAdaptive pooling layers included in several packages like Torch or PyTorch\nassume that all images in the batch have the same size. This implementation\ntakes into account the size of each individual image within the batch\n(before padding) to apply the adaptive pooling.\n\nCurrently implemented: Average and maximum adaptive pooling.\n\n```python\nimport torch\nfrom nnutils_pytorch import adaptive_avgpool_2d, adaptive_maxpool_2d\n\n# Two random images, with three channels, 10 pixels height, 12 pixels width\nx = torch.rand(2, 3, 10, 12)\n# Matrix (N x 2) containing the height and width of each image.\nxs = torch.tensor([[10, 6], [6, 12], dtype=torch.int64)\n\n# Pool images to a fixed size, taking into account the original size of each\n# image before padding.\n#\n# Output tensor has shape (2, 3, 3, 5)\ny1 = adaptive_avgpool_2d(batch_input=x, output_sizes=(3, 5), batch_sizes=xs)\n\n# Pool a single dimension of the images, taking into account the original\n# size of each image before padding. The None dimension is not pooled.\n#\n# Output tensor has shape (2, 3, 5, 12)\ny2 = adaptive_maxpool_2d(x, (5, None), xs)\n```\n\n*Important:* The implementation assumes that the images are aligned to the\ntop-left corner.\n\n### Masking images by size\n\nIf you are grouping images of different sizes into batches padded with zeros,\nyou may need to mask the output/input tensors after/before some layers.\nThis layer is very handy (and efficient) in these cases.\n\n```python\nimport torch\nfrom nnutils_pytorch import mask_image_from_size\n\n# Two random images, with three channels, 10 pixels height, 12 pixels width\nx = torch.rand(2, 3, 10, 12)\n# Matrix (N x 2) containing the height and width of each image.\nxs = torch.tensor([[10, 6], [6, 12], dtype=torch.int64)\n\n# Note: mask_image_from_size is differentiable w.r.t. x\ny = mask_image_from_size(x, xs, mask_value=0)  # mask_value is optional.\n```\n\n*Important:* The implementation assumes that the images are aligned to the\ntop-left corner.\n\n## Requirements\n\n- Python: 3.6, 3.7 or 3.8 (tested with version 3.6, 3.7 and 3.8).\n- [PyTorch](http://pytorch.org/) >= 1.6.0 (tested with version 1.6.0).\n- C++14 compiler (tested with GCC 7.5.0).\n- For GPU support: [CUDA Toolkit](https://developer.nvidia.com/cuda-zone).\n\n## Installation\n\nThe installation process should be pretty straightforward assuming that you\nhave correctly installed the required libraries and tools.\n\nThe setup process compiles the package from source, and will compile with\nCUDA support if this is available for PyTorch.\n\n### From Pypi (recommended)\n\n```bash\npip install nnutils-pytorch\n```\n\nYou may find the package already compiled for different Python, CUDA and CPU\nconfigurations in: http://www.jpuigcerver.net/projects/nnutils-pytorch/whl/\n\nFor instance, if you want to install the CPU-only version for Python 3.7:\n\n```bash\npip install http://www.jpuigcerver.net/projects/nnutils-pytorch/whl/cpu/nnutils_pytorch-1.6.0-cp37-cp37m-linux_x86_64.whl\n```\n\n### From GitHub\n\n```bash\ngit clone https://github.com/jpuigcerver/nnutils.git\ncd nnutils/pytorch\npython setup.py build\npython setup.py install\n```\n\n### AVX512 related issues\n\nSome compiling problems may arise when using CUDA and newer host compilers\nwith AVX512 instructions. Please, install GCC 7.5 or above and use it as the\nhost compiler for NVCC 10.2. You can simply set the `CC` and `CXX` environment\nvariables before the build/install commands:\n\n```bash\nCC=gcc-4.9 CXX=g++-4.9 pip install nnutils-pytorch\n```\n\nor (if you are using the GitHub source code):\n\n```bash\nCC=gcc-4.9 CXX=g++-4.9 python setup.py build\n```\n\n## Testing\n\nYou can test the library once installed using `unittest`. In particular,\nrun the following commands:\n\n```bash\npython -m unittest nnutils_pytorch.adaptive_avgpool_2d_test\npython -m unittest nnutils_pytorch.adaptive_maxgpool_2d_test\npython -m unittest nnutils_pytorch.mask_image_from_size_test\n```\n\nAll tests should pass (CUDA tests are only executed if supported).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jpuigcerver/nnutils",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nnutils-pytorch-cuda",
    "package_url": "https://pypi.org/project/nnutils-pytorch-cuda/",
    "platform": null,
    "project_url": "https://pypi.org/project/nnutils-pytorch-cuda/",
    "project_urls": {
      "Homepage": "https://github.com/jpuigcerver/nnutils"
    },
    "release_url": "https://pypi.org/project/nnutils-pytorch-cuda/1.13.1/",
    "requires_dist": [
      "pybind11",
      "numpy",
      "torch"
    ],
    "requires_python": "",
    "summary": "PyTorch bindings of the nnutils library",
    "version": "1.13.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16303011,
  "releases": {
    "1.12.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab0e29092518cc2ac37df63a513e4aaa3105fc02f2dd301cfd5ecff13d8838a7",
          "md5": "f5ba0fcd6633736cf5d7a7a945444e29",
          "sha256": "1f5933bae52a44755ef3a56bdc83eb08f3beac6adc00ac3c7755d69bb8bf044f"
        },
        "downloads": -1,
        "filename": "nnutils_pytorch_cuda-1.12.0-cp310-cp310-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "f5ba0fcd6633736cf5d7a7a945444e29",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": null,
        "size": 2492526,
        "upload_time": "2022-12-01T11:59:22",
        "upload_time_iso_8601": "2022-12-01T11:59:22.045073Z",
        "url": "https://files.pythonhosted.org/packages/ab/0e/29092518cc2ac37df63a513e4aaa3105fc02f2dd301cfd5ecff13d8838a7/nnutils_pytorch_cuda-1.12.0-cp310-cp310-manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29b0ba4dda924cef3d2c2c52328b69d965782217d8f4030464ae0813a56ba05c",
          "md5": "f3e82ef81881fcf0abda2de929674258",
          "sha256": "6843cd523d41e2e619a10ec17a0ddac3eb117d95b5517f3109080c1d8d3027ec"
        },
        "downloads": -1,
        "filename": "nnutils_pytorch_cuda-1.12.0-cp38-cp38-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "f3e82ef81881fcf0abda2de929674258",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 2538604,
        "upload_time": "2022-12-01T11:59:24",
        "upload_time_iso_8601": "2022-12-01T11:59:24.707257Z",
        "url": "https://files.pythonhosted.org/packages/29/b0/ba4dda924cef3d2c2c52328b69d965782217d8f4030464ae0813a56ba05c/nnutils_pytorch_cuda-1.12.0-cp38-cp38-manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4b5ecec4e6993be82d8a8d57115d9d96b58bc67ecc2acac507646f087f47f7c",
          "md5": "735acf1a9d8216e35420989de2633585",
          "sha256": "67f50f86009864d4d1b38a483206c28bb4785eaa1a85037efd5e159836992b45"
        },
        "downloads": -1,
        "filename": "nnutils_pytorch_cuda-1.12.0-cp39-cp39-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "735acf1a9d8216e35420989de2633585",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 2492422,
        "upload_time": "2022-12-01T11:59:26",
        "upload_time_iso_8601": "2022-12-01T11:59:26.808620Z",
        "url": "https://files.pythonhosted.org/packages/b4/b5/ecec4e6993be82d8a8d57115d9d96b58bc67ecc2acac507646f087f47f7c/nnutils_pytorch_cuda-1.12.0-cp39-cp39-manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.13.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdbbe0cc2030f5917648ba76f623d1d66113fee9ab1968d8523be196ce3b53a0",
          "md5": "3f064e499058226084c3361daa4020b8",
          "sha256": "db49cf31dd6d0ab41afc3b7e407436b03d0587b61edf42a58382aaccfd926c00"
        },
        "downloads": -1,
        "filename": "nnutils_pytorch_cuda-1.13.0-cp310-cp310-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "3f064e499058226084c3361daa4020b8",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": null,
        "size": 6574025,
        "upload_time": "2022-12-01T11:59:28",
        "upload_time_iso_8601": "2022-12-01T11:59:28.726856Z",
        "url": "https://files.pythonhosted.org/packages/fd/bb/e0cc2030f5917648ba76f623d1d66113fee9ab1968d8523be196ce3b53a0/nnutils_pytorch_cuda-1.13.0-cp310-cp310-manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20933025e47badbad2e168d2f8fea61d459330d80d09bb09fa59d848fe402cd9",
          "md5": "772998c89eaf0baa1dae2c1bb82c69bc",
          "sha256": "4b33293fd78d3cd6313fbf9d4ca9ce39a0709c991851d731fde83c2f43e83d3d"
        },
        "downloads": -1,
        "filename": "nnutils_pytorch_cuda-1.13.0-cp311-cp311-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "772998c89eaf0baa1dae2c1bb82c69bc",
        "packagetype": "bdist_wheel",
        "python_version": "cp311",
        "requires_python": null,
        "size": 6575593,
        "upload_time": "2022-12-01T11:59:31",
        "upload_time_iso_8601": "2022-12-01T11:59:31.569577Z",
        "url": "https://files.pythonhosted.org/packages/20/93/3025e47badbad2e168d2f8fea61d459330d80d09bb09fa59d848fe402cd9/nnutils_pytorch_cuda-1.13.0-cp311-cp311-manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da9b7aabb47acd23613b1e2b0f401c7e862b130b7c0142e14687f7461cec96a0",
          "md5": "32f20107d0e4af2cdc448d2fc74aa449",
          "sha256": "50752c4edec6bbec777660519e04db2f2fe8948d15a69c4e4b7d22dfb53558e6"
        },
        "downloads": -1,
        "filename": "nnutils_pytorch_cuda-1.13.0-cp38-cp38-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "32f20107d0e4af2cdc448d2fc74aa449",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 6565366,
        "upload_time": "2022-12-01T11:59:33",
        "upload_time_iso_8601": "2022-12-01T11:59:33.719063Z",
        "url": "https://files.pythonhosted.org/packages/da/9b/7aabb47acd23613b1e2b0f401c7e862b130b7c0142e14687f7461cec96a0/nnutils_pytorch_cuda-1.13.0-cp38-cp38-manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a9867fbe99d3d66117b636785f6cf2a452c90df6030a26c42ff8eb9fe792725",
          "md5": "3aa099f4b8d5f86abadfa0cb7e260189",
          "sha256": "ac163c10799d9f7e869aab26de61e30d8c7c4946f012cdadefb8b209852f31c7"
        },
        "downloads": -1,
        "filename": "nnutils_pytorch_cuda-1.13.0-cp39-cp39-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "3aa099f4b8d5f86abadfa0cb7e260189",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 6572263,
        "upload_time": "2022-12-01T11:59:35",
        "upload_time_iso_8601": "2022-12-01T11:59:35.661561Z",
        "url": "https://files.pythonhosted.org/packages/9a/98/67fbe99d3d66117b636785f6cf2a452c90df6030a26c42ff8eb9fe792725/nnutils_pytorch_cuda-1.13.0-cp39-cp39-manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.13.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63114486d3cb93d21b9bb1c1803669e8d89acd0b095ca387e165fc58f2c739a2",
          "md5": "ec691e595cfeb7e20bbdd25c7b1a70ce",
          "sha256": "fbd7c023a9cba34ab3366753c90dc3e0cd6dead3081eb974e8458d6365f05fc9"
        },
        "downloads": -1,
        "filename": "nnutils_pytorch_cuda-1.13.1-cp310-cp310-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "ec691e595cfeb7e20bbdd25c7b1a70ce",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": null,
        "size": 6574053,
        "upload_time": "2023-01-04T14:44:32",
        "upload_time_iso_8601": "2023-01-04T14:44:32.720349Z",
        "url": "https://files.pythonhosted.org/packages/63/11/4486d3cb93d21b9bb1c1803669e8d89acd0b095ca387e165fc58f2c739a2/nnutils_pytorch_cuda-1.13.1-cp310-cp310-manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64125b8fd2895ba7c58586e7e9578de0bc10d681b6514e1374f0dd3f2b703c55",
          "md5": "dc3b9a556bc9b8626a4f22834b120c15",
          "sha256": "e24126e33bae7453242b7630e4096fd47087d8e6ee572667c7a0d44c3a79e75b"
        },
        "downloads": -1,
        "filename": "nnutils_pytorch_cuda-1.13.1-cp311-cp311-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "dc3b9a556bc9b8626a4f22834b120c15",
        "packagetype": "bdist_wheel",
        "python_version": "cp311",
        "requires_python": null,
        "size": 6575598,
        "upload_time": "2023-01-04T14:44:35",
        "upload_time_iso_8601": "2023-01-04T14:44:35.419467Z",
        "url": "https://files.pythonhosted.org/packages/64/12/5b8fd2895ba7c58586e7e9578de0bc10d681b6514e1374f0dd3f2b703c55/nnutils_pytorch_cuda-1.13.1-cp311-cp311-manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78e31d5c6bd6f0f7d45fa3f0c4e952dfe461f6023a1f0b28c2abc4ef39b67070",
          "md5": "3dd97563746643f95e64241bbaffbf34",
          "sha256": "13b1e4bfc2acd42c5befaf0a1a3b3b3ddb6431e3d4d6f73366a0dfc26edecf22"
        },
        "downloads": -1,
        "filename": "nnutils_pytorch_cuda-1.13.1-cp38-cp38-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "3dd97563746643f95e64241bbaffbf34",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 6565349,
        "upload_time": "2023-01-04T14:44:37",
        "upload_time_iso_8601": "2023-01-04T14:44:37.207465Z",
        "url": "https://files.pythonhosted.org/packages/78/e3/1d5c6bd6f0f7d45fa3f0c4e952dfe461f6023a1f0b28c2abc4ef39b67070/nnutils_pytorch_cuda-1.13.1-cp38-cp38-manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed517a12b775f5181541bd43886521d8343b4aeac564b82b1643bd4776b3e9ae",
          "md5": "677cba616650f019cc94e50d7b316daa",
          "sha256": "1c03acaa72bc603b0bb122d22a39b4271e8f1e2292f84a838cb5de1f4215d5cb"
        },
        "downloads": -1,
        "filename": "nnutils_pytorch_cuda-1.13.1-cp39-cp39-manylinux1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "677cba616650f019cc94e50d7b316daa",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 6572270,
        "upload_time": "2023-01-04T14:44:39",
        "upload_time_iso_8601": "2023-01-04T14:44:39.410590Z",
        "url": "https://files.pythonhosted.org/packages/ed/51/7a12b775f5181541bd43886521d8343b4aeac564b82b1643bd4776b3e9ae/nnutils_pytorch_cuda-1.13.1-cp39-cp39-manylinux1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "63114486d3cb93d21b9bb1c1803669e8d89acd0b095ca387e165fc58f2c739a2",
        "md5": "ec691e595cfeb7e20bbdd25c7b1a70ce",
        "sha256": "fbd7c023a9cba34ab3366753c90dc3e0cd6dead3081eb974e8458d6365f05fc9"
      },
      "downloads": -1,
      "filename": "nnutils_pytorch_cuda-1.13.1-cp310-cp310-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "ec691e595cfeb7e20bbdd25c7b1a70ce",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": null,
      "size": 6574053,
      "upload_time": "2023-01-04T14:44:32",
      "upload_time_iso_8601": "2023-01-04T14:44:32.720349Z",
      "url": "https://files.pythonhosted.org/packages/63/11/4486d3cb93d21b9bb1c1803669e8d89acd0b095ca387e165fc58f2c739a2/nnutils_pytorch_cuda-1.13.1-cp310-cp310-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "64125b8fd2895ba7c58586e7e9578de0bc10d681b6514e1374f0dd3f2b703c55",
        "md5": "dc3b9a556bc9b8626a4f22834b120c15",
        "sha256": "e24126e33bae7453242b7630e4096fd47087d8e6ee572667c7a0d44c3a79e75b"
      },
      "downloads": -1,
      "filename": "nnutils_pytorch_cuda-1.13.1-cp311-cp311-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "dc3b9a556bc9b8626a4f22834b120c15",
      "packagetype": "bdist_wheel",
      "python_version": "cp311",
      "requires_python": null,
      "size": 6575598,
      "upload_time": "2023-01-04T14:44:35",
      "upload_time_iso_8601": "2023-01-04T14:44:35.419467Z",
      "url": "https://files.pythonhosted.org/packages/64/12/5b8fd2895ba7c58586e7e9578de0bc10d681b6514e1374f0dd3f2b703c55/nnutils_pytorch_cuda-1.13.1-cp311-cp311-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "78e31d5c6bd6f0f7d45fa3f0c4e952dfe461f6023a1f0b28c2abc4ef39b67070",
        "md5": "3dd97563746643f95e64241bbaffbf34",
        "sha256": "13b1e4bfc2acd42c5befaf0a1a3b3b3ddb6431e3d4d6f73366a0dfc26edecf22"
      },
      "downloads": -1,
      "filename": "nnutils_pytorch_cuda-1.13.1-cp38-cp38-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "3dd97563746643f95e64241bbaffbf34",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": null,
      "size": 6565349,
      "upload_time": "2023-01-04T14:44:37",
      "upload_time_iso_8601": "2023-01-04T14:44:37.207465Z",
      "url": "https://files.pythonhosted.org/packages/78/e3/1d5c6bd6f0f7d45fa3f0c4e952dfe461f6023a1f0b28c2abc4ef39b67070/nnutils_pytorch_cuda-1.13.1-cp38-cp38-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ed517a12b775f5181541bd43886521d8343b4aeac564b82b1643bd4776b3e9ae",
        "md5": "677cba616650f019cc94e50d7b316daa",
        "sha256": "1c03acaa72bc603b0bb122d22a39b4271e8f1e2292f84a838cb5de1f4215d5cb"
      },
      "downloads": -1,
      "filename": "nnutils_pytorch_cuda-1.13.1-cp39-cp39-manylinux1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "677cba616650f019cc94e50d7b316daa",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": null,
      "size": 6572270,
      "upload_time": "2023-01-04T14:44:39",
      "upload_time_iso_8601": "2023-01-04T14:44:39.410590Z",
      "url": "https://files.pythonhosted.org/packages/ed/51/7a12b775f5181541bd43886521d8343b4aeac564b82b1643bd4776b3e9ae/nnutils_pytorch_cuda-1.13.1-cp39-cp39-manylinux1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}