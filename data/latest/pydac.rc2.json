{
  "info": {
    "author": "RenÃ© Schubotz",
    "author_email": "rene.schubotz@dfki.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# pyDAC\n\n[![Upload Python Package](https://github.com/rmrschub/pyDAC/actions/workflows/pypi-publish.yml/badge.svg)](https://github.com/rmrschub/pyDAC/actions/workflows/pypi-publish.yml)\n\npyDAC (python Directly Addressable Codes) offers a variable-length encoding scheme for (unsigned) integers with random access to any element of the encoded sequence.\n\nIn terms of compression, a DAC structure is very likely to outperform standard [base-128 compression schemes](https://en.wikipedia.org/wiki/Variable-length_quantity) aka VByte, Varint, VInt, EncInt etc..\n\nAs a bonus, a DAC structure gives to random access to each and every sequence element without any decoding.\n\n## Installation\nInstall from PyPi using\n```bash\npip install pyDAC\n```\n\n## Usage\n```python\nfrom pyDAC import DAC\n```\nimports the module.\n\n```python\nimport random \nfrom pyDAC import DAC\n\nvalues = random.sample(range(2**32), 10**7)\nencoded_values = DAC(iter(values))\n```\ncreates a DAC structure ``encoded_values`` for the ``values`` sequence. \n\n### Access\nThe ``i``th element from the original ``values`` sequence can be retrieved from a DAC structure ``encoded_values`` using the subscript operator\n```python\nfor i in range(len(values)):\n    assert values[i] == encoded_values[i]\n```\n\nA DAC structure ``encoded_values`` is also iterable. \n\nYou can easily loop through the stored elements stored \n```python\ndac_iter = iter(encoded_values)\nwhile True:\n    try:\n        val = next(dac_iter)\n    except StopIteration:\n        break  # Iterator exhausted: stop the loop\n    else:\n        print(val)\n```\nor return all stored elements at once\n```python\nassert values == list(iter(encoded_values))\n```\n\n\n### Miscellaneous\nA DAC structure can provide ``compression ratios`` and ``space_savings`` in comparision to the minimal fixed width representation and to the variable byte representation of the original ``values`` sequence. \n\nFor example,\n```python\nvalues = [1, 2, 1, 8, 3, 4, 5, 9, 13, 1024, 262189]\nencoded_values = DAC(iter(values))\n\nprint(encoded_values.space_savings)\n>>> {'vbyte': 0.08214285714285718, 'fixed_width': 0.508133971291866}\n\nprint(encoded_values.compression_ratios)\n>>> {'vbyte': 1.0894941634241246, 'fixed_width': 2.0330739299610894}\n```\n\n## Attributions\n\n```bibtex\n@article{\n    title = {{Algorithms and Compressed Data Structures for Information Retrieval}},\n    author = {Ladra, Susana},\n    type = {Phd Thesis},\n    institution = {Universidade da Coru{\\~{n}}a},\n    pages = {272},\n    year = {2011},\n    isbn = {5626895531}\n}\n```\n\n```bibtex\n@inproceedings{\n    title = {{Directly addressable variable-length codes}},\n    author = {Brisaboa, Nieves R. and Ladra, Susana and Navarro, Gonzalo},\n    booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},\n    volume = {5721 LNCS},\n    doi = {10.1007/978-3-642-03784-9_12},\n    isbn = {3642037836},\n    issn = {03029743},\n    pages = {122--130},\n    publisher = {Springer, Berlin, Heidelberg},\n    year = {2009}\n}\n```\n\n## License\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"><img alt=\"Creative Commons License\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /></a><br />This work is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rmrschub/pyDAC",
    "keywords": "",
    "license": "CC BY-NC-SA 4.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyDAC",
    "package_url": "https://pypi.org/project/pyDAC/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyDAC/",
    "project_urls": {
      "Homepage": "https://github.com/rmrschub/pyDAC"
    },
    "release_url": "https://pypi.org/project/pyDAC/0.0.2/",
    "requires_dist": [
      "typing",
      "numpy",
      "bitarray",
      "more-itertools",
      "succinct",
      "tqdm",
      "tensorflow",
      "tensorflow-probability"
    ],
    "requires_python": "",
    "summary": "pyDAC (python Directly Addressable Codes) offers a variable-length encoding scheme for (unsigned) integers with random access to any element of the encoded sequence.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13795636,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8aeeaa298afc170c698e61fb790937abe01dba73a717b0bcd461aede399f7664",
          "md5": "0a6f5e089e3a728c350716f180718abc",
          "sha256": "5f234e2aa5c487160d4656e8f1f7b0f9edc37deee58527333026d9386bb9ac76"
        },
        "downloads": -1,
        "filename": "pyDAC-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a6f5e089e3a728c350716f180718abc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3617,
        "upload_time": "2022-05-12T14:15:41",
        "upload_time_iso_8601": "2022-05-12T14:15:41.531644Z",
        "url": "https://files.pythonhosted.org/packages/8a/ee/aa298afc170c698e61fb790937abe01dba73a717b0bcd461aede399f7664/pyDAC-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c0e829006f6cc5123aa15774e4fcf8a297c90dc6a06320fc336e331f0885573",
          "md5": "d3be9302f20bc9fc3723563619d7fe36",
          "sha256": "680556ae80679fe4df0e1a451517dd7d524a7bd7c40292b9006388037caf157f"
        },
        "downloads": -1,
        "filename": "pyDAC-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d3be9302f20bc9fc3723563619d7fe36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3355,
        "upload_time": "2022-05-12T14:15:43",
        "upload_time_iso_8601": "2022-05-12T14:15:43.059534Z",
        "url": "https://files.pythonhosted.org/packages/0c/0e/829006f6cc5123aa15774e4fcf8a297c90dc6a06320fc336e331f0885573/pyDAC-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd13df7d9847f32eaa7dafddad39b3a8dd441f5de5fccbe6eae61950027247a1",
          "md5": "166b9a68039a67333c985173f8d3f485",
          "sha256": "1e5c7f174e4affec85b267ba64cbe2d1d4b027b6367d96e58af7f555b9a2a503"
        },
        "downloads": -1,
        "filename": "pyDAC-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "166b9a68039a67333c985173f8d3f485",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5184,
        "upload_time": "2022-05-12T15:15:54",
        "upload_time_iso_8601": "2022-05-12T15:15:54.323582Z",
        "url": "https://files.pythonhosted.org/packages/dd/13/df7d9847f32eaa7dafddad39b3a8dd441f5de5fccbe6eae61950027247a1/pyDAC-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a35ee946608e0da41f59c00236f0b8c53c16e8f45bfc9eaa82e9f1ddca4be7b",
          "md5": "17a048c7daf8be98f2521fde2947a91e",
          "sha256": "a3b076b2727143fd0c5c6268139b38694796c23611adf55924482e8013bbbb97"
        },
        "downloads": -1,
        "filename": "pyDAC-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "17a048c7daf8be98f2521fde2947a91e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4813,
        "upload_time": "2022-05-12T15:15:55",
        "upload_time_iso_8601": "2022-05-12T15:15:55.714930Z",
        "url": "https://files.pythonhosted.org/packages/8a/35/ee946608e0da41f59c00236f0b8c53c16e8f45bfc9eaa82e9f1ddca4be7b/pyDAC-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd13df7d9847f32eaa7dafddad39b3a8dd441f5de5fccbe6eae61950027247a1",
        "md5": "166b9a68039a67333c985173f8d3f485",
        "sha256": "1e5c7f174e4affec85b267ba64cbe2d1d4b027b6367d96e58af7f555b9a2a503"
      },
      "downloads": -1,
      "filename": "pyDAC-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "166b9a68039a67333c985173f8d3f485",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5184,
      "upload_time": "2022-05-12T15:15:54",
      "upload_time_iso_8601": "2022-05-12T15:15:54.323582Z",
      "url": "https://files.pythonhosted.org/packages/dd/13/df7d9847f32eaa7dafddad39b3a8dd441f5de5fccbe6eae61950027247a1/pyDAC-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a35ee946608e0da41f59c00236f0b8c53c16e8f45bfc9eaa82e9f1ddca4be7b",
        "md5": "17a048c7daf8be98f2521fde2947a91e",
        "sha256": "a3b076b2727143fd0c5c6268139b38694796c23611adf55924482e8013bbbb97"
      },
      "downloads": -1,
      "filename": "pyDAC-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "17a048c7daf8be98f2521fde2947a91e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4813,
      "upload_time": "2022-05-12T15:15:55",
      "upload_time_iso_8601": "2022-05-12T15:15:55.714930Z",
      "url": "https://files.pythonhosted.org/packages/8a/35/ee946608e0da41f59c00236f0b8c53c16e8f45bfc9eaa82e9f1ddca4be7b/pyDAC-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}