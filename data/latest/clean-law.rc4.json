{
  "info": {
    "author": "Jason Morris",
    "author_email": "jason@lexpedite.ca",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Legal Industry",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.8",
      "Topic :: Text Processing :: Markup"
    ],
    "description": "# Canadian Legal Enactments in Akoma Ntoso (CLEAN)\n\n## About\n\n[Akoma Ntoso](http://www.akomantoso.org/) is a markup language for \nlegislative documents.\n\nIn the same way that Markdown is a plain-text markup language for generating\nHTML, CLEAN is a plain-text markup language for generating Akoma Ntoso\nrepresentations of Canadian statutes and regulations.\n\n## Installation\n\n`pip install clean-law`\n\n## Usage\n\nWrite your markup, load it into a string variable, and run \n\n```python\nfrom clean.clean import generate_akn\n\ntext = \"\"\"Title\n\n1. Section one.\"\"\"\n\nprint(generate_akn(text))\n\n# <?xml version=\"1.0\" encoding=\"UTF-8\"?><akomaNtoso xmlns=\"http://docs.oasis-open.org/legaldocml/ns/akn/3.0\"><act><preface><p class=\"title\"><shortTitle>Title</shortTitle></p></preface><body><section eId=\"sec_1\"><num>1</num><content><p>Section one.</p></content></section></body></act></akomaNtoso>\n```\n\n## Format\n\nA CLEAN-formatted piece of legislation has the following features:\n\n### Title\n\nThe title of the act is the first line of the file.\n\n### Headers\n\nSections and Sub-Sections can have headers, which is a single line of text\nimmediately above the section or subsection, preceded by a blank line.\n\nIt is necessary to precede headers with a blank line in order to distinguish\nthem from sandwich text, described below.\n\n### Insert Indexes\n\nWhen making amendments to legislation, we want to be able to insert parts\nwithout changing the numbering of the existing parts, at least until there\nis a revision of the statute book. This is accomplished by using insert\nindexes, which are always a period, followed by a number, which increases\nsequentially.\n\nIf you want to insert a new section between two existing inserted sections,\nthe insert indexes can nest, as follows:\n\n```text\n1.\n  (1)\n  (1.1) - first inserted sub-section. \n  (1.1.1) - third inserted sub-section.\n  (1.2) - second inserted sub-section\n  (2)\n```\n\nFor all of the index types, sections, sub-sections, paragraphs, and\nsub-paragraphs, the insert indexes appear to the right of the index\nnumber, and before any closing punctuation, as follows:\n\n```text\n1.1.\n  (1.1)\n    (a.1)\n      (i.1)\n```\n\n### Sections\n\nSections are indicated by a section index which is an arabic number followed\nby a period.\n\nA section may have a header.\n\nA section index may be followed by the text of the section. If it is, it may\nalso have an indented list of sub-sections, or paragraphs (but not both). If\nIt has an indented list of sub-sections or paragraphs, it can also have\n\"sandwich text\" at the bottom.\n\nHere are some valid sections:\n\n```text\n1. This is a section.\n2. This is a section with\n  (1) a subsection.\n\nSection Three\n3. This is a section with a header, and\n  (a) paragraphs\nand sandwich text.\n3.1 As with all text, it\ncan be spread across multiple lines.\n```\n\nNote that you can use indexes, such as in a cross-reference, \ninside the text of a section, but only if the index does not\nappear at the start of a line.\n\n```text\n1. If you want to refer to sub-section (2), this\nwill work just fine.\n\n2. If you want to refer to sub-section\n(1) this will not work.\n```\n### Sub-Sections\n\nSub-sections are indicated with an index of an arabic number in parentheses.\nThey must be indented from their parent section. They can have a header,\nwhich also must be indented the same amount. They must be followed by legal\ntext, and may also then have an indented list of paragraphs. If there is an\nindented list of paragraphs, it may be followed by sandwich text.\n\nLegal text can go across multiple lines, but if they appear at the start\nof a line, that will cause confusion.\n\n```text\n1. This is a section.\n  (1) This is the first sub-section.\n    (a) the first subsection has paragraphs.\n  with sandwich text.\n\n  Named Sub-Subection\n  (2) This is a subsection with a header, and\n  which refers to subsection (1) in a way\n  that works. \n```\n\n### Paragraphs\n\nParagraphs are indented from a section or sub-section, and are indicated\nwith a lower-case alphabetic character or characters surrounded by \nparenthesis. They must then have legal text, which can span across lines\nin the same way as in sections and sub-sections. A paragraph can have\nan indented list of sub-paragraphs. Paragraphs cannot have a header.\n\n### Sub-Paragraphs\n\nSub-paragraphs are indented from a paragraph, and are indicated wth a\nlower-case roman numeral surrounded in parentheses. They must have\nlegal text, which can span across lines in the usual way.\nSub-paragraphs cannot have further sub-divisions, and cannot have a header.\n\n### Spans\n\nAkoma Ntoso provides a mechanism for you to identify \na sub-part of a block of text inside a law. In CLEAN you can create\nthese named spans by using the following syntax: `[name]{contents}`.\n\n```text\n1. This is an example of the text of a section [name]{with\na named span of text} included in it.\n```\n\nThe name given to a span between the square brackets must not have any\nspaces in it. It should be unique to be useful. Spans can be \nnested inside one another.\n\n## An Example\n\nAn example act might look like this:\n```text\nRock Paper Scissors Act\n\nPlayers\n1. A game of rock paper scissors has two players.\n2. There are three signs:\n  (a) Rock,\n  (b) Paper, and\n  (c) Scissors.\n\nDefeating Relationships\n3.\n  (1) Rock beats Scissors,\n  (2) Scissors beats Paper, and\n  (3) Paper beats Rock.\n\nWinner\n4. The winner of a game is the player who throws\na sign that beats the sign of the other player.\n```\n\n## Known Issues\nSome things to be aware of if you are playing with it:\n* there is no validation of roman numerals. If it uses `i`, `v`, `x`, etc., it\n  will be accepted\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lexpedite/clean",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "clean-law",
    "package_url": "https://pypi.org/project/clean-law/",
    "platform": null,
    "project_url": "https://pypi.org/project/clean-law/",
    "project_urls": {
      "Homepage": "https://github.com/lexpedite/clean"
    },
    "release_url": "https://pypi.org/project/clean-law/0.0.4/",
    "requires_dist": [
      "pyparsing (>=3.0.6)",
      "pytest (>=5.4.3)"
    ],
    "requires_python": "",
    "summary": "Generate Akoma Ntoso from Plain Text Laws",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13443515,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fd43ef4ad5a8ecb1fe3aa65fce29fbd0bbb56215218bc00264101d37ee27b49",
          "md5": "508255b909caa3a599bf6db22b9e359d",
          "sha256": "41d97fad964574444139b4c9d33883ed710accae027e42bc85613483b2cd2b03"
        },
        "downloads": -1,
        "filename": "clean_law-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "508255b909caa3a599bf6db22b9e359d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7021,
        "upload_time": "2022-03-11T06:09:26",
        "upload_time_iso_8601": "2022-03-11T06:09:26.459579Z",
        "url": "https://files.pythonhosted.org/packages/3f/d4/3ef4ad5a8ecb1fe3aa65fce29fbd0bbb56215218bc00264101d37ee27b49/clean_law-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f440c27815dca2d445d7c444ade9faf8bb0eec99b75c55157eafb5745ddd6db6",
          "md5": "f92b81d440c31fdfa7d77b45e11c4b6f",
          "sha256": "f26462e716721b82a311ffbd537d478637c88d7413cf0414cc17c0d5a03740e3"
        },
        "downloads": -1,
        "filename": "clean-law-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f92b81d440c31fdfa7d77b45e11c4b6f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6645,
        "upload_time": "2022-03-11T06:09:27",
        "upload_time_iso_8601": "2022-03-11T06:09:27.924130Z",
        "url": "https://files.pythonhosted.org/packages/f4/40/c27815dca2d445d7c444ade9faf8bb0eec99b75c55157eafb5745ddd6db6/clean-law-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7b07de4910e420774e37fde1c9b1c2a29ccfc1bbc8273b15a719790d40f4fe7",
          "md5": "11ea16ed20faff571514b1d319b8124c",
          "sha256": "edac6eb90e89d519de50d6e48f4f881d6364211e67de9ec76fd0081f00659b6b"
        },
        "downloads": -1,
        "filename": "clean_law-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "11ea16ed20faff571514b1d319b8124c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7608,
        "upload_time": "2022-04-03T03:54:37",
        "upload_time_iso_8601": "2022-04-03T03:54:37.448769Z",
        "url": "https://files.pythonhosted.org/packages/e7/b0/7de4910e420774e37fde1c9b1c2a29ccfc1bbc8273b15a719790d40f4fe7/clean_law-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1134c52318dad69970761de02f4389785870a4b3cf0fe2a8150e716d99a9da04",
          "md5": "d8eb7daebb6d212cd20a336719509649",
          "sha256": "584064c1040fa18eb72058b73fc227b9e2398bf521d658a519ccdd3f9ab68cdb"
        },
        "downloads": -1,
        "filename": "clean-law-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d8eb7daebb6d212cd20a336719509649",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7548,
        "upload_time": "2022-04-02T17:23:02",
        "upload_time_iso_8601": "2022-04-02T17:23:02.594548Z",
        "url": "https://files.pythonhosted.org/packages/11/34/c52318dad69970761de02f4389785870a4b3cf0fe2a8150e716d99a9da04/clean-law-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "215d27c6c4cf8aad1a5134fca7a2bb27d3d8eff82d8144cb4da4723f64976e3d",
          "md5": "3e15dec27a7e059d36f6f9fa3181d811",
          "sha256": "4d230d33139f985086385e268ce3fce57ebe09634c1f44417a68af82f5a289a9"
        },
        "downloads": -1,
        "filename": "clean_law-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3e15dec27a7e059d36f6f9fa3181d811",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7608,
        "upload_time": "2022-04-05T20:35:58",
        "upload_time_iso_8601": "2022-04-05T20:35:58.561924Z",
        "url": "https://files.pythonhosted.org/packages/21/5d/27c6c4cf8aad1a5134fca7a2bb27d3d8eff82d8144cb4da4723f64976e3d/clean_law-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d82a824f277e408ba7f2ebd394ec14ed61b1adc357d134fa14cbbd2ce7f36f40",
          "md5": "78fad87b65068203bad95b2c64e12137",
          "sha256": "f8d95e47e1a3657049538f2923852cf610c6ff07d56b0444892cb33d7d897a7a"
        },
        "downloads": -1,
        "filename": "clean-law-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "78fad87b65068203bad95b2c64e12137",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7568,
        "upload_time": "2022-04-05T20:36:01",
        "upload_time_iso_8601": "2022-04-05T20:36:01.939371Z",
        "url": "https://files.pythonhosted.org/packages/d8/2a/824f277e408ba7f2ebd394ec14ed61b1adc357d134fa14cbbd2ce7f36f40/clean-law-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0de64772ff05c65f346f238751e7731b753291ec1e769a7ab9c0d446bf4dad1",
          "md5": "69be19a1c76cb90c48994c7882076de8",
          "sha256": "22660771d31b00686fa88b021331f009550e7f3622039f216deab177a2b045c5"
        },
        "downloads": -1,
        "filename": "clean_law-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69be19a1c76cb90c48994c7882076de8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7613,
        "upload_time": "2022-04-07T16:28:22",
        "upload_time_iso_8601": "2022-04-07T16:28:22.957928Z",
        "url": "https://files.pythonhosted.org/packages/c0/de/64772ff05c65f346f238751e7731b753291ec1e769a7ab9c0d446bf4dad1/clean_law-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe9d0a2fefedd2652ea01afec64465caff7c680501cadd8f0e7392e6c61be202",
          "md5": "8c5c950673d597518cf16734b3dc0598",
          "sha256": "cbe783fd00c8ddd4ffa9119e6839a28f0cb90315a59a28f9061f26b5a6598ef6"
        },
        "downloads": -1,
        "filename": "clean-law-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8c5c950673d597518cf16734b3dc0598",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7569,
        "upload_time": "2022-04-07T16:28:25",
        "upload_time_iso_8601": "2022-04-07T16:28:25.045275Z",
        "url": "https://files.pythonhosted.org/packages/fe/9d/0a2fefedd2652ea01afec64465caff7c680501cadd8f0e7392e6c61be202/clean-law-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c0de64772ff05c65f346f238751e7731b753291ec1e769a7ab9c0d446bf4dad1",
        "md5": "69be19a1c76cb90c48994c7882076de8",
        "sha256": "22660771d31b00686fa88b021331f009550e7f3622039f216deab177a2b045c5"
      },
      "downloads": -1,
      "filename": "clean_law-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "69be19a1c76cb90c48994c7882076de8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7613,
      "upload_time": "2022-04-07T16:28:22",
      "upload_time_iso_8601": "2022-04-07T16:28:22.957928Z",
      "url": "https://files.pythonhosted.org/packages/c0/de/64772ff05c65f346f238751e7731b753291ec1e769a7ab9c0d446bf4dad1/clean_law-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe9d0a2fefedd2652ea01afec64465caff7c680501cadd8f0e7392e6c61be202",
        "md5": "8c5c950673d597518cf16734b3dc0598",
        "sha256": "cbe783fd00c8ddd4ffa9119e6839a28f0cb90315a59a28f9061f26b5a6598ef6"
      },
      "downloads": -1,
      "filename": "clean-law-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "8c5c950673d597518cf16734b3dc0598",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7569,
      "upload_time": "2022-04-07T16:28:25",
      "upload_time_iso_8601": "2022-04-07T16:28:25.045275Z",
      "url": "https://files.pythonhosted.org/packages/fe/9d/0a2fefedd2652ea01afec64465caff7c680501cadd8f0e7392e6c61be202/clean-law-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}