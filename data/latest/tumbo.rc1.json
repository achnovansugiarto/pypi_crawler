{
  "info": {
    "author": "cupcakearmy",
    "author_email": "hi@nicco.io",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# tumbo\n\nDocker matrix build generator\n\n```yaml\nvariables:\n    my_var:\n        - a\n        - b\n        - c\n    some_other:\n        - 0.1.0\n        - 0.1.2\n\ncontext: ./build\nrecipe: './Dockerfile.j2'\ntag: \"my-tag:{{ my_var }}-{{ some_other }}\"\n\nparallel: no\n# no\n# yes : uses all threads available\n# n : number of threads to use\n# default: yes\n\npush: yes\nrun: yes\nregistry:\n    username: my_user\n    password: my_pass\n    host: my_host\n```\n\n## ðŸ“˜ Config Reference\n\n### Variables\n\nThe variables to build the matrix. Simply specify an array for each variable. They will be available in the template.\n\n```yaml\nvariables:\n    my_var:\n        - a\n        - b\n        - c\n    some_other:\n        - 0.1.0\n        - 0.1.2\n```\n\n### Recipe\n\nThe template to compile the dockerfile. Can be a template itself if you don't want to write everything in the same file.\n\n###### Simple\n\n```yaml\nrecipe: './Dockerfile.j2'\n```\n\n###### Template\n\n```yaml\nvariables:\n    my_var:\n        - a\n        - b\n\nrecipe: './{{ my_var }}.j2'\n```\n\nAssuming `my_var` hast the values `a` and `b` it will render to `./a.j2` and `./b.j2` accordingly.\n\n### Context (Optional)\n\n**Default:** directory of the config file.\n\nSpecify the directory where the templates and the dockerfiles will be built.\nSupports both absolute and relative paths.\n\n```yaml\ncontext: ./build\n```\n\n### Tag (Optional)\n\n**Default:** Creates a tag that includes all variables.\nIn most cases it will not be necessary to specify, but can be usefull if your are pushing images. Supports templating of course.\n\n**Important:** The tag should be unique across the matrix, otherwise you will overwrite other tags. So always include all the variables you specified inside the image name\n\n```yaml\nvariables:\n    var1:\n        - a\n        - b\n    var2:\n        - a\n        - b\n    var3:\n        - a\n        - b\n\ntag: 'my-image-name:{{ var3 }}-{{ var1 }}-{{ var2 }}'\n```\n\n### Parallel (Optional)\n\n**Default:** yes\n\nWhether the builds/push/runs should run in parallel or after each other.\n\n###### no\n\nParallel off.\n\n```yaml\nparallel: no\n```\n\n\n###### yes\n\nUses all the threads available on the machine.\n\n```yaml\nparallel: yes\n```\n\n\n###### number\n\nUses how many thread you specify\n\n```yaml\nparallel: 2\n```\n\n### run (Optional)\n\n**Default:** no\n\nWether to run the docker image after building. Can be usefull if running automated tests.\n\n```yaml\nrun: yes\n```\n\n### push (Optional)\n\n**Default:** no\n\nWether to push the docker image after building.\nCan be used to push images to the docker registry (or your own).\nSee below on how to login.\n\n```yaml\nrun: yes\n```\n\n### registry (Optional)\n\n**Default:** Empty\n\nCredentials for `docker login`. Used to push images and to specify a custom registry if necessary.\n\n```yaml\nregistry:\n    username: my_user\n    password: my_pass\n    host: my_host\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cupcakearmy/tumbo",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tumbo",
    "package_url": "https://pypi.org/project/tumbo/",
    "platform": "",
    "project_url": "https://pypi.org/project/tumbo/",
    "project_urls": {
      "Homepage": "https://github.com/cupcakearmy/tumbo"
    },
    "release_url": "https://pypi.org/project/tumbo/0.7/",
    "requires_dist": [
      "Jinja2 (==2.10.3)",
      "PyYAML (==5.2)",
      "termcolor (==1.1.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Matrix builder for docker",
    "version": "0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6348736,
  "releases": {
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1379573ef55dfd23448ea73b7c792387f3fbbefc906a9c17b9a5289b0afecbc8",
          "md5": "8ad0612d8881977ff21d83d0c29f25a6",
          "sha256": "c562f5818dc449a8e787935d10a1c68727ed5e53a7ab4de053e46c726e0f07bb"
        },
        "downloads": -1,
        "filename": "tumbo-0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8ad0612d8881977ff21d83d0c29f25a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17963,
        "upload_time": "2019-12-22T22:39:04",
        "upload_time_iso_8601": "2019-12-22T22:39:04.333740Z",
        "url": "https://files.pythonhosted.org/packages/13/79/573ef55dfd23448ea73b7c792387f3fbbefc906a9c17b9a5289b0afecbc8/tumbo-0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffb8fcf0f1dbc1d15e9ef21a4c19d2a0c1fc362b55ef9d179450f57346b02e94",
          "md5": "e9d386ac3a38baf6e89592eb30f0e5c2",
          "sha256": "19b926904f3941e28595c0bc699d62884d68b99fffa70359a7b43a3184877192"
        },
        "downloads": -1,
        "filename": "tumbo-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "e9d386ac3a38baf6e89592eb30f0e5c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4861,
        "upload_time": "2019-12-22T22:39:05",
        "upload_time_iso_8601": "2019-12-22T22:39:05.731250Z",
        "url": "https://files.pythonhosted.org/packages/ff/b8/fcf0f1dbc1d15e9ef21a4c19d2a0c1fc362b55ef9d179450f57346b02e94/tumbo-0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1379573ef55dfd23448ea73b7c792387f3fbbefc906a9c17b9a5289b0afecbc8",
        "md5": "8ad0612d8881977ff21d83d0c29f25a6",
        "sha256": "c562f5818dc449a8e787935d10a1c68727ed5e53a7ab4de053e46c726e0f07bb"
      },
      "downloads": -1,
      "filename": "tumbo-0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8ad0612d8881977ff21d83d0c29f25a6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 17963,
      "upload_time": "2019-12-22T22:39:04",
      "upload_time_iso_8601": "2019-12-22T22:39:04.333740Z",
      "url": "https://files.pythonhosted.org/packages/13/79/573ef55dfd23448ea73b7c792387f3fbbefc906a9c17b9a5289b0afecbc8/tumbo-0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ffb8fcf0f1dbc1d15e9ef21a4c19d2a0c1fc362b55ef9d179450f57346b02e94",
        "md5": "e9d386ac3a38baf6e89592eb30f0e5c2",
        "sha256": "19b926904f3941e28595c0bc699d62884d68b99fffa70359a7b43a3184877192"
      },
      "downloads": -1,
      "filename": "tumbo-0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "e9d386ac3a38baf6e89592eb30f0e5c2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4861,
      "upload_time": "2019-12-22T22:39:05",
      "upload_time_iso_8601": "2019-12-22T22:39:05.731250Z",
      "url": "https://files.pythonhosted.org/packages/ff/b8/fcf0f1dbc1d15e9ef21a4c19d2a0c1fc362b55ef9d179450f57346b02e94/tumbo-0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}