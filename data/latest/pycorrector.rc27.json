{
  "info": {
    "author": "XuMing",
    "author_email": "xuming624@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Natural Language :: Chinese (Simplified)",
      "Natural Language :: Chinese (Traditional)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "![alt text](docs/pycorrector.png)\n\n[![PyPI version](https://badge.fury.io/py/pycorrector.svg)](https://badge.fury.io/py/pycorrector)\n[![Downloads](https://pepy.tech/badge/pycorrector)](https://pepy.tech/project/pycorrector)\n[![GitHub contributors](https://img.shields.io/github/contributors/shibing624/pycorrector.svg)](https://github.com/shibing624/pycorrector/graphs/contributors)\n[![License Apache 2.0](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](LICENSE)\n[![python_vesion](https://img.shields.io/badge/Python-3.6%2B-green.svg)](requirements.txt)\n[![GitHub issues](https://img.shields.io/github/issues/shibing624/pycorrector.svg)](https://github.com/shibing624/pycorrector/issues)\n[![Wechat Group](http://vlog.sfyc.ltd/wechat_everyday/wxgroup_logo.png?imageView2/0/w/60/h/20)](#wechat-group)\n\n[English](README.en.md) | 简体中文\n\n# pycorrector\n\n中文文本纠错工具。支持中文音似、形似、语法错误纠正，python3开发。\n\n**pycorrector**实现了Kenlm、ConvSeq2Seq、BERT、MacBERT、ELECTRA、ERNIE、Transformer等多种模型的文本纠错，并在SigHAN数据集评估各模型的效果。\n\n**Guide**\n\n- [Question](#Question)\n- [Solution](#Solution)\n- [Evaluation](#Evaluation)\n- [Install](#install)\n- [Usage](#usage)\n- [Deep Model Usage](#deep-model-usage)\n- [Dataset](#Dataset)\n- [Contact](#Contact)\n- [Reference](#reference)\n\n# Question\n\n中文文本纠错任务，常见错误类型：\n\n<img src=\"docs/git_image/error_type.png\" width=\"600\" />\n\n当然，针对不同业务场景，这些问题并不一定全部存在，比如拼音输入法、语音识别校对关注音似错误；五笔输入法、OCR校对关注形似错误，\n搜索引擎query纠错关注所有错误类型。\n\n本项目重点解决其中的\"音似、形字、语法、专名错误\"等类型。\n\n# Solution\n\n### 规则的解决思路\n依据语言模型检测错别字位置，通过拼音音似特征、笔画五笔编辑距离特征及语言模型困惑度特征纠正错别字。\n\n1. 中文纠错分为两步走，第一步是错误检测，第二步是错误纠正；\n2. 错误检测部分先通过结巴中文分词器切词，由于句子中含有错别字，所以切词结果往往会有切分错误的情况，这样从字粒度和词粒度两方面检测错误， 整合这两种粒度的疑似错误结果，形成疑似错误位置候选集；\n3. 错误纠正部分，是遍历所有的疑似错误位置，并使用音似、形似词典替换错误位置的词，然后通过语言模型计算句子困惑度，对所有候选集结果比较并排序，得到最优纠正词。\n\n### 深度模型的解决思路\n\n1. 端到端的深度模型可以避免人工提取特征，减少人工工作量，RNN序列模型对文本任务拟合能力强，RNN Attn在英文文本纠错比赛中取得第一名成绩，证明应用效果不错；\n2. CRF会计算全局最优输出节点的条件概率，对句子中特定错误类型的检测，会根据整句话判定该错误，阿里参赛2016中文语法纠错任务并取得第一名，证明应用效果不错；\n3. Seq2Seq模型是使用Encoder-Decoder结构解决序列转换问题，目前在序列转换任务中（如机器翻译、对话生成、文本摘要、图像描述）使用最广泛、效果最好的模型之一；\n4. BERT/ELECTRA/ERNIE/MacBERT等预训练模型强大的语言表征能力，对NLP届带来翻天覆地的改变，海量的训练数据拟合的语言模型效果无与伦比，基于其MASK掩码的特征，可以简单改造预训练模型用于纠错，加上fine-tune，效果轻松达到最优。\n\nPS：\n\n- [作者纠错分享](https://github.com/shibing624/pycorrector/wiki/pycorrector%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB-%E7%9B%B4%E6%92%AD%E5%88%86%E4%BA%AB)\n- [网友源码解读](https://zhuanlan.zhihu.com/p/138981644)\n\n\n# Feature\n\n* [Kenlm模型](pycorrector/corrector.py)：本项目基于Kenlm统计语言模型工具训练了中文NGram语言模型，结合规则方法、混淆集可以纠正中文拼写错误，方法速度快，扩展性强，效果一般\n* [MacBERT模型](pycorrector/macbert)【推荐】：本项目基于PyTorch实现了用于中文文本纠错的MacBERT4CSC模型，模型加入了错误检测和纠正网络，适配中文拼写纠错任务，效果好\n* [Seq2Seq模型](pycorrector/seq2seq)：本项目基于PyTorch实现了用于中文文本纠错的Seq2Seq模型、ConvSeq2Seq模型，其中ConvSeq2Seq在NLPCC-2018的中文语法纠错比赛中，使用单模型并取得第三名，可以并行训练，模型收敛快，效果一般\n* [T5模型](pycorrector/t5)：本项目基于PyTorch实现了用于中文文本纠错的T5模型，使用Langboat/mengzi-t5-base的预训练模型fine-tune中文纠错数据集，模型改造的潜力较大，效果好\n* [BERT模型](pycorrector/bert)：本项目基于PyTorch实现了基于原生BERT的fill-mask能力进行纠正错字的方法，效果差\n* [ELECTRA模型](pycorrector/electra)：本项目基于PyTorch实现了基于原生ELECTRA的fill-mask能力进行纠正错字的方法，效果差\n* [ERNIE_CSC模型](pycorrector/ernie_csc)：本项目基于PaddlePaddle实现了用于中文文本纠错的ERNIE_CSC模型，模型在ERNIE-1.0上fine-tune，模型结构适配了中文拼写纠错任务，效果好\n* [DeepContext模型](pycorrector/deepcontext)：本项目基于PyTorch实现了用于文本纠错的DeepContext模型，该模型结构参考Stanford University的NLC模型，2014英文纠错比赛得第一名，效果一般\n* [Transformer模型](pycorrector/transformer)：本项目基于PyTorch的fairseq库调研了Transformer模型用于中文文本纠错，效果一般\n\n#### 思考\n\n1. 规则的方法，在词粒度的错误召回还不错，但错误纠正的准确率还有待提高，更多优质的纠错集及纠错词库会有提升，我更希望算法模型上有更大的突破。\n2. 现在的文本错误不再局限于字词粒度上的拼写错误，需要提高中文语法错误检测（CGED, Chinese Grammar Error Diagnosis）及纠正能力，列在TODO中，后续调研。\n\n# Demo\n\nOfficial Demo: https://www.mulanai.com/product/corrector/\n\nHuggingFace Demo: https://huggingface.co/spaces/shibing624/pycorrector\n\n![](docs/hf.png)\n\nrun example: [examples/gradio_demo.py](examples/gradio_demo.py) to see the demo:\n```shell\npython examples/gradio_demo.py\n```\n\n# Evaluation\n\n提供评估脚本[examples/evaluate_models.py](./examples/evaluate_models.py)：\n\n- 使用sighan15评估集：SIGHAN2015的测试集[pycorrector/data/cn/sighan_2015/test.tsv](pycorrector/data/cn/sighan_2015/test.tsv)\n  ，已经转为简体中文。\n- 评估标准：纠错准召率，采用严格句子粒度（Sentence Level）计算方式，把模型纠正之后的与正确句子完成相同的视为正确，否则为错。\n\n### 评估结果\n评估数据集：SIGHAN2015测试集\n\nGPU：Tesla V100，显存 32 GB\n\n| 模型 | Backbone | GPU | Precision | Recall | F1 | QPS |\n| :-- | :-- | :---  | :----- | :--| :--- | :--- |\n| Rule(pycorrector.correct) | kenlm | CPU | 0.6860 | 0.1529 | 0.2500 | 9 |\n| BERT | bert-base-chinese | GPU | 0.8029 | 0.4052 | 0.5386 | 2 |\n| BART | fnlp/bart-base-chinese | GPU | 0.6984 | 0.6354 | 0.6654 | 58 |\n| T5 | byt5-small | GPU | 0.5220 | 0.3941 | 0.4491 | 111 |\n| Mengzi-T5 | mengzi-t5-base | GPU | 0.8321 | 0.6390 | 0.7229 | 214 |\n| ConvSeq2Seq | ConvSeq2Seq | GPU | 0.2415 | 0.1436 | 0.1801 | 6 |\n| **MacBert** | **macbert-base-chinese** | **GPU** | **0.8254** | **0.7311** | **0.7754** | **224** |\n\n### 结论\n\n- 中文拼写纠错模型效果最好的是**MacBert**，模型名称是*shibing624/macbert4csc-base-chinese*，huggingface model：[shibing624/macbert4csc-base-chinese](https://huggingface.co/shibing624/macbert4csc-base-chinese)\n- 中文语法纠错模型效果最好的是**Seq2Seq**，模型名称是*shibing624/bart4csc-base-chinese*，huggingface model：[shibing624/bart4csc-base-chinese](https://huggingface.co/shibing624/bart4csc-base-chinese)\n- 最具潜力的模型是**T5**，模型名称是*shibing624/mengzi-t5-base-chinese-correction*，huggingface model：[shibing624/mengzi-t5-base-chinese-correction](https://huggingface.co/shibing624/mengzi-t5-base-chinese-correction)，未改变模型结构，仅fine-tune中文纠错数据集，已经在`SIGHAN 2015`取得接近SOTA的效果\n\n# Install\n\n```shell\npip install -U pycorrector\n```\n\nor\n\n```shell\npip install -r requirements.txt\n\ngit clone https://github.com/shibing624/pycorrector.git\ncd pycorrector\npip install --no-deps .\n```\n\n\n通过以上两种方法的任何一种完成安装都可以。如果不想安装依赖包，直接使用docker拉取安装好的部署环境即可。\n\n#### 安装依赖\n\n* docker使用\n\n```shell\ndocker run -it -v ~/.pycorrector:/root/.pycorrector shibing624/pycorrector:0.0.2\n```\n\n后续调用python使用即可，该镜像已经安装好kenlm、pycorrector等包，具体参见[Dockerfile](Dockerfile)。\n\n使用示例：\n\n![docker](docs/git_image/docker.png)\n\n* kenlm安装\n\n```\npip install kenlm\n```\n\n[安装kenlm-wiki](https://github.com/shibing624/pycorrector/wiki/Install-kenlm)\n\n* 其他库包安装\n\n```\npip install -r requirements.txt\n```\n\n# Usage\n\n### 文本纠错\n\nexample: [examples/base_demo.py](examples/base_demo.py)\n\n```python\nimport pycorrector\n\ncorrected_sent, detail = pycorrector.correct('少先队员因该为老人让坐')\nprint(corrected_sent, detail)\n```\n\noutput:\n\n```\n少先队员应该为老人让座 [('因该', '应该', 4, 6), ('坐', '座', 10, 11)]\n```\n\n> 规则方法默认会从路径`~/.pycorrector/datasets/zh_giga.no_cna_cmn.prune01244.klm`加载kenlm语言模型文件，如果检测没有该文件，\n则程序会自动联网下载。当然也可以手动下载[模型文件(2.8G)](https://deepspeech.bj.bcebos.com/zh_lm/zh_giga.no_cna_cmn.prune01244.klm)并放置于该位置。\n\n### 错误检测\n\nexample: [examples/detect_demo.py](examples/detect_demo.py)\n\n```python\nimport pycorrector\n\nidx_errors = pycorrector.detect('少先队员因该为老人让坐')\nprint(idx_errors)\n```\n\noutput:\n\n```\n[['因该', 4, 6, 'word'], ['坐', 10, 11, 'char']]\n```\n\n> 返回类型是`list`, `[error_word, begin_pos, end_pos, error_type]`，`pos`索引位置以0开始。\n\n### 成语、专名纠错\n\nexample: [examples/proper_correct_demo.py](examples/proper_correct_demo.py)\n\n```python\nimport sys\n\nsys.path.append(\"..\")\nfrom pycorrector.proper_corrector import ProperCorrector\n\nm = ProperCorrector()\nx = [\n    '报应接中迩来',\n    '今天在拼哆哆上买了点苹果',\n]\n\nfor i in x:\n    print(i, ' -> ', m.proper_correct(i))\n```\n\noutput:\n\n```\n报应接中迩来  ->  ('报应接踵而来', [('接中迩来', '接踵而来', 2, 6)])\n今天在拼哆哆上买了点苹果  ->  ('今天在拼多多上买了点苹果', [('拼哆哆', '拼多多', 3, 6)])\n```\n\n\n### 自定义混淆集\n\n通过加载自定义混淆集，支持用户纠正已知的错误，包括两方面功能：1）【提升准确率】误杀加白；2）【提升召回率】补充召回。\n\nexample: [examples/use_custom_confusion.py](examples/use_custom_confusion.py)\n\n```python\nimport pycorrector\n\nerror_sentences = [\n    '买iphonex，要多少钱',\n    '共同实际控制人萧华、霍荣铨、张旗康',\n]\nfor line in error_sentences:\n    print(pycorrector.correct(line))\n\nprint('*' * 42)\npycorrector.set_custom_confusion_path_or_dict('./my_custom_confusion.txt')\nfor line in error_sentences:\n    print(pycorrector.correct(line))\n```\n\noutput:\n\n```\n('买iphonex，要多少钱', [])   # \"iphonex\"漏召，应该是\"iphoneX\"\n('共同实际控制人萧华、霍荣铨、张启康', [['张旗康', '张启康', 14, 17]]) # \"张启康\"误杀，应该不用纠\n*****************************************************\n('买iphonex，要多少钱', [['iphonex', 'iphoneX', 1, 8]])\n('共同实际控制人萧华、霍荣铨、张旗康', [])\n```\n\n> 其中`./my_custom_confusion.txt`的内容格式如下，以空格间隔：\n\n```\niPhone差 iPhoneX\n张旗康 张旗康\n```\n\n> 混淆集功能在`correct`方法中生效；\n> `set_custom_confusion_dict`方法的`path`参数为用户自定义混淆集文件路径(str)或混淆集字典(dict)。\n\n### 自定义语言模型\n\n默认提供下载并使用的kenlm语言模型`zh_giga.no_cna_cmn.prune01244.klm`文件是2.8G，内存小的电脑使用`pycorrector`程序可能会吃力些。\n\n支持用户加载自己训练的kenlm语言模型，或使用2014版人民日报数据训练的模型，模型小（140M），准确率稍低，模型下载地址：[people2014corpus_chars.klm(密码o5e9)](https://pan.baidu.com/s/1I2GElyHy_MAdek3YaziFYw)。\n\nexample：[examples/load_custom_language_model.py](examples/load_custom_language_model.py)\n\n```python\nfrom pycorrector import Corrector\nimport os\n\npwd_path = os.path.abspath(os.path.dirname(__file__))\nlm_path = os.path.join(pwd_path, './people2014corpus_chars.klm')\nmodel = Corrector(language_model_path=lm_path)\n\ncorrected_sent, detail = model.correct('少先队员因该为老人让坐')\nprint(corrected_sent, detail)\n```\n\noutput:\n\n```\n少先队员应该为老人让座 [('因该', '应该', 4, 6), ('坐', '座', 10, 11)]\n```\n\n### 英文拼写纠错\n\n支持英文单词级别的拼写错误纠正。\n\nexample：[examples/en_correct_demo.py](examples/en_correct_demo.py)\n\n```python\nimport pycorrector\n\nsent = \"what happending? how to speling it, can you gorrect it?\"\ncorrected_text, details = pycorrector.en_correct(sent)\nprint(sent, '=>', corrected_text)\nprint(details)\n```\n\noutput:\n\n```\nwhat happending? how to speling it, can you gorrect it?\n=> what happening? how to spelling it, can you correct it?\n[('happending', 'happening', 5, 15), ('speling', 'spelling', 24, 31), ('gorrect', 'correct', 44, 51)]\n```\n\n### 中文简繁互换\n\n支持中文繁体到简体的转换，和简体到繁体的转换。\n\nexample：[examples/traditional_simplified_chinese_demo.py](examples/traditional_simplified_chinese_demo.py)\n\n```python\nimport pycorrector\n\ntraditional_sentence = '憂郁的臺灣烏龜'\nsimplified_sentence = pycorrector.traditional2simplified(traditional_sentence)\nprint(traditional_sentence, '=>', simplified_sentence)\n\nsimplified_sentence = '忧郁的台湾乌龟'\ntraditional_sentence = pycorrector.simplified2traditional(simplified_sentence)\nprint(simplified_sentence, '=>', traditional_sentence)\n```\n\noutput:\n\n```\n憂郁的臺灣烏龜 => 忧郁的台湾乌龟\n忧郁的台湾乌龟 => 憂郁的臺灣烏龜\n```\n\n### 命令行模式\n\n支持批量文本纠错\n\n```\npython -m pycorrector -h\nusage: __main__.py [-h] -o OUTPUT [-n] [-d] input\n\n@description:\n\npositional arguments:\n  input                 the input file path, file encode need utf-8.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o OUTPUT, --output OUTPUT\n                        the output file path.\n  -n, --no_char         disable char detect mode.\n  -d, --detail          print detail info\n```\n\ncase：\n\n```\npython -m pycorrector input.txt -o out.txt -n -d\n```\n\n> 输入文件：`input.txt`；输出文件：`out.txt `；关闭字粒度纠错；打印详细纠错信息；纠错结果以`\\t`间隔\n\n# Deep Model Usage\n\n本项目的初衷之一是比对、共享各种文本纠错方法，抛砖引玉的作用，如果对大家在文本纠错任务上有一点小小的启发就是我莫大的荣幸了。\n\n主要使用了多种深度模型应用于文本纠错任务，分别是前面`模型`小节介绍的[macbert](./pycorrector/macbert)、[seq2seq](./pycorrector/seq2seq)、\n[bert](./pycorrector/bert)、[electra](./pycorrector/electra)、[transformer](./pycorrector/transformer)\n、[ernie-csc](./pycorrector/ernie_csc)、[T5](./pycorrector/t5)，各模型方法内置于`pycorrector`文件夹下，有`README.md`详细指导，各模型可独立运行，相互之间无依赖。\n\n- 安装依赖\n\n```\npip install -r requirements-dev.txt\n```\n\n## 使用方法\n\n各模型均可独立的预处理数据、训练、预测。\n\n### **MacBert4csc模型[推荐]**\n\n基于MacBERT改变网络结构的中文拼写纠错模型，模型已经开源在HuggingFace Models：[https://huggingface.co/shibing624/macbert4csc-base-chinese](https://huggingface.co/shibing624/macbert4csc-base-chinese)\n\n模型网络结构：\n- 本项目是 MacBERT 改变网络结构的中文文本纠错模型，可支持 BERT 类模型为 backbone。\n- 在原生 BERT 模型上进行了魔改，追加了一个全连接层作为错误检测即 [detection](https://github.com/shibing624/pycorrector/blob/c0f31222b7849c452cc1ec207c71e9954bd6ca08/pycorrector/macbert/macbert4csc.py#L18) ，\nMacBERT4CSC 训练时用 detection 层和 correction 层的 loss 加权得到最终的 loss。预测时用 BERT MLM 的 correction 权重即可。 \n\n![macbert_network](https://github.com/shibing624/pycorrector/blob/master/docs/git_image/macbert_network.jpg)\n\n详细教程参考[pycorrector/macbert/README.md](./pycorrector/macbert/README.md)\n\nexample：[examples/macbert_demo.py](examples/macbert_demo.py)\n#### 使用pycorrector调用纠错：\n\n```python\nimport sys\n\nsys.path.append(\"..\")\nfrom pycorrector.macbert.macbert_corrector import MacBertCorrector\n\nif __name__ == '__main__':\n    error_sentences = [\n        '真麻烦你了。希望你们好好的跳无',\n        '少先队员因该为老人让坐',\n        '机七学习是人工智能领遇最能体现智能的一个分知',\n        '一只小鱼船浮在平净的河面上',\n        '我的家乡是有明的渔米之乡',\n    ]\n\n    m = MacBertCorrector(\"shibing624/macbert4csc-base-chinese\")\n    for line in error_sentences:\n        correct_sent, err = m.macbert_correct(line)\n        print(\"query:{} => {}, err:{}\".format(line, correct_sent, err))\n```\n\noutput：\n\n```bash\nquery:真麻烦你了。希望你们好好的跳无 => 真麻烦你了。希望你们好好的跳舞, err:[('无', '舞', 14, 15)]\nquery:少先队员因该为老人让坐 => 少先队员应该为老人让坐, err:[('因', '应', 4, 5)]\nquery:机七学习是人工智能领遇最能体现智能的一个分知 => 机器学习是人工智能领域最能体现智能的一个分知, err:[('七', '器', 1, 2), ('遇', '域', 10, 11)]\nquery:一只小鱼船浮在平净的河面上 => 一只小鱼船浮在平净的河面上, err:[]\nquery:我的家乡是有明的渔米之乡 => 我的家乡是有名的渔米之乡, err:[('明', '名', 6, 7)]\n```\n\n#### 使用原生transformers库调用纠错：\n\n```python\nimport operator\nimport torch\nfrom transformers import BertTokenizerFast, BertForMaskedLM\ndevice = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n\ntokenizer = BertTokenizerFast.from_pretrained(\"shibing624/macbert4csc-base-chinese\")\nmodel = BertForMaskedLM.from_pretrained(\"shibing624/macbert4csc-base-chinese\")\nmodel.to(device)\n\ntexts = [\"今天新情很好\", \"你找到你最喜欢的工作，我也很高心。\"]\n\ntext_tokens = tokenizer(texts, padding=True, return_tensors='pt').to(device)\nwith torch.no_grad():\n    outputs = model(**text_tokens)\n\ndef get_errors(corrected_text, origin_text):\n    sub_details = []\n    for i, ori_char in enumerate(origin_text):\n        if ori_char in [' ', '“', '”', '‘', '’', '\\n', '…', '—', '擤']:\n            # add unk word\n            corrected_text = corrected_text[:i] + ori_char + corrected_text[i:]\n            continue\n        if i >= len(corrected_text):\n            break\n        if ori_char != corrected_text[i]:\n            if ori_char.lower() == corrected_text[i]:\n                # pass english upper char\n                corrected_text = corrected_text[:i] + ori_char + corrected_text[i + 1:]\n                continue\n            sub_details.append((ori_char, corrected_text[i], i, i + 1))\n    sub_details = sorted(sub_details, key=operator.itemgetter(2))\n    return corrected_text, sub_details\n\nresult = []\nfor ids, (i, text) in zip(outputs.logits, enumerate(texts)):\n    _text = tokenizer.decode((torch.argmax(ids, dim=-1) * text_tokens.attention_mask[i]),\n                             skip_special_tokens=True).replace(' ', '')\n    corrected_text, details = get_errors(_text, text)\n    print(text, ' => ', corrected_text, details)\n    result.append((corrected_text, details))\nprint(result)\n```\n\noutput:\n\n```shell\n今天新情很好  =>  今天心情很好 [('新', '心', 2, 3)]\n你找到你最喜欢的工作，我也很高心。  =>  你找到你最喜欢的工作，我也很高兴。 [('心', '兴', 15, 16)]\n```\n\n模型文件：\n\n```\nmacbert4csc-base-chinese\n    ├── config.json\n    ├── added_tokens.json\n    ├── pytorch_model.bin\n    ├── special_tokens_map.json\n    ├── tokenizer_config.json\n    └── vocab.txt\n```\n\n### ErnieCSC模型\n\n基于ERNIE的中文拼写纠错模型，模型已经开源在[PaddleNLP](https://bj.bcebos.com/paddlenlp/taskflow/text_correction/csc-ernie-1.0/csc-ernie-1.0.pdparams)的\n模型库中[https://bj.bcebos.com/paddlenlp/taskflow/text_correction/csc-ernie-1.0/csc-ernie-1.0.pdparams](https://bj.bcebos.com/paddlenlp/taskflow/text_correction/csc-ernie-1.0/csc-ernie-1.0.pdparams)。\n\n模型网络结构：\n\n<img src=\"https://user-images.githubusercontent.com/10826371/131974040-fc84ec04-566f-4310-9839-862bfb27172e.png\" width=\"500\" />\n\n详细教程参考[pycorrector/ernie_csc/README.md](./pycorrector/ernie_csc/README.md)\n\nexample：[examples/ernie_csc_demo.py](examples/ernie_csc_demo.py)\n\n#### 使用pycorrector调用纠错：\n\n```python\n\nfrom pycorrector.ernie_csc.ernie_csc_corrector import ErnieCSCCorrector\n\nif __name__ == '__main__':\n    error_sentences = [\n        '真麻烦你了。希望你们好好的跳无',\n        '少先队员因该为老人让坐',\n        '机七学习是人工智能领遇最能体现智能的一个分知',\n        '一只小鱼船浮在平净的河面上',\n        '我的家乡是有明的渔米之乡',\n    ]\n    corrector = ErnieCSCCorrector(\"csc-ernie-1.0\")\n    for line in error_sentences:\n        result = corrector.ernie_csc_correct(line)[0]\n        print(\"query:{} => {}, err:{}\".format(line, result['target'], result['errors']))\n```\n\noutput:\n\n```bash\n\nquery:真麻烦你了。希望你们好好的跳无 => 真麻烦你了。希望你们好好的跳舞, err:[{'position': 14, 'correction': {'无': '舞'}}]\nquery:少先队员因该为老人让坐 => 少先队员应该为老人让座, err:[{'position': 4, 'correction': {'因': '应'}}, {'position': 10, 'correction': {'坐': '座'}}]\nquery:机七学习是人工智能领遇最能体现智能的一个分知 => 机器学习是人工智能领域最能体现智能的一个分知, err:[{'position': 1, 'correction': {'七': '器'}}, {'position': 10, 'correction': {'遇': '域'}}]\nquery:一只小鱼船浮在平净的河面上 => 一只小鱼船浮在平净的河面上, err:[]\nquery:我的家乡是有明的渔米之乡 => 我的家乡是有名的渔米之乡, err:[{'position': 6, 'correction': {'明': '名'}}]\n\n```\n\n#### 使用PaddleNLP库调用纠错：\n\n可以使用PaddleNLP提供的Taskflow工具来对输入的文本进行一键纠错，具体使用方法如下:\n\n```python\n\nfrom paddlenlp import Taskflow\n\ntext_correction = Taskflow(\"text_correction\")\ntext_correction('遇到逆竟时，我们必须勇于面对，而且要愈挫愈勇，这样我们才能朝著成功之路前进。')\ntext_correction('人生就是如此，经过磨练才能让自己更加拙壮，才能使自己更加乐观。')\n\n```\n\noutput:\n\n```shell\n\n[{'source': '遇到逆竟时，我们必须勇于面对，而且要愈挫愈勇，这样我们才能朝著成功之路前进。',\n    'target': '遇到逆境时，我们必须勇于面对，而且要愈挫愈勇，这样我们才能朝著成功之路前进。',\n    'errors': [{'position': 3, 'correction': {'竟': '境'}}]}]\n\n[{'source': '人生就是如此，经过磨练才能让自己更加拙壮，才能使自己更加乐观。',\n    'target': '人生就是如此，经过磨练才能让自己更加茁壮，才能使自己更加乐观。',\n    'errors': [{'position': 18, 'correction': {'拙': '茁'}}]}]\n\n```\n\n### Bart模型\n\n```python\nfrom transformers import BertTokenizerFast\nfrom textgen import BartSeq2SeqModel\n\ntokenizer = BertTokenizerFast.from_pretrained('shibing624/bart4csc-base-chinese')\nmodel = BartSeq2SeqModel(\n    encoder_type='bart',\n    encoder_decoder_type='bart',\n    encoder_decoder_name='shibing624/bart4csc-base-chinese',\n    tokenizer=tokenizer,\n    args={\"max_length\": 128, \"eval_batch_size\": 128})\nsentences = [\"少先队员因该为老人让坐\"]\nprint(model.predict(sentences))\n```\n\n\noutput:\n\n```shell\n['少先队员应该为老人让座']\n```\n\n如果需要训练Bart模型，请参考 https://github.com/shibing624/textgen/blob/main/examples/seq2seq/training_bartseq2seq_zh_demo.py\n\n#### Release models\n\n基于SIGHAN+Wang271K中文纠错数据集训练的Bart模型，已经release到HuggingFace Models:\n\n- BART模型：模型已经开源在HuggingFace Models：[https://huggingface.co/shibing624/bart4csc-base-chinese](https://huggingface.co/shibing624/bart4csc-base-chinese)\n\n### ConvSeq2Seq模型\n[pycorrector/seq2seq](pycorrector/seq2seq) 模型使用示例:\n\n\n#### 训练\ndata example:\n```\n# train.txt:\n你说的是对，跟那些失业的人比起来你也算是辛运的。\t你说的是对，跟那些失业的人比起来你也算是幸运的。\n```\n\n```shell\ncd seq2seq\npython train.py\n```\n\n`convseq2seq`训练sighan数据集（2104条样本），200个epoch，单卡P40GPU训练耗时：3分钟。\n\n#### 预测\n\n```shell\npython infer.py\n```\n\noutput：\n\n![result image](./docs/git_image/convseq2seq_ret.png)\n\n1. 如果训练数据太少（不足万条），深度模型拟合不足，会出现预测结果全为`unk`的情况，解决方法：增大训练样本集，使用下方提供的纠错熟语料(nlpcc2018+hsk，130万对句子)试试。\n2. 深度模型训练耗时长，有GPU尽量用GPU，加速训练，节省时间。\n\n#### Release models\n\n基于SIGHAN2015数据集训练的convseq2seq模型，已经release到github:\n\n- convseq2seq model url: https://github.com/shibing624/pycorrector/releases/download/0.4.5/convseq2seq_correction.tar.gz\n\n\n# Dataset\n\n| 数据集 | 语料 | 下载链接 | 压缩包大小 |\n| :------- | :--------- | :---------: | :---------: |\n| **`SIGHAN+Wang271K中文纠错数据集`** | SIGHAN+Wang271K(27万条) | [百度网盘（密码01b9）](https://pan.baidu.com/s/1BV5tr9eONZCI0wERFvr0gQ)| 106M |\n| **`原始SIGHAN数据集`** | SIGHAN13 14 15 | [官方csc.html](http://nlp.ee.ncu.edu.tw/resource/csc.html)| 339K |\n| **`原始Wang271K数据集`** | Wang271K | [Automatic-Corpus-Generation dimmywang提供](https://github.com/wdimmy/Automatic-Corpus-Generation/blob/master/corpus/train.sgml)| 93M |\n| **`人民日报2014版语料`** | 人民日报2014版 | [飞书（密码cHcu）](https://l6pmn3b1eo.feishu.cn/file/boxcnKpildqIseq1D4IrLwlir7c?from=from_qr_code)| 383M |\n| **`NLPCC 2018 GEC官方数据集`** | NLPCC2018-GEC | [官方trainingdata](http://tcci.ccf.org.cn/conference/2018/dldoc/trainingdata02.tar.gz) | 114M |\n| **`NLPCC 2018+HSK熟语料`** | nlpcc2018+hsk+CGED | [百度网盘（密码m6fg）](https://pan.baidu.com/s/1BkDru60nQXaDVLRSr7ktfA) <br/> [飞书（密码gl9y）](https://l6pmn3b1eo.feishu.cn/file/boxcnudJgRs5GEMhZwe77YGTQfc?from=from_qr_code) | 215M |\n| **`NLPCC 2018+HSK原始语料`** | HSK+Lang8 | [百度网盘（密码n31j）](https://pan.baidu.com/s/1DaOX89uL1JRaZclfrV9C0g) <br/> [飞书（密码Q9LH）](https://l6pmn3b1eo.feishu.cn/file/boxcntebW3NI6OAaqzDUXlZHoDb?from=from_qr_code) | 81M |\n| **`中文纠错比赛数据汇总`** | Chinese Text Correction（CTC） | [中文纠错汇总数据集（天池）](https://tianchi.aliyun.com/dataset/138195) | - |\n\n\n说明：\n\n- SIGHAN+Wang271K中文纠错数据集(27万条)，是通过原始SIGHAN13、14、15年数据集和Wang271K数据集格式转化后得到，json格式，带错误字符位置信息，SIGHAN为test.json，\n  macbert4csc模型训练可以直接用该数据集复现paper准召结果，详见[pycorrector/macbert/README.md](pycorrector/macbert/README.md)。\n- NLPCC 2018 GEC官方数据集[NLPCC2018-GEC](http://tcci.ccf.org.cn/conference/2018/taskdata.php)，\n  训练集[trainingdata](http://tcci.ccf.org.cn/conference/2018/dldoc/trainingdata02.tar.gz)[解压后114.5MB]，该数据格式是原始文本，未做切词处理。\n- 汉语水平考试（HSK）和lang8原始平行语料[HSK+Lang8][百度网盘（密码n31j）](https://pan.baidu.com/s/1DaOX89uL1JRaZclfrV9C0g)，该数据集已经切词，可用作数据扩增。\n- NLPCC 2018 + HSK + CGED16、17、18的数据，经过以字切分，繁体转简体，打乱数据顺序的预处理后，生成用于纠错的熟语料(nlpcc2018+hsk)\n  ，[百度网盘（密码:m6fg）](https://pan.baidu.com/s/1BkDru60nQXaDVLRSr7ktfA) [130万对句子，215MB]\n\nSIGHAN+Wang271K中文纠错数据集，数据格式：\n```json\n[\n    {\n        \"id\": \"B2-4029-3\",\n        \"original_text\": \"晚间会听到嗓音，白天的时候大家都不会太在意，但是在睡觉的时候这嗓音成为大家的恶梦。\",\n        \"wrong_ids\": [\n            5,\n            31\n        ],\n        \"correct_text\": \"晚间会听到噪音，白天的时候大家都不会太在意，但是在睡觉的时候这噪音成为大家的恶梦。\"\n    }\n]\n```\n#### 自有数据集\n\n可以使用自己数据集训练纠错模型，把自己数据集标注好，保存为跟训练样本集一样的json格式，然后加载数据训练模型即可。\n\n1. 已有大量业务相关错误样本，主要标注错误位置（wrong_ids）和纠错后的句子(correct_text)\n2. 没有现成的错误样本，可以写脚本生成错误样本（original_text），根据音似、形似等特征把正确句子的指定位置（wrong_ids）字符改为错字，附上\n第三方同音字生成脚本[同音词替换](https://github.com/dongrixinyu/JioNLP/wiki/%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%BC%BA-%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3#%E5%90%8C%E9%9F%B3%E8%AF%8D%E6%9B%BF%E6%8D%A2)\n\n\n## Language Model\n\n[什么是语言模型？-wiki](https://github.com/shibing624/pycorrector/wiki/%E7%BB%9F%E8%AE%A1%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%8E%9F%E7%90%86)\n\n语言模型对于纠错步骤至关重要，当前默认使用的是从千兆中文文本训练的中文语言模型[zh_giga.no_cna_cmn.prune01244.klm(2.8G)](https://deepspeech.bj.bcebos.com/zh_lm/zh_giga.no_cna_cmn.prune01244.klm)，\n提供人民日报2014版语料训练得到的轻量版语言模型[people2014corpus_chars.klm(密码o5e9)](https://pan.baidu.com/s/1I2GElyHy_MAdek3YaziFYw)。\n\n大家可以用中文维基（繁体转简体，pycorrector.utils.text_utils下有此功能）等语料数据训练通用的语言模型，或者也可以用专业领域语料训练更专用的语言模型。更适用的语言模型，对于纠错效果会有比较好的提升。\n\n1. kenlm语言模型训练工具的使用，请见博客：http://blog.csdn.net/mingzai624/article/details/79560063\n2. 附上训练语料<人民日报2014版熟语料>，包括： 1）标准人工切词及词性数据people2014.tar.gz， 2）未切词文本数据people2014_words.txt，\n   3）kenlm训练字粒度语言模型文件及其二进制文件people2014corpus_chars.arps/klm， 4）kenlm词粒度语言模型文件及其二进制文件people2014corpus_words.arps/klm。\n\n尊重版权，传播请注明出处。\n\n# Todo\n\n- [x] 优化形似字字典，提高形似字纠错准确率\n- [x] 整理中文纠错训练数据，使用seq2seq做深度中文纠错模型\n- [x] 添加中文语法错误检测及纠正能力\n- [x] 规则方法添加用户自定义纠错集，并将其纠错优先度调为最高\n- [x] seq2seq_attention 添加dropout，减少过拟合\n- [x] 在seq2seq模型框架上，新增Pointer-generator network、Beam search、Unknown words replacement、Coverage mechanism等特性\n- [x] 更新bert的fine-tuned使用wiki，适配transformers 2.10.0库\n- [x] 升级代码，兼容TensorFlow 2.0库\n- [x] 升级bert纠错逻辑，提升基于mask的纠错效果\n- [x] 新增基于electra模型的纠错逻辑，参数更小，预测更快\n- [x] 新增专用于纠错任务深度模型，使用bert/ernie预训练模型，加入文本音似、形似特征。\n\n# Contact\n\n- Github Issue(建议)：[![GitHub issues](https://img.shields.io/github/issues/shibing624/pycorrector.svg)](https://github.com/shibing624/pycorrector/issues)\n- Github discussions：欢迎到讨论区[![GitHub discussions](https://img.shields.io/github/discussions/shibing624/pycorrector.svg)](https://github.com/shibing624/pycorrector/discussions)灌水（不会打扰开发者），公开交流纠错技术和问题\n- 邮件我：xuming: xuming624@qq.com\n- 微信我：加我*微信号：xuming624*, 进Python-NLP交流群，备注：*姓名-公司名-NLP*\n\n\n<img src=\"https://github.com/shibing624/pycorrector/blob/master/docs/git_image/wechat.jpeg\" width=\"200\" />\n\n# Citation\n\n如果你在研究中使用了pycorrector，请按如下格式引用：\n\nAPA:\n```latex\nXu, M. Pycorrector: Text error correction tool (Version 0.4.2) [Computer software]. https://github.com/shibing624/pycorrector\n```\n\nBibTeX:\n```latex\n@misc{Xu_Pycorrector_Text_error,\n  title={Pycorrector: Text error correction tool},\n  author={Xu Ming},\n  year={2021},\n  howpublished={\\url{https://github.com/shibing624/pycorrector}},\n}\n```\n\n\n\n# License\n\npycorrector 的授权协议为 **Apache License 2.0**，可免费用做商业用途。请在产品说明中附加pycorrector的链接和授权协议。\n\n# Contribute\n\n项目代码还很粗糙，如果大家对代码有所改进，欢迎提交回本项目，在提交之前，注意以下两点：\n\n- 在`tests`添加相应的单元测试\n- 使用`python -m pytest`来运行所有单元测试，确保所有单测都是通过的\n\n之后即可提交PR。\n\n# Reference\n\n* [基于文法模型的中文纠错系统](https://blog.csdn.net/mingzai624/article/details/82390382)\n* [Norvig’s spelling corrector](http://norvig.com/spell-correct.html)\n* [Chinese Spelling Error Detection and Correction Based on Language Model, Pronunciation, and Shape[Yu, 2013]](http://www.aclweb.org/anthology/W/W14/W14-6835.pdf)\n* [Chinese Spelling Checker Based on Statistical Machine Translation[Chiu, 2013]](http://www.aclweb.org/anthology/O/O13/O13-1005.pdf)\n* [Chinese Word Spelling Correction Based on Rule Induction[yeh, 2014]](http://aclweb.org/anthology/W14-6822)\n* [Neural Language Correction with Character-Based Attention[Ziang Xie, 2016]](https://arxiv.org/pdf/1603.09727.pdf)\n* [Chinese Spelling Check System Based on Tri-gram Model[Qiang Huang, 2014]](http://www.anthology.aclweb.org/W/W14/W14-6827.pdf)\n* [Neural Abstractive Text Summarization with Sequence-to-Sequence Models[Tian Shi, 2018]](https://arxiv.org/abs/1812.02303)\n* [基于深度学习的中文文本自动校对研究与实现[杨宗霖, 2019]](https://github.com/shibing624/pycorrector/blob/master/docs/基于深度学习的中文文本自动校对研究与实现.pdf)\n* [A Sequence to Sequence Learning for Chinese Grammatical Error Correction[Hongkai Ren, 2018]](https://link.springer.com/chapter/10.1007/978-3-319-99501-4_36)\n* [ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators](https://openreview.net/pdf?id=r1xMH1BtvB)\n* [Revisiting Pre-trained Models for Chinese Natural Language Processing](https://arxiv.org/abs/2004.13922)\n* Ruiqing Zhang, Chao Pang et al. \"Correcting Chinese Spelling Errors with Phonetic Pre-training\", ACL, 2021\n* DingminWang et al. \"A Hybrid Approach to Automatic Corpus Generation for Chinese Spelling Check\", EMNLP, 2018",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shibing624/pycorrector",
    "keywords": "pycorrector,correction,Chinese error correction,NLP",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pycorrector",
    "package_url": "https://pypi.org/project/pycorrector/",
    "platform": "Windows",
    "project_url": "https://pypi.org/project/pycorrector/",
    "project_urls": {
      "Homepage": "https://github.com/shibing624/pycorrector"
    },
    "release_url": "https://pypi.org/project/pycorrector/0.4.8/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Chinese Text Error Corrector",
    "version": "0.4.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16618504,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8603eb10dd5f380b28cb2d0b17531567c6dfc74fd06306a5d71d5ac981e49fa",
          "md5": "30a6d22c474dd7db3c8966f8888f86d8",
          "sha256": "0953a7225720d1dc2c5d4830f21245b606ffde5702ea87ce11ef9bd0c72d2ffd"
        },
        "downloads": -1,
        "filename": "pycorrector-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "30a6d22c474dd7db3c8966f8888f86d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2969,
        "upload_time": "2018-03-06T05:40:04",
        "upload_time_iso_8601": "2018-03-06T05:40:04.699219Z",
        "url": "https://files.pythonhosted.org/packages/c8/60/3eb10dd5f380b28cb2d0b17531567c6dfc74fd06306a5d71d5ac981e49fa/pycorrector-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4b8bf4496e132d4bce5213360a119040fa0e47e498ccbf04261e46fb7e7d0a5",
          "md5": "832024085b067487ee2340d7feb99fae",
          "sha256": "5d267cee7d1f417e43226a705c8c6a48cb7eea528d5f1dd34635a30a7f1714a0"
        },
        "downloads": -1,
        "filename": "pycorrector-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "832024085b067487ee2340d7feb99fae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2794,
        "upload_time": "2018-03-06T06:33:02",
        "upload_time_iso_8601": "2018-03-06T06:33:02.059279Z",
        "url": "https://files.pythonhosted.org/packages/e4/b8/bf4496e132d4bce5213360a119040fa0e47e498ccbf04261e46fb7e7d0a5/pycorrector-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44f899ec0cac03af189ccfb11067e5808f302541fc25c46d684e85e997fd34a9",
          "md5": "bfe1828f5403fef3b4da3d408a206f87",
          "sha256": "b0e8f08f6bebe4a74cb30f6bfc105f55144bf6f637dd4dd5858f3496db2dc637"
        },
        "downloads": -1,
        "filename": "pycorrector-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "bfe1828f5403fef3b4da3d408a206f87",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1980562,
        "upload_time": "2018-03-06T06:57:14",
        "upload_time_iso_8601": "2018-03-06T06:57:14.175669Z",
        "url": "https://files.pythonhosted.org/packages/44/f8/99ec0cac03af189ccfb11067e5808f302541fc25c46d684e85e997fd34a9/pycorrector-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0ea28140921892124bdc955b2d68c53ff7978c222332985d1068b74e4c0ebc4",
          "md5": "5a7141ed5eb9f7b88fc99b4050ccf5c5",
          "sha256": "c0ee553cd589c4e635838e73bce855a0dde6967ada3ee36f57abf2ddd8c32e71"
        },
        "downloads": -1,
        "filename": "pycorrector-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5a7141ed5eb9f7b88fc99b4050ccf5c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12076,
        "upload_time": "2018-03-14T06:56:53",
        "upload_time_iso_8601": "2018-03-14T06:56:53.059896Z",
        "url": "https://files.pythonhosted.org/packages/b0/ea/28140921892124bdc955b2d68c53ff7978c222332985d1068b74e4c0ebc4/pycorrector-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a06a0e2f568bfcf0796b2ed49843f21553bf4ff73096c5f307bf695a89d6d15",
          "md5": "a4cb6987ce49e8087589d44842b5b875",
          "sha256": "e29c14651044ba9b3ddb6510b267c6824030c58aa8806ac2ebc15d43105c2d2d"
        },
        "downloads": -1,
        "filename": "pycorrector-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a4cb6987ce49e8087589d44842b5b875",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21284455,
        "upload_time": "2018-03-14T07:03:02",
        "upload_time_iso_8601": "2018-03-14T07:03:02.230677Z",
        "url": "https://files.pythonhosted.org/packages/1a/06/a0e2f568bfcf0796b2ed49843f21553bf4ff73096c5f307bf695a89d6d15/pycorrector-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1b64813fd7e1e3b48d45d45658c237848cd6f08af5d13ac14bbf5afc4a957fd",
          "md5": "69d91544576e4eceaf46b60c976a3eb2",
          "sha256": "21e5869bd2818ae193aff233487cfa0feab213d496ca6e406aaf829ddac0ff1b"
        },
        "downloads": -1,
        "filename": "pycorrector-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "69d91544576e4eceaf46b60c976a3eb2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21282029,
        "upload_time": "2018-03-14T07:13:21",
        "upload_time_iso_8601": "2018-03-14T07:13:21.466404Z",
        "url": "https://files.pythonhosted.org/packages/f1/b6/4813fd7e1e3b48d45d45658c237848cd6f08af5d13ac14bbf5afc4a957fd/pycorrector-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33c6a5754eee5df764d020bec144d69a7d4d778ca43ce87a4955029c1ef7d6d2",
          "md5": "8e47a6e7777155e5ffeecf6568445b3d",
          "sha256": "e13cc9e58d76b044bd795d345ab643b19bc8da5e9c711e45abdb1111f9d5e087"
        },
        "downloads": -1,
        "filename": "pycorrector-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8e47a6e7777155e5ffeecf6568445b3d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20428652,
        "upload_time": "2018-08-29T12:23:18",
        "upload_time_iso_8601": "2018-08-29T12:23:18.337669Z",
        "url": "https://files.pythonhosted.org/packages/33/c6/a5754eee5df764d020bec144d69a7d4d778ca43ce87a4955029c1ef7d6d2/pycorrector-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19f79f923dde26714be6bf164eb915f91cda2b670704d410e65ff910e5098ae7",
          "md5": "26e0726325cf7f933de9edb6a6d3d9c6",
          "sha256": "ef6dd1b681f3f94d9ca936bc014abf4cd4d034d5c8dbd04a1bc578ebf866d2bc"
        },
        "downloads": -1,
        "filename": "pycorrector-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "26e0726325cf7f933de9edb6a6d3d9c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16390001,
        "upload_time": "2018-09-17T14:03:42",
        "upload_time_iso_8601": "2018-09-17T14:03:42.516158Z",
        "url": "https://files.pythonhosted.org/packages/19/f7/9f923dde26714be6bf164eb915f91cda2b670704d410e65ff910e5098ae7/pycorrector-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4f97163b8d3c2f1ecc476d736d154f6cf169ef176b782a7299266c87d455371",
          "md5": "bcdcda29d6eeb950eb3015b4c57f6aa7",
          "sha256": "ce7db4aa8e411cbf6144cfdeedb65272407b975bf2106bd492115766e231bdcd"
        },
        "downloads": -1,
        "filename": "pycorrector-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "bcdcda29d6eeb950eb3015b4c57f6aa7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16310614,
        "upload_time": "2018-09-19T07:25:03",
        "upload_time_iso_8601": "2018-09-19T07:25:03.431841Z",
        "url": "https://files.pythonhosted.org/packages/c4/f9/7163b8d3c2f1ecc476d736d154f6cf169ef176b782a7299266c87d455371/pycorrector-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ecc595c3a70191b8b6a15a263685f2ba946d3ffbeea1a31962139223c5178db",
          "md5": "f588b3555479dd4d53c6b2505166def2",
          "sha256": "c747f63ebf2ce9303fadcbd4d54e8fd579a0ea45d631252448ad61b29a2164ff"
        },
        "downloads": -1,
        "filename": "pycorrector-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "f588b3555479dd4d53c6b2505166def2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17856564,
        "upload_time": "2019-06-21T06:35:58",
        "upload_time_iso_8601": "2019-06-21T06:35:58.871015Z",
        "url": "https://files.pythonhosted.org/packages/0e/cc/595c3a70191b8b6a15a263685f2ba946d3ffbeea1a31962139223c5178db/pycorrector-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e8f7fdc7a932162a6dca38a0d426ce0a37c7ba06584d9f59040c99b2e84c7cc",
          "md5": "ec6f46fb168241bd461a278465f2d4f0",
          "sha256": "cf8576c14edb39f76e63ca9ca89884162013c75bae4651a6804d28d1e02da2ba"
        },
        "downloads": -1,
        "filename": "pycorrector-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "ec6f46fb168241bd461a278465f2d4f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17862074,
        "upload_time": "2019-06-27T03:28:20",
        "upload_time_iso_8601": "2019-06-27T03:28:20.804512Z",
        "url": "https://files.pythonhosted.org/packages/3e/8f/7fdc7a932162a6dca38a0d426ce0a37c7ba06584d9f59040c99b2e84c7cc/pycorrector-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a346f21eb6afad56a311cc0773edb506b50a8b7d3352657e3427cf8d67f9308",
          "md5": "50675ac572fd4e5ef61eb8e482b425c0",
          "sha256": "c970f5fc2b50587f605b536cb80d190b7864316149a728491678428cddeaa988"
        },
        "downloads": -1,
        "filename": "pycorrector-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "50675ac572fd4e5ef61eb8e482b425c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17862024,
        "upload_time": "2019-06-27T03:47:49",
        "upload_time_iso_8601": "2019-06-27T03:47:49.484933Z",
        "url": "https://files.pythonhosted.org/packages/0a/34/6f21eb6afad56a311cc0773edb506b50a8b7d3352657e3427cf8d67f9308/pycorrector-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "596880d628ffd92f9483380ca72ea206e867451f3db30fdeba6937ed7c580ca3",
          "md5": "2cb95e1eee75da6f99a9ecdce34e8a86",
          "sha256": "809fa8796717a3b4d7151d1689efa7471e97cae9e925c83cdbbe9d051ab280b8"
        },
        "downloads": -1,
        "filename": "pycorrector-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "2cb95e1eee75da6f99a9ecdce34e8a86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17872393,
        "upload_time": "2019-08-03T13:58:30",
        "upload_time_iso_8601": "2019-08-03T13:58:30.055150Z",
        "url": "https://files.pythonhosted.org/packages/59/68/80d628ffd92f9483380ca72ea206e867451f3db30fdeba6937ed7c580ca3/pycorrector-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b407c9510279a37080dc5899db8faa7844e3112be24b1c91ccc8495fed507c7",
          "md5": "eae7f0aea8a2214d64a4ed4934b9e5ea",
          "sha256": "c51677b80af452b24bd7ac45b401223461c3d5bbbdf19ea4b412cdf2198126b8"
        },
        "downloads": -1,
        "filename": "pycorrector-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "eae7f0aea8a2214d64a4ed4934b9e5ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3658021,
        "upload_time": "2019-12-02T09:34:57",
        "upload_time_iso_8601": "2019-12-02T09:34:57.894787Z",
        "url": "https://files.pythonhosted.org/packages/3b/40/7c9510279a37080dc5899db8faa7844e3112be24b1c91ccc8495fed507c7/pycorrector-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff6b638b143c25ddbf9c7e27e62a03596d42f198597aca4cd52fbe2c4821478d",
          "md5": "e452aa7c93701cc14a566bd996dc8fa3",
          "sha256": "cc5bb8dd688a2f6fa7b7cdb2b04c2f1db52554569aefd23d503949abf88aaf82"
        },
        "downloads": -1,
        "filename": "pycorrector-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e452aa7c93701cc14a566bd996dc8fa3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3728324,
        "upload_time": "2020-03-01T03:14:05",
        "upload_time_iso_8601": "2020-03-01T03:14:05.559840Z",
        "url": "https://files.pythonhosted.org/packages/ff/6b/638b143c25ddbf9c7e27e62a03596d42f198597aca4cd52fbe2c4821478d/pycorrector-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d933c113c3d2b1809430205644063930069e4ba25ea081fe6d8ff9684f6f1b1",
          "md5": "665df5eb77afc0f5be201e194aeb3629",
          "sha256": "02d18ea6dbf49c959367977b61529e3d00b176b14bf3334126dffdf3552f114e"
        },
        "downloads": -1,
        "filename": "pycorrector-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "665df5eb77afc0f5be201e194aeb3629",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6063621,
        "upload_time": "2020-03-19T02:50:47",
        "upload_time_iso_8601": "2020-03-19T02:50:47.529648Z",
        "url": "https://files.pythonhosted.org/packages/0d/93/3c113c3d2b1809430205644063930069e4ba25ea081fe6d8ff9684f6f1b1/pycorrector-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2712a441fd4af799f3a59b824b7d4102df3f88a50487aa38623ffcfc73908d61",
          "md5": "03a379fbcdcd9c8345b8a033e962375f",
          "sha256": "059061fe266b55cd616aecd1d3d75ac96e480da0f92dc67bfd332c141df90c8a"
        },
        "downloads": -1,
        "filename": "pycorrector-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "03a379fbcdcd9c8345b8a033e962375f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 6063756,
        "upload_time": "2020-03-19T07:28:47",
        "upload_time_iso_8601": "2020-03-19T07:28:47.044046Z",
        "url": "https://files.pythonhosted.org/packages/27/12/a441fd4af799f3a59b824b7d4102df3f88a50487aa38623ffcfc73908d61/pycorrector-0.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfb7f7fd821ba4bf4631b42364e811668aac1af4c8146641d51949262a6d9fcb",
          "md5": "8402c565187fc89d542d768af9a0508f",
          "sha256": "f8ab0497aa78af73c7a9b5bf09999fdab199422572e39818ad1a9fce7e4a1dbd"
        },
        "downloads": -1,
        "filename": "pycorrector-0.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "8402c565187fc89d542d768af9a0508f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6063986,
        "upload_time": "2020-04-22T15:23:55",
        "upload_time_iso_8601": "2020-04-22T15:23:55.321284Z",
        "url": "https://files.pythonhosted.org/packages/bf/b7/f7fd821ba4bf4631b42364e811668aac1af4c8146641d51949262a6d9fcb/pycorrector-0.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b273960552edaff0edcc7161b04273cb61c40760a3fdb61aa5ff0f590afb4ac2",
          "md5": "8841a860f71711e97e019b191608ab11",
          "sha256": "b7048e0ce50cf3dfa4878c25cb51200fd42bb76bf7d3a144bab04b39752856ea"
        },
        "downloads": -1,
        "filename": "pycorrector-0.2.8.tar.gz",
        "has_sig": false,
        "md5_digest": "8841a860f71711e97e019b191608ab11",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6073575,
        "upload_time": "2020-05-29T10:02:32",
        "upload_time_iso_8601": "2020-05-29T10:02:32.720848Z",
        "url": "https://files.pythonhosted.org/packages/b2/73/960552edaff0edcc7161b04273cb61c40760a3fdb61aa5ff0f590afb4ac2/pycorrector-0.2.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "071d205e7e3b0e4a501a314d0942032d2e9643a28a784b6025d9698eb5c8c11c",
          "md5": "17fe5ae585866096caae07334ca09c96",
          "sha256": "63d5f6cf11ac8585b56292b98cc225f0db16b17ee95982349d48a7fd059e3964"
        },
        "downloads": -1,
        "filename": "pycorrector-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "17fe5ae585866096caae07334ca09c96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6369846,
        "upload_time": "2021-01-02T08:40:42",
        "upload_time_iso_8601": "2021-01-02T08:40:42.392709Z",
        "url": "https://files.pythonhosted.org/packages/07/1d/205e7e3b0e4a501a314d0942032d2e9643a28a784b6025d9698eb5c8c11c/pycorrector-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ca5cb096981b1cf3afd896bc92bc7457793fccaca0ac47b4ae504e1064042f9",
          "md5": "cc54b27364ebaba4e3f8db7f579c84cf",
          "sha256": "a56223a7996c7027b162f48842ef640742a0ac0300df70b0393e07032a9767b7"
        },
        "downloads": -1,
        "filename": "pycorrector-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cc54b27364ebaba4e3f8db7f579c84cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6378095,
        "upload_time": "2021-04-27T03:31:11",
        "upload_time_iso_8601": "2021-04-27T03:31:11.492824Z",
        "url": "https://files.pythonhosted.org/packages/6c/a5/cb096981b1cf3afd896bc92bc7457793fccaca0ac47b4ae504e1064042f9/pycorrector-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfa63fabf6767cc422944e170a8c04fbeeae878131b40b80105c7c824c04e1ce",
          "md5": "ae6d518dbec7898ed267fb2f856515bc",
          "sha256": "5c6eed8556fc0587e303f259ac6843a6a6a410b9d7fb65e77967b84d92ce9bbd"
        },
        "downloads": -1,
        "filename": "pycorrector-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ae6d518dbec7898ed267fb2f856515bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4626683,
        "upload_time": "2021-06-30T04:26:33",
        "upload_time_iso_8601": "2021-06-30T04:26:33.913630Z",
        "url": "https://files.pythonhosted.org/packages/df/a6/3fabf6767cc422944e170a8c04fbeeae878131b40b80105c7c824c04e1ce/pycorrector-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "136da586206ce8153ec16956e4e8cd41c8410a9e3ccb4487d870fb0cc56f1460",
          "md5": "5c6996561ae889b936368a6eb083eefc",
          "sha256": "a840935623d928c8b6f8322e912a7104cd2829aadf0ef311a7c45cd7ba5a13b3"
        },
        "downloads": -1,
        "filename": "pycorrector-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5c6996561ae889b936368a6eb083eefc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4342265,
        "upload_time": "2021-11-24T07:23:56",
        "upload_time_iso_8601": "2021-11-24T07:23:56.551976Z",
        "url": "https://files.pythonhosted.org/packages/13/6d/a586206ce8153ec16956e4e8cd41c8410a9e3ccb4487d870fb0cc56f1460/pycorrector-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa7e99162967b94f58d6fc1efb79c238c0d8d11abf10314d33a855fe031e844b",
          "md5": "6038b805f182309284ea2bb8f5f575fc",
          "sha256": "35a98cdac607ef91443cf040760641df7ed3ae70eac6d9874a1a4e48c2b53fcc"
        },
        "downloads": -1,
        "filename": "pycorrector-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6038b805f182309284ea2bb8f5f575fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4345394,
        "upload_time": "2021-11-24T07:27:56",
        "upload_time_iso_8601": "2021-11-24T07:27:56.638902Z",
        "url": "https://files.pythonhosted.org/packages/fa/7e/99162967b94f58d6fc1efb79c238c0d8d11abf10314d33a855fe031e844b/pycorrector-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db1fbe4e0b4277d777b0ba361c23cd96a80bd620a3dbc39bb7b089133d80f67c",
          "md5": "6c0b403385ac2144c51c63a23359c3e2",
          "sha256": "8821cd0c252d7f98edf62b4e26d7936c30e354767a08b660ebda218f6161acde"
        },
        "downloads": -1,
        "filename": "pycorrector-0.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6c0b403385ac2144c51c63a23359c3e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4421871,
        "upload_time": "2022-04-06T07:25:12",
        "upload_time_iso_8601": "2022-04-06T07:25:12.140696Z",
        "url": "https://files.pythonhosted.org/packages/db/1f/be4e0b4277d777b0ba361c23cd96a80bd620a3dbc39bb7b089133d80f67c/pycorrector-0.4.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cf1b9e049d4d17a769ccd25d7359d0fa65cdb2aef00529a7425df1ed78d38f0",
          "md5": "d2d394a2e22fa15a9d60e8c86e12d4b4",
          "sha256": "582b33ae8b2793829f5a2838a157ae6d1b40bf06f37e44c5ce0354a11fe5f146"
        },
        "downloads": -1,
        "filename": "pycorrector-0.4.6.tar.gz",
        "has_sig": false,
        "md5_digest": "d2d394a2e22fa15a9d60e8c86e12d4b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4413813,
        "upload_time": "2022-06-17T09:07:05",
        "upload_time_iso_8601": "2022-06-17T09:07:05.310416Z",
        "url": "https://files.pythonhosted.org/packages/6c/f1/b9e049d4d17a769ccd25d7359d0fa65cdb2aef00529a7425df1ed78d38f0/pycorrector-0.4.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0892a136dcd1a16a02e7b81a5c72130aa30750c5403a6d0581c02c4b026dfd40",
          "md5": "3bc42f2f9f61ee54c19d07a856ae80cc",
          "sha256": "9d54f5e21d38c7e6bbccf52da63300db78d8802c695c6fa31b76e53b68418c64"
        },
        "downloads": -1,
        "filename": "pycorrector-0.4.8.tar.gz",
        "has_sig": false,
        "md5_digest": "3bc42f2f9f61ee54c19d07a856ae80cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4418762,
        "upload_time": "2023-01-30T12:19:49",
        "upload_time_iso_8601": "2023-01-30T12:19:49.114840Z",
        "url": "https://files.pythonhosted.org/packages/08/92/a136dcd1a16a02e7b81a5c72130aa30750c5403a6d0581c02c4b026dfd40/pycorrector-0.4.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0892a136dcd1a16a02e7b81a5c72130aa30750c5403a6d0581c02c4b026dfd40",
        "md5": "3bc42f2f9f61ee54c19d07a856ae80cc",
        "sha256": "9d54f5e21d38c7e6bbccf52da63300db78d8802c695c6fa31b76e53b68418c64"
      },
      "downloads": -1,
      "filename": "pycorrector-0.4.8.tar.gz",
      "has_sig": false,
      "md5_digest": "3bc42f2f9f61ee54c19d07a856ae80cc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4418762,
      "upload_time": "2023-01-30T12:19:49",
      "upload_time_iso_8601": "2023-01-30T12:19:49.114840Z",
      "url": "https://files.pythonhosted.org/packages/08/92/a136dcd1a16a02e7b81a5c72130aa30750c5403a6d0581c02c4b026dfd40/pycorrector-0.4.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}