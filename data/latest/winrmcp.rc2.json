{
  "info": {
    "author": "Mike Kroutikov",
    "author_email": "mkroutikov@innodata.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# winrmcp\n[![Build Status](https://travis-ci.com/mkroutikov/winrmcp.svg?branch=master)](https://travis-ci.com/mkroutikov/winrmcp)\n[![PyPI version](https://badge.fury.io/py/winrmcp.svg)](https://badge.fury.io/py/winrmcp)\n\nA Python library to execute remote commands on Windows (cmd.exe and PowerShell), and to transfer files.\n\nThis is a thin wrapper on top of excellent [pywinrm](https://github.com/diyan/pywinrm).\n\nFor file transfer, we use the same method as in Go package [winrmcp](https://github.com/packer-community/winrmcp).\n\n## Installation\n```bash\npip install winrmcp\n```\n\n## Quick start\n\n```python\nfrom winrmcp import Client\n\nclient = Client('my-windows-machine.com', auth=('CleverUser', 'cleverPassword'))\n\nwith client.shell() as shell:\n    out, _ = shell.check_cmd(['ipconfig', '/all'])\n    print(out)\n\n    script = \"\"\"$strComputer = $Host\n    Clear\n    $RAM = WmiObject Win32_ComputerSystem\n    $MB = 1048576\n\n    \"Installed Memory: \" + [int]($RAM.TotalPhysicalMemory /$MB) + \" MB\" \"\"\"\n    out, _ = shell.check_ps(script)\n    print(out)\n\nclient.copy('/home/mike/temp/build.bat', '%TEMP%\\\\build.bat')\nwith client.shell() as shell:\n    shell.check_call('cmd.exe', '/k', '%TEMP%\\\\build.bat)\n```\n\n## API\n\n### Client\n\n`Client` extends `winrm.Session` to provide `Client.shell` context-manager that opens remote shell.\n\nSee documentaiotn  of [pywinrm](https://github.com/diyan/pywinrm) for the expected parameters.\n\n`Client.shell()` - creates a new context-managed shell, returns intsance of `Shell`.\n\n`Client.copy(local_file, remote_file)` - copies the content of local file `local_file` to the remote machine as `remote_file`.\nNote that `local_file` can be a file-like object, having `read` method returning `bytes`.\n\n### Shell\n\n`Shell` represent the shell running on the remote Windows machine. You can get an instance of this class by\ncalling `shell()` on a `Client` instance.\n\n`Shell.cmd(command, *args)` - runs a command in remote `CMD.EXE` shell. Returns `winrm.Response` instance, see docs there.\n\n`Shell.ps(script)` - runs a script in remote `PowerShell` shell. Returns `winrm.Response` instance, see docs there.\n\n`Shell.check_cmd(command, *args)` - runs a command in remote `CMD.EXE` shell. Returns a tuple of stdout and stderr strings. If remote command\nreturn non-zero code, raises `ShellCommandError` exception.\n\n`Shell.check_ps(script)` - runs a script in remote `PowerShell` shell. Returns a tuple of stdout and stderr strings. If remote command\nreturn non-zero code, raises `ShellCommandError` exception.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mkroutikov/winrmcp",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "winrmcp",
    "package_url": "https://pypi.org/project/winrmcp/",
    "platform": "",
    "project_url": "https://pypi.org/project/winrmcp/",
    "project_urls": {
      "Homepage": "https://github.com/mkroutikov/winrmcp"
    },
    "release_url": "https://pypi.org/project/winrmcp/0.0.3/",
    "requires_dist": [
      "pywinrm",
      "requests-credssp (>=1.0.0) ; extra == 'credssp'",
      "pykerberos (<2.0.0,>=1.2.1) ; (sys_platform!=\"win32\") and extra == 'kerberos'",
      "winkerberos (>=0.5.0) ; (sys_platform==\"win32\") and extra == 'kerberos'"
    ],
    "requires_python": ">=3.6",
    "summary": "Package to execute commads on remote Windows, do file copy to the remote machine",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7448807,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d9ac36f01089db1c206d798c04cec6c90cb210d8c53bbb4fb3e68028a87e093",
          "md5": "a34a2a2ab01eb744e83adda4a1ca977c",
          "sha256": "a9896f1e2fad19f6a4e958c5d55a4c81ad1e4d8b8b46319ae15a9392130b52de"
        },
        "downloads": -1,
        "filename": "winrmcp-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a34a2a2ab01eb744e83adda4a1ca977c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7577,
        "upload_time": "2020-06-11T00:36:06",
        "upload_time_iso_8601": "2020-06-11T00:36:06.627834Z",
        "url": "https://files.pythonhosted.org/packages/8d/9a/c36f01089db1c206d798c04cec6c90cb210d8c53bbb4fb3e68028a87e093/winrmcp-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c543a75678986d7da2b81eef34e84b69e4b7f3deb7c3e1b315e01b5a26403f7f",
          "md5": "0789d6de7bd0234534db073bbcb21387",
          "sha256": "2c87448fcf8d816b3c05364c20f3278700fe5ff6e68d6d7a3006ce38b5dc8b8e"
        },
        "downloads": -1,
        "filename": "winrmcp-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0789d6de7bd0234534db073bbcb21387",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7499,
        "upload_time": "2020-06-11T00:51:59",
        "upload_time_iso_8601": "2020-06-11T00:51:59.202786Z",
        "url": "https://files.pythonhosted.org/packages/c5/43/a75678986d7da2b81eef34e84b69e4b7f3deb7c3e1b315e01b5a26403f7f/winrmcp-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c543a75678986d7da2b81eef34e84b69e4b7f3deb7c3e1b315e01b5a26403f7f",
        "md5": "0789d6de7bd0234534db073bbcb21387",
        "sha256": "2c87448fcf8d816b3c05364c20f3278700fe5ff6e68d6d7a3006ce38b5dc8b8e"
      },
      "downloads": -1,
      "filename": "winrmcp-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0789d6de7bd0234534db073bbcb21387",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7499,
      "upload_time": "2020-06-11T00:51:59",
      "upload_time_iso_8601": "2020-06-11T00:51:59.202786Z",
      "url": "https://files.pythonhosted.org/packages/c5/43/a75678986d7da2b81eef34e84b69e4b7f3deb7c3e1b315e01b5a26403f7f/winrmcp-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}