{
  "info": {
    "author": "",
    "author_email": "Dan Friedman <dfriedman@princeton.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "# The Vendi Score: A Diversity Evaluation Metric for Machine Learning\n\nThis repository contains the implementation of the Vendi Score (VS), a metric for evaluating diversity in machine learning.\nThe input to metric is a collection of samples and a pairwise similarity function, and the output is a number, which can be interpreted as the effective number of unique elements in the sample.\nSpecifically, given a positive semi-definite matrix $K \\in \\mathbb{R}^{n \\times n}$ of similarity scores, the score is defined as:\n$$\\mathrm{VS}(K) = \\exp(-\\mathrm{tr}(K/n \\log K/n)) = \\exp(-\\sum_{i=1}^n \\lambda_i \\log \\lambda_i),$$\nwhere $\\lambda_i$ are the eigenvalues of $K/n$ and $0 \\log 0 = 0$.\nThat is, the Vendi Score is equal to the exponential of the von Neumann entropy of $K/n$, or the Shannon entropy of the eigenvalues, which is also known as the effective rank.\n\n\n## Installation\n\nYou can install `vendi_score` from pip:\n```\npip install vendi_score\n```\nor by cloning this repository:\n```\ngit clone https://github.com/vertaix/Vendi-Score.git\ncd Vendi-Score\npip install -e .\n```\n`vendi_score` includes some optional dependencies for computing predefined similarity score between images, text, or molecules. You can install these dependencies with a command as in the following:\n```\npip install vendi_score[images]\npip install vendi_score[text,molecules]\npip install vendi_score[all]\n```\n\n## Usage\n\nThe input to `vendi_score` is a list of samples and a similarity function, `k`, mapping a pair of elements to a similarity score. `k` should be symmetric, and `k(x, x) = 1`:\n```\nimport numpy as np\nfrom vendi_score import vendi\n\nsamples = [0, 0, 10, 10, 20, 20]\nk = lambda a, b: np.exp(-np.abs(a - b))\n\nvendi.score(samples, k)\n\n# 2.9999\n```\nIf you already have precomputed a similarity matrix:\n```\nK = np.array([[1.0, 0.9, 0.0],\n              [0.9, 1.0, 0.0],\n              [0.0, 0.0, 1.0]])\nvendi.score_K(K)\n\n# 2.1573\n```\nIf your similarity function is a dot product between normalized\nembeddings $X\\in\\mathbb{R}^{n\\times d}$, and $d \\leq n$, it is faster\nto compute the Vendi score using the covariance matrix,\n$\\frac{1}{n} \\sum_{i=1}^n x_i x_i^{\\top}$:\n```\nvendi.score_dual(X)\n```\nIf the rows of $X$ are not normalized, set `normalize = True`.\n\n\n### Similarity functions\n\nSome similarity functions are provided in `vendi_score.image_utils`, `vendi_score.text_utils`, and `vendi_score.molecule_utils`. For example:\n\nImages:\n```python\nfrom torchvision import datasets\nfrom vendi_score import image_utils\n\nmnist = datasets.MNIST(\"data/mnist\", train=False, download=True)\ndigits = [[x for x, y in mnist if y == c] for c in range(10)]\npixel_vs = [image_utils.pixel_vendi_score(imgs) for imgs in digits]\n# The default embeddings are from the pool-2048 layer of the torchvision\n# Inception v3 model.\ninception_vs = [image_utils.embedding_vendi_score(imgs, device=\"cuda\") for imgs in digits]\nfor y, (pvs, ivs) in enumerate(zip(pixel_vs, inception_vs)): print(f\"{y}\\t{pvs:.02f}\\t{ivs:02f}\")\n\n# Output:\n# 0       7.68    3.45\n# 1       5.31    3.50\n# 2       12.18   3.62\n# 3       9.97    2.97\n# 4       11.10   3.75\n# 5       13.51   3.16\n# 6       9.06    3.63\n# 7       9.58    4.07\n# 8       9.69    3.74\n# 9       8.56    3.43\n```\n\nText:\n```python\nfrom vendi_score import text_utils\n\nsents = [\"Look, Jane.\",\n         \"See Spot.\",\n         \"See Spot run.\",\n         \"Run, Spot, run.\",\n\t \"Jane sees Spot run.\"]\nngram_vs = text_utils.ngram_vendi_score(sents, ns=[1, 2])\nbert_vs = text_utils.embedding_vendi_score(sents, model_path=\"bert-base-uncased\")\nsimcse_vs = text_utils.embedding_vendi_score(sents, model_path=\"princeton-nlp/unsup-simcse-bert-base-uncased\")\nprint(f\"N-grams: {ngram_vs:.02f}, BERT: {bert_vs:.02f}, SimCSE: {simcse_vs:.02f})\n\n# N-grams: 3.91, BERT: 1.21, SimCSE: 2.81\n```\n\nMore examples are illustrated in Jupyter notebooks in the `examples/` folder.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vendi-score",
    "package_url": "https://pypi.org/project/vendi-score/",
    "platform": null,
    "project_url": "https://pypi.org/project/vendi-score/",
    "project_urls": {
      "Documentation": "https://github.com/vertaix/Vendi-Score",
      "Issues": "https://github.com/vertaix/Vendi-Score/issues",
      "Source": "https://github.com/vertaix/Vendi-Score"
    },
    "release_url": "https://pypi.org/project/vendi-score/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A diversity metric for machine learning",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14937233,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2cd5267f1b69a45d76819a6b8a13ca40146d546740be82021621ad10602b08a",
          "md5": "33e70db4bd460f5e4918d436ee2f2466",
          "sha256": "8760bee02e5f30a9622e26e4e955e7f2b41dd1ca29502a2c29f4d1a5ab29c2d8"
        },
        "downloads": -1,
        "filename": "vendi_score-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "33e70db4bd460f5e4918d436ee2f2466",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12381,
        "upload_time": "2022-08-29T16:46:28",
        "upload_time_iso_8601": "2022-08-29T16:46:28.961218Z",
        "url": "https://files.pythonhosted.org/packages/a2/cd/5267f1b69a45d76819a6b8a13ca40146d546740be82021621ad10602b08a/vendi_score-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed5c4547393e9a7c569df1ae46089700d5ee16b6a577c1b8b00b6ba92c9dca83",
          "md5": "bf930f2502ab2813b4a0b6ef2e91a6d5",
          "sha256": "8c11947f5f61abe2ccb3b9f676ee727e9f28c4328baabc41c1838e8dcd3e7a4d"
        },
        "downloads": -1,
        "filename": "vendi-score-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bf930f2502ab2813b4a0b6ef2e91a6d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11789,
        "upload_time": "2022-08-29T16:46:30",
        "upload_time_iso_8601": "2022-08-29T16:46:30.900426Z",
        "url": "https://files.pythonhosted.org/packages/ed/5c/4547393e9a7c569df1ae46089700d5ee16b6a577c1b8b00b6ba92c9dca83/vendi-score-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f4cffff6368e4f13a17b8b65df59c868f6a2c8c9feadaaa203e7b6ac5e5f659",
          "md5": "e9576c25cbdda4d10170721401a3510a",
          "sha256": "7b133fd293d63038aea032b2933c68a7040991ee91d9b953fb6b1ede43526c53"
        },
        "downloads": -1,
        "filename": "vendi-score-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e9576c25cbdda4d10170721401a3510a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13158,
        "upload_time": "2022-08-30T15:58:35",
        "upload_time_iso_8601": "2022-08-30T15:58:35.418467Z",
        "url": "https://files.pythonhosted.org/packages/7f/4c/ffff6368e4f13a17b8b65df59c868f6a2c8c9feadaaa203e7b6ac5e5f659/vendi-score-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7f4cffff6368e4f13a17b8b65df59c868f6a2c8c9feadaaa203e7b6ac5e5f659",
        "md5": "e9576c25cbdda4d10170721401a3510a",
        "sha256": "7b133fd293d63038aea032b2933c68a7040991ee91d9b953fb6b1ede43526c53"
      },
      "downloads": -1,
      "filename": "vendi-score-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "e9576c25cbdda4d10170721401a3510a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 13158,
      "upload_time": "2022-08-30T15:58:35",
      "upload_time_iso_8601": "2022-08-30T15:58:35.418467Z",
      "url": "https://files.pythonhosted.org/packages/7f/4c/ffff6368e4f13a17b8b65df59c868f6a2c8c9feadaaa203e7b6ac5e5f659/vendi-score-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}