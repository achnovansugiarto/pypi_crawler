{
  "info": {
    "author": "Jose Vines",
    "author_email": "jose.vines@ug.uchile.cl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering :: Astronomy"
    ],
    "description": "# ARIADNE (spectrAl eneRgy dIstribution bAyesian moDel averagiNg fittEr)\n## Characterize stellar atmospheres easily!\n**ARIADNE** Is a code written in python 3.7+ designed to fit broadband\nphotometry to different stellar atmosphere models automatically using Nested\nSampling algorithms.\n\n# Installation\n\nYou can install **ARIADNE** with `pip install astroARIADNE`\n\nOtherwise you can clone this repository with\n\n```\ngit clone https://github.com/jvines/astroARIADNE.git\ncd astroARIADNE\n```\n\nAnd then run\n\n```\npython setupy.py install\n```\n\nBut for the code to work, first you must install the necessary dependencies.\n\n## Dependencies:\n- Numpy (<https://numpy.org/>)\n- Scipy (<https://www.scipy.org/>)\n- Pandas (<https://pandas.pydata.org/>)\n- numba (<http://numba.pydata.org/>)\n- astropy (<https://astropy.readthedocs.io/en/stable/>)\n- astroquery (<https://astroquery.readthedocs.io/en/latest/>)\n- regions (<https://astropy-regions.readthedocs.io/en/latest/index.html>)\n- PyAstronomy (<https://pyastronomy.readthedocs.io/en/latest/>)\n- corner (<https://corner.readthedocs.io/en/latest/>)\n- tqdm (<https://tqdm.github.io/>)\n- matplotlib (<https://matplotlib.org/>)\n- termcolor (<https://pypi.org/project/termcolor/>)\n- extinction (<https://extinction.readthedocs.io/en/latest/>)\n- pyphot (<http://mfouesneau.github.io/docs/pyphot/>)\n- dustmaps (<https://dustmaps.readthedocs.io/en/latest/>)\n- PyMultinest (<https://johannesbuchner.github.io/PyMultiNest/>) [**OPTIONAL**]\n- dynesty (<https://dynesty.readthedocs.io/en/latest/>)\n- isochrones (<https://isochrones.readthedocs.io/en/latest/>)\n\n**PyMultinest is an optional package and can be hard to install! If you're\nplanning on doing BMA only then you can skip installing it!!**\n\nMost can be easily installed with pip or conda but some might have special\ninstructions (like PyMultinest!!)\n\n**ARIADNE** has been tested on OS X up to Catalina and Linux. It does **NOT**\nrun on Windows because healpy, a dependency of dustmaps isn't available for\nWindows (see [https://github.com/healpy/healpy/issues/25#issue-2987102](https://github.com/healpy/healpy/issues/25#issue-2987102))\n\n## In order to plot the models, you have to download them first:\nBut note that plotting the SED model is optional. You can run the code without\nthem!\n\n| Model        | Link           |\n| ------------- |:-------------:|\n| Phoenix v2      | <ftp://phoenix.astro.physik.uni-goettingen.de/HiResFITS/PHOENIX-ACES-AGSS-COND-2011/> |\n| Phoenix v2   wavelength file   | <ftp://phoenix.astro.physik.uni-goettingen.de/HiResFITS/WAVE_PHOENIX-ACES-AGSS-COND-2011.fits> |\n| BT-Models      | <http://osubdd.ens-lyon.fr/phoenix/>  |\n| Castelli & Kurucz | <http://ssb.stsci.edu/cdbs/tarfiles/synphot3.tar.gz>      |\n| Kurucz 1993 | <http://ssb.stsci.edu/cdbs/tarfiles/synphot4.tar.gz>  |\n\nThe wavelength file for the Phoenix model has to be placed in the root folder\nof the PHOENIXv2 models.\n\nFor the code to find these models, you have to place them somewhere in your\ncomputer as follows:\n\n```\nModels_Dir  \n│\n└───BTCond\n│   │\n│   └───CIFIST2011\n│   \n└───BTNextGen\n│\t │\n│\t └───AGSS2009\n│\n└───BTSettl\n│\t │\n│\t └───AGSS2009\n│\n└───Castelli_Kurucz\n│\t │\n│\t └───ckm05\n│\t │\n│\t └───ckm10\n│\t │\n│\t └───ckm15\n│\t │\n│\t └───ckm20\n│\t │\n│\t └───ckm25\n│\t │\n│\t └───ckp00\n│\t │\n│\t └───ckp02\n│\t │\n│\t └───ckp05\n│\n└───Kurucz\n│\t │\n│\t └───km01\n│\t │\n│\t └───km02\n│\t │\n│\t └───km03\n│\t │\n│\t └───km05\n│\t │\n│\t └───km10\n│\t │\n│\t └───km15\n│\t │\n│\t └───km20\n│\t │\n│\t └───km25\n│\t │\n│\t └───kp00\n│\t │\n│\t └───kp01\n│\t │\n│\t └───kp02\n│\t │\n│\t └───kp03\n│\t │\n│\t └───kp05\n│\t │\n│\t └───kp10\n│\n└───PHOENIXv2\n\t │\n     └─── WAVE_PHOENIX-ACES-AGSS-COND-2011.fits\n\t └───Z-0.0\n\t │\n\t └───Z-0.5\n\t │\n\t └───Z-1.0\n\t │\n\t └───Z-1.5\n\t │\n\t └───Z-2.0\n\t │\n\t └───Z+0.5\n\t │\n\t └───Z+1.0\n```\n\n### Notes:\n- The Phoenix v2 models with alpha enhancements are unused\n- BT-models are BT-Settl, BT-Cond, and BT-NextGen\n\n# How to use?\n\n## Stellar information setup\n\nTo use **ARIADNE** start by setting up the stellar information, this is done by\nimporting the Star module.\n\n```python\nfrom astroARIADNE.star import Star\n```\n\nAfter importing, a star has to be defined.\n\nStars are defined in **ARIADNE** by their RA and DEC in degrees, a name, and\noptionally the Gaia DR3 source id, for example:\n\n```python\nra = 75.795\ndec = -30.399\nstarname = 'NGTS-6'\ngaia_id = 4875693023844840448\n\ns = Star(starname, ra, dec, g_id=gaia_id)\n```\nThe starname is used purely for user identification later on, and the \n`gaia_id` is provided to make sure the automatic photometry retrieval collects\nthe correct magnitudes, otherwise **ARIADNE** will try and get the `gaia_id` by\nitself using a cone search centered around the RA and DEC.\n\nExecuting the previous block will start the photometry and stellar parameter\nretrieval routine. **ARIADNE** will query Gaia DR2 for an estimate on the\ntemperature, radius, parallax and luminosity for display as preliminar\ninformation, as it's not used during the fit, and prints them along with its\nTIC, KIC IDs if any of those exist, its Gaia DR3 ID, and maximum line-of-sight\nextinction Av:\n\n```\n\t\t\tGaia DR2 ID : 4875693023844840448\n\t\t\tTIC : 1528696\n\t\t\tEffective temperature : 4975.000 +/- 104.390\n\t\t\tStellar radius : 0.656 +/- 0.141\n\t\t\tStellar Luminosity : 0.238 +/- 0.003\n\t\t\tParallax : 3.297 +/- 0.036\n\t\t\tMaximum Av : 0.030\n```\n\nIf you already know any of those values, you can override the search for them by\nproviding them in the Star constructor with their respective uncerainties.\nLikewise if you already have the magnitudes and wish to override the on-line\nsearch, you can provide a dictionary where the keys are the filters and values\nare the mag, mag_err tuples.\n\nIf you want to check the retrieved magnitudes you can call the `print_mags`\nmethod from Star:\n\n```python\ns.print_mags()\n```\n\nThis will print the filters used, magnitudes and uncertainties. For NGTS-6 this\nwould look like this:\n\n```\n\t\t     Filter     \tMagnitude\tUncertainty\n\t\t----------------\t---------\t-----------\n\t\t    2MASS_H     \t 11.7670 \t  0.0380\n\t\t    2MASS_J     \t 12.2220 \t  0.0330\n\t\t    2MASS_Ks    \t 11.6500 \t  0.0320\n\t\tGROUND_JOHNSON_V\t 14.0870 \t  0.0210\n\t\tGROUND_JOHNSON_B\t 15.1710 \t  0.0140\n\t\t  GaiaDR2v2_G   \t 13.8175 \t  0.0006\n\t\t  GaiaDR2v2_RP  \t 13.1127 \t  0.0015\n\t\t  GaiaDR2v2_BP  \t 14.4012 \t  0.0027\n\t\t     SDSS_g     \t 14.6390 \t  0.0580\n\t\t     SDSS_i     \t 13.3780 \t  0.0570\n\t\t     SDSS_r     \t 13.7030 \t  0.0320\n\t\t  WISE_RSR_W1   \t 11.5550 \t  0.0270\n\t\t  WISE_RSR_W2   \t 11.6360 \t  0.0270\n\t\t   GALEX_NUV    \t 21.9520 \t  0.4090\n\t\t      TESS      \t 13.1686 \t  0.0062\n```\n**Note:**  **ARIADNE** automatically prints and saves the used magnitudes and\nfilters to a file.\n\nThe way the photometry retrieval works is that Gaia DR2 crossmatch catalogs are\nqueried for the Gaia ID, these crossmatch catalogs exist for ALL-WISE, APASS,\nPan-STARRS1, SDSS, 2MASS and Tycho-2, so finding photometry relies on these\ncrossmatches. In the case of NGTS-6, there are also Pan-STARRS1 photometry which\n**ARIADNE** couldn't find due to the Pan-STARRS1 source not being identified in\nthe Gaia DR2 crossmatch, in this case if you wanted to add that photometry\nmanually, you can do so by using the `add_mag` method from Star, for example, if\nyou wanted to add the PS1_r mag to our `Star` object you would do:\n\n```python\ns.add_mag(13.751, 0.032, 'PS1_r')\n```\n\nIf for whatever reason **ARIADNE** found a bad photometry point and you needed\nto remove it, you can invoke the `remove_mag` method. For example you wanted\nto remove the TESS magnitude due to it being from a blended source, you can just\nrun\n\n```python\ns.remove_mag('NGTS')\n```\n\nA list of allowed filters can be found\n[here](https://github.com/jvines/astroARIADNE/blob/master/filters.md)\n\n### Interstellar extinction\n\n**ARIADNE** has an incorporated prior for the interstellar extinction in the\nVisual band, $A_{\\rm V}$ which consists of a uniform prior between 0 and the\nmaximum line-of-sight value provided by the\n[SFD dust maps](https://ui.adsabs.harvard.edu/abs/2011ApJ...737..103S/abstract).\nThis, however, can be changed either by a custom prior (see Fitter setup) or by\nchanging the dustmap used. We provide following dustmaps:\n\n- [SFD (2011)](https://ui.adsabs.harvard.edu/abs/2011ApJ...737..103S/abstract)\n- [Planck Collaboration (2013)](http://adsabs.harvard.edu/abs/2014A%26A...571A..11P)\n- [Planck Collaboration (2016; GNILC)](https://ui.adsabs.harvard.edu/abs/2016A%26A...596A.109P/abstract)\n- [Lenz, Hensley & Doré (2017)](https://arxiv.org/abs/1706.00011)\n- [Bayestar (2019)](https://ui.adsabs.harvard.edu/abs/2019ApJ...887...93G)\n\nThese maps are all implemented through the\n[dustmaps](https://dustmaps.readthedocs.io/en/latest/index.html) package and\nneed to be downloaded. Instructions to download the dustmaps can be found in\nits documentation.\n\nTo change the dustmap you need to provide the `dustmap` parameter to the `Star` constructor, for example:\n\n```python\nra = 75.795\ndec = -30.399\nstarname = 'NGTS-6'\ngaia_id = 4875693023844840448\n\ns = Star(starname, ra, dec, g_id=gaia_id, dustmap='Bayestar')\n```\n\nThis concludes the stellar setup and now we're ready to set up the parameters\nfor the fitting routine.\n\n## Fitter setup\n\nIn this section we'll detail how to set up the fitter for the Bayesian Model\nAveraging (BMA) mode of **ARIADNE**. For single models the procedure is very\nsimilar.\n\nFirst, import the fitter from **ARIADNE**\n\n```python\nfrom astroARIADNE.fitter import Fitter\n```\n\nThere are several configuration parameters we have to setup, the first one is\nthe output folder where we want **ARIADNE** to output the fitting files and\nresults, next we have to select the fitting engine (for BMA only dynesty is\nsupported), number of live points to use, evidence tolerance threshold, and the\nfollowing only apply for dynesty: bounding method, sampling method, threads,\ndynamic nested sampler. After selecting all of those, we need to select the\nmodels we want to use and finally, we feed them all to the fitter:\n\n```python\nout_folder = 'your folder here'\n\nengine = 'dynesty'\nnlive = 500\ndlogz = 0.5\nbound = 'multi'\nsample = 'rwalk'\nthreads = 4\ndynamic = False\n\nsetup = [engine, nlive, dlogz, bound, sample, threads, dynamic]\n\n# Feel free to uncomment any unneeded/unwanted models\nmodels = [\n\t'phoenix',\n\t'btsettl',\n\t'btnextgen',\n\t'btcond',\n\t'kurucz',\n\t'ck04'\n]\n\nf = Fitter()\nf.star = s\nf.setup = setup\nf.av_law = 'fitzpatrick'\nf.out_folder = out_folder\nf.bma = True\nf.models = models\nf.n_samples = 100000\n```\n\n**Note:** While you can always select all 6 models, **ARIADNE** has an internal\nfilter put in place in order to avoid having the user unintentionally bias the\nresults. For stars with Teff > 4000 K BT-Settl, BT-NextGen and BT-Cond are\nidentical and thus only BT-Settl is used, even if the three are selected. On the\nother hand, Kurucz and Castelli & Kurucz are known to work poorly on stars with\nTeff < 4000 K, thus they aren't used in that regime.\n\nWe allow the use of four different extinction laws:\n\n- fitzpatrick\n- cardelli\n- odonnell\n- calzetti\n\nThe next step is setting up the priors to use:\n\n```python\nf.prior_setup = {\n\t'teff': ('default'),\n\t'logg': ('default'),\n\t'z': ('default'),\n\t'dist': ('default'),\n\t'rad': ('default'),\n\t'Av': ('default')\n}\n```\n\nA quick explanation on the priors:\n\nThe default prior for Teff is an empirical prior drawn from the RAVE survey\ntemperatures distribution, the distance prior is drawn from the\n[Bailer-Jones](https://ui.adsabs.harvard.edu/abs/2021AJ....161..147B/abstract)\ndistance estimate from Gaia EDR3, and the radius has a flat prior ranging from\n0.5 to 20 R$_\\odot$. The default prior for the metallicity `z` and log g are\nalso their respective distributions from the RAVE survey, the default prior for\nAv is a flat prior that ranges from 0 to the maximum of line-of-sight as per the\nSFD map, finally the excess noise parameters all have gaussian priors centered\naround their respective uncertainties.\n\nWe offer customization on the priors as well, those are listed in the following\ntable.\n\n| Prior | Hyperparameters |\n| :------: | :----------: |\n| Fixed | value |\n| Normal | mean, std |\n| TruncNorm | mean, std, lower\\_lim, uppern\\_lim |\n| Uniform | ini, end |\n| RAVE (log g only) | --- |\n| Default | --- | \n\nSo if you knew (from a spectroscopic analysis, for example) that the effective\ntemperature is 5600 +/- 100 and the metallicity is [Fe/H] = 0.09 +/- 0.05 and\nyou wanted to use them as priors, and the star is nearby (< 70 pc), so you\nwanted to fix Av to 0, your prior dictionary should look like this:\n\n```python\nf.prior_setup = {\n\t'teff': ('normal', 5600, 100),\n\t'logg': ('default'),\n\t'z': ('normal', 0.09, 0.05),\n\t'dist': ('default'),\n\t'rad': ('default'),\n\t'Av': ('fixed', 0)\n}\n```\n\nAfter having set up everything we can finally initialize the fitter and start\nfitting\n\n```python\nf.initialize()\nf.fit_bma()\n```\n\nNow we wait for our results!\n\n## Visualization\n\nAfter the fitting has finished, we need to visualize our results. **ARIADNE**\nincludes a plotter object to do just that! We first star by importing the\nplotter:\n\n```python\nfrom astroARIADNE.plotter import SEDPlotter\n```\n\nThe setup for the plotter is already made for you, but if you really want to\nchange them, instructions on how to change it can be found\n[here](https://github.com/jvines/astroARIADNE/blob/master/customization.md)\n\nBefore we plot the SEDs we need to tell **ARIADNE** where to find our models.\nThis step isn't necessary if you don't want or need SED plots and are happy with\nthe HR diagram, histograms, cornerplot and RAW SED. This is done with an\nenvironmental variable called ARIADNE_MODELS, to set it up you just need to run\n`export ARIADNE_MODELS='/path/to/Models_Dir/'` in your terminal. You can also\nadd that instruction to your `.bash_profile` or `.bashrc` and the run\n`source ~/.bash_profile` so you don't have to export everytime.\n\nNow that **ARIADNE** knows where to find the models we only need to specify\nthe results file location and the output folder for the plots!\n\n```python\nin_file = out_folder + 'BMA_out.pkl'\nplots_out_folder = 'your plots folder here'\n```\n\nNow we instantiate the plotter and call the desired plotting methods!\nWe offer 5 different plots: \n\n- A RAW SED plot\n- A SED plot with the model and synthetic photometry\n- A corner plot\n- An HR diagram taken from MIST isochrones\n- Histograms showing the parameter distributions for each model.\n\n```python\nartist = SEDPlotter(in_file, plots_out_folder)\nartist.plot_SED_no_model()\nartist.plot_SED()\nartist.plot_bma_hist()\nartist.plot_bma_HR(10)\nartist.plot_corner()\n```\n\nThe number given to `plot_bma_HR` is the number of extra tracks you want to\nplot, drawn randomly from the posterior distribution.\n\nIf you're iterating through lots of stars you can call the SEDPlotter `clean`\nmethod to clear opened figures with `artist.clean()`\n\nIf you don't have the models in your computer, then the `plot_SED` method will\nfail, as it needs the complete model grid.\n\nAn example usage file is provided in the repository called `test_bma.py` for the\nBMA approach and test.py for single model fitting.\n\n## OUTPUT FILES\nAfter **ARIADNE** has finished running, it will output a series of files and\nplots showing the results of the fit and other information.\n\nThe most important file is the `best_fit.dat` which contains the best fiting\nparameters with the 1 sigma error bars and the 3 sigma confidence interval.\nThen there are pickle files for each of the used models plus a last one for the\nBMA, these contain raw information about the results. There is a `prior.dat`\nfile that shows the priors used and a `mags.dat` file with the used magnitudes\nand filters.\n\nAnother important output are the plots. Inside the plots folder you can find\n`CORNER.png/pdf` with the cornerplot (the plot showing the distribution of the\nparameters agains eachother), `HR_diagram.png/pdf` only for the BMA, with the HR\ndiagram showing the position of the star, `SED_no_model.png/pdf` with the RAW\nSED showing each photometry point color coded to their respective filter, and\n`SED.png/pdf` with the SED with the catalog photometry plus synthetic\nphotometry. If BMA was done, there's also a `histograms` folder inside the plot\nfolder with various histograms of the fitted parameters and their distribution\nper model, highlighting the benefits of BMA.\n\nExamples of those figures:\n\n![SED plot](https://github.com/jvines/astroARIADNE/blob/master/img/SED.png)\n![HR Diagram](https://github.com/jvines/astroARIADNE/blob/master/img/HR_diagram.png)\n![Corner plot](https://github.com/jvines/astroARIADNE/blob/master/img/CORNER.png)\n![Histogram example](https://github.com/jvines/astroARIADNE/blob/master/img/rad.png)\n\n\n## Infrared Excess\n\nAs of version 1.0, **ARIADNE** now allows for Infrared Excess visualization!\n\nTo visualize infrared excess you just need to add the relevant photometric\nobservations to the `Star` object with the `add_mag()` method. After the fitting\nis done, you then need to initiate the `Plotter` object with the `ir_excess`\nparameter set to `True`:\n\n```Python\nartist = SEDPlotter(in_file, plots_out_folder, pdf=True, ir_excess=True)\n```\nFinally after plotting, you should get an SED figure with your manually added\nphotometry!\n\nAllowed filters for infrared excess plots are **WISE W3, WISE W4, HERSCHEL PACS\nBLUE, GREEN and RED**, names for these filters can be found in the\n[filters page.](https://github.com/jvines/astroARIADNE/blob/master/filters.md)\n\n\n## Citing ARIADNE\n\nFor a more in depth look on the inner workings of **ARIADNE** consider\n[reading the paper!](https://ui.adsabs.harvard.edu/abs/2022MNRAS.tmp..920V/abstract)\n\nAdditionally, you can find how to cite **ARIADNE** and its dependencies\n[here](https://github.com/jvines/astroARIADNE/blob/master/citations.md)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jvines/astroARIADNE",
    "keywords": "",
    "license": "MIT",
    "maintainer": "Jose Vines",
    "maintainer_email": "jose.vines@ug.uchile.cl",
    "name": "astroARIADNE",
    "package_url": "https://pypi.org/project/astroARIADNE/",
    "platform": null,
    "project_url": "https://pypi.org/project/astroARIADNE/",
    "project_urls": {
      "Homepage": "https://github.com/jvines/astroARIADNE"
    },
    "release_url": "https://pypi.org/project/astroARIADNE/1.0.9/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Bayesian Model Averaging SED fitter",
    "version": "1.0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15844409,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "362c6b6f78210e697c9a2038e6d1ce4706a5f21abd67707922a39ebcbc48f721",
          "md5": "d6e96cdba37fd7741dc7051a6831d696",
          "sha256": "5767aae1ce4213c8a69fe86ffd673dd06fa8c90d445b697fd337884bb7da2bf5"
        },
        "downloads": -1,
        "filename": "astroARIADNE-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d6e96cdba37fd7741dc7051a6831d696",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 55977122,
        "upload_time": "2022-06-25T22:13:08",
        "upload_time_iso_8601": "2022-06-25T22:13:08.349531Z",
        "url": "https://files.pythonhosted.org/packages/36/2c/6b6f78210e697c9a2038e6d1ce4706a5f21abd67707922a39ebcbc48f721/astroARIADNE-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b6c00c9149f5886e7937cd7dc0ca453424fedec31b8097b9f263f813bf93925",
          "md5": "c2d7230190291ba006e468b04f661fd1",
          "sha256": "656a688eafe0c07227d3be06f54cde838a80e5380308bccfde8e4e3e8e8152c6"
        },
        "downloads": -1,
        "filename": "astroARIADNE-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c2d7230190291ba006e468b04f661fd1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 55977259,
        "upload_time": "2022-07-05T04:03:20",
        "upload_time_iso_8601": "2022-07-05T04:03:20.478348Z",
        "url": "https://files.pythonhosted.org/packages/8b/6c/00c9149f5886e7937cd7dc0ca453424fedec31b8097b9f263f813bf93925/astroARIADNE-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d35ff46ad24f62293f3d76064f93a915e2f96677fdb262e3f8ad0d829566076",
          "md5": "2e9d9c3d456502ed296eee39eb0dc6fd",
          "sha256": "c9f57bb44ba33d14a621f63ec68456a94efcf590cf8e8db5f7e9c16233440c12"
        },
        "downloads": -1,
        "filename": "astroARIADNE-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2e9d9c3d456502ed296eee39eb0dc6fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 55977271,
        "upload_time": "2022-07-05T04:37:19",
        "upload_time_iso_8601": "2022-07-05T04:37:19.376406Z",
        "url": "https://files.pythonhosted.org/packages/0d/35/ff46ad24f62293f3d76064f93a915e2f96677fdb262e3f8ad0d829566076/astroARIADNE-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff2097f166abd504343c786c8aa8c2c7d7f9b2e80a482518a18c00bbf41c86f1",
          "md5": "ef4abbcd7f23785bf3b0c735520aa7af",
          "sha256": "672574d2a224212b274a63aa1e4da7281f1919921e7f8b24a4e7bace6825e062"
        },
        "downloads": -1,
        "filename": "astroARIADNE-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ef4abbcd7f23785bf3b0c735520aa7af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 55977227,
        "upload_time": "2022-07-06T19:04:36",
        "upload_time_iso_8601": "2022-07-06T19:04:36.607723Z",
        "url": "https://files.pythonhosted.org/packages/ff/20/97f166abd504343c786c8aa8c2c7d7f9b2e80a482518a18c00bbf41c86f1/astroARIADNE-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3b3aa3800ce2294985498eef49eb6bbe11b72ba2ca2e92a5f8b9015578d98ea",
          "md5": "b85e16dd90b11b3b240011530983de54",
          "sha256": "90c1f4d1245bfc49e1eb57904ec9179b6b4de6875f9b84b449e484731d107e29"
        },
        "downloads": -1,
        "filename": "astroARIADNE-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b85e16dd90b11b3b240011530983de54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 55977234,
        "upload_time": "2022-07-21T18:26:40",
        "upload_time_iso_8601": "2022-07-21T18:26:40.479498Z",
        "url": "https://files.pythonhosted.org/packages/d3/b3/aa3800ce2294985498eef49eb6bbe11b72ba2ca2e92a5f8b9015578d98ea/astroARIADNE-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db7286512f390d9e4edab289f1fec722e78f1abe08f5d88395f6783480d22164",
          "md5": "511f4a59f8fe1957fe8f08b280c44130",
          "sha256": "a356631421ec02f985c3971b2a6f9ab6563a8e6975d1ae3087ae6d86b6909caf"
        },
        "downloads": -1,
        "filename": "astroARIADNE-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "511f4a59f8fe1957fe8f08b280c44130",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 55977443,
        "upload_time": "2022-08-30T22:06:16",
        "upload_time_iso_8601": "2022-08-30T22:06:16.893649Z",
        "url": "https://files.pythonhosted.org/packages/db/72/86512f390d9e4edab289f1fec722e78f1abe08f5d88395f6783480d22164/astroARIADNE-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5564bb1b6c8adb4067cdd43d207d3f5d000599ae6f2f0a8a700450d1549fee37",
          "md5": "ac9a4b05eb66c673ddb2175dc33d09d8",
          "sha256": "d3dce9cd51d790f182edacb9120d5518e4d11118a12440aa8438cff57c48b777"
        },
        "downloads": -1,
        "filename": "astroARIADNE-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "ac9a4b05eb66c673ddb2175dc33d09d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 55977492,
        "upload_time": "2022-09-07T19:10:39",
        "upload_time_iso_8601": "2022-09-07T19:10:39.983742Z",
        "url": "https://files.pythonhosted.org/packages/55/64/bb1b6c8adb4067cdd43d207d3f5d000599ae6f2f0a8a700450d1549fee37/astroARIADNE-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cc718fe8a7e13a0a3613fe8b519811a6a6b38f8b12a9737d733abbd3ade6f51",
          "md5": "b1c584d5f37631d6cf79632175116560",
          "sha256": "1466a86ae7335a9be1f51b836a9df94034be3d9fe1754001bb491fc75f80f77f"
        },
        "downloads": -1,
        "filename": "astroARIADNE-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "b1c584d5f37631d6cf79632175116560",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 55977685,
        "upload_time": "2022-09-11T17:43:09",
        "upload_time_iso_8601": "2022-09-11T17:43:09.276289Z",
        "url": "https://files.pythonhosted.org/packages/5c/c7/18fe8a7e13a0a3613fe8b519811a6a6b38f8b12a9737d733abbd3ade6f51/astroARIADNE-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec0068127f0ed52e44762dd821ca98a556bcb6d6f7c5350013842a2adeb88a56",
          "md5": "71b474ceda3def6ac091a229b67154bd",
          "sha256": "70538823f455d85068ff8a2c1391e3c19d6f4cf251510a81677522bb9d67c371"
        },
        "downloads": -1,
        "filename": "astroARIADNE-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "71b474ceda3def6ac091a229b67154bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 55979591,
        "upload_time": "2022-11-04T02:42:42",
        "upload_time_iso_8601": "2022-11-04T02:42:42.826648Z",
        "url": "https://files.pythonhosted.org/packages/ec/00/68127f0ed52e44762dd821ca98a556bcb6d6f7c5350013842a2adeb88a56/astroARIADNE-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecd0967db6987e4c0d4b8f5def49d512862f7e1b9334d95b075792604efdd66f",
          "md5": "73053789dcc28d1d3fc7596076718a50",
          "sha256": "99229b3a1d2f8115b4cabd4b925a1a8a182e24de669791bfd20b43cb62ad8069"
        },
        "downloads": -1,
        "filename": "astroARIADNE-1.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "73053789dcc28d1d3fc7596076718a50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 55979621,
        "upload_time": "2022-11-21T19:12:14",
        "upload_time_iso_8601": "2022-11-21T19:12:14.268690Z",
        "url": "https://files.pythonhosted.org/packages/ec/d0/967db6987e4c0d4b8f5def49d512862f7e1b9334d95b075792604efdd66f/astroARIADNE-1.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ecd0967db6987e4c0d4b8f5def49d512862f7e1b9334d95b075792604efdd66f",
        "md5": "73053789dcc28d1d3fc7596076718a50",
        "sha256": "99229b3a1d2f8115b4cabd4b925a1a8a182e24de669791bfd20b43cb62ad8069"
      },
      "downloads": -1,
      "filename": "astroARIADNE-1.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "73053789dcc28d1d3fc7596076718a50",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 55979621,
      "upload_time": "2022-11-21T19:12:14",
      "upload_time_iso_8601": "2022-11-21T19:12:14.268690Z",
      "url": "https://files.pythonhosted.org/packages/ec/d0/967db6987e4c0d4b8f5def49d512862f7e1b9334d95b075792604efdd66f/astroARIADNE-1.0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}