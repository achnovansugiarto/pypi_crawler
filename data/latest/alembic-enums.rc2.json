{
  "info": {
    "author": "Roman Imankulov",
    "author_email": "roman.imankulov@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Alembic Enums\n\n![example workflow](https://github.com/imankulov/alembic-enums/actions/workflows/tests.yml/badge.svg)\n\n**Support for migrating PostgreSQL enums with Alembic**\n\nThe package doesn't detect enum changes or generate migration code automatically, but it provides a helper class to run the enum migrations in Alembic migration scripts.\n\n## Problem statement\n\nWhen you define an enum column with SQLAlchemy, the initial migration defines a custom [enum type](https://www.postgresql.org/docs/current/datatype-enum.html).\n\nOnce the enum type is created, [ALTER TYPE](https://www.postgresql.org/docs/current/sql-altertype.html) allows you to add new values or rename existing ones, but not delete them.\n\nIf you need to delete a value from an enum, you must create a new enum type and migrate all the columns to use the new type.\n\n\n## Installation\n\n```bash\npip install alembic-enums\n```\n\n\n## Usage\n\nAssume you decided to rename the `state` enum values `active` and `inactive` to `enabled` and `disabled`:\n\n```diff\n class Resource(Base):\n     __tablename__ = \"resources\"\n     id = Column(Integer, primary_key=True)\n     name = Column(String(255), nullable=False)\n-    state = Column(Enum(\"enabled\", \"disabled\", name=\"resource_state\"), nullable=False)\n+    state = Column(Enum(\"active\", \"archived\", name=\"resource_state\"), nullable=False)\n```\n\nTo migrate the database, we create a new empty migration with `alembic revision -m \"Rename enum values\"` and add the following code to the generated migration script:\n\n```python\nfrom alembic import op\n\nfrom alembic_enums import EnumMigration, Column\n\n# Define a target column. As in PostgreSQL, the same enum can be used in multiple\n# column definitions, you may have more than one target column.\n# The constructor arguments are the table name, the column name, and the\n# server_default values for the old and new enum types.\ncolumn = Column(\"resources\", \"state\", old_server_default=None, new_server_default=None)\n\n# Define an enum migration. It defines the old and new enum values\n# for the enum, and the list of target columns.\nenum_migration = EnumMigration(\n    op=op,\n    enum_name=\"resource_state\",\n    old_options=[\"enabled\", \"disabled\"],\n    new_options=[\"active\", \"archived\"],\n    columns=[column],\n)\n\n# Define upgrade and downgrade operations. Inside upgrade_ctx and downgrade_ctx\n# context managers, you can update your data.\n\ndef upgrade():\n    with enum_migration.upgrade_ctx():\n        enum_migration.update_value(column, \"enabled\", \"active\")\n        enum_migration.update_value(column, \"disabled\", \"archived\")\n\n\ndef downgrade():\n    with enum_migration.downgrade_ctx():\n        enum_migration.update_value(column, \"active\", \"enabled\")\n        enum_migration.update_value(column, \"archived\", \"disabled\")\n```\n\nUnder the hood, the `EnumMigration` class creates a new enum type, updates the target columns to use the new enum type, and deletes the old enum type.\n\n\n## Change column default values\n\n\nTo change the column default values, pass corresponding values to new_server_default and old_server_default arguments of the Column constructor. The new_server_default is used on upgrade, and the old_server_default is used on downgrade.\n\nIMPORTANT: Setting the server_default value to None will remove the default value from the column. If you want to keep the default value as is, set old_server_default and new_server_default to the same value.\n\nFor example, to change the default value of the `state` column from `enabled` to `active`:\n\n\n```python\nfrom alembic_enums import Column\n\ncolumn = Column(\n    \"resources\",\n    \"state\",\n    old_server_default=\"enabled\",\n    new_server_default=\"active\",\n)\n```\n\n## API reference\n\n### `EnumMigration`\n\nA helper class to run enum migrations in Alembic migration scripts.\n\n**Constructor arguments:**\n\n- `op`: an instance of `alembic.operations.Operations`\n- `enum_name`: the name of the enum type\n- `old_options`: a list of old enum values\n- `new_options`: a list of new enum values\n- `columns`: a list of `Column` instances that use the enum type\n\n**Methods:**\n\n- `upgrade_ctx()`: a context manager that creates a new enum type, updates the target columns to use the new enum type, and deletes the old enum type\n- `downgrade_ctx()`: a context manager that performs the opposite operations.\n- `update_value(column, old_value, new_value)`: a helper method to update the value of the `column` to `new_value` where it was `old_value` before. It's useful to update the data in the upgrade and downgrade operations within the `upgrade_ctx` and `downgrade_ctx` context managers.\n- `upgrade()`: a shorthand for `with upgrade_ctx(): pass`.\n- `downgrade()`: a shorthand for `with downgrade_ctx(): pass`.\n\n### `Column`\n\nA data class to define a target column for an enum migration.\n\n**Constructor arguments:**\n\n- `table_name`: the name of the table\n- `column_name`: the name of the column\n- `old_server_default`: the old server_default value. When set to None, the server_default value is removed on downgrade.\n- `new_server_default`: the new server_default value. When set to None, the server_default value is removed on upgrade.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/imankulov/alembic-enums",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "alembic-enums",
    "package_url": "https://pypi.org/project/alembic-enums/",
    "platform": null,
    "project_url": "https://pypi.org/project/alembic-enums/",
    "project_urls": {
      "Homepage": "https://github.com/imankulov/alembic-enums",
      "Repository": "https://github.com/imankulov/alembic-enums"
    },
    "release_url": "https://pypi.org/project/alembic-enums/0.2.0/",
    "requires_dist": null,
    "requires_python": ">=3.8,<4.0",
    "summary": "Support for migrating PostgreSQL enums with Alembic",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17370056,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ca51c736b0d1e6b9760cb2959fa81b8d1e1da84b15a2695cd8a03d7cc675b8e",
          "md5": "560981453f2b6294d1b30562e3e1bce5",
          "sha256": "111545eef54889684bededca3ecc4cd494a3846d208ee8d030edf9e7c658a54a"
        },
        "downloads": -1,
        "filename": "alembic_enums-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "560981453f2b6294d1b30562e3e1bce5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 5009,
        "upload_time": "2022-12-20T23:23:47",
        "upload_time_iso_8601": "2022-12-20T23:23:47.570348Z",
        "url": "https://files.pythonhosted.org/packages/9c/a5/1c736b0d1e6b9760cb2959fa81b8d1e1da84b15a2695cd8a03d7cc675b8e/alembic_enums-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "634a64fbd17e5a0b4bc6711f14d3d7abbfc52af906107d9384da4671fca19ae3",
          "md5": "a61c498afb40851b7b28e94797100f6c",
          "sha256": "60889f6205cf817a81bcd3619dd1845c7a21899e3ad39542dd2a8673cfdf4e21"
        },
        "downloads": -1,
        "filename": "alembic_enums-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a61c498afb40851b7b28e94797100f6c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 5004,
        "upload_time": "2022-12-20T23:23:49",
        "upload_time_iso_8601": "2022-12-20T23:23:49.496908Z",
        "url": "https://files.pythonhosted.org/packages/63/4a/64fbd17e5a0b4bc6711f14d3d7abbfc52af906107d9384da4671fca19ae3/alembic_enums-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b9bbd9251bed6830dfbdff8ba031a994440d48ec24d77f76d36473bd00e0427",
          "md5": "8738d511e27b6ec5af1780766f71a32f",
          "sha256": "dbd539191c196d156f4dc123a7de17ae48c0203618e0538f3ee40a93d20cd332"
        },
        "downloads": -1,
        "filename": "alembic_enums-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8738d511e27b6ec5af1780766f71a32f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 5767,
        "upload_time": "2023-03-20T21:54:27",
        "upload_time_iso_8601": "2023-03-20T21:54:27.480695Z",
        "url": "https://files.pythonhosted.org/packages/8b/9b/bd9251bed6830dfbdff8ba031a994440d48ec24d77f76d36473bd00e0427/alembic_enums-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7edb60ed1bcfd0b6c13ee65adbf9210e4256341bda93da91b06ad2da86a7ec81",
          "md5": "ad78a35070d21941d1bc335310e3ae08",
          "sha256": "f0a7a79a261900d51eb349e59f104fc4804ffbaf66d84e9026986760f481da01"
        },
        "downloads": -1,
        "filename": "alembic_enums-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ad78a35070d21941d1bc335310e3ae08",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 5141,
        "upload_time": "2023-03-20T21:54:29",
        "upload_time_iso_8601": "2023-03-20T21:54:29.167830Z",
        "url": "https://files.pythonhosted.org/packages/7e/db/60ed1bcfd0b6c13ee65adbf9210e4256341bda93da91b06ad2da86a7ec81/alembic_enums-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8b9bbd9251bed6830dfbdff8ba031a994440d48ec24d77f76d36473bd00e0427",
        "md5": "8738d511e27b6ec5af1780766f71a32f",
        "sha256": "dbd539191c196d156f4dc123a7de17ae48c0203618e0538f3ee40a93d20cd332"
      },
      "downloads": -1,
      "filename": "alembic_enums-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8738d511e27b6ec5af1780766f71a32f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 5767,
      "upload_time": "2023-03-20T21:54:27",
      "upload_time_iso_8601": "2023-03-20T21:54:27.480695Z",
      "url": "https://files.pythonhosted.org/packages/8b/9b/bd9251bed6830dfbdff8ba031a994440d48ec24d77f76d36473bd00e0427/alembic_enums-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7edb60ed1bcfd0b6c13ee65adbf9210e4256341bda93da91b06ad2da86a7ec81",
        "md5": "ad78a35070d21941d1bc335310e3ae08",
        "sha256": "f0a7a79a261900d51eb349e59f104fc4804ffbaf66d84e9026986760f481da01"
      },
      "downloads": -1,
      "filename": "alembic_enums-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ad78a35070d21941d1bc335310e3ae08",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 5141,
      "upload_time": "2023-03-20T21:54:29",
      "upload_time_iso_8601": "2023-03-20T21:54:29.167830Z",
      "url": "https://files.pythonhosted.org/packages/7e/db/60ed1bcfd0b6c13ee65adbf9210e4256341bda93da91b06ad2da86a7ec81/alembic_enums-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}