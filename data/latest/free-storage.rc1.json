{
  "info": {
    "author": "Jeffrey Tang",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "## free_storage \n\n### Motivation\n[GoogleDrive](https://www.google.com/drive/) provides up to 15GB of free storage (as of the date of writing). The offical Python API ([`pydrive`](https://pythonhosted.org/PyDrive/index.html)) is a bit tricky to use when you have a nested directory structure. The goal here is to be able to manipulate files GoogleDrive as if you are on your local drive using `os`. If you are using GoogleCloud, S3 or other paid storage services, [cloud-storage-client](https://pypi.org/project/cloud-storage-client/) will be a better library. As the name suggests, this is only useful if you want to stick to the free stuff :) \n\n### Installation\n\n`pip install free_storage`\n\nTo use the library for the first time, you need to follow this [tutorial](https://pythonhosted.org/PyDrive/quickstart.html) to generate `gdrive_credentials.json`. Also you need to define an extra `gdrive_settings.yaml` file.\n\n```bash\n# gdrive_credentials.json\n{\"access_token\": XXXX, \"client_id\": XXXX, \"client_secret\": XXXX, ...}\n```\n\n```bash\n# gdrive_settings.yaml\nclient_config_backend: settings\nclient_config:\n  client_id: XXXX\n  client_secret: XXXX\n\nsave_credentials: True\nsave_credentials_backend: file\nsave_credentials_file: gdrive_credentials.json\n\nget_refresh_token: True\n\noauth_scope:\n  - https://www.googleapis.com/auth/drive\n  - https://www.googleapis.com/auth/drive.metadata\n```\n\nBelow is an example of how the interface is used\n```python\nfrom free_storage import GoogleDriveStorage\n\ndrive = GoogleDriveStorage(\n    setting_file_name=\"path/to/gdrive_settings.yaml\",\n    credential_file_name=\"path/to/gdrive_credentials.json\"\n)\n\n# Create a folder under root\ndrive.create_file(\"directory_name\")\n\n# Upload an existing file locally to a remote path\ndrive.create_file(\n    remote_path=\"directory_name/test.zip\",\n    local_path=\"test.zip\",\n)\n\n# Upload content in memory to a file in remote path\ndrive.create_file(\n    remote_path=\"directory_name/test.txt\",\n    content=\"some string\",\n)\n\n# Download file\ndrive.download_file(\n    remote_path=\"directory_name/test.txt\",\n    local_path=\"test.txt\"\n)\n\n# Delete file\ndrive.delete_file(\"directory_name/test.txt\")\n```\n\n### TODO\n- For `create_file` method under `GoogleDriveStorage`, allow creating nested levels of directories, instead of just one level down \n- Stream reading large files without downloading the whole file to local",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "free-storage",
    "package_url": "https://pypi.org/project/free-storage/",
    "platform": "",
    "project_url": "https://pypi.org/project/free-storage/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/free-storage/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.5.0",
    "summary": "Accessing GoogleDrive as if it is your local drive",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6442606,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "220896cf1bf65809b2f4caaa0dafe0422fefd8bb648daa9997773d3f968f7e56",
          "md5": "46d34fc752a40da7ecd69920bd403b86",
          "sha256": "9c1d5489d6c3d813f2a23daa07feed98ff473857ece6365a89e2ae15e76a1872"
        },
        "downloads": -1,
        "filename": "free_storage-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "46d34fc752a40da7ecd69920bd403b86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.0",
        "size": 8027,
        "upload_time": "2020-01-13T06:03:27",
        "upload_time_iso_8601": "2020-01-13T06:03:27.354782Z",
        "url": "https://files.pythonhosted.org/packages/22/08/96cf1bf65809b2f4caaa0dafe0422fefd8bb648daa9997773d3f968f7e56/free_storage-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "220896cf1bf65809b2f4caaa0dafe0422fefd8bb648daa9997773d3f968f7e56",
        "md5": "46d34fc752a40da7ecd69920bd403b86",
        "sha256": "9c1d5489d6c3d813f2a23daa07feed98ff473857ece6365a89e2ae15e76a1872"
      },
      "downloads": -1,
      "filename": "free_storage-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "46d34fc752a40da7ecd69920bd403b86",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5.0",
      "size": 8027,
      "upload_time": "2020-01-13T06:03:27",
      "upload_time_iso_8601": "2020-01-13T06:03:27.354782Z",
      "url": "https://files.pythonhosted.org/packages/22/08/96cf1bf65809b2f4caaa0dafe0422fefd8bb648daa9997773d3f968f7e56/free_storage-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}