{
  "info": {
    "author": "Franco Peschiera",
    "author_email": "pchtsp@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# hackathon baobab 2020\n\nWe want to schedule all jobs by deciding when and in which mode to execute each job. There are precedence relationships between pairs of jobs. There are two types of resources. Renewable resources (R) are consumed *each period* and have an availability that is recovered each period of time. Non-renewable resources (N) are consumed *once per job* and have an availability for the whole planning horizon.\nThe objective is to reduce the finishing time (start time + duration) of the last job.\n\nAs an example the following image shows the input data (left), and the optimal solution (center: gantt, resource usage: right) for the instance `c159_7.mm`:\n\n![status graph](img/c159_7.mm.png)\n\n\nThe instances for the problem are found here:\n\nhttp://www.om-db.wi.tum.de/psplib/getdata_mm.html\n\nOn the `data` directory of this repository we have copied the smallest instances.\nFor the format of the solution, since there is no example that we know of, we'll be using the one in `data/solutions/c15mm/c1564_9.output.json`\n\nBelow are the instructions to use the helper functions and checker (they are optional).\nTo understand the format of the input data file, you can check how we parse it in python in the function `Instance.from_mm(path)` in the file`hackathonbaobab2020/core/instance.py`\n\n## Installation\n\npython>=3.5 is needed. I'm assuming a Windows installation.\n\nTo install from source:\n\n```\ncd hackathonbaobab2020\npython -m venv venv\nvenv/Scripts/activate\npip install -r requirements.txt\n```\n\nAlternatively, it's possible to install it as a pypi package.\nHere there is more control on which packages are installed.\n\nInstall only the core dependencies (core, schemas, default solver)::\n\n```\npip install hackathonbaobab2020\n```\n\nInstall all dependencies ('benchmark' to generate graphs, 'solvers' to install solver dependencies). The second line installs (in Ubuntu) the cbc solver::\n\n```\npip install hackathonbaobab2020[benchmark,solvers]\nsudo apt install coinor-cbc\n```\n\n## How to add a new solver\n\nThese are the steps to add a solver and make it compatible with the command line and the python functions:\n\n1. Add a file inside the `hackathonbaobab2020/solver` directory with a subclass of `hackathonbaobab2020.core.experiment.Experiment` that implements, at least, the `solve()` method *with the same argument names*.\n1. Your `solve` method needs to return an integer with the status of the solving process. Current values are `{4: \"Optimal\", 2: \"Feasible\", 3: \"Infeasible\", 0: \"Unknown\"}`.\n1. Your `solve` method also needs to store the best solution found in `self.solution`. It needs to be an instance of the `Solution` object.\n1. Edit the `hackathonbaobab2020/solver/__init__.py` to import your solver and edit the `solvers` dictionary by giving your solver a name.\n1. If the `requirements.txt` file is missing some package you need for your solver, add it to the list under `solvers`. Also edit the `setup.py` and add the dependency on `solvers` within the `extras_require` dictionary.\n\n**Additional considerations**:\n\n1. One way to see if the solver is correctly integrated is to test solving with it via the command line (see below).\n2. Everything that your solver needs should be inside the `hackathonbaobab2020/solver` directory (you can put more than one file). Do not edit the files outside the `solver` directories with code from your solver!\n\n## How to run tests\n\nThese tests are run also in github and test some small example problems with a `timelimit` of 120 s (check the `options` dictionary).\n```\npython tests/tests.py \n ```\n\n## Command line\n\nThe command line app has three main ways to use it.\n\n### To execute instances\n\nTo get all possible commands just run:\n\n    python hackathonbaobab2020/main.py solve-scenarios --help\n\nThe following assumes you have downloaded the zip `j30.mm.zip` of input instances, and you have stored it in the `data` directory. It solves instance `j301_1.mm` with the solver that is in `hackathonbaobab2020/solver/algorithm1` named `default` in `hackathonbaobab2020/solver/__init__.py`.\n\n    python hackathonbaobab2020/main.py solve-scenarios --directory=data --scenario=j30.mm.zip --solver=default --instance=j3010_1.mm --no-test\n\nYou can also solve multiple scenarios or multiple instances by passing the `--instances` and `--scenarios` arguments. Just be careful with the string format:\n\n    python hackathonbaobab2020/main.py solve-scenarios --directory=data --scenarios='[\"c15.mm.zip\", \"c21.mm.zip\", \"j10.mm.zip\", \"j30.mm.zip\", \"m1.mm.zip\", \"m5.mm.zip\", \"n0.mm.zip\", \"n1.mm.zip\", \"n3.mm.zip\", \"r1.mm.zip\", \"r4.mm.zip\", \"r5.mm.zip\"]' --solver=default\n\nWith the option argument, a json with the solving configuration is passed:\n\n    python hackathonbaobab2020/main.py solve-scenarios --directory=data --scenario=j30.mm.zip --solver=brute_EJ --instance=j3010_1.mm --no-test --options='{\"DEBUG\": 1, \"timeLimit\": 120}'\n\nFinally, if you pass the `zip` option you create a nice little zip at the end.\n\nThe output format is always the same:\n\n    solver_name/scenario_name/instance_name/(input.json, output.json, options.json)\n\nThe `options.json` file contains some information from the solver such as the time it took to solve, the status (Optimal, Feasible, Infeasible, etc.), the name of the solver, etc.\n\n### To get statistics from a solution\n\nYou first need to have a zip with the results you want to get statistics from. For this, the easiest is to pass the `zip` option to the `solve-scenarios` function above.\n\nThen you do something like:\n\n    python hackathonbaobab2020/main.py export-table --path=data/default.zip --path_out=data_default.csv\n\nThis generates a table in a csv with several columns: scenario, name (instance), objective (function value), solver, (solving) time, (number of) errors (in the solution).\n\nTo easily read the contents you can do:\n\n```python\n\nimport pandas as pd\ndf = pd.read_csv('data_default.csv')\nprint(df.head().to_markdown())\n\n```\n\nWhich should print something like this:\n\n|    | scenario   | name      |   objective | solver   |        time |   errors |\n|---:|:-----------|:----------|------------:|:---------|------------:|---------:|\n|  0 | n3.mm      | n311_1.mm |          44 | default  | 0.000282581 |        1 |\n|  1 | n0.mm      | n013_7.mm |          35 | default  | 0.000227326 |        0 |\n|  2 | r4.mm      | r452_6.mm |          46 | default  | 0.00025893  |        1 |\n|  3 | n3.mm      | n343_4.mm |          37 | default  | 0.000268723 |        1 |\n|  4 | n1.mm      | n121_4.mm |          55 | default  | 0.000254337 |        0 |\n\n## Benchmarking solvers\n\nIn `hackathonbaobab2020/execution/benchmark.py` there are functions to automate the comparison of solvers. Function `solve_all()` executes a set of random instances. They require previously downloading the corresponding zips from the dataset site. Function `compare` produce a summary table based on the results. Finally, `graphs` use the generated table to produce graphs of the results.\n\nExample of a resulting graph:\n\n![status graph](img/status.png)\n\n## Using python objects\n\nWe use the following helper objects:\n\n1. `Instance` to represent input data.\n2. `Solution` to represent a solution.\n3. `Experiment` to represent input data+solution.\n4. `Algorithm(Experiment)` to represent a resolution approach.\n\nAn example of the last one (4) is found in `hackathonbaobab2020/solver/algorithm1.py`. It schedules one job at a time while respecting the sequence. It passes all tests except the non-renewables, sometimes.\n\nThere are helper functions to read and write an instance and a solution to/from a file.\n\nA small example of how to use the existing code is available in `hackathonbaobab2020/execution/test_script.py`.\nBelow an example:\n\n```python\nfrom hackathonbaobab2020.core import Instance\nfrom hackathonbaobab2020.solver import get_solver\n\n# get mm file\npath = \"data/c15.mm/c154_3.mm\"\n# initialize an instance object\ninstance = Instance.from_mm(path)\n# get the default solver (in solver/algorithm1.py)\nsolver = get_solver('default')\n# initialize the solver with the instance\nexp = solver(instance=instance)\n# solve the instance using the solver\nexp.solve({})\n# The next functions do not depend on the solver and should not be overwritten:\n# print the possible errors on the solution obtained from the solver\nprint(exp.check_solution())\n# print the objective function of the solution\nprint(exp.get_objective())\n# produce a gantt chart of the job's schedule, with a color per mode.\nexp.graph()\n```\n\n\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/baobabsoluciones/hackathonbaobab2020/archive/main.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/baobabsoluciones/hackathonbaobab2020",
    "keywords": "math hackathon pulp ortools pyomo",
    "license": "",
    "maintainer": "Franco Peschiera",
    "maintainer_email": "pchtsp@gmail.com",
    "name": "hackathonbaobab2020",
    "package_url": "https://pypi.org/project/hackathonbaobab2020/",
    "platform": null,
    "project_url": "https://pypi.org/project/hackathonbaobab2020/",
    "project_urls": {
      "Download": "https://github.com/baobabsoluciones/hackathonbaobab2020/archive/main.zip",
      "Homepage": "https://github.com/baobabsoluciones/hackathonbaobab2020"
    },
    "release_url": "https://pypi.org/project/hackathonbaobab2020/1.0.0/",
    "requires_dist": [
      "click",
      "pandas",
      "orloge",
      "cornflow-client",
      "tabulate ; extra == 'benchmark'",
      "pygount ; extra == 'benchmark'",
      "plotly ; extra == 'benchmark'",
      "seaborn ; extra == 'benchmark'",
      "pyomo ; extra == 'solvers'",
      "ortools ; extra == 'solvers'"
    ],
    "requires_python": "",
    "summary": "Hackathon 2020 at baobab soluciones",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16611250,
  "releases": {
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69136dc1ebd8ea36807528c58fbfcecddbb61549f1bfd55f4b7cf906ee9959f8",
          "md5": "225cd133d8a534882ab293879ed7fd4f",
          "sha256": "4dc4e927f607069ddb0492ddb7fcc095a3782a940215c3fbb2e5b495963ebf11"
        },
        "downloads": -1,
        "filename": "hackathonbaobab2020-0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "225cd133d8a534882ab293879ed7fd4f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 43146,
        "upload_time": "2021-01-25T18:20:51",
        "upload_time_iso_8601": "2021-01-25T18:20:51.289713Z",
        "url": "https://files.pythonhosted.org/packages/69/13/6dc1ebd8ea36807528c58fbfcecddbb61549f1bfd55f4b7cf906ee9959f8/hackathonbaobab2020-0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "397db6f4e870aa92d0af48f52aa5ace0f4b0e964e36073f76ec0c03d1c878641",
          "md5": "d4a8dd3e3565238a8264089b70fdec92",
          "sha256": "0ca701c370c88659f463d69e86fd532b5add9adbf6217594800afa51e10daf57"
        },
        "downloads": -1,
        "filename": "hackathonbaobab2020-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "d4a8dd3e3565238a8264089b70fdec92",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34377,
        "upload_time": "2021-01-25T18:20:52",
        "upload_time_iso_8601": "2021-01-25T18:20:52.880231Z",
        "url": "https://files.pythonhosted.org/packages/39/7d/b6f4e870aa92d0af48f52aa5ace0f4b0e964e36073f76ec0c03d1c878641/hackathonbaobab2020-0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.91": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cd4f141c4fa1162386d57cddfeddaf701083cf34c0dc0ae14cadeef633c8779",
          "md5": "da9b96e5cc934c79f91d1913fe1e533f",
          "sha256": "e3236c46c18dfa8244656cf0f48492ec0a2b3434c73075b59375048a56d09901"
        },
        "downloads": -1,
        "filename": "hackathonbaobab2020-0.91-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "da9b96e5cc934c79f91d1913fe1e533f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 43157,
        "upload_time": "2021-01-25T18:28:00",
        "upload_time_iso_8601": "2021-01-25T18:28:00.377192Z",
        "url": "https://files.pythonhosted.org/packages/9c/d4/f141c4fa1162386d57cddfeddaf701083cf34c0dc0ae14cadeef633c8779/hackathonbaobab2020-0.91-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0136e5ea21cb6b3f7b8224cd89b7044ff7f4840806b31320524ae1f1f140fd6",
          "md5": "ac8fd736e3b70169b59e77437bc1df4b",
          "sha256": "75a9915642ad198073cac164bb4f7e2053d4b99d4a4ba2e8894ff3b5ad6cc386"
        },
        "downloads": -1,
        "filename": "hackathonbaobab2020-0.91.tar.gz",
        "has_sig": false,
        "md5_digest": "ac8fd736e3b70169b59e77437bc1df4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34237,
        "upload_time": "2021-01-25T18:28:01",
        "upload_time_iso_8601": "2021-01-25T18:28:01.419289Z",
        "url": "https://files.pythonhosted.org/packages/b0/13/6e5ea21cb6b3f7b8224cd89b7044ff7f4840806b31320524ae1f1f140fd6/hackathonbaobab2020-0.91.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.94": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed16a75880aec7f0524d1e5ee600e0bb56441d2c7e12c42bc0f2ff926e9312e7",
          "md5": "1b5d9b41cd6d8fbd20e986f229cb29e2",
          "sha256": "6fae83e82c31c16e9fed92fc57f9b5dbfefd605dd658e77fc4f3a8c8c7008246"
        },
        "downloads": -1,
        "filename": "hackathonbaobab2020-0.94-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1b5d9b41cd6d8fbd20e986f229cb29e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 43558,
        "upload_time": "2021-01-28T19:40:12",
        "upload_time_iso_8601": "2021-01-28T19:40:12.250829Z",
        "url": "https://files.pythonhosted.org/packages/ed/16/a75880aec7f0524d1e5ee600e0bb56441d2c7e12c42bc0f2ff926e9312e7/hackathonbaobab2020-0.94-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c2b264f464320942fffc325b5756b0ec54ca687118182ddc1dfeaba1e3d4456",
          "md5": "234b1f98f400eaf8ead90edaa3a6874d",
          "sha256": "4608a78f4aa83469eaf93cee811087becfcd50a2c87fb8b32e6ad516e9b2ad8f"
        },
        "downloads": -1,
        "filename": "hackathonbaobab2020-0.94.tar.gz",
        "has_sig": false,
        "md5_digest": "234b1f98f400eaf8ead90edaa3a6874d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34607,
        "upload_time": "2021-01-28T19:40:13",
        "upload_time_iso_8601": "2021-01-28T19:40:13.663999Z",
        "url": "https://files.pythonhosted.org/packages/6c/2b/264f464320942fffc325b5756b0ec54ca687118182ddc1dfeaba1e3d4456/hackathonbaobab2020-0.94.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.95": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8f107363df9185cfac21e10956b3f04c66bfa39e28816d7fbac21afb18a0ab1",
          "md5": "a5b494e9cfad538b0389e7abdefc8f28",
          "sha256": "10bf99a6713c8ea64970189f91e8eabc6f806a98742e292a7c9522118e4dc955"
        },
        "downloads": -1,
        "filename": "hackathonbaobab2020-0.95-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a5b494e9cfad538b0389e7abdefc8f28",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 50763,
        "upload_time": "2021-02-17T17:16:28",
        "upload_time_iso_8601": "2021-02-17T17:16:28.108027Z",
        "url": "https://files.pythonhosted.org/packages/a8/f1/07363df9185cfac21e10956b3f04c66bfa39e28816d7fbac21afb18a0ab1/hackathonbaobab2020-0.95-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "478b7fbf991bb049f034603a16493baecd2745c8f7eef9e21bdb7b3b1e5f4bd6",
          "md5": "656372637a7f96f94e0ba7ae55e552dc",
          "sha256": "5ea0e8814442d43ad32b4941fce0daa11246accdda74d2d84237e20fa1c0ef9f"
        },
        "downloads": -1,
        "filename": "hackathonbaobab2020-0.95.tar.gz",
        "has_sig": false,
        "md5_digest": "656372637a7f96f94e0ba7ae55e552dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39512,
        "upload_time": "2021-02-17T17:16:28",
        "upload_time_iso_8601": "2021-02-17T17:16:28.984656Z",
        "url": "https://files.pythonhosted.org/packages/47/8b/7fbf991bb049f034603a16493baecd2745c8f7eef9e21bdb7b3b1e5f4bd6/hackathonbaobab2020-0.95.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.96": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcf8ff1d464e54caa474c2af75211d8d24c28bf740a7615c821c45640c331ea9",
          "md5": "9ee8d597d127536d388c0f1ab4a2a70f",
          "sha256": "4366becb9c0d6db9e834e6c8e47f32d71cca3a9956af22e72507776b1b66258d"
        },
        "downloads": -1,
        "filename": "hackathonbaobab2020-0.96-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9ee8d597d127536d388c0f1ab4a2a70f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 52129,
        "upload_time": "2021-02-17T17:51:11",
        "upload_time_iso_8601": "2021-02-17T17:51:11.745071Z",
        "url": "https://files.pythonhosted.org/packages/dc/f8/ff1d464e54caa474c2af75211d8d24c28bf740a7615c821c45640c331ea9/hackathonbaobab2020-0.96-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8de2936b88fc8b1cd264e4f10bda70fc4911cca10419a8a1cc9824776ab27f5b",
          "md5": "4e187615a955a318e8e236a44b17d5d6",
          "sha256": "c76a22f57c12d0749f9485c65ed53c52a129b8846a899c71f6f910325c8ba8da"
        },
        "downloads": -1,
        "filename": "hackathonbaobab2020-0.96.tar.gz",
        "has_sig": false,
        "md5_digest": "4e187615a955a318e8e236a44b17d5d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40198,
        "upload_time": "2021-02-17T17:51:12",
        "upload_time_iso_8601": "2021-02-17T17:51:12.926219Z",
        "url": "https://files.pythonhosted.org/packages/8d/e2/936b88fc8b1cd264e4f10bda70fc4911cca10419a8a1cc9824776ab27f5b/hackathonbaobab2020-0.96.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.97": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ec1bbc9906fa269c182ae3d51c9dd759e6927512597c5a0825bd96223f00a46",
          "md5": "10227a1c8c2e2a332a3ffea167498329",
          "sha256": "f91ec8f63da17d1460ed3c624aa4864233c70e9914aebd898801222c723cf540"
        },
        "downloads": -1,
        "filename": "hackathonbaobab2020-0.97-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10227a1c8c2e2a332a3ffea167498329",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 60015,
        "upload_time": "2021-02-19T23:01:55",
        "upload_time_iso_8601": "2021-02-19T23:01:55.508276Z",
        "url": "https://files.pythonhosted.org/packages/8e/c1/bbc9906fa269c182ae3d51c9dd759e6927512597c5a0825bd96223f00a46/hackathonbaobab2020-0.97-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0a0f24d7ee2030dfc46e3dbc1075db5ed9696aac474ac764f69a6374ae83c23",
          "md5": "6d1e9ef664832f329d61c1e07083e269",
          "sha256": "7b3f149bc0084c85995578f4894e2fd074c536dca3a42c1195d9b13d2c943582"
        },
        "downloads": -1,
        "filename": "hackathonbaobab2020-0.97.tar.gz",
        "has_sig": false,
        "md5_digest": "6d1e9ef664832f329d61c1e07083e269",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47161,
        "upload_time": "2021-02-19T23:01:56",
        "upload_time_iso_8601": "2021-02-19T23:01:56.650788Z",
        "url": "https://files.pythonhosted.org/packages/a0/a0/f24d7ee2030dfc46e3dbc1075db5ed9696aac474ac764f69a6374ae83c23/hackathonbaobab2020-0.97.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.98.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2defe161e4010bbac54a782af8f8327c862f5ac3c959411633ab04e1359a1dd",
          "md5": "f968f16df034ead83da1728060f1c0aa",
          "sha256": "4ff25480ef14cf609d9be196186184f35b4839c9eef4ac73ba2aa50e147b15c8"
        },
        "downloads": -1,
        "filename": "hackathonbaobab2020-0.98.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f968f16df034ead83da1728060f1c0aa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 60135,
        "upload_time": "2021-03-15T18:39:37",
        "upload_time_iso_8601": "2021-03-15T18:39:37.364971Z",
        "url": "https://files.pythonhosted.org/packages/e2/de/fe161e4010bbac54a782af8f8327c862f5ac3c959411633ab04e1359a1dd/hackathonbaobab2020-0.98.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "730ebdcb547c026e0cadd18cbd290090945a2e467a7ddd495f31d68b7f2b4a24",
          "md5": "1ab3fcf235a2fa9594fadec7772020a1",
          "sha256": "99ba5b2d910d61c66971b6ce1ca6b97dd5f1e72c1cdb991fdaae43508e3f1acc"
        },
        "downloads": -1,
        "filename": "hackathonbaobab2020-0.98.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1ab3fcf235a2fa9594fadec7772020a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47244,
        "upload_time": "2021-03-15T18:39:38",
        "upload_time_iso_8601": "2021-03-15T18:39:38.300590Z",
        "url": "https://files.pythonhosted.org/packages/73/0e/bdcb547c026e0cadd18cbd290090945a2e467a7ddd495f31d68b7f2b4a24/hackathonbaobab2020-0.98.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.98.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78304a9c2bf1166851a15816d33c17a5c33da84ad9e7d7cd7bb7e678296c0189",
          "md5": "233d95e8237981bb052e01faf9b2d3b9",
          "sha256": "10c4b915ec730d19e7b39151357f92574d3f6eb39187bd8e40c9182ee59f0c19"
        },
        "downloads": -1,
        "filename": "hackathonbaobab2020-0.98.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "233d95e8237981bb052e01faf9b2d3b9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 61943,
        "upload_time": "2021-10-21T18:36:43",
        "upload_time_iso_8601": "2021-10-21T18:36:43.689229Z",
        "url": "https://files.pythonhosted.org/packages/78/30/4a9c2bf1166851a15816d33c17a5c33da84ad9e7d7cd7bb7e678296c0189/hackathonbaobab2020-0.98.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e9a288d4f0b7fd680bd639d28aca697af5d7164dab023f55f7ad90b5ec18808",
          "md5": "b907187f5f00483c90d5e8b9cc1db69e",
          "sha256": "96df296578429f7393bfeb2836f185485891a75cb7007a7fb95c4b1dfb8f1a90"
        },
        "downloads": -1,
        "filename": "hackathonbaobab2020-0.98.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b907187f5f00483c90d5e8b9cc1db69e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 48678,
        "upload_time": "2021-10-21T18:36:44",
        "upload_time_iso_8601": "2021-10-21T18:36:44.928889Z",
        "url": "https://files.pythonhosted.org/packages/7e/9a/288d4f0b7fd680bd639d28aca697af5d7164dab023f55f7ad90b5ec18808/hackathonbaobab2020-0.98.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fab16ae74c50aa873fe135411e473b8b4fa16b9b6318482b12f6a18f6383f290",
          "md5": "ef78cfb5fa938e6f69beea652782d4df",
          "sha256": "525e6ac0ac9cefe6a46a1b8384b0310ec0ecf0ab53b5c29b68cbd9296d970e76"
        },
        "downloads": -1,
        "filename": "hackathonbaobab2020-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef78cfb5fa938e6f69beea652782d4df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 63247,
        "upload_time": "2023-01-29T19:14:00",
        "upload_time_iso_8601": "2023-01-29T19:14:00.630206Z",
        "url": "https://files.pythonhosted.org/packages/fa/b1/6ae74c50aa873fe135411e473b8b4fa16b9b6318482b12f6a18f6383f290/hackathonbaobab2020-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbe36187959c1f785abb95ba4dfc2348e9edc8550c0b70bd89d3aaab19e29727",
          "md5": "9933acf3c3a56dd3701a6333ccc0c4a0",
          "sha256": "fb15ec54bcfb5d2b096bca7127d2ae4e670c29a0abce1c9480ba083b1cbd6569"
        },
        "downloads": -1,
        "filename": "hackathonbaobab2020-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9933acf3c3a56dd3701a6333ccc0c4a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 49762,
        "upload_time": "2023-01-29T19:14:02",
        "upload_time_iso_8601": "2023-01-29T19:14:02.013947Z",
        "url": "https://files.pythonhosted.org/packages/db/e3/6187959c1f785abb95ba4dfc2348e9edc8550c0b70bd89d3aaab19e29727/hackathonbaobab2020-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fab16ae74c50aa873fe135411e473b8b4fa16b9b6318482b12f6a18f6383f290",
        "md5": "ef78cfb5fa938e6f69beea652782d4df",
        "sha256": "525e6ac0ac9cefe6a46a1b8384b0310ec0ecf0ab53b5c29b68cbd9296d970e76"
      },
      "downloads": -1,
      "filename": "hackathonbaobab2020-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ef78cfb5fa938e6f69beea652782d4df",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 63247,
      "upload_time": "2023-01-29T19:14:00",
      "upload_time_iso_8601": "2023-01-29T19:14:00.630206Z",
      "url": "https://files.pythonhosted.org/packages/fa/b1/6ae74c50aa873fe135411e473b8b4fa16b9b6318482b12f6a18f6383f290/hackathonbaobab2020-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dbe36187959c1f785abb95ba4dfc2348e9edc8550c0b70bd89d3aaab19e29727",
        "md5": "9933acf3c3a56dd3701a6333ccc0c4a0",
        "sha256": "fb15ec54bcfb5d2b096bca7127d2ae4e670c29a0abce1c9480ba083b1cbd6569"
      },
      "downloads": -1,
      "filename": "hackathonbaobab2020-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9933acf3c3a56dd3701a6333ccc0c4a0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 49762,
      "upload_time": "2023-01-29T19:14:02",
      "upload_time_iso_8601": "2023-01-29T19:14:02.013947Z",
      "url": "https://files.pythonhosted.org/packages/db/e3/6187959c1f785abb95ba4dfc2348e9edc8550c0b70bd89d3aaab19e29727/hackathonbaobab2020-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}