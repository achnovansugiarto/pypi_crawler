{
  "info": {
    "author": "Simone Bendazzoli",
    "author_email": "simben@kth.se",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Deploy Custom Environments in MAIA\n\n[![Build](https://github.com/MAIA-KTH/Hive_Gate/actions/workflows/build.yaml/badge.svg)](https://github.com/MAIA-KTH/Hive_Gate/actions/workflows/build.yaml)\n\nTo create custom environments and deploy applications in MAIA (including pods, services and ingresses) \na Helm chart is available: [Hive_Gate](https://maia-kth.github.io/Hive_Gate/).\n\nWith the **Hive_Gate** chart it is possible to deploy any *Docker Image* as a Pod, expose the required ports as services, mount persistent volumes on the specified locations and optionally create Ingress resources to expose the application to the external traffic using the HTTPS protocol.\n\nTo add the chart to Helm, run:\n```\nhelm repo add hive-gate https://maia-kth.github.io/Hive_Gate/\nhelm repo update\n```\n\n## Custom Helm values\n\nA number of custom parameters can be specified for the Helm chart, including the Docker image to deploy, the port to expose, etc.\n\nThe custom configuration is set in a JSON configuration file, following the conventions described below.\n\n### General Configuration\n\n#### Namespace [Required]\nSpecify the Cluster Namespace where to deploy the resources\n```json\n{\n  \"namespace\": \"NAMESPACE_NAME\"\n}\n```\n#### Chart Name [Required]\nSpecify the Helm Chart Release name\n```json\n{\n  \"chart_name\": \"Helm_Chart_name\"\n}\n```\n#### Docker image [Required]\nTo specify the Docker image to deploy\n```json\n{\n  \"docker_image\": \"DOCKER_IMAGE\"\n}\n```\nIn case of a custom Docker image, provide the docker build context ( the folder path containing the *Dockerfile* and all the required files), and the corresponding custom\n image name. The built Docker image is pushed to the private docker registry.\n```json\n{\n  \"docker_image\": {\n    \"context_folder\": \"/PATH/TO/MY/DOCKER_CONTEXT\",\n    \"image_name\": \"my-custom-image\"\n  }\n}\n```\n#### Requested Resources [Required]\nTo request resources (RAM,CPU and optionally GPU).\n```json\n{\n  \"memory_size\" : \"REQUESTED_RAM_SIZE\",\n  \"cpu\" : \"REQUESTED_CPUs\"\n}\n```\n\nOptionally, to request GPU usage:\n```json\n{\n  \"gpu_request\" : \"NUMBER_OF_GPUs\"\n}\n```\n#### Services\nTo specify which ports (and corresponding services) can be reached from outside the pod.\n```json\n{\n  \"ports\" : {\n    \"SERVICE_NAME_1\": [\"PORT_NUMBER\"],\n    \"SERVICE_NAME_2\": [\"PORT_NUMBER\"]\n  }\n}\n\n```\nThe default *Service Type* is **ClusterIP**. To expose a service as a type **NodePort**:\n```json\n{\n  \"service_type\": \"NodePort\",\n  \"ports\" : {\n    \"SERVICE_NAME_1\": [\"PORT_NUMBER\", \"NODE_PORT_NUMBER\"],\n    \"SERVICE_NAME_2\": [\"PORT_NUMBER\", \"NODE_PORT_NUMBER\"]\n  }\n}\n\n```\n#### Persistent Volumes\n2 different types of persistent volumes are available: **hostPath** (local folder) and **nfs** (shared nfs folder).\nFor each of these types, it is possible to request a Persistent Volume via a Persistent Volume Claim, or to directly reference the folder in the host/nfs server to mount.\n\nDirect access:\n```json\n{\n  \"host_volume_mounts\": \n  {\n    \"host-folder_1\": [\"/host/folder/path_1\", \"/mount/path_1\",\"readOnly\"],\n    \"host-folder_2\": [\"/host/folder/path_2\", \"/mount/path_2\"]\n  },\n  \"nfs_server\": \"NFS_SERVER_IP\",\n  \"nfs_volume_mounts\": \n  {\n    \"nfs-folder_1\": [\"/nfs/folder/path_1\", \"/mount/path_1\",\"readOnly\"],\n    \"nfs-folder_2\": [\"/nfs/folder/path_2\", \"/mount/path_2\"]\n  }\n}\n```\nThe *\"readOnly\"* options can be added to specify the mounted folder as read-only.\n\nRequest PVC:\n\n```json\n{\n  \"persistent_volume\" : \n  [\n    {\n      \"mountPath\": \"/mount/path_1\",\n      \"size\": \"VOLUME_SIZE\",\n      \"access_mode\": \"ACCESS_TYPE\",\n      \"pvc_type\": \"STORAGE_CLASS\"\n    },\n    {\n      \"mountPath\": \"/mount/path_2\",\n      \"size\": \"VOLUME_SIZE\",\n      \"access_mode\": \"ACCESS_TYPE\",\n      \"pvc_type\": \"STORAGE_CLASS\"\n    }\n  ]\n}\n```\n**\"STORAGE_CLASS\"** can be any of the storage classes available on the cluster: \n```\nkubectl get sc\n```\n#### Mounted files\nSingle files can be mounted inside the Pod. First, a ConfigMap including the file is created, and then it is mounted into the Pod.\n\n```json\n{\n  \"mount_files\":\n  {\n    \"file_name\": [\"/local/file/path\",\"/file/mount/path\"]\n  }\n}\n```\n\n#### Node Selection\nTo optionally select which node in the cluster to use for deploying the application.\n```json\n{\n  \"node_selector\": \"NODE_NAME\"\n}\n```\n\n#### GPU Selection\nTo optionally select which available GPUs in the cluster to request. `type` and `vram` attribute can be specified (only one of them is needed, both can be included).\nExample: `type: \"RTX-2070-Super\"`, `vram: \"8G\"`\n```json\n{\n  \"gpu_selector\": {\n    \"type\": \"GPU_TYPE\",\n    \"vram\": \"VRAM_SIZE\"\n  }\n}\n```\n\n#### Ingress\nUsed to create an Ingress resources to access the application at the specified port by using an HTTPS address.\nIMPORTANT! The specified DNS needs to be active and connected to the cluster DNS (**\".k8s-maia.com\"**)\n\n```json\n{\n  \"ingress\": \n  {\n    \"host\": \"SUBDOMAIN.k8s-maia.com\",\n    \"port\": \"SERVICE_PORT\"\n  }\n}\n```\n\n\n#### Environment variables\nTo add environment variables, used during the creation and deployment of the pod (i.e., environment variables to specify for the Docker Image).\n```json\n{\n  \"env_variables\": \n  {\n    \"KEY_1\": \"VAL_1\",\n    \"KEY_2\": \"VAL_2\"\n  }\n}\n```\n\n### Hive Docker Configuration\n\n#### User info\nWhen deploying Hive-based applications, it is possible to create single-multiple user account in the environment.\nFor each of the users, *username*, *password* *email*, and, optionally, an *ssh public key* are required.\nThis information is stored inside Secrets:\n```\nUSER_1_SECRET:\n    user: USER_1\n    password: pw\n    email: user@email.com\n    ssh_publickey [Optional]: \"ssh-rsa ...\" \n```\nTo provide the user information to the Pod:\n```json\n{\n  \"user_secret\" : \n  [ \n    \"user-1-secret\",\n    \"user-2-secret\"\n  ],\n  \"user_secret_params\" : [\"user\",\"password\",\"email\", \"ssh_publickey\"]\n}\n```\n\n## Configuration File Example\n\n```json\n{\n  \"namespace\": \"machine-learning\",\n  \"chart_name\": \"jupyterlab-1-v1\",\n  \"docker_image\": \"jupyter/scipy-notebook\",\n  \"tag\" : \"latest\",\n  \"memory_size\" : \"4Gi\",\n  \"cpu\" : \"5000m\",\n  \"ports\" : {\n    \"jupyter\": [8888]\n  },\n  \"persistent_volume\" :\n  [\n    {\n      \"mountPath\": \"/home/jovyan\",\n      \"size\": \"100Gi\",\n      \"access_mode\": \"ReadWriteOnce\",\n      \"pvc_type\": \"local-hostpath\"\n    }\n  ]\n}\n```\n\n## Deploy Charts\n\nTo deploy an Helm Hive Chart, first create a config file according to the specific requirements (as described [above](#Custom Helm values)).\nThen install the **Hive_Gate** package running:\n```\npip install hive-gate\n```\nOr download the executable file:\n\n[Hive_Gate_deploy_helm_chart (Windows .exe)](https://github.com/MAIA-KTH/Hive_Gate/releases/download/v1.0/Hive_Gate_deploy_helm_chart.exe)\n\n[Hive_Gate_deploy_helm_chart (Ubuntu)](https://gits-15.sys.kth.se/MAIA/Hive_Gate/releases/download/v1.1/Hive_Gate_deploy_helm_chart)\n\nFinally:\n```\nHive_Gate_deploy_helm_chart --config-file /PATH/TO/CONFIG/FILE\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gits-15.sys.kth.se/MAIA/Hive_Gate.git",
    "keywords": "helm,kubernetes,maia,resource deployment",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hive-gate",
    "package_url": "https://pypi.org/project/hive-gate/",
    "platform": null,
    "project_url": "https://pypi.org/project/hive-gate/",
    "project_urls": {
      "Documentation": "https://maia-kth.github.io/Hive_Gate/",
      "Homepage": "https://gits-15.sys.kth.se/MAIA/Hive_Gate.git",
      "Source": "https://gits-15.sys.kth.se/MAIA/Hive_Gate",
      "Tracker": "https://gits-15.sys.kth.se/MAIA/Hive_Gate/issues"
    },
    "release_url": "https://pypi.org/project/hive-gate/1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python interface to MAIA. It can be used as interface to any Kubernetes-based platform.",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17129575,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6380f05120377183ea58e459f3fab135c704ee86340291d470bf08c98f77bb2f",
          "md5": "d6d6e8603cd42e941ba07f592813068c",
          "sha256": "677103ad89557ffbdbb90801c72963e57eb8dab8ec9c52ea2151f4fbe0f7a4f5"
        },
        "downloads": -1,
        "filename": "hive_gate-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d6d6e8603cd42e941ba07f592813068c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16049,
        "upload_time": "2022-11-30T07:49:43",
        "upload_time_iso_8601": "2022-11-30T07:49:43.567721Z",
        "url": "https://files.pythonhosted.org/packages/63/80/f05120377183ea58e459f3fab135c704ee86340291d470bf08c98f77bb2f/hive_gate-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9234c0719aa293778d5c87bfb01a1487f1fa8f17f5d905fb2a37338bef0f7739",
          "md5": "832990c5a523ccb1a0073f5237a49639",
          "sha256": "31bae08b2296204f861fbdf32ddd4f21cdf79d6a65500cdaef49a97eafc7403a"
        },
        "downloads": -1,
        "filename": "hive-gate-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "832990c5a523ccb1a0073f5237a49639",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16497,
        "upload_time": "2022-11-30T07:49:45",
        "upload_time_iso_8601": "2022-11-30T07:49:45.775122Z",
        "url": "https://files.pythonhosted.org/packages/92/34/c0719aa293778d5c87bfb01a1487f1fa8f17f5d905fb2a37338bef0f7739/hive-gate-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2653b5b15a675925784ad66658d993ca073a365c3616d76b3207bdfb6427d74f",
          "md5": "302e458a634e673780ebbb4e24f4e3de",
          "sha256": "69e9c6b9b1a3f38b3bcc12111385767072d86ad4987d3da9e159f10dd556428c"
        },
        "downloads": -1,
        "filename": "hive-gate-1.1.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "302e458a634e673780ebbb4e24f4e3de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4159,
        "upload_time": "2023-01-02T10:22:47",
        "upload_time_iso_8601": "2023-01-02T10:22:47.167194Z",
        "url": "https://files.pythonhosted.org/packages/26/53/b5b15a675925784ad66658d993ca073a365c3616d76b3207bdfb6427d74f/hive-gate-1.1.linux-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f063f8225c06cffabe14686a3326b44cefcedd464dccf2dbfbc609348d874f4",
          "md5": "fdcd80065bc485d3930a4314dfb3f108",
          "sha256": "fe7c99d3cb21ddc99a0619dfd1f82b6f507fcbc74fcc7c0c0a34a6154c3ecbb1"
        },
        "downloads": -1,
        "filename": "hive_gate-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fdcd80065bc485d3930a4314dfb3f108",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16303,
        "upload_time": "2023-01-02T10:22:45",
        "upload_time_iso_8601": "2023-01-02T10:22:45.281305Z",
        "url": "https://files.pythonhosted.org/packages/1f/06/3f8225c06cffabe14686a3326b44cefcedd464dccf2dbfbc609348d874f4/hive_gate-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c349da97c1a6da1ff0de4527d264598067a0402467f8a0036b15beebbb53aac",
          "md5": "64021dd53fd0936d552aa08756767b15",
          "sha256": "de909629df4262f7e1feb8657a173306b1b9f2b38068ce6e46972c2b557a45e7"
        },
        "downloads": -1,
        "filename": "hive_gate-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "64021dd53fd0936d552aa08756767b15",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16316,
        "upload_time": "2023-03-02T15:53:46",
        "upload_time_iso_8601": "2023-03-02T15:53:46.904216Z",
        "url": "https://files.pythonhosted.org/packages/7c/34/9da97c1a6da1ff0de4527d264598067a0402467f8a0036b15beebbb53aac/hive_gate-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbbf169a36754f3bcc4734fcf1b89379d959e8271198d676c781ece5d1dbfabf",
          "md5": "567e0b07b360ed93a50983b9efaa3c0c",
          "sha256": "b394ba338822c8d53545aa83e82b1f4f4cc8c535608e1c3c41f162cd833eb9ff"
        },
        "downloads": -1,
        "filename": "hive-gate-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "567e0b07b360ed93a50983b9efaa3c0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16311,
        "upload_time": "2023-03-02T15:53:49",
        "upload_time_iso_8601": "2023-03-02T15:53:49.094421Z",
        "url": "https://files.pythonhosted.org/packages/cb/bf/169a36754f3bcc4734fcf1b89379d959e8271198d676c781ece5d1dbfabf/hive-gate-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7c349da97c1a6da1ff0de4527d264598067a0402467f8a0036b15beebbb53aac",
        "md5": "64021dd53fd0936d552aa08756767b15",
        "sha256": "de909629df4262f7e1feb8657a173306b1b9f2b38068ce6e46972c2b557a45e7"
      },
      "downloads": -1,
      "filename": "hive_gate-1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "64021dd53fd0936d552aa08756767b15",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16316,
      "upload_time": "2023-03-02T15:53:46",
      "upload_time_iso_8601": "2023-03-02T15:53:46.904216Z",
      "url": "https://files.pythonhosted.org/packages/7c/34/9da97c1a6da1ff0de4527d264598067a0402467f8a0036b15beebbb53aac/hive_gate-1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cbbf169a36754f3bcc4734fcf1b89379d959e8271198d676c781ece5d1dbfabf",
        "md5": "567e0b07b360ed93a50983b9efaa3c0c",
        "sha256": "b394ba338822c8d53545aa83e82b1f4f4cc8c535608e1c3c41f162cd833eb9ff"
      },
      "downloads": -1,
      "filename": "hive-gate-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "567e0b07b360ed93a50983b9efaa3c0c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16311,
      "upload_time": "2023-03-02T15:53:49",
      "upload_time_iso_8601": "2023-03-02T15:53:49.094421Z",
      "url": "https://files.pythonhosted.org/packages/cb/bf/169a36754f3bcc4734fcf1b89379d959e8271198d676c781ece5d1dbfabf/hive-gate-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}