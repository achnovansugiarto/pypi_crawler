{
  "info": {
    "author": "Grigorii Koksharov",
    "author_email": "grigorii.koksharov@pthystech.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.0",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Utilities"
    ],
    "description": "# yaml-injection\n\n## usage\n### in python\n```python\nimport yaml\nfrom yaml_injection import InjectionLoader\n\nwith open(file_path) as in_:\n    data = yaml.load(in_, InjectionLoader)\n\n```\n\n### in yaml\n\nThe key word is `!inject`.\n\nThere are two types of syntax: `simple` and `extended`.\n\n#### simple syntax\n\n```yaml\n!inject file: path to file in local file system\n```\n \n```yaml\n!inject ref: section subsection \n```\n\n \n`ref` is a keys leading to section separated by space.\n\n\\* Yep it will works only if keys does not contain spaces.\n\n```yaml\n!inject url: public url with yaml file \n```\n#### extended syntax \n> **WARNING**: A SPACE SYMBOL AFTER `!inject` AND BEFORE `:` IS MANDATORY!!\n\n```yaml\n!inject : \n    file: path to file in local file system\n    url: public url with yaml file \n    ref: section subsection \n```\n\n\nBoth simple and extended syntax accept lists in `file`, `url` and `ref` sections.\n\n\n\n\n## examples\nExamples are gotten from tests. \n\n### example 1\n`sub.yaml` \n```yaml\nsub_only: sub_only\nboth_files: both_files_value_from_sub\nnon_map_object:\n  - sub\nnon_map_only_sub:\n  - sub_only\nboth_files_map:\n  sub_only: sub_only\n  both_files: both_files_value_from_sub\ndeep:\n  deep:\n    deep:\n      map:\n        sub_only: sub_only\n        both_files: both_files_value_from_sub\n\n```\n\n`main.yml`\n\n```yaml\n!inject file: sub.yml\n\nmain_only: main_only\nboth_files: both_files_value_from_main\nboth_files_map:\n  both_files: both_files_value_from_main\n  main_only: main_only_value_from_main\ndeep:\n  deep:\n    deep:\n      map:\n        main_only: main_only\n        both_files: both_files_value_from_main\nnon_map_object:\n  - main\nnon_map_only_main:\n  - main_only\n\n\n```\n\nwill be loaded as:\n```yaml\nboth_files: both_files_value_from_main\nboth_files_map:\n  both_files: both_files_value_from_main\n  main_only: main_only_value_from_main\n  sub_only: sub_only\nmain_only: main_only\nsub_only: sub_only\ndeep:\n  deep:\n    deep:\n      map:\n        main_only: main_only\n        both_files: both_files_value_from_main\n        sub_only: sub_only\nnon_map_object:\n  - main\nnon_map_only_main:\n  - main_only\nnon_map_only_sub:\n  - sub_only\n```\n\n\n### example 2\n\n```yaml\nsections:\n  sub:\n    common:\n      variables:\n        job_name: sub_name\n        script: sub\n\n    job_1:\n      only:\n        - refs\n      script:\n        - make build\n        - make start\n\n    job_2:\n      except:\n        - tags\n      script:\n        - make build\n        - make start\n\nmain:\n  !inject :\n    ref: sections sub\n\n  common:\n    variables:\n      script: main\n      runner: main_runner\n\n  job_1:\n    only:\n      - release\n\n  job_2:\n    before_script:\n      - make prepare\n```\n\nwill be loaded as:\n```yaml\nmain:\n  common:\n    variables:\n      job_name: sub_name\n      runner: main_runner\n      script: main\n  job_1:\n    only:\n    - release\n    script:\n    - make build\n    - make start\n  job_2:\n    before_script:\n    - make prepare\n    except:\n    - tags\n    script:\n    - make build\n    - make start\nsections:\n  sub:\n    common:\n      variables:\n        job_name: sub_name\n        script: sub\n    job_1:\n      only:\n      - refs\n      script:\n      - make build\n      - make start\n    job_2:\n      except:\n      - tags\n      script:\n      - make build\n      - make start\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/oztqa/yaml-injection",
    "keywords": "yaml pyyaml include extend inject",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yaml-injection",
    "package_url": "https://pypi.org/project/yaml-injection/",
    "platform": "",
    "project_url": "https://pypi.org/project/yaml-injection/",
    "project_urls": {
      "Homepage": "https://github.com/oztqa/yaml-injection"
    },
    "release_url": "https://pypi.org/project/yaml-injection/0.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "pyyaml loader. With this loader you can inject (include) other yaml files either from local file system or from public web or from already constructed sections of the yaml.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7442780,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4620d3ab87267f6245bb83cc034bde83f1ddfc394bd48c4da3004a033cb36c8",
          "md5": "d1d8e0bfa3ac48f480108e0aec3bdc11",
          "sha256": "594ae0a7c29de665feb9612ea3f79fa3ed2b50d162d59461ebfb32e992a72e35"
        },
        "downloads": -1,
        "filename": "yaml-injection-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d1d8e0bfa3ac48f480108e0aec3bdc11",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3072,
        "upload_time": "2019-11-13T15:16:23",
        "upload_time_iso_8601": "2019-11-13T15:16:23.501194Z",
        "url": "https://files.pythonhosted.org/packages/e4/62/0d3ab87267f6245bb83cc034bde83f1ddfc394bd48c4da3004a033cb36c8/yaml-injection-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a331a7ef8fc881e931eab2f5b1b3008a5fe216232b1b92dfd374fb695d5f7a9",
          "md5": "852130dc7709bfff28311b92d5a77f41",
          "sha256": "e1cf9ab5b4f84cd5b29dbaf39f82fee3dd092e71062b23a9d38e04080b22e24e"
        },
        "downloads": -1,
        "filename": "yaml-injection-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "852130dc7709bfff28311b92d5a77f41",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3328,
        "upload_time": "2019-11-18T10:55:13",
        "upload_time_iso_8601": "2019-11-18T10:55:13.940757Z",
        "url": "https://files.pythonhosted.org/packages/2a/33/1a7ef8fc881e931eab2f5b1b3008a5fe216232b1b92dfd374fb695d5f7a9/yaml-injection-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64d1a46df12241626d9b7e5f40d0bf46ef691c6dcfdef6ae293cc21818eafa01",
          "md5": "266b315f66455b79eda572386bec4008",
          "sha256": "d12974c288c36b4850676e68011da4e7d7b262fe021580252318434b2cd6e0b1"
        },
        "downloads": -1,
        "filename": "yaml-injection-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "266b315f66455b79eda572386bec4008",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3924,
        "upload_time": "2019-11-18T11:15:50",
        "upload_time_iso_8601": "2019-11-18T11:15:50.850504Z",
        "url": "https://files.pythonhosted.org/packages/64/d1/a46df12241626d9b7e5f40d0bf46ef691c6dcfdef6ae293cc21818eafa01/yaml-injection-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8777c7f8afa86658733e302c48b856026fa1b628fe03290436b6e006d20418a4",
          "md5": "214009e15731e1b4a32e229e0b524637",
          "sha256": "6afef9b80e121348e3a1585be9e1c95f5db9376eb2bb5952210ba2cb8fd01f89"
        },
        "downloads": -1,
        "filename": "yaml-injection-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "214009e15731e1b4a32e229e0b524637",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3990,
        "upload_time": "2020-02-13T17:03:03",
        "upload_time_iso_8601": "2020-02-13T17:03:03.787721Z",
        "url": "https://files.pythonhosted.org/packages/87/77/c7f8afa86658733e302c48b856026fa1b628fe03290436b6e006d20418a4/yaml-injection-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8777c7f8afa86658733e302c48b856026fa1b628fe03290436b6e006d20418a4",
        "md5": "214009e15731e1b4a32e229e0b524637",
        "sha256": "6afef9b80e121348e3a1585be9e1c95f5db9376eb2bb5952210ba2cb8fd01f89"
      },
      "downloads": -1,
      "filename": "yaml-injection-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "214009e15731e1b4a32e229e0b524637",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3990,
      "upload_time": "2020-02-13T17:03:03",
      "upload_time_iso_8601": "2020-02-13T17:03:03.787721Z",
      "url": "https://files.pythonhosted.org/packages/87/77/c7f8afa86658733e302c48b856026fa1b628fe03290436b6e006d20418a4/yaml-injection-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}