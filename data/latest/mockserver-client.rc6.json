{
  "info": {
    "author": "INAP",
    "author_email": "opensource@internap.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Testing"
    ],
    "description": "# MockServer Python Client\n\n[![Build Status](https://travis-ci.org/internap/python-mockserver-client.svg?branch=master)](https://travis-ci.org/internap/python-mockserver-client)\n\nPython client to James D. Bloom's awesome MockServer : http://www.mock-server.com/\n\n## Philosophy\n\nTests should be readable and Mock Server is already very complete and customizable.  This library tries to keep it\nsimple and straight-forward using python's kwargs to avoid big declarations.\n\nWe think a mock should be able to fit into one 120 char line of code should the expectation be simple enough :) \n\n```\nclient.stub(request(method=\"GET\", path=\"/auth\"), response(code=401, body=\"unauthorized\"))\n```\n\n## Installation\n\nWARNING: **THIS IS A VERY EARLY VERSION THE API IS MOST LIKELY TO CHANGE**\n\nFrom source:\n\n```\ngit clone https://github.com/internap/python-mockserver-client.git\ncd python-mockserver-client\npython setup.py install\n```\n\nFrom [PyPi](https://pypi.python.org/pypi/kubernetes/) directly:\n\n```\npip install mockserver-client\n```\n\n## Prerequisite\n\nYou need a running MockServer running, see http://www.mock-server.com/mock_server/getting_started.html#start_mockserver\n\nThis project's tests uses the docker image : https://github.com/internap/python-mockserver-friendly-client/blob/master/docker-compose.yml\n\n## Usage\n\n**The whole Mock Server API is not all covered**. We just implemented what we needed, if you need something not yet\nimplemented you can open an issue and/or contribute\n\n### *Stubbing*\n\n(For when you are testing what your code *DOES* with another component's data)\n\n```\nfrom mockserver import MockServerClient, request, response\n\nclient = MockServerClient(\"http://localhost:1080\")\n\nclient.stub(\n    request(method=\"GET\", path=\"/that/thing\", querystring={\"is\": \"good\"}, headers={\"so\": \"good\"}),\n    response(code=418, body=\"i'm a teapot\", headers={\"hi\": \"haa\"})\n)\n```\n\n* You can also add a `times(N)` as a third parameter to limit how many times this stub can be called, default is unlimited\n* All parameters are always optional.  When not specified, the match everything.\n\n### *Expecting*\n\n(For when calling another component *IS* what you are testing)\n\nUsing the `expect` will remember the request and verify it when `verify` is called.\n\n```\nimport json\nfrom mockserver import MockServerClient, request, response, times\n\nclient = MockServerClient(\"http://localhost:1080\")\n\nclient.expect(\n    request(method=\"POST\", path=\"/postme\", body=json.dumps({\"some\": \"json\"})),\n    response(code=204, body=json.dumps({\"return\": \"something\"}), headers={\"Content-Type\": \"application/json\"}),\n    times(1)\n)\n\nclient.verify()  # AssertionError !\n```\n\n* The `times(N)` parameter is mandatory for expect\n\n### *Resetting*\n\n(Because tests shouldn't impact each other)\n\n```\nfrom mockserver import MockServerClient\n\nclient = MockServerClient(\"http://localhost:1080\")\n\nclient.reset()\n```\n\n## Customizing and shortcuts\n\nThis client consumes Mock Server's REST API : https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi\n\nHere's a few shortcuts already ready, there may be more to come\n\n### Mocking a form post\n\n```\nfrom mockserver import MockServerClient, request, response, form\n\nclient = MockServerClient(\"http://localhost:1080\")\n\nclient.stub(\n    request(method=\"POST\", body=form({\"user\": \"foo\", \"pass\": \"bar\"})),\n    response(code=201)\n)\n```\n\nThis currently takes a 1 level `dict`. For array mocking, use `{\"key[index]\": \"value\"}` \n\n### Returning JSON\n\n```\nfrom mockserver import MockServerClient, request, json_response\n\nclient = MockServerClient(\"http://localhost:1080\")\n\nclient.stub(\n    request(path=\"/stuff\"),\n    json_response(code=200, body={\"full\": \"json\", \"structure\": [\"with\", \"stuff\", 1]})\n)\n```\n\nThis automatically dumps the body in json and appends the `application/json` Content-Type to the headers.\n\n### Expecting JSON request\n\n```\nfrom mockserver import MockServerClient, request, json_equals\n\nclient = MockServerClient(\"http://localhost:1080\")\nclient.expect(\n    request(body=json_equals({\"key\": \"value\"})),\n    response(),\n    times(1)\n)\n```\n\nThis only matches requests with the provided json body. Json conversation is done automatically.\nIf you only want to match parts of a given JSON you can provide only the matching parts using `json_contains`:\n\n```\nfrom mockserver import MockServerClient, request, json_contains\n\nclient = MockServerClient(\"http://localhost:1080\")\nclient.expect(\n    request(body=json_contains({\"key\": \"value\"})),\n    response(),\n    times(1)\n)\n```\nI.e. this will match `{\"key\": \"value\"}` or `{\"key\": \"value\", \"another\": \"key\"}`\n\n\n## More documentation\n\nThere is currently no official documentation, however you can consider the tests as a type of documentation, they are\npretty explicit and simple to follow and help to clarify the purpose of each feature.\n\n## Good practices\n\nHaving your test setup/teardown like this is probably a good idea.\n\n```\nclass ServerMockingTestBase(...):\n    def setUp(self):\n        super(ServerMockingTestBase, self).setUp()\n        \n        self.client = MockServerClient(MOCK_SERVER_URL)\n        self.client.reset()\n\n    def tearDown(self):\n        super(ServerMockingTestBase, self).tearDown()\n        \n        self.client.verify()\n```\n\n# Troubleshooting\n\nChecking MockServer's logs is the first place to go.  If you don't see any logs, try another LOG_LEVEL such as INFO.\n\nIf the problem is in the code, please open an issue :)\n\n# Contributing\n\nThe form may not be final, we would love to hear what you think of the client!\n\nFeel free to raise issues and send some pull request, we'll be happy to look at them!\n\nMake sure all new code is tested, current tests run against a MockServer container.\n\n## Running tests\n\nYou can easily run the tests with https://pypi.python.org/pypi/tox\n\n```\ntox -e py34\n```\n\nYou can also call the `test-runner.sh` directly, you will need https://pypi.python.org/pypi/nose installed\n\nYou can also launch the container\n\n```\ndocker-compose up-d\n```\n\nand run the tests in your favorite IDE :)",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/internap/python-mockserver-friendly-client",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mockserver-client",
    "package_url": "https://pypi.org/project/mockserver-client/",
    "platform": "",
    "project_url": "https://pypi.org/project/mockserver-client/",
    "project_urls": {
      "Homepage": "https://github.com/internap/python-mockserver-friendly-client"
    },
    "release_url": "https://pypi.org/project/mockserver-client/0.0.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Friendly python client to James D. Bloom's awesome MockServer",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4874659,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e08a1a1453406a42122c11a54b99a749917a843fc7b105d5a77140e41e5bed40",
          "md5": "0c0a27d08952ade8fb8b9444053997a2",
          "sha256": "12ad699fec2c241ae155009b7ec71cd3acb0d30018973039be1b489ffff3f4fe"
        },
        "downloads": -1,
        "filename": "mockserver-client-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0c0a27d08952ade8fb8b9444053997a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13389,
        "upload_time": "2018-03-09T18:49:02",
        "upload_time_iso_8601": "2018-03-09T18:49:02.233274Z",
        "url": "https://files.pythonhosted.org/packages/e0/8a/1a1453406a42122c11a54b99a749917a843fc7b105d5a77140e41e5bed40/mockserver-client-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b39135ef0b15cfcdaa6470ff0a2153398810d177ac31e250a9053d9031b9f08",
          "md5": "26c05ae4666bf8e3dae701d92242d358",
          "sha256": "ced95f77e16ae6c265fb233f82b370aa39d5ca3df60813c85d743b5efb82f382"
        },
        "downloads": -1,
        "filename": "mockserver-client-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "26c05ae4666bf8e3dae701d92242d358",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14012,
        "upload_time": "2018-05-15T19:18:32",
        "upload_time_iso_8601": "2018-05-15T19:18:32.474120Z",
        "url": "https://files.pythonhosted.org/packages/6b/39/135ef0b15cfcdaa6470ff0a2153398810d177ac31e250a9053d9031b9f08/mockserver-client-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24d1cca5bc186725d3503cde5c22ce278dca1e0ecc12a95f1e1c141fd9b1fb9d",
          "md5": "9d62ee0760aa19a7ebca1b1b166f17fd",
          "sha256": "9f480c1844209f72b3ec1d3899684392411b0e0ffbc60526bddc437edf8f22f7"
        },
        "downloads": -1,
        "filename": "mockserver-client-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9d62ee0760aa19a7ebca1b1b166f17fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14713,
        "upload_time": "2018-05-24T13:35:54",
        "upload_time_iso_8601": "2018-05-24T13:35:54.036250Z",
        "url": "https://files.pythonhosted.org/packages/24/d1/cca5bc186725d3503cde5c22ce278dca1e0ecc12a95f1e1c141fd9b1fb9d/mockserver-client-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6fb6683e8c8dcf500e31eb85c5d8b459c61ced5d46977896170b9734f604f8ef",
          "md5": "76f6bcffbdbd44f2d73d1eebfdc85b51",
          "sha256": "a358e9bab59197011162597ed84a9e704b550ce2e847c9265686583f0e5111a9"
        },
        "downloads": -1,
        "filename": "mockserver-client-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "76f6bcffbdbd44f2d73d1eebfdc85b51",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14822,
        "upload_time": "2018-06-05T15:50:36",
        "upload_time_iso_8601": "2018-06-05T15:50:36.622369Z",
        "url": "https://files.pythonhosted.org/packages/6f/b6/683e8c8dcf500e31eb85c5d8b459c61ced5d46977896170b9734f604f8ef/mockserver-client-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e216e7bb2f8a389e92b5cf5155817c4e3c7691f17ba627fc451e6568a4bd08a",
          "md5": "95402929a2084ca0f926ec534cfba482",
          "sha256": "33a4d37c62570f46326374311b6f626bff6d82e20da5f8c86eadf623be980ab5"
        },
        "downloads": -1,
        "filename": "mockserver-client-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "95402929a2084ca0f926ec534cfba482",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15078,
        "upload_time": "2018-06-08T16:23:10",
        "upload_time_iso_8601": "2018-06-08T16:23:10.859181Z",
        "url": "https://files.pythonhosted.org/packages/8e/21/6e7bb2f8a389e92b5cf5155817c4e3c7691f17ba627fc451e6568a4bd08a/mockserver-client-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54f89586546f62111b79f310db468fc5cd8782e75ded0a12c37ea572fcf1e312",
          "md5": "be1f290c085ce91b84503de144bd51bc",
          "sha256": "6f0cbaa58c791fc2f93e292cd36b8aa70c30150a1925ec360758207018b9f039"
        },
        "downloads": -1,
        "filename": "mockserver-client-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "be1f290c085ce91b84503de144bd51bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15532,
        "upload_time": "2018-10-29T13:41:32",
        "upload_time_iso_8601": "2018-10-29T13:41:32.742980Z",
        "url": "https://files.pythonhosted.org/packages/54/f8/9586546f62111b79f310db468fc5cd8782e75ded0a12c37ea572fcf1e312/mockserver-client-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "54f89586546f62111b79f310db468fc5cd8782e75ded0a12c37ea572fcf1e312",
        "md5": "be1f290c085ce91b84503de144bd51bc",
        "sha256": "6f0cbaa58c791fc2f93e292cd36b8aa70c30150a1925ec360758207018b9f039"
      },
      "downloads": -1,
      "filename": "mockserver-client-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "be1f290c085ce91b84503de144bd51bc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15532,
      "upload_time": "2018-10-29T13:41:32",
      "upload_time_iso_8601": "2018-10-29T13:41:32.742980Z",
      "url": "https://files.pythonhosted.org/packages/54/f8/9586546f62111b79f310db468fc5cd8782e75ded0a12c37ea572fcf1e312/mockserver-client-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}