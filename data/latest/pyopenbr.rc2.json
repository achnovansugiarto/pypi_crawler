{
  "info": {
    "author": "Antonis Katzourakis",
    "author_email": "antonis.katzourakis@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "pyopenbr\n========\n\nAn alternative Python wrapper for OpenBR which uses the Command Line Tool.\n\nSimple Usage:\n-------------\n\n.. code:: python\n\n    import pyopenbr\n    result = pyopenbr.run(algorithm=\"FaceRecognition\", compare=\"image1.jpg model.gal\")\n    print(result)\n\nDocumentation:\n==============\n\nParameters:\n-----------\n\nThe parameters and the algorithms are exactly the same as the OpenBR\nCommand-Line tool. The official documentation can be found at:\nhttp://openbiometrics.org/docs/api\\_docs/cl\\_api/\n\nSyntax:\n-------\n\nThese are valid syntax examples for doing the same thing:\n\n.. code:: python\n\n    # [1st Option] --> RECOMMENDED\n    result = pyopenbr.run(\"output.csv\", algorithm=\"FaceRecognition\", compare=\"image1.jpg model.gal\")\n\n    # [2nd Option - Splitting the parameter-option pairs]\n    result = pyopenbr.run(\"output.csv\", \"-algorithm FaceRecognition\", \"-compare image1.jpg model.gal\")\n\n    # [3rd Option - Copying the Command Line Tool's parameters as a second argument of the `run` function]\n    result = pyopenbr.run(\"output.csv\", \"-algorithm FaceRecognition -compare image1.jpg model.gal\")\n\nNotes:\n------\n\n-  The ``output`` parameter is *optional*.\n\n-  The argument names for the 1st option are **not** hard-coded. This means that any argument is translated to the format whic the OpenBR tool uses.\n\n-  The command always returns the content of the output of the OpenBR\n   tool. (even if it is an unreadable format - *e.g. raw format*)\n\n-  If the output parameter is omitted, or it ends in ``.csv``, then the\n   returned value will be a Dictionary with the result of the OpenBR\n   tool.\n\nExample - Face Recognition:\n---------------------------\n\n.. code:: python\n\n    # You can read the official tutorial with the Command Line tool here: http://openbiometrics.org/docs/tutorials/#face-recognition\n    # and see the similarities in the usage.\n    import pyopenbr\n\n    # Train the model with images in the `train` directory and store it in `model.gal`:\n    pyopenbr.run(\"model.gal\", \"-enrollAll -enroll train/\", algorithm=\"FaceRecognition\")\n\n    # Run a test of the trained model:\n    result = pyopenbr.run(algorithm=\"FaceRecognition\", compare=\"model.gal testImage.jpg\")\n\nOptions to Configure:\n---------------------\n\nYou can configure two things in the module:\n\n-  Disable error printing in the Terminal: ``pyopenbr.disableErrors()``\n\n-  Provide your Path for the OpenBR Command-Line tool:\n   ``pyopenbr.setExecutable(path)``. By default, the module will try to\n   find the executable in your system.\n\nRequirements:\n=============\n\nYou need to have OpenBR installed on your system. For installation\ninstructions please visit: http://openbiometrics.org/docs/install/\n\nCompatibility:\n==============\n\nThe module is compatible with Windows, Mac OS X and \\*nix Systems. It\nhas been tested under Mac OS X El Capitan. Both Python 2.7\nand Python 3 are supported.\n\nAdvantages/Disadvantages:\n-------------------------\n\nUsing this Wrapper has many advantages that the official Python wrapper\ndoesn't: - Solves many Memory Issues (e.g. when handling a lot of\nimages), and it is simpler to use. - Won't throw any Segmentation Faults\nor other C/C++ related errors, which are common in the official wrapper.\n- Doesn't need special parameters when you run ``cmake`` in order to be\ninstalled. - Simple usage, because it is similar to the OpenBR Command\nLine tool. (Which is also the most well-documented in the OpenBR\nWebsite, including Tutorials).\n\nHowever, there is one **disadvantage**: It is **slower** than the\nofficial python wrapper. The official wrapper doesn't\ninitialize/finalize the OpenBR object when used for many sequential\nprocesseses. This one, however, does. This is unavoidable since we\nessentially call the OpenBR command line tool.\n\nSpeed Test:\n~~~~~~~~~~~\n\nI did a quick experiment to see the time difference between the official\nPython wrapper and this module. The test was about recognizing a face of\nthe same image, against a trained model:\n\n-  The official Wrapper timing: ``0.182754993439``\n-  Our timing: ``0.663321971893``\n\nSo, there is a huge difference between the speed performance of the two\nwrappers. Probably this is the trade-off between speed and stability.\n\nNotice:\n=======\n\nThis is a rather simple wrapper which uses basic ways to communicate\nwith the OpenBR executable. However, it is stable and easy to use, which\nis the reason why I publish it as open-source.\n\nContact:\n========\n\nYou can contact me via e-mail at: antonis.katzourakis{AT}gmail{DOT}com\n\nTwitter: `@ant0nisktz <https://www.twitter.com/ant0nisktz>`_\n\nLicense:\n========\n\n    | Copyright 2016 Antonios Katzourakis\n    |  Licensed under the Apache License, Version 2.0 (the \"License\");\n      you may not use this file except in compliance with the License.\n      You may obtain a copy of the License at\n    |  http://www.apache.org/licenses/LICENSE-2.0\n    |  Unless required by applicable law or agreed to in writing,\n      software distributed under the License is distributed on an \"AS\n      IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n      express or implied. See the License for the specific language\n      governing permissions and limitations under the License.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ant0nisk/pyopenbr",
    "keywords": "open biometrics openbr face recognition",
    "license": "Apache License, Version 2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pyopenbr",
    "package_url": "https://pypi.org/project/pyopenbr/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pyopenbr/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/ant0nisk/pyopenbr"
    },
    "release_url": "https://pypi.org/project/pyopenbr/0.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Improved Python Wrapper for the OpenBR Command-line Tool.",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2360633,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "874ab5f8f7185c1d2a3ac1b0df2abb8191e202108073984d208482b1ce1f8ff2",
          "md5": "29b04ee6689ce1f438d7aa04c50421e9",
          "sha256": "474ceb8ca0a5facf931f5513a0ae2f9f5f527cb77c2575349c80908002f07e8a"
        },
        "downloads": -1,
        "filename": "pyopenbr-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "29b04ee6689ce1f438d7aa04c50421e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5146,
        "upload_time": "2016-09-23T20:03:37",
        "upload_time_iso_8601": "2016-09-23T20:03:37.232562Z",
        "url": "https://files.pythonhosted.org/packages/87/4a/b5f8f7185c1d2a3ac1b0df2abb8191e202108073984d208482b1ce1f8ff2/pyopenbr-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "595deeaa2824958b0865cebb895e3580f91de1fb746762bf60e69ec6b66ae241",
          "md5": "eaaf0c042160b7ed8e14b4b1b512daa8",
          "sha256": "0061eae92c1caabbc63c2013017fe064a504765b42b498115e857081f3bc6e1d"
        },
        "downloads": -1,
        "filename": "pyopenbr-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "eaaf0c042160b7ed8e14b4b1b512daa8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5173,
        "upload_time": "2016-09-24T00:57:00",
        "upload_time_iso_8601": "2016-09-24T00:57:00.865999Z",
        "url": "https://files.pythonhosted.org/packages/59/5d/eeaa2824958b0865cebb895e3580f91de1fb746762bf60e69ec6b66ae241/pyopenbr-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "595deeaa2824958b0865cebb895e3580f91de1fb746762bf60e69ec6b66ae241",
        "md5": "eaaf0c042160b7ed8e14b4b1b512daa8",
        "sha256": "0061eae92c1caabbc63c2013017fe064a504765b42b498115e857081f3bc6e1d"
      },
      "downloads": -1,
      "filename": "pyopenbr-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "eaaf0c042160b7ed8e14b4b1b512daa8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5173,
      "upload_time": "2016-09-24T00:57:00",
      "upload_time_iso_8601": "2016-09-24T00:57:00.865999Z",
      "url": "https://files.pythonhosted.org/packages/59/5d/eeaa2824958b0865cebb895e3580f91de1fb746762bf60e69ec6b66ae241/pyopenbr-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}