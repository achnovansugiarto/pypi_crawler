{
  "info": {
    "author": "ToorajJahangiri",
    "author_email": "Toorajjahangiri@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "##### IN THE NAME OF GOD\n\n# MOSAICI\n\n---\n\n*SHORT :*\n\n> Protocol For Make Secure Data Use Template .\n> \n> This Method Use Index Of Value in Current Block And Secure Input Data With.\n> \n> With Out `XOR`, `AND`, `OR` Method . This Protocol Create New Data With Indexes Of Source Value.\n> \n> **Result :** Make New Data With Indexes Of Value In Blocks Of Template.\n> \n> *NOTE :* To `decode/data` Data, must have the Template used to `encrypt/mosaic` or the PasswordString or Template Order to create the Right Template.\n\n\n\nCreate Template with Blocks Each Block Use `default = 256` Array Members Of Bytes `0, 255` Each Template Use Multi Block . Secure Data Use Index Of Data in Template Current Block .\n\nThis Protocol Make New Data With Indexes Of Value So Your Data Not Exists in The New Data Only Index of Value From Current Block in Templates Exists So Secure :).\n\n\n\n`Install Mosaici Protocol`\n\n```bash\npip install mosaici\n```\n\n\n\n`Use Mosaic App`\n\n```bash\npython -m mosaici --text \"test\"\n--\n041D537C\n--\npython -m mosaici --text \"041D537C\" --mode dec\n```\n\n\n\n**Mosaic Application Command**\n\n> **Mosaic App:**\n> \n> > *Mosaic Application*\n> > \n> > **Call Command :** `None` Default Running Mosaic App.\n> > \n> > **--template :** Set Templates Path or Name if in `Default Templates Dir` For `encrypt/mosaic` or `decrypt/data` - default is `config[default]`.\n> > \n> > **--mode :** Set Action Mode `mosaic/enc` or `data/dec` - default is `enc`\n> > \n> > **--text :** Text Data For `encrypt/mosaic` or `decrypt/data`.\n> > \n> > **--file :** File Data For `encrypt/mosaic` or `decrypt/data`.\n> > \n> > **--res :** Set Result File Path For Saving Result Optional If Input is `--text` - default is `None`.\n> > \n> > **--startblock :** Set Start Block `reletive start block` - default is `0`\n> \n> **Template App:**\n> \n> > *Generate New Template*\n> > \n> > **Call Command :** `template, *tt`\n> > \n> > **file :** File Path Or Templates Name if Want Save To `Default Templates Dir`\n> > \n> > **--replace :** Force Write If Exists Template File.\n> > \n> > **--order :** Make Templates Order - Use `'-'` For Templates Generate Order.\n> > \n> > **--string :** Make Order From StringPassword.\n> > \n> > **--length :** Options If Use `--string` Options For Making Custom Length Order From String Password. default Use String `Length`.\n> > \n> > **--repeat :** Repeat Order For Make Templates. default is `1`.\n> > \n> > **--size :** For Making Templates With How Many Blocks If Order is `None` And Use Not `--string`.\n> > \n> > **--saveorder :** Saving Order To OrderStore. default is `False`.\n> \n> **Manage App:**\n> \n> > *Manage Mosaic App*\n> > \n> > **Call Command :** `manage, *ma`\n> > \n> > **--makefromfile :** Make Templates From File Need To Value First OrderFile Path Second is Directory Path For Use Default Templates Dir use Empty string.\n> > \n> > **--updateconf :** Update Config File With Other Config File.\n> > \n> > **--conf :** Show Config File Path.\n> > \n> > **--templates :** Show Default Templates Dir Path.\n> > \n> > **--templatelist :** Show All Templates Name in Default Templates Dir.\n> > \n> > **--resetconf :** Reset Config File To Default.\n> > \n> > **--resettemplates :** Reset Templates Default Dir - Delete All Templates File and Order Store Then Generate Default Template Only.\n\n\n\n#### Order :\n\n*Order is a Pattern For Making Special Template Order*\n\n**Order Syntax** is a Sequence of `HEX` Value With Mixer & Separator.\n\n```python\n# Order String\norder = '54/72 65/68 64/69 72/73 20/4F 20/49 73/73 20/49 20/4F 72/73 64/69 65/68 54/72'\n# '/' Mixer, ' ' Separator\n# '54/72 ...' `54` Start Value, `72` End Value\n```\n\n**Order Object** instance of `BaseOrder` Ordet is Itarator Object\n\n```python\n# Import Order Object\nfrom mosaici.order import Order\n\norder_pattern = \"54/72 65/68 64/69 ...\"\norder = Order(order_pattern)\n# Or Can Use With Statement\nwith Order(order_pattern) as od:\n    # Iterator Return Tuple[int, int]\n    for start, end in od:\n        # do stuff\n```\n\nCan Use `order_from_string` function. `support utf-8`\n\n*arguments : (inp: str, length: int = None, separator: str= ' ', mixer: str = '/')*\n\n```python\n# Import order_from_string\nfrom mosaici.order import order_from_string\n\ntext = \"This Is Order\"\n# Generate Order Syntax From String\n# arguments : (inp: str, length: int, separator: ' ', mixer: '/')\ntxt_to_order = order_from_string(text)\nprint(type(txt_to_order))\n# `str`\nprint(txt_to_order)\n# '54/72 65/68 64/69 72/73 20/4F 20/49 73/73 20/49 20/4F 72/73 64/69 65/68 54/72'\n```\n\nOr in Order Object Use `from_string` Static Method for Generating Order from String.\n\n```python\n# Import Order\nfrom mosaici.order import Order\n\ntext = \"This Is Order\"\n# Generate Order Syntax From String\n# arguments : (inp: str, length: int, separator: ' ', mixer: '/')\ntxt_to_order = Order.from_string(txt)\nprint(type(txt_to_order))\n# `str`\nprint(txt_to_order)\n# '54/72 65/68 64/69 72/73 20/4F 20/49 73/73 20/49 20/4F 72/73 64/69 65/68 54/72'\n```\n\narguments :\n\n> Input : String input For Generating Order From that\n> \n> Length : Make Order With Custom Length. default is None means Create Order With input length\n> \n> Separator : Separator Symbol Use Order Object\n> \n> Mixer : Mixer Symbol Use Order Object\n\n\n\n#### Mosaic:\n\n*Mosaic Object For Making Mosaici `encode`, and Data `decode`*\n\n```python\n# Import MosaicObject and MosaicMulti\nfrom mosaici.mosaic import (\n                MosaicObject,\n                MosaicMulti,\n                MosaicFile,\n                MosaicMultiFile\n                )\n```\n\nUse Mosaic Objects - `MosaicObject`, `MosaicMulti`, `MosaicFile`, `MosaicMultiFile` For Secure Data With Mosaici Protocol.\n\nMosaic Objects Support `with` Statements & Recomended For Use.\n\n*NOTE : If Not Use with `with` statements & Use `FileTemplate` Must Manualy Closed After Done Working*\n\n**Mosaici Multi Objects**  `MosaicMulti, MosaicMultiFile` Can Handle MultiTemplate for Working.\n\nAll Musaici Objects has 4 Method Septial Method -\n\n`data_to_idx` for making indexes from dataÂ . RETURN `GENERATOR` OBJECT\n\n`idx_to_data` for making data from indexes input . RETURN `GENERATOR` OBJECT\n\n`to_mosaic` like data_to_idx - some changes . RETURN `StoreFileIndexes` Object\n\n`to_data` like idx_to_data - some changes. RETURN `ITERABLE` OBJECT\n\n**Mosaic File Objects** Customize `to_mosaic`, `to_data` Methods For Working Better & Easy With File Input - in This Objects `to_mosaic` Auto Make New File For Result With inputing result Path. and `to_data` Method Auto Make New File With Res Path Input.\n\n```python\n# Import order_from_string, MosaicFile\nfrom mosaici.order import order_from_string\nfrom mosaici.mosaic import MosaicFile\n\norder_str = order_from_string(\"This Is Order\")\n\n# Make Template From Order Then Create Indexes File or Data File\nwith MosaicFile(order=order_str) as mf:\n    mosaic = mf.to_mosaic('./image.jpg', './ms_img.idx')\n    # mosaic = mf.to_mosaic('./image.jpg', './ms_img.idx', start_block=10)\n    data =  mf.to_data('./ms_img.idx', './image_back.jpg')\n    # data =  mf.to_data('./ms_img.idx', './image_back.jpg', start_block=10)\n\n\n# Use FileTemplate Very Faster - `Recomended`\ntemplate_file = (\"./tmpl.tt\", 256) # PATH, MEMBER\nwith MosaicFile(template_file) as mf:\n    mosaic = mf.to_mosaic('./image.jpg', './ms_img.idx')\n    # mosaic = mf.to_mosaic('./image.jpg', './ms_img.idx', start_block=10)\n    data =  mf.to_data('./ms_img.idx', './image_back.jpg')\n    # data =  mf.to_data('./ms_img.idx', './image_back.jpg', start_block=10)\n```\n\nand Use MosaicMulti Objects\n\n```python\n# Import Template, MosaicMultiFile\nfrom mosaici.template import Template\nfrom mosaici.mosaic import MosaicMultiFile\n\ntemplates = {'tmp_1': Template(order=...), 'tmp_2': ('./tmpl.tt', 256)}\n\nwith MosaicMultiFile(templates) as mmf:\n    mosaic = mmf.to_mosaic('./image.jpg', './ms_img.idx', 0, 'tmp_1')\n    # make default template `mmf.template = 'tmp_1'`\n    # mosaic = mmf.to_mosaic('./image.jpg', './ms_img.idx')\n    data = mmf.to_data('./ms_img.idx', './image_back.jpg', 0, 'tmp_1')\n    # data = mmf.to_data('./ms_img.idx', './image_back.jpg')\n```\n\n\n\nMore info See Source.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Class-Tooraj/mosaici",
    "keywords": "",
    "license": "MIT - License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mosaici",
    "package_url": "https://pypi.org/project/mosaici/",
    "platform": "",
    "project_url": "https://pypi.org/project/mosaici/",
    "project_urls": {
      "Homepage": "https://github.com/Class-Tooraj/mosaici"
    },
    "release_url": "https://pypi.org/project/mosaici/0.9/",
    "requires_dist": [
      "colorama"
    ],
    "requires_python": ">=3.10.*",
    "summary": "Protocol For Make Secure Data Use Template.",
    "version": "0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12537689,
  "releases": {
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74c7a5ae24a5ecf1267d1ad0a3d07579bc0595389cc748e5f42b634bc289caad",
          "md5": "cea8366aa58315a47bfb3e39ce10c985",
          "sha256": "0a877fea2a5b5b7cd947a0a8b3ae7b0678a461a19c6d7a1d263fe687d74d013b"
        },
        "downloads": -1,
        "filename": "mosaici-0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cea8366aa58315a47bfb3e39ce10c985",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10.*",
        "size": 41000,
        "upload_time": "2022-01-11T09:49:59",
        "upload_time_iso_8601": "2022-01-11T09:49:59.493915Z",
        "url": "https://files.pythonhosted.org/packages/74/c7/a5ae24a5ecf1267d1ad0a3d07579bc0595389cc748e5f42b634bc289caad/mosaici-0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a65cdabf64e541cef719895d95559fc0719c95a550f0995634f0324f25c2fa6a",
          "md5": "0c2906a9fd35b430ba673b81fde9de0f",
          "sha256": "207a0523af4534770edb51954e272580e862c282e2b07d1faa718037e9328998"
        },
        "downloads": -1,
        "filename": "mosaici-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "0c2906a9fd35b430ba673b81fde9de0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10.*",
        "size": 35736,
        "upload_time": "2022-01-11T09:50:05",
        "upload_time_iso_8601": "2022-01-11T09:50:05.861072Z",
        "url": "https://files.pythonhosted.org/packages/a6/5c/dabf64e541cef719895d95559fc0719c95a550f0995634f0324f25c2fa6a/mosaici-0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "74c7a5ae24a5ecf1267d1ad0a3d07579bc0595389cc748e5f42b634bc289caad",
        "md5": "cea8366aa58315a47bfb3e39ce10c985",
        "sha256": "0a877fea2a5b5b7cd947a0a8b3ae7b0678a461a19c6d7a1d263fe687d74d013b"
      },
      "downloads": -1,
      "filename": "mosaici-0.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cea8366aa58315a47bfb3e39ce10c985",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10.*",
      "size": 41000,
      "upload_time": "2022-01-11T09:49:59",
      "upload_time_iso_8601": "2022-01-11T09:49:59.493915Z",
      "url": "https://files.pythonhosted.org/packages/74/c7/a5ae24a5ecf1267d1ad0a3d07579bc0595389cc748e5f42b634bc289caad/mosaici-0.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a65cdabf64e541cef719895d95559fc0719c95a550f0995634f0324f25c2fa6a",
        "md5": "0c2906a9fd35b430ba673b81fde9de0f",
        "sha256": "207a0523af4534770edb51954e272580e862c282e2b07d1faa718037e9328998"
      },
      "downloads": -1,
      "filename": "mosaici-0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "0c2906a9fd35b430ba673b81fde9de0f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10.*",
      "size": 35736,
      "upload_time": "2022-01-11T09:50:05",
      "upload_time_iso_8601": "2022-01-11T09:50:05.861072Z",
      "url": "https://files.pythonhosted.org/packages/a6/5c/dabf64e541cef719895d95559fc0719c95a550f0995634f0324f25c2fa6a/mosaici-0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}