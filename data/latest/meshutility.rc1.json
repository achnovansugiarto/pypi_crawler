{
  "info": {
    "author": "Zishun Liu",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Multimedia :: Graphics :: 3D Modeling"
    ],
    "description": "[![Build](https://github.com/zishun/MeshUtility/actions/workflows/wheels.yml/badge.svg?branch=main)](https://github.com/zishun/MeshUtility/actions/workflows/wheels.yml)\n# MeshUtility\n\n> A collection of python utilities for mesh processing.\n\nInstall with\n```\npip install meshutility==0.0.2\n```\n\nA simple tutorial is available [here](https://zishun.github.io/projects/MeshUtility/).\n\n\n## Functions & Modules\n- ```colormap_vertex_color```: assign vertex color to visualize a scalar field defined on mesh.\n- ```cut_along_curve```: cut a mesh along a vertex chain.\n- ```ff_graph```: face-face graph of mesh.\n- ```get_scalar_field_on_resampled_points```: given a scalar field defined on a triangular mesh, get field values on resampled points.\n- ```IsoCurve``` module: extract isocurves on a scalar field defined on a manifold triangular mesh.\n- ```pygeodesic``` module (C++): geodesic for triangular meshes.\n    - exact geodesic by Danil Kirsanov.\n    - fast marching, may use different speed on each face.\n- ```pyisocurve``` module (C++): almost the same as ```IsoCurve``` above.\n- ```pyremesh``` module (C++): incremental isotropic remeshing.\n- ```pyshapeop``` module (C++): a partial binding of ShapeOp.\n- ```read_obj_lines```: read polyline from a [Wavefront .obj file](https://en.wikipedia.org/wiki/Wavefront_.obj_file#Line_elements).\n- ```remove_unreferenced_vertices```: remove unreferenced vertices.\n- ```sphere_cvt```: iteratively approximate centroidal Voronoi tessellation (CVT) on the unit sphere (kind of uniform sampling).\n- ```split_connected_components```: split connected components.\n- ```split_mesh, split_mesh_complete```: split a mesh by inserting new vertices defined on mesh edges.\n- ```write_obj_lines```: write polyline as a Wavefront .obj file that can be open with MeshLab.\n- ```vv_graph```: vertex-vertex graph of mesh.\n\n\n## Build from Source\n\nsee [```build.md```](https://github.com/zishun/MeshUtility/blob/main/build.md)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zishun/MeshUtility",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "meshutility",
    "package_url": "https://pypi.org/project/meshutility/",
    "platform": null,
    "project_url": "https://pypi.org/project/meshutility/",
    "project_urls": {
      "Bug Tracker": "https://github.com/zishun/MeshUtility/issues",
      "Homepage": "https://github.com/zishun/MeshUtility"
    },
    "release_url": "https://pypi.org/project/meshutility/0.0.2/",
    "requires_dist": [
      "numpy",
      "scipy",
      "openmesh",
      "networkx",
      "matplotlib"
    ],
    "requires_python": ">=3.6",
    "summary": "A collection of python utilities for mesh processing",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14267493,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b1c2cf7169d15d1a0469af0443b40a46eac071837673550f8035e7d14e67e62",
          "md5": "0dd1140043a3b555e4f7c7d1903f9711",
          "sha256": "e791a6ebbaef0cd8f49c08a22663ed4a0cd5a1923989c9d89c9a33e6f6e7de76"
        },
        "downloads": -1,
        "filename": "meshutility-0.0.2a-cp36-cp36m-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "0dd1140043a3b555e4f7c7d1903f9711",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.6",
        "size": 761113,
        "upload_time": "2022-06-28T01:43:28",
        "upload_time_iso_8601": "2022-06-28T01:43:28.370353Z",
        "url": "https://files.pythonhosted.org/packages/6b/1c/2cf7169d15d1a0469af0443b40a46eac071837673550f8035e7d14e67e62/meshutility-0.0.2a-cp36-cp36m-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6b1c2cf7169d15d1a0469af0443b40a46eac071837673550f8035e7d14e67e62",
        "md5": "0dd1140043a3b555e4f7c7d1903f9711",
        "sha256": "e791a6ebbaef0cd8f49c08a22663ed4a0cd5a1923989c9d89c9a33e6f6e7de76"
      },
      "downloads": -1,
      "filename": "meshutility-0.0.2a-cp36-cp36m-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "0dd1140043a3b555e4f7c7d1903f9711",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6",
      "size": 761113,
      "upload_time": "2022-06-28T01:43:28",
      "upload_time_iso_8601": "2022-06-28T01:43:28.370353Z",
      "url": "https://files.pythonhosted.org/packages/6b/1c/2cf7169d15d1a0469af0443b40a46eac071837673550f8035e7d14e67e62/meshutility-0.0.2a-cp36-cp36m-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}