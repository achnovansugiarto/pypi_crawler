{
  "info": {
    "author": "Yoonseok Hur",
    "author_email": "yoonseok@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "# arduplot\n\n### No Serial Plotter for PlatformIO/VSCode ???\n\n<p>The following picture shows the Arduino IDE's serial plotter which plots the data coming through the serial port.</p>\n\n![Arduino Serial Plotter](https://user-images.githubusercontent.com/13171662/133396210-a3c486cc-1c94-4cdc-abd9-7f56042f0f2f.png)\n\n\n<p>But there is no built-in equivalent tool for the PlatformIO and/or VSCode. Hence arduplot(Arduino Plot) is made to support the equivalent funcitionality.</p>\n<p>This tool can be run stand alone with the usage below. This needs to be started in the PIO Terminal Panel, specifically in the PIO bundled python venv.</p>\n<pre>\nUsage: arduplot [OPTIONS] [LABELS]...\n\nOptions:\n  -w, --width INTEGER   Plotter Width\n  -i, --width INTEGER   Plotter Y Axis Min\n  -x, --width INTEGER   Plotter Y Axis Max\n  -t, --title TEXT      Plotter Title\n  -s, --socket INTEGER  TCP Socket Port number\n  -p, --port TEXT       Serial Port, a number or a device name\n  -b, --baud INTEGER    Set baudrate, default=115200\n  --help                Show this message and exit.\n</pre>\nAs an example, you can build and run https://github.com/iotlab101/pio_filter_dht22 on an esp8266 and run the following command.\n\n<pre>\narduplot -p COM5 -t Thermometer -w 100 Temperature Humidity\n</pre>\nHere -t Thermometer is the title of the plot chart, -w 100 is the width of the plot, and Temperature and the Humidity are the labels of the plotting data.\nAnd you'll see see the plot like this\n\n![Screen Shot 2021-11-13 at 9 59 48 PM](https://user-images.githubusercontent.com/13171662/141644699-778221fe-7eb4-4760-bc6b-3f3671e2724d.png)\n\n(And you can plot the data from a TCP connection as well instead of the serial port if you use the **-s** option. Use the **-s** option to open and wait on a socket, then feed the data to the socket. The data format should be the same as the Serial port case)\n\n### Optional Plot Configuration\nThere is an optional configuration file where you can set the setting for the plotting for the project. If you create a json file named **'plotcfg.json'** under the the PIO project directory, you don't have to pass the parameters every time you invoke the tool.\n<pre>\n{\n    \"label\": [\n        \"temperature\",\n        \"humidity\"\n    ],\n    \"title\": \"Thermmeter\",\n    \"width\": 100\n}\n</pre>\nThis configuration would be helpful, if you want to run this tool over the TCP port via some other tool where it's not easy to pass-through the setting information.\n## Installation and Prerequisite\n* This plotter uses the following dependancies, and they will be installed when you install this tool..\n<pre>\n         matplotlib\n         click\n         pyserial\n</pre>\nYou can install this tool with the pip as follows\n<pre>\npip install arduplot\n</pre>\n\n## Running it as part of PlatformIO monitor filter ##\n**1**. Install the arduplot first<pre>pip install arduplot</pre>\n**2**. Configure the tool. There are three ways to configure.\n<ol type=\"i\">\n  <li>configure every time you create a pio project</li>\n  <li>configure your platform wise like esp8266 or esp32</li>\n  <li>or you just configure globally by setting an environment variable.</li>\n</ol>\n<br>\nFor i), you create a folder 'monitor' under your pio project folder, and copy ~/.platformio/penv/lib/python3.9/site-packages/arduplot/filter_plotter.py script to that folder.\n<pre>&lt;Project&gt;/monitor</pre>\n\nFor ii), you create the ~/.platformio/platform/espressif8266/monitor folder and copy ~/.platformio/penv/lib/python3.9/site-packages/arduplot/filter_plotter.py to that folder. If you're using other platform like esp32, then create the ~/.platformio/platform/espressif32/monitor folder and copy to that folder.\n<pre>\n~/.platformio/platform/espressif8266/monitor (or ~/.platformio/platform/espressif32/monitor for esp32)\n</pre>\n\nAnd for iii), you can just set the environment variable as below and run this without copying. For Windows, you set the environment variable as such in the Windows way.\n<pre>export PLATFORMIO_MONITOR_DIR=${HOME}/.platformio/penv/lib/python3.9/site-packages/arduplot/</pre>\n\n\n**3**. With the above steps done, run <pre>pio device monitor -f plotter</pre>And you will get this plot.\n\n<img width=\"937\" alt=\"Screen Shot 2021-11-13 at 9 46 49 PM\" src=\"https://user-images.githubusercontent.com/13171662/141644389-00e05586-837c-4bd9-9c73-5f61e2785ead.png\">\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yhur/arduplot",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "arduplot",
    "package_url": "https://pypi.org/project/arduplot/",
    "platform": null,
    "project_url": "https://pypi.org/project/arduplot/",
    "project_urls": {
      "Bug Tracker": "https://github.com/yhur/arduplot/issues",
      "Homepage": "https://github.com/yhur/arduplot"
    },
    "release_url": "https://pypi.org/project/arduplot/0.2.7/",
    "requires_dist": [
      "matplotlib",
      "pyserial",
      "click"
    ],
    "requires_python": ">=3.6",
    "summary": "This tool listens the serial port and draws the data to matplotlib.",
    "version": "0.2.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13716763,
  "releases": {
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6baa9d1f60077ba351915ead2450dee2f3908f8f143f3cd9352a3c36f75f5a2",
          "md5": "1613755293dfd066aa21ee9e48011b73",
          "sha256": "ab8784a2da51ebe979dd83041ab9dd21ce28914d3e2d967cf38da84ac8742adc"
        },
        "downloads": -1,
        "filename": "arduplot-0.2.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1613755293dfd066aa21ee9e48011b73",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10961,
        "upload_time": "2022-05-05T03:26:21",
        "upload_time_iso_8601": "2022-05-05T03:26:21.263764Z",
        "url": "https://files.pythonhosted.org/packages/f6/ba/a9d1f60077ba351915ead2450dee2f3908f8f143f3cd9352a3c36f75f5a2/arduplot-0.2.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37ee6dc20d80ae634722398d69b794cab75fb3873dc80e231890aafc24abdef9",
          "md5": "8933324bf48ef58b269e504249812cc6",
          "sha256": "0ec683ed53f702a337bd24707826b5c5836fdb5f468f369eadf730068765e01f"
        },
        "downloads": -1,
        "filename": "arduplot-0.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "8933324bf48ef58b269e504249812cc6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8973,
        "upload_time": "2022-05-05T03:26:22",
        "upload_time_iso_8601": "2022-05-05T03:26:22.641046Z",
        "url": "https://files.pythonhosted.org/packages/37/ee/6dc20d80ae634722398d69b794cab75fb3873dc80e231890aafc24abdef9/arduplot-0.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f6baa9d1f60077ba351915ead2450dee2f3908f8f143f3cd9352a3c36f75f5a2",
        "md5": "1613755293dfd066aa21ee9e48011b73",
        "sha256": "ab8784a2da51ebe979dd83041ab9dd21ce28914d3e2d967cf38da84ac8742adc"
      },
      "downloads": -1,
      "filename": "arduplot-0.2.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1613755293dfd066aa21ee9e48011b73",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10961,
      "upload_time": "2022-05-05T03:26:21",
      "upload_time_iso_8601": "2022-05-05T03:26:21.263764Z",
      "url": "https://files.pythonhosted.org/packages/f6/ba/a9d1f60077ba351915ead2450dee2f3908f8f143f3cd9352a3c36f75f5a2/arduplot-0.2.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "37ee6dc20d80ae634722398d69b794cab75fb3873dc80e231890aafc24abdef9",
        "md5": "8933324bf48ef58b269e504249812cc6",
        "sha256": "0ec683ed53f702a337bd24707826b5c5836fdb5f468f369eadf730068765e01f"
      },
      "downloads": -1,
      "filename": "arduplot-0.2.7.tar.gz",
      "has_sig": false,
      "md5_digest": "8933324bf48ef58b269e504249812cc6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8973,
      "upload_time": "2022-05-05T03:26:22",
      "upload_time_iso_8601": "2022-05-05T03:26:22.641046Z",
      "url": "https://files.pythonhosted.org/packages/37/ee/6dc20d80ae634722398d69b794cab75fb3873dc80e231890aafc24abdef9/arduplot-0.2.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}