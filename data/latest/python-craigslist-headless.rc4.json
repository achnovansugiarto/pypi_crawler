{
  "info": {
    "author": "Julio M Alegria, Alexandra Wright",
    "author_email": "superbiscuit@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "python-craigslist\n=================\n\nA simple `Craigslist <http://www.craigslist.org>`__ wrapper.\n\nLicense: `MIT-Zero <https://romanrm.net/mit-zero>`__.\n\nDisclaimer\n----------\n\n* I don't work for or have any affiliation with Craigslist.\n* This module was implemented for educational purposes. It should not be used for crawling or downloading data from Craigslist.\n* This is a fork of the pip package by Julio M Alegria. This version uses a headless version of chrome for more accurate parsing\n* of data that is generated dynamically via JavaScript\n\nInstallation\n------------\n\n::\n\n    pip install python-craigslist-headless\n\nClasses\n-------\n\nBase class:\n\n* ``CraigslistBase``\n\nSubclasses:\n\n* ``CraigslistCommunity`` (craigslist.org > community)\n* ``CraigslistHousing`` (craigslist.org > housing)\n* ``CraigslistJobs`` (craigslist.org > jobs)\n* ``CraigslistForSale`` (craigslist.org > for sale)\n* ``CraigslistEvents`` (craigslist.org > event calendar)\n* ``CraigslistServices`` (craigslist.org > services)\n* ``CraigslistGigs`` (craigslist.org > gigs)\n* ``CraigslistResumes`` (craigslist.org > resumes)\n\nExamples\n--------\n\nLooking for a room in San Francisco?\n\n.. code:: python\n\n    from craigslist import CraigslistHousing\n    cl_h = CraigslistHousing(site='sfbay', area='sfc', category='roo',\n                             filters={'max_price': 1200, 'private_room': True})\n\n    # You can get an approximate amount of results with the following call:\n    print(cl_h.get_results_approx_count())\n\n    992\n\n    for result in cl_h.get_results(sort_by='newest', geotagged=True):\n        print(result)\n\n    {\n        'id': u'4851150747',\n        'name': u'Near SFSU, UCSF and NEWLY FURNISHED - CLEAN, CONVENIENT and CLEAN!',\n        'url': u'http://sfbay.craigslist.org/sfc/roo/4851150747.html',\n        'datetime': u'2015-01-27 23:44',\n        'price': u'$1100',\n        'where': u'inner sunset / UCSF',\n        'has_image': False,\n        'has_map': True,\n        'geotag': (37.738473, -122.494721)\n    }\n    # ...\n\nMaybe a software engineering internship in Silicon Valley?\n\n.. code:: python\n\n    from craigslist import CraigslistJobs\n    cl_j = CraigslistJobs(site='sfbay', area='sby', category='sof',\n                          filters={'is_internship': True, 'employment_type': ['full-time', 'part-time']})\n\n    for result in cl_j.get_results():\n        print(result)\n\n    {\n        'id': u'5708651182',\n        'name': u'GAME DEVELOPER INTERNSHIP AT TYNKER - AVAILABLE NOW!',\n\t'url': u'http://sfbay.craigslist.org/pen/eng/5708651182.html',\n\t'datetime': u'2016-07-30 13:30',\n\t'price': None,\n\t'where': u'mountain view',\n\t'has_image': True,\n\t'has_map': True,\n\t'geotag': None\n    }\n    # ...\n\nEvents with free food in New York?\n\n.. code:: python\n\n    from craigslist import CraigslistEvents\n    cl_e = CraigslistEvents(site='newyork', filters={'free': True, 'food': True})\n\n    for result in cl_e.get_results(sort_by='newest', limit=5):\n        print(result)\n\n    {\n        'id': u'4866178242',\n        'name': u'Lituation Thursdays @ Le Reve',\n        'url': u'http://newyork.craigslist.org/mnh/eve/4866178242.html',\n        'datetime': u'1/29',\n        'price': None,\n        'where': u'Midtown East',\n        'has_image': True,\n        'has_map': True,\n        'geotag': None\n    }\n    # ...\n\nWhere to get `filters` from?\n----------------------------\n\nEvery subclass has its own set of filters. To get a list of all the filters\nsupported by a specific subclass, use the ``.show_filters()`` class-method:\n\n.. code:: python\n\n   >>> from craigslist import CraigslistJobs, CraigslistForSale\n   >>> CraigslistJobs.show_filters()\n\n   Base filters:\n   * query = ...\n   * search_titles = True/False\n   * has_image = True/False\n   * posted_today = True/False\n   * bundle_duplicates = True/False\n   * search_distance = ...\n   * zip_code = ...\n   \n   CraigslistJobs filters:\n   * is_internship = True/False\n   * is_nonprofit = True/False\n   * is_telecommuting = True/False\n   * employment_type = u'full-time', u'part-time', u'contract', u\"employee's choice\"\n\n\n   >>> CraigslistForSale.show_filters(category='cta')\n\n   Base filters:\n   * query = ...\n   * search_titles = True/False\n   * has_image = True/False\n   * posted_today = True/False\n   * bundle_duplicates = True/False\n   * search_distance = ...\n   * zip_code = ...\n   \n   CraigslistForSale filters with category 'cta':\n   * min_price = ...\n   * max_price = ...\n   * make = ...\n   * model = ...\n   * min_year = ...\n   * max_year = ...\n   * min_miles = ...\n   * max_miles = ...\n   * min_engine_displacement = ...\n   * max_engine_displacement = ...\n   * condition = u'new', u'like new', u'excellent', u'good', u'fair', u'salvage'\n   * auto_cylinders = u'3 cylinders', u'4 cylinders', u'5 cylinders', u'6 cylinders', u'8 cylinders', u'10 cylinders', u'12 cylinders', u'other'\n   * auto_drivetrain = u'fwd', u'rwd', u'4wd'\n   * auto_fuel_type = u'gas', u'diesel', u'hybrid', u'electric', u'other'\n   * auto_paint = u'black', u'blue', u'brown', u'green', u'grey', u'orange', u'purple', u'red', u'silver', u'white', u'yellow', u'custom'\n   * auto_size = u'compact', u'full-size', u'mid-size', u'sub-compact'\n   * auto_title_status = u'clean', u'salvage', u'rebuilt', u'parts only', u'lien', u'missing'\n   * auto_transmission = u'manual', u'automatic', u'other'\n   * auto_bodytype = u'bus', u'convertible', u'coupe', u'hatchback', u'mini-van', u'offroad', u'pickup', u'sedan', u'truck', u'SUV', u'wagon', u'van', u'other'\n\nWhere to get ``site`` and ``area`` from?\n----------------------------------------\n\nWhen initializing any of the subclasses, you'll need to provide the ``site``, and optionall the ``area``, from where you want to query data.\n\nTo get the correct ``site``, follow these steps:\n\n1. Go to `craigslist.org/about/sites <https://www.craigslist.org/about/sites>`__.\n2. Find the country or city you're interested on, and click on it.\n3. You'll be directed to ``<site>.craigslist.org``. The value of ``<site>`` in the URL is the one you should use.\n\nNot all sites have areas. To check if your site has areas, check for links next to the title of the Craigslist page, on the top center. For example, for New York you'll see:\n\n.. image:: https://user-images.githubusercontent.com/1008637/45307206-bb404d80-b51e-11e8-8e6d-edfbdbd0a6fa.png\n\nClick on the one you're interested, and you'll be redirected to ``<site>.craigslist.org/<area>``. The value of ``<area>`` in the URL is the one you should use. If there are no areas next to the title, it means your site has no areas, and you can leave that argument unset.\n\nWhere to get ``category`` from?\n-------------------------------\n\nYou can additionally provide a ``category`` when initializing any of the subclasses. To get a list of all the categories\nsupported by a specific subclass, use the ``.show_categories()`` class-method:\n\n.. code:: python\n    \n    >>> from craigslist import CraigslistServices\n    >>> CraigslistServices.show_categories()\n\n    CraigslistServices categories:  \n    * aos = automotive services\n    * bts = beauty services\n    * cms = cell phone / mobile services\n    * cps = computer services\n    * crs = creative services\n    * cys = cycle services\n    * evs = event services\n    * fgs = farm & garden services\n    * fns = financial services\n    * hws = health/wellness services\n    * hss = household services\n    * lbs = labor / hauling / moving\n    * lgs = legal services\n    * lss = lessons & tutoring\n    * mas = marine services\n    * pas = pet services\n    * rts = real estate services\n    * sks = skilled trade services\n    * biz = small biz ads\n    * trv = travel/vacation services\n    * wet = writing / editing / translation\n\nIs there a limit for the number of results?\n--------------------------------------------\n\nYes, Craigslist caps the results for any search to 3000.\n\nSupport\n-------\n\nIf you find any bug or you want to propose a new feature, please use the `issues tracker <https://github.com/juliomalegria/python-craigslist/issues>`__. I'll be happy to help you! :-)\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/f3mshep/python-craigslist-headless",
    "keywords": "",
    "license": "MIT-Zero",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-craigslist-headless",
    "package_url": "https://pypi.org/project/python-craigslist-headless/",
    "platform": null,
    "project_url": "https://pypi.org/project/python-craigslist-headless/",
    "project_urls": {
      "Homepage": "https://github.com/f3mshep/python-craigslist-headless"
    },
    "release_url": "https://pypi.org/project/python-craigslist-headless/0.0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Simple Craigslist wrapper.",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17257408,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5790586e15738b8e45d0ea07567e2e350d0b30049d8226db17f1c543d5aef3b7",
          "md5": "511d891b797a2e6cc81436b11808b925",
          "sha256": "1834ee02e8e28482632b41cd25daf3261dd3160a4dffd512ad625476ed9a19d6"
        },
        "downloads": -1,
        "filename": "python-craigslist-headless-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "511d891b797a2e6cc81436b11808b925",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16304,
        "upload_time": "2023-03-11T04:53:09",
        "upload_time_iso_8601": "2023-03-11T04:53:09.163748Z",
        "url": "https://files.pythonhosted.org/packages/57/90/586e15738b8e45d0ea07567e2e350d0b30049d8226db17f1c543d5aef3b7/python-craigslist-headless-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57f76ebfd773d8644a817140d7b63530ce12977df7c343622b220794e3909d27",
          "md5": "0e92968ff3a8c1ea655a236e266d335e",
          "sha256": "e5b8aea59459995ffc10205c0c4a3cfff064cd2c2ceff4bdac8f68a614fcc48c"
        },
        "downloads": -1,
        "filename": "python-craigslist_headless-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0e92968ff3a8c1ea655a236e266d335e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16313,
        "upload_time": "2023-03-11T07:11:28",
        "upload_time_iso_8601": "2023-03-11T07:11:28.501166Z",
        "url": "https://files.pythonhosted.org/packages/57/f7/6ebfd773d8644a817140d7b63530ce12977df7c343622b220794e3909d27/python-craigslist_headless-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "813cf8962b1c82e9d85281de9fcda99b28a542c863db76025564a524604148d9",
          "md5": "a8f4737886e1afe1153d700fb27ff90e",
          "sha256": "c1faf213ce5a1d4f643b6706aade67d0fdeb62cfb68dcb4636a250c9c4e97b51"
        },
        "downloads": -1,
        "filename": "python-craigslist_headless-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a8f4737886e1afe1153d700fb27ff90e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16359,
        "upload_time": "2023-03-11T19:08:13",
        "upload_time_iso_8601": "2023-03-11T19:08:13.658194Z",
        "url": "https://files.pythonhosted.org/packages/81/3c/f8962b1c82e9d85281de9fcda99b28a542c863db76025564a524604148d9/python-craigslist_headless-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64c4d5375517e19dd4134ca5d98c787d531acbcbe64f1c9796a769864b20a87c",
          "md5": "d265c0039dff7c2f63a860f9da279943",
          "sha256": "db4a51f2e985cb3450ff963d7869934c097a14fad1f4cda8b66543851ea407ca"
        },
        "downloads": -1,
        "filename": "python-craigslist_headless-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d265c0039dff7c2f63a860f9da279943",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16410,
        "upload_time": "2023-03-12T02:39:54",
        "upload_time_iso_8601": "2023-03-12T02:39:54.360500Z",
        "url": "https://files.pythonhosted.org/packages/64/c4/d5375517e19dd4134ca5d98c787d531acbcbe64f1c9796a769864b20a87c/python-craigslist_headless-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "64c4d5375517e19dd4134ca5d98c787d531acbcbe64f1c9796a769864b20a87c",
        "md5": "d265c0039dff7c2f63a860f9da279943",
        "sha256": "db4a51f2e985cb3450ff963d7869934c097a14fad1f4cda8b66543851ea407ca"
      },
      "downloads": -1,
      "filename": "python-craigslist_headless-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "d265c0039dff7c2f63a860f9da279943",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16410,
      "upload_time": "2023-03-12T02:39:54",
      "upload_time_iso_8601": "2023-03-12T02:39:54.360500Z",
      "url": "https://files.pythonhosted.org/packages/64/c4/d5375517e19dd4134ca5d98c787d531acbcbe64f1c9796a769864b20a87c/python-craigslist_headless-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}