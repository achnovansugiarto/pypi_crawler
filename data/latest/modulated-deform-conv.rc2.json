{
  "info": {
    "author": "qiaoxin",
    "author_email": "qiaoxin182@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# modulated-deform-conv\n该项目是一个 Pytorch C++ and CUDA Extension,采用C++和Cuda实现了deformable-conv2d,modulated-deformable-conv2d,deformable-conv3d,modulated-deformable-conv3d的forward function和backward function,并在Python中对其进行了包装。\n<br />This Project is a Pytorch C++ and CUDA Extension, which implements  the forward function and backward function for deformable-conv2d, modulated-deformable-conv2d, deformable-conv3d, modulated-deformable-conv3d, then encapsulates C++ and CUDA  code into Python Package.\n\n### 安装 Install\n* run `pip install modulated-deform-conv`\n* or `git clone https://github.com/CHONSPQX/modulated-deform-conv.git`,then `cd modulated-deform-conv` and run `python setup.py install`\n\n\n#### 要求 Requires\n* Python 3\n* Pytorch>=1.3\n* Linux, gcc版本>=4.9(For Linux, gcc version>=4.9)\n* Windows,CUDA版本需要VS版本兼容(For Windows, CUDA version must be compatiable with Visual Studio version)\n\n由于资源有限，目前测试过的环境有(Because of limited resources, only the following environment are tested)\n- Ubuntu18.04 , gcc 7.4 , CUDA 10.2 ,Python3.7.4, Pytorch 1.3.1\n- Ubuntu18.04 , gcc 7.4 , CUDA 10.2 ,Python3.7.4, Pytorch 1.4.0\n- Windows10 , Visual Studio 2017 , CUDA 10.1 ,Python3.7.6, Pytorch 1.4.0\n\n#### 速度优化  Speed Optimization\n* `pip download modulated-deform-conv`\n解压得到的压缩文件，进入`modulated-deform-conv`，打开`src/config.h`，用户可根据自身显卡情况，设置以下两个变量，获得更快运行速度，然后运行 `python setup.py install`\n<br>Unzip the downloaded compressed file, `cd modulated-deform-conv`, then open `src/config.h`,users are recommended to set the following `VARIABLES` to optimize run speed according to their NVIDIA GPU condition, then run `python setup.py install`\n\t* `const int CUDA_NUM_THREADS`\n\t* `const int MAX_GRID_NUM`\n\n* 运行时可以通过传递`in_step`参数来优化速度，该变量控制每次并行处理的batch 大小。\n<br> Or users can set different `in_step`  value in run time, which controls the batch size of each parallel processing .\n\n### 使用 Use\n直接使用C++函数，请`import MDCONV_CUDA`\n使用封装后的python类，请`import modulated_deform_conv`\nUsing C++ functions directly, please  `import MDCONV_CUDA`\nUsing the packaged function by Python, please `import modulated_deform_conv`\n\n# 文档 Documents\n## 1.C++ and CUDA Code\n* 文件 Files\n\n|Filename                      |Content                    |\n|:--------------------------:| :-----------------------: |\n|`config.h`      | **macro&gloabl variables&inline functions**       |\n|`deformable_conv.cu`| **MDCONV_CUDA.deform_conv2d_forward_cuda MDCONV_CUDA.deform_conv2d_backward_cuda**  |\n|`mdeformable_conv.cu`| **MDCONV_CUDA.modulated_deform_conv2d_forward_cuda MDCONV_CUDA.modulated_deform_conv2d_backward_cuda**  |\n|`deformable_conv3d.cu`| **MDCONV_CUDA.deform_conv3d_forward_cuda  MDCONV_CUDA.deform_conv3d_backward_cuda**  |\n|`mdeformable_conv3d.cu`| **MDCONV_CUDA.modulated_deform_conv3d_forward_cuda MDCONV_CUDA.modulated_deform_conv2d_backward_cuda**  |\n|`utils.cu`| **some code for display debug outputs**  |\n|`warp.cpp`| **glue code between C++ and Python**  |\n\n* 变量 Variables\n\n|Variable Name       |       Type              | Introduction |\n| :--------------------:  | :-------------------: |:----------------:|\n|`kernel_h`| `const int`|first dimension size of the convolution kernel|\n|`kernel_w`| `const int`|second dimension size of the convolution kernel|\n|`kernel_l`| `const int`|third dimension size of the convolution kernel|\n|`stride_h`| `const int`|stride for first dimension|\n|`stride_w`| `const int`|stride for second dimension|\n|`stride_l`| `const int`|stride for third dimension|\n|`pad_h`| `const int`|zero padding for first dimension|\n|`pad_w`| `const int`|zero padding for second dimension|\n|`pad_l`| `const int`|zero padding for third dimension|\n|`dilation_h`| `const int`|dilation rate for first dimension|\n|`dilation_w`| `const int`|dilation rate for second dimension|\n|`dilation_l`| `const int`|dilation rate for third dimension|\n|`group`| `const int`|group of convolution |\n|`deformable_group`| `const int`|group of offset and mask |\n|`in_step`| `const int`|batch size of each parallel processing|\n|`with_bias`| `const bool`|if have bias|\n|`input`| `at::Tensor` |`B,I,H,W[,L]`,`I` must be divisible by`group` and ` deformable_group`|\n|`grad_input`| `at::Tensor` |`grad_input` must be size like `input` |\n|`weight`| `at::Tensor` |`O,I/group,H,W[,L]`，`O`must be divisible by`group`|\n|`grad_weight`| `at::Tensor` |`grad_weight` must be size like `weight`|\n|`bias`| `at::Tensor` |`[O]`, if `with_bias=true`, `bias` must be non-null|\n|`grad_bias`| `at::Tensor` |`grad_bias` must be size like `bias`|\n|`offset`| `at::Tensor` |`B,deformable_group*2*kernel_h*kernel_w,H,W` `B,deformable_group*3*kernel_h*kernel_w*kernel_l,H,W,L`|\n|`grad_offset`| `at::Tensor` |`grad_offset` must be size like `offset`|\n|`mask`| `at::Tensor` |`B,deformable_group*kernel_h*kernel_w,H,W` `B,deformable_group*kernel_h*kernel_w*kernel_l,H,W,L`|\n|`grad_mask`| `at::Tensor` |`grad_mask` must be size like `mask`|\n|`output`| `at::Tensor` |`B,O,OH,OW[,OL]`|\n|`grad_output`| `at::Tensor` |`grad_output` must be size like `output`|\n\n## 2.Python Code\n\n|Class Name                     |Type                    |\n|:--------------------------:| :-----------------------: |\n|`class DeformConv2dFunction`      | `torch.autograd.Function`       |\n|`class ModulatedDeformConv2dFunction`      | `torch.autograd.Function`      |\n|`class DeformConv3dFunction`      | `torch.autograd.Function`       |\n|`class ModulatedDeformConv3dFunction`      | `torch.autograd.Function`      |\n|`class DeformConv2d`      | `torch.nn.Module`       |\n|`class ModulatedDeformConv2d`      | `torch.nn.Module`      |\n|`class DeformConv3d`      | `torch.nn.Module`       |\n|`class ModulatedDeformConv3d`      | `torch.nn.Module`      |\n\n## Author\n**Xin Qiao** `qiaoxin182@gmail.com`\n+ [github/chonspqx](https://github.com/chonspqx)\n\n## License\nCopyright (c) 2020 Xin Qiao\nReleased under the MIT license",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.github.com",
    "keywords": "pytorch,cuda,deform",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "modulated-deform-conv",
    "package_url": "https://pypi.org/project/modulated-deform-conv/",
    "platform": "",
    "project_url": "https://pypi.org/project/modulated-deform-conv/",
    "project_urls": {
      "Homepage": "https://www.github.com"
    },
    "release_url": "https://pypi.org/project/modulated-deform-conv/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "cuda implementation of deformable conv2d, modulated deformable conv2d,deformable conv3d, modulated deformable conv3d",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6826123,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab2abd61a714079b8e5fedc03c4ee669fde87c4d2c6008be0da58010a3b98e1c",
          "md5": "eda404caf0a35edf2925958438f88e56",
          "sha256": "2dc163f2bb11ca018cd868836b068e8cb76475b454095c3d91d29528ef2468e8"
        },
        "downloads": -1,
        "filename": "modulated_deform_conv-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "eda404caf0a35edf2925958438f88e56",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17151,
        "upload_time": "2020-02-15T22:26:24",
        "upload_time_iso_8601": "2020-02-15T22:26:24.331809Z",
        "url": "https://files.pythonhosted.org/packages/ab/2a/bd61a714079b8e5fedc03c4ee669fde87c4d2c6008be0da58010a3b98e1c/modulated_deform_conv-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8216b60071b56ce578b9f0450eea6e789757bf238945a3d2b2d6d2e1036ec4f",
          "md5": "2de19b1d879fe5e20093e73d9549a41b",
          "sha256": "ba9c55559cf6dd4d22859fd51d0de00bfb22229c38f7955a7e3ca08e2712fa8c"
        },
        "downloads": -1,
        "filename": "modulated_deform_conv-1.0.2-py3.7-linux-x86_64.egg",
        "has_sig": false,
        "md5_digest": "2de19b1d879fe5e20093e73d9549a41b",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": null,
        "size": 1734470,
        "upload_time": "2020-03-17T05:10:11",
        "upload_time_iso_8601": "2020-03-17T05:10:11.532235Z",
        "url": "https://files.pythonhosted.org/packages/e8/21/6b60071b56ce578b9f0450eea6e789757bf238945a3d2b2d6d2e1036ec4f/modulated_deform_conv-1.0.2-py3.7-linux-x86_64.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e282b505131895b0b685385c596c05b77167c6937de456295bcdece60e5e0bf4",
          "md5": "8dc09062ce4edd19e3b248bec1dcd5a6",
          "sha256": "fd63511d2a7861ce5c0fc8af4d73d6c4a97191164719cb47a41a951712c6aa85"
        },
        "downloads": -1,
        "filename": "modulated_deform_conv-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8dc09062ce4edd19e3b248bec1dcd5a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19832,
        "upload_time": "2020-03-17T05:10:13",
        "upload_time_iso_8601": "2020-03-17T05:10:13.573710Z",
        "url": "https://files.pythonhosted.org/packages/e2/82/b505131895b0b685385c596c05b77167c6937de456295bcdece60e5e0bf4/modulated_deform_conv-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e8216b60071b56ce578b9f0450eea6e789757bf238945a3d2b2d6d2e1036ec4f",
        "md5": "2de19b1d879fe5e20093e73d9549a41b",
        "sha256": "ba9c55559cf6dd4d22859fd51d0de00bfb22229c38f7955a7e3ca08e2712fa8c"
      },
      "downloads": -1,
      "filename": "modulated_deform_conv-1.0.2-py3.7-linux-x86_64.egg",
      "has_sig": false,
      "md5_digest": "2de19b1d879fe5e20093e73d9549a41b",
      "packagetype": "bdist_egg",
      "python_version": "3.7",
      "requires_python": null,
      "size": 1734470,
      "upload_time": "2020-03-17T05:10:11",
      "upload_time_iso_8601": "2020-03-17T05:10:11.532235Z",
      "url": "https://files.pythonhosted.org/packages/e8/21/6b60071b56ce578b9f0450eea6e789757bf238945a3d2b2d6d2e1036ec4f/modulated_deform_conv-1.0.2-py3.7-linux-x86_64.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e282b505131895b0b685385c596c05b77167c6937de456295bcdece60e5e0bf4",
        "md5": "8dc09062ce4edd19e3b248bec1dcd5a6",
        "sha256": "fd63511d2a7861ce5c0fc8af4d73d6c4a97191164719cb47a41a951712c6aa85"
      },
      "downloads": -1,
      "filename": "modulated_deform_conv-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8dc09062ce4edd19e3b248bec1dcd5a6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19832,
      "upload_time": "2020-03-17T05:10:13",
      "upload_time_iso_8601": "2020-03-17T05:10:13.573710Z",
      "url": "https://files.pythonhosted.org/packages/e2/82/b505131895b0b685385c596c05b77167c6937de456295bcdece60e5e0bf4/modulated_deform_conv-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}