{
  "info": {
    "author": "Simon Larsén",
    "author_email": "slarse@kth.se",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# repobee-csvgrades\n\n![Build Status](https://github.com/repobee/repobee-csvgrades/workflows/tests/badge.svg)\n[![Code Coverage](https://codecov.io/gh/repobee/repobee-csvgrades/branch/master/graph/badge.svg)](https://codecov.io/gh/repobee/repobee-csvgrades)\n![Supported Python Versions](https://img.shields.io/badge/python-3.6%2C%203.7%2C%203.8-blue)\n![Supported Platforms](https://img.shields.io/badge/platforms-Linux%2C%20macOS-blue.svg)\n[![License](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE)\n[![Code Style: Black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\n> **Important:** repobee-csvgrades v0.2.0 and later require RepoBee 3.\n\nA plugin for reporting grades into a CSV file based on issue titles.\n`repobee-csvgrades` adds the `record` category to repobee, along with the `grades` command, which operates on the\nJSON file produced by running `repobee list-issues` with the\n`--hook-results-file` option. The idea is pretty simple: find issues in student\nrepositories that match certain user-defined conditions (title + who opened it)\nand report the corresponding grades into a (preferably version controlled) CSV\nfile.\n\n## Example use case\nSay that you have three students, `slarse`, `glassey` and `glennol`, three tasks\n`task-1`, `task-2` and `task-3`, and that you (and any colleagues) open issues\nwith titles `Pass` for pass and `Fail` for fail. `repobee-csvgrades` can then\nbe configured to look for issues with those titles (using a regex), and write\nthem into a grades sheet that looks something like this:\n\n```\n            name,username,task-1,task-2,task-3\n    Simon Larsén,  slarse,     P,     P,     F\n Richard Glassey, glassey,     P,     P,     P\n    Glenn Olsson, glennol,     P,     P,     P\n```\n\n> **GitHub and CSV files:** GitHub\n> [renders CSV files really nicely](https://help.github.com/en/articles/rendering-csv-and-tsv-data),\n> they are even searchable!\n\nOnly grades from issues that were opened by authorized teachers, as specified\nby you, are written to the file. Grades are mapped from issue title to a\nsymbol, so the CSV file becomes more readable (here there's for example `P` for\n`Pass`). You also assign grades a priority, so if for example there's both a\nfail and a pass issue in a repo, it will pick the one that you've specified is\nmost important.  Additionally, each time new grades are reported, a summary\nmessage will be produced that looks something like this:\n\n```\nRecord grades for task-3\n\n@ta_a\nslarse task-3 F\n\n@ta_b\nglassey task-3 P\n```\n\nThe `@ta_a` and `@ta_b` are mentions of the teachers/TAs (with usernames `ta_a`\nand `ta_b`) that opened the issues. The intention is that this message should be\nused as a commit message for the grades file, so that the people who reported\ngrades get notified of which grades have been written to the grades sheet.\n\nThat's just a quick introduction, see [Usage](#usage) for a more detailed\ndescription.\n\n## Install\nAs of `Repobee 3.0`, installing a plugin is easier than ever. \n\nFirst, make sure that you have the latest version of `Repobee` installed,\ninstructions can be found on the [Repobee website](https://repobee.org/).\n\nTo install `repobee-csvgrades`, simply run the command `repobee plugin install`, and this will open up a bullet-list where you can select csvgrades. \n\n> If `repobee-csvgrades` does not show up when running the `grades record` command. Run `repobee plugin list`, this will present a list with all the availiable plugins. If you cannot find `repobee-csvgrades` in the list, try updating `repobee` using repobee `repobee manage upgrade`.\n\n## Usage\n`repobee-csvgrades` is easy to use and highly customizable. First of all, you\nneed to know how to use a plugin for RepoBee, see the\n[RepoBee plugin docs](https://repobee.readthedocs.io/en/stable/plugins.html).\nThen, there are a few key parts to familiarize yourself with before using it,\nhowever. The following sections explain the command line options in depth. Also\ndon't miss the fact that you can configure all options in the\n[configuration file](#configuration-file-section).\n\n### The grade specification (`--grade-specs` option)\nThe grade specification (or _grade spec_) is the most important part of this\nplugin. Grade specs tell the `grades record` command which issues to consider as\ngrading issues, and which grading issues outweigh others if several are found. A\ntypical grade spec looks like this: `1:P:[Pp]ass`. There are three parts to the\ngrade spec, delimited by `:`. First is the priority. A lower priority outweighs\na higher priority. Second is the symbol that is written to the CSV grades file.\nThird is a regex to match against issue titles. Any issue whos title matches the\nregex is considered a grading issues of that spec.\n\n> **Important:** Your grade spec regexes should _not_ overlap (i.e. be able to\n> match the same strings). If they do, behavior is undefined.\n\nGrade specs are specified by the `--grade-specs` option. Example:\n\n```\n--grade-specs '1:P:[Pp]ass' '2:F:[Ff]ail' '3:C:[Cc]orrection'\n```\n\n### The hook results file (`--hook-results-file` option)\n`grades record` operates on a file with a JSON database produced by the\n`issues list` command (one of RepoBee's core commands). The file is produced by\nsupplying the `--hook-results-file FILEPATH` option to `issues list`. You\nshould additionally supply `issues list` with the `--all` flag, to get both open\nand closed issues (so as to avoid missing grading issues). If you try to use\n`grades record` with a hook results file that's been produced without the\n`--all` flag, it will exit with an error. If you really want to run with that\nfile, you can supply the `--allow-other-states` flag to `grades record`, which\ndisregards how the hook results were collected.\n\nThe hook results file is specified by the `--hook-results-file` option. Example:\n\n```\n--hook-results-file ~/some_course/2019/hook_results_jan.json\n```\n\n### The grades file (`--grades-file` option)\n`grades record` writes grades to a CSV file that we refer to as the _grades\nfile_. Each row represents one student, except for the first row which is a\nheader row. The following requirements are placed on the CSV file format:\n\n* Commas must be used as the delimiter\n* The first line of the file must be a row of headers\n* One of the headers must be `username`, and the column must include the\n  usernames of all students to be graded\n* There must be one column for each master repo, and the header for that column\n  must exactly match the master repo's name\n\nBelow is an example grades file that has been partially filled in by the\n`grades record` command. As it is a CSV file, it is rendered very nicely on\nGitHub (see for example [this test file](/tests/expected_grades.csv)), and it\nis strongly recommended that you keep this file in version control.\n\n```\n            name,username,task-1,task-2,task-3,task-4,task-5,task-6\n    Simon Larsén,  slarse,     P,     P,     F,      ,      ,  \n Richard Glassey, glassey,     P,     P,     P,      ,      ,  \n    Glenn Olsson, glennol,     P,     P,     P,      ,      ,  \n```\n\nThere are a few additional things to keep in mind with the grades file.\n\n* You should not manually edit the file with grade symbols for which there are\n  no grade specifications, as this may cause `grades record` to exit because it\n  can't find a priority for the grade.\n* You can't have a task called `username`.\n* You can't have duplicate column headers.\n* You **can** have any additional columns that you want. `grades record` will\n  only look at the `username` column, and the columns corresponding to the\n  master repo names that you specify when calling the command. Additional\n  columns will simply not be inspected.\n* `grades record` formats the diff file such that every cell of the same column\n  has the same width, which makes diffs easy to inspect.\n  - Because of this formatting, it is recommended to keep grade spec symbols\n    shorter than the master repo names, to avoid resizing of columns when grades\n    are entered.\n\nThe grades file is specified by the `--grades-file` option. Example:\n\n```\n--grades-file ~/some_course/2019/grades.csv\n```\n\n### The edit message file (`--edit-msg-file` option)\nEach time you run `grades record`, a file is produced specifying what new grades\nwere recorded, and tags the teachers who opened the grading issues. The\nintention is that this edit message should be used as a Git commit message. For\nexample, if `slarse` has teacher `ta_a`, and `glassey` has teacher `ta_b`, and\nthey both got new grades for `task-3`, the edit message might look like ths:\n\n```\nRecord grades for task-3\n\n@ta_a\nslarse task-3 F\n\n@ta_b\nglassey task-3 P\n```\n\nThe reason this edit message file exists is that some of our TAs felt a bit\nnervous about not knowing when their reported grades were collected. If this\nedit message is posted as the commit message, every teacher/TA whos grades have\nbeen collected will be notified, and the extra thorough ones can even inspect\nthe diff to make sure everything is OK.\n\nThe destination for the edit message file is specified by the `--edit-msg-file`\noption. Example:\n\n```\n--edit-msg-file edit_msg.txt\n```\n\n### Authorized teachers (`--teachers` option)\nThe `grades record` command requires you to specify a set of teachers that are\nauthorized to open grading issues. This is to avoid having students trick the\nsystem. If an grading issue by an unauthorized user is found, a warning is\nemitted. This is both to alert the user about potential attempts at foul play,\nbut also to help identify teachers that are actually authorized, but have not\nbeen included in the list.\n\nTeachers are specified with the `--teachers` option. Example:\n\n```\n--teachers ta_a ta_b\n```\n\n## Configuration file section\n`repobee-csvgrades` can fetch information from the\n[RepoBee configuration file](https://repobee.readthedocs.io/en/stable/getting_started.html#editing-the-configuration-file-the-wizard-and-show-actions),\nunder the `csvgrades` section. All of the command line options can be\nconfigured. Use the `config wizard` command to configure `csvgrades`.\n\n> **Important:** The plugin must be active when running `config wizard`, or\n> otherwise it will not be configurable. Here, we activate it with `-p\n> csvgrades`.\n\n```\n$ repobee -p csvgrades config wizard\nEditing config file at /home/slarse/.config/repobee/config.ini\nSelect a section to configure:\n repobee\n●csvgrades # make sure to select the csvgrades section to configure\n```\n\nNote that some of the configurable options are lists, such as the `teachers`\nand `grade-specs` options. Simply separate each item in the list with a space,\nlike you would on the commmand line. If an item contains a space (such as a\nregex in a grade spec), the whole item must be surrounded with single quotes.\n\n# License\n`repobee-csvgrades` is released under the MIT license. See [LICENSE](LICENSE)\nfor details.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/slarse/repobee-csvgrades/archive/v0.2.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/slarse/repobee-csvgrades",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "repobee-csvgrades",
    "package_url": "https://pypi.org/project/repobee-csvgrades/",
    "platform": "",
    "project_url": "https://pypi.org/project/repobee-csvgrades/",
    "project_urls": {
      "Download": "https://github.com/slarse/repobee-csvgrades/archive/v0.2.1.tar.gz",
      "Homepage": "https://github.com/slarse/repobee-csvgrades"
    },
    "release_url": "https://pypi.org/project/repobee-csvgrades/0.2.1/",
    "requires_dist": [
      "repobee (>=3.5.0)",
      "dataclasses (>='0.7') ; python_version < \"3.7\"",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "pytest-mock ; extra == 'test'",
      "tox ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "A plugin for reporting grades into a CSV file based on issue titles",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8916506,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2072360d4ca32b5ddaec6893d8487f1318bfe78b378da5c5d2afca8c2ffb43d7",
          "md5": "992acfdff8ef2f95cd578e54c852a55b",
          "sha256": "79f6ddf2be1df4884ad0cae52d9ad63ebc2911640f26205d7dcc49d403d8a6fa"
        },
        "downloads": -1,
        "filename": "repobee_csvgrades-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "992acfdff8ef2f95cd578e54c852a55b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13460,
        "upload_time": "2020-07-15T13:55:38",
        "upload_time_iso_8601": "2020-07-15T13:55:38.585708Z",
        "url": "https://files.pythonhosted.org/packages/20/72/360d4ca32b5ddaec6893d8487f1318bfe78b378da5c5d2afca8c2ffb43d7/repobee_csvgrades-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "198ccf425013f0d4c219366d223526a98232c9a94870d50622422586da3e07f4",
          "md5": "e3536ef683fdc347cfb22d2165203e15",
          "sha256": "41bdcee7474f75d9c7fd1c09292574d7a4c5c4c39eb151c85e36713ed18c65e8"
        },
        "downloads": -1,
        "filename": "repobee-csvgrades-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e3536ef683fdc347cfb22d2165203e15",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14695,
        "upload_time": "2020-07-15T13:55:41",
        "upload_time_iso_8601": "2020-07-15T13:55:41.058460Z",
        "url": "https://files.pythonhosted.org/packages/19/8c/cf425013f0d4c219366d223526a98232c9a94870d50622422586da3e07f4/repobee-csvgrades-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e03a924227e739483c454a2a3eda20c847e6a997e6b0dd2972cdeef73f6daec8",
          "md5": "563e5ada7b3eb1592441712abc6f59da",
          "sha256": "f188b985a4aa375f61004d2b817377d60c9fd31abb9fa6a4d7f6b6287f1dc0a4"
        },
        "downloads": -1,
        "filename": "repobee_csvgrades-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "563e5ada7b3eb1592441712abc6f59da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13471,
        "upload_time": "2020-09-01T12:36:25",
        "upload_time_iso_8601": "2020-09-01T12:36:25.754788Z",
        "url": "https://files.pythonhosted.org/packages/e0/3a/924227e739483c454a2a3eda20c847e6a997e6b0dd2972cdeef73f6daec8/repobee_csvgrades-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5dfff934d5afbe5dbf626ba3ccc55e8f6738413845a6ed1b0861b7de11717676",
          "md5": "70cf9764675cb68c92cbc683a11bc1b6",
          "sha256": "f24c9f679b6ebebb893d62de6cac21a53185bff7cf0d019b3fdf88eaf60f8d85"
        },
        "downloads": -1,
        "filename": "repobee-csvgrades-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "70cf9764675cb68c92cbc683a11bc1b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14851,
        "upload_time": "2020-09-01T12:36:26",
        "upload_time_iso_8601": "2020-09-01T12:36:26.914786Z",
        "url": "https://files.pythonhosted.org/packages/5d/ff/f934d5afbe5dbf626ba3ccc55e8f6738413845a6ed1b0861b7de11717676/repobee-csvgrades-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95e47bc84622ad68e88853d1be6f21c078bb75356559d1eecdb3bef94ffdbb9d",
          "md5": "a193e2155649e803feeeee3547ccf751",
          "sha256": "b5f132f2de5bc291449a4ff223005d21c93756c06287810b32713edd9400d67e"
        },
        "downloads": -1,
        "filename": "repobee_csvgrades-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a193e2155649e803feeeee3547ccf751",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13753,
        "upload_time": "2020-12-16T19:17:38",
        "upload_time_iso_8601": "2020-12-16T19:17:38.888635Z",
        "url": "https://files.pythonhosted.org/packages/95/e4/7bc84622ad68e88853d1be6f21c078bb75356559d1eecdb3bef94ffdbb9d/repobee_csvgrades-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba55d0ec2fb89ab73bfa3e44eaf87bcd682b329977ead2dedca9937aa452949b",
          "md5": "e96e572fa9dd265ebe02549c6bee8411",
          "sha256": "b763b45477f30a194fdc2f303463bd258122126f85adca6286a69828c4c886e9"
        },
        "downloads": -1,
        "filename": "repobee-csvgrades-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e96e572fa9dd265ebe02549c6bee8411",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11432,
        "upload_time": "2020-12-16T19:17:39",
        "upload_time_iso_8601": "2020-12-16T19:17:39.947221Z",
        "url": "https://files.pythonhosted.org/packages/ba/55/d0ec2fb89ab73bfa3e44eaf87bcd682b329977ead2dedca9937aa452949b/repobee-csvgrades-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "95e47bc84622ad68e88853d1be6f21c078bb75356559d1eecdb3bef94ffdbb9d",
        "md5": "a193e2155649e803feeeee3547ccf751",
        "sha256": "b5f132f2de5bc291449a4ff223005d21c93756c06287810b32713edd9400d67e"
      },
      "downloads": -1,
      "filename": "repobee_csvgrades-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a193e2155649e803feeeee3547ccf751",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13753,
      "upload_time": "2020-12-16T19:17:38",
      "upload_time_iso_8601": "2020-12-16T19:17:38.888635Z",
      "url": "https://files.pythonhosted.org/packages/95/e4/7bc84622ad68e88853d1be6f21c078bb75356559d1eecdb3bef94ffdbb9d/repobee_csvgrades-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba55d0ec2fb89ab73bfa3e44eaf87bcd682b329977ead2dedca9937aa452949b",
        "md5": "e96e572fa9dd265ebe02549c6bee8411",
        "sha256": "b763b45477f30a194fdc2f303463bd258122126f85adca6286a69828c4c886e9"
      },
      "downloads": -1,
      "filename": "repobee-csvgrades-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e96e572fa9dd265ebe02549c6bee8411",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11432,
      "upload_time": "2020-12-16T19:17:39",
      "upload_time_iso_8601": "2020-12-16T19:17:39.947221Z",
      "url": "https://files.pythonhosted.org/packages/ba/55/d0ec2fb89ab73bfa3e44eaf87bcd682b329977ead2dedca9937aa452949b/repobee-csvgrades-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}