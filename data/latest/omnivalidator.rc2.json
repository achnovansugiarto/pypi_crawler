{
  "info": {
    "author": "A. Sonrel",
    "author_email": "anthony.sonrel@uzh.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# omniValidator\n\n`omniValidator` is a python module to control file requirements in an Omnibenchmark project. \n\n## Usage\n\nThe following sections assume that your working directory is an Omnibenchmark project associated to an **existing** Omnibenchmark and stage (data, method, metric, etc.).\n\nYou can check [here](https://github.com/ansonrel/omniValidator/tree/main/src/omniValidator/schemas) if the Omnibenchmark you are working on has available validators. \n\nIf you are working with an `Omnibenchmark` object, the main function (`omniValidator.validate_requirements`) can be used without other specifications. \n\n### Display the requirements\n\nThe requirements for a given Omnibenchmark module can be visualized with the following function: \n\n```\nimport omniValidator as ov\nfrom omnibenchmark.utils.build_omni_object import get_omni_object_from_yaml\nfrom omnibenchmark.renku_commands.general import renku_save\n\n## Load config\nomni_obj = get_omni_object_from_yaml('src/config.yaml')\n\n## shows the requirements\nov.display_requirements(omni_obj = omni_obj)\n\n```\n\nwhich will render an html table of the requirements needed for the Omnibenchmark project you are working on. \n\n### Validate required files and JSON files\n\nThe `validate_all` function of `omniValidator` shows you how to check for: \n\n- output files needed for the downstream modules and if they are correctly generated and named\n\n- JSON files that you created and if they are correctly formatted (ie, contain the required fields for downstream projects)\n\n```\nimport omniValidator as ov\nov.validate_all(\n    benchmark = 'omni_batch_py', \n    keyword = 'omni_batch_data', \n    data_folder = 'examples/csf-patients-py/data/csf_patient_py'\n)\n```\n\nwhich will raise an `Exception` if an output file is missing or if a JSON file is badly formatted. \n\n### Validate required files only\n\nThe output files of an Omnibenchmark workflow can be validated by specifying an **`omnibenchmark` object**: \n\n```\nimport omniValidator as ov\nfrom omnibenchmark.utils.build_omni_object import get_omni_object_from_yaml\nfrom omnibenchmark.renku_commands.general import renku_save\n\n## Load config\nomni_obj = get_omni_object_from_yaml('src/config.yaml')\n\n## Validates the output mapping\nov.validate_requirements(omni_obj = omni_obj)\n\n```\n\nWhich will return a boolean (`True`) if valid and an `Exception` error if some output are missing. \n\nIf multiple output are detected, you will get a warning message such as below: \n\n```\n.../omniValidator/src/omniValidator/core.py:119: UserWarning: Multiple files associated to counts.*mtx.gz:\n['csf_patient_py_counts (copy).mtx.gz', 'csf_patient_py_counts.mtx.gz']\n```\n\nIt is highly advised to check your workflow if this happens as it might create issues in downstream steps. \n\nThe output files of an Omnibenchmark workflow can also be validated with **manual specifications, assuming that the output files were already generated**: \n\n```\nimport omniValidator as ov\nov.validate_requirements(\n    benchmark = 'omni_batch_py', \n    keyword = 'omni_batch_data', \n    data_folder = 'examples/csf-patients-py/data/csf_patient_py'\n)\n```\n\nValidation requirements can be accessed on the [official repo of the module](https://github.com/omnibenchmark/omniValidator/tree/main/src/omniValidator/schemas). \n\n### Validate JSON files only\n\nJSON files contain metadata and are used in most Omnibenchmark projects. The content and structure of JSON files  can be validated as follows: \n\n\n```\nimport omniValidator as ov\n\n## Retrieve the schema validator associated with your project\nsch = ov.get_schema(\n    benchmark = 'omni_batch_py', \n    keyword = 'omni_batch_data', \n    ftype = 'data_info'\n)\n## Validate your JSON file\nov.validate_json_file(\n    json_input_path = 'examples/csf-patients-py/data/csf_patient_py/csf_patient_py_data_info_CORRECT.json', \n    json_schema_path = sch\n)\n```\n\nWhich returns a boolean (`True`) if your JSON is valid. \n\n## How to modify requirements\n\nYou can modify existing requirements/ JSON schemas or add new ones using pull requests or by opening an issue on the Github page of the module. \n\nAll schemas and requirements are in the [`src/omniValidator/schemas`](https://github.com/ansonrel/omniValidator/tree/main/src/omniValidator/schemas) folder of the module. \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/omnibenchmark/omniValidator",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "omniValidator",
    "package_url": "https://pypi.org/project/omniValidator/",
    "platform": null,
    "project_url": "https://pypi.org/project/omniValidator/",
    "project_urls": {
      "Homepage": "https://github.com/omnibenchmark/omniValidator"
    },
    "release_url": "https://pypi.org/project/omniValidator/0.0.15/",
    "requires_dist": [
      "jsonref (>=1.0.1)",
      "jsonschema (>=4.17.3)",
      "json2table (>=1.1.5)"
    ],
    "requires_python": ">=3.7",
    "summary": "Validator of output files for Omnibencharmk.",
    "version": "0.0.15",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16870749,
  "releases": {
    "0.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4a8576e163717c8a49cabf66579858e06266945801ca518e89a56352902a857",
          "md5": "46b67b1a7f053c0b6a4c0290e60b25f5",
          "sha256": "95bf56e8b0b7b10be7fe2b46740bbb990faa2cdc61e33f3c6abdba841aae7da3"
        },
        "downloads": -1,
        "filename": "omniValidator-0.0.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46b67b1a7f053c0b6a4c0290e60b25f5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 15976,
        "upload_time": "2023-02-13T14:30:00",
        "upload_time_iso_8601": "2023-02-13T14:30:00.867462Z",
        "url": "https://files.pythonhosted.org/packages/d4/a8/576e163717c8a49cabf66579858e06266945801ca518e89a56352902a857/omniValidator-0.0.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "300e1e4812fe13bd9219245017fbc37abf28747b947f3452e85a0e033ef11961",
          "md5": "ec302d6bfa22f6b14a707d32c3d554ff",
          "sha256": "b98b858e961080ebe9f1815a1bcf9872be909820efada3baba52160d1b295ebf"
        },
        "downloads": -1,
        "filename": "omniValidator-0.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "ec302d6bfa22f6b14a707d32c3d554ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15580,
        "upload_time": "2023-02-13T14:30:02",
        "upload_time_iso_8601": "2023-02-13T14:30:02.930741Z",
        "url": "https://files.pythonhosted.org/packages/30/0e/1e4812fe13bd9219245017fbc37abf28747b947f3452e85a0e033ef11961/omniValidator-0.0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31e3f63edcf6da139dbbbf70437163e6d2e1a598141949413c91bb02919acad1",
          "md5": "9fa02595d8f4c2fa4c68ba5ab2ba84be",
          "sha256": "97b8695025d3cd92898a94e7b1614ad66c85eb1ff74e5c357cb9a83f968c6460"
        },
        "downloads": -1,
        "filename": "omniValidator-0.0.15-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9fa02595d8f4c2fa4c68ba5ab2ba84be",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 17362,
        "upload_time": "2023-02-15T12:36:10",
        "upload_time_iso_8601": "2023-02-15T12:36:10.223553Z",
        "url": "https://files.pythonhosted.org/packages/31/e3/f63edcf6da139dbbbf70437163e6d2e1a598141949413c91bb02919acad1/omniValidator-0.0.15-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1320018141e262c6e8942579ddfb1996239d379bdd666d5997ca95d4df5da2bc",
          "md5": "4ea6e16eb41beb4842339c5f3e858a21",
          "sha256": "a3d829edcaa677a88449ca1b1bf3cae7b908cc8acf5f64fbb22c891dd5580340"
        },
        "downloads": -1,
        "filename": "omniValidator-0.0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "4ea6e16eb41beb4842339c5f3e858a21",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17042,
        "upload_time": "2023-02-15T12:36:12",
        "upload_time_iso_8601": "2023-02-15T12:36:12.573464Z",
        "url": "https://files.pythonhosted.org/packages/13/20/018141e262c6e8942579ddfb1996239d379bdd666d5997ca95d4df5da2bc/omniValidator-0.0.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "31e3f63edcf6da139dbbbf70437163e6d2e1a598141949413c91bb02919acad1",
        "md5": "9fa02595d8f4c2fa4c68ba5ab2ba84be",
        "sha256": "97b8695025d3cd92898a94e7b1614ad66c85eb1ff74e5c357cb9a83f968c6460"
      },
      "downloads": -1,
      "filename": "omniValidator-0.0.15-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9fa02595d8f4c2fa4c68ba5ab2ba84be",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 17362,
      "upload_time": "2023-02-15T12:36:10",
      "upload_time_iso_8601": "2023-02-15T12:36:10.223553Z",
      "url": "https://files.pythonhosted.org/packages/31/e3/f63edcf6da139dbbbf70437163e6d2e1a598141949413c91bb02919acad1/omniValidator-0.0.15-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1320018141e262c6e8942579ddfb1996239d379bdd666d5997ca95d4df5da2bc",
        "md5": "4ea6e16eb41beb4842339c5f3e858a21",
        "sha256": "a3d829edcaa677a88449ca1b1bf3cae7b908cc8acf5f64fbb22c891dd5580340"
      },
      "downloads": -1,
      "filename": "omniValidator-0.0.15.tar.gz",
      "has_sig": false,
      "md5_digest": "4ea6e16eb41beb4842339c5f3e858a21",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 17042,
      "upload_time": "2023-02-15T12:36:12",
      "upload_time_iso_8601": "2023-02-15T12:36:12.573464Z",
      "url": "https://files.pythonhosted.org/packages/13/20/018141e262c6e8942579ddfb1996239d379bdd666d5997ca95d4df5da2bc/omniValidator-0.0.15.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}