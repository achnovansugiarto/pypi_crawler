{
  "info": {
    "author": "HERA Team",
    "author_email": "hera-sw@lists.berkeley.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering"
    ],
    "description": "hera_mc\n=======\n\n![](https://github.com/HERA-Team/hera_mc/workflows/Run%20Tests/badge.svg?branch=master)\n[![codecov](https://codecov.io/gh/HERA-Team/hera_mc/branch/master/graph/badge.svg)](https://codecov.io/gh/HERA-Team/hera_mc)\n\nThis is the main repository for HERA's monitor and control subsystems.\n\nThe HERA M&C system contains two primary types of tables and data:\n\n- **Configuration Management**: This is the information about how all the hardware in\nthe telescope is connected together. This is a fairly small dataset and is only updated\nwhen people change things. This data can be useful for users to have locally to be\nable to identify how things are connected together. The actual data is stored in a\nseparate repository, `hera_cm_db_updates`. If you only need configuration management\ndata, you can do a relatively light-weight install of `hera_mc` and import the data\nfrom that repo using SQLITE (which comes installed on many operating systems including\nMacs).\n- **Real-time monitoring**: This is the information about how the telescope is\noperating. It includes information about commanded and actual settings of the various\nsystems as well as telemetry like temperatures. This is fairly large data and is\navailable onsite or at NRAO (based on a copy of the database that is refreshed weekly)\nin an online PostgreSQL server. Much of this data can also be viewed in various\ndashboards (including via grafana) linked from https://heranow.reionization.org.\n\n# Documentation\n\nA detailed description of the monitor and control system and the database schema can be\nfound in our [description document](https://github.com/HERA-Team/hera_mc/blob/main/docs/mc_definition.pdf).\n\n# Installation\n\nSimple installation via pip is available for users, developers should follow\nthe directions under [Developer Installation](#developer-installation) below.\n\nFor simple installation, the latest stable version is available via pip\n(```pip install hera_mc```).\n\nThere are some optional dependencies that are required for specific functionality,\nwhich will not be installed automatically by pip.\nSee [Dependencies](#dependencies) for details on installing optional dependencies.\n\nIf you want to use the configuration management information and connect to either an\nSQLITE or PostgreSQL database, follow the detailed installation\ninstructions in [database_setup.md](https://github.com/HERA-Team/hera_mc/blob/main/database_setup.md).\n\n\n## Dependencies\nThe required dependencies are:\n- alembic\n- astropy\n- numpy\n- psycopg2\n- pyyaml\n- redis-py\n- setuptools_scm\n- sqlalchemy\n\nthe optional dependencies are:\n- cartopy\n- h5py\n- pandas\n- psutil\n- python-dateutil\n- pyuvdata\n- tabulate\n- tornado\n\nWe suggest using conda to install all the dependencies.\n\nIf you do not want to use conda, the packages are also available on PyPI. You can\ninstall the optional dependencies via pip by specifying an option\nwhen you install hera_mc, as in ```pip install hera_mc[sqlite]```\nwhich will install all the required packages for using the lightweight configuration\nmanagement tools. The options that can be passed in this way are:\n[`sqlite`, `all`, `dev`]. The `all` option will install all optional\ndependencies, `dev` adds packages that may be useful for developers.\n\n## Developer Installation\n\nClone the repository using\n```git clone https://github.com/HERA-Team/hera_mc```\n\nNavigate into the hera_mc directory and run `pip install .`\n(note that `python setup.py install` does not work).\nNote that this will attempt to automatically install any missing dependencies.\nIf you use conda or another package manager you might prefer to first install\nthe dependencies as described in [Dependencies](#dependencies).\n\nTo install without dependencies, run `pip install --no-deps .`\n\nIf you want to do development on hera_mc, in addition to the other dependencies\nyou will need the following packages:\n\n* pytest\n* pytest-cov\n* coverage\n* pre-commit\n\nOne way to ensure you have all the needed packages is to use the included\n`environment.yaml` file to create a new environment that will contain all the optional\ndependencies along with dependencies required development\n(```conda env create -f environment.yaml```). Alternatively, you can specify `dev` when\ninstalling hera_mc (as in `pip install hera_mc[dev]`) to install the packages needed\nfor development.\n\nTo use pre-commit to prevent committing code that does not follow our style, you'll\nneed to run `pre-commit install` in the top level `hera_mc` directory.\n\nFor more instructions for developers, especially related to working with the database\nand schema changes, see the [Developer Instructions](https://github.com/HERA-Team/hera_mc/blob/main/docs/developer.md).\n\n# Tests\n\nUses the `pytest` package to execute test suite. From the source hera_mc directory run\n``pytest``.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/HERA-Team/hera_mc",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hera-mc",
    "package_url": "https://pypi.org/project/hera-mc/",
    "platform": null,
    "project_url": "https://pypi.org/project/hera-mc/",
    "project_urls": {
      "Homepage": "https://github.com/HERA-Team/hera_mc"
    },
    "release_url": "https://pypi.org/project/hera-mc/3.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "hera_mc: HERA monitor and control",
    "version": "3.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13937614,
  "releases": {
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffddb5bd58bb2d9ba55f817786e2112fcc5a87e45f0775adbcb125ebe12c92e1",
          "md5": "08721e525ef441571325e91de4980355",
          "sha256": "c093f0b5ae44a80ac021dd4deb19abf35b02da82f165565e0f66dcfd0ec3be86"
        },
        "downloads": -1,
        "filename": "hera_mc-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "08721e525ef441571325e91de4980355",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18710300,
        "upload_time": "2022-05-02T16:17:14",
        "upload_time_iso_8601": "2022-05-02T16:17:14.968412Z",
        "url": "https://files.pythonhosted.org/packages/ff/dd/b5bd58bb2d9ba55f817786e2112fcc5a87e45f0775adbcb125ebe12c92e1/hera_mc-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f30a05dfc610bc2d9af1ab5351e3f2dd581b1ef0db451051dc044061ba072f3c",
          "md5": "0a4ddcb13900fdae83b0eae92f61012a",
          "sha256": "347da94e5891351ea0e2efc66ed19248bd77f9364b7bcf1ea297f18577c26b07"
        },
        "downloads": -1,
        "filename": "hera_mc-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0a4ddcb13900fdae83b0eae92f61012a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19721617,
        "upload_time": "2022-05-02T16:18:39",
        "upload_time_iso_8601": "2022-05-02T16:18:39.553287Z",
        "url": "https://files.pythonhosted.org/packages/f3/0a/05dfc610bc2d9af1ab5351e3f2dd581b1ef0db451051dc044061ba072f3c/hera_mc-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e93aa2df9bf601b329623eca3795c9ad193eefcaf433af74c63f9bb18cc7493",
          "md5": "0c6e9da49935f359f139e8e1404dcc03",
          "sha256": "586030027200e316f7ac659f9170be914234ac97ec3f67c392512074b2bc5f6f"
        },
        "downloads": -1,
        "filename": "hera_mc-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0c6e9da49935f359f139e8e1404dcc03",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12378948,
        "upload_time": "2022-05-25T20:15:54",
        "upload_time_iso_8601": "2022-05-25T20:15:54.545358Z",
        "url": "https://files.pythonhosted.org/packages/3e/93/aa2df9bf601b329623eca3795c9ad193eefcaf433af74c63f9bb18cc7493/hera_mc-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3e93aa2df9bf601b329623eca3795c9ad193eefcaf433af74c63f9bb18cc7493",
        "md5": "0c6e9da49935f359f139e8e1404dcc03",
        "sha256": "586030027200e316f7ac659f9170be914234ac97ec3f67c392512074b2bc5f6f"
      },
      "downloads": -1,
      "filename": "hera_mc-3.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0c6e9da49935f359f139e8e1404dcc03",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12378948,
      "upload_time": "2022-05-25T20:15:54",
      "upload_time_iso_8601": "2022-05-25T20:15:54.545358Z",
      "url": "https://files.pythonhosted.org/packages/3e/93/aa2df9bf601b329623eca3795c9ad193eefcaf433af74c63f9bb18cc7493/hera_mc-3.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}