{
  "info": {
    "author": "Carlos A. Rodriguez",
    "author_email": "carlos.rodriguez@protonmail.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "========\r\ndatakick\r\n========\r\n\r\n.. image:: https://travis-ci.org/carlos-a-rodriguez/datakick.svg?branch=master\r\n    :target: https://travis-ci.org/carlos-a-rodriguez/datakick\r\n\r\ndatakick is a python wrapper for the `Datakick <https://www.datakick.org>`_\r\nopen product database API.\r\n\r\nUsage\r\n=====\r\n\r\nInstallation:\r\n-------------\r\n::\r\n\r\n    python setup.py install\r\n\r\nor\r\n\r\n::\r\n\r\n    pip install datakick\r\n\r\nSample Code:\r\n------------\r\nFirst import the module:\r\n\r\n.. code-block:: python\r\n\r\n    >>> import datakick\r\n\r\nSearch for products by barcode:\r\n\r\n.. code-block:: python\r\n\r\n    >>> gtin14 = \"037000062219\"\r\n    >>> product = datakick.find_product(gtin14)\r\n    >>> print(\"{} - {}\".format(product.brand_name, product.name))\r\n    'Crest Pro-Health Clean Mint Toothpaste'\r\n\r\nSearch for products with a key:\r\n\r\n.. code-block:: python\r\n\r\n    >>> products = datakick.search(\"Toothpaste\")\r\n    >>> for product in products:\r\n    ...    print(\"{} - {}\".format(product.brand_name, product.name))\r\n    'Crest Pro-Health Clean Mint Toothpaste'\r\n    'Sensodyne Fresh Impact Toothpaste'\r\n    # etc.\r\n\r\nAdd/modify products in the database:\r\n\r\n.. code-block:: python\r\n\r\n    >>> gtin14 = \"011110491503\"\r\n    >>> product = datakick.add_product(\r\n    ... gtin14, brand_name=\"Big K\", name=\"Diet Cola\", size=\"355mL\"\r\n    ... )\r\n\r\n    >>> print(\"{} - {} - {}\".format(\r\n    ... product.brand_name, product.name, product.size)\r\n    ... )\r\n    'Big K Diet Cola 355mL'\r\n\r\nAdd images to products in the database:\r\n\r\n.. code-block:: python\r\n\r\n    >>> gtin14 = \"011110491503\"\r\n    >>> img_path = \"path/to/your/image/cola.jpg\"  # only .jpg or .jpeg allowed!\r\n    >>> img_url = datakick.add_image(gtin14, img_path)\r\n\r\n    >>> print(img_url)\r\n    'https://d2b9vdin3yve6y.cloudfront.net/1a888191-e530-4d55-a871-00a0994d75c0.jpg'\r\n\r\nList the products (on a page):\r\n\r\n.. code-block:: python\r\n\r\n    >>> products = datakick.list_products(5)  # each page returns 100 products\r\n\r\n    >>> for product in products:\r\n    ...     print(product.gtin14)\r\n    '016000437692'\r\n    '016000439894'\r\n    # etc.\r\n\r\nOptional Parameters for Adding/Modifying a product:\r\n---------------------------------------------------\r\n\r\n======================  =========    ========== ========================\r\nOptional Parameters     Type         Units      Example\r\n======================  =========    ========== ========================\r\nname                    string       n/a        \"Toothpaste\"\r\nbrand_name              string       n/a        \"Colgate\"\r\nsize                    string       n/a        \"20oz\"\r\ningredients             string       n/a        \"Milk, Chocolate, Sugar\"\r\nserving_size            string       n/a        \"2 tbsp.\"\r\nservings_per_container  string       n/a        \"2 cookies\"\r\ncalories                int          n/a        200\r\nfat_calories            int          n/a        100\r\nfat                     int/float    grams      10\r\nsaturated_fat           int/float    grams      10\r\ntrans_fat               int/float    grams      0\r\npolyunsaturated_fat     int/float    grams      5\r\nmonounsaturated_fat     int/float    grams      5\r\ncholesterol             int          milligrams 20\r\nsodium                  int          milligrams 40\r\npotassium               int          milligrams 60\r\ncarbohydrate            int          grams      20\r\nfiber                   int          grams      10\r\nsugars                  int          grams      6\r\nprotein                 int          grams      4\r\nauthor                  string       n/a        \"First M. Last\"\r\npublisher               string       n/a        \"MyPublisher\"\r\npages                   int          n/a        400\r\nalcohol_by_volume       int/float    percent    20\r\n======================  =========    ========== ========================\r\n\r\nExceptions:\r\n-----------\r\n\r\n- **datakick.exceptions.ImageTooLarge** - Will be thrown if the image provided to datakick.add_image is too large (>1MB)\r\n\r\n- **datakick.exceptions.InvalidImageFormat** - Will be thrown if the image provided to datakick.add_image is of the wrong file format (only .jpg or .jpeg allowed).\r\n\r\n- **requests.exceptions.HTTPError** - Will be thrown if the gtin14 provided is invalid or not found in the product database.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/carlos-a-rodriguez/datakick",
    "keywords": "datakick barcode upc ean product",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "datakick",
    "package_url": "https://pypi.org/project/datakick/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/datakick/",
    "project_urls": {
      "Homepage": "https://github.com/carlos-a-rodriguez/datakick"
    },
    "release_url": "https://pypi.org/project/datakick/0.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Initial Release",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1967000,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5457769e81d83a8f3f46114a5cd98d4ac56b859295d835307a7b2375dc61405",
          "md5": "aa5f311496fa013e402fb1fc405ad782",
          "sha256": "52be2b72a3089ed4c31c8aba23b807b0840260c917259a6c36d95242e5e24761"
        },
        "downloads": -1,
        "filename": "datakick-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aa5f311496fa013e402fb1fc405ad782",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6034,
        "upload_time": "2016-02-20T18:38:53",
        "upload_time_iso_8601": "2016-02-20T18:38:53.357571Z",
        "url": "https://files.pythonhosted.org/packages/a5/45/7769e81d83a8f3f46114a5cd98d4ac56b859295d835307a7b2375dc61405/datakick-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5457769e81d83a8f3f46114a5cd98d4ac56b859295d835307a7b2375dc61405",
        "md5": "aa5f311496fa013e402fb1fc405ad782",
        "sha256": "52be2b72a3089ed4c31c8aba23b807b0840260c917259a6c36d95242e5e24761"
      },
      "downloads": -1,
      "filename": "datakick-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "aa5f311496fa013e402fb1fc405ad782",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6034,
      "upload_time": "2016-02-20T18:38:53",
      "upload_time_iso_8601": "2016-02-20T18:38:53.357571Z",
      "url": "https://files.pythonhosted.org/packages/a5/45/7769e81d83a8f3f46114a5cd98d4ac56b859295d835307a7b2375dc61405/datakick-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}