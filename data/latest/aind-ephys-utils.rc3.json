{
  "info": {
    "author": "Allen Institute for Neural Dynamics",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "# aind-ephys-utils\n\n[![License](https://img.shields.io/badge/license-MIT-brightgreen)](LICENSE)\n![Code Style](https://img.shields.io/badge/code%20style-black-black)\n[![semantic-release: angular](https://img.shields.io/badge/semantic--release-angular-e10079?logo=semantic-release)](https://github.com/semantic-release/semantic-release)\n\nHelpful methods for exploring *in vivo* electrophysiology data.\n\n## Installation\n\n### For users\n\n```bash\npip install aind-ephys-utils\n```\n\n### For developers\n\nFirst, clone the repository. Then, from the `aind-ephys-utils` directory, run:\n\n```bash\npip install -e .[dev]\n```\n\n**Note:** On recent versions of macOS, you'll need to put the last argument in quotation marks: `\".[dev]\"`\n\n## Contributing\n\n### Linters and testing\n\nThere are several libraries used to run linters, check documentation, and run tests.\n\n- Please test your changes using the **coverage** library, which will run the tests and log a coverage report:\n\n```bash\ncoverage run -m unittest discover && coverage report\n```\n\n- Use **interrogate** to check that modules, methods, etc. have been documented thoroughly:\n\n```bash\ninterrogate .\n```\n\n- Use **black** to automatically format the code into PEP standards:\n```bash\nblack .\n```\n\n- Use **flake8** to check that code is up to standards (no unused imports, etc.):\n```bash\nflake8 .\n```\n\n- Use **isort** to automatically sort import statements:\n```bash\nisort .\n```\n\n### Pull requests\n\nFor internal members, please create a branch. For external members, please fork the repository and open a pull request from the fork. We'll primarily use [Angular](https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit) style for commit messages. Roughly, they should follow the pattern:\n```text\n<type>(<scope>): <short summary>\n```\n\nwhere scope (optional) describes the packages affected by the code changes and type (mandatory) is one of:\n\n- **build**: Changes that affect build tools or external dependencies (example scopes: pyproject.toml, setup.py)\n- **ci**: Changes to our CI configuration files and scripts (examples: .github/workflows/ci.yml)\n- **docs**: Documentation only changes\n- **feat**: A new feature\n- **fix**: A bugfix\n- **perf**: A code change that improves performance\n- **refactor**: A code change that neither fixes a bug nor adds a feature\n- **test**: Adding missing tests or correcting existing tests\n\n### Documentation\nTo generate the rst files source files for documentation, run\n```bash\nsphinx-apidoc -o doc_template/source/ src/aind_ephys_utils\n```\nThen to create the documentation HTML files, run\n```bash\nsphinx-build -b html doc_template/source/ doc_template/build/html\n```\nMore info on sphinx installation can be found [here](https://www.sphinx-doc.org/en/master/usage/installation.html).\n\n\n## Developing in Code Ocean\n\nMembers of the Allen Institute for Neural Dynamics can follow these steps to create a Code Ocean capsule from this repository:\n\n1. Click the **‚®Å New Capsule** button and select \"Clone from AllenNeuralDynamics\"\n2. Type in `aind-ephys-utils` and click \"Clone\" (this step requires that your GitHub credentials are configured properly)\n3. Select a Python base image, and optionally change the compute resources\n4. Attach data to the capsule and any dependencies needed to load it (e.g. `pynwb`, `hdmf-zarr`)\n5. Add plotting dependencies (e.g. `ipympl`, `plotly`)\n6. Launch a Visual Studio Code cloud workstation\n\nInside Visual Studio Code, select \"New Terminal\" from the \"Terminal\" menu and run the following commands:\n\n```bash\n$ pip install -e .[dev]\n$ git checkout -b <name of feature branch>\n```\n\nNow, you can create Jupyter notebooks in the \"code\" directory that can be used to test out new functions before updating the library. When prompted, install the \"Python\" extensions to be able to execute notebook cells.\n\nOnce you've finished writing your code and tests, run the following commands:\n\n```bash\n$ coverage run -m unittest discover && coverage report\n$ interrogate . \n$ black .\n$ flake8 .\n$ isort .\n```\n\nAssuming all of these pass, you're ready to push your changes:\n\n```bash\n$ git add <files to add>\n$ git commit -m \"Commit message\"\n$ git push -u origin <name of feature branch>\n```\n\nAfter doing this, you can open a pull request on GitHub.\n\nNote that `git` will only track files inside the `aind-ephys-utils` directory, and will ignore everything else in the capsule. You will no longer be able to commit changes to the capsule itself, which is why this workflow should only be used for developing a library, and not for performing any type of data analysis.\n\nWhen you're done working, it's recommended to put the workstation on hold rather than shutting it down, in order to keep Visual Studio Code in the same state.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aind-ephys-utils",
    "package_url": "https://pypi.org/project/aind-ephys-utils/",
    "platform": null,
    "project_url": "https://pypi.org/project/aind-ephys-utils/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/aind-ephys-utils/0.0.15/",
    "requires_dist": [
      "xarray",
      "black ; extra == 'dev'",
      "coverage ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "interrogate ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "Sphinx ; extra == 'dev'",
      "furo ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "Utilities library for aind ephys team.",
    "version": "0.0.15",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17101257,
  "releases": {
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2c0b861ae3c2145f1177199353d08268ddbdc53e2386c30d976bafd817b540a",
          "md5": "da62890a2b76f3fff6368008aba6f8ff",
          "sha256": "7b30750ae5852a755094abd78e0ff0a52fc5303d6c98cac96982bab8da1c9558"
        },
        "downloads": -1,
        "filename": "aind_ephys_utils-0.0.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "da62890a2b76f3fff6368008aba6f8ff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7693,
        "upload_time": "2023-02-16T00:29:32",
        "upload_time_iso_8601": "2023-02-16T00:29:32.144821Z",
        "url": "https://files.pythonhosted.org/packages/e2/c0/b861ae3c2145f1177199353d08268ddbdc53e2386c30d976bafd817b540a/aind_ephys_utils-0.0.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "edd9782d1fc6ac4856692117936fccdc984b085787806b951814a6b8b449c16c",
          "md5": "ad0e7f21072e910eab1f3d1a0ddb6435",
          "sha256": "0f85207a716e363106873b7d82a3c1ce6577e5071d8d734f83d908eb2ddd1414"
        },
        "downloads": -1,
        "filename": "aind_ephys_utils-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "ad0e7f21072e910eab1f3d1a0ddb6435",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 37994,
        "upload_time": "2023-02-16T00:29:33",
        "upload_time_iso_8601": "2023-02-16T00:29:33.909699Z",
        "url": "https://files.pythonhosted.org/packages/ed/d9/782d1fc6ac4856692117936fccdc984b085787806b951814a6b8b449c16c/aind_ephys_utils-0.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39e0c9af95d5d8cd4ec0acb845ee23d0e07dfc809322010c2b01c422538deac0",
          "md5": "e8a92a0192351b19c8889aba3fe3b081",
          "sha256": "196464f9e9fe0651f5d9bcf62a27b13c232df7b1ef4cd3c1489fcfc1897ed02a"
        },
        "downloads": -1,
        "filename": "aind_ephys_utils-0.0.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e8a92a0192351b19c8889aba3fe3b081",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7752,
        "upload_time": "2023-02-16T01:26:43",
        "upload_time_iso_8601": "2023-02-16T01:26:43.893616Z",
        "url": "https://files.pythonhosted.org/packages/39/e0/c9af95d5d8cd4ec0acb845ee23d0e07dfc809322010c2b01c422538deac0/aind_ephys_utils-0.0.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae907da9f2acbc138acae5986ecbb2910566f6a2207765e12c20b51cb0b576b1",
          "md5": "c3cda1f687108f46c5062b22983d9a08",
          "sha256": "71f9302aafd7c4bc948796449c1dc14955b828269ec550699c89640a5d988106"
        },
        "downloads": -1,
        "filename": "aind_ephys_utils-0.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "c3cda1f687108f46c5062b22983d9a08",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 38124,
        "upload_time": "2023-02-16T01:26:49",
        "upload_time_iso_8601": "2023-02-16T01:26:49.645383Z",
        "url": "https://files.pythonhosted.org/packages/ae/90/7da9f2acbc138acae5986ecbb2910566f6a2207765e12c20b51cb0b576b1/aind_ephys_utils-0.0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed9cafd00edc1eda384ee38686923fe8f00e3cf5c1b9e81c4d6a74d06f44920c",
          "md5": "9a1b3c2ea35fd416a28c9c48eab12f18",
          "sha256": "9157145509862525ebb09a5333200b6ce21a5322faaa7c011ef0c1112e97125a"
        },
        "downloads": -1,
        "filename": "aind_ephys_utils-0.0.15-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a1b3c2ea35fd416a28c9c48eab12f18",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8262,
        "upload_time": "2023-02-28T20:51:24",
        "upload_time_iso_8601": "2023-02-28T20:51:24.669856Z",
        "url": "https://files.pythonhosted.org/packages/ed/9c/afd00edc1eda384ee38686923fe8f00e3cf5c1b9e81c4d6a74d06f44920c/aind_ephys_utils-0.0.15-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a5e019792306c5f57e97dfc2b92854c4c3762bd55cf490e1fc1faaa931c39c6",
          "md5": "cf70dfc32484c9879f1640c0454fd71b",
          "sha256": "22863361dbb546d5977a8b1ff2beedd7dc22c31b29b1be37e258eee207a54cba"
        },
        "downloads": -1,
        "filename": "aind_ephys_utils-0.0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "cf70dfc32484c9879f1640c0454fd71b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 39069,
        "upload_time": "2023-02-28T20:51:26",
        "upload_time_iso_8601": "2023-02-28T20:51:26.277942Z",
        "url": "https://files.pythonhosted.org/packages/6a/5e/019792306c5f57e97dfc2b92854c4c3762bd55cf490e1fc1faaa931c39c6/aind_ephys_utils-0.0.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ed9cafd00edc1eda384ee38686923fe8f00e3cf5c1b9e81c4d6a74d06f44920c",
        "md5": "9a1b3c2ea35fd416a28c9c48eab12f18",
        "sha256": "9157145509862525ebb09a5333200b6ce21a5322faaa7c011ef0c1112e97125a"
      },
      "downloads": -1,
      "filename": "aind_ephys_utils-0.0.15-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9a1b3c2ea35fd416a28c9c48eab12f18",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 8262,
      "upload_time": "2023-02-28T20:51:24",
      "upload_time_iso_8601": "2023-02-28T20:51:24.669856Z",
      "url": "https://files.pythonhosted.org/packages/ed/9c/afd00edc1eda384ee38686923fe8f00e3cf5c1b9e81c4d6a74d06f44920c/aind_ephys_utils-0.0.15-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6a5e019792306c5f57e97dfc2b92854c4c3762bd55cf490e1fc1faaa931c39c6",
        "md5": "cf70dfc32484c9879f1640c0454fd71b",
        "sha256": "22863361dbb546d5977a8b1ff2beedd7dc22c31b29b1be37e258eee207a54cba"
      },
      "downloads": -1,
      "filename": "aind_ephys_utils-0.0.15.tar.gz",
      "has_sig": false,
      "md5_digest": "cf70dfc32484c9879f1640c0454fd71b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 39069,
      "upload_time": "2023-02-28T20:51:26",
      "upload_time_iso_8601": "2023-02-28T20:51:26.277942Z",
      "url": "https://files.pythonhosted.org/packages/6a/5e/019792306c5f57e97dfc2b92854c4c3762bd55cf490e1fc1faaa931c39c6/aind_ephys_utils-0.0.15.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}