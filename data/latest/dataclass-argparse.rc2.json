{
  "info": {
    "author": "Fynn Beuttenm√ºller",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# dataclass-argparse\nDefine command line arguments as type annotated namespace dataclasses.\n\nAdvantages:\n - fast, straight forward definition of command line arguments\n - use inheritance to combine argument groups \n - use inheritance to define sub-parsers\n - keep your parsed args in one joined (or several separate) namespace dataclass instances \n\n# Example 1: group arguments with inheritance; parse jointly\n```python\nfrom dataclasses import dataclass, field\nfrom typing import Tuple\n\nfrom dataclass_argparse import NonEmptyList, TypedNamespace\n\n\n@dataclass\nclass ArgsA(TypedNamespace):\n    a1: int = 1\n    a2: NonEmptyList[int] = field(default_factory=lambda: [1], metadata={\"help\": \"help for a2.\"})\n\n\n@dataclass\nclass ArgsB(TypedNamespace):\n    b1: str = field(metadata={\"metavar\": \"REQ_B1\"})\n    b2: bool = False\n    b3: Tuple[int, int] = field(default=(1, 2), metadata=dict(help=\"help for b3.\"))\n\n\n@dataclass\nclass Args(ArgsA, ArgsB):\n    pass\n\n\ndef func_a(args: ArgsA):\n    print(\"func a\", args.a1, args.a2)\n\n\ndef func_b(args: ArgsB):\n    print(\"func b\", args.b1, args.b2, args.b3)\n\n\ndef func_c(args: Args):\n    print(\"func a\", args.a1, args.a2)\n    print(\"func b\", args.b1, args.b2, args.b3)\n\n\nparser = Args.get_parser_grouped_by_parents()\n\nif __name__ == \"__main__\":\n    parsed_args = parser.parse_args()\n\n    parser.print_help()\n\n    func_a(parsed_args)\n    func_b(parsed_args)\n    func_c(parsed_args)\n\n```\n\n# Example 2: group arguments with argparse; parse groups separately\n```python\nimport argparse\nfrom dataclasses import dataclass, field\nfrom typing import ClassVar\n\nfrom dataclass_argparse import NonEmptyList, TypedNamespace\n\n\n@dataclass\nclass ArgsA(TypedNamespace):\n    a1: ClassVar[int] = 1\n    a2: NonEmptyList[int] = field(default_factory=lambda: [1], metadata={\"help\": \"help for a2.\"})\n\n\nparser_a = ArgsA.get_parser(\"group A\")\n\n\ndef func_a(args: ArgsA):\n    print(\"func a\", args.a1, args.a2)\n\n\n@dataclass\nclass ArgsB(TypedNamespace):\n    b1: str = field(metadata={\"metavar\": \"REQ_B1\"})\n    b2: bool = False\n\n\nparser_b = ArgsB.get_parser(\"group B\")\n\n\ndef func_b(args: ArgsB):\n    print(\"func b\", args.b1, args.b2)\n\n\n# join created parsers with argparse\njoint_parser = argparse.ArgumentParser(parents=[parser_a, parser_b], add_help=False)\n# arguments used directly (not part of a typed namespace groups)\ngeneral_args = joint_parser.add_argument_group(\"General\")\ngeneral_args.add_argument(\"-h\", \"--help\", action=\"help\", help=\"show this help message and exit\")\n\n\nif __name__ == \"__main__\":\n    joint_parser.parse_args()  # show help/complain about missing/unknown args, but ignore parse args\n\n    # parse args\n    args_a, unused_args = parser_a.parse_known_args()\n    args_b, unused_args = parser_b.parse_known_args(unused_args)\n\n    joint_parser.print_help()\n\n    func_a(args_a)\n    func_b(args_b)\n\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fynnbe/dataclass-argparse",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dataclass-argparse",
    "package_url": "https://pypi.org/project/dataclass-argparse/",
    "platform": "",
    "project_url": "https://pypi.org/project/dataclass-argparse/",
    "project_urls": {
      "Bug Reports": "https://github.com/fynnbe/dataclass-argparse/issues",
      "Homepage": "https://github.com/fynnbe/dataclass-argparse",
      "Source": "https://github.com/fynnbe/dataclass-argparse"
    },
    "release_url": "https://pypi.org/project/dataclass-argparse/0.1.2/",
    "requires_dist": [
      "pre-commit ; extra == 'dev'",
      "mypy ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "argparse with a type annotated namespace dataclass",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12249297,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a75338fffc5a3899258053319b7f1a7e3c4116b66515463f1bfc906dde829dc8",
          "md5": "1daf61f96008068a8fbced75edb42e51",
          "sha256": "de69b6a418cb1f3b69163e2065d4d5b3fc60afb62c9a1d579cc8a8ac5cdd0e4c"
        },
        "downloads": -1,
        "filename": "dataclass_argparse-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1daf61f96008068a8fbced75edb42e51",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6725,
        "upload_time": "2021-10-01T11:24:18",
        "upload_time_iso_8601": "2021-10-01T11:24:18.771651Z",
        "url": "https://files.pythonhosted.org/packages/a7/53/38fffc5a3899258053319b7f1a7e3c4116b66515463f1bfc906dde829dc8/dataclass_argparse-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48904204d0e41dd105ebd905b6b0ecc9d35278d01165e05ecc6086245df6cae8",
          "md5": "a826bc6549f939bd80804598888c8b1b",
          "sha256": "738f49bcf6305d52cae74d5a63d9f286f4f6fe3d68e55aec6b9ce95151796e06"
        },
        "downloads": -1,
        "filename": "dataclass-argparse-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a826bc6549f939bd80804598888c8b1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5268,
        "upload_time": "2021-10-01T11:24:19",
        "upload_time_iso_8601": "2021-10-01T11:24:19.735240Z",
        "url": "https://files.pythonhosted.org/packages/48/90/4204d0e41dd105ebd905b6b0ecc9d35278d01165e05ecc6086245df6cae8/dataclass-argparse-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4edb104e49ee15d165ea669fbe727441f504662a1b36ee0f4f4993fd4e11dff9",
          "md5": "c1a8e772bcacbec8bd600dbe9e1d6403",
          "sha256": "ef55d325444f568b46cdcd5b2ee48ded7a294c700091529454c21747d20e0a1a"
        },
        "downloads": -1,
        "filename": "dataclass_argparse-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c1a8e772bcacbec8bd600dbe9e1d6403",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6853,
        "upload_time": "2021-12-08T22:19:35",
        "upload_time_iso_8601": "2021-12-08T22:19:35.988227Z",
        "url": "https://files.pythonhosted.org/packages/4e/db/104e49ee15d165ea669fbe727441f504662a1b36ee0f4f4993fd4e11dff9/dataclass_argparse-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c9592c38b27ab8ec8623fb745fa671dfe6bb61d6bf37a9990ab14da4d7b16b8",
          "md5": "6711c3b7b9bb5524dcf2761dd31f67f9",
          "sha256": "704bb4ec49013aba3a2c0c793c890ab4c37661fd0d3285c05880ae560448e3c7"
        },
        "downloads": -1,
        "filename": "dataclass-argparse-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6711c3b7b9bb5524dcf2761dd31f67f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5385,
        "upload_time": "2021-12-08T22:19:37",
        "upload_time_iso_8601": "2021-12-08T22:19:37.127265Z",
        "url": "https://files.pythonhosted.org/packages/2c/95/92c38b27ab8ec8623fb745fa671dfe6bb61d6bf37a9990ab14da4d7b16b8/dataclass-argparse-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4edb104e49ee15d165ea669fbe727441f504662a1b36ee0f4f4993fd4e11dff9",
        "md5": "c1a8e772bcacbec8bd600dbe9e1d6403",
        "sha256": "ef55d325444f568b46cdcd5b2ee48ded7a294c700091529454c21747d20e0a1a"
      },
      "downloads": -1,
      "filename": "dataclass_argparse-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c1a8e772bcacbec8bd600dbe9e1d6403",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6853,
      "upload_time": "2021-12-08T22:19:35",
      "upload_time_iso_8601": "2021-12-08T22:19:35.988227Z",
      "url": "https://files.pythonhosted.org/packages/4e/db/104e49ee15d165ea669fbe727441f504662a1b36ee0f4f4993fd4e11dff9/dataclass_argparse-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c9592c38b27ab8ec8623fb745fa671dfe6bb61d6bf37a9990ab14da4d7b16b8",
        "md5": "6711c3b7b9bb5524dcf2761dd31f67f9",
        "sha256": "704bb4ec49013aba3a2c0c793c890ab4c37661fd0d3285c05880ae560448e3c7"
      },
      "downloads": -1,
      "filename": "dataclass-argparse-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6711c3b7b9bb5524dcf2761dd31f67f9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5385,
      "upload_time": "2021-12-08T22:19:37",
      "upload_time_iso_8601": "2021-12-08T22:19:37.127265Z",
      "url": "https://files.pythonhosted.org/packages/2c/95/92c38b27ab8ec8623fb745fa671dfe6bb61d6bf37a9990ab14da4d7b16b8/dataclass-argparse-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}