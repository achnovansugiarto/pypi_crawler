{
  "info": {
    "author": "Sukanthen.SS",
    "author_email": "sukanthen1999@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n#  Detoxifier\n### \" For a Safe, Secure and Positivity enriched Digital World \"\n\n### 1) detoxify_text()\n\nGiven a input query with toxic comments, this library will exactly spot the toxic words and replace the letters of that particular word with asterisk (*). (eg: moron --> *****) \n\n\n```console\nfrom detoxifier import detoxify_text\n\n# Dialogue from American Series Silicon Valley (Season 1)\ninput_text = \"Hello, Richard Hendricks. I'm a total fucking retard.\"\n\ndetoxify_text(input_text)\n\n```\n\nOutput\n```console\nHello, Richard Hendricks. I'm a total ******* ******.\"\n```\n\n### 2) check_textual_toxicity()\n\nGiven a input query with toxic comments, this library will check for the presence of toxic words in the query.\n\n\n```console\nfrom detoxifier import check_textual_toxicity\n\n# Dialogue from American Series Silicon Valley (Season 1)\ninput_text = \"Hello, Richard Hendricks. I'm a total fucking retard.\"\n\ncheck_textual_toxicity(input_text)\n\n```\n\nOutput\n```console\n1\n## returns 1 if toxic word is present else it returns 0. ##\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "detoxifier",
    "package_url": "https://pypi.org/project/detoxifier/",
    "platform": null,
    "project_url": "https://pypi.org/project/detoxifier/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/detoxifier/0.2/",
    "requires_dist": [
      "flashtext (==2.7)"
    ],
    "requires_python": "",
    "summary": "Detoxifier library identifies toxic words in a query and detoxified it by replacing toxic words.",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15282806,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0c2d8c7aa0f47dc65a875d5f159e434fa5917f9e44315c556d34220fc48eec1",
          "md5": "2a511a4d89f8389fff9e830a4600c6bf",
          "sha256": "783413b2d6e5be508285dea15e0b46543af4ca2f577a027d70eca45d20029f13"
        },
        "downloads": -1,
        "filename": "detoxifier-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a511a4d89f8389fff9e830a4600c6bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11650,
        "upload_time": "2022-10-02T15:22:15",
        "upload_time_iso_8601": "2022-10-02T15:22:15.726916Z",
        "url": "https://files.pythonhosted.org/packages/d0/c2/d8c7aa0f47dc65a875d5f159e434fa5917f9e44315c556d34220fc48eec1/detoxifier-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb2024af7dd6d912cf8cfc624f2336fa784ab83e7be146ab33457cd8a734c689",
          "md5": "6a44858ca6a980831c6b8ddf202fe6c4",
          "sha256": "ec60f10771aba7468276ba9584e00a4ef4cf64d964256214368165e6932ff1f8"
        },
        "downloads": -1,
        "filename": "detoxifier-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6a44858ca6a980831c6b8ddf202fe6c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11977,
        "upload_time": "2022-10-02T15:27:16",
        "upload_time_iso_8601": "2022-10-02T15:27:16.193380Z",
        "url": "https://files.pythonhosted.org/packages/cb/20/24af7dd6d912cf8cfc624f2336fa784ab83e7be146ab33457cd8a734c689/detoxifier-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a5c5f16270293776f299d4bdf28bc9e9069f8379e2cb7852cc10074424e5230",
          "md5": "39028f7991df2a1de17beae980c9da27",
          "sha256": "0c0f1081ce440ff5601aef109ae2abe50472132949b7ff1a900143eea1bfb14c"
        },
        "downloads": -1,
        "filename": "detoxifier-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "39028f7991df2a1de17beae980c9da27",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11978,
        "upload_time": "2022-10-02T17:45:32",
        "upload_time_iso_8601": "2022-10-02T17:45:32.130170Z",
        "url": "https://files.pythonhosted.org/packages/8a/5c/5f16270293776f299d4bdf28bc9e9069f8379e2cb7852cc10074424e5230/detoxifier-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a5c5f16270293776f299d4bdf28bc9e9069f8379e2cb7852cc10074424e5230",
        "md5": "39028f7991df2a1de17beae980c9da27",
        "sha256": "0c0f1081ce440ff5601aef109ae2abe50472132949b7ff1a900143eea1bfb14c"
      },
      "downloads": -1,
      "filename": "detoxifier-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "39028f7991df2a1de17beae980c9da27",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11978,
      "upload_time": "2022-10-02T17:45:32",
      "upload_time_iso_8601": "2022-10-02T17:45:32.130170Z",
      "url": "https://files.pythonhosted.org/packages/8a/5c/5f16270293776f299d4bdf28bc9e9069f8379e2cb7852cc10074424e5230/detoxifier-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}