{
  "info": {
    "author": "Hardik Sharma",
    "author_email": "sharmahardikdev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: MacOS X",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.0",
      "Programming Language :: Python :: 3.1",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# applepyautomator \napplepyautomator is a simplified implementation of applescript automation for macOs in python3. With applepyautomator you can easily automate ur macOs without having to write applescript or using automator.\n\n\n## Overview\n\napplepyautomator was written with focus on simplicity. It provides applescript automation for keyboard functionality to automate workflows that use key presses and shortcuts extensively, following are the key features\n\n - launch and quit apps with single call functions.\n - automate typing\n - automate key presses and key combinations for shortcuts\n\n### Getting it\nTo download applepyautomator, either fork this github repo or simply use Pypi via pip.\n```\n$pip3 install applepyautomator\n```\n\n### Using it\nTo start using applepyautomator First import automator from applepyautomator\n```python\nfrom applepyautomator import automator\n```\n\n#### Launching an App\nTo launch an app use launch_app function in automator which takes a string argument containing the app name you want to launch. The app should be located in the default Applications directory of the macOS.\n```python\nautomator.launch_app(\"App Name\")\n```\n\n#### Quit an App\nTo quit an app is similar to launching an app, use quit_app function in automator to quit an already running app.\n```python\nautomator.quit_app(\"App Name\")\n```\n\n#### Automate Typing\nTo automate typing use type_keystroke function in automator which takes a string argument containing the content which you need to type.\n```python\nautomator.type_keystroke(\"type this string\")\n```\n\n#### Automate Keypress\nTo automate keypresses applepyautomator uses applescript key codes. key codes for Commonly used keys in the keyboard and some shortcuts \nare provided in following classes.\n\n```python\nkeycode.COMMON_KEYS\n```\ncontains keycodes for common keys such as ENTER, ESC, TAB, SPACE, CONTROL, COMMAND, OPTION etc.\n\n\n```python\nkeycode.ALPHABETS\n```\ncontains keycodes for alphabets from a-z and A-Z.\n\n\n```python\nkeycode.FUNCT_KEYS\n```\ncontains keycodes for function keys F1-F12\n\n\n```python\nkeycode.NUMBERS\n```\ncontains keycodes for numbers 0-9\n\n\n```python\nkeycode.SPECIAL_CHARS\n```\ncontains keycodes for special characters\n\n\nsimilarly key codes for common shortcuts are provided in class\n```python\nshortcuts.SHORTCUTS\n```\n\n\nIn order to automate a keypress call press_key function in automator which takes keycode as an argument. A keycode can be passed in the press_key function using available keys in classes mentioned above. (complete list of available keys and shortcuts is provided in keycodes.txt file)\n\n```python\nfrom applepyautomator.keycode import COMMON_KEYS\nfrom applepyautomator.shortcuts import SHORTCUTS\nautomator.press_key(COMMON_KEYS.ENTER)\nautomator.press_key(SHORTCUTS.SELECT_ALL)\n```\n\nyou can also provide a key code directly to the press_key function in string format\n\n##### Pressing Multiple Keys in Combination\n\nmultiple key presses such as COMMAND + SPACE, COMMAND + CONTROL + SPACE or other custom shortcuts can be automated using the press_combination function in automator.\n\npress_combination function takes two arguments first is the key code for any key in the combination except COMMAND, CONTROL and SHIFT, the second argument is a list containing maximum of 3 items which are key codes for COMMAND, CONTROL and SHIFT\n\ncode examples:\nCOMMAND + SPACE\n```python\nautomator.press_combination(COMMON_KEYS.SPACE, [COMMON_KEYS.COMMAND])\n```\n\nCOMMAND + CONTROL + SPACE\n```python\nautomator.press_combination(COMMON_KEYS.SPACE, [COMMON_KEYS.COMMAND, COMMON_KEYS.CONTROL])\n```\n\n### Delay Argument\nEvery function in applepyautomator has an optional argument delay. Value of delay is number of seconds program waits before performing the function. The default value of delay is 0.125 seconds. Each function is performed after a delay of 0.125 seconds in order to give time to UI to load. In some cases you may need to increase or decrease the delay time depending upon the use case which can easily be done using delay argument.\n\n```python\nautomator.press_key(COMMON_KEYS.ENTER, delay=2)\n```\n\nin above example program will wait for 2 seconds before performing the ENTER key press.\n\nmore usage examples can be found in example.py file\n\n#### Credits\n\nauthor of https://eastmanreference.com/complete-list-of-applescript-key-codes facilitated the key codes for mapping keys to respective key codes.\n\nThe program is tested on MacBook Pro with MacOs 10.15.4 running python 3.7.4",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/hardik1504/applepyautomator/archive/v_0.3.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hardik1504/applepyautomator",
    "keywords": "applescript,automation",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "applepyautomator",
    "package_url": "https://pypi.org/project/applepyautomator/",
    "platform": "",
    "project_url": "https://pypi.org/project/applepyautomator/",
    "project_urls": {
      "Download": "https://github.com/hardik1504/applepyautomator/archive/v_0.3.tar.gz",
      "Homepage": "https://github.com/hardik1504/applepyautomator"
    },
    "release_url": "https://pypi.org/project/applepyautomator/0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "applepyautomator is a simplified implementation of applescript automation for macOs in python3. With applepyautomator you can easily automate ur macOs without having to write applescript or using automator.",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7215934,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec1c0b6bfeb9da6fb9951a91ea6aec7b72c95062d89dffb1a278c0a11ea59185",
          "md5": "5ced8daf50e4a8d749862ef335f97b9c",
          "sha256": "a660babcfca72509e76f550ac51b030435b8ec62cc9cf4561c0904f43a53ef97"
        },
        "downloads": -1,
        "filename": "applepyautomator-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5ced8daf50e4a8d749862ef335f97b9c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3114,
        "upload_time": "2020-05-11T14:15:42",
        "upload_time_iso_8601": "2020-05-11T14:15:42.479177Z",
        "url": "https://files.pythonhosted.org/packages/ec/1c/0b6bfeb9da6fb9951a91ea6aec7b72c95062d89dffb1a278c0a11ea59185/applepyautomator-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a976d0fd2b58bbf6f81c82f5f8fcb5dbea9d7c43fa0afcd256bb659ce3cbc8de",
          "md5": "fb6ecfee7beff9a0d6cca962cc3e6c49",
          "sha256": "a7e71df5c04c31cb7893cc844ac8d46d34a4ecfa63fbb38b1c914f0c59a07f19"
        },
        "downloads": -1,
        "filename": "applepyautomator-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fb6ecfee7beff9a0d6cca962cc3e6c49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4682,
        "upload_time": "2020-05-11T14:36:05",
        "upload_time_iso_8601": "2020-05-11T14:36:05.886671Z",
        "url": "https://files.pythonhosted.org/packages/a9/76/d0fd2b58bbf6f81c82f5f8fcb5dbea9d7c43fa0afcd256bb659ce3cbc8de/applepyautomator-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3101d2fae368ba7d7527bc230c5f3eb3fe57ace8ab7882fbc6da7ef31c886d38",
          "md5": "f5727a2b7f96bcf5763f2484b4317afc",
          "sha256": "b192caea7add3d538120d6feadb2a89d2307db2f71ee44696ff6124211fd8b7d"
        },
        "downloads": -1,
        "filename": "applepyautomator-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f5727a2b7f96bcf5763f2484b4317afc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4961,
        "upload_time": "2020-05-11T14:53:39",
        "upload_time_iso_8601": "2020-05-11T14:53:39.729002Z",
        "url": "https://files.pythonhosted.org/packages/31/01/d2fae368ba7d7527bc230c5f3eb3fe57ace8ab7882fbc6da7ef31c886d38/applepyautomator-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3101d2fae368ba7d7527bc230c5f3eb3fe57ace8ab7882fbc6da7ef31c886d38",
        "md5": "f5727a2b7f96bcf5763f2484b4317afc",
        "sha256": "b192caea7add3d538120d6feadb2a89d2307db2f71ee44696ff6124211fd8b7d"
      },
      "downloads": -1,
      "filename": "applepyautomator-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "f5727a2b7f96bcf5763f2484b4317afc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4961,
      "upload_time": "2020-05-11T14:53:39",
      "upload_time_iso_8601": "2020-05-11T14:53:39.729002Z",
      "url": "https://files.pythonhosted.org/packages/31/01/d2fae368ba7d7527bc230c5f3eb3fe57ace8ab7882fbc6da7ef31c886d38/applepyautomator-0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}