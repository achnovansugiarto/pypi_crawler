{
  "info": {
    "author": "Jon Crall",
    "author_email": "erotemic@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Text Editors",
      "Topic :: Utilities"
    ],
    "description": "VimTk - The (mostly) Python (g)Vim toolkit \n==========================================\n\n|GithubActions| |Codecov| |Pypi| |PypiDownloads| |ReadTheDocs|\n\n\nDescription \n-----------\n\nThe tools in this package focus on, but are not exclusive to Python development\nwith gVim.  This is both a Vim plugin and a pip installable Python module.\n\n\nUsage \n-----\n\nWe suggest using vim-plug to manage plugins. Install vim plug like this:\n\n.. code:: bash\n\n    # Install vim-plug into your autoload directory\n    \" See: https://github.com/junegunn/vim-plug\n    curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n\n\nWe suggest the following vimrc as a template:\n\n.. code:: vim\n\n    \" DEMO_VIMRC: \n\n    call plug#begin('~/.vim/bundle')\n\n    Plug 'Erotemic/vimtk'\n\n    call plug#end()            \" required\n\n    filetype plugin indent on\n    syntax on\n\n    \"\"\"\" The above code should be among the first things in your vimrc\n\n\n    \" Map your leader key to comma (much easier to hit)\n    let mapleader = \",\"\n    let maplocalleader = \",\"\n    noremap \\ ,\n\n    \" Make default vimtk remaps\n    :call VimTK_default_remap()\n\n    \" Register files you use all the time with quickopen\n    \" (use <leader>i<char> as a shortcut to specific files\n    call vimtk#quickopen(',', '~/.vimrc')\n    call vimtk#quickopen('5', '~/.bashrc')\n\n\nThis module defines many helper functions, but does not bind them to keys by\ndefault unless ``VimTK_default_remap`` is called. The default bindings are as\nfollows:\n\n.. code:: vim\n\n  noremap <leader>H :call vimtk#helloworld()<Esc>\n\n  noremap  <leader>a :call vimtk#execute_text_in_terminal(mode())<CR>\n  vnoremap <leader>a :call vimtk#execute_text_in_terminal(visualmode())<CR>\n  noremap  <leader>m :call vimtk#execute_text_in_terminal('word')<CR>\n\n  noremap <leader>C :call vimtk#copy_current_fpath()<Esc>\n  noremap <leader>M :call vimtk#ipython_import_all()<CR>\n\n  command! AutoImport call vimtk#insert_auto_import()\n  noremap <leader>pv :call vimtk#insert_print_var_at_cursor()<CR>\n  noremap  <c-M-B> :call vimtk#insert_timerit(mode())<CR><Esc>\n  vnoremap <c-M-B> :call vimtk#insert_timerit(visualmode())<CR><Esc>\n\n  noremap <leader>es :call vimtk#smart_search_word_at_cursor()<CR>\n  noremap <leader>go :call vimtk#open_path_at_cursor(\"e\")<CR>\n  noremap <leader>gf :call vimtk#open_path_at_cursor(\"e\")<CR>\n  noremap <leader>gi :call vimtk#open_path_at_cursor(\"split\")<CR>\n  noremap <leader>gv :call vimtk#open_path_at_cursor(\"vsplit\")<CR>\n  noremap <leader>gv :call vimtk#open_path_at_cursor(\"vsplit\")<CR>\n  noremap <leader>gt :call vimtk#open_path_at_cursor(\"tabe\")<CR>\n  noremap gi :call vimtk#open_path_at_cursor(\"split\")<CR>\n\n  \" Doctest editing\n  vnoremap gd :call vimtk#py_format_doctest()<CR>\n  vnoremap gu :call vimtk#py_unformat_doctest()<CR>\n\n\nObviously you can modify the exact key bindings however you would like.\n\n\nHere is what some of these functions do:\n\n- ``vimtk#execute_text_in_terminal`` - copies the current word, line, or visual\n  selection and executes it in your most recently used terminal (perhaps\n  running IPython or bash) without needing to alt-tab or copy paste.\n  Default binding is ``<leader>a`` for the current line or visual selection and\n  ``<leader>m`` for a word.\n\n- ``vimtk#ipython_import_all`` - if you are in a python module, this funciton\n  creates a few lines of code that will import everything in this module into\n  the current namespace. Note, it detects if you need to modify your pythonpath\n  and does that.  It also completely disregards ``__all__``. These lines are\n  then executed in your terminal (which should probably be an IPython session). \n  Default binding is ``<leader>M``.\n\n- ``vimtk#copy_current_fpath`` - Copies the path to the current file into the\n  clipboard. On non-windows the home drive is replaced with ``~``. Default\n  binding is ``<leader>C``.\n\n- ``vimtk#auto_import`` - Automatically inserts missing Python imports. \n\n- ``vimtk#insert_print_var_at_cursor`` - Insert a print statement around the\n  current variable your cursor is on (supports python, bash, cmake, and C++)\n  Default binding is ``<leader>pv`` for a repr representation and\n  ``<leader>ps`` for a ubelt repr2 representation.\n\n- ``vimtk#insert_timerit`` - Make a stub timerit and insert it at the current\n  position\n\n- ``vimtk#open_path_at_cursor`` - Open a file path or web url at your cursor. \n\n- ``vimtk#quickopen(char, fpath)`` - Use ``<leader>[tvio]``` to open predefined\n  files / directories\n\n- ``vimtk#py_format_doctest`` - Default binding to <visual-select> ``gd``.\n  Inserts the doctest ``>>>`` prefix before the visually selected code.\n\n- ``vimtk#py_unformat_doctest`` - Default binding to <visual-select> ``gu``. \n  Removes the doctest ``>>>`` prefix before the visually selected code.\n\n\nAlternate VIMRC \n---------------\n\nNote to get all the features, you need the following packages:\n\n.. code:: bash\n\n    # The <leader>a ability requires xdotool and wmctrl on linux systems\n    sudo apt install xdotool wmctrl ctags\n\n    # vimtk requires ubelt in whichever environment it is running\n    pip install ubelt --user\n\n    # There are also third party python packages needed for some functions\n    pip install pyperclip pyflakes xinspect psutil --user\n\n    # On windows you should also install pywinauto\n    pip install pywinauto --user\n\nNote: there have been some issues regarding which Python environment these\npacakges are installed to and which Python environment is used by Vim. We are\nworking to resolve these issues. Bug reports and patches are welcome!\n\n.. code:: vim\n\n    \" VimTK Recommended VimRC: \n    \" References: https://github.com/Erotemic/vimtk\n\n    \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n    \" # Automatically install vim-plug into your autoload directory\n    \" \" See: https://github.com/junegunn/vim-plug\n    \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n    if empty(glob('~/.vim/autoload/plug.vim'))\n      \" Automatic installation if vim plug does not exist\n      silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs\n        \\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n      autocmd VimEnter * PlugInstall --sync | source $MYVIMRC\n    endif\n\n    \" Enable normal windows hotkeys like: ctrl+c, ctrl+v, ctrl+a, etc...\n    source $VIMRUNTIME/mswin.vim\n    behave mswin\n\n    set nocompatible\n    filetype off\n    \"source $VIMRUNTIME/mswin.vim\n    \"behave mswin\n    set encoding=utf8\n\n    call plug#begin('~/.vim/bundle')\n    Plug 'sjl/badwolf'\n    Plug 'scrooloose/nerdcommenter'\n    Plug 'scrooloose/nerdtree'\n    Plug 'vim-syntastic/syntastic'\n    Plug 'majutsushi/tagbar'\n    Plug 'ervandew/supertab'\n    Plug 'Erotemic/vimtk'\n    call plug#end()            \" required\n\n    filetype plugin indent on\n    syntax on\n\n    \"\"\"\" The above code should be among the first things in your vimrc\n\n    scriptencoding utf-8\n    set encoding=utf-8\n\n    \" References: https://vi.stackexchange.com/questions/13034/automatic-whitespace-in-python\n    \" ---- Minimal configuration:\n    set smartindent   \" Do smart autoindenting when starting a new line\n    set shiftwidth=4  \" Set number of spaces per auto indentation\n    set expandtab     \" When using <Tab>, put spaces instead of a <tab> character\n\n    \" ---- Good to have for consistency\n    set tabstop=4   \" Number of spaces that a <Tab> in the file counts for\n    set smarttab    \" At <Tab> at beginning line inserts spaces set in shiftwidth\n\n    \" Highlight search regexes\n    set incsearch\n    set hlsearch\n\n    \" Disable swap files, which prevents annoying messages when you open the\n    \" same file twice\n    set noswapfile\n\n    \" Use a colorscheme (murphy is builtin, but I like badwolf)\n    colorscheme badwolf\n    \"colorscheme murphy\n\n    \" Map your leader key to comma (much easier to hit)\n    let mapleader = \",\"\n    let maplocalleader = \",\"\n    noremap \\ ,\n\n    \" Search and replace under cursor\n    noremap <leader>ss :%s/\\<<C-r><C-w>\\>/\n    \"Surround word with quotes\n    noremap <leader>qw ciw'<C-r>\"'<Esc>\n    noremap <leader>qc ciw`<C-r>\"`<Esc>\n\n    \" Reload your vimrc\n    noremap <leader>R :source ~/.vimrc<CR>\n\n    \" Window navication\n    \" Alt + jklh\n    map <silent><A-j> <c-w>j\n    map <silent><A-k> <c-w>k\n    map <silent><A-l> <c-w>l\n    map <silent><A-h> <c-w>h\n    \" Control + jklh\n    map <c-j> <c-w>j\n    map <c-k> <c-w>k\n    map <c-l> <c-w>l\n    \" Move in split windows\n    \" Press leader twice to move between windows\n    noremap <leader>, <C-w>w\n    map <c-h> <c-w>h\n\n    \" Fast nerd tree access\n    noremap <C-T> :NERDTree<CR>\n    noremap <leader>. :NERDTree<CR>\n    noremap <leader>h :NERDTreeToggle<CR>\n    \"noremap <leader>h :Tlist<CR>\n    noremap <leader>j :Tagbar<CR>\n\n    \"set autochdir\n    \" better version of autochdir that changes cwd to be at the current file\n    autocmd BufEnter * silent! lcd %:p:h\n\n    \" Note: to use vimtk I think we need to have ubelt installed\n    \" or get some sort of install-hook pip install command to happen\n    \" We can hack around this by explicitly sourcing the vimtk plugin\n    source $HOME/.vim/bundle/vimtk/plugin/vimtk.vim\n\n    \" Make default vimtk remaps. \n    :call VimTK_default_remap()\n\n    \" Swap colon and semicolon\n    :call vimtk#swap_keys(':', ';')\n\n    \" Register files you use all the time with quickopen\n    \" (use <leader>i<char> as a shortcut to specific files\n    :call vimtk#quickopen(',', '~/.vimrc')\n    :call vimtk#quickopen('5', '~/.bashrc')\n\n.. |CircleCI| image:: https://circleci.com/gh/Erotemic/vimtk.svg?style=svg\n    :target: https://circleci.com/gh/Erotemic/vimtk\n.. |Travis| image:: https://img.shields.io/travis/Erotemic/vimtk/main.svg?label=Travis%20CI\n   :target: https://travis-ci.org/Erotemic/vimtk?branch=main\n.. |Appveyor| image:: https://ci.appveyor.com/api/projects/status/github/Erotemic/vimtk?branch=main&svg=True\n   :target: https://ci.appveyor.com/project/Erotemic/vimtk/branch/main\n.. |Codecov| image:: https://codecov.io/github/Erotemic/vimtk/badge.svg?branch=main&service=github\n   :target: https://codecov.io/github/Erotemic/vimtk?branch=main\n.. |Pypi| image:: https://img.shields.io/pypi/v/vimtk.svg\n   :target: https://pypi.python.org/pypi/vimtk\n.. |ReadTheDocs| image:: https://readthedocs.org/projects/vimtk/badge/?version=latest\n    :target: http://vimtk.readthedocs.io/en/latest/\n.. |PypiDownloads| image:: https://img.shields.io/pypi/dm/vimtk.svg\n    :target: https://pypistats.org/packages/vimtk\n.. |GithubActions| image:: https://github.com/Erotemic/vimtk/actions/workflows/tests.yml/badge.svg?branch=main\n    :target: https://github.com/Erotemic/vimtk/actions?query=branch%3Amain\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Erotemic/vimtk",
    "keywords": "vim,gvim,python",
    "license": "Apache 2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vimtk",
    "package_url": "https://pypi.org/project/vimtk/",
    "platform": null,
    "project_url": "https://pypi.org/project/vimtk/",
    "project_urls": {
      "Homepage": "https://github.com/Erotemic/vimtk"
    },
    "release_url": "https://pypi.org/project/vimtk/0.3.1/",
    "requires_dist": [
      "psutil",
      "pyflakes",
      "pyperclip",
      "six",
      "ubelt",
      "xinspect",
      "pywinauto ; platform_system == \"Windows\"",
      "codecov ; extra == 'all'",
      "psutil ; extra == 'all'",
      "pyflakes ; extra == 'all'",
      "pyperclip ; extra == 'all'",
      "six ; extra == 'all'",
      "ubelt ; extra == 'all'",
      "xdoctest ; extra == 'all'",
      "xinspect ; extra == 'all'",
      "codecov (==2.0.15) ; extra == 'all-strict'",
      "psutil (==5.4.7) ; extra == 'all-strict'",
      "pyflakes (==2.1.1) ; extra == 'all-strict'",
      "pyperclip (==1.7.0) ; extra == 'all-strict'",
      "six (==1.11.0) ; extra == 'all-strict'",
      "ubelt (==0.7.1) ; extra == 'all-strict'",
      "xdoctest (==0.14.0) ; extra == 'all-strict'",
      "xinspect (==0.0.3) ; extra == 'all-strict'",
      "pywinauto ; (platform_system == \"Windows\") and extra == 'all-strict'",
      "coverage (==4.5) ; (python_version < \"2.7\" and python_version >= \"2.6\") and extra == 'all-strict'",
      "pytest-cov (==2.8.1) ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'all-strict'",
      "pytest (<=4.6.11,==4.6.0) ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'all-strict'",
      "coverage (==5.3.1) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all-strict'",
      "pytest (==4.6.0) ; (python_version < \"3.10.0\" and python_version >= \"3.7.0\") and extra == 'all-strict'",
      "coverage (==5.3.1) ; (python_version < \"3.4\" and python_version >= \"2.7\") and extra == 'all-strict'",
      "coverage (==4.3.4) ; (python_version < \"3.5\" and python_version >= \"3.4\") and extra == 'all-strict'",
      "pytest-cov (==2.8.1) ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'all-strict'",
      "pytest (<=4.6.11,==4.6.0) ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'all-strict'",
      "coverage (==5.3.1) ; (python_version < \"3.6\" and python_version >= \"3.5\") and extra == 'all-strict'",
      "pytest-cov (==2.9.0) ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'all-strict'",
      "pytest (<=6.1.2,==4.6.0) ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'all-strict'",
      "coverage (==6.1.1) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all-strict'",
      "pytest (==4.6.0) ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'all-strict'",
      "coverage (==6.1.1) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all-strict'",
      "coverage (==6.1.1) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all-strict'",
      "coverage (==6.1.1) ; (python_version >= \"3.10\") and extra == 'all-strict'",
      "pytest (==6.2.5) ; (python_version >= \"3.10.0\") and extra == 'all-strict'",
      "pytest-cov (==3.0.0) ; (python_version >= \"3.6.0\") and extra == 'all-strict'",
      "pywinauto ; (platform_system == \"Windows\") and extra == 'all'",
      "coverage ; (python_version < \"2.7\" and python_version >= \"2.6\") and extra == 'all'",
      "pytest ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'all'",
      "pytest-cov ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'all'",
      "coverage ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all'",
      "pytest ; (python_version < \"3.10.0\" and python_version >= \"3.7.0\") and extra == 'all'",
      "coverage ; (python_version < \"3.4\" and python_version >= \"2.7\") and extra == 'all'",
      "coverage ; (python_version < \"3.5\" and python_version >= \"3.4\") and extra == 'all'",
      "pytest ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'all'",
      "pytest-cov ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'all'",
      "coverage ; (python_version < \"3.6\" and python_version >= \"3.5\") and extra == 'all'",
      "pytest ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'all'",
      "pytest-cov ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'all'",
      "coverage ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all'",
      "pytest ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'all'",
      "coverage ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all'",
      "coverage ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all'",
      "coverage ; (python_version >= \"3.10\") and extra == 'all'",
      "pytest ; (python_version >= \"3.10.0\") and extra == 'all'",
      "pytest-cov ; (python_version >= \"3.6.0\") and extra == 'all'",
      "psutil (==5.4.7) ; extra == 'runtime-strict'",
      "pyflakes (==2.1.1) ; extra == 'runtime-strict'",
      "pyperclip (==1.7.0) ; extra == 'runtime-strict'",
      "six (==1.11.0) ; extra == 'runtime-strict'",
      "ubelt (==0.7.1) ; extra == 'runtime-strict'",
      "xinspect (==0.0.3) ; extra == 'runtime-strict'",
      "pywinauto ; (platform_system == \"Windows\") and extra == 'runtime-strict'",
      "codecov ; extra == 'tests'",
      "xdoctest ; extra == 'tests'",
      "codecov (==2.0.15) ; extra == 'tests-strict'",
      "xdoctest (==0.14.0) ; extra == 'tests-strict'",
      "coverage (==4.5) ; (python_version < \"2.7\" and python_version >= \"2.6\") and extra == 'tests-strict'",
      "pytest-cov (==2.8.1) ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'tests-strict'",
      "pytest (<=4.6.11,==4.6.0) ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'tests-strict'",
      "coverage (==5.3.1) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'tests-strict'",
      "pytest (==4.6.0) ; (python_version < \"3.10.0\" and python_version >= \"3.7.0\") and extra == 'tests-strict'",
      "coverage (==5.3.1) ; (python_version < \"3.4\" and python_version >= \"2.7\") and extra == 'tests-strict'",
      "coverage (==4.3.4) ; (python_version < \"3.5\" and python_version >= \"3.4\") and extra == 'tests-strict'",
      "pytest-cov (==2.8.1) ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'tests-strict'",
      "pytest (<=4.6.11,==4.6.0) ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'tests-strict'",
      "coverage (==5.3.1) ; (python_version < \"3.6\" and python_version >= \"3.5\") and extra == 'tests-strict'",
      "pytest-cov (==2.9.0) ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'tests-strict'",
      "pytest (<=6.1.2,==4.6.0) ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'tests-strict'",
      "coverage (==6.1.1) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'tests-strict'",
      "pytest (==4.6.0) ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'tests-strict'",
      "coverage (==6.1.1) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'tests-strict'",
      "coverage (==6.1.1) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'tests-strict'",
      "coverage (==6.1.1) ; (python_version >= \"3.10\") and extra == 'tests-strict'",
      "pytest (==6.2.5) ; (python_version >= \"3.10.0\") and extra == 'tests-strict'",
      "pytest-cov (==3.0.0) ; (python_version >= \"3.6.0\") and extra == 'tests-strict'",
      "coverage ; (python_version < \"2.7\" and python_version >= \"2.6\") and extra == 'tests'",
      "pytest ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'tests'",
      "pytest-cov ; (python_version < \"2.8.0\" and python_version >= \"2.7.0\") and extra == 'tests'",
      "coverage ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'tests'",
      "pytest ; (python_version < \"3.10.0\" and python_version >= \"3.7.0\") and extra == 'tests'",
      "coverage ; (python_version < \"3.4\" and python_version >= \"2.7\") and extra == 'tests'",
      "coverage ; (python_version < \"3.5\" and python_version >= \"3.4\") and extra == 'tests'",
      "pytest ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'tests'",
      "pytest-cov ; (python_version < \"3.5.0\" and python_version >= \"3.4.0\") and extra == 'tests'",
      "coverage ; (python_version < \"3.6\" and python_version >= \"3.5\") and extra == 'tests'",
      "pytest ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'tests'",
      "pytest-cov ; (python_version < \"3.6.0\" and python_version >= \"3.5.0\") and extra == 'tests'",
      "coverage ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'tests'",
      "pytest ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'tests'",
      "coverage ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'tests'",
      "coverage ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'tests'",
      "coverage ; (python_version >= \"3.10\") and extra == 'tests'",
      "pytest ; (python_version >= \"3.10.0\") and extra == 'tests'",
      "pytest-cov ; (python_version >= \"3.6.0\") and extra == 'tests'"
    ],
    "requires_python": ">=3.6",
    "summary": "Python backend for the vimtk plugin",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14290008,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "432698133df9a11af853c7b2580f1e1d3197a6b9b55237f8e55d9015a9421467",
          "md5": "af3ef1f1f23f6d5170e5eaf9db7bea2a",
          "sha256": "5cfc646339b891d44ae7ff268696b2968527b766b34db07d746a68ace91568f6"
        },
        "downloads": -1,
        "filename": "vimtk-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af3ef1f1f23f6d5170e5eaf9db7bea2a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 21805,
        "upload_time": "2019-04-14T02:11:34",
        "upload_time_iso_8601": "2019-04-14T02:11:34.972323Z",
        "url": "https://files.pythonhosted.org/packages/43/26/98133df9a11af853c7b2580f1e1d3197a6b9b55237f8e55d9015a9421467/vimtk-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "448cd0e4764cb14a24602bb498ad8ed415da4d72677559060d044d33761406c3",
          "md5": "66b96378df7d666e5fd84d91499de6cc",
          "sha256": "181cef9b6874587ef5e11859bae6fb9fa12e3bbcb00ade65bbc2c4bf49e46fba"
        },
        "downloads": -1,
        "filename": "vimtk-0.2.0-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "66b96378df7d666e5fd84d91499de6cc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 34631,
        "upload_time": "2019-11-16T05:22:30",
        "upload_time_iso_8601": "2019-11-16T05:22:30.513108Z",
        "url": "https://files.pythonhosted.org/packages/44/8c/d0e4764cb14a24602bb498ad8ed415da4d72677559060d044d33761406c3/vimtk-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d161fc6255ffd8797149ca0d9e3814166b96c22d8a9c329dfebb877ef9a1ee66",
          "md5": "96e3fec55804068ad3fff49700f32680",
          "sha256": "772eac9d81fe4390021f31ffc3c05250f43e499d62160f716cf9ada32052b3b5"
        },
        "downloads": -1,
        "filename": "vimtk-0.2.0.tar.gz",
        "has_sig": true,
        "md5_digest": "96e3fec55804068ad3fff49700f32680",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34146,
        "upload_time": "2019-11-16T05:22:48",
        "upload_time_iso_8601": "2019-11-16T05:22:48.054691Z",
        "url": "https://files.pythonhosted.org/packages/d1/61/fc6255ffd8797149ca0d9e3814166b96c22d8a9c329dfebb877ef9a1ee66/vimtk-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf53d86d9cf28b17236be9a2f0c025dc006006b6476ee5d73588916f44c0044a",
          "md5": "81ca76f8b8f7b0fbd5ef25f8987f2bf2",
          "sha256": "cb0679cc074ed323347055068df4d33505fd2f0a67e3106cd4ef8f419bfd8ed3"
        },
        "downloads": -1,
        "filename": "vimtk-0.2.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "81ca76f8b8f7b0fbd5ef25f8987f2bf2",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 36185,
        "upload_time": "2019-12-05T16:03:14",
        "upload_time_iso_8601": "2019-12-05T16:03:14.297797Z",
        "url": "https://files.pythonhosted.org/packages/bf/53/d86d9cf28b17236be9a2f0c025dc006006b6476ee5d73588916f44c0044a/vimtk-0.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "079487585d05245bccd3abe5116ca86a28a9dd68ad181d1cd533884675a4d7cb",
          "md5": "ee18aadbe3388361427bc81ac0103316",
          "sha256": "372f15fb73462c6607fbcc5fe6a94ba107c51046f4ac966d71a36e8432086860"
        },
        "downloads": -1,
        "filename": "vimtk-0.2.1.tar.gz",
        "has_sig": true,
        "md5_digest": "ee18aadbe3388361427bc81ac0103316",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54142,
        "upload_time": "2019-12-05T16:03:16",
        "upload_time_iso_8601": "2019-12-05T16:03:16.680872Z",
        "url": "https://files.pythonhosted.org/packages/07/94/87585d05245bccd3abe5116ca86a28a9dd68ad181d1cd533884675a4d7cb/vimtk-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7cb632d9484265b95e73f2c018ff722a1e377f7fa406279c59315c80ac0740f",
          "md5": "03d47b6881a06c6900b618673cabf51c",
          "sha256": "3921274028e8de37a6b3406ccdd59c2896eecb719f118917ea6fe900bf2c5225"
        },
        "downloads": -1,
        "filename": "vimtk-0.3.1-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "03d47b6881a06c6900b618673cabf51c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 52336,
        "upload_time": "2022-06-29T22:38:38",
        "upload_time_iso_8601": "2022-06-29T22:38:38.748152Z",
        "url": "https://files.pythonhosted.org/packages/e7/cb/632d9484265b95e73f2c018ff722a1e377f7fa406279c59315c80ac0740f/vimtk-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af0a4e74ac69f287f5f542322268a881464cc510c9a34697c243b89a2a267df3",
          "md5": "20ad3d5725f35f9595006f11e5599184",
          "sha256": "48b730fe1d0832da10e8775d461acad02bb78fbc6f7dd7f0db628e212cc58a21"
        },
        "downloads": -1,
        "filename": "vimtk-0.3.1.tar.gz",
        "has_sig": true,
        "md5_digest": "20ad3d5725f35f9595006f11e5599184",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 51203,
        "upload_time": "2022-06-29T22:38:42",
        "upload_time_iso_8601": "2022-06-29T22:38:42.360293Z",
        "url": "https://files.pythonhosted.org/packages/af/0a/4e74ac69f287f5f542322268a881464cc510c9a34697c243b89a2a267df3/vimtk-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e7cb632d9484265b95e73f2c018ff722a1e377f7fa406279c59315c80ac0740f",
        "md5": "03d47b6881a06c6900b618673cabf51c",
        "sha256": "3921274028e8de37a6b3406ccdd59c2896eecb719f118917ea6fe900bf2c5225"
      },
      "downloads": -1,
      "filename": "vimtk-0.3.1-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "03d47b6881a06c6900b618673cabf51c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 52336,
      "upload_time": "2022-06-29T22:38:38",
      "upload_time_iso_8601": "2022-06-29T22:38:38.748152Z",
      "url": "https://files.pythonhosted.org/packages/e7/cb/632d9484265b95e73f2c018ff722a1e377f7fa406279c59315c80ac0740f/vimtk-0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af0a4e74ac69f287f5f542322268a881464cc510c9a34697c243b89a2a267df3",
        "md5": "20ad3d5725f35f9595006f11e5599184",
        "sha256": "48b730fe1d0832da10e8775d461acad02bb78fbc6f7dd7f0db628e212cc58a21"
      },
      "downloads": -1,
      "filename": "vimtk-0.3.1.tar.gz",
      "has_sig": true,
      "md5_digest": "20ad3d5725f35f9595006f11e5599184",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 51203,
      "upload_time": "2022-06-29T22:38:42",
      "upload_time_iso_8601": "2022-06-29T22:38:42.360293Z",
      "url": "https://files.pythonhosted.org/packages/af/0a/4e74ac69f287f5f542322268a881464cc510c9a34697c243b89a2a267df3/vimtk-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}