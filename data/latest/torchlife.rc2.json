{
  "info": {
    "author": "Sachinthaka Abeywardana",
    "author_email": "sachinra@it.usyd.edu.au",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# TorchLife\n> Survival Analysis using pytorch\n\n\nThis library takes a deep learning approach to Survival Analysis.\n\n## Install\n\n`pip install torchlife`\n\n## How to use\nWe need a dataframe that has a column named 't' indicating time, and 'e' indicating a death event.\n\n```\nimport pandas as pd\nimport numpy as np\nurl = \"https://raw.githubusercontent.com/CamDavidsonPilon/lifelines/master/lifelines/datasets/rossi.csv\"\ndf = pd.read_csv(url)\ndf.rename(columns={'week':'t', 'arrest':'e'}, inplace=True)\n```\n\n```\ndf.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>t</th>\n      <th>e</th>\n      <th>fin</th>\n      <th>age</th>\n      <th>race</th>\n      <th>wexp</th>\n      <th>mar</th>\n      <th>paro</th>\n      <th>prio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>20</td>\n      <td>1</td>\n      <td>0</td>\n      <td>27</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>17</td>\n      <td>1</td>\n      <td>0</td>\n      <td>18</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>25</td>\n      <td>1</td>\n      <td>0</td>\n      <td>19</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>52</td>\n      <td>0</td>\n      <td>1</td>\n      <td>23</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>52</td>\n      <td>0</td>\n      <td>0</td>\n      <td>19</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>3</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n```\nfrom torchlife.model import ModelHazard\n\nmodel = ModelHazard('cox', lr=0.5)\nmodel.fit(df)\nÎ», S = model.predict(df)\n```\n\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: left;\">\n      <th>epoch</th>\n      <th>train_loss</th>\n      <th>valid_loss</th>\n      <th>time</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>6.993955</td>\n      <td>10.741218</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>8.774823</td>\n      <td>14.736155</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>9.991431</td>\n      <td>16.564432</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>10.995527</td>\n      <td>17.174604</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>11.723181</td>\n      <td>16.920387</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>5</td>\n      <td>12.060142</td>\n      <td>15.983603</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>6</td>\n      <td>12.174074</td>\n      <td>14.553919</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>7</td>\n      <td>12.038597</td>\n      <td>12.683950</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>8</td>\n      <td>11.702325</td>\n      <td>10.452137</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>9</td>\n      <td>11.218502</td>\n      <td>7.981377</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>10</td>\n      <td>10.570101</td>\n      <td>5.209520</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>11</td>\n      <td>9.859859</td>\n      <td>4.039678</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>12</td>\n      <td>9.155064</td>\n      <td>3.643379</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>13</td>\n      <td>8.514476</td>\n      <td>2.742133</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>14</td>\n      <td>7.915660</td>\n      <td>3.074418</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>15</td>\n      <td>7.413548</td>\n      <td>2.585245</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>16</td>\n      <td>6.967895</td>\n      <td>2.710384</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>17</td>\n      <td>6.569957</td>\n      <td>2.544009</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>18</td>\n      <td>6.215098</td>\n      <td>2.433515</td>\n      <td>00:00</td>\n    </tr>\n    <tr>\n      <td>19</td>\n      <td>5.880322</td>\n      <td>2.342750</td>\n      <td>00:00</td>\n    </tr>\n  </tbody>\n</table>\n\n\nLet's plot the survival function for the 4th element in the dataframe:\n\n```\nx = df.drop(['t', 'e'], axis=1).iloc[2]\nt = np.arange(df['t'].max())\nmodel.plot_survival_function(t, x)\n```\n\n\n![png](docs/images/output_8_0.png)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sachinruk/torchlife",
    "keywords": "Survival Analysis,Deep Learning,PyTorch,Fastai",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "torchlife",
    "package_url": "https://pypi.org/project/torchlife/",
    "platform": "",
    "project_url": "https://pypi.org/project/torchlife/",
    "project_urls": {
      "Homepage": "https://github.com/sachinruk/torchlife"
    },
    "release_url": "https://pypi.org/project/torchlife/0.0.2/",
    "requires_dist": [
      "fastai (==1.0.61)",
      "torch (>=1.2.0)",
      "matplotlib",
      "pandas",
      "scipy"
    ],
    "requires_python": ">=3.6",
    "summary": "Deep Learning for Survival Analysis",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8035016,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f97c048a86ae30bb7c59067e68f18164cfe06deddf28a156130175e6f7f1e631",
          "md5": "24f499c495525bfeea905db31ecd51e9",
          "sha256": "6932f7105032bd9c5317dffbe38aa120c1d50c9ab27ba2cffee2d0a3bd362a81"
        },
        "downloads": -1,
        "filename": "torchlife-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "24f499c495525bfeea905db31ecd51e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15259,
        "upload_time": "2020-07-04T07:33:17",
        "upload_time_iso_8601": "2020-07-04T07:33:17.153403Z",
        "url": "https://files.pythonhosted.org/packages/f9/7c/048a86ae30bb7c59067e68f18164cfe06deddf28a156130175e6f7f1e631/torchlife-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7097e488187eab0748c0e9ad2b1f385522ac8bc43127c778aa70bf76b9cfe030",
          "md5": "c7d7222a36fc4cee2572986029289be2",
          "sha256": "b2e29b5100bb9f1e97939470d2cb84f97fb538e4d38b98dca43ecfe642ed4589"
        },
        "downloads": -1,
        "filename": "torchlife-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c7d7222a36fc4cee2572986029289be2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7797,
        "upload_time": "2020-07-04T07:33:19",
        "upload_time_iso_8601": "2020-07-04T07:33:19.500399Z",
        "url": "https://files.pythonhosted.org/packages/70/97/e488187eab0748c0e9ad2b1f385522ac8bc43127c778aa70bf76b9cfe030/torchlife-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58b1088f6cf26b14c72538509111f7ded823b4e1263f8cd624e02f55e43e3bbc",
          "md5": "a2c793b08d58ecb9136e416cb2c83c0b",
          "sha256": "64bbb1187baa6ee078d0a3351afaba121d1976a55f1d72c6a9f97873bc3a2a28"
        },
        "downloads": -1,
        "filename": "torchlife-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a2c793b08d58ecb9136e416cb2c83c0b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17238,
        "upload_time": "2020-08-25T12:11:27",
        "upload_time_iso_8601": "2020-08-25T12:11:27.445906Z",
        "url": "https://files.pythonhosted.org/packages/58/b1/088f6cf26b14c72538509111f7ded823b4e1263f8cd624e02f55e43e3bbc/torchlife-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f8852905c6e23bbb895efbb49451e9143149003c4bbbb1e2f5b3ef16a181310",
          "md5": "80fe12dbb149912f392de8258172c5b5",
          "sha256": "bc40d37bf6a443ae280537b6a77c99f29be912e79805415c9025b7ef0d5d93b5"
        },
        "downloads": -1,
        "filename": "torchlife-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "80fe12dbb149912f392de8258172c5b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10904,
        "upload_time": "2020-08-25T12:11:29",
        "upload_time_iso_8601": "2020-08-25T12:11:29.807031Z",
        "url": "https://files.pythonhosted.org/packages/1f/88/52905c6e23bbb895efbb49451e9143149003c4bbbb1e2f5b3ef16a181310/torchlife-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "58b1088f6cf26b14c72538509111f7ded823b4e1263f8cd624e02f55e43e3bbc",
        "md5": "a2c793b08d58ecb9136e416cb2c83c0b",
        "sha256": "64bbb1187baa6ee078d0a3351afaba121d1976a55f1d72c6a9f97873bc3a2a28"
      },
      "downloads": -1,
      "filename": "torchlife-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a2c793b08d58ecb9136e416cb2c83c0b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 17238,
      "upload_time": "2020-08-25T12:11:27",
      "upload_time_iso_8601": "2020-08-25T12:11:27.445906Z",
      "url": "https://files.pythonhosted.org/packages/58/b1/088f6cf26b14c72538509111f7ded823b4e1263f8cd624e02f55e43e3bbc/torchlife-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f8852905c6e23bbb895efbb49451e9143149003c4bbbb1e2f5b3ef16a181310",
        "md5": "80fe12dbb149912f392de8258172c5b5",
        "sha256": "bc40d37bf6a443ae280537b6a77c99f29be912e79805415c9025b7ef0d5d93b5"
      },
      "downloads": -1,
      "filename": "torchlife-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "80fe12dbb149912f392de8258172c5b5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10904,
      "upload_time": "2020-08-25T12:11:29",
      "upload_time_iso_8601": "2020-08-25T12:11:29.807031Z",
      "url": "https://files.pythonhosted.org/packages/1f/88/52905c6e23bbb895efbb49451e9143149003c4bbbb1e2f5b3ef16a181310/torchlife-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}