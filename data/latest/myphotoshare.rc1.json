{
  "info": {
    "author": "Paolo Benvenuto",
    "author_email": "paolobenve@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Multimedia :: Graphics :: Viewers"
    ],
    "description": "# MyPhotoShare v6.0.2 - A Static Web Photo Gallery with Advanced Features (March 7, 2022)\n\nExpose your media (pictures and videos) on the web and share them with family and friends. Publish them on a fast and secure static web site.\n\n![Features Tour](doc/img/myphotoshare-5-tour.gif)\n\n[[_TOC_]]\n\n## Static Website Does Not Mean Dummy Website\n\nIt's not because your photo gallery is in a static web site that it can't have advanced and user friendly features. We decided to make it static to be secure and fast but without features compromise!\n\n| Sample | Features |\n| -----: | :------- |\n| **Open-Source Web Photo Gallery Aimed at Sleekness and Speed**<br />The Python generator works over file directories rather than using a database. It creates static files. The result is a static, fast and secure web site.<br /><br />[Discover More...](#performance) | ![Scan photo albums video](doc/img/myphotoshare-5-scanner.mp4) |\n| ![Browse media video](doc/img/myphotoshare-5-browse.mp4) | **Navigate in Your Pictures and Videos as You Like**<br />Browse media by folder, date, keywords or tags, geotags and map.<br /><br />[Discover More...](doc/Metadata.md) |\n| **Add Captions and Tags to Pictures and Videos**<br />Enhance your media with descriptive metadata like date, title or description, GPS coordinates or tags.<br /><br />[Discover More...](doc/GPS.md) | ![Description and tags video](doc/img/myphotoshare-5-descriptions.mp4) |\n| ![Search by keywords video](doc/img/myphotoshare-5-search.mp4) | **Search Easily Media Content**<br />Advanced media search by keywords in title, description or tags. You can specify how and where to search. |\n| **Share Pictures with Friends and Family**<br />Download files, share albums or media files by email or over social platforms.<br /><br />[Discover More...](#share-pictures-with-friends) | ![Be Social video](doc/img/myphotoshare-5-social.mp4) |\n| ![Italian User Interface](doc/img/myphotoshare-5-italian.mp4) | **Customize the Gallery to Your Personal Look**<br />Change the look of the gallery with options in the configuration file.<br />Available in English, Italian, French and Spanish. Localizing to another language is easy.<br /><br />[Discover More...](web/js/031-translations.js) |\n| **Enhance it with Machine Learning Extensions**<br />Install extensions for [automatic face recognition](https://gitlab.com/pmetras/mps_autofaces) in your pictures and automatically tag them. Or improve [scenes recognition](https://gitlab.com/pmetras/mps_autoscenes) to detect scenes in pictures.<br /><br />[Discover More...](#add-a-touch-of-machine-learning-with-extensions) | ![Auto-tagging extensions](doc/img/myphotoshare-5-autotags.png) |\n| ![Use it on Your Phone](doc/img/myphotoshare-5-mobile.png) | **Mobile and Tablet Friendly**<br />Get all these nice features from your phone or tablet.<br /><br />[Discover More...](#a-mobile-friendly-media-gallery) |\n| **Keep Your Pictures Secure and Private**<br />Keep access to the gallery or some albums private, with password-restricted access.<br /><br />[Discover More...](doc/Authentication.md) | ![Protected Content video](doc/img/myphotoshare-5-protected.mp4) |\n\n## A Long List of Features\n\n### Show All Your Visual Media\n\n- [x] Manage images and videos, share them (individual images or videos or full albums): `png`, `jpg`, `mp4`, etc.\n- [x] Newer formats are managed: `webp` and `avif`. **[+ New in v6.1 +]**\n- [x] Media can be browsed by folder, by date or by geolocation. Switch between album, date and locations views.\n- [x] Media and folders can be sorted ascending/descending, by date or by name.\n- [x] Search media by file/album name, title, description or tags. Search whole word or inside words, considering accents and capitals or not, in current album (in virtual albums too) or in the whole albums tree.\n- [x] Thumbnails can be square (cropped, with optional face detection by [OpenCV](https://opencv.org/)) or full-content.\n- [x] Albums can be downloaded via the right `â˜°` menu, with or without subalbums, either images only, videos only, or both.\n- [x] Pictures can be automatically indexed and tagged with ML-based extensions.\n- [x] Page title can be set per language. **[+ New in v6.0 +]**\n\n### Features For Photographers\n\n- [x] Fullscreen mode.\n- [x] Photos with GPS data can be browsed by country/region-state/place; names are retrieved in choosen language from [GeoNames](https://www.geonames.org/) web service.\n- [x] EXIF, IPTC and XMP Metadata display.\n- [x] Link to original media.\n- [x] URL link for direct download.\n- [x] Enlarge a picture without any limit.\n- [x] The site owner can decide whether to replicate all Exif metadata (including copyright info) into all the reductions/thumbnails or not.\n- [x] Menu entries for direct download of whole album, with or without its subalbums. _[- since v4.1 -]_\n- [x] The site owner can decide not to make the original image accessible, or to serve a copy without the metadata instead of the full original one; he/she can hide the dates/positions of the images. **[+ New in v6.0 +]**\n\n[Discover more about metadata](doc/Metadata.md).\n\n### Geotag Your Media, And Enjoy Your Geotagged Media\n\n- [x] A popup map shows markers for the photos positions, using [Leaflet](https://leafletjs.com/). _[- since v3.7 -]_\n  - [x] The positions of the photos on the map are shown by markers; near markers are automatically clustered, and the photos number is shown in the cluster marker.\n  - [x] Click on the map and a photo popup with the thumbnails for the nearest marker/cluster are shown.\n  - [x] More photos can be added (with shift-click) to the photo popup and removed (with control-click) from it. Instead of using shift/control-click, a custom contextual menu with `+` (for adding) and `-` (for removing) is shown right-clicking on a marker/cluster; get it with a long tap on mobile.\n  - [x] Photos shown in the photo popup are clickable.\n  - [x] Images collected in the photo popup can be shown as an album, browsed and sorted.\n- [x] A special mode shows only the non-geotagged content. _[- since v5.3 -]_\n- [x] Optional feature: the user can be given the ability to suggest the location of the photos missing it; the suggestion is sent by a reserved mail to the site owner. _[- since v5.3 -]_\n\n[Discover more about GPS](doc/GPS.md).\n\n### A Mobile Friendly Media Gallery\n\n- [x] Sharp images and thumbnails on mobile.\n- [x] Smooth media scaling.\n- [x] Swipe, pinch and drag gestures for mobile. _[- since v3.6 -]_\n\n\n### A Great User Interface\n\n- [x] Available in English, Italian, Spanish, French. User interface translated via separate translation file. Add your language!\n- [x] Animations to make the interface feel nice.\n  - [x] Media animation when passing to next/previous media.\n- [x] Separate album view and photo view.\n- [x] Numerous user interface options can be changed by the user.\n- [x] Mouse-wheel support, including for pinching (with ctrl or shift).\n- [x] Keyboard navigation: `arrows`, `pageup`/`down`, `ESCAPE`, `f` (fullscreen), `d` (download original), `o` (show original), `m` (map), `t` (metadata), `s` (start slideshow), `e` (open right menu), `+` (pinch in), `-` (pinch out), `space`/`backspace` (like in [Darktable](https://www.darktable.org/)), `>`/`<` (rotation among browsing modes: folders -> by date -> by gps -> by search -> by map -> by selection), `[`/`]` (changing sort of albums in a rotative way), `{`/`}` (changing sort of media in a rotative way).\n- [x] Keyboard dragging when the photo is zoomed in.\n- [x] Lazy thumbnails load for a faster page load. _[- since v3.7 -]_\n- [x] Shortcuts can be customized for any language. _[- since v5.0 -]_\n- [x] Searched text is highlighted (thanks to [mark.js](https://github.com/julmot/mark.js/)). _[- since v5.3 -]_\n- [x] A contextual help is available showing the available shortcuts in current view (shortcut `h`). _[- since v5.5 -]_\n- [x] A slideshow of the current album can be started (shortcut `s`), paused and resumed; speed can be varied; media are by default rotated when they fit better on screen (optional on the pc). **[+ New in v6.0 +]**\n\n[Discover more about keyboard navigation](doc/Navigation.md).\n\n### Share Pictures With Friends\n\n- [x] Share buttons for `facebook`, `whatsapp` (mobile only), `twitter`, `pinterest`, `email`; on `facebook`, `whatsapp` and `pinterest`: a preview of the image/album is shared.\n  - [x] The shareable-with-image link can be copied to clipboard: useful for sharing with _WhatsApp Web_ on the PC. _[- since v5.7 -]_\n  - [x] Sharing uses a tiny url. _[- since v5.7 -]_\n  - [x] Among the sharing buttons, another button permits to copy the tiny url for sharing to the clipboard - useful when using whatsapp web. _[- since v5.7 -]_\n  - [x] You can activate other social sites like `google`, `linkedin`, `tumbler`, `vk` or `buffer` in configuration.\n\n### Tuned For Speed\n\n- [x] Album metadata pre-fetching.\n- [x] Photo pre-loading\n  - [x] preloading can be disabled for a save-data mode. _[- since v5.5 -]_\n- [x] Scanner uses recursive async randomized tree walking album thumbnail algorithm.\n- [x] HTML5 with minified CSS and JavaScript files for minimal load time.\n- [x] in addition to `jpg`, the `webp` format is available for cache images, permitting to the moder browsers a significant increase in site loading and images downloading. _[- since v5.4 -]_\n- [x] the `avif` format is available for cache images, too _[- since v6.1 -]_\n- [x] A `save data mode` is available: by gps albums and maps are not available, and any non strictly needed image isn't loaded o preloaded. This mode can be set by the site owner; the user can always set/unset it. Especially suited for slow and _pay-for-usage_ internet connections. _[- since v5.5 -]_\n\n### Control Access to Your Works\n\n- [x] Albums and photo can be protected by passwords. Passwords may be specified for albums, for files or both. _[- since v4.0 -]_\n  - [x] Patterns are defined in album tree and specify what every password should protect; allowed matching modes: case sensitive/insensitive, whole/part of dir/file name, dir only/files only/both.\n  - [x] Passwords aren't exposed in javascript, and sensitive data and media are extremely difficult to find in cache.\n  - [x] A password request can be sent to the site owner in case of forgetting it. The user cannot see the email address which the request is sent to. _[- since v5.0 -]_\n- [x] Original images can be either hidden or showed through a copy in the cache tree; they can have their dates, positions, and other metadata (any combination of the 3 elements) hidden: this feature is made for those - like professional Photographers - who cannot expose their full size works. **[+ New in v6.0 +]**\n\n[Discover more about protecting your media](doc/Authentication.md).\n\n### Use Virtual Albums\n\n- [x] Albums and media can be selected via a click or massively, either in _hard_ albums (the default tree, by date, by location) and virtual ones (from search results, by gps or by map navigation). _[- since v5.0 -]_\n  - [x] Selected media and albums can be seen as an album, and can be browsed, downloaded, sorted, shown on map, etc.\n\n### Add a Touch of Machine Learning with Extensions\n\n- [x] Automatic face recognition in pictures with [mps_autofaces](https://gitlab.com/pmetras/mps_autofaces): you can tag all your family members automatically from a small sample of pictures. _[- since v5.0 -]_\n- [x] Automatic scenes recognition and indexing in pictures with [mps_autoscenes](https://gitlab.com/pmetras/mps_autoscenes). _[- since v5.0 -]_\n\n### And More...\n\n- [x] Analytics with optional [Google Analytics](https://analytics.google.com/) and [Matomo](https://matomo.org/) integration.\n- [x] Many customizations available through configuration file.\n- [x] Cache folder is optimized with subdirs: useful for large repositories.\n- [x] Source albums server folders can be anywhere on the server.\n- [x] Prevent some folders (or trees) from being scanned by putting a marker inside them.\n- [x] Scanner verbosity levels can be set in the configuration file.\n- [x] Developer friendly with debug mode for using unminimized CSS and JavaScript files.\n- [x] Photos metadata can be overloaded by user defined values in special `album.ini` files.\n- [x] Consistent hash URL format.\n- [x] Create Debian/Ubuntu package with [mps_debian](https://gitlab.com/pmetras/mps_debian) for easy install.\n\nFind [answers to your remaining questions in the FAQ](doc/FAQ.md) and [in the documentation](doc).\n\n## Try It By Yourself\n\n- **[Primary demo site](https://myphotosharedemo.qumran2.net/)** - Default english UI (but every site is seen in the system language if it is among the translated ones) with Multilingual content. Latest development version updated constantly to gitlab's development branch. Protected content available, the password is _pwd_.\n- [Demo AlternaTV](https://www.alterna.tv/myphotoshare_demo/) - Multilingual content. Latest development version updated daily running on a netbook.\n- [Assunta Palmaro](http://palmaro.qumran2.net/) - in Italian\n- [Fiori](http://fiori.qumran2.net/) - in Italian\n\n## Install It\n\n### Debian/Ubuntu package\n\nThe easy way with the [Debian/Ubuntu package](https://gitlab.com/pmetras/mps_debian/-/releases). Install it with a command like `sudo dpkg -i myphotoshare_VERSION.deb` after changing for the `VERSION` you downloaded.\n\nThen drop some pictures into `/usr/local/share/media` directory and wait for the scanner cron task to update the cache during the night.\n\nOr start an update right now with the command `myphotoshare_scanner /etc/myphotoshare/myphotoshare.conf`. But perhaps you'll like to set a few personal options in the configuration file `/etc/myphotoshare/myphotoshare.conf` before...\n\n### Detailed Manual Install\n\nIf you prefer to keep control and understand how it works, follow the [Setup and update instructions](https://gitlab.com/paolobenve/myphotoshare/-/blob/master/doc/Install.md). We'll explain how to get the latest revision from [Gitlab](https://gitlab.com/paolobenve/myphotoshare) and setup a web site step by step.\n\n## Start Your Media Gallery in 6 Easy Steps\n\n### Quick 'n dirty setup, in order to give `MyPhotoShare` a try:\n\n1. `cd`\n1. `wget https://gitlab.com/paolobenve/myphotoshare/-/archive/master/myphotoshare-master.zip` (54 MB)\n1. `unzip myphotoshare-master.zip`: this will unzip `MyPhotoShare`'s files, within `myphotoshare-master` directory\n1. `cd myphotoshare-master`\n1. `ln -s /path/to/your/album/tree web/albums`\n1. `bin/scanner --web-root-path web`: this command runs the scanner, generating the `web/cache` directory with all its content\n1. `bin/js-css-minify.sh`: this will generate the minified js and css files\n1. `cd web`\n1. `sudo apt install php-cli` on debian/ubuntu: this installs a web server on your pc, it's needed to display your gallery. No need to do this if php is already installed\n1. `php -S localhost:8080`: this runs the local web server (you could have to change the port if 8080 is already used on your system)\n\nNow, in your browser, open `http://localhost:8080/index.php`: you'll see the `MyPhotoShare` beautiful gallery!\n\n### Installing on a production server\n\n1. You must have a web server to display your gallery.\n1. [Install MyPhotoShare](#install-it).\n1. Adapt the configuration file [`myphotoshare.conf`](myphotoshare.conf.defaults) that you have copied to your liking. At a minimum, you must change 3 settings to locate where is the web root, where are the media albums, and where the cache files are written.\n1. Run the js/css minimizer: `bin/js-css-minify.sh /path/to/your/myphotoshare.conf`\n1. Drop pictures and videos into the `albums` directory.\n1. Run MyPhotoShare scanner (look for `myphotoshare_scanner` command or `bin/scanner`), with at least one argument: the options file. This populates MyPhotoShare cache and creates indexes.\n1. When the scanner has completed successfully, aim your web browser at your web site and enjoy!\n\n## Get and Give Help\n\nRead the [documentation](doc). We explain advanced features there.\n\nIf it does not work as you expect, create an [issue on GitLab](https://gitlab.com/paolobenve/myphotoshare/-/issues). We'll try to help you.\n\nRead the [source](https://gitlab.com/paolobenve/myphotoshare/) and contribute.\n\n## Under The Hood: How Does It Work?\n\nMyPhotoShare consists of two segments â€“ a Python script and a JavaScript application.\n\nThe Python script scans a directory tree of images and videos (we use media as a general term), whereby each directory constitutes an album. It then populates a second folder, known as the cache folder with statically generated JSON files and thumbnails. It writes the `options.json` file too in the html root folder, putting inside it all the options from the configuration file. The scanner extracts metadata from EXIF tags in JPEG photos and other data from videos or `album.ini` user-defined files in albums to create JSON index files in the cache. MyPhotoShare is smart about file and directory modification time and it will be quite fast if there are few or zero changes since the last time you ran it.\n\nThe JavaScript application consists of a single `index.php` or `index.html` page. It fetches the `options.json` file and the statically generated JSON files and thumbnails on the fly from the cache folder to create a speedy interface.\n\n### Performance\n\n#### Scanner Performance\n\nAs a term of comparizon, on a medium-sized PC, with the images on a NFS mounted NAS partition:\n\n- Scanning with face detection for the first time a 692 photos directory tree for a total size of 2.3 GB takes about 700 seconds (about 1 sec/media, 1 media/sec); face detection takes about 267 ms/photo.\n- Re-scan of \"all OK\" tree of 36,000 media files for a total size of 87 GB takes about 14 minutes (20 ms/media, 50 media/sec) if not using checksums, and about 90 minutes (110 ms/media, 9 media/sec) when using checksums.\n- Scanning for the first time about 40,000 photo with less than 100 videos takes about 5 hours with checksums enabled.\n- Scanning of videos takes a much longer time than photos, the larger the videos the greater the time.\n\n#### Memory Usage\n\nScanning 45,000 media requires no more than 1.5 GB/2.1 GB of resident/virtual memory.\n\n#### Javascript Code\n\nThe javascript app is optimized, and it works fluently with 40,000 media!\n\nHowever, showing an album or clicking on a marker with more than 1,000 photos, slowlyness is expected. Despite the slowlyness, everything ends correctly and is still usable.\n\n#### Cache Size\n\nOf course, static web performance is traded against cache size on disk. We tried to keep it reasonable. The cache size ratio to the original albums size depends on multiple factors, like the number of intermediate picture sizes you want (see option `reduced_sizes` in configuraton file) and the video encoding options (see `video_preset` for instance) or video length.\n\n| Site                | Number of Media        | Album Size | Cache Size | Cache / Album Ratio |\n| ------------------- | ---------------------- | ---------: | ---------: | ------------------: |\n| AlternaTV Demo      | 95 pictures            |     675 MB |     116 MB |                 17% |\n| Production Site # 1 | 14K media (20 videos)  |      95 GB |      25 GB |                 26% |\n| Production Site # 2 | 20K media (439 videos) |      92 GB |      66 GB |                 71% |\n| Production Site # 3 | 26K media (430 videos) |     232 GB |      82 GB |                 35% |\n\n## MyPhotoShare History and License\n\n**MyPhotoShare** is a [Jason A. Donenfeld's photofloat](https://git.zx2c4.com/PhotoFloat/about/) fork when Jason stopped development in 2016, enriched by Jerome Charaoui's patches to support videos, and Paolo Benvenuto and Pierre MÃ©tras following development.\n\nIt is free software licensed under the GNU General Public License v3, see [the license](LICENSE).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/paolobenve/myphotoshare",
    "keywords": "gallery,photos,json",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "myphotoshare",
    "package_url": "https://pypi.org/project/myphotoshare/",
    "platform": null,
    "project_url": "https://pypi.org/project/myphotoshare/",
    "project_urls": {
      "Bug Reports": "https://gitlab.com/paolobenve/myphotosharet/issues",
      "Homepage": "https://gitlab.com/paolobenve/myphotoshare",
      "Source": "https://gitlab.com/paolobenve/myphotoshare"
    },
    "release_url": "https://pypi.org/project/myphotoshare/6.0.2/",
    "requires_dist": [
      "python-magic",
      "numpy",
      "requests",
      "Pillow",
      "Unidecode",
      "exif",
      "pillow-avif-plugin",
      "opencv-python",
      "check-manifest ; extra == 'dev'",
      "coverage ; extra == 'test'"
    ],
    "requires_python": ">=3.7, <4",
    "summary": "A Static Web Photo Gallery with Advanced Features",
    "version": "6.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13688079,
  "releases": {
    "6.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d70b87dac66aa4bdc37aeeb442dd2e3c835806801a3a303a614490d1f5c94ece",
          "md5": "3aad25e1a5260785da669da7ac8868ee",
          "sha256": "33dd23074a66003c56ac387435364b5d009a749837a4a40e8bdc1cd48691011d"
        },
        "downloads": -1,
        "filename": "myphotoshare-6.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3aad25e1a5260785da669da7ac8868ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 24098,
        "upload_time": "2022-05-02T13:23:23",
        "upload_time_iso_8601": "2022-05-02T13:23:23.647638Z",
        "url": "https://files.pythonhosted.org/packages/d7/0b/87dac66aa4bdc37aeeb442dd2e3c835806801a3a303a614490d1f5c94ece/myphotoshare-6.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d70b87dac66aa4bdc37aeeb442dd2e3c835806801a3a303a614490d1f5c94ece",
        "md5": "3aad25e1a5260785da669da7ac8868ee",
        "sha256": "33dd23074a66003c56ac387435364b5d009a749837a4a40e8bdc1cd48691011d"
      },
      "downloads": -1,
      "filename": "myphotoshare-6.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3aad25e1a5260785da669da7ac8868ee",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <4",
      "size": 24098,
      "upload_time": "2022-05-02T13:23:23",
      "upload_time_iso_8601": "2022-05-02T13:23:23.647638Z",
      "url": "https://files.pythonhosted.org/packages/d7/0b/87dac66aa4bdc37aeeb442dd2e3c835806801a3a303a614490d1f5c94ece/myphotoshare-6.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}