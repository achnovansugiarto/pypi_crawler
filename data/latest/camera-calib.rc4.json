{
  "info": {
    "author": "Justin Blaber",
    "author_email": "justin.akira.blaber@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# camera_calib_python\n\nThis is a python based camera calibration \"library\". Some things:\n\n* Uses [nbdev](https://github.com/fastai/nbdev), which is an awesome and fun way to develop and tinker.\n* Uses pytorch for optimization of intrinsic and extrinsic parameters. Each step in the model is modularized as its own pytorch `nn.module` in the `modules.ipynb` notebook. \n    * Optimization is carried out via the built in `LBFGS` optimizer. The `LBFGS` optimizer uses only the gradient to do a quasi second order optimization. However, I've noticed it's imperfect and can a take long time to converge in some cases.\n    * The use of pytorch allows the forward pass to be easily modified. It also allows the use of any differentiable loss function although I've noticed that sum of squared errors seems to give the best results of the losses I've tried.\n* The fiducial point detector for my calibration board uses a pytorch neural net under the hood (more info [here](https://github.com/justinblaber/fiducial_detect)), which is easily integrated into this library since its python based.\n\n# Tutorial\n\n\n```python\nimport camera_calib.api as api\n```\n\nBefore calibration can be done, we need the following information:\n\n1. Images and their respective camera and pose indices\n2. Calibration board geometry\n3. Fiducial point detector\n4. Control point refiner\n\n### 1) Images\n\n\n```python\nimport re\nfrom pathlib import Path\n```\n\n\n```python\nfiles_img = list(Path('data/dot_vision_checker').glob('*.png'))\nfiles_img\n```\n\n\n\n\n    [PosixPath('data/dot_vision_checker/SERIAL_16276941_DATETIME_2019-06-07-00:38:48-109732_CAM_2_FRAMEID_0_COUNTER_2.png'),\n     PosixPath('data/dot_vision_checker/SERIAL_19061245_DATETIME_2019-06-07-00:38:19-438594_CAM_1_FRAMEID_0_COUNTER_1.png'),\n     PosixPath('data/dot_vision_checker/SERIAL_16276942_DATETIME_2019-06-07-00:38:19-438636_CAM_3_FRAMEID_0_COUNTER_1.png'),\n     PosixPath('data/dot_vision_checker/SERIAL_16276942_DATETIME_2019-06-07-00:38:48-109736_CAM_3_FRAMEID_0_COUNTER_2.png'),\n     PosixPath('data/dot_vision_checker/SERIAL_16276941_DATETIME_2019-06-07-00:38:19-438631_CAM_2_FRAMEID_0_COUNTER_1.png')]\n\n\n\n\n```python\ndef _parse_name(name_img):\n    match = re.match(r'''SERIAL_(?P<serial>.*)_\n                         DATETIME_(?P<date>.*)_\n                         CAM_(?P<cam>.*)_\n                         FRAMEID_(?P<frameid>.*)_\n                         COUNTER_(?P<counter>.*).png''', \n                     name_img, \n                     re.VERBOSE)\n    return match.groupdict()\n```\n\n\n```python\nimgs = []\nfor file_img in files_img:\n    dict_group = _parse_name(file_img.name)\n    img = api.File16bitImg(file_img)\n    img.idx_cam = int(dict_group['cam'])-1\n    img.idx_cb  = int(dict_group['counter'])-1\n    imgs.append(img)\n```\n\n\n```python\nfor img in imgs: print(f'{img.name} - cam: {img.idx_cam} - cb: {img.idx_cb}')\n```\n\n    SERIAL_16276941_DATETIME_2019-06-07-00:38:48-109732_CAM_2_FRAMEID_0_COUNTER_2 - cam: 1 - cb: 1\n    SERIAL_19061245_DATETIME_2019-06-07-00:38:19-438594_CAM_1_FRAMEID_0_COUNTER_1 - cam: 0 - cb: 0\n    SERIAL_16276942_DATETIME_2019-06-07-00:38:19-438636_CAM_3_FRAMEID_0_COUNTER_1 - cam: 2 - cb: 0\n    SERIAL_16276942_DATETIME_2019-06-07-00:38:48-109736_CAM_3_FRAMEID_0_COUNTER_2 - cam: 2 - cb: 1\n    SERIAL_16276941_DATETIME_2019-06-07-00:38:19-438631_CAM_2_FRAMEID_0_COUNTER_1 - cam: 1 - cb: 0\n\n\n### 2) Calibration board geometry\n\nThe calibration board geometry specifies where fiducial markers and control points are located. For this example, my dot vision checker board is used.\n\n\n```python\nh_cb = 50.8\nw_cb = 50.8\nh_f = 42.672\nw_f = 42.672\nnum_c_h = 16\nnum_c_w = 16\nspacing_c = 2.032\ncb_geom = api.CbGeom(h_cb, w_cb,\n                     api.CpCSRGrid(num_c_h, num_c_w, spacing_c),\n                     api.FmCFPGrid(h_f, w_f))\n```\n\n\n```python\ncb_geom.plot()\n```\n\n\n![png](README_files/README_14_0.png)\n\n\n### 3) Fiducial detector\n\n\n```python\nfrom pathlib import Path\n```\n\nThis fiducial detector will take in an image and return the locations of the fiducial markers. The detector in this example is a neural net trained specifically on my calibration board. More info available at:\n\n* https://github.com/justinblaber/fiducial_detect\n\n\n```python\nfile_model = Path('models/dot_vision_checker.pth')\ndetector = api.DotVisionCheckerDLDetector(file_model)\n```\n\n### 4) Control Point Refiner\n\nThe refiner will take in an image, initial guesses for control points, and the boundaries around the control points, and return a refined point. The boundaries help determine how much neighboring info can be used to refine the control point.\n\n\n```python\nrefiner = api.OpenCVCheckerRefiner(hw_min=5, hw_max=15, cutoff_it=20, cutoff_norm=1e-3)\n```\n\n## Calibrate\n\nNow, we can calibrate\n\n\n```python\ncalib = api.multi_calib(imgs, cb_geom, detector, refiner)\n```\n\n    Refining control points for: SERIAL_19061245_DATETIME_2019-06-07-00:38:19-438594_CAM_1_FRAMEID_0_COUNTER_1...\n    Refining single parameters...\n     - Iteration: 000 - Norm:    0.00492 - Loss:    5.36733\n     - Iteration: 001 - Norm:    0.14985 - Loss:    3.73449\n     - Iteration: 002 - Norm:    0.01378 - Loss:    3.72178\n     - Iteration: 003 - Norm:    3.80677 - Loss:    3.50140\n     - Iteration: 004 - Norm:   60.91136 - Loss:    1.69839\n     - Iteration: 005 - Norm:    0.00000 - Loss:    1.69839\n    Refining control points for: SERIAL_16276941_DATETIME_2019-06-07-00:38:48-109732_CAM_2_FRAMEID_0_COUNTER_2...\n    Refining control points for: SERIAL_16276941_DATETIME_2019-06-07-00:38:19-438631_CAM_2_FRAMEID_0_COUNTER_1...\n    Refining single parameters...\n     - Iteration: 000 - Norm:    0.04150 - Loss:  145.18373\n     - Iteration: 001 - Norm:    0.13431 - Loss:   83.63355\n     - Iteration: 002 - Norm:    0.84358 - Loss:    3.92886\n     - Iteration: 003 - Norm:    0.27788 - Loss:    3.59249\n     - Iteration: 004 - Norm:   27.32694 - Loss:    2.63209\n     - Iteration: 005 - Norm:    0.01238 - Loss:    2.63208\n     - Iteration: 006 - Norm:    0.00000 - Loss:    2.63208\n    Refining control points for: SERIAL_16276942_DATETIME_2019-06-07-00:38:19-438636_CAM_3_FRAMEID_0_COUNTER_1...\n    Refining control points for: SERIAL_16276942_DATETIME_2019-06-07-00:38:48-109736_CAM_3_FRAMEID_0_COUNTER_2...\n    Refining single parameters...\n     - Iteration: 000 - Norm:    0.04606 - Loss:   59.69785\n     - Iteration: 001 - Norm:    0.18309 - Loss:   23.21653\n     - Iteration: 002 - Norm:    0.19523 - Loss:   10.38509\n     - Iteration: 003 - Norm:    0.09765 - Loss:   10.04688\n     - Iteration: 004 - Norm:    1.24157 - Loss:    9.89971\n     - Iteration: 005 - Norm:  104.59411 - Loss:    1.76128\n     - Iteration: 006 - Norm:    0.29888 - Loss:    1.76086\n     - Iteration: 007 - Norm:    0.00000 - Loss:    1.76086\n    Refining multi parameters...\n     - Iteration: 000 - Norm:    0.00057 - Loss:   10.14000\n     - Iteration: 001 - Norm:    0.00077 - Loss:    8.43795\n     - Iteration: 002 - Norm:    0.00093 - Loss:    8.04904\n     - Iteration: 003 - Norm:    0.00117 - Loss:    7.83528\n     - Iteration: 004 - Norm:    0.00270 - Loss:    7.61741\n     - Iteration: 005 - Norm:    0.00085 - Loss:    7.56616\n     - Iteration: 006 - Norm:    0.00390 - Loss:    7.39859\n     - Iteration: 007 - Norm:    0.00385 - Loss:    7.29511\n     - Iteration: 008 - Norm:    0.00106 - Loss:    7.28492\n     - Iteration: 009 - Norm:    0.00278 - Loss:    7.27331\n     - Iteration: 010 - Norm:    0.00804 - Loss:    7.24146\n     - Iteration: 011 - Norm:    0.00827 - Loss:    7.21109\n     - Iteration: 012 - Norm:    0.00414 - Loss:    7.20269\n     - Iteration: 013 - Norm:    0.00452 - Loss:    7.19479\n     - Iteration: 014 - Norm:    0.00009 - Loss:    7.19475\n     - Iteration: 015 - Norm:    0.01420 - Loss:    7.17619\n     - Iteration: 016 - Norm:    0.00618 - Loss:    7.17040\n     - Iteration: 017 - Norm:    0.01975 - Loss:    7.15089\n     - Iteration: 018 - Norm:    0.00002 - Loss:    7.15089\n     - Iteration: 019 - Norm:    0.00000 - Loss:    7.15089\n\n\nFrom Bo Li's calibration paper, we know the coordinate graph of calibration board poses and cameras forms a bipartite graph. For debugging purposes this is displayed below.\n\n\n```python\napi.plot_bipartite(calib)\n```\n\n\n![png](README_files/README_26_0.png)\n\n\nPlot residuals\n\n\n```python\napi.plot_residuals(calib);\n```\n\n\n![png](README_files/README_28_0.png)\n\n\nPlot extrinsics; note that `%matplotlib notebook` can be used to make the plot interactive\n\n\n```python\nimport matplotlib.pyplot as plt\n```\n\n\n```python\nfig = plt.figure(figsize=(20,20))\n\nax = fig.add_subplot(2, 2, 1, projection='3d')\napi.plot_extrinsics(calib, ax=ax)\nax.view_init(elev=90, azim=-90)\n\nax = fig.add_subplot(2, 2, 2, projection='3d')\napi.plot_extrinsics(calib, ax=ax)\nax.view_init(elev=45, azim=-45)\n\nax = fig.add_subplot(2, 2, 3, projection='3d')\napi.plot_extrinsics(calib, ax=ax)\nax.view_init(elev=0, azim=-90)\n\nax = fig.add_subplot(2, 2, 4, projection='3d')\napi.plot_extrinsics(calib, ax=ax)\nax.view_init(elev=0, azim=0)\n\nplt.subplots_adjust(wspace=0, hspace=0)\n```\n\n\n![png](README_files/README_31_0.png)\n\n\nThis matches pretty closely to my camera rig\n\n## Save/Load\n\nSave\n\n\n```python\napi.save(calib, '/tmp/calib.pth')\n```\n\nLoad\n\n\n```python\ndel calib\n```\n\n\n```python\ncalib = api.load('/tmp/calib.pth')\n```\n\n# Build\n\n\n```python\nfrom camera_calib.utils import convert_notebook\n```\n\n\n```python\nconvert_notebook()\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/justinblaber/camera_calib/tree/master/",
    "keywords": "camera calibration",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "camera-calib",
    "package_url": "https://pypi.org/project/camera-calib/",
    "platform": "",
    "project_url": "https://pypi.org/project/camera-calib/",
    "project_urls": {
      "Homepage": "https://github.com/justinblaber/camera_calib/tree/master/"
    },
    "release_url": "https://pypi.org/project/camera-calib/0.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Camera Calibration with pytorch",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7902674,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4611a0244b1fb460c446ae6e55d68a4dcd72b1446adc4897f1a3018a9131472c",
          "md5": "7e42af7087ab8e6c921b6d93d6877f4c",
          "sha256": "17e5901a09008266ded332cb087d438ff6849b39c4507dc9e085fa2b6ec34702"
        },
        "downloads": -1,
        "filename": "camera_calib-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e42af7087ab8e6c921b6d93d6877f4c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 29460,
        "upload_time": "2020-07-26T20:34:40",
        "upload_time_iso_8601": "2020-07-26T20:34:40.650776Z",
        "url": "https://files.pythonhosted.org/packages/46/11/a0244b1fb460c446ae6e55d68a4dcd72b1446adc4897f1a3018a9131472c/camera_calib-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30f21429e659c82dc41cc1a517228619cf198596777cf07337d5b02c8eff3fe5",
          "md5": "ecabc9dbaa46d9583bbfa0efedf31770",
          "sha256": "295d00172f28dece603c4978826fcfa705b117aee530e594306cf520267b81df"
        },
        "downloads": -1,
        "filename": "camera_calib-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ecabc9dbaa46d9583bbfa0efedf31770",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27733,
        "upload_time": "2020-07-26T20:34:55",
        "upload_time_iso_8601": "2020-07-26T20:34:55.906779Z",
        "url": "https://files.pythonhosted.org/packages/30/f2/1429e659c82dc41cc1a517228619cf198596777cf07337d5b02c8eff3fe5/camera_calib-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05f650b69489743248234636940863fdaa9df65962849458dff1bec7a208f3f3",
          "md5": "2f3d214779c5a7469487019715d62485",
          "sha256": "62e6b5a75f86712220c545af963b2668bf34b0848fcd5207d74162b1fa9eaa87"
        },
        "downloads": -1,
        "filename": "camera_calib-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f3d214779c5a7469487019715d62485",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 29564,
        "upload_time": "2020-07-31T22:34:07",
        "upload_time_iso_8601": "2020-07-31T22:34:07.733380Z",
        "url": "https://files.pythonhosted.org/packages/05/f6/50b69489743248234636940863fdaa9df65962849458dff1bec7a208f3f3/camera_calib-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09b776dd63df12afffbe682d1987ad001a0a0b9829106d9a3b2a70cf1a9e50f1",
          "md5": "addb96146478f7da5df2d28dafdd7ce6",
          "sha256": "f9f533e654b7fd90af584f1c8ed4ca298ea8cf6eb47b84d463d047611d107fb0"
        },
        "downloads": -1,
        "filename": "camera_calib-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "addb96146478f7da5df2d28dafdd7ce6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27819,
        "upload_time": "2020-07-31T22:34:09",
        "upload_time_iso_8601": "2020-07-31T22:34:09.114885Z",
        "url": "https://files.pythonhosted.org/packages/09/b7/76dd63df12afffbe682d1987ad001a0a0b9829106d9a3b2a70cf1a9e50f1/camera_calib-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d68224000a708c930b093e6b93d3908cab566216e8b763c23fb9ca7edaca4d41",
          "md5": "988fb73d382dc175269c13b5f99e4a00",
          "sha256": "106ccdaca51f088c543a021a992f3abf37b47e6e37361809cbdb864447ccb766"
        },
        "downloads": -1,
        "filename": "camera_calib-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "988fb73d382dc175269c13b5f99e4a00",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 29563,
        "upload_time": "2020-08-02T14:04:50",
        "upload_time_iso_8601": "2020-08-02T14:04:50.623057Z",
        "url": "https://files.pythonhosted.org/packages/d6/82/24000a708c930b093e6b93d3908cab566216e8b763c23fb9ca7edaca4d41/camera_calib-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a7c269621e094506fca648a8720adca5fab058daf20fd31af48ecb5f20ba228",
          "md5": "d0edc8b31bd4f72680b08d8eee69ebf6",
          "sha256": "7b391b259a3bbd8eef2a5ad6e0df421e3b694f769f4f46278248a574658858a0"
        },
        "downloads": -1,
        "filename": "camera_calib-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d0edc8b31bd4f72680b08d8eee69ebf6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27823,
        "upload_time": "2020-08-02T14:04:51",
        "upload_time_iso_8601": "2020-08-02T14:04:51.706762Z",
        "url": "https://files.pythonhosted.org/packages/7a/7c/269621e094506fca648a8720adca5fab058daf20fd31af48ecb5f20ba228/camera_calib-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d808f1e20734af24c0f848a77a4093eea35434011e5ca3b7104c566139c15df",
          "md5": "a7a7f62d111539d8df5b865d9cdc1671",
          "sha256": "083dbccea5c09850ad7c0344750a989e3f02dfb1eab1b909ffeda230ae3c3324"
        },
        "downloads": -1,
        "filename": "camera_calib-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a7a7f62d111539d8df5b865d9cdc1671",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 29520,
        "upload_time": "2020-08-06T20:44:03",
        "upload_time_iso_8601": "2020-08-06T20:44:03.314731Z",
        "url": "https://files.pythonhosted.org/packages/9d/80/8f1e20734af24c0f848a77a4093eea35434011e5ca3b7104c566139c15df/camera_calib-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4bc3cdab19f4196b7ad31f982a5738dbf30414816aab0438ce16a2139296838",
          "md5": "1f35864596c885350be8121b38916b01",
          "sha256": "3d5c43e264dd64fcac01350bfdbd77ad115f0aef5393818c127448e9fff92ba2"
        },
        "downloads": -1,
        "filename": "camera_calib-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1f35864596c885350be8121b38916b01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27785,
        "upload_time": "2020-08-06T20:44:04",
        "upload_time_iso_8601": "2020-08-06T20:44:04.920732Z",
        "url": "https://files.pythonhosted.org/packages/f4/bc/3cdab19f4196b7ad31f982a5738dbf30414816aab0438ce16a2139296838/camera_calib-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d808f1e20734af24c0f848a77a4093eea35434011e5ca3b7104c566139c15df",
        "md5": "a7a7f62d111539d8df5b865d9cdc1671",
        "sha256": "083dbccea5c09850ad7c0344750a989e3f02dfb1eab1b909ffeda230ae3c3324"
      },
      "downloads": -1,
      "filename": "camera_calib-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a7a7f62d111539d8df5b865d9cdc1671",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 29520,
      "upload_time": "2020-08-06T20:44:03",
      "upload_time_iso_8601": "2020-08-06T20:44:03.314731Z",
      "url": "https://files.pythonhosted.org/packages/9d/80/8f1e20734af24c0f848a77a4093eea35434011e5ca3b7104c566139c15df/camera_calib-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f4bc3cdab19f4196b7ad31f982a5738dbf30414816aab0438ce16a2139296838",
        "md5": "1f35864596c885350be8121b38916b01",
        "sha256": "3d5c43e264dd64fcac01350bfdbd77ad115f0aef5393818c127448e9fff92ba2"
      },
      "downloads": -1,
      "filename": "camera_calib-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "1f35864596c885350be8121b38916b01",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 27785,
      "upload_time": "2020-08-06T20:44:04",
      "upload_time_iso_8601": "2020-08-06T20:44:04.920732Z",
      "url": "https://files.pythonhosted.org/packages/f4/bc/3cdab19f4196b7ad31f982a5738dbf30414816aab0438ce16a2139296838/camera_calib-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}