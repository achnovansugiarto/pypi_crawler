{
  "info": {
    "author": "Karthik Kumaar",
    "author_email": "karthikkumar.m@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "WebSSH\n------\n\n|Build Status| |codecov| |PyPI - Python Version| |PyPI|\n\nIntroduction\n~~~~~~~~~~~~\n\nA simple web application to be used as an ssh client to connect to your\nssh servers. It is written in Python, base on tornado, paramiko and\nxterm.js.\n\nFeatures\n~~~~~~~~\n\n-  SSH password authentication supported, including empty password.\n-  SSH public-key authentication supported, including DSA RSA ECDSA\n   Ed25519 keys.\n-  Encrypted keys supported.\n-  Two-Factor Authentication (time-based one-time password) supported.\n-  Fullscreen terminal supported.\n-  Terminal window resizable.\n-  Auto detect the ssh server's default encoding.\n-  Modern browsers including Chrome, Firefox, Safari, Edge, Opera\n   supported.\n\nPreview\n~~~~~~~\n\n|Login| |Terminal|\n\nHow it works\n~~~~~~~~~~~~\n\n::\n\n    +---------+     http     +--------+    ssh    +-----------+\n    | browser | <==========> | webssh | <=======> | ssh server|\n    +---------+   websocket  +--------+    ssh    +-----------+\n\nRequirements\n~~~~~~~~~~~~\n\n-  Python 2.7/3.4+\n\nQuickstart\n~~~~~~~~~~\n\n1. Install this app, run command ``pip install webssh``\n2. Start a webserver, run command ``wssh``\n3. Open your browser, navigate to ``127.0.0.1:8888``\n4. Input your data, submit the form.\n\nServer options\n~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    # start a http server with specified listen address and listen port\n    wssh --address='2.2.2.2' --port=8000\n\n    # start a https server, certfile and keyfile must be passed\n    wssh --certfile='/path/to/cert.crt' --keyfile='/path/to/cert.key'\n\n    # missing host key policy\n    wssh --policy=reject\n\n    # logging level\n    wssh --logging=debug\n\n    # log to file\n    wssh --log-file-prefix=main.log\n\n    # more options\n    wssh --help\n\nBrowser console\n~~~~~~~~~~~~~~~\n\n.. code:: javascript\n\n    // connect to your ssh server\n    wssh.connect(hostname, port, username, password, privatekey, passphrase, totp);\n\n    // pass an object to wssh.connect\n    var opts = {\n      hostname: 'hostname',\n      port: 'port',\n      username: 'username',\n      password: 'password',\n      privatekey: 'the private key text',\n      passphrase: 'passphrase',\n      totp: 'totp'\n    };\n    wssh.connect(opts);\n\n    // without an argument, wssh will use the form data to connect\n    wssh.connect();\n\n    // set a new encoding for client to use\n    wssh.set_encoding(encoding);\n\n    // reset encoding to use the default one\n    wssh.reset_encoding();\n\n    // send a command to the server\n    wssh.send('ls -l');\n\nCustom Font\n~~~~~~~~~~~\n\nTo use custom font, put your font file in the directory\n``webssh/static/css/fonts/`` and restart the server.\n\nURL Arguments\n~~~~~~~~~~~~~\n\nSupport passing arguments by url (query or fragment) like following\nexamples:\n\nPassing form data (password must be encoded in base64, privatekey not\nsupported)\n\n.. code:: bash\n\n    http://localhost:8888/?hostname=xx&username=yy&password=str_base64_encoded\n\nPassing a terminal background color\n\n.. code:: bash\n\n    http://localhost:8888/#bgcolor=green\n\nPassing a user defined title\n\n.. code:: bash\n\n    http://localhost:8888/?title=my-ssh-server\n\nPassing an encoding\n\n.. code:: bash\n\n    http://localhost:8888/#encoding=gbk\n\nPassing a command executed right after login\n\n.. code:: bash\n\n    http://localhost:8888/?command=pwd\n\nPassing a terminal type\n\n.. code:: bash\n\n    http://localhost:8888/?term=xterm-256color\n\nUse Docker\n~~~~~~~~~~\n\nStart up the app\n\n::\n\n    docker-compose up\n\nTear down the app\n\n::\n\n    docker-compose down\n\nTests\n~~~~~\n\nRequirements\n\n::\n\n    pip install pytest pytest-cov codecov flake8 mock\n\nUse unittest to run all tests\n\n::\n\n    python -m unittest discover tests\n\nUse pytest to run all tests\n\n::\n\n    python -m pytest tests\n\nDeployment\n~~~~~~~~~~\n\nRunning behind an Nginx server\n\n.. code:: bash\n\n    wssh --address='127.0.0.1' --port=8888 --policy=reject\n\n.. code:: nginx\n\n    # Nginx config example\n    location / {\n        proxy_pass http://127.0.0.1:8888;\n        proxy_http_version 1.1;\n        proxy_read_timeout 300;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n        proxy_set_header Host $http_host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Real-PORT $remote_port;\n    }\n\nRunning as a standalone server\n\n.. code:: bash\n\n    wssh --port=8080 --sslport=4433 --certfile='cert.crt' --keyfile='cert.key' --xheaders=False --policy=reject\n\nTips\n~~~~\n\n-  For whatever deployment choice you choose, don't forget to enable\n   SSL.\n-  By default plain http requests from a public network will be either\n   redirected or blocked and being redirected takes precedence over\n   being blocked.\n-  Try to use reject policy as the missing host key policy along with\n   your verified known\\_hosts, this will prevent man-in-the-middle\n   attacks. The idea is that it checks the system host keys\n   file(\"~/.ssh/known\\_hosts\") and the application host keys\n   file(\"./known\\_hosts\") in order, if the ssh server's hostname is not\n   found or the key is not matched, the connection will be aborted.\n\n.. |Build Status| image:: https://travis-ci.org/huashengdun/webssh.svg?branch=master\n   :target: https://travis-ci.org/huashengdun/webssh\n.. |codecov| image:: https://codecov.io/gh/huashengdun/webssh/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/huashengdun/webssh\n.. |PyPI - Python Version| image:: https://img.shields.io/pypi/pyversions/webssh.svg\n.. |PyPI| image:: https://img.shields.io/pypi/v/webssh.svg\n.. |Login| image:: https://github.com/huashengdun/webssh/raw/master/preview/login.png\n.. |Terminal| image:: https://github.com/huashengdun/webssh/raw/master/preview/terminal.png\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kkumarM/webssh",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dc-webssh",
    "package_url": "https://pypi.org/project/dc-webssh/",
    "platform": null,
    "project_url": "https://pypi.org/project/dc-webssh/",
    "project_urls": {
      "Homepage": "https://github.com/kkumarM/webssh"
    },
    "release_url": "https://pypi.org/project/dc-webssh/1.0.0/",
    "requires_dist": [
      "tornado (>=4.5.0)",
      "paramiko (>=2.3.1)"
    ],
    "requires_python": "",
    "summary": "Web based ssh client for DC-bench",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14801784,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c25397ac69a3472cfa6cca9bb1f338200e1b63605103617d3f56268fc194adbd",
          "md5": "40334737b95d3275618e45786707c663",
          "sha256": "ece00ed2a3b8129e52c61ebd0bde0136ffcb51d965c3e62744b1c3e9c868af9d"
        },
        "downloads": -1,
        "filename": "dc_webssh-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "40334737b95d3275618e45786707c663",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 167824,
        "upload_time": "2022-08-18T13:32:15",
        "upload_time_iso_8601": "2022-08-18T13:32:15.287591Z",
        "url": "https://files.pythonhosted.org/packages/c2/53/97ac69a3472cfa6cca9bb1f338200e1b63605103617d3f56268fc194adbd/dc_webssh-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ebf51e813b79a7a211048606e6b860b2485c4ba4f5ddb1cb04b9b5b983fa508",
          "md5": "972c53d008f71855f0ca760d6b9b8104",
          "sha256": "0542f976f9be631ccc9fc93ebe3ec9ff52270db52d2303f5d5d08c5ba29fc0ab"
        },
        "downloads": -1,
        "filename": "dc-webssh-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "972c53d008f71855f0ca760d6b9b8104",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 183871,
        "upload_time": "2022-08-18T13:32:18",
        "upload_time_iso_8601": "2022-08-18T13:32:18.253386Z",
        "url": "https://files.pythonhosted.org/packages/9e/bf/51e813b79a7a211048606e6b860b2485c4ba4f5ddb1cb04b9b5b983fa508/dc-webssh-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c25397ac69a3472cfa6cca9bb1f338200e1b63605103617d3f56268fc194adbd",
        "md5": "40334737b95d3275618e45786707c663",
        "sha256": "ece00ed2a3b8129e52c61ebd0bde0136ffcb51d965c3e62744b1c3e9c868af9d"
      },
      "downloads": -1,
      "filename": "dc_webssh-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "40334737b95d3275618e45786707c663",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 167824,
      "upload_time": "2022-08-18T13:32:15",
      "upload_time_iso_8601": "2022-08-18T13:32:15.287591Z",
      "url": "https://files.pythonhosted.org/packages/c2/53/97ac69a3472cfa6cca9bb1f338200e1b63605103617d3f56268fc194adbd/dc_webssh-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9ebf51e813b79a7a211048606e6b860b2485c4ba4f5ddb1cb04b9b5b983fa508",
        "md5": "972c53d008f71855f0ca760d6b9b8104",
        "sha256": "0542f976f9be631ccc9fc93ebe3ec9ff52270db52d2303f5d5d08c5ba29fc0ab"
      },
      "downloads": -1,
      "filename": "dc-webssh-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "972c53d008f71855f0ca760d6b9b8104",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 183871,
      "upload_time": "2022-08-18T13:32:18",
      "upload_time_iso_8601": "2022-08-18T13:32:18.253386Z",
      "url": "https://files.pythonhosted.org/packages/9e/bf/51e813b79a7a211048606e6b860b2485c4ba4f5ddb1cb04b9b5b983fa508/dc-webssh-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}