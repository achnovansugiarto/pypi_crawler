{
  "info": {
    "author": "",
    "author_email": "Loris Ercole <loris.ercole@epfl.ch>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: AiiDA",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python"
    ],
    "description": "[![Build Status](https://github.com/epfl-theos/aiida-aurora/workflows/ci/badge.svg?branch=master)](https://github.com/epfl-theos/aiida-aurora/actions)\n[![Coverage Status](https://coveralls.io/repos/github/epfl-theos/aiida-aurora/badge.svg?branch=master)](https://coveralls.io/github/epfl-theos/aiida-aurora?branch=master)\n[![Docs status](https://readthedocs.org/projects/aiida-aurora/badge)](http://aiida-aurora.readthedocs.io/)\n[![PyPI version](https://badge.fury.io/py/aiida-aurora.svg)](https://badge.fury.io/py/aiida-aurora)\n\n# aiida-aurora\n\nAiiDA plugin for the Aurora project (autonomous robotic battery innovation platform).\nA collaboration between EPFL & Empa, within the BIG-MAP Stakeholder Initiative Call 2021.\n\n## Repository contents\n\n* [`.github/`](.github/): [Github Actions](https://github.com/features/actions) configuration\n  * [`ci.yml`](.github/workflows/ci.yml): runs tests, checks test coverage and builds documentation at every new commit\n  * [`publish-on-pypi.yml`](.github/workflows/publish-on-pypi.yml): automatically deploy git tags to PyPI - just generate a [PyPI API token](https://pypi.org/help/#apitoken) for your PyPI account and add it to the `pypi_token` secret of your github repository\n* [`aiida_aurora/`](aiida_aurora/): The main source code of the plugin package\n  * [`data/`](aiida_aurora/data/): A new `DiffParameters` data class, used as input to the `DiffCalculation` `CalcJob` class\n  * [`calculations.py`](aiida_aurora/calculations.py): A new `DiffCalculation` `CalcJob` class\n  * [`cli.py`](aiida_aurora/cli.py): Extensions of the `verdi data` command line interface for the `DiffParameters` class\n  * [`helpers.py`](aiida_aurora/helpers.py): Helpers for setting up an AiiDA code for `diff` automatically\n  * [`parsers.py`](aiida_aurora/parsers.py): A new `Parser` for the `DiffCalculation`\n* [`docs/`](docs/): A documentation template ready for publication on [Read the Docs](http://aiida-diff.readthedocs.io/en/latest/)\n* [`examples/`](examples/): An example of how to submit a calculation using this plugin\n* [`tests/`](tests/): Basic regression tests using the [pytest](https://docs.pytest.org/en/latest/) framework (submitting a calculation, ...). Install `pip install -e .[testing]` and run `pytest`.\n* [`.coveragerc`](.coveragerc): Configuration of [coverage.py](https://coverage.readthedocs.io/en/latest) tool reporting which lines of your plugin are covered by tests\n* [`.gitignore`](.gitignore): Telling git which files to ignore\n* [`.pre-commit-config.yaml`](.pre-commit-config.yaml): Configuration of [pre-commit hooks](https://pre-commit.com/) that sanitize coding style and check for syntax errors. Enable via `pip install -e .[pre-commit] && pre-commit install`\n* [`.readthedocs.yml`](.readthedocs.yml): Configuration of documentation build for [Read the Docs](https://readthedocs.org/)\n* [`LICENSE`](LICENSE): License for your plugin\n* [`MANIFEST.in`](MANIFEST.in): Configure non-Python files to be included for publication on [PyPI](https://pypi.org/)\n* [`README.md`](README.md): This file\n* [`conftest.py`](conftest.py): Configuration of fixtures for [pytest](https://docs.pytest.org/en/latest/)\n* [`pytest.ini`](pytest.ini): Configuration of [pytest](https://docs.pytest.org/en/latest/) test discovery\n* [`setup.json`](setup.json): Plugin metadata for registration on [PyPI](https://pypi.org/) and the [AiiDA plugin registry](https://aiidateam.github.io/aiida-registry/) (including entry points)\n* [`setup.py`](setup.py): Installation script for pip / [PyPI](https://pypi.org/)\n\n\nSee also the following video sequences from the 2019-05 AiiDA tutorial:\n\n * [aiida-diff setup.json](https://www.youtube.com/watch?v=2CxiuiA1uVs&t=240s)\n * [run aiida-diff example calculation](https://www.youtube.com/watch?v=2CxiuiA1uVs&t=403s)\n * [aiida-diff CalcJob plugin](https://www.youtube.com/watch?v=2CxiuiA1uVs&t=685s)\n * [aiida-diff Parser plugin](https://www.youtube.com/watch?v=2CxiuiA1uVs&t=936s)\n * [aiida-diff computer/code helpers](https://www.youtube.com/watch?v=2CxiuiA1uVs&t=1238s)\n * [aiida-diff input data (with validation)](https://www.youtube.com/watch?v=2CxiuiA1uVs&t=1353s)\n * [aiida-diff cli](https://www.youtube.com/watch?v=2CxiuiA1uVs&t=1621s)\n * [aiida-diff tests](https://www.youtube.com/watch?v=2CxiuiA1uVs&t=1931s)\n * [Adding your plugin to the registry](https://www.youtube.com/watch?v=760O2lDB-TM&t=112s)\n * [pre-commit hooks](https://www.youtube.com/watch?v=760O2lDB-TM&t=333s)\n\nFor more information, see the [developer guide](https://aiida-diff.readthedocs.io/en/latest/developer_guide) of your plugin.\n\n\n## Features\n\n * Add input files using `SinglefileData`:\n   ```python\n   SinglefileData = DataFactory('singlefile')\n   inputs['file1'] = SinglefileData(file='/path/to/file1')\n   inputs['file2'] = SinglefileData(file='/path/to/file2')\n   ```\n\n * Specify command line options via a python dictionary and `DiffParameters`:\n   ```python\n   d = { 'ignore-case': True }\n   DiffParameters = DataFactory('aurora')\n   inputs['parameters'] = DiffParameters(dict=d)\n   ```\n\n * `DiffParameters` dictionaries are validated using [voluptuous](https://github.com/alecthomas/voluptuous).\n   Find out about supported options:\n   ```python\n   DiffParameters = DataFactory('aurora')\n   print(DiffParameters.schema.schema)\n   ```\n\n## Installation\n\n```shell\npip install aiida-aurora\nverdi quicksetup  # better to set up a new profile\nverdi plugin list aiida.calculations  # should now show your calclulation plugins\n```\n\n\n## Usage\n\nHere goes a complete example of how to submit a test calculation using this plugin.\n\nA quick demo of how to submit a calculation:\n```shell\nverdi daemon start     # make sure the daemon is running\ncd examples\n./example_01.py        # run test calculation\nverdi process list -a  # check record of calculation\n```\n\nThe plugin also includes verdi commands to inspect its data types:\n```shell\nverdi data aurora list\nverdi data aurora export <PK>\n```\n\n## Development\n\n```shell\ngit clone https://github.com/epfl-theos/aiida-aurora .\ncd aiida-aurora\npip install -e .[pre-commit,testing]  # install extra dependencies\npre-commit install  # install pre-commit hooks\npytest -v  # discover and run all tests\n```\n\nSee the [developer guide](http://aiida-aurora.readthedocs.io/en/latest/developer_guide/index.html) for more information.\n\n## License\n\nMIT\n## Contact\n\nloris.ercole@epfl.ch\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "aiida,plugin,aurora",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiida-aurora",
    "package_url": "https://pypi.org/project/aiida-aurora/",
    "platform": null,
    "project_url": "https://pypi.org/project/aiida-aurora/",
    "project_urls": {
      "Source": "https://github.com/epfl-theos/aiida-aurora"
    },
    "release_url": "https://pypi.org/project/aiida-aurora/0.2.0/",
    "requires_dist": [
      "aiida-core>=1.6.5,<2.0.0",
      "pydantic",
      "sphinx ; extra == \"docs\"",
      "sphinxcontrib-contentui ; extra == \"docs\"",
      "sphinxcontrib-details-directive ; extra == \"docs\"",
      "furo ; extra == \"docs\"",
      "markupsafe<2.1 ; extra == \"docs\"",
      "pre-commit~=2.2 ; extra == \"pre-commit\"",
      "pylint>=2.5.0,<2.9 ; extra == \"pre-commit\"",
      "pgtest~=1.3.1 ; extra == \"testing\"",
      "wheel~=0.31 ; extra == \"testing\"",
      "coverage[toml] ; extra == \"testing\"",
      "pytest~=6.0 ; extra == \"testing\"",
      "pytest-cov ; extra == \"testing\""
    ],
    "requires_python": ">=3.8",
    "summary": "AiiDA plugin for the Aurora platform.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14704518,
  "releases": {
    "0.1.0a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05b925da6dabb8a038e3299639745c6d20aa9bae02042f072beec9a4c94bddde",
          "md5": "606e054f4b404febfc5358bc8ad897b2",
          "sha256": "ae7a1d6328937ebc1816950069a821bd1400b93695d1272fe11bc8966ea681d9"
        },
        "downloads": -1,
        "filename": "aiida_aurora-0.1.0a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "606e054f4b404febfc5358bc8ad897b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21820,
        "upload_time": "2022-08-09T16:16:26",
        "upload_time_iso_8601": "2022-08-09T16:16:26.612727Z",
        "url": "https://files.pythonhosted.org/packages/05/b9/25da6dabb8a038e3299639745c6d20aa9bae02042f072beec9a4c94bddde/aiida_aurora-0.1.0a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c2272dc3c9857699863e4f5275979e273dbb95b0e2ae95916b28258e8d70082",
          "md5": "d4c3a02a5546c177994dec1edb500f82",
          "sha256": "b4926d61827c5d78af2d3e6bb9cd2d3661577a39fbdcf6a2a81885323e13f110"
        },
        "downloads": -1,
        "filename": "aiida-aurora-0.1.0a0.tar.gz",
        "has_sig": false,
        "md5_digest": "d4c3a02a5546c177994dec1edb500f82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18863,
        "upload_time": "2022-08-09T16:16:28",
        "upload_time_iso_8601": "2022-08-09T16:16:28.615703Z",
        "url": "https://files.pythonhosted.org/packages/2c/22/72dc3c9857699863e4f5275979e273dbb95b0e2ae95916b28258e8d70082/aiida-aurora-0.1.0a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3d5a1750c39d66d131c770d50f227b89f471effd910111a492518d192a9a43e",
          "md5": "24c2890f922a1a721dd4f15ba38646a8",
          "sha256": "07bc2663637622e122686087b2c77d7a11e63e363212cf8d2b41403ab29757b0"
        },
        "downloads": -1,
        "filename": "aiida_aurora-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "24c2890f922a1a721dd4f15ba38646a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 21576,
        "upload_time": "2022-08-09T16:24:49",
        "upload_time_iso_8601": "2022-08-09T16:24:49.145156Z",
        "url": "https://files.pythonhosted.org/packages/c3/d5/a1750c39d66d131c770d50f227b89f471effd910111a492518d192a9a43e/aiida_aurora-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d403188330d19900c5132246f104441a7cea1de7850c0bd9026db35af3ee69c",
          "md5": "9163a460ce9b045b0ddb740528191847",
          "sha256": "122fe3717895f557c530f43be92ca6ad9edaa02d59fef8aba8c6d8f1ee182242"
        },
        "downloads": -1,
        "filename": "aiida-aurora-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9163a460ce9b045b0ddb740528191847",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 18238,
        "upload_time": "2022-08-09T16:24:51",
        "upload_time_iso_8601": "2022-08-09T16:24:51.797995Z",
        "url": "https://files.pythonhosted.org/packages/9d/40/3188330d19900c5132246f104441a7cea1de7850c0bd9026db35af3ee69c/aiida-aurora-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c3d5a1750c39d66d131c770d50f227b89f471effd910111a492518d192a9a43e",
        "md5": "24c2890f922a1a721dd4f15ba38646a8",
        "sha256": "07bc2663637622e122686087b2c77d7a11e63e363212cf8d2b41403ab29757b0"
      },
      "downloads": -1,
      "filename": "aiida_aurora-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "24c2890f922a1a721dd4f15ba38646a8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 21576,
      "upload_time": "2022-08-09T16:24:49",
      "upload_time_iso_8601": "2022-08-09T16:24:49.145156Z",
      "url": "https://files.pythonhosted.org/packages/c3/d5/a1750c39d66d131c770d50f227b89f471effd910111a492518d192a9a43e/aiida_aurora-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d403188330d19900c5132246f104441a7cea1de7850c0bd9026db35af3ee69c",
        "md5": "9163a460ce9b045b0ddb740528191847",
        "sha256": "122fe3717895f557c530f43be92ca6ad9edaa02d59fef8aba8c6d8f1ee182242"
      },
      "downloads": -1,
      "filename": "aiida-aurora-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9163a460ce9b045b0ddb740528191847",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 18238,
      "upload_time": "2022-08-09T16:24:51",
      "upload_time_iso_8601": "2022-08-09T16:24:51.797995Z",
      "url": "https://files.pythonhosted.org/packages/9d/40/3188330d19900c5132246f104441a7cea1de7850c0bd9026db35af3ee69c/aiida-aurora-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}