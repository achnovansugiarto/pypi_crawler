{
  "info": {
    "author": "Adrien Cossa",
    "author_email": "souliane@mailoo.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Software Development :: Documentation"
    ],
    "description": "## Presentation\n\nThis is a Python package to convert [structurizr](https://structurizr.com/)\nworkspace (\\*.dsl or \\*.json format) to [diagrams.net](https://www.diagrams.net/)\n(\\*.csv format). You will get in diagrams.net, and using its built-in elements,\nsome C4 diagrams that look similar to what structurizr generates (see\n[here](https://structurizr.com/dsl?example=big-bank-plc) for examples).\n\nThe CSV format for importing in diagrams.net is not well documented, and it looks\nstrange indeed, because CSV is (of course) not made to describe such things as\narchitectural diagrams. A lot of information has to be passed in comments.\nAnyway, this is currently the best/easiest way to achieve the conversion.\nThe output CSV that you will get from this program can be inserted following\n[this](https://www.diagrams.net/blog/insert-from-csv).\n\nIt is always good to manually review because you might have to adjust some\nthings, for example to add some waypoints to the connectors that are crossing\nsome boxes (I prefer to export straight connectors, because the automatically set\nwaypoints are not ideally placed anyway).\n\n### DSL to CSV\n\nWhen passing a \\*.dsl file, the program will automatically use structurizr/cli\nin background to convert it to JSON. Since diagrams.net autolayout didn't give\nacceptable results, it will also apply GraphViz autolayout. The JSON will then\nbe converted to CSV.\n\n### JSON to CSV\n\nYou can also directly pass a \\*.json file. In this case, structurizr/cli won't\nbe needed, but it is expected that all the elements' positions are already fixed\nin your JSON. If it is not the case, no worries - just follow\n [this](https://github.com/structurizr/cli/issues/62#issuecomment-999623728)\n (this is actually what we do in the background when processing a DSL).\n\n## Results\n\nThose are examples of results that you will get in diagrams.net.\nThe source workspaces come from structurizr's DSL repository, you can find them\n[here](https://github.com/structurizr/dsl/tree/master/examples).\n\n\n![](screenshots/big-bank-plc.component.png)\n![](screenshots/big-bank-plc.system-landscape.png)\n![](screenshots/groups.container.png)\n\n## TODO\n\nIt is still in beta and it doesn't support the full DSL grammar. For instance,\ndynamic diagrams are handled like \"normal\" ones, deployment diagrams are\ncompletely ignored, and all the styling information is also ignored.\nInstead, we use the \"default\" C4 styles and colors.\n\nThere are also some issues when it comes to identify what elements are internal\nor external, thus you will notice that the boxes' colors do not always match\nthe diagrams that are generated by structurizr.\n\nFeel free to report issues using the gitlab feature. Please provide as much\ndetails as possible and attach your DSL or JSON file (if the content can be\npublicly shared).\n\n## Installation\n\n### Option 1: Docker\nInstall [Docker](https://www.docker.com/) and run this to print the usage:\n```\ndocker run -it -v //var/run/docker.sock:/var/run/docker.sock -v `pwd`:/structurizr2csv  souliane/structurizr2csv:latest structurizr2csv --help\n```\nNote: the docket socket needs to be exposed to the container for running a\nstructurizr/cli container when we are inside the structurizr2dsl container.\nThis is faking \"docker in docker\" (dind) and it is a recommended approach.\nIf you pass an already existing *.json file instead of a *.dsl one, you won't need this.\n\n### Option 2: Git\nInstall [git](https://git-scm.com/) and Python 3.10, then proceed this way:\n```\ngit clone git@gitlab.com:souliane/structurizr2csv.git\ncd structurizr2csv\npython3 -m pip install -r requirements.txt\nPYTHONPATH=src ./src/structurizr2csv/convert.py --help\n```\n\n### Option 3: Pip\nInstall Python 3.10 and [pip](https://pypi.org/project/pip/), then do:\n```\npython3 -m pip install structurizr2csv\nstructurizr2csv --help\n```\n\n## Usage\n\n```\nusage: structurizr2csv [-h] [-a FILETYPE] [-o OUTPUT_PATH] input_path\n\nConvert structurizr DSL or JSON (for describing C4 models) to diagrams.net CSV format\n\npositional arguments:\n  input_path            input workspace file, either *.dsl or *.json. If you pass a *.json file, it is expected to define\n                        the positions of each elements. If you pass a *.dsl file, it will be automatically transformed to\n                        JSON and GraphViz auto layout will be applied (this is done with the official Docker image for\n                        structurizr/cli, so you need a running Docker system for this to work with a *.dsl file).\n                        When using the '-a {dsl,json}' option, this must be the path to a directory.\n\noptions:\n  -h, --help            show this help message and exit\n  -a {dsl,json}, --all {dsl,json}\n                        process all the files in 'input_path' that are of the given type\n  -o OUTPUT_PATH, --output OUTPUT_PATH\n                        output base directory for the CSV files (workspace basename will be appended)\n```\n\n## Testing\n\nCurrent testing is minimal and it just checks that the produced *.csv files match some\n\"golden files\" - those are the output that I have \"manually\" checked while developing.\n\nTests can be run directly with pytest using `make tests`, or via tox with `make tox`\n(this creates in the background a dedicated environment, install the package and\nits dependency, and then run the tests).\n\n## Acknowledgements\n\nMany thanks to [Simon Brown](https://simonbrown.je/) (C4 model and structurizr) and [Torsten Mosis](https://gitlab.com/systemticks/c4-grammar)\n(vscode C4 plugin).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/souliane/structurizr2csv",
    "keywords": "",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "structurizr2csv",
    "package_url": "https://pypi.org/project/structurizr2csv/",
    "platform": "",
    "project_url": "https://pypi.org/project/structurizr2csv/",
    "project_urls": {
      "Documentation": "https://gitlab.com/souliane/structurizr2csv",
      "Homepage": "https://gitlab.com/souliane/structurizr2csv",
      "Source": "https://gitlab.com/souliane/structurizr2csv"
    },
    "release_url": "https://pypi.org/project/structurizr2csv/0.1/",
    "requires_dist": [
      "pydantic (==1.8.2)"
    ],
    "requires_python": ">=3.10",
    "summary": "Convert structurizr DSL or JSON (for describing C4 models) to diagrams.net CSV format",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12839365,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d03b084e05ee2da0b75ee1dc7cbf35447fbeea4783c485c39449eeb7ac190cfa",
          "md5": "3b76c3127bdb70b975bd3c62c7aa4604",
          "sha256": "27b4c4c52054b4bcab13a3754d11c90f01c565f28b29f2b48335846913011bc2"
        },
        "downloads": -1,
        "filename": "structurizr2csv-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b76c3127bdb70b975bd3c62c7aa4604",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 36806,
        "upload_time": "2022-02-09T14:46:28",
        "upload_time_iso_8601": "2022-02-09T14:46:28.998193Z",
        "url": "https://files.pythonhosted.org/packages/d0/3b/084e05ee2da0b75ee1dc7cbf35447fbeea4783c485c39449eeb7ac190cfa/structurizr2csv-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccd7df666c01d9340d4277a2f666e8dc87847f0325d86264c1b578979cede2ad",
          "md5": "ef85a7faf760e1accf7549f8978b6f84",
          "sha256": "34bd7f29da67fc086a97a60124fceca7c8ad7d4f4655542581e43909596ce577"
        },
        "downloads": -1,
        "filename": "structurizr2csv-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ef85a7faf760e1accf7549f8978b6f84",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 39184,
        "upload_time": "2022-02-09T14:46:31",
        "upload_time_iso_8601": "2022-02-09T14:46:31.115997Z",
        "url": "https://files.pythonhosted.org/packages/cc/d7/df666c01d9340d4277a2f666e8dc87847f0325d86264c1b578979cede2ad/structurizr2csv-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d03b084e05ee2da0b75ee1dc7cbf35447fbeea4783c485c39449eeb7ac190cfa",
        "md5": "3b76c3127bdb70b975bd3c62c7aa4604",
        "sha256": "27b4c4c52054b4bcab13a3754d11c90f01c565f28b29f2b48335846913011bc2"
      },
      "downloads": -1,
      "filename": "structurizr2csv-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3b76c3127bdb70b975bd3c62c7aa4604",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 36806,
      "upload_time": "2022-02-09T14:46:28",
      "upload_time_iso_8601": "2022-02-09T14:46:28.998193Z",
      "url": "https://files.pythonhosted.org/packages/d0/3b/084e05ee2da0b75ee1dc7cbf35447fbeea4783c485c39449eeb7ac190cfa/structurizr2csv-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ccd7df666c01d9340d4277a2f666e8dc87847f0325d86264c1b578979cede2ad",
        "md5": "ef85a7faf760e1accf7549f8978b6f84",
        "sha256": "34bd7f29da67fc086a97a60124fceca7c8ad7d4f4655542581e43909596ce577"
      },
      "downloads": -1,
      "filename": "structurizr2csv-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ef85a7faf760e1accf7549f8978b6f84",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 39184,
      "upload_time": "2022-02-09T14:46:31",
      "upload_time_iso_8601": "2022-02-09T14:46:31.115997Z",
      "url": "https://files.pythonhosted.org/packages/cc/d7/df666c01d9340d4277a2f666e8dc87847f0325d86264c1b578979cede2ad/structurizr2csv-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}