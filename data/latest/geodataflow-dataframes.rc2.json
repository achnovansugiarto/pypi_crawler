{
  "info": {
    "author": "Alvaro Huarte",
    "author_email": "ahuarte47@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Atmospheric Science",
      "Topic :: Scientific/Engineering :: GIS",
      "Topic :: Scientific/Engineering :: Image Processing",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# geodataflow.dataframes\r\n\r\nGeodataFlow backend implementation with [GeoPandas](https://geopandas.org/) (GeoDataFrames).\r\n\r\n**GeodataFlow** is a Geoprocessing framework for fetching, translating and manipulating Geospatial data (*Raster*, *Vector*, *EO/STAC collections*) by using a *Pipeline* or sequence of operations on input data. It is very much like the [_GDAL_](https://gdal.org/) library which handles raster and vector data.\r\n\r\nThe project is split up into several namespace packages. `geodataflow.dataframes` implements a backend for GeodataFlow using the GeoPandas library and other common OSGeo python packages. This package includes the `geodataflow.core` and `geodataflow.spatial` subpackages.\r\n\r\nAlthough `geodataflow.dataframes` provides a list of useful modules, since Backend implementations for **GeodataFlow** load them using the paradigm of plugins, developers can easily write new operations and the list may grow up in the future.\r\n\r\n### Workflow examples\r\n\r\nAssuming you are using `geodataflow.dataframes` (GeoPandas) as active backend implementation, **GeodataFlow** can run workflows as the following:\r\n\r\n+ Converting a Shapefile to GeoPackage:\r\n  ```bash\r\n  # ==============================================================\r\n  # Pipeline sample to convert a Shapefile to GeoPackage.\r\n  # ==============================================================\r\n  {\r\n    \"pipeline\": [\r\n      {\r\n        \"type\": \"FeatureReader\",\r\n        \"connectionString\": \"input.shp\"\r\n      },\r\n      # Extract the Centroid of input geometries.\r\n      {\r\n        \"type\": \"GeometryCentroid\"\r\n      },\r\n      # Transform CRS of geometries.\r\n      {\r\n        \"type\": \"GeometryTransform\",\r\n        \"sourceCrs\": 4326,\r\n        \"targetCrs\": 32630\r\n      },\r\n      # Save features to Geopackage.\r\n      {\r\n        \"type\": \"FeatureWriter\",\r\n        \"connectionString\": \"output.gpkg\"\r\n      }\r\n    ]\r\n  }\r\n  ```\r\n\r\n+ Fetching metadata of a S2L2A Product (STAC):\r\n  ```bash\r\n  # ==============================================================\r\n  # Pipeline sample to fetch metadata of a S2L2A Product (STAC).\r\n  # ==============================================================\r\n  {\r\n    \"pipeline\": [\r\n      {\r\n        \"type\": \"FeatureReader\",\r\n\r\n        # Define the input AOI in an embedded GeoJson.\r\n        \"connectionString\": {\r\n          \"type\": \"FeatureCollection\",\r\n          \"crs\": {\r\n            \"type\": \"name\",\r\n            \"properties\": { \"name\": \"EPSG:4326\" }\r\n          },\r\n          \"features\": [\r\n            {\r\n              \"type\": \"Feature\",\r\n              \"properties\": { \"id\": 0, \"name\": \"My AOI for testing\" },\r\n              \"geometry\": {\r\n                \"type\": \"Polygon\",\r\n                \"coordinates\": [[\r\n                    [-1.746826,42.773227],\r\n                    [-1.746826,42.860866],\r\n                    [-1.558685,42.860866],\r\n                    [-1.558685,42.773227],\r\n                    [-1.746826,42.773227]\r\n                ]]\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      # Transform CRS of geometries.\r\n      {\r\n        \"type\": \"GeometryTransform\",\r\n        \"sourceCrs\": 4326,\r\n        \"targetCrs\": 32630\r\n      },\r\n      # Fetch metadata of EO Products that match one SpatioTemporial criteria.\r\n      {\r\n        \"type\": \"EOProductCatalog\",\r\n\r\n        \"driver\": \"STAC\",\r\n        \"provider\": \"https://earth-search.aws.element84.com/v0/search\",\r\n        \"product\": \"sentinel-s2-l2a-cogs\",\r\n\r\n        \"startDate\": \"2021-09-25\",\r\n        \"endDate\": \"2021-10-05\",\r\n        \"closestToDate\": \"2021-09-30\",\r\n        \"filter\": \"\",\r\n\r\n        \"preserveInputCrs\": true\r\n      },\r\n      # Save features to Geopackage.\r\n      {\r\n        \"type\": \"FeatureWriter\",\r\n        \"connectionString\": \"output.gpkg\"\r\n      }\r\n    ]\r\n  }\r\n  ```\r\n\r\n## Installation\r\n\r\nIn order to read and write Cloud Optimized Geotiffs (COG), GDAL version 3.1 or greater is required. If your system GDAL is older than version 3.1, consider using Docker or Conda to get a modern GDAL.\r\n\r\n### Using pypi\r\n\r\nTo install the latest stable version from [_pypi_](https://pypi.org/), write this in the command-line:\r\n\r\n```bash\r\n> pip install geodataflow.dataframes[eodag,gee]\r\n```\r\n\r\nOptional extras:\r\n\r\n* eodag\r\n\r\n  EODAG - [Earth Observation Data Access Gateway](https://eodag.readthedocs.io/en/stable/) is a Python package for searching and downloading remotely sensed images while offering an unified API for data access regardless of the data provider.\r\n\r\n  Installing this extra _EODAG_ adds access to more EO Products from different providers to `EOProductCatalog` and `EOProductDataset` modules.\r\n\r\n* gee\r\n\r\n  GEE - [Google Earth Engine API](https://developers.google.com/earth-engine) is a geospatial processing service. With _Earth Engine_, you can perform geospatial processing at scale, powered by Google Cloud Platform. _GEE_ requires authentication, please, read available documentation [here](https://developers.google.com/earth-engine/guides/python_install#authentication).\r\n\r\n  Installing this extra _GEE_ makes possible the access to Google Cloud Platform to `GEEProductCatalog` and `GEEProductDataset` modules.\r\n\r\nTo view all available CLI tool commands and options:\r\n```bash\r\n> geodataflow --help\r\n```\r\n\r\nListing all available modules:\r\n```bash\r\n> geodataflow --modules\r\n```\r\n\r\nRun a workflow in the command-line interface:\r\n```bash\r\n> geodataflow --pipeline_file \"/geodataflow/dataframes/tests/data/test_eo_stac_catalog.json\"\r\n```\r\n\r\n### Using docker\r\n\r\nBuilding the container with:\r\n```bash\r\n> docker build -f ./Dockerfile.dataframes -t geodataflow/cli:1.0.0 .\r\n```\r\n\r\nGetting start:\r\n```bash\r\n> docker run --rm --name gdf geodataflow/cli:1.0.0 --help\r\n> docker run --rm --name gdf geodataflow/cli:1.0.0 --modules\r\n```\r\n\r\nCreating an interactive bash shell:\r\n```bash\r\n> docker run --rm -it --entrypoint \"bash\" geodataflow/cli:1.0.0\r\n```\r\n\r\nTo run workflows in Linux:\r\n```bash\r\n> docker run \\\r\n    --rm --name gdf -v \"$PWD/geodataflow/dataframes/tests/data:/tests/data\" geodataflow/cli:1.0.0 \\\r\n    --pipeline_file \"/tests/data/test_eo_stac_catalog.json\"\r\n```\r\n\r\nTo run workflows in Windows:\r\n```bash\r\n> docker run ^\r\n    --rm --name gdf -v \"%cd%/geodataflow/dataframes/tests/data:/tests/data\" geodataflow/cli:1.0.0 ^\r\n    --pipeline_file \"/tests/data/test_eo_stac_catalog.json\"\r\n```\r\n\r\n## Contribute\r\n\r\nHave you spotted a typo in our documentation? Have you observed a bug while running **GeodataFlow**? Do you have a suggestion for a new feature?\r\n\r\nDon't hesitate and open an issue or submit a pull request, contributions are most welcome!\r\n\r\n## License\r\n\r\n**GeodataFlow** is licensed under Apache License v2.0.\r\nSee [LICENSE](LICENSE) file for details.\r\n\r\n## Credits\r\n\r\n**GeodataFlow** is built on top of amazingly useful open source projects. See [NOTICE](../../NOTICE) file for details about those projects\r\nand their licenses.\r\n\r\nThank you to all the authors of these projects!\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ahuarte47/geodataflow",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "geodataflow.dataframes",
    "package_url": "https://pypi.org/project/geodataflow.dataframes/",
    "platform": null,
    "project_url": "https://pypi.org/project/geodataflow.dataframes/",
    "project_urls": {
      "Bug Tracker": "https://github.com/ahuarte47/geodataflow/issues/",
      "Homepage": "https://github.com/ahuarte47/geodataflow",
      "Source Code": "https://github.com/ahuarte47/geodataflow"
    },
    "release_url": "https://pypi.org/project/geodataflow.dataframes/0.2.1/",
    "requires_dist": [
      "geodataflow.core",
      "geodataflow.spatial",
      "pandas",
      "geopandas",
      "eodag (>=2.4.0) ; extra == 'eodag'",
      "earthengine-api (==0.1.320) ; extra == 'gee'"
    ],
    "requires_python": ">=3.7",
    "summary": "GeodataFlow backend implementation with GeoPandas (GeoDataFrames).",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16539971,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca73ac23b06d7c1540a71a8db9031d025c6681ed3ae7ddafdbe6eaa7f24ffb40",
          "md5": "a615c1a07d4ae0ee764a34e4ff65330a",
          "sha256": "5e47d921ae2be3bf4428e15f4b55e29c21261c3c43a84ff9de1871ee7fad237b"
        },
        "downloads": -1,
        "filename": "geodataflow.dataframes-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a615c1a07d4ae0ee764a34e4ff65330a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 34806,
        "upload_time": "2023-01-15T18:51:41",
        "upload_time_iso_8601": "2023-01-15T18:51:41.568901Z",
        "url": "https://files.pythonhosted.org/packages/ca/73/ac23b06d7c1540a71a8db9031d025c6681ed3ae7ddafdbe6eaa7f24ffb40/geodataflow.dataframes-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b135cb2a7450979000ec9c72c2f6b04261bb3d0a68bd8606dac367b2d89385b1",
          "md5": "687df3599f5bdc4db807f5d8b74f3438",
          "sha256": "3bac76d5172ec7e5f90e431053724fc6ea7ee79217f65c8cd41f1ebc1cbf3d26"
        },
        "downloads": -1,
        "filename": "geodataflow.dataframes-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "687df3599f5bdc4db807f5d8b74f3438",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17620,
        "upload_time": "2023-01-15T18:51:43",
        "upload_time_iso_8601": "2023-01-15T18:51:43.477872Z",
        "url": "https://files.pythonhosted.org/packages/b1/35/cb2a7450979000ec9c72c2f6b04261bb3d0a68bd8606dac367b2d89385b1/geodataflow.dataframes-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a81817414d4eee7d10e23076b8277cff964441548c67758de3fe310db18c7c3",
          "md5": "c34364d5a0c43e34ba4a1040d98dead7",
          "sha256": "afce549a90a2c302a6e4bb5ef6cdabffaa13930318d00b2ad1b1a29a3dd913fe"
        },
        "downloads": -1,
        "filename": "geodataflow.dataframes-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c34364d5a0c43e34ba4a1040d98dead7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 34812,
        "upload_time": "2023-01-24T00:29:27",
        "upload_time_iso_8601": "2023-01-24T00:29:27.490755Z",
        "url": "https://files.pythonhosted.org/packages/5a/81/817414d4eee7d10e23076b8277cff964441548c67758de3fe310db18c7c3/geodataflow.dataframes-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f3429746e7d4c8b60304eb80a02ed066dfd0c981afdd2c10d0326589a5b869a",
          "md5": "9985823fe5f599dedfab6fad59316816",
          "sha256": "7e3d73890d298efb87bcc2c50a6d31800d5998d0e5f3c7dc4c79d7dc274e371c"
        },
        "downloads": -1,
        "filename": "geodataflow.dataframes-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9985823fe5f599dedfab6fad59316816",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17609,
        "upload_time": "2023-01-24T00:29:29",
        "upload_time_iso_8601": "2023-01-24T00:29:29.323459Z",
        "url": "https://files.pythonhosted.org/packages/1f/34/29746e7d4c8b60304eb80a02ed066dfd0c981afdd2c10d0326589a5b869a/geodataflow.dataframes-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5a81817414d4eee7d10e23076b8277cff964441548c67758de3fe310db18c7c3",
        "md5": "c34364d5a0c43e34ba4a1040d98dead7",
        "sha256": "afce549a90a2c302a6e4bb5ef6cdabffaa13930318d00b2ad1b1a29a3dd913fe"
      },
      "downloads": -1,
      "filename": "geodataflow.dataframes-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c34364d5a0c43e34ba4a1040d98dead7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 34812,
      "upload_time": "2023-01-24T00:29:27",
      "upload_time_iso_8601": "2023-01-24T00:29:27.490755Z",
      "url": "https://files.pythonhosted.org/packages/5a/81/817414d4eee7d10e23076b8277cff964441548c67758de3fe310db18c7c3/geodataflow.dataframes-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f3429746e7d4c8b60304eb80a02ed066dfd0c981afdd2c10d0326589a5b869a",
        "md5": "9985823fe5f599dedfab6fad59316816",
        "sha256": "7e3d73890d298efb87bcc2c50a6d31800d5998d0e5f3c7dc4c79d7dc274e371c"
      },
      "downloads": -1,
      "filename": "geodataflow.dataframes-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9985823fe5f599dedfab6fad59316816",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 17609,
      "upload_time": "2023-01-24T00:29:29",
      "upload_time_iso_8601": "2023-01-24T00:29:29.323459Z",
      "url": "https://files.pythonhosted.org/packages/1f/34/29746e7d4c8b60304eb80a02ed066dfd0c981afdd2c10d0326589a5b869a/geodataflow.dataframes-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}