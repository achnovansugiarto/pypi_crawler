{
  "info": {
    "author": "Mauro Soria",
    "author_email": "maurosoria@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7",
      "Topic :: Security"
    ],
    "description": "<img src=\"static/logo.png\" alt=\"dirsearch\" width=\"675px\">\n\ndirsearch - Web path discovery\n=========\n\n![Build](https://img.shields.io/badge/Built%20with-Python-Blue)\n![License](https://img.shields.io/badge/license-GNU_General_Public_License-_red.svg)\n![Stars](https://img.shields.io/github/stars/maurosoria/dirsearch.svg)\n[![Release](https://img.shields.io/github/release/maurosoria/dirsearch.svg)](https://github.com/maurosoria/dirsearch/releases)\n[![Sponsors](https://img.shields.io/github/sponsors/maurosoria)](https://github.com/sponsors/maurosoria)\n[![Discord](https://img.shields.io/discord/992276296669339678.svg?logo=discord)](https://discord.gg/2N22ZdAJRj)\n[![Twitter](https://img.shields.io/twitter/follow/_dirsearch?label=Follow)](https://twitter.com/_dirsearch)\n\n\n> An advanced web path brute-forcer\n\n**dirsearch** is being actively developed by [@maurosoria](https://twitter.com/_maurosoria) and [@shelld3v](https://twitter.com/shells3c_)\n\n*Reach to our [Discord server](https://discord.gg/2N22ZdAJRj) to communicate with the team at best*\n\n\nTable of Contents\n------------\n* [Installation](#installation--usage)\n* [Wordlists](#wordlists-important)\n* [Options](#options)\n* [Configuration](#configuration)\n* [How to use](#how-to-use)\n  * [Simple usage](#simple-usage)\n  * [Pausing progress](#pausing-progress)\n  * [Recursion](#recursion)\n  * [Threads](#threads)\n  * [Prefixes / Suffixes](#prefixes--suffixes)\n  * [Blacklist](#blacklist)\n  * [Filters](#filters)\n  * [Raw request](#raw-request)\n  * [Wordlist formats](#wordlist-formats)\n  * [Exclude extensions](#exclude-extensions)\n  * [Scan sub-directories](#scan-sub-directories)\n  * [Proxies](#proxies)\n  * [Reports](#reports)\n  * [More example commands](#more-example-commands)\n* [Support Docker](#support-docker)\n  * [Install Docker Linux](#install-docker-linux)\n  * [Build Image dirsearch](#build-image-dirsearch)\n  * [Using dirsearch](#using-dirsearch)\n* [References](#references)\n* [Tips](#tips)\n* [Contribution](#contribution)\n* [License](#license)\n\n\nInstallation & Usage\n------------\n\n**Requirement: python 3.7 or higher**\n\nChoose one of these installation options:\n\n- Install with **git**: `git clone https://github.com/maurosoria/dirsearch.git --depth 1` (**RECOMMENDED**)\n- Install with ZIP file: [Download here](https://github.com/maurosoria/dirsearch/archive/master.zip)\n- Install with Docker: `docker build -t \"dirsearch:v0.4.3\" .` (more information can be found [here](https://github.com/maurosoria/dirsearch#support-docker))\n- Install with PyPi: `pip3 install dirsearch` or `pip install dirsearch`\n- Install with Kali Linux: `sudo apt-get install dirsearch` (deprecated)\n\n\nWordlists (IMPORTANT)\n---------------\n**Summary:**\n  - Wordlist is a text file, each line is a path.\n  - About extensions, unlike other tools, dirsearch only replaces the `%EXT%` keyword with extensions from **-e** flag.\n  - For wordlists without `%EXT%` (like [SecLists](https://github.com/danielmiessler/SecLists)), **-f | --force-extensions** switch is required to append extensions to every word in wordlist, as well as the `/`.\n  - To apply your extensions to wordlist entries that have extensions already, use **-O** | **--overwrite-extensions** (Note: some extensions are excluded from being overwritted such as *.log*, *.json*, *.xml*, ... or media extensions like *.jpg*, *.png*)\n  - To use multiple wordlists, you can separate your wordlists with commas. Example: `wordlist1.txt,wordlist2.txt`.\n\n**Examples:**\n\n- *Normal extensions*:\n```\nindex.%EXT%\n```\n\nPassing **asp** and **aspx** as extensions will generate the following dictionary:\n\n```\nindex\nindex.asp\nindex.aspx\n```\n\n- *Force extensions*:\n```\nadmin\n```\n\nPassing **php** and **html** as extensions with **-f**/**--force-extensions** flag will generate the following dictionary:\n\n```\nadmin\nadmin.php\nadmin.html\nadmin/\n```\n\n- *Overwrite extensions*:\n```\nlogin.html\n```\n\nPassing **jsp** and **jspa** as extensions with **-O**/**--overwrite-extensions** flag will generate the following dictionary:\n\n```\nlogin.html\nlogin.jsp\nlogin.jspa\n```\n\n\nOptions\n-------\n\n```\nUsage: dirsearch.py [-u|--url] target [-e|--extensions] extensions [options]\n\nOptions:\n  --version             show program's version number and exit\n  -h, --help            show this help message and exit\n\n  Mandatory:\n    -u URL, --url=URL   Target URL(s), support multiple flags\n    -l PATH, --url-file=PATH\n                        URL list file\n    --stdin             Read URL(s) from STDIN\n    --cidr=CIDR         Target CIDR\n    --raw=PATH          Load raw HTTP request from file (use `--scheme` flag\n                        to set the scheme)\n    -s SESSION_FILE, --session=SESSION_FILE\n                        Session file\n    --config=PATH       Full path to config file, see 'config.ini' for\n                        example (Default: config.ini)\n\n  Dictionary Settings:\n    -w WORDLISTS, --wordlists=WORDLISTS\n                        Customize wordlists (separated by commas)\n    -e EXTENSIONS, --extensions=EXTENSIONS\n                        Extension list separated by commas (e.g. php,asp)\n    -f, --force-extensions\n                        Add extensions to the end of every wordlist entry. By\n                        default dirsearch only replaces the %EXT% keyword with\n                        extensions\n    -O, --overwrite-extensions\n                        Overwrite other extensions in the wordlist with your\n                        extensions (selected via `-e`)\n    --exclude-extensions=EXTENSIONS\n                        Exclude extension list separated by commas (e.g.\n                        asp,jsp)\n    --remove-extensions\n                        Remove extensions in all paths (e.g. admin.php ->\n                        admin)\n    --prefixes=PREFIXES\n                        Add custom prefixes to all wordlist entries (separated\n                        by commas)\n    --suffixes=SUFFIXES\n                        Add custom suffixes to all wordlist entries, ignore\n                        directories (separated by commas)\n    -U, --uppercase     Uppercase wordlist\n    -L, --lowercase     Lowercase wordlist\n    -C, --capital       Capital wordlist\n\n  General Settings:\n    -t THREADS, --threads=THREADS\n                        Number of threads\n    -r, --recursive     Brute-force recursively\n    --deep-recursive    Perform recursive scan on every directory depth (e.g.\n                        api/users -> api/)\n    --force-recursive   Do recursive brute-force for every found path, not\n                        only directories\n    -R DEPTH, --max-recursion-depth=DEPTH\n                        Maximum recursion depth\n    --recursion-status=CODES\n                        Valid status codes to perform recursive scan, support\n                        ranges (separated by commas)\n    --subdirs=SUBDIRS   Scan sub-directories of the given URL[s] (separated by\n                        commas)\n    --exclude-subdirs=SUBDIRS\n                        Exclude the following subdirectories during recursive\n                        scan (separated by commas)\n    -i CODES, --include-status=CODES\n                        Include status codes, separated by commas, support\n                        ranges (e.g. 200,300-399)\n    -x CODES, --exclude-status=CODES\n                        Exclude status codes, separated by commas, support\n                        ranges (e.g. 301,500-599)\n    --exclude-sizes=SIZES\n                        Exclude responses by sizes, separated by commas (e.g.\n                        0B,4KB)\n    --exclude-texts=TEXTS\n                        Exclude responses by texts, separated by commas (e.g.\n                        'Not found', 'Error')\n    --exclude-regex=REGEX\n                        Exclude responses by regex (e.g. '^Error$')\n    --exclude-redirect=STRING\n                        Exclude responses if this regex (or text) matches\n                        redirect URL (e.g. '/index.html')\n    --exclude-response=PATH\n                        Exclude responses similar to response of this page,\n                        path as input (e.g. 404.html)\n    --skip-on-status=CODES\n                        Skip target whenever hit one of these status codes,\n                        separated by commas, support ranges\n    --min-response-size=LENGTH\n                        Minimum response length\n    --max-response-size=LENGTH\n                        Maximum response length\n    --max-time=SECONDS  Maximum runtime for the scan\n\n  Request Settings:\n    -m METHOD, --http-method=METHOD\n                        HTTP method (default: GET)\n    -d DATA, --data=DATA\n                        HTTP request data\n    --data-file=PATH    File contains HTTP request data\n    -H HEADERS, --header=HEADERS\n                        HTTP request header, support multiple flags\n    --header-file=PATH  File contains HTTP request headers\n    -F, --follow-redirects\n                        Follow HTTP redirects\n    --random-agent      Choose a random User-Agent for each request\n    --auth=CREDENTIAL   Authentication credential (e.g. user:password or\n                        bearer token)\n    --auth-type=TYPE    Authentication type (basic, digest, bearer, ntlm, jwt,\n                        oauth2)\n    --cert-file=PATH    File contains client-side certificate\n    --key-file=PATH     File contains client-side certificate private key\n                        (unencrypted)\n    --user-agent=USERAGENT\n    --cookie=COOKIE\n\n  Connection Settings:\n    --timeout=TIMEOUT   Connection timeout\n    --delay=DELAY       Delay between requests\n    --proxy=PROXY       Proxy URL, support HTTP and SOCKS proxies (e.g.\n                        localhost:8080, socks5://localhost:8088)\n    --proxy-file=PATH   File contains proxy servers\n    --proxy-auth=CREDENTIAL\n                        Proxy authentication credential\n    --replay-proxy=PROXY\n                        Proxy to replay with found paths\n    --tor               Use Tor network as proxy\n    --scheme=SCHEME     Scheme for raw request or if there is no scheme in the\n                        URL (Default: auto-detect)\n    --max-rate=RATE     Max requests per second\n    --retries=RETRIES   Number of retries for failed requests\n    --ip=IP             Server IP address\n    --exit-on-error     Exit whenever an error occurs\n\n  Advanced Settings:\n    --crawl             Crawl for new paths in responses\n\n  View Settings:\n    --full-url          Full URLs in the output (enabled automatically in\n                        quiet mode)\n    --redirects-history\n                        Show redirects history\n    --no-color          No colored output\n    -q, --quiet-mode    Quiet mode\n\n  Output Settings:\n    -o PATH, --output=PATH\n                        Output file\n    --format=FORMAT     Report format (Available: simple, plain, json, xml,\n                        md, csv, html, sqlite)\n    --log=PATH          Log file\n```\n\n\nConfiguration\n---------------\n\nDefault values for dirsearch flags can be edited in the configuration file, by default is `config.ini` but you can select another file with the `--config` flag\n\n```ini\n# If you want to edit dirsearch default configurations, you can\n# edit values in this file. Everything after `#` is a comment\n# and won't be applied\n\n[general]\nthreads = 25\nrecursive = False\ndeep-recursive = False\nforce-recursive = False\nrecursion-status = 200-399,401,403\nmax-recursion-depth = 0\nexclude-subdirs = %%ff/,.;/,..;/,;/,./,../,%%2e/,%%2e%%2e/\nrandom-user-agents = False\nmax-time = 0\n# subdirs = /,api/\n# include-status = 200-299,401\n# exclude-status = 400,500-999\n# exclude-sizes = 0b,123gb\n# exclude-texts = \"Not found\"\n# exclude-regex = \"^403$\"\n# exclude-redirect = \"*/error.html\"\n# exclude-response = 404.html\n# skip-on-status = 429,999\n\n[dictionary]\ndefault-extensions = php,aspx,jsp,html,js\nforce-extensions = False\noverwrite-extensions = False\nlowercase = False\nuppercase = False\ncapitalization = False\n# exclude-extensions = old,log\n# prefixes = .,admin\n# suffixes = ~,.bak\n# wordlists = /path/to/wordlist1.txt,/path/to/wordlist2.txt\n\n[request]\nhttpmethod = get\nfollow-redirects = False\n# headers-file = /path/to/headers.txt\n# user-agent = MyUserAgent\n# cookie = SESSIONID=123\n\n[connection]\ntimeout = 7.5\ndelay = 0\nmax-rate = 0\nmax-retries = 1\nexit-on-error = False\n## By disabling `scheme` variable, dirsearch will automatically identify the URI scheme\n# scheme = http\n# proxy = localhost:8080\n# proxy-file = /path/to/proxies.txt\n# replay-proxy = localhost:8000\n\n[advanced]\ncrawl = False\n\n[view]\nfull-url = False\nquiet-mode = False\ncolor = True\nshow-redirects-history = False\n\n[output]\n## Support: plain, simple, json, xml, md, csv, html, sqlite\nreport-format = plain\nautosave-report = True\n# log-file = /path/to/dirsearch.log\n# report-output-folder = /path/to/reports\n```\n\n\nHow to use\n---------------\n\n[![Dirsearch demo](https://asciinema.org/a/380112.svg)](https://asciinema.org/a/380112)\n\nSome examples for how to use dirsearch - those are the most common arguments. If you need all, just use the **-h** argument.\n\n### Simple usage\n```\npython3 dirsearch.py -u https://target\n```\n\n```\npython3 dirsearch.py -e php,html,js -u https://target\n```\n\n```\npython3 dirsearch.py -e php,html,js -u https://target -w /path/to/wordlist\n```\n\n---\n### Pausing progress\ndirsearch allows you to pause the scanning progress with CTRL+C, from here, you can save the progress (and continue later), skip the current target, or skip the current sub-directory.\n\n<img src=\"static/pause.png\" alt=\"Pausing dirsearch\" width=\"475px\">\n\n----\n### Recursion\n- Recursive brute-force is brute-forcing continuously the after of found directories. For example, if dirsearch finds `admin/`, it will brute-force `admin/*` (`*` is where it brute forces). To enable this feature, use **-r** (or **--recursive**) flag\n\n```\npython3 dirsearch.py -e php,html,js -u https://target -r\n```\n- You can set the max recursion depth with **--recursion-depth**, and status codes to recurse with **--recursion-status**\n\n```\npython3 dirsearch.py -e php,html,js -u https://target -r --recursion-depth 3 --recursion-status 200-399\n```\n- There are 2 more options: **--force-recursive** and **--deep-recursive**\n  - **Force recursive**: Brute force recursively all found paths, not just paths end with `/`\n  - **Deep recursive**: Recursive brute-force all depths of a path (`a/b/c` => add `a/`, `a/b/`)\n\n- If there are sub-directories that you do not want to brute-force recursively, use `--exclude-subdirs`\n\n```\npython3 dirsearch.py -e php,html,js -u https://target -r --exclude-subdirs image/,media/,css/\n```\n\n----\n### Threads\nThe thread number (**-t | --threads**) reflects the number of separated brute force processes. And so the bigger the thread number is, the faster dirsearch runs. By default, the number of threads is 25, but you can increase it if you want to speed up the progress.\n\nIn spite of that, the speed still depends a lot on the response time of the server. And as a warning, we advise you to keep the threads number not too big because it can cause DoS (Denial of Service).\n\n```\npython3 dirsearch.py -e php,htm,js,bak,zip,tgz,txt -u https://target -t 20\n```\n\n----\n### Prefixes / Suffixes\n- **--prefixes**: Add custom prefixes to all entries\n\n```\npython3 dirsearch.py -e php -u https://target --prefixes .,admin,_\n```\nWordlist:\n\n```\ntools\n```\nGenerated with prefixes:\n\n```\ntools\n.tools\nadmintools\n_tools\n```\n\n- **--suffixes**: Add custom suffixes to all entries\n\n```\npython3 dirsearch.py -e php -u https://target --suffixes ~\n```\nWordlist:\n\n```\nindex.php\ninternal\n```\nGenerated with suffixes:\n\n```\nindex.php\ninternal\nindex.php~\ninternal~\n```\n\n----\n### Blacklist\nInside the `db/` folder, there are several \"blacklist files\". Paths in those files will be filtered from the scan result if they have the same status as mentioned in the filename.\n\nExample: If you add `admin.php` into `db/403_blacklist.txt`, whenever you do a scan that `admin.php` returns 403, it will be filtered from the result.\n\n----\n### Filters\nUse **-i | --include-status** and **-x | --exclude-status** to select allowed and not allowed response status-codes\n\nFor more advanced filters: **--exclude-sizes**, **--exclude-texts**, **--exclude-regexps**, **--exclude-redirects** and **--exclude-response**\n\n```\npython3 dirsearch.py -e php,html,js -u https://target --exclude-sizes 1B,243KB\n```\n\n```\npython3 dirsearch.py -e php,html,js -u https://target --exclude-texts \"403 Forbidden\"\n```\n\n```\npython3 dirsearch.py -e php,html,js -u https://target --exclude-regexps \"^Error$\"\n```\n\n```\npython3 dirsearch.py -e php,html,js -u https://target --exclude-redirects \"https://(.*).okta.com/*\"\n```\n\n```\npython3 dirsearch.py -e php,html,js -u https://target --exclude-response /error.html\n```\n\n----\n### Raw request\ndirsearch allows you to import the raw request from a file. The content would be something looked like this:\n\n```http\nGET /admin HTTP/1.1\nHost: admin.example.com\nCache-Control: max-age=0\nAccept: */*\n```\n\nSince there is no way for dirsearch to know what the URI scheme is, you need to set it using the `--scheme` flag. By default, dirsearch automatically detects the scheme.\n\n----\n### Wordlist formats\nSupported wordlist formats: uppercase, lowercase, capitalization\n\n#### Lowercase:\n\n```\nadmin\nindex.html\n```\n#### Uppercase:\n\n```\nADMIN\nINDEX.HTML\n```\n#### Capital:\n\n```\nAdmin\nIndex.html\n```\n\n----\n### Exclude extensions\nUse **-X | --exclude-extensions** with an extension list will remove all paths in the wordlist that contains the given extensions\n\n`python3 dirsearch.py -u https://target -X jsp`\n\nWordlist:\n\n```\nadmin.php\ntest.jsp\n```\nAfter:\n\n```\nadmin.php\n```\n\n----\n### Scan sub-directories\n- From an URL, you can scan a list of sub-directories with **--subdirs**.\n\n```\npython3 dirsearch.py -e php,html,js -u https://target --subdirs /,admin/,folder/\n```\n\n----\n### Proxies\ndirsearch supports SOCKS and HTTP proxy, with two options: a proxy server or a list of proxy servers.\n\n```\npython3 dirsearch.py -e php,html,js -u https://target --proxy 127.0.0.1:8080\n```\n\n```\npython3 dirsearch.py -e php,html,js -u https://target --proxy socks5://10.10.0.1:8080\n```\n\n```\npython3 dirsearch.py -e php,html,js -u https://target --proxylist proxyservers.txt\n```\n\n----\n### Reports\nSupported report formats: **simple**, **plain**, **json**, **xml**, **md**, **csv**,  **html**, **sqlite**\n\n```\npython3 dirsearch.py -e php -l URLs.txt --format plain -o report.txt\n```\n\n```\npython3 dirsearch.py -e php -u https://target --format html -o target.json\n```\n\n----\n### More example commands\n```\ncat urls.txt | python3 dirsearch.py --stdin\n```\n\n```\npython3 dirsearch.py -u https://target --max-time 360\n```\n\n```\npython3 dirsearch.py -u https://target --auth admin:pass --auth-type basic\n```\n\n```\npython3 dirsearch.py -u https://target --header-list rate-limit-bypasses.txt\n```\n\n**There are more to discover, try yourself!**\n\n\nSupport Docker\n---------------\n### Install Docker Linux\nInstall Docker\n\n```sh\ncurl -fsSL https://get.docker.com | bash\n```\n\n> To use docker you need superuser power\n\n### Build Image dirsearch\nTo create image\n\n```sh\ndocker build -t \"dirsearch:v0.4.3\" .\n```\n\n> **dirsearch** is the name of the image and **v0.4.3** is the version\n\n### Using dirsearch\nFor using\n```sh\ndocker run -it --rm \"dirsearch:v0.4.3\" -u target -e php,html,js,zip\n```\n\n\nReferences\n---------------\n- [Comprehensive Guide on Dirsearch](https://www.hackingarticles.in/comprehensive-guide-on-dirsearch/) by Shubham Sharma\n- [Comprehensive Guide on Dirsearch Part 2](https://www.hackingarticles.in/comprehensive-guide-on-dirsearch-part-2/) by Shubham Sharma\n- [How to Find Hidden Web Directories with Dirsearch](https://www.geeksforgeeks.org/how-to-find-hidden-web-directories-with-dirsearch/) by GeeksforGeeks\n- [GUÍA COMPLETA SOBRE EL USO DE DIRSEARCH](https://esgeeks.com/guia-completa-uso-dirsearch/?feed_id=5703&_unique_id=6076249cc271f) by ESGEEKS\n- [How to use Dirsearch to detect web directories](https://www.ehacking.net/2020/01/how-to-find-hidden-web-directories-using-dirsearch.html) by EHacking\n- [dirsearch how to](https://vk9-sec.com/dirsearch-how-to/) by VK9 Security\n- [Find Hidden Web Directories with Dirsearch](https://null-byte.wonderhowto.com/how-to/find-hidden-web-directories-with-dirsearch-0201615/) by Wonder How To\n- [Brute force directories and files in webservers using dirsearch](https://upadhyayraj.medium.com/brute-force-directories-and-files-in-webservers-using-dirsearch-613e4a7fa8d5) by Raj Upadhyay\n- [Live Bug Bounty Recon Session on Yahoo (Amass, crts.sh, dirsearch) w/ @TheDawgyg](https://www.youtube.com/watch?v=u4dUnJ1U0T4) by Nahamsec\n- [Dirsearch to find Hidden Web Directories](https://medium.com/@irfaanshakeel/dirsearch-to-find-hidden-web-directories-d0357fbe47b0) by Irfan Shakeel\n- [Getting access to 25000 employees details](https://medium.com/@ehsahil/getting-access-to-25k-employees-details-c085d18b73f0) by Sahil Ahamad\n- [Best Tools For Directory Bruteforcing](https://secnhack.in/multiple-ways-to-find-hidden-directory-on-web-server/) by Shubham Goyal\n- [Discover hidden files & directories on a webserver - dirsearch full tutorial](https://www.youtube.com/watch?v=jVxs5at0gxg) by CYBER BYTES\n\n\nTips\n---------------\n- The server has requests limit? That's bad, but feel free to bypass it, by randomizing proxy with `--proxy-list`\n- Want to find out config files or backups? Try `--suffixes ~` and `--prefixes .`\n- Want to find only folders/directories? Why not combine `--remove-extensions` and `--suffixes /`!\n- The mix of `--cidr`, `-F`, `-q` and will reduce most of noises + false negatives when brute-forcing with a CIDR\n- Scan a list of URLs, but don't want to see a 429 flood? `--skip-on-status 429` will help you to skip a target whenever it returns 429\n- The server contains large files that slow down the scan? You *might* want to use `HEAD` HTTP method instead of `GET`\n- Brute-forcing CIDR is slow? Probably you forgot to reduce request timeout and request retries. Suggest: `--timeout 3 --retries 1`\n\n\nContribution\n---------------\nWe have been receiving a lot of helps from many people around the world to improve this tool. Thanks so much to everyone who have helped us so far!\nSee [CONTRIBUTORS.md](https://github.com/maurosoria/dirsearch/blob/master/CONTRIBUTORS.md) to know who they are.\n\n#### Pull requests and feature requests are welcomed\n\n\nLicense\n---------------\nCopyright (C) Mauro Soria (maurosoria@gmail.com)\n\nLicense: GNU General Public License, version 2\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/maurosoria/dirsearch",
    "keywords": "infosec,bug bounty,pentesting,security",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dirsearch",
    "package_url": "https://pypi.org/project/dirsearch/",
    "platform": null,
    "project_url": "https://pypi.org/project/dirsearch/",
    "project_urls": {
      "Homepage": "https://github.com/maurosoria/dirsearch"
    },
    "release_url": "https://pypi.org/project/dirsearch/0.4.3.post1/",
    "requires_dist": [
      "Jinja2 (>=3.0.0)",
      "PySocks (>=1.7.1)",
      "beautifulsoup4 (>=4.8.0)",
      "certifi (>=2017.4.17)",
      "cffi (>=1.14.0)",
      "chardet (>=3.0.2)",
      "charset-normalizer (~=2.0.0)",
      "colorama (>=0.4.4)",
      "cryptography (>=2.8)",
      "defusedxml (>=0.7.0)",
      "idna (>=2.5)",
      "markupsafe (>=2.0.0)",
      "ntlm-auth (>=1.5.0)",
      "pyopenssl (>=21.0.0)",
      "pyparsing (>=2.4.7)",
      "requests (>=2.27.0)",
      "requests-ntlm (>=1.1.0)",
      "urllib3 (>=1.21.1)"
    ],
    "requires_python": ">=3.7",
    "summary": "Advanced web path scanner",
    "version": "0.4.3.post1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15292422,
  "releases": {
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfa5e0f5e5958da99b3d04ec034014acd44264a00b03d3f1a7caaa32a8851742",
          "md5": "a28017b4ebe62888a11e22b9ce4907ad",
          "sha256": "d9bb7f782efda63b1fd3782d74c05de99026b389a4036513be8112cbe7c80e85"
        },
        "downloads": -1,
        "filename": "dirsearch-0.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a28017b4ebe62888a11e22b9ce4907ad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 784389,
        "upload_time": "2021-06-17T05:18:52",
        "upload_time_iso_8601": "2021-06-17T05:18:52.648246Z",
        "url": "https://files.pythonhosted.org/packages/bf/a5/e0f5e5958da99b3d04ec034014acd44264a00b03d3f1a7caaa32a8851742/dirsearch-0.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e55121709c3219208cc839b7ceab7273f21c783b6a7f50dd397714d6008c1fd",
          "md5": "7591e098b245abfb2a7d7c4a2bae8c5e",
          "sha256": "59f2171526512c8f164f375c48d8cd8fc0b394134c3e1df11bc4edaf59551878"
        },
        "downloads": -1,
        "filename": "dirsearch-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7591e098b245abfb2a7d7c4a2bae8c5e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 609544,
        "upload_time": "2021-06-17T05:18:55",
        "upload_time_iso_8601": "2021-06-17T05:18:55.273757Z",
        "url": "https://files.pythonhosted.org/packages/3e/55/121709c3219208cc839b7ceab7273f21c783b6a7f50dd397714d6008c1fd/dirsearch-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca32fb526a8df431323337495f9dcd38c1da0bcdc369f11a899d947ff577ff90",
          "md5": "8d94ae9dbe26ce75e063150725b692bf",
          "sha256": "3fa2406c4d89b146d699a37be2959d49e82c00cc028e59500fe0c33072182bb2"
        },
        "downloads": -1,
        "filename": "dirsearch-0.4.3-1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d94ae9dbe26ce75e063150725b692bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 139910,
        "upload_time": "2022-10-03T17:03:46",
        "upload_time_iso_8601": "2022-10-03T17:03:46.481369Z",
        "url": "https://files.pythonhosted.org/packages/ca/32/fb526a8df431323337495f9dcd38c1da0bcdc369f11a899d947ff577ff90/dirsearch-0.4.3-1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad1bc68e541e0ed571282f029df6412f7698f1f360336dad93c614736f081953",
          "md5": "341b9739815b96679fc96250c2bd7bb7",
          "sha256": "acb94114c9581786e6510df41f1911ee14f29de313082b015e277b8bfb1177b8"
        },
        "downloads": -1,
        "filename": "dirsearch-0.4.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "341b9739815b96679fc96250c2bd7bb7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 139937,
        "upload_time": "2022-10-03T13:05:10",
        "upload_time_iso_8601": "2022-10-03T13:05:10.996704Z",
        "url": "https://files.pythonhosted.org/packages/ad/1b/c68e541e0ed571282f029df6412f7698f1f360336dad93c614736f081953/dirsearch-0.4.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36fd3b7bec5675cce5cdaed389885141f53b0a75a2dacf15cffd0601b2725fdd",
          "md5": "305c758ad775cf508845a044fa7e89ef",
          "sha256": "e97fdd79618bccbf90b0971543a1cd45205c9d36d6a7673319a3a5da642448d9"
        },
        "downloads": -1,
        "filename": "dirsearch-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "305c758ad775cf508845a044fa7e89ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 53516,
        "upload_time": "2022-10-03T13:05:13",
        "upload_time_iso_8601": "2022-10-03T13:05:13.412699Z",
        "url": "https://files.pythonhosted.org/packages/36/fd/3b7bec5675cce5cdaed389885141f53b0a75a2dacf15cffd0601b2725fdd/dirsearch-0.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e52a1cfdb2ce49e5ada87973196c6b29f68f41502c11fd0d4fa28aba42e4747d",
          "md5": "601e2398c1a298fc36d05099245cc7f9",
          "sha256": "5202d806e156a09871170d30fc329d30ea8477114c4804a76277732c8e845e4b"
        },
        "downloads": -1,
        "filename": "dirsearch-0.4.3.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "601e2398c1a298fc36d05099245cc7f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 139986,
        "upload_time": "2022-10-03T17:07:25",
        "upload_time_iso_8601": "2022-10-03T17:07:25.032683Z",
        "url": "https://files.pythonhosted.org/packages/e5/2a/1cfdb2ce49e5ada87973196c6b29f68f41502c11fd0d4fa28aba42e4747d/dirsearch-0.4.3.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27a6ff7bd1d58a51890d441c796b80f935b400734edb5d8cbabcad3b165269d3",
          "md5": "f5343030540b7b54c827a0f6c71f3ee0",
          "sha256": "fc6fc0309250ca8121f3123d6943640f71a02e8d3257c680c3001181c4335dd9"
        },
        "downloads": -1,
        "filename": "dirsearch-0.4.3.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "f5343030540b7b54c827a0f6c71f3ee0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 53508,
        "upload_time": "2022-10-03T17:07:26",
        "upload_time_iso_8601": "2022-10-03T17:07:26.815629Z",
        "url": "https://files.pythonhosted.org/packages/27/a6/ff7bd1d58a51890d441c796b80f935b400734edb5d8cbabcad3b165269d3/dirsearch-0.4.3.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e52a1cfdb2ce49e5ada87973196c6b29f68f41502c11fd0d4fa28aba42e4747d",
        "md5": "601e2398c1a298fc36d05099245cc7f9",
        "sha256": "5202d806e156a09871170d30fc329d30ea8477114c4804a76277732c8e845e4b"
      },
      "downloads": -1,
      "filename": "dirsearch-0.4.3.post1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "601e2398c1a298fc36d05099245cc7f9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 139986,
      "upload_time": "2022-10-03T17:07:25",
      "upload_time_iso_8601": "2022-10-03T17:07:25.032683Z",
      "url": "https://files.pythonhosted.org/packages/e5/2a/1cfdb2ce49e5ada87973196c6b29f68f41502c11fd0d4fa28aba42e4747d/dirsearch-0.4.3.post1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "27a6ff7bd1d58a51890d441c796b80f935b400734edb5d8cbabcad3b165269d3",
        "md5": "f5343030540b7b54c827a0f6c71f3ee0",
        "sha256": "fc6fc0309250ca8121f3123d6943640f71a02e8d3257c680c3001181c4335dd9"
      },
      "downloads": -1,
      "filename": "dirsearch-0.4.3.post1.tar.gz",
      "has_sig": false,
      "md5_digest": "f5343030540b7b54c827a0f6c71f3ee0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 53508,
      "upload_time": "2022-10-03T17:07:26",
      "upload_time_iso_8601": "2022-10-03T17:07:26.815629Z",
      "url": "https://files.pythonhosted.org/packages/27/a6/ff7bd1d58a51890d441c796b80f935b400734edb5d8cbabcad3b165269d3/dirsearch-0.4.3.post1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}