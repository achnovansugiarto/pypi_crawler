{
  "info": {
    "author": "Peter Badida",
    "author_email": "keyweeusr@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Topic :: Security :: Cryptography"
    ],
    "description": "Vial\r\n----\r\n\r\n| Vial is a simple wrapper for AES CTR mode. You have to set the key to\r\n| an appropriate length:\r\n\r\n::\r\n\r\n    AES-128bit (16 bytes/characters)\r\n    AES-192bit (24 bytes/characters)\r\n    AES-256bit (32 bytes/characters)\r\n\r\n| or use a hashing package that’ll provide more security and ease your\r\n  pain of\r\n| typing exactly the 16, 24 or 32 characters.\r\n\r\n*Usage:*\r\n\r\n::\r\n\r\n    import vial\r\n\r\n    vial = vial.Vial(key)\r\n    vial.encrypt(plaintext, output_counter_file)\r\n    vial.decrypt(plaintext, output_counter_file)\r\n    vial.encrypt_stream(input, output, block_size)\r\n    vial.decrypt_stream(input, output, block_size)\r\n\r\nencrypt(text, counter\\_path)\r\n''''''''''''''''''''''''''''\r\n\r\n| This function needs as an extra argument a path where you want\r\n| the file with initial Counter value stored. The file is important,\r\n| you need to use it to decrypt.\r\n\r\n*Returns:* encrypted text (bytes)\r\n\r\ndecrypt(text, counter\\_path)\r\n''''''''''''''''''''''''''''\r\n\r\n| This function needs as an extra argument the path where you saved\r\n| the file from Vial.encrypt(). Without this file the text won’t be\r\n| decrypted.\r\n\r\n*Returns:* decrypted text (bytes)\r\n\r\nencrypt\\_stream(input, output, block\\_size=4096)\r\n''''''''''''''''''''''''''''''''''''''''''''''''\r\n\r\n| This function needs as extra arguments only input file and a path\r\n| for the output file. A file with Counter’s initial value will be\r\n| created automatically in the same location and with the same name as\r\n| output file.\r\n\r\n*Args:*\r\n\r\n::\r\n\r\n    input, output: Expects a file object ( f = open(...) )\r\n    block_size (optional): The max block_size to encrypt with the same\r\n                           AES encrypt()\r\n\r\n*Example:*\r\n\r\n::\r\n\r\n    vial = Vial(key)\r\n    input = open('encrypt_me.png', 'rb')\r\n    output = open('im_encrypted.png', 'wb')\r\n    vial.encrypt_stream(input, output)\r\n    input.close()\r\n    output.close()\r\n\r\n*Result:*\r\n\r\n::\r\n\r\n    root/\r\n        encrypt_me.png\r\n        im_encrypted.png\r\n        im_encrypted.ctr\r\n\r\ndecrypt\\_stream(input, output, block\\_size=4096)\r\n''''''''''''''''''''''''''''''''''''''''''''''''\r\n\r\n| This function needs as extra arguments only input file and a path\r\n| for the output file. The file with Counter’s initial value has to be\r\n| placed in the same folder as the input file as the function\r\n| automatically checks for it and gets the value to decrypt it.\r\n\r\n*Args:*\r\n\r\n::\r\n\r\n    input, output: Expects a file object ( f = open(...) )\r\n    block_size (optional): The max block_size to decrypt with the same\r\n                           AES decrypt()\r\n\r\n*Example:*\r\n\r\n::\r\n\r\n    vial = Vial(key)\r\n    input = open('im_encrypted.png', 'rb')\r\n    output = open('im_decrypted.png', 'wb')\r\n    vial.encrypt_stream(input, output)\r\n    input.close()\r\n    output.close()\r\n\r\n*Result:*\r\n\r\n::\r\n\r\n    root/\r\n        im_encrypted.png\r\n        im_encrypted.ctr\r\n        im_decrypted.png",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/KeyWeeUsr/Vial/tarball/0.1.0",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/KeyWeeUsr/Vial",
    "keywords": "security,cryptography,wrapper,aes,ctr",
    "license": "License :: OSI Approved :: MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aes-vial",
    "package_url": "https://pypi.org/project/aes-vial/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/aes-vial/",
    "project_urls": {
      "Download": "https://github.com/KeyWeeUsr/Vial/tarball/0.1.0",
      "Homepage": "https://github.com/KeyWeeUsr/Vial"
    },
    "release_url": "https://pypi.org/project/aes-vial/0.1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A simple wrapper for AES CTR mode.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2161929,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85f5cc2991d2b77e5ca9f9bd8320f33db4b62ff0961e71969d5800a24f50eeed",
          "md5": "8edcda0a36f4aa9ce12801af0babba0c",
          "sha256": "be4a4dfcd3441fe821e5d6b8ecad295dfb9967182f460119d031aaef12ffabee"
        },
        "downloads": -1,
        "filename": "aes-vial-0.1.0.zip",
        "has_sig": false,
        "md5_digest": "8edcda0a36f4aa9ce12801af0babba0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5404,
        "upload_time": "2016-06-11T09:49:27",
        "upload_time_iso_8601": "2016-06-11T09:49:27.523717Z",
        "url": "https://files.pythonhosted.org/packages/85/f5/cc2991d2b77e5ca9f9bd8320f33db4b62ff0961e71969d5800a24f50eeed/aes-vial-0.1.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "85f5cc2991d2b77e5ca9f9bd8320f33db4b62ff0961e71969d5800a24f50eeed",
        "md5": "8edcda0a36f4aa9ce12801af0babba0c",
        "sha256": "be4a4dfcd3441fe821e5d6b8ecad295dfb9967182f460119d031aaef12ffabee"
      },
      "downloads": -1,
      "filename": "aes-vial-0.1.0.zip",
      "has_sig": false,
      "md5_digest": "8edcda0a36f4aa9ce12801af0babba0c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5404,
      "upload_time": "2016-06-11T09:49:27",
      "upload_time_iso_8601": "2016-06-11T09:49:27.523717Z",
      "url": "https://files.pythonhosted.org/packages/85/f5/cc2991d2b77e5ca9f9bd8320f33db4b62ff0961e71969d5800a24f50eeed/aes-vial-0.1.0.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}