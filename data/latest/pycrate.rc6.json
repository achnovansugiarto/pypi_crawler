{
  "info": {
    "author": "Benoit Michau",
    "author_email": "michau.benoit@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "What is pycrate\n===============\n\nPycrate is a french word for qualifying bad wine (when it's close to vinegar !).\nThe present software library has nothing to do with wine (except it is developped in France), \nit is simply a Python library for manipulating various digital formats in an easy way,\nwith a funny name.\nIt is the glorious successor of [libmich](https://github.com/mitshell/libmich), \nwhich was started back in 2009, served well and retired in 2017.\n\nIt provides basically a runtime for encoding and decoding data structures, including\nCSN.1 and ASN.1. Additionally, it features a 3G and LTE mobile core network.\n\n\nLicense\n=======\n\nThe whole library is licensed under LGPL v2.1 and is compatible with more recent \nversion of the LGPL: all licensed files have an header making it self-explanatory.\nFor more details, please report to the \n[license.txt](https://github.com/P1sec/pycrate/blob/master/license.txt) file.\n\n\nWiki\n====\n\nPycrate has a growing [wiki](https://github.com/p1sec/pycrate/wiki/The-pycrate-wiki).\nUse it as much as possible before opening an issue.\nFeel free also to propose some additional content.\n\n\nInstallation\n============\n\nOperating systems and Python version\n------------------------------------\n\nThe library is designed to work with both Python 2 (2.7) and Python 3 (3.4, 3.5 and greater), \nfrom the official Python implementation [CPython](https://www.python.org/).\nIt is also supporting alternative Python engine such as [pypy](http://pypy.org/),\n[nuitka](http://nuitka.net/) or [Cython](https://cython.org/).\nIt is regularly tested both on Linux and Windows, and should actually work on any\noperating system which has [r|d]ecent Python support (as in 2017, 2018 and more...).\n\nStarting from 2022, full Python2 support will not be abandonned slowly but progressively.\n\n\nDependencies\n------------\n\nCurrently none. Only the Python builtins and few internal modules of Python \n(e.g. os, system, re, struct, datetime) are required for most of the features. \nThe json internal module is required for supporting the JSON API.\nIf you want to run pycrate in Python2 (which is bad !), you will however need to\ninstall the [enum34](https://pypi.org/project/enum34/) package.\n\nThe _pycrate\\_ether/SCTP_ module can optionally use the external \n[crc32c](https://pypi.org/project/crc32c/) module from ICRAR.\n\nThe _pycrate\\_mobile/TS24301\\_EMM_ and _pycrate\\_mobile/TS24501\\_FGMM_ modules use \n[CryptoMobile](https://github.com/p1sec/CryptoMobile) as optional dependency to \nencrypt and decrypt LTE and 5G NAS messages.\n\nThe _pycrate\\_corenet_ part requires also [pysctp](https://pypi.org/project/pysctp/) \nand [CryptoMobile](https://github.com/p1sec/CryptoMobile) to run.\n\nThe _pycrate\\_diameter/parse\\_iana\\_diameter\\_xml.py_ file uses \n[lxml](https://pypi.org/project/lxml/) to translate xml files from IANA to Python \ndictionnaries ; this is however not required for standard runtime.\n\nThe _pycrate\\_osmo/SEDebugMux.py_ module relies on the [crcmod](https://pypi.org/project/crcmod/)\nto compute CRC in the frame format.\n\n\nAutomatic installation\n----------------------\n\nAn installation script is available.\nAs soon as you have cloned or downloaded the repository, you can use it to install\nthe library within your Python package directory:\n\n```\npython setup.py install\n```\n\nRun it as superuser for a system-wide install, or as-is for a user home-directory \nlevel install. You can also run _develop_ instead of _install_ if you want a \ndeveloper-friendly installation.\n\nIt is also possible to test the library before installing it\n(this will create two local directories *./test_asn/* and *./pycrate.egg-info/* that\nyou can just delete afterwards):\n\n```\npython -m unittest test.test_pycrate\n```\n\nOr to build the library without installing it in the system:\n\n```\npython setup.py build\n```\n\nIt is also possible to recompile all ASN.1 modules, this will take few minutes\n(but if I did not do any mistake, all ASN.1 modules provided in *./pycrate_asn1dir/*\nshould have been compiled with the latest version of the compiler):\n\n```\npython -m pycrate_asn1c.asnproc\n```\n\nMore generally, installation is not required, and simply having all _pycrate\\_*_ \nsubdirectories into the PYTHONPATH enables to use the entire library.\n\n\nInstallation with pip\n---------------------\n\nAlternatively, you can install the library with the `pip` command:\n```\npip install pycrate\n```\n\nThe install package is available on [pypi](https://pypi.org/project/pycrate/).\nIt contains the library from the last tagged release on github.\n\n\nContributing\n============\n\nContact and support\n-------------------\n\nThis library is free software, and you are free to use it (or not to use it). \nIn case you encounter a problem with it, first read this readme completely and \ncheck the wiki ; moreover many classes, methods and functions are documented with \ndocstrings, and finally you can have a look at the source code.\n\nIf after all those steps, you still have a question or you think you found a bug,\nplease open an issue (see below). Specific support requires time and may not be always \npossible. In case you require such support, please consider also contributing in one \nway or another (see below, too).\n\nIn case you are using this library in any of your project and you find it useful,\ndo not hesitate to send me an email. It is always a pleasure to know where \ncode provided on the Internet can end up...\n\n\nFilling an issue\n---------------\n\nWhen filling an issue, please provide precise and contextual information about \nyour case and the error you potentially encounter:\n- indicate the version (or commit-level) of pycrate your are using, together with \nthe version of Python.\n- provide a code snippet that leads to the error you are facing, so that it can be\nreproduced.\n- provide the eventual stacktrace you are getting from Python\n- provide additional and contextual information as needed (e.g. a specific ASN.1 \nspecification being used...)\n\nThis is the bare minimum if you want to get help.\nAnd when you consider your issue has been addressed, please close it: \"A good issue\nis a closed one !\" as would have said my great grandmother.\n\n\nExtending the library\n---------------------\n\nIf you are willing to extend the library, do not hesitate to contact me by\nemail or preferably through the github service (ideally, open a pull request).\nFor important changes, please elaborate about your need and provide some justification.\nAny patch or submission is always very welcome!\n\n\nOther contributions\n-------------------\n\nIn case you do not want to deep dive in the code, you can still contribute in many ways:\n* highlighting specific issues in the inner-working of the library,\nand opening an issue with concrete debugging information \n* writing new test cases for more coverage (have a look at the *test/* directory)\n* sending captures / real-world data that can be used for writing new test cases\n* writing new parts of the wiki (have a look at the \n[pycrate wiki](https://github.com/p1sec/pycrate/wiki/The-pycrate-wiki))\n\nGetting contributions is extremely important to encourage the continuous development\nof the library, and to confirm the choice made to open-source it.\n\n\nComponents\n==========\n\nPycrate is actually more a software suite than a single library. It is composed\nof several subdirectories, each providing specific services.\n\n\npycrate_core\n------------\n\nThe core of the library.\n* *utils* provides basics functions to manipulate integers, bytes and bits\n* *charpy* provides the Charpy class to handle easily the consumption of a bit-stream\n* *elt* and *base* are providing several classes to help when building complex\n   data structures\n* *repr* provides simple functions to help with the representation of instances\n   from the *elt* and *base* modules\n\nSome of the most useful features are provided by the *pack_val()* functions from \nthe *utils* module and the *Charpy* class from the *charpy* module.\nThey help to deal easily with packing and unpacking bytes and integers \n(signed / unsigned, little / big endian) in an aligned and unaligned way.\nAll lengths of fields are provided in bits, hence facilitating the handling of \nunaligned structures.\n\n\npycrate_ether\n-------------\n\nThe modules provided here implement Ethernet and IP-oriented protocols and formats.\n* *MPLS* with structures for MPLS label and header\n* *Ethernet* with structures for Ethernet and VLAN headers\n* *ARP* simply providing the structure for ARP\n* *IP* with structures for IPv4, IPv6, ICMP, UDP and TCP\n* *SCTP* with structures for SCTP headers and various chunks\n* *PCAP* with structures for the PCAP global header and the record header\n\n\npycrate_media\n-------------\n\nThe modules here implement various multimedia formats.\n* *JPEG* with detailed structures used in the JPEG format\n* *GIF* with detailed structures used in the GIF format\n* *TIFF* with detailed structures used in the TIFF format\n* *BMP* with structures used in the BMP format\n* *PNG* with the basic structure used in the PNG format\n* *MPEG4* with the basic structure used in the MPEG4 file format\n* *MP3* with detailed structures used in the MP3 format, including ID3v1 and ID3v2 tags\n\nMost of the classes here implement a complete recipe to parse all of those format in a \nsingle shot, by using their *from_char()* method.\n\n\npycrate_asn1c\n-------------\n\nAll the modules here serve the sole purpose of compiling ASN.1 specifications.\nThe most important ones are:\n* *asnobj* which is the almighty class when parsing any ASN.1 definition\n* *generator* which provides two distinct generators to produce source files from\n   the ASN.1 objects processed in Python: *PycrateGenerator* which produces source \n   file to be used with the pycrate ASN.1 runtime (in *pycrate_asn1rt*), \n   and *JSONDepGraphGenerator* which produces json file listing object dependencies \n   (which then can be browsed dynamically thanks to D3).\n* *asnproc* which is the top-level module for the compiler, it contains for example \n   the *compile_text()* function which compiles a serie of ASN.1 modules into\n   Python objects\n   \nThis compiler support most of the ASN.1 language features, including parameterization and\nclass objects and sets (especially useful when working with table constraints).\nIt has however few restrictions, the biggest being the need for the left part of the ASN.1\nassignment *::=* being on a single line. Also, old-school ASN.1 macros are not supported ;\nhence, the compiler cannot parse SNMP MIBs. \n\n\npycrate_asn1dir\n---------------\n\nThis subdirectory contains several ASN.1 specifications that are supported and \nprecompiled for pycrate. Very few specifications have been changed in order to\nwork with pycrate :\n* Q.775, in which the terrible *AllPackagesAS* is commented out\n* Q.773 and Q.775, in which the *TCInvokeIdSet* constraint is modified to be\n   used as a set of values\nThat's all !\n\n\npycrate_asn1rt\n--------------\n\nThis subdirectory contains the ASN.1 runtime, that is loaded and used by the ASN.1 \nspecifications compiled with the compiler in *pycrate_asn1c*. It supports \nthe PER encoding rules (aligned and not, canonical also), and the BER, CER, DER \nand JER encoding rules.\n\n\npycrate_csn1\n------------\n\nThis subdirectory contains a CSN.1 to Python translater in the file *trans.py*,\nand a CSN.1 runtime in the file *csnobj.py*, in order to encode and decode CSN.1 \nstructures translated to Python objects.\n\n\npycrate_csn1dir\n---------------\n\nThis subdirectory contains CSN.1 structures extracted from 3GPP specifications\n(in the .csn files), and translated into Python objects. The following specifications\nhave been used: TS 44.018, TS 44.060 and TS 24.008.\n\n\npycrate_mobile\n--------------\n\nThis subdirectory implements most of the 3GPP NAS protocol formats:\n* *GSMTAP*: gsmtap header format\n* *MCC_MNC*: dictionnaries for MCC and MNC look-up\n* *NAS*: provides two functions to parse any uplink and downlink mobile NAS messages\n* *NASLTE*: provides two functions to parse LTE uplink and downlink NAS messages\n* *NAS5G*: provides one function to parse 5G uplink and downlink mobile NAS messages\n* *PPP*: structures for NCP and LCP protocols used for PPP connection estabishment\n* *SCCP*: structures for SCCP user-data and management messages\n* *SIGTRAN*: structures for SIGTRAN (mostly M2PA and M3UA) messages\n* *TS102225*: structures for SIM card's Secured Packets from ETSI TS 102.225\n* *TS23038*: structures and routines for SMS encoding from TS 23.038\n* *TS23040_SMS*: structures for the SMS transport protocol from TS 23.040\n* *TS23041_CBS*: structures for the Cell Broadcast Service protocol from TS 23.041\n* *TS24007*: basic structures from the TS 24.007 specification, reused in most of the NAS protocols\n* *TS24008_CC* : structures for call control messages from TS 24.008\n* *TS24008_GMM*: structures for GPRS mobility management messages from TS 24.008\n* *TS24008_IE*: structures for many information elements from TS 24.008\n* *TS24008_MM*: structures for mobility management messages from TS 24.008\n* *TS24008_SM*: structures for GPRS session management messages from TS 24.008\n* *TS24011_PPSMS*: structures for the SMS point-to-point protocol from TS 24.011\n* *TS24080_SS*: structures for the Supplementary Services protocol from TS 24.080, wrapping some MAP ASN.1 objects\n* *TS24301_EMM*: structures for the EPS mobility management messages from TS 24.301\n* *TS24301_ESM*: structures for the EPS session management messages from TS 24.301\n* *TS24301_IE*: structures for many information elements from TS 24.301\n* *TS24501_FGMM*: structures for the 5G mobility management messages from TS 24.501\n* *TS24501_FGSM*: structures for the 5G session management messages from TS 24.501\n* *TS24501_IE*: structures for many information elements from TS 24.501\n* *TS24501_UEPOL*, *TS24526_UEPOL* and *TS24588_UEPOL*: structures for the 5G UE policy protocol from TS 24.501, 526 and 588\n* *TS29002_MAPAppCtx*: functions that relies on the Pycrate_TCAP_MAPv2v3 ASN.1 module, dealing mostly with MAP application-contexts\n* *TS29002_MAPIE*: structure for the MAP AddressString object from TS 29.002\n* *TS29244_PFCP*: structure for PFCP messages from TS 29.244\n* *TS29274_GTPC*: structures for LTE/EPC GTP-C messages from TS 29.274\n* *TS29281_GTPU*: structures for LTE/EPC GTP-U messages from TS 29.281\n* *TS31111_SAT*: basic structures and dict for the SIM application toolkit from TS 31.111\n* *TS31115*: structures for SIM card's Secured Packets over SMS from TS 31.115\n* *TS38415_PDUSess*: structure used in 5G user-place traffic (i.e. GTP-U) from TS 38.415\n* *TS44018_GTTP*: structure for the single GSM GTTP message from TS 44.018\n* *TS44018_IE*: structures for many information elements from TS 44.018\n* *TS44018_RR*: structures for the GSM and GPRS radio ressources messages from TS 44.018\n\n\npycrate_diameter\n----------------\n\nThis subdirectory contains the following modules:\n* *parse_iana_diameter_xml*: to translate XML Diameter structures from IANA to Python\n* *iana_diameter_dicts.py*: that is automatically created by the former, containing Diameter Python dicts\n* *Diameter*: a generic Diameter module which implements DiameterGeneric and AVPGeneric structures\n* *DiameterIETF*: a Diameter module which relies on AVP types provided in all IETF RFC\n* *Diameter3GPP*: a Diameter module which relies on AVP types provided in all 3GPP TS\n\n\npycrate_osmo\n------------\n\nThis subdirectory contains the following modules:\n* *L1CTL*: structures used by osmocom-bb to communicate with the embedded stack from the host\n* *SEDebugMux*: structure used by Sony-Ericsson SoC and basebands to wrap logs\n\n\npycrate_corenet\n---------------\n\nThis subdirectory implements a signaling server that supports IuCS and IuPS over Iuh interfaces\n(including HNBAP and RUA/RANAP) for interfacing with 3G femtocells, and S1 interfaces \n(including S1AP) for interfacing with LTE eNodeBs.\nIt handles many procedures to drive femtocells, eNodeBs and mobile terminals connecting\nthrough them. In terms of services, it mostly support short messages and data connectivity.\nIt does not handle call services, neither active mobility procedures (handovers).\n\nIt can be easily (common, running a mobile core network is not *that* easy) \nconfigured and used thanks to the [corenet](https://github.com/mitshell/corenet/) project, \nalso open-source.\n\n\nUsage\n=====\n\nMost of the modules have doc strings. I try also to write readable sources and to\ncomment them as much as possible for understanding them easily (and to allow also\nmyself to understand my own code years after...).\nA [wiki](https://github.com/p1sec/pycrate/wiki/The-pycrate-wiki) is provided \nand extended from time to time, to bring examples and methods on how to use the \ndifferent modules (any contribution on this would be very welcome, too).\nFinally, the code provided in the *test/* subdirectory is also representative on\nhow to use the different modules.\n\nBasically, a pycrate's object exposes the following methods:\n* set_val() / get_val(), which sets and gets a value into the object\n* from_bytes() / to_bytes(), which converts a buffer into values according to the internal structure of the object, and back\n* from_json() / to_json(), for working with JSON-encoded values\n* hex() / bin(), for getting hexadecimal and binary representation of the serialized obect's value\n* repr() / show(), for providing nice python's internal representation, and printable representation of the object's value\n\n\nASN.1 usage\n===========\n\nWhen a Python module from *pycrate_asn1dir/* is loaded, it creates Python classes\ncorresponding to ASN.1 modules (all dash characters are converted to underscore).\nEach ASN.1 object has a corresponding Python instance, exposing the following methods:\n* from_asn1() / to_asn1(), which converts ASN.1 textual value to Python value and back\n* from_aper() / to_aper(), which converts aligned PER encoded value to Python value and back\n* from_uper() / to_uper(), which converts unaligned PER\n* from_ber() / to_ber(), which converts BER\n* from_cer() / to_cer(), which converts CER\n* from_der() / to_der(), which converts DER\n* from_jer() / to_jer(), which converts JER\n* set_val() / get_val(), to set and get Python's values into the ASN.1 object\n* get_proto(), to return to internal structure of the ASN.1 object\n\nAll the methods useful for working with ASN.1 objects at runtime can be found in \nthe file *pycrate_asn1rt/asnobj.py*.\n\n\nTools\n=====\n\nFour different tools are provided (yet):\n* *pycrate_showmedia.py* parses some media files (jpg, bmp, gif, mp3, png, \n   tiff, mpeg4) and pretty print the file structure on the standard output.\n* *pycrate_asn1compile.py* compiles ASN.1 source file(s) and produce a Python\n   source file that makes use of the ASN.1 runtime. This source file is then\n   usable to encode / decode any ASN.1 object from the compiled ASN.1 \n   specification.\n* *pycrate_berdecode.py* parses any BER/CER/DER encoded binary value of ASN.1 \n   objects and prints the corresponding structure.\n* *pycrate_map_op_info.py* prints prototypes and various information related to\n   TCAP-MAP (Mobile Application Part) and CAMEL operations and application-contexts.\n\n\nExamples\n========\n\nIt is possible to test the *pycrate_showmedia.py* tool with media test files \nprovided in *./test/res/*, or any other supported media file.\n\n```console\n$ ./tools/pycrate_showmedia.py --help\nusage: pycrate_showmedia.py [-h] [-bl BL] [-wt] input\n\nprint the internal structure of the input media file,supported formats are:\nBMP, GIF, JPEG, MP3, MPEG4, PNG, TIFF\n\npositional arguments:\n  input       input media file\n\noptional arguments:\n  -h, --help  show this help message and exit\n  -bl BL      maximum length for buffer representation\n  -wt         show also absent / transparent fields\n\n$ ./tools/pycrate_showmedia.py ./test/res/xkcd_wireless_signal.png \n### PNG ###\n <sig [PNG signature] : '\\x89PNG\\r\\n\\x1a\\n'>\n     ### PNGBody ###\n      ### PNGChunk ###\n       <len : 13>\n       <type : 'IHDR'>\n       ### IHDR ###\n        <width : 238>\n        <height : 415>\n        <depth [bit depth] : 8>\n        <color [color type] : 0 (Greyscale)>\n        <comp [compression method] : 0 (inflate/deflate with sliding window)>\n        <filter [filter method] : 0 (no interlace)>\n        <interlace [interlace method] : 0 (no interlace)>\n       <crc : 0x7d8cb12e>\n      ### PNGChunk ###\n       <len : 9>\n       <type : 'pHYs'>\n       <data :\n        00 00 0c 4e 00 00 0c 4e 01                      | '\\x00\\x00\\x0cN\\x00\\x00\\x0cN\\x01'>\n       <crc : 0x7f778c23>\n      ### PNGChunk ###\n       <len : 792>\n       <type : 'iCCP'>\n       <data :\n        50 68 6f 74 6f 73 68 6f 70 20 49 43 43 20 70 72 | 'Photoshop ICC pr'\n        6f 66 69 6c 65 00 00 78 da 63 60 60 9e e0 e8 e2 | 'ofile\\x00\\x00x\\xdac``\\x9e\\xe0\\xe8\\xe2'\n        [...]\n        32 fd fc ea eb 82 ef e1 3f 05 7e 9d fa d3 fa cf | '2\\xfd\\xfc\\xea\\xeb\\x82\\xef\\xe1?\\x05~\\x9d\\xfa\\xd3\\xfa\\xcf'\n        f1 ff 7f 00 0d 00 0f 34                         | '\\xf1\\xff\\x7f\\x00\\r\\x00\\x0f4'>\n       <crc : 0xfa96f15d>\n      ### PNGChunk ###\n       <len : 32>\n       <type : 'cHRM'>\n       <data :\n        00 00 6e 27 00 00 73 af 00 00 df f2 00 00 83 30 | \"\\x00\\x00n'\\x00\\x00s\\xaf\\x00\\x00\\xdf\\xf2\\x00\\x00\\x830\"\n        00 00 77 43 00 00 c8 0a 00 00 34 95 00 00 2e dc | '\\x00\\x00wC\\x00\\x00\\xc8\\n\\x00\\x004\\x95\\x00\\x00.\\xdc'>\n       <crc : 0x20bf171a>\n      ### PNGChunk ###\n       <len : 21130>\n       <type : 'IDAT'>\n       <data :\n        78 da ed bd 79 50 8d fd 1f ff ff bc ce 39 73 4e | 'x\\xda\\xed\\xbdyP\\x8d\\xfd\\x1f\\xff\\xff\\xbc\\xce9sN'\n        db b4 37 95 32 b4 19 94 06 2d 7e 11 26 b2 fc 10 | '\\xdb\\xb47\\x952\\xb4\\x19\\x94\\x06-~\\x11&\\xb2\\xfc\\x10'\n        [...]\n        91 a3 d8 5b fc e1 cb 51 fd ab fb c9 cc ec ee 21 | '\\x91\\xa3\\xd8[\\xfc\\xe1\\xcbQ\\xfd\\xab\\xfb\\xc9\\xcc\\xec\\xee!'\n        7d 70 6e f3 18 ce c1 c1 6d 8c 81 44 32 cf 51 ba | '}pn\\xf3\\x18\\xce\\xc1\\xc1m\\x8c\\x81D2\\xcfQ\\xba'\n        ...>\n       <crc : 0xa9fbdd38>\n      ### PNGChunk ###\n       <len : 0>\n       <type : 'IEND'>\n       <data : >\n       <crc : 0xae426082>\n```\n\nIt is possible to test the *pycrate_asn1compile.py* tool with some test ASN.1 \nspecification from *./test/res/*, or any other valid ASN.1 specification of your\nchoice.\n\n```console\n$ ./tools/pycrate_asn1compile.py --help\nusage: pycrate_asn1compile.py [-h] [-s SPEC] [-i INPUT [INPUT ...]] [-o OUTPUT] [-g GENERATOR_PATH] [-j] [-fautotags] [-fextimpl] [-fverifwarn]\n\ncompile ASN.1 input file(s) for the pycrate ASN.1 runtime\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SPEC               provide a specification shortname, instead of ASN.1 input file(s)\n  -i INPUT [INPUT ...]  ASN.1 input file(s) or directory\n  -o OUTPUT             compiled output Python (and json) source file(s)\n  -g GENERATOR_PATH, --generator GENERATOR_PATH\n                        provide an alternative python generator file path\n  -j                    output a json file with information on ASN.1 objects dependency\n  -fautotags            force AUTOMATIC TAGS for all ASN.1 modules\n  -fextimpl             force EXTENSIBILITY IMPLIED for all ASN.1 modules\n  -fverifwarn           force warning instead of raising during the verification stage\n\n$ ./tools/pycrate_asn1compile.py -i ./test/res/Hardcore.asn -o Hardcore\n[proc] [./test/res/Hardcore.asn] module HardcoreSyntax (oid: []): 116 ASN.1 assignments found\n--- compilation cycle ---\n--- compilation cycle ---\n--- compilation cycle ---\n--- verifications ---\n[proc] ASN.1 modules processed: ['HardcoreSyntax']\n[proc] ASN.1 objects compiled: 75 types, 3 sets, 37 values\n[proc] done\n```\n\nAfter compiling a module, it is possible to load it in Python and use it for\nencoding / decoding any objects defined in it.\n\n```python\nPython 3.8.5 (default, Jul 28 2020, 12:59:40) \n[GCC 9.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from Hardcore import HardcoreSyntax\n>>> HardcoreSyntax # this is the only ASN.1 module provided in Hardcore.asn\n<class 'Hardcore.HardcoreSyntax'>\n>>> Final = HardcoreSyntax.Final # this is the Final object defined at line 115\n>>> Final\n<Final (SEQUENCE)>\n>>> Final.get_proto() # warning: this can return very laaaaaaarge definitions\n('SEQUENCE', {\nw1: ('SEQUENCE', {\n r10: ('SEQUENCE', {\n  low: 'INTEGER',\n  high: 'INTEGER',\n  bool: 'BOOLEAN',\n  null (OPT): 'NULL'\n  }),\n r90: ('SEQUENCE', {\n  low: 'INTEGER',\n  high: 'INTEGER',\n  bool: 'BOOLEAN',\n  null (OPT): 'NULL'\n  })\n }),\nw2: ('SEQUENCE', {\n r10: ('SEQUENCE', {\n  low: 'INTEGER',\n  high: 'INTEGER',\n  bool: 'BOOLEAN',\n  null (OPT): 'NULL'\n  }),\n r90: ('SEQUENCE', {\n  low: 'INTEGER',\n  high: 'INTEGER',\n  bool: 'BOOLEAN',\n  null (OPT): 'NULL'\n  })\n }),\nbool: 'BOOLEAN'\n})\n>>> V = {\n... 'w1':{'r10':{'low':5, 'high':50, 'bool':False}, 'r90':{'low':50, 'high':95, 'bool':False, 'null':0}},\n... 'w2':{'r10':{'low':1, 'high':10, 'bool':False}, 'r90':{'low':90, 'high':100, 'bool':True}},\n... 'bool': True}\n>>> Final.set_val(V)\n>>> print(Final.to_asn1()) # .to_asn1() returns a printable ASN.1 representation of the value\n{\n  w1 {\n    r10 {\n      low 5,\n      high 50,\n      bool FALSE\n    },\n    r90 {\n      low 50,\n      high 95,\n      bool FALSE,\n      null NULL\n    }\n  },\n  w2 {\n    r10 {\n      low 1,\n      high 10,\n      bool FALSE\n    },\n    r90 {\n      low 90,\n      high 100,\n      bool TRUE\n    }\n  },\n  bool TRUE\n}\n>>> Final.to_aper() # aligned PER\nb'*\\x85\\x92\\x80@\\x01\\x00\\x08\\x02\\xd5`'\n>>> Final.to_uper() # unaligned PER\nb'*\\x85\\x92\\x80@@\\x02\\x00\\xb5X'\n>>> Final.to_ber()\nb'05\\xa0\\x18\\xa0\\t\\x80\\x01\\x05\\x81\\x012\\x82\\x01\\x00\\xa1\\x0b\\x80\\x012\\x81\\x01_\\x82\\x01\\x00\\x83\\x00\\xa1\\x16\\xa0\\t\\x80\\x01\\x01\\x81\\x01\\n\\x82\\x01\\x00\\xa1\\t\\x80\\x01Z\\x81\\x01d\\x82\\x01\\xff\\x82\\x01\\xff'\n>>> Final.to_cer()\nb'0\\x80\\xa0\\x80\\xa0\\x80\\x80\\x01\\x05\\x81\\x012\\x82\\x01\\x00\\x00\\x00\\xa1\\x80\\x80\\x012\\x81\\x01_\\x82\\x01\\x00\\x83\\x00\\x00\\x00\\x00\\x00\\xa1\\x80\\xa0\\x80\\x80\\x01\\x01\\x81\\x01\\n\\x82\\x01\\x00\\x00\\x00\\xa1\\x80\\x80\\x01Z\\x81\\x01d\\x82\\x01\\xff\\x00\\x00\\x00\\x00\\x82\\x01\\xff\\x00\\x00'\n>>> Final.to_der()\nb'05\\xa0\\x18\\xa0\\t\\x80\\x01\\x05\\x81\\x012\\x82\\x01\\x00\\xa1\\x0b\\x80\\x012\\x81\\x01_\\x82\\x01\\x00\\x83\\x00\\xa1\\x16\\xa0\\t\\x80\\x01\\x01\\x81\\x01\\n\\x82\\x01\\x00\\xa1\\t\\x80\\x01Z\\x81\\x01d\\x82\\x01\\xff\\x82\\x01\\xff'\n>>> Final.from_ber( Final.to_ber() )\n>>> Final() == V # or Final._val == V\nTrue\n```\n\nFor more information about the API exposed for each ASN.1 object, you can check\nthe docstrings of all ASN.1 objects, and also read the source file *pycrate_asn1rt/asnobj.py*.\nDo not forget to have a look at the [wiki](https://github.com/p1sec/pycrate/wiki/The-pycrate-wiki), too!\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/P1sec/pycrate/",
    "keywords": "protocol format ASN.1 CSN.1 compiler encoder decoder mobile core network Diameter NAS S1AP NGAP TCAP MAP GTP PFCP SCCP ISUP",
    "license": "LGPL v2.1+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pycrate",
    "package_url": "https://pypi.org/project/pycrate/",
    "platform": null,
    "project_url": "https://pypi.org/project/pycrate/",
    "project_urls": {
      "Homepage": "https://github.com/P1sec/pycrate/"
    },
    "release_url": "https://pypi.org/project/pycrate/0.5.5/",
    "requires_dist": [
      "CryptoMobile ; extra == 'nas5g'",
      "CryptoMobile ; extra == 'naslte'",
      "crcmod ; extra == 'sedebugmux'",
      "pysctp ; extra == 'corenet'",
      "CryptoMobile ; extra == 'corenet'",
      "lxml ; extra == 'diameter_dict'"
    ],
    "requires_python": "",
    "summary": "A software suite to handle various data formats",
    "version": "0.5.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14506921,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a530375e2c98fd3bcc373bb167a834455f9194f36fbc681987f1e8506095f95",
          "md5": "872f32258fb1818bccc7f8ae81a99320",
          "sha256": "bc1de4ccf59b601e04249b5b87a6a332e702f914a50aae52b322cea08f5b9f57"
        },
        "downloads": -1,
        "filename": "pycrate-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "872f32258fb1818bccc7f8ae81a99320",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 1046,
        "upload_time": "2021-03-29T02:56:32",
        "upload_time_iso_8601": "2021-03-29T02:56:32.823766Z",
        "url": "https://files.pythonhosted.org/packages/4a/53/0375e2c98fd3bcc373bb167a834455f9194f36fbc681987f1e8506095f95/pycrate-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ec8feb57c166a872f5a37598d00bf117c27b9f0880c808083f9ba0a013afe59",
          "md5": "3320935d785693c96e97241fbd5ed5b5",
          "sha256": "3c6e17bcc8e9819da76c5f23623abaf314c0647bb2e1cfbbbc592f0b0f5da995"
        },
        "downloads": -1,
        "filename": "pycrate-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3320935d785693c96e97241fbd5ed5b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 851,
        "upload_time": "2021-03-29T02:56:34",
        "upload_time_iso_8601": "2021-03-29T02:56:34.483165Z",
        "url": "https://files.pythonhosted.org/packages/6e/c8/feb57c166a872f5a37598d00bf117c27b9f0880c808083f9ba0a013afe59/pycrate-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efde5a68f4ac97d285624a37c59cda63e2be12ff1800db1a20d0ef42938fe98b",
          "md5": "af69fb4194cd3d71ae7bda78ca485db1",
          "sha256": "e60475ae277b6af71cb934878fd7eaa9c142e1bed926a101e7a216e06a4189cb"
        },
        "downloads": -1,
        "filename": "pycrate-0.5.0b1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af69fb4194cd3d71ae7bda78ca485db1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 10557389,
        "upload_time": "2021-05-18T20:03:58",
        "upload_time_iso_8601": "2021-05-18T20:03:58.666786Z",
        "url": "https://files.pythonhosted.org/packages/ef/de/5a68f4ac97d285624a37c59cda63e2be12ff1800db1a20d0ef42938fe98b/pycrate-0.5.0b1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc110c88569c75884abdc72d40ce271266abf85ee3bc6d0afb9a84fe5a714f36",
          "md5": "405f9fc76a2de70d889ab0ae68e1b320",
          "sha256": "c828af71973b8ad364ebd66306701d35c14ad38ce4ad022b60912312596ad64d"
        },
        "downloads": -1,
        "filename": "pycrate-0.5.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "405f9fc76a2de70d889ab0ae68e1b320",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10005985,
        "upload_time": "2021-05-18T20:04:01",
        "upload_time_iso_8601": "2021-05-18T20:04:01.130784Z",
        "url": "https://files.pythonhosted.org/packages/dc/11/0c88569c75884abdc72d40ce271266abf85ee3bc6d0afb9a84fe5a714f36/pycrate-0.5.0b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac0236b3f697947851bcd62fb496978a5ff04ca85558c3240b1db82dcc4f33a5",
          "md5": "694ae29f8d407af756d8490e59cb3aad",
          "sha256": "9a09848bff930a77419e439dcc514686c2e20252d7ee70d2fda2483a2145fea2"
        },
        "downloads": -1,
        "filename": "pycrate-0.5.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "694ae29f8d407af756d8490e59cb3aad",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 10559923,
        "upload_time": "2021-05-26T08:12:43",
        "upload_time_iso_8601": "2021-05-26T08:12:43.392917Z",
        "url": "https://files.pythonhosted.org/packages/ac/02/36b3f697947851bcd62fb496978a5ff04ca85558c3240b1db82dcc4f33a5/pycrate-0.5.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9acd694ce874b594df4cc8f0f3cdd04c515c5b7502acd233f4e1ef1faeb6335f",
          "md5": "84d9526263a828168aaf667724b0be84",
          "sha256": "427b2dbea3274e3c08d49a0bcf902132a998ed58e5f34223499037f3e8d03256"
        },
        "downloads": -1,
        "filename": "pycrate-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "84d9526263a828168aaf667724b0be84",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10004333,
        "upload_time": "2021-05-26T08:12:45",
        "upload_time_iso_8601": "2021-05-26T08:12:45.928387Z",
        "url": "https://files.pythonhosted.org/packages/9a/cd/694ce874b594df4cc8f0f3cdd04c515c5b7502acd233f4e1ef1faeb6335f/pycrate-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0478d581480def8dd2741c7787488e1631bfe92d59a996b15faafff28486595",
          "md5": "5255618ebe4e1ca7ed7cd1cb6591e91b",
          "sha256": "b5d8a1bd3ead7870629e88a33c35c2965ff3863457e8305cef8a6859978fb363"
        },
        "downloads": -1,
        "filename": "pycrate-0.5.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5255618ebe4e1ca7ed7cd1cb6591e91b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11598687,
        "upload_time": "2021-09-22T14:55:12",
        "upload_time_iso_8601": "2021-09-22T14:55:12.917718Z",
        "url": "https://files.pythonhosted.org/packages/a0/47/8d581480def8dd2741c7787488e1631bfe92d59a996b15faafff28486595/pycrate-0.5.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab4d91f591ab3b0115adc4dd5fd244704be2f898f05cefa6bc79131a300631ae",
          "md5": "f05f4bfe974e70f1bd459309f0c4135a",
          "sha256": "e97e938995110c2378b8871aaa7ee643c2b59521128bba1bda6a43d2f8f2683d"
        },
        "downloads": -1,
        "filename": "pycrate-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f05f4bfe974e70f1bd459309f0c4135a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11027487,
        "upload_time": "2021-09-22T14:55:15",
        "upload_time_iso_8601": "2021-09-22T14:55:15.251476Z",
        "url": "https://files.pythonhosted.org/packages/ab/4d/91f591ab3b0115adc4dd5fd244704be2f898f05cefa6bc79131a300631ae/pycrate-0.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fe1b12351552558ff7f30f0ea23adf539a0c4372b2f930c3f73658a68ff24fd",
          "md5": "6c91b7f398394eb7281ed3aa57e395d4",
          "sha256": "152752b90e71a34e796b67b48eab6179cf9778859cd5b5b2757046578982cc88"
        },
        "downloads": -1,
        "filename": "pycrate-0.5.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6c91b7f398394eb7281ed3aa57e395d4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11885356,
        "upload_time": "2022-03-16T17:41:08",
        "upload_time_iso_8601": "2022-03-16T17:41:08.229880Z",
        "url": "https://files.pythonhosted.org/packages/2f/e1/b12351552558ff7f30f0ea23adf539a0c4372b2f930c3f73658a68ff24fd/pycrate-0.5.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bda1d66808d0787bade17ce1b63b1b18f95a03e4551c52de4a1237e56300b6e8",
          "md5": "19b2188e973931e84e768fa79aee73ef",
          "sha256": "652bee70fec795744f996ae8fbc1e4a4fc26eed0dca5ec15453809486837e857"
        },
        "downloads": -1,
        "filename": "pycrate-0.5.4.tar.gz",
        "has_sig": false,
        "md5_digest": "19b2188e973931e84e768fa79aee73ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11299223,
        "upload_time": "2022-03-16T17:41:15",
        "upload_time_iso_8601": "2022-03-16T17:41:15.466089Z",
        "url": "https://files.pythonhosted.org/packages/bd/a1/d66808d0787bade17ce1b63b1b18f95a03e4551c52de4a1237e56300b6e8/pycrate-0.5.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86b98d7bb767536dbc9f71a817a265e2605d08a3f548bf9d704af2569dba483c",
          "md5": "969498dab3aaa28d630953fa594bd236",
          "sha256": "581bd8b564fdcb82779db87acfcd09d4b6e0b1a452d3823be6c3c0b409b3df85"
        },
        "downloads": -1,
        "filename": "pycrate-0.5.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "969498dab3aaa28d630953fa594bd236",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11935613,
        "upload_time": "2022-07-21T15:37:39",
        "upload_time_iso_8601": "2022-07-21T15:37:39.420083Z",
        "url": "https://files.pythonhosted.org/packages/86/b9/8d7bb767536dbc9f71a817a265e2605d08a3f548bf9d704af2569dba483c/pycrate-0.5.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "258fb3d7e0b541aa04b2f0f7aa694a6946b572bfa2e2627cf1f12b5416d633df",
          "md5": "075622d5d573274cd4dbfe268ca52f7f",
          "sha256": "59f09331890a389a6b98412f19f4fb021c5a75a35ab07bf5ba0d1e299a0967af"
        },
        "downloads": -1,
        "filename": "pycrate-0.5.5.tar.gz",
        "has_sig": false,
        "md5_digest": "075622d5d573274cd4dbfe268ca52f7f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11354856,
        "upload_time": "2022-07-21T15:37:41",
        "upload_time_iso_8601": "2022-07-21T15:37:41.936169Z",
        "url": "https://files.pythonhosted.org/packages/25/8f/b3d7e0b541aa04b2f0f7aa694a6946b572bfa2e2627cf1f12b5416d633df/pycrate-0.5.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "86b98d7bb767536dbc9f71a817a265e2605d08a3f548bf9d704af2569dba483c",
        "md5": "969498dab3aaa28d630953fa594bd236",
        "sha256": "581bd8b564fdcb82779db87acfcd09d4b6e0b1a452d3823be6c3c0b409b3df85"
      },
      "downloads": -1,
      "filename": "pycrate-0.5.5-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "969498dab3aaa28d630953fa594bd236",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 11935613,
      "upload_time": "2022-07-21T15:37:39",
      "upload_time_iso_8601": "2022-07-21T15:37:39.420083Z",
      "url": "https://files.pythonhosted.org/packages/86/b9/8d7bb767536dbc9f71a817a265e2605d08a3f548bf9d704af2569dba483c/pycrate-0.5.5-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "258fb3d7e0b541aa04b2f0f7aa694a6946b572bfa2e2627cf1f12b5416d633df",
        "md5": "075622d5d573274cd4dbfe268ca52f7f",
        "sha256": "59f09331890a389a6b98412f19f4fb021c5a75a35ab07bf5ba0d1e299a0967af"
      },
      "downloads": -1,
      "filename": "pycrate-0.5.5.tar.gz",
      "has_sig": false,
      "md5_digest": "075622d5d573274cd4dbfe268ca52f7f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11354856,
      "upload_time": "2022-07-21T15:37:41",
      "upload_time_iso_8601": "2022-07-21T15:37:41.936169Z",
      "url": "https://files.pythonhosted.org/packages/25/8f/b3d7e0b541aa04b2f0f7aa694a6946b572bfa2e2627cf1f12b5416d633df/pycrate-0.5.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}