{
  "info": {
    "author": "Seluxit A/S",
    "author_email": "support@seluxit.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "python-wappsto-rest\n===============================================================================\n\n\n\n\n\n\nUsecase Examples:\n-------------------------------------------------------------------------------\n\n```python\nimport uuid\nfrom wappstorest import WappstoRest\nfrom wappstorest import WappstoService\n\nservice = WappstoRest()\nservice.login(\n    username='the_user',\n    password='SuperSecurePasswordThatYouDoNotRemember'\n)\n\n\nthe_network = service(WappstoService.NETWORK).service_id(\n    uuid.uuid4()\n).get()\n\nprint(the_network.name)\nprint(the_network.meta.id)\n\n\nservice.logout()\n```\n\n```python\nfrom wappstorest import WappstoRest\nfrom wappstorest import WappstoService\nfrom wappstorest import WappstoPath\nfrom wappstorest import WappstoSchema\n\nservice = WappstoRest()\nservice.login(\n    username='the_user',\n    password='SuperSecurePasswordThatYouDoNotRemember'\n)\n\n\n# Is this even possible?\ndevice_list: WappstoSchema.response.IdList = service(\n    WappstoService.DEVICE\n).filter(\n    WappstoPath.Device.meta.parent.name == \"Production\"\n).get()\n\nthe_device: WappstoSchema.response.Device = service(\n    WappstoService.DEVICE\n).service_id(device_list.id[0]).post(\n    WappstoSchema.create.Device(\n        name='button'\n    )\n)\n\nservice.logout()\n```\n\n\n```python\nimport datetime\n\nfrom wappstorest import WappstoRest\nfrom wappstorest import WappstoService\nfrom wappstorest import WappstoPath\nfrom wappstorest import WappstoSchema\n\nservice = WappstoRest()\nservice.login(\n    username='the_user',\n    password='SuperSecurePasswordThatYouDoNotRemember',\n    admin=True,\n)\n\nuser_list: list[WappstoSchema.response.User] = service(\n    WappstoService.USER\n).filter(\n    WappstoPath.User.meta.created < datetime.datetime.now()\n).filter(\n    \"this.user.name~=test_\"\n).option(\n    fullsearch=True,\n).admin().get(expand=3)\n\n\nservice.logout()\n```\n\nLicense\n===============================================================================\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\n\nNotes:\n===============================================================================\n * update schema -> patch\n * create schema -> post\n * output schema -> response on anything.\n * query schema -> Options\n\n\nKnown Bugs\n===============================================================================\n ...\n\n\nTODO List\n===============================================================================\n**Schema**\n * [ ] Fix `constr`, `conint` ... to Field: [Pydantic Schema](https://docs.pydantic.dev/usage/schema/).\n * [x] There need to be a Create Schema & response schema (output).\n\n**Code base**\n * [ ] Add more/better logging logs.\n * [ ] Push to pip.\n\n**Tests**\n * [ ] Add more test to get a 100%-ish testing coverage.\n\n\n\nv0.0.1 (Febuary 21, 2023)\n===============================================================================\n\n## Added\n\n * First Release.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Wappsto/python-wappsto-rest",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wappstorest",
    "package_url": "https://pypi.org/project/wappstorest/",
    "platform": null,
    "project_url": "https://pypi.org/project/wappstorest/",
    "project_urls": {
      "Homepage": "https://github.com/Wappsto/python-wappsto-rest"
    },
    "release_url": "https://pypi.org/project/wappstorest/0.0.1/",
    "requires_dist": [
      "pydantic (>=1.10.5)",
      "httpx (>=0.23.0)",
      "websocket-client (>=0.59.0)",
      "rich (>=12.0.0)"
    ],
    "requires_python": ">=3.9.0",
    "summary": "Simple Wappsto Python user-interface to Wappsto Rest",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17431362,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c42636a9785fb13366a13e482a51cece150289464192534113da759e14a419be",
          "md5": "e93d5490f36fee6f4c58c1517459f573",
          "sha256": "2e124a946e763e78857bb5f7e9f573a035ae99ad70fbd4d85ebcd78b6e1f862a"
        },
        "downloads": -1,
        "filename": "wappstorest-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e93d5490f36fee6f4c58c1517459f573",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9.0",
        "size": 412980,
        "upload_time": "2023-03-24T13:44:44",
        "upload_time_iso_8601": "2023-03-24T13:44:44.012529Z",
        "url": "https://files.pythonhosted.org/packages/c4/26/36a9785fb13366a13e482a51cece150289464192534113da759e14a419be/wappstorest-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d51a3e6bed0d95c3367ca30b6a751aaa5a96fbe259cf8ce1e08f0777a7d133ff",
          "md5": "9a0553a93b1a90d70512a0a53a60ef0b",
          "sha256": "1d58d0fbace08b87cac23944149b86158706df5ecff42403933b6cbfad117a04"
        },
        "downloads": -1,
        "filename": "wappstorest-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9a0553a93b1a90d70512a0a53a60ef0b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9.0",
        "size": 113726,
        "upload_time": "2023-03-24T13:44:46",
        "upload_time_iso_8601": "2023-03-24T13:44:46.751813Z",
        "url": "https://files.pythonhosted.org/packages/d5/1a/3e6bed0d95c3367ca30b6a751aaa5a96fbe259cf8ce1e08f0777a7d133ff/wappstorest-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c42636a9785fb13366a13e482a51cece150289464192534113da759e14a419be",
        "md5": "e93d5490f36fee6f4c58c1517459f573",
        "sha256": "2e124a946e763e78857bb5f7e9f573a035ae99ad70fbd4d85ebcd78b6e1f862a"
      },
      "downloads": -1,
      "filename": "wappstorest-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e93d5490f36fee6f4c58c1517459f573",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9.0",
      "size": 412980,
      "upload_time": "2023-03-24T13:44:44",
      "upload_time_iso_8601": "2023-03-24T13:44:44.012529Z",
      "url": "https://files.pythonhosted.org/packages/c4/26/36a9785fb13366a13e482a51cece150289464192534113da759e14a419be/wappstorest-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d51a3e6bed0d95c3367ca30b6a751aaa5a96fbe259cf8ce1e08f0777a7d133ff",
        "md5": "9a0553a93b1a90d70512a0a53a60ef0b",
        "sha256": "1d58d0fbace08b87cac23944149b86158706df5ecff42403933b6cbfad117a04"
      },
      "downloads": -1,
      "filename": "wappstorest-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9a0553a93b1a90d70512a0a53a60ef0b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9.0",
      "size": 113726,
      "upload_time": "2023-03-24T13:44:46",
      "upload_time_iso_8601": "2023-03-24T13:44:46.751813Z",
      "url": "https://files.pythonhosted.org/packages/d5/1a/3e6bed0d95c3367ca30b6a751aaa5a96fbe259cf8ce1e08f0777a7d133ff/wappstorest-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}