{
  "info": {
    "author": "Hyunjin Jeong",
    "author_email": "hyunjin.dev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Confluent's Python Client for Apache Kafka<sup>TM</sup>\n=======================================================\n\n**confluent-kafka-python** provides a high-level Producer, Consumer and AdminClient compatible with all\n[Apache Kafka<sup>TM<sup>](http://kafka.apache.org/) brokers >= v0.8, [Confluent Cloud](https://www.confluent.io/confluent-cloud/)\nand the [Confluent Platform](https://www.confluent.io/product/compare/). The client is:\n\n- **Reliable** - It's a wrapper around [librdkafka](https://github.com/edenhill/librdkafka) (provided automatically via binary wheels) which is widely deployed in a diverse set of production scenarios. It's tested using [the same set of system tests](https://github.com/confluentinc/confluent-kafka-python/tree/master/confluent_kafka/kafkatest) as the Java client [and more](https://github.com/confluentinc/confluent-kafka-python/tree/master/tests). It's supported by [Confluent](https://confluent.io).\n\n- **Performant** - Performance is a key design consideration. Maximum throughput is on par with the Java client for larger message sizes (where the overhead of the Python interpreter has less impact). Latency is on par with the Java client.\n\n- **Future proof** - Confluent, founded by the\ncreators of Kafka, is building a [streaming platform](https://www.confluent.io/product/compare/)\nwith Apache Kafka at its core. It's high priority for us that client features keep\npace with core Apache Kafka and components of the [Confluent Platform](https://www.confluent.io/product/compare/).\n\n\nSee the [API documentation](http://docs.confluent.io/current/clients/confluent-kafka-python/index.html) for more info.\n\n\nUsage\n=====\n\nBelow are some examples of typical usage. For more examples, see the [examples](examples) directory or the [confluentinc/examples](https://github.com/confluentinc/examples/tree/master/clients/cloud/python) github repo for a [Confluent Cloud](https://www.confluent.io/confluent-cloud/) example.\n\n\n**Producer**\n\n```python\nfrom confluent_kafka import Producer\n\n\np = Producer({'bootstrap.servers': 'mybroker1,mybroker2'})\n\ndef delivery_report(err, msg):\n    \"\"\" Called once for each message produced to indicate delivery result.\n        Triggered by poll() or flush(). \"\"\"\n    if err is not None:\n        print('Message delivery failed: {}'.format(err))\n    else:\n        print('Message delivered to {} [{}]'.format(msg.topic(), msg.partition()))\n\nfor data in some_data_source:\n    # Trigger any available delivery report callbacks from previous produce() calls\n    p.poll(0)\n\n    # Asynchronously produce a message, the delivery report callback\n    # will be triggered from poll() above, or flush() below, when the message has\n    # been successfully delivered or failed permanently.\n    p.produce('mytopic', data.encode('utf-8'), callback=delivery_report)\n\n# Wait for any outstanding messages to be delivered and delivery report\n# callbacks to be triggered.\np.flush()\n```\n\n\n**High-level Consumer**\n\n```python\nfrom confluent_kafka import Consumer\n\n\nc = Consumer({\n    'bootstrap.servers': 'mybroker',\n    'group.id': 'mygroup',\n    'auto.offset.reset': 'earliest'\n})\n\nc.subscribe(['mytopic'])\n\nwhile True:\n    msg = c.poll(1.0)\n\n    if msg is None:\n        continue\n    if msg.error():\n        print(\"Consumer error: {}\".format(msg.error()))\n        continue\n\n    print('Received message: {}'.format(msg.value().decode('utf-8')))\n\nc.close()\n```\n\n**AvroProducer**\n\n```python\nfrom confluent_kafka import avro\nfrom confluent_kafka.avro import AvroProducer\n\n\nvalue_schema_str = \"\"\"\n{\n   \"namespace\": \"my.test\",\n   \"name\": \"value\",\n   \"type\": \"record\",\n   \"fields\" : [\n     {\n       \"name\" : \"name\",\n       \"type\" : \"string\"\n     }\n   ]\n}\n\"\"\"\n\nkey_schema_str = \"\"\"\n{\n   \"namespace\": \"my.test\",\n   \"name\": \"key\",\n   \"type\": \"record\",\n   \"fields\" : [\n     {\n       \"name\" : \"name\",\n       \"type\" : \"string\"\n     }\n   ]\n}\n\"\"\"\n\nvalue_schema = avro.loads(value_schema_str)\nkey_schema = avro.loads(key_schema_str)\nvalue = {\"name\": \"Value\"}\nkey = {\"name\": \"Key\"}\n\n\ndef delivery_report(err, msg):\n    \"\"\" Called once for each message produced to indicate delivery result.\n        Triggered by poll() or flush(). \"\"\"\n    if err is not None:\n        print('Message delivery failed: {}'.format(err))\n    else:\n        print('Message delivered to {} [{}]'.format(msg.topic(), msg.partition()))\n\n\navroProducer = AvroProducer({\n    'bootstrap.servers': 'mybroker,mybroker2',\n    'on_delivery': delivery_report,\n    'schema.registry.url': 'http://schema_registry_host:port'\n    }, default_key_schema=key_schema, default_value_schema=value_schema)\n\navroProducer.produce(topic='my_topic', value=value, key=key)\navroProducer.flush()\n```\n\n**AvroConsumer**\n\n```python\nfrom confluent_kafka.avro import AvroConsumer\nfrom confluent_kafka.avro.serializer import SerializerError\n\n\nc = AvroConsumer({\n    'bootstrap.servers': 'mybroker,mybroker2',\n    'group.id': 'groupid',\n    'schema.registry.url': 'http://127.0.0.1:8081'})\n\nc.subscribe(['my_topic'])\n\nwhile True:\n    try:\n        msg = c.poll(10)\n\n    except SerializerError as e:\n        print(\"Message deserialization failed for {}: {}\".format(msg, e))\n        break\n\n    if msg is None:\n        continue\n\n    if msg.error():\n        print(\"AvroConsumer error: {}\".format(msg.error()))\n        continue\n\n    print(msg.value())\n\nc.close()\n```\n\n**AdminClient**\n\nCreate topics:\n\n```python\nfrom confluent_kafka.admin import AdminClient, NewTopic\n\na = AdminClient({'bootstrap.servers': 'mybroker'})\n\nnew_topics = [NewTopic(topic, num_partitions=3, replication_factor=1) for topic in [\"topic1\", \"topic2\"]]\n# Note: In a multi-cluster production scenario, it is more typical to use a replication_factor of 3 for durability.\n\n# Call create_topics to asynchronously create topics. A dict\n# of <topic,future> is returned.\nfs = a.create_topics(new_topics)\n\n# Wait for each operation to finish.\nfor topic, f in fs.items():\n    try:\n        f.result()  # The result itself is None\n        print(\"Topic {} created\".format(topic))\n    except Exception as e:\n        print(\"Failed to create topic {}: {}\".format(topic, e))\n```\n\n\n\nThread Safety\n-------------\n\nThe `Producer`, `Consumer` and `AdminClient` are all thread safe.\n\n\nInstall\n=======\n\n**Install self-contained binary wheels**\n\n    $ pip install confluent-kafka\n\n**NOTE:** The pre-built Linux wheels do NOT contain SASL Kerberos/GSSAPI support.\n          If you need SASL Kerberos/GSSAPI support you must install librdkafka and\n          its dependencies using the repositories below and then build\n          confluent-kafka  using the command in the \"Install from\n          source from PyPi\" section below.\n\n**Install AvroProducer and AvroConsumer**\n\n    $ pip install \"confluent-kafka[avro]\"\n\n**Install from source from PyPi**\n*(requires librdkafka + dependencies to be installed separately)*:\n\n    $ pip install --no-binary :all: confluent-kafka\n\n\nFor source install, see *Prerequisites* below.\n\n\nBroker Compatibility\n====================\nThe Python client (as well as the underlying C library librdkafka) supports\nall broker versions &gt;= 0.8.\nBut due to the nature of the Kafka protocol in broker versions 0.8 and 0.9 it\nis not safe for a client to assume what protocol version is actually supported\nby the broker, thus you will need to hint the Python client what protocol\nversion it may use. This is done through two configuration settings:\n\n * `broker.version.fallback=YOUR_BROKER_VERSION` (default 0.9.0.1)\n * `api.version.request=true|false` (default true)\n\nWhen using a Kafka 0.10 broker or later you don't need to do anything\n(`api.version.request=true` is the default).\nIf you use Kafka broker 0.9 or 0.8 you must set\n`api.version.request=false` and set\n`broker.version.fallback` to your broker version,\ne.g `broker.version.fallback=0.9.0.1`.\n\nMore info here:\nhttps://github.com/edenhill/librdkafka/wiki/Broker-version-compatibility\n\n\nSSL certificates\n================\nIf you're connecting to a Kafka cluster through SSL you will need to configure\nthe client with `'security.protocol': 'SSL'` (or `'SASL_SSL'` if SASL\nauthentication is used).\n\nThe client will use CA certificates to verify the broker's certificate.\nThe embedded OpenSSL library will look for CA certificates in `/usr/lib/ssl/certs/`\nor `/usr/lib/ssl/cacert.pem`. CA certificates are typically provided by the\nLinux distribution's `ca-certificates` package which needs to be installed\nthrough `apt`, `yum`, et.al.\n\nIf your system stores CA certificates in another location you will need to\nconfigure the client with `'ssl.ca.location': '/path/to/cacert.pem'`. \n\nAlternatively, the CA certificates can be provided by the [certifi](https://pypi.org/project/certifi/)\nPython package. To use certifi, add an `import certifi` line and configure the\nclient's CA location with `'ssl.ca.location': certifi.where()`.\n\n\nPrerequisites\n=============\n\n * Python >= 2.7 or Python 3.x\n * [librdkafka](https://github.com/edenhill/librdkafka) >= 1.6.0 (latest release is embedded in wheels)\n\nlibrdkafka is embedded in the macosx manylinux wheels, for other platforms, SASL Kerberos/GSSAPI support or\nwhen a specific version of librdkafka is desired, following these guidelines:\n\n  * For **Debian/Ubuntu** based systems, add this APT repo and then do `sudo apt-get install librdkafka-dev python-dev`:\nhttp://docs.confluent.io/current/installation.html#installation-apt\n\n * For **RedHat** and **RPM**-based distros, add this YUM repo and then do `sudo yum install librdkafka-devel python-devel`:\nhttp://docs.confluent.io/current/installation.html#rpm-packages-via-yum\n\n * On **OSX**, use **homebrew** and do `brew install librdkafka`\n\n\nLicense\n=======\n\n[Apache License v2.0](http://www.apache.org/licenses/LICENSE-2.0)\n\nKAFKA is a registered trademark of The Apache Software Foundation and has been licensed for use\nby confluent-kafka-python. confluent-kafka-python has no affiliation with and is not endorsed by\nThe Apache Software Foundation.\n\nDeveloper Notes\n===============\n\nInstructions on building and testing confluent-kafka-python can be found [here](DEVELOPER.md).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hyunjinjeong/confluent-kafka-python",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pup-confluent-kafka",
    "package_url": "https://pypi.org/project/pup-confluent-kafka/",
    "platform": "",
    "project_url": "https://pypi.org/project/pup-confluent-kafka/",
    "project_urls": {
      "Homepage": "https://github.com/hyunjinjeong/confluent-kafka-python"
    },
    "release_url": "https://pypi.org/project/pup-confluent-kafka/1.7.1/",
    "requires_dist": [
      "futures ; python_version < \"3.2\"",
      "enum34 ; python_version < \"3.4\"",
      "requests ; extra == 'avro'",
      "fastavro (<1.0,>=0.23.0) ; (python_version < \"3.0\") and extra == 'avro'",
      "avro (==1.10.0) ; (python_version < \"3.0\") and extra == 'avro'",
      "fastavro (>=1.0) ; (python_version > \"3.0\") and extra == 'avro'",
      "avro-python3 (==1.10.0) ; (python_version > \"3.0\") and extra == 'avro'",
      "pytest-timeout ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "requests ; extra == 'dev'",
      "pytest (==4.6.4) ; (python_version < \"3.0\") and extra == 'dev'",
      "fastavro (<1.0,>=0.23.0) ; (python_version < \"3.0\") and extra == 'dev'",
      "avro (==1.10.0) ; (python_version < \"3.0\") and extra == 'dev'",
      "fastavro (>=1.0) ; (python_version > \"3.0\") and extra == 'dev'",
      "avro-python3 (==1.10.0) ; (python_version > \"3.0\") and extra == 'dev'",
      "pytest ; (python_version >= \"3.0\") and extra == 'dev'",
      "sphinx ; extra == 'doc'",
      "sphinx-rtd-theme ; extra == 'doc'",
      "requests ; extra == 'doc'",
      "fastavro (<1.0,>=0.23.0) ; (python_version < \"3.0\") and extra == 'doc'",
      "avro (==1.10.0) ; (python_version < \"3.0\") and extra == 'doc'",
      "fastavro (>=1.0) ; (python_version > \"3.0\") and extra == 'doc'",
      "avro-python3 (==1.10.0) ; (python_version > \"3.0\") and extra == 'doc'",
      "jsonschema ; extra == 'json'",
      "requests ; extra == 'json'",
      "pyrsistent (==0.16.1) ; (python_version < \"3.0\") and extra == 'json'",
      "pyrsistent ; (python_version > \"3.0\") and extra == 'json'",
      "protobuf ; extra == 'protobuf'",
      "requests ; extra == 'protobuf'",
      "requests ; extra == 'schema-registry'"
    ],
    "requires_python": "",
    "summary": "Patched version of Confluent's Python client for Apache Kafka",
    "version": "1.7.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12177685,
  "releases": {
    "1.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2426a08237f4f3af461095eb127c645191a3d30c5e2ef837c321b5704b6c68ec",
          "md5": "8b2565fe1c1cd039f3f80d035755d7c9",
          "sha256": "a2149aba40cd31682e4c289b42596e589b76fbc3523bb4fbd02c0087ddb68ede"
        },
        "downloads": -1,
        "filename": "pup_confluent_kafka-1.7.1-cp310-cp310-manylinux2010_x86_64.whl",
        "has_sig": false,
        "md5_digest": "8b2565fe1c1cd039f3f80d035755d7c9",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": null,
        "size": 10902578,
        "upload_time": "2021-12-01T14:40:21",
        "upload_time_iso_8601": "2021-12-01T14:40:21.042859Z",
        "url": "https://files.pythonhosted.org/packages/24/26/a08237f4f3af461095eb127c645191a3d30c5e2ef837c321b5704b6c68ec/pup_confluent_kafka-1.7.1-cp310-cp310-manylinux2010_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7997e802d8f84bffd7cdd261eb15550b509e08d511bae5055985954c49c2d287",
          "md5": "22caef6e11ee165e73fcad15772039c0",
          "sha256": "1846fb87f12a43514072cd6f81769865314f74e5d82279db951e1ee7c203a461"
        },
        "downloads": -1,
        "filename": "pup_confluent_kafka-1.7.1-cp36-cp36m-manylinux2010_x86_64.whl",
        "has_sig": false,
        "md5_digest": "22caef6e11ee165e73fcad15772039c0",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": null,
        "size": 10892902,
        "upload_time": "2021-12-01T14:39:25",
        "upload_time_iso_8601": "2021-12-01T14:39:25.325741Z",
        "url": "https://files.pythonhosted.org/packages/79/97/e802d8f84bffd7cdd261eb15550b509e08d511bae5055985954c49c2d287/pup_confluent_kafka-1.7.1-cp36-cp36m-manylinux2010_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ed6e35d227dd3b80ae29985ebb9efb1f7e61d44aee527f088809ffdc3570e7e",
          "md5": "dfe7cfc03989495e1cfd81a16facbce0",
          "sha256": "7aee8df3862013aff929db94256a9f5174f8a34fe9ba6f4875ec924d1eb576dc"
        },
        "downloads": -1,
        "filename": "pup_confluent_kafka-1.7.1-cp37-cp37m-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "dfe7cfc03989495e1cfd81a16facbce0",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 125034,
        "upload_time": "2021-12-01T13:01:40",
        "upload_time_iso_8601": "2021-12-01T13:01:40.547101Z",
        "url": "https://files.pythonhosted.org/packages/7e/d6/e35d227dd3b80ae29985ebb9efb1f7e61d44aee527f088809ffdc3570e7e/pup_confluent_kafka-1.7.1-cp37-cp37m-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3623060e33f5e9de53552f98bc2fcefd57e2ecda7d68b8e8ea99ca428690b27e",
          "md5": "54391251e48df777e34b521e3f94c4c5",
          "sha256": "31805c292f6ca08da118af066f269aa9f337b94d89b817eac7229034c48cce86"
        },
        "downloads": -1,
        "filename": "pup_confluent_kafka-1.7.1-cp37-cp37m-manylinux2010_x86_64.whl",
        "has_sig": false,
        "md5_digest": "54391251e48df777e34b521e3f94c4c5",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 10895285,
        "upload_time": "2021-12-01T14:39:41",
        "upload_time_iso_8601": "2021-12-01T14:39:41.396229Z",
        "url": "https://files.pythonhosted.org/packages/36/23/060e33f5e9de53552f98bc2fcefd57e2ecda7d68b8e8ea99ca428690b27e/pup_confluent_kafka-1.7.1-cp37-cp37m-manylinux2010_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab55c852f5d115c04e3d7264ad0ab451299d6a611f9c226850b3403f03758082",
          "md5": "a6e6d4df50e5df003a282c6ae8163763",
          "sha256": "a612912e769b463949c2a481673d36d6130dfb1068169e620f883ed9e59bc135"
        },
        "downloads": -1,
        "filename": "pup_confluent_kafka-1.7.1-cp38-cp38-manylinux2010_x86_64.whl",
        "has_sig": false,
        "md5_digest": "a6e6d4df50e5df003a282c6ae8163763",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 10908450,
        "upload_time": "2021-12-01T14:39:53",
        "upload_time_iso_8601": "2021-12-01T14:39:53.724195Z",
        "url": "https://files.pythonhosted.org/packages/ab/55/c852f5d115c04e3d7264ad0ab451299d6a611f9c226850b3403f03758082/pup_confluent_kafka-1.7.1-cp38-cp38-manylinux2010_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11af64546fec94dc429297fdcdf2dff43e909aee239b3d54005a50578f286b21",
          "md5": "4e3419a41800124a4c279c167c71cd7f",
          "sha256": "4041ae82b5ddfaddb1b80f0a0add3f28f15a09f7f2618d4dfcbad495c49ba6f1"
        },
        "downloads": -1,
        "filename": "pup_confluent_kafka-1.7.1-cp39-cp39-macosx_11_0_x86_64.whl",
        "has_sig": false,
        "md5_digest": "4e3419a41800124a4c279c167c71cd7f",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 125469,
        "upload_time": "2021-12-01T05:24:36",
        "upload_time_iso_8601": "2021-12-01T05:24:36.009190Z",
        "url": "https://files.pythonhosted.org/packages/11/af/64546fec94dc429297fdcdf2dff43e909aee239b3d54005a50578f286b21/pup_confluent_kafka-1.7.1-cp39-cp39-macosx_11_0_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "838ecce4b77a0b124fbe4887a49ef62a778dbb64fa71909b52834a863de77a34",
          "md5": "7519998677e53245070df11664a1a3d2",
          "sha256": "08262f922c8676058f0af02fb7811dbd0fc3e5c22cd092ce1ab5565da9d1acad"
        },
        "downloads": -1,
        "filename": "pup_confluent_kafka-1.7.1-cp39-cp39-manylinux2010_x86_64.whl",
        "has_sig": false,
        "md5_digest": "7519998677e53245070df11664a1a3d2",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 10901184,
        "upload_time": "2021-12-01T14:40:07",
        "upload_time_iso_8601": "2021-12-01T14:40:07.768941Z",
        "url": "https://files.pythonhosted.org/packages/83/8e/cce4b77a0b124fbe4887a49ef62a778dbb64fa71909b52834a863de77a34/pup_confluent_kafka-1.7.1-cp39-cp39-manylinux2010_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad4f0663517a9be1fd5c20ef16e24df799d6b103fe34acae86c1c693bff7e7ea",
          "md5": "2fcc9515aa6115dabbea7b89acd97c86",
          "sha256": "18b11696abcdaedb08447818e29442d83207cecbbe6eb3aec82351d2bad77f32"
        },
        "downloads": -1,
        "filename": "pup-confluent-kafka-1.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2fcc9515aa6115dabbea7b89acd97c86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 107949,
        "upload_time": "2021-12-01T05:24:38",
        "upload_time_iso_8601": "2021-12-01T05:24:38.195022Z",
        "url": "https://files.pythonhosted.org/packages/ad/4f/0663517a9be1fd5c20ef16e24df799d6b103fe34acae86c1c693bff7e7ea/pup-confluent-kafka-1.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2426a08237f4f3af461095eb127c645191a3d30c5e2ef837c321b5704b6c68ec",
        "md5": "8b2565fe1c1cd039f3f80d035755d7c9",
        "sha256": "a2149aba40cd31682e4c289b42596e589b76fbc3523bb4fbd02c0087ddb68ede"
      },
      "downloads": -1,
      "filename": "pup_confluent_kafka-1.7.1-cp310-cp310-manylinux2010_x86_64.whl",
      "has_sig": false,
      "md5_digest": "8b2565fe1c1cd039f3f80d035755d7c9",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": null,
      "size": 10902578,
      "upload_time": "2021-12-01T14:40:21",
      "upload_time_iso_8601": "2021-12-01T14:40:21.042859Z",
      "url": "https://files.pythonhosted.org/packages/24/26/a08237f4f3af461095eb127c645191a3d30c5e2ef837c321b5704b6c68ec/pup_confluent_kafka-1.7.1-cp310-cp310-manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7997e802d8f84bffd7cdd261eb15550b509e08d511bae5055985954c49c2d287",
        "md5": "22caef6e11ee165e73fcad15772039c0",
        "sha256": "1846fb87f12a43514072cd6f81769865314f74e5d82279db951e1ee7c203a461"
      },
      "downloads": -1,
      "filename": "pup_confluent_kafka-1.7.1-cp36-cp36m-manylinux2010_x86_64.whl",
      "has_sig": false,
      "md5_digest": "22caef6e11ee165e73fcad15772039c0",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": null,
      "size": 10892902,
      "upload_time": "2021-12-01T14:39:25",
      "upload_time_iso_8601": "2021-12-01T14:39:25.325741Z",
      "url": "https://files.pythonhosted.org/packages/79/97/e802d8f84bffd7cdd261eb15550b509e08d511bae5055985954c49c2d287/pup_confluent_kafka-1.7.1-cp36-cp36m-manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7ed6e35d227dd3b80ae29985ebb9efb1f7e61d44aee527f088809ffdc3570e7e",
        "md5": "dfe7cfc03989495e1cfd81a16facbce0",
        "sha256": "7aee8df3862013aff929db94256a9f5174f8a34fe9ba6f4875ec924d1eb576dc"
      },
      "downloads": -1,
      "filename": "pup_confluent_kafka-1.7.1-cp37-cp37m-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "dfe7cfc03989495e1cfd81a16facbce0",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": null,
      "size": 125034,
      "upload_time": "2021-12-01T13:01:40",
      "upload_time_iso_8601": "2021-12-01T13:01:40.547101Z",
      "url": "https://files.pythonhosted.org/packages/7e/d6/e35d227dd3b80ae29985ebb9efb1f7e61d44aee527f088809ffdc3570e7e/pup_confluent_kafka-1.7.1-cp37-cp37m-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3623060e33f5e9de53552f98bc2fcefd57e2ecda7d68b8e8ea99ca428690b27e",
        "md5": "54391251e48df777e34b521e3f94c4c5",
        "sha256": "31805c292f6ca08da118af066f269aa9f337b94d89b817eac7229034c48cce86"
      },
      "downloads": -1,
      "filename": "pup_confluent_kafka-1.7.1-cp37-cp37m-manylinux2010_x86_64.whl",
      "has_sig": false,
      "md5_digest": "54391251e48df777e34b521e3f94c4c5",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": null,
      "size": 10895285,
      "upload_time": "2021-12-01T14:39:41",
      "upload_time_iso_8601": "2021-12-01T14:39:41.396229Z",
      "url": "https://files.pythonhosted.org/packages/36/23/060e33f5e9de53552f98bc2fcefd57e2ecda7d68b8e8ea99ca428690b27e/pup_confluent_kafka-1.7.1-cp37-cp37m-manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ab55c852f5d115c04e3d7264ad0ab451299d6a611f9c226850b3403f03758082",
        "md5": "a6e6d4df50e5df003a282c6ae8163763",
        "sha256": "a612912e769b463949c2a481673d36d6130dfb1068169e620f883ed9e59bc135"
      },
      "downloads": -1,
      "filename": "pup_confluent_kafka-1.7.1-cp38-cp38-manylinux2010_x86_64.whl",
      "has_sig": false,
      "md5_digest": "a6e6d4df50e5df003a282c6ae8163763",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": null,
      "size": 10908450,
      "upload_time": "2021-12-01T14:39:53",
      "upload_time_iso_8601": "2021-12-01T14:39:53.724195Z",
      "url": "https://files.pythonhosted.org/packages/ab/55/c852f5d115c04e3d7264ad0ab451299d6a611f9c226850b3403f03758082/pup_confluent_kafka-1.7.1-cp38-cp38-manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "11af64546fec94dc429297fdcdf2dff43e909aee239b3d54005a50578f286b21",
        "md5": "4e3419a41800124a4c279c167c71cd7f",
        "sha256": "4041ae82b5ddfaddb1b80f0a0add3f28f15a09f7f2618d4dfcbad495c49ba6f1"
      },
      "downloads": -1,
      "filename": "pup_confluent_kafka-1.7.1-cp39-cp39-macosx_11_0_x86_64.whl",
      "has_sig": false,
      "md5_digest": "4e3419a41800124a4c279c167c71cd7f",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": null,
      "size": 125469,
      "upload_time": "2021-12-01T05:24:36",
      "upload_time_iso_8601": "2021-12-01T05:24:36.009190Z",
      "url": "https://files.pythonhosted.org/packages/11/af/64546fec94dc429297fdcdf2dff43e909aee239b3d54005a50578f286b21/pup_confluent_kafka-1.7.1-cp39-cp39-macosx_11_0_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "838ecce4b77a0b124fbe4887a49ef62a778dbb64fa71909b52834a863de77a34",
        "md5": "7519998677e53245070df11664a1a3d2",
        "sha256": "08262f922c8676058f0af02fb7811dbd0fc3e5c22cd092ce1ab5565da9d1acad"
      },
      "downloads": -1,
      "filename": "pup_confluent_kafka-1.7.1-cp39-cp39-manylinux2010_x86_64.whl",
      "has_sig": false,
      "md5_digest": "7519998677e53245070df11664a1a3d2",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": null,
      "size": 10901184,
      "upload_time": "2021-12-01T14:40:07",
      "upload_time_iso_8601": "2021-12-01T14:40:07.768941Z",
      "url": "https://files.pythonhosted.org/packages/83/8e/cce4b77a0b124fbe4887a49ef62a778dbb64fa71909b52834a863de77a34/pup_confluent_kafka-1.7.1-cp39-cp39-manylinux2010_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ad4f0663517a9be1fd5c20ef16e24df799d6b103fe34acae86c1c693bff7e7ea",
        "md5": "2fcc9515aa6115dabbea7b89acd97c86",
        "sha256": "18b11696abcdaedb08447818e29442d83207cecbbe6eb3aec82351d2bad77f32"
      },
      "downloads": -1,
      "filename": "pup-confluent-kafka-1.7.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2fcc9515aa6115dabbea7b89acd97c86",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 107949,
      "upload_time": "2021-12-01T05:24:38",
      "upload_time_iso_8601": "2021-12-01T05:24:38.195022Z",
      "url": "https://files.pythonhosted.org/packages/ad/4f/0663517a9be1fd5c20ef16e24df799d6b103fe34acae86c1c693bff7e7ea/pup-confluent-kafka-1.7.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}