{
  "info": {
    "author": "PhytoLRR",
    "author_email": "phytolrr@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# An overview to the predict-phytolrr program\n\nThe `predict-phytolrr` program could identify LRRs effectively, especially for **LRR motifs in plant LRR-RLKs**.\n\nThe program is based on the position specific scoring matrix (PSSM) algorithm and its training dataset are 4000 LRR motifs highly conserved sequences (HCSs) from LRR-RLKs of 17 land plant species. Please find detailed information at [https://www.phytolrr.com/about](https://www.phytolrr.com/about).\n\n# Citation for Phyto-LRR\nIf the corresponding features in the `predict-phytolrr` program were applied for your analysis, please cite the following paper:\n\nChen, T. Identification and characterization of the LRR repeats in plant LRR-RLKs. BMC Mol and Cell Biol 22, 9 (2021). https://doi.org/10.1186/s12860-021-00344-y\n\n# Install the program\n\n`predict-phytolrr` can be installed using `pip` **ONLY** under Python3 environment:\n\n```bash\n$ pip install predict-phytolrr\n``` \n\nA virtual environment(virtutalenv e.g.) is recommended to prevent the damage of the system-wide Python environment.\n\n# Run the program\n\nYou can run the program in two ways:\n\n* run predict-phytolrr from the command line\n* import the phytolrr_predictor module in the python source code\n\n## Predict Plant LRRs from the command line\n\nThe `predict-phytolrr` could accept sequence(s) in either directly input from the command line or in fasta file(s), predict the LRRs, and print out the results either in the command line or in html files.\n\n### Two ways to feed the sequences\n\n**First way:** The sequence can be written directly through the *command line*:\n```bash\n$ predict-phytolrr MKLPHLLPFLTLILFAFAFSMTLPLMSESHLSLLNNRTDQQ....(very long)\nPrediction result for seq Unknown_from_cmd_line:\nLRR offset 8, FLTLILFAFAFSMTLP, score 5.68619738546084\nLRR offset 81, VTYLNLTHTGLQGTLT, score 17.662632191299593\nLRR offset 105, LRVLALRNNSLQGSIP, score 36.37469484306763\nLRR offset 129, LQVLRVSQNQLEGKIP, score 35.079609050990754\nLRR offset 153, LQRLILSYNRLEGSIP, score 39.13663517011341\n... many other results followed\n```\n\n**Second way:** The sequences can also be read from fasta files. Assuming the file `test.fasta` contains one or more sequences, to predict LRRs for all the sequences in the file, use the `-f` option to specify a fasta file:\n\n```bash\n$ predict-phytolrr -f test.fasta\nThe sequence AL3G49070.t1 contains unexpected amino *, will not be predicted\nThe sequence AL3G41990.t1 contains unexpected amino *, will not be predicted\nThe sequence AL8G14250.t1 contains unexpected amino *, will not be predicted\nPrediction result for seq AL5G26370.t1:\nLRR offset 82, VTGVDLGGLKLTGVVS, score 20.609043937370146\nLRR offset 106, LRSLNLADNFFRGAIP, score 33.523950081875626\nLRR offset 130, LQYLNMSNNFLGGVIP, score 34.2935452040218\nLRR offset 154, LSTLDLSSNHLEQGVP, score 29.383744295363456\nLRR offset 178, LVILSLGRNNLTGKFP, score 34.567366699698404\n... other predicted LRRs for seq AL5G26370.t1\n\nPrediction result for seq AL5G26330.t1:\nLRR offset 74, VTRLDLGGLQLGGVIS, score 24.76974498840441\nLRR offset 98, LISLNLYDNSFGGTIP, score 34.4857875432728\nLRR offset 122, LQHLNMSYNFLGGGIP, score 31.754313744552327\nLRR offset 146, LLELDLISNHLGHCVP, score 10.059227438374975\n\n... many other results followed\n```\n\nMore than one fasta files could also be accepted by using the `-f` option for each fasta file:\n\n```bash\n$ predict-phytolrr -f test1.fasta -f test2.fasta\n\n... all prediction results for all sequences in test1.fasta and test2.fasta\n```\n\n### NOTE\n\n1. Sequences with undefined amino acids read from fasta files, for instance \"X\", \"*\", will be skipped in the prediction process.\n2. The asterisk \"*\" at the end of the fasta sequence will be removed automatically during the prediction process.\n\n### To display the results in html\n\nThe result can also be dumped to HTML files, so that they can be viewed in a browser. Using the `-p` option to specify the root path of the resulting HTML files:\n\n```bash\n$ predict-phytolrr -f test1.fasta -p ./\nWarning: The sequence AL3G49070.t1 contains unexpected amino *, will not be predicted\nWarning: The sequence AL3G41990.t1 contains unexpected amino *, will not be predicted\nWarning: The sequence AL8G14250.t1 contains unexpected amino *, will not be predicted\n214 sequences were predicted and the results have been saved in the file results.html\n\n```\n\nThe program will generate two files:\n\n* `results.js` to save the prediction results\n* `results.html` to show the prediction results\n\n### To specify a self-defined training dataset(motifs)\n\nIf you have some motifs, and you want to predict LRRs based on the PSSM matrix which is generated by the motifs,\nyou can use the option `-t`/`--train-motifs-file` to specify a path to a file which contains self-defined training-motifs.\nThe training-motifs-file should contains multiple motifs, and each motif per line with the same length. \nThe motifs length is not necessary to be 16. For example, the content of the training-motifs-file may like:\n\n```\nLEVLFLHGNQL\nVTYLNLTHTGL\nLQIFSIGGCHI\nLKLLHLHHNFV\n(More motifs follow)\n```\n\nThe length of the predicted motifs will be of the same length with the motifs of the training dataset. \n\n## Predict Phyto LRRs in source code\n\nThe `predict-phytolrr` also provides an API interface, so that it can be easily integrated into other python projects.\n\nTo use `predict-phtolrr` to predict phyto-LRRs, just import `phytolrr_predictor` and call `predict`, which is defined as:\n\n```python\ndef predict(seq, matrix=None):\n    \"\"\"Predict motifs from the `seq` str. If the `matrix` is None, using the built-in matrix to predict motifs\"\"\"\n```\n\nCode example:\n\n```commandline\n>>> import phytolrr_predictor\n>>> test_seq = 'MGILFFLFALTLTLSSLSSSVFGLTQDGEALLEMKRGLNDTKGLLSNWKDTDINPCNWTRISCHLHDQRVRVINLPFLRLGGTISPSIGKITRLHRLAIH'\n>>> ms = phytolrr_predictor.predict(test_seq)\n>>> print(len(ms))\n2\n>>> print(ms[0].offset)                             # Print the offset of the first predicted motif \n6\n>>> print(test_seq[ms[0].offset:ms[0].offset+16])   # Print the first predicted motif\nLFALTLTLSSLSSSVF\n>>> print(ms[0].score)\n10.774822491308072\n>>> print(ms[0].probability)\n0.0005707622379645206\n>>> print(ms[0].fdr_probability)\n0.04882352941176471\n```\n\nTo use self-defined matrix to predict motifs, the matrix should be generated using function `pssm_matrix.calc_pssm_matrix`:\n\n```python\ndef calc_pssm_matrix(motif_seqs_str):\n    \"\"\"Generate the PSSM matrix from baseline motifs `motif_seqs_str`\"\"\"\n```\n\nCode example:\n\n```commandline\n>>> import phytolrr_predictor\n>>> from phytolrr_predictor.tools import pssm_matrix\n>>> baseline = [\n'LEVLFLHGNQLENDPY',\n'VTYLNLTHTGLQGTLT',\n'LQIFSIGGCHIKGSIP', ....]\n>>> matrix = pssm_matrix.calc_pssm_matrix(baseline)\n>>> ms = phytolrr_predictor.predict(test_seq, matrix)\n# other operations...\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/phytolrr/predict-phytolrr",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "predict-phytolrr",
    "package_url": "https://pypi.org/project/predict-phytolrr/",
    "platform": "",
    "project_url": "https://pypi.org/project/predict-phytolrr/",
    "project_urls": {
      "Homepage": "https://github.com/phytolrr/predict-phytolrr"
    },
    "release_url": "https://pypi.org/project/predict-phytolrr/1.0.2/",
    "requires_dist": [
      "biopython (<1.78,>=1.73)",
      "numpy (>=1.16.3)"
    ],
    "requires_python": ">=3.6",
    "summary": "A tool which predict phyto-LRRs from a sequences.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9277522,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "334a1029df94136a5d78058ee88d2fd319d9593909c8af5f333bdcd9dbd1584a",
          "md5": "5f8dadd33f663690efd19a3c669cda27",
          "sha256": "967fa80b430f65b51e46c58008bdc8a3bd1c0023456511804d8021a4fd0a7623"
        },
        "downloads": -1,
        "filename": "predict_phytolrr-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f8dadd33f663690efd19a3c669cda27",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 113920,
        "upload_time": "2021-01-10T05:49:47",
        "upload_time_iso_8601": "2021-01-10T05:49:47.674891Z",
        "url": "https://files.pythonhosted.org/packages/33/4a/1029df94136a5d78058ee88d2fd319d9593909c8af5f333bdcd9dbd1584a/predict_phytolrr-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9e09b18d0dbc7cc21a04a2b675476ba9ece02e7411dac390a1493d3f37b218a",
          "md5": "70f8e4d5a8ee9dadd9e62745c7e580b1",
          "sha256": "d9676f9404b6f04e08147e0d5790b3ae03f482c9d7c23270bdacbacd4d75747b"
        },
        "downloads": -1,
        "filename": "predict-phytolrr-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "70f8e4d5a8ee9dadd9e62745c7e580b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 105078,
        "upload_time": "2021-01-10T05:49:49",
        "upload_time_iso_8601": "2021-01-10T05:49:49.313145Z",
        "url": "https://files.pythonhosted.org/packages/e9/e0/9b18d0dbc7cc21a04a2b675476ba9ece02e7411dac390a1493d3f37b218a/predict-phytolrr-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a39548893a2dfd865e1f5791f95061df07872320dbd7cebb9e40df16233681a5",
          "md5": "1798f2259553297a9c2f328f1091b1e6",
          "sha256": "9e2bc87f1502d63252736d20162952876690d850462ddebe7ee48806bbbc7faf"
        },
        "downloads": -1,
        "filename": "predict_phytolrr-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1798f2259553297a9c2f328f1091b1e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 114094,
        "upload_time": "2021-01-31T10:51:56",
        "upload_time_iso_8601": "2021-01-31T10:51:56.304742Z",
        "url": "https://files.pythonhosted.org/packages/a3/95/48893a2dfd865e1f5791f95061df07872320dbd7cebb9e40df16233681a5/predict_phytolrr-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c32ac1cbed0f614247725cc9d930fec4c20c454072cdfbd294fafc9c6dc2c4d2",
          "md5": "c2949756499d425d140819fbbedfa6f2",
          "sha256": "150bd3d78262f628ce7a2aadf40740fa8b0fc61de0bde07368f404ad8225cd40"
        },
        "downloads": -1,
        "filename": "predict-phytolrr-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c2949756499d425d140819fbbedfa6f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 105476,
        "upload_time": "2021-01-31T10:52:02",
        "upload_time_iso_8601": "2021-01-31T10:52:02.990362Z",
        "url": "https://files.pythonhosted.org/packages/c3/2a/c1cbed0f614247725cc9d930fec4c20c454072cdfbd294fafc9c6dc2c4d2/predict-phytolrr-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a39548893a2dfd865e1f5791f95061df07872320dbd7cebb9e40df16233681a5",
        "md5": "1798f2259553297a9c2f328f1091b1e6",
        "sha256": "9e2bc87f1502d63252736d20162952876690d850462ddebe7ee48806bbbc7faf"
      },
      "downloads": -1,
      "filename": "predict_phytolrr-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1798f2259553297a9c2f328f1091b1e6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 114094,
      "upload_time": "2021-01-31T10:51:56",
      "upload_time_iso_8601": "2021-01-31T10:51:56.304742Z",
      "url": "https://files.pythonhosted.org/packages/a3/95/48893a2dfd865e1f5791f95061df07872320dbd7cebb9e40df16233681a5/predict_phytolrr-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c32ac1cbed0f614247725cc9d930fec4c20c454072cdfbd294fafc9c6dc2c4d2",
        "md5": "c2949756499d425d140819fbbedfa6f2",
        "sha256": "150bd3d78262f628ce7a2aadf40740fa8b0fc61de0bde07368f404ad8225cd40"
      },
      "downloads": -1,
      "filename": "predict-phytolrr-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c2949756499d425d140819fbbedfa6f2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 105476,
      "upload_time": "2021-01-31T10:52:02",
      "upload_time_iso_8601": "2021-01-31T10:52:02.990362Z",
      "url": "https://files.pythonhosted.org/packages/c3/2a/c1cbed0f614247725cc9d930fec4c20c454072cdfbd294fafc9c6dc2c4d2/predict-phytolrr-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}