{
  "info": {
    "author": "",
    "author_email": "Imran Ariffin <ariffin.imran@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# aiotaskq\n\n[![codecov](https://codecov.io/gh/imranariffin/aiotaskq/branch/main/graph/badge.svg)](https://codecov.io/gh/imranariffin/aiotaskq)\n[![build](https://github.com/imranariffin/aiotaskq/actions/workflows/build.yaml/badge.svg)](https://github.com/imranariffin/aiotaskq/actions/workflows/build.yaml)\n[![pylint](https://github.com/imranariffin/aiotaskq/actions/workflows/pylint.yaml/badge.svg)](https://github.com/imranariffin/aiotaskq/actions/workflows/pylint.yaml)\n\nA simple asynchronous task queue\n\n## Motivation\n\nPopular asynchronous worker library like [Celery](https://github.com/celery/celery) doesn't support asyncio and is hard to use for advanced usage. `aiotaskq` aims to help users compose tasks in a very native async-await manner.\n\nPlus, it is also fully-typed for better productivity and correctness.\n\nGive it a try and let us know if you like it. For questions or feedback feel to file issues on this repository.\n\n## Example Usage\nInstall aiotaskq\n```bash\npython -m pip install --upgrade pip\npip install aiotaskq\n```\nDefine a simple app like the following:\n```bash\ntree .\n.\n└── app\n    └── app.py\n```\nWhere `app.py` contains the following:\n```python\nimport asyncio\n\nimport aiotaskq\n\n\n@aiotaskq.task\ndef some_task(b: int) -> int:\n    # Some task with high cpu usage\n    def _naive_fib(n: int) -> int:\n        if n <= 2:\n            return 1\n        return _naive_fib(n - 1) + _naive_fib(n - 2)\n    return _naive_fib(b)\n\n\nasync def main():\n    async_result = await some_task.apply_async(42)\n    sync_result = some_task(42)\n    assert async_result == sync_result\n    print(f\"sync_result == async_result == 165580141. Awesome!\")\n\n\nif __name__ == \"__main__\":\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n```\nStart redis\n```bash\ndocker run --publish 127.0.0.1:6379:6379 redis\n```\nIn a different terminal, start the aiotaskq worker\n```bash\npython -m aiotaskq worker app.app\n```\nThen in another different terminal, run your app\n```bash\npython ./app.py\n# Output: sync_result == async_result == 165580141. Awesome!\n```\n\n## Advanced usage example\nLet's say we want to compose a workflow where we want to break up some of the tasks and run them in parallel:\n```\n                    |-- task_2 --> |\n                    |-- task_2 --> |     | task_3 --> |\nSTART -> task_1 --> |-- task_2 --> | --> | task_3 --> | --> task_4 --> FINISH\n                    |-- task_2 --> |     | task_3 --> |\n                    |-- task_2 --> |\n```\n\nUsing `celery` we might end up with this\n```python\nfrom celery import Celery\n\napp = Celery()\n\n\n@app.task\ndef task_1(*args, **kwargs):\n        pass\n\n\n@app.task\ndef task_2(*args, **kwargs):\n        pass\n\n\n@app.task\ndef task_3(*args, **kwargs):\n        pass\n\n\n@app.task\ndef task_4(*args, **kwargs):\n        pass\n\n\nif __name__ == \"__main__\":\n    step_1 = task_1.si(some_arg=\"a\")\n    step_2 = [task_2.si(some_arg=f\"{i}\") for i in range(5)]\n    step_3 = [task_3.si(some_arg=f\"{i}\") for i in range(3)]\n    step_4 = task_4.si(some_arg=\"b\")\n    workflow = chord(\n        header=step_1,\n        body=chord(\n            header=step_2,\n            body=chord(\n                header=step_3,\n                body=step_4,\n            ),\n        ),\n    )\n    output = workflow.apply_async().get()\n    print(output)\n```\n\nUsing `aiotaskq` we may end up with the following:\n```python\nimport asyncio\n\nfrom aiotaskq import task\n\n\n@task\ndef task_1(*args, **kwargs):\n        pass\n\n\n@task\ndef task_2(*args, **kwargs):\n        pass\n\n\n@task\ndef task_3(*args, **kwargs):\n        pass\n\n\n@task\ndef task_4(*args, **kwargs):\n        pass\n\n\n# So far the same as celery\n\n# And now the workflow is just native python, and you're free\n# to use any `asyncio` library of your choice to help with composing\n# your workflow e.g. `trio` to handle more advanced scenarios like\n# error propagation, task cancellation etc.\nif __name__ == \"__main__\":\n    step_1 = task_1.apply_async()\n    step_2 = asyncio.gather(task_2.apply_async(arg=f\"{i}\" for i in range(5)))\n    step_3 = asyncio.gather(task_3.apply_async(arg=f\"{i}\" for i in range(3)))\n    step_4 = task_4.apply_async()\n    workflow = [step_1, step_2, step_3, step_4]\n    output = await asyncio.gather(workflow)\n    print(output)\n```\n\n## Install\n\n```bash\npip install aiotaskq\n```\n\n## Development\n\n```bash\nsource ./activate.sh\n```\n\n## Tests\n\nIn another terminal\n\n```bash\n./docker.sh\n```\n\nIn the main terminal\n\n```bash\nsource ./activate.sh\n./test.sh\n```\n\n## Links\n\n* [PYPI](https://pypi.org/project/aiotaskq/)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Copyright (c) 2018 The Python Packaging Authority Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiotaskq",
    "package_url": "https://pypi.org/project/aiotaskq/",
    "platform": null,
    "project_url": "https://pypi.org/project/aiotaskq/",
    "project_urls": {
      "Bug Tracker": "https://github.com/imranariffin/aiotaskq/issues"
    },
    "release_url": "https://pypi.org/project/aiotaskq/0.0.11/",
    "requires_dist": [
      "aioredis (<2.1.0,>=2.0.0)",
      "tomlkit (<0.12.0,>=0.11.0)",
      "typer (<0.5.0,>=0.4.0)",
      "black (<22.2.0,>=22.1.0) ; extra == 'dev'",
      "coverage (<6.5.0,>=6.4.0) ; extra == 'dev'",
      "mypy (<1.0,>=0.931) ; extra == 'dev'",
      "mypy-extensions (<0.5.0,>=0.4.0) ; extra == 'dev'",
      "pytest-asyncio (<0.20.0,>=0.19.0) ; extra == 'dev'",
      "pylint (<2.15.0,>=2.14.0) ; extra == 'dev'",
      "pytest (<7.2.0,>=7.1.0) ; extra == 'dev'",
      "typing-extensions (<4.2.0,>=4.1.1) ; extra == 'dev'"
    ],
    "requires_python": ">=3.9",
    "summary": "A simple asynchronous task queue",
    "version": "0.0.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15368811,
  "releases": {
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f4793274fcf234e9710af82a0a1198f2e081bce921a7d48d102a57d2409a236",
          "md5": "10b7aa8695b0570975704cb022ec8fda",
          "sha256": "8f8ea11003098378c1089ad5b25b56e5ce4a55905ab3f9c6aad1c6ecd38edf53"
        },
        "downloads": -1,
        "filename": "aiotaskq-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10b7aa8695b0570975704cb022ec8fda",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 21083,
        "upload_time": "2022-10-11T02:52:09",
        "upload_time_iso_8601": "2022-10-11T02:52:09.479897Z",
        "url": "https://files.pythonhosted.org/packages/4f/47/93274fcf234e9710af82a0a1198f2e081bce921a7d48d102a57d2409a236/aiotaskq-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4577bb1b9539875a459a6fd8230a760932c97b9dc1f4f52c30817cf799e46ef6",
          "md5": "9a28f5e0585810d3de566a8d9ab7c1b8",
          "sha256": "4df61e2ed6d639868566a2f6ab2f0b7372f3b75fdbfdfebc4fa3d93c44730651"
        },
        "downloads": -1,
        "filename": "aiotaskq-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "9a28f5e0585810d3de566a8d9ab7c1b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 17503,
        "upload_time": "2022-10-11T02:52:10",
        "upload_time_iso_8601": "2022-10-11T02:52:10.777628Z",
        "url": "https://files.pythonhosted.org/packages/45/77/bb1b9539875a459a6fd8230a760932c97b9dc1f4f52c30817cf799e46ef6/aiotaskq-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a5b47214b94f8a51f82a2c29d0df58f488ef723dc9c4001bd1ed8042b6c860d",
          "md5": "fae0952b092edd81c28597deadfdfb33",
          "sha256": "91ef5d3ba23fe4e222d735b4e83e0c4a8a23909861df916f45c4c8b25ef39329"
        },
        "downloads": -1,
        "filename": "aiotaskq-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fae0952b092edd81c28597deadfdfb33",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 4669,
        "upload_time": "2022-03-20T16:44:58",
        "upload_time_iso_8601": "2022-03-20T16:44:58.814846Z",
        "url": "https://files.pythonhosted.org/packages/7a/5b/47214b94f8a51f82a2c29d0df58f488ef723dc9c4001bd1ed8042b6c860d/aiotaskq-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d38f845f0fdf24ca40240817e0b3d44e46785d51b3df8da31ab7c0f91b01b8f7",
          "md5": "8cfff03e802b56e94b239d0208837c80",
          "sha256": "d59f520f45d5c3425d964446c77e96713d711de852f76d690b644987da6fba1c"
        },
        "downloads": -1,
        "filename": "aiotaskq-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8cfff03e802b56e94b239d0208837c80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 3666,
        "upload_time": "2022-03-20T16:45:00",
        "upload_time_iso_8601": "2022-03-20T16:45:00.721245Z",
        "url": "https://files.pythonhosted.org/packages/d3/8f/845f0fdf24ca40240817e0b3d44e46785d51b3df8da31ab7c0f91b01b8f7/aiotaskq-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb7bbc2b695ae2150285e4cf6a06f0dc775febaaa81a1c9cea7e0b96079ebcf7",
          "md5": "2f399c8f85c5898cd713176749c88197",
          "sha256": "5a6f51bef52ed25792b65ddfdafd42e38291b0dbe57be6ee95b982ef6eb1788b"
        },
        "downloads": -1,
        "filename": "aiotaskq-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f399c8f85c5898cd713176749c88197",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 6045,
        "upload_time": "2022-03-25T03:24:45",
        "upload_time_iso_8601": "2022-03-25T03:24:45.703180Z",
        "url": "https://files.pythonhosted.org/packages/cb/7b/bc2b695ae2150285e4cf6a06f0dc775febaaa81a1c9cea7e0b96079ebcf7/aiotaskq-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b001babb393796a205dcc5f8183b71b459096b4a6e580c7c76da6ab599f19de",
          "md5": "5af3df4852f04ac26c106b1eccc4e679",
          "sha256": "22e5450186f158e7946fb6b3ab3a1d7ee90f18f8684744fc974f8bc874f6f707"
        },
        "downloads": -1,
        "filename": "aiotaskq-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "5af3df4852f04ac26c106b1eccc4e679",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 4747,
        "upload_time": "2022-03-25T03:24:49",
        "upload_time_iso_8601": "2022-03-25T03:24:49.110006Z",
        "url": "https://files.pythonhosted.org/packages/3b/00/1babb393796a205dcc5f8183b71b459096b4a6e580c7c76da6ab599f19de/aiotaskq-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4f4793274fcf234e9710af82a0a1198f2e081bce921a7d48d102a57d2409a236",
        "md5": "10b7aa8695b0570975704cb022ec8fda",
        "sha256": "8f8ea11003098378c1089ad5b25b56e5ce4a55905ab3f9c6aad1c6ecd38edf53"
      },
      "downloads": -1,
      "filename": "aiotaskq-0.0.11-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "10b7aa8695b0570975704cb022ec8fda",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 21083,
      "upload_time": "2022-10-11T02:52:09",
      "upload_time_iso_8601": "2022-10-11T02:52:09.479897Z",
      "url": "https://files.pythonhosted.org/packages/4f/47/93274fcf234e9710af82a0a1198f2e081bce921a7d48d102a57d2409a236/aiotaskq-0.0.11-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4577bb1b9539875a459a6fd8230a760932c97b9dc1f4f52c30817cf799e46ef6",
        "md5": "9a28f5e0585810d3de566a8d9ab7c1b8",
        "sha256": "4df61e2ed6d639868566a2f6ab2f0b7372f3b75fdbfdfebc4fa3d93c44730651"
      },
      "downloads": -1,
      "filename": "aiotaskq-0.0.11.tar.gz",
      "has_sig": false,
      "md5_digest": "9a28f5e0585810d3de566a8d9ab7c1b8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 17503,
      "upload_time": "2022-10-11T02:52:10",
      "upload_time_iso_8601": "2022-10-11T02:52:10.777628Z",
      "url": "https://files.pythonhosted.org/packages/45/77/bb1b9539875a459a6fd8230a760932c97b9dc1f4f52c30817cf799e46ef6/aiotaskq-0.0.11.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}