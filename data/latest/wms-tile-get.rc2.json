{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# wms-tile-get\n\nFetch map from WMS server and store them as tiled web map with\n[Slippy Map](https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames) or Google Map convention.\nTypically the resulting tiles should be with EPSG:3857 projection.\n\nThe output structure:\n\n~~~\n.\n|- 10/\n|  |- 544/\n|  |  |- 354.png\n|  |  |- 355.png\n|  |- 545\n|     |- 354.png\n|     |- 355.png\n|- 11/\n|  |- ...\n|\n|- 12/\n|  |- ...\n|\n~~~\n\nThe tool is similar to many others like [wms-tiles-downloader](https://github.com/Luqqk/wms-tiles-downloader)\nbut it can also accept geojson polygon as area of interest.\n\n## Install\n\nOn Unix-like platforms just use `pip install`\n\n~~~\n$ pip install wms-tile-get\n~~~\n\nThe script `wms-tile-get` will be installed, otherwise `scripts/wms-tile-get` from a cloned code repository can also be run directly.\n\nOn Windows please see the [instruction](Windows.md)\n\n## Usage\n\n### Fetch tiles for an area (e.g. a city)\n\n~~~\n$ cd example/\n\n$ wms-tile-get -s by_wms.json \\\n               -g munich.boundary.geojson \\\n               -z 10 \\\n               -o by_dop80c\n~~~\n\n  * `-s` defines WMS server parameters.\n  * `-g` defines the area(s) of interest (polygon area in geojson).\n  * `-z` defines the zoom level(s) of interest.\n  * `-o` defines output folder.\n\nAn area or boundary shapes (e.g. `munich.boundary.geojson`) of named areas can be downloaded from\n[boundary.now](https://haoliangyu.github.io/boundary.now/).\n\n### Fetch tiles for a bbox area\n\n~~~\n$ wms-tile-get -s by_wms.json \\\n               -b 11.43,48.11,11.63,48.26 \\\n               -z 10 \\\n               -o by_dop80c\n~~~\n\n  * `-b` defines bounding box with longitudes and latitudes coordinates (i.e. EPSG:4326)\n\n### More example\n\nfetch tiles for zoom level 1 to 5, and 10 and 13.\nAll tiles will be fetched again when the tiles already exist in the output folder.\n\n~~~\n$ wms-tile-get -s by_wms.json \\\n               -g munich.boundary.geojson \\\n               -z 1-5 10 13  \\\n               -o by_dop80c  \\\n               --force\n~~~\n\n\n## Requirement:\n\n - Python3\n   - requests\n   - [supermercado](https://github.com/mapbox/supermercado)\n   - [mercantile](https://github.com/mapbox/mercantile)\n\n\n## Extra example\n\nWe can also only generate tile information with [x, y, z, minx, miny, maxx, maxy] tuples representing WMTS tile id and bbox.\n\n~~~\n$ cat munich.boundary.geojson       \\\n     | supermercado burn 18         \\\n     | mercantile shapes --mercator \\\n     | jq -c -r '[ [.id[1:-1]|split(\",\")|.[]|tonumber], .bbox ] | flatten | join(\" \")' \\\n     > munich.tiles.bbox.z18.txt\n~~~\n\nThe result `munich.tiles.bbox.z18.txt` looks like:\n\n~~~\n139445,90854,18,1280014.4756635614,6148135.933089867,1280167.3497201318,6148288.807146437\n139446,90854,18,1280167.3497201318,6148135.933089867,1280320.223776702,6148288.807146437\n139447,90854,18,1280320.223776702,6148135.933089867,1280473.0978332725,6148288.807146437\n139448,90854,18,1280473.0978332725,6148135.933089867,1280625.971889843,6148288.807146437\n139449,90854,18,1280625.971889843,6148135.933089867,1280778.8459464132,6148288.807146437\n...\n~~~\n\nand then we can fetch tiles with such tile information.\n\n~~~\n$ wms-tile-get -s by_wms.json \\\n               -t munich.tiles.bbox.z10.txt \\\n               -o by_dop80c\n~~~\n\n  * `-t` defines tile information input file.\n\n## WMS server definition\n\nA WMS server definition consists mainly `url` and `parameter` which is appended to url as HTTP GET method parameters.\n\nExample: `example/by_wms.json`\n\n~~~\n{\n  \"url\": \"https://geoservices.bayern.de/wms/v2/ogc_dop80_oa.cgi\",\n  \"parameter\": {\n    \"service\": \"WMS\",\n    \"request\": \"GetMap\",\n    \"layers\": \"by_dop80c\",\n    \"styles\": \"\",\n    \"format\": \"image/png\",\n    \"transparent\": true,\n    \"version\": \"1.1.1\",\n    \"width\": 256,\n    \"height\": 256,\n    \"srs\": \"EPSG:3857\",\n    \"bbox\": \"1330615.7883883484,6124746.202434601,1340399.728008851,6134530.142055106\"\n  },\n  \"concurrency\": 8\n}\n~~~\n\nAdditional options:\n\n  * `concurrency`: the maximal number of parallel requests to the WMS server",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/easz/wms-tile-get",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wms-tile-get",
    "package_url": "https://pypi.org/project/wms-tile-get/",
    "platform": "",
    "project_url": "https://pypi.org/project/wms-tile-get/",
    "project_urls": {
      "Homepage": "http://github.com/easz/wms-tile-get"
    },
    "release_url": "https://pypi.org/project/wms-tile-get/0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Fetch map from WMS server and store them as tiled web map with Slippy Map or or Google Map convention",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10337492,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "648fdeffcefcff0657604c3055d75397c55b48ad0e804906a22bc82000df7bef",
          "md5": "5b96572781e48ea2d142b65f5eab69cf",
          "sha256": "c5bcf8b91e077d552a07cc54079531e5ba7fe4f04619ad1c461909c80caf1237"
        },
        "downloads": -1,
        "filename": "wms_tile_get-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5b96572781e48ea2d142b65f5eab69cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5865,
        "upload_time": "2021-05-10T13:35:15",
        "upload_time_iso_8601": "2021-05-10T13:35:15.642861Z",
        "url": "https://files.pythonhosted.org/packages/64/8f/deffcefcff0657604c3055d75397c55b48ad0e804906a22bc82000df7bef/wms_tile_get-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e9305cb8fe0541e09bf18d087083dadbc59c16ef1fd6a54a41d3d3ce0b7b85b",
          "md5": "9a792f6ea01b0a56f509b415cda2c39d",
          "sha256": "d19740cc783b28bb46a4541cfca9497b316ada05127abbaef00a56fbfa95af4a"
        },
        "downloads": -1,
        "filename": "wms-tile-get-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9a792f6ea01b0a56f509b415cda2c39d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5907,
        "upload_time": "2021-05-10T13:35:16",
        "upload_time_iso_8601": "2021-05-10T13:35:16.828326Z",
        "url": "https://files.pythonhosted.org/packages/7e/93/05cb8fe0541e09bf18d087083dadbc59c16ef1fd6a54a41d3d3ce0b7b85b/wms-tile-get-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d27fc1aa66c0a6243966a818584f37a0066a271346a66fb8207e72bc9bfd239a",
          "md5": "de411e42a34fad244db0360b55dd61c7",
          "sha256": "8a0e56c5def9e9703c1f320980a0b35bb68fbc1d7eb359702b951fe35f15d2d8"
        },
        "downloads": -1,
        "filename": "wms-tile-get-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "de411e42a34fad244db0360b55dd61c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7184,
        "upload_time": "2021-05-12T19:48:42",
        "upload_time_iso_8601": "2021-05-12T19:48:42.320935Z",
        "url": "https://files.pythonhosted.org/packages/d2/7f/c1aa66c0a6243966a818584f37a0066a271346a66fb8207e72bc9bfd239a/wms-tile-get-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d27fc1aa66c0a6243966a818584f37a0066a271346a66fb8207e72bc9bfd239a",
        "md5": "de411e42a34fad244db0360b55dd61c7",
        "sha256": "8a0e56c5def9e9703c1f320980a0b35bb68fbc1d7eb359702b951fe35f15d2d8"
      },
      "downloads": -1,
      "filename": "wms-tile-get-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "de411e42a34fad244db0360b55dd61c7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7184,
      "upload_time": "2021-05-12T19:48:42",
      "upload_time_iso_8601": "2021-05-12T19:48:42.320935Z",
      "url": "https://files.pythonhosted.org/packages/d2/7f/c1aa66c0a6243966a818584f37a0066a271346a66fb8207e72bc9bfd239a/wms-tile-get-0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}