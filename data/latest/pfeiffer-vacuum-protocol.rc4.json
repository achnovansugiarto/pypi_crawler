{
  "info": {
    "author": "Christopher M. Pierce",
    "author_email": "contact@chris-pierce.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Pfeiffer Vacuum Protocol\r\n\r\nA python interface for controlling Pfeiffer vacuum gauges over RS485.\r\n\r\n[![Build Status](https://travis-ci.com/electronsandstuff/BeLinear.svg?branch=master)](https://travis-ci.com/electronsandstuff/BeLinear)\r\n\r\n## Installation, Testing, and Dependencies\r\nThis library is available on pip.  Please install it with the following command.\r\n```\r\npip install pfeiffer-vacuum-protocol\r\n```\r\nTesting is done with python's unit testing framework.  You can verify the current branch is working with the following command.\r\n```\r\n[cmpierce@turing dist]$ python -m unittest pfeiffer_vacuum_protocol.tests\r\n...............................\r\n----------------------------------------------------------------------\r\nRan 31 tests in 0.006s\r\n\r\nOK\r\n```\r\nThe only required dependency is your favorite serial library.  This package was developed and tested against `pySerial`.  However, it should be compatible with any library that implements python's IO interface.\r\n## Description and Hardware Compatibility\r\n\r\nThis library was created to communicate with a Pfeiffer vacuum PPT 100 over its RS485 interface.  These gauges can be purchased cheaply from ebay and this library enables simple readout of pressure from the gauges through python.\r\n\r\n![gauge](https://raw.githubusercontent.com/electronsandstuff/py-pfeiffer-vacuum-protocol/master/assets/gauge.jpg)\r\n\r\nTo correctly do this, you'll need to make a quick custom cable for the device.  Please follow the pinout in the PPT 100 manual reproduced here.  On this particular gauge, V DC is 24 V.\r\n\r\n![pinout](https://raw.githubusercontent.com/electronsandstuff/py-pfeiffer-vacuum-protocol/master/assets/pinout.png)\r\n\r\nCheap RS485 adapters exist that allow the gauge to be directly connected to a PC.  Currently, only functions relevant to the PPT 100 are implemented in the library.  The following is a table of compatibility for other models reproduced from the PPT 100 manual.  If you are interested in other gauges, then please consider contributing.\r\n\r\n![compatibility](https://raw.githubusercontent.com/electronsandstuff/py-pfeiffer-vacuum-protocol/master/assets/compatibility.PNG)\r\n\r\n## Quickstart Guide\r\nThe library is designed for and tested against the `pySerial` interface for communicating with the gauges.  However, because it can technically be used with any serial interface that implements python's IO interface, I have decided against imposing which library to use in the dependencies of this project.  To use pySerial as in this example, please installit through pip with `pip install pySerial`.\r\n\r\nThe most common operation is to read out pressure from the gauge.  The following example will read out pressure from a gauge attached to COM port 1 with address 1 on the RS485 network.  The pressure returned will be in bar.\r\n\r\n```python\r\nimport serial\r\nimport pfeiffer_vacuum_protocol as pvp\r\n\r\n# Open the serial port with a 1 second timeout\r\ns = serial.Serial(\"COM1\", timeout=1)\r\n\r\n# Read the pressure from address 1 and print it\r\np = pvp.read_pressure(s, 1)\r\nprint(\"Pressure: {:.3f} bar\".format(p))\r\n```\r\n\r\n## Invalid Character Filter\r\nSome users have reported invalid characters coming from their serial device. Sometimes this can be resolved by simply ignoring those extra characters. The library comes with a filter built in. This is kept off by default to properly display errors to the user. However, it can be enabled/disabled by running one of the following function after import.\r\n```python\r\nimport pfeiffer_vacuum_protocol as pvp\r\npvp.enable_valid_char_filter()  # Filter on\r\npvp.disable_valid_char_filter()  # Turn it off again\r\n```\r\nThe filter can also be overridden on a per-function basis. The relevant functions have an optional argument called `valid_char_filter` which can be set to `True` or `False` to enable or disable the filter in a more targeted way.\r\n\r\n## Package Reference\r\n\r\n##### read_error_code(s, addr, valid_char_filter=None)\r\n\r\nReads Pfeiffer's low level error code on the gauge.  This appears to be useful for diagnosing failure of the transmitter itself.\r\n\r\n###### Parameters\r\n\r\n* s: pySerial object\r\n      The open serial device attached to the gauge\r\n* addr: int\r\n      The address of the gauge\r\n* valid_char_filter: bool\r\n      Manually override the valid character filter\r\n\r\n###### Returns\r\n\r\n* error_code: pfeiffer_vacuum_protocol.ErrorCode enum element\r\n      The error code returned by the gauge, this can be one of `NO_ERROR`, `DEFECTIVE_TRANSMITTER`,\r\n      or `DEFECTIVE_MEMORY`\r\n\r\n##### read_software_version(s, addr, valid_char_filter=None)\r\n\r\nReturns the vacuum gauge's firmware version.\r\n\r\n###### Parameters\r\n\r\n* s: pySerial object\r\n      The open serial device attached to the gauge\r\n* addr: int\r\n      The address of the gauge\r\n* valid_char_filter: bool\r\n      Manually override the valid character filter\r\n\r\n###### Returns\r\n\r\n* firmware_version: three element tuple if ints\r\n     The version numbers as the tuple (major, minor, sub-minor)\r\n\r\n##### read_gauge_type(s, addr, valid_char_filter=None)\r\n\r\nReturns the name of the vacuum gauge attached at this address.\r\n\r\n###### Parameters\r\n\r\n* s: pySerial object\r\n      The open serial device attached to the gauge\r\n* addr: int\r\n      The address of the gauge\r\n* valid_char_filter: bool\r\n      Manually override the valid character filter\r\n\r\n###### Returns\r\n\r\n* gauge_type: str\r\n      The model name of the gauge attached\r\n\r\n##### read_pressure(s, addr, valid_char_filter=None)\r\n\r\nReads the pressure from the gauge and returns it in bars.\r\n\r\n###### Parameters\r\n\r\n* s: pySerial object\r\n      The open serial device attached to the gauge\r\n* addr: int\r\n      The address of the gauge\r\n* valid_char_filter: bool\r\n      Manually override the valid character filter\r\n\r\n###### Returns\r\n\r\n* pressure: float\r\n      Pressure measured by gauge in bars\r\n\r\n##### write_pressure_setpoint(s, addr, val, valid_char_filter=None)\r\n\r\nSets the gauge's \"vacuum setpoint\".  In the manual, this appears to tell the gauge if it's operating in a high or low pressure regime to change some of its signal processing.\r\n\r\n###### Parameters\r\n\r\n* s: pySerial object\r\n      The open serial device attached to the gauge\r\n* addr: int\r\n      The address of the gauge\r\n* valid_char_filter: bool\r\n      Manually override the valid character filter\r\n\r\n###### Returns\r\n\r\n* None\r\n\r\n##### read_correction_value(s, addr, valid_char_filter=None)\r\n\r\nReturns the current correction value used to adjust pressure measurements for different gas compositions.\r\n\r\n###### Parameters\r\n\r\n* s: pySerial object\r\n      The open serial device attached to the gauge\r\n* addr: int\r\n      The address of the gauge\r\n* valid_char_filter: bool\r\n      Manually override the valid character filter\r\n\r\n###### Returns\r\n\r\n* correction_value: float\r\n      The current correction value\r\n\r\n##### write_correction_value(s, addr, val, valid_char_filter=None)\r\n\r\nSets the correction value on the gauge.  Used to adjust the pressure measurement for different gas compositions.\r\n\r\n###### Parameters\r\n\r\n* s: pySerial object\r\n      The open serial device attached to the gauge\r\n* addr: int\r\n      The address of the gauge\r\n* valid_char_filter: bool\r\n      Manually override the valid character filter\r\n\r\n###### Returns\r\n\r\n* None\r\n\r\n##### enable_valid_char_filter()\r\n\r\nGlobally enable a filter to ignore invalid characters coming from the serial device.\r\n\r\n##### disable_valid_char_filter()\r\n\r\nGlobally disable a filter to ignore invalid characters coming from the serial device.\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "GNU Lesser General Public License v3 (LGPLv3)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pfeiffer-vacuum-protocol",
    "package_url": "https://pypi.org/project/pfeiffer-vacuum-protocol/",
    "platform": null,
    "project_url": "https://pypi.org/project/pfeiffer-vacuum-protocol/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pfeiffer-vacuum-protocol/0.5/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Python interface to Pfeiffer vacuum gauges",
    "version": "0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16541451,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c967be7a6eb72f8f9ed72e5488466743927daedaa326063bb8a1106449e47d47",
          "md5": "2f9e6c5c8224c2817dc5ed1f5ffa632b",
          "sha256": "c29f7b9cad84ab8ce0083ad48b528e5751fda0f6f20e06e2ce44253a1a72d0a7"
        },
        "downloads": -1,
        "filename": "pfeiffer_vacuum_protocol-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f9e6c5c8224c2817dc5ed1f5ffa632b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 11716,
        "upload_time": "2020-05-17T19:02:40",
        "upload_time_iso_8601": "2020-05-17T19:02:40.357716Z",
        "url": "https://files.pythonhosted.org/packages/c9/67/be7a6eb72f8f9ed72e5488466743927daedaa326063bb8a1106449e47d47/pfeiffer_vacuum_protocol-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a66368368779e35a6c0ca6b8312a07d58c6d637c170e2251a937e21482f2e600",
          "md5": "1d7dae528a1fc12a121e5ba6b21add17",
          "sha256": "3e25a6d5245debe285bd69bd1348d9d81ba217db4e40c3569096b1ce4709b5f1"
        },
        "downloads": -1,
        "filename": "pfeiffer-vacuum-protocol-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1d7dae528a1fc12a121e5ba6b21add17",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 6802,
        "upload_time": "2020-05-17T18:52:20",
        "upload_time_iso_8601": "2020-05-17T18:52:20.649980Z",
        "url": "https://files.pythonhosted.org/packages/a6/63/68368779e35a6c0ca6b8312a07d58c6d637c170e2251a937e21482f2e600/pfeiffer-vacuum-protocol-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75515f4d1f880319618bd8cfa8e0f3bf63dd56da8b101ec00b02d03aac6d189a",
          "md5": "e98d692caa056e8079878dd0c6bec72a",
          "sha256": "f87e75536a6e35264735ffc710daa49aade754f61af49f8f07d008335f4930c9"
        },
        "downloads": -1,
        "filename": "pfeiffer_vacuum_protocol-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e98d692caa056e8079878dd0c6bec72a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 13461,
        "upload_time": "2020-05-17T19:23:39",
        "upload_time_iso_8601": "2020-05-17T19:23:39.119925Z",
        "url": "https://files.pythonhosted.org/packages/75/51/5f4d1f880319618bd8cfa8e0f3bf63dd56da8b101ec00b02d03aac6d189a/pfeiffer_vacuum_protocol-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "756ab81d0e89431f432bcc4677d48b3e78e9a8d997a7506254bb107c611ed059",
          "md5": "15313af3f88546fd4450f112d386be95",
          "sha256": "20b6bffcb2a4f45d9174a4ba04e05d927c6908ba31667cc8b78e669a6b14220c"
        },
        "downloads": -1,
        "filename": "pfeiffer-vacuum-protocol-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "15313af3f88546fd4450f112d386be95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 9186,
        "upload_time": "2020-05-17T19:20:15",
        "upload_time_iso_8601": "2020-05-17T19:20:15.350613Z",
        "url": "https://files.pythonhosted.org/packages/75/6a/b81d0e89431f432bcc4677d48b3e78e9a8d997a7506254bb107c611ed059/pfeiffer-vacuum-protocol-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a98d54d719f3bcfbd28fa3be996b8dc9c9e30fcff0f2ed645041ed46ebccba12",
          "md5": "a5457084587623416e71b6607a8b303e",
          "sha256": "040ba761dc447cdba3cef95fd0b2aa25d58f4203bee35421f6905c251e109633"
        },
        "downloads": -1,
        "filename": "pfeiffer_vacuum_protocol-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a5457084587623416e71b6607a8b303e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 13505,
        "upload_time": "2020-05-17T20:25:03",
        "upload_time_iso_8601": "2020-05-17T20:25:03.300579Z",
        "url": "https://files.pythonhosted.org/packages/a9/8d/54d719f3bcfbd28fa3be996b8dc9c9e30fcff0f2ed645041ed46ebccba12/pfeiffer_vacuum_protocol-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52e0fa912f597989ac54fb2e89e1877a275e017710649f4dc1deddf572391a59",
          "md5": "20a48d9b657533b6ecb78d3346c0ab47",
          "sha256": "e78e9cfdcbbcec3425212aa5b8a1dcefdd88b36772a69bf9c6dea489e1905eb7"
        },
        "downloads": -1,
        "filename": "pfeiffer-vacuum-protocol-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "20a48d9b657533b6ecb78d3346c0ab47",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 9284,
        "upload_time": "2020-05-17T20:22:17",
        "upload_time_iso_8601": "2020-05-17T20:22:17.295164Z",
        "url": "https://files.pythonhosted.org/packages/52/e0/fa912f597989ac54fb2e89e1877a275e017710649f4dc1deddf572391a59/pfeiffer-vacuum-protocol-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d18cca99d52867cb8d609666a3042fe637ed7578005f76a01bc194cc915bb7b9",
          "md5": "0c4da9b37671a4de0caefcf72f7474ea",
          "sha256": "4bc8caf88e819b602d7f512d110002d3a0c61f5a13ab472bffdb5cbc28177a92"
        },
        "downloads": -1,
        "filename": "pfeiffer_vacuum_protocol-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c4da9b37671a4de0caefcf72f7474ea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 13899,
        "upload_time": "2023-01-24T01:53:08",
        "upload_time_iso_8601": "2023-01-24T01:53:08.661760Z",
        "url": "https://files.pythonhosted.org/packages/d1/8c/ca99d52867cb8d609666a3042fe637ed7578005f76a01bc194cc915bb7b9/pfeiffer_vacuum_protocol-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e6bc4c695c780f2a3a4a57eb50e7d759391f9677a86d0e47eccf81df81003e2",
          "md5": "20f1bbdb63de6c4f12278f2c0bbb4e1c",
          "sha256": "45b90a1e0e715b8133065557a6360c749ba0aaece4cd16124f5cf20130f01246"
        },
        "downloads": -1,
        "filename": "pfeiffer-vacuum-protocol-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "20f1bbdb63de6c4f12278f2c0bbb4e1c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 13114,
        "upload_time": "2023-01-24T01:53:10",
        "upload_time_iso_8601": "2023-01-24T01:53:10.477996Z",
        "url": "https://files.pythonhosted.org/packages/7e/6b/c4c695c780f2a3a4a57eb50e7d759391f9677a86d0e47eccf81df81003e2/pfeiffer-vacuum-protocol-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d18cca99d52867cb8d609666a3042fe637ed7578005f76a01bc194cc915bb7b9",
        "md5": "0c4da9b37671a4de0caefcf72f7474ea",
        "sha256": "4bc8caf88e819b602d7f512d110002d3a0c61f5a13ab472bffdb5cbc28177a92"
      },
      "downloads": -1,
      "filename": "pfeiffer_vacuum_protocol-0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0c4da9b37671a4de0caefcf72f7474ea",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 13899,
      "upload_time": "2023-01-24T01:53:08",
      "upload_time_iso_8601": "2023-01-24T01:53:08.661760Z",
      "url": "https://files.pythonhosted.org/packages/d1/8c/ca99d52867cb8d609666a3042fe637ed7578005f76a01bc194cc915bb7b9/pfeiffer_vacuum_protocol-0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7e6bc4c695c780f2a3a4a57eb50e7d759391f9677a86d0e47eccf81df81003e2",
        "md5": "20f1bbdb63de6c4f12278f2c0bbb4e1c",
        "sha256": "45b90a1e0e715b8133065557a6360c749ba0aaece4cd16124f5cf20130f01246"
      },
      "downloads": -1,
      "filename": "pfeiffer-vacuum-protocol-0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "20f1bbdb63de6c4f12278f2c0bbb4e1c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 13114,
      "upload_time": "2023-01-24T01:53:10",
      "upload_time_iso_8601": "2023-01-24T01:53:10.477996Z",
      "url": "https://files.pythonhosted.org/packages/7e/6b/c4c695c780f2a3a4a57eb50e7d759391f9677a86d0e47eccf81df81003e2/pfeiffer-vacuum-protocol-0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}