{
  "info": {
    "author": "Abraham Lee",
    "author_email": "tisimst@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Customer Service",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Financial and Insurance Industry",
      "Intended Audience :: Healthcare Industry",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Manufacturing",
      "Intended Audience :: Other Audience",
      "Intended Audience :: Science/Research",
      "Intended Audience :: System Administrators",
      "Intended Audience :: Telecommunications Industry",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: OS Independent",
      "Operating System :: POSIX :: Linux",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Topic :: Multimedia",
      "Topic :: Multimedia :: Graphics",
      "Topic :: Multimedia :: Graphics :: Presentation",
      "Topic :: Office/Business",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Visualization"
    ],
    "description": "===========\nparetochart\n===========\n\n`Pareto chart`_ for python (similar to `Matlab`_, but much more flexible).\n\nFeatures\n--------\n\n- **Data labels** for the chart x-axis.\n- **Fully customizable** with unique ``arg`` and ``kwarg`` inputs:\n   - *Bar chart*: follows the inputs of the `matplotlib.pyplot.bar`_ \n     function (use ``bar_args=(...)`` and ``bar_kw={...}``).\n   - *Cumulative line*: follows the inputs of the `matplotlib.pyplot.plot`_ \n     function (use ``line_args=(...)`` and ``line_kw={...}``).\n   - *Limit line*: follows the inputs of the `matplotlib.axes.Axes.axhline`_ \n     function (use ``limit_kw={...}``).\n- Put the chart on **arbitrary axes**.\n\nExamples\n--------\nFirst, a simple import::\n     \n    from paretochart import pareto\n\nNow, let's create the numeric data (no pre-sorting necessary)::\n\n    data = [21, 2, 10, 4, 16]\n     \nWe can even assign x-axis labels (in the same order as the data)::\n\n    labels = ['tom', 'betty', 'alyson', 'john', 'bob']\n\nFor this example, we'll create 4 plots that show the customization \ncapabilities::\n\n    import matplotlib.pyplot as plt\n\n    # create a grid of subplots\n    fig, axes = plt.subplots(2, 2)\n    \nThe first plot will be the simplest usage, with just the data::\n    \n    pareto(data, axes=axes[0, 0])\n    plt.title('Basic chart without labels', fontsize=10)\n    \nIn the second plot, we'll add labels, put a cumulative limit at 0.75 (or 75%) \nand turn the cumulative line green::\n\n    pareto(data, labels, axes=axes[0, 1], limit=0.75, line_args=('g',))\n    plt.title('Data with labels, green cum. line, limit=0.75', fontsize=10)\n    \nIn the third plot, we'll remove the cumulative line and limit line, make the\nbars green and resize them to a width of 0.5::\n\n    pareto(data, labels, cumplot=False, axes=axes[1, 0], data_kw={'width': 0.5,\n        'color': 'g'})\n    plt.title('Data without cum. line, green bar width=0.5', fontsize=10)\n    \nIn the fourth plot, let's put the cumulative limit at 95% and make that line\nyellow::\n\n    pareto(data, labels, limit=0.95, axes=axes[1, 1], limit_kw={'color': 'y'})\n    plt.title('Data trimmed at 95%, yellow limit line', fontsize=10)\n\nAnd last, but not least, let's show the image::\n\n    fig.canvas.set_window_title('Pareto Plot Test Figure')\n    plt.show()\n\nThis should result in the following image (`click here`_ if the image doesn't \nshow up):\n\n.. image:: https://raw.github.com/tisimst/paretochart/master/pareto_plot_test_figure.png\n   :scale: 75%\n\nInstallation\n------------\n\nSince this is really a single python file, you can simply go to the \nGitHub_ page, simply download ``paretochart.py`` and put it in \na directory that python can find it.\n\nAlternatively, the file can be installed using::\n\n    $ pip install --upgrade paretochart\n\nor::\n    \n    $ easy_install --upgrade paretochart\n\nIf you are using Python3, download the compressed file from here, unzip and run::\n\n    $ 2to3 -w *.py\n    \nwhile in the unzipped directory, *then* run::\n\n    $ python3 setup.py install\n\n**NOTE:** *Administrative privileges may be required to perform any of \nthe above install methods.*\n\nContact\n-------\n\nPlease send **feature requests, bug reports, or feedback** to `Abraham Lee`_.\n\n.. _Pareto chart: http://en.wikipedia.org/wiki/Pareto_chart\n.. _Matlab: http://www.mathworks.com/help/matlab/ref/pareto.html\n.. _matplotlib.pyplot.bar: http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.bar\n.. _matplotlib.pyplot.plot: http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.plot\n.. _matplotlib.axes.Axes.axhline: http://matplotlib.org/api/axes_api.html#matplotlib.axes.Axes.axhline\n.. _Abraham Lee: mailto:tisimst@gmail.com\n.. _GitHub: https://github.com/tisimst/paretochart\n.. _click here: https://github.com/tisimst/paretochart/master/pareto_plot_test_figure.png",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tisimst/paretochart",
    "keywords": "matplotlib,pareto,chart,plot,quality,economics,manufacturing",
    "license": "BSD License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "paretochart",
    "package_url": "https://pypi.org/project/paretochart/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/paretochart/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/tisimst/paretochart"
    },
    "release_url": "https://pypi.org/project/paretochart/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Pareto chart for python (similar to Matlab's, but much more flexible)",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 858152,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ad50e2bd5c3b8c4870e1704886ee9d74479633eff548c959767248796658a17",
          "md5": "222f3f33e38580e040c741db478004f0",
          "sha256": "124b6271282fd606f6ad85b129607ce6b4c7b5ac42211be34e773ddc71fab86f"
        },
        "downloads": -1,
        "filename": "paretochart-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "222f3f33e38580e040c741db478004f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5738,
        "upload_time": "2013-09-05T20:14:22",
        "upload_time_iso_8601": "2013-09-05T20:14:22.449332Z",
        "url": "https://files.pythonhosted.org/packages/4a/d5/0e2bd5c3b8c4870e1704886ee9d74479633eff548c959767248796658a17/paretochart-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4ad50e2bd5c3b8c4870e1704886ee9d74479633eff548c959767248796658a17",
        "md5": "222f3f33e38580e040c741db478004f0",
        "sha256": "124b6271282fd606f6ad85b129607ce6b4c7b5ac42211be34e773ddc71fab86f"
      },
      "downloads": -1,
      "filename": "paretochart-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "222f3f33e38580e040c741db478004f0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5738,
      "upload_time": "2013-09-05T20:14:22",
      "upload_time_iso_8601": "2013-09-05T20:14:22.449332Z",
      "url": "https://files.pythonhosted.org/packages/4a/d5/0e2bd5c3b8c4870e1704886ee9d74479633eff548c959767248796658a17/paretochart-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}