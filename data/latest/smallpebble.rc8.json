{
  "info": {
    "author": "Sidney Radcliffe",
    "author_email": "sidneyradcliffe@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SmallPebble\n\n[![](https://github.com/sradc/smallpebble/workflows/Python%20package/badge.svg)](https://github.com/sradc/smallpebble/commits/) \n\n**Project status: experimental, unstable.**\n\n<br><p align=\"center\"><img src=\"pebbles.jpg\" /></p><br>\n\nSmallPebble is a minimal automatic differentiation and deep learning library written from scratch in Python, using NumPy/CuPy.\n\nThe implementation is in [smallpebble.py](https://github.com/sradc/SmallPebble/blob/master/smallpebble/smallpebble.py).\n\n**Features:**\n- Relatively simple implementation.\n- Powerful API for creating models.\n- Various operations, such as matmul, conv2d, maxpool2d.\n- Broadcasting support.\n- Eager or lazy execution.\n- It's easy to add new SmallPebble functions.\n- GPU, if use CuPy.\n\nGraphs are built implicitly via Python objects referencing Python objects.\nThe only real step taken towards improving performance is to use NumPy/CuPy. \n\n**Should I use this?**\n\nYou probably want a more efficient and featureful framework, such as JAX, PyTorch, TensorFlow, etc.\n\n**Read on to see:**\n- Examples of deep learning models created and trained using SmallPebble.\n- A brief guide to using SmallPebble.\n\nFor an introduction to autodiff and an even more minimal autodiff implementation, look [here](https://sidsite.com/posts/autodiff/).\n\n---\n\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport smallpebble as sp\nfrom smallpebble.misc import load_data\nfrom tqdm import tqdm\n```\n\n## Training a neural network on MNIST\n\nLoad the dataset, and create a validation set.\n\n\n```python\nX_train, y_train, _, _ = load_data('mnist')  # load / download from openml.org\nX_train = X_train/255\n\n# Separate out data for validation.\nX = X_train[:50_000, ...]\ny = y_train[:50_000]\nX_eval = X_train[50_000:60_000, ...]\ny_eval = y_train[50_000:60_000]\n```\n\nBuild a model.\n\n\n```python\nX_in = sp.Placeholder()\ny_true = sp.Placeholder()\n\nh = sp.linearlayer(28*28, 100)(X_in)\nh = sp.Lazy(sp.leaky_relu)(h)\nh = sp.linearlayer(100, 100)(h)\nh = sp.Lazy(sp.leaky_relu)(h)\nh = sp.linearlayer(100, 10)(h)\ny_pred = sp.Lazy(sp.softmax)(h)\nloss = sp.Lazy(sp.cross_entropy)(y_pred, y_true)\n\nlearnables = sp.get_learnables(y_pred)\n\nloss_vals = []\nvalidation_acc = []\n```\n\nTrain model, and measure performance on validation dataset.\n\n\n```python\nNUM_EPOCHS = 300\nBATCH_SIZE = 200\n\neval_batch = sp.batch(X_eval, y_eval, BATCH_SIZE)\n\nfor i, (xbatch, ybatch) in tqdm(enumerate(sp.batch(X, y, BATCH_SIZE)), total=NUM_EPOCHS):\n    if i > NUM_EPOCHS: break\n\n    X_in.assign_value(sp.Variable(xbatch))\n    y_true.assign_value(ybatch)\n\n    loss_val = loss.run()  # run the graph\n    if np.isnan(loss_val.array):\n        print(\"loss is nan, aborting.\")\n        break\n    loss_vals.append(loss_val.array)\n\n    # Compute gradients, and carry out learning step.\n    gradients = sp.get_gradients(loss_val)\n    sp.sgd_step(learnables, gradients, 3e-4)\n\n    # Compute validation accuracy:\n    x_eval_batch, y_eval_batch = next(eval_batch)\n    X_in.assign_value(sp.Variable(x_eval_batch))\n    predictions = y_pred.run()\n    predictions = np.argmax(predictions.array, axis=1)\n    accuracy = (y_eval_batch == predictions).mean()\n    validation_acc.append(accuracy)\n\nplt.figure(figsize=(14, 4))\nplt.subplot(1, 2, 1)\nplt.title('Loss')\nplt.ylabel('Loss')\nplt.xlabel('Epoch')\nplt.plot(loss_vals)\nplt.subplot(1, 2, 2)\nplt.title('Validation accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epoch')\nplt.suptitle('Neural network trained on MNIST, using SmallPebble.')\nplt.ylim([0, 1])\nplt.plot(validation_acc)\nplt.show()\n```\n\n    301it [00:03, 94.26it/s]                         \n\n\n\n\n![png](https://raw.githubusercontent.com/sradc/SmallPebble/master/res/output_7_1.png)\n\n\n\n## Training a convolutional neural network on MNIST\n\nMake a function that creates trainable convolutional layers:\n\n\n```python\ndef convlayer(height, width, depth, n_kernels, strides=[1,1]):\n    # Initialise kernels:\n    sigma = np.sqrt(6 / (height*width*depth+height*width*n_kernels))\n    kernels_init = sigma*(np.random.random([height, width, depth, n_kernels]) - .5)\n    # Wrap with sp.Variable, so we can compute gradients:\n    kernels = sp.Variable(kernels_init)\n    # Flag as learnable, so we can extract from the model to train:\n    kernels = sp.learnable(kernels)\n    # Curry, to set `strides`:\n    func = lambda images, kernels: sp.conv2d(images, kernels, strides=strides, padding='SAME')\n    # Curry, to use the kernels created here:\n    return lambda images: sp.Lazy(func)(images, kernels)\n```\n\nDefine a model.\n\n\n```python\nX_in = sp.Placeholder()\ny_true = sp.Placeholder()\n\nh = convlayer(height=3, width=3, depth=1, n_kernels=16)(X_in)\nh = sp.Lazy(sp.leaky_relu)(h)\nh = sp.Lazy(lambda a: sp.maxpool2d(a, 2, 2, strides=[2, 2]))(h)\n\nh = sp.Lazy(lambda x: sp.reshape(x, [-1, 14*14*16]))(h)\nh = sp.linearlayer(14*14*16, 64)(h)\nh = sp.Lazy(sp.leaky_relu)(h)\n\nh = sp.linearlayer(64, 10)(h)\ny_pred = sp.Lazy(sp.softmax)(h)\nloss = sp.Lazy(sp.cross_entropy)(y_pred, y_true)\n\nlearnables = sp.get_learnables(y_pred)\n\nloss_vals = []\nvalidation_acc = []\n\n# Check we get the dimensions we expected.\nX_in.assign_value(sp.Variable(X_train[0:3,:].reshape([-1,28,28,1])))\ny_true.assign_value(y_train[0])\nh.run().array.shape\n```\n\n\n\n\n    (3, 10)\n\n\n\n\n```python\nNUM_EPOCHS = 300\nBATCH_SIZE = 200\n\neval_batch = sp.batch(X_eval.reshape([-1,28,28,1]), y_eval, BATCH_SIZE)\n\nfor i, (xbatch, ybatch) in tqdm(\n    enumerate(sp.batch(X.reshape([-1,28,28,1]), y, BATCH_SIZE)), total=NUM_EPOCHS):\n    if i > NUM_EPOCHS: break\n\n    X_in.assign_value(sp.Variable(xbatch))\n    y_true.assign_value(ybatch)\n\n    loss_val = loss.run()\n    if np.isnan(loss_val.array):\n        print(\"Aborting, loss is nan.\")\n        break\n    loss_vals.append(loss_val.array)\n\n    # Compute gradients, and carry out learning step.\n    gradients = sp.get_gradients(loss_val)\n    sp.sgd_step(learnables, gradients, 3e-4)\n\n    # Compute validation accuracy:\n    x_eval_batch, y_eval_batch = next(eval_batch)\n    X_in.assign_value(sp.Variable(x_eval_batch))\n    predictions = y_pred.run()\n    predictions = np.argmax(predictions.array, axis=1)\n    accuracy = (y_eval_batch == predictions).mean()\n    validation_acc.append(accuracy)\n\nplt.figure(figsize=(14, 4))\nplt.subplot(1, 2, 1)\nplt.title('Loss')\nplt.ylabel('Loss')\nplt.xlabel('Epoch')\nplt.plot(loss_vals)\nplt.subplot(1, 2, 2)\nplt.title('Validation accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epoch')\nplt.suptitle('CNN trained on MNIST, using SmallPebble.')\nplt.ylim([0, 1])\nplt.plot(validation_acc)\nplt.show()\n```\n\n    301it [03:35,  1.40it/s]                         \n\n\n\n\n![png](https://raw.githubusercontent.com/sradc/SmallPebble/master/res/output_13_1.png)\n\n\n\n## Training a CNN on CIFAR\n\nLoad the dataset.\n\n\n```python\nX_train, y_train, _, _ = load_data('cifar')\nX_train = X_train/255\n\n# Separate out some data for validation.\nX = X_train[:45_000, ...]\ny = y_train[:45_000]\nX_eval = X_train[45_000:50_000, ...]\ny_eval = y_train[45_000:50_000]\n```\n\nPlot, to check it's the right data.\n\n\n```python\n# This code is from: https://www.tensorflow.org/tutorials/images/cnn\n\nclass_names = ['airplane', 'automobile', 'bird', 'cat', 'deer',\n               'dog', 'frog', 'horse', 'ship', 'truck']\n\nplt.figure(figsize=(8,8))\nfor i in range(25):\n    plt.subplot(5,5,i+1)\n    plt.xticks([])\n    plt.yticks([])\n    plt.grid(False)\n    plt.imshow(X_train[i,:].reshape(32,32,3), cmap=plt.cm.binary)\n    plt.xlabel(class_names[y_train[i]])\n\nplt.show()\n```\n\n\n\n![png](https://raw.githubusercontent.com/sradc/SmallPebble/master/res/output_17_0.png)\n\n\n\nDefine the model. Due to my lack of ram, it is kept relatively small.\n\n\n```python\nX_in = sp.Placeholder()\ny_true = sp.Placeholder()\n\nh = convlayer(height=3, width=3, depth=3, n_kernels=16)(X_in)\nh = sp.Lazy(sp.leaky_relu)(h)\nh = sp.Lazy(lambda a: sp.maxpool2d(a, 2, 2, strides=[2, 2]))(h)\n\nh = convlayer(height=3, width=3, depth=16, n_kernels=32)(h)\nh = sp.Lazy(sp.leaky_relu)(h)\nh = sp.Lazy(lambda a: sp.maxpool2d(a, 2, 2, strides=[2, 2]))(h)\n\nh = sp.Lazy(lambda x: sp.reshape(x, [-1, 8*8*32]))(h)\nh = sp.linearlayer(8*8*32, 64)(h)\nh = sp.Lazy(sp.leaky_relu)(h)\n\nh = sp.linearlayer(64, 10)(h)\nh = sp.Lazy(sp.softmax)(h)\n\ny_pred = h\nloss = sp.Lazy(sp.cross_entropy)(y_pred, y_true)\n\nlearnables = sp.get_learnables(y_pred)\n\nloss_vals = []\nvalidation_acc = []\n\n# Check we get the expected dimensions\nX_in.assign_value(sp.Variable(X[0:3, :].reshape([-1, 32, 32, 3])))\nh.run().shape\n```\n\n\n\n\n    (3, 10)\n\n\n\nTrain the model.\n\n\n```python\nNUM_EPOCHS = 3000\nBATCH_SIZE = 32\n\neval_batch = sp.batch(X_eval, y_eval, BATCH_SIZE)\n\nfor i, (xbatch, ybatch) in tqdm(enumerate(sp.batch(X, y, BATCH_SIZE)), total=NUM_EPOCHS):\n    if i > NUM_EPOCHS: break\n\n    xbatch_images = xbatch.reshape([-1, 32, 32, 3])\n    X_in.assign_value(sp.Variable(xbatch_images))\n    y_true.assign_value(ybatch)\n\n    loss_val = loss.run()\n    if np.isnan(loss_val.array):\n        print(\"Aborting, loss is nan.\")\n        break\n    loss_vals.append(loss_val.array)\n\n    # Compute gradients, and carry out learning step.\n    gradients = sp.get_gradients(loss_val)  \n    sp.sgd_step(learnables, gradients, 3e-3)\n\n    # Compute validation accuracy:\n    x_eval_batch, y_eval_batch = next(eval_batch)\n    X_in.assign_value(sp.Variable(x_eval_batch.reshape([-1, 32, 32, 3])))\n    predictions = y_pred.run()\n    predictions = np.argmax(predictions.array, axis=1)\n    accuracy = (y_eval_batch == predictions).mean()\n    validation_acc.append(accuracy)\n\nplt.figure(figsize=(14, 4))\nplt.subplot(1, 2, 1)\nplt.title('Loss')\nplt.ylabel('Loss')\nplt.xlabel('Epoch')\nplt.plot(loss_vals)\nplt.subplot(1, 2, 2)\nplt.title('Validation accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epoch')\nplt.plot(validation_acc)\nplt.show()\n```\n\n    3001it [25:16,  1.98it/s]                            \n\n\n\n\n![png](https://raw.githubusercontent.com/sradc/SmallPebble/master/res/output_21_1.png)\n\n\n...And we see some improvement, despite the model's small size, the unsophisticated optimisation method \nand the difficulty of the task.\n\n---\n\n# Brief guide to using SmallPebble\n\nSmallPebble provides the following building blocks to make models with:\n\n- `sp.Variable`\n- SmallPebble operations, such as `sp.add`, `sp.mul`, etc.\n- `sp.get_gradients`\n- `sp.Lazy`\n- `sp.Placeholder` (this is really just `sp.Lazy` on the identity function)\n- `sp.learnable`\n- `sp.get_learnables`\n\nThe following examples show how these are used.\n\n## sp.Variable & sp.get_gradients \n\nWith SmallPebble, you can:\n\n- Wrap NumPy arrays in `sp.Variable`\n- Apply SmallPebble operations (e.g. `sp.matmul`, `sp.add`, etc.)\n- Compute gradients with `sp.get_gradients`\n\n\n```python\na = sp.Variable(np.random.random([2, 2]))\nb = sp.Variable(np.random.random([2, 2]))\nc = sp.Variable(np.random.random([2]))\ny = sp.mul(a, b) + c\nprint('y.array:\\n', y.array)\n\ngradients = sp.get_gradients(y)\ngrad_a = gradients[a]\ngrad_b = gradients[b]\ngrad_c = gradients[c]\nprint('grad_a:\\n', grad_a)\nprint('grad_b:\\n', grad_b)\nprint('grad_c:\\n', grad_c)\n```\n\n    y.array:\n     [[0.50222439 0.67745659]\n     [0.68666171 0.58330707]]\n    grad_a:\n     [[0.56436821 0.2581522 ]\n     [0.89043144 0.25750461]]\n    grad_b:\n     [[0.11665152 0.85303194]\n     [0.28106794 0.48955456]]\n    grad_c:\n     [2. 2.]\n\n\nNote that `y` is computed straight away, i.e. the (forward) computation happens immediately.\n\nAlso note that `y` is a sp.Variable and we could continue to carry out SmallPebble operations on it.\n\n## sp.Lazy & sp.Placeholder\n\nLazy graphs are constructed using `sp.Lazy` and `sp.Placeholder`. \n\n\n```python\nlazy_node = sp.Lazy(lambda a, b: a + b)(1, 2)\nprint(lazy_node)\nprint(lazy_node.run())\n```\n\n    <smallpebble.smallpebble.Lazy object at 0x7fbc92d58d50>\n    3\n\n\n\n```python\na = sp.Lazy(lambda a: a)(2)\ny = sp.Lazy(lambda a, b, c: a * b + c)(a, 3, 4)\nprint(y)\nprint(y.run())\n```\n\n    <smallpebble.smallpebble.Lazy object at 0x7fbc92d41d50>\n    10\n\n\nForward computation does not happen immediately - only when .run() is called.\n\n\n```python\na = sp.Placeholder()\nb = sp.Variable(np.random.random([2, 2]))\ny = sp.Lazy(sp.matmul)(a, b)\n\na.assign_value(sp.Variable(np.array([[1,2], [3,4]])))\n\nresult = y.run()\nprint('result.array:\\n', result.array)\n```\n\n    result.array:\n     [[1.01817665 2.54693119]\n     [2.42244218 5.69810698]]\n\n\nYou can use .run() as many times as you like. \n\nLet's change the placeholder value and re-run the graph:\n\n\n```python\na.assign_value(sp.Variable(np.array([[10,20], [30,40]])))\nresult = y.run()\nprint('result.array:\\n', result.array)\n```\n\n    result.array:\n     [[10.18176654 25.46931189]\n     [24.22442177 56.98106985]]\n\n\nFinally, let's compute gradients:\n\n\n```python\ngradients = sp.get_gradients(result)\n```\n\nNote that `sp.get_gradients` is called on `result`, \nwhich is a `sp.Variable`, \nnot on `y`, which is a `sp.Lazy` instance.\n\n## sp.learnable & sp.get_learnables\nUse `sp.learnable` to flag parameters as learnable, \nallowing them to be extracted from a lazy graph with `sp.get_learnables`.\n\nThis enables the workflow of building a model, while flagging parameters as learnable, and then extracting all the parameters in one go at the end.\n\n\n\n```python\na = sp.Placeholder()\nb = sp.learnable(sp.Variable(np.random.random([2, 1])))\ny = sp.Lazy(sp.matmul)(a, b)\ny = sp.Lazy(sp.add)(y, sp.learnable(sp.Variable(np.array([5]))))\n\nlearnables = sp.get_learnables(y)\n\nfor learnable in learnables:\n    print(learnable)\n```\n\n    <smallpebble.smallpebble.Variable object at 0x7fbc60b6ebd0>\n    <smallpebble.smallpebble.Variable object at 0x7fbc60b6ec50>\n\n\n## Switching between NumPy and CuPy\n\nTo dynamically switch between NumPy and CuPy:\n\n```python\nimport cupy\nimport numpy\nimport smallpebble as sp\n\n# Switch to CuPy.\nsp.array_library = cupy\n\n# And back to NumPy again:\nsp.array_library = numpy\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sradc/smallpebble",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "smallpebble",
    "package_url": "https://pypi.org/project/smallpebble/",
    "platform": "",
    "project_url": "https://pypi.org/project/smallpebble/",
    "project_urls": {
      "Homepage": "https://github.com/sradc/smallpebble"
    },
    "release_url": "https://pypi.org/project/smallpebble/2.2.0/",
    "requires_dist": [
      "numpy"
    ],
    "requires_python": ">=3.7",
    "summary": "Minimal automatic differentiation implementation in Python, NumPy.",
    "version": "2.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10106016,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6a94bfab9f2eaeeebb914d4e8859fb496ad09d6032601eac94a0a8e339e93b7",
          "md5": "10cad5ea97b087eac340995a0320d80d",
          "sha256": "1dfa3fe8cc7064a76b86f612e6fbc502a9f2220ebc0e7e1b1e538b0b337219f9"
        },
        "downloads": -1,
        "filename": "smallpebble-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10cad5ea97b087eac340995a0320d80d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10394,
        "upload_time": "2021-02-03T09:24:18",
        "upload_time_iso_8601": "2021-02-03T09:24:18.460321Z",
        "url": "https://files.pythonhosted.org/packages/b6/a9/4bfab9f2eaeeebb914d4e8859fb496ad09d6032601eac94a0a8e339e93b7/smallpebble-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c3d9962ee79b802d03811fcdb46ac0ad2fa778dbe2d2c83833cf4cedec7c516",
          "md5": "c3da9bc1b18efc57d0e22876827345ea",
          "sha256": "9a6bcdc781e937eb363417a1a4c061835725535bb7eda748b16a705b6256e1d4"
        },
        "downloads": -1,
        "filename": "smallpebble-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c3da9bc1b18efc57d0e22876827345ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9200,
        "upload_time": "2021-02-03T09:24:19",
        "upload_time_iso_8601": "2021-02-03T09:24:19.709975Z",
        "url": "https://files.pythonhosted.org/packages/7c/3d/9962ee79b802d03811fcdb46ac0ad2fa778dbe2d2c83833cf4cedec7c516/smallpebble-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9d2292f2951c9f1552d473bebcefa6a8be1c8b0d94faaf1ac008856e128d90d",
          "md5": "1d52586eac39fc80d1c206768a2f4989",
          "sha256": "5df2b7a0072d222135939ed1eb33387f3a8d07d215c6dd666c8c1d717593cffe"
        },
        "downloads": -1,
        "filename": "smallpebble-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d52586eac39fc80d1c206768a2f4989",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 14771,
        "upload_time": "2021-03-11T10:12:17",
        "upload_time_iso_8601": "2021-03-11T10:12:17.087280Z",
        "url": "https://files.pythonhosted.org/packages/d9/d2/292f2951c9f1552d473bebcefa6a8be1c8b0d94faaf1ac008856e128d90d/smallpebble-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29ae76c937391f5803a977bca0bf6d1218ecc26f1467b48de024753069dd3883",
          "md5": "641f5ea8a4f494b8d1666a82b1511edd",
          "sha256": "bffc05b1c23130150d2fda56ab3765489547bf4c162485b7b88501192b3a837e"
        },
        "downloads": -1,
        "filename": "smallpebble-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "641f5ea8a4f494b8d1666a82b1511edd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13471,
        "upload_time": "2021-03-11T10:12:19",
        "upload_time_iso_8601": "2021-03-11T10:12:19.491723Z",
        "url": "https://files.pythonhosted.org/packages/29/ae/76c937391f5803a977bca0bf6d1218ecc26f1467b48de024753069dd3883/smallpebble-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43608862332eb5812690e4bedd03234b68b915a110fb4c78d43cda49ae44107a",
          "md5": "9fc8f87444648b514de5683f2dc376e9",
          "sha256": "7176671685eb67b9b16fc7ac925dccc649f65c78264f4baf612735398eced42d"
        },
        "downloads": -1,
        "filename": "smallpebble-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9fc8f87444648b514de5683f2dc376e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 22964,
        "upload_time": "2021-03-28T16:40:53",
        "upload_time_iso_8601": "2021-03-28T16:40:53.623429Z",
        "url": "https://files.pythonhosted.org/packages/43/60/8862332eb5812690e4bedd03234b68b915a110fb4c78d43cda49ae44107a/smallpebble-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9ae8e232e509d67c3ccb29bb74771e3e9a6976f5bef643d86905b2e8bfe7cf8",
          "md5": "9e027b209d4ecb7ea79ccf64a3ea9766",
          "sha256": "736cba1baf4a2a724cc20975c4d6d541bc201001c32e7b91e0321a93304d653f"
        },
        "downloads": -1,
        "filename": "smallpebble-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9e027b209d4ecb7ea79ccf64a3ea9766",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 25719,
        "upload_time": "2021-03-28T16:40:55",
        "upload_time_iso_8601": "2021-03-28T16:40:55.986347Z",
        "url": "https://files.pythonhosted.org/packages/f9/ae/8e232e509d67c3ccb29bb74771e3e9a6976f5bef643d86905b2e8bfe7cf8/smallpebble-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea95e40dff53d30c94771f40106155c595af445f8d0f36a6a558a824f5bf057c",
          "md5": "fe3d47c75f2d61b9d5c1928cf9ae00b1",
          "sha256": "2992b410eafd0ea0ec5145b4768c027df70763b3c2433927becb4c90ec5558d5"
        },
        "downloads": -1,
        "filename": "smallpebble-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe3d47c75f2d61b9d5c1928cf9ae00b1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 22959,
        "upload_time": "2021-04-12T10:48:43",
        "upload_time_iso_8601": "2021-04-12T10:48:43.710214Z",
        "url": "https://files.pythonhosted.org/packages/ea/95/e40dff53d30c94771f40106155c595af445f8d0f36a6a558a824f5bf057c/smallpebble-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28c146b959d37b75c505d3fa61482e6b1a5177eb9bd78416f7f25c5554531026",
          "md5": "0c0bae53abf271d1546f016ab618ee9f",
          "sha256": "db84825d22d8d9d8d3b905a7890e769f0fd36ebf43832fc950b4e404420130d2"
        },
        "downloads": -1,
        "filename": "smallpebble-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0c0bae53abf271d1546f016ab618ee9f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26424,
        "upload_time": "2021-04-12T10:48:46",
        "upload_time_iso_8601": "2021-04-12T10:48:46.354794Z",
        "url": "https://files.pythonhosted.org/packages/28/c1/46b959d37b75c505d3fa61482e6b1a5177eb9bd78416f7f25c5554531026/smallpebble-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1ea8925b9c9dea2709486be73fae91b6d3513f3f06c7aef2bbd7b5416a00161",
          "md5": "66bb9ab6f02e13499eaa3522f34d7dfa",
          "sha256": "202bdb95e05044ac5e5686ce56f2f98fd67ea9f2fde0ca06586c0793e5ceda71"
        },
        "downloads": -1,
        "filename": "smallpebble-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "66bb9ab6f02e13499eaa3522f34d7dfa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23430,
        "upload_time": "2021-04-15T09:35:59",
        "upload_time_iso_8601": "2021-04-15T09:35:59.381617Z",
        "url": "https://files.pythonhosted.org/packages/a1/ea/8925b9c9dea2709486be73fae91b6d3513f3f06c7aef2bbd7b5416a00161/smallpebble-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3377127a93b6e78a15a8f03ae3de2e995413f672f42782ba51e3e434e94b740e",
          "md5": "338a47095a472fddd840d5977a08665f",
          "sha256": "b0f768ba5e45a682dc8b7de48247488f685ed2f3d4bb6dd37603b8ddc4b9338e"
        },
        "downloads": -1,
        "filename": "smallpebble-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "338a47095a472fddd840d5977a08665f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26798,
        "upload_time": "2021-04-15T09:36:01",
        "upload_time_iso_8601": "2021-04-15T09:36:01.093351Z",
        "url": "https://files.pythonhosted.org/packages/33/77/127a93b6e78a15a8f03ae3de2e995413f672f42782ba51e3e434e94b740e/smallpebble-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "022d0ca8e48e35b9a0f61045450c08911ffa2f737051af5e4b51354f190aa885",
          "md5": "c1cd14abe9edd71f9ad5c263d23a3b1a",
          "sha256": "256b3704d70691aa34b44d62489fa2d04d55fefa5beddd76cd10e4eae1c19bab"
        },
        "downloads": -1,
        "filename": "smallpebble-2.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c1cd14abe9edd71f9ad5c263d23a3b1a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23555,
        "upload_time": "2021-04-15T12:06:20",
        "upload_time_iso_8601": "2021-04-15T12:06:20.150133Z",
        "url": "https://files.pythonhosted.org/packages/02/2d/0ca8e48e35b9a0f61045450c08911ffa2f737051af5e4b51354f190aa885/smallpebble-2.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38fa5932d377478a9a30c353f29b7860093225c5d5dafbec4800e80815b9a38d",
          "md5": "8d888241d95fd4e10cc0cab0f0da7ac4",
          "sha256": "4970af77b113721af8f90b1f9f80abd0c10ab4a2111a239f2d529a8bcb98d1ad"
        },
        "downloads": -1,
        "filename": "smallpebble-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8d888241d95fd4e10cc0cab0f0da7ac4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26934,
        "upload_time": "2021-04-15T12:06:22",
        "upload_time_iso_8601": "2021-04-15T12:06:22.392581Z",
        "url": "https://files.pythonhosted.org/packages/38/fa/5932d377478a9a30c353f29b7860093225c5d5dafbec4800e80815b9a38d/smallpebble-2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78432af93a3ffeb206871dddc3f69356305ffbe380d4e3de8b9f0f0103e7446a",
          "md5": "161d3b8c367cc8fb97069acf08ba6fe4",
          "sha256": "56dd5bdd95628d9aa42d9892a02d68c4fc0e445d1315bc7912cedae81a2816ae"
        },
        "downloads": -1,
        "filename": "smallpebble-2.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "161d3b8c367cc8fb97069acf08ba6fe4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 31017,
        "upload_time": "2021-04-15T20:14:10",
        "upload_time_iso_8601": "2021-04-15T20:14:10.640714Z",
        "url": "https://files.pythonhosted.org/packages/78/43/2af93a3ffeb206871dddc3f69356305ffbe380d4e3de8b9f0f0103e7446a/smallpebble-2.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3eaa89a73b7dc3effeb36a794c436eb906fbe4d4535c8bbc2ac80e6fcb2b174b",
          "md5": "0a7b2f3e2da208f63b4879896b4ac8fc",
          "sha256": "7115cd780ed8f8e5005f6f974a28063f85beb7bc597675befc0cc6d8b8d08813"
        },
        "downloads": -1,
        "filename": "smallpebble-2.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0a7b2f3e2da208f63b4879896b4ac8fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 27190,
        "upload_time": "2021-04-15T20:14:12",
        "upload_time_iso_8601": "2021-04-15T20:14:12.423859Z",
        "url": "https://files.pythonhosted.org/packages/3e/aa/89a73b7dc3effeb36a794c436eb906fbe4d4535c8bbc2ac80e6fcb2b174b/smallpebble-2.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6aefaba5a0b4ee0d3016e1dfdfc3425b50d962967be126b1a898c02a8892516c",
          "md5": "ad140e2b98e87882377251b558cf96c3",
          "sha256": "a3a70d101b170ebecf2d3440de5cb412163243162e6fb12efdc10e638229896c"
        },
        "downloads": -1,
        "filename": "smallpebble-2.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad140e2b98e87882377251b558cf96c3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 31235,
        "upload_time": "2021-04-19T13:09:31",
        "upload_time_iso_8601": "2021-04-19T13:09:31.556268Z",
        "url": "https://files.pythonhosted.org/packages/6a/ef/aba5a0b4ee0d3016e1dfdfc3425b50d962967be126b1a898c02a8892516c/smallpebble-2.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8b9b86d8bfad3ba2fc70790ad6b6c406f4fd7ae45f99321d6cbe7d0263ee342",
          "md5": "9cd12f78680428091c9bb1e24926f5c7",
          "sha256": "e3820fddffdb986602f40bd28f2fed655b3fdfa33d39e2d39b6d38d96fd6b2ee"
        },
        "downloads": -1,
        "filename": "smallpebble-2.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9cd12f78680428091c9bb1e24926f5c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 27402,
        "upload_time": "2021-04-19T13:09:42",
        "upload_time_iso_8601": "2021-04-19T13:09:42.261773Z",
        "url": "https://files.pythonhosted.org/packages/f8/b9/b86d8bfad3ba2fc70790ad6b6c406f4fd7ae45f99321d6cbe7d0263ee342/smallpebble-2.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6aefaba5a0b4ee0d3016e1dfdfc3425b50d962967be126b1a898c02a8892516c",
        "md5": "ad140e2b98e87882377251b558cf96c3",
        "sha256": "a3a70d101b170ebecf2d3440de5cb412163243162e6fb12efdc10e638229896c"
      },
      "downloads": -1,
      "filename": "smallpebble-2.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ad140e2b98e87882377251b558cf96c3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 31235,
      "upload_time": "2021-04-19T13:09:31",
      "upload_time_iso_8601": "2021-04-19T13:09:31.556268Z",
      "url": "https://files.pythonhosted.org/packages/6a/ef/aba5a0b4ee0d3016e1dfdfc3425b50d962967be126b1a898c02a8892516c/smallpebble-2.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f8b9b86d8bfad3ba2fc70790ad6b6c406f4fd7ae45f99321d6cbe7d0263ee342",
        "md5": "9cd12f78680428091c9bb1e24926f5c7",
        "sha256": "e3820fddffdb986602f40bd28f2fed655b3fdfa33d39e2d39b6d38d96fd6b2ee"
      },
      "downloads": -1,
      "filename": "smallpebble-2.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9cd12f78680428091c9bb1e24926f5c7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 27402,
      "upload_time": "2021-04-19T13:09:42",
      "upload_time_iso_8601": "2021-04-19T13:09:42.261773Z",
      "url": "https://files.pythonhosted.org/packages/f8/b9/b86d8bfad3ba2fc70790ad6b6c406f4fd7ae45f99321d6cbe7d0263ee342/smallpebble-2.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}