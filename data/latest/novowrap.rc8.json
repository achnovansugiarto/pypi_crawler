{
  "info": {
    "author": "Ping Wu",
    "author_email": "wpwupingwp@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "[![Build Status](https://travis-ci.org/wpwupingwp/novowrap.svg?branch=master)](https://travis-ci.org/wpwupingwp/novowrap)\n[![PyPI version](https://badge.fury.io/py/novowrap.svg)](https://badge.fury.io/py/novowrap)\n[![Anaconda version](https://anaconda.org/wpwupingwp/novowrap/badges/version.svg)](https://anaconda.org/wpwupingwp/novowrap)\n# Quick start\nDownload [the package](https://github.com/wpwupingwp/novowrap/releases),\nunzip, and then double-click `novowrap.exe` or `novowrap`.\n\n__OR__\n\nMake sure you have [Python](https://www.python.org/) (3.7 or higher) or \n[conda](https://docs.conda.io/en/latest/miniconda.html) installed.\n\nOpen terminal, run\n   ```shell\n   # Install, using pip (recommended)\n   pip install novowrap --user\n   # Or, use conda\n   conda install -c wpwupingwp novowrap\n\n   # Initiliaze with Internet\n   # Windows\n   python -m novowrap init\n   # Linux and MacOS\n   python3 -m novowrap init\n\n   # Run\n   # Windows\n   python -m novowrap\n   # Linux and MacOS\n   python3 -m novowrap\n   ```\n\n# Table of Contents\n   * [Quick start](#quickstart)\n   * [Feature](#feature)\n   * [Prerequisite](#prerequisite)\n      * [Hardware](#hardware)\n      * [Software](#software)\n   * [Installation](#installation)\n      * [Portable](#portable)\n      * [Install with pip](#Installwithpip)\n      * [Install with conda](#Installwithconda)\n      * [Initialization](#Initialization)\n   * [Usage](#usage)\n      * [Command line](#commandline)\n      * [Graphical user interface](#graphicaluserintetface)\n   * [Input](#input)\n   * [Output](#output)\n   * [Options](#options)\n      * [Assembly](#assembly)\n      * [Validate](#validate)\n      * [Merge](#merge)\n   * [Performance](#performance)\n# Feature\n:heavy_check_mark: Assembly chloroplast genomes from given NGS data, with minimal\nparameters to set. Also, it supports batch mode.  \n\nAutomatic generate uniform structure with reference (typically, start from \n_trnH-psbA_, and, SSC/LSC region have the same direction with reference).\n\n:heavy_check_mark: Merge contigs according to overlapping region. May handle\nInvert-Repeat fragments.\n\n:heavy_check_mark: Validate assembly results by comparing the synteny and sequence\nhomology with given reference (or taxonomy name).\n# Prerequisite\n## Hardware\nThe assembly function will call NOVOPlasty, which requires 2 GB memory for 1\nGB uncompressed data.\n\nThe other functions could run in normal computers and have no extra\nrequirements for memory, CPU, et al.\n\nThe software requires Internet for the first run to install the missing\ndependencies. Then, it could work if offline, but better with the internet.\n## Software\nFor the portable version, nothing needs to be installed manually.\n\nFor installing from pip, [Python](https://www.python.org/downloads/) is\nrequired. Notice that the python version should be **3.7** or higher.\n\n:white_check_mark: All third-party dependencies will be automatically\ninstalled with the Internet, including `biopython`, `matplotlib`, `coloredlogs`,\n`graphviz` (python packages), and\n[perl(for Windows only)](http://strawberryperl.com/download/5.30.1.1/strawberry-perl-5.30.1.1-64bit-portable.zip), \n[NOVOPlasty](https://github.com/ndierckx/NOVOPlasty),\n[BLAST](https://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&PAGE_TYPE=BlastDocs&DOC_TYPE=Download).\n\n# Installation\n## Portable\nDownload from the [link](https://github.com/wpwupingwp/novowrap/releases),\nunpack and run with Internet for the first time.\n## Install with pip\n1. Install [Python](https://www.python.org/downloads/). *3.7 or newer* is\n   required.\n\n2. Open the command line, run\n```shell\npip install novowrap --user\n```\n## Install with conda\nAfter installed [conda](https://docs.conda.io/en/latest/miniconda.html), run\n```\nconda install -c wpwupingwp novowrap\n```\n## Initialization\nDuring the first running, `novowrap` will check and initialize the running environment. \nMissing dependencies will be automatically installed.\nThis step requires the Internet connection.\n```shell\n# Windows\npython -m novowrap init\n# Linux and MacOS\npython3 -m novowrap init\n```\n# Usage\n## Command line\n:exclamation: In Linux and macOS, Python2 is `python2` and Python3 is `python3`.  However,\nin Windows, Python3 is called `python`, too. Please notice the difference.\n\n * Show help information of each module\n ```shell\n # Windows\n python -m novowrap.assembly -h\n python -m novowrap.validate -h\n python -m novowrap.merge -h\n # Linux and MacOS\n python3 -m novowrap.assembly -h\n python3 -m novowrap.validate -h\n python3 -m novowrap.merge -h\n ```\n * Assembly and validate\n ```shell\n # Windows, single sample\n python -m novowrap -input [input1] [input2] -taxon [taxonomy]\n # Windows, batch mode for numerous samples\n python -m novowrap -list [list file]\n # Linux and MacOS, single sample\n python3 -m novowrap -input [input1] [input2] -taxon [taxonomy]\n # Linux and MacOS, batch mode for numerous samples\n python3 -m novowrap -list [list file]\n ```\n * Only validate\n ```shell\n # Windows\n python -m novowrap.validate -input [input file] -taxon [taxonomy]\n # Linux and MacOS\n python3 -m novowrap.validate -input [input file] -taxon [taxonomy]\n ```\n * Only merge\n ```shell\n # Windows\n python -m novowrap.merge -input [input file]\n # Linux and MacOS\n python3 -m novowrap.merge -input [input file]\n ```\n## Graphical user interface\n If installed with pip,\n```shell\n# Windows\npython -m novowrap\n# Linux and MacOS\npython3 -m novowrap\n```\n\nIf use the portable version, just double-click the `novowrap.exe` or `novowrap` in\nthe folder.\n\nThen click the button to choose which module to use. Notice that if one of the\noption was set to the wrong value, the program will refuse to run and hint the\nuser to correct the invalid option.\n# Input\nThe `assembly` module accepts `gz` or `fastq` format as input. If use `input\nlist`, the list file should be `csv` format. If use `reference` file instead\nof automatically get from NCBI, the file format should be `genbank`.\n\nThe `merge` module accepts `fasta` format as input.\n\nThe `validate` module accepts `fasta` format as input. If use `reference` file\ninstead of automatically get from NCBI, the file format should be `genbank`\n**or** `fasta` as long as it is a complete chloroplast genome.\n\n# Output\n`.gb` files: **genbank** format sequence, with annotation of the boundary of\nLSC/SSC/IR regions.\n\n`.rotate` files: rotated sequence as **fasta** format; start from `trnH-psbA`, same direction with\nreference\n\n`.pdf` files: figure of validation of assembly\n\n`_RC_` files: if filenames contain `_RC_`, it means one of the regions of the\nsequence was adjusted according to the reference. The unadjusted sequence\ncould be found in `Temp` folder.\n\n# Options\n## Assembly\n### General\nThese options are for general usage.\n\n`-h` or `-help`: print help message\n\n`-input [filenames]`: input filenames, could be single or pair-end, support gz\nand fastq format\n\n`-list [filenames]`: input list for batch mode. The list should be a csv file\nwith three columns,\n```csv\nInput 1,Input 2,Taxonomy\n```\nIf only has one input file, just leave the `Input 2` column empty.\n\nPlease use *full path* of file names, for instance, `d:\\data\\sample-1\\forward.fastq`\ninstead of `forward.fastq` or `sample-1\\forward.fastq`.\n\n`-ref [filename]`: reference file for assembly and validation, should be\n`genbank` format contains *only one* chloroplast genome sequence. Extra\nsequences will be *ignored*. For automatic running, `-taxon` is recommended\n\n`-taxon [taxonomy name]`: taxonomy name of the sample, space is allowed.  For\ninstance, `-taxon Oryza sativa`, will find reference chloroplast genome of\n`_Oryza sativa_` from NCBI RefSeq database. If not found, will find most related\nspecies' reference, `Oryza`, `Poaceae`, `Poales` et al.\n\nIf `-ref` and `-taxon` were both not set, will use `_Nicotiana tabacum_`\nto get the reference (which is one of the earliest sequenced chloroplast\ngenomes)\n\n`-out [folder name]`: output folder, if not set, the program will auto\ncreate it according to the input file's name\n\n### Advanced\nThese options are for advanced users. If not sure, just keep the default\nvalue.\n\n`-platform [illumina/ion]`: sequencing platform, the default is `illumina`. If\nuse ion-torrent, set `-platform ion`\n\n`-insert_size [number]`: the insert size of the sequencing library, should be\ninteger\n\n`-seed [names]`: gene names as seeds for assembly, separated by commas, the\ndefault seeds are `rbcL,psaB,psaC,rrn23`\n\n`-seed_file [filename]`: seed file, will overwrite `-seed` option\n\n`-split [number]`: split input file, only use `[number]` of them, useful for\nlarge data while computer memory is limited.  For instance, `-split 10000000`\nwill only use 10 million reads\n\n`-kmer [number]`: kmer size for assembly, should be an odd number. Most time\nit's unnecessary to change it\n\n`-min [number]`: minimum genome size, default is 100 kB\n\n`-max [number]`: maximum genome size, default is 200 kB. Only change `-min`\nand `-max` if the target genome size is out of the default range. The program\nneedn't know the precise size of the genome\n\n`-mem [number]`: memory limit, the unit is GB. For instance, `-mem 8` will\nlimit the memory usage to 8 GB. Should be integer\n\n`-perc_identity [number]`: the threshold of minimum percent of identity, used\nfor validation with BLAST. The default value is `0.7`. Should be a float number\nbetween 0 and 1.\n\n`-len_diff [number]`: the threshold of maximum percent of length different of\nquery and reference. Used for eliminating invalid assembly results. If the\nsequence length's difference of assembly and reference genome is larger than\nthe value, the assembly result will be discarded. The default value is `0.2`.\nShould be a float number between 0 and 1.\n\n`-debug`: print debug information if set\n\n`-mt`: for mitochondria genomes (experimental function)\n\n`-simple_validate`: for chloroplast genomes without quadripartite structure\n\n## Validate\n### General\n`-h` or `-help`: print help message\n\n`-input [filename]`: input filename. Only support `fasta` format\n\n`-ref [filename]`, reference file for assembly and validation, should be\n`genbank` or `fasta` format that contains *only one* chloroplast genome\nsequence. Extra sequences will be *ignored*.\n\n`-taxon [taxonomy name]`: taxonomy name of the reference's species, space\nis allowed. Recommend to use same genus or family, or higher rank if it's well\nknown that the target taxonomy's chloroplast genome is conserved.\n\n`-out [folder name]`: output folder, if not set, the program will automatically \ncreate it according to input file's name\n### Advanced\n`-perc_identity [number]`: the threshold of minimum percent of identity, used\nfor validation with BLAST. The default value is `0.7`. Should be a float number\nbetween 0 and 1.\n\n`-len_diff [number]`: the threshold of maximum percent of length different of\nquery and reference. Used for eliminating invalid assembly results. If the\nsequence length's difference of assembly and reference genome is larger than\nthe value, the assembly result will be discarded. The default value is `0.2`.\nShould be a float number between 0 and 1.\n\n`-debug`: print debug information if set\n\n`-mt`: for mitochondria genomes (experimental function)\n\n`-simple_validate`: for chloroplast genomes without quadripartite structure\n\n## Merge\n`-h` or `-help`: print help message\n\n`-input [filename]`: input filename. Only support `fasta` format\n\n`-out [folder name]`: output folder, if not set, the program will auto create\nit according to the input file's name\n\n# Performance\nThe most time-consuming step is assembly. If the chloroplast genome's reads in\nsequencing data is plentiful enough, and the computer's memory is big enough\nfor the data size, the assembly will be finished in minutes.\n\nThe validation step usually could finish in less than one minute. If slower,\nplease check the Internet connection since the program may query the NCBI\ndatabase.\n\nThe merge module could cost seconds or minutes. It depends on input data.\nThe complex relationship of contigs requires much more time.\n\n# Citation\nWu, P., Xu, C., Chen, H., Yang, J., Zhang, X. and Zhou, S. (2021), NOVOWrap: An automated solution for plastid genome assembly and structure standardization. Molecular Ecology Resources. https://doi.org/10.1111/1755-0998.13410\n# License\nThe software itself is licensed under\n[AGPL-3.0](https://github.com/wpwupingwp/novowrap/blob/master/LICENSE) (**not include third-party\nsoftware**).\n\n# Q&A\nPlease submit your questions in the\n[Issue](https://github.com/wpwupingwp/novowrap/issues) page :smiley:\n\n* Q: I can't see the full UI, some part was missing.\n\n  A: Please try to drag the corner of the window to enlarge it. We got reports\n  that some users in macOS have this issue.\n\n* Q: I got the error message that the program failed to install\n  perl/BLAST/NOVOPlasty.\n\n  A: Uncommonly, users in a specific area will have connection issue for those\n  websites. Users have to manually download packages and install (see\n  [Software](#software) for the download links).\n\n  For Windows users, please download and unpack files into\n  `%HOMEDRIVE%%HOMEPATH%/.novowrap`.\n\n  For Linux  and MacOS users, please download and unpack files into\n  `~/.novowrap`.\n\n* Q: I got the error message that I don't have `tkinter `module installed.\n\n  A: If you want to run GUI on Linux or macOS, this error may happen because the\n  Python you used did not include tkinter as default package (kind of weird). Run\n  ```\n  # Debian and Ubuntu\n  sudo apt install python3-tk\n  # CentOS\n  sudo yum install python3-tk\n  ```\n  may help.\n\n  For macOS users or linux users without root privilege, please try to install the \n  newest version of Python or to use conda, see [conda](https://docs.conda.io/en/latest/miniconda.html) \n  and [Python](https://www.python.org/download/mac/tcltk/) for details.\n\n* Q: It says my input is invalid, but I'm sure it's OK!\n\n  A: Please check your files' path. The `space` character in the folder name\n  or filename may cause this error.\n* Q: It says `ImportError: Bio.Alphabet has been removed from Biopython` and \n  the program failed to start.\n\n  A: In *2020.9*, Biopython removed Bio.Alphabet module in \n  [v1.78](https://biopython.org/wiki/Alphabet), which may cause this trouble \n  in the old version of novowrap. Please upgrade your `novowrap` to `v0.97` \n  or higher. If you find difficult to upgrade novowrap, please try to use the \n  portable packages.\n* Q: I want to assemble mitochondria genomes.\n\n  A: add `-mt` option or click the related checkbutton on the GUI.\n  Since mitochondria genomes do not have a stable \n  and uniform structure like chloroplast, wet-lab experiments may be necessary \n  for verification.\n* Q: I want to assemble chloroplast genomes without quadripartite structure.\n\n  A: add `-simple_validate` option in command-line or click the related checkbutton \n  on the GUI. Note that without quadripartite structure, the Validate module \n  will skip the adjustment of the structure of the sequences. We have test this function on\n  _Cytinus hypocistis_, a parasitic plant having a 19kb plastid genome.\n* Q: I am a `conda` user...\n\n  A: Install `novowrap` with `conda install -c wpwupingwp novowrap` and the usage is the same.\n  In order to avoid potential conflicts with other packages, it is highly recommended \n  to create a new running environment with `conda` before installation. For example,\n  ```\n  conda create -n test\n  conda activate test\n  conda install -c wpwupingwp novowrap\n  ```\n\n  If fail, try to download conda packages from [this link](https://github.com/wpwupingwp/novowrap/releases),\n  and run\n  ```shell\n  conda install [filename]\n\n  ```\n* Q: I want to use novowrap in parallel.\n\n  A: Ideally, each novowrap instance is independent. However, the initialization process \n  could affect other running instances. To avoid this, please running \"python3 -m novowrap init\"\n  one time before running in parallel.\n* Q: The assembly failed.\n\n  A: Make sure your sequencing data is okay. Otherwise, try to set the \"-min\" and \"-max\" options to \n  restrict the size of the target genome. Sometimes it may fail due to inappropriate size values. The \n  default size is 100-200 kb, which is okay for the common situation.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wpwupingwp/novowrap",
    "keywords": "",
    "license": "GNU AGPL v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "novowrap",
    "package_url": "https://pypi.org/project/novowrap/",
    "platform": "",
    "project_url": "https://pypi.org/project/novowrap/",
    "project_urls": {
      "Homepage": "https://github.com/wpwupingwp/novowrap"
    },
    "release_url": "https://pypi.org/project/novowrap/1.20/",
    "requires_dist": [
      "wheel (>=0.32.3)",
      "biopython (>=1.77)",
      "coloredlogs (>=10.0)",
      "matplotlib (>=3.2.0)",
      "numpy (>=1.19.1)",
      "pip (>=18.0)",
      "graphviz (>=0.13)"
    ],
    "requires_python": ">=3.7",
    "summary": "Assembly Plastid Genome",
    "version": "1.20",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11136658,
  "releases": {
    "0.95": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad03692291943f45ffb684513d1b84e8fe7549be184e1b31a16019f8bac1e231",
          "md5": "81c8883c0da9ec088d398f20aed4a581",
          "sha256": "b868ca040c78b0616b119e79500c05ccf013207df6626f97c6dd37a1acdeedb4"
        },
        "downloads": -1,
        "filename": "novowrap-0.95-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "81c8883c0da9ec088d398f20aed4a581",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 49107,
        "upload_time": "2020-04-07T07:22:30",
        "upload_time_iso_8601": "2020-04-07T07:22:30.464391Z",
        "url": "https://files.pythonhosted.org/packages/ad/03/692291943f45ffb684513d1b84e8fe7549be184e1b31a16019f8bac1e231/novowrap-0.95-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.97": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ba139a90d95d1dc89646ee7a7e3e6f92fbb3e0afa824970e321bde08bb4327a",
          "md5": "50970855ed8bd42144a250b911bc668e",
          "sha256": "d48138db9463c88c8d004847fc8badca363d149e24c879b073671c4c582819ed"
        },
        "downloads": -1,
        "filename": "novowrap-0.97-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "50970855ed8bd42144a250b911bc668e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 49467,
        "upload_time": "2020-10-17T15:41:06",
        "upload_time_iso_8601": "2020-10-17T15:41:06.263866Z",
        "url": "https://files.pythonhosted.org/packages/5b/a1/39a90d95d1dc89646ee7a7e3e6f92fbb3e0afa824970e321bde08bb4327a/novowrap-0.97-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.98": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0db0ab853f1cd84072f7a294bed9a993e57bdb317ee33cd80cf2d2e350848de6",
          "md5": "2a45e641b105cc34c929f863c099f6f7",
          "sha256": "dc9389d22c48b14de462c2beab90ba5c4f1b6709600f7d6356e621771bc9db67"
        },
        "downloads": -1,
        "filename": "novowrap-0.98-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a45e641b105cc34c929f863c099f6f7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 51086,
        "upload_time": "2020-11-17T07:13:11",
        "upload_time_iso_8601": "2020-11-17T07:13:11.786004Z",
        "url": "https://files.pythonhosted.org/packages/0d/b0/ab853f1cd84072f7a294bed9a993e57bdb317ee33cd80cf2d2e350848de6/novowrap-0.98-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1804ea30b8acb75b7efe3262a68ab6a01d6dfce0eb13f5f8ccea1115215cdce0",
          "md5": "3197075c9b28b1045c2fdd843b904c62",
          "sha256": "38abd0c7cd3a1238150ecd901d033ae8d65b5551a8050dfe1cf274253706064f"
        },
        "downloads": -1,
        "filename": "novowrap-0.98.tar.gz",
        "has_sig": false,
        "md5_digest": "3197075c9b28b1045c2fdd843b904c62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 53912,
        "upload_time": "2020-11-17T07:17:24",
        "upload_time_iso_8601": "2020-11-17T07:17:24.105586Z",
        "url": "https://files.pythonhosted.org/packages/18/04/ea30b8acb75b7efe3262a68ab6a01d6dfce0eb13f5f8ccea1115215cdce0/novowrap-0.98.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.982": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a64f08291e14cdd1bf1c1fc4914d088a26d3c696dc2255b64e8046d9b4a3743",
          "md5": "77e0c407b41523fa8367569ac7bdf2a4",
          "sha256": "a863e40dd03c8c6baace47df37d515b2d6b07128a6ed18906584a2061f85e17a"
        },
        "downloads": -1,
        "filename": "novowrap-0.982-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "77e0c407b41523fa8367569ac7bdf2a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 51535,
        "upload_time": "2020-12-09T01:57:32",
        "upload_time_iso_8601": "2020-12-09T01:57:32.690793Z",
        "url": "https://files.pythonhosted.org/packages/1a/64/f08291e14cdd1bf1c1fc4914d088a26d3c696dc2255b64e8046d9b4a3743/novowrap-0.982-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de17c212fc4b98f4246c7bcd606ce49f2785d477c55d18076dc683d8f25394b3",
          "md5": "6584ef58b4a6a0a25d4a94fc8487190a",
          "sha256": "f7885072f68d3a9068cd504f6d98f52d1ab71f051de0427e0392949b26cd8eba"
        },
        "downloads": -1,
        "filename": "novowrap-0.982.tar.gz",
        "has_sig": false,
        "md5_digest": "6584ef58b4a6a0a25d4a94fc8487190a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 54791,
        "upload_time": "2020-12-09T01:57:34",
        "upload_time_iso_8601": "2020-12-09T01:57:34.407381Z",
        "url": "https://files.pythonhosted.org/packages/de/17/c212fc4b98f4246c7bcd606ce49f2785d477c55d18076dc683d8f25394b3/novowrap-0.982.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.986": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "129e117481ef1f7b7af8997fc7967e0e13978c6f01b972bd3f45eb54cfa5d0dc",
          "md5": "50b9b24071c2bd29edede8045bebe4cc",
          "sha256": "68dd6af08f15c9d7aff622f5559614ebaddaa251a32ad26e7c90e5c98dd87275"
        },
        "downloads": -1,
        "filename": "novowrap-0.986-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "50b9b24071c2bd29edede8045bebe4cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 51586,
        "upload_time": "2021-01-22T01:42:29",
        "upload_time_iso_8601": "2021-01-22T01:42:29.735574Z",
        "url": "https://files.pythonhosted.org/packages/12/9e/117481ef1f7b7af8997fc7967e0e13978c6f01b972bd3f45eb54cfa5d0dc/novowrap-0.986-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c78209bac2b1bfc6e1c56dbc55a5e7f6f0e2f9e4a4aba5514abde8df64551d71",
          "md5": "12aead095582499ae57563237c981fc8",
          "sha256": "8cef8c709ac2ebf574fbcae1d2306f414328ac7b7f4eabfd4cfae577a9dcc87c"
        },
        "downloads": -1,
        "filename": "novowrap-0.986.tar.gz",
        "has_sig": false,
        "md5_digest": "12aead095582499ae57563237c981fc8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 54841,
        "upload_time": "2021-01-22T01:42:31",
        "upload_time_iso_8601": "2021-01-22T01:42:31.240584Z",
        "url": "https://files.pythonhosted.org/packages/c7/82/09bac2b1bfc6e1c56dbc55a5e7f6f0e2f9e4a4aba5514abde8df64551d71/novowrap-0.986.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc9c975428cfebac6fb08f87dc1d51637b8b4b87d745f745309be67030941bb9",
          "md5": "597acf2542138b6281ed40d338b413e9",
          "sha256": "e6113fce76782c9568e647a473783bbd8f73b13d57ae472ebcf210918e339e56"
        },
        "downloads": -1,
        "filename": "novowrap-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "597acf2542138b6281ed40d338b413e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 52043,
        "upload_time": "2021-04-16T09:28:33",
        "upload_time_iso_8601": "2021-04-16T09:28:33.362992Z",
        "url": "https://files.pythonhosted.org/packages/bc/9c/975428cfebac6fb08f87dc1d51637b8b4b87d745f745309be67030941bb9/novowrap-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e2d318d6ba74586962fe476185dcab76e245015e3a1ddcc76d2e8ece44614ad",
          "md5": "87cf935728b315450616fcb50ba4c1a8",
          "sha256": "4292b3f6cff84a4d0770a33253833b81a927125cca1ad9a2802d3b3bc7163a18"
        },
        "downloads": -1,
        "filename": "novowrap-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "87cf935728b315450616fcb50ba4c1a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 55716,
        "upload_time": "2021-04-16T09:28:35",
        "upload_time_iso_8601": "2021-04-16T09:28:35.130780Z",
        "url": "https://files.pythonhosted.org/packages/4e/2d/318d6ba74586962fe476185dcab76e245015e3a1ddcc76d2e8ece44614ad/novowrap-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2df63a44f72e1f2fcfac4b2bd59e8bcf6673718aa85e95844a603bd7a11e13ee",
          "md5": "27a8759be9495beb109b7b2d408d05a4",
          "sha256": "f61a1eca23054597a729710e056580e85a32d7429e8f7b4193fdc6460d5afa88"
        },
        "downloads": -1,
        "filename": "novowrap-1.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "27a8759be9495beb109b7b2d408d05a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 52063,
        "upload_time": "2021-04-20T02:31:42",
        "upload_time_iso_8601": "2021-04-20T02:31:42.063392Z",
        "url": "https://files.pythonhosted.org/packages/2d/f6/3a44f72e1f2fcfac4b2bd59e8bcf6673718aa85e95844a603bd7a11e13ee/novowrap-1.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a8b04ebd0fc805c7615428667c1841c3fe4847ef19b625e748b19f2c479b2c1",
          "md5": "9d3d146f2ba7f944384bd68203af9bda",
          "sha256": "27a4b7dbccf36b574de72540f61545fd87d1abf3d8fbc3e555aa9e865e4ca5c6"
        },
        "downloads": -1,
        "filename": "novowrap-1.12.tar.gz",
        "has_sig": false,
        "md5_digest": "9d3d146f2ba7f944384bd68203af9bda",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 55734,
        "upload_time": "2021-04-20T02:31:43",
        "upload_time_iso_8601": "2021-04-20T02:31:43.550476Z",
        "url": "https://files.pythonhosted.org/packages/7a/8b/04ebd0fc805c7615428667c1841c3fe4847ef19b625e748b19f2c479b2c1/novowrap-1.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.20": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa31868fc3e370474839bf2ad4af7d928f10692b6684e8461265a28de30144f7",
          "md5": "027366f569b40aeeef71b0c42e136138",
          "sha256": "6d0566bb55882bf560c9b4834c96c7a4e13150d581e243d29b914338c95da359"
        },
        "downloads": -1,
        "filename": "novowrap-1.20-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "027366f569b40aeeef71b0c42e136138",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 52392,
        "upload_time": "2021-08-10T04:49:53",
        "upload_time_iso_8601": "2021-08-10T04:49:53.415220Z",
        "url": "https://files.pythonhosted.org/packages/fa/31/868fc3e370474839bf2ad4af7d928f10692b6684e8461265a28de30144f7/novowrap-1.20-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fa31868fc3e370474839bf2ad4af7d928f10692b6684e8461265a28de30144f7",
        "md5": "027366f569b40aeeef71b0c42e136138",
        "sha256": "6d0566bb55882bf560c9b4834c96c7a4e13150d581e243d29b914338c95da359"
      },
      "downloads": -1,
      "filename": "novowrap-1.20-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "027366f569b40aeeef71b0c42e136138",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 52392,
      "upload_time": "2021-08-10T04:49:53",
      "upload_time_iso_8601": "2021-08-10T04:49:53.415220Z",
      "url": "https://files.pythonhosted.org/packages/fa/31/868fc3e370474839bf2ad4af7d928f10692b6684e8461265a28de30144f7/novowrap-1.20-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}