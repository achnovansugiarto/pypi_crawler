{
  "info": {
    "author": "Caoqi Fan",
    "author_email": "caoqifan@usc.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "Expected Genetic Relationship Matrix\n========\n\nExpected Genetic Relationship Matrix (EGRM) is the expected value of the Genetic Relationship Matrix (GRM) on unknown SNPs \ngiven the complete genealogical tree of a sample of individuals, derived under the coalescent theory framework.\n\nThis method is described in the following [paper](https://www.biorxiv.org/content/10.1101/2021.08.18.456747v1.abstract):\nFan, Caoqi, Nicholas Mancuso, and Charleston WK Chiang. \"A genealogical estimate of genetic relationships.\" bioRxiv (2021).\nPlease cite our paper if you use our method.\n\n\nInstallation\n------------\n\nInstall from PyPI (not available yet):\n\n    pip install egrm\n\nOr download the package and install from local:\n\n    git clone https://github.com/Ephraim-usc/egrm.git\n    \n    pip install ./egrm\n\n\nCommand Line Tools\n------------------\nThe software to compute the eGRM from tskit tree sequence output is handled by `trees2egrm`. Its usage is given by,\n\n    usage: trees2egrm [-h] [--output OUTPUT] [--c-extension] [--skip-first-tree] [--run-var] [--genetic-map GENETIC_MAP] [--left LEFT]\n                      [--right RIGHT] [--rlim RLIM] [--alim ALIM] [--verbose] [--haploid] [--output-format {gcta,numpy}]\n                      input\n\n    Construct eGRM matrix from tree sequence data\n\n    positional arguments:\n      input                 path to ts-kit tree sequence file\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --output OUTPUT, --o OUTPUT\n                            output file prefix (default: egrm)\n      --c-extension, --c    acceleration by C extension (default: False)\n      --skip-first-tree, --sft\n                            discard the first tree in the tree sequence (default: False)\n      --run-var, --var      compute varGRM in addition to eGRM (default: False)\n      --genetic-map GENETIC_MAP, --map GENETIC_MAP\n                            map file fullname (default: None)\n      --left LEFT, --l LEFT\n                            leftmost genomic position to be included (default: 0)\n      --right RIGHT, --r RIGHT\n                            rightmost genomic position to be included (default: inf)\n      --rlim RLIM           most recent time limit (default: 0)\n      --alim ALIM           most ancient time limit (default: inf)\n      --verbose             verbose logging. Includes debug info. (default: False)\n      --haploid             output eGRM over haploids. Default is diploid/genotype eGRM. (default: False)\n      --output-format {gcta,numpy}, --f {gcta,numpy}\n                            output format of eGRM (default: gcta)\n\nWhere `input` is the tree sequence file prefix (so that the full name should be \"INPUT.trees\"), and `OUTPUT` is the output file prefix.\n\nOptional parameters:\n\n    [--c_extension] or [--c]\n\nThis specifies whether to use the C exntension model to accelerate the algorithm.\nUsually this makes it ~10 times faster.\nRecommended whenever the C environment is available.\n\n    [--skip_first_tree] or [--sft]\n\nThis option skips the first tree in the tree sequence.\nThis is often useful because RELATE and some other tools always output tree sequences from 0bp, even when the genotype data starts from within the chromosome.\n\n    [--run_var] or [--var]\n\nWith this option turned on, the algorithm will output the varGRM in addition to eGRM, while roughly doubling the compuation time.\n\n    [--genetic_map] or [--map]\n\nA (comma/space/tab separated) three-column file with first column specifying the physical position in bp and the third column specifying the genetic position in cM. The second column is not used. The first line will always be ignored as the header.\n\n    [--left LEFT] [--right RIGHT]\n\nThe leftmost and rightmost positions (in bp) between which the eGRM is computed.\n\n    [--rlim RLIM] [--alim ALIM]\n\nRLIM and ALIM are the most recent and most ancient times (in generations) between which the eGRM is computed.\n\nIf output-format is set to `gcta`, the eGRM will be output into GCTA format (.grm.bin, .grm.N.bin and .grm.id files):\n\n-   OUTPUT.grm.bin, which contains the eGRM matrix;\n\n-   OUTPUT.grm.N.bin, which contains all the same number of the measure of the tree sequence (i.e., the expected number of mutations on this tree sequence);\n\n-   OUTPUT.grm.id, which contains dummy ids for the samples.\n\n-   OUTPUT_var(.grm.bin/.grm.N.bin/.grm.id), for the varGRM matrix, if the --var option is selected.\n\nIf If output-format is set to `numpy`, he output will be two (or three, if using --var option) files in numpy NPY format: \n\n-   OUTPUT.npy, which contains the eGRM matrix;\n\n-   OUTPUT_mu.npy, which contains a single number of the measure of the tree sequence (i.e., the expected number of mutations on this tree sequence);\n\n-   OUTPUT_var.npy, which contains the varGRM matrix, if the --var option is selected.\n\n\nPython Functions\n-----------------\n\n    varGRM_C(trees)\n    \n    varGRM(trees)\n\nThe C and non-C versions of the eGRM algorithm. The input is a tskit TreeSequence object.\nSee the source code for a complete explanation of its parameters.\n\n    mTMRCA_C(trees)\n    \n    mTMRCA(trees)\n\nThe C and non-C versions of the mTMRCA algorithm. The input is a tskit TreeSequence object.\nSee the source code for a complete explanation of its parameters.\n\n\nReproducing Results in the paper\n-----------------\n\nThere is an additional commandline tool\n\n    manuscript/simulate \n\nwhich is included in the package, but not installed by default. You may manually run this script.\n\nA complete explanation of its parameters and output files can be found at\n\n    manuscript/reproduce.rst\n\n\nSupport\n-------\n\nIf you are having issues, please let us know.\nEmail the author: caoqifan@usc.edu\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Ephraim-usc/egrm.git",
    "keywords": "genetics genome SNP coalescence",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "egrm",
    "package_url": "https://pypi.org/project/egrm/",
    "platform": "",
    "project_url": "https://pypi.org/project/egrm/",
    "project_urls": {
      "Homepage": "https://github.com/Ephraim-usc/egrm.git"
    },
    "release_url": "https://pypi.org/project/egrm/0.1/",
    "requires_dist": [
      "numpy (>=1.14.5)",
      "pandas (>=1.2.0)",
      "tskit",
      "tqdm"
    ],
    "requires_python": ">=3",
    "summary": "Expected Genetic Relationship Matrix",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11398303,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18004caaada6690a12411016a1a7206f1a2ded34b397697448f6b0172e3458b9",
          "md5": "f5daef49175ac73b04994a3e638abfa4",
          "sha256": "b749623edbafaf7865ec61c70332cdfd855fa9972c3e806aa381fb225bf6295d"
        },
        "downloads": -1,
        "filename": "egrm-0.1-cp39-cp39-macosx_10_14_x86_64.whl",
        "has_sig": false,
        "md5_digest": "f5daef49175ac73b04994a3e638abfa4",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3",
        "size": 13739,
        "upload_time": "2021-09-08T18:49:20",
        "upload_time_iso_8601": "2021-09-08T18:49:20.783181Z",
        "url": "https://files.pythonhosted.org/packages/18/00/4caaada6690a12411016a1a7206f1a2ded34b397697448f6b0172e3458b9/egrm-0.1-cp39-cp39-macosx_10_14_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbb303aeebb64a09e26033bd90ca758f0bd88bbf90298d5d63296013cbda337c",
          "md5": "ca36c4f26fff60a7cb968939dd4dba80",
          "sha256": "33660779f63c9911138bac41b83a9593e15098f21698d40d585d50810f0509a5"
        },
        "downloads": -1,
        "filename": "egrm-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ca36c4f26fff60a7cb968939dd4dba80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 11755,
        "upload_time": "2021-09-08T18:49:22",
        "upload_time_iso_8601": "2021-09-08T18:49:22.149826Z",
        "url": "https://files.pythonhosted.org/packages/fb/b3/03aeebb64a09e26033bd90ca758f0bd88bbf90298d5d63296013cbda337c/egrm-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18004caaada6690a12411016a1a7206f1a2ded34b397697448f6b0172e3458b9",
        "md5": "f5daef49175ac73b04994a3e638abfa4",
        "sha256": "b749623edbafaf7865ec61c70332cdfd855fa9972c3e806aa381fb225bf6295d"
      },
      "downloads": -1,
      "filename": "egrm-0.1-cp39-cp39-macosx_10_14_x86_64.whl",
      "has_sig": false,
      "md5_digest": "f5daef49175ac73b04994a3e638abfa4",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3",
      "size": 13739,
      "upload_time": "2021-09-08T18:49:20",
      "upload_time_iso_8601": "2021-09-08T18:49:20.783181Z",
      "url": "https://files.pythonhosted.org/packages/18/00/4caaada6690a12411016a1a7206f1a2ded34b397697448f6b0172e3458b9/egrm-0.1-cp39-cp39-macosx_10_14_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fbb303aeebb64a09e26033bd90ca758f0bd88bbf90298d5d63296013cbda337c",
        "md5": "ca36c4f26fff60a7cb968939dd4dba80",
        "sha256": "33660779f63c9911138bac41b83a9593e15098f21698d40d585d50810f0509a5"
      },
      "downloads": -1,
      "filename": "egrm-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ca36c4f26fff60a7cb968939dd4dba80",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 11755,
      "upload_time": "2021-09-08T18:49:22",
      "upload_time_iso_8601": "2021-09-08T18:49:22.149826Z",
      "url": "https://files.pythonhosted.org/packages/fb/b3/03aeebb64a09e26033bd90ca758f0bd88bbf90298d5d63296013cbda337c/egrm-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}