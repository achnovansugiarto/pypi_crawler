{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development"
    ],
    "description": "# Welcome to Autopycoin\n---\n\n![ci_autopycoin](https://github.com/AutocoinLab/autopycoin/actions/workflows/ci_autopycoin.yml/badge.svg)\n[![CircleCI](https://circleci.com/gh/AutocoinLab/autopycoin/tree/main.svg?style=svg)](https://circleci.com/gh/AutocoinLab/autopycoin/tree/main)\n[![codecov](https://codecov.io/gh/AutocoinLab/autopycoin/branch/main/graph/badge.svg?token=5ZE3XddqtL)](https://codecov.io/gh/AutocoinLab/autopycoin)\n[![Documentation Status](https://readthedocs.org/projects/autopycoin/badge/?version=latest)](https://autopycoin.readthedocs.io/en/latest/?badge=latest)\n\n\nThis is a deep learning package based on tensorflow.\nThe models are unofficial implementations.\n\n# Available Models\n---\n\n```python\nfrom autopycoin.models import create_interpretable_nbeats, create_interpretable_nbeats, NBEATS, PoolNBEATS\n```\n\n| Model         | epistemic error | Aleotoric error | Paper |\n|--------------|-----------|------------|------------|\n| NBEATS |  Dropout or bagging   | Quantiles |  [Paper](https://arxiv.org/abs/1905.10437)|\n\n\n# Available Losses\n---\n\n```python\nfrom autopycoin.losses import QuantileLossError, SymetricMeanAbsolutePercentageError\n```\n\n| Losses         |\n|--------------|\n| QuantileLosseError |\n| SymetricMeanAbsolutePercentageError |\n\n# Dataset maker\n---\n\n```python\nfrom autopycoin.dataset import WindowGenerator\n```\n\n| Dataset maker|\n|--------------|\n| WindowGenerator|\n\n# How to use autopycoin\n---\n\n```\npip install autopycoin\n```\n\n# How to use Autopycoin\n\nThis notebook is a quick start for autopycoin. We will demonstrate its efficiency through a toy example.\n\n## Import\n\nAs our package is based on tensorflow we need to import it.\n\n\n```python\nimport tensorflow as tf\n```\n\nLet's create our data thanks to `random_ts` which generate a fake time serie based on a trend and seasonality components.\n\n\n```python\nfrom autopycoin.data import random_ts\n\ntf.random.set_seed(0)\n\ndata = random_ts(n_steps=400, # Number of steps (second dimension)\n                 trend_degree=2,\n                 periods=[10], # We can combine multiple periods, period is the time length for a cyclical function to reproduce a similar output\n                 fourier_orders=[10], # higher is this number, more complex is the output\n                 trend_mean=0,\n                 trend_std=1,\n                 seasonality_mean=0,\n                 seasonality_std=1, \n                 batch_size=1, # Generate a batch of data (first dimension)\n                 n_variables=1, # Number of variables (last dimension)\n                 noise=True, # add normal centered noise\n                 seed=42)\n\ndenoised_data = random_ts(n_steps=400, # Number of steps (second dimension)\n                 trend_degree=2,\n                 periods=[10], # We can combine multiple periods, period is the time length for a cyclical function to reproduce a similar output\n                 fourier_orders=[10], # higher is this number, more complex is the output\n                 trend_mean=0,\n                 trend_std=1,\n                 seasonality_mean=0,\n                 seasonality_std=1, \n                 batch_size=1, # Generate a batch of data (first dimension)\n                 n_variables=1, # Number of variables (last dimension)\n                 noise=False, # add normal centered noise\n                 seed=42)\n\n# Let's render it with matplotlib\nimport matplotlib.pyplot as plt\n\nplt.rcParams['figure.figsize'] = (20, 10)\nplt.plot(data[0], c='r', label='noised data')\nplt.plot(denoised_data[0], label='denoised data')\nplt.title('Generated data')\nplt.legend()\n```\n\n\n\n\n    <matplotlib.legend.Legend at 0x25a4597b040>\n\n\n\n\n    \n![png](examples/output_6_1.png)\n    \n\n\n# Tensorflow library\n\nTensorflow use `dataset` to feed its models. Hence, we create an object `WindowGenerator` to facilitate the creation of training, validation and training set.\n\n\n```python\nfrom autopycoin.dataset import WindowGenerator\n```\n\nWe first create an instance of `Windowgenerator` by defining important parameters value.\nBy defining an `input_width` of 70, we set our input length.\n - `label_width` set our label length.\n - `shift` represents the shift between label and input data. Hence if you don't want label and input overlapping `shift` has to be equal to   `label_width`. It can help for more complex model like lstm models which can be trained to reconstruct their inputs.\n - `test_size` and `valid_size` are the numbers of examples to predict. If they are integer, they are the true number of examples, if they are float then it's a proportion of the entire data.\n\nNote: We create lot of examples by shifting by one the window of prediction.\n\n\n```python\nw = WindowGenerator(\n        input_width=80,\n        label_width=40,\n        shift=40,\n        test_size=50,\n        valid_size=10,\n        flat=True,\n        batch_size=16,\n        preprocessing = lambda x,y: (x, (x,y)) # NBEATS output\n    )\n\n```\n\nWe can't use it now as it needs to be initialized by an array, tensor or a dataframe\n\n\n```python\nw = w.from_array(data=data[0], # Has to be 2D array\n        input_columns=[0],\n        known_columns=[],\n        label_columns=[0],\n        date_columns=[],)\n\n# Or using dataframe\nimport pandas as pd\n\ndata = pd.DataFrame(data.numpy()[0], columns=['test'])\n\nw = w.from_array(data=data, # Has to be 2D array\n        input_columns=['test'],\n        known_columns=[],\n        label_columns=['test'],\n        date_columns=[],)\n\n```\n\n\n```python\nw.train\n```\n\n\n\n\n    <BatchDataset element_spec=(TensorSpec(shape=(None, 80), dtype=tf.float32, name=None), (TensorSpec(shape=(None, 80), dtype=tf.float32, name=None), TensorSpec(shape=(None, 40), dtype=tf.float32, name=None)))>\n\n\n\n\n```python\nw.valid\n```\n\n\n\n\n    <BatchDataset element_spec=(TensorSpec(shape=(None, 80), dtype=tf.float32, name=None), (TensorSpec(shape=(None, 80), dtype=tf.float32, name=None), TensorSpec(shape=(None, 40), dtype=tf.float32, name=None)))>\n\n\n\n\n```python\nw.test\n```\n\n\n\n\n    <BatchDataset element_spec=(TensorSpec(shape=(None, 80), dtype=tf.float32, name=None), (TensorSpec(shape=(None, 80), dtype=tf.float32, name=None), TensorSpec(shape=(None, 40), dtype=tf.float32, name=None)))>\n\n\n\n# It's time for inference\n\nWe import the nbeats module where the nbdeats model is defined.\n\nThere are currently multiple version of nbeats implemented as `create_interpretable_nbeats` or `create_generic_nbeats`.\nBut it is possible to customize it's own nbeats model by subclassing the nbeats Model and Layer.\n\n\n```python\nfrom autopycoin.models import nbeats\n\nmodel1 = nbeats.create_interpretable_nbeats(\n            label_width=40,\n            forecast_periods=[10],\n            backcast_periods=[10],\n            forecast_fourier_order=[10],\n            backcast_fourier_order=[10],\n            p_degree=1,\n            trend_n_neurons=200,\n            seasonality_n_neurons=200,\n            drop_rate=0.,\n            share=True)\n\nmodel1.compile(tf.keras.optimizers.Adam(\n    learning_rate=0.0015, beta_1=0.9, beta_2=0.999, epsilon=1e-07, amsgrad=True,\n    name='Adam'), \n    loss='mse', \n    loss_weights=[1, 1], # In the paper = [0, 1]\n    metrics=[\"mae\"])\n\nmodel1.fit(w.train, validation_data=w.valid, epochs=20)\n```\n\n    Epoch 1/20\n    9/9 [==============================] - 10s 264ms/step - loss: 107.7595 - output_1_loss: 48.8508 - output_2_loss: 58.9087 - output_1_mae: 4.6331 - output_2_mae: 5.6065 - val_loss: 28.2610 - val_output_1_loss: 6.3400 - val_output_2_loss: 21.9210 - val_output_1_mae: 2.0182 - val_output_2_mae: 3.4445\n    Epoch 2/20\n    9/9 [==============================] - 0s 28ms/step - loss: 17.0173 - output_1_loss: 5.0084 - output_2_loss: 12.0089 - output_1_mae: 1.7634 - output_2_mae: 2.6280 - val_loss: 9.0327 - val_output_1_loss: 3.2561 - val_output_2_loss: 5.7766 - val_output_1_mae: 1.4348 - val_output_2_mae: 1.9232\n    Epoch 3/20\n    9/9 [==============================] - 0s 31ms/step - loss: 7.7175 - output_1_loss: 2.6491 - output_2_loss: 5.0685 - output_1_mae: 1.2985 - output_2_mae: 1.7502 - val_loss: 4.7811 - val_output_1_loss: 1.9094 - val_output_2_loss: 2.8717 - val_output_1_mae: 1.1005 - val_output_2_mae: 1.3431\n    Epoch 4/20\n    9/9 [==============================] - 0s 31ms/step - loss: 4.4976 - output_1_loss: 1.9064 - output_2_loss: 2.5912 - output_1_mae: 1.1020 - output_2_mae: 1.2652 - val_loss: 4.1069 - val_output_1_loss: 1.5517 - val_output_2_loss: 2.5552 - val_output_1_mae: 0.9765 - val_output_2_mae: 1.3012\n    Epoch 5/20\n    9/9 [==============================] - 0s 30ms/step - loss: 3.3197 - output_1_loss: 1.4996 - output_2_loss: 1.8201 - output_1_mae: 0.9801 - output_2_mae: 1.0888 - val_loss: 3.4868 - val_output_1_loss: 1.3489 - val_output_2_loss: 2.1379 - val_output_1_mae: 0.9232 - val_output_2_mae: 1.1573\n    Epoch 6/20\n    9/9 [==============================] - 0s 31ms/step - loss: 2.8041 - output_1_loss: 1.3137 - output_2_loss: 1.4904 - output_1_mae: 0.9224 - output_2_mae: 0.9713 - val_loss: 3.0279 - val_output_1_loss: 1.1370 - val_output_2_loss: 1.8908 - val_output_1_mae: 0.8540 - val_output_2_mae: 1.0975\n    Epoch 7/20\n    9/9 [==============================] - 0s 31ms/step - loss: 2.5440 - output_1_loss: 1.2236 - output_2_loss: 1.3204 - output_1_mae: 0.8918 - output_2_mae: 0.9265 - val_loss: 2.9015 - val_output_1_loss: 1.0745 - val_output_2_loss: 1.8270 - val_output_1_mae: 0.8283 - val_output_2_mae: 1.0760\n    Epoch 8/20\n    9/9 [==============================] - 0s 30ms/step - loss: 2.4074 - output_1_loss: 1.1735 - output_2_loss: 1.2339 - output_1_mae: 0.8744 - output_2_mae: 0.8928 - val_loss: 2.8078 - val_output_1_loss: 1.0035 - val_output_2_loss: 1.8042 - val_output_1_mae: 0.8019 - val_output_2_mae: 1.0765\n    Epoch 9/20\n    9/9 [==============================] - 0s 33ms/step - loss: 2.2903 - output_1_loss: 1.1395 - output_2_loss: 1.1508 - output_1_mae: 0.8615 - output_2_mae: 0.8617 - val_loss: 2.7515 - val_output_1_loss: 0.9931 - val_output_2_loss: 1.7584 - val_output_1_mae: 0.7983 - val_output_2_mae: 1.0654\n    Epoch 10/20\n    9/9 [==============================] - 0s 42ms/step - loss: 2.2125 - output_1_loss: 1.1157 - output_2_loss: 1.0968 - output_1_mae: 0.8529 - output_2_mae: 0.8449 - val_loss: 2.7506 - val_output_1_loss: 0.9789 - val_output_2_loss: 1.7718 - val_output_1_mae: 0.7917 - val_output_2_mae: 1.0708\n    Epoch 11/20\n    9/9 [==============================] - 0s 34ms/step - loss: 2.1483 - output_1_loss: 1.0973 - output_2_loss: 1.0510 - output_1_mae: 0.8459 - output_2_mae: 0.8261 - val_loss: 2.6904 - val_output_1_loss: 0.9565 - val_output_2_loss: 1.7339 - val_output_1_mae: 0.7839 - val_output_2_mae: 1.0580\n    Epoch 12/20\n    9/9 [==============================] - 0s 31ms/step - loss: 2.0970 - output_1_loss: 1.0808 - output_2_loss: 1.0162 - output_1_mae: 0.8401 - output_2_mae: 0.8130 - val_loss: 2.6640 - val_output_1_loss: 0.9480 - val_output_2_loss: 1.7161 - val_output_1_mae: 0.7820 - val_output_2_mae: 1.0537\n    Epoch 13/20\n    9/9 [==============================] - 0s 29ms/step - loss: 2.0540 - output_1_loss: 1.0680 - output_2_loss: 0.9860 - output_1_mae: 0.8356 - output_2_mae: 0.8008 - val_loss: 2.6468 - val_output_1_loss: 0.9326 - val_output_2_loss: 1.7142 - val_output_1_mae: 0.7754 - val_output_2_mae: 1.0538\n    Epoch 14/20\n    9/9 [==============================] - 0s 29ms/step - loss: 2.0171 - output_1_loss: 1.0562 - output_2_loss: 0.9609 - output_1_mae: 0.8310 - output_2_mae: 0.7910 - val_loss: 2.6439 - val_output_1_loss: 0.9350 - val_output_2_loss: 1.7090 - val_output_1_mae: 0.7752 - val_output_2_mae: 1.0473\n    Epoch 15/20\n    9/9 [==============================] - 0s 29ms/step - loss: 1.9864 - output_1_loss: 1.0468 - output_2_loss: 0.9396 - output_1_mae: 0.8273 - output_2_mae: 0.7809 - val_loss: 2.6282 - val_output_1_loss: 0.9284 - val_output_2_loss: 1.6998 - val_output_1_mae: 0.7728 - val_output_2_mae: 1.0454\n    Epoch 16/20\n    9/9 [==============================] - 0s 30ms/step - loss: 1.9587 - output_1_loss: 1.0372 - output_2_loss: 0.9215 - output_1_mae: 0.8237 - output_2_mae: 0.7729 - val_loss: 2.6171 - val_output_1_loss: 0.9228 - val_output_2_loss: 1.6943 - val_output_1_mae: 0.7705 - val_output_2_mae: 1.0443\n    Epoch 17/20\n    9/9 [==============================] - 0s 36ms/step - loss: 1.9331 - output_1_loss: 1.0287 - output_2_loss: 0.9045 - output_1_mae: 0.8206 - output_2_mae: 0.7672 - val_loss: 2.6150 - val_output_1_loss: 0.9207 - val_output_2_loss: 1.6943 - val_output_1_mae: 0.7690 - val_output_2_mae: 1.0435\n    Epoch 18/20\n    9/9 [==============================] - 0s 31ms/step - loss: 1.9092 - output_1_loss: 1.0210 - output_2_loss: 0.8882 - output_1_mae: 0.8180 - output_2_mae: 0.7597 - val_loss: 2.5927 - val_output_1_loss: 0.9081 - val_output_2_loss: 1.6846 - val_output_1_mae: 0.7642 - val_output_2_mae: 1.0409\n    Epoch 19/20\n    9/9 [==============================] - 0s 30ms/step - loss: 1.8908 - output_1_loss: 1.0147 - output_2_loss: 0.8761 - output_1_mae: 0.8155 - output_2_mae: 0.7552 - val_loss: 2.6052 - val_output_1_loss: 0.9144 - val_output_2_loss: 1.6908 - val_output_1_mae: 0.7666 - val_output_2_mae: 1.0435\n    Epoch 20/20\n    9/9 [==============================] - 0s 31ms/step - loss: 1.8719 - output_1_loss: 1.0081 - output_2_loss: 0.8638 - output_1_mae: 0.8130 - output_2_mae: 0.7485 - val_loss: 2.6011 - val_output_1_loss: 0.9084 - val_output_2_loss: 1.6927 - val_output_1_mae: 0.7635 - val_output_2_mae: 1.0453\n    \n\n\n\n\n    <keras.callbacks.History at 0x25a4268de20>\n\n\n\n\n```python\nfrom autopycoin.models import nbeats\n\nmodel2 = nbeats.create_generic_nbeats(\n            label_width=40,\n            g_forecast_neurons=16, \n            g_backcast_neurons=16, \n            n_neurons=16, \n            n_blocks=3,\n            n_stacks=2,\n            drop_rate=0.1,\n            share=True)\n\nmodel2.compile(tf.keras.optimizers.Adam(\n    learning_rate=0.0015, beta_1=0.9, beta_2=0.999, epsilon=1e-07, amsgrad=True,\n    name='Adam'), loss='mse', \n    loss_weights=[1, 1], # In the paper = [0, 1]\n    metrics=[\"mae\"])\n\nmodel2.fit(w.train, validation_data=w.valid, epochs=20)\n```\n\n    Epoch 1/20\n    9/9 [==============================] - 10s 273ms/step - loss: 42.6128 - output_1_loss: 20.5989 - output_2_loss: 22.0138 - output_1_mae: 2.9896 - output_2_mae: 3.3102 - val_loss: 35.9356 - val_output_1_loss: 17.8830 - val_output_2_loss: 18.0526 - val_output_1_mae: 2.7465 - val_output_2_mae: 2.8812\n    Epoch 2/20\n    9/9 [==============================] - 0s 34ms/step - loss: 33.6867 - output_1_loss: 16.9436 - output_2_loss: 16.7431 - output_1_mae: 2.5379 - output_2_mae: 2.6609 - val_loss: 32.3713 - val_output_1_loss: 16.0248 - val_output_2_loss: 16.3464 - val_output_1_mae: 2.5090 - val_output_2_mae: 2.4740\n    Epoch 3/20\n    9/9 [==============================] - 0s 35ms/step - loss: 31.6279 - output_1_loss: 16.0887 - output_2_loss: 15.5393 - output_1_mae: 2.4137 - output_2_mae: 2.4602 - val_loss: 31.0422 - val_output_1_loss: 15.9003 - val_output_2_loss: 15.1419 - val_output_1_mae: 2.4889 - val_output_2_mae: 2.3757\n    Epoch 4/20\n    9/9 [==============================] - 0s 38ms/step - loss: 30.7158 - output_1_loss: 15.7325 - output_2_loss: 14.9833 - output_1_mae: 2.3807 - output_2_mae: 2.4034 - val_loss: 30.2672 - val_output_1_loss: 15.5197 - val_output_2_loss: 14.7476 - val_output_1_mae: 2.4714 - val_output_2_mae: 2.3704\n    Epoch 5/20\n    9/9 [==============================] - 0s 36ms/step - loss: 29.9507 - output_1_loss: 15.4581 - output_2_loss: 14.4926 - output_1_mae: 2.3601 - output_2_mae: 2.3899 - val_loss: 29.1492 - val_output_1_loss: 15.3752 - val_output_2_loss: 13.7740 - val_output_1_mae: 2.4536 - val_output_2_mae: 2.3348\n    Epoch 6/20\n    9/9 [==============================] - 0s 37ms/step - loss: 28.9890 - output_1_loss: 15.2142 - output_2_loss: 13.7748 - output_1_mae: 2.3620 - output_2_mae: 2.3576 - val_loss: 27.7325 - val_output_1_loss: 14.7231 - val_output_2_loss: 13.0094 - val_output_1_mae: 2.4348 - val_output_2_mae: 2.3628\n    Epoch 7/20\n    9/9 [==============================] - 0s 37ms/step - loss: 27.9566 - output_1_loss: 14.8224 - output_2_loss: 13.1342 - output_1_mae: 2.3521 - output_2_mae: 2.3442 - val_loss: 27.0617 - val_output_1_loss: 14.4031 - val_output_2_loss: 12.6587 - val_output_1_mae: 2.4278 - val_output_2_mae: 2.3942\n    Epoch 8/20\n    9/9 [==============================] - 0s 38ms/step - loss: 26.8509 - output_1_loss: 14.4216 - output_2_loss: 12.4294 - output_1_mae: 2.3607 - output_2_mae: 2.3420 - val_loss: 26.5709 - val_output_1_loss: 14.1705 - val_output_2_loss: 12.4004 - val_output_1_mae: 2.4366 - val_output_2_mae: 2.4046\n    Epoch 9/20\n    9/9 [==============================] - 0s 45ms/step - loss: 25.5537 - output_1_loss: 13.9055 - output_2_loss: 11.6482 - output_1_mae: 2.3517 - output_2_mae: 2.2923 - val_loss: 25.4198 - val_output_1_loss: 13.6695 - val_output_2_loss: 11.7503 - val_output_1_mae: 2.4041 - val_output_2_mae: 2.2838\n    Epoch 10/20\n    9/9 [==============================] - 0s 39ms/step - loss: 24.2401 - output_1_loss: 13.3442 - output_2_loss: 10.8959 - output_1_mae: 2.3349 - output_2_mae: 2.2453 - val_loss: 24.0776 - val_output_1_loss: 12.8328 - val_output_2_loss: 11.2448 - val_output_1_mae: 2.4019 - val_output_2_mae: 2.3412\n    Epoch 11/20\n    9/9 [==============================] - 0s 39ms/step - loss: 22.8726 - output_1_loss: 12.5804 - output_2_loss: 10.2922 - output_1_mae: 2.3036 - output_2_mae: 2.2185 - val_loss: 22.0797 - val_output_1_loss: 11.8361 - val_output_2_loss: 10.2435 - val_output_1_mae: 2.3351 - val_output_2_mae: 2.2578\n    Epoch 12/20\n    9/9 [==============================] - 0s 37ms/step - loss: 21.3568 - output_1_loss: 11.8595 - output_2_loss: 9.4973 - output_1_mae: 2.2715 - output_2_mae: 2.1294 - val_loss: 20.7301 - val_output_1_loss: 11.2053 - val_output_2_loss: 9.5248 - val_output_1_mae: 2.2682 - val_output_2_mae: 2.1940\n    Epoch 13/20\n    9/9 [==============================] - 0s 37ms/step - loss: 19.9969 - output_1_loss: 10.9618 - output_2_loss: 9.0351 - output_1_mae: 2.2187 - output_2_mae: 2.1088 - val_loss: 19.5411 - val_output_1_loss: 10.4076 - val_output_2_loss: 9.1335 - val_output_1_mae: 2.2347 - val_output_2_mae: 2.1147\n    Epoch 14/20\n    9/9 [==============================] - 0s 39ms/step - loss: 18.2909 - output_1_loss: 10.0314 - output_2_loss: 8.2595 - output_1_mae: 2.1757 - output_2_mae: 2.0099 - val_loss: 17.4031 - val_output_1_loss: 9.2104 - val_output_2_loss: 8.1927 - val_output_1_mae: 2.1068 - val_output_2_mae: 1.9743\n    Epoch 15/20\n    9/9 [==============================] - 0s 38ms/step - loss: 16.9036 - output_1_loss: 9.1755 - output_2_loss: 7.7281 - output_1_mae: 2.1134 - output_2_mae: 1.9526 - val_loss: 15.8572 - val_output_1_loss: 8.1932 - val_output_2_loss: 7.6641 - val_output_1_mae: 2.0244 - val_output_2_mae: 1.9575\n    Epoch 16/20\n    9/9 [==============================] - 0s 37ms/step - loss: 15.6807 - output_1_loss: 8.4435 - output_2_loss: 7.2372 - output_1_mae: 2.0389 - output_2_mae: 1.8990 - val_loss: 15.5640 - val_output_1_loss: 8.1138 - val_output_2_loss: 7.4503 - val_output_1_mae: 2.0440 - val_output_2_mae: 1.9175\n    Epoch 17/20\n    9/9 [==============================] - 0s 39ms/step - loss: 14.5375 - output_1_loss: 7.7209 - output_2_loss: 6.8166 - output_1_mae: 1.9561 - output_2_mae: 1.8343 - val_loss: 14.9077 - val_output_1_loss: 7.8515 - val_output_2_loss: 7.0563 - val_output_1_mae: 2.0159 - val_output_2_mae: 1.8616\n    Epoch 18/20\n    9/9 [==============================] - 0s 39ms/step - loss: 13.4057 - output_1_loss: 7.0658 - output_2_loss: 6.3399 - output_1_mae: 1.9002 - output_2_mae: 1.7726 - val_loss: 12.9685 - val_output_1_loss: 6.5909 - val_output_2_loss: 6.3776 - val_output_1_mae: 1.8825 - val_output_2_mae: 1.8605\n    Epoch 19/20\n    9/9 [==============================] - 0s 37ms/step - loss: 11.6256 - output_1_loss: 6.0771 - output_2_loss: 5.5485 - output_1_mae: 1.7945 - output_2_mae: 1.6762 - val_loss: 11.7937 - val_output_1_loss: 6.1221 - val_output_2_loss: 5.6716 - val_output_1_mae: 1.8922 - val_output_2_mae: 1.7786\n    Epoch 20/20\n    9/9 [==============================] - 0s 39ms/step - loss: 11.2368 - output_1_loss: 5.8081 - output_2_loss: 5.4287 - output_1_mae: 1.7738 - output_2_mae: 1.6614 - val_loss: 10.8702 - val_output_1_loss: 5.4575 - val_output_2_loss: 5.4126 - val_output_1_mae: 1.7811 - val_output_2_mae: 1.7010\n    \n\n\n\n\n    <keras.callbacks.History at 0x25a4c7eb3d0>\n\n\n\n# Evaluation\n\n\n```python\nmodel1.evaluate(w.test)\n```\n\n    4/4 [==============================] - 0s 15ms/step - loss: 2.6927 - output_1_loss: 1.2548 - output_2_loss: 1.4379 - output_1_mae: 0.8934 - output_2_mae: 0.9630\n    \n\n\n\n\n    [2.692697048187256,\n     1.2548267841339111,\n     1.4378703832626343,\n     0.8934133052825928,\n     0.9630153179168701]\n\n\n\n\n```python\nmodel2.evaluate(w.test)\n```\n\n    4/4 [==============================] - 0s 20ms/step - loss: 10.9378 - output_1_loss: 5.5514 - output_2_loss: 5.3864 - output_1_mae: 1.7609 - output_2_mae: 1.6672\n    \n\n\n\n\n    [10.937788963317871,\n     5.551424503326416,\n     5.386363506317139,\n     1.7609360218048096,\n     1.66715669631958]\n\n\n\n# Plot\n\nLet plot some previsions\n\n\n```python\nimport matplotlib.pyplot as plt\n\niterator = iter(w.train)\nx, y = iterator.get_next()\n\ninput_width = 80\n\nplt.plot(range(input_width, input_width + 40), model1.predict(x)[1].values[0], label='forecast')\n# Usefull only if stack = True\nplt.plot(range(input_width), model1.predict(x)[0].values[0], label='backcast')\nplt.plot(range(input_width, input_width + 40), y[1][0], label='labels')\nplt.plot(range(input_width), x[0], label='inputs')\nplt.legend()\n```\n\n\n\n\n    <matplotlib.legend.Legend at 0x25a5293e4f0>\n\n\n\n\n    \n![png](examples/output_26_1.png)\n    \n\n\n# Production\n\n\n```python\nprod = w.production(data)\nplt.plot(model1.predict(prod)[0].values[1])\n```\n\n\n\n\n    [<matplotlib.lines.Line2D at 0x25a5363f2b0>]\n\n\n\n\n    \n![png](examples/output_28_1.png)\n    \n\n\n# A pool is better than a single model\n\nGenerally, a pool is better than a single model : It is a regularization method.\nIn this toy example, it won't because we are not optimizing the training phase.\n\n\n```python\nfrom autopycoin.models import PoolNBEATS\n\n# Create a callable which define label_width and create a Tensorflow Model.\nmodel = lambda label_width: nbeats.create_interpretable_nbeats(\n            label_width=label_width,\n            forecast_periods=[10],\n            backcast_periods=[10],\n            forecast_fourier_order=[10],\n            backcast_fourier_order=[10],\n            p_degree=1,\n            trend_n_neurons=200,\n            seasonality_n_neurons=200,\n            drop_rate=0.,\n            share=True)\n\n# Define an aggregation method with fn_agg, the number of models with n_models and the \n# label width with label_width. label_width is mandatory if you use callables in nbeats_models !\nmodel = PoolNBEATS(n_models=3, label_width=40, nbeats_models=model,\n            fn_agg=tf.reduce_mean)\n\nmodel.compile(tf.keras.optimizers.Adam(\n    learning_rate=0.001, beta_1=0.9, beta_2=0.999, epsilon=1e-07, amsgrad=True,\n    name='Adam'), loss=['mse', 'mse'], metrics=['mae'])\n\n# The fit is printing 6 different maes results: 2 for each model (backcast, forecast).\n# The loss is aggregated then it is printing 4 loss results: 1 for the entire model, \nmodel.fit(w.train, validation_data=w.valid, epochs=20)\n```\n\n    Epoch 1/20\n    9/9 [==============================] - 43s 829ms/step - loss: 129.9779 - output_1_1_loss: 54.8111 - output_1_2_loss: 58.6071 - output_2_1_loss: 16.5597 - output_1_1_mae: 5.1632 - output_1_2_mae: 5.4097 - output_2_1_mae: 3.1162 - output_2_2_mae: 3.6870 - output_3_1_mae: 4.8781 - output_3_2_mae: 4.5370 - val_loss: 46.9568 - val_output_1_1_loss: 14.0975 - val_output_1_2_loss: 24.6893 - val_output_2_1_loss: 8.1700 - val_output_1_1_mae: 2.9376 - val_output_1_2_mae: 3.7093 - val_output_2_1_mae: 2.3219 - val_output_2_2_mae: 2.5332 - val_output_3_1_mae: 3.8348 - val_output_3_2_mae: 3.3322\n    Epoch 2/20\n    9/9 [==============================] - 1s 74ms/step - loss: 25.4214 - output_1_1_loss: 7.0674 - output_1_2_loss: 14.4327 - output_2_1_loss: 3.9213 - output_1_1_mae: 2.0938 - output_1_2_mae: 2.8991 - output_2_1_mae: 1.5464 - output_2_2_mae: 1.9865 - output_3_1_mae: 2.3966 - output_3_2_mae: 2.8036 - val_loss: 17.6809 - val_output_1_1_loss: 4.1897 - val_output_1_2_loss: 11.3001 - val_output_2_1_loss: 2.1912 - val_output_1_1_mae: 1.6525 - val_output_1_2_mae: 2.6448 - val_output_2_1_mae: 1.1933 - val_output_2_2_mae: 1.8943 - val_output_3_1_mae: 1.8263 - val_output_3_2_mae: 2.2586\n    Epoch 3/20\n    9/9 [==============================] - 1s 86ms/step - loss: 11.8408 - output_1_1_loss: 3.4665 - output_1_2_loss: 6.3762 - output_2_1_loss: 1.9981 - output_1_1_mae: 1.4820 - output_1_2_mae: 1.9251 - output_2_1_mae: 1.1135 - output_2_2_mae: 1.4251 - output_3_1_mae: 1.5350 - output_3_2_mae: 1.9391 - val_loss: 8.2325 - val_output_1_1_loss: 2.1980 - val_output_1_2_loss: 4.5575 - val_output_2_1_loss: 1.4771 - val_output_1_1_mae: 1.2003 - val_output_1_2_mae: 1.7161 - val_output_2_1_mae: 0.9559 - val_output_2_2_mae: 1.8211 - val_output_3_1_mae: 1.4079 - val_output_3_2_mae: 1.7984\n    Epoch 4/20\n    9/9 [==============================] - 1s 90ms/step - loss: 6.9427 - output_1_1_loss: 2.2510 - output_1_2_loss: 3.3005 - output_2_1_loss: 1.3912 - output_1_1_mae: 1.2012 - output_1_2_mae: 1.4370 - output_2_1_mae: 0.9312 - output_2_2_mae: 1.2682 - output_3_1_mae: 1.2522 - output_3_2_mae: 1.3777 - val_loss: 5.8157 - val_output_1_1_loss: 1.7247 - val_output_1_2_loss: 3.0949 - val_output_2_1_loss: 0.9962 - val_output_1_1_mae: 1.0654 - val_output_1_2_mae: 1.3998 - val_output_2_1_mae: 0.7977 - val_output_2_2_mae: 1.6829 - val_output_3_1_mae: 1.1519 - val_output_3_2_mae: 1.4012\n    Epoch 5/20\n    9/9 [==============================] - 1s 86ms/step - loss: 5.0599 - output_1_1_loss: 1.7671 - output_1_2_loss: 2.1756 - output_2_1_loss: 1.1172 - output_1_1_mae: 1.0628 - output_1_2_mae: 1.1825 - output_2_1_mae: 0.8378 - output_2_2_mae: 1.4185 - output_3_1_mae: 1.0667 - output_3_2_mae: 1.1119 - val_loss: 4.7978 - val_output_1_1_loss: 1.3100 - val_output_1_2_loss: 2.6150 - val_output_2_1_loss: 0.8728 - val_output_1_1_mae: 0.9288 - val_output_1_2_mae: 1.3082 - val_output_2_1_mae: 0.7442 - val_output_2_2_mae: 1.0579 - val_output_3_1_mae: 0.9992 - val_output_3_2_mae: 1.2378\n    Epoch 6/20\n    9/9 [==============================] - 1s 87ms/step - loss: 4.2656 - output_1_1_loss: 1.4522 - output_1_2_loss: 1.7817 - output_2_1_loss: 1.0316 - output_1_1_mae: 0.9619 - output_1_2_mae: 1.0819 - output_2_1_mae: 0.8059 - output_2_2_mae: 1.3582 - output_3_1_mae: 0.9386 - output_3_2_mae: 1.0177 - val_loss: 3.9572 - val_output_1_1_loss: 1.1128 - val_output_1_2_loss: 2.0426 - val_output_2_1_loss: 0.8018 - val_output_1_1_mae: 0.8523 - val_output_1_2_mae: 1.1461 - val_output_2_1_mae: 0.7204 - val_output_2_2_mae: 1.6967 - val_output_3_1_mae: 0.8754 - val_output_3_2_mae: 1.1660\n    Epoch 7/20\n    9/9 [==============================] - 1s 100ms/step - loss: 3.8616 - output_1_1_loss: 1.3152 - output_1_2_loss: 1.5499 - output_2_1_loss: 0.9965 - output_1_1_mae: 0.9157 - output_1_2_mae: 1.0036 - output_2_1_mae: 0.7941 - output_2_2_mae: 1.1896 - output_3_1_mae: 0.8731 - output_3_2_mae: 0.9514 - val_loss: 3.8208 - val_output_1_1_loss: 1.0152 - val_output_1_2_loss: 2.0275 - val_output_2_1_loss: 0.7781 - val_output_1_1_mae: 0.8203 - val_output_1_2_mae: 1.1385 - val_output_2_1_mae: 0.7071 - val_output_2_2_mae: 1.2886 - val_output_3_1_mae: 0.8086 - val_output_3_2_mae: 1.1600\n    Epoch 8/20\n    9/9 [==============================] - 1s 102ms/step - loss: 3.5669 - output_1_1_loss: 1.2355 - output_1_2_loss: 1.3619 - output_2_1_loss: 0.9696 - output_1_1_mae: 0.8884 - output_1_2_mae: 0.9339 - output_2_1_mae: 0.7838 - output_2_2_mae: 0.9751 - output_3_1_mae: 0.8383 - output_3_2_mae: 0.9076 - val_loss: 3.5757 - val_output_1_1_loss: 0.9730 - val_output_1_2_loss: 1.8360 - val_output_2_1_loss: 0.7667 - val_output_1_1_mae: 0.8063 - val_output_1_2_mae: 1.0796 - val_output_2_1_mae: 0.7042 - val_output_2_2_mae: 1.0481 - val_output_3_1_mae: 0.7874 - val_output_3_2_mae: 1.1607\n    Epoch 9/20\n    9/9 [==============================] - 1s 90ms/step - loss: 3.3985 - output_1_1_loss: 1.1943 - output_1_2_loss: 1.2635 - output_2_1_loss: 0.9407 - output_1_1_mae: 0.8756 - output_1_2_mae: 0.8978 - output_2_1_mae: 0.7717 - output_2_2_mae: 0.8747 - output_3_1_mae: 0.8182 - output_3_2_mae: 0.8798 - val_loss: 3.6140 - val_output_1_1_loss: 0.9473 - val_output_1_2_loss: 1.9000 - val_output_2_1_loss: 0.7666 - val_output_1_1_mae: 0.7956 - val_output_1_2_mae: 1.0952 - val_output_2_1_mae: 0.7048 - val_output_2_2_mae: 1.0705 - val_output_3_1_mae: 0.7708 - val_output_3_2_mae: 1.1711\n    Epoch 10/20\n    9/9 [==============================] - 1s 88ms/step - loss: 3.2628 - output_1_1_loss: 1.1613 - output_1_2_loss: 1.1828 - output_2_1_loss: 0.9187 - output_1_1_mae: 0.8640 - output_1_2_mae: 0.8752 - output_2_1_mae: 0.7643 - output_2_2_mae: 0.8340 - output_3_1_mae: 0.8036 - output_3_2_mae: 0.8597 - val_loss: 3.6254 - val_output_1_1_loss: 0.9419 - val_output_1_2_loss: 1.9278 - val_output_2_1_loss: 0.7556 - val_output_1_1_mae: 0.7926 - val_output_1_2_mae: 1.1058 - val_output_2_1_mae: 0.7003 - val_output_2_2_mae: 1.0737 - val_output_3_1_mae: 0.7666 - val_output_3_2_mae: 1.1687\n    Epoch 11/20\n    9/9 [==============================] - 1s 86ms/step - loss: 3.1657 - output_1_1_loss: 1.1376 - output_1_2_loss: 1.1247 - output_2_1_loss: 0.9034 - output_1_1_mae: 0.8553 - output_1_2_mae: 0.8621 - output_2_1_mae: 0.7592 - output_2_2_mae: 0.8126 - output_3_1_mae: 0.7948 - output_3_2_mae: 0.8450 - val_loss: 3.5362 - val_output_1_1_loss: 0.9206 - val_output_1_2_loss: 1.8659 - val_output_2_1_loss: 0.7497 - val_output_1_1_mae: 0.7823 - val_output_1_2_mae: 1.0899 - val_output_2_1_mae: 0.6958 - val_output_2_2_mae: 1.0339 - val_output_3_1_mae: 0.7653 - val_output_3_2_mae: 1.1516\n    Epoch 12/20\n    9/9 [==============================] - 1s 87ms/step - loss: 3.1066 - output_1_1_loss: 1.1205 - output_1_2_loss: 1.0941 - output_2_1_loss: 0.8920 - output_1_1_mae: 0.8487 - output_1_2_mae: 0.8511 - output_2_1_mae: 0.7547 - output_2_2_mae: 0.7885 - output_3_1_mae: 0.7868 - output_3_2_mae: 0.8316 - val_loss: 3.4825 - val_output_1_1_loss: 0.9152 - val_output_1_2_loss: 1.8193 - val_output_2_1_loss: 0.7479 - val_output_1_1_mae: 0.7806 - val_output_1_2_mae: 1.0748 - val_output_2_1_mae: 0.6967 - val_output_2_2_mae: 1.0604 - val_output_3_1_mae: 0.7619 - val_output_3_2_mae: 1.1315\n    Epoch 13/20\n    9/9 [==============================] - 1s 89ms/step - loss: 3.0458 - output_1_1_loss: 1.1044 - output_1_2_loss: 1.0592 - output_2_1_loss: 0.8822 - output_1_1_mae: 0.8432 - output_1_2_mae: 0.8309 - output_2_1_mae: 0.7507 - output_2_2_mae: 0.7824 - output_3_1_mae: 0.7802 - output_3_2_mae: 0.8183 - val_loss: 3.5015 - val_output_1_1_loss: 0.9050 - val_output_1_2_loss: 1.8511 - val_output_2_1_loss: 0.7454 - val_output_1_1_mae: 0.7771 - val_output_1_2_mae: 1.0792 - val_output_2_1_mae: 0.6925 - val_output_2_2_mae: 1.0433 - val_output_3_1_mae: 0.7592 - val_output_3_2_mae: 1.1145\n    Epoch 14/20\n    9/9 [==============================] - 1s 88ms/step - loss: 2.9937 - output_1_1_loss: 1.0914 - output_1_2_loss: 1.0284 - output_2_1_loss: 0.8740 - output_1_1_mae: 0.8393 - output_1_2_mae: 0.8118 - output_2_1_mae: 0.7473 - output_2_2_mae: 0.7690 - output_3_1_mae: 0.7750 - output_3_2_mae: 0.8043 - val_loss: 3.4499 - val_output_1_1_loss: 0.9009 - val_output_1_2_loss: 1.8061 - val_output_2_1_loss: 0.7429 - val_output_1_1_mae: 0.7749 - val_output_1_2_mae: 1.0674 - val_output_2_1_mae: 0.6918 - val_output_2_2_mae: 1.0505 - val_output_3_1_mae: 0.7601 - val_output_3_2_mae: 1.1067\n    Epoch 15/20\n    9/9 [==============================] - 1s 89ms/step - loss: 2.9859 - output_1_1_loss: 1.0803 - output_1_2_loss: 1.0397 - output_2_1_loss: 0.8658 - output_1_1_mae: 0.8357 - output_1_2_mae: 0.8106 - output_2_1_mae: 0.7445 - output_2_2_mae: 0.7634 - output_3_1_mae: 0.7699 - output_3_2_mae: 0.7922 - val_loss: 3.4064 - val_output_1_1_loss: 0.8995 - val_output_1_2_loss: 1.7671 - val_output_2_1_loss: 0.7399 - val_output_1_1_mae: 0.7744 - val_output_1_2_mae: 1.0629 - val_output_2_1_mae: 0.6911 - val_output_2_2_mae: 1.0509 - val_output_3_1_mae: 0.7584 - val_output_3_2_mae: 1.1074\n    Epoch 16/20\n    9/9 [==============================] - 1s 86ms/step - loss: 2.9870 - output_1_1_loss: 1.0734 - output_1_2_loss: 1.0549 - output_2_1_loss: 0.8587 - output_1_1_mae: 0.8338 - output_1_2_mae: 0.8185 - output_2_1_mae: 0.7419 - output_2_2_mae: 0.7561 - output_3_1_mae: 0.7658 - output_3_2_mae: 0.7829 - val_loss: 3.6377 - val_output_1_1_loss: 0.9016 - val_output_1_2_loss: 2.0002 - val_output_2_1_loss: 0.7359 - val_output_1_1_mae: 0.7739 - val_output_1_2_mae: 1.1345 - val_output_2_1_mae: 0.6889 - val_output_2_2_mae: 1.0411 - val_output_3_1_mae: 0.7554 - val_output_3_2_mae: 1.1253\n    Epoch 17/20\n    9/9 [==============================] - 1s 90ms/step - loss: 2.9628 - output_1_1_loss: 1.0636 - output_1_2_loss: 1.0463 - output_2_1_loss: 0.8529 - output_1_1_mae: 0.8296 - output_1_2_mae: 0.8272 - output_2_1_mae: 0.7396 - output_2_2_mae: 0.7494 - output_3_1_mae: 0.7621 - output_3_2_mae: 0.7780 - val_loss: 3.8666 - val_output_1_1_loss: 0.9005 - val_output_1_2_loss: 2.2291 - val_output_2_1_loss: 0.7369 - val_output_1_1_mae: 0.7731 - val_output_1_2_mae: 1.2023 - val_output_2_1_mae: 0.6899 - val_output_2_2_mae: 1.0530 - val_output_3_1_mae: 0.7531 - val_output_3_2_mae: 1.1594\n    Epoch 18/20\n    9/9 [==============================] - 1s 93ms/step - loss: 3.0166 - output_1_1_loss: 1.0595 - output_1_2_loss: 1.1103 - output_2_1_loss: 0.8468 - output_1_1_mae: 0.8277 - output_1_2_mae: 0.8641 - output_2_1_mae: 0.7373 - output_2_2_mae: 0.7442 - output_3_1_mae: 0.7590 - output_3_2_mae: 0.7782 - val_loss: 3.4706 - val_output_1_1_loss: 0.8868 - val_output_1_2_loss: 1.8534 - val_output_2_1_loss: 0.7304 - val_output_1_1_mae: 0.7681 - val_output_1_2_mae: 1.0926 - val_output_2_1_mae: 0.6866 - val_output_2_2_mae: 1.0440 - val_output_3_1_mae: 0.7500 - val_output_3_2_mae: 1.2009\n    Epoch 19/20\n    9/9 [==============================] - 1s 92ms/step - loss: 3.1871 - output_1_1_loss: 1.0524 - output_1_2_loss: 1.2934 - output_2_1_loss: 0.8412 - output_1_1_mae: 0.8256 - output_1_2_mae: 0.9245 - output_2_1_mae: 0.7353 - output_2_2_mae: 0.7387 - output_3_1_mae: 0.7563 - output_3_2_mae: 0.7871 - val_loss: 3.6106 - val_output_1_1_loss: 0.8820 - val_output_1_2_loss: 1.9958 - val_output_2_1_loss: 0.7328 - val_output_1_1_mae: 0.7685 - val_output_1_2_mae: 1.1143 - val_output_2_1_mae: 0.6885 - val_output_2_2_mae: 1.0465 - val_output_3_1_mae: 0.7469 - val_output_3_2_mae: 1.1983\n    Epoch 20/20\n    9/9 [==============================] - 1s 87ms/step - loss: 3.1260 - output_1_1_loss: 1.0483 - output_1_2_loss: 1.2413 - output_2_1_loss: 0.8363 - output_1_1_mae: 0.8245 - output_1_2_mae: 0.8869 - output_2_1_mae: 0.7333 - output_2_2_mae: 0.7342 - output_3_1_mae: 0.7541 - output_3_2_mae: 0.8061 - val_loss: 3.9547 - val_output_1_1_loss: 0.8803 - val_output_1_2_loss: 2.3441 - val_output_2_1_loss: 0.7303 - val_output_1_1_mae: 0.7685 - val_output_1_2_mae: 1.2228 - val_output_2_1_mae: 0.6864 - val_output_2_2_mae: 1.0471 - val_output_3_1_mae: 0.7449 - val_output_3_2_mae: 1.1286\n    \n\n\n\n\n    <keras.callbacks.History at 0x25a5f4cb4f0>\n\n\n\n\n```python\nimport matplotlib.pyplot as plt\n\niterator = iter(w.train)\nx, y = iterator.get_next()\n\ninput_width = 80\n\nplt.plot(range(input_width, input_width + 40), model.predict(x)[1][0], label='forecast')\nplt.plot(range(input_width, input_width + 40), y[1][0], label='labels')\nplt.plot(range(input_width), x[0], label='inputs')\nplt.legend()\n```\n\n\n\n\n    <matplotlib.legend.Legend at 0x25a852bb2e0>\n\n\n\n\n    \n![png](examples/output_32_1.png)\n    \n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/GaetanDu/autopycoin",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GaetanDu/autopycoin",
    "keywords": "",
    "license": "Apache license 2.0",
    "maintainer": "G. Dubuc",
    "maintainer_email": "gaet.dub1@gmail.com",
    "name": "autopycoin",
    "package_url": "https://pypi.org/project/autopycoin/",
    "platform": null,
    "project_url": "https://pypi.org/project/autopycoin/",
    "project_urls": {
      "Download": "https://github.com/GaetanDu/autopycoin",
      "Homepage": "https://github.com/GaetanDu/autopycoin"
    },
    "release_url": "https://pypi.org/project/autopycoin/0.1.33/",
    "requires_dist": [
      "numpy",
      "pandas",
      "tensorflow (>=2.7.0)",
      "tensorflow-probability",
      "matplotlib",
      "sphinx ; extra == 'docs'",
      "sphinx-gallery ; extra == 'docs'",
      "sphinx-rtd-theme ; extra == 'docs'",
      "numpydoc ; extra == 'docs'",
      "matplotlib ; extra == 'docs'",
      "pydata-sphinx-theme ; extra == 'docs'",
      "pytest ; extra == 'tests'",
      "pytest-cov ; extra == 'tests'"
    ],
    "requires_python": "",
    "summary": "Deep learning models for forecasting purposes.",
    "version": "0.1.33",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13504314,
  "releases": {
    "0.1.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d534beb20360072efe5792f3f8770f1644abc1492a15ba2d3b07644c184dd115",
          "md5": "9290e39b3d16f4d3beccb1d3c4f8720a",
          "sha256": "ad35d86dfcfa3be564911c12eed6c8d5280c7cc9d8036c9d38ec12214204623c"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9290e39b3d16f4d3beccb1d3c4f8720a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 64148,
        "upload_time": "2022-01-20T15:38:56",
        "upload_time_iso_8601": "2022-01-20T15:38:56.612199Z",
        "url": "https://files.pythonhosted.org/packages/d5/34/beb20360072efe5792f3f8770f1644abc1492a15ba2d3b07644c184dd115/autopycoin-0.1.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa997f8995520df2bd8e0ee912241696734a182e6f60ecf3c9256eef754b6e5b",
          "md5": "728338bf8e9f6ddd7d2f7d3cc03c3d80",
          "sha256": "67afe05cf91594547f28ffc43643f25dae794c412609ca1068f8908a10c575b6"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.13.tar.gz",
        "has_sig": false,
        "md5_digest": "728338bf8e9f6ddd7d2f7d3cc03c3d80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54627,
        "upload_time": "2022-01-20T15:38:58",
        "upload_time_iso_8601": "2022-01-20T15:38:58.292308Z",
        "url": "https://files.pythonhosted.org/packages/aa/99/7f8995520df2bd8e0ee912241696734a182e6f60ecf3c9256eef754b6e5b/autopycoin-0.1.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ce99c50d4e6d2be990b86208906217eb9479f247e69684632b76bba7f7476de",
          "md5": "120f79fd882ac42b803428b24107ddd9",
          "sha256": "c64f04f2d39ec29573c8f0020a599154c181854cc9ae706ae8a50cf9d0ffbb61"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "120f79fd882ac42b803428b24107ddd9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 64597,
        "upload_time": "2022-01-24T03:07:15",
        "upload_time_iso_8601": "2022-01-24T03:07:15.287971Z",
        "url": "https://files.pythonhosted.org/packages/2c/e9/9c50d4e6d2be990b86208906217eb9479f247e69684632b76bba7f7476de/autopycoin-0.1.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fc0e9c4f9336d727f80e02bacafa2dde0eb2b8cfa9aa3459059054d95895306",
          "md5": "399cbd1bb67816198ad16bac9a03e6ef",
          "sha256": "26e830a0a89c3d4fbba8b1cd13d3ee71a18b4c8ebbe684aa5de19a3aa6e55e86"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.14.tar.gz",
        "has_sig": false,
        "md5_digest": "399cbd1bb67816198ad16bac9a03e6ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 55177,
        "upload_time": "2022-01-24T03:07:16",
        "upload_time_iso_8601": "2022-01-24T03:07:16.445983Z",
        "url": "https://files.pythonhosted.org/packages/9f/c0/e9c4f9336d727f80e02bacafa2dde0eb2b8cfa9aa3459059054d95895306/autopycoin-0.1.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78093f0f1b12550b0fff3a052d4ad3247564d53cac167115227e06d03f22d76d",
          "md5": "a13becb153635455806125045e48304d",
          "sha256": "ff159585d3752877eb4bcfab1d11033bf899c2cd5921e79d3e890210b9839fbc"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.15-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a13becb153635455806125045e48304d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 64220,
        "upload_time": "2022-02-04T19:31:49",
        "upload_time_iso_8601": "2022-02-04T19:31:49.039173Z",
        "url": "https://files.pythonhosted.org/packages/78/09/3f0f1b12550b0fff3a052d4ad3247564d53cac167115227e06d03f22d76d/autopycoin-0.1.15-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31483b29fcca8bcfbeee0070710308ffb69bc7254329d7fae05e09c40cd91635",
          "md5": "bb083e311ce334c26690082a21adda87",
          "sha256": "7a4a3d9f07c8938a53ac28119fac0ade11ff9f6589850e4d2eeca49079d7cb94"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.15.tar.gz",
        "has_sig": false,
        "md5_digest": "bb083e311ce334c26690082a21adda87",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54703,
        "upload_time": "2022-02-04T19:31:50",
        "upload_time_iso_8601": "2022-02-04T19:31:50.130690Z",
        "url": "https://files.pythonhosted.org/packages/31/48/3b29fcca8bcfbeee0070710308ffb69bc7254329d7fae05e09c40cd91635/autopycoin-0.1.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "672f9a0c4e207403a587e885797d57d2aecf0c2706e164f7f19a77ada35e534c",
          "md5": "90bfa5ef71bb42c4d25690b9deea9301",
          "sha256": "49c1e1a580e9c64fc6e7586fac318f5866ab37395219fa438eed537115056062"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.16-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90bfa5ef71bb42c4d25690b9deea9301",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 66509,
        "upload_time": "2022-02-07T23:22:51",
        "upload_time_iso_8601": "2022-02-07T23:22:51.328995Z",
        "url": "https://files.pythonhosted.org/packages/67/2f/9a0c4e207403a587e885797d57d2aecf0c2706e164f7f19a77ada35e534c/autopycoin-0.1.16-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd7b5f8bb1f9b166ba671b373c5dc7403c45fce16d284d9ae2b89cc964cb6724",
          "md5": "29c3d06173bd0a040746f59210a3adf4",
          "sha256": "e5dde528b459d6465cf4d192eb77ef4bc434d549161d3718702685ee407947d2"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.16.tar.gz",
        "has_sig": false,
        "md5_digest": "29c3d06173bd0a040746f59210a3adf4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 57407,
        "upload_time": "2022-02-07T23:22:52",
        "upload_time_iso_8601": "2022-02-07T23:22:52.699946Z",
        "url": "https://files.pythonhosted.org/packages/bd/7b/5f8bb1f9b166ba671b373c5dc7403c45fce16d284d9ae2b89cc964cb6724/autopycoin-0.1.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfee6269a8136f25ffad7b9b43d9b8a720b6b23fac702126324cb69189dfdebc",
          "md5": "0111df8f1e0000a7dc521d85b568317b",
          "sha256": "52989c3739d8b85b2c60b52e56d05dd1e869ae3ab60f5fb984fb34f1782a8dc6"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.17-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0111df8f1e0000a7dc521d85b568317b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 78303,
        "upload_time": "2022-04-05T20:06:05",
        "upload_time_iso_8601": "2022-04-05T20:06:05.614240Z",
        "url": "https://files.pythonhosted.org/packages/bf/ee/6269a8136f25ffad7b9b43d9b8a720b6b23fac702126324cb69189dfdebc/autopycoin-0.1.17-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2d06ecd91eafe05211a917e8944d104621ce23dc8a078cee7b4915c2357740d",
          "md5": "1490cecfe707e3ef77754c59990ec0f0",
          "sha256": "22468d1d94a8591ee150e4b986aad5985108e39e482767fd72cbf9530a052b09"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.17.tar.gz",
        "has_sig": false,
        "md5_digest": "1490cecfe707e3ef77754c59990ec0f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 68509,
        "upload_time": "2022-04-05T20:06:06",
        "upload_time_iso_8601": "2022-04-05T20:06:06.893973Z",
        "url": "https://files.pythonhosted.org/packages/b2/d0/6ecd91eafe05211a917e8944d104621ce23dc8a078cee7b4915c2357740d/autopycoin-0.1.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bbf30a6e2527c44239bc7b085a127369bf244aa32c1204536737f5faf94d496",
          "md5": "05ae0f73a3f174d72023e57515ed8a01",
          "sha256": "b337e2e25ac6b81e724b51414d558836cfd54c8eeff164e0394abd27e2f1005e"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.18-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05ae0f73a3f174d72023e57515ed8a01",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 85022,
        "upload_time": "2022-04-07T15:31:54",
        "upload_time_iso_8601": "2022-04-07T15:31:54.365730Z",
        "url": "https://files.pythonhosted.org/packages/2b/bf/30a6e2527c44239bc7b085a127369bf244aa32c1204536737f5faf94d496/autopycoin-0.1.18-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58a0bbe85ba6f4c579d29720613a4ac925af39908b8a3a80863cc9dfa6bee9d3",
          "md5": "90a749d8e297f3e2c92164a05e480fe4",
          "sha256": "ee9048be305204d26147794b158b30d21af569553565ddcd084064a81452028b"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.18.tar.gz",
        "has_sig": false,
        "md5_digest": "90a749d8e297f3e2c92164a05e480fe4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 89182,
        "upload_time": "2022-04-07T15:31:56",
        "upload_time_iso_8601": "2022-04-07T15:31:56.270932Z",
        "url": "https://files.pythonhosted.org/packages/58/a0/bbe85ba6f4c579d29720613a4ac925af39908b8a3a80863cc9dfa6bee9d3/autopycoin-0.1.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.19": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f4c4c1f31fbf62e7dca791679279199a38d31bc77290e791c449661588ee1ad",
          "md5": "dbbfb2317a13d7c3c9425b8a2e708f9d",
          "sha256": "fc9890a87e5b26a077cbc647f7639b4bbe84447a70eab3ff386899ed474b1745"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.19-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dbbfb2317a13d7c3c9425b8a2e708f9d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 85023,
        "upload_time": "2022-04-07T15:55:02",
        "upload_time_iso_8601": "2022-04-07T15:55:02.379800Z",
        "url": "https://files.pythonhosted.org/packages/5f/4c/4c1f31fbf62e7dca791679279199a38d31bc77290e791c449661588ee1ad/autopycoin-0.1.19-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28ce3f4634cfe0d30307442844a7f1af4b503b1ee5763201e7baeaaa5119c03d",
          "md5": "b0827aee0836a69f31b69790cb1d22a3",
          "sha256": "3d87654990df3e74ba67f5f0dce7f3a970cdc6e633855a1d26b64f25a6973c52"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.19.tar.gz",
        "has_sig": false,
        "md5_digest": "b0827aee0836a69f31b69790cb1d22a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 89174,
        "upload_time": "2022-04-07T15:55:04",
        "upload_time_iso_8601": "2022-04-07T15:55:04.416889Z",
        "url": "https://files.pythonhosted.org/packages/28/ce/3f4634cfe0d30307442844a7f1af4b503b1ee5763201e7baeaaa5119c03d/autopycoin-0.1.19.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.20": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20cb55644ec32b364afe9b30e2a6e50dab421785d4253655b422f1f0088c8e62",
          "md5": "397d70a930f00f31a639eb16372368a6",
          "sha256": "b76a3bef5d94edc46dcaaf450d6d88f9f190b2b73beedb6b682e3631b726bc25"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.20-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "397d70a930f00f31a639eb16372368a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 85006,
        "upload_time": "2022-04-07T16:52:50",
        "upload_time_iso_8601": "2022-04-07T16:52:50.894062Z",
        "url": "https://files.pythonhosted.org/packages/20/cb/55644ec32b364afe9b30e2a6e50dab421785d4253655b422f1f0088c8e62/autopycoin-0.1.20-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e81644a27ff918c1922d913c3c489f4ef56b08b88c0cb2d3cd1a79126b83706",
          "md5": "e9a412be0c9a6e40f3e4f6640bed4f83",
          "sha256": "eb7c25489fe65dff5a57a14ff31cb9e8d57afa147ee432c0b832afc5b6d0c4ea"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.20.tar.gz",
        "has_sig": false,
        "md5_digest": "e9a412be0c9a6e40f3e4f6640bed4f83",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 89126,
        "upload_time": "2022-04-07T16:52:52",
        "upload_time_iso_8601": "2022-04-07T16:52:52.664143Z",
        "url": "https://files.pythonhosted.org/packages/5e/81/644a27ff918c1922d913c3c489f4ef56b08b88c0cb2d3cd1a79126b83706/autopycoin-0.1.20.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.30": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "970d957a3d8a9d3c3d007d250bfa988a9ed90b9e6f3b3aa8d4dce98a6ff5e16d",
          "md5": "a368fe864fc81d126929afb85f378307",
          "sha256": "3a3d645977f9a5d76ee6f92ff1c55c74e132bc62606570f0f47074f7e7ebec67"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.30-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a368fe864fc81d126929afb85f378307",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 85005,
        "upload_time": "2022-04-07T16:57:32",
        "upload_time_iso_8601": "2022-04-07T16:57:32.668625Z",
        "url": "https://files.pythonhosted.org/packages/97/0d/957a3d8a9d3c3d007d250bfa988a9ed90b9e6f3b3aa8d4dce98a6ff5e16d/autopycoin-0.1.30-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "712c97c64bf56b3b33a60f032109462074338090d267688d56ce3f447037dbd5",
          "md5": "36ef82388fc692807aea52cd660abd9b",
          "sha256": "43eb04dd0fb810ba4397cc9a925f68ee892c8c9f0bf68b6f6a5811ac0eb96d9d"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.30.tar.gz",
        "has_sig": false,
        "md5_digest": "36ef82388fc692807aea52cd660abd9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 89125,
        "upload_time": "2022-04-07T16:57:34",
        "upload_time_iso_8601": "2022-04-07T16:57:34.172279Z",
        "url": "https://files.pythonhosted.org/packages/71/2c/97c64bf56b3b33a60f032109462074338090d267688d56ce3f447037dbd5/autopycoin-0.1.30.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.31": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78f922c68d5a7adf2558b9459b16e4aacb5c4701be709be42915c43ef31c5bab",
          "md5": "c913cb3a7b97c1cb42ac0f2b2e3a4005",
          "sha256": "3bd0936e902e179a8632d0d4b9ab18f077c7d1b9c88e65a9abe0e0251d9eb2c5"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.31-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c913cb3a7b97c1cb42ac0f2b2e3a4005",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 85006,
        "upload_time": "2022-04-07T17:14:13",
        "upload_time_iso_8601": "2022-04-07T17:14:13.727492Z",
        "url": "https://files.pythonhosted.org/packages/78/f9/22c68d5a7adf2558b9459b16e4aacb5c4701be709be42915c43ef31c5bab/autopycoin-0.1.31-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0bd9e8de46b791141869de8eb85f27f9c3b82fd4dc5de627a6e687dbcd57519",
          "md5": "d326ee71c6d6e16d2afdb8d556abfcba",
          "sha256": "8de0d5e7bac9744c4ae85ebdee948b478e983d98f5597ac3ef3f7de8b0aafeae"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.31.tar.gz",
        "has_sig": false,
        "md5_digest": "d326ee71c6d6e16d2afdb8d556abfcba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 89109,
        "upload_time": "2022-04-07T17:14:15",
        "upload_time_iso_8601": "2022-04-07T17:14:15.204975Z",
        "url": "https://files.pythonhosted.org/packages/a0/bd/9e8de46b791141869de8eb85f27f9c3b82fd4dc5de627a6e687dbcd57519/autopycoin-0.1.31.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.32": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d71f58df0e817d69e8c689be5c3212b70b00946c16907ebe028d3a7dfbaf9be",
          "md5": "37169a79c164b9bcd123948243ace5c5",
          "sha256": "38fdae9dbfc481a946121b34e93684db023c4a3b9ac02be67b1745227adc84f0"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.32-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "37169a79c164b9bcd123948243ace5c5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 85075,
        "upload_time": "2022-04-10T00:01:24",
        "upload_time_iso_8601": "2022-04-10T00:01:24.948365Z",
        "url": "https://files.pythonhosted.org/packages/5d/71/f58df0e817d69e8c689be5c3212b70b00946c16907ebe028d3a7dfbaf9be/autopycoin-0.1.32-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ed0d40e5954b32909bc14b22e57aee0fa963c0b80ae9c516f6bfc39194a9311",
          "md5": "4c7d84e34ab3c42f4acd11fbeec6d217",
          "sha256": "2736faff714325eaabab1a5fa519c2afb4571489362a36335e662f794da70163"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.32.tar.gz",
        "has_sig": false,
        "md5_digest": "4c7d84e34ab3c42f4acd11fbeec6d217",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 89211,
        "upload_time": "2022-04-10T00:01:27",
        "upload_time_iso_8601": "2022-04-10T00:01:27.011892Z",
        "url": "https://files.pythonhosted.org/packages/1e/d0/d40e5954b32909bc14b22e57aee0fa963c0b80ae9c516f6bfc39194a9311/autopycoin-0.1.32.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.33": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34c99746cb519d316f561769b51b52a6e1cca54699039af57271c879ec8f3b20",
          "md5": "847379bdd2408f60fc941e9df2fec8ee",
          "sha256": "d4dd3af633ea7612fc4795e9345c265993d54272eacea0039452251958f2b4ec"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.33-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "847379bdd2408f60fc941e9df2fec8ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 85332,
        "upload_time": "2022-04-13T16:17:27",
        "upload_time_iso_8601": "2022-04-13T16:17:27.964040Z",
        "url": "https://files.pythonhosted.org/packages/34/c9/9746cb519d316f561769b51b52a6e1cca54699039af57271c879ec8f3b20/autopycoin-0.1.33-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b84bafeee1bc596fc7c3847354329c94bd1adb57a68d3c38d4af27e658da8b5",
          "md5": "338f35744b7b92be8a7f4e8807d8e550",
          "sha256": "fc6c902ced3917ee61b09f2b9c521e81d33a5934ba9d595cbd9826169d9b9317"
        },
        "downloads": -1,
        "filename": "autopycoin-0.1.33.tar.gz",
        "has_sig": false,
        "md5_digest": "338f35744b7b92be8a7f4e8807d8e550",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 89326,
        "upload_time": "2022-04-13T16:17:29",
        "upload_time_iso_8601": "2022-04-13T16:17:29.556087Z",
        "url": "https://files.pythonhosted.org/packages/0b/84/bafeee1bc596fc7c3847354329c94bd1adb57a68d3c38d4af27e658da8b5/autopycoin-0.1.33.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "34c99746cb519d316f561769b51b52a6e1cca54699039af57271c879ec8f3b20",
        "md5": "847379bdd2408f60fc941e9df2fec8ee",
        "sha256": "d4dd3af633ea7612fc4795e9345c265993d54272eacea0039452251958f2b4ec"
      },
      "downloads": -1,
      "filename": "autopycoin-0.1.33-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "847379bdd2408f60fc941e9df2fec8ee",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 85332,
      "upload_time": "2022-04-13T16:17:27",
      "upload_time_iso_8601": "2022-04-13T16:17:27.964040Z",
      "url": "https://files.pythonhosted.org/packages/34/c9/9746cb519d316f561769b51b52a6e1cca54699039af57271c879ec8f3b20/autopycoin-0.1.33-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0b84bafeee1bc596fc7c3847354329c94bd1adb57a68d3c38d4af27e658da8b5",
        "md5": "338f35744b7b92be8a7f4e8807d8e550",
        "sha256": "fc6c902ced3917ee61b09f2b9c521e81d33a5934ba9d595cbd9826169d9b9317"
      },
      "downloads": -1,
      "filename": "autopycoin-0.1.33.tar.gz",
      "has_sig": false,
      "md5_digest": "338f35744b7b92be8a7f4e8807d8e550",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 89326,
      "upload_time": "2022-04-13T16:17:29",
      "upload_time_iso_8601": "2022-04-13T16:17:29.556087Z",
      "url": "https://files.pythonhosted.org/packages/0b/84/bafeee1bc596fc7c3847354329c94bd1adb57a68d3c38d4af27e658da8b5/autopycoin-0.1.33.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}