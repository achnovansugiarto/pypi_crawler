{
  "info": {
    "author": "Tomomitsu Motohashi, Kotaro Tanahashi",
    "author_email": "tomomoto1983@gmail.com, tanahashi@r.recruit.co.jp",
    "bugtrack_url": null,
    "classifiers": [],
    "description": ".. image:: https://img.shields.io/pypi/v/codableopt.svg\n    :target: https://pypi.python.org/pypi/codableopt\n    \n.. image:: https://readthedocs.org/projects/codable-model-optimizer/badge/?version=latest\n    :target: https://codable-model-optimizer.readthedocs.io/ja/latest/?badge=latest\n    :alt: Documentation Status\n\n\n    \n=========================\ncodable-model-optimizer\n=========================\nOptimization problem meta-heuristics solver for easy modeling.\n\n.. index-start-installation-marker\n\nInstallation\n================\n\nUse pip\n-------\n\n.. code-block:: bash\n\n    $ pip install codableopt\n   \nUse setup.py\n------------\n\n.. code-block:: bash\n\n    # Master branch\n    $ git clone https://github.com/recruit-tech/codable-model-optimizer\n    $ python3 setup.py install\n\n\n\n.. index-end-installation-marker\n\nExample Usage\n=================\n\nSample1\n-------------------\n\n.. index-start-sample1\n\n.. code-block:: python\n\n    import numpy as np\n    from codableopt import *\n\n    # set problem\n    problem = Problem(is_max_problem=True)\n\n    # define variables\n    x = IntVariable(name='x', lower=np.double(0), upper=np.double(5))\n    y = DoubleVariable(name='y', lower=np.double(0.0), upper=None)\n    z = CategoryVariable(name='z', categories=['a', 'b', 'c'])\n\n\n    # define objective function\n    def objective_function(var_x, var_y, var_z, parameters):\n        obj_value = parameters['coef_x'] * var_x + parameters['coef_y'] * var_y\n\n        if var_z == 'a':\n            obj_value += 10.0\n        elif var_z == 'b':\n            obj_value += 8.0\n        else:\n            # var_z == 'c'\n            obj_value -= 3.0\n\n        return obj_value\n\n\n    # set objective function and its arguments\n    problem += Objective(objective=objective_function,\n                         args_map={'var_x': x,\n                                   'var_y': y,\n                                   'var_z': z,\n                                   'parameters': {'coef_x': -3.0, 'coef_y': 4.0}})\n\n    # define constraint\n    problem += 2 * x + 4 * y + 2 * (z == 'a') + 3 * (z == ('b', 'c')) <= 8\n    problem += 2 * x - y + 2 * (z == 'b') > 3\n\n    print(problem)\n\n    solver = OptSolver()\n\n    # generate optimization methods to be used within the solver\n    method = PenaltyAdjustmentMethod(steps=40000)\n\n    answer, is_feasible = solver.solve(problem, method)\n    print(f'answer:{answer}, answer_is_feasible:{is_feasible}')\n\n.. index-end-sample1\n\nSample2\n-------------------\n\n\n.. code-block:: python\n\n    import random\n    from itertools import combinations\n\n    from codableopt import Problem, Objective, CategoryVariable, OptSolver, PenaltyAdjustmentMethod\n\n\n    # define distance generating function\n    def generate_distances(args_place_names):\n        generated_distances = {}\n        for point_to_point in combinations(['start'] + args_place_names, 2):\n            distance_value = random.randint(20, 40)\n            generated_distances[point_to_point] = distance_value\n            generated_distances[tuple(reversed(point_to_point))] = distance_value\n        for x in ['start'] + args_place_names:\n            generated_distances[(x, x)] = 0\n\n        return generated_distances\n\n\n    # generate TSP problem\n    PLACE_NUM = 30\n    destination_names = [f'destination_{no}' for no in range(PLACE_NUM)]\n    place_names = [f'P{no}' for no in range(PLACE_NUM)]\n    distances = generate_distances(place_names)\n    destinations = [CategoryVariable(name=destination_name, categories=place_names)\n                    for destination_name in destination_names]\n\n    # set problem\n    problem = Problem(is_max_problem=False)\n\n\n    # define objective function\n    def calc_distance(var_destinations, para_distances):\n        return sum([para_distances[(x, y)] for x, y in zip(\n            ['start'] + var_destinations, var_destinations + ['start'])])\n\n\n    # set objective function and its arguments\n    problem += Objective(objective=calc_distance,\n                         args_map={'var_destinations': destinations, 'para_distances': distances})\n\n    # define constraint\n    # constraint formula that always reaches all points at least once\n    for place_name in place_names:\n        problem += sum([(destination == place_name) for destination in destinations]) >= 1\n\n    # optimization implementation\n    solver = OptSolver(round_times=4, debug=True, debug_unit_step=1000)\n    method = PenaltyAdjustmentMethod(steps=10000, delta_to_update_penalty_rate=0.9)\n    answer, is_feasible = solver.solve(problem, method, n_jobs=-1)\n\n    print(f'answer_is_feasible:{is_feasible}')\n    root = ['start'] + [answer[root] for root in destination_names] + ['start']\n    print(f'root: {\" -> \".join(root)}')\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/recruit-tech/codable-model-optimizer",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/recruit-tech/codable-model-optimizer",
    "keywords": "optimization,solver,modeling,meta-heuristics,mathematical optimization",
    "license": "Apache 2.0",
    "maintainer": "Kotaro Tanahashi",
    "maintainer_email": "tanahashi@r.recruit.co.jp",
    "name": "codableopt",
    "package_url": "https://pypi.org/project/codableopt/",
    "platform": null,
    "project_url": "https://pypi.org/project/codableopt/",
    "project_urls": {
      "Download": "https://github.com/recruit-tech/codable-model-optimizer",
      "Homepage": "https://github.com/recruit-tech/codable-model-optimizer"
    },
    "release_url": "https://pypi.org/project/codableopt/0.1.2/",
    "requires_dist": [
      "numpy (>=1.22.0)"
    ],
    "requires_python": ">=3.7, <3.11",
    "summary": "Optimization problem meta-heuristics solver for easy modeling.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14636746,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a764c849fb42ee8efbcf3ae7b55e9a5bb75fbba2e6adf28dbc0451b62954dc16",
          "md5": "7d0cbbf88f61747ddbd842157a81ff1d",
          "sha256": "e89ee106db0bbd264b9da9a0ad51c2c3567dafd089caa7b80ef7e9575fcd076b"
        },
        "downloads": -1,
        "filename": "codableopt-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d0cbbf88f61747ddbd842157a81ff1d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8, <3.11",
        "size": 55767,
        "upload_time": "2022-03-24T10:01:34",
        "upload_time_iso_8601": "2022-03-24T10:01:34.119821Z",
        "url": "https://files.pythonhosted.org/packages/a7/64/c849fb42ee8efbcf3ae7b55e9a5bb75fbba2e6adf28dbc0451b62954dc16/codableopt-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ffb1e2ed7c9c9eab8b008bc7aa6064165fb9a52230a2346b4ce282fb34891be",
          "md5": "cecf4ce38b78567594fbcbfdd23633b2",
          "sha256": "b7d5fb1ab11591de4f69f0c8858c2f476d1bf5e509fdeab4c0740f6594ebb443"
        },
        "downloads": -1,
        "filename": "codableopt-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cecf4ce38b78567594fbcbfdd23633b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8, <3.11",
        "size": 87256,
        "upload_time": "2022-03-24T10:01:36",
        "upload_time_iso_8601": "2022-03-24T10:01:36.612886Z",
        "url": "https://files.pythonhosted.org/packages/8f/fb/1e2ed7c9c9eab8b008bc7aa6064165fb9a52230a2346b4ce282fb34891be/codableopt-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1286c5213cc2e0885848c7f0048788fe2f92f4505d774dd8ebcff018b38c3066",
          "md5": "1b91818840062457e9f224ee6128a83b",
          "sha256": "881788ecad6048db122e96e4e728b139acb0e7efc80039271aeb0f34f1e9a778"
        },
        "downloads": -1,
        "filename": "codableopt-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1b91818840062457e9f224ee6128a83b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <3.11",
        "size": 79428,
        "upload_time": "2022-08-03T03:42:57",
        "upload_time_iso_8601": "2022-08-03T03:42:57.031810Z",
        "url": "https://files.pythonhosted.org/packages/12/86/c5213cc2e0885848c7f0048788fe2f92f4505d774dd8ebcff018b38c3066/codableopt-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35b824dfad4b3a6c5a40bd62ef28b213147be9f7ddac1466a8b772555b36f758",
          "md5": "eeb8567fc8438e6cabcb9c00114e20b6",
          "sha256": "9277badb1d842410283d8e059f9da2b67022e0b688d1e6f36b1863fcca299571"
        },
        "downloads": -1,
        "filename": "codableopt-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "eeb8567fc8438e6cabcb9c00114e20b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <3.11",
        "size": 93398,
        "upload_time": "2022-08-03T03:42:59",
        "upload_time_iso_8601": "2022-08-03T03:42:59.808888Z",
        "url": "https://files.pythonhosted.org/packages/35/b8/24dfad4b3a6c5a40bd62ef28b213147be9f7ddac1466a8b772555b36f758/codableopt-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1286c5213cc2e0885848c7f0048788fe2f92f4505d774dd8ebcff018b38c3066",
        "md5": "1b91818840062457e9f224ee6128a83b",
        "sha256": "881788ecad6048db122e96e4e728b139acb0e7efc80039271aeb0f34f1e9a778"
      },
      "downloads": -1,
      "filename": "codableopt-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1b91818840062457e9f224ee6128a83b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <3.11",
      "size": 79428,
      "upload_time": "2022-08-03T03:42:57",
      "upload_time_iso_8601": "2022-08-03T03:42:57.031810Z",
      "url": "https://files.pythonhosted.org/packages/12/86/c5213cc2e0885848c7f0048788fe2f92f4505d774dd8ebcff018b38c3066/codableopt-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35b824dfad4b3a6c5a40bd62ef28b213147be9f7ddac1466a8b772555b36f758",
        "md5": "eeb8567fc8438e6cabcb9c00114e20b6",
        "sha256": "9277badb1d842410283d8e059f9da2b67022e0b688d1e6f36b1863fcca299571"
      },
      "downloads": -1,
      "filename": "codableopt-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "eeb8567fc8438e6cabcb9c00114e20b6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <3.11",
      "size": 93398,
      "upload_time": "2022-08-03T03:42:59",
      "upload_time_iso_8601": "2022-08-03T03:42:59.808888Z",
      "url": "https://files.pythonhosted.org/packages/35/b8/24dfad4b3a6c5a40bd62ef28b213147be9f7ddac1466a8b772555b36f758/codableopt-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}