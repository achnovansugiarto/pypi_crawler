{
  "info": {
    "author": "",
    "author_email": "Mansueto Pierluigi <pierluigimansueto@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.10",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "[![Python 3.10](https://img.shields.io/badge/python-3.10.6-blue.svg)](https://www.python.org/downloads/release/python-3106/)\n[![license](https://img.shields.io/badge/license-apache_2.0-orange.svg)](https://opensource.org/licenses/Apache-2.0)\n[![DOI](https://zenodo.org/badge/562917525.svg)](https://zenodo.org/badge/latestdoi/562917525)\n\n![Alt Text](https://github.com/pierlumanzu/nsma/raw/main/README_Front_Image.gif)\n## NSMA: A Memetic Procedure for Global Multi-Objective Optimization\n\nImplementation of the NSMA Algorithm proposed in\n\n[Lapucci, M., Mansueto, P. & Schoen, F. A memetic procedure for global multi-objective optimization. Math. Prog. Comp. (2022).](\nhttps://doi.org/10.1007/s12532-022-00231-3)\n\nIf you have used our code for research purposes, please cite the publication mentioned above.\nFor the sake of simplicity, we provide the Bibtex format:\n\n```\n@Article{Lapucci2022,\n    author={Lapucci, Matteo and Mansueto, Pierluigi and Schoen, Fabio},\n    title={A memetic procedure for global multi-objective optimization},\n    journal={Mathematical Programming Computation},\n    year={2022},\n    month={Nov},\n    day={22},\n    issn={1867-2957},\n    doi={10.1007/s12532-022-00231-3},\n    url={https://doi.org/10.1007/s12532-022-00231-3}\n}\n```\n\n#### Main Dependencies\n\n* ```python v3.10.6```\n* ```pip v22.2.2```\n* ```numpy v1.22.3```\n* ```scipy v1.7.3```\n* ```matplotlib``` Windows: ```v3.5.3```, Linux: ```v3.5.2```, MacOSX: ```v3.6.1```\n* ```tensorflow``` Windows: ```v2.9.1```, Linux: ```v2.8.2```, MacOSX: ```v2.10.0```\n* ```gurobipy v9.5.2```\n* ```progressbar2 v4.2.0```\n\n#### Gurobi Optimizer\n\nIn order to run some parts of the code, the [Gurobi](https://www.gurobi.com/) Optimizer needs to be installed and, in addition, a valid Gurobi licence is required. \nHowever, the employment of the Gurobi Optimizer is not mandatory to execute the code. \nIndeed, we provide alternative scripts where the HiGHS dual simplex solver implementation by [SciPy](https://scipy.org/) is used.\n\n### Usage\n\nWe refer to the code documentation and the related GitHub repository for all the information. \n\nAn usage example could be the following:\n```python\nimport tensorflow as tf\nfrom nsma.algorithms.memetic.nsma import NSMA\nfrom nsma.problems.man.man_instance import MAN1\nfrom nsma.general_utils.pareto_utils import points_initialization\n\ntf.compat.v1.disable_eager_execution()\n\nsession = tf.compat.v1.Session()\nwith session.as_default():\n    algorithm = NSMA(max_iter=None, \n                     max_time=2, \n                     max_f_evals=None, \n                     verbose=True, \n                     verbose_interspace=10, \n                     plot_pareto_front=True, \n                     plot_pareto_solutions=False, \n                     plot_dpi=100, \n                     pop_size=100, \n                     crossover_probability=0.9, \n                     crossover_eta=20, \n                     mutation_eta=20, \n                     shift=10, \n                     crowding_quantile=0.9, \n                     n_opt=5, \n                     FMOPG_max_iter=5, \n                     theta_for_stationarity=-1e-10, \n                     theta_tol=-1e-1, \n                     theta_dec_factor=10**(-0.5), \n                     gurobi=True, \n                     gurobi_method=1, \n                     gurobi_verbose=False, \n                     ALS_alpha_0=1, \n                     ALS_delta=0.5, \n                     ALS_beta=10**-4, \n                     ALS_min_alpha=1e-7)\n    problem = MAN1(n=5)\n    initial_p_list, initial_f_list, n_initial_points = points_initialization(problem, 'hyper', 5)\n    p_list, f_list, elapsed_time = algorithm.search(initial_p_list, initial_f_list, problem)\n```\n\n### Contact\n\nIf you have any question, feel free to contact me:\n\n[Pierluigi Mansueto](https://webgol.dinfo.unifi.it/pierluigi-mansueto/)<br>\nGlobal Optimization Laboratory ([GOL](https://webgol.dinfo.unifi.it/))<br>\nUniversity of Florence<br>\nEmail: pierluigi dot mansueto at unifi dot it\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "Multi-objective optimization,Memetic algorithm,NSGA-II,Descent method,Pareto front approximation",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nsma",
    "package_url": "https://pypi.org/project/nsma/",
    "platform": null,
    "project_url": "https://pypi.org/project/nsma/",
    "project_urls": {
      "Homepage": "https://github.com/pierlumanzu/nsma",
      "Tracker": "https://github.com/pierlumanzu/nsma/issues"
    },
    "release_url": "https://pypi.org/project/nsma/1.0.7/",
    "requires_dist": [
      "progressbar2 (~=4.2.0)",
      "gurobipy (~=9.5.2)",
      "numpy (~=1.22.3)",
      "scipy (~=1.7.3)",
      "matplotlib (~=3.6.1) ; platform_system == \"Darwin\"",
      "tensorflow (>=2.10.0) ; platform_system == \"Darwin\"",
      "pyqt5 (~=5.15.7) ; platform_system == \"Darwin\"",
      "matplotlib (~=3.5.2) ; platform_system == \"Linux\"",
      "tensorflow (>=2.8.2) ; platform_system == \"Linux\"",
      "matplotlib (~=3.5.3) ; platform_system == \"Windows\"",
      "tensorflow (>=2.9.1) ; platform_system == \"Windows\""
    ],
    "requires_python": ">=3.10",
    "summary": "NSMA: A Memetic Procedure for Global Multi-Objective Optimization.",
    "version": "1.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16637374,
  "releases": {
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87842739818d040d3b900b9c2ead0e66789239ab8f13b83d5dcbf02e64f85e26",
          "md5": "5fbfe956f73b288eced0e56f256e88fc",
          "sha256": "2546a0898615275b456fd5e443ffd22f7dae01c69e33ef752ce713748005e40a"
        },
        "downloads": -1,
        "filename": "nsma-1.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5fbfe956f73b288eced0e56f256e88fc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 56789,
        "upload_time": "2023-01-31T17:05:14",
        "upload_time_iso_8601": "2023-01-31T17:05:14.392169Z",
        "url": "https://files.pythonhosted.org/packages/87/84/2739818d040d3b900b9c2ead0e66789239ab8f13b83d5dcbf02e64f85e26/nsma-1.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f38b698ccdf4789f6bcf626f05293dac8ac722d864dcbbf1b873db8c9d7a23b",
          "md5": "4238ecb9ec71e5911a9540338f11d077",
          "sha256": "bc2ab1a4e6ed567ab9220bca752505fabe5c522ca3d02fe85c6af7fcbb160b3c"
        },
        "downloads": -1,
        "filename": "nsma-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "4238ecb9ec71e5911a9540338f11d077",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 37870,
        "upload_time": "2023-01-31T17:05:16",
        "upload_time_iso_8601": "2023-01-31T17:05:16.612937Z",
        "url": "https://files.pythonhosted.org/packages/9f/38/b698ccdf4789f6bcf626f05293dac8ac722d864dcbbf1b873db8c9d7a23b/nsma-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "87842739818d040d3b900b9c2ead0e66789239ab8f13b83d5dcbf02e64f85e26",
        "md5": "5fbfe956f73b288eced0e56f256e88fc",
        "sha256": "2546a0898615275b456fd5e443ffd22f7dae01c69e33ef752ce713748005e40a"
      },
      "downloads": -1,
      "filename": "nsma-1.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5fbfe956f73b288eced0e56f256e88fc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 56789,
      "upload_time": "2023-01-31T17:05:14",
      "upload_time_iso_8601": "2023-01-31T17:05:14.392169Z",
      "url": "https://files.pythonhosted.org/packages/87/84/2739818d040d3b900b9c2ead0e66789239ab8f13b83d5dcbf02e64f85e26/nsma-1.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f38b698ccdf4789f6bcf626f05293dac8ac722d864dcbbf1b873db8c9d7a23b",
        "md5": "4238ecb9ec71e5911a9540338f11d077",
        "sha256": "bc2ab1a4e6ed567ab9220bca752505fabe5c522ca3d02fe85c6af7fcbb160b3c"
      },
      "downloads": -1,
      "filename": "nsma-1.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "4238ecb9ec71e5911a9540338f11d077",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 37870,
      "upload_time": "2023-01-31T17:05:16",
      "upload_time_iso_8601": "2023-01-31T17:05:16.612937Z",
      "url": "https://files.pythonhosted.org/packages/9f/38/b698ccdf4789f6bcf626f05293dac8ac722d864dcbbf1b873db8c9d7a23b/nsma-1.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}