{
  "info": {
    "author": "HuangBiao",
    "author_email": "19941222hb@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "tornado_hbredis \n==================\n\n A tornado redis driver ,it's actually encapsulation  for `tornadis <https://github.com/thefab/tornadis>`_\n\n\nQuickstarted\n------------------\n\nstring operation\n^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    from tornado_hbredis import TornadoHBRedis\n    \n    client = TornadoHBRedis('localhost', 6379, autoconnect=True, bytes_decode=False)\n    # params: 'autoconnect' default value is True\n    #         'bytes_decode' default value is False,which means the data from db will be bytes\n    #                if 'bytes_decode' equal to True, which means the data from db will decoded\n    \n    yield client.set(\"name\", \"john\")\n    yield client.sget(\"name\")\n    # return opertaon result\n    yield client.incrby(\"age\", 2)\n    yield client.incr(\"age\")\n    yield client.decrby(\"age\", 2)\n    yield client.decr(\"age\")\n    yield client.incrbyfloat(\"key\", 0.1)\n    # return str result length\n    yield client.append(\"name\", \"xxxx\")\n    yield client.strlen(\"name\")\n    \n    yield client.mset({\"key1\":\"val1\", \"key2\":\"val2\"})\n    yield client.mget(\"key1\", \"key2\")\n    # or yield client.mget([\"key1\", \"key2\"])\n   \n    yield client.getbit(\"key\", offset=1)\n    yield client.setbit(\"key\", offset=1, 1)\n    yield client.bitcount(\"key\", 0, 1)\n    yield client.bit_or(\"key1\", \"key2\", resultkey=None)\n    yield client.bit_and(\"key1\", \"key2\", resultkey=None)\n    yield client.bit_xor(\"key1\", \"key2\", resultkey=None)\n    yield client.bit_not(\"key\", resultkey=None)\n \n\nhash operation\n^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    from tornado_hbredis import TornadoHBRedis\n\n    client = TornadoHBRedis(\"localhost\", 6379)\n    \n    yield client.hmset(\"key\", {\"field1\":\"xxxx\" ,\"field2\":21})\n    yield client.hmget(\"key\", \"field1\", \"field2\")\n    # or yield client.hmget(\"key\", [\"field1\", \"field2\"])\n    yield client.hgetall(\"key\")\n    yield client.hget(\"key\", \"field\")\n    yield client.hdel(\"key\", \"field1\", \"field2\")\n    # or yield client.hdel(\"key\", [\"field1\", \"field2\"])\n    yield client.hkeys(\"key\")\n    yield client.hlen(\"key\")\n    yield client.hvals(\"key\")\n    yield client.hexists(\"key\",\"field\")\n    yield client.hincrby(\"key\",\"field\", 20)\n\n\nlist operation\n^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n    \n    from tornado_hbredis import TornadoHBRedis \n    \n    client = TornadoHBRedis(\"localhost\", 6379)\n  \n    yield client.lpush(\"list1\", 12, 32 ,32)\n    # or yield client.lpush(\"list1\",[12, 32, 32])\n    yield client.rpush(\"list1\", \"21\", \"43\")\n    # or yield client.rpush(\"list1\",[\"21\", \"43\"])\n    yield client.lrange(\"list1\", 0, -1)\n    yield client.lpop(\"list1\")\n    yield client.rpop(\"list1\")\n    yield client.llen(\"list1\")\n    yield client.lrem(\"list1\", count=3 ,\"marble\")\n    yield client.lindex(\"list1\", 2)\n    yield client.lset(\"list1\", 2, \"hello\")\n    yield client.ltrim(\"list1\", 1, 4)\n    yield client.linsert(\"list1\", \"pivot\", \"value\", direc=\"after\")\n    yield client.linsertafter(\"list1\", \"pivot\", \"value\")\n    yield client.linsertbefore(\"list1\", \"pivot\", \"value\")\n    yield client.rpoplpush(\"src_list\", \"dest_list\") \n\n\nset operation\n^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    from tornado_hbredis import TornadoHBRedis \n    \n    client = TornadoHBRedis(\"localhost\", 6379)\n\n    yield client.sadd(\"set1\", \"yyy\")\n    # or yield client.sadd(\"set1\", [\"xxx\",\"zzz\"])\n    yield client.srem(\"set1\", \"yyy\")\n    #or  yield client.srem(\"set1\", [\"xxx\",\"zzz\"])\n    yield client.smembers(\"set1\")\n    yield client.sismember(\"set1\",\"xx\")\n    yield client.sdiff(\"set1\",\"set2\")\n    yield client.sinter(\"set1\", \"set2\")\n    yield client.sunion(\"set1\", \"set2\")\n    yield client.scard(\"set1\")\n    yield client.sdiffstore(\"set3\",\"set1\",\"set2\")\n    yield client.sunionstore(\"set4\",\"set1\",\"set2\")\n    yield client.srandmember(\"set1\", 2)\n    yield client.smembers(\"set4\")\n    yield client.spop(\"set1\")\n\n\ngeneral commands\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    from tornado_hbredis import TornadoHBRedis \n    \n    client = TornadoHBRedis(\"localhost\", 6379)\n\n    yield client.delete(\"set4\")\n    yield client.exists(\"set4\")\n    yield client.expire(\"key\", 40)\n    yield cleint.expireat(\"key\",123832190)\n    yield client.allkeys(\"*\")\n    yield client.keytype(\"set1\")\n    yield client.ttl(\"set1\")\n    yield client.rename(\"old_kname\", \"newkeyname\")\n    yield client.renamenx(\"old_kname\", \"newkeyname\")\n    yield client.move(\"key\", \"db_number\")\n    yield client.persist(\"key\")\n    yield client.pexpire(\"key\", \"millisecond\")\n    yield client.pexipreat(\"key\",\"milisecond timestamp\")\n    yield cleint.pttl(\"key\")\n\n\nserver commands\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    from tornado_hbredis import TornadoHBRedis \n    \n    client = TornadoHBRedis(\"localhost\", 6379)\n    \n    yield client.dbsize()\n    yield client.flushall()\n    yield client.flushdb()\n\n\npipeline \n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n      \n    from tornado_hbredis import TornadoHBRedis \n    \n    client = TornadoHBRedis(\"localhost\", 6379)\n\n    pipeline = client.pipeline()\n    pipeline.set(\"address\",\"foo\")\n    pipeline.hmset(\"hash\",{\"name\": \"john\", \"age\": 21})\n    pipeline.lpush(\"xxx\", [21,43,43,43,54])\n    yield pipeline.execute()\n\n\n    \nDetail\n------------\n\n  The detail api refer to `here <tornado_hbredis.py>`_\n\n\nLICENSE\n------------\n\n  `MIT LICENSE <LICENSE>`_",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/free-free/tornado_hbredis",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "tornado_hbredis",
    "package_url": "https://pypi.org/project/tornado_hbredis/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/tornado_hbredis/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/free-free/tornado_hbredis"
    },
    "release_url": "https://pypi.org/project/tornado_hbredis/0.3/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "tornado_hbredis is an asynchronous redis client for tornado",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2292836,
  "releases": {
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b81953089bf9d9a1b15ac8bb8c72712d18bfacd65cb86601a92eb8f8c4f6a39d",
          "md5": "b521eee85b66468284ae9ce20b4572f8",
          "sha256": "a7d095fd06e4a8d5ec77264ec33fee55cab4befc36b9d87c7bda806fb6347d1d"
        },
        "downloads": -1,
        "filename": "tornado_hbredis-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b521eee85b66468284ae9ce20b4572f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6502,
        "upload_time": "2016-08-20T17:54:14",
        "upload_time_iso_8601": "2016-08-20T17:54:14.511498Z",
        "url": "https://files.pythonhosted.org/packages/b8/19/53089bf9d9a1b15ac8bb8c72712d18bfacd65cb86601a92eb8f8c4f6a39d/tornado_hbredis-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b81953089bf9d9a1b15ac8bb8c72712d18bfacd65cb86601a92eb8f8c4f6a39d",
        "md5": "b521eee85b66468284ae9ce20b4572f8",
        "sha256": "a7d095fd06e4a8d5ec77264ec33fee55cab4befc36b9d87c7bda806fb6347d1d"
      },
      "downloads": -1,
      "filename": "tornado_hbredis-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "b521eee85b66468284ae9ce20b4572f8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6502,
      "upload_time": "2016-08-20T17:54:14",
      "upload_time_iso_8601": "2016-08-20T17:54:14.511498Z",
      "url": "https://files.pythonhosted.org/packages/b8/19/53089bf9d9a1b15ac8bb8c72712d18bfacd65cb86601a92eb8f8c4f6a39d/tornado_hbredis-0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}