{
  "info": {
    "author": "Jeremy Turner",
    "author_email": "jeremy@jeremymturner.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "Generate ADIF For Satellite QSOs\n================================\n\nQuick Installation\n==================\n\n::\n\n    pip install git+https://github.com/jeremymturner/pysatadif.git\n\n\nUpgrading\n=========\n\n::\n\n    pip install --upgrade git+https://github.com/jeremymturner/pysatadif.git\n\n\nQuick Usage\n==========\n\n::\n\n$ pysatadif --satname SO-50 --timeon 0050 --qso N0CALL --qso N1CALL --qso N2CALL,DM00 --output adif\n\n\nFull Usage\n==========\n\n::\n\nusage: pysatadif [-h] -s SATNAME -n TIMEON [-f TIMEOFF] [-d QSODATE]\n                 [-g MYGRID] [-r MYRIG] [-c OPERATOR] [-t TXPWR] -q QSO\n                 [-o OUTPUT] [-v]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SATNAME, --satname SATNAME\n                        Satellites to track\n  -n TIMEON, --timeon TIMEON\n                        Start time of QSO (HHMMSS)\n  -f TIMEOFF, --timeoff TIMEOFF\n                        End time of QSO (HHMMSS)\n  -d QSODATE, --qsodate QSODATE\n                        QSO Date (YYYYMMDD)\n  -g MYGRID, --mygrid MYGRID\n                        My grid square\n  -r MYRIG, --myrig MYRIG\n                        My rig\n  -c OPERATOR, --operator OPERATOR\n                        My callsign\n  -t TXPWR, --txpwr TXPWR\n                        TX Power\n  -q QSO, --qso QSO     QSO callsign and optionally grid (eg N0CALL,DN70)\n  -o OUTPUT, --output OUTPUT\n                        Output Format (text, adif)\n  -v, --verbose         Print verbose debugging messages\n\n\nConfiguration\n=============\nRun pysatadif once. Then see $HOME/.pysatadif/defaults.json\n\nYou may configure your callsign, maidenhead grid square, radio, and \ntransmitting power which will apply to all passes. You may override \nthese at any time by using the command-line switches.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jeremymturner/pysatadif",
    "keywords": "hamradio satellites adif",
    "license": "Apache",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pysatical",
    "package_url": "https://pypi.org/project/pysatical/",
    "platform": "",
    "project_url": "https://pypi.org/project/pysatical/",
    "project_urls": {
      "Homepage": "https://github.com/jeremymturner/pysatadif"
    },
    "release_url": "https://pypi.org/project/pysatical/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Simple utility to generate proper ADIF for satellite contacts",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3241111,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93facf2847fa7e3d699e93bbd93afa2cc10fb7a215eae0dfd3950f2c5bf19069",
          "md5": "d6b6fe9f887e18ad2d2292b9cc7c50d6",
          "sha256": "b4051e2df3dc60b028bb45c470c89e607edb6b443b4607ff181f9ea18a500919"
        },
        "downloads": -1,
        "filename": "pysatical-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d6b6fe9f887e18ad2d2292b9cc7c50d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4253,
        "upload_time": "2017-10-11T03:01:21",
        "upload_time_iso_8601": "2017-10-11T03:01:21.995211Z",
        "url": "https://files.pythonhosted.org/packages/93/fa/cf2847fa7e3d699e93bbd93afa2cc10fb7a215eae0dfd3950f2c5bf19069/pysatical-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "93facf2847fa7e3d699e93bbd93afa2cc10fb7a215eae0dfd3950f2c5bf19069",
        "md5": "d6b6fe9f887e18ad2d2292b9cc7c50d6",
        "sha256": "b4051e2df3dc60b028bb45c470c89e607edb6b443b4607ff181f9ea18a500919"
      },
      "downloads": -1,
      "filename": "pysatical-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d6b6fe9f887e18ad2d2292b9cc7c50d6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4253,
      "upload_time": "2017-10-11T03:01:21",
      "upload_time_iso_8601": "2017-10-11T03:01:21.995211Z",
      "url": "https://files.pythonhosted.org/packages/93/fa/cf2847fa7e3d699e93bbd93afa2cc10fb7a215eae0dfd3950f2c5bf19069/pysatical-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}