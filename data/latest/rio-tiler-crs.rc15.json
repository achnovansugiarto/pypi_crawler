{
  "info": {
    "author": "Vincent Sarago",
    "author_email": "vincent@developmentseed.org",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering :: GIS"
    ],
    "description": "# rio-tiler-crs\n\nA rio-tiler plugin to create tiles in different projection\n\n\n[![Packaging status](https://badge.fury.io/py/rio-tiler-crs.svg)](https://badge.fury.io/py/rio-tiler-crs)\n[![CircleCI](https://circleci.com/gh/cogeotiff/rio-tiler-crs.svg?style=svg)](https://circleci.com/gh/cogeotiff/rio-tiler-crs)\n[![codecov](https://codecov.io/gh/cogeotiff/rio-tiler-crs/branch/master/graph/badge.svg)](https://codecov.io/gh/cogeotiff/rio-tiler-crs)\n\n![](https://user-images.githubusercontent.com/10407788/73080923-9d198a00-3e94-11ea-9644-ce39ffb3882a.jpg)\n\n\n## Install\n\n```bash\n$ pip install pip -U\n$ pip install rio-tiler-crs\n\n# Or using source\n\n$ pip install git+http://github.com/cogeotiff/rio-tiler-crs\n```\n\n## How To\n\nrio-tiler-crs uses [morecantile](https://github.com/developmentseed/morecantile) to define the custom tiling grid schema.\n\n1. Define grid system\n```python\nimport morecantile\nfrom rasterio.crs import CRS\n\n# Use default TMS\ntms = morecantile.tms.get(\"WorldCRS84Quad\")\n\n# or create a custom TMS\ncrs = CRS.from_epsg(3031)  # Morecantile TileMatrixSet uses Rasterio CRS object\nextent = [-948.75, -543592.47, 5817.41, -3333128.95]  # From https:///epsg.io/3031\ntms = morecantile.TileMatrixSet.custom(extent, crs)\n```\n\n2. read tile\n\n```python\nfrom rio_tiler_crs import COGReader\n\n# Read tile x=10, y=10, z=4\nwith COGReader(\"myfile.tif\", tms=tms) as cog:\n    tile, mask = cog.tile( 10, 10, 4)\n```\n\n## API\n\n<details>\n\n```python\nclass COGReader:\n    \"\"\"\n    Cloud Optimized GeoTIFF Reader.\n\n    Examples\n    --------\n    with CogeoReader(src_path) as cog:\n        cog.tile(...)\n    \n    with rasterio.open(src_path) as src_dst:\n        with WarpedVRT(src_dst, ...) as vrt_dst:\n            with CogeoReader(None, dataset=vrt_dst) as cog:\n                cog.tile(...)\n\n    with rasterio.open(src_path) as src_dst:\n        with CogeoReader(None, dataset=src_dst) as cog:\n            cog.tile(...)\n\n    Attributes\n    ----------\n    filepath: str\n        Cloud Optimized GeoTIFF path.\n    dataset: rasterio.DatasetReader, optional\n        Rasterio dataset.\n    tms: morecantile.TileMatrixSet, optional\n        TileMatrixSet to use, default is WebMercatorQuad.\n\n    Properties\n    ----------\n    minzoom: int\n        COG minimum zoom level in TMS projection.\n    maxzoom: int\n        COG maximum zoom level in TMS projection.\n    bounds: tuple[float]\n        COG bounds in WGS84 crs.\n    center: tuple[float, float, int]\n        COG center + minzoom\n    colormap: dict\n        COG internal colormap.\n    info: dict\n        General information about the COG (datatype, indexes, ...)\n\n    Methods\n    -------\n    tile(0, 0, 0, indexes=(1,2,3), expression=\"\nB1/B2\", tilesize=512, resampling_methods=\"nearest\")\n        Read a map tile from the COG.\n    part((0,10,0,10), indexes=(1,2,3,), expression=\"\nB1/B20\", max_size=1024)\n        Read part of the COG.\n    preview(max_size=1024)\n        Read preview of the COG.\n    point((10, 10), indexes=1)\n        Read a point value from the COG.\n    stats(pmin=5, pmax=95)\n        Get Raster statistics.\n    meta(pmin=5, pmax=95)\n        Get info + raster statistics\n\n    \"\"\"\n```\n\n</details>\n\n\n- **COGReader.tile()**: Read map tile from a raster\n\n```python\ntms = morecantile.tms.get(\"WorldCRS84Quad\")\nwith COGReader(\"myfile.tif\", tms=tms) as cog:\n    tile, mask = cog.tile(1, 2, 3, tilesize=256)\n\n# With indexes\nwith COGReader(\"myfile.tif\", tms=tms) as cog:\n    tile, mask = cog.tile(1, 2, 3, tilesize=256, indexes=1)\n\n# With expression\nwith COGReader(\"myfile.tif\", tms=tms) as cog:\n    tile, mask = cog.tile(1, 2, 3, tilesize=256, expression=\"B1/B2\")\n```\n\n- **COGReader.part()**: Read part of a raster\n\nNote: `tms` has no effect on `part` read.\n\n```python\ntms = morecantile.tms.get(\"WorldCRS84Quad\")\nwith COGReader(\"myfile.tif\", tms=tms) as cog:\n    data, mask = cog.part((10, 10, 20, 20))\n\n# Limit output size (default is set to 1024)\nwith COGReader(\"myfile.tif\", tms=tms) as cog:\n    data, mask = cog.part((10, 10, 20, 20), max_size=2000)\n\n# Read high resolution\nwith COGReader(\"myfile.tif\", tms=tms) as cog:\n    data, mask = cog.part((10, 10, 20, 20), max_size=None)\n\n# With indexes\nwith COGReader(\"myfile.tif\", tms=tms) as cog:\n     data, mask = cog.part((10, 10, 20, 20), indexes=1)\n\n# With expression\nwith COGReader(\"myfile.tif\", tms=tms) as cog:\n    data, mask = cog.part((10, 10, 20, 20), expression=\"B1/B2\")\n```\n\n- **COGReader.preview()**: Read a preview of a raster\n\nNote: `tms` has no effect on `part` read.\n\n```python\nwith COGReader(\"myfile.tif\") as cog: \n    data, mask = cog.preview()\n\n# With indexes\nwith COGReader(\"myfile.tif\") as cog: \n    data, mask = cog.preview(indexes=1)\n\n# With expression\nwith COGReader(\"myfile.tif\") as cog: \n    data, mask = cog.preview(expression=\"B1+2,B1*4\")\n```\n\n- **COGReader.point()**: Read point value of a raster\n\nNote: `tms` has no effect on `part` read.\n\n```python\nwith COGReader(\"myfile.tif\") as cog: \n    print(cog.point(-100, 25))\n\n# With indexes\nwith COGReader(\"myfile.tif\") as cog: \n    print(cog.point(-100, 25, indexes=1)) \n[1]\n\n# With expression\nwith COGReader(\"myfile.tif\") as cog: \n    print(cog.point(-100, 25, expression=\"B1+2,B1*4\"))\n[3, 4]\n```\n\n- **COGReader.info**: Return simple metadata about the raster\n\n```python\nwith COGReader(\"myfile.tif\") as cog:\n    print(cog.info)\n{\n    \"bounds\": [-119.05915661478785, 13.102845359730287, -84.91821332299578, 33.995073647795806],\n    \"center\": [-101.98868496889182, 23.548959503763047, 3],\n    \"minzoom\": 3,\n    \"maxzoom\": 12,\n    \"band_metadata\": [[1, {}]],\n    \"band_descriptions\": [[1,\"band1\"]],\n    \"dtype\": \"int8\",\n    \"colorinterp\": [\"palette\"],\n    \"nodata_type\": \"Nodata\",\n    \"colormap\": {\n        \"0\": [0, 0, 0, 0],\n        \"1\": [0, 61, 0, 255],\n        ...\n    }\n}\n```\n\n- **COGReader.stats()**: Return image statistics (Min/Max/Stdev)\n\n```python\nwith COGReader(\"myfile.tif\") as cog:\n    print(cog.stats())\n{\n    \"1\": {\n        \"pc\": [1, 16],\n        \"min\": 1,\n        \"max\": 18,\n        \"std\": 4.069636227214257,\n        \"histogram\": [\n            [...],\n            [...]\n        ]\n    }\n}\n```\n\n- **COGReader.metadata()**: Return COG info + statistics\n\n```python\nwith COGReader(\"myfile.tif\") as cog:\n    print(cog.metadata())\n{\n    \"bounds\": [-119.05915661478785, 13.102845359730287, -84.91821332299578, 33.995073647795806],\n    \"center\": [-101.98868496889182, 23.548959503763047, 3],\n    \"minzoom\": 3,\n    \"maxzoom\": 12,\n    \"band_metadata\": [[1, {}]],\n    \"band_descriptions\": [[1,\"band1\"]],\n    \"dtype\": \"int8\",\n    \"colorinterp\": [\"palette\"],\n    \"nodata_type\": \"Nodata\",\n    \"colormap\": {\n        \"0\": [0, 0, 0, 0],\n        \"1\": [0, 61, 0, 255],\n        ...\n    }\n    \"statistics\" : {\n        1: {\n            \"pc\": [1, 16],\n            \"min\": 1,\n            \"max\": 18,\n            \"std\": 4.069636227214257,\n            \"histogram\": [\n                [...],\n                [...]\n            ]\n        }\n    }\n}\n   \n```\n\n\n## Example\n\nSee [/demo](/demo)\n\n## Contribution & Development\n\nIssues and pull requests are more than welcome.\n\n**dev install**\n\n```bash\n$ git clone https://github.com/cogeotiff/rio-tiler-crs.git\n$ cd rio-tiler-crs\n$ pip install -e .[dev]\n```\n\n**Python >=3.7 only**\n\nThis repo is set to use `pre-commit` to run *isort*, *flake8*, *pydocstring*, *black* (\"uncompromising Python code formatter\") and mypy when committing new code.\n\n```\n$ pre-commit install\n\n$ git add .\n\n$ git commit -m'my change'\nisort....................................................................Passed\nblack....................................................................Passed\nFlake8...................................................................Passed\nVerifying PEP257 Compliance..............................................Passed\nmypy.....................................................................Passed\n\n$ git push origin\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cogeotiff/rio-tiler-crs",
    "keywords": "COG GIS",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rio-tiler-crs",
    "package_url": "https://pypi.org/project/rio-tiler-crs/",
    "platform": "",
    "project_url": "https://pypi.org/project/rio-tiler-crs/",
    "project_urls": {
      "Homepage": "https://github.com/cogeotiff/rio-tiler-crs"
    },
    "release_url": "https://pypi.org/project/rio-tiler-crs/2.0.2/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "A rio-tiler plugin to create tile for arbitraty grid",
    "version": "2.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8404949,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "341199a943ef8c71bbe074445a46245a4e97e74f409bdde570b9f446fc4ba42d",
          "md5": "19df5cc892bd572b3a0b533b49b90ad3",
          "sha256": "c2c8013d35dc78fdf73d8b63ad0cf6844ab03d1ea4cb3695a01823a12425d123"
        },
        "downloads": -1,
        "filename": "rio-tiler-crs-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "19df5cc892bd572b3a0b533b49b90ad3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 3490,
        "upload_time": "2020-01-24T17:01:17",
        "upload_time_iso_8601": "2020-01-24T17:01:17.080895Z",
        "url": "https://files.pythonhosted.org/packages/34/11/99a943ef8c71bbe074445a46245a4e97e74f409bdde570b9f446fc4ba42d/rio-tiler-crs-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "650d4e7cf1069ce982ecef8ab2a404a6fab5feabb394fbd6391c2d781e3a6ae8",
          "md5": "0ebfd9135980f891060cbd5612cc3a81",
          "sha256": "acf9f22e8e7dcb6f1252eb02ca3d330122c92593b41254c0486fb6f0d674e316"
        },
        "downloads": -1,
        "filename": "rio-tiler-crs-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0ebfd9135980f891060cbd5612cc3a81",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 5033,
        "upload_time": "2020-05-11T19:46:35",
        "upload_time_iso_8601": "2020-05-11T19:46:35.469043Z",
        "url": "https://files.pythonhosted.org/packages/65/0d/4e7cf1069ce982ecef8ab2a404a6fab5feabb394fbd6391c2d781e3a6ae8/rio-tiler-crs-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0839b2e208a56d136badcb01e7510f0714c0cb878c681129cd92120d388e1d51",
          "md5": "ee3b929e705be3995055e43749411e64",
          "sha256": "66ca26de5690bf4b0c3edc596f9e06d497273192d5d4a15ce00e191f60d18177"
        },
        "downloads": -1,
        "filename": "rio-tiler-crs-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ee3b929e705be3995055e43749411e64",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 5038,
        "upload_time": "2020-05-14T01:43:30",
        "upload_time_iso_8601": "2020-05-14T01:43:30.335531Z",
        "url": "https://files.pythonhosted.org/packages/08/39/b2e208a56d136badcb01e7510f0714c0cb878c681129cd92120d388e1d51/rio-tiler-crs-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f635524f0d32ebd583c35a49a7d395eee7dd6330d9d8b2144fb9fbad0262dddb",
          "md5": "06aa9c13e4c8895a9752540b28a596e9",
          "sha256": "7ac4349449064a2c16682ebae490f7814d843df7d0725e59bcc0bef870e82580"
        },
        "downloads": -1,
        "filename": "rio-tiler-crs-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "06aa9c13e4c8895a9752540b28a596e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 5170,
        "upload_time": "2020-05-15T20:57:08",
        "upload_time_iso_8601": "2020-05-15T20:57:08.124591Z",
        "url": "https://files.pythonhosted.org/packages/f6/35/524f0d32ebd583c35a49a7d395eee7dd6330d9d8b2144fb9fbad0262dddb/rio-tiler-crs-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d11869f567d4f16233b78a0ec04ee17a3ab2d6dc068e571de347d1843607a0e8",
          "md5": "6fa9289c17531fd19a2f999359c8371c",
          "sha256": "278bd2cb73f08cb48efc2d3496576d608945430f9021b68c2513c6ebfa5b6815"
        },
        "downloads": -1,
        "filename": "rio-tiler-crs-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6fa9289c17531fd19a2f999359c8371c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 5326,
        "upload_time": "2020-05-22T19:04:48",
        "upload_time_iso_8601": "2020-05-22T19:04:48.776990Z",
        "url": "https://files.pythonhosted.org/packages/d1/18/69f567d4f16233b78a0ec04ee17a3ab2d6dc068e571de347d1843607a0e8/rio-tiler-crs-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37bc08b87a9255be840716d85e931d6e598f05274181b9de8e5268274084b4cf",
          "md5": "5616a1f36c6e16d4d7b7949be63c7997",
          "sha256": "ea41a36739cc6da44263c248cfc55b5139a48bb3aeaca5bf75a5fbb46db97cc3"
        },
        "downloads": -1,
        "filename": "rio-tiler-crs-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5616a1f36c6e16d4d7b7949be63c7997",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 8120,
        "upload_time": "2020-05-29T15:01:42",
        "upload_time_iso_8601": "2020-05-29T15:01:42.567929Z",
        "url": "https://files.pythonhosted.org/packages/37/bc/08b87a9255be840716d85e931d6e598f05274181b9de8e5268274084b4cf/rio-tiler-crs-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "708916a64c9e552518ba4da316d78be94cd1405d72e2ce01531f2d2d5bc6e105",
          "md5": "2b9696ea7e929a489de4cd5f18651bdf",
          "sha256": "e2663421cebccc2edd9bb6d345bf42dd97d00a9f370fecd879132d15b6e8969e"
        },
        "downloads": -1,
        "filename": "rio-tiler-crs-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2b9696ea7e929a489de4cd5f18651bdf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 8129,
        "upload_time": "2020-05-30T02:12:11",
        "upload_time_iso_8601": "2020-05-30T02:12:11.131097Z",
        "url": "https://files.pythonhosted.org/packages/70/89/16a64c9e552518ba4da316d78be94cd1405d72e2ce01531f2d2d5bc6e105/rio-tiler-crs-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7dadc4f51a8a4f148955e971789d6107ca86991a716f56dec84c4d8f4f41b39",
          "md5": "4a1e1d21862e1f6f7b662e6afce15252",
          "sha256": "3a6a8e16200c2382a2e465e03905c56abe79cb30d4ceb7b0e183ffdc8033a3c8"
        },
        "downloads": -1,
        "filename": "rio-tiler-crs-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4a1e1d21862e1f6f7b662e6afce15252",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 8198,
        "upload_time": "2020-06-05T04:32:38",
        "upload_time_iso_8601": "2020-06-05T04:32:38.840652Z",
        "url": "https://files.pythonhosted.org/packages/c7/da/dc4f51a8a4f148955e971789d6107ca86991a716f56dec84c4d8f4f41b39/rio-tiler-crs-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0b7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "027fe31d0cd1d7c4d1699b85e5fac67d899f7152233fe43523a21ea2a1cb3213",
          "md5": "e468ec9a328d2cf7d1af52a1997a6613",
          "sha256": "79c1465ccaa90e6cb3e456fbfb61bdd11a4dbc74527b698f7ac17807b9ee426a"
        },
        "downloads": -1,
        "filename": "rio-tiler-crs-3.0.0b7.tar.gz",
        "has_sig": false,
        "md5_digest": "e468ec9a328d2cf7d1af52a1997a6613",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 11680,
        "upload_time": "2020-10-07T19:41:49",
        "upload_time_iso_8601": "2020-10-07T19:41:49.236536Z",
        "url": "https://files.pythonhosted.org/packages/02/7f/e31d0cd1d7c4d1699b85e5fac67d899f7152233fe43523a21ea2a1cb3213/rio-tiler-crs-3.0.0b7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e652680aae341e596f77083f196b4ab894ded51f2468284420524778339d2d88",
          "md5": "9fa72d0dac07239858a096ef263d3549",
          "sha256": "319b78961fe6ab483ca3684fac3a9d9985830471b8e2fa8ee49178ede35ca486"
        },
        "downloads": -1,
        "filename": "rio-tiler-crs-3.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "9fa72d0dac07239858a096ef263d3549",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 9559,
        "upload_time": "2020-07-23T02:41:24",
        "upload_time_iso_8601": "2020-07-23T02:41:24.282783Z",
        "url": "https://files.pythonhosted.org/packages/e6/52/680aae341e596f77083f196b4ab894ded51f2468284420524778339d2d88/rio-tiler-crs-3.0b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50ca20e2e0c81227ff6962a0ce73e65d46f151a6bd536f3b03b562b6a09aa9e5",
          "md5": "8ffa698bb9b94eb8983a08c0415ecb6d",
          "sha256": "47c5dac0be37d867fb3382fdf0d36d3475c8b37d4621c76b1ba48da261c494ce"
        },
        "downloads": -1,
        "filename": "rio-tiler-crs-3.0b2.tar.gz",
        "has_sig": false,
        "md5_digest": "8ffa698bb9b94eb8983a08c0415ecb6d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 9569,
        "upload_time": "2020-07-29T02:13:51",
        "upload_time_iso_8601": "2020-07-29T02:13:51.954777Z",
        "url": "https://files.pythonhosted.org/packages/50/ca/20e2e0c81227ff6962a0ce73e65d46f151a6bd536f3b03b562b6a09aa9e5/rio-tiler-crs-3.0b2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0b3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c992c26be23c1c31631bbd47f1f6cbff1cf554807196943ba47b186f2eedee13",
          "md5": "7a66dfaafb816f3869075c4b8d1a7a67",
          "sha256": "e2d8fa0fe76b1b6ad618dbfdccdba94090788f541d008f2b2f8de54cd5a0202e"
        },
        "downloads": -1,
        "filename": "rio-tiler-crs-3.0b3.tar.gz",
        "has_sig": false,
        "md5_digest": "7a66dfaafb816f3869075c4b8d1a7a67",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 9565,
        "upload_time": "2020-07-30T20:21:44",
        "upload_time_iso_8601": "2020-07-30T20:21:44.151638Z",
        "url": "https://files.pythonhosted.org/packages/c9/92/c26be23c1c31631bbd47f1f6cbff1cf554807196943ba47b186f2eedee13/rio-tiler-crs-3.0b3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0b4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57f91dd2e02dfe8066137bd1844c93a6dd32b4f2424c3aeb9653cc4670e4f65c",
          "md5": "65e5c20d50ed7b6be4c10ac9967a9b0b",
          "sha256": "b09f5b1c90b9d9025d43be03e4bb3daa8e27dbc2df20d804fdabbe1241923664"
        },
        "downloads": -1,
        "filename": "rio-tiler-crs-3.0b4.tar.gz",
        "has_sig": false,
        "md5_digest": "65e5c20d50ed7b6be4c10ac9967a9b0b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 9431,
        "upload_time": "2020-08-21T21:10:50",
        "upload_time_iso_8601": "2020-08-21T21:10:50.324698Z",
        "url": "https://files.pythonhosted.org/packages/57/f9/1dd2e02dfe8066137bd1844c93a6dd32b4f2424c3aeb9653cc4670e4f65c/rio-tiler-crs-3.0b4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0b5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26105bd5b5ec334787d48ff00933f7192fba0eedb19dcc0a21a3e4b2e0127462",
          "md5": "95fb6316d074e40736acae5d65d9f27e",
          "sha256": "8e1f207002b335ee46adc846bc85fc304ae87bbdfb66f0913ce722f1ecaeb632"
        },
        "downloads": -1,
        "filename": "rio-tiler-crs-3.0b5.tar.gz",
        "has_sig": false,
        "md5_digest": "95fb6316d074e40736acae5d65d9f27e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 11455,
        "upload_time": "2020-09-01T16:47:25",
        "upload_time_iso_8601": "2020-09-01T16:47:25.918585Z",
        "url": "https://files.pythonhosted.org/packages/26/10/5bd5b5ec334787d48ff00933f7192fba0eedb19dcc0a21a3e4b2e0127462/rio-tiler-crs-3.0b5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0b6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89ca3328ecb77956e43c69f60215e92dcaea05203a409fb8f90f28d210fda775",
          "md5": "89e99fdb7ab53ec608bb1c619226d91c",
          "sha256": "41072db573f110a3d7ab71858b89303a9bf4e69c3d3e81e871f782eb722ac3fa"
        },
        "downloads": -1,
        "filename": "rio-tiler-crs-3.0b6.tar.gz",
        "has_sig": false,
        "md5_digest": "89e99fdb7ab53ec608bb1c619226d91c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 11485,
        "upload_time": "2020-10-01T17:11:20",
        "upload_time_iso_8601": "2020-10-01T17:11:20.862465Z",
        "url": "https://files.pythonhosted.org/packages/89/ca/3328ecb77956e43c69f60215e92dcaea05203a409fb8f90f28d210fda775/rio-tiler-crs-3.0b6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c7dadc4f51a8a4f148955e971789d6107ca86991a716f56dec84c4d8f4f41b39",
        "md5": "4a1e1d21862e1f6f7b662e6afce15252",
        "sha256": "3a6a8e16200c2382a2e465e03905c56abe79cb30d4ceb7b0e183ffdc8033a3c8"
      },
      "downloads": -1,
      "filename": "rio-tiler-crs-2.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4a1e1d21862e1f6f7b662e6afce15252",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 8198,
      "upload_time": "2020-06-05T04:32:38",
      "upload_time_iso_8601": "2020-06-05T04:32:38.840652Z",
      "url": "https://files.pythonhosted.org/packages/c7/da/dc4f51a8a4f148955e971789d6107ca86991a716f56dec84c4d8f4f41b39/rio-tiler-crs-2.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}