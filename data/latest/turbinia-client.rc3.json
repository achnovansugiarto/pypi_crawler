{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Turbinia API CLI tool (turbinia-client)\n\n## Summary\nTurbinia-client is a command-line tool that provides an easy-to-use user interface for Turbinia's API server. It allows a user to perform Turbinia operations such as creating new Turbinia processing requests, getting status of existing requests and tasks, and downloading requests output and logs.\n\n## Getting started\nTo get started with the Turbinia API CLI tool you will need to install it on your system. To install the tool, follow the instructions below.\n\n### Installation\nYou can install the latest version of the tool via PyPi.\n```\npip install turbinia-client\n```\nThe package will install the ```turbinia-api-lib``` library as a dependency. More information on how to use the ```turbinia-api-lib``` Python library can be found [here](https://github.com/google/turbinia/master/turbinia/api/client).\n\n### Configuring the client\nThe command-line tool uses a JSON configuration file. By default, the client will search for a ```.turbinia_api_config.json``` file within the user's home directory, or a path specified in the ```TURBINIA_API_CONFIG_PATH``` environment variable.\n\nSupport for multiple Turbinia environments is possible in the configuration file. In the example below, there are two Turbinia environments, ```default``` and ```development```.\n\n```\n{\n\t\"default\": {\n\t\t\"description\": \"This file is used by turbinia-client to determine the location of the API server and if authentication will be used. These options should match your Turbinia deployment.\",\n\t\t\"comments\": \"By default, the credentials and client secrets files are located in the user's home directory.\",\n\t\t\"API_SERVER_ADDRESS\": \"http://localhost\",\n\t\t\"API_SERVER_PORT\": 8000,\n\t\t\"API_AUTHENTICATION_ENABLED\": false,\n\t\t\"CLIENT_SECRETS_FILENAME\": \".client_secrets.json\",\n\t\t\"CREDENTIALS_FILENAME\": \".credentials_default.json\"\n\t},\n\t\"development\": {\n\t\t\"description\": \"Development environment.\",\n\t\t\"API_SERVER_ADDRESS\": \"http://localhost\",\n\t\t\"API_SERVER_PORT\": 8001,\n\t\t\"API_AUTHENTICATION_ENABLED\": false,\n\t\t\"CLIENT_SECRETS_FILENAME\": \".client_secrets_dev.json\",\n\t\t\"CREDENTIALS_FILENAME\": \".credentials_dev.json\"\n\t}\n}\n```\nA specific environment can be accessed by setting the ```TURBINIA_CONFIG_INSTANCE``` environment variable to a valid environment name from the configuration file or alternatively, via the ```-c``` argument. (e.g. ```turbinia-client -c development config list```)\n\n### Usage\nYou can view the help menu with the ```-h``` argument\n\n```\n$ turbinia-client -h\n\nUsage: turbinia-client [OPTIONS] COMMAND [ARGS]...\n\n  Turbinia API command-line tool (turbinia-client).\n\n                          ***    ***\n                           *          *\n                      ***             ******\n                     *                      *\n                     **      *   *  **     ,*\n                       *******  * ********\n                              *  * *\n                              *  * *\n                              %%%%%%\n                              %%%%%%\n                     %%%%%%%%%%%%%%%       %%%%%%\n               %%%%%%%%%%%%%%%%%%%%%      %%%%%%%\n  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  ** *******\n  %%                                                   %%  ***************\n  %%                                (%%%%%%%%%%%%%%%%%%%  *****  **\n    %%%%%        %%%%%%%%%%%%%%%\n    %%%%%%%%%%                     %%          **             ***\n       %%%                         %%  %%             %%%           %%%%,\n       %%%      %%%   %%%   %%%%%  %%%   %%%   %%  %%%   %%%  %%%       (%%\n       %%%      %%%   %%%  %%%     %%     %%/  %%  %%%   %%%  %%%  %%%%%%%%\n       %%%      %%%   %%%  %%%     %%%   %%%   %%  %%%   %%%  %%% %%%   %%%\n       %%%        %%%%%    %%%       %%%%%     %%  %%%    %%  %%%   %%%%%\n\n  This command-line tool interacts with Turbinia's API server.\n\n  You can specify the API server location in ~/.turbinia_api_config.json\n\nOptions:\n  -c, --config_instance TEXT  A Turbinia instance configuration name.\n                              [default: (dynamic)]\n  -p, --config_path TEXT      Path to the .turbinia_api_config.json file..\n                              [default: (dynamic)]\n  -h, --help                  Show this message and exit.\n\nCommands:\n  config  Get Turbinia configuration.\n  jobs    Get a list of enabled Turbinia jobs.\n  result  Get Turbinia request or task results.\n  status  Get Turbinia request or task status.\n  submit  Submit new requests to the Turbinia API server.\n  ```\n\n### Getting the server configuration\n```\nturbinia-client config list\n```\n\n### Getting request or task information\nTo get the status of a Turbinia request:\n```\nturbinia-client status request <request_id>\n```\n\nFor task status:\n```\nturbinia-client status task <task_id>\n```\nwhere <request_id> and <task_id> are the respective Turbinia request or task identifiers.\n\nTo get a summary of all existing requests:\n```\nturbinia-client status summary\n```\n\n### Creating new requests\nNew Turbinia requests can be submitted via turbinia-client using the ```submit``` command. In its simplest form, you only need to pass the evidence type and any required arguments for the specific evidence type. As an example, to submit a new Turbinia request to process a ```RawDisk``` evidence type, run the following command:\n```\nturbinia-client submit rawdisk --source_path /evidence/rawdisk.dd\n```\nEach evidence type will have its own set of required and optional arguments. You can view all possible arguments with:\n```\nturbinia-client submit <evidence_type> -h\n```\nwhere <evidence_type> is a valid Turbinia evidence name.\n\nA list of all valid Turbinia evidence names can be viewed with:\n```\nturbinia-client submit -h\n```\n\n### Creating custom requests\nIt is possible to customize requests with additional parameters. For example, you can provide your own Turbinia recipe and add it to a new Turbinia request as follows:\n```\nturbinia-client submit rawdisk --source_path /evidence/rawdisk.dd --recipe_name /home/user/my_triage_recipe.yaml --requester my_user --reason forensics_case_12345\n```\n\nAn alternative way of providing a Turbinia recipe is to use the ```recipe_data``` argument. The ```recipe_data``` argument takes in a Base64 encoded string value of a valid Turbinia recipe.\n```\nturbinia-client submit rawdisk --source_path /evidence/rawdisk.dd --recipe_data <base64_encoded_recipe_content>\n```\n\n### Getting Turbinia request or task output\nThe ```result``` command can be used to download the output of a specific Turbinia request or task. The current version of the API server will return a ```.tgz``` of the contents of the request or task output directory. The ```.tgz``` file will also include task and worker log files.\n```\nturbinia-client result request <request_id>\n```\n\n```\nturbinia-client result task <task_id>\n```\nBy default, the downloaded file will be placed in the current working directory.\n\n### Getting JSON responses from the API server\nBy default, the tool will format the output from the API server to make it more human-readable. You can pass the ```-j``` argument to any command to print the API server's JSON response instead. For example:\n\n```\nturbinia-client status summary -j\n```\n\n## Reporting bugs and contributing\nPlease report any [bugs](https://github.com/google/turbinia/issues/new) or submit [contributions](https://turbinia.readthedocs.io/en/latest/developer/contributing.html) by following the instructions at the main Turbinia repository.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://turbinia.plumbing/",
    "keywords": "Turbinia Client,Turbinia,Turbinia API Server",
    "license": "Apache License, Version 2.0",
    "maintainer": "Turbinia development team",
    "maintainer_email": "turbinia-dev@googlegroups.com",
    "name": "turbinia-client",
    "package_url": "https://pypi.org/project/turbinia-client/",
    "platform": null,
    "project_url": "https://pypi.org/project/turbinia-client/",
    "project_urls": {
      "Homepage": "http://turbinia.plumbing/"
    },
    "release_url": "https://pypi.org/project/turbinia-client/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Turbinia API Client command-line tool.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16478031,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d688406dad1d9f8946e67e33d0bcacb08cc437c8840ff95b0cbf852706b2619d",
          "md5": "2ede84779338b01d244b21d6deea9116",
          "sha256": "aede0fb20997f63761572154a558927649dd3c33b2472bfc32fdc9e2f09b90a9"
        },
        "downloads": -1,
        "filename": "turbinia_client-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ede84779338b01d244b21d6deea9116",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23487,
        "upload_time": "2023-01-12T20:41:48",
        "upload_time_iso_8601": "2023-01-12T20:41:48.233295Z",
        "url": "https://files.pythonhosted.org/packages/d6/88/406dad1d9f8946e67e33d0bcacb08cc437c8840ff95b0cbf852706b2619d/turbinia_client-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f18249e02cb0b5cbd569f3f5b9a1755f95b6962b154967b83b4bd7611ed8280d",
          "md5": "516bfba0b8c11ba3233ba44942e7814c",
          "sha256": "afc8b4c7cad8cc4e7e25ed3aaf76c297c6cad6bcedf1beb94ec9762ba09d071f"
        },
        "downloads": -1,
        "filename": "turbinia-client-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "516bfba0b8c11ba3233ba44942e7814c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15414,
        "upload_time": "2023-01-12T20:41:50",
        "upload_time_iso_8601": "2023-01-12T20:41:50.059859Z",
        "url": "https://files.pythonhosted.org/packages/f1/82/49e02cb0b5cbd569f3f5b9a1755f95b6962b154967b83b4bd7611ed8280d/turbinia-client-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60c976acf448a79f7165582c8df805c18cc7105272abe5781ab2912e932ff115",
          "md5": "f323ea266283d1befae1887625ba6897",
          "sha256": "8d7eac8be4cdba21d9f327347485c13cf94913c63f6a7ceca6276ab55df810bb"
        },
        "downloads": -1,
        "filename": "turbinia_client-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f323ea266283d1befae1887625ba6897",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23499,
        "upload_time": "2023-01-12T23:27:34",
        "upload_time_iso_8601": "2023-01-12T23:27:34.097384Z",
        "url": "https://files.pythonhosted.org/packages/60/c9/76acf448a79f7165582c8df805c18cc7105272abe5781ab2912e932ff115/turbinia_client-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8809bb2a4d40b96e037937516d630e56c474a34d38364008d8e054acb9281d9",
          "md5": "1b3994053fe511ac2976cda9f1ce52c0",
          "sha256": "24f2d007bd38e5558718eab2d7aa53d54ba1a24105eacb9a6de3e599c78edc8f"
        },
        "downloads": -1,
        "filename": "turbinia-client-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1b3994053fe511ac2976cda9f1ce52c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15452,
        "upload_time": "2023-01-12T23:27:35",
        "upload_time_iso_8601": "2023-01-12T23:27:35.817269Z",
        "url": "https://files.pythonhosted.org/packages/d8/80/9bb2a4d40b96e037937516d630e56c474a34d38364008d8e054acb9281d9/turbinia-client-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1c74f72834cbc6a248eee7b18fe44a73eb9dddf308ea064ea39d4a35b003293",
          "md5": "cb01a85d68e0ffd7dff080eb3066a8e9",
          "sha256": "c71b2896960325f97c90c501a45d4c06f241a30704ddd4a44ceca091eb7b5e89"
        },
        "downloads": -1,
        "filename": "turbinia-client-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cb01a85d68e0ffd7dff080eb3066a8e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19649,
        "upload_time": "2023-01-19T00:00:14",
        "upload_time_iso_8601": "2023-01-19T00:00:14.599715Z",
        "url": "https://files.pythonhosted.org/packages/d1/c7/4f72834cbc6a248eee7b18fe44a73eb9dddf308ea064ea39d4a35b003293/turbinia-client-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d1c74f72834cbc6a248eee7b18fe44a73eb9dddf308ea064ea39d4a35b003293",
        "md5": "cb01a85d68e0ffd7dff080eb3066a8e9",
        "sha256": "c71b2896960325f97c90c501a45d4c06f241a30704ddd4a44ceca091eb7b5e89"
      },
      "downloads": -1,
      "filename": "turbinia-client-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "cb01a85d68e0ffd7dff080eb3066a8e9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19649,
      "upload_time": "2023-01-19T00:00:14",
      "upload_time_iso_8601": "2023-01-19T00:00:14.599715Z",
      "url": "https://files.pythonhosted.org/packages/d1/c7/4f72834cbc6a248eee7b18fe44a73eb9dddf308ea064ea39d4a35b003293/turbinia-client-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}