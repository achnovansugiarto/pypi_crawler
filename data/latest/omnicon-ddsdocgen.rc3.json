{
  "info": {
    "author": "",
    "author_email": "Omnicon Distributed Systems LTD <info@OmniconSystems.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: Other/Proprietary License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.7",
      "Topic :: Communications",
      "Topic :: Documentation"
    ],
    "description": "# OmniCon DDS Document Generator - API\r\n\r\n## Project description\r\n\r\nOmniCon Document Generator (DocGen) generates an ICD/documentation from standard DDS type files.\r\nThe DocGen is utilized via a simple Python API or via a dedicated GUI (see Omnicon DDS DocGen GUI)\r\n\r\n## Installation\r\n\r\n* pip install Omnicon_DDSDocGen\r\n  * Requires: Visual Studio redistributable (https://aka.ms/vs/17/release/vc_redist.x64.exe)\r\n* An Omnnicon license is required to utilize the API. Please Contact Info@OmniconSystems.com.\r\n\r\n## API Usage Example\r\nThe following example generates an PDF & Docx ICD from a provided DDS \"ShapeType.xml\" and a topics mapping,\r\n\"TopicNamesToTypesDefMap.xml\".\r\n\r\n```python\r\nfrom Omnicon_DDSDocGen.Omnicon_DDSDocGen import DDSDocGen\r\n\r\ntry:\r\n    doc_gen = DDSDocGen()\r\nexcept Exception as err:\r\n    print(err)\r\n    exit()\r\n\r\ndoc_gen.generate_document(\r\n    dds_types_files=[\"ShapeType.xml\"],\r\n    dds_topics_types_mapping=\"TopicNamesToTypesDefMap.xml\",\r\n    version=\"v1.0\",\r\n    title=\"Demo ICD\",\r\n    order_alphabetically=True,\r\n    output_file_name=\"DemoICD\",\r\n    output_folder=\"\",\r\n    output_formats=['pdf', 'docx'])\r\n```\r\nShapeType.xml (based on http://www.omg.org/spec/DDS-XML)\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<types xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n  <enum name=\"ShapeFillKind\">\r\n    <enumerator name=\"SOLID_FILL\"/>\r\n    <enumerator name=\"TRANSPARENT_FILL\"/>\r\n    <enumerator name=\"HORIZONTAL_HATCH_FILL\"/>\r\n    <enumerator name=\"VERTICAL_HATCH_FILL\"/>\r\n  </enum>\r\n  <struct name= \"ShapeType\">\r\n    <member name=\"color\" stringMaxLength=\"128\" type=\"string\" key=\"true\"/>\r\n    <member name=\"x\" type=\"int32\"/>\r\n    <member name=\"y\" type=\"int32\"/>\r\n    <member name=\"shapesize\" type=\"int32\"/>\r\n  </struct>\r\n  <struct name= \"ShapeTypeExtended\" baseType=\"ShapeType\">\r\n    <member name=\"fillKind\" type=\"nonBasic\"  nonBasicTypeName= \"ShapeFillKind\"/>\r\n    <member name=\"angle\" type=\"float32\"/>\r\n  </struct>\r\n</types>\r\n```\r\n\r\nTopicNamesToTypesDefMap.xml (based on http://www.omg.org/spec/DDS-XML)\r\n```xml\r\n<dds xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n  <domain_library name=\"Domain_Lib\">\r\n    <domain name=\"Domain\">\r\n      <!--Types Definition-->\r\n      <register_type name=\"ShapeTypeExtended\" type_ref=\"ShapeTypeExtended\" />\r\n\r\n      <!--Topics Definition-->\r\n      <topic name=\"Square\" register_type_ref=\"ShapeTypeExtended\"/>\r\n    </domain>\r\n  </domain_library>\r\n</dds>\r\n```\r\n\r\n## API Arguments\r\n\r\n| Argument                      |Type            |Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  | Optional| Default value |\r\n|:------------------------------|:----|:------------------------------------------\t\t\t\t\t\t\t\t  |:---:|:---:|\r\n| dds_types_files     | list[str] | A list of file or folders names, in an order specified by the user according to files dependencies.|   |  |\r\n| dds_xml_topic_definition\t| string    | An XML file that contains a DDS topic to type mapping. Sending an empty string (\"\") will switch ICD from topic-based to type-based document|  *  | (creates type based document)|\r\n| output_file_name\t\t        | string    | The user's file name of choice | * | \"ICD\"  |\r\n| title\t\t\t                | string    | The title/heading  of the document. This string will be added to the first page of the document. |  *  | \"ICD\" |\r\n| version            \t\t\t| string    | The document's version number - This string will be added to the top page of the ICD. | * | \"1.0\"  |\r\n| order_alphabetically          | bool      | Select the order of generated document topics/types: alphabetically or according to the loaded files order |  *  | True (alphabetically)|\r\n| output_folder                 | string    | The user's output folder of choice\t|  *  |current working directory|\r\n| output_formats\t\t\t\t| list[str] |  A list of desired output formats as strings (list must contain at least one option)  |    | \r\n| progress_callback_function  | function  | A 'pointer' to the function that updates the progress bar.  [(see below)](#Progress Callback Function)|  *  |  None\r\n\r\n### Progress Callback Function\r\nThe progress bar callback function provides the user continues updated on the document generation progress.\r\nThe DocGen will invoke the provided function with the following information:\r\n1. total_steps - total number of steps for the current generation process. \r\n2. current_step - current step the generation process is currently at.\r\n3. info - additional optional textual information regarding the current step (e.g. \"saving docx\")\r\n\r\n```python\r\nProgressBarCallbackExample(total_steps: int, current_step: int, info: str)    \r\n```\r\n\r\n\r\n\r\n## API Return values\r\n**The API returns a tuple: (bool, list[str]).**\r\n* The boolean indicates whether a document was created (True) or not (False).\r\n* The list of strings holds information regarding the creation of the file(s), such as errors detected in a certain topic/type.\r\n    \r\nThe message format is as follows: \r\n\r\n```code\r\n[severity level] [time] - [file format] - [message]\r\n```\r\n* Severity level: could be one of the following: 'Critical', 'Error', 'Warning', 'Info' or 'Debug'.\r\n* Time: a time stamp, in the following format: yyyy-mm-dd hh:mm:ss.\r\n* File format: Either a PDF or DOCX.\r\n* Message: The information regarding the creation of the specified file\r\n\r\n **Example**: \r\n```code\r\n[ERROR] 2023-03-02 09:17:51.428162 - PDF - Failed to parse topic myTopic . Error : Could not find 'MyType' in provided files!\r\n[INFO] 2023-03-02 09:17:57.693217 - PDF - File saved successfully into 'D:\\my\\folder\\TestingICD.pdf'\r\n[ERROR] 2023-03-02 09:17:57.862493 - DOCX - Failed to parse topic myTopic . Error : Could not find 'MyType' in provided files!\r\n[INFO] 2023-03-02 09:18:01.674094 - DOCX - File saved successfully into 'D:\\my\\folder\\TestingICD.docx'    \r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.OmniconSystems.com",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Omnicon-DDSDocGen",
    "package_url": "https://pypi.org/project/Omnicon-DDSDocGen/",
    "platform": null,
    "project_url": "https://pypi.org/project/Omnicon-DDSDocGen/",
    "project_urls": {
      "Homepage": "https://www.OmniconSystems.com"
    },
    "release_url": "https://pypi.org/project/Omnicon-DDSDocGen/2.1.1/",
    "requires_dist": [
      "build (==0.9.0)",
      "colorama (==0.4.6)",
      "docx2pdf (==0.1.8)",
      "importlib-metadata (==5.0.0)",
      "importlib-resources (==5.10.0)",
      "lxml (==4.9.1)",
      "Omnicon-GenericDDSEngine-Py (==4.5.5)",
      "packaging (==21.3)",
      "pep517 (==0.13.0)",
      "pyparsing (==3.0.9)",
      "python-docx (==0.8.11)",
      "pywin32 (==305)",
      "tomli (==2.0.1)",
      "tqdm (==4.64.1)",
      "typing-extensions (==4.4.0)",
      "zipp (==3.10.0)"
    ],
    "requires_python": "~=3.7",
    "summary": "DDS Document Generator",
    "version": "2.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17307962,
  "releases": {
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7c8ea953ec98885ec4e3bb541d6ed1570983f52bd6b2b94e1085363693611fe",
          "md5": "3d81d1e5529db1d6d51194e6bfec38fa",
          "sha256": "f3d70fd113fea8444c9dd91aba042ca586454ba4cc1a958038a4034e3e7fe2f3"
        },
        "downloads": -1,
        "filename": "Omnicon_DDSDocGen-2.0.1-0-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "3d81d1e5529db1d6d51194e6bfec38fa",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": "~=3.7",
        "size": 53607,
        "upload_time": "2022-11-21T05:44:44",
        "upload_time_iso_8601": "2022-11-21T05:44:44.354819Z",
        "url": "https://files.pythonhosted.org/packages/d7/c8/ea953ec98885ec4e3bb541d6ed1570983f52bd6b2b94e1085363693611fe/Omnicon_DDSDocGen-2.0.1-0-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "acddb4b5688ad8070321ac6c8c97711b1ff77244b3c72376eb0d07a48c1094a2",
          "md5": "a42ca2a35ab72fccb014c380e0d80887",
          "sha256": "45c98f99170486ba121802215862a091c8586385d31bde3daa7f72d689882a77"
        },
        "downloads": -1,
        "filename": "Omnicon_DDSDocGen-2.1.0-0-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "a42ca2a35ab72fccb014c380e0d80887",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": "~=3.7",
        "size": 56638,
        "upload_time": "2023-03-13T18:58:40",
        "upload_time_iso_8601": "2023-03-13T18:58:40.551690Z",
        "url": "https://files.pythonhosted.org/packages/ac/dd/b4b5688ad8070321ac6c8c97711b1ff77244b3c72376eb0d07a48c1094a2/Omnicon_DDSDocGen-2.1.0-0-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85d4e4a357d0c22712628bdf7ae167bdc872e3832bc423937d35d8e455f77a0c",
          "md5": "f12807b768d2a730dcb31c04ea424f06",
          "sha256": "c36cea1d99772a0b1380ce640e8c02132ac6b305e88ee6601d919a5858d5506e"
        },
        "downloads": -1,
        "filename": "Omnicon_DDSDocGen-2.1.0-1-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "f12807b768d2a730dcb31c04ea424f06",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": "~=3.7",
        "size": 57511,
        "upload_time": "2023-03-15T19:04:59",
        "upload_time_iso_8601": "2023-03-15T19:04:59.587930Z",
        "url": "https://files.pythonhosted.org/packages/85/d4/e4a357d0c22712628bdf7ae167bdc872e3832bc423937d35d8e455f77a0c/Omnicon_DDSDocGen-2.1.0-1-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af87904c01a4f2aa6909c1a844c9b81d1b266591e77c26eb3b273c1272fd6282",
          "md5": "575e72382b622bb93d4e8860dd63ff90",
          "sha256": "18f64d335acf8fad2ec8dd4e3285eaff1605f174091fc7967c7d222cbc91d442"
        },
        "downloads": -1,
        "filename": "Omnicon_DDSDocGen-2.1.1-0-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "575e72382b622bb93d4e8860dd63ff90",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": "~=3.7",
        "size": 57510,
        "upload_time": "2023-03-15T19:11:39",
        "upload_time_iso_8601": "2023-03-15T19:11:39.378628Z",
        "url": "https://files.pythonhosted.org/packages/af/87/904c01a4f2aa6909c1a844c9b81d1b266591e77c26eb3b273c1272fd6282/Omnicon_DDSDocGen-2.1.1-0-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af87904c01a4f2aa6909c1a844c9b81d1b266591e77c26eb3b273c1272fd6282",
        "md5": "575e72382b622bb93d4e8860dd63ff90",
        "sha256": "18f64d335acf8fad2ec8dd4e3285eaff1605f174091fc7967c7d222cbc91d442"
      },
      "downloads": -1,
      "filename": "Omnicon_DDSDocGen-2.1.1-0-cp37-cp37m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "575e72382b622bb93d4e8860dd63ff90",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": "~=3.7",
      "size": 57510,
      "upload_time": "2023-03-15T19:11:39",
      "upload_time_iso_8601": "2023-03-15T19:11:39.378628Z",
      "url": "https://files.pythonhosted.org/packages/af/87/904c01a4f2aa6909c1a844c9b81d1b266591e77c26eb3b273c1272fd6282/Omnicon_DDSDocGen-2.1.1-0-cp37-cp37m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}