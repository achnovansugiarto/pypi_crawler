{
  "info": {
    "author": "Tom Coufal",
    "author_email": "tcoufal@redhat.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Solgate\n\n![License](https://img.shields.io/github/license/aicoe-aiops/sync-pipelines)\n![Python version](https://img.shields.io/github/pipenv/locked/python-version/aicoe-aiops/sync-pipelines)\n![Latest release](https://img.shields.io/github/v/tag/aicoe-aiops/sync-pipelines)\n[![PyPI](https://img.shields.io/pypi/v/solgate)](https://pypi.org/project/solgate)\n[![Quay.io](https://img.shields.io/badge/quay.io-solgate-green)](https://quay.io/repository/thoth-station/solgate)\n\nYet another data sync pipelines job runner.\n\nA CLI utility that is expected to be automated via container native workflow engines like [Argo](https://argoproj.github.io/argo/) or [Tekton](https://tekton.dev/).\n\n## Installation\n\n```sh\npip install solgate\n```\n\n## Configuration\n\nSolgate relies on a configuration file that holds all the information required to fully perform the synchronization. This config file is expected to be of a YAML format and it should contain following keys:\n\n- `source` key. Value to this key specifies where the data are sourced from.\n- `destinations` key. It's value is expected to be an array for locations. Their purpose is to define sync destinations.\n- other top level keys for a general configuration that is not specific to a single location.\n\n### General config section\n\nAll configuration in this section **is optional**. Use this section if you'd like to modify the default behavior. Default values are denoted below:\n\n```yaml\nalerts_smtp_server: smtp.corp.redhat.com\nalerts_from: solgate-alerts@redhat.com\nalerts_to: dev-null@redhat.com\ntimedelta: 1d\n```\n\nDescription:\n\n- `alerts_smtp_server`, `alerts_from`, `alerts_to` are used for email alerting only\n- `timedelta` defines a time window in which the objects in the source bucket must have been modified, to be eligible fo the bucket listing. Only files modified no later than `timedelta` from now are included.\n\n### Source key\n\n```yaml\nsource:\n  aws_access_key_id: KEY_ID\n  aws_secret_access_key: SECRET\n  base_path: DH-PLAYPEN/storage/input # at least the bucket name is required, sub path within this bucket is optional\n  endpoint_url: https://s3.amazonaws.com # optional, defaults to s3.amazonaws.com\n  formatter: \"{date}/{collection}.{ext}\" # optional, defaults to None\n```\n\nIf the `formatter` is not set, no repartitioning is expected to happen and the S3 object key is left intact, same as it is in the source bucket (within the `base_path` context). Specifying the `formatter` in the source section only, **doesn't** result in repartitioning of all object by itself, only those destinations that also have this option specified are eligible for object key modifications.\n\n### Destinations key\n\n```yaml\ndestinations:\n  - aws_access_key_id: KEY_ID\n    aws_secret_access_key: SECRET\n    base_path: DH-PLAYPEN/storage/output # at least the bucket name is required, sub path within this bucket is optional\n    endpoint_url: https://s3.upshift.redhat.com # optional, defaults to s3.upshift.redhat.com\n    formatter: \"{date}/{collection}.{ext}\" # optional, defaults to None\n    unpack: yes # optional, defaults to False/no\n```\n\nThe `endpoint_url` defaults to a different value for destination compared to source section. This is due to the usual data origin and safe destination host.\n\nIf the `formatter` is not set, no repartitioning is expected to happen and the S3 object key is left intact, same as it is in the source bucket (within the `base_path` context). If repartitioning is desired, the formatter string must be defined in the source section as well - otherwise object name can't be parsed properly from the source S3 object key.\n\n`unpack` option specifies if the gunzipped archives should be unpacked during the transfer. The `.gz` suffix is automatically dropped from the resulting object key, no matter if the repartitioning is on or off. Switching this option on results in weaker object validation, since the implicit metadata checksum and size checks can't be used to verify the file integrity.\n\n### Separate credentials into different files\n\nIn case you don't feel like inlining `aws_access_key_id`, `aws_secret_access_key` in plaintext into the config file is a good idea, you can separate these credentials into their distict files. If the credentials keys are not found (inlined) in the config, solgate tries to locate them in the config folder (the same folder as the main config file is located).\n\nThe credentials file is expected to contain following:\n\n```yaml\naws_access_key_id: KEY_ID\naws_secret_access_key: SECRET\n```\n\nFor source the expected filename is `source.creds.yaml`, for destinations `destination.X.creds.yaml` where `X` is the index in the `destinations` list in the main config file. For destinations we allow credentials sharing, therefore if `destination.X.creds.yaml` is not located, solgate tries to load `destination.creds.yaml` (not indexed).\n\n#### Full example\n\nLet's have this file structure in our `/etc/solgate`:\n\n```sh\n$ tree /etc/solgate\n/etc/solgate\n├── config.yaml\n├── destination.0.creds.yaml\n├── destination.creds.yaml\n└── source.creds.yaml\n```\n\nAnd a main config file `/etc/solgate/config.yaml` looking like this:\n\n```yaml\nsource:\n  base_path: DH-PLAYPEN/storage/input\n\ndestinations:\n  - base_path: DH-PLAYPEN/storage/output0 # idx=0\n\n  - base_path: DH-PLAYPEN/storage/output1 # idx=1\n\n  - base_path: DH-PLAYPEN/storage/output2 # idx=2\n    aws_access_key_id: KEY_ID\n    aws_secret_access_key: SECRET\n```\n\nSolgate will use these credentials:\n\n- For source the `source.creds.yaml` is read, because no credentials are inlined\n- For destination `idx=0` the `destination.0.creds.yaml` is used, because no credentials are inlined\n- For destination `idx=1` the `destination.creds.yaml` is used, because no credentials are inlined and there's no `destination.1.creds.yaml` file\n- For destination `idx=2` the inlined credentials are used\n\nThe resolution priority:\n\n| type        | priority                                                          |\n| ----------- | ----------------------------------------------------------------- |\n| source      | `inlined > source.creds.yaml`                                     |\n| destination | `inlined > destination.INDEX.creds.yaml > destination.creds.yaml` |\n\n### Example config file\n\nHere's a full configuration file example, all together.\n\n```yaml\nalerts_smtp_server: smtp.corp.redhat.com\nalerts_from: solgate-alerts@redhat.com\nalerts_to: dev-null@redhat.com\ntimedelta: 1d\n\nsource:\n  aws_access_key_id: KEY_ID\n  aws_secret_access_key: SECRET\n  endpoint_url: https://s3.upshift.redhat.com\n  formatter: \"{date}/{collection}.{ext}\"\n  base_path: DH-PLAYPEN/storage/input\n\ndestinations:\n  - aws_access_key_id: KEY_ID\n    aws_secret_access_key: SECRET\n    endpoint_url: https://s3.upshift.redhat.com\n    formatter: \"{collection}/historic/{date}-{collection}.{ext}\"\n    base_path: DH-PLAYPEN/storage/output\n\n  - aws_access_key_id: KEY_ID\n    aws_secret_access_key: SECRET\n    endpoint_url: https://s3.upshift.redhat.com\n    formatter: \"{collection}/latest/full_data.csv\"\n    base_path: DH-PLAYPEN/storage/output\n    unpack: yes\n```\n\n## Usage\n\nSolgate is mainly intended for use in automation within Argo Workflows. However it can be also used as a standalone CLI tool for manual transfers and (via extensions) for (TBD) manifest scaffold generation and (TBD) deployed instance monitoring.\n\n### List bucket for files ready to be transferred\n\nBefore the actual sync can be run, it is required\n\n```sh\nsolgate list\n```\n\n| CLI option <img width=20/> | Config file entry | Description                                                                                    |\n| -------------------------- | ----------------- | ---------------------------------------------------------------------------------------------- |\n| `-o`                       |                   | Output to a file instead of stdout. Creates a listing file.                                    |\n|                            | `timedelta`       | Define a lookup restriction. Only files newer than this value are reported. Defaults to 1 day. |\n\n### Sync objects\n\n```sh\nsolgate send KEY\n```\n\n| CLI option <img width=20/> | Description                                                                                                                                 |\n| -------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------- |\n| `-l`, `--listing-file`     | A listing file ingested by this command. Format is expected to be the same as `solgate list` output. If set, the `KEY` argument is ignored. |\n\n### Notification service\n\nSend an workflow status alert via email from Argo environment.\n\nCommand expects to be passed values matching available Argo variable format as described [here](https://github.com/argoproj/argo/blob/master/docs/variables.md#global).\n\n```sh\nsolgate report\n```\n\nOptions can be set either via CLI argument or via environment variable:\n\n<!-- Img tag enforces additional width on the column, so GitHub doesn't break line on the --option after dashes.  -->\n<!-- markdownlint-capture -->\n<!-- markdownlint-disable  no-inline-html -->\n\n- Options which map to Argo Workflow variables:\n\n  | CLI option <img width=150/> | Environment variable name | Value should map to Argo workflow variable | Description                                                         |\n  | --------------------------- | ------------------------- | ------------------------------------------ | ------------------------------------------------------------------- |\n  | `--failures`                | `WORKFLOW_FAILURES`       | `{{workflow.failures}}`                    | JSON serialized into a string listing all the failed workflow nodes |\n  | `-n`, `--name`              | `WORKFLOW_NAME`           | `{{workflow.name}}`                        | Workflow instance name.                                             |\n  | `--namespace`               | `WORKFLOW_NAMESPACE`      | `{{workflow.namespace}}`                   | Project namespace where the workflow was executed.                  |\n  | `-s`, `--status`            | `WORKFLOW_STATUS`         | `{{workflow.status}}`                      | Current status of the workflow execution.                           |\n  | `-t`, `--timestamp`         | `WORKFLOW_TIMESTAMP`      | `{{workflow.creationTimestamp}}`           | Workflow execution timestamp.                                       |\n\n- Options which map to config file entries. Priority order:\n\n  ```sh\n  CLI option > Environment variable > Config file entry > Default value\n  ```\n\n  | CLI option <img width=20/> | Environment variable name | Config file entry    | Description                                                            |\n  | -------------------------- | ------------------------- | -------------------- | ---------------------------------------------------------------------- |\n  | `--from`                   | `ALERT_SENDER`            | `alerts_from`        | Email alert sender address. Defaults to solgate-alerts@redhat.com.     |\n  | `--to`                     | `ALERT_RECIPIENT`         | `alerts_to`          | Email alert recipient address. Defaults to data-hub-alerts@redhat.com. |\n  | `--smtp`                   | `SMTP_SERVER`             | `alerts_smtp_server` | SMTP server URL. Defaults to smtp.corp.redhat.com.                     |\n\n- Other:\n\n  | CLI option | Environment variable name | Description                       |\n  | ---------- | ------------------------- | --------------------------------- |\n  | `--host`   | `ARGO_UI_HOST`            | Argo UI external facing hostname. |\n\n<!-- markdownlint-restore -->\n\n## Workflow manifests\n\nAdditionally to the `solgate` package this repository also features deployment manifests in the `manifests` folder. The current implementation of Kubernetes manifests relies on [Argo](https://argoproj.github.io/argo/), [Argo Events](https://argoproj.github.io/argo-events/) and are structured in a [Kustomize](https://kustomize.io/) format. Environments for deployment are specified in the `manifests/overlays/ENV_NAME` folder.\n\nEach environment features multiple solgate workflow instances. Configuration `config.ini` file and selected triggers are defined in instance subfolder within the particular environment folder.\n\n### Deploy\n\nEnvironment deployments are expected to be handled via [Argo CD](https://argoproj.github.io/argo-cd/) in [AI-CoE SRE](https://github.com/AICoE/aicoe-sre/), however it can be done manually as well.\n\nLocal prerequisites:\n\n- [Kustomize](https://kustomize.io/)\n- [sops](https://github.com/mozilla/sops)\n- [ksops](https://github.com/viaduct-ai/kustomize-sops)\n\nAlready deployed platform and running services:\n\n- [Argo](https://argoproj.github.io/argo/)\n- [Argo Events](https://argoproj.github.io/argo-events/)\n\n#### Build and deploy manifests\n\n```sh\nkustomize build --enable_alpha_plugins manifests/overlays/ENV_NAME | oc apply -f -\n```\n\n### Create a new instance\n\n**Will be handled via scaffold in next version!** <!-- noqa -->\n\nPrerequisites:\n\nImport GPG keys `EFDB9AFBD18936D9AB6B2EECBD2C73FF891FBC7E`, `A76372D361282028A99F9A47590B857E0288997C`, `04DAFCD9470A962A2F272984E5EB0DA32F3372AC`\n\n```sh\ngpg --keyserver keyserver.ubuntu.com --recv EFDB9AFBD18936D9AB6B2EECBD2C73FF891FBC7E A76372D361282028A99F9A47590B857E0288997C 04DAFCD9470A962A2F272984E5EB0DA32F3372AC\n```\n\n1. Create new folder named after the instance in the selected environment overlay (make a copy of `prod/TEMPLATE`).\n2. Create a `kustomization.yaml` file in this new folder with following content, change the `NAME` to your instance name:\n\n   ```yaml\n   apiVersion: kustomize.config.k8s.io/v1beta1\n   kind: Kustomization\n\n   generators:\n     - ./secret-generator.yaml\n\n   commonLabels:\n     app.kubernetes.io/name: NAME\n\n   resources:\n     - ./cronwf.yaml\n   ```\n\n3. Create a `secret-generator.yaml` file in this new folder with following content:\n\n   ```yaml\n   apiVersion: viaduct.ai/v1\n   kind: ksops\n   metadata:\n     name: secret-generator\n   files:\n     - secret.enc.yaml\n   ```\n\n4. Create a `secret.enc.yaml` file in this folder and encrypt it via sops:\n\n   ```yaml\n   apiVersion: v1\n   kind: Secret\n   metadata:\n     name: solgate-NAME\n   stringData:\n     source.creds.yaml: |\n       aws_access_key_id: KEY_ID_FOR_SOURCE\n       aws_secret_access_key: SECRET_FOR_SOURCE\n\n     destination.creds.yaml: |\n       aws_access_key_id: DEFAULT_KEY_ID_FOR_DESTINATIONS\n       aws_secret_access_key: DEFAULT_SECRET_FOR_DESTINATIONS\n\n     destination.2.creds.yaml: |\n       aws_access_key_id: KEY_ID_FOR_DESTINATION_ON_INDEX_2\n       aws_secret_access_key: SECRET_FOR_DESTINATION_ON_INDEX_2\n\n     config.yaml: |\n       alerts_smtp_server: smtp.corp.redhat.com\n       alerts_from: solgate-alerts@redhat.com\n       alerts_to: dev-null@redhat.com\n       timedelta: 5h\n\n       source:\n         endpoint_url: https://s3.upshift.redhat.com\n         formatter: \"{date}/{collection}.{ext}\"\n         base_path: DH-PLAYPEN/storage/input\n\n       destinations:\n         - endpoint_url: https://s3.upshift.redhat.com\n           formatter: \"{collection}/historic/{date}-{collection}.{ext}\"\n           base_path: DH-PLAYPEN/storage/output\n           unpack: yes\n\n         - endpoint_url: https://s3.upshift.redhat.com\n           formatter: \"{collection}/latest/full_data.csv\"\n           base_path: DH-PLAYPEN/storage/output\n           unpack: yes\n\n         - endpoint_url: https://s3.upshift.redhat.com\n           base_path: DH-PLAYPEN/storage/output\n   ```\n\n   ```sh\n   sops -e -i overlays/ENV_NAME/NEW_INSTANCE_NAME/INSTANCE_NAME.env.yaml\n   ```\n\n   Please make sure the `*.creds.yaml` entries in the secret are encrypted.\n\n5. Create `cronwf.yaml` with following content, please change the name and config variable value to match the secret above:\n\n   ```yaml\n   apiVersion: argoproj.io/v1alpha1\n   kind: CronWorkflow\n   metadata:\n     generateName: solgate-NAME\n     name: solgate-NAME\n   spec:\n     schedule:\n     concurrencyPolicy: \"Replace\"\n     workflowSpec:\n       arguments:\n         parameters:\n           - name: config\n             value: solgate-NAME\n       workflowTemplateRef:\n         name: solgate\n   ```\n\n6. Update the resource and patch listing in the `overlays/ENV_NAME/kustomization.yaml`:\n\n   ```yaml\n   resources:\n     - ...\n     - ./NEW_INSTANCE_NAME\n   ```\n\n### Backfill\n\nA backfill job ensures processing of all objects in the source bucket. This job assumes none of the objects were processed before and syncs it all potentially overwriting any changes in the destination bucket.\n\nThere's a [`backfill.yaml`](manifests/backfill.yaml) available to be submitted directly. Please specify the config parameter before submitting. Value must match a name of a `Secret` config resource for targeted pipeline.\n\n```sh\nargo submit -p config=solgate-NAME manifests/backfill.yaml\n```\n\n### Workflow parameters\n\n`CronWorkflow` resource defined for each pipeline instance allows you to define 3 parameters:\n\n| Parameter    | Value                      | Required | Description                                                                                                                                               |\n| ------------ | -------------------------- | -------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `config`     | string                     | yes      | Define which config secret to mount to pods and pass to the solgate runtime                                                                               |\n| `is-backfil` | string (boolean in quotes) | no       | If set to `true` sync all data in the source bucket. Defaults to `false`                                                                                  |\n| `split`      | string (int in quotes)     | no       | Define amount of files that is handled by a single sync pod. If there's more files to sync, the pipeline will spin up additional pods. Defaults to `5000` |\n\n## Developer setup\n\n### Local setup\n\nInstall `pipenv` and set up the environment:\n\n```sh\npipenv sync -d\n```\n\nInstall/enable [pre-commit](https://pre-commit.com/) for this project:\n\n```sh\npip install -g pre-commit\npre-commit install\n```\n\n### Running tests\n\nWith local environment set up, you can run tests locally like this:\n\n```sh\npipenv run pytest . --cov solgate\n```\n\n### Building manifests\n\nInstall local prerequisites for `kustomize` manifests:\n\n- [Kustomize](https://kustomize.io/)\n- [sops](https://github.com/mozilla/sops)\n- [ksops](https://github.com/viaduct-ai/kustomize-sops)\n\nUse `kustomize build --enable_aplha_plugins ...` to build manifests.\n\n### CI/CD\n\nWe rely on [AICoE-CI](https://github.com/AICoE/aicoe-ci) GitHub application and bots to provide CI for us. All is configured via `.aicoe-ci.yaml`.\n\n### Releasing\n\nIf you're a maintainer, please release via [GitHub issues](https://github.com/aicoe-aiops/sync-pipelines/issues/new/choose). New release creates:\n\n- Creates a `git` [release tag](https://github.com/aicoe-aiops/sync-pipelines/releases) on GitHub.\n- Pushes new image to Quay.io [thoth-station/solgate](https://quay.io/repository/thoth-station/solgate), tagged by the released version and `latest`.\n- Releases to PyPI [solgate](https://pypi.org/project/solgate) project.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aicoe-aiops/sync-pipelines",
    "keywords": "",
    "license": "GPLv3+",
    "maintainer": "Tom Coufal",
    "maintainer_email": "tcoufal@redhat.com",
    "name": "solgate",
    "package_url": "https://pypi.org/project/solgate/",
    "platform": null,
    "project_url": "https://pypi.org/project/solgate/",
    "project_urls": {
      "Homepage": "https://github.com/aicoe-aiops/sync-pipelines"
    },
    "release_url": "https://pypi.org/project/solgate/3.5.5/",
    "requires_dist": [
      "logstash-formatter (>=0.5.17)",
      "s3fs (==0.4.*)",
      "jinja2 (>=2.11)",
      "click",
      "pyyaml",
      "boto3",
      "backoff"
    ],
    "requires_python": "",
    "summary": "A CLI tool for S3 data synchronizations.",
    "version": "3.5.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13477697,
  "releases": {
    "2.0.0a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "edecaf022a7535335faab72c8e5d4f65f1321324df0044ab9a7b5df512ddd101",
          "md5": "6c69a6d64b92a8ab8aa17ff9fba78e8d",
          "sha256": "8b67c8cce2e5acc8f6468f95a9bc6ac7c6dcc9b802bf420e380f4558504d8b41"
        },
        "downloads": -1,
        "filename": "solgate-2.0.0a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6c69a6d64b92a8ab8aa17ff9fba78e8d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25460,
        "upload_time": "2020-07-23T14:29:12",
        "upload_time_iso_8601": "2020-07-23T14:29:12.059139Z",
        "url": "https://files.pythonhosted.org/packages/ed/ec/af022a7535335faab72c8e5d4f65f1321324df0044ab9a7b5df512ddd101/solgate-2.0.0a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "010608963dabccb99b9457d0785dec99065fab5199a37cc8ae945be527970749",
          "md5": "3adedb50de5932a33b43a39bf90b926e",
          "sha256": "10c22f23d3ad7a2a036b6f26e6ea300c92ea3d880923e06b97a66bd07d142018"
        },
        "downloads": -1,
        "filename": "solgate-2.0.0a0.tar.gz",
        "has_sig": false,
        "md5_digest": "3adedb50de5932a33b43a39bf90b926e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9960,
        "upload_time": "2020-07-23T14:29:14",
        "upload_time_iso_8601": "2020-07-23T14:29:14.398782Z",
        "url": "https://files.pythonhosted.org/packages/01/06/08963dabccb99b9457d0785dec99065fab5199a37cc8ae945be527970749/solgate-2.0.0a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96b84558d1be8a9a42584e6115107ff423c49ab6bfc668cf8872177c940bd74b",
          "md5": "bca67b0a7d8f7533edec485d32bc7a61",
          "sha256": "c346c5d3671d528f26a86f64fe9edd99afb582c725eac0d71488dbbabe1823b1"
        },
        "downloads": -1,
        "filename": "solgate-3.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bca67b0a7d8f7533edec485d32bc7a61",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27964,
        "upload_time": "2020-09-18T05:17:05",
        "upload_time_iso_8601": "2020-09-18T05:17:05.759643Z",
        "url": "https://files.pythonhosted.org/packages/96/b8/4558d1be8a9a42584e6115107ff423c49ab6bfc668cf8872177c940bd74b/solgate-3.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e3cfadcc73387168e51a8200901e1a08ddbc0a1c859e23c6c2ab261462fd752",
          "md5": "ae96707d337e7de203664597b4c9fe62",
          "sha256": "f53aef8b93240053de28159dc2022b7986366ef3576846bf5335b7908a911015"
        },
        "downloads": -1,
        "filename": "solgate-3.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ae96707d337e7de203664597b4c9fe62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23349,
        "upload_time": "2020-09-18T05:17:06",
        "upload_time_iso_8601": "2020-09-18T05:17:06.873659Z",
        "url": "https://files.pythonhosted.org/packages/5e/3c/fadcc73387168e51a8200901e1a08ddbc0a1c859e23c6c2ab261462fd752/solgate-3.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0abe1b25cf6ecaf33485b4d009e626b967f8f8d6bc9124f53eb939d67e8deac8",
          "md5": "d78d6c79aa8f6881176c935bea2f05b2",
          "sha256": "6a1d135f6f044d79bae33d6f0a30b5e47e980041986f1553e743322876757138"
        },
        "downloads": -1,
        "filename": "solgate-3.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d78d6c79aa8f6881176c935bea2f05b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28656,
        "upload_time": "2020-10-13T12:09:16",
        "upload_time_iso_8601": "2020-10-13T12:09:16.064521Z",
        "url": "https://files.pythonhosted.org/packages/0a/be/1b25cf6ecaf33485b4d009e626b967f8f8d6bc9124f53eb939d67e8deac8/solgate-3.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ae5ee0ec352f92c3ec433fb8cd5c4fa2851de0765b77be0dbb5a42f2096e839",
          "md5": "3f09d009c01666f8059a0783a18d1adf",
          "sha256": "a2ad972c014650ae94ab683cd7c3d73f7fe6e31a765a9eb654e3a77e52cfb538"
        },
        "downloads": -1,
        "filename": "solgate-3.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3f09d009c01666f8059a0783a18d1adf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23867,
        "upload_time": "2020-10-13T12:09:17",
        "upload_time_iso_8601": "2020-10-13T12:09:17.210947Z",
        "url": "https://files.pythonhosted.org/packages/9a/e5/ee0ec352f92c3ec433fb8cd5c4fa2851de0765b77be0dbb5a42f2096e839/solgate-3.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e60bc0c730acac3f7ebc37cf98f335205fe2d2b201ef7b6364d073542c26435",
          "md5": "665c27040cc066ca8e4b0ee4536e3d4e",
          "sha256": "e812dcf173b3a46974316863b7a6c979e0d5c089afc365962b438e2338fb4e6e"
        },
        "downloads": -1,
        "filename": "solgate-3.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "665c27040cc066ca8e4b0ee4536e3d4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 32874,
        "upload_time": "2020-12-17T12:51:22",
        "upload_time_iso_8601": "2020-12-17T12:51:22.386320Z",
        "url": "https://files.pythonhosted.org/packages/2e/60/bc0c730acac3f7ebc37cf98f335205fe2d2b201ef7b6364d073542c26435/solgate-3.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5c54b55cdee1291a963e07f61ae47ce7de5d16e4fc55378cb0cdfb9067e4fb2",
          "md5": "725753f12ecb378bd1908afb2cf57db7",
          "sha256": "9645fab1cce3dc6f5518dd2afe3c49c77e9aa789b2a0d4c39e4ea9c65ce786b2"
        },
        "downloads": -1,
        "filename": "solgate-3.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "725753f12ecb378bd1908afb2cf57db7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30612,
        "upload_time": "2020-12-17T12:51:23",
        "upload_time_iso_8601": "2020-12-17T12:51:23.538820Z",
        "url": "https://files.pythonhosted.org/packages/d5/c5/4b55cdee1291a963e07f61ae47ce7de5d16e4fc55378cb0cdfb9067e4fb2/solgate-3.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3ead0f0242ee5c865d5eed68288a22ccb26226052d62b5a692fb138d41ae1f9",
          "md5": "3e7a7f22d942cb7309e51ebd8d77dbd9",
          "sha256": "4a7b29585183589ff8efc43021c29e3fc889207d0befc3f41b63737d5bfc6512"
        },
        "downloads": -1,
        "filename": "solgate-3.5.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3e7a7f22d942cb7309e51ebd8d77dbd9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35820,
        "upload_time": "2021-11-01T14:51:35",
        "upload_time_iso_8601": "2021-11-01T14:51:35.456207Z",
        "url": "https://files.pythonhosted.org/packages/c3/ea/d0f0242ee5c865d5eed68288a22ccb26226052d62b5a692fb138d41ae1f9/solgate-3.5.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0b7c838bfbb4c6fa9170c84d8d559497036d71f10e8379c4cfde80dac015a74",
          "md5": "e75bd14fbc128b8895d82846e536147b",
          "sha256": "1372c9121ea9ebf5d71be653cc8af5af9f109100a59f08bb027da92af3c53956"
        },
        "downloads": -1,
        "filename": "solgate-3.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e75bd14fbc128b8895d82846e536147b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33985,
        "upload_time": "2021-11-01T14:51:37",
        "upload_time_iso_8601": "2021-11-01T14:51:37.024720Z",
        "url": "https://files.pythonhosted.org/packages/f0/b7/c838bfbb4c6fa9170c84d8d559497036d71f10e8379c4cfde80dac015a74/solgate-3.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.5.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be0e7e32c7ebe4a22cf87199c6c9d5334f8aecdffefcbf009714b0d7615dc37c",
          "md5": "39ca918b99c63f54b777d6da469937b9",
          "sha256": "5d043dd1dc59f71584f46a6a3df2ad24d2082dfe5de6fd3bd3913a95b7409e09"
        },
        "downloads": -1,
        "filename": "solgate-3.5.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "39ca918b99c63f54b777d6da469937b9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 48332,
        "upload_time": "2022-01-26T13:37:34",
        "upload_time_iso_8601": "2022-01-26T13:37:34.135391Z",
        "url": "https://files.pythonhosted.org/packages/be/0e/7e32c7ebe4a22cf87199c6c9d5334f8aecdffefcbf009714b0d7615dc37c/solgate-3.5.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f1bc78d6651a481c8dfbfae9efea30f9a9def3751161b2141e8aa18c57a746d",
          "md5": "3579f3f860a06f6ce8b94d3ee4034352",
          "sha256": "4df67731023a6b47afdee1bba01af3849483940cb02195b6b8c271fbf1dcbd1a"
        },
        "downloads": -1,
        "filename": "solgate-3.5.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3579f3f860a06f6ce8b94d3ee4034352",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 46595,
        "upload_time": "2022-01-26T13:37:35",
        "upload_time_iso_8601": "2022-01-26T13:37:35.490251Z",
        "url": "https://files.pythonhosted.org/packages/9f/1b/c78d6651a481c8dfbfae9efea30f9a9def3751161b2141e8aa18c57a746d/solgate-3.5.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.5.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a64b41d358a485d561c3321d4fa1ccf9e8d1a4883eb6a7c12b71190ae239ee94",
          "md5": "1412e8c4ae1ae925bee6ed6fea45a42c",
          "sha256": "6b477b2de31901e3c0f31ba151a8413d4df63d25f1e0bd2c8d742c237c7af42f"
        },
        "downloads": -1,
        "filename": "solgate-3.5.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1412e8c4ae1ae925bee6ed6fea45a42c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 48605,
        "upload_time": "2022-04-11T13:01:16",
        "upload_time_iso_8601": "2022-04-11T13:01:16.892565Z",
        "url": "https://files.pythonhosted.org/packages/a6/4b/41d358a485d561c3321d4fa1ccf9e8d1a4883eb6a7c12b71190ae239ee94/solgate-3.5.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "018708c89644830dc33dc2ea6302f0e4e7c15cdcad77cd03cd2a888c3a0bb0c4",
          "md5": "4cab051296997c66136ca716a90e35e0",
          "sha256": "530f50a19f8c380889e1ab6c1f5d192b6357372ce1f15ad111ad1bbc74b3c6b2"
        },
        "downloads": -1,
        "filename": "solgate-3.5.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4cab051296997c66136ca716a90e35e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 46847,
        "upload_time": "2022-04-11T13:01:18",
        "upload_time_iso_8601": "2022-04-11T13:01:18.879216Z",
        "url": "https://files.pythonhosted.org/packages/01/87/08c89644830dc33dc2ea6302f0e4e7c15cdcad77cd03cd2a888c3a0bb0c4/solgate-3.5.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a64b41d358a485d561c3321d4fa1ccf9e8d1a4883eb6a7c12b71190ae239ee94",
        "md5": "1412e8c4ae1ae925bee6ed6fea45a42c",
        "sha256": "6b477b2de31901e3c0f31ba151a8413d4df63d25f1e0bd2c8d742c237c7af42f"
      },
      "downloads": -1,
      "filename": "solgate-3.5.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1412e8c4ae1ae925bee6ed6fea45a42c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 48605,
      "upload_time": "2022-04-11T13:01:16",
      "upload_time_iso_8601": "2022-04-11T13:01:16.892565Z",
      "url": "https://files.pythonhosted.org/packages/a6/4b/41d358a485d561c3321d4fa1ccf9e8d1a4883eb6a7c12b71190ae239ee94/solgate-3.5.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "018708c89644830dc33dc2ea6302f0e4e7c15cdcad77cd03cd2a888c3a0bb0c4",
        "md5": "4cab051296997c66136ca716a90e35e0",
        "sha256": "530f50a19f8c380889e1ab6c1f5d192b6357372ce1f15ad111ad1bbc74b3c6b2"
      },
      "downloads": -1,
      "filename": "solgate-3.5.5.tar.gz",
      "has_sig": false,
      "md5_digest": "4cab051296997c66136ca716a90e35e0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 46847,
      "upload_time": "2022-04-11T13:01:18",
      "upload_time_iso_8601": "2022-04-11T13:01:18.879216Z",
      "url": "https://files.pythonhosted.org/packages/01/87/08c89644830dc33dc2ea6302f0e4e7c15cdcad77cd03cd2a888c3a0bb0c4/solgate-3.5.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}