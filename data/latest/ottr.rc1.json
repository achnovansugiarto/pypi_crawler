{
  "info": {
    "author": "Thomas Minier",
    "author_email": "thomas.minier@univ-nantes.fr",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "pyOTTR\n======\n\nManipulate `OTTR Reasonable Ontology Templates`_ in Python.\n\n`Package documentation`_\n\n`OTTR documentation`_\n\n**Supported features:**\n\n* `Definition and execution of templates`_ in the `stOTTR syntax`_\n* `Nesting templates`_\n* `Type checking`_\n* `Non blank`_, `Optional`_ and `default values`_ for template parameters.\n* *RDF and RDFS templates* from the `OTTR template library`_ are loaded by default.\n\n\n**In development:**\n\n* `Expansion modes`_\n* Support for `OWL templates`_ from the template library\n\n\nInstallation\n============\n\nUsing pip (recommended)\n-----------------------\n\n::\n\n   pip install ottr\n\nManual installation\n-------------------\n\n::\n\n   git clone\n   cd pyOTTR/\n   python setup.py install\n\nGetting started\n===============\n\nThe main class to manipulate is ``OttrGenerator``, which is used to load\nOTTR templates and expand template instances. So, in practice, you only\nneed to create a new generator, load some templates and then execute\nyour instances to produce RDF triples.\n\nBy default, **all templates** from the `OTTR template\nlibrary <http://tpl.ottr.xyz/>`__ are loaded when the generator is\ncreated.\n\n.. code:: python\n\n     from ottr import OttrGenerator\n     # An OttrGenerator is used to load templates and expand instances\n     generator = OttrGenerator()\n\n     # Load a simple OTTR template definition\n     generator.load_templates(\"\"\"\n       @prefix ex: <http://example.org#>.\n\n       ex:FirstName [ottr:IRI ?uri, ?firstName] :: {\n         ottr:Triple (?uri, foaf:firstName, ?firstName )\n       } .\n\n       ex:Person[ ?firstName ] :: {\n         ottr:Triple (_:person, rdf:type, foaf:Person ),\n         ex:FirstName (_:person, ?firstName)\n       } .\n     \"\"\")\n\n     # Parse and prepare an instance for execution\n     instances = generator.instanciate(\"\"\"\n       @prefix ex: <http://example.org#>.\n\n       ex:Person(\"Ann\").\n     \"\"\")\n\n     # Execute the instance, which yield RDF triples\n     # The following prints (_:person0, rdf:type, foaf:Person) and (_:person0, foaf:firstName, \"Ann\")\n     for s, p, o in instances.execute(as_nt=True):\n       print(\"# ----- RDF triple ----- #\")\n       print((s, p, o)\n\n.. _OTTR Reasonable Ontology Templates: http://ottr.xyz/\n.. _Package documentation: https://callidon.github.io/pyOTTR\n.. _OTTR documentation: http://ottr.xyz/\n.. _Definition and execution of templates: http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#2_Templates_and_Instances\n.. _stOTTR syntax: http://spec.ottr.xyz/stOTTR/0.1/\n.. _Nesting templates: http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#3_Nesting_templates\n.. _Type checking: http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#4_Types\n.. _Non blank: http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#5_NonBlank\n.. _Optional: http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#6_Optionals_and_None\n.. _default values: http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#7_Default_values\n.. _OTTR template library: %5Bhttp://tpl.ottr.xyz/%5D\n.. _Expansion modes: http://spec.ottr.xyz/pOTTR/0.1/01-basics.html#8_Expansion_modes\n.. _OWL templates: http://tpl.ottr.xyz/owl/",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Callidon/pyOTTR",
    "keywords": "rdf,owl,ottr,template,ontology,reusable",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ottr",
    "package_url": "https://pypi.org/project/ottr/",
    "platform": "",
    "project_url": "https://pypi.org/project/ottr/",
    "project_urls": {
      "Homepage": "https://github.com/Callidon/pyOTTR"
    },
    "release_url": "https://pypi.org/project/ottr/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Manipulate OTTR Reasonable Ontology Templates in Python",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6142967,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c55a249ef88441ffcb64a198cb1c7f743cb7e7d278a56e1181903f19b02ee4fa",
          "md5": "d5d89935205a43905238e748ac68e639",
          "sha256": "5050f20ce329fc3ccee5aa9c9603d4853961d572bcd1aae15e7245c6d37c06aa"
        },
        "downloads": -1,
        "filename": "ottr-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d5d89935205a43905238e748ac68e639",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11391,
        "upload_time": "2019-11-15T12:30:26",
        "upload_time_iso_8601": "2019-11-15T12:30:26.407063Z",
        "url": "https://files.pythonhosted.org/packages/c5/5a/249ef88441ffcb64a198cb1c7f743cb7e7d278a56e1181903f19b02ee4fa/ottr-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c55a249ef88441ffcb64a198cb1c7f743cb7e7d278a56e1181903f19b02ee4fa",
        "md5": "d5d89935205a43905238e748ac68e639",
        "sha256": "5050f20ce329fc3ccee5aa9c9603d4853961d572bcd1aae15e7245c6d37c06aa"
      },
      "downloads": -1,
      "filename": "ottr-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d5d89935205a43905238e748ac68e639",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11391,
      "upload_time": "2019-11-15T12:30:26",
      "upload_time_iso_8601": "2019-11-15T12:30:26.407063Z",
      "url": "https://files.pythonhosted.org/packages/c5/5a/249ef88441ffcb64a198cb1c7f743cb7e7d278a56e1181903f19b02ee4fa/ottr-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}