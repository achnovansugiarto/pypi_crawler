{
  "info": {
    "author": "Jim Bennett",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries",
      "Topic :: System :: Hardware"
    ],
    "description": "# CounterFit Shims - Grove\n\n![Grove Shim](https://img.shields.io/badge/Platform-Python-green) [![PyPI](https://img.shields.io/pypi/v/counterfit-shims-seeed-python-dht)](https://pypi.org/project/counterfit-shims-seeed-python-dht)\n\nShims for the Seeed Grove DHT digital temperature and humidity sensor to use with the [CounterFit virtual IoT device app](https://github.com/CounterFit-IoT/CounterFit).\n\nSee the [Seeed Python DHT Docs](https://github.com/Seeed-Studio/Seeed_Python_DHT) for the API documentation.\n\n## Getting started\n\nTo use these shims, you will need to install [CounterFit](https://github.com/CounterFit-IoT/CounterFit) and have it running, with the appropriate hardware created.\n\n* Install this package from pip:\n\n    ```sh\n    pip install counterfit-shims-seeed-python-dht\n    ```\n\n* Import the Grove modules as normal, but using the `counterfit_shims_seeed_python_dht` package instead of the `seeed-python-dht` package, as well as importing the `CounterFitConnection` from the `counterfit_shims_grove.counterfit_connection` module:\n\n    ```python\n    from counterfit_connection import CounterFitConnection\n    from counterfit_shims_seeed_python_dht import DHT\n    ```\n\n* Configure the connection to the CounterFit app. Change the hostname and port to where you are running it:\n\n    ```python\n    CounterFitConnection.init('127.0.0.1', 5000)\n    ```\n\n* Write your Grove code as usual, setting the pins to match the ones you set in the CounterFit app. To keep to the interface that the `DHT` specifies, only one pin can be passed to the constructor. The sensor assumes the pin given is for the humidity sensor, and the temperature is on the next pin.\n\n    For example, create a humidity sensor on pin 1, and a temperature sensor on pin 2. Then pass 1 to the `DHT` constructor.\n\n    ```python\n    sensor =.DHT(\"11\", 1)\n    humi, temp = sensor.read()\n    ```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CounterFit-IoT/CounterFit",
    "keywords": "iot grove seeed virtual hardware",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "counterfit-shims-seeed-python-dht",
    "package_url": "https://pypi.org/project/counterfit-shims-seeed-python-dht/",
    "platform": "",
    "project_url": "https://pypi.org/project/counterfit-shims-seeed-python-dht/",
    "project_urls": {
      "Homepage": "https://github.com/CounterFit-IoT/CounterFit"
    },
    "release_url": "https://pypi.org/project/counterfit-shims-seeed-python-dht/0.1.0.dev1/",
    "requires_dist": [
      "requests",
      "counterfit-connection"
    ],
    "requires_python": "",
    "summary": "Shims for the Seeed Grove DBT for the CounterFit virtual IoT device app",
    "version": "0.1.0.dev1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9949842,
  "releases": {
    "0.1.0.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95182fd8f5fdde1229fd561d2080700c4385d91c25585e3f3ea6b46cb0557bd9",
          "md5": "32203885705a72e189e9baa74f83b68d",
          "sha256": "052a040d22f70be9d025e535c655cee21faaa90c0feb20f443046e6104e0dfb6"
        },
        "downloads": -1,
        "filename": "counterfit_shims_seeed_python_dht-0.1.0.dev1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32203885705a72e189e9baa74f83b68d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3115,
        "upload_time": "2021-04-01T18:41:38",
        "upload_time_iso_8601": "2021-04-01T18:41:38.652545Z",
        "url": "https://files.pythonhosted.org/packages/95/18/2fd8f5fdde1229fd561d2080700c4385d91c25585e3f3ea6b46cb0557bd9/counterfit_shims_seeed_python_dht-0.1.0.dev1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "95182fd8f5fdde1229fd561d2080700c4385d91c25585e3f3ea6b46cb0557bd9",
        "md5": "32203885705a72e189e9baa74f83b68d",
        "sha256": "052a040d22f70be9d025e535c655cee21faaa90c0feb20f443046e6104e0dfb6"
      },
      "downloads": -1,
      "filename": "counterfit_shims_seeed_python_dht-0.1.0.dev1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "32203885705a72e189e9baa74f83b68d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 3115,
      "upload_time": "2021-04-01T18:41:38",
      "upload_time_iso_8601": "2021-04-01T18:41:38.652545Z",
      "url": "https://files.pythonhosted.org/packages/95/18/2fd8f5fdde1229fd561d2080700c4385d91c25585e3f3ea6b46cb0557bd9/counterfit_shims_seeed_python_dht-0.1.0.dev1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}