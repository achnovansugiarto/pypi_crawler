{
  "info": {
    "author": "Marc Rijken",
    "author_email": "marc@rijken.org",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Subscribe\n\nA simple yet powerfull subscription library in Python for managing subscriptions.\n\n## Concepts\n\nEvery subscription consists of\n\n- *subscription_list* - a unique identification (just a string) for a list to which is subscribed\n- *prio* - a integer with the prio of the subscription which will be used to order the subscriptions\n  (from low to high)\n- *subscriber* - The object which is subscribed. Can be anything. Often a callable,.\n\n`subscribe` is very flexible and may require some boilerplate to setup. For some frequent use cases\nwe have made helpers: `Event` and `Command`. These are simply to use, so we will the tutorial with\nthese.\n\n\n## Quick start\n\n   Import subscribe\n\n    >>> import subscribe\n\n### Event\n\n    An Event is a class whose instance can be used to notify handler, which will\n    receive the event as single argument.\n\n    Create an Event\n\n    >>> class UserCreated(subscribe.Event):\n    ...     def __init__(self, name: str):\n    ...         self.name = name\n    ...         self.notify()\n\n    >>> called_handlers = []\n\n    Add some subscribers\n\n    >>> @UserCreated.subscribe\n    ... def send_mail(event: UserCreated):\n    ...     called_handlers.append(f\"Send email to {event.name}\")\n\n    >>> @UserCreated.subscribe\n    ... def add_default_groups(event: UserCreated):\n    ...     called_handlers.append(f\"Add default groups {event.name}\")\n\n    Instantiate the event (and call the handlers, because the `__init__`\n    method calls the `notify` method).\n\n    >>> user_created = UserCreated(\"marc\")\n\n    >>> called_handlers\n    ['Send email to marc', 'Add default groups marc']\n\n\n### Command\n\n    A command is special kind of event, with the following differences:\n    - A command must have exactly 1 handler\n    - The command will return the return value of the handler\n\n    Create a Command\n\n    >>> class SendEmail(subscribe.Command):\n    ...     def __init__(self, message: str):\n    ...         self.message = message\n\n    >>> called_handlers = []\n\n    Add a subscriber\n\n    >>> @SendEmail.subscribe\n    ... def send_mail(event: SendEmail, email: str):\n    ...     called_handlers.append(f\"Send email to {email}\")\n    ...     return email\n\n    >>> user_created = SendEmail(\"Welcome\")\n    >>> user_created.execute(email=\"marc@rijken.org\")\n    'marc@rijken.org'\n\n    >>> user_created.execute(email=\"john@example.com\")\n    'john@example.com'\n\n    >>> called_handlers\n    ['Send email to marc@rijken.org', 'Send email to john@example.com']\n\n## Flexible subscriptions\n\n`Event` and `Command` are two predefined use cases of subscriptions. You\ncan define your own to get more flexibility, both in defining the subscribers\nand subscriptions as calling the subcriptions.\n\n### SubscriptionList\n\n    Subscriptions are collected in a `SubscriptionList` which is identified by a\n    string. It is easy to create one.\n\n    >>> new_user = subscribe.SubscriptionList(\"new_user\")\n\n### Subscribe to the SubscriptionList\n\n    You can add a subscriber by using the `subscribe` decorator of the\n    SubscriptionList.\n\n    >>> @new_user.subscribe()\n    ... def send_mail(user):\n    ...     pass\n\n    The subscribers can be anything, so they do not have to be callables.\n\n    You can subscribe multiple subscribers to the same SubscriptionList.\n    The subscribers will be sorted in order of priority. When no priority is given, the priority\n    will be equal to 0 and the subscriptions will be in order of addition.\n\n    >>> @new_user.subscribe(priority=-1)\n    ... def compute_age(user):\n    ...     pass\n\n\n### Get the subscriptions\n\n    You can get the subscriptions (which contains the subscriber, subscription list and priortiy), \n    ie so you call the subscribed functions. Of course you can not call the subscribers if \n    they are not callable, but you\n    can iterate over them to do whatever you want.\n\n    >>> [i for i in new_user.get_subscriptions()]\n    [Subscription(subscription_list=<SubscriptionList id='new_user'>, priority=-1, subscriber=<function compute_age at ...>), Subscription(subscription_list=<SubscriptionList id='new_user'>, priority=0, subscriber=<function send_mail at ...>)]\n\n    Or just the subscribers, which is most of the time what you want\n\n    >>> [i.__name__ for i in new_user.get_subscribers()]\n    ['compute_age', 'send_mail']\n\n    You can also use the `subscribers` property.\n\n    >>> [i.__name__ for i in new_user.subscribers]\n    ['compute_age', 'send_mail']\n\n    Often the subscribers are callables. You can call them all with\n    the same parameters. Note: return value will not be collected and returned\n    \n    >>> new_user.call_subscribers(user=\"marc\")\n\n\n### Advanced Usage\n\n#### Class based SubscriptionList\n\n    An important use case is to subscribe to classes, which\n    will use the fully qualified name of the class as the\n    SubscriptionLIst identification.\n\n    >>> class EventBase:\n    ...   pass\n    >>> class NewUserEvent(EventBase):\n    ...   pass\n\n    >>> new_user_event = subscribe.ClassSubscriptionList(NewUserEvent)\n    >>> new_user_event\n    <ClassSubscriptionList class='__main__.NewUserEvent'>\n\n    You do not have to pass the subscription list around; you can\n    recreate it:\n\n    >>> new_user_event == subscribe.ClassSubscriptionList(NewUserEvent)\n    True\n\n    And use it as a regular SubscriptionList to subscribe.\n\n    >>> @new_user_event.subscribe()\n    ... def subscriber1():\n    ...     pass\n    >>> @new_user_event.subscribe()\n    ... def subscriber2():\n    ...     pass\n\n    And get the subscribers as a regular SubscriptionList.\n\n    >>> list(new_user_event.get_subscribers()) == [subscriber1, subscriber2]\n    True\n    >>> list(new_user_event.subscribers) == [subscriber1, subscriber2]\n    True\n\n    If you do not have the instance of the SubscriptionList anymore, you can\n    get a new one by passing the class or the instance to ClassSubscriptionList.\n\n    >>> list(subscribe.ClassSubscriptionList(NewUserEvent).subscribers) == [subscriber1, subscriber2]\n    True\n\n    >>> list(subscribe.ClassSubscriptionList(NewUserEvent()).subscribers) == [subscriber1, subscriber2]\n    True\n\n### Superclass\n\n    ClassSubscriptionList will iterate over the subscribers for the exact same class. If you want to\n    use the superclass to iterate over all it subscribers and the subscribers of it's subclasses,\n    you have to use SuperClassSubscriptionList\n\n    >>> super_new_user_event = subscribe.SuperClassSubscriptionList(NewUserEvent)\n    >>> base_event = subscribe.SuperClassSubscriptionList(EventBase)\n\n    The subclass still has the same subscribers\n\n    >>> list(super_new_user_event.subscribers) == [subscriber1, subscriber2]\n    True\n\n    When we create a subscriber on the superclass\n\n    >>> @base_event.subscribe()\n    ... def event_subscriber():\n    ...     pass\n\n    that will be visible as subscriber on the subclass.\n\n    >>> list(super_new_user_event.subscribers) == [subscriber1, subscriber2, event_subscriber]\n    True\n\n    And on the superclass\n\n    >>> list(base_event.subscribers) == [event_subscriber]\n    True\n\n#### Prefix on names\n\n    The class name will be used for the identification. So if you want to create\n    different SubscriptionLists for the same class, you can add a prefix to the\n    SubscriptionList:\n\n    When a prefix is used, `partial` can be used to make sure the right prefix is used every time.\n    \n    >>> prefixed_new_user_event = subscribe.ClassSubscriptionList(NewUserEvent, prefix='my_prefix')\n    >>> prefixed_new_user_event == new_user_event\n    False\n\n    You can use partial to make sure that you uses the same prefix.\n\n    >>> import functools\n    >>> PrefixedClassSubscriptionList = functools.partial(subscribe.ClassSubscriptionList, prefix='my_prefix')\n    >>> prefixed_new_user_event = PrefixedClassSubscriptionList(NewUserEvent)\n    >>> @prefixed_new_user_event.subscribe()\n    ... def subscriber5():\n    ...     pass\n    >>> list(prefixed_new_user_event.subscribers) == [subscriber5]\n    True\n\n\n\n#### Multiple instantiation\n\n    A subscription list can be created multiple times\n\n    >>> first = subscribe.SubscriptionList(\"my list\")\n    >>> second = subscribe.SubscriptionList(\"my list\")\n\n    Both can be used to subscribe.\n\n    >>> first.subscribe()(\"subscribe to first\")\n    'subscribe to first'\n    >>> second.subscribe()(\"subscribe to second\")\n    'subscribe to second'\n\n    Both will have the same subscriptions.\n\n    >>> [i.subscriber for i in first.get_subscriptions()]\n    ['subscribe to first', 'subscribe to second']\n    >>> [i.subscriber for i in second.get_subscriptions()]\n    ['subscribe to first', 'subscribe to second']\n    \n#### Subclass SubscriptionList\n\n    You can subclass SubscriptionList, like we did with ClassSubscriptionList.\n\n    For example, if you have users.\n\n    >>> class User:\n    ...     def __init__(self, username):\n    ...         self.username = username\n\n    Which could be used to subscribe to, like subscribing to Twitter accounts\n\n    >>> class UserSubscriptionList(subscribe.SubscriptionList):\n    ...     def __init__(self, user: User):\n    ...         super().__init__(f\"user:{user.username}\")\n\n    Note: the subscription list is in memory and not persistent. You can implement your own \n    persistency for your SubscriptionList subclass when appropriate.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mrijken/subscribe",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "subscribe",
    "package_url": "https://pypi.org/project/subscribe/",
    "platform": "",
    "project_url": "https://pypi.org/project/subscribe/",
    "project_urls": {
      "Homepage": "https://github.com/mrijken/subscribe",
      "Repository": "https://github.com/mrijken/subscribe"
    },
    "release_url": "https://pypi.org/project/subscribe/0.6.1/",
    "requires_dist": null,
    "requires_python": ">=3.6.2,<4.0",
    "summary": "Library for managing subscriptions",
    "version": "0.6.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10896944,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "586e39c01eb514345f0e2e3b167c9903c82faf64fe40ef93404dc62ec2d3f9e1",
          "md5": "2f19b5b77b31dcdaf1f50e63d971d367",
          "sha256": "b6766fafd8dfc5c58f7b10d19a8b882a51f19a6cd0961a679491c56df1fe5273"
        },
        "downloads": -1,
        "filename": "subscribe-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f19b5b77b31dcdaf1f50e63d971d367",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 3317,
        "upload_time": "2021-05-25T12:56:05",
        "upload_time_iso_8601": "2021-05-25T12:56:05.728294Z",
        "url": "https://files.pythonhosted.org/packages/58/6e/39c01eb514345f0e2e3b167c9903c82faf64fe40ef93404dc62ec2d3f9e1/subscribe-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9aaea889b5e61b2fd6cc2ec9def5d728c1266edec2c86d56a8dfa52ab21d35a",
          "md5": "191e6e5bce1410d296a3de750401a171",
          "sha256": "c0877b7b4bf9029810f46f57017c298dd45502e6f8c0537928d10e919f5913f2"
        },
        "downloads": -1,
        "filename": "subscribe-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "191e6e5bce1410d296a3de750401a171",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 3977,
        "upload_time": "2021-05-25T12:56:06",
        "upload_time_iso_8601": "2021-05-25T12:56:06.718618Z",
        "url": "https://files.pythonhosted.org/packages/d9/aa/ea889b5e61b2fd6cc2ec9def5d728c1266edec2c86d56a8dfa52ab21d35a/subscribe-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ab6ee36adca6debd03767c30e359e3bbb14dbd65ff9440149bfe073f520200e",
          "md5": "50fb6832588fdb53fa5ad690fafb55f0",
          "sha256": "1914681429c32f5ab477251dce1ccf7b5d19c3953d39690461e2d372e4487d3d"
        },
        "downloads": -1,
        "filename": "subscribe-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "50fb6832588fdb53fa5ad690fafb55f0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 3635,
        "upload_time": "2021-05-30T15:10:10",
        "upload_time_iso_8601": "2021-05-30T15:10:10.738110Z",
        "url": "https://files.pythonhosted.org/packages/0a/b6/ee36adca6debd03767c30e359e3bbb14dbd65ff9440149bfe073f520200e/subscribe-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6cbd90d6a486e81c9beef4a774e671501d365ea0f794677b395268e748fcb2b",
          "md5": "83296747203f689a82c3c318bc0eaaac",
          "sha256": "d2bfd9f48faa7d60001ab29cac9275f0d66c903ab96405962905830631a33438"
        },
        "downloads": -1,
        "filename": "subscribe-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "83296747203f689a82c3c318bc0eaaac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 4405,
        "upload_time": "2021-05-30T15:10:11",
        "upload_time_iso_8601": "2021-05-30T15:10:11.723483Z",
        "url": "https://files.pythonhosted.org/packages/d6/cb/d90d6a486e81c9beef4a774e671501d365ea0f794677b395268e748fcb2b/subscribe-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a7bdfe64e5f818f40e6d680a762b82071359489bc9c6851b330f1098d3b2961",
          "md5": "7f611688932cfe01dc8e8510cc9c27f7",
          "sha256": "d82e36c0a4b4083853c774d03bd42a48c82a6933de197cf6cb3c0ff1669c24ae"
        },
        "downloads": -1,
        "filename": "subscribe-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f611688932cfe01dc8e8510cc9c27f7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 3823,
        "upload_time": "2021-05-30T20:01:39",
        "upload_time_iso_8601": "2021-05-30T20:01:39.175176Z",
        "url": "https://files.pythonhosted.org/packages/8a/7b/dfe64e5f818f40e6d680a762b82071359489bc9c6851b330f1098d3b2961/subscribe-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd1b0ce38fdae400f1f6a37e50809457951cdb254d64554ef44debc7e0c4b1be",
          "md5": "b234d666daa2e66c3e3c393e67915cc0",
          "sha256": "f1e9c6d7ead10472617a5ad496d247def633bfe6496f9784462d0f921a622b87"
        },
        "downloads": -1,
        "filename": "subscribe-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b234d666daa2e66c3e3c393e67915cc0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 4608,
        "upload_time": "2021-05-30T20:01:40",
        "upload_time_iso_8601": "2021-05-30T20:01:40.201678Z",
        "url": "https://files.pythonhosted.org/packages/cd/1b/0ce38fdae400f1f6a37e50809457951cdb254d64554ef44debc7e0c4b1be/subscribe-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45deb1254a373178d873f3b0b9bcedb2e372303aaab0aef3c331c63a1ff1612c",
          "md5": "6aff3085cf9e75ae82b19746803697f7",
          "sha256": "e744a445f3e3f4ec629fa4b0e520d5ade16e16c6f5b4f30395439f98c276c1d4"
        },
        "downloads": -1,
        "filename": "subscribe-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6aff3085cf9e75ae82b19746803697f7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 3912,
        "upload_time": "2021-06-02T22:59:30",
        "upload_time_iso_8601": "2021-06-02T22:59:30.659740Z",
        "url": "https://files.pythonhosted.org/packages/45/de/b1254a373178d873f3b0b9bcedb2e372303aaab0aef3c331c63a1ff1612c/subscribe-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61171b97dc661228751c234e955c02a1b04bccce85a47b6a630c689a0d4768b3",
          "md5": "01556557cf5e0e57bc3d18ade202c8f8",
          "sha256": "faec35f3c8aae748c90f0ccf626e0725d4447c20186a34964289915dbf5f8601"
        },
        "downloads": -1,
        "filename": "subscribe-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "01556557cf5e0e57bc3d18ade202c8f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 4739,
        "upload_time": "2021-06-02T22:59:31",
        "upload_time_iso_8601": "2021-06-02T22:59:31.620374Z",
        "url": "https://files.pythonhosted.org/packages/61/17/1b97dc661228751c234e955c02a1b04bccce85a47b6a630c689a0d4768b3/subscribe-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b452adb4eee4d4c6771f6e4518fdb0a753946a4de515db910ee7324bef52f78",
          "md5": "a25e07942d09a93108b58656aa994243",
          "sha256": "849214258585cb076744e971cae2265bc9fc4a22b244c8fa5bb5d5f1ba03152f"
        },
        "downloads": -1,
        "filename": "subscribe-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a25e07942d09a93108b58656aa994243",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 4014,
        "upload_time": "2021-06-02T23:33:44",
        "upload_time_iso_8601": "2021-06-02T23:33:44.797844Z",
        "url": "https://files.pythonhosted.org/packages/5b/45/2adb4eee4d4c6771f6e4518fdb0a753946a4de515db910ee7324bef52f78/subscribe-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e2b5d710804d7bf297f5543b5503cfcef03026f0a27faaa0e6229da153d6ce1",
          "md5": "958122e77d6b2329437e03226a795bf1",
          "sha256": "f42903f61dd34151814f20e9fa244e4fcd10b6e7784e4c56205dc6d44d7cdc46"
        },
        "downloads": -1,
        "filename": "subscribe-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "958122e77d6b2329437e03226a795bf1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 4890,
        "upload_time": "2021-06-02T23:33:45",
        "upload_time_iso_8601": "2021-06-02T23:33:45.691933Z",
        "url": "https://files.pythonhosted.org/packages/9e/2b/5d710804d7bf297f5543b5503cfcef03026f0a27faaa0e6229da153d6ce1/subscribe-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1661f2a991f8bfd127e772f7a75403a4ad39b0b46462776ccb8dfcebbf81a019",
          "md5": "931186b72ccf176e6be7b19f2c37562a",
          "sha256": "5bffdd65886a20511d26c6a9ae347ea7aa4f94270bca5ae29c97ce596a5c9402"
        },
        "downloads": -1,
        "filename": "subscribe-0.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "931186b72ccf176e6be7b19f2c37562a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<4.0",
        "size": 6641,
        "upload_time": "2021-07-13T13:07:37",
        "upload_time_iso_8601": "2021-07-13T13:07:37.168244Z",
        "url": "https://files.pythonhosted.org/packages/16/61/f2a991f8bfd127e772f7a75403a4ad39b0b46462776ccb8dfcebbf81a019/subscribe-0.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "438085f7d1f3629a93bdb8a1a7c29d19fedcfbe749e14f045f3d56ccafb637e6",
          "md5": "335704d7548f0505a1ec552875d2f683",
          "sha256": "ab21bdec2957a8b530ff310ec505f25f46acfa06a3c453c5029de03fd011b2d8"
        },
        "downloads": -1,
        "filename": "subscribe-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "335704d7548f0505a1ec552875d2f683",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<4.0",
        "size": 7992,
        "upload_time": "2021-07-13T13:07:38",
        "upload_time_iso_8601": "2021-07-13T13:07:38.112489Z",
        "url": "https://files.pythonhosted.org/packages/43/80/85f7d1f3629a93bdb8a1a7c29d19fedcfbe749e14f045f3d56ccafb637e6/subscribe-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1661f2a991f8bfd127e772f7a75403a4ad39b0b46462776ccb8dfcebbf81a019",
        "md5": "931186b72ccf176e6be7b19f2c37562a",
        "sha256": "5bffdd65886a20511d26c6a9ae347ea7aa4f94270bca5ae29c97ce596a5c9402"
      },
      "downloads": -1,
      "filename": "subscribe-0.6.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "931186b72ccf176e6be7b19f2c37562a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.2,<4.0",
      "size": 6641,
      "upload_time": "2021-07-13T13:07:37",
      "upload_time_iso_8601": "2021-07-13T13:07:37.168244Z",
      "url": "https://files.pythonhosted.org/packages/16/61/f2a991f8bfd127e772f7a75403a4ad39b0b46462776ccb8dfcebbf81a019/subscribe-0.6.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "438085f7d1f3629a93bdb8a1a7c29d19fedcfbe749e14f045f3d56ccafb637e6",
        "md5": "335704d7548f0505a1ec552875d2f683",
        "sha256": "ab21bdec2957a8b530ff310ec505f25f46acfa06a3c453c5029de03fd011b2d8"
      },
      "downloads": -1,
      "filename": "subscribe-0.6.1.tar.gz",
      "has_sig": false,
      "md5_digest": "335704d7548f0505a1ec552875d2f683",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.2,<4.0",
      "size": 7992,
      "upload_time": "2021-07-13T13:07:38",
      "upload_time_iso_8601": "2021-07-13T13:07:38.112489Z",
      "url": "https://files.pythonhosted.org/packages/43/80/85f7d1f3629a93bdb8a1a7c29d19fedcfbe749e14f045f3d56ccafb637e6/subscribe-0.6.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}