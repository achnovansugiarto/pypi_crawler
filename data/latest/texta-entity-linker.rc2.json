{
  "info": {
    "author": "TEXTA",
    "author_email": "info@texta.ee",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "### Installation\n\n```\npip install https://pypi.texta.ee/texta-concatenator/texta-concatenator-latest.tar.gz\n```\n\n\n\n### Description\n\nTexta EntityLinker servers as a method to link together multiple entities in the form of Texta Facts to create a more concrete\nand united profile of the personal information which exists in the processed text.\n\nThis process will **ONLY** work on documents which have been previously processed by Texta MLP and contain the \"BOUNDED\" type Facts.\n\nIn addition, the EntityLinker needs an abbreviations.json file which contains key-value pairs of institutions shorthand name and full name. This package comes\nwith a base file which it uses by default but it is always possible to change it by giving the class a filepath of the file you wish to use.\n\n\n*This package has no support for applying Texta MLP, you need to install the package by yourself or apply it on already processed documents.*\n\n### Usage\n\n#### Create an instance the class:\n```python\nfrom texta_entitylinker.entity_linker import EntityLinker\n\n# Using the built-in abbreviations.json file.\nc = EntityLinker()\n\n# or inserting the file by path.\nc = EntityLinker(abbr_file=\"/home/texta/abbreviations.json\")\n```\n\n#### Prepare the input you wish to parse:\n\nLetter 1:\n```\nDear all, \n\nLet`s not forget that I intend to concure the whole of Persian Empire!\n\nBest wishes,\nAlexander Great\naleksandersuur356eKr@mail.ee\nphone: 76883266\n\n```\n\nLetter 2:\n\n```\nОт: Terry Pratchett < tpratchett@gmail.com >\nКому: Joe Abercrombie < jabercrombie@gmail.com >\nНазвание: Разъяснение\n\nДорогой Joe,\n\nКак вы? Надеюсь, у тебя все хорошо. Последний месяц я писал свой новый роман, \nкоторый обещал представить в начале лета. Я тоже немного почитал и обожаю твою \nновую книгу!\n\nЯ просто хотел уточнить, что Alexander Great жил в Македонии.\n\nЛучший,\nTerry\n\n```\n\nLetter 3:\n\n```\nDear Terry!\n\nTerry Pratchett already created Discworld. This name is taken. Other than that I found \nthe piece fascanating and see great potential in you! I strongly encourage you to take \naction in publishing your works. Btw, if you would like to show your works to Pratchett \nas well, he`s interested. I talked about you to him. His email is tpratchett@gmail.com. \nFeel free to write him!\n\nJoe\n\n\nFrom: Terry Berry < bigfan@gmail.com >\nTo: Joe Abercrombie < jabercrombie@gmail.com >\nTitle: Question\n\nHi Joe,\n\nI finally finished my draft and I`m sending it to you. The hardest part \nwas creating new places. What do you think of the names of the places I created?\n\nTerry Berry\n \n```\n\n#### Process input through the Texta MLP package:\n\n```python\nfrom texta_mlp.mlp import MLP\n\n# This folder should contain all the MLP associated models and data.\n# If they don't exists, it will download them and store it at paths location,\n# creating directories as needed.\n\n# All the inputs must be processed one by one.\nm = MLP(resource_dir=\"/home/texta/mlp_data\")\nmlp_analysis = m.process(letter_1)\n```\n\nThis process does the basic Entity parsing and creates the BOUNDED facts needed for the entity linking process:\n\n```\n[\n {\n  'doc_path': 'text.text',\n  'fact': 'EMAIL',\n  'lemma': None,\n  'spans': '[[114, 142]]',\n  'str_val': 'aleksandersuur356eKr@mail.ee'\n },\n\n {\n  'doc_path': 'text.text',\n  'fact': 'LOC',\n  'lemma': None,\n  'spans': '[[67, 81]]',\n  'str_val': 'Persian Empire'\n },\n\n {\n  'doc_path': 'text.text',\n  'fact': 'BOUNDED',\n  'lemma': \"{'PER': ['Alexander Great'], 'EMAIL': \"\n           \"['aleksandersuur356ekr@mail.ee'], 'PHONE': ['76883266']}\",\n  'spans': '[[98, 113], [114, 142], [151, 159]]',\n  'str_val': \"{'PER': ['Alexander Great'], 'EMAIL': \"\n             \"['aleksandersuur356eKr@mail.ee'], 'PHONE': ['76883266']}\"\n },\n\n {\n  'doc_path': 'text.text',\n  'fact': 'NAMEMAIL',\n  'lemma': None,\n  'spans': '[[98, 142]]',\n  'str_val': 'Alexander Great aleksandersuur356eKr@mail.ee'\n },\n\n {\n  'doc_path': 'text.text',\n  'fact': 'PHONE',\n  'lemma': None,\n  'spans': '[[151, 159]]',\n  'str_val': '76883266'\n}\n]\n```\n\n#### Load the batch into the EntityLinker:\n```python\n# Note that the full result of the MLP process is necessary, \n# not only the texta_facts dictionary.\nc.from_json([mlp_letter_1, mlp_letter_2, mlp_letter_3])\n```\n\n#### Trigger the process for entity linking:\n```python\n# On larger datasets, this might take a long time.\nc.link_entities()\n```\n\n#### Miscellaneous information:\n\n\nYou can check the length of the database lists and the content with functions:\n - cn._just_pers_infos() (type \"close_persons\", persons appearing close in letter(s)), \n - cn._bounded() (the original unconcatenated bounded), \n - cn._unsure_infos() (type \"unsure_whose_entities\", enities that have >=2 candidate persons, not sure to whom it belongs), \n - cn._no_personas_infos() (type \"no_per_close_entities\", entities appearing close in letter(s) without persons nearby),\n - cn._persona_infos() (type \"person_info\", the real deal, entities with its person).\n    \n#### Output:\n\nAfter the .link_entities() function has finished its job, you can view the full results\nof the entity linking with:\n```\nc.to_json()\n\n[\n    {\"type\": \"person_info\", \"PER\": \"Alexander Great\", \"LOC\": [\"Македония\", \"Persian Empire\"], \"EMAIL\": [\"aleksandersuur356eKr@mail.ee\"], \"PHONE\": [\"76883266\"]}\n    {\"type\": \"person_info\", \"PER\": \"Joe Abercrombie\", \"EMAIL\": [\"jabercrombie@gmail.com\"]}\n    {\"type\": \"person_info\", \"PER\": \"Terry Berry\", \"EMAIL\": [\"bigfan@gmail.com\"]}\n    {\"type\": \"person_info\", \"PER\": \"Terry Pratchett\", \"EMAIL\": [\"tpratchett@gmail.com\"]}\n]",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://git.texta.ee/texta/texta-entity-linker",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "texta-entity-linker",
    "package_url": "https://pypi.org/project/texta-entity-linker/",
    "platform": "",
    "project_url": "https://pypi.org/project/texta-entity-linker/",
    "project_urls": {
      "Homepage": "https://git.texta.ee/texta/texta-entity-linker"
    },
    "release_url": "https://pypi.org/project/texta-entity-linker/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "TEXTA Entity Linker",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9749629,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2da2d838836e436d639aef492381985a70edaef34ab7551cafced1d5fb49e927",
          "md5": "929990dc96ed1ec462cb0d35e3a83277",
          "sha256": "f8a776308ce987ef20dc12142b395530bab84ffc3f895684364a7f45e6d7e2aa"
        },
        "downloads": -1,
        "filename": "texta-entity-linker-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "929990dc96ed1ec462cb0d35e3a83277",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27076,
        "upload_time": "2020-08-27T08:03:20",
        "upload_time_iso_8601": "2020-08-27T08:03:20.685590Z",
        "url": "https://files.pythonhosted.org/packages/2d/a2/d838836e436d639aef492381985a70edaef34ab7551cafced1d5fb49e927/texta-entity-linker-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68b63013ab3190cef610641b21dd936328c9cceb9973cb020482f0c75bf58dd7",
          "md5": "81dda507a21e7979aa52c6f11385c852",
          "sha256": "96fde7acbfcd9c545a34f7a6ad6619fa05c9a489ae2d751f74c07194ae200e3b"
        },
        "downloads": -1,
        "filename": "texta-entity-linker-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "81dda507a21e7979aa52c6f11385c852",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27048,
        "upload_time": "2021-03-12T08:11:31",
        "upload_time_iso_8601": "2021-03-12T08:11:31.418391Z",
        "url": "https://files.pythonhosted.org/packages/68/b6/3013ab3190cef610641b21dd936328c9cceb9973cb020482f0c75bf58dd7/texta-entity-linker-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "68b63013ab3190cef610641b21dd936328c9cceb9973cb020482f0c75bf58dd7",
        "md5": "81dda507a21e7979aa52c6f11385c852",
        "sha256": "96fde7acbfcd9c545a34f7a6ad6619fa05c9a489ae2d751f74c07194ae200e3b"
      },
      "downloads": -1,
      "filename": "texta-entity-linker-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "81dda507a21e7979aa52c6f11385c852",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 27048,
      "upload_time": "2021-03-12T08:11:31",
      "upload_time_iso_8601": "2021-03-12T08:11:31.418391Z",
      "url": "https://files.pythonhosted.org/packages/68/b6/3013ab3190cef610641b21dd936328c9cceb9973cb020482f0c75bf58dd7/texta-entity-linker-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}