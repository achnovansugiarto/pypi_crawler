{
  "info": {
    "author": "artificial-scientist-lab",
    "author_email": "cruizgo@proton.me, soeren.arlt@mpl.mpg.de, mario.krenn@mpl.mpg.de",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PyTheus\nPyTheus, a highly-efficient inverse-design algorithm for quantum optical experiments\n\n## Installation\n\nWhen published it will be possible to install via `pip install`. Untill then, install from source (after cloning the repository):\n\n```\npython setup.py install\n```\n\n## Running PyTheus\n\nTo run PyTheus on one of the examples, type e.g.\n\n```\npytheus run --example ghz_346\n```\n\nTo list all examples, type\n\n```\npytheus list\n```\n\nTo run your own input file, type\n\n```\npytheus run PATH_TO_YOUR_INPUT_FILE\n```\n\nOutput of optimization is saved to a directory called `output`. Names of the subdirectorie are specified by the name\nand content of the config file.\n\nTo plot the graph corresponding to one result saved as a json file, execute \n\n```\npytheus plot PATH_TO_RESULT_FILE\n```\n\n## Analysing PyTheus Results\n\nTo analyze a subdirectory corresponding to one run, type\n\n```\npytheus analyze -d outputs/ghz_346/ghz_346 \n```\nor just \n```\npytheus analyze  \n```\nthen an overview of all available folders that can be selected is given.\nAfter that one can choose which run (if there exists different run-folders having different\nsummary files) one wants to analyze. When you have decided on a state, an overview plot is created\nthat shows the graph, the development of the loss function and various properties \nthat can be declared via ```-i```. With ```-pm``` a pdf can be created that shows all perfect matchings. \nWhen one wants to set all weights to plus minus one one can choose the option ```-one```.\nEverthing together:\n```\npytheus analyze -d your/directory -one -pm -i 'norm' -i 'ent' -i 'k'  \n```\n```norm``` shows the normalization of the state, ```ent``` gives information about entanglement for \nthe different bipartitions and ```k``` gives information if there is a k-uniform state and which\n bipartitions are maximally entangled (=1) or separable (=0).\n\nTo get help, add the `--help` option to any command. For instance\n\n```\n> pytheus run --help\n\nUsage: pytheus run [OPTIONS] FILENAME\n\n  Run an input file.\n\nOptions:\n  --example  Load input file from examples directory.\n  --help     Show this message and exit.\n```\n\n## Development\n\n### Clone repository\n\n```\ngit clone https://github.com/artificial-scientist-lab/PyTheus.git\n```\n\n### Create virtual environment\n\nFrom the project root directory, submit\n\n```\npython -m venv venv\n```\n\nThis will create a subfolder with your virtual environment.\n\nTo activate, type\n\n```\n. venv/bin/activate\n```\n\nNote the leading point!\n\n### Local development installation\n\nSubmit\n\n```\npython setup.py develop\n```\n\nfrom the project root directory (where `setup.py` is located).\nAny changes in the code will now automatically be reflected\nin your local package installation.\n\n\n## Tests\n\n### Run test suite\n\n#### Running all tests\n\n```\npython -m unittest discover tests\n```\n\n#### Running only the fast tests\n\n```\npython -m unittest discover -s tests/fast\n```\n\n### Test coverage\n\nInstall `coverage`, if you have not yet done so:\n\n```\npip install coverage\n```\n\nThen run coverage scan:\n\n```\ncoverage run --source=pytheus -m unittest discover tests \n```\n\nAfter that, create the coverage report:\n\n```\ncoverage report -m\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/artificial-scientist-lab/Pytheus",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "suehtyp",
    "package_url": "https://pypi.org/project/suehtyp/",
    "platform": "ALL",
    "project_url": "https://pypi.org/project/suehtyp/",
    "project_urls": {
      "Homepage": "https://github.com/artificial-scientist-lab/Pytheus"
    },
    "release_url": "https://pypi.org/project/suehtyp/1.2.4/",
    "requires_dist": [
      "sphinx",
      "numpy",
      "scipy",
      "matplotlib",
      "termcolor",
      "Click"
    ],
    "requires_python": ">=3.6",
    "summary": "Theseus, a highly-efficient inverse-design algorithm for quantum optical experiments",
    "version": "1.2.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15452040,
  "releases": {
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddcb5250acdb0a5dfed7e59e6f89f2d728b2b9b3a11bc02ef359cb2f559c73ec",
          "md5": "2e72ac8fd117f885d71dbdc2526471e2",
          "sha256": "b8657971a1f89b26119f723e96b1b22066554597ce5e64e0b5307545c0781c92"
        },
        "downloads": -1,
        "filename": "suehtyp-1.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e72ac8fd117f885d71dbdc2526471e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 65051,
        "upload_time": "2022-10-13T15:46:01",
        "upload_time_iso_8601": "2022-10-13T15:46:01.459738Z",
        "url": "https://files.pythonhosted.org/packages/dd/cb/5250acdb0a5dfed7e59e6f89f2d728b2b9b3a11bc02ef359cb2f559c73ec/suehtyp-1.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afb0e263152b42b96d68ac873962bd2be12782ec1f7b5f6bc89b90a591cb63c1",
          "md5": "21fb678d713c2052b6913347e04a13d0",
          "sha256": "4504b4f84d396618145bafeca429b1aba7d6b3cebd24c5445d7c7a8e122109fb"
        },
        "downloads": -1,
        "filename": "suehtyp-1.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "21fb678d713c2052b6913347e04a13d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 59285,
        "upload_time": "2022-10-13T15:46:04",
        "upload_time_iso_8601": "2022-10-13T15:46:04.304415Z",
        "url": "https://files.pythonhosted.org/packages/af/b0/e263152b42b96d68ac873962bd2be12782ec1f7b5f6bc89b90a591cb63c1/suehtyp-1.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66e6d96bb7072e9d13511542132b8e7effac641f6e132ffbc57afb522d0339bf",
          "md5": "f36c1c56c19544dcb4ad5dac86b08d0c",
          "sha256": "43d7f75c9c712786016af8f28c26d4682b3f0db6d42a98d3390d579946deda76"
        },
        "downloads": -1,
        "filename": "suehtyp-1.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f36c1c56c19544dcb4ad5dac86b08d0c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6193997,
        "upload_time": "2022-10-18T17:54:05",
        "upload_time_iso_8601": "2022-10-18T17:54:05.154738Z",
        "url": "https://files.pythonhosted.org/packages/66/e6/d96bb7072e9d13511542132b8e7effac641f6e132ffbc57afb522d0339bf/suehtyp-1.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "949539bd075c0caa3de25768cec7d9687c4e621ab6c85eb9c9e82a0c316ab8bf",
          "md5": "c49071ee9c1d5dfc3a9f963ee22e148e",
          "sha256": "7c2f53a8e6257b945f82e22db990a6bc8ecb315c10aba9f385bce97b60d275e1"
        },
        "downloads": -1,
        "filename": "suehtyp-1.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c49071ee9c1d5dfc3a9f963ee22e148e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5715813,
        "upload_time": "2022-10-18T17:54:07",
        "upload_time_iso_8601": "2022-10-18T17:54:07.675082Z",
        "url": "https://files.pythonhosted.org/packages/94/95/39bd075c0caa3de25768cec7d9687c4e621ab6c85eb9c9e82a0c316ab8bf/suehtyp-1.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "66e6d96bb7072e9d13511542132b8e7effac641f6e132ffbc57afb522d0339bf",
        "md5": "f36c1c56c19544dcb4ad5dac86b08d0c",
        "sha256": "43d7f75c9c712786016af8f28c26d4682b3f0db6d42a98d3390d579946deda76"
      },
      "downloads": -1,
      "filename": "suehtyp-1.2.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f36c1c56c19544dcb4ad5dac86b08d0c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6193997,
      "upload_time": "2022-10-18T17:54:05",
      "upload_time_iso_8601": "2022-10-18T17:54:05.154738Z",
      "url": "https://files.pythonhosted.org/packages/66/e6/d96bb7072e9d13511542132b8e7effac641f6e132ffbc57afb522d0339bf/suehtyp-1.2.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "949539bd075c0caa3de25768cec7d9687c4e621ab6c85eb9c9e82a0c316ab8bf",
        "md5": "c49071ee9c1d5dfc3a9f963ee22e148e",
        "sha256": "7c2f53a8e6257b945f82e22db990a6bc8ecb315c10aba9f385bce97b60d275e1"
      },
      "downloads": -1,
      "filename": "suehtyp-1.2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "c49071ee9c1d5dfc3a9f963ee22e148e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5715813,
      "upload_time": "2022-10-18T17:54:07",
      "upload_time_iso_8601": "2022-10-18T17:54:07.675082Z",
      "url": "https://files.pythonhosted.org/packages/94/95/39bd075c0caa3de25768cec7d9687c4e621ab6c85eb9c9e82a0c316ab8bf/suehtyp-1.2.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}