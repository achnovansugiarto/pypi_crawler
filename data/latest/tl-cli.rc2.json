{
  "info": {
    "author": "Thomas Lotze",
    "author_email": "thomas@thomas-lotze.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Zope Public License"
    ],
    "description": "=======================\nThe tl.cli distribution\n=======================\n\nVarious command line interface utilities.\n\nThis package requires Python 2, at least 2.5.\n\n\n``tl.readline``: ``readline`` related utilities\n===============================================\n\nAPI functions of this module act as no-ops if readline is not present.\n\n\nHistory handling\n----------------\n\n:``use_history(name)``:\n  Switch between multiple named histories, e.g. when embedding one command\n  interpreter inside another one.\n\n:``with_history(name)``:\n  Create a function decorator that runs a function with a named readline\n  history, maintaining a stack of histories for nested function calls.\n\n\nTab completion\n--------------\n\n:``use_completion()``:\n  Configure readline to use tab completion.\n\n:``static_completions(strings)``:\n  Create a completer function usable with readline that completes partial text\n  based on a static list of strings. The completer function computes an\n  iterable of matches.\n\n:``completion_generator(completions)``:\n  A function decorator that takes a completer function and returns a\n  completion generator usable with readline. The completion generator returns\n  successive matches on partial text based on a state parameter.\n\n:``input(prompt, default=None, completions=None)``:\n  A rich version of ``raw_input`` that in the presence of readline, allows for\n  commad line editing the default value and using custom tab completion.\n  Without readline, it displays the default value after the prompt.\n\n:``filename_completions(base_dir)``:\n  Create a completer function usable with readline that completes partial text\n  based on file names from the file system. The completer function computes an\n  iterable of matches.\n\n\n``tl.cmd``: an enhanced command shell\n=====================================\n\n``tl.cmd.Cmd`` is a command shell based on Python's ``cmd.Cmd`` that adds some\ngeneric usability features, some of them only of interest to developers.\n\n- Exceptions are caught instead of aborting the command loop. The traceback is\n  stored for subsequent introspection by the postmortem debugger. The debugger\n  is run by the ``postmortem`` command.\n\n- The ``python`` command runs a Python shell to access the command interpreter\n  directly.\n\n- End-of-file sent by the terminal quits the command loop.\n\n- Empty input lines are ignored instead of repeating the previous command.\n\n- Commands may be abbreviated as long as abbreviations are unambiguous.\n\n- When using tab completion, the cursor is positioned more conveniently.\n\n- Online help for commands is generated from the docstrings of the ``do_*``\n  methods that implement them where no ``help_*`` methods exist.\n\n\n``tl.cli.edit``: text editing\n=============================\n\n:``tl.cli.edit.edit(text, editor=None, file_encoding=None)``:\n  Runs the user's favourite text editor (or vi) on a temp file containing the\n  text string, then reads it back in and returns the edited content.\n\n\n``tl.cli.page``: paging through text\n====================================\n\n:``tl.cli.page.page(text, pager=None)``:\n  Runs the user's favourite pager (or more) on a text string or stream which\n  is sent to the pager's standard input.\n\n:``tl.cli.page.page_file(path, pager=None)``:\n  Runs the user's favourite pager (or more) on a file whose path is passed to\n  the pager as its only argument.\n\n\nContact\n=======\n\nThis package is written by Thomas Lotze. Please contact the author at\n<thomas@thomas-lotze.de> to provide feedback, suggestions, or contributions.\n\nSee also <http://www.thomas-lotze.de/en/software/>.\n\n\n.. Local Variables:\n.. mode: rst\n.. End:",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.thomas-lotze.de/en/software/",
    "keywords": "command line interface shell readline text editor editing",
    "license": "ZPL 2.1",
    "maintainer": null,
    "maintainer_email": null,
    "name": "tl.cli",
    "package_url": "https://pypi.org/project/tl.cli/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/tl.cli/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://www.thomas-lotze.de/en/software/"
    },
    "release_url": "https://pypi.org/project/tl.cli/0.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Various command line interface utilities.\n\n- readline-related utilities\n- an enhanced command shell\n- text editing using an external editor\n- display of long text using a pager",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 800754,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ea318c652967f8690e30c79676abe0d3a6bd552c6a96ac19ec9743b40dd9d92",
          "md5": "98fc802b4f5259f4a974db943b0ac525",
          "sha256": "adf7b52d5e5202082f3c0cfc75f5fbf2fcbe9a8cd4ebc6ec11e4df5c990eae1d"
        },
        "downloads": -1,
        "filename": "tl.cli-0.1.tar.gz",
        "has_sig": true,
        "md5_digest": "98fc802b4f5259f4a974db943b0ac525",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8102,
        "upload_time": "2008-04-07T21:29:14",
        "upload_time_iso_8601": "2008-04-07T21:29:14Z",
        "url": "https://files.pythonhosted.org/packages/1e/a3/18c652967f8690e30c79676abe0d3a6bd552c6a96ac19ec9743b40dd9d92/tl.cli-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da5eab76992d3d63c47d6f40722e361d2307f574f491635b1974b251064bbb1f",
          "md5": "3b14d76181a8e6704333d1cd3d6b8752",
          "sha256": "f8fd0dfef07304537f5d994774df1bac9d1817c6f30155d75c779cf55f98fa66"
        },
        "downloads": -1,
        "filename": "tl.cli-0.2.tar.gz",
        "has_sig": true,
        "md5_digest": "3b14d76181a8e6704333d1cd3d6b8752",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13613,
        "upload_time": "2008-11-11T16:33:51",
        "upload_time_iso_8601": "2008-11-11T16:33:51Z",
        "url": "https://files.pythonhosted.org/packages/da/5e/ab76992d3d63c47d6f40722e361d2307f574f491635b1974b251064bbb1f/tl.cli-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "da5eab76992d3d63c47d6f40722e361d2307f574f491635b1974b251064bbb1f",
        "md5": "3b14d76181a8e6704333d1cd3d6b8752",
        "sha256": "f8fd0dfef07304537f5d994774df1bac9d1817c6f30155d75c779cf55f98fa66"
      },
      "downloads": -1,
      "filename": "tl.cli-0.2.tar.gz",
      "has_sig": true,
      "md5_digest": "3b14d76181a8e6704333d1cd3d6b8752",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13613,
      "upload_time": "2008-11-11T16:33:51",
      "upload_time_iso_8601": "2008-11-11T16:33:51Z",
      "url": "https://files.pythonhosted.org/packages/da/5e/ab76992d3d63c47d6f40722e361d2307f574f491635b1974b251064bbb1f/tl.cli-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}