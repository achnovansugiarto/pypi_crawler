{
  "info": {
    "author": "Roberto Montalti",
    "author_email": "roberto.montalti00@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Communications :: Chat"
    ],
    "description": "Telethon\n========\n.. epigraph::\n\n  ⭐️ Thanks **everyone** who has starred the project, it means a lot!\n\n|logo| **Telethon** is an asyncio_ **Python 3**\nMTProto_ library to interact with Telegram_'s API\nas a user or through a bot account (bot API alternative).\n\n.. important::\n\n    If you have code using Telethon before its 1.0 version, you must\n    read `Compatibility and Convenience`_ to learn how to migrate.\n\nWhat is this?\n-------------\n\nTelegram is a popular messaging application. This library is meant\nto make it easy for you to write Python programs that can interact\nwith Telegram. Think of it as a wrapper that has already done the\nheavy job for you, so you can focus on developing an application.\n\n\nInstalling\n----------\n\n.. code-block:: sh\n\n  pip3 install telethon\n\n\nCreating a client\n-----------------\n\n.. code-block:: python\n\n    import asyncio\n    from telethon import TelegramClient, events\n\n    # These example values won't work. You must get your own api_id and\n    # api_hash from https://my.telegram.org, under API Development.\n    api_id = 12345\n    api_hash = '0123456789abcdef0123456789abcdef'\n\n    async def main():\n      client = TelegramClient('session_name', api_id, api_hash)\n      await client.start()\n\n    asyncio.run(main())\n\n\nDoing stuff\n-----------\n\n.. code-block:: python\n\n    print((await client.get_me()).stringify())\n\n    await client.send_message('username', 'Hello! Talking to you from Telethon')\n    await client.send_file('username', '/home/myself/Pictures/holidays.jpg')\n\n    await client.download_profile_photo('me')\n    messages = await client.get_messages('username')\n    await messages[0].download_media()\n\n    @client.on(events.NewMessage(pattern='(?i)hi|hello'))\n    async def handler(event):\n        await event.respond('Hey!')\n\n\nNext steps\n----------\n\nDo you like how Telethon looks? Check out `Read The Docs`_ for a more\nin-depth explanation, with examples, troubleshooting issues, and more\nuseful information.\n\n.. _asyncio: https://docs.python.org/3/library/asyncio.html\n.. _MTProto: https://core.telegram.org/mtproto\n.. _Telegram: https://telegram.org\n.. _Compatibility and Convenience: https://docs.telethon.dev/en/stable/misc/compatibility-and-convenience.html\n.. _Read The Docs: https://docs.telethon.dev\n\n.. |logo| image:: logo.svg\n    :width: 24pt\n    :height: 24pt\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/Cloudygram-org/Telethon/releases",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Cloudygram-org/Telethon",
    "keywords": "telegram api chat client library messaging mtproto",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cloudgram-telethon",
    "package_url": "https://pypi.org/project/cloudgram-telethon/",
    "platform": null,
    "project_url": "https://pypi.org/project/cloudgram-telethon/",
    "project_urls": {
      "Download": "https://github.com/Cloudygram-org/Telethon/releases",
      "Homepage": "https://github.com/Cloudygram-org/Telethon"
    },
    "release_url": "https://pypi.org/project/cloudgram-telethon/1.24.2.post1/",
    "requires_dist": [
      "pyaes",
      "rsa",
      "cryptg ; extra == 'cryptg'"
    ],
    "requires_python": ">=3.7",
    "summary": "Full-featured Telegram client library for Python 3",
    "version": "1.24.2.post1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14173576,
  "releases": {
    "1.24.2.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a34d430c1da5a6c5072d8c7567f0e22accaddc13c4f36d621398432740de8496",
          "md5": "d035caa443df492bcf264e8f14b47321",
          "sha256": "a00981903f0b742de3c17510267a92ab1bad4c93c6435810ef6d23c6ff84069b"
        },
        "downloads": -1,
        "filename": "cloudgram_telethon-1.24.2.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d035caa443df492bcf264e8f14b47321",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 505419,
        "upload_time": "2022-06-18T12:34:27",
        "upload_time_iso_8601": "2022-06-18T12:34:27.779886Z",
        "url": "https://files.pythonhosted.org/packages/a3/4d/430c1da5a6c5072d8c7567f0e22accaddc13c4f36d621398432740de8496/cloudgram_telethon-1.24.2.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11a45177899cdc2e1dc32502ad642b1dd999323324d14682988c463ece64d9c2",
          "md5": "98d875eb0c002580c98f295cb360181e",
          "sha256": "7296c6e8d494c068f3ac0b3e146a59427f77e205ad6788e9679911bdbf4ce269"
        },
        "downloads": -1,
        "filename": "cloudgram-telethon-1.24.2.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "98d875eb0c002580c98f295cb360181e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 441008,
        "upload_time": "2022-06-18T12:37:47",
        "upload_time_iso_8601": "2022-06-18T12:37:47.306631Z",
        "url": "https://files.pythonhosted.org/packages/11/a4/5177899cdc2e1dc32502ad642b1dd999323324d14682988c463ece64d9c2/cloudgram-telethon-1.24.2.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a34d430c1da5a6c5072d8c7567f0e22accaddc13c4f36d621398432740de8496",
        "md5": "d035caa443df492bcf264e8f14b47321",
        "sha256": "a00981903f0b742de3c17510267a92ab1bad4c93c6435810ef6d23c6ff84069b"
      },
      "downloads": -1,
      "filename": "cloudgram_telethon-1.24.2.post1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d035caa443df492bcf264e8f14b47321",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 505419,
      "upload_time": "2022-06-18T12:34:27",
      "upload_time_iso_8601": "2022-06-18T12:34:27.779886Z",
      "url": "https://files.pythonhosted.org/packages/a3/4d/430c1da5a6c5072d8c7567f0e22accaddc13c4f36d621398432740de8496/cloudgram_telethon-1.24.2.post1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "11a45177899cdc2e1dc32502ad642b1dd999323324d14682988c463ece64d9c2",
        "md5": "98d875eb0c002580c98f295cb360181e",
        "sha256": "7296c6e8d494c068f3ac0b3e146a59427f77e205ad6788e9679911bdbf4ce269"
      },
      "downloads": -1,
      "filename": "cloudgram-telethon-1.24.2.post1.tar.gz",
      "has_sig": false,
      "md5_digest": "98d875eb0c002580c98f295cb360181e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 441008,
      "upload_time": "2022-06-18T12:37:47",
      "upload_time_iso_8601": "2022-06-18T12:37:47.306631Z",
      "url": "https://files.pythonhosted.org/packages/11/a4/5177899cdc2e1dc32502ad642b1dd999323324d14682988c463ece64d9c2/cloudgram-telethon-1.24.2.post1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}