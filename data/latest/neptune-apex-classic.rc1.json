{
  "info": {
    "author": "",
    "author_email": "Chris Sammis <csammis@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# neptune_apex_classic\n\nPython module for getting the state of and controlling a classic Neptune Apex from your LAN\n\n## Requirements\n\nThis module requires the \"XML Access\" to be set on the Apex in order for the status of probes and outlets to be retrieved. Outlets can be set between OFF, AUTO, and ON if the ApexConnection object is created with a username and password.\n\nHTTP access is governed by an [`aiohttp.ClientSession`](https://docs.aiohttp.org/en/stable/client_reference.html) supplied by the caller.\n## Example Usage\n\n```python\nasync def do_apex_stuff(clientSession: aiohttp.ClientSession) -> None:\n    # Create an ApexConnection - one connection per Apex is all that's required\n    conn = ApexConnection(\"ip-address\", clientSession, \"admin\", \"1234\")\n\n    # The hardware serial number is an ID unique to each Apex and can be used\n    # to differentiate between different units on the same network\n    serial_number = await conn.get_serial_number()\n\n    # Fetch probe and outlet data\n    await conn.refresh()\n\n    # Iterate through connected probes\n    for probe in get_connected_probes(conn):\n        print(probe.name)\n        print(probe.value)\n\n    # Iterate through connected outlets and print the state\n    for outlet in get_connected_outlets(conn):\n        print(outlet.name)\n        print(outlet.value)\n\n    # Probe values and outlet states are cached and are only updated when the ApexConnection is refreshed!\n    conn.refresh()\n\n    outlet = get_connected_outlets(conn)[0]\n    await outlet.set_state(Outlet.ON)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "neptune-apex-classic",
    "package_url": "https://pypi.org/project/neptune-apex-classic/",
    "platform": null,
    "project_url": "https://pypi.org/project/neptune-apex-classic/",
    "project_urls": {
      "Bug Tracker": "https://github.com/csammis/neptune_apex_classic/issues",
      "Homepage": "https://github.com/csammis/neptune_apex_classic"
    },
    "release_url": "https://pypi.org/project/neptune-apex-classic/0.1.0/",
    "requires_dist": [
      "beautifulsoup4 (==4.11.2)",
      "aiohttp (==3.8.4)",
      "lxml (==4.9.2)"
    ],
    "requires_python": ">=3.10",
    "summary": "Python tooling to control a classic Neptune Apex on your LAN",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17167383,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e4df148f38038bba6b2a588f5f0715fbeeec31031203c4208fce74e34a5b2d4",
          "md5": "d56d3aef80cff5a5a794688beefbceb9",
          "sha256": "aff90c089cf7bb67ad0b27f956e4f662417deb9d7e44d9639df9a81e6e7edc32"
        },
        "downloads": -1,
        "filename": "neptune_apex_classic-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d56d3aef80cff5a5a794688beefbceb9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 6066,
        "upload_time": "2023-03-05T22:13:02",
        "upload_time_iso_8601": "2023-03-05T22:13:02.854943Z",
        "url": "https://files.pythonhosted.org/packages/1e/4d/f148f38038bba6b2a588f5f0715fbeeec31031203c4208fce74e34a5b2d4/neptune_apex_classic-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42bfdd8f5b587f375cfb5110992cc107708482ff63419aa798c0069b107acac0",
          "md5": "b94d23e1c22b7dc7f237c498e41a1ef8",
          "sha256": "91117497d47c84d62c6a0b56c4b28443e8c72ef9a8536a7ab44116d326312d62"
        },
        "downloads": -1,
        "filename": "neptune_apex_classic-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b94d23e1c22b7dc7f237c498e41a1ef8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 4789,
        "upload_time": "2023-03-05T22:13:04",
        "upload_time_iso_8601": "2023-03-05T22:13:04.540058Z",
        "url": "https://files.pythonhosted.org/packages/42/bf/dd8f5b587f375cfb5110992cc107708482ff63419aa798c0069b107acac0/neptune_apex_classic-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1e4df148f38038bba6b2a588f5f0715fbeeec31031203c4208fce74e34a5b2d4",
        "md5": "d56d3aef80cff5a5a794688beefbceb9",
        "sha256": "aff90c089cf7bb67ad0b27f956e4f662417deb9d7e44d9639df9a81e6e7edc32"
      },
      "downloads": -1,
      "filename": "neptune_apex_classic-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d56d3aef80cff5a5a794688beefbceb9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 6066,
      "upload_time": "2023-03-05T22:13:02",
      "upload_time_iso_8601": "2023-03-05T22:13:02.854943Z",
      "url": "https://files.pythonhosted.org/packages/1e/4d/f148f38038bba6b2a588f5f0715fbeeec31031203c4208fce74e34a5b2d4/neptune_apex_classic-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "42bfdd8f5b587f375cfb5110992cc107708482ff63419aa798c0069b107acac0",
        "md5": "b94d23e1c22b7dc7f237c498e41a1ef8",
        "sha256": "91117497d47c84d62c6a0b56c4b28443e8c72ef9a8536a7ab44116d326312d62"
      },
      "downloads": -1,
      "filename": "neptune_apex_classic-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b94d23e1c22b7dc7f237c498e41a1ef8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 4789,
      "upload_time": "2023-03-05T22:13:04",
      "upload_time_iso_8601": "2023-03-05T22:13:04.540058Z",
      "url": "https://files.pythonhosted.org/packages/42/bf/dd8f5b587f375cfb5110992cc107708482ff63419aa798c0069b107acac0/neptune_apex_classic-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}