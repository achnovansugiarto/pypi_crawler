{
  "info": {
    "author": "Christoforus Surjoputro",
    "author_email": "cs_sanmar@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Plugins",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Office/Business :: Financial",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "======\ncpybca\n======\n:Author: Christoforus Surjoputro <cs_sanmar@yahoo.com>\n:Date: $Date: 2017-07-04 $\n:Version: $Version: 1.2.0 $\n:License: MIT License\n\n.. role:: python(code)\n   :language: python\n\n.. image:: https://travis-ci.org/3mp3ri0r/cpybca.svg?branch=master\n    :target: https://travis-ci.org/3mp3ri0r/cpybca\n\n.. contents:: Table of content\n\nIntroduction\n============\n\n`cpybca`_ is python module to access BCA API. In this version, you can check balance, account statement (history), and transfer fund.\n\nPython version\n--------------\n\nThis module work on python 3.4+. Fully tested on python 3.5.2.\n\nHow to install\n==============\n\n1. Clone or download this repo https://gitlab.com/3mp3ri0r/cpybca.git.\n2. Move this entire project to your project's directory.\n\nHow to use\n==========\n\n1. Import cpybca to your project by doing this :python:`from cpybca.bca import Bca`.\n2. Initiate connection to BCA API server by doing this :python:`bca = BCA('YOUR_API_KEY', 'YOUR_API_SECRET', 'YOUR_BCA_HOST')`.\n3. Sign in to BCA API server by doing this :python:`bca.sign_in('YOUR_CLIENT_ID', 'YOUR_CLIENT_SECRET')`.\n4. Do action you want by calling :python:`Bca` function.\n\nGet balance\n-----------\n\nYou can get account balance by doing this:\n\n.. code-block:: python\n\n    bca.get_balance('CORPORATE_ID', 'ACCOUNT_NUMBER')\n\nYou can get multiple account balance by doing this:\n\n.. code-block:: python\n\n    bca.get_balance('CORPORATE_ID', ['ACCOUNT_NUMBER1', 'ACCOUNT_NUMBER2'])\n\nGet statement\n-------------\n\nYou can get account statement or history transaction by doing this:\n\n.. code-block:: python\n\n    bca.get_statement('CORPORATE_ID', 'ACCOUNT_NUMBER', 'START_DATE', 'END_DATE')\n\nNote:\n\n1. :code:`START_DATE` and :code:`END_DATE` use :code:`yyyy-MM-dd` format.\n2. Maximum date to get from start to end is 31 day.\n\nTransfer fund\n-------------\n\nYou can get account statement or history transaction by doing this:\n\n.. code-block:: python\n\n    bca.transfer('CORPORATE_ID', 'SOURCE_ACCOUNT_NUMBER', 'BENEFICIARY_ACCOUNT_NUMBER', 'TRANSACTION_ID', 'TRANSACTION_DATE', 'REFERENCE_ID', 'AMOUNT', 'CURRENCY_CODE', 'REMARK1', 'REMARK2')\n\nNote:\n\n1. :code:`BENEFICIARY_ACCOUNT_NUMBER` is account number you want to receive money.\n2. :code:`TRANSACTION_ID` is number of transfer you do on the following day.\n3. :code:`TRANSACTION_DATE` is date you do transfer in :code:`yyyy-MM-dd` format.\n4. :code:`REFERENCE_ID` is your reference code. It can contain combination of string and numeric. Example: :code:`1234/DP/2017`\n5. :code:`AMOUNT` is number of amount you want to send in :code:`string` format. Example: :code:`'1000000.00'`\n6. :code:`REMARK1` and :code:`REMARK2` is notes you want to send to receiver. It is not mandatory so you can remove this.\n\nHow to contribute\n=================\n\nJust create an `issue`_ when you encounter any problem.\n\n.. _`cpybca`: https://gitlab.com/3mp3ri0r/cpybca\n.. _`issue`: https://gitlab.com/3mp3ri0r/cpybca/issues\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/3mp3ri0r/cpybca/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Cpybca",
    "package_url": "https://pypi.org/project/Cpybca/",
    "platform": "any",
    "project_url": "https://pypi.org/project/Cpybca/",
    "project_urls": {
      "Homepage": "https://github.com/3mp3ri0r/cpybca/"
    },
    "release_url": "https://pypi.org/project/Cpybca/1.2.0/",
    "requires_dist": [
      "nose ; extra == 'dev'"
    ],
    "requires_python": "~=3.3",
    "summary": "A python module to access BCA API. In this version, you can check balance, account statement (history), and transfer fund.",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4649510,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75ab544e23ac76e6b6ed67f16e808e5ab90ef7e0bf100b1a66ce1d4db454912f",
          "md5": "deaf2dff4d21e9dfaa9550977d976efe",
          "sha256": "556689463b679a874eb281051ab7b613808fc90034d6e4d6eeb871fd67363a2e"
        },
        "downloads": -1,
        "filename": "Cpybca-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "deaf2dff4d21e9dfaa9550977d976efe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.3",
        "size": 6561,
        "upload_time": "2017-07-04T10:04:51",
        "upload_time_iso_8601": "2017-07-04T10:04:51.545972Z",
        "url": "https://files.pythonhosted.org/packages/75/ab/544e23ac76e6b6ed67f16e808e5ab90ef7e0bf100b1a66ce1d4db454912f/Cpybca-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ae64243b81428159cf07713cb571deaef11069643d40a10a0986f9c81d408b7",
          "md5": "a9f8f34c18a9799fa49778e7637d16dc",
          "sha256": "53a2b9328121b545b2b22881c5c488c7d70586d9bc8534b1b78b2e61fddd6fc8"
        },
        "downloads": -1,
        "filename": "Cpybca-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a9f8f34c18a9799fa49778e7637d16dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.3",
        "size": 4447,
        "upload_time": "2017-07-04T10:04:53",
        "upload_time_iso_8601": "2017-07-04T10:04:53.542243Z",
        "url": "https://files.pythonhosted.org/packages/8a/e6/4243b81428159cf07713cb571deaef11069643d40a10a0986f9c81d408b7/Cpybca-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b7e68de9ebf60ac96bc07d8da5a8eacfd97844a4ef3dcc9afb8791281f64955",
          "md5": "2cdda203288d2e2e414a2ec5da17ebfe",
          "sha256": "f2e7e87171ec7a61ff32a0f1c2cc9255d0eff515052eaa0e12460d933c09bc6f"
        },
        "downloads": -1,
        "filename": "Cpybca-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2cdda203288d2e2e414a2ec5da17ebfe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.3",
        "size": 5239,
        "upload_time": "2019-01-01T05:20:53",
        "upload_time_iso_8601": "2019-01-01T05:20:53.011670Z",
        "url": "https://files.pythonhosted.org/packages/7b/7e/68de9ebf60ac96bc07d8da5a8eacfd97844a4ef3dcc9afb8791281f64955/Cpybca-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ab0467e6025116e1d6d5e918b7066a528e975464f26580be533f026b213fd2d",
          "md5": "ac62365bf52f413b6c0cfb989997c7dc",
          "sha256": "3c7dba366d54042d32e4127d3c11cf72d4f15c9007406fef33aeca69d2af26c3"
        },
        "downloads": -1,
        "filename": "Cpybca-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ac62365bf52f413b6c0cfb989997c7dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.3",
        "size": 4460,
        "upload_time": "2019-01-01T05:20:54",
        "upload_time_iso_8601": "2019-01-01T05:20:54.260930Z",
        "url": "https://files.pythonhosted.org/packages/5a/b0/467e6025116e1d6d5e918b7066a528e975464f26580be533f026b213fd2d/Cpybca-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7b7e68de9ebf60ac96bc07d8da5a8eacfd97844a4ef3dcc9afb8791281f64955",
        "md5": "2cdda203288d2e2e414a2ec5da17ebfe",
        "sha256": "f2e7e87171ec7a61ff32a0f1c2cc9255d0eff515052eaa0e12460d933c09bc6f"
      },
      "downloads": -1,
      "filename": "Cpybca-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2cdda203288d2e2e414a2ec5da17ebfe",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.3",
      "size": 5239,
      "upload_time": "2019-01-01T05:20:53",
      "upload_time_iso_8601": "2019-01-01T05:20:53.011670Z",
      "url": "https://files.pythonhosted.org/packages/7b/7e/68de9ebf60ac96bc07d8da5a8eacfd97844a4ef3dcc9afb8791281f64955/Cpybca-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ab0467e6025116e1d6d5e918b7066a528e975464f26580be533f026b213fd2d",
        "md5": "ac62365bf52f413b6c0cfb989997c7dc",
        "sha256": "3c7dba366d54042d32e4127d3c11cf72d4f15c9007406fef33aeca69d2af26c3"
      },
      "downloads": -1,
      "filename": "Cpybca-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ac62365bf52f413b6c0cfb989997c7dc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.3",
      "size": 4460,
      "upload_time": "2019-01-01T05:20:54",
      "upload_time_iso_8601": "2019-01-01T05:20:54.260930Z",
      "url": "https://files.pythonhosted.org/packages/5a/b0/467e6025116e1d6d5e918b7066a528e975464f26580be533f026b213fd2d/Cpybca-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}