{
  "info": {
    "author": "GOFevaluation contributors, the XENON collaboration",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# GOFevaluation\nEvaluate the Goodness-of-Fit (GoF) for binned or unbinned data.  \n![Test package](https://github.com/XENONnT/GOFevaluation/actions/workflows/python-package.yml/badge.svg)\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/XENONnT/GOFevaluation/HEAD)\n[![PyPI version shields.io](https://img.shields.io/pypi/v/GOFevaluation.svg)](https://pypi.python.org/pypi/GOFevaluation/)\n[![CodeFactor](https://www.codefactor.io/repository/github/xenonnt/gofevaluation/badge)](https://www.codefactor.io/repository/github/xenonnt/gofevaluation)\n[![Coverage Status](https://coveralls.io/repos/github/XENONnT/GOFevaluation/badge.svg?branch=master)](https://coveralls.io/github/XENONnT/GOFevaluation?branch=master) \n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.5626909.svg)](https://doi.org/10.5281/zenodo.5626909)\n\nThis GoF suite comprises the possibility to calculate different 1D / nD, binned / two-sample (unbinned) GoF measures and the corresponding p-value. A list of implemented measures is given below. \n\n\n## Implemented GoF measures\n| GoF measure                   | Class                     |    data input   | reference input | dim |\n|-------------------------------|---------------------------|:---------------:|:---------------:|:---:|\n| Kolmogorov-Smirnov            | `KSTestGOF`               |      sample     |      binned     |  1D |\n| Two-Sample Kolmogorov-Smirnov | `KSTestTwoSampleGOF`      |      sample     |      sample     |  1D |\n| Two-Sample Anderson-Darling   | `ADTestTwoSampleGOF`      |      sample     |      sample     |  1D |\n| Poisson Chi2                  | `BinnedPoissonChi2GOF`    | binned / sample |      binned     |  nD |\n| Chi2                          | `BinnedChi2GOF`           | binned / sample |      binned     |  nD |\n| Point-to-point                | `PointToPointGOF`         |      sample     |      sample     |  nD |\n\n\n## Installation and Set-Up\n\n### Regular installation:\n```\npip install GOFevaluation\n```\n\n### Developer setup:\nClone the repository:\n\n```\ngit clone https://github.com/XENONnT/GOFevaluation\ncd GOFevaluation\n```\nInstall the requirements in your environment:\n```\npip install -r requirements.txt\n```\n\nThen install the package:\n```\npython setup.py install --user\n```\nYou are now good to go!\n\n## Usage\nThe best way to start with the `GOFevaluation` package is to have a look at the tutorial notebook. If you click on the [mybinder](https://mybinder.org/v2/gh/XENONnT/GOFevaluation/HEAD) badge, you can execute the interactive notebook and give it a try yourself without the need of a local installation. \n### Individual GoF Measures\nDepending on your data and reference input you can initialise a `gof_object` in one of the following ways:\n```python\nimport GOFevaluation as ge\n\n# Data Sample + Binned PDF\ngof_object = ge.BinnedPoissonChi2GOF(data_sample, pdf, bin_edges, nevents_expected)\n\n# Binned Data + Binned PDF\ngof_object = ge.BinnedPoissonChi2GOF.from_binned(binned_data, binned_reference)\n\n# Data Sample + Reference Sample\ngof_object = ge.PointToPointGOF(data_sample, reference_sample)\n```\n\nWith any `gof_object` you can calculate the GoF and the corresponding p-value as follows:\n```python\ngof = gof_object.get_gof()\np_value = gof_object.get_pvalue()\n```\n\n### Multiple GoF Measures at once\nYou can compute GoF and p-values for multiple measures at once with the `GOFTest` class. \n\n**Example:**\n```python\nimport GOFevaluation as ge\nimport scipy.stats as sps\n\n# random_state makes sure the gof values are reproducible.\n# For the p-values, a slight variation is expected due to\n# the random re-sampling method that is used.\ndata_sample = sps.uniform.rvs(size=100, random_state=200)\nreference_sample = sps.uniform.rvs(size=300, random_state=201)\n\n# Initialise all two-sample GoF measures:\ngof_object = ge.GOFTest(data_sample=data_sample, \n                        reference_sample=reference_sample,\n                        gof_list=['ADTestTwoSampleGOF', \n                                  'KSTestTwoSampleGOF', \n                                  'PointToPointGOF'])\n# Calculate GoFs and p-values:\nd_min = 0.01\ngof_object.get_gofs(d_min=d_min)\n# OUTPUT:\n# OrderedDict([('ADTestTwoSampleGOF', 1.6301454042304904),\n#              ('KSTestTwoSampleGOF', 0.14),\n#              ('PointToPointGOF', -0.7324060759792504)])\n\ngof_object.get_pvalues(d_min=d_min)\n# OUTPUT:\n# OrderedDict([('ADTestTwoSampleGOF', 0.08699999999999997),\n#              ('KSTestTwoSampleGOF', 0.10699999999999998),\n#              ('PointToPointGOF', 0.31200000000000006)])\n\n# Re-calculate p-value only for one measure:\ngof_object.get_pvalues(d_min=.001, gof_list=['PointToPointGOF'])\n# OUTPUT:\n# OrderedDict([('ADTestTwoSampleGOF', 0.08699999999999997),\n#              ('KSTestTwoSampleGOF', 0.10699999999999998),\n#              ('PointToPointGOF', 0.128)])\n\nprint(gof_object)\n# OUTPUT:\n# GOFevaluation.gof_test\n# GOF measures: ADTestTwoSampleGOF, KSTestTwoSampleGOF, PointToPointGOF\n\n\n# ADTestTwoSampleGOF\n# gof = 1.6301454042304904\n# p-value = 0.08499999999999996\n\n# KSTestTwoSampleGOF\n# gof = 0.13999999999999996\n# p-value = 0.09799999999999998\n\n# PointToPointGOF\n# gof = -0.7324060759792504\n# p-value = 0.128\n```\n\n\n\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\n\nv0.1.1\n===================\n* Add an example notebook that can be used as a guide when using the package for the first time (#29)\n* Improve and extend plotting of equiprobable binnings. This adds the option of plotting the binwise count density (#35)\n\nv0.1.0\n===================\n* Multiple GOF tests (binned and unbinned) can be performed (#1, #5, #10, #12, #13)\n* The p-value is calculated based on toy sampling from the reference or a permutation test (#2, #14)\n* A wrapper class makes it convenient to perform multiple GOF tests in parallel (#19)\n* An equiprobable binning algorithm is implemented. The binning can be applied upon initialisation of the GOF object and a few visualization tools are provided. (#25, #26)\n* CI workflow implemented (#7)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/XENONnT/GOFevaluation",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "GOFevaluation",
    "package_url": "https://pypi.org/project/GOFevaluation/",
    "platform": null,
    "project_url": "https://pypi.org/project/GOFevaluation/",
    "project_urls": {
      "Homepage": "https://github.com/XENONnT/GOFevaluation"
    },
    "release_url": "https://pypi.org/project/GOFevaluation/0.1.1/",
    "requires_dist": [
      "numpy",
      "scipy",
      "sklearn",
      "matplotlib"
    ],
    "requires_python": ">=3.6",
    "summary": "Evaluate the Goodness-of-Fit(GoF) for binned or         unbinned data.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16036909,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7446e162daa3b3f02f5347cf65c7966b660a322e52a732acdba2f91c05c88e13",
          "md5": "9db8a5c6000dadc986abd13a0057dd7d",
          "sha256": "8ee16d7781992a90b88b790193b9f4ccb9c53a67e0146fd16c88ece7ebe52ae7"
        },
        "downloads": -1,
        "filename": "GOFevaluation-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9db8a5c6000dadc986abd13a0057dd7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22577,
        "upload_time": "2021-10-19T12:30:41",
        "upload_time_iso_8601": "2021-10-19T12:30:41.492881Z",
        "url": "https://files.pythonhosted.org/packages/74/46/e162daa3b3f02f5347cf65c7966b660a322e52a732acdba2f91c05c88e13/GOFevaluation-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b7042c34c7534480c32eafa5cd5dc841b1081a5d594fe8b36ff2334723ee8fd",
          "md5": "9478662ba705b4bc8081eb1cdca19d02",
          "sha256": "b4bbad7fd5bf68c33e9ab3ff526445a2579f6b3d9ea90c5b511c35bfb7ef5c7b"
        },
        "downloads": -1,
        "filename": "GOFevaluation-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9478662ba705b4bc8081eb1cdca19d02",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17946,
        "upload_time": "2021-10-19T12:30:43",
        "upload_time_iso_8601": "2021-10-19T12:30:43.405527Z",
        "url": "https://files.pythonhosted.org/packages/3b/70/42c34c7534480c32eafa5cd5dc841b1081a5d594fe8b36ff2334723ee8fd/GOFevaluation-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8f34d0fd77d0ac5006e1ed7eb795369b9505eac8e5a25661f3b17151d6bc2d4",
          "md5": "a37dc01ed909c728c2984ab9a4d78d6b",
          "sha256": "e03d0baf2294cfff2f3a8d6a8d4fa065cdfff0ce4aa93cd2dc839d1c169bbbc8"
        },
        "downloads": -1,
        "filename": "GOFevaluation-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a37dc01ed909c728c2984ab9a4d78d6b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24490,
        "upload_time": "2022-06-07T08:26:08",
        "upload_time_iso_8601": "2022-06-07T08:26:08.683100Z",
        "url": "https://files.pythonhosted.org/packages/f8/f3/4d0fd77d0ac5006e1ed7eb795369b9505eac8e5a25661f3b17151d6bc2d4/GOFevaluation-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a849d5bf901628ce4e72a3525586f89d8eb9da29835298047c59c7ee07ee1c62",
          "md5": "1b62b71f287e638370eac49521cf7d03",
          "sha256": "6c568eb1294ce0249f079561077a760a46de8a64cef20ae66dc148a7a9faa819"
        },
        "downloads": -1,
        "filename": "GOFevaluation-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1b62b71f287e638370eac49521cf7d03",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18994,
        "upload_time": "2022-06-07T08:26:11",
        "upload_time_iso_8601": "2022-06-07T08:26:11.013751Z",
        "url": "https://files.pythonhosted.org/packages/a8/49/d5bf901628ce4e72a3525586f89d8eb9da29835298047c59c7ee07ee1c62/GOFevaluation-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f8f34d0fd77d0ac5006e1ed7eb795369b9505eac8e5a25661f3b17151d6bc2d4",
        "md5": "a37dc01ed909c728c2984ab9a4d78d6b",
        "sha256": "e03d0baf2294cfff2f3a8d6a8d4fa065cdfff0ce4aa93cd2dc839d1c169bbbc8"
      },
      "downloads": -1,
      "filename": "GOFevaluation-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a37dc01ed909c728c2984ab9a4d78d6b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 24490,
      "upload_time": "2022-06-07T08:26:08",
      "upload_time_iso_8601": "2022-06-07T08:26:08.683100Z",
      "url": "https://files.pythonhosted.org/packages/f8/f3/4d0fd77d0ac5006e1ed7eb795369b9505eac8e5a25661f3b17151d6bc2d4/GOFevaluation-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a849d5bf901628ce4e72a3525586f89d8eb9da29835298047c59c7ee07ee1c62",
        "md5": "1b62b71f287e638370eac49521cf7d03",
        "sha256": "6c568eb1294ce0249f079561077a760a46de8a64cef20ae66dc148a7a9faa819"
      },
      "downloads": -1,
      "filename": "GOFevaluation-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1b62b71f287e638370eac49521cf7d03",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 18994,
      "upload_time": "2022-06-07T08:26:11",
      "upload_time_iso_8601": "2022-06-07T08:26:11.013751Z",
      "url": "https://files.pythonhosted.org/packages/a8/49/d5bf901628ce4e72a3525586f89d8eb9da29835298047c59c7ee07ee1c62/GOFevaluation-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}