{
  "info": {
    "author": "Diego Saraiva",
    "author_email": "diegosaraiva@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 4.1",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Systems Administration :: Authentication/Directory :: LDAP"
    ],
    "description": "django-ldapdb\n=============\n\n.. image:: https://secure.travis-ci.org/django-ldapdb/django-ldapdb.png?branch=master\n    :target: http://travis-ci.org/django-ldapdb/django-ldapdb/\n\n.. image:: https://img.shields.io/pypi/v/django-ldapdb.svg\n    :target: https://pypi.python.org/pypi/django-ldapdb/\n    :alt: Latest Version\n\n.. image:: https://img.shields.io/pypi/pyversions/django-ldapdb.svg\n    :target: https://pypi.python.org/pypi/django-ldapdb/\n    :alt: Supported Python versions\n\n.. image:: https://img.shields.io/pypi/wheel/django-ldapdb.svg\n    :target: https://pypi.python.org/pypi/django-ldapdb/\n    :alt: Wheel status\n\n.. image:: https://img.shields.io/pypi/l/django-ldapdb.svg\n    :target: https://pypi.python.org/pypi/django-ldapdb/\n    :alt: License\n\n\n``django-ldapdb`` is an LDAP database backend for Django, allowing to manipulate\nLDAP entries through Django models.\n\nIt supports most of the same APIs as a Django model:\n\n* ``MyModel.objects.create()``\n* ``MyModel.objects.filter(x=1, y__contains=2)``\n* Full admin support and browsing\n\n\n``django-ldapdb`` supports every upstream-supported Django version, based on\nthe `Django support policy <https://www.djangoproject.com/download/#supported-versions>`_.\n\nFor the current version, the following versions are supported:\n\n- Django 2.2 (LTS), under Python 3.6 - 3.8 (Python 3.5 has reached its end of life);\n- Django 3.0, under Python 3.6 - 3.8;\n- Django 3.1, under Python 3.6 - 3.8.\n- Django 4.1, under Python 3.6 - 3.8.\n\n\nInstalling django-ldapdb\n------------------------\n\nLinux\n~~~~~\n\nUse pip: ``pip install django-ldapdb``\n\nYou might also need the usual ``LDAP`` packages from your distribution, usually named ``openldap`` or ``ldap-utils``.\n\n\nWindows\n~~~~~~~\n\n``django-ldapdb`` depends on the `python-ldap <https://pypi.python.org/pypi/python-ldap>` project.\nEither follow `its Windows installation guide <https://www.python-ldap.org/en/latest/installing.html>`_,\nor install a pre-built version from https://www.lfd.uci.edu/~gohlke/pythonlibs/#python-ldap\n(choose the ``.whl`` file matching your Python/Windows combination, and install it with ``pip install python-ldap-3...whl``).\n\nYou may then install ``django-ldapdb`` with\n\n``pip install django-ldapdb``\n\n\nUsing django-ldapdb\n-------------------\n\nAdd the following to your ``settings.py``:\n\n.. code-block:: python\n\n    DATABASES = {\n        'ldap': {\n            'ENGINE': 'ldapdb.backends.ldap',\n            'NAME': 'ldap://ldap.nodomain.org/',\n            'USER': 'cn=admin,dc=nodomain,dc=org',\n            'PASSWORD': 'some_secret_password',\n         },\n        'default': {\n            'ENGINE': 'django.db.backends.sqlite3',\n            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n         },\n    }\n    DATABASE_ROUTERS = ['ldapdb.router.Router']\n\n\n\nIf you want to access posixGroup entries in your application, you can add\nsomething like this to your ``models.py``:\n\n\n.. code-block:: python\n\n    from ldapdb.models.fields import CharField, IntegerField, ListField\n    import ldapdb.models\n\n    class LdapGroup(ldapdb.models.Model):\n        \"\"\"\n        Class for representing an LDAP group entry.\n        \"\"\"\n        # LDAP meta-data\n        base_dn = \"ou=groups,dc=nodomain,dc=org\"\n        object_classes = ['posixGroup']\n\n        # posixGroup attributes\n        gid = IntegerField(db_column='gidNumber', unique=True)\n        name = CharField(db_column='cn', max_length=200, primary_key=True)\n        members = ListField(db_column='memberUid')\n\n        def __str__(self):\n            return self.name\n\n        def __unicode__(self):\n            return self.name\n\nand add this to your ``admin.py``:\n\n.. code-block:: python\n\n    from django.contrib import admin\n    from . import models\n\n    class LDAPGroupAdmin(admin.ModelAdmin):\n        exclude = ['dn', 'objectClass']\n        list_display = ['gid', 'name']\n\n    admin.site.register(models.LDAPGroup, LDAPGroupAdmin)\n\n\n**Important note:**\n    You **must** declare an attribute to be used as the primary key.\n    This attribute will play a special role, as it will be used to build\n    the Relative Distinguished Name of the entry.\n    \n    For instance in the example above, a group whose cn is ``foo``\n    will have the DN ``cn=foo,ou=groups,dc=nodomain,dc=org``.\n\n\nSupported fields\n----------------\n\ndjanglo-ldapdb provides the following fields, all imported from ``ldapdb.models.fields``:\n\nSimilar to Django:\n\n    * ``IntegerField``\n    * ``FloatField``\n    * ``BooleanField``\n    * ``CharField``\n    * ``ImageField``\n    * ``DateTimeField``\n\nSpecific to a LDAP server:\n    * ``ListField`` (holds a list of text values)\n    * ``TimestampField`` (Stores a datetime as a posix timestamp, typically for posixAccount)\n\nLegacy:\n    * ``DateField`` (Stores a date in an arbitrary format. A LDAP server has no notion of ``Date``).\n\n\nTuning django-ldapdb\n--------------------\n\nIt is possible to adjust django-ldapdb's behavior by defining a few parameters in the ``DATABASE`` section:\n\n``PAGE_SIZE`` (default: ``1000``)\n    Define the maximum size of a results page to be returned by the server\n\n``QUERY_TIMEOUT`` (default: no limit)\n    Define the maximum time in seconds we'll wait to get a reply from the server (on a per-query basis).\n\n    .. note:: This setting applies on individual requests; if a high-level operation requires many\n              queries (for instance a paginated search yielding thousands of entries),\n              the timeout will be used on each individual request;\n              the overall processing time might be much higher.\n\n\nDeveloping with a LDAP server\n-----------------------------\n\nWhen developing against a LDAP server, having access to a development LDAP server often proves\nuseful.\n\ndjango-ldapdb uses the `volatildap project <https://pypi.org/project/volatildap>`_ for this purpose:\n\n- A LDAP server is instantiated for each TestClass;\n- Its content is reset at the start of each test function;\n- It can be customized to embark any schemas required by the application;\n- Starting with volatildap 1.4.0, the volatildap server can be controlled remotely, avoiding the need\n  to install a LDAP server on the host.\n\nApplications using django-ldapdb may use the following code snippet when setting up their tests:\n\n.. code-block:: python\n\n    # This snippet is released in the Public Domain\n\n    from django.conf import settings\n    from django.test import TestCase\n\n    import volatildap\n\n    class LdapEnabledTestCase(TestCase):\n        @classmethod\n        def setUpClass(cls):\n            super().setUpClass()\n            cls.ldap = volatildap.LdapServer(\n                # Load some initial data\n                initial={'ou=people': {\n                    'ou': ['people'],\n                    'objectClass': ['organizationalUnit'],\n                }},\n                # Enable more LDAP schemas\n                schemas=['core.schema', 'cosine.schema', 'inetorgperson.schema', 'nis.schema'],\n            )\n            # The volatildap server uses specific defaults, and listens on an arbitrary port.\n            # Copy the server-side values to Django settings\n            settings.DATABASES['ldap']['USER'] = cls.ldap.rootdn\n            settings.DATABASES['ldap']['PASSWORD'] = cls.ldap.rootpw\n            settings.DATABASES['ldap']['NAME'] = cls.ldap.uri\n\n        def setUp(self):\n            super().setUp()\n            # Starting an already-started volatildap server performs a data reset\n            self.ldap.start()\n\n        @classmethod\n        def tearDownClass(cls):\n            # Free up resources on teardown.\n            cls.ldap.stop()\n            super().tearDownClass()\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ifrn-oficial/suap-django-ldapdb",
    "keywords": "django,ldap,database,ldapdb",
    "license": "BSD",
    "maintainer": "Diego Saraiva",
    "maintainer_email": "diegosaraiva@gmail.com",
    "name": "suap-django-ldapdb",
    "package_url": "https://pypi.org/project/suap-django-ldapdb/",
    "platform": null,
    "project_url": "https://pypi.org/project/suap-django-ldapdb/",
    "project_urls": {
      "Homepage": "https://github.com/ifrn-oficial/suap-django-ldapdb"
    },
    "release_url": "https://pypi.org/project/suap-django-ldapdb/1.5.3.dev0/",
    "requires_dist": [
      "Django (>=2.2)",
      "python-ldap (>=3.0)",
      "check-manifest ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "isort (>=5.0.0) ; extra == 'dev'",
      "tox ; extra == 'dev'",
      "factory-boy ; extra == 'dev'",
      "volatildap (>=1.1.0) ; extra == 'dev'",
      "wheel ; extra == 'dev'",
      "zest.releaser[recommended] ; extra == 'dev'"
    ],
    "requires_python": ">=3.6",
    "summary": "A fork from django-ldapdb",
    "version": "1.5.3.dev0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16536955,
  "releases": {
    "1.5.3.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba1d270f6088af96c2abf2b0bc6ce14678ed1ed8be250034187868a52abd29b3",
          "md5": "668131bb6cce06c6eba5f7cbf2c292c7",
          "sha256": "a0dc0b714762534993dfcda4a58d90a3754b0fd0c59f7c46037898695a5528d3"
        },
        "downloads": -1,
        "filename": "suap_django_ldapdb-1.5.3.dev0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "668131bb6cce06c6eba5f7cbf2c292c7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 23496,
        "upload_time": "2022-12-19T14:43:23",
        "upload_time_iso_8601": "2022-12-19T14:43:23.641111Z",
        "url": "https://files.pythonhosted.org/packages/ba/1d/270f6088af96c2abf2b0bc6ce14678ed1ed8be250034187868a52abd29b3/suap_django_ldapdb-1.5.3.dev0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dc589b439436ee1c6d74ac1a826681d220457360ada824919ad7490eacec68d",
          "md5": "52218a5e5aca00d0090c33fe1724a606",
          "sha256": "018497687b4668de63a6d1710acf49bc36c4d9c8cb4bbfbad20fb44fc87d794b"
        },
        "downloads": -1,
        "filename": "suap-django-ldapdb-1.5.3.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "52218a5e5aca00d0090c33fe1724a606",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35885,
        "upload_time": "2022-12-19T14:43:25",
        "upload_time_iso_8601": "2022-12-19T14:43:25.403604Z",
        "url": "https://files.pythonhosted.org/packages/4d/c5/89b439436ee1c6d74ac1a826681d220457360ada824919ad7490eacec68d/suap-django-ldapdb-1.5.3.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba1d270f6088af96c2abf2b0bc6ce14678ed1ed8be250034187868a52abd29b3",
        "md5": "668131bb6cce06c6eba5f7cbf2c292c7",
        "sha256": "a0dc0b714762534993dfcda4a58d90a3754b0fd0c59f7c46037898695a5528d3"
      },
      "downloads": -1,
      "filename": "suap_django_ldapdb-1.5.3.dev0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "668131bb6cce06c6eba5f7cbf2c292c7",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 23496,
      "upload_time": "2022-12-19T14:43:23",
      "upload_time_iso_8601": "2022-12-19T14:43:23.641111Z",
      "url": "https://files.pythonhosted.org/packages/ba/1d/270f6088af96c2abf2b0bc6ce14678ed1ed8be250034187868a52abd29b3/suap_django_ldapdb-1.5.3.dev0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4dc589b439436ee1c6d74ac1a826681d220457360ada824919ad7490eacec68d",
        "md5": "52218a5e5aca00d0090c33fe1724a606",
        "sha256": "018497687b4668de63a6d1710acf49bc36c4d9c8cb4bbfbad20fb44fc87d794b"
      },
      "downloads": -1,
      "filename": "suap-django-ldapdb-1.5.3.dev0.tar.gz",
      "has_sig": false,
      "md5_digest": "52218a5e5aca00d0090c33fe1724a606",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 35885,
      "upload_time": "2022-12-19T14:43:25",
      "upload_time_iso_8601": "2022-12-19T14:43:25.403604Z",
      "url": "https://files.pythonhosted.org/packages/4d/c5/89b439436ee1c6d74ac1a826681d220457360ada824919ad7490eacec68d/suap-django-ldapdb-1.5.3.dev0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}