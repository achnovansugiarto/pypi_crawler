{
  "info": {
    "author": "Mohak Sharda",
    "author_email": "sharda.mohak@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MetReTrim\n\n**Mohak Sharda**   \n**v0.1**\n\n***mohaks@ncbs.res.in***  \n***sharda.mohak@gmail.com***\n\nMetReTrim is a pipeline, written in python, for trimming heterogeneity 'N' spacers from the pre-processed reads given the primer sequences. It locates the primer sequence provided by a user in a given read and trims any length of the heterogenous spacer sequence towards the 5' end of the primer. It can be used for single-end and/or paired-end sequencing data.\n\n##Installation\n\nMetReTrim has been tested to work with the latest versions of Python 2 and Python 3. It only requires python to be installed on the system.\n\nUsers can check the version of python on their system using the following command via terminal:\n\n```bash\npython --version\n```\n\n####Installation via pip\n\n\nThe current version of MetReTrim can be installed using the pip command on the terminal with the following syntax:\n\nFor python version 2,\n\n```bash\nsudo python -m pip install MetReTrim\n```\n\nFor python version 3,\n\n```bash\nsudo python3 -m pip install MetReTrim\n```\n\n\nIn case pip is not installed on the system, it can installed using the following command:\n\nFor python version 2,\n\n```bash\nsudo apt install python-pip\n```\n\nFor python version 3,\n\n```bash\nsudo apt install python3-pip\n```\n\n\n####Manual Installation\n\nIn case installation via pip doesn't work, users can download the MetReTrim executable directly from the github link: https://github.com/Mohak91/MetReTrim\nPlease make sure the executable is either in $PATH or users run the command line version of the executable from within the folder where it is present.\n\n####Installing dependencies\n\nMetReTrim requires the following python packages to be installed for a successful run:\n\n+ os\n+ sys\n+ subprocess\n+ getopt\n+ re\n+ regex\n\nUsually, all the above mentioned packages are pre-installed in all the python versions.\n\nHowever regex needs to be installed separately on the system. It can be done using the following command:\n\nFor python version 2,\n\n```bash\npython -m pip install regex\n```\n\nFor python version 3,\n\n```bash\npython3 -m pip install regex\n```\n\n##Running MetReTrim\n\n####Input\n\nMetReTrim can be run as a command line tool on the terminal. It requires the following inputs to run:\n\n+ Complete path of the folder containing the unprocessed fastq files in a .fastq.gz or .fastq format.\n+ Complete path of the desired folder where the users wish the processed files to be stored.\n+ Primer sequence(s) used in the experiment.\n\nIn case the users wish to keep the processed files in the same folder as the unprocessed files, the output folder path is not required.\n\nBy default, MetReTrim allows upto 3 mismatches in the primer sequence(s) provided by the user when locating it in the reads. This can be changed according to the user using the -m option. (See below)\n\nBy default, MetReTrim retains the primer sequence and just trims the heterogenous 'N' spacer sequence in the processed reads. Users can trim the primer sequence as well using the -k option. (See below)\n\n####Output\n\nMetReTrim creates two sets of output files for a given .fastq file - trimmed and untrimmed. The trimmed fastq file will contain the reads where the heterogenous 'N' spacer sequence has been removed. The untrimmed fastq file will contain those reads for which the primer sequence provided couldn't be located on the reads and therefore couldn't be processed.\n\n####Examples\n\n0) If MetReTrim has been installed via pip or the executables are present in the global path $PATH, the command can be run directly with the name of the executable. For example, if want to check the usage, users can type:\n\n```bash\nMetReTrim -h\n```\n\nIf users have downloaded the script from github (as mentioned above) and the script is being run from the folder where it is present, the command of the usage would be as follows:\n\n```bash\n./MetReTrim -h\n```\n\n\n1) Running MetReTrim for single end reads:\n\n```bash\nMetReTrim -i /abc/xyz/test/fastq -o /abc/xyz/test/output -p AATTTGCGATCGAGTCTAATCGAG\n```\n\nwhere,  '/abc/xyz/test/fastq' is the directory where all the pre-processed fastq files are present,\n\t'/abc/xyz/test/output' is the directory where all the processed fastq files will be stored after trimming,\n\t'AATTTGCGATCGAGTCTAATCGAG is the primer sequence used for single-end sequencing.\n\n2) Running MetReTrim for paired end reads:\n\n```bash\nMetReTrim -i /abc/xyz/test/fastq -o /abc/xyz/test/output -f AATTTGCGATCGAGTCTAATCGAG -r ATCGACTGAGCATTATATTACGCG\n```\n\nwhere,  '/abc/xyz/test/fastq' is the directory where all the pre-processed fastq files are present,\n        '/abc/xyz/test/output' is the directory where all the processed fastq files will be stored after trimming,\n        'AATTTGCGATCGAGTCTAATCGAG' is the forward primer sequence used for paired-end sequencing,\n\t'ATCGACTGAGCATTATATTACGCG' is the reverse primer sequence used for paired-end sequencing.\n\nNote: Paired-end reads should be segregated in two files - forward primer and reverse primer reads respectively.\n\n3) Running MetReTrim for both single and paired-end reads together :\n\n```bash\nMetReTrim -i /abc/xyz/test/fastq -o /abc/xyz/test/output -p ACACACACTAGGCTACGTATGCCA -f AATTTGCGATCGAGTCTAATCGAG -r ATCGACTGAGCATTATATTACGCG\n```\n\nwhere,  '/abc/xyz/test/fastq' is the directory where all the pre-processed fastq files are present,\n\t'/abc/xyz/test/output' is the directory where all the processed fastq files will be stored after trimming,\n\t'AATTTGCGATCGAGTCTAATCGAG' is the forward primer sequence used for paired-end sequencing,\n\t'ATCGACTGAGCATTATATTACGCG' is the reverse primer sequence used for paired-end sequencing.\n\t'ACACACACTAGGCTACGTATGCCA' is the primer sequence used for single-end sequencing\n\n4) Running MetReTrim for paired end reads and also removing the primer sequences along with the heterogenous 'N' spacer sequences:\n\n```bash\nMetReTrim -i /abc/xyz/test/fastq -o /abc/xyz/test/output -f AATTTGCGATCGAGTCTAATCGAG -r ATCGACTGAGCATTATATTACGCG -k unkeep\n```\n\n5) 4) Running MetReTrim for paired end reads and allowing upto 5 mismatches (default: 3) in the primer sequence while locating in the reads:\n\n```bash\nMetReTrim -i /abc/xyz/test/fastq -o /abc/xyz/test/output -f AATTTGCGATCGAGTCTAATCGAG -r ATCGACTGAGCATTATATTACGCG -m 5\n```\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Mohak91/MetReTrim",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MetReTrim",
    "package_url": "https://pypi.org/project/MetReTrim/",
    "platform": "",
    "project_url": "https://pypi.org/project/MetReTrim/",
    "project_urls": {
      "Homepage": "https://github.com/Mohak91/MetReTrim"
    },
    "release_url": "https://pypi.org/project/MetReTrim/0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Heterogenous 'N' spacer sequence trimmer",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6544605,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ea2b69916f038ecfc1299a55941a69a948440c3d1a5b268433f610aca177db0",
          "md5": "0c60af414f2a94065cb7df7fe43d25f4",
          "sha256": "19559c593919bd7eb0ff3fee97e5b2253a42f12ad7bf89ba216fa85e2b338f43"
        },
        "downloads": -1,
        "filename": "MetReTrim-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c60af414f2a94065cb7df7fe43d25f4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8814,
        "upload_time": "2020-01-30T17:07:17",
        "upload_time_iso_8601": "2020-01-30T17:07:17.937543Z",
        "url": "https://files.pythonhosted.org/packages/1e/a2/b69916f038ecfc1299a55941a69a948440c3d1a5b268433f610aca177db0/MetReTrim-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ea2b69916f038ecfc1299a55941a69a948440c3d1a5b268433f610aca177db0",
        "md5": "0c60af414f2a94065cb7df7fe43d25f4",
        "sha256": "19559c593919bd7eb0ff3fee97e5b2253a42f12ad7bf89ba216fa85e2b338f43"
      },
      "downloads": -1,
      "filename": "MetReTrim-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0c60af414f2a94065cb7df7fe43d25f4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8814,
      "upload_time": "2020-01-30T17:07:17",
      "upload_time_iso_8601": "2020-01-30T17:07:17.937543Z",
      "url": "https://files.pythonhosted.org/packages/1e/a2/b69916f038ecfc1299a55941a69a948440c3d1a5b268433f610aca177db0/MetReTrim-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}