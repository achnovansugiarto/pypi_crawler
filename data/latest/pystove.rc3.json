{
  "info": {
    "author": "Milan van Nugteren",
    "author_email": "milan@network23.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# pystove\n\nAn async python library with command line interface to interact with HWAM SmartControl wood burning stoves.\n\n### Contents\n- [Usage Example](#usage-example)\n- [Library Reference](#library-reference)\n  - [Properties](#properties)\n  - [Methods](#methods)\n- [Command Line Invocation](#command-line-invocation)\n\n### Usage Example\n```python\nimport asyncio\nfrom pystove import Stove\n\n\nHOST = 'stove.local'\n\n\nasync def switch_on_stove():\n  \"\"\"Create a Stove object, switch to ignition mode and set burn level to 5.\"\"\"\n\n  # Create the object\n  stove = await Stove.create(HOST)\n\n  # Switch to ignition mode\n  if await stove.start():\n\n    # If successful, set burn level to 5.\n    await stove.set_burn_level(5)\n\n  # Clean up\n  await stove.destroy()\n\n# Set up the event loop and run the switch_on_stove coroutine.\nloop = asyncio.get_event_loop()\nloop.run_until_complete(switch_on_stove())\n\n```\n\n## Library Reference\n\n### Properties\n\n#### Stove.algo_version\nThe algorithm version of the stove.\n#### Stove.name\nThe name of the stove as set during initial configuration.\n#### Stove.series\nThe series/model of the stove.\n#### Stove.stove_host\nThe hostname used during creation of the Stove object.\n#### Stove.stove_ip\nThe IP address as reported by the stove.\n#### Stove.stove_ssid\nThe SSID to which the stove is connected.\n\n### Methods\n\n#### @classmethod Stove.create(_cls_, stove_host, loop=asyncio.get_event_loop(), skip_ident=False)\nCreate a pystove object asynchronously. This method takes the following arguments:\n\n- __stove_host__ The hostname or IP address of the stove.\n- __loop__ Event loop to use for the pystove object.\n- __skip_ident__ Skip identification calls to the stove. Speeds up creation of the pystove object but the resulting object will be missing its identifying information.\n\nReturns a pystove object with at least the `stove_host` property set. If `skip_ident` was set to `False` (the default), all other properties should be set as well\n\nThis method is a coroutine.\n\n#### Stove.destroy(_self_)\nRun a cleanup of the Stove object. This method should be called before exiting your program to avoid error messages.\n\nThis method is a coroutine.\n\n#### Stove.get_data(_self_)\nRetrieve information about the current state of the stove.\nReturns a dict containing processed information about the current state of the stove. Useful for e.g. display purposes as most variables have been processed into readable information or python data types.\n\nThis method is a coroutine.\n\n#### Stove.get_live_data(_self_)\nRetrieve a log of recent temperature and oxygen level data from the stove.\nReturns a dict with the following structure:\n```python\n{\n  pystove.DATA_STOVE_TEMPERATURE: [...],\n  pystove.DATA_OXYGEN_LEVEL: [...]\n}\n```\nEach item contains a sequential list with historical sensor data for each minute of the last 2 hours.\n\nThis method is a coroutine.\n\n#### Stove.get_raw_data(_self_)\nRetrieve information about the current state of the stove.\nReturns a dict containing unprocessed information about the current state of the stove. All information is forwarded as provided by the stove.\n\nThis method is a coroutine.\n\n#### Stove.self_test(_self_, processed=True)\nStart and monitor the self-test routine of the stove. This method will request and return intermediate results every 3 seconds until all tests have either been passed or skipped.\nThe following argument is supported:\n\n- __processed__ Whether the results should be processed into human-readable form. Defaults to `True`.\n\nThis method is a generator coroutine.\n\n#### Stove.set_burn_level(_self_, burn_level)\nSet the burn level on the stove. Returns `True` on success.\nThis method takes the following argument:\n\n- __burn_level__ The burn level to set on the stove. Supported values are 0 through 5.\n\nThis method is a coroutine.\n\n#### Stove.set_night_lowering(_self_, state=None)\nSet or toggle the night lowering option on the stove. Returns `True` on success.\nThis method takes the following argument:\n\n- __state__ The new night lowering setting to set on the stove. Supported values must evaluate to `True` or `False`. If omitted or `None` (the default), the setting will be toggled.\n\nThis method is a coroutine.\n\n#### Stove.set_night_lowering_hours(_self_, start=None, end=None)\nSet the night lowering hours on the stove. Returns `True` on success.\nThis method takes the following arguments:\n\n- __start__ A `datetime.time` object containing the requested night lowering start time. If omitted or `None`, the start time will not be changed.\n- __end__ A `datetime.time` object containing the requested night lowering end time. If omitted or `None`, the end time will not be changed.\n\nThis method is a coroutine.\n\n#### Stove.set_remote_refill_alarm(_self_, state=None)\nSet the remote refill alarm. Returns `True` on success.\nThis method takes the following argument:\n\n- __state__ The new remote refill alarm setting to set on the stove. Supported values must evaluate to `True` or `False`. If omitted or `None` (the default), the setting will be toggled.\n\nThis method is a coroutine.\n\n#### Stove.set_time(_self_, new_time=datetime.now())\nSet the time and date on the stove. Returns `True` on success.\nThis method takes the following argument:\n\n- __new_time__ A `datetime.datetime` object containing the time and date to set on the stove. If omitted, the current time on the local host will be used.\n\nThis method is a coroutine.\n\n#### Stove.start(_self_)\nSwitch the stove to `Ignition` mode. Returns `True` on success.\n\nThis method is a coroutine.\n\n## Command Line Invocation\n```\nUsage: ./pystove_cli.py <options>\n\nOptions:\n\n  -h, --host <HOST>\t\tRequired\n    The IP address or hostname of the stove.\n\n  -f, --fast\t\t\tOptional\n    Run in fast mode (skip ident).\n\n  -c, --command <COMMAND>\tOptional\n    The command to send to the stove.\n    If no command is provided, it defaults to show_info.\n\n  -v, --value <VALUE>\t\tOptional\n    The value to send to the stove with the supplied command.\n\n\nSupported commands:\n\n  get_data\n    Retrieve a list of processed configuration values.\n\n  get_live_data:\n    Retrieve historical stove temperature and oxygen level\n    data from the last 2 hours.\n\n  get_raw_data\n    Retrieve a list of unprocessed configuration values.\n\n  self_test\n    Run stove self test routine and return result.\n\n  set_burn_level\n    Set the burn level of the stove.\n    This command requires a value between 0 and 5.\n\n  set_night_lowering\n    Set the night lowering option.\n    This command takes an optional value: 1=on, 0=off\n    A call without value toggles the setting.\n\n  set_night_lowering_hours\n    Set the night lowering hours on the stove.\n    This command requires a <value> in the form of <start>-<end>\n    Both <start> and <end> must be in 24h format H[:MM]\n\n  set_remote_refill_alarm\n    Set the remote refill alarm.\n    This command takes an optional value: 1=on, 0=off\n    A call without value toggles the setting.\n\n  set_time\n    Set the time on the stove. Defaults to current time on this system.\n    Optional value format: YYYY-MM-DD HH:MM:SS\n\n  show_info\n    Show the stove identification information.\n\n  start\n    Set the stove in ignition mode.\n\n```\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mvn23/pystove",
    "keywords": "stove hwam smartcontrol",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pystove",
    "package_url": "https://pypi.org/project/pystove/",
    "platform": "",
    "project_url": "https://pypi.org/project/pystove/",
    "project_urls": {
      "Homepage": "https://github.com/mvn23/pystove"
    },
    "release_url": "https://pypi.org/project/pystove/0.2a1/",
    "requires_dist": [
      "aiohttp"
    ],
    "requires_python": "",
    "summary": "A library to interface with HWAM wood burning stoves.",
    "version": "0.2a1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4975476,
  "releases": {
    "0.1a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07e885214d9afdff9490b7487a946a0b381bfeadc6204a92c0d152c8c6138731",
          "md5": "a6684d4e67eb1c1028b3b4f758b64154",
          "sha256": "b8fd618613235aed02fdb3cf01240efe12cac399d475bffe6bfbd6018ece7fb1"
        },
        "downloads": -1,
        "filename": "pystove-0.1a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6684d4e67eb1c1028b3b4f758b64154",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20651,
        "upload_time": "2019-02-04T23:52:56",
        "upload_time_iso_8601": "2019-02-04T23:52:56.633369Z",
        "url": "https://files.pythonhosted.org/packages/07/e8/85214d9afdff9490b7487a946a0b381bfeadc6204a92c0d152c8c6138731/pystove-0.1a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "312daf016637a188c6c808e58b926d7b816a92a363bc80b77eac221801abab6c",
          "md5": "f530b096b66bec9b4d188239137a7522",
          "sha256": "da04ac561cf0739eeaf929b119e0b96b6946b75961b61c25f24c65163b2294d9"
        },
        "downloads": -1,
        "filename": "pystove-0.1a0.tar.gz",
        "has_sig": false,
        "md5_digest": "f530b096b66bec9b4d188239137a7522",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7663,
        "upload_time": "2019-02-04T23:52:58",
        "upload_time_iso_8601": "2019-02-04T23:52:58.854828Z",
        "url": "https://files.pythonhosted.org/packages/31/2d/af016637a188c6c808e58b926d7b816a92a363bc80b77eac221801abab6c/pystove-0.1a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "728580fe0a0a35797de634b399d2179446675d5b4139dd65f2b812ca7d25ef4b",
          "md5": "3181641203fe2cf643fc04cdc9e60fff",
          "sha256": "3586e3dd02b6c75e45e1613405ac7315425238cac537f65616606dcdc231a40c"
        },
        "downloads": -1,
        "filename": "pystove-0.2a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3181641203fe2cf643fc04cdc9e60fff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22182,
        "upload_time": "2019-03-14T20:15:19",
        "upload_time_iso_8601": "2019-03-14T20:15:19.319270Z",
        "url": "https://files.pythonhosted.org/packages/72/85/80fe0a0a35797de634b399d2179446675d5b4139dd65f2b812ca7d25ef4b/pystove-0.2a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68fcd86e8547d375b83c123576589a58cf0a6fcd1b526abd53593bf928a9bd70",
          "md5": "3f650104f03182db98cbedc4a70015be",
          "sha256": "62b5c513cf016da69648804e8d587a0f3421548e99ba60a960e6436cc953522d"
        },
        "downloads": -1,
        "filename": "pystove-0.2a0.tar.gz",
        "has_sig": false,
        "md5_digest": "3f650104f03182db98cbedc4a70015be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10867,
        "upload_time": "2019-03-14T20:15:20",
        "upload_time_iso_8601": "2019-03-14T20:15:20.855813Z",
        "url": "https://files.pythonhosted.org/packages/68/fc/d86e8547d375b83c123576589a58cf0a6fcd1b526abd53593bf928a9bd70/pystove-0.2a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f2f376481eb5a271b93dcd441293a8adb1cea93f0f537dbee010b218eb706c0",
          "md5": "293c268c327648ae326d60c31ecae469",
          "sha256": "2bae7b241688b4ea6bd9a72b4482d059c17e4f47151beb8c4c7667ab6cdf6a55"
        },
        "downloads": -1,
        "filename": "pystove-0.2a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "293c268c327648ae326d60c31ecae469",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22442,
        "upload_time": "2019-03-23T09:24:10",
        "upload_time_iso_8601": "2019-03-23T09:24:10.378490Z",
        "url": "https://files.pythonhosted.org/packages/8f/2f/376481eb5a271b93dcd441293a8adb1cea93f0f537dbee010b218eb706c0/pystove-0.2a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37d6f17da9bdaeb94592fb6009a2c875732ae1cf931d46712b2b7ec82cf90589",
          "md5": "57b99f66ec723ca91c905b87d0d6d534",
          "sha256": "d03d70bcb0b14d8faace1f943b84362284e66ab8193a0033f7bd385cb570e293"
        },
        "downloads": -1,
        "filename": "pystove-0.2a1.tar.gz",
        "has_sig": false,
        "md5_digest": "57b99f66ec723ca91c905b87d0d6d534",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11222,
        "upload_time": "2019-03-23T09:24:12",
        "upload_time_iso_8601": "2019-03-23T09:24:12.358620Z",
        "url": "https://files.pythonhosted.org/packages/37/d6/f17da9bdaeb94592fb6009a2c875732ae1cf931d46712b2b7ec82cf90589/pystove-0.2a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8f2f376481eb5a271b93dcd441293a8adb1cea93f0f537dbee010b218eb706c0",
        "md5": "293c268c327648ae326d60c31ecae469",
        "sha256": "2bae7b241688b4ea6bd9a72b4482d059c17e4f47151beb8c4c7667ab6cdf6a55"
      },
      "downloads": -1,
      "filename": "pystove-0.2a1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "293c268c327648ae326d60c31ecae469",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 22442,
      "upload_time": "2019-03-23T09:24:10",
      "upload_time_iso_8601": "2019-03-23T09:24:10.378490Z",
      "url": "https://files.pythonhosted.org/packages/8f/2f/376481eb5a271b93dcd441293a8adb1cea93f0f537dbee010b218eb706c0/pystove-0.2a1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "37d6f17da9bdaeb94592fb6009a2c875732ae1cf931d46712b2b7ec82cf90589",
        "md5": "57b99f66ec723ca91c905b87d0d6d534",
        "sha256": "d03d70bcb0b14d8faace1f943b84362284e66ab8193a0033f7bd385cb570e293"
      },
      "downloads": -1,
      "filename": "pystove-0.2a1.tar.gz",
      "has_sig": false,
      "md5_digest": "57b99f66ec723ca91c905b87d0d6d534",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11222,
      "upload_time": "2019-03-23T09:24:12",
      "upload_time_iso_8601": "2019-03-23T09:24:12.358620Z",
      "url": "https://files.pythonhosted.org/packages/37/d6/f17da9bdaeb94592fb6009a2c875732ae1cf931d46712b2b7ec82cf90589/pystove-0.2a1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}