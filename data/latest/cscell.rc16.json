{
  "info": {
    "author": "Eugenio Vinicio Berretta",
    "author_email": "euberdeveloper@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# cScell\nA framework written with python, in order to quickly create C shell projects on Linux envinronment.\n\n<p align=\"center\">\n    <a href=\"https://github.com/euberdeveloper/cScell/blob/master/docs/example.gif\">\n        <img src=\"https://github.com/euberdeveloper/cScell/raw/master/docs/example.gif\">\n    </a>\n</p>\n\n## Install\n\n**Note**: this package is thought to be used by **Linux** platforms.\n\nYou can install cScell with `pip` or `pip3`:\n\n```bash\n$ pip3 install cScell\n```\n\nThe package is usually used as a global module. It is possible that a warning will appear during the installation, saying that the location of the package is not on the `$PATH` variable. In order to be able to use it from any directory, add that location to the `$PATH` variable.\n\n## Usage\n\n### Syntax\n\nThe syntax of the command is:\n\n```bash\ncScell [app_name] [commands_json_path] [output_dir_path]\n```\n\nThe three parameters are:\n* __app_name__: The name of the project. Default: `scell_project`.\n* __commands_json_path__: The path to the json file describing the commands of the shell program. Default: `./commands.json`.\n* __output_dir_path__: The path where the project directory will be created. Default: `./`.\n\n### Examples\n\nThis example will create in the current folder a project called \"myProject\":\n\n```bash\ncScell myProject\n```\n\nThis example will create in the parent folder a project called \"myProject\", with the commands described in \"my-commands.json\":\n\n```bash\ncScell myProject ./my-commands.json ../\n```\n\n### Usage as local module:\n\nThe module could be actually used also as a local module, here is an example:\n\n```python\nfrom cScell.cScell import generate_scell\n\nAPP_NAME = 'myProject'\nJSON_COMMANDS = './my-commands.json\nOUTPUT_PATH = '../'\n\ngenerate_scell(APP_NAME, JSON_COMMANDS, OUTPUT_PATH)\n```\n\n## Json format\n\nYou can describe the **commands** of your c shell program with a **json file**.\n\nIn the commands json file:\n* Each root **key** is the name of a **command** of the shell. Its value must be an **object**.\n* The special `_arguments` **command** is the command that could be executed when the user passes command line arguments to the program.\n* An exception for what was said above is the `promptSymbol` **key**, that specifies the **symbol** displayed **before each line of the prompt**. If **not specified**, its value will be `>>`.\n* For **each command**, the `function` property indicates the **name** of the function that **handles** that command.\n* For **each command**, the `arguments` property indicates the arguments accepted by that command. Its value must be an **object**.\n* For **each arguments object**, every **key** is the **name** of an argument and its value must be an **object**.\n* For **each argument value**, the key `type` is mandatory and describes the **variable type** of the argument. The possible options are: `int`, `long`, `float`, `double`, `char`, `char*`, `array<type>` (where `type` is one of the precedent types).\n* For **each argument value**, the key `alias` is not mandatory and describes an **alias** (**single character**) that could be used instead of the extended argument name.\n* For **each argument value**, the key `default` is not mandatory. If it is not specified, the argument is mandatory when the command is typed by the user. NB: The **bool** type is **always false as default**. The **array** type **can only be \"NULL\"** as default if it is not a required argument.\n* For **each argument value**, the key `min` is not mandatory. It can be used with **numeric** types and indicates that the passed argument value must be **bigger or equal** than the value of **min**.\n* For **each argument value**, the key `max` is not mandatory. It can be used with **numeric** types and indicates that the passed argument value must be **lower or equal** than the value of **max**.\n* For **each argument value**, the key `description` is not mandatory. It is the displayed **description for the argument** when the command **help** is executed.\n* For **each command**, the key `description` is not mandatory. It is the displayed **description for the command** when the command **help** is executed.\n\nAn example:\n\n```json\n{\n    \"promptSymbol\": \">>>\",\n    \"_arguments\": {\n        \"function\": \"arguments\",\n        \"arguments\": {\n            \"thing\": {\n                \"type\": \"int\",\n                \"alias\": \"t\",\n                \"default\": 1,\n                \"min\": 0,\n                \"description\": \"The thing argument description\"\n            },\n            \"stuff\": {\n                \"type\": \"float\",\n                \"alias\": \"s\",\n                \"max\": 10,\n                \"description\": \"The stuff argument description\"\n            },\n            \"ware\": {\n                \"type\": \"array<char*>\",\n                \"alias\": \"w\",\n                \"default\": \"NULL\",\n                \"description\": \"The ware argument description\"\n            }\n        }\n    },\n    \"increment\": {\n        \"function\": \"inc\",\n        \"arguments\": {\n            \"number\": {\n                \"type\": \"int\",\n                \"alias\": \"n\",\n                \"description\": \"The number to increment\"\n            },\n            \"amount\": {\n                \"type\": \"int\",\n                \"alias\": \"a\",\n                \"default\": 1,\n                \"description\": \"How much will the number incremented\"\n            }\n        },\n        \"description\": \"Increments a number\"\n    },\n    \"add\": {\n        \"function\": \"add\",\n        \"arguments\": {\n            \"first\": {\n                \"type\": \"int\",\n                \"alias\": \"x\",\n                \"description\": \"The first addend\"\n            },\n            \"second\": {\n                \"type\": \"int\",\n                \"alias\": \"y\",\n                \"description\": \"The second addend\"\n            }\n        },\n        \"description\": \"Adds two addends\"\n    },\n    \"concat\": {\n        \"function\": \"concat\",\n        \"arguments\": {\n            \"strings\": {\n                \"type\": \"array<char*>\",\n                \"default\": \"NULL\",\n                \"description\": \"The strings to concat\"\n            },\n            \"reverse\": {\n                \"type\": \"bool\",\n                \"alias\": \"r\",\n                \"description\": \"If the strings will be in reversed order\"\n            }\n        },\n        \"description\": \"Concats an array of strings\"\n    },\n    \"quit\": {\n        \"function\": \"quit\",\n        \"description\": \"closes the program\"\n    }\n}\n```\n\n## Result\n\nAt the end of execution, a **project folder** called as you specified for the `app_name` argument will be created in the `output_dir_path` that you specified.\n\nThat folder is **structured** as specified below:\n* There will be a `compile.sh` bash script. It is the script to **compile** the **c generated source code**. If it is not already executable, you can execute `sudo chmod +x compile.sh`.\n* There will be a `[app_name].c` file, named as the **name of the project**. It will contain the **main function** of the program, it imports the **commands interpreter** generated by the module and the **commands handlers** that you should implement and will **run the shell loop**.\n* There will be the `shellutils` folder, containing all the `libraries` that make the shell work. These libraries are:\n    - `colour`, for a coloured output\n    - `constructs`, containing only header files, a `boolean.h` for the boolean enum and a `sh_state.h` for the state of a command enum.\n    - `logger`, used by the shell to log errors or warnings.\n    - `text`, containing all the text functions and the advanced terminal.\n    - `shell_utils`, used by the shell_commands library\n    - `shell_commands`, the only one that **depends** on the `commands.json` file passed before creating the project. It will contain the code that **parses the shell commands** prompted by the user and **calls the right function handler**\n* There will be the `handlers` folder, containing the `handlers.h` and `handlers.c` files. You will **edit** the `handlers.c` files in order to define the code that will be executed when the user prompts a specific command.\n\nThere will be also **three** variables exported by `shell_commands.h`:\n* `char *sh_last_command`: It is the string variable containing the last prompted command\n* `char *sh_prompt_symbol`: It is the variable whose value is the string that specifies the **symbol** displayed **before each line of the prompt**.\n* `bool sh_use_advanced_terminal`: It is the boolean variable that determines if the **advanced terminal** will be used. The advanced terminal makes possible to the user to use the **up and down arrows** to navigate the **commands cronology**. Its default value is `true`, but you can change it before the `sh_loop();` call in the `[app_name].c` file.\n\nTo start the program you just need to execute:\n```bash\ncd [your_project_dir]\nsudo chmod +x ./compile.sh\n./compile.sh\n./[your_app_name]\n```\nThis will compile the c code and start the generate executable program.\n\nYou should **edit** the `handlers.c` file to define the behaviour of each command.\n\n## What the framework does\n\nUnder the hood:\n* All arguments containing **hyphens** in the name will be purged with **underscores**.\n* If the `_arguments` command was defined, if the users passes **command line arguments** they will be parsed and the corrispondent handler executed.\n* An **infinite loop** that **listens** for the user's commands will be then executed.\n* All **empty prompted lines** will be ignored.\n* After a command is prompted, the program will **check if the command exists**. If not, it will **display a proper error message**.\n* If the command exists, it will be **properly** parsed.\n* If a **required argument** misses, a **value** is invalid, a **value** misses or does not matches **provided numerical ranges**, an error will be displayed.\n* The **extended** argument names should be preceded by two hyphens `--` while the **aliased** argument names by a single hyphen `-`.\n* If a **value without argument** will be passed, a warning will be displayed, but it will not block the command.\n* If all checks pass and the command is correctly parsed, the corrispondent **handler function** is called with the parsed arguments. You can easily **edit** the `handlers.c` file and implement the handlers, which by default print the command name.\n* If the `help` command is prompted, the documentation for all the commands will be displayed\n* If the `help [command]` command is prompted, the documentation for the given command will be displayed\n\n## Notes\n\n* This framework works only for **Linux**.\n* Only **named** arguments are allowed. This means that all commands will be like `add -x 1 -y 2` or `concat --strings first second third` but commands like `add 1 2` will not be allowed.\n* If a string parameter **contains spaces**, you can include it inside double apix such as `concat --strings \"first string\" \"second string\"`",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/euberdeveloper/cScell/archive/v1.0.2.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/euberdeveloper/cScell",
    "keywords": "cScell,shell,c,framework",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cScell",
    "package_url": "https://pypi.org/project/cScell/",
    "platform": "",
    "project_url": "https://pypi.org/project/cScell/",
    "project_urls": {
      "Download": "https://github.com/euberdeveloper/cScell/archive/v1.0.2.tar.gz",
      "Homepage": "https://github.com/euberdeveloper/cScell"
    },
    "release_url": "https://pypi.org/project/cScell/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A framework made with python for C cli projects",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8225743,
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c197980566ad1cbb265c32fb5a5456de3a2c5e25d415cc4cd8a1058a55eefe7",
          "md5": "299ac42c2c7e252602d6e42324017ab9",
          "sha256": "3c0e9a430929f0010a73a9540f709fb7a78131021c8478b5db077ad85b21fe98"
        },
        "downloads": -1,
        "filename": "cScell-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "299ac42c2c7e252602d6e42324017ab9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13607,
        "upload_time": "2020-09-18T20:00:47",
        "upload_time_iso_8601": "2020-09-18T20:00:47.377729Z",
        "url": "https://files.pythonhosted.org/packages/1c/19/7980566ad1cbb265c32fb5a5456de3a2c5e25d415cc4cd8a1058a55eefe7/cScell-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72aed5d1bbf05b733506a73170110d1c9a83029ea81e7e81a48e46df5ce628c8",
          "md5": "27bc7cffc97e1f04b128982dbd538a90",
          "sha256": "52889c9752a798b3e61c21a99aa19f2cf2f634256972f3cb16f4693be34991bc"
        },
        "downloads": -1,
        "filename": "cScell-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "27bc7cffc97e1f04b128982dbd538a90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14252,
        "upload_time": "2020-09-18T20:08:00",
        "upload_time_iso_8601": "2020-09-18T20:08:00.563903Z",
        "url": "https://files.pythonhosted.org/packages/72/ae/d5d1bbf05b733506a73170110d1c9a83029ea81e7e81a48e46df5ce628c8/cScell-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ef80f743feddb5b0d66b757681f0b2c1946ed5fe5f138887cf3972d6f16c2ec",
          "md5": "04f51762d9327394f6a822394279c12d",
          "sha256": "2ba4bef67a8bc9facc9fe8fb6986d196f259241696cafa56e64a3e10c29a3f40"
        },
        "downloads": -1,
        "filename": "cScell-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "04f51762d9327394f6a822394279c12d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14325,
        "upload_time": "2020-09-18T20:17:18",
        "upload_time_iso_8601": "2020-09-18T20:17:18.957451Z",
        "url": "https://files.pythonhosted.org/packages/4e/f8/0f743feddb5b0d66b757681f0b2c1946ed5fe5f138887cf3972d6f16c2ec/cScell-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d66b5aa1e02fcba2ebc6ddc51473a09d9cb545c4fa96386af7ed856304216d0a",
          "md5": "c5f9f9fc004175f096f1f165a325009c",
          "sha256": "9c04276800208515c0fafed890c74e2ff7aac8d1ab4adc40d7265aa5af7111a5"
        },
        "downloads": -1,
        "filename": "cScell-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "c5f9f9fc004175f096f1f165a325009c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14486,
        "upload_time": "2020-09-18T20:24:45",
        "upload_time_iso_8601": "2020-09-18T20:24:45.704897Z",
        "url": "https://files.pythonhosted.org/packages/d6/6b/5aa1e02fcba2ebc6ddc51473a09d9cb545c4fa96386af7ed856304216d0a/cScell-0.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0617b65e46e2ff7d4aeea9c24bff8a221321acf9f480945ac860cb9e27780cc",
          "md5": "63d30cb3f02515dd6216c34c3f6fb3dc",
          "sha256": "207a32491d0e3dbf5c0e2cfa76985ce88ff713022c2bbb6b59008a1b2b26f260"
        },
        "downloads": -1,
        "filename": "cScell-0.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "63d30cb3f02515dd6216c34c3f6fb3dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14476,
        "upload_time": "2020-09-18T20:42:43",
        "upload_time_iso_8601": "2020-09-18T20:42:43.174723Z",
        "url": "https://files.pythonhosted.org/packages/b0/61/7b65e46e2ff7d4aeea9c24bff8a221321acf9f480945ac860cb9e27780cc/cScell-0.0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a8b9db63274486c02e9f2e165bbed326e19d86473a4bedb93901f751ddb3539",
          "md5": "8b20e8acbf09354bd43e4bc8462fa12f",
          "sha256": "17d483ac2bf3d32857e23b5b4b37a5317f55c642238ecbc8702a36008b87df12"
        },
        "downloads": -1,
        "filename": "cScell-0.0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "8b20e8acbf09354bd43e4bc8462fa12f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14613,
        "upload_time": "2020-09-18T20:48:09",
        "upload_time_iso_8601": "2020-09-18T20:48:09.330863Z",
        "url": "https://files.pythonhosted.org/packages/9a/8b/9db63274486c02e9f2e165bbed326e19d86473a4bedb93901f751ddb3539/cScell-0.0.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb7139c34999b3e8c918713f110894fc6f3e6cf7a4f6e2a63f1d8f064d3cf249",
          "md5": "b911f5127115ac865283cf1bad03b89a",
          "sha256": "25e5f7184f73218ac713a4e475e69641146a0e45f8438af60269ecfed7dd1cc2"
        },
        "downloads": -1,
        "filename": "cScell-0.0.16.tar.gz",
        "has_sig": false,
        "md5_digest": "b911f5127115ac865283cf1bad03b89a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14465,
        "upload_time": "2020-09-18T20:54:37",
        "upload_time_iso_8601": "2020-09-18T20:54:37.222836Z",
        "url": "https://files.pythonhosted.org/packages/fb/71/39c34999b3e8c918713f110894fc6f3e6cf7a4f6e2a63f1d8f064d3cf249/cScell-0.0.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8df694699be216ca95bba2336d25c4af0366b3d6a0ea2288fdb460c4222a89b8",
          "md5": "af66147158f304636bce35268be98a9c",
          "sha256": "eaba9b68ff3b1255039cfde88ccf8efb94ca132b281bfe620b30df54476bb5a7"
        },
        "downloads": -1,
        "filename": "cScell-0.0.17.tar.gz",
        "has_sig": false,
        "md5_digest": "af66147158f304636bce35268be98a9c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14512,
        "upload_time": "2020-09-18T22:18:41",
        "upload_time_iso_8601": "2020-09-18T22:18:41.318064Z",
        "url": "https://files.pythonhosted.org/packages/8d/f6/94699be216ca95bba2336d25c4af0366b3d6a0ea2288fdb460c4222a89b8/cScell-0.0.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "891eec5c9be05adea82451b897e6aba58e054b5146c508772f84154b3c119172",
          "md5": "f2f9d5ead4f26140f75d1346932dba3a",
          "sha256": "d3077e5de950ab60a1d0a89c735acbb23eda587f5929ac67b3b6121d33555333"
        },
        "downloads": -1,
        "filename": "cScell-0.0.18.tar.gz",
        "has_sig": false,
        "md5_digest": "f2f9d5ead4f26140f75d1346932dba3a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21836,
        "upload_time": "2020-09-19T20:43:26",
        "upload_time_iso_8601": "2020-09-19T20:43:26.418889Z",
        "url": "https://files.pythonhosted.org/packages/89/1e/ec5c9be05adea82451b897e6aba58e054b5146c508772f84154b3c119172/cScell-0.0.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2176aa9df40c96b03be6e13be9a0be5bc149e45dc9e65d019024ea809b9b477",
          "md5": "c700d2b19b10075870ffbc12e6d97c62",
          "sha256": "f8404ef6b8baed8993129644ce8fa2c5afa5fa63fed8706901d645db4f13941e"
        },
        "downloads": -1,
        "filename": "cScell-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c700d2b19b10075870ffbc12e6d97c62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5689,
        "upload_time": "2020-09-18T19:22:48",
        "upload_time_iso_8601": "2020-09-18T19:22:48.666781Z",
        "url": "https://files.pythonhosted.org/packages/d2/17/6aa9df40c96b03be6e13be9a0be5bc149e45dc9e65d019024ea809b9b477/cScell-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c177c376b2fb2dbee21e628d18e57b0cb691431c6ded3d7e873420793f626b1b",
          "md5": "341c9c3f0513e8b4a5c0b71cfad22a03",
          "sha256": "ac21504a48f7182119505eb1c7bfa16bd8ed7dddc162c12bfc94a6cbeeb92164"
        },
        "downloads": -1,
        "filename": "cScell-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "341c9c3f0513e8b4a5c0b71cfad22a03",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13477,
        "upload_time": "2020-09-18T19:30:53",
        "upload_time_iso_8601": "2020-09-18T19:30:53.918778Z",
        "url": "https://files.pythonhosted.org/packages/c1/77/c376b2fb2dbee21e628d18e57b0cb691431c6ded3d7e873420793f626b1b/cScell-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a29dd67be9b5d2334115a06274f5728c35e96df181d8d95809a2ff83178fa63",
          "md5": "61b9186a74b4b76b41a1cc9ffc8dc4e6",
          "sha256": "baf72a78512c3c80eb22eb187dd5c035c26604bd150f075ff9cd734f615d988e"
        },
        "downloads": -1,
        "filename": "cScell-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "61b9186a74b4b76b41a1cc9ffc8dc4e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13623,
        "upload_time": "2020-09-18T19:53:02",
        "upload_time_iso_8601": "2020-09-18T19:53:02.062346Z",
        "url": "https://files.pythonhosted.org/packages/5a/29/dd67be9b5d2334115a06274f5728c35e96df181d8d95809a2ff83178fa63/cScell-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f837517ac7bf10f4421a4d434829cb3feefbbe900c6cd13ae9f140a36f6d46d9",
          "md5": "133fd58c6d1d143064334fca88e8c493",
          "sha256": "bd68efd092e781e4f393c29575cd1f154d0b45c276806d32802e1db8a77cf3da"
        },
        "downloads": -1,
        "filename": "cScell-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "133fd58c6d1d143064334fca88e8c493",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13647,
        "upload_time": "2020-09-18T19:59:07",
        "upload_time_iso_8601": "2020-09-18T19:59:07.633196Z",
        "url": "https://files.pythonhosted.org/packages/f8/37/517ac7bf10f4421a4d434829cb3feefbbe900c6cd13ae9f140a36f6d46d9/cScell-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e964d565eb4e0748ffb69429f1a18031501f4e9a29dbd1d11fec8cc1d7f89519",
          "md5": "00fbdf3e54cdfa231d60bbe131cdb00f",
          "sha256": "e5026a8679c8a72df5ba073dd8cff9a16ba4112ba0faa5c07290926bd5723dc5"
        },
        "downloads": -1,
        "filename": "cScell-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "00fbdf3e54cdfa231d60bbe131cdb00f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21914,
        "upload_time": "2020-09-19T21:37:45",
        "upload_time_iso_8601": "2020-09-19T21:37:45.017169Z",
        "url": "https://files.pythonhosted.org/packages/e9/64/d565eb4e0748ffb69429f1a18031501f4e9a29dbd1d11fec8cc1d7f89519/cScell-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be4ab3331e6640ef30199aa8fb229ee4fa1e779a1d46ac63153a64cbc840c1a6",
          "md5": "bb045c51063030ca71e2300878aef8b4",
          "sha256": "fa47ce144b913a3b7cb14efadbbf1adf9110f513f5d3b0dea5d968dc7e33136f"
        },
        "downloads": -1,
        "filename": "cScell-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bb045c51063030ca71e2300878aef8b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21940,
        "upload_time": "2020-09-19T21:44:22",
        "upload_time_iso_8601": "2020-09-19T21:44:22.431679Z",
        "url": "https://files.pythonhosted.org/packages/be/4a/b3331e6640ef30199aa8fb229ee4fa1e779a1d46ac63153a64cbc840c1a6/cScell-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5013f2cda99015dbddd2c0e82aee832856ce41d2f4e860f564cfc88b08012f37",
          "md5": "91bb29595255631fec344db669873b5d",
          "sha256": "f25604ef4b314487a8a9ce9d851d54b96bbd0047ed9956392e3fcb48260b1994"
        },
        "downloads": -1,
        "filename": "cScell-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "91bb29595255631fec344db669873b5d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21985,
        "upload_time": "2020-09-19T21:46:04",
        "upload_time_iso_8601": "2020-09-19T21:46:04.220413Z",
        "url": "https://files.pythonhosted.org/packages/50/13/f2cda99015dbddd2c0e82aee832856ce41d2f4e860f564cfc88b08012f37/cScell-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5013f2cda99015dbddd2c0e82aee832856ce41d2f4e860f564cfc88b08012f37",
        "md5": "91bb29595255631fec344db669873b5d",
        "sha256": "f25604ef4b314487a8a9ce9d851d54b96bbd0047ed9956392e3fcb48260b1994"
      },
      "downloads": -1,
      "filename": "cScell-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "91bb29595255631fec344db669873b5d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21985,
      "upload_time": "2020-09-19T21:46:04",
      "upload_time_iso_8601": "2020-09-19T21:46:04.220413Z",
      "url": "https://files.pythonhosted.org/packages/50/13/f2cda99015dbddd2c0e82aee832856ce41d2f4e860f564cfc88b08012f37/cScell-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}