{
  "info": {
    "author": "Azat Ibrakov",
    "author_email": "azatibrakov@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "consensual_http\n===============\n\n[![](https://dev.azure.com/lycantropos/consensual_http/_apis/build/status/lycantropos.consensual_http?branchName=master)](https://dev.azure.com/lycantropos/consensual_http/_build/latest?definitionId=41&branchName=master \"Azure Pipelines\")\n[![](https://codecov.io/gh/lycantropos/consensual_http/branch/master/graph/badge.svg)](https://codecov.io/gh/lycantropos/consensual_http \"Codecov\")\n[![](https://img.shields.io/github/license/lycantropos/consensual_http.svg)](https://github.com/lycantropos/consensual_http/blob/master/LICENSE \"License\")\n[![](https://badge.fury.io/py/consensual-http.svg)](https://badge.fury.io/py/consensual-http \"PyPI\")\n\nIn what follows `python` is an alias for `python3.7`\nor any later version (`python3.8` and so on).\n\nInstallation\n------------\n\nInstall the latest `pip` & `setuptools` packages versions\n```bash\npython -m pip install --upgrade pip setuptools\n```\n\n### User\n\nDownload and install the latest stable version from `PyPI` repository\n```bash\npython -m pip install --upgrade consensual_http\n```\n\n### Developer\n\nDownload the latest version from `GitHub` repository\n```bash\ngit clone https://github.com/lycantropos/consensual_http.git\ncd consensual_http\n```\n\nInstall dependencies\n```bash\npython -m pip install -r requirements.txt\n```\n\nInstall\n```bash\npython setup.py install\n```\n\nUsage\n-----\n\n```python\n>>> from consensual.raft import Node\n>>> from consensual_http import communication\n>>> from yarl import URL\n>>> node_url = URL.build(scheme='http',\n...                      host='localhost',\n...                      port=6000)\n>>> heartbeat = 0.1\n>>> from typing import Any\n>>> processed_parameters = []\n>>> def dummy_processor(parameters: Any) -> None:\n...     processed_parameters.append(parameters)\n>>> def stop(parameters: Any = None) -> None:\n...     receiver.stop()\n>>> processors = {'dummy': dummy_processor, 'stop': stop}\n>>> sender = communication.Sender(heartbeat=heartbeat,\n...                               urls=[node_url])\n>>> from asyncio import Event, get_event_loop\n>>> loop = get_event_loop()\n>>> node = Node.from_url(node_url,\n...                      heartbeat=heartbeat,\n...                      loop=loop,\n...                      processors=processors,\n...                      sender=sender)\n>>> node_is_running = Event()\n>>> receiver = communication.Receiver(node,\n...                                   on_run=node_is_running.set)\n>>> from aiohttp.client import ClientSession\n>>> def validate_response(response: Any) -> None:\n...     assert isinstance(response, dict)\n...     assert response.keys() == {'error'}\n...     assert response['error'] is None\n>>> async def run() -> None:\n...     await node_is_running.wait()\n...     async with ClientSession(node.url) as session:\n...         validate_response(await (await session.post('/')).json())\n...         validate_response(await (await session.post('/dummy',\n...                                                     json=42)).json())\n...         validate_response(await (await session.delete('/',\n...                                                       json=[str(node.url)])).json())\n...         validate_response(await (await session.delete('/')).json())\n...     stop(None)\n>>> _ = loop.create_task(run())\n>>> receiver.start()\n>>> all(parameters == 42 for parameters in processed_parameters)\nTrue\n\n```\n\nDevelopment\n-----------\n\n### Bumping version\n\n#### Preparation\n\nInstall\n[bump2version](https://github.com/c4urself/bump2version#installation).\n\n#### Pre-release\n\nChoose which version number category to bump following [semver\nspecification](http://semver.org/).\n\nTest bumping version\n```bash\nbump2version --dry-run --verbose $CATEGORY\n```\n\nwhere `$CATEGORY` is the target version number category name, possible\nvalues are `patch`/`minor`/`major`.\n\nBump version\n```bash\nbump2version --verbose $CATEGORY\n```\n\nThis will set version to `major.minor.patch-alpha`. \n\n#### Release\n\nTest bumping version\n```bash\nbump2version --dry-run --verbose release\n```\n\nBump version\n```bash\nbump2version --verbose release\n```\n\nThis will set version to `major.minor.patch`.\n\n### Running tests\n\nInstall dependencies\n```bash\npython -m pip install -r requirements-tests.txt\n```\n\nPlain\n```bash\npytest\n```\n\nInside `Docker` container:\n```bash\ndocker-compose up\n```\n\n`Bash` script:\n```bash\n./run-tests.sh\n```\n\n`PowerShell` script:\n```powershell\n.\\run-tests.ps1\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/lycantropos/consensual_http/archive/master.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lycantropos/consensual_http/",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "consensual-http",
    "package_url": "https://pypi.org/project/consensual-http/",
    "platform": "",
    "project_url": "https://pypi.org/project/consensual-http/",
    "project_urls": {
      "Download": "https://github.com/lycantropos/consensual_http/archive/master.zip",
      "Homepage": "https://github.com/lycantropos/consensual_http/"
    },
    "release_url": "https://pypi.org/project/consensual-http/0.1.0/",
    "requires_dist": [
      "aiohttp (<4.0,>=3.8.1)",
      "consensual (<1.0,>=0.1.0)",
      "reprit (<1.0,>=0.6.0)",
      "yarl (<2.0,>=1.7.2)",
      "typing-extensions (<5.0,>=4.0.1) ; python_version < \"3.8\""
    ],
    "requires_python": ">=3.7",
    "summary": "HTTP-based communication layer for `consensual` package.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13019954,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c93db1cbe77b7d4f9a374db8c97ffa851752fa4ad0458ec006d82d43df5716ee",
          "md5": "7af52b9478707184ce73f9d646d27f43",
          "sha256": "15e6581873c9f1c6c5978763a7f2b4b4baa515942e29f372b26b286f433fd5d1"
        },
        "downloads": -1,
        "filename": "consensual_http-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7af52b9478707184ce73f9d646d27f43",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 3197,
        "upload_time": "2022-02-22T01:29:37",
        "upload_time_iso_8601": "2022-02-22T01:29:37.285749Z",
        "url": "https://files.pythonhosted.org/packages/c9/3d/b1cbe77b7d4f9a374db8c97ffa851752fa4ad0458ec006d82d43df5716ee/consensual_http-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c37d8e9f9d43edccdc3d13256ebf51c135c042b67f5bf642700aab1514440b9",
          "md5": "441f1d5bae6a0bcd6ea71539ce76c567",
          "sha256": "c5d81bf597297ef970169b6071a6fe5f4b70f29b2b9a39c1007abe98071b399e"
        },
        "downloads": -1,
        "filename": "consensual_http-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "441f1d5bae6a0bcd6ea71539ce76c567",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3024,
        "upload_time": "2022-02-22T01:29:39",
        "upload_time_iso_8601": "2022-02-22T01:29:39.707549Z",
        "url": "https://files.pythonhosted.org/packages/8c/37/d8e9f9d43edccdc3d13256ebf51c135c042b67f5bf642700aab1514440b9/consensual_http-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cfc51376b059e2852ccb6954b813196560cd408f332237d3b5f095414e528c31",
          "md5": "30172a0b18feacd3dfff4be6e89a56a9",
          "sha256": "59fef025a63551b482d8ab2cc01d4ce88c60c5c22ba0a0b8ef84c64b579dd72f"
        },
        "downloads": -1,
        "filename": "consensual_http-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "30172a0b18feacd3dfff4be6e89a56a9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8165,
        "upload_time": "2022-02-26T18:40:55",
        "upload_time_iso_8601": "2022-02-26T18:40:55.864611Z",
        "url": "https://files.pythonhosted.org/packages/cf/c5/1376b059e2852ccb6954b813196560cd408f332237d3b5f095414e528c31/consensual_http-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "903df01c9ddc464d9014098f58e87dc2c9fe86f87d17ac85e0ebf1ccac8578b7",
          "md5": "51272b33d3ba8de7f88cae19ebfc3a52",
          "sha256": "06dcb3dc9223c90ca19ea6fb13ff674145ddb1aa81f20a7be76483f631f26efd"
        },
        "downloads": -1,
        "filename": "consensual_http-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "51272b33d3ba8de7f88cae19ebfc3a52",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6229,
        "upload_time": "2022-02-26T18:40:57",
        "upload_time_iso_8601": "2022-02-26T18:40:57.306540Z",
        "url": "https://files.pythonhosted.org/packages/90/3d/f01c9ddc464d9014098f58e87dc2c9fe86f87d17ac85e0ebf1ccac8578b7/consensual_http-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cfc51376b059e2852ccb6954b813196560cd408f332237d3b5f095414e528c31",
        "md5": "30172a0b18feacd3dfff4be6e89a56a9",
        "sha256": "59fef025a63551b482d8ab2cc01d4ce88c60c5c22ba0a0b8ef84c64b579dd72f"
      },
      "downloads": -1,
      "filename": "consensual_http-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "30172a0b18feacd3dfff4be6e89a56a9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 8165,
      "upload_time": "2022-02-26T18:40:55",
      "upload_time_iso_8601": "2022-02-26T18:40:55.864611Z",
      "url": "https://files.pythonhosted.org/packages/cf/c5/1376b059e2852ccb6954b813196560cd408f332237d3b5f095414e528c31/consensual_http-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "903df01c9ddc464d9014098f58e87dc2c9fe86f87d17ac85e0ebf1ccac8578b7",
        "md5": "51272b33d3ba8de7f88cae19ebfc3a52",
        "sha256": "06dcb3dc9223c90ca19ea6fb13ff674145ddb1aa81f20a7be76483f631f26efd"
      },
      "downloads": -1,
      "filename": "consensual_http-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "51272b33d3ba8de7f88cae19ebfc3a52",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 6229,
      "upload_time": "2022-02-26T18:40:57",
      "upload_time_iso_8601": "2022-02-26T18:40:57.306540Z",
      "url": "https://files.pythonhosted.org/packages/90/3d/f01c9ddc464d9014098f58e87dc2c9fe86f87d17ac85e0ebf1ccac8578b7/consensual_http-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}