{
  "info": {
    "author": "Ayoub Malek, Vanessa Sochat",
    "author_email": "superkogito@gmail.com, vsochat@stanford.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development"
    ],
    "description": "<div style=\"text-align:center\"><img src=\"https://raw.githubusercontent.com/urlstechie/urlchecker-python/master/docs/urlstechie.png\"/></div>\n\n[![Build Status](https://travis-ci.com/urlstechie/urlchecker-python.svg?branch=master)](https://travis-ci.com/urlstechie/urlchecker-python) [![Documentation Status](https://readthedocs.org/projects/urlchecker-python/badge/?version=latest)](https://urlchecker-python.readthedocs.io/en/latest/?badge=latest) [![codecov](https://codecov.io/gh/urlstechie/urlchecker-python/branch/master/graph/badge.svg)](https://codecov.io/gh/urlstechie/urlchecker-python) [![Python](https://img.shields.io/badge/python-3.5%20%7C%203.6%20%7C%203.7-blue)](https://www.python.org/doc/versions/) [![CodeFactor](https://www.codefactor.io/repository/github/urlstechie/urlchecker-python/badge)](https://www.codefactor.io/repository/github/urlstechie/urlchecker-python) ![PyPI](https://img.shields.io/pypi/v/urlchecker) [![Downloads](https://pepy.tech/badge/urlchecker)](https://pepy.tech/project/urlchecker) [![License](https://img.shields.io/badge/license-MIT-brightgreen)](https://github.com/urlstechie/urlchecker-python/blob/master/LICENSE)\n\n\n# urlchecker-python\n\nThis is a python module to collect urls over static files (code and documentation)\nand then test for and report broken links. If you are interesting in using\nthis as a GitHub action, see [urlchecker-action](https://github.com/urlstechie/urlchecker-action). There are also container\nbases available on [quay.io/urlstechie/urlchecker](https://quay.io/repository/urlstechie/urlchecker?tab=tags). As of version\n0.0.26, we use multiprocessing so the checks run a lot faster, and you can set `URLCHECKER_WORKERS` to change the number of workers\n(defaults to 9). If you don't want multiprocessing, use version 0.0.25 or earlier.\n\n## Module Documentation\n\nA detailed documentation of the code is available under [urlchecker-python.readthedocs.io](https://urlchecker-python.readthedocs.io/en/latest/)\n\n## Usage\n\n### Install\n\nYou can install the urlchecker from [pypi](https://pypi.org/project/urlchecker).\nBefore you do, it's recommended to install fake-useragent from:\n\n```bash\npip install git+https://github.com/danger89/fake-useragent.git\n```\n\nAnd then urlchecker:\n\n```bash\n$ pip install urlchecker\n```\n\nor install from the repository directly:\n\n```bash\n$ git clone https://github.com/urlstechie/urlchecker-python.git\n$ cd urlchecker-python\n$ python setup.py install\n```\n\nInstallation will place a binary, `urlchecker` in your Python path.\n\n```bash\n$ which urlchecker\n/home/vanessa/anaconda3/bin/urlchecker\n```\n\n\n### Check Local Folder\n\nYour most likely use case will be to check a local directory with static files (documentation or code)\nfor files. In this case, you can use urlchecker check:\n\n```bash\n$ urlchecker check --help\nusage: urlchecker check [-h] [-b BRANCH] [--subfolder SUBFOLDER] [--cleanup]\n                        [--force-pass] [--no-print] [--file-types FILE_TYPES]\n                        [--files FILES] [--exclude-urls EXCLUDE_URLS]\n                        [--exclude-patterns EXCLUDE_PATTERNS]\n                        [--exclude-files EXCLUDE_FILES] [--save SAVE]\n                        [--retry-count RETRY_COUNT] [--timeout TIMEOUT]\n                        path\n\npositional arguments:\n  path                  the local path or GitHub repository to clone and check\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -b BRANCH, --branch BRANCH\n                        if cloning, specify a branch to use (defaults to\n                        master)\n  --subfolder SUBFOLDER\n                        relative subfolder path within path (if not specified,\n                        we use root)\n  --cleanup             remove root folder after checking (defaults to False,\n                        no cleaup)\n  --force-pass          force successful pass (return code 0) regardless of\n                        result\n  --no-print            Skip printing results to the screen (defaults to\n                        printing to console).\n  --file-types FILE_TYPES\n                        comma separated list of file extensions to check\n                        (defaults to .md,.py)\n  --files FILES         comma separated list of exact files or patterns to\n                        check.\n  --exclude-urls EXCLUDE_URLS\n                        comma separated links to exclude (no spaces)\n  --exclude-patterns EXCLUDE_PATTERNS\n                        comma separated list of patterns to exclude (no\n                        spaces)\n  --exclude-files EXCLUDE_FILES\n                        comma separated list of files and patterns to exclude\n                        (no spaces)\n  --save SAVE           Path to a csv file to save results to.\n  --retry-count RETRY_COUNT\n                        retry count upon failure (defaults to 2, one retry).\n  --timeout TIMEOUT     timeout (seconds) to provide to the requests library\n                        (defaults to 5)\n```\n\nYou have a lot of flexibility to define patterns of urls or files to skip,\nalong with the number of retries or timeout (seconds). The most basic usage will\ncheck an entire directory. Let's clone and check the urlchecker action:\n\n```bash\n$ git clone https://github.com/urlstechie/urlchecker-action.git\n$ cd urchecker-action\n```\n\nand run the simplest command to check the present working directory (.).\n\n```bash\n$ urlchecker check .\n           original path: .\n              final path: /tmp/urlchecker-action\n               subfolder: None\n                  branch: master\n                 cleanup: False\n              file types: ['.md', '.py']\n                   files: []\n               print all: True\n           urls excluded: []\n   url patterns excluded: []\n  file patterns excluded: []\n              force pass: False\n             retry count: 2\n                    save: None\n                 timeout: 5\n\n /tmp/urlchecker-action/README.md \n --------------------------------\nhttps://github.com/urlstechie/urlchecker-action/blob/master/LICENSE\nhttps://github.com/r-hub/docs/blob/bc1eac71206f7cb96ca00148dcf3b46c6d25ada4/.github/workflows/pr.yml\nhttps://img.shields.io/static/v1?label=Marketplace&message=urlchecker-action&color=blue?style=flat&logo=github\nhttps://github.com/rseng/awesome-rseng\nhttps://github.com/rseng/awesome-rseng/blob/5f5cb78f8392cf10aec2f3952b305ae9611029c2/.github/workflows/urlchecker.yml\nhttps://github.com/HPC-buildtest/buildtest-framework/actions?query=workflow%3A%22Check+URLs%22\nhttps://www.codefactor.io/repository/github/urlstechie/urlchecker-action/badge\nhttps://github.com/berlin-hack-and-tell/berlinhackandtell.rocks\nhttps://github.com/urlstechie/urlchecker-action/issues\nhttps://github.com/USRSE/usrse.github.io\nhttps://github.com/berlin-hack-and-tell/berlinhackandtell.rocks/actions?query=workflow%3ACommands\nhttps://github.com/USRSE/usrse.github.io/blob/abcbed5f5703e0d46edb9e8850eea8bb623e3c1c/.github/workflows/urlchecker.yml\nhttps://github.com/urlstechie/urlchecker-action/releases\nhttps://img.shields.io/badge/license-MIT-brightgreen\nhttps://github.com/r-hub/docs/actions?query=workflow%3ACommands\nhttps://github.com/rseng/awesome-rseng/actions?query=workflow%3AURLChecker\nhttps://github.com/buildtesters/buildtest\nhttps://github.com/r-hub/docs\nhttps://www.codefactor.io/repository/github/urlstechie/urlchecker-action\nhttps://github.com/urlstechie/URLs-checker-test-repo\nhttps://github.com/marketplace/actions/urlchecker-action\nhttps://github.com/actions/checkout\nhttps://github.com/SuperKogito/URLs-checker/issues/1,https://github.com/SuperKogito/URLs-checker/issues/2\nhttps://github.com/SuperKogito/URLs-checker/issues/1,https://github.com/SuperKogito/URLs-checker/issues/2\nhttps://github.com/USRSE/usrse.github.io/actions?query=workflow%3A%22Check+URLs%22\nhttps://github.com/SuperKogito/Voice-based-gender-recognition/issues\nhttps://github.com/buildtesters/buildtest/blob/v0.9.1/.github/workflows/urlchecker.yml\nhttps://github.com/berlin-hack-and-tell/berlinhackandtell.rocks/blob/master/.github/workflows/urlchecker-pr-label.yml\n\n /tmp/urlchecker-action/examples/README.md \n -----------------------------------------\nhttps://github.com/urlstechie/urlchecker-action/releases\nhttps://github.com/urlstechie/urlchecker-action/issues\nhttps://help.github.com/en/actions/reference/events-that-trigger-workflows\n\n\nDone. The following urls did not pass:\nhttps://github.com/SuperKogito/URLs-checker/issues/1,https://github.com/SuperKogito/URLs-checker/issues/2\n```\n\nThe url that didn't pass above is an example parameter for the library! Let's add\na simple pattern to exclude it.\n\n```bash\n$ urlchecker check --exclude-pattern SuperKogito .\n           original path: .\n              final path: /tmp/urlchecker-action\n               subfolder: None\n                  branch: master\n                 cleanup: False\n              file types: ['.md', '.py']\n                   files: []\n               print all: True\n           urls excluded: []\n   url patterns excluded: ['SuperKogito']\n  file patterns excluded: []\n              force pass: False\n             retry count: 2\n                    save: None\n                 timeout: 5\n\n /tmp/urlchecker-action/README.md \n --------------------------------\nhttps://github.com/urlstechie/urlchecker-action/blob/master/LICENSE\nhttps://github.com/urlstechie/urlchecker-action/issues\nhttps://github.com/rseng/awesome-rseng/actions?query=workflow%3AURLChecker\nhttps://github.com/USRSE/usrse.github.io/actions?query=workflow%3A%22Check+URLs%22\nhttps://github.com/actions/checkout\nhttps://github.com/USRSE/usrse.github.io/blob/abcbed5f5703e0d46edb9e8850eea8bb623e3c1c/.github/workflows/urlchecker.yml\nhttps://github.com/r-hub/docs/blob/bc1eac71206f7cb96ca00148dcf3b46c6d25ada4/.github/workflows/pr.yml\nhttps://github.com/berlin-hack-and-tell/berlinhackandtell.rocks/blob/master/.github/workflows/urlchecker-pr-label.yml\nhttps://github.com/rseng/awesome-rseng\nhttps://www.codefactor.io/repository/github/urlstechie/urlchecker-action/badge\nhttps://github.com/urlstechie/URLs-checker-test-repo\nhttps://www.codefactor.io/repository/github/urlstechie/urlchecker-action\nhttps://github.com/r-hub/docs\nhttps://github.com/berlin-hack-and-tell/berlinhackandtell.rocks\nhttps://github.com/buildtesters/buildtest\nhttps://img.shields.io/badge/license-MIT-brightgreen\nhttps://github.com/urlstechie/urlchecker-action/releases\nhttps://github.com/marketplace/actions/urlchecker-action\nhttps://img.shields.io/static/v1?label=Marketplace&message=urlchecker-action&color=blue?style=flat&logo=github\nhttps://github.com/r-hub/docs/actions?query=workflow%3ACommands\nhttps://github.com/HPC-buildtest/buildtest-framework/actions?query=workflow%3A%22Check+URLs%22\nhttps://github.com/buildtesters/buildtest/blob/v0.9.1/.github/workflows/urlchecker.yml\nhttps://github.com/berlin-hack-and-tell/berlinhackandtell.rocks/actions?query=workflow%3ACommands\nhttps://github.com/USRSE/usrse.github.io\nhttps://github.com/rseng/awesome-rseng/blob/5f5cb78f8392cf10aec2f3952b305ae9611029c2/.github/workflows/urlchecker.yml\n\n /tmp/urlchecker-action/examples/README.md \n -----------------------------------------\nhttps://help.github.com/en/actions/reference/events-that-trigger-workflows\nhttps://github.com/urlstechie/urlchecker-action/issues\nhttps://github.com/urlstechie/urlchecker-action/releases\n\n\nDone. All URLS passed.\n```\n\nWe can also filter by file types. If we want to do this (for example, to only check different file\ntypes) we might do any of the following:\n\n```bash\n# Check only html files\nurlchecker check --file-types *.html .\n\n# Check hidden flies\nurlchecker check --file-types \".*\" .\n\n# Check hidden files and html files\nurlchecker check --file-types \".*,*.html\" .\n```\n\n**Note that while some patterns will work without quotes, it's recommended for most**\nto use them because if the shell expands any part of the pattern, it will not work as\nexpected. By default, the urlchecker checks python and markdown. If a multiprocessing workers has an error,\nyou can also add `--serial` to run in serial and test. The run will be slower, but it's useful for debugging.\n\n```bash\n$ urlchecker check . --files \"content/docs/hacking/contributing/documentation/index.md\" --serial\n```\n\n### Check GitHub Repository\n\nBut wouldn't it be easier to not have to clone the repository first?\nOf course! We can specify a GitHub url instead, and add `--cleanup`\nif we want to clean up the folder after.\n\n```bash\n$ urlchecker check https://github.com/SuperKogito/SuperKogito.github.io.git\n```\n\nIf you specify any arguments for a white list (or any kind of expected list) make\nsure that you provide a comma separated list *without any spaces*\n\n```bash\n$ urlchecker check --exclude-files=README.md,_config.yml\n```\n\n### Save Results\n\nIf you want to save your results to file, perhaps for some kind of record or\nother data analysis, you can provide the `--save` argument:\n\n```bash\n$ urlchecker check --save results.csv .\n```\n\nThe file that you save to will include a comma separated value tabular listing\nof the urls, and their result. The result options are \"passed\" and \"failed\"\nand the default header is `URL,RESULT`. All of these defaults are exposed\nif you want to change them (e.g., using a tab separator or a different header)\nif you call the function from within Python. Here is an example of the default file\nproduced, which should satisfy most use cases:\n\n```\nURL,RESULT\nhttps://github.com/SuperKogito,passed\nhttps://www.google.com/,passed\nhttps://github.com/SuperKogito/Voice-based-gender-recognition/issues,passed\nhttps://github.com/SuperKogito/Voice-based-gender-recognition,passed\nhttps://github.com/SuperKogito/spafe/issues/4,passed\nhttps://github.com/SuperKogito/Voice-based-gender-recognition/issues/2,passed\nhttps://github.com/SuperKogito/spafe/issues/5,passed\nhttps://github.com/SuperKogito/URLs-checker/blob/master/README.md,passed\nhttps://img.shields.io/,passed\nhttps://github.com/SuperKogito/spafe/,passed\nhttps://github.com/SuperKogito/spafe/issues/3,passed\nhttps://www.google.com/,passed\nhttps://github.com/SuperKogito,passed\nhttps://github.com/SuperKogito/spafe/issues/8,passed\nhttps://github.com/SuperKogito/spafe/issues/7,passed\nhttps://github.com/SuperKogito/Voice-based-gender-recognition/issues/1,passed\nhttps://github.com/SuperKogito/spafe/issues,passed\nhttps://github.com/SuperKogito/URLs-checker/issues,passed\nhttps://github.com/SuperKogito/spafe/issues/2,passed\nhttps://github.com/SuperKogito/URLs-checker,passed\nhttps://github.com/SuperKogito/spafe/issues/6,passed\nhttps://github.com/SuperKogito/spafe/issues/1,passed\nhttps://github.com/SuperKogito/URLs-checker/README.md,failed\nhttps://github.com/SuperKogito/URLs-checker/issues/3,failed\nhttps://none.html,failed\nhttps://github.com/SuperKogito/URLs-checker/issues/2,failed\nhttps://github.com/SuperKogito/URLs-checker/README.md,failed\nhttps://github.com/SuperKogito/URLs-checker/issues/1,failed\nhttps://github.com/SuperKogito/URLs-checker/issues/4,failed\n```\n\n\n### Usage from Python\n\n#### Checking a Path\n\nIf you want to check a list of urls outside of the provided client, this is fairly easy to do!\nLet's say we have a path, our present working directory, and we want to check\n.py and .md files (the default)\n\n```python\nfrom urlchecker.core.check import UrlChecker\nimport os\n\npath = os.getcwd()\nchecker = UrlChecker(path)    \n# UrlChecker:/home/vanessa/Desktop/Code/urlstechie/urlchecker-python\n```\n\nAnd of course you can provide more substantial arguments to derive the original\nfile list:\n\n```python\nchecker = UrlChecker(\n    path=path,\n    file_types=[\".md\", \".py\", \".rst\"],\n    include_patterns=[],\n    exclude_files=[\"README.md\", \"LICENSE\"],\n    print_all=True,\n)\n```\nI can then run the checker like this:\n\n```python\nchecker.run()\n```\n\nOr with more customization of excluded urls:\n\n```python\nchecker.run(\n    exclude_urls=exclude_urls,\n    exclude_patterns=exclude_patterns,\n    retry_count=3,\n    timeout=5,\n)\n```\n\nYou'll get the results object returned, which is also available at `checker.results`,\na simple dictionary with \"passed\" and \"failed\" keys to show passes and fails across\nall files.\n\n```python\n{'passed': ['https://github.com/SuperKogito/spafe/issues/4',\n  'http://shachi.org/resources',\n  'https://superkogito.github.io/blog/SpectralLeakageWindowing.html',\n  'https://superkogito.github.io/figures/fig4.html',\n  'https://github.com/urlstechie/urlchecker-test-repo',\n  'https://www.google.com/',\n  ...\n  'https://github.com/SuperKogito',\n  'https://img.shields.io/',\n  'https://www.google.com/',\n  'https://docs.python.org/2'],\n 'failed': ['https://github.com/urlstechie/urlschecker-python/tree/master',\n  'https://github.com/SuperKogito/Voice-based-gender-recognition,passed',\n  'https://github.com/SuperKogito/URLs-checker/README.md',\n   ...\n  'https://superkogito.github.io/tables',\n  'https://github.com/SuperKogito/URLs-checker/issues/2',\n  'https://github.com/SuperKogito/URLs-checker/README.md',\n  'https://github.com/SuperKogito/URLs-checker/issues/4',\n  'https://github.com/SuperKogito/URLs-checker/issues/3',\n  'https://github.com/SuperKogito/URLs-checker/issues/1',\n  'https://none.html']}\n```\n\nYou can look at `checker.checks`, which is a dictionary of result objects,\norganized by the filename:\n\n```python\nfor file_name, result in checker.checks.items(): \n    print() \n    print(result) \n    print(\"Total Results: %s \" % result.count) \n    print(\"Total Failed: %s\" % len(result.failed)) \n    print(\"Total Passed: %s\" % len(result.passed)) \n\n...\n\nUrlCheck:/home/vanessa/Desktop/Code/urlstechie/urlchecker-python/tests/test_files/sample_test_file.md\nTotal Results: 26 \nTotal Failed: 6\nTotal Passed: 20\n\nUrlCheck:/home/vanessa/Desktop/Code/urlstechie/urlchecker-python/.pytest_cache/README.md\nTotal Results: 1 \nTotal Failed: 0\nTotal Passed: 1\n\nUrlCheck:/home/vanessa/Desktop/Code/urlstechie/urlchecker-python/.eggs/pytest_runner-5.2-py3.7.egg/ptr.py\nTotal Results: 0 \nTotal Failed: 0\nTotal Passed: 0\n\nUrlCheck:/home/vanessa/Desktop/Code/urlstechie/urlchecker-python/docs/source/conf.py\nTotal Results: 3 \nTotal Failed: 0\nTotal Passed: 3\n```\n\nFor any result object, you can print the list of passed, falied, white listed,\nor all the urls.\n\n```python\nresult.all                                                                                                                                                                       \n['https://www.sphinx-doc.org/en/master/usage/configuration.html',\n 'https://docs.python.org/3',\n 'https://docs.python.org/2']\n\nresult.failed                                                                                                                                                                    \n[]\n\nresult.exclude\n[]\n\nresult.passed                                                                                                                                                                    \n['https://www.sphinx-doc.org/en/master/usage/configuration.html',\n 'https://docs.python.org/3',\n 'https://docs.python.org/2']\n\nresult.count\n3\n```\n\n\n#### Checking a List of URls\n\nIf you start with a list of urls you want to check, you can do that too!\n\n```python\nfrom urlchecker.core.urlproc import UrlCheckResult\n\nurls = ['https://www.github.com', \"https://github.com\", \"https://banana-pudding-doesnt-exist.com\"]\n\n# Instantiate an empty checker to extract urls\nchecker = UrlCheckResult()\nFile name None is undefined or does not exist, skipping extraction.\n```\n\nIf you provied a file name, the urls would be extracted for you.\n\n```python\nchecker = UrlCheckResult(\n    file_name=file_name,\n    exclude_patterns=exclude_patterns,\n    exclude_urls=exclude_urls,\n    print_all=self.print_all,\n)\n```\n\nor you can provide all the parameters without the filename:\n\n```python\nchecker = UrlCheckResult(\n    exclude_patterns=exclude_patterns,\n    exclude_urls=exclude_urls,\n    print_all=self.print_all,\n)\n```\n\nIf you don't provide the file_name to check urls, you can give the urls\nyou defined previously directly to the `check_urls` function:\n\n\n```python\nchecker.check_urls(urls)\n\nhttps://www.github.com\nhttps://github.com\nHTTPSConnectionPool(host='banana-pudding-doesnt-exist.com', port=443): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x7f989abdfa10>: Failed to establish a new connection: [Errno -2] Name or service not known'))\nhttps://banana-pudding-doesnt-exist.com\n```\n\nAnd of course you can specify a timeout and retry:\n\n```python\nchecker.check_urls(urls, retry_count=retry_count, timeout=timeout)\n```\n\nAfter you run the checker you can get all the urls, the passed,\nand failed sets:\n\n```python\nchecker.failed                                                                                                                                                                   \n['https://banana-pudding-doesnt-exist.com']\n\nchecker.passed                                                                                                                                                                   \n['https://www.github.com', 'https://github.com']\n\nchecker.all                                                                                                                                                                      \n['https://www.github.com',\n 'https://github.com',\n 'https://banana-pudding-doesnt-exist.com']\n\nchecker.all                                                                                                                                                                      \n['https://www.github.com',\n 'https://github.com',\n 'https://banana-pudding-doesnt-exist.com']\n\nchecker.count                                                                                                                                                                    \n3\n```\n\nIf you have any questions, please don't hesitate to [open an issue](https://github.com/urlstechie/urlchecker-python).\n\n### Docker\n\nA Docker container is provided if you want to build a base container with urlchecker,\nmeaning that you don't need to install it on your host. You can build the container as\nfollows:\n\n```bash\ndocker build -t urlchecker .\n```\n\nAnd then the entrypoint will expose the urlchecker.\n\n```bash\ndocker run -it urlschecker\n```\n\n## Development\n\n### Organization\n\nThe module is organized as follows:\n\n```\n├── client              # command line client\n├── main                # functions for supported integrations (e.g., GitHub)\n├── core                # core file and url processing tools\n└── version.py          # package and versioning\n```\n\nIn the \"client\" folder, for example, the commands that are exposed for the client\n(e.g., check) would named accordingly, e.g., `client/check.py`.\nFunctions for Github are be provided in `main/github.py`. This organization should\nbe fairly straight forward to always find what you are looking for.\n\n### Drivers\n\nTo test more difficult urls, we use a web driver, and you can choose between:\n\n - [Chrome Driver](https://chromedriver.chromium.org/downloads)\n - [Gecko Driver](https://github.com/mozilla/geckodriver/releases) (firefox)\n \nboth to be used with selenium. This driver is optional, but will come by default with our action. To install\nit, you can download the driver at either of the links above and ensure you install selenium:\n\n```bash\n$ pip install urlchecker[selenium]\n```\nand either:\n\n1. Add it directly to your path\n2. Export the directory where it lives as `URLCHECKER_DRIVERS_PATH`\n3. Put it in the root of the urlchecker clone (it will be looked for here)\n\n\n## Support\n\nIf you need help, or want to suggest a project for the organization,\nplease [open an issue](https://github.com/urlstechie/urlchecker-python)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.github.com/urlstechie/urlchecker-python",
    "keywords": "urls,static checking,checking,validation",
    "license": "LICENSE",
    "maintainer": "Ayoub Malek, Vanessa Sochat",
    "maintainer_email": "superkogito@gmail.com, vsochat@stanford.edu",
    "name": "urlchecker",
    "package_url": "https://pypi.org/project/urlchecker/",
    "platform": null,
    "project_url": "https://pypi.org/project/urlchecker/",
    "project_urls": {
      "Homepage": "http://www.github.com/urlstechie/urlchecker-python"
    },
    "release_url": "https://pypi.org/project/urlchecker/0.0.34/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "tool to collect and validate urls over static files (code and documentation)",
    "version": "0.0.34",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15774257,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe901198a63af7c82a4ee22c930384f667d0d7400de7921333213dae8809da38",
          "md5": "c17542e4259ac4efb1799ad0ffe7cdf0",
          "sha256": "92e3c9c563d069994627300a9bc92aa8d667e12ba8b708a6cf77414237ea813b"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.0-py3.7.egg",
        "has_sig": false,
        "md5_digest": "c17542e4259ac4efb1799ad0ffe7cdf0",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": null,
        "size": 39957,
        "upload_time": "2020-03-20T22:15:31",
        "upload_time_iso_8601": "2020-03-20T22:15:31.547847Z",
        "url": "https://files.pythonhosted.org/packages/fe/90/1198a63af7c82a4ee22c930384f667d0d7400de7921333213dae8809da38/urlchecker-0.0.0-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f8c7fce6c01c5dc2c00cfbd05e1be17fefbca3c345190cf1cea057847dcac1e",
          "md5": "2417b2d11a7cb96e28318351ff458ccf",
          "sha256": "b9da5d9cbfe472956080833f47d2aea90eb7859cd646a08076e26f3a43c88532"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2417b2d11a7cb96e28318351ff458ccf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17551,
        "upload_time": "2020-03-20T22:15:33",
        "upload_time_iso_8601": "2020-03-20T22:15:33.561061Z",
        "url": "https://files.pythonhosted.org/packages/5f/8c/7fce6c01c5dc2c00cfbd05e1be17fefbca3c345190cf1cea057847dcac1e/urlchecker-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0cc2bd07ea5c468a82ea69e072f853e2b03984e7ab8de5e2d1b52c50cc68ed6b",
          "md5": "f7454966d909d9e7064e11d386a15296",
          "sha256": "fdee31be4766a803ce60e464fc08b57431f8fd98c66483c4e34427354123973d"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f7454966d909d9e7064e11d386a15296",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17488,
        "upload_time": "2020-03-20T23:34:01",
        "upload_time_iso_8601": "2020-03-20T23:34:01.649067Z",
        "url": "https://files.pythonhosted.org/packages/0c/c2/bd07ea5c468a82ea69e072f853e2b03984e7ab8de5e2d1b52c50cc68ed6b/urlchecker-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38138199ad92af76684b737dbcc784e9321a26a5102644a4cb887f7f05977071",
          "md5": "cdac7d5e77be626857fe8341ba8c7ac8",
          "sha256": "e5774e9cd41c4acc7275f222651551d0b15e2da3165d270792b119a1caefac88"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "cdac7d5e77be626857fe8341ba8c7ac8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17636,
        "upload_time": "2020-03-21T21:43:13",
        "upload_time_iso_8601": "2020-03-21T21:43:13.837515Z",
        "url": "https://files.pythonhosted.org/packages/38/13/8199ad92af76684b737dbcc784e9321a26a5102644a4cb887f7f05977071/urlchecker-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a1b746ee917f7cfc628ac746998621956c95e243ae14e2ad4ba190eae93b326",
          "md5": "31e4b3546c4260981b4733824a39fda2",
          "sha256": "6e8731f30916852ecf7fefee1c40048239cefb18b24d83bf1204314e00ae0885"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "31e4b3546c4260981b4733824a39fda2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20258,
        "upload_time": "2020-03-25T22:23:06",
        "upload_time_iso_8601": "2020-03-25T22:23:06.529960Z",
        "url": "https://files.pythonhosted.org/packages/9a/1b/746ee917f7cfc628ac746998621956c95e243ae14e2ad4ba190eae93b326/urlchecker-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bbbeae94b789b884ff6f35885c3a20985c102534afb8a7939ec79b8cdaf528f",
          "md5": "567995464ac7b36baad93391e8d6bf4a",
          "sha256": "90c8f50c8032615619350ea83930adf57ee5b07fc0101ae5865aae4031077364"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "567995464ac7b36baad93391e8d6bf4a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23605,
        "upload_time": "2020-04-05T12:59:05",
        "upload_time_iso_8601": "2020-04-05T12:59:05.798934Z",
        "url": "https://files.pythonhosted.org/packages/2b/bb/eae94b789b884ff6f35885c3a20985c102534afb8a7939ec79b8cdaf528f/urlchecker-0.0.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bed946b6a444d3a6b5af45c37ff32a4d8362947cb55837e008de663ddc938c5",
          "md5": "d464c8f84aacfdf2aae56bfc1bcf75e4",
          "sha256": "9a887fcc0c999bc1a4157fcb140984f46c3fad597a027aaab607365b4106f84c"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "d464c8f84aacfdf2aae56bfc1bcf75e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20255,
        "upload_time": "2020-03-26T15:41:35",
        "upload_time_iso_8601": "2020-03-26T15:41:35.209726Z",
        "url": "https://files.pythonhosted.org/packages/7b/ed/946b6a444d3a6b5af45c37ff32a4d8362947cb55837e008de663ddc938c5/urlchecker-0.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1da9f069bc957e828fb010466012fcbfbd9a82726766f6aec64d5fd3bdfc4206",
          "md5": "07875f850ea28df8bc8b312d1b090f5f",
          "sha256": "e284bd4f9ef4f3390be804cd52f62f68f50fa9fa0e5e89613ede11236e56ae2a"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "07875f850ea28df8bc8b312d1b090f5f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20217,
        "upload_time": "2020-04-05T17:02:02",
        "upload_time_iso_8601": "2020-04-05T17:02:02.057062Z",
        "url": "https://files.pythonhosted.org/packages/1d/a9/f069bc957e828fb010466012fcbfbd9a82726766f6aec64d5fd3bdfc4206/urlchecker-0.0.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b21f88970c242b157a0e0c118cf35623c15acdace797d7ab758c5ada9495bcde",
          "md5": "765f822683740ebb6876aea0176a2b53",
          "sha256": "8bac09f44fdd645c1447e8674e226ff9bd08917264bccc4a921a0c8394deeec4"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.16.tar.gz",
        "has_sig": false,
        "md5_digest": "765f822683740ebb6876aea0176a2b53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20519,
        "upload_time": "2020-04-10T20:14:39",
        "upload_time_iso_8601": "2020-04-10T20:14:39.392871Z",
        "url": "https://files.pythonhosted.org/packages/b2/1f/88970c242b157a0e0c118cf35623c15acdace797d7ab758c5ada9495bcde/urlchecker-0.0.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a69db7db3549c0ce9e9965af94c06a2236ba017920f3ead059311c3a94931aa0",
          "md5": "48ddabdfb9c6954e3f1ff84b2c0d1588",
          "sha256": "b3136b186a6ef3aca34808f7e1786e14ec8aecf4aeb60e2639dca89a2cdde387"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.17.tar.gz",
        "has_sig": false,
        "md5_digest": "48ddabdfb9c6954e3f1ff84b2c0d1588",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20530,
        "upload_time": "2020-04-10T21:04:24",
        "upload_time_iso_8601": "2020-04-10T21:04:24.126071Z",
        "url": "https://files.pythonhosted.org/packages/a6/9d/b7db3549c0ce9e9965af94c06a2236ba017920f3ead059311c3a94931aa0/urlchecker-0.0.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fedd13a9fbd7d4924d242f715f13254141403002fbfd2459e234916a43450a8",
          "md5": "9707f11bb2516a4c5b78d928ea64da06",
          "sha256": "0ba47ec2214b85e942fe821cc315f588cbc9cd21b4d01b99ef9c66b3d07b9044"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.18.tar.gz",
        "has_sig": false,
        "md5_digest": "9707f11bb2516a4c5b78d928ea64da06",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24729,
        "upload_time": "2020-04-12T20:09:09",
        "upload_time_iso_8601": "2020-04-12T20:09:09.977524Z",
        "url": "https://files.pythonhosted.org/packages/8f/ed/d13a9fbd7d4924d242f715f13254141403002fbfd2459e234916a43450a8/urlchecker-0.0.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.19": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f58d4dc5cb7ac89a361c852553c82c4a07abc41732369a908d34f3f6912f4ab",
          "md5": "0037179b2eb5f4962627d1084741029d",
          "sha256": "69bfad916667df10c4980f8475c95cbfd41982e0d7216594843475ea4ed1e38d"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.19.tar.gz",
        "has_sig": false,
        "md5_digest": "0037179b2eb5f4962627d1084741029d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25017,
        "upload_time": "2020-04-17T15:57:33",
        "upload_time_iso_8601": "2020-04-17T15:57:33.233774Z",
        "url": "https://files.pythonhosted.org/packages/2f/58/d4dc5cb7ac89a361c852553c82c4a07abc41732369a908d34f3f6912f4ab/urlchecker-0.0.19.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.20": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5886f4262e7dc0423edd3c86eabee3d1d7314a49ff0b2bf3aab8fd20565ad4cb",
          "md5": "db1876b96227cf6c33a9e2d531c1cee8",
          "sha256": "6d8adbc335d6043bcfcb60b5cd8013730185fbc3aecdefffab994ba1ae61536a"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.20.tar.gz",
        "has_sig": false,
        "md5_digest": "db1876b96227cf6c33a9e2d531c1cee8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25226,
        "upload_time": "2020-04-21T21:28:49",
        "upload_time_iso_8601": "2020-04-21T21:28:49.014325Z",
        "url": "https://files.pythonhosted.org/packages/58/86/f4262e7dc0423edd3c86eabee3d1d7314a49ff0b2bf3aab8fd20565ad4cb/urlchecker-0.0.20.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.22": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9213a277346bd407e9465cd6d5f0da365b02fe0634f1f1bda6c848e6c7b19ed6",
          "md5": "d35d363e978d3b37fdb683507b9e1f0d",
          "sha256": "7f49a79533c2e1d759f27e0f0d70828a4ad6ad0d358ed8c5b3ce9a0e70356bd6"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.22.tar.gz",
        "has_sig": false,
        "md5_digest": "d35d363e978d3b37fdb683507b9e1f0d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26895,
        "upload_time": "2021-02-07T23:19:17",
        "upload_time_iso_8601": "2021-02-07T23:19:17.838174Z",
        "url": "https://files.pythonhosted.org/packages/92/13/a277346bd407e9465cd6d5f0da365b02fe0634f1f1bda6c848e6c7b19ed6/urlchecker-0.0.22.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.24": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06a97942a57a925dbe99c21df4657a913b4d3fb01e0963fdf52276df29d87b35",
          "md5": "99eee824f511b9fdd61cb64cd174a38d",
          "sha256": "6fc1fee7c85308fb66a421d211e529be18255df781893395a0c8b6e046aef288"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.24.tar.gz",
        "has_sig": false,
        "md5_digest": "99eee824f511b9fdd61cb64cd174a38d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26867,
        "upload_time": "2021-12-08T18:06:05",
        "upload_time_iso_8601": "2021-12-08T18:06:05.471307Z",
        "url": "https://files.pythonhosted.org/packages/06/a9/7942a57a925dbe99c21df4657a913b4d3fb01e0963fdf52276df29d87b35/urlchecker-0.0.24.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.25": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f13446601c53c323271c72d3b0ac2b01e8d922d4673e93b894bc0d57f081d46f",
          "md5": "fb151f4953c80fe17355e6932cf424d1",
          "sha256": "9e3306472987c40296214a67921d47a5ebc5d4e91c149c7aca1b3e95438fed7d"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.25.tar.gz",
        "has_sig": false,
        "md5_digest": "fb151f4953c80fe17355e6932cf424d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26913,
        "upload_time": "2021-12-08T19:50:04",
        "upload_time_iso_8601": "2021-12-08T19:50:04.610668Z",
        "url": "https://files.pythonhosted.org/packages/f1/34/46601c53c323271c72d3b0ac2b01e8d922d4673e93b894bc0d57f081d46f/urlchecker-0.0.25.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.26": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49a517a66836e8b4c21d1f6505a5f00595b09c94f06bc3b4b57c5f5bb0d2e2b0",
          "md5": "a1462534dc7d5b9c3510d9565ccb3692",
          "sha256": "29fdf8e987c4dd0e7df6ca6bea73aa1c0d30550bda32ab014de962827ee1fef8"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.26.tar.gz",
        "has_sig": false,
        "md5_digest": "a1462534dc7d5b9c3510d9565ccb3692",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28331,
        "upload_time": "2022-03-27T21:38:30",
        "upload_time_iso_8601": "2022-03-27T21:38:30.800024Z",
        "url": "https://files.pythonhosted.org/packages/49/a5/17a66836e8b4c21d1f6505a5f00595b09c94f06bc3b4b57c5f5bb0d2e2b0/urlchecker-0.0.26.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.27": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bb079e5bc5a873e6bc616215cd128a505c6d315e754ae6f40e711e7384f6b71",
          "md5": "d5ed2c74b1ba37b4c1fcad61b38cf1af",
          "sha256": "395089c30851d0c9f3b875ad4d9939781fed8809f8b1c03e8e9b1a676064758c"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.27.tar.gz",
        "has_sig": false,
        "md5_digest": "d5ed2c74b1ba37b4c1fcad61b38cf1af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28392,
        "upload_time": "2022-04-01T03:31:30",
        "upload_time_iso_8601": "2022-04-01T03:31:30.306207Z",
        "url": "https://files.pythonhosted.org/packages/2b/b0/79e5bc5a873e6bc616215cd128a505c6d315e754ae6f40e711e7384f6b71/urlchecker-0.0.27.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.28": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd5920a895b0be36fe90b89255ae6cc23bb18b94c001760fadff5a32795ddd60",
          "md5": "3170af3b9f63b2c1717b11641e3ac481",
          "sha256": "cef490371cdb30bf4555c98ddf24dfe58c8f04f156c0e998942abc9ffe7c41c4"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.28.tar.gz",
        "has_sig": false,
        "md5_digest": "3170af3b9f63b2c1717b11641e3ac481",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28420,
        "upload_time": "2022-04-02T02:50:01",
        "upload_time_iso_8601": "2022-04-02T02:50:01.134323Z",
        "url": "https://files.pythonhosted.org/packages/dd/59/20a895b0be36fe90b89255ae6cc23bb18b94c001760fadff5a32795ddd60/urlchecker-0.0.28.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.30": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5aa5532e965a1b54165ac94dbd5c3021d0cc91b4813d02e5303b8db116c0700e",
          "md5": "ed922bd75ea47e6b0c53f857b2337989",
          "sha256": "cfa8881ab0df4eebda19b777e34eb92a1c66988419cfd12e1951890ff56950a2"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.30.tar.gz",
        "has_sig": false,
        "md5_digest": "ed922bd75ea47e6b0c53f857b2337989",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27684,
        "upload_time": "2022-07-23T05:19:23",
        "upload_time_iso_8601": "2022-07-23T05:19:23.472679Z",
        "url": "https://files.pythonhosted.org/packages/5a/a5/532e965a1b54165ac94dbd5c3021d0cc91b4813d02e5303b8db116c0700e/urlchecker-0.0.30.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.31": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd56536e0cd7e18f77c63e2e192ad4baf1cf833af0edc06d31634728cb6cb330",
          "md5": "feb8f1b1f9677f773f7b95d7976cb48c",
          "sha256": "15b8f902a5f01f76252fc6a01335ed915548e65fc6ffb2f966b4554eda4f72c8"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.31.tar.gz",
        "has_sig": false,
        "md5_digest": "feb8f1b1f9677f773f7b95d7976cb48c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30129,
        "upload_time": "2022-07-24T23:44:02",
        "upload_time_iso_8601": "2022-07-24T23:44:02.436737Z",
        "url": "https://files.pythonhosted.org/packages/cd/56/536e0cd7e18f77c63e2e192ad4baf1cf833af0edc06d31634728cb6cb330/urlchecker-0.0.31.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.32": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb77311e54127ac355fdea29088e824c819932c3f92b4cdf056d01b914642a4e",
          "md5": "ddc0f53b5e098f36f76029c2d3f6a3b2",
          "sha256": "a0a5f661bc0f8e62b65161b573520a09db55c8342f0421e8397dddfd32612101"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.32.tar.gz",
        "has_sig": false,
        "md5_digest": "ddc0f53b5e098f36f76029c2d3f6a3b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30491,
        "upload_time": "2022-08-04T12:22:13",
        "upload_time_iso_8601": "2022-08-04T12:22:13.654370Z",
        "url": "https://files.pythonhosted.org/packages/bb/77/311e54127ac355fdea29088e824c819932c3f92b4cdf056d01b914642a4e/urlchecker-0.0.32.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.33": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4560c18af5420a6022359b6935cafe43b5780a7f1f94a4b9a7c0cf4e5889d2f",
          "md5": "bb8433daad5939309fca5c62bee85e27",
          "sha256": "07ac550e532a7ed93b1742a39c8ac7e33089a4a3abd2dc521db3da4b8964a9d4"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.33.tar.gz",
        "has_sig": false,
        "md5_digest": "bb8433daad5939309fca5c62bee85e27",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30577,
        "upload_time": "2022-08-22T14:47:10",
        "upload_time_iso_8601": "2022-08-22T14:47:10.400828Z",
        "url": "https://files.pythonhosted.org/packages/e4/56/0c18af5420a6022359b6935cafe43b5780a7f1f94a4b9a7c0cf4e5889d2f/urlchecker-0.0.33.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.34": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8109c747e7b78828890ab8eb6cc44e8efb9136d91beba2ebffe02ae731921cc7",
          "md5": "ffc3980b49cd928a6ca50de3d68e31b2",
          "sha256": "55dbf9c494c3bf85b036052a4e9f5dfe11627cda09861fb501803102c22d9098"
        },
        "downloads": -1,
        "filename": "urlchecker-0.0.34.tar.gz",
        "has_sig": false,
        "md5_digest": "ffc3980b49cd928a6ca50de3d68e31b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30565,
        "upload_time": "2022-11-15T12:22:09",
        "upload_time_iso_8601": "2022-11-15T12:22:09.308291Z",
        "url": "https://files.pythonhosted.org/packages/81/09/c747e7b78828890ab8eb6cc44e8efb9136d91beba2ebffe02ae731921cc7/urlchecker-0.0.34.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8109c747e7b78828890ab8eb6cc44e8efb9136d91beba2ebffe02ae731921cc7",
        "md5": "ffc3980b49cd928a6ca50de3d68e31b2",
        "sha256": "55dbf9c494c3bf85b036052a4e9f5dfe11627cda09861fb501803102c22d9098"
      },
      "downloads": -1,
      "filename": "urlchecker-0.0.34.tar.gz",
      "has_sig": false,
      "md5_digest": "ffc3980b49cd928a6ca50de3d68e31b2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 30565,
      "upload_time": "2022-11-15T12:22:09",
      "upload_time_iso_8601": "2022-11-15T12:22:09.308291Z",
      "url": "https://files.pythonhosted.org/packages/81/09/c747e7b78828890ab8eb6cc44e8efb9136d91beba2ebffe02ae731921cc7/urlchecker-0.0.34.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}