{
  "info": {
    "author": "Maxime Perrotin",
    "author_email": "maxime.perrotin@esa.int",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "![OpenGEODE Logo](icons/opengeode4.png)\n\nOpenGEODE\n=========\n\nOpenGEODE is an open-source SDL editor that is developed for\nthe purpose of providing an easy to use and free state machine editor and\nAda code generator to the TASTE toolchain from the European Space Agency,\nrunning in combination with ESA's \"Space Certifiable\" ASN.1 compiler.\n\nSDL is the Specification and Description Language (Z100 standard from ITU-T).\n\nThis is NOT related to the graphical Simple DirectMedia Layer libraries!\n\nVisit http://sdl-forum.org for more information about SDL.\n\n![OpenGEODE Screenshot](icons/opengeode-screenshot.png)\n\nFeatures\n--------\n\n- Graphical editor of SDL processes and procedures.\n- Support for state composition and state aggregation (parallel/nested states)\n- Works on pure PR+CIF files (textual SDL notation)\n- Supports ASN.1 data types using ESA Space Certified compiler (www.github.com/ttsiodras/asn1scc)\n- Generates Ada code\n- Automatic conversion to Statechart diagrams\n- Save the complete or parts of the model to PNG/SVG/PDF files\n- Hyperlinks (link a symbol content to any external document or web page)\n- Context-dependent text auto-completion\n- Syntax highlighting\n- Undo/Redo, Copy-Paste\n- (Limited) VIM mode - You can use :wq or :%s,search,replace,g, and /search pattern\n- Python API to parse and render SDL from other Python modules\n- Simulator (prototype)\n\nMain limitations\n-----------\n\n- Supports only one process at a time (use [TASTE](https://taste.tools) to connect processes to form a complete system)\n- Minimal support of legacy SDL datatypes (newtypes/synonyms..): use ASN.1 instead\n\nInstallation\n============\n\nOpenGEODE is made primarily for Linux.\n\nIt is part of the [TASTE project](https://taste.tools)\n\nIt is installed with all dependencies in the TASTE virtual machine that you can download from [this link](https://taste.tools/#install). Manual installation is possible in a native Linux environment.\nDebian 10 (buster) is the baseline. Recent versions of Ubuntu (20.x) should work as well.\n\nUsing TASTE\n-----------\n\n__Important: OpenGEODE is already installed in the TASTE Virtual Machine, and fully integrated with the toolset, however, the current TASTE VM is a bit old - it is based on Debian 9 which does not have important dependencies to support the latest version of OpenGEODE. It is missing Python 3.7+ and PySide2. An upgrade is in the works, but it's not ready yet. If you are familiar enough with Linux, you can manually upgrade by completing the following steps.__\n\n_Install the [TASTE VM](https://taste.tools/#install). Once logged in, enter a new shell and:_\n```\n# Switch to root\nsudo su\n\n# Make sure VM image is up to date\napt-get update\napt-get upgrade\napt-get dist-upgrade\n\n# Point APT to Buster to prepare for upgrade\nsed -i 's/stretch/buster/g' /etc/apt/sources.list\n\n# Upgrade packages to Buster; when prompted allow services to be restarted automatically\napt-get upgrade\n\n# Upgrade distribution to Buster\napt-get dist-upgrade\n\n# Remove packages no longer needed\napt-get autoremove\n\n# Return to taste user; exit root\nexit\n\n# Navigate to TASTE source; upgrade\ncd ~/tool-src\ngit pull\ngit checkout feature_buster\n./Update-TASTE.sh\n```\n\nAfter this upgrade, you can work with the latest version of the tools, in particular the new Kazoo build system and Opengeode 3.xx (which you can update at any time). The Quick Reference Card has not been updated to reflect this yet.\n\nThe main differences to create/edit a project is that you must just run `taste<` (and not `taste-create-project/taste-edit-project` anymore). To build, run `make`.\n\nYou can check an example of a system using Opengeode if you go in `~/tool-src/kazoo/tests/Demo_ABB_Opengeode` and run `make` to build it. Then `taste` to edit.\n\nIn the interface view, select the SDL language for the implementation of the blocks you want to model using OpenGEODE.\n\nThen when you right-click on the SDL block you can select the option \"Open SDL Editor\".\n\nThe code is automatically generated when you exit the tool.\n\nManual\n------\n\nThe following commands should automate the installation (with exception of ASN1SCC - see below):\n\n```\n$ git clone https://github.com/esa/opengeode\n$ cd opengeode\n$ make full-install   # it will prompt for sudo password to call apt\n```\n\nThe installation will be done in the `~/.local` folder by the Python3 pip tool. Make sure you add this to your .bashrc (or equivalent):\n\n```\nexport PATH=~/.local/bin:$PATH\n```\n\nOpenGEODE uses the ASN1 [ASN1SCC](https://github.com/ttsiodras/asn1scc) for the datatypes. You must install it manually:\n\nGet the latest binary release from [here](https://github.com/ttsiodras/asn1scc/releases)\n\nThen run (possibly as root):\n\n```bash\n$ cd /opt\n$ tar xvf asn1scc-bin-4.xx.tar.bz2    # Use the file name version you got\n$ echo 'export PATH=$PATH:/opt/asn1scc' >> ~/.bashrc\n```\n\nOpen a new terminal and check that it works:\n\n```bash\n$ mono /opt/asn1scc/asn1.exe\n```\n\nOnce you have the dependencies installed you can update the tool by running the following commands:\n\n```\n$ git pull\n$ make install    # alternatively:  pip3 install --user --upgrade . \n```\n\nOpenGEODE Website\n=================\n\nA [web page](http://opengeode.net/) has been created with more information about\nOpenGEODE.\n\nThe [source](https://github.com/esa/opengeode/blob/master/wiki/opengeode.mediawiki)\nfor the page can be found in the [wiki](https://github.com/esa/opengeode/tree/master/wiki)\nfolder of this repository. Any changes to the wiki source will be subsequently\nmerged into the wiki by the wiki maintainers.\n\nInformation and contact\n=======================\n\nFor additional information please contact:\nmaxime (dot) perrotin (at) esa (dot) int\n\nThe LLVM backend was designed and implemented by Diego Barbera during the ESA\nSummer of Code 2014. This component is not maintained.\nSome parts implemented by Laurent Meyer (native SDL type support in the parser)\n\nThe ASN.1 compiler (ASN1SCC) that OpenGEODE is based on was developed by George Mamais and Thanassis Tsiodras for the European Space Agency.\n\nLicence\n=======\n\nLicense is LGPL (see file [LICENSE](https://github.com/esa/opengeode/blob/master/LICENSE))\nThere is no runtime, and the generated code is not subject to any license.\n\nThe fonts are the fonts from Ubuntu, check licence in file [FONT-LICENSE.TXT](https://github.com/esa/opengeode/blob/master/FONT-LICENCE.txt)\nThe background pattern was downloaded from www.subtlepatterns.com\n\nChangelog\n=========\n**3.3.0 (08/2020)**\n- Save the state as an ASN.1 model instead of a native Ada type\n- Ada backend basic support for \"decision any\"\n\n**3.2.1 (07/2020)**\n- Fix issue with the \"present\" operator\n- Move the context declaration to the .ads\n- Always expose the Get_State function (returns char * to C)\n\n**3.2.0 (07/2020)**\n- Add basic support for state type/instance\n\n**3.1.2 (07/2020)**\n- Reinforce syntax error checking and reporting\n\n**3.1.1 (07/2020)**\n- Reinforce syntax error checking and reporting\n- Don't allow user escape a symbol syntax error: refocus text until fixed\n\n**3.1.0 (06/2020)**\n- Add support for mkstring operator to transform an element into an array\n  mkstring (a, b, c) is in principle equivalent to ASN.1 Value Notation {a, b, c}\n  however ASN.1 value notation can't be used for a single indexed element : { foo(1) }\n  as this is an ambiguous syntax (it can be mixed with a record field, with value 1).\n  mkstring is the actuall Z100 (SDL standard) syntax to be used\n\n**3.0.9 (06/2020)**\n- Minor fixes in C backend related to case sensitivity\n\n**3.0.8 (06/2020)**\n- Support ASN.1 integer constants with no range (plain x INTEGER ::= 5)\n- Check that procedures with a return type are called only from TASKs\n\n**3.0.7 (06/2020)**\n- Fix update of data dictionary window\n- Fix unconstained constants support\n\n**3.0.6 (06/2020)**\n- Fix CONNECT symbol\n\n**3.0.5 (06/2020)**\n- Add support to standard SDL syntax *x := CALL procedure* in tasks\n\n**3.0.4 (06/2020)**\n- Fix use of ASN.1 constants in decision branches\n\n**3.0.3 (05/2020)**\n- Replace the unicode separator when flattening the model for code generation\n- Fix calls to the exit procedure in nested states\n\n**3.0.2 (05/2020)**\n- Fix API change in Pyside2\n\n**3.0.1 (05/2020)**\n- Improve generated Makefile/gpr project file\n\n**3.0.0 (12/2019)**\n- Port of Opengeode to Python3\n- Use PySide2 instead of PySide\n- Asn1scc module supports additional options\n\n**2.1.5 (10/2019)**\n- Fix unicode issues\n\n**2.1.4 (10/2019)**\n- Improve code generated for simulation\n\n**2.1.3 (10/2019)**\n- Improve statechart rendering (in particular with nested states)\n\n**2.1.2 (10/2019)**\n- Change import name case for set/reset of timer (for taste compatibility)\n\n**2.1.1 (10/2019)**\n- Create cache folder if it was missing\n\n**2.1.0 (09/2019)**\n- Reinforce type checks when using substrings and indexes, and\n      variable-length arrays. the latter can no longer be indexed on the\n      left side of an assignment, as the size cannot be set that way\n      The proper ways to set values of a variable-length array are:\n      1) ASN.1 value notation var := { a, b, c }\n      2) New assignment to replace a value using append statements:\n         var := var (0) // { b } // var (2, 3)\n\n**2.0.44 (09/2019)**\n- Fix case issue when used combined with kazoo\n\n**2.0.43 (05/2019)**\n- Better handling of path in generated gpr files\n\n**2.0.42 (05/2019)**\n- Fix substring support (can now write var(1,2) := {1,2})\n\n**2.0.41 (05/2019)**\n- Add --taste flag to target taste integration with kazoo\n\n**2.0.40 (04/2019)**\n- Improve generated gpr file\n\n**2.0.39 (04/2019)**\n- Fix append operator when using substrings\n- Fix unicode issue\n\n**2.0.38 (04/2019)**\n- Support advanced \"in\" expressions (e.g. \"someVar in {enum1, enum2}\",\n      or \"someVar in {{a 4, b false}, {a 1, b true}}\"\n\n**2.0.37 (04/2019)**\n- Support substrings on the left part of an expression (a(1,2) := ...)\n\n**2.0.36 (04/2019)**\n- Fix unicode issue in Ada backend\n\n**2.0.35 (04/2019)**\n- Add helper when editing text (update data dictionary selection)\n\n**2.0.34 (04/2019)**\n- Relax range check for substrings\n- Save/restore windows geometry when quitting/opening the tool\n- Make datatypes fully visible in the data dictionary window\n- write[ln] operator now supports embedded newlines\n\n**2.0.33 (04/2019)**\n- Fix unicode issue in Ada backend when using substrings\n\n**2.0.32 (04/2019)**\n- Fix segfault and improve copy paste of nested states in branches\n\n**2.0.31 (04/2019)**\n- Can cut/paste nested states (nested content was lost before)\n- Can copy/paste and then rename states with nested content\n\n**2.0.30 (03/2019)**\n- Fix bug when double clicking in an autocompletion box in text areas\n\n**2.0.29 (03/2019)**\n- Fix range computations and modulo operator\n\n**2.0.28 (03/2019)**\n- Fix saving issue on new non-taste models\n\n**2.0.27 (03/2019)**\n- Fix type checking when using substrings\n\n**2.0.26 (03/2019)**\n- minor bugfix with underscore/dash confusion\n\n**2.0.25 (03/2019)**\n- fixed variable renaming bug in code generation for nested states\n\n**2.0.24 (03/2019)**\n- Add choice_to_int operator\n\n**2.0.23 (03/2019)**\n- Add basic support for NEWTYPE definitions\n\n**2.0.22 (02/2019)**\n- Generate GPR files to ease the build using gprbuild\n\n**2.0.21 (02/2019)**\n- Fix regression in simulation build script\n\n**2.0.20 (02/2019)**\n- Added \"val\" operator to convert a number to an enumerant\n      useage: someVal := val (0, MyEnumeratedType)\n      with someVal of type MyEnumeratedType. Will return the first enumerant\n\n**2.0.19 (01/2019)**\n- for CHOICE types variables can be declared with enumerated type\n      corresponding to the choice distriminant. CHOICE type is suffixed by\n      \"-selection\", and the \"present\" operator now returns type type\n- If there is an enumerated type with the exact same content as the list\n      of CHOICE determinants, cast is possible using to_selector and to_enum\n\n**2.0.18 (12/2018)**\n- Generate code in the current directory, not in the one of the .pr\n\n**2.0.17 (09/2018)**\n- Fix type checking of the \"power\" operator\n\n**2.0.16 (07/2018)**\n- Added interaction with system clipboard (basic for floating items)\n\n**2.0.15 (07/2018)**\n- Fix many bugs in type checking system\n\n**2.0.14 (06/2018)**\n- fix numerical checks when setting timer parameters\n\n**2.0.13 (06/2018)**\n- Add taste-compatible cache mechanism when calling asn1scc\n\n**2.0.12 (06/2018)**\n- Fix resolution of ASN.1 constants - values were not use propertly when\n      a constant was referencing another constant (numerical operations only)\n\n**2.0.11 (06/2018)**\n- Ada backend: fix choice determinant issue leading to CHOICE_NOT_FOUND bug\n\n**2.0.10 (06/2018)**\n- Various fixes in statechart rendering, esp. from command line\n\n**2.0.9 (06/2018)**\n- Add timers in statecharts\n- Fix statechart list of signals when tab is activated from a sub-diagram\n\n**2.0.8 (05/2018)**\n- Minor bugfix\n\n**2.0.7 (05/2018)**\n- Add option to generate code with QGen (C and Ada)\n- Better reporting of model parsing error\n\n**2.0.6 (05/2018)**\n- Several fixes with the Append operator when working on complex types\n\n**2.0.5 (04/2018)**\n- Fix zoom-in on laptops keyboards with ctrl-shift-+\n\n**2.0.4 (03/2018)**\n- Fix issue with variable prefix in nested states (in generated code)\n\n**2.0.3 (03/2018)**\n- Optimize calls to asn1scc\n- Fix paste error when input symbol is selected\n\n**2.0.2 (03/2018)**\n- Better support of ASN.1 constants\n- Support timer when using process type\n- Trigger model check proposal on save only if not checked recently\n- Fix Statechart rendering (incl. with process type)\n- Ada backend: when a branch is ignored, generate \"null\"\n\n**2.0.1 (02/2018)**\n- Detect type mismatches when user mixes signed and unsigned variables\n\n**2.0.0 (02/2018)**\n- V2 of Opengeode is based on ASN1SCC V4 and is not compatible with V3\n- Main changes concern support of unsigned numbers in ASN.1 types\n\n**1.5.44 (01/2018)**\n- Bugfix: Return error code when Ada generation fails\n- Tests: reorder arguments to asn1scc for v4 compatibility\n\n**1.5.43 (01/2018)**\n- Add preliminary compatibility with asn1scc v4\n\n**1.5.42 (10/2017)**\n- Fix case issue with process types\n- Remove submodules\n\n**1.5.40 (07/2017)**\n- Fix range check in arrays\n\n**1.5.39 (07/2017)**\n- Minor fix in testcase Makefile\n\n**1.5.38 (06/2017)**\n- Fix unicode issue in Ada backend\n\n**1.5.37 (05/2017)**\n- Fix Ada backend bug with sequence of literals in nested states\n\n**1.5.36 (05/2017)**\n- Fix Unicode issues in Ada backend\n\n**1.5.35 (05/2017)**\n- Fix FOR LOOPS code generation\n\n**1.5.34 (05/2017)**\n- Fix statechart message selection box\n\n**1.5.33 (04/2017)**\n- Fix unicode issue with the simulation code\n- Use -fPIC when building the simulation library\n\n**1.5.32 (04/2017)**\n- Unicode bugfixes in Ada backend\n- Bugfix with SEQUENCE OF literals in Ada backend\n- Various bugfixes with mixed int32/64 bits\n\n**1.5.28 (03/2017)**\n- Added preliminary support for PROCESS TYPE and instances\n\n**1.5.26 (02/2017)**\n- Statecharts can be configured to filter out signals\n\n**1.5.25 (01/2017)**\n- Ada backend generates aliased context (used for model checking)\n\n**1.5.24 (01/2017)**\n- PR file use better indentation for text areas (no line return)\n\n**1.5.23 (12/2016)**\n- In simulation mode, bugfix in the declaration of the startup function\n- Code generator prepared for model checking\n\n**1.5.22 (12/2016)**\n- Simulation function save/restore context fix\n\n**1.5.21 (11/2016)**\n- Fix regression with test-math (import of external functions)\n- Use monospace font in the HTML rendering of ASN.1 files\n\n**1.5.20 (11/2016)**\n- Fix wrongly formatted error reporting in FOR loops\n- Support SDL2010 dot field separator (variable.field,\n      while sdl92 only supported variable!field)\n- Sequence of literals now support field selectors\n      (i.e. { variable.field } is now a valid statement)\n- Support inner procedure call with return statement\n\n**1.5.19 (11/2016)**\n- Fix integer cast in Ada\n\n**1.5.18 (11/2016)**\n- Fix parsing of ASN.1 constants that use an annonymous inner type\n\n**1.5.17 (11/2016)**\n- Fixed issue with initialization of generated code in state aggregations\n\n**1.5.16 (11/2016)**\n- Fix minor indentation issue when saving\n\n**1.5.15 (10/2016)**\n- Report incomplete startup transitions as errors in nested states\n\n**1.5.14 (10/2016)**\n- Support named integers (requires asn1scc 3.3.04 or more recent)\n\n**1.5.13 (10/2016)**\n- Better support of warnings\n- Fixed detection of CHOICE assignment erros\n- Raise error if process miss the start transition\n- Raise error in case of SEQUENCE OF type mismatch\n\n**1.5.12 (09/2016)**\n- Detect duplicate declaration of procedures\n\n**1.5.11 (09/2016)**\n- Allow semicolon in the declaration of procedures after RETURNS keyword\n\n**1.5.10 (09/2016)**\n- readonly mode with more restrictions\n\n**1.5.9 (09/2016)**\n- Added --readonly command line to restrict process modifications\n\n**1.5.8 (09/2016)**\n- Bugfix - Ada backend failed when there were continuous signals in\n               nested states but none at root level (missing end if)\n- Load fix when there is no dataview\n- Additional type checks\n\n**1.5.7 (09/2016)**\n- Bugfix - Update completion list of process symbol\n- Sort ASN.1 types in data dictionary\n\n**1.5.6 (08/2016)**\n- vi interface supports history\n- vi interface for substitution can apply to the whole model (with g)\n- refactoring function via vi interface (eg. %state,fromName,toName,)\n- Fixed issue with rendering (coordinates of symbols could be wrong)\n- Introduce data dictionary\n\n**1.5.4 (08/2016)**\n- Various GUI improvements\n\n**1.5.3 (07/2016):**\n- Ada backend fix: Continous signals now handled in states\n      where input is not consumed\n\n**1.5.2 (07/2016):**\n- Asn1scc API added to interface with DMT/asn2dataModel\n- Better statechart rendering (less distance between nodes)\n\n**1.4.5 (07/2016):**\n- Context variable was not prefixed properly\n- Callback function for timers use 64bits integer\n- RIs use prefix with unicode separation to avoid name clashes\n\n**1.4.4 (06/2016)**\n- Minor bugfix in Ada backend to support typeless systems\n\n**1.4.3 (06/2016)**\n- Add support for priority of continuous signals in Ada code generator\n\n**1.4.2 (06/2016)**\n- Reload / render properly priority of continuous signals\n\n**1.4.1 (06/2016)**\n- Continuous states can check the presence of messages in the input queue\n      to respect the SDL semantics\n- Bugfix in Ada code generator on continuous states\n\n**1.3.28 (06/2016)**\n- Excluded states (with *(statelist) ) were case sensitive\n\n**1.3.27 (05/2016)**\n- Fix bug in Ada backend when using continous signals\n- Better handling of simulation script\n\n**1.3.26 (05/2016)**\n- Fix parser issues with negative expressions\n\n**1.3.25 (05/2016)**\n- Fix reporting of syntax errors in state aggregations\n\n**1.3.22 (05/2016)**\n- Bug fix in range checks for division and subtraction\n- Optimise loading when there are no CIF comments\n\n**1.3.21 (05/2016)**\n- Complete support of optional fields\n      (check tests/regression/test-optionalfields)\n\n**1.3.20 (05/2016)**\n- Improve simulator interface\n\n**1.3.19 (04/2016)**\n- Various bugfixes with ternary operator\n- Added demo \"test-save\" showing how to emulate the behaviour of the SAVE\n      symbol\n- ASN.1 types are shown with SDL-syntax (no hyphens)\n\n**1.3.18 (04/2016)**\n- Add support for value notation of NULL type\n- Remove warning when accessing CHOICE fields\n\n**1.3.17 (04/2016)**\n- Add support for value notation of empty SEQUENCEs (\"{}\")\n\n**1.3.16 (03/2016)**\n- Bugfix in testing aggregation states in the GUI\n\n**1.3.15 (03/2016)**\n- Bugfix in Ada backend when a state aggregation contained only empty\n      states (directly returning states).\n\n**1.3.14**\n- Minor bugfix with command line handling\n\n**1.3.13**\n- Bugfix in rendering of Continuous signals\n\n**1.3.12**\n- Render properly parameterless procedures that are declared in the .pr\n      file but without a textbox\n- When going to parent scene, fixed rendering issue\n\n**1.3.11**\n- Parser is more tolerant to incomplete systems\n\n**1.3.9/10 (01/2016)**\n- Checker verifies that decision coverage is complete on Real and Boolean\n      types\n- F3 generates Ada code\n\n**1.3.8 (01/2016)**\n- Fix logging when LLVM is not installed\n\n**1.3.7 (12/2015)**\n- Added icon to use Continuous Signals from the GUI\n\n**1.3.6 (11/2015)**\n- Support external procedures having a return statement\n       this allows to import math functions from the libmath without having\n       to provide manual code. see test-math\n\n**1.3.5 (11/2015)**\n- Better support for continous signals\n\n**1.3.4 (11/2015)**\n- Early support for continous signals\n- Regression issue fixed (test-nocif2)\n\n**1.3.3 (11/2015)**\n- Better support of platform-dependent screen resolution and dpi\n- Minor fixes in statechart scenes (no negative coordinates)\n\n**1.3.1 (11/2015)**\n- Support for State Aggregations (parallel states)\n- Improved statechart rendering\n\n**1.2.10 (10/2015)**\n- Better support of renamePolicy\n- Better handling of models without CIF coordinates\n- Minor bug fixes\n- Forloop syntax error handled correctly when using range\n- support Hex and bit string literals when working with OCTET STRING\n- support OUT keyword for procedure FPAR\n\n**1.2.4 (07/2015)**\n- Use version 3.2.x of the ASN1SCC compiler with new -renamePolicy flag\n- Improve robustness\n\n**1.1.1 (07/2015)**\n- Strongly report syntax errors with symbol location and warning if user\n  tries to save a model with syntax errors\n\n**1.1.0 (07/2015)**\n- Write/Writeln procedure support enumerated types\n\n**1.0.1 (06/2015)**\n- Bugfix: use mono when calling asn1.exe by default (needed redhat-based\n\n**1.0.0 (06/2015)**\n- Bugfixes and minor improvements\n- Python API / Simulator function (coupled with other TASTE components)\n\n**1.0RC (10/2014)**\n- Release candidate Version 1\n- Allow standalone systems (made of one process)\n- Major refactoring of parser and Ada backend\n- Many bugfixes and improvements\n- First version of LLVM backend\n\n**0.994 (07/2014)**\n- Maintenance release, minor fixes\n\n**0.993 (07/2014)**\n- Parser bugfixes\n- Better support for nested states\n- Ada generator improvements\n- Support for unicode\n- Indentation of PR code\n- Copy-paste of procedures and nested states\n- Improved regression testing\n\n**0.99 (04/2014)**\n- Refactoring of the backend engine, now using singledispatch\n- Support of hierachical states\n- Minor bugfixes\n\n**0.98**\n- Added support for FOR loops\n  In a task, use \"for x in range([start], stop, [range]): ... endfor\"\n  or \"for x in sequenceOfvariable: ... endfor\"\n- Default symbol size is smaller\n- Various minor bugfixes\n\n**0.97**\n- added support for default value when declaring a variable\n  e.g. DCL myVar myType ::= { x 5, y 2 };\n  default value must be a ground expression\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://opengeode.net",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "opengeode-maxime1008",
    "package_url": "https://pypi.org/project/opengeode-maxime1008/",
    "platform": "",
    "project_url": "https://pypi.org/project/opengeode-maxime1008/",
    "project_urls": {
      "Homepage": "http://opengeode.net"
    },
    "release_url": "https://pypi.org/project/opengeode-maxime1008/3.3.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A free SDL editor for TASTE",
    "version": "3.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8259550,
  "releases": {
    "3.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c19e6eb5abb1a8b45c453fe81948d9c682c0955161f332ccd3030147fe36b3fa",
          "md5": "f649a345bde1644f0b111c0bf85a9718",
          "sha256": "726d432d3615589e92dbcbb81f0ebb9988b3a6df81ea281a6946981b42addebe"
        },
        "downloads": -1,
        "filename": "opengeode_maxime1008-3.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f649a345bde1644f0b111c0bf85a9718",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 2557051,
        "upload_time": "2020-09-24T07:57:13",
        "upload_time_iso_8601": "2020-09-24T07:57:13.161381Z",
        "url": "https://files.pythonhosted.org/packages/c1/9e/6eb5abb1a8b45c453fe81948d9c682c0955161f332ccd3030147fe36b3fa/opengeode_maxime1008-3.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57286715e31051f1d3d7502f1fd32922bde1b156a8c505263ace108e3905e533",
          "md5": "9298f2c487acdcb2502ad413c3437934",
          "sha256": "644523942d34e7859b266e782773292069118257dab55416bd77c3b476dde529"
        },
        "downloads": -1,
        "filename": "opengeode-maxime1008-3.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9298f2c487acdcb2502ad413c3437934",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2451381,
        "upload_time": "2020-09-24T07:57:16",
        "upload_time_iso_8601": "2020-09-24T07:57:16.892861Z",
        "url": "https://files.pythonhosted.org/packages/57/28/6715e31051f1d3d7502f1fd32922bde1b156a8c505263ace108e3905e533/opengeode-maxime1008-3.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c19e6eb5abb1a8b45c453fe81948d9c682c0955161f332ccd3030147fe36b3fa",
        "md5": "f649a345bde1644f0b111c0bf85a9718",
        "sha256": "726d432d3615589e92dbcbb81f0ebb9988b3a6df81ea281a6946981b42addebe"
      },
      "downloads": -1,
      "filename": "opengeode_maxime1008-3.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f649a345bde1644f0b111c0bf85a9718",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 2557051,
      "upload_time": "2020-09-24T07:57:13",
      "upload_time_iso_8601": "2020-09-24T07:57:13.161381Z",
      "url": "https://files.pythonhosted.org/packages/c1/9e/6eb5abb1a8b45c453fe81948d9c682c0955161f332ccd3030147fe36b3fa/opengeode_maxime1008-3.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "57286715e31051f1d3d7502f1fd32922bde1b156a8c505263ace108e3905e533",
        "md5": "9298f2c487acdcb2502ad413c3437934",
        "sha256": "644523942d34e7859b266e782773292069118257dab55416bd77c3b476dde529"
      },
      "downloads": -1,
      "filename": "opengeode-maxime1008-3.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9298f2c487acdcb2502ad413c3437934",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 2451381,
      "upload_time": "2020-09-24T07:57:16",
      "upload_time_iso_8601": "2020-09-24T07:57:16.892861Z",
      "url": "https://files.pythonhosted.org/packages/57/28/6715e31051f1d3d7502f1fd32922bde1b156a8c505263ace108e3905e533/opengeode-maxime1008-3.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}