{
  "info": {
    "author": "Oscar Carrillo",
    "author_email": "oscara1706cl@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.6"
    ],
    "description": "\n# Bubba: Python Web Framework built \n\n![purpose](https://img.shields.io/badge/purpose-learning-green.svg)\n![PyPI](https://img.shields.io/pypi/v/bumbo.svg)\n\nBubba is a Python web framework built for learning purposes.\n\nIt's a WSGI framework and can be used with any WSGI application server such as Gunicorn.\n\n## Installation\n\n```shell\npip install bubba\n```\n\n## How to use it\n\n### Basic usage:\n\n```python\nfrom bubba.api import API\n\napp = API()\n\n\n@app.route(\"/home\")\ndef home(request, response):\n    response.text = \"Hello from the HOME page\"\n\n\n@app.route(\"/hello/{name}\")\ndef greeting(request, response, name):\n    response.text = f\"Hello, {name}\"\n\n\n@app.route(\"/book\")\nclass BooksResource:\n    def get(self, req, resp):\n        resp.text = \"Books Page\"\n\n    def post(self, req, resp):\n        resp.text = \"Endpoint to create a book\"\n\n\n@app.route(\"/template\")\ndef template_handler(req, resp):\n    resp.body = app.template(\n        \"index.html\", context={\"name\": \"Bumbo\", \"title\": \"Best Framework\"}).encode()\n```\n\n### Unit Tests\n\nThe recommended way of writing unit tests is with [pytest](https://docs.pytest.org/en/latest/). There are two built in fixtures\nthat you may want to use when writing unit tests with Bumbo. The first one is `app` which is an instance of the main `API` class:\n\n```python\ndef test_route_overlap_throws_exception(app):\n    @app.route(\"/\")\n    def home(req, resp):\n        resp.text = \"Welcome Home.\"\n\n    with pytest.raises(AssertionError):\n        @app.route(\"/\")\n        def home2(req, resp):\n            resp.text = \"Welcome Home2.\"\n```\n\nThe other one is `client` that you can use to send HTTP requests to your handlers. It is based on the famous [requests](https://requests.readthedocs.io/) and it should feel very familiar:\n\n```python\ndef test_parameterized_route(app, client):\n    @app.route(\"/{name}\")\n    def hello(req, resp, name):\n        resp.text = f\"hey {name}\"\n\n    assert client.get(\"http://testserver/matthew\").text == \"hey matthew\"\n```\n\n## Templates\n\nThe default folder for templates is `templates`. You can change it when initializing the main `API()` class:\n\n```python\napp = API(templates_dir=\"templates_dir_name\")\n```\n\nThen you can use HTML files in that folder like so in a handler:\n\n```python\n@app.route(\"/show/template\")\ndef handler_with_template(req, resp):\n    resp.html = app.template(\n        \"example.html\", context={\"title\": \"Awesome Framework\", \"body\": \"welcome to the future!\"})\n```\n\n## Static Files\n\nJust like templates, the default folder for static files is `static` and you can override it:\n\n```python\napp = API(static_dir=\"static_dir_name\")\n```\n\nThen you can use the files inside this folder in HTML files:\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <title>{{title}}</title>\n\n  <link href=\"/static/main.css\" rel=\"stylesheet\" type=\"text/css\">\n</head>\n\n<body>\n    <h1>{{body}}</h1>\n    <p>This is a paragraph</p>\n</body>\n</html>\n```\n\n### Middleware\n\nYou can create custom middleware classes by inheriting from the `bumbo.middleware.Middleware` class and overriding its two methods\nthat are called before and after each request:\n\n```python\nfrom bumbo.api import API\nfrom bumbo.middleware import Middleware\n\n\napp = API()\n\n\nclass SimpleCustomMiddleware(Middleware):\n    def process_request(self, req):\n        print(\"Before dispatch\", req.url)\n\n    def process_response(self, req, res):\n        print(\"After dispatch\", req.url)\n\n\napp.add_middleware(SimpleCustomMiddleware)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bubba",
    "package_url": "https://pypi.org/project/bubba/",
    "platform": null,
    "project_url": "https://pypi.org/project/bubba/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/bubba/0.0.3/",
    "requires_dist": [
      "Jinja2 (==3.1.2)",
      "parse (==1.19.0)",
      "requests (==2.28.1)",
      "requests-wsgi-adapter (==0.4.1)",
      "WebOb (==1.8.7)",
      "whitenoise (==6.2.0)"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Bubba Python Web Framework the simplest framework.",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16610846,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "282bba389adf35aba4ab9b3c4a661ea36bbdae4e6f73fc19e8a2eb7c5131cc7d",
          "md5": "f149f2a745572bd995b2c9b9ac86f928",
          "sha256": "a2270968a04b16c2eafd9b29fa433bf895e3963b2b4297a2116c98e82b346a86"
        },
        "downloads": -1,
        "filename": "bubba-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f149f2a745572bd995b2c9b9ac86f928",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 4975,
        "upload_time": "2023-01-11T03:01:57",
        "upload_time_iso_8601": "2023-01-11T03:01:57.657254Z",
        "url": "https://files.pythonhosted.org/packages/28/2b/ba389adf35aba4ab9b3c4a661ea36bbdae4e6f73fc19e8a2eb7c5131cc7d/bubba-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ab0dbb308d6b7e9b0794bdc6d1db032f34b65f8c181fed7b3d3a06bebfb8e82",
          "md5": "756f28e79b7bd110622ed7ebd2a0da43",
          "sha256": "09aea7b8c89ff863ab796970e2f7eddcaa1b9fe57bfd5dbfe73d28185c5a8317"
        },
        "downloads": -1,
        "filename": "bubba-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "756f28e79b7bd110622ed7ebd2a0da43",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 4865,
        "upload_time": "2023-01-11T03:01:59",
        "upload_time_iso_8601": "2023-01-11T03:01:59.540959Z",
        "url": "https://files.pythonhosted.org/packages/8a/b0/dbb308d6b7e9b0794bdc6d1db032f34b65f8c181fed7b3d3a06bebfb8e82/bubba-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "564cfd41581f74981e41d4f0f54d29531590d9afcf27b2cc4c9574564ea23f1a",
          "md5": "212f1ab25ea80dacb1070508f0d69ad7",
          "sha256": "717380ca2a53b03722aaf23cf66efcdd4ca955d7f929af9b4caa9d90b7ab7371"
        },
        "downloads": -1,
        "filename": "bubba-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "212f1ab25ea80dacb1070508f0d69ad7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 6632,
        "upload_time": "2023-01-29T18:03:10",
        "upload_time_iso_8601": "2023-01-29T18:03:10.182998Z",
        "url": "https://files.pythonhosted.org/packages/56/4c/fd41581f74981e41d4f0f54d29531590d9afcf27b2cc4c9574564ea23f1a/bubba-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9997d689a8428ef9ffdf6bb190893f9bda580769be9933af96e390c2ae99b6d5",
          "md5": "aa02cacd45e684e8e500cfa98d4b9fe4",
          "sha256": "c11a28f63af4e1e42ebc936a6c943f6b8f935ca63bcbc666638f241ac9a6046c"
        },
        "downloads": -1,
        "filename": "bubba-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "aa02cacd45e684e8e500cfa98d4b9fe4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 6556,
        "upload_time": "2023-01-29T18:03:13",
        "upload_time_iso_8601": "2023-01-29T18:03:13.047334Z",
        "url": "https://files.pythonhosted.org/packages/99/97/d689a8428ef9ffdf6bb190893f9bda580769be9933af96e390c2ae99b6d5/bubba-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "564cfd41581f74981e41d4f0f54d29531590d9afcf27b2cc4c9574564ea23f1a",
        "md5": "212f1ab25ea80dacb1070508f0d69ad7",
        "sha256": "717380ca2a53b03722aaf23cf66efcdd4ca955d7f929af9b4caa9d90b7ab7371"
      },
      "downloads": -1,
      "filename": "bubba-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "212f1ab25ea80dacb1070508f0d69ad7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 6632,
      "upload_time": "2023-01-29T18:03:10",
      "upload_time_iso_8601": "2023-01-29T18:03:10.182998Z",
      "url": "https://files.pythonhosted.org/packages/56/4c/fd41581f74981e41d4f0f54d29531590d9afcf27b2cc4c9574564ea23f1a/bubba-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9997d689a8428ef9ffdf6bb190893f9bda580769be9933af96e390c2ae99b6d5",
        "md5": "aa02cacd45e684e8e500cfa98d4b9fe4",
        "sha256": "c11a28f63af4e1e42ebc936a6c943f6b8f935ca63bcbc666638f241ac9a6046c"
      },
      "downloads": -1,
      "filename": "bubba-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "aa02cacd45e684e8e500cfa98d4b9fe4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 6556,
      "upload_time": "2023-01-29T18:03:13",
      "upload_time_iso_8601": "2023-01-29T18:03:13.047334Z",
      "url": "https://files.pythonhosted.org/packages/99/97/d689a8428ef9ffdf6bb190893f9bda580769be9933af96e390c2ae99b6d5/bubba-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}