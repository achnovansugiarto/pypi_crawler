{
  "info": {
    "author": "Attila Axt",
    "author_email": "axt@load.hu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# cfg-explorer\n\n[![license](https://img.shields.io/github/license/axt/cfg-explorer?style=flat-square)](https://github.com/axt/cfg-explorer)\n![platform](https://img.shields.io/badge/platform-Linux-yellowgreen?style=flat-square)\n[![pyversion](https://img.shields.io/pypi/pyversions/cfg-explorer?style=flat-square)](https://pypi.org/project/cfg-explorer/)\n[![version](https://img.shields.io/pypi/v/cfg-explorer?style=flat-square)](https://pypi.org/project/cfg-explorer/)\n[![download](https://img.shields.io/pypi/dm/cfg-explorer?style=flat-square)](https://pypi.org/project/cfg-explorer/)\n\n\nCFG explorer is a simple utility which can be used to explore control flow graphs of binary programs.\n\nIt uses [angr](https://github.com/angr/angr) binary analysis framework, for CFG recovery, and renders the CFG to SVGs, with the help of [bingraphvis](http://github.com/axt/bingraphvis/). \n\nThe generated SVGs can be navigated by clicking on the _function_ or the _callsite_ nodes.\n\nBesides, now it can also export multiple formats of static CFG files to your local machine, including:\n\n- .canon\n- .cmap\n- .cmapx\n- .cmapx_np\n- **.dot**\n- .fig\n- .gd\n- .gd2\n- .gif\n- .imap\n- .imap_np\n- .ismap\n- .jpe\n- **.jpeg**\n- **.jpg**\n- .mp\n- **.pdf**\n- .plain\n- .plain-ext\n- **.png**\n- .ps\n- .ps2\n- **.svg**\n- .svgz\n- .vml\n- .vmlz\n- .vrml\n- .wbmp\n- .xdot\n- **.raw**\n\nCFGs starting from multiple start addresses or for multiple functions can also be automatically exported to multiple files at once with different suffixes in their filenames.\n\n\n## Note\n\nThis project is in its very early stage!\n\n## Install\n\n```\n$ pip install cfg-explorer\n```\n\n## Usage\n\n### CLI\n\nAfter installation, `cfg_explorer` can be easily called in command lines as:\n\n```\n$ cfgexplorer --help\n\nusage: cfgexplorer [-h] [-v] [-s [STARTS [STARTS ...]]] [-P PORT] [-p] [-l]\n                   [-o OUTFILE]\n                   binary\n\npositional arguments:\n  binary                the binary to explore\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --verbose         increase output verbosity\n  -s [STARTS [STARTS ...]], --start [STARTS [STARTS ...]]\n                        start addresses\n  -P PORT, --port PORT  server port\n  -p, --pie             is position independent\n  -l, --launch          launch browser\n  -o OUTFILE, --output OUTFILE\n                        output file path, only support for ['canon', 'cmap',\n                        'cmapx', 'cmapx_np', 'dot', 'fig', 'gd', 'gd2', 'gif',\n                        'imap', 'imap_np', 'ismap', 'jpe', 'jpeg', 'jpg',\n                        'mp', 'pdf', 'plain', 'plain-ext', 'png', 'ps', 'ps2',\n                        'svg', 'svgz', 'vml', 'vmlz', 'vrml', 'wbmp', 'xdot',\n                        'raw']\n```\n\nFor example:\n\n```\n$ cfgexplorer /your/binary -l\n```\n\nThe command above will build the CFG, spawn a web server, and open it in your browser.\n\n### Module\n\nYou can also utilize `cfg_explore` function in it as other common modules in Python:\n\n```py\nfrom cfgexplorer import cfg_explore\n\ncfg_explore(binary=r'/your/binary', launch=True)\n```\n\nThe codes will do what the `cfgexplorer` does in the previous example. If you want to shut down the app, you need to interrupt your Python interpreter as well. So the function is more often used by specifying `output` to generate output files in a Python program like:\n\n```py\ncfg_explore(binary=r'/your/binary', output='./cfg_output.svg')\n```\n\nThe code above exports CFG as `svg` format to file path `./cfg_output.svg`\n\nThe function is defined as follow:\n\n```py\ncfg_explore(binary, starts=[], port=5000, pie=False, launch=False, output='')\n```\n\n- binary(*str*): the path of the binary file to analysis\n- starts(*list*): the start points (address) in CFGs, if none, the CFG will start with main func entry address\n- port(*int*): server port to host the web app. make sure the port is idle now.\n- pie(*bool*): whether the analysis position-independent\n- launch(*bool*): Whether launch a browser to view CFG immediately\n- output(*str*): the output file path. only support certain formats. If you leave it an empty string, no output will be generated and the interactive web app will start. Otherwise, no app will be launched and the CFGs will be exported to specified files.\n\nDetailed usages of this function are available in [examples/demo.ipynb](./examples/demo.ipynb).\n\n## Annotation Style\n\nEdges:\n\n\nEdge class | Color | Style\n---------|----------|---------\nConditional True | Green | \nConditional False | Red | \nUnconditional | Blue|\nNext | Blue | Dashed\nCall | Black | \nReturn | Gray | \nFake Return | Gray | Dotted\nUnknown | Orange | \n\n\n\n## Limitations\n* works on Linux only\n* at the moment, the result is simply an SVG file, i plan to add a small frontend around it\n\n## Screenshots\n\n### Function graph mode (`/function/0x123456`)\n![fgraph][fgraph]\n\n### CFG mode (`/cfg/0x123456`)\n\n![cfg][cfg]\n\n\n[fgraph]: http://i.imgur.com/9c1Ah9y.png\n[cfg]: http://i.imgur.com/UrFroxt.png\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/axt/cfg-explorer",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cfg-explorer",
    "package_url": "https://pypi.org/project/cfg-explorer/",
    "platform": "",
    "project_url": "https://pypi.org/project/cfg-explorer/",
    "project_urls": {
      "Homepage": "https://github.com/axt/cfg-explorer"
    },
    "release_url": "https://pypi.org/project/cfg-explorer/0.0.2/",
    "requires_dist": [
      "argparse",
      "angr",
      "bingraphvis",
      "flask"
    ],
    "requires_python": "",
    "summary": "CFG explorer",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9516909,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37180cbe14f59a4089e4cad5d495da9418434b5145190b5519488d8b3f52b457",
          "md5": "33e54062c13143768b8c81efa76330fa",
          "sha256": "fbe5321616372f434d19030bd645581badecab6cddbfdbedaeca6fd842abf3d1"
        },
        "downloads": -1,
        "filename": "cfg_explorer-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "33e54062c13143768b8c81efa76330fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25718,
        "upload_time": "2020-08-31T06:20:49",
        "upload_time_iso_8601": "2020-08-31T06:20:49.843534Z",
        "url": "https://files.pythonhosted.org/packages/37/18/0cbe14f59a4089e4cad5d495da9418434b5145190b5519488d8b3f52b457/cfg_explorer-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91bfcdab04143ae2d603d48f7c2724cff71dc4889be0d6839ad054421a87cd48",
          "md5": "26791a36d58061bb5552a6193f99b680",
          "sha256": "b35958b34f2a8235de44ba1b1358d5cac83854f60d540385613349cd58ce5d88"
        },
        "downloads": -1,
        "filename": "cfg-explorer-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "26791a36d58061bb5552a6193f99b680",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22901,
        "upload_time": "2020-08-31T06:20:52",
        "upload_time_iso_8601": "2020-08-31T06:20:52.167987Z",
        "url": "https://files.pythonhosted.org/packages/91/bf/cdab04143ae2d603d48f7c2724cff71dc4889be0d6839ad054421a87cd48/cfg-explorer-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5db878b905336a5289561f1572641caa439acefd7c770faabb2c3e1e1a033fcc",
          "md5": "da34287595fcecc6dfe785dc382b057c",
          "sha256": "08ad54ce77b7412c01eb771bdab556564de99d60b5cb3cdd102534cd497c0fab"
        },
        "downloads": -1,
        "filename": "cfg_explorer-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "da34287595fcecc6dfe785dc382b057c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27336,
        "upload_time": "2021-02-24T23:44:18",
        "upload_time_iso_8601": "2021-02-24T23:44:18.738623Z",
        "url": "https://files.pythonhosted.org/packages/5d/b8/78b905336a5289561f1572641caa439acefd7c770faabb2c3e1e1a033fcc/cfg_explorer-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "808db2e1273729f5d7e57d5eff7ad7df42bbd92a5ce3bad1eb8e8d75172e1f1a",
          "md5": "9720f8e78dc712635980697d4a8d72fb",
          "sha256": "965124ca9ed931a2ae2afea62cfbc476f9e96c8db96e6f53b837a3479437c389"
        },
        "downloads": -1,
        "filename": "cfg-explorer-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9720f8e78dc712635980697d4a8d72fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24721,
        "upload_time": "2021-02-24T23:44:20",
        "upload_time_iso_8601": "2021-02-24T23:44:20.003532Z",
        "url": "https://files.pythonhosted.org/packages/80/8d/b2e1273729f5d7e57d5eff7ad7df42bbd92a5ce3bad1eb8e8d75172e1f1a/cfg-explorer-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5db878b905336a5289561f1572641caa439acefd7c770faabb2c3e1e1a033fcc",
        "md5": "da34287595fcecc6dfe785dc382b057c",
        "sha256": "08ad54ce77b7412c01eb771bdab556564de99d60b5cb3cdd102534cd497c0fab"
      },
      "downloads": -1,
      "filename": "cfg_explorer-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "da34287595fcecc6dfe785dc382b057c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 27336,
      "upload_time": "2021-02-24T23:44:18",
      "upload_time_iso_8601": "2021-02-24T23:44:18.738623Z",
      "url": "https://files.pythonhosted.org/packages/5d/b8/78b905336a5289561f1572641caa439acefd7c770faabb2c3e1e1a033fcc/cfg_explorer-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "808db2e1273729f5d7e57d5eff7ad7df42bbd92a5ce3bad1eb8e8d75172e1f1a",
        "md5": "9720f8e78dc712635980697d4a8d72fb",
        "sha256": "965124ca9ed931a2ae2afea62cfbc476f9e96c8db96e6f53b837a3479437c389"
      },
      "downloads": -1,
      "filename": "cfg-explorer-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "9720f8e78dc712635980697d4a8d72fb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24721,
      "upload_time": "2021-02-24T23:44:20",
      "upload_time_iso_8601": "2021-02-24T23:44:20.003532Z",
      "url": "https://files.pythonhosted.org/packages/80/8d/b2e1273729f5d7e57d5eff7ad7df42bbd92a5ce3bad1eb8e8d75172e1f1a/cfg-explorer-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}