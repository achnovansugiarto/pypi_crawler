{
  "info": {
    "author": "Aleksander Mierzwicki",
    "author_email": "ali.pypipublic@osomdev.pl",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PyShrimp\n\n<img src=\"https://osomdev.github.io/pyshrimp/assets/img/logo/pyshrimp_logo_transparent_250.png\" align=\"right\" alt=\"PyShrimp logo\">\n\nPyShrimp is combination of utilities designed to support easy creation of small python scripts instead of getting your\nhands dirty with shell scripting languages like bash.\n\nWhen trying to write simple script to hack some ad-hoc task it's easy to end up with following choices:\n\n- use bash - it's easy to write simple script which invokes some processes. But then it's hard to do something more\n  advanced (lacking good support for types, lacking support for arrays...)\n- use python - is far better in handing different types, have good support for various collections, can easily be\n  expanded by installing dependencies from pip. But then there is painful overhead in setting up such script\n  (handling virtualenv to separate dependencies, or using one big env for all scripts) and doing more complex process\n  invocations beyond simple `subprocess.check_output(...)` is also far from ideal.\n\nThe PyShrimp aims at solving this - it's purpose is to remove barriers so developers can use python for simple\nshell-scripting purpose. No more over-grown bash scripts, no more pain with env setup or subprocess handling!\n\nNote: the features provided are not expected to replace poetry and other tools like that - if you can afford the\ncomplexity then it's probably better to use those ;). But for single-file scripts it should be way easier to go with\nPyShrimp.\n\n## TL;DR: Showcase\n\nThe rest of README explains features in detail. For those impatient there is quick example script - the code\nis often worth 1000 words (although it covers only small subset of features):\n\n```python\n#!/usr/bin/env pyshrimp\n# $opts: magic,devloop\n# $requires: click==7.0,requests==2.22.0\nimport requests\nfrom click import style\n\nfrom pyshrimp import log, as_dot_dict\n\n\ndef slog(message, **kwargs):\n    log(style(message, **kwargs))\n\n\nslog('Loading issues...')\n\nres = as_dot_dict(\n    requests.get(\n        'https://jira.atlassian.com/rest/api/2/search', params={\n            'jql': 'created > -1d',\n            'maxResults': '5'\n        }\n    ).json(),\n    'res'\n)\n\nslog(f'Issues ({res.total} in total):', fg='green', bold=True)\n\nfor issue in res.issues:\n    line_color = 'red' if issue.fields.issuetype.name == 'Bug' else None\n    f = issue.fields\n    slog(f' * [{issue.key}] [{f.issuetype.name}] [{f.status.name}] {f.summary}', fg=line_color)\n```\n\nTo run this script you need to have the PyShrimp installed:\n\n```shell\npip install pyshrimp\nchmod +x thescript.py\n./thescript.py\n```\n\nPyShrimp will automatically initialize new virtual environment, install dependencies declared in file header,\nand execute the script with devloop:\n\n![Showcase output](https://osomdev.github.io/pyshrimp/assets/img/pyshrimp_showcase_output.png)\n\n## Features\n\n### Virtual env setup - `$requires`\n\nPyShrimp parses script header and looks for the `# $requires: ...` lines.\nEach such line can contain one or more pip-style requirements, for example:\n\n```python\n#!/usr/bin/env pyshrimp\n# $requires: click==7.0,requests==2.22.0\n# $requires: PyYAML==5.3.1\n```\n\nBefore script execution PyShrimp will create dedicated virtual env in `~/.cache/pyshrimp/{hash}/`\nwhere `{hash}` is hash value from the requirements. The environment is created only once - subsequent\nruns of script will use already existing environment. Scripts with exactly the same dependencies will\nre-use single virtual environment.\n\nThe `$requirements_file` can be used to load requirements list from external file:\n\n```python\n#!/usr/bin/env pyshrimp\n# $requirements_file: requirements.txt\n```\n\n### Creation of new script\n\nTo quickly create new script just run the `new` command:\n\n```shell\npyshrimp new my-new-script.py\n```\n\n[![](https://osomdev.github.io/pyshrimp/assets/img/asciinema_script_creation_snapshot.png)](\n  https://asciinema.org/a/9dDyBs1n1YkNtJBchFv3yZCt6?autoplay=1\n)\n\nThe file created will contain skeleton of script. Script will have the executable mode set already.\n\n### Script startup - `run`\n\nThe `run` function makes it easy to run the main function with some extra capabilities.\nThe default behavior is to set up logging and run the script main function.\nIn addition to this it's possible to enable additional tweaks:\n\n* `devloop` - runs script in loop - PyShrimp will re-execute script automatically after it changes\n* `elevate` - ensures that script is running as root - uses sudo to elevate permissions\n\nExample script with both features enabled:\n\n```python\n#!/usr/bin/env pyshrimp\nfrom pyshrimp import run, log\n\n\ndef main():\n  log('Hello world!')\n\n\nrun(main, devloop=True, elevate=True)\n```\n\n### Power of magic\n\nThere is alternative 'magic' way to run script setup (logging configuration) and achieve the bonus features\nlike devloop and elevate. This is called magic as the PyShrimp no longer will only set up virtualenv but also\nwill wrap the code with extra \"magical\" setup.\n\nThe following script will have exactly the same behavior as previously presented with `run` method:\n\n```python\n#!/usr/bin/env pyshrimp\n# $opts: magic,devloop,elevate\nfrom pyshrimp import log\n\nlog('Hello world!')\n```\n\nAs you can see there is less \"boilerplate\" code when using this approach.\n\nThere is however one downside - the code run with just `python` will behave differently - the magic options will not\nactivate and also the logging will be not configured. This can be surprising when running script with debugger so\nuse the magic wisely ;).\n\n### Useful utilities\n\nThere are few useful utilities provided:\n\n* `as_dot_dict` - creates dictionary wrapper with support for property-like access \n  to the values: `as_dot_dict(d).some_key.some_list[1].some_value`\n* `unwrap_dot_dict` - un-wraps DotDicts back into the raw dict/list\n* `ls`, `glob_ls` - lists files and directories\n* `write_to_file`, `read_file`, `read_file_bin` - file content manipulation\n* `chmod_set`, `chmod_unset` - sets/unsets file mode bits\n* `acquire_file_lock`, `FileBasedLock` - handles file based locking\n* `re_match_all` - runs regular expression matching across the list and returns selected \n  group from the matched elements\n* `in_background` - runs function in background thread pool\n* [`StringWrapper`](src/pyshrimp/utils/string_wrapper.py) - provides few methods especially useful for parsing process output\n* `parse_table` - parses table-like output into `ParsedTable`\n* `create_regex_splitter` - creates `regex_splitter` - useful to handle unusual table/column-like output\n* `wait_until`, `wait_until_gen` - handles waiting for some result with timeout using periodic polling\n\nYou can see example usage in [examples](examples) and also in [tests](tests).\n\n### Easily run programs - simple subprocess helper\n\nThe subprocess helper simplifies the task of running processes and handling the results.\n\n```python\nfrom pyshrimp import run_process\nprint(\n  run_process('echo -n 123 | wc -c', run_in_shell=True).raise_if_not_ok().standard_output\n)\n```\n\n### More advanced subprocess helper\n\nThe `cmd` and `shell_cmd` will produce `Command` object which can be executed with extra params:\n\n```python\nfrom pyshrimp import shell_cmd\nwc_c = shell_cmd('echo -n \"$1\" | wc -c', check=True)\nprint(wc_c('123456789').standard_output.strip()) // 9\nprint(wc_c.exec('123').standard_output.strip()) // 3\n```\n\nIt is worth noting here that standard_output and error_output\nare [wrapped with `StringWrapper`](src/pyshrimp/utils/string_wrapper.py) to ease output parsing.\n\n## Pipeline support\n\n### Motivation\n\nThe nice property about bash scripts is how easy it is to executed process and pass the output between processes. It's\nall possible in python but the overhead is really too big to use in small scripts. It's more convenient to fallback into\nsubprocess with partial shell script than glue together the processes directly in python code.\n\n### Solution\n\nThe `ExecutionPipeline` is designed to address those concerns. You can easily stitch together few processes and\nfunctions together to process the input and output just like in shell scripts.\n\nThere are two approaches - standard object-oriented python code and more shell like pipeline syntax.\n\n### Object oriented usage\n\n```python\nfrom pyshrimp import ExecutionPipeline, cmd\np = ExecutionPipeline()\n# feed pipeline with text input\np.attach_text('Hello world!')\n# run the wc command\np.attach(cmd('wc'))\n# run awk, using the shell wrapper\np.attach(\"awk '{print $3}'\")\n# process the output with function - pad with zeros\np.attach_function(\n    lambda stdin: f'{int(stdin.strip()):05}'\n)\n# close pipeline and collect output\nres = p.close().stdout\nprint(res) # 00012\n```\n\n### Shell-like pipe syntax\n\nThe shell-like syntax is \"abusing\" the python feature which allows overriding behavior of binary or operator. It's not\nvery elegant (could be confusing for people) but on the other hand this fits nicely the purpose - being easy replacement\nof shell pipes.\n\n```python\nfrom pyshrimp import PIPE, PIPE_END_STDOUT, cmd\nres = (\n    # feed pipeline with text input\n    PIPE.text('Hello world!')\n    # run the wc command\n    | cmd('wc')\n    # run awk, using the shell wrapper\n    | \"awk '{print $3}'\"\n    # process the output with function - pad with zeros\n    | (lambda stdin: f'{int(stdin.strip()):05}')\n    # close pipeline and collect output\n    | PIPE_END_STDOUT\n)\nprint(res) # 00012\n```\n\n### Mixed approach\n\nYou can mix the shell-like and object-oriented syntax (if you have good reason to do so ;)). Under the cover\nthe `ExecutionPipeline` is being used even in the shell-like syntax.\n\n```python\nfrom pyshrimp import PIPE, cmd\np = (\n    # feed pipeline with text input\n    PIPE.text('Hello world!')\n    # run the wc command\n    | cmd('wc')\n    # run awk, using the shell wrapper\n    | \"awk '{print $3}'\"\n)\n# process the output with function - pad with zeros\np.attach_function(lambda stdin: f'{int(stdin.strip()):05}')\n# close pipeline and collect output\nres = p.close().stdout\nprint(res) # 00012\n```\n\n### Limitations\n\nThings obviously missing in current version that you should be aware of:\n\n- Limited error handling support\n- Only text streams are officially supported, with UTF-8 hardcoded\n- Only connection of standard output is supported - error output behavior is undetermined (most likely flows to stderr)\n\nThose limitations can be addressed in future (if there is enough demand and willingness to introduce the change).\n\n## Troubleshooting\n\n### Diagnosing virtual env setup failure\n\nYou can set `PYSHRIMP_LOG` environment variable to `1` this will instruct boostrap code to\nproduce diagnostic messages:\n\n```shell\n% PYSHRIMP_LOG=1 ./show_recently_created_issues.py a b\n[PyShrimp:bootstrap] INFO: target: ./show_recently_created_issues.py\n[PyShrimp:bootstrap] INFO: args: ['a', 'b']\n[PyShrimp:bootstrap] INFO: Using requirements d82e6efbb5ea5ba895b6fe103b4c50bf3ac75eb3: [\n  'pyshrimp', 'click==7.0'\n]\n[PyShrimp:bootstrap] INFO: Executing the script: [\n  '~/.cache/pyshrimp/virtual_envs/d82e6e.../bin/python', '-u', \n  '-m', 'pyshrimp._internal.wrapper.magicwrapper', \n  '--', './show_recently_created_issues.py', 'a', 'b'\n]\n  \nHello world\n```\n\n## Supported environment\n\nThis project was developed on **Ubuntu Linux**. It should work with any linux system, but I can imagine the tests\nfailing in case some system binaries are missing.\n\nIt was not tested on macOS (probably will work fine) and some parts for sure will not work on Windows\n(e.g. shell wrapping is depending on bash).\n\nFeel free to raise bugs found when using this project on macOS - it shouldn't be too hard to address them.\n\nThe author does not have plans to introduce support for Windows but contributions are welcome ;).\n\n## License\n\nThe project is licensed under [MIT License](./LICENSE.txt) with exceptions listed below.\n\nProject license exceptions:\n\n1. The files in [doc/assets/img/logo](doc/assets/img/logo) and [docs/assets/img/logo](doc/assets/img/logo) directory\n   are licensed under [CC BY-SA 3.0 license](https://creativecommons.org/licenses/by/3.0/legalcode).\n\n## Contributions\n\nFeel free to contribute to this project - I'll do my best to review and accept contributions.\n\nPlease include at least some happy-path tests for your changes.\n\n## Imaginary Q&A\n\nQ: Shouldn't this project be separated into few ones (e.g. pipelines, commands, script bootstrap)?  \nA: Probably yes. And maybe it will be split in the future. But for now it's more convenient to manage single project.\n\n## Credits\n\n- The logo was created using [\"Shrimp\" icon](https://thenounproject.com/elabans/collection/seafood/?i=541402)\n  created by [\"elmars\"](https://thenounproject.com/elabans/) and published \n  under [CC BY-SA 3.0 license](https://creativecommons.org/licenses/by/3.0/us/legalcode).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/osomdev/pyshrimp",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyshrimp",
    "package_url": "https://pypi.org/project/pyshrimp/",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/pyshrimp/",
    "project_urls": {
      "Bug Tracker": "https://github.com/osomdev/pyshrimp/issues",
      "Homepage": "https://github.com/osomdev/pyshrimp"
    },
    "release_url": "https://pypi.org/project/pyshrimp/0.6.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "PyShrimp",
    "version": "0.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17249562,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a611e47dd8f0b9b783b8e47555572d5224d850ab9003d04f45180edbef8f5af",
          "md5": "5c5dc9afb886f932dae5720160c118d8",
          "sha256": "4539ebd6a95b500cf00c9973f40ed5debc993a6409cd8fea01d8040080434161"
        },
        "downloads": -1,
        "filename": "pyshrimp-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c5dc9afb886f932dae5720160c118d8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 29721,
        "upload_time": "2021-11-27T19:42:31",
        "upload_time_iso_8601": "2021-11-27T19:42:31.804383Z",
        "url": "https://files.pythonhosted.org/packages/1a/61/1e47dd8f0b9b783b8e47555572d5224d850ab9003d04f45180edbef8f5af/pyshrimp-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45d5e9809732b4f2354a0a1163ec2403eba677e00ef874909b4df16fb37cef2d",
          "md5": "eb9b5aaee0001781243bbad4b38cf96f",
          "sha256": "e4ead60e264012f9dd4ed41bab5913ad20c70e5906c46ec9d6938c5a5c8beee8"
        },
        "downloads": -1,
        "filename": "pyshrimp-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "eb9b5aaee0001781243bbad4b38cf96f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27422,
        "upload_time": "2021-11-27T19:42:33",
        "upload_time_iso_8601": "2021-11-27T19:42:33.214831Z",
        "url": "https://files.pythonhosted.org/packages/45/d5/e9809732b4f2354a0a1163ec2403eba677e00ef874909b4df16fb37cef2d/pyshrimp-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cd2066247688c323f4a665e63137cfe7447ee1734717a926094acc7fa571cbd",
          "md5": "ae3dd489ae9fdb5d15b20028d6a5032d",
          "sha256": "6514b260255bb2c8c3f393da33b63b35431a9977ea3abf89b8229bc1052e5b57"
        },
        "downloads": -1,
        "filename": "pyshrimp-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ae3dd489ae9fdb5d15b20028d6a5032d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 31821,
        "upload_time": "2021-12-19T16:17:56",
        "upload_time_iso_8601": "2021-12-19T16:17:56.605474Z",
        "url": "https://files.pythonhosted.org/packages/8c/d2/066247688c323f4a665e63137cfe7447ee1734717a926094acc7fa571cbd/pyshrimp-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ca96d8d76d83eb6b7f961688484e0f1c2e17116876880c1379e3734a9c97c65",
          "md5": "e8c428a2c81683ecf6589f8fb17e7128",
          "sha256": "391bf07999be137bae80e0342fadb16516ec9162ddcb535009d13fa20da8b5f7"
        },
        "downloads": -1,
        "filename": "pyshrimp-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e8c428a2c81683ecf6589f8fb17e7128",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29062,
        "upload_time": "2021-12-19T16:17:58",
        "upload_time_iso_8601": "2021-12-19T16:17:58.518350Z",
        "url": "https://files.pythonhosted.org/packages/0c/a9/6d8d76d83eb6b7f961688484e0f1c2e17116876880c1379e3734a9c97c65/pyshrimp-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ec9ba748610470e4e9a5e7a0e594145ca4b2e0538966a11ea89c7dec2430747",
          "md5": "90bd29d4f2c7c6ba1cacd9cfbfc5316c",
          "sha256": "dd156d2864ec49d04ce53af744ab5137799a80e37375d46c0eec8375e930e4fc"
        },
        "downloads": -1,
        "filename": "pyshrimp-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90bd29d4f2c7c6ba1cacd9cfbfc5316c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 31857,
        "upload_time": "2022-05-08T15:32:19",
        "upload_time_iso_8601": "2022-05-08T15:32:19.763593Z",
        "url": "https://files.pythonhosted.org/packages/5e/c9/ba748610470e4e9a5e7a0e594145ca4b2e0538966a11ea89c7dec2430747/pyshrimp-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54818c7d0278e8d5ddc4c48a75016400b7bd12e9977594bbe22882a492deeb87",
          "md5": "ad7582d421005bcb866c422dbaa20028",
          "sha256": "9576da9edff792d56e23251ab49844398ca1db3a24bcd89de6415b6d4508c690"
        },
        "downloads": -1,
        "filename": "pyshrimp-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ad7582d421005bcb866c422dbaa20028",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29382,
        "upload_time": "2022-05-08T15:32:21",
        "upload_time_iso_8601": "2022-05-08T15:32:21.943282Z",
        "url": "https://files.pythonhosted.org/packages/54/81/8c7d0278e8d5ddc4c48a75016400b7bd12e9977594bbe22882a492deeb87/pyshrimp-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0211a6a1c8dbb15691e0f0c58fd24ef79bda155869df88c05b56d85d1153998d",
          "md5": "9eb53c6bb88b94c62309bf7bb8d35d3a",
          "sha256": "fcff7c57812c689d43248b6c2a1e644c6b445addbafc91e556c86d0fe49a6de5"
        },
        "downloads": -1,
        "filename": "pyshrimp-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9eb53c6bb88b94c62309bf7bb8d35d3a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35022,
        "upload_time": "2022-12-04T16:55:53",
        "upload_time_iso_8601": "2022-12-04T16:55:53.620540Z",
        "url": "https://files.pythonhosted.org/packages/02/11/a6a1c8dbb15691e0f0c58fd24ef79bda155869df88c05b56d85d1153998d/pyshrimp-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d637201740eee8b90b79dbb7c63f4fb4f9ee1941190b3b81a08d880c31ae1661",
          "md5": "a7703dc6c66140477ece7e2145b9ac48",
          "sha256": "da0bccd16eae5e9f9b07153aa8f12029fb98aa774a3402378a59d9eccb757ec5"
        },
        "downloads": -1,
        "filename": "pyshrimp-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a7703dc6c66140477ece7e2145b9ac48",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31360,
        "upload_time": "2022-12-04T16:55:55",
        "upload_time_iso_8601": "2022-12-04T16:55:55.475831Z",
        "url": "https://files.pythonhosted.org/packages/d6/37/201740eee8b90b79dbb7c63f4fb4f9ee1941190b3b81a08d880c31ae1661/pyshrimp-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "864b84822773b834ae77454b9c39d35a67d4166c5c2fd93369ec4622eebed871",
          "md5": "e962b76848864eb2c517c32c71fa2fdc",
          "sha256": "cf46fa3356c5e86eb1241f666d9487feaeccd24ac6120fbc203ac4cb778edca3"
        },
        "downloads": -1,
        "filename": "pyshrimp-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e962b76848864eb2c517c32c71fa2fdc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35394,
        "upload_time": "2023-03-10T19:48:35",
        "upload_time_iso_8601": "2023-03-10T19:48:35.435730Z",
        "url": "https://files.pythonhosted.org/packages/86/4b/84822773b834ae77454b9c39d35a67d4166c5c2fd93369ec4622eebed871/pyshrimp-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d793a375cb4b89d238212f6a932512376e1a5f3b7ba02e8e55a8b87e621b8d1",
          "md5": "6d22f3c6f0ec4ecc1925edfc61be2e2d",
          "sha256": "f763ffef5f66339c3eb88f079f3828584fef153b31328ac4e10b1eb0097c4c3c"
        },
        "downloads": -1,
        "filename": "pyshrimp-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6d22f3c6f0ec4ecc1925edfc61be2e2d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31574,
        "upload_time": "2023-03-10T19:48:37",
        "upload_time_iso_8601": "2023-03-10T19:48:37.448714Z",
        "url": "https://files.pythonhosted.org/packages/9d/79/3a375cb4b89d238212f6a932512376e1a5f3b7ba02e8e55a8b87e621b8d1/pyshrimp-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c79ae7ea7b96a86d9ad158e81b68866d22475663459e82e8452518af5c680ff2",
          "md5": "f18ef5029dff77da43904e0738c8e6c4",
          "sha256": "90b51dc88235098f9dfdb53576cc6128288b67f0e6a0a882f9227c58271b0325"
        },
        "downloads": -1,
        "filename": "pyshrimp-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f18ef5029dff77da43904e0738c8e6c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35675,
        "upload_time": "2023-03-11T07:30:27",
        "upload_time_iso_8601": "2023-03-11T07:30:27.716931Z",
        "url": "https://files.pythonhosted.org/packages/c7/9a/e7ea7b96a86d9ad158e81b68866d22475663459e82e8452518af5c680ff2/pyshrimp-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d27bb0736b1b6eacb88640bb3d9494ff7f223a5d0899b624f44f2d0717b4dc9d",
          "md5": "62e65a5e21d4c2ca223ca55730a46430",
          "sha256": "d8c0069935c01e02b6827382690a008977cac7246dae928fa22f4f404289751e"
        },
        "downloads": -1,
        "filename": "pyshrimp-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "62e65a5e21d4c2ca223ca55730a46430",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31895,
        "upload_time": "2023-03-11T07:30:30",
        "upload_time_iso_8601": "2023-03-11T07:30:30.034300Z",
        "url": "https://files.pythonhosted.org/packages/d2/7b/b0736b1b6eacb88640bb3d9494ff7f223a5d0899b624f44f2d0717b4dc9d/pyshrimp-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c79ae7ea7b96a86d9ad158e81b68866d22475663459e82e8452518af5c680ff2",
        "md5": "f18ef5029dff77da43904e0738c8e6c4",
        "sha256": "90b51dc88235098f9dfdb53576cc6128288b67f0e6a0a882f9227c58271b0325"
      },
      "downloads": -1,
      "filename": "pyshrimp-0.6.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f18ef5029dff77da43904e0738c8e6c4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 35675,
      "upload_time": "2023-03-11T07:30:27",
      "upload_time_iso_8601": "2023-03-11T07:30:27.716931Z",
      "url": "https://files.pythonhosted.org/packages/c7/9a/e7ea7b96a86d9ad158e81b68866d22475663459e82e8452518af5c680ff2/pyshrimp-0.6.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d27bb0736b1b6eacb88640bb3d9494ff7f223a5d0899b624f44f2d0717b4dc9d",
        "md5": "62e65a5e21d4c2ca223ca55730a46430",
        "sha256": "d8c0069935c01e02b6827382690a008977cac7246dae928fa22f4f404289751e"
      },
      "downloads": -1,
      "filename": "pyshrimp-0.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "62e65a5e21d4c2ca223ca55730a46430",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 31895,
      "upload_time": "2023-03-11T07:30:30",
      "upload_time_iso_8601": "2023-03-11T07:30:30.034300Z",
      "url": "https://files.pythonhosted.org/packages/d2/7b/b0736b1b6eacb88640bb3d9494ff7f223a5d0899b624f44f2d0717b4dc9d/pyshrimp-0.6.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}