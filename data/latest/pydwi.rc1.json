{
  "info": {
    "author": "Georgios Kaissis",
    "author_email": "gkaissis@users.noreply.github.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# PyDWI\n> Fast ADC and DKI maps from DWI.\n\n\n## Install\n\n`pip install pydwi`\n\n## How to use\n\n`PyDWI` supports interactive usage __only__ at the moment. Command-line usage is planned for the future.\n\n```python\nfrom PyDWI.core import DWIDataset, get_ADC_dataset, get_DKI_dataset, save_nii, show\n```\n\nFirst, instantiate a `DWIDataset` class:\n\n```python\ndata = DWIDataset(\"1.dcm\")\n```\n\n    Loading and rescaling...\n    Successfully loaded Dataset\n\n\nYou can have get information about the dataset by printing `data.info`\n\n```python\nprint(data.info)\n```\n\n    DICOMDataset with 185 slices in groups of 5 slices each\n            rescaled with slope 1.7836 and intercept 0.0000.\n\n\nYou can get information about the logical slice groups using `data.slice_groups`\n\n```python\ndata.slice_groups\n```\n\n\n\n\n    [SliceGroup at position [-83.12] with instance numbers [4 8 12 16 20],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-80.12] with instance numbers [24 28 32 36 40],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-77.12] with instance numbers [44 48 52 56 60],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-74.12] with instance numbers [64 68 72 76 80],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-71.12] with instance numbers [84 88 92 96 100],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-68.12] with instance numbers [104 108 112 116 120],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-65.12] with instance numbers [124 128 132 136 140],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-62.12] with instance numbers [144 148 152 156 160],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-59.12] with instance numbers [164 168 172 176 180],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-56.12] with instance numbers [184 188 192 196 200],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-53.12] with instance numbers [204 208 212 216 220],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-50.12] with instance numbers [224 228 232 236 240],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-47.12] with instance numbers [244 248 252 256 260],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-44.12] with instance numbers [264 268 272 276 280],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-41.12] with instance numbers [284 288 292 296 300],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-38.12] with instance numbers [304 308 312 316 320],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-35.12] with instance numbers [324 328 332 336 340],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-32.12] with instance numbers [344 348 352 356 360],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-29.12] with instance numbers [364 368 372 376 380],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-26.12] with instance numbers [384 388 392 396 400],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-23.12] with instance numbers [404 408 412 416 420],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-20.12] with instance numbers [424 428 432 436 440],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-17.12] with instance numbers [444 448 452 456 460],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-14.12] with instance numbers [464 468 472 476 480],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-11.12] with instance numbers [484 488 492 496 500],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-8.12] with instance numbers [504 508 512 516 520],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-5.12] with instance numbers [524 528 532 536 540],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [-2.12] with instance numbers [544 548 552 556 560],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [0.88] with instance numbers [564 568 572 576 580],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [3.88] with instance numbers [584 588 592 596 600],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [6.88] with instance numbers [604 608 612 616 620],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [9.88] with instance numbers [624 628 632 636 640],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [12.88] with instance numbers [644 648 652 656 660],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [15.88] with instance numbers [664 668 672 676 680],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [18.88] with instance numbers [684 688 692 696 700],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [21.88] with instance numbers [704 708 712 716 720],\n                      b_values [0 50 300 600 1000] and 5 slices.,\n     SliceGroup at position [24.88] with instance numbers [724 728 732 736 740],\n                      b_values [0 50 300 600 1000] and 5 slices.]\n\n\n\n`len(slice_groups)` gives you the number of usable slices\n\n```python\nlen(data.slice_groups)\n```\n\n\n\n\n    37\n\n\n\nYou can get additional information on the slice groups:\n\n```python\ndata.slice_groups[0]\n```\n\n\n\n\n    SliceGroup at position [-83.12] with instance numbers [4 8 12 16 20],\n                     b_values [0 50 300 600 1000] and 5 slices.\n\n\n\nYou can see some slices by calling `show`:\n\n```python\ndata.slice_groups[0].show()\n```\n\n\n![png](docs/images/output_16_0.png)\n\n\nYou can get ADC maps by calling `get_ADC_dataset`. By default this runs in parallel and is quite fast.\n\n```python\n%%time\nADC_maps = get_ADC_dataset(data)\n```\n\n    CPU times: user 2.32 s, sys: 42.3 ms, total: 2.36 s\n    Wall time: 310 ms\n\n\nYou can get DKI maps by calling `get_DKI_dataset`. This also runs in parallel but takes around 10 minutes per dataset for around 30 slices.\n\n```python\n%%time\nD_maps, K_maps = get_DKI_dataset(data)\n```\n\n    [Parallel(n_jobs=-1)]: Using backend LokyBackend with 16 concurrent workers.\n\n\n    CPU times: user 1.11 s, sys: 304 ms, total: 1.41 s\n    Wall time: 10min 1s\n\n\n    [Parallel(n_jobs=-1)]: Done  37 out of  37 | elapsed: 10.0min finished\n\n\nYou can have a look at slices by calling `show` which is a utility function\n\n```python\nshow(D_maps[0])\n```\n\n\n\n\n    <matplotlib.image.AxesImage at 0x7fa5c99021d0>\n\n\n\n\n![png](docs/images/output_22_1.png)\n\n\n```python\nshow(K_maps[0])\n```\n\n\n\n\n    <matplotlib.image.AxesImage at 0x7fa5bb4d4f90>\n\n\n\n\n![png](docs/images/output_23_1.png)\n\n\nFinally, you can save `.nii.gz` files by calling `save_nii` and providing a filename without the `nii.gz`.\n\n```python\nsave_nii(D_maps, \"D_maps\")\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gkaissis/PyDWI/tree/master/",
    "keywords": "Python,ADC,DWI,DKI,diffusion",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyDWI",
    "package_url": "https://pypi.org/project/PyDWI/",
    "platform": "",
    "project_url": "https://pypi.org/project/PyDWI/",
    "project_urls": {
      "Homepage": "https://github.com/gkaissis/PyDWI/tree/master/"
    },
    "release_url": "https://pypi.org/project/PyDWI/0.0.1/",
    "requires_dist": [
      "numpy",
      "nibabel",
      "pydicom",
      "scikit-learn",
      "scipy",
      "pandas",
      "tqdm",
      "matplotlib"
    ],
    "requires_python": ">=3.7",
    "summary": "Fast ADC and DKI maps",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7379076,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e76e3bb65e91d3ec944455dc811adf76ebd8560e1924dce59d87e535557a31e",
          "md5": "c5ea9e298aa6b72bb3c066aeb1d271c8",
          "sha256": "c63ff276cb8be42093f757206666753e0f14749eba560983be30c993d15357ea"
        },
        "downloads": -1,
        "filename": "PyDWI-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c5ea9e298aa6b72bb3c066aeb1d271c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10644,
        "upload_time": "2020-06-02T14:45:45",
        "upload_time_iso_8601": "2020-06-02T14:45:45.493490Z",
        "url": "https://files.pythonhosted.org/packages/9e/76/e3bb65e91d3ec944455dc811adf76ebd8560e1924dce59d87e535557a31e/PyDWI-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "567ee48dd0d121aa66e2812cb7680609ccd0ab88f4961a7cc7b3d9306a815b2c",
          "md5": "cd8595a7ef469f29e61e7e89bfec460e",
          "sha256": "12669630443b21cbf9aa11194a8c66c1336aecd77fcfbf7005e5f1474b050902"
        },
        "downloads": -1,
        "filename": "PyDWI-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cd8595a7ef469f29e61e7e89bfec460e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13075,
        "upload_time": "2020-06-02T14:45:48",
        "upload_time_iso_8601": "2020-06-02T14:45:48.389711Z",
        "url": "https://files.pythonhosted.org/packages/56/7e/e48dd0d121aa66e2812cb7680609ccd0ab88f4961a7cc7b3d9306a815b2c/PyDWI-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9e76e3bb65e91d3ec944455dc811adf76ebd8560e1924dce59d87e535557a31e",
        "md5": "c5ea9e298aa6b72bb3c066aeb1d271c8",
        "sha256": "c63ff276cb8be42093f757206666753e0f14749eba560983be30c993d15357ea"
      },
      "downloads": -1,
      "filename": "PyDWI-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c5ea9e298aa6b72bb3c066aeb1d271c8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 10644,
      "upload_time": "2020-06-02T14:45:45",
      "upload_time_iso_8601": "2020-06-02T14:45:45.493490Z",
      "url": "https://files.pythonhosted.org/packages/9e/76/e3bb65e91d3ec944455dc811adf76ebd8560e1924dce59d87e535557a31e/PyDWI-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "567ee48dd0d121aa66e2812cb7680609ccd0ab88f4961a7cc7b3d9306a815b2c",
        "md5": "cd8595a7ef469f29e61e7e89bfec460e",
        "sha256": "12669630443b21cbf9aa11194a8c66c1336aecd77fcfbf7005e5f1474b050902"
      },
      "downloads": -1,
      "filename": "PyDWI-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "cd8595a7ef469f29e61e7e89bfec460e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 13075,
      "upload_time": "2020-06-02T14:45:48",
      "upload_time_iso_8601": "2020-06-02T14:45:48.389711Z",
      "url": "https://files.pythonhosted.org/packages/56/7e/e48dd0d121aa66e2812cb7680609ccd0ab88f4961a7cc7b3d9306a815b2c/PyDWI-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}