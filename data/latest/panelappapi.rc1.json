{
  "info": {
    "author": "Edoardo Giacopuzzi",
    "author_email": "edoardo.giacopuzzi@fht.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "> Description from GitHub `readme.md`:\n# PanelApp tools\n\nThis containts a simple class to interact with the PanelApp API. See the (PanelApp website)[https://panelapp.genomicsengland.co.uk/]\n\nThe main class is `PanelApp`.\n\n\nThis also expose a cli command `panelapp_dump` that can be used to download PanelApp panels to tables. By default, it will download GREEN and AMBER genes for all panels in GRCh38 version into `panelapp_[currentdate]` folder.\n\nYou can user arguments to change genome build, output folder and gene confidence level (see `--help`)\n\nFollowing methods are available in the `PanelApp` class\n\n- `listPanels(self, panel_id=False, name=False, disease=False)` :\nReturn pandas dataframe of panels based on the search criteria. When no criteria used returns for all panels. Search criteria work as OR.\n        \n- `getPanelId(self, name='.*', disease='.*')`\nReturn list of panels ids according to the search criteria.  Search criteria work as OR.\n\n- `getGenes(self, pid=False, name=False, disease=False, level=3, out_format=\"df\", build=\"GRCh38\")`\nReturn True/False (indicating if any genes found) and a pandas dataframe for the genes of interest. First search for relevant panels using the `pid`, `name` and `disease`, then for the resulting panels get genes informations for genes with level above the value set by `level` option (level 3 = GREEN genes, 2 = AMBER, 1 = RED). \nYou can ask for `GRCh38` or `GRCh37` coordinates and the returned dataframe can be structure as a BED file using `out_format=\"bed\"`\n\n- `dumpPanels(self, output_dir, panels=\"all\", level=3, build=\"GRCh38\")`\nSave panels to disk as tables of genes named by panel id and also save a index table describing panels for each panel id.\nYou can pass a list of panel ids to `panels` or use all to save all panels. \nYou can set the minimum level of confidence for saved genes using `level` and the genome build for coordinates using `build`.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/edg1983/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PanelAppAPI",
    "package_url": "https://pypi.org/project/PanelAppAPI/",
    "platform": "",
    "project_url": "https://pypi.org/project/PanelAppAPI/",
    "project_urls": {
      "Homepage": "https://github.com/edg1983/"
    },
    "release_url": "https://pypi.org/project/PanelAppAPI/1.1/",
    "requires_dist": [
      "pandas",
      "requests"
    ],
    "requires_python": "",
    "summary": "Python3 client API for PanelApp",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12755006,
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d3c39322a827ee2fff38db6a3f9e73cd858123ccfa813d281a02ae0d827eacd",
          "md5": "f25e5e2a142ed13574e84900e9c2c7ac",
          "sha256": "a30d8d790aa4e95587025b9ec03da73e71a8eccba5ab069ccdcf84f368a48a00"
        },
        "downloads": -1,
        "filename": "PanelAppAPI-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f25e5e2a142ed13574e84900e9c2c7ac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6059,
        "upload_time": "2022-02-01T13:37:15",
        "upload_time_iso_8601": "2022-02-01T13:37:15.226617Z",
        "url": "https://files.pythonhosted.org/packages/1d/3c/39322a827ee2fff38db6a3f9e73cd858123ccfa813d281a02ae0d827eacd/PanelAppAPI-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a379e09492f3818780a2d1125568f41d59974ee92dcf82c37f38bc8d758b04f",
          "md5": "5d0324d37fd01528de42940f305b867d",
          "sha256": "da6d5df81d5d6e43ad147721f90cdd464064a0e38aa0c501eef3c5c7fd26220f"
        },
        "downloads": -1,
        "filename": "PanelAppAPI-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5d0324d37fd01528de42940f305b867d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5313,
        "upload_time": "2022-02-01T13:37:16",
        "upload_time_iso_8601": "2022-02-01T13:37:16.499698Z",
        "url": "https://files.pythonhosted.org/packages/8a/37/9e09492f3818780a2d1125568f41d59974ee92dcf82c37f38bc8d758b04f/PanelAppAPI-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d3c39322a827ee2fff38db6a3f9e73cd858123ccfa813d281a02ae0d827eacd",
        "md5": "f25e5e2a142ed13574e84900e9c2c7ac",
        "sha256": "a30d8d790aa4e95587025b9ec03da73e71a8eccba5ab069ccdcf84f368a48a00"
      },
      "downloads": -1,
      "filename": "PanelAppAPI-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f25e5e2a142ed13574e84900e9c2c7ac",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6059,
      "upload_time": "2022-02-01T13:37:15",
      "upload_time_iso_8601": "2022-02-01T13:37:15.226617Z",
      "url": "https://files.pythonhosted.org/packages/1d/3c/39322a827ee2fff38db6a3f9e73cd858123ccfa813d281a02ae0d827eacd/PanelAppAPI-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a379e09492f3818780a2d1125568f41d59974ee92dcf82c37f38bc8d758b04f",
        "md5": "5d0324d37fd01528de42940f305b867d",
        "sha256": "da6d5df81d5d6e43ad147721f90cdd464064a0e38aa0c501eef3c5c7fd26220f"
      },
      "downloads": -1,
      "filename": "PanelAppAPI-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5d0324d37fd01528de42940f305b867d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5313,
      "upload_time": "2022-02-01T13:37:16",
      "upload_time_iso_8601": "2022-02-01T13:37:16.499698Z",
      "url": "https://files.pythonhosted.org/packages/8a/37/9e09492f3818780a2d1125568f41d59974ee92dcf82c37f38bc8d758b04f/PanelAppAPI-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}