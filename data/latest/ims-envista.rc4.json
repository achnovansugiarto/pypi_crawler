{
  "info": {
    "author": "Guy Khmelnitsky",
    "author_email": "guykhmel@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# IMS Envista\n==========================\n\n[![Pypi](https://img.shields.io/pypi/v/ims-envista.svg)](https://pypi.python.org/pypi/ims-envista)\n[![Downloads](https://static.pepy.tech/badge/ims-envista)](https://pepy.tech/project/py-ims-envista) \n[![CI](https://github.com/GuyKh/py-ims-envista/actions/workflows/ci.yml/badge.svg)](https://github.com/GuyKh/pi-ims-envista/actions)\n[![CodeQuality](https://scrutinizer-ci.com/g/GuyKh/py-ims-envista/badges/quality-score.png?b=main)](https://scrutinizer-ci.com/g/GuyKh/py-ims-envista?b=main)\n[![DownloadFormats](https://img.shields.io/pypi/format/ims-envista)](https://img.shields.io/pypi/format/ims-envista) \n\n*ims_envista*  is an unofficial IMS (Israel Meteorological Service) python API wrapper for Envista service.\n\n## Features supported\n\n* Get latest meteorological readings from IMS Envista\n* Get measurement data by region, station and date range.\n* Get Daily and Monthly readings by measurement station.\n\n## Components and Frameworks used\n\n* [Loguru](https://pypi.org/project/loguru/)\n* [Requests ](https://pypi.org/project/requests/)\n* [urllib3](https://pypi.org/project/urllib3/)\n\n## Installing\n\n```bash\npip3 install --upgrade ims-envista\n```\n\n## Working with the API\n\nweatheril can be configured to retrive forecast information for specific location. when initiating the library you must set the location id and language (Currently only he and en are supported)\n\n### Getting an IMS Token\nYou can read about the API and about how to get a token [here](https://ims.gov.il/en/ObservationDataAPI) - signing terms of use, etc.\n\n```python\nfrom ims_envista import IMSEnvista\n\n# Create IMS object with Token\nims = IMSEnvista(\"2cc57fb1-cda5-4965-af12-b397e5b8eb32\")\n\n# Get JERUSALEM stations for getting an id\n[station for station in ims.get_all_stations_info() if station.name.startswith(\"JERUSALEM\")]\n> [JERUSALEM GIVAT RAM(22) - Location: [Lat - 31.771 / Long - 35.197], Active, Owner: ims, RegionId: 7, Monitors: [\n    Rain(mm), WSmax(m / sec), WDmax(deg), WS(m / sec), WD(deg), STDwd(deg), TD(degC), RH( %), TDmax(degC), TDmin(\n    degC), Grad(w / m2), DiffR(w / m2), WS1mm(m / sec), Ws10mm(m / sec), Time(hhmm), NIP(\n    w / m2)], StationTarget:, JERUSALEM\nCENTRE(23) - Location: [Lat - 31.781 / Long - 35.222], Active, Owner: ims, RegionId: 7, Monitors: [Rain(mm),\n                                                                                                   WSmax(m / sec),\n                                                                                                   WDmax(deg),\n                                                                                                   WS(m / sec), WD(deg),\n                                                                                                   STDwd(deg), TD(degC),\n                                                                                                   TDmax(degC),\n                                                                                                   TDmin(degC),\n                                                                                                   WS1mm(m / sec),\n                                                                                                   Ws10mm(m / sec),\n                                                                                                   Time(hhmm), BP(mb),\n                                                                                                   RH( %)], StationTarget:, JERUSALEM\nCENTRE_1m(248) - Location: [Lat - 31.7806 / Long - 35.2217], Active, Owner: ims, RegionId: 7, Monitors: [Rain_1_min(mm),\n                                                                                                         Rain_Corr(\n                                                                                                             mm)], StationTarget:, JERUSALEM\nGIVAT\nRAM_1m(249) - Location: [Lat - 31.7704 / Long - 35.1973], Active, Owner: ims, RegionId: 7, Monitors: [Rain_1_min(mm),\n                                                                                                      Rain_Corr(\n                                                                                                          mm)], StationTarget:]\n\n# Get latest data by a station id\nims.get_latest_station_data(23)\n> Station(23), Data: [Station: 23, Date: 2023 - 02 - 21\n12: 00:00 + 02: 00, Readings: [(TD: 17.6°C), (TDmax: 17.8°C), (TDmin: 17.5°C), (RH: 58.0 %), (Rain: 0.0mm),\n                               (WS: 2.8m / s), (WSmax: 3.7m / s), (WD: 285.0deg), (WDmax: 289.0deg), (STDwd: 10.5deg),\n                               (WS1mm: 3.4m / s), (WS10mm: 2.9m / s)]]\n```\n\n## Methods\n\n| Method  | Description  | Parameters  | Returns  |\n|--- |--- |--- |--- |\n| get_latest_station_data  | Get Latest Station Readings  | station_id: int, <br>(optional) channel_id: int  | [StationMeteorologicalReadings](./ims_envista/meteo_data.py)  |\n| get_earliest_station_data  | Get Earliest Station Readings  | station_id: int, <br>(optional) channel_id: int  | [StationMeteorologicalReadings](./ims_envista/meteo_data.py)  |\n| get_station_data_from_date  | Get Station Reading from a specific date  | station_id: int, <br>date: datetime, <br>(optional) channel_id: int  | [StationMeteorologicalReadings](./ims_envista/meteo_data.py)  |\n| get_station_data_by_date_range  | Get Station Readings from a date range  | station_id: int, <br>from_date: datetime, <br>to_date: datetime, <br>(optional) channel_id: int  | [StationMeteorologicalReadings](./ims_envista/meteo_data.py)  |\n| get_daily_station_data  | Get Daily Station Readings  | station_id: int, <br>(optional) channel_id: int  | [StationMeteorologicalReadings](./ims_envista/meteo_data.py)  |\n| get_monthly_station_data  | Get Monthly Station Readings  | station_id: int, <br>(optional) channel_id: int, <br>(optional) month: str, [e.g. 03]<br>(optional) year: str [e.g. 2020]  | [StationMeteorologicalReadings](./ims_envista/meteo_data.py)  |\n| get_all_stations_data  | Get Station Info of all stations  |   | list[[Station](./ims_envista/station_data.py)]  |\n| get_station_data  | Get Station Info by station_id  | station_id: int  | [Station](./ims_envista/station_data.py)  |\n| get_all_regions_data  | Get Region Info of all regions  |   | list[[Region](./ims_envista/station_data.py)]  |\n| get_region_info  | Get Region Info by region_id  | station_id: int  | [Region](./ims_envista/station_data.py)  |\n| get_metric_descriptions  | Get Station Measurements Description  |   | list[IMSVariable](./ims_envista/ims_variable.py)  |\n\n## Local Development\n\n### Clone from Github\n\nClone the repo from GitHub\n\n```\ngit clone git@github.com:GuyKh/ims-envista.git\n```\n\n### Requirements\n\nPackage requirements are handled using pip. To install them do\n\n```\npip install -r requirements.txt\n```\n\n### Local Installation\n\nTo install locally:\n\n```\npython setup.py install\n```\n\n## Tests\n\nTesting is set up using [pytest](http://pytest.org) and coverage is handled\nwith the pytest-cov plugin.\n\nRun your tests with ```py.test``` in the root directory.\n\nCoverage is ran by default and is set in the ```pytest.ini``` file.\nTo see an html output of coverage open ```htmlcov/index.html``` after running the tests.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GuyKh/py-ims-envista",
    "keywords": "ims,weatheril,Israel Meteorological Service,Meteorological Service,weather",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ims-envista",
    "package_url": "https://pypi.org/project/ims-envista/",
    "platform": null,
    "project_url": "https://pypi.org/project/ims-envista/",
    "project_urls": {
      "Homepage": "https://github.com/GuyKh/py-ims-envista"
    },
    "release_url": "https://pypi.org/project/ims-envista/0.0.4/",
    "requires_dist": [
      "requests",
      "urllib3",
      "loguru"
    ],
    "requires_python": ">=3.6",
    "summary": "Israel Meteorological Service Envista API wrapper package",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17163174,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a2015680d0a7618830050e9174b64b0167043db27e9157ec2b8ad4bbcdfab1a",
          "md5": "76ae814cae3d5bbd278af89a33f17b15",
          "sha256": "4f269e081be383e78e30bb660787b615335045fa74274999962666fa1736eb22"
        },
        "downloads": -1,
        "filename": "ims_envista-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "76ae814cae3d5bbd278af89a33f17b15",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12027,
        "upload_time": "2023-02-22T08:03:18",
        "upload_time_iso_8601": "2023-02-22T08:03:18.918944Z",
        "url": "https://files.pythonhosted.org/packages/1a/20/15680d0a7618830050e9174b64b0167043db27e9157ec2b8ad4bbcdfab1a/ims_envista-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "117ac207f9037f6ab5e51eb44186c48ab6f42df00797b1bc44c9d23d1040aac3",
          "md5": "c2e50d9d7432629c003db3060ed2d445",
          "sha256": "bd071e80d7e0cec0919cf156e5a5ee55e59687c1e7d8cb5a5969ca0699a12a31"
        },
        "downloads": -1,
        "filename": "ims_envista-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c2e50d9d7432629c003db3060ed2d445",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11797,
        "upload_time": "2023-02-22T08:03:20",
        "upload_time_iso_8601": "2023-02-22T08:03:20.634801Z",
        "url": "https://files.pythonhosted.org/packages/11/7a/c207f9037f6ab5e51eb44186c48ab6f42df00797b1bc44c9d23d1040aac3/ims_envista-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a596aa6df988441e5a137103565e6878feeac2145b2ad2f88840d268870e705a",
          "md5": "e2dfda7ce94f85918ff73978d1c69faf",
          "sha256": "9f045b6b655cb36275bdd33e0f77040f444fd4725d1899966eb73765c7bd96e6"
        },
        "downloads": -1,
        "filename": "ims_envista-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e2dfda7ce94f85918ff73978d1c69faf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12196,
        "upload_time": "2023-02-22T14:04:06",
        "upload_time_iso_8601": "2023-02-22T14:04:06.160970Z",
        "url": "https://files.pythonhosted.org/packages/a5/96/aa6df988441e5a137103565e6878feeac2145b2ad2f88840d268870e705a/ims_envista-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "967403ba92ed06df619f82869d64c5a3ee15b1002a1e25273f9b613cd258e432",
          "md5": "2aabab6416ed13f4a7ebc39c4762de40",
          "sha256": "5ea047a71bdd299eaf6ce1490b2e3f07854c42cb7e0705ecc3fc7cad1753d3b3"
        },
        "downloads": -1,
        "filename": "ims_envista-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2aabab6416ed13f4a7ebc39c4762de40",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12007,
        "upload_time": "2023-02-22T14:04:07",
        "upload_time_iso_8601": "2023-02-22T14:04:07.335399Z",
        "url": "https://files.pythonhosted.org/packages/96/74/03ba92ed06df619f82869d64c5a3ee15b1002a1e25273f9b613cd258e432/ims_envista-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f23ee50ee36b1957547190ec8730c3c45abc7416e0b58933324fd04c68f65434",
          "md5": "c3d526274d1980725ad6d2febe693be3",
          "sha256": "b730c8ef7b2f270b1877b5f06c9f7a8ee5b62fb079c5b38b0b56d20118b9f440"
        },
        "downloads": -1,
        "filename": "ims_envista-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c3d526274d1980725ad6d2febe693be3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12319,
        "upload_time": "2023-02-23T12:00:45",
        "upload_time_iso_8601": "2023-02-23T12:00:45.692901Z",
        "url": "https://files.pythonhosted.org/packages/f2/3e/e50ee36b1957547190ec8730c3c45abc7416e0b58933324fd04c68f65434/ims_envista-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c86cb0c523c713a7953b1ce89625e469af6b5c5e35b7ad24a8e8febf3396f8d",
          "md5": "ef6b0ad96858fba8405fdcf534c7fb0c",
          "sha256": "e549fb50263fcd3005c3f8259c01f0cc6916a5be9c76590d7d11602cded502b7"
        },
        "downloads": -1,
        "filename": "ims_envista-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ef6b0ad96858fba8405fdcf534c7fb0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12059,
        "upload_time": "2023-02-23T12:00:46",
        "upload_time_iso_8601": "2023-02-23T12:00:46.798274Z",
        "url": "https://files.pythonhosted.org/packages/4c/86/cb0c523c713a7953b1ce89625e469af6b5c5e35b7ad24a8e8febf3396f8d/ims_envista-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f33cc80e5cb50845b34fd6b75d0edba4abae6de1ef934d798440c08102287ec",
          "md5": "1c48b8e96afc8590f45676785b16d7e5",
          "sha256": "05b952ffec6f513113c72c74af9058eab7b182d7de356f35b4296f21915c0137"
        },
        "downloads": -1,
        "filename": "ims_envista-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c48b8e96afc8590f45676785b16d7e5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12830,
        "upload_time": "2023-03-05T10:58:08",
        "upload_time_iso_8601": "2023-03-05T10:58:08.732873Z",
        "url": "https://files.pythonhosted.org/packages/9f/33/cc80e5cb50845b34fd6b75d0edba4abae6de1ef934d798440c08102287ec/ims_envista-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a1415c402e43d52bbcf99c04d64bba830c4da04ead548b135f3df93c997f342",
          "md5": "e9f4ce8f51d2496a0ff6a333c7e9da1d",
          "sha256": "d0932cf11dd013318ff957181d008fa1db11ac996d9aee41bf8a67e46200bfb9"
        },
        "downloads": -1,
        "filename": "ims_envista-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e9f4ce8f51d2496a0ff6a333c7e9da1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12626,
        "upload_time": "2023-03-05T10:58:10",
        "upload_time_iso_8601": "2023-03-05T10:58:10.477473Z",
        "url": "https://files.pythonhosted.org/packages/4a/14/15c402e43d52bbcf99c04d64bba830c4da04ead548b135f3df93c997f342/ims_envista-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f33cc80e5cb50845b34fd6b75d0edba4abae6de1ef934d798440c08102287ec",
        "md5": "1c48b8e96afc8590f45676785b16d7e5",
        "sha256": "05b952ffec6f513113c72c74af9058eab7b182d7de356f35b4296f21915c0137"
      },
      "downloads": -1,
      "filename": "ims_envista-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1c48b8e96afc8590f45676785b16d7e5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 12830,
      "upload_time": "2023-03-05T10:58:08",
      "upload_time_iso_8601": "2023-03-05T10:58:08.732873Z",
      "url": "https://files.pythonhosted.org/packages/9f/33/cc80e5cb50845b34fd6b75d0edba4abae6de1ef934d798440c08102287ec/ims_envista-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4a1415c402e43d52bbcf99c04d64bba830c4da04ead548b135f3df93c997f342",
        "md5": "e9f4ce8f51d2496a0ff6a333c7e9da1d",
        "sha256": "d0932cf11dd013318ff957181d008fa1db11ac996d9aee41bf8a67e46200bfb9"
      },
      "downloads": -1,
      "filename": "ims_envista-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "e9f4ce8f51d2496a0ff6a333c7e9da1d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 12626,
      "upload_time": "2023-03-05T10:58:10",
      "upload_time_iso_8601": "2023-03-05T10:58:10.477473Z",
      "url": "https://files.pythonhosted.org/packages/4a/14/15c402e43d52bbcf99c04d64bba830c4da04ead548b135f3df93c997f342/ims_envista-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}