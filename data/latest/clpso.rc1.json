{
  "info": {
    "author": "Lester James V. Miranda",
    "author_email": "ljvmiranda@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering"
    ],
    "description": "![PySwarms Logo](https://i.imgur.com/eX8oqPQ.png)\n---\n\n\n[![PyPI version](https://badge.fury.io/py/pyswarms.svg)](https://badge.fury.io/py/pyswarms)\n[![Build Status](https://dev.azure.com/ljvmiranda/ljvmiranda/_apis/build/status/ljvmiranda921.pyswarms?branchName=master)](https://dev.azure.com/ljvmiranda/ljvmiranda/_build/latest?definitionId=1&branchName=master)\n[![Documentation Status](https://readthedocs.org/projects/pyswarms/badge/?version=latest)](https://pyswarms.readthedocs.io/en/master/?badge=master)\n[![License: MIT](https://img.shields.io/badge/license-MIT-blue.svg )](https://raw.githubusercontent.com/ljvmiranda921/pyswarms/master/LICENSE)\n[![DOI](http://joss.theoj.org/papers/10.21105/joss.00433/status.svg)](https://doi.org/10.21105/joss.00433)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n[![Gitter Chat](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/pyswarms/Issues)\n\nPySwarms is an extensible research toolkit for particle swarm optimization\n(PSO) in Python.\n\nIt is intended for swarm intelligence researchers, practitioners, and\nstudents who prefer a high-level declarative interface for implementing PSO\nin their problems. PySwarms enables basic optimization with PSO and\ninteraction with swarm optimizations. Check out more features below!\n\n* **Free software:** MIT license\n* **Documentation:** https://pyswarms.readthedocs.io.\n* **Python versions:** 3.5 and above\n\n## Features\n\n* High-level module for Particle Swarm Optimization. For a list of all optimizers, check [this link].\n* Built-in objective functions to test optimization algorithms.\n* Plotting environment for cost histories and particle movement.\n* Hyperparameter search tools to optimize swarm behaviour.\n* (For Devs and Researchers): Highly-extensible API for implementing your own techniques.\n\n[this link]: https://pyswarms.readthedocs.io/en/latest/features.html\n\n## Installation\n\nTo install PySwarms, run this command in your terminal:\n\n```shell\n$ pip install pyswarms\n```\n\nThis is the preferred method to install PySwarms, as it will always install\nthe most recent stable release.\n\nIn case you want to install the bleeding-edge version, clone this repo:\n\n```shell\n$ git clone -b development https://github.com/ljvmiranda921/pyswarms.git\n```\nand then run\n\n```shell\n$ cd pyswarms\n$ python setup.py install\n```\n\n## Running in a Vagrant Box\n\nTo run PySwarms in a Vagrant Box, install Vagrant by going to \nhttps://www.vagrantup.com/downloads.html and downloading the proper packaged from the Hashicorp website. \n\nAfterward, run the following command in the project directory:\n\n```shell\n$ vagrant provision\n$ vagrant up\n$ vagrant ssh\n```\nNow you're ready to develop your contributions in a premade virtual environment. \n\n## Basic Usage\n\nPySwarms provides a high-level implementation of various particle swarm\noptimization algorithms. Thus, it aims to be user-friendly and customizable.\nIn addition, supporting modules can be used to help you in your optimization\nproblem.\n\n### Optimizing a sphere function\n\nYou can import PySwarms as any other Python module,\n\n```python\nimport pyswarms as ps\n```\n\nSuppose we want to find the minima of `f(x) = x^2` using global best\nPSO, simply import the built-in sphere function,\n`pyswarms.utils.functions.sphere()`, and the necessary optimizer:\n\n```python\nimport pyswarms as ps\nfrom pyswarms.utils.functions import single_obj as fx\n# Set-up hyperparameters\noptions = {'c1': 0.5, 'c2': 0.3, 'w':0.9}\n# Call instance of PSO\noptimizer = ps.single.GlobalBestPSO(n_particles=10, dimensions=2, options=options)\n# Perform optimization\nbest_cost, best_pos = optimizer.optimize(fx.sphere, iters=100)\n```\n\n![Sphere Optimization](https://i.imgur.com/5LtjROf.gif)\n\nThis will run the optimizer for `100` iterations, then returns the best cost\nand best position found by the swarm. In addition, you can also access\nvarious histories by calling on properties of the class:\n\n```python\n# Obtain the cost history\noptimizer.cost_history\n# Obtain the position history\noptimizer.pos_history\n# Obtain the velocity history\noptimizer.velocity_history\n```\n\nAt the same time, you can also obtain the mean personal best and mean neighbor\nhistory for local best PSO implementations. Simply call `optimizer.mean_pbest_history`\nand `optimizer.mean_neighbor_history` respectively.\n\n### Hyperparameter search tools\n\nPySwarms implements a grid search and random search technique to find the\nbest parameters for your optimizer. Setting them up is easy. In this example,\nlet's try using `pyswarms.utils.search.RandomSearch` to find the optimal\nparameters for `LocalBestPSO` optimizer.\n\nHere, we input a range, enclosed in tuples, to define the space in which the\nparameters will be found. Thus, `(1,5)` pertains to a range from 1 to 5.\n\n```python\nimport numpy as np\nimport pyswarms as ps\nfrom pyswarms.utils.search import RandomSearch\nfrom pyswarms.utils.functions import single_obj as fx\n\n# Set-up choices for the parameters\noptions = {\n    'c1': (1,5),\n    'c2': (6,10),\n    'w': (2,5),\n    'k': (11, 15),\n    'p': 1\n}\n\n# Create a RandomSearch object\n# n_selection_iters is the number of iterations to run the searcher\n# iters is the number of iterations to run the optimizer\ng = RandomSearch(ps.single.LocalBestPSO, n_particles=40,\n            dimensions=20, options=options, objective_func=fx.sphere,\n            iters=10, n_selection_iters=100)\n\nbest_score, best_options = g.search()\n```\n\nThis then returns the best score found during optimization, and the\nhyperparameter options that enable it.\n\n```s\n>>> best_score\n1.41978545901\n>>> best_options['c1']\n1.543556887693\n>>> best_options['c2']\n9.504769054771\n```\n\n### Swarm visualization\n\nIt is also possible to plot optimizer performance for the sake of formatting.\nThe plotters module is built on top of `matplotlib`, making it\nhighly-customizable.\n\n\n```python\nimport pyswarms as ps\nfrom pyswarms.utils.functions import single_obj as fx\nfrom pyswarms.utils.plotters import plot_cost_history, plot_contour, plot_surface\nimport matplotlib.pyplot as plt\n# Set-up optimizer\noptions = {'c1':0.5, 'c2':0.3, 'w':0.9}\noptimizer = ps.single.GlobalBestPSO(n_particles=50, dimensions=2, options=options)\noptimizer.optimize(fx.sphere, iters=100)\n# Plot the cost\nplot_cost_history(optimizer.cost_history)\nplt.show()\n```\n\n![CostHistory](https://i.imgur.com/19Iuz4B.png)\n\nWe can also plot the animation...\n\n```python\nfrom pyswarms.utils.plotters.formatters import Mesher, Designer\n# Plot the sphere function's mesh for better plots\nm = Mesher(func=fx.sphere,\n           limits=[(-1,1), (-1,1)])\n# Adjust figure limits\nd = Designer(limits=[(-1,1), (-1,1), (-0.1,1)],\n             label=['x-axis', 'y-axis', 'z-axis'])\n```\n\nIn 2D,\n\n```python\nplot_contour(pos_history=optimizer.pos_history, mesher=m, designer=d, mark=(0,0))\n```\n\n![Contour](https://i.imgur.com/H3YofJ6.gif)\n\nOr in 3D!\n\n```python\npos_history_3d = m.compute_history_3d(optimizer.pos_history) # preprocessing\nanimation3d = plot_surface(pos_history=pos_history_3d,\n                           mesher=m, designer=d,\n                           mark=(0,0,0))    \n```\n\n![Surface](https://i.imgur.com/kRb61Hx.gif)\n\n## Contributing\n\nPySwarms is currently maintained by a small yet dedicated team:\n- Lester James V. Miranda ([@ljvmiranda921](https://github.com/ljvmiranda921))\n- Siobh√°n K. Cronin ([@SioKCronin](https://github.com/SioKCronin))\n- Aaron Moser ([@whzup](https://github.com/whzup))\n- Steven Beardwell ([@stevenbw](https://github.com/stevenbw))\n\nAnd we would appreciate it if you can lend a hand with the following:\n\n* Find bugs and fix them\n* Update documentation in docstrings\n* Implement new optimizers to our collection\n* Make utility functions more robust.\n\nWe would also like to acknowledge [all our\ncontributors](http://pyswarms.readthedocs.io/en/latest/authors.html), past and\npresent, for making this project successful!\n\nIf you wish to contribute, check out our [contributing guide].\nMoreover, you can also see the list of features that need some help in our\n[Issues] page.\n\n[contributing guide]: https://pyswarms.readthedocs.io/en/development/contributing.html\n[Issues]: https://github.com/ljvmiranda921/pyswarms/issues\n\n**Most importantly**, first-time contributors are welcome to join! I try my\nbest to help you get started and enable you to make your first Pull Request!\nLet's learn from each other!\n\n## Credits\n\nThis project was inspired by the [pyswarm] module that performs PSO with\nconstrained support. The package was created with [Cookiecutter] and the\n[`audreyr/cookiecutter-pypackage`] project template.\n\n[pyswarm]: https://github.com/tisimst/pyswarm\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[`audreyr/cookiecutter-pypackage`]: https://github.com/audreyr/cookiecutter-pypackage\n\n## Cite us\nAre you using PySwarms in your project or research? Please cite us!\n\n* Miranda L.J., (2018). PySwarms: a research toolkit for Particle Swarm Optimization in Python. *Journal of Open Source Software*, 3(21), 433, https://doi.org/joss.00433\n\n```bibtex\n@article{pyswarmsJOSS2018,\n    author  = {Lester James V. Miranda},\n    title   = \"{P}y{S}warms, a research-toolkit for {P}article {S}warm {O}ptimization in {P}ython\",\n    journal = {Journal of Open Source Software},\n    year    = {2018},\n    volume  = {3},\n    issue   = {21},\n    doi     = {10.21105/joss.00433},\n    url     = {https://doi.org/10.21105/joss.00433}\n}\n```\n\n### Projects citing PySwarms\nNot on the list? Ping us in the Issue Tracker!\n\n* Gousios, Georgios. Lecture notes for the TU Delft TI3110TU course Algorithms and Data Structures. Accessed May 22, 2018. http://gousios.org/courses/algo-ds/book/string-distance.html#sop-example-using-pyswarms.\n* Nandy, Abhishek, and Manisha Biswas., \"Applying Python to Reinforcement Learning.\" *Reinforcement Learning*. Apress, Berkeley, CA, 2018. 89-128.\n* Benedetti, Marcello, et al., \"A generative modeling approach for benchmarking and training shallow quantum circuits.\" *arXiv preprint arXiv:1801.07686* (2018).\n* Vrbanƒçiƒç et al., \"NiaPy: Python microframework for building nature-inspired algorithms.\" Journal of Open Source Software, 3(23), 613, https://doi.org/10.21105/joss.00613\n* HaÃàse, Florian, et al. \"Phoenics: A Bayesian optimizer for chemistry.\" *ACS Central Science.* 4.9 (2018): 1134-1145. \n* Szynkiewicz, Pawel. \"A Comparative Study of PSO and CMA-ES Algorithms on Black-box Optimization Benchmarks.\" *Journal of Telecommunications and Information Technology* 4 (2018): 5.\n* Mistry, Miten, et al. \"Mixed-Integer Convex Nonlinear Optimization with Gradient-Boosted Trees Embedded.\" Imperial College London (2018).\n* Vishwakarma, Gaurav. *Machine Learning Model Selection for Predicting Properties of High Refractive Index Polymers* Dissertation. State University of New York at Buffalo, 2018.\n* Uluturk Ismail, et al. \"Efficient 3D Placement of Access Points in an Aerial Wireless Network.\" *2019 16th IEEE Anual Consumer Communications and Networking Conference (CCNC)* IEEE (2019): 1-7.\n* Downey A., Theisen C., et al. \"Cam-based passive variable friction device for structural control.\" *Engineering Structures* Elsevier (2019): 430-439.\n* Thaler S., Paehler L., Adams, N.A. \"Sparse identification of truncation errors.\" *Journal of Computational Physics* Elsevier (2019): vol. 397\n* Lin, Y.H., He, D., Wang, Y. Lee, L.J. \"Last-mile Delivery: Optimal Locker locatuion under Multinomial Logit Choice Model\" https://arxiv.org/abs/2002.10153\n* Park J., Kim S., Lee, J. \"Supplemental Material for Ultimate Light trapping in free-form plasmonic waveguide\" KAIST, University of Cambridge, and Cornell University http://www.jlab.or.kr/documents/publications/2019PRApplied_SI.pdf\n* Pasha A., Latha P.H., \"Bio-inspired dimensionality reduction for Parkinson's Disease Classification,\" *Health Information Science and Systems*, Springer (2020).\n* Carmichael Z., Syed, H., et al. \"Analysis of Wide and Deep Echo State Networks for Multiscale Spatiotemporal Time-Series Forecasting,\" *Proceedings of the 7th Annual Neuro-inspired Computational Elements* ACM (2019), nb. 7: 1-10 https://doi.org/10.1145/3320288.3320303\n* Klonowski, J. \"Optimizing Message to Virtual Link Assignment in Avionics Full-Duplex Switched Ethernet Networks\" Proquest\n* Haidar, A., Jan, ZM. \"Evolving One-Dimensional Deep Convolutional Neural Netowrk: A Swarm-based Approach,\" *IEEE Congress on Evolutionary Computation* (2019) https://doi.org/10.1109/CEC.2019.8790036\n* Shang, Z. \"Performance Evaluation of the Control Plane in OpenFlow Networks,\" Freie Universitat Berlin (2020)\n* Linker, F. \"Industrial Benchmark for Fuzzy Particle Swarm Reinforcement Learning,\" Liezpic University (2020)\n* Vetter, A. Yan, C. et al. \"Computational rule-based approach for corner correction of non-Manhattan geometries in mask aligner photolithography,\" Optics (2019). vol. 27, issue 22: 32523-32535 https://doi.org/10.1364/OE.27.032523\n* Wang, Q., Megherbi, N., Breckon T.P., \"A Reference Architecture for Plausible Thread Image Projection (TIP) Within 3D X-ray Computed Tomography Volumes\" https://arxiv.org/abs/2001.05459\n* Menke, Tim, Hase, Florian, et al. \"Automated discovery of superconducting circuits and its application to 4-local coupler design,\" arxiv preprint: https://arxiv.org/abs/1912.03322 \n\n## Others\nLike it? Love it? Leave us a star on [Github] to show your appreciation! \n\n[Github]: https://github.com/ljvmiranda921/pyswarms\n\n## Contributors\n\nThanks goes to these wonderful people ([emoji key](https://github.com/all-contributors/all-contributors#emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/whzup\"><img src=\"https://avatars3.githubusercontent.com/u/39431903?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Aaron</b></sub></a><br /><a href=\"#maintenance-whzup\" title=\"Maintenance\">üöß</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=whzup\" title=\"Code\">üíª</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=whzup\" title=\"Documentation\">üìñ</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=whzup\" title=\"Tests\">‚ö†Ô∏è</a> <a href=\"#ideas-whzup\" title=\"Ideas, Planning, & Feedback\">ü§î</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/pulls?q=is%3Apr+reviewed-by%3Awhzup\" title=\"Reviewed Pull Requests\">üëÄ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Carl-K\"><img src=\"https://avatars2.githubusercontent.com/u/13661469?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Carl-K</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=Carl-K\" title=\"Code\">üíª</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=Carl-K\" title=\"Tests\">‚ö†Ô∏è</a></td>\n    <td align=\"center\"><a href=\"http://www.siobhankcronin.com/\"><img src=\"https://avatars2.githubusercontent.com/u/19956669?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Siobh√°n K Cronin</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=SioKCronin\" title=\"Code\">üíª</a> <a href=\"#maintenance-SioKCronin\" title=\"Maintenance\">üöß</a> <a href=\"#ideas-SioKCronin\" title=\"Ideas, Planning, & Feedback\">ü§î</a></td>\n    <td align=\"center\"><a href=\"http://andrewjarcho.com\"><img src=\"https://avatars3.githubusercontent.com/u/1452951?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Andrew Jarcho</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=jazcap53\" title=\"Tests\">‚ö†Ô∏è</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=jazcap53\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://github.com/mamadyonline\"><img src=\"https://avatars1.githubusercontent.com/u/20543370?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Mamady</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=mamadyonline\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://github.com/jayspeidell\"><img src=\"https://avatars3.githubusercontent.com/u/26357788?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jay Speidell</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=jayspeidell\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://github.com/slek120\"><img src=\"https://avatars2.githubusercontent.com/u/3589574?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Eric</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/issues?q=author%3Aslek120\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=slek120\" title=\"Code\">üíª</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/CPapadim\"><img src=\"https://avatars1.githubusercontent.com/u/13984473?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>CPapadim</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/issues?q=author%3ACPapadim\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=CPapadim\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://github.com/dfhljf\"><img src=\"https://avatars1.githubusercontent.com/u/7887642?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>JiangHui</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=dfhljf\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://github.com/nik1082\"><img src=\"https://avatars3.githubusercontent.com/u/17260188?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jericho Arcelao</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=nik1082\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"http://www.jdbohrman.xyz\"><img src=\"https://avatars2.githubusercontent.com/u/27848025?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>James D. Bohrman</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=jdbohrman\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://github.com/bradahoward\"><img src=\"https://avatars2.githubusercontent.com/u/24660861?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>bradahoward</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=bradahoward\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://github.com/ThomasCES\"><img src=\"https://avatars2.githubusercontent.com/u/18325841?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>ThomasCES</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=ThomasCES\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://github.com/danielcorreia96\"><img src=\"https://avatars0.githubusercontent.com/u/17486065?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Daniel Correia</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/issues?q=author%3Adanielcorreia96\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=danielcorreia96\" title=\"Code\">üíª</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/fluencer\"><img src=\"https://avatars3.githubusercontent.com/u/6614307?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>fluencer</b></sub></a><br /><a href=\"#example-fluencer\" title=\"Examples\">üí°</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=fluencer\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/miguelcocruz\"><img src=\"https://avatars0.githubusercontent.com/u/45034603?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>miguelcocruz</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=miguelcocruz\" title=\"Documentation\">üìñ</a> <a href=\"#example-miguelcocruz\" title=\"Examples\">üí°</a></td>\n    <td align=\"center\"><a href=\"https://github.com/stevenbw\"><img src=\"https://avatars1.githubusercontent.com/u/46458390?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Steven Beardwell</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=stevenbw\" title=\"Code\">üíª</a> <a href=\"#maintenance-stevenbw\" title=\"Maintenance\">üöß</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=stevenbw\" title=\"Documentation\">üìñ</a> <a href=\"#ideas-stevenbw\" title=\"Ideas, Planning, & Feedback\">ü§î</a></td>\n    <td align=\"center\"><a href=\"https://github.com/ndngo\"><img src=\"https://avatars1.githubusercontent.com/u/16291290?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Nathaniel Ngo</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=ndngo\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/Aneal-Sharma\"><img src=\"https://avatars1.githubusercontent.com/u/19873846?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Aneal Sharma</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=Aneal-Sharma\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/citomcclure\"><img src=\"https://avatars2.githubusercontent.com/u/38021988?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Chris McClure</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=citomcclure\" title=\"Documentation\">üìñ</a> <a href=\"#example-citomcclure\" title=\"Examples\">üí°</a></td>\n    <td align=\"center\"><a href=\"http://se4.space/\"><img src=\"https://avatars2.githubusercontent.com/u/42605993?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Christopher Angell</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=ctangell\" title=\"Documentation\">üìñ</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/Kutim\"><img src=\"https://avatars3.githubusercontent.com/u/8309533?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Kutim</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/issues?q=author%3AKutim\" title=\"Bug reports\">üêõ</a></td>\n    <td align=\"center\"><a href=\"https://github.com/ichbinjakes\"><img src=\"https://avatars1.githubusercontent.com/u/20906800?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jake Souter</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/issues?q=author%3Aichbinjakes\" title=\"Bug reports\">üêõ</a> <a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=ichbinjakes\" title=\"Code\">üíª</a></td>\n    <td align=\"center\"><a href=\"https://github.com/IanBoyanZhang\"><img src=\"https://avatars3.githubusercontent.com/u/4110995?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ian Zhang</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=IanBoyanZhang\" title=\"Documentation\">üìñ</a> <a href=\"#example-IanBoyanZhang\" title=\"Examples\">üí°</a></td>\n    <td align=\"center\"><a href=\"https://www.zachariahcarmichael.com/\"><img src=\"https://avatars2.githubusercontent.com/u/20629897?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Zach</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=craymichael\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://www.linkedin.com/in/michel-lavoie-71841526/\"><img src=\"https://avatars3.githubusercontent.com/u/3951483?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Michel Lavoie</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/issues?q=author%3Amiek770\" title=\"Bug reports\">üêõ</a></td>\n    <td align=\"center\"><a href=\"http://linkedin.com/in/ewelinakaminska/\"><img src=\"https://avatars1.githubusercontent.com/u/42674710?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>ewekam</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=ewekam\" title=\"Documentation\">üìñ</a></td>\n    <td align=\"center\"><a href=\"https://www.linkedin.com/in/ivyna-alves\"><img src=\"https://avatars2.githubusercontent.com/u/18709508?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ivyna Santino</b></sub></a><br /><a href=\"https://github.com/ljvmiranda921/pyswarms/commits?author=ivynasantino\" title=\"Documentation\">üìñ</a> <a href=\"#example-ivynasantino\" title=\"Examples\">üí°</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-enable -->\n<!-- prettier-ignore-end -->\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ljvmiranda921/pyswarms",
    "keywords": "pyswarms",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "clpso",
    "package_url": "https://pypi.org/project/clpso/",
    "platform": "",
    "project_url": "https://pypi.org/project/clpso/",
    "project_urls": {
      "Homepage": "https://github.com/ljvmiranda921/pyswarms"
    },
    "release_url": "https://pypi.org/project/clpso/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "clpso",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7051083,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c9e08edc2ae0779fdfd3b2cc451873fe3cc4d4a70eda9f25df45bd1b9684352",
          "md5": "d1e0225dc2b4f024c8663eeeb85d1829",
          "sha256": "48f41b2657e129d0eab5cf4a53b9e9ec813b4d1800413b4a1ddc97c506cb12b4"
        },
        "downloads": -1,
        "filename": "clpso-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d1e0225dc2b4f024c8663eeeb85d1829",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17698608,
        "upload_time": "2020-04-19T01:46:48",
        "upload_time_iso_8601": "2020-04-19T01:46:48.156595Z",
        "url": "https://files.pythonhosted.org/packages/5c/9e/08edc2ae0779fdfd3b2cc451873fe3cc4d4a70eda9f25df45bd1b9684352/clpso-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c9e08edc2ae0779fdfd3b2cc451873fe3cc4d4a70eda9f25df45bd1b9684352",
        "md5": "d1e0225dc2b4f024c8663eeeb85d1829",
        "sha256": "48f41b2657e129d0eab5cf4a53b9e9ec813b4d1800413b4a1ddc97c506cb12b4"
      },
      "downloads": -1,
      "filename": "clpso-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d1e0225dc2b4f024c8663eeeb85d1829",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17698608,
      "upload_time": "2020-04-19T01:46:48",
      "upload_time_iso_8601": "2020-04-19T01:46:48.156595Z",
      "url": "https://files.pythonhosted.org/packages/5c/9e/08edc2ae0779fdfd3b2cc451873fe3cc4d4a70eda9f25df45bd1b9684352/clpso-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}