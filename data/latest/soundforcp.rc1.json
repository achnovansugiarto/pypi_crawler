{
  "info": {
    "author": "JunPei-China",
    "author_email": "Jun_Pei@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SoundForCp\n\n`SoundForCp` is a  software package for calculating specific heat capacity based on sound velocity method.  A detailed description is available in xxxx.\n\n## Requirement\n\n`SoundForCp` requires Python 3 and several third-party libraries that are used by SoundForCp.\n\n- Numpy \\- The fundamental package for scientific computing with Python. (>=1.20)\n- Scipy \\- Fundamental algorithms for scientific computing in Python for scientific computing with Python. (>=1.7)\n- PyYaml \\- A full-featured [YAML](http://yaml.org/) framework for the Python programming language.(>=6.0)\n- Python (>=3.6)\n\nAs an example, on Ubuntu Linux some of the required software can be installed using\n\n```bash\nsudo apt-get install python3 python3-numpy python3-scipy python3-yaml\n```\n\nBefore you go any further, make sure you have Python and that the expected version is available from your command line. You can check this by running:\n\nUnix/MacOS:\n\n```\npython3 --version\n```\n\nWindows:\n\n```\npy --version\n```\n\nYou should get some output like `Python 3.6.3`. If you do not have Python, please install the latest 3.x version from [python.org](https://www.python.org/) or refer to the [Installing Python](https://docs.python-guide.org/starting/installation/#installation) section of the Hitchhiker’s Guide to Python.\n\n\n\nWe recommend to use [PyPI](https://pypi.org/) which allows to conveniently install SoundForCp and all its software dependencies with a single command. you’ll need to make sure you have [pip](https://packaging.python.org/en/latest/key_projects/#pip) available. You can check this by running:\n\nUnix/MacOS:\n\n```\npython3 -m pip --version\n```\n\nWindows:\n\n```\npy -m pip --version\n```\n\nIf you installed Python from source, with an installer from [python.org](https://www.python.org/), or via [Homebrew](https://brew.sh/) you should already have pip. If you’re on Linux and installed using your OS package manager, you may have to install pip separately, see [Installing pip/setuptools/wheel with Linux Package Managers](https://packaging.python.org/en/latest/guides/installing-using-linux-tools/).\n\nIf `pip` isn’t already installed, then first try to bootstrap it from the standard library:\n\nUnix/MacOS:\n\n```\npython3 -m ensurepip --default-pip\n```\n\nWindows:\n\n```\npython3 -m ensurepip --default-pip\n```\n\nTo install the remaining packages see the installation instructions at their respective web pages.\n\n## Installation\n\nThe preferred method is to use `pip` command to install from the PyPi official/mirrors site.  \n\n```\npip install SoundForCp\n```\n\nSounfForCp can be then started from a terminal (e.g. “Anaconda Prompt” on Windows) by executing the “SoundForCp” program.\n\nIf you don’t use `pip` or prefer to install from sources, make sure the required software is all in place and run:\n\n```\npython setup.py install\n```\n\nBy default the files are installed to standard system directories, which may require the use of `sudo` for write privileges. If administrator (root) access is not available, see the output from `python setup.py install --help` for options to install as a regular user to user-writable locations. Note that installation to non-standard directories may require adjustments to the PATH and PYTHONPATH environment variables.\n\n## Using\n\nSoundForCp can be then started from a terminal (“Anaconda Prompt” on Windows) by executing the “SoundForCp.exe” program.  An alternative method on Windows is to start SoundForCp through double-click the executable program “SoundForCP.exe”.\n\nBefore running SoundForCp, a input file, named as `input.yaml` should have been prepared in a certain folder `xxxx`. `Input.yaml` follows the rule of [YAML language](https://yaml.org/spec/1.2.2/#chapter-2-language-overview). `input.yaml` contains `SoundForCp` settings which are summarized at setting tags.\n\n```bash\ncd xxxx\nSoundForCp.exe\n```\n\nafter running successfully, there is an output file named as “out.csv” written in the same folder.\n\n## Setting tags\n\n### Basic tags\n\n#### `Sample_Name`\n\n`Sample_Name` represents the sample name.\n\n#### `Longitudinal_Sound_Velocity`\n\n`Longitudinal_Sound_Velocity` represents the longitudinal Sound velocity of the specific sample. The unit is m/s.\n\n#### `Transverse_Sound_Velocity`\n\n`Transverse_Sound_Velocity` represents the transverse Sound velocity of the specific sample. The unit is m/s.\n\n#### `Sample_Density`\n\n`Sample_Density` represents the density of the specific sample, which can be measured by Archimedes method. The unit is g/cm3.\n\n#### `Number_Atoms`\n\n`Number_Atoms` represents the atom numbers per unit cell for the specific sample. \n\n#### `Volume_Cell`\n\n`Volume_Cell` represents the lattice volume per unit cell for the specific sample. The unit is A^3.\n\n#### `Temperature`\n\n`Temperature` represents the calculated temperature range for the specific sample. there are 3 sub-tags, i.e.  `Start_Temperature`.  `End_Temperature`, `Interval_Temperature`. The unit is K.\n\n#### `Relative_Atomic_Mass`\n\n`Relative_Atomic_Mass` represents  relative atomic mass for molecular formula.  The unit is g/mol.\n\n#### `Atomic_Mole_Quantity`\n\n`Relative_Atomic_Mass` represents relative mole quantity for molecular formula.\n\n\n\n### Required tags\n\n#### `Elastic_Constants_Condition`\n\n`Elastic_Constants_Condition` represent  elastic constants C12 equal C44 or not.  `Elastic_Constants_Condition`=2 represents  non-preferred orientation polycrystals. `Elastic_Constants_Condition`=1 represents  C12=C44. For cubic phase, C12 is equal to  C44  in preferred-oritention polycrystals or single crystal. For non cubic phase, C12 is unequal to  C44  in preferred-oritention polycrystals or single crystal. \n\n\n\n## Optional tags\n\n#### `Adiabatic_Bulk_Modulus`\n\n`Adiabatic_Bulk_Modulus` represents the adiabatic bulk modulus for the specific sample. It can also be calculated by sound velocity method. The unit is GPa.\n\n#### `Linear_Expansion_Coefficient`\n\n`Linear_Expansion_Coefficient` represents the linear expansion coefficient for the specific sample. It can also be calculated by sound velocity method. The unit is 1/K.\n\n#### `Debye_Temperature`\n\n`Debye_Temperature` represents the Debye temperature for the specific sample. It can also be calculated by sound velocity method. The unit is K. \n\n#### `Poisson_Ratio`\n\n`Poisson_Ratio`  represents the Poisson ratio for the specific sample. It can also be calculated by sound velocity method. The unit is dimensionless. \n\n#### `Gruneisen_Constant`\n\n`Gruneisen_Constant`  represents the Gruneisen constant for the specific sample. It can also be calculated by sound velocity method. The unit is dimensionless. \n\n\n\n## Development\n\nPDFgui is an open-source software available on GitHub https://github.com/JunPei-China/SoundForCp. Feel free to fork the project and contribute. \n\n## Contacts\n\nFor more information on SoundForCp  please visit the project web-page or email Dr. Jun Pei at Jun_Pei@163.com.\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JunPei-China/SoundForCp",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "SoundForCp",
    "package_url": "https://pypi.org/project/SoundForCp/",
    "platform": null,
    "project_url": "https://pypi.org/project/SoundForCp/",
    "project_urls": {
      "Bug Tracker": "https://github.com/JunPei-China/SoundForCp/issues",
      "Homepage": "https://github.com/JunPei-China/SoundForCp"
    },
    "release_url": "https://pypi.org/project/SoundForCp/0.0.2/",
    "requires_dist": [
      "numpy (>=1.20)",
      "scipy (>=1.7)",
      "PyYaml (>=6.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "A software package for calculating specific heat capacity based on sound velocity method.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13321555,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aeb2fb7a2342f715d844be3cd38073070787b9b117f754548be4000f5d513889",
          "md5": "329744c7d033b98f86b22707e2e5ae6f",
          "sha256": "e7dfed1699213a0992abd1989ab6f1299487d4de525ab255e87a8a1ce87c6647"
        },
        "downloads": -1,
        "filename": "SoundForCp-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "329744c7d033b98f86b22707e2e5ae6f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20297,
        "upload_time": "2022-03-28T12:12:20",
        "upload_time_iso_8601": "2022-03-28T12:12:20.765740Z",
        "url": "https://files.pythonhosted.org/packages/ae/b2/fb7a2342f715d844be3cd38073070787b9b117f754548be4000f5d513889/SoundForCp-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f3a11aa059d28c54726262195d37cdc443731e5e0569b980e83ae63de1f739d",
          "md5": "3b9a0d708cea734be50a93b314bd740e",
          "sha256": "e6a932c54425c902afd2bbe88682629fb4f26f523d1d50c9b965c86849670c8e"
        },
        "downloads": -1,
        "filename": "SoundForCp-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3b9a0d708cea734be50a93b314bd740e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35585270,
        "upload_time": "2022-03-28T12:12:32",
        "upload_time_iso_8601": "2022-03-28T12:12:32.988907Z",
        "url": "https://files.pythonhosted.org/packages/2f/3a/11aa059d28c54726262195d37cdc443731e5e0569b980e83ae63de1f739d/SoundForCp-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aeb2fb7a2342f715d844be3cd38073070787b9b117f754548be4000f5d513889",
        "md5": "329744c7d033b98f86b22707e2e5ae6f",
        "sha256": "e7dfed1699213a0992abd1989ab6f1299487d4de525ab255e87a8a1ce87c6647"
      },
      "downloads": -1,
      "filename": "SoundForCp-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "329744c7d033b98f86b22707e2e5ae6f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 20297,
      "upload_time": "2022-03-28T12:12:20",
      "upload_time_iso_8601": "2022-03-28T12:12:20.765740Z",
      "url": "https://files.pythonhosted.org/packages/ae/b2/fb7a2342f715d844be3cd38073070787b9b117f754548be4000f5d513889/SoundForCp-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f3a11aa059d28c54726262195d37cdc443731e5e0569b980e83ae63de1f739d",
        "md5": "3b9a0d708cea734be50a93b314bd740e",
        "sha256": "e6a932c54425c902afd2bbe88682629fb4f26f523d1d50c9b965c86849670c8e"
      },
      "downloads": -1,
      "filename": "SoundForCp-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "3b9a0d708cea734be50a93b314bd740e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 35585270,
      "upload_time": "2022-03-28T12:12:32",
      "upload_time_iso_8601": "2022-03-28T12:12:32.988907Z",
      "url": "https://files.pythonhosted.org/packages/2f/3a/11aa059d28c54726262195d37cdc443731e5e0569b980e83ae63de1f739d/SoundForCp-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}