{
  "info": {
    "author": "heureka-code",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "#Kronos – Datums- und Uhrzeitangaben\n___\n\n##Exceptions\n\n* __KronosException__ &rarr; abgeleitet von Exception. \n  Basisklasse aller Exceptions des Kronosprojekts\n  \n###Exceptionhierarchie\n\n* KronosException\n    * ZeitException\n        * DatumException\n            * JahrException\n                * JahrKeineGanzeZahl\n            * MonatsException\n                * KeineGueltigeMonatsposition\n                * KeinGueltigerMonatscode\n                * KeineGueltigeTageszahl\n                * KeinGueltigerMonatsname\n            * TagException\n                * TagKeineGanzeZahl\n                * TagKleinerAlsEins\n                * TagZuGross\n            * WochentagException\n                * UngueltigerWochentagname\n                * UngueltigeWochentagposition\n        * UhrzeitException\n            * StundeException\n                * StundeKeineGanzeZahl\n                * StundeZuGross\n                * StundeZuKlein\n            * MinuteException\n                * MinuteKeineGanzeZahl\n                * MinuteZuGross\n                * MinuteZuKlein\n            * SekundeException\n                * SekundeKeineGanzeZahl\n                * SekundeZuGross\n                * SekundeZuKlein\n___\n##Notationen\n\n###Exceptions\n\n###Datum\n\nDie Datumsnotationen werden unterteilt in:\n\n* __DatumsNotationNonSplitted__ &rarr; Die Datumsnotationen ohne Trennzeichen bezeichnet\n    * __TTMMJJJJ__ &rarr; Tag (2 Stellen) Monat (2 Stellen) Jahr (4 Stellen) \n      * __TTMMJJJJ_NON_SPLITTED__\n    * __JJJJMMTT__\n      * __JJJJMMTT_NON_SPLITTED__ &rarr; Jahr (4 Stellen) Monat (2 Stellen) Tag (2 Stellen)\n    \n* __DatumsNotationSplitted__ &rarr; Die Datumsnotationen mit Trennzeichen bezeichnet\n    * __TMJ__ &rarr; Datumsnotations-Unterklasse für eine Folge von __Tag__ _[Trennzeichen]_ __Monat__ _[Trennzeichen]_ __Jahr__\n      \n      |    Instanz    |   Trenner   |\n      | :------------ | :---------: |\n      | __TMJ_DOT__   | _Punkt_ (.) |\n      | __TMJ_DASH__  | _Minus_ (-) |\n      | __TMJ_SLASH__ | _Slash_ (/) |\n    * __JMT__ &rarr; Datumsnotations-Unterklasse für eine Folge von __Jahr__ _[Trennzeichen]_ __Monat__ _[Trennzeichen]_ __Tag__\n        \n      |    Instanz    |   Trenner   |\n      | :------------ | :---------: |\n      | __JMT_DOT__   | _Punkt_ (.) |\n      | __JMT_DASH__  | _Minus_ (-) |\n      | __JMT_SLASH__ | _Slash_ (/) |\n    \n### <span name=\"NotationUhrzeit\">Uhrzeit</span>\n\nDie Uhrzeitnotationen werden unterteilt in:\n\n* __UhrzeitNotationNonSplitted__ &rarr; Die Uhrzeitnotationen ohne Trennzeichen bezeichnet\n    * __HHMMSS__\n      * __HHMMSS_NON_SPLITTED__\n    * __SSMMHH__\n      * __SSMMHH_NON_SPLITTED__\n\n* __UhrzeitNotationSplitted__ &rarr; Die Uhrzeitnotationen mit Trennzeichen bezeichnet\n    * __HMS__ &rarr; Uhrzeiznotations-Unterklasse für eine Folge von __Stunde__ _[Trennzeichen]_ __Minute__ _[Trennzeichen]_ __Sekunde__\n    \n      |    Instanz    |      Trenner      |\n      | :------------ | :---------------: |\n      | __HMS_DOT__   | _Punkt_ (.)       |\n      | __HMS_DASH__  | _Minus_ (-)       |\n      | __HMS_SLASH__ | _Slash_ (/)       |\n      | __HMS_COLON__ | _Doppelpunkt_ (:) |\n    * __SMH__ &rarr; Uhrzeiznotations-Unterklasse für eine Folge von __Sekunde__ _[Trennzeichen]_ __Minute__ _[Trennzeichen]_ __Stunde__\n      \n      |    Instanz    |      Trenner      |\n      | :------------ | :---------------: |\n      | __SMH_DOT__   | _Punkt_ (.)       |\n      | __SMH_DASH__  | _Minus_ (-)       |\n      | __SMH_SLASH__ | _Slash_ (/)       |\n      | __SMH_COLON__ | _Doppelpunkt_ (:) |\n___\n\n##Datum\n\n###Exceptions\n\n* __DatumException__ &rarr; abgeleitet von __ZeitException__\n\n###Methoden\n\n```__init__```: Nimmt, den Tag, den Monat und das Jahr als int-Werte.\n\n```__repr__```: Gibt den Representations-String des Datums zurück.\n\n```ist_schaltjahr```: Statische Methode, die prüft, ob ein bestimmtes Jahr ein Schaltjahr ist.\n\n```tag```: Liefert den Tag des Datums.\n\n```monat```: Liefert den Monat des Datums.\n\n```jahr```: Liefert das Jahr des Datums.\n\n```wochentag```: Property-Attribut, das den Wochentag des Datums liefert.\n\n```monatscode```: Property-Attribut, das den Monatscode zur Wochentagsberechnung liefert.\n\n```jahrescode```: Property-Attribut, das den Jahrescode zur Wochentagsberechnung liefert.\n\n```von_datums_notation```: Errechnet ein Datum aus einem String einer gewissen Notation.\n\n```__eq__```: Prüft, ob ein Datum einem anderen gleicht.\n\n```__ne__```: Gibt das invertierte Ergebnis der Methode ```__eq__``` zurück.\n\n```__lt__```: Prüft, ob ein Datum kleiner oder gleich dem Argument ist.\n\n```__gt__```: Prüft, ob ein Datum größer oder gleich dem Argument ist.\n\n```__le__```: Prüft, ob das Datum kleiner oder gleich dem Argument ist.\n\n```__ge__```: Prüft, ob das Datum größer oder gleich dem Argument ist.\n\n###Tag\n\nDie Klasse zum Speichern eines Tages\n\n####Exceptions\n\n* __TagException__ &rarr; abgeleitet von __DatumException__. Basisklasse aller Exceptions, die den Tag betreffen.\n* __TagKeineGanzeZahl__ &rarr; abgeleitet von __TagException__. Wird ausgelöst, \n  wenn der gegebene Tag keine ganze Zahl also ein float-Wert, \n  oder ein nicht zur Ganzzahl konvertierbarer Typ ist, wie ein String, der nicht nur aus Zahlen besteht.\n* __TagKleinerAlsEins__ &rarr; abgeleitet von __TagException__. Wird ausgelöst, \n  wenn ein gegebener Tag kleiner als 0, also unmöglich ein gültiger Tag ist.\n* __TagZuGross__ &rarr; abgeleitet von __TagException__. Wird ausgelöst, \n  wenn ein gegebener Tag zu groß für einen Monat und somit ungültig ist.\n\n####Methoden\n\n```__init__```: Nimmt im Konstruktor den Tag als ganze Zahl.\n\n```tag```: Property-Attribut zum Abrufen und bedingtem Setzen vom Tag.\n\n```monats_pruefung```: Methode um zu prüfen, ob die Tagesanzahl für einen gegebenen Monat zu groß ist.\n\n```__repr__```: Ein Representations-String für den Tag.\n\n```__str__```: Liefert einen String der Tageszahl ohne zusätzlichen Text\n\n```__int__```: Die Tageszahl als Integer.\n\n```__eq__```: Prüft, ob der Tag gleich dem Argument ist. \nHierbei wird der Integerwert des Arguments verwendet, \nweshalb auch ein String, eine Tag-Instanz oder ähnliches gegeben werden können.\n\n```__ne__```: Prüft, ob der Tag ungleich dem Argument ist. \nHierzu wird der Wert der Methode ```__eq__``` invertiert, weshalb auch dafür passende Werte gegeben werden können.\n\n```__lt__```: Prüft, ob der Wert des Tages kleiner ist, als der int-Wert des Arguments.\n\n```__gt__```: Prüft, ob der Wert des Tages größer ist, als der int-Wert des Arguments.\n\n```__le__```: Prüft auf Basis der Methoden ```__lt__``` und ```__eq__```, \nob der Wert des Tages kleiner oder gleich dem int-Wert des Arguments ist.\n\n```__ge__```: Prüft auf Basis der Methoden ```__gt__``` und ```__eq__```,\nob der Wert des Tages größer oder gleich dem int-Wert des Arguments ist.\n\n###Monat\n\nDie Klasse zum Speichern eines Monats\n\n####Vordefinierte Monate\n\n|   Konstante   |    Name     | Position | Monatscode |  Anzahl Tage  | Anzahl Tage im Schaltjahr |\n| :------------ | :---------- | -------: | ---------: | ------------: | ------------------------: |\n| __JANUAR__    | _Januar_    |      1   | 6          | 31            | 31                        |\n| __FEBRUAR__   | _Februar_   |      2   | 2          | 28            | _29_                      |\n| __MAERZ__     | _März_      |      3   | 2          | 31            | 31                        |\n| __APRIL__     | _April_     |      4   | 5          | 30            | 30                        |\n| __MAI__       | _Mai_       |      5   | 0          | 31            | 31                        |\n| __JUNI__      | _Juni_      |      6   | 3          | 30            | 30                        |\n| __JULI__      | _Juli_      |      7   | 5          | 31            | 31                        |\n| __AUGUST__    | _August_    |      8   | 1          | 31            | 31                        |\n| __SEPTEMBER__ | _September_ |      9   | 4          | 30            | 30                        |\n| __OKTOBER__   | _Oktober_   |     10   | 6          | 31            | 31                        |\n| __NOVEMBER__  | _November_  |     11   | 2          | 30            | 30                        |\n| __DEZEMBER__  | _Dezember_  |     12   | 4          | 31            | 31                        |\n\n####Exceptions\n\n* __MonatsException__ &rarr; abgeleitet von __DatumException__. Basisklasse aller Exceptions, die den Monat betreffen.\n* __KeinGueltigerMonatscode__ &rarr; abgeleitet von __MonatsException__. Wird ausgelöst, \n  wenn ein für die Wochentagsberechnung ungültiger Monatscode verwendet wurde.\n* __KeineGueltigeMonatsposition__ &rarr; abgeleitet von __MonatsException__. Wird ausgelöst, \n  wenn eine ungültige Monatsposition – z.B. erster, zweiter, dritter, etc. – gegeben wird\n* __KeineGueltigeTageszahl__ &rarr; abgeleitet von __MonatsException__. Wird ausgelöst, \n  wenn eine für den Monat ungüeltige Anzahl Tage gegeben wurde.\n* __KeinGueltigerMonatsname__ &rarr; abgeleitet von __MonatsException__. Wird ausgelöst, \n  wenn ein ungültiger Name für einen Monat vergeben wurde.\n  \n####Methoden der Monat-Klasse\n\n```__init__```: Nimmt einen Namen, eine Monatsposition, \neinen Monatscode, eine Anzahl Tage, die der Monat im normalen Jahr hat, \neine optionale Tagesanzahl für ein eventuell abweichendes Schaltjahr.\n\n```__copy__```: Liefert eine Kopie des Monats.\n\n```__repr__```: Gibt einen Representations-String des Monats zurück.\n\n```__str__```: Gibt den Namen des Monats zurück.\n\n```__int__```: Gibt die Position des jeweiligen Monats im Jahr als Integer zurück.\n\n```name```: Property-Attribut, das den Namen des Monats in einer __Monatsname__-Instanz liefert.\n\n```position```: Property-Attribut, das die Position des Monats im Jahr in einer __Monatsposition__-Instanz liefert.\n\n```monatscode```: Property-Attribut, das den Monatscode für die Wochentagsberechnung liefert.\n\n```anzahl_tage```: Property-Attribut, \ndas die Anzahl Tage in einem normalen Jahr in einer __AnzahlTageImMonat__-Instanz liefert.\n\n```anzahl_tage_im_schaltjahr```: Property-Attribut, \ndas die Anzahl Tage in einem Schaltjahr in einer __AnzahlTageImMonat__-Instanz liefert.\n\n####Methoden der AnzahlTageImMonat-Klasse\n\n```__init__```: Nimmt die Anzahl Tage als int-Wert.\n\n```anzahl_tage```: Property-Attribut, das die Anzahl an Tagen als Integer liefert.\n\n```__int__```: Liefert die Anzahl an Tagen als int-Wert.\n\n```__repr__```: Liefert einen Representations-String für die Tageszahl.\n\n```__str__```: Liefert die Anzahl an Tagen als String ohne zusätzliche Zeichen.\n\n```__eq__```: Prüft, ob der Wert der Tageszahl dem Argument entspricht.\n\n```__ne__```: Liefert den invertierten Wert der Methode ```__eq__```.\n\n####Methoden der Monatscode-Klasse\n\n```__init__```: Nimmt den Monatscode als int-Wert oder eine Instanz der __Monatscode__-Klasse.\n\n```monatscode```: Property-Attribut, das den Monatscode als int-Wert liefert.\n\n```__int__```: Liefert den Monatscode als int-Wert.\n\n```__repr__```: Liefert einen Representations-String für das Objekt.\n\n####Methoden der Monatsname-Klasse\n\n```__init__```: Nimmt den Monatsnamen als String oder eine Instanz der Klasse __Monatsname__.\n\n```monatsname```: Property-Attribut, das den Monatsnamen liefert.\n\n```__repr__```: Liefert einen Representations-String für das Objekt.\n\n```__str__```: Liefert den Monatsnamen als String ohne zusätzliche Zeichen.\n\n####Methoden der Monatsposition-Klasse\n\n```__init__```: Nimmt die Position des Monats im Jahr als int-Wert oder Instanz der __Monatsposition__-Klasse.\n\n```position```: Property-Attribut, das die Position als int-Wert liefert.\n\n```__int__```: Liefert die Monatsposition als Integer.\n\n```__repr__```: Liefert den Representations-String für das Objekt.\n\n\n###Jahr\n\nDie Klasse zum Speichern eines Jahres.\n####Exceptions\n\n* __JahrException__ &rarr; abgeleitet von __DatumException__. \n  Ist die Basisklasse der Exceptions, die mit dem Jahr zusammenhängen.\n* __JahrKeineGanzeZahl__ &rarr; abgeleitet von __JahrException__. \n  Wird ausgelöst, wenn das gegebene Jahr keine ganze Zahl ist.\n\n####Methoden der Jahr-Klasse\n\n```__init__```: Nimmt das Jahr und die Zeitrechnung, die standardmäßig der allgemeinen Zeitrechnung entspricht.\n\n```jahr```: Property-Attribut, das das Jahr als int-Wert liefert.\n\n```zeitrechnung```: Property-Attribut, das die Zeitrechnung liefert.\n\n```__int__```: Liefert den int-Wert des Jahres ohne Zeitrechnungsinformation.\n\n```__repr__```: Liefert den Representations-String des Objekts.\n\n###Zeitrechnung\n\n####Vordefinierte Zeitrechnungen\n\n| Konstante     | Name                        | Kürzel    | Differenz zur allgemeinen Zeitrechnung |\n| :------------ | :-------------------------- | :-------- | -------------------------------------: |\n| __A_U_C__     | _Ab urbem condita_          | A.u.c.    | 753                                    |\n| __A_Z__       | _Allgemeine Zeitrechnung_   | A.Z.      | 0                                      |\n\n####Methoden\n```__init__```: Nimmt den Namen, das Kürzel und die Entfernung zur Allgemeinen Zeitrechnung.\n\n```convert```: Konvertiert ein Jahr von dieser in eine andere Zeitrechnung.\n\n```delta```: Property-Attribut, das die Differenz zur Allgemeinen Zeitrechnung liefert.\n\n```name```: Property-Attribut, das den Namen der Zeitrechnung liefert.\n\n```kuerzel```: Property-Attribut, das das Kürzel der Zeitrechnung liefert.\n\n```__repr__```: Liefert den Representations-String des Objekts.\n\n###Wochentag\n\nDie Klasse zum Speichern eines Wochentages.\n\n####Wochentage\n\n#####Vordefinierte Wochentage\n\n|     Konstante     |       Name       | Position |\n| :---------------- | :--------------- | -------: |\n| __SONNTAG__       | _Sonntag_        | 0        |\n| __MONTAG__        | _Montag_         | 1        |\n| __DIENSTAG__      | _Dienstag_       | 2        |\n| __MITTWOCH__      | _Mittwoch_       | 3        |\n| __DONNERSTAG__    | _Donnerstag_     | 4        |\n| __FREITAG__       | _Freitag_        | 5        |\n| __SAMSTAG__       | _Samstag_        | 6        |\n\n#####Exceptions\n\n* __WochentagException__ &rarr; abgeleitet von __DatumException__. Basisklasse aller Exceptions, \n  die mit dem Wochentag zusammenhängen.\n* __UngueltigerWochentagname__ &rarr; abgeleitet von __WochentagException__. Wird ausgelöst, \n  wenn ein ungültiger Name für den Wochentag gegeben wurde\n* __UngueltigeWochentagposition__ &rarr; abgeleitet von __WochentagException__. Wird ausgelöst, \n  wenn eine unmögliche Wochentagposition gegeben wurde.\n\n#####Methoden der Wochentage-Klasse\n\n```get```: Statische Methode, die den Wochentag einer gewissen Position zurückgibt.\n\n```__getitem__```: Gibt den Wochentag einer gewissen Position zurück.\n\n```__iter__```: Liefert einen Iterator, der durch die Wochentage läuft.\n\n####Methoden der Klasse WochentageIterator\n\n```position```: Property-Attribut, das die aktuelle Position des Iterators liefert.\n\n```__next__```: Lässt den Iterator eins weiter zählen.\n\n### Methoden der Wochentag-Klasse\n\n```__init__```: Nimmt den Namen und die Position des Wochentags\n\n```wochentag_name```: Property-Attribut, das den Namen des Wochentages liefert.\n\n```wochentag_position```: Property-Attribut, das die Position des Wochentages liefert.\n\n```__repr__```: Liefert einen Representations-String für das Objekt zurück.\n\n```__int__```: Liefert die Position des Wochentages als int-Wert.\n\n###Methoden der WochentagName-Klasse\n\n```__init__```: Nimmt den Namen des Wochentags als String.\n\n```wochentag_name```: Property-Attribut, das den Namen des Wochentags liefert.\n\n```__repr__```: Liefert den Representations-String des Objekts.\n\n```__str__```: Liefert den Namen des Wochentags als String ohne zusätzliche Zeichen.\n\n```__eq__```: Prüft, ob der Name dem String-Wert des Arguments entspricht.\n\n```__ne__```: Gibt das invertierte Ergebnis der Methode ```__eq__``` zurück.\n\n###Methoden der WochentagPosition-Klasse\n\n```__init__```: Nimt die Positon des Tages in der Woche als int-Wert.\n\n```wochentag_position```: Property-Attribut, das die Position des Wochentags liefert.\n\n```__int__```: Liefert die Position als int-Wert.\n\n```__repr__```: Liefert den Representations-String des Objeks zurück.\n\n```__eq__```: Gibt zurück, ob die Position dem int-Wert des Arguments entspricht.\n\n```__ne__```: Gibt das invertierte Ergebnis der Methode ```__eq__``` zurück.\n\n```__lt__```: Prüft, ob die Position kleiner als der int-Wert des Arguments ist.\n\n```__gt__```: Prüft, ob die Position größer als der int-Wert des Arguments ist.\n\n```__le__```: Prüft, ob die Position kleiner oder gleich dem int-Wert des Arguments ist.\n\n```__ge__```: Prüft, ob die Position größer oder gleich dem int-Wert des Arguments ist.\n\n___\n\n##Uhrzeit\n\n###Exceptions\n\n* __UhrzeitException__ &rarr; Basisklasse für Exceptions, die mit der Uhrzeit zusammenhängen.\n\n###Methoden\n\n```__init__```: Nimmt eine Stunde, Minute und optional eine Sekunde als int-Werte. \n\n```von_uhrzeit_notation```: Interpretiert einen String einer bestimmten Notation in eine Uhrzeit.\n\n```stunde```: Property-Attribut, das die Stunde liefert.\n\n```minute```: Property-Attribut, das die Minute liefert.\n\n```sekunde```: Property-Attribut, das die Sekunde liefert.\n\n```__eq__```: Gibt zurueck, ob zwei Uhrzeiten gleich sind.\n\n```__ne__```: Invertiert das Ergebnis der Methode ```__eq__```.\n\n```__lt__```: Gibt zurück, ob die Uhrzeit kleiner als das Argument ist.\n\n```__gt__```: Gibt zurück, ob die Uhrzeit größer als das Argument ist.\n\n```__le_```: Gibt zurück, ob die Uhrzeit kleiner oder gleich dem Argument ist.\n\n```__ge__```: Gibt zurück, ob die Uhrzeit größer oder gleich dem Argument ist.\n\n```__repr__```: Gibt den Representations-String der Uhrzeit zurück.\n\n###Stunde\n\n####Exceptions\n\n* __StundeException__ &rarr; Basisklasse für Exceptions, die mit der Stunde zu tun haben.\n* __StundeKeineGanzeZahl__ &rarr; abgeleitet von __UhrzeitException__. Wird ausgelöst, wenn eine Stunde gegeben wird, \n  die kein int-Wert ist.\n* __StundeZuGross__ &rarr; abgeleitet von __StundeException__. Wird ausgelöst, \n  wenn eine Stunde, die größer ist als 59, gegeben wird.\n* __StundeZuKlein__ &rarr; abgeleitet von __StundeException__. Wird ausgelöst, \n  wenn eine Stunde, die kleiner ist als 0, gegeben wird.\n  \n####Methoden\n\n```__init__```: Nimmt eine Stunde als int-Wert.\n\n```stunde```: Property-Attribut, das die Stunde als int-Wert liefert.\n\n```__repr__```: Liefert einen Representations-String für das Objekt.\n\n```__str__```: Liefert den zweistelligen Wert der Stunde als String.\n\n```__int__```: Liefert die Stunde als int-Wert.\n\n###Minute\n\n####Exceptions\n\n* __MinuteException__ &rarr; abgeleitet von __UhrzeitException__. \n  Basisklasse für Exceptions, die mit Minuten zusammenhängen.\n* __MinuteKeineGanzeZahl__ &rarr; abgeleitet von __MinuteException__. Wird geworfen, \n  wenn eine gegebene Minute keine ganze Zahl ist.\n* __MinuteZuGross__ &rarr; abgeleitet von __MinuteException__. Wird geworfen, wenn eine Minute größer als 59 ist.\n* __MinuteZuKlein__ &rarr; abgeleitet von __MinuteException__. Wird geworfen, wenn eine Minute kleiner als 0 ist.\n\n####Methoden\n\n```__init__```: Nimmt die Minute als int-Wert.\n\n```minute```: Property-Attribut, das die Minute liefert.\n\n```__repr__```: Liefert den Representations-String für die Minute.\n\n```__str__```: Liefert den zweistelligen String der Minute.\n\n```__int__```: Liefert den Wert der Minute als Integer.\n\n###Sekunde\n\n####Exceptions\n\n* __SekundeExceptions__ &rarr; abgeleitet von __UhrzeitException__. \n  Basisklasse für Exceptions, die mit einer Sekunde zusammenhängen.\n* __SekundeKeineGanzeZahl__ &rarr; abgeleitet von __SekundeExceptions__. Wird ausgelöst, \n  wenn die Sekunde keine ganze Zahl ist.\n* __SekundeZuGross__ &rarr; abgeleitet von __SekundeZuGross__. Wird ausgelöst, wenn die Sekunde größer als 59 ist.\n* __SekundeZuKlein__ &rarr; abgeleitet von __SekundeZuKlein__. Wird ausgelöst, wenn die Sekunde kleiner als 0 ist.\n\n####Methoden\n\n```__init__```: Nimmt die Sekunde als Integer;\n\n```sekunde```: Property-Attribut, das die Sekunde liefert.\n\n```__repr__```: Liefert den Representations-String der Sekunde.\n\n```__str__```: Liefert den zweistelligen String der Sekunde ohne zusätzliche Zeichen. \n\n```__int__```: Liefert den Wert der Sekunde als Integer.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/heureka-code/Kronos-heureka-code/archive/refs/tags/1.0.1.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/heureka-code/Kronos-heureka-code",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Kronos-heureka-code",
    "package_url": "https://pypi.org/project/Kronos-heureka-code/",
    "platform": "",
    "project_url": "https://pypi.org/project/Kronos-heureka-code/",
    "project_urls": {
      "Download": "https://github.com/heureka-code/Kronos-heureka-code/archive/refs/tags/1.0.1.1.tar.gz",
      "Homepage": "https://github.com/heureka-code/Kronos-heureka-code"
    },
    "release_url": "https://pypi.org/project/Kronos-heureka-code/1.0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Bietet die Verwaltung von Daten und Uhrzeiten",
    "version": "1.0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10919378,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a45e96def1559c4c20340d09db760e2cb52f306d7d06a6c1902afec5c6d0f528",
          "md5": "810718aad82374d73d09bd90456c68bc",
          "sha256": "48ff9aa62a0ae8ce88e765dcb139bef8b56f98bb3f67e664e518ea32a580833a"
        },
        "downloads": -1,
        "filename": "Kronos_heureka_code-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "810718aad82374d73d09bd90456c68bc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29154,
        "upload_time": "2021-07-15T14:56:16",
        "upload_time_iso_8601": "2021-07-15T14:56:16.673991Z",
        "url": "https://files.pythonhosted.org/packages/a4/5e/96def1559c4c20340d09db760e2cb52f306d7d06a6c1902afec5c6d0f528/Kronos_heureka_code-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3b513e7709536bedf19c77543cc99de66fb14482320a5792efee7aab594ba3f",
          "md5": "e016889db71f7386afc33e9a81a627fe",
          "sha256": "e2107e6e065eb6c5f479b324b14f1faae62c37586471c397aed8107ec090cd2b"
        },
        "downloads": -1,
        "filename": "Kronos-heureka-code-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e016889db71f7386afc33e9a81a627fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20484,
        "upload_time": "2021-07-15T14:56:18",
        "upload_time_iso_8601": "2021-07-15T14:56:18.541529Z",
        "url": "https://files.pythonhosted.org/packages/d3/b5/13e7709536bedf19c77543cc99de66fb14482320a5792efee7aab594ba3f/Kronos-heureka-code-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cffe77a820eec043146b4a493129551fea6cf21cba57edb1c07bba4192fc6b62",
          "md5": "234855a0ee12470060ec62c0c9e97d52",
          "sha256": "b4f319610802e8f5addba31fe485da3a8966490dd8dd9f35fc50cdeff7a8042c"
        },
        "downloads": -1,
        "filename": "Kronos_heureka_code-1.0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "234855a0ee12470060ec62c0c9e97d52",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29178,
        "upload_time": "2021-07-15T15:03:33",
        "upload_time_iso_8601": "2021-07-15T15:03:33.377710Z",
        "url": "https://files.pythonhosted.org/packages/cf/fe/77a820eec043146b4a493129551fea6cf21cba57edb1c07bba4192fc6b62/Kronos_heureka_code-1.0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "713ddbb83852560b9d2df5d4cfa62ce8f876395d499639c58bacdf18e38d46ed",
          "md5": "689c0c06034001919f390c118ca4d339",
          "sha256": "a641a37a23d5ffa11cc874a26264c1240da4da0304c8a30953820c4c2e952e42"
        },
        "downloads": -1,
        "filename": "Kronos-heureka-code-1.0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "689c0c06034001919f390c118ca4d339",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20487,
        "upload_time": "2021-07-15T15:03:34",
        "upload_time_iso_8601": "2021-07-15T15:03:34.813180Z",
        "url": "https://files.pythonhosted.org/packages/71/3d/dbb83852560b9d2df5d4cfa62ce8f876395d499639c58bacdf18e38d46ed/Kronos-heureka-code-1.0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cffe77a820eec043146b4a493129551fea6cf21cba57edb1c07bba4192fc6b62",
        "md5": "234855a0ee12470060ec62c0c9e97d52",
        "sha256": "b4f319610802e8f5addba31fe485da3a8966490dd8dd9f35fc50cdeff7a8042c"
      },
      "downloads": -1,
      "filename": "Kronos_heureka_code-1.0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "234855a0ee12470060ec62c0c9e97d52",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 29178,
      "upload_time": "2021-07-15T15:03:33",
      "upload_time_iso_8601": "2021-07-15T15:03:33.377710Z",
      "url": "https://files.pythonhosted.org/packages/cf/fe/77a820eec043146b4a493129551fea6cf21cba57edb1c07bba4192fc6b62/Kronos_heureka_code-1.0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "713ddbb83852560b9d2df5d4cfa62ce8f876395d499639c58bacdf18e38d46ed",
        "md5": "689c0c06034001919f390c118ca4d339",
        "sha256": "a641a37a23d5ffa11cc874a26264c1240da4da0304c8a30953820c4c2e952e42"
      },
      "downloads": -1,
      "filename": "Kronos-heureka-code-1.0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "689c0c06034001919f390c118ca4d339",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20487,
      "upload_time": "2021-07-15T15:03:34",
      "upload_time_iso_8601": "2021-07-15T15:03:34.813180Z",
      "url": "https://files.pythonhosted.org/packages/71/3d/dbb83852560b9d2df5d4cfa62ce8f876395d499639c58bacdf18e38d46ed/Kronos-heureka-code-1.0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}