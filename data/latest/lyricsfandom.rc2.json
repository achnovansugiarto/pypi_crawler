{
  "info": {
    "author": "Arthur Dujardin",
    "author_email": "arthur.dujardin@ensg.eu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# lyricsfandom\nScrape music data from LyricsWiki (https://lyrics.fandom.com). Artists, Albums, Songs can be extracted.\n\n*Project made during a Deep Learning project for music generation using GPT2 model.*\n\n\n# Installation\n\nInstall *lyricsfandom* package from *PyPi*:\n\n```\npip install lyricsfandom\n```\n\nOr from *GitHub*:\n\n```\ngit clone https://github.com/arthurdjn/scrape-lyricwiki\ncd scrape-lyricwiki\npip install .\n```\n\n# Getting Started\n\n## LyricsFandom API\n\nYou can search for ``Artist``, ``Album`` or ``Song`` from the API:\n\n```python\nfrom lyricsfandom import LyricWiki\n\n# Connect to the API\nwiki = LyricWiki()\n\n# Search for an artist. `LyricsFandom` is not case sensitive.\nartist = wiki.search_artist('london grammar')\n# Search for an album\nalbum = wiki.search_album('london grammar', 'if you wait')\n# ...Or a song\nsong = wiki.search_song('london grammar', 'strong')\n# And retrieve its lyrics\nlyrics = song.get_lyrics()\n```\n\n## Structure\n\nThe package is divided as follows:\n\n* ArtistMeta\n* AlbumMeta, inherits from ArtistMeta\n* SongMeta, inherits from AlbumMeta\n\n<p align=\"center\">\n<img src=\"img/lyricsfandom.png\" height=\"600\"/>\n</p>\n\n## Retrieve data\n\n\nOnce you have one of these objects, you can also access data directly through their methods:\n\n```python\nartist = wiki.search_artist('london grammar')\nalbums = artist.get_albums()\nsongs = artist.get_songs()\n\n# Idem from an album\nalbum = wiki.search_album('london grammar', 'if you wait')\nsongs = album.get_songs()\n```\n\nIn addition, you can retrieve parent objects from children:\n\n```python\nartist = wiki.search_artist('london grammar')\nsong = artist.search_song('strong')\n\n# Access to parent classes\nalbum = song.get_album()\nartist = song.get_artist()\n```\n\nYou can scrape for description, links and other details information:\n\n```python\nartist = wiki.search_artist('london grammar')\ninfo = artist.get_info()  # description of the artist (band members, genres, labels etc.)\nlinks = artist.get_links()  # links where to buy the artist's music.\n```\n\n## Save and export\n\nYou can save data in a JSON format (and encode it to ASCII if you want).\n\n```python\nartist = wiki.search_artist('london grammar')\nartist_data = artist.to_json(encode='ascii')\n# Idem for Album and Song\n```\n\n# Efficiency\n\nThis package can make a lot of connections while scraping data.\nHere is a small comparison of different packages, made on scraping 10 songs from an album.\n*pylyrics3* is the fastest to retrieve data, but it only return lyrics on a JSON format (and not OOP).\n*lyricsfandom* have similar results, but *lyricsmaster* is 10 times slower.\n\n![img](img/comparison.png)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/arthurdjn/scrape-lyricwiki",
    "keywords": "",
    "license": "MIT Licence",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lyricsfandom",
    "package_url": "https://pypi.org/project/lyricsfandom/",
    "platform": "",
    "project_url": "https://pypi.org/project/lyricsfandom/",
    "project_urls": {
      "Homepage": "https://github.com/arthurdjn/scrape-lyricwiki"
    },
    "release_url": "https://pypi.org/project/lyricsfandom/0.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Scrape songs on LyricWiki.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7300868,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a377843e9fd66a3569d19ac6456a0045e365ad3cc8d42b0f1358f934febec880",
          "md5": "0bbd2286ec19c8aeddd3d456c8709623",
          "sha256": "0edd12480fd22df190121b981efbd034286c2aa778594cd5caceae7bd525290b"
        },
        "downloads": -1,
        "filename": "lyricsfandom-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0bbd2286ec19c8aeddd3d456c8709623",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 498498,
        "upload_time": "2020-05-22T09:27:31",
        "upload_time_iso_8601": "2020-05-22T09:27:31.362067Z",
        "url": "https://files.pythonhosted.org/packages/a3/77/843e9fd66a3569d19ac6456a0045e365ad3cc8d42b0f1358f934febec880/lyricsfandom-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de231d50d673639a8490e3719579d04ed168b6aaee62e53591fc88ed25f8294b",
          "md5": "8d9fc369a9f45ecdef3fd26444571417",
          "sha256": "1e45c74a1cc43a75caf8994b78cf1388ed2cccc927c97fc137a02ef20cc50691"
        },
        "downloads": -1,
        "filename": "lyricsfandom-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8d9fc369a9f45ecdef3fd26444571417",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 498824,
        "upload_time": "2020-05-22T09:52:56",
        "upload_time_iso_8601": "2020-05-22T09:52:56.648299Z",
        "url": "https://files.pythonhosted.org/packages/de/23/1d50d673639a8490e3719579d04ed168b6aaee62e53591fc88ed25f8294b/lyricsfandom-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de231d50d673639a8490e3719579d04ed168b6aaee62e53591fc88ed25f8294b",
        "md5": "8d9fc369a9f45ecdef3fd26444571417",
        "sha256": "1e45c74a1cc43a75caf8994b78cf1388ed2cccc927c97fc137a02ef20cc50691"
      },
      "downloads": -1,
      "filename": "lyricsfandom-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8d9fc369a9f45ecdef3fd26444571417",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 498824,
      "upload_time": "2020-05-22T09:52:56",
      "upload_time_iso_8601": "2020-05-22T09:52:56.648299Z",
      "url": "https://files.pythonhosted.org/packages/de/23/1d50d673639a8490e3719579d04ed168b6aaee62e53591fc88ed25f8294b/lyricsfandom-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}