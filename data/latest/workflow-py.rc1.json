{
  "info": {
    "author": "chris deitrick",
    "author_email": "chrisdeitrick1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# isolate_parsers\n\n## Usage\n```\npython isolateset_parser.py [-h] [-i FOLDER] [--no-fasta] [-w WHITELIST]\n                            [-b BLACKLIST] [-m SAMPLE_MAP] [--filter-1000bp]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i FOLDER, --input FOLDER\n                        The breseq folder to parse.\n  --no-fasta            Whether to generate an aligned fasta file of all snps\n                        in the breseq VCF file.\n  -w WHITELIST, --whitelist WHITELIST\n                        Samples not in the whitelist are ignored. Either a\n                        comma-separated list of sample ids for a file with\n                        each sample id occupying a single line.\n  -b BLACKLIST, --blacklist BLACKLIST\n                        Samples to ignore. See `--whitelist` for possible\n                        input formats.\n  -m SAMPLE_MAP, --sample-map SAMPLE_MAP\n                        A file mapping sample ids to sample names. Use if the\n                        subfolders in the breseqset folder are named\n                        differently from the sample names. The file should\n                        have two columns: `sampleId` and `sampleName`,\n                        separated by a tab character.\n  --filter-1000bp       Whether to filter out variants that occur within\n                        1000bp of each other. Usually indicates a mapping\n                        error.\n```\n\n## Input\nThe scripts expect a folder of individual breseq runs, with each folder named after the isolate/sample.\nThe scipts only require the `output.vcf`, `annotated.gd`, and `index.html` files located in each folder.\nExample folder:\n```\n    .breseq_folder\n    |-- sample1\n    |   |-- data\n    |   |   |-- output.vcf\n    |   |-- output\n    |   |   |-- index.html\n    |   |   |-- evidence\n    |   |   |   |-- annotated.gd\n    |-- sample2\n    |   |-- data\n    |   |   |-- output.vcf\n    |   |-- output\n    |   |   |-- index.html\n    |   |   |-- evidence\n    |   |   |   |-- annotated.gd\n    |-- sample3\n    |   |-- data\n    |   |   |-- output.vcf\n    |   |-- output\n    |   |   |-- index.html\n    |   |   |-- evidence\n    |   |   |   |-- annotated.gd\n```\n\n## Output\nThe scripts generate an excel file in the breseq run folder with 4 sheets: `comparison`, `variant`, `coverage`, and `junction`.\nThe `variant`, `coverage`, and `junction` tables are just the concatenated tables of all samples in the breseq run.\n\n### Comparision table\nA table in which every row represents a single mutation seen in the sample callset \nand samples are represented by columns with the alternate sequence for each sample.\n\n| Sample1 | Sample2 | Sample3 | annotation                | description                                                                                     | gene                    | locusTag          | mutationCategory  | position | presentIn | presentInAllSamples | ref | seq id    | \n|---------|---------|---------|---------------------------|-------------------------------------------------------------------------------------------------|-------------------------|-------------------|-------------------|----------|-----------|---------------------|-----|-----------| \n| GG      | GG      | GG      | intergenic (+65/+20)      | putative lipoprotein/putative hydrolase                                                         | PFLU0045 - / - PFLU0046 | PFLU0045/PFLU0046 | small_indel       | 45881    | 3         | 1                   | G   | NC_012660 | \n| CC      | CC      | CC      | intergenic (+17/-136)     | microcin-processing peptidase 1. Unknown type peptidase. MEROPS family U62/hypothetical protein | PFLU0872 - / - PFLU0873 | PFLU0872/PFLU0873 | small_indel       | 985333   | 3         | 1                   | C   | NC_012660 | \n|         |         |         | intergenic (+57/+21)      | hypothetical protein/putative helicase                                                          | PFLU3154 - / - PFLU3155 | PFLU3154/PFLU3155 | small_indel       | 3447986  | 3         | 1                   |     | NC_012660 | \n| A       | A       | G       | M350I (ATG-ATA)           | putative GGDEF domain signaling protein                                                         | PFLU3571 -              | PFLU3571          | snp_nonsynonymous | 3959631  | 2         | 0                   | G   | NC_012660 | \n| A       | A       | C       | T238P (ACC-CCC)           | hybrid sensory histidine kinase in two-component regulatory system with UvrY                    | PFLU3777 -              | PFLU3777          | snp_nonsynonymous | 4173231  | 1         | 0                   | A   | NC_012660 | \n| G       | G       | GG      | coding (322/1476 nt)      | putative two-component system response regulator nitrogen regulation protein NR(I)              | PFLU4443 -              | PFLU4443          | small_indel       | 4908233  | 1         | 0                   | G   | NC_012660 | \n\n### Aligned fasta files\n\nThe scripts also generates 3 fasta files (`breseq.snp.fasta`, `breseq.amino.fasta`, `breseq.codon.fasta`)\nwith all nonsynonymous snps from each sample represented by the replacement bases, amino acids, and codons.\nExample:\n```\n>reference\nGA\n>Sample1\nAA\n>Sample2\nAA\n>Sample3\nGC\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cdeitrick/isolate_parsers",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "workflow.py",
    "package_url": "https://pypi.org/project/workflow.py/",
    "platform": "",
    "project_url": "https://pypi.org/project/workflow.py/",
    "project_urls": {
      "Homepage": "https://github.com/cdeitrick/isolate_parsers"
    },
    "release_url": "https://pypi.org/project/workflow.py/0.1.0/",
    "requires_dist": [
      "pandas (>=0.24.0)",
      "loguru",
      "xlrd",
      "beautifulsoup4 ; extra == 'additional_support_for_parsing_files'",
      "pytest ; extra == 'to_run_tests'"
    ],
    "requires_python": "",
    "summary": "A set of scripts to convert multiple breseq analyses together and highlight variabls of interest.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7800073,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3bd1e9bf32f529ab19d39e14d7244988cb8297bcd230ff11dcb4204bd21a6ef1",
          "md5": "c133ea75e638be2437c95859093aabf0",
          "sha256": "a8ccff7ec629e780b57c980340c47d4026d673ae349cd1f183bf98e59cf46d21"
        },
        "downloads": -1,
        "filename": "workflow.py-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c133ea75e638be2437c95859093aabf0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22121,
        "upload_time": "2020-07-27T17:11:44",
        "upload_time_iso_8601": "2020-07-27T17:11:44.402035Z",
        "url": "https://files.pythonhosted.org/packages/3b/d1/e9bf32f529ab19d39e14d7244988cb8297bcd230ff11dcb4204bd21a6ef1/workflow.py-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76c2ba9e898fcc1bf65399ee651d2eb62b9b3e14870378bd607ca6593f0faf49",
          "md5": "0c2ff351a52738e72c37ea92001fa2ce",
          "sha256": "f838d8e0a9b5d739357207fb321aec2b0390b4ce7f33304098ebe0eeb2e13edf"
        },
        "downloads": -1,
        "filename": "workflow.py-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0c2ff351a52738e72c37ea92001fa2ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18126,
        "upload_time": "2020-07-27T17:11:46",
        "upload_time_iso_8601": "2020-07-27T17:11:46.595746Z",
        "url": "https://files.pythonhosted.org/packages/76/c2/ba9e898fcc1bf65399ee651d2eb62b9b3e14870378bd607ca6593f0faf49/workflow.py-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3bd1e9bf32f529ab19d39e14d7244988cb8297bcd230ff11dcb4204bd21a6ef1",
        "md5": "c133ea75e638be2437c95859093aabf0",
        "sha256": "a8ccff7ec629e780b57c980340c47d4026d673ae349cd1f183bf98e59cf46d21"
      },
      "downloads": -1,
      "filename": "workflow.py-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c133ea75e638be2437c95859093aabf0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 22121,
      "upload_time": "2020-07-27T17:11:44",
      "upload_time_iso_8601": "2020-07-27T17:11:44.402035Z",
      "url": "https://files.pythonhosted.org/packages/3b/d1/e9bf32f529ab19d39e14d7244988cb8297bcd230ff11dcb4204bd21a6ef1/workflow.py-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "76c2ba9e898fcc1bf65399ee651d2eb62b9b3e14870378bd607ca6593f0faf49",
        "md5": "0c2ff351a52738e72c37ea92001fa2ce",
        "sha256": "f838d8e0a9b5d739357207fb321aec2b0390b4ce7f33304098ebe0eeb2e13edf"
      },
      "downloads": -1,
      "filename": "workflow.py-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0c2ff351a52738e72c37ea92001fa2ce",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18126,
      "upload_time": "2020-07-27T17:11:46",
      "upload_time_iso_8601": "2020-07-27T17:11:46.595746Z",
      "url": "https://files.pythonhosted.org/packages/76/c2/ba9e898fcc1bf65399ee651d2eb62b9b3e14870378bd607ca6593f0faf49/workflow.py-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}