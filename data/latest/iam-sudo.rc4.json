{
  "info": {
    "author": "Mark van Holsteijn",
    "author_email": "mark@binx.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# NAME\n\n   iam-sudo - get credentials of a real or simulated IAM role\n\n## Usage\n\n```\nUsage: iam-sudo assume [OPTIONS] [CMD]...\n\nOptions:\n--role-name NAME   to assume  [required]\n--profile PROFILE  to save the credentials under\n\n```\n\n```\nUsage: iam-sudo simulate [OPTIONS] [CMD]...\n\nOptions:\n  --role-name NAME       to simulate  [required]\n  --principal PRINCIPAL  of the simulated role\n  --base-role NAME       to assume to simulate the role\n  --remote / --local     invoke lambda, default --remote\n  --profile PROFILE      to save the credentials under\n```\n\n## DESCRIPTION\n\niam-sudo supports the `assume` and the `simulate` commands.\n\n### assume command\nthis command will assume the specified role and return the credentials.\n\nIf a `profile` is specified, the credentials will be stored in `~/.aws/credentials`.\n\nIf a command is specified, it will be executed with the obtained credentials. This is done\nby setting the environment variables `AWS_ACCESS_KEY_ID`, `AWS_SECRET_ACCESS_KEY` and `AWS_SESSION_TOKEN`.\n\n\n## simulate command\niam-sudo simulate will read the attached policies and inline policies of the specified `role-name`.\nThese policies will be used to create the session policy. The `base-role` is the\nrole that will be assumed combined with the session policy, to mimic the specified role.\n\n`role-name` is a substring of the role to assume. This is to make it easier to assume a\nrole that was created by AWS CloudFormation. For instance, both `TaskRoles`\nand `my-stack-TaskRole` may resolve to the role `my-stack-TaskRole-9AO01PCC7I0T`.\n\nIf multiple matching roles are found, an error is returned. You may also specify\nthe `principal` to reduce the number of matching roles: for\ninstance `--principal Service:ecs-tasks.amazonaws.com`.\n\nIf a `profile` is specified, the credentials will be stored in `~/.aws/credentials`.\n\nIf a command is specified, it will be executed with the obtained credentials. This is done\nby setting the environment variables `AWS_ACCESS_KEY_ID`, `AWS_SECRET_ACCESS_KEY` and `AWS_SESSION_TOKEN`.\n\nThe `remote` flag wil invoke the iam-sudo Lambda function to generate credentials. This\nremote option, is required to really give users sudo-like permissions which exceeds\ntheir own. Without the `remote` flag, the user will not be able to get more\npermissions, than granted to him/her.\n\n### Sudo simulated Policy\nTo limit the roles which can be simulated, a policy can be specified. The following\nsnippet shows the default sudo policy:\n\n```yaml\nallowed-role-names:\n  - \"*\"\nallowed-principals:\n  - \"*\" : \"*\"\nallowed-base-roles:\n  - \"arn:aws:iam::*:role/*\"\n```\nThe following table shows a short description of the fields.\n\n| field | description |\n| ----- | ------------|\n| allowed-role-names| a list of glob patterns specifying allowed role names|\n| allowed-principals| a list of glob patterns specifying principal type and identity |\n| allowed-base-role | a list of glob patterns specifying allowed base roles|\n\nThe default client policy is to allow all role names, all principals and all base\nroles to be specified.\n\nThe following policy, restricts requests to any AWS ECS task role and the base\nrole to the IAmSudoUser.\n\n```yaml\nallowed-role-names:\n  - \"*\"\nallowed-principals:\n  - \"Service\" : \"ecs-tasks.amazonaws.com\"\nallowed-base-roles:\n  - \"arn:aws:iam::123456789012:role/IAMSudoUser\"\n```\n\n## installation\nThe installation comes in two parts: the client and the server.\n\nTo install the client, type:\n\n```sh\npip install iam-sudo\n```\n\nTo install the server, type:\n\n```\naws cloudformation create-stack \\\n     --stack-name iam-sudo \\\n    --template-url  https://binxio-public-eu-central-1.s3.amazonaws.com/lambdas/iam-sudo-0.2.0.yaml \\\n    --capabilities CAPABILITY_NAMED_IAM\naws cloudformation wait stack-create-complete --stack-name iam-sudo\n```\n\nAlternatively, you can create the stack via\nthe [AWS console](https://console.aws.amazon.com/cloudformation/home?#/stacks/new?stackName=iam-sudo&templateURL=https%3A%2F%2Fbinxio-public-eu-central-1.s3.amazonaws.com%2Flambdas%2Fiam-sudo-0.2.0.yaml).\n\nTo allow users to use the remote function, they should be granted permission to\ninvoke the created Lambda function `iam-sudo`.\n\n## ENVIRONMENT VARIABLES\nThe iam-sudo simulate allows following environment variables to be set:\n\n| name | description|\n|------|------------|\n| IAM\\_SUDO\\_BASE\\_ROLE | The role to assume over which the session policies are added, default `IAMSudoUser`|\n| IAM\\_SUDO\\_POLICY | The policy which governs which roles can be assumed, default any |\n\nThe lambda function requires you to set both.\n\nRead the blog [How to assume an ECS task role in AWS, the official and the fake way](https://binx.io/blog/2021/02/27/how-to-simulate-an-ecs-task-role-in-aws/).",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/binxio/iam-sudo",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "iam-sudo",
    "package_url": "https://pypi.org/project/iam-sudo/",
    "platform": "any",
    "project_url": "https://pypi.org/project/iam-sudo/",
    "project_urls": {
      "Homepage": "https://github.com/binxio/iam-sudo"
    },
    "release_url": "https://pypi.org/project/iam-sudo/0.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "generates credentials to impersonate IAM Roles",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9542118,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1fc6374899a10f54ac458db881c0f696bad522b1a7992ead037f07496dbc7f30",
          "md5": "e1c43664ed3931f4e03bc3763311e2db",
          "sha256": "7e1e19c4c4f02d6b97d07ec86d3475b73ee149c8229a4aea5fbe5a986cb4f03d"
        },
        "downloads": -1,
        "filename": "iam-sudo-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e1c43664ed3931f4e03bc3763311e2db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7203,
        "upload_time": "2021-02-04T11:53:25",
        "upload_time_iso_8601": "2021-02-04T11:53:25.893708Z",
        "url": "https://files.pythonhosted.org/packages/1f/c6/374899a10f54ac458db881c0f696bad522b1a7992ead037f07496dbc7f30/iam-sudo-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9e1261ebc692aa0442c7a6932b7530e58b444fe99265184ff40b74596c8978c",
          "md5": "31442a35f02f6f919abafeefe6587cb3",
          "sha256": "3f8fb07a74dc2b3a125fffa6074fd4c207f3f85605c2f36c88c6a6116daa0654"
        },
        "downloads": -1,
        "filename": "iam-sudo-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "31442a35f02f6f919abafeefe6587cb3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10464,
        "upload_time": "2021-02-04T21:10:13",
        "upload_time_iso_8601": "2021-02-04T21:10:13.690597Z",
        "url": "https://files.pythonhosted.org/packages/d9/e1/261ebc692aa0442c7a6932b7530e58b444fe99265184ff40b74596c8978c/iam-sudo-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66249b859507ee0697bf85c036724c1821bf831d0b2df1abff927ddff41df0ad",
          "md5": "f7ff387318545cd031eed3ba058ddf07",
          "sha256": "f1c4b36da6286c9357f6322c574531acf529a6a25cb229413c08dab79da25873"
        },
        "downloads": -1,
        "filename": "iam-sudo-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f7ff387318545cd031eed3ba058ddf07",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10473,
        "upload_time": "2021-02-15T07:24:34",
        "upload_time_iso_8601": "2021-02-15T07:24:34.449099Z",
        "url": "https://files.pythonhosted.org/packages/66/24/9b859507ee0697bf85c036724c1821bf831d0b2df1abff927ddff41df0ad/iam-sudo-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "421a49e00c2ade1a4d3ef4f78de5be1bb43d9948b4f47075a84fdc248adc3794",
          "md5": "0933f7527c1d2c7afef30fe318483de3",
          "sha256": "103391bce862c288b4227260fa27fbc6efc87a67246c8bd3d2a4e84f864b099e"
        },
        "downloads": -1,
        "filename": "iam-sudo-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0933f7527c1d2c7afef30fe318483de3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11358,
        "upload_time": "2021-02-27T15:03:35",
        "upload_time_iso_8601": "2021-02-27T15:03:35.486230Z",
        "url": "https://files.pythonhosted.org/packages/42/1a/49e00c2ade1a4d3ef4f78de5be1bb43d9948b4f47075a84fdc248adc3794/iam-sudo-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "421a49e00c2ade1a4d3ef4f78de5be1bb43d9948b4f47075a84fdc248adc3794",
        "md5": "0933f7527c1d2c7afef30fe318483de3",
        "sha256": "103391bce862c288b4227260fa27fbc6efc87a67246c8bd3d2a4e84f864b099e"
      },
      "downloads": -1,
      "filename": "iam-sudo-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0933f7527c1d2c7afef30fe318483de3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11358,
      "upload_time": "2021-02-27T15:03:35",
      "upload_time_iso_8601": "2021-02-27T15:03:35.486230Z",
      "url": "https://files.pythonhosted.org/packages/42/1a/49e00c2ade1a4d3ef4f78de5be1bb43d9948b4f47075a84fdc248adc3794/iam-sudo-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}