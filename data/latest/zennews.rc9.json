{
  "info": {
    "author": "ZenML GmbH",
    "author_email": "info@zenml.io",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# 📜 ZenNews: Generate summarized news on a schedule\n\nIn today's information age, we are bombarded with a constant stream of news \nand media from a variety of sources. Summarizing tasks, particularly when it \ncomes to news sources, can be a powerful tool for the efficient consumption of \ninformation. They distill complex or lengthy content into easily \ndigestible chunks that can be scanned and absorbed quickly, allowing us to \nkeep up with the news without being overwhelmed. They can also help us separate \nthe signal from the noise, highlighting the most important details and helping \nus identify what's worth further investigation. \n\nThis is where **ZenNews** come into play. It offers a tool that can \nautomate the summarization process and save users time and effort while \nproviding them with the information they need. This can be particularly valuable \nfor busy professionals or anyone who wants to keep up with the news but doesn't \nhave the time to read every article in full.\n\n# 🎯 The goal of the project\n\nThe definition of the concrete use case aside, this project aims to showcase \nsome of the advantages that ZenML brings to the table. Some major points we \nwould like to highlight include:\n\n- **The ease of use**: ZenML features [a simple and clean Python \nSDK](https://docs.zenml.io/starter-guide/pipelines). As you can \nobserve in this example, it is not only used to define your steps and \npipelines but also to access/manage the resources and artifacts that you \ninteract with along the way. This makes it significantly easier for you \nto build their applications around ZenML.\n\n- **The extensibility**: ZenML is an extensible framework. ML projects often \nrequire custom-tailored solutions and what you get out of the box may not be \nwhat you need. This is why ZenML is using base abstractions to allow you \nto create your own solutions without reinventing the whole wheel. You can find \ngreat examples of this feature by taking a look at the custom materializer \n([ArticleMaterializer](src/zennews/materializers/article_materializer.py)) \nand the custom stack component \n([DiscordAlerter](src/zennews/alerter/discord_alerter.py)) \nimplemented within the context of this project.\n\n- **Stack vs Code**: One of the main features of ZenML is rooted within the \nconcept of our stacks. As you follow this example, you will see that there is a \ncomplete separation between the code and the infrastructure that the pipeline \nis running on. In fact, by utilizing just one flag, it is possible to switch \nfrom a local default stack to a remote deployment with scheduled pipelines.\n\n- **The scalability**: This is a small PoC-like example that aims to prove \nthat ZenML can help you streamline your workflows and accelerate your \ndevelopment process. However, it barely scratches the surface of how you can \nimprove it even further. For more information, check \n[this section](#-limitations-future-improvements-and-upcoming-changes).\n\n# 🐍 Base installation\n\nThe **ZenNews** project is designed as a \n[PyPI package](https://pypi.org/project/zennews/)\nthat you can install through `pip`:\n\n```bash\npip install zennews\n```\n\nThe package comes equipped with the following set of **key** pieces:\n\n- **The pipeline**: The [`zen_news_pipeline`](src/zennews/pipelines/zen_news_pipeline.py) \nis the main pipeline in this workflow. In total, it features three steps, \nnamely `collect`, `summarize` and `report`. The first step is responsible \nfor collecting articles, the second step summarizes them, and the last step \ncreates a report and posts it.\n- **The steps**: There is a concrete implementation for each step defined above.\n  - For the `collect` step, we have the [`bbc_news_source`](src/zennews/steps/sources/bbc.py)\n  which (by default) collects the top stories from the BBC news feed and \n  prepares [`Article`](src/zennews/models/article.py) objects. \n  - For the `summarize` step, we have implemented [`bart_large_cnn_samsum`](src/zennews/steps/summarize/bart_large_cnn_samsum.py)\n  step. As the name suggests, it uses the BART model to generate summaries. \n  - Ultimately, for the `report` step, we have implemented the \n  [`post_summaries`](src/zennews/steps/report/report.py) \n  step. It showcases how a generalized step can function within a ZenML \n  pipeline and uses an alerter to share the results.\n- **The materializer**: As mentioned above, the steps within our pipeline are \nusing the concept of `Article`s to define their input and output space. Using \nthe [`ArticleMaterializer`](src/zennews/materializers/article_materializer.py), \nwe can show how to handle the materialization of these artifacts \nwhen it comes to a data type that is not built-in.\n- **The custom stack component**: The ultimate goal of `ZenNews` is to \nserve the use the direct outcomes of the pipeline. That is why we have used it\nas a chance to show the extensibility of ZenML in terms of the stack components \nand implemented a [`DiscordAlerter`](src/zennews/alerter/discord_alerter.py).\n- **The CLI application**: The example also includes a \n[Click](https://click.palletsprojects.com/en/8.1.x/) CLI application. \nIt utilizes how easily you can use our Python SDK to build your application \naround your ZenML workflows. In order to see it in action simply execute:\n\n  ```bash\n  zennews --help \n   ```\n\n# 🕹 Test it locally right away\n\nAfter installing the `zennews` package, you are ready to test it out locally \nright away. The following command will get the top five articles from the BBC\nnews feed, summarize them and present the results to you. \n\n> Warning: This will temporarily switch your active ZenML stack to the \n> **default** stack and when the pipeline runs, you will download the model \n> to your local machine.\n\n```bash\nzennews bbc\n```\n\nYou can also parameterize this process. In order to see the possible \nparameters, please use:\n\n```bash\nzennews bbc --help\n```\n\n# 🚀 Switching to scheduled pipelines with Vertex\n\nThe potential of an application like `zennews` can be only unlocked by \nscheduling summarization pipelines instead of manually triggering them \nyourself. In order to showcase it, we will set up a fully remote GCP stack \nand use the `VertexOrchestrator` to schedule the pipeline.\n\n## Deploy ZenML on GCP\n\nBefore you start building the stack, you need to deploy ZenML on GCP. For more \ninformation on how you can achieve do that, please check \n[the corresponding docs page](https://docs.zenml.io/getting-started/deploying-zenml).\n\n## ZenNews Stack\n\nOnce the ZenML is deployed, we can start to build up our stack. Our stack will \nconsist of the following components:\n\n- [GCP Secrets Manager](https://docs.zenml.io/component-gallery/secrets-managers/gcp)\n- [GCP Container Registry](https://docs.zenml.io/component-gallery/container-registries/gcloud)\n- [GCS Artifact Store](https://docs.zenml.io/component-gallery/artifact-stores/gcloud-gcs)\n- [Vertex Orchestrator](https://docs.zenml.io/component-gallery/orchestrators/gcloud-vertexai)\n- [Discord Alerter (part of the `zennews` package)](src/zennews/alerter/discord_alerter.py)\n \nLet's start by installing the `gcp` integration:\n\n```bash\nzenml integration install gcp\n```\n\n### Secrets Manager\n\nThe first component to register is a\n[GCP secrets manager](https://docs.zenml.io/component-gallery/secrets-managers/gcp). \nThe command is quite straightforward. You just have to give it a name and \nprovide the ID of your project on GCP.\n\n```bash\nzenml secrets-manager register <SECRETS_MANAGER_NAME> \\\n    --flavor=gcp \\\n    --project_id=<PROJECT_ID>\n```\n\n### Container Registry\n\nThe second component is a \n[GCP container registry](https://docs.zenml.io/component-gallery/container-registries/gcloud). \nSimilar to the previous component, you just need to provide a name and the \nURI to your container registry on GCP.\n\n```bash\nzenml container-registry register <CONTAINER_REGISTERY_NAME> \\\n    --flavor=gcp \\\n    --uri=<REGISTRY_URI>\n```\n\n### Artifact Store\n\nThe next component on the list is a \n[GCS artifact store](https://docs.zenml.io/component-gallery/artifact-stores/gcloud-gcs). \nIn order to register it, all you have to do is to provide the path to your GCS\nbucket:\n\n```bash \nzenml artifact-store register <ARTIFACT_STORE_NAME> \\\n    --flavor=gcp \\\n    --path=<PATH_TO_BUCKET> \n```\n\n### Orchestrator\n\nFollowing the artifact store, we will register a\n[Vertex AI orchestrator.](https://docs.zenml.io/component-gallery/orchestrators/gcloud-vertexai)\n\n```bash\nzenml orchestrator register <ORCHESTRATOR_NAME> \\\n    --flavor=vertex \\\n    --project=<PROJECT_ID> \\\n    --location=<GCP_LOCATION> \\\n    --workload_service_account=<EMAIL_OF_YOUR_SERVICE_ACCOUNT> \\\n    --service_account_path=<PATH_TO_YOUR_SERVICE_ACCOUNT_KEY>\n```\n\nYou need to simply provide the id of your project, the name of your GCP \nregion and the service account you would like to use.\n\n> Warning: In this version, you have to provide both the email of the service \n> account and the path to a key.json file. This interaction will be improved \n> in the upcoming releases.\n\nMake sure that the service account has the proper roles for the following \nservices: Cloud Functions, Cloud Scheduler, Secret Manager, Service Account,\nStorage, and Vertex AI.\n\n\n### GCP Stack\n\nWith these four components, we are ready to establish and activate the base \nversion of our GCP stack.\n\n```bash\nzenml stack register <STACK_NAME> \\\n    -x <SECRETS_MANAGER_NAME> \\\n    -c <CONTAINER_REGISTERY_NAME> \\\n    -a <ARTIFACT_STORE_NAME> \\\n    -o <ORCHESTRATOR_NAME> \\\n    --set\n```\n\n### Alerter \n\nThe last component in our stack is a special case. As mentioned before\nthe `zennews` package already comes equipped with a custom stack component \nimplementation, namely the `DiscordAlerter`. In a nutshell, it uses the \n[**discord.py**](https://discordpy.readthedocs.io/en/stable/index.html) package\nto send messages via a webhook to a discord text channel. You can find the \nimplementation right [here](src/zennews/alerter/discord_alerter.py).\n\nThe following sections show how we can register `DiscordAlerter` as a custom \nflavor, create an instance of it, and update our stack.\n\n#### Registering the custom flavor\n\nAll you have to do to register such a custom flavor is to provide the \ncorresponding source path to the flavor class.\n\n```bash\nzenml alerter flavor register zennews.alerter.discord_alerter_flavor.DiscordAlerterFlavor\n```\n\nZenML will import and add that to the list of available alerter flavors.\n\n```bash \nzenml alerter flavor list\n```\n\n#### Registering the alerter\n\nNow that the flavor is registered, you can create an alerter with the flavor\n`discord-webhook`. Through this example, you will also see how you can use \nsecret references to handle sensitive information during the registration of \nstack components.\n\nLet's start by registering the secret:\n\n```bash\nzenml secrets-manager secret register <SECRET_NAME> \\\n    --webhook_url=<ACTUAL_URL_OF_THE_WEBHOOK>\n```\n\nThis will use the secrets manager in our active GCP stack. Once the secret \nregistration is complete, you can register your alerter as follows:\n\n```bash\nzenml alerter register <ALERTER_NAME> \\\n    --flavor discord-webhook \\\n    --webhook_url=<SECRET_REFERENCE>  # formatted as {{SECRET_NAME:WEBHOOK_URL}}\n```\n\n#### Updating the stack\n\nThe last step is to update our stack with our new alerter:\n\n```bash\nzenml stack update <STACK_NAME> -al <ALERTER_NAME>\n```\n\n## Scheduling pipelines through the `zennews` CLI\n\nNow the stack is set up, you can use the `--schedule` option when you run your \n`zennews` pipeline. There are three possible values that you can use for the \n`schedule` option: `hourly`, `daily` (every day at 9 AM), or `weekly` (every\nMonday at 9 AM).\n\n```bash\nzennews bbc --schedule daily\n```\n\nThis will use your active stack (the GCP stack) and schedule your ZenNews \npipeline.\n\n# 📙 Limitations, future improvements and upcoming changes\n\nBefore we end this project, it is also important to talk about the limitations\nwe faced, the possible future improvements, and changes that are already in \nmotion:\n\n- The first limitation of ZenNews is the number of supported news sources.\nAs this project was initially designed as a PoC, the only supported news \nsource is BBC. However, thanks to our design, it is really easy to expand this \nlist by adding additional steps, which consume data and create `Article` \nobjects.\n- The ability to schedule pipelines through ZenML played a critical role \nwithin the context of this project. However, this feature has its own \nlimitations. While you can create scheduled pipelines, once the pipeline and \nits schedule is created, you can not cancel or modify the behavior of this \nscheduled pipeline. This means that if you want to cancel it, you have to do it \nvia the orchestrator UI or interface yourself and not from within ZenML.\n- The other limitation regarding the schedules is the format. As of now, the \nCLI application takes the user input and converts it into a cron expression.\nAny orchestrator which does not support these expressions is not supported.\n- As the ZenML team, we have been looking for ways to improve the interface \nof our base alerters. You might see some changes in upcoming releases. \n- Similar to the alerters, we are working on improving the management of our \nsecrets. \n \nTune in to [our slack](https://zenml.io/slack-invite/) to stay updated about \nthe upcoming changes and ask any questions you might have.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://zenml.io/project/zen-news-summarization",
    "keywords": "zenml",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zennews",
    "package_url": "https://pypi.org/project/zennews/",
    "platform": null,
    "project_url": "https://pypi.org/project/zennews/",
    "project_urls": {
      "Homepage": "https://zenml.io/project/zen-news-summarization",
      "Repository": "https://github.com/zenml-io/zenml-projects/tree/main/zen-news-summarization"
    },
    "release_url": "https://pypi.org/project/zennews/0.1.8/",
    "requires_dist": [
      "zenml[server] (==0.32.1)",
      "bbc-feeds (==2.1)",
      "transformers (==4.26.0)",
      "torch (==1.13.1)",
      "mdutils (==1.4.0)",
      "discord.py (==2.1.0)"
    ],
    "requires_python": ">=3.8.0,<3.11",
    "summary": "ZenNews: Get summarized news on a schedule.",
    "version": "0.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16945755,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6be68ca41992b0c22f1725c5c6c126aa6599e879ff192c980c25005c55af7a61",
          "md5": "42e38e77ac96708a2c3575e233eb3ed6",
          "sha256": "1cdc308df6992d31e51876812d69ace6ed6ddc2a5595cd4d0003efbfdcd4f4bb"
        },
        "downloads": -1,
        "filename": "zennews-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "42e38e77ac96708a2c3575e233eb3ed6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.0,<3.11",
        "size": 22652,
        "upload_time": "2023-02-14T09:58:03",
        "upload_time_iso_8601": "2023-02-14T09:58:03.164089Z",
        "url": "https://files.pythonhosted.org/packages/6b/e6/8ca41992b0c22f1725c5c6c126aa6599e879ff192c980c25005c55af7a61/zennews-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3d4e2275fb950232c1ee783adc03ac9f18bb571bc22683e016a126b07392220",
          "md5": "eaae461e33499ffc9e6f3ee2aa1e0d97",
          "sha256": "9fb0aaaf4b106a4a250b7de458104a227eed7b05dae3b1c8b617c5ca44f69773"
        },
        "downloads": -1,
        "filename": "zennews-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "eaae461e33499ffc9e6f3ee2aa1e0d97",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0,<3.11",
        "size": 11465,
        "upload_time": "2023-02-14T09:58:05",
        "upload_time_iso_8601": "2023-02-14T09:58:05.404419Z",
        "url": "https://files.pythonhosted.org/packages/a3/d4/e2275fb950232c1ee783adc03ac9f18bb571bc22683e016a126b07392220/zennews-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b86597cf0e6571541d9658ebedf97b35341540323aa07a0503868920f9bb3d0",
          "md5": "2e42049bd2c6f599c701e9737951060d",
          "sha256": "5fc71ad055fbc844672a67321e0bd5c38c4557111d716c1d47f9da5fea4eaab0"
        },
        "downloads": -1,
        "filename": "zennews-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e42049bd2c6f599c701e9737951060d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.0,<3.11",
        "size": 22521,
        "upload_time": "2023-02-14T10:22:03",
        "upload_time_iso_8601": "2023-02-14T10:22:03.043226Z",
        "url": "https://files.pythonhosted.org/packages/2b/86/597cf0e6571541d9658ebedf97b35341540323aa07a0503868920f9bb3d0/zennews-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6c8a9084035d4b852d0a44e74e6bcc4824f2b30c4ff07ce30793bada2fa1e18",
          "md5": "6d71ab885811267bdda0798f60c70353",
          "sha256": "0a3a37360b03893599a90ad98844e3efd3297efafa681d281fc5c11be4075d98"
        },
        "downloads": -1,
        "filename": "zennews-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6d71ab885811267bdda0798f60c70353",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0,<3.11",
        "size": 11324,
        "upload_time": "2023-02-14T10:22:04",
        "upload_time_iso_8601": "2023-02-14T10:22:04.901597Z",
        "url": "https://files.pythonhosted.org/packages/f6/c8/a9084035d4b852d0a44e74e6bcc4824f2b30c4ff07ce30793bada2fa1e18/zennews-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3db2388e9a0cb9d334b076f04938fc08daa0da5af13bf24584d7a97a4c48494f",
          "md5": "e5e74db279db504981301d3f019c610c",
          "sha256": "143525e69daa24049aa3606800e6ac037eca8bf06e539c987617f649178e27b4"
        },
        "downloads": -1,
        "filename": "zennews-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5e74db279db504981301d3f019c610c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.0,<3.11",
        "size": 22539,
        "upload_time": "2023-02-14T12:42:48",
        "upload_time_iso_8601": "2023-02-14T12:42:48.457932Z",
        "url": "https://files.pythonhosted.org/packages/3d/b2/388e9a0cb9d334b076f04938fc08daa0da5af13bf24584d7a97a4c48494f/zennews-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c24cf7d497e5c0e0755cf97dcba5747d74d9b9d9eb1775cd1c6655b83bb9007",
          "md5": "b07334025224101f4c8ea20adc272a54",
          "sha256": "814be77c34ae362141eef2282a3466ec94dbaed70e0ee704fa9674b67d4a6f99"
        },
        "downloads": -1,
        "filename": "zennews-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b07334025224101f4c8ea20adc272a54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0,<3.11",
        "size": 11366,
        "upload_time": "2023-02-14T12:42:50",
        "upload_time_iso_8601": "2023-02-14T12:42:50.216704Z",
        "url": "https://files.pythonhosted.org/packages/4c/24/cf7d497e5c0e0755cf97dcba5747d74d9b9d9eb1775cd1c6655b83bb9007/zennews-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c44435edf24c24df868cb19bf5d9544a31b6d57c2d7e37e4d1be03d0121db12b",
          "md5": "8e1c51fdab90f833a69e401e3f9fd339",
          "sha256": "52a3277c1dc5a5f4bbab3607ed8725cd31fb71dc4413463c4630a5065a47578d"
        },
        "downloads": -1,
        "filename": "zennews-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e1c51fdab90f833a69e401e3f9fd339",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.0,<3.11",
        "size": 25239,
        "upload_time": "2023-02-14T16:27:16",
        "upload_time_iso_8601": "2023-02-14T16:27:16.982430Z",
        "url": "https://files.pythonhosted.org/packages/c4/44/35edf24c24df868cb19bf5d9544a31b6d57c2d7e37e4d1be03d0121db12b/zennews-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a9ca814917b9403fdd38e566d45b999e081c58cfc67bfc4604886aa76ff1d19",
          "md5": "bd9c00ad9fd593ca921ae0a1ff0d4f56",
          "sha256": "debff082e12cbfaadf035c70e0c4a3b071a43d8ed67f6820aef6ed41c23b6a52"
        },
        "downloads": -1,
        "filename": "zennews-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "bd9c00ad9fd593ca921ae0a1ff0d4f56",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0,<3.11",
        "size": 17244,
        "upload_time": "2023-02-14T16:27:18",
        "upload_time_iso_8601": "2023-02-14T16:27:18.797902Z",
        "url": "https://files.pythonhosted.org/packages/2a/9c/a814917b9403fdd38e566d45b999e081c58cfc67bfc4604886aa76ff1d19/zennews-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5abb1b32eb22e5fe445e8a14e4de46af633cfa9f254cc459853e8cdeb43fa637",
          "md5": "fb8e3fa03562647aee0152cabd2cc776",
          "sha256": "cb23e53bb1d8a3d6af7c8dabe45da1a85d44965d92d288bd2b9f890e264e68cd"
        },
        "downloads": -1,
        "filename": "zennews-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb8e3fa03562647aee0152cabd2cc776",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.0,<3.11",
        "size": 26941,
        "upload_time": "2023-02-15T15:40:43",
        "upload_time_iso_8601": "2023-02-15T15:40:43.087217Z",
        "url": "https://files.pythonhosted.org/packages/5a/bb/1b32eb22e5fe445e8a14e4de46af633cfa9f254cc459853e8cdeb43fa637/zennews-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e372216440bf1292711339752823c048b6dcaefae54e2c7870d5680a632e517d",
          "md5": "5bba3b0729222f3ec7bfc1e0f0b04dd6",
          "sha256": "a666100447461058e997b0c007a6195cdc71b916b5f775b5977c069b13086cac"
        },
        "downloads": -1,
        "filename": "zennews-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "5bba3b0729222f3ec7bfc1e0f0b04dd6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0,<3.11",
        "size": 20423,
        "upload_time": "2023-02-15T15:40:44",
        "upload_time_iso_8601": "2023-02-15T15:40:44.822463Z",
        "url": "https://files.pythonhosted.org/packages/e3/72/216440bf1292711339752823c048b6dcaefae54e2c7870d5680a632e517d/zennews-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "724dd7264ea73968e283d298ba38ba9ecfe2d9939f1b88e02d2fc749819b347a",
          "md5": "39e311a666ad9df5b5e13ca9c4a36e14",
          "sha256": "011b6aa6367021a2f36484bf662e318b14d27d27fce43bfb51854d3c782fb240"
        },
        "downloads": -1,
        "filename": "zennews-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "39e311a666ad9df5b5e13ca9c4a36e14",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.0,<3.11",
        "size": 26788,
        "upload_time": "2023-02-15T15:47:53",
        "upload_time_iso_8601": "2023-02-15T15:47:53.970353Z",
        "url": "https://files.pythonhosted.org/packages/72/4d/d7264ea73968e283d298ba38ba9ecfe2d9939f1b88e02d2fc749819b347a/zennews-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29759629d16a48bb90b22b67ea2ce55ab040e8d2212b33ea033f994cbc6ecbc5",
          "md5": "db1d944408fb24ea608fc2c81ab78fe1",
          "sha256": "b9ee84ad5515e2a06f890a176ebbdccaa22dcee5112572188871d596a11befc8"
        },
        "downloads": -1,
        "filename": "zennews-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "db1d944408fb24ea608fc2c81ab78fe1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0,<3.11",
        "size": 20337,
        "upload_time": "2023-02-15T15:47:56",
        "upload_time_iso_8601": "2023-02-15T15:47:56.040010Z",
        "url": "https://files.pythonhosted.org/packages/29/75/9629d16a48bb90b22b67ea2ce55ab040e8d2212b33ea033f994cbc6ecbc5/zennews-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62c05f1a9e7f95e61c1f7e93884dc4c6a4eea2988078366bd9af2cfe2c895824",
          "md5": "4421c8ed05281194ee36abbf03bf1ae0",
          "sha256": "fa74eb381e5434ca5f2c130b1961ccf75873c20c26ef7ba972b3cb1f243c1197"
        },
        "downloads": -1,
        "filename": "zennews-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4421c8ed05281194ee36abbf03bf1ae0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.0,<3.11",
        "size": 26658,
        "upload_time": "2023-02-15T16:35:57",
        "upload_time_iso_8601": "2023-02-15T16:35:57.336159Z",
        "url": "https://files.pythonhosted.org/packages/62/c0/5f1a9e7f95e61c1f7e93884dc4c6a4eea2988078366bd9af2cfe2c895824/zennews-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c2883c3d82ce2e3bd758a1ca80aca8d677385db0f21df0f34e6fa8e954b1c38",
          "md5": "14a718b4d37c629dd82de214267f6019",
          "sha256": "0ac753e8bd3a5080cd08f4ddce0f85624b7ec3120cd08a24b367c165bee18eb1"
        },
        "downloads": -1,
        "filename": "zennews-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "14a718b4d37c629dd82de214267f6019",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0,<3.11",
        "size": 20240,
        "upload_time": "2023-02-15T16:36:00",
        "upload_time_iso_8601": "2023-02-15T16:36:00.075567Z",
        "url": "https://files.pythonhosted.org/packages/1c/28/83c3d82ce2e3bd758a1ca80aca8d677385db0f21df0f34e6fa8e954b1c38/zennews-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8cd1c2a2ff38a8500604fffd01677cf083f9ad7663be5641315e8a0cd23ad6e",
          "md5": "169e68995c2cb5f90e858a6a117f91c7",
          "sha256": "ac945d2e57bd703fcf767b9d445f6d77b4bf2e9cf84a0fe46c30befb8937f041"
        },
        "downloads": -1,
        "filename": "zennews-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "169e68995c2cb5f90e858a6a117f91c7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.0,<3.11",
        "size": 27013,
        "upload_time": "2023-02-16T10:55:30",
        "upload_time_iso_8601": "2023-02-16T10:55:30.800848Z",
        "url": "https://files.pythonhosted.org/packages/e8/cd/1c2a2ff38a8500604fffd01677cf083f9ad7663be5641315e8a0cd23ad6e/zennews-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7d3198a4c8c28445b3fdba5e5179b911b6f224cbf85750b7d90e6d8863e032d",
          "md5": "f5c9fc3781e9d2f3594dce922a546973",
          "sha256": "3acd73c801e556446ad0ea3cecb33ba61e6716d1df4b33c5e7848bd8b813050a"
        },
        "downloads": -1,
        "filename": "zennews-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "f5c9fc3781e9d2f3594dce922a546973",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0,<3.11",
        "size": 20707,
        "upload_time": "2023-02-16T10:55:33",
        "upload_time_iso_8601": "2023-02-16T10:55:33.111460Z",
        "url": "https://files.pythonhosted.org/packages/c7/d3/198a4c8c28445b3fdba5e5179b911b6f224cbf85750b7d90e6d8863e032d/zennews-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0892a404793545a8c29323f3d6b1717eaa8aafb05ef04059f4eb6e6c8aa4bef",
          "md5": "e29cab770a101f9694edcb9031e6e350",
          "sha256": "415b820a156ceffe7d20a61f1f081bd85180c33c855785991cb9d6fc58e2de43"
        },
        "downloads": -1,
        "filename": "zennews-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e29cab770a101f9694edcb9031e6e350",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.0,<3.11",
        "size": 27019,
        "upload_time": "2023-02-20T16:21:12",
        "upload_time_iso_8601": "2023-02-20T16:21:12.317201Z",
        "url": "https://files.pythonhosted.org/packages/a0/89/2a404793545a8c29323f3d6b1717eaa8aafb05ef04059f4eb6e6c8aa4bef/zennews-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f269bab401021f3c9d3c062b0fcca337fabe5d63d4e507b9b651deec8fb58e7d",
          "md5": "338dddf8dfb9579d49af24e304a18592",
          "sha256": "e3cff3478c703e319b59876c5b47178c20436aaadfd37f210f95c2156009a0e0"
        },
        "downloads": -1,
        "filename": "zennews-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "338dddf8dfb9579d49af24e304a18592",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0,<3.11",
        "size": 20746,
        "upload_time": "2023-02-20T16:21:14",
        "upload_time_iso_8601": "2023-02-20T16:21:14.807459Z",
        "url": "https://files.pythonhosted.org/packages/f2/69/bab401021f3c9d3c062b0fcca337fabe5d63d4e507b9b651deec8fb58e7d/zennews-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a0892a404793545a8c29323f3d6b1717eaa8aafb05ef04059f4eb6e6c8aa4bef",
        "md5": "e29cab770a101f9694edcb9031e6e350",
        "sha256": "415b820a156ceffe7d20a61f1f081bd85180c33c855785991cb9d6fc58e2de43"
      },
      "downloads": -1,
      "filename": "zennews-0.1.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e29cab770a101f9694edcb9031e6e350",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8.0,<3.11",
      "size": 27019,
      "upload_time": "2023-02-20T16:21:12",
      "upload_time_iso_8601": "2023-02-20T16:21:12.317201Z",
      "url": "https://files.pythonhosted.org/packages/a0/89/2a404793545a8c29323f3d6b1717eaa8aafb05ef04059f4eb6e6c8aa4bef/zennews-0.1.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f269bab401021f3c9d3c062b0fcca337fabe5d63d4e507b9b651deec8fb58e7d",
        "md5": "338dddf8dfb9579d49af24e304a18592",
        "sha256": "e3cff3478c703e319b59876c5b47178c20436aaadfd37f210f95c2156009a0e0"
      },
      "downloads": -1,
      "filename": "zennews-0.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "338dddf8dfb9579d49af24e304a18592",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.0,<3.11",
      "size": 20746,
      "upload_time": "2023-02-20T16:21:14",
      "upload_time_iso_8601": "2023-02-20T16:21:14.807459Z",
      "url": "https://files.pythonhosted.org/packages/f2/69/bab401021f3c9d3c062b0fcca337fabe5d63d4e507b9b651deec8fb58e7d/zennews-0.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}