{
  "info": {
    "author": "Boris Trubin",
    "author_email": "mgbit3214@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# django-cache-page-per-user\nExtending the Django's [`cache_page`](https://docs.djangoproject.com/en/dev/topics/cache/#the-per-view-cache) decorator.\nSupports caching per user and per language.\nSupport custom settings and clearing cache.\n\nSupport of caches\n- django_redis.cache.RedisCache\n- django.core.cache.backends.locmem.LocMemCache\n\n## Installation\nRun `pip install django-cache-page-per-user`\n\n## Usage\nUse prefixes to group views by the common models they depend on.\n\n```python\n# constants.py\nclass CachePrefixes:\n    AUTHOR = 'AUTHOR'\n    ARTICLE = 'ARTICLE'\n    COMMENT = 'COMMENT'\n```\nUse @cache_page_per_user like @cache_page, this decorator will cache responses with only safe methods and with status 200\n```python\n# view.py\nfrom cache_page_per_user.cache import cache_page_per_user\nfrom django.utils.decorators import method_decorator\nfrom constants import CachePrefixes\n\n@cache_page_per_user(60*60, CachePrefixes.ARTICLE)\ndef article_view(request, pk):\n    ...\n\n@cache_page_per_user(60*60, CachePrefixes.ARTICLE)\ndef article_some_info_view(request, pk):\n    ...\n\n@cache_page_per_user(60*60, CachePrefixes.AUTHOR)\ndef author_view(request, pk):\n    ...\n\n# for ViewSet\nclass CommentViewSet(ViewSet):\n    ...\n    @method_decorator(cache_page_per_user(60*60, CachePrefixes.COMMENT))\n    def retrieve(self, request, pk=None):\n        ...\n\n```\nCreate signals on the model, when changed, the cache will be reset\n```python\n# signals.py\n...\nfrom cache_page_per_user.utils import clear_cache\nfrom cache_page_per_user.utils import get_cache_key\nfrom constants import CachePrefixes\nfrom models.py import Article\n\n...\n\n@receiver(post_save, sender=Article)\n@receiver(post_delete, sender=Article)\ndef create_slug_wrapper(sender, instance, **kwargs):\n    query = get_cache_key(CachePrefixes.ARTICLE, instance.author_id)\n    clear_cache(query)\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/chessmaster04/django-cache-page-per-user",
    "keywords": "Django,Django Cache,cache_page,Django Cache Page Per User,Django Cache Page Per Language,Django Cache View Per User",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-cache-page-per-user",
    "package_url": "https://pypi.org/project/django-cache-page-per-user/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-cache-page-per-user/",
    "project_urls": {
      "Homepage": "https://github.com/chessmaster04/django-cache-page-per-user"
    },
    "release_url": "https://pypi.org/project/django-cache-page-per-user/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "decorator for view caching per user and per language",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8996873,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d739df07731b40d1f42f7ad8c86c7dd45b7f735d4fb6422bb752e9fe0995482c",
          "md5": "96a099ac6840f1e1ddcb6205fa5a297e",
          "sha256": "5ebc59a5173b1dc83cb2dfd00282166eae621fc0453295f6faaf8e794382d321"
        },
        "downloads": -1,
        "filename": "django-cache-page-per-user-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "96a099ac6840f1e1ddcb6205fa5a297e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6224,
        "upload_time": "2020-12-28T08:44:17",
        "upload_time_iso_8601": "2020-12-28T08:44:17.212151Z",
        "url": "https://files.pythonhosted.org/packages/d7/39/df07731b40d1f42f7ad8c86c7dd45b7f735d4fb6422bb752e9fe0995482c/django-cache-page-per-user-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d739df07731b40d1f42f7ad8c86c7dd45b7f735d4fb6422bb752e9fe0995482c",
        "md5": "96a099ac6840f1e1ddcb6205fa5a297e",
        "sha256": "5ebc59a5173b1dc83cb2dfd00282166eae621fc0453295f6faaf8e794382d321"
      },
      "downloads": -1,
      "filename": "django-cache-page-per-user-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "96a099ac6840f1e1ddcb6205fa5a297e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6224,
      "upload_time": "2020-12-28T08:44:17",
      "upload_time_iso_8601": "2020-12-28T08:44:17.212151Z",
      "url": "https://files.pythonhosted.org/packages/d7/39/df07731b40d1f42f7ad8c86c7dd45b7f735d4fb6422bb752e9fe0995482c/django-cache-page-per-user-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}