{
  "info": {
    "author": "Damian Borowiecki",
    "author_email": "dborowiecki@soldevelo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# openIMIS Backend Policy Notification reference module\nThis repository holds the files of the openIMIS Backend Policy Notification reference module.\nIt is dedicated to be deployed as a module of [openimis-be_py](https://github.com/openimis/openimis-be_py).\n\n[![License: AGPL v3](https://img.shields.io/badge/License-AGPL%20v3-blue.svg)](https://www.gnu.org/licenses/agpl-3.0)\n\n## ORM mapping:\n* FamilyNotification > tblFamilySMS \n\n## Listened Django Signals:\n* After Family mutation \n    * CreateFamilyMutation - create FamilyNotification object connected with created family\n    * UpdateFamilyMutation - update FamilyNotification object connected with updated family\n    * DeleteFamiliesMutation - delete FamilyNotification object connected with deleted family\n* Family additional filter\n    * Use mode from additional_filter.PolicyNotification to additionally query families by \n    notification eligibility\n\n## Services\n### Family notification \nCreate FamilyNotification object connected with family with given uuid. \n```python\ncreate_family_notification_policy(uuid, notification_data)\n```\n\nUpdate FamilyNotification object connected with family with given uuid. \n```python\nupdate_family_notification_policy(uuid, notification_data)\n```\n\nDelete FamilyNotification object connected with family with given uuid. \n```python\ndelete_family_notification_policy(uuid, notification_data)\n```\n\n`notification_data` is dict structured as follows: \n```python\n{ \n    'approvalOfNotification': True, # boolean informing whether family allows notification comunication, default False\n    'languageOfNotification': 'en', # language code determining in which language messages will be sent, default en\n}\n```\n\n## Reports\n### Family Policy Notification Report\nReport summarizing notification eligibility. \\\nAvailable in endpoint: `policy_notification/communication_by_notification_report`\nPayload: \n```json\n{\n    \"districtUuid\": \"districtUUID\",\n    \"regionUuid\": \"regionUUID\",\n    \"officerUuid\": \"enrollmentOfficerUUID\",\n    \"mode\": 1\n}\n```\n#### Modes: \n* 0: 'All',\n* 1: 'Approval and phone number',\n* 2: 'Approval only',\n* 3: 'Phone number only',\n* 4: 'No approval and phone number' \n\n## Configuration\n* Providers \\\n  This configuration key allows to configure currently used notification provider gateways. \n  For provider to be used it has to be included in notification_gateways submodule with class name \n  same as provider config (case-insensitive). When notifications are being send only first \n  provider is used. Module tries to use another provider only when notifying with previous \n  one has failed.\n  \n      \"providers\": {\n          \"eGASMSGateway\": {\n              \"GateUrl\": \"http://127.0.0.1:8000\",\n              \"SmsResource\": \"/api/policy_notification/test_sms/\",\n              \"PrivateKey\": \"\",\n              \"UserId\": \"\",\n              \"SenderId\": \"\",\n              \"ServiceId\": \"\",\n              \"RequestType\": \"\",\n              \"HeaderKeys\": \"X-Auth-Request-Hash,X-Auth-Request-Id,X-Auth-Request-Type\",\n              \"HeaderValues\": \"PrivateKey,UserId,RequestType\"\n          },\n          \"TextNotificationProvider\": {\n              \"DestinationFolder\": \"sent_notification\"\n          }\n      }\n  \n* EligibleNotificationTypes \\\n  Determines which types of notifications are to be sent.\n  \n      \"eligibleNotificationTypes\": {\n          \"activation_of_policy\": False,\n          \"starting_of_policy\": False,\n          \"need_for_renewal\": False,\n          \"expiration_of_policy\": False,\n          \"reminder_after_expiration\": False,\n          \"renewal_of_policy\": False\n      }\n\n\n* `family_policy_notification_report_perms` - List of role right required for generating \n  report, default `[\"131224\"]`\n  \n\n*  `trigger_time_interval_hours` - Interval between event detector calls, default 4\n*  `trigger_first_call_hour` - Hour of first task execution in given day, default 8\n*  `trigger_last_call_hour` - Hour of last task execution in given day, default 20\n\n**Note:** `trigger_*` settings are only used if scheduled task `policy_notification.tasks.send_notification_messages` \nin the openimis settings.py `SCHEDULED_TASK` is not active. Task included in `SCHEDULED_TASK` should use hour param for \nexecution. Either provided as list of hours at which given task is executed (e.g. hour=\"8, 12, 16\"), \nsingle hour (e.g. hour=8), or the time interval when the task is executed every hour (e.g. hour='8-16'). \n\n\n*  `reminder_before_expiry_days` - Days before the expiry of un-renewed policy to send notifications, \n   default 5\n*  `reminder_after_expiry_days` - Days after the expiry of un-renewed policy to send notifications, \n   default 5\n\n## openIMIS Modules Dependencies\n* openIMIS.policy\n* openIMIS.insuree\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://openimis.org/",
    "keywords": "",
    "license": "GNU AGPL v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "openimis-be-policy-notification",
    "package_url": "https://pypi.org/project/openimis-be-policy-notification/",
    "platform": null,
    "project_url": "https://pypi.org/project/openimis-be-policy-notification/",
    "project_urls": {
      "Homepage": "https://openimis.org/"
    },
    "release_url": "https://pypi.org/project/openimis-be-policy-notification/1.5.0/",
    "requires_dist": [
      "django",
      "django-db-signals",
      "djangorestframework"
    ],
    "requires_python": "",
    "summary": "The openIMIS Backend PolicyNotification reference module.",
    "version": "1.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15774578,
  "releases": {
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "359a01eb70142bc88b7c6513a674ec2e2b0e6a43514e5ac018a623dbba88764f",
          "md5": "b938d45e7a7442e33a7c14e49ee3e9cc",
          "sha256": "c9d40c98dcdd42b8a5c319b0deeb650b9b88355b1ee8345023e77d9718aa4583"
        },
        "downloads": -1,
        "filename": "openimis_be_policy_notification-1.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b938d45e7a7442e33a7c14e49ee3e9cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 75375,
        "upload_time": "2022-05-09T15:43:01",
        "upload_time_iso_8601": "2022-05-09T15:43:01.837064Z",
        "url": "https://files.pythonhosted.org/packages/35/9a/01eb70142bc88b7c6513a674ec2e2b0e6a43514e5ac018a623dbba88764f/openimis_be_policy_notification-1.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25e5a91abcc85804eba61c40e4e5f618ec932c8f1d68d75c19412adb7c42d4eb",
          "md5": "f9c8c2787e8b08561f12bb7d30874dc7",
          "sha256": "830b61a74c9550aab7ef65a10f5634963317bffcf7176664c4840f061c9849ec"
        },
        "downloads": -1,
        "filename": "openimis-be-policy_notification-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f9c8c2787e8b08561f12bb7d30874dc7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 52567,
        "upload_time": "2022-05-09T15:43:03",
        "upload_time_iso_8601": "2022-05-09T15:43:03.504058Z",
        "url": "https://files.pythonhosted.org/packages/25/e5/a91abcc85804eba61c40e4e5f618ec932c8f1d68d75c19412adb7c42d4eb/openimis-be-policy_notification-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1107e33820bea192463a7773985d0d822daa58c856735da2c40866edd2954e1d",
          "md5": "d7e36e482f6039a8ed273ad066e9ac4f",
          "sha256": "8e528ba8ba8da303207a58f81efb4446612e578ec10d1604e8a5f68525d595f3"
        },
        "downloads": -1,
        "filename": "openimis_be_policy_notification-1.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d7e36e482f6039a8ed273ad066e9ac4f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 75361,
        "upload_time": "2022-11-15T12:53:49",
        "upload_time_iso_8601": "2022-11-15T12:53:49.163628Z",
        "url": "https://files.pythonhosted.org/packages/11/07/e33820bea192463a7773985d0d822daa58c856735da2c40866edd2954e1d/openimis_be_policy_notification-1.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae93d84ca030f1382d5a7c17c384523857a887f946b5e5cd8ac07d5cbd0124cd",
          "md5": "1fa0083ce559e2fd5f697f8a262b2458",
          "sha256": "666ef874b6f57c0e53972591ef6eb0335d63b16ee3d2c0f5e19afe273796a9cc"
        },
        "downloads": -1,
        "filename": "openimis-be-policy_notification-1.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1fa0083ce559e2fd5f697f8a262b2458",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 52564,
        "upload_time": "2022-11-15T12:53:51",
        "upload_time_iso_8601": "2022-11-15T12:53:51.832342Z",
        "url": "https://files.pythonhosted.org/packages/ae/93/d84ca030f1382d5a7c17c384523857a887f946b5e5cd8ac07d5cbd0124cd/openimis-be-policy_notification-1.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1107e33820bea192463a7773985d0d822daa58c856735da2c40866edd2954e1d",
        "md5": "d7e36e482f6039a8ed273ad066e9ac4f",
        "sha256": "8e528ba8ba8da303207a58f81efb4446612e578ec10d1604e8a5f68525d595f3"
      },
      "downloads": -1,
      "filename": "openimis_be_policy_notification-1.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d7e36e482f6039a8ed273ad066e9ac4f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 75361,
      "upload_time": "2022-11-15T12:53:49",
      "upload_time_iso_8601": "2022-11-15T12:53:49.163628Z",
      "url": "https://files.pythonhosted.org/packages/11/07/e33820bea192463a7773985d0d822daa58c856735da2c40866edd2954e1d/openimis_be_policy_notification-1.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ae93d84ca030f1382d5a7c17c384523857a887f946b5e5cd8ac07d5cbd0124cd",
        "md5": "1fa0083ce559e2fd5f697f8a262b2458",
        "sha256": "666ef874b6f57c0e53972591ef6eb0335d63b16ee3d2c0f5e19afe273796a9cc"
      },
      "downloads": -1,
      "filename": "openimis-be-policy_notification-1.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1fa0083ce559e2fd5f697f8a262b2458",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 52564,
      "upload_time": "2022-11-15T12:53:51",
      "upload_time_iso_8601": "2022-11-15T12:53:51.832342Z",
      "url": "https://files.pythonhosted.org/packages/ae/93/d84ca030f1382d5a7c17c384523857a887f946b5e5cd8ac07d5cbd0124cd/openimis-be-policy_notification-1.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}