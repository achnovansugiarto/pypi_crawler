{
  "info": {
    "author": "Christian Holler",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Security",
      "Topic :: Software Development :: Testing"
    ],
    "description": "[![Task Status](https://community-tc.services.mozilla.com/api/github/v1/repository/MozillaSecurity/FuzzManager/master/badge.svg)](https://community-tc.services.mozilla.com/api/github/v1/repository/MozillaSecurity/FuzzManager/master/latest)\n[![codecov](https://codecov.io/gh/MozillaSecurity/FuzzManager/branch/master/graph/badge.svg)](https://codecov.io/gh/MozillaSecurity/FuzzManager)\n[![Matrix](https://img.shields.io/badge/dynamic/json?color=green&label=chat&query=%24.chunk[%3F(%40.canonical_alias%3D%3D%22%23fuzzing%3Amozilla.org%22)].num_joined_members&suffix=%20users&url=https%3A%2F%2Fmozilla.modular.im%2F_matrix%2Fclient%2Fr0%2FpublicRooms&style=flat&logo=matrix)](https://riot.im/app/#/room/#fuzzing:mozilla.org)\n\n# What is FuzzManager\n\nWith this project, we aim to create a management toolchain for fuzzing. Unlike\nother toolchains and frameworks, we want to be modular in such a way that you\ncan use those parts of FuzzManager that seem interesting to you without forcing\na process upon you that does not fit your requirements.\n\n## CrashManager\n\nCrashManager is the part of FuzzManager responsible for managing crash results\nsubmitted to the server. The main features are:\n\n* Store crash information gathered from various sources. See FTB.\n\n* Bucket crashes using flexible, human-readable signatures that can match a\nlarge number of symptoms of a crash, are proposed by the server but can be\naltered and tuned by the user. The server also includes semi-automatic\noptimization of signatures that helps you group duplicates into one bucket.\n\n* Report bugs directly to a bug tracker using the best testcase available. We\nsupport only Bugzilla as a bugtracker right now, but again the API is designed\nto be extendable.\n\n### FTB\n\nFTB (Fuzzing Tool Box) is the underlying library that contains classes for parsing\ncrash output from various tools (CrashInfo), bucketing crashes (CrashSignature), and\nparsing assertions (AssertionHelper). This can be used locally without having a\nrunning FuzzManager server instance to support crash logging and bucketing. FTB already\nsupports a variety of tools like GDB, ASan and Minidumps but can be extended to support\nany form of crash information you would like.\n\n### Collector\n\nCollector is a command-line utility or a Python class that can be used to communicate\nwith a CrashManager server.  Collector provides an easy client interface that allows\nyour clients to submit crashes as well as download and match existing signatures to\navoid reporting frequent issues repeatedly.\n\n## EC2SpotManager\n\nEC2SpotManager is another (optional) part of FuzzManager that allows you to\nmanage large pools of spot instances in the Amazon Cloud. It supports hierachical\nconfigurations to avoid configuration duplication and ensures that your\ninstances are always running in the desired quantity as well as in the cheapest\nzone.\n\n# Questions\n\nPlease send any questions regarding the project to choller-at-mozilla-dot-com.\n\n\n# Getting Started\n\n## Client Setup\n\nThe client portion of FuzzManager (FTB and Collector) can be installed with\n`pip install FuzzManager`. This is all you need if you just need to talk to a\nFuzzManager server instance or use FTB locally.\n\n## Server Setup\n\nThe server part of FuzzManager is a Django application. Please note that it\nrequires the full repository to be checked out, not just the server directory.\n\nServer dependencies are listed in `server/requirements.txt`. You can use pip to install\nthese dependencies using `pip install -r server/requirements.txt` and/or you can\nuse your distribution's package management to fulfill them. A [Redis](https://redis.io/)\nserver is also required for EC2SpotManager, and can be installed on a Debian-based Linux\nwith: `sudo apt-get install redis-server`.\n\nYou can set the server up just like any other Django project. The Django\nconfiguration file is found at `server/server/settings.py`. The default will\nwork, but for a production setup, you should at least review the database\nsettings.\n\nAfterwards, you should run the following commands\n\n```\n$ cd server\n$ python manage.py migrate\n```\n\nCreate the fuzzmanager user.\n```\n$ python ./manage.py createsuperuser\nUsername (leave blank to use 'user'): fuzzmanager\nEmail address: fuzzmanager@internal.com\nPassword:\nPassword (again):\nSuperuser created successfully.\n```\nGet fuzzmanager authorization token\n```\n$ python manage.py get_auth_token fuzzmanager\n4a253efa90f514bd89ae9a86d1dc264aa3133945\n```\nSince the fuzzmanager account is used as a service account, we need to set the http basic authentication password to the auth token.\n```\nhtpasswd -cb .htpasswd fuzzmanager 4a253efa90f514bd89ae9a86d1dc264aa3133945`\n```\nThis .htpasswd file can be stored anywhere on your hard drive.\nYour Apache AuthUserFile line should be updated to reflect your path.\nSee examples/apache2/default.vhost for an example\n\n### Important changes in settings.py\nIt is important that you edit FuzzManager/server/settings.py and adjust the following variables according to your needs.\n\n    ALLOWED_HOSTS = []\n\nSee [ALLOWED_HOSTS documentation](https://docs.djangoproject.com/en/1.11/ref/settings/#allowed-hosts)\n\n\nYou may also want to increase the maximum size in bytes allowed in a request body. The default of 2.5MB may not be enough\nin some cases by adding the following variable.\n\n    DATA_UPLOAD_MAX_MEMORY_SIZE = <YOUR VALUE HERE>\n\nSee [DATA_UPLOAD_MAX_MEMORY_SIZE](https://docs.djangoproject.com/en/1.11/ref/settings/#data-upload-max-memory-size)\n\n### Local testing\n\nFor local testing, you can use the builtin debug webserver:\n\n`python manage.py runserver`\n\nFor a production setup, see the next section about Apache+WSGI.\n\n### Using Apache+WSGI for a production setup\n\nTo properly run FuzzManager in a production setup, using Apache+WSGI is the\nrecommended way.\n\nIn the `examples/apache2/` directory you'll find an example vhost file that\nshows you how to run FuzzManager in an Apache+WSGI setup. Of course you should\nadjust the configuration to use HTTPs if you don't plan to use any sort of\nTLS load balancer in front of it.\n\n### Getting/Creating the authentication token for clients\n\nUse the following command to get an authentication token for a Django user:\n\n`python manage.py get_auth_token username`\n\nYou can use the user that you created during `syncdb` for simple setups.\n\n### Server Cronjobs\n\nThe following is an example crontab using `cronic` to run several important\nFuzzManager jobs:\n\n```\n# Fetch the status of all bugs from our external bug tracker(s)\n*/15 * * * * cd /path/to/FuzzManager/server && cronic python manage.py bug_update_status\n# Cleanup old crash entries and signatures according to configuration\n*/30 * * * * cd /path/to/FuzzManager/server && cronic python manage.py cleanup_old_crashes\n# Attempt to fit recently added crash entries into existing buckets\n*/5  * * * * cd /path/to/FuzzManager/server && cronic python manage.py triage_new_crashes\n# Export all signatures to a zip file for downloading by clients\n*/30 * * * * cd /path/to/FuzzManager/server && cronic python manage.py export_signatures files/signatures.new.zip mv files/signatures.new.zip files/signatures.zip\n```\n\n### Run server with Docker\n\nA docker image is available by building the `Dockerfile`.\n\nYou can easily run a local server (and Mysql database server) by using [docker-composer](https://docs.docker.com/compose/):\n\n```console\ndocker-compose up\n```\n\nOn a first run, you must execute the database migrations:\n\n```console\ndocker-compose exec backend python manage.py migrate\n```\n\nAnd create a super user to be able to login on http://localhost:8000\n\n```console\ndocker-compose exec backend python manage.py createsuperuser\n```\n\nBy default the docker image uses Django settings set in Python module `server.settings_docker`, with the following settings:\n- `DEBUG = False` to enable production mode\n- `ALLOWED_HOSTS = [\"localhost\", ]` to allow development usage on `http://localhost:8000`\n\nYou can customize settings by mounting a file from your host into the container:\n\n```yaml\nvolumes:\n  - \"./settings_docker.py:/src/server/server/settings_docker.py:ro\"\n```\n\n## Client Usage\n\nIn order to talk to FuzzManager, your fuzzer should use the client interface provided, called the Collector. It can be used as a standalone command line tool or directly as a Python class in case your fuzzer is written in Python.\n\nWe'll first describe how to use the class interface directly from Python. If you want to use the command line interface instead, I still suggest that you read on because the command line interface is very similar to the class interface in terms of functionality and configuration.\n\nFor simple cases where you can just (re)run a command with a testcase that produces a crash, we also provide an easy report class that runs your command and figures out all the crash information on its own. You will find the description of this mode at the end of this section as it still requires configuration files to be setup properly, but tl;dr, it can be as easy as:\n\n`$ python Collector.py --autosubmit mybadprogram --someopt yourtest`\n\nAnd you're done submitting everything, crash information as well as program information.\n\n### Constructing the Collector instance\n\nThe Collector constructor takes various arguments that are required for later operations. These arguments include a directory for signatures, server data such as hostname, port, etc. as well as authentication data and a client name. However, the preferred way to pass these options is not through the constructor, but through a configuration file. The constructor will try to read the configuration file located at ~/.fuzzmanagerconf and use any parameters from there if it hasn't been explicitly specified in the constructor call. This makes deployment very easy and saves time. An example configuration could look like this:\n\n```\n[Main]\nsigdir = /home/example/signatures\nserverhost = 127.0.0.1\nserverport = 8000\nserverproto = http\nserverauthtoken = 4a253efa90f514bd89ae9a86d1dc264aa3133945\n```\n\nWith this file present and readable, instantiating the Collector doesn't require any further arguments.\n\n\n#### Creating the CrashInfo\n\nSeveral methods of the collector work with the `CrashInfo` class. This class stores all the necessary data about a crash. In order to get a CrashInfo instance, you need:\n\n* A variable containing the stdout output of your program\n* A variable containing the stderr output of your program\n* A variable containing crash information as outputted by GDB or AddressSanitizer\n* A ProgramConfiguration instance\n\nThe first three sets of data are typically already available in a fuzzer. Note that for GDB traces, the trace should contain first the stack trace, then a dump of all registers and then a dissassembly of the program counter (see also the FTB/Running/AutoRunner.py file which demonstrates how to output all information properly for FuzzManager).\n\nThe last thing required is the `ProgramConfiguration`. This class is largely a container class storing various properties of the program, e.g. product name, the platform, version and runtime options. Instead of instantiating the class and providing all the data manually, it is again recommended to use the configuration file support. Assuming your binary is located at /home/example/foo then creating a configuration file at /home/example/foo.fuzzmanagerconf with the necessary data is recommended. Such a file could look like this:\n\n```\n[Main]\nplatform = x86\nproduct = mozilla-central\nproduct_version = 70de2960aa87\nos = linux\n\n[Metadata]\npathPrefix = /srv/repos/mozilla-central/\nbuildFlags = --enable-optimize --enable-posix-nspr-emulation --enable-valgrind --enable-gczeal --target=i686-pc-linux-gnu --disable-tests --enable-debug\n```\n\nOnce this file is present, you can call `ProgramConfiguration.fromBinary` with your binary path and the configuration will be created from the file. You can add program arguments and environment variables through the provided `addProgramArguments` and `addEnvironmentVariables` methods afterwards. Finally, call `CrashInfo.fromRawCrashData` with all of the described data. Here's a simple example:\n\n```\n    # Note: This could fail and return None when the configuration is missing or throw if misconfigured\n    configuration = ProgramConfiguration.fromBinary(opts.binary)\n    configuration.addEnvironmentVariables(env)\n    configuration.addProgramArguments(args)\n    crashInfo = CrashInfo.fromRawCrashData(stdout, stderr, configuration, auxCrashData=crashdata)\n```\n\n### Refreshing Signatures\n\nCalling the `refresh` method of our Collector instance will download a zipfile from the server, containing the signatures and metadata exported by the server. Once the download is complete, the Collector will first delete *all* signatures including their metadata from the signature directory. Then the downloaded zipfile is extracted.\n\n### Searching Signatures\n\nThe `search` method is the first of a few methods requiring a `crashInfo` variable. Create it as described above and the Collector will search inside the signature directory for any matching signatures. Upon match, it will return a tuple containing the filename of the signature matching as well as a metadata object corresponding to that signature.\n\n### Submitting Crashes\n\nThe `submit` method can be used to send a crash report to the FuzzManager server. Again the `crashInfo` parameter works as described above. In addition, you can provide a file containing a test and an optional \"quality\" indicator of the test (best quality is 0). The use of this quality indicator largely depends on how your fuzzer/reducer works. The server will prefer better qualities when proposing test cases for filing bugs. Finally, the method accepts an additional metadata parameter which can contain arbitrary information that is stored with the crash on the server. Note that this metadata is *combined* with the metadata found in the `ProgramConfiguration` of the `crashInfo`. When using binary configuration files, this means that the metadata supplied in that configuration file is automatically submitted with the crash to the server.\n\n### Further methods\n\nFurther methods of the Collector include `generate` for generating signatures locally and `download` for downloading testcases from the server. Both methods work as documented in the source code and are only useful in special cases depending on the application scenario.a\n\n### Using the automated submit method\n\nIf your crashes can be reproduced on the command line by just running a command with your testcase, then you can use the automated submit method (`--autosubmit` in the command line client) and just pass the failing command line to the client. The client will automatically run the target program, gather crash and program configuration and submit it to the server. Of course this mode requires that both the global configuration file as well as the binary configuration file are present.\n\n## Web Interface Usage and Workflow\n\nTBD\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MozillaSecurity/FuzzManager",
    "keywords": "fuzz fuzzing security test testing",
    "license": "MPL 2.0",
    "maintainer": "Mozilla Fuzzing Team",
    "maintainer_email": "fuzzing@mozilla.com",
    "name": "FuzzManager",
    "package_url": "https://pypi.org/project/FuzzManager/",
    "platform": null,
    "project_url": "https://pypi.org/project/FuzzManager/",
    "project_urls": {
      "Homepage": "https://github.com/MozillaSecurity/FuzzManager"
    },
    "release_url": "https://pypi.org/project/FuzzManager/0.5.1/",
    "requires_dist": [
      "fasteners (>=0.14.1)",
      "requests (>=2.20.1)"
    ],
    "requires_python": ">=3.7",
    "summary": "A fuzzing management tools collection",
    "version": "0.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13775199,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5ca836b6ceab65b9a6ca6dbb69a5734f6d1a509b6eaef53c8d252019e47f5b0",
          "md5": "c907ad45e78716992a5b7fc1278c765f",
          "sha256": "28002a8038f7bd76e04145cccee25f7f2d1ba4fbf5fb670e94e33cf4d0e69eb0"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c907ad45e78716992a5b7fc1278c765f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 82766,
        "upload_time": "2022-05-09T23:56:46",
        "upload_time_iso_8601": "2022-05-09T23:56:46.394597Z",
        "url": "https://files.pythonhosted.org/packages/e5/ca/836b6ceab65b9a6ca6dbb69a5734f6d1a509b6eaef53c8d252019e47f5b0/FuzzManager-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33a6561e277ba9b49a61be0b7958264f1e2aa249a79dadec6d1dbf73fac7f009",
          "md5": "93a2de83d59f61c438e2baf6782bdc1b",
          "sha256": "b1d73d18476d52d274347d1ea88c643c7466ea2117f7fdad791c4e6a313b2a57"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "93a2de83d59f61c438e2baf6782bdc1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 75755,
        "upload_time": "2022-05-09T23:56:47",
        "upload_time_iso_8601": "2022-05-09T23:56:47.748761Z",
        "url": "https://files.pythonhosted.org/packages/33/a6/561e277ba9b49a61be0b7958264f1e2aa249a79dadec6d1dbf73fac7f009/FuzzManager-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "204aa6538103577c1dd545bccde60ad74237b75ecc7e33c2665dacad0defacb4",
          "md5": "bf79a24ddccf6909624f070ed745097b",
          "sha256": "7e6a9deb90984e44b1821cd0f71f203329cf76d183afecf246a18e88b30eb281"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bf79a24ddccf6909624f070ed745097b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 77467,
        "upload_time": "2017-10-04T19:00:45",
        "upload_time_iso_8601": "2017-10-04T19:00:45.099119Z",
        "url": "https://files.pythonhosted.org/packages/20/4a/a6538103577c1dd545bccde60ad74237b75ecc7e33c2665dacad0defacb4/FuzzManager-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1a05b734c7abcae1031cbeaf88bab26f8677eb60b9b89730389ddb4afb3be92",
          "md5": "889ad73db83a9e9c13b3778b4f391bfd",
          "sha256": "835dbf119d4fd2c71351e994f0d39425013a93e8ce4d1e42d841396057930d14"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "889ad73db83a9e9c13b3778b4f391bfd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 86951,
        "upload_time": "2018-02-26T18:40:30",
        "upload_time_iso_8601": "2018-02-26T18:40:30.944863Z",
        "url": "https://files.pythonhosted.org/packages/d1/a0/5b734c7abcae1031cbeaf88bab26f8677eb60b9b89730389ddb4afb3be92/FuzzManager-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "006e92ffa0fbeacba30c900f84d581e01e134dd0d87ebf8b1d965912e3d29c9b",
          "md5": "4533384aeef9133ad50d3aa04845c4e7",
          "sha256": "007efd3a134b768ec8176882b61f85258665a0186fd49faa28e9cee7f91776b6"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4533384aeef9133ad50d3aa04845c4e7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 101731,
        "upload_time": "2018-05-07T17:38:50",
        "upload_time_iso_8601": "2018-05-07T17:38:50.764947Z",
        "url": "https://files.pythonhosted.org/packages/00/6e/92ffa0fbeacba30c900f84d581e01e134dd0d87ebf8b1d965912e3d29c9b/FuzzManager-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d39d786fb2a718a5285eed5b2e9ad80ec7a9c9fc0085021da1a3b6c68a9b1db7",
          "md5": "6b43f898204d8272ed8f4a81a43775a2",
          "sha256": "0731e55c02a08ba7aaa2fefeac72546392786d8e96d120a6b2b7cd0b87728888"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6b43f898204d8272ed8f4a81a43775a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 89429,
        "upload_time": "2018-05-07T17:38:52",
        "upload_time_iso_8601": "2018-05-07T17:38:52.265557Z",
        "url": "https://files.pythonhosted.org/packages/d3/9d/786fb2a718a5285eed5b2e9ad80ec7a9c9fc0085021da1a3b6c68a9b1db7/FuzzManager-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9e26e460a489cc6c8f5a862007a850aecb57d8c9152628e729759d0cdb8472e",
          "md5": "8e301a3a66c191568bb191ce3a32d601",
          "sha256": "3ee4dd60df104a93762369b340231712df0b99ff5980b6375e66ce1f478ebe51"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.3.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e301a3a66c191568bb191ce3a32d601",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 118467,
        "upload_time": "2018-11-19T19:20:24",
        "upload_time_iso_8601": "2018-11-19T19:20:24.836620Z",
        "url": "https://files.pythonhosted.org/packages/a9/e2/6e460a489cc6c8f5a862007a850aecb57d8c9152628e729759d0cdb8472e/FuzzManager-0.3.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1d4a71760bbfb6fcd5f34df92642d9768f1d71640c405818f480096f7fc4d2e",
          "md5": "ba937ff494b351dcc09f7192b4f39dc6",
          "sha256": "4ea2f81f411c54fb8334146a7f81816d2d80a7f26751178546ef1ce1bc512bbd"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ba937ff494b351dcc09f7192b4f39dc6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 99377,
        "upload_time": "2018-11-19T19:20:26",
        "upload_time_iso_8601": "2018-11-19T19:20:26.412833Z",
        "url": "https://files.pythonhosted.org/packages/c1/d4/a71760bbfb6fcd5f34df92642d9768f1d71640c405818f480096f7fc4d2e/FuzzManager-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90d7567bf670575c8f3a7d1d32367affb49184b7dd7939f3b58cdd50e27c9a75",
          "md5": "42b185aca229885077c1be3851cdbbc9",
          "sha256": "20b8cb52851d4b621c70d112a15e0f0d3c3850c809038e9320c650728cb0843c"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.3.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "42b185aca229885077c1be3851cdbbc9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 72336,
        "upload_time": "2019-12-16T18:17:32",
        "upload_time_iso_8601": "2019-12-16T18:17:32.597642Z",
        "url": "https://files.pythonhosted.org/packages/90/d7/567bf670575c8f3a7d1d32367affb49184b7dd7939f3b58cdd50e27c9a75/FuzzManager-0.3.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48233c1013b3315e9e20e2235cc2162df1b36cdaf030bbd614648f3682d38ee5",
          "md5": "715049ee7eba8b586455c9b51576354e",
          "sha256": "3c41af5515642108ac4f85243b45e80e102bbb0e0b60e9bd18965aa9decb8cf4"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "715049ee7eba8b586455c9b51576354e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2191205,
        "upload_time": "2019-12-16T18:17:34",
        "upload_time_iso_8601": "2019-12-16T18:17:34.368946Z",
        "url": "https://files.pythonhosted.org/packages/48/23/3c1013b3315e9e20e2235cc2162df1b36cdaf030bbd614648f3682d38ee5/FuzzManager-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eeccb1f8d30653028a8526af5a54774097cf1cab43545358dc8ad8d3045c435b",
          "md5": "9d0b9bcc7ad17f64f8aad89cfeae4b22",
          "sha256": "cd8780bf4b45d768d21cfe00d0297afde3ef1c5ff6d403aba147526b034d2e97"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.4.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d0b9bcc7ad17f64f8aad89cfeae4b22",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 75960,
        "upload_time": "2020-05-07T21:01:37",
        "upload_time_iso_8601": "2020-05-07T21:01:37.889029Z",
        "url": "https://files.pythonhosted.org/packages/ee/cc/b1f8d30653028a8526af5a54774097cf1cab43545358dc8ad8d3045c435b/FuzzManager-0.4.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58302f2bdb265064376f0ad7dd195500db9b6b8b5ba6a4bad9aa27a67c037b33",
          "md5": "aa30b0292aa62e23fa8f7ad12ac7d378",
          "sha256": "d9a3742e278b4ae4d9f9ce0ae046d139e2b77d6a744a103776bbeee5c270678d"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "aa30b0292aa62e23fa8f7ad12ac7d378",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1770374,
        "upload_time": "2020-05-07T21:01:40",
        "upload_time_iso_8601": "2020-05-07T21:01:40.003693Z",
        "url": "https://files.pythonhosted.org/packages/58/30/2f2bdb265064376f0ad7dd195500db9b6b8b5ba6a4bad9aa27a67c037b33/FuzzManager-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "343e4841dc2d80be4b46a61103e5076f71ee934834ea0ec9eaf9a4b6230e4417",
          "md5": "73b662092e8dbb2f6f1e56f59c6fdaa1",
          "sha256": "2bb17b5a725d8d6f03eb9979a75416a1137b7456c95a581a50c7b542fbf3d174"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.4.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73b662092e8dbb2f6f1e56f59c6fdaa1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 76030,
        "upload_time": "2021-01-25T18:03:28",
        "upload_time_iso_8601": "2021-01-25T18:03:28.069833Z",
        "url": "https://files.pythonhosted.org/packages/34/3e/4841dc2d80be4b46a61103e5076f71ee934834ea0ec9eaf9a4b6230e4417/FuzzManager-0.4.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d1ebab8333e9e1aa1ee43699a8bc6fa1d49b616ca43b950f629d8011bd5beb4",
          "md5": "76086b421bf44105f57d2de949d23855",
          "sha256": "18d2cfb5382d695adbf34ea06a403ffa58ac29af1df15b9c8dae8f1a41a976a4"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "76086b421bf44105f57d2de949d23855",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1775646,
        "upload_time": "2021-01-25T18:03:30",
        "upload_time_iso_8601": "2021-01-25T18:03:30.293416Z",
        "url": "https://files.pythonhosted.org/packages/0d/1e/bab8333e9e1aa1ee43699a8bc6fa1d49b616ca43b950f629d8011bd5beb4/FuzzManager-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "487c27e08fbe511f44c36a187dbfb37e47a7a8922f9deb2235e257912d82c111",
          "md5": "06065f321e2ccaad3afec8f0c3eaebf1",
          "sha256": "7a274c7ee7c25011438d61fa2504e519104246eca57b04f8d41710dddf517343"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.4.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "06065f321e2ccaad3afec8f0c3eaebf1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 82514,
        "upload_time": "2022-01-10T14:52:19",
        "upload_time_iso_8601": "2022-01-10T14:52:19.610940Z",
        "url": "https://files.pythonhosted.org/packages/48/7c/27e08fbe511f44c36a187dbfb37e47a7a8922f9deb2235e257912d82c111/FuzzManager-0.4.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "559e8bcae7683008b30d5f3f8211985545ee957421af184da1cc6f3e3507ac86",
          "md5": "fd9c0b4ca25124c8d6734ac96447f7b7",
          "sha256": "44337613d94b033e3f127fda92ba3df223ebdb2ed2d116634aec207099ee5955"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fd9c0b4ca25124c8d6734ac96447f7b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1680244,
        "upload_time": "2022-01-10T14:52:20",
        "upload_time_iso_8601": "2022-01-10T14:52:20.688623Z",
        "url": "https://files.pythonhosted.org/packages/55/9e/8bcae7683008b30d5f3f8211985545ee957421af184da1cc6f3e3507ac86/FuzzManager-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28d103887fa545dc2e66510d3ee338d9a9edf44daa721930a98d4d86ba5cd9b7",
          "md5": "a1ccdfad6d8801ccefbafa0794c28346",
          "sha256": "57c8cb6e3767f0aa7569a77cbe7d97c87a225a714bc40c6bea0a8f07ba1b101b"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.4.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a1ccdfad6d8801ccefbafa0794c28346",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 82515,
        "upload_time": "2022-02-23T19:33:03",
        "upload_time_iso_8601": "2022-02-23T19:33:03.771426Z",
        "url": "https://files.pythonhosted.org/packages/28/d1/03887fa545dc2e66510d3ee338d9a9edf44daa721930a98d4d86ba5cd9b7/FuzzManager-0.4.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a7e10b99902da500a09a04f51e789905ea12f57fc1de1a882cdf2a34c9c1486",
          "md5": "f0cae18703e1bf59767200ad92c20875",
          "sha256": "2efacee5bbfabd70131ebc6d167efbd75b80b4e9a597c0a60481b166fa6e8a40"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f0cae18703e1bf59767200ad92c20875",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1679853,
        "upload_time": "2022-02-23T19:33:05",
        "upload_time_iso_8601": "2022-02-23T19:33:05.481403Z",
        "url": "https://files.pythonhosted.org/packages/7a/7e/10b99902da500a09a04f51e789905ea12f57fc1de1a882cdf2a34c9c1486/FuzzManager-0.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64779cef4bc062494fcbee84eda69966c0f914786b5d26f2c02425f19417b3c8",
          "md5": "d2eb0929bec0c913d82099263e23c118",
          "sha256": "d11d915c74ccd2ee72e7b0d73442d7ebfd61d6b9c0516dac9eee21035aa1931c"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.5.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d2eb0929bec0c913d82099263e23c118",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 82406,
        "upload_time": "2022-02-23T21:15:38",
        "upload_time_iso_8601": "2022-02-23T21:15:38.201956Z",
        "url": "https://files.pythonhosted.org/packages/64/77/9cef4bc062494fcbee84eda69966c0f914786b5d26f2c02425f19417b3c8/FuzzManager-0.5.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "229da828b32d0323ca9af611374471d99e549a16c1f10cea3d5eee66871371f8",
          "md5": "27aa3917e88d89890f35a958e8eb14e6",
          "sha256": "23b85b5624b5522011e2e26e2fb210847c9f3f32dd210f2970b35738d3561266"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "27aa3917e88d89890f35a958e8eb14e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1680198,
        "upload_time": "2022-02-23T21:15:40",
        "upload_time_iso_8601": "2022-02-23T21:15:40.004961Z",
        "url": "https://files.pythonhosted.org/packages/22/9d/a828b32d0323ca9af611374471d99e549a16c1f10cea3d5eee66871371f8/FuzzManager-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2dcf28d54dcb771cb12d0998505b0378748a19ff2e1905de34923367a37a9f1c",
          "md5": "9645a46b2969e2523af678ebed880827",
          "sha256": "d78956d8b0a51c8066359508d6079cb5be9ca5626f49382f27a694026bee272c"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9645a46b2969e2523af678ebed880827",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 82754,
        "upload_time": "2022-05-10T20:55:24",
        "upload_time_iso_8601": "2022-05-10T20:55:24.589344Z",
        "url": "https://files.pythonhosted.org/packages/2d/cf/28d54dcb771cb12d0998505b0378748a19ff2e1905de34923367a37a9f1c/FuzzManager-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11758242d6a0fdcc6f5256a008acbbe1c3f2a5a8ab661ffd545980a012e5f706",
          "md5": "0bb022682bbb72c084d4f176d87da421",
          "sha256": "c275675a4037cde4ca59bd4c0383fe2155cbb12ae65153d41569f403bfe0a36f"
        },
        "downloads": -1,
        "filename": "FuzzManager-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0bb022682bbb72c084d4f176d87da421",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1695237,
        "upload_time": "2022-05-10T20:55:28",
        "upload_time_iso_8601": "2022-05-10T20:55:28.254677Z",
        "url": "https://files.pythonhosted.org/packages/11/75/8242d6a0fdcc6f5256a008acbbe1c3f2a5a8ab661ffd545980a012e5f706/FuzzManager-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2dcf28d54dcb771cb12d0998505b0378748a19ff2e1905de34923367a37a9f1c",
        "md5": "9645a46b2969e2523af678ebed880827",
        "sha256": "d78956d8b0a51c8066359508d6079cb5be9ca5626f49382f27a694026bee272c"
      },
      "downloads": -1,
      "filename": "FuzzManager-0.5.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9645a46b2969e2523af678ebed880827",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 82754,
      "upload_time": "2022-05-10T20:55:24",
      "upload_time_iso_8601": "2022-05-10T20:55:24.589344Z",
      "url": "https://files.pythonhosted.org/packages/2d/cf/28d54dcb771cb12d0998505b0378748a19ff2e1905de34923367a37a9f1c/FuzzManager-0.5.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "11758242d6a0fdcc6f5256a008acbbe1c3f2a5a8ab661ffd545980a012e5f706",
        "md5": "0bb022682bbb72c084d4f176d87da421",
        "sha256": "c275675a4037cde4ca59bd4c0383fe2155cbb12ae65153d41569f403bfe0a36f"
      },
      "downloads": -1,
      "filename": "FuzzManager-0.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0bb022682bbb72c084d4f176d87da421",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 1695237,
      "upload_time": "2022-05-10T20:55:28",
      "upload_time_iso_8601": "2022-05-10T20:55:28.254677Z",
      "url": "https://files.pythonhosted.org/packages/11/75/8242d6a0fdcc6f5256a008acbbe1c3f2a5a8ab661ffd545980a012e5f706/FuzzManager-0.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}