{
  "info": {
    "author": "",
    "author_email": "Ritam Raha <ritam.raha18@gmail.com>, Rajarshi Roy <rajarshi008@gmail.com>, Nathanael Fijalkow <nathanael.fijalkow@gmail.com>, Daniel Neider <daniel.neider@uni-oldenburg.de>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<h1 align=\"center\">\n  <img src=\"https://rajarshi008.github.io/assets/images/scarlet-logo.png\" width=\"60%\">\n </h1>\n\n\n---\n## SCARLET \n\n\nWe solve the problem of learning LTL formulas from a sample consisting of traces partitioned into positive and negative.\nA [paper](https://link.springer.com/chapter/10.1007/978-3-030-99524-9_14) presenting the algorithms behind `Scarlet` was published in TACAS'2022.\n\n## Installation\n\n### Installing the tool\n\nNow, you can install the tool, as python package using pip command as follows:\n\n```\npython3 -m pip install Scarlet-ltl\n```\n\n### Input File format:\n\nThe input files consist of traces separated as positives and negatives, separated by `---`.\nEach trace is a sequence of letter separated by `;`. Each letter represents the truth value of atomic propositions.\nAn example of a trace is `1,0,1;0,0,0` which consists of two letters each of which define the values of three propositions (which by default consider to be `p,q,r`). An example sample looks like the following:\n```\n0,0,0;0,1,1;1,0,0;0,0,1;0,1,0\n1,1,0;1,0,1;1,0,0;1,1,1;1,0,1\n1,1,0;0,1,1;1,1,1;1,0,0;1,0,1\n---\n1,0,0;1,0,0;0,1,0;1,1,0;1,1,1\n1,0,0;1,0,0;0,1,0;1,1,0;1,0,0\n0,0,1;1,0,0;1,1,0;1,1,1;1,0,0\n```\n\n## How to run Scarlet:\n\n### Create input file\n\nTo run Scarlet, you have to create an input file with `.trace` extension in the same directory where `venv` folder is located. The input file format is described in the above section.\n\n### Run Scarlet on a particular input file\n\n```\nfrom Scarlet.ltllearner import LTLlearner\nlearner = LTLlearner(input_file = \"input_file_name.trace\")\nlearner.learn()\n```\nThis will run Scarlet on the input trace file.\n\n### Parameters\nYou can call the `LTLlearner` class with additional parameters as follows:\n\n* input_file = the path of the file containing LTL formuas, i.e., `= 'input_file_name.trace'`\n* timeout = For specifying the timeout, `default = 900`\n* csvname = the name of the output csv file, i.e.,  `= 'output_file_name.csv'`\n* thres = the bound on loss function for noisy data, `default = 0` for perfect classification, has to be a number between zero and one\n\n\n## How to generate trace files from LTL formulas\n\nYou can also generate trace files from given LTL formulas following the instructions below:\n\n### Install dependencies\n\nFor generating benchmarks from a given set of LTL formula, we rely on a python package LTLf2DFA that uses [MONA](https://www.brics.dk/mona/) in its backend. \nAs a result, one needs to install MONA first in order to be able to use this procedure (instructions can be found in the MONA website).\n\n### Create input formula file\n\nFor generating benchmarks, you have to create an input file named `formulas.txt` in the same directory where `venv` folder is located. The formula file should contain a list of formulas (in prefix notation) along with the alphabet.\nAn example of this file is as follows:\n\n```\nG(!(p));p\n->(F(q), U(!(p),q));p,q\nG(->(q, G(!(p))));p,q\n```\n\n### Generate trace files from `formulas.txt`\n\n```\nfrom Scarlet.genBenchmarks import SampleGenerator\ngenerator = SampleGenerator(formula_file= \"formulas.txt\")\ngenerator.generate()\n```\n\n### Parameters\nYou can call the `SampleGenerator` class with additional parameters as follows:\n\n* formula_file = the path of the file containing LTL formuas, `example = 'formulas.txt'`\n* sample_sizes = list of sample_size, i.e., number of positive traces and number of negative traces (separated by comma) in each sample, `default = [(10,10),(50,50)]`\n* trace_lengths = For specifying the length range for each trace in the samples, `default = [(6,6)]`\n* output_folder = For specifying the name of the folder in which samples are generated\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Copyright (c) 2022 University of Antwerp, Belgium & LaBRI, University of Bordeaux, France Ritam Raha <ritam.raha18@gmail.com>  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Scarlet-ltl",
    "package_url": "https://pypi.org/project/Scarlet-ltl/",
    "platform": null,
    "project_url": "https://pypi.org/project/Scarlet-ltl/",
    "project_urls": {
      "Homepage": "https://github.com/rajarshi008/Scarlet",
      "Paper": "https://link.springer.com/chapter/10.1007/978-3-030-99524-9_14"
    },
    "release_url": "https://pypi.org/project/Scarlet-ltl/0.0.2/",
    "requires_dist": [
      "lark",
      "graphviz",
      "ltlf2dfa"
    ],
    "requires_python": ">=3.7",
    "summary": "A package for learning LTL formulas from a sample consisting of traces partitioned into positive and negative",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17096546,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6936e93918cc4d0a389e24e92d1bb25ef13082d6942542cae6db1ce24b50d719",
          "md5": "f16a3c31c4f53701a8ec0affc90ced25",
          "sha256": "411b309aaf94b38d38274396859cb62e8b03a0aead6f259000f90537d5c3fd16"
        },
        "downloads": -1,
        "filename": "Scarlet_ltl-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f16a3c31c4f53701a8ec0affc90ced25",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 30153,
        "upload_time": "2022-08-10T17:55:10",
        "upload_time_iso_8601": "2022-08-10T17:55:10.219562Z",
        "url": "https://files.pythonhosted.org/packages/69/36/e93918cc4d0a389e24e92d1bb25ef13082d6942542cae6db1ce24b50d719/Scarlet_ltl-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72328872a01bc56b81e0066ac28051adcb8f652a26dc3dfb8de7a932589ea749",
          "md5": "0f8ac66aef4f250cde955059f0a4784e",
          "sha256": "5751c0264eb169ed07b02ad177c2bfa6fb33e5b2f7c3efc21390e05c6aae72ea"
        },
        "downloads": -1,
        "filename": "Scarlet-ltl-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0f8ac66aef4f250cde955059f0a4784e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 30145,
        "upload_time": "2022-08-10T17:55:11",
        "upload_time_iso_8601": "2022-08-10T17:55:11.808568Z",
        "url": "https://files.pythonhosted.org/packages/72/32/8872a01bc56b81e0066ac28051adcb8f652a26dc3dfb8de7a932589ea749/Scarlet-ltl-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36c679b7e3775672ad5ff923a9bb629a002a75bc93582d408dc6ef78b372a9bf",
          "md5": "7259620aeae065c7c75e7f50990bd5c4",
          "sha256": "833bc57399513f63f543bc214de83cc466ce5dc246cf5ccb842232dd3d01c422"
        },
        "downloads": -1,
        "filename": "Scarlet_ltl-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7259620aeae065c7c75e7f50990bd5c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 30641,
        "upload_time": "2023-02-28T14:28:03",
        "upload_time_iso_8601": "2023-02-28T14:28:03.257073Z",
        "url": "https://files.pythonhosted.org/packages/36/c6/79b7e3775672ad5ff923a9bb629a002a75bc93582d408dc6ef78b372a9bf/Scarlet_ltl-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37fcd547928dc685f2054c302129646ed51c6ad83b0b51c4762a8d3ac1198148",
          "md5": "283bd6ec2e2f9ce4e788ecae51bca1e7",
          "sha256": "29a284bd1c4902e0fd36d7e575f812ab28af6fb8ba31801a80dc4da3f4bb881b"
        },
        "downloads": -1,
        "filename": "Scarlet-ltl-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "283bd6ec2e2f9ce4e788ecae51bca1e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 29858,
        "upload_time": "2023-02-28T14:28:04",
        "upload_time_iso_8601": "2023-02-28T14:28:04.943091Z",
        "url": "https://files.pythonhosted.org/packages/37/fc/d547928dc685f2054c302129646ed51c6ad83b0b51c4762a8d3ac1198148/Scarlet-ltl-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "36c679b7e3775672ad5ff923a9bb629a002a75bc93582d408dc6ef78b372a9bf",
        "md5": "7259620aeae065c7c75e7f50990bd5c4",
        "sha256": "833bc57399513f63f543bc214de83cc466ce5dc246cf5ccb842232dd3d01c422"
      },
      "downloads": -1,
      "filename": "Scarlet_ltl-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7259620aeae065c7c75e7f50990bd5c4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 30641,
      "upload_time": "2023-02-28T14:28:03",
      "upload_time_iso_8601": "2023-02-28T14:28:03.257073Z",
      "url": "https://files.pythonhosted.org/packages/36/c6/79b7e3775672ad5ff923a9bb629a002a75bc93582d408dc6ef78b372a9bf/Scarlet_ltl-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "37fcd547928dc685f2054c302129646ed51c6ad83b0b51c4762a8d3ac1198148",
        "md5": "283bd6ec2e2f9ce4e788ecae51bca1e7",
        "sha256": "29a284bd1c4902e0fd36d7e575f812ab28af6fb8ba31801a80dc4da3f4bb881b"
      },
      "downloads": -1,
      "filename": "Scarlet-ltl-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "283bd6ec2e2f9ce4e788ecae51bca1e7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 29858,
      "upload_time": "2023-02-28T14:28:04",
      "upload_time_iso_8601": "2023-02-28T14:28:04.943091Z",
      "url": "https://files.pythonhosted.org/packages/37/fc/d547928dc685f2054c302129646ed51c6ad83b0b51c4762a8d3ac1198148/Scarlet-ltl-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}