{
  "info": {
    "author": "Adam Brzeski, Jan Cychnerski",
    "author_email": "adam.m.brzeski@gmail.com, jan.cychnerski@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Image Recognition",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Software Development :: Code Generators"
    ],
    "description": "CV Lab - Computer Vision Laboratory - a rapid prototyping tool for computer vision algorithms\n\n<a href=\"https://drive.google.com/uc?export=download&id=15G4UPlZWxftl5pN53kN1co1yP02lZBGh\">\n<img align=\"right\" height=\"220\" src=\"https://drive.google.com/uc?export=download&id=15G4UPlZWxftl5pN53kN1co1yP02lZBGh\">\n</a>\n\n- [INSTALLATION](#installation)\n- [DESCRIPTION](#description)\n- [USAGE](#usage)\n- [FAQ](#faq)\n- [KNOWN ISSUES](#issues)\n- [COPYRIGHT](#copyright)\n\n# INSTALLATION \n\nInstallation using pip:\n\n    pip3 install --upgrade cvlab\n    \nThis command will install CV Lab (or update if you have already installed it). See the [PyPI page](https://pypi.python.org/pypi/cvlab) for more information.\n\nAlternatively you can clone entire git repository:\n\n    git clone https://github.com/cvlab-ai/cvlab.git\n\nCV Lab requires: `PyQt5`, `OpenCV`, `numpy`, `scipy`, `pygments`, `tinycss2`, `matplotlib`.\n\n# DESCRIPTION\n\nCV Lab enables convenient development of computer vision algorithms by means of graphical designing of the processing flow. Writing code with OpenCV might be a time-consuming process. It is often required to compile and run the code multiple times in order to see the results of the modifications of the algorithm. Especially when some parameters are to be tuned for establishing the optimal values. Some code also has to be added to provide presentation of the intermediate or final results of the algorithm.\n\nInstead, CV Lab offers interactive construction of the algorithms. OpenCV functions are available in a form of a palette of image processing blocks. They can be drag'n'dropped into a diagram and connected to each other for defining the data flow. Outputs of the functions in the diagram can be previewed. Parameters are available as convenient widgets like sliders or spinners. Therefore, any change in the diagram or parameter values can be instantly observed in the selected previews.\n\n**Homepage** on GitHub: https://github.com/cvlab-ai/cvlab  \n**PyPI** package: https://pypi.python.org/pypi/cvlab\n    \n# PLUGINS\n\nCV Lab is equipped with simple plugin system. All available Python modules with name starting with `cvlab_` are automatically loaded at the startup of CV Lab.\n\nCurrently, few plugins are available:\n\n* `cvlab_samples` - few sample diagrams, demonstrating CV Lab functionality    \n* `cvlab_experimental` - 100+ additional image processing elements, including: OpenCV functions, Hugin, GPhoto and more\n* [`cvlab_medical`](https://github.com/cvlab-ai/cvlab_medical) - toolbox for medical image processing and a bunch of examples\n* [`cvlab_aug`](https://github.com/cvlab-ai/cvlab_aug) - wrapper for image augmentation library [`aug`](https://github.com/cta-ai/aug) \n\n# USAGE\n\nTo run CV Lab just write in console:\n\n    cvlab\n    \nor:\n\n    python3 -m cvlab\n    \nor:\n\n    python3 -O cvlab/__main__.py\n        \n### Creating image processing diagram\n\n1. Drag&drop processing elements from the palette to diagram area\n1. Connect elements by drag&dropping their connectors\n1. Open output previews by double-clicking elements\n1. Adjust parameters and see the outputs\n\n### Moving around the diagram\n\n1. Use middle mouse button or mouse wheel to scroll the diagram\n1. Select single element by clicking on it\n1. Select multiple elements by clicking and dragging on the diagram area  \n1. Move elements with drag&drop\n\n### Displaying output images or data\n\n1. Double-click on the element to open data previews\n1. Use mouse wheel on the previews to zoom in/out\n1. Double-click on the preview to open external window with additional preview\n\n### Writing python code using CV Lab\n\n1. Put `Code element` on the diagram and connect its inputs/outputs, open previews\n1. Open `Edit code` dialog\n1. Write whatever python code you like :)\n1. See the results in real-time\n1. Be careful about infinite loops...\n1. In long loops use `intpoint()` - it will allow the code to be interrupted when it's needed\n1. To store state of the code element, you can use `memory` (a `dict` which survives recalculations) \n\n### Generating python code from the diagram\n\n1. Right-click on last element of the diagram\n1. Select `generate code`. The code will be copied to system clipboard.\n1. Paste the code to empty python file\n1. You can use the code as a library or as a script\n\nNote: code generation is experimental. It may not work correctly with diagrams utilizing Sequences or some sophisticated elements.  \n\n### Creating your own elements\n\nAdding elements to CV Lab is really simple. See: `cvlab_experimental/sample.py`\n\n# KNOWN ISSUES\n\n### Random crashes\n\nDue to a bug in old versions of OpenCV Python binding (<3.1), some OpenCV functions may cause random crashes of the entire application. Please use latest version of OpenCV available on the [official OpenCV website](https://opencv.org/releases.html).\n\nAlternatively, you can install latest unofficial build of OpenCV using pip:\n\n    pip3 install --upgrade opencv-python\n\nNote that most Linux OS packages often use outdated version of OpenCV. Before using above command you should uninstall them.\n\n### Broken python generated code\n\nAutomatic code generation is experimental. Only experienced users shall use it.\n\nSome elements cannot be easily translated to python script code. Also, code generated from diagrams utilizing sequences may not work correctly.  \n\nPlease, forgive us.\n\n# COPYRIGHT\n\n                                 CV Lab\n                      \n           Copyright (c) 2013-2019 Adam Brzeski, Jan Cychnerski\n                  \n          This software is distributed under 'AGPL-3.0+' license,\n           excluding cvlab/diagram/elements and cvlab/thirdparty\n      \n              Files in directory cvlab/diagram/elements are\n                     distributed under 'MIT License'.\n         \n           Files in directory cvlab_experimental/thirdparty are\n                 distributed under their specific licenses.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cvlab-ai/cvlab",
    "keywords": "",
    "license": "AGPL-3.0+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cvlab",
    "package_url": "https://pypi.org/project/cvlab/",
    "platform": "",
    "project_url": "https://pypi.org/project/cvlab/",
    "project_urls": {
      "Homepage": "https://github.com/cvlab-ai/cvlab"
    },
    "release_url": "https://pypi.org/project/cvlab/1.3.0/",
    "requires_dist": null,
    "requires_python": ">=3.3",
    "summary": "CV Lab - Computer Vision Laboratory - a rapid prototyping tool for computer vision algorithms",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10358680,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ce6913860173753597111a9a84cdd32cd3d69588886290baf48b95c0cb8d86e",
          "md5": "66117567804cdd1a9baecb466effb058",
          "sha256": "f2ee3b802b37f58f2fbb00f1e8ff31f63e0efe180e809d6c12bbea6233dcf572"
        },
        "downloads": -1,
        "filename": "cvlab-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "66117567804cdd1a9baecb466effb058",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1568944,
        "upload_time": "2018-04-13T21:28:11",
        "upload_time_iso_8601": "2018-04-13T21:28:11.986539Z",
        "url": "https://files.pythonhosted.org/packages/1c/e6/913860173753597111a9a84cdd32cd3d69588886290baf48b95c0cb8d86e/cvlab-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "caf7df9d7d0b3662a1e549b437cb06e15efe2f0df151142b19f241330ecb9b16",
          "md5": "78eb2090ade98468abe5032d1f1281a0",
          "sha256": "07ce676ae1abab691fbbef51a67d393daf098c5566b725d031b94a0ceaad6d7f"
        },
        "downloads": -1,
        "filename": "cvlab-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "78eb2090ade98468abe5032d1f1281a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 1815462,
        "upload_time": "2019-04-23T17:33:49",
        "upload_time_iso_8601": "2019-04-23T17:33:49.774467Z",
        "url": "https://files.pythonhosted.org/packages/ca/f7/df9d7d0b3662a1e549b437cb06e15efe2f0df151142b19f241330ecb9b16/cvlab-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4266b335a1ef680ec087817ab4aaf00d5bbfcea24d163a7cadf5682319673c28",
          "md5": "ec56c5fa9bab79e090e962b4e2bdd6d9",
          "sha256": "85319f6871d462d5bcf3e727dc5c6560b62e2e94b6400f0a032c62971f601b02"
        },
        "downloads": -1,
        "filename": "cvlab-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ec56c5fa9bab79e090e962b4e2bdd6d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 1821069,
        "upload_time": "2019-07-18T12:22:49",
        "upload_time_iso_8601": "2019-07-18T12:22:49.157423Z",
        "url": "https://files.pythonhosted.org/packages/42/66/b335a1ef680ec087817ab4aaf00d5bbfcea24d163a7cadf5682319673c28/cvlab-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac8ed79d748779ece4de6f23af31dbe640d13af215d4c760ada9dfe5571761f2",
          "md5": "e4fe2ec3f96e9150a75b223c1b671a56",
          "sha256": "7eca973abbf248b0935fed0d08e8b3d6550ccc4f03c8547a9687bd6315161bd8"
        },
        "downloads": -1,
        "filename": "cvlab-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e4fe2ec3f96e9150a75b223c1b671a56",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.3",
        "size": 1879847,
        "upload_time": "2021-05-14T18:00:59",
        "upload_time_iso_8601": "2021-05-14T18:00:59.827534Z",
        "url": "https://files.pythonhosted.org/packages/ac/8e/d79d748779ece4de6f23af31dbe640d13af215d4c760ada9dfe5571761f2/cvlab-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ac8ed79d748779ece4de6f23af31dbe640d13af215d4c760ada9dfe5571761f2",
        "md5": "e4fe2ec3f96e9150a75b223c1b671a56",
        "sha256": "7eca973abbf248b0935fed0d08e8b3d6550ccc4f03c8547a9687bd6315161bd8"
      },
      "downloads": -1,
      "filename": "cvlab-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e4fe2ec3f96e9150a75b223c1b671a56",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.3",
      "size": 1879847,
      "upload_time": "2021-05-14T18:00:59",
      "upload_time_iso_8601": "2021-05-14T18:00:59.827534Z",
      "url": "https://files.pythonhosted.org/packages/ac/8e/d79d748779ece4de6f23af31dbe640d13af215d4c760ada9dfe5571761f2/cvlab-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}