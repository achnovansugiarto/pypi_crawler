{
  "info": {
    "author": "QData Lab at the University of Virginia",
    "author_email": "yanjun@virginia.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)\n\n\nThis Github repo provides improved algorithms for implementing gkm-svm string kernel calculations. We provide C++ version of the algorithm implementation and a python wrapper (making to a python package) for the C++ implementation. Our package provides fast and accuate gkm-svm based training SVM classifiers and regressors for gkm string kernel based sequence analysis. \n\nThis Github is built with a novel and fast algorithm design for implementing gapped k-mer algorithm, [pybind11](https://github.com/pybind/pybind11), and [LIBSVM](https://github.com/cjlin1/libsvm).\n\n#### More details of algorithms and results now in: [Bioinformatics 2020](https://academic.oup.com/bioinformatics/article/36/Supplement_2/i857/6055916)\n\n## Prerequisites\n\n**On Windows**\n\n* Visual Studio 2015 (required for all Python versions, see notes below)\n* CMake >= 3.1\n\n\n## Installation via Pip Install (Linux and MacOS)\n\nClone this repository and run:\n\n```bash\ngit clone --recursive https://github.com/QData/FastSK.git\ncd FastSK\npip install -r requirements.txt\npip install .\n```\n\n#### The pip intallation of FastSK has been tested successfully on CentOS, Red Hat, MacOS and WindowsXP.\n\n\n## Python Version Tutorial\n\n### Example Jupyter notebook  \n- 'docs/2demo/fastDemo.ipynb'\n\n\n### Example python usage script:\n```\ncd test\npython run_check.py \n```\n\n### You can check if fastsk library is installed correctly in python shell:\n\n```\nfrom fastsk import FastSK\n\n## Compute kernel matrix\nfastsk = FastSK(g=10, m=6, t=1, approx=True)\n```\n\n### Experimental Results, Baselines, Utility Codes and Setup\n\n- We have provided all datasets we used in the subfolder \"data\"\n- We have provided all scripts we used to generate results under the subfolder \"results\"\n\n#### Grid Search for FastSK and gkm-svm baseline\nTo run a grid search over the hyperparameter space (g, m, and C) to find the optimal parameters, e.g, one utility code:\n```\ncd results/\npython run_gridsearch.py\n```\n\n#### When comparing with Deep Learning baselines\n+ You do need to have pytorch installed\n```\npip install torch torchvision\n```\n+ One utility code: on all datasets with hyperparameter tuning of charCNN and each configure with 5 random-seeding repeats:\n```\ncd results/neural_nets\npython run_cnn_hyperTrTune.py \n```\n+ We have many other utility codes helping users to run CNN and RNN baselines\n\n#### Some of our exprimental results comparing FastSK with baselines wrt performance and speed\n\n\n<img src=\"results/spreadsheets/Figure5.png\" width=\"800\">\n\n<img src=\"results/spreadsheets/Table1.png\" width=\"800\">\n\n<img src=\"results/spreadsheets/Table2.png\" width=\"800\">\n\n\n#### Some of our exprimental results comparing FastSK with Character based Convolutional Neural Nets (CharCNN) when varying training size. \n\n<img src=\"results/neural_nets/trainsize_varyresults/dna.png\" width=\"800\">\n\n<img src=\"results/neural_nets/trainsize_varyresults/protein.png\" width=\"800\">\n\n<img src=\"results/neural_nets/trainsize_varyresults/nlp.png\" width=\"800\">\n\n\n#### To Do: \n* a detailed user document, with example input files, output files, code, and perhaps a user group where people can post their questions\n\n\n### Citations\n\nIf you find this tool useful, please cite us!\n\n```\n@article{fast-gkm-svm,\n    author = {Blakely, Derrick and Collins, Eamon and Singh, Ritambhara and Norton, Andrew and Lanchantin, Jack and Qi, Yanjun},\n    title = \"{FastSK: fast sequence analysis with gapped string kernels}\",\n    journal = {Bioinformatics},\n    volume = {36},\n    number = {Supplement_2},\n    pages = {i857-i865},\n    year = {2020},\n    month = {12},\n    abstract = \"{Gapped k-mer kernels with support vector machines (gkm-SVMs) have achieved strong predictive performance on regulatory DNA sequences on modestly sized training sets. However, existing gkm-SVM algorithms suffer from slow kernel computation time, as they depend exponentially on the sub-sequence feature length, number of mismatch positions, and the task’s alphabet size.In this work, we introduce a fast and scalable algorithm for calculating gapped k-mer string kernels. Our method, named FastSK, uses a simplified kernel formulation that decomposes the kernel calculation into a set of independent counting operations over the possible mismatch positions. This simplified decomposition allows us to devise a fast Monte Carlo approximation that rapidly converges. FastSK can scale to much greater feature lengths, allows us to consider more mismatches, and is performant on a variety of sequence analysis tasks. On multiple DNA transcription factor binding site prediction datasets, FastSK consistently matches or outperforms the state-of-the-art gkmSVM-2.0 algorithms in area under the ROC curve, while achieving average speedups in kernel computation of ∼100× and speedups of ∼800× for large feature lengths. We further show that FastSK outperforms character-level recurrent and convolutional neural networks while achieving low variance. We then extend FastSK to 7 English-language medical named entity recognition datasets and 10 protein remote homology detection datasets. FastSK consistently matches or outperforms these baselines.Our algorithm is available as a Python package and as C++ source code at https://github.com/QData/FastSKSupplementary data are available at Bioinformatics online.}\",\n    issn = {1367-4803},\n    doi = {10.1093/bioinformatics/btaa817},\n    url = {https://doi.org/10.1093/bioinformatics/btaa817},\n    eprint = {https://academic.oup.com/bioinformatics/article-pdf/36/Supplement\\_2/i857/35337038/btaa817.pdf},\n}\n```\n\n\n\n\n### Legacy: If you prefer using the executable made from the Pure C++ source code (without python wrapper or R wrapper)\n\n- you can clone this repository:\n```\ngit clone --recursive https://github.com/QData/FastSK.git\n```\nthen run\n```\ncd FastSK\nmake\n```\nA `fastsk` executable will be installed to the `bin` directory, which you can use for kernel computation and inference. For example:\n```\n./bin/fastsk -g 10 -m 6 -C 1 -t 1 -a data/EP300.train.fasta data/EP300.test.fasta\n```\nThis will run the approximate kernel algorithm on the EP300 TFBS dataset using a feature length of `g = 10` with up to `m = 6` mismatches. It will then train and evaluate an SVM classifier with the SVM parameter `C = 1`.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/QData/FastSk",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fastsk",
    "package_url": "https://pypi.org/project/fastsk/",
    "platform": "",
    "project_url": "https://pypi.org/project/fastsk/",
    "project_urls": {
      "Homepage": "https://github.com/QData/FastSk"
    },
    "release_url": "https://pypi.org/project/fastsk/0.0.2/",
    "requires_dist": [
      "certifi",
      "joblib",
      "numpy",
      "pandas",
      "python-dateutil",
      "pytz",
      "scikit-learn",
      "scipy",
      "six",
      "tqdm",
      "recommonmark ; extra == 'dev'",
      "nbsphinx ; extra == 'dev'",
      "sphinx-autobuild ; extra == 'dev'",
      "sphinx-rtd-theme ; extra == 'dev'",
      "black (==20.8b1) ; extra == 'dev'",
      "docformatter ; extra == 'dev'",
      "isort (==5.6.4) ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-xdist ; extra == 'dev'",
      "recommonmark ; extra == 'docs'",
      "nbsphinx ; extra == 'docs'",
      "sphinx-autobuild ; extra == 'docs'",
      "sphinx-rtd-theme ; extra == 'docs'",
      "black (==20.8b1) ; extra == 'test'",
      "docformatter ; extra == 'test'",
      "isort (==5.6.4) ; extra == 'test'",
      "flake8 ; extra == 'test'",
      "pytest ; extra == 'test'",
      "pytest-xdist ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "A library for generating gkm-svm faster",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10252513,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12659bda4825767f96c0d8e4cfd0d26b4a46ab951a36592bc12ba595150281bd",
          "md5": "c429f90ac95ffe6b1430e893bcd0188a",
          "sha256": "0d65637f4bd85f67ceed7adde46732910abb09e56d6638a885e5c88920ced300"
        },
        "downloads": -1,
        "filename": "fastsk-0.0.1-cp39-cp39-macosx_10_14_x86_64.whl",
        "has_sig": false,
        "md5_digest": "c429f90ac95ffe6b1430e893bcd0188a",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.6",
        "size": 135256,
        "upload_time": "2021-05-03T15:21:28",
        "upload_time_iso_8601": "2021-05-03T15:21:28.584894Z",
        "url": "https://files.pythonhosted.org/packages/12/65/9bda4825767f96c0d8e4cfd0d26b4a46ab951a36592bc12ba595150281bd/fastsk-0.0.1-cp39-cp39-macosx_10_14_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88eaa87603e8829da3762cf33fca350fd99c4e1bb1e6b986c66b36ffe2f7fcc6",
          "md5": "5923e011adde5ac63b573e8156761a78",
          "sha256": "129deb843d56bb269e86866cda455ca0ca21ef513b320e465dd74233891cf953"
        },
        "downloads": -1,
        "filename": "fastsk-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5923e011adde5ac63b573e8156761a78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 54334,
        "upload_time": "2021-05-03T15:21:30",
        "upload_time_iso_8601": "2021-05-03T15:21:30.152936Z",
        "url": "https://files.pythonhosted.org/packages/88/ea/a87603e8829da3762cf33fca350fd99c4e1bb1e6b986c66b36ffe2f7fcc6/fastsk-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c2eeb8d5608ac8701708895683f18eb7c72077274656f32e6bb2c3cdcee8eea",
          "md5": "97fbe6010559caa86e195905d8f0fca2",
          "sha256": "f84a76303d336c6428ab2b377bc4cb46cbd07414d2d93f953b355cc09614ab87"
        },
        "downloads": -1,
        "filename": "fastsk-0.0.2-cp37-cp37m-macosx_10_14_x86_64.whl",
        "has_sig": false,
        "md5_digest": "97fbe6010559caa86e195905d8f0fca2",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 136920,
        "upload_time": "2021-05-04T12:31:08",
        "upload_time_iso_8601": "2021-05-04T12:31:08.529283Z",
        "url": "https://files.pythonhosted.org/packages/5c/2e/eb8d5608ac8701708895683f18eb7c72077274656f32e6bb2c3cdcee8eea/fastsk-0.0.2-cp37-cp37m-macosx_10_14_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70cacaaaa0441a3efd67f4b6918f3c676f44c96ca504872cd8eae15f0e994a2c",
          "md5": "04dd76baef528602f5c157e95f50f20d",
          "sha256": "738a810bf745f7f859d24165b2f7d3cbfb656dfcfbe8db0dd06612c105dfcbb4"
        },
        "downloads": -1,
        "filename": "fastsk-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "04dd76baef528602f5c157e95f50f20d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 53389,
        "upload_time": "2021-05-04T12:31:10",
        "upload_time_iso_8601": "2021-05-04T12:31:10.083098Z",
        "url": "https://files.pythonhosted.org/packages/70/ca/caaaa0441a3efd67f4b6918f3c676f44c96ca504872cd8eae15f0e994a2c/fastsk-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c2eeb8d5608ac8701708895683f18eb7c72077274656f32e6bb2c3cdcee8eea",
        "md5": "97fbe6010559caa86e195905d8f0fca2",
        "sha256": "f84a76303d336c6428ab2b377bc4cb46cbd07414d2d93f953b355cc09614ab87"
      },
      "downloads": -1,
      "filename": "fastsk-0.0.2-cp37-cp37m-macosx_10_14_x86_64.whl",
      "has_sig": false,
      "md5_digest": "97fbe6010559caa86e195905d8f0fca2",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6",
      "size": 136920,
      "upload_time": "2021-05-04T12:31:08",
      "upload_time_iso_8601": "2021-05-04T12:31:08.529283Z",
      "url": "https://files.pythonhosted.org/packages/5c/2e/eb8d5608ac8701708895683f18eb7c72077274656f32e6bb2c3cdcee8eea/fastsk-0.0.2-cp37-cp37m-macosx_10_14_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "70cacaaaa0441a3efd67f4b6918f3c676f44c96ca504872cd8eae15f0e994a2c",
        "md5": "04dd76baef528602f5c157e95f50f20d",
        "sha256": "738a810bf745f7f859d24165b2f7d3cbfb656dfcfbe8db0dd06612c105dfcbb4"
      },
      "downloads": -1,
      "filename": "fastsk-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "04dd76baef528602f5c157e95f50f20d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 53389,
      "upload_time": "2021-05-04T12:31:10",
      "upload_time_iso_8601": "2021-05-04T12:31:10.083098Z",
      "url": "https://files.pythonhosted.org/packages/70/ca/caaaa0441a3efd67f4b6918f3c676f44c96ca504872cd8eae15f0e994a2c/fastsk-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}