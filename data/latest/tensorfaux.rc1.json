{
  "info": {
    "author": "",
    "author_email": "Rudy Orre <rudyorre@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "A simple neural network implementation which utilizes a simimilar API to TensorFlow's Sequential models.\n\n## Description\n\nAn in-depth paragraph about your project and overview of use.\n\n## Getting Started\n\n### Dependencies\n\n* NumPy\n\n```\npip3 install -r requirements.txt\n```\n\n### Sample Usage\n\nBelow is an example of a neural network with two `Dense()` layers using `Tanh()` activation functions learning the XOR function. Although seemingly trivial, the XOR function isn't [linearly separable](https://medium.com/@lucaspereira0612/solving-xor-with-a-single-perceptron-34539f395182#:~:text=Geometrically%2C%20this%20means%20the%20perceptron,single%20hyperplane%20to%20separate%20it.), meaning linear models such as [logistic regression](https://en.wikipedia.org/wiki/Logistic_regression) and single-layer [perceptrons](https://en.wikipedia.org/wiki/Perceptron) cannot learn XOR.\n\n```python\nfrom nn import Sequential, Input, Dense, Tanh\n\nnp.random.seed(42)\n\n# XOR input/output data\nX = np.reshape([[0, 0], [0, 1], [1, 0], [1, 1]], (4, 2, 1))\nY = np.reshape([[0], [1], [1], [0]], (4, 1, 1))\n\n# Model instantiation\nmodel = Sequential([\n    Input(2),\n    Dense(3),\n    Tanh(),\n    Dense(1),\n    Tanh(),\n])\nmodel.compile()\n\n# Model training\nmodel.fit(X, Y, epochs=10000, learning_rate=0.01)\n\n# Predict\nY_pred = nn.predict(X)\nfor (y_true, y_pred) in zip(Y, Y_pred):\n    print(f'Actual: {y_true}, Predicted: {y_pred}')\n```\nOutput:\n```\nActual: [[0]], Predicted: [[0.0003956]]\nActual: [[1]], Predicted: [[0.97018558]]\nActual: [[1]], Predicted: [[0.97092169]]\nActual: [[0]], Predicted: [[0.00186825]]\n```\n\n# API\n## `Sequential`\n```python\nnn.Sequential(\n    layers=[]\n)\n```\n\nFunction|Description\n-|-\n`__init__`|Instantiates a new `Sequential` model. If given a list of layers, it will add these to the model, similar to `add()`.\n`add`|Add a single layer to the model.\n`compile`|Takes the added layers and the parameters of `compile` to generate a trainable model.\n`fit`|After compilation, `fit()` trains the model on its inputs and outputs.\n`predict`|Makes predictions after fitting to the data. Takes in a subset of the input data to make a prediction.\n\n## Layers\n### `Layer` Layer\nAbstract class for the layers API. This shouldn't be used in an instance of a model.\n\n### `Input` Layer\nThis should always be the first layer of the `Sequential` model. Since the other layers take in an explicit `output_size` as their input, they infer their `input_size` from the previous layer's `output_size`. This means we must declare the model's first `input_size`.\n\n### `Dense` Layer\nJust your regular densely-connected NN layer. At the moment, the dense layer only performs the dot product and bias addition, but no activation function. The activation function is out-sourced to the `Activation` layers.\n\n### `Activation` Layer\nApplies an activation function to an output.\n\n### `Tanh` Layer\nHyperbolic tangent activation function.\n\n## Acknowledgements\n- [TensorFlow Brand Guidelines](https://www.tensorflow.org/extras/tensorflow_brand_guidelines.pdf)\n- [@allejo/jekyll-docs-theme](https://github.com/allejo/jekyll-docs-theme)\n- [Packaging Projects Tutorial](https://packaging.python.org/en/latest/tutorials/packaging-projects/)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Copyright (c) 2018 The Python Packaging Authority  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tensorfaux",
    "package_url": "https://pypi.org/project/tensorfaux/",
    "platform": null,
    "project_url": "https://pypi.org/project/tensorfaux/",
    "project_urls": {
      "Bug Tracker": "https://github.com/rudyorre/TensorFaux/issues",
      "Homepage": "https://rudyorre.github.io/TensorFaux:"
    },
    "release_url": "https://pypi.org/project/tensorfaux/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A basic deep learning package",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15024304,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3598ffe15bad5aca5e74418b9d4c1f2f92245334e2521504a064b562c389cc70",
          "md5": "6ce3d803e6d20887f346e5642433e0e2",
          "sha256": "2df937aeca37ecc491a5e6d06b257431fc6d71f8f842eb8c7e462abf1ecddeb2"
        },
        "downloads": -1,
        "filename": "tensorfaux-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ce3d803e6d20887f346e5642433e0e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6862,
        "upload_time": "2022-09-07T22:06:09",
        "upload_time_iso_8601": "2022-09-07T22:06:09.683669Z",
        "url": "https://files.pythonhosted.org/packages/35/98/ffe15bad5aca5e74418b9d4c1f2f92245334e2521504a064b562c389cc70/tensorfaux-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7d2c250f763aa03eceff17de639c6838cf9a5f254f48becb7d7c7ff085a0926",
          "md5": "3916b558cd5c00ef17ff95a6656af6dd",
          "sha256": "f3c8d01e9caec118636152757df90c7afa426e7104fa78dffd7d412fc839fbf4"
        },
        "downloads": -1,
        "filename": "tensorfaux-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3916b558cd5c00ef17ff95a6656af6dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 154643,
        "upload_time": "2022-09-07T22:06:11",
        "upload_time_iso_8601": "2022-09-07T22:06:11.345869Z",
        "url": "https://files.pythonhosted.org/packages/d7/d2/c250f763aa03eceff17de639c6838cf9a5f254f48becb7d7c7ff085a0926/tensorfaux-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3598ffe15bad5aca5e74418b9d4c1f2f92245334e2521504a064b562c389cc70",
        "md5": "6ce3d803e6d20887f346e5642433e0e2",
        "sha256": "2df937aeca37ecc491a5e6d06b257431fc6d71f8f842eb8c7e462abf1ecddeb2"
      },
      "downloads": -1,
      "filename": "tensorfaux-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6ce3d803e6d20887f346e5642433e0e2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6862,
      "upload_time": "2022-09-07T22:06:09",
      "upload_time_iso_8601": "2022-09-07T22:06:09.683669Z",
      "url": "https://files.pythonhosted.org/packages/35/98/ffe15bad5aca5e74418b9d4c1f2f92245334e2521504a064b562c389cc70/tensorfaux-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d7d2c250f763aa03eceff17de639c6838cf9a5f254f48becb7d7c7ff085a0926",
        "md5": "3916b558cd5c00ef17ff95a6656af6dd",
        "sha256": "f3c8d01e9caec118636152757df90c7afa426e7104fa78dffd7d412fc839fbf4"
      },
      "downloads": -1,
      "filename": "tensorfaux-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3916b558cd5c00ef17ff95a6656af6dd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 154643,
      "upload_time": "2022-09-07T22:06:11",
      "upload_time_iso_8601": "2022-09-07T22:06:11.345869Z",
      "url": "https://files.pythonhosted.org/packages/d7/d2/c250f763aa03eceff17de639c6838cf9a5f254f48becb7d7c7ff085a0926/tensorfaux-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}