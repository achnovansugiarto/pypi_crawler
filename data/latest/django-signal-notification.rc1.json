{
  "info": {
    "author": "PProlancer",
    "author_email": "pprolancer@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries :: Application Frameworks"
    ],
    "description": "# Django Signal Notification\na django app to send any notifications(sms, email, rocketchat and any media) after triggered a signal.\nyou can add new \"media\" and new \"handler\".\nalso you can customize your template messages directly in python handler class or in a django template file.\n\n# Setup\n\n## Requirements\n\n- Python >= 3.4\n- Django >= 2.0\n\n## Installation\n\n1. Install django-signal-notifier by pip:\n    ```\n    $ pip install django-signal-notification\n    ```\n1. Add \"signal_notification\" at the end of INSTALLED_APPS setting like this\n    ```\n    INSTALLED_APPS = [\n        'django.contrib.auth',\n        'django.contrib.contenttypes',\n        ...\n        'signal_notification',\n    ]\n    ```\n1. ```python manage.py migrate```\n1. goto admin panel to add new NotificationSetting records.\n\n## Settings\n```python\n# Disable signal notification completely if set as True\nSIGNAL_NOTIFICATION_DISABLED = False \n\n# Add your custom media classes path here.\nSIGNAL_NOTIFICATION_MEDIA_CLASSES = [\n    'signal_notification.notify_media.EmailMedia',\n    'signal_notification.notify_media.SMSMedia',\n]\n\n# set your custom NotifyManager class path here\nSIGNAL_NOTIFICATION_MANAGER_CLASS = 'signal_notification.notify_manager.NotifyManager'\n\n# Add your handlers class path here.\nSIGNAL_NOTIFICATION_HANDLER_CLASSES = [\n    'signal_notification.notify_handlers.UserLoggedInHandler',\n    'signal_notification.notify_handlers.UserLoginFailedHandler',\n    'signal_notification.notify_handlers.NewUserHandler',\n]\n\n```\n\n# Add new Media class\n- You should add a new class inherited from \"signal_notification.notify_media.NotifyMedia\".\n- set unique \"name\" field of that class \n- override and implement the \"send\" method\n- set PARAMS_SCHEMA_VALIDATOR field for that class\n```python\nfrom signal_notification.notify_media import NotifyMedia\nclass NewMedia(NotifyMedia):\n    name = 'new_media'\n    PARAMS_SCHEMA_VALIDATOR = {\n        'to': {'type': 'string', 'nullable': False, 'required': True, 'empty': False}\n    }\n    def send(self, message, subject=None):\n        to = self.kwargs['to']\n        # ...\n```\n- append path of this class to \"SIGNAL_NOTIFICATION_MEDIA_CLASSES\" setting\n```\nSIGNAL_NOTIFICATION_MEDIA_CLASSES = [\n    ...\n    'foo.bar.NewMedia'\n]\n```\n\n# Add new Handler class\n- You should add a new class inherited from \"signal_notification.notify_handlers.NotifyHandler\".\n- set unique \"name\" field of that class\n- set subject and message templates(directly in class or as a django templates file)\n```python\nfrom django.contrib.auth import user_logged_out\nfrom signal_notification.notify_handlers import NotifyHandler\nclass StaffUserLoggedOut(NotifyHandler):\n    '''Send a notification when an Staff user logged out'''\n    name = 'staff_user_logged_out'\n    signal = user_logged_out\n    subject_template = 'User Exited'\n    message_template = 'Staff User \"{{user}}\" Logged out.'\n\n    def is_triggered(self, notification_args):\n        '''Using this method to ignore notification by checking some conditions'''\n        user = notification_args.get('user')\n        if not user.is_staff:\n            return False\n        return super().is_triggered(notification_args)\n\n```\n- append path of this class to \"SIGNAL_NOTIFICATION_HANDLER_CLASSES\" setting\n```\nSIGNAL_NOTIFICATION_HANDLER_CLASSES = [\n    ...\n    'foo.bar.StaffUserLoggedOut'\n]\n```\n\n# How to customize the message template of handler?\n\nYou have 2 options:\n\n1. define subject and message directly in Handler class by setting this fields of class:\n    - subject_template\n    - message_template\n1. define subject and message in templates path as a django template file.\n    - add a subject file in this templates path:\n        - signal_notification/<handler_name>/subject-<media_name>.html  # this is for specific media\n        - signal_notification/<handler_name>/subject.html  # this is for all media\n    - add a message file in this templates path:\n        - signal_notification/<handler_name>/message-<media_name>.html  # this is for specific media\n        - signal_notification/<handler_name>/message.html  # this is for all media\n\nNotice: the priorities for templates are:\n1. media template: signal_notification/<handler_name>/message-<media_name>.html\n1. general template: signal_notification/<handler_name>/message.html\n1. class template fields: message_template\n\n# Signals\n- You can use predefined django signals(like, post_save, pre_save, ..)\n- You can add your signals and use that in Handler\n```python\n# in foo/bar/signals.py\nfrom django.dispatch import Signal\ntest_signal = Signal()\n\n```\n\n# add Custom NotifyManager\n\nsome times you want to have your custom manger. for example you want notifications be handled in a background task using celery, apscheduler, huey.\n\n1. You need to add a new class inherited from signal_notification.notify_manager.NotifyManager\n1. override the \"handle_notification\" class method.(use \"_handle_notification\" in your method as a final endpoint of handler method)\n```python\nimport traceback\nfrom signal_notification.notify_manager import NotifyManager\n\nclass APSchedulerNotifyManager(NotifyManager):\n\n    @classmethod\n    def handle_notification(cls, handler_cls, notification_args):\n        apscheduler_client = '<apscheduler_client object>'  \n        try:\n            apscheduler_client.root.add_job(\n                'foo.bar:APSchedulerNotifyManager._handle_notification', 'date',\n                args=(handler_cls, notification_args)\n            )\n        except Exception:\n            traceback.print_exc()\n\n```\n1. set path of this class for SIGNAL_NOTIFICATION_MANAGER_CLASS setting\n```python\nSIGNAL_NOTIFICATION_MANAGER_CLASS = 'foo.bar.APSchedulerNotifyManager'\n```\n\n# Demo\n\n1. ```cd django_signal_notification/demo```\n1. ```python manage.py migrate```\n1. ```python manage.py createsuperuser```\n1. ```python manage.py runserver```\n1. goto http://127.0.0.1:8000/admin\n1. navigate to /admin/signal_notification/notificationsetting/ and add your NotificationSettings records\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pprolancer/django-signal-notification",
    "keywords": "django,notification,signal",
    "license": "Apache License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-signal-notification",
    "package_url": "https://pypi.org/project/django-signal-notification/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-signal-notification/",
    "project_urls": {
      "Homepage": "https://github.com/pprolancer/django-signal-notification"
    },
    "release_url": "https://pypi.org/project/django-signal-notification/0.0.1/",
    "requires_dist": [
      "django (>=2.0)",
      "jsonfield",
      "requests",
      "cerberus",
      "django-sendsms"
    ],
    "requires_python": ">=3.4",
    "summary": "django app to send notifications using signals",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8768987,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e990e49b5051fec18f1afea0e92ec2be99aa1e8982b4af1e60050898a7ad08de",
          "md5": "e55be91627d8370a8ceae84180c01dc5",
          "sha256": "20c10afef40abcba477a8f237e1ce28b3f8f7e303ed39572c7dfbbcc0a2d1567"
        },
        "downloads": -1,
        "filename": "django_signal_notification-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e55be91627d8370a8ceae84180c01dc5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 15792,
        "upload_time": "2020-11-28T16:44:49",
        "upload_time_iso_8601": "2020-11-28T16:44:49.759561Z",
        "url": "https://files.pythonhosted.org/packages/e9/90/e49b5051fec18f1afea0e92ec2be99aa1e8982b4af1e60050898a7ad08de/django_signal_notification-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41a4d92f21d3bc787328263f572c2683f1c1544fa6c90aee7ca64b0a2e23237a",
          "md5": "99369795736a431d187b05387c79591e",
          "sha256": "ffaf9824b6d0f85860367e2baf0ea88243e5ec91bd39ed7fc0bae547292e385b"
        },
        "downloads": -1,
        "filename": "django-signal-notification-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "99369795736a431d187b05387c79591e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 13435,
        "upload_time": "2020-11-28T16:44:51",
        "upload_time_iso_8601": "2020-11-28T16:44:51.482796Z",
        "url": "https://files.pythonhosted.org/packages/41/a4/d92f21d3bc787328263f572c2683f1c1544fa6c90aee7ca64b0a2e23237a/django-signal-notification-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e990e49b5051fec18f1afea0e92ec2be99aa1e8982b4af1e60050898a7ad08de",
        "md5": "e55be91627d8370a8ceae84180c01dc5",
        "sha256": "20c10afef40abcba477a8f237e1ce28b3f8f7e303ed39572c7dfbbcc0a2d1567"
      },
      "downloads": -1,
      "filename": "django_signal_notification-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e55be91627d8370a8ceae84180c01dc5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4",
      "size": 15792,
      "upload_time": "2020-11-28T16:44:49",
      "upload_time_iso_8601": "2020-11-28T16:44:49.759561Z",
      "url": "https://files.pythonhosted.org/packages/e9/90/e49b5051fec18f1afea0e92ec2be99aa1e8982b4af1e60050898a7ad08de/django_signal_notification-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "41a4d92f21d3bc787328263f572c2683f1c1544fa6c90aee7ca64b0a2e23237a",
        "md5": "99369795736a431d187b05387c79591e",
        "sha256": "ffaf9824b6d0f85860367e2baf0ea88243e5ec91bd39ed7fc0bae547292e385b"
      },
      "downloads": -1,
      "filename": "django-signal-notification-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "99369795736a431d187b05387c79591e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 13435,
      "upload_time": "2020-11-28T16:44:51",
      "upload_time_iso_8601": "2020-11-28T16:44:51.482796Z",
      "url": "https://files.pythonhosted.org/packages/41/a4/d92f21d3bc787328263f572c2683f1c1544fa6c90aee7ca64b0a2e23237a/django-signal-notification-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}