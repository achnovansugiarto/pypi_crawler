{
  "info": {
    "author": "Allen Barker",
    "author_email": "Allen.L.Barker@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Utilities"
    ],
    "description": ".. default-role:: code\n\nreddroidvid\n===========\n\nMonitor and record video from Android devices remotely, pulling, renaming, and\noptionally previewing the videos when recording stops.  Has very basic integration\ncapability with DAW software (Ardour is currently the default setting).\n\nCurrently only works over USB (via the ADB interface).  Only tested with\nOpenCamera on Android, controlled from Linux.  (Windows could work in\nprinciple, but there are various Linux-specific commands which would need to be\nreplaced.) No attempt is made to unlock a locked phone.\n\nDisclaimer:  This is beta-level software that works for what I need it to do.\nIt is, however, written fairly generally to be customizable.\n\nScreenshot of the program being used to record music a performance:\n\n.. image:: https://github.com/abarker/recdroidvid/blob/main/doc/rdv_screenshot_example.png\n    :width: 500px\n    :align: center\n    :alt: [screenshot of recdroidvid in action]\n\nInstallation\n============\n\nThe easiest way to install the basic program is to install from PyPI using pip:\n\n.. code-block:: bash\n\n   pip install recdroidvid\n\nDependencies\n============\n\nThe required and optional dependencies are described below.\n\nscrcpy\n------\n\nThe scrcpy program needs to be installed and set up to be runnable via USB.  It\nfunctions as the computer-screen monitor for what is being recorded on the\nphone.  (All the actual recording is done on the phone, however.) The program\nis available in many linux repos, or can be compiled from the scrcpy site\nat https://github.com/Genymobile/scrcpy.\n\nOn Ubuntu the command to install from the repos is:\n\n.. code-block:: bash\n\n    sudo apt install scrcpy\n\nInstalling via snap is also possible (and may be a more recent version):\n\n.. code-block:: bash\n\n    sudo snap install scrcpy\n    snap connect scrcpy:camera\n\nSetup requires that developer mode be activated on the mobile device to allow\nADB commands via USB:\n\n- Go to ``Settings > About phone`` and tap the ``Build number`` at the bottom\n  seven times to activate developer mode.\n\n- Then go to ``Settings > System > Advanced > Developer Options`` and turn on\n  USB debugging.\n\n- Connect the mobile device via USB and authorize it on the Android\n  notification.\n\nSee the scrcpy Github page for more information.  Use ``scrcpy --help | more``\nfor information about the available options.\n\nffmpeg\n------\n\nThe ffmpeg program is used to print out information about the pulled movies, as\nwell as to optionally extract audio from the video files:\n\n.. code-block:: bash\n\n    sudo apt install ffmpeg\n\npreviewing\n----------\n\nPreviewing by default assumes the mpv movie player is installed (though there is an\noption to set any movie player program from the command line):\n\n.. code-block:: bash\n\n    sudo apt install mpv\n\nOptions and Customization\n=========================\n\n.. In vim use this to get output:\n       :read !recdroidvid -h\n\nTo see the command-line options, run ``recdroidvid --help | more``.  The output\nof that command follows.  Note that any options can also be set in the config\nfile `~/.recdroidvid_rc.py`.  The file will be imported and the strings on the\nlist `rdv_options` will be used as the default command-line options.  See the\nexample config file.\n\n   usage: recdroidvid [-h] [--scrcpy-cmd CMD-STRING] [--numbering-start INTEGER]\n                      [--loop] [--autorecord] [--preview-video]\n                      [--preview-video-cmd CMD-STRING]\n                      [--preview-video-cmd-jack CMD-STRING]\n                      [--date-and-time-in-video-name]\n                      [--sync-daw-transport-with-video-recording]\n                      [--toggle-daw-transport-cmd CMD-STRING]\n                      [--add-daw-mark-on-transport-start]\n                      [--add-daw-mark-cmd CMD-STRING]\n                      [--raise-daw-on-camera-app-open]\n                      [--raise-daw-on-transport-toggle]\n                      [--raise-daw-to-top-cmd CMD-STRING]\n                      [--is-daw-running-cmd CMD-STRING] [--audio-extract]\n                      [--camera-save-dir DIRPATH]\n                      [--camera-package-name PACKAGENAME]\n                      [--config-conditional STRING]\n                      [PREFIXSTRING]\n\n   Record a video on mobile via ADB and pull result. All config options can be\n   set in a file `.recdroidvid_rc.py`. The file is evaluated and the list\n   `rdv_options` in the file is used as the options list. See the example config\n   file.\n\n   positional arguments:\n     PREFIXSTRING          The basename or prefix of the pulled video file.\n                           Whether name or prefix depends on the method used to\n                           record.\n\n   optional arguments:\n     -h, --help            show this help message and exit\n     --scrcpy-cmd CMD-STRING, -y CMD-STRING\n                           The command, including arguments, to be used to launch\n                           the scrcpy program. Otherwise a default version is\n                           used with some common arguments. Note that the string\n                           `--window-title=RDV_SCRCPY_TITLE` can be used to\n                           substitute-in a more descriptive title for the window.\n     --numbering-start INTEGER, -n INTEGER\n                           The number at which to start numbering pulled videos.\n                           The number is currently appended to the user-defined\n                           prefix and defaults to 1. Allows for restarting and\n                           continuing a naming sequence across invocations of the\n                           program.\n     --loop, -l            Loop the recording, querying between invocations of\n                           `scrcpy` as to whether or not to continue. This allows\n                           for shutting down the scrcpy display to save both\n                           local CPU and remote device memory (videos are\n                           downloaded and deleted from the device at the end of\n                           each loop), but then restarting with the same options.\n                           Video numbering (as included in the filename) is\n                           automatically incremented over all the videos, across\n                           loops.\n     --autorecord, -a      Automatically start recording when the scrcpy monitor\n                           starts up.\n     --preview-video, -p   Preview each video that is downloaded. Currently uses\n                           the mpv program.\n     --preview-video-cmd CMD-STRING\n                           The command used to invoke a movie player to view the\n                           preview. The default uses the mpv movie viewer. The\n                           string 'RDV_PREVIEW_FILENAME', if present in the\n                           command, will be replaced with the title of the video\n                           being previewed.\n     --preview-video-cmd-jack CMD-STRING\n                           The command used to invoke a movie player to view the\n                           preview when the jack audio system is detected to be\n                           running. The default uses the mpv movie viewer. The\n                           string 'RDV_PREVIEW_FILENAME', if present in the\n                           command, will be replaced with the title of the video\n                           being previewed.\n     --date-and-time-in-video-name, -t\n                           Include the date and time in the video names in a\n                           readable format.\n     --sync-daw-transport-with-video-recording, -s\n                           Start the DAW transport when video recording is\n                           detected on the mobile device. May increase CPU loads\n                           on the computer and the mobile device.\n     --toggle-daw-transport-cmd CMD-STRING\n                           A system command to toggle the DAW transport. Used\n                           when the `--sync-to-daw` option is chosen. The default\n                           uses xdotool to send a space-bar character to Ardour.\n     --add-daw-mark-on-transport-start, -m\n                           Whether to add a mark in the DAW when the transport\n                           starts, to help in syncing with the video.\n     --add-daw-mark-cmd CMD-STRING\n                           A system command to add a mark to the DAW at the\n                           playhead. The default uses xdotool to send a tab\n                           character to Ardour.\n     --raise-daw-on-camera-app-open, -q\n                           Raise the DAW to the top of the window stack when the\n                           camara app is opened on the mobile device. Works well\n                           when scrcpy is also passed the `--always-on-top`\n                           option.\n     --raise-daw-on-transport-toggle, -r\n                           Raise the DAW to the top of the window stack whenever\n                           the DAW transport is toggled by the `--sync-to-daw`\n                           option. Works well when scrcpy is also passed the\n                           `--always-on-top` option.\n     --raise-daw-to-top-cmd CMD-STRING\n                           A system command to raise the DAW windows to the top\n                           of the window stack. Used when either of the\n                           `--raise_daw_on_camera_app_open` or `--raise-daw-on-\n                           transport-toggle` options are selected. The default\n                           uses xdotool to activate any Ardour windows.\n     --is-daw-running-cmd CMD-STRING\n                           A system command to test if the DAW is actually\n                           running. A zero return code means it is, and a nonzero\n                           return code means it isn't.\n     --audio-extract, -w   Extract a separate audio file (currently always a WAV\n                           file) from each video.\n     --camera-save-dir DIRPATH, -d DIRPATH\n                           The directory on the remote device where the camera\n                           app saves videos. Record a video and look at the\n                           information about the video to find the path. Defaults\n                           to the OpenCamera default save directory.\n     --camera-package-name PACKAGENAME, -c PACKAGENAME\n                           The Android package name of the camera app. Defaults\n                           to \"net.sourceforge.opencamera\", the OpenCamera\n                           package name. Look in the URL of the app's PlayStore\n                           web site to find this string.\n     --config-conditional STRING\n                           The `.recdroidvid_rc.py` config file contains\n                           interpreted Python code, so conditionals can be set\n                           for different use-cases. This option allows one to set\n                           a string value from the command line which can then be\n                           used to choose a case in the config file. To set such\n                           a variable, pass the value to this option. The default\n                           value is the string \"default\". To access this\n                           variable, use `from recdroidvid import\n                           config_conditional` at the top of the config file.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/abarker/recdroidvid",
    "keywords": "android,linux,usb,remote,adb,video,movie,record,monitor",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "recdroidvid",
    "package_url": "https://pypi.org/project/recdroidvid/",
    "platform": null,
    "project_url": "https://pypi.org/project/recdroidvid/",
    "project_urls": {
      "Homepage": "https://github.com/abarker/recdroidvid"
    },
    "release_url": "https://pypi.org/project/recdroidvid/0.1.0/",
    "requires_dist": [
      "wheel"
    ],
    "requires_python": ">=3.6",
    "summary": "Record and monitor video on android devices from computer (currently Linux via USB).",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15444010,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "402080226392359a30c074cd9231741e4783c9cbeddda8d642f825c981b5a32d",
          "md5": "4fddd32fd37e4d6c2ebaeddec7e3e7a7",
          "sha256": "790c51196f2d41f4bca51ef8ab9d57bd7916dc5db97fb1c8ae49d42d48b05a66"
        },
        "downloads": -1,
        "filename": "recdroidvid-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4fddd32fd37e4d6c2ebaeddec7e3e7a7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20739,
        "upload_time": "2022-10-18T02:44:02",
        "upload_time_iso_8601": "2022-10-18T02:44:02.048076Z",
        "url": "https://files.pythonhosted.org/packages/40/20/80226392359a30c074cd9231741e4783c9cbeddda8d642f825c981b5a32d/recdroidvid-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "402080226392359a30c074cd9231741e4783c9cbeddda8d642f825c981b5a32d",
        "md5": "4fddd32fd37e4d6c2ebaeddec7e3e7a7",
        "sha256": "790c51196f2d41f4bca51ef8ab9d57bd7916dc5db97fb1c8ae49d42d48b05a66"
      },
      "downloads": -1,
      "filename": "recdroidvid-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4fddd32fd37e4d6c2ebaeddec7e3e7a7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 20739,
      "upload_time": "2022-10-18T02:44:02",
      "upload_time_iso_8601": "2022-10-18T02:44:02.048076Z",
      "url": "https://files.pythonhosted.org/packages/40/20/80226392359a30c074cd9231741e4783c9cbeddda8d642f825c981b5a32d/recdroidvid-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}