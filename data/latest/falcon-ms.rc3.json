{
  "info": {
    "author": "Wout Bittremieux",
    "author_email": "wbittremieux@health.ucsd.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Operating System :: MacOS",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "_falcon_\n========\n\n![falcon](falcon_logo.png)\n\nFor more information:\n\n* [Official code website](https://github.com/bittremieux/falcon)\n\nThe _falcon_ spectrum clustering tool uses advanced algorithmic techniques for\nhighly efficient processing of millions of MS/MS spectra. First,\nhigh-resolution spectra are binned and converted to low-dimensional vectors\nusing feature hashing. Next, the spectrum vectors are used to construct nearest\nneighbor indexes for fast similarity searching. The nearest neighbor indexes\nare used to efficiently compute a sparse pairwise distance matrix without\nhaving to exhaustively compare all spectra to each other. Finally,\ndensity-based clustering is performed to group similar spectra into clusters.\n\nThe software is available as open-source under the BSD license.\n\nIf you use _falcon_ in your work, please cite the following publication:\n\n- Wout Bittremieux, Kris Laukens, William Stafford Noble, Pieter C. Dorrestein.\n**Large-scale tandem mass spectrum clustering using fast nearest neighbor\nsearching.** _publication pending_ (2021).\n\nInstallation\n------------\n\n_falcon_ requires Python 3.8+ and is available on the Linux and OSX platforms.\n\nYou can easily install _falcon_ with pip:\n\n    pip install falcon-ms\n\nRunning _falcon_\n----------------\n\n_falcon_ can be run from the command line, with settings specified as\ncommand-line arguments or set in an INI config file. _falcon_ takes peak files\n(in the mzML, mzXML, or MGF format) as input and exports the clustering result\nas a comma-separated file with each MS/MS spectrum and its cluster label on a\nsingle line. Representative spectra for each cluster can optionally be exported\nto an MGF file.\n\nExample _falcon_ run with some relevant command-line arguments:\n\n    falcon peak/*.mzml falcon --export_representatives --precursor_tol 20 ppm --fragment_tol 0.05 --eps 0.10\n\nThis will cluster all MS/MS spectra in mzML files in the `peak` directory with\nthe specified settings and write (i) the cluster assignments to the `falcon.csv` file, and (ii) the cluster representatives to the `falcon.mgf` file.\n\nFor detailed information on all available settings, run `falcon -h` or\n`falcon --help`.\n\nImportant settings\n------------------\n\nHere we provide information on the most important settings that influence the\n_falcon_ clustering performance. All settings have sensible default values\nwhich should give good results for a wide variety of datasets.\n\n**Spectrum comparison**\n\n- `precursor_tol`: The precursor mass tolerance and unit (in ppm or Dalton) to\ncompare spectra to each other.\n- `fragment_tol`: The fragment mass tolerance (in Dalton) used during spectrum\ncomparison.\n\n**Clustering**\n\n- `eps`: The maximum cosine distance between two spectra for them to be\nconsidered as neighbors of each other. This parameter crucially governs cluster\npurity (i.e. clusters contain spectra corresponding to only a single peptide).\nThe ideal value of this parameter depends on the spectral characteristics of\nyour data and optional spectrum preprocessing configured in _falcon_. Values\nbetween 0.05 and 0.15 will typically generate a pure clustering result. For\nmore aggressive clustering values up to 0.30 can be used.\n\n**Nearest neighbor indexing** (see below)\n\n- `n_probe`: The maximum number of lists in the inverted index to inspect\nduring querying. Inspecting fewer lists will run faster but will give slightly\nless accurate clustering results.\n- `n_neighbors` and `n_neighbors_ann`: The final number of neighbors to\nconsider for each spectrum and during nearest neighbor searching. Querying less\nneighbors will run faster but will give slightly less accurate clustering\nresults. `n_neighbors_ann` should be equal or greater than `n_neighbors`.\n- `hash_len`: The length of the hashed vectors used for nearest neighbor\nsearching. Larger vectors will minimize the number of hash collisions and more\naccurately approximate the true cosine distance, at the expense of longer\nnearest neighbor searching and memory requirements.\n\n**Spectrum preprocessing**\n\n- There are several options to configure spectrum preprocessing prior to the\nclustering. See the command-line documentation for more information.\n\nHow does it work?\n-----------------\n\n![falcon spectrum clustering](falcon_how.png)\n\n1. High-resolution MS/MS spectra are converted to low-dimensional vectors using\nfeature hashing. First, spectra are converted to sparse vectors using small\nmass bins to tightly capture their fragment masses. Next, the sparse,\nhigh-dimensional, vectors are hashed to lower-dimensional vectors by using a\nhash function (the non-cryptographic MurmurHash3 algorithm) to map the mass\nbins separately to a small number of hash bins. This feature hashing conserves\nthe cosine similarity between hashed vectors and can be used to approximate the\nsimilarity between the original spectra.\n2. Vectors are split into buckets based on the precursor _m_/_z_ of the\ncorresponding spectra to construct nearest neighbor indexes for highly\nefficient spectrum comparison. The spectrum vectors in each bucket are\npartitioned into data subspaces to create a Voronoi diagram, and all vectors\nare assigned to their nearest representative vector in an inverted index.\n3. A sparse pairwise distance matrix is computed by retrieving similarities to\nneighboring spectra using the nearest neighbor indexes. The accuracy and speed\nof similarity searching is governed by the number of neighboring cells to\nexplore during searching: exploring more cells during searching decreases the\nchance of missing a nearest neighbor in the high-dimensional space, at the\nexpense of a longer searching time.\n4. Density-based clustering using the pairwise distance matrix is performed to\nfind spectrum clusters. The DBSCAN algorithm is used to find spectra that are\nclose to each other and that form a dense data subspace, and group them into\nclusters.\n\nContact\n-------\n\nFor more information you can visit the\n[official code website](https://github.com/bittremieux/falcon) or send an email\nto <wbittremieux@health.ucsd.edu>.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bittremieux/falcon",
    "keywords": "",
    "license": "BSD-3-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "falcon-ms",
    "package_url": "https://pypi.org/project/falcon-ms/",
    "platform": "",
    "project_url": "https://pypi.org/project/falcon-ms/",
    "project_urls": {
      "Bug Tracker": "https://github.com/bittremieux/falcon/issues",
      "Homepage": "https://github.com/bittremieux/falcon"
    },
    "release_url": "https://pypi.org/project/falcon-ms/0.1.3/",
    "requires_dist": [
      "configargparse (>=1.4)",
      "faiss-cpu (>=1.6.5)",
      "fastcluster (>=1.1.26)",
      "joblib (>=1.0.0)",
      "lxml (>=4.6.2)",
      "natsort (>=7.1.0)",
      "numba (>=0.52.0)",
      "numpy (>=1.19.4)",
      "pandas (>=1.2.0)",
      "pyarrow (>=2.0.0)",
      "pyteomics (>=4.4.0)",
      "scikit-learn (>=0.24.0)",
      "scipy (>=1.5.3)",
      "spectrum-utils (>=0.3.5)",
      "tqdm (>=4.55.0)",
      "flake8 ; extra == 'dev'"
    ],
    "requires_python": ">=3.8",
    "summary": "Large-scale tandem mass spectrum clustering using fast nearest neighbor searching",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10647841,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7459d0614f8f6ae53f91dfe74ba73abb91ffd9e433897f71ec695f8a2458a6df",
          "md5": "6f6c036cc9aa784a1b79b0003332814c",
          "sha256": "dc274df986a7619e3f35241610b9ab7c6334cb419ab73d8fbc280ad1e05989a4"
        },
        "downloads": -1,
        "filename": "falcon_ms-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6f6c036cc9aa784a1b79b0003332814c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 26634,
        "upload_time": "2021-05-17T16:36:24",
        "upload_time_iso_8601": "2021-05-17T16:36:24.070791Z",
        "url": "https://files.pythonhosted.org/packages/74/59/d0614f8f6ae53f91dfe74ba73abb91ffd9e433897f71ec695f8a2458a6df/falcon_ms-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64c9503623ed7bbfaad63804fca792f0faaf137f1b6e07692f64f594f6f0a8b6",
          "md5": "f744c53278b8a15b2d9352f936e5b5c3",
          "sha256": "91ac47d601d44a4457a169f6bf9cdb2d946ca44a2ebd7e65e85c42dc7e673181"
        },
        "downloads": -1,
        "filename": "falcon-ms-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f744c53278b8a15b2d9352f936e5b5c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 624111,
        "upload_time": "2021-05-17T16:36:26",
        "upload_time_iso_8601": "2021-05-17T16:36:26.454537Z",
        "url": "https://files.pythonhosted.org/packages/64/c9/503623ed7bbfaad63804fca792f0faaf137f1b6e07692f64f594f6f0a8b6/falcon-ms-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cafd607923ed2764165ae89d8df3afcd6f8efaa5bc6dcfc3a73803d041b6f5e1",
          "md5": "027504ca4ac871028da1e66671b2dc24",
          "sha256": "d420554d3334696c74de80b3906331620e18e5d45e68a9e8530051b6d568d23a"
        },
        "downloads": -1,
        "filename": "falcon_ms-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "027504ca4ac871028da1e66671b2dc24",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 26651,
        "upload_time": "2021-05-18T16:23:14",
        "upload_time_iso_8601": "2021-05-18T16:23:14.832297Z",
        "url": "https://files.pythonhosted.org/packages/ca/fd/607923ed2764165ae89d8df3afcd6f8efaa5bc6dcfc3a73803d041b6f5e1/falcon_ms-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6fee676b50aaf9a07c8ebdf869b5a58c4ef072ff662bbd06cfb36e9aad1c4cb0",
          "md5": "1c9c9aaa7785775f3dd29f6116519eb0",
          "sha256": "1bdccf8697a3a619f438fe9a111ac4eaa3b2efcae9c0a97b064b229afc8eb41c"
        },
        "downloads": -1,
        "filename": "falcon-ms-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1c9c9aaa7785775f3dd29f6116519eb0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 583874,
        "upload_time": "2021-05-18T16:23:16",
        "upload_time_iso_8601": "2021-05-18T16:23:16.563154Z",
        "url": "https://files.pythonhosted.org/packages/6f/ee/676b50aaf9a07c8ebdf869b5a58c4ef072ff662bbd06cfb36e9aad1c4cb0/falcon-ms-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c9b69d92bcc557ce7bf56b6925b8f708c2d0995bc593a9bb88a6a5cdd7791c2",
          "md5": "b27266da4c1582229593471f39163d3f",
          "sha256": "e66d343002b5ec7e328f9d2526262e47285e9f41e4d5bd6ddff92b1a3b7005ab"
        },
        "downloads": -1,
        "filename": "falcon_ms-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b27266da4c1582229593471f39163d3f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 27139,
        "upload_time": "2021-06-15T00:53:15",
        "upload_time_iso_8601": "2021-06-15T00:53:15.870464Z",
        "url": "https://files.pythonhosted.org/packages/2c/9b/69d92bcc557ce7bf56b6925b8f708c2d0995bc593a9bb88a6a5cdd7791c2/falcon_ms-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a35650f11394252edd370e446effb773c560c49f039297df0fc0fe30d333aab",
          "md5": "2c72ace80f0043c3b8ab9e09c3e6ca0a",
          "sha256": "f51109144549be037be7d8f0ce13598fb48d5c460f2b801222a8880aa61b8373"
        },
        "downloads": -1,
        "filename": "falcon-ms-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2c72ace80f0043c3b8ab9e09c3e6ca0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 584067,
        "upload_time": "2021-06-15T00:53:17",
        "upload_time_iso_8601": "2021-06-15T00:53:17.287952Z",
        "url": "https://files.pythonhosted.org/packages/6a/35/650f11394252edd370e446effb773c560c49f039297df0fc0fe30d333aab/falcon-ms-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c9b69d92bcc557ce7bf56b6925b8f708c2d0995bc593a9bb88a6a5cdd7791c2",
        "md5": "b27266da4c1582229593471f39163d3f",
        "sha256": "e66d343002b5ec7e328f9d2526262e47285e9f41e4d5bd6ddff92b1a3b7005ab"
      },
      "downloads": -1,
      "filename": "falcon_ms-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b27266da4c1582229593471f39163d3f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 27139,
      "upload_time": "2021-06-15T00:53:15",
      "upload_time_iso_8601": "2021-06-15T00:53:15.870464Z",
      "url": "https://files.pythonhosted.org/packages/2c/9b/69d92bcc557ce7bf56b6925b8f708c2d0995bc593a9bb88a6a5cdd7791c2/falcon_ms-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6a35650f11394252edd370e446effb773c560c49f039297df0fc0fe30d333aab",
        "md5": "2c72ace80f0043c3b8ab9e09c3e6ca0a",
        "sha256": "f51109144549be037be7d8f0ce13598fb48d5c460f2b801222a8880aa61b8373"
      },
      "downloads": -1,
      "filename": "falcon-ms-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "2c72ace80f0043c3b8ab9e09c3e6ca0a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 584067,
      "upload_time": "2021-06-15T00:53:17",
      "upload_time_iso_8601": "2021-06-15T00:53:17.287952Z",
      "url": "https://files.pythonhosted.org/packages/6a/35/650f11394252edd370e446effb773c560c49f039297df0fc0fe30d333aab/falcon-ms-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}