{
  "info": {
    "author": "arckal",
    "author_email": "arckalsun@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "\n# nacos-py\nA Python implementation of Nacos OpenAPI.\n\nsee: https://nacos.io/zh-cn/docs/open-API.html\n\n\n[![Pypi Version](https://badge.fury.io/py/nacos-py.svg)](https://badge.fury.io/py/nacos-py)\n[![License](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](https://github.com/arckalsun/nacos-py/blob/master/LICENSE)\n\n\n### Supported Python versionï¼š\n\nPython 2.7\nPython 3.6\nPython 3.7\n\n### Supported Nacos version\nNacos 0.8.0 ~ 2.0.3\n\n\n## Installation\n```shell\npip install nacos-py \n```\n\n## Getting Started\n### 1, use nacos_py.NacosClient\n```python\nimport nacos_py\n\n# Both HTTP/HTTPS protocols are supported, if not set protocol prefix default is HTTP, and HTTPS with no ssl check(verify=False)\n# \"192.168.3.4:8848\" or \"https://192.168.3.4:443\" or \"http://192.168.3.4:8848,192.168.3.5:8848\" or \"https://192.168.3.4:443,https://192.168.3.5:443\"\nSERVER_ADDRESSES = \"server addresses split by comma\"\nNAMESPACE = \"namespace id\"\n\n# no auth mode\nclient = nacos_py.NacosClient(SERVER_ADDRESSES, namespace=NAMESPACE)\n# auth mode\n# client = nacos-py.NacosClient(SERVER_ADDRESSES, namespace=NAMESPACE, username=\"nacos-py\", password=\"nacos-py\")\n\n# get config\ndata_id = \"config.nacos-py\"\ngroup = \"group\"\nprint(client.get_config(data_id, group))\n```\n\n```\nclient = NacosClient(server_addresses, namespace=your_ns)\n```\n\n* *server_addresses* - **required**  - Nacos server address, comma separated if more than 1.\n* *namespace* - Namespace. | default: `None`\n\n#### Extra Options\nExtra option can be set by `set_options`, as following:\n\n```\nclient.set_options({key}={value})\n# client.set_options(proxies={\"http\":\"192.168.3.50:809\"})\n```\n\nConfigurable options are:\n\n* *default_timeout* - Default timeout for get config from server in seconds.\n* *pulling_timeout* - Long polling timeout in seconds.\n* *pulling_config_size* - Max config items number listened by one polling process.\n* *callback_thread_num* - Concurrency for invoking callback.\n* *failover_base* - Dir to store failover config files.\n* *snapshot_base* - Dir to store snapshot config files.\n* *no_snapshot* - To disable default snapshot behavior, this can be overridden by param *no_snapshot* in *get* method.\n* *proxies* - Dict proxy mapping, some environments require proxy access, so you can set this parameter, this way http requests go through the proxy.\n\n### 2, Configuratoin\n```python\nfrom nacos_py import NacosConfig\n\nclass MyConfig(NacosConfig):\n    '''\n    config key\n    '''\n    API_ID = '1'\n    API_KEY = 'aa'\n\n    PORT = 8001\n\nmyconfig = MyConfig('mysqlconfig', \"192.168.3.4:8848\")\n\n# Use \nprint(myconfig.API_ID) \n\n```\n### 3, Register Service\n```python\nfrom nacos_py import NacosService, NacosClient\nfrom flask import Flask\n\napp = Flask()\n\nSERVER_ADDRESSES = \"server addresses split by comma\"\nNAMESPACE = \"namespace id\"\n# register\nNacosService(\"SERVICE_NAME\", NacosClient(SERVER_ADDRESSES, namespace=NAMESPACE)).register(\"192.168.1.10\", 8080)\n\napp.run(host='0.0.0.0', port=8080, debug=False)\n```\n\n### 4, Query Service & Remote call\n```python\nfrom nacos_py import NacosService, NacosClient\n\nSERVER_ADDRESSES = \"server addresses split by comma\"\nNAMESPACE = \"namespace id\"\n\nclient = NacosService(\"SERVICE_NAME\", NacosClient(SERVER_ADDRESSES, namespace=NAMESPACE))\n# subscribe\nclient.subscribe(\"service1\")\n# remote call\nresp = client.request(\"GET\", \"service1\", \"/endpoint\", params={})\n\nprint(resp.text)\n\n```\n\n\n\n## API Reference\n\n### Get Config\n>`NacosClient.get_config(data_id, group, timeout, no_snapshot)`\n\n* `param` *data_id* Data id.\n* `param` *group* Group, use `DEFAULT_GROUP` if no group specified.\n* `param` *timeout* Timeout for requesting server in seconds.\n* `param` *no_snapshot* Whether to use local snapshot while server is unavailable.\n* `return` \nW\nGet value of one config item following priority:\n\n* Step 1 - Get from local failover dir(default: `${cwd}/nacos-data/data`).\n  * Failover dir can be manually copied from snapshot dir(default: `${cwd}/nacos-data/snapshot`) in advance.\n  * This helps to suppress the effect of known server failure.\n\n* Step 2 - Get from one server until value is got or all servers tried.\n  * Content will be save to snapshot dir after got from server.\n\n* Step 3 - Get from snapshot dir.\n\n### Add Watchers\n>`NacosClient.add_config_watchers(data_id, group, cb_list)`\n\n* `param` *data_id* Data id.\n* `param` *group* Group, use `DEFAULT_GROUP` if no group specified.\n* `param` *cb_list* List of callback functions to add.\n* `return`\n\nAdd watchers to a specified config item.\n* Once changes or deletion of the item happened, callback functions will be invoked.\n* If the item is already exists in server, callback functions will be invoked for once.\n* Multiple callbacks on one item is allowed and all callback functions are invoked concurrently by `threading.Thread`.\n* Callback functions are invoked from current process.\n\n### Remove Watcher\n>`NacosClient.remove_config_watcher(data_id, group, cb, remove_all)`\n\n* `param` *data_id* Data id.\n* `param` *group* Group, use \"DEFAULT_GROUP\" if no group specified.\n* `param` *cb* Callback function to delete.\n* `param` *remove_all* Whether to remove all occurrence of the callback or just once.\n* `return`\n\nRemove watcher from specified key.\n\n### Publish Config\n>`NacosClient.publish_config(data_id, group, content, timeout)`\n\n* `param` *data_id* Data id.\n* `param` *group* Group, use \"DEFAULT_GROUP\" if no group specified.\n* `param` *content* Config value.\n* `param` *timeout* Timeout for requesting server in seconds.\n* `return` True if success or an exception will be raised.\n\nPublish one data item to Nacos.\n* If the data key is not exist, create one first.\n* If the data key is exist, update to the content specified.\n* Content can not be set to None, if there is need to delete config item, use function **remove** instead.\n\n### Remove Config\n>`NacosClient.remove_config(data_id, group, timeout)`\n* `param` *data_id* Data id.\n* `param` *group* Group, use \"DEFAULT_GROUP\" if no group specified.\n* `param` *timeout* Timeout for requesting server in seconds.\n* `return` True if success or an exception will be raised.\n\nRemove one data item from Nacos.\n\n### Register Instance\n>`NacosClient.add_naming_instance(service_name, ip, port, cluster_name, weight, metadata, enable, healthy)`\n* `param` *service_name*  **required** Service name to register to.\n* `param` *ip*  **required** IP of the instance.\n* `param` *port* **required** Port of the instance.\n* `param` *cluster_name* Cluster to register to.\n* `param` *weight* A float number for load balancing weight.\n* `param` *metadata* Extra info in JSON string format or dict format\n* `param` *enable* A bool value to determine whether instance is enabled or not.\n* `param` *healthy* A bool value to determine whether instance is healthy or not.\n* `param` *ephemeral* A bool value to determine whether instance is ephemeral or not.\n* `return` True if success or an exception will be raised.\n\n### Deregister Instance\n>`NacosClient.remove_naming_instance(service_name, ip, port, cluster_name)`\n* `param` *service_name*  **required** Service name to deregister from.\n* `param` *ip*  **required** IP of the instance.\n* `param` *port* **required** Port of the instance.\n* `param` *cluster_name* Cluster to deregister from.\n* `param` *ephemeral* A bool value to determine whether instance is ephemeral or not.\n* `return` True if success or an exception will be raised.\n\n### Modify Instance\n>`NacosClient.modify_naming_instance(service_name, ip, port, cluster_name, weight, metadata, enable)`\n* `param` *service_name*  **required** Service name.\n* `param` *ip*  **required** IP of the instance.\n* `param` *port* **required** Port of the instance.\n* `param` *cluster_name* Cluster name.\n* `param` *weight* A float number for load balancing weight.\n* `param` *metadata* Extra info in JSON string format or dict format.\n* `param` *enable* A bool value to determine whether instance is enabled or not.\n* `param` *ephemeral* A bool value to determine whether instance is ephemeral or not.\n* `return` True if success or an exception will be raised.\n\n### Query Instances\n>`NacosClient.list_naming_instance(service_name, clusters, namespace_id, group_name, healthy_only)`\n* `param` *service_name*  **required** Service name to query.\n* `param` *clusters* Cluster names separated by comma.\n* `param` *namespace_id* Customized group name, default `blank`.\n* `param` *group_name* Customized group name , default `DEFAULT_GROUP`.\n* `param` *healthy_only* A bool value for querying healthy instances or not.\n* `return` Instance info list if success or an exception will be raised.\n\n### Query Instance Detail\n>`NacosClient.get_naming_instance(service_name, ip, port, cluster_name)`\n* `param` *service_name*  **required** Service name.\n* `param` *ip*  **required** IP of the instance.\n* `param` *port* **required** Port of the instance.\n* `param` *cluster_name* Cluster name.\n* `return` Instance info if success or an exception will be raised.\n\n### Send Instance Beat\n>`NacosClient.send_heartbeat(service_name, ip, port, cluster_name, weight, metadata)`\n* `param` *service_name*  **required** Service name.\n* `param` *ip*  **required** IP of the instance.\n* `param` *port* **required** Port of the instance.\n* `param` *cluster_name* Cluster to register to.\n* `param` *weight* A float number for load balancing weight.\n* `param` *ephemeral* A bool value to determine whether instance is ephemeral or not.\n* `param` *metadata* Extra info in JSON string format or dict format.\n* `return` A JSON object include server recommended beat interval if success or an exception will be raised.\n\n### Subscribe Service Instances Changed\n>`NacosClient.subscribe(listener_fn, listener_interval=7, *args, **kwargs)`\n* `param` *listener_fn*  **required** Customized listener function.\n* `param` *listener_interval*  Listen interval , default 7 second.\n* `param` *service_name*  **required** Service name which subscribes.\n* `param` *clusters* Cluster names separated by comma.\n* `param` *namespace_id* Customized group name, default `blank`.\n* `param` *group_name* Customized group name , default `DEFAULT_GROUP`.\n* `param` *healthy_only* A bool value for querying healthy instances or not.\n* `return`\n\n### Unsubscribe Service Instances Changed\n>`NacosClient.unsubscribe(service_name, listener_name)`\n* `param` *service_name*  **required** Service name to subscribed.\n* `param` *listener_name*  listener_name which is customized.\n* `return`\n\n### Stop All Service Subscribe \n>`NacosClient.stop_subscribe()`\n* `return`\n\n## Debugging Mode\nDebugging mode if useful for getting more detailed log on console.\n\nDebugging mode can be set by:\n```\nNacosClient.set_debugging()\n# only effective within the current process\n```\n\nThis Project Starts From https://github.com/nacos-group/nacos-sdk-python\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/arckalsun/nacos-py",
    "keywords": "nacos-py,nacos-sdk-python",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nacos-py",
    "package_url": "https://pypi.org/project/nacos-py/",
    "platform": "",
    "project_url": "https://pypi.org/project/nacos-py/",
    "project_urls": {
      "Documentation": "https://github.com/arckalsun/nacos-py",
      "Homepage": "https://github.com/arckalsun/nacos-py",
      "Nacos Open API Guide": "https://nacos.io/en-us/docs/open-api.html",
      "Source": "https://github.com/arckalsun/nacos-py"
    },
    "release_url": "https://pypi.org/project/nacos-py/0.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python client for Nacos.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12368357,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc3b44a86d8c10997ab0462d99a17d0949d15173b3f1c8bb619e031ce151f7c1",
          "md5": "c08f7baab0a1c08739c436f304b6701b",
          "sha256": "f7e9b6e53241615d724a2e153ab4b5c35e1e612f31f4533b851f4b9c9d582803"
        },
        "downloads": -1,
        "filename": "nacos_py-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c08f7baab0a1c08739c436f304b6701b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 23845,
        "upload_time": "2021-12-21T03:51:12",
        "upload_time_iso_8601": "2021-12-21T03:51:12.719782Z",
        "url": "https://files.pythonhosted.org/packages/dc/3b/44a86d8c10997ab0462d99a17d0949d15173b3f1c8bb619e031ce151f7c1/nacos_py-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7756e56ff3e7343f734a0819d6f4cfe604294755388cb90279a96c6f79fb846b",
          "md5": "ef877d1c57d8d2f25e3dff80dd7f92e9",
          "sha256": "06ec3ffac2dd0537ab6437516c4130144661040767f782c59cce118f8aca5401"
        },
        "downloads": -1,
        "filename": "nacos-py-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ef877d1c57d8d2f25e3dff80dd7f92e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22437,
        "upload_time": "2021-12-21T03:51:14",
        "upload_time_iso_8601": "2021-12-21T03:51:14.517579Z",
        "url": "https://files.pythonhosted.org/packages/77/56/e56ff3e7343f734a0819d6f4cfe604294755388cb90279a96c6f79fb846b/nacos-py-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a05a663b68240879a4ad6abf87d0112e79014ce69ac7736254d12709d9c8723e",
          "md5": "b46195826bc5c549437c6efc2be60a22",
          "sha256": "f2085442a09047976a36b6d5c28128742c17f0a6abc16707fe28f7435ef91057"
        },
        "downloads": -1,
        "filename": "nacos_py-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b46195826bc5c549437c6efc2be60a22",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 23870,
        "upload_time": "2021-12-21T06:51:34",
        "upload_time_iso_8601": "2021-12-21T06:51:34.454362Z",
        "url": "https://files.pythonhosted.org/packages/a0/5a/663b68240879a4ad6abf87d0112e79014ce69ac7736254d12709d9c8723e/nacos_py-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d68c84dd32fe13c596cd21730bd6fd2eb01c414e0b066ede9933532f95e0239",
          "md5": "8bb06278a52bfb5478b0e6f32480aacd",
          "sha256": "6cb8c596e3745ce1f8dfa2457fc784418c3b84a841163f90971d090812256623"
        },
        "downloads": -1,
        "filename": "nacos-py-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8bb06278a52bfb5478b0e6f32480aacd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22466,
        "upload_time": "2021-12-21T06:51:35",
        "upload_time_iso_8601": "2021-12-21T06:51:35.845319Z",
        "url": "https://files.pythonhosted.org/packages/4d/68/c84dd32fe13c596cd21730bd6fd2eb01c414e0b066ede9933532f95e0239/nacos-py-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "058e3eb5d68722f9062de7e9fd6ff20bddc85e74b93dcd90fa52fca8f5c1a6e8",
          "md5": "5d504954383d0a98b4bf16c119b64447",
          "sha256": "cd5fee67ab6487e32d151d90009970bc2796714f2fcbeacb375869979b48945c"
        },
        "downloads": -1,
        "filename": "nacos_py-0.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5d504954383d0a98b4bf16c119b64447",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 23870,
        "upload_time": "2021-12-21T07:01:51",
        "upload_time_iso_8601": "2021-12-21T07:01:51.877508Z",
        "url": "https://files.pythonhosted.org/packages/05/8e/3eb5d68722f9062de7e9fd6ff20bddc85e74b93dcd90fa52fca8f5c1a6e8/nacos_py-0.1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a4c9a342505d7fd7dd291fa861d2065cab765c648c3fc7f43353322b56c11a8",
          "md5": "ee13ffc7a2ecbb2fed7e9d4b0d8e8c1f",
          "sha256": "d81570081c22be93accb331e596ad5460b527c860927f89cf7510aaf08fe62e3"
        },
        "downloads": -1,
        "filename": "nacos-py-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ee13ffc7a2ecbb2fed7e9d4b0d8e8c1f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22470,
        "upload_time": "2021-12-21T07:01:53",
        "upload_time_iso_8601": "2021-12-21T07:01:53.293055Z",
        "url": "https://files.pythonhosted.org/packages/6a/4c/9a342505d7fd7dd291fa861d2065cab765c648c3fc7f43353322b56c11a8/nacos-py-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "058e3eb5d68722f9062de7e9fd6ff20bddc85e74b93dcd90fa52fca8f5c1a6e8",
        "md5": "5d504954383d0a98b4bf16c119b64447",
        "sha256": "cd5fee67ab6487e32d151d90009970bc2796714f2fcbeacb375869979b48945c"
      },
      "downloads": -1,
      "filename": "nacos_py-0.1.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5d504954383d0a98b4bf16c119b64447",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 23870,
      "upload_time": "2021-12-21T07:01:51",
      "upload_time_iso_8601": "2021-12-21T07:01:51.877508Z",
      "url": "https://files.pythonhosted.org/packages/05/8e/3eb5d68722f9062de7e9fd6ff20bddc85e74b93dcd90fa52fca8f5c1a6e8/nacos_py-0.1.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6a4c9a342505d7fd7dd291fa861d2065cab765c648c3fc7f43353322b56c11a8",
        "md5": "ee13ffc7a2ecbb2fed7e9d4b0d8e8c1f",
        "sha256": "d81570081c22be93accb331e596ad5460b527c860927f89cf7510aaf08fe62e3"
      },
      "downloads": -1,
      "filename": "nacos-py-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "ee13ffc7a2ecbb2fed7e9d4b0d8e8c1f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 22470,
      "upload_time": "2021-12-21T07:01:53",
      "upload_time_iso_8601": "2021-12-21T07:01:53.293055Z",
      "url": "https://files.pythonhosted.org/packages/6a/4c/9a342505d7fd7dd291fa861d2065cab765c648c3fc7f43353322b56c11a8/nacos-py-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}