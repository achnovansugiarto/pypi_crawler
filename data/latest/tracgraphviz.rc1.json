{
  "info": {
    "author": "Peter Kropf",
    "author_email": "pkropf@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Trac Graphviz Wiki Processor\n----------------------------\n\nDescription\n===========\n\nThe graphviz wiki processor is a plugin for Trac that allows the the\ndynamic generation of diagrams by the various graphviz programs. The\ntext of a wiki page can contain the source text for graphviz and the\nweb browser will show the resulting image.\n\n\nSimple Example\n++++++++++++++\n\nA simple example would be::\n\n  #!graphviz\n  digraph G {Hello->World->Graphviz->Rules}\n\nThere are also several additional examples available in the examples\ndirectory.  They can be loaded into a Trac installation by the\nexamples/load_examples.py program. Once loaded, navigate to the\nwiki/GraphvizExamples page to access the examples.\n\n\nUsage Details\n+++++++++++++\n\nThe graphviz wiki processor supports all 5 graphviz drawing programs:\ndot, neato, twopi, circo and fdp. By default, the dot program is used\nto generate the images.\n\nThe different programs can be invoked using one of these::\n\n #!graphviz\n #!graphviz.dot\n #!graphviz.neato\n #!graphviz.twopi\n #!graphviz.circo\n #!graphviz.fdp\n\n\nThe supported image formats are: png (default), gif, jpg, svg and svgz.\nThe format can be specified using a \"/format\" modifier, in the hashbang,\nas shown below::\n\n #!graphviz/svg\n #!graphviz.dot/png\n #!graphviz.circo/gif\n\n\nPlatform Specific Requirements\n==============================\n\nFreeBSD\n+++++++\n\nOn FreeBSD systems, installing the x11-fonts/urwfonts package will\nprovide the fonts needed for graphviz to correctly generate images.\n\n\nOptional requirements\n=====================\n\nTo allow antialiasing of PNG images produced by graphviz, you need to\nhave rsvg, the librsvg rasterizer, installed on your system. It can be\ndownloaded from <http://librsvg.sourceforge.net/>. Note that rsvg is\nnot available for Windows.\n\n\nInstallation via Source\n=======================\n\nThe installation of the graphviz plugin from source is done by\ncreating a Python egg distribution file and copying the .egg file to\nthe Trac plugins directory. Detailed information on Python eggs can be\nfound at: http://peak.telecommunity.com/DevCenter/PythonEggs. In\naddition, the Easy Install package is required to create Python\neggs. See http://peak.telecommunity.com/DevCenter/EasyInstall for more\ninformation on using and installing Easy Install.\n\nDownload the source code for the graphviz plugin from\nhttp://trac-hacks.swapoff.org/download/graphvizplugin.zip or checkout\nthe source from the trac hacks subversion repository at:\nhttp://trac-hacks.swapoff.org/svn/graphvizplugin.\n\nChange to the graphvizplugin/0.11 directory and run::\n\n    python setup.py bdist_egg\n\nThis will generate a python egg in the dist directory. Copy the egg\nfile into the trac/plugins directory and follow the Configuration\nsteps outlined below.\n\n\nInstallation via Egg\n====================\n\ntodo\n\n\nConfiguration\n=============\n\nOnce the graphviz plugin has been installed either via source or via a\npython egg, some changes to the conf/trac.ini file must be done before it can \nbe used.\n\nAs for any plugin, if you did a global installation (as opposed to simply \ndropping the .egg in the plugins folder of your Trac environment), \nyou first need to enable it::\n\n   [components]\n   graphviz.* = enabled\n\nA new section called ``[graphviz]`` should be added to the trac.ini\nfile with these fields::\n\n    cache_dir       - The directory that will be used to cache the \n                      generated images. That directory must exist,\n                      unless you keep the default 'gvcache' value,\n                      in which case the plugin is allowed to create\n                      the folder inside the Trac environment.\n\n    cmd_path        - Full path to the directory where the graphviz\n                      programs are located. If not specified, the\n                      default is /usr/bin on Linux, c:\\Program\n                      Files\\ATT\\Graphviz\\bin on Windows and\n                      /usr/local/bin on FreeBSD 6.\n\n    out_format      - Graph output format. Valid formats are: png, jpg,\n                      svg, svgz, gif. If not specified, the default is\n                      png. This setting can be overrided on a per-graph\n                      basis.\n\n    processor       - Graphviz default processor. Valid processors\n                      are: dot, neato, twopi, fdp, circo. If not\n                      specified, the default is dot. This setting can\n                      be overrided on a per-graph basis.\n\n                      GraphvizMacro will verify that the default\n                      processor is installed and will not work if it\n                      is missing. All other processors are optional.\n                      If any of the other processors are missing, a\n                      warning message will be sent to the trac log and\n                      GraphvizMacro will continue to work.\n\n    png_antialias   - If this entry exists in the configuration file,\n                      then PNG outputs will be antialiased.\n\n    rsvg_path       - Full path to the rsvg program (including the filename).\n                      The default is `<cmd_path>/rsvg`.\n\n    default_*       - These settings define the default graph, node and\n                      edge attributes. They must be written as:\n                            default_TYPE_ATTRIBUTE = VALUE\n                      where TYPE      is one of graph, node, edge\n                            ATTRIBUTE is a valid graphviz attribute\n                            VALUE     is the attribute value.\n                        eg: default_edge_fontname = \"Andale Mono\"\n                            default_graph_fontsize = 10\n\n    cache_manager   - If this entry exists in the configuration file,\n                      then the cache management logic will be invoked\n                      and the cache_max_size, cache_min_size,\n                      cache_max_count and cache_min_count must be\n                      defined.\n\n    cache_max_size  - The maximum size in bytes that the cache should\n                      consume. This is the high watermark for disk space\n                      used.\n\n    cache_min_size  - When cleaning out the cache, remove files until\n                      this size in bytes is used by the cache. This is\n                      the low watermark for disk space used.\n\n    cache_max_count - The maximum number of files that the cache should\n                      contain. This is the high watermark for the\n                      directory entry count.\n\nThe cache_dir directory must exist and the trac server must have read\nand write access.\n\nThe cache manager is an attempt at keeping the cache directory under\ncontrol. This is experimental code that may cause more problems than\nit fixes. The cache manager will be invoked only if a new graphviz\nimage is to be produced. If the image can be loaded from the cache,\nthen the cache manager shouldn't need to run. This should minimize the\nI/O performance impact on the trac server. When the cache manager\ndetermines that it should clean up the cache, it will delete files\nbased on the file access time. The files that were least accessed will\nbe deleted first.\n\n\nConfiguration Example\n+++++++++++++++++++++\n\nHere is a sample graphviz section::\n\n [graphviz]\n cache_dir = /tmp/trac/htdocs/graphviz\n png_antialias = true\n default_graph_fontname = \"Andale Mono\"\n default_graph_fontsize = 10\n\n\nHere is a sample graphviz section that activates the cache manager::\n\n [graphviz]\n cache_dir = /tmp/trac/htdocs/graphviz\n png_antialias = true\n default_graph_fontname = \"Andale Mono\"\n default_graph_fontsize = 10\n cache_manager = yes\n cache_max_size = 10000000\n cache_min_size = 5000000\n cache_max_count = 2000\n cache_min_count = 1500\n\nThe cache manager is turned on since there is an entry in the graphviz\nsection called cache_manager. The value doesn't matter. To turn off\nthe cache manager, simply comment out the cache_manager entry.\n\nWhen the size of all the files in the cache directory exceeds\n10,000,000 bytes or the number of files in the cache directory exceeds\n2,000, then files are deleted until the size is less than 5,000,000\nbytes and the number of files is less than 1,500.\n\n\nHere's the same example but for Windows systems::\n\n [graphviz] cache_dir = C:\\projects\\plugins\\env\\trac\\htdocs\\graphviz\n cache_manager = yes\n cache_max_size = 10000000\n cache_min_size = 5000000\n cache_max_count = 2000\n cache_min_count = 1500\n\nNotice that the png_antialias, rsvg_path, default_graph_fontname and\ndefault_graph_fontsize are not defined. This is because rsvg is not\navailable on Windows and these options are not used.\n\n\nContributors\n============\n\nI'd like to extend my thanks to following people:\n\n * Kilian Cavalotti for\n\n   * the code to allow the output format to be specified system wide and \n     per diagram.\n\n   * work on the code to expand Trac wiki links within Graphviz\n     diagrams.\n\n * Alec Thomas for creating Trac Hacks (http://trac-hacks.swapoff.org)\n   and providing hosting for the Graphviz module.\n\n * Emmanuel Blot for the swift kick in the butt to get the 0.9 - 0.10\n   releated bug fixes resolved ;-)\n\n\n$Id: README.txt 4543 2008-10-20 10:05:06Z cboos $\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://trac-hacks.org/wiki/GraphvizPlugin",
    "keywords": "trac graphviz",
    "license": "BSD 3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "TracGraphviz",
    "package_url": "https://pypi.org/project/TracGraphviz/",
    "platform": "",
    "project_url": "https://pypi.org/project/TracGraphviz/",
    "project_urls": {
      "Homepage": "https://trac-hacks.org/wiki/GraphvizPlugin"
    },
    "release_url": "https://pypi.org/project/TracGraphviz/1.4.0.1/",
    "requires_dist": [
      "Trac",
      "Genshi"
    ],
    "requires_python": "",
    "summary": "Graphviz plugin for Trac 1.4",
    "version": "1.4.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7341225,
  "releases": {
    "1.4.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de724ba803bf7d7014a02d6333b96aac3eec6d884760f5fd12fff5c3e586e622",
          "md5": "499d1d6a8a89efffa8847dac590e6dc0",
          "sha256": "ed404f3730c8ae338beeee440137a825aaa76957d65e8e96f2987874f2ec63f6"
        },
        "downloads": -1,
        "filename": "TracGraphviz-1.4.0.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "499d1d6a8a89efffa8847dac590e6dc0",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 14078,
        "upload_time": "2020-05-28T03:47:09",
        "upload_time_iso_8601": "2020-05-28T03:47:09.623557Z",
        "url": "https://files.pythonhosted.org/packages/de/72/4ba803bf7d7014a02d6333b96aac3eec6d884760f5fd12fff5c3e586e622/TracGraphviz-1.4.0.1-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc53d34bb3330d12cae85a6282109df75565b55e5911c20a1bb919fe0ae5db23",
          "md5": "e3798ca268c72850966e982c8bf2a9a4",
          "sha256": "3a0dd80985572b0cb54043aed6f93cedcecc044281134fe3bf5b5608a61121b3"
        },
        "downloads": -1,
        "filename": "TracGraphviz-1.4.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e3798ca268c72850966e982c8bf2a9a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18009,
        "upload_time": "2020-05-28T03:47:11",
        "upload_time_iso_8601": "2020-05-28T03:47:11.916063Z",
        "url": "https://files.pythonhosted.org/packages/dc/53/d34bb3330d12cae85a6282109df75565b55e5911c20a1bb919fe0ae5db23/TracGraphviz-1.4.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de724ba803bf7d7014a02d6333b96aac3eec6d884760f5fd12fff5c3e586e622",
        "md5": "499d1d6a8a89efffa8847dac590e6dc0",
        "sha256": "ed404f3730c8ae338beeee440137a825aaa76957d65e8e96f2987874f2ec63f6"
      },
      "downloads": -1,
      "filename": "TracGraphviz-1.4.0.1-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "499d1d6a8a89efffa8847dac590e6dc0",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 14078,
      "upload_time": "2020-05-28T03:47:09",
      "upload_time_iso_8601": "2020-05-28T03:47:09.623557Z",
      "url": "https://files.pythonhosted.org/packages/de/72/4ba803bf7d7014a02d6333b96aac3eec6d884760f5fd12fff5c3e586e622/TracGraphviz-1.4.0.1-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc53d34bb3330d12cae85a6282109df75565b55e5911c20a1bb919fe0ae5db23",
        "md5": "e3798ca268c72850966e982c8bf2a9a4",
        "sha256": "3a0dd80985572b0cb54043aed6f93cedcecc044281134fe3bf5b5608a61121b3"
      },
      "downloads": -1,
      "filename": "TracGraphviz-1.4.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e3798ca268c72850966e982c8bf2a9a4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18009,
      "upload_time": "2020-05-28T03:47:11",
      "upload_time_iso_8601": "2020-05-28T03:47:11.916063Z",
      "url": "https://files.pythonhosted.org/packages/dc/53/d34bb3330d12cae85a6282109df75565b55e5911c20a1bb919fe0ae5db23/TracGraphviz-1.4.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}