{
  "info": {
    "author": "Alex Ermolaev",
    "author_email": "abionics.dev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Text Processing :: Markup",
      "Topic :: Text Processing :: Markup :: HTML",
      "Topic :: Text Processing :: Markup :: XML"
    ],
    "description": "======\nxpathi\n======\n\nIt is a library for generating XPath expressions as string ðŸ§™âœ¨\n\nReasons to use **xpathi**:\n\n- Code expressions look like real xpath expressions\n- Returns string type, you needn't convert it\n- Implements many xpath features\n- Dont have any dependencies\n- Easy to extend, you can add custom methods and attributes in one line\n\n\nInstallation\n------------\n\n.. code-block:: bash\n\n    pip install xpathi\n\n\nGenerating expressions\n----------------------\n\nEasily create xpath expression using magic methods:\n\n.. code-block:: python\n\n    from xpathi.elements import *\n\n    xpath = div // a(text='link') / _href\n    print(type(xpath))\n    # <class 'str'>\n    print(xpath)\n    # .//div//a[text()=\"link\"]/@href\n\n    xpath = div / div(_class='wrapper')[last() - 1] // a(contains(_href, 'google'), text='click') / _href\n    # .//div/div[@class=\"wrapper\"][last()-1]//a[contains(@href, \"google\") and text()=\"click\"]/@href\n\nResult of expressions is always a valid xpath with string type. You can pass it like ``selector.xpath(div // a)``\n\nSpecify tag like ``tag1 / tag2``\n\nSpecify attribute like ``tag / _attribute`` (prefer this method) or ``tag.attribute``\n\nSpecify parameters like ``tag(_attr1=val1, _attr2=val2, text=val3)``\n\nSpecify order like ``tag[0]``, ``tag[last()]``, ``tag[last()-1]``, ``tag[-2]``\n\n\nUsage examples\n--------------\n\n.. list-table::\n   :widths: 10 20 20\n   :header-rows: 1\n\n   * - Description\n     - Code\n     - Result\n   * - Single slash\n     - ``div / a``\n     - .//div/a\n   * - Double slash\n     - ``div // a``\n     - .//div//a\n   * - Parameters\n     - ``div // a(_class='c1', _maxlength=10)``\n     - .//div//a[@class=\"c1\" and @maxlength=10]\n   * - Parameters text()\n     - ``div / a(text='short', _class='c1')``\n     - .//div/a[text()=\"short\" and @class=\"c1\"]\n   * - Get attribute\n     - ``div / a / _href``\n     - .//div/a/\\@href\n   * - Get attribute\n     - ``div / a.href``\n     - .//div/a/\\@href\n   * - Get text attribute\n     - ``div / a / text()``\n     - .//div/a/text()\n   * - Index\n     - ``div / a[3] / p``\n     - .//div/a[3]/p\n   * - Index using last\n     - ``div / a[last() - 1] / _href``\n     - .//div/a[last()-1]/@href\n   * - Index negative\n     - ``div / a[-2] / _href``\n     - .//div/a[last()-1]/@href\n   * - Contains\n     - ``div / a(contains(_href, 'https'), _class='c1')``\n     - .//div/a[contains(@href, \"https\") and @class=\"c1\"]\n   * - Contains\n     - ``div / a(contains('@href', 'https'), _class='c1')``\n     - .//div/a[contains(@href, \"https\") and @class=\"c1\"]\n   * - Contains text()\n     - ``div / a(contains(text(), 'https'), _class='c1')``\n     - .//div/a[contains(text(), \"https\") and @class=\"c1\"]\n   * - Any tag (*)\n     - ``div / any / a``\n     - .//div/\\*/a\n\nSee more examples in tests\n\nIf you use only one tag (without slash), than you should call ``.execute()`` method\nto convert it to string:\n\n.. code-block:: python\n\n    xpath = div(_class='wrapper').execute()\n    print(xpath)\n    # div[@class=\"wrapper\"]\n\n\nCustom tags and attributes\n--------------------------\n\nYou can easy create custom tags, attributes and functions:\n\n.. code-block:: python\n\n    from xpathi.base import Element  # to create customs\n    from xpathi.elements import *  # to build xpath\n\n    tag = Element('tag')\n    _attribute = Element('@attribute')\n    function = Element('function()')\n\n    xpath = tag / _attribute / function\n    print(xpath)\n    # .//tag/@attribute/function()\n\n    xpath = tag(_attribute='val1', function='val2') // _attribute\n    print(xpath)\n    # .//tag[@attribute=\"val1\" and function()=\"val2\"]//@attribute\n\n\nMore\n----\n\nPyPI: https://pypi.org/project/xpathi\n\nRepository: https://github.com/abionics/xpathi\n\nDeveloper: Alex Ermolaev (Abionics)\n\nEmail: abionics.dev@gmail.com\n\nLicense: MIT (see LICENSE.txt)\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/abionics/xpathi",
    "keywords": "xpath scraping magic methods markup",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "xpathi",
    "package_url": "https://pypi.org/project/xpathi/",
    "platform": "",
    "project_url": "https://pypi.org/project/xpathi/",
    "project_urls": {
      "Homepage": "https://github.com/abionics/xpathi"
    },
    "release_url": "https://pypi.org/project/xpathi/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Library for generating XPath expressions as string using magic methods ðŸ§™âœ¨",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8121663,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd590615617350961558a30c42948c7fbd691377fe3e52fbb89d15f955f4af84",
          "md5": "eb10074ebfd65b25605b07110611ffb2",
          "sha256": "8aad8bc847c5617b0082e2fa4d1f8da0a7ae5296259cdf5109601dc58b03f841"
        },
        "downloads": -1,
        "filename": "xpathi-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb10074ebfd65b25605b07110611ffb2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9359,
        "upload_time": "2020-09-05T21:28:55",
        "upload_time_iso_8601": "2020-09-05T21:28:55.980806Z",
        "url": "https://files.pythonhosted.org/packages/fd/59/0615617350961558a30c42948c7fbd691377fe3e52fbb89d15f955f4af84/xpathi-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca171a7eecf9050e37964c30d7f0699fe6c1a147894cd3a482bd816f509dc5b4",
          "md5": "130aa2929a9d2be8dfdc890aabff9659",
          "sha256": "c7ff5a20387096b07747074efcdfbcd31a3baaacdedd72f28dbc4275acef6332"
        },
        "downloads": -1,
        "filename": "xpathi-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "130aa2929a9d2be8dfdc890aabff9659",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8351,
        "upload_time": "2020-09-05T21:28:58",
        "upload_time_iso_8601": "2020-09-05T21:28:58.294521Z",
        "url": "https://files.pythonhosted.org/packages/ca/17/1a7eecf9050e37964c30d7f0699fe6c1a147894cd3a482bd816f509dc5b4/xpathi-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd590615617350961558a30c42948c7fbd691377fe3e52fbb89d15f955f4af84",
        "md5": "eb10074ebfd65b25605b07110611ffb2",
        "sha256": "8aad8bc847c5617b0082e2fa4d1f8da0a7ae5296259cdf5109601dc58b03f841"
      },
      "downloads": -1,
      "filename": "xpathi-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "eb10074ebfd65b25605b07110611ffb2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9359,
      "upload_time": "2020-09-05T21:28:55",
      "upload_time_iso_8601": "2020-09-05T21:28:55.980806Z",
      "url": "https://files.pythonhosted.org/packages/fd/59/0615617350961558a30c42948c7fbd691377fe3e52fbb89d15f955f4af84/xpathi-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ca171a7eecf9050e37964c30d7f0699fe6c1a147894cd3a482bd816f509dc5b4",
        "md5": "130aa2929a9d2be8dfdc890aabff9659",
        "sha256": "c7ff5a20387096b07747074efcdfbcd31a3baaacdedd72f28dbc4275acef6332"
      },
      "downloads": -1,
      "filename": "xpathi-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "130aa2929a9d2be8dfdc890aabff9659",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8351,
      "upload_time": "2020-09-05T21:28:58",
      "upload_time_iso_8601": "2020-09-05T21:28:58.294521Z",
      "url": "https://files.pythonhosted.org/packages/ca/17/1a7eecf9050e37964c30d7f0699fe6c1a147894cd3a482bd816f509dc5b4/xpathi-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}