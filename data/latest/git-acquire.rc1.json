{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<!--\nCopyright (c) 2022 SanCloud Ltd\nSPDX-License-Identifier: CC-BY-4.0\n-->\n\n# git-acquire\n\n[<img align=right src=\"https://www.sancloud.co.uk/wp-content/uploads/2016/09/sancloud_and_address_web.png\">](https://www.sancloud.com/)\n\nEfficient acquisition of a git branch, tag or commit with the option to apply\nlocal patches. Brought to you by [SanCloud Ltd](https://www.sancloud.com/).\n\n\"Never spend more for an acquisition than you have to.\" - Ferengi rules of\nacquisition.\n\n## Usage\n\n`git-acquire` is a tool for managing the state of a git repository clone in an\ndeclarative and (mostly) idempotent way. The command line arguments specify the\nlocal target directory, the source URL of a git repository, the refspec to\ncheckout (a branch, tag or commit; defaulting to 'main'), an optional mirror\nrepository location and an optional set of local patches to apply after\ncheckout. This makes this tool well suited for use in CI/CD and other\nautomated workflows.\n\nThis tool will first initialize a git repository in the given target\ndirectory if one is not already present.  If a mirror repository URL is\nsupplied, This tool will fetch from this mirror repository first on the\nassumption that the mirror repository is local or on-site and therefore faster\nto access than the source repository. This tool will then fetch from the\nsource repository and checkout the desired branch, tag or commit. Finally, if\nany patches are supplied these will be applied in order.\n\nRunning this tool multiple times with the same arguments should broadly\nresult in the target directory arriving in the same state. As patches (if given)\nare currently re-applied on each invocation of the tool, the resulting git\ncommit hash may not remain the same. If the refspec to checkout is a branch, and\nthis branch is updated in the source repository, then the target directory will\nalso be updated to the new HEAD commit of this branch. Other than these caveats,\nthis tool should operate in an idempotent fashion.\n\nThrough the use of an optional local or on-site mirror repository and the fact\nthat only new commits will be fetched if the source repository was already\nchecked out in the target directory, using this tool will be more efficient\nthan cloning a source repository from scratch each time.\n\nThis tool can be invoked as either `git-acquire` or `git acquire` when present\non the current PATH.\n\n### Command Line Arguments\n\n```\nusage: git-acquire [-h] [--version] [-r REFSPEC] [-l LOCAL_PATH] [-p PATCH]\n                   [-m MIRROR_ROOT] [-v] source\n\nEfficient acquisition of a git branch/tag/commit\n\npositional arguments:\n  source                Source URI to clone or fetch from\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n  -r REFSPEC, --refspec REFSPEC\n                        Refspec (branch, tag or commit) to checkout\n  -l LOCAL_PATH, --local-path LOCAL_PATH\n                        Local path in which to perform the checkout\n  -p PATCH, --patch PATCH\n                        Apply patch(es) to the git repository after checkout.\n                        May be specified multiple times to apply several\n                        patches in order\n  -m MIRROR_ROOT, --mirror-root MIRROR_ROOT\n                        Root directory of a tree of mirror repositories\n  -v, --verbose         Show verbose output\n```\n\n### Managing mirror repositories\n\nMirror repositories are expected to be organized under a \"mirror root\" path\nwhich will be provided as a command line argument to this tool. The path to\nan individual mirror repository is formed by joining this root path with the\nfully-qualified domain name and relative path of the source repository URI. For\nexample, if the mirror root path is given as `/srv/mirror` and the source\nrepository URI is `https://github.com/torvalds/linux.git`, the mirror repository\npath used by this tool will be `/srv/mirror/github.com/torvalds/linux.git`.\n\nTo manage and update a tree of mirror repositories, the\n[mirrorshades](https://pypi.org/project/mirrorshades/) tool can be used.\n\n## Maintainers\n\n* Paul Barker\n  [:envelope:](mailto:paul.barker@sancloud.com)\n\n## License\n\nCopyright (c) 2021-2022 SanCloud Ltd.\n\n* Code files are distributed under the\n  [Apache 2.0 License](https://tldrlegal.com/license/apache-license-2.0-(apache-2.0)).\n\n* Documentation files are distributed under the\n  [CC BY 4.0 License](https://tldrlegal.com/license/creative-commons-attribution-4.0-international-(cc-by-4)).\n\n* Trivial data files are distributed under the\n  [CC0 1.0 License](https://tldrlegal.com/license/creative-commons-cc0-1.0-universal).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sancloudltd/git-acquire",
    "keywords": "",
    "license": "Apache-2.0 AND CC-BY-4.0 AND CC0-1.0",
    "maintainer": "Paul Barker",
    "maintainer_email": "paul.barker@sancloud.com",
    "name": "git-acquire",
    "package_url": "https://pypi.org/project/git-acquire/",
    "platform": "any",
    "project_url": "https://pypi.org/project/git-acquire/",
    "project_urls": {
      "Bug Tracker": "https://github.com/sancloudltd/git-acquire/issues",
      "Homepage": "https://github.com/sancloudltd/git-acquire"
    },
    "release_url": "https://pypi.org/project/git-acquire/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Efficient acquisition of a git branch/tag/commit",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14190866,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3bbef610f6196d53b9945ae47a43c0dbe42d62425529ccce38f733792ad39ffe",
          "md5": "5c9e4dbcafec7fa3e93ca56ce255a32f",
          "sha256": "fc5153a16f2ec45e16daafe888c25370f47e40fbd6bfd20415b464335c09339c"
        },
        "downloads": -1,
        "filename": "git_acquire-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c9e4dbcafec7fa3e93ca56ce255a32f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18448,
        "upload_time": "2022-06-20T16:32:31",
        "upload_time_iso_8601": "2022-06-20T16:32:31.156690Z",
        "url": "https://files.pythonhosted.org/packages/3b/be/f610f6196d53b9945ae47a43c0dbe42d62425529ccce38f733792ad39ffe/git_acquire-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22f6d8e225da22aa120372d88892a36b838def0c6312dbb772a382fe8fdb2ca6",
          "md5": "4ed9166dfabba273a53d20ba44a04106",
          "sha256": "4e1a10028c2fd51bd4e39b65ebacfe5a86129f6f4374219a8c93f7dd10b90449"
        },
        "downloads": -1,
        "filename": "git-acquire-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4ed9166dfabba273a53d20ba44a04106",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16089,
        "upload_time": "2022-06-20T16:32:33",
        "upload_time_iso_8601": "2022-06-20T16:32:33.018700Z",
        "url": "https://files.pythonhosted.org/packages/22/f6/d8e225da22aa120372d88892a36b838def0c6312dbb772a382fe8fdb2ca6/git-acquire-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3bbef610f6196d53b9945ae47a43c0dbe42d62425529ccce38f733792ad39ffe",
        "md5": "5c9e4dbcafec7fa3e93ca56ce255a32f",
        "sha256": "fc5153a16f2ec45e16daafe888c25370f47e40fbd6bfd20415b464335c09339c"
      },
      "downloads": -1,
      "filename": "git_acquire-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5c9e4dbcafec7fa3e93ca56ce255a32f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 18448,
      "upload_time": "2022-06-20T16:32:31",
      "upload_time_iso_8601": "2022-06-20T16:32:31.156690Z",
      "url": "https://files.pythonhosted.org/packages/3b/be/f610f6196d53b9945ae47a43c0dbe42d62425529ccce38f733792ad39ffe/git_acquire-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "22f6d8e225da22aa120372d88892a36b838def0c6312dbb772a382fe8fdb2ca6",
        "md5": "4ed9166dfabba273a53d20ba44a04106",
        "sha256": "4e1a10028c2fd51bd4e39b65ebacfe5a86129f6f4374219a8c93f7dd10b90449"
      },
      "downloads": -1,
      "filename": "git-acquire-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4ed9166dfabba273a53d20ba44a04106",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 16089,
      "upload_time": "2022-06-20T16:32:33",
      "upload_time_iso_8601": "2022-06-20T16:32:33.018700Z",
      "url": "https://files.pythonhosted.org/packages/22/f6/d8e225da22aa120372d88892a36b838def0c6312dbb772a382fe8fdb2ca6/git-acquire-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}