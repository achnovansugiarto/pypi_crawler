{
  "info": {
    "author": "Vibe Inc",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "# tap-amazon-sp\n\nThis is a [Singer][1] tap that produces JSON-formatted data following the [Singer spec][2].\n\nThis tap:\n\n- Pulls raw data from [Amazon SP API][3]\n- Extracts the following resources:\n  - [Orders][4]\n- Outputs the schema for each resource\n- Incrementally pulls data based on the input state\n\n## Install\n\n```\npip install tap-amazon-sp\n```\n\n## Usage\n\n1. Follow [Singer.io Best Practices][5] for setting up separate `tap` and `target` virtualenvs to avoid version conflicts.\n2. Create a [config file][6] ~/config.json with [Amazon Seller Partner API credentials][7]. Multiple accounts across\n   different marketplaces are supported. Here is [a list of marketplace names][8].\n    ```json\n    {\n      \"accounts\": [\n        {\n          \"selling_partner_id\": \"NA_SELLING_PARTNER_ID\",\n          \"marketplaces\": [\"US\", \"MX\", \"CA\"],\n          \"refresh_token\": \"env[NA_REFRESH_TOKEN]\"\n        },\n        {\n          \"selling_partner_id\": \"AU_SELLING_PARTNER_ID\",\n          \"marketplaces\": [\"AU\"],\n          \"refresh_token\": \"env[AU_REFRESH_TOKEN]\"\n        }\n      ],\n      \"access_key_id\": \"ACCESS_KEY_ID\",\n      \"secret_access_key\": \"env[SECRET_ACCESS_KEY]\",\n      \"sp_role_arn\": \"arn:aws:iam::1234567890:role/RoleName\",\n      \"lwa_client_id\": \"CLIENT_ID\",\n      \"lwa_client_secret\": \"env[LWA_CLIENT_SECRET]\",\n      \"start_date\": \"2021-01-01T00:00:00Z\",\n      \"rate_limit_backoff_seconds\": 60\n    }\n    ```\n3. Discover catalog: `tap-amazon-sp -d > catalog.json`\n4. Select `orders` stream in the generated `catalog.json`.\n    ```\n    ...\n    \"stream\": \"orders\",\n    \"metadata\": [\n      {\n        \"breadcrumb\": [],\n        \"metadata\": {\n          \"table-key-properties\": [\n            \"AmazonOrderId\"\n          ],\n          \"forced-replication-method\": \"INCREMENTAL\",\n          \"valid-replication-keys\": [\n            \"LastUpdateDate\"\n          ],\n          \"inclusion\": \"available\",\n          \"selected\": true  <-- Somewhere in the huge catalog file, in stream metadata.\n        }\n      },\n      ...\n    ]\n    ...\n    ```\n5. Use following command to sync all orders with order items, buyer info and shipping address (when available).\n```bash\ntap-amazon-sp -c config.json --catalog catalog.json > output.txt\n```\n\n---\n\nCopyright &copy; 2021 Vibe Inc\n\n[1]: https://singer.io\n[2]: https://github.com/singer-io/getting-started/blob/master/SPEC.md\n[3]: https://github.com/amzn/selling-partner-api-docs\n[4]: https://github.com/amzn/selling-partner-api-docs/blob/main/references/orders-api/ordersV0.md\n[5]: https://github.com/singer-io/getting-started/blob/master/docs/RUNNING_AND_DEVELOPING.md#running-a-singer-tap-with-a-singer-target\n[6]: https://github.com/vibeus/tap-amazon-sp/blob/master/sample_config.json\n[7]: https://github.com/amzn/selling-partner-api-docs/blob/main/guides/en-US/developer-guide/SellingPartnerApiDeveloperGuide.md#creating-and-configuring-iam-policies-and-entities\n[8]: https://github.com/saleweaver/python-amazon-sp-api/blob/master/sp_api/base/marketplaces.py\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vibeus/tap-amazon-sp",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tap-amazon-sp",
    "package_url": "https://pypi.org/project/tap-amazon-sp/",
    "platform": "",
    "project_url": "https://pypi.org/project/tap-amazon-sp/",
    "project_urls": {
      "Homepage": "https://github.com/vibeus/tap-amazon-sp"
    },
    "release_url": "https://pypi.org/project/tap-amazon-sp/0.1.1/",
    "requires_dist": [
      "python-amazon-sp-api",
      "requests",
      "singer-python"
    ],
    "requires_python": "",
    "summary": "Singer.io tap for extracting data from Amazon Seller Partner API.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10718291,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f722420a40c967c465d23ebfaf710c49124aea3c8bbe936bd7a6ffa154e7727",
          "md5": "debac73b583d1ab85d7a0cf3b2c39cfd",
          "sha256": "0ab18d97760af0f571956f67ad77dae66c527962d3ab9447c1b25c08fcd6732a"
        },
        "downloads": -1,
        "filename": "tap_amazon_sp-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "debac73b583d1ab85d7a0cf3b2c39cfd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14052,
        "upload_time": "2021-06-23T04:51:49",
        "upload_time_iso_8601": "2021-06-23T04:51:49.387842Z",
        "url": "https://files.pythonhosted.org/packages/2f/72/2420a40c967c465d23ebfaf710c49124aea3c8bbe936bd7a6ffa154e7727/tap_amazon_sp-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aacc9a98667da4ce61041da2c1abc8e6b67562d7dfe696d8cde8d21ecec59b16",
          "md5": "e74a970a192e6bb8c525bf853e58280b",
          "sha256": "1bdaae448d7b69a5a621c873274c980938450fc440bd337e5612de4db7c5bd1c"
        },
        "downloads": -1,
        "filename": "tap-amazon-sp-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e74a970a192e6bb8c525bf853e58280b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14589,
        "upload_time": "2021-06-23T04:51:50",
        "upload_time_iso_8601": "2021-06-23T04:51:50.499620Z",
        "url": "https://files.pythonhosted.org/packages/aa/cc/9a98667da4ce61041da2c1abc8e6b67562d7dfe696d8cde8d21ecec59b16/tap-amazon-sp-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f722420a40c967c465d23ebfaf710c49124aea3c8bbe936bd7a6ffa154e7727",
        "md5": "debac73b583d1ab85d7a0cf3b2c39cfd",
        "sha256": "0ab18d97760af0f571956f67ad77dae66c527962d3ab9447c1b25c08fcd6732a"
      },
      "downloads": -1,
      "filename": "tap_amazon_sp-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "debac73b583d1ab85d7a0cf3b2c39cfd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14052,
      "upload_time": "2021-06-23T04:51:49",
      "upload_time_iso_8601": "2021-06-23T04:51:49.387842Z",
      "url": "https://files.pythonhosted.org/packages/2f/72/2420a40c967c465d23ebfaf710c49124aea3c8bbe936bd7a6ffa154e7727/tap_amazon_sp-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aacc9a98667da4ce61041da2c1abc8e6b67562d7dfe696d8cde8d21ecec59b16",
        "md5": "e74a970a192e6bb8c525bf853e58280b",
        "sha256": "1bdaae448d7b69a5a621c873274c980938450fc440bd337e5612de4db7c5bd1c"
      },
      "downloads": -1,
      "filename": "tap-amazon-sp-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e74a970a192e6bb8c525bf853e58280b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14589,
      "upload_time": "2021-06-23T04:51:50",
      "upload_time_iso_8601": "2021-06-23T04:51:50.499620Z",
      "url": "https://files.pythonhosted.org/packages/aa/cc/9a98667da4ce61041da2c1abc8e6b67562d7dfe696d8cde8d21ecec59b16/tap-amazon-sp-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}