{
  "info": {
    "author": "johannes skog",
    "author_email": "johannes.skog.unsec@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Reacher\n\nFrom your local machine, Reacher will,\n\n+ build a docker image on the remote (docker must already be installed and ssh enabled) according to specifications\n+ set up container on the remote with port port-forwarding and enviroment variables \n+ execute your local code on the remote, in the container, with printouts shown as your were running it locally\n+ upload/download files from the container to your local machine\n\n\n# Getting started...\n\nTo get started,\n\n```bash\npip install reacher\npip install python-dotenv\n```\n\nFirst we must setup a connection to the remote, RemoteClient will create a ssh connection between the local and remote machine.\n\n```python\nfrom reacher.reacher import Reacher, RemoteClient\nfrom dotenv import dotenv_values\nconfig = dotenv_values()  # take environment variables from .env.\nclient = RemoteClient(\n    host=config[\"HOST\"],\n    user=config[\"USER\"],\n    password=config[\"PASSWORD\"],\n    ssh_key_filepath=config[\"SSH_KEY_PATH\"]\n)\n```\n\nthe connection is sent to Reacher together with the name of the image that we want to build and the name of the container.\n\n```python\nreacher = Reacher(\n    client=client,\n    build_name=\"base\",\n    image_name=\"base\",\n    build_context=\"dockercontext\"\n)\n```\n\nor send in the aruments for RemoteClient direcly to Reacher\n\n```python\nreacher = Reacher(\n    client=client,\n    build_name=\"base\",\n    image_name=\"base\",\n    build_context=\"dockercontext\",\n    host=config[\"HOST\"],\n    user=config[\"USER\"],\n    password=config[\"PASSWORD\"],\n    ssh_key_filepath=config[\"SSH_KEY_PATH\"]\n)\n```\n\nbuild_context should contain everything for building the docker image on the remote. It might look like,\n\n```bash\n$ ls dockercontext/\nDockerfile  requirements.txt\n```\n\nOnce Reacher has been setup we can build the image on the remote. Reacher will send the build_context to the remote and\ntrigger docker to build an image according to the specifications in the Dockerfile\n\n```python\nreacher.build()\n\n[+] Building 0.0s (0/1)                                                         \n[+] Building 0.2s (2/3)                                                         \n => [internal] load .dockerignore                                          0.0s\n => => transferring context: 2B                                            0.0s\n => [internal] load build definition from Dockerfile                       0.0s\n => => transferring dockerfile: 528B                                       0.0\n ...\n ...\n```\n\nand thereafter we can setup the docker container. Reacher will make sure this container is running until we have explicitly deleted it.\n\n```python\nreacher.setup(ports=[8888, 6666], envs=dotenv_values(\".env\"))\n```\n\n# Running code on the remote \n\n## Running a code-snippet \n\nNow we have built the docker image on the remote and have a container ready to execute whatever code that we want to run.\n\nA \"Hello World\" test can be triggered from a notebook.\n\nFirst we create the python module that we want to execute,\n\n\n```python\n%%writefile simple_test.py\nimport time\nwhile 1:\n    print(\"Hello from remote\")\n    time.sleep(1)\n```\n\nand then we execute it on the remote inside our controlled docker enviroment.\n\n```python\nreacher.execute(\n    file=\"simple_test.py\",\n    command=\"python simple_test.py\",\n    named_session=\"simple_test\",\n    # Before sending the code to the remote, clean the container from previous runs.\n    clear_container=True, \n)\n\nPreparing to copy...\n\nCopying to container - 2.56kB\n\nSuccessfully copied 2.56kB to base://workspace\n\nHello from remote\nHello from remote\n...\n```\n\nsimple_test will continue to run in the background (even if you kill the cell/script that you instantiated the reacher.execute from) until we explicitly have killed it.\n\nWith list_named_sessions you can get all currently running sessions.\n\n```python\nreacher.list_named_sessions()\nThere is a screen on:\n\t22.simple_test\t(03/19/23 18:20:07)\t(Attached)\n1 Socket in /run/screen/S-root.\n```\n\nwe can always attach to a named session to continue to get printouts.\n\n\n```python\nreacher.attach_named_session(\"simple_test\")\n```\n\nor kill it\n\n```python\nreacher.kill_named_session(\"simple_test\")\n```\n\n## Running with dependencies \n\nTo execute some code that depends on other modules inside a src directory, simply add src as a context_folder when calling \nreacher.execute.\n\n```python\n%%writefile dependency_test.py\nfrom dependency import Dependency\nd = Dependency()\n```\n\n```python\nreacher.execute(\n    context_folder=\"src\",\n    file=\"dependency_test.py\",\n    command=\"python dependency_test.py\",\n    named_session=\"dependency_test\",\n)\n\nPreparing to copy...\n\nCopying to container - 3.584kB\n\nSuccessfully copied 3.584kB to base://workspace\n\nHello from class Dependency\n[screen is terminating]\n```\n\n## Generate artifact \n\nIn many cases we want to run some code on the remote and afterwards collect some artifacts.\n\nEverything that is saved in the artifact directory will be available for us to download to the local machine. \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/johannes-skog/reacher",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "reacher",
    "package_url": "https://pypi.org/project/reacher/",
    "platform": null,
    "project_url": "https://pypi.org/project/reacher/",
    "project_urls": {
      "Homepage": "https://github.com/johannes-skog/reacher"
    },
    "release_url": "https://pypi.org/project/reacher/0.3.2/",
    "requires_dist": [
      "scp",
      "paramiko"
    ],
    "requires_python": "",
    "summary": "A tool for reaching out to remote machine - excecute code and collect artificats",
    "version": "0.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17479676,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a02313a15c6f318f9a8fcdbe49dc6bae0bad50b1a72b7419eec655f82cfc766",
          "md5": "350e9416fe4f957328d64af23da06eaa",
          "sha256": "6bb8ffa0be48c09632dd8ec78dc81bda2ca7bffe4b9596f1f57371fb91a59104"
        },
        "downloads": -1,
        "filename": "reacher-0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "350e9416fe4f957328d64af23da06eaa",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 4252,
        "upload_time": "2023-03-19T18:07:38",
        "upload_time_iso_8601": "2023-03-19T18:07:38.150683Z",
        "url": "https://files.pythonhosted.org/packages/6a/02/313a15c6f318f9a8fcdbe49dc6bae0bad50b1a72b7419eec655f82cfc766/reacher-0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a82afbda49fea444d6e8422c804d645a7f4109c6f4b035f89afebb3a2ee33432",
          "md5": "bf14ae62cc20a57894f9fb2f9f7b9973",
          "sha256": "3b71c66ae6c4fa51352032ab44cb75be0af064e86a89d341a5483242588ccb53"
        },
        "downloads": -1,
        "filename": "reacher-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf14ae62cc20a57894f9fb2f9f7b9973",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4229,
        "upload_time": "2023-03-19T17:56:24",
        "upload_time_iso_8601": "2023-03-19T17:56:24.552728Z",
        "url": "https://files.pythonhosted.org/packages/a8/2a/fbda49fea444d6e8422c804d645a7f4109c6f4b035f89afebb3a2ee33432/reacher-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2ae6985cecb50a637c36273d5b9bad0b3eba0f121b768d86dcbfc0a358992b4",
          "md5": "a65397dcf9d2aa948dee8307d2d4cf7d",
          "sha256": "56275006509c3030bcfd2bcab344ddc1be4f83cdeaf7cbb2356f94ebf38ec3e3"
        },
        "downloads": -1,
        "filename": "reacher-0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a65397dcf9d2aa948dee8307d2d4cf7d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 4253,
        "upload_time": "2023-03-19T18:07:41",
        "upload_time_iso_8601": "2023-03-19T18:07:41.495650Z",
        "url": "https://files.pythonhosted.org/packages/c2/ae/6985cecb50a637c36273d5b9bad0b3eba0f121b768d86dcbfc0a358992b4/reacher-0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0955aa21b316c5318ceb37b1404abc3c2357f544c8b0ff9e20a7624d555480cd",
          "md5": "b24e4755591762e61cec6431e21de6a9",
          "sha256": "a535383de54a960f87ad407e40b4066ac5772d088b5c2342124f7eb1c973c3f4"
        },
        "downloads": -1,
        "filename": "reacher-0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b24e4755591762e61cec6431e21de6a9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 5966,
        "upload_time": "2023-03-23T17:51:41",
        "upload_time_iso_8601": "2023-03-23T17:51:41.329760Z",
        "url": "https://files.pythonhosted.org/packages/09/55/aa21b316c5318ceb37b1404abc3c2357f544c8b0ff9e20a7624d555480cd/reacher-0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea7826e7b7149e896235817423c0b6d1f834f5cc50c3afa9cc90a991f1dee909",
          "md5": "241de1847495721f3f3e11e593266b64",
          "sha256": "5ab1103bf3e5b8d0c4a9d99197999db71d2d50f974e7c2ac1c26303fd1b31754"
        },
        "downloads": -1,
        "filename": "reacher-0.3.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "241de1847495721f3f3e11e593266b64",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6038,
        "upload_time": "2023-03-26T10:21:17",
        "upload_time_iso_8601": "2023-03-26T10:21:17.571397Z",
        "url": "https://files.pythonhosted.org/packages/ea/78/26e7b7149e896235817423c0b6d1f834f5cc50c3afa9cc90a991f1dee909/reacher-0.3.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12a24712389b5cebe9e0fbb355e47698603394d1f2898b4a3a2db36d6905d9c9",
          "md5": "7adee8ecbe406153aeedc0ba359d6e60",
          "sha256": "28317b29171b553b1b2b453b65ecf9f7ff2e84c79379d4da10b9d8d5a48ac175"
        },
        "downloads": -1,
        "filename": "reacher-0.3.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7adee8ecbe406153aeedc0ba359d6e60",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6248,
        "upload_time": "2023-03-28T15:05:43",
        "upload_time_iso_8601": "2023-03-28T15:05:43.966117Z",
        "url": "https://files.pythonhosted.org/packages/12/a2/4712389b5cebe9e0fbb355e47698603394d1f2898b4a3a2db36d6905d9c9/reacher-0.3.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "12a24712389b5cebe9e0fbb355e47698603394d1f2898b4a3a2db36d6905d9c9",
        "md5": "7adee8ecbe406153aeedc0ba359d6e60",
        "sha256": "28317b29171b553b1b2b453b65ecf9f7ff2e84c79379d4da10b9d8d5a48ac175"
      },
      "downloads": -1,
      "filename": "reacher-0.3.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7adee8ecbe406153aeedc0ba359d6e60",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 6248,
      "upload_time": "2023-03-28T15:05:43",
      "upload_time_iso_8601": "2023-03-28T15:05:43.966117Z",
      "url": "https://files.pythonhosted.org/packages/12/a2/4712389b5cebe9e0fbb355e47698603394d1f2898b4a3a2db36d6905d9c9/reacher-0.3.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}