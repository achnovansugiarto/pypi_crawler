{
  "info": {
    "author": "Sekgobela Kevin",
    "author_email": "kevinnoko23@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Text Processing :: Markup :: HTML",
      "Topic :: Text Processing :: Markup :: XML",
      "Topic :: Utilities"
    ],
    "description": "# surflink\nSurflink extracts links/urls from html markup with ability to choose\nwhich urls to be extracted. Instead of extracting all urls from\nhtml, specific urls like images can be extracted while leaving the rest.\nUrls by default can only be extracted if they are within __href__ and \n__src__ attributes of tags.\n\nType of url is determined from the tag of url and also content type guessed\nfrom the url. __strict__ argument can be passed to most functions which\nallows to determine type of url from its tag other than guessed content type.\nThat would make image url to be matched only if its within 'img' tag but \nwont be matched if not within tag even if it has image extension.\n\nOther functions operating on urls also exits such as making urls absolute\nor filtering them based on their scheme or hostname. \n[resid](https://github.com/sekgobela-kevin/resid) provides more features\nfor operating with urls and others which surflink does not provide but\nmay be valuable.\n\n### Installing\nThis is enough into your command-line application(python required):\n```bash\npip install surflink\n```\n\n### Usage\nFirst import surflink to use its functions.\n```python\n>>> import resid\n```\n\nThis html sample will be used for code examples examples to follow.\n```html\n<html>\n    <head>\n        <base href=\"https://example.com/\">\n        <script src='https://example.com/startup.js' \n        type=\"application/javascript\"></script>\n        <script src='https://example.com/jquery.js'></script>\n        <link rel=\"stylesheet\" href='https://example.com/w3.css'>\n    </head>\n    <body>\n        <iframe src='https://example.com/great_river.html'></iframe>\n        <img src='https://example.com/pages/elephant.png'>\n        <audio src='https://example.com/audios/hiphop_beat.mp3'></audio>\n        <video src='https://example.com/audios/underground.mp4'></video>\n        \n        Random Links\n        <a href='/pages/world'>world</a><br>\n        <a href='https://example.com/pages/tree.png'>tree image</a><br>\n        <a href=\"https://en.wikipedia.org/wiki/Food\">food</a>\n    </body>\n</html>\n```\n\nTake it as part of code samples to follow as variable `html_sample` has been\ndefined before it.\n```python\n# This variable contains above html as string.\n>>> html_sample = ...\n```\n\nHere urls for images and javascript get extracted from html. All functions\nthat extract urls accept the same argument but may return different urls.\n```python\n# Extracts urls for images no matter where they are from.\n>>> surflink.extract_image_urls(html_sample)\n['https://example.com/pages/elephant.png', 'https://example.com/pages/tree.png']\n```\n```python\n# Does the same with javascript urls.\n>>> surflink.extract_javascript_urls(html_sample)\n['https://example.com/startup.js', 'https://example.com/jquery.js']\n```\n\nRealise that 'https://example.com/pages/tree.png' was matched as image just\nbecause of its extension even if it was not in __img__ tags or stated that\nits an image url. `strict` argument does exatly in that url type will be \ndetermined based on whats on html not guessed content type.\n```python\n# Now only image urls with 'img' tag will be extracted.\n# Unless type attribute is set to something else not being image.\n>>> surflink.extract_image_urls(html_sample, strict=True)\n['https://example.com/pages/elephant.png']\n```\n\nSometimes urls with html may be relative to other urls and it may happen\nthat their absolute version is needed. That would require making url\nabsolute using whatever url it is based on usually can be found within\nthe html but sometimes it may need to be provided explicitely.\n\nThere is url '/pages/world' which is relative but we need it to be absolute\nlike other urls. Its now easier as our html already contains base url which\nis internally used to make url absolute.\n```python\n# Realise that '/pages/world' is absolute and missing scheme and domain.\n>>> surflink.extract_webpage_urls(html_sample)\n[..., '/pages/world', 'https://en.wikipedia.org/wiki/Food']\n```\n```python\n# But here scheme and domain were added automatically.\n>>> surflink.extract_webpage_urls(html_sample, make_absolute=True)\n[..., 'https://example.com/pages/world', 'https://en.wikipedia.org/wiki/Food']\n# Base url can be provided with 'base_url' argument if your html does\n# not provide one or want to overide html base url.\nsurflink.extract_webpage_urls(html_sample, base_url=\"https://example.com/\" \nmake_absolute=True)\n[..., 'https://example.com/pages/world', 'https://en.wikipedia.org/wiki/Food']\n```\n\nUrls can be made absolute without requiring extracting them from html.\n```python\n# Makes single url absolute\n>>> surflink.make_url_absoulute(base_url=\"https://example.com/\", url=\"/pages/world\")\n'https://example.com/pages/world'\n```\n```python\n# Makes multiple urls absolute\n>>> urls = [\"/pages/world\", \"//example.com/pages/elephant.png\"]\n>>> surflink.make_urls_absoulute(base_url=\"https://example.com/pages\", urls=urls)\n['https://example.com/pages/world', 'https://example.com/pages/elephant.png']\n```\n\nThere exists other arguments on functions that extracts urls such as `attrs` \nwhich specifies attributes to extract urls and `start_tag` which specifies\ntag name to start extracting urls and lastly `unique` which ensures function\nreturns unique urls.\n```python\n>>> surflink.extract_javascript_urls(html_sample, attrs=(\"src\", \"href\"), start_tag=\"html\", strict=False)\n['https://example.com/startup.js', 'https://example.com/jquery.js']\n```\n\n> Functions here are just few of other functions that exists in surflink.\n\n### License\n[MIT license](https://github.com/sekgobela-kevin/surflink/blob/main/LICENSE)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sekgobela-kevin/surflink",
    "keywords": "extract,webpage,html,link,url",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "surflink",
    "package_url": "https://pypi.org/project/surflink/",
    "platform": null,
    "project_url": "https://pypi.org/project/surflink/",
    "project_urls": {
      "Bug Tracker": "https://github.com/sekgobela-kevin/surflink/issues",
      "Homepage": "https://github.com/sekgobela-kevin/surflink"
    },
    "release_url": "https://pypi.org/project/surflink/0.0.2/",
    "requires_dist": [
      "bs4",
      "resid (<1.0.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Extracts links/urls from html markup with ability to choose which urls to be extracted.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15258152,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9469549594b5579a8342f895b2482b7a326e65aa44e2bf5ace821b3d32368479",
          "md5": "41cad14f097cf81c68924e1c552356c1",
          "sha256": "96b4c188f5c642f3bdcaa2735675b1de67fdbf040920bb326d7ca34f04d2e107"
        },
        "downloads": -1,
        "filename": "surflink-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41cad14f097cf81c68924e1c552356c1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10648,
        "upload_time": "2022-09-25T12:53:49",
        "upload_time_iso_8601": "2022-09-25T12:53:49.511130Z",
        "url": "https://files.pythonhosted.org/packages/94/69/549594b5579a8342f895b2482b7a326e65aa44e2bf5ace821b3d32368479/surflink-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8e9b474adff99dcf2a29aa52d8c0137431da35ed799d676674694ae7b810462",
          "md5": "0cf1fb2f65aa7649d909e082bcb0ff55",
          "sha256": "c1925ca0cbd90989dd6bfbe1675eddfe0631fd98d4dcc5e9239f837adbd0380e"
        },
        "downloads": -1,
        "filename": "surflink-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0cf1fb2f65aa7649d909e082bcb0ff55",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11798,
        "upload_time": "2022-09-25T12:53:51",
        "upload_time_iso_8601": "2022-09-25T12:53:51.123009Z",
        "url": "https://files.pythonhosted.org/packages/a8/e9/b474adff99dcf2a29aa52d8c0137431da35ed799d676674694ae7b810462/surflink-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "041727000c3860e2afda0e188f353f101e37743631206c1d712d2f7bb5db7959",
          "md5": "8e9163cc2c8c45a2405daf90cc832b48",
          "sha256": "1e97501df772e254ae191a150978b145044b056ddefd407dbc9ca8e092b99fb5"
        },
        "downloads": -1,
        "filename": "surflink-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e9163cc2c8c45a2405daf90cc832b48",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10670,
        "upload_time": "2022-09-29T17:17:48",
        "upload_time_iso_8601": "2022-09-29T17:17:48.879720Z",
        "url": "https://files.pythonhosted.org/packages/04/17/27000c3860e2afda0e188f353f101e37743631206c1d712d2f7bb5db7959/surflink-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18ecd808a0fe8962a7967c8a544380324ebd8680ab5d65ae7b6f6a37c5a48766",
          "md5": "3846bada2d9653d075712168527dd967",
          "sha256": "cc580710003fba9df908c7a81072e5960c66d8228bb58e1651654fdc8fddf78b"
        },
        "downloads": -1,
        "filename": "surflink-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3846bada2d9653d075712168527dd967",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11901,
        "upload_time": "2022-09-29T17:17:51",
        "upload_time_iso_8601": "2022-09-29T17:17:51.426495Z",
        "url": "https://files.pythonhosted.org/packages/18/ec/d808a0fe8962a7967c8a544380324ebd8680ab5d65ae7b6f6a37c5a48766/surflink-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "041727000c3860e2afda0e188f353f101e37743631206c1d712d2f7bb5db7959",
        "md5": "8e9163cc2c8c45a2405daf90cc832b48",
        "sha256": "1e97501df772e254ae191a150978b145044b056ddefd407dbc9ca8e092b99fb5"
      },
      "downloads": -1,
      "filename": "surflink-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8e9163cc2c8c45a2405daf90cc832b48",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10670,
      "upload_time": "2022-09-29T17:17:48",
      "upload_time_iso_8601": "2022-09-29T17:17:48.879720Z",
      "url": "https://files.pythonhosted.org/packages/04/17/27000c3860e2afda0e188f353f101e37743631206c1d712d2f7bb5db7959/surflink-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18ecd808a0fe8962a7967c8a544380324ebd8680ab5d65ae7b6f6a37c5a48766",
        "md5": "3846bada2d9653d075712168527dd967",
        "sha256": "cc580710003fba9df908c7a81072e5960c66d8228bb58e1651654fdc8fddf78b"
      },
      "downloads": -1,
      "filename": "surflink-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "3846bada2d9653d075712168527dd967",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11901,
      "upload_time": "2022-09-29T17:17:51",
      "upload_time_iso_8601": "2022-09-29T17:17:51.426495Z",
      "url": "https://files.pythonhosted.org/packages/18/ec/d808a0fe8962a7967c8a544380324ebd8680ab5d65ae7b6f6a37c5a48766/surflink-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}