{
  "info": {
    "author": "Dolfies",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "# Discord Protocol Buffers\r\nReverse-engineering Discord's user settings protobufs.\r\n\r\nThis repository provides protocol buffer files for Discord's user settings automatically generated and automatically updated. The protobufs are provided as .proto files in the out/ directory, one file per settings type.\r\n\r\nThese protobufs are used by the Discord clients for user settings.\r\n\r\nProvided for educational purposes only.\r\n\r\n## Usage\r\n### Note\r\nAutomating user accounts is against the Discord ToS. This repository is a proof of concept and I cannot recommend using it. Do so at your own risk.\r\n\r\n### Installation\r\n```\r\n# with npm\r\nnpm install discord-protos\r\n\r\n# with yarn\r\nyarn add discord-protos\r\n\r\n# with pnpm\r\npnpm add discord-protos\r\n\r\n# with pip\r\npip install discord-protos\r\n```\r\n\r\n### Example\r\nJavaScript:\r\n```js\r\nconst { PreloadedUserSettings } = require('discord-protos');\r\n\r\nconst encoded = PreloadedUserSettings.toBase64({\r\n    status: {\r\n        status: {\r\n            value: \"online\",\r\n        },\r\n        customStatus: {\r\n            text: \"Hello World\",\r\n            emojiId: 0n,\r\n            emojiName: \"\",\r\n            expiresAtMs: 0n,\r\n        },\r\n    },\r\n});\r\n\r\nconst decoded = PreloadedUserSettings.fromBase64(encoded);\r\n\r\nconsole.log(encoded, decoded);\r\n```\r\n\r\nPython:\r\n```py\r\nimport base64\r\nfrom discord_protos import PreloadedUserSettings\r\n\r\nsettings = PreloadedUserSettings()\r\nencoded = base64.b64encode(settings.ParseDict({\r\n    'status': {\r\n        'status': {\r\n            'value': 'online',\r\n        },\r\n        'custom_status': {\r\n            'text': 'Hello World',\r\n            'emoji_id': 0,\r\n            'emoji_name': '',\r\n            'expires_at_ms': 0,\r\n        },\r\n    },\r\n}).SerializeToString())\r\n\r\ndecoded = PreloadedUserSettings.FromString(base64.b64decode(encoded))\r\n\r\nprint(encoded, decoded)\r\n```\r\n\r\n## Mapping\r\nThe following table shows which protobuf user settings correspond to which .proto file (the Python package also provides a `UserSettingsType` enum for convenience).\r\n\r\n| Type | Value                             | File                        | Use                                                |\r\n| ---- | --------------------------------- | --------------------------- | -------------------------------------------------- |\r\n| 1    | `PRELOADED_USER_SETTINGS`         | PreloadedUserSettings.proto | General Discord user settings.                     |\r\n| 2    | `FRECENCY_AND_FAVORITES_SETTINGS` | FrecencyUserSettings.proto  | Frecency and favorites storage for various things. |\r\n| 3    | `TEST_SETTINGS`                   | -                           | Unknown.                                           |\r\n\r\n\r\n### Protobufs\r\nThe .proto files can be compiled down to Python or JavaScript files by running `npm run py` or `npm run js`. This requires protoc to be installed.\r\n\r\nBase64-encoded data for these protobufs are provided by the `GET /users/@me/settings-proto/{type}` endpoint. For preloaded user settings, base64-encoded data is provided in the `user_settings_proto` key of the READY event received in the Discord Gateway, as well as in USER_SETTINGS_PROTO_UPDATE events.\r\n\r\n### Development\r\nRunning `pnpm load` will extract and save the latest protobufs to the discord_protos/ directory.\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dolfies/discord-protos",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "discord-protos",
    "package_url": "https://pypi.org/project/discord-protos/",
    "platform": null,
    "project_url": "https://pypi.org/project/discord-protos/",
    "project_urls": {
      "Homepage": "https://github.com/dolfies/discord-protos",
      "Issue tracker": "https://github.com/dolfies/discord-protos/issues"
    },
    "release_url": "https://pypi.org/project/discord-protos/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.8.0",
    "summary": "Discord user settings protobufs.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17311509,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12253d3e48fca74c928997ac73052782d5b5ef46099f3e6d1deb073dd444afc1",
          "md5": "470b04c9a4cfbc57382004abec623281",
          "sha256": "9d72f793bc772e4bfba18cd9e003d353cc79116311bcaa39523b295903a887c0"
        },
        "downloads": -1,
        "filename": "discord-protos-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "470b04c9a4cfbc57382004abec623281",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0",
        "size": 13361,
        "upload_time": "2023-03-16T00:45:29",
        "upload_time_iso_8601": "2023-03-16T00:45:29.419006Z",
        "url": "https://files.pythonhosted.org/packages/12/25/3d3e48fca74c928997ac73052782d5b5ef46099f3e6d1deb073dd444afc1/discord-protos-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a7c4b9eaf1f85caa5ff93caa948ee47a2fc5be2d2bbd4b60d3f989da84c8140",
          "md5": "1cd71dfed6c3315cd9af62250c9cc50f",
          "sha256": "23953a05f32beedb40b708ec4b457530a6196a49c8d75d337ae9282a2a41c997"
        },
        "downloads": -1,
        "filename": "discord-protos-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1cd71dfed6c3315cd9af62250c9cc50f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0",
        "size": 13394,
        "upload_time": "2023-03-16T01:32:14",
        "upload_time_iso_8601": "2023-03-16T01:32:14.287091Z",
        "url": "https://files.pythonhosted.org/packages/3a/7c/4b9eaf1f85caa5ff93caa948ee47a2fc5be2d2bbd4b60d3f989da84c8140/discord-protos-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a7c4b9eaf1f85caa5ff93caa948ee47a2fc5be2d2bbd4b60d3f989da84c8140",
        "md5": "1cd71dfed6c3315cd9af62250c9cc50f",
        "sha256": "23953a05f32beedb40b708ec4b457530a6196a49c8d75d337ae9282a2a41c997"
      },
      "downloads": -1,
      "filename": "discord-protos-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "1cd71dfed6c3315cd9af62250c9cc50f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.0",
      "size": 13394,
      "upload_time": "2023-03-16T01:32:14",
      "upload_time_iso_8601": "2023-03-16T01:32:14.287091Z",
      "url": "https://files.pythonhosted.org/packages/3a/7c/4b9eaf1f85caa5ff93caa948ee47a2fc5be2d2bbd4b60d3f989da84c8140/discord-protos-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}