{
  "info": {
    "author": "HaaS Python",
    "author_email": "yinsuo.mys@alibaba-inc.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: Implementation :: MicroPython"
    ],
    "description": "\n## HaaS Python介绍\nHaaS Python是阿里云IoT团队最新研发的一套低代码编程框架，兼容MicroPython编程规范，依托HaaS平台软硬件积木提供AI、支付、蓝牙配网、云连接、UI等物联网场景常用的能力，从而解决了物联网应用开发难的问题。有了Python轻应用框架，物联网编程不再局限于专业软件开发人员，一般的技术员也可以快速实现复杂的物联网需求。\n更多HaaS Python介绍和开发资料见[HaaS Python官网](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.595660b1dZDX71#/?from=corp),[创意案例](https://haas.iot.aliyun.com/solution?from=crop), [硬件积木](https://haas.iot.aliyun.com/solution/hardware?from=corp)\n\nHaaS Python is a set of low-code programming frameworks newly developed by Alibaba Cloud IoT team. It is compatible with MicroPython programming specifications. It relies on the hardware and software building blocks of the HaaS platform to provide capabilities commonly used in IoT scenarios such as AI, payment, Bluetooth network configuration, cloud connection, and UI. Solve the difficult problem of IoT application development. With the Python light application framework, IoT programming is no longer limited to professional software developers, and general technicians can quickly implement complex IoT requirements.\nFor more HaaS Python introduction and development materials, see [HaaS Python official website](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.595660b1dZDX71#/?from=corp), [Creative Case](https://haas.iot.aliyun.com/solution?from=crop), [Hardware Building Blocks](https://haas.iot.aliyun.com/solution/hardware?from=corp)\n\n## 安装方法\n* 在[HaaS Python官网](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b50127119.0.0.4e1260b1ebMIf1#/)下载开发板对应的固件，并完成固件烧录\n\nDownload the firmware corresponding to the development board at [HaaS Python website](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b50127119.0.0.4e1260b1ebMIf1#/) and complete the firmware burning\n\n* 在开发板上运行以下命令完成安装和使用,如果您在使用过程中遇到问题，欢迎在[github上向我们提交issue](https://github.com/alibaba/AliOS-Things/issues)，我们的工程师会及时解答\n\nRun the following commands on the development board to complete the installation and use. If you encounter problems during use, please submit an issue to us on [github](https://github.com/alibaba/AliOS-Things/issues), Our engineers will answer in time\n```\nimport upip\nupip.install(\"haas-python-bmp280\")\nimport haas-python-bmp280\n```\n# 气压传感器 - BMP280\n\n## 一、产品简介\nBMP280是博世出品的气压传感器，它集成了压电压力传感单元、信号处理电路及模数转换器,气压值可以通过SPI或I2C读出,在室内导航、无人机、气象站等场景有广泛应用。\n\n<div align=\"center\">\n<img src=./../../docs/images/ext_bmp280_实物.png  width=50%/>\n</div>\n\n### 引脚定义\n* VCC: 3.3V\n* GND: GND\n* SCL: IIC时钟\n* SDA: IIC数据\n* CSB: 3.3V\n* SDO: GND\n## 二、技术参数\n* 供电电压:1.9~3.6V\n* 可以采用I2C或SPI通信协议（HaaS Python实现了IIC接口驱动），I2C最高传输速率可到3.4MHz，SPI最高传输速率可达10MHz，当CSB管脚接VCC时选择为IIC接口，当CSB管脚接GND时选择为SPI接口，I2C地址可配置0X76或者0x77,取决于SDO，SDO接GND时I2C地址维0x76，SDO接VCC时I2C地址为0x77\n* 气压测量范围： 300hPa至1100hPa，最大误差为±12hPa\n* 封装:8-pin LGA metal-lid，2.0mm * 2.5mm, height: 0.95mm\n* 工作温度范围: -40摄氏度 - +85摄氏度\n\n## 三、软件接口\n\nBMP280气压传感器HaaS Python驱动：[下载地址](https://github.com/alibaba/AliOS-Things/tree/master/haas_lib_bundles/python/libraries/bmp280)\n<br>\n\n### BMP280(i2cObj) - 创建BMP280驱动对象\n* 函数原型：\n> bmpObj = BMP280(i2cObj)\n\n* 参数说明:\n\n|参数|类型|必选参数？|说明|\n|-----|----|:---:|----|\n|i2cObj|I2C|是|调用此函数前需确保i2cObj对象已经处于open状态|\n\n* 返回值:\nBMP280对象成功，返回BMP280对象；BMP280对象创建失败，抛出Exception\n\n* 示例代码:\n\n```python\nfrom driver import I2C               # 驱动库\nimport bmp280                        # BMP280温湿度传感器驱动库\n\n# 初始化I2C类型的设备\ni2cObj = I2C()\ni2cObj.open(\"bmp280\")                # 按照board.json中名为\"bmp280\"的设备节点的配置参数（主设备I2C端口号，从设备地址，总线频率等）初始化I2C类型设备对象\nprint(\"bmp280 inited!\")\n\nbaroDev = bmp280.BMP280(i2cObj)  # 初始化BMP280传感器\n```\n\n* 输出:\n```log\nbmp280 inited!\n```\n\n### getPressure - 测量气压\n\n* 函数功能:\n量测气压值并返回测量结果\n\n* 函数原型:\n> BMP280.getPressure()\n\n* 参数说明:\n无\n\n* 返回值:\n成功返回温度测量结果（数据类型：浮点型；单位：Pa）；失败抛出Exception\n\n* 示例:\n\n```python\nfrom driver import I2C               # 驱动库\nimport bmp280                        # BMP280温湿度传感器驱动库\n\n# 初始化I2C类型的设备\ni2cObj = I2C()\ni2cObj.open(\"bmp280\")                # 按照board.json中名为\"bmp280\"的设备节点的配置参数（主设备I2C端口号，从设备地址，总线频率等）初始化I2C类型设备对象\n\nbaroDev = bmp280.BMP280(i2cObj)  # 初始化BMP280传感器\n\npressure = baroDev.getPressure()\nprint(\"pressure is \", pressure, \"Pa\")\n\n```\n\n* 输出:\n```log\npressure is 103000Pa\n```\n\n## 四、接口案例\n此使用实例在board.json中定义了名为bmp280的I2C类型的对象。在Python脚本中周期性的获取温湿度测量结果并打印在日志中。\n\n* 代码:\n```json\n# board.json配置：\n{\n    \"name\": \"board-name\",\n    \"version\": \"1.0.0\",\n    \"io\": {\n      \"bmp280\": {\n        \"type\": \"I2C\",\n        \"port\": 0,\n        \"addrWidth\": 7,\n        \"freq\": 400000,\n        \"mode\": \"master\",\n        \"devAddr\": 118\n      }\n    },\n    \"debugLevel\": \"ERROR\",\n    \"repl\": \"disable\"\n}\n\n```\n```python\n# Python代码\nimport utime                         # 延时API所在组件\nfrom driver import I2C               # 驱动库\nimport bmp280                        # BMP280温湿度传感器驱动库\n\n# 初始化I2C类型的设备\ni2cObj = I2C()\ni2cObj.open(\"bmp280\")                # 按照board.json中名为\"bmp280\"的设备节点的配置参数（主设备I2C端口号，从设备地址，总线频率等）初始化I2C类型设备对象\n\nbaroDev = bmp280.BMP280(i2cObj)  # 初始化BMP280传感器\n\n# 通过温湿度传感器读取温湿度信息\ndef get_pressure():\n    pressure = baroDev.getPressure()         # 获取大气压测量结果\n    print(\"The pressure is: %.1f\" % pressure)\n\n    return pressure                        # 返回读取到的大气压值\n\nif __name__ == '__main__':\n\n    while True:\n        data = get_pressure()                          # 读取温度信息和相对湿度信息\n        utime.sleep(1)                                  # 每隔1秒钟进行一次温湿度信息测量和打印\n\n    i2cObj.close()                                      # 关闭I2C设备对象\n```\n\n* 输出:\n```log\n...\nThe pressure is 103000Pa\n...\n\n```\n\n<br>\n\n## 五、通信协议\n主控芯片和 BMP280 传感器之间通信所用命令字如下表所示：\n|序号|命令字|功能说明|命令字宏定义|\n|:-:|:-:|:-|:-|\n|1|0x88|读T1校准参数|CMD_READ_DIG_T1|\n|2|0x82|读T2校准参数|CMD_READ_DIG_T2|\n|3|0x8c|读T3校准参数|CMD_READ_DIG_T3|\n|4|0x8e|读P1校准参数|CMD_READ_DIG_P1|\n|5|0x90|读P2校准参数|CMD_READ_DIG_P2|\n|6|0x92|读P3校准参数|CMD_READ_DIG_P3|\n|7|0x94|读P4校准参数|CMD_READ_DIG_P4|\n|8|0x96|读P5校准参数|CMD_READ_DIG_P5|\n|9|0x98|读P6校准参数|CMD_READ_DIG_P6|\n|10|0x9a|读P7校准参数|CMD_READ_DIG_P7|\n|11|0x9c|读P8校准参数|CMD_READ_DIG_P8|\n|12|0xFA|读取温度|CMD_READ_TEMPERATURE|\n|13|0xF7|读取大气压|CMD_READ_PRESSURE|\n\n实际控制此传感器的流程可参考如下描述。\n</br>\n\n* 一次获取数据\n```python\n通过 IIC 发送CMD_READ_DIG_T1-CMD_READ_DIG_T3获取温度校准参数并且发送CMD_READ_DIG_P1-CMD_READ_DIG_P8获取气压校准参数；\n通过 IIC 发送CMD_READ_TEMPERATURE获取温度RAW数据，通过温度校准参数计算\n得到实际摄氏度温度；\n通过 IIC 发送CMD_READ_PRESSURE获取气压RAW数据， 通过气压校准参数和温度校准\n参数数计算得到实际气压Pa；\n\n```\n\n\n## 六、工作原理\n从下图可以看到bmp280内部集成了压力传感单元，通过ADC采样输入到校正储存器。通过数字接口IIC或SPI读取数据。\n<div align=\"center\">\n<img src=./../../docs/images/ext_bmp280_工作原理.png  width=50%/>\n</div>\n\n引脚分布如下，3和4号脚是IIC总线接口的SCL和SDA管脚。\n\n<div align=\"center\">\n<img src=./../../docs/images/ext_bmp280_引脚.png  width=50%/>\n</div>\n\n典型电路如下，由于SCL和SDA为开漏输出，驱动能力不足，需要接上拉电阻。要通过IIC总线访问bmp280，CSB需要接到VDDIO。\n\n<div align=\"center\">\n<img src=./../../docs/images/ext_bmp280_apply.png  width=50%/>\n</div>\n\n\n## 参考文献及购买链接\n[1] [BMP280气压传感器](https://www.sekorm.com/doc/3095173.html)<br>\n[2] [购买链接](https://detail.tmall.com/item.htm?id=543204451587)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://haas.iot.aliyun.com/?from=corp",
    "keywords": "",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "haas-python-bmp280",
    "package_url": "https://pypi.org/project/haas-python-bmp280/",
    "platform": null,
    "project_url": "https://pypi.org/project/haas-python-bmp280/",
    "project_urls": {
      "Bug Tracker": "https://github.com/alibaba/AliOS-Things/issues",
      "Documentation": "https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.81b460b1lzwYKw#/?from=corp",
      "Homepage": "https://haas.iot.aliyun.com/?from=corp",
      "Source Code": "https://github.com/alibaba/AliOS-Things"
    },
    "release_url": "https://pypi.org/project/haas-python-bmp280/0.0.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "This is bmp280 driver for HaaS Python. HaaS Python is forked from micropython.",
    "version": "0.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14193977,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45063c27f3c58d7533c40dcfbc5a78b3cc4936f20bec7729ae8c0c92e45938ce",
          "md5": "b846ac69581a3592215f2ebca4963406",
          "sha256": "44c261dcaca012bcf8920117509f0791f0460af951a05aefa1a0a8c43db2bad7"
        },
        "downloads": -1,
        "filename": "haas-python-bmp280-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b846ac69581a3592215f2ebca4963406",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10120,
        "upload_time": "2022-06-06T12:45:23",
        "upload_time_iso_8601": "2022-06-06T12:45:23.459185Z",
        "url": "https://files.pythonhosted.org/packages/45/06/3c27f3c58d7533c40dcfbc5a78b3cc4936f20bec7729ae8c0c92e45938ce/haas-python-bmp280-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "868bb4835ec096c10e32e3cded85bc143aaa6607550c6705366239349d694c9d",
          "md5": "f8452b986f3b742204531df617e839de",
          "sha256": "1b90b7efe08d5386a4ad040bfb670e739f836ec198401402cc4b355e7a3f43a4"
        },
        "downloads": -1,
        "filename": "haas-python-bmp280-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f8452b986f3b742204531df617e839de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10128,
        "upload_time": "2022-06-07T08:38:53",
        "upload_time_iso_8601": "2022-06-07T08:38:53.922493Z",
        "url": "https://files.pythonhosted.org/packages/86/8b/b4835ec096c10e32e3cded85bc143aaa6607550c6705366239349d694c9d/haas-python-bmp280-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cde0c24e416309f1be680f5b3ec1c314a7f027bb81aed10aed73251dc1b5180",
          "md5": "1399b1ea844570a138e85ddf040125fd",
          "sha256": "19d05c35a96f4e94dd75d23e01dcace8bfb197c118dcd55bd94d9fe1c68eede1"
        },
        "downloads": -1,
        "filename": "haas-python-bmp280-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1399b1ea844570a138e85ddf040125fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10127,
        "upload_time": "2022-06-08T03:50:30",
        "upload_time_iso_8601": "2022-06-08T03:50:30.006807Z",
        "url": "https://files.pythonhosted.org/packages/8c/de/0c24e416309f1be680f5b3ec1c314a7f027bb81aed10aed73251dc1b5180/haas-python-bmp280-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15c8243a63fe61d3ff4cce24f30814cc6c9caea16f9926dfcc07325b81967e01",
          "md5": "6c284d1c4e3cb86ca8561b275de16e1a",
          "sha256": "6017d96aa7e27c6a53fded13292da45096bf10ea5d10d052145122c7fc1faf82"
        },
        "downloads": -1,
        "filename": "haas-python-bmp280-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6c284d1c4e3cb86ca8561b275de16e1a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10127,
        "upload_time": "2022-06-09T08:43:41",
        "upload_time_iso_8601": "2022-06-09T08:43:41.522099Z",
        "url": "https://files.pythonhosted.org/packages/15/c8/243a63fe61d3ff4cce24f30814cc6c9caea16f9926dfcc07325b81967e01/haas-python-bmp280-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c973a92a7c8728b222d81582081456d1857b71b73d0d172da5b94edc228c7b3",
          "md5": "9717c5e6b7c5a530cb6a5d2fb2488386",
          "sha256": "32ccd507140aa7774a6562a13d417626f8eb96a69b5ba4b706be2399cdd88ee3"
        },
        "downloads": -1,
        "filename": "haas-python-bmp280-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "9717c5e6b7c5a530cb6a5d2fb2488386",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10128,
        "upload_time": "2022-06-14T02:05:59",
        "upload_time_iso_8601": "2022-06-14T02:05:59.881022Z",
        "url": "https://files.pythonhosted.org/packages/5c/97/3a92a7c8728b222d81582081456d1857b71b73d0d172da5b94edc228c7b3/haas-python-bmp280-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ecb499a0ad5d9662fcbfa67b9a280fa82d6fbc11855eac7e1104d85dfbd09db",
          "md5": "fde1b389ae4ebfb9fb501c5c7b693bc3",
          "sha256": "39bb58da2f34ab981cd46dd3ffbefc2142335d0d71e6c6dfb849e29d457aec38"
        },
        "downloads": -1,
        "filename": "haas-python-bmp280-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "fde1b389ae4ebfb9fb501c5c7b693bc3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10127,
        "upload_time": "2022-06-15T02:24:37",
        "upload_time_iso_8601": "2022-06-15T02:24:37.395000Z",
        "url": "https://files.pythonhosted.org/packages/3e/cb/499a0ad5d9662fcbfa67b9a280fa82d6fbc11855eac7e1104d85dfbd09db/haas-python-bmp280-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd69a5faa96a2572e8f9f723bf080bfc9d6de8dc0f780365325f324999fb4e71",
          "md5": "3323bb598af3d0b6939ed0adf9334cfc",
          "sha256": "0b8cf48bfab75bc24c7e06b6a0484996878cafff322bacec9825a4d5a801f96f"
        },
        "downloads": -1,
        "filename": "haas-python-bmp280-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "3323bb598af3d0b6939ed0adf9334cfc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10128,
        "upload_time": "2022-06-17T09:13:37",
        "upload_time_iso_8601": "2022-06-17T09:13:37.812538Z",
        "url": "https://files.pythonhosted.org/packages/bd/69/a5faa96a2572e8f9f723bf080bfc9d6de8dc0f780365325f324999fb4e71/haas-python-bmp280-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e65005a79c76f5d9f6c85bda93e8b3b7c60f7802b760d64513517576d09bf84",
          "md5": "717aa2965208fa8a0875582fb1c262b2",
          "sha256": "1ff22dae033235a6c9fea2cad157d8a464fc2ef66e571d2caa4b534280f1f178"
        },
        "downloads": -1,
        "filename": "haas-python-bmp280-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "717aa2965208fa8a0875582fb1c262b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10126,
        "upload_time": "2022-06-21T01:31:40",
        "upload_time_iso_8601": "2022-06-21T01:31:40.095996Z",
        "url": "https://files.pythonhosted.org/packages/3e/65/005a79c76f5d9f6c85bda93e8b3b7c60f7802b760d64513517576d09bf84/haas-python-bmp280-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3e65005a79c76f5d9f6c85bda93e8b3b7c60f7802b760d64513517576d09bf84",
        "md5": "717aa2965208fa8a0875582fb1c262b2",
        "sha256": "1ff22dae033235a6c9fea2cad157d8a464fc2ef66e571d2caa4b534280f1f178"
      },
      "downloads": -1,
      "filename": "haas-python-bmp280-0.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "717aa2965208fa8a0875582fb1c262b2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10126,
      "upload_time": "2022-06-21T01:31:40",
      "upload_time_iso_8601": "2022-06-21T01:31:40.095996Z",
      "url": "https://files.pythonhosted.org/packages/3e/65/005a79c76f5d9f6c85bda93e8b3b7c60f7802b760d64513517576d09bf84/haas-python-bmp280-0.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}