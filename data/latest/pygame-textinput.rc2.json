{
  "info": {
    "author": "Silas Gyger",
    "author_email": "silasgyger@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Pygame Text Input Module\n\nThis module provides two utility classes that simplify entering text using pygame. The classes are:\n* `TextInputVisualizer` which can be used to both manage and draw text input. Simply pass all events returned by `pygame.event.get()` to it every frame, and blit its `surface` attribute on the screen.\n*  `TextInputManager` that can be used to just manage inputted text, with no visual aspect. Used by `TextInputVisualizer` behind the scenes.\n\n\n\n![Example of module in use](https://i.imgur.com/h7a64Y2.gif)\n\n# Installation\n\nSimplest way is using pypi:\n\n```\npython3 -m pip install pygame-textinput\n```\n\n# Usage\n\n## Visualizer\n\nThe easiest way is to `TextInputVisualizer` without any arguments. Then, feed all `pygame` events to its `update` method every frame, and blit it's `surface` property to the screen. Here's a minimal example:\n\n\n\n```python\nimport pygame_textinput\nimport pygame\npygame.init()\n\n# Create TextInput-object\ntextinput = pygame_textinput.TextInputVisualizer()\n\nscreen = pygame.display.set_mode((1000, 200))\nclock = pygame.time.Clock()\n\nwhile True:\n    screen.fill((225, 225, 225))\n\n    events = pygame.event.get()\n    for event in events:\n        if event.type == pygame.QUIT:\n            exit()\n\n    # Feed it with events every frame\n    textinput.update(events)\n    # Blit its surface onto the screen\n    screen.blit(textinput.surface, (10, 10))\n\n    pygame.display.update()\n    clock.tick(30)\n```\n### Notes on the newer version:\n* You have to watch for \"return\" presses by the user yourself, e.g. like this:\n\n```python\nif [ev for ev in events if ev.type == pygame.KEYDOWN and ev.key == pygame.K_RETURN]:\n    print(\"Oooweee\")\n```\n\n* Contrary to the old version, key-stroke repeats are not manually introduced anymore, since they can now be enabled within `pygame` directly:\n\n```python\npygame.key.set_repeat(200, 25) # press every 50 ms after waiting 200 ms\n```\n\n\nThis new version has also been optimized such that you can **modify any fields on the fly** and the actual surface will only re-render if you access it using `textinput.surface` - and only if you actually modified any values.\n\n\n## Arguments / Fields:\nAll these values can be both specified as arguments to the constructor and modified at later time by setting them as attributes (e.g. `textinput.font_color = (255, 0, 0)`). The surface itself will only re-render once it is accessed via `textinput.surface`. \n\nArgument | Description\n---|---\nmanager | The `TextInputManager` used to manage the input\nfont_object | The `pygame.font.Font` object used for rendering\nantialias |  whether to render the font antialiased or not\nfont_color | color of font rendered\ncursor_blink_interval | The interval of the cursor blinking, in ms\ncursor_width | The width of the cursor, in pixels\ncursor_color | The color of the cursor\n\n# Manager\n\nIf you prefer to draw the text on the screen yourself, you can use `TextInputManager` to only manage the string that has been typed so far.\n\nLike `TextInputVisualizer`, you feed its `update` method all events received by `pygame.event.get()` which you want it to process. `TextInputVisualizer` does this for you inside its `update` method if you pass it a `TextInputManager`.\n\n## Arguments:\nArgument | Description\n---|---\ninitial | The initial value (text)\nvalidator | A function taking a `string` and returning a `bool`. Every time the input value is modified, this function is called; if the function returns `True`, the input is accepted, otherwise it is ignored.\n\nSo say you want to only allow input to up to 5 letters, you could do that with\n\n```python\nmanager = TextInputManager(validator=lambda input: len(input) <= 5)\n```\n\n## Fields\nField | Description\n---|---\nvalue | The inserted value so far. When change, `cursor_pos` is kept as far as possible.\ncursor_pos | The position of the cursor. `0` is before the first character, `len(manager.value)` the position after the last. Values outside this range are clamped.\n\n\n# Example\n\nHere's an example that shows most features:\n\n```python\nimport pygame\nimport pygame.locals as pl\n\npygame.init()\n\n# No arguments needed to get started\ntextinput = TextInputVisualizer()\n\n# But more customization possible: Pass your own font object\nfont = pygame.font.SysFont(\"Consolas\", 55)\n# Create own manager with custom input validator\nmanager = TextInputManager(validator = lambda input: len(input) <= 5)\n# Pass these to constructor\ntextinput_custom = TextInputVisualizer(manager=manager, font_object=font)\n# Other customizations:\ntextinput_custom.cursor_width = 4\ntextinput_custom.cursor_blink_interval = 400 # blinking interval in ms\ntextinput_custom.antialias = False\ntextinput_custom.font_color = (0, 85, 170)\n\nscreen = pygame.display.set_mode((1000, 200))\nclock = pygame.time.Clock()\n\n# Pygame now allows natively to enable key repeat:\npygame.key.set_repeat(200, 25)\n\nwhile True:\n    screen.fill((225, 225, 225))\n\n    events = pygame.event.get()\n    for event in events:\n        if event.type == pygame.QUIT:\n            exit()\n\n    # Feed it with events every frame\n    textinput.update(events)\n    textinput_custom.update(events)\n\n    # Get its surface to blit onto the screen\n    screen.blit(textinput.surface, (10, 10))\n    screen.blit(textinput_custom.surface, (10, 50))\n\n    # Modify attributes on the fly - the surface is only rerendered when .surface is accessed & if values changed\n    textinput_custom.font_color = [(c+10)%255 for c in textinput_custom.font_color]\n\n    # Check if user pressed return\n    if [ev for ev in events if ev.type == pygame.KEYDOWN and ev.key == pygame.K_RETURN]:\n        print(f\"User pressed enter! Input so far: {textinput.value}\")\n\n    pygame.display.update()\n    clock.tick(30)\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Nearoo/pygame-text-input",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pygame-textinput",
    "package_url": "https://pypi.org/project/pygame-textinput/",
    "platform": "",
    "project_url": "https://pypi.org/project/pygame-textinput/",
    "project_urls": {
      "Homepage": "https://github.com/Nearoo/pygame-text-input"
    },
    "release_url": "https://pypi.org/project/pygame-textinput/1.0.1/",
    "requires_dist": [
      "pygame"
    ],
    "requires_python": "",
    "summary": "Enter text using pygame",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11507143,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c45ba455f170d6d90cacced7dbe5a46177be01ca482fe1c625e8983ea2f724a",
          "md5": "af18c3e8d799eebfbf3cec638e8fc5bd",
          "sha256": "92672aa0a9edbb6e401a18d9d6ef9d7dbd6b8fb13d97e2713ce1404f66e0f188"
        },
        "downloads": -1,
        "filename": "pygame_textinput-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af18c3e8d799eebfbf3cec638e8fc5bd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7895,
        "upload_time": "2021-09-11T22:11:00",
        "upload_time_iso_8601": "2021-09-11T22:11:00.041208Z",
        "url": "https://files.pythonhosted.org/packages/6c/45/ba455f170d6d90cacced7dbe5a46177be01ca482fe1c625e8983ea2f724a/pygame_textinput-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33981a82779fc186241dff5475aea71fdfdb6759b6a74fcf19fc61daa9afe476",
          "md5": "81e2ed8ae1ad19869328e37ba25dae7d",
          "sha256": "de38d08ee099910b1497c4e46ed296d54055184b69280546f60924b6c7da0fce"
        },
        "downloads": -1,
        "filename": "pygame-textinput-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "81e2ed8ae1ad19869328e37ba25dae7d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6576,
        "upload_time": "2021-09-11T22:11:01",
        "upload_time_iso_8601": "2021-09-11T22:11:01.368884Z",
        "url": "https://files.pythonhosted.org/packages/33/98/1a82779fc186241dff5475aea71fdfdb6759b6a74fcf19fc61daa9afe476/pygame-textinput-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82aaee16c4eea5ced8ea444aa37bf7106588f0d33a0ef75a8766bfad0b0448af",
          "md5": "686ab7de5e402c4f46c4db41e382b4cc",
          "sha256": "0aea142473c5651f87cb08a1af41a77137a89688aa4dae2677603da7565cff36"
        },
        "downloads": -1,
        "filename": "pygame_textinput-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "686ab7de5e402c4f46c4db41e382b4cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7902,
        "upload_time": "2021-09-21T13:29:07",
        "upload_time_iso_8601": "2021-09-21T13:29:07.272578Z",
        "url": "https://files.pythonhosted.org/packages/82/aa/ee16c4eea5ced8ea444aa37bf7106588f0d33a0ef75a8766bfad0b0448af/pygame_textinput-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0379cda2841983f40e56fa19edad0443453e2ae9b9d9d6449fbb1bcc13e6b761",
          "md5": "2c17499bef35b0f27bb2f40c3bda9743",
          "sha256": "31efab5b171c179553ebc226ba3e639802be3b6d7b224f01fe3b6064effe5a5d"
        },
        "downloads": -1,
        "filename": "pygame-textinput-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2c17499bef35b0f27bb2f40c3bda9743",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6585,
        "upload_time": "2021-09-21T13:29:10",
        "upload_time_iso_8601": "2021-09-21T13:29:10.487003Z",
        "url": "https://files.pythonhosted.org/packages/03/79/cda2841983f40e56fa19edad0443453e2ae9b9d9d6449fbb1bcc13e6b761/pygame-textinput-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82aaee16c4eea5ced8ea444aa37bf7106588f0d33a0ef75a8766bfad0b0448af",
        "md5": "686ab7de5e402c4f46c4db41e382b4cc",
        "sha256": "0aea142473c5651f87cb08a1af41a77137a89688aa4dae2677603da7565cff36"
      },
      "downloads": -1,
      "filename": "pygame_textinput-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "686ab7de5e402c4f46c4db41e382b4cc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7902,
      "upload_time": "2021-09-21T13:29:07",
      "upload_time_iso_8601": "2021-09-21T13:29:07.272578Z",
      "url": "https://files.pythonhosted.org/packages/82/aa/ee16c4eea5ced8ea444aa37bf7106588f0d33a0ef75a8766bfad0b0448af/pygame_textinput-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0379cda2841983f40e56fa19edad0443453e2ae9b9d9d6449fbb1bcc13e6b761",
        "md5": "2c17499bef35b0f27bb2f40c3bda9743",
        "sha256": "31efab5b171c179553ebc226ba3e639802be3b6d7b224f01fe3b6064effe5a5d"
      },
      "downloads": -1,
      "filename": "pygame-textinput-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2c17499bef35b0f27bb2f40c3bda9743",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6585,
      "upload_time": "2021-09-21T13:29:10",
      "upload_time_iso_8601": "2021-09-21T13:29:10.487003Z",
      "url": "https://files.pythonhosted.org/packages/03/79/cda2841983f40e56fa19edad0443453e2ae9b9d9d6449fbb1bcc13e6b761/pygame-textinput-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}