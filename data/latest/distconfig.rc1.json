{
  "info": {
    "author": "Mouad Benchchaoui",
    "author_email": "mouad.benchchaoui@deliveryhero.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Internet",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": ".. image:: https://travis-ci.org/deliveryhero/distconfig.svg?branch=master\n  :target: https://travis-ci.org/deliveryhero/distconfig\n\n.. image:: https://readthedocs.org/projects/distconfig/badge/?version=latest\n  :target: https://readthedocs.org/projects/distconfig/?badge=latest\n  :alt: Documentation Status\n\ndistconfig\n==========\n\nLibrary to manage distributed configuration using either `ZooKeeper <https://zookeeper.apache.org/>`_ or\n`Etcd <https://github.com/coreos/etcd>`_ or `Consul <http://www.consul.io/>`_.\n\nRational\n--------\n\nWhen you have to manage configuration of a given services that are distributed across nodes, you may want\nto consider using either one of the distributed configuration managers e.g. zookeeper, etcd, consul ..., this\nlibrary goal is to give developers an easy access to configuration stored in the previous backends.\n\nInstallation:\n-------------\n\nTo use **ZooKeeper** as backend you should install ``distconfig`` using ::\n\n    $ pip install distconfig[zookeeper]\n\nwith **etcd**::\n\n    $ pip install distconfig[etcd]\n\nwith **consul**::\n\n    $ pip install distconfig[consul]\n\nUsage:\n------\n\nExample using zookeeper as a backend ::\n\n    from kazoo import client\n\n    from distconfig import Proxy\n\n    client = client.KazooClient()\n    # The user must call ``KazooClient.start()`` before using this particular\n    # backend\n    client.start()\n\n    proxy = Proxy.configure(\n        'distconfig.backends.zookeeper.ZooKeeperBackend',\n        client=client,\n    )\n\n    # config is a read only mapping-like object.\n    config = proxy.get_config('/distconfig/service_name/config')\n\n    print config['key']\n\n    # Getting nested values works by supplying key seperated by '/' char.\n    print config['key/inner']\n\n    # You can assert key value type by using typed get function e.g.\n    # get_int, get_float, get_unicode, get_bytes ... .\n    print config.get_int('key/inner/int_key')\n\n    # Getting a inner config.\n    print config.get_config('key/inner/dict_key')\n\n\nDevelopment:\n------------\n\nStart by installing dependencies ::\n\n    $ pip install -r requirements/dev.txt requirements/base.txt\n\nTo run unit test use tox ::\n\n    $ tox\n\nTo run integration test, we recommend you to install `docker <https://www.docker.com/>`_ and then run ::\n\n    $ ./run-tests.sh\n\nThe above script will setup docker container for each of the backend\nand run the integration tests on them.\n\n\nTODO:\n-----\n\n- Add file as a backend (use https://pypi.python.org/pypi/watchdog)",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/deliveryhero/distconfig/",
    "keywords": "Configuration management zookeeper etcd consul",
    "license": "Apache License, Version 2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "distconfig",
    "package_url": "https://pypi.org/project/distconfig/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/distconfig/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/deliveryhero/distconfig/"
    },
    "release_url": "https://pypi.org/project/distconfig/0.1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Library to manage configuration using Zookeeper, Etcd, Consul",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1504503,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79c90382bb4247429e9bc1952318be4ab8a293328b830bc0fc64a2e83380d46a",
          "md5": "f9a92c91cb21faa256af8de65e2db1d6",
          "sha256": "9fa636bd561cc9dd1c76817f42ccff6a663e19e4a53dfe7ca11cbfc44e9f3416"
        },
        "downloads": -1,
        "filename": "distconfig-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f9a92c91cb21faa256af8de65e2db1d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10474,
        "upload_time": "2015-04-14T08:39:54",
        "upload_time_iso_8601": "2015-04-14T08:39:54.800870Z",
        "url": "https://files.pythonhosted.org/packages/79/c9/0382bb4247429e9bc1952318be4ab8a293328b830bc0fc64a2e83380d46a/distconfig-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "79c90382bb4247429e9bc1952318be4ab8a293328b830bc0fc64a2e83380d46a",
        "md5": "f9a92c91cb21faa256af8de65e2db1d6",
        "sha256": "9fa636bd561cc9dd1c76817f42ccff6a663e19e4a53dfe7ca11cbfc44e9f3416"
      },
      "downloads": -1,
      "filename": "distconfig-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f9a92c91cb21faa256af8de65e2db1d6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10474,
      "upload_time": "2015-04-14T08:39:54",
      "upload_time_iso_8601": "2015-04-14T08:39:54.800870Z",
      "url": "https://files.pythonhosted.org/packages/79/c9/0382bb4247429e9bc1952318be4ab8a293328b830bc0fc64a2e83380d46a/distconfig-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}