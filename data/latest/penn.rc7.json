{
  "info": {
    "author": "Max Morrison, Caedon Hsieh, Nathan Pruyne, and Bryan Pardo",
    "author_email": "interactiveaudiolab@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License"
    ],
    "description": "<h1 align=\"center\">Pitch-Estimating Neural Networks (PENN)</h1>\n<div align=\"center\">\n\n[![PyPI](https://img.shields.io/pypi/v/penn.svg)](https://pypi.python.org/pypi/penn)\n[![License](https://img.shields.io/badge/License-MIT-blue.svg)](https://opensource.org/licenses/MIT)\n[![Downloads](https://pepy.tech/badge/penn)](https://pepy.tech/project/penn)\n\n</div>\n\nTraining, evaluation, and inference of neural pitch and periodicity estimators in PyTorch. Includes the original code for the paper [\"Cross-domain Neural Pitch and Periodicity Estimation\"](https://arxiv.org/abs/2301.12258).\n\n\n## Table of contents\n\n- [Installation](#installation)\n- [Inference](#inference)\n    * [Application programming interface](#application-programming-interface)\n        * [`penn.from_audio`](#pennfrom_audio)\n        * [`penn.from_file`](#pennfrom_file)\n        * [`penn.from_file_to_file`](#pennfrom_file_to_file)\n        * [`penn.from_files_to_files`](#pennfrom_files_to_files)\n    * [Command-line interface](#command-line-interface)\n- [Training](#training)\n    * [Download](#download)\n    * [Preprocess](#preprocess)\n    * [Partition](#partition)\n    * [Train](#train)\n    * [Monitor](#monitor)\n- [Evaluation](#evaluation)\n    * [Evaluate](#evaluate)\n    * [Plot](#plot)\n- [Citation](#citation)\n\n\n## Installation\n\nIf you want to perform pitch estimation using a pretrained FCNF0++ model, run\n`pip install penn`\n\nIf you want to train or use your own models, clone this repo and run\n`pip install -r requirements.txt`\n\n\n## Inference\n\nPerform inference using FCNF0++\n\n```\nimport penn\n\n# Load audio at the correct sample rate\naudio = penn.load.audio('test/assets/gershwin.wav')\n\n# Here we'll use a 10 millisecond hopsize\nhopsize = .01\n\n# Provide a sensible frequency range given your domain and model\nfmin = 30.\nfmax = 1000.\n\n# Choose a gpu index to use for inference. Set to None to use cpu.\ngpu = 0\n\n# If you are using a gpu, pick a batch size that doesn't cause memory errors\n# on your gpu\nbatch_size = 2048\n\n# Select a checkpoint to use for inference. The default checkpoint will\n# download and use FCNF0++ pretrained on MDB-stem-synth and PTDB\ncheckpoint = penn.DEFAULT_CHECKPOINT\n\n# Centers frames at hopsize / 2, 3 * hopsize / 2, 5 * hopsize / 2, ...\npad = True\n\n# (Optional) Linearly interpolate unvoiced regions below periodicity threshold\ninterp_unvoiced_at = .065\n\n# Infer pitch and periodicity\npitch, periodicity = penn.from_audio(\n    audio,\n    penn.SAMPLE_RATE,\n    hopsize=hopsize,\n    fmin=fmin,\n    fmax=fmax,\n    checkpoint=checkpoint,\n    batch_size=batch_size,\n    pad=pad,\n    interp_unvoiced_at=interp_unvoiced_at,\n    gpu=gpu)\n```\n\n\n### Application programming interface\n\n#### `penn.from_audio`\n\n```\n\"\"\"Perform pitch and periodicity estimation\n\nArgs:\n    audio: The audio to extract pitch and periodicity from\n    sample_rate: The audio sample rate\n    hopsize: The hopsize in seconds\n    fmin: The minimum allowable frequency in Hz\n    fmax: The maximum allowable frequency in Hz\n    checkpoint: The checkpoint file\n    batch_size: The number of frames per batch\n    pad: If true, centers frames at hopsize / 2, 3 * hopsize / 2, 5 * ...\n    interp_unvoiced_at: Specifies voicing threshold for interpolation\n    gpu: The index of the gpu to run inference on\n\nReturns:\n    pitch: torch.tensor(\n        shape=(1, int(samples // penn.seconds_to_sample(hopsize))))\n    periodicity: torch.tensor(\n        shape=(1, int(samples // penn.seconds_to_sample(hopsize))))\n\"\"\"\n```\n\n\n#### `penn.from_file`\n\n```\n\"\"\"Perform pitch and periodicity estimation from audio on disk\n\nArgs:\n    file: The audio file\n    hopsize: The hopsize in seconds\n    fmin: The minimum allowable frequency in Hz\n    fmax: The maximum allowable frequency in Hz\n    checkpoint: The checkpoint file\n    batch_size: The number of frames per batch\n    pad: If true, centers frames at hopsize / 2, 3 * hopsize / 2, 5 * ...\n    interp_unvoiced_at: Specifies voicing threshold for interpolation\n    gpu: The index of the gpu to run inference on\n\nReturns:\n    pitch: torch.tensor(shape=(1, int(samples // hopsize)))\n    periodicity: torch.tensor(shape=(1, int(samples // hopsize)))\n\"\"\"\n```\n\n\n#### `penn.from_file_to_file`\n\n```\n\"\"\"Perform pitch and periodicity estimation from audio on disk and save\n\nArgs:\n    file: The audio file\n    output_prefix: The file to save pitch and periodicity without extension\n    hopsize: The hopsize in seconds\n    fmin: The minimum allowable frequency in Hz\n    fmax: The maximum allowable frequency in Hz\n    checkpoint: The checkpoint file\n    batch_size: The number of frames per batch\n    pad: If true, centers frames at hopsize / 2, 3 * hopsize / 2, 5 * ...\n    interp_unvoiced_at: Specifies voicing threshold for interpolation\n    gpu: The index of the gpu to run inference on\n\"\"\"\n```\n\n\n#### `penn.from_files_to_files`\n\n```\n\"\"\"Perform pitch and periodicity estimation from files on disk and save\n\nArgs:\n    files: The audio files\n    output_prefixes: Files to save pitch and periodicity without extension\n    hopsize: The hopsize in seconds\n    fmin: The minimum allowable frequency in Hz\n    fmax: The maximum allowable frequency in Hz\n    checkpoint: The checkpoint file\n    batch_size: The number of frames per batch\n    pad: If true, centers frames at hopsize / 2, 3 * hopsize / 2, 5 * ...\n    interp_unvoiced_at: Specifies voicing threshold for interpolation\n    gpu: The index of the gpu to run inference on\n\"\"\"\n```\n\n\n### Command-line interface\n\n```\npython -m penn\n    --audio_files AUDIO_FILES [AUDIO_FILES ...]\n    [-h]\n    [--config CONFIG]\n    [--output_prefixes OUTPUT_PREFIXES [OUTPUT_PREFIXES ...]]\n    [--hopsize HOPSIZE]\n    [--fmin FMIN]\n    [--fmax FMAX]\n    [--checkpoint CHECKPOINT]\n    [--batch_size BATCH_SIZE]\n    [--pad]\n    [--interp_unvoiced_at INTERP_UNVOICED_AT]\n    [--gpu GPU]\n\nrequired arguments:\n    --audio_files AUDIO_FILES [AUDIO_FILES ...]\n        The audio files to process\n\noptional arguments:\n    -h, --help\n        show this help message and exit\n    --config CONFIG\n        The configuration file. Defaults to using FCNF0++.\n    --output_prefixes OUTPUT_PREFIXES [OUTPUT_PREFIXES ...]\n        The files to save pitch and periodicity without extension.\n        Defaults to audio_files without extensions.\n    --hopsize HOPSIZE\n        The hopsize in seconds. Defaults to 0.01 seconds.\n    --fmin FMIN\n        The minimum frequency allowed in Hz. Defaults to 31.0 Hz.\n    --fmax FMAX\n        The maximum frequency allowed in Hz. Defaults to 1984.0 Hz.\n    --checkpoint CHECKPOINT\n        The model checkpoint file. Defaults to ./penn/assets/checkpoints/fcnf0++.pt.\n    --batch_size BATCH_SIZE\n        The number of frames per batch. Defaults to 2048.\n    --pad\n        If true, centers frames at hopsize / 2, 3 * hopsize / 2, 5 * ...\n  --interp_unvoiced_at INTERP_UNVOICED_AT\n        Specifies voicing threshold for interpolation. Defaults to 0.1625.\n    --gpu GPU\n        The index of the gpu to perform inference on. Defaults to CPU.\n```\n\n\n## Training\n\n### Download\n\n`python -m penn.data.download`\n\nDownloads and uncompresses the `mdb` and `ptdb` datasets used for training.\n\n\n### Preprocess\n\n`python -m penn.data.preprocess --config <config>`\n\nConverts each dataset to a common format on disk ready for training. You\ncan optionally pass a configuration file to override the default configuration.\n\n\n### Partition\n\n`python -m penn.partition`\n\nGenerates `train`, `valid`, and `test` partitions for `mdb` and `ptdb`.\nPartitioning is deterministic given the same random seed. You do not need to\nrun this step, as the original partitions are saved in\n`penn/assets/partitions`.\n\n\n### Train\n\n`python -m penn.train --config <config> --gpus <gpus>`\n\nTrains a model according to a given configuration on the `mdb` and `ptdb`\ndatasets. Uses a list of GPU indices as an argument, and uses distributed\ndata parallelism (DDP) if more than one index is given. For example,\n`--gpus 0 3` will train using DDP on GPUs `0` and `3`.\n\n\n### Monitor\n\nRun `tensorboard --logdir runs/`. If you are running training remotely, you\nmust create a SSH connection with port forwarding to view Tensorboard.\nThis can be done with `ssh -L 6006:localhost:6006 <user>@<server-ip-address>`.\nThen, open `localhost:6006` in your browser.\n\n\n## Evaluation\n\n### Evaluate\n\n```\npython -m penn.evaluate \\\n    --config <config> \\\n    --checkpoint <checkpoint> \\\n    --gpu <gpu>\n```\n\nEvaluate a model. `<checkpoint>` is the checkpoint file to evaluate and `<gpu>`\nis the GPU index.\n\n\n### Plot\n\n```\npython -m penn.plot.density \\\n    --config <config> \\\n    --true_datasets <true_datasets> \\\n    --inference_datasets <inference_datasets> \\\n    --output_file <output_file> \\\n    --checkpoint <checkpoint> \\\n    --gpu <gpu>\n```\n\nPlot the data distribution and inferred distribution for a given dataset and\nsave to a jpg file.\n\n```\npython -m penn.plot.logits \\\n    --config <config> \\\n    --audio_file <audio_file> \\\n    --output_file <output_file> \\\n    --checkpoint <checkpoint> \\\n    --gpu <gpu>\n```\n\nPlot the pitch posteriorgram of an audio file and save to a jpg file.\n\n```\npython -m penn.plot.thresholds \\\n    --names <names> \\\n    --evaluations <evaluations> \\\n    --output_file <output_file>\n```\n\nPlot the periodicity performance (voiced/unvoiced F1) over mdb and ptdb as a\nfunction of the voiced/unvoiced threshold. `names` are the plot labels to give\neach evaluation. `evaluations` are the names of the evaluations to plot.\n\n\n## Citation\n\n### IEEE\nM. Morrison, C. Hsieh, N. Pruyne, and B. Pardo, \"Cross-domain Neural Pitch and Periodicity Estimation,\" Submitted to IEEE Transactions on Audio, Speech, and Language Processing, <TODO - month> 2023.\n\n\n### BibTex\n\n```\n@inproceedings{morrison2023cross,\n    title={Cross-domain Neural Pitch and Periodicity Estimation},\n    author={Morrison, Max and Hsieh, Caedon and Pruyne, Nathan and Pardo, Bryan},\n    booktitle={Submitted to IEEE Transactions on Audio, Speech, and Language Processing},\n    month={TODO},\n    year={2023}\n}\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/interactiveaudiolab/penn",
    "keywords": "audio,frequency,music,periodicity,pitch,speech",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "penn",
    "package_url": "https://pypi.org/project/penn/",
    "platform": null,
    "project_url": "https://pypi.org/project/penn/",
    "project_urls": {
      "Homepage": "https://github.com/interactiveaudiolab/penn"
    },
    "release_url": "https://pypi.org/project/penn/0.0.6/",
    "requires_dist": [
      "huggingface-hub",
      "numpy",
      "tensorboard",
      "torch",
      "tqdm",
      "torchaudio",
      "yapecs"
    ],
    "requires_python": "",
    "summary": "Pitch Estimating Neural Networks (PENN)",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16746917,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad41fb37904b579280a6b3f7f7a4231cfa0259446a1328e9c95114e106ad9c39",
          "md5": "c218d0c8d3d083652ef8534babd8fedb",
          "sha256": "c23c4047d0210e862d7dc56853027ac742c44a14c4ae82c48a96523aba00dea3"
        },
        "downloads": -1,
        "filename": "penn-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c218d0c8d3d083652ef8534babd8fedb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4140,
        "upload_time": "2022-12-19T18:24:55",
        "upload_time_iso_8601": "2022-12-19T18:24:55.675810Z",
        "url": "https://files.pythonhosted.org/packages/ad/41/fb37904b579280a6b3f7f7a4231cfa0259446a1328e9c95114e106ad9c39/penn-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e0ae35cb49b0796c89aa871da88a82514a9c5fe979f414e33674e4cdf37e20d",
          "md5": "34ef072f6dad40882066636db88bb518",
          "sha256": "6b32f1383b7f80a28b931bec107e0a2141c819513cec5af0912faba8ac76fa1b"
        },
        "downloads": -1,
        "filename": "penn-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "34ef072f6dad40882066636db88bb518",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4424,
        "upload_time": "2022-12-19T18:24:57",
        "upload_time_iso_8601": "2022-12-19T18:24:57.301966Z",
        "url": "https://files.pythonhosted.org/packages/9e/0a/e35cb49b0796c89aa871da88a82514a9c5fe979f414e33674e4cdf37e20d/penn-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "143bc042571b3fdc81e8d5626a79f1374215afd3a2aaf3b70fa39db5a77cde31",
          "md5": "f7288c86fd4655f406fd2f21e3933022",
          "sha256": "880db3a4e9fdb465933e5e179ccfa335b241ae663e3368785af262ec24b6d35d"
        },
        "downloads": -1,
        "filename": "penn-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7288c86fd4655f406fd2f21e3933022",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 62744,
        "upload_time": "2023-01-28T17:50:43",
        "upload_time_iso_8601": "2023-01-28T17:50:43.028424Z",
        "url": "https://files.pythonhosted.org/packages/14/3b/c042571b3fdc81e8d5626a79f1374215afd3a2aaf3b70fa39db5a77cde31/penn-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f211a054377ac81f56ec05594c06127e6f75d5681f34d1fc8730ffa63793afe7",
          "md5": "6653efcbdd2f039fb1e7e756a7350e2a",
          "sha256": "1eb363c7cf06efc21ce539b24f20b866c02b51f89769a2b7a015b880d77ca4f2"
        },
        "downloads": -1,
        "filename": "penn-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6653efcbdd2f039fb1e7e756a7350e2a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 53913,
        "upload_time": "2023-01-28T17:50:45",
        "upload_time_iso_8601": "2023-01-28T17:50:45.048248Z",
        "url": "https://files.pythonhosted.org/packages/f2/11/a054377ac81f56ec05594c06127e6f75d5681f34d1fc8730ffa63793afe7/penn-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d94d97ab79b24af1d1bb350a69f87240f68d9cc4e860a852fdf08e3282a9f5b",
          "md5": "d2904b564c657da731460852188a48da",
          "sha256": "4295b06855a63bfd67c19324011c18decaf66346580ba5709b878fe2d068bde2"
        },
        "downloads": -1,
        "filename": "penn-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d2904b564c657da731460852188a48da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 62750,
        "upload_time": "2023-01-28T17:58:06",
        "upload_time_iso_8601": "2023-01-28T17:58:06.742385Z",
        "url": "https://files.pythonhosted.org/packages/5d/94/d97ab79b24af1d1bb350a69f87240f68d9cc4e860a852fdf08e3282a9f5b/penn-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a46faf6bc892b3c0d53792399fd5fa9aa34c92f400479655e24358a0e65c65e5",
          "md5": "3ee0f0e5e7618ca9342ba2f6b1593bc0",
          "sha256": "30d3198fd6c8eedb3d5ad6ad5425605109837d466ffbf5352aa67dfb79ad204f"
        },
        "downloads": -1,
        "filename": "penn-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3ee0f0e5e7618ca9342ba2f6b1593bc0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 53935,
        "upload_time": "2023-01-28T17:58:08",
        "upload_time_iso_8601": "2023-01-28T17:58:08.527906Z",
        "url": "https://files.pythonhosted.org/packages/a4/6f/af6bc892b3c0d53792399fd5fa9aa34c92f400479655e24358a0e65c65e5/penn-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66cc9bf716e424d3c782bf022a9b60bd474f8f242f26e6f8906b4b07af76e120",
          "md5": "b332ab94a5a43888021ea178b25b6cc3",
          "sha256": "5b730e0c7f2bd9aec6ed7ab2e623f7dbe2aab6980da60b136fc4ab1f1d34f7fd"
        },
        "downloads": -1,
        "filename": "penn-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b332ab94a5a43888021ea178b25b6cc3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 62820,
        "upload_time": "2023-01-31T15:13:27",
        "upload_time_iso_8601": "2023-01-31T15:13:27.641691Z",
        "url": "https://files.pythonhosted.org/packages/66/cc/9bf716e424d3c782bf022a9b60bd474f8f242f26e6f8906b4b07af76e120/penn-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7eda9ef4410889e70e2ddf0a578ab3d78ef8fe7ca5a5ee573ad9b5420c740df",
          "md5": "76be9a547dd963d443de417d168ad96f",
          "sha256": "30cc710a724d4d422a4253e4894d51990d5a6155136de3b30c99da48f7e5ab76"
        },
        "downloads": -1,
        "filename": "penn-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "76be9a547dd963d443de417d168ad96f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54046,
        "upload_time": "2023-01-31T15:13:28",
        "upload_time_iso_8601": "2023-01-31T15:13:28.931605Z",
        "url": "https://files.pythonhosted.org/packages/a7/ed/a9ef4410889e70e2ddf0a578ab3d78ef8fe7ca5a5ee573ad9b5420c740df/penn-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc6c51e257072a1829b7ca412c9664184ed6c166bf1e196f22eec457935ee264",
          "md5": "8f74df12608f01a3eb3b305fc92878ee",
          "sha256": "d307651ad32a071d5ea4c9882b329f3b29aead7ff23431a97ddd202cbd6d1da2"
        },
        "downloads": -1,
        "filename": "penn-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f74df12608f01a3eb3b305fc92878ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 87758214,
        "upload_time": "2023-02-01T17:07:44",
        "upload_time_iso_8601": "2023-02-01T17:07:44.126863Z",
        "url": "https://files.pythonhosted.org/packages/cc/6c/51e257072a1829b7ca412c9664184ed6c166bf1e196f22eec457935ee264/penn-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f55e3463b69961a7447119c14d834b70a73b12fc602e7aef6557b14bb02964a6",
          "md5": "a62cbb3902c73c12a3bdfa88440789c4",
          "sha256": "a599b62fe176717c87b1bd32a56fcf2bd8ab1b0994425643a08ec0a7fc772eda"
        },
        "downloads": -1,
        "filename": "penn-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a62cbb3902c73c12a3bdfa88440789c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 87661144,
        "upload_time": "2023-02-01T17:07:51",
        "upload_time_iso_8601": "2023-02-01T17:07:51.446907Z",
        "url": "https://files.pythonhosted.org/packages/f5/5e/3463b69961a7447119c14d834b70a73b12fc602e7aef6557b14bb02964a6/penn-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b160362d4de093f477a1f166f5d484e3cfca940da327fc0d9f156cb76abb646",
          "md5": "bf54c04552116711ca28a8ab5adf779e",
          "sha256": "1f7d0157a2fed37dca35a836606139cd82763af5d5a0ccde255622bcc162cedd"
        },
        "downloads": -1,
        "filename": "penn-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf54c04552116711ca28a8ab5adf779e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 87758076,
        "upload_time": "2023-02-01T17:42:17",
        "upload_time_iso_8601": "2023-02-01T17:42:17.298888Z",
        "url": "https://files.pythonhosted.org/packages/9b/16/0362d4de093f477a1f166f5d484e3cfca940da327fc0d9f156cb76abb646/penn-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d332b3c82b4893f97b7bb4ab25c736ede18621c4b4dad5867375124556594edf",
          "md5": "5c3f1636bbd7741c2378df6197741384",
          "sha256": "7a7128b6adb136b553338b11189b194351420aa28a654a3b116fb5adb140c9e6"
        },
        "downloads": -1,
        "filename": "penn-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "5c3f1636bbd7741c2378df6197741384",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 87661046,
        "upload_time": "2023-02-01T17:42:23",
        "upload_time_iso_8601": "2023-02-01T17:42:23.779915Z",
        "url": "https://files.pythonhosted.org/packages/d3/32/b3c82b4893f97b7bb4ab25c736ede18621c4b4dad5867375124556594edf/penn-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5cd150b0c2a160b84c06ccf1e371884f6d267ea4ea2e55c0383ab20dd415ff4",
          "md5": "67ca8f2bea634564b6fb534ad58e8f00",
          "sha256": "3f9002b04490540f33c67b4a3805bab2b8e46f638a690e68d9dca78f0ce89775"
        },
        "downloads": -1,
        "filename": "penn-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "67ca8f2bea634564b6fb534ad58e8f00",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 62685,
        "upload_time": "2023-02-08T13:55:46",
        "upload_time_iso_8601": "2023-02-08T13:55:46.426428Z",
        "url": "https://files.pythonhosted.org/packages/e5/cd/150b0c2a160b84c06ccf1e371884f6d267ea4ea2e55c0383ab20dd415ff4/penn-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75068118ab3fc972cd94751d2ece71e89c9eb86afc710da850c102b2ecb79b23",
          "md5": "06912b8f4ffaa9d93e75323b286f4fdb",
          "sha256": "aa63a9cdf479ddfbabee8cbefdaddaf9c8bf221a0fbf7dcbe90679967d4a52bc"
        },
        "downloads": -1,
        "filename": "penn-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "06912b8f4ffaa9d93e75323b286f4fdb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 53629,
        "upload_time": "2023-02-08T13:55:47",
        "upload_time_iso_8601": "2023-02-08T13:55:47.874175Z",
        "url": "https://files.pythonhosted.org/packages/75/06/8118ab3fc972cd94751d2ece71e89c9eb86afc710da850c102b2ecb79b23/penn-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e5cd150b0c2a160b84c06ccf1e371884f6d267ea4ea2e55c0383ab20dd415ff4",
        "md5": "67ca8f2bea634564b6fb534ad58e8f00",
        "sha256": "3f9002b04490540f33c67b4a3805bab2b8e46f638a690e68d9dca78f0ce89775"
      },
      "downloads": -1,
      "filename": "penn-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "67ca8f2bea634564b6fb534ad58e8f00",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 62685,
      "upload_time": "2023-02-08T13:55:46",
      "upload_time_iso_8601": "2023-02-08T13:55:46.426428Z",
      "url": "https://files.pythonhosted.org/packages/e5/cd/150b0c2a160b84c06ccf1e371884f6d267ea4ea2e55c0383ab20dd415ff4/penn-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "75068118ab3fc972cd94751d2ece71e89c9eb86afc710da850c102b2ecb79b23",
        "md5": "06912b8f4ffaa9d93e75323b286f4fdb",
        "sha256": "aa63a9cdf479ddfbabee8cbefdaddaf9c8bf221a0fbf7dcbe90679967d4a52bc"
      },
      "downloads": -1,
      "filename": "penn-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "06912b8f4ffaa9d93e75323b286f4fdb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 53629,
      "upload_time": "2023-02-08T13:55:47",
      "upload_time_iso_8601": "2023-02-08T13:55:47.874175Z",
      "url": "https://files.pythonhosted.org/packages/75/06/8118ab3fc972cd94751d2ece71e89c9eb86afc710da850c102b2ecb79b23/penn-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}