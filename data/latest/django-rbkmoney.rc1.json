{
  "info": {
    "author": "Guchetl Murat",
    "author_email": "gmurka@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: Russian",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.5",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "===============\ndjango-rbkmoney\n===============\n\n**django-rbkmoney** - это приложение для интеграции системы приема платежей\nRBKMoney с проектами на основе Django.\n\nДо использования следует ознакомиться с официальной документацией RBKMoney\n(`Подключение интернет магазинов <http://www.rbkmoney.ru/podklyuchenie-internet-magazinov>`_;\nфайл с описанием API на сайте найти достаточно проблематично, скорее всего\nпридется запрашивать у поддержки, одна из версий\n`тут <https://docs.google.com/leaf?id=0B9UL0sMPo7JJOGNiYmJkZWItY2JkZi00ZjhlLWE3NDItOWRjZWRkMTFmZTk1&hl=ru>`_)\nПриложение реализует протокол взаимодействия с системой RBKMoney.\n\nУстановка\n=========\n\nСначала необходимо установить сам пакет::\n\n    $ pip install django-rbkmoney\n\nзатем следует добавить 'rbkmoney' в INSTALLED_APPS и выполнить::\n\n    $ python manage.py syncdb\n\nДля работы требуется django >= 1.3.x.\n\nНастройка\n=========\n\nВ ``settings.py`` необходимо указать следующие параметры:\n\n* RBKMONEY_SHOP_ID - номер магазина в системе RBKMoney\n* RBKMONEY_SECRET_KEY - секретный ключ (указывается в личном кабинете\n  самостоятельно)\n\nНеобязательные параметры:\n\n* RBKMONEY_HASH_CHECK - проверка контрольной подписи формы заявки на перевод,\n  в качестве значения можно указать названия возможных алгоритмов,\n  ``MD5`` или ``SHA512`` (при любом другом <истинном> значении будет выбран\n  алгоритм ``MD5``, при <ложном> - проверка будет отключена; отключение проверки\n  крайне не рекомендуется).\n\n* RBKMONEY_ACTION - URL страницы, на которую будет отправлена форма заявки\n  на перевод (по умолчанию: ``https://rbkmoney.ru/acceptpurchase.aspx``).\n\n* RBKMONEY_URI_PROTOCOL - протокол, используемый при генерации абсолютных\n  ссылок succesURL и failURL (возможные значения: ``http``, ``https``;\n  по умолчанию: ``http``).\n\nИспользование\n=============\n\nФорма заявки на перевод\n-----------------------\n\ndjango-rbkmoney содержит класс формы ``RequestRBKMoneyForm`` (наследник\n``django.forms.Form``), позволяющий упростить процесс генерации html кода\nформы заявки на перевод, разработчики могут использовать его в качестве\nродительского при наследовании, например, для добавления некоторых\nдополнительных параметров.\n\nПример кода представления::\n\n    from decimal import Decimal\n    from django.shortcuts import render\n    from rbkmoney.forms import RequestRBKMoneyForm\n\n    @login_required\n    def payment_rbkmoney(request, order_id)\n        form = RequestRBKMoneyForm(initial={\n            'orderId': 200005,\n            'serviceName': u'Два колеса, руль, педали и мешок свободы.',\n            'recipientAmount': Decimal('20000.00'),\n            'recipientCurrency': u'RUR',\n            'user_email': u'client@some.mail',\n            'userFields': ['some', 'values', 'list',],\n            # 'successUrl': 'http://site.name/payment/success/',\n            # 'failUrl': 'http://site.name/payment/fail/',\n        })\n\n        return render(request, 'payment.html', {'form': form})\n\nОбязательными параметрами в initial являются ``recipientAmount``\nи ``recipientCurrency``. Детальную справку по параметрам можно посмотреть\nв документации по API RBKMoney. Пользовательские поля в ``initial``\nможно передать с помощью параметра ``userFields``, значением должен быть\nсписок или кортеж строк, поля формы будут сгенерированы автоматически,\nначиная с индекса 0.\n\nСоответствующий шаблон::\n\n    {% extends 'base.html' %}\n\n    {% block content %}\n        <form action=\"{{ form.action }}\" method=\"post\">\n            {{ form }}\n            <input type=\"submit\" value=\"Оплатить\">\n        <form>\n    {% endblock %}\n\nФорма выведется в виде набора скрытых input-тегов.\n\nУ формы есть атрибут ``action``, содержащий URL страницы, на которую будет\nотправлена форма (см. параметр ``RBKMONEY_ACTION``).\n\nОбратите внимание, ``{% csrf_token %}`` в форме не нужен (и более того,\nдобавлять его к форме небезопасно), т.к. форма ведет на внешний\nсайт - сайт RBKMoney.\n\ndjango-rbkmoney не включает в себя модели \"Заказ\" (``Order``),\nт.к. эта модель будет отличаться от сайта к сайту. Обработку смены статусов\nзаказов следует осуществлять в обработчиках сигналов.\n\nПолучение результатов платежей\n------------------------------\n\ndjango-rbkmoney реализует механизм приема сообщений о статусах переводов со\nстороны RBKMoney, сообщения должны отправляться на страницу представления\n``rbkmoney_result`` (url: ``/адрес-приложения-rbkmoney/result/``), абсолютный\nадрес которого необходимо указывать в личном кабинете пользователя системы.\n\nВ целях безопасности лучше всегда использовать проверку контрольной подписи и\nотключать отправку секретного ключа.\n\nОбщий принцип работы примерно следующий:\n\n1. После оплаты RBKMoney отправляет запрос на адрес, соответствующий\n   представлению ``rbkmoney_result``.\n\n2. Внутри ``rbkmoney_result`` происходит проверка содержащейся в\n   запросе контрольной подписи с помощью секретного ключа и выбранного\n   алгоритма (если она не отключена в параметрах).\n\n3. Если запрос корректный, то ``rbkmoney_result`` шлет сигнал\n   ``rbkmoney.signals.result_received``, предусмотренный для\n   совершения дополнительных манипуляций на сайте.\n   Для этого необходимо добавить соответствующий обработчик сигнала.\n\n4. Если все в порядке, то ``rbkmoney_result`` возвращает RBKMoney\n   строку ``OK`` со статусом запроса ``200``. Этот ответ необходим для того,\n   чтобы система получила подтверждение того, что все необходимые действия\n   произведены.\n\n5. Если RBKMoney получает положительный ответ, то пользователь перенаправляется\n   на ``successUrl`` (по умолчанию это адрес представления ``rbkmoney_success``).\n   На этой страничке обычно выводится сообщение об успешном прохождении\n   платежа/оплаты. Если ответ отрицательный, то пользователь перенаправляется\n   на ``failURL`` (по умолчанию это адрес представления ``rbkmoney_fail``),\n   где ему будет отображено сообщение о произошедшей ошибке.\n\nВ целом ``rbkmoney_result`` должно получить сообщение дважды, со значениями\n``paymentStatus`` равными:\n\n* ``3`` - операция принята на обработку и\n* ``5`` - операция исполнена, соответственно.\n\nПри этом в обработчике сигнала следует учитывать, что перевод прошел успешно\nлишь при получении ``paymentStatus`` равного ``5``.\n\nСигналы\n-------\n\nОбработку смены статусов заказов следует осуществлять в обработчике сигнала\n``robokassa.signals.result_received``. Данный сигнал отсылается лишь\nпри получении корректного уведомления от RBKMoney. Получение этого сигнала\nозначает что оплата либо создана, либо прошла успешно (в зависимости от\nзначения ``paymentStatus``).\n\nВ качестве ``sender`` передается экземпляр модели ``RBKMoneyPayment``\nсо всеми данными оплаты, так же в качестве дополнительного параметра\nпередается значение ``user_fields``, отправленное еще в запросе\nна перевод (список кортежей (имя, значение)).\n\nПример::\n\n    from rbkmoney.signals import result_received\n    from orders.models import Order\n\n    def on_payment_received(sender, **kwargs):\n        if sender.paymentStatus != 5: return\n        order = Order.objects.get(id=sender.orderId)\n        order.change_status('paid')\n        order.save()\n\n    result_received.connect(on_payment_received)\n\nurls.py\n-------\n\nДля настройки адресов представлений ``rbkmoney_result``, ``rbkmoney_success``\nи ``rbkmoney_fail`` можно подключить модуль ``rbkmoney.urls``::\n\n    urlpatterns = patterns('',\n        # ...\n        url(r'^rbkmoney/', include('rbkmoney.urls')),\n        # ...\n    )\n\nАдрес представления ``rbkmoney_result``, указываемый в личном кабинете,\nв этом случае будет иметь вид: ``http://yoursite.ru/rbkmoney/result/``.\n\nШаблоны\n-------\n\n* ``rbkmoney/success.html`` - показывается в случае успешной оплаты.\n* ``robokassa/fail.html`` - показывается в случае неуспешной оплаты.\n\nРазработка\n==========\n\nРазработка ведется на bitbucket:\n\nhttps://bitbucket.org/sakkada/django-rbkmoney/\n\nПожелания, идеи, баг-репорты и тд. пишите в трекер:\n\nhttps://bitbucket.org/sakkada/django-rbkmoney/issues\n\nЛицензия - MIT.\n\nТестирование\n------------\n\nДля запуска тестов установите выполните команду::\n\n    $ python manage.py test rbkmoney\n\nПример интеграции\n-----------------\n\nВ архиве пакета, а так же в репозитарии находится директория ``sample``,\nв которой находится код ``django`` проекта с примером интеграции\n``django-rbkmoney``.История изменений\n=================\n\n0.1.0 (2013-05-09)\n------------------\nПервая версия",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/sakkada/django-rbkmoney/",
    "keywords": null,
    "license": "MIT license",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-rbkmoney",
    "package_url": "https://pypi.org/project/django-rbkmoney/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-rbkmoney/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://bitbucket.org/sakkada/django-rbkmoney/"
    },
    "release_url": "https://pypi.org/project/django-rbkmoney/0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Приложение для интеграции системы приема платежей RBKMoney в проекты на основе Django.",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 748360,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8be859ff589a7f3c2b75168ba59e15e32765989f3aa44eda82368f573d91316f",
          "md5": "99f5475a83516953ac0e9c8c63453291",
          "sha256": "fdddf6cf286e36bec3233c3ff1f84a0fb2733f16f3e4b622740b9b0d0c12d9ad"
        },
        "downloads": -1,
        "filename": "django-rbkmoney-0.1.zip",
        "has_sig": false,
        "md5_digest": "99f5475a83516953ac0e9c8c63453291",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19980,
        "upload_time": "2013-05-09T21:06:22",
        "upload_time_iso_8601": "2013-05-09T21:06:22.237611Z",
        "url": "https://files.pythonhosted.org/packages/8b/e8/59ff589a7f3c2b75168ba59e15e32765989f3aa44eda82368f573d91316f/django-rbkmoney-0.1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8be859ff589a7f3c2b75168ba59e15e32765989f3aa44eda82368f573d91316f",
        "md5": "99f5475a83516953ac0e9c8c63453291",
        "sha256": "fdddf6cf286e36bec3233c3ff1f84a0fb2733f16f3e4b622740b9b0d0c12d9ad"
      },
      "downloads": -1,
      "filename": "django-rbkmoney-0.1.zip",
      "has_sig": false,
      "md5_digest": "99f5475a83516953ac0e9c8c63453291",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19980,
      "upload_time": "2013-05-09T21:06:22",
      "upload_time_iso_8601": "2013-05-09T21:06:22.237611Z",
      "url": "https://files.pythonhosted.org/packages/8b/e8/59ff589a7f3c2b75168ba59e15e32765989f3aa44eda82368f573d91316f/django-rbkmoney-0.1.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}