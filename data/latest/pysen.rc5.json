{
  "info": {
    "author": "Yuki Igarashi, Toru Ogawa, Ryo Miyajima",
    "author_email": "igarashi@preferred.jp, ogawa@preferred.jp, ryo@preferred.jp",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# pysen\n\n![](https://github.com/pfnet/pysen/blob/main/assets/imgs/pysen.gif?raw=true)\n\n## Install\n\n### PyPI\n\n#### If you have no preference of linter versions (recommended for newbies)\n\n```sh\npip install \"pysen[lint]\"\n```\n\n#### Install pysen with your choice of linter versions\n\n```sh\npip install pysen\npip install black==21.10b0 flake8==4.0.1 isort==5.10.1 mypy==0.910\n```\n\n### Other installation examples\n\n```sh\n# pipenv\npipenv install --dev \"pysen[lint]==0.10.3\"\n# poetry\npoetry add -D pysen==0.10.3 -E lint\n```\n\n## Quickstart: Set up linters using pysen\n\nPut the following pysen configuration to either `pysen.toml` or `pyproject.toml` of your python package:\n```toml\n[tool.pysen]\nversion = \"0.10\"\n\n[tool.pysen.lint]\nenable_black = true\nenable_flake8 = true\nenable_isort = true\nenable_mypy = true\nmypy_preset = \"strict\"\nline_length = 88\npy_version = \"py37\"\n[[tool.pysen.lint.mypy_targets]]\n  paths = [\".\"]\n```\n\nthen, execute the following command:\n```sh\n$ pysen run lint\n$ pysen run format  # corrects errors with compatible commands (black, isort)\n```\n\nThat's it!\npysen, or more accurately pysen tasks that support the specified linters, generate setting files for black, isort, mypy, and flake8\nand run them with the appropriate configuration.\nFor more details about the configuration items that you can write in a config file, please refer to `pysen/pyproject_model.py`.\n\nYou can also add custom setup commands to your Python package by adding the following lines to its `setup.py`:\n```py\nimport pysen\nsetup = pysen.setup_from_pyproject(__file__)\n```\n\n```sh\n$ python setup.py lint\n```\n\nWe also provide a Python interface for customizing our configuration and extending pysen.\nFor more details, please refer to the following two examples:\n- Example configuration from Python: `examples/advanced_example/config.py`\n- Example plugin for pysen: `examples/plugin_example/plugin.py`\n\n## Frequently Asked Questions\n\nQ. How do I use `mypy >= 0.800`?  \nA. See [Install pysen with your choice of linter versions](#install-pysen-with-your-choice-of-linter-versions)\n\nQ. mypy reports the error `Source file found twice under different module names`.  \nA. Add `tool.pysen.lint.mypy_targets` section(s) so file names are unique in each section.\n\nQ. How do I change specific settings for linter X?  \nA. We prioritize convention over configuration. However you can always create your own plugin. See: [Create a plugin to customize pysen](#create-a-plugin-to-customize-pysen)\n\nQ. pysen seems to ignore some files.  \nA. pysen only checks files that are tracked in git. Try `git add`ing the file under question.\nYou can also disable this behavior by setting the environment variable `PYSEN_IGNORE_GIT=1`.\n\nQ. How do I run only [flake8|black|isort|mypy]?  \nA. Try the `--enable` and `--disable` options, for example, `pysen --enable flake --enable black run lint`.\n\nQ. Files without filename extensions are not checked.  \nA. Explicitly add those files under the include section in `tool.pysen.lint.source`.\n\nQ. How do I add additional settings to my `pyproject.toml`, e.g., [pydantic-mypy](https://pydantic-docs.helpmanual.io/mypy_plugin/#configuring-the-plugin)?  \nA. Add `settings_dir=\".\"` under the `[tool.pysen-cli]` section.\n\n## What is pysen?\n\npysen aims to provide a unified platform to configure and run day-to-day development tools.\nWe envision the following scenarios in the future:\n\n- You open any project and `pysen run lint`, `pysen run format` will check and format the entire codebase\n- Standardized coding styles are setup with a few lines in a single config file\n\npysen centralizes the code and knowledge related to development tools that teams have accumulated, most notably for python linters.\nYou can make tasks that can be executed from both `setup.py` and our command-line tool.\nWe currently provide tasks that manage setting files for the following tools:\n\n- linters\n  - flake8\n  - isort\n  - mypy\n  - black\n- utilities\n  - (planned) protoc\n\n## What isn't pysen?\n\n* pysen is not a linting tool per se. Rather, `pysen run lint` orchestrates multiple python linting tools by automatically setting up their configurations from a more abstract setting for pysen.\n* pysen does not manage your dependencies and packages. We recommend using package managers such as [pipenv](https://github.com/pypa/pipenv) or [poetry](https://python-poetry.org/) to lock your dependency versions, **including the versions for the linting tools that pysen coordinates** (i.e., isort, mypy, flake8, black). The _confirmed_ versions for these tools can be found in the `extra_requires/lint` section in pysen's [setup.py](https://github.com/pfnet/pysen/blob/main/setup.py), although higher versions may work. You should **not** rely on `pip install pysen[lint]` to control the versions of your linting tools.\n* pysen is not limited to linting purposes or python. See the [plugin section](README.md#create-a-plugin-to-customize-pysen) for details.\n\n## How it works: Settings file directory\n\nUnder the hood, whenever you run pysen, it generates the setting files as ephemeral temporary files to be used by linters.\nYou may want to keep those setting files on your disk, e.g. when you want to use them for your editor.\nIf that is the case, run the following command to generate the setting files to your directory of choice:\n\n```sh\n$ pysen generate [out_dir]\n```\n\nYou can specify the settings directory that pysen uses when you `pysen run`.\nTo do so add the following section to your config:\n\n```toml\n[tool.pysen-cli]\nsettings_dir = \"path/to/generate/settings\"\n```\n\nWhen you specify a directory that already contains some configurations, pysen merges the contents. The resulting behavior may differ from when you don't specify `settings_dir`.\n\nAlso keep in mind that this option is honored only when you use pysen through its CLI. When using pre-commit or setuptools you need to specify `settings_dir` as arguments.\n\n## Tips: IDE / Text editor integration\n\n### vim\n\nYou can add errors that pysen reports to your quickfix window by:\n\n```\n:cex system(\"pysen run_files lint --error-format gnu \".expand('%:p'))\n```\n\nAnother way is to set pysen to `makeprg`:\n\n```\nset makeprg=pysen\\ run_files\\ --error-format\\ gnu\\ lint\\ %\n```\n\nThen running `:make` will populate your quickfix window with errors.\nThis also works with [`vim-dispatch`](https://github.com/tpope/vim-dispatch) as long as you invoke `:Make` instead of `:Dispatch` (for [this reason](https://github.com/tpope/vim-dispatch/issues/41#issuecomment-20555488))\n\nThe result will look like the following:\n\n![pysen-vim](https://github.com/pfnet/pysen/blob/main/assets/imgs/pysen_vim.gif?raw=true)\n\nA third party plugin is also available.\n- [pysen.vim](https://github.com/bonprosoft/pysen.vim)\n\n### Emacs\n\nRefer to the [Compilation mode](https://www.gnu.org/software/emacs/manual/html_node/emacs/Compilation-Mode.html).\nThe following is an example hook for python.\n```el\n(add-hook 'python-mode-hook\n    (lambda ()\n        (set (make-local-variable 'compile-command)\n            (concat \"pysen run_files lint --error-format gnu  \" buffer-file-name))))\n```\n\n### VSCode\n\nA [third party plugin](https://marketplace.visualstudio.com/items?itemName=bonprosoft.pysen-vscode) is available.\n\nNote that this may report duplicate errors if you have configured linters like `flake8` directly through your VSCode python extension.\n\n## Configure pysen\n\nWe provide two methods to write configuration for pysen.\n\nOne is the `[tool.pysen.lint]` section in the config.\nIt is the most simple way to configure pysen, but the settings we provide are limited.\n\nThe other method is to write a python script that configures pysen directly.\nIf you want to customize configuration files that pysen generates, command-line arguments that pysen takes, or whatever actions pysen performs, we recommend you use this method.\nFor more examples, please refer to `pysen/examples`.\n\n### Configuration model\n\nPlease refer to `pysen/pyproject_model.py` for the latest model.\n\nHere is an example of a basic configuration:\n```toml\n[tool.pysen]\nversion = \"0.10\"\n\n[tool.pysen.lint]\nenable_black = true\nenable_flake8 = true\nenable_isort = true\nenable_mypy = true\nmypy_preset = \"strict\"\nline_length = 88\npy_version = \"py37\"\nisort_known_third_party = [\"numpy\"]\nisort_known_first_party = [\"pysen\"]\nmypy_ignore_packages = [\"pysen.generated.*\"]\nmypy_path = [\"stubs\"]\n[[tool.pysen.lint.mypy_targets]]\n  paths = [\".\", \"tests/\"]\n\n[tool.pysen.lint.source]\n  includes = [\".\"]\n  include_globs = [\"**/*.template\"]\n  excludes = [\"third_party/\"]\n  exclude_globs = [\"**/*_grpc.py\"]\n\n[tool.pysen.lint.mypy_modules.\"pysen.scripts\"]\n  preset = \"entry\"\n\n[tool.pysen.lint.mypy_modules.\"numpy\"]\n  ignore_errors = true\n```\n\npysen looks for a configuration file in the following order:\n1. `pysen.toml` with a `tool.pysen` section\n2. `pyproject.toml` with a `tool.pysen` section\n\n### Create a plugin to customize pysen\n\nWe provide a plugin interface for customizing our tool support, setting files management, setup commands and so on.\nFor more details, please refer to `pysen/examples/plugin_example`.\n\n## Development\n\n`pipenv` is required for managing our development environment.\n```sh\n# setup your environment\n$ pipenv sync\n# activate the environment\n$ pipenv shell\n```\n\n- Update dependencies in `Pipfile.lock`\n```sh\n$ pipenv lock --pre\n```\n- Run all tests\n```sh\n$ pipenv run tox\n```\n\n## mypy presets\n\nThe mypy preset `strict` aims to make life easier for developers using the following packages:\n\n* OpenCV\n* PyTorch\n* scikit-learn\n\nWe recommend developers mitigate some rules from the `very strict` preset to avoid some hassles.\nIf you use these packages with the `strict` preset and still have inconveniences, please let us know.\n\n## Contributing\n\nOur main priority is to fulfil the demands from projects within Preferred Networks.\nTherefore, we must assess whether each feature/pull request is in the best interest of our projects.\nIn principle, we are open to minor things like the following:\n\n* Issues that report bugs\n* Small PRs that fix typos or minor glitches\n\nAs for new features or major feature enhancements,\nthe core developers will determine whether the proposed idea is in line with the\ngoals and concepts of `pysen` for each case.\nWhen in doubt, don't hesitate to open an Issue first.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pfnet/pysen",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pysen",
    "package_url": "https://pypi.org/project/pysen/",
    "platform": null,
    "project_url": "https://pypi.org/project/pysen/",
    "project_urls": {
      "Homepage": "https://github.com/pfnet/pysen"
    },
    "release_url": "https://pypi.org/project/pysen/0.10.3/",
    "requires_dist": [
      "GitPython (<4.0.0,>=3.0.0)",
      "colorlog (<5.0.0,>=4.0.0)",
      "dacite (<2.0.0,>=1.1.0)",
      "tomlkit (<1.0.0,>=0.5.11)",
      "unidiff (<1.0.0,>=0.6.0)",
      "dataclasses (<1.0,>=0.6) ; python_version < \"3.7\"",
      "black (<=22.10,>=19.10b0) ; extra == 'lint'",
      "flake8-bugbear ; extra == 'lint'",
      "flake8 (<5,>=3.7) ; extra == 'lint'",
      "isort (<5.2.0,>=4.3) ; extra == 'lint'",
      "mypy (<0.800,>=0.770) ; extra == 'lint'"
    ],
    "requires_python": "",
    "summary": "Python linting made easy. Also a casual yet honorific way to address individuals who have entered an organization prior to you.",
    "version": "0.10.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16367818,
  "releases": {
    "0.10.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84ed4f47cd1e7c037c270a9b394e00a20096f09bf9b76a23d2446bff90e45f46",
          "md5": "d00891074a1fcb45968698c7240a13ee",
          "sha256": "d7d6e53eefea4234b13094e65d7bd50bd6fc16dbbab75b17147caca1d55fa17f"
        },
        "downloads": -1,
        "filename": "pysen-0.10.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d00891074a1fcb45968698c7240a13ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 57465,
        "upload_time": "2021-11-12T08:38:36",
        "upload_time_iso_8601": "2021-11-12T08:38:36.300260Z",
        "url": "https://files.pythonhosted.org/packages/84/ed/4f47cd1e7c037c270a9b394e00a20096f09bf9b76a23d2446bff90e45f46/pysen-0.10.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13cddee0a1afcb20dd7346b2ac42f329a4eb9047f43060e30602f7dc25d9dd38",
          "md5": "acd9eac52c904bd3ea4b4d1abaee5343",
          "sha256": "68e6661f967ee8e91a75425933abd8c859c11b18426da8c7603c843513d616c7"
        },
        "downloads": -1,
        "filename": "pysen-0.10.1.tar.gz",
        "has_sig": false,
        "md5_digest": "acd9eac52c904bd3ea4b4d1abaee5343",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47290,
        "upload_time": "2021-11-12T08:38:38",
        "upload_time_iso_8601": "2021-11-12T08:38:38.358631Z",
        "url": "https://files.pythonhosted.org/packages/13/cd/dee0a1afcb20dd7346b2ac42f329a4eb9047f43060e30602f7dc25d9dd38/pysen-0.10.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd64e77b7d7435ae9a250a64f92734c571dc5e4f36cc9426d770e52edf2cca88",
          "md5": "23feba250521af9dcfacc66af6fdd3b5",
          "sha256": "f669c86d12e50d75a0037898fe0e20354f8545aa9682d0934374112eb37b131f"
        },
        "downloads": -1,
        "filename": "pysen-0.10.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23feba250521af9dcfacc66af6fdd3b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 57692,
        "upload_time": "2022-05-01T11:45:54",
        "upload_time_iso_8601": "2022-05-01T11:45:54.069492Z",
        "url": "https://files.pythonhosted.org/packages/cd/64/e77b7d7435ae9a250a64f92734c571dc5e4f36cc9426d770e52edf2cca88/pysen-0.10.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "222953b6ad04c01d3ea0e5e147588d1044e24686c476a4c6e54cf14d48dba20f",
          "md5": "4fb822ccdbb7627eafe354ecfbb66d94",
          "sha256": "5400124c3b6bf1a11d4a359cc44c9909c364615dc128eb35def1f735a4fbe6d2"
        },
        "downloads": -1,
        "filename": "pysen-0.10.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4fb822ccdbb7627eafe354ecfbb66d94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47828,
        "upload_time": "2022-05-01T11:45:56",
        "upload_time_iso_8601": "2022-05-01T11:45:56.348780Z",
        "url": "https://files.pythonhosted.org/packages/22/29/53b6ad04c01d3ea0e5e147588d1044e24686c476a4c6e54cf14d48dba20f/pysen-0.10.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b79feeed862d00ce89619357e1ac951ad25aa56f0f9a71491e7c9a04a175213",
          "md5": "7f9a2687925ca326d54955b766decfb9",
          "sha256": "08e79588bf0aa1e9233554d84ac277679d4998dede7768bc7ca8cc5fee6fc846"
        },
        "downloads": -1,
        "filename": "pysen-0.10.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f9a2687925ca326d54955b766decfb9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 58181,
        "upload_time": "2023-01-10T00:53:12",
        "upload_time_iso_8601": "2023-01-10T00:53:12.309270Z",
        "url": "https://files.pythonhosted.org/packages/9b/79/feeed862d00ce89619357e1ac951ad25aa56f0f9a71491e7c9a04a175213/pysen-0.10.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5da4bf9a2975b9bba36e0dfeae29620e6f3852262bee481bb7ee7f7343f71a01",
          "md5": "e30e36e460282bf48946c7e404434fab",
          "sha256": "3023f48789a90fe660bcacc59a2e57d62297a04c50222ac5d72aff254b53e55c"
        },
        "downloads": -1,
        "filename": "pysen-0.10.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e30e36e460282bf48946c7e404434fab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 48155,
        "upload_time": "2023-01-10T00:53:13",
        "upload_time_iso_8601": "2023-01-10T00:53:13.719290Z",
        "url": "https://files.pythonhosted.org/packages/5d/a4/bf9a2975b9bba36e0dfeae29620e6f3852262bee481bb7ee7f7343f71a01/pysen-0.10.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27c140b8446aded18838cb4e87669050f72bcbfa6346ae8522a95b9cee93be11",
          "md5": "fea14c9538a4c36f1bf32b765c736c64",
          "sha256": "440b8a9c5f6c7daa69af628fc06a5376451d7001b394be3bc3ffbe9479ec4a9f"
        },
        "downloads": -1,
        "filename": "pysen-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fea14c9538a4c36f1bf32b765c736c64",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 55434,
        "upload_time": "2021-03-22T09:09:35",
        "upload_time_iso_8601": "2021-03-22T09:09:35.468096Z",
        "url": "https://files.pythonhosted.org/packages/27/c1/40b8446aded18838cb4e87669050f72bcbfa6346ae8522a95b9cee93be11/pysen-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "792c5122ff5388f3ea5cd0f21eb3688f9e49060e893f7dcc5369e67d55b60e3f",
          "md5": "ce3a7f106c270f14cf30f7a7434e622b",
          "sha256": "37f6f0e18c5afd5ba281f86a466f8558097fe5b9b4f3495dde7b92e77f43828e"
        },
        "downloads": -1,
        "filename": "pysen-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ce3a7f106c270f14cf30f7a7434e622b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42642,
        "upload_time": "2021-03-22T09:09:37",
        "upload_time_iso_8601": "2021-03-22T09:09:37.871403Z",
        "url": "https://files.pythonhosted.org/packages/79/2c/5122ff5388f3ea5cd0f21eb3688f9e49060e893f7dcc5369e67d55b60e3f/pysen-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff1564a7fdabbc6322701b3ceacad5cfda63e8ac8015563f597fd47b0251013a",
          "md5": "22d65b9316c79aa1462352b119b5ce6d",
          "sha256": "706088b904a74b83a341cc7b19f213737412575bc74e851a57e7b6db80e437c9"
        },
        "downloads": -1,
        "filename": "pysen-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "22d65b9316c79aa1462352b119b5ce6d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 55932,
        "upload_time": "2021-03-27T12:05:31",
        "upload_time_iso_8601": "2021-03-27T12:05:31.778839Z",
        "url": "https://files.pythonhosted.org/packages/ff/15/64a7fdabbc6322701b3ceacad5cfda63e8ac8015563f597fd47b0251013a/pysen-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed729691844926aedbbd67d2dd8ae9ded34145c039088d5d7b93cc0f9e502ce3",
          "md5": "1d290edb1498cb3370adc5a4d3b45bad",
          "sha256": "c84953b8eaec7a968e42a89f474ba177665abdf4e051352ec6931a3e96977a41"
        },
        "downloads": -1,
        "filename": "pysen-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1d290edb1498cb3370adc5a4d3b45bad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 43693,
        "upload_time": "2021-03-27T12:05:34",
        "upload_time_iso_8601": "2021-03-27T12:05:34.461188Z",
        "url": "https://files.pythonhosted.org/packages/ed/72/9691844926aedbbd67d2dd8ae9ded34145c039088d5d7b93cc0f9e502ce3/pysen-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9b79feeed862d00ce89619357e1ac951ad25aa56f0f9a71491e7c9a04a175213",
        "md5": "7f9a2687925ca326d54955b766decfb9",
        "sha256": "08e79588bf0aa1e9233554d84ac277679d4998dede7768bc7ca8cc5fee6fc846"
      },
      "downloads": -1,
      "filename": "pysen-0.10.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7f9a2687925ca326d54955b766decfb9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 58181,
      "upload_time": "2023-01-10T00:53:12",
      "upload_time_iso_8601": "2023-01-10T00:53:12.309270Z",
      "url": "https://files.pythonhosted.org/packages/9b/79/feeed862d00ce89619357e1ac951ad25aa56f0f9a71491e7c9a04a175213/pysen-0.10.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5da4bf9a2975b9bba36e0dfeae29620e6f3852262bee481bb7ee7f7343f71a01",
        "md5": "e30e36e460282bf48946c7e404434fab",
        "sha256": "3023f48789a90fe660bcacc59a2e57d62297a04c50222ac5d72aff254b53e55c"
      },
      "downloads": -1,
      "filename": "pysen-0.10.3.tar.gz",
      "has_sig": false,
      "md5_digest": "e30e36e460282bf48946c7e404434fab",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 48155,
      "upload_time": "2023-01-10T00:53:13",
      "upload_time_iso_8601": "2023-01-10T00:53:13.719290Z",
      "url": "https://files.pythonhosted.org/packages/5d/a4/bf9a2975b9bba36e0dfeae29620e6f3852262bee481bb7ee7f7343f71a01/pysen-0.10.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}