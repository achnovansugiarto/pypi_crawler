{
  "info": {
    "author": "Christopher Mertens",
    "author_email": "suppetia@gmx.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# pyscfg - _Python Simple Configuration_\n\nA simple solution to store/load/modify configurations for your Python project. \n\nversion: _0.2.0_  \ncontributors: _suppetia_\n\n## Setup\n\ninstalling via pip\n```bash\npip install pyscfg\n```\n\ninstalling from source\n```bash\ngit clone https://github.com/suppetia/pyscfg.git\ncd pyscfg\npython setup.py install\n```\n\n## Getting started\nThis library allows to work with configurations which are supposed to endure a restart of a program (nearly) as simple as working with dictionaries.\nAccess/update/remove configurations stored in a file using the \"bracket-syntax\" like using a dictionary \nand the library will handle all the I/O and keep the configs-file up to date.  \nAt this state of development YAML and JSON files are supported to store the configurations.  \n! _All configuration keys must be strings \nand if they contain a dot (\".\") they are interpreted as multilevel keys._\n\nTo get started initialize a SimpleConfigs instance:\n```python\nfrom pyscfg import SimpleConfigs\n\n# uses file 'configs.yml' (default) to store the configurations\ncfg = SimpleConfigs()\n# To store the configs in a specific file, pass the path to configuration file.\ncfg = SimpleConfigs(\"data/configs.yml\")\n```\n\nIf `data/configs.yml` looks like\n```yaml\na:\n    b: value\n    c: value2\nd: value3\n```\n'value' can be accessed using any of the following ways\n```python\ncfg[\"a.b\"]\ncfg[\"a\"][\"b\"]\ncfg.get(\"a.b\")\ncfg[\"a\"].get(\"b\")\ncfg.get(\"a\").get(\"b\")\ncfg.get(\"a\")[\"b\"]\n```\nCalling \n```python\ncfg[\"a.d\"]\n```\nwill raise a `KeyError` while\n```python\ncfg[\"a\"].get(\"d\")                # returns None\ncfg[\"a\"].get(\"d\", default=None)  # returns None\ncfg[\"a\"].get(\"d\", default=\"foo\") # returns \"foo\"\n```\nreturns the default value if the key is not stored in the configs.\n\nTo extract a group of configs (a layer in the configs file) as a dictionary use\n```python\ncfg[\"a\"].as_dict()  # or\ndict(cfg[\"a\"])\n```\n\nIn the same way updating or adding new configuration keys works:\n```python\ncfg[\"a.b\"] = \"new_value\"\ncfg[\"a\"][\"b\"] = \"new_value\"\n...\ncfg[\"e\"] = \"another new value\"\n...\n\n# to add a group of parameters use a dict:\ncfg[\"f\"] = {\"g\": 1, \"h\": 1e10}\n```\n\nAfter these changes the `data/configs.yml` file will look like this:\n```yaml\na:\n    b: new value\n    c: value2\nd: value3\ne: another new value\n```\n\nTo remove a key use one of the following ways:\n```python\ncfg.remove(\"e\")\ndel cfg[\"e\"]\n\n# to retrieve the item to be removed or to safely remove a key use dict-like pop-method\ncfg.pop(\"e\")                             # returns \"another new value\"\ncfg.pop(\"non existing key\")              # returns None\ncfg.pop(\"non existing key\", default=42)  # returns 42\n```\n\nDefault values stored in a dictionary can be passed to the constructor. These values will be assigned if the keys aren't in the configurations already.\nThe configurations file is updated.  \nThis might be useful to create a configurations file for an app for the first time and these configs might be changed by the user later.\n\n```python\nfrom pyscfg import SimpleConfigs\n\n\ndefaults = {\n    \"foo\": \"John\",\n    \"bar\": \"Doe\",\n    \"num\": 0\n}\n\n# uses file 'configs.yml' (default) to store the user configurations\ncfg = SimpleConfigs(defaults=defaults)\n\nprint(cfg[\"num\"]) # prints 0\n\nif user_chooses_this_option:\n    cfg[\"num\"] = 1\nelse:\n    cfg[\"num\"] = -1\n\nprint(cfg[\"num\"]) # prints 1 or -1\n```\nYou can also write your defaults into a configuration file (supported: _YAML_, _JSON_) and pass it to the constructor.\n```python\n# uses file 'default_cfg.yml' in subdirectory 'data' to load the default configuration values\ncfg = SimpleConfigs(defaults=\"data/default_cfg.yml\")\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyscfg",
    "package_url": "https://pypi.org/project/pyscfg/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyscfg/",
    "project_urls": {
      "Github": "https://github.com/suppetia/pyscfg"
    },
    "release_url": "https://pypi.org/project/pyscfg/0.2.0/",
    "requires_dist": [
      "PyYAML (>=5.3.1)"
    ],
    "requires_python": ">=3.6.0",
    "summary": "simple handling of user configuration",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11879828,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3fce875e80d11fb1d14d7713b41070f34060f360202b7803ceca920eeab1d71",
          "md5": "c48ba428ec0e55e88bf7fffeac40eb38",
          "sha256": "dd9cce48d2defac1d323a86a77e2b9798591d65fd8c08041a2b69ee30fc95614"
        },
        "downloads": -1,
        "filename": "pyscfg-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c48ba428ec0e55e88bf7fffeac40eb38",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 3788,
        "upload_time": "2020-08-25T19:38:08",
        "upload_time_iso_8601": "2020-08-25T19:38:08.431650Z",
        "url": "https://files.pythonhosted.org/packages/c3/fc/e875e80d11fb1d14d7713b41070f34060f360202b7803ceca920eeab1d71/pyscfg-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3382d0ad37a14a479e368a7c1faa9f3216fa180f6236d85e78ee3ac7aa9123b0",
          "md5": "b8a8ca1ea272ebf22d8e1b069ba97ac9",
          "sha256": "fcd55d08287cd1a6e6fd7df84658f1f7a731803e1c03c7945a6a7bc79123abb8"
        },
        "downloads": -1,
        "filename": "pyscfg-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b8a8ca1ea272ebf22d8e1b069ba97ac9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 3241,
        "upload_time": "2020-08-25T19:38:18",
        "upload_time_iso_8601": "2020-08-25T19:38:18.838277Z",
        "url": "https://files.pythonhosted.org/packages/33/82/d0ad37a14a479e368a7c1faa9f3216fa180f6236d85e78ee3ac7aa9123b0/pyscfg-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f727255a8030d142539800631cb6a4879423a710b0b3662db8bf801c1f52c6f9",
          "md5": "5aad037f5e579397acbb07e3fb8a5bf1",
          "sha256": "f77f51465f3939a606e7caeb9091fd75b8907b06388261f00aa2fb28a85f87e2"
        },
        "downloads": -1,
        "filename": "pyscfg-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5aad037f5e579397acbb07e3fb8a5bf1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 7602,
        "upload_time": "2021-10-30T20:04:12",
        "upload_time_iso_8601": "2021-10-30T20:04:12.409452Z",
        "url": "https://files.pythonhosted.org/packages/f7/27/255a8030d142539800631cb6a4879423a710b0b3662db8bf801c1f52c6f9/pyscfg-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64bb10c9ed26c04806076bac88715cf0acd82183d46a9f3d21a43f36a576f569",
          "md5": "bddde00fea9894e2fd5e27a506512eac",
          "sha256": "6f1a28594cdfa0c8b9cbd3b39ba91c22ec5b2c3c422ee2af20392202947c4bd2"
        },
        "downloads": -1,
        "filename": "pyscfg-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bddde00fea9894e2fd5e27a506512eac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 6141,
        "upload_time": "2021-10-30T20:04:13",
        "upload_time_iso_8601": "2021-10-30T20:04:13.774739Z",
        "url": "https://files.pythonhosted.org/packages/64/bb/10c9ed26c04806076bac88715cf0acd82183d46a9f3d21a43f36a576f569/pyscfg-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f727255a8030d142539800631cb6a4879423a710b0b3662db8bf801c1f52c6f9",
        "md5": "5aad037f5e579397acbb07e3fb8a5bf1",
        "sha256": "f77f51465f3939a606e7caeb9091fd75b8907b06388261f00aa2fb28a85f87e2"
      },
      "downloads": -1,
      "filename": "pyscfg-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5aad037f5e579397acbb07e3fb8a5bf1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 7602,
      "upload_time": "2021-10-30T20:04:12",
      "upload_time_iso_8601": "2021-10-30T20:04:12.409452Z",
      "url": "https://files.pythonhosted.org/packages/f7/27/255a8030d142539800631cb6a4879423a710b0b3662db8bf801c1f52c6f9/pyscfg-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "64bb10c9ed26c04806076bac88715cf0acd82183d46a9f3d21a43f36a576f569",
        "md5": "bddde00fea9894e2fd5e27a506512eac",
        "sha256": "6f1a28594cdfa0c8b9cbd3b39ba91c22ec5b2c3c422ee2af20392202947c4bd2"
      },
      "downloads": -1,
      "filename": "pyscfg-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bddde00fea9894e2fd5e27a506512eac",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 6141,
      "upload_time": "2021-10-30T20:04:13",
      "upload_time_iso_8601": "2021-10-30T20:04:13.774739Z",
      "url": "https://files.pythonhosted.org/packages/64/bb/10c9ed26c04806076bac88715cf0acd82183d46a9f3d21a43f36a576f569/pyscfg-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}