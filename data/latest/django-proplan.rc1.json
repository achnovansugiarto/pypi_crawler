{
  "info": {
    "author": "Grigoriy Kramarenko",
    "author_email": "root@rosix.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Natural Language :: Russian",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "=======\nProplan\n=======\n\nDjango application to assign a tasks, defining bugs and planning of your\nproject.\n\n\nInstallation\n------------\n\n.. code-block:: shell\n\n    pip3 install django-proplan\n\n\nQuick start\n-----------\n\n1. Add \"proplan\" to your INSTALLED_APPS setting like this:\n\n.. code-block:: python\n\n    INSTALLED_APPS = [\n        ...\n        'proplan',\n    ]\n\n2. Include the polls URLconf in your project urls.py like this:\n\n.. code-block:: python\n\n    path('plan/', include('proplan.urls')),\n\n3. Run `python3 manage.py migrate` to create the Proplan models.\n\n4. Run `python3 manage.py createsuperuser` to create the user if you don't\n   have one.\n\n5. Start the development server and visit http://127.0.0.1:8000/admin/\n   to login (you'll need the Admin app enabled).\n\n6. Visit http://127.0.0.1:8000/plan/ to create your plan of work on project.\n\n\nAutomatic Bug System\n--------------------\n\nThe Proplan allows you to enable automatic publication of errors that have\noccurred in the project through ABS - Automatic Bug System. There are 2\nways to do this:\n\n1. Logging errors directly to server.\n2. Sending errors through API.\n\n\nLogging errors\n~~~~~~~~~~~~~~\n\nConnect \"proplan.log.ABSHandler\" to your LOGGING setting like this:\n\n.. code-block:: python\n\n    LOGGING = {\n        'version': 1,\n        'disable_existing_loggers': False,\n        ...\n        'handlers': {\n            ...\n            'abs': {\n                'class': 'proplan.log.ABSHandler',\n                'level': 'ERROR',\n            }\n        },\n        'loggers': {\n            ...\n            'django': {\n                'handlers': ['abs'],\n                'level': 'ERROR',\n            },\n        },\n    }\n\n\nSending errors\n~~~~~~~~~~~~~~\n\n1. Add \"ABS_KEY\" to your PROPLAN setting like this:\n\n.. code-block:: python\n\n    PROPLAN = {\n        ...\n        'ABS_KEY': 'cookie-supported-key',\n    }\n\n2. Make POST response with data of bug to API:\n\n.. code-block:: shell\n\n    curl -H 'Cookie: proplanabs=cookie-supported-key' \\\n    --data-urlencode 'title=Bug in mobile app&message=More...' \\\n    http://127.0.0.1:8000/plan/abs/create/\n\n\nSettings\n--------\n\nAll next settings must be within the dictionary `PROPLAN`, when you\ndefine them in the file settings.py\n\nACCESS_FUNCTION\n~~~~~~~~~~~~~~~\n\nFunction that checks access to resources. You may want to use:\n\n1. `proplan.access.authenticated` - for authenticated users.\n2. `proplan.access.staff` - for employers and superusers.\n3. `proplan.access.superuser` - for superusers only.\n4. `proplan.access.view_thread` - for users with view permission for Thread\n   model.\n5. any custom function.\n\nThe default is the internal function `proplan.access.view_thread`.\n\nABS_KEY\n~~~~~~~\n\nThe options for Automatic Bug System. While there is no key, the system does\nnot work. By default no key.\n\nABS_COOKIE_NAME\n~~~~~~~~~~~~~~~\n\nThe cookie name for checking the ABS key. By default is `proplanabs`.\n\nATTACH_UPLOAD_PATH\n~~~~~~~~~~~~~~~~~~\n\nPath to uploading files. By default is:\n\n.. code-block:: python\n\n    'proplan/attaches/%(date)s/%(code)s/%(filename)s'\n\nATTACH_THUMB_SIZE\n~~~~~~~~~~~~~~~~~\n\nThe size of the thumbnails for attached images. By default is:\n\n.. code-block:: python\n\n    (300, 300)\n\nATTACH_THUMB_EXTENSIONS\n~~~~~~~~~~~~~~~~~~~~~~~\n\nList of recognized image extensions to be previewed. By default is:\n\n.. code-block:: python\n\n    ['.png', '.jpg', '.jpeg', '.bmp']\n\n\nPRIORITIES\n~~~~~~~~~~\n\nList of recognized image extensions to be previewed. By default is:\n\n.. code-block:: python\n\n    [\n        (1, _('low')),\n        (2, _('normal')),\n        (3, _('high')),\n        (4, _('urgent')),\n        (5, _('immediate')),\n    ]\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/djbaldey/django-proplan/",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-proplan",
    "package_url": "https://pypi.org/project/django-proplan/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-proplan/",
    "project_urls": {
      "Homepage": "https://gitlab.com/djbaldey/django-proplan/"
    },
    "release_url": "https://pypi.org/project/django-proplan/0.0.1.dev20190419055027/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django application to assign the tasks and planning of your project.",
    "version": "0.0.1.dev20190419055027",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5163451,
  "releases": {
    "0.0.1.dev20190419055027": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ac8e98ed9dfe3f10452294c01726e37907ae8a62a1237f03d120261b7c6ecdc",
          "md5": "6613e6fc0918c50f4c533b1e7cb5c8dc",
          "sha256": "7c49f7061ad3b3c678648c488b0f331b43c6b408249bef4a8550321237e655c7"
        },
        "downloads": -1,
        "filename": "django-proplan-0.0.1.dev20190419055027.tar.gz",
        "has_sig": false,
        "md5_digest": "6613e6fc0918c50f4c533b1e7cb5c8dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1290313,
        "upload_time": "2019-04-19T05:53:12",
        "upload_time_iso_8601": "2019-04-19T05:53:12.748458Z",
        "url": "https://files.pythonhosted.org/packages/2a/c8/e98ed9dfe3f10452294c01726e37907ae8a62a1237f03d120261b7c6ecdc/django-proplan-0.0.1.dev20190419055027.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ac8e98ed9dfe3f10452294c01726e37907ae8a62a1237f03d120261b7c6ecdc",
        "md5": "6613e6fc0918c50f4c533b1e7cb5c8dc",
        "sha256": "7c49f7061ad3b3c678648c488b0f331b43c6b408249bef4a8550321237e655c7"
      },
      "downloads": -1,
      "filename": "django-proplan-0.0.1.dev20190419055027.tar.gz",
      "has_sig": false,
      "md5_digest": "6613e6fc0918c50f4c533b1e7cb5c8dc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1290313,
      "upload_time": "2019-04-19T05:53:12",
      "upload_time_iso_8601": "2019-04-19T05:53:12.748458Z",
      "url": "https://files.pythonhosted.org/packages/2a/c8/e98ed9dfe3f10452294c01726e37907ae8a62a1237f03d120261b7c6ecdc/django-proplan-0.0.1.dev20190419055027.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}