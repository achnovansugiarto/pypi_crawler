{
  "info": {
    "author": "Frederic vB",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# print-nested-data-python\nBeautiful prints for nested data (iterables) in python.\n\n## How to use it?\n### Installation\nInstall it using ```pip install beautiful-prints```\n\n### Usage\nYou can either use [`beautifulPrint`](https://github.com/FredVB1/beautiful-prints-python/blob/9df65d6fb5b397b72305d1abff3ef3953e09e556/beautiful_prints.py#L3)\nto directly write the formatted string to the current system output (console) or \n[`generateBeautifulString`](https://github.com/FredVB1/beautiful-prints-python/blob/9df65d6fb5b397b72305d1abff3ef3953e09e556/beautiful_prints.py#L33)\nto get the formatted string and mess around with it:\n```\nbeautifullyFormatedString = generateBeautifulString(yourNestedData)\n```\nOutput it directly:\n```\nbeautifulPrint(yourNestedData)\n```\nBoth functions have the optional parameters `maxItemsPerLine` and `indent`. The former to set the maximum items per \nline (default = 5) and the latter to set the indent (default = 4). \n\n## What's the concept?\nThe concept is to print nested data in a json like format, but different ;D\n\n### A quick example:\n```\nnestedData = {\"key1\": [1, 2, 3, 4], \"key2\": [1, 2, 3, 4]}\n```\nbeautiful output using [`beautifulPrint`](https://github.com/FredVB1/beautiful-prints-python/blob/9df65d6fb5b397b72305d1abff3ef3953e09e556/beautiful_prints.py#L3):\n```\n{\n    \"key1\": [1, 2, 3, 4], \n    \"key2\": [1, 2, 3, 4]\n}\n```\nNow this isn't quite json like, right? Json formatted using [`json.dumps`](https://docs.python.org/3/library/json.html), \nit would look like this:\n```\n{\n    \"key1\": [\n        1, \n        2, \n        3, \n        4\n    ], \n    \"key2\": [\n        1, \n        2, \n        3, \n        4\n    ]\n}\n```\nYes. This is because the items from the nested data are only printed into the next line if either of their sub data is \nequally a nested data type or the length of it exceeds the maximum items count per line.\n\n### Currently supported nested data types\n* lists\n* tuples\n* dicts\n* sets\n* frozensets\n\nNote: There won't be raised an error if the used data type is not listed. It'll work, but it will probably be ugly. \nAdditionally, any not iterable sub data type such as\n[`numpy.int64`](https://numpy.org/doc/stable/reference/arrays.scalars.html#numpy.int64) is supported.\n\n## Examples\nAn example using a Dict containing strings as keys and lists out of tuples, sets and frozensets as values\n```\nexampleDict = {\n    \"key1\": [\n        [\n            (\"key_1_list1_tuple1_1\", \"key_1_list1_tuple1_2\"),\n            {\"key_1_list1_tuple2_1\", \"key_1_list1_tuple2_2\"},  # Here we have a set ;)\n            frozenset({\"key_1_list1_tuple3_1\", \"key_1_list1_tuple3_2\"}),  # And here a frozenset ;)\n            (\"key_1_list1_tuple4_1\", \"key_1_list1_tuple4_2\"),\n            (\"key_1_list1_tuple5_1\", \"key_1_list1_tuple5_2\")\n        ],\n        [\n            (\"key_1_list2_tuple1_1\", \"key_1_list2_tuple1_2\"),\n            (\"key_1_list2_tuple2_1\", \"key_1_list2_tuple2_2\"),\n            (\"key_1_list2_tuple3_1\", \"key_1_list2_tuple3_2\"),\n            (\"key_1_list2_tuple4_1\", \"key_1_list2_tuple4_2\"),\n            (\"key_1_list2_tuple5_1\", \"key_1_list2_tuple5_2\")\n        ]\n    ],\n    \"key2\": [\n        (\n            \"key_2_list1_tuple1_1\",\n            \"key_2_list1_tuple1_2\",\n            \"key_2_list1_tuple1_3\",\n            \"key_2_list1_tuple1_4\",\n            \"key_2_list1_tuple1_5\",\n            \"key_2_list1_tuple1_6\"\n        ),\n        (\"key_2_list1_tuple2_1\", \"key_2_list1_tuple2_2\"),\n        (\"key_2_list1_tuple3_1\", \"key_2_list1_tuple3_2\"),\n        (\"key_2_list1_tuple4_1\", \"key_2_list1_tuple4_2\"),\n        (\"key_2_list1_tuple5_1\", \"key_2_list1_tuple5_2\")\n    ]\n}\n```\nOutput without formatting:\n```\n{'key1': [[('key_1_list1_tuple1_1', 'key_1_list1_tuple1_2'), {'key_1_list1_tuple2_2', 'key_1_list1_tuple2_1'}, frozenset({'key_1_list1_tuple3_1', 'key_1_list1_tuple3_2'}), ('key_1_list1_tuple4_1', 'key_1_list1_tuple4_2'), ('key_1_list1_tuple5_1', 'key_1_list1_tuple5_2')], [('key_1_list2_tuple1_1', 'key_1_list2_tuple1_2'), ('key_1_list2_tuple2_1', 'key_1_list2_tuple2_2'), ('key_1_list2_tuple3_1', 'key_1_list2_tuple3_2'), ('key_1_list2_tuple4_1', 'key_1_list2_tuple4_2'), ('key_1_list2_tuple5_1', 'key_1_list2_tuple5_2')]], 'key2': [('key_2_list1_tuple1_1', 'key_2_list1_tuple1_2', 'key_2_list1_tuple1_3', 'key_2_list1_tuple1_4', 'key_2_list1_tuple1_5', 'key_2_list1_tuple1_6'), ('key_2_list1_tuple2_1', 'key_2_list1_tuple2_2'), ('key_2_list1_tuple3_1', 'key_2_list1_tuple3_2'), ('key_2_list1_tuple4_1', 'key_2_list1_tuple4_2'), ('key_2_list1_tuple5_1', 'key_2_list1_tuple5_2')]}\n```\nOutput using [`beautifulPrint`](https://github.com/FredVB1/beautiful-prints-python/blob/9df65d6fb5b397b72305d1abff3ef3953e09e556/beautiful_prints.py#L3):\n```\n{\n     \"key1\": [\n        [\n            ('key_1_list1_tuple1_1', 'key_1_list1_tuple1_2'),\n            {'key_1_list1_tuple2_2', 'key_1_list1_tuple2_1'},\n            frozenset({'key_1_list1_tuple3_1', 'key_1_list1_tuple3_2'}),\n            ('key_1_list1_tuple4_1', 'key_1_list1_tuple4_2'),\n            ('key_1_list1_tuple5_1', 'key_1_list1_tuple5_2')\n        ],\n        [\n            ('key_1_list2_tuple1_1', 'key_1_list2_tuple1_2'),\n            ('key_1_list2_tuple2_1', 'key_1_list2_tuple2_2'),\n            ('key_1_list2_tuple3_1', 'key_1_list2_tuple3_2'),\n            ('key_1_list2_tuple4_1', 'key_1_list2_tuple4_2'),\n            ('key_1_list2_tuple5_1', 'key_1_list2_tuple5_2')\n        ]\n    ],\n     \"key2\": [\n        (\n            \"key_2_list1_tuple1_1\",\n            \"key_2_list1_tuple1_2\",\n            \"key_2_list1_tuple1_3\",\n            \"key_2_list1_tuple1_4\",\n            \"key_2_list1_tuple1_5\",\n            \"key_2_list1_tuple1_6\"\n        ),\n        ('key_2_list1_tuple2_1', 'key_2_list1_tuple2_2'),\n        ('key_2_list1_tuple3_1', 'key_2_list1_tuple3_2'),\n        ('key_2_list1_tuple4_1', 'key_2_list1_tuple4_2'),\n        ('key_2_list1_tuple5_1', 'key_2_list1_tuple5_2')\n    ]\n}\n```\nNow, what about [`pprint`](https://docs.python.org/3/library/pprint.html)?\nWell, see for your self:\n```\n{'key1': [[('key_1_list1_tuple1_1', 'key_1_list1_tuple1_2'),\n           {'key_1_list1_tuple2_2', 'key_1_list1_tuple2_1'},\n           frozenset({'key_1_list1_tuple3_1', 'key_1_list1_tuple3_2'}),\n           ('key_1_list1_tuple4_1', 'key_1_list1_tuple4_2'),\n           ('key_1_list1_tuple5_1', 'key_1_list1_tuple5_2')],\n          [('key_1_list2_tuple1_1', 'key_1_list2_tuple1_2'),\n           ('key_1_list2_tuple2_1', 'key_1_list2_tuple2_2'),\n           ('key_1_list2_tuple3_1', 'key_1_list2_tuple3_2'),\n           ('key_1_list2_tuple4_1', 'key_1_list2_tuple4_2'),\n           ('key_1_list2_tuple5_1', 'key_1_list2_tuple5_2')]],\n 'key2': [('key_2_list1_tuple1_1',\n           'key_2_list1_tuple1_2',\n           'key_2_list1_tuple1_3',\n           'key_2_list1_tuple1_4',\n           'key_2_list1_tuple1_5',\n           'key_2_list1_tuple1_6'),\n          ('key_2_list1_tuple2_1', 'key_2_list1_tuple2_2'),\n          ('key_2_list1_tuple3_1', 'key_2_list1_tuple3_2'),\n          ('key_2_list1_tuple4_1', 'key_2_list1_tuple4_2'),\n          ('key_2_list1_tuple5_1', 'key_2_list1_tuple5_2')]}\n```\nAbove is the output when using `pprint` from the [`pprint`](https://docs.python.org/3/library/pprint.html) module \nwithout changing any default values and passing parameters. [`beautifulPrint`](https://github.com/FredVB1/beautiful-prints-python/blob/9df65d6fb5b397b72305d1abff3ef3953e09e556/beautiful_prints.py#L3)\nsimply works by default and is easy...\n\nAnd what about [`json.dumps`](https://docs.python.org/3/library/json.html)?\nWell if you don't need tuples or sets or frozensets or any 'special' data type such as \n[`numpy.int64`](https://numpy.org/doc/stable/reference/arrays.scalars.html#numpy.int64) you can use it, though have a \nlook under [A quick example](#A quick example:) and decide for yourself what you find more beautiful.\nÂ¯\\_(ãƒ„)_/Â¯\n```\n'json.dumps' won't work with this example :(\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FredVB1/print-nested-data-python.git",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "beautiful-prints",
    "package_url": "https://pypi.org/project/beautiful-prints/",
    "platform": "",
    "project_url": "https://pypi.org/project/beautiful-prints/",
    "project_urls": {
      "Homepage": "https://github.com/FredVB1/print-nested-data-python.git"
    },
    "release_url": "https://pypi.org/project/beautiful-prints/0.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "An easy way to make beautiful prints of nested data in python",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10381336,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e79a52c5d85843ffcb37595b4d6629d82861b19cc6871946fde12f59808b521c",
          "md5": "23654e1e6ade9953de0a2506e1e40432",
          "sha256": "e4e3d970518afd9625f882282a3bdc14acd534967227bc020175208bc33ffe78"
        },
        "downloads": -1,
        "filename": "beautiful_prints-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23654e1e6ade9953de0a2506e1e40432",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3734,
        "upload_time": "2021-05-01T21:11:12",
        "upload_time_iso_8601": "2021-05-01T21:11:12.813381Z",
        "url": "https://files.pythonhosted.org/packages/e7/9a/52c5d85843ffcb37595b4d6629d82861b19cc6871946fde12f59808b521c/beautiful_prints-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0ab52676e8383b1d92b99af2250e340654531fa598a8e079abe968501087573",
          "md5": "6731aaadc46e4f26bfacf3cc397263e7",
          "sha256": "244a6007324f387af635efa1a60588c0b3951aab794201f473ed48d1e9660768"
        },
        "downloads": -1,
        "filename": "beautiful-prints-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6731aaadc46e4f26bfacf3cc397263e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4194,
        "upload_time": "2021-05-01T21:11:14",
        "upload_time_iso_8601": "2021-05-01T21:11:14.001561Z",
        "url": "https://files.pythonhosted.org/packages/d0/ab/52676e8383b1d92b99af2250e340654531fa598a8e079abe968501087573/beautiful-prints-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25d0b428c197785331d9ae0bc2251a021025690d0d7e552529e02cb7a9e1edf4",
          "md5": "1c6ef42de2a6345c5d6a47a06bf5168b",
          "sha256": "034e91182b94f86ff518e7af3beb74d916e222b51d10c420c86014649e2eb2be"
        },
        "downloads": -1,
        "filename": "beautiful_prints-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c6ef42de2a6345c5d6a47a06bf5168b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3797,
        "upload_time": "2021-05-01T21:30:08",
        "upload_time_iso_8601": "2021-05-01T21:30:08.862377Z",
        "url": "https://files.pythonhosted.org/packages/25/d0/b428c197785331d9ae0bc2251a021025690d0d7e552529e02cb7a9e1edf4/beautiful_prints-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8feef83dfbd656a5654868a304f9d84928e73be18fed19cdcaed8a2e894846d1",
          "md5": "5a0700e7619312c2f41efea2d9b851b2",
          "sha256": "0f2180358302cbf2779408b9702176394f940bea329b8662c196447f415c0c73"
        },
        "downloads": -1,
        "filename": "beautiful-prints-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5a0700e7619312c2f41efea2d9b851b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4255,
        "upload_time": "2021-05-01T21:30:09",
        "upload_time_iso_8601": "2021-05-01T21:30:09.937621Z",
        "url": "https://files.pythonhosted.org/packages/8f/ee/f83dfbd656a5654868a304f9d84928e73be18fed19cdcaed8a2e894846d1/beautiful-prints-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1a4f734ff110b22f840a330d46065ee76fc1a8dd09770e0d4b35bc5261132fd",
          "md5": "5019069cece2208b0f0a1177a049e2a3",
          "sha256": "6b6fa0808049396b9d1fe76427745288a980c2aaea1b477780167f2d6e0f7c4a"
        },
        "downloads": -1,
        "filename": "beautiful_prints-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5019069cece2208b0f0a1177a049e2a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5090,
        "upload_time": "2021-05-02T10:57:36",
        "upload_time_iso_8601": "2021-05-02T10:57:36.657288Z",
        "url": "https://files.pythonhosted.org/packages/b1/a4/f734ff110b22f840a330d46065ee76fc1a8dd09770e0d4b35bc5261132fd/beautiful_prints-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a41c88c02edc5d4514cf75b49d1c2e09d64aed6ec0f54f224f5872883973065",
          "md5": "656fbc7096b00e557f6001d722068231",
          "sha256": "2232fe86647c49f3264a8c99944602c1610849ac4213b1779d2e5c49f37fad83"
        },
        "downloads": -1,
        "filename": "beautiful-prints-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "656fbc7096b00e557f6001d722068231",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5259,
        "upload_time": "2021-05-02T10:57:37",
        "upload_time_iso_8601": "2021-05-02T10:57:37.542525Z",
        "url": "https://files.pythonhosted.org/packages/6a/41/c88c02edc5d4514cf75b49d1c2e09d64aed6ec0f54f224f5872883973065/beautiful-prints-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c2a9f3576fcae37afceb0d419980b2aa5ab6b582a708788bcbfca50db894afa",
          "md5": "9e1ec07459ad355dbdce97018cb6a22b",
          "sha256": "592acccb4aca29cf1eda7b56dbda2fe5f421360a77924a60dd7601d37440940d"
        },
        "downloads": -1,
        "filename": "beautiful_prints-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e1ec07459ad355dbdce97018cb6a22b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6359,
        "upload_time": "2021-05-17T17:18:44",
        "upload_time_iso_8601": "2021-05-17T17:18:44.593160Z",
        "url": "https://files.pythonhosted.org/packages/0c/2a/9f3576fcae37afceb0d419980b2aa5ab6b582a708788bcbfca50db894afa/beautiful_prints-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd4803ebdb99720ce455b67a7213a1107fd5a4de8c3569a3e867ae94353ef4c4",
          "md5": "a8cbcda5f2fbbe01c663dc3c10677cf4",
          "sha256": "5dd68490d92a411d7626aeb829cb32d1e55e130dc7aff7837148486adcf05aa1"
        },
        "downloads": -1,
        "filename": "beautiful-prints-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a8cbcda5f2fbbe01c663dc3c10677cf4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5268,
        "upload_time": "2021-05-17T17:18:46",
        "upload_time_iso_8601": "2021-05-17T17:18:46.739761Z",
        "url": "https://files.pythonhosted.org/packages/cd/48/03ebdb99720ce455b67a7213a1107fd5a4de8c3569a3e867ae94353ef4c4/beautiful-prints-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c2a9f3576fcae37afceb0d419980b2aa5ab6b582a708788bcbfca50db894afa",
        "md5": "9e1ec07459ad355dbdce97018cb6a22b",
        "sha256": "592acccb4aca29cf1eda7b56dbda2fe5f421360a77924a60dd7601d37440940d"
      },
      "downloads": -1,
      "filename": "beautiful_prints-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9e1ec07459ad355dbdce97018cb6a22b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6359,
      "upload_time": "2021-05-17T17:18:44",
      "upload_time_iso_8601": "2021-05-17T17:18:44.593160Z",
      "url": "https://files.pythonhosted.org/packages/0c/2a/9f3576fcae37afceb0d419980b2aa5ab6b582a708788bcbfca50db894afa/beautiful_prints-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd4803ebdb99720ce455b67a7213a1107fd5a4de8c3569a3e867ae94353ef4c4",
        "md5": "a8cbcda5f2fbbe01c663dc3c10677cf4",
        "sha256": "5dd68490d92a411d7626aeb829cb32d1e55e130dc7aff7837148486adcf05aa1"
      },
      "downloads": -1,
      "filename": "beautiful-prints-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "a8cbcda5f2fbbe01c663dc3c10677cf4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5268,
      "upload_time": "2021-05-17T17:18:46",
      "upload_time_iso_8601": "2021-05-17T17:18:46.739761Z",
      "url": "https://files.pythonhosted.org/packages/cd/48/03ebdb99720ce455b67a7213a1107fd5a4de8c3569a3e867ae94353ef4c4/beautiful-prints-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}