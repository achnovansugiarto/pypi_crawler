{
  "info": {
    "author": "pjongy",
    "author_email": "whdduq218@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# DSerial\n[![PyPI version](https://badge.fury.io/py/dserial.svg)](https://pypi.org/project/dserial/)\n\n\n## 0. Introduction\nDSerial is dictionary serializer with type checking methodology by declared type hinting\n\n## 1. Requirements\npython 3.7 +\n\n## 2. Quick start\n\n### 2.0. Installation\n```shell script\npip3 install dserial\n```\n\n### 2.1. Default type\n```json\n{\n  \"int_variable\": 1234,\n  \"string_variable\": \"string_value\"\n}\n```\nFor serialize above dictionary, data class can be below code\n```python\nclass DefaultData(TypeCheckingDictSerializer):\n    int_variable: int\n    string_variable: str\n```\nand usage:\n```python\n>>> dictionary = {\n  'int_variable': 1234,\n  'string_variable': 'string_value'\n}\n>>> data = DefaultData(dictionary)\n>>> data.int_variable\n1234\n>>> data.string_variable\nstring_value\n```\n\n### 2.2. Nested type\n```json\n{\n  \"int_variable\": 1234,\n  \"string_variable\": \"string_value\",\n  \"nested\": {\n    \"int_variable\": 4321\n  }\n}\n```\nFor serialize above dictionary, data class can be below code\n```python\nclass NestedData(TypeCheckingDictSerializer):\n    int_variable: int\n\nclass DefaultData(TypeCheckingDictSerializer):\n    int_variable: int\n    string_variable: str\n    nested: NestedData\n```\nand usage:\n```python\n>>> dictionary = {\n    'int_variable': 1234,\n    'string_variable': 'string_value',\n    'nested': {\n        'int_variable': 4321\n    }\n}\n>>> data = DefaultData(dictionary)\n>>> data.int_variable\n1234\n>>> data.string_variable\nstring_value\n>>> data.nested.int_variable\n4321\n```\n\n### 2.3. Repeated type\n```json\n{\n  \"int_variable\": 1234,\n  \"string_variable\": \"string_value\",\n  \"nested\": {\n    \"int_variable\": 4321\n  },\n  \"repeated\": [1, 2, 3]\n}\n```\nFor serialize above dictionary, data class can be below code\n```python\nclass RepeatedData(TypeAnnotatedList):\n    @staticmethod\n    def get_type():\n        return int\n\nclass NestedData(TypeCheckingDictSerializer):\n    int_variable: int\n\nclass DefaultData(TypeCheckingDictSerializer):\n    int_variable: int\n    string_variable: str\n    nested: NestedData\n    repeated: RepeatedData\n```\nand usage:\n```python\n>>> dictionary = {\n    'int_variable': 1234,\n    'string_variable': 'string_value',\n    'nested': {\n        'int_variable': 4321\n    },\n    'repeated': [1, 2, 3]\n}\n>>> data = DefaultData(dictionary)\n>>> data.int_variable\n1234\n>>> data.string_variable\nstring_value\n>>> data.nested.int_variable\n4321\n>>> len(data.repeated)\n3\n>>> data.repeated[0]\n1\n```\n\n### 2.4. More complex\n```json\n{\n  \"int_variable\": 1234,\n  \"string_variable\": \"string_value\",\n  \"repeated_nested\": [{\n    \"int_variable\": 3133\n  }, {\n    \"int_variable\": 1337\n  }]\n}\n```\nFor serialize above dictionary, data class can be below code\n```python\nclass NestedData(TypeCheckingDictSerializer):\n    int_variable: int\n\nclass RepeatedData(TypeAnnotatedList):\n    @staticmethod\n    def get_type():\n        return NestedData\n\nclass DefaultData(TypeCheckingDictSerializer):\n    int_variable: int\n    string_variable: str\n    repeated_nested: RepeatedData\n```\nand usage:\n```python\n>>> dictionary = {\n    'int_variable': 1234,\n    'string_variable': 'string_value',\n    'repeated_nested': [{\n        'int_variable': 3133\n    }, {\n        'int_variable': 1337\n    }]\n}\n>>> data = DefaultData(dictionary)\n>>> data.int_variable\n1234\n>>> data.string_variable\nstring_value\n>>> len(data.repeated_nested)\n3\n>>> data.repeated[0].int_variable\n3133\n```\n\n\n## 3. Test\n```shell script\n> dserial$ python3 -m tests\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pjongy/dserial",
    "keywords": "serialize,type",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dserial",
    "package_url": "https://pypi.org/project/dserial/",
    "platform": "",
    "project_url": "https://pypi.org/project/dserial/",
    "project_urls": {
      "Homepage": "https://github.com/pjongy/dserial"
    },
    "release_url": "https://pypi.org/project/dserial/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Python data serializer with type checking",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6530331,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f84a65dc5fd6b7392523a41470475fe5e003ba47bad0f5ecb3a500fbcc4566a8",
          "md5": "0d6fc3e7bea1ca355b74bc07e828f8d1",
          "sha256": "0169d3654d3dad73e8cb8e15d8dd95995de665f8e9da26bf8a3d48d8cbc048cd"
        },
        "downloads": -1,
        "filename": "dserial-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0d6fc3e7bea1ca355b74bc07e828f8d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3809,
        "upload_time": "2020-01-01T17:35:43",
        "upload_time_iso_8601": "2020-01-01T17:35:43.094043Z",
        "url": "https://files.pythonhosted.org/packages/f8/4a/65dc5fd6b7392523a41470475fe5e003ba47bad0f5ecb3a500fbcc4566a8/dserial-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24fdc24a0ac52a8ca8df76c0fbf73badc943572b4726f3b099f71d952a65977a",
          "md5": "bca032f1da91d9aa3e16def09f0d212a",
          "sha256": "c1830d1e4af8984f97d55ee40221dd393b90ee7885a71f128345b6e2fcc76f1e"
        },
        "downloads": -1,
        "filename": "dserial-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bca032f1da91d9aa3e16def09f0d212a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3845,
        "upload_time": "2020-01-28T05:23:03",
        "upload_time_iso_8601": "2020-01-28T05:23:03.783252Z",
        "url": "https://files.pythonhosted.org/packages/24/fd/c24a0ac52a8ca8df76c0fbf73badc943572b4726f3b099f71d952a65977a/dserial-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "24fdc24a0ac52a8ca8df76c0fbf73badc943572b4726f3b099f71d952a65977a",
        "md5": "bca032f1da91d9aa3e16def09f0d212a",
        "sha256": "c1830d1e4af8984f97d55ee40221dd393b90ee7885a71f128345b6e2fcc76f1e"
      },
      "downloads": -1,
      "filename": "dserial-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "bca032f1da91d9aa3e16def09f0d212a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 3845,
      "upload_time": "2020-01-28T05:23:03",
      "upload_time_iso_8601": "2020-01-28T05:23:03.783252Z",
      "url": "https://files.pythonhosted.org/packages/24/fd/c24a0ac52a8ca8df76c0fbf73badc943572b4726f3b099f71d952a65977a/dserial-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}