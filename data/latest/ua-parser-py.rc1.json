{
  "info": {
    "author": "Vitaliy Boyarsky",
    "author_email": "boyarsky.vitaliy@live.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# UAParser.py\n\n#### fork of [UAParser.js](https://github.com/faisalman/ua-parser-js)\n\n![status](https://github.com/vitalibo/ua-parser-py/actions/workflows/ci.yaml/badge.svg)\n\nPython library to detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n\n# Documentation\n\n## Constructor\n\n* `UAParser([uastring])`\n    * returns new instance\n\n* `UAParser.parse([uastring])`\n    * returns result object `{ 'ua': '', 'browser': {}, 'cpu': {}, 'device': {}, 'engine': {}, 'os': {} }`\n\n## Properties\n\n* `browser`\n    * returns `{ 'name': '', 'version': '' }`\n\n```sh\n# Possible 'browser.name':\n2345Explorer, 360 Browser, Amaya, Android Browser, Arora, Avant, Avast, AVG,\nBIDUBrowser, Baidu, Basilisk, Blazer, Bolt, Brave, Bowser, Camino, Chimera,\nChrome Headless, Chrome WebView, Chrome, Chromium, Comodo Dragon, Dillo,\nDolphin, Doris, Edge, Electron, Epiphany, Facebook, Falkon, Fennec, Firebird,\nFirefox [Reality], Flock, Flow, GSA, GoBrowser, ICE Browser, IE, IEMobile, IceApe, \nIceCat, IceDragon, Iceweasel, Instagram, Iridium, Iron, Jasmine, K-Meleon,\nKindle, Klar, Konqueror, LBBROWSER, Line, Links, Lunascape, Lynx, MIUI Browser,\nMaemo Browser, Maemo, Maxthon, MetaSr Midori, Minimo, Mobile Safari, Mosaic,\nMozilla, NetFront, NetSurf, Netfront, Netscape, NokiaBrowser, Obigo, Oculus Browser,\nOmniWeb, Opera Coast, Opera [Mini/Mobi/Tablet], PaleMoon, PhantomJS, Phoenix, \nPolaris, Puffin, QQ, QQBrowser, QQBrowserLite, Quark, QupZilla, RockMelt, Safari, \nSailfish Browser, Samsung Browser, SeaMonkey, Silk, Skyfire, Sleipnir, Slim, \nSlimBrowser, Swiftfox, Tesla, Tizen Browser, UCBrowser, UP.Browser, Vivaldi, \nWaterfox, WeChat, Weibo, Yandex, baidu, iCab, w3m, Whale Browser...\n\n# 'browser.version' determined dynamically\n```\n\n* `device`\n    * returns `{ 'model': '', 'type': '', 'vendor': '' }`\n\n```sh\n# Possible 'device.type':\nconsole, mobile, tablet, smarttv, wearable, embedded\n\n# Possible 'device.vendor':\nAcer, Alcatel, Amazon, Apple, Archos, ASUS, AT&T, BenQ, BlackBerry, Dell,\nEssential, Fairphone, GeeksPhone, Google, HP, HTC, Huawei, Jolla, Lenovo, LG, \nMeizu, Microsoft, Motorola, Nexian, Nintendo, Nokia, Nvidia, OnePlus, OPPO, Ouya,\nPalm, Panasonic, Pebble, Polytron, Realme, RIM, Roku, Samsung, Sharp, Siemens,\nSony[Ericsson], Sprint, Tesla, Vivo, Vodafone, Xbox, Xiaomi, Zebra, ZTE, ...\n\n# 'device.model' determined dynamically\n```\n\n* `engine`\n    * returns `{ 'name': '', 'version': '' }`\n\n```sh\n# Possible 'engine.name'\nAmaya, Blink, EdgeHTML, Flow, Gecko, Goanna, iCab, KHTML, Links, Lynx, NetFront,\nNetSurf, Presto, Tasman, Trident, w3m, WebKit\n\n# 'engine.version' determined dynamically\n```\n\n* `os`\n    * returns `{ 'name': '', 'version': '' }`\n\n```sh\n# Possible 'os.name'\nAIX, Amiga OS, Android[-x86], Arch, Bada, BeOS, BlackBerry, CentOS, Chromium OS,\nContiki, Fedora, Firefox OS, FreeBSD, Debian, Deepin, DragonFly, elementary OS, \nFuchsia, Gentoo, GhostBSD, GNU, Haiku, HP-UX, Hurd, iOS, Joli, KaiOS, Linpus, Linspire,\nLinux, Mac OS, Maemo, Mageia, Mandriva, Manjaro, MeeGo, Minix, Mint, Morph OS, NetBSD,\nNintendo, OpenBSD, OpenVMS, OS/2, Palm, PC-BSD, PCLinuxOS, Plan9, PlayStation, QNX, \nRaspbian, RedHat, RIM Tablet OS, RISC OS, Sabayon, Sailfish, Series40, Slackware, Solaris, \nSUSE, Symbian, Tizen, Ubuntu, Unix, VectorLinux, WebOS, Windows [Phone/Mobile], Zenwalk, ...\n\n# 'os.version' determined dynamically\n```\n\n* `cpu`\n    * returns `{ 'architecture': '' }`\n\n```sh\n# Possible 'cpu.architecture'\n68k, amd64, arm[64/hf], avr, ia[32/64], irix[64], mips[64], pa-risc, ppc, sparc[64]\n```\n\n* `ua`\n    * returns UA string of current instance\n\n# Usage\n\n```python3\nimport json\nfrom uaparser import UAParser\n\nuastring1 = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/535.2 (KHTML, like Gecko) Ubuntu/11.10 Chromium/15.0.874.106 Chrome/15.0.874.106 Safari/535.2'\nresult = UAParser(uastring1)\n\nprint(result.browser)  # 'browser': {'name': 'Chromium', 'version': '15.0.874.106', 'major': '15'}\nprint(result.device)  # {'vendor': None, 'model': None, 'type': None}\nprint(result.os)  # {'name': 'Ubuntu', 'version': '11.10'}\nprint(result.os.version)  # '11.10'\nprint(result.engine.name)  # 'WebKit'\nprint(result.cpu.architecture)  # 'amd64'\n\nuastring2 = 'Mozilla/5.0 (compatible; Konqueror/4.1; OpenBSD) KHTML/4.1.4 (like Gecko)'\nresult = UAParser.parse(uastring2)\n\nprint(result['browser']['name'])  # 'Konqueror\nprint(result['os'])  # {'name': 'OpenBSD', 'version': None}\nprint(result['engine'])  # {'name': 'KHTML', 'version': '4.1.4'}\n\nuastring3 = 'Mozilla/5.0 (PlayBook; U; RIM Tablet OS 1.0.0; en-US) AppleWebKit/534.11 (KHTML, like Gecko) Version/7.1.0.7 Safari/534.11'\nresult = UAParser.parse(uastring3)\n\nprint(json.dumps(result, indent=4))\n# {\n#   \"ua\": \"Mozilla/5.0 (PlayBook; U; RIM Tablet OS 1.0.0; en-US) AppleWebKit/534.11 (KHTML, like Gecko) Version/7.1.0.7 Safari/534.11\",\n#   \"browser\": {\n#     \"name\": \"Safari\",\n#     \"version\": \"7.1.0.7\",\n#     \"major\": \"7\" // @deprecated\n#   },\n#   \"cpu\": {\n#     \"architecture\": null\n#   },\n#   \"device\": {\n#     \"vendor\": \"RIM\",\n#     \"model\": \"PlayBook\",\n#     \"type\": \"tablet\"\n#   },\n#   \"engine\": {\n#     \"name\": \"WebKit\",\n#     \"version\": \"534.11\"\n#   },\n#   \"os\": {\n#     \"name\": \"RIM Tablet OS\",\n#     \"version\": \"1.0.0\"\n#   }\n# }\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vitalibo/ua-parser-py",
    "keywords": "user-agent parser browser engine os device cpu",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ua-parser-py",
    "package_url": "https://pypi.org/project/ua-parser-py/",
    "platform": "any",
    "project_url": "https://pypi.org/project/ua-parser-py/",
    "project_urls": {
      "Homepage": "https://github.com/vitalibo/ua-parser-py"
    },
    "release_url": "https://pypi.org/project/ua-parser-py/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Python library to detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13751609,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba193215b74c785b6be0633c26bfa5bc706588570ccdc2fa481d710ff2d7cf8d",
          "md5": "999300284dfe3c3f6e66994b204e2c6d",
          "sha256": "226ed57d606e418c02bdc833810012562874ab86835778b30c7442e090c5b133"
        },
        "downloads": -1,
        "filename": "ua_parser_py-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "999300284dfe3c3f6e66994b204e2c6d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16715,
        "upload_time": "2022-05-08T21:04:50",
        "upload_time_iso_8601": "2022-05-08T21:04:50.135933Z",
        "url": "https://files.pythonhosted.org/packages/ba/19/3215b74c785b6be0633c26bfa5bc706588570ccdc2fa481d710ff2d7cf8d/ua_parser_py-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5c5a3009c984875932413622c7ad0db8ae513a026892382f6f4b118a7f97932",
          "md5": "38a2cd881605a37f25ce09117a763ed2",
          "sha256": "73bc74ce99563c5c28de32633662ee199947e6722c4596b3f1b81d70294011f8"
        },
        "downloads": -1,
        "filename": "ua-parser-py-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "38a2cd881605a37f25ce09117a763ed2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13689,
        "upload_time": "2022-05-08T21:04:51",
        "upload_time_iso_8601": "2022-05-08T21:04:51.599590Z",
        "url": "https://files.pythonhosted.org/packages/b5/c5/a3009c984875932413622c7ad0db8ae513a026892382f6f4b118a7f97932/ua-parser-py-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba193215b74c785b6be0633c26bfa5bc706588570ccdc2fa481d710ff2d7cf8d",
        "md5": "999300284dfe3c3f6e66994b204e2c6d",
        "sha256": "226ed57d606e418c02bdc833810012562874ab86835778b30c7442e090c5b133"
      },
      "downloads": -1,
      "filename": "ua_parser_py-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "999300284dfe3c3f6e66994b204e2c6d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 16715,
      "upload_time": "2022-05-08T21:04:50",
      "upload_time_iso_8601": "2022-05-08T21:04:50.135933Z",
      "url": "https://files.pythonhosted.org/packages/ba/19/3215b74c785b6be0633c26bfa5bc706588570ccdc2fa481d710ff2d7cf8d/ua_parser_py-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b5c5a3009c984875932413622c7ad0db8ae513a026892382f6f4b118a7f97932",
        "md5": "38a2cd881605a37f25ce09117a763ed2",
        "sha256": "73bc74ce99563c5c28de32633662ee199947e6722c4596b3f1b81d70294011f8"
      },
      "downloads": -1,
      "filename": "ua-parser-py-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "38a2cd881605a37f25ce09117a763ed2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 13689,
      "upload_time": "2022-05-08T21:04:51",
      "upload_time_iso_8601": "2022-05-08T21:04:51.599590Z",
      "url": "https://files.pythonhosted.org/packages/b5/c5/a3009c984875932413622c7ad0db8ae513a026892382f6f4b118a7f97932/ua-parser-py-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}