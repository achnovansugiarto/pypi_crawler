{
  "info": {
    "author": "Valorum Data",
    "author_email": "info@valorumdata.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# covidcountydata\n\nWelcome to the Python client library documentation for the [Covid County Data](https://covidcountydata.org) (CCD) database.\n\n\n## Installation\n\nThe `covidcountydata` Python package is available on the\n[Python Package Index (pypi)](https://pypi.org/) and can be installed with `pip`.\n\n```python\npip install covidcountydata\n```\n\n## API keys\n\nOur data is free and open for anyone to use (and always will be). Our team agreed that this was\ncentral to our mission when we agreed to begin this project. However, we do find it useful to\nhave information about our users and to see how they use the data for two reasons:\n\n1. It helps us focus and improve the datasets that are seeing the most use.\n2. The number of users, as measured by active API keys, is one metric that we use to show that the\n   project is useful when we are discussing additional grant funding.\n\nWe are grateful to everyone who is willing to register for and use their API key when interacting\nwith our data.\n\nTo register for an API key, you can register [on our website](https://covidcountydata.org#register)\nor from the Python package using the `register` method.\n\n```python\nfrom covidcountydata import Client\n\nc = Client()\nc.register()\n```\n\nYou will be prompted for your email address. After entering a valid email address we will issue\nan API key, store it on your machine, and automatically apply it to all future requests made from\nPython to our servers.\n\nIf at any time you would like to remove your API key, please delete the file `~/.covidcountydata/apikey`.\n\n\n## Data\n\n\n### Datasets\n\nYou can see a list of the available datasets in our API from the Python library by doing:\n\n```python\nfrom covidcountydata import Client\n\nc = Client()\nprint(c.datasets)\n```\n\nFor more information on each of these datasets, we recommend that you visit our\n[data documentation page](https://covidcountydata.org/data/documentation).\n\n\n### Data keys\n\nMany of the datasets in our database are indexed by one or more common \"keys\". These keys are:\n\n- `vintage`: The date and time that the data was downloaded into our database. We collect this\n  because of the rapidly evolving nature of COVID-19 -- It allows us to have a record of when data was\n  changed/corrected/updated.\n- `dt`: The date and time that an observation corresponds to. For series like COVID tests\n  administered this may a daily frequency, but, for others like unemployment it may be a weekly or\n  monthly frequency.\n- `location`: A geographic identifier for the location. For the counties/states in the dataset,\n  this variable corresponds to the Federal Information Processing Standards number.\n\nWhenever two series with common keys are loaded together, they will be merged on their common keys.\n\n\n### Requesting data\n\nRequesting data using the Python client library involves three steps:\n\n\n#### 1. Create a client\n\nTo create a client, use the `Client` class.\n\n```python\nfrom covidcountydata import Client\n\nc = Client()\n```\n\nYou can optionally pass in an API key if you have one (see the section on API keys).\n\n```python\nc = Client(\"my api key\")\n```\n\nIf you have previously registered for an API key on your current machine, it will be loaded and\nused automatically for you.\n\nIn practice you should rarely need to pass the API key by hand unless you are loading the key from\nan environment variable or another source.\n\n\n#### 2. Build a request\n\nEach of the datasets in the API have an associated method.\n\nTo add datasets to the current request, call the `Client.dataset()`method. For example, to add\nthe `covid_us` dataset to the request, you would call:\n\n```python\nc.covid_us(state=\"CA\")\n```\n\nIf you wanted to add another dataset, such as `demographics`, you would simply call that method as\nwell.\n\n```python\nc.demographics()\n```\n\nYou can see that the printed form of the client is updated to show you what the current request\nlooks like by printing the current client.\n\n```python\nprint(c)\n```\n\nTo clear the current request, use `c.reset()`:\n\nSince each dataset will build up a request for the client and return the client itself, we can\nchain together multiple requests. For example, rather than doing the separate commands from above,\nwe could have done.\n\n```python\nc.covid_us(state=\"CA\").demographics()\n```\n\n**Filtering data**\n\nEach of the dataset functions has a number of filters that can be applied.\n\nThese filters allow you to select certain rows and/or columns.\n\nFor example, in the above example we had `c.covid_us(state=\"CA\")`. This instructs the client to\nonly fetch data for geographic regions that are in the state of California.\n\n**NOTE:** If a filter is passed to one dataset in the request but is applicable to other datasets\nin the request, it will be applied to *all* datasets.\n\nFor example in `c.covid_us(state=\"CA\").demographics()` we only specify a `state` filter on the\n`covid_us` dataset, but when the data is collected it will also be applied to `demographics`.\n\nWe do this because we end up doing an inner join on all requested datasets, so when we filter the\nstate in `covid_us` they also get filtered in `demographics`.\n\n\n#### 3. Fetch the data\n\nTo fetch the data, call the `fetch` method from the client.\n\n```python\ndf = c.fetch()\n```\n\nNote that after a successfully request, the client is reset so there are no \"built-up\" requests\nremaining.\n\n\n\n## Examples\n\nWe provide a few simple examples here in the README, but you can find additional examples in the `examples` folder.\n\n**Simple Example: Single dataset for all FIPS**\n\nThe example below loads all within county mobility data.\n\n```python\nimport covidcountydata as ccd\nc = ccd.Client()\n\nc.mobility_devices()\ndf = c.fetch()\n```\n\n\n**Simple Example: Single dataset for single county**\n\nThe example below loads just demographic information for Travis County in Texas.\n\nNotice that we can select a particular geography by specifying the fips code. We can do similar things for any of the keys listed previously.\n\n```python\nc = ccd.Client()\nc.demographics(location=48453)\ndf = c.fetch()\n```\n\n\n**Simple Example: Single dataset for all counties in a state**\n\nThe example below loads just demographic information for all counties in Texas.\n\nNotice that we can select a particular geography by specifying the fips code. We can do similar things for any of they keys listed previously.\n\n```python\nc = ccd.Client()\nc.demographics(state=48)\ndf = c.fetch()\n```\n\n**Simple Example: COVID data since July 1, 2020 for counties in Georgia**\n\nThe example below shows how to filter on both a state and a range of dates, fetching only data for July 1st onwards.\n\n```python\nc = ccd.Client()\nc.covid_us(state=\"GA\", dt=\">=2020-07-01\")\ndf = c.fetch()\n```\n\n\n**Intermediate Example: COVID data since July 1, 2020 for counties in Georgia with county info**\n\nThis is the same example as above, but we also add on the `us_counties` endpoint. This will cause the returned DataFrame to have\ninformation on the counties including county name, state name, county area, county latitude, and county longitude.\n\n```python\nc = ccd.Client()\nc.covid_us(state=\"GA\", dt=\">=2020-07-01\").us_counties()\ndf = c.fetch()\n```\n\n\n**Intermediate Example: Multiple datasets for single county**\n\nThe example below loads covid and demographic data and showcases how to chain calls to multiple datasets together. It will automatically merge and return these datasets.\n\nNote that applying a filter to any of the datasets (in this case `fips=6037`) will apply it to all datasets.\n\n```python\nc = ccd.Client()\n(\n    c\n    .covid_us(location=6037)\n    .demographics()\n)\ndf = c.fetch()\n```\n\n\n**Advanced Example: Multiple datasets with multiple filters and variable selection**\n\nThe example below loads data from three datasets for a particular FIPS code, using a particular date of demographics, and selects certain variables from the datasets.\n\n```python\nc = ccd.Client()\n(\n    c\n    .economic_snapshots(variable=\"GDP_All industry total\")\n    .covid_us(location=6037)\n    .demographics(variable=\"Total population\")\n)\ndf = c.fetch()\n```\n\nThere are more examples in the `covidcountydata/examples.py` file. We encourage you to explore them and to reach out if you have questions!",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CovidCountyData/covidcountydata.py",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "covidcountydata",
    "package_url": "https://pypi.org/project/covidcountydata/",
    "platform": "",
    "project_url": "https://pypi.org/project/covidcountydata/",
    "project_urls": {
      "Bug Reports": "https://github.com/CovidCountyData/covidcountydata.py/issues",
      "Homepage": "https://github.com/CovidCountyData/covidcountydata.py",
      "Source": "https://github.com/CovidCountyData/covidcountydata.py"
    },
    "release_url": "https://pypi.org/project/covidcountydata/0.8.0/",
    "requires_dist": null,
    "requires_python": ">=3.5, <4",
    "summary": "Python client for accessing the COVID County Data database",
    "version": "0.8.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8245277,
  "releases": {
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75c3de92e5fe7376655990f8da645c990c8446e20052a5db3b4164bb7155b943",
          "md5": "5c45282f856a7db010ad499c6c1d7743",
          "sha256": "26ee8601607b96d554a05274098e3e495f660aeb98f44f400e5acc2ae22c6a6c"
        },
        "downloads": -1,
        "filename": "covidcountydata-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5c45282f856a7db010ad499c6c1d7743",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 10481,
        "upload_time": "2020-07-31T22:03:42",
        "upload_time_iso_8601": "2020-07-31T22:03:42.414777Z",
        "url": "https://files.pythonhosted.org/packages/75/c3/de92e5fe7376655990f8da645c990c8446e20052a5db3b4164bb7155b943/covidcountydata-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09df87fce7a4541f75c7f6bf0027b4b2d39bed63e38dd2262f9601ee5545b081",
          "md5": "2c5302c5ce229750a1c4aeccf3cf1695",
          "sha256": "da3ad5d66f7a6fbca419b52af7f27e3ed1fdb1bf83eb72123005f7d8dc03a000"
        },
        "downloads": -1,
        "filename": "covidcountydata-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2c5302c5ce229750a1c4aeccf3cf1695",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 14073,
        "upload_time": "2020-08-25T17:05:50",
        "upload_time_iso_8601": "2020-08-25T17:05:50.596275Z",
        "url": "https://files.pythonhosted.org/packages/09/df/87fce7a4541f75c7f6bf0027b4b2d39bed63e38dd2262f9601ee5545b081/covidcountydata-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbbec37a626768647ec72215953781d3f638d10774bc0a4f4f69fa9bc8016950",
          "md5": "325a9db5c5fc03d12c5154fdb59949d4",
          "sha256": "8b46231d82b0bc9427f9387ace29c9aee36576cb38080a71781fd3db9c173966"
        },
        "downloads": -1,
        "filename": "covidcountydata-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "325a9db5c5fc03d12c5154fdb59949d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 13963,
        "upload_time": "2020-09-03T16:02:40",
        "upload_time_iso_8601": "2020-09-03T16:02:40.567786Z",
        "url": "https://files.pythonhosted.org/packages/db/be/c37a626768647ec72215953781d3f638d10774bc0a4f4f69fa9bc8016950/covidcountydata-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66c46a9aeb5bc1a8099c0eea29be846373954799ca67099a7dbec32752aa61af",
          "md5": "824cacf6ec08a35f0f08643a2b2933ef",
          "sha256": "6a7beace159f0223f35dfe94b0901802f16f7300be5b129b9a5307d6ecd4d4c0"
        },
        "downloads": -1,
        "filename": "covidcountydata-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "824cacf6ec08a35f0f08643a2b2933ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 14552,
        "upload_time": "2020-09-22T16:03:04",
        "upload_time_iso_8601": "2020-09-22T16:03:04.834783Z",
        "url": "https://files.pythonhosted.org/packages/66/c4/6a9aeb5bc1a8099c0eea29be846373954799ca67099a7dbec32752aa61af/covidcountydata-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "66c46a9aeb5bc1a8099c0eea29be846373954799ca67099a7dbec32752aa61af",
        "md5": "824cacf6ec08a35f0f08643a2b2933ef",
        "sha256": "6a7beace159f0223f35dfe94b0901802f16f7300be5b129b9a5307d6ecd4d4c0"
      },
      "downloads": -1,
      "filename": "covidcountydata-0.8.0.tar.gz",
      "has_sig": false,
      "md5_digest": "824cacf6ec08a35f0f08643a2b2933ef",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5, <4",
      "size": 14552,
      "upload_time": "2020-09-22T16:03:04",
      "upload_time_iso_8601": "2020-09-22T16:03:04.834783Z",
      "url": "https://files.pythonhosted.org/packages/66/c4/6a9aeb5bc1a8099c0eea29be846373954799ca67099a7dbec32752aa61af/covidcountydata-0.8.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}