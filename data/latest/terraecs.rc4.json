{
  "info": {
    "author": "Gunter Grodotzki",
    "author_email": "gunter@grodotzki.co.za",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# terraecs\n\n[![Build Status](https://travis-ci.org/lifeofguenter/terraecs.svg?branch=master)](https://travis-ci.org/lifeofguenter/terraecs)\n[![PyPI](https://img.shields.io/pypi/v/terraecs.svg)](https://pypi.org/project/terraecs/)\n[![License](https://img.shields.io/github/license/lifeofguenter/terraecs.svg)](LICENSE)\n\nTerraecs is a simple cli tool to run a once-off [ECS/Fargate](https://aws.amazon.com/fargate/) task that relies on a [terraformed](https://www.terraform.io/) infrastructure.\n\n_Preview release, please do not use for anything important!_\n\n## Motivation\n\n* I want to run a command (be it ror-rake, laravel-artisan, etc.) in a Fargate environment\n* I use terraform for IaC, and do not want to deviate from that\n* I also do not want to think about infrastructure when running a command, as it should be already setup via terraform\n* These once-off tasks are dirty, I want to have direct feedback on how it went (logs + exit status)\n\n## Installation\n\n```bash\n$ pip install terraecs\n```\n\n## Usage\n\nYou will need to create a Fargate task module to create a task-definition and any other supporting resources (networking/cloudwatchlogs). At a minimum the module will have to output the following:\n\n```hcl\noutput \"cluster_id\" {\n  value = \"${var.cluster_id}\"\n}\n\noutput \"subnets\" {\n  value = \"${var.subnets}\"\n}\n\noutput \"security_group_id\" {\n  value = \"${aws_security_group.main.id}\"\n}\n\noutput \"task_definition_arn\" {\n  value = \"${aws_ecs_task_definition.main.arn}\"\n}\n```\n\nTerraform 0.12 and later intentionally track only root module outputs in the state. To expose module outputs for external consumption, you must export them from the root module using an output block, which as of 0.12 can now be done for a single module all in one output:\n\n```hcl\noutput \"custom_ecs_task\" {\n  value = module.custom_ecs_task\n}\n```\n\nOnce you have applied your terraform config, pull the output into a json:\n\n```bash\n$ terraform output -json custom_ecs_task > output.json\n```\n\nNow you can use `terraecs` to run any command based off the above task-definition:\n\n```bash\n$ terraecs -f output.json run \"command\" \"arg1\" \"arg2\"\n```\n\n## Output\n\nThe output can look something like this:\n\n```bash\n‚ùØ AWS_PROFILE=staging terraecs -f output.json run artisan --help\n2019-04-10 08:14:01,884 botocore.credentials [INFO] Found credentials in shared credentials file: ~/.aws/credentials\n2019-04-10 08:14:03,893 root [INFO] launched task: arn:aws:ecs:eu-west-1:1111111111111:task/staging-main/4544cfd6f10e4ff0b16458666362cbd9\n2019-04-10 08:14:04,069 root [INFO] PROVISIONING\n2019-04-10 08:14:25,461 root [INFO] PENDING\n2019-04-10 08:15:51,642 root [INFO] DEPROVISIONING\n2019-04-10 08:16:13,632 root [INFO] STOPPED\nDescription:\n  Lists commands\nUsage:\n  list [options] [--] [<namespace>]\nArguments:\n  namespace            The namespace name\nOptions:\n      --raw            To output raw command list\n      --format=FORMAT  The output format (txt, xml, json, or md) [default: \"txt\"]\nHelp:\n  The list command lists all commands:\n\n    php artisan list\n\n  You can also display the commands for a specific namespace:\n\n    php artisan list test\n\n  You can also output the information in other formats by using the --format option:\n\n    php artisan list --format=xml\n\n  It's also possible to get raw list of commands (useful for embedding command runner):\n\n    php artisan list --raw\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lifeofguenter/terraecs",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "terraecs",
    "package_url": "https://pypi.org/project/terraecs/",
    "platform": "",
    "project_url": "https://pypi.org/project/terraecs/",
    "project_urls": {
      "Homepage": "https://github.com/lifeofguenter/terraecs"
    },
    "release_url": "https://pypi.org/project/terraecs/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "A simple Fargate after Terraform runner.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6501856,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ccb0c0536daf687821bab7b062755992bd6fe81df94fed2cfa853c53474d12b",
          "md5": "37ab962503e7d15a7a1a9e882ef85091",
          "sha256": "5ad0f47bcc42970b1b17048c146432ca2d5b5ac40e288b142df17c0e2f2481c4"
        },
        "downloads": -1,
        "filename": "terraecs-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "37ab962503e7d15a7a1a9e882ef85091",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 1617,
        "upload_time": "2019-04-09T22:45:17",
        "upload_time_iso_8601": "2019-04-09T22:45:17.884465Z",
        "url": "https://files.pythonhosted.org/packages/1c/cb/0c0536daf687821bab7b062755992bd6fe81df94fed2cfa853c53474d12b/terraecs-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63b6d3a62cd0f67e10b6d57996afa6bce69845ef191952bc973d0fb7915863be",
          "md5": "66a6daf4f0552acb02e642a88ec7edbb",
          "sha256": "e52951bf9a16f7eba18e982208c9a60ed703e2f776f3026de3653625fcf5a793"
        },
        "downloads": -1,
        "filename": "terraecs-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "66a6daf4f0552acb02e642a88ec7edbb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 3002,
        "upload_time": "2019-04-09T22:59:08",
        "upload_time_iso_8601": "2019-04-09T22:59:08.096574Z",
        "url": "https://files.pythonhosted.org/packages/63/b6/d3a62cd0f67e10b6d57996afa6bce69845ef191952bc973d0fb7915863be/terraecs-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98681212dd0c0fbd2872501d6a530a0f44d5d6d741e5b1b02ef11f0ea2b8ce0f",
          "md5": "50c85ad43f83794e6d8dde65eacdfd6d",
          "sha256": "c80831555afb0ef694aaa23cd1c11a5b8d61317c3c4943e9191b1cadf0983160"
        },
        "downloads": -1,
        "filename": "terraecs-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "50c85ad43f83794e6d8dde65eacdfd6d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 3012,
        "upload_time": "2019-04-09T23:41:34",
        "upload_time_iso_8601": "2019-04-09T23:41:34.777239Z",
        "url": "https://files.pythonhosted.org/packages/98/68/1212dd0c0fbd2872501d6a530a0f44d5d6d741e5b1b02ef11f0ea2b8ce0f/terraecs-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0624dd5747d5c1068fd9d0bcf6490767d2a3203199db9cb7e18c04256244e992",
          "md5": "96aa530764e0ba881f011efc03481ecd",
          "sha256": "f9fa68ebc20dada5ff11938e9becdcfc516d2ea8bf977b2d996b850ce19f3dae"
        },
        "downloads": -1,
        "filename": "terraecs-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "96aa530764e0ba881f011efc03481ecd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 4295,
        "upload_time": "2020-01-22T18:44:27",
        "upload_time_iso_8601": "2020-01-22T18:44:27.803522Z",
        "url": "https://files.pythonhosted.org/packages/06/24/dd5747d5c1068fd9d0bcf6490767d2a3203199db9cb7e18c04256244e992/terraecs-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0624dd5747d5c1068fd9d0bcf6490767d2a3203199db9cb7e18c04256244e992",
        "md5": "96aa530764e0ba881f011efc03481ecd",
        "sha256": "f9fa68ebc20dada5ff11938e9becdcfc516d2ea8bf977b2d996b850ce19f3dae"
      },
      "downloads": -1,
      "filename": "terraecs-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "96aa530764e0ba881f011efc03481ecd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 4295,
      "upload_time": "2020-01-22T18:44:27",
      "upload_time_iso_8601": "2020-01-22T18:44:27.803522Z",
      "url": "https://files.pythonhosted.org/packages/06/24/dd5747d5c1068fd9d0bcf6490767d2a3203199db9cb7e18c04256244e992/terraecs-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}