{
  "info": {
    "author": "Fabien C. Y. Benureau",
    "author_email": "fabien.benureau@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Life"
    ],
    "description": "# Explanation of Fork\nThis is a fork of [Leabra](https://github.com/benureau/leabra), to be uploaded for distribution on PyPi. The package is completely unchanged from the original with the exception of the following modifications: \n  1) The name of the package was changed, so that the original authors may use the original name if they decide to upload to PyPi at some point. \n  2) This section was added to the readme.\n  3) Several trivial modifications were made to setup.py for compatibility with PyPi.\n  4) The version number was incremented to account for the above listed changes.\n\n# Leabra\n\n[![Binder](http://mybinder.org/badge.svg)](https://beta.mybinder.org/v2/gh/benureau/leabra/master)  [![Build Status](https://travis-ci.org/benureau/leabra.svg?branch=master)](https://travis-ci.org/benureau/leabra)\n\nThis repository holds a Python implementation of the [Leabra](https://grey.colorado.edu/emergent/index.php/Leabra) (Local, Error-driven and Associative, Biologically Realistic Algorithm) framework. The reference implementation for Leabra is in [emergent](https://grey.colorado.edu/emergent/index.php/Main_Page) developped by the [Computational Cognitive Neuroscience Laboratory](https://grey.colorado.edu/CompCogNeuro/index.php/CCNLab) at the [University of Colorado Boulder](http://www.colorado.edu/). This Python implementation targets [emergent 8.1.0](https://grey.colorado.edu/emergent/index.php/Changes_8.1.0), and only implements the rate-coded mode â€”which includes some spiking behavior, but is different from the discrete spiking mode (which is not implemented).\n\nThis work is the fruit of the collaboration of the [Computational Cognitive Neuroscience Laboratory](https://grey.colorado.edu/CompCogNeuro/index.php/CCNLab) at the [University of Colorado Boulder](http://www.colorado.edu/) and the [Mnemosyne Project-Team]() at [Inria Bordeaux, France](https://www.inria.fr/en/centre/bordeaux).\n\n\n## Status & Roadmap\n\nThis is a work in progress. Most of the basic algorithms of Leabra are implemented, but some mechanisms are\nstill missing. While the current implementation passes several quantitative tests of equivalence with\nthe emergent implementation (8.1.1, r11060), the number and diversity of tests is too low to guarantee that\nthe implementation is correct yet.\n\n- [x] Unit, Layer, Connection, Network class\n- [x] XCAL learning rule\n- [x] Basic notebook examples\n- [x] Quantitative equivalence with emergent\n- [x] Neuron tutorial notebook\n- [ ] Inhibition tutorial notebook\n- [ ] Weight balance mechanism\n\n\n## Installation & Usage\n\nInstall dependencies:\n```bash\npip install -r requirements.txt\n```\n\nThen, launch Jupyter to see usage examples:\n```bash\njupyter notebook index.ipynb\n```\n\n\n## Run Notebooks Online\n\n[Notebooks can be run online](https://beta.mybinder.org/v2/gh/benureau/leabra/master) without installation with the [Binder](http://mybinder.org) service. The service is still experimental, and may be down or unstable.\n\n\n## Useful Resources\n\n  * [Leabra description](https://grey.colorado.edu/emergent/index.php/Leabra)\n  * [emergent homepage](https://grey.colorado.edu/emergent/index.php/Main_Page)\n  * [CCNLab homepage](https://grey.colorado.edu/CompCogNeuro/index.php/CCNLab)\n\n## License\n\nTo be decided.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dillontsmith/leabra",
    "keywords": "computational neuroscience,emergent,leabra",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "leabra-psyneulink",
    "package_url": "https://pypi.org/project/leabra-psyneulink/",
    "platform": "",
    "project_url": "https://pypi.org/project/leabra-psyneulink/",
    "project_urls": {
      "Homepage": "https://github.com/dillontsmith/leabra"
    },
    "release_url": "https://pypi.org/project/leabra-psyneulink/0.3.2/",
    "requires_dist": [
      "numpy",
      "scipy",
      "bokeh (>=0.12.6)",
      "ipywidgets (>=7.0)",
      "jupyter",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Python implementation of the Leabra algorithm. Forked to package and upload to PyPi.",
    "version": "0.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8793466,
  "releases": {
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cef5f04f81ec4e6c86107c04a1c3786c3bb9fb162a58126cc039c9c806a5758",
          "md5": "6dc0c3f7741f433a65347b2a763a611a",
          "sha256": "a4846f4c310eee98ecc8997a230b50a4c92f89fc5de375d49c053736af1138b2"
        },
        "downloads": -1,
        "filename": "leabra_psyneulink-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6dc0c3f7741f433a65347b2a763a611a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13206,
        "upload_time": "2020-12-01T20:30:53",
        "upload_time_iso_8601": "2020-12-01T20:30:53.282870Z",
        "url": "https://files.pythonhosted.org/packages/6c/ef/5f04f81ec4e6c86107c04a1c3786c3bb9fb162a58126cc039c9c806a5758/leabra_psyneulink-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f626cedb15e61fc4a77fb23a37126666258ab9ca33653e4d8360f65cf0fb641",
          "md5": "10161e215d25486cf1c8c5655b487d22",
          "sha256": "405c714b2c636effd481bfef9b077428902535ce72d0a3e5f6c9782df7a85a56"
        },
        "downloads": -1,
        "filename": "leabra_psyneulink-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10161e215d25486cf1c8c5655b487d22",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14513,
        "upload_time": "2020-12-01T20:38:27",
        "upload_time_iso_8601": "2020-12-01T20:38:27.026945Z",
        "url": "https://files.pythonhosted.org/packages/3f/62/6cedb15e61fc4a77fb23a37126666258ab9ca33653e4d8360f65cf0fb641/leabra_psyneulink-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3f626cedb15e61fc4a77fb23a37126666258ab9ca33653e4d8360f65cf0fb641",
        "md5": "10161e215d25486cf1c8c5655b487d22",
        "sha256": "405c714b2c636effd481bfef9b077428902535ce72d0a3e5f6c9782df7a85a56"
      },
      "downloads": -1,
      "filename": "leabra_psyneulink-0.3.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "10161e215d25486cf1c8c5655b487d22",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14513,
      "upload_time": "2020-12-01T20:38:27",
      "upload_time_iso_8601": "2020-12-01T20:38:27.026945Z",
      "url": "https://files.pythonhosted.org/packages/3f/62/6cedb15e61fc4a77fb23a37126666258ab9ca33653e4d8360f65cf0fb641/leabra_psyneulink-0.3.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}