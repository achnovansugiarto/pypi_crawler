{
  "info": {
    "author": "Mark Kim",
    "author_email": "markuskimius+py@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# getopt-py\n\nA classic getopt library for Python with long options and optional arguments\nsupport.\n\n\n## Motivation\n\nFor developers that find [argparse] too constraining.\n\n\n## Example\n\n```python\nimport getopts\n\n...\n\ngetopt = getopts.getopts(sys.argv, {\n    \"h\": 0         , \"help\"   : 0,\n    \"o\": 1         , \"output\" : 1,\n    \"p\": is_port   , \"port\"   : is_port,\n    \"v\": [is_int,1], \"verbose\": [is_int,1]\n})\n\nfor c in getopt:\n    if   c in (\"-\")           : opts.files.append(getopt.optarg)\n    elif c in (\"h\", \"help\")   : usage() ; sys.exit(0)\n    elif c in (\"o\", \"output\") : opts.output  = getopt.optarg\n    elif c in (\"p\", \"port\")   : opts.port    = int(getopt.optarg)\n    elif c in (\"v\", \"verbose\"): opts.verbose = int(getopt.optarg)\n    else: sys.exit(1)\n```\n\n- `-h` and `--help` take no arguments (0).\n- `-o` and `--output` take any argument (1).\n- `-p` and `--port` take an argument that, when passed to the `is_port`\n  function, returns True.\n- `-v` and `--verbose` take an optional argument that, when passed to the\n  `is_int` function, returns True.  If no argument is specified, it defaults to\n  `1`.\n\nSee [example.py] for a more complete example.\n\n\n## Features\n\nThe features are based on GNU `getopt_long`:\n\n- Short options.  Options may be combined (`-a -b -c` is equivalent to `-abc`).\n  If the option takes a mandatory argument, the argument may appear with or\n  without whitespaces (`-o value` is equivalent to `-ovalue`).\n\n- Long options.  If the option takes a mandatory argument, the argument may\n  appear with or without an equal sign (`--option value` is equivalent to\n  `--option=value`).\n\n- Optional arguments. If the option takes an optional argument, the argument\n  must appear without a space after a short option (`-ovalue`) or with an equal\n  sign after a long option (`--option=value`).\n\n- Options may appear in any order.\n\n- `--` can be used to denote the end of options.\n\n\n## Installation\n\nWith pip:\n\n```\npip install getopts\n```\n(note the plural 's')\n\nWith [dpm]:\n```\ndpm install https://github.com/markuskimius/getopt-py.git\n```\n\n\n## Usage\n\n```python\ngetopts.getopts(argv, optdict)\n```\n\nAll parameters are mandatory:\n- `argv` - The argument list (e.g., sys.argv)\n- `optdict` - A dictionary containing the valid options and a specification\n  of whether they take an argument. The keys are the options. The value may be\n  `0` if the option takes no argument, or `1` if it takes an argument. Instead\n  of `0` or `1`, it may specify a validation function that returns `1` if the\n  argument is valid, or `0` otherwise. To specify the argument as optional,\n  surround it in brackets (make it a list), with the optional second element\n  specifying the default value.\n\nThe function returns an iterable object that, if evaluated, returns one of the\nfollowing:\n- `-`: An optionless argument.  The value of the argument is stored in `getopt.optarg`.\n- `?`: An invalid option. An error message has been printed to `getopt.stderr` and the\n  option that caused the error is stored in `getopt.optopt`.\n- All other values: A valid option.  This value is also stored in `getopt.optopt`.  If\n  the option takes an argument, the value is stored in `getopt.optarg`.\n\nThe following variable names are available:\n- `getopt.optind`: The index of the next `argv`.\n- `getopt.optopt`: The last option processed.\n- `getopt.optarg`: The argument to the last option.\n\n\n## License\n\n[Apache 2.0]\n\n\n[C-style getopt parser]: <https://docs.python.org/3.1/library/getopt.html>\n[argparse]: <https://docs.python.org/3/library/argparse.html>\n[getopt-tcl]: <https://github.com/markuskimius/getopt-tcl/>\n[example.py]: <https://github.com/markuskimius/getopt-py/blob/master/test/example.py>\n[Apache 2.0]: <https://github.com/markuskimius/getopt-py/blob/master/LICENSE>\n[dpm]: <https://github.com/markuskimius/dpm>",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/markuskimius/getopt-py",
    "keywords": "getopt",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "getopts",
    "package_url": "https://pypi.org/project/getopts/",
    "platform": null,
    "project_url": "https://pypi.org/project/getopts/",
    "project_urls": {
      "Homepage": "https://github.com/markuskimius/getopt-py"
    },
    "release_url": "https://pypi.org/project/getopts/1.0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A classic getopt library with long options and optional arguments support.",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14448087,
  "releases": {
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fae0c4fd026a65ba310002ea0c656721c502d85df8a36988f5d4e1eb07bdb93a",
          "md5": "e06f79a0da9b69acddeda6d90a14cb35",
          "sha256": "f9e6445835ebab1b2e354330c2c1c1aa767d1203a8451136432eec7b24301cbb"
        },
        "downloads": -1,
        "filename": "getopts-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e06f79a0da9b69acddeda6d90a14cb35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8539,
        "upload_time": "2022-07-06T00:07:45",
        "upload_time_iso_8601": "2022-07-06T00:07:45.025806Z",
        "url": "https://files.pythonhosted.org/packages/fa/e0/c4fd026a65ba310002ea0c656721c502d85df8a36988f5d4e1eb07bdb93a/getopts-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7114ab1b8a25be44d96bfc242dfd9689f455c1fc621a5e392c536e9f598df2fe",
          "md5": "3347dc014569fa1cfbfaa676c6b40e33",
          "sha256": "0c7c0bbbaaa9ba0cdca49898b2e11cd5032fe8557ca1f6cc2d94bcc4c1d1eff8"
        },
        "downloads": -1,
        "filename": "getopts-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "3347dc014569fa1cfbfaa676c6b40e33",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8353,
        "upload_time": "2022-07-15T17:47:06",
        "upload_time_iso_8601": "2022-07-15T17:47:06.132246Z",
        "url": "https://files.pythonhosted.org/packages/71/14/ab1b8a25be44d96bfc242dfd9689f455c1fc621a5e392c536e9f598df2fe/getopts-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7114ab1b8a25be44d96bfc242dfd9689f455c1fc621a5e392c536e9f598df2fe",
        "md5": "3347dc014569fa1cfbfaa676c6b40e33",
        "sha256": "0c7c0bbbaaa9ba0cdca49898b2e11cd5032fe8557ca1f6cc2d94bcc4c1d1eff8"
      },
      "downloads": -1,
      "filename": "getopts-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "3347dc014569fa1cfbfaa676c6b40e33",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8353,
      "upload_time": "2022-07-15T17:47:06",
      "upload_time_iso_8601": "2022-07-15T17:47:06.132246Z",
      "url": "https://files.pythonhosted.org/packages/71/14/ab1b8a25be44d96bfc242dfd9689f455c1fc621a5e392c536e9f598df2fe/getopts-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}