{
  "info": {
    "author": "James Bradbury",
    "author_email": "jamesbradbury93@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# reathon\n\n`reathon` is a python package for constructing REAPER session with native python constructs. The majority of the interface is a reflection of the `.rpp` file structure which itself is very similar to `.xml` with tags and elements (except each element is called a 'chunk'). As such, you may need to know a bit about the underlying structure of REAPER's file format before using something like this. A good way to do this is to make a REAPER project and open the project in a text editor. You might also refer to [this document](https://github.com/ReaTeam/Doc/blob/master/State%20Chunk%20Definitions) which is fairly exhaustive.\n\n## installation\n\nYou can `git clone` this repo, `cd` to it and then install via `pip install -e reathon`. You need to point `pip` to the folder containing setup.py, not the parent folder with examples and README.md etc.\n\nYou can also `pip install reathon`.\n\n## usage\n\n`reathon` exposes objects for each type of 'chunk' or as I've called it **node** in the graph of objects in a session. A very simple example of a REAPER project with a single track would go as follows.\n\n```python\nfrom reathon.nodes import * # import all of the reathon nodes\n\nproject = Project( # create an instance of a project\n    Track() # and pass a Track() object to the constructor\n)\n\nproject.write(\"basic.rpp\") # write the project out to the path\n```\n\nWe can construct such graphs in a variety of ways which lends `reathon` towards programmatic constructions of projects.\n\n```python\n# Using Loops\nfrom reathon.nodes import *\n\nproject = Project() # create an instance of a project\n\nfor x in range(1024):\n    project.add(Track()) # use the add method of the project to add a Track()\n\nproject.write(\"loops.rpp\") # write the project out to the path\n```\n\n```python\n# Comprehensions\nfrom reathon.nodes import *\ntracks = [Track() for x in range(100)]\nproject = Project(*tracks)\nproject.write(\"comprehensions.rpp\") # write the project out to the path\n```\n\nA more complex example might be to arrange a series of sound files randomly along a single track, similar to a granular synthesiser. This example presents new `reathon` nodes you won't have seen before\n\n```python\nfrom reathon.nodes import Project, Track, Item, Source # note new nodes Item() and Source()\nfrom pathlib import Path\nimport random\n\nsources = []\n\n# create a source object for each of the .wav files in a directory (can you tell I love comprehensions)\nsources = [\n    Source(file=f'{str(x)}')\n    for x in Path('my-sounds').rglob(\"*.wav\") # you would point it to an actual folder of sounds, not just 'my-sounds'\n]\n\ntrack = Track() # create a blank Track()\n\npos = 0.0 # set our initial position to 0\nfor x in range(1000): # 1000 grains\n    grain = random.choice(sources) # random file from our sources\n    \n    length = random.uniform(0.1, 0.5) # random length of the item\n    track.add(\n        Item(\n            grain, # Item()'s have a child Source() node, which is randomly selected above\n            position = pos, # and we set the position\n            length = length # and we set the length\n        )\n    )\n    pos += length # increment the position by the length to create contiguous blocks\n\nproject = Project(track) # create the project with our composed track\nproject.write(\"granular.rpp\") # write it out\n```\n\n### props\nIn the `.rpp` structure each 'chunk' can have various properties. For example, the `ITEM` chunk will have length and position properties that determine where in the timeline the item is positioned and the duration of the item. I don't want to implement functions for each of these so there are ways to insert arbitrary properties for each 'chunk', or what you are now familiar with as a `reathon` 'node'.\n\n```python\n# modifiying properties with function arguments\nfrom reathon.nodes import *\nitem = Item(\n    length = 10, \n    position = 0.5\n) # create a blank item 10 seconds in length a 0.5 seconds in the timeline\n# the convention is you match the word of the property as lower case.\n# if the property in the file is LENGTH, then the function argument is 'length'\ntrack = Track(item)\nproject = Project(track)\nproject.write(\"properties1.rpp\") # write the project out to the path\n```\n\n```python\n# modifiying properties by directly modifying the .props of the object\nfrom reathon.nodes import *\nitem = Item() # create a blank item 10 seconds in length a 0.5 seconds in the timeline\nitem.props = [\n    [\"LENGTH\", 10],\n    [\"POSITION\", 0.5]\n]\ntrack = Track(item)\nproject = Project(track)\nproject.write(\"properties1.rpp\") # write the project out to the path\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jamesb93/reathon",
    "keywords": "",
    "license": "GLPv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "reathon",
    "package_url": "https://pypi.org/project/reathon/",
    "platform": "",
    "project_url": "https://pypi.org/project/reathon/",
    "project_urls": {
      "Homepage": "https://github.com/jamesb93/reathon"
    },
    "release_url": "https://pypi.org/project/reathon/0.0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Construct REAPER projects in Python.",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9774088,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da0801d6779d819fbe2a334253b411b6fe1c6ccb2aef239b940aa3fd293dd302",
          "md5": "5eea4c68113ac36dc78cd5f1d0fd643d",
          "sha256": "78bd5b21617d4bfe1fef7aff0ac4cfc26ad33d6543a7b2897d6d4ba9987ba9cb"
        },
        "downloads": -1,
        "filename": "reathon-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5eea4c68113ac36dc78cd5f1d0fd643d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4030,
        "upload_time": "2021-01-12T10:11:13",
        "upload_time_iso_8601": "2021-01-12T10:11:13.324758Z",
        "url": "https://files.pythonhosted.org/packages/da/08/01d6779d819fbe2a334253b411b6fe1c6ccb2aef239b940aa3fd293dd302/reathon-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a345ccb9641f32970730671cd62fffa20bbbe49bfd9b1ce5ee087f25d958c970",
          "md5": "ebdf92f6cde22f4ac47b82b1e8ecceb6",
          "sha256": "d79f07aa005ae8b717797147145959c82f44fcdd37702725f58df666f33b6fcd"
        },
        "downloads": -1,
        "filename": "reathon-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ebdf92f6cde22f4ac47b82b1e8ecceb6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4427,
        "upload_time": "2021-03-05T20:06:14",
        "upload_time_iso_8601": "2021-03-05T20:06:14.446485Z",
        "url": "https://files.pythonhosted.org/packages/a3/45/ccb9641f32970730671cd62fffa20bbbe49bfd9b1ce5ee087f25d958c970/reathon-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a6fbd1068e1c892618ecdeb4271f38030a38242545b73d6d78457f002735ca6",
          "md5": "4d3fd1f293a31087bd7bfebb0a6dbbd8",
          "sha256": "4789449de396e7b7c8256f970ac2a56ccb2c299d2c4e454237f8488518998963"
        },
        "downloads": -1,
        "filename": "reathon-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4d3fd1f293a31087bd7bfebb0a6dbbd8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4148,
        "upload_time": "2021-03-05T20:06:15",
        "upload_time_iso_8601": "2021-03-05T20:06:15.866951Z",
        "url": "https://files.pythonhosted.org/packages/4a/6f/bd1068e1c892618ecdeb4271f38030a38242545b73d6d78457f002735ca6/reathon-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f39cc3fbe2b97eb0c9f45070e5b7913aa57e7d683cc2f71abd419660f2205556",
          "md5": "906735b8b19886cf9f692730f8fa0996",
          "sha256": "642285e252b07c8c57c63d2f49a0dc8104bb6c3e3dc9b483131d2a4903eeeafb"
        },
        "downloads": -1,
        "filename": "reathon-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "906735b8b19886cf9f692730f8fa0996",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4181,
        "upload_time": "2021-03-15T14:07:24",
        "upload_time_iso_8601": "2021-03-15T14:07:24.968466Z",
        "url": "https://files.pythonhosted.org/packages/f3/9c/c3fbe2b97eb0c9f45070e5b7913aa57e7d683cc2f71abd419660f2205556/reathon-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f39cc3fbe2b97eb0c9f45070e5b7913aa57e7d683cc2f71abd419660f2205556",
        "md5": "906735b8b19886cf9f692730f8fa0996",
        "sha256": "642285e252b07c8c57c63d2f49a0dc8104bb6c3e3dc9b483131d2a4903eeeafb"
      },
      "downloads": -1,
      "filename": "reathon-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "906735b8b19886cf9f692730f8fa0996",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4181,
      "upload_time": "2021-03-15T14:07:24",
      "upload_time_iso_8601": "2021-03-15T14:07:24.968466Z",
      "url": "https://files.pythonhosted.org/packages/f3/9c/c3fbe2b97eb0c9f45070e5b7913aa57e7d683cc2f71abd419660f2205556/reathon-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}