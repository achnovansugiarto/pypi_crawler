{
  "info": {
    "author": "ZSK",
    "author_email": "zshabkalieh@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Deprecated\r\n----------\r\n\r\nThis project is deprecated and no longer maintained. No further changes will be made.\r\n\r\nIn one of the PyDrive `issues <https://github.com/googleworkspace/PyDrive/issues/199>`_, we learned about the `PyDrive2 <https://github.com/iterative/PyDrive2>`_ fork of PyDrive. Forks are permitted under PyDrive's `license <LICENSE>`_, and we hope that such forks will be useful for the needs of PyDrive users. The PyDrive team makes no endorsement or support promises of any particular fork, but we're excited to see the open source license being a vehicle for new project development.\r\n\r\n\r\nPyDrive\r\n-------\r\n\r\n*PyDrive* is a wrapper library of\r\n`google-api-python-client <https://github.com/google/google-api-python-client>`_\r\nthat simplifies many common Google Drive API tasks.\r\n\r\nProject Info\r\n------------\r\n\r\n- Homepage: `https://pypi.python.org/pypi/PyDrive <https://pypi.python.org/pypi/PyDrive>`_\r\n- Documentation: `Official documentation on GitHub pages <https://googleworkspace.github.io/PyDrive/docs/build/html/index.html>`_\r\n- GitHub: `https://github.com/googleworkspace/PyDrive <https://github.com/googleworkspace/PyDrive>`_\r\n\r\nFeatures of PyDrive\r\n-------------------\r\n\r\n-  Simplifies OAuth2.0 into just few lines with flexible settings.\r\n-  Wraps `Google Drive API <https://developers.google.com/drive/>`_ into\r\n   classes of each resource to make your program more object-oriented.\r\n-  Helps common operations else than API calls, such as content fetching\r\n   and pagination control.\r\n\r\nHow to install\r\n--------------\r\n\r\nYou can install PyDrive with regular ``pip`` command.\r\n\r\n::\r\n\r\n    $ pip install PyDrive\r\n\r\nTo install the current development version from GitHub, use:\r\n\r\n::\r\n\r\n    $  pip install git+https://github.com/googleworkspace/PyDrive.git#egg=PyDrive\r\n\r\nOAuth made easy\r\n---------------\r\n\r\nDownload *client\\_secrets.json* from Google API Console and OAuth2.0 is\r\ndone in two lines. You can customize behavior of OAuth2 in one settings\r\nfile *settings.yaml*.\r\n\r\n.. code:: python\r\n\r\n\r\n    from pydrive.auth import GoogleAuth\r\n    from pydrive.drive import GoogleDrive\r\n\r\n    gauth = GoogleAuth()\r\n    gauth.LocalWebserverAuth()\r\n\r\n    drive = GoogleDrive(gauth)\r\n\r\nFile management made easy\r\n-------------------------\r\n\r\nUpload/update the file with one method. PyDrive will do it in the most\r\nefficient way.\r\n\r\n.. code:: python\r\n\r\n    file1 = drive.CreateFile({'title': 'Hello.txt'})\r\n    file1.SetContentString('Hello')\r\n    file1.Upload() # Files.insert()\r\n\r\n    file1['title'] = 'HelloWorld.txt'  # Change title of the file\r\n    file1.Upload() # Files.patch()\r\n\r\n    content = file1.GetContentString()  # 'Hello'\r\n    file1.SetContentString(content+' World!')  # 'Hello World!'\r\n    file1.Upload() # Files.update()\r\n\r\n    file2 = drive.CreateFile()\r\n    file2.SetContentFile('hello.png')\r\n    file2.Upload()\r\n    print('Created file %s with mimeType %s' % (file2['title'],\r\n    file2['mimeType']))\r\n    # Created file hello.png with mimeType image/png\r\n\r\n    file3 = drive.CreateFile({'id': file2['id']})\r\n    print('Downloading file %s from Google Drive' % file3['title']) # 'hello.png'\r\n    file3.GetContentFile('world.png')  # Save Drive file as a local file\r\n\r\n    # or download Google Docs files in an export format provided.\r\n    # downloading a docs document as an html file:\r\n    docsfile.GetContentFile('test.html', mimetype='text/html')\r\n\r\nFile listing pagination made easy\r\n---------------------------------\r\n\r\n*PyDrive* handles file listing pagination for you.\r\n\r\n.. code:: python\r\n\r\n    # Auto-iterate through all files that matches this query\r\n    file_list = drive.ListFile({'q': \"'root' in parents\"}).GetList()\r\n    for file1 in file_list:\r\n        print('title: {}, id: {}'.format(file1['title'], file1['id']))\r\n\r\n    # Paginate file lists by specifying number of max results\r\n    for file_list in drive.ListFile({'maxResults': 10}):\r\n        print('Received {} files from Files.list()'.format(len(file_list))) # <= 10\r\n        for file1 in file_list:\r\n            print('title: {}, id: {}'.format(file1['title'], file1['id']))\r\n\r\nConcurrent access made easy\r\n---------------------------\r\n\r\nAll calls made are thread-safe. The underlying implementation in the\r\ngoogle-api-client library\r\n`is not thread-safe <https://developers.google.com/api-client-library/python/guide/thread_safety>`_,\r\nwhich means that every request has to re-authenticate an http object. You\r\ncan avoid this overhead by\r\ncreating your own http object for each thread and re-use it for every call.\r\n\r\nThis can be done as follows:\r\n\r\n.. code:: python\r\n\r\n    # Create httplib.Http() object.\r\n    http = drive.auth.Get_Http_Object()\r\n\r\n    # Create file object to upload.\r\n    file_obj = drive.CreateFile()\r\n    file_obj['title'] = \"file name\"\r\n\r\n    # Upload the file and pass the http object into the call to Upload.\r\n    file_obj.Upload(param={\"http\": http})\r\n\r\nYou can specify the http-object in every access method which takes a *param*\r\nparameter.\r\n\r\nNote: This is  not an official Google product.\r\n\r\n\r\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zieadshabkalieh/pydriveziead",
    "keywords": "",
    "license": "LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pydriveziead",
    "package_url": "https://pypi.org/project/pydriveziead/",
    "platform": "",
    "project_url": "https://pypi.org/project/pydriveziead/",
    "project_urls": {
      "Homepage": "https://github.com/zieadshabkalieh/pydriveziead"
    },
    "release_url": "https://pypi.org/project/pydriveziead/1.3.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "easy.",
    "version": "1.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11502361,
  "releases": {
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca30adbb1bd4ae3d9703603ddf179d920ca59ff9f9d90faeef48516afd984785",
          "md5": "2716593df3793a9078947dacb6f6c935",
          "sha256": "22a3750ffdbbfa192b1796aa6ff996692d0ba050d908854f7a7fd382c1665833"
        },
        "downloads": -1,
        "filename": "pydriveziead-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2716593df3793a9078947dacb6f6c935",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 985345,
        "upload_time": "2021-09-20T22:02:55",
        "upload_time_iso_8601": "2021-09-20T22:02:55.307349Z",
        "url": "https://files.pythonhosted.org/packages/ca/30/adbb1bd4ae3d9703603ddf179d920ca59ff9f9d90faeef48516afd984785/pydriveziead-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ca30adbb1bd4ae3d9703603ddf179d920ca59ff9f9d90faeef48516afd984785",
        "md5": "2716593df3793a9078947dacb6f6c935",
        "sha256": "22a3750ffdbbfa192b1796aa6ff996692d0ba050d908854f7a7fd382c1665833"
      },
      "downloads": -1,
      "filename": "pydriveziead-1.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2716593df3793a9078947dacb6f6c935",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 985345,
      "upload_time": "2021-09-20T22:02:55",
      "upload_time_iso_8601": "2021-09-20T22:02:55.307349Z",
      "url": "https://files.pythonhosted.org/packages/ca/30/adbb1bd4ae3d9703603ddf179d920ca59ff9f9d90faeef48516afd984785/pydriveziead-1.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}