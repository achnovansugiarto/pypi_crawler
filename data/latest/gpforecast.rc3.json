{
  "info": {
    "author": "Huber David, Rubattu Nicolo', Corani Giorgio",
    "author_email": "david.huber@idsia.ch, nicolo.rubattu@idsia.ch, giorgio.corani@idsia.ch",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Time series forecasting with Gaussian Processes\n\n## Related Publication\nThe theoretical description of the algorithm implemented in this software and empirical results can be found in:\n\n\"Time series forecasting with Gaussian Processes needs priors\"\\\nECML PKDD 2021: Proc. Machine Learning and Knowledge Discovery in Databases. Applied Data Science Track pp 103â€“117\\\nGiorgio Corani, Alessio Benavoli, Marco Zaffalon\n\n## gpforecast package\nThe software includes a small package that builds the gaussian process and uses it to produce predictions. The package heavily relies on GPy. \nA convenience script can be used to run the GP over collections of timeseries.\n\n## Installation\n\ngpforecast requires Python 3.8+ to run.\nCreate a new conda environment named ENVNAME, install Python 3.8\n```sh\nconda create --name ENVNAME python=3.8\n```\nActivate the new environment to use it\n```sh\nconda activate ENVNAME\n```\nInstall **gpforecast** with dependencies\n```sh\npip install gpforecast\n```\n\n## Tutorial [Python]\n```py\nfrom gpforecast import GP, get_sample_ts\n\n# STEP 0. Get a sample time series (Monthly or Quarterly time series from M3)\nf = 'quarterly'  # 'monthly' or 'quarterly'\nsample = get_sample_ts(frequency=f)\n\n# STEP 1. Construct our model\ng = GP(frequency=f, priors=True)\n\n# STEP 2. Build our model\ng.build(sample['Y'])\n\n# STEP 3. Forecast\nres = g.forecast(len(sample['YY']), level=[80,95])\n\n# STEP 4. Evaluating forecast accuracy {MAE, CRPS, LL}, you could implement your own!\nmean = res.PointForecast\nu95  = res.Hi95\nacc = g.compute_indicators(sample['YY'], mean, u95, level=95)\n\n# STEP 5. Forecasts Plot\nimport matplotlib.pyplot as plt\n\ndef forecast_plot(train, res):\n    plt.style.use('ggplot')\n    plt.figure(figsize=(16,8))\n    plt.plot(list(range(1,len(train)+1)), train.reshape(-1,), color='black')\n    plt.plot(list(range(len(train)+1,len(train)+len(res.PointForecast)+1)), \n             res.PointForecast, color='blue')\n    levels = []\n    for i in res.columns:\n        if 'Lo' in i: levels.append(int(i[2:]))\n    for i, l in enumerate(sorted(levels)):\n        plt.fill_between(list(range(len(train)+1,len(train)+len(res.PointForecast)+1)), \n                         res['Lo'+str(l)], res['Hi'+str(l)], color='blue', alpha=0.3-0.1*i)\n    plt.title('Forecasts from GP', loc='left', fontsize=16)\n    plt.xlabel(\"Time\", fontsize=14)\n    plt.gca().tick_params(axis='both', which='major', labelsize=12)\n    \nforecast_plot(sample['Y'], res)\n```\n\n## Tutorial [R]\n**gpforecast** could be used in R thanks to [Reticulate](https://cran.r-project.org/web/packages/reticulate/index.html)\n```R\ninstall.packages(\"Reticulate\")\n```\n```R\nlibrary(reticulate)\nuse_virtualenv(\"ENVNAME\")           # python environment with gpforecast\ngpforecast <- import(\"gpforecast\")  # load Python module\n# STEP 0. Get a sample time series (Monthly or Quarterly time series from M3)\nf = 'monthly'  # 'monthly' or 'quarterly'\nsample = gpforecast$get_sample_ts(frequency=f)\n\n# STEP 1. Construct our model\ng <- gpforecast$GP(frequency=f, priors=TRUE)\n\n# STEP 2. Build our model\ng$build(sample$Y)\n\n# STEP 3. Forecast\nres <- g$forecast(length(sample$YY), level=as.integer(c(80,95)))\n\n# STEP 4. Evaluating forecast accuracy {MAE, CRPS, LL}, you could implement your own!\nmean <- as.array(as.vector(t(res['PointForecast'])))\nu95  <- as.array(as.vector(t(res['Hi95'])))\nacc <- g$compute_indicators(sample$YY, mean, u95, level=as.integer(95))\n\n# STEP 5. Forecasts Plot\nlibrary(ggplot2)\n\nforecast_plot <- function(train, res) {\n    options(repr.plot.width = 16, repr.plot.height = 8)\n    train_df <- data.frame(\n        X = 1:length(train), \n        Y = c(as.vector(t(train))))\n    res$h = 1:length(res[,'PointForecast']) + length(sample$Y)\n    p <- ggplot() +   \n    geom_line(data = train_df, aes(X, Y), color = \"black\", size = 0.8) +\n    geom_line(data = res, aes(h, res[,'PointForecast']), color = \"blue\", size = 0.8)\n    levels <- list()\n    l <-1\n    for (i in colnames(res)) {\n        if (grepl('Lo', i, fixed = TRUE)) {\n            levels[l] <- substr(i,3,nchar(i))\n            l <- l + 1\n        }\n    }\n    levels <- sort(as.numeric(levels))\n    for (i in 1:length(levels)) {\n        lo <- paste0('Lo',levels[i])\n        hi <- paste0('Hi',levels[i])\n        p <- p +\n        geom_ribbon(data = res, \n                aes_string(x='h', ymin=lo, ymax=hi), \n                alpha=0.4-0.1*i, fill = \"blue\")\n    }\n    p <- p + ggtitle('Forecasts from GP') + xlab('Time') +\n    theme(\n        axis.title.y=element_blank(),\n        plot.title = element_text(size = 20),\n        axis.title = element_text(size = 18),\n        axis.text = element_text(size = 14))\n    return (p)\n}\n\nforecast_plot(sample$Y, res)\n```\n---\n## IDSIA - _Istituto Dalle Molle di Studi sull'Intelligenza Artificiale_\nLugano, Switzerland [idsia.ch](https://www.idsia.ch/)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/IDSIA/gpforecasting",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gpforecast",
    "package_url": "https://pypi.org/project/gpforecast/",
    "platform": null,
    "project_url": "https://pypi.org/project/gpforecast/",
    "project_urls": {
      "Homepage": "https://github.com/IDSIA/gpforecasting"
    },
    "release_url": "https://pypi.org/project/gpforecast/1.0.2/",
    "requires_dist": [
      "numpy",
      "pandas",
      "scipy",
      "GPy",
      "properscoring",
      "matplotlib",
      "packaging"
    ],
    "requires_python": "",
    "summary": "Time series forecasting with Gaussian Processes",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13485667,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9549ae5f4b24490e9ba1ba58f5253d8ec2deb978d114e1f97f1c95f0de3fa692",
          "md5": "cb6d9cc7f346384228e77f0161c89b47",
          "sha256": "5eb24fa5182fce7036ca02abfc61b6cd11d584e0518e2bb81eaeea9b68bc4e23"
        },
        "downloads": -1,
        "filename": "gpforecast-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb6d9cc7f346384228e77f0161c89b47",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6986,
        "upload_time": "2022-04-06T14:53:25",
        "upload_time_iso_8601": "2022-04-06T14:53:25.745622Z",
        "url": "https://files.pythonhosted.org/packages/95/49/ae5f4b24490e9ba1ba58f5253d8ec2deb978d114e1f97f1c95f0de3fa692/gpforecast-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a4b1c23d53f29e4ae65763bbdf908759e1b47e09f7a1fdf82596e3c3af4d8dc",
          "md5": "edd69098be9e3b88dd2d1f40e89f02ed",
          "sha256": "47a8ad62071d8f18d22ed4440f9f3061eb27e3a385b325be11a82e64f71d4d54"
        },
        "downloads": -1,
        "filename": "gpforecast-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "edd69098be9e3b88dd2d1f40e89f02ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6766,
        "upload_time": "2022-04-06T14:53:27",
        "upload_time_iso_8601": "2022-04-06T14:53:27.899598Z",
        "url": "https://files.pythonhosted.org/packages/0a/4b/1c23d53f29e4ae65763bbdf908759e1b47e09f7a1fdf82596e3c3af4d8dc/gpforecast-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d61585ee4071199e46f7323420bf8ee281481731d4b5f36968c32659bef063ea",
          "md5": "9eab58a507b925317294c08d97f02239",
          "sha256": "68492edab484ede0e6d9fa67d38e651197e450e7d070e3f8a5c5e6a1dbd1cde0"
        },
        "downloads": -1,
        "filename": "gpforecast-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9eab58a507b925317294c08d97f02239",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6984,
        "upload_time": "2022-04-06T15:30:26",
        "upload_time_iso_8601": "2022-04-06T15:30:26.317699Z",
        "url": "https://files.pythonhosted.org/packages/d6/15/85ee4071199e46f7323420bf8ee281481731d4b5f36968c32659bef063ea/gpforecast-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7bbb2b7a47feb554fa6b9fecdf1588d50457f1d71d27effaea717d2f00247d5",
          "md5": "e8337b0a303a7e96c266151e5b6e7eb2",
          "sha256": "cb9261afebd517d56c891d982f210f0e683772c757dfee0e4ab7e775652fef12"
        },
        "downloads": -1,
        "filename": "gpforecast-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e8337b0a303a7e96c266151e5b6e7eb2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6768,
        "upload_time": "2022-04-06T15:30:28",
        "upload_time_iso_8601": "2022-04-06T15:30:28.019044Z",
        "url": "https://files.pythonhosted.org/packages/a7/bb/b2b7a47feb554fa6b9fecdf1588d50457f1d71d27effaea717d2f00247d5/gpforecast-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3dade18a06d9ef9b859c045b378445f0344d1ee9f6e7eb830e0734934f402cfd",
          "md5": "d1d6253fee2ba1699aec70e304cf485f",
          "sha256": "b761697037b051c2091f84f3936cbda75c00a6715fbefb91dcae08e68b1bf4df"
        },
        "downloads": -1,
        "filename": "gpforecast-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d1d6253fee2ba1699aec70e304cf485f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7025,
        "upload_time": "2022-04-12T06:24:52",
        "upload_time_iso_8601": "2022-04-12T06:24:52.422694Z",
        "url": "https://files.pythonhosted.org/packages/3d/ad/e18a06d9ef9b859c045b378445f0344d1ee9f6e7eb830e0734934f402cfd/gpforecast-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c53ca14f9d47e37cf389eab92a577bd66a210501b48a7fe0414306885e930a81",
          "md5": "32792dfa3be57e4abf97d3bb6bf7785d",
          "sha256": "528aaf03473dd85c083c545b362f7569cfa98a1b97cd0fe0ec4e16451801dbf2"
        },
        "downloads": -1,
        "filename": "gpforecast-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "32792dfa3be57e4abf97d3bb6bf7785d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6803,
        "upload_time": "2022-04-12T06:24:54",
        "upload_time_iso_8601": "2022-04-12T06:24:54.780327Z",
        "url": "https://files.pythonhosted.org/packages/c5/3c/a14f9d47e37cf389eab92a577bd66a210501b48a7fe0414306885e930a81/gpforecast-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3dade18a06d9ef9b859c045b378445f0344d1ee9f6e7eb830e0734934f402cfd",
        "md5": "d1d6253fee2ba1699aec70e304cf485f",
        "sha256": "b761697037b051c2091f84f3936cbda75c00a6715fbefb91dcae08e68b1bf4df"
      },
      "downloads": -1,
      "filename": "gpforecast-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d1d6253fee2ba1699aec70e304cf485f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7025,
      "upload_time": "2022-04-12T06:24:52",
      "upload_time_iso_8601": "2022-04-12T06:24:52.422694Z",
      "url": "https://files.pythonhosted.org/packages/3d/ad/e18a06d9ef9b859c045b378445f0344d1ee9f6e7eb830e0734934f402cfd/gpforecast-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c53ca14f9d47e37cf389eab92a577bd66a210501b48a7fe0414306885e930a81",
        "md5": "32792dfa3be57e4abf97d3bb6bf7785d",
        "sha256": "528aaf03473dd85c083c545b362f7569cfa98a1b97cd0fe0ec4e16451801dbf2"
      },
      "downloads": -1,
      "filename": "gpforecast-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "32792dfa3be57e4abf97d3bb6bf7785d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6803,
      "upload_time": "2022-04-12T06:24:54",
      "upload_time_iso_8601": "2022-04-12T06:24:54.780327Z",
      "url": "https://files.pythonhosted.org/packages/c5/3c/a14f9d47e37cf389eab92a577bd66a210501b48a7fe0414306885e930a81/gpforecast-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}