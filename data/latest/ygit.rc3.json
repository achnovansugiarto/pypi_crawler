{
  "info": {
    "author": "Derek Anderson",
    "author_email": "public@kered.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": ".. figure:: misc/header.png\n   :alt: header\n\n   header\n\nygit\n====\n\nA tiny (yocto) git client for MicroPython. It speaks to git HTTP/HTTPS\nservers using the ubiquitous `smart client\nprotocol <https://www.git-scm.com/docs/http-protocol#_smart_clients>`__.\n\nInstall\n-------\n\n.. code:: bash\n\n   $ wget https://raw.githubusercontent.com/keredson/ygit/main/ygit.py\n   $ ampy -p /dev/ttyUSB0 put ygit.py\n\nGet Started\n-----------\n\nTo clone a repo, run:\n\n.. code:: python\n\n   >>> repo = ygit.clone('https://github.com/turfptax/ugit_test.git')\n\nIf you don’t want to clone into the root directory of your device, pass\na target directory as a second argument. This will produce a shallow\nclone (at ``HEAD``) by default. It will not delete any files in the\ntarget directory, but it will overwrite them if conflicting. The normal\ngit files you’d expect (``config``, ``*.pack``, ``IDX``) will be in\n``.ygit``. You only need to run this once.\n\nTo update:\n\n.. code:: python\n\n   >>> repo.pull()\n\nWhich is the same as:\n\n.. code:: python\n\n   >>> repo.fetch()\n   >>> repo.checkout()\n\nThese are incremental operations. It will only download git objects you\ndon’t already have, and only update files when their SHA1 values don’t\nmatch.\n\nAPI\n---\n\n.. code:: python\n\n   # make a new clone\n   repo = ygit.clone(repo, directory='.', shallow=True, cone=None, \n                     quiet=False, ref='HEAD', username=None, password=None)\n\n   # control an already cloned repository\n   repo = ygit.Repo(directory='.')\n\n   # control\n   repo.checkout(ref='HEAD')\n   repo.pull(shallow=True, quiet=False, ref='HEAD')\n   repo.fetch(shallow=True, quiet=False, ref='HEAD')\n   repo.status(ref='HEAD')\n   repo.tags()\n   repo.branches()\n   repo.pulls()\n   repo.update_authentication(username, password)\n\nA ``ref`` is one of: - ``HEAD`` - a commit id (40 character hex string)\n- a branch name - a tag - a pull\n\nDesign\n------\n\nShallow Cloning\n~~~~~~~~~~~~~~~\n\nBy default clones are\n`shallow <https://github.blog/2020-12-21-get-up-to-speed-with-partial-clone-and-shallow-clone/>`__\nto save space. If you try to checkout an unknown ref, ``ygit`` will\nfetch a new packfile from the original server.\n\nSubdirectory Cloning\n~~~~~~~~~~~~~~~~~~~~\n\nUsually I don’t want to clone an entire project onto my ESP32. The\npython I want on the device is in a subdirectory of a larger project.\nThe ``cone`` argument will take a path, and only files in that directory\nwill be checked out (as if it were the top level).\n\nAuthentication\n~~~~~~~~~~~~~~\n\nSupply a username/password to ``clone()``. The credentials will be\nstored on the device, AES encrypted with the machine id as the key.\n\nRelated\n-------\n\nThis was inspired by `ugit <https://github.com/turfptax/ugit>`__, which\ndidn’t work for my use case. (Talking to a non-github server, checking\nout only a subdirectory, and supporting incremental updates.)\n\nRoadmap\n-------\n\n-  ``cone`` is currently unfinished.\n\nTests\n-----\n\n-  ``pytest test_localhost.py`` (run\n   ``nginx -c \"$(pwd)/misc/test_nginx.conf\" -e stderr`` in the\n   background)\n-  ``pytest test_gh.py`` (runs tests against github)\n-  ``pytest test_micropython.py`` (**WARNING:** will wipe all files\n   except ``boot.py`` from your device.)\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/keredson/ygit",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ygit",
    "package_url": "https://pypi.org/project/ygit/",
    "platform": null,
    "project_url": "https://pypi.org/project/ygit/",
    "project_urls": {
      "Homepage": "https://github.com/keredson/ygit"
    },
    "release_url": "https://pypi.org/project/ygit/0.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A tiny (yocto) git client for MicroPython.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17505483,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "176ce38dc6d9b9fa9cb849bbc71be62ae5ce223430dca0774950ac28d636703d",
          "md5": "643ebe8f854ca84f2ad2f2cc885d3b99",
          "sha256": "cf87f0b9521d4c90b7c2585a2f16427d761ad9c9b09cb753f2abe10facbd7423"
        },
        "downloads": -1,
        "filename": "ygit-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "643ebe8f854ca84f2ad2f2cc885d3b99",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20185,
        "upload_time": "2023-03-28T23:01:00",
        "upload_time_iso_8601": "2023-03-28T23:01:00.812017Z",
        "url": "https://files.pythonhosted.org/packages/17/6c/e38dc6d9b9fa9cb849bbc71be62ae5ce223430dca0774950ac28d636703d/ygit-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7629e619adc1d3bd05dddcd010b12c0329ede1877ea70d0b5dd15fc1632ec6d5",
          "md5": "bef6010db0cbc82ed8ec9065256daf34",
          "sha256": "81c0335e3dbd31cf366a34900641a7cb6700d360133e238f803c4ec5bf76465a"
        },
        "downloads": -1,
        "filename": "ygit-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bef6010db0cbc82ed8ec9065256daf34",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20691,
        "upload_time": "2023-03-28T23:03:46",
        "upload_time_iso_8601": "2023-03-28T23:03:46.108295Z",
        "url": "https://files.pythonhosted.org/packages/76/29/e619adc1d3bd05dddcd010b12c0329ede1877ea70d0b5dd15fc1632ec6d5/ygit-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "428269e4b9061766557ed6061cf95c3745825ebb771f206a9a59d547594d9bc1",
          "md5": "c2ec98438e8e202d4fdcd3b07e0df2fb",
          "sha256": "eb6d764197c94770ce9477c7b4b40fb0af8a83331f592ea131c2d60240cd8c2b"
        },
        "downloads": -1,
        "filename": "ygit-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c2ec98438e8e202d4fdcd3b07e0df2fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21540,
        "upload_time": "2023-03-30T06:20:02",
        "upload_time_iso_8601": "2023-03-30T06:20:02.972540Z",
        "url": "https://files.pythonhosted.org/packages/42/82/69e4b9061766557ed6061cf95c3745825ebb771f206a9a59d547594d9bc1/ygit-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "428269e4b9061766557ed6061cf95c3745825ebb771f206a9a59d547594d9bc1",
        "md5": "c2ec98438e8e202d4fdcd3b07e0df2fb",
        "sha256": "eb6d764197c94770ce9477c7b4b40fb0af8a83331f592ea131c2d60240cd8c2b"
      },
      "downloads": -1,
      "filename": "ygit-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c2ec98438e8e202d4fdcd3b07e0df2fb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21540,
      "upload_time": "2023-03-30T06:20:02",
      "upload_time_iso_8601": "2023-03-30T06:20:02.972540Z",
      "url": "https://files.pythonhosted.org/packages/42/82/69e4b9061766557ed6061cf95c3745825ebb771f206a9a59d547594d9bc1/ygit-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}