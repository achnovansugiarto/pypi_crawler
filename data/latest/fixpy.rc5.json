{
  "info": {
    "author": "Nils Wandel",
    "author_email": "<wandeln@cs.uni-bonn.de>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# Fixpy\n\nFixpy is an easy to use package for event-driven programming in python.  \nThe name stems from \"FIXed-point iterations\" that can be elegantly implemented using this package (an example is shown below).  \nFurther applications of this package include for example handling of User-Interfaces or interrupt calls.\n\n## Installation\n\nFixpy can be quickly installed with pip:\n\n```\npip install fixpy\n```\n\n## Quick-Start\n\nIn the following, some examples demonstrate the usage of this package.\nAll examples are also available on [Google Colab](https://colab.research.google.com/drive/1ytmLCpshm7Z7e-QyKtpgxpoAChOspT76?usp=sharing).\n\n\nFixpy can be used with a verbose or a shortened syntax.  \nFirst, some verbose examples are shown to explain the basic concepts of the package.  \nThen, the same examples are presented using the shortened syntax.\n\n### Verbose Syntax Examples\n\nFirst, we show a simple example to automatically update a BMI (body mass index) computation:\n\n\n```python\nfrom fixpy import Variable, Function\n\nweight = Variable(70,name=\"weight\") # introduce a new variable for body weight\nheight = Variable(1.8,name=\"height\") # introduce a new variable for body height\n\ndef compute_bmi(kg,m): # function to compute bmi\n  return kg/m**2\n\nbmi = Function(compute_bmi,[weight,height],name=\"bmi\") # now, bmi gets automatically updated, if the value of weight or height changes\n\nprint(f\"BMI = {bmi.get_value()}\") # with get_value(), we can access the value computed in bmi\n\nweight.set_value(80) # now, let's change the weight with set_value()\n\nprint(f\"new BMI = {bmi.get_value()}\") # ... as you can see, the BMI was automatically updated\n\nbmi.plot() # plot a graph of event directions\n```\n\nCallback listeners can be simply added and removed as follows:\n\n```python\ndef print_bmi(new_bmi): # define a callback listener\n  print(f\"The BMI has changed! BMI = {new_bmi}\")\n\nbmi.on_change(print_bmi) # callback listeners can be simply added with on_change()\n\nheight.set_value(1.85) # if we change for example height, this will automatically update the bmi and consequently trigger the callback\n\nbmi.remove_callback(print_bmi) # callback listeners can be simply removed with remove_callback()\n\nheight.set_value(1.9) # now, the callback listener is not called anymore\n```\n\nNow, let's dive a bit deeper into the functioning of fixpy at the example of a fixed-point iteration.\n\n```python\ndef still_ok(old_value,new_value): # we can define a threshold at which a Variable does not get updated anymore (this becomes important, if you want to work with more complex variables such as vectors / matrices / tensors)\n  return abs(old_value-new_value) < 1e-8\n\nx = Variable(2, name=\"value\", still_ok = still_ok, max_recursions=10000, alpha=0.5) # furthermore, we can define a maximum number of iterations and a \"low-pass\" filter for updates alpha\n\ndef golden_ratio_iteration(x):\n  return 1/(x-1)\n\nf = Function(golden_ratio_iteration,[x]) # f gets updated whenever x changes\n\nx.observe(f) # using x.observe(f), x gets updated to the value of f whenever f changes\n# => this results in a loop that iteratively applies f on x until still_ok or max_recursions is reached\n# => this is effectively a fixed point iteration (-> therefore the name fixpy ;)\n\nprint(f\"x = {x.get_value()} (this corresponds to golden ratio)\")\n```\n\nFixpy also works with Strings:\n\n```python\nname = Variable(\"world\")\n\nhello_name = Function(lambda n: \"Hello \"+n+\"!\", [name], still_ok=None)\n\nprint(hello_name.get_value())\n\nname.set_value(\"universe\")\n\nprint(hello_name.get_value())\n```\n\n## Shortened Syntax Examples\nFirst, let's revise the BMI example:\n\n```python\nweight = Variable(70,name=\"weight\") # introduce a new variable for body weight\nheight = Variable(1.8,name=\"height\") # introduce a new variable for body height\n\nbmi = weight/height**2 # here, a function tree is created that computes the bmi and that gets automatically updated, if the value in weight or height changes\n\nprint(f\"BMI = {bmi.x}\") # instead of get_value() we can simply use x to obtain the computed value\n\nweight.x = 80 # similarly, we can use x to set the value of a variable\n\nprint(f\"new BMI = {bmi.x}\") # ... as you can see, the BMI was automatically updated\n\nbmi.plot() # plot a graph of event directions (this corresponds to the function tree mentioned above)\n```\n\nUsing the shortened syntax, callback listeners can be simply added and removed as follows:\n\n```python\nbmi >> (lambda new_bmi: print(f\"The BMI has changed! BMI = {new_bmi}\")) # instead of on_change(), we can use >>\n# by the way, the following syntax would work just as well:\n# (lambda new_bmi: print(f\"The BMI has changed! BMI = {new_bmi}\")) << bmi\n\nheight.x = 1.85 # if we change for example height, this will automatically update the bmi and consequently trigger the callback\n\nbmi.remove_callback() # if we don't pass an argument to remove_callback(), all callbacks will be removed\n\nheight.x = 1.9\n```\nA fixed-point iteration can be described in just 2 lines of code:\n\n```python\nx = Variable(2, name=\"value\", still_ok = lambda old, new: abs(old-new)<1e-8, max_recursions=10000, alpha=0.5) # furthermore, we can define a maximum number of iterations and a \"low-pass\" filter for updates alpha\n\nx << 1/(x-1) # instead of observe, we can use <<\n# by the way, the following syntax would work just as well:\n# 1/(x-1) >> x\n\nprint(f\"x = {x.get_value()} (this corresponds to golden ratio)\")\n```\nAnd this is the shortened syntax for strings:\n\n```python\nname = Variable(\"world\")\n\nhello_name = \"Hello \"+name+\"!\"\n\nprint(hello_name.x)\n\nname.x = \"universe\"\n\nprint(hello_name.x)\n```\nThese were the most important concepts of fixpy.\n\n## More Details\n\nCustom functions can be simply created as follows:\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef polynome(x, *coefficients): # custom polynome function\n  def _p(x, *coefficients):\n    return sum(c*x**i for i,c in enumerate(coefficients))\n  return Function(_p,[x, *coefficients])\n\nx = Variable(np.arange(-1, 3, 0.1), name=\"x\") # btw: variables also work with numpy arrays\ncoefficients = [Variable(c, name=f\"c{i}\") for i,c in enumerate([1,0,0])]\np = polynome(x, *coefficients)\n\nplt.plot(x.x,p.x)\nplt.show()\n\np >> (lambda y: (plt.plot(x.x,y), plt.show())) # replot polynome automatically, if results change\n\nVariable.set_values(coefficients,[1,1,-1]) # multiple variables can be set at the same time with set_values() => this triggers the replot callback\n```\nIf you want to define your own Variables with customized functions, you can inherit from Variable as follows:\n\n```python\nclass Inversion(Variable):\n  def __init__(self,*args,**kwargs):\n    super().__init__(*args,**kwargs)\n  \n  def inv(self):\n    return Function(lambda x: 1/x,[self])\n\na = Inversion(10,name=\"a\")\nprint(f\"a_inv = {a.inv().x}\")\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,event,events,event-driven,fixed-point iteration",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fixpy",
    "package_url": "https://pypi.org/project/fixpy/",
    "platform": null,
    "project_url": "https://pypi.org/project/fixpy/",
    "project_urls": {
      "Source Code": "https://github.com/aschethor/fixpy"
    },
    "release_url": "https://pypi.org/project/fixpy/0.0.6/",
    "requires_dist": [
      "matplotlib",
      "networkx",
      "numpy"
    ],
    "requires_python": "",
    "summary": "Simple event-driven programming",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15396828,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f377de00ee43fa8cd7f3da349d27a3839fa73f6a5a5dfa7f20ff5943a167df7",
          "md5": "acf6d6251717b90023f8d86d0218b548",
          "sha256": "badb9abe1aec6e5b83b3c72f25fbc6191e1ddc60eacb9614a499647e0d1d56e4"
        },
        "downloads": -1,
        "filename": "fixpy-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "acf6d6251717b90023f8d86d0218b548",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4962,
        "upload_time": "2022-10-12T16:05:50",
        "upload_time_iso_8601": "2022-10-12T16:05:50.108879Z",
        "url": "https://files.pythonhosted.org/packages/8f/37/7de00ee43fa8cd7f3da349d27a3839fa73f6a5a5dfa7f20ff5943a167df7/fixpy-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "266811fd819d4ba9ad0122ffa53efdb815264e6168cd26c465e0190b047c6fa1",
          "md5": "1141721fc043571339d2031df23146c3",
          "sha256": "8009abacf6e262ef1fd4140327c0181ccc53bf7506e4847c04dbaeb2d9e32ef4"
        },
        "downloads": -1,
        "filename": "fixpy-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1141721fc043571339d2031df23146c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4876,
        "upload_time": "2022-10-12T16:05:51",
        "upload_time_iso_8601": "2022-10-12T16:05:51.915457Z",
        "url": "https://files.pythonhosted.org/packages/26/68/11fd819d4ba9ad0122ffa53efdb815264e6168cd26c465e0190b047c6fa1/fixpy-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "890fdcd266032862cf077f181f305b22ef579fb96e3eb6e95ce8cabfa55caf7f",
          "md5": "c88002e0a6426823171ae83ee634edbf",
          "sha256": "8389fbf6eb83e68cbd21d680e2c4a370b448caf2c3ea6b22a02d19c7c622ee64"
        },
        "downloads": -1,
        "filename": "fixpy-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c88002e0a6426823171ae83ee634edbf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7480,
        "upload_time": "2022-10-13T00:52:52",
        "upload_time_iso_8601": "2022-10-13T00:52:52.865060Z",
        "url": "https://files.pythonhosted.org/packages/89/0f/dcd266032862cf077f181f305b22ef579fb96e3eb6e95ce8cabfa55caf7f/fixpy-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40985460645b5d0e3aa1a9452bb59482a2211e26b7ec4a5c525be4c608816970",
          "md5": "80fc432e7bc73503fd3acc724a16d1d6",
          "sha256": "68d8746951d067b8d5ac5d200a346772ff3c82f08e9fadb11fb21b1bff40ba27"
        },
        "downloads": -1,
        "filename": "fixpy-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "80fc432e7bc73503fd3acc724a16d1d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7771,
        "upload_time": "2022-10-13T00:52:54",
        "upload_time_iso_8601": "2022-10-13T00:52:54.665991Z",
        "url": "https://files.pythonhosted.org/packages/40/98/5460645b5d0e3aa1a9452bb59482a2211e26b7ec4a5c525be4c608816970/fixpy-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14086ea3d220c2062ef2742eeae79dd0c8ae539f80a2a3c47696e75d2e1780c5",
          "md5": "13ad9cd0db7bbd9640de17fcc0f68a2d",
          "sha256": "6ac6fa48c480531277db5554b357ea7c1f9ec183767ede61f97a65200bdf4a3d"
        },
        "downloads": -1,
        "filename": "fixpy-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "13ad9cd0db7bbd9640de17fcc0f68a2d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7495,
        "upload_time": "2022-10-13T01:15:27",
        "upload_time_iso_8601": "2022-10-13T01:15:27.899166Z",
        "url": "https://files.pythonhosted.org/packages/14/08/6ea3d220c2062ef2742eeae79dd0c8ae539f80a2a3c47696e75d2e1780c5/fixpy-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "beda341c313b0b4fb035e12b99bab7213e64b1e1efea1335553b7dae9229f9e3",
          "md5": "996ba685d25629991b4eb63d85826050",
          "sha256": "c8b909da5540caaf1db90bae3089bf09b14d4c1f42d56ecc705c897b24c0d9b1"
        },
        "downloads": -1,
        "filename": "fixpy-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "996ba685d25629991b4eb63d85826050",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7779,
        "upload_time": "2022-10-13T01:15:30",
        "upload_time_iso_8601": "2022-10-13T01:15:30.198035Z",
        "url": "https://files.pythonhosted.org/packages/be/da/341c313b0b4fb035e12b99bab7213e64b1e1efea1335553b7dae9229f9e3/fixpy-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c34dca328848f283ed940510805ee967a11ce1ba4b6fb2d68266c217c2cf5723",
          "md5": "2cec9828873d8078de0047c494536761",
          "sha256": "9e61c5b9daaa5e498793e654f08b46e0d838d96b5450ebaa26309d1c66994aef"
        },
        "downloads": -1,
        "filename": "fixpy-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2cec9828873d8078de0047c494536761",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7499,
        "upload_time": "2022-10-13T01:44:21",
        "upload_time_iso_8601": "2022-10-13T01:44:21.904881Z",
        "url": "https://files.pythonhosted.org/packages/c3/4d/ca328848f283ed940510805ee967a11ce1ba4b6fb2d68266c217c2cf5723/fixpy-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8c62ec1022196dcf5e2fee6775f002c09c4c7ba7dc669586db9fb60990ac782",
          "md5": "38dfe31050b23453048556d828895824",
          "sha256": "e2f09263778e9f8f7df6b029f84bb04a104ba7c8aef397630443eb8362882dee"
        },
        "downloads": -1,
        "filename": "fixpy-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "38dfe31050b23453048556d828895824",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7776,
        "upload_time": "2022-10-13T01:44:23",
        "upload_time_iso_8601": "2022-10-13T01:44:23.777412Z",
        "url": "https://files.pythonhosted.org/packages/a8/c6/2ec1022196dcf5e2fee6775f002c09c4c7ba7dc669586db9fb60990ac782/fixpy-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c34ca493cef053312987d5ebd28d8482f5271495dfede14742a3d960dd9f7937",
          "md5": "25290dcb153808ab54ec661ba5920307",
          "sha256": "8e36ffe1dc5492d7318f7bdb93a2fa51a32ca50440ee0b31bdbd96eb0109a345"
        },
        "downloads": -1,
        "filename": "fixpy-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "25290dcb153808ab54ec661ba5920307",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7775,
        "upload_time": "2022-10-13T09:32:02",
        "upload_time_iso_8601": "2022-10-13T09:32:02.343285Z",
        "url": "https://files.pythonhosted.org/packages/c3/4c/a493cef053312987d5ebd28d8482f5271495dfede14742a3d960dd9f7937/fixpy-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "989d04b7e4c38ef046e1b8356a834af79d226487495781bc7452f730c434afca",
          "md5": "6d04fbe26ecb035563fb80320360b310",
          "sha256": "899dd760d593cedc3c9b408f957fa313a383fab61e60693b377702cc6d6c841e"
        },
        "downloads": -1,
        "filename": "fixpy-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "6d04fbe26ecb035563fb80320360b310",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8135,
        "upload_time": "2022-10-13T09:32:04",
        "upload_time_iso_8601": "2022-10-13T09:32:04.423272Z",
        "url": "https://files.pythonhosted.org/packages/98/9d/04b7e4c38ef046e1b8356a834af79d226487495781bc7452f730c434afca/fixpy-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c34ca493cef053312987d5ebd28d8482f5271495dfede14742a3d960dd9f7937",
        "md5": "25290dcb153808ab54ec661ba5920307",
        "sha256": "8e36ffe1dc5492d7318f7bdb93a2fa51a32ca50440ee0b31bdbd96eb0109a345"
      },
      "downloads": -1,
      "filename": "fixpy-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "25290dcb153808ab54ec661ba5920307",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7775,
      "upload_time": "2022-10-13T09:32:02",
      "upload_time_iso_8601": "2022-10-13T09:32:02.343285Z",
      "url": "https://files.pythonhosted.org/packages/c3/4c/a493cef053312987d5ebd28d8482f5271495dfede14742a3d960dd9f7937/fixpy-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "989d04b7e4c38ef046e1b8356a834af79d226487495781bc7452f730c434afca",
        "md5": "6d04fbe26ecb035563fb80320360b310",
        "sha256": "899dd760d593cedc3c9b408f957fa313a383fab61e60693b377702cc6d6c841e"
      },
      "downloads": -1,
      "filename": "fixpy-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "6d04fbe26ecb035563fb80320360b310",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8135,
      "upload_time": "2022-10-13T09:32:04",
      "upload_time_iso_8601": "2022-10-13T09:32:04.423272Z",
      "url": "https://files.pythonhosted.org/packages/98/9d/04b7e4c38ef046e1b8356a834af79d226487495781bc7452f730c434afca/fixpy-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}