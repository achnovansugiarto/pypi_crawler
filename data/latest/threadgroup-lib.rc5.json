{
  "info": {
    "author": "Chloe Holst",
    "author_email": "chloe.holst@dataductus.se",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# threadgroup-lib\nThis package is used to define thread groups and register functions to run concurrently in that group\n\n## Usage\nUsing it is fairly simply and intuitive: \n```python\nimport threadgroup\n\nfirst = threadgroup.ThreadGroup()\nsecond = threadgroup.ThreadGroup()\n\n@first.register()\ndef f1():\n    pass\n\n@first.register()\ndef f2():\n    pass\n\n@second.register()\ndef s1():\n    pass\n\n@second.register()\ndef s2():\n    pass\n\nfirst.execute()\nassert first.executed\nassert second.executed is False\n\nsecond.execute()\nassert second.executed\n```\nWhat we do here is to define two separate groups, `first` and `second`, then register which functions we want to run in each group\n\n### Using with varvault\n[Varvault](https://github.com/data-ductus/varvault) can be leveraged to create some very interesting code that runs concurrently while also being very flexible and easy to maintain:\n\n```python\nimport time\nimport threadgroup\nimport varvault\n\nclass Keyring(varvault.Keyring):\n    k1 = varvault.Key(\"k1\", valid_type=str)\n    k2 = varvault.Key(\"k2\", valid_type=int)\n    k3 = varvault.Key(\"k3\", valid_type=float)\n\n\nvault = varvault.create_vault(Keyring, \"vault\")\nsleep = 0.5\ninit = threadgroup.ThreadGroup()\nuse = threadgroup.ThreadGroup()\n\n@init.register()\n@vault.vaulter(return_keys=Keyring.k1)\ndef set_k1():\n    time.sleep(sleep)\n    return \"valid\"\n\n@init.register()\n@vault.vaulter(return_keys=Keyring.k2)\ndef set_k2():\n    time.sleep(sleep)\n    return 1\n\n@init.register()\n@vault.vaulter(return_keys=Keyring.k3)\ndef set_k3():\n    time.sleep(sleep)\n    return 3.14\n\n@use.register()\n@vault.vaulter(input_keys=Keyring.k1)\ndef use_k1(k1=None):\n    time.sleep(sleep)\n    assert k1 == \"valid\"\n    return k1\n\n@use.register()\n@vault.vaulter(input_keys=Keyring.k2)\ndef use_k2(k2=None):\n    time.sleep(sleep)\n    assert k2 == 1\n    return k2\n\n@use.register()\n@vault.vaulter(input_keys=Keyring.k3)\ndef use_k3(k3=None):\n    time.sleep(sleep)\n    assert k3 == 3.14\n    return k3\n\nstart = time.time()\ninit.execute()\nassert sleep - 0.2 < time.time() - start < sleep + 0.2, \"Took too long to run. Concurrency seems broken\"\nassert Keyring.k1 in vault and vault.get(Keyring.k1) == \"valid\"\nassert Keyring.k2 in vault and vault.get(Keyring.k2) == 1\nassert Keyring.k3 in vault and vault.get(Keyring.k3) == 3.14\nassert init.executed\nassert use.executed is False\n\nstart = time.time()\nuse.execute()\nassert sleep - 0.2 < time.time() - start < sleep + 0.2, \"Took too long to run. Concurrency seems broken\"\nresults = use.get_results()\n```\nWe define a varvault object called `vault` which we set the variables to. The functions `set_k1`, `set_k2`, `set_k3` set each of the keys to the vault and they all run in the thread group `init`. \nWe then use those variables in `use_k1`, `use_k2`, `use_k3`. \n\nThe benefit of using varvault together with thread-groups is that varvault already abstracts away input variables and return variables from functions, \nallowing for a decoupled flow that works extremely well to run in thread-groups that are executed in this fashion. Since functions are registered and then executed when `execute()` is called, \nsupplying input variables to the functions and handling return variables from the functions is a bit of a hassle. Varvault handles this entirely, \nallowing the user to focus on other things and running things concurrently (as much as Python will allow). \n\n### Running without thread groups\nIt's entirely possible to use the library to just run functions concurrently. This is how you may use it: \n```python\nimport threadgroup\nfrom typing import List\n\ndef f1(a1):\n    assert a1 == 1\n    return a1\n\ndef f2(a2):\n    assert a2 == 2\n    return a2\n\ndef f3(a1, kw1=None):\n    assert a1 == 1\n    assert kw1 is True\n    return a1, kw1\n\nfunctions: List[threadgroup.Function] = [threadgroup.create_function(f1, 1), threadgroup.create_function(f2, 2), threadgroup.create_function(f3, 1, kw1=True)]\nresult: threadgroup.ResultList[threadgroup.ResultStruct] = threadgroup.threaded_execution(functions)\nassert f\"{result}\" == \"[(function=f1; result=1), (function=f2; result=2), (function=f3; result=(1, True))]\"\n```\nWhat we do here is to define three different functions that each take different arguments. We then build a list of functions with their arguments. We then run those functions concurrently by calling `threadgroup.threaded_execution`.  \n\nIt's also possible to run the same function multiple times with different input parameters. This is how you'd do it:\n```python\nimport threadgroup\nfrom typing import List\n\narg_values = [1, 2, 3, 4, 5]\n\ndef f1(a1):\n    assert a1 in arg_values, f\"{a1} not in {arg_values}\"\n    return a1\n\nfunctions: List[threadgroup.Function] = [threadgroup.create_function(f1, arg_value) for arg_value in arg_values]\nresult: threadgroup.ResultList[threadgroup.ResultStruct] = threadgroup.threaded_execution(functions)\nassert f\"{result}\" == \"[(function=f1; result=1), (function=f1; result=2), (function=f1; result=3), (function=f1; result=4), (function=f1; result=5)]\"\n```\nIn this example we also create a list of functions, but this time we do it based on the input parameters in `arg_values`, allowing it to scale easily based on an iterable.\nWe then do the same as previously and run the functions concurrently through `threadgroup.threaded_execution`. \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/data-ductus/threadgroup-lib",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "threadgroup-lib",
    "package_url": "https://pypi.org/project/threadgroup-lib/",
    "platform": null,
    "project_url": "https://pypi.org/project/threadgroup-lib/",
    "project_urls": {
      "Homepage": "https://github.com/data-ductus/threadgroup-lib"
    },
    "release_url": "https://pypi.org/project/threadgroup-lib/1.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A package that sets up thread-groups to run methods concurrently that can run concurrently in a relatively simple and intuitive way.",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17394144,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34beacfd83f5f710efc4b7ff2cb55078df2a91529af0965667e6a1802d490710",
          "md5": "1df7543832d0017011d1f5137c222c4c",
          "sha256": "060b60ab91ed5ad1bde97dce48e24fcd5340b69259a167639698a0078d348c29"
        },
        "downloads": -1,
        "filename": "threadgroup_lib-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1df7543832d0017011d1f5137c222c4c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9697,
        "upload_time": "2022-07-30T06:22:11",
        "upload_time_iso_8601": "2022-07-30T06:22:11.386425Z",
        "url": "https://files.pythonhosted.org/packages/34/be/acfd83f5f710efc4b7ff2cb55078df2a91529af0965667e6a1802d490710/threadgroup_lib-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1cca94f093803aeffe1d612d9f996d7769942f64385e5b58dbd9c0f2dd5436f",
          "md5": "767605a7e34b41d185ee7a31e8267c27",
          "sha256": "371eac03108c181ab7fe862e1de55f6128297492283273cca147a80ce366bf39"
        },
        "downloads": -1,
        "filename": "threadgroup-lib-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "767605a7e34b41d185ee7a31e8267c27",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9848,
        "upload_time": "2022-07-30T06:22:13",
        "upload_time_iso_8601": "2022-07-30T06:22:13.664759Z",
        "url": "https://files.pythonhosted.org/packages/a1/cc/a94f093803aeffe1d612d9f996d7769942f64385e5b58dbd9c0f2dd5436f/threadgroup-lib-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6664f61df4ee9dd51c4cd302cafc725700776df3c7e61b6c8ebc88b6380fe9c",
          "md5": "ac6155eac543cc7c7121fe386249ac26",
          "sha256": "ca397dac7aa6d9b117263313e76ef80296603b00b80b7310c3304ca2bf85518d"
        },
        "downloads": -1,
        "filename": "threadgroup_lib-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac6155eac543cc7c7121fe386249ac26",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9680,
        "upload_time": "2022-07-30T06:50:17",
        "upload_time_iso_8601": "2022-07-30T06:50:17.701792Z",
        "url": "https://files.pythonhosted.org/packages/a6/66/4f61df4ee9dd51c4cd302cafc725700776df3c7e61b6c8ebc88b6380fe9c/threadgroup_lib-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "764bab2cc305a0577ba998f3cf1e5c9ad41108ae48458a1ea6008babd1cb69d2",
          "md5": "f556641fd105dabf29d83ed4d499bc1f",
          "sha256": "0afc26a971c1621dc72487a5c7a90339376d0ca409137ab56c52069c2acfc355"
        },
        "downloads": -1,
        "filename": "threadgroup-lib-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f556641fd105dabf29d83ed4d499bc1f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9849,
        "upload_time": "2022-07-30T06:50:19",
        "upload_time_iso_8601": "2022-07-30T06:50:19.982102Z",
        "url": "https://files.pythonhosted.org/packages/76/4b/ab2cc305a0577ba998f3cf1e5c9ad41108ae48458a1ea6008babd1cb69d2/threadgroup-lib-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ee54d3d8577ded6a1d47775ffb543d5c770a4d0948fcb20832124d98b338fb0",
          "md5": "8212120f5ba02a86dbda236f5ccb5696",
          "sha256": "7460080e7646e3318417af4323e57ff5a923592576263384d5194f99fb478ff1"
        },
        "downloads": -1,
        "filename": "threadgroup_lib-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8212120f5ba02a86dbda236f5ccb5696",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9792,
        "upload_time": "2022-08-01T07:33:21",
        "upload_time_iso_8601": "2022-08-01T07:33:21.683642Z",
        "url": "https://files.pythonhosted.org/packages/7e/e5/4d3d8577ded6a1d47775ffb543d5c770a4d0948fcb20832124d98b338fb0/threadgroup_lib-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38320cb96f0fb0f50c106b9d0688e6fa3188be69db7730fdf4ef63e41c63a742",
          "md5": "e169f12d980f0f018437aab7190dec61",
          "sha256": "e664eace13fc69872357f3dd08e1515fae5b15fde9f865510a44f21b5ed1b8b3"
        },
        "downloads": -1,
        "filename": "threadgroup-lib-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e169f12d980f0f018437aab7190dec61",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10001,
        "upload_time": "2022-08-01T07:33:23",
        "upload_time_iso_8601": "2022-08-01T07:33:23.881659Z",
        "url": "https://files.pythonhosted.org/packages/38/32/0cb96f0fb0f50c106b9d0688e6fa3188be69db7730fdf4ef63e41c63a742/threadgroup-lib-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3645db9a88a63d53759a77a4e6be66063e7cecf8d1d893e15b6cef240040d985",
          "md5": "3eda84c88dee6a49da407904a75a0981",
          "sha256": "e9f95951e8ec09f8d0b766d2174e5b9bac3319b91e2960f8d6dbcbe6e3d61e88"
        },
        "downloads": -1,
        "filename": "threadgroup_lib-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3eda84c88dee6a49da407904a75a0981",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9839,
        "upload_time": "2022-08-02T07:38:51",
        "upload_time_iso_8601": "2022-08-02T07:38:51.035697Z",
        "url": "https://files.pythonhosted.org/packages/36/45/db9a88a63d53759a77a4e6be66063e7cecf8d1d893e15b6cef240040d985/threadgroup_lib-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1c65cec92c43d1eafac04b91fc36fc19017db2826c7f14e6c483d953c24b0e6",
          "md5": "120d48162ac737f75aa37d0d9662d3ae",
          "sha256": "54c060cb4416fc198b9acc1210a534c79f088aa8fdc572bdd7248089defac44a"
        },
        "downloads": -1,
        "filename": "threadgroup-lib-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "120d48162ac737f75aa37d0d9662d3ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10019,
        "upload_time": "2022-08-02T07:38:52",
        "upload_time_iso_8601": "2022-08-02T07:38:52.985727Z",
        "url": "https://files.pythonhosted.org/packages/d1/c6/5cec92c43d1eafac04b91fc36fc19017db2826c7f14e6c483d953c24b0e6/threadgroup-lib-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "161296039f295b6e433501cf29a9fd0197d2b5d876687678abda586d529db7bd",
          "md5": "403a404aa431a4bbaa56148b1718f656",
          "sha256": "6f9024d6a169b6c90bc44895557d1a07ef451349981402695092ab8995bff607"
        },
        "downloads": -1,
        "filename": "threadgroup_lib-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "403a404aa431a4bbaa56148b1718f656",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9840,
        "upload_time": "2023-03-22T06:55:40",
        "upload_time_iso_8601": "2023-03-22T06:55:40.978153Z",
        "url": "https://files.pythonhosted.org/packages/16/12/96039f295b6e433501cf29a9fd0197d2b5d876687678abda586d529db7bd/threadgroup_lib-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75abd2c272527eec1809c5b9bdb9419153e835c26518ccb529cf126f7c51d8b8",
          "md5": "32c02e75f399ec07a0cb5d04278f09f6",
          "sha256": "a90d46e8ce2cbaf0e497f7805cda66114d51f76deb4b2b3a8aebdfaad15e5732"
        },
        "downloads": -1,
        "filename": "threadgroup-lib-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "32c02e75f399ec07a0cb5d04278f09f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12787,
        "upload_time": "2023-03-22T06:55:43",
        "upload_time_iso_8601": "2023-03-22T06:55:43.663287Z",
        "url": "https://files.pythonhosted.org/packages/75/ab/d2c272527eec1809c5b9bdb9419153e835c26518ccb529cf126f7c51d8b8/threadgroup-lib-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "161296039f295b6e433501cf29a9fd0197d2b5d876687678abda586d529db7bd",
        "md5": "403a404aa431a4bbaa56148b1718f656",
        "sha256": "6f9024d6a169b6c90bc44895557d1a07ef451349981402695092ab8995bff607"
      },
      "downloads": -1,
      "filename": "threadgroup_lib-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "403a404aa431a4bbaa56148b1718f656",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9840,
      "upload_time": "2023-03-22T06:55:40",
      "upload_time_iso_8601": "2023-03-22T06:55:40.978153Z",
      "url": "https://files.pythonhosted.org/packages/16/12/96039f295b6e433501cf29a9fd0197d2b5d876687678abda586d529db7bd/threadgroup_lib-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "75abd2c272527eec1809c5b9bdb9419153e835c26518ccb529cf126f7c51d8b8",
        "md5": "32c02e75f399ec07a0cb5d04278f09f6",
        "sha256": "a90d46e8ce2cbaf0e497f7805cda66114d51f76deb4b2b3a8aebdfaad15e5732"
      },
      "downloads": -1,
      "filename": "threadgroup-lib-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "32c02e75f399ec07a0cb5d04278f09f6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12787,
      "upload_time": "2023-03-22T06:55:43",
      "upload_time_iso_8601": "2023-03-22T06:55:43.663287Z",
      "url": "https://files.pythonhosted.org/packages/75/ab/d2c272527eec1809c5b9bdb9419153e835c26518ccb529cf126f7c51d8b8/threadgroup-lib-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}