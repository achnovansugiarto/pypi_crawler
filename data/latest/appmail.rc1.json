{
  "info": {
    "author": "YunoJuno",
    "author_email": "code@yunojuno.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": ".. image:: https://travis-ci.org/yunojuno/django-appmail.svg?branch=master\n    :target: https://travis-ci.org/yunojuno/django-appmail\n\n.. image:: https://badge.fury.io/py/django-appmail.svg\n    :target: https://badge.fury.io/py/django-appmail\n\nDjango-AppMail\n--------------\n\nDjango app for managing transactional email templates.\n\nCompatibility\n=============\n\nThis project now requires Django2.2+ and Python3.7+. If you require a previous\nversion you will have to refer to the relevant branch or tag.\n\nBackground\n==========\n\nThis project arose out of a project to integrate a large transactional Django\napplication with Mandrill, and the lessons learned. It also owes a minor h/t\nto this project from 2011 (https://github.com/hugorodgerbrown/AppMail).\n\nThe core requirement is to provide an easy way to add / edit email templates\nto a Django project, in such a way that it doesn't require a developer to make\nchanges. The easiest way to use templated emails in Django is to rely on the\nin-built template structure, but that means that the templates are held in\nfiles, under version control, which makes it very hard for non-developers to\nedit.\n\nThis is **not** a WYSIWYG HTML editor, and it doesn't do anything clever. It\ndoesn't handle the sending of the emails - it simply provides a convenient\nmechanism for storing and rendering email content.\n\n.. code:: python\n\n    from appmail.models import EmailTemplate\n\n    def send_order_confirmation(order_id):\n        order = Orders.objects.get(id=order_id)\n        template = EmailTemplate.objects.current('order_confirmation')\n        context = { \"order\": order }\n        # create_message accepts EmailMultiAlternatives constructor kwargs\n        # and returns a standard Django email object which can be updated / sent.\n        message = template.create_message(context, to=[order.recipient.email])\n        message.send()\n\nThe core requirements are:\n\n1. List / preview existing templates\n2. Edit subject line, plain text and HTML content\n3. Use standard Django template syntax\n4. Support base templates\n5. Template versioning\n6. Language support\n7. Send test emails\n\n**Template properties**\n\nIndividual templates are stored as model objects in the database. The\nstandard Django admin site is used to view / filter templates. The templates\nare ordered by name, language and version. This combination is unique. The\nlanguage and version properties have sensible defaults (\n`version=settings.LANGUAGE_CODE` and `version=0`) so don't need to set if you\ndon't require it. There is no inheritance or relationship between different\nlanguages and versions - they are stored as independent objects.\n\n.. code:: python\n\n    # get the default order_summary email (language = settings.LANGUAGE_CODE)\n    template = EmailTemplate.objects.current('order_summary')\n    # get the french version\n    template = EmailTemplate.objects.current('order_summary', language='fr')\n    # get a specific version\n    template = EmailTemplate.objects.version('order_summary', 1)\n\n**Template syntax**\n\nThe templates themselves use standard Django template syntax, including\nthe use of tags, filters. There is nothing special about them, however there\nis one caveat - template inheritance.\n\n**Template inheritance**\n\nAlthough the template content is not stored on disk, without re-engineering\nthe template rendering methods any parent templates must be. This is annoying,\nbut there is a valid assumption behind it - if you are changing your base\ntemplates you are probably involving designers and developers already, so\nhaving to rely on a developer to make the changes is acceptable.\n\n**Sending test emails**\n\nYou can send test emails to an email address through the admin list view.\n\n.. image:: screenshots/appmail-test-email-action.png\n    :alt: EmailTemplate admin change form\n\nThe custom admin action 'Send test emails' will redirect to an intermediate\npage where you can enter the recipient email address and send the email:\n\n.. image:: screenshots/appmail-test-email-send.png\n\nThere is also a linkon individual template admin pages (top-right, next to the history link):\n\n.. image:: screenshots/appmail-template-change-form.png\n    :alt: EmailTemplate admin change form\n\nTests\n-----\n\nThere is a test suite for the app, which is best run through ``tox``.\n\nLicence\n-------\n\nMIT\n\nContributing\n------------\n\nUsual rules apply:\n\n1. Fork to your own account\n2. Create a branch, fix the issue / add the feature\n3. Submit PR\n\nPlease take care to follow the coding style - and PEP8.\n\n\nRelease\n-------\n\nIf you have found yourself in the situation of having to release a new version, and assuming you already have the necessary PyPi permissions, here are the next steps you need to take:\n\n**1. Update `setup.py` with the bumped version. Push it to master**\n - PATCH version for backwards-compatible hotfixes\n - MINOR version for backwards-compatible features\n - MAJOR version for incompatible features\n\n**2. Tag this new version by running the following commands**\n - `git tag -a v1.0.x -m v.1.0.x`\n - `git push --tags`\n\nNow, if you go to github and take a look at the tags, you should be able to see your version among them.\n\n**3. Build the wheel**\n - `python3 setup.py sdist bdist_wheel`\n\n**4. Upload it on PyPi using twine**\n - `twine upload dist/*`\n - you will be asked to provide your PyPi username and password\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "appmail",
    "package_url": "https://pypi.org/project/appmail/",
    "platform": "",
    "project_url": "https://pypi.org/project/appmail/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/appmail/1.3/",
    "requires_dist": [
      "django (>=2.2,<4.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "Django app for managing localised email templates.",
    "version": "1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7981552,
  "releases": {
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c38e49e4fa5b333dafdf56e6a8f7f076a36818ef84a43ab247a5b5db2928d5dc",
          "md5": "1309589a04ee3345bdb07a1d292c1cc4",
          "sha256": "b1f1c78af27e28187110c50b53e622bf05e88a00381edcf1384ead6ecdc1b75b"
        },
        "downloads": -1,
        "filename": "appmail-1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1309589a04ee3345bdb07a1d292c1cc4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 22047,
        "upload_time": "2020-08-17T18:50:59",
        "upload_time_iso_8601": "2020-08-17T18:50:59.641760Z",
        "url": "https://files.pythonhosted.org/packages/c3/8e/49e4fa5b333dafdf56e6a8f7f076a36818ef84a43ab247a5b5db2928d5dc/appmail-1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba451467f7c13a512d5bb86d4dcaf941c48ece7ff88b01c937bebc64f522b0f3",
          "md5": "cabab45a1f3d01df5d3195d5410cbe96",
          "sha256": "511f1ec2be7c52b1f4e2b0020c33450ad551ac099cd3e633eb4c60d66d170605"
        },
        "downloads": -1,
        "filename": "appmail-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cabab45a1f3d01df5d3195d5410cbe96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 18372,
        "upload_time": "2020-08-17T18:51:02",
        "upload_time_iso_8601": "2020-08-17T18:51:02.354783Z",
        "url": "https://files.pythonhosted.org/packages/ba/45/1467f7c13a512d5bb86d4dcaf941c48ece7ff88b01c937bebc64f522b0f3/appmail-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c38e49e4fa5b333dafdf56e6a8f7f076a36818ef84a43ab247a5b5db2928d5dc",
        "md5": "1309589a04ee3345bdb07a1d292c1cc4",
        "sha256": "b1f1c78af27e28187110c50b53e622bf05e88a00381edcf1384ead6ecdc1b75b"
      },
      "downloads": -1,
      "filename": "appmail-1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1309589a04ee3345bdb07a1d292c1cc4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 22047,
      "upload_time": "2020-08-17T18:50:59",
      "upload_time_iso_8601": "2020-08-17T18:50:59.641760Z",
      "url": "https://files.pythonhosted.org/packages/c3/8e/49e4fa5b333dafdf56e6a8f7f076a36818ef84a43ab247a5b5db2928d5dc/appmail-1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba451467f7c13a512d5bb86d4dcaf941c48ece7ff88b01c937bebc64f522b0f3",
        "md5": "cabab45a1f3d01df5d3195d5410cbe96",
        "sha256": "511f1ec2be7c52b1f4e2b0020c33450ad551ac099cd3e633eb4c60d66d170605"
      },
      "downloads": -1,
      "filename": "appmail-1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "cabab45a1f3d01df5d3195d5410cbe96",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 18372,
      "upload_time": "2020-08-17T18:51:02",
      "upload_time_iso_8601": "2020-08-17T18:51:02.354783Z",
      "url": "https://files.pythonhosted.org/packages/ba/45/1467f7c13a512d5bb86d4dcaf941c48ece7ff88b01c937bebc64f522b0f3/appmail-1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}