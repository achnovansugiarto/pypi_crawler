{
  "info": {
    "author": "Dmitry Pershin",
    "author_email": "dapper91@mail.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: Public Domain",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "===========\nrescheduler\n===========\n\n.. image:: https://github.com/dapper91/rescheduler/actions/workflows/test.yml/badge.svg\n    :target: https://github.com/dapper91/rescheduler/actions/workflows/test.yml\n    :alt: Build status\n.. image:: https://img.shields.io/pypi/l/rescheduler.svg\n    :target: https://pypi.org/project/rescheduler\n    :alt: License\n.. image:: https://img.shields.io/pypi/pyversions/rescheduler.svg\n    :target: https://pypi.org/project/rescheduler\n    :alt: Supported Python versions\n\n\n``rescheduler`` is a task scheduler built on top of redis. It stores all jobs and schedules in redis which provides\npersistency (depends on redis persistent level configuration), distributed work (multiple schedulers allowed to be\nrun simultaneously) and fault tolerance (in case of one scheduler crash the others takes away its jobs).\n\n\nInstallation\n------------\n\nYou can install rescheduler with pip:\n\n.. code-block:: console\n\n    $ pip install rescheduler\n\n\nQuickstart\n----------\n\nServer side:\n~~~~~~~~~~~~\n\n.. code-block:: python\n\n    import asyncio\n    import aioredis\n    from rescheduler import Scheduler, Job\n\n\n    def tick():\n        print(\"tick\")\n\n\n    def tack():\n        print(\"tack\")\n\n\n    async def callback(job: Job):\n        if job.data['method'] == 'tick':\n            tick()\n\n        elif job.data['method'] == 'tack':\n            tack()\n\n\n    async def main():\n        conn_pool = await aioredis.create_redis_pool(('localhost', 6379))\n        async with Scheduler(conn_pool=conn_pool, job_callback=callback, use_keyspace_notifications=True):\n            await asyncio.sleep(30)\n\n        conn_pool.close()\n        await conn_pool.wait_closed()\n\n\n    if __name__ == '__main__':\n        asyncio.run(main())\n\n\nClient side:\n~~~~~~~~~~~~\n\n.. code-block:: python\n\n    import asyncio\n    import aioredis\n    from rescheduler import Scheduler, Job, CronTrigger\n\n\n    async def main():\n        conn_pool = await aioredis.create_redis_pool(('localhost', 6379))\n        scheduler = Scheduler(conn_pool=conn_pool, job_callback=lambda: None)\n\n        await scheduler.add_job(\n            Job(\n                id='tick-task',\n                trigger=CronTrigger.parse(expr='*/10 * * * * *', seconds_ext=True),\n                data={'method': 'tick'},\n            )\n        )\n\n        await scheduler.add_job(\n            Job(\n                id='tack-task',\n                trigger=CronTrigger.parse(expr='*/10 * * * * *', seconds_ext=True),\n                data={'method': 'tack'},\n            ),\n            delay=5.0,\n        )\n\n        conn_pool.close()\n        await conn_pool.wait_closed()\n\n\n    if __name__ == '__main__':\n        asyncio.run(main())",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dapper91/rescheduler",
    "keywords": "scheduler,redis,distributed-scheduler",
    "license": "Public Domain License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rescheduler",
    "package_url": "https://pypi.org/project/rescheduler/",
    "platform": "",
    "project_url": "https://pypi.org/project/rescheduler/",
    "project_urls": {
      "Homepage": "https://github.com/dapper91/rescheduler",
      "Source": "https://github.com/dapper91/rescheduler"
    },
    "release_url": "https://pypi.org/project/rescheduler/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Python redis scheduler",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9830257,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfdf4a6035215a70dabe1402c260b192f8aa9e46391d8acd192d68d5489a8002",
          "md5": "00dfba190fcd28ad56595ca7b277be1e",
          "sha256": "f11f9d4cf7dcbf12d6182fec7348681523943b3f4750193c23ab48820c3872e2"
        },
        "downloads": -1,
        "filename": "rescheduler-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "00dfba190fcd28ad56595ca7b277be1e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8684,
        "upload_time": "2021-03-20T17:51:33",
        "upload_time_iso_8601": "2021-03-20T17:51:33.219538Z",
        "url": "https://files.pythonhosted.org/packages/df/df/4a6035215a70dabe1402c260b192f8aa9e46391d8acd192d68d5489a8002/rescheduler-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dfdf4a6035215a70dabe1402c260b192f8aa9e46391d8acd192d68d5489a8002",
        "md5": "00dfba190fcd28ad56595ca7b277be1e",
        "sha256": "f11f9d4cf7dcbf12d6182fec7348681523943b3f4750193c23ab48820c3872e2"
      },
      "downloads": -1,
      "filename": "rescheduler-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "00dfba190fcd28ad56595ca7b277be1e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 8684,
      "upload_time": "2021-03-20T17:51:33",
      "upload_time_iso_8601": "2021-03-20T17:51:33.219538Z",
      "url": "https://files.pythonhosted.org/packages/df/df/4a6035215a70dabe1402c260b192f8aa9e46391d8acd192d68d5489a8002/rescheduler-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}