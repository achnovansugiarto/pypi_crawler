{
  "info": {
    "author": "Thijs Vogels",
    "author_email": "thijs.vogels@epfl.ch",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# PowerSGD\n\nPractical Low-Rank Gradient Compression for Distributed Optimization\n\n[Video](https://www.youtube.com/watch?v=xVxSu7KGtHw)\n\nAbstract:\nWe study gradient compression methods to alleviate the communication bottleneck in data-parallel distributed optimization. Despite the significant attention received, current compression schemes either do not scale well or fail to achieve the target test accuracy. We propose a new low-rank gradient compressor based on power iteration that can i) compress gradients rapidly, ii) efficiently aggregate the compressed gradients using all-reduce, and iii) achieve test performance on par with SGD. The proposed algorithm is the only method evaluated that achieves consistent wall-clock speedups when benchmarked against regular SGD with an optimized communication backend. We demonstrate reduced training times for convolutional networks as well as LSTMs on common datasets.\n\n\n## Reference implementation\n\nThis is a reference implementation for the PowerSGD algorithm.\n\nInstallation:\n\n```bash\npip install git+https://github.com/epfml/powersgd.git\n```\n\nUsage:\n\n```diff\n+ from powersgd import PowerSGD, Config, optimizer_step\n\n  model = torchvision.models.resnet50(pretrained=True)\n  params = list(model.parameters())\n  optimizer = torch.optim.SGD(params, lr=0.1)\n\n+ powersgd = PowerSGD(params, config=Config(\n+     rank=1,  # lower rank => more aggressive compression\n+     min_compression_rate=10,  # don't compress gradients with less compression\n+     num_iters_per_step=2,  #   # lower number => more aggressive compression\n+     start_compressing_after_num_steps=0,\n+ ))\n\n  for each batch:\n      loss = ...\n-     optimizer.zero_grad()\n      loss.backward()\n-     optimizer.step()\n+     optimizer_step(optimizer, powersgd)\n```\n\n## PyTorch implementation\nPyTorch features an implementation of PowerSGD as a [communucation hook](https://pytorch.org/docs/stable/ddp_comm_hooks.html) for `DistributedDataParallel` models.\nBecause of the integration with DDP, the code is more involved than the code in this repository.\n## Research code\n\nResearch code for the experiments in the [PowerSGD paper](https://arxiv.org/abs/1905.13727) is located under [paper-code](./paper-code/README.md).\n\n## Selected follow-up work \n- [(Ramesh et al., 2021 - DALL-E)](https://arxiv.org/abs/2102.12092) share valuable recommendations in using PowerSGD for large-scale transformer training.\n- (Please submit a PR if you want to be included in this list.)\n\n\n# Reference\n\nIf you use this code, please cite the following [paper](https://arxiv.org/abs/1905.13727)\n\n    @inproceedings{vkj2019powersgd,\n      author = {Vogels, Thijs and Karimireddy, Sai Praneeth and Jaggi, Martin},\n      title = \"{{PowerSGD}: Practical Low-Rank Gradient Compression for Distributed Optimization}\",\n      booktitle = {NeurIPS 2019 - Advances in Neural Information Processing Systems},\n      year = 2019,\n      url = {https://arxiv.org/abs/1905.13727}\n    }\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/powersgd/issues",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "powersgd",
    "package_url": "https://pypi.org/project/powersgd/",
    "platform": null,
    "project_url": "https://pypi.org/project/powersgd/",
    "project_urls": {
      "Bug Tracker": "https://github.com/epfml/powersgd/issues",
      "Homepage": "https://github.com/powersgd/issues"
    },
    "release_url": "https://pypi.org/project/powersgd/0.0.2/",
    "requires_dist": [
      "torch (~=1.10.2)"
    ],
    "requires_python": ">=3.9",
    "summary": "PowerSGD: Gradient Compression Algorithm for Distributed Computation",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13348641,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6c2b08d7c5833a0fea0f6db464fa1945e88cd81be18134bf94c5b12b5797c1b",
          "md5": "94a4805799f49cacb5402b0b1c40edd0",
          "sha256": "79f6249ab5cb64b6538ba7adf0efc1432f0c7897cd4b0033f1ea56de2f83d7f2"
        },
        "downloads": -1,
        "filename": "powersgd-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94a4805799f49cacb5402b0b1c40edd0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 3400,
        "upload_time": "2022-03-30T16:13:27",
        "upload_time_iso_8601": "2022-03-30T16:13:27.362260Z",
        "url": "https://files.pythonhosted.org/packages/b6/c2/b08d7c5833a0fea0f6db464fa1945e88cd81be18134bf94c5b12b5797c1b/powersgd-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7a258507f0c659209a2522645b4b705d291d05a9cdd8cb567a262e7359762a5",
          "md5": "89c9a29b37a24f883971483a42b4f12e",
          "sha256": "7e016491949108f3c93c9276241b223721ecb665e93541471f6ed46825e0b74e"
        },
        "downloads": -1,
        "filename": "powersgd-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "89c9a29b37a24f883971483a42b4f12e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 3401,
        "upload_time": "2022-03-30T16:27:32",
        "upload_time_iso_8601": "2022-03-30T16:27:32.819594Z",
        "url": "https://files.pythonhosted.org/packages/a7/a2/58507f0c659209a2522645b4b705d291d05a9cdd8cb567a262e7359762a5/powersgd-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a7a258507f0c659209a2522645b4b705d291d05a9cdd8cb567a262e7359762a5",
        "md5": "89c9a29b37a24f883971483a42b4f12e",
        "sha256": "7e016491949108f3c93c9276241b223721ecb665e93541471f6ed46825e0b74e"
      },
      "downloads": -1,
      "filename": "powersgd-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "89c9a29b37a24f883971483a42b4f12e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 3401,
      "upload_time": "2022-03-30T16:27:32",
      "upload_time_iso_8601": "2022-03-30T16:27:32.819594Z",
      "url": "https://files.pythonhosted.org/packages/a7/a2/58507f0c659209a2522645b4b705d291d05a9cdd8cb567a262e7359762a5/powersgd-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}