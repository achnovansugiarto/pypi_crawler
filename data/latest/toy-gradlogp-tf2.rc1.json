{
  "info": {
    "author": "JoeHsiao",
    "author_email": "joehsiao@gapp.nthu.edu.tw",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "\n<img src=\"https://user-images.githubusercontent.com/18180004/136144615-0cd92028-8226-40c1-81ee-fa6c067e91e3.png\" align=\"right\" width=\"25%\"/>\n\n# toy_gradlogp_tf2\n\nThis repo implements some toy examples of the following score matching algorithms in TensorFlow 2.0:\n* `ssm-vr`: [sliced score matching](https://arxiv.org/abs/1905.07088) with variance reduction\n* `ssm`: [sliced score matching](https://arxiv.org/abs/1905.07088)\n* `deen`: [deep energy estimator networks](https://arxiv.org/abs/1805.08306)\n* `dsm`: [denoisnig score matching](http://www.iro.umontreal.ca/~vincentp/Publications/smdae_techreport.pdf)\n\nRelated projects:\n* [toy_gradlogp](https://github.com/Ending2015a/toy_gradlogp): PyTorch Implementation.\n\n## Installation\nBasic requirements:\n* Python >= 3.6\n* TensorFlow >= 2.3.0\n\nInstall from PyPI\n```shell\npip install toy_gradlogp_tf2\n```\n\nOr install the latest version from this repo\n```shell\npip install git+https://github.com.Ending2015a/toy_gradlogp_tf2.git@master\n```\n\n## Examples\nThe examples are placed in [toy_gradlogp/run/](https://github.com/Ending2015a/toy_gradlogp_tf2/tree/master/toy_gradlogp/run)\n\n### Train an energy model\n\nRun `ssm-vr` on `2spirals` dataset\n```shell\npython -m toy_gradlogp.run.train_energy --loss ssm-vr --data 2spirals\n```\n\nTo see the full options, type `--help` command:\n```\npython -m toy_gradlogp.run.train_energy --help\n```\n\n```\nusage: train_energy.py [-h] [--logdir LOGDIR]\n                       [--data {8gaussians,2spirals,checkerboard,rings}]\n                       [--loss {ssm-vr,ssm,deen,dsm}]\n                       [--noise {radermacher,sphere,gaussian}] [--lr LR]\n                       [--size SIZE] [--eval_size EVAL_SIZE]\n                       [--batch_size BATCH_SIZE] [--n_epochs N_EPOCHS]\n                       [--n_slices N_SLICES] [--n_steps N_STEPS] [--eps EPS]\n                       [--log_freq LOG_FREQ] [--eval_freq EVAL_FREQ]\n                       [--vis_freq VIS_FREQ]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --logdir LOGDIR\n  --data {8gaussians,2spirals,checkerboard,rings}\n                        dataset\n  --loss {ssm-vr,ssm,deen,dsm}\n                        loss type\n  --noise {radermacher,sphere,gaussian}\n                        noise type\n  --lr LR               learning rate\n  --size SIZE           dataset size\n  --eval_size EVAL_SIZE\n                        dataset size for evaluation\n  --batch_size BATCH_SIZE\n                        training batch size\n  --n_epochs N_EPOCHS   number of epochs to train\n  --n_slices N_SLICES   number of slices for sliced score matching\n  --n_steps N_STEPS     number of steps for langevin dynamics\n  --eps EPS             noise scale for langevin dynamics\n  --log_freq LOG_FREQ   logging frequency (unit: epoch)\n  --eval_freq EVAL_FREQ\n                        evaluation frequency (unit: epoch)\n  --vis_freq VIS_FREQ   visualization frequency (unit: epoch)\n```\n\n## Results\n\nTips: The larger density has a lower energy!\n\n### `8gaussians`\n\n| Algorithm | Results|\n|-|-|\n|`ssm-vr`|![](/assets/ssm-vr_8gaussians.png)|\n|`ssm`|![](/assets/ssm_8gaussians.png)|\n|`deen`| ![](/assets/deen_8gaussians.png) |\n|`dsm`| ![](/assets/dsm_8gaussians.png) |\n\n### `2spirals`\n\n| Algorithm | Results|\n|-|-|\n|`ssm-vr`|![](/assets/ssm-vr_2spirals.png)|\n|`ssm`|![](/assets/ssm_2spirals.png)|\n|`deen`| ![](/assets/deen_2spirals.png) |\n|`dsm`| ![](/assets/dsm_2spirals.png) |\n\n### `checkerboard`\n| Algorithm | Results|\n|-|-|\n|`ssm-vr`|![](/assets/ssm-vr_checkerboard.png)|\n|`ssm`|![](/assets/ssm_checkerboard.png)|\n|`deen`| ![](/assets/deen_checkerboard.png) |\n|`dsm`| ![](/assets/dsm_checkerboard.png) |\n\n### `rings`\n| Algorithm | Results|\n|-|-|\n|`ssm-vr`|![](/assets/ssm-vr_rings.png)|\n|`ssm`|![](/assets/ssm_rings.png)|\n|`deen`| ![](/assets/deen_rings.png) |\n|`dsm`| ![](/assets/dsm_rings.png) |\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Ending2015a/toy_gradlogp_tf2",
    "keywords": "score-matching playform tensorflow2.0 tensorflow",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "toy-gradlogp-tf2",
    "package_url": "https://pypi.org/project/toy-gradlogp-tf2/",
    "platform": "",
    "project_url": "https://pypi.org/project/toy-gradlogp-tf2/",
    "project_urls": {
      "Homepage": "https://github.com/Ending2015a/toy_gradlogp_tf2"
    },
    "release_url": "https://pypi.org/project/toy-gradlogp-tf2/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Some toy examples of score matching algorithms written in TensorFlow 2.0",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12371962,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80e6eb170f3e9f5a38f7b8e33a456042b0245801f3002065bcae26e8a8f4351c",
          "md5": "5ac53fed05b7b6c459d11f635c44333d",
          "sha256": "583b5f2b6eedcf4c809982f78cca0809f6f5adb9ce3655130e249c7953ee2ab3"
        },
        "downloads": -1,
        "filename": "toy-gradlogp-tf2-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5ac53fed05b7b6c459d11f635c44333d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11419,
        "upload_time": "2021-12-21T15:38:05",
        "upload_time_iso_8601": "2021-12-21T15:38:05.201816Z",
        "url": "https://files.pythonhosted.org/packages/80/e6/eb170f3e9f5a38f7b8e33a456042b0245801f3002065bcae26e8a8f4351c/toy-gradlogp-tf2-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "80e6eb170f3e9f5a38f7b8e33a456042b0245801f3002065bcae26e8a8f4351c",
        "md5": "5ac53fed05b7b6c459d11f635c44333d",
        "sha256": "583b5f2b6eedcf4c809982f78cca0809f6f5adb9ce3655130e249c7953ee2ab3"
      },
      "downloads": -1,
      "filename": "toy-gradlogp-tf2-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5ac53fed05b7b6c459d11f635c44333d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11419,
      "upload_time": "2021-12-21T15:38:05",
      "upload_time_iso_8601": "2021-12-21T15:38:05.201816Z",
      "url": "https://files.pythonhosted.org/packages/80/e6/eb170f3e9f5a38f7b8e33a456042b0245801f3002065bcae26e8a8f4351c/toy-gradlogp-tf2-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}