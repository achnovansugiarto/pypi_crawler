{
  "info": {
    "author": null,
    "author_email": "Hubert Chathi <hubert@uhoreg.ca>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Sphinx :: Extension",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License"
    ],
    "description": "# Literate Sphinx\n\nLiterate Sphinx is a [literate\nprogramming](https://en.wikipedia.org/wiki/Literate_programming) extension for\n[Sphinx](https://www.sphinx-doc.org/).  Literate programming is a method for\nwriting code interleaved with text.  With literate programming, code is\nintended to be written in an order that makes sense to a human reader, rather\nthan a computer.\n\nProducing the human-readable document from the document source is called\n\"weaving\", while producing the computer-readable code is called \"tangling\".  In\nthis extension, the weaving process is the normal Sphinx rendering process.\nFor tangling, this extension provides a `tangle` builder â€” running\n`make tangle` will output the computer-readable files in `_build/tangle`.\n\nAs is customary with literate programming tools, the extension is also [written\nin a literate programming style](code.md).\n\n## Usage\n\nInstall the extension by running `pip install literate-sphinx`, and add\n`'literate_sphinx'` to the `extensions` list in your `conf.py`.\n\nCode chunks are written using the `literate-code` directive, which takes the\nname of the chunk as its argument.  It takes the following options:\n\n* `lang`: the language of the chunk.  Defaults to `highlight_language`\n  specified in `conf.py`\n* `file`: (takes no value) present if the chunk is a file.  If the chunk is a\n  file, then the code chunk name\n* `class`: a list of class names separated by spaces to add to the HTML output\n* `name`: a target name that can be referenced by `ref` or `numrf`.  This\n  should not be confused with the code chunk name.\n\ne.g in ReST\n\n```rst\n.. literate-code:: code chunk name\n   :lang: python\n\n   def hello():\n       print(\"Hello world\")\n```\n\nor in Markdown using [MyST\nparser](https://myst-parser.readthedocs.io/en/latest/index.html)\n\n~~~markdown\n```{literate-code} code chunk name\n:lang: python\n\ndef hello():\n    print(\"Hello world\")\n```\n~~~\n\nTo include another code chunk, enclose it between `{{` and `}}` delimiters.\nOnly one code chunk is allowed per line.  The code chunk will be prefixed with\neverything before the delimiters on the line, and suffixed by everything after\nthe delimiters.\n\nFor example,\n\n```rst\n.. literate-code:: file.py\n   :file:\n   # before\n   {{code chunk name}}\n   # after\n```\n\nwill produce a file called `file.py` with the contents\n\n```python\n# before\ndef hello():\n    print(\"Hello world\")\n# after\n```\n\nand\n\n```rst\n.. literate-code:: file.py\n   :file:\n   # before\n   class Hello:\n       {{code chunk name}} # suffix\n   # after\n```\n\nwill produce\n\n```python\n# before\nclass Hello:\n    def hello(): # suffix\n        print(\"Hello world\") # suffix\n# after\n```\n\nThe delimiters can be changed by setting the `literate_delimiters` option in\n`conf.py`, which takes a tuple, where the first element is the left delimiter\nand the second element is the right delimiter.  For example:\n\n```python\nliterate_delimiters = ('<<', '>>')\n```\n\nThe same code chunk name can be used for multiple chunks; they will be included\nin the same order that they appear in the document.  If the document is split\nacross multiple files, they will be processed in the same order as they appear\nin the table of contents as defined in the `toctree` directive.\n\nIn addition to the `tangle` builder for tangling the document into\ncomputer-readable code files, there is an `annotated-tangle` builder, which\nwrites the computer-readable code to HTML files, annotated by the chunks that\nthey come from.  You can see an example by viewing the <a\nhref=\"_annotated/literate_sphinx.py.html\">annotated tangling of this\nproject</a>.\n\n```{toctree}\n---\nmaxdepth: 2\ncaption: \"More:\"\n---\ncode\n```\n\n## License\n\nThis software may be redistributed under the same license as Sphinx.\n\n```{literate-code} copyright license\n:lang: text\n\nCopyright Hubert Chathi <hubert@uhoreg.ca>\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n* Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nSPDX-License-Identifier: BSD-2-Clause\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": "sphinx,literate programming",
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "literate-sphinx",
    "package_url": "https://pypi.org/project/literate-sphinx/",
    "platform": null,
    "project_url": "https://pypi.org/project/literate-sphinx/",
    "project_urls": {
      "Documentation": "https://uhoreg.gitlab.io/literate-sphinx/",
      "Home": "https://gitlab.com/uhoreg/literate-sphinx/",
      "Source": "https://gitlab.com/uhoreg/literate-sphinx"
    },
    "release_url": "https://pypi.org/project/literate-sphinx/0.1.2/",
    "requires_dist": [
      "sphinx",
      "myst-parser ; extra == \"build\""
    ],
    "requires_python": null,
    "summary": "A literate programming extension for Sphinx",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16516315,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6df672273b43f1db55c142d89dbfa7f2ee87faad7e618d8da967b67a3ef9f6d1",
          "md5": "c89075ea7eaeefa80a27b5274fb35d40",
          "sha256": "0ca290cff253a1aeb2874fbc339723cfaf867b693e11006923157b6ed3c26914"
        },
        "downloads": -1,
        "filename": "literate_sphinx-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c89075ea7eaeefa80a27b5274fb35d40",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9673,
        "upload_time": "2023-01-18T01:18:20",
        "upload_time_iso_8601": "2023-01-18T01:18:20.548060Z",
        "url": "https://files.pythonhosted.org/packages/6d/f6/72273b43f1db55c142d89dbfa7f2ee87faad7e618d8da967b67a3ef9f6d1/literate_sphinx-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6f60367223adc91881ef3f644504a5fe18135951b5714ddaf01b6795d8943ca",
          "md5": "79b9cfefb407d176a92f4a1bb4c174b7",
          "sha256": "3e459764778c7455d09dc0725fc3860940cd360aa04ae8f42a467ffdabba6809"
        },
        "downloads": -1,
        "filename": "literate-sphinx-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "79b9cfefb407d176a92f4a1bb4c174b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12734,
        "upload_time": "2023-01-18T01:18:23",
        "upload_time_iso_8601": "2023-01-18T01:18:23.314888Z",
        "url": "https://files.pythonhosted.org/packages/f6/f6/0367223adc91881ef3f644504a5fe18135951b5714ddaf01b6795d8943ca/literate-sphinx-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "c6707480ff15cdeb02a4d13cacd58e205a8014dc6f1a2ba8191ce746bc11334f",
          "md5": "34f551c7badf73c294ff76dc042f008b",
          "sha256": "3b8fe30f490a570b7fd03c6c4db37f0290b7c39c2c6d2d757f72a61b731c1bd9"
        },
        "downloads": -1,
        "filename": "literate_sphinx-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "34f551c7badf73c294ff76dc042f008b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6343,
        "upload_time": "2023-01-20T00:33:49",
        "upload_time_iso_8601": "2023-01-20T00:33:49.359471Z",
        "url": "https://files.pythonhosted.org/packages/c6/70/7480ff15cdeb02a4d13cacd58e205a8014dc6f1a2ba8191ce746bc11334f/literate_sphinx-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "f0d18b2fb4c1ff8768abf4a8dd8c3f3f16bfb6b9518728e14c46b5dc9e3ed9a3",
          "md5": "0b57fdd090e8261902743cc0710e56df",
          "sha256": "7fbe51d7c001d3494e37f9b01d74da41727b54a5975105049895bb002b000fe8"
        },
        "downloads": -1,
        "filename": "literate-sphinx-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0b57fdd090e8261902743cc0710e56df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10202,
        "upload_time": "2023-01-20T00:33:51",
        "upload_time_iso_8601": "2023-01-20T00:33:51.254519Z",
        "url": "https://files.pythonhosted.org/packages/f0/d1/8b2fb4c1ff8768abf4a8dd8c3f3f16bfb6b9518728e14c46b5dc9e3ed9a3/literate-sphinx-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "c456af166555b412723dec9dc62fe2acc4fbf6e1f94bb5f5248f749341823107",
          "md5": "35f48e3f4b79825ee1e7ba1d6ee676e3",
          "sha256": "cc3f92ee586c870808a59c02a63ddd3e9d618816a2c8f22b9ae553fc4b8284f1"
        },
        "downloads": -1,
        "filename": "literate_sphinx-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35f48e3f4b79825ee1e7ba1d6ee676e3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7890,
        "upload_time": "2023-01-21T23:40:29",
        "upload_time_iso_8601": "2023-01-21T23:40:29.215615Z",
        "url": "https://files.pythonhosted.org/packages/c4/56/af166555b412723dec9dc62fe2acc4fbf6e1f94bb5f5248f749341823107/literate_sphinx-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "5b95cadfe83f5a8fe9c1665a0d10dd8a4952138ed82c0e660fb04114e58b1f28",
          "md5": "0ae22650ababe8d21ad3a16926be5bef",
          "sha256": "93355c9473aadc0709a8dc3c891521b607bacd9ed3e6bfe315fb8b2645e8dc73"
        },
        "downloads": -1,
        "filename": "literate-sphinx-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0ae22650ababe8d21ad3a16926be5bef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16594,
        "upload_time": "2023-01-21T23:40:31",
        "upload_time_iso_8601": "2023-01-21T23:40:31.244625Z",
        "url": "https://files.pythonhosted.org/packages/5b/95/cadfe83f5a8fe9c1665a0d10dd8a4952138ed82c0e660fb04114e58b1f28/literate-sphinx-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "c456af166555b412723dec9dc62fe2acc4fbf6e1f94bb5f5248f749341823107",
        "md5": "35f48e3f4b79825ee1e7ba1d6ee676e3",
        "sha256": "cc3f92ee586c870808a59c02a63ddd3e9d618816a2c8f22b9ae553fc4b8284f1"
      },
      "downloads": -1,
      "filename": "literate_sphinx-0.1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "35f48e3f4b79825ee1e7ba1d6ee676e3",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 7890,
      "upload_time": "2023-01-21T23:40:29",
      "upload_time_iso_8601": "2023-01-21T23:40:29.215615Z",
      "url": "https://files.pythonhosted.org/packages/c4/56/af166555b412723dec9dc62fe2acc4fbf6e1f94bb5f5248f749341823107/literate_sphinx-0.1.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "5b95cadfe83f5a8fe9c1665a0d10dd8a4952138ed82c0e660fb04114e58b1f28",
        "md5": "0ae22650ababe8d21ad3a16926be5bef",
        "sha256": "93355c9473aadc0709a8dc3c891521b607bacd9ed3e6bfe315fb8b2645e8dc73"
      },
      "downloads": -1,
      "filename": "literate-sphinx-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "0ae22650ababe8d21ad3a16926be5bef",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16594,
      "upload_time": "2023-01-21T23:40:31",
      "upload_time_iso_8601": "2023-01-21T23:40:31.244625Z",
      "url": "https://files.pythonhosted.org/packages/5b/95/cadfe83f5a8fe9c1665a0d10dd8a4952138ed82c0e660fb04114e58b1f28/literate-sphinx-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}