{
  "info": {
    "author": "",
    "author_email": "Pietro d Alessandro <pietrodalessandro@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "# AlgorMeter: Tool for developing, testing, measuring and exchange optimizers algorithms\n\nAlgorMeter is a python implementation of an  environment for develop, test, measure, report and  compare optimization algorithms. \nHaving a common platform that simplifies developing, testing and exchange of optimization algorithms allows for better collaboration and sharing of resources among researchers in the field. This can lead to more efficient development and testing of new algorithms, as well as faster progress in the field overall.\nAlgorMeter produces comparative measures among algorithms  in csv format with effective test function call count.  \nIt embeds a specific feature devoted to optimize the number of function calls, so that multiple function  calls at the same point are accounted for just once, without storing intermediate results, with benefit in terms of algorithm coding.  \nAlgorMeter contains a standard library of 10 DC problems and 7 convex problems for testing algorithms. More problem collections can be easily added.\n\n## problems + algorithms = experiments\n\n- A problem is a function f where f: R(n) -> R with n called dimension.  \n- f = f1() - f2() difference of convex function where f1, f2: R(n) -> R. \n- 'problems' is a list of problem\n- 'algorithm' is a code that try to find problem local minima\n- 'experiment' is an algorMeter run with a list of problems and a list of algorithms that produce a result report\n\n## How to use...\n\n### Implement an algorithm...\n\nCopy and customize algorithm examples like the following *(there are many included example?.py)*\n\n```python\ndef gradient(p, **kwargs):\n    '''Simple gradient'''\n    for k in p.loop():\n        p.Xkp1 = p.Xk - 1/(k+1) * p.gfXk / np.linalg.norm(p.gfXk) \n```\n\nand refer to the available following system properties\n\n| algorMeter properties | Description\n|-----|-----------|\n|k, p.K | current iteration |\n| p.Xk | current point |\n| p.Xkp1 | next point. **to be set for next iteration** |\n| p.fXk | p.f(p.Xk) = p.f1(p.Xk) - p.f2(p.Xk)  |\n|p.fXkPrev| previous iteration f(x)|\n| p.f1Xk | p.f1(p.Xk) |\n| p.f2Xk | p.f1(p.Xk) |\n| p.gfXk | p.gf(p.Xk) = p.gf1(p.Xk) - p.gf2(p.Xk)  |\n| p.gf1Xk | p.gf1(p.Xk) |\n| p.gf2Xk | p.gf2(p.Xk) |\n| p.optimumPoint | Optimum X |\n| p.optimumValue | p.f(p.optimumPoint) |\n| p.XStart | Start Point |\n\nto determine the p.Xkp1 for the next iteration.  \n...and run it:\n\n```python\ndf, pv = algorMeter(algorithms = [gradient], problems = probList_covx, iterations = 500, absTol=1E-2)\nprint('\\n', pv,'\\n', df)\n```\n\npv and df are pandas dataframe with run result. A .csv file with result is also created in csv folder. \n\n*(see example\\*.py)*\n\n## AlgorMeter interface\n\n```python\ndef algorMeter(algorithms, problems, tuneParameters = None, iterations = 500, timeout = 180\n    runs = 1, trace = False, dbprint= False, csv = True, savedata = False,\n     absTol =1.E-4, relTol = 1.E-5,  **kwargs):\n```\n\n- algorithms: algorithms list. *(algoList_simple is available )* \n- problems: problem list. See problems list in example4.py for syntax.   *(probList_base, probList_covx, probList_DCJBKM are available)*\n- tuneParameters = None: see tuneParameters section \n- iterations = 500: max iterations number \n- timeout = 180: time out in seconds\n- runs = 1: see random section \n- trace = False: see trace section \n- dbprint= False: see dbprint section \n- csv = True: write a report in csv format in csv folder\n- savedata = False: save data in data folder\n- absTol =1.E-4, relTol = 1.E-5: tolerance used in numpy allClose and isClose\n- **kwargs: python kwargs propagated to algorithms\n\ncall to algorMeter returns two pandas dataframe p1, p2. p2 is a success and fail summary count.\np1 is a detailed report with the following columns.\n\n- Problem  \n- Dim\n- Algorithm  \n- Status: Success, Fail or Error\n- Iterations  \n- f(XStar  \n- f(BKXStar)  \n- Delta: absolute difference between  f(XStar) and f(BKXStar)  \n- Seconds  \n- Start point  \n- XStar: minimum\n- BKXStar: best known minum\n- \\f1\tf2 gf1\tgf2: effective calls count\n- ... : other columns with count to counter.up utility (see below)\n\n\n###  Stop and success condition\n\n```python\n    def stop(self) -> bool:\n        '''return True if experiment must stop. Override it if needed'''\n        if np.array_equal(self.Xk, self.Xprev):\n            return False\n        return bool(np.isclose(self.fXk,self.fXkPrev,rtol=self.relTol,atol=self.absTol)  \n                  or np.allclose (self.gfXk,np.zeros(self.dimension),rtol=self.relTol,atol=self.absTol) )\n\n    def isSuccess(self) -> bool:\n        '''return True if experiment success. Override it if needed'''\n        return  self.isMinimum(self.XStar)\n \n```\n\ncan be overriden like in\n\n```python\n    def stop():\n        return bool(np.isclose(p.f(p.Xk), p.optimumValue,atol=p.absTol, rtol= p.relTol)) or \\\n                bool(np.allclose (p.Xk, p.optimumPoint,rtol=p.relTol,atol=p.absTol))\n    \n    p.stop = stop\n    p.isSuccess = stop\n\n```\n\n## Problems function call optimization\n\nAlgorMeter embeds a specific feature devoted to optimize the number of function calls, so that multiple function  calls at the same point are accounted for just once, without storing intermediate results, with benefit in terms of algorithm coding.  So in algorithm implementation is not necessary to store the previous result in variables to reduce f1, f2, gf1, gf2 function calls. AlgorMeter cache 128 previous calls to obtain such automatic optimization.  \n\n## Problems ready to use\n\nImporting 'algormeter.libs' probList_base, probList_covx, probList_DCJBKM problems list are available.    \n **probList_DCJBKM** contains ten frequently used unconstrained DC optimization problems, where objective functions are presented as DC (Difference of Convex) functions:\n𝑓(𝑥)=𝑓1(𝑥)−𝑓2(𝑥).\n [Joki, Bagirov](https://link.springer.com/article/10.1007/s10898-016-0488-3)\n\n **probList_covx**  contains  DemMal,Mifflin1, Miffilin2,LQ,QL,MAXQ,MAXL,CB2,CB3,MaxQuad, Rosen, Shor, TR48, A48 and Goffin test convex functions/problem\n\n **probList_no_covx**  contains special no convex functions: Rosenbrock, Crescent\n\n **probList_base** contains Parab, ParAbs, Acad simple functions for algorithms early development and test.  \n\n See 'ProblemsLib.pdf'\n\n### Counters\n\nInstruction like \n> counter.up('lb<0', cls='qp')  \n\nis used to count events in code, summerized in statistics at the end of experiment as a column, available in dataframe returned by call to algorMeter and in final csv.\nFor the code above a column with count of counter.up calls and head 'qp.lb>0' is produced.  \nAlso are automatically available columns 'f1', 'f2', 'gf1', 'gf1' with effective calls to f1, f2, gf1, gf2\n\n### dbprint = True\n\nInstruction dbx.print produce print out only if algorMeter call ha option dbptint == True\n> dbx.print('t:',t, 'Xprev:',Xprev, 'f(Xprev):',p.f(Xprev) ).  \n\nNB: If dbprint = True python exceptions are not handled and raised.\n\n### Trace == True\n\nIf Default.TRACE = True a line with function values are shown as follows in the console for each iteration for algorithms analysis purpose.\n>  Acad-2 k:0,f:-0.420,x:[ 0.7 -1.3],gf:[ 1.4 -0.6],f1:2.670,gf1:[ 3.1 -2.9],f2:3.090,gf2:[ 1.7 -2.3]   \n > Acad-2 k:1,f:-1.816,x:[-1.0004 -0.5712],gf:[-8.3661e-04  8.5750e-01],f1:0.419,gf1:[-2.0013 -0.7137],f2:2.235,gf2:[-2.0004 -1.5712]  \n> Acad-2 k:2,f:-1.754,x:[-0.9995 -1.4962],gf:[ 9.6832e-04 -9.9250e-01],f1:2.361,gf1:[-1.9985 -3.4887],f2:4.115,gf2:[-1.9995 -2.4962]\n\nThese lines represent the path followed by the algorithm for the specific problem.  \nNB: If trace = True python exceptions are not handled and raised.\n\n### tuneParameters\nSome time is necessary tune some parameter combinations.  Procede as follow (See example4.py):\n\n- Use numeric parameters with Param as domain name, like Param.alpha in your algo code.\n- Define a list of lists with possible values of tuning parameters as follows:\n\n```python\ntpar = [ # [name, [values list]]\n    ('Param.alpha', [1. + i for i in np.arange(.05,.9,.05)]),\n    # ('Param.beta', [1. + i for i in np.arange(.05,.9,.05)]),\n]\n```\n\n- call algorMeter with csv = True and tuneParameters=<list of parameters values> like tuneParameters=tpar.\n- open csv file produced and analyze the performance of parameters combinations by looking column '# tunePar'. Useful is a pivot table on such column.\n\n## Random start point \n\nIf algorMeter parameter run is set with a number greater than 1, each algorithm is repeated on the same problem with random start point in range -1 to 1 for all dimensions.\nBy the method setRandom(center, size) random X can be set in [center-size, center+size] interval.  \nSee example5.py\n\n## Record data \n\nwith option data == True store in 'npy' folder one file in numpy format, for each experiment with X and Y=f(X) for all iterations.\nIt is a numpy array with:\n> X = data[:,:-1]  \nY = data[:,-1] \n\nFile name is like 'gradient,JB05-50.npy'.  \nThese files are read by viewer.py data visualizer.\n\n## Minimize\n\nIn case you need to find the minimum of a problem/function by applying an algorithm developed with algormeter, the minimize method is available. (See example6.py):\n\n```python\n    p = MyProb(K) \n    found, x, y = p.minimize(myAlgo)\n```\n\n## Visualizer.py\n\nRunning visualizer.py produce or updates contour image in folder 'pics' for each experiment with dimension = 2 with data in folder 'npy'.\n\n# Acknowledgment\n\nAlgormeter was inspired and suggested by prof. Manlio Gaudioso of the University of Calabria and made with him.\n\n# Contributing\n\nYou can download or fork the repository freely.  \nhttps://github.com/xedla/algormeter  \nIf you see a mistake you can send me a mail at pietrodalessandro@gmail.com \nIf you open up a ticket, please make sure it describes the problem or feature request fully.  \nAny suggestion are welcome.\n# WARNING\nAlgorMeter is still in the early stages of development. \n\n# License\n**If you use AlgorMeter for the preparation of a scientific paper, the citation with a link to this repository would be appreciated.**\n\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY. \n\n# Installation\nAlgormeter is available as pypi pip package.\n```python\n    pip3 install algormeter\n```\n\n# Dependencies\nPython version at least\n- Python 3.10.6\n\nPackage installable with pip3\n- numpy\n- pandas\n- matplotlib\n\nAlgormeter plays well with [Visual Studio Code](https://code.visualstudio.com) and in jupyter\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "convex-optimization,difference-convex-function,optimization-algorithms",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "algormeter",
    "package_url": "https://pypi.org/project/algormeter/",
    "platform": null,
    "project_url": "https://pypi.org/project/algormeter/",
    "project_urls": {
      "Bug Tracker": "https://github.com/xedla/algormeter/issues",
      "Homepage": "https://github.com/xedla/algormeter.git"
    },
    "release_url": "https://pypi.org/project/algormeter/0.9.6/",
    "requires_dist": [
      "matplotlib",
      "numpy",
      "pandas"
    ],
    "requires_python": ">=3.10",
    "summary": "Tool for developing, testing and measuring optimizers algorithms",
    "version": "0.9.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17441562,
  "releases": {
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf81220ab98cc81f701e9609e552e0352fdb0b606df0ae5edd5f2e72b9d700a4",
          "md5": "5cfac3a3c5547d5e8a4d8f06e2417af9",
          "sha256": "652b9331045219aad5c4a663da86741ba2d2e171cd671576fcfa39f2e2a98224"
        },
        "downloads": -1,
        "filename": "algormeter-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5cfac3a3c5547d5e8a4d8f06e2417af9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 19234,
        "upload_time": "2022-12-28T16:06:19",
        "upload_time_iso_8601": "2022-12-28T16:06:19.657885Z",
        "url": "https://files.pythonhosted.org/packages/bf/81/220ab98cc81f701e9609e552e0352fdb0b606df0ae5edd5f2e72b9d700a4/algormeter-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57ee6239e9d30958c599ce1b47fcae341ff61d51cdb5243aa1cc4b45d0955704",
          "md5": "be4a7db74c085aff313fee2edee96958",
          "sha256": "3088c68642d37894e16550b5e9295356711e746e620cc3e5621babdbecd7af3b"
        },
        "downloads": -1,
        "filename": "algormeter-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "be4a7db74c085aff313fee2edee96958",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 704229,
        "upload_time": "2022-12-28T16:06:22",
        "upload_time_iso_8601": "2022-12-28T16:06:22.195768Z",
        "url": "https://files.pythonhosted.org/packages/57/ee/6239e9d30958c599ce1b47fcae341ff61d51cdb5243aa1cc4b45d0955704/algormeter-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9c04708723126e71028e68e399c70b5ae5a44c989faf5d45b2e3427f4c367dc",
          "md5": "c1026d6f52ceca57ec6e520279106a8d",
          "sha256": "c0f966412f501412c47c45002d3a9b755b0780d43a9365c727e6d401e19130e3"
        },
        "downloads": -1,
        "filename": "algormeter-0.9.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c1026d6f52ceca57ec6e520279106a8d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 19304,
        "upload_time": "2023-01-19T12:15:59",
        "upload_time_iso_8601": "2023-01-19T12:15:59.220109Z",
        "url": "https://files.pythonhosted.org/packages/a9/c0/4708723126e71028e68e399c70b5ae5a44c989faf5d45b2e3427f4c367dc/algormeter-0.9.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2fb25e655cfc9a6a8002ee70e8f30d6431b555290a50a11dee2f3def94df4c8",
          "md5": "51ee3ac86c83490d41db2d8c1e767127",
          "sha256": "13af6d75185b2542b11094de258d9085ca80b5b9d8d0efce40d85fa58ac4e978"
        },
        "downloads": -1,
        "filename": "algormeter-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "51ee3ac86c83490d41db2d8c1e767127",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 704354,
        "upload_time": "2023-01-19T12:16:01",
        "upload_time_iso_8601": "2023-01-19T12:16:01.793917Z",
        "url": "https://files.pythonhosted.org/packages/f2/fb/25e655cfc9a6a8002ee70e8f30d6431b555290a50a11dee2f3def94df4c8/algormeter-0.9.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fa2d5a4f73d6f565c2687583dbc37cdd3a0000edb473672b433b1de67c1df89",
          "md5": "27ca11474d8304188d30d3194889524d",
          "sha256": "11892c55ae689a5af42dce49b0123dcdd5690a23e06b7340951c63adec89bbae"
        },
        "downloads": -1,
        "filename": "algormeter-0.9.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "27ca11474d8304188d30d3194889524d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 19512,
        "upload_time": "2023-01-24T16:43:00",
        "upload_time_iso_8601": "2023-01-24T16:43:00.255486Z",
        "url": "https://files.pythonhosted.org/packages/8f/a2/d5a4f73d6f565c2687583dbc37cdd3a0000edb473672b433b1de67c1df89/algormeter-0.9.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a55a4c3cbff60f3cf00073eb5fe6bbd990c325a1d16d7e49e7ab5febffeba66",
          "md5": "05ed523074fea7f35cf4e1f2686e1c63",
          "sha256": "98e7a182f6d0397cc5f53656430b9102052cdbaaed9eac458c4ee6294e58c454"
        },
        "downloads": -1,
        "filename": "algormeter-0.9.3.tar.gz",
        "has_sig": false,
        "md5_digest": "05ed523074fea7f35cf4e1f2686e1c63",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 704602,
        "upload_time": "2023-01-24T16:43:02",
        "upload_time_iso_8601": "2023-01-24T16:43:02.544403Z",
        "url": "https://files.pythonhosted.org/packages/2a/55/a4c3cbff60f3cf00073eb5fe6bbd990c325a1d16d7e49e7ab5febffeba66/algormeter-0.9.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a47f286a7e93a0fda5a8781fe6a21f95ecc9dba289146dc1572c6fe13c9f7086",
          "md5": "638e52a89f606d22459a49a5421fc875",
          "sha256": "259923f58f75fdf113df24e5dccdfe2816e14325e851c4e7f007c6a2e2cd4179"
        },
        "downloads": -1,
        "filename": "algormeter-0.9.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "638e52a89f606d22459a49a5421fc875",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 19464,
        "upload_time": "2023-02-10T16:34:02",
        "upload_time_iso_8601": "2023-02-10T16:34:02.418036Z",
        "url": "https://files.pythonhosted.org/packages/a4/7f/286a7e93a0fda5a8781fe6a21f95ecc9dba289146dc1572c6fe13c9f7086/algormeter-0.9.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "580eee933b0607280b5683db70cb598e0631e544255b22b3775a5ffa16e358b1",
          "md5": "1af5074cc48baccb7739aae90bcbad9f",
          "sha256": "0c9a910b339aaaa7b6d1379b98073a41b425976c342745554d086bcbc25538dc"
        },
        "downloads": -1,
        "filename": "algormeter-0.9.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1af5074cc48baccb7739aae90bcbad9f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 705162,
        "upload_time": "2023-02-10T16:34:04",
        "upload_time_iso_8601": "2023-02-10T16:34:04.357077Z",
        "url": "https://files.pythonhosted.org/packages/58/0e/ee933b0607280b5683db70cb598e0631e544255b22b3775a5ffa16e358b1/algormeter-0.9.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21b3ad2e123b556124aa4c982aa585a775a07f493707f4b15a32fb7da78e3b31",
          "md5": "d3e369003ab6a83691d6a60372cb6394",
          "sha256": "1dfd23905d453824fda3b70b2b809668129c1985139007ed0fc636491b4a8c86"
        },
        "downloads": -1,
        "filename": "algormeter-0.9.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d3e369003ab6a83691d6a60372cb6394",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 19571,
        "upload_time": "2023-02-21T16:23:15",
        "upload_time_iso_8601": "2023-02-21T16:23:15.677382Z",
        "url": "https://files.pythonhosted.org/packages/21/b3/ad2e123b556124aa4c982aa585a775a07f493707f4b15a32fb7da78e3b31/algormeter-0.9.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39aca0426f4f4f2c0c1455c0b1950d6103445adb761530d2e918a2e90f334fcd",
          "md5": "6a71a9830ef378c422d3cea2c7a7a904",
          "sha256": "5bc5cb744ed3d6d5a10f17fcd4a414662f9f59401117a6ef0d012a3112ebe461"
        },
        "downloads": -1,
        "filename": "algormeter-0.9.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6a71a9830ef378c422d3cea2c7a7a904",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 705456,
        "upload_time": "2023-02-21T16:31:15",
        "upload_time_iso_8601": "2023-02-21T16:31:15.674581Z",
        "url": "https://files.pythonhosted.org/packages/39/ac/a0426f4f4f2c0c1455c0b1950d6103445adb761530d2e918a2e90f334fcd/algormeter-0.9.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1aa0cf32135efd7306dc1f0956870bfd6ad104df1767827b044db584445899b2",
          "md5": "6be1ae939392ed9e3beabc23ecf21335",
          "sha256": "78ec8ec1862eaff4d60dcfd924eb6fcc24f6c1d02736f94ee951074dc47b7db0"
        },
        "downloads": -1,
        "filename": "algormeter-0.9.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6be1ae939392ed9e3beabc23ecf21335",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 28272,
        "upload_time": "2023-03-25T11:27:37",
        "upload_time_iso_8601": "2023-03-25T11:27:37.829273Z",
        "url": "https://files.pythonhosted.org/packages/1a/a0/cf32135efd7306dc1f0956870bfd6ad104df1767827b044db584445899b2/algormeter-0.9.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a8e5391bfeb99d501ca3f6d31c818ab2c13ae7455779da690bc239341da7b51",
          "md5": "e05afb3a1f9182313cb67ac657e1ff9b",
          "sha256": "a18538f84bbd398d0a13cf8a112d04190267ad220674cff25a6cefceb5ba91ff"
        },
        "downloads": -1,
        "filename": "algormeter-0.9.6.tar.gz",
        "has_sig": false,
        "md5_digest": "e05afb3a1f9182313cb67ac657e1ff9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 715584,
        "upload_time": "2023-03-25T11:27:40",
        "upload_time_iso_8601": "2023-03-25T11:27:40.220440Z",
        "url": "https://files.pythonhosted.org/packages/8a/8e/5391bfeb99d501ca3f6d31c818ab2c13ae7455779da690bc239341da7b51/algormeter-0.9.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1aa0cf32135efd7306dc1f0956870bfd6ad104df1767827b044db584445899b2",
        "md5": "6be1ae939392ed9e3beabc23ecf21335",
        "sha256": "78ec8ec1862eaff4d60dcfd924eb6fcc24f6c1d02736f94ee951074dc47b7db0"
      },
      "downloads": -1,
      "filename": "algormeter-0.9.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6be1ae939392ed9e3beabc23ecf21335",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 28272,
      "upload_time": "2023-03-25T11:27:37",
      "upload_time_iso_8601": "2023-03-25T11:27:37.829273Z",
      "url": "https://files.pythonhosted.org/packages/1a/a0/cf32135efd7306dc1f0956870bfd6ad104df1767827b044db584445899b2/algormeter-0.9.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a8e5391bfeb99d501ca3f6d31c818ab2c13ae7455779da690bc239341da7b51",
        "md5": "e05afb3a1f9182313cb67ac657e1ff9b",
        "sha256": "a18538f84bbd398d0a13cf8a112d04190267ad220674cff25a6cefceb5ba91ff"
      },
      "downloads": -1,
      "filename": "algormeter-0.9.6.tar.gz",
      "has_sig": false,
      "md5_digest": "e05afb3a1f9182313cb67ac657e1ff9b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 715584,
      "upload_time": "2023-03-25T11:27:40",
      "upload_time_iso_8601": "2023-03-25T11:27:40.220440Z",
      "url": "https://files.pythonhosted.org/packages/8a/8e/5391bfeb99d501ca3f6d31c818ab2c13ae7455779da690bc239341da7b51/algormeter-0.9.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}