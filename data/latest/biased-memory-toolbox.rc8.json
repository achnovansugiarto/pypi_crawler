{
  "info": {
    "author": "Sebastiaan Mathot",
    "author_email": "s.mathot@cogsci.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# Biased Memory Toolbox\n\n*A Python toolbox for mixture modeling of data from visual-working-memory experiments*\n\nCherie Zhou (@cherieai) and Sebastiaan Mathôt (@smathot) <br />\nCopyright 2020 - 2022\n\n![](https://travis-ci.com/smathot/biased_memory_toolbox.svg?branch=master)\n\n\n## Contents\n\n- [Citation](#citation)\n- [Installation](#installation)\n- [Usage](#usage)\n- [Function reference](#function-reference)\n- [License](#license)\n\n\n## Citation\n\nZhou, C., Lorist, M., Mathôt, S., (2021). Categorical bias in visual working memory: The effect of memory load and retention interval. *Cortex*. <https://osf.io/puq4v/>\n\n*This manuscript is a Stage 1 in-principle acceptance of a registered report*\n\n\n## Installation\n\n```\npip install biased_memory_toolbox\n```\n\n\n## Usage\n\nThis section focuses on using the module, assuming that you have a basic understanding of mixture modeling of working memory data. If you want to know more about the theory behind mixture modeling, please read (for example) the manuscript cited above.\n\nWe start by reading in a data file using [DataMatrix](https://datamatrix.cogsci.nl/). The data should contain a column that contains the memoranda (here: `memory_hue`) and a column that contains the responses (here: `response_hue`), both in degrees with values between 0 and 360.\n\n\n\n```python\nfrom datamatrix import io\n\ndm = io.readtxt('example-data/example-participant.csv')\n```\n\n\n\nAs a first step, which is not related to mixture modeling per se, we check whether the participant performed significantly (p < .05) above chance. This is done with a permutation test that is implemented as `test_chance_performance()`. Here, low p-values indicate that performance deviates from chance.\n\n\n\n```python\nimport biased_memory_toolbox as bmt\n\nt, p = bmt.test_chance_performance(dm.memory_hue, dm.response_hue)\nprint('testing performance: t = {:.4f}, p = {:.4f}'.format(t, p))\n```\n\n__Output:__\n``` .text\ntesting performance: t = -56.7786, p = 0.0000\n```\n\n\n\nNow let's fit the mixture model. We start with a basic model in which only precision and guess rate are estimated, as in the original [Zhang and Luck (2008)](https://doi.org/10.1038/nature06860) paper.\n\nTo do so, we first calculate the response error, which is simply the circular distance between the memory hue (the color that the participant needed to remember) and the response hue (the color that the participant reproduced). This is done with `response_bias()`, which, when no categories are provided, simply calculates the response error.\n\n\n\n```python\ndm.response_error = bmt.response_bias(dm.memory_hue, dm.response_hue)\n```\n\n\n\nWe can fit the model with a simple call to `fix_mixture_model()`. By specifying `include_bias=False`, we fix the bias parameter (the mean of the distribution) at 0, and thus\nonly get two parameters: the precision and the guess rate.\n\n\n\n```python\nprecision, guess_rate = bmt.fit_mixture_model(\n    dm.response_error,\n    include_bias=False\n)\nprint('precision: {:.4f}, guess rate: {:.4f}'.format(precision, guess_rate))\n```\n\n__Output:__\n``` .text\nprecision: 1721.6386, guess rate: 0.0627\n```\n\n\n\nNow let's fit a slightly more complex model that also includes a bias parameter. To do so, we first calculate the response 'bias', which is similar to the response error except that it is recoded such that positive values reflect a response error towards the prototype of the category that the memorandum belongs to. For example, if the participant saw a slightly aqua-ish shade of green but reproduced a pure green, then this would correspond to a positive response bias for that response.\n\nTo calculate the response bias we need to specify a `dict` with category boundaries and prototypes when calling `response_bias()`. A sensible default (`DEFAULT_CATEGORIES`), based on ratings of human participants from [Zhou, Mathôt, & Lorist, 2021b](http://dx.doi.org/10.1101/2021.11.23.469689), is provided with the toolbox. Another set of ratings, from [Zhou, Mathôt, & Lorist, 2021a](https://osf.io/puq4v/), is provided as `CORTEX_CATEGORIES`.\n\n\n\n```python\ndm.response_bias = bmt.response_bias(\n    dm.memory_hue,\n    dm.response_hue,\n    categories=bmt.DEFAULT_CATEGORIES\n)\n```\n\n\n\nNext we fit the model again by calling `fit_mixture_model()`. We now also get a bias parameter (because we did not specify `include_bias=False`) as described in [Zhou, Lorist, and Mathôt (2021)](https://osf.io/puq4v/).\n\n\n\n```python\nprecision, guess_rate, bias = bmt.fit_mixture_model(dm.response_bias)\nprint(\n    'precision: {:.4f}, guess rate: {:.4f}, bias: {:.4f}'.format(\n        precision,\n        guess_rate,\n        bias\n    )\n)\n```\n\n__Output:__\n``` .text\nprecision: 1725.9568, guess rate: 0.0626, bias: 0.5481\n```\n\n\n\nIt also makes sense to visualize the model fit, to see if the model accurately captures the pattern of responses. We can do this by plotting a probability density function, which can be generated by `mixture_model_pdf()`.\n\n\n\n```python\nimport numpy as np\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\nx = np.linspace(-180, 180, 360)\ny = bmt.mixture_model_pdf(x, precision, guess_rate, bias)\nplt.figure(figsize=(10, 5))\nplt.subplot(121)\nplt.title('Model fit')\nplt.xlim(-50, 50)\nplt.plot(x, y)\nplt.subplot(122)\nplt.title('Histogram of response biases')\nplt.xlim(-50, 50)\nsns.distplot(dm.response_bias, kde=False)\nplt.savefig('example.png')\n```\n\n\n\n![](https://github.com/smathot/biased_memory_toolbox/raw/master/example.png)\n\nWe can also fit a model that takes into account swap errors, as described by [Bays, Catalao, and Husain (2009)](https://doi.org/10.1167/9.10.7). To do so, we need to also specify the response bias (or plain error) with respect to the non-target items.\n\nHere, we select only those trials in which the set size was 3, and then create two new columns for the response bias with respect to the second and third memory colors, which were non-targets in this experiment. (The first color was the target color.)\n\n\n\n```python\ndm3 = dm.set_size == 3\ndm3.response_bias_nontarget2 = bmt.response_bias(\n    dm3.hue2,\n    dm3.response_hue,\n    categories=bmt.DEFAULT_CATEGORIES\n)\ndm3.response_bias_nontarget3 = bmt.response_bias(\n    dm3.hue3,\n    dm3.response_hue,\n    categories=bmt.DEFAULT_CATEGORIES\n)\n```\n\n\n\nBy passing a list of non-target response biases, we get a fourth parameter: swap rate.\n\n\n\n```python\nprecision, guess_rate, bias, swap_rate = bmt.fit_mixture_model(\n    x=dm3.response_bias,\n    x_nontargets=[\n        dm3.response_bias_nontarget2,\n        dm3.response_bias_nontarget3\n    ],\n)\nprint(\n    'precision: {:.4f}, guess rate: {:.4f}, bias: {:.4f}, swap_rate: {:.4f}'.format(\n        precision,\n        guess_rate,\n        bias,\n        swap_rate\n    )\n)\n```\n\n__Output:__\n``` .text\nprecision: 1458.9628, guess rate: 0.0502, bias: 1.2271, swap_rate: 0.0191\n```\n\n\n\n## Function reference\n\n**<span style=\"color:purple\">biased&#95;memory&#95;toolbox.category</span>_(x, categories)_**\n\n\nGets the category to which x belongs. For example, if x corresponds to a\nslightly orangy shade of red, then the category would be 'red'.\n\n\n#### Parameters\n* x: float or int :  A value in degrees (0 - 360)\n* categories: dict :  See reponse_bias()\n\n#### Returns\n<b><i>str</i></b>  A category label\n\n**<span style=\"color:purple\">biased&#95;memory&#95;toolbox.fit&#95;mixture&#95;model</span>_(x, x_nontargets=None, include_bias=True, x0=None, bounds=None)_**\n\n\nFits the biased mixture model to a dataset. The input to the mixture\nmodel should generally be a response bias as determined by\n`response_bias()` when the bias parameter is fit, or a signed response\nerror when no bias parameter is fit.\n\n\n#### Parameters\n* x: array_like :  An array, DataMatrix column, or other iterable object of response\n\tbiases\n* x_nontargets: list, optional :  A list of arrays, DataMatrix columns, or other iterable objects of\n\tresponse biases relative to non-targets. If this argument is\n\tprovided, a swap rate is returned as a final parameter.\n* include_bias: bool, optional :  Indicates whether the bias parameter should be fit as well.\n* x0: list, optional :  A list of starting values for the parameters. Order: precision, guess\n\trate, bias. If no starting value is provided for a parameter, then it\n\tis left at the default value of `mixture_model_pdf()`.\n* bounds: list, optional :  A list of (upper, lower) bound tuples for the parameters. If no value\n\tis provided, then default values are used.\n\n#### Returns\n<b><i>tuple</i></b>  A tuple with parameters. Depending on the arguments these are on of the\n\tfollowing:\n\t\n\t- (precision, guess rate)\n\t- (precision, guess rate, bias)\n\t- (precision, guess rate, swap rate)\n\t- (precision, guess rate, bias, swap rate)\n\n**<span style=\"color:purple\">biased&#95;memory&#95;toolbox.mixture&#95;model&#95;pdf</span>_(x, precision=500, guess_rate=0.1, bias=0)_**\n\n\nReturns a probability density function for a mixture model.\n\n\n#### Parameters\n* x: array_like :  A list (or other iterable object) of values for the x axis. For example\n\t`range(-180, 181)` would generate the PDF for every relevant value.\n* precision: float, optional :  The precision (or kappa) parameter. This is inversely related to the\n\tstandard deviation, and is a value in degrees.\n* guess_rate: float, optional :  The proportion of guess responses (0 - 1).\n* bias: float, optional :  The bias (or loc) parameter in degrees.\n\n#### Returns\n<b><i>array</i></b>  An array with probability densities for each value of x.\n\n**<span style=\"color:purple\">biased&#95;memory&#95;toolbox.prototype</span>_(x, categories)_**\n\n\nGets the prototype for the category to which x belongs. For example, if\nx corresponds to a slightly orangy shade of red, then the prototype would\nbe the hue of a prototypical shade of red.\n\n\n#### Parameters\n* x: float or int :  A value in degrees (0 - 360)\n* categories: dict :  See reponse_bias()\n\n#### Returns\n<b><i>float or int</i></b>  A prototype value in degrees (0 360)\n\n**<span style=\"color:purple\">biased&#95;memory&#95;toolbox.response&#95;bias</span>_(memoranda, responses, categories=None)_**\n\n\nCalculates the response bias, which is the error between a response and\na memorandum in the direction of the prototype for the category to which\nthe memorandum belongs. For example, if the memorandum was an orangy shade\nof red, then a positive value would indicate an error towards a\nprototypical red, and a negative value would indicate an error towards the\nyellow category.\n\n\n#### Parameters\n* memoranda: array_like :  An array, DataMatrix column, or other iterable object with memoranda\n\tvalues in degrees (0 - 360)\n* responses: array_like :  An array, DataMatrix column, or other iterable object with response\n\tvalues in degrees (0 - 360)\n* categories: dict, optional :  A dict that defines the categories. Keys are names of categories and\n\tvalues are (start_value, end_value, prototype) values that indicate\n\twhere categories begin and end, and what the prototypical value is.\n\tThe start_value and prototpe can be negative and should be smaller than\n\tthe end value.\n\t\n\tSee `biased_memory_toolbox.DEFAULT_CATEGORIES` and\n\t`biased_memory_toolbox.CORTEX_CATEGORIES` for two sets of category\n\tratings.\n\n#### Returns\n<b><i>list</i></b>  A list of response_bias values.\n\n**<span style=\"color:purple\">biased&#95;memory&#95;toolbox.test&#95;chance&#95;performance</span>_(memoranda, responses)_**\n\n\nTests whether responses are above chance. This is done by first\ndetermining the real error and the memoranda, and then determinining the\nshuffled error between the memoranda and the shuffled responses. Finally,\nan independent t-test is done to compare the real and shuffled error. The\nexact values will vary because the shuffling is random.\n\n\n#### Parameters\n* memoranda: array_like :  An array, DataMatrix column, or other iterable object with memoranda\n\tvalues in degrees (0 - 360)\n* responses: array_like :  An array, DataMatrix column, or other iterable object with response\n\tvalues in degrees (0 - 360)\n\n#### Returns\n<b><i>tuple</i></b>  A (t_value, p_value) tuple.\n\n\n## License\n\n`biased_memory_toolbox` is licensed under the [GNU General Public License\nv3](http://www.gnu.org/licenses/gpl-3.0.en.html).",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/smathot/biased_memory_toolbox",
    "keywords": "",
    "license": "GNU GPL Version 3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "biased-memory-toolbox",
    "package_url": "https://pypi.org/project/biased-memory-toolbox/",
    "platform": "",
    "project_url": "https://pypi.org/project/biased-memory-toolbox/",
    "project_urls": {
      "Homepage": "https://github.com/smathot/biased_memory_toolbox"
    },
    "release_url": "https://pypi.org/project/biased-memory-toolbox/1.3.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Mixture modeling for working-memory experiments",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12826302,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be7527ee4859faa018be2e717d119ba21043fc9cfc9499e24d7ae1d5c0db1b4d",
          "md5": "f690541f78f6dfde550797b28411bf34",
          "sha256": "86bc43724ef0906cecf7bf608c298173b8377781056c6f7ac251942f596273f2"
        },
        "downloads": -1,
        "filename": "biased_memory_toolbox-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f690541f78f6dfde550797b28411bf34",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16752,
        "upload_time": "2021-02-25T15:31:16",
        "upload_time_iso_8601": "2021-02-25T15:31:16.102860Z",
        "url": "https://files.pythonhosted.org/packages/be/75/27ee4859faa018be2e717d119ba21043fc9cfc9499e24d7ae1d5c0db1b4d/biased_memory_toolbox-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8348069668eaf970a071b3e6af977beafd1184f2b659f69cac2db423f73a54e",
          "md5": "c1a25d3c2cf737e8be90fa905f1ac770",
          "sha256": "11601d7cc961289f900eba90087f590a0e1ddbc500021d2505278cd724941658"
        },
        "downloads": -1,
        "filename": "biased_memory_toolbox-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c1a25d3c2cf737e8be90fa905f1ac770",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4167,
        "upload_time": "2021-02-25T15:31:13",
        "upload_time_iso_8601": "2021-02-25T15:31:13.182734Z",
        "url": "https://files.pythonhosted.org/packages/a8/34/8069668eaf970a071b3e6af977beafd1184f2b659f69cac2db423f73a54e/biased_memory_toolbox-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9d733baf79e00a50cbe93c20480cad88d024ece51ae0075916c72bf7eb32ca9",
          "md5": "1662e5809d73f069f53f814c9e0fda6b",
          "sha256": "0cea99946b99de14b3f95181761278b472d9ea3127a10e45093b1092cf02dbc2"
        },
        "downloads": -1,
        "filename": "biased_memory_toolbox-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1662e5809d73f069f53f814c9e0fda6b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16662,
        "upload_time": "2021-04-09T11:45:38",
        "upload_time_iso_8601": "2021-04-09T11:45:38.561957Z",
        "url": "https://files.pythonhosted.org/packages/a9/d7/33baf79e00a50cbe93c20480cad88d024ece51ae0075916c72bf7eb32ca9/biased_memory_toolbox-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "908fccc0424b13e35e64901ada43ee55afee3914ed833d7993e6866bb2effd22",
          "md5": "b83eaedadf1da29fc94963b95c92f3af",
          "sha256": "6a5909dbcdf0a017417477a4169e0f493a456be53fd0360b4c4ebef1752f15a4"
        },
        "downloads": -1,
        "filename": "biased_memory_toolbox-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b83eaedadf1da29fc94963b95c92f3af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4086,
        "upload_time": "2021-04-09T11:45:35",
        "upload_time_iso_8601": "2021-04-09T11:45:35.691149Z",
        "url": "https://files.pythonhosted.org/packages/90/8f/ccc0424b13e35e64901ada43ee55afee3914ed833d7993e6866bb2effd22/biased_memory_toolbox-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d8f5a639005c1b13faccc0ea623443794d054c98b17ba1715f5854e6f47211d",
          "md5": "c9452976783a8fc3c380beff79963ba7",
          "sha256": "04a7ec96482220b6ee595b62bd0ffc2d027b18dd7ca3f02e7cd00d412f1c0001"
        },
        "downloads": -1,
        "filename": "biased_memory_toolbox-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c9452976783a8fc3c380beff79963ba7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16864,
        "upload_time": "2021-06-15T08:00:16",
        "upload_time_iso_8601": "2021-06-15T08:00:16.534969Z",
        "url": "https://files.pythonhosted.org/packages/2d/8f/5a639005c1b13faccc0ea623443794d054c98b17ba1715f5854e6f47211d/biased_memory_toolbox-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af48d723ec6d1da2598ba0b52b4ece1ef5b0d91fa9a41f31a8e710f22e76ecc4",
          "md5": "9443719706d2b7b9caed0a2508319175",
          "sha256": "8f165523ba15cebd370008f0c56ffc6d22f65196580206e451d8b4bc8b6644ab"
        },
        "downloads": -1,
        "filename": "biased_memory_toolbox-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9443719706d2b7b9caed0a2508319175",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4296,
        "upload_time": "2021-06-15T08:00:13",
        "upload_time_iso_8601": "2021-06-15T08:00:13.320642Z",
        "url": "https://files.pythonhosted.org/packages/af/48/d723ec6d1da2598ba0b52b4ece1ef5b0d91fa9a41f31a8e710f22e76ecc4/biased_memory_toolbox-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23c4b94bafcc0c440fe538509ab6c5e70fe4faf070811457b7f1f26a2f7bffee",
          "md5": "4987f78979224476070b56f9f8b0cbc3",
          "sha256": "f1ef1e6abc834a09f34ee781cbcafb641d4c0bd67631fde9098ae673602b633b"
        },
        "downloads": -1,
        "filename": "biased_memory_toolbox-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4987f78979224476070b56f9f8b0cbc3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19705,
        "upload_time": "2021-07-02T09:04:29",
        "upload_time_iso_8601": "2021-07-02T09:04:29.499408Z",
        "url": "https://files.pythonhosted.org/packages/23/c4/b94bafcc0c440fe538509ab6c5e70fe4faf070811457b7f1f26a2f7bffee/biased_memory_toolbox-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2ac089cbeb47c59c6b9b929ac552fcaf4e68c7487e7af53aec2ac4dee9a6b1e",
          "md5": "0bb24b10bd0f932349953c81000ccfb2",
          "sha256": "a94c22355eb14cb62bcccc4a5adf92366e3e937fba45a161117be3076e1bff32"
        },
        "downloads": -1,
        "filename": "biased_memory_toolbox-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0bb24b10bd0f932349953c81000ccfb2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7120,
        "upload_time": "2021-07-02T09:04:26",
        "upload_time_iso_8601": "2021-07-02T09:04:26.811189Z",
        "url": "https://files.pythonhosted.org/packages/a2/ac/089cbeb47c59c6b9b929ac552fcaf4e68c7487e7af53aec2ac4dee9a6b1e/biased_memory_toolbox-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b58a189ff753ded9c076cc580c908f90d890c9143ce9fc6b93b0c5ddf04ef4a0",
          "md5": "3d47a77405e35290623185e72e01c2b6",
          "sha256": "c953c42c1393b56ee46052a843fe8aabe283eb7fd1771a496a9001157e499b8b"
        },
        "downloads": -1,
        "filename": "biased_memory_toolbox-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d47a77405e35290623185e72e01c2b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19722,
        "upload_time": "2021-11-29T14:00:03",
        "upload_time_iso_8601": "2021-11-29T14:00:03.111576Z",
        "url": "https://files.pythonhosted.org/packages/b5/8a/189ff753ded9c076cc580c908f90d890c9143ce9fc6b93b0c5ddf04ef4a0/biased_memory_toolbox-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37bd67fe08c11f8f8f2bb9c23429384b7a9c1d1ffa0acf1b3f66ac38ec523eba",
          "md5": "5092830d2430ef5901efee6df589e596",
          "sha256": "8d36a1ee3160d0adfe5394c1b18fccd4730af345ea58ddff2f78ad232e7d593d"
        },
        "downloads": -1,
        "filename": "biased_memory_toolbox-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5092830d2430ef5901efee6df589e596",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7142,
        "upload_time": "2021-11-29T14:00:01",
        "upload_time_iso_8601": "2021-11-29T14:00:01.019710Z",
        "url": "https://files.pythonhosted.org/packages/37/bd/67fe08c11f8f8f2bb9c23429384b7a9c1d1ffa0acf1b3f66ac38ec523eba/biased_memory_toolbox-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e52d2ce42a359dd4d2e09c484dd0992d2cda81768f9952b2c329f54de425d8bf",
          "md5": "ef94011e645f577ef23593df91953e34",
          "sha256": "c871e8157f308519aeca34661d8629241407c616929cb02103b11db2d5cd803d"
        },
        "downloads": -1,
        "filename": "biased_memory_toolbox-1.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef94011e645f577ef23593df91953e34",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19835,
        "upload_time": "2021-11-30T09:43:33",
        "upload_time_iso_8601": "2021-11-30T09:43:33.550526Z",
        "url": "https://files.pythonhosted.org/packages/e5/2d/2ce42a359dd4d2e09c484dd0992d2cda81768f9952b2c329f54de425d8bf/biased_memory_toolbox-1.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93fe7853a5f75c771d3e8c7c7658c5ec3cc508e654c1f60dc5c9cfb4866557f7",
          "md5": "ecdab863d70420c400d140d4b0f72dea",
          "sha256": "2300401ce810d9b4509bfcdd5ed23c4f50253fafdcdae738b8f3d1b106ab30b9"
        },
        "downloads": -1,
        "filename": "biased_memory_toolbox-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ecdab863d70420c400d140d4b0f72dea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7260,
        "upload_time": "2021-11-30T09:43:31",
        "upload_time_iso_8601": "2021-11-30T09:43:31.084624Z",
        "url": "https://files.pythonhosted.org/packages/93/fe/7853a5f75c771d3e8c7c7658c5ec3cc508e654c1f60dc5c9cfb4866557f7/biased_memory_toolbox-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00a75c12bc2f3b5f010cc29541bc3384cb2dfb44f92d6e73fe9b7cef285ed325",
          "md5": "622a000fb29df2c2f28f448fe7d2a376",
          "sha256": "8421cabbd61c9fcaa79fab625a5425f39dc02f2f26fcf2b72787fb4dc39b847c"
        },
        "downloads": -1,
        "filename": "biased_memory_toolbox-1.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "622a000fb29df2c2f28f448fe7d2a376",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19832,
        "upload_time": "2021-11-30T09:50:39",
        "upload_time_iso_8601": "2021-11-30T09:50:39.738575Z",
        "url": "https://files.pythonhosted.org/packages/00/a7/5c12bc2f3b5f010cc29541bc3384cb2dfb44f92d6e73fe9b7cef285ed325/biased_memory_toolbox-1.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eea565c5c4c6a950f7c8ae3ac6cbeb3626ffc583b90fc0d76a0bc39d72169378",
          "md5": "dfab5c5ae29f057504f27bf4c0e1dbc7",
          "sha256": "6d11c101f88f61bd779261f4ee5406ea1f159656463cdfca84bca3ccbeb786f4"
        },
        "downloads": -1,
        "filename": "biased_memory_toolbox-1.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "dfab5c5ae29f057504f27bf4c0e1dbc7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7247,
        "upload_time": "2021-11-30T09:50:36",
        "upload_time_iso_8601": "2021-11-30T09:50:36.967796Z",
        "url": "https://files.pythonhosted.org/packages/ee/a5/65c5c4c6a950f7c8ae3ac6cbeb3626ffc583b90fc0d76a0bc39d72169378/biased_memory_toolbox-1.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "676b2a41afa22f12e8b4af320103cb3486c80477d514ffcf970ea17eaea70b51",
          "md5": "2df69b4152ddd41f29728ed1f354cea6",
          "sha256": "ccc399915d7e8d97c768c21a71ac9ae927caf7b1a36d448ea0c0521ddbe9a3dc"
        },
        "downloads": -1,
        "filename": "biased_memory_toolbox-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2df69b4152ddd41f29728ed1f354cea6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21638,
        "upload_time": "2022-02-08T14:12:54",
        "upload_time_iso_8601": "2022-02-08T14:12:54.512760Z",
        "url": "https://files.pythonhosted.org/packages/67/6b/2a41afa22f12e8b4af320103cb3486c80477d514ffcf970ea17eaea70b51/biased_memory_toolbox-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d99bcfe1a1e4178052423853b9944a8678e05bdf388a15e513091edb2049fa2d",
          "md5": "c2d40313ec6f3bc27467e586a42b2393",
          "sha256": "19fe3bd4c914ce6e1cf3350d951d42fb654016360ceadc2b5618640c12f9c7ab"
        },
        "downloads": -1,
        "filename": "biased_memory_toolbox-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c2d40313ec6f3bc27467e586a42b2393",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8209,
        "upload_time": "2022-02-08T14:12:51",
        "upload_time_iso_8601": "2022-02-08T14:12:51.500525Z",
        "url": "https://files.pythonhosted.org/packages/d9/9b/cfe1a1e4178052423853b9944a8678e05bdf388a15e513091edb2049fa2d/biased_memory_toolbox-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "676b2a41afa22f12e8b4af320103cb3486c80477d514ffcf970ea17eaea70b51",
        "md5": "2df69b4152ddd41f29728ed1f354cea6",
        "sha256": "ccc399915d7e8d97c768c21a71ac9ae927caf7b1a36d448ea0c0521ddbe9a3dc"
      },
      "downloads": -1,
      "filename": "biased_memory_toolbox-1.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2df69b4152ddd41f29728ed1f354cea6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 21638,
      "upload_time": "2022-02-08T14:12:54",
      "upload_time_iso_8601": "2022-02-08T14:12:54.512760Z",
      "url": "https://files.pythonhosted.org/packages/67/6b/2a41afa22f12e8b4af320103cb3486c80477d514ffcf970ea17eaea70b51/biased_memory_toolbox-1.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d99bcfe1a1e4178052423853b9944a8678e05bdf388a15e513091edb2049fa2d",
        "md5": "c2d40313ec6f3bc27467e586a42b2393",
        "sha256": "19fe3bd4c914ce6e1cf3350d951d42fb654016360ceadc2b5618640c12f9c7ab"
      },
      "downloads": -1,
      "filename": "biased_memory_toolbox-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c2d40313ec6f3bc27467e586a42b2393",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8209,
      "upload_time": "2022-02-08T14:12:51",
      "upload_time_iso_8601": "2022-02-08T14:12:51.500525Z",
      "url": "https://files.pythonhosted.org/packages/d9/9b/cfe1a1e4178052423853b9944a8678e05bdf388a15e513091edb2049fa2d/biased_memory_toolbox-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}