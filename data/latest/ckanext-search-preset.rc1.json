{
  "info": {
    "author": "Sergey Motornyuk",
    "author_email": "sergey.motornyuk@linkdigital.com.au",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![Tests](https://github.com/DataShades/ckanext-search-preset/workflows/Tests/badge.svg?branch=main)](https://github.com/DataShades/ckanext-search-preset/actions)\n\n# ckanext-search-preset\n\nPlugin that adds a number of API actions/helpers for storing search facets as a package fields and listing all the dataset that satisfies stored facets.\n\nOne of examples, where you can use this extension:\n\n- you need a dataset that \"contains\" a lot of other datasets. Let's call this\ndataset a **collection**\n- these \"other\" datasets can be described by the fixed set of search facets. For\nexample: all the _public_ datasets with at least one _CSV resource_ and _CC-BY_\nlicense.\n- you want to select all the necessary facets on the search page❶, and\ntrigger **collection** creation from there❷(right after seing all the target\ndatasets, that are going to be included into the **collection**)\n- When collection is created, you want to see all the datasets that satisfies\ngiven facets on the collection page❸. In future, all the new datasets that\nsatisfy given facets, should be added automatically to the collection page.\n\n![Preview of search page](img/search-page.png)\n![Preview of preset page](img/preset-page.png)\n\nOn the screenshots above you can observe default behavior of this plugin. Of course, these widgets require proper styling. Just use them as starting point(source code is available inside `ckanext/search-preset/templates` folder of the current extension) and customize for your needs.\n\n## Content\n\n- [Requirements](#requirements)\n- [Installation](#installation)\n- [Preset requirements](#preset-requirements)\n- [Developer installation](#developer-installation)\n- [Tests](#tests)\n\n## Requirements\n\nThis extension requires Python v3.7 or newer.\n\nCompatibility with core CKAN versions:\n\n| CKAN version | Compatible? |\n| ------------ | ----------- |\n| 2.9          | yes         |\n| 2.10         | yes         |\n\n## Installation\n\nTo install ckanext-search-preset:\n\n1. Install the extension via pip\n\n   ```sh\n   pip install ckanext-search-preset\n   ```\n\n1. Add `search-preset` to the `ckan.plugins` setting in your CKAN\n   config file.\n\n1. Create custom package type that will serve a role of preset(collection).\n   [Here](#preset-requirements) you can find more details about requirements for\n   this package type.\n\n## Config settings\n\n```ini\n# Default preset type created by \"Create Preset\" button on the search page\nckanext.search_preset.default_type = preset\n\n# List of preset types that should show matching packages(❷) on their details\n# page\n# (optional, default: <value of default_type option>).\nckanext.search_preset.package_types = preset collection dataset\n\n# Field that is used for grouping the packages before printing them on the\n# preset page\n# (optional, default: none).\nckanext.search_preset.group_by_field = type\n\n# Prefix of the preset fields that will hold details about active facets\n# (optional, default: \"search_preset_field_\").\nckanext.search_preset.field_prefix = facet_field_\n\n# List of facets that can be used by preset. By default, any existing facet is\n# allowed.\n# (optional, default: <any existing facet>).\nckanext.search_preset.allowed_facets = license_id organization\n\n# Preset field that holds all the `ext_*` fields that were available during\n# preset creation via ❶\n# (optional, default: none).\nckanext.search_preset.extras_field = search_extra_field_\n\n# List of `ext_*` that will be captured by preset if `extras_field` specified.\n# By default, all the `ext_*` fields are captured.\n# (optional, default: <any passed extra field>).\nckanext.search_preset.allowed_extras = ext_bbox ext_start_date\n```\n\n## Preset requirements\n\nIn order to function properly, this extension requires a special \"preset\"\npackage type. One can register one *default* preset type(which will be used by\nexisting widgets) using `ckanext.search_preset.default_type` config option and\narbitrary number of additional preset types using\n`ckanext.search_preset.package_types` config option.\n\nIf no default type configured, create-preset button on the search page(❷) will\nnot be shown, but you still can create search presets programmatically.\n\nIf neither default, nor additional types configured, datasets won't be shown on\nthe preset page(❸). Because there is no way to tell, which package type is a\n\"preset\" type, obviously.\n\nWhenever you are creating a preset using ❷, all the active facets will be stored\ninside custom fields of the preset package. You have to define these fields in\nadvance, by customizing package schema. The plugin will make an atempt to save\nthe value of facet inside a filed named as `<PREFIX><FACET_NAME>`. Default\nprefix is `search_preset_field_` and it can be changed using\n`ckanext.search_preset.field_prefix` config option. So, in order to store\n`license_id` facet, with default prefix, you have to define a field named\n`search_preset_field_license_id`.\n\nExample of a schema for `ckanext-schema` with a definition of preset, that keeps\nvalues of `license_id`, `res_format` and `tags` facets, can be found at\n[`ckanext/search-preset/example_preset.yaml`](ckanext/search-preset/example_preset.yaml).\n\nAll the active facets are stored as JSON encoded arrays of values. It means that\nyou can avoid using ❷ and create preset using `ckanapi`, for example:\n\n```sh\nckanapi action package_create \\\n    name=datasets-with-tag-xxx \\\n    type=<preset-type> \\\n    search_preset_field_tags='[\"xxx\"]'\n```\n\nYou can start from the example schema of preset and adapt it for your needs. For\nexample, you can replace plain input fields with hidden fields.\n\nWhenever user visits the preset details page, the list of datasets that matches preset's filters, will be shown at the bottom of the page. You can rewrite the Jinja2 block and snippet that reponsible for this output(❸).\n\nIn addition, the list of preset's packages can be obtained via `ckanapi`:\n\n```sh\nckanapi action search_preset_preset_list id=<preset-id-or-name>\n```\n\n## Developer installation\n\nTo install ckanext-search-preset for development, activate your CKAN virtualenv and\ndo:\n\n    git clone https://github.com/DataShades/ckanext-search-preset.git\n    cd ckanext-search-preset\n    pip install -e '.[dev]'\n\n## Tests\n\nTo run the tests, do:\n\n    pytest --ckan-ini=test.ini\n\n## License\n\n[AGPL](https://www.gnu.org/licenses/agpl-3.0.en.html)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DataShades/ckanext-search-preset",
    "keywords": "CKAN",
    "license": "AGPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ckanext-search-preset",
    "package_url": "https://pypi.org/project/ckanext-search-preset/",
    "platform": null,
    "project_url": "https://pypi.org/project/ckanext-search-preset/",
    "project_urls": {
      "Homepage": "https://github.com/DataShades/ckanext-search-preset"
    },
    "release_url": "https://pypi.org/project/ckanext-search-preset/0.0.1/",
    "requires_dist": [
      "ckanext-toolbelt (>=0.2.5)",
      "typing-extensions",
      "pytest-ckan ; extra == 'dev'",
      "pytest-factoryboy ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14954836,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e90446d9f2c06f740dd0e0ad6c88f19f02c9f35d58df9e27dffebf79d52e6c9e",
          "md5": "afa2cd31ea0250d4da32f65879cbd251",
          "sha256": "a4436d3e012513e6b368c711d65c565eda98f9eec55b4981b3f07ccba5397a00"
        },
        "downloads": -1,
        "filename": "ckanext_search_preset-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "afa2cd31ea0250d4da32f65879cbd251",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27507,
        "upload_time": "2022-08-31T22:06:09",
        "upload_time_iso_8601": "2022-08-31T22:06:09.631110Z",
        "url": "https://files.pythonhosted.org/packages/e9/04/46d9f2c06f740dd0e0ad6c88f19f02c9f35d58df9e27dffebf79d52e6c9e/ckanext_search_preset-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9515b936f3e770a835dd052ad07b3c12935b9550f95bb207797ac835408cc7ad",
          "md5": "32513cf36a7edf48697e1f4db686f413",
          "sha256": "4c19a882667258cf54c162d671ba55a7744a5bf5d0553403b4cfd936ff3077d6"
        },
        "downloads": -1,
        "filename": "ckanext-search-preset-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "32513cf36a7edf48697e1f4db686f413",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25741,
        "upload_time": "2022-08-31T22:06:11",
        "upload_time_iso_8601": "2022-08-31T22:06:11.816959Z",
        "url": "https://files.pythonhosted.org/packages/95/15/b936f3e770a835dd052ad07b3c12935b9550f95bb207797ac835408cc7ad/ckanext-search-preset-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e90446d9f2c06f740dd0e0ad6c88f19f02c9f35d58df9e27dffebf79d52e6c9e",
        "md5": "afa2cd31ea0250d4da32f65879cbd251",
        "sha256": "a4436d3e012513e6b368c711d65c565eda98f9eec55b4981b3f07ccba5397a00"
      },
      "downloads": -1,
      "filename": "ckanext_search_preset-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "afa2cd31ea0250d4da32f65879cbd251",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 27507,
      "upload_time": "2022-08-31T22:06:09",
      "upload_time_iso_8601": "2022-08-31T22:06:09.631110Z",
      "url": "https://files.pythonhosted.org/packages/e9/04/46d9f2c06f740dd0e0ad6c88f19f02c9f35d58df9e27dffebf79d52e6c9e/ckanext_search_preset-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9515b936f3e770a835dd052ad07b3c12935b9550f95bb207797ac835408cc7ad",
        "md5": "32513cf36a7edf48697e1f4db686f413",
        "sha256": "4c19a882667258cf54c162d671ba55a7744a5bf5d0553403b4cfd936ff3077d6"
      },
      "downloads": -1,
      "filename": "ckanext-search-preset-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "32513cf36a7edf48697e1f4db686f413",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 25741,
      "upload_time": "2022-08-31T22:06:11",
      "upload_time_iso_8601": "2022-08-31T22:06:11.816959Z",
      "url": "https://files.pythonhosted.org/packages/95/15/b936f3e770a835dd052ad07b3c12935b9550f95bb207797ac835408cc7ad/ckanext-search-preset-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}