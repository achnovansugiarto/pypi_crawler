{
  "info": {
    "author": "Gerhard Bräunlich",
    "author_email": "gerhard.braeunlich@id.ethz.ch",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# gorps\n\nConversion tool around a yml cooking recipe format.\n\nThe idea: The format is simple enough so that an editor can be used\ninstead of a GUI and this script is intended to be a \"mini [pandoc](https://pandoc.org/)\"\nfor recipes.\n\nA typical recipe looks like:\n\n```yml\ntitle: Beans with Bacon a la Bud Spencer\ndescription: Chuck Norris? Never heard about her!\ninstruction: |\n  Finely dice the onions and briefly sauté in hot oil together\n  with the bacon.\n  ...\namount: 1\namount_unit: Pan\npreparation_time: 900\ncooking_time: 600\nsource: https://www.kabeleins.ch/sosiehtsaus/essen-trinken/rezepte/bohnen-mit-speck-nach-bud-spencer\nlink: https://www.kabeleins.ch/sosiehtsaus/essen-trinken/rezepte/bohnen-mit-speck-nach-bud-spencer\ningredients:\n- name: Finely diced bacon\n  amount: 125\n  unit: g\n- name: Clove of garlic\n  amount: 1\n- name: Salami or Cabanossi\n  amount: 150\n  unit: g\n- name: ...\nnotes: |\n  Bud gives a damn about cream, but if you prever, serve with cream!\ntags:\n  category:\n  - Main course\n```\n\nAn `amount` of an ingredient can be\n* A number:\n  ```yml\n  - name: Clove of garlic\n    amount: 1\n  ```\n* A fraction:\n  ```yml\n  - name: Clove of garlic\n    amount: 1/3\n  ```\n* A range:\n  ```yml\n  - name: Clove of garlic\n    amount:\n      min: 2/3\n      max: 1\n  ```\n\nIngredients can be grouped:\n\n```yml\ningredients:\n  - name: Trimming\n    ingredients:\n      - name: ...\n        amount: ...\n        unit: ...\n```\n\nIt is also possible to include an image:\n\n```yml\nimage:\n  fmt: image/jpeg\n  data: !!binary |\n    /9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a\n```\n\nWhere the binary data is the base64 encoded binary data of the image.\n\nAn image `/tmp/1x1.png` can be inserted into a recipe using\n\n```sh\ngorps set-image --pic=/tmp/1x1.png examples/recipes/more-beans.yml\n```\n\nThis will include the following in the yml file:\n\n```yml\nimage:\n  fmt: image/png\n  data: !!binary |\n    ...\n```\n\nwhere `...` is the base64 encoded content of the image file.\nThe image file can be encoded / decoded as follows:\n\n```sh\n# Encode:\nbase64 image.png > image.b64.txt\n# Decode:\nbase64 -d image.b64.txt > image.png\n```\n\nAn image also can be extracted from a recipe:\n\n```sh\ngorps extract-image -o /tmp/1x1.png examples/recipes/more-beans.yml\n```\n\n## Supported Formats:\n\nImport:\n- Above `yml` format\n- [Gourmet](https://thinkle.github.io/gourmet/) `xml`\n\nExport:\n- The above `yml` format\n- Markdown\n- `svg`\n- `xml` (via templates, e.g. XSL-FO xml output)\n- [openrecipes](https://gitlab.com/ddorian/openrecipes/) sqlite and xml (not\n  installed by default)\n- `html`\n\n```mermaid\ngraph LR\n  yml --> gorps{gorps} --> md & yml & svg & xml & html & or_xml[openrecipes xml] & or_sql[openrecipes sql]\n  xml --> fop{fop} --> pdf\n  html --> weasyprint{weasyprint} --> pdf\n```\n\n## Install\n\nRequirement: python >= 3.9.\n\n```sh\npip install gorps\n# or first clone / cd, then:\npip install .\n```\n\nWith support for [openrecipes](https://openrecipes.jschwab.org):\n\n```sh\npip install --install-option=\"--extras-require=openrecipes\" gorps\n# or first clone / cd, then:\npip install .[openrecipes]\n```\n\n## Usage - Examples\n\n### svg\n\nTo export the folder [examples/recipes/](./examples/recipes/)` using a template [examples/svg/template.svg](./examples/svg/template.svg):\n\n```sh\ngorps export --template=examples/svg/template.svg -o /tmp/out.svg examples/recipes/\n```\n\n### xml\n\nIn this advanced example, we compose the recipes from\n[examples/recipes](./examples/recipes) to a menu card.\n\nThe template\n[examples/menu-card/xml-fo/template.fo.xml](./examples/menu-card/xml-fo/template.fo.xml)\nis used. This specific template expects to be used together with the\n`--group-by` option (recipes should be grouped by category).\nAlso, we are specifying, that we only want to include the groups\n*Starters*, *Main courses* and *Dessert* (`--group` options).\nWith the `--variable` option we pass to the template some other\nrequired parameters, like logos for categories, fonts and more.\nThe example also shows, how to filter the source recipes by title\n(`--title` options).\n\n```sh\ngorps export \\\n  --template examples/menu-card/xml-fo/template.fo.xml \\\n  --group-by 'tags[\"category\"]' \\\n  --group Starters \\\n  --group \"Main courses\" \\\n  --group Dessert \\\n  --variable-file examples/menu-card/xml-fo/variables.json \\\n  --title \"Beans with Bacon a la Bud Spencer\" \\\n  --title \"More Beans\" \\\n  -o /tmp/menucard.fo.xml \\\n  examples/recipes/\n```\n\nThe resulting `fo.xml` can then be further processed by\n[Apache fop](https://xmlgraphics.apache.org/fop/) to a pdf:\n\n```sh\ncp -r examples/menucard/img /tmp\nfop /tmp/menucard.fo.xml /tmp/menucard.pdf\n```\n\nNote: The resulting xml file will refer to the fonts *Linux Libertine*\nand *Linux Biolinum* which are part of the [Libertine Open Fonts Project](https://libertine-fonts.org/).\n\nℹ️ If you want to use custom fonts, you can specify a font config like\nthis:\n```sh\nfop -c fonts.cfg /tmp/menucard.fo.xml /tmp/menucard.pdf\n```\nwhere `fonts.cfg` looks like:\n\n```xml\n<?xml version=\"1.0\"?>\n<fop version=\"1.0\">\n  <renderers>\n    <renderer mime=\"application/pdf\">\n      <fonts>\n        <directory>/path/to/fonts</directory>\n        <auto-detect/>\n      </fonts>\n    </renderer>\n  </renderers>\n</fop>\n```\n\nThe template syntax is inspired by [vue.js](https://vuejs.org/):\nCurrently, the following directives are implemented:\n* [Text\n  Interpolation](https://vuejs.org/guide/essentials/template-syntax.html#text-interpolation)\n  ```html\n  <span>Title: {{ recipe.title }}</span>\n  ```\n* [v-if](https://vuejs.org/api/built-in-directives.html#v-if)\n  (Conditionally render an element based on the truthy-ness of the expression value)\n  ```html\n  <div v-if=\"recipe.ingredients\">\n    {{ recipe.title }}\n  </div>\n  ```\n* [v-for](https://vuejs.org/api/built-in-directives.html#v-for)\n  (Render the element block multiple times based on the source data)\n  ```html\n  <div v-for=\"recipe in recipes\">\n    {{ recipe.title }}\n  </div>\n  ```\n  Tuple unpacking is also possible:\n  ```html\n  <div v-for=\"group, recipes in groups.items()\">\n    {{ group }}: {{ recipes[0].title }}\n  </div>\n  ```\n* [v-bind](https://vuejs.org/api/built-in-directives.html#v-bind)\n  (Dynamically bind one or more attributes to an element)\n  ```html\n  <!-- bind an attribute -->\n  <a v-bind:href=\"recipe.link\">Link</a>\n\n  <!-- bind a dict of attributes -->\n  <div v-bind=\"{ 'id': '1', 'class': 'X'}\"></div>\n  ```\n* `<template>` on\n  [v-if](https://vuejs.org/guide/essentials/conditional.html#v-if-on-template)\n  and\n  [v-for](https://vuejs.org/guide/essentials/list.html#v-for-on-template)\n\n### html\n\n#### Menu card\n\nThis is a slight variant of the xml fo example from above.\nThis time, we use html as output format and make use of the\n`--grouped-titles` option, to manually group recipes by their titles.\nAlso, `--filter-ingredient` is used, to remove \"obvious\" ingredients\nfrom the ingredient list.\n\n```sh\ngorps export \\\n  --template examples/menu-card/html/menucard.template.html \\\n  -V title=\"Beans & Beans\" \\\n  --filter-ingredient Salt \\\n  --filter-ingredient Pepper \\\n  --grouped-titles examples/menu-card/html/grouped_titles.json \\\n  -o /tmp/menucard.html \\\n  examples/recipes/\n```\n\nThe resulting html can be further processed to a pdf by\ne.g. [weasyprint](https://doc.courtbouillon.org/weasyprint/stable/):\n\n```sh\ncp -r examples/menucard/img examples/menucard/html/style.css /tmp\nweasyprint /tmp/menucard.html /tmp/menucard.pdf\n```\n\nNote: see the comment about fonts from the xml fo example.\n\n#### web\n\nHere, we export a recipe to html, using the same template syntax as\nfor xml:\n\n```sh\ngorps export \\\n  --template examples/html/template.html \\\n  -o /tmp/beans.html \\\n  examples/recipes/beans.yml\n```\n\n\n### openrecipes\n\nThere are two possibilities: either direct export to the sqlite\ndatabase file or export to an `.openrecipe` xml file.\n\n#### sql\n\nTo sync to an openrecipes db on an android phone, first pull the db\nvia adb:\n\n```sh\nadb root\nadb pull /data/user/0/org.jschwab.openrecipes/files/database.db /tmp/\n```\n\nThen export all recipes to the sqlite db:\n\n```sh\ngorps export --fmt openrecipes -o /tmp/database.db examples/recipes\n```\n\nFinally, replace the db on the phone with the extended version:\n\n```sh\nadb push /tmp/database.db /data/user/0/org.jschwab.openrecipes/files/database.db\nadb kill-server # terminate adb\n```\n\n#### openrecipe xml\n\n```sh\ngorps export --fmt openrecipes-xml -o /tmp/out/ examples/recipes\n```\n\n### markdown\n\nTo export the folder [examples/recipes/](./examples/recipes/) to\nindividual `.md` files in `/tmp/out/`:\n\n```sh\ngorps export --fmt markdown -o /tmp/out/ examples/recipes/\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "GPL3v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gorps",
    "package_url": "https://pypi.org/project/gorps/",
    "platform": null,
    "project_url": "https://pypi.org/project/gorps/",
    "project_urls": {
      "Source": "https://gitlab.com/g-braeunlich/gorps"
    },
    "release_url": "https://pypi.org/project/gorps/0.9.1/",
    "requires_dist": [
      "PyYAML",
      "types-PyYAML ; extra == 'dev'",
      "types-pillow ; extra == 'dev'",
      "pillow ; extra == 'openrecipes'"
    ],
    "requires_python": ">=3.9",
    "summary": "Recipy converter",
    "version": "0.9.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16271685,
  "releases": {
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "355af3a4a26839f859dfb574c11a1db9862f365f51db5397bb21136a82b4f1f6",
          "md5": "a56182eb94cf13873fccdde53f4b6983",
          "sha256": "58a1537cd8b4308ac4d6cf2304d0acfcb6d6b627e57476e278c662354967020d"
        },
        "downloads": -1,
        "filename": "gorps-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a56182eb94cf13873fccdde53f4b6983",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 42324,
        "upload_time": "2022-03-21T18:52:25",
        "upload_time_iso_8601": "2022-03-21T18:52:25.894763Z",
        "url": "https://files.pythonhosted.org/packages/35/5a/f3a4a26839f859dfb574c11a1db9862f365f51db5397bb21136a82b4f1f6/gorps-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af507004d7c27033301eff1e32b01fc392ea06f7d1ad2a6fc950cc2d95de4203",
          "md5": "692af60758449e4dd19c8dd089e5d619",
          "sha256": "b3d5235bdfd14bd7df7c332036127a0a4261cf00a51033bb8f7aa02c2917810f"
        },
        "downloads": -1,
        "filename": "gorps-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "692af60758449e4dd19c8dd089e5d619",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 42467,
        "upload_time": "2022-03-21T18:52:27",
        "upload_time_iso_8601": "2022-03-21T18:52:27.182231Z",
        "url": "https://files.pythonhosted.org/packages/af/50/7004d7c27033301eff1e32b01fc392ea06f7d1ad2a6fc950cc2d95de4203/gorps-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b59018807ccaa35240d58d8c7c994aa58adf39caa9191233d4bd1f4caf59033e",
          "md5": "d2025018507b114b6d00baee3e86f7b5",
          "sha256": "65d2929a4bf615e78be3e78eeaae08a25d33990e77adad1a25b1b3c131c9473c"
        },
        "downloads": -1,
        "filename": "gorps-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d2025018507b114b6d00baee3e86f7b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 42211,
        "upload_time": "2023-01-01T11:45:26",
        "upload_time_iso_8601": "2023-01-01T11:45:26.578644Z",
        "url": "https://files.pythonhosted.org/packages/b5/90/18807ccaa35240d58d8c7c994aa58adf39caa9191233d4bd1f4caf59033e/gorps-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e0afa14e9795ab13d60c66342b5eca574afb4c8effc10ac00fe8f56e4242c17",
          "md5": "d37ffe93c2c2b1d7ac617fb51f6e2f54",
          "sha256": "21d6dd12c4dde633bf26fea23d14b60167e136eb9f7f71c840c57f06fe679846"
        },
        "downloads": -1,
        "filename": "gorps-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d37ffe93c2c2b1d7ac617fb51f6e2f54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 42446,
        "upload_time": "2023-01-01T11:45:27",
        "upload_time_iso_8601": "2023-01-01T11:45:27.887083Z",
        "url": "https://files.pythonhosted.org/packages/9e/0a/fa14e9795ab13d60c66342b5eca574afb4c8effc10ac00fe8f56e4242c17/gorps-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b59018807ccaa35240d58d8c7c994aa58adf39caa9191233d4bd1f4caf59033e",
        "md5": "d2025018507b114b6d00baee3e86f7b5",
        "sha256": "65d2929a4bf615e78be3e78eeaae08a25d33990e77adad1a25b1b3c131c9473c"
      },
      "downloads": -1,
      "filename": "gorps-0.9.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d2025018507b114b6d00baee3e86f7b5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 42211,
      "upload_time": "2023-01-01T11:45:26",
      "upload_time_iso_8601": "2023-01-01T11:45:26.578644Z",
      "url": "https://files.pythonhosted.org/packages/b5/90/18807ccaa35240d58d8c7c994aa58adf39caa9191233d4bd1f4caf59033e/gorps-0.9.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9e0afa14e9795ab13d60c66342b5eca574afb4c8effc10ac00fe8f56e4242c17",
        "md5": "d37ffe93c2c2b1d7ac617fb51f6e2f54",
        "sha256": "21d6dd12c4dde633bf26fea23d14b60167e136eb9f7f71c840c57f06fe679846"
      },
      "downloads": -1,
      "filename": "gorps-0.9.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d37ffe93c2c2b1d7ac617fb51f6e2f54",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 42446,
      "upload_time": "2023-01-01T11:45:27",
      "upload_time_iso_8601": "2023-01-01T11:45:27.887083Z",
      "url": "https://files.pythonhosted.org/packages/9e/0a/fa14e9795ab13d60c66342b5eca574afb4c8effc10ac00fe8f56e4242c17/gorps-0.9.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}