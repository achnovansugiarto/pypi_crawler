{
  "info": {
    "author": "Christian Haumesser",
    "author_email": "ch@wryfi.net",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2",
      "Framework :: Django :: 3",
      "Framework :: Django :: 4",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "###########\ndjango-burl\n###########\n\n``django-burl`` (brief url) is a URL shortening application for inclusion in\ndjango projects. It provides a data model and a simple REST API in addition\nto URL redirection capabilities.\n\nIf you are looking for a standalone URL shortener that you can quickly run in\na container, *see* `burl <https://github.com/wryfi/burl>`__ for a ready-to-go\nreference implementation of ``django-burl``.\n\n\nQuick Start\n===========\n\n1. Install by running ``pip install django-burl`` in your python/django environment\n\n2. Configure django (e.g. in your project's ``settings.py``) as follows: ::\n\n        INSTALLED_APPS = [\n            ...,\n            \"django.contrib.sites\",\n            \"django_filter\",\n            \"rest_framework\",\n            \"django_burl\",\n        ]\n\n        MIDDLEWARE = [\n            ...,\n            \"django.contrib.sites.middleware.CurrentSiteMiddleware\"\n        ]\n\n        REST_FRAMEWORK = {\n            ...,\n            \"DEFAULT_FILTER_BACKENDS\": [\"django_filters.rest_framework.DjangoFilterBackend\"],\n        }\n\n\n3. Run database migrations, e.g. ``manage.py migrate``.\n\n4. Add the URLs from ``django_burl.api.v2.urls``  or ``django_burl.urls`` to your application's URL structure.\n\n5. Create some Brief URLs in the Django admin (logged in as a superuser).\n\n6. Explore the API. Its URL may vary depending on how you configured your\n   project. (HINT: install ``django_extensions`` and then run ``manage.py show_urls``\n   to get a full list of your project's URLs if you're not sure.)\n\n\nSites & Permissions\n===================\n\n``django-burl`` uses the django\n`sites framework <https://docs.djangoproject.com/en/4.0/ref/contrib/sites/>`__,\nallowing one django instance to host multiple domains. Permissions\nto each site are determined by ``BriefURLDomainUser`` objects, which you can create\nand manipulate in the Django Admin (as a superuser).\n\nThese objects map a user to a site and one of three roles:\n\n* Creator - has the ability to create burls, and to view, modify and delete his/her own burls\n* Editor - has creator permissions plus ability to view all burls and modify any burl\n* Admin - has editor permissions plus ability to delete a burl\n\nAnonymous requests are denied, and users who are not associated with any\n``BriefURLDomainUser`` objects are also denied access.\n\nRequests to the REST API are always scoped by domain based on the request's\n``Host`` header. For example, if your django instance has two sites with domains\n``abc.test`` and ``xyx.test``, you cannot manipulate the burls for ``abc.test``\nby making requests to the API at https://xyz.test; you can only do so through\nhttps://abc.test.\n\nNOTE: Only superusers can modify the owner of a burl, and must take care that the\nburl's owner has access to its site via ``BriefURLDomainUser`` objects (neither the\nadmin interface nor the REST API currently enforces this). Otherwise, the burl\nwill become manageable only by superusers and will not be accessible to its owner.\n\nLikewise, the burls available to non-superusers in the django admin interface\nare also scoped by site: a user working in https://xyz.test/admin will not see\nany burls for ``abc.test``, even if both domains are hosted on the same django\ninstance, and the user has permission to them both. If the user wants to edit\nburls in ``abc.test``, it must be done via the https://abc.test/admin interface.\n\nSuperusers editing burls in the django admin interface will see all burls from\nall domains, where they can change the owner and site/domain for each burl.\nAgain care must be taken that the burl's owner has access to its site via\n``BriefURLDomainUser`` objects (the admin interface does not enforce this).\n\nDjango Admin\n============\n\nBurls can be managed by non-superusers in the Django admin, by granting the user\n*Staff status* and the following *User permissions*:\n\n* ``django_burl | brief url | Can view brief url``\n\nThe default redirect for a domain can also be managed (by a site admin) in the\ndjango admin by granting:\n\n* ``django_burl | brief url default redirect | Can view brief url default redirect``\n\n(This is not currently used by ``django-burl`` directly, but may be useful in your\nupstream application.)\n\nAPI Reference\n=============\n\nIt is assumed that ``django-burl`` will be installed within a larger django project,\nand leaves to the project architect the task of integrating it with other API\nendpoints and resources.\n\nThe API is implemented using\n`django rest framework <https://www.django-rest-framework.org/>`__ (DRF). It\nfollows standard DRF settings and conventions, and should play nice with other\ntools in the greater DRF sandbox. You can visit the API root in your browser\nfor a user-friendly interface.\n\nBrief URLs are represented as JSON objects of the following schema: ::\n\n    {\n        \"burl\": string,\n        \"url\": string,\n        \"user\": int | uuid,\n        \"description\": string,\n        \"enabled\": bool\n    }\n\nThe following URL endpoints are provided: ::\n\n    /burls (GET, POST, HEAD, OPTIONS)\n\n        GET - list Brief URLs\n        POST - create a new Brief URL (JSON body per schema above)\n\n    /burls/<burl> (GET, PUT, PATCH, DELETE, HEAD, OPTIONS)\n\n        GET - return details about the requested Brief URL\n        PUT - entirely replace the requested Brief URL (JSON body per schema above)\n        PATCH - update the provided fields on the requested Brief URL (JSON body per schema above)\n        DELETE - delete the requested Brief URL\n\n\nImplementation\n==============\n\n``django-burl`` implements a URL shortening service by allowing authorized users\nto create a brief URL pointing to any other URL.\n\nWhen creating a brief URL, the user may specify the brief url, which must be\nunique within the domain. If the user does not specify a brief URL, one will be\ngenerated by passing a random salt and number into the\n`hashids <https://hashids.org/>`__ library until a unique string is found.\n\nThe ``HASHID_ALPHABET`` setting determines the characters (as a string) that will\nbe used to automatically generate burls. The ``BURL_BLACKLIST`` setting is a list\nof strings that will not be used when generating burls.\n\nWhen the brief URL is subsequently requested from ``django-burl``, it returns\na redirect to the original URL.\n\nThere are two primary interfaces to burl:\n\n#. the built-in django admin interface (typically at https://abc.test/admin/);\n#. a minimal restful API based on\n   `django rest framework <https://www.django-rest-framework.org/>`__ (DRF).\n\nNew brief URLs can only be created by authenticated users (via session auth\nor token auth by default), who must also be granted permission to the relevant\nsite via ``BriefURLDomainUser`` objects. Permissions and authentication methods\nare further extensible via DRF.\n\n\nRequirements\n============\n\ncode\n----\n\nYou will need an existing `Django <https://www.djangoproject.com>`__\nproject, running at least django 2.2+ and python 3.7+.\n\nIn addition, the `sites framework <https://docs.djangoproject.com/en/4.0/ref/contrib/sites>`__\nmust be installed, and ``CurrentSiteMiddleware`` enabled in your project.\n\nFor a standalone url shortener implementing ``django-burl``, see\n`burl <https://github.com/wryfi/burl>`__.\n\n\ndatabase\n--------\n\nA PostgreSQL database is recommended for your ``django-burl`` project.\nWhile MySQL variants may also work, ``django-burl`` is tested against and\noptimized for postgres.\n\nNote that ``django-burl`` does rely on strong constraints, so sqlite is not\nsupported.\n\nFollow the standard Django docs for configuring your database engine.\n\n\nuser model\n----------\n\n``django-burl`` serializes the user id field in API responses. This imposes\nsome limitations on the user model that can be used with the package. Namely,\nyour user model must have an ``id`` field that is either:\n\n- an integer, e.g. ``AutoField`` (as found on the default django user model),\n  ``BigAutoField``, or ``IntegerField``\n- or a UUID, e.g. ``UUIDField``\n\nUser models that do not conform to the above specification are not supported.\n\n\nInstallation\n============\n\n``django-burl`` is made to be installed via the standard python installation methods.\nYou can install it as simply as running::\n\n    pip install django-burl\n\nIt is recommended, of course, that you use ``django-burl`` in a virtualenv or\nDocker container.\n\nThen, configure your ``settings.py`` as follows: ::\n\n    INSTALLED_APPS = [\n        ...,\n        \"django.contrib.sites\",\n        \"django_filter\",\n        \"rest_framework\",\n        \"django_burl\",\n    ]\n\n    MIDDLEWARE = [\n        ...,\n        \"django.contrib.sites.middleware.CurrentSiteMiddleware\"\n    ]\n\n    REST_FRAMEWORK = {\n        ...,\n        \"DEFAULT_FILTER_BACKENDS\": [\"django_filters.rest_framework.DjangoFilterBackend\", ... ],\n    }\n\nNext, run the database migrations to create the necessary tables, using your\nproject's management script::\n\n    manage.py migrate\n\nYou should now see the database tables in the django admin after restarting\nyour application.\n\nFinally, configure API routes by including ``django_burl.urls`` in your application's\nURL configuration.\n\nConfiguration\n=============\n\n``django-burl`` reads its configuration from the standard django settings module,\nwhich is typically extended in a ``settings.py`` file (or whatever module is\nspecified in the ``$DJANGO_SETTINGS_MODULE`` environment variable). More relevant\nsettings include: ::\n\n    # list of strings that cannot be used as brief URLs;\n    # subtracting from the below defaults is inadvisable, but extend at will!\n    BURL_BLACKLIST = [\"admin\", \"api\", \"static\", \"media\"]\n\n    # the characters available for generating BURLs\n    HASHID_ALPHABET = \"abcdefghjkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ0123456789\"\n\n    # when there are more than this number of burls, the django admin gets its count of\n    # objects using a less accurate estimate from postgres, rather than count(*);\n    # if another db is used, this setting is ignored.\n    ROUGH_COUNT_MIN = 1000\n\n    # the configured user model (must have an id that is an int or a uuid)\n    AUTH_USER_MODEL = \"myapp.models.user\"\n\n    # you can extend DRF settings to your liking ...\n    REST_FRAMEWORK = {\n        \"DEFAULT_AUTHENTICATION_CLASSES\": (\n            \"rest_framework.authentication.SessionAuthentication\",\n            \"rest_framework.authentication.TokenAuthentication\",\n        ),\n        \"DEFAULT_PAGINATION_CLASS\": \"rest_framework.pagination.LimitOffsetPagination\",\n        \"PAGE_SIZE\": 20,\n        \"DEFAULT_PARSER_CLASSES\": [\n            \"rest_framework.parsers.JSONParser\",\n        ],\n        \"DEFAULT_FILTER_BACKENDS\": [\"django_filters.rest_framework.DjangoFilterBackend\"],\n    }\n\n``django_burl.conf.settings`` extends ``django.conf.settings``, supplying default\nvalues for ``BURL_BLACKLIST``, ``HASHID_ALPHABET`` and ``ROUGH_COUNT_MIN`` if\nthey are not already provided. Modules throughout this library therefore import\nfrom ``django_burl.conf.settings`` instead of ``django.conf.settings``.\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/wryfi/django-burl",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-burl",
    "package_url": "https://pypi.org/project/django-burl/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-burl/",
    "project_urls": {
      "Homepage": "https://gitlab.com/wryfi/django-burl"
    },
    "release_url": "https://pypi.org/project/django-burl/1.0.4/",
    "requires_dist": [
      "Django (>=2.0)",
      "django-filter",
      "djangorestframework (<4.0)",
      "djangorestframework-simplejwt (<=5.0)",
      "hashids (<2.0)",
      "requests"
    ],
    "requires_python": ">=3.8",
    "summary": "A Django app for shortening URLs",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13184580,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8df167f5d22a300f85f5c33bc7060e151ec2499b3f1e4d7a3fd6a9bfa5c95e14",
          "md5": "fd73871fcfa214d7f869b1556af81ad8",
          "sha256": "2d32876603f65bf0332bcb9ae2df6b78dfd52ac1abefcf33629ee745abca31bd"
        },
        "downloads": -1,
        "filename": "django_burl-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fd73871fcfa214d7f869b1556af81ad8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 27447,
        "upload_time": "2022-03-03T01:13:07",
        "upload_time_iso_8601": "2022-03-03T01:13:07.213783Z",
        "url": "https://files.pythonhosted.org/packages/8d/f1/67f5d22a300f85f5c33bc7060e151ec2499b3f1e4d7a3fd6a9bfa5c95e14/django_burl-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e83dbdae89a2b1be8fc6f6de9ed00767aefe7a8494f01218c4f9f28ee01083fe",
          "md5": "2da6ac81bdf22a25598fc01e24dd59e9",
          "sha256": "f5fa880bfa224e2a375c314c31423c5b3dd360a1ef6cdb13ccb2abf7fb791d2f"
        },
        "downloads": -1,
        "filename": "django-burl-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2da6ac81bdf22a25598fc01e24dd59e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 20398,
        "upload_time": "2022-03-03T01:13:08",
        "upload_time_iso_8601": "2022-03-03T01:13:08.833057Z",
        "url": "https://files.pythonhosted.org/packages/e8/3d/bdae89a2b1be8fc6f6de9ed00767aefe7a8494f01218c4f9f28ee01083fe/django-burl-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c30f8145ca6c6f8fcd6578977ccf9b32c8cc01d093f6f575b734d2deffa808e",
          "md5": "16df8f7eab8d206537099480cbf9baa0",
          "sha256": "5749881c31a5d50034a56c63d00de709e1468dae03d68631dc79057fd3135129"
        },
        "downloads": -1,
        "filename": "django_burl-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "16df8f7eab8d206537099480cbf9baa0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 27445,
        "upload_time": "2022-03-03T18:27:45",
        "upload_time_iso_8601": "2022-03-03T18:27:45.744459Z",
        "url": "https://files.pythonhosted.org/packages/8c/30/f8145ca6c6f8fcd6578977ccf9b32c8cc01d093f6f575b734d2deffa808e/django_burl-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f7c28c76fd63bff5c8d5b8c95d30410901891da4173d43a9e3f9bb229461697",
          "md5": "cd461f1c060c0ab3d6980fb4a6269877",
          "sha256": "a2ff2e6401a3f62cef8944131198b4b5a42c14f7ebb3fa1491b67c25401b1dc3"
        },
        "downloads": -1,
        "filename": "django-burl-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cd461f1c060c0ab3d6980fb4a6269877",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 20416,
        "upload_time": "2022-03-03T18:27:47",
        "upload_time_iso_8601": "2022-03-03T18:27:47.065392Z",
        "url": "https://files.pythonhosted.org/packages/5f/7c/28c76fd63bff5c8d5b8c95d30410901891da4173d43a9e3f9bb229461697/django-burl-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4b5570a867946c2d966aeaa35c402644f3a9340a068c58ba875d4ffead4fe32",
          "md5": "12de0ca80ec20b54a6de07abf34023de",
          "sha256": "c52ca419f6a52a1cf8f18fbb3b5218f2c6afeaa02ff0ec74e1357d05c6301998"
        },
        "downloads": -1,
        "filename": "django_burl-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12de0ca80ec20b54a6de07abf34023de",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 32219,
        "upload_time": "2022-03-15T01:56:07",
        "upload_time_iso_8601": "2022-03-15T01:56:07.328616Z",
        "url": "https://files.pythonhosted.org/packages/d4/b5/570a867946c2d966aeaa35c402644f3a9340a068c58ba875d4ffead4fe32/django_burl-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1648d8129513d5a42cb0520048398a5ce01690ad12e7a33ac8fcf0d668f9ff6a",
          "md5": "d181aa18378ee720177b7813b6009126",
          "sha256": "564c76fca72087bf0323ad837cea03ca9ef65dbd114507ae7511a39ee6e47643"
        },
        "downloads": -1,
        "filename": "django-burl-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d181aa18378ee720177b7813b6009126",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 25667,
        "upload_time": "2022-03-15T01:56:08",
        "upload_time_iso_8601": "2022-03-15T01:56:08.681242Z",
        "url": "https://files.pythonhosted.org/packages/16/48/d8129513d5a42cb0520048398a5ce01690ad12e7a33ac8fcf0d668f9ff6a/django-burl-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac149591741ea823358f21575dfb54ae9d74eeb9f5af96ba6da078ee2f934663",
          "md5": "62b635700c10f9167e43a822a1994e72",
          "sha256": "256eb9f8349251e5b1dc49d27aca1b444537c03daac34f115221ddba9b460360"
        },
        "downloads": -1,
        "filename": "django_burl-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "62b635700c10f9167e43a822a1994e72",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 35101,
        "upload_time": "2022-03-15T17:01:35",
        "upload_time_iso_8601": "2022-03-15T17:01:35.969028Z",
        "url": "https://files.pythonhosted.org/packages/ac/14/9591741ea823358f21575dfb54ae9d74eeb9f5af96ba6da078ee2f934663/django_burl-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa7cb0c637213a48fa22579cacb7902fc7b899bdc42ecc7d734043d24491be6a",
          "md5": "e53c4341c1fcebd3e1b5827617a12150",
          "sha256": "5f2530929c5c0a2054ad4fc9b05ab75fe58a724178c1e064d5a56aede8594658"
        },
        "downloads": -1,
        "filename": "django-burl-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e53c4341c1fcebd3e1b5827617a12150",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 27165,
        "upload_time": "2022-03-15T17:01:37",
        "upload_time_iso_8601": "2022-03-15T17:01:37.793458Z",
        "url": "https://files.pythonhosted.org/packages/aa/7c/b0c637213a48fa22579cacb7902fc7b899bdc42ecc7d734043d24491be6a/django-burl-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ac149591741ea823358f21575dfb54ae9d74eeb9f5af96ba6da078ee2f934663",
        "md5": "62b635700c10f9167e43a822a1994e72",
        "sha256": "256eb9f8349251e5b1dc49d27aca1b444537c03daac34f115221ddba9b460360"
      },
      "downloads": -1,
      "filename": "django_burl-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "62b635700c10f9167e43a822a1994e72",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 35101,
      "upload_time": "2022-03-15T17:01:35",
      "upload_time_iso_8601": "2022-03-15T17:01:35.969028Z",
      "url": "https://files.pythonhosted.org/packages/ac/14/9591741ea823358f21575dfb54ae9d74eeb9f5af96ba6da078ee2f934663/django_burl-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa7cb0c637213a48fa22579cacb7902fc7b899bdc42ecc7d734043d24491be6a",
        "md5": "e53c4341c1fcebd3e1b5827617a12150",
        "sha256": "5f2530929c5c0a2054ad4fc9b05ab75fe58a724178c1e064d5a56aede8594658"
      },
      "downloads": -1,
      "filename": "django-burl-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "e53c4341c1fcebd3e1b5827617a12150",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 27165,
      "upload_time": "2022-03-15T17:01:37",
      "upload_time_iso_8601": "2022-03-15T17:01:37.793458Z",
      "url": "https://files.pythonhosted.org/packages/aa/7c/b0c637213a48fa22579cacb7902fc7b899bdc42ecc7d734043d24491be6a/django-burl-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}