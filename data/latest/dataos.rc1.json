{
  "info": {
    "author": "Brian Armstrong, Yihui Xiong",
    "author_email": "brian.armstrong.ece+pypi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "quiet.py\n========\n\n[![](https://img.shields.io/pypi/v/quiet.py.svg)](https://pypi.org/project/quiet.py/)\n\n\nPython ctypes bindings for libquiet to transmit data with sound.\n\n## Requirements\n+ numpy\n\n## Install\n\n+ For ARM platform, binary package is available on pypi, just use `pip` to install it:\n\n  ```\n  sudo apt install python-numpy\n  pip install --no-deps quiet.py\n  ```\n\n  We install `numpy` separately, as installing `numpy` via pip requires compiling numpy from source.\n\n+ For x86/amd64\n\n  ```\n  sudo apt install cmake\n  git clone https://github.com/xiongyihui/quiet.py && cd quiet.py\n  ./scripts/libs.sh\n  pip install .\n  ```\n\n\n## Usage\n1. Encode a message, and then decode it\n```\nfrom quiet import Encode, Decoder\n\ndef test():\n    encoder = Encoder()\n    decoder = Decoder()\n\n    for chunk in encoder.encode('hello, world'):\n        message = decoder.decode(chunk)\n        if message is not None:\n            print(message)\n\n\ntest()\n```\n\n2. decode messages from recording in realtime\n\n```\nimport sys\nimport numpy\nimport pyaudio\nfrom quiet import Encode, Decoder\n\ndef decode():\n    if sys.version_info[0] < 3:\n        import Queue as queue\n    else:\n        import queue\n\n    FORMAT = pyaudio.paFloat32\n    CHANNELS = 1\n    RATE = 44100\n    CHUNK = 16384  # int(RATE / 100)\n\n    p = pyaudio.PyAudio()\n    q = queue.Queue()\n\n    def callback(in_data, frame_count, time_info, status):\n        q.put(in_data)\n        return (None, pyaudio.paContinue)\n\n    stream = p.open(format=FORMAT,\n                    channels=CHANNELS,\n                    rate=RATE,\n                    input=True,\n                    frames_per_buffer=CHUNK,\n                    stream_callback=callback)\n\n    count = 0\n    with Decoder(profile_name='ultrasonic-experimental') as decoder:\n        while True:\n            try:\n                audio = q.get()\n                audio = numpy.fromstring(audio, dtype='float32')\n                # audio = audio[::CHANNELS]\n                code = decoder.decode(audio)\n                if code is not None:\n                    count += 1\n                    print(code.tostring().decode('utf-8', 'ignore'))\n            except KeyboardInterrupt:\n                break\n\n\ndecode()\n```\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/quiet/quiet.py",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dataos",
    "package_url": "https://pypi.org/project/dataos/",
    "platform": "",
    "project_url": "https://pypi.org/project/dataos/",
    "project_urls": {
      "Homepage": "https://github.com/quiet/quiet.py"
    },
    "release_url": "https://pypi.org/project/dataos/0.1/",
    "requires_dist": [
      "numpy"
    ],
    "requires_python": "",
    "summary": "Quiet Modem, to transmit data with sound",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6645619,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7feb803faf1644daa3fb1f7e95be539438113f16dc09dfa65e0ee83bb1c74a72",
          "md5": "fbebe1f6892e72eff670fe7d2e478160",
          "sha256": "6dc8b7fd6f871126f3b972138113c3d0163d313e0923ae512bb6d282f96b5b33"
        },
        "downloads": -1,
        "filename": "dataos-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fbebe1f6892e72eff670fe7d2e478160",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 86155,
        "upload_time": "2020-02-17T12:32:05",
        "upload_time_iso_8601": "2020-02-17T12:32:05.746338Z",
        "url": "https://files.pythonhosted.org/packages/7f/eb/803faf1644daa3fb1f7e95be539438113f16dc09dfa65e0ee83bb1c74a72/dataos-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7feb803faf1644daa3fb1f7e95be539438113f16dc09dfa65e0ee83bb1c74a72",
        "md5": "fbebe1f6892e72eff670fe7d2e478160",
        "sha256": "6dc8b7fd6f871126f3b972138113c3d0163d313e0923ae512bb6d282f96b5b33"
      },
      "downloads": -1,
      "filename": "dataos-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fbebe1f6892e72eff670fe7d2e478160",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 86155,
      "upload_time": "2020-02-17T12:32:05",
      "upload_time_iso_8601": "2020-02-17T12:32:05.746338Z",
      "url": "https://files.pythonhosted.org/packages/7f/eb/803faf1644daa3fb1f7e95be539438113f16dc09dfa65e0ee83bb1c74a72/dataos-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}