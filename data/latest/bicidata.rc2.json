{
  "info": {
    "author": "Ismael Benito Altamirano",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# bicidata\n\n`bicidata` from `bici` the equivalent of `bike` in Spanish, Catalan, Portuguese or Galician.  \n\n`bici` is pronounced in two syllables `bi-ci`, which can be pronounced as something similar to\n`be-cy` or `be-thy` for a English speaker. The first one approximates better to Catalan, \nPortuguese and Latin Spanish, the second one to Spanish and Galician.  \n\n`bicidata` is a framework to work with the [General Bikeshare Feed Specification](https://github.com/NABSA/gbfs/blob/master/gbfs.md#gbfsjson) \n(GBFS) data and aims to develop several services to collect, process and publish data from GBFS \nfeeds different front-ends, such as, social media bots, etc. \n\nIt is based upon Python 3, with a very unstable package API until v1.0.0 is reached. You may\nuse the code here, but I must warn you we are in the early stage of development. \n\n## Installation\n\nYou can use a deployed PyPI version of `bicidata`: \n\n```\npip install bicidata\n```\n\nHowever, that version may be outdated, so I recommend to install directly from GitHub:\n\n```\npip install git+https://github.com/bicidata/bicidata.git\n```\n\nOr, if you want to have access to the code to develop new features (PRs are welcome!):\n\n```\ngit clone https://github.com/bicidata/bicidata.git & cd bicidata\npip install -e .\n```\n\n##  Services\n\n`bicidata` it is thought as a framework to provide services to work with GBFS data. These \nservices could run together as a Python app or be launched alone (i.e. dockerized). \nThus, scalability will be one of the main goals of `bicidata`. Some services have already profiled:\n\n- **Snapshots:** as GBFS data is updated in \"real-time\" and it is not stored we need to do it \nfor ourselves. \n- **Archivers:** assuming GBFS data is stored in raw JSON format, and a snapshot is taken \nevery minute, the amount of data per day reaches around ~200MB for the city of Barcelona. So,\nsome kind of data preprocessing is needed, it could be something as zipper, or something more \npowerful, as data bases. \n- **Reporters:** we want data with swag, so we will create _reports_  with the available data.\n- **Publishers:** and finally we want the data to become available to the public. \n\n### Snapshots\n\nThis is the first service that is being implemented, it creates snapshots of a given GBFS API\nat the current timestamp. \n\nRun\n\n```\npython -m bicidata.services.snapshot\n``` \n\nand it will create a snapshot of a live GBFS API in you filesystem to acquire its data. If\nyou want to loop it, you perfectly can do something like this from inside Python:\n\n```python\nimport time\nfrom bicidata.services.snapshot import Snapshot, GBFSOnlineResource, FileStorageSaver\n\nnum_snapshots = 60\nsnapshot_sample_time = 60  # time in seconds\n\nsnapshot = Snapshot(\n    GBFSOnlineResource(\"https://barcelona.publicbikesystem.net/ube/gbfs/v1/gbfs.json\"),\n    FileStorageSaver(),\n)\n\nfor _ in range(60):\n    snapshot.run()   \n    time.sleep(snapshot_sample_time)\n``` \n\nTo consume the acquired data, you will find some examples at the `scripts/` folder. To\ncheck for an advanced snap-shooter, consider run the `server` app.   \n\n### Archivers\n\nFor the moment, there are any services to compress the data to more advanced structures \nthan JSON, but I'm playing with pandas and xarray at `scripts/create_dataset.py`, \nso take a look if you want! \n\n### Reporters\n\nSame here, there is a compiled dataset in the repo, so, if you want to play with it, feel\nfree, at `scripts/scripts.py` you will find this to start playing with: \n\n```python\nimport pandas as pd\nimport xarray as xr\n\ndataset = xr.open_dataset(\"data/gbfs_bcn_dump_20200925.dat\")\n\ncapacity = int(dataset.capacity.sum())\nprint(f\"'Bicing' total capacity: {capacity}\")\n\nmax_bikes_available = int(dataset.num_bikes_available.sum(\"station_id\").max())\nprint(f\"'Bicing' max bikes available: {max_bikes_available}\")\n\nwhen_max_bikes_available = pd.to_datetime(\n    dataset.times[dataset.num_bikes_available.sum(\"station_id\").argmax()].values\n)\nprint(f\"When max bikes are available in UTC+0: {when_max_bikes_available}\")\n```\n\nWith should produce something like: \n\n```\n'Bicing' total capacity: 13328\n'Bicing' max bikes available: 4116\nWhen max bikes are available in UTC+0: 2020-09-25 01:35:09\n```\n\n## Server\n\nAll services are planed to run in a server instance, this server first will be implemented \nin python, but the idea is to run it using docker-compose or kubernetes, at some point... \n\nNow, it is implemented as a 24h snap-shooter,this will change soon with \na more elegant way to run it. For the moment: \n\n```\npython -m bicidata.apps.server\n``` \n\nYou can configure the server changing the `.env.template` to `.env` and placing there your\ndesired configuration.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bicidata/bicidata",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bicidata",
    "package_url": "https://pypi.org/project/bicidata/",
    "platform": "",
    "project_url": "https://pypi.org/project/bicidata/",
    "project_urls": {
      "Homepage": "https://github.com/bicidata/bicidata"
    },
    "release_url": "https://pypi.org/project/bicidata/0.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "bicidata is a framework to work with the General Bikeshare Feed Specification (GBFS)",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8282733,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bd33ebaaa864bc746f9cbda2ef575b9d0e9e28e2a53eb0e9945f680399e66cb",
          "md5": "dfe0b5b06bba57172a81eeba55df8e1b",
          "sha256": "90850bc9d96a4b486f50475d4ec3dfc8b5dcf0dd5a061410ab5576fff8d205ff"
        },
        "downloads": -1,
        "filename": "bicidata-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "dfe0b5b06bba57172a81eeba55df8e1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3643,
        "upload_time": "2020-09-25T15:50:23",
        "upload_time_iso_8601": "2020-09-25T15:50:23.137308Z",
        "url": "https://files.pythonhosted.org/packages/2b/d3/3ebaaa864bc746f9cbda2ef575b9d0e9e28e2a53eb0e9945f680399e66cb/bicidata-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a28b49cfc3790439127f7a0d274de58f0e71f383618361c552802ca8e9f4058",
          "md5": "8e3588951988839ca67e44aa368e12d0",
          "sha256": "a8c7a210a68523de3b430b102ce99018f9a62415e2c9e76e44bfa70c8e47f6d1"
        },
        "downloads": -1,
        "filename": "bicidata-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8e3588951988839ca67e44aa368e12d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4879,
        "upload_time": "2020-09-27T12:07:05",
        "upload_time_iso_8601": "2020-09-27T12:07:05.090234Z",
        "url": "https://files.pythonhosted.org/packages/7a/28/b49cfc3790439127f7a0d274de58f0e71f383618361c552802ca8e9f4058/bicidata-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7a28b49cfc3790439127f7a0d274de58f0e71f383618361c552802ca8e9f4058",
        "md5": "8e3588951988839ca67e44aa368e12d0",
        "sha256": "a8c7a210a68523de3b430b102ce99018f9a62415e2c9e76e44bfa70c8e47f6d1"
      },
      "downloads": -1,
      "filename": "bicidata-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "8e3588951988839ca67e44aa368e12d0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4879,
      "upload_time": "2020-09-27T12:07:05",
      "upload_time_iso_8601": "2020-09-27T12:07:05.090234Z",
      "url": "https://files.pythonhosted.org/packages/7a/28/b49cfc3790439127f7a0d274de58f0e71f383618361c552802ca8e9f4058/bicidata-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}