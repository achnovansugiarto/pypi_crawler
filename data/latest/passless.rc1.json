{
  "info": {
    "author": "Wilhelm Shen",
    "author_email": "wilhelmshen@pyforce.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Internet",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "========\nPassless\n========\n\nIntroduction\n------------\n\nPassless is a toolkit for setting up a security layer to protect private\nservices. It based on Yingbo Gu's `Shadowproxy`__ project and comes with\ntwo components, a plugin of `Slowdown`_ server and a client.\n\nFor example, in most cases you have to run a ssh service at least. If you\nare `Slowdown`_ user, you can force users to access this ssh service only\nvia the working `Slowdown`_ server. And so on, all private services can be\nprotected under the `Slowdown`_ server.\n\n__ https://github.com/guyingbo/shadowproxy\n\n\nInstallation\n------------\n\nPassless are published on the `Python Package Index`__ , and can be\ninstalled with the following command.\n\n.. code-block:: console\n\n    $ pip install -U passless\n\nYou can also install Passless directly from a clone of the\n`Git repository`__ .\n\n.. code-block:: console\n\n    $ git clone https://github.com/wilhelmshen/passless\n    $ cd passless\n    $ pip install .\n\nor\n\n.. code-block:: console\n\n    $ pip install git+https://github.com/wilhelmshen/passless\n\n__ https://pypi.org/project/passless/\n__ https://github.com/wilhelmshen/passless\n\n\nServer\n------\n\n\nServer creation\n^^^^^^^^^^^^^^^\n\nFirst, you need to create a `Slowdown`_ server.\n\n.. code-block:: console\n\n    $ virtualenv --python=/usr/bin/python3 myserver\n    $ myserver/bin/slowdown --init\n    Initialize a project in /PATH/TO/myserver? [Y/n]: Y\n    Creating myserver/bin ... exists\n    Creating myserver/etc ... exists\n    Creating myserver/var ... done\n    Creating myserver/pkgs ... done\n    Creating myserver/var/log ... done\n    Creating myserver/bin/slowdown ... exists\n    Creating myserver/etc/slowdown.conf ... done\n    DONE! Completed all initialization steps.\n\n\nConfiguration\n^^^^^^^^^^^^^\n\nNext, edit the profile. The config file of the slowdown server called\n`slowdown.conf` is placed in the `etc` folder. Here's an example:\n\n.. code-block:: apacheconf\n\n    # URL Routing based on regular expression.\n    <routers>\n        <router ALL>\n\n            # A regular expression to match hosts\n            # Group name must be uppercased\n            #\n            pattern ^(?P<EXAMPLE>example\\.com)$$\n\n            <host EXAMPLE>\n\n                # A reqular expression to match PATH_INFO\n                #\n                pattern ^/passless(?P<PASSLESS>/.*)$$\n\n                <path PASSLESS>\n                    handler     passless\n                    cipher      aes-128-cfb\n                    password    PASSWORD\n\n                    # Bridge server (optional)\n                    #\n                    #via passless://CIPHER:PASSWD@BRIDGE.SERVER/HOST/PATH/\n\n                    # Ad block list (optional)\n                    #\n                    #adblk /PATH/TO/AD/BLOCK.conf\n\n                    # Connect directly to the server, if the connection\n                    # fails, auto switch to the bridge server specified\n                    # by the \"via\" configuration for transmission.\n                    # The default is \"yes\".\n                    #\n                    #auto_switch yes\n\n                    # Deny access to the local ip, the default is \"yes\"\n                    #\n                    #global_only yes\n\n                    #accesslog  $LOGS/access-%Y%m.log\n                    #errorlog   $LOGS/error-%Y%m.log\n                </path>\n            </host>\n\n            # More hosts ..\n            #\n            #<host HOSTNAME>...</host>\n\n        </router>\n    </routers>\n\n    <servers>\n        <http MY_HTTP_SERVER>\n            address  0.0.0.0:8080\n            router   ALL\n        </http>\n    </servers>\n\nStart server:\n\n.. code-block:: console\n\n    myserver/bin/slowdown -vv\n    2020-09-14 17:45:49 INFO slowdown/{__version__}\n    2020-09-14 17:45:49 INFO Serving HTTP on 0.0.0.0 port 8080 ...\n\nIn this case, Passless service is available on the host `example.com` and\nport `8080`.\n\nMore details are documented at `Slowdown`_ project.\n\n.. _Slowdown: http://slowdown.pyforce.com/\n\n\nClient\n------\n\nThe `passless` command can start the Passless client side server that\nsupport the `socks5` or `http` protocol.\n\n.. code-block:: console\n\n    usage: bin/passless [-h] [-u USER] [-v | -vv | -q] SERVERS\n\nExample:\n\n.. code-block:: console\n\n    sudo bin/passless -vv -u nobody \"socks://127.0.0.1:1080/?via=passless://aes-128-cfb:PASSWORD@example.com:8080/example.com:8080/passless/&auto_switch=no&global_only=no\" \"http://127.0.0.1:8118/?via=passless://aes-128-cfb:PASSWORD@example.com:8080/example.com:8080/passless/&adblk=my_ad_block.conf\"\n\nWith this socks/http server, you can access private services of the\nremote server that running the `Slowdown`_ server with the Passless plugin.\n\nAd block\n--------\n\nYou can specify an ad block list for servers and clients. The file of the ad block list is very simple, as shown below:\n\n.. code-block::\n\n    com.baidu.adscdn REJECT\n    com.google PROXY\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://passless.pyforce.com",
    "keywords": "gevent asynchronous socks",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "passless",
    "package_url": "https://pypi.org/project/passless/",
    "platform": "",
    "project_url": "https://pypi.org/project/passless/",
    "project_urls": {
      "Homepage": "http://passless.pyforce.com"
    },
    "release_url": "https://pypi.org/project/passless/0.0.1.dev1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A toolkit for setting up a security layer to protect private services",
    "version": "0.0.1.dev1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8182614,
  "releases": {
    "0.0.1.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9535ebffeee8089bf96cf8bd9816fdc1ed2599e4509ccec137e05b58fa828ef3",
          "md5": "154fed72c2765d58767fc6c168dd5ecf",
          "sha256": "9d55e75b81bad042bd077a028a75548c4bd9e2eb96735c63af85e3d86a0b9797"
        },
        "downloads": -1,
        "filename": "passless-0.0.1.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "154fed72c2765d58767fc6c168dd5ecf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18838,
        "upload_time": "2020-09-14T14:48:09",
        "upload_time_iso_8601": "2020-09-14T14:48:09.914298Z",
        "url": "https://files.pythonhosted.org/packages/95/35/ebffeee8089bf96cf8bd9816fdc1ed2599e4509ccec137e05b58fa828ef3/passless-0.0.1.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9535ebffeee8089bf96cf8bd9816fdc1ed2599e4509ccec137e05b58fa828ef3",
        "md5": "154fed72c2765d58767fc6c168dd5ecf",
        "sha256": "9d55e75b81bad042bd077a028a75548c4bd9e2eb96735c63af85e3d86a0b9797"
      },
      "downloads": -1,
      "filename": "passless-0.0.1.dev1.tar.gz",
      "has_sig": false,
      "md5_digest": "154fed72c2765d58767fc6c168dd5ecf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18838,
      "upload_time": "2020-09-14T14:48:09",
      "upload_time_iso_8601": "2020-09-14T14:48:09.914298Z",
      "url": "https://files.pythonhosted.org/packages/95/35/ebffeee8089bf96cf8bd9816fdc1ed2599e4509ccec137e05b58fa828ef3/passless-0.0.1.dev1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}