{
  "info": {
    "author": "Syize",
    "author_email": "syizeliu@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Cpywpa\n\n## Introduction\n\nCpywpa is another simple tool to control wpa_supplicant for Python. However, rather than using d-Bus, **it wrote with Cython so it can directly use OFFICIAL C interface.**\n\n## Installation\n\nFirst, make sure you have the latest pip\n\n```bash\npython3 -m pip install --upgrade pip\n```\n\nThen you can install Cpywpa with this command\n\n```bash\npython3 -m pip install Cpywpa\n```\n\nHere is the dependent packages and they will be installed during installation.\n\n| package name | version |\n| :----------: | :-----: |\n|  setuptools  |  None   |\n|    wheel     |  None   |\n|    Cython    |  None   |\n\n## How to use\n\n⚠ NOTE ⚠\n\n**While only root user can access wpa_supplicant interface, all codes below are running with sudo or by root user.**\n\n1. Get current network status\n\n```python\nfrom Cpywpa import NetworkManager\nfrom pprint import pprint\n\nmanager = NetworkManager()\npprint(manager.getStatus())\n```\n\n2. List known network\n```python\nfrom Cpywpa import NetworkManager\nfrom pprint import pprint\n\nmanager = NetworkManager()\npprint(manager.listNetwork())\n```\n3. Scan network around and get scan results\n\n```python\nfrom Cpywpa import NetworkManager\nfrom pprint import pprint\nfrom time import sleep\n\nmanager = NetworkManager()\n# you can use scan() to scan and get scan results\n# use scan_time to set sleep time\npprint(manager.scan(scan_time=8))\n# or use onlyScan() to scan and use scanResults() to get results\nmanager.onlyScan()\nsleep(10)\npprint(manager.scanResults())\n```\n\n3. Connect to a network\n\n```python\nfrom Cpywpa import NetworkManager\n\nmanager = NetworkManager()\n# connect to a known network\n# Syize is my wifi name\nmanager.connect('Syize')\n# connect to a new network\nmanager.connect('Syize', passwd='wifi-password')\n```\n\n4. Add a network but don't connect\n\n```python\nfrom Cpywpa import NetworkManager\n\nmanager = NetworkManager()\nmanager.addNetwork('Syize', 'wifi-password')\n```\n\n5. Delete a network\n\n```python\nfrom Cpywpa import NetworkManager\n\nmanager = NetworkManager()\nmanager.removeNetwork('Syize')\n```\n\n\n\nFor more information, please head to [GitHub](https://github.com/Syize/Cpywpa)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Cpywpa",
    "package_url": "https://pypi.org/project/Cpywpa/",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/Cpywpa/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/Cpywpa/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Cpywpa is another simple tools to control wpa_supplicant. It use Cython to interact with OFFICIAL C interface",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12650532,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "330fa0ff2866e59476efc0de619657f5900efef6a4e439341197e84fe3d9859f",
          "md5": "e2c65f1690bff61e0b130d715f3b3069",
          "sha256": "8a277bdba8c1066d01dd674e27cb31dcbd1fc72d8393e6241a8fee82fdcb0980"
        },
        "downloads": -1,
        "filename": "Cpywpa-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e2c65f1690bff61e0b130d715f3b3069",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 96896,
        "upload_time": "2022-01-19T06:40:04",
        "upload_time_iso_8601": "2022-01-19T06:40:04.793321Z",
        "url": "https://files.pythonhosted.org/packages/33/0f/a0ff2866e59476efc0de619657f5900efef6a4e439341197e84fe3d9859f/Cpywpa-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48e1fd11edfbb56cd77d435bad82a9d10e66d48694f4511bc56c856ff733bf7c",
          "md5": "8087b0ab5783fd54af09b619db3c1f78",
          "sha256": "be3e2a7d7ff275c41c2d22bb7d5503993bdfdde50bd0103a6d3dc48a01d123f2"
        },
        "downloads": -1,
        "filename": "Cpywpa-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8087b0ab5783fd54af09b619db3c1f78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 97108,
        "upload_time": "2022-01-22T04:00:08",
        "upload_time_iso_8601": "2022-01-22T04:00:08.730706Z",
        "url": "https://files.pythonhosted.org/packages/48/e1/fd11edfbb56cd77d435bad82a9d10e66d48694f4511bc56c856ff733bf7c/Cpywpa-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "48e1fd11edfbb56cd77d435bad82a9d10e66d48694f4511bc56c856ff733bf7c",
        "md5": "8087b0ab5783fd54af09b619db3c1f78",
        "sha256": "be3e2a7d7ff275c41c2d22bb7d5503993bdfdde50bd0103a6d3dc48a01d123f2"
      },
      "downloads": -1,
      "filename": "Cpywpa-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8087b0ab5783fd54af09b619db3c1f78",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 97108,
      "upload_time": "2022-01-22T04:00:08",
      "upload_time_iso_8601": "2022-01-22T04:00:08.730706Z",
      "url": "https://files.pythonhosted.org/packages/48/e1/fd11edfbb56cd77d435bad82a9d10e66d48694f4511bc56c856ff733bf7c/Cpywpa-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}