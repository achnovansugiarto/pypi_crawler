{
  "info": {
    "author": "20tab srl",
    "author_email": "info@20tab.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![Build Status](https://travis-ci.org/20tab/django-political-map.svg?branch=master)](https://travis-ci.org/20tab/django-political-map)\n\nDjango Political Map\n====================\n\nDjango application to store geolocalized places and organize them\naccording to political hierarchy.\n\nNote: this project doesn't require GeoDjango or Gis fields, you should save\ngeographical data in your own model in order to perform gis queries.\n\nFeatures:\n- store your geographic data in a single model\n- provide address and process it to automatically fill all geo informations\n- using the provided form you can choose the place on the map\n- and process automatically the location\n\nInstallation\n------------\nThis package looks stable but it needs more live testing.\nIf you want to try it in your project, you can pip install it:\n\n  - ```pip install django-political-map```\n\n  or via git:\n\n  - ```pip install git+https://github.com/20tab/django-political-map.git```\n  \n  - add ```politicalplaces``` in your INSTALLED_APPS\n  \n  - set mandatory parameters in your settings file:\n```python\n# BACKEND (googlemaps is the only available backend)\nPOLITICAL_MAP_BACKEND = 'googlemaps'\n# MAP LANGUAGE (en is the only available language)\nPOLITICAL_MAP_LANGUAGE_CODE = 'en'\n# GMAPS (gmaps key is mandatory)\nGOOGLE_API_KEY = \"xxxxxxxxxxxxxxxx\"\n```\n  \n  - run migrations to update your db **python manage.py migrate**\n  \n  - manage static files using:\n    - django **collectstatic** or  \n    - uwsgi **static-map = /static/politicalplaces/=%(lib)/politicalplaces/static/politicalplaces**\n    \n\nHow to\n------\nThere is one only entry point to the app, that is the **Placefield**.\nThis field is a Foreign Key to PoliticalPlace, so you should use it \nthis way:\n```python\nfrom django.db import models                                                \nfrom politicalplaces.fields import PlaceField\n\n\nclass MyLocation(models.Model):\n    place = PlaceField(\n        on_delete=models.SET_NULL,\n        null=True, blank=True)\n```\nPoliticalPlace and MapItem admin are available, but you should never add\nthese objects directly.\n\nUsing PoliticalPlace in the views\n---------------------------------\n```python\nfrom politicalplaces.models import PoliticalPlace\nfrom .models import MyLocation\n\n\nloc = MyLocation()\nloc.name = \"Test Location\"\nplace = PoliticalPlace.get_or_create_from_address(\n    address='via Luigi Gastinelli, Rome')\nloc.place = place\nloc.save()\n```\n\nRefresh Data (django command)\n-----------------------------\n```\n(django-political-map) 20tab:django-political-map gabbo$ python manage.py refresh_data --help\nusage: manage.py refresh_data [-h] [--version] [-v {0,1,2,3}]\n                              [--settings SETTINGS] [--pythonpath PYTHONPATH]\n                              [--traceback] [--no-color]\n                              [place_id [place_id ...]]\n\nRefresh map data calling the external api\n\npositional arguments:\n  place_id              The id list, separeted by space, of the involved\n                        PoliticalPlace objects.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n  -v {0,1,2,3}, --verbosity {0,1,2,3}\n                        Verbosity level; 0=minimal output, 1=normal output,\n                        2=verbose output, 3=very verbose output\n  --settings SETTINGS   The Python path to a settings module, e.g.\n                        \"myproject.settings.main\". If this isn't provided, the\n                        DJANGO_SETTINGS_MODULE environment variable will be\n                        used.\n  --pythonpath PYTHONPATH\n                        A directory to add to the Python path, e.g.\n                        \"/home/djangoprojects/myproject\".\n  --traceback           Raise on CommandError exceptions\n  --no-color            Don't colorize the command output.\n\n(django-political-map) 20tab:django-political-map gabbo$ python manage.py refresh_data 2\nRefresh data started.\nRefreshing data for PoliticalPlace: 2 - Brisbane QLD, Australia\nRefresh data completed successfully  for 1 items, 0 errors.\n\n(django-political-map) 20tab:django-political-map gabbo$ python manage.py refresh_data 2 3 4\nRefresh data started.\nRefreshing data for PoliticalPlace: 2 - Brisbane QLD, Australia\nRefreshing data for PoliticalPlace: 3 - Via Luigi Gastinelli, 118, 00132 Roma RM, Italy\nRefreshing data for PoliticalPlace: 4 - US-3, United States\nRefresh data completed successfully for 3 items, 0 errors.\n\n(django-political-map) 20tab:django-political-map gabbo$ python manage.py refresh_data 2 3 4 -v 0\nRefresh data started.\nRefresh data completed successfully for 3 items, 0 errors.\n\n(django-political-map) 20tab:django-political-map gabbo$ python manage.py refresh_data\nRefresh data started.\nRefreshing data for PoliticalPlace: 2 - Brisbane QLD, Australia\nRefreshing data for PoliticalPlace: 3 - Via Luigi Gastinelli, 118, 00132 Roma RM, Italy\n[...]\nRefreshing data for PoliticalPlace: 28 - Čerpadlová 572/5, Vysočany, 190 00 Praha-Praha 9, Czechia\nRefresh data completed successfully for 27 items, 0 errors.\n```\n\nJavascript Initialization\n--------------------------\nDjango Political Map has full support for admin change_form with\nsingle PlaceField, multiple PlaceField on the same model and\ninline models with PlaceField.\n\nThe default widget will work on your custom frontend too (just remember to\nuse {{forms.media}} in your template).\n\nThe library also supports django inline formsets via the `formset:added`\nevent if using `django.jQuery` (\"admin/js/vendor/jquery/jquery.js\", \"admin/js/jquery.init.js\"),\notherwise you can attach to your custom event the\n`politicalplaces.addNewWidget(widgetDOMElement, formsetName)` handler. \nExample:\n```\ndocument.querySelector('button.add-form').addEventListener('click', function() {\n  var formsetName = 'the_name_of_the_formset';\n  var widgetDOMElement = document.querySelector('.widget');\n  politicalplaces.addNewWidget(widgetDOMElement, formsetName);\n});\n```\n\n\nGMAPS quota limit\n-----------------\nUsing googlemaps as backend, remember there's a quota limit\nas described here: https://developers.google.com/maps/documentation/javascript/usage\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/20tab/django-political-map",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-political-map",
    "package_url": "https://pypi.org/project/django-political-map/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-political-map/",
    "project_urls": {
      "Bug Tracker": "https://github.com/20tab/django-political-map/issues",
      "Homepage": "https://github.com/20tab/django-political-map"
    },
    "release_url": "https://pypi.org/project/django-political-map/1.2.2/",
    "requires_dist": [
      "googlemaps (==3.0.2)"
    ],
    "requires_python": ">=2.7",
    "summary": "Django application to store geolocalized places and organize them according to political hierarchy.",
    "version": "1.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13451043,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bff3f7a1bf402e45bd999790ffe4091353a5d0ccd8f52d7f913d3114537e0f8",
          "md5": "d366ad6bdb0e5c9a83770648f11730b8",
          "sha256": "a3f477c8ad5a680ecd5de55b8840fa697a710b98b5a4459aa05075b0677f7f7d"
        },
        "downloads": -1,
        "filename": "django-political-map-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d366ad6bdb0e5c9a83770648f11730b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 53935,
        "upload_time": "2017-11-09T15:31:27",
        "upload_time_iso_8601": "2017-11-09T15:31:27.704270Z",
        "url": "https://files.pythonhosted.org/packages/1b/ff/3f7a1bf402e45bd999790ffe4091353a5d0ccd8f52d7f913d3114537e0f8/django-political-map-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b923beb116c30e8fc79e2a0e69c6305518aacf0272279cd9a7772f61e91e614f",
          "md5": "81b1f3e3b8b105dec1fed9674682a78b",
          "sha256": "7db6e706aa1adc696565d13c1d378e724a2dbf45452e5de13ece10404bef685b"
        },
        "downloads": -1,
        "filename": "django-political-map-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "81b1f3e3b8b105dec1fed9674682a78b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 53845,
        "upload_time": "2019-01-03T21:49:57",
        "upload_time_iso_8601": "2019-01-03T21:49:57.965977Z",
        "url": "https://files.pythonhosted.org/packages/b9/23/beb116c30e8fc79e2a0e69c6305518aacf0272279cd9a7772f61e91e614f/django-political-map-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58e794f6e00d0aa18b02b8e39340b09556224506badacc80078d04ae64abd113",
          "md5": "e8d92d277070bd022853f18c057dc3df",
          "sha256": "66791a897ad68916fe121be5d45dc50dba7f5045fe861c9216d60118ff07681d"
        },
        "downloads": -1,
        "filename": "django_political_map-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e8d92d277070bd022853f18c057dc3df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 27963,
        "upload_time": "2022-04-07T14:41:25",
        "upload_time_iso_8601": "2022-04-07T14:41:25.837183Z",
        "url": "https://files.pythonhosted.org/packages/58/e7/94f6e00d0aa18b02b8e39340b09556224506badacc80078d04ae64abd113/django_political_map-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6a0f43c6f198e0187cdb87d4d7fb4e0e53d08fbdc607cf2a492637e893d8751",
          "md5": "dae86af6fb8d9a2890de3654c274b2a6",
          "sha256": "bf6ed80d778394db752a64a88276754583d2a6865cdf883946b9991e2ac4bd19"
        },
        "downloads": -1,
        "filename": "django-political-map-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dae86af6fb8d9a2890de3654c274b2a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 19679,
        "upload_time": "2022-04-07T14:41:27",
        "upload_time_iso_8601": "2022-04-07T14:41:27.912517Z",
        "url": "https://files.pythonhosted.org/packages/a6/a0/f43c6f198e0187cdb87d4d7fb4e0e53d08fbdc607cf2a492637e893d8751/django-political-map-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f53c016f8d3edf72409eab080dca461964aab907bca9427556ee3b92df6fddf",
          "md5": "0707cf31fae6cbc561f57b5c987d1711",
          "sha256": "473299b08b0504180ede1e74bc4d7e56ede8e02fc5e4b1384383ee6d61ec4a99"
        },
        "downloads": -1,
        "filename": "django_political_map-1.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0707cf31fae6cbc561f57b5c987d1711",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 59080,
        "upload_time": "2022-04-08T07:41:46",
        "upload_time_iso_8601": "2022-04-08T07:41:46.944364Z",
        "url": "https://files.pythonhosted.org/packages/2f/53/c016f8d3edf72409eab080dca461964aab907bca9427556ee3b92df6fddf/django_political_map-1.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55d8f096a5fa639bc43ba553a51ba5e7077893b394b001ecb7f9384481e83b2a",
          "md5": "a01aa96c1f6dd1a9550f6460034bf60b",
          "sha256": "83280b19275a1e4396380342386ff0a5cd68d0711a22350ff463832dae48208f"
        },
        "downloads": -1,
        "filename": "django-political-map-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a01aa96c1f6dd1a9550f6460034bf60b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 51530,
        "upload_time": "2022-04-08T07:41:49",
        "upload_time_iso_8601": "2022-04-08T07:41:49.453501Z",
        "url": "https://files.pythonhosted.org/packages/55/d8/f096a5fa639bc43ba553a51ba5e7077893b394b001ecb7f9384481e83b2a/django-political-map-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f53c016f8d3edf72409eab080dca461964aab907bca9427556ee3b92df6fddf",
        "md5": "0707cf31fae6cbc561f57b5c987d1711",
        "sha256": "473299b08b0504180ede1e74bc4d7e56ede8e02fc5e4b1384383ee6d61ec4a99"
      },
      "downloads": -1,
      "filename": "django_political_map-1.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0707cf31fae6cbc561f57b5c987d1711",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.7",
      "size": 59080,
      "upload_time": "2022-04-08T07:41:46",
      "upload_time_iso_8601": "2022-04-08T07:41:46.944364Z",
      "url": "https://files.pythonhosted.org/packages/2f/53/c016f8d3edf72409eab080dca461964aab907bca9427556ee3b92df6fddf/django_political_map-1.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "55d8f096a5fa639bc43ba553a51ba5e7077893b394b001ecb7f9384481e83b2a",
        "md5": "a01aa96c1f6dd1a9550f6460034bf60b",
        "sha256": "83280b19275a1e4396380342386ff0a5cd68d0711a22350ff463832dae48208f"
      },
      "downloads": -1,
      "filename": "django-political-map-1.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a01aa96c1f6dd1a9550f6460034bf60b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 51530,
      "upload_time": "2022-04-08T07:41:49",
      "upload_time_iso_8601": "2022-04-08T07:41:49.453501Z",
      "url": "https://files.pythonhosted.org/packages/55/d8/f096a5fa639bc43ba553a51ba5e7077893b394b001ecb7f9384481e83b2a/django-political-map-1.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}