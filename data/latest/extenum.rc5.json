{
  "info": {
    "author": "Tetsuya Morimoto",
    "author_email": "tetsuya.morimoto@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# extenum\n\n[![Build Status](https://travis-ci.org/t2y/extenum.svg?branch=master)](https://travis-ci.org/t2y/extenum/)\n[![Latest Version](https://img.shields.io/pypi/v/extenum.svg)](https://pypi.python.org/pypi/extenum/)\n[![Downloads](https://img.shields.io/pypi/dm/extenum.svg)](https://pypi.python.org/pypi/extenum/)\n[![License](https://img.shields.io/pypi/l/extenum.svg)](https://pypi.python.org/pypi/extenum/)\n\n\nExtended Enum classes for Python 3 enum module.\n\nThe [enum](https://docs.python.org/3/library/enum.html) module was added\nsince 3.4. That's good enough for simple use.\nThe extenum is strongly inspired by Java Enum style described in\n[Effective Java](http://en.wikipedia.org/wiki/Joshua_Bloch#Effective_Java)\nand provides additional feature.\n\n\n## How to install\n\n```bash\n$ pip install extenum\n```\n\n## ConstantSpecificEnum\n\n*ConstantSpecificEnum* class is inherited the standard Enum class and\nprovides the feature of constant specific method and function overloading\nfor Enum members.\n\nRead [Effective Java](http://en.wikipedia.org/wiki/Joshua_Bloch#Effective_Java)\nfor more detail.\n\n\n### Constant specific method implementation\n\nLet's try to create Enum class with *ConstantSpecificEnum*.\nTo use a method as function overloading, add *@overload(CONSTANT)* decorator\non that method. The *overload* decorator is implicitly defined as well as\nyou'll see later in *ImplicitEnum* section.\n\n```python\n>>> from extenum import ConstantSpecificEnum\n>>> class Operation(ConstantSpecificEnum):\n...     PLUS = '+'\n...     MINUS = '-'\n...     TIMES = '*'\n...     DIVIDE = '/'\n...\n...     @overload(PLUS)\n...     def apply(self, x, y):\n...         return x + y\n...\n...     @overload(MINUS)\n...     def apply(self, x, y):\n...         return x - y\n...\n...     @overload(TIMES)\n...     def apply(self, x, y):\n...         return x * y\n...\n...     @overload(DIVIDE)\n...     def apply(self, x, y):\n...         return x / y\n...\n>>> for name, const in Operation.__members__.items():\n...     print(name, ':', const.apply(2, 4))\n...\nPLUS : 6\nMINUS : -2\nTIMES : 8\nDIVIDE : 0.5\n\n```\n\n\n### Strategy enum pattern\n\nThe strategy enum is more complex pattern based on constant specific method.\n\n```python\n>>> from extenum import ConstantSpecificEnum\n>>> class PayrollDay(ConstantSpecificEnum):\n...\n...     class PayType(ConstantSpecificEnum):\n...         WEEKDAY = 1\n...         WEEKEND = 2\n...\n...         @overload(WEEKDAY)\n...         def overtime_pay(self, hours, pay_rate):\n...             return 0 if hours <= 8 else (hours - 8) * pay_rate / 2\n...\n...         @overload(WEEKEND)\n...         def overtime_pay(self, hours, pay_rate):\n...             return hours * pay_rate / 2\n...\n...         def pay(self, hours_worked, pay_rate):\n...             base_pay = hours_worked * pay_rate\n...             overtime_pay = self.overtime_pay(hours_worked, pay_rate)\n...             return base_pay + overtime_pay\n...\n...     MONDAY = PayType.WEEKDAY\n...     TUESDAY = PayType.WEEKDAY\n...     WEDNESDAY = PayType.WEEKDAY\n...     THURSDAY = PayType.WEEKDAY\n...     FRIDAY = PayType.WEEKDAY\n...     SATURDAY = PayType.WEEKEND\n...     SUNDAY = PayType.WEEKEND\n...\n...     def pay(self, hours_worked, pay_rate):\n...         return self.value.pay(hours_worked, pay_rate)\n...\n>>> PayrollDay.MONDAY.pay(10, 1000.0)\n11000.0\n>>> PayrollDay.WEDNESDAY.pay(8, 1000.0)\n8000.0\n>>> PayrollDay.SATURDAY.pay(10, 1000.0)\n15000.0\n>>> PayrollDay.SUNDAY.pay(8, 1000.0)\n12000.0\n\n```\n\n\n## ImplicitEnum\n\nBefore describing what *ImplicitEnum* class is, read good article written by\nNick Coghlan as below.\n\n* [Support for alternate declaration syntaxes](http://python-notes.curiousefficiency.org/en/latest/python3/enum_creation.html#support-for-alternate-declaration-syntaxes)\n\nOK. I guess you've already understood why the standard enum module haven't\nsupport implicit declaration syntax.\n\nPut aside its needs for now, Nick indicates how to implement *ImplicitEnum*.\nSo, let's try to implement it experimentally using the special method,\n`__missing__` in defaultdict and `__prepare__` in Metaclass.\n\n```python\n>>> from extenum import ImplicitEnum\n>>> class Color(ImplicitEnum):\n...     RED\n...     GREEN\n...     BLUE\n...\n>>> for name, const in Color.__members__.items():\n...     print(name, ':', const.value)\n...\nRED : 1\nGREEN : 2\nBLUE : 3\n\n```\n\nIt works well if some constants are explicit and the rest are implicit.\n\n```python\n>>> class Numbers(ImplicitEnum):\n...     ONE = 1\n...     TWO = 2\n...     THREE\n...\n>>> Numbers.THREE.value\n3\n\n```\n\nHowever, it depends on the declaration order.\n\n```python\n>>> class DuplicatedValues(ImplicitEnum):\n...     ONE\n...     TWO = 1\n...     THREE = 1\n...\n>>> DuplicatedValues.ONE.value\n1\n>>> DuplicatedValues.TWO.value\n1\n>>> DuplicatedValues.THREE.value\n1\n\n```\n\n\n## EnumSet\n\nEnumSet is one of the specialized implementation of Set interface for enumeration type,\ninspired by [Java EnumSet](http://docs.oracle.com/javase/8/docs/api/java/util/EnumSet.html).\n\nIt provides utility functions to handle multiple Enum constants.\n\n```python\n>>> from enum import Enum\n>>> from extenum import EnumSet\n>>> class Mode(Enum):\n...     READ = 4\n...     WRITE = 2\n...     EXECUTE = 1\n...\n...     @classmethod\n...     def set_of(cls, values):\n...         opts = EnumSet.none_of(cls)\n...         for value in values:\n...             opts.add(cls(value))\n...         return opts\n...\n>>> Mode.set_of([4, 2])  # doctest: +SKIP\nEnumSet({<Mode.READ: 4>, <Mode.WRITE: 2>})\n```\n\nTo create EnumSet with all Enum members:\n\n```python\n>>> EnumSet.all_of(Mode)  # doctest: +SKIP\nEnumSet({<Mode.READ: 4>, <Mode.WRITE: 2>, <Mode.EXECUTE: 1>})\n```\n\nOr, to create EnumSet with arbitrary Enum members:\n\n```python\n>>> enumset = EnumSet.of(Mode.READ, Mode.EXECUTE)\n>>> enumset  # doctest: +SKIP\nEnumSet({<Mode.READ: 4>, <Mode.EXECUTE: 1>})\n>>> enumset.update(EnumSet.of(Mode.READ, Mode.WRITE))\n>>> enumset  # doctest: +SKIP\nEnumSet({<Mode.READ: 4>, <Mode.WRITE: 2>, <Mode.EXECUTE: 1>})\n```\n\n## ChangeLog\n\n### 0.8.1 (2020-11-07)\n\n* change to use pytest-flake8 for testing\n* support python 3.6+\n\n### 0.8.0 (2015-03-15)\n\n* add EnumSet\n\n### 0.7.0 (2015-03-06)\n\n* remove RegisterFactory for simplicity\n\n### 0.6.0 (2015-03-05)\n\n* add ImplicitEnum\n\n### 0.5.0 (2015-03-01)\n\n* first release",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/t2y/extenum",
    "keywords": "enum",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "extenum",
    "package_url": "https://pypi.org/project/extenum/",
    "platform": "unix",
    "project_url": "https://pypi.org/project/extenum/",
    "project_urls": {
      "Homepage": "https://github.com/t2y/extenum"
    },
    "release_url": "https://pypi.org/project/extenum/0.8.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Extended Enum classes for the Python 3 enum module",
    "version": "0.8.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8602078,
  "releases": {
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8e41754287788003f43402c56b8f00c5cc4f93091194b539d660dd88262d08a",
          "md5": "f29869b20dc74777e733002bc6bbd74c",
          "sha256": "4d4233dbcd33817e53cad7101a6100953b31e831116cf65b890977c506f631b4"
        },
        "downloads": -1,
        "filename": "extenum-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f29869b20dc74777e733002bc6bbd74c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9348,
        "upload_time": "2015-02-28T16:50:03",
        "upload_time_iso_8601": "2015-02-28T16:50:03.894577Z",
        "url": "https://files.pythonhosted.org/packages/f8/e4/1754287788003f43402c56b8f00c5cc4f93091194b539d660dd88262d08a/extenum-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cef5557735c0298e0ce06b0b3acb4e3ddbe8eca56d13bf6415bdbcc7ec64898d",
          "md5": "f771b1cb1d5d2d1e97016fedfc766718",
          "sha256": "41372ccb72a77b58988373f17911b6fbe7a023124da1c69bacfc252e0c12c6ed"
        },
        "downloads": -1,
        "filename": "extenum-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f771b1cb1d5d2d1e97016fedfc766718",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11022,
        "upload_time": "2015-03-04T22:26:14",
        "upload_time_iso_8601": "2015-03-04T22:26:14.437703Z",
        "url": "https://files.pythonhosted.org/packages/ce/f5/557735c0298e0ce06b0b3acb4e3ddbe8eca56d13bf6415bdbcc7ec64898d/extenum-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e64422425b2e4cfc90a154b620ddefadf39e49b9398339e021172cdfa9c4437",
          "md5": "92add3c1e947cfb05aa112430c2f0a5e",
          "sha256": "28c9014bacfa95011a2a231a7f4998cebdd51f353dff3a61dd28739f0faac900"
        },
        "downloads": -1,
        "filename": "extenum-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "92add3c1e947cfb05aa112430c2f0a5e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11155,
        "upload_time": "2015-03-05T17:36:20",
        "upload_time_iso_8601": "2015-03-05T17:36:20.629755Z",
        "url": "https://files.pythonhosted.org/packages/3e/64/422425b2e4cfc90a154b620ddefadf39e49b9398339e021172cdfa9c4437/extenum-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6025792b693119e08b09e8b502eb22e774646adfe49d51a7f3381f34d6cdcd37",
          "md5": "bd2e56d98d0e46f44701efd04bdda6f8",
          "sha256": "020dbc2273cf9f4d53ef730bf6c990870be58ba68428d17ad3a98008863e46c7"
        },
        "downloads": -1,
        "filename": "extenum-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bd2e56d98d0e46f44701efd04bdda6f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13052,
        "upload_time": "2015-03-15T01:16:38",
        "upload_time_iso_8601": "2015-03-15T01:16:38.091618Z",
        "url": "https://files.pythonhosted.org/packages/60/25/792b693119e08b09e8b502eb22e774646adfe49d51a7f3381f34d6cdcd37/extenum-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7d7cc3515ce28502d118b722637e4553feca553584e622aaaf0747ed97ebac8",
          "md5": "946fb4e6ee6e977ed9f31ded880136c4",
          "sha256": "28aab227a8975543a18e2dbdef851ad5ea98a0c7dd4656cbb492f4d361498ed0"
        },
        "downloads": -1,
        "filename": "extenum-0.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "946fb4e6ee6e977ed9f31ded880136c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14476,
        "upload_time": "2020-11-07T06:06:01",
        "upload_time_iso_8601": "2020-11-07T06:06:01.747649Z",
        "url": "https://files.pythonhosted.org/packages/e7/d7/cc3515ce28502d118b722637e4553feca553584e622aaaf0747ed97ebac8/extenum-0.8.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e7d7cc3515ce28502d118b722637e4553feca553584e622aaaf0747ed97ebac8",
        "md5": "946fb4e6ee6e977ed9f31ded880136c4",
        "sha256": "28aab227a8975543a18e2dbdef851ad5ea98a0c7dd4656cbb492f4d361498ed0"
      },
      "downloads": -1,
      "filename": "extenum-0.8.1.tar.gz",
      "has_sig": false,
      "md5_digest": "946fb4e6ee6e977ed9f31ded880136c4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14476,
      "upload_time": "2020-11-07T06:06:01",
      "upload_time_iso_8601": "2020-11-07T06:06:01.747649Z",
      "url": "https://files.pythonhosted.org/packages/e7/d7/cc3515ce28502d118b722637e4553feca553584e622aaaf0747ed97ebac8/extenum-0.8.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}