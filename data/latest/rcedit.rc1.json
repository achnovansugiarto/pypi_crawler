{
  "info": {
    "author": "Thomas Grill",
    "author_email": "gr@grrrr.org",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "rcedit â€“ Programmatic access to Research Catalogue web interface\n================================================================\n\nImport editor class from rcedit module using\n```\nfrom rcedit import RCEdit\n```\n\nThe `RCEdit` class provides access to most of the features of a Research catalogue exposition.\n\nExample:\n```\n# create RCEdit instance with exposition ID as argument\nrc = RCEdit(1234567)\n# log in using RC credentials\nrc.login(username='my@email.com', password='goodpassword')\n\n# list all pages in exposition (weaves in RC jargon)\npages = rc.page_list()\nprint(\"Pages:\", pages)\n# will print a dict of {page_id: page_name, ...}\n\n# add new page (aka weave) to exposition\n# page_id = rc.page_add(page_name, description='all about my page')\n\n# remove page\n# rc.page_remove(page_id)\n\n# list all media sets (shared among expositions)\nmediasets = rc.mediaset_list()\nprint(\"Media sets:\", mediasets)\n# will print a dict of {mediaset_id: mediaset_name, ...}\n\n# add media set\nmediaset_id = rc.mediaset_add(mediaset_name, mediaset_genre, authors, copyright)\n\n# remove media set (and contained media items!)\n# will only work if media items are not used in an exposition\nrc.mediaset_remove(mediaset_id)\n\n# list media\n# if mediaset_id is None (or omitted): list simple media (in an exposition)\n# if mediaset_id is given: list media contained in a media set\nmedia = rc.media_list(mediaset_id)\nprint(f\"Media in set {mediaset_id}:\", media)\n# will print a dict of {media_id: (media_type, media_name), ...}\n\n# add media (without actual data contents)\n# if mediaset_id is None (or omitted): add to simple media\n# if mediaset_id is given: add to media set\nmedia_id = rc.media_add(name, copyrightholder, media_type, license, mediaset_id)\n\n# upload media contents\nrc.media_upload(media_id, filename)\n\n# remove media\n# if mediaset_id is None (or omitted): remove form simple media\n# if mediaset_id is given: remove from media set\n# will only work if media item is not used in an exposition\nrc.media_remove(self, media_id, mediaset_id)\n\n# list items on a page\nitems = rc.item_list(page_id)\nprint(f\"Items on page {page_id}:\", items)\n# will print a dict of {item_id: (item_type, item_name), ...}\n\n# add media item to a page \n# 'tool' refers to the media type: this could be deduced from the media item (but it is slow)\nitem_id = rc.item_add(page_id, media_id, x, y, w, h, tool)\n\n# remove item from a page\nrc.item_remove(item_id)\n\n# get item parameters\nitem = rc.item_get(item_id)\n# will print a tuple\n# (item_type, {\n#\t'common': {'title', title}},\n#\t'style': {'left', x}, {'top', y}, {'width', w}, {'height', h}, ...},\n#\t'options': { ... }\n#\t})\n# options are specific to the item type\n\n# set item parameters\n# the key word arguments can be\n# common = {'title': title},\n# style = {...},\n# options = {...},\nrc.item_set(item_id, **kwargs)\n\n# fast item update (only positioning)\n# either parameter can be omitted\nrc.item_update(item_id, x, y, w, h, r)\n\n# lock/unlock item\n# lock if 'lock' is nonzero, else unlock\nrc.item_lock(item_id, lock)\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/grrrr/rcedit",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rcedit",
    "package_url": "https://pypi.org/project/rcedit/",
    "platform": "",
    "project_url": "https://pypi.org/project/rcedit/",
    "project_urls": {
      "Bug Tracker": "https://github.com/grrrr/rcedit/issues",
      "Homepage": "https://github.com/grrrr/rcedit"
    },
    "release_url": "https://pypi.org/project/rcedit/0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Programmatic access to Research Catalogue web interface",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11677350,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a24944d40e9da61fd76974212884a0c2e65d2d26553f308777309c3dd5946f5",
          "md5": "28aadf36983ff1fbf76c7268d706a657",
          "sha256": "a869236677ff9a85516bea59d92ca7a714f95aa68ef660a9a6501f8af5147bc4"
        },
        "downloads": -1,
        "filename": "rcedit-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "28aadf36983ff1fbf76c7268d706a657",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18855,
        "upload_time": "2021-10-09T22:25:24",
        "upload_time_iso_8601": "2021-10-09T22:25:24.828786Z",
        "url": "https://files.pythonhosted.org/packages/8a/24/944d40e9da61fd76974212884a0c2e65d2d26553f308777309c3dd5946f5/rcedit-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74f31df1d1e90d485d9c993132620f4b8e93f3d012ccf185f457415980772973",
          "md5": "87dd893948ec5a0e86c402e1233df0f9",
          "sha256": "4b701ecbf52a3643bdddda2f9e10c4112c7099dd668b98f71ebf25f23bef37c7"
        },
        "downloads": -1,
        "filename": "rcedit-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "87dd893948ec5a0e86c402e1233df0f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18486,
        "upload_time": "2021-10-09T22:25:27",
        "upload_time_iso_8601": "2021-10-09T22:25:27.032384Z",
        "url": "https://files.pythonhosted.org/packages/74/f3/1df1d1e90d485d9c993132620f4b8e93f3d012ccf185f457415980772973/rcedit-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a24944d40e9da61fd76974212884a0c2e65d2d26553f308777309c3dd5946f5",
        "md5": "28aadf36983ff1fbf76c7268d706a657",
        "sha256": "a869236677ff9a85516bea59d92ca7a714f95aa68ef660a9a6501f8af5147bc4"
      },
      "downloads": -1,
      "filename": "rcedit-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "28aadf36983ff1fbf76c7268d706a657",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 18855,
      "upload_time": "2021-10-09T22:25:24",
      "upload_time_iso_8601": "2021-10-09T22:25:24.828786Z",
      "url": "https://files.pythonhosted.org/packages/8a/24/944d40e9da61fd76974212884a0c2e65d2d26553f308777309c3dd5946f5/rcedit-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "74f31df1d1e90d485d9c993132620f4b8e93f3d012ccf185f457415980772973",
        "md5": "87dd893948ec5a0e86c402e1233df0f9",
        "sha256": "4b701ecbf52a3643bdddda2f9e10c4112c7099dd668b98f71ebf25f23bef37c7"
      },
      "downloads": -1,
      "filename": "rcedit-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "87dd893948ec5a0e86c402e1233df0f9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 18486,
      "upload_time": "2021-10-09T22:25:27",
      "upload_time_iso_8601": "2021-10-09T22:25:27.032384Z",
      "url": "https://files.pythonhosted.org/packages/74/f3/1df1d1e90d485d9c993132620f4b8e93f3d012ccf185f457415980772973/rcedit-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}