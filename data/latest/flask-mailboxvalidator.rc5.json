{
  "info": {
    "author": "MailboxValidator.com",
    "author_email": "support@mailboxvalidator.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "MailboxValidator Flask Python Module\n==============================\n\nThis Flask Python module enables user to easily validate if an email address is valid, a type of disposable email or free email.\n\nThis module can be useful in many types of projects, for example\n\n - to validate an user's email during sign up\n - to clean your mailing list prior to email sending\n - to perform fraud check\n - and so on\n\n\n\nInstallation\n============\n\nTo install this module type the following:\n\n\tpip install flask_MailboxValidator\n\n\n\nDependencies\n============\n\nAn API key is required for this module to function. Go to https://www.mailboxvalidator.com/plans#api to sign up for FREE API plan and you'll be given an API key.\n\nIn order to use this module to validate email from form, WTForms and Flask-WTF need to be installed. Also, nose2 need to be installed in order to run the test file.\n\n\n\nFunctions\n=========\n\n## SingleValidation (api_key)\n\nCreates a new instance of the MailboxValidator object with the API key.\n\n## ValidateEmail (email_address)\n\nPerforms email validation on the supplied email address.\n\n### Return Fields\n\n| Field Name             | Description                                                  |\n| ---------------------- | ------------------------------------------------------------ |\n| email_address          | The input email address.                                     |\n| domain                 | The domain of the email address.                             |\n| is_free                | Whether the email address is from a free email provider like Gmail or Hotmail. Return values: True, False |\n| is_syntax              | Whether the email address is syntactically correct. Return values: True, False |\n| is_domain              | Whether the email address has a valid MX record in its DNS entries. Return values: True, False, -&nbsp;&nbsp;&nbsp;(- means not applicable) |\n| is_smtp                | Whether the mail servers specified in the MX records are responding to connections. Return values: True, False, -&nbsp;&nbsp;&nbsp;(- means not applicable) |\n| is_verified            | Whether the mail server confirms that the email address actually exist. Return values: True, False, -&nbsp;&nbsp;&nbsp;(- means not applicable) |\n| is_server_down         | Whether the mail server is currently down or unresponsive. Return values: True, False, -&nbsp;&nbsp;&nbsp;(- means not applicable) |\n| is_greylisted          | Whether the mail server employs greylisting where an email has to be sent a second time at a later time. Return values: True, False, -&nbsp;&nbsp;&nbsp;(- means not applicable) |\n| is_disposable          | Whether the email address is a temporary one from a disposable email provider. Return values: True, False, -&nbsp;&nbsp;&nbsp;(- means not applicable) |\n| is_suppressed          | Whether the email address is in our blacklist. Return values: True, False, -&nbsp;&nbsp;&nbsp;(- means not applicable) |\n| is_role                | Whether the email address is a role-based email address like admin@example.net or webmaster@example.net. Return values: True, False, -&nbsp;&nbsp;&nbsp;(- means not applicable) |\n| is_high_risk           | Whether the email address contains high risk keywords. Return values: True, False, -&nbsp;&nbsp;&nbsp;(- means not applicable) |\n| is_catchall            | Whether the email address is a catch-all address. Return values: True, False, Unknown, -&nbsp;&nbsp;&nbsp;(- means not applicable) |\n| mailboxvalidator_score | Email address reputation score. Score > 0.70 means good; score > 0.40 means fair; score <= 0.40 means poor. |\n| time_taken             | The time taken to get the results in seconds.                |\n| status                 | Whether our system think the email address is valid based on all the previous fields. Return values: True, False |\n| credits_available      | The number of credits left to perform validations.           |\n| error_code             | The error code if there is any error. See error table in the below section. |\n| error_message          | The error message if there is any error. See error table in the below section. |\n\n## DisposableEmail (email_address)\n\nCheck if the supplied email address is from a disposable email provider.\n\n### Return Fields\n\n| Field Name        | Description                                                  |\n| ----------------- | ------------------------------------------------------------ |\n| email_address     | The input email address.                                     |\n| is_disposable     | Whether the email address is a temporary one from a disposable email provider. Return values: True, False |\n| credits_available | The number of credits left to perform validations.           |\n| error_code        | The error code if there is any error. See error table in the below section. |\n| error_message     | The error message if there is any error. See error table in the below section. |\n\n## FreeEmail (email_address)\n\nCheck if the supplied email address is from a free email provider.\n\n### Return Fields\n\n| Field Name        | Description                                                  |\n| ----------------- | ------------------------------------------------------------ |\n| email_address     | The input email address.                                     |\n| is_free           | Whether the email address is from a free email provider like Gmail or Hotmail. Return values: True, False |\n| credits_available | The number of credits left to perform validations.           |\n| error_code        | The error code if there is any error. See error table in the below section. |\n| error_message     | The error message if there is any error. See error table below. |\n\n\n\n# Usage for validate email from form\n\n*Note: WTForms and Flask-WTF must be installed before using this features.*\n\nThis Flask Python module had three different validator for different uses: EmailValidation for validating email address by all parameters, DisposableEmailValidation for validating disposable email address, and FreeEmailValidation for validating free email address.\n\n1. Import the validator class from the package. For example: `from flask_MailboxValidator.SingleValidation import EmailValidation`\n2. Call the validator in validator array along with your API key. For example: `email = TextField('Email:', validators=[validators.required(), EmailValidation(apikey='Your_API_Key')])`\n\n\n\nSample Codes\n============\n\n## Validate email\n\n```python\nimport flask_MailboxValidator\nfrom flask import Flask\nfrom flask import jsonify\n\napp = Flask(__name__)\n\nmbv = flask_MailboxValidator.SingleValidation('PASTE_API_KEY_HERE')\nresults = mbv.ValidateEmail('example@example.com')\n\n@app.route('/')\ndef display_result():\n\tif results is None:\n\t\treturn(\"Error connecting to API.\\n\")\n\telif results['error_code'] == '':\n\t\treturn (jsonify(results))\n\telse:\n\t\treturn('error_message = ' + results['error_message'] + \"\\n\")\n```\n\n\nCheck if an email is from a disposable email provider\n-------------------------------------------------------------------\n\n```python\nimport flask_MailboxValidator\nfrom flask import Flask\nfrom flask import jsonify\n\napp = Flask(__name__)\n\nmbv = flask_MailboxValidator.SingleValidation('PASTE_API_KEY_HERE')\nresults = mbv.DisposableEmail('example@example.com')\n\n@app.route('/')\ndef display_result():\n\tif results is None:\n\t\treturn(\"Error connecting to API.\\n\")\n\telif results['error_code'] == '':\n\t\treturn (jsonify(results))\n\telse:\n\t\treturn('error_message = ' + results['error_message'] + \"\\n\")\n```\n\n\nCheck if an email is from a free email provider\n------------------------------------------------------------\n\n```python\nimport flask_MailboxValidator\nfrom flask import Flask\nfrom flask import jsonify\n\napp = Flask(__name__)\n\nmbv = flask_MailboxValidator.SingleValidation('PASTE_API_KEY_HERE')\nresults = mbv.FreeEmail('example@example.com')\n\n@app.route('/')\ndef display_result():\n\tif results is None:\n\t\treturn(\"Error connecting to API.\\n\")\n\telif results['error_code'] == '':\n\t\treturn (jsonify(results))\n\telse:\n\t\treturn('error_message = ' + results['error_message'] + \"\\n\")\n```\n\n\n\n# Test\n\nTo run the test file, you will first need to replace the 'PASTE_API_KEY_HERE' with your API key in the test file(Located at test directory). After that, run this command in terminal: `python setup.py test`\n\n\n\n\nErrors\n======\n\n| error_code | error_message |\n| ---------- | ------------- |\n| 100 | Missing parameter. |\n| 101 | API key not found. |\n| 102 | API key disabled. |\n| 103 | API key expired. |\n| 104 | Insufficient credits. |\n| 105 | Unknown error. |\n\nCopyright\n=========\n\nCopyright (C) 2018-2020 by MailboxValidator.com, support@mailboxvalidator.com\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MailboxValidator/Flask_MailboxValidator",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flask-MailboxValidator",
    "package_url": "https://pypi.org/project/flask-MailboxValidator/",
    "platform": null,
    "project_url": "https://pypi.org/project/flask-MailboxValidator/",
    "project_urls": {
      "Homepage": "https://github.com/MailboxValidator/Flask_MailboxValidator"
    },
    "release_url": "https://pypi.org/project/flask-MailboxValidator/1.2.0/",
    "requires_dist": [
      "Flask (>=1.0.2)",
      "Flask-WTF (>=0.14.2)",
      "WTForms (>=2.2.1)",
      "sphinx (>=1.8.1) ; extra == 'docs'",
      "Pallets-Sphinx-Themes ; extra == 'docs'",
      "nose2 ; extra == 'tests'"
    ],
    "requires_python": "",
    "summary": "Email verification module for Flask using MailboxValidator API. It validates if the email is valid, from a free provider, contains high-risk keywords, whether it's a catch-all address and so much more.",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15649227,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9894c4a616ca361bc01020b523be0171664be6093de6c0dac995ae33610176fc",
          "md5": "629c5dca9797c5b0cb2a455f322a2bbb",
          "sha256": "2354eff26cb8e35df03e806eea300a43bd3eecd72cd553710a4ad32a0e02e331"
        },
        "downloads": -1,
        "filename": "flask_MailboxValidator-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "629c5dca9797c5b0cb2a455f322a2bbb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5778,
        "upload_time": "2018-10-17T06:48:44",
        "upload_time_iso_8601": "2018-10-17T06:48:44.353040Z",
        "url": "https://files.pythonhosted.org/packages/98/94/c4a616ca361bc01020b523be0171664be6093de6c0dac995ae33610176fc/flask_MailboxValidator-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3e52134ae70a1c5bc6e5fea2fca4f38b632549a33a06aaa2a9f30fef6da7b6a",
          "md5": "d972a0ef545efe41ee916c09b5a73243",
          "sha256": "0965311c554c1bb3d56c3218b84297fb0b39789bec1aa57b5cd47067bd925d02"
        },
        "downloads": -1,
        "filename": "flask_MailboxValidator-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d972a0ef545efe41ee916c09b5a73243",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5772,
        "upload_time": "2018-10-17T06:48:45",
        "upload_time_iso_8601": "2018-10-17T06:48:45.519360Z",
        "url": "https://files.pythonhosted.org/packages/b3/e5/2134ae70a1c5bc6e5fea2fca4f38b632549a33a06aaa2a9f30fef6da7b6a/flask_MailboxValidator-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "820e166dd8fcc59f6f10072f90ff0a887af4afb95591354b3eef9062c723d1b2",
          "md5": "bddd0dafff89a0c68b0228facdc8ae32",
          "sha256": "e49d156c3bb43fb3380d1447acd0bad5454f7973be385d031f4b8ee3a965ec5d"
        },
        "downloads": -1,
        "filename": "flask_MailboxValidator-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bddd0dafff89a0c68b0228facdc8ae32",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5771,
        "upload_time": "2018-10-17T06:51:19",
        "upload_time_iso_8601": "2018-10-17T06:51:19.005512Z",
        "url": "https://files.pythonhosted.org/packages/82/0e/166dd8fcc59f6f10072f90ff0a887af4afb95591354b3eef9062c723d1b2/flask_MailboxValidator-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c62e55ce3b079fc0b3582f0b0532fcecbb6c651fee008d14b484a192a181b13b",
          "md5": "dc23eb8b4e1aae8f4f807d55c8b4a622",
          "sha256": "7867b124aaed9b254a037be5c2ca3d20bf125a0ed69d5e7bb69e29572bb5c6f3"
        },
        "downloads": -1,
        "filename": "flask_MailboxValidator-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dc23eb8b4e1aae8f4f807d55c8b4a622",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5755,
        "upload_time": "2018-10-17T06:51:20",
        "upload_time_iso_8601": "2018-10-17T06:51:20.252570Z",
        "url": "https://files.pythonhosted.org/packages/c6/2e/55ce3b079fc0b3582f0b0532fcecbb6c651fee008d14b484a192a181b13b/flask_MailboxValidator-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1501aac885232d0a136c240328a2036108018c9c3fd6a9878b71e69b54693683",
          "md5": "07f44d1bb614a48756f6fd8aaf0f6826",
          "sha256": "4fe14e0048367966a2bfa952e1f2ba3b2f701bdc9c5d0c208fb87c70b14e0216"
        },
        "downloads": -1,
        "filename": "flask_MailboxValidator-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "07f44d1bb614a48756f6fd8aaf0f6826",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6781,
        "upload_time": "2019-01-16T08:04:12",
        "upload_time_iso_8601": "2019-01-16T08:04:12.575997Z",
        "url": "https://files.pythonhosted.org/packages/15/01/aac885232d0a136c240328a2036108018c9c3fd6a9878b71e69b54693683/flask_MailboxValidator-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3d0c73a487499cac8a109c10866bb2b87677e6280853c065d3691927862d2f2",
          "md5": "87ce8e846b626241c19d185ca92b5c32",
          "sha256": "99df2b7c7c0d294d7a8240fe3c869a388aa4eb7cea4ff50741e2cb1d7c9666ab"
        },
        "downloads": -1,
        "filename": "flask_MailboxValidator-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "87ce8e846b626241c19d185ca92b5c32",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5596,
        "upload_time": "2019-01-16T08:04:14",
        "upload_time_iso_8601": "2019-01-16T08:04:14.079270Z",
        "url": "https://files.pythonhosted.org/packages/d3/d0/c73a487499cac8a109c10866bb2b87677e6280853c065d3691927862d2f2/flask_MailboxValidator-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7fe5d08d7a2993e6eac44b325c9c61cdcb1c44d4dcdad976a4a0c09cca513829",
          "md5": "04db2f221aeefe04e8cd68a46df94752",
          "sha256": "7b10218df2dc263a794fd9a0c5de52c55277af32bfec1f5226ce1716e23bd6fb"
        },
        "downloads": -1,
        "filename": "flask_MailboxValidator-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04db2f221aeefe04e8cd68a46df94752",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6784,
        "upload_time": "2019-01-16T08:21:09",
        "upload_time_iso_8601": "2019-01-16T08:21:09.162471Z",
        "url": "https://files.pythonhosted.org/packages/7f/e5/d08d7a2993e6eac44b325c9c61cdcb1c44d4dcdad976a4a0c09cca513829/flask_MailboxValidator-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e19a9692895f99b8ba82e494294b15648d369731270e2299acb6b33349a21d70",
          "md5": "8c837fd8f7dbacc7710727516082d2eb",
          "sha256": "99f2f9690525e8aaeeadc86b4d5d2fd47066955ecfea80bb5cddc8a62450e5a2"
        },
        "downloads": -1,
        "filename": "flask_MailboxValidator-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8c837fd8f7dbacc7710727516082d2eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5590,
        "upload_time": "2019-01-16T08:21:10",
        "upload_time_iso_8601": "2019-01-16T08:21:10.903111Z",
        "url": "https://files.pythonhosted.org/packages/e1/9a/9692895f99b8ba82e494294b15648d369731270e2299acb6b33349a21d70/flask_MailboxValidator-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "446f3efc556b19e6aa39600afd71abf872aefbdcbc0f968edc982ab0d1aa94a9",
          "md5": "55756054b3a27b794b81f3dd68868c17",
          "sha256": "889bdf9a15d4ea807514bdc3d4b128474fee8c34b2a55960cd5799c9517c6e77"
        },
        "downloads": -1,
        "filename": "flask_MailboxValidator-1.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "55756054b3a27b794b81f3dd68868c17",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6898,
        "upload_time": "2022-11-04T02:47:12",
        "upload_time_iso_8601": "2022-11-04T02:47:12.490288Z",
        "url": "https://files.pythonhosted.org/packages/44/6f/3efc556b19e6aa39600afd71abf872aefbdcbc0f968edc982ab0d1aa94a9/flask_MailboxValidator-1.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "446f3efc556b19e6aa39600afd71abf872aefbdcbc0f968edc982ab0d1aa94a9",
        "md5": "55756054b3a27b794b81f3dd68868c17",
        "sha256": "889bdf9a15d4ea807514bdc3d4b128474fee8c34b2a55960cd5799c9517c6e77"
      },
      "downloads": -1,
      "filename": "flask_MailboxValidator-1.2.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "55756054b3a27b794b81f3dd68868c17",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 6898,
      "upload_time": "2022-11-04T02:47:12",
      "upload_time_iso_8601": "2022-11-04T02:47:12.490288Z",
      "url": "https://files.pythonhosted.org/packages/44/6f/3efc556b19e6aa39600afd71abf872aefbdcbc0f968edc982ab0d1aa94a9/flask_MailboxValidator-1.2.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}