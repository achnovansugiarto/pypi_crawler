{
  "info": {
    "author": "samy khelifi",
    "author_email": "samy.khelifi@ign.fr",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# python ml skeleton project\ngeneric skeleton for machine learning project with python, hydra, pytest, sphinx, github actions, etc.\nwith dummy functionalities!\nIt is mostly oriented geospatial projects\n\n[![PyPI python](https://img.shields.io/pypi/pyversions/pmps)](https://pypi.org/project/pmps)\n[![PyPI version](https://badge.fury.io/py/pmps.svg)](https://pypi.org/project/pmps)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](LICENCE)\n[![Documentation Status](https://readthedocs.org/projects/kornia/badge/?version=latest)](https://python-ml-project-skeleton.readthedocs.io/en/latest)\n[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/samysung/python_ml_project_skeleton/main.svg)](https://results.pre-commit.ci/latest/github/samysung/python_ml_project_skeleton/main)\n[![codecov](https://codecov.io/gh/samysung/python_ml_project_skeleton/branch/main/graph/badge.svg?token=AP5UNFJXCU)](https://codecov.io/gh/samysung/python_ml_project_skeleton)\n\n## Why this project?\n\nThe goal of this project is to present a standard architecture of python repository/package\nincluding a full CiCd pipeline to document/test/deploy your project with standard methods\nof 2022. It can be used as starting point for any project without reinventing the wheel.\n\n## The code has no interest!\n\nThe code of this project is totally dummy: it makes simple\nmathematics operations like addition and subtration!\nThe next iteration will make the opetations more interesting by\nusing multi-layers perceptron! It will try to add a complete example of Hydra\nconfiguration.\n<br/><br/>In a close future, it will serve as a demonstrator by the example\nof a standard ML pipeline for experimentation and production\n\n## Installation\n\n### Install requirements\nAs Gdal dependencies are presents it's preferable to\ninstall dependencis via conda before installing the package:\n```bash\n  git clone https://github.com/samysung/python_ml_project_skeleton\n  cd python_ml_project_skeleton/packaging\n  conda env create -f package_env.yml\n  ```\n### From pip:\n\n  ```bash\n  pip install pmps\n  or pip install pmps==vx.x # for a specific version\n  ```\n\n<details>\n  <summary>Other installation options</summary>\n\n  #### From source:\n\n  ```bash\n  python setup.py install\n  ```\n\n  #### From source with symbolic links:\n\n  ```bash\n  pip install -e .\n  ```\n\n  #### From source using pip:\n\n  ```bash\n  pip install git+https://github.com/samysung/python_ml_project_skeleton\n  ```\n\n</details>\n\n## Project Architecture\n\n\n```bash\n\n\n├── CHANGELOG.rst\n├── .codecov.yml\n├── deploy\n│   └── dockerfile\n├── docs\n│   ├── add.rst\n│   ├── build.sh\n│   ├── changelog.rst\n│   ├── conf.py\n│   ├── deploy.sh\n│   ├── index.rst\n│   ├── Makefile\n│   ├── readme_link.md\n│   └── _static\n│       └── img\n├── .github\n│   └── workflows\n│       ├── publish.yml\n│       ├── test_code.yml\n│       ├── test_docs.yml\n│       ├── test_packaging.yml\n│       └── test_publish.yml\n├── .gitignore\n├── LICENSE\n├── packaging\n│   ├── doc_env.yml\n│   ├── doc_requirements.txt\n│   ├── package_env.yml\n│   ├── requirements.txt\n│   ├── test_env.yml\n│   └── test_requirements.txt\n├── pmps\n│   ├── api\n│   │   ├── add.py\n│   │   ├── __init__.py\n│   │   └── subtract.py\n│   ├── core\n│   │   ├── add.py\n│   │   ├── __init__.py\n│   │   └── subtract.py\n│   └── __init__.py\n├── .pre-commit-config.yaml\n├── .pylintrc\n├── README.md\n├── readthedocs.yml\n├── setup.cfg\n├── setup.py\n├── tests\n│   ├── api\n│   │   ├── __init__.py\n│   │   ├── test_add.py\n│   │   └── test_subtract.py\n│   └── __init__.py\n└── VERSION\n```\n\n\n### Architecture component overview\n\n| **Component**                   | **Path**               | **Description|\n|---------------------------------|------------------------||\n| Python Package                  | pmps/                  | where the python executable code is localized. It is your root package as it's the first directory to contain a __init__.py and its name is generally the one you choose for your publishing package (the one build and published on forge like pypi conda, etc. Don't forget for any subpackage to add an __init__.py module to declare it as python package. NB: separate core and api in different sub package is a design choice not standard, it comes from java world but a lot of python project prefers declaring private python modules. |\n | Documentation                   | docs/                  | the source code of your documentation: conf.py is where you configure your sphinx doc, _static/ for your additional statis files (img, text, icon, video, etc.), doc is built under docs/_build/html but can be modified in maekfile.                                                                                                                                                                                                                                                                                                             |\n | Tests Package                   | tests/                 | where you organize the test code of your executable code. Your unit tests (pytest is the library used) should at least test what you expose to your clients, you can add static analysis of your tests code with extentions like mypy and flake8. Use the pytest-cov extension to produce test cover reporting.                                                                                                                                                                                                                                   |\n | Python Env                      | packaging/             | Place for your conda environment files and requirement files.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     |\n | Deployment                      | deploy/                | Place for Dockerfiles or any other deployment solution                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            |\n | CI/CD workflows                 | .github/               | github workflows configuration files (details below)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n | CD (Documentation publishing)   | .readthedocs.yml       | configuration of the documentation publication on readthedocs (see [readthedocs link](https://readthedocs.org/))                                                                                                                                                                                                                                                                                                                                                                                                                                  |\n | CI (tests covering publishing)  | .codecov.yml           | configuration of the code covering pubication on codecov (see [codecov](https://about.codecov.io/))                                                                                                                                                                                                                                                                                                                                                                                                                                               |\n | CI (static analysis publishing) | .pre-commit.yml        | configuration of the pre-commit publication (see [pre-commit](https://pre-commit.ci/))                                                                                                                                                                                                                                                                                                                                                                                                                                                            |\n | CD (packaging)                  | setup.cfg and setup.py | configuration files for packaging on pipy, local, etc (see [python doc](https://packaging.python.org/en/latest/guides/distributing-packages-using-setuptools/))                                                                                                                                                                                                                                                                                                                                                                                   |\n\n\n### CI/CD pipeline\nThe first and essential goal is to have a skeleton quickly editable for a lot of use case projects\nwith a big emphasis on continuous integration and continuous deployment.\nHere is a schematic view of the Ci/Cd pipeline targeted for\nopen source python project, largely inspired by others well\nknown projects:\n#### DIAGRAM\n![Ci/Cd diagram](docs/_static/img/CiCd_pipeline.svg)\n#### Github Workflows\n\n##### test code worflow (.github/workflows/test_code.yml):\n\n  Used to run unit test (and functionnal if implemented) tests on pull request events\n  or push on main branch. It publishes coverage results on codecov.io.\n  Use the packaging/test_env.yml conda environment file, github cache action and codecov/codecov-action\n\n##### test docs workflow (.github/workflows/test_docs.yml):\n\n Used to test the build of sphinx documentation. Run on pull request events\n or push on main branch.\n Use the packaging/doc_env.yml conda environment file, and the github cache action.\n\n##### publish workflow (.github/workflows/publish.yml):\n\n Used to publish the package on pypi, when a new tagged version or release is published.\n Use the packaging/package_env.yml conda environment file, github cache action github download\n and upload artifacts, and gh-action-pypi-publish.\n\n##### test publish workflow (.github/workflows/test_publish.yml):\n\n Same worflow as above, but on a test branch and test.pypi forge,\n for testing deployment improvement recipes\n\n##### test packaging workflow (.github/workflows/test_packaging.yml):\n\n Worflow actioned by CRON event (see [crontab-guru](https://crontab.guru/)), every n hours. Used\n to test that the package has been published and the lasted version is working.\n\n#### Github workflows based on github webhooks or githu Apps\n Some workflow works are handled by third party applications, like the readthe docs publication or the online\n pre-commit static analysis.\n\n###### Pre-commit\n\n Pre-commit action is launched via a github app (pre-commit.ci) on every commit made on remote.\n it's configured via the file pre-commit-config.yaml\n\n###### Read-the-docs publication\n\n Readthedocs publish new documentation version via a webhook subscribed for push and commit event.\n You can configure the type of push trigering the process in the readthedocs.org configuration section.\n See read the docs documentation for more detail.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/samysung/python_ml_project_skeleton",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pmps",
    "package_url": "https://pypi.org/project/pmps/",
    "platform": null,
    "project_url": "https://pypi.org/project/pmps/",
    "project_urls": {
      "Bug Tracker": "https://github.com/samysung/python_ml_project_skeleton/issues",
      "Homepage": "https://github.com/samysung/python_ml_project_skeleton"
    },
    "release_url": "https://pypi.org/project/pmps/0.2/",
    "requires_dist": [
      "geopandas (>=0.10)",
      "rasterio (>=1.1.5)"
    ],
    "requires_python": ">=3.9",
    "summary": "A small example package",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13782757,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be9576f7f26f72f2a107759e9898709a3e183ef26d50acbd6c0aefd30bf4a20a",
          "md5": "ac5658d3dfb44a32e66257c017e7daf2",
          "sha256": "5bcaee904b3d32e0dc583a8d521bdf803a3eeb228b283b9529269f91a6317891"
        },
        "downloads": -1,
        "filename": "pmps-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac5658d3dfb44a32e66257c017e7daf2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 7969,
        "upload_time": "2022-05-06T09:36:19",
        "upload_time_iso_8601": "2022-05-06T09:36:19.960738Z",
        "url": "https://files.pythonhosted.org/packages/be/95/76f7f26f72f2a107759e9898709a3e183ef26d50acbd6c0aefd30bf4a20a/pmps-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f48011d887c76a68c0129a2bee0e19ef58b2290df33d4906292d67643e59dbfc",
          "md5": "b69a6c7932ecf725292f16d8a60ecc9d",
          "sha256": "992ab50ff2c2035aedd3f9f71952954b1d7a1f683ae1ab2f6e6a30c17d94e7ab"
        },
        "downloads": -1,
        "filename": "pmps-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b69a6c7932ecf725292f16d8a60ecc9d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 2484,
        "upload_time": "2022-05-06T09:36:20",
        "upload_time_iso_8601": "2022-05-06T09:36:20.987945Z",
        "url": "https://files.pythonhosted.org/packages/f4/80/11d887c76a68c0129a2bee0e19ef58b2290df33d4906292d67643e59dbfc/pmps-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac91b6973bc2c6e0ce7bcec8e01677eb589e7555ad9d88bb9deb4a91f807fee0",
          "md5": "41e0f2643bbc3aff92c431c245d55501",
          "sha256": "547ea9f8aa32df30f3bbb6f03a38e5fbaf44a070f97d834151e55de56c74fb4d"
        },
        "downloads": -1,
        "filename": "pmps-0.1b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41e0f2643bbc3aff92c431c245d55501",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 7996,
        "upload_time": "2022-05-05T08:52:05",
        "upload_time_iso_8601": "2022-05-05T08:52:05.322650Z",
        "url": "https://files.pythonhosted.org/packages/ac/91/b6973bc2c6e0ce7bcec8e01677eb589e7555ad9d88bb9deb4a91f807fee0/pmps-0.1b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5a387fcdeddb10711054d8a334500f4796d0a447d7ea2c961c05caf9a714b8c",
          "md5": "afa10ea4811f9fecc6bd42e51047a77f",
          "sha256": "0e97260e35ecb2b769d02d8dda444819b84c16c63eb0ea3bfaabf96d65356efa"
        },
        "downloads": -1,
        "filename": "pmps-0.1b0.tar.gz",
        "has_sig": false,
        "md5_digest": "afa10ea4811f9fecc6bd42e51047a77f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 2484,
        "upload_time": "2022-05-05T08:52:06",
        "upload_time_iso_8601": "2022-05-05T08:52:06.562066Z",
        "url": "https://files.pythonhosted.org/packages/c5/a3/87fcdeddb10711054d8a334500f4796d0a447d7ea2c961c05caf9a714b8c/pmps-0.1b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "585e3f16d670dd6f53a4348add68da2756e40bb39842e82070d3843fc7cf3f2a",
          "md5": "db48da758e206b339b751cd27f2b3cdb",
          "sha256": "039e4294ea3cda46cbeecb2315d2ad7e49db68be4d493da5fecb247867949b9c"
        },
        "downloads": -1,
        "filename": "pmps-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db48da758e206b339b751cd27f2b3cdb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 10956,
        "upload_time": "2022-05-11T14:01:13",
        "upload_time_iso_8601": "2022-05-11T14:01:13.073103Z",
        "url": "https://files.pythonhosted.org/packages/58/5e/3f16d670dd6f53a4348add68da2756e40bb39842e82070d3843fc7cf3f2a/pmps-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17c137ae9211a87bb2586ff80af27d15801ef2ed4e2bb2c6723b56305509fbe8",
          "md5": "4088f2c61a6f751554cfee9af07aa4dc",
          "sha256": "ea2ff61e0b7101c47d7c2d2cc10192c869442349115f7bfe872fb0c38bfb1414"
        },
        "downloads": -1,
        "filename": "pmps-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4088f2c61a6f751554cfee9af07aa4dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 12851,
        "upload_time": "2022-05-11T14:01:14",
        "upload_time_iso_8601": "2022-05-11T14:01:14.600743Z",
        "url": "https://files.pythonhosted.org/packages/17/c1/37ae9211a87bb2586ff80af27d15801ef2ed4e2bb2c6723b56305509fbe8/pmps-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "585e3f16d670dd6f53a4348add68da2756e40bb39842e82070d3843fc7cf3f2a",
        "md5": "db48da758e206b339b751cd27f2b3cdb",
        "sha256": "039e4294ea3cda46cbeecb2315d2ad7e49db68be4d493da5fecb247867949b9c"
      },
      "downloads": -1,
      "filename": "pmps-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "db48da758e206b339b751cd27f2b3cdb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 10956,
      "upload_time": "2022-05-11T14:01:13",
      "upload_time_iso_8601": "2022-05-11T14:01:13.073103Z",
      "url": "https://files.pythonhosted.org/packages/58/5e/3f16d670dd6f53a4348add68da2756e40bb39842e82070d3843fc7cf3f2a/pmps-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "17c137ae9211a87bb2586ff80af27d15801ef2ed4e2bb2c6723b56305509fbe8",
        "md5": "4088f2c61a6f751554cfee9af07aa4dc",
        "sha256": "ea2ff61e0b7101c47d7c2d2cc10192c869442349115f7bfe872fb0c38bfb1414"
      },
      "downloads": -1,
      "filename": "pmps-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4088f2c61a6f751554cfee9af07aa4dc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 12851,
      "upload_time": "2022-05-11T14:01:14",
      "upload_time_iso_8601": "2022-05-11T14:01:14.600743Z",
      "url": "https://files.pythonhosted.org/packages/17/c1/37ae9211a87bb2586ff80af27d15801ef2ed4e2bb2c6723b56305509fbe8/pmps-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}