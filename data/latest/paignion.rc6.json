{
  "info": {
    "author": "Dimitri Kokkonis",
    "author_email": "kokkonisd@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Paignion\n\n![CI](https://github.com/kokkonisd/paignion/workflows/CI/badge.svg)\n![codecov](https://codecov.io/gh/kokkonisd/paignion/branch/master/graph/badge.svg?token=KmooZEYu1b)\n\n![Screenshot of a game built with Paignion](screenshot.png)\n\nPaignion is a Python-generated, JavaScript-powered game engine for text adventure\ngames.\n\n---\n\n## Contents\n\n - [Quick start](#quick-start)\n - [What is Paignion?](#what-is-paignion)\n    - [How to write room descriptions](#how-to-write-room-descriptions)\n    - [How to write room metadata](#how-to-write-room-metadata)\n        - [Tangible and intangible items](#tangible-and-intangible-items)\n        - [Item properties](#item-properties)\n        - [Actions](#actions)\n - [How to install Paignion](#how-to-install-paignion)\n\n---\n\n## Quick start\n\nIf you just want to play a game made with Paignion to see what it can do, you can clone\nthis repo and build the example games locally to test them:\n\n```text\n$ git clone https://github.com/kokkonisd/paignion\n$ cd paignion\n$ python3 -m pip install -r requirements.txt # Install dependencies\n$ python3 -m paignion build examples/complete_demo # Build demo game\n```\n\nThis will build the complete demo at `examples/complete_demo/build`. You can play it by\nserving it locally, for example with `http-server`:\n\n```text\n$ cd examples/complete_demo/build\n$ http-server -p 4000\n```\n\nYou can then open a browser, go to `localhost:4000` and enjoy :)\n\n## What is Paignion?\n\nPaignion is a game engine for\n[text adventure games](https://en.wikipedia.org/wiki/Text-based_game#Text_adventure).\nIt takes a bunch of specifically formatted Markdown files written by you, the game\ndeveloper, and turns them into a JavaScript-based text adventure game, which you can\neasily send to friends or serve on your site. You only need to install Paignion in\norder to _make_ games; the actual game runs in a browser and does not have any\ndependencies you need to install.\n\nIf you want to see a minimal example of a game built with Paignion to witness with your\nown eyes how simple it is to create a game, you can follow the\n[installation instructions](#how-to-install) to install Paignion on your computer.\nOnce it is installed, you can run the following command in your terminal to create a\nnew game:\n\n```text\n$ paignion init my_new_game\n```\n\nA directory called \"my_new_game\" will be created, and some default files will be\ngenerated:\n\n```text\n$ tree my_new_game/\nmy_new_game\n└── rooms\n    ├── origin.md\n    └── second_room.md\n\n1 directory, 2 files\n```\n\nAs you can see, a directory called \"rooms\" has been created inside the directory of\nyour game, and it contains all of the rooms of your game in the form of Markdown\n(`.md`) files.\n\nYou must **always** have an `origin.md` room; this is the room in which the player\nstarts when they launch the game.\n\nAs you can see, every room file is split into two parts: a YAML header and a Markdown\nbody. This is basically based on\n[Jekyll's Front Matter](https://jekyllrb.com/docs/front-matter/).\n\nThe YAML header is contained in triple dashes (`---`); it must always come first, and\nthe Markdown body must always come after it.\n\nThe YAML header basically contains metadata for the room (which rooms it connects to,\nwhat items it contains, the properties of these items etc). The Markdown body contains\nthe description of the room, which is the text shown to the player when they enter the\nroom.\n\n### How to write room descriptions\n\nRoom descriptions are written in basic Markdown. You can use pretty much anything you\nwould use here on GitHub when writing them.\n\nNote that the player will not get a list of the items of the room as they enter it;\nthey will only get what you give them in the description. You can describe the items in\ndetail to invite them to examine them, or you can do the opposite and let the player\ndiscover them by looking around the room.\n\n### How to write room metadata\n\nRoom metadata is entirely optional. However, if all your rooms are completely empty\nthen your game isn't going to be much fun.\n\nEach entry of room metadata is basically one of two elements: **directions** or\n**items**. _Directions_ refer to the rooms that this room links to, and _items_ refer\nto the items that are found in the room and that the player can interact with.\n\nDirections are one of `north, east, south, west, up, down`; you do not need to specify\neach and every one of them, you only need to specify those you need. For example, if I\nwant my origin room to link to the kitchen on its north, I can write:\n\n```yaml\n---\nnorth: kitchen\n---\n```\n\nassuming I will create a `kitchen.md` room. Usually you'll want to mirror this in the\nlinked room, by adding `south: origin` in `kitchen.md` in this case, but you do not\nhave to; you're making a game, not working on a uni assignment! Screw coherence and\ncontinuity, go nuts!\n\nJust to make it clear how this works, if we were to implement the two `origin.md` and\n`kitchen.md` room, the player could move from the origin to the kitchen by typing\n\"go north\" or \"go to the north\" or \"move to the north\" etc.\n\n\n#### Tangible and intangible items\n\nItems are split into two categories: _tangible_ and _intangible_. Tangible items are\nthe ones that the player can pick up and store in their inventory, like a key or a gun.\nIntangible items on the other hand cannot be picked up by the player, and can instead\nbe examined by them, like a painting or a fireplace. Both types of items can be used\ntogether, via [actions](#actions). Here's how you would declare that in the room files:\n\n```yaml\n---\nitems:\n    tangible:\n        # Tangible items go here\n    intangible:\n        # Intangible items go here\n---\n```\n\nAs with the directions, you don't need to define either of those categories if you\ndon't plan on using them; for example, if you don't want intangible/tangible items you\ndon't need to specify an empty list, and if you don't want neither the one nor the\nother you can skip the items key in the YAML entirely.\n\n#### Item properties\n\nEach item, tangible or intangible, can define a few properties. For example, every item\nshould have at least a name and a description. Item descriptions can also contain\nMarkdown (just like the room descriptions).\n\nThe rest of the item properties are optional, which means you only need to define them\nif you want to override the defaults. The optional properties are the following:\n\n- `amount`: the amount of instances of this item found in this room. For example, you\n  can have three gold coins, and let the player pick as many as they want. This is set\n  to 1 by default (since if you don't specify how many of it there are then you\n  probably mean there is just one) but can be set to any number, or \"inf\", which means\n  that there is an infinite amount of this item. This can be used for things like\n  grains of sand on a beach or something, I don't know.\n- `visible`: is this item visible by the player or not? Basically this determines if\n  the item will be filtered out or not if the player asks to \"look around the room\".\n  This can be useful for things that are obviously there: for example you might want\n  the player to be able to, say, combine a shovel and the ground in order to dig a\n  hole by saying \"use shovel with ground\", but at the same time if they ask to look\n  around the room it's dumb to respond \"you can see one shovel and one _ground_\", hence\n  the utility of the `visible` flag.\n- `effect`: the effect that is currently applied to an object. For example, if you\n  enchant a sword it becomes _sword (enchanted)_. If you put a cat under a running sink\n  it becomes _cat (wet)_. This usually starts out undefined and gets changed by an\n  action, either for comedic/worldbuilding purposes or for an actual action that\n  changes something in the game.\n\nHere are some concrete examples of items:\n\n```yaml\n---\nitems:\n    tangible:\n        - name: rock\n          description: \"A rock you can pick up and probably throw at something.\"\n        - name: boot\n          description: \"An old boot. Kinda stinks.\"\n          amount: 2 # It's a pair of boots!\n        - name: sand\n          description: \"Sand. You know what sand is. What you would do with this, I do not know. Have fun endlessly picking up grains of sand.\"\n          amount: \"inf\"\n          effect: boring\n    intangible\n        - name: sky\n          visible: false # it would be dumb to say \"there is 1 sky\" to the player\n                         # also note how if it's invisible you do not need to define a\n                         # description since the player cannot say \"look at the sky\"\n                         # (they will get a \"there is no such item\" answer)\n        - name: boat\n          description: \"An old, rotting wooden boat. Seems it washed up on the shore a long time ago.\"\n---\n```\n\n#### Actions\n\nThere is another (pretty important) item property: _actions_. You would have a pretty\nboring game if the player could not change the game world via their actions, wouldn't\nyou?\n\nEach time you want an item to be able to be used with another item, you must specify\nthe `used_with` property (and the properties that come along with it). Under this, you\nmust at least specify what the name of the item that this item interacts with is, and\nalso an effect message that is shown to the player when the action is carried out. The\nlast one is mandatory because not giving your players feedback is _bad_.\n\nThe syntax of the commands is very minimal, and there are actually very few commands\nfor now: `set` and `add` which, well, set a certain property to a certain value or\nadd (meaning _append_) something to the current value of a specific property. Let me\nexplain with an example.\n\nSay we're making a very simple 2-room game. The player starts out in the origin of\ncourse, which only contains one key (tangible) and one door (intangible) on its west\nside. The goal for the player is pretty simple: pick up the key, open the door, and get\nto the second room. This is how you'd implement this with actions:\n\n```yaml\n---\n# we do not define anything for the `west` direction; it will get populated\n# automatically by the action\nitems:\n    tangible:\n        - name: key\n          description: \"A simple key. I'm pretty sure it opens that door over there. Wanna pick it up?\"\n    intangible:\n        - name: door\n          description: \"A classic wooden door. It's locked.\"\n          used_with:\n              - name: key\n                effect_message: \"The door is now unlocked.\"\n                consumes_subject: true\n                actions:\n                  - set(west, \"second_room\", origin)\n                  - add(\"The door has been unlocked\", description, origin)\n---\n\nThere is a locked door to your west and a key at your feet. You know what to do.\n```\n\nOf course, I am assuming that there is a `second_room.md` whose `east` direction points\nto `origin`. In order to advance to the second room, the player must type something\nlike \"take the key\" in order to pick up the key and then something like \"use key on\ndoor\" in order to unlock the door. At that point, the action we just wrote for the door\nwill be applied: it will delete the key from the player's inventory (this is done\nbecause of `consumes_subject`, more on that later), it will set the `west` direction of\nthe origin room to `second_room`, linking the two, and finally it will append a\nparagraph saying \"The door has been unlocked.\" to the origin's description, so that if\nthe player comes back later and don't remember that they already unlocked the door, the\ndescription will remind them. Of course, in this case I'm using the `add` command to\nshow how it's supposed to be used, but in this case it would be better to just change\nthe entire description to that paragraph. You decide.\n\nIn any case, here are the available commands:\n\n- `set(X, Y, Z)`\n- `add(Y, X, Z)`\n- `sub(Y, X, Z)`\n- `mul(Y, X, Z)`\n- `div(Y, X, Z)`\n\n`X` is a property/key: something like `west`, or `effect`, or `visible`, or `amount`...\n\n`Z` is either a room name or an item name (tangible or intangible). The engine will\nlook for a room first, then for an item from the player's inventory, and lastly for an\nintangible item, first from the current room and then from the other rooms. Keep this\norder in mind when designing; only the first item in that order will be acted upon.\nAs for why the engine only looks for intangible items outside the player's inventory:\nif the action is meant for a tangible item, the user can pick it up and use it. There\nis no need to do this without having the user pick the item up first.\n\nFinally, `Y` is a string containing a message or a value for the key `X`. This can be\none of three things:\n\n- a _string_, like `\"blablabla\"`\n- a _Markdown string_, like `m\"The _trenches_ were ~~very~~ extremely **deep**.\"`,\n  which will obviously get rendered on the screen like other strings that support\n  Markdown in the engine\n- an _integer_, like `4`\n\nThe `set` and `add` commands can be used either to set/append strings, or to set/add\nintegers. The `sub`, `mul` and `div` commands only serve to subtract, multiply and\ndivide by an integer value respectively.\n\nTo conclude, here is the rest of the available properties for the actions:\n\n- `consumes_subject`: decreases the amount of the subject (meaning the item\n  _performing_ the action) by 1, or deletes it if it was at 1.\n- `consumes_object`: same thing, but for the object (meaning the item _receiving_ the\n  action).\n\n\n## How to install Paignion\n\nYou can install Paignion via `pip`:\n\n```text\n$ pip3 install paignion\n```\n\nYou can then directly use it from your terminal. If you don't want to install it, you\ncan clone this repo and use it from within the repo itself:\n\n```text\n$ git clone https://github.com/kokkonisd/paignion\n$ cd paignion\n$ python3 -m pip install -r requirements.txt # Install dependencies\n```\n\nYou can then launch it from inside the clone of the repo by running:\n\n```text\n$ python3 -m paignion init my_new_game # or build ...\n```\n\n\n## Developer notes\n\nTests can (and should be) run like this (after having installed the dependencies listed\nin `requirements.txt`):\n\n```\n$ tox\n```\n\nTODOs:\n\n- Add conditional commands??? maybe???\n- Add part explaining the frontend engine in README\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kokkonisd/paignion",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "paignion",
    "package_url": "https://pypi.org/project/paignion/",
    "platform": "",
    "project_url": "https://pypi.org/project/paignion/",
    "project_urls": {
      "Homepage": "https://github.com/kokkonisd/paignion"
    },
    "release_url": "https://pypi.org/project/paignion/0.0.6/",
    "requires_dist": [
      "pyyaml",
      "markdown",
      "pymdown-extensions"
    ],
    "requires_python": ">=3.6",
    "summary": "A simple game engine for adventure text games.",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9100633,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0537461895ac143a7714580716294dcc8c9a132397c3ded9c837cf1780f63394",
          "md5": "e1b581553f682e1dbff85a68f3e699cb",
          "sha256": "2f8b0ef687fd1cb022d066b7af93fe82e638671a3bcbcfa4357e21e165783ac5"
        },
        "downloads": -1,
        "filename": "paignion-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1b581553f682e1dbff85a68f3e699cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25095,
        "upload_time": "2021-01-06T23:53:05",
        "upload_time_iso_8601": "2021-01-06T23:53:05.469201Z",
        "url": "https://files.pythonhosted.org/packages/05/37/461895ac143a7714580716294dcc8c9a132397c3ded9c837cf1780f63394/paignion-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13bf11402eb698a82d651a4d860e6819c9db4253f5c4c2a43bd0fe302323b67d",
          "md5": "fbe3b99f3bf300efb9b1857767e24a5f",
          "sha256": "16e265171ac0b91fbb192477591eaa1d7b2f1afe5e927a63833899da7c2906c7"
        },
        "downloads": -1,
        "filename": "paignion-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fbe3b99f3bf300efb9b1857767e24a5f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17157,
        "upload_time": "2021-01-06T23:53:07",
        "upload_time_iso_8601": "2021-01-06T23:53:07.120374Z",
        "url": "https://files.pythonhosted.org/packages/13/bf/11402eb698a82d651a4d860e6819c9db4253f5c4c2a43bd0fe302323b67d/paignion-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "814de0644d2f9810c5518293a06dc8cb1716064f9a8fbd2807bd8244e60e290c",
          "md5": "098633be6c9896a6d47c240008281a61",
          "sha256": "9ed37476d8ad0cb732ec2687acf37f1bee0e8a8c46af4ed15c76ae2d8af0ffec"
        },
        "downloads": -1,
        "filename": "paignion-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "098633be6c9896a6d47c240008281a61",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25104,
        "upload_time": "2021-01-06T23:55:26",
        "upload_time_iso_8601": "2021-01-06T23:55:26.400384Z",
        "url": "https://files.pythonhosted.org/packages/81/4d/e0644d2f9810c5518293a06dc8cb1716064f9a8fbd2807bd8244e60e290c/paignion-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "358f2f4ad60a9af5966c9f6ffdc8447606463dbf7aa11c88e0f20271a07b42ea",
          "md5": "ff912b38490c013a16b900f965395c13",
          "sha256": "2d42e5a12c3d01a812725e8a9c0d0853f66a6877ab6145fc369e4a866ad482e3"
        },
        "downloads": -1,
        "filename": "paignion-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ff912b38490c013a16b900f965395c13",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17157,
        "upload_time": "2021-01-06T23:55:29",
        "upload_time_iso_8601": "2021-01-06T23:55:29.151088Z",
        "url": "https://files.pythonhosted.org/packages/35/8f/2f4ad60a9af5966c9f6ffdc8447606463dbf7aa11c88e0f20271a07b42ea/paignion-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "face76d3f268f86332774b72afb481f5a39c742fe74dd07a73689ed1b58e0d7d",
          "md5": "367ba6bbd561dc4e522eb29cf08a6149",
          "sha256": "bb369798978d494e20e01a0a9fa652f95455b5e47987c6a600e1107a59f5a07f"
        },
        "downloads": -1,
        "filename": "paignion-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "367ba6bbd561dc4e522eb29cf08a6149",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25103,
        "upload_time": "2021-01-06T23:57:58",
        "upload_time_iso_8601": "2021-01-06T23:57:58.726411Z",
        "url": "https://files.pythonhosted.org/packages/fa/ce/76d3f268f86332774b72afb481f5a39c742fe74dd07a73689ed1b58e0d7d/paignion-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6b4b635bd23e955af1a3b1743c6d812a8c3a56ea4220eb183642968ed4b8a40",
          "md5": "b4ceb9df983f0a5db1abee24b94a1de7",
          "sha256": "79e5c5c1f299e2b612b98e956ba850c7e074a9518ba05d6b01f163800bf8f1fc"
        },
        "downloads": -1,
        "filename": "paignion-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b4ceb9df983f0a5db1abee24b94a1de7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17172,
        "upload_time": "2021-01-06T23:58:00",
        "upload_time_iso_8601": "2021-01-06T23:58:00.524060Z",
        "url": "https://files.pythonhosted.org/packages/d6/b4/b635bd23e955af1a3b1743c6d812a8c3a56ea4220eb183642968ed4b8a40/paignion-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f347e0830b7ce586431aed1a6a5fa19abdeaf14eddff7a29725fbbb3213f792b",
          "md5": "32e5a6d03c45e3c546c6954c9a675b50",
          "sha256": "0635b6d195b4543288ef576503d371e4a96d80e8c9fc4802a232fcd8dc1ae019"
        },
        "downloads": -1,
        "filename": "paignion-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32e5a6d03c45e3c546c6954c9a675b50",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 31801,
        "upload_time": "2021-01-07T00:05:18",
        "upload_time_iso_8601": "2021-01-07T00:05:18.986897Z",
        "url": "https://files.pythonhosted.org/packages/f3/47/e0830b7ce586431aed1a6a5fa19abdeaf14eddff7a29725fbbb3213f792b/paignion-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa6e75bc751cf261db8e64216bf3d36c8861370eb3653a49ecad12193b304f00",
          "md5": "f37ac96d830b8421136e938137434392",
          "sha256": "068041e9769e0cc5f0b08777b507ca39a1ecd51b58435d09d97f3102dafe6913"
        },
        "downloads": -1,
        "filename": "paignion-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f37ac96d830b8421136e938137434392",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17168,
        "upload_time": "2021-01-07T00:05:20",
        "upload_time_iso_8601": "2021-01-07T00:05:20.503527Z",
        "url": "https://files.pythonhosted.org/packages/aa/6e/75bc751cf261db8e64216bf3d36c8861370eb3653a49ecad12193b304f00/paignion-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34d5173e7bb222bf8234aae594349b16032f58d7384dd99db61dc889d831ce5a",
          "md5": "2b1617ac3b5c11340ceca3740e6e3d0b",
          "sha256": "6ce243f4c77f6ea53ef14ea374133062fcb9531292df47746038b4dd0730dab6"
        },
        "downloads": -1,
        "filename": "paignion-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b1617ac3b5c11340ceca3740e6e3d0b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 34086,
        "upload_time": "2021-01-08T21:34:09",
        "upload_time_iso_8601": "2021-01-08T21:34:09.185947Z",
        "url": "https://files.pythonhosted.org/packages/34/d5/173e7bb222bf8234aae594349b16032f58d7384dd99db61dc889d831ce5a/paignion-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b49e51c1eaca198d912eb5e6c5f275ed56680edd9325016b4b52776a7f1a2fe",
          "md5": "d5536fdb3c114abe2ce46ddbb6c1ef61",
          "sha256": "89de032155ea3e1b92337652a3476f8cb2f7ebae2e27e49a3fbf601cd7a83f85"
        },
        "downloads": -1,
        "filename": "paignion-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d5536fdb3c114abe2ce46ddbb6c1ef61",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19317,
        "upload_time": "2021-01-08T21:34:11",
        "upload_time_iso_8601": "2021-01-08T21:34:11.330802Z",
        "url": "https://files.pythonhosted.org/packages/2b/49/e51c1eaca198d912eb5e6c5f275ed56680edd9325016b4b52776a7f1a2fe/paignion-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85ccb23ce9e13421d74d65f8857d857fd642a2daed0c03d714353f370695e528",
          "md5": "318a3298bfc713f56943239349777bd7",
          "sha256": "95c77faa4646241c2a2f74c4e55bf8e1c3df46ef06e227436dcef141cb0f7da9"
        },
        "downloads": -1,
        "filename": "paignion-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "318a3298bfc713f56943239349777bd7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 46842,
        "upload_time": "2021-01-10T23:20:30",
        "upload_time_iso_8601": "2021-01-10T23:20:30.169706Z",
        "url": "https://files.pythonhosted.org/packages/85/cc/b23ce9e13421d74d65f8857d857fd642a2daed0c03d714353f370695e528/paignion-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cbaaa4e7422884104840e270bbdaee0d62b2b0f01f7890805c1fb0754b2c4ad",
          "md5": "a4141a09480b4a7c15408e55e88c6ee7",
          "sha256": "a865833ea056bde782bc1f3c1ff2b7200f348dfb7250b24306f6000c101df713"
        },
        "downloads": -1,
        "filename": "paignion-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "a4141a09480b4a7c15408e55e88c6ee7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29768,
        "upload_time": "2021-01-10T23:20:31",
        "upload_time_iso_8601": "2021-01-10T23:20:31.808393Z",
        "url": "https://files.pythonhosted.org/packages/1c/ba/aa4e7422884104840e270bbdaee0d62b2b0f01f7890805c1fb0754b2c4ad/paignion-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "85ccb23ce9e13421d74d65f8857d857fd642a2daed0c03d714353f370695e528",
        "md5": "318a3298bfc713f56943239349777bd7",
        "sha256": "95c77faa4646241c2a2f74c4e55bf8e1c3df46ef06e227436dcef141cb0f7da9"
      },
      "downloads": -1,
      "filename": "paignion-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "318a3298bfc713f56943239349777bd7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 46842,
      "upload_time": "2021-01-10T23:20:30",
      "upload_time_iso_8601": "2021-01-10T23:20:30.169706Z",
      "url": "https://files.pythonhosted.org/packages/85/cc/b23ce9e13421d74d65f8857d857fd642a2daed0c03d714353f370695e528/paignion-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1cbaaa4e7422884104840e270bbdaee0d62b2b0f01f7890805c1fb0754b2c4ad",
        "md5": "a4141a09480b4a7c15408e55e88c6ee7",
        "sha256": "a865833ea056bde782bc1f3c1ff2b7200f348dfb7250b24306f6000c101df713"
      },
      "downloads": -1,
      "filename": "paignion-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "a4141a09480b4a7c15408e55e88c6ee7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 29768,
      "upload_time": "2021-01-10T23:20:31",
      "upload_time_iso_8601": "2021-01-10T23:20:31.808393Z",
      "url": "https://files.pythonhosted.org/packages/1c/ba/aa4e7422884104840e270bbdaee0d62b2b0f01f7890805c1fb0754b2c4ad/paignion-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}