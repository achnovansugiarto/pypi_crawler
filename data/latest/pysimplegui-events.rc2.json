{
  "info": {
    "author": "Jeffrey Yurkiw",
    "author_email": "jyurkiw@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Topic :: Utilities"
    ],
    "description": "# PySimpleGUI Events\nA simple event system for PySimpleGUI applications.\n\n### Simple Tutorial\nThe following tutorial is based on the CookBook entry [Recipe - Pattern 2B - Persistent window](https://pysimplegui.readthedocs.io/en/latest/cookbook/#recipe-pattern-2b-persistent-window-multiple-reads-using-an-event-loop-updates-data-in-window).\n\n#### Importing the Event Handler\n    \n    import PySimpleGUI as sg\n    import PySimpleGUI_Events as sge\n\n#### Instantiate the EventManager and ApplicationState\n\n    layout = [...]\n\n    window = sg.Window(\"Pattern 2B\", layout)\n\n    # application_data caries a reference to the window for use in event handlers\n    # The message=\"\" inclusion creates a data member in the application_data object\n    # under the key \"message\".\n    application_data = sge.SimpleApplicationState(window, message=\"\")\n\n    event_manager = sge.EventManager()\n\n#### Create an Event Handler Function\nEvery event handler is a function that satisfies the following function signature:\nevent_handler_function(values, application_data)\n\nValues are the values dictionary returned from window.read() while application_data\nis a data record object based on the SimpleActionData object.\n    \n    def _show_handler(values, application_data):\n        application_data[MESSAGE_KEY] = values[IN_KEY]\n        application_data.window[OUTPUT_KEY].update(application_data[MESSAGE_KEY])\n        application_data.window[CAPITALIZE_KEY].update(disabled=False)\n\n#### Create Event Handler Object\nHandler objects are SimpleHandler objects that marry the key of the firing UI Element\nto a handler function.\n\n    show_handler = sge.SimpleHandler(SHOW_KEY, _show_handler)\n\n#### Add the Event Handler to the Event Manager\nSimpleHandler objects are passed to the event manager object java-style through the += operator.\n\n    event_manager += show_handler\n\n#### Execute all EventHandlers in the Application Loop\nEvent handlers are tracked through a dictionary of function lists and fired in\nthe order they are added to the event handler.\n**Event handler functions that raise an Abort exception will abort handler execution\nand any un-executed handlers will not fire.**\n\nThe goal of the PySimpleGUI_Events library is to allow UI events to be broken up into\nsmall, logical pieces and keep complexity to a minimum.\n\n    event_manager.execute(event, values, application_data)\n\n\n#### app.py (full code)\n\n    import PySimpleGUI as sg\n    import PySimpleGUI_Events as sge\n    \n    OUTPUT_KEY = \"-OUTPUT-\"\n    IN_KEY = \"-IN-\"\n    CAPITALIZE_KEY = \"Capitalize\"\n    SHOW_KEY = \"Show\"\n    EXIT_KEY = \"Exit\"\n    MESSAGE_KEY = \"message\"\n    \n    \n    def _exit_handler(values, application_data):\n        application_data.window.close()\n        exit()\n    \n    \n    exit_handler = sge.SimpleHandler(EXIT_KEY, _exit_handler)\n    \n    \n    def _show_handler(values, application_data):\n        application_data[MESSAGE_KEY] = values[IN_KEY]\n        application_data.window[OUTPUT_KEY].update(application_data[MESSAGE_KEY])\n        application_data.window[CAPITALIZE_KEY].update(disabled=False)\n    \n    \n    show_handler = sge.SimpleHandler(SHOW_KEY, _show_handler)\n    \n    \n    def _capitalize_handler(values, application_data):\n        application_data.window[OUTPUT_KEY].update(application_data[MESSAGE_KEY].upper())\n    \n    \n    capitalize_handler = sge.SimpleHandler(CAPITALIZE_KEY, _capitalize_handler)\n    \n    layout = [\n        [sg.Text(\"Your typed chars appear here:\"), sg.Text(size=(15, 1), key=OUTPUT_KEY)],\n        [sg.Input(key=IN_KEY)],\n        [sg.Button(\"Capitalize\", disabled=True), sg.Button(\"Show\"), sg.Button(\"Exit\")],\n    ]\n    \n    event_manager = sge.EventManager()\n    \n    event_manager += exit_handler\n    event_manager += show_handler\n    event_manager += capitalize_handler\n    \n    window = sg.Window(\"Pattern 2B\", layout)\n    application_data = sge.SimpleApplicationState(window, message=\"\")\n    \n    while True:  # Event Loop\n        event, values = window.read()\n        print(event, values)\n        if event == sg.WIN_CLOSED:\n            break\n        event_manager.execute(event, values, application_data)\n    \n    window.close()\n\n### Project Structure Best Practices\n\n* All key values used in the layout, and event handlers should be stored in constant values, or in a constants class. Do not hard-code raw strings if possible.\n* Handler functions...\n  * Handler functions and SimpleHandler object definitions should be stored in a handlers package with files named after the owning gui elements.\n    * Example: If the Show button were to both set the string value *and* capitalize the string they should both be written in the same *show_handlers.py* file.\n  * The handlers package shouldn't import any of the functions into __init__.py. Sorting handler objects by filename allows handler objects for different GUI elements to share names across files and enables a level of standardization.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jyurkiw/PySimpleGUI_Events",
    "keywords": "gui events",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PySimpleGUI-Events",
    "package_url": "https://pypi.org/project/PySimpleGUI-Events/",
    "platform": null,
    "project_url": "https://pypi.org/project/PySimpleGUI-Events/",
    "project_urls": {
      "Homepage": "https://github.com/jyurkiw/PySimpleGUI_Events"
    },
    "release_url": "https://pypi.org/project/PySimpleGUI-Events/0.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A simple event handler system for PySimpleGUI",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13330933,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31783e990b445c5230e5fad3cfcffde9c016b8a9dac4d26e986648f5d00d8a04",
          "md5": "b4c952c6870f604b1be71b71a5baff5e",
          "sha256": "90810014178061dbdd17fcdca7851eb21a960426e995c5a0c8f00ce901d7eb87"
        },
        "downloads": -1,
        "filename": "PySimpleGUI_Events-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4c952c6870f604b1be71b71a5baff5e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5551,
        "upload_time": "2022-03-04T10:23:44",
        "upload_time_iso_8601": "2022-03-04T10:23:44.829249Z",
        "url": "https://files.pythonhosted.org/packages/31/78/3e990b445c5230e5fad3cfcffde9c016b8a9dac4d26e986648f5d00d8a04/PySimpleGUI_Events-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7ca4f3533bc0b02f025c5ddb5a6f650ad9a27326d98ff51e53fe49542c214db",
          "md5": "6406cb9bdd6990f77a9ed6435a833f5b",
          "sha256": "05e4f176ea632acba876b25618188a46ba8474d8d3b5dbfe082b691769732c37"
        },
        "downloads": -1,
        "filename": "PySimpleGUI_Events-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6406cb9bdd6990f77a9ed6435a833f5b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4607,
        "upload_time": "2022-03-04T10:23:46",
        "upload_time_iso_8601": "2022-03-04T10:23:46.152042Z",
        "url": "https://files.pythonhosted.org/packages/e7/ca/4f3533bc0b02f025c5ddb5a6f650ad9a27326d98ff51e53fe49542c214db/PySimpleGUI_Events-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52df0509a1d556d32fd1cee40ba05cec83fd90734d0b75b28383a1cc88dac7f7",
          "md5": "da5bd7c11e5450d0f7bcd2cf9202176f",
          "sha256": "6e2385913fd7678283fadca831972d647637cd780be140d1137fff950e0d577d"
        },
        "downloads": -1,
        "filename": "PySimpleGUI_Events-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "da5bd7c11e5450d0f7bcd2cf9202176f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5562,
        "upload_time": "2022-03-29T09:01:53",
        "upload_time_iso_8601": "2022-03-29T09:01:53.623033Z",
        "url": "https://files.pythonhosted.org/packages/52/df/0509a1d556d32fd1cee40ba05cec83fd90734d0b75b28383a1cc88dac7f7/PySimpleGUI_Events-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3e680b67ae5fb10efb805e91adbbe852a8daf55f031bcfdd31f2326fcc50914",
          "md5": "91c0cf8dc6111525cd44bb2f25935274",
          "sha256": "0cbac2175163852aedbe03a7caed45581ab8d8fb7576c084d69435ea99219539"
        },
        "downloads": -1,
        "filename": "PySimpleGUI_Events-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "91c0cf8dc6111525cd44bb2f25935274",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4621,
        "upload_time": "2022-03-29T09:01:55",
        "upload_time_iso_8601": "2022-03-29T09:01:55.459217Z",
        "url": "https://files.pythonhosted.org/packages/f3/e6/80b67ae5fb10efb805e91adbbe852a8daf55f031bcfdd31f2326fcc50914/PySimpleGUI_Events-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "52df0509a1d556d32fd1cee40ba05cec83fd90734d0b75b28383a1cc88dac7f7",
        "md5": "da5bd7c11e5450d0f7bcd2cf9202176f",
        "sha256": "6e2385913fd7678283fadca831972d647637cd780be140d1137fff950e0d577d"
      },
      "downloads": -1,
      "filename": "PySimpleGUI_Events-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "da5bd7c11e5450d0f7bcd2cf9202176f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5562,
      "upload_time": "2022-03-29T09:01:53",
      "upload_time_iso_8601": "2022-03-29T09:01:53.623033Z",
      "url": "https://files.pythonhosted.org/packages/52/df/0509a1d556d32fd1cee40ba05cec83fd90734d0b75b28383a1cc88dac7f7/PySimpleGUI_Events-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f3e680b67ae5fb10efb805e91adbbe852a8daf55f031bcfdd31f2326fcc50914",
        "md5": "91c0cf8dc6111525cd44bb2f25935274",
        "sha256": "0cbac2175163852aedbe03a7caed45581ab8d8fb7576c084d69435ea99219539"
      },
      "downloads": -1,
      "filename": "PySimpleGUI_Events-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "91c0cf8dc6111525cd44bb2f25935274",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4621,
      "upload_time": "2022-03-29T09:01:55",
      "upload_time_iso_8601": "2022-03-29T09:01:55.459217Z",
      "url": "https://files.pythonhosted.org/packages/f3/e6/80b67ae5fb10efb805e91adbbe852a8daf55f031bcfdd31f2326fcc50914/PySimpleGUI_Events-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}