{
  "info": {
    "author": "Jonathan Vanasco",
    "author_email": "jonathan@findmeon.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Pyramid",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pyramid_session_multi\n\nBuild Status: ![Python package](https://github.com/jvanasco/pyramid_session_multi/workflows/Python%20package/badge.svg)\n\nProvides for making multiple ad-hoc binds of `ISession` compliant Sessions onto\na `request.session_multi` namespace.\n\n# Usage\n\nInclude `pyramid_session_multi`, then register some `ISessionFactory` factories\nthat are compliant with the `ISession` interface -- just like you would with \nPyramid's built-in `.session` system.\n\n\n\tfrom pyramid.session import SignedCookieSessionFactory\n\n\tsession_factory_a = SignedCookieSessionFactory(\n\t\t'secret', cookie_name='session_a'\n\t)\n\tsession_factory_b = SignedCookieSessionFactory(\n\t\t'secret', cookie_name='session_b'\n\t)\n\n    def main(global_config, **settings):\n        config = Configurator(settings=settings)\n        config.include('pyramid_session_multi')\n        pyramid_session_multi.register_session_factory(\n        \tconfig, 'session1', session_factory_a\n        )\n        pyramid_session_multi.register_session_factory(\n        \tconfig, 'session2', session_factory_b\n        )\n        return config.make_wsgi_app()\n\nNote: The second argument to `pyramid_session_multi.register_session_factory`\nis a namespace, which we then use to access Session data in views/etc:\n\n    request.session_multi['session1']['foo'] = \"bar\"\n    request.session_multi['session2']['bar'] = \"foo\"\n\n`pyramid_session_multi` lazily evaluates each Session namespace independently of\neach other, so accessing `request.session_multi` will not instantiate any of the\ncomponent Sessions.\n\n`pyramid_session_multi` is completely independent of Pyramid's built-in Session\nsupport, so you can still use `request.session` alongside this library!\n\n\n# Advanced Usage\n\n`register_session_factory` accepts an optional argument: \"discriminator\".\n\nA \"discriminator\" is a callable function that will receive a single argument:\nthe active request.\n\nIf the discriminator function returns `True`, the SessionFactory will be invoked\nand a Session object will be mounted onto the namespace.\n\nIf the discriminator function returns a non-`True` value (e.g. `False` or `None`),\nthe SessionFactory will NOT be invoked, and `None` will be mounted onto the\nsession's namespace.\n\nConsider an application that is run on both http and https protocols.  In the\nfollowing example, `.session_multi[\"weak\"]` can always be accessed, but\n`.session_multi[\"https_only\"]` will only be available on https connections.\n\n\tfrom pyramid.session import SignedCookieSessionFactory\n\n\tsession_factory_a = SignedCookieSessionFactory(\n\t\t'secret', cookie_name='weak_cookie'\n\t)\n\tsession_factory_b = SignedCookieSessionFactory(\n\t\t'secret', cookie_name='secure_cookie', secure=True, httponly=True\n\t)\n\n\tdef session_b_discriminator(request):\n\t\tif request.scheme == 'https'\n\t\t\treturn True\n\t\treturn False\n\n    def main(global_config, **settings):\n        config = Configurator(settings=settings)\n        config.include('pyramid_session_multi')\n        pyramid_session_multi.register_session_factory(\n        \tconfig, 'weak', session_factory_a\n        )\n        pyramid_session_multi.register_session_factory(\n        \tconfig, 'https_only', session_factory_b, discriminator=session_b_discriminator\n        )\n        return config.make_wsgi_app()\n        \nWith this discriminator in place, `.session_multi[\"https_only\"]` will only be\na Pyramid `ISession` on https connections; on http connections it will be `None`.\n\n\n# why?\n\nPyramid ships with support for a single Session, which is bound to\n`request.session`. That design is great for many/most web applications, but as\nyour applications scale, your needs may grow:\n\n* If you have a HTTP site that uses HTTPS for account management, you may need\n  to support separate Sessions for HTTP and HTTPS, otherwise a \n  \"man in the middle\" or network traffic spy could use HTTP cookie to access the\n  HTTPS endpoints.\n* Client-side Sessions and signed cookies are usually faster, but sometimes you\n  have data that needs to be saved as server-side Sessions because it has\n  security implications (like a third-party oAuth token) or is too big.\n* You may have multiple interconnected apps that each need to save/share\n  isolated bits of Session data.\n\n# built-in pyramid_debugtoolbar support!\n\nJust add to your \"development.ini\" or equivalent configuration method\n\n\tdebugtoolbar.includes = pyramid_session_multi.debugtoolbar\n\nThe debugtoolbar will now have a `SessionMulti` panel which has the following\ninfo:\n\n* configuration data on all Session namespaces\n* ingress Request values of all accessed Sessions\n* egress Response values of all accessed Sessions\n\nThe `SessionMulti` panel can also be enabled to track Sessions on every Request,\nregardless of the Sessions being accessed or not.\n\nThere are two ways to enable the extended Session display used by the\n:guilabel:`SessionMulti` panel.\n\n#.  Under the :guilabel:`Settings` tab in the navigation bar, click the red\n    :guilabel:`X` mark. When there is a green :guilabel:`check` mark, each\n    request will have the ingress and egress data tracked and displayed on the\n    :guilabel:`Settings` panel output regardless of the Session being accessed\n    during the request. When there is a red :guilabel:`X` mark, only requests\n    which accessed the Session will have the ingress and egress data displayed.\n\n#.  Send a ``pdtb_active`` cookie on a per-request basis.\n    This panel's name for cookie activation is \"session_multi\".\n\n\n## What does the Panel look like?\n\n![Python package](https://raw.githubusercontent.com/jvanasco/pyramid_session_multi/main/docs/debugtoolbar_panel.png)\n\n\n# How does this library work?\n\nInstead of registering one Session factory to `request.session`, this library\ncreates a Request attribute `request.session_multi` and registers the various\nsession factories to namespaces provided within it.\n\n`request.session_multi` is a special dict that maps the namespace keys to your\n`ISession` compliant Sessions.  Sessions are lazily created on-demand, so you\nwon't incur any costs/cookies/backend-data until you use them.\n\nThis should work with most Session libraries written for Pyramid. Pyramid's\nsession support *mostly* just binds a Session factory to the `request.session`\nproperty.  Most libraries and implementations of Pyramid's `ISession` interface\nact completely independent of the framework and implement of their own logic for\ndetecting changes and deciding what to do when something changes.\n\nThis library has been used in production for several years with:\n\n* Pyramid's `SignedCookieSessionFactory`\n* [pyramid_session_redis](https://github.com/jvanasco/pyramid_session_redis)\n\n\n# Miscellaneous\n\nThere are a few \"safety\" checks for conflicts.\n\n1. A `pyramid.exceptions.ConfigurationError` will be raised if a namespace of\n   Session factory is null\n2. A `pyramid.exceptions.ConfigurationError` will be raised if a namespace or\n   factory or cookie name is re-used. \n\nA given **factory** instance can not be re-used, because that can cause conflicts\nwith cookies or backend storage keys.\n\nYou can re-use a single cookie library/type multiple times by creating a factory\nfor each setting (see the example above, which re-uses \n`SignedCookieSessionFactory` twice).\n\nIf you do not register a factory with a `cookie_name`, this library will\ntry to derive one based on a `._cooke_name` attribute.  If neither option is\navailable, an Exception will be raised on configuration.\n\n# What if Sessions should only run in certain situations?\n\n`register_session_factory` accepts a kwarg for `discriminator`, which is a\nfunction that expects a single argument of a `Request` object.\n\nIf provided and the discriminator function returns an non-``True`` value, the\n`.session_multi` namespace will be set to `None`, otherwise the namespace will be\npopulated with the result of the factory.\n\nLicense\n=======\n\nMIT",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jvanasco/pyramid_session_multi",
    "keywords": "pyramid session web",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyramid-session-multi",
    "package_url": "https://pypi.org/project/pyramid-session-multi/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyramid-session-multi/",
    "project_urls": {
      "Homepage": "https://github.com/jvanasco/pyramid_session_multi"
    },
    "release_url": "https://pypi.org/project/pyramid-session-multi/0.3.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Provides a framwork for creating multiple adhoc session binds in Pyramid.",
    "version": "0.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9881960,
  "releases": {
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67573613b2eb564007e45c09e8bc72c98ff709a7f275e8b2846a3eaeae337daf",
          "md5": "f63ea54e96da5848a7f8199d31192f7d",
          "sha256": "828cc2b51ef1a6040ebe3479b9a50de9d3324fe0e7e4d94853e795fff8cd1266"
        },
        "downloads": -1,
        "filename": "pyramid_session_multi-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "f63ea54e96da5848a7f8199d31192f7d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5690,
        "upload_time": "2017-12-05T18:20:21",
        "upload_time_iso_8601": "2017-12-05T18:20:21.966116Z",
        "url": "https://files.pythonhosted.org/packages/67/57/3613b2eb564007e45c09e8bc72c98ff709a7f275e8b2846a3eaeae337daf/pyramid_session_multi-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbf7b578b413ef416897c1cd55bf427f3dfe1df9824f68dd06d92dc3fa095eeb",
          "md5": "c1e6446a554024268f36fc24b9e5afa7",
          "sha256": "2ca2686d540adbb31c60dd7cf360c74be5c26a4b9cd39abea0d347ffcd534697"
        },
        "downloads": -1,
        "filename": "pyramid_session_multi-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "c1e6446a554024268f36fc24b9e5afa7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6301,
        "upload_time": "2017-12-08T23:45:47",
        "upload_time_iso_8601": "2017-12-08T23:45:47.300812Z",
        "url": "https://files.pythonhosted.org/packages/cb/f7/b578b413ef416897c1cd55bf427f3dfe1df9824f68dd06d92dc3fa095eeb/pyramid_session_multi-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c8bcba8e7e1e1eb9932a556612b7767aad4ecfece8b86af00acbc03f807f48f",
          "md5": "981bcd2f09a39ab2bd31347b154ca147",
          "sha256": "f5b340d8aa29761879613a0f376f6026e17c9f5c2d346340c72b4adef1c22d74"
        },
        "downloads": -1,
        "filename": "pyramid_session_multi-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "981bcd2f09a39ab2bd31347b154ca147",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6312,
        "upload_time": "2019-04-29T17:01:46",
        "upload_time_iso_8601": "2019-04-29T17:01:46.814781Z",
        "url": "https://files.pythonhosted.org/packages/7c/8b/cba8e7e1e1eb9932a556612b7767aad4ecfece8b86af00acbc03f807f48f/pyramid_session_multi-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e26a51d776cfb0d59b932a7866ed8ef31b3e48e6787ab20f80f093f9a54e6680",
          "md5": "700627e15c45b07260b8d275079448d9",
          "sha256": "d8a6a4a1f43383d6ec61b9409fce37fd647fd05f599e3389452bd214f6eeb2a3"
        },
        "downloads": -1,
        "filename": "pyramid_session_multi-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "700627e15c45b07260b8d275079448d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9073,
        "upload_time": "2019-07-25T21:47:42",
        "upload_time_iso_8601": "2019-07-25T21:47:42.572037Z",
        "url": "https://files.pythonhosted.org/packages/e2/6a/51d776cfb0d59b932a7866ed8ef31b3e48e6787ab20f80f093f9a54e6680/pyramid_session_multi-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e03f1aa00afdebe52cbb682d29938e45c342369babb6c0a43cc945a55ac4a121",
          "md5": "1fa8a76db8639c0a8cbda20916467a82",
          "sha256": "352742cb6fd42a5b5dea2339e0bb545b0aacdab88e2fd2526642101f68fa67fe"
        },
        "downloads": -1,
        "filename": "pyramid_session_multi-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1fa8a76db8639c0a8cbda20916467a82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9184,
        "upload_time": "2019-12-17T22:28:32",
        "upload_time_iso_8601": "2019-12-17T22:28:32.911247Z",
        "url": "https://files.pythonhosted.org/packages/e0/3f/1aa00afdebe52cbb682d29938e45c342369babb6c0a43cc945a55ac4a121/pyramid_session_multi-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30dff3f0de3a362815e1e1af0667228ff31ebf94b85a883c9cc6281fa747b017",
          "md5": "0ce6aa6d8029b233ae0bd562c46ea3e7",
          "sha256": "be9c7fe96bc2abb21e8f8d196c8f602a796ca2d6d24bef34a1ee048b76592ebd"
        },
        "downloads": -1,
        "filename": "pyramid_session_multi-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0ce6aa6d8029b233ae0bd562c46ea3e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9599,
        "upload_time": "2020-10-16T20:29:12",
        "upload_time_iso_8601": "2020-10-16T20:29:12.544460Z",
        "url": "https://files.pythonhosted.org/packages/30/df/f3f0de3a362815e1e1af0667228ff31ebf94b85a883c9cc6281fa747b017/pyramid_session_multi-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d437177a79966223e5fdc0e71f0257c90df9943838d3a2ffb082bd16e083e72",
          "md5": "aad16f2b7478dbc46778e0aacc6f5c4c",
          "sha256": "e36fa0f93ba1719633c66e35ae59c5498ba0d560b8eeb1a028326a248a7421f4"
        },
        "downloads": -1,
        "filename": "pyramid_session_multi-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "aad16f2b7478dbc46778e0aacc6f5c4c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11913,
        "upload_time": "2020-10-20T23:56:40",
        "upload_time_iso_8601": "2020-10-20T23:56:40.155380Z",
        "url": "https://files.pythonhosted.org/packages/8d/43/7177a79966223e5fdc0e71f0257c90df9943838d3a2ffb082bd16e083e72/pyramid_session_multi-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30fe360a994cd0d8ce9ca8a5d7aef48144bbc13e30a9772e709903bb5599da1b",
          "md5": "41051fbf3f6bf2f56eddf6072a299f05",
          "sha256": "5040c6d7443e4d48c903b972e2a03cc0023df43e1de731e172bebf1515993a62"
        },
        "downloads": -1,
        "filename": "pyramid_session_multi-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "41051fbf3f6bf2f56eddf6072a299f05",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13542,
        "upload_time": "2020-11-13T18:48:38",
        "upload_time_iso_8601": "2020-11-13T18:48:38.470821Z",
        "url": "https://files.pythonhosted.org/packages/30/fe/360a994cd0d8ce9ca8a5d7aef48144bbc13e30a9772e709903bb5599da1b/pyramid_session_multi-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c4c1329faafd11e530e076340ef3c654b0531ba647c5f1eeb649c254a611899",
          "md5": "1a6ec994031cd21c34d469a492a753fc",
          "sha256": "9d6ae9498ff1d46848f9b8df728637bb81675815692dd8bdf89a924cb246cc40"
        },
        "downloads": -1,
        "filename": "pyramid_session_multi-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1a6ec994031cd21c34d469a492a753fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13521,
        "upload_time": "2020-11-13T19:04:55",
        "upload_time_iso_8601": "2020-11-13T19:04:55.003657Z",
        "url": "https://files.pythonhosted.org/packages/7c/4c/1329faafd11e530e076340ef3c654b0531ba647c5f1eeb649c254a611899/pyramid_session_multi-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da607f9002b4a41855713f4565b19d8d14cd6c04f9005c970311069dcc142b28",
          "md5": "fb345047640fa7763326bd7060c17f28",
          "sha256": "e0dc446142cd1034b112ef1745168dff3e5d69a626bef538fc401d4492ad63c5"
        },
        "downloads": -1,
        "filename": "pyramid_session_multi-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fb345047640fa7763326bd7060c17f28",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19481,
        "upload_time": "2021-03-25T20:57:14",
        "upload_time_iso_8601": "2021-03-25T20:57:14.215736Z",
        "url": "https://files.pythonhosted.org/packages/da/60/7f9002b4a41855713f4565b19d8d14cd6c04f9005c970311069dcc142b28/pyramid_session_multi-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "da607f9002b4a41855713f4565b19d8d14cd6c04f9005c970311069dcc142b28",
        "md5": "fb345047640fa7763326bd7060c17f28",
        "sha256": "e0dc446142cd1034b112ef1745168dff3e5d69a626bef538fc401d4492ad63c5"
      },
      "downloads": -1,
      "filename": "pyramid_session_multi-0.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "fb345047640fa7763326bd7060c17f28",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19481,
      "upload_time": "2021-03-25T20:57:14",
      "upload_time_iso_8601": "2021-03-25T20:57:14.215736Z",
      "url": "https://files.pythonhosted.org/packages/da/60/7f9002b4a41855713f4565b19d8d14cd6c04f9005c970311069dcc142b28/pyramid_session_multi-0.3.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}