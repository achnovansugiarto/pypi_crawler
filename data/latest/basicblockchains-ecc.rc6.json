{
  "info": {
    "author": "",
    "author_email": "Basic Blockchains <basicblockchains@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Other Audience",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Security :: Cryptography"
    ],
    "description": "# Basic Blockchains ECC\n\nBasicBlockchains_ECC is a Python library for elliptic curve cryptography. It has all NIST secp curves available by\ndefault and is suitable for use in a cryptographically secure blockchain.\n\n# Updates\nVersion 2.2.0\n  - Verified previous versions of python using tox\n  - Package can now be run on python 3.7 and up\n\n\nVersion 2.1.0 \n  - Added compress_point and decompress_point to EllipticCurve class. Uses 0x02 or 0x03 prefix to indicate parity of y\n  - Added test for new compress/decompress functions. We run through all secp curves, generate a random point and \n    verify that compression/decompression yields the same random point.\n  - Added __repr__ method to Class for convenience. Will use JSON for representation of class.\n\n\n## Installation\n\n```pip install basicblockchains-ecc```\n\n## General Usage\n\nThe EllipticCurve class can be instantiated using coefficients a and b and an odd prime p. As well, we have the\noption to include the group order and a generator point. We use the factory method to\ngenerate curves that can be used for ECC and the ECDSA; this is the CurveFactory class. This class will verify that\n\n- p is prime\n- the curve is __non_singular__\n- if the order is given, it's prime\n- if p > MAX_PRIME, then the order is not None\n- if p <= MAX_PRIME, then the calculated order is prime\n- if p <= MAX_PRIME and the curve is instantiated using incorrect order, the curve will replace it with the\n  calculated order\n\nWe hard code the MAX_PRIME value to be the 7th Mersenne prime: 2^19 -1. This value is found in the CurveFactory class.\n\nFor p <= MAX_PRIME, we cannot verify the generator point until the curve has been created. Hence, the EllipticCurve\nclass verifies the generator when the curve is instantiated and handle any exceptions gracefully. It is possible to\ncreate a curve without prime order by instantiating the Elliptic Curve directly, but in this case the generator will\njust be a random point and not actually a generator of the group.\n\n```python\nfrom basicblockchains_ecc import elliptic_curve as EC\n\n# Set constants - known to generate curve of prime group order\na = 0\nb = 7\np = 43\n\n# Create factory\ncurve_factory = EC.CurveFactory()\n\n# Create curve\ncurve = curve_factory.create_curve(a, b, p)\n\n# Prime order\ncurve.order\n31\n\n# Random generator point chosen\ncurve.generator\n(13, 21)\n\n# Add points\ncurve.add_points((13, 21), (13, 21))\n(12, 31)\n\n# Scalar multiplication\ncurve.scalar_multiplication(2, (13, 21))\n(12, 31)\n\n# Generate ECDSA signature\nrandom_number = 13  # Acts as private key\nhex_string = '0xaabbcc'\ncurve.generate_signature(random_number, hex_string)\n(25, 1)\n\n# Validate ECDSA signature\npublic_key = curve.scalar_multiplication(random_number, curve.generator)\ncurve.verify_signature((25, 1), hex_string, public_key)\nTrue\n```\n\n## Cryptographically secure curves\n\nWe use the values provided by [NIST](https://www.secg.org/sec2-v2.pdf) to generate cryptographically securve curves.\n\nWe provide an example below using secp256k1. We use the function provided to get the secp256k1 curve. We then use\nthe randbits function from the secrets package to generate a 256-bit private key, and the sha256 function from Python's\nhashlib package to generate a random hex string. We see that we can generate a valid ECDSA.\n\n```python\nfrom hashlib import sha256\nfrom secrets import randbits\nfrom basicblockchains_ecc import elliptic_curve as EC\n\n# Get secp256k1 directly\ncrypto_curve = EC.secp256k1()\n\n# Agrees with NIST values\ncrypto_curve\n{\"a\": \"0x0\", \\\n \"b\": \"0x7\", \\\n \"p\": \"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\",\\\n \"order\": \"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\",\\\n \"generator\": \"0x0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\"}\n\n# Random hex string\nhex_string = sha256(b'Random string').hexdigest()\nhex_string\n'2dc973292d0db59152bb0405e47d85a53ada96bef92ec8eb9c4ddeb762f1907b'\n\n# Random number for private_key\nrandom_number = randbits(256)\nhex(random_number)\n'0x631d672f03d3e55e77ca5a40c58a5af577d659a355d1f842c9476460cc4ee746'\n\n# Generate signature\nsignature = crypto_curve.generate_signature(random_number, hex_string)\nsx, sy = signature\n(hex(sx), hex(sy))\n('0x695d0be339314478450fadbb8549bdd8e94bfc952cbc53f3e932fddfea1a3edc',\n '0xaffdca208bc65962a06b445fbbc4bc27a332710288590667cc41f869889f7380')\n\n# Get public key\npublic_key = crypto_curve.scalar_multiplication(random_number, crypto_curve.generator)\nux, uy = public_key\n(hex(ux), hex(uy))\n('0x97db4fa5bd0cfa0b15f4783e7ff90f5a3b25729e3a8857581c06d541c63aeff0',\n '0xc15ea3c9584b90f69d818aeed277c74cf869b55550b6b7e7bf9709d550f9d9e')\n\n# Validate signature\ncrypto_curve.verify_signature(signature, hex_string, public_key)\nTrue\n```\n\n## Math\n\nLet E(a,b,p) denote the set of [rational points](https://mathworld.wolfram.com/RationalPoint.html) of the curve y^2 =\nx^3 + ax + b over the [finite field](https://en.wikipedia.org/wiki/Finite_field) F_p, for p an odd prime. We assume\nthat p > 3 for convenience. From the curve equation, we see that for any x in F_p, a corresponding\ny will exist if and only if x is\na [quadratic residue modulo p](https://en.wikipedia.org/wiki/Quadratic_residue#Prime_modulus). For this reason, the\ncryptomath file will include various quadratic\nresidue functions.\n\n- We use [Euler's criterion](https://en.wikipedia.org/wiki/Euler%27s_criterion) to determine if n is a\n  quadratic residue or non-residue modulo a prime p.\n- We use the [Legendre symbol](https://en.wikipedia.org/wiki/Legendre_symbol) to display whether n\n  is a quadratic residue/non-residue mod p.\n- If n is a quadratic residue mod p, we use the [Tonelli-Shanks](https://en.wikipedia.org/wiki/Tonelliâ€“Shanks_algorithm)\n  algorithm to find a value x such that x^2 = n (mod p).\n\nWe let **0** denote the '[point at infinity](https://crypto.stanford.edu/pbc/notes/elliptic/group.html)' which is\nrepresented by the value ```None``` in the EllipticCurve class. The set E(a,b,p) along with **0** is an abelian\ngroup G. G will either be cyclic or be the product of two cyclic groups. When the group order is prime, G will be\ncyclic and every element except for **0** will be a generator.\n\nMore information about elliptic curves:\n\n- [Wikipedia](https://en.wikipedia.org/wiki/Elliptic_curve)\n- [Wolfram](https://mathworld.wolfram.com/EllipticCurve.html)\n\n## Tests\n\nWe have 4 tests in the test_ecc.py file in the ./tests folder:\n\n- test_curve_functions: creates random curve with small prime using factory and verifies properties\n- test_factory: we verify that the CurveFactory class fails for all desired fail conditions\n- test_secp_curves: for each secp curve, we verify some necessary curve values as well as the order through scalar\n  multiplication of a random point\n- test_point_compression: for each secp curve, we generate a random point, then verify that compressing and \n  decompressing it yields the same point\n\n## Packages\n\nWe use the Python secrets package in the ECDSA to generate a random integer. This is stated by Python to be a\ncryptographically secure random number generator. See [here](https://docs.python.org/3/library/secrets.html)\n\nWe use the isprime function from the [primefac](https://pypi.org/project/primefac/) package to verify that various\nintegers are prime. This is a suitable package for primes of high bit count.\n\nFinally, in the test_ecc folder we use the random function, but this is not used in the EllipticCurve class.\n\n## Contributing\n\nIf there are any suggested improvements, please submit a request. If any errors are found, please open an issue\nimmediately.\n\n## License\n\nMIT License\n\nCopyright (c) 2022 Basic Blockchains\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the\nSoftware.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "cryptography,elliptic curve,secp256k1,crypto",
    "license": "Copyright (c) 2022 Basic Blockchains Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "basicblockchains-ecc",
    "package_url": "https://pypi.org/project/basicblockchains-ecc/",
    "platform": null,
    "project_url": "https://pypi.org/project/basicblockchains-ecc/",
    "project_urls": {
      "Homepage": "https://github.com/BasicBlockchains/ECC"
    },
    "release_url": "https://pypi.org/project/basicblockchains-ecc/2.2.0/",
    "requires_dist": [
      "primefac"
    ],
    "requires_python": ">=3.7",
    "summary": "A class for elliptic curve cryptography",
    "version": "2.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15439388,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a143293bbbb7edbb83950b49676c1921b0e7b71782e47c728b6fed59617b4b5",
          "md5": "94e631e84f20de92ead4270fe861e609",
          "sha256": "b9ef1620a3b8def94965a6e148c944f3361b679f0cef987aef85e94ed2d16da2"
        },
        "downloads": -1,
        "filename": "basicblockchains_ecc-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94e631e84f20de92ead4270fe861e609",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 12458,
        "upload_time": "2022-07-30T21:32:02",
        "upload_time_iso_8601": "2022-07-30T21:32:02.364063Z",
        "url": "https://files.pythonhosted.org/packages/7a/14/3293bbbb7edbb83950b49676c1921b0e7b71782e47c728b6fed59617b4b5/basicblockchains_ecc-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7bbf9076c5a08475dc4a7e5b97a6450901ab2a7cf0453f5662572bca4ab8d45",
          "md5": "d281fee3ccaf159f0cc7ad1774aa9b0e",
          "sha256": "b6a0a0428434dde372e533c1851fe3f630d1e433b81891c5569f0748a5e26c37"
        },
        "downloads": -1,
        "filename": "basicblockchains_ecc-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d281fee3ccaf159f0cc7ad1774aa9b0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 14840,
        "upload_time": "2022-07-30T21:32:04",
        "upload_time_iso_8601": "2022-07-30T21:32:04.241280Z",
        "url": "https://files.pythonhosted.org/packages/d7/bb/f9076c5a08475dc4a7e5b97a6450901ab2a7cf0453f5662572bca4ab8d45/basicblockchains_ecc-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b690d967e60153748aafe6b24233627bdec188a46d09c12fc0ea1a42e352e245",
          "md5": "1920b9c58c490258cfde2554d7cabcbd",
          "sha256": "71e4b9126e9d40bf08322f57b156d91d6b9d841358eefcd6fb9cf5ac58f08364"
        },
        "downloads": -1,
        "filename": "basicblockchains_ecc-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1920b9c58c490258cfde2554d7cabcbd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 12441,
        "upload_time": "2022-07-30T21:34:38",
        "upload_time_iso_8601": "2022-07-30T21:34:38.903876Z",
        "url": "https://files.pythonhosted.org/packages/b6/90/d967e60153748aafe6b24233627bdec188a46d09c12fc0ea1a42e352e245/basicblockchains_ecc-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f9f3decb1267816630db7e4521ff0b07b4d030b2a4f2158e812ea77043bbc7b",
          "md5": "83b3a0656d52873bd5f593cd7bc9a828",
          "sha256": "cac571ea000fd1dc073ced8d4b26c3a153dd3ac4ccc87b70417dd09e6b66c163"
        },
        "downloads": -1,
        "filename": "basicblockchains_ecc-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "83b3a0656d52873bd5f593cd7bc9a828",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 14800,
        "upload_time": "2022-07-30T21:34:40",
        "upload_time_iso_8601": "2022-07-30T21:34:40.400798Z",
        "url": "https://files.pythonhosted.org/packages/2f/9f/3decb1267816630db7e4521ff0b07b4d030b2a4f2158e812ea77043bbc7b/basicblockchains_ecc-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5b99db9084f9c8f3f108c8a778e2f30ba5ee0a9b5f4c2d056d9c242306a2c0f",
          "md5": "1cf4a9cb35d34a7137fcae8eb232fdf9",
          "sha256": "1a2d99aaf2c00443a1ac1aa234dc0a77ebe92ec845eaab90ca416b902870b665"
        },
        "downloads": -1,
        "filename": "basicblockchains_ecc-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1cf4a9cb35d34a7137fcae8eb232fdf9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 12441,
        "upload_time": "2022-07-30T21:44:19",
        "upload_time_iso_8601": "2022-07-30T21:44:19.012334Z",
        "url": "https://files.pythonhosted.org/packages/f5/b9/9db9084f9c8f3f108c8a778e2f30ba5ee0a9b5f4c2d056d9c242306a2c0f/basicblockchains_ecc-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62bd44b1708ff8f0cd512409fe8f979e9f3fcfa2a3fb71289f078d2df05c8f7a",
          "md5": "413f4cdab0987027024cd0dd3d6bb1de",
          "sha256": "33ea98f56c3613bfbbda90016331340a72815c30ea788a10feba81c891c9e5df"
        },
        "downloads": -1,
        "filename": "basicblockchains_ecc-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "413f4cdab0987027024cd0dd3d6bb1de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 14805,
        "upload_time": "2022-07-30T21:44:20",
        "upload_time_iso_8601": "2022-07-30T21:44:20.847051Z",
        "url": "https://files.pythonhosted.org/packages/62/bd/44b1708ff8f0cd512409fe8f979e9f3fcfa2a3fb71289f078d2df05c8f7a/basicblockchains_ecc-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03d070d2bd48230594bc56d88520ddb2c7f8c862c0dd497ffcce5961f0b43bf7",
          "md5": "7ce138e0f9d0c005a63ccbd0831cf211",
          "sha256": "34843cf0cebdd008235d09bb26e2135c0f95062f77d3382ba7ad918aae932aac"
        },
        "downloads": -1,
        "filename": "basicblockchains_ecc-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ce138e0f9d0c005a63ccbd0831cf211",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 12474,
        "upload_time": "2022-08-04T02:20:04",
        "upload_time_iso_8601": "2022-08-04T02:20:04.212035Z",
        "url": "https://files.pythonhosted.org/packages/03/d0/70d2bd48230594bc56d88520ddb2c7f8c862c0dd497ffcce5961f0b43bf7/basicblockchains_ecc-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "217a0e1ac80dea103335a79ecf39b7b39dc7d6547b7e25408c3cf547cbd25cc2",
          "md5": "5545b9badd6affa3659decfd1fc479c3",
          "sha256": "c4b72f7c6c42045e8c2c2f2044da00f3bd8a06b06f8ebe70a6a26760ce5cca86"
        },
        "downloads": -1,
        "filename": "basicblockchains_ecc-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5545b9badd6affa3659decfd1fc479c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 14704,
        "upload_time": "2022-08-04T02:20:06",
        "upload_time_iso_8601": "2022-08-04T02:20:06.033232Z",
        "url": "https://files.pythonhosted.org/packages/21/7a/0e1ac80dea103335a79ecf39b7b39dc7d6547b7e25408c3cf547cbd25cc2/basicblockchains_ecc-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4b045ae1937e392185c4eac8d4e32d48de9380492d10e6fe6d4affaff008c56",
          "md5": "65427cbc5f74d576c425c58dfc4161fa",
          "sha256": "3ab12dd1af120e4c8c498b552032bf9101521c2fe7dde6c8939494a0811a2863"
        },
        "downloads": -1,
        "filename": "basicblockchains_ecc-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "65427cbc5f74d576c425c58dfc4161fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 13043,
        "upload_time": "2022-08-04T14:08:59",
        "upload_time_iso_8601": "2022-08-04T14:08:59.252904Z",
        "url": "https://files.pythonhosted.org/packages/c4/b0/45ae1937e392185c4eac8d4e32d48de9380492d10e6fe6d4affaff008c56/basicblockchains_ecc-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "057b1a5aa8d244ee849a9dde36ea1740774c5cfed381dfb56b95584bf13f56d4",
          "md5": "ae9daad3e7e831406cc85cfbdfa8b4ae",
          "sha256": "1004989b0dff6f96cb422e46ea245d1ea2f4d9d4a25eb7d05e68b565597ed729"
        },
        "downloads": -1,
        "filename": "basicblockchains_ecc-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ae9daad3e7e831406cc85cfbdfa8b4ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 15417,
        "upload_time": "2022-08-04T14:09:00",
        "upload_time_iso_8601": "2022-08-04T14:09:00.400462Z",
        "url": "https://files.pythonhosted.org/packages/05/7b/1a5aa8d244ee849a9dde36ea1740774c5cfed381dfb56b95584bf13f56d4/basicblockchains_ecc-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ba9b04795e4d89c935e146909abb3f349063e844b206ccb5138ba60c9c38e5f",
          "md5": "1e90ecb081b7470039186884842ac89b",
          "sha256": "01eeb9e6d8d0be4df80996ca0045c8a223fb634faae2674cf06510e8da9534d9"
        },
        "downloads": -1,
        "filename": "basicblockchains_ecc-2.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e90ecb081b7470039186884842ac89b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13144,
        "upload_time": "2022-10-17T17:29:53",
        "upload_time_iso_8601": "2022-10-17T17:29:53.175533Z",
        "url": "https://files.pythonhosted.org/packages/7b/a9/b04795e4d89c935e146909abb3f349063e844b206ccb5138ba60c9c38e5f/basicblockchains_ecc-2.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc875cd918e0a1914a261dab5c9b12e53ebfad3f9cbc2bc4e753b60121afc55f",
          "md5": "83cefa97488c62b0bdaec284fc2c71d4",
          "sha256": "e56c920baa08ae6e51c68b6697394dd39d2d3da3524cbc2fd2d46d015e868c44"
        },
        "downloads": -1,
        "filename": "basicblockchains_ecc-2.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "83cefa97488c62b0bdaec284fc2c71d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15620,
        "upload_time": "2022-10-17T17:29:54",
        "upload_time_iso_8601": "2022-10-17T17:29:54.956839Z",
        "url": "https://files.pythonhosted.org/packages/fc/87/5cd918e0a1914a261dab5c9b12e53ebfad3f9cbc2bc4e753b60121afc55f/basicblockchains_ecc-2.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7ba9b04795e4d89c935e146909abb3f349063e844b206ccb5138ba60c9c38e5f",
        "md5": "1e90ecb081b7470039186884842ac89b",
        "sha256": "01eeb9e6d8d0be4df80996ca0045c8a223fb634faae2674cf06510e8da9534d9"
      },
      "downloads": -1,
      "filename": "basicblockchains_ecc-2.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1e90ecb081b7470039186884842ac89b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 13144,
      "upload_time": "2022-10-17T17:29:53",
      "upload_time_iso_8601": "2022-10-17T17:29:53.175533Z",
      "url": "https://files.pythonhosted.org/packages/7b/a9/b04795e4d89c935e146909abb3f349063e844b206ccb5138ba60c9c38e5f/basicblockchains_ecc-2.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fc875cd918e0a1914a261dab5c9b12e53ebfad3f9cbc2bc4e753b60121afc55f",
        "md5": "83cefa97488c62b0bdaec284fc2c71d4",
        "sha256": "e56c920baa08ae6e51c68b6697394dd39d2d3da3524cbc2fd2d46d015e868c44"
      },
      "downloads": -1,
      "filename": "basicblockchains_ecc-2.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "83cefa97488c62b0bdaec284fc2c71d4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 15620,
      "upload_time": "2022-10-17T17:29:54",
      "upload_time_iso_8601": "2022-10-17T17:29:54.956839Z",
      "url": "https://files.pythonhosted.org/packages/fc/87/5cd918e0a1914a261dab5c9b12e53ebfad3f9cbc2bc4e753b60121afc55f/basicblockchains_ecc-2.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}