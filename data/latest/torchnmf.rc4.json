{
  "info": {
    "author": "Chin-Yun Yu",
    "author_email": "lolimaster.cs03@nctu.edu.tw",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Non-negative Matrix Fatorization in PyTorch\n\n[![build](https://github.com/yoyololicon/pytorch-NMF/actions/workflows/python-package.yml/badge.svg)](https://github.com/yoyololicon/pytorch-NMF/actions/workflows/python-package.yml)\n[![codecov](https://codecov.io/gh/yoyololicon/pytorch-NMF/branch/master/graph/badge.svg?token=9UXAZ6PG2N)](https://codecov.io/gh/yoyololicon/pytorch-NMF)\n[![Documentation Status](https://readthedocs.org/projects/pytorch-nmf/badge/?version=latest)](https://pytorch-nmf.readthedocs.io/en/latest/?badge=latest)\n[![PyPI version](https://badge.fury.io/py/torchnmf.svg)](https://badge.fury.io/py/torchnmf)\n\nPyTorch is not only a good deep learning framework, but also a fast tool when it comes to matrix operations and convolutions on large data.\nA great example is [PyTorchWavelets](http://github.com/tomrunia/PyTorchWavelets).\n\n\nIn this package I implement NMF, PLCA and their deconvolutional variations in PyTorch based on `torch.nn.Module`, \nso the models can be moved freely among CPU/GPU devices and utilize parallel computation of cuda.\nWe also utilize the computational graph from `torch.autograd` to derive updated coefficients so the amount of codes is reduced and easy to maintain.\n\n# Modules\n\n## NMF\n\nBasic NMF and NMFD module minimizing beta-divergence using multiplicative update rules.\n\n\nThe interface is similar to `sklearn.decomposition.NMF` with some extra options.\n\n* `NMF`: Original NMF algorithm.\n* `NMFD`: 1-D deconvolutional NMF algorithm.\n* `NMF2D`: 2-D deconvolutional NMF algorithm. \n* `NMF3D`: 3-D deconvolutional NMF algorithm. \n\n## PLCA\n\nBasic PLCA and SIPLCA module using EM algorithm to minimize\nKL-divergence between the target distribution and the estimated\ndistribution.\n\n* `PLCA`: Original PLCA (Probabilistic Latent Component Analysis)\n  algorithm.\n* `SIPLCA`: Shift-Invariant PLCA algorithm (similar to NMFD).\n* `SIPLCA2`: 2-D deconvolutional SIPLCA algorithm.\n* `SIPLCA3`: 3-D deconvolutional SIPLCA algorithm.\n\n\n\n## Usage\n\nHere is a short example of decompose a spectrogram using deconvolutional NMF:\n\n```python\nimport torch\nimport librosa\nfrom torchnmf.nmf import NMFD\nfrom torchnmf.metrics import kl_div\n\ny, sr = librosa.load(librosa.util.example_audio_file())\ny = torch.from_numpy(y)\nwindowsize = 2048\nS = torch.stft(y, windowsize, \n               window=torch.hann_window(windowsize),\n               return_complex=True).abs().cuda()\nS = S.unsqueeze(0)\n\nR = 8   # number of components\nT = 400 # size of convolution window\n\nnet = NMFD(S.shape, rank=R, T=T).cuda()\n# run extremely fast on gpu\nnet.fit(S)      # fit to target matrix S\nV = net()\nprint(kl_div(V, S))        # KL divergence to S\n```\nA more detailed version can be found [here](examples/librosa_example.py). \nSee our [documentation](https://pytorch-nmf.readthedocs.io/en/latest/) to find out more usage of this package.\n\n![](examples/librosa_example.png)\n\n## Compare to sklearn\n\nThe barchart shows the time cost per iteration with different\nbeta-divergence. It shows that pytorch-based NMF has a much more constant process time across \ndifferent beta values, which can take advantage when beta is not 0, 1, or 2.\nThis is because our implementation use the same computational graph regardless which beta-divergence are we minimizing.\nIt runs even faster when computation is done on GPU. The test is conducted on a\nAcer E5 laptop with i5-7200U CPU and GTX 950M GPU.\n\n![](examples/performance.png) \n\n## Installation\n\n```\npip install torchnmf\n```\n\n## Requirements\n\n* PyTorch\n* tqdm\n\n## Tips\n\n* If you notice significant slow down when operating on CPU, please flush denormal numbers by `\ntorch.set_flush_denormal(True)`.\n\n\n## TODO\n\n- [x] Support sparse matrix target (only on `NMF` module).\n- [x] Regularization.\n- [ ] NNDSVD initialization.\n- [x] 2/3-D deconvolutional module.\n- [x] PLCA.\n- [x] Documentation.\n- [ ] ipynb examples.\n- [x] Refactor PLCA module.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yoyololicon/pytorch-NMFs",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "torchnmf",
    "package_url": "https://pypi.org/project/torchnmf/",
    "platform": "",
    "project_url": "https://pypi.org/project/torchnmf/",
    "project_urls": {
      "Homepage": "https://github.com/yoyololicon/pytorch-NMFs"
    },
    "release_url": "https://pypi.org/project/torchnmf/0.3.4/",
    "requires_dist": [
      "torch (>=1.4)",
      "tqdm"
    ],
    "requires_python": "",
    "summary": "A pytorch package for Non-negative Matrix Factorization",
    "version": "0.3.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9902977,
  "releases": {
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2537275217743cff450b1a3a4c74a06e7c23c4a7263f3592502a8ce496aa2f76",
          "md5": "be8ae8a56ef18a482499d4e51ea082b3",
          "sha256": "8158b99afae936bfe9553004dee341da76cb60dd815d64c77f63ba0a6a878bba"
        },
        "downloads": -1,
        "filename": "torchnmf-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be8ae8a56ef18a482499d4e51ea082b3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20117,
        "upload_time": "2021-01-23T15:00:35",
        "upload_time_iso_8601": "2021-01-23T15:00:35.571333Z",
        "url": "https://files.pythonhosted.org/packages/25/37/275217743cff450b1a3a4c74a06e7c23c4a7263f3592502a8ce496aa2f76/torchnmf-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c3875ef3169111336599ec5f6e7782a6bdd82ddd2b9a9ca0f21fbeb9695708a",
          "md5": "8d633022a67b146e534555cc21a2b30c",
          "sha256": "b941362d76c64a0bde2c97781da92c3a965e1cc8cd7c0a7009b1be0278804199"
        },
        "downloads": -1,
        "filename": "torchnmf-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8d633022a67b146e534555cc21a2b30c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17379,
        "upload_time": "2021-01-23T15:00:37",
        "upload_time_iso_8601": "2021-01-23T15:00:37.086791Z",
        "url": "https://files.pythonhosted.org/packages/4c/38/75ef3169111336599ec5f6e7782a6bdd82ddd2b9a9ca0f21fbeb9695708a/torchnmf-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "820a62550ce1c62e45c3b87b6b992f51779887ef2e998046c3c233c9b7a6aa80",
          "md5": "49b31393dc99bdbe022b4c6a517c2ebe",
          "sha256": "d5a032cbbf229a8d0396c3da38f6493b52000558d9dcbe14e34b8d0961a4f7b6"
        },
        "downloads": -1,
        "filename": "torchnmf-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "49b31393dc99bdbe022b4c6a517c2ebe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20173,
        "upload_time": "2021-01-30T12:28:38",
        "upload_time_iso_8601": "2021-01-30T12:28:38.282805Z",
        "url": "https://files.pythonhosted.org/packages/82/0a/62550ce1c62e45c3b87b6b992f51779887ef2e998046c3c233c9b7a6aa80/torchnmf-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c963c3757bcd65a8bb592663ac9d9425aa9c12f1cf7c1648c4b40549d1e0bcf",
          "md5": "ca5b86d1fa4026b838f0f5eb839edd6d",
          "sha256": "3a64c77d8263ad19347fc192816b5d620c9f23dcd004d49215fdfbd2ed73a27f"
        },
        "downloads": -1,
        "filename": "torchnmf-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ca5b86d1fa4026b838f0f5eb839edd6d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16962,
        "upload_time": "2021-01-30T12:30:35",
        "upload_time_iso_8601": "2021-01-30T12:30:35.565583Z",
        "url": "https://files.pythonhosted.org/packages/5c/96/3c3757bcd65a8bb592663ac9d9425aa9c12f1cf7c1648c4b40549d1e0bcf/torchnmf-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b96260d2a60590e47fbcb672212313796c73fd9450fe1fd72379a66a8066ee31",
          "md5": "68aed5e7962dffb3da81e972ba934a6b",
          "sha256": "0ba8a9e0e50577a15d4dc0f922c876534aff7557a9910a86baee7db9f6935620"
        },
        "downloads": -1,
        "filename": "torchnmf-0.3.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "68aed5e7962dffb3da81e972ba934a6b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21570,
        "upload_time": "2021-03-12T09:41:54",
        "upload_time_iso_8601": "2021-03-12T09:41:54.114628Z",
        "url": "https://files.pythonhosted.org/packages/b9/62/60d2a60590e47fbcb672212313796c73fd9450fe1fd72379a66a8066ee31/torchnmf-0.3.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d97aea7861c8454ea51a271d1046bc02e66f6fee755008a7b6e05c645aaa6108",
          "md5": "f379ab11d9582950614e1b470d673085",
          "sha256": "c016c4c6fd2cdb154638677e60f01d591aa36c25708c68b0fe4adb961a5da702"
        },
        "downloads": -1,
        "filename": "torchnmf-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f379ab11d9582950614e1b470d673085",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17708,
        "upload_time": "2021-03-12T09:41:55",
        "upload_time_iso_8601": "2021-03-12T09:41:55.528010Z",
        "url": "https://files.pythonhosted.org/packages/d9/7a/ea7861c8454ea51a271d1046bc02e66f6fee755008a7b6e05c645aaa6108/torchnmf-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f403990e9e983d156d927a114fd088c7cde28c85d8b4be4e7be8d24a86a73584",
          "md5": "73508bb219155c70a86294b257a4bb50",
          "sha256": "2e917c4b17f5383007beb2cce1229443e7bde15d0a82001750fb0e4aa20a685c"
        },
        "downloads": -1,
        "filename": "torchnmf-0.3.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73508bb219155c70a86294b257a4bb50",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24491,
        "upload_time": "2021-03-28T07:50:55",
        "upload_time_iso_8601": "2021-03-28T07:50:55.966780Z",
        "url": "https://files.pythonhosted.org/packages/f4/03/990e9e983d156d927a114fd088c7cde28c85d8b4be4e7be8d24a86a73584/torchnmf-0.3.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c13341c6657a46f6bfe6a5acf7c94e0bf9df4a9538c8e12e6d54e1781cfd0e2f",
          "md5": "6d1ab86f46bd9acb2c30dbc1132e8abd",
          "sha256": "5c75f439ade49b7b6f1351db5549d61cad196d29a2a4319c3fd8c58471817a07"
        },
        "downloads": -1,
        "filename": "torchnmf-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6d1ab86f46bd9acb2c30dbc1132e8abd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21367,
        "upload_time": "2021-03-28T07:50:57",
        "upload_time_iso_8601": "2021-03-28T07:50:57.180597Z",
        "url": "https://files.pythonhosted.org/packages/c1/33/41c6657a46f6bfe6a5acf7c94e0bf9df4a9538c8e12e6d54e1781cfd0e2f/torchnmf-0.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f403990e9e983d156d927a114fd088c7cde28c85d8b4be4e7be8d24a86a73584",
        "md5": "73508bb219155c70a86294b257a4bb50",
        "sha256": "2e917c4b17f5383007beb2cce1229443e7bde15d0a82001750fb0e4aa20a685c"
      },
      "downloads": -1,
      "filename": "torchnmf-0.3.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "73508bb219155c70a86294b257a4bb50",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 24491,
      "upload_time": "2021-03-28T07:50:55",
      "upload_time_iso_8601": "2021-03-28T07:50:55.966780Z",
      "url": "https://files.pythonhosted.org/packages/f4/03/990e9e983d156d927a114fd088c7cde28c85d8b4be4e7be8d24a86a73584/torchnmf-0.3.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c13341c6657a46f6bfe6a5acf7c94e0bf9df4a9538c8e12e6d54e1781cfd0e2f",
        "md5": "6d1ab86f46bd9acb2c30dbc1132e8abd",
        "sha256": "5c75f439ade49b7b6f1351db5549d61cad196d29a2a4319c3fd8c58471817a07"
      },
      "downloads": -1,
      "filename": "torchnmf-0.3.4.tar.gz",
      "has_sig": false,
      "md5_digest": "6d1ab86f46bd9acb2c30dbc1132e8abd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21367,
      "upload_time": "2021-03-28T07:50:57",
      "upload_time_iso_8601": "2021-03-28T07:50:57.180597Z",
      "url": "https://files.pythonhosted.org/packages/c1/33/41c6657a46f6bfe6a5acf7c94e0bf9df4a9538c8e12e6d54e1781cfd0e2f/torchnmf-0.3.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}