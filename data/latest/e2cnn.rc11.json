{
  "info": {
    "author": "Gabriele Cesa, Maurice Weiler",
    "author_email": "cesa.gabriele@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\nGeneral E(2)-Equivariant Steerable CNNs\n--------------------------------------------------------------------------------\n**[Documentation](https://quva-lab.github.io/e2cnn/)** | **[Experiments](https://github.com/QUVA-Lab/e2cnn_experiments)** | **[Paper](https://arxiv.org/abs/1911.08251)** | **[Thesis](https://gabri95.github.io/Thesis/thesis.pdf)** | **new [escnn](https://github.com/QUVA-Lab/escnn) library**\n\n--------------------------------------------------------------------------------\n\nCheck out **our new [escnn](https://github.com/QUVA-Lab/escnn) library** which extends *e2cnn* to a wider class of equivariance groups.\n---------------------------------------------------------------------------------------------------------------------------------------\nWhile we will still provide some support for this older version,\nthis library is **deprecated** and we plan to slowly abandon it in favour of the newer version **[escnn](https://github.com/QUVA-Lab/escnn)**.\nNote that **[escnn](https://github.com/QUVA-Lab/escnn)** already includes all features of *e2cnn* and many more.\nYou can find a short summary of the main differences in the new version [here](https://github.com/QUVA-Lab/escnn/blob/master/changelog.txt).\n\n\n--------------------------------------------------------------------------------\n--------------------------------------------------------------------------------\n\n\n*e2cnn* is a [PyTorch](https://pytorch.org/) extension for equivariant deep learning.\n\n*Equivariant neural networks* guarantee a specified transformation behavior of their feature spaces under transformations of their input.\nFor instance, classical convolutional neural networks (*CNN*s) are by design equivariant to translations of their input.\nThis means that a translation of an image leads to a corresponding translation of the network's feature maps.\nThis package provides implementations of neural network modules which are equivariant under all *isometries* E(2) of the image plane \n![my equation](https://chart.apis.google.com/chart?cht=tx&chs=19&chl=\\mathbb{R}^2)\n, that is, under *translations*, *rotations* and *reflections*.\nIn contrast to conventional CNNs, E(2)-equivariant models are guaranteed to generalize over such transformations, and are therefore more data efficient.\n\nThe feature spaces of E(2)-Equivariant Steerable CNNs are defined as spaces of *feature fields*, being characterized by their transformation law under rotations and reflections.\nTypical examples are scalar fields (e.g. gray-scale images or temperature fields) or vector fields (e.g. optical flow or electromagnetic fields).\n\n![feature field examples](https://github.com/QUVA-Lab/e2cnn/raw/master/visualizations/feature_fields.png)\n\nInstead of a number of channels, the user has to specify the field *types* and their *multiplicities* in order to define a feature space.\nGiven a specified input- and output feature space, our ``R2conv`` module instantiates the *most general* convolutional mapping between them.\nOur library provides many other equivariant operations to process feature fields, including nonlinearities, mappings to produce invariant features, batch normalization and dropout.\nFeature fields are represented by ``GeometricTensor`` objects, which wrap a ``torch.Tensor`` with the corresponding transformation law.\nAll equivariant operations perform a dynamic type-checking in order to guarantee a geometrically sound processing of the feature fields.\n\nE(2)-Equivariant Steerable CNNs unify and generalize a wide range of isometry equivariant CNNs in one single framework.\nExamples include:\n- [Group Equivariant Convolutional Networks](https://arxiv.org/abs/1602.07576)\n- [Harmonic Networks: Deep Translation and Rotation Equivariance](https://arxiv.org/abs/1612.04642)\n- [Steerable CNNs](https://arxiv.org/abs/1612.08498)\n- [Rotation equivariant vector field networks](https://arxiv.org/abs/1612.09346)\n- [Learning Steerable Filters for Rotation Equivariant CNNs](https://arxiv.org/abs/1711.07289)\n- [HexaConv](https://arxiv.org/abs/1803.02108)\n- [Roto-Translation Covariant Convolutional Networks for Medical Image Analysis](https://arxiv.org/abs/1804.03393)\n\nFor more details we refer to our NeurIPS 2019 paper [General E(2)-Equivariant Steerable CNNs](https://arxiv.org/abs/1911.08251).\n\nThe library also supports equivariant Steerable partial differential operators as described in [Steerable Partial Differential Operators for Equivariant Neural Networks](https://arxiv.org/abs/2106.10163).\n\n--------------------------------------------------------------------------------\n\nThe library is structured into four subpackages with different high-level features:\n\n| Component                                                                  | Description                                                      |\n| ---------------------------------------------------------------------------| ---------------------------------------------------------------- |\n| [**e2cnn.group**](https://github.com/QUVA-Lab/e2cnn/blob/master/group/)                | implements basic concepts of *group* and *representation* theory |\n| [**e2cnn.kernels**](https://github.com/QUVA-Lab/e2cnn/blob/master/kernels/)            | solves for spaces of equivariant convolution kernels             |\n| [**e2cnn.diffops**](https://github.com/QUVA-Lab/e2cnn/blob/master/diffops/)            | solves for spaces of equivariant differential operators          |\n| [**e2cnn.gspaces**](https://github.com/QUVA-Lab/e2cnn/blob/master/gspaces/)            | defines the image plane and its symmetries                       |\n| [**e2cnn.nn**](https://github.com/QUVA-Lab/e2cnn/blob/master/nn/)                      | contains equivariant modules to build deep neural networks       |\n-------------------------------------------------------------------------------------------------------------------------------------------------\n\n## Demo\n\nSince E(2)-steerable CNNs are equivariant under rotations and reflections, their inference is independent from the choice of image orientation.\nThe visualization below demonstrates this claim by feeding rotated images into a randomly initialized E(2)-steerable CNN (left).\nThe middle plot shows the equivariant transformation of a feature space, consisting of one scalar field (color-coded) and one vector field (arrows), after a few layers.\nIn the right plot we transform the feature space into a comoving reference frame by rotating the response fields back (stabilized view).\n\n![Equivariant CNN output](https://github.com/QUVA-Lab/e2cnn/raw/master/visualizations/vectorfield.gif)\n\nThe invariance of the features in the comoving frame validates the rotational equivariance of E(2)-steerable CNNs empirically.\nNote that the fluctuations of responses are discretization artifacts due to the sampling of the image on a pixel grid, which does not allow for exact continuous rotations.\n<!-- Note that the fluctuations of responses are due to discretization artifacts coming from the  -->\n\nFor comparison, we show a feature map response of a conventional CNN for different image orientations below.\n\n![Conventional CNN output](https://github.com/QUVA-Lab/e2cnn/raw/master/visualizations/conventional_cnn.gif)\n\nSince conventional CNNs are not equivariant under rotations, the response varies randomly with the image orientation.\nThis prevents CNNs from automatically generalizing learned patterns between different reference frames.\n\n\n## Experimental results\n\nE(2)-steerable convolutions can be used as a drop in replacement for the conventional convolutions used in CNNs.\nKeeping the same training setup and *without performing hyperparameter tuning*, this leads to significant performance boosts compared to CNN baselines (values are test errors in percent):\n\n model        | CIFAR-10                | CIFAR-100                | STL-10             |\n ------------ | ----------------------- | ------------------------ | ------------------ |\n CNN baseline | 2.6 &nbsp; ± 0.1 &nbsp; | 17.1 &nbsp; ± 0.3 &nbsp; |       12.74 ± 0.23 |\n E(2)-CNN *   | 2.39       ± 0.11       | 15.55       ± 0.13       |       10.57 ± 0.70 |\n E(2)-CNN     | 2.05       ± 0.03       | 14.30       ± 0.09       | &nbsp; 9.80 ± 0.40 |\n\nThe models without * are for a fair comparison designed such that the number of parameters of the baseline is approximately preserved while models with * preserve the number of channels, and hence compute.\nFor more details we refer to our [paper](https://arxiv.org/abs/1911.08251).\n\n## Getting Started\n\n*e2cnn* is easy to use since it provides a high level user interface which abstracts most intricacies of group and representation theory away.\nThe following code snippet shows how to perform an equivariant convolution from an RGB-image to 10 *regular* feature fields (corresponding to a\n[group convolution](https://arxiv.org/abs/1602.07576)).\n\n```python3\nfrom e2cnn import gspaces                                          #  1\nfrom e2cnn import nn                                               #  2\nimport torch                                                       #  3\n                                                                   #  4\nr2_act = gspaces.Rot2dOnR2(N=8)                                    #  5\nfeat_type_in  = nn.FieldType(r2_act,  3*[r2_act.trivial_repr])     #  6\nfeat_type_out = nn.FieldType(r2_act, 10*[r2_act.regular_repr])     #  7\n                                                                   #  8\nconv = nn.R2Conv(feat_type_in, feat_type_out, kernel_size=5)       #  9\nrelu = nn.ReLU(feat_type_out)                                      # 10\n                                                                   # 11\nx = torch.randn(16, 3, 32, 32)                                     # 12\nx = nn.GeometricTensor(x, feat_type_in)                            # 13\n                                                                   # 14\ny = relu(conv(x))                                                  # 15\n```\n\nLine 5 specifies the symmetry group action on the image plane\n![my equation](https://chart.apis.google.com/chart?cht=tx&chs=19&chl=\\mathbb{R}^2)\nunder which the network should be equivariant.\nWe choose the \n[*cyclic group*](https://en.wikipedia.org/wiki/Cyclic_group)\n C<sub>8</sub>, which describes discrete rotations by multiples of 2π/8.\nLine 6 specifies the input feature field types.\nThe three color channels of an RGB image are thereby to be identified as three independent scalar fields, which transform under the\n[*trivial representation*](https://en.wikipedia.org/wiki/Trivial_representation)\n of C<sub>8</sub>.\nSimilarly, the output feature space is in line 7 specified to consist of 10 feature fields which transform under the\n[*regular representation*](https://en.wikipedia.org/wiki/Regular_representation)\nof C<sub>8</sub>.\nThe C<sub>8</sub>-equivariant convolution is then instantiated by passing the input and output type as well as the kernel size to the constructor (line 9).\nLine 10 instantiates an equivariant ReLU nonlinearity which will operate on the output field and is therefore passed the output field type.\n\nLines 12 and 13 generate a random minibatch of RGB images and wrap them into a `nn.GeometricTensor` to associate them with their correct field type.\nThe equivariant modules process the geometric tensor in line 15.\nEach module is thereby checking whether the geometric tensor passed to them satisfies the expected transformation law.\n\nBecause the parameters do not need to be updated anymore at test time, after training, any equivariant network can be \nconverted into a pure PyTorch model with no additional computational overhead in comparison to conventional CNNs.\nThe code currently supports the automatic conversion of a few commonly used modules through the `.export()` method; \ncheck the [documentation](https://quva-lab.github.io/e2cnn/api/e2cnn.nn.html) for more details.\n\nA hands-on tutorial, introducing the basic functionality of *e2cnn*, is provided in [introduction.ipynb](https://github.com/QUVA-Lab/e2cnn/blob/master/examples/introduction.ipynb).\nCode for training and evaluating a simple model on the [*rotated MNIST*](https://sites.google.com/a/lisa.iro.umontreal.ca/public_static_twiki/variations-on-the-mnist-digits) dataset is given in [model.ipynb](https://github.com/QUVA-Lab/e2cnn/blob/master/examples/model.ipynb).\n\nMore complex equivariant *Wide Resnet* models are implemented in [e2wrn.py](https://github.com/QUVA-Lab/e2cnn/blob/master/examples/e2wrn.py).\nTo try a model which is equivariant under reflections call:\n```\ncd examples\npython e2wrn.py\n```\nA version of the same model which is simultaneously equivariant under reflections and rotations of angles multiple of 90 degrees can be run via:\n```\npython e2wrn.py --rot90\n```\n\n\n## Dependencies\n\nThe library is based on Python3.7\n\n```\ntorch>=1.1\nnumpy\nscipy\n```\nOptional:\n```\npymanopt\nautograd\n```\n\nThe following packages\n```\nsympy\nrbf\n```\nare required to use the steerable differential operators.\n\nCheck the branch [legacy_py3.6](https://github.com/QUVA-Lab/e2cnn/tree/legacy_py3.6) for a Python 3.6 compatible version of the library.\n\n## Installation\n\nYou can install the latest [release](https://github.com/QUVA-Lab/e2cnn/releases) as\n\n```\npip install e2cnn\n```\n\nor you can clone this repository and manually install it with\n```\npip install git+https://github.com/QUVA-Lab/e2cnn\n```\n\n\nNOTE: the ```rbf``` dependency (necessary to use differential operators) can not\nbe installed automatically since PyPI does not support direct dependencies \n(see [here](https://stackoverflow.com/a/54894359)).\nYou can install ```rbf``` manually by following [these](https://github.com/treverhines/RBF) instructions.\n\n## Cite\n\nThe development of this library was part of the work done for our paper\n[General E(2)-Equivariant Steerable CNNs](https://arxiv.org/abs/1911.08251). \nPlease cite this work if you use our code:\n\n```\n@inproceedings{e2cnn,\n    title={{General E(2)-Equivariant Steerable CNNs}},\n    author={Weiler, Maurice and Cesa, Gabriele},\n    booktitle={Conference on Neural Information Processing Systems (NeurIPS)},\n    year={2019},\n}\n```\n\nThe implementation of steerable PDOs are part of the work done in the paper\n[Steerable Partial Differential Operators for Equivariant Neural Networks](https://arxiv.org/abs/2106.10163).\nPlease, cite it if you use this code in your own work:\n```\n@inproceedings{jenner2022steerable,\n    title={Steerable Partial Differential Operators for Equivariant Neural Networks},\n    author={Erik Jenner and Maurice Weiler},\n    booktitle={International Conference on Learning Representations},\n    year={2022},\n    url={https://openreview.net/forum?id=N9W24a4zU}\n}\n```\n\n\nFeel free to [contact us](mailto:cesa.gabriele@gmail.com,m.weiler.ml@gmail.com).\n\n## License\n\n*e2cnn* is distributed under BSD Clear license. See LICENSE file.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/QUVA-Lab/e2cnn/archive/v0.2.3.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/QUVA-Lab/e2cnn",
    "keywords": "pytorch,cnn,convolutional-networksequivariant,isometries",
    "license": "BSD 3-Clause Clear",
    "maintainer": "",
    "maintainer_email": "",
    "name": "e2cnn",
    "package_url": "https://pypi.org/project/e2cnn/",
    "platform": null,
    "project_url": "https://pypi.org/project/e2cnn/",
    "project_urls": {
      "Download": "https://github.com/QUVA-Lab/e2cnn/archive/v0.2.3.tar.gz",
      "Homepage": "https://github.com/QUVA-Lab/e2cnn"
    },
    "release_url": "https://pypi.org/project/e2cnn/0.2.3/",
    "requires_dist": [
      "torch",
      "numpy",
      "scipy",
      "sympy"
    ],
    "requires_python": ">=3.7",
    "summary": "E(2)-Equivariant CNNs Library for PyTorch",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16671446,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d023a5f5132c6cdf7e36bfd31efaa28dc8e3a1d4d3767b55e487679cc7e69116",
          "md5": "4968a6c53f49ac32b13ba0ce577fd588",
          "sha256": "b21e674255049a81526cdc883537fedda5335d94c7b357eb6a613525a52a6702"
        },
        "downloads": -1,
        "filename": "e2cnn-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4968a6c53f49ac32b13ba0ce577fd588",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.7",
        "size": 226981,
        "upload_time": "2020-09-28T14:56:32",
        "upload_time_iso_8601": "2020-09-28T14:56:32.341011Z",
        "url": "https://files.pythonhosted.org/packages/d0/23/a5f5132c6cdf7e36bfd31efaa28dc8e3a1d4d3767b55e487679cc7e69116/e2cnn-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95b175c2b872f6a3a796a637b073c9622eb8606461a4e2906f49fc44dc8fb1a5",
          "md5": "78b43bd162ca79495e967ec99f389469",
          "sha256": "bb23eedc44a3e3bfb1da542beefe49f4e67d5c1eb75f66008013c0ca20a17757"
        },
        "downloads": -1,
        "filename": "e2cnn-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "78b43bd162ca79495e967ec99f389469",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.7",
        "size": 136987,
        "upload_time": "2020-09-28T14:56:35",
        "upload_time_iso_8601": "2020-09-28T14:56:35.542795Z",
        "url": "https://files.pythonhosted.org/packages/95/b1/75c2b872f6a3a796a637b073c9622eb8606461a4e2906f49fc44dc8fb1a5/e2cnn-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e66582086dae33112e233087bec70fdf498a338ae53f44fdd291bace9cc4fa46",
          "md5": "8817f429303eb821bc5fe84d1285d6a5",
          "sha256": "b4603c286fc04bfa4010e55159dc94cf4b909ef8fadec00a3bc53a67aba83d37"
        },
        "downloads": -1,
        "filename": "e2cnn-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8817f429303eb821bc5fe84d1285d6a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.7",
        "size": 7181,
        "upload_time": "2020-10-08T09:48:53",
        "upload_time_iso_8601": "2020-10-08T09:48:53.300169Z",
        "url": "https://files.pythonhosted.org/packages/e6/65/82086dae33112e233087bec70fdf498a338ae53f44fdd291bace9cc4fa46/e2cnn-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddb81c73b56b1ba044e2aa1dfd3327310e4910eb6ab98ca7243bbfb50b160a13",
          "md5": "49149e4f7598867d2470e7cddfc702c0",
          "sha256": "50254918405b33b5d42560ea4e97c07cb30e6886b30324165647c4bf157b2510"
        },
        "downloads": -1,
        "filename": "e2cnn-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "49149e4f7598867d2470e7cddfc702c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.7",
        "size": 6582,
        "upload_time": "2020-10-08T09:48:54",
        "upload_time_iso_8601": "2020-10-08T09:48:54.988135Z",
        "url": "https://files.pythonhosted.org/packages/dd/b8/1c73b56b1ba044e2aa1dfd3327310e4910eb6ab98ca7243bbfb50b160a13/e2cnn-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b321b46ceb200cee7ca2ce650b88952082bf6c10e1d1aa5543bfd4e4625d2037",
          "md5": "8404e6ce25ff35d11bd5d578d156ddf8",
          "sha256": "26e191eed180a8dd0732452077e6279ae3d6e8a6a3036b2f3af184cb84b775e4"
        },
        "downloads": -1,
        "filename": "e2cnn-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8404e6ce25ff35d11bd5d578d156ddf8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 190639,
        "upload_time": "2020-10-08T12:13:00",
        "upload_time_iso_8601": "2020-10-08T12:13:00.351801Z",
        "url": "https://files.pythonhosted.org/packages/b3/21/b46ceb200cee7ca2ce650b88952082bf6c10e1d1aa5543bfd4e4625d2037/e2cnn-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72ac70e6469889a38ac22172479719c2f86042c94b80a536588eeb6fc10de9f4",
          "md5": "7e6a7ba88bacf6517a8038ec11416fe3",
          "sha256": "74e3cf86a12875890089f8aa29e96fdb49f34cdd45625e1c46b7b60e07a43f01"
        },
        "downloads": -1,
        "filename": "e2cnn-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7e6a7ba88bacf6517a8038ec11416fe3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 118691,
        "upload_time": "2020-10-08T12:13:02",
        "upload_time_iso_8601": "2020-10-08T12:13:02.286684Z",
        "url": "https://files.pythonhosted.org/packages/72/ac/70e6469889a38ac22172479719c2f86042c94b80a536588eeb6fc10de9f4/e2cnn-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1beb97f0224e1ec42205cbe19ac79e887c867497e4f2d16fc801e590e11eafb0",
          "md5": "40827007ddacb5038eca08781c57dbd0",
          "sha256": "be4c228fac97b8ef96852cdd7b44cff9d644252021c0d3e302c26e024c1ffb8e"
        },
        "downloads": -1,
        "filename": "e2cnn-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "40827007ddacb5038eca08781c57dbd0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 190635,
        "upload_time": "2020-10-23T12:07:43",
        "upload_time_iso_8601": "2020-10-23T12:07:43.210224Z",
        "url": "https://files.pythonhosted.org/packages/1b/eb/97f0224e1ec42205cbe19ac79e887c867497e4f2d16fc801e590e11eafb0/e2cnn-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97d130460c63eff5ffbb447fa498b97e5f25fc6326567587c9f498834b9a158a",
          "md5": "819c870e69477d277ece9c1dd6035bec",
          "sha256": "2ce72bb9d1af57ee6975ffa462ab0e8241aa88e5680b1ac9a288e6867bb9d9e2"
        },
        "downloads": -1,
        "filename": "e2cnn-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "819c870e69477d277ece9c1dd6035bec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 118687,
        "upload_time": "2020-10-23T12:07:45",
        "upload_time_iso_8601": "2020-10-23T12:07:45.002499Z",
        "url": "https://files.pythonhosted.org/packages/97/d1/30460c63eff5ffbb447fa498b97e5f25fc6326567587c9f498834b9a158a/e2cnn-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64b5bc2e7217de911c23c4be7daa768bf3a737f69f50c12307d2d288580da025",
          "md5": "358f1404590a67b9c1fe5ef8a662c6a0",
          "sha256": "1b437b26142cc0d0485c1c50289af94f3d46b0a0edf1ad6f0f590d0e697cb85a"
        },
        "downloads": -1,
        "filename": "e2cnn-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "358f1404590a67b9c1fe5ef8a662c6a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 190773,
        "upload_time": "2020-11-12T11:34:21",
        "upload_time_iso_8601": "2020-11-12T11:34:21.427663Z",
        "url": "https://files.pythonhosted.org/packages/64/b5/bc2e7217de911c23c4be7daa768bf3a737f69f50c12307d2d288580da025/e2cnn-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d38de489c4e14e69cc01ce50628e00b080decef78a95446c6f0fc9ecf8179ad2",
          "md5": "ab6b4802e0733c3b7fc9593a9c4f8b98",
          "sha256": "b212c32d64cf9547d2997d1691bd670fe9230a4d55b897c146e7a7e6f2b2f138"
        },
        "downloads": -1,
        "filename": "e2cnn-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "ab6b4802e0733c3b7fc9593a9c4f8b98",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 118839,
        "upload_time": "2020-11-12T11:34:23",
        "upload_time_iso_8601": "2020-11-12T11:34:23.518436Z",
        "url": "https://files.pythonhosted.org/packages/d3/8d/e489c4e14e69cc01ce50628e00b080decef78a95446c6f0fc9ecf8179ad2/e2cnn-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5694205aa567cbaaa57887025eecc546c7a86b3b4986f4e39291f8707d46546",
          "md5": "2579e350b068ecf4853b85da1e299dfe",
          "sha256": "a0636a481c3094c11725540f5c0a06dcd27c3bfd48ac0495d2a68f5c8b377dfa"
        },
        "downloads": -1,
        "filename": "e2cnn-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2579e350b068ecf4853b85da1e299dfe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 191139,
        "upload_time": "2021-03-17T13:39:27",
        "upload_time_iso_8601": "2021-03-17T13:39:27.734611Z",
        "url": "https://files.pythonhosted.org/packages/e5/69/4205aa567cbaaa57887025eecc546c7a86b3b4986f4e39291f8707d46546/e2cnn-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11675c94e3da6d280233f050e3625ee6c7607f0d2bc07b28fc218d53ac0b3458",
          "md5": "2f3e8f12166a1363e03cd82daeab05c2",
          "sha256": "4bf7292c04f6419a23daab2e79292d8ca231985911c91682ee2dca06c7da5595"
        },
        "downloads": -1,
        "filename": "e2cnn-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "2f3e8f12166a1363e03cd82daeab05c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 119375,
        "upload_time": "2021-03-17T13:39:29",
        "upload_time_iso_8601": "2021-03-17T13:39:29.822878Z",
        "url": "https://files.pythonhosted.org/packages/11/67/5c94e3da6d280233f050e3625ee6c7607f0d2bc07b28fc218d53ac0b3458/e2cnn-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5834f6191540a830fa072b5b85f73710195b9f88ece750a521539597aa77d6c",
          "md5": "1e92872c7432f419da0136433764f86d",
          "sha256": "0e7facd35f638e3d3083c93e2612968ca51a7c3c055d4f883043aa07598b6cbc"
        },
        "downloads": -1,
        "filename": "e2cnn-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e92872c7432f419da0136433764f86d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 191446,
        "upload_time": "2021-03-29T17:10:53",
        "upload_time_iso_8601": "2021-03-29T17:10:53.775959Z",
        "url": "https://files.pythonhosted.org/packages/e5/83/4f6191540a830fa072b5b85f73710195b9f88ece750a521539597aa77d6c/e2cnn-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f604667c67d45087cea93473535e1e6da08dfdd0213cf7ecc19cf9ce1ddbd4a",
          "md5": "98a6169836ee9468e4df54a880e1b68e",
          "sha256": "f2e93c56d1082c2247c02e5a3347f3afa2a4829f1c2a8ea4cd43fa97508315fa"
        },
        "downloads": -1,
        "filename": "e2cnn-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "98a6169836ee9468e4df54a880e1b68e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 119679,
        "upload_time": "2021-03-29T17:10:55",
        "upload_time_iso_8601": "2021-03-29T17:10:55.543346Z",
        "url": "https://files.pythonhosted.org/packages/8f/60/4667c67d45087cea93473535e1e6da08dfdd0213cf7ecc19cf9ce1ddbd4a/e2cnn-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c78d722bc9fdecf8474da375d8e98a11e18f3cc6c843a0abcc171a8a3fb4db47",
          "md5": "12431cf8d00cd6538bfd4039a27406e2",
          "sha256": "56aadd0dcc4799d748f5ac6ccedb08dbe76d8e68d06444453139024b9a725549"
        },
        "downloads": -1,
        "filename": "e2cnn-0.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12431cf8d00cd6538bfd4039a27406e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 193541,
        "upload_time": "2021-07-06T09:41:12",
        "upload_time_iso_8601": "2021-07-06T09:41:12.931569Z",
        "url": "https://files.pythonhosted.org/packages/c7/8d/722bc9fdecf8474da375d8e98a11e18f3cc6c843a0abcc171a8a3fb4db47/e2cnn-0.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8558eb831b960ea09112bfb395fede23b74ee3c94809abfbec7121333339cc10",
          "md5": "4645480e1b20d3af09dee0c6aca97978",
          "sha256": "3f97a1637cb3e6992187ca1b85316482b772513b2cfbc668d348a2a256cad105"
        },
        "downloads": -1,
        "filename": "e2cnn-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "4645480e1b20d3af09dee0c6aca97978",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 121360,
        "upload_time": "2021-07-06T09:41:14",
        "upload_time_iso_8601": "2021-07-06T09:41:14.792691Z",
        "url": "https://files.pythonhosted.org/packages/85/58/eb831b960ea09112bfb395fede23b74ee3c94809abfbec7121333339cc10/e2cnn-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43e7061cb173df84ca5846a01ef688e0acc2ba78c299e395f68615b78733e537",
          "md5": "ac94adc29f212935c40592376b762258",
          "sha256": "b032bc0a618f18751a0d9ad96d1fdb9fada32224edf89d7ec101f2ba7de43096"
        },
        "downloads": -1,
        "filename": "e2cnn-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac94adc29f212935c40592376b762258",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 224657,
        "upload_time": "2021-10-21T18:23:11",
        "upload_time_iso_8601": "2021-10-21T18:23:11.903344Z",
        "url": "https://files.pythonhosted.org/packages/43/e7/061cb173df84ca5846a01ef688e0acc2ba78c299e395f68615b78733e537/e2cnn-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25fbba9190281b9ef8786588f2debc061844b9c95420bad383726bbd597af6ef",
          "md5": "5f8ef86fc16a49920eea03d3f8547979",
          "sha256": "f41b4db7940dcaea48329a7765ccc54c4c1ab281eaa875b461fd19d38f0d4d0b"
        },
        "downloads": -1,
        "filename": "e2cnn-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5f8ef86fc16a49920eea03d3f8547979",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 148830,
        "upload_time": "2021-10-21T18:23:14",
        "upload_time_iso_8601": "2021-10-21T18:23:14.160784Z",
        "url": "https://files.pythonhosted.org/packages/25/fb/ba9190281b9ef8786588f2debc061844b9c95420bad383726bbd597af6ef/e2cnn-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1aea7d5c4d5fd989c6971e72d1623bb6b9b79e9d9170f8340d44e5838105d2f4",
          "md5": "85b2a75ef781a9b8a57ac13a2be2e73c",
          "sha256": "69424766c8c9dd9c00a64adc563f0deb24d84fd8bced38797ada69ada53ceda5"
        },
        "downloads": -1,
        "filename": "e2cnn-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "85b2a75ef781a9b8a57ac13a2be2e73c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 225107,
        "upload_time": "2022-07-23T15:01:18",
        "upload_time_iso_8601": "2022-07-23T15:01:18.723607Z",
        "url": "https://files.pythonhosted.org/packages/1a/ea/7d5c4d5fd989c6971e72d1623bb6b9b79e9d9170f8340d44e5838105d2f4/e2cnn-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b189ebea6076870a6575d34dc73dede54496943637c0b5867864a91195f45077",
          "md5": "5f0d2d070535e96f9f8b78afc03b5aba",
          "sha256": "e4fdf4fcf8eb1229ce9aea38c1249e627ba871db80f90e97c7c21634197d31b8"
        },
        "downloads": -1,
        "filename": "e2cnn-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5f0d2d070535e96f9f8b78afc03b5aba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 149243,
        "upload_time": "2022-07-23T15:01:20",
        "upload_time_iso_8601": "2022-07-23T15:01:20.970148Z",
        "url": "https://files.pythonhosted.org/packages/b1/89/ebea6076870a6575d34dc73dede54496943637c0b5867864a91195f45077/e2cnn-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a14d05b0dd45848e41c1b5e93755682a9e593f19a92e01aeb57b327f15881e3f",
          "md5": "759a6d07bccc93077048cf82a7b73644",
          "sha256": "a4cb2a3bca8926c628abc41dc4921a05c8758f21c1e69b5d5e641699c12d4f7d"
        },
        "downloads": -1,
        "filename": "e2cnn-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "759a6d07bccc93077048cf82a7b73644",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 225291,
        "upload_time": "2023-02-02T21:35:33",
        "upload_time_iso_8601": "2023-02-02T21:35:33.329332Z",
        "url": "https://files.pythonhosted.org/packages/a1/4d/05b0dd45848e41c1b5e93755682a9e593f19a92e01aeb57b327f15881e3f/e2cnn-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fa3d52132d2ddc24920eb983dac21b0a2f1c10defdc9b76484ba2fabb5a8992",
          "md5": "1a2b9b0bfc1f7fb4033bd1cf8b9b7d14",
          "sha256": "121cbf2b4ec16bf60a36d165c8eb6651947d1144aaabd6ad5efd2b93722b41f2"
        },
        "downloads": -1,
        "filename": "e2cnn-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1a2b9b0bfc1f7fb4033bd1cf8b9b7d14",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 149681,
        "upload_time": "2023-02-02T21:35:35",
        "upload_time_iso_8601": "2023-02-02T21:35:35.670638Z",
        "url": "https://files.pythonhosted.org/packages/5f/a3/d52132d2ddc24920eb983dac21b0a2f1c10defdc9b76484ba2fabb5a8992/e2cnn-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a14d05b0dd45848e41c1b5e93755682a9e593f19a92e01aeb57b327f15881e3f",
        "md5": "759a6d07bccc93077048cf82a7b73644",
        "sha256": "a4cb2a3bca8926c628abc41dc4921a05c8758f21c1e69b5d5e641699c12d4f7d"
      },
      "downloads": -1,
      "filename": "e2cnn-0.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "759a6d07bccc93077048cf82a7b73644",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 225291,
      "upload_time": "2023-02-02T21:35:33",
      "upload_time_iso_8601": "2023-02-02T21:35:33.329332Z",
      "url": "https://files.pythonhosted.org/packages/a1/4d/05b0dd45848e41c1b5e93755682a9e593f19a92e01aeb57b327f15881e3f/e2cnn-0.2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5fa3d52132d2ddc24920eb983dac21b0a2f1c10defdc9b76484ba2fabb5a8992",
        "md5": "1a2b9b0bfc1f7fb4033bd1cf8b9b7d14",
        "sha256": "121cbf2b4ec16bf60a36d165c8eb6651947d1144aaabd6ad5efd2b93722b41f2"
      },
      "downloads": -1,
      "filename": "e2cnn-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "1a2b9b0bfc1f7fb4033bd1cf8b9b7d14",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 149681,
      "upload_time": "2023-02-02T21:35:35",
      "upload_time_iso_8601": "2023-02-02T21:35:35.670638Z",
      "url": "https://files.pythonhosted.org/packages/5f/a3/d52132d2ddc24920eb983dac21b0a2f1c10defdc9b76484ba2fabb5a8992/e2cnn-0.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}