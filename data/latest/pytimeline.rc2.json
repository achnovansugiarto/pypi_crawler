{
  "info": {
    "author": "Felix Soubelet",
    "author_email": "felix.soubelet@cern.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Utilities"
    ],
    "description": "<h1 align=\"center\">\n    <b>Pytimeline</b>\n</h1>\n\n`pytimeline` is a command line tool for the creating of SVG timelines from JSON.\n\n<p align=\"center\">\n  <img alt=\"Simple example\" src=\"examples/timeline.png\">\n</p>\n\nNote: This is a rewrite of the old [timeline script](https://github.com/jasonreisman/Timeline) from Jason Reisman and full credits go to him for most of the work.\n\n## Install\n\nThe package is compatible with `Python 3.7+` and can be installed in your current environment with `pip`:\n```bash\npython -m pip install pytimeline\n```\n\n## Usage\n\nWhen the package is installed in your activated environment, it can be called through `python -m colorframe`.\nDetailed usage goes as follows:\n```bash\nUsage: python -m pytimeline [OPTIONS]\n\nOptions:\n  --inputfile PATH                Path to the input JSON file with the\n                                  timeline data.  [required]\n  --outputdir DIRECTORY           Path to the directory in which to write the\n                                  output SVG file. If not provided, will\n                                  pickthe directory of the input file.\n  --logging [trace|debug|info|warning|error|critical]\n                                  Sets the logging level.  [default: info]\n  --help                          Show this message and exit.\n```\n\nThe script will parse your input file and export the `SVG` document in the provided output folder or, if not provided, in the same directory as the input file.\n\nOne can otherwise import the high-level object from the package and use it directly:\n```python\nfrom pytimeline import Timeline\n\ntimeline = Timeline(inputfile=\"your_input.json\")\ntimeline.build()\ntimeline.save(\"timeline.svg\")\n```\n\n## Input Data Format\n\nThe input file is a `JSON` document that describes the start and end points of the timeline, tickmarks along the main axis, as well as callouts to specifc dates/times, and eras which highlight temporal periods.\n\nAll date fields can be described in several common date formats and may optionally also include a time of day (e.g. \"3/14/15 9:26am\").\nDatetime parsing is handled by the `pendulum` package, and one can find all the accepted date formats [in the relevant documentation](https://pendulum.eustace.io/docs/#parsing).\n\n### Required and Optional Fields\n\nThe required fields are `width`, `start`, and `end`. \nAll other fields are optional.  \n\n**Required:**\n* `width` describes the width, in pixels, of the output SVG document, and the height will be determined automatically.\n* `start` is the date/time of the leftmost date/time on the axis.\n* `end` is the date/time of the rightmost date/time on the axis.\n\n**Optional:**\n* `num_ticks` contols the number of tickmarks along the axis between the `start` and `end` date/times (inclusive).  If this field is not present, no tickmarks will be generated except for those at the `start` and `end` dates.\n* `tick_format` describes the string format of the tickmarks along the axis. See the [valid formats](https://pendulum.eustace.io/docs/#formatter) for the `pendulum` package.\n\n### Special Fields\n\n#### Callouts\n\nCallouts along the axis are described in the `callouts` list, in which each entry is also a list with two to three string values:\n* The first value is the `description` of the callout (e.g., \"Pi Day\"). It is required.\n* The second value is the `date/time` of the callout (e.g., \"3/14/15 9:26am\"). It is required.\n* The third value can specify a `color` for the callout, either as a hexcode or a valid SVG color alias. It is optional.\n\nCallout examples:\n```JSON\n[\"Ultimate Pi Day\", \"3/14/15 9:26am\"]\n```\nOr, with a custom callout color:\n```JSON\n[\"Ultimate Pi Day\", \"3/14/15 9:26am\", \"#CD3F85\"]\n```\n#### Eras\n\nEras are highlighted temporal periods and are described in the `eras` list.\nLike the `callouts` list, each entry in the eras list is itself a list with either three or four string values:\n* The first value is the `description` of the era (e.g., \"Summer\"). It is required.\n* The second value is the start `date/time` of the era (e.g., \"6/21/15 12am\"). It is required.\n* The third value is the end `date/time` of the era (e.g. \"9/20/15 11:59pm\"). It is required.\n* The fourth value can specify a `color` for the era, either as a hexcode or a valid SVG color alias. It is optional.\n\nEra examples:\n```JSON\n[\"Summer 2015\", \"6/21/15 12am\", \"9/20/15 11:59pm\"]\n```\nOr, with a custom era color:\n```JSON\n[\"Summer 2015\", \"6/21/15 12am\", \"9/20/15 11:59pm\", \"Orange\"]\n```\n\n## Simple Example\n\nThe `JSON` input for the example timeline at the top of this `README` is:\n```json\n{\n\t\"width\" : 750,\n\t\"start\" : \"Oct 8 2015\",\n\t\"end\" : \"Oct 15 2015\",\t\n\t\"num_ticks\" : 14,\n\t\"tick_format\" : \"%b %d, %Y - %I:%M%p\",\n\t\"callouts\" : [\n\t\t[\"ABC easy as 123\", \"Oct 14, 2015 3pm\"],\t\t\n\t\t[\"Midnight Event A\", \"12am Oct 10, 2015\", \"#DD0000\"],\n\t\t[\"Noon Event A\", \"12pm Oct 10, 2015\"],\t\t\n\t\t[\"5pm Event A\", \"5pm Oct 10, 2015\"],\t\t\t\t\n\t\t[\"Something amazing happening\", \"Oct 11, 2015\"],\n\t\t[\"Awesome Event B\", \"Oct 12, 2015\", \"#DD0000\"],\n\t\t[\"C\", \"Oct 13, 2015\"],\n\t\t[\"Event E\", \"Oct 14, 2015\"]\n\t],\n\t\"eras\" : [\n\t\t[\"Era 1\", \"12pm Oct 8, 2015\", \"3am Oct 12, 2015\", \"#CD3F85\"],\n\t\t[\"Era 2\", \"8am Oct 12, 2015\", \"12am Oct 15, 2015\", \"#C0C0FF\"]\n\t]\n}\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fsoubelet/Timeline",
    "keywords": "Timeline,SVG,Generator",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytimeline",
    "package_url": "https://pypi.org/project/pytimeline/",
    "platform": "",
    "project_url": "https://pypi.org/project/pytimeline/",
    "project_urls": {
      "Homepage": "https://github.com/fsoubelet/Timeline",
      "Repository": "https://github.com/fsoubelet/Timeline"
    },
    "release_url": "https://pypi.org/project/pytimeline/0.2.0/",
    "requires_dist": [
      "svgwrite (>=1.4,<2.0)",
      "pendulum (>=2.1,<3.0)",
      "loguru (>=0.5.3,<0.6.0)",
      "click (>=8.0,<9.0)"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "A library for creating and cleaning SVG timelines.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12278099,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a6033a016c0baf43c94e055f59d9430a0ec3252d39a594d3f324ee1058a1c26",
          "md5": "fe4419ed9caa1976059b2562263ae5a3",
          "sha256": "19da9d64fbc0003cee97d85e427f30b37b26ae56f9a470434e02d403efc606b4"
        },
        "downloads": -1,
        "filename": "pytimeline-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe4419ed9caa1976059b2562263ae5a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 5278,
        "upload_time": "2021-12-11T00:41:55",
        "upload_time_iso_8601": "2021-12-11T00:41:55.924033Z",
        "url": "https://files.pythonhosted.org/packages/4a/60/33a016c0baf43c94e055f59d9430a0ec3252d39a594d3f324ee1058a1c26/pytimeline-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f53d76c2d31ef12862b5adf6e1f82010ac9ff41c4bb8341d8ea467b2241f0dca",
          "md5": "c9e1cea05cc70b49de46d07af68078f5",
          "sha256": "74dc8474e6eacfba882093aa8691b6bece5162498aa5525dcc87ab394b9e5840"
        },
        "downloads": -1,
        "filename": "pytimeline-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c9e1cea05cc70b49de46d07af68078f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 5710,
        "upload_time": "2021-12-11T00:41:57",
        "upload_time_iso_8601": "2021-12-11T00:41:57.853370Z",
        "url": "https://files.pythonhosted.org/packages/f5/3d/76c2d31ef12862b5adf6e1f82010ac9ff41c4bb8341d8ea467b2241f0dca/pytimeline-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1dc26a59dc89c402d0877feb19a24bec838fdbfc429fa01055bcdc985105235e",
          "md5": "3f4efc9e02677acaa1452251a5b05480",
          "sha256": "c7e3ac03249b0728dc915cdf8004a3a1f1328746c47e712ba7edb62bda7f5865"
        },
        "downloads": -1,
        "filename": "pytimeline-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f4efc9e02677acaa1452251a5b05480",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 9193,
        "upload_time": "2021-12-11T23:14:36",
        "upload_time_iso_8601": "2021-12-11T23:14:36.651600Z",
        "url": "https://files.pythonhosted.org/packages/1d/c2/6a59dc89c402d0877feb19a24bec838fdbfc429fa01055bcdc985105235e/pytimeline-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b79c4169eeb388a81db659ad5c6951472ee42ec79a54464d5215ec8fb47ce22",
          "md5": "56d68d16b07228b94abf473554f7cf04",
          "sha256": "e7849aefafe9ca0c5bcc83269d2112142f3bcf3d670d10bb8f3e4cd6d3ba936f"
        },
        "downloads": -1,
        "filename": "pytimeline-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "56d68d16b07228b94abf473554f7cf04",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 11694,
        "upload_time": "2021-12-11T23:14:37",
        "upload_time_iso_8601": "2021-12-11T23:14:37.992841Z",
        "url": "https://files.pythonhosted.org/packages/5b/79/c4169eeb388a81db659ad5c6951472ee42ec79a54464d5215ec8fb47ce22/pytimeline-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1dc26a59dc89c402d0877feb19a24bec838fdbfc429fa01055bcdc985105235e",
        "md5": "3f4efc9e02677acaa1452251a5b05480",
        "sha256": "c7e3ac03249b0728dc915cdf8004a3a1f1328746c47e712ba7edb62bda7f5865"
      },
      "downloads": -1,
      "filename": "pytimeline-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3f4efc9e02677acaa1452251a5b05480",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 9193,
      "upload_time": "2021-12-11T23:14:36",
      "upload_time_iso_8601": "2021-12-11T23:14:36.651600Z",
      "url": "https://files.pythonhosted.org/packages/1d/c2/6a59dc89c402d0877feb19a24bec838fdbfc429fa01055bcdc985105235e/pytimeline-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5b79c4169eeb388a81db659ad5c6951472ee42ec79a54464d5215ec8fb47ce22",
        "md5": "56d68d16b07228b94abf473554f7cf04",
        "sha256": "e7849aefafe9ca0c5bcc83269d2112142f3bcf3d670d10bb8f3e4cd6d3ba936f"
      },
      "downloads": -1,
      "filename": "pytimeline-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "56d68d16b07228b94abf473554f7cf04",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 11694,
      "upload_time": "2021-12-11T23:14:37",
      "upload_time_iso_8601": "2021-12-11T23:14:37.992841Z",
      "url": "https://files.pythonhosted.org/packages/5b/79/c4169eeb388a81db659ad5c6951472ee42ec79a54464d5215ec8fb47ce22/pytimeline-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}