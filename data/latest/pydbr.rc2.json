{
  "info": {
    "author": "Ivan Georgiev",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pydbr\nDatabricks client SDK for Python with command line interface for Databricks REST APIs.\n\n{:toc}\n\n## Introduction\n\nPydbr (short of Python-Databricks) package provides python SDK for Databricks REST API:\n\n* dbfs\n* workspace\n* jobs\n* runs\n\nThe package also comes with a useful CLI which might be very helpful in automation.\n\n## Installation\n\n```bash\n$ pip install pydbr\n```\n\n\n\n## Databricks CLI\n\nDatabricks command line client provides convenient way to interact with Databricks cluster at the command line. A very popular use of such approach in in automation tasks, like DevOps pipelines or third party workflow managers.\n\nYou can call the Databricks CLI using convenient shell command `pydbr`:\n\n```bash\n$ pydbr --help\n```\n\n or using python module:\n\n```bash\n$ python -m pydbr.cli --help\n```\n\nTo connect to the Databricks cluster, you can supply arguments at the command line:\n\n* `--bearer-token`\n* `--url`\n* `--cluster-id`\n\nAlternatively, you can define environment variables. Command line arguments take precedence.\n\n```bash\nexport DATABRICKS_URL='https://westeurope.azuredatabricks.net/'\nexport DATABRICKS_BEARER_TOKEN='dapixyz89u9ufsdfd0'\nexport DATABRICKS_CLUSTER_ID='1234-456778-abc234'\nexport DATABRICKS_ORG_ID='87287878293983984'\n```\n\n\n\n### DBFS\n\n#### List DBFS items\n\n```bash\n# List items on DBFS\npydbr dbfs ls --json-indent 3 FileStore/movielens\n```\n\n```bash\n[\n   {\n      \"path\": \"/FileStore/movielens/ml-latest-small\",\n      \"is_dir\": true,\n      \"file_size\": 0,\n      \"is_file\": false,\n      \"human_size\": \"0 B\"\n   }\n]\n```\n\n#### Download file from DBFS\n\n```bash\n# Download a file and print to STDOUT\npydbr dbfs get ml-latest-small/movies.csv\n```\n\n#### Download directory from DBFS\n\n```bash\n# Download recursively entire directory and store locally\npydbr dbfs get -o ml-local ml-latest-small\n```\n\n\n\n### Workspace\n\nDatabricks workspace contains notebooks and other items.\n\n#### List workspace\n\n```bash\n####################\n# List workspace\n# Default path is root - '/'\n$ pydbr workspace ls\n# auto-add leading '/'\n$ pydbr workspace ls 'Users'\n# Space-indentend json output with number of spaces\n$ pydbr workspace --json-indent 4 ls\n# Custom indent string\n$ pydbr workspace ls --json-indent='>'\n```\n\n\n\n#### Export items from Databricks workspace\n\n```bash\n#####################\n# Export workspace items\n# Export everything in source format using defaults: format=SOURCE, path=/\npydbr workspace export -o ./.dev/export\n# Export everything in DBC format\npydbr workspace export -f DBC -o ./.dev/export.\n# When path is folder, export is recursive\npydbr workspace export -o ./.dev/export-utils 'Utils'\n# Export single ITEM\npydbr workspace export -o ./.dev/GetML 'Utils/Download MovieLens.py'\n```\n\n\n\n### Runs\n\nThis command group implements the [`jobs/runs` Databricks REST API](https://docs.databricks.com/dev-tools/api/latest/jobs.html#runs-submit).\n\n#### Submit a notebook\n\nImplements: [https://docs.databricks.com/dev-tools/api/latest/jobs.html#runs-submit](https://docs.databricks.com/dev-tools/api/latest/jobs.html#runs-submit)\n\n```bash\n$ pydbr runs submit \"Utils/Download MovieLens\"\n```\n\n```\n{\"run_id\": 4}\n```\n\nYou can retrieve the job information using `runs get`:\n\n```bash\n$ pydbr runs get 4 -i 3\n```\n\n\n\nIf you need to pass parameters, use the `--parameters` or `-p` option and specify JSON text.\n\n```bash\n$ pydbr runs submit -p '{\"run_tag\":\"20250103\"}' \"Utils/Download MovieLens\"\n```\n\nYou can refer also to parameters in JSON file:\n\n```bash\n$ pydbr runs submit -p '@params.json' \"Utils/Download MovieLens\"\n```\n\nYou can use the parameters in the notebook and will also be able to see them in the run metadata:\n\n```bash\npydbr runs get-output -i 3 8\n```\n\n```json\n{\n   \"notebook_output\": {\n      \"result\": \"Downloaded files (tag: 20250103): README.txt, links.csv, movies.csv, ratings.csv, tags.csv\",\n      \"truncated\": false\n   },\n   \"error\": null,\n   \"metadata\": {\n      \"job_id\": 8,\n      \"run_id\": 8,\n      \"creator_user_name\": \"your.name@gmail.com\",\n      \"number_in_job\": 1,\n      \"original_attempt_run_id\": null,\n      \"state\": {\n         \"life_cycle_state\": \"TERMINATED\",\n         \"result_state\": \"SUCCESS\",\n         \"state_message\": \"\"\n      },\n      \"schedule\": null,\n      \"task\": {\n         \"notebook_task\": {\n            \"notebook_path\": \"/Utils/Download MovieLens\",\n            \"base_parameters\": {\n               \"run_tag\": \"20250103\"\n            }\n         }\n      },\n      \"cluster_spec\": {\n         \"existing_cluster_id\": \"xxxx-yyyyyy-zzzzzz\"\n      },\n      \"cluster_instance\": {\n         \"cluster_id\": \"xxxx-yyyyyy-zzzzzzzz\",\n         \"spark_context_id\": \"8734983498349834\"\n      },\n      \"overriding_parameters\": null,\n      \"start_time\": 1592067357734,\n      \"setup_duration\": 0,\n      \"execution_duration\": 11000,\n      \"cleanup_duration\": 0,\n      \"trigger\": null,\n      \"run_name\": \"pydbr-1592067355\",\n      \"run_page_url\": \"https://westeurope.azuredatabricks.net/?o=89349849834#job/8/run/1\",\n      \"run_type\": \"SUBMIT_RUN\"\n   }\n}\n```\n\n\n\n#### Get run metadata\n\nImplements: [Databricks REST runs/get](https://docs.databricks.com/dev-tools/api/latest/jobs.html#runs-get) \n\n```bash\n$ pydbr runs get -i 3 6\n```\n\n```json\n{\n   \"job_id\": 6,\n   \"run_id\": 6,\n   \"creator_user_name\": \"your.name@gmail.com\",\n   \"number_in_job\": 1,\n   \"original_attempt_run_id\": null,\n   \"state\": {\n      \"life_cycle_state\": \"TERMINATED\",\n      \"result_state\": \"SUCCESS\",\n      \"state_message\": \"\"\n   },\n   \"schedule\": null,\n   \"task\": {\n      \"notebook_task\": {\n         \"notebook_path\": \"/Utils/Download MovieLens\"\n      }\n   },\n   \"cluster_spec\": {\n      \"existing_cluster_id\": \"xxxx-yyyyy-zzzzzz\"\n   },\n   \"cluster_instance\": {\n      \"cluster_id\": \"xxxx-yyyyy-zzzzzz\",\n      \"spark_context_id\": \"783487348734873873\"\n   },\n   \"overriding_parameters\": null,\n   \"start_time\": 1592062497162,\n   \"setup_duration\": 0,\n   \"execution_duration\": 11000,\n   \"cleanup_duration\": 0,\n   \"trigger\": null,\n   \"run_name\": \"pydbr-1592062494\",\n   \"run_page_url\": \"https://westeurope.azuredatabricks.net/?o=398348734873487#job/6/run/1\",\n   \"run_type\": \"SUBMIT_RUN\"\n}\n```\n\n\n\n#### List Runs\n\nImplements: [Databricks REST runs/list](https://docs.databricks.com/dev-tools/api/latest/jobs.html#runs-list)\n\n```bash\n$ pydbr runs ls\n```\n\n\n\nTo get only the runs for a particular job:\n\n```bash\n# Get job with job-id=4\n$ pydbr runs ls 4 -i 3\n```\n\n```json\n{\n   \"runs\": [\n      {\n         \"job_id\": 4,\n         \"run_id\": 4,\n         \"creator_user_name\": \"your.name@gmail.com\",\n         \"number_in_job\": 1,\n         \"original_attempt_run_id\": null,\n         \"state\": {\n            \"life_cycle_state\": \"PENDING\",\n            \"state_message\": \"\"\n         },\n         \"schedule\": null,\n         \"task\": {\n            \"notebook_task\": {\n               \"notebook_path\": \"/Utils/Download MovieLens\"\n            }\n         },\n         \"cluster_spec\": {\n            \"existing_cluster_id\": \"xxxxx-yyyy-zzzzzzz\"\n         },\n         \"cluster_instance\": {\n            \"cluster_id\": \"xxxxx-yyyy-zzzzzzz\"\n         },\n         \"overriding_parameters\": null,\n         \"start_time\": 1592058826123,\n         \"setup_duration\": 0,\n         \"execution_duration\": 0,\n         \"cleanup_duration\": 0,\n         \"trigger\": null,\n         \"run_name\": \"pydbr-1592058823\",\n         \"run_page_url\": \"https://westeurope.azuredatabricks.net/?o=abcdefghasdf#job/4/run/1\",\n         \"run_type\": \"SUBMIT_RUN\"\n      }\n   ],\n   \"has_more\": false\n}\n```\n\n\n\n#### Export run \n\nImplements: [Databricks REST runs/export](https://docs.databricks.com/dev-tools/api/latest/jobs.html#runs-export)\n\n```bash\n$ pydbr runs export --content-only 4 > .dev/run-view.html\n```\n\n\n\n#### Get run output\n\nImplements: [Databricks REST runs/get-output](https://docs.databricks.com/dev-tools/api/latest/jobs.html#runs-get-output)\n\n```bash\n$ pydbr runs get-output -i 3 6\n```\n\n```json\n{\n   \"notebook_output\": {\n      \"result\": \"Downloaded files: README.txt, links.csv, movies.csv, ratings.csv, tags.csv\",\n      \"truncated\": false\n   },\n   \"error\": null,\n   \"metadata\": {\n      \"job_id\": 5,\n      \"run_id\": 5,\n      \"creator_user_name\": \"your.name@gmail.com\",\n      \"number_in_job\": 1,\n      \"original_attempt_run_id\": null,\n      \"state\": {\n         \"life_cycle_state\": \"TERMINATED\",\n         \"result_state\": \"SUCCESS\",\n         \"state_message\": \"\"\n      },\n      \"schedule\": null,\n      \"task\": {\n         \"notebook_task\": {\n            \"notebook_path\": \"/Utils/Download MovieLens\"\n         }\n      },\n      \"cluster_spec\": {\n         \"existing_cluster_id\": \"xxxx-yyyyy-zzzzzzz\"\n      },\n      \"cluster_instance\": {\n         \"cluster_id\": \"xxxx-yyyyy-zzzzzzz\",\n         \"spark_context_id\": \"8973498743973498\"\n      },\n      \"overriding_parameters\": null,\n      \"start_time\": 1592062147101,\n      \"setup_duration\": 1000,\n      \"execution_duration\": 11000,\n      \"cleanup_duration\": 0,\n      \"trigger\": null,\n      \"run_name\": \"pydbr-1592062135\",\n      \"run_page_url\": \"https://westeurope.azuredatabricks.net/?o=89798374987987#job/5/run/1\",\n      \"run_type\": \"SUBMIT_RUN\"\n   }\n}\n```\n\n\n\nTo get only the exit output:\n\n```bash\n$ pydbr runs get-output -r 6\n```\n\n```\nDownloaded files: README.txt, links.csv, movies.csv, ratings.csv, tags.csv\n```\n\n\n\n## Python Client SDK for Databricks REST APIs\n\nTo implement your own Databricks REST API client, you can use the Python Client SDK for Databricks REST APIs.\n\n### Create Databricks connection\n\n```python\n# Get Databricks workspace connection\ndbc = pydbr.connect(\n        bearer_token='dapixyzabcd09rasdf',\n        url='https://westeurope.azuredatabricks.net')\n```\n\n### DBFS\n\n```python\n# Get list of items at path /FileStore\ndbc.dbfs.ls('/FileStore')\n\n# Check if file or directory exists\ndbc.dbfs.exists('/path/to/heaven')\n\n# Make a directory and it's parents\ndbc.dbfs.mkdirs('/path/to/heaven')\n\n# Delete a directory recusively\ndbc.dbfs.rm('/path', recursive=True)\n\n# Download file block starting 1024 with size 2048\ndbc.dbfs.read('/data/movies.csv', 1024, 2048)\n\n# Download entire file\ndbc.dbfs.read_all('/data/movies.csv')\n```\n\n### Databricks workspace\n\n```python\n# List root workspace directory\ndbc.workspace.ls('/')\n\n# Check if workspace item exists\ndbc.workspace.exists('/explore')\n\n# Check if workspace item is a directory\ndbc.workspace.is_directory('/')\n\n# Export notebook in default (SOURCE) format\ndbc.workspace.export('/my_notebook')\n\n# Export notebook in HTML format\ndbc.workspace.export('/my_notebook', 'HTML')\n```\n\n\n\n## Build and publish\n\n```bash\npip install wheel twine\npython setup.py sdist bdist_wheel\npython -m twine upload dist/*\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ivangeorgiev/pydbr",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pydbr",
    "package_url": "https://pypi.org/project/pydbr/",
    "platform": "",
    "project_url": "https://pypi.org/project/pydbr/",
    "project_urls": {
      "Homepage": "https://github.com/ivangeorgiev/pydbr"
    },
    "release_url": "https://pypi.org/project/pydbr/0.0.7/",
    "requires_dist": [
      "click",
      "requests"
    ],
    "requires_python": ">=3.6",
    "summary": "Databricks client SDK with command line client for Databricks REST APIs",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7784732,
  "releases": {
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f380f9f42fc8f76d2bb5a2342ab1acea2e111c8b521a666b53ae1b54ff57af2",
          "md5": "70644ae5c40b5fe73111d55d81dfac0b",
          "sha256": "526f57363ac13606f4e0cd1e1daee98ea65002b67990d0b8dbbc4c30bdac0fa7"
        },
        "downloads": -1,
        "filename": "pydbr-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70644ae5c40b5fe73111d55d81dfac0b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 39700,
        "upload_time": "2020-07-25T10:41:19",
        "upload_time_iso_8601": "2020-07-25T10:41:19.235727Z",
        "url": "https://files.pythonhosted.org/packages/7f/38/0f9f42fc8f76d2bb5a2342ab1acea2e111c8b521a666b53ae1b54ff57af2/pydbr-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30735e3301499516a7d3d1fc2cf96955af0e40f2a8c54b8c2b5412d4065cdee1",
          "md5": "91298e58baeeefd562382aca8269167b",
          "sha256": "c6eb8e53c88eb840ad8d8e76339897db8d54592080c04ef2d63731a95b41d77f"
        },
        "downloads": -1,
        "filename": "pydbr-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "91298e58baeeefd562382aca8269167b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18538,
        "upload_time": "2020-07-25T10:41:23",
        "upload_time_iso_8601": "2020-07-25T10:41:23.286688Z",
        "url": "https://files.pythonhosted.org/packages/30/73/5e3301499516a7d3d1fc2cf96955af0e40f2a8c54b8c2b5412d4065cdee1/pydbr-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f0cc3c2b1e82031c75c9277903ad7f8da6462f01a6dd7c17ebcab932bbf4132",
          "md5": "e073a45a9122b2477a29c79302d93a26",
          "sha256": "56b9b848523af5bd3eb8bf7a268db39a675967449201e28a2142276c2ae66b5a"
        },
        "downloads": -1,
        "filename": "pydbr-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e073a45a9122b2477a29c79302d93a26",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 42055,
        "upload_time": "2020-07-25T12:40:09",
        "upload_time_iso_8601": "2020-07-25T12:40:09.002873Z",
        "url": "https://files.pythonhosted.org/packages/6f/0c/c3c2b1e82031c75c9277903ad7f8da6462f01a6dd7c17ebcab932bbf4132/pydbr-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09c6618f1b2cacaa50ebae807f4e862bd61e8f32b5ca0d44fb2422ce74156274",
          "md5": "ae9a413b96a519fd5647cf9a241e070a",
          "sha256": "829fb2d99c263a43629a093d77b2afeddee40e105be4f8f98920e2d0db46e56a"
        },
        "downloads": -1,
        "filename": "pydbr-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "ae9a413b96a519fd5647cf9a241e070a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17810,
        "upload_time": "2020-07-25T12:40:10",
        "upload_time_iso_8601": "2020-07-25T12:40:10.670791Z",
        "url": "https://files.pythonhosted.org/packages/09/c6/618f1b2cacaa50ebae807f4e862bd61e8f32b5ca0d44fb2422ce74156274/pydbr-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6f0cc3c2b1e82031c75c9277903ad7f8da6462f01a6dd7c17ebcab932bbf4132",
        "md5": "e073a45a9122b2477a29c79302d93a26",
        "sha256": "56b9b848523af5bd3eb8bf7a268db39a675967449201e28a2142276c2ae66b5a"
      },
      "downloads": -1,
      "filename": "pydbr-0.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e073a45a9122b2477a29c79302d93a26",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 42055,
      "upload_time": "2020-07-25T12:40:09",
      "upload_time_iso_8601": "2020-07-25T12:40:09.002873Z",
      "url": "https://files.pythonhosted.org/packages/6f/0c/c3c2b1e82031c75c9277903ad7f8da6462f01a6dd7c17ebcab932bbf4132/pydbr-0.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "09c6618f1b2cacaa50ebae807f4e862bd61e8f32b5ca0d44fb2422ce74156274",
        "md5": "ae9a413b96a519fd5647cf9a241e070a",
        "sha256": "829fb2d99c263a43629a093d77b2afeddee40e105be4f8f98920e2d0db46e56a"
      },
      "downloads": -1,
      "filename": "pydbr-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "ae9a413b96a519fd5647cf9a241e070a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 17810,
      "upload_time": "2020-07-25T12:40:10",
      "upload_time_iso_8601": "2020-07-25T12:40:10.670791Z",
      "url": "https://files.pythonhosted.org/packages/09/c6/618f1b2cacaa50ebae807f4e862bd61e8f32b5ca0d44fb2422ce74156274/pydbr-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}