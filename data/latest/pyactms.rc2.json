{
  "info": {
    "author": "Sebastian Blum",
    "author_email": "sebast.blum@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Other Audience",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Topic :: Artistic Software",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Human Machine Interfaces",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "[![Build Status](https://travis-ci.org/seblum/pyactms.svg?branch=master)](https://travis-ci.org/seblum/pyactms)\n[![Coverage Status](https://coveralls.io/repos/github/seblum/pyactms/badge.svg)](https://coveralls.io/github/seblum/pyactms)\n[![PyPI version fury.io](https://img.shields.io/pypi/v/pyactms?color=green)](https://pypi.python.org/pypi/pyactms/)\n[![PyPI license](https://img.shields.io/pypi/l/pyactms)](https://pypi.python.org/pypi/pyactms/)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/pyactms)](https://pypi.python.org/pypi/pyactms/)\n\n\n# ActMS - python interface\n\nThis is a library to enable mental simulation of multiple cognitive models within the Cognitive Architecture ACT-R.\n\nACT-MS (ACT-R Mental Simulation) is an implementation based on the Python dispatcher included in ACT-R Version 7.13, which facilitates the use of ACT-R commands within a Python environment and vice versa. ACT-MS incorporates multiple functions relevant to coordinate the simultaneous simulation of multiple ACT-R models. An exemplary use case can be found in the below publication [1].\n\nOverall, the library contains methods to: \n\n- to forward and exchange parameters between the metamodel and the submodels.\n- save the exchanged simulation parameters in a dictionary.\n- enable utility learning over multiple ACT-R runs by saving the utility of one run respectively.\n\n\n![Structure of MS implementation](https://raw.githubusercontent.com/seblum/pyactms/master/mentalsimulation.png)\n\n\n## Installation\n\n```bash\npip install pyactms\n```\nor\n```bash\npip install git+https://github.com/seblum/actms\n```\n\n\n## Usage\n\nTake a look at the [examples](examples) folder for an exemplary use case.\n\nCall of the method <em>simulate-submodel</em> in a production of the metamodel to start the mental simulation of another specified ACT-R model <em>middle-model</em>.\n\n```lisp\n\n(p simulate-middle-submodel\n  =goal>\n    state           simulate-submodel\n    action          =actionnumber\n  =imaginal>\n==>\n  =imaginal>\n  =goal>\n    state           free\n    action          =actionnumber\n!eval! (\"simulate-submodel\" \"middle-model\" =actionnumber)\n  )\n\n```\n\nCall of the method <em>return-from-submodel</em> in a production of the submodel to forward given parameters to the metamodel and save them within a specific slot of the imaginal chunk <em>resultactionone</em>.\n\n```lisp\n\n(P action-retour-1\n   =goal>\n     state          action-1\n     action\t    1\n   ?manual>   \n     state          free\n   =imaginal>\n     response       =duration\n==>\n   +manual>              \n     cmd\t    press-key     \n     key       \t    =duration\n   -imaginal>\n   =goal>\n     state \t    idle\n     action\t    idle\n!eval! (\"return-from-submodel\" =duration 1 \"retrieve-action\" \"resultactionone\")\n  )\n\n```\n\nInitialization of ACT-MS. Saving the session number in the simulation results. Run of ACT-R model. Fetching the saved simulation / forwarded paramenters and saving them to a dataframe. Printing the dataframe.\n\n```python\n\nimport actr\nimport actms as ms\nsession = 1\n\nactms = ActMS('mainmodelname')\n\nactr.run_until_condition(\"end-program\", True)       \n\n# return simulation results as df\nprinter = actms.Protocol(\"Session\", session)\n\nprinter.to_csv('simulation_results.csv')\n\n```\n\n\n## Files\n\n- **actms.py** - Contains the interface of ACT-MS and methods to load a user data set into the visicon of ACT-R.\n\n- **actr.py** - Contains the dispatcher of ACT-R version 7.12., which is necessary to form a connection between python and ACT-R (see http://act-r.psy.cmu.edu/). \n\n\n## Example\n\n- **RUN-metamodel.py** \n\n- **EF-submodel-left.lisp**\n\n- **EF-metamodel.lisp** \n\n\n## TODO\nPossible additional feature to add:\n\n- [ ] Add more dynamic and additional possibilites to save simulation parameters\n- [ ] Add more possibilities to exchange parameters\n- [ ] Add debugging support \n\n\n## Developing pyactms\nTo install pyactcv along with the tools to develop and run tests please run the following in your virtualenv:\n\n```bash\n$ pip install -e .[dev]\n```\n\n\n## Bibliography\n\n[1] <cite> new paper </cite> \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/seblum/pyactms",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyactms",
    "package_url": "https://pypi.org/project/pyactms/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyactms/",
    "project_urls": {
      "Homepage": "https://github.com/seblum/pyactms"
    },
    "release_url": "https://pypi.org/project/pyactms/0.0.2/",
    "requires_dist": [
      "pandas",
      "numpy",
      "pytest ; extra == 'dev'",
      "coverage ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "coveralls ; extra == 'dev'"
    ],
    "requires_python": ">=3.6",
    "summary": "Enable mental simulation of multiple cognitive models within the Cognitive Architecture ACT-R",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8984653,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5e32f3951e01d84fe650c643e3057e505878b5f5951629603d046dff1160c83",
          "md5": "ea899e3a02fccdf228bd8971da52c7a6",
          "sha256": "d87866bc0a78fb2ca1e012a4a8c68e244a8bf2d637facfccf431de20821bd65d"
        },
        "downloads": -1,
        "filename": "pyactms-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea899e3a02fccdf228bd8971da52c7a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11148,
        "upload_time": "2020-12-22T20:48:46",
        "upload_time_iso_8601": "2020-12-22T20:48:46.476121Z",
        "url": "https://files.pythonhosted.org/packages/c5/e3/2f3951e01d84fe650c643e3057e505878b5f5951629603d046dff1160c83/pyactms-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd1eeceaec10271440ffd74313568f08aad82e1813c76b5830c56aa52e0ab11f",
          "md5": "0fb058ac921f26ee63ebaeb7933f4b54",
          "sha256": "cda4463ee3a64c9d98db0fd12ed6272fbf1372f641ac01b26305ae5b39dbdbc4"
        },
        "downloads": -1,
        "filename": "pyactms-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0fb058ac921f26ee63ebaeb7933f4b54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20378,
        "upload_time": "2020-12-22T20:48:49",
        "upload_time_iso_8601": "2020-12-22T20:48:49.518570Z",
        "url": "https://files.pythonhosted.org/packages/cd/1e/eceaec10271440ffd74313568f08aad82e1813c76b5830c56aa52e0ab11f/pyactms-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd45c096a4d516af709303a56056b205019ba870283b9fd194c1ef80a8ce390c",
          "md5": "b6b068ee2ae91035a38c680c4c72dab2",
          "sha256": "93fca6d1e0937357c915a22b2e9d5d4f8570a7a5604c05015c7ca468eef5b82e"
        },
        "downloads": -1,
        "filename": "pyactms-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b6b068ee2ae91035a38c680c4c72dab2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11164,
        "upload_time": "2020-12-25T16:05:04",
        "upload_time_iso_8601": "2020-12-25T16:05:04.946024Z",
        "url": "https://files.pythonhosted.org/packages/bd/45/c096a4d516af709303a56056b205019ba870283b9fd194c1ef80a8ce390c/pyactms-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "518ada00bca10f71e5acdf24ec872aa0732aba80f1a06e3968d4ed6854b270eb",
          "md5": "e50d0495406286da4266884aadaa2ee4",
          "sha256": "3b6bcd893958cc2defe5c03d179e5c568280b7a80b3eb2f55e5474e0598bbfef"
        },
        "downloads": -1,
        "filename": "pyactms-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e50d0495406286da4266884aadaa2ee4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20718,
        "upload_time": "2020-12-25T16:05:06",
        "upload_time_iso_8601": "2020-12-25T16:05:06.713539Z",
        "url": "https://files.pythonhosted.org/packages/51/8a/da00bca10f71e5acdf24ec872aa0732aba80f1a06e3968d4ed6854b270eb/pyactms-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd45c096a4d516af709303a56056b205019ba870283b9fd194c1ef80a8ce390c",
        "md5": "b6b068ee2ae91035a38c680c4c72dab2",
        "sha256": "93fca6d1e0937357c915a22b2e9d5d4f8570a7a5604c05015c7ca468eef5b82e"
      },
      "downloads": -1,
      "filename": "pyactms-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b6b068ee2ae91035a38c680c4c72dab2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11164,
      "upload_time": "2020-12-25T16:05:04",
      "upload_time_iso_8601": "2020-12-25T16:05:04.946024Z",
      "url": "https://files.pythonhosted.org/packages/bd/45/c096a4d516af709303a56056b205019ba870283b9fd194c1ef80a8ce390c/pyactms-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "518ada00bca10f71e5acdf24ec872aa0732aba80f1a06e3968d4ed6854b270eb",
        "md5": "e50d0495406286da4266884aadaa2ee4",
        "sha256": "3b6bcd893958cc2defe5c03d179e5c568280b7a80b3eb2f55e5474e0598bbfef"
      },
      "downloads": -1,
      "filename": "pyactms-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "e50d0495406286da4266884aadaa2ee4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 20718,
      "upload_time": "2020-12-25T16:05:06",
      "upload_time_iso_8601": "2020-12-25T16:05:06.713539Z",
      "url": "https://files.pythonhosted.org/packages/51/8a/da00bca10f71e5acdf24ec872aa0732aba80f1a06e3968d4ed6854b270eb/pyactms-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}