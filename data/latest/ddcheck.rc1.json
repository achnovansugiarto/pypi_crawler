{
  "info": {
    "author": "Jiri Barton",
    "author_email": "jbar@tele3.cz",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "=======\nddcheck\n=======\n\nCheck URLs and manage the respective records in DynDNS.\n\n\nDescription\n===========\n\n``ddcheck`` accepts a list of healthckeck URLs, resolve them to IPs and makes\nHTTP requests directly to the IPs. When given IP is recognized as down, it will\nremove the record from DynDNS\n\nFeatures\n--------\n\n* IPv4 and IPv6 support (A and AAAA records in DNS)\n* Traversing over CNAMEs to target A/AAAA records\n* IP is marked as failed when it either timeouts (configurable in seconds) or\n  returns defined HTTP code (for example 500, by default turned off)\n* Dry run mode: Will not change the DynDNS recods. Outputs only ``curl`` commands\n  instead.\n* Will not delete IPs from DynDNS, when all the IPs in the dns record fail.\n\nInstallation\n============\n\n``pip install 'git+https://github.com/whiskybar/ddcheck.git#egg=ddcheck'``\n\n\nUsage\n=====\n\n\nCLI\n---\n\nDynDNS credetials can be defined either by env variables, or as parameters.\n\n::\n\n    # ddcheck --help\n\n    usage: ddcheck [-h] [-d] [-e ERROR_CODES] [-t TIMEOUT] [-D]\n                   [--dynect-customer DYNECT_CUSTOMER] [--dynect-user DYNECT_USER]\n                   [--dynect-password DYNECT_PASSWORD]\n                   URL [URL ...]\n\n    Run a ddcheck.\n\n    positional arguments:\n      URL                   URL to check\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -d, --debug           Debug logging on\n      -e ERROR_CODES, --error-codes ERROR_CODES\n                            HTTP codes considered as non-OK\n      -t TIMEOUT, --timeout TIMEOUT\n                            URL timeout\n      -D, --dry-run         Do not really update the dyndns. Just print records to\n                            delete.\n      --dynect-customer DYNECT_CUSTOMER\n                            Customer name in DynEct (defaults to\n                            DYNECT_CUSTOMER_NAME env variable)\n      --dynect-user DYNECT_USER\n                            Username in DynEct (defaults to DYNECT_USER_NAME env\n                            variable)\n      --dynect-password DYNECT_PASSWORD\n                            Password in DynEct (defaults to DYNECT_PASSWORD env\n                            variable)\n\n\n\nExample\n~~~~~~~\n\n::\n\n    export DYNECT_PASSWORD=aaa\n    export DYNECT_USER_NAME=bbb\n    export DYNECT_CUSTOMER_NAME=ccc\n    ddcheck -e 500 --debug --dry-run http://root.example1.com/health/ http://cname.example2.com/check/\n\nPython\n------\n\nExample\n~~~~~~~",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/whiskybar/ddcheck",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "ddcheck",
    "package_url": "https://pypi.org/project/ddcheck/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/ddcheck/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/whiskybar/ddcheck"
    },
    "release_url": "https://pypi.org/project/ddcheck/0.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Check URLs and manage the respective records in DynDNS.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 976146,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "acd2b0fc4d2f50fd4cbc35572fe3cf2314b50fb71c69ee0390e16e5869699474",
          "md5": "08939a63220e8d97446da9181b3d43dd",
          "sha256": "3b214f3dc0d435ba109fa3ad207d37a646ac9260e9effd7987bda4316f110e4d"
        },
        "downloads": -1,
        "filename": "ddcheck-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "08939a63220e8d97446da9181b3d43dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6024,
        "upload_time": "2014-01-21T15:09:47",
        "upload_time_iso_8601": "2014-01-21T15:09:47.200397Z",
        "url": "https://files.pythonhosted.org/packages/ac/d2/b0fc4d2f50fd4cbc35572fe3cf2314b50fb71c69ee0390e16e5869699474/ddcheck-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "acd2b0fc4d2f50fd4cbc35572fe3cf2314b50fb71c69ee0390e16e5869699474",
        "md5": "08939a63220e8d97446da9181b3d43dd",
        "sha256": "3b214f3dc0d435ba109fa3ad207d37a646ac9260e9effd7987bda4316f110e4d"
      },
      "downloads": -1,
      "filename": "ddcheck-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "08939a63220e8d97446da9181b3d43dd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6024,
      "upload_time": "2014-01-21T15:09:47",
      "upload_time_iso_8601": "2014-01-21T15:09:47.200397Z",
      "url": "https://files.pythonhosted.org/packages/ac/d2/b0fc4d2f50fd4cbc35572fe3cf2314b50fb71c69ee0390e16e5869699474/ddcheck-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}