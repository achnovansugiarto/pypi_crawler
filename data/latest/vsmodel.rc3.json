{
  "info": {
    "author": "Matthew Knight James",
    "author_email": "mattkjames7@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# vsmodel\nA simple implementation of the Volland-Stern electric field model (Volland, 1973; Stern, 1975).\n\nThe electric field model here is only defined in the equatorial plane around the Earth, where any vertical component returns is filled with zeros.\n\nThere are two implementations of this model: one is based on that used by Zhao et al. 2017 which uses the Maynard and Chen 1975 relation between the *K<sub>p</sub>* index and the convection electric field; the other uses the work of Goldstein et al 2005 which separates the convection electric field into two components.\n\n## Installation\n\nInstall using this Github repo:\n\n```bash\ngit clone https://github.com/mattkjames7/vsmodel\ncd vsmodel\n```\n\nthen either using `setup.py`:\n\n```bash\npython3 setup.py install --user\n```\n\nor by creating a wheel:\n\n```bash\npython3 setup.py bdist_wheel\npip3 install dist/vsmodel-x.x.x-py3-none-any.whl --user\n```\n\nwhere `x.x.x` should be replaced with the current version number.\n\n\n\nAlternatively, install using `pip3`:\n\n```bash\npip3 install vsmodel --user\n```\n\n\n\n## Usage\n\nThere are two functions which can be used to calculate the model electric field, one using cylindrical coordinates and the other using the Cartesian Solar Magnetic (SM) coordinate system:\n\n```python\nimport vsmodel\n\n##### The simple model using Maynard and Chen ####\n#the Cartesian model\nEx,Ey,Ez = vsmodel.ModelCart(x,y,Kp)\n\n#the cylindrical model\nEr,Ep,Ez = vsmodel.ModelE(r,phi,Kp)\n\n\n#### The Goldstein et al 2005 version ####\n#the Cartesian model, either by providing solar wind speed (Vsw) and IMF Bz (Bz), or the equivalent E field (Esw)\nEx,Ey,Ez = vsmodel.ModelCart(x,y,Kp,Vsw=Vsw,Bz=Bz)\nEx,Ey,Ez = vsmodel.ModelCart(x,y,Kp,Esw=Esw)\n\n#the cylindrical model\nEr,Ep,Ez = vsmodel.ModelE(r,phi,Kp,Vsw=Vsw,Bz=Bz)\nEr,Ep,Ez = vsmodel.ModelE(r,phi,Kp,Esw=Esw)\n```\n\nwhere `Kp` is the *K<sub>p</sub>* index; `x` and `y`  are the Cartesian coordinates in the magnetic equatorial plane (in R<sub>E</sub>, where R<sub>E</sub>=6378 km); `r` and `phi` are the equatorial radial distance from the centre of the Earth (in *R<sub>E</sub>*) and the azimuthal angle (`phi`=0.0 at noon, in radians). Both functions return the electric field in units of mV/m\n\n### Plotting the model\n\nThe function `vsmodel.PlotModelEq` will plot the V-S model potential, electric field, a dipole magnetic field and the **E**x**B** velocity in the equatorial plane, e.g.:\n\n```python\nimport vsmodel\nimport matplotlib.pyplot as plt\n\n#The simple model\nplt.figure(figsize=(9,8))\nax0 = vsmodel.PlotModelEq('E',Kp=1.0,maps=[2,2,0,0],fig=plt,fmt='%4.2f',scale=[0.01,10.0])\nax1 = vsmodel.PlotModelEq('E',Kp=5.0,maps=[2,2,1,0],fig=plt,fmt='%4.2f',scale=[0.01,10.0])\nax2 = vsmodel.PlotModelEq('V',Kp=1.0,maps=[2,2,0,1],fig=plt,scale=[100.0,100000.0])\nax3 = vsmodel.PlotModelEq('V',Kp=5.0,maps=[2,2,1,1],fig=plt,scale=[100.0,100000.0])\nax0.set_title('$K_p=1$')\nax2.set_title('$K_p=1$')\nax3.set_title('$K_p=5$')\nax1.set_title('$K_p=5$')\nplt.tight_layout()\n\n#The Goldstein model\nplt.figure(figsize=(9,8))\nax0 = vsmodel.PlotModelEq('E',Kp=1.0,Vsw=-400.0,Bz=-2.5,maps=[2,2,0,0],fig=plt,fmt='%4.2f',scale=[0.01,10.0])\nax1 = vsmodel.PlotModelEq('E',Kp=5.0,Vsw=-400.0,Bz=-2.5,maps=[2,2,1,0],fig=plt,fmt='%4.2f',scale=[0.01,10.0])\nax2 = vsmodel.PlotModelEq('V',Kp=1.0,Vsw=-400.0,Bz=-2.5,maps=[2,2,0,1],fig=plt,scale=[100.0,10000.0])\nax3 = vsmodel.PlotModelEq('V',Kp=5.0,Vsw=-400.0,Bz=-2.5,maps=[2,2,1,1],fig=plt,scale=[100.0,10000.0])\nax0.set_title('$K_p=1$; $E_{sw}=-1$ mV m$^{-1}$')\nax2.set_title('$K_p=1$; $E_{sw}=-1$ mV m$^{-1}$')\nax3.set_title('$K_p=5$; $E_{sw}=-1$ mV m$^{-1}$')\nax1.set_title('$K_p=5$; $E_{sw}=-1$ mV m$^{-1}$')\nplt.tight_layout()\n```\n\nWhich should produce this:\n\n![vsexample.png](vsexample.png)\n\nand\n\n![vsexampleG](vsexampleG.png)\n\nAlternatively, we can plot the model vectors as a field of arrows:\n\n```python\nimport vsmodel\nimport matplotlib.pyplot as plt\n\n#The simple model\nplt.figure(figsize=(9,8))\nax0 = vsmodel.PlotVectorEq('E',Kp=1.0,maps=[2,2,0,0],fig=plt,fmt='%4.2f',scale=[0.01,10.0])\nax1 = vsmodel.PlotVectorEq('E',Kp=5.0,maps=[2,2,1,0],fig=plt,fmt='%4.2f',scale=[0.01,10.0])\nax2 = vsmodel.PlotVectorEq('V',Kp=1.0,maps=[2,2,0,1],fig=plt,scale=[100.0,100000.0])\nax3 = vsmodel.PlotVectorEq('V',Kp=5.0,maps=[2,2,1,1],fig=plt,scale=[100.0,100000.0])\nplt.tight_layout()\n\n#The Goldstein model\nplt.figure(figsize=(9,8))\nax0 = vsmodel.PlotVectorEq('E',Kp=1.0,Vsw=-400.0,Bz=-2.5,maps=[2,2,0,0],fig=plt,fmt='%4.2f',scale=[0.01,10.0])\nax1 = vsmodel.PlotVectorEq('E',Kp=5.0,Vsw=-400.0,Bz=-2.5,maps=[2,2,1,0],fig=plt,fmt='%4.2f',scale=[0.01,10.0])\nax2 = vsmodel.PlotVectorEq('V',Kp=1.0,Vsw=-400.0,Bz=-2.5,maps=[2,2,0,1],fig=plt,scale=[100.0,100000.0])\nax3 = vsmodel.PlotVectorEq('V',Kp=5.0,Vsw=-400.0,Bz=-2.5,maps=[2,2,1,1],fig=plt,scale=[100.0,100000.0])\nplt.tight_layout()\n```\n\nwhich produces:\n\n![vsvector.png](vsvector.png)\n\nand\n\n![vsvectorG.png](vsvectorG.png)\n\n### Notes on the coordinate systems\n\n#### SM\n\nThe Solar Magnetic (SM) coordinate system is defined such that the *z*-axis is aligned with the Earth's magnetic dipole; the *x*-axis lies in the plane which contains both the Earth-Sun line and the dipole axis (the *x*-axis points close-ish towards the Sun); the *y*-axis completes the right-handed set and points approximately in the opposite direction to that of the Earth's orbital motion around the Sun.\n\nAs this model is defined only in the equatorial plane, there is no input for the *z* coordinate; also there is not a *z* component to the model so `Ez` is filled with zeros.\n\n#### Cylindrical\n\nThe cylindrical coordinates used are defined such that `r` is the radial distance from the *z*-axis and `phi` is the azimuthal angle. `z` is not used as an input because the model is confined to the equatorial plane. The outputs `Er`, `Ep` and `Ez` correspond to the radial, azimuthal and vertical (*z*) components of the model electric field. As with the Cartesian version of the model, there is no vertical component to the electric field model, so the `Ez` component is filled with zeros.\n\n## Derivation\n\nThe derivation of the model equations can be found [here](doc/vsmodel.pdf) - if there any mistakes, please file a bug report, thanks!\n\n\n\n## References\n\nGoldstein, J., Burch, J. L., and Sandel, B. R. (2005), Magnetospheric model of subauroral polarization stream, *J. Geophys. Res.*, 110, A09222, doi:[10.1029/2005JA011135](https://doi.org/10.1029/2005JA011135).\n\nMaynard, N. C., and Chen, A. J. (1975), Isolated cold plasma regions: Observations and their relation to possible production mechanisms, *J. Geophys. Res.*, 80( 7), 1009– 1013, doi:[10.1029/JA080i007p01009](https://doi.org/10.1029/JA080i007p01009).\n\nStern, D. P. (1975), The motion of a proton in the equatorial magnetosphere, *J. Geophys. Res.*, 80( 4), 595– 599, doi:[10.1029/JA080i004p00595](https://doi.org/10.1029/JA080i004p00595).\n\nVolland, H. (1973), A semiempirical model of large‐scale magnetospheric electric fields, *J. Geophys. Res.*, 78( 1), 171– 180, doi:[10.1029/JA078i001p00171](https://doi.org/10.1029/JA078i001p00171).\n\nZhao, H., Baker, D. N., Califf, S., Li, X., Jaynes, A. N., Leonard, T., … Spence, H. E. (2017). Van Allen probes measurements of energetic particle deep penetration into the low L region (*L* < 4) during the storm on 8 April 2016. *Journal of Geophysical Research: Space Physics*, 122, 12,140– 12,152. https://doi.org/10.1002/2017JA024558\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mattkjames7/vsmodel",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vsmodel",
    "package_url": "https://pypi.org/project/vsmodel/",
    "platform": "",
    "project_url": "https://pypi.org/project/vsmodel/",
    "project_urls": {
      "Homepage": "https://github.com/mattkjames7/vsmodel"
    },
    "release_url": "https://pypi.org/project/vsmodel/2.0.0/",
    "requires_dist": [
      "numpy",
      "matplotlib"
    ],
    "requires_python": "",
    "summary": "A simple implementation of the Volland-Stern electric field model.",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9163078,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2ce8f0343243cac144bc1f4c0c1b40369bc0688d36faff0d7fa345b39dec6bc",
          "md5": "d424d92527d5e97b8af9bc1606a275e2",
          "sha256": "79396ab3bfc8ff8254f0590e0515ab5b5ad0044ff5e453dac8022ca2ff75366a"
        },
        "downloads": -1,
        "filename": "vsmodel-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d424d92527d5e97b8af9bc1606a275e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10769,
        "upload_time": "2021-01-07T15:03:18",
        "upload_time_iso_8601": "2021-01-07T15:03:18.726353Z",
        "url": "https://files.pythonhosted.org/packages/b2/ce/8f0343243cac144bc1f4c0c1b40369bc0688d36faff0d7fa345b39dec6bc/vsmodel-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0688894b1176f09bb5140d8ee8529bfd54caee80ccd570c1e077aa0de7f1167e",
          "md5": "6be978c37a46e3006531122ce54012b6",
          "sha256": "93e59ea3cd3ae08394646cf14957b4ba1ecfe913a9a89bab829798bdff777590"
        },
        "downloads": -1,
        "filename": "vsmodel-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6be978c37a46e3006531122ce54012b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12625,
        "upload_time": "2021-01-11T12:28:06",
        "upload_time_iso_8601": "2021-01-11T12:28:06.550727Z",
        "url": "https://files.pythonhosted.org/packages/06/88/894b1176f09bb5140d8ee8529bfd54caee80ccd570c1e077aa0de7f1167e/vsmodel-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f09c8535edb97a2846c828775e71bb8cfe311a2b8087e229ab947c0f28f5d45e",
          "md5": "f972737ccbfda5129c8acf8857186384",
          "sha256": "bb486b115718a2726e8289e94d16952c103f4fd7f0216806c6e58150acf992e6"
        },
        "downloads": -1,
        "filename": "vsmodel-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f972737ccbfda5129c8acf8857186384",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20454,
        "upload_time": "2021-01-18T12:43:02",
        "upload_time_iso_8601": "2021-01-18T12:43:02.551176Z",
        "url": "https://files.pythonhosted.org/packages/f0/9c/8535edb97a2846c828775e71bb8cfe311a2b8087e229ab947c0f28f5d45e/vsmodel-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f09c8535edb97a2846c828775e71bb8cfe311a2b8087e229ab947c0f28f5d45e",
        "md5": "f972737ccbfda5129c8acf8857186384",
        "sha256": "bb486b115718a2726e8289e94d16952c103f4fd7f0216806c6e58150acf992e6"
      },
      "downloads": -1,
      "filename": "vsmodel-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f972737ccbfda5129c8acf8857186384",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 20454,
      "upload_time": "2021-01-18T12:43:02",
      "upload_time_iso_8601": "2021-01-18T12:43:02.551176Z",
      "url": "https://files.pythonhosted.org/packages/f0/9c/8535edb97a2846c828775e71bb8cfe311a2b8087e229ab947c0f28f5d45e/vsmodel-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}