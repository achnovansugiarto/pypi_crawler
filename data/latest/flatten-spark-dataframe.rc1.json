{
  "info": {
    "author": "Praveen Kumar B",
    "author_email": "bpraveenkumar21@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Flatten Pyspark dataframe\n### This module flattens a given spark dataframe\n### All struct and array of struct columns will be flattened\n\n###### Sample input pyspark dataframe\n```\ndata = [\n        (((\"A\",\"James\"),None,\"Smith\"),\"OH\",\"M\",(\"F\",\"Mike\")),\n        (((\"B\",\"Anna\"),\"Rose\",\"\"),\"NY\",\"F\",(\"E\",\"Jen\")),\n        (((\"C\",\"Julia\"),\"\",\"Williams\"),\"OH\",\"F\",(\"D\",\"Maria\")),\n        (((\"D\",\"Maria\"),\"Anne\",\"Jones\"),\"NY\",\"M\",(\"C\",\"Julia\")),\n        (((\"E\",\"Jen\"),\"Mary\",\"Brown\"),\"NY\",\"M\",(\"B\",\"Anna\")),\n        (((\"F\",\"Mike\"),\"Mary\",\"Williams\"),\"OH\",\"M\",(\"A\",\"James\"))\n        ]\n\nfrom pyspark.sql.types import StructType,StructField, StringType        \nschema = StructType([\n    StructField('name', StructType([\n         StructField('firstname', StructType([\n         StructField('initial', StringType(), True),\n         StructField('actualname', StringType(), True)])),\n         StructField('middlename', StringType(), True),\n         StructField('lastname', StringType(), True)\n         ])),\n     StructField('state', StringType(), True),\n     StructField('gender', StringType(), True),\n\t StructField('country', StructType([\n         StructField('city', StringType(), True),\n         StructField('street', StringType(), True)])),\n     ])\ndfn = spark.createDataFrame(data = data, schema = schema)\n\n```\n```\nimport flatten_spark_dataframe\nflattened_dataframe = flatten_spark_dataframe.flatten(dfn)\n```\n### Output text\n```\nflat_cols: ['state AS state', 'gender AS gender']\nnested_cols: ['name.`firstname` AS name_firstname', 'name.`middlename` AS name_middlename', 'name.`lastname` AS name_lastname', 'country.`city` AS country_city', 'country.`street` AS country_street']\narray_cols: []\n---------- Nested level: 1  -------------------\nflat_cols: ['state AS state', 'gender AS gender', 'name_middlename AS name_middlename', 'name_lastname AS name_lastname', 'country_city AS country_city', 'country_street AS country_street']\nnested_cols: ['name_firstname.`initial` AS name_firstname_initial', 'name_firstname.`actualname` AS name_firstname_actualname']\narray_cols: []\n---------- Nested level: 2  -------------------\nflat_cols: ['state AS state', 'gender AS gender', 'name_middlename AS name_middlename', 'name_lastname AS name_lastname', 'country_city AS country_city', 'country_street AS country_street', 'name_firstname_initial AS name_firstname_initial', 'name_firstname_actualname AS name_firstname_actualname']\nnested_cols: []\narray_cols: []\n```\n```\nflattened_dataframe.take(10)\n```\n```\n[Row(state='OH', gender='M', name_middlename=None, name_lastname='Smith', country_city='F', country_street='Mike', name_firstname_initial='A', name_firstname_actualname='James'),\n Row(state='NY', gender='F', name_middlename='Rose', name_lastname='', country_city='E', country_street='Jen', name_firstname_initial='B', name_firstname_actualname='Anna'),\n Row(state='OH', gender='F', name_middlename='', name_lastname='Williams', country_city='D', country_street='Maria', name_firstname_initial='C', name_firstname_actualname='Julia'),\n Row(state='NY', gender='M', name_middlename='Anne', name_lastname='Jones', country_city='C', country_street='Julia', name_firstname_initial='D', name_firstname_actualname='Maria'),\n Row(state='NY', gender='M', name_middlename='Mary', name_lastname='Brown', country_city='B', country_street='Anna', name_firstname_initial='E', name_firstname_actualname='Jen'),\n Row(state='OH', gender='M', name_middlename='Mary', name_lastname='Williams', country_city='A', country_street='James', name_firstname_initial='F', name_firstname_actualname='Mike')]\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PraveenKumar-21/flatten_spark_dataframe",
    "keywords": "PySpark flatten dataframe,Databricks PySpark flatten dataframe,PySpark nested dataframe,databricks pyspark nested dataframe,flatten dataframe,nested dataframe",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flatten-spark-dataframe",
    "package_url": "https://pypi.org/project/flatten-spark-dataframe/",
    "platform": null,
    "project_url": "https://pypi.org/project/flatten-spark-dataframe/",
    "project_urls": {
      "Homepage": "https://github.com/PraveenKumar-21/flatten_spark_dataframe"
    },
    "release_url": "https://pypi.org/project/flatten-spark-dataframe/0.0.1/",
    "requires_dist": [
      "pyspark"
    ],
    "requires_python": ">=3.6",
    "summary": "Databricks PySpark module to flatten nested spark dataframes, basically struct and array of struct till the specified level",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14900834,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc909c59d026afe44fe463078fdd3c6afc944f3dc70545361d33efa9f25c7916",
          "md5": "ff57d9947308791ba575e9e0a4063820",
          "sha256": "1567877e3b74eb365ed074ec74eacd265eeb679e635c97f11d5ac7b5a5785205"
        },
        "downloads": -1,
        "filename": "flatten_spark_dataframe-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff57d9947308791ba575e9e0a4063820",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4700,
        "upload_time": "2022-08-26T14:07:55",
        "upload_time_iso_8601": "2022-08-26T14:07:55.364938Z",
        "url": "https://files.pythonhosted.org/packages/dc/90/9c59d026afe44fe463078fdd3c6afc944f3dc70545361d33efa9f25c7916/flatten_spark_dataframe-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "314bbe676eb2f3d08dcbc93c80a51b64508074fc7d29c9b150c72f06a73463bd",
          "md5": "1964fedc520780cdbfb42fb88851465f",
          "sha256": "23bb875ae66c55f4b5d277d3071b729f9762ff10a52e6c1d5636ccfbbd46f971"
        },
        "downloads": -1,
        "filename": "flatten_spark_dataframe-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1964fedc520780cdbfb42fb88851465f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4394,
        "upload_time": "2022-08-26T14:07:57",
        "upload_time_iso_8601": "2022-08-26T14:07:57.480882Z",
        "url": "https://files.pythonhosted.org/packages/31/4b/be676eb2f3d08dcbc93c80a51b64508074fc7d29c9b150c72f06a73463bd/flatten_spark_dataframe-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc909c59d026afe44fe463078fdd3c6afc944f3dc70545361d33efa9f25c7916",
        "md5": "ff57d9947308791ba575e9e0a4063820",
        "sha256": "1567877e3b74eb365ed074ec74eacd265eeb679e635c97f11d5ac7b5a5785205"
      },
      "downloads": -1,
      "filename": "flatten_spark_dataframe-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ff57d9947308791ba575e9e0a4063820",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4700,
      "upload_time": "2022-08-26T14:07:55",
      "upload_time_iso_8601": "2022-08-26T14:07:55.364938Z",
      "url": "https://files.pythonhosted.org/packages/dc/90/9c59d026afe44fe463078fdd3c6afc944f3dc70545361d33efa9f25c7916/flatten_spark_dataframe-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "314bbe676eb2f3d08dcbc93c80a51b64508074fc7d29c9b150c72f06a73463bd",
        "md5": "1964fedc520780cdbfb42fb88851465f",
        "sha256": "23bb875ae66c55f4b5d277d3071b729f9762ff10a52e6c1d5636ccfbbd46f971"
      },
      "downloads": -1,
      "filename": "flatten_spark_dataframe-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1964fedc520780cdbfb42fb88851465f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4394,
      "upload_time": "2022-08-26T14:07:57",
      "upload_time_iso_8601": "2022-08-26T14:07:57.480882Z",
      "url": "https://files.pythonhosted.org/packages/31/4b/be676eb2f3d08dcbc93c80a51b64508074fc7d29c9b150c72f06a73463bd/flatten_spark_dataframe-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}