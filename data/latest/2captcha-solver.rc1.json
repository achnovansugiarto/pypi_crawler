{
  "info": {
    "author": "",
    "author_email": "2Captcha <info@2captcha.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Python Module for 2Captcha API\nThe easiest way to quickly integrate [2Captcha] captcha solving service into your code to automate solving of any types of captcha.\n\n- [Installation](#installation)\n- [Configuration](#configuration)\n- [Solve captcha](#solve-captcha)\n  - [Normal Captcha](#normal-captcha)\n  - [Text](#text-captcha)\n  - [ReCaptcha v2](#recaptcha-v2)\n  - [ReCaptcha v3](#recaptcha-v3)\n  - [FunCaptcha](#funcaptcha)\n  - [GeeTest](#geetest)\n  - [hCaptcha](#hcaptcha)\n  - [KeyCaptcha](#keycaptcha)\n  - [Capy](#capy)\n  - [Grid (ReCaptcha V2 Old Method)](#grid)\n  - [Canvas](#canvas)\n  - [ClickCaptcha](#clickcaptcha)\n  - [Rotate](#rotate)\n- [Other methods](#other-methods)\n  - [send / getResult](#send--getresult)\n  - [balance](#balance)\n  - [report](#report)\n- [Error handling](#error-handling)\n\n## Installation\n\nThis package can be installed with Pip:\n\n```pip3 install 2captcha-python```\n\n\n## Configuration\n\nTwoCaptcha instance can be created like this:\n\n```python \nfrom twocaptcha import TwoCaptcha\n\nsolver = TwoCaptcha('YOUR_API_KEY')\n```\nAlso there are few options that can be configured:\n\n```python \nconfig = {\n            'server':           '2captcha.com',\n            'apiKey':           'YOUR_API_KEY',\n            'softId':            123,\n            'callback':         'https://your.site/result-receiver',\n            'defaultTimeout':    120,\n            'recaptchaTimeout':  600,\n            'pollingInterval':   10,\n        }\nsolver = TwoCaptcha(**config)\n```\n\n### TwoCaptcha instance options\n\n|Option|Default value|Description|\n|---|---|---|\n|server|`2captcha.com`|API server. You can set it to `rucaptcha.com` if your account is registered there|\n|softId|-|your software ID obtained after publishing in [2captcha sofware catalog]|\n|callback|-|URL of your web-sever that receives the captcha recognition result. The URl should be first registered in [pingback settings] of your account|\n|defaultTimeout|120|Polling timeout in seconds for all captcha types except ReCaptcha. Defines how long the module tries to get the answer from `res.php` API endpoint|\n|recaptchaTimeout|600|Polling timeout for ReCaptcha in seconds. Defines how long the module tries to get the answer from `res.php` API endpoint|\n|pollingInterval|10|Interval in seconds between requests to `res.php` API endpoint, setting values less than 5 seconds is not recommended|\n\n>  **IMPORTANT:** once `callback` is defined for `TwoCaptcha` instance, all methods return only the captcha ID and DO NOT poll the API to get the result. The result will be sent to the callback URL.\nTo get the answer manually use [getResult method](#send--getresult)\n\n## Solve captcha\nWhen you submit any image-based captcha use can provide additional options to help 2captcha workers to solve it properly.\n\n### Captcha options\n|Option|Default Value|Description|\n|---|---|---|\n|numeric|0|Defines if captcha contains numeric or other symbols [see more info in the API docs][post options]|\n|minLength|0|minimal answer lenght|\n|maxLength|0|maximum answer length|\n|phrase|0|defines if the answer contains multiple words or not|\n|caseSensitive|0|defines if the answer is case sensitive|\n|calc|0|defines captcha requires calculation|\n|lang|-|defines the captcha language, see the [list of supported languages] |\n|hintImg|-|an image with hint shown to workers with the captcha|\n|hintText|-|hint or task text shown to workers with the captcha|\n\nBelow you can find basic examples for every captcha type. Check out [examples directory] to find more examples with all available options.\n\n### Normal Captcha\nTo bypass a normal captcha (distorted text on image) use the following method. This method also can be used to recognize any text on the image.\n```python \nresult = solver.normal('path/to/captcha.jpg', param1=..., ...)\n# OR\nresult = solver.normal('https://site-with-captcha.com/path/to/captcha.jpg', param1=..., ...)\n```\n\n### Text Captcha\nThis method can be used to bypass a captcha that requires to answer a question provided in clear text.\n```python \nresult = solver.text('If tomorrow is Saturday, what day is today?', param1=..., ...)\n```\n\n### ReCaptcha v2\nUse this method to solve ReCaptcha V2 and obtain a token to bypass the protection.\n```python \nresult = solver.recaptcha(sitekey='6Le-wvkSVVABCPBMRTvw0Q4Muexq1bi0DJwx_mJ-',\n                          url='https://mysite.com/page/with/recaptcha',\n                          param1=..., ...)\n```\n\n### ReCaptcha v3\nThis method provides ReCaptcha V3 solver and returns a token.\n```python\nresult = solver.recaptcha(sitekey='6Le-wvkSVVABCPBMRTvw0Q4Muexq1bi0DJwx_mJ-',\n                            url='https://mysite.com/page/with/recaptcha',\n                            version='v3',\n                            param1=..., ...)\n```\n\n### FunCaptcha\nFunCaptcha (Arkoselabs) solving method. Returns a token.\n```python\nresult = solver.funcaptcha(sitekey='6Le-wvkSVVABCPBMRTvw0Q4Muexq1bi0DJwx_mJ-',\n                            url='https://mysite.com/page/with/funcaptcha',\n                            param1=..., ...)\n\n```\n\n\n### GeeTest\nMethod to solve GeeTest puzzle captcha. Returns a set of tokens as JSON.\n```python\nresult = solver.geetest(gt='f1ab2cdefa3456789012345b6c78d90e',\n                        challenge='12345678abc90123d45678ef90123a456b',\n                        url='https://www.site.com/page/',\n                        param1=..., ...)\n\n```\n\n\n### hCaptcha\nUse this method to solve hCaptcha challenge. Returns a token to bypass captcha.\n```python\nresult = solver.hcaptcha(sitekey='10000000-ffff-ffff-ffff-000000000001',\n                            url='https://www.site.com/page/', \n                            param1=..., ...)\n\n```\n\n### KeyCaptcha\nToken-based method to solve KeyCaptcha.\n```python\nresult = solver.keycaptcha(s_s_c_user_id=10,\n    \t\t\t\t   s_s_c_session_id='493e52c37c10c2bcdf4a00cbc9ccd1e8',\n    \t\t\t\t   s_s_c_web_server_sign='9006dc725760858e4c0715b835472f22-pz-',\n    \t\t\t\t   s_s_c_web_server_sign2='2ca3abe86d90c6142d5571db98af6714',\n    \t\t\t\t   url='https://www.keycaptcha.ru/demo-magnetic/', \n    \t\t\t\t   param1=..., ...)\n\n```\n\n### Capy\nToken-based method to bypass Capy puzzle captcha.\n```python\nresult = solver.capy(sitekey='PUZZLE_Abc1dEFghIJKLM2no34P56q7rStu8v',\n                     url='http://mysite.com/',\n                     api_server='https://jp.api.capy.me/',\n                     param1=..., ...)\n```\n### Grid\nGrid method is originally called Old ReCaptcha V2 method. The method can be used to bypass any type of captcha where you can apply a grid on image and need to click specific grid boxes. Returns numbers of boxes.\n```python\nresult = solver.grid('path/to/captcha.jpg', param1=..., ...)\n```\n### Canvas\nCanvas method can be used when you need to draw a line around an object on image. Returns a set of points' coordinates to draw a polygon.\n```python\nresult = solver.canvas('path/to/captcha.jpg', param1=..., ...)\n```\n### ClickCaptcha\nClickCaptcha method returns coordinates of points on captcha image. Can be used if you need to click on particular points on the image.\n```python\nresult = solver.coordinates('path/to/captcha.jpg', param1=..., ...)\n```\n\n### Rotate\nThis method can be used to solve a captcha that asks to rotate an object. Mostly used to bypass FunCaptcha. Returns the rotation angle.\n```python\nresult = solver.rotate('path/to/captcha.jpg', param1=..., ...)\n```\n\n## Other methods\n\n### send / getResult\nThese methods can be used for manual captcha submission and answer polling.\n```python\nimport time\n. . . . . \n\n\nid = solver.send(file='path/to/captcha.jpg')\ntime.sleep(20)\n\ncode = solver.get_result(id)\n```\n\n### balance\nUse this method to get your account's balance\n```python\nbalance = solver.balance()\n```\n\n### report\nUse this method to report good or bad captcha answer.\n```python\nsolver.report(id, True) # captcha solved correctly\nsolver.report(id, False) # captcha solved incorrectly\n```\n\n### Error handling\nIf case of an error captcha solver throws an exception. It's important to properly handle these cases. We recommend to use `try except` to handle exceptions. \n```python\nTry:\n    result = solver.text('If tomorrow is Saturday, what day is today?')\nExcept ValidationException as e:\n    # invalid parameters passed\n\tprint(e)\nExcept NetworkException as e:\n\t# network error occurred\n\tprint(e)\nExcept ApiException as e:\n    # api respond with error\n\tprint(e)\nExcept TimeoutException as e:\n    # captcha is not solved so far\n\tprint(e)\n```\n\n\n### Proxies\n\nYou can pass your proxy as an additional argumen for methods: recaptcha, funcaptcha and geetest. The proxy will be forwarded to the API to solve the captcha.\n\n```python\nproxy={\n    'type': 'HTTPS',\n    'uri': 'login:password@IP_address:PORT'\n}\n```\n\n### Async calls\nYou can also make async calls with [asyncio], for example:\n\n```python\nimport asyncio\nimport concurrent.futures\nfrom twocaptcha import TwoCaptcha\n\ncaptcha_result = await captchaSolver(image)\n\nasync def captchaSolver(image):\n    loop = asyncio.get_running_loop()\n    with concurrent.future.ThreadPoolExecutor() as pool:\n        result = await loop.run_in_executor(pool, lambda: TwoCaptcha(API_KEY).normal(image))\n        return result\n```\n\n\n[2Captcha]: https://2captcha.com/\n[2captcha sofware catalog]: https://2captcha.com/software\n[pingback settings]: https://2captcha.com/setting/pingback\n[post options]: https://2captcha.com/2captcha-api#normal_post\n[list of supported languages]: https://2captcha.com/2captcha-api#language\n[examples directory]: /src/2captcha-solver/examples\n[asyncio]: https://docs.python.org/3/library/asyncio.html\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "2captcha-solver",
    "package_url": "https://pypi.org/project/2captcha-solver/",
    "platform": null,
    "project_url": "https://pypi.org/project/2captcha-solver/",
    "project_urls": {
      "Bug Tracker": "https://github.com/2captchacom/2captcha-python/issues",
      "Homepage": "https://github.com/2captchacom/2captcha-python"
    },
    "release_url": "https://pypi.org/project/2captcha-solver/1.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Python module for easy integration with 2Captcha API'",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15966705,
  "releases": {
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcd1bb60abdbab19101932085f5d063d38632c3d4487f4a5d8ae0331220c9d6a",
          "md5": "146f895d3983006e973d7f1b570f4eb3",
          "sha256": "7ae1efc87c5179b5d063a5a2bfbb0726741dcb4f63567ffa72ca231996275b41"
        },
        "downloads": -1,
        "filename": "2captcha_solver-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "146f895d3983006e973d7f1b570f4eb3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4986870,
        "upload_time": "2022-12-02T06:19:43",
        "upload_time_iso_8601": "2022-12-02T06:19:43.504638Z",
        "url": "https://files.pythonhosted.org/packages/dc/d1/bb60abdbab19101932085f5d063d38632c3d4487f4a5d8ae0331220c9d6a/2captcha_solver-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fde574e35ed2b0b406606fdf34c070d39bd999a56dcf688609c67a60c915e8a",
          "md5": "a385dff26539627999ee67596d8165cf",
          "sha256": "fc6169e870d4b287188a83b7662832b534c0bd128e2a9401ac37ac58d6994bbe"
        },
        "downloads": -1,
        "filename": "2captcha_solver-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a385dff26539627999ee67596d8165cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10019534,
        "upload_time": "2022-12-02T06:19:55",
        "upload_time_iso_8601": "2022-12-02T06:19:55.572813Z",
        "url": "https://files.pythonhosted.org/packages/8f/de/574e35ed2b0b406606fdf34c070d39bd999a56dcf688609c67a60c915e8a/2captcha_solver-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dcd1bb60abdbab19101932085f5d063d38632c3d4487f4a5d8ae0331220c9d6a",
        "md5": "146f895d3983006e973d7f1b570f4eb3",
        "sha256": "7ae1efc87c5179b5d063a5a2bfbb0726741dcb4f63567ffa72ca231996275b41"
      },
      "downloads": -1,
      "filename": "2captcha_solver-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "146f895d3983006e973d7f1b570f4eb3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4986870,
      "upload_time": "2022-12-02T06:19:43",
      "upload_time_iso_8601": "2022-12-02T06:19:43.504638Z",
      "url": "https://files.pythonhosted.org/packages/dc/d1/bb60abdbab19101932085f5d063d38632c3d4487f4a5d8ae0331220c9d6a/2captcha_solver-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8fde574e35ed2b0b406606fdf34c070d39bd999a56dcf688609c67a60c915e8a",
        "md5": "a385dff26539627999ee67596d8165cf",
        "sha256": "fc6169e870d4b287188a83b7662832b534c0bd128e2a9401ac37ac58d6994bbe"
      },
      "downloads": -1,
      "filename": "2captcha_solver-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a385dff26539627999ee67596d8165cf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10019534,
      "upload_time": "2022-12-02T06:19:55",
      "upload_time_iso_8601": "2022-12-02T06:19:55.572813Z",
      "url": "https://files.pythonhosted.org/packages/8f/de/574e35ed2b0b406606fdf34c070d39bd999a56dcf688609c67a60c915e8a/2captcha_solver-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}