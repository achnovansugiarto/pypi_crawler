{
  "info": {
    "author": "Joe Clarke",
    "author_email": "jclarke@cisco.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# Webex Logging Handler\n\nThis is a simple Python logging handler that emits messages to Webex [incoming Webhooks](https://apphub.webex.com/messaging/applications/incoming-webhooks-cisco-systems-38054).\n\n## Installing\n\nTo install run:\n\n```bash\npython -m pip install git+https://github.com/xorrkaz/webex-log-handler.git\n```\n\n## Usage\n\nFirst, obtain an incoming webhook URL from <https://apphub.webex.com/messaging/applications/incoming-webhooks-cisco-systems-38054>.\n\nHere is a trivial usage.  But you'll likely want to use a `logger.conf` or the like.\n\n```python\nimport logging\nfrom webex_handler import WebexHandler\n\nlogger = logging.getLogger(__name__)\n# The notice level is more severe than INFO but not as severe as WARNING.\nlogger.setLevel(WebexHandler.NOTICE)\nlogging.addLevelName(WebexHandler.NOTICE, \"NOTICE\")\n\nwx = WebexHandler(\"https://webexapis.com/v1/webhooks/incoming/...\")\nwx.setLevel(WebexHandler.NOTICE)\n\nformatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\nwx.setFormatter(formatter)\n\nlogger.addHandler(wx)\n\nlogger.log(WebexHandler.NOTICE, \"Logging from Python!\")\n```\n\nIf you are using asyncio, there is an async version of the handler as well.  It requires the `aiolog` and `aiohttp` packages, though.  To use it:\n\n```bash\npip install aiolog aiohttp\n```\n\n```python\nimport asyncio\nimport aiolog\nimport logging\nfrom webex_handler import AsyncWebexHandler\n\nlogger = logging.getLogger(__name__)\n# The notice level is more severe than INFO but not as severe as WARNING.\nlogger.setLevel(AsyncWebexHandler.NOTICE)\nlogging.addLevelName(AsyncWebexHandler.NOTICE, \"NOTICE\")\n\nwx = AsyncWebexHandler(\"https://webexapis.com/v1/webhooks/incoming/...\")\nwx.setLevel(AsyncWebexHandler.NOTICE)\n\nformatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\nwx.setFormatter(formatter)\n\nlogger.addHandler(wx)\n\nasync def do_work():\n    logger.log(AsyncWebexHandler.NOTICE, \"Logging from Python!\")\n\naiolog.start()\nloop = asyncio.get_event_loop()\nloop.run_until_complete(do_work())\nloop.run_until_complete(aiolog.stop())\n```\n\nEt voilÃ !\n\n![screenshot](static_content/example.png \"Example Result\")\n\n## Other Info\n\nThe WebexHandler uses markdown-formatted messages by default, but you can pass `use_markdown=False` to the WebexHandler constructor to use plain text.\n\nAlso, be cognizant than a high level (like INFO or DEBUG) can make things very chatty in Webex.  Consider a lower level to minimize noise.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/xorrkaz/webex-log-handler",
    "keywords": "Elemental",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "webex-handler",
    "package_url": "https://pypi.org/project/webex-handler/",
    "platform": "",
    "project_url": "https://pypi.org/project/webex-handler/",
    "project_urls": {
      "Homepage": "https://github.com/xorrkaz/webex-log-handler"
    },
    "release_url": "https://pypi.org/project/webex-handler/2.0.0/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": ">=3.6",
    "summary": "A python logging handler that logs to Webex incoming webhooks",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10396777,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0cc0d923fe0cae69f24b8f0aa4b6826c97ea641d088419a2868a71a4e80a4892",
          "md5": "7e971e2f02362ce2ee5c37cf1713c54b",
          "sha256": "fa22317f0f549b70be23b912ba13446293404214e4ade68c01544a3f332310c9"
        },
        "downloads": -1,
        "filename": "webex_handler-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e971e2f02362ce2ee5c37cf1713c54b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5104,
        "upload_time": "2021-05-18T20:36:43",
        "upload_time_iso_8601": "2021-05-18T20:36:43.143500Z",
        "url": "https://files.pythonhosted.org/packages/0c/c0/d923fe0cae69f24b8f0aa4b6826c97ea641d088419a2868a71a4e80a4892/webex_handler-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0bcaa868d07dbbaead4db8bda28a6b9fd653f1638aab05dab044d495e05608c0",
          "md5": "371f5042465a9bf9666f40c70b367b50",
          "sha256": "c422d4fcdc18c73cd2ac8202751e661914c8fc083c33be8729cca26a45eaa9f7"
        },
        "downloads": -1,
        "filename": "webex_handler-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "371f5042465a9bf9666f40c70b367b50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3702,
        "upload_time": "2021-05-18T20:36:44",
        "upload_time_iso_8601": "2021-05-18T20:36:44.108229Z",
        "url": "https://files.pythonhosted.org/packages/0b/ca/a868d07dbbaead4db8bda28a6b9fd653f1638aab05dab044d495e05608c0/webex_handler-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0cc0d923fe0cae69f24b8f0aa4b6826c97ea641d088419a2868a71a4e80a4892",
        "md5": "7e971e2f02362ce2ee5c37cf1713c54b",
        "sha256": "fa22317f0f549b70be23b912ba13446293404214e4ade68c01544a3f332310c9"
      },
      "downloads": -1,
      "filename": "webex_handler-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7e971e2f02362ce2ee5c37cf1713c54b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5104,
      "upload_time": "2021-05-18T20:36:43",
      "upload_time_iso_8601": "2021-05-18T20:36:43.143500Z",
      "url": "https://files.pythonhosted.org/packages/0c/c0/d923fe0cae69f24b8f0aa4b6826c97ea641d088419a2868a71a4e80a4892/webex_handler-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0bcaa868d07dbbaead4db8bda28a6b9fd653f1638aab05dab044d495e05608c0",
        "md5": "371f5042465a9bf9666f40c70b367b50",
        "sha256": "c422d4fcdc18c73cd2ac8202751e661914c8fc083c33be8729cca26a45eaa9f7"
      },
      "downloads": -1,
      "filename": "webex_handler-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "371f5042465a9bf9666f40c70b367b50",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3702,
      "upload_time": "2021-05-18T20:36:44",
      "upload_time_iso_8601": "2021-05-18T20:36:44.108229Z",
      "url": "https://files.pythonhosted.org/packages/0b/ca/a868d07dbbaead4db8bda28a6b9fd653f1638aab05dab044d495e05608c0/webex_handler-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}