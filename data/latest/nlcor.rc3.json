{
  "info": {
    "author": "Chitta Ranjan, Devleena Banerjee,Vahab Najari",
    "author_email": "cranjan@processminer.com, dbanerjee@processminer.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "## Citation\n\n* **Package 'nlcor': Compute Nonlinear Correlations**\n\n@article{ranjan2022packagenlcor,\n  title={Package 'nlcor': Compute Nonlinear Correlations},\n  author={Ranjan, Chitta, Banerjee, Devleena, and Najari, Vahab},\n  journal={Research Gate},\n  year={2022},\n  doi={10.13140/RG.2.2.33716.68480}\n}\n\nChitta Ranjan,Devleena Banerjee and Vahab Najari. “Package ’nlcor’: Compute Nonlinear Correlations”. In:Research Gate(2020).doi:10.13140/RG.2.2.33716.68480.\n\n\nPurpose\n-------\n\nEstimate nonlinear correlations using `nlcor`. Yields a correlation\nestimate between 0 and 1, and the adjusted p value. The p value\nindicates if the estimated correlation is statistically significant.\n\nDescription\n-----------\n\nCorrelations are commonly used in various data mining applications.\nTypically linear correlations are estimated. However, the data may have\na nonlinear correlation but little to no linear correlation. If, for\nexample, we are performing data exploration using automated techniques\non many variables, such nonlinearly correlated variables can easily be\noverlooked.\n\nNonlinear correlations are quite common in real data. Due to this,\nnonlinear models, such as SVM, are employed for regression,\nclassification, etc. However, there are not many approaches to estimate\nnonlinear correlations. If developed, it will find application in data\nexploration, variable selection, and other areas.\n\nIn this package, we provide an implementation of a nonlinear correlation\nestimation method using an adaptive local linear correlation computation\nin `nlcor`. The function `nlcor` returns the nonlinear correlation\nestimate, the corresponding adjusted p value, and an optional plot\nvisualizing the nonlinear relationships.\n\nThe correlation estimate will be between 0 and 1. The higher the value\nthe more is the nonlinear correlation. Unlike linear correlations, a\nnegative value is not valid here. Due to multiple local correlation\ncomputations, the net p value of the correlation estimate is adjusted\n(to avoid false positives). The plot visualizes the local linear\ncorrelations.\n\nIn the following, we will show its usage with a few examples. In the\ngiven examples, the linear correlations between `x` and `y` is small,\nhowever, there is a visible nonlinear correlation between them. This\npackage contains the data for these examples and can be used for testing\nthe package.\n\n### Example 1. A nonlinear correlated data with close to zero linear correlation.\n\nA data with cyclic nonlinear correlation.\n\n    plot(x1, y1)\n![](https://github.com/ProcessMiner/nlcor/blob/master/README_files/figure-markdown_strict/Figure-1.1-1.png?raw=true)\n\nThe linear correlation of the data is,\n\n    spearmanr(x1,y1)\n    # 0.0.00896045678795923\n\nAs expected, the correlation is close to zero. We estimate the nonlinear\ncorrelation using `nlcor`.\n\n    nlcor(x1, y1, plt = True)\n{cor_estimate': 0.8825652697448009,\n 'adjusted_p_value': 0.0,\n 'cor_plot': <AxesSubplot:xlabel='x', ylabel='y'>\"\n\n![](https://github.com/ProcessMiner/nlcor/blob/master/README_files/figure-markdown_strict/Figure-1.2-1.png?raw=true)\n\nThe plot shows the piecewise linear correlations present in the data.\n\n### Example 2. Non-uniform correlation structure.\n\nA data with non-uniform piecewise linear correlations.\n\n    plot(x2, y2)\n\n![](https://github.com/ProcessMiner/nlcor/blob/master/README_files/figure-markdown_strict/Figure-2.1-1.png?raw=true)\n\nThe linear correlation of the data is,\n\n\tspearmanr(x2,y2)\n    #0.8362465969598638\n\nThe linear correlation is quite high in this data. However, there is\nsignificant and higher nonlinear correlation present in the data. This\ndata emulates the scenario where the correlation changes its direction\nafter a point. Sometimes that change point is in the middle causing the\nlinear correlation to be close to zero. Here we show an example when the\nchange point is off center to show that the implementation works in\nnon-uniform cases.\n\nWe estimate the nonlinear correlation using `nlcor`.\n\n     nlcor(x2, y2, plt = True)\n\t\n\t{'cor_estimate': 0.8960923220316748,\n     'adjusted_p_value': 0.0,\n    'cor_plot': <AxesSubplot:xlabel='x', ylabel='y'>\"\n\n![](https://github.com/ProcessMiner/nlcor/blob/master/README_files/figure-markdown_strict/Figure-2.2-1.png?raw=true)\n\nIt is visible from the plot that `nlcor` could estimate the piecewise\ncorrelations in a non-uniform scenario. Also, the nonlinear correlation\ncomes out to be higher than the linear correlation.\n\n### Example 3. Highly noncorrelated data. Typical in multi-seasonal processes.\n\nA data with higher and multiple frequency variations.\n\n    plot(x3, y3)\n\n![](https://github.com/ProcessMiner/nlcor/blob/master/README_files/figure-markdown_strict/Figure-3.1-1.png?raw=true)\n\nThe linear correlation of the data is,\n\n\tspearmanr(x3,y3)\n    #SpearmanrResult(correlation=-0.13826069794395476, pvalue=1.5642663041613067e-18)\n\nThe linear correlation is expectedly small, albeit not close to zero due\nto some linearity.\n\nHere we show we can refine the granularity of the correlation\ncomputation.\n\nUnder default settings, the output of `nlcor` will be,\n\n    nlcor(x3, y3, plt = True)\n\t'cor_estimate': 0.8545600175677881,\n\t'adjusted_p_value': 0.004412619725243649,\n\t'cor_plot': <AxesSubplot:xlabel='x', ylabel='y'>    print(c$cor.plot)\n\n![](https://github.com/ProcessMiner/nlcor/blob/master/README_files/figure-markdown_strict/Figure-3.2-1.png?raw=true)\n\nWe can refine the correlation estimation by changing the `refine` parameter. \nIt can be set as any \nvalue between `0` and `1`. A lower value enforces higher refinement. However,\nhigher refinement adversely affects the p value. Meaning, the resultant \ncorrelation estimate may be statistically insignificant (similar to overfitting).\nTherefore, it is recommended to avoid over refinement.\n\nTypically, the `refine` should be less than `0.20`. In this data, we rerun the correlation estimation with `refine = 0.01`.\n\n    nlcor(x3, y3, refine = 0.01, plt = True)\n\t'cor_estimate': 0.1337303964709714,\n\t'adjusted_p_value': 0.0,\n\t'cor_plot': <AxesSubplot:xlabel='x', ylabel='y'>\n\n![](https://github.com/ProcessMiner/nlcor/blob/master/README_files/figure-markdown_strict/Figure-3.3-1.png?raw=true)\n\n\nAs can be seen in the figure, `nlcor` could identify the granular\npiecewise correlations. In this data, the p value still remains\nextremely small—the correlation is *statistically significant*.\n\n### Example 4. Line visualization adjustment.\n\nSometimes we want to change the line thickness and its opacity\n(1-transparency).\n\nThey can be adjusted with `line_thickness` and `line_opacity` arguments.\n\n    nlcor(x1, y1, plt = True, line_thickness = 2.5, line_opacity = 0.8)\n\n![](https://github.com/ProcessMiner/nlcor/blob/master/README_files/figure-markdown_strict/Figure-3.4-1.png?raw=true)\n\nInstallation\n-----------\n\nTo install the package, type the following command:\n\t\n    pip install nlcor\n\nIn order to import the package, type the following command:\n    \n    from nlcor import nlcor\n\nSummary\n-------\n\nThis package provides an implementation of an efficient heuristic to\ncompute the nonlinear correlations between numeric vectors. The\nheuristic works by adaptively identifying multiple local regions of\nlinear correlations to estimate the overall nonlinear correlation. Its\nusages are demonstrated here with few examples.\n\n------------------------------------------------------------------------\n\nSupport\n-------\n\nDevleena Banerjee <dbanerjee@processminer.com>\n\nMahendra Reddy <mreddy@processminer.com>\n\n\nVisit <www.processminer.com> for further information.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ProcessMiner/nlcorpython",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nlcor",
    "package_url": "https://pypi.org/project/nlcor/",
    "platform": null,
    "project_url": "https://pypi.org/project/nlcor/",
    "project_urls": {
      "Homepage": "https://github.com/ProcessMiner/nlcorpython"
    },
    "release_url": "https://pypi.org/project/nlcor/3.0.3/",
    "requires_dist": [
      "numpy",
      "pandas",
      "scipy"
    ],
    "requires_python": ">=3.6",
    "summary": "Nlcor uses a dynamic partitioning approach with adaptive segmentation for a more precise nonlinear correlation estimation.",
    "version": "3.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15387223,
  "releases": {
    "3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9535b2b4f5dccaf39be76bf7c5cf32d1b935158d6840ab267d78e26ab5eae40",
          "md5": "d1b495ae1304b462f1f208a35df34c70",
          "sha256": "70d874cf24bf77f2b2134f0ed83d90b03625432f745b3681360dbb6423e48633"
        },
        "downloads": -1,
        "filename": "nlcor-3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d1b495ae1304b462f1f208a35df34c70",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 2064,
        "upload_time": "2022-06-27T12:47:58",
        "upload_time_iso_8601": "2022-06-27T12:47:58.508601Z",
        "url": "https://files.pythonhosted.org/packages/b9/53/5b2b4f5dccaf39be76bf7c5cf32d1b935158d6840ab267d78e26ab5eae40/nlcor-3.0-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09f0f283a44c08df800022d4c015277c48145ca1bfc8a5a1fcf9584dc923c7b3",
          "md5": "114356c0ba2566399eab1987ccb3f3f9",
          "sha256": "371a3d6ef5de4c1f05a53f6af876255dbac64aa6e6da0cfb0b2783adcc4d2cd0"
        },
        "downloads": -1,
        "filename": "nlcor-3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "114356c0ba2566399eab1987ccb3f3f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4664,
        "upload_time": "2022-06-27T12:48:09",
        "upload_time_iso_8601": "2022-06-27T12:48:09.895927Z",
        "url": "https://files.pythonhosted.org/packages/09/f0/f283a44c08df800022d4c015277c48145ca1bfc8a5a1fcf9584dc923c7b3/nlcor-3.0.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "3.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f204c7937968cfaeefdaec0f4a02da275cb8382fa0722464b376470f9f601f08",
          "md5": "c4fde2f5c9c3bcf7e733ce22c5f07e60",
          "sha256": "3b7e7fd6345ada70d2687d82eaa55bbdf1cb896e98bf8c072a213691609d0a76"
        },
        "downloads": -1,
        "filename": "nlcor-3.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c4fde2f5c9c3bcf7e733ce22c5f07e60",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4622,
        "upload_time": "2022-10-12T12:58:40",
        "upload_time_iso_8601": "2022-10-12T12:58:40.011602Z",
        "url": "https://files.pythonhosted.org/packages/f2/04/c7937968cfaeefdaec0f4a02da275cb8382fa0722464b376470f9f601f08/nlcor-3.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c0310b32d46458b6fa88c516567e93c2a1e49356f7e11aa38d9a80abfc68f70",
          "md5": "58c19af7e6198792457a7e33a484c959",
          "sha256": "6f1e57e6afea33c97c49d6eba171abc92ebc092141cd9e4095376788bede0b3b"
        },
        "downloads": -1,
        "filename": "nlcor-3.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "58c19af7e6198792457a7e33a484c959",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5062,
        "upload_time": "2022-10-12T12:58:42",
        "upload_time_iso_8601": "2022-10-12T12:58:42.083687Z",
        "url": "https://files.pythonhosted.org/packages/5c/03/10b32d46458b6fa88c516567e93c2a1e49356f7e11aa38d9a80abfc68f70/nlcor-3.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "395fe6881fa47a7057a766cff74163ead40fbdd61fcc9e9908cda76668c48384",
          "md5": "6e4771bf4077bed404d62bfbb101f522",
          "sha256": "8622093dec79f3831c2f2aa58567dd2b13f8fec484ca7a760e1e0bdb65d745b2"
        },
        "downloads": -1,
        "filename": "nlcor-3.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6e4771bf4077bed404d62bfbb101f522",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10017,
        "upload_time": "2022-10-12T14:49:33",
        "upload_time_iso_8601": "2022-10-12T14:49:33.365622Z",
        "url": "https://files.pythonhosted.org/packages/39/5f/e6881fa47a7057a766cff74163ead40fbdd61fcc9e9908cda76668c48384/nlcor-3.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3fe973e621e7faa3d35668767461aa44c00aa3461b4632b3d2a7e308309ff10",
          "md5": "d5874988d2304bea003925bcba72faaa",
          "sha256": "10c34c3b6b33f99a55ee37f9abc393062b945a307f207efced715dec50b4690c"
        },
        "downloads": -1,
        "filename": "nlcor-3.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d5874988d2304bea003925bcba72faaa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11965,
        "upload_time": "2022-10-12T14:49:35",
        "upload_time_iso_8601": "2022-10-12T14:49:35.190000Z",
        "url": "https://files.pythonhosted.org/packages/e3/fe/973e621e7faa3d35668767461aa44c00aa3461b4632b3d2a7e308309ff10/nlcor-3.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "395fe6881fa47a7057a766cff74163ead40fbdd61fcc9e9908cda76668c48384",
        "md5": "6e4771bf4077bed404d62bfbb101f522",
        "sha256": "8622093dec79f3831c2f2aa58567dd2b13f8fec484ca7a760e1e0bdb65d745b2"
      },
      "downloads": -1,
      "filename": "nlcor-3.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6e4771bf4077bed404d62bfbb101f522",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10017,
      "upload_time": "2022-10-12T14:49:33",
      "upload_time_iso_8601": "2022-10-12T14:49:33.365622Z",
      "url": "https://files.pythonhosted.org/packages/39/5f/e6881fa47a7057a766cff74163ead40fbdd61fcc9e9908cda76668c48384/nlcor-3.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e3fe973e621e7faa3d35668767461aa44c00aa3461b4632b3d2a7e308309ff10",
        "md5": "d5874988d2304bea003925bcba72faaa",
        "sha256": "10c34c3b6b33f99a55ee37f9abc393062b945a307f207efced715dec50b4690c"
      },
      "downloads": -1,
      "filename": "nlcor-3.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "d5874988d2304bea003925bcba72faaa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11965,
      "upload_time": "2022-10-12T14:49:35",
      "upload_time_iso_8601": "2022-10-12T14:49:35.190000Z",
      "url": "https://files.pythonhosted.org/packages/e3/fe/973e621e7faa3d35668767461aa44c00aa3461b4632b3d2a7e308309ff10/nlcor-3.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}