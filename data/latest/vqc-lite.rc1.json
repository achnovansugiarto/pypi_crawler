{
  "info": {
    "author": "Kevin Shen",
    "author_email": "kevinshen.abcd@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# VQC-Lite\n\nVQC-Lite is an object-oriented Python library for building variational quantum circuits and related tasks in quantum \nmachine learning (QML). \n\nVQC-Lite may not be the most efficient simulator, but it's definitely an intuitive, reader-friendly and simple-to-use one. With \njust a few hundred lines of code and full documentation, one could see how a VQC is built layer by layer, from \nelementary unitary gates all the way up to a differentiable and optimizable quantum circuit. \n\nVQC-Lite provides two alternative ways to construct VQCs, one involving only standard numpy functions, and one using the \nframework Pennylane (https://github.com/PennyLaneAI/pennylane). Both implementations give VQCs of similar \nfunctionalities with the same I/O. While the latter is currently more efficiently integrated with Jax for circuit \noptimization by differentiation, the former provides the additional feature of optimization by sweeping.\n\nAuthor and Developer: Kevin Shen -> [Github](https://github.com/kevinkayyy) -> [LinkedIn](https://www.linkedin.com/in/kevinshen-tum)\n\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install VQC-Lite.\n\n```bash\npip install vqc_lite\n```\n\nUse the requirements.txt sheet to install dependencies\n\n```bash\npip install -r requirements.txt\n```\n\n## Usage\n\nPlease read the Jupyter Notebooks under the folder demo/ for more details. There contains 2 notebooks.\n\nThe notebook \"circuit\" gives an introduction to the VQC circuit stacks.\n\nThe notebook \"experiment\" gives an illustrative example application for VQC: uploading an image onto a quantum computer.\n\n```python\nimport numpy as np\nfrom vqc_lite.circuit_stack_pennylane.circuit_mps import MPS_GU2_P\nfrom vqc_lite.experiments.expressibility import Expressibility_Evaluation\nfrom vqc_lite.experiments.state_preparation import Compression_Adam\n\n# initialize a VQC\ncircuit = MPS_GU2_P(nl=1, nq=4)  # 1 layer of general 2 qubit gates covering 4 qubits\n\n# execute a VQC\nparams = np.random.uniform(size=45)  # 3 gates, each with 15 parameters\nparams = circuit.params_to_proper_shape(params)  # reshape the parameters\npsi_out = circuit.run_with_param_input(params)  # get output state\n\n# state preparation with VQC\nghz = np.zeros(4 * [2])  # Let's compress a GHZ state as an example\nghz[0, 0, 0, 0] = 1 / np.sqrt(2)\nghz[1, 1, 1, 1] = 1 / np.sqrt(2)\ntask = Compression_Adam(ghz, circuit, steps=1000)  # use Adam optimizer\ntask.run()\n\n# evaluate expressibility\ntask = Expressibility_Evaluation(circuit)\ntask.run()\n\n```\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\n## License\n[Apache-2.0](https://choosealicense.com/licenses/apache-2.0/)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kevinkayyy/VQC-Lite",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vqc-lite",
    "package_url": "https://pypi.org/project/vqc-lite/",
    "platform": null,
    "project_url": "https://pypi.org/project/vqc-lite/",
    "project_urls": {
      "Homepage": "https://github.com/kevinkayyy/VQC-Lite"
    },
    "release_url": "https://pypi.org/project/vqc-lite/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "vqc_lite: A reader-friendly Python implementation of Variational Quantum Circuits (VQC) based on Jax and Pennylane",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15451881,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd73b051c14e865fea341a22484099b1790e5000bd49897d7db9f45163c6859e",
          "md5": "2833ca5dbbffd6e5e3fdc6e64e54220a",
          "sha256": "746bb8a4924dca103f2722742ca1e1f3520cd8e499fd73816d594d17961cd5fb"
        },
        "downloads": -1,
        "filename": "vqc_lite-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2833ca5dbbffd6e5e3fdc6e64e54220a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21885,
        "upload_time": "2022-10-18T17:43:51",
        "upload_time_iso_8601": "2022-10-18T17:43:51.733520Z",
        "url": "https://files.pythonhosted.org/packages/cd/73/b051c14e865fea341a22484099b1790e5000bd49897d7db9f45163c6859e/vqc_lite-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd73b051c14e865fea341a22484099b1790e5000bd49897d7db9f45163c6859e",
        "md5": "2833ca5dbbffd6e5e3fdc6e64e54220a",
        "sha256": "746bb8a4924dca103f2722742ca1e1f3520cd8e499fd73816d594d17961cd5fb"
      },
      "downloads": -1,
      "filename": "vqc_lite-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2833ca5dbbffd6e5e3fdc6e64e54220a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21885,
      "upload_time": "2022-10-18T17:43:51",
      "upload_time_iso_8601": "2022-10-18T17:43:51.733520Z",
      "url": "https://files.pythonhosted.org/packages/cd/73/b051c14e865fea341a22484099b1790e5000bd49897d7db9f45163c6859e/vqc_lite-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}