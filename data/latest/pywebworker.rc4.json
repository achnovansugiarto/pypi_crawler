{
  "info": {
    "author": "malogan (Mason Logan)",
    "author_email": "<dev@masonlogan.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PyWebWorker\n\n\n\n## Background\n\nOut-of-the box Pyodide lacks support for a pure Python solution to using web workers. PyWebWorker seeks to fill that \n\ngap by providing a set of Python objects and functions to interact with the Web Worker API.\n\n\n\n## Installation\n\nPyWebWorker can be imported using **micropip**:\n\n\n\n```python\n\nimport micropip\n\nawait micropip.install('pywebworker')\n\n```\n\n\n\n## Quick Reference\n\nThe examples here are valid as of **Version 0.0.8**\n\n\n\n### Sending/Receiving with built-in messaging\n\n```python\n\nfrom pywebworker import Worker\n\n\n\n# This script will print a message to the console when the worker starts and\n\n# will echo back any messages it receives\n\nscript = '''\n\nconsole.log('worker created');\n\nself.onmessage = function(message){\n\n\tconsole.log('Received: ' + message.data);\n\n\tself.postMessage(message.data);\n\n}\n\n'''\n\n\n\n# IMPORTANT NOTE: executing this whole script will yield errors! Because the worker executes in another thread, this\n\n# script will go to the next line IMMEDIATELY after sending a message. The workers, while very fast, cannot echo the \n\n# messages back that quickly.\n\nworker = Worker(script)\n\nworker.start()\n\n\n\n# the script echos back whatever we send, that message should be ready for us\n\nworker.send_message('This is the first message')\n\nmessages = worker.get_unread_messages()\n\n\n\n# messages have a .read method so the consumer knows what has and has not been processed\n\nprint([message.read() for message in messages])\n\n\n\n# the message list can be checked for any unread messages using the has_unread_messages method\n\nworker.send_message('This is the second message')\n\nprint(worker.has_unread_messages())\n\n\n\n# individual messages can be checked to see if they have been read or not\n\nfirst_message = worker.get_message(0)\n\nsecond_message = worker.get_message(1)\n\nprint(first_message.is_read())\n\nprint(second_message.is_read())\n\n\n\n# messages can be directly requested as well\n\nworker.send_message('This is the third message')\n\nprint(worker.get_message(2).read())\n\n\n\n# you can also get the next unread message:\n\nworker.send_message('This is the fourth message')\n\nprint(worker.get_next_unread_message().read())\n\n\n\n# killing the worker stops it *immediately*. Anything in-progress will be stopped, so only use this when it is certain\n\n# the worker is done and no longer needed!\n\nworker.kill()\n\n```\n\n\n\n### Sending/Receiving with custom onmessage process\n\n```python\n\nfrom pywebworker import Worker, WorkerMessageQueue\n\n\n\n# sample script for quick testing\n\nsample_script = '''\n\nconsole.log('worker created');\n\nself.onmessage = function(message){\n\n    console.log('Received: ' + message.data);\n\n    self.postMessage(message.data);\n\n}\n\n'''\n\n\n\n# WorkerMessageQueue objects are provided to more easily convert JavaScript's EventMessage objects into more\n\n# python-friendly WorkerMessage objects, but any function can be given to onmessage\n\nmessage_queue = WorkerMessageQueue()\n\nqueue_method = lambda event: message_queue.put(event)\n\nworker = Worker(sample_script, [queue_method])\n\nworker.start()\n\n\n\n# Functions can also be added to the onmessage execution process after the worker is created\n\n#worker.add_to_onmessage(lambda event: message_queue.put(event))\n\n\n\n# Reminder: executing this entire block at once will cause an error; the worker cannot echo as fast as pyodide moves\n\n# to the next line\n\nworker.send_message('message 0')\n\nprint(worker.messages)\n\nqueue_message = message_queue.get()\n\nprint(queue_message.read())\n\n```\n\n\n\n### Sending/Receiving using Python code\n\n```python\n\nfrom pywebworker import PyWorker\n\n\n\n# PyWorkers can take time to load! Give it a few seconds to get running before expecting the output\n\nworker = PyWorker()\n\nworker.start()\n\n\n\n# whatever is passed via send_message is executed!\n\nworker.send_message(\"print('hello world')\")\n\nprint(worker.get_next_unread_message().read())\n\n```\n\n\n\n\n\n## Roadmap\n\n\n\n#### *This timeline is tentative and subject to change*\n\n\n\n### Version 0.1.0\n\n\n\n- PyWorker and JsWorker as objects that run either Python or JavaScript, respectively\n\n- Exception handling for common errors\n\n- Enhancements to underlying JavaScript\n\n- Add tests for basic object functions\n\n\n\n### Version 0.2.0\n\n\n\n- Ability to execute scripts from Enscriptem and URI's\n\n- Place JavaScript for underlying JS objects into its own file (as opposed to text in a python module)\n\n\n\n### Version 0.X.0: Planned near-future but not scheduled\n\n\n\n- Ability to pass environment settings to the interpreter in PyWorkers (currently runs on defaults)\n\n- Creation of flexible thread pool for PyWorkers\n\n\n\n## Known Limitations\n\n\n\n### PyWorkers are slow to start\n\nIn order to run Pyodide in a worker, it must be downloaded and started in each worker thread, which takes time. The \n\ngoal is to eventually have a pool of threads that start this process in the background on import.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/masonlogan1/pywebworker",
    "keywords": "python,pyodide,web workers,web api",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pywebworker",
    "package_url": "https://pypi.org/project/pywebworker/",
    "platform": null,
    "project_url": "https://pypi.org/project/pywebworker/",
    "project_urls": {
      "Homepage": "https://github.com/masonlogan1/pywebworker"
    },
    "release_url": "https://pypi.org/project/pywebworker/0.0.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python tools for interacting with Web Workers in Pyodide",
    "version": "0.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15279090,
  "releases": {
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbeba3f7de2a2164ad8baa0e62f66de7edaf95a8c3964339f745580f1e519799",
          "md5": "1647d0b810c83ee4eddf5b9e19d33f44",
          "sha256": "3055dda7fd578dfaea23cb744f214c529d73af229ea3cf17e79cd1ef0eb0259b"
        },
        "downloads": -1,
        "filename": "pywebworker-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1647d0b810c83ee4eddf5b9e19d33f44",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9423,
        "upload_time": "2022-09-26T00:19:41",
        "upload_time_iso_8601": "2022-09-26T00:19:41.224449Z",
        "url": "https://files.pythonhosted.org/packages/db/eb/a3f7de2a2164ad8baa0e62f66de7edaf95a8c3964339f745580f1e519799/pywebworker-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23b10eca36a69e246324c04aa0cf1527e2d38faf9b6fb62472cfd9eb9a4cabd0",
          "md5": "a034de09d37ac83595d70773bc73bb92",
          "sha256": "1a835471fee3ccca7971b2c8c024fd9116e6bf03b1c472f4983b045a0471ebae"
        },
        "downloads": -1,
        "filename": "pywebworker-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a034de09d37ac83595d70773bc73bb92",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8859,
        "upload_time": "2022-09-26T00:19:43",
        "upload_time_iso_8601": "2022-09-26T00:19:43.319338Z",
        "url": "https://files.pythonhosted.org/packages/23/b1/0eca36a69e246324c04aa0cf1527e2d38faf9b6fb62472cfd9eb9a4cabd0/pywebworker-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ac1e4dc60cbcac174e0fa9da4083f3deeac26ca7b71fdf0a763e7ccfdd21688",
          "md5": "ece01c49465f43b80ccab0f8e38209ff",
          "sha256": "60132eab0ad4f9af32154b0b803aeb3bb872af12e7f026062a1954112030b733"
        },
        "downloads": -1,
        "filename": "pywebworker-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ece01c49465f43b80ccab0f8e38209ff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11099,
        "upload_time": "2022-09-29T02:11:37",
        "upload_time_iso_8601": "2022-09-29T02:11:37.510451Z",
        "url": "https://files.pythonhosted.org/packages/9a/c1/e4dc60cbcac174e0fa9da4083f3deeac26ca7b71fdf0a763e7ccfdd21688/pywebworker-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "306bfc067c9b93150a12d145bd134c82436d0548df53f7fb9fab75599f5daf2d",
          "md5": "91455ef2e8f487e23ce37ee7bb674531",
          "sha256": "515cb45a20464e03c59e2d6c9103c4f045ae1c461464a333219fcd5ff7e47d08"
        },
        "downloads": -1,
        "filename": "pywebworker-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "91455ef2e8f487e23ce37ee7bb674531",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10462,
        "upload_time": "2022-09-29T02:11:39",
        "upload_time_iso_8601": "2022-09-29T02:11:39.739447Z",
        "url": "https://files.pythonhosted.org/packages/30/6b/fc067c9b93150a12d145bd134c82436d0548df53f7fb9fab75599f5daf2d/pywebworker-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9bb2915dbc716372c459e0fa900f533f851662769a3370e19fc63e493edf1a4",
          "md5": "ddac976ca2856416af2aa5b0277b1c1f",
          "sha256": "d17d1346f0bd40b067b1203c4a87507ab7368fa313640e184dd6bd648340b8f8"
        },
        "downloads": -1,
        "filename": "pywebworker-0.0.7a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ddac976ca2856416af2aa5b0277b1c1f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13385,
        "upload_time": "2022-09-30T05:17:01",
        "upload_time_iso_8601": "2022-09-30T05:17:01.728024Z",
        "url": "https://files.pythonhosted.org/packages/b9/bb/2915dbc716372c459e0fa900f533f851662769a3370e19fc63e493edf1a4/pywebworker-0.0.7a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d82cd090a42a781761ae5b6cb313528e540446011e8c9abf73eae3dd3dc240b1",
          "md5": "1905236576d554953dfb2c38a93adf9a",
          "sha256": "884ff3e450e0bf807a1dc3894af052125e454ce04d883c7c1247ba44899d986b"
        },
        "downloads": -1,
        "filename": "pywebworker-0.0.7a1.tar.gz",
        "has_sig": false,
        "md5_digest": "1905236576d554953dfb2c38a93adf9a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11584,
        "upload_time": "2022-09-30T05:17:03",
        "upload_time_iso_8601": "2022-09-30T05:17:03.921370Z",
        "url": "https://files.pythonhosted.org/packages/d8/2c/d090a42a781761ae5b6cb313528e540446011e8c9abf73eae3dd3dc240b1/pywebworker-0.0.7a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "424a81b7005d3eadc7dffd901519fb42969cdf7919a4057c24f14d78b9ca470c",
          "md5": "19057bd736c3bfaacc6fd8150e9e235e",
          "sha256": "5b920861a7ce1c95ef2e515c585ea10152a58943f807d8a7098c70b1e06a51b5"
        },
        "downloads": -1,
        "filename": "pywebworker-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "19057bd736c3bfaacc6fd8150e9e235e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16582,
        "upload_time": "2022-10-02T04:05:28",
        "upload_time_iso_8601": "2022-10-02T04:05:28.187012Z",
        "url": "https://files.pythonhosted.org/packages/42/4a/81b7005d3eadc7dffd901519fb42969cdf7919a4057c24f14d78b9ca470c/pywebworker-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fd7503157822d4e421c01a73e296b128ba58827987f771df7cf1fd4c9d3974b",
          "md5": "204d3068a944004bb73a222819e29b95",
          "sha256": "1f3d1031f0ccfd8655e87290657014393e09782321ca5d746be9c00f961fc3d8"
        },
        "downloads": -1,
        "filename": "pywebworker-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "204d3068a944004bb73a222819e29b95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15306,
        "upload_time": "2022-10-02T04:05:29",
        "upload_time_iso_8601": "2022-10-02T04:05:29.851448Z",
        "url": "https://files.pythonhosted.org/packages/2f/d7/503157822d4e421c01a73e296b128ba58827987f771df7cf1fd4c9d3974b/pywebworker-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "424a81b7005d3eadc7dffd901519fb42969cdf7919a4057c24f14d78b9ca470c",
        "md5": "19057bd736c3bfaacc6fd8150e9e235e",
        "sha256": "5b920861a7ce1c95ef2e515c585ea10152a58943f807d8a7098c70b1e06a51b5"
      },
      "downloads": -1,
      "filename": "pywebworker-0.0.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "19057bd736c3bfaacc6fd8150e9e235e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16582,
      "upload_time": "2022-10-02T04:05:28",
      "upload_time_iso_8601": "2022-10-02T04:05:28.187012Z",
      "url": "https://files.pythonhosted.org/packages/42/4a/81b7005d3eadc7dffd901519fb42969cdf7919a4057c24f14d78b9ca470c/pywebworker-0.0.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2fd7503157822d4e421c01a73e296b128ba58827987f771df7cf1fd4c9d3974b",
        "md5": "204d3068a944004bb73a222819e29b95",
        "sha256": "1f3d1031f0ccfd8655e87290657014393e09782321ca5d746be9c00f961fc3d8"
      },
      "downloads": -1,
      "filename": "pywebworker-0.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "204d3068a944004bb73a222819e29b95",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15306,
      "upload_time": "2022-10-02T04:05:29",
      "upload_time_iso_8601": "2022-10-02T04:05:29.851448Z",
      "url": "https://files.pythonhosted.org/packages/2f/d7/503157822d4e421c01a73e296b128ba58827987f771df7cf1fd4c9d3974b/pywebworker-0.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}