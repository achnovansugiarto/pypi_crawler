{
  "info": {
    "author": "kazaamjt",
    "author_email": "kazaamjt@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Scylla\n\nScyla downloads files in parallel.  \nIt is aimed at speeding up concurrent downloads, not at being as fast as possible per download.  \nThere are probably a bunch of tools out there that are faster, as that is not scylas goal.  \nThe reason scylla exists is because I had to repeatedly download a bunch of files and it took a while with `wget`.  \n\nIt can be used from the command line or as importable module.  \nFrom the commandline it is quite easy to use:  \n\n```bash\nkazaamjt@workstation:~$ scylla -f url_list -o artifacts/\n```\n\nAlternativly you can import the module from in a script.  \n\n## CLI Options\n\nAs mentioned, the CLI is quite simple, it does not have many options:  \n\n```bash\nkazaamjt@workstation:~$ scylla --help\nUsage: scylla [OPTIONS]\n\nOptions:\n  -f, --file TEXT               Path to a file containing urls.\n  -o, --output-dir TEXT         Directory to store the retrieved files.\n  -s, --max-concurrent INTEGER  Maximum number of simultanious files to\n                                download. Setting this to 0 will make scylla\n                                try to download all the files at once.\n  --help                        Show this message and exit.\n```\n\n## Using as a module\n\nUsing as a module is also not very difficult.  \nDo note that the module uses `async`, so it does have some gotchas.  \nAlso note that the module is fully typed, hopefully making its usage easier.  \n\nTo use it simply import the module and instantiate the `Downloader` class:  \n\n```Python\nimport asyncio\nfrom pathlib import Path\n\nimport scylla\n\nurls = [\n    \"https://www.kernel.org/pub/linux/kernel/v5.x/linux-5.10.17.tar.xz\",\n    \"https://example.com/\",\n]\n\nasync def main() -> None:\n    downloader = Downloader(urls, Path(\".\"))\n    await downloader.start()\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n```\n\nThe most important gotcha here is making sure the `downloader` class is instantiated in\nthe same event-loop as `Downloader.start` is called from.  \nWe do this here by wrapping them in a single `async` function.  \n\nAnd that's it really.  \n\nThe class has a couple more init parameters that are more for advanced usage:\n\n    - max_concurrent: int = 5  \n      Same as the CLI, this changes the maximum number of downloads that run simultaniously.  \n    - chunk_report_cb: Optional[ChunkReportCallback] = None  \n      The function passed to this parameter will be called everytime a chunk was succesfully downloaded and saved.  \n      Usefull for tracking download progress.  \n    - report_done_cb: Optional[Callable[[str], None]] = None  \n      The function passed to this parameter will be called everytime a download is completed.  \n      The parameter being passed back is the name of the file.  \n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kazaamjt/Scylla",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scylla-http",
    "package_url": "https://pypi.org/project/scylla-http/",
    "platform": "",
    "project_url": "https://pypi.org/project/scylla-http/",
    "project_urls": {
      "Homepage": "https://github.com/kazaamjt/Scylla"
    },
    "release_url": "https://pypi.org/project/scylla-http/1.0.0/",
    "requires_dist": [
      "aiohttp (==3.7.4.post0)",
      "click (==8.0.1)"
    ],
    "requires_python": ">=3.9",
    "summary": "The parallel downloader.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11044939,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77af17383aab18cf2ccec2106d42f572391710997c41e160d0b6583af49a50ff",
          "md5": "f0dabaaed928f351ed8d40b62cad9f3b",
          "sha256": "0932a15d840d2b58cc7c92b9af496772e2da718b9a6fb9c9cb715949ddd1fbf0"
        },
        "downloads": -1,
        "filename": "scylla_http-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f0dabaaed928f351ed8d40b62cad9f3b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 6295,
        "upload_time": "2021-07-29T23:50:07",
        "upload_time_iso_8601": "2021-07-29T23:50:07.807321Z",
        "url": "https://files.pythonhosted.org/packages/77/af/17383aab18cf2ccec2106d42f572391710997c41e160d0b6583af49a50ff/scylla_http-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f970a798a00ce346c0dff61cd4ac0785dc1c9ba64894e3a7cf0abc67caaf15c3",
          "md5": "d2c9eed4bd2d3bb09e54c0abf164c71e",
          "sha256": "21bf3724e24c31673eb252d10d635b456774991466573dff5ad9f6cea5a2b205"
        },
        "downloads": -1,
        "filename": "scylla-http-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d2c9eed4bd2d3bb09e54c0abf164c71e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 6975,
        "upload_time": "2021-07-29T23:50:09",
        "upload_time_iso_8601": "2021-07-29T23:50:09.661918Z",
        "url": "https://files.pythonhosted.org/packages/f9/70/a798a00ce346c0dff61cd4ac0785dc1c9ba64894e3a7cf0abc67caaf15c3/scylla-http-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "77af17383aab18cf2ccec2106d42f572391710997c41e160d0b6583af49a50ff",
        "md5": "f0dabaaed928f351ed8d40b62cad9f3b",
        "sha256": "0932a15d840d2b58cc7c92b9af496772e2da718b9a6fb9c9cb715949ddd1fbf0"
      },
      "downloads": -1,
      "filename": "scylla_http-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f0dabaaed928f351ed8d40b62cad9f3b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 6295,
      "upload_time": "2021-07-29T23:50:07",
      "upload_time_iso_8601": "2021-07-29T23:50:07.807321Z",
      "url": "https://files.pythonhosted.org/packages/77/af/17383aab18cf2ccec2106d42f572391710997c41e160d0b6583af49a50ff/scylla_http-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f970a798a00ce346c0dff61cd4ac0785dc1c9ba64894e3a7cf0abc67caaf15c3",
        "md5": "d2c9eed4bd2d3bb09e54c0abf164c71e",
        "sha256": "21bf3724e24c31673eb252d10d635b456774991466573dff5ad9f6cea5a2b205"
      },
      "downloads": -1,
      "filename": "scylla-http-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d2c9eed4bd2d3bb09e54c0abf164c71e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 6975,
      "upload_time": "2021-07-29T23:50:09",
      "upload_time_iso_8601": "2021-07-29T23:50:09.661918Z",
      "url": "https://files.pythonhosted.org/packages/f9/70/a798a00ce346c0dff61cd4ac0785dc1c9ba64894e3a7cf0abc67caaf15c3/scylla-http-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}