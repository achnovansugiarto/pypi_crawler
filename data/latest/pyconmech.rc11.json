{
  "info": {
    "author": "Yijiang Huang",
    "author_email": "yijiangh@mit.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering"
    ],
    "description": "=======\nconmech\n=======\n\n\n\n.. Write project description\n\n**conmech** is a stiffness checker that performs elastic deformation analysis for 3D frame structures. \nIt is designed for construction sequencing applications, which involves testing\nthe partially assembled structure (subset of the element permutation) many times.\n\nFor now, **conmech** only supports first-order linear FEM simulations of 2D/3D frame structures \n(similar to the `Analyze <https://manual.karamba3d.com/3-in-depth-component-reference/3.5-algorithms/3.5.1-analyze>`_ component in Karamba),\nbut stay tune for a shell analysis backend coming soon â˜•!\n\n**conmech** has a high-performing `C++` backend (written in C++11 and wrapped friendly with Python via `pybind11 <https://github.com/pybind/pybind11>`_) and \na flexible, but less performative `numpy` backend.\n\nðŸš§ The `C++` backend is under development to keep up with the latest feature\nimplemented in the `numpy` backend. Please use the `numpy` backend until the next release.\n\nUsage\n-----\n\nInput model\n^^^^^^^^^^^\n\nThere are two ways to specify and input a structural model (geometry, material, cross sections, joint releases, support conditions, and loads)\nto conmech: \n\n(1) directly input data following class structures specified in `pyconmech.frame_analysis.io_base`\n(2) write your data in a `JSON` format and input the file path to conmech (See `file examples here <https://github.com/yijiangh/conmech/tree/master/tests/test_data>`_.\n\nThe easiest way to generate the model JSON file by exporting from a `Karamba3D`_ model in `Rhino-Grasshopper`_. \nA `example GH export file <https://github.com/yijiangh/conmech/tree/master/examples/gh_scripts/karamba/export_from_karamba.gh>`_ is provided:\n\n.. image:: ./examples/gh_scripts/karamba/images/karamba_model_export.png\n    :width: 200px\n    :align: center\n    :target: https://coveralls.io/github/yijiangh/conmech?branch=master\n    :alt: karamba_model_export\n\nYou can also parse your model JSON file back to Rhino/GH for visualization/debugging by using the `parse GH example file <https://github.com/yijiangh/conmech/tree/master/examples/gh_scripts/parse_frame_json_conmech.ghx>`_.\n\nAnalysis\n^^^^^^^^\n\nAfter you have the input model ready, analysis is straight-forward:\n\n.. code-block:: python\n\n    from pyconmech import StiffnessChecker\n\n    sc = StiffnessChecker.from_json(json_file_path=frame_file_path, checker_engine=\"numpy\", verbose=True)\n    gravity_load = GravityLoad([0,0,-1]) \n    sc.set_loads(gravity_load=gravity_load)\n\n    # if the structure's nodal deformation exceeds 1e-3 meter, \n    # we want the checker to return `sol_success = False`\n    trans_tol = 1e-3\n    sc.set_nodal_displacement_tol(trans_tol=trans_tol)\n\n    # existing elements' indices\n    existing_ids = [0,4,88,6]\n\n    # False if the analysis result\n    sol_success = sc.solve(existing_ids)\n\n    # Get all the analysis information:\n    # nodal deformation, fixity reactions, element reactions\n    success, nD, fR, eR = sc.get_solved_results()\n\nSee `python unit tests <https://github.com/yijiangh/conmech/blob/master/tests/python/test_stiffness_checker.py>`_ for more examples.\n\nInstallation\n------------\n\n::\n\n  python -m pip install pyconmech --user\n  # or python3 if default python is 2.x (OSX or Linux)\n  # try the following flags when updating: --user --upgrade --force\n\n\nBuild from source\n-----------------\n\nBuild python bindings\n^^^^^^^^^^^^^^^^^^^^^\n\nPrerequisites\n\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nThe following dependencies come from pybind11 for building the python wrappers.\n\n**On Unix (Linux, OS X)**\n\n* A compiler with C++11 support\n* CMake >= 3.1\n\n**On Windows**\n\n* Visual Studio 2015 (required for all Python versions, see notes below)\n* CMake >= 3.1\n\nThen, clone this repository and pip install.\n\n::\n\n  cd conmech\n  python -m pip install .\n  # or python3 if default python is 2.x (OSX or Linux)\n  # try the following flags when updating: --user --upgrade --force \n\nWith the ``setup.py`` file included in the base folder, the pip install command will invoke CMake and build the pybind11 module as specified in CMakeLists.txt.\n\n**Note:**\n\n*conmech*'s python bindings are built with a CMake-based build system via pybind11.\nTake a look at `cmake_example for pybind11 <https://github.com/pybind/cmake_example>`_ \nif you want to learn more about this.\n\n*conmech* depends on `Eigen <http://eigen.tuxfamily.org/index.php?title=Main_Page>`_ for linear algebra \nand `nlohmann::json <https://github.com/nlohmann/json>`_ \nfor json (de-)serialization, both of which are handled automatically by cmake for downloading.\n\nBuild C++ code\n^^^^^^^^^^^^^^\n\n::\n\n  mkdir build\n  cd build\n  cmake ..\n  make -j2 # Unix\n\nOr on Windows, replace the last line with\n\n::\n\n  cmake --build .\n\n\nReferences\n----------\n\nCredits\n^^^^^^^\n\n    Yijiang Huang. Conmech. https://pypi.org/project/pyconmech/. 2020.\n\nThis package was initiated and maintained by Yijiang Huang `@yijiangh <https://github.com/yijiangh>`_\nand other `contributors <https://github.com/yijiangh/conmech/blob/master/AUTHORS.rst>`_.\n\nReferences\n^^^^^^^^^^^^^\n\nThe following textbook is an excellent resource for learning 2D/3D truss/frame analysis, many of \n`conmech`'s unit tests are using examples in this textbook as analytical benchmarks:\n\n    McGuire, W., R. H. Gallagher, and R. D. Ziemian. \"Structural Analysis, Title: Matrix Structural Analysis.\" (2015).\n\n\nRelated repos\n^^^^^^^^^^^^^\n\n`Frame3dd`_: A static and dynamic structural analysis software of 2D and 3D frames and trusses with elastic and geometric stiffness written in `C`.\n\n.. -----------------\n\n.. _Karamba3D: https://www.karamba3d.com/\n.. _Frame3dd: http://frame3dd.sourceforge.net/\n.. _Rhino-Grasshopper: https://www.rhino3d.com/6/new/grasshopper\n\n=========\nChangelog\n=========\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on `Keep a Changelog <https://keepachangelog.com/en/1.0.0/>`_\nand this project adheres to `Semantic Versioning <https://semver.org/spec/v2.0.0.html>`_.\n\n0.6.0\n----------\n\n**added**\n\n- Added `karamba_io` module to facilitate `Karamba3d`-`JSON` two way conversion.\n- Added `Model` and `LoadCase` classes\n- Added element information to `ValueError` when encountering zero-length line element\n- Added print out attributes to `Node` and `Element`\n\n**changed**\n\n- Changed `StiffnessBase`'s `__init__` from inputting `nodes, elements, ...` to `Model`\n- Moved `get_element_crossec` and `get_element_material` from `NumpyStiffness` to `StiffnessBase`\n- Changed `StiffnessChecker`'s `set_loads` to take `LoadCase` object\n- Changed `Joint`'s `c_conditions` attribute to a 12-entry list instead of a dictionary with two six-entry lists\n- Karamba conversion is now done more formally with `karam_io` modules, without using an ad-hoc C# component.\n\n**removed**\n\n**fixed**\n\n\n0.5.0\n----------\n\n**added**\n\n- added the `numpy` engine\n- added removing loads functionality by passing in `none`\n- added base classes for input data: `io_base.node, element, support, joint, material, crosssec, pointload, etc.`\n\n**changed**\n\n- changed frame data format, use karamba exported format\n- changed `stiffnesschecker`'s `__init__` function's arguments to take `io_base.*` data\n- changed `stiffnesschecker`'s default behavior: not applying gravity load by default\n- changed ``-dconmech_build_tests=off`` in ``setup_cmake_utils.py`` to disable cpp test building in ``python setup.py build``\n\n**removed**\n\n**fixed**\n\n**changed**\n\n0.4.0\n-----------\n\n**Added**\n\n- Added ``StiffnessChecker`` class method, directly construct from frame data, without saving data to a temp json\n- Added some initial cpp unit tests, test data fed in by CMake and tests organized by ``Catch2``\n\n**Changed**\n\n- Changed ``rapidjson`` to ``nlohmann::json``\n\n**Removed**\n\n- Removed the `Frame` data structure in Stiffness checker's cpp backend\n- Removed all the git submodule and used CMake download external instead\n\n**Fixed**\n\n- Fixed the memory leak caused by the smart pointer cycle dependency in ``Frame``\n\n0.3.1\n----------\n\n**Added**\n\n- Added unit tests for `std::throw` in parsing material properties\n\n0.3.0\n----------\n\n**Changed**\n\n- Changed `try/catch` in the C++ file parsing to `std::throw` \n\n0.2.0\n-----\n\n**Changed**\n\n- The original ``stiffness_checker`` extension module is wrapper as ``_stiffness_checker``.\n  All the cpp modules are wrapper under a top-level python classes/functions, to give more\n  flexibility.\n- **API change**: ``stiffness_checker`` class is renamed to ``StiffnessChecker`` to conform\n    to the class naming convention. All other APIs within this class are left unchanged.\n- Delete ``radius`` entry from ``material_properties``.\n\n\n**Added**\n\n- documentation is hosted on readthedocs!\n- add grasshopper examples - parse/save files, karamba comparsion, solve/get result in GH via ghpython-remote\n- supports material / cross sectional properties for each element. \n- supports uniformly distributed load\n- add gravity magnitude and direction\n\n0.1.0\n-----\n\nInitial version",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yijiangh/conmech",
    "keywords": "3D frame analysis,Finite Element Analysis,Structural Analysis",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyconmech",
    "package_url": "https://pypi.org/project/pyconmech/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyconmech/",
    "project_urls": {
      "Homepage": "https://github.com/yijiangh/conmech"
    },
    "release_url": "https://pypi.org/project/pyconmech/0.6.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "py bindings for conmech: a C++ lib for 3D frame elastis deformation analysis.",
    "version": "0.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8812749,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb6e112d567c97144d9d418beb2396af48afabead828706b2552919f8a27524b",
          "md5": "1bf8154d7fa01bb6e197d0f3725634d5",
          "sha256": "423a17187513b1e23abfbba0ae3ca1789c6be4e156b104c4a46c713070235239"
        },
        "downloads": -1,
        "filename": "pyconmech-0.1.1-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "1bf8154d7fa01bb6e197d0f3725634d5",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 192017,
        "upload_time": "2019-07-25T18:46:46",
        "upload_time_iso_8601": "2019-07-25T18:46:46.661095Z",
        "url": "https://files.pythonhosted.org/packages/fb/6e/112d567c97144d9d418beb2396af48afabead828706b2552919f8a27524b/pyconmech-0.1.1-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f06e86183d190996988bc84e8f54e82eda2c6a84768987b7c254ca7e38980f05",
          "md5": "1122ae4c8404dde871e0c9c36c616f80",
          "sha256": "199aa18bc6f47c8fe160cdbdd5153adcbadb650564cd43455a9712d46a93ccd2"
        },
        "downloads": -1,
        "filename": "pyconmech-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1122ae4c8404dde871e0c9c36c616f80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3832290,
        "upload_time": "2019-07-25T18:46:49",
        "upload_time_iso_8601": "2019-07-25T18:46:49.920803Z",
        "url": "https://files.pythonhosted.org/packages/f0/6e/86183d190996988bc84e8f54e82eda2c6a84768987b7c254ca7e38980f05/pyconmech-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53857494e6d366c71d6f7abfee65f395e72ea867818067ebc39848b36a1bc3a5",
          "md5": "e9c16fd13e6872500967a6586d1e919b",
          "sha256": "5007f66cd553b30915e1a2bc59cbd558ec32f76e41d25c8a4298f539e32134a2"
        },
        "downloads": -1,
        "filename": "pyconmech-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e9c16fd13e6872500967a6586d1e919b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16648761,
        "upload_time": "2019-08-15T04:42:19",
        "upload_time_iso_8601": "2019-08-15T04:42:19.463925Z",
        "url": "https://files.pythonhosted.org/packages/53/85/7494e6d366c71d6f7abfee65f395e72ea867818067ebc39848b36a1bc3a5/pyconmech-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1758f14fdbc6b7e1bddcecec14f1b947975ab68ed9bd473683c77e4ac838b0c9",
          "md5": "e84b94cc0d83baf5fb1c6a4d9c861476",
          "sha256": "378f36c69593862f94a9cb1e4360df917ea29a64348564996fbbc988732b3df8"
        },
        "downloads": -1,
        "filename": "pyconmech-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e84b94cc0d83baf5fb1c6a4d9c861476",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1271718,
        "upload_time": "2019-08-28T15:58:18",
        "upload_time_iso_8601": "2019-08-28T15:58:18.506387Z",
        "url": "https://files.pythonhosted.org/packages/17/58/f14fdbc6b7e1bddcecec14f1b947975ab68ed9bd473683c77e4ac838b0c9/pyconmech-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "546bfb12c005b74c42e144c6ad22c9bf553438bf5e2a20af532c79b30efbe233",
          "md5": "01371e4755e5cc4eaaf05ea9b4495e85",
          "sha256": "9dfab12fe6c775725b353c0008e30e526c112c8e766eae66156f5c1ff4503add"
        },
        "downloads": -1,
        "filename": "pyconmech-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "01371e4755e5cc4eaaf05ea9b4495e85",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1274307,
        "upload_time": "2020-01-20T04:22:48",
        "upload_time_iso_8601": "2020-01-20T04:22:48.743824Z",
        "url": "https://files.pythonhosted.org/packages/54/6b/fb12c005b74c42e144c6ad22c9bf553438bf5e2a20af532c79b30efbe233/pyconmech-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e9ee5d406ef139007ae2d51b8d67a23bf30bd9271454304fef23a8593337ea5",
          "md5": "a3886b1ab52471a97cbb84985f5013bf",
          "sha256": "4606872d3cadd772c9dc66eaacb06a125faba3cc479dedfc6f12d069fbf56ea1"
        },
        "downloads": -1,
        "filename": "pyconmech-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a3886b1ab52471a97cbb84985f5013bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1275185,
        "upload_time": "2020-01-20T12:57:18",
        "upload_time_iso_8601": "2020-01-20T12:57:18.148017Z",
        "url": "https://files.pythonhosted.org/packages/7e/9e/e5d406ef139007ae2d51b8d67a23bf30bd9271454304fef23a8593337ea5/pyconmech-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6018709c33460825795130b6b9c698a77de74061a965e1ef89966f48ef1135c",
          "md5": "66fcb6698d7ac734fa1de015bb67e48a",
          "sha256": "1c03e425afed8ec6a0bb4f0962125e57c9f7a40a60b46539129f6a9524230a08"
        },
        "downloads": -1,
        "filename": "pyconmech-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "66fcb6698d7ac734fa1de015bb67e48a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 167083,
        "upload_time": "2020-03-02T22:42:54",
        "upload_time_iso_8601": "2020-03-02T22:42:54.320371Z",
        "url": "https://files.pythonhosted.org/packages/f6/01/8709c33460825795130b6b9c698a77de74061a965e1ef89966f48ef1135c/pyconmech-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b618d336fe419f39f80f8780a3ea3783bab011f1faaa698fb868e87644d63731",
          "md5": "8ed008c1b500845b1045ed459caac537",
          "sha256": "3d7f34bd07257ebb47f548ce3c26953674f8a854d1a11aaf5c3b80369d848aae"
        },
        "downloads": -1,
        "filename": "pyconmech-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8ed008c1b500845b1045ed459caac537",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1472424,
        "upload_time": "2020-03-03T01:53:29",
        "upload_time_iso_8601": "2020-03-03T01:53:29.354860Z",
        "url": "https://files.pythonhosted.org/packages/b6/18/d336fe419f39f80f8780a3ea3783bab011f1faaa698fb868e87644d63731/pyconmech-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3ccece6988d4c46d537dd8d7c462809a908f509ad60070b1449aa703fab5e88",
          "md5": "60a462104dcbea3246314bb3620a11c0",
          "sha256": "3d1a989773e700195ec06314380f8652858eaa61121a9daebc4375d52579f938"
        },
        "downloads": -1,
        "filename": "pyconmech-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "60a462104dcbea3246314bb3620a11c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 421092,
        "upload_time": "2020-03-04T05:42:44",
        "upload_time_iso_8601": "2020-03-04T05:42:44.541216Z",
        "url": "https://files.pythonhosted.org/packages/c3/cc/ece6988d4c46d537dd8d7c462809a908f509ad60070b1449aa703fab5e88/pyconmech-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc31df1b185e2aca4b0c542ee451831f89bbe6c9628bae9d65d96e1f131c31bd",
          "md5": "c8d73fadb82cc73bacda45584db21906",
          "sha256": "102e164d6ded9d28100de3e9990cadf96748701362f5f5e1f89e060dd1e9a8b0"
        },
        "downloads": -1,
        "filename": "pyconmech-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c8d73fadb82cc73bacda45584db21906",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 688618,
        "upload_time": "2020-03-04T05:42:43",
        "upload_time_iso_8601": "2020-03-04T05:42:43.232018Z",
        "url": "https://files.pythonhosted.org/packages/cc/31/df1b185e2aca4b0c542ee451831f89bbe6c9628bae9d65d96e1f131c31bd/pyconmech-0.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7fde3b49d748872b1ddb679f9f59fd3a726e310a459ce722a8950f7366ba3ea",
          "md5": "9acf3e6a0ab2741d3cfe8722aca31161",
          "sha256": "aa8aeac40690b2dab78afec76ab4c058c9ac311f6aecfc7f0d5155b55b531bc6"
        },
        "downloads": -1,
        "filename": "pyconmech-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9acf3e6a0ab2741d3cfe8722aca31161",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7158816,
        "upload_time": "2020-10-09T16:18:10",
        "upload_time_iso_8601": "2020-10-09T16:18:10.226787Z",
        "url": "https://files.pythonhosted.org/packages/c7/fd/e3b49d748872b1ddb679f9f59fd3a726e310a459ce722a8950f7366ba3ea/pyconmech-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0b85a8aae5c65cf6ec19fbefda09e71f874f65fcddb0d566f6406e11034899b",
          "md5": "05f21c3670ba2e12be9fd655df8693a4",
          "sha256": "f0e37bfbfb07dbb6c5b6ef0b73a9dd414953246bb41231537f6555e693341983"
        },
        "downloads": -1,
        "filename": "pyconmech-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "05f21c3670ba2e12be9fd655df8693a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7159391,
        "upload_time": "2020-12-03T16:11:47",
        "upload_time_iso_8601": "2020-12-03T16:11:47.552664Z",
        "url": "https://files.pythonhosted.org/packages/e0/b8/5a8aae5c65cf6ec19fbefda09e71f874f65fcddb0d566f6406e11034899b/pyconmech-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e0b85a8aae5c65cf6ec19fbefda09e71f874f65fcddb0d566f6406e11034899b",
        "md5": "05f21c3670ba2e12be9fd655df8693a4",
        "sha256": "f0e37bfbfb07dbb6c5b6ef0b73a9dd414953246bb41231537f6555e693341983"
      },
      "downloads": -1,
      "filename": "pyconmech-0.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "05f21c3670ba2e12be9fd655df8693a4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7159391,
      "upload_time": "2020-12-03T16:11:47",
      "upload_time_iso_8601": "2020-12-03T16:11:47.552664Z",
      "url": "https://files.pythonhosted.org/packages/e0/b8/5a8aae5c65cf6ec19fbefda09e71f874f65fcddb0d566f6406e11034899b/pyconmech-0.6.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}