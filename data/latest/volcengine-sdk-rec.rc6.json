{
  "info": {
    "author": "Lin Gan",
    "author_email": "ganlin.coder@bytedance.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "volcengine data/predict api sdk, python version\n<br>\n```python\nimport uuid\nfrom datetime import datetime, timedelta\n\nfrom byteair import ClientBuilder, Client\nfrom byteair.protocol.volcengine_byteair_pb2 import *\nfrom core import Region, Option, NetException, BizException, metrics\n\n# 必传,租户id.\nTENANT_ID = \"xxx\"\n# 必传,应用id.\nAPPLICATION_ID = \"xxx\"\n# 必传,密钥AK,获取方式:【火山引擎控制台】->【个人信息】->【密钥管理】中获取.\nAK = \"xxx\"\n# 必传,密钥SK,获取方式：【火山引擎控制台】->【个人信息】->【密钥管理】中获取.\nSK = \"xxx\"\n\nclient: Client = ClientBuilder() \\\n    .tenant_id(TENANT_ID) \\\n    .application_id(APPLICATION_ID) \\\n    .ak(AK) \\\n    .sk(SK) \\\n    .region(Region.AIR_CN) \\\n    .build()\n# metrics上报初始化.建议开启,方便火山侧排查问题.\nmetrics.init(())\n\n\ndef write():\n    # 此处为测试数据，实际调用时需注意字段类型和格式\n    data_list = [\n        {\n            \"id\": \"item_id1\",\n            \"title\": \"test_title1\",\n            \"status\": 0,\n            \"brand\": \"volcengine\",\n            \"pub_time\": 1583641807,\n            \"current_price\": 1.1,\n        },\n        {\n            \"id\": \"item_id2\",\n            \"title\": \"test_title2\",\n            \"status\": 1,\n            \"brand\": \"volcengine\",\n            \"pub_time\": 1583641503,\n            \"current_price\": 2.2,\n        }\n    ]\n    # topic为枚举值，请参考API文档\n    topic = \"item\"\n    # 传输天级数据\n    opts = (\n        # 预同步(\"pre_sync\"), 历史数据同步(\"history_sync\"), 增量天级同步(\"incremental_sync_daily\"),\n        # 增量实时同步(\"incremental_sync_streaming\")\n        Option.with_stage(\"pre_sync\"),\n        # 必传，数据产生日期，实际传输时需修改为实际日期\n        Option.with_data_date(datetime(year=2022, month=1, day=1)),\n        Option.with_timeout(timedelta(milliseconds=1000)),\n        Option.with_request_id(str(uuid.uuid1())),\n    )\n    try:\n        write_response = client.write_data(data_list, topic, *opts)\n    except BizException as e:\n        print(\"[write] occur err, msg: %s\" % e)\n        return\n    if not write_response.status.success:\n        print(\"[write] failure\")\n        return\n    print(\"[write] success\")\n    return\n\n\ndef done():\n    date_list = [datetime(year=2022, month=1, day=1)]\n    # topic为枚举值，请参考API文档\n    topic = \"item\"\n    opts = (\n        # 预同步(\"pre_sync\"), 历史数据同步(\"history_sync\"), 增量天级同步(\"incremental_sync_daily\"),\n        # 增量实时同步(\"incremental_sync_streaming\")\n        Option.with_stage(\"pre_sync\"),\n        Option.with_timeout(timedelta(milliseconds=1000)),\n        Option.with_request_id(str(uuid.uuid1())),\n    )\n    try:\n        done_response = client.done(date_list, topic, *opts)\n    except BizException as e:\n        print(\"[done] occur err, msg: %s\" % e)\n        return\n    if not done_response.status.success:\n        print(\"[done] failure\")\n        return\n    print(\"[done] success\")\n    return\n\n\ndef predict():\n    # 构造predict请求体\n    predict_request = PredictRequest()\n    user = predict_request.user\n    user.uid = 'uid1'\n    context = predict_request.context\n    context.spm = \"1$##$2$##$3$##$4\"\n    context.extra[\"extra_key\"] = \"extra_value\"\n    \n    feature = context.feature\n    feature.stringFeature[\"key\"] = \"value1\"\n    feature.stringFeature[\"key\"] = \"value2\"\n    feature.stringArrayFeature[\"array_key\"].values.append(\"array_value1\")\n    feature.stringArrayFeature[\"array_key\"].values.append(\"array_value2\")\n    filter = context.filter\n    filter.stringFilter[\"key\"] = \"value\"\n    filter.stringArrayFilter[\"array_key\"].values.append(\"array_value1\")\n    filter.stringArrayFilter[\"array_key\"].values.append(\"array_value2\")\n    \n    candidate_item1 = predict_request.candidateItems.add()\n    candidate_item1.id = \"item_id1\"\n    candidate_item2 = predict_request.candidateItems.add()\n    candidate_item2.id = \"item_id2\"\n    opts = (\n        Option.with_request_id(str(uuid.uuid1())),\n        Option.with_scene(\"default\"),\n        Option.with_timeout(timedelta(milliseconds=1000)),\n        Option.with_headers({\"Enable-Spm-Route\": \"true\"})\n    )\n    try:\n        rsp = client.predict(predict_request, *opts)\n    except (NetException, BizException) as e:\n        print(\"[predict] occur error, msg: %s\" % e)\n        return\n    if not rsp.success:\n        print(\"[predict] failure\")\n        return\n    print(\"[predict] success\")\n\n\ndef callback():\n    # 构造callback请求体\n    callback_request = CallbackRequest()\n    # 对应的predict请求的request id\n    callback_request.predict_request_id = \"xxx\"\n    # 对应的predict请求的uid\n    callback_request.uid = \"uid1\"\n    # 对应的predict请求的scene.\n    callback_request.scene = \"default\"\n    # 对应的predict请求的items列表\n    callback_item1 = callback_request.items.add()\n    callback_item1.id = \"item_id1\"\n    callback_item1.pos = \"position1\"\n    callback_item1.extra = \"{\\\"reason\\\":\\\"exposure\\\"}\"\n    callback_item2 = callback_request.items.add()\n    callback_item2.id = \"item_id2\"\n    callback_item2.pos = \"position2\"\n    callback_item2.extra = \"{\\\"reason\\\":\\\"filter\\\"}\"\n    # callback请求上下文\n    callback_context = CallbackContext()\n    callback_context.spm = \"1$##$2$##$3$##$4\"\n    callback_request.context = callback_context\n    opts = (\n        Option.with_request_id(str(uuid.uuid1())),\n        Option.with_timeout(timedelta(milliseconds=1000)),\n    )\n    try:\n        rsp = client.callback(callback_request, *opts)\n    except (NetException, BizException) as e:\n        print(\"[callback] occur error, msg: %s\" % e)\n        return\n    if not rsp.success:\n        print(\"[callback] failure\")\n        return\n    print(\"[callback] success\")\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/volcengine/volcengine-sdk-python-rec",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "volcengine-sdk-rec",
    "package_url": "https://pypi.org/project/volcengine-sdk-rec/",
    "platform": null,
    "project_url": "https://pypi.org/project/volcengine-sdk-rec/",
    "project_urls": {
      "Homepage": "https://github.com/volcengine/volcengine-sdk-python-rec",
      "Source": "https://github.com/volcengine/volcengine-sdk-python-rec"
    },
    "release_url": "https://pypi.org/project/volcengine-sdk-rec/1.2.1/",
    "requires_dist": [
      "protobuf (==3.20.1)",
      "requests",
      "six",
      "numpy"
    ],
    "requires_python": ">=3",
    "summary": "SDK for volcengine",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16298381,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eabf10a11e8efdb0e1209df264f967cec950e7eece9434226461c2bdb36c4b52",
          "md5": "d1fd48d074fdf5eb323e9aab6e8c60dc",
          "sha256": "f4194cfddc80302187dcd4f90e0ff50a1d155ca80810f87731afcfe5db681b80"
        },
        "downloads": -1,
        "filename": "volcengine_sdk_rec-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d1fd48d074fdf5eb323e9aab6e8c60dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 44035,
        "upload_time": "2022-09-16T08:56:44",
        "upload_time_iso_8601": "2022-09-16T08:56:44.462497Z",
        "url": "https://files.pythonhosted.org/packages/ea/bf/10a11e8efdb0e1209df264f967cec950e7eece9434226461c2bdb36c4b52/volcengine_sdk_rec-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b893f700a52147d5c5c4893731cd08790c5d5e9db9d5794ea579cff75f25ef99",
          "md5": "b6084230430a5ec7cea04b25131c6726",
          "sha256": "e52e45e4817a5eec6b17aff94640a6bb543d0bcbd50b2718e4eb51d24545f1c2"
        },
        "downloads": -1,
        "filename": "volcengine_sdk_rec-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b6084230430a5ec7cea04b25131c6726",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 45620,
        "upload_time": "2022-09-29T08:39:29",
        "upload_time_iso_8601": "2022-09-29T08:39:29.297382Z",
        "url": "https://files.pythonhosted.org/packages/b8/93/f700a52147d5c5c4893731cd08790c5d5e9db9d5794ea579cff75f25ef99/volcengine_sdk_rec-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2abad46864ea22d28459f47360ad72a020a1e19d6ecc770a90b4cc1134d0a95",
          "md5": "7023c68ffe40bab54bc3c62bca1101dd",
          "sha256": "49fd69ae9804885d9dd955cc76e2fd1f7fb7489be50def3b8b60249795a38d51"
        },
        "downloads": -1,
        "filename": "volcengine_sdk_rec-1.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7023c68ffe40bab54bc3c62bca1101dd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 45721,
        "upload_time": "2022-10-13T07:26:20",
        "upload_time_iso_8601": "2022-10-13T07:26:20.003580Z",
        "url": "https://files.pythonhosted.org/packages/a2/ab/ad46864ea22d28459f47360ad72a020a1e19d6ecc770a90b4cc1134d0a95/volcengine_sdk_rec-1.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8f72e91560d5051ca7d6b9aa36b09d22231d1b5381f2404a40db5b26d11d590",
          "md5": "d8b14c39157c6edb32733b1460f15a9d",
          "sha256": "5fbf153d281274ca07a1bea152e4c60103501a500a22c238ac3e900ac2fef260"
        },
        "downloads": -1,
        "filename": "volcengine_sdk_rec-1.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d8b14c39157c6edb32733b1460f15a9d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 45737,
        "upload_time": "2022-10-14T09:57:32",
        "upload_time_iso_8601": "2022-10-14T09:57:32.625079Z",
        "url": "https://files.pythonhosted.org/packages/d8/f7/2e91560d5051ca7d6b9aa36b09d22231d1b5381f2404a40db5b26d11d590/volcengine_sdk_rec-1.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64b67b320f5ce6a1533d5eb966f8af45cc7c123d400cf0d587ed12586bdc11b0",
          "md5": "2e68cc0f615df86e7794729da0a839cc",
          "sha256": "ae698844c68bbe22e688dcc11570eee2bd4b2732ff92226d002abe7c847c09f8"
        },
        "downloads": -1,
        "filename": "volcengine_sdk_rec-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e68cc0f615df86e7794729da0a839cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 45771,
        "upload_time": "2022-12-27T08:06:40",
        "upload_time_iso_8601": "2022-12-27T08:06:40.261423Z",
        "url": "https://files.pythonhosted.org/packages/64/b6/7b320f5ce6a1533d5eb966f8af45cc7c123d400cf0d587ed12586bdc11b0/volcengine_sdk_rec-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b860253d0f963e51aa9972bef3676ccdb17a4a39bc8e7c4ccadf2c6390fe871b",
          "md5": "5fada97eb3c887cbc4c70efec680cac1",
          "sha256": "0380ffe32241afc4b049cbb6bc5714939082778ac94ac501f8a3ef39c6f7d53e"
        },
        "downloads": -1,
        "filename": "volcengine_sdk_rec-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5fada97eb3c887cbc4c70efec680cac1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 45765,
        "upload_time": "2023-01-04T04:06:41",
        "upload_time_iso_8601": "2023-01-04T04:06:41.308897Z",
        "url": "https://files.pythonhosted.org/packages/b8/60/253d0f963e51aa9972bef3676ccdb17a4a39bc8e7c4ccadf2c6390fe871b/volcengine_sdk_rec-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b860253d0f963e51aa9972bef3676ccdb17a4a39bc8e7c4ccadf2c6390fe871b",
        "md5": "5fada97eb3c887cbc4c70efec680cac1",
        "sha256": "0380ffe32241afc4b049cbb6bc5714939082778ac94ac501f8a3ef39c6f7d53e"
      },
      "downloads": -1,
      "filename": "volcengine_sdk_rec-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5fada97eb3c887cbc4c70efec680cac1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 45765,
      "upload_time": "2023-01-04T04:06:41",
      "upload_time_iso_8601": "2023-01-04T04:06:41.308897Z",
      "url": "https://files.pythonhosted.org/packages/b8/60/253d0f963e51aa9972bef3676ccdb17a4a39bc8e7c4ccadf2c6390fe871b/volcengine_sdk_rec-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}