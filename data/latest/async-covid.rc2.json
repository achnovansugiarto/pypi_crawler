{
  "info": {
    "author": "K.M Ahnaf Zail",
    "author_email": "ahnafzamil@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Utilities"
    ],
    "description": "# Async Covid\n\nBased on Ahmednafies' COVID [module](https://github.com/ahmednafies/covid).\n\n## Description\n\nAn async Python package to get information regarding the novel corona virus provided\nby Johns Hopkins university and worldometers.info\n\nDocumentation not ready yet, but everything is shown in this README file.\n\n![corona.jpeg](https://raw.githubusercontent.com/ahmednafies/covid/master/docs/img/corona.jpeg)\n\n## Requirements\n\n    python >= 3.6\n\n## How to install\n\n    pip install async-covid\n\n## Dependencies\n\n    pydantic\n    asyncio\n    aiohttp\n\n## How to use\n\n### Example\n\n```python\nimport asyncio\nfrom async_covid import Covid\n\nasync def main():\n    print(await covid.get_data())\n\nif __name__ == __main__:\n    covid = COVID()\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(main())\n    loop.close()\n```\n\n## John Hopkins University API\n\n![john_hopkins](https://raw.githubusercontent.com/ahmednafies/covid/master/docs/img/john_hopkins.png)\n\n### Get All Data\n\n```python\nawait covid.get_data()\n```\n\n#### Result\n\n```python\n[\n    CovidModel<\n        id=175, \n        country=US, \n        confirmed=7554434, \n        active=4342532, \n        deaths=211905, \n        recovered=2999895, \n        latitude=40.0, \n        longitude=-100.0, \n        last_update=1602163423000\n        >,\n    CovidModel<\n        id=14, \n        country=Bangladesh,\n        confirmed=374592, \n        active=80816,\n        deaths=5460,\n        recovered=288316,\n        latitude=23.685, \n        longitude=90.3563, \n        last_update=1602163423000\n        >,\n    ...\n]\n```\n\n### List Countries\n\nThis comes in handy when you need to know the available names of countries\nwhen using `get_status_by_country_name`, eg. \"The Republic of Moldova\" or just \"Moldova\"\nSo use this when you need to know the country exact name that you can use.\n\n```python\nawait covid.list_countries()\n```\n\n#### Result\n\n```python\n[\n    CountryModel<id=175, name=US>, \n    CountryModel<id=80, name=India>,\n    ...\n]\n```\n\n### Get Status By Country ID\n\n```python\nawait covid.get_status_by_country_id(14)\n```\n\n#### Result\n\n```python\nCovidModel<\n    id=14, \n    country=Bangladesh, \n    confirmed=374592,\n    active=80816,\n    deaths=5460, \n    recovered=288316,\n    latitude=23.685,\n    longitude=90.3563,\n    last_update=1602163423000\n>\n```\n\n### Get Status By Country Name\n\n```python\n await covid.get_status_by_country_name(\"bangladesh\")\n```\n\n#### Result\n\n```python\nCovidModel<\n    id=14, \n    country=Bangladesh, \n    confirmed=374592,\n    active=80816,\n    deaths=5460, \n    recovered=288316,\n    latitude=23.685,\n    longitude=90.3563,\n    last_update=1602163423000\n>\n```\n\n### Get Total Active cases\n\n```python\nawait covid.get_total_active_cases()\n```\n\n### Get Total Confirmed cases\n\n```python\nawait covid.get_total_confirmed_cases()\n```\n\n### Get Total Recovered cases\n\n```python\nawait covid.get_total_recovered()\n```\n\n### Get Total Deaths\n\n```python\nawait covid.get_total_deaths()\n```\n\n## Getting data from Worldometers.info\n\n![worldometers](https://raw.githubusercontent.com/ahmednafies/covid/master/docs/img/worldometers.png)\n\n```python\ncovid = Covid(source=\"worldometers\")\n```\n\n### Get Data\n\n```python\nawait covid.get_data()\n```\n\n#### Result\n\n```python\n[\n    CovidModel<\n    country=North America, \n    confirmed=9332106, \n    new_cases=10355, \n    deaths=322513, \n    recovered=6101706,\n    active=2907887, \n    critical=17932,\n    new_deaths=512,\n    total_tests=0,\n    total_tests_per_million=0,\n    total_cases_per_million=0, \n    total_deaths_per_million=0,\n    population=0>\n    ...\n]\n\n```\n\n### Get Status By Country Name\n\n```python\nawait covid.get_status_by_country_name(\"india\")\n```\n\n#### Result\n\n```python\nCovidModel<\ncountry=India,\nconfirmed=6835655,\nnew_cases=2667,\ndeaths=105554,\nrecovered=5827704,\nactive=902397,\ncritical=8944,\nnew_deaths=0, \ntotal_tests=83465975\n>\n```\n\n### List Countries\n\n```python\ncountries = await covid.list_countries()\n```\n\n#### Result\n\n```python\n[\n    'china',\n    'italy',\n    'usa',\n    'spain',\n    'germany',\n...\n]\n```\n\n### Get Total Active cases\n\n```python\nactive = await covid.get_total_active_cases()\n```\n\n### Get Total Confirmed cases\n\n```python\nconfirmed = await covid.get_total_confirmed_cases()\n```\n\n### Get Total Recovered cases\n\n```python\nrecovered = await covid.get_total_recovered()\n```\n\n### Get Total Deaths\n\n```python\ndeaths = await covid.get_total_deaths()\n```\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "async-covid",
    "package_url": "https://pypi.org/project/async-covid/",
    "platform": "",
    "project_url": "https://pypi.org/project/async-covid/",
    "project_urls": {
      "Source": "https://github.com/ahnaf-zamil/async-covid"
    },
    "release_url": "https://pypi.org/project/async-covid/0.0.11/",
    "requires_dist": [
      "aiohttp",
      "asyncio",
      "beautifulsoup4",
      "pydantic",
      "typer",
      "black ; extra == 'dev'",
      "coverage ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "ipdb ; extra == 'dev'",
      "pipenv ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "pytest ; extra == 'dev'"
    ],
    "requires_python": ">=3.6",
    "summary": "An async Python package to get information regarding the novel corona virus provided by Johns Hopkins university and worldometers.info. Based on https://github.com/ahmednafies/covid",
    "version": "0.0.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8368636,
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce8dfaad1fe9982a5a8b801ea3018b8c0c7197015810cfe8f1b90e1865187de5",
          "md5": "ce8dfcb78d9dd8ab4b9c63f35d92d7c7",
          "sha256": "09f334f8b6aaf59d92ca495ef411766e87e4367617ef59996b6b1da7eb1f226a"
        },
        "downloads": -1,
        "filename": "async_covid-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce8dfcb78d9dd8ab4b9c63f35d92d7c7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9819,
        "upload_time": "2020-10-08T14:59:28",
        "upload_time_iso_8601": "2020-10-08T14:59:28.428368Z",
        "url": "https://files.pythonhosted.org/packages/ce/8d/faad1fe9982a5a8b801ea3018b8c0c7197015810cfe8f1b90e1865187de5/async_covid-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b0d76b65890e104f61584ce72a72f2e81192343407cb40890651186454493fa",
          "md5": "f7228b7b67fd746d9050c8e84e170181",
          "sha256": "6b428017565f88546e25a24a45274dc6f0c264a13091c31bc4cb54dd91ca4bf6"
        },
        "downloads": -1,
        "filename": "async-covid-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "f7228b7b67fd746d9050c8e84e170181",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8979,
        "upload_time": "2020-10-08T14:59:31",
        "upload_time_iso_8601": "2020-10-08T14:59:31.874195Z",
        "url": "https://files.pythonhosted.org/packages/4b/0d/76b65890e104f61584ce72a72f2e81192343407cb40890651186454493fa/async-covid-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c3ef5f3775aeb010da84ebde9529085faadb361418a6db6907088f47ebcb448",
          "md5": "e93de5d6443a6bc388e1c4368bd7cc77",
          "sha256": "2e1bc50e337ef02827af13df29c533fd749f86f5b3abb72a5823464c0454a26c"
        },
        "downloads": -1,
        "filename": "async_covid-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e93de5d6443a6bc388e1c4368bd7cc77",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9906,
        "upload_time": "2020-10-08T15:22:56",
        "upload_time_iso_8601": "2020-10-08T15:22:56.550972Z",
        "url": "https://files.pythonhosted.org/packages/6c/3e/f5f3775aeb010da84ebde9529085faadb361418a6db6907088f47ebcb448/async_covid-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1fc9d9a16ce00a32bf2384d97b8cf11b580ab6f13eddc77b1e96f0765d9e782",
          "md5": "efbb83efb7603478628eb56d0628ae6e",
          "sha256": "f924903161b9e12d8b406512668af6258d255489b58a9ae3b21c1b9bb05e72c2"
        },
        "downloads": -1,
        "filename": "async-covid-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "efbb83efb7603478628eb56d0628ae6e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9162,
        "upload_time": "2020-10-08T15:22:58",
        "upload_time_iso_8601": "2020-10-08T15:22:58.554252Z",
        "url": "https://files.pythonhosted.org/packages/f1/fc/9d9a16ce00a32bf2384d97b8cf11b580ab6f13eddc77b1e96f0765d9e782/async-covid-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c3ef5f3775aeb010da84ebde9529085faadb361418a6db6907088f47ebcb448",
        "md5": "e93de5d6443a6bc388e1c4368bd7cc77",
        "sha256": "2e1bc50e337ef02827af13df29c533fd749f86f5b3abb72a5823464c0454a26c"
      },
      "downloads": -1,
      "filename": "async_covid-0.0.11-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e93de5d6443a6bc388e1c4368bd7cc77",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9906,
      "upload_time": "2020-10-08T15:22:56",
      "upload_time_iso_8601": "2020-10-08T15:22:56.550972Z",
      "url": "https://files.pythonhosted.org/packages/6c/3e/f5f3775aeb010da84ebde9529085faadb361418a6db6907088f47ebcb448/async_covid-0.0.11-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f1fc9d9a16ce00a32bf2384d97b8cf11b580ab6f13eddc77b1e96f0765d9e782",
        "md5": "efbb83efb7603478628eb56d0628ae6e",
        "sha256": "f924903161b9e12d8b406512668af6258d255489b58a9ae3b21c1b9bb05e72c2"
      },
      "downloads": -1,
      "filename": "async-covid-0.0.11.tar.gz",
      "has_sig": false,
      "md5_digest": "efbb83efb7603478628eb56d0628ae6e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9162,
      "upload_time": "2020-10-08T15:22:58",
      "upload_time_iso_8601": "2020-10-08T15:22:58.554252Z",
      "url": "https://files.pythonhosted.org/packages/f1/fc/9d9a16ce00a32bf2384d97b8cf11b580ab6f13eddc77b1e96f0765d9e782/async-covid-0.0.11.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}