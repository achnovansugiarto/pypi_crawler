{
  "info": {
    "author": "Shenggao Zhu",
    "author_email": "zshgao@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "=====================\ndjango-sortedone2many\n=====================\n\n.. image:: https://img.shields.io/pypi/l/django-sortedone2many.svg\n    :target: ./LICENSE\n    :alt: License\n\n.. image:: https://img.shields.io/pypi/v/django-sortedone2many.svg\n    :target: https://pypi.python.org/pypi/django-sortedone2many\n    :alt: PyPI Release\n\n.. image:: https://img.shields.io/pypi/pyversions/django-sortedone2many.svg\n    :target: https://pypi.python.org/pypi/django-sortedone2many\n    :alt: Supported Python versions\n\n.. .. image:: https://img.shields.io/pypi/dm/django-sortedone2many.svg\n    :alt: PyPI Downloads\n    :target: https://pypi.python.org/pypi/django-sortedone2many\n\n.. image:: https://travis-ci.org/ShenggaoZhu/django-sortedone2many.svg?branch=master\n    :target: https://travis-ci.org/ShenggaoZhu/django-sortedone2many\n    :alt: Travis Build Status\n\n\n``sortedone2many`` provides a ``SortedOneToManyField`` for django Model that establishes a\none-to-many relationship (which can also remember the order of related objects).\n\nDepends on ``SortedManyToManyField`` from the great library django-sortedm2m_ (check it out!).\n\n.. _django-sortedm2m: https://github.com/gregmuellegger/django-sortedm2m\n\n\nInstallation\n============\n\n``pip install django-sortedone2many``\n\nPyPI repository: https://pypi.python.org/pypi/django-sortedone2many\n\n\nUsecases\n========\n\nSorted ``OneToMany`` relationship\n---------------------------------\n\nThe ``OneToMany`` relationship has been long missing from django ORM.\nA similar relationship, ``ManyToOne``, is provided via a ``ForeignKey``,\nwhich is always declared on the \"many\" side of the relationship.\nIn the following example (using ``related_name`` on a ``ForeignKey``):\n\n.. code-block:: python\n\n    class Category(models.Model):\n        name = models.CharField(max_length=50)\n\n    class Item(models.Model):\n        category = ForeignKey(Category, related_name=\"items\")\n\n``item.category`` is a ``ManyToOne`` relationship, while\n``category.items`` is a ``OneToMany`` relationship.\nHowever, it is not easy to\nmanage the order of the list of ``items`` in a ``category``.\n\nTo address this need, simply add a ``SortedOneToManyField`` (from this package) to\nthe model on the \"one\" side of the relationship:\n\n.. code-block:: python\n\n    class Category(models.Model):\n        name = models.CharField(max_length=50)\n        items = SortedOneToManyField(Item, sorted=True, blank=True)\n\n``SortedOneToManyField`` uses an intermediary model with an extra\n``sort_value`` field to manage the orders of the related objects.\nIt is very useful to represent **an ordered list of items**\n(according to their added order or user-specified order).\n\nAlso, ``OneToMany`` relationship offers better **semantics** and **readability** than ``ForeignKey``,\nespecially for scenarios like ``master-detail`` or ``category-item``\n(where each item only belongs to one category).\n`This blog explains it nicely <http://blog.amir.rachum.com/blog/2013/06/15/a-case-for-a-onetomany-relationship-in-django/>`_.\n\nAdding ``OneToMany`` to existing models\n---------------------------------------\n\nSince ``OneToMany`` relationship uses an intermediary model,\nit can work without altering already-existing models/tables,\nthus providing better **extensibility** than ``ForeignKey``\n(which requires adding a ``ForeignKey`` field to the model/table).\nThis is a big advantage when the existing models can't be changed\n(e.g., models in a third-party library, or shared among several applications).\n\nThis package provides a shortcut function ``add_sorted_one2many_relation``\nto inject ``OneToMany`` relationship to existing models without editing the\nmodel source code or subclassing the models.\n\n\nUsage\n=====\n\nAdd the ``SortedOneToManyField`` to the model on the \"one\" side of the\nrelationship (as opposed to ``ForeignKey`` on the \"many\" side):\n\n.. code-block:: python\n\n    from django.db import models\n    from sortedone2many.fields import SortedOneToManyField\n\n    class Item(models.Model):\n        name = models.CharField(max_length=50)\n\n    class Category(models.Model):\n        name = models.CharField(max_length=50)\n        items = SortedOneToManyField(Item, sorted=True, blank=True)\n\nHere, ``category.items`` is the manager for related ``Item`` objects (the same as\nthe normal ``ManyToManyField``); use it like ``category.items.add(new_item)``,\n``category.items.all()``. By default, the list of ``items`` (e.g., ``category.items.all()``)\nis sorted according to the order that each ``item`` is added.\n\nOn the other side, ``item.category`` is an *instance* (not manager) of ``Category`` (similar\nto a ``OneToOneField``); use it like ``item.category.pk``, ``item.category = new_category``.\n\nStrictly speaking, ``item.category`` is an instance of\n``sortedone2many.fields.OneToManyRelatedObjectDescriptor``\n(a type of `python descriptor <https://docs.python.org/3.4/howto/descriptor.html>`_),\nwhich directly exposes the *single* related object (i.e., the ``category`` instance).\nThis is different from the ``ManyRelatedObjectsDescriptor`` (as in the normal ``ManyToManyField``)\nwhich exposes the ``manager`` of the *potentially multiple* related objects\n(which is not as convenient to use in the ``OneToMany`` relationship).\n\n``SortedOneToManyField``\n------------------------\nSimilar to ``SortedManyToManyField``,\nit uses an intermediary model that holds a ForeignKey field pointed at\nthe model on the \"one\" side of the relationship, a OneToOneField field\npointed at the model on the \"many\" side (to ensure the unique relationship\nto the \"one\" side), and another field storing the\nsort value (to remember to orders of the objects on the \"many\" side).\n\n``SortedOneToManyField`` accepts a boolean ``sorted`` attribute which specifies if relationship is\nordered or not. Default is set to ``True``.\n\nRefer to django-sortedm2m_ for more details.\n\nAdmin\n_____\n\nFirst, add ``\"sortedm2m\"`` to your ``INSTALLED_APPS`` settings,\nwhich provides the static ``js`` and ``css`` files to render\nthe related objects in a ``SortedOneToManyField`` as a list of\ncheckboxes that can be sorted by drag'n'drop.\n(That is similar to the behavior of a ``SortedManyToManyField``).\n\nBy default, a ``SortedOneToManyField`` is translated into a form field\n``sortedone2many.forms.SortedMultipleChoiceWithDisabledField`` for rendering.\nThis form field also adds a special function to the widget:\ndisables those checkboxes that should not be directly selected\nin the current admin view (to ensure the unique ``OneToMany`` relationship).\n\nE.g., in the image below, in the admin view for ``category 1``,\n``item1.category`` is ``category 2``, so the checkbox for ``item1`` is disabled\nbecause ``category 2`` has to remove ``item1`` from its ``items`` list before\n``category 1`` can select ``item1`` in the admin view.\n\n.. image:: https://raw.githubusercontent.com/ShenggaoZhu/django-sortedone2many/master/docs/category.jpg\n\nIn the admin site, to display a related object on the reverse side of\na ``SortedOneToManyField`` (e.g., to display ``item1.category`` in the\nadmin view of ``item1``), simply use ``sortedone2many.admin.One2ManyModelAdmin``\nas the ``admin class`` to register your model:\n\n.. code-block:: python\n\n    from django.contrib import admin\n    from sortedone2many.admin import One2ManyModelAdmin\n    admin.site.register(MyItemModel, One2ManyModelAdmin)\n\nOr, use the shortcut function ``sortedone2many.admin.register``:\n\n.. code-block:: python\n\n    from sortedone2many.admin import register\n    register(MyItemModel)\n\nThe related object will be rendered as a dropdown <select> list,\nthrough which you can assign it a different value.\nTwo additional \"change\" and \"add\" buttons are also listed after the dropdown list\nas the shortcuts to edit the ``category``\n(similar to the appearance of a ``ForeignKey``), as shown below:\n\n.. image:: https://raw.githubusercontent.com/ShenggaoZhu/django-sortedone2many/master/docs/item.jpg\n\nInternally, ``One2ManyModelAdmin`` uses ``One2ManyModelForm`` for rendering,\nwhich automatically finds related ``SortedOneToManyField`` from the model defined in the\nform's Meta class, and add these fields to the form.\nYour can subclass ``One2ManyModelForm`` to customize it for your own model.\n\nUtility functions\n-----------------\nUse the following helper functions in ``sortedone2many.utils``\nto inject extra fields to existing models:\n\n.. code-block:: python\n\n   inject_extra_field_to_model(from_model, field_name, field)\n\n   add_sorted_one2many_relation(model_one, model_many, field_name_on_model_one=None,\n                                related_name_on_model_many=None)\n\nWorking with existing models\n----------------------------\n``SortedOneToManyField`` (or generally, any extra model field) can be added to an existing model\nthat can't be edited directly (e.g., in another library/app). For example, add the field to\nthe ``User`` model in ``django.contrib.auth.models``.\n\nIt is recommended to use `django migrations`_ to do this.\n\n.. _`django migrations`: https://docs.djangoproject.com/en/1.8/topics/migrations/\n\n1. First, add the existing model (``User``) into django ``migrations`` using a migrations folder\n   **outside the original library/app** (e.g., in your own app).\n   This can be achieved by configuring the ``MIGRATION_MODULES`` dictionary in your django ``settings``:\n\n   .. code-block:: python\n\n    MIGRATION_MODULES = {\n        \"auth\": \"my_app.migrations_auth\",\n    }\n\n   The key (``\"auth\"``) of ``MIGRATION_MODULES`` is the name (``app_label``) of the library/app,\n   and the value is package/folder to store the migration files for this library/app.\n\n   **Note**: this value will supercede/shield the original migrations folder in the library/app\n   (if it already uses django migrations), i.e., ``django.contrib.auth.migrations``.\n\n2. Next, run ``manage.py makemigrations auth`` and ``manage.py migrate auth``\n   to migrate the existing model as if for the first time (no matter whether the model used migrations before).\n   A new migration file ``0001_initial.py`` should be generated in the specified folder.\n   If the database table is already created for the model, no actual migrations will be applied.\n\n3. Add a ``SortedOneToManyField`` named ``items`` to the ``User`` model using the helper function:\n\n   .. code-block:: python\n\n    inject_extra_field_to_model(User, 'items', SortedOneToManyField(Item, related_name='owner'))\n\n4. Run ``manage.py makemigrations auth`` and ``manage.py migrate auth`` again to create the\n   intermediary table (``auth_user_items`` by default).\n\nThat's it! Now ``user.items`` and ``item.owner`` are available as if you defined the\n``items`` field in the ``User`` model source code.\n\nTesting\n=======\n1. Setup database::\n\n    python manage.py makemigrations auth tests app2\n    python manage.py migrate\n\n2. Run tests::\n\n    python manage.py test tests\n\n+ ``test_project`` contains the django project ``settings.py``\n+ ``tests`` folder contains all the testcases\n+ Tested with django 1.8, 1.9 and Python 2.7, 3.3, 3.4, 3.5",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ShenggaoZhu/django-sortedone2many",
    "keywords": "django,model,field,one-to-many,SortedOneToManyField",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-sortedone2many",
    "package_url": "https://pypi.org/project/django-sortedone2many/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-sortedone2many/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/ShenggaoZhu/django-sortedone2many"
    },
    "release_url": "https://pypi.org/project/django-sortedone2many/0.2.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Provide a one-to-many relationship that also remembers the order of related objects.",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2121875,
  "releases": {
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6492ab658d1bf47fbf397eb9056f42c18f8f592fed5f46e827e28334fbf88bb",
          "md5": "8e718ca8b1bb2e8235f2f9f69552a8d1",
          "sha256": "5f5de72a86c09779ef4580202df2e005e99be6244b52b21738e431c527e955fc"
        },
        "downloads": -1,
        "filename": "django-sortedone2many-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8e718ca8b1bb2e8235f2f9f69552a8d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11675,
        "upload_time": "2015-08-02T14:14:14",
        "upload_time_iso_8601": "2015-08-02T14:14:14.856159Z",
        "url": "https://files.pythonhosted.org/packages/c6/49/2ab658d1bf47fbf397eb9056f42c18f8f592fed5f46e827e28334fbf88bb/django-sortedone2many-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b30e68f8a044a75ff923698945230ab75f2fd082e741b3a1f7ed81056f4b05b",
          "md5": "82877f1dd02e56ea7bd09e56a444f684",
          "sha256": "50289d4defe4c48b276ce6ca4167558d7a89290e6460ce757143f0a522dcb198"
        },
        "downloads": -1,
        "filename": "django-sortedone2many-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "82877f1dd02e56ea7bd09e56a444f684",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11892,
        "upload_time": "2015-09-04T07:56:57",
        "upload_time_iso_8601": "2015-09-04T07:56:57.104176Z",
        "url": "https://files.pythonhosted.org/packages/2b/30/e68f8a044a75ff923698945230ab75f2fd082e741b3a1f7ed81056f4b05b/django-sortedone2many-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d42dc1a1f1dfd0b1567bcfd40d3361abb9420f203fc2e6628a18ae6379e95e18",
          "md5": "da49dbbaeaa3ca0e2516dd73a9996c3e",
          "sha256": "7f4c2a19000370a7ea475faad456ed818991569cb35ec26040a47cb7a2d7c745"
        },
        "downloads": -1,
        "filename": "django-sortedone2many-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "da49dbbaeaa3ca0e2516dd73a9996c3e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11922,
        "upload_time": "2016-01-08T12:37:44",
        "upload_time_iso_8601": "2016-01-08T12:37:44.851488Z",
        "url": "https://files.pythonhosted.org/packages/d4/2d/c1a1f1dfd0b1567bcfd40d3361abb9420f203fc2e6628a18ae6379e95e18/django-sortedone2many-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0cdde69a8ff9f62bb938e08337113d2e20a2d29fac91ebbb986778345865c404",
          "md5": "231183dbb9ca395eeb0fb3e83ce2e332",
          "sha256": "6e0753bc126da47381bcc93b3d41f34141125fcf93e2c1507c019b1bc5179e5d"
        },
        "downloads": -1,
        "filename": "django-sortedone2many-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "231183dbb9ca395eeb0fb3e83ce2e332",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12176,
        "upload_time": "2016-01-08T12:42:24",
        "upload_time_iso_8601": "2016-01-08T12:42:24.484678Z",
        "url": "https://files.pythonhosted.org/packages/0c/dd/e69a8ff9f62bb938e08337113d2e20a2d29fac91ebbb986778345865c404/django-sortedone2many-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b3b86034697a5fd70e36ce2d37beacc31739b665be97a032a24f8bc09d1b851",
          "md5": "68aaf8c4d21904e067bc65e0e19ac612",
          "sha256": "0ae69a2a55fac78fb59c799701ac06314759b4952a259f030221233edcf9190a"
        },
        "downloads": -1,
        "filename": "django-sortedone2many-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "68aaf8c4d21904e067bc65e0e19ac612",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12186,
        "upload_time": "2016-01-08T12:52:12",
        "upload_time_iso_8601": "2016-01-08T12:52:12.301353Z",
        "url": "https://files.pythonhosted.org/packages/5b/3b/86034697a5fd70e36ce2d37beacc31739b665be97a032a24f8bc09d1b851/django-sortedone2many-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4a1d325e7c10b3e0a4344d66844b0bda8645b9c225a84602ba8af725ed4ef1a",
          "md5": "800b2281c609c28a3bcf16db62cadb1c",
          "sha256": "03aa9913eeacadd6cf38b567551a531c76011cf6c6931ac1d9777474a2a936bb"
        },
        "downloads": -1,
        "filename": "django-sortedone2many-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "800b2281c609c28a3bcf16db62cadb1c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12306,
        "upload_time": "2016-05-17T11:56:41",
        "upload_time_iso_8601": "2016-05-17T11:56:41.784931Z",
        "url": "https://files.pythonhosted.org/packages/e4/a1/d325e7c10b3e0a4344d66844b0bda8645b9c225a84602ba8af725ed4ef1a/django-sortedone2many-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2811662f3d78940ed0e324520f69a1eafd8d1a3783f433bded19aee4e1798eb",
          "md5": "24cab1f7a02c6e5c648e55504c294786",
          "sha256": "1048af873d49ddbfed1e895d7661b61204322c1fcd57d4180a49779c111471ce"
        },
        "downloads": -1,
        "filename": "django-sortedone2many-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "24cab1f7a02c6e5c648e55504c294786",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12332,
        "upload_time": "2016-05-18T04:15:09",
        "upload_time_iso_8601": "2016-05-18T04:15:09.559716Z",
        "url": "https://files.pythonhosted.org/packages/f2/81/1662f3d78940ed0e324520f69a1eafd8d1a3783f433bded19aee4e1798eb/django-sortedone2many-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c15505c49f109ec637bf509f5ee7c32d6971dbec368c13246e78f315374c7d24",
          "md5": "f7be10e91b7cbbbf1471ba95d2411b1c",
          "sha256": "7b83a6a15afc8b2af9bc67fba641a1b05cac3956962694690015071a3c77c12a"
        },
        "downloads": -1,
        "filename": "django-sortedone2many-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f7be10e91b7cbbbf1471ba95d2411b1c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12380,
        "upload_time": "2016-05-18T14:29:00",
        "upload_time_iso_8601": "2016-05-18T14:29:00.332473Z",
        "url": "https://files.pythonhosted.org/packages/c1/55/05c49f109ec637bf509f5ee7c32d6971dbec368c13246e78f315374c7d24/django-sortedone2many-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c15505c49f109ec637bf509f5ee7c32d6971dbec368c13246e78f315374c7d24",
        "md5": "f7be10e91b7cbbbf1471ba95d2411b1c",
        "sha256": "7b83a6a15afc8b2af9bc67fba641a1b05cac3956962694690015071a3c77c12a"
      },
      "downloads": -1,
      "filename": "django-sortedone2many-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f7be10e91b7cbbbf1471ba95d2411b1c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12380,
      "upload_time": "2016-05-18T14:29:00",
      "upload_time_iso_8601": "2016-05-18T14:29:00.332473Z",
      "url": "https://files.pythonhosted.org/packages/c1/55/05c49f109ec637bf509f5ee7c32d6971dbec368c13246e78f315374c7d24/django-sortedone2many-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}