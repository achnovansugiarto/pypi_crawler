{
  "info": {
    "author": "Ethan Ou",
    "author_email": "ethantim@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# camera_match\r\n\r\n`camera_match` is a Python library that provides basic models to match camera colour responses. Using `camera_match`, you can take two cameras with different colour profiles and build a colour pipeline that minimises the difference between them.\r\n\r\nCurrently, `camera_match` implements the following models:\r\n\r\n-   Linear Colour Correction Matrix\r\n-   Root Polynomial Matrix\r\n-   Steve Yedlin's Tetrahedral Matrix\r\n-   (Experimental) EMoR Response Curves\r\n-   RGB Curve Interpolation\r\n-   Radial Basis Functions\r\n\r\n## Installation\r\n\r\n(Recommended) Install the full package with the optional RBF library:\r\n\r\n```bash\r\npip install camera_match[RBF]\r\n```\r\n\r\nIf you don't need to create LUT's using RBF, you can install the base library:\r\n\r\n```bash\r\npip install camera_match\r\n```\r\n\r\n## Examples\r\n\r\n### Creating a 3x3 Matrix\r\n\r\nA simple matrix that can be used with Resolve's Colour Mixer or any RGB matrix. Can only capture linear changes in colour.\r\n\r\n```python\r\nimport numpy as np\r\nfrom camera_match import LinearMatrix\r\n\r\n# Import samples of a colour chart for your source camera:\r\nbmpcc_data = np.array([\r\n    [0.0460915677249, 0.0414372496307, 0.0392063446343],\r\n    [0.0711114183068, 0.0562727414072, 0.0510282665491],\r\n    [0.0467581525445, 0.0492189191282, 0.0505541190505]\r\n    # ...Additional colour samples\r\n])\r\n\r\n# Import corresponding colour patches for your target camera:\r\nfilm_data = np.array([\r\n    [0.0537128634751, 0.0549002364278, 0.0521950721741],\r\n    [0.0779063776135, 0.0621158666909, 0.0541097335517],\r\n    [0.051306720823, 0.0570512823761, 0.0635398775339]\r\n    # ...Additional colour samples\r\n])\r\n\r\n# Create a new LinearMatrix:\r\nmatrix = LinearMatrix()\r\n\r\n# Find the optimum values to match the two cameras:\r\nmatrix.solve(bmpcc_data, film_data)\r\n\r\n# Plot the result:\r\nmatrix.plot()\r\n\r\n# Print the matrix:\r\nprint(matrix.matrix)\r\n\r\n```\r\n\r\n### Creating a LUT using RBF\r\n\r\nRadial Basis Functions (RBF) allows you to create a LUT that smoothly maps your dataset in 3D. This means you can capture complex colour responses that linear matricies can't capture.\r\n\r\n```python\r\nimport numpy as np\r\nfrom camera_match import RBF\r\n\r\n# Import samples of a colour chart for your source camera:\r\nbmpcc_data = np.array([\r\n    [0.0460915677249, 0.0414372496307, 0.0392063446343],\r\n    [0.0711114183068, 0.0562727414072, 0.0510282665491],\r\n    [0.0467581525445, 0.0492189191282, 0.0505541190505]\r\n    # ...Additional colour samples\r\n])\r\n\r\n# Import corresponding colour patches for your target camera:\r\nfilm_data = np.array([\r\n    [0.0537128634751, 0.0549002364278, 0.0521950721741],\r\n    [0.0779063776135, 0.0621158666909, 0.0541097335517],\r\n    [0.051306720823, 0.0570512823761, 0.0635398775339]\r\n    # ...Additional colour samples\r\n])\r\n\r\n# Create a new RBF node:\r\nrbf = RBF()\r\n\r\n# Find the optimum values to match the two cameras:\r\nrbf.solve(bmpcc_data, film_data)\r\n\r\n# Plot the result:\r\nrbf.plot()\r\n\r\n# Export as a LUT:\r\nrbf.export_LUT(path=\"LUT.cube\")\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ethan-ou/camera_match",
    "keywords": "camera_match",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "camera-match",
    "package_url": "https://pypi.org/project/camera-match/",
    "platform": null,
    "project_url": "https://pypi.org/project/camera-match/",
    "project_urls": {
      "Homepage": "https://github.com/ethan-ou/camera_match"
    },
    "release_url": "https://pypi.org/project/camera-match/0.0.2/",
    "requires_dist": [
      "numpy",
      "scipy",
      "matplotlib",
      "colour-science (>=0.3.16)",
      "xalglib ; extra == 'rbf'"
    ],
    "requires_python": ">=3.8",
    "summary": "Match two cameras together using multiple algorithms",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17334626,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e60f19c6ccd9f4d41fbc65536404f9959d3e0bfeb794634374d308e72007c496",
          "md5": "5f09db83e8a066f03840d6c69ece99d2",
          "sha256": "366e4d625f8e7db6456938b99ae0cad77d665ed42a5b611351b2585c006a7bb1"
        },
        "downloads": -1,
        "filename": "camera_match-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f09db83e8a066f03840d6c69ece99d2",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.8",
        "size": 39703,
        "upload_time": "2023-03-17T12:53:06",
        "upload_time_iso_8601": "2023-03-17T12:53:06.348931Z",
        "url": "https://files.pythonhosted.org/packages/e6/0f/19c6ccd9f4d41fbc65536404f9959d3e0bfeb794634374d308e72007c496/camera_match-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab9a32b0c348b9b4810eed2b4abfe024db6f4517380c3f9fc0fe85e43eca44fb",
          "md5": "e0b506bcbb132d95f3daa567388cf809",
          "sha256": "e3a04fb5590dee9b16d856bf39dc7fcdf94aef3e7054a547f438cdb9ba12bb9c"
        },
        "downloads": -1,
        "filename": "camera_match-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e0b506bcbb132d95f3daa567388cf809",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 42509,
        "upload_time": "2023-03-17T12:53:08",
        "upload_time_iso_8601": "2023-03-17T12:53:08.210744Z",
        "url": "https://files.pythonhosted.org/packages/ab/9a/32b0c348b9b4810eed2b4abfe024db6f4517380c3f9fc0fe85e43eca44fb/camera_match-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98cef92f0ffd8750fd9ec142ea5520b2f0f2df2d5cd04a021ff306b7697e1959",
          "md5": "0650261c2d6a25c70e89f06ead5d4121",
          "sha256": "4906b2c2502e1f8a2ee8d6a02b8896058ba7803ce70228f4e6892c678aff327a"
        },
        "downloads": -1,
        "filename": "camera_match-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0650261c2d6a25c70e89f06ead5d4121",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.8",
        "size": 39714,
        "upload_time": "2023-03-17T13:02:53",
        "upload_time_iso_8601": "2023-03-17T13:02:53.482230Z",
        "url": "https://files.pythonhosted.org/packages/98/ce/f92f0ffd8750fd9ec142ea5520b2f0f2df2d5cd04a021ff306b7697e1959/camera_match-0.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3a7dae08f463ff0b1e060dae33cfedc8471b5b1aaa622fdc2e8296f48989a38",
          "md5": "5f4074fa5861fd1f95789f90d1557552",
          "sha256": "4833c261642afd96388e5d5c7686c7e80f7c4519ecd61a743f19bdc3588bb764"
        },
        "downloads": -1,
        "filename": "camera_match-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5f4074fa5861fd1f95789f90d1557552",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 42492,
        "upload_time": "2023-03-17T13:02:55",
        "upload_time_iso_8601": "2023-03-17T13:02:55.679566Z",
        "url": "https://files.pythonhosted.org/packages/f3/a7/dae08f463ff0b1e060dae33cfedc8471b5b1aaa622fdc2e8296f48989a38/camera_match-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "98cef92f0ffd8750fd9ec142ea5520b2f0f2df2d5cd04a021ff306b7697e1959",
        "md5": "0650261c2d6a25c70e89f06ead5d4121",
        "sha256": "4906b2c2502e1f8a2ee8d6a02b8896058ba7803ce70228f4e6892c678aff327a"
      },
      "downloads": -1,
      "filename": "camera_match-0.0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0650261c2d6a25c70e89f06ead5d4121",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.8",
      "size": 39714,
      "upload_time": "2023-03-17T13:02:53",
      "upload_time_iso_8601": "2023-03-17T13:02:53.482230Z",
      "url": "https://files.pythonhosted.org/packages/98/ce/f92f0ffd8750fd9ec142ea5520b2f0f2df2d5cd04a021ff306b7697e1959/camera_match-0.0.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f3a7dae08f463ff0b1e060dae33cfedc8471b5b1aaa622fdc2e8296f48989a38",
        "md5": "5f4074fa5861fd1f95789f90d1557552",
        "sha256": "4833c261642afd96388e5d5c7686c7e80f7c4519ecd61a743f19bdc3588bb764"
      },
      "downloads": -1,
      "filename": "camera_match-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "5f4074fa5861fd1f95789f90d1557552",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 42492,
      "upload_time": "2023-03-17T13:02:55",
      "upload_time_iso_8601": "2023-03-17T13:02:55.679566Z",
      "url": "https://files.pythonhosted.org/packages/f3/a7/dae08f463ff0b1e060dae33cfedc8471b5b1aaa622fdc2e8296f48989a38/camera_match-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}