{
  "info": {
    "author": "Louis Lui",
    "author_email": "luis11235178@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Database"
    ],
    "description": "\n# distrilockper - Distributed Lock Helper\n\n### Feature\n\n- Support Redis Cluster and Redis Single setup\n- Redis operation with Lua scripting (Atomic operations)\n- Lock watch dog (auto increase the alive time of key if the process time is large than key ttl)\n- Thread safe\n- Support Reentrant lock\n- Support expired unlock function, automatically unlock after x seconds, no need to manually unlock by call unlock method\n- Support try lock, wait n second if the lock is existed.\n\n### Basic Usage\n\n1. Install \n\n    ```python\n    pip install distrilockper\n    ```\n\n2. declare config instance\n\n    ```python\n    from distrilockper import Config\n    config = Config()\n    ```\n\n3. select single Redis server mode or cluster Redis servers mode\n\n    ```python\n    config.use_single_server()\n\n    ```\n\n    ```python\n    config.use_cluster_servers()\n    ```\n\n4. set the config\n\n    ```python\n    config.use_single_server().set_config(host='0.0.0.0', port=6379)\n    ```\n\n    ```python\n    config.use_cluster_servers().set_config(host='0.0.0.0', port=7000)\n    ```\n\n    ```python\n    config.use_cluster_servers().add_node_address(host='0.0.0.0', port=7000) \\\n                                    .add_node_address(host='0.0.0.0', port=7001) \\\n                                    .add_node_address(host='0.0.0.0', port=7002) \\\n                                    .add_node_address(host='0.0.0.0', port=7003) \\\n                                    .add_node_address(host='0.0.0.0', port=7004) \\\n                                    .add_node_address(host='0.0.0.0', port=7005)\n    ```\n\n    The set_config and add_node_address method takes several arguments from python redis library\n\n5. declare the lock instance\n\n    ```python\n    helper = LockHelper()\n    helper.create(config)\n    ```\n\n6. get a kind of lock\n\n    ```python\n    lock = helper.get_reentrant_lock(key='apples')\n    ```\n\n7. try lock the key\n\n    ```python\n    result = lock.try_lock(wait_time=10,lease_time=7,time_unit='second')\n    ```\n\n    The try_lock method takes several arguments:\n\n    - `wait_time` : try lock operation time out\n    - `lease_time` : the release time of the lock\n    - `time_unit` : unit of lease_time and wait_time\n        - `seconds` / `s`\n        - `hour` / `h`\n        - `minute` / `m`\n        - `milliseconds`/ `ms`\n\n8. unlock after business logic done\n\n    ```python\n    lock.unlock()\n    ```\n\n## Reentrant\n\nthe reentrant lock only supports in the same thread\n\n### Get the lock in different thread\n\n```python\nfrom distrilockper import Config\nfrom distrilockper import LockHelper\nfrom multiprocessing.dummy import Pool as ThreadPool\n\nconfig = Config()\nconfig.use_single_server().set_config(host='0.0.0.0', port=6379)\n\nhelper = LockHelper()\nhelper.create(config)\n\ndef get_lock(_):\n    print(\"run\", _)\n    Locker1 = helper.get_reentrant_lock(key='apples')\n    re1 = Locker1.try_lock(60, 10, 'second')\n    assert re1 == True\n    print(\"get lock\",re1)\n    assert Locker1.is_exists() == True\n    print('exists', Locker1.is_exists())\n\npool = ThreadPool(100)\nresults = pool.map(get_lock, range(10))\n```\n\n### get the lock in same thread\n\n```python\nfrom distrilockper import Config\nfrom distrilockper import LockHelper\nfrom multiprocessing.dummy import Pool as ThreadPool\n\nconfig = Config()\nconfig.use_single_server().set_config(host='0.0.0.0', port=6379)\n\nhelper = LockHelper()\nhelper.create(config)\n\nfor i in range(10):\n    Locker1 = helper.get_reentrant_lock(key='apples')\n    re1 = Locker1.try_lock(60, 10, 'second')\n    assert re1 == True\n    print(\"get lock\", re1)\n    assert Locker1.is_exists() == True\n    print('exists', Locker1.is_exists())\n```\n\n## Watchdog (for lock)\n\nuse case: the time is not predictable for time-consuming task or business logic. you can not set the fixed release time for lock you got. An Alternative plan that you can set a high number for release but it will be wait a long long time when you program be aborted unexpectedly\n\nWatchdog mechanism will refresh regularly the lock until you call unlock method or the program be aborted unexpectedly\n\n```python\nfrom distrilockper import Config\nfrom distrilockper import LockHelper\nfrom random import randint\nfrom time import sleep\n\nconfig = Config()\nconfig.use_single_server().set_config(host='0.0.0.0', port=6379)\n\nhelper = LockHelper()\nhelper.create(config)\n\nfor i in range(10):\n    Locker1 = helper.get_reentrant_lock(key='apples')\n    re1 = Locker1.try_lock(wait_time=60, time_unit= 'second')\n    assert re1 == True\n    print(\"get lock\", re1)\n    assert Locker1.is_exists() == True\n    print('exists', Locker1.is_exists())\n\n    print('do something ')\n    sleep(randint(10,100))\n\n    assert Locker1.unlock() == True\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/luislui/distributed_lock_helper",
    "keywords": "Lock,Distributed",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "distrilockper",
    "package_url": "https://pypi.org/project/distrilockper/",
    "platform": "",
    "project_url": "https://pypi.org/project/distrilockper/",
    "project_urls": {
      "Homepage": "https://gitlab.com/luislui/distributed_lock_helper"
    },
    "release_url": "https://pypi.org/project/distrilockper/0.0.1a11/",
    "requires_dist": [
      "coloredlogs (~=14.0)",
      "uuid (~=1.30)",
      "redis (~=3.0.1)",
      "python-json-logger",
      "redis-py-cluster",
      "atomos",
      "nest-asyncio",
      "multipledispatch",
      "pebble"
    ],
    "requires_python": "",
    "summary": "Distributed Lock with using Redis",
    "version": "0.0.1a11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10499125,
  "releases": {
    "0.0.1a10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8929003eb3f8c1de488bcee7824b60d4d64446428f612ef68b883f1fb2d1bf8f",
          "md5": "6d9cb26a2f315c0650fb9abf3835b1b1",
          "sha256": "6f4da8e5c76478f949096e69dbd1cb59a010bfbd5c8220faafea14d9cb92dc2f"
        },
        "downloads": -1,
        "filename": "distrilockper-0.0.1a10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6d9cb26a2f315c0650fb9abf3835b1b1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35957,
        "upload_time": "2021-05-28T13:42:00",
        "upload_time_iso_8601": "2021-05-28T13:42:00.857903Z",
        "url": "https://files.pythonhosted.org/packages/89/29/003eb3f8c1de488bcee7824b60d4d64446428f612ef68b883f1fb2d1bf8f/distrilockper-0.0.1a10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ec465c08d63e7406171ac855d03d178987ebae5aa79c1b66f45560e5b54bf0c",
          "md5": "8c9ce4138fe147903efc177d51a4bf77",
          "sha256": "a5c91950bc7663f57ff7b66a7a4c3deb528aa10ea7e8652cd1dea93ea96f8427"
        },
        "downloads": -1,
        "filename": "distrilockper-0.0.1a11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c9ce4138fe147903efc177d51a4bf77",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35968,
        "upload_time": "2021-05-28T13:44:24",
        "upload_time_iso_8601": "2021-05-28T13:44:24.517734Z",
        "url": "https://files.pythonhosted.org/packages/9e/c4/65c08d63e7406171ac855d03d178987ebae5aa79c1b66f45560e5b54bf0c/distrilockper-0.0.1a11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69d592e553a1cd3b23b67fc480c0deeb5100b2d1b5c42e12366cde7a00537cc9",
          "md5": "34c40101ed22b7629775f75fe8594632",
          "sha256": "55d19c87fd3d19566eb9e43bef2f8b024355f33bbe3ab4cff86fef82b883cbfb"
        },
        "downloads": -1,
        "filename": "distrilockper-0.0.1a7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "34c40101ed22b7629775f75fe8594632",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35898,
        "upload_time": "2021-05-28T13:35:04",
        "upload_time_iso_8601": "2021-05-28T13:35:04.131033Z",
        "url": "https://files.pythonhosted.org/packages/69/d5/92e553a1cd3b23b67fc480c0deeb5100b2d1b5c42e12366cde7a00537cc9/distrilockper-0.0.1a7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98b81b2de2dbfecd220bf60ad01f70c41182ab24e1e51f8e71bde050d1876e61",
          "md5": "70d6c94198221df4a235fdcc666c4adb",
          "sha256": "2eb387ada326005ae1fd034b892cbfec0b4509d514674fa45f5b425e574317dd"
        },
        "downloads": -1,
        "filename": "distrilockper-0.0.1a8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70d6c94198221df4a235fdcc666c4adb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35900,
        "upload_time": "2021-05-28T13:36:48",
        "upload_time_iso_8601": "2021-05-28T13:36:48.965046Z",
        "url": "https://files.pythonhosted.org/packages/98/b8/1b2de2dbfecd220bf60ad01f70c41182ab24e1e51f8e71bde050d1876e61/distrilockper-0.0.1a8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f37a212c8f05623f9fbcfb8659759fc7d23034788fa6f3834cf97afcb7734cf0",
          "md5": "00f291b667971b0dc98762f581675d71",
          "sha256": "bb21d8a3f951ef9c2dbc6f14ab965cf5558500e6a068d38d76dd37d82cd80d1c"
        },
        "downloads": -1,
        "filename": "distrilockper-0.0.1a9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "00f291b667971b0dc98762f581675d71",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35914,
        "upload_time": "2021-05-28T13:38:01",
        "upload_time_iso_8601": "2021-05-28T13:38:01.147962Z",
        "url": "https://files.pythonhosted.org/packages/f3/7a/212c8f05623f9fbcfb8659759fc7d23034788fa6f3834cf97afcb7734cf0/distrilockper-0.0.1a9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9ec465c08d63e7406171ac855d03d178987ebae5aa79c1b66f45560e5b54bf0c",
        "md5": "8c9ce4138fe147903efc177d51a4bf77",
        "sha256": "a5c91950bc7663f57ff7b66a7a4c3deb528aa10ea7e8652cd1dea93ea96f8427"
      },
      "downloads": -1,
      "filename": "distrilockper-0.0.1a11-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8c9ce4138fe147903efc177d51a4bf77",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 35968,
      "upload_time": "2021-05-28T13:44:24",
      "upload_time_iso_8601": "2021-05-28T13:44:24.517734Z",
      "url": "https://files.pythonhosted.org/packages/9e/c4/65c08d63e7406171ac855d03d178987ebae5aa79c1b66f45560e5b54bf0c/distrilockper-0.0.1a11-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}