{
  "info": {
    "author": "Gilad Senderovich",
    "author_email": "giladsnd@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# ThresholdPicker\n## A Tool for Optimizing Model Threshold.\nModel Threshold is for most models set to a default of 0.5.\nInmany cases your model performance can be imporved by selecting another threshold.\nThe Purpose of this project is to provide a tool for optimal Threshold picking.<br>\n*This tool is designed to work only with Binary Calssifiers*.<br>\n\nThe tool currently supports the following scenarios:<br><br>\n**1. Balance True-Positive and False-Positive rates for Maximal Return.** <br>\nFor Example:<br> If the value of each TP is 10\\$ and the \ncost of every FP is 2\\$ and your data has 20% **True** vs 80% **False** labels.<br>\nYou can use this tool to optimize the threshold so that your model will\nreturn the maximal average income.\n<br>Usage Example:\n\n\n    from ThresholdPicker.utils import *\n    from ThresholdPicker.ThresholdPicker import ThresholdPicker as PRTC\n    # simulate model probabilities and labels\n    predicted_probas = np.arange(0, 1 ,.01)\n    labels = np.random.choice([0,1], num_bins)\n    prtc = PRTC()\n    threshold, _ = prtc.gen_optimal_return_threshold(predicted_probas,\n                                                     labels,\n                                                     true_pos_value=10,\n                                                     false_pos_cost=2\n                                                     ) \n                                                     \n<br>**2. Pick Threshold by Recall:**\n   in case you need to configure the model to return a \n   specific recall score. <br>\n   You can run the ThresholdPicker with a labeled Validation \n   set and receive the threshold that would give the recall \n   closest to the the one you specified. Usage Example:\n   \n    threshold, _ = get_threshold(predicted_probas,\n                                 labels, target=target,\n                                 mode='recall', betta=1) \n   \n<br>**3. Pick Threshold by Percision:**<br>\n   in case you need to configure the model to return a \n   specific recall score. <br>\n   You can run the ThresholdPicker with a labeled Validation \n   set and receive the threshold that would give the recall \n   closest to the the one you specified. Usage Example:\n   \n    threshold, _ = get_threshold(predicted_probas,\n                                 labels, target=target,\n                                 mode='percision', betta=1) \n   \n<br>**4. Pick Threshold by F-Score:**<br>\n   in case you need to configure the model to return a \n   specific recall score. <br>\n   You can run the ThresholdPicker with a labeled Validation \n   set and receive the threshold that would give the recall \n   closest to the the one you specified. Usage Example:\n   \n    betta=1 # can peak any betta \n    threshold, _ = get_threshold(predicted_probas,\n                                 labels, target=target,\n                                 mode='fscore', betta=betta)\n   \n<br>**5. Pick Threshold for maximal F-Score:**<br>\nin progress\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Gsend/ThersholdPicker.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ThresholdPicker",
    "package_url": "https://pypi.org/project/ThresholdPicker/",
    "platform": null,
    "project_url": "https://pypi.org/project/ThresholdPicker/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Gsend/ThersholdPicker/issues",
      "Homepage": "https://github.com/Gsend/ThersholdPicker.git"
    },
    "release_url": "https://pypi.org/project/ThresholdPicker/0.0.5/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Thereshold Picker for Binary Classifiers",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13852962,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b6058b3f63b072c8aa7406a735c4b7ba07408f829be93d643b5157be494897f",
          "md5": "a7228c8fadce7a38db05724046b41cf4",
          "sha256": "595a7143a1265b2dfec333d7002605c2c870f8511681703bde9968522e4d732c"
        },
        "downloads": -1,
        "filename": "ThresholdPicker-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a7228c8fadce7a38db05724046b41cf4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4168,
        "upload_time": "2022-05-18T10:25:38",
        "upload_time_iso_8601": "2022-05-18T10:25:38.333793Z",
        "url": "https://files.pythonhosted.org/packages/6b/60/58b3f63b072c8aa7406a735c4b7ba07408f829be93d643b5157be494897f/ThresholdPicker-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3873142268a04ddf2b33c371d2c640c3a31199a213b03e97a48d3bdbec7a1c77",
          "md5": "175ce94ca0854fe1c16b8f7da2b36415",
          "sha256": "6e9492ddb7b95106b8a552fab136ab4e19bd0f05118fcd0645d8066217c57e97"
        },
        "downloads": -1,
        "filename": "ThresholdPicker-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "175ce94ca0854fe1c16b8f7da2b36415",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3500,
        "upload_time": "2022-05-18T10:25:39",
        "upload_time_iso_8601": "2022-05-18T10:25:39.723452Z",
        "url": "https://files.pythonhosted.org/packages/38/73/142268a04ddf2b33c371d2c640c3a31199a213b03e97a48d3bdbec7a1c77/ThresholdPicker-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "346c5252dbdc703aad1e30fc1a2df49c149479356bab8d6b0a391bdf89408856",
          "md5": "9a6e32b6cbb4817f0fd9cce207a3d3dd",
          "sha256": "c623361283ad8b52632189f286398c39cc5c5029cbf7a785f6ace90d55f1c1c3"
        },
        "downloads": -1,
        "filename": "ThresholdPicker-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a6e32b6cbb4817f0fd9cce207a3d3dd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5809,
        "upload_time": "2022-05-18T12:43:40",
        "upload_time_iso_8601": "2022-05-18T12:43:40.960490Z",
        "url": "https://files.pythonhosted.org/packages/34/6c/5252dbdc703aad1e30fc1a2df49c149479356bab8d6b0a391bdf89408856/ThresholdPicker-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5b996352036f502599bba2b1fec0769ce8adee532cf6d5d911d3c0f463b586a",
          "md5": "9d345eb2892233bd8c2c054b8d810e00",
          "sha256": "3298442a7e8a412fe214ae22481633bf08ea5399f154aa5fbcafed1be6bf3b8c"
        },
        "downloads": -1,
        "filename": "ThresholdPicker-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "9d345eb2892233bd8c2c054b8d810e00",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4424,
        "upload_time": "2022-05-18T12:43:42",
        "upload_time_iso_8601": "2022-05-18T12:43:42.675201Z",
        "url": "https://files.pythonhosted.org/packages/a5/b9/96352036f502599bba2b1fec0769ce8adee532cf6d5d911d3c0f463b586a/ThresholdPicker-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "346c5252dbdc703aad1e30fc1a2df49c149479356bab8d6b0a391bdf89408856",
        "md5": "9a6e32b6cbb4817f0fd9cce207a3d3dd",
        "sha256": "c623361283ad8b52632189f286398c39cc5c5029cbf7a785f6ace90d55f1c1c3"
      },
      "downloads": -1,
      "filename": "ThresholdPicker-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9a6e32b6cbb4817f0fd9cce207a3d3dd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5809,
      "upload_time": "2022-05-18T12:43:40",
      "upload_time_iso_8601": "2022-05-18T12:43:40.960490Z",
      "url": "https://files.pythonhosted.org/packages/34/6c/5252dbdc703aad1e30fc1a2df49c149479356bab8d6b0a391bdf89408856/ThresholdPicker-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5b996352036f502599bba2b1fec0769ce8adee532cf6d5d911d3c0f463b586a",
        "md5": "9d345eb2892233bd8c2c054b8d810e00",
        "sha256": "3298442a7e8a412fe214ae22481633bf08ea5399f154aa5fbcafed1be6bf3b8c"
      },
      "downloads": -1,
      "filename": "ThresholdPicker-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "9d345eb2892233bd8c2c054b8d810e00",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4424,
      "upload_time": "2022-05-18T12:43:42",
      "upload_time_iso_8601": "2022-05-18T12:43:42.675201Z",
      "url": "https://files.pythonhosted.org/packages/a5/b9/96352036f502599bba2b1fec0769ce8adee532cf6d5d911d3c0f463b586a/ThresholdPicker-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}