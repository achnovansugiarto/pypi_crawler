{
  "info": {
    "author": "hsz",
    "author_email": "hsz1273327@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# kafkaproxy\n\nkafka生产者和消费者的代理工具.\n\n代理对象用于推迟初始化.我们可以在需要的地方用代理对象的全局变量直接编写逻辑,避免被代理的对象来回在函数间传递.\n\n## 特性\n\n+ 支持代理`kafka-python`,`aiokafka`和`confluent-kafka`的生产者消费者对象.\n+ 提供统一通用的生产者消费者接口包装\n\n## 安装\n\n+ 只安装本项目不安装被代理对象的依赖: `pip install kafkaproxy`\n+ 安装本项目同时确定要代理的对象包为`kafka-python`: `pip install kafkaproxy[kafka]`\n+ 安装本项目同时确定要代理的对象包为`aiokafka`: `pip install kafkaproxy[aio]`\n+ 安装本项目同时确定要代理的对象包为`confluent-kafka`: `pip install kafkaproxy[confluent]`\n\n## 使用\n\n本项目支持代理3种kafka模块中的对应模块,使用枚举`KafkaType`中的取值在调用方法`initialize_from_addresses`初始化时指定.\n代理对象除了原样代理对象外还提供了生产者和消费者的统一通用接口包装.\n由于对应的方法是动态绑定的,因此如果需要他们的typehints可以用`typing.cast`将代理对象转化为对应的协议对象\n\n+ 同步接口生产者使用`ProducerProtocol`\n+ 异步接口生产者使用`AioProducerProtocol`\n+ 同步接消费产者使用`ConsumerProtocol`\n+ 异步接消费产者使用`AioConsumerProtocol`\n\n> 代理`kafka-python`或`confluent-kafka`生产者\n\n```python\nfrom kafkaproxy import ProducerProxy, KafkaType, ProducerProtocol\nfrom typing import cast\nimport time\nkafkap = ProducerProxy()\n\n\ndef run() -> None:\n    p = cast(ProducerProtocol, kafkap)\n    with p.mount() as cli:\n        for i in range(10):\n            cli.publish(\"topic1\", f\"send {i}\")\n            time.sleep(0.1)\n\n\n# kafkap.initialize_from_addresses(\"localhost:9094\", kafka_type=KafkaType.ConfluentKafka, acks=\"all\")\nkafkap.initialize_from_addresses(\"localhost:9094\", kafka_type=KafkaType.Kafka)\ntry:\n    print(\"start publishing\")\n    run()\nfinally:\n    print(\"stoped\")\n```\n\n> 代理`kafka-python`或`confluent-kafka`消费者\n\n```python\nfrom kafkaproxy import ConsumerProxy, KafkaType, ConsumerProtocol\nfrom typing import cast\n\nkafkac = ConsumerProxy()\n\n\ndef run() -> None:\n    c = cast(ConsumerProtocol, kafkac)\n    with c.watch() as g:\n        for record in g:\n            print(record.value)\n\n\n# kafkac.initialize_from_addresses(\"localhost:9094\", \"topic1\", group_id=\"test2\", kafka_type=KafkaType.Kafka)\nkafkac.initialize_from_addresses(\"localhost:9094\", \"topic1\", group_id=\"test2\", kafka_type=KafkaType.ConfluentKafka)\ntry:\n    print(\"start watching\")\n    run()\nfinally:\n    print(\"stoped\")\n\n```\n\n> 代理`aiokafka`生产者\n\n```python\nimport asyncio\nfrom kafkaproxy import ProducerProxy, KafkaType, AioProducerProtocol\nfrom typing import cast\n\nkafkap = ProducerProxy()\n\n\nasync def run() -> None:\n    p = cast(AioProducerProtocol, kafkap)\n    async with p.mount() as cli:\n        for i in range(10):\n            await cli.publish(\"topic1\", f\"send {i}\")\n            await asyncio.sleep(0.1)\n\n\nasync def main() -> None:\n    kafkap.initialize_from_addresses(\"localhost:9094\", kafka_type=KafkaType.AioKafka, acks=\"all\")\n    await run()\n\n\ntry:\n    print(\"start watching\")\n    asyncio.run(main())\nfinally:\n    print(\"stoped\")\n\n```\n\n> 代理`aiokafka`消费者\n\n```python\nimport asyncio\nfrom kafkaproxy import ConsumerProxy, KafkaAutoOffsetReset, KafkaType, AioConsumerProtocol\nfrom typing import cast\n\nkafkac = ConsumerProxy()\n\n\nasync def run() -> None:\n    c = cast(AioConsumerProtocol, kafkac)\n    async with c.watch() as g:\n        async for record in g:\n            print(record.value)\n\n\nasync def main() -> None:\n    kafkac.initialize_from_addresses(\"localhost:9094\", \"topic1\", group_id=\"test2\", kafka_type=KafkaType.AioKafka, auto_offset_reset=KafkaAutoOffsetReset.earliest)\n    await run()\n\n\ntry:\n    print(\"start watching\")\n    asyncio.run(main())\nfinally:\n    print(\"stoped\")\n\n```\n# v0.0.1\n\n项目创建\nMIT License\n\nCopyright (c) 2023 Python-Tools\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "kafka,proxy,consumer,producer",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kafkaproxy",
    "package_url": "https://pypi.org/project/kafkaproxy/",
    "platform": null,
    "project_url": "https://pypi.org/project/kafkaproxy/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/kafkaproxy/0.0.1/",
    "requires_dist": [
      "pyproxypattern (>=0.0.1)",
      "aiokafka (>=0.8.0) ; extra == 'aio'",
      "confluent-kafka (>=2.0.0) ; extra == 'confluent'",
      "kafka-python (>=2.0.0) ; extra == 'kafka'"
    ],
    "requires_python": "",
    "summary": "kafka consumer and producer proxy",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16806212,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c1498291da991a8d474e9f528bf251fb855b4ceac412a4b90305e74a8bbc73d",
          "md5": "74488144fe331bbf3ac8117a3c330633",
          "sha256": "de6e166f0121676126fc293347e7a1bd637b943a4d7baf9c3f511d5ab75d954a"
        },
        "downloads": -1,
        "filename": "kafkaproxy-0.0.1-py3.11.egg",
        "has_sig": false,
        "md5_digest": "74488144fe331bbf3ac8117a3c330633",
        "packagetype": "bdist_egg",
        "python_version": "0.0.1",
        "requires_python": null,
        "size": 10162,
        "upload_time": "2023-02-11T08:52:51",
        "upload_time_iso_8601": "2023-02-11T08:52:51.612670Z",
        "url": "https://files.pythonhosted.org/packages/9c/14/98291da991a8d474e9f528bf251fb855b4ceac412a4b90305e74a8bbc73d/kafkaproxy-0.0.1-py3.11.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fad55f07224bbe91b57227739c3781f83ffe1ab2dbacffb45a9a563e92162da3",
          "md5": "ef48eaf243c9f0c8f663e17c10bb63a6",
          "sha256": "b58e39ec053794c580a26bd5a51247e594508bfef527ac09b010f211e3075ae5"
        },
        "downloads": -1,
        "filename": "kafkaproxy-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef48eaf243c9f0c8f663e17c10bb63a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11185,
        "upload_time": "2023-02-11T08:52:49",
        "upload_time_iso_8601": "2023-02-11T08:52:49.973925Z",
        "url": "https://files.pythonhosted.org/packages/fa/d5/5f07224bbe91b57227739c3781f83ffe1ab2dbacffb45a9a563e92162da3/kafkaproxy-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "464468385244bf893607cde666994d41a72ba4ecd50ab62e5048a1e0fcad1ecf",
          "md5": "a503fd3d2a0ad500ef5be137dc6130bf",
          "sha256": "b9cc08ac68d8c69c97e4e21daa80f8c8d32e970d67acc2f3b7529f71fbd5c04f"
        },
        "downloads": -1,
        "filename": "kafkaproxy-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a503fd3d2a0ad500ef5be137dc6130bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9869,
        "upload_time": "2023-02-11T08:52:52",
        "upload_time_iso_8601": "2023-02-11T08:52:52.950630Z",
        "url": "https://files.pythonhosted.org/packages/46/44/68385244bf893607cde666994d41a72ba4ecd50ab62e5048a1e0fcad1ecf/kafkaproxy-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9c1498291da991a8d474e9f528bf251fb855b4ceac412a4b90305e74a8bbc73d",
        "md5": "74488144fe331bbf3ac8117a3c330633",
        "sha256": "de6e166f0121676126fc293347e7a1bd637b943a4d7baf9c3f511d5ab75d954a"
      },
      "downloads": -1,
      "filename": "kafkaproxy-0.0.1-py3.11.egg",
      "has_sig": false,
      "md5_digest": "74488144fe331bbf3ac8117a3c330633",
      "packagetype": "bdist_egg",
      "python_version": "0.0.1",
      "requires_python": null,
      "size": 10162,
      "upload_time": "2023-02-11T08:52:51",
      "upload_time_iso_8601": "2023-02-11T08:52:51.612670Z",
      "url": "https://files.pythonhosted.org/packages/9c/14/98291da991a8d474e9f528bf251fb855b4ceac412a4b90305e74a8bbc73d/kafkaproxy-0.0.1-py3.11.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fad55f07224bbe91b57227739c3781f83ffe1ab2dbacffb45a9a563e92162da3",
        "md5": "ef48eaf243c9f0c8f663e17c10bb63a6",
        "sha256": "b58e39ec053794c580a26bd5a51247e594508bfef527ac09b010f211e3075ae5"
      },
      "downloads": -1,
      "filename": "kafkaproxy-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ef48eaf243c9f0c8f663e17c10bb63a6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11185,
      "upload_time": "2023-02-11T08:52:49",
      "upload_time_iso_8601": "2023-02-11T08:52:49.973925Z",
      "url": "https://files.pythonhosted.org/packages/fa/d5/5f07224bbe91b57227739c3781f83ffe1ab2dbacffb45a9a563e92162da3/kafkaproxy-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "464468385244bf893607cde666994d41a72ba4ecd50ab62e5048a1e0fcad1ecf",
        "md5": "a503fd3d2a0ad500ef5be137dc6130bf",
        "sha256": "b9cc08ac68d8c69c97e4e21daa80f8c8d32e970d67acc2f3b7529f71fbd5c04f"
      },
      "downloads": -1,
      "filename": "kafkaproxy-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a503fd3d2a0ad500ef5be137dc6130bf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9869,
      "upload_time": "2023-02-11T08:52:52",
      "upload_time_iso_8601": "2023-02-11T08:52:52.950630Z",
      "url": "https://files.pythonhosted.org/packages/46/44/68385244bf893607cde666994d41a72ba4ecd50ab62e5048a1e0fcad1ecf/kafkaproxy-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}