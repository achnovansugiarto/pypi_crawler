{
  "info": {
    "author": "Mark Poroshin",
    "author_email": "mark.poroshin@yandex.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/dbt-labs/dbt/ec7dee39f793aa4f7dd3dae37282cc87664813e4/etc/dbt-logo-full.svg\" alt=\"dbt logo\" width=\"500\"/>\n</p>\n<p align=\"center\">\n  <a href=\"https://github.com/dbt-labs/dbt-redshift/actions/workflows/main.yml\">\n    <img src=\"https://github.com/dbt-labs/dbt-redshift/actions/workflows/main.yml/badge.svg?event=push\" alt=\"Unit Tests Badge\"/>\n  </a>\n  <a href=\"https://github.com/dbt-labs/dbt-redshift/actions/workflows/integration.yml\">\n    <img src=\"https://github.com/dbt-labs/dbt-redshift/actions/workflows/integration.yml/badge.svg?event=push\" alt=\"Integration Tests Badge\"/>\n  </a>\n</p>\n\n**[dbt](https://www.getdbt.com/)** enables data analysts and engineers to transform their data using the same practices that software engineers use to build applications.\n\ndbt is the T in ELT. Organize, cleanse, denormalize, filter, rename, and pre-aggregate the raw data in your warehouse so that it's ready for analysis.\n\n## dbt-greenplum\n\nThe `dbt-greenplum` package contains the code enabling dbt to work with Greenplum. This adapter based on [postgres-adapter](https://github.com/dbt-labs/dbt-core/blob/main/plugins/postgres/dbt/include/postgres/profile_template.yml) with a bit difference for a greenplum specific features\n\n## Installation\n\nEasiest way to start use dbt-greenplum is to install it using pip\n`pip install dbt-greenplum==<version>`\n\nWhere `<version>` is same as your dbt version\n\nAvailable versions:\n - 0.19.2 for dbt version 0.19.*\n - 1.0.4 for dbt version 1.0.4\n\n## Supported Features\n\nYou can specify following preference \n - starage type\n   - heap\n   - appendoptimized\n - distribution\n   - `distributed randomly` by defaut\n   - `distributed by (column, [ ... ] )` by setting up `distributed_by` parameter in the model config\n - table orientation\n   - `orientation=colum` by default\n   - `orientation=row` by setting up `orientation` parameter in `row` in the model config\n - compress type, level and blocksize with default values\n   ```bash\n    blocksize=32768,\n    compresstype=ZLIB,\n    compresslevel=1\n   ``` \n    You can also specify `blocksize`, `compresstype`, `compresslevel` in the model config\n - appendonly|appendoptimized preference by default is `true`, also you can override it by setting up `appendoptimized` field in the model config\n - partitions (see \"partition\" chapter below)\n\n### Heap table example\n\nTo create heap table set `appendoptimized` parameter value to `false` \n\n```SQL\n{{\n   config(\n      ...\n      materialized='table',\n      appendoptimized=false\n      ...\n   )\n}}\n\nselect 1 as \"id\"\n```\n\nwill produce following SQL code\n\n```SQL\ncreate  table \"<db_name>\".\"<schema_name>\".\"<table_name>\"\nwith (\n   appendoptimized=false\n) as (\n   select 1 as \"id\"\n)\nDISTRIBUTED RANDOMLY;\n```\n\n### Appendoptimized table example\nYou can use `appendopimized` or `appendonly`(legacy) to create appendoptimized table\n\nSuch model definition\n\n```SQL\n{{\n    config(\n        materialized='table',\n        distributed_by='id',\n        appendoptimized=true,\n        orientation='column',\n        compresstype='ZLIB',\n        compresslevel=1,\n        blocksize=32768\n    )\n}}\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n```\n\nwill produce following sql code\n\n```SQL\ncreate  table \"dvault\".\"dv\".\"my_first_dbt_model__dbt_tmp\"\nwith (\n    appendoptimized=true,\n    blocksize=32768,\n    orientation=column,\n    compresstype=ZLIB,\n    compresslevel=1\n)\nas (\n  with source_data as (\n      select 1 as id\n      union all\n      select null as id\n    )\n  select *\n  from source_data\n)  \ndistributed by (id);\n\n  \nalter table \"dvault\".\"dv\".\"my_first_dbt_model__dbt_tmp\" rename to \"my_first_dbt_model\";\n```\n\n### Partitions\n\nGreenplum does not support partitions with `create table as` [construction](https://gpdb.docs.pivotal.io/6-9/ref_guide/sql_commands/CREATE_TABLE_AS.html), so you need to build model in two steps\n - create table schema\n - insert data\n\nTo implement partitions into you dbt-model you need to specify on of the following config parameters:\n - `fields_string` - definition of columns name, type and constraints\n - one of following way to configure partitions\n   - `raw_partition` by default\n   - `partition_type`, `partition_column`, `partition_spec`\n   - `partition_type`, `partition_column`, `partition_start`, `partition_end`, `partition_every`\n   - `partition_type`, `partition_column`, `partition_values`\n - `default_partition_name` - name of default partition 'other' by default\n\nLet consider examples of definition model with partitions\n\n - using `raw_partition` parameter\n   ```SQL\n   {% set fields_string %}\n        id int4 null,\n        incomingdate timestamp NULL\n   {% endset %}\n\n\n   {% set raw_partition %}\n       PARTITION BY RANGE (incomingdate)\n       (\n           START ('2021-01-01'::timestamp) INCLUSIVE\n           END ('2023-01-01'::timestamp) EXCLUSIVE\n           EVERY (INTERVAL '1 day'),\n           DEFAULT PARTITION extra\n       );\n   {% endset %}\n\n   {{\n       config(\n           materialized='table',\n           distributed_by='id',\n           appendonly='true',\n           orientation='column',\n           compresstype='ZLIB',\n           compresslevel=1,\n           blocksize=32768,\n           fields_string=fields_string,\n           raw_partition=raw_partition,\n           default_partition_name='other_data'\n       )\n   }}\n   \n   with source_data as (\n   \n       select\n           1 as id,\n           '2022-02-22'::timestamp as incomingdate\n       union all\n       select\n           null as id,\n           '2022-02-25'::timestamp as incomingdate\n   )\n   select *\n   from source_data\n   ```\n   will produce following sql code\n   ```SQL\n   create table if not exists \"database\".\"schema\".\"my_first_dbt_model__dbt_tmp\" (\n       id int4 null,\n       incomingdate timestamp NULL\n   )\n   with (\n       appendonly=true,\n       blocksize=32768,\n       orientation=column,\n       compresstype=ZLIB,\n       compresslevel=1\n   )\n   DISTRIBUTED BY (id)\n   PARTITION BY RANGE (incomingdate)\n   (\n       START ('2021-01-01'::timestamp) INCLUSIVE\n       END ('2023-01-01'::timestamp) EXCLUSIVE\n       EVERY (INTERVAL '1 day'),\n       DEFAULT PARTITION extra\n   );\n   \n   insert into \"database\".\"schema\".\"my_first_dbt_model__dbt_tmp\" (\n       with source_data as (\n   \n           select\n               1 as id,\n               '2022-02-22'::timestamp as incomingdate\n           union all\n           select\n               null as id,\n               '2022-02-25'::timestamp as incomingdate\n       )\n       select *\n       from source_data\n   );\n   alter table \"dvault\".\"dv\".\"my_first_dbt_model\" rename to \"my_first_dbt_model__dbt_backup\";\n   drop table if exists \"dvault\".\"dv\".\"my_first_dbt_model__dbt_backup\" cascade;\n   alter table \"database\".\"schema\".\"my_first_dbt_model__dbt_tmp\" rename to \"my_first_dbt_model\";\n   ```\n - Same result you can get using `partition_type`, `partition_column`, `partition_spec` parameters\n   ```SQL\n   {% set fields_string %}\n       id int4 null,\n       incomingdate timestamp NULL\n   {% endset %}\n\n   {%- set partition_type = 'RANGE' -%}\n   {%- set partition_column = 'incomingdate' -%}\n   {% set partition_spec %}\n       START ('2021-01-01'::timestamp) INCLUSIVE\n       END ('2023-01-01'::timestamp) EXCLUSIVE\n       EVERY (INTERVAL '1 day'),\n       DEFAULT PARTITION extra\n   {% endset %}\n   \n   {{\n       config(\n           materialized='table',\n           distributed_by='id',\n           appendonly='true',\n           orientation='column',\n           compresstype='ZLIB',\n           compresslevel=1,\n           blocksize=32768,\n           fields_string=fields_string,\n           partition_type=partition_type,\n           partition_column=partition_column,\n           partition_spec=partition_spec,\n           default_partition_name='other_data'\n       )\n   }}\n   \n   with source_data as (\n   \n       select\n           1 as id,\n           '2022-02-22'::timestamp as incomingdate\n       union all\n       select\n           null as id,\n           '2022-02-25'::timestamp as incomingdate\n   )\n   select *\n   from source_data\n   ```\n - also, you can use third way\n   ```SQL\n   {% set fields_string %}\n       id int4 null,\n       incomingdate timestamp NULL\n   {% endset %}\n   \n   \n   {%- set partition_type = 'RANGE' -%}\n   {%- set partition_column = 'incomingdate' -%}\n   {%- set partition_start = \"'2021-01-01'::timestamp\" -%}\n   {%- set partition_end = \"'2022-01-01'::timestamp\" -%}\n   {%- set partition_every = '1 day' -%}\n   \n   \n   {{\n       config(\n           materialized='table',\n           distributed_by='id',\n           appendonly='true',\n           orientation='column',\n           compresstype='ZLIB',\n           compresslevel=1,\n           blocksize=32768,\n           fields_string=fields_string,\n           partition_type=partition_type,\n           partition_column=partition_column,\n           partition_start=partition_start,\n           partition_end=partition_end,\n           partition_every=partition_every,\n           default_partition_name='other_data'\n       )\n   }}\n   \n   with source_data as (\n   \n       select\n           1 as id,\n           '2022-02-22'::timestamp as incomingdate\n       union all\n       select\n           null as id,\n           '2022-02-25'::timestamp as incomingdate\n   )\n   select *\n   from source_data\n   ```\n - example of partition_type `LIST` is coming soon\n\n#### Table partition hints\n\nToo check generate sql script use `-d` option:\n`dbt -d run <...> -m <models>`\n\nIf you want implement complex partition logic with subpartition or something else use `raw_partition` parameter\n\n## Getting started\n\n- [Install dbt](https://docs.getdbt.com/docs/installation)\n- Read the [introduction](https://docs.getdbt.com/docs/introduction/) and [viewpoint](https://docs.getdbt.com/docs/about/viewpoint/)\n\n## Join the dbt Community\n\n- Be part of the conversation in the [dbt Community Slack](http://community.getdbt.com/)\n- Read more on the [dbt Community Discourse](https://discourse.getdbt.com)\n\n## Reporting bugs and contributing code\n\n- Want to report a bug or request a feature? Let us know on [Slack](http://community.getdbt.com/), or open [an issue](https://github.com/markporoshin/dbt-greenplum/issues/new)\n- Want to help us build dbt? Check out the [Contributing Guide](https://github.com/dbt-labs/dbt/blob/HEAD/CONTRIBUTING.md)\n\n## Code of Conduct\n\nEveryone interacting in the dbt project's codebases, issue trackers, chat rooms, and mailing lists is expected to follow the [dbt Code of Conduct](https://community.getdbt.com/code-of-conduct).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/markporoshin/dbt-greenplum",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dbt-greenplum",
    "package_url": "https://pypi.org/project/dbt-greenplum/",
    "platform": null,
    "project_url": "https://pypi.org/project/dbt-greenplum/",
    "project_urls": {
      "Homepage": "https://github.com/markporoshin/dbt-greenplum"
    },
    "release_url": "https://pypi.org/project/dbt-greenplum/1.4.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "The greenplum adapter plugin for dbt (data build tool)",
    "version": "1.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17292438,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e52ed9fdfedfa6acfdea0c6871fcdc701ee765c0449ca1dfac5a2f85e2f58f9b",
          "md5": "c5877c3b7f634411d807575640450fbd",
          "sha256": "02dba325438b92172fb58ff0cec80714d15ce42e0cbb9734f45729dfbf81b862"
        },
        "downloads": -1,
        "filename": "dbt_greenplum-0.0.1-py3.8.egg",
        "has_sig": false,
        "md5_digest": "c5877c3b7f634411d807575640450fbd",
        "packagetype": "bdist_egg",
        "python_version": "0.0.1",
        "requires_python": null,
        "size": 19262,
        "upload_time": "2022-03-31T11:57:49",
        "upload_time_iso_8601": "2022-03-31T11:57:49.056527Z",
        "url": "https://files.pythonhosted.org/packages/e5/2e/d9fdfedfa6acfdea0c6871fcdc701ee765c0449ca1dfac5a2f85e2f58f9b/dbt_greenplum-0.0.1-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef935664f4e6a76966a28b07f9b26af35d18d02c5e0945c6c7e4aba01e7037bb",
          "md5": "f50fb48487001ec6df7f452c1021cf23",
          "sha256": "7083d38291c5fe21fd79b386af64da017ab2be06ab17e02e8c4177336cdc2739"
        },
        "downloads": -1,
        "filename": "dbt-greenplum-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f50fb48487001ec6df7f452c1021cf23",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15596,
        "upload_time": "2022-03-31T11:57:46",
        "upload_time_iso_8601": "2022-03-31T11:57:46.923124Z",
        "url": "https://files.pythonhosted.org/packages/ef/93/5664f4e6a76966a28b07f9b26af35d18d02c5e0945c6c7e4aba01e7037bb/dbt-greenplum-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ec050b54c8cfe9a7fa27ea17dddf032eb6eb53dfc9e58943156dedfe7896fa8",
          "md5": "0fd1d3ac127ef487011a2758b2dec426",
          "sha256": "336320c84611e33b1919de34e49d3eea2ba944d1d24fc47caeeccec6fbebf5d2"
        },
        "downloads": -1,
        "filename": "dbt-greenplum-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0fd1d3ac127ef487011a2758b2dec426",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15616,
        "upload_time": "2022-03-31T12:08:05",
        "upload_time_iso_8601": "2022-03-31T12:08:05.156975Z",
        "url": "https://files.pythonhosted.org/packages/9e/c0/50b54c8cfe9a7fa27ea17dddf032eb6eb53dfc9e58943156dedfe7896fa8/dbt-greenplum-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.19.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "458c918c3ce5da95da7f93a4df7f59dcc078e71673f1afb3f2c6b4c9b443897f",
          "md5": "9e11c9000868a697e28242e09cc457f1",
          "sha256": "43877482cf0c49179d1a665346d3490d21bf51f876e0f06e395bf1b809813d2c"
        },
        "downloads": -1,
        "filename": "dbt-greenplum-0.19.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9e11c9000868a697e28242e09cc457f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15102,
        "upload_time": "2022-03-31T13:00:28",
        "upload_time_iso_8601": "2022-03-31T13:00:28.722073Z",
        "url": "https://files.pythonhosted.org/packages/45/8c/918c3ce5da95da7f93a4df7f59dcc078e71673f1afb3f2c6b4c9b443897f/dbt-greenplum-0.19.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.19.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "246a0f0d915ec11f27a2262ce8202a688a282d522c55cc0f9959a9d64083e263",
          "md5": "d0dbfbb0311e95e6cf2b1c99451d6885",
          "sha256": "1ec0e55f5c75fb05f06d5a3e2a8a78ce49d7725261438a89a52b2d902efbcdf6"
        },
        "downloads": -1,
        "filename": "dbt-greenplum-0.19.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d0dbfbb0311e95e6cf2b1c99451d6885",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16678,
        "upload_time": "2022-03-31T13:27:55",
        "upload_time_iso_8601": "2022-03-31T13:27:55.851206Z",
        "url": "https://files.pythonhosted.org/packages/24/6a/0f0d915ec11f27a2262ce8202a688a282d522c55cc0f9959a9d64083e263/dbt-greenplum-0.19.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.19.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3489ba986c3f7ab0e23b9c1f097c2f5f033e29ea6f8efa842c2b673d294211eb",
          "md5": "73c0fc23689fc4c07d73e5c3eb15b602",
          "sha256": "130652d63fd37ddb72f9f53dd3cd2f703708380f779708b5869fde5953446821"
        },
        "downloads": -1,
        "filename": "dbt-greenplum-0.19.2.tar.gz",
        "has_sig": false,
        "md5_digest": "73c0fc23689fc4c07d73e5c3eb15b602",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16632,
        "upload_time": "2022-04-01T06:01:32",
        "upload_time_iso_8601": "2022-04-01T06:01:32.682292Z",
        "url": "https://files.pythonhosted.org/packages/34/89/ba986c3f7ab0e23b9c1f097c2f5f033e29ea6f8efa842c2b673d294211eb/dbt-greenplum-0.19.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.19.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c822d85aa0c69a3cecafc4e0ec7ea410700bcf50f2e0319e64575c4dc10f8ac",
          "md5": "8268e55cdc3ef393f4f3ef27b392bf08",
          "sha256": "6246eca6b40469abbd41cdd7d2b9207be74b98e4cadb8ec2365a98205ecc0463"
        },
        "downloads": -1,
        "filename": "dbt-greenplum-0.19.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8268e55cdc3ef393f4f3ef27b392bf08",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16683,
        "upload_time": "2022-04-05T06:50:47",
        "upload_time_iso_8601": "2022-04-05T06:50:47.194074Z",
        "url": "https://files.pythonhosted.org/packages/2c/82/2d85aa0c69a3cecafc4e0ec7ea410700bcf50f2e0319e64575c4dc10f8ac/dbt-greenplum-0.19.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2118363da3aa3e2d043ad99107da9f71812b70e4ac9f0737c693d1a4549b6f2",
          "md5": "8a6a63e4552a3a51a3b89d85eb708bcd",
          "sha256": "b8a2c43338357eed70ac9a39ae9a0ecd8572c9fbebff9703702c7175e3900f5e"
        },
        "downloads": -1,
        "filename": "dbt-greenplum-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8a6a63e4552a3a51a3b89d85eb708bcd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13272,
        "upload_time": "2022-04-12T09:11:33",
        "upload_time_iso_8601": "2022-04-12T09:11:33.382896Z",
        "url": "https://files.pythonhosted.org/packages/f2/11/8363da3aa3e2d043ad99107da9f71812b70e4ac9f0737c693d1a4549b6f2/dbt-greenplum-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "322c9973560ba30df78f031eab302d594f461b8198d4ead6bad3bd3c3916bf18",
          "md5": "f37899a0492ffb75ac992cc9156da22d",
          "sha256": "d1beb47085677ca8a0ef10a4442d7549070f924c474cb58428bc665d234ef832"
        },
        "downloads": -1,
        "filename": "dbt-greenplum-1.0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f37899a0492ffb75ac992cc9156da22d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13398,
        "upload_time": "2022-05-16T11:50:42",
        "upload_time_iso_8601": "2022-05-16T11:50:42.032450Z",
        "url": "https://files.pythonhosted.org/packages/32/2c/9973560ba30df78f031eab302d594f461b8198d4ead6bad3bd3c3916bf18/dbt-greenplum-1.0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1226ed8325e050beaf8e2861c002da96bb5b9bd44126f6f6de5413c2183159e6",
          "md5": "710dcf2046fa6e78195a11139ebb4412",
          "sha256": "6ae8fb84607740ece5b9554871e9139b1216f331ea6261f9decb33de1f7ef2b3"
        },
        "downloads": -1,
        "filename": "dbt-greenplum-1.0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "710dcf2046fa6e78195a11139ebb4412",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13373,
        "upload_time": "2022-05-19T07:17:43",
        "upload_time_iso_8601": "2022-05-19T07:17:43.895982Z",
        "url": "https://files.pythonhosted.org/packages/12/26/ed8325e050beaf8e2861c002da96bb5b9bd44126f6f6de5413c2183159e6/dbt-greenplum-1.0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93fa6e9cc942a6d0f44a735d968bbe226324854a197a6feb188d1685ddf60607",
          "md5": "efb787fac53249556996f702318b37a3",
          "sha256": "c2e9398d10409697343afe443e7977ddbbd75025bfc867d34d76eeed4751bdac"
        },
        "downloads": -1,
        "filename": "dbt-greenplum-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "efb787fac53249556996f702318b37a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14276,
        "upload_time": "2022-05-25T13:59:57",
        "upload_time_iso_8601": "2022-05-25T13:59:57.381845Z",
        "url": "https://files.pythonhosted.org/packages/93/fa/6e9cc942a6d0f44a735d968bbe226324854a197a6feb188d1685ddf60607/dbt-greenplum-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ca5c4fa1f2038ea7889bf7307cdbb2da7f68771b0415caaa9d301255cefd95f",
          "md5": "28e2648e0320b40172e8f81248017a60",
          "sha256": "c4e2d30326956af24f420723177cc293d8c34ee6ce4a5ef8548dd819216b3fad"
        },
        "downloads": -1,
        "filename": "dbt_greenplum-1.2.0-py3.9.egg",
        "has_sig": false,
        "md5_digest": "28e2648e0320b40172e8f81248017a60",
        "packagetype": "bdist_egg",
        "python_version": "1.2.0",
        "requires_python": ">=3.7",
        "size": 12272,
        "upload_time": "2022-09-04T08:49:19",
        "upload_time_iso_8601": "2022-09-04T08:49:19.181824Z",
        "url": "https://files.pythonhosted.org/packages/9c/a5/c4fa1f2038ea7889bf7307cdbb2da7f68771b0415caaa9d301255cefd95f/dbt_greenplum-1.2.0-py3.9.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef02141891d2600206b9aca192c32f3605e4ed25e34a8f74cfd51144e3a47fad",
          "md5": "37e0b56ec8d44bff84d5dda78699f4cb",
          "sha256": "1e89d076c81246a74b0e2bd6dc6a38c56ab4b4573c99aa051127e0a80af4bd9d"
        },
        "downloads": -1,
        "filename": "dbt-greenplum-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "37e0b56ec8d44bff84d5dda78699f4cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10873,
        "upload_time": "2022-09-15T15:01:22",
        "upload_time_iso_8601": "2022-09-15T15:01:22.595766Z",
        "url": "https://files.pythonhosted.org/packages/ef/02/141891d2600206b9aca192c32f3605e4ed25e34a8f74cfd51144e3a47fad/dbt-greenplum-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef3480e48b293d6bed6042f96dde14d66137c60a22be8d0c1eabad5fe1d9762f",
          "md5": "1f8f50013dc51c6a0706909191c99075",
          "sha256": "a72d297099faa3ad13fd0e5f33f172f9b785740239704aa0c0e096d0331586c7"
        },
        "downloads": -1,
        "filename": "dbt_greenplum-1.4.0-py3.8.egg",
        "has_sig": false,
        "md5_digest": "1f8f50013dc51c6a0706909191c99075",
        "packagetype": "bdist_egg",
        "python_version": "1.4.0",
        "requires_python": ">=3.7",
        "size": 15338,
        "upload_time": "2023-02-18T23:13:23",
        "upload_time_iso_8601": "2023-02-18T23:13:23.222181Z",
        "url": "https://files.pythonhosted.org/packages/ef/34/80e48b293d6bed6042f96dde14d66137c60a22be8d0c1eabad5fe1d9762f/dbt_greenplum-1.4.0-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6149731c1a5c5a0f62ec8351c260432c4033c57c502e90adce1d0d944c3a92c",
          "md5": "65ec2e5bb00ebb41a50b60b414066625",
          "sha256": "d972c01f315bc767374c514f616cf8c0d8f02400ddc18669e894e6b76460b929"
        },
        "downloads": -1,
        "filename": "dbt-greenplum-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "65ec2e5bb00ebb41a50b60b414066625",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11653,
        "upload_time": "2023-03-14T19:24:26",
        "upload_time_iso_8601": "2023-03-14T19:24:26.281982Z",
        "url": "https://files.pythonhosted.org/packages/c6/14/9731c1a5c5a0f62ec8351c260432c4033c57c502e90adce1d0d944c3a92c/dbt-greenplum-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef3480e48b293d6bed6042f96dde14d66137c60a22be8d0c1eabad5fe1d9762f",
        "md5": "1f8f50013dc51c6a0706909191c99075",
        "sha256": "a72d297099faa3ad13fd0e5f33f172f9b785740239704aa0c0e096d0331586c7"
      },
      "downloads": -1,
      "filename": "dbt_greenplum-1.4.0-py3.8.egg",
      "has_sig": false,
      "md5_digest": "1f8f50013dc51c6a0706909191c99075",
      "packagetype": "bdist_egg",
      "python_version": "1.4.0",
      "requires_python": ">=3.7",
      "size": 15338,
      "upload_time": "2023-02-18T23:13:23",
      "upload_time_iso_8601": "2023-02-18T23:13:23.222181Z",
      "url": "https://files.pythonhosted.org/packages/ef/34/80e48b293d6bed6042f96dde14d66137c60a22be8d0c1eabad5fe1d9762f/dbt_greenplum-1.4.0-py3.8.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c6149731c1a5c5a0f62ec8351c260432c4033c57c502e90adce1d0d944c3a92c",
        "md5": "65ec2e5bb00ebb41a50b60b414066625",
        "sha256": "d972c01f315bc767374c514f616cf8c0d8f02400ddc18669e894e6b76460b929"
      },
      "downloads": -1,
      "filename": "dbt-greenplum-1.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "65ec2e5bb00ebb41a50b60b414066625",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 11653,
      "upload_time": "2023-03-14T19:24:26",
      "upload_time_iso_8601": "2023-03-14T19:24:26.281982Z",
      "url": "https://files.pythonhosted.org/packages/c6/14/9731c1a5c5a0f62ec8351c260432c4033c57c502e90adce1d0d944c3a92c/dbt-greenplum-1.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}