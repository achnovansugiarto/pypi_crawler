{
  "info": {
    "author": "Shaunik Musukula",
    "author_email": "shaunik.musukula@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## Easy DB\nThis simple and easy-to-use library comes with a few important functions to start storing data easier! It comes\nloaded with functions to read, write, and delete data. This doesn't require too much setup, but it still requires some\nuser input and data to setup tables. Tables are made in JSON (JavaScript Object Notation), so they are very easy to\nread.\n\n## Dependencies\n\n- Python 3.8 or above\n\n## Docs\n\n### Table(filename, tablename) | Class\nThis is the table class, which holds all the information for one table.\n\n#### Parameters\n\n- filename [type: string]: file the table will be or is stored in\n- tablename [type: string]: the name of your table\n\n#### Attributes\n\n- deleted [type: boolean, default: False]: if the table is deleted (using a method in the class), the value of the \n   variable changes to True, methods cannot be carried out without the variable being True\n- set [type: boolean, default: False]: value changes to True if table is set, methods cannot be carried out without\nthe variable being True\n- filename [type: string]: file the table will be or is stored in\n- tablename [type: string]: the name of your table\n\n#### Example\n```python\nexample = Table('example_file.json', 'Example Table')\n```\n\n#### Methods\n\n---\n\n##### `setup_table(args, already_set)`\n\n**Use** \\\nSets up the table and sets the **set** attribute to True so that other methods in the table can be carried out.\n\n**Parameters**\n- already_set [type: bool, default: False]: if the table is already setup, set the value to True and ignore **args**\n- args [type: list, default: None]: should be ignored if table is already setup, if table is not setup, this is a list\nall the columns of the table\n\n**Example** \\\nIf table is not set\n```python\nexample.setup_table(args=['name', 'state', 'country'])\n```\nIf table is set\n```python\nexample.setup_table(already_set=True)\n```\n---\n##### `apdata(primary_key, args)`\n\n**Use** \\\nCan add and update rows of data using the primary key passed in.\n\n**Parameters**\n- primary_key [type: string]: distinct identifier of each row in the table, if the primary key passed as a parameter\ndoesn't exist in the table already a new row will be added with the primary key as the identifier,\nif the primary key already exists in the table all data corresponding to the primary key will be updated with new data\n- args [type: list]: the data corresponding to the primary, should be placed in the order of the table's columns\n\n**Raises**\n- ValueError - if number of arguments does not correspond to the number of columns in the table\n\n**Example**\n```python\nexample.apdata('Person1', ['John', 'Texas', 'US'])\n# adds data to a table with the primary key as \"Person1\"\n```\n---\n##### `get_keys(*key)`\n**Use** \\\nReturns data from specific columns in the form of a dictionary.\n\n**Parameters**\n- key [type: string]: column names\n\n**Example**\n```python\ndata = example.get_keys('name', 'state')\nprint(data)\n# returns data from only the \"name\" and \"state\" column\n```\n---\n##### `get(primary_key)`\n**Use** \\\nReturns all the data that corresponds to a primary key in the dictionary.\n\n**Parameters**\n- primary_key [type: string]: the primary key that corresponds to the row of data you want to get\n\n**Example**\n```python\ndata = example.get('Person1')\nprint(data)\n```\n---\n##### `delete(primary_key)`\n**Use** \\\nDeletes a row from the table, using the primary key to identify the row.\n\n**Parameters**\n- primary_key [type: string]: the primary key that corresponds to the row of data you want to delete\n\n**Example**\n```python\nexample.delete('Person1')\n```\n---\n##### `req_args()`\n**Use** \\\nReturns all the column names of the table.\n\n**Parameters** \\\nNone\n\n**Example**\n```python\narguments = example.req_args()\nprint(arguments)\n```\n---\n##### `check_if_table_setup()`\n**Use** \\\nChecks if the table is setup and sets the set attribute to True.\n\n**Parameters** \\\nNone\n\n**Raises**\n- ValueError: if the table is not setup\n\n**Example**\n```python\nexample.check_if_table_setup()\n```\n---\n##### `deltable()`\n**Use** \\\nDeletes the table.\n\n**Parameters** \\\nNone\n\n**Example**\n```python\nexample.deltable()\n```\n---\n##### `check_if_table_is_deleted()`\n**Use** \\\nChecks if the table is deleted and sets the deleted attribute to True.\n\n**Parameters** \\\nNone\n\n**Raises**\n- ValueError: if the table has been deleted\n\n**Example**\n```python\nexample.check_if_table_is_deleted()\n```\n---\n##### `number_of_args()`\n**Use** \\\nReturns the number of columns in the table.\n\n**Parameters** \\\nNone\n\n**Example**\n```python\nnumber = example.number_of_args()\nprint(number)\n```\n---\n##### `number_of_rows()`\n**Use** \\\nReturns the number of rows in the table.\n\n**Parameters** \\\nNone\n\n**Example**\n```python\nnumber = example.number_of_rows()\nprint(number)\n```\n\n## To-Do\n- Make CLI using EasyDB functions and classes\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shaunikm/EasyDB",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "EasyDatabase",
    "package_url": "https://pypi.org/project/EasyDatabase/",
    "platform": "",
    "project_url": "https://pypi.org/project/EasyDatabase/",
    "project_urls": {
      "Homepage": "https://github.com/shaunikm/EasyDB"
    },
    "release_url": "https://pypi.org/project/EasyDatabase/2.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A database that is very easy to set up and use",
    "version": "2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9039424,
  "releases": {
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfc88c3774fcf32cec28bdd96f82537a06867c95bc789b419620492651f80b5e",
          "md5": "7f9719fe631bf944805371cad1dd7842",
          "sha256": "3aac6e9f7d5ac9c00cc12576d4eb77d438282f9316b467e253b14d4a107c3238"
        },
        "downloads": -1,
        "filename": "EasyDatabase-2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f9719fe631bf944805371cad1dd7842",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4347,
        "upload_time": "2021-01-01T04:52:44",
        "upload_time_iso_8601": "2021-01-01T04:52:44.882998Z",
        "url": "https://files.pythonhosted.org/packages/df/c8/8c3774fcf32cec28bdd96f82537a06867c95bc789b419620492651f80b5e/EasyDatabase-2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02449f12089d045e33740c8f04a1e07e65d385c7684012df4356cf592773db8b",
          "md5": "a5759bbd96cc210d4b8f4a09856cb6ba",
          "sha256": "ec45316267eaf5a70232a0a85dd7fbcf3c660acfd333506c2828cc4e74385656"
        },
        "downloads": -1,
        "filename": "EasyDatabase-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a5759bbd96cc210d4b8f4a09856cb6ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3831,
        "upload_time": "2021-01-01T04:52:46",
        "upload_time_iso_8601": "2021-01-01T04:52:46.085766Z",
        "url": "https://files.pythonhosted.org/packages/02/44/9f12089d045e33740c8f04a1e07e65d385c7684012df4356cf592773db8b/EasyDatabase-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cf4a478a6f9240d0c4e87deccdc2dbd2849f704514a15c4ee41e4643a8b6c8d",
          "md5": "0a95e71d5d64afee2cfb05d5d85b8c97",
          "sha256": "6b19eda8931c267789d8d2921dce5e58df594730c093c02359e9b088407f4f54"
        },
        "downloads": -1,
        "filename": "EasyDatabase-2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a95e71d5d64afee2cfb05d5d85b8c97",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4335,
        "upload_time": "2021-01-01T07:18:50",
        "upload_time_iso_8601": "2021-01-01T07:18:50.570798Z",
        "url": "https://files.pythonhosted.org/packages/7c/f4/a478a6f9240d0c4e87deccdc2dbd2849f704514a15c4ee41e4643a8b6c8d/EasyDatabase-2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e4eab95fd2b5992c60b9651895b50ead8932cdb610279fc08988377a11ebbad",
          "md5": "511a1bda82788ac0d270a37a2a1ea01b",
          "sha256": "43c83e8b2a60fec18a020ee2bcde2d69a17051fc578d997da9de0518565ee3b9"
        },
        "downloads": -1,
        "filename": "EasyDatabase-2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "511a1bda82788ac0d270a37a2a1ea01b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3811,
        "upload_time": "2021-01-01T07:18:52",
        "upload_time_iso_8601": "2021-01-01T07:18:52.022382Z",
        "url": "https://files.pythonhosted.org/packages/3e/4e/ab95fd2b5992c60b9651895b50ead8932cdb610279fc08988377a11ebbad/EasyDatabase-2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7cf4a478a6f9240d0c4e87deccdc2dbd2849f704514a15c4ee41e4643a8b6c8d",
        "md5": "0a95e71d5d64afee2cfb05d5d85b8c97",
        "sha256": "6b19eda8931c267789d8d2921dce5e58df594730c093c02359e9b088407f4f54"
      },
      "downloads": -1,
      "filename": "EasyDatabase-2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0a95e71d5d64afee2cfb05d5d85b8c97",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4335,
      "upload_time": "2021-01-01T07:18:50",
      "upload_time_iso_8601": "2021-01-01T07:18:50.570798Z",
      "url": "https://files.pythonhosted.org/packages/7c/f4/a478a6f9240d0c4e87deccdc2dbd2849f704514a15c4ee41e4643a8b6c8d/EasyDatabase-2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3e4eab95fd2b5992c60b9651895b50ead8932cdb610279fc08988377a11ebbad",
        "md5": "511a1bda82788ac0d270a37a2a1ea01b",
        "sha256": "43c83e8b2a60fec18a020ee2bcde2d69a17051fc578d997da9de0518565ee3b9"
      },
      "downloads": -1,
      "filename": "EasyDatabase-2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "511a1bda82788ac0d270a37a2a1ea01b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3811,
      "upload_time": "2021-01-01T07:18:52",
      "upload_time_iso_8601": "2021-01-01T07:18:52.022382Z",
      "url": "https://files.pythonhosted.org/packages/3e/4e/ab95fd2b5992c60b9651895b50ead8932cdb610279fc08988377a11ebbad/EasyDatabase-2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}