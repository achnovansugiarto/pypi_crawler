{
  "info": {
    "author": "Francesco Rainone",
    "author_email": "beer4evah@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Multimedia :: Video",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "![IPyTV logo](doc/logo.png \"IPyTV logo\")\n\nA python3 library to parse IPTV playlists in the M3U Plus format.\n\n[![Downloads](https://pepy.tech/badge/m3u-ipytv)](https://pepy.tech/project/m3u-ipytv)\n[![Downloads](https://pepy.tech/badge/m3u-ipytv/month)](https://pepy.tech/project/m3u-ipytv)\n[![Downloads](https://pepy.tech/badge/m3u-ipytv/week)](https://pepy.tech/project/m3u-ipytv)\n\n## M3U Plus and IPTV\n\nThe M3U Plus format is a _de facto_ standard for distributing IPTV playlists on\nthe Internet.\n\nThe terms _IPTV playlist_ and _M3U Plus playlist_ are generally used\ninterchangeably, but in this repository **M3U Plus** refers to the data format,\nwhile **IPTV Playlist** refers to playlists in M3U Plus format.\n\nM3U Plus stems from\nthe [`extended M3U8`](https://en.wikipedia.org/wiki/M3U#Extended_M3U)\nformat, of which it supports only 2 tags (`#EXTM3U` and `#EXTINF`).\n\nThe syntax of the `#EXTM3U` and `#EXTINF` tags has been modified to include\nextra attributes (e.g., logo, group, language). Unfortunately this has broken\nthe backward compatibility with the original M3U8 standard (as explained in\ndetail [here](#format-considerations)).\n\nThis library has been created from scratch to parse and handle the M3U Plus\nformat only. It does not fully support regular M3U8 playlists (only basic\nchannel attributes are parsed).\n\n### Supported tags\n\nOnly `#EXTM3U`, `#EXTINF` and plain url rows are supported (i.e. they are parsed\nand their value is made available as properties of an `IPTVChannel` object).\n\nAll tags that are found between an `#EXTINF` row and its related url row are\nadded as `extras` to a channel, but without performing any parsing (i.e. they're\ntreated like plain strings).\n\nIn the example below, the `#EXTVLCOPT` row is not parsed, but copied _as-is_:\n\n```text\n#EXTINF:-1 tvg-id=\"\" tvg-name=\"hello\" tvg-country=\"IT\" tvg-url=\"\" group-title=\"Greetings\",Hello!\n#EXTVLCOPT:http-user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0 \nhttps://my-website.com/hello\n```\n\n## Installation\n\nThis library requires Python 3 (and the related `pip` installer).\n\n**PLEASE NOTE**: the library makes use of the `multiprocessing.Pool` class that\nrequires some care when working with the\n[IDLE](https://docs.python.org/3/library/idle.html) environment.\n\nTo install the library system-wide, run:\n\n```shell\npip install m3u-ipytv\n```\n\nTo install it within a virtual environment, run:\n\n```shell\npython -m venv .venv\nsource .venv/bin/activate\npip install m3u-ipytv\n```\n\n## Usage\n\n### Modules\n\nThe library comprises several modules, each with a specific area of competence:\n\n- **channel**\n    - Everything related to the handling of channels in a playlist.\n- **doctor**\n    - A collection of functions to fix common errors found in M3U files.\n- **exceptions**\n    - All the exceptions thrown by the library.\n- **m3u**\n    - Constants and functions related to M3U files.\n- **playlist**\n    - Everything related to the loading and handling of M3U playlists.\n\n### Loading an IPTV Playlist\n\n#### From a file\n\nUse the `playlist.loadf(file)` function:\n\n```python\nfrom ipytv import playlist\n\nfile = \"~/Documents/my_playlist.m3u\"\npl = playlist.loadf(file)\nprint(pl.length())\n```\n\n#### from a URL\n\nUse the `playlist.loadu(url)` function:\n\n```python\nfrom ipytv import playlist\n\nurl = \"https://iptv-org.github.io/iptv/categories/classic.m3u\"\npl = playlist.loadu(url)\nprint(pl.length())\n```\n\n#### From a string\n\nUse the `playlist.loads(string)` function:\n\n```python\nfrom ipytv import playlist\n\nstring = \"\"\"#EXTM3U\n#EXTINF:-1 tvg-id=\"Rai 1\" tvg-name=\"Rai 1\" group-title=\"RAI\",Rai 1\nhttp://myown.link:80/luke/210274/78482\"\"\"\npl = playlist.loads(string)\nprint(pl.length())\n```\n\n#### From a list\n\nUse the `playlist.loadl(rows)` function:\n\n```python\nfrom ipytv import playlist\n\nrows = [\n    '#EXTM3U',\n    '#EXTINF:-1 tvg-id=\"Rai 1\" tvg-name=\"Rai 1\" group-title=\"RAI\",Rai 1',\n    'http://myown.link:80/luke/210274/78482'\n]\npl = playlist.loadl(rows)\nprint(pl.length())\n```\n\n### M3UPlaylist class\n\nEvery load function above returns an object of the `M3UPlaylist` class.\n\nThis class models the concept of a playlist (which is, basically, a list of\nchannels) and offers methods to interact with the playlist itself and with its\nchannels.\n\nThere are two main properties in a playlist, and they are:\n\n1. Attributes\n2. Channels\n\nWhat these properties are and how they can be accessed is described in the next\nparagraphs.\n\n### Accessing the attributes of a playlist\n\nKey-value pairs that are specified in the `#EXTM3U` row are treated as\nplaylist-wide attributes (i.e. they apply to the playlist itself or to every\nchannel in the playlist).\n\nFor example the `x-tvg-url` part below:\n\n```text\n#EXTM3U x-tvg-url=\"http://myown.link:80/luke/220311/22311\"\n```\n\nThese attributes, in the form of a dictionary, can be accessed via the\n`get_attributes()` method:\n\n```python\nfrom ipytv import playlist\n\nurl = \"https://iptv-org.github.io/iptv/categories/kids.m3u\"\npl = playlist.loadu(url)\nattributes = pl.get_attributes()\nfor k, v in attributes.items():\n    print(f'\"{k}\": \"{v}\"')\n```\n\nIn alternative, when the name of the property is known beforehand, its value can\nbe retrieved with:\n\n```python\nfrom ipytv import playlist\n\nurl = \"https://iptv-org.github.io/iptv/categories/kids.m3u\"\npl = playlist.loadu(url)\nattributes = pl.get_attributes()\ntvg_url = pl.get_attribute(\"x-tvg-url\")\nprint(f\"x-tvg-url: {tvg_url}\")\n```\n\nThe attributes can also be added, modified and removed by using the following\nmethods:\n\n```python\nfrom ipytv.playlist import M3UPlaylist\n\npl = M3UPlaylist()\nattribute_name = 'tvg-shift'\n# Add the 'tvg-shift' attribute and set it to 1\npl.add_attribute(attribute_name, \"1\")\n# Update the 'tvg-shift' attribute to -2\npl.update_attribute(attribute_name, \"-2\")\n# Completely remove the 'tvg-shift' attribute\nvalue_before_deletion = pl.remove_attribute(attribute_name)\n```\n\nThere is also a method that allows to add multiple attributes at once (instead\nof single attributes) in the form of a dictionary:\n\n```python\npl.add_attributes({})\n```\n\n### Accessing the channels of a playlist\n\nThe `M3UPlaylist` class is basically a list of channels with some commodity\nfunctions. The channels in a playlist can be accessed by using one of the\nfollowing methods.\n\n#### Individually\n\nBy using the `get_channel(index)` method:\n\n```python\nfrom ipytv import playlist\n\nurl = \"https://iptv-org.github.io/iptv/categories/classic.m3u\"\npl = playlist.loadu(url)\n# Let's retrieve the first channel in the list\nchannel = pl.get_channel(0)\nprint(f'channel \\\"{channel.name}\\\": {channel.url}')\n# The next line will throw IndexOutOfBoundsException\nchannel = pl.get_channel(-1)\n```\n\n#### Iteratively\n\nBy looping over the channels in an `M3UPlaylist` object:\n\n```python\nfrom ipytv import playlist\n\nurl = \"https://iptv-org.github.io/iptv/categories/classic.m3u\"\npl = playlist.loadu(url)\nfor channel in pl:\n    print(f'channel \\\"{channel.name}\\\": {channel.url}')\n```\n\n#### Low level\n\nIn all cases where the previous two access methods are not sufficient, the inner\nchannel list can be accessed via the `get_channels()` method:\n\n```python\nfrom ipytv import playlist\n\nurl = \"https://iptv-org.github.io/iptv/categories/classic.m3u\"\npl = playlist.loadu(url)\nchan_list = pl.get_channels()\nten_channels = chan_list[:10] \n```\n\nThe channels can also be added, modified and removed by using the following\nmethods:\n\n```python\nfrom ipytv.playlist import M3UPlaylist\nfrom ipytv.channel import IPTVChannel\n\npl = M3UPlaylist()\nchannel = IPTVChannel()\n# Add a channel to the end of the list (last index)\npl.append_channel(channel)\n# Insert a channel in the specified position (all succeeding channels are\n# shifted right by 1 position)\npl.insert_channel(0, channel)\nnew_channel = IPTVChannel()\n# Replace the second channel of the playlist with a new channel\npl.update_channel(1, new_channel)\n# Remove the channel at the specified position (all succeeding channels are\n# shifted left by 1 position)\nold_channel = pl.remove_channel(0)\n```\n\nThere are also two methods that allow to add list of channels (instead of single\nchannels):\n\n```python\npl.append_channels([])\npl.insert_channels([])\n```\n\n### Accessing the properties of a channel\n\nThe `get_channels()` method of an M3UPlaylist object returns a list of\n`IPTVChannel` objects.\n\nAn `IPTVChannel` object has 3 basic properties (`url`, `name` and\n`duration`) and two optional fields: `attributes` (a dictionary) and `extras`\n(a list).\n\nFor example:\n\n```python\nfrom ipytv.channel import IPTVAttr, IPTVChannel\n\nchannel = IPTVChannel(\n    url=\"http://myown.link:80/luke/210274/78482\",\n    name=\"Rai 1\",\n    duration=\"-1\",\n    attributes={\n        IPTVAttr.TVG_ID.value: \"Rai 1\",\n        IPTVAttr.TVG_NAME.value: \"Rai 1\",\n        IPTVAttr.TVG_LOGO.value: \"https://static.epg.best/it/RaiUno.it.png\",\n        IPTVAttr.GROUP_TITLE.value: \"RAI\"\n    },\n    extras=['#EXTVLCOPT:http-user-agent=Lavf53.32.100']\n)\nprint(channel.name)\nprint(channel.attributes[IPTVAttr.GROUP_TITLE.value])\nprint(channel.extras[0])\n```\n\nThe `IPTVAttr` enum class contains attribute names that are commonly found in\nIPTV Playlists.\n\n### The `doctor` module\n\nInternet-sourced IPTV playlists, often contain a number of format errors. This\nmodule wants to address some common errors.\n\nThe module contains three classes, each with its own scope:\n\n1. `M3UDoctor`\n    - It contains methods to fix errors in m3u files (i.e. errors that would\n      make it impossible to load an m3u file as a playlist).\n2. `IPTVChannelDoctor`\n\n    - It contains methods to fix errors in a channel (i.e. errors in the\n      attributes of an #EXTINF row).\n\n3. `M3UPlaylistDoctor`\n\n    - It applies the fixes in `IPTVChannelDoctor` to all channels in the\n      playlist.\n\nAll the classes above offer one public static method named `sanitize()` that is\nin charge of applying all different fixes. It can be used as follows:\n\n```python\nfrom ipytv.doctor import M3UDoctor, M3UPlaylistDoctor\nfrom ipytv import playlist\n\nwith open('my-broken-playlist.m3u', encoding='utf-8') as in_file:\n    content = in_file.readlines()\n    fixed_content = M3UDoctor.sanitize(content)\n    pl = playlist.loadl(fixed_content)\n    fixed_pl = M3UPlaylistDoctor.sanitize(pl)\n    with open('my-fixed-playlist.m3u', 'w', encoding='utf-8') as out_file:\n        content = fixed_pl.to_m3u_plus_playlist()\n        out_file.write(content)\n```\n\n### Logging\n\nIPyTV supports python's\nstandard [logging system](https://docs.python.org/3/library/logging.html).\n\nTo enable IPyTV's logging, add a logging configuration to your application:\n\n```python\nimport logging\nfrom ipytv import playlist\n\nlogging.basicConfig(level=logging.INFO)\npl = playlist.loadu(\"https://iptv-org.github.io/iptv/categories/classic.m3u\")\n```\n\n## Format considerations\n\nThe extensions to the `#EXTM3U` and `#EXTINF` tags introduced by the M3U Plus\nformat have broken the compatibility with the M3U8 format.\n\nThis is what a standard `#EXTINF` row should look like:\n\n```text\n#EXTINF:-1,Rai 1\n```\n\nThe [format](https://tools.ietf.org/html/rfc8216#section-4.3.2.1) is pretty\nstraightforward:\n\n```text\n#EXTINF:<duration>,[<title>]\n```\n\nLet's break it down:\n\n1. the `#EXTINF:` tag\n1. the duration of the content (as an integer or float, signed or not)\n1. a comma character\n1. a title\n\nThis is what an `#EXTINF` row in the M3U Plus format looks like:\n\n```text\n#EXTINF:-1 tvg-id=\"Rai 1\" tvg-name=\"Rai 1\" tvg-logo=\"https://static.epg.best/it/RaiUno.it.png\" group-title=\"RAI\",Rai 1\n```\n\nIf we break it down, we see that points 3. and 4. have been added (and they\nbreak the previous definition for the `#EXTINF` tag):\n\n1. the `#EXTINF:` tag\n1. the duration of the content (as an integer or float, signed or not)\n1. a space\n1. a variable-length, space-separated list of attributes\n1. a comma character\n1. a title\n\nThe attributes in point 4 are in the `attribute=\"value\"` format, where _value_\nmay also contain non-escaped commas (and this really complicates the parsing\nlogic).\n\nIt's worth noting that the M3U8 RFC document specifies how\n[attribute lists](https://tools.ietf.org/html/rfc8216#section-4.2) should be\nformatted, but the M3U Plus implementation doesn't comply with the standard.\n\nIn conclusion, the M3U Plus format with its quirks and idiosyncrasies is hard to\nread for humans and hard to parse for computers. It's an ugly format, but it's\ntoo widespread to be ignored and for Python to lack a parsing library.\n\nOn a funny note, this is how the VLC programmers named the\n[parsing function](https://github.com/videolan/vlc/blob/474c90392ede9916f068fcb3f860ba220d4c5b11/modules/demux/playlist/m3u.c#L398)\nfor the IPTV playlists in the M3U Plus format:\n\n```c\nstatic void parseEXTINFIptvDiots(...)\n```\n\nJust saying... :sweat_smile:\n\n## License\n\nThis project is licensed under the terms of the MIT license.\n\nSee [LICENSE.txt](./LICENSE.txt) for details.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Beer4Ever83/ipytv",
    "keywords": "m3u,m3u_plus,iptv,playlist",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "m3u-ipytv",
    "package_url": "https://pypi.org/project/m3u-ipytv/",
    "platform": null,
    "project_url": "https://pypi.org/project/m3u-ipytv/",
    "project_urls": {
      "Bug Reports": "https://github.com/Beer4Ever83/ipytv/issues",
      "Funding": "https://www.buymeacoffee.com/beer4ever83",
      "Homepage": "https://github.com/Beer4Ever83/ipytv",
      "Source": "https://github.com/Beer4Ever83/ipytv"
    },
    "release_url": "https://pypi.org/project/m3u-ipytv/0.2.4/",
    "requires_dist": null,
    "requires_python": ">=3.6, <4",
    "summary": "A library for handling M3U playlists for IPTV (AKA m3u_plus)",
    "version": "0.2.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15871103,
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4793a02cee79ebff88db6891d8b90206670ae4c3f8db476090ffbeaf60bac669",
          "md5": "e8792f0a88452c15411183246d0a2c96",
          "sha256": "8e0cba03568213dd65b76eaff7d0b9733959184115fdae5359423225ca499139"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "e8792f0a88452c15411183246d0a2c96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 11684,
        "upload_time": "2021-09-27T19:14:21",
        "upload_time_iso_8601": "2021-09-27T19:14:21.810019Z",
        "url": "https://files.pythonhosted.org/packages/47/93/a02cee79ebff88db6891d8b90206670ae4c3f8db476090ffbeaf60bac669/m3u-ipytv-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7dd4545e24898e9b1239e531a990f0cb594274bb4f74296d7566b6e7770529b0",
          "md5": "5e211a3ec4357d85cf8c67ef20a5e074",
          "sha256": "2ce1014b1dc3fb2ac17826828fec758efaef1524d45ca710dd0f2609600a1ca6"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "5e211a3ec4357d85cf8c67ef20a5e074",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 11675,
        "upload_time": "2022-02-08T13:38:30",
        "upload_time_iso_8601": "2022-02-08T13:38:30.700532Z",
        "url": "https://files.pythonhosted.org/packages/7d/d4/545e24898e9b1239e531a990f0cb594274bb4f74296d7566b6e7770529b0/m3u-ipytv-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b179b4287eb3cb2130a9b2b53a57267ef3d24fdee260ca65de6aed60ece3f049",
          "md5": "03715b5207370852bc6ba3708b012029",
          "sha256": "a5854216f960df4325cbcc100a22a45f5cd4b3000c37b8f6e1b3e924fcc5ab7e"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "03715b5207370852bc6ba3708b012029",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 12789,
        "upload_time": "2022-02-26T16:30:17",
        "upload_time_iso_8601": "2022-02-26T16:30:17.939081Z",
        "url": "https://files.pythonhosted.org/packages/b1/79/b4287eb3cb2130a9b2b53a57267ef3d24fdee260ca65de6aed60ece3f049/m3u-ipytv-0.0.12.tar.gz",
        "yanked": true,
        "yanked_reason": "This version can't handle attributes on the #EXTM3U row"
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13265e0e0e518943504f95d7c0f35e050cdd4c65ac385474948499573066f753",
          "md5": "177586246f450377096fccc4370afe01",
          "sha256": "cbd1c3faf270163c8aa268ae3a5501cf29a2287511d81658010733c8551e7ab2"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "177586246f450377096fccc4370afe01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 13050,
        "upload_time": "2022-02-26T18:06:32",
        "upload_time_iso_8601": "2022-02-26T18:06:32.473032Z",
        "url": "https://files.pythonhosted.org/packages/13/26/5e0e0e518943504f95d7c0f35e050cdd4c65ac385474948499573066f753/m3u-ipytv-0.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "844f3561a2ea66abd937bfbb71419a1edd3c9ac3db2fd7d5a002d9ce44d043fd",
          "md5": "72510cb654aa2571a79256ebcbb53950",
          "sha256": "60ec0bcf35fd393bd29942d9fe3c0c38469d1f6b4c58735af136fd229decf796"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "72510cb654aa2571a79256ebcbb53950",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 13105,
        "upload_time": "2022-02-27T14:40:32",
        "upload_time_iso_8601": "2022-02-27T14:40:32.376199Z",
        "url": "https://files.pythonhosted.org/packages/84/4f/3561a2ea66abd937bfbb71419a1edd3c9ac3db2fd7d5a002d9ce44d043fd/m3u-ipytv-0.0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6fcfe2b7157ab3a9a34512d51bb38ad3a99a8dc01a988d880a11562e96ae3617",
          "md5": "6eb9dbd7d392899de6b40227f62f9822",
          "sha256": "38eb93a9f65c83eae482d4960c3e47a563d7934f2f2cc8a666916cc3514f1d72"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6eb9dbd7d392899de6b40227f62f9822",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 10905,
        "upload_time": "2021-06-26T20:05:17",
        "upload_time_iso_8601": "2021-06-26T20:05:17.281165Z",
        "url": "https://files.pythonhosted.org/packages/6f/cf/e2b7157ab3a9a34512d51bb38ad3a99a8dc01a988d880a11562e96ae3617/m3u-ipytv-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30aedcbc0fb5c72e0906f73a86748791505ab90b25cab66cb20144a74e6ede86",
          "md5": "5ebdd3e355c360a16e3e38619a499c27",
          "sha256": "694273a9eca72abbd1a121dba799c87fd85ae6385e4ff60f4d66804abb7262f6"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5ebdd3e355c360a16e3e38619a499c27",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 10993,
        "upload_time": "2021-07-12T16:33:23",
        "upload_time_iso_8601": "2021-07-12T16:33:23.119772Z",
        "url": "https://files.pythonhosted.org/packages/30/ae/dcbc0fb5c72e0906f73a86748791505ab90b25cab66cb20144a74e6ede86/m3u-ipytv-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23b9b100aefd2018eaef2e2ee8b1befb2e82b34d003c35e9e251935d24762469",
          "md5": "e8066e0c9e0a13bfeeb1129cf3ec5087",
          "sha256": "7f455fc00aca366890cf953b10be2dfb33d28a566341078ee860ccaa81d989f0"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e8066e0c9e0a13bfeeb1129cf3ec5087",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 11149,
        "upload_time": "2021-08-31T20:11:48",
        "upload_time_iso_8601": "2021-08-31T20:11:48.506398Z",
        "url": "https://files.pythonhosted.org/packages/23/b9/b100aefd2018eaef2e2ee8b1befb2e82b34d003c35e9e251935d24762469/m3u-ipytv-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38364bab648f3499b083558c8dce96eedf2f29982f779fe9286b3b34ee0a96db",
          "md5": "344fbf422656d4d30175903c0708a218",
          "sha256": "c6b1ca8cf6c8c17160d5457e36d3f4ff34b9cf60ed72a4e65bcc6fad5f6ccc9f"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "344fbf422656d4d30175903c0708a218",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 11203,
        "upload_time": "2021-09-01T15:22:02",
        "upload_time_iso_8601": "2021-09-01T15:22:02.091867Z",
        "url": "https://files.pythonhosted.org/packages/38/36/4bab648f3499b083558c8dce96eedf2f29982f779fe9286b3b34ee0a96db/m3u-ipytv-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04696d80a9c1f9d8aa419e027c9b45962e76ddabdd1555e65df2ce0bfcb5d06c",
          "md5": "f41a3b0a271e00081346cea2ee5fc032",
          "sha256": "1ae0731346c59b196c1b9bf1a3ef3d40ccef66e012ef6d2fc26accf6ba84349b"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "f41a3b0a271e00081346cea2ee5fc032",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 11079,
        "upload_time": "2021-09-01T18:02:32",
        "upload_time_iso_8601": "2021-09-01T18:02:32.250986Z",
        "url": "https://files.pythonhosted.org/packages/04/69/6d80a9c1f9d8aa419e027c9b45962e76ddabdd1555e65df2ce0bfcb5d06c/m3u-ipytv-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8749344d4ab3edda7f0d3ee344505cdbb2b09b97b8a7a2bd564908dc24d517c",
          "md5": "7c49cdfd3bcf613a8d8b1afce8b1d841",
          "sha256": "2fe6c37a5fbb098304ea2bfd86634122ac8b5b209f3cf4a7bcb07cb2311e856d"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "7c49cdfd3bcf613a8d8b1afce8b1d841",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 12911,
        "upload_time": "2021-09-02T13:14:02",
        "upload_time_iso_8601": "2021-09-02T13:14:02.866150Z",
        "url": "https://files.pythonhosted.org/packages/d8/74/9344d4ab3edda7f0d3ee344505cdbb2b09b97b8a7a2bd564908dc24d517c/m3u-ipytv-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "126fe29a73e3356ec34ce81a346f0a24de1c118624ee314e5f961ae970d11383",
          "md5": "805990bbbf89703aded441d679f06b91",
          "sha256": "a4faf612e0b4c176076d964053196681a93dc2d3b1c6a424b9f55b2d5471f7af"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "805990bbbf89703aded441d679f06b91",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 10828,
        "upload_time": "2021-09-02T20:55:40",
        "upload_time_iso_8601": "2021-09-02T20:55:40.992462Z",
        "url": "https://files.pythonhosted.org/packages/12/6f/e29a73e3356ec34ce81a346f0a24de1c118624ee314e5f961ae970d11383/m3u-ipytv-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44cf3da5853390e114f058323b552f669c0f273cf03bd68feb4d1b46810726ea",
          "md5": "d593998081d74afa8e796d52c43abc73",
          "sha256": "f49f583d20bf8fd3e743a08dcf213cca1896f82393fe44034bb34eeed23665fa"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "d593998081d74afa8e796d52c43abc73",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 11540,
        "upload_time": "2021-09-27T16:11:21",
        "upload_time_iso_8601": "2021-09-27T16:11:21.711465Z",
        "url": "https://files.pythonhosted.org/packages/44/cf/3da5853390e114f058323b552f669c0f273cf03bd68feb4d1b46810726ea/m3u-ipytv-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97852e2b5932030986daa93e1337dfee435543642ebe3a7c5338fb9f22205fe4",
          "md5": "8a2a9c7046ba663e5f504c9acf1a3c2f",
          "sha256": "9ba3b2d1a90cf75f1dd570b19edf6f313032bef89e1b0f4322fb45a350c61a65"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8a2a9c7046ba663e5f504c9acf1a3c2f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 16132,
        "upload_time": "2022-03-14T20:51:51",
        "upload_time_iso_8601": "2022-03-14T20:51:51.276033Z",
        "url": "https://files.pythonhosted.org/packages/97/85/2e2b5932030986daa93e1337dfee435543642ebe3a7c5338fb9f22205fe4/m3u-ipytv-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94dda1e42db7d3be5af1a97cf41e52bf452c3a1265ed40d74b212c01d5acd870",
          "md5": "cdf07f40413903921fd16a2838c5bfb3",
          "sha256": "e26a0c1384c9b33fbdadd10b073f40d350bd97ec38af35933f2ecac2c5220ed5"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cdf07f40413903921fd16a2838c5bfb3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 16876,
        "upload_time": "2022-03-20T14:35:55",
        "upload_time_iso_8601": "2022-03-20T14:35:55.704155Z",
        "url": "https://files.pythonhosted.org/packages/94/dd/a1e42db7d3be5af1a97cf41e52bf452c3a1265ed40d74b212c01d5acd870/m3u-ipytv-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc15e239f64811f999d2cdb06823b3be1735880d33686906cedda79f547503e3",
          "md5": "7cd25c7a5c0ddb4e2aa3b1a1c9982f90",
          "sha256": "6f82cc0397e7fc8212325bf46d19d25b8d6fcf37887cbb05519987f05d7636cd"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7cd25c7a5c0ddb4e2aa3b1a1c9982f90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 18490,
        "upload_time": "2022-03-22T17:43:20",
        "upload_time_iso_8601": "2022-03-22T17:43:20.725884Z",
        "url": "https://files.pythonhosted.org/packages/cc/15/e239f64811f999d2cdb06823b3be1735880d33686906cedda79f547503e3/m3u-ipytv-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08d7d712b504fef05eaa38c6b23c083ade5f0d2bd7b409a25de68c921ea21913",
          "md5": "b637052cbab977431613a05f3d50f680",
          "sha256": "d103a017414c0ee588f642d3a0f8ba47e894be34fcc980613112a9bf3bee65c8"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b637052cbab977431613a05f3d50f680",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 19137,
        "upload_time": "2022-05-13T13:35:35",
        "upload_time_iso_8601": "2022-05-13T13:35:35.116641Z",
        "url": "https://files.pythonhosted.org/packages/08/d7/d712b504fef05eaa38c6b23c083ade5f0d2bd7b409a25de68c921ea21913/m3u-ipytv-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3f08fc0cb1a0b0a1a731c4d45229b6a7b6ca5931a6cf76be1beb41f46110d6c",
          "md5": "8892ee43e2bd97cf1bf9ff1727018f94",
          "sha256": "2ecd1f8791ee084fc0eb219ff2c195af5c1aaaf1a15cf1959acc98fa7dfeddad"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8892ee43e2bd97cf1bf9ff1727018f94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 20223,
        "upload_time": "2022-10-15T19:47:51",
        "upload_time_iso_8601": "2022-10-15T19:47:51.737897Z",
        "url": "https://files.pythonhosted.org/packages/b3/f0/8fc0cb1a0b0a1a731c4d45229b6a7b6ca5931a6cf76be1beb41f46110d6c/m3u-ipytv-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ebdf6f9f42c4d4661b825abc12927ab6fdd6c05c7773e77c14d658c5ecda550d",
          "md5": "1fa9d94363e46101921ef72e2a5d2646",
          "sha256": "783bb4485fcce60c86adf16c74bd3310f49d82d214240d415a5400ed9a31b9c8"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1fa9d94363e46101921ef72e2a5d2646",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 20301,
        "upload_time": "2022-11-18T21:34:35",
        "upload_time_iso_8601": "2022-11-18T21:34:35.933667Z",
        "url": "https://files.pythonhosted.org/packages/eb/df/6f9f42c4d4661b825abc12927ab6fdd6c05c7773e77c14d658c5ecda550d/m3u-ipytv-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14acaaf09f7d0d9dd7986c0d82b8f4c1c3b25ace7aa5556c53184c86492603d6",
          "md5": "e60d1a82af8009e0e6abd0d5fb5c5f53",
          "sha256": "c833532cea46941cba6a9c773c5e4dd3d25611cfc462b39ffc8844eaa26d6bf1"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e60d1a82af8009e0e6abd0d5fb5c5f53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 20506,
        "upload_time": "2022-11-20T20:23:55",
        "upload_time_iso_8601": "2022-11-20T20:23:55.940649Z",
        "url": "https://files.pythonhosted.org/packages/14/ac/aaf09f7d0d9dd7986c0d82b8f4c1c3b25ace7aa5556c53184c86492603d6/m3u-ipytv-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91b23bce9a394a7d998edca0c240b2c8631ccc339b63a9f74037fc36c4ee802b",
          "md5": "dc00d01dc890030f711bbf11b3fdc584",
          "sha256": "97fdb566e9727b8f2b01b7c78cf8acfa6eab8e9cf87d8c132d40e3416b5e475d"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "dc00d01dc890030f711bbf11b3fdc584",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 20529,
        "upload_time": "2022-11-21T15:41:51",
        "upload_time_iso_8601": "2022-11-21T15:41:51.984151Z",
        "url": "https://files.pythonhosted.org/packages/91/b2/3bce9a394a7d998edca0c240b2c8631ccc339b63a9f74037fc36c4ee802b/m3u-ipytv-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78b61eefe1d18e8c67be2a0bb1986ac7e6174f52116134f4415c41d39ea3c72d",
          "md5": "65f06789759dfdbbe3e6763c54fd7311",
          "sha256": "12d27ccfbf3079febad66defaba43ffb0fe841c69dced18537947654545d2cb0"
        },
        "downloads": -1,
        "filename": "m3u-ipytv-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "65f06789759dfdbbe3e6763c54fd7311",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 20725,
        "upload_time": "2022-11-23T20:20:45",
        "upload_time_iso_8601": "2022-11-23T20:20:45.649009Z",
        "url": "https://files.pythonhosted.org/packages/78/b6/1eefe1d18e8c67be2a0bb1986ac7e6174f52116134f4415c41d39ea3c72d/m3u-ipytv-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "78b61eefe1d18e8c67be2a0bb1986ac7e6174f52116134f4415c41d39ea3c72d",
        "md5": "65f06789759dfdbbe3e6763c54fd7311",
        "sha256": "12d27ccfbf3079febad66defaba43ffb0fe841c69dced18537947654545d2cb0"
      },
      "downloads": -1,
      "filename": "m3u-ipytv-0.2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "65f06789759dfdbbe3e6763c54fd7311",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <4",
      "size": 20725,
      "upload_time": "2022-11-23T20:20:45",
      "upload_time_iso_8601": "2022-11-23T20:20:45.649009Z",
      "url": "https://files.pythonhosted.org/packages/78/b6/1eefe1d18e8c67be2a0bb1986ac7e6174f52116134f4415c41d39ea3c72d/m3u-ipytv-0.2.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}