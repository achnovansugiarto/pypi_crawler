{
  "info": {
    "author": "Tobias Raabe",
    "author_email": "raabe@posteo.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "# pytask-julia\n\n[![PyPI](https://img.shields.io/pypi/v/pytask-julia?color=blue)](https://pypi.org/project/pytask-julia)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pytask-julia)](https://pypi.org/project/pytask-julia)\n[![image](https://img.shields.io/conda/vn/conda-forge/pytask-julia.svg)](https://anaconda.org/conda-forge/pytask-julia)\n[![image](https://img.shields.io/conda/pn/conda-forge/pytask-julia.svg)](https://anaconda.org/conda-forge/pytask-julia)\n[![PyPI - License](https://img.shields.io/pypi/l/pytask-julia)](https://pypi.org/project/pytask-julia)\n[![image](https://img.shields.io/github/actions/workflow/status/pytask-dev/pytask-julia/main.yml?branch=main)](https://github.com/pytask-dev/pytask-julia/actions?query=branch%3Amain)\n[![image](https://codecov.io/gh/pytask-dev/pytask-julia/branch/main/graph/badge.svg)](https://codecov.io/gh/pytask-dev/pytask-julia)\n[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/pytask-dev/pytask-julia/main.svg)](https://results.pre-commit.ci/latest/github/pytask-dev/pytask-julia/main)\n[![image](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\n______________________________________________________________________\n\nRun Julia scripts with pytask.\n\n## Installation\n\npytask-julia is available on [PyPI](https://pypi.org/project/pytask-julia) and\n[Anaconda.org](https://anaconda.org/conda-forge/pytask-julia). Install it with\n\n```console\n$ pip install pytask-julia\n\n# or\n\n$ conda install -c conda-forge pytask-julia\n```\n\nYou also need to have Julia installed and `julia` on your command line. Test it by\ntyping the following on the command line\n\n```console\n$ julia -h\n```\n\nIf an error is shown instead of a help page, you can install Julia on Unix systems with\n\n```console\n$ conda install -c conda-forge julia\n```\n\nor choose one of the installers on this [page](https://julialang.org/downloads/).\n\n## Usage\n\nTo create a task which runs a Julia script, define a task function with the\n`@pytask.mark.julia` decorator. The `script` keyword provides a path relative to the\ntask module to the Julia script.\n\n```python\nimport pytask\n\n\n@pytask.mark.julia(script=\"script.jl\")\n@pytask.mark.produces(\"out.csv\")\ndef task_run_jl_script():\n    pass\n```\n\nIf you are wondering why the function body is empty, know that pytask-julia replaces the\nbody with a predefined internal function. See the section on implementation details for\nmore information.\n\n### Dependencies and Products\n\nDependencies and products can be added as with a normal pytask task using the\n`@pytask.mark.depends_on` and `@pytask.mark.produces` decorators. which is explained in\nthis\n[tutorial](https://pytask-dev.readthedocs.io/en/stable/tutorials/defining_dependencies_products.html).\n\n### Accessing dependencies and products in the script\n\nTo access the paths of dependencies and products in the script, pytask-julia stores the\ninformation by default in a `.json` file. The path to this file is passed as a\npositional argument to the script. Inside the script, you can read the information.\n\n```julia\nimport JSON\n\npath_to_json = ARGS[1]  # Contains the path to the .json file.\n\nconfig = JSON.parse(read(path_to_json, String))  # A dictionary.\n\nconfig[\"produces\"]  # Is the path to the output file \"../out.csv\".\n```\n\nThe `.json` file is stored in the same folder as the task in a `.pytask` directory.\n\nTo parse the JSON file, you need to install\n[JSON.jl](https://github.com/JuliaIO/JSON.jl).\n\nYou can also pass any other information to your script by using the `@pytask.mark.task`\ndecorator.\n\n```python\n@pytask.mark.task(kwargs={\"number\": 1})\n@pytask.mark.julia(script=\"script.jl\")\n@pytask.mark.produces(\"out.csv\")\ndef task_run_jl_script():\n    pass\n```\n\nand inside the script use\n\n```julia\nconfig[\"number\"]  # Is 1.\n```\n\n### Debugging\n\nIn case a task throws an error, you might want to execute the script independently from\npytask. After a failed execution, you see the command which executed the Julia script in\nthe report of the task. It looks roughly like this\n\n```console\n$ julia <options> -- script.jl <path-to>/.pytask/task_py_task_example.json\n```\n\n### Managing Julia environments\n\nJulia has support for environments to execute your tasks via `Pkg.jl` which is explained\n[here](https://pkgdocs.julialang.org/v1/environments/).\n\npytask-julia allows you define a default environment via your\n[pytask configuration file](https://pytask-dev.readthedocs.io/en/stable/tutorials/configuration.html).\n\nUse the `julia_project` key to define a path to your configuration file to point to your\nenvironment.\n\nProbably your environment files `Manifest.toml` and `Project.toml` reside at the root of\nyour project folder as well as your pytask configuration file. Then, the content will\nlook like this.\n\n```toml\n[tool.pytask.ini_options]\njulia_project = \".\"\n```\n\nYou can also define environments for each task which will overwrite any other default\nwith the `project` keyword argument. Pass a path to the task module.\n\n```python\n@pytask.mark.julia(script=\"script.jl\", project=\".\")\n@pytask.mark.produces(\"out.csv\")\ndef task_run_jl_script():\n    pass\n```\n\n### Command Line Options\n\nCommand line options can be pass via the `options` keyword argument.\n\n```python\n@pytask.mark.julia(script=\"script.jl\", options=[\"--threads\", \"2\"])\n@pytask.mark.produces(\"out.csv\")\ndef task_run_jl_script():\n    pass\n```\n\nThis example will execute the script using to threads.\n\n### Repeating tasks with different scripts or inputs\n\nYou can also repeat the execution of tasks, meaning executing multiple Julia scripts or\npassing different command line arguments to the same Julia script.\n\nThe following task executes two Julia scripts, `script_1.jl` and `script_2.jl`, which\nproduce different outputs.\n\n```python\nfor i in range(2):\n\n    @pytask.mark.task\n    @pytask.mark.julia(script=f\"script_{i}.jl\")\n    @pytask.mark.produces(f\"out_{i}.csv\")\n    def task_execute_julia_script():\n        pass\n```\n\nIf you want to pass different inputs to the same Julia script, pass these arguments with\nthe `kwargs` keyword of the `@pytask.mark.task` decorator.\n\n```python\nfor i in range(2):\n\n    @pytask.mark.task(kwargs={\"i\": i})\n    @pytask.mark.julia(script=\"script.jl\")\n    @pytask.mark.produces(f\"output_{i}.csv\")\n    def task_execute_julia_script():\n        pass\n```\n\nand inside the task access the argument `i` with\n\n```julia\nimport JSON\n\npath_to_json = ARGS[1]  # Contains the path to the .json file.\n\nconfig = JSON.parse(read(path_to_json, String))  # A dictionary.\n\nconfig[\"produces\"]  # Is the path to the output file \"../output_{i}.csv\".\n\nconfig[\"i\"]  # Is the number.\n```\n\n### Serializers\n\nYou can also serialize your data with any other tool you like. By default, pytask-julia\nalso supports YAML (if PyYaml is installed).\n\nUse the `serializer` keyword arguments of the `@pytask.mark.julia` decorator with\n\n```python\n@pytask.mark.julia(script=\"script.jl\", serializer=\"yaml\")\ndef task_example():\n    ...\n```\n\nAnd in your Julia script use\n\n```julia\nimport YAML\nconfig = YAML.load_file(ARGS[1])\n```\n\nNote that the `YAML` package needs to be installed.\n\nIf you need a custom serializer, you can also provide any callable to `serializer` which\ntransforms data to a string. Use `suffix` to set the correct file ending.\n\nHere is a replication of the JSON example.\n\n```python\nimport json\n\n\n@pytask.mark.julia(script=\"script.jl\", serializer=json.dumps, suffix=\".json\")\ndef task_example():\n    ...\n```\n\n### Configuration\n\nYou can influence the default behavior of pytask-julia with some configuration values.\nPlace them into a `pyproject.toml` file.\n\n**`julia_serializer`**\n\nUse this option to change the default serializer.\n\n```toml\n[tool.pytask.ini_options]\njulia_serializer = \"json\"\n```\n\n**`julia_suffix`**\n\nUse this option to set the default suffix of the file which contains serialized paths to\ndependencies and products and more.\n\n```toml\n[tool.pytask.ini_options]\njulia_suffix = \".json\"\n```\n\n**`julia_options`**\n\nUse this option to set default options for each task which are separated by whitespace.\n\n```toml\n[tool.pytask.ini_options]\njulia_options = [\"--threads\", 2]\n```\n\n**`julia_project`**\n\nUse this option to set a default environment for each task. If your environment with\n`Manifest.toml` and `Project.toml` is defined in the same directory as the configuration\nfile `pyproject.toml`, just use a dot.\n\n```toml\n[tool.pytask.ini_options]\njulia_project = \".\"\n```\n\nIf the environment files were in a folder next to the configuration file called\n`environment` use\n\n```toml\n[tool.pytask.ini_options]\njulia_project = \"environment\"\n```\n\n## Changes\n\nConsult the [release notes](CHANGES.md) to find out about what is new.\n\n## Development\n\nAfter setting up the environment, enter\n\n```console\n$ julia\n$ ]\n$ pkg> activate .\n$ pkg> instantiate\n```\n\nto set up the Julia environment.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pytask-dev/pytask-julia",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytask-julia",
    "package_url": "https://pypi.org/project/pytask-julia/",
    "platform": "any",
    "project_url": "https://pypi.org/project/pytask-julia/",
    "project_urls": {
      "Changelog": "https://github.com/pytask-dev/pytask-julia/blob/main/CHANGES.md",
      "Documentation": "https://github.com/pytask-dev/pytask-julia",
      "Github": "https://github.com/pytask-dev/pytask-julia",
      "Homepage": "https://github.com/pytask-dev/pytask-julia",
      "Tracker": "https://github.com/pytask-dev/pytask-julia/issues"
    },
    "release_url": "https://pypi.org/project/pytask-julia/0.3.0/",
    "requires_dist": [
      "pybaum (>=0.1.1)",
      "pytask (>=0.3)"
    ],
    "requires_python": ">=3.7",
    "summary": "A Pytask plugin for Julia",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16539370,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec57c87af6f9b98422ca1bf52e3a0f9caf28d4ab0dedb832c23c2092504e8514",
          "md5": "ba99c8a5d9257166b9eadc14c7fc9f11",
          "sha256": "fa9285fd8f4db53dd44f4f4e12b2362d9400a17d0059df9215482ece1dd8dcfe"
        },
        "downloads": -1,
        "filename": "pytask_julia-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba99c8a5d9257166b9eadc14c7fc9f11",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8902,
        "upload_time": "2022-01-19T18:21:21",
        "upload_time_iso_8601": "2022-01-19T18:21:21.115888Z",
        "url": "https://files.pythonhosted.org/packages/ec/57/c87af6f9b98422ca1bf52e3a0f9caf28d4ab0dedb832c23c2092504e8514/pytask_julia-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec58d1c31c3058a142c9ae7ef5bcbb27e21dae032e35a68579017d6b87fec7a4",
          "md5": "4d541065c4b867aae8337688845718ee",
          "sha256": "7d0ef9da0c0a191758d318ef0f9b7d7772b298713d84c844d9bf6af716eef618"
        },
        "downloads": -1,
        "filename": "pytask_julia-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4d541065c4b867aae8337688845718ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 12293,
        "upload_time": "2022-01-19T18:21:23",
        "upload_time_iso_8601": "2022-01-19T18:21:23.761565Z",
        "url": "https://files.pythonhosted.org/packages/ec/58/d1c31c3058a142c9ae7ef5bcbb27e21dae032e35a68579017d6b87fec7a4/pytask_julia-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a859a15adbacb626ccc66a197528d58e0e9aa8f7f819c63ef996969fc0eda538",
          "md5": "712ee0f1f21e809d4c04983b1a6c1a90",
          "sha256": "e46b775134e40c050eabe69402a273f934d0d67fb94c4aea5bffae691ee2fd5b"
        },
        "downloads": -1,
        "filename": "pytask_julia-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "712ee0f1f21e809d4c04983b1a6c1a90",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12533,
        "upload_time": "2022-04-16T12:47:08",
        "upload_time_iso_8601": "2022-04-16T12:47:08.426933Z",
        "url": "https://files.pythonhosted.org/packages/a8/59/a15adbacb626ccc66a197528d58e0e9aa8f7f819c63ef996969fc0eda538/pytask_julia-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c8d91e9502d2ed25f6639a3e6e9e23e59a23bbf692a1bb10d24b924e3e76c97",
          "md5": "526b46b788fa943c09b8c04018969de4",
          "sha256": "c92da97bdc86c14be0e77679015cb72ea4a6abbd0417b553f1e762dce67aa694"
        },
        "downloads": -1,
        "filename": "pytask_julia-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "526b46b788fa943c09b8c04018969de4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15465,
        "upload_time": "2022-04-16T12:47:10",
        "upload_time_iso_8601": "2022-04-16T12:47:10.017599Z",
        "url": "https://files.pythonhosted.org/packages/8c/8d/91e9502d2ed25f6639a3e6e9e23e59a23bbf692a1bb10d24b924e3e76c97/pytask_julia-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d165a8fa565bb143c71fdf2026ab3a7292538800c648f2405f2515a9180ad7b9",
          "md5": "ff00454b066cb2cc235c23ea80fe4b55",
          "sha256": "40a8bad480bc6be34515f59820e3a607b3468f460a1673b9b84fc8cfd066b30f"
        },
        "downloads": -1,
        "filename": "pytask_julia-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff00454b066cb2cc235c23ea80fe4b55",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12525,
        "upload_time": "2022-04-16T18:03:14",
        "upload_time_iso_8601": "2022-04-16T18:03:14.788619Z",
        "url": "https://files.pythonhosted.org/packages/d1/65/a8fa565bb143c71fdf2026ab3a7292538800c648f2405f2515a9180ad7b9/pytask_julia-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1e195bb28ae8bc5e9d9d15118ed544b6a7972909727416973e075809bd83f87",
          "md5": "73804dc3cb497d3db1b915d935e43d6b",
          "sha256": "29df68c27e9a11ff4f27064cdced0f088c3ec3f29b5a3a4f5d422dbf02cec817"
        },
        "downloads": -1,
        "filename": "pytask_julia-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "73804dc3cb497d3db1b915d935e43d6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15599,
        "upload_time": "2022-04-16T18:03:16",
        "upload_time_iso_8601": "2022-04-16T18:03:16.868454Z",
        "url": "https://files.pythonhosted.org/packages/f1/e1/95bb28ae8bc5e9d9d15118ed544b6a7972909727416973e075809bd83f87/pytask_julia-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d6a24bdb704dd0cdf463ff1ac4ed202e0b25c4779e62d380dd4d34ad1c98fae",
          "md5": "bf24078971b88c9ca45774f991bd9ad4",
          "sha256": "2f03fd0ab09e21d6249b8b6ddc075e797093514b6fb7613a60d75be86b9bf7ae"
        },
        "downloads": -1,
        "filename": "pytask_julia-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf24078971b88c9ca45774f991bd9ad4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12517,
        "upload_time": "2023-01-23T23:10:57",
        "upload_time_iso_8601": "2023-01-23T23:10:57.310043Z",
        "url": "https://files.pythonhosted.org/packages/3d/6a/24bdb704dd0cdf463ff1ac4ed202e0b25c4779e62d380dd4d34ad1c98fae/pytask_julia-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f277c24f40cec185af10f49189f37332bc8fdc264505196a176443d5cb4cafd",
          "md5": "67b0afcb62ea37ba1d7d49e7d164133a",
          "sha256": "bff9a5f10699df2b45618a1fa8a323c6c78f63dc3c4e8dfb8379e908f7227a7a"
        },
        "downloads": -1,
        "filename": "pytask_julia-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "67b0afcb62ea37ba1d7d49e7d164133a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15898,
        "upload_time": "2023-01-23T23:10:58",
        "upload_time_iso_8601": "2023-01-23T23:10:58.963560Z",
        "url": "https://files.pythonhosted.org/packages/7f/27/7c24f40cec185af10f49189f37332bc8fdc264505196a176443d5cb4cafd/pytask_julia-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3d6a24bdb704dd0cdf463ff1ac4ed202e0b25c4779e62d380dd4d34ad1c98fae",
        "md5": "bf24078971b88c9ca45774f991bd9ad4",
        "sha256": "2f03fd0ab09e21d6249b8b6ddc075e797093514b6fb7613a60d75be86b9bf7ae"
      },
      "downloads": -1,
      "filename": "pytask_julia-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bf24078971b88c9ca45774f991bd9ad4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 12517,
      "upload_time": "2023-01-23T23:10:57",
      "upload_time_iso_8601": "2023-01-23T23:10:57.310043Z",
      "url": "https://files.pythonhosted.org/packages/3d/6a/24bdb704dd0cdf463ff1ac4ed202e0b25c4779e62d380dd4d34ad1c98fae/pytask_julia-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7f277c24f40cec185af10f49189f37332bc8fdc264505196a176443d5cb4cafd",
        "md5": "67b0afcb62ea37ba1d7d49e7d164133a",
        "sha256": "bff9a5f10699df2b45618a1fa8a323c6c78f63dc3c4e8dfb8379e908f7227a7a"
      },
      "downloads": -1,
      "filename": "pytask_julia-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "67b0afcb62ea37ba1d7d49e7d164133a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 15898,
      "upload_time": "2023-01-23T23:10:58",
      "upload_time_iso_8601": "2023-01-23T23:10:58.963560Z",
      "url": "https://files.pythonhosted.org/packages/7f/27/7c24f40cec185af10f49189f37332bc8fdc264505196a176443d5cb4cafd/pytask_julia-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}