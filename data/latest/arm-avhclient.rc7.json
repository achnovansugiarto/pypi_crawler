{
  "info": {
    "author": "Samuel Pelegrinello Caipers, Jonatan Antoni",
    "author_email": "Samuel.PelegrinelloCaipers@arm.com, Jonatan.Antoni@arm.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "|build-badge| |test-badge| |cov-badge| |python-badge|\n|wheel-badge| |pypi-badge| |license-badge|\n\n.. |build-badge| image:: https://img.shields.io/github/workflow/status/ARM-software/avhclient/Build/main?style=flat\n    :target: https://github.com/ARM-software/avhclient/actions/workflows/build.yml?query=event%3Apush+branch%3Amain+is%3Acompleted\n    :alt: GitHub main-branch Build Workflow Status\n.. |test-badge| image:: https://img.shields.io/testspace/tests/ARM-software/ARM-software:avhclient/main?compact_message\n    :target: https://ARM-software.testspace.com/spaces/156681\n    :alt: Unit tests results\n.. |cov-badge| image:: https://img.shields.io/codecov/c/github/ARM-software/avhclient?style=flat\n    :target: https://app.codecov.io/gh/ARM-software/avhclient/branch/main\n    :alt: Codecov coverage report\n.. |python-badge| image:: https://img.shields.io/pypi/pyversions/arm-avhclient?style=flat\n    :target: https://pypi.org/project/arm-avhclient/\n    :alt: PyPI - Python Version\n.. |wheel-badge| image:: https://img.shields.io/pypi/wheel/arm-avhclient?style=flat\n    :target: https://pypi.org/project/arm-avhclient/\n    :alt: PyPI - Wheel\n.. |pypi-badge| image:: https://img.shields.io/pypi/v/arm-avhclient?style=flat\n    :target: https://pypi.org/project/arm-avhclient/\n    :alt: PyPI\n.. |license-badge| image:: https://img.shields.io/pypi/l/arm-avhclient?style=flat\n    :target: https://pypi.org/project/arm-avhclient/\n    :alt: PyPI - License\n\nArm Virtual Hardware Client (avhclient)\n=======================================\n\nThe **Arm Virtual Hardware Client** (avhclient) is a python module that provides an interface for deploying and using  `Arm Virtual Hardware (AVH) <https://www.arm.com/products/development-tools/simulation/virtual-hardware>`_.\n\nIt enables uniform implementation of CI operations in various environments with reference examples provided for the following use cases:\n\n* Jenkins CI pipelines\n* GitHub-Actions workflows\n* Local use with AVH targets\n\nOther environments can be supported using demonstrated concepts as well.\n\n**Example projects using AVH Client**\n\n* `AVH-GetStarted <https://github.com/ARM-software/AVH-GetStarted>`_\n* `CMSIS-RTOS2-Validation <https://github.com/ARM-software/CMSIS-RTOS2_Validation>`_\n* `TensorFlow Lite for Microcontrollers <https://github.com/tensorflow/tflite-micro>`_\n\n****\n\nInstallation\n------------\n\nLocal installation\n##################\n\nInstalling (development snapshot) directly from GitHub `main` branch::\n\n    pip install git+https://github.com/ARM-software/avhclient.git@main\n    \nDocker container\n################\n\nInstead of installing Python and the AVH Client module into the local environment one\ncan use pre-built Docker images::\n\n   docker pull ghcr.io/arm-software/avhclient\n\n****\n\nBackend Setup\n-------------\navhclient can control different backends with Arm Virtual Hardware. Following options are currently available:\n\n* ``aws`` (default) - interacts with AVH AMI available through `AWS Marketplace <https://arm-software.github.io/AVH/main/infrastructure/html/index.html#AWS>`_\n* ``local`` - operates with AVH Targets installed locally.\n\nThe backend can be specified with ``-b`` option preceding the actual avhclient command.\n\nDepending on the backend certain environment setup is expected.\n\nAWS Backend Setup\n#################\n\navhclient accesses AWS services via `Boto3 AWS SDK <https://github.com/boto/boto3>`_ and for that requires a set of parameters to be available in the environment.\n\nAWS Credentials\n***************\nIt is necessary to expose avhclient with the AWS credentials for your account.\nYou can either `export` your AWS credentials::\n\n    export AWS_ACCESS_KEY_ID=\"YOUR_AWS_ACCESS_KEY_ID\"\n    export AWS_SECRET_ACCESS_KEY=\"YOUR_AWS_SECRET_ACCESS_KEY\"\n    export AWS_SESSION_TOKEN=\"YOUR_AWS_SESSION_TOKEN\"\n\nor create a AWS credential file on `~/.aws/credentials (Linux & Mac)` or `%USERPROFILE%\\.aws\\credentials (Windows)`::\n\n    [default]\n    aws_access_key_id=YOUR_AWS_ACCESS_KEY_ID\n    aws_secret_access_key=YOUR_AWS_SECRET_ACCESS_KEY\n    aws_session_token=YOUR_AWS_SESSION_TOKEN\n\nMore info `AWS CLI config and credentials <https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html>`_\n\nAWS Account info\n****************\nIn order for avhclient to create or access an AVH instance following parameters need to be defined in the execution environment of avhclient:\n\n* When creating and running a **new AVH instance**:\n    Mandatory info::\n\n        export AWS_IAM_PROFILE='YOUR_IAM_PROFILE'\n        export AWS_SECURITY_GROUP_ID='YOUR_AWS_SECURITY_GROUP_ID'\n        export AWS_SUBNET_ID='YOUR_SECURITY_GROUP_ID'\n        export AWS_S3_BUCKET_NAME='YOUR_B3_BUCKET_NAME'\n\n    Optional info (examples)::\n\n        export AWS_AMI_ID=DESIRED_AVH_AMI_ID\n        export AWS_AMI_VERSION=1.1.2\n        export AWS_EFS_DNS_NAME=fs-066cf410af2428e2f.efs.eu-west-1.amazonaws.com\n        export AWS_EFS_PACKS_DIR=packs\n        export AWS_KEEP_EC2_INSTANCES=true\n        export AWS_KEY_NAME=YOUR_AWS_KEYPAIR_NAME\n        export AWS_INSTANCE_TYPE=t2.micro\n        export AWS_INSTANCE_NAME=MY_AVH_INSTANCE\n\n    * If ``AWS_AMI_VERSION`` is not set, the avhclient will use the latest available version of AVH AMI.\n    * If ``AWS_EFS_DNS_NAME`` is set, the AVH Client will try to mount it during the cloud-init phase. The only scenario supported for now is using Packs.\n    * If ``AWS_EFS_PACKS_DIR`` is set, the mount path is relative to ``/home/ubuntu`` folder. Default folder is `packs` and if it exists locally will be then replaced by the EFS mount. Only used when ``AWS_EFS_DNS_NAME`` env is set.\n\n    AWS Cloudformation can be used to create the AWS resources required for AVH operation, as shown `in this template <https://github.com/ARM-software/AVH-GetStarted/tree/main/infrastructure/cloudformation>`_\n\n* When **reusing an AVH Instance**::\n\n    export AWS_INSTANCE_ID=YOUR_INSTANCE\n\nLocal Backend Setup\n###################\n\nOperation with a local backend requires no specific environment parameters, but assumes that necessary toolchain, AVH targets and utilities are installed locally on the machine and configured for execution in command line.\n\n****\n\nUsage\n-----\n\nGetting Help\n############\n\nTo get the brief descriptions of all commands and options available with avhclient execute::\n\n    avhclient -h\n\nYou can also use option ``-h`` with a specific command to get help for it. For example for ``execute`` command::\n\n    avhclient execute -h\n\nExecute command\n###############\n\n* Create a new AWS AVH instance and run AVH project\n    The ``execute`` command bundles all necessary steps to build your\n    avh project:\n\n    * ``prepare`` the backend.\n    * ``upload`` your files\n    * ``run`` your commands\n    * ``download`` the results\n    * ``cleanup`` the backend\n\n    Inform the path for the `avh.yml` file for your AVH project (example)::\n\n        avhclient -b aws execute --specfile AVH-GetStarted/basic/avh.yml\n\n* You can also run in AVH commands in your local computer by selecting `local` backend::\n\n        avhclient -b local execute --specfile AVH-GetStarted/basic/avh.yml\n\n* There are also backend specific info you can provide to the tool::\n\n        avhclient -b aws -h (get full list)\n        avhclient -b aws --instance-name MY_NEW_NAME execute --specfile AVH-GetStarted/basic/avh.yml (seeting a new AVH instance name)\n        avhclient -b aws --ami-version 1.1.0 --specfile AVH-GetStarted/basic/avh.yml (Create a new AVH instance from a v1.1.0 AVH AMI)\n        avhclient -b aws --ami-version >1.1.0 --specfile AVH-GetStarted/basic/avh.yml (Create a new AVH instance from a >v1.1.0 AVH AMI)\n\nExecute with Docker\n###################\n\nTo run avhclient in a Docker container one needs to create an environment file\n(``env.txt``) with the following content::\n\n    AWS_ACCESS_KEY_ID\n    AWS_SECRET_ACCESS_KEY\n    AWS_IAM_PROFILE\n    AWS_SECURITY_GROUP_ID\n    AWS_SUBNET_ID\n    AWS_S3_BUCKET_NAME\n    AWS_DEFAULT_REGION\n    AWS_AMI_ID\n    AWS_AMI_VERSION\n    AWS_KEEP_EC2_INSTANCES\n    AWS_KEY_NAME\n    AWS_INSTANCE_TYPE\n    AWS_INSTANCE_NAME\n\nThis environment file is used to forward the local environment variables into\nthe Docker container. Having this prepared one can run ``avhclient`` in a\ncontainer as follows::\n\n    docker run --rm -i --env-file ./env.txt \\\n        -v $(pwd):/workspace \\\n        -w /workspace \\\n        ghcr.io/arm-software/avhclient \\\n        avhclient [..]\n\nThe arguments are the same as above. If one requires more files from the Docker\nhost to be mapped into the container, this can be done like::\n\n    docker run --rm -i --env-file ./env.txt \\\n        -v $HOME/.ssh:/root/.ssh \\\n        -v $HOME/.aws:/root/.aws \\\n        -v $(pwd):/workspace \\\n        -w /workspace \\\n        ghcr.io/arm-software/avhclient \\\n        avhclient [..]\n\nThis exposes the local user's SSH and AWS config files to the container.\n\n****\n\nAVH YML file syntax\n-------------------\n\navhclient ``execute`` command requires a specfile in YML format that describes details of individual steps to be executed on AVH. The file syntax is explained below.\n\nA JSON schema for automatic checks and auto-completion is in `schema/avh.schema.json <schema/avh.schema.json>`_.\n\nFields\n######\n\n.. code-block::\n\n        Format of the specfile:\n                name: (optional) The name of the workload.\n                workdir: (optional) The local directory to use as the workspace, defaults to specfile's parent.\n                backend: (optional) Dictionary with backend specific parameters.\n                  aws: (optional) Dictionary with AWS backend specific parameters. (see backend help)\n                  local: (optional) Dictionary with local backend specific parameters. (see backend help)\n                upload: (optional) List of glob patterns of files (relative to workdir) to be sent to the AVH backend. (see glob format)\n                steps: (mandatory) List of steps to be executed on the AVH backend.\n                  - run: String written into a bash script and executed on the AVH backend inside the workspace directory.\n                download: (optional) List of glob patterns of files (relative to workdir) to be retrieved back from the AVH backend. (see glob format)\n            Glob format:\n                The list of glob patterns is evaluated in order.\n                Wildcard '*' matches all files but no directory except hidden files (starting with '.').\n                Wildcard '**' matches all files and directories except hidden files/directories (starting with '.').\n                Inclusive matches (no prefix) are added to the file list.\n                Exclusive (prefixed with '-:') matches are removed from current file list.\n\nExample\n#######\n\n.. code-block::\n\n    # yaml-language-server: $schema=https://raw.githubusercontent.com/ARM-software/avhclient/main/schema/avh.schema.json\n\n    name: \"AVH GetStarted Example\"\n    workdir: ./\n    backend:\n      aws:\n        ami-version: ~=1.1\n        instance-type: t2.micro\n    upload:\n      - RTE/**/*\n      - -:RTE/**/RTE_Components.h\n      - basic.debug.cprj\n      - build.py\n      - main.c\n      - requirements.txt\n      - retarget_stdio.c\n      - vht_config.txt\n      - README.md\n    steps:\n      - run: |\n          pip install -r requirements.txt\n          python build.py --verbose build run\n    download:\n      - RTE/**/RTE_Components.h\n      - Objects/basic.axf\n      - Objects/basic.axf.map\n      - basic-*.xunit\n      - basic-*.zip\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ARM-software/avhclient",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "arm-avhclient",
    "package_url": "https://pypi.org/project/arm-avhclient/",
    "platform": null,
    "project_url": "https://pypi.org/project/arm-avhclient/",
    "project_urls": {
      "Homepage": "https://github.com/ARM-software/avhclient"
    },
    "release_url": "https://pypi.org/project/arm-avhclient/0.1.10/",
    "requires_dist": [
      "boto3 (~=1.20)",
      "botocore (~=1.20)",
      "PyYAML (~=6.0)",
      "semantic-version (~=2.9)",
      "coverage (~=6.2) ; extra == 'dev'",
      "python-dateutil (~=2.8) ; extra == 'dev'",
      "pylint (~=2.14) ; extra == 'dev'",
      "restructuredtext-lint (~=1.3) ; extra == 'dev'",
      "setuptools (~=59.4) ; extra == 'dev'",
      "unittest-xml-reporting (~=3.0) ; extra == 'dev'"
    ],
    "requires_python": ">=3.8",
    "summary": "Arm Virtual Hardware Command Line Interface",
    "version": "0.1.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15241828,
  "releases": {
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "696e189d4d75cf0d1336f8b8709893868f7fc78423013bdc27d7e1d332ea01cf",
          "md5": "7bc6a0daf2eb15c29cf1796d2a524365",
          "sha256": "0f0f5eb41cec27bdfed82daa5080133b435db9b482960c67783124e45315294d"
        },
        "downloads": -1,
        "filename": "arm_avhclient-0.1.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7bc6a0daf2eb15c29cf1796d2a524365",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 27876,
        "upload_time": "2022-09-28T13:45:17",
        "upload_time_iso_8601": "2022-09-28T13:45:17.696969Z",
        "url": "https://files.pythonhosted.org/packages/69/6e/189d4d75cf0d1336f8b8709893868f7fc78423013bdc27d7e1d332ea01cf/arm_avhclient-0.1.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4353fcfc1a7c80a08f6df360710f0ff9c06d31294502e68f9889ead601f432e1",
          "md5": "e189008559d1e93ecc1a9e8c866c1d82",
          "sha256": "6217ec18e971025301c754dcb122e1e88f9b4265854c6a1d3acfd88e0f2022d3"
        },
        "downloads": -1,
        "filename": "arm-avhclient-0.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "e189008559d1e93ecc1a9e8c866c1d82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 28724,
        "upload_time": "2022-09-28T13:45:19",
        "upload_time_iso_8601": "2022-09-28T13:45:19.309848Z",
        "url": "https://files.pythonhosted.org/packages/43/53/fcfc1a7c80a08f6df360710f0ff9c06d31294502e68f9889ead601f432e1/arm-avhclient-0.1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed485cef8ccca39e0463683ec4b1b42394e8bc5b5bf10cc88161c1368c68e105",
          "md5": "5a0e5ef7338c6f3235e0f32040273630",
          "sha256": "ebc4b33766347e1770c09d78c758411a693ded2c4e768cef722ff2406ccf1e57"
        },
        "downloads": -1,
        "filename": "arm_avhclient-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a0e5ef7338c6f3235e0f32040273630",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 26813,
        "upload_time": "2022-05-13T15:29:42",
        "upload_time_iso_8601": "2022-05-13T15:29:42.163411Z",
        "url": "https://files.pythonhosted.org/packages/ed/48/5cef8ccca39e0463683ec4b1b42394e8bc5b5bf10cc88161c1368c68e105/arm_avhclient-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cc7f30a507fd33938622aee8e2c04ddb53284fa5c6255a909e084856628bb73",
          "md5": "e729457a9e66f67d318d76801941016e",
          "sha256": "fb5c51e73263963adc43a9d5d4215c8610b987e6171f5d1a0c7b954881e64cc3"
        },
        "downloads": -1,
        "filename": "arm-avhclient-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e729457a9e66f67d318d76801941016e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 27202,
        "upload_time": "2022-05-13T15:29:44",
        "upload_time_iso_8601": "2022-05-13T15:29:44.257166Z",
        "url": "https://files.pythonhosted.org/packages/8c/c7/f30a507fd33938622aee8e2c04ddb53284fa5c6255a909e084856628bb73/arm-avhclient-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4184ca497d13178166ee6864f44cc265fc60f01034752f3301de95540ece3869",
          "md5": "e619709135587584a352c2b035109804",
          "sha256": "d59a237d426bc367a42c87d4efdf9ab0ab4ca393396da44fbe53ec956aaa04dc"
        },
        "downloads": -1,
        "filename": "arm_avhclient-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e619709135587584a352c2b035109804",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 26888,
        "upload_time": "2022-05-16T14:20:46",
        "upload_time_iso_8601": "2022-05-16T14:20:46.831525Z",
        "url": "https://files.pythonhosted.org/packages/41/84/ca497d13178166ee6864f44cc265fc60f01034752f3301de95540ece3869/arm_avhclient-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09e09b5bffa0770889ea2889872dfdb0d64728bd1ff8a097fcc3e87be033a886",
          "md5": "1db3e83d0cd75aae73a1187b6d5bf364",
          "sha256": "52f46f328031fdbb8a370902eb86367d830ba9ea17be693d2959eacae857136f"
        },
        "downloads": -1,
        "filename": "arm-avhclient-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1db3e83d0cd75aae73a1187b6d5bf364",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 27271,
        "upload_time": "2022-05-16T14:20:48",
        "upload_time_iso_8601": "2022-05-16T14:20:48.648688Z",
        "url": "https://files.pythonhosted.org/packages/09/e0/9b5bffa0770889ea2889872dfdb0d64728bd1ff8a097fcc3e87be033a886/arm-avhclient-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff9b8be9121a36647a2e88c63daf528be250771b1020642f23b24e26f54f911a",
          "md5": "bbe095ae2c1ea4e6b2ac25c6b48319d3",
          "sha256": "de615e9f3a6da346454358f0ca6f0d6c2466968bf804eb27eef904a47b3da3ee"
        },
        "downloads": -1,
        "filename": "arm_avhclient-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bbe095ae2c1ea4e6b2ac25c6b48319d3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 26992,
        "upload_time": "2022-05-30T13:39:54",
        "upload_time_iso_8601": "2022-05-30T13:39:54.056409Z",
        "url": "https://files.pythonhosted.org/packages/ff/9b/8be9121a36647a2e88c63daf528be250771b1020642f23b24e26f54f911a/arm_avhclient-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc7d6240a8382e58c55bad201513e1e8be8397666e901dc5f8e1cc8c9081e4d5",
          "md5": "4903fb8b983ef0b393b9e54d47226415",
          "sha256": "1b0f57fcbdd9e4f398d80826fc323dcc0ed2c49e1e5e30abe03d61dfbb22aa74"
        },
        "downloads": -1,
        "filename": "arm-avhclient-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "4903fb8b983ef0b393b9e54d47226415",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 27426,
        "upload_time": "2022-05-30T13:39:55",
        "upload_time_iso_8601": "2022-05-30T13:39:55.753597Z",
        "url": "https://files.pythonhosted.org/packages/fc/7d/6240a8382e58c55bad201513e1e8be8397666e901dc5f8e1cc8c9081e4d5/arm-avhclient-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b98352f2e1ade325c164dd41cbe028f4762a0f54af17dc94ae376c8fd7ac3f7",
          "md5": "6c0057ca71ab5680c907c915f778ef76",
          "sha256": "f0995470f4852cb8279fd5dbed6598d2d765bd897a6d59c5c5ae0c60d5ab1d37"
        },
        "downloads": -1,
        "filename": "arm_avhclient-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6c0057ca71ab5680c907c915f778ef76",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 26993,
        "upload_time": "2022-05-30T14:24:38",
        "upload_time_iso_8601": "2022-05-30T14:24:38.913699Z",
        "url": "https://files.pythonhosted.org/packages/4b/98/352f2e1ade325c164dd41cbe028f4762a0f54af17dc94ae376c8fd7ac3f7/arm_avhclient-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b11d39d898e572c918a411be76021c9e4823135ba6c43506b613a4bc01731a3",
          "md5": "fe02908cda9690a6557bfaa3f58e4b75",
          "sha256": "1c3c120047141656db77180bb19ec422caa1ac4d9cf6d92cf739b74fc35ac8c3"
        },
        "downloads": -1,
        "filename": "arm-avhclient-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "fe02908cda9690a6557bfaa3f58e4b75",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 27401,
        "upload_time": "2022-05-30T14:24:40",
        "upload_time_iso_8601": "2022-05-30T14:24:40.249089Z",
        "url": "https://files.pythonhosted.org/packages/2b/11/d39d898e572c918a411be76021c9e4823135ba6c43506b613a4bc01731a3/arm-avhclient-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fb940a76cc64d975d7d8f4c6b8d4c8994094d483a81d3d0352d996d598db5de",
          "md5": "2cd926d750503763bdf42c309134a5fa",
          "sha256": "8c349175a567a05204a6b4fd625aa9e963979c00984e362f329379508e4ff3ad"
        },
        "downloads": -1,
        "filename": "arm_avhclient-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2cd926d750503763bdf42c309134a5fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 27555,
        "upload_time": "2022-07-25T13:31:53",
        "upload_time_iso_8601": "2022-07-25T13:31:53.513760Z",
        "url": "https://files.pythonhosted.org/packages/3f/b9/40a76cc64d975d7d8f4c6b8d4c8994094d483a81d3d0352d996d598db5de/arm_avhclient-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee7b94254d4a789d6941d8a9fce96421ee5c8309ce4ebb78e7d6ca78725e59ca",
          "md5": "4e9f76d09ea6e1f53ad461378893cedd",
          "sha256": "a7eaeafce550ea2e7eb0bc36c7d41061fc6c20e13849a24e067ef1e7bf07c478"
        },
        "downloads": -1,
        "filename": "arm-avhclient-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "4e9f76d09ea6e1f53ad461378893cedd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 28396,
        "upload_time": "2022-07-25T13:31:55",
        "upload_time_iso_8601": "2022-07-25T13:31:55.037171Z",
        "url": "https://files.pythonhosted.org/packages/ee/7b/94254d4a789d6941d8a9fce96421ee5c8309ce4ebb78e7d6ca78725e59ca/arm-avhclient-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "175c5eb07db3394eba9e4964967bf20946fe8209006eda7de2b8b9967b6758b9",
          "md5": "aa107f71a6b5da880cbf008a73daa350",
          "sha256": "1c71b7676afb317de672ddcb3322db21f260954d7453c0436d5ea73b58042157"
        },
        "downloads": -1,
        "filename": "arm_avhclient-0.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa107f71a6b5da880cbf008a73daa350",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 27616,
        "upload_time": "2022-08-18T14:55:50",
        "upload_time_iso_8601": "2022-08-18T14:55:50.468036Z",
        "url": "https://files.pythonhosted.org/packages/17/5c/5eb07db3394eba9e4964967bf20946fe8209006eda7de2b8b9967b6758b9/arm_avhclient-0.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8379337a57f68ee107e4dd9b824975fac99ebc3802a3e0b00781a8066b24455",
          "md5": "040df0a19b238f1fe5e6a42de82fa25d",
          "sha256": "edc65f37ba7f34f525c062533ddd3088e5707dc805800d1d1c59855b70110cb0"
        },
        "downloads": -1,
        "filename": "arm-avhclient-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "040df0a19b238f1fe5e6a42de82fa25d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 28469,
        "upload_time": "2022-08-18T14:55:53",
        "upload_time_iso_8601": "2022-08-18T14:55:53.010901Z",
        "url": "https://files.pythonhosted.org/packages/c8/37/9337a57f68ee107e4dd9b824975fac99ebc3802a3e0b00781a8066b24455/arm-avhclient-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "696e189d4d75cf0d1336f8b8709893868f7fc78423013bdc27d7e1d332ea01cf",
        "md5": "7bc6a0daf2eb15c29cf1796d2a524365",
        "sha256": "0f0f5eb41cec27bdfed82daa5080133b435db9b482960c67783124e45315294d"
      },
      "downloads": -1,
      "filename": "arm_avhclient-0.1.10-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7bc6a0daf2eb15c29cf1796d2a524365",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 27876,
      "upload_time": "2022-09-28T13:45:17",
      "upload_time_iso_8601": "2022-09-28T13:45:17.696969Z",
      "url": "https://files.pythonhosted.org/packages/69/6e/189d4d75cf0d1336f8b8709893868f7fc78423013bdc27d7e1d332ea01cf/arm_avhclient-0.1.10-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4353fcfc1a7c80a08f6df360710f0ff9c06d31294502e68f9889ead601f432e1",
        "md5": "e189008559d1e93ecc1a9e8c866c1d82",
        "sha256": "6217ec18e971025301c754dcb122e1e88f9b4265854c6a1d3acfd88e0f2022d3"
      },
      "downloads": -1,
      "filename": "arm-avhclient-0.1.10.tar.gz",
      "has_sig": false,
      "md5_digest": "e189008559d1e93ecc1a9e8c866c1d82",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 28724,
      "upload_time": "2022-09-28T13:45:19",
      "upload_time_iso_8601": "2022-09-28T13:45:19.309848Z",
      "url": "https://files.pythonhosted.org/packages/43/53/fcfc1a7c80a08f6df360710f0ff9c06d31294502e68f9889ead601f432e1/arm-avhclient-0.1.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}