{
  "info": {
    "author": "Jocelyn Delalande",
    "author_email": "jdelalande@oasiswork.fr",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)"
    ],
    "description": "Redmine to Gitlab migrator\n==========================\n\n[![Build Status](https://travis-ci.org/redmine-gitlab-migrator/redmine-gitlab-migrator.svg?branch=master)](https://travis-ci.org/redmine-gitlab-migrator/redmine-gitlab-migrator)\n\nMigrate code projects from Redmine to Gitlab, keeping issues/milestones/metadata\n\nDoes\n----\n\n- Per-project migrations\n- Migration of issues, keeping as much metadata as possible:\n  - redmine trackers become tags\n  - redmine categories become tags\n  - issues comments are kept and assigned to the right users\n  - issues final status (open/closed) are kept along with open/close date (not detailed status history)\n  - issues assignments are kept\n  - issues numbers (ex: `#123`)\n  - issues/notes authors\n  - issues/notes original dates, but as comments\n  - issue attachements\n  - issue related changesets\n  - issues custom fields (if specified)\n  - relations including children and parent (although gitlab model for relations is simpler)\n  - keep creation/edit dates as metadata\n  - remember who closed the issue\n  - convert Redmine's textile format issues to GitLab's markdown\n  - possible to map to different users in GitLab\n- Migration of Versions/Roadmaps keeping:\n  - issues composing the version\n  - statuses & due dates\n- Migration of wiki pages including history:\n  - versions become older commits\n  - author names (without email addresses!) are the author/committer names\n\nDoes not\n--------\n\n- Migrate users, groups, and permissions (redmine ACL model is complex and\n  cannot be transposed 1-1 to gitlab ACL)\n- Migrate repositories (piece of cake to do by hand, + redmine allows multiple\n  repositories per project where gitlab does not)\n- Migrate the whole redmine installation at once, because namespacing is different in\n  redmine and gitlab\n- Archive the redmine project for you\n- Keep \"watchers\" on tickets (gitlab API v3 does not expose it)\n- Keep dates/times as metadata\n- Keep track of issue relations orientation (no such notion on gitlab)\n- Migrate tags ([redmine_tags](https://www.redmine.org/plugins/redmine_tags)\n  plugin), as they are not exposed in gitlab API\n\nRequires\n--------\n\n- Python >= 3.5\n- gitlab >= 7.0\n- redmine >= 1.3\n- pandoc >= 1.17.0.0\n- API token on redmine\n- API token on gitlab\n- No preexisting issues on gitlab project\n- Already synced users (those required in the project you are migrating)\n\n(Original version was developed/tested around redmine 2.5.2, gitlab 8.2.0, python 3.4)\n(Updated version was developed/tested around redmine 3.2.0, gitlab 12.3, python 3.6.8)\n\n\nLet's go\n--------\n\nYou can or can not use\n[virtualenvs](http://docs.python-guide.org/en/latest/dev/virtualenvs/), that's\nup to you.\n\nInstall it:\n\n    pip install redmine-gitlab-migrator\n\nor latest version from GitHub:\n\n    pip install git+https://github.com/redmine-gitlab-migrator/redmine-gitlab-migrator\n\nor if you cloned the git:\n\n    python setup.py install\n\nYou can then give it a check without touching anything:\n\n    migrate-rg issues --redmine-key xxxx --gitlab-key xxxx \\\n      <redmine project url> <gitlab project url> --check\n\nThe `--check` here prevents any writing , it's available on all\ncommands.\n\n    migrate-rg --help\n\nMigration process\n-----------------\n\nThis process is for each project, **order matters**.\n\n### Create the gitlab project\n\nIt doesn't neet to be named the same, you just have to record it's URL (eg:\n*https://git.example.com/mygroup/myproject*).\n\n### Create users\n\nManual operation, project members in gitlab need to have the same username as\nmembers in redmine. If you can't use same username in gitlab, e.g. migrating to\ngitlab.com, when migrating issues you can create a mappings file with yaml format,\nmapping redmine login to gitlab login, with\n\n    --user-dict <user dict file>\n\nEvery member that interacted with the redmine project should be added to the\ngitlab project. If a corresponding user can't be found in gitlab, the issue/comment\nwill be assigned to the gitlab admin user.\n\n```yaml\nredmine_user0: gitlab_user0\nredmine_user1: gitlab_user1\n```\n\n### Migrate Roadmap\n\nIf you do use roadmaps, redmine *versions* will be converted to gitlab\n*milestones*. If you don't, just skip this step.\n\n    migrate-rg roadmap --redmine-key xxxx --gitlab-key xxxx \\\n      https://redmine.example.com/projects/myproject \\\n      http://git.example.com/mygroup/myproject --check\n\n*(remove `--check` to perform it for real, same applies for other commands)*\n\n### Migrate issues\n\n    migrate-rg issues --redmine-key xxxx --gitlab-key xxxx \\\n      https://redmine.example.com/projects/myproject \\\n      http://git.example.com/mygroup/myproject --check\n\nNote that your issue titles will be annotated with the original redmine issue\nID, like *-RM-1186-MR-logging*. This annotation will be used (and removed) by\nthe next step.\n\nIf you don't have direct access to the gitlab machine, e.g. migrating to gitlab.com,\nand you want to keep redmine id, use --keep-id, it will create and delete issues in\ngitlab for each id gap in redmine project, and won't create issues with different title.\nIf you have many issues in your redmine projects, it will be a slow process.\n\n    --keep-id\n\nAt least redmine 2.1.2 has no closed_on field, so you have to specify the names of the states which define closed issues.\ndefaults to closed,rejected\n\n    --closed-states closed,rejected,wontfix\n\nIf you want to migrate redmine custom fields (as description), you can specify\n\n    --custom-fields Customer,ZendeskIssueId\n\nIf you're using SSL with self signed cerificates and get an *requests.exceptions.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:600)* error, you can disable certificate validation with\n\n    --no-verify\n\nMigrate issues get all users in gitlab. If you have many users in your gitlab, e.g. migrating\nto gitlab.com, it will be a slow process. You can use --project-members-only to query\nproject members instead of all users, if corresponding user can't be found in project\nmembers, the issue/comment will be assigned to the gitlab admin user.\n\n    --project-members-only\n\nIf you don't have admin access to gitlab instance, e.g. migrating to gitlab.com, sudo_user is not\nallowed, so you have to disable sudo with\n\n    --no-sudo\n\n### Migrate Issues ID (iid)\n\nYou can retain the issues ID from redmine, **this cannot be done via REST\nAPI**, thus it requires **direct access to the gitlab machine**.\n\nSo you have to log in the gitlab machine (eg. via SSH), and then issue the\ncommad with sufficient rights, from there:\n\n    migrate-rg iid --gitlab-key xxxx \\\n      http://git.example.com/mygroup/myproject --check\n\n### Migrate wiki pages\n\nFirst, clone the GitLab wiki repository (go to your project's Wiki on GitLab,\nclick on \"Git Access\" and copy the URL) somewhere local to your machine. The\nconversion process works even if there are pre-existing wiki pages, however\nthis is NOT recommended.\n\n    migrate-rg pages --redmine-key xxxx --gitlab-wiki xxxx \\\n      https://redmine.example.com/projects/myproject \\\n\nwhere gitlab-wiki should be the path to the cloned repository (must be local\nto your machine). Add \"--no-history\" if you do not want the old versions of\neach page to be converted, too.\n\nAfter conversion, verify that everything is correct (a copy of the original\nwiki page is included in the repo, however not added/commited), and then\nsimply push it back to GitLab.\n\n### Import git repository\n\nA bare matter of `git remote set-url && git push`, see git documentation.\n\nNote that gitlab does not support multiple repositories per project, you'll have\nto reorganize your projects if you were using that feature of Redmine.\n\n### Delete all issues from gitlab\n\nPrimarily for redos in case something wasn't configured as intended\n\n    migrate-rg delete-issues --debug --gitlab-key xxx https://git.example.com/mygroup/myproject\n\n### Archive redmine project\n\nIf you want to.\n\nYou're good to go :).\n\n### Optional: Redirect redmine to gitlab (for apache)\n\nSince redmine has a common *https://redmine.company.tld/issues/{issueid}* url for issues, you can't create a generic redirect in apache.\n\nThis command creates redirect rules that you can place in your `.htaccess` file.\n\n    migrate-rg redirect --redmine-key xxxx --gitlab-key xxxx \\\n      https://redmine.example.com/projects/myproject \\\n      http://git.example.com/mygroup/myproject > htaccess.example\n\nThe content of htaccess.example will be\n\n    # uncomment next line to enable RewriteEngine\n    # RewriteEngine On\n    # Redirects from https://redmine.example.com/projects/myproject to https://git.example.com/mygroup/myproject\n    RedirectMatch 301 ^/issues/1$ https://git.example.com/mygroup/myproject/issues/1\n    RedirectMatch 301 ^/issues/2$ https://git.example.com/mygroup/myproject/issues/2\n    ...\n    RedirectMatch 301 ^/issues/999$ https://git.example.com/mygroup/myproject/999\n\nUnit testing\n------------\n\nUse the standard way:\n\n    python setup.py test\n\nOr use whatever test runner you fancy.\n\nUsing Docker container\n----------------------\n\n### Start up GitLab with migrator\n\ncf. [GitLab Docs](https://docs.gitlab.com/) > Omnibus GitLab Doc > [GitLab Docker images](https://docs.gitlab.com/omnibus/docker/)\n\n    export GITLAB_HOME=$PWD/srv/gitlab\n    docker-compose up -d\n    docker-compose logs -f  # You can watch logs and stop with Ctrl+C\n\nAfter starting a container you can access GitLab http://localhost:8081\n\n- Create group/project and users\n- Create Access Token\n\n### Migrate with docker-compose command\n\n#### Roadmap\n\n    docker-compose exec migrator \\\n      migrate-rg roadmap --redmine-key xxxx --gitlab-key xxxx \\\n      https://redmine.example.com/projects/myproject \\\n      http://localhost:8081/mygroup/myproject\n\n#### Issues\n\n    docker-compose exec migrator \\\n      migrate-rg issues --redmine-key xxxx --gitlab-key xxxx \\\n      https://redmine.example.com/projects/myproject \\\n      http://localhost:8081/mygroup/myproject\n\n#### Issues ID (iid)\n\n    docker-compose exec migrator \\\n      migrate-rg iid --gitlab-key xxxx \\\n      http://localhost:8081/mygroup/myproject\n\n### Export/Import to production system\n\ncf. GitLab Docs\nGitLab Docs > User Docs > Projects > Project settings > [Project import/export](https://docs.gitlab.com/ee/user/project/settings/import_export.html)\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/redmine-gitlab-migrator/redmine-gitlab-migrator",
    "keywords": "",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "redmine-gitlab-migrator",
    "package_url": "https://pypi.org/project/redmine-gitlab-migrator/",
    "platform": "",
    "project_url": "https://pypi.org/project/redmine-gitlab-migrator/",
    "project_urls": {
      "Homepage": "https://github.com/redmine-gitlab-migrator/redmine-gitlab-migrator"
    },
    "release_url": "https://pypi.org/project/redmine-gitlab-migrator/1.0.3/",
    "requires_dist": [
      "pypandoc",
      "pyyaml",
      "requests",
      "GitPython"
    ],
    "requires_python": "",
    "summary": "Migrate a redmine project to gitlab",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8225078,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b7da04dfecf5baebf0746b3e94e0070cb9745dfe0c506fae347c3ae2c3cdbb8",
          "md5": "0b506a115ecca240455b51cb28357969",
          "sha256": "29b616ef882963569d19d99c39051def5352e8d81964e4809001c0d2cd69dc2c"
        },
        "downloads": -1,
        "filename": "redmine-gitlab-migrator-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0b506a115ecca240455b51cb28357969",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10060,
        "upload_time": "2015-11-30T10:08:45",
        "upload_time_iso_8601": "2015-11-30T10:08:45.406527Z",
        "url": "https://files.pythonhosted.org/packages/1b/7d/a04dfecf5baebf0746b3e94e0070cb9745dfe0c506fae347c3ae2c3cdbb8/redmine-gitlab-migrator-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c632dbbeb38c5a984cd571d9bbd8adf462190af1bc88651948b492d56e4127c",
          "md5": "5d11e7fa157b8a4e94898bdf440b6841",
          "sha256": "27349bb95e2a9410951a814e5ca8c318343b4f4642e0129e9ebf9fc01c5ad5d7"
        },
        "downloads": -1,
        "filename": "redmine-gitlab-migrator-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5d11e7fa157b8a4e94898bdf440b6841",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10076,
        "upload_time": "2015-11-30T10:13:59",
        "upload_time_iso_8601": "2015-11-30T10:13:59.138738Z",
        "url": "https://files.pythonhosted.org/packages/2c/63/2dbbeb38c5a984cd571d9bbd8adf462190af1bc88651948b492d56e4127c/redmine-gitlab-migrator-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7fc5c004d6ac7711ed0e098215bbc9b36b0d736e7738517e3da5d85a899ce787",
          "md5": "8da984fc7b1e5556fe8832ace4d2d668",
          "sha256": "b4ec43239201f478ac2044ef1474161b5782c3512874d2bca2d7ad98dbb5f34c"
        },
        "downloads": -1,
        "filename": "redmine_gitlab_migrator-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8da984fc7b1e5556fe8832ace4d2d668",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35202,
        "upload_time": "2020-09-19T18:52:02",
        "upload_time_iso_8601": "2020-09-19T18:52:02.109770Z",
        "url": "https://files.pythonhosted.org/packages/7f/c5/c004d6ac7711ed0e098215bbc9b36b0d736e7738517e3da5d85a899ce787/redmine_gitlab_migrator-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae2bc0c0042cb21f099471a7d5c7cf7b30a2590317cb9bb56c6f4081c2391fb8",
          "md5": "d0319bfca06130706a9389de3a86385d",
          "sha256": "67a9e34ca95891680709fb08fbbcd211ff5a6541862f1a1a640ba62814bf46ec"
        },
        "downloads": -1,
        "filename": "redmine-gitlab-migrator-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d0319bfca06130706a9389de3a86385d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24101,
        "upload_time": "2020-09-19T18:52:03",
        "upload_time_iso_8601": "2020-09-19T18:52:03.460040Z",
        "url": "https://files.pythonhosted.org/packages/ae/2b/c0c0042cb21f099471a7d5c7cf7b30a2590317cb9bb56c6f4081c2391fb8/redmine-gitlab-migrator-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7fc5c004d6ac7711ed0e098215bbc9b36b0d736e7738517e3da5d85a899ce787",
        "md5": "8da984fc7b1e5556fe8832ace4d2d668",
        "sha256": "b4ec43239201f478ac2044ef1474161b5782c3512874d2bca2d7ad98dbb5f34c"
      },
      "downloads": -1,
      "filename": "redmine_gitlab_migrator-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8da984fc7b1e5556fe8832ace4d2d668",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 35202,
      "upload_time": "2020-09-19T18:52:02",
      "upload_time_iso_8601": "2020-09-19T18:52:02.109770Z",
      "url": "https://files.pythonhosted.org/packages/7f/c5/c004d6ac7711ed0e098215bbc9b36b0d736e7738517e3da5d85a899ce787/redmine_gitlab_migrator-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ae2bc0c0042cb21f099471a7d5c7cf7b30a2590317cb9bb56c6f4081c2391fb8",
        "md5": "d0319bfca06130706a9389de3a86385d",
        "sha256": "67a9e34ca95891680709fb08fbbcd211ff5a6541862f1a1a640ba62814bf46ec"
      },
      "downloads": -1,
      "filename": "redmine-gitlab-migrator-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "d0319bfca06130706a9389de3a86385d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24101,
      "upload_time": "2020-09-19T18:52:03",
      "upload_time_iso_8601": "2020-09-19T18:52:03.460040Z",
      "url": "https://files.pythonhosted.org/packages/ae/2b/c0c0042cb21f099471a7d5c7cf7b30a2590317cb9bb56c6f4081c2391fb8/redmine-gitlab-migrator-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}