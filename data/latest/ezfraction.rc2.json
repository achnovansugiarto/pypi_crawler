{
  "info": {
    "author": "Jasur Yusupov",
    "author_email": "jasuryusupov14@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# ezFraction\n\n**ezFraction** is a custom Python module for working with fractions. \n\n## Installation\n\nFrom PyPI:\n\n    pip install ezFraction\n\nFrom source:\n\n    git clone https://github.com/GooDeeJaY/ezFraction.git\n    cd ezFraction\n    python -m pip install .\n\n## Usage\n\nImporting and initialization:\n\n```python3\nfrom ezFraction import Fraction\n\n# passing string\nFraction(\"3.14\")        # 157/50\n\n# passing float\nFraction(1.24)          # 31/25\n\n# passing int\nFraction(567)           # 567/1\n\n# passing fraction\nFraction(28, 3)         # 28/3\n```\n\nProperties:\n\n```python3\nfrac = Fraction(4.6)\n\n# Properties\nprint(frac)             # 23/5\nprint(frac.decimal)     # 4.6\nprint(frac.numerator)   # 23\nprint(frac.denominator) # 5\nprint(frac.tuple)       # (23, 5)\n```\n\nBy default fractions will be rounded to 5 decimal places, if you want more or less precision you can set different rounding or even switch off the rounding:\n\n```python3\nprint(Fraction(3.14))                   # 333333/100000\nprint(Fraction(3.14, rounding=None))    # 4166666666666667/1250000000000000\n```\n\nWhen initializing `Fraction`, we can set `reduce` to `False` in order to get unreduced fraction:\n\n```python3\nprint(Fraction(18.5))                   # 37/2\nprint(Fraction(18.5, reduce=False))     # 185/10\n```\n\nAlso, there are `.reduce()` and `.enlarge()` methods that perform actions that their name tells. Both methods have `new_obj` parameter which is used to create new `Fraction` instances rather than applying methods to themselves. Apart from `.reduce()`, `.enlarge()` accepts one additional argument `multiplier` that is used to set the different multiplier for enlargement rather than 2 (default).\n\n```python3\nfrac = Fraction(20.5) \nprint(frac)                         # 41/2\nprint(frac.enlarge())               # 82/4\nprint(frac.enlarge(multiplier=3))   # 246/12\nfrac2 = frac.reduce(new_obj=True)\nprint(frac2, frac)                  # 41/2 246/12\n```\n\nYou can use `.with_denominator()` method in order to set custom denominator:\n\n```python3\nfrac = Fraction(0.32)                               # 8/25\ncustom = frac.with_denominator(35, to_str=True)     # 11.2/35\n```\n\nSince this creates an invalid fraction, conversion will not be saved in Fraction instances but rather will be returned as a tuple (default) or string. Also, there is a `.with_numerator()` method that does the same thing but with a numerator.\n\nThese methods can be useful when comparing fractions with others. For example, we have fractions 8/25 and 9/35, telling which one is greater by glance is not so easy. So here comes the aid of `.with_denominator()` method by which we convert 8/25 to 11.2/35. \nNow it is easy to tell that 11.2/35 is greater than 9/35\n\nLast but not least, you can perform arithmetic operations with Fraction objects:\n\n```python3\nfrac1 = Fraction(0.48)      # 12/25\nfrac2 = Fraction(1.52)      # 38/25\n\nprint(frac1 + frac2)        # 2/1\nprint(frac1 - frac2)        # -26/25\nprint(frac1 * frac2)        # 456/625\nprint(frac1 / frac2)        # 6/19\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GooDeeJaY/ezFraction",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ezFraction",
    "package_url": "https://pypi.org/project/ezFraction/",
    "platform": "",
    "project_url": "https://pypi.org/project/ezFraction/",
    "project_urls": {
      "Bug Tracker": "https://github.com/GooDeeJaY/ezFraction/issues",
      "Homepage": "https://github.com/GooDeeJaY/ezFraction"
    },
    "release_url": "https://pypi.org/project/ezFraction/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Fractions made easy",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12875461,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "252d73965cbfd4cc494d76dc6595de75d1186611851b5d205209171956e7823f",
          "md5": "25473b6fd2f0d0e7ef7f3700de205b17",
          "sha256": "6cf09b64241850dd338b1a92c687c648ce56ac1e8f030f4c7f01ac9593e80b2d"
        },
        "downloads": -1,
        "filename": "ezFraction-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "25473b6fd2f0d0e7ef7f3700de205b17",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4255,
        "upload_time": "2022-02-12T21:23:34",
        "upload_time_iso_8601": "2022-02-12T21:23:34.965398Z",
        "url": "https://files.pythonhosted.org/packages/25/2d/73965cbfd4cc494d76dc6595de75d1186611851b5d205209171956e7823f/ezFraction-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec9bfb7500d57f3363a8432697ef12de782d80c46b573a26cd9d663b711b3e4b",
          "md5": "4f3274654d4adc2a86f2f75bb8aafb1c",
          "sha256": "f33ecc2de925053d5f3e326264c75de044eb733f528ba418f31b490f1e1491aa"
        },
        "downloads": -1,
        "filename": "ezFraction-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4f3274654d4adc2a86f2f75bb8aafb1c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4189,
        "upload_time": "2022-02-12T21:23:36",
        "upload_time_iso_8601": "2022-02-12T21:23:36.453460Z",
        "url": "https://files.pythonhosted.org/packages/ec/9b/fb7500d57f3363a8432697ef12de782d80c46b573a26cd9d663b711b3e4b/ezFraction-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a22a2798b3a9ba83ce02c10fb41231076857cf658b5b1c1d439b976a37e567d3",
          "md5": "d93b3d61d48437d8e94402ce08a81844",
          "sha256": "f77d5d582c9a6b598ad9299ff89c5c6b9464dd39dbbca131cd6a520527a7bd4b"
        },
        "downloads": -1,
        "filename": "ezFraction-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d93b3d61d48437d8e94402ce08a81844",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4437,
        "upload_time": "2022-02-13T11:11:06",
        "upload_time_iso_8601": "2022-02-13T11:11:06.005304Z",
        "url": "https://files.pythonhosted.org/packages/a2/2a/2798b3a9ba83ce02c10fb41231076857cf658b5b1c1d439b976a37e567d3/ezFraction-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c04a089b9aaab7083683fa51b768807e184668f56b5f5e196aedb3983f19ff3",
          "md5": "1c851d00c2ed692db4043780136b7f84",
          "sha256": "928773014ea531ea5fcdc0a78a08f027591efc69db44cfd3386b1a03e1128458"
        },
        "downloads": -1,
        "filename": "ezFraction-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1c851d00c2ed692db4043780136b7f84",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4641,
        "upload_time": "2022-02-13T11:11:07",
        "upload_time_iso_8601": "2022-02-13T11:11:07.397129Z",
        "url": "https://files.pythonhosted.org/packages/1c/04/a089b9aaab7083683fa51b768807e184668f56b5f5e196aedb3983f19ff3/ezFraction-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a22a2798b3a9ba83ce02c10fb41231076857cf658b5b1c1d439b976a37e567d3",
        "md5": "d93b3d61d48437d8e94402ce08a81844",
        "sha256": "f77d5d582c9a6b598ad9299ff89c5c6b9464dd39dbbca131cd6a520527a7bd4b"
      },
      "downloads": -1,
      "filename": "ezFraction-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d93b3d61d48437d8e94402ce08a81844",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4437,
      "upload_time": "2022-02-13T11:11:06",
      "upload_time_iso_8601": "2022-02-13T11:11:06.005304Z",
      "url": "https://files.pythonhosted.org/packages/a2/2a/2798b3a9ba83ce02c10fb41231076857cf658b5b1c1d439b976a37e567d3/ezFraction-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1c04a089b9aaab7083683fa51b768807e184668f56b5f5e196aedb3983f19ff3",
        "md5": "1c851d00c2ed692db4043780136b7f84",
        "sha256": "928773014ea531ea5fcdc0a78a08f027591efc69db44cfd3386b1a03e1128458"
      },
      "downloads": -1,
      "filename": "ezFraction-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1c851d00c2ed692db4043780136b7f84",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4641,
      "upload_time": "2022-02-13T11:11:07",
      "upload_time_iso_8601": "2022-02-13T11:11:07.397129Z",
      "url": "https://files.pythonhosted.org/packages/1c/04/a089b9aaab7083683fa51b768807e184668f56b5f5e196aedb3983f19ff3/ezFraction-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}