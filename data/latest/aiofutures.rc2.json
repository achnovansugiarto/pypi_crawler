{
  "info": {
    "author": "Denis Kazakov",
    "author_email": "denis@kazakov.ru.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Aiofutures\n![Python version](https://img.shields.io/badge/python-3.7%2B-blue)\n[![Tests](https://github.com/KazakovDenis/relatives/actions/workflows/cicd.yml/badge.svg)](https://github.com/KazakovDenis/relatives/actions/workflows/cicd.yml)  \n\n`aiofutures` provides tools to integrate an asynchronous code into your synchronous \napplication in a usual and easy way using standard library's `concurrent.futures.Executor` interface.  \n  \nIt may be useful when you want to:\n- smoothly migrate your synchronous codebase to asynchronous style\n- decrease a number of threads in your application \n\nReplace this:\n```python\nfrom concurrent.futures import ThreadPoolExecutor\n\nwith ThreadPoolExecutor() as ex:\n    future = ex.submit(sync_task)\n    result = future.result()\n```\n\nWith this:\n```python\nfrom aiofutures import AsyncExecutor\n\nwith AsyncExecutor() as ex:\n    future = ex.submit(async_task)\n    result = future.result()\n```\n\n\n## Installation\n\nYou can install `aiofutures` using pip:\n\n```\npip install aiofutures\n```\n\n## Usage\n\n### Implicit initialization (global executor)\n\nSet an environment variable `AIOFUTURES_INIT` to any value and use shortcuts from the library:\n\n```python\nos.environ.setdefault('AIOFUTURES_INIT', '1')\n\nfrom aiofutures import run_async\n\nasync def io_bound_task(seconds):\n    await asyncio.sleep(seconds)\n    return seconds\n\nfuture = run_async(io_bound_task, 5)\nprint(future.result())\n```\n`AIOFUTURES_INIT` implicitly initializes a global `AsyncExecutor` and gives you an option to use \nshortcuts `run_async` and `sync_to_async`.\n\n### Explicit initialization\n\nUse an instance of the `AsyncExecutor` directly:\n\n```python\nfrom aiofutures import AsyncExecutor\n\nexecutor = AsyncExecutor()\nfuture = executor.submit(io_bound_task, 5)\nprint(future.result())\n```\n\nIn cases when you need to do IO synchronously within async tasks, you can use `sync_to_async`:\n\n```python\nfrom aiofutures import AsyncExecutor, sync_to_async\n\nexecutor = AsyncExecutor()\n\nasync def io_bound_task():\n    # or with the shortcut\n    # url = await sync_to_async(fetch_url_from_db_sync)\n    url = await executor.sync_to_async(fetch_url_from_db_sync)\n    data = await fetch_data(url)\n    return data\n\nfuture = executor.submit(io_bound_task)\nprint(future.result())\n```\n\nNOTE: You can use sync_to_async within tasks running in the executor only.\n\n### UVLoop\n\nTo use with the high performance `uvloop` install it before initialization:\n```python\n# install before the import for the global executor\nimport uvloop\nuvloop.install()\nfrom aiofutures import run_async\n...\n\n# or before an explicit initialization\nimport uvloop\nfrom aiofutures import AsyncExecutor\nuvloop.install()\nexecutor = AsyncExecutor()\n```\n\n## Contribution\nAll suggestions are welcome!\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiofutures",
    "package_url": "https://pypi.org/project/aiofutures/",
    "platform": null,
    "project_url": "https://pypi.org/project/aiofutures/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/aiofutures/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.7,<4.0",
    "summary": "Smoothly migrate your synchronous codebase to an asynchronous style.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17500355,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18f7d0434cdb6a4fa489c6eda9957b28aa3bab430754db830cc53e72b39c12bf",
          "md5": "394c591d8e0d94e8ff3acc554ce302cf",
          "sha256": "a049c45e6c9e97d607bf615dfa127134c83aa89764df583b2f31d3f20ac98cc7"
        },
        "downloads": -1,
        "filename": "aiofutures-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "394c591d8e0d94e8ff3acc554ce302cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 3713,
        "upload_time": "2023-03-28T21:35:16",
        "upload_time_iso_8601": "2023-03-28T21:35:16.341322Z",
        "url": "https://files.pythonhosted.org/packages/18/f7/d0434cdb6a4fa489c6eda9957b28aa3bab430754db830cc53e72b39c12bf/aiofutures-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b06976ca9d7c0a28a15f30e879f586cc5a9bbd4bd9c3450f7bfc48f37a7b0bd",
          "md5": "f5326915fb4b3ef53fa21e1f176dd7dd",
          "sha256": "e709cca0f24986ede2c04dffc9ea846cb5a3102020df2212ab1f0ae5d04ed526"
        },
        "downloads": -1,
        "filename": "aiofutures-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f5326915fb4b3ef53fa21e1f176dd7dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 2970,
        "upload_time": "2023-03-28T21:35:18",
        "upload_time_iso_8601": "2023-03-28T21:35:18.144280Z",
        "url": "https://files.pythonhosted.org/packages/7b/06/976ca9d7c0a28a15f30e879f586cc5a9bbd4bd9c3450f7bfc48f37a7b0bd/aiofutures-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10466b98473c4d345a3a4e09aea999ceeb1ed18c7e8737460a31004048235bf9",
          "md5": "779c523c7752dddea4f2d4b8310843bb",
          "sha256": "297d295abe2e9b122fb8c53cec965403ff51c1d27a86d80a29a5a2291c757875"
        },
        "downloads": -1,
        "filename": "aiofutures-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "779c523c7752dddea4f2d4b8310843bb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 5318,
        "upload_time": "2023-03-29T21:49:53",
        "upload_time_iso_8601": "2023-03-29T21:49:53.753162Z",
        "url": "https://files.pythonhosted.org/packages/10/46/6b98473c4d345a3a4e09aea999ceeb1ed18c7e8737460a31004048235bf9/aiofutures-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1e40541a5fb6b232fbc49b5d79cfc0746e90ac56831cff5ab249971512b7532",
          "md5": "5b667798b283ce3931eb8bc2857c1f98",
          "sha256": "6f390bace489c64143f0018ae28f94adf49c695f161fd1bd4dcfa63419affe45"
        },
        "downloads": -1,
        "filename": "aiofutures-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5b667798b283ce3931eb8bc2857c1f98",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 4531,
        "upload_time": "2023-03-29T21:49:55",
        "upload_time_iso_8601": "2023-03-29T21:49:55.611460Z",
        "url": "https://files.pythonhosted.org/packages/f1/e4/0541a5fb6b232fbc49b5d79cfc0746e90ac56831cff5ab249971512b7532/aiofutures-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10466b98473c4d345a3a4e09aea999ceeb1ed18c7e8737460a31004048235bf9",
        "md5": "779c523c7752dddea4f2d4b8310843bb",
        "sha256": "297d295abe2e9b122fb8c53cec965403ff51c1d27a86d80a29a5a2291c757875"
      },
      "downloads": -1,
      "filename": "aiofutures-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "779c523c7752dddea4f2d4b8310843bb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 5318,
      "upload_time": "2023-03-29T21:49:53",
      "upload_time_iso_8601": "2023-03-29T21:49:53.753162Z",
      "url": "https://files.pythonhosted.org/packages/10/46/6b98473c4d345a3a4e09aea999ceeb1ed18c7e8737460a31004048235bf9/aiofutures-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f1e40541a5fb6b232fbc49b5d79cfc0746e90ac56831cff5ab249971512b7532",
        "md5": "5b667798b283ce3931eb8bc2857c1f98",
        "sha256": "6f390bace489c64143f0018ae28f94adf49c695f161fd1bd4dcfa63419affe45"
      },
      "downloads": -1,
      "filename": "aiofutures-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5b667798b283ce3931eb8bc2857c1f98",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 4531,
      "upload_time": "2023-03-29T21:49:55",
      "upload_time_iso_8601": "2023-03-29T21:49:55.611460Z",
      "url": "https://files.pythonhosted.org/packages/f1/e4/0541a5fb6b232fbc49b5d79cfc0746e90ac56831cff5ab249971512b7532/aiofutures-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}