{
  "info": {
    "author": "Jesper Wendel Devantier",
    "author_email": "jwd@defmacro.it",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Pytest"
    ],
    "description": "# Pytest Autocap\n\nPytest Autocap, if enabled, will automatically capture the output written to `stdout` and `stderr`, writing it down into an output directory of your choosing.\n\nEach test is assigned a unique output directory in a way closely following how pytest refers to tests, e.g. `tests/package_b/test_module_b.py::TestModBClass::test_two[2]` is located in `tests/package_b/test_module_b/TestModBClass/test_two[2]` inside the output directory.\nSee [pytest-autocap-example](https://github.com/jwdevantier/pytest-autocap-example) if you want to try this out in practice, or want to read a detailed example.\n\nHaving all test output recorded automatically is helpful in case Pytest is driving long-running integration- or full-spectrum systems tests. Likewise, having a well-defined scheme for storing additional data generated as part of running these tests, can help splitting the test execution, which in case of systems tests may be significant, from subsequent analysis.\n\n## How to use\n\n### Installation\nInstall `pytest-autocap`:\n```\npip install pytest-autocap\n```\n\n### Capture test output\n... define some tests and add the `--autocap-dir` argument to pytest when running to capture output:\n```\npytest --autocap-dir=/tmp/my-test-output -s .\n```\n\nNote, `-s` is equivalent to `--capture=no` and is required for autocap to capture test output. However, autocap will raise an error if you provide `--autocap-dir`, but fail to also set `-s`/`--capture=no`.\n\n### Storing additional files in the test output directory\nIf a test generates additional data you wish to keep, use the `autocap_dir` fixture, which returns a `pathlib.Path` object. For example:\n\n```python\ndef test_function_test(autocap_dir):\n    with open(autocap_dir / \"stuff.txt\", \"w\") as fh:\n        fh.write(\"hello, world\\n\")\n    pass\n```\n\n## How it works\nAutocap re-uses the capture fixture code which the various capture fixtures uses.\n\nTo capture output with plain Pytest, one of these capture fixtures (`capfd`, `capfdbinary`, `capsys`, `capsysbinary`) must be referenced in the argument list of a test function or function-scoped fixture.\nHowever, these fixtures do not support capturing output for fixtures with a longer life-time, i.e. fixtures with `session`-, `module`- or `class`-wide scope.\n\nTo circumvent this requirement, and to track which fixture generates what output, autocap manually intializes capture fixtures using various pytest hooks and fixture finalizers.\nAll output is then stored until the test run is completed, at which point all fixtures have run their tear-down logic, and all output is finally written to the chosen output directory.\nTo see a detailed example, see [pytest-autocap-example](https://github.com/jwdevantier/pytest-autocap-example).\n\n## Limitations\n* You cannot mix autocap with the standard capture fixtures (`capfd`, `capfdbinary`, `capsys`, `capsysbinary`), or fixtures depending on those capture fixtures.\n    * In case you do by mistake, pytest will exit with a helpful error message, pointing out which test or fixture caused the issue.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jwdevantier/pytest-autocap",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytest-autocap",
    "package_url": "https://pypi.org/project/pytest-autocap/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytest-autocap/",
    "project_urls": {
      "Homepage": "https://github.com/jwdevantier/pytest-autocap"
    },
    "release_url": "https://pypi.org/project/pytest-autocap/0.0.1/",
    "requires_dist": [
      "pytest (<7.2,>=7.1.2)"
    ],
    "requires_python": "",
    "summary": "automatically capture test & fixture stdout/stderr to files",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13823456,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "258a2fbf972d6b8e954b9ed31807959c966bef61827594ed430f068a96eea873",
          "md5": "fa6e31e3163438b8aa58de7ee30ac466",
          "sha256": "917c26e39fb26f8e23f8038ee293951d29cad0e4237570e530bce0ebbb9ce620"
        },
        "downloads": -1,
        "filename": "pytest_autocap-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fa6e31e3163438b8aa58de7ee30ac466",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6534,
        "upload_time": "2022-05-15T18:48:14",
        "upload_time_iso_8601": "2022-05-15T18:48:14.416314Z",
        "url": "https://files.pythonhosted.org/packages/25/8a/2fbf972d6b8e954b9ed31807959c966bef61827594ed430f068a96eea873/pytest_autocap-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0af0815412ef8649ca5d220510bb6b82639652fd0ba1ea87c3511e1a523ba88",
          "md5": "d4aa16c847393ed423c50b953ce01b6d",
          "sha256": "dcb319e89350d43542a8e287f6b8d2962ba575dc5c701ef2ec1aca6ee18ff6ed"
        },
        "downloads": -1,
        "filename": "pytest-autocap-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d4aa16c847393ed423c50b953ce01b6d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6094,
        "upload_time": "2022-05-15T18:48:15",
        "upload_time_iso_8601": "2022-05-15T18:48:15.820917Z",
        "url": "https://files.pythonhosted.org/packages/f0/af/0815412ef8649ca5d220510bb6b82639652fd0ba1ea87c3511e1a523ba88/pytest-autocap-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "258a2fbf972d6b8e954b9ed31807959c966bef61827594ed430f068a96eea873",
        "md5": "fa6e31e3163438b8aa58de7ee30ac466",
        "sha256": "917c26e39fb26f8e23f8038ee293951d29cad0e4237570e530bce0ebbb9ce620"
      },
      "downloads": -1,
      "filename": "pytest_autocap-0.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fa6e31e3163438b8aa58de7ee30ac466",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 6534,
      "upload_time": "2022-05-15T18:48:14",
      "upload_time_iso_8601": "2022-05-15T18:48:14.416314Z",
      "url": "https://files.pythonhosted.org/packages/25/8a/2fbf972d6b8e954b9ed31807959c966bef61827594ed430f068a96eea873/pytest_autocap-0.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f0af0815412ef8649ca5d220510bb6b82639652fd0ba1ea87c3511e1a523ba88",
        "md5": "d4aa16c847393ed423c50b953ce01b6d",
        "sha256": "dcb319e89350d43542a8e287f6b8d2962ba575dc5c701ef2ec1aca6ee18ff6ed"
      },
      "downloads": -1,
      "filename": "pytest-autocap-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d4aa16c847393ed423c50b953ce01b6d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6094,
      "upload_time": "2022-05-15T18:48:15",
      "upload_time_iso_8601": "2022-05-15T18:48:15.820917Z",
      "url": "https://files.pythonhosted.org/packages/f0/af/0815412ef8649ca5d220510bb6b82639652fd0ba1ea87c3511e1a523ba88/pytest-autocap-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}