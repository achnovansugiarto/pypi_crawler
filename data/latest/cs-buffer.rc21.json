{
  "info": {
    "author": "Cameron Simpson",
    "author_email": "Cameron Simpson <cs@cskk.id.au>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Facilities to do with buffers, particularly CornuCopyBuffer,\nan automatically refilling buffer to support parsing of data streams.\n\n*Latest release 20230401*:\n* CornuCopyBuffer.promote: document accepting an iterable as an iterable of bytes.\n* CornuCopyBuffer: new readline() method to return a binary line from the buffer.\n* CornuCopyBuffer.promote: assume objects with a .read1 or .read are files.\n\n## Class `CopyingIterator`\n\nWrapper for an iterator that copies every item retrieved to a callable.\n\n*Method `CopyingIterator.__init__(self, it, copy_to)`*:\nInitialise with the iterator `it` and the callable `copy_to`.\n\n## Class `CornuCopyBuffer(cs.deco.Promotable)`\n\nAn automatically refilling buffer intended to support parsing\nof data streams.\n\nIts purpose is to aid binary parsers\nwhich do not themselves need to handle sources specially;\n`CornuCopyBuffer`s are trivially made from `bytes`,\niterables of `bytes` and file-like objects.\nSee `cs.binary` for convenient parsing classes\nwhich work against `CornuCopyBuffer`s.\n\nAttributes:\n* `buf`: the first of any buffered leading chunks\n  buffer of unparsed data from the input, available\n  for direct inspection by parsers;\n  normally however parsers will use `.extend` and `.take`.\n* `offset`: the logical offset of the buffer; this excludes\n  buffered data and unconsumed input data\n\n*Note*: the initialiser may supply a cleanup function;\nalthough this will be called via the buffer's `.__del__` method\na prudent user of a buffer should call the `.close()` method\nwhen finished with the buffer to ensure prompt cleanup.\n\nThe primary methods supporting parsing of data streams are\n`.extend()` and `take()`.\nCalling `.extend(min_size)` arranges that the internal buffer\ncontains at least `min_size` bytes.\nCalling `.take(size)` fetches exactly `size` bytes from the\ninternal buffer and the input source if necessary and returns\nthem, adjusting the internal buffer.\n\nlen(`CornuCopyBuffer`) returns the length of any buffered data.\n\nbool(`CornuCopyBuffer`) tests whether len() > 0.\n\nIndexing a `CornuCopyBuffer` accesses the buffered data only,\nreturning an individual byte's value (an `int`).\n\nA `CornuCopyBuffer` is also iterable, yielding data in whatever\nsizes come from its `input_data` source, preceeded by any\ncontent in the internal buffer.\n\nA `CornuCopyBuffer` also supports the file methods `.read`,\n`.tell` and `.seek` supporting drop in use of the buffer in\nmany file contexts. Backward seeks are not supported. `.seek`\nwill take advantage of the `input_data`'s .seek method if it\nhas one, otherwise it will use consume the `input_data`\nas required.\n\n*Method `CornuCopyBuffer.__init__(self, input_data, buf=None, offset=0, seekable=None, copy_offsets=None, copy_chunks=None, close=None, progress=None)`*:\nPrepare the buffer.\n\nParameters:\n* `input_data`: an iterable of data chunks (`bytes`-like instances);\n  if your data source is a file see the `.from_file` factory;\n  if your data source is a file descriptor see the `.from_fd`\n  factory.\n* `buf`: if not `None`, the initial state of the parse buffer\n* `offset`: logical offset of the start of the buffer, default `0`\n* `seekable`: whether `input_data` has a working `.seek` method;\n  the default is `None` meaning that it will be attempted on\n  the first skip or seek\n* `copy_offsets`: if not `None`, a callable for parsers to\n  report pertinent offsets via the buffer's `.report_offset`\n  method\n* `copy_chunks`: if not `None`, every fetched data chunk is\n  copied to this callable\n\nThe `input_data` is an iterable whose iterator may have\nsome optional additional properties:\n* `seek`: if present, this is a seek method after the fashion\n  of `file.seek`; the buffer's `seek`, `skip` and `skipto`\n  methods will take advantage of this if available.\n* `offset`: the current byte offset of the iterator; this\n  is used during the buffer initialisation to compute\n  `input_data_displacement`, the difference between the\n  buffer's logical offset and the input data iterable's logical offset;\n  if unavailable during initialisation this is presumed to\n  be `0`.\n* `end_offset`: the end offset of the iterator if known.\n* `close`: an optional callable\n  that may be provided for resource cleanup\n  when the user of the buffer calls its `.close()` method.\n* `progress`: an optional `cs.Progress.progress` instance\n  to which to report data consumed from `input_data`;\n  any object supporting `+=` is acceptable\n\n## Class `FDIterator(_Iterator)`\n\nAn iterator over the data of a file descriptor.\n\n*Note*: the iterator works with an os.dup() of the file\ndescriptor so that it can close it with impunity; this requires\nthe caller to close their descriptor.\n\n*Method `FDIterator.__init__(self, fd, offset=None, readsize=None, align=True)`*:\nInitialise the iterator.\n\nParameters:\n* `fd`: file descriptor\n* `offset`: the initial logical offset, kept up to date by\n  iteration; the default is the current file position.\n* `readsize`: a preferred read size; if omitted then\n  `DEFAULT_READSIZE` will be stored\n* `align`: whether to align reads by default: if true then\n  the iterator will do a short read to bring the `offset`\n  into alignment with `readsize`; the default is `True`\n\n## Class `FileIterator(_Iterator, SeekableIteratorMixin)`\n\nAn iterator over the data of a file object.\n\n*Note*: the iterator closes the file on `__del__` or if its\n`.close` method is called.\n\n*Method `FileIterator.__init__(self, fp, offset=None, readsize=None, align=False)`*:\nInitialise the iterator.\n\nParameters:\n* `fp`: file object\n* `offset`: the initial logical offset, kept up to date by\n  iteration; the default is 0.\n* `readsize`: a preferred read size; if omitted then\n  `DEFAULT_READSIZE` will be stored\n* `align`: whether to align reads by default: if true then\n  the iterator will do a short read to bring the `offset`\n  into alignment with `readsize`; the default is `False`\n\n## Class `SeekableFDIterator(FDIterator, _Iterator, SeekableIteratorMixin)`\n\nAn iterator over the data of a seekable file descriptor.\n\n*Note*: the iterator works with an `os.dup()` of the file\ndescriptor so that it can close it with impunity; this requires\nthe caller to close their descriptor.\n\n## Class `SeekableFileIterator(FileIterator, _Iterator, SeekableIteratorMixin)`\n\nAn iterator over the data of a seekable file object.\n\n*Note*: the iterator closes the file on __del__ or if its\n.close method is called.\n\n*Method `SeekableFileIterator.__init__(self, fp, offset=None, **kw)`*:\nInitialise the iterator.\n\nParameters:\n* `fp`: file object\n* `offset`: the initial logical offset, kept up to date by\n  iteration; the default is the current file position.\n* `readsize`: a preferred read size; if omitted then\n  `DEFAULT_READSIZE` will be stored\n* `align`: whether to align reads by default: if true then\n  the iterator will do a short read to bring the `offset`\n  into alignment with `readsize`; the default is `False`\n\n## Class `SeekableIteratorMixin`\n\nMixin supplying a logical with a `seek` method.\n\n## Class `SeekableMMapIterator(_Iterator, SeekableIteratorMixin)`\n\nAn iterator over the data of a mappable file descriptor.\n\n*Note*: the iterator works with an `mmap` of an `os.dup()` of the\nfile descriptor so that it can close it with impunity; this\nrequires the caller to close their descriptor.\n\n*Method `SeekableMMapIterator.__init__(self, fd, offset=None, readsize=None, align=True)`*:\nInitialise the iterator.\n\nParameters:\n* `offset`: the initial logical offset, kept up to date by\n  iteration; the default is the current file position.\n* `readsize`: a preferred read size; if omitted then\n  `DEFAULT_READSIZE` will be stored\n* `align`: whether to align reads by default: if true then\n  the iterator will do a short read to bring the `offset`\n  into alignment with `readsize`; the default is `True`\n\n# Release Log\n\n\n\n*Release 20230401*:\n* CornuCopyBuffer.promote: document accepting an iterable as an iterable of bytes.\n* CornuCopyBuffer: new readline() method to return a binary line from the buffer.\n* CornuCopyBuffer.promote: assume objects with a .read1 or .read are files.\n\n*Release 20230212.2*:\n* BREAKING: drop @chunky, superceded by @promote for CornuCopyBuffer parameters.\n* CornuCopyBuffer: subclass Promotable.\n\n*Release 20230212.1*:\nAdd missing requirement for cs.gimmicks.\n\n*Release 20230212*:\nCornuCopyBuffer: new promote() method to promote int,str,bytes, also assumes nonspecific iterables yield byteslike instances.\n\n*Release 20211208*:\nCornuCopyBuffer.__init__: bugfix for self.input_data when copy_chunks is not None.\n\n*Release 20210316*:\n* New CornuCopyBuffer.from_filename factory method.\n* New CornuCopyBuffer.peek method to examine the leading bytes from the buffer.\n\n*Release 20210306*:\n* CornuCopyBuffer.from_file: improve the seekability test, handle files with no .tell().\n* CornuCopyBuffer.from_bytes: bugfix: set the buffer.offset to the supplied offset.\n* CornuCopyBuffer.from_bytes: queue a memoryview of the supplied bytes.\n\n*Release 20201102*:\nCornuCopyBuffer: new optional `progress` parameter for reporting data consumed from `input_data`.\n\n*Release 20201021*:\n* CornuCopyBuffer.from_file: changes to the test for a .seek method.\n* CornuCopyBuffer.read: call extend with short_ok=True.\n* CornuCopyBuffer.from_fd: record the fd as .fd, lets users os.fstat(bfr.fd).\n* New CornuCopyBuffer.as_fd method to return a readable file descriptor fed from the buffer by a Thread, intended for feeding subprocesses.\n* New CornuCopyBuffer.iter(maxlength) to return an iterator of up to maxlength bytes.\n* CornuCopyBuffer.__init__: new \"close\" parameter to release resources; new CornuCopyBuffer.close method to call this.\n* Some small fixes.\n\n*Release 20200517*:\n* CornuCopyBuffer.skip: bugfix sanity check.\n* FileIterator: do not close the supplied file, just set self.fp=None.\n* Improve EOFError message text.\n\n*Release 20200328*:\n* CornuCopyBuffer.takev: bugfix adjustment of buf.offset, was not always done.\n* CornuCopyBuffer.__getitem__: add slice support, note how expensive it is to use.\n\n*Release 20200229*:\n* New CornuCopyBuffer.byte0() method consuming the next byte and returning it as an int.\n* CornuCopyBuffer.takev: bugfix for size=0, logic refactor.\n* CornuCopyBuffer: new .selfcheck method.\n\n*Release 20200130*:\nCornuCopyBuffer.skip: bugfix adjustment of skipto for already buffered data.\n\n*Release 20191230.1*:\nDocstring updates. Semantic changes were in the previous release.\n\n*Release 20191230*:\n* CornuCopyBuffer: accept a size of Ellipsis in .take and .extend methods, indicating \"all the remaining data\".\n* CornuCopyBuffer: refactor the buffering, replacing .buf with .bufs as an array of chunks;\n* this enables support for the new .push method and reduces memory copying.\n\n*Release 20181231*:\nSmall bugfix.\n\n*Release 20181108*:\nNew at_eof() method. Python 2 tweak to support incidental import by python 2 even if unused.\n\n*Release 20180823*:\nBetter handling of seekable and unseekable input data. Tiny bugfix for from_bytes sanity check.\n\n*Release 20180810*:\n* Refactor SeekableFDIterator and SeekableFileIterator to subclass new SeekableIterator.\n* New SeekableMMapIterator to process a memory mapped file descriptor, intended for large files.\n* New CornuCopyBuffer.hint method to pass a length hint through to the input_data iterator\n* if it has a `hint` method, causing it possibly to make a differently sized fetch.\n* SeekableIterator: new __del__ method calling self.close() - subclasses must provide\n* a .close, which should be safe to call multiple times.\n* CornuCopyBuffer: add support for .offset and .end_offset optional attributes on the input_data iterator.\n* _BoundedBufferIterator: add .offset property plumbed to the underlying buffer offset.\n* New CornuCopyBuffer.from_mmap to make a mmap backed buffer so that large data can be returned without penalty.\n* Assorted fixes and doc improvements.\n\n*Release 20180805*:\nBugfixes for at_eof method and end_offset initialisation.\n\n*Release 20180726.1*:\nImprove docstrings and release with better long_description.\n\n*Release 20180726*:\nFirst PyPI release: CornuCopyBuffer and friends.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/cameron_simpson/css/commits/all",
    "keywords": "python3",
    "license": "GNU General Public License v3 or later (GPLv3+)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cs.buffer",
    "package_url": "https://pypi.org/project/cs.buffer/",
    "platform": null,
    "project_url": "https://pypi.org/project/cs.buffer/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/cameron_simpson/css/commits/all",
      "URL": "https://bitbucket.org/cameron_simpson/css/commits/all"
    },
    "release_url": "https://pypi.org/project/cs.buffer/20230401/",
    "requires_dist": [
      "cs.deco (>=20230331)",
      "cs.gimmicks (>=20230331)",
      "cs.py3 (>=20220523)"
    ],
    "requires_python": "",
    "summary": "Facilities to do with buffers, particularly CornuCopyBuffer, an automatically refilling buffer to support parsing of data streams.",
    "version": "20230401",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17536800,
  "releases": {
    "20180726": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0fd0a4d2437b33af366e76f01652cc42900be884c18eb4ec3f6ff939e00ed30",
          "md5": "37c65e45ee38e73bd95607b4ff552f39",
          "sha256": "54d39dbc51c667dd553496a4632a7318bdac7d659dc8ca156c8f659b1b12145b"
        },
        "downloads": -1,
        "filename": "cs.buffer-20180726.tar.gz",
        "has_sig": false,
        "md5_digest": "37c65e45ee38e73bd95607b4ff552f39",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7216,
        "upload_time": "2018-07-26T02:11:57",
        "upload_time_iso_8601": "2018-07-26T02:11:57.002626Z",
        "url": "https://files.pythonhosted.org/packages/f0/fd/0a4d2437b33af366e76f01652cc42900be884c18eb4ec3f6ff939e00ed30/cs.buffer-20180726.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20180726.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7baca82f1ba1f6d0ecae52fbb202f4afcd6393df357a7277df939771f0cab4b",
          "md5": "56e492e00b3a0182986d7b37e5e6cdad",
          "sha256": "459d0dbd584751ce3c4ec501b53e7001f55f8d0f27202be2e00a50848ee26d98"
        },
        "downloads": -1,
        "filename": "cs.buffer-20180726.1.tar.gz",
        "has_sig": false,
        "md5_digest": "56e492e00b3a0182986d7b37e5e6cdad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7615,
        "upload_time": "2018-07-26T02:18:15",
        "upload_time_iso_8601": "2018-07-26T02:18:15.467012Z",
        "url": "https://files.pythonhosted.org/packages/f7/ba/ca82f1ba1f6d0ecae52fbb202f4afcd6393df357a7277df939771f0cab4b/cs.buffer-20180726.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20180805": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40d5ceffdbe3bdb6ea5ddafcc6820a82e595864c0556dd62bb6b9d90b0e73a06",
          "md5": "a576c2ba32084764549157f6f6ba882b",
          "sha256": "77346047c0a0cdabe4569a7baa43b2fded7c1fef3a541d7e9efcdd07fd0f242d"
        },
        "downloads": -1,
        "filename": "cs.buffer-20180805.tar.gz",
        "has_sig": false,
        "md5_digest": "a576c2ba32084764549157f6f6ba882b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7606,
        "upload_time": "2018-08-04T23:37:15",
        "upload_time_iso_8601": "2018-08-04T23:37:15.500945Z",
        "url": "https://files.pythonhosted.org/packages/40/d5/ceffdbe3bdb6ea5ddafcc6820a82e595864c0556dd62bb6b9d90b0e73a06/cs.buffer-20180805.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20180810": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51dbf9974703a0a5db04a20dadcc3d9ce64b0520d647c50784947a6eeb874bbf",
          "md5": "36d4a8c1843cc92a5d0639bc0e80af63",
          "sha256": "92e587de7472c4b2f757b4f953332f29ffafcbc29416ce5089ff7a4215b19ba5"
        },
        "downloads": -1,
        "filename": "cs.buffer-20180810.tar.gz",
        "has_sig": false,
        "md5_digest": "36d4a8c1843cc92a5d0639bc0e80af63",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10410,
        "upload_time": "2018-08-09T23:13:41",
        "upload_time_iso_8601": "2018-08-09T23:13:41.321612Z",
        "url": "https://files.pythonhosted.org/packages/51/db/f9974703a0a5db04a20dadcc3d9ce64b0520d647c50784947a6eeb874bbf/cs.buffer-20180810.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20180823": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b0f65bc5f8c4bf7e5149f8765f50998b700e652cc8918b41efe0b2bc49f9bc4",
          "md5": "229b1e721d86fac63da6c42c5a61d2b5",
          "sha256": "cbfafc0257ea9eaaf91744a9e022f46e3c11782932ff5c12db13613282c9fe67"
        },
        "downloads": -1,
        "filename": "cs.buffer-20180823.tar.gz",
        "has_sig": false,
        "md5_digest": "229b1e721d86fac63da6c42c5a61d2b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11120,
        "upload_time": "2018-08-23T02:16:14",
        "upload_time_iso_8601": "2018-08-23T02:16:14.415891Z",
        "url": "https://files.pythonhosted.org/packages/1b/0f/65bc5f8c4bf7e5149f8765f50998b700e652cc8918b41efe0b2bc49f9bc4/cs.buffer-20180823.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20181108": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ee3fd7631bc792752b9d6f8584add81bf90db9ca721e16125a169748bfcc224",
          "md5": "e3aed9e08aecbdd5f49d04e86a6c5859",
          "sha256": "f46874de49f45cd2e73577972bb53a656f2f251b71a5f4808e0227cc10b417d8"
        },
        "downloads": -1,
        "filename": "cs.buffer-20181108.tar.gz",
        "has_sig": false,
        "md5_digest": "e3aed9e08aecbdd5f49d04e86a6c5859",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11132,
        "upload_time": "2018-11-08T03:51:34",
        "upload_time_iso_8601": "2018-11-08T03:51:34.052772Z",
        "url": "https://files.pythonhosted.org/packages/9e/e3/fd7631bc792752b9d6f8584add81bf90db9ca721e16125a169748bfcc224/cs.buffer-20181108.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20181231": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae835fd1a62471838cdc401bd9bc6c88e00009b8e49cbb640eba94197c6ebd35",
          "md5": "3d667843ecee2bb392132728ed896eec",
          "sha256": "2eda809e7bc22f8efe8b7385a276ed0fb5c524c4111141626eba491ed70ab123"
        },
        "downloads": -1,
        "filename": "cs.buffer-20181231.tar.gz",
        "has_sig": false,
        "md5_digest": "3d667843ecee2bb392132728ed896eec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11133,
        "upload_time": "2018-12-31T10:11:28",
        "upload_time_iso_8601": "2018-12-31T10:11:28.970905Z",
        "url": "https://files.pythonhosted.org/packages/ae/83/5fd1a62471838cdc401bd9bc6c88e00009b8e49cbb640eba94197c6ebd35/cs.buffer-20181231.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20191230": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "346bc7521efbe6f0c57763c84b7b2972d2d620f446fecb9832fce92096af7fce",
          "md5": "bbebda28aa7da3e501049356ad3e8b5c",
          "sha256": "95fb940cc7b648e176071263b0f8ee16f819be1e561eda843df6d6bc17a0a88a"
        },
        "downloads": -1,
        "filename": "cs.buffer-20191230.tar.gz",
        "has_sig": false,
        "md5_digest": "bbebda28aa7da3e501049356ad3e8b5c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15821,
        "upload_time": "2019-12-30T02:29:10",
        "upload_time_iso_8601": "2019-12-30T02:29:10.535949Z",
        "url": "https://files.pythonhosted.org/packages/34/6b/c7521efbe6f0c57763c84b7b2972d2d620f446fecb9832fce92096af7fce/cs.buffer-20191230.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20191230.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f71ccf387eeb0aeef5b289061d938faa3c918cb44de0c697fe1812dc03946d8",
          "md5": "25042ac437d3056eb1f8fe8878ca1033",
          "sha256": "c14ea311b797f1a2c672c0315a9859ff567adcbc963aa581692bd0859c186898"
        },
        "downloads": -1,
        "filename": "cs.buffer-20191230.1.tar.gz",
        "has_sig": false,
        "md5_digest": "25042ac437d3056eb1f8fe8878ca1033",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16459,
        "upload_time": "2019-12-30T02:47:45",
        "upload_time_iso_8601": "2019-12-30T02:47:45.478229Z",
        "url": "https://files.pythonhosted.org/packages/3f/71/ccf387eeb0aeef5b289061d938faa3c918cb44de0c697fe1812dc03946d8/cs.buffer-20191230.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20200130": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb0d0f50c10549d7e5feda4726e45b77c6dbcd0c5ba28800c8c5845ec2a4cf7b",
          "md5": "1462295b9fe58dcb780b1561256f9562",
          "sha256": "932d50e018f29900554c95d56d69b12bb224446e57718f4b4e30d5675149d9a3"
        },
        "downloads": -1,
        "filename": "cs.buffer-20200130.tar.gz",
        "has_sig": false,
        "md5_digest": "1462295b9fe58dcb780b1561256f9562",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16462,
        "upload_time": "2020-01-30T06:17:18",
        "upload_time_iso_8601": "2020-01-30T06:17:18.536094Z",
        "url": "https://files.pythonhosted.org/packages/fb/0d/0f50c10549d7e5feda4726e45b77c6dbcd0c5ba28800c8c5845ec2a4cf7b/cs.buffer-20200130.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20200229": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33803ad7e75882c8892f9e5f006522d7b898986b0b7fe894484ffbbe6b0f7607",
          "md5": "c4834a0650278e19bfb8ce7e4d1305aa",
          "sha256": "3ee2ae7d30a6edac9de1b39616566579a1523603f4253ca095f2a7fb8e17d59c"
        },
        "downloads": -1,
        "filename": "cs.buffer-20200229.tar.gz",
        "has_sig": false,
        "md5_digest": "c4834a0650278e19bfb8ce7e4d1305aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16922,
        "upload_time": "2020-02-29T06:32:39",
        "upload_time_iso_8601": "2020-02-29T06:32:39.304600Z",
        "url": "https://files.pythonhosted.org/packages/33/80/3ad7e75882c8892f9e5f006522d7b898986b0b7fe894484ffbbe6b0f7607/cs.buffer-20200229.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20200328": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a7f19dc2ce594df81009c38b98de93fd6508d2fe71a1974f504ac032a491b2f",
          "md5": "2f458c6ee38766aa87fbc4a2b6414e98",
          "sha256": "de378f2d6e7edfe8aaf1718ad57a2ecc45dc9d1271599a79b35ed8357c427a6b"
        },
        "downloads": -1,
        "filename": "cs.buffer-20200328.tar.gz",
        "has_sig": false,
        "md5_digest": "2f458c6ee38766aa87fbc4a2b6414e98",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17328,
        "upload_time": "2020-03-28T10:12:27",
        "upload_time_iso_8601": "2020-03-28T10:12:27.562004Z",
        "url": "https://files.pythonhosted.org/packages/1a/7f/19dc2ce594df81009c38b98de93fd6508d2fe71a1974f504ac032a491b2f/cs.buffer-20200328.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20200517": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5429847641eaf90eb814dedbc8c8f09fe8758eb26f762eec287435262565a179",
          "md5": "b01cd206dbfdcdb801e34489e0b8b5f3",
          "sha256": "9cf570cf41069822a676ea1fc5e775e05eca3dba2e8c43103cdfae731225e723"
        },
        "downloads": -1,
        "filename": "cs.buffer-20200517.tar.gz",
        "has_sig": false,
        "md5_digest": "b01cd206dbfdcdb801e34489e0b8b5f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17222,
        "upload_time": "2020-05-17T07:24:25",
        "upload_time_iso_8601": "2020-05-17T07:24:25.322437Z",
        "url": "https://files.pythonhosted.org/packages/54/29/847641eaf90eb814dedbc8c8f09fe8758eb26f762eec287435262565a179/cs.buffer-20200517.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20201021": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79ff96e6ebaeabae188c878610cc090cb1293c0947d08e2a34de698372870203",
          "md5": "efeb80dc930b84f0d6f1f287620faa03",
          "sha256": "db8e24cbb6dbdb394dbb63bc6692f82743096b0cc3e79ffc254cdc601799c20c"
        },
        "downloads": -1,
        "filename": "cs.buffer-20201021.tar.gz",
        "has_sig": false,
        "md5_digest": "efeb80dc930b84f0d6f1f287620faa03",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31888,
        "upload_time": "2020-10-20T21:47:06",
        "upload_time_iso_8601": "2020-10-20T21:47:06.330766Z",
        "url": "https://files.pythonhosted.org/packages/79/ff/96e6ebaeabae188c878610cc090cb1293c0947d08e2a34de698372870203/cs.buffer-20201021.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20201102": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce27a24eaa335d621b01147d4c095553396ddfe21be6a9e1cd858889eadd382f",
          "md5": "09158934ffb15e98b195920629c2b536",
          "sha256": "489c64ede0a10cfdd9d0c927f56408eec953df849d08a91a916aeaa37b9d9aa3"
        },
        "downloads": -1,
        "filename": "cs.buffer-20201102.tar.gz",
        "has_sig": false,
        "md5_digest": "09158934ffb15e98b195920629c2b536",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32337,
        "upload_time": "2020-11-01T21:43:06",
        "upload_time_iso_8601": "2020-11-01T21:43:06.203580Z",
        "url": "https://files.pythonhosted.org/packages/ce/27/a24eaa335d621b01147d4c095553396ddfe21be6a9e1cd858889eadd382f/cs.buffer-20201102.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20210306": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32427726a8937f41da5e618c1280304228d807dd2694f7211bc3eb7203df9ea0",
          "md5": "35c69ce23b9c6eaf438ce339f67daf5c",
          "sha256": "4f4f7c5035976f006ca9bb28d85a883392c9bfe2a33d3a860a7c5a3110b22358"
        },
        "downloads": -1,
        "filename": "cs.buffer-20210306.tar.gz",
        "has_sig": false,
        "md5_digest": "35c69ce23b9c6eaf438ce339f67daf5c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32581,
        "upload_time": "2021-03-05T22:45:19",
        "upload_time_iso_8601": "2021-03-05T22:45:19.142352Z",
        "url": "https://files.pythonhosted.org/packages/32/42/7726a8937f41da5e618c1280304228d807dd2694f7211bc3eb7203df9ea0/cs.buffer-20210306.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20210316": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c34ddca67d7c40495a188967476bd51d6cb233110c29c5d53f88c2310195b1b7",
          "md5": "6f6ce332f23f2ab676b6d2884965531f",
          "sha256": "6bf545f3b3cae13629cd1e700a7808aa83b9506cb1a5037ab9efb5506648bc4b"
        },
        "downloads": -1,
        "filename": "cs.buffer-20210316.tar.gz",
        "has_sig": false,
        "md5_digest": "6f6ce332f23f2ab676b6d2884965531f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34437,
        "upload_time": "2021-03-15T23:18:48",
        "upload_time_iso_8601": "2021-03-15T23:18:48.185617Z",
        "url": "https://files.pythonhosted.org/packages/c3/4d/dca67d7c40495a188967476bd51d6cb233110c29c5d53f88c2310195b1b7/cs.buffer-20210316.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20211208": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45cff9a58e2f7841cbfd4a2ef8668fbd842972271dfe58dea439c96781ebe7c4",
          "md5": "a87301fd2d40a56d46be9c76ea87cabb",
          "sha256": "9b5b2c019127315635c1223bd2de850fd167f62cc95ea9ed39a2fc79fb5bb79f"
        },
        "downloads": -1,
        "filename": "cs.buffer-20211208.tar.gz",
        "has_sig": false,
        "md5_digest": "a87301fd2d40a56d46be9c76ea87cabb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32221,
        "upload_time": "2021-12-08T09:15:06",
        "upload_time_iso_8601": "2021-12-08T09:15:06.137619Z",
        "url": "https://files.pythonhosted.org/packages/45/cf/f9a58e2f7841cbfd4a2ef8668fbd842972271dfe58dea439c96781ebe7c4/cs.buffer-20211208.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20230212.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09451a9384f42724093cb710a57d64e8fc927dee051fdb272720a86ed323faa8",
          "md5": "99d06bfc2120bf22afbfef3a42fb5356",
          "sha256": "f93e3404686a768458f37fd3bfa074c3afb814d8fb496ac8881a38b6cfbca624"
        },
        "downloads": -1,
        "filename": "cs.buffer-20230212.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "99d06bfc2120bf22afbfef3a42fb5356",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16995,
        "upload_time": "2023-02-12T01:33:41",
        "upload_time_iso_8601": "2023-02-12T01:33:41.634782Z",
        "url": "https://files.pythonhosted.org/packages/09/45/1a9384f42724093cb710a57d64e8fc927dee051fdb272720a86ed323faa8/cs.buffer-20230212.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f41e21afb5aac8abfcd9d97799636ff1c554c91a044a1ee98ec614e18ce3eb5",
          "md5": "8d984ebef93db09c65c912c26bc0aace",
          "sha256": "4f550aa2a3cf8abcadf1c290d3dcc01f6d5cb2ae6d7aece042a7bb406536799f"
        },
        "downloads": -1,
        "filename": "cs.buffer-20230212.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8d984ebef93db09c65c912c26bc0aace",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23122,
        "upload_time": "2023-02-12T01:33:43",
        "upload_time_iso_8601": "2023-02-12T01:33:43.759916Z",
        "url": "https://files.pythonhosted.org/packages/1f/41/e21afb5aac8abfcd9d97799636ff1c554c91a044a1ee98ec614e18ce3eb5/cs.buffer-20230212.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20230212.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b05410b2db11dcd81b2c704569f7191d7146c1036dcdf655597e00c3fd04b01",
          "md5": "e209def6e0860dde30a8df2ac5bb22ae",
          "sha256": "0e267eb2a4029dd176a64407934af229f053703d02b0c9a213387ce85e57fe67"
        },
        "downloads": -1,
        "filename": "cs.buffer-20230212.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e209def6e0860dde30a8df2ac5bb22ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16816,
        "upload_time": "2023-02-12T02:41:48",
        "upload_time_iso_8601": "2023-02-12T02:41:48.879618Z",
        "url": "https://files.pythonhosted.org/packages/7b/05/410b2db11dcd81b2c704569f7191d7146c1036dcdf655597e00c3fd04b01/cs.buffer-20230212.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6eee1044530aa977cb8b810c6852512f6dd0bec514e990fbb5bdd9e2dfdc90a2",
          "md5": "330b47157b89a77a720934b5f124c965",
          "sha256": "4f02c99519db5b7bf970805b571689a9804076303eef9c9a2f8b7780f0045420"
        },
        "downloads": -1,
        "filename": "cs.buffer-20230212.2.tar.gz",
        "has_sig": false,
        "md5_digest": "330b47157b89a77a720934b5f124c965",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23309,
        "upload_time": "2023-02-12T02:41:50",
        "upload_time_iso_8601": "2023-02-12T02:41:50.858827Z",
        "url": "https://files.pythonhosted.org/packages/6e/ee/1044530aa977cb8b810c6852512f6dd0bec514e990fbb5bdd9e2dfdc90a2/cs.buffer-20230212.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20230401": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce5b399abc5faa35db419438e40c3b3a93f90860f50fce42f68ff1060b2799ac",
          "md5": "6ba9bdfe37f7619280a33add6129d311",
          "sha256": "a2b8a23ddff0b469f0c534027a741e03311c15190615448d7d885e69e2bb9af4"
        },
        "downloads": -1,
        "filename": "cs.buffer-20230401-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ba9bdfe37f7619280a33add6129d311",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17127,
        "upload_time": "2023-04-01T05:05:19",
        "upload_time_iso_8601": "2023-04-01T05:05:19.410322Z",
        "url": "https://files.pythonhosted.org/packages/ce/5b/399abc5faa35db419438e40c3b3a93f90860f50fce42f68ff1060b2799ac/cs.buffer-20230401-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20fcff91017ba2bce7cf7b0b61a8d4237fba398e8893fd73a033f98b3338bad7",
          "md5": "ba8409eeef4fccfe5f1bb9b770ee8385",
          "sha256": "f3ba1aa62c7ca6ed1dcc3993d20799d0a189feaa4bae9b606c6a3b4a628ce4c1"
        },
        "downloads": -1,
        "filename": "cs.buffer-20230401.tar.gz",
        "has_sig": false,
        "md5_digest": "ba8409eeef4fccfe5f1bb9b770ee8385",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24239,
        "upload_time": "2023-04-01T05:05:21",
        "upload_time_iso_8601": "2023-04-01T05:05:21.515460Z",
        "url": "https://files.pythonhosted.org/packages/20/fc/ff91017ba2bce7cf7b0b61a8d4237fba398e8893fd73a033f98b3338bad7/cs.buffer-20230401.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce5b399abc5faa35db419438e40c3b3a93f90860f50fce42f68ff1060b2799ac",
        "md5": "6ba9bdfe37f7619280a33add6129d311",
        "sha256": "a2b8a23ddff0b469f0c534027a741e03311c15190615448d7d885e69e2bb9af4"
      },
      "downloads": -1,
      "filename": "cs.buffer-20230401-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6ba9bdfe37f7619280a33add6129d311",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17127,
      "upload_time": "2023-04-01T05:05:19",
      "upload_time_iso_8601": "2023-04-01T05:05:19.410322Z",
      "url": "https://files.pythonhosted.org/packages/ce/5b/399abc5faa35db419438e40c3b3a93f90860f50fce42f68ff1060b2799ac/cs.buffer-20230401-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "20fcff91017ba2bce7cf7b0b61a8d4237fba398e8893fd73a033f98b3338bad7",
        "md5": "ba8409eeef4fccfe5f1bb9b770ee8385",
        "sha256": "f3ba1aa62c7ca6ed1dcc3993d20799d0a189feaa4bae9b606c6a3b4a628ce4c1"
      },
      "downloads": -1,
      "filename": "cs.buffer-20230401.tar.gz",
      "has_sig": false,
      "md5_digest": "ba8409eeef4fccfe5f1bb9b770ee8385",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24239,
      "upload_time": "2023-04-01T05:05:21",
      "upload_time_iso_8601": "2023-04-01T05:05:21.515460Z",
      "url": "https://files.pythonhosted.org/packages/20/fc/ff91017ba2bce7cf7b0b61a8d4237fba398e8893fd73a033f98b3338bad7/cs.buffer-20230401.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}