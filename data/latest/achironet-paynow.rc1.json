{
  "info": {
    "author": "WebDev Projects",
    "author_email": "pkg-dev@webdevworld.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# Paynow Zimbabwe Python SDK\n\nPython SDK for Paynow Zimbabwe's API\n\n# Prerequisites\n\nThis library has a set of prerequisites that must be met for it to work\n\n1.  requests\n\n# Installation\n\nInstall the library using pip\n\n```sh\n$ pip install paynow\n```\n\nand import the Paynow class into your project\n\n```python\n\tfrom paynow import Paynow\n\n\t# Do stuff\n```\n\n---\n\n# Usage example\n\nCreate an instance of the Paynow class optionally setting the result and return url(s)\n\n```python\npaynow = Paynow(\n\t'INTEGRATION_ID',\n\t'INTEGRATION_KEY',\n\t'http://google.com',\n\t'http://google.com'\n\t)\n```\n\nCreate a new payment passing in the reference for that payment (e.g invoice id, or anything that you can use to identify the transaction and the user's email address\n\n```python\npayment = paynow.create_payment('Order #100', 'test@example.com')\n```\n\nYou can then start adding items to the payment\n\n```python\n# Passing in the name of the item and the price of the item\npayment.add('Bananas', 2.50)\npayment.add('Apples', 3.40)\n```\n\nWhen you're finally ready to send your payment to Paynow, you can use the `send` method in the `paynow` object.\n\n```python\n# Save the response from paynow in a variable\nresponse = paynow.send(payment)\n```\n\nThe response from Paynow will b have some useful information like whether the request was successful or not. If it was, for example, it contains the url to redirect the user so they can make the payment. You can view the full list of data contained in the response in our wiki\n\nIf request was successful, you should consider saving the poll url sent from Paynow in the database\n\n```python\nif response.success:\n\n    # Get the link to redirect the user to, then use it as you see fit\n\tlink = response.redirect_url\n\n\t# Get the poll url (used to check the status of a transaction). You might want to save this in your DB\n\tpollUrl = response.poll_url\n```\n\n---\n\n> Mobile Transactions\n\nIf you want to send an express (mobile) checkout request instead, the only thing that differs is the last step. You make a call to the `send_mobile` in the `paynow` object\ninstead of the `send` method.\n\nThe `send_mobile` method unlike the `send` method takes in two additional arguments i.e The phone number to send the payment request to and the mobile money method to use for the request. **Note that currently only ecocash is supported**\n\n```python\n# Save the response from paynow in a variable\nresponse = paynow.send_mobile(payment, '0777777777', 'ecocash')\n```\n\nThe response object is almost identical to the one you get if you send a normal request. With a few differences, firstly, you don't get a url to redirect to. Instead you instructions (which ideally should be shown to the user instructing them how to make payment on their mobile phone)\n\n```python\nif(response.success) :\n\t# Get the poll url (used to check the status of a transaction). You might want to save this in your DB\n    poll_url = response.poll_url\n\n    instructions = response.instructions\n```\n\n# Checking transaction status\n\nThe SDK exposes a handy method that you can use to check the status of a transaction. Once you have instantiated the Paynow class.\n\n```python\n# Check the status of the transaction with the specified poll url\n# Now you see why you need to save that url ;-)\nstatus = paynow.check_transaction_status(poll_url)\n\nif status.paid :\n\t# Yay! Transaction was paid for. Update transaction?\nelse :\n\t# Handle that\n```\n\n# Full Usage Example\n\n```python\nfrom paynow import Paynow\n\n\npaynow = Paynow(\n\t'INTEGRATION_ID',\n\t'INTEGRATION_KEY',\n\t'http://google.com',\n\t'http://google.com'\n\t)\n\npayment = paynow.create_payment('Order', 'test@example.com')\n\npayment.add('Payment for stuff', 1)\n\nresponse = paynow.send_mobile(payment, '0777832735', 'ecocash')\n\n\nif(response.success):\n    poll_url = response.poll_url\n\n    print(\"Poll Url: \", poll_url)\n\n    status = paynow.check_transaction_status(poll_url)\n\n    time.sleep(30)\n\n    print(\"Payment Status: \", status.status)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ifelsegrandmaster/Paynow-Python-SDK",
    "keywords": "achironet paynow-api -paynow-zimbabwe paynow-zimbabwe-api paynow-zimbabwe-sdk",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "achironet-paynow",
    "package_url": "https://pypi.org/project/achironet-paynow/",
    "platform": "",
    "project_url": "https://pypi.org/project/achironet-paynow/",
    "project_urls": {
      "Bug Reports": "https://github.com/ifelsegrandmaster/Paynow-Python-SDK/issues",
      "Homepage": "https://github.com/ifelsegrandmaster/Paynow-Python-SDK",
      "Source": "https://github.com/ifelsegrandmaster/Paynow-Python-SDK"
    },
    "release_url": "https://pypi.org/project/achironet-paynow/1.0.0/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "Paynow Python SDK",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11081558,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f450e87991b33e61d4b16f96009753d1d9ffe8de73d6e6566ff04de8923324b",
          "md5": "79b2514103af8a5b344953caa79bd2a5",
          "sha256": "331810cf22b3123b045e783c484b580b7b34308519b82e0640de9b0eee1581fd"
        },
        "downloads": -1,
        "filename": "achironet_paynow-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79b2514103af8a5b344953caa79bd2a5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7734,
        "upload_time": "2021-08-03T17:17:16",
        "upload_time_iso_8601": "2021-08-03T17:17:16.345766Z",
        "url": "https://files.pythonhosted.org/packages/6f/45/0e87991b33e61d4b16f96009753d1d9ffe8de73d6e6566ff04de8923324b/achironet_paynow-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6f450e87991b33e61d4b16f96009753d1d9ffe8de73d6e6566ff04de8923324b",
        "md5": "79b2514103af8a5b344953caa79bd2a5",
        "sha256": "331810cf22b3123b045e783c484b580b7b34308519b82e0640de9b0eee1581fd"
      },
      "downloads": -1,
      "filename": "achironet_paynow-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "79b2514103af8a5b344953caa79bd2a5",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 7734,
      "upload_time": "2021-08-03T17:17:16",
      "upload_time_iso_8601": "2021-08-03T17:17:16.345766Z",
      "url": "https://files.pythonhosted.org/packages/6f/45/0e87991b33e61d4b16f96009753d1d9ffe8de73d6e6566ff04de8923324b/achironet_paynow-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}