{
  "info": {
    "author": "nevermined-io",
    "author_email": "root@nevermined.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "[![banner](https://raw.githubusercontent.com/nevermined-io/assets/main/images/logo/banner_logo.png)](https://nevermined.io)\n\n# metadata-driver-mongodb\n\n>    üê≥  [Mongo DB](https://www.mongodb.com/) driver for MetadataDB (Python).\n> [nevermined.io](https://nevermined.io)\n>\n>[![PyPI](https://img.shields.io/pypi/v/nevermined-metadata-driver-mongodb.svg)](https://pypi.org/project/nevermined-metadata-driver-mongodb/)\n[![Python package](https://github.com/nevermined-io/metadata-driver-mongodb/workflows/Python%20package/badge.svg)](https://github.com/nevermined-io/mmetadata-driver-mongodb/actions)\n\n---\n\n## Table of Contents\n\n  - [Features](#features)\n  - [Prerequisites](#prerequisites)\n  - [Quickstart](#quickstart)\n  - [Environment variables](#environment-variables)\n  - [Code style](#code-style)\n  - [Testing](#testing)\n  - [New Version](#new-version)\n  - [License](#license)\n\n---\n\n## Features\n\nMongoDB driver to connect implementing MetatadaDB.\n\n## Prerequisites\n\nYou should have running a mongo instance.\n\n## Quickstart\n\nFirst of all we have to specify where is allocated our config.\nTo do that we have to pass the following argument:\n\n```\n--config=/path/of/my/config\n```\n\nIf you do not provide a configuration path, by default the config is expected in the config folder.\n\nIn the configuration we are going to specify the following parameters to\n\n```yaml\n\n    [metadatadb]\n\n    module=mongodb          # You can use one the plugins already created. Currently we have mongodb and bigchaindb.\n    module.path=            # You can specify the location of your custom plugin.\n    db.hostname=localhost   # Address of your MongoDB.\n    db.port=27017           # Port of your Mongodb.\n\n    db.ssl=True             # If True, connections will be made using HTTPS, else using HTTP\n    db.verify_certs=False   # If True, CA certificate will be verified\n    db.ca_cert_path=        # If verifyCerts is True, then path to the CA cert should be provided here\n    db.client_key=          # If db server needs client verification, then provide path to your client key\n    db.client_cert_path=    # If db server needs client verification, then provide path to your client certificate\n\n    db.username=user        # If you are using authentication, mongodb username.\n    db.password=password    # If you are using authentication, mongodb password.\n    db.name=test            # Mongodb database name\n    db.collection=col       # Mongodb collection name\n\n```\n\nOnce you have defined this the only thing that you have to do it is use it:\n\n```python\n\n    metadatadb = MetadataDb(conf)\n    metadatadb.write({\"value\": \"test\"}, id)\n\n```\n\n## Environment variables\n\nWhen you want to instantiate an Metadatadb plugin you can provide the next environment variables:\n\n- **$CONFIG_PATH**\n- **$MODULE**\n- **$DB_HOSTNAME**\n- **$DB_PORT**\n- **$DB_NAME**\n- **$DB_COLLECTION**\n- **$DB_USERNAME**\n- **$DB_PASSWORD**\n\n\n## Queries\n\nCurrently we are supporting a list of queries predefined in order to improve the search:\nAll this queries present a common format:\n```query:{\"name\":[args]}```\n\nThis queries are the following:\n- price\n\n    Could receive one or two parameters. If you only pass one assumes that your query is going to start from 0 to your value.\n\n    Next query:\n    `query:{\"price\":[0,10]}`\n\n    It is transformed to:\n    `{\"service.metadata.base.price\":{\"$gt\": 0, \"$lt\": 10}}`\n\n- license\n\n    It is going to retrieve all the documents with license that you are passing in the parameters,\n    if you do not pass any value retrieve all.\n\n    `{\"license\":[\"Public domain\", \"CC-YB\"]}`\n\n- type\n\n    It is going to check that the following service types are included in the ddo.\n\n    `{\"type\":[\"Access\", \"Metadata\"]}`\n\n- sample\n\n    Check that the metadata include a sample that contains a link of type sample. Do not take parameters.\n\n    `{\"sample\":[]}`\n\n- categories\n\n    Retrieve all the values that contain one of the specifies categories.\n\n    `{\"categories\":[\"weather\", \"meteorology\"]}`\n\n- created\n\n    Retrieve all the values that has been created after a specified date.\n    The parameters available are 'today', 'lastWeek', 'lastMonth', 'lastYear'. If you pass more than one take the bigger interval.\n    If you do not pass any parameter retrieve everything.\n\n    `{\"created\":[\"today\"]}`\n\n- updatedFrequency\n\n    Retrieve all the values that contain one of the specifies updated frecuencies.\n\n    `{\"updatedFrequency\":[\"monthly\"]}`\n\n- text\n\n    Retrieve all the values that match with the text sent.\n\n    `{\"text\":[\"weather\"]}`\n\n\n## Testing\n\nAutomatic tests are setup via Github actions.\nOur test use pytest framework.\n\n## New Version\n\nThe `bumpversion.sh` script helps to bump the project version. You can execute the script using as first argument {major|minor|patch} to bump accordingly the version.\n\n## License\n\n```\nCopyright 2020 Keyko GmbH\nThis product includes software developed at\nBigchainDB GmbH and Ocean Protocol (https://www.oceanprotocol.com/)\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nevermined-io/metadata-driver-mongodb",
    "keywords": "nevermined-metadata-driver-mongodb",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nevermined-metadata-driver-mongodb",
    "package_url": "https://pypi.org/project/nevermined-metadata-driver-mongodb/",
    "platform": "",
    "project_url": "https://pypi.org/project/nevermined-metadata-driver-mongodb/",
    "project_urls": {
      "Homepage": "https://github.com/nevermined-io/metadata-driver-mongodb"
    },
    "release_url": "https://pypi.org/project/nevermined-metadata-driver-mongodb/0.1.0/",
    "requires_dist": [
      "nevermined-metadata-driver-interface",
      "pymongo"
    ],
    "requires_python": "",
    "summary": "üê≥ Mongo DB driver (Python).",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8700558,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e37d41b2878a7b156cdf9a1824686a5a3cbf67e412901cf12a3a4be8200a3bc",
          "md5": "38313cc61547cb0d7df0a18400aef224",
          "sha256": "188740fa74dcf46ab9ed0e94fe38734d6513a584e8152d3ff1216f501b7b5445"
        },
        "downloads": -1,
        "filename": "nevermined_metadata_driver_mongodb-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "38313cc61547cb0d7df0a18400aef224",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 12259,
        "upload_time": "2020-11-19T14:44:55",
        "upload_time_iso_8601": "2020-11-19T14:44:55.027455Z",
        "url": "https://files.pythonhosted.org/packages/4e/37/d41b2878a7b156cdf9a1824686a5a3cbf67e412901cf12a3a4be8200a3bc/nevermined_metadata_driver_mongodb-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62e39c754d561241273cb5effb3f0cb6ef4db8f4e8fd4cccc6a3b69c9ef50fe3",
          "md5": "48b36a23d952cdac529b952a4a042bec",
          "sha256": "d555ab9c237501517566ec6243b37387906c61f39b2c248936f00e94ac2ebbd8"
        },
        "downloads": -1,
        "filename": "nevermined-metadata-driver-mongodb-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "48b36a23d952cdac529b952a4a042bec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16276,
        "upload_time": "2020-11-19T14:44:56",
        "upload_time_iso_8601": "2020-11-19T14:44:56.510461Z",
        "url": "https://files.pythonhosted.org/packages/62/e3/9c754d561241273cb5effb3f0cb6ef4db8f4e8fd4cccc6a3b69c9ef50fe3/nevermined-metadata-driver-mongodb-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4e37d41b2878a7b156cdf9a1824686a5a3cbf67e412901cf12a3a4be8200a3bc",
        "md5": "38313cc61547cb0d7df0a18400aef224",
        "sha256": "188740fa74dcf46ab9ed0e94fe38734d6513a584e8152d3ff1216f501b7b5445"
      },
      "downloads": -1,
      "filename": "nevermined_metadata_driver_mongodb-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "38313cc61547cb0d7df0a18400aef224",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 12259,
      "upload_time": "2020-11-19T14:44:55",
      "upload_time_iso_8601": "2020-11-19T14:44:55.027455Z",
      "url": "https://files.pythonhosted.org/packages/4e/37/d41b2878a7b156cdf9a1824686a5a3cbf67e412901cf12a3a4be8200a3bc/nevermined_metadata_driver_mongodb-0.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "62e39c754d561241273cb5effb3f0cb6ef4db8f4e8fd4cccc6a3b69c9ef50fe3",
        "md5": "48b36a23d952cdac529b952a4a042bec",
        "sha256": "d555ab9c237501517566ec6243b37387906c61f39b2c248936f00e94ac2ebbd8"
      },
      "downloads": -1,
      "filename": "nevermined-metadata-driver-mongodb-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "48b36a23d952cdac529b952a4a042bec",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16276,
      "upload_time": "2020-11-19T14:44:56",
      "upload_time_iso_8601": "2020-11-19T14:44:56.510461Z",
      "url": "https://files.pythonhosted.org/packages/62/e3/9c754d561241273cb5effb3f0cb6ef4db8f4e8fd4cccc6a3b69c9ef50fe3/nevermined-metadata-driver-mongodb-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}