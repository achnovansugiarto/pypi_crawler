{
  "info": {
    "author": "Harshit",
    "author_email": "harshittrivedi78@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# kinesis-stream-consumer\nKinesis stream consumer channelize through redis along with aws autorefreshable session \n\n## Usage\n\n### Requirements\n\n* python >= 3.0\n* boto3 >= 1.13.5\n* kinesis-python >= 0.2.1\n* redis >= 3.5.0\n\n### Installation\n\nInstall with:\n\n```shell\npip install kinesis-stream-consumer\n```\n\nOr, if you're using a development version cloned from this repository:\n\n```shell\ngit clone https://github.com/harshittrivedi78/kinesis-stream-consumer.git\npython kinesis-stream-consumer/setup.py install\n```\nThis will install boto3 >= 1.13.5 and kinesis-python >= 0.2.1 and redis >= 3.5.0\n\n# How to use it?\nThere is two consumer which has to be run parallelly one is kinesis consumer and second is records queue consumer\n(redis). I have added a example.py file in this code base which can be used to check and test the code.\n\n```python\nimport threading\n\nfrom kinesis_stream.consumer import KinesisConsumer\nfrom kinesis_stream.record_queue import RecordQueueConsumer\nfrom kinesis_stream.redis_wrapper import get_redis_conn\n\nredis_conn = get_redis_conn(host=\"localhost\", port=6379, db=\"0\")\n\nstream_name = \"test-kinesis-stream\"\nregion = \"eu-west-1\"\n\nkinesis_consumer = KinesisConsumer(stream_name, region, redis_conn)\nrecord_queue_consumer = RecordQueueConsumer(stream_name, redis_conn)\n\nkinesis_consumer_thread = threading.Thread(name='kinesis_consumer', target=kinesis_consumer.start)\nkinesis_consumer_thread.start()\n\nrecord_queue_consumer_thread = threading.Thread(name='record_queue_consumer', target=record_queue_consumer.start)\nrecord_queue_consumer_thread.start()\n```\n\nOverride handle_message func to do some stuff with the kinesis messages.\n\n```python\nfrom kinesis_stream.record_queue import RecordQueueConsumer as BaseRecordQueueConsumer\n\nclass RecordQueueConsumer(BaseRecordQueueConsumer):\n    def handle_message(self, message):\n        # your code\n        print(message)\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/harshittrivedi78/kinesis-stream-consumer",
    "keywords": "kinesis consumer kinesis-consumer python kinesis-client client",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kinesis-stream-consumer",
    "package_url": "https://pypi.org/project/kinesis-stream-consumer/",
    "platform": "",
    "project_url": "https://pypi.org/project/kinesis-stream-consumer/",
    "project_urls": {
      "Homepage": "https://github.com/harshittrivedi78/kinesis-stream-consumer"
    },
    "release_url": "https://pypi.org/project/kinesis-stream-consumer/1.0.1/",
    "requires_dist": [
      "boto3 (==1.13.5)",
      "kinesis-python (==0.2.1)",
      "redis (==3.5.0)"
    ],
    "requires_python": ">=3",
    "summary": "Kinesis stream consumer(reader) written in python.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7199126,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a507931a78570fca9d1396e15b3d3b74f896c938a5b22d82b3f7d711f5687b7",
          "md5": "791add128666279f581712f53f0420e1",
          "sha256": "56589eb73b60654e68286364039f84314726829d63d6cad2d1fc05524a42297b"
        },
        "downloads": -1,
        "filename": "kinesis_stream_consumer-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "791add128666279f581712f53f0420e1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3",
        "size": 14448,
        "upload_time": "2020-05-08T18:39:26",
        "upload_time_iso_8601": "2020-05-08T18:39:26.203695Z",
        "url": "https://files.pythonhosted.org/packages/0a/50/7931a78570fca9d1396e15b3d3b74f896c938a5b22d82b3f7d711f5687b7/kinesis_stream_consumer-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a70945a4b85e3ec0b694d7248e1525ead788578963855da8feaa75388694af5",
          "md5": "fc296f5f009c7e1a0a5121b9cce97dd2",
          "sha256": "937f464953ee2dac36efa8afb9f81924b4a8f1cfe8c8ad682337d996598cb6e5"
        },
        "downloads": -1,
        "filename": "kinesis-stream-consumer-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fc296f5f009c7e1a0a5121b9cce97dd2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 2344,
        "upload_time": "2020-05-08T18:39:28",
        "upload_time_iso_8601": "2020-05-08T18:39:28.040751Z",
        "url": "https://files.pythonhosted.org/packages/0a/70/945a4b85e3ec0b694d7248e1525ead788578963855da8feaa75388694af5/kinesis-stream-consumer-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a507931a78570fca9d1396e15b3d3b74f896c938a5b22d82b3f7d711f5687b7",
        "md5": "791add128666279f581712f53f0420e1",
        "sha256": "56589eb73b60654e68286364039f84314726829d63d6cad2d1fc05524a42297b"
      },
      "downloads": -1,
      "filename": "kinesis_stream_consumer-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "791add128666279f581712f53f0420e1",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3",
      "size": 14448,
      "upload_time": "2020-05-08T18:39:26",
      "upload_time_iso_8601": "2020-05-08T18:39:26.203695Z",
      "url": "https://files.pythonhosted.org/packages/0a/50/7931a78570fca9d1396e15b3d3b74f896c938a5b22d82b3f7d711f5687b7/kinesis_stream_consumer-1.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a70945a4b85e3ec0b694d7248e1525ead788578963855da8feaa75388694af5",
        "md5": "fc296f5f009c7e1a0a5121b9cce97dd2",
        "sha256": "937f464953ee2dac36efa8afb9f81924b4a8f1cfe8c8ad682337d996598cb6e5"
      },
      "downloads": -1,
      "filename": "kinesis-stream-consumer-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fc296f5f009c7e1a0a5121b9cce97dd2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 2344,
      "upload_time": "2020-05-08T18:39:28",
      "upload_time_iso_8601": "2020-05-08T18:39:28.040751Z",
      "url": "https://files.pythonhosted.org/packages/0a/70/945a4b85e3ec0b694d7248e1525ead788578963855da8feaa75388694af5/kinesis-stream-consumer-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}