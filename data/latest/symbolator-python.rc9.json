{
  "info": {
    "author": "Vanessa Sochat",
    "author_email": "vsoch@users.noreply.github.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
      "Operating System :: Unix",
      "Programming Language :: C",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.3",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development"
    ],
    "description": "# Symbolator\n\nSymbolator is a small library that will allow you to assess if symbols are\ncompatible between a library and binary of interest. The goal is to create\na tester for [build-abi-containers](https://github.com/buildsi/build-abi-containers).\n\n## Usage\n\n### Install\n\nYou can install locally\n\n```bash\n$ git clone git@github.com:buildsi/symbolator.git\n$ cd symbolator\n$ pip install -e .\n```\n\nor from pypi:\n\n```bash\n$ pip install symbolator-python\n```\n\n### Generate Symbols\n\nIf you just want to generate ELF symbols (pyelftools) for a library, you can do:\n\n```bash\n$ symbolator generate <library>\n```\n\nFor example:\n\n```bash\n$ symbolator generate libtcl8.6.so \n...\nsymbol(\"socket@@GLIBC_2.2.5\").\nsymbol_type(\"/home/vanessa/Desktop/Code/symbolator/libtcl8.6.so\",\"socket@@GLIBC_2.2.5\",\"FUNC\").\nsymbol_version(\"/home/vanessa/Desktop/Code/symbolator/libtcl8.6.so\",\"socket@@GLIBC_2.2.5\",\"\").\nsymbol_binding(\"/home/vanessa/Desktop/Code/symbolator/libtcl8.6.so\",\"socket@@GLIBC_2.2.5\",\"GLOBAL\").\nsymbol_visibility(\"/home/vanessa/Desktop/Code/symbolator/libtcl8.6.so\",\"socket@@GLIBC_2.2.5\",\"DEFAULT\").\nsymbol_definition(\"/home/vanessa/Desktop/Code/symbolator/libtcl8.6.so\",\"socket@@GLIBC_2.2.5\",\"UND\").\nhas_symbol(\"/home/vanessa/Desktop/Code/symbolator/libtcl8.6.so\",\"socket@@GLIBC_2.2.5\").\nhas_symbol(\"/home/vanessa/Desktop/Code/symbolator/libtcl8.6.so\",\"socket@@GLIBC_2.2.5\").\n```\n\nIf you want to include system symbols (libraries that are linked to this library of interest):\n\n```bash\n$ symbolator generate --system-libs libtcl8.6.so \n```\n\nCurrently the default output is in ASP for [clingo](https://potassco.org/clingo/) because this is what we need.\nIf you want json output:\n\n```bash\n$ symbolator generate --json libtcl8.6.so\n```\n\nor json with _only_ global symbols:\n\n```bash\n$ symbolator generate --json --globals libtcl8.6.so\n```\n\n\n### Compare Libraries (compare)\n\nIf you have *two* libraries of different versions, a simple comparison will just determine\nif any symbols or arguments have changed. Again we will use pyelftools for the symbol\nextraction. To do this, we just need the \"same\" library\nof two different versions. Let's first make the examples:\n\n```bash\n$ cd examples/cpp\n$ make\n```\n\nto generate:\n\n - libmath-v1.so: an original library\n - libmath-v2.so: a changed library\n\nNow let's run compare:\n\n```bash\n$ symbolator compare libmath-v1.so libmath-v2.so\n```\n```\n...\n{\n    \"is_libA\": [\n        \"/home/vanessa/Desktop/Code/symbolator/examples/cpp/libmath-v1.so\"\n    ],\n    \"is_libB\": [\n        \"/home/vanessa/Desktop/Code/symbolator/examples/cpp/libmath-v2.so\"\n    ],\n    \"symbol_is_missing\": [\n        \"/home/vanessa/Desktop/Code/symbolator/examples/cpp/libmath-v1.so\",\n        \"/home/vanessa/Desktop/Code/symbolator/examples/cpp/libmath-v2.so\",\n        \"MathLibrary.cpp\"\n    ],\n    \"corpus_name_changed\": [\n        \"/home/vanessa/Desktop/Code/symbolator/examples/cpp/libmath-v1.so\",\n        \"/home/vanessa/Desktop/Code/symbolator/examples/cpp/libmath-v2.so\",\n        \"libmath-v1.so\",\n        \"libmath-v2.so\"\n    ]\n}\n```\n\nOr again just the json:\n\n```\n$ symbolator compare libmath-v1.so libmath-v2.so --json\n```\n\n### Assess Compatibility (compat)\n\nTo assess compatibility, we will need:\n\n1. a primary binary of interest\n2. a library known to be working with this binary\n3. a contender library we want to test\n\nThere are examples for different compilers in [examples](examples). For example,\nlet's build the example files for cpp.\n\n```bash\n$ cd examples/cpp\n$ make\n```\n\nThis will generate:\n\n - math-client: our main binary of interest\n - libmath-v1.so: a known working library\n - libmath-v2.so: a contender library\n\nIf you look at the example, the contender library should not be compatible\nbecause there is a change in a parameter type. We might not see this for C\nbut we should see a different symbol (mangled string) for C++. To run\nthe test:\n\n```bash\n$ symbolator compat math-client libmath-v1.so libmath-v2.so\n% binary           : math-client\n% working library  : libmath-v1.so\n% contender library: libmath-v2.so\nMissing Symbol Count: 1\nMissing Symbols:\n['math-client', 'libmath-v2.so', '_ZN11MathLibrary10Arithmetic3AddEdd']\n```\n\nNote that this is the right answer for the example - we are missing that symbol!\nBy default this uses [is_compatible.lp](symbolator/facts/is_compatible.lp)\nIf you just want to dump symbols to use with some other logic program you\ncan do:\n\n```bash\n$ symbolator compat --dump math-client libmath-v1.so libmath-v2.so\n```\n\nOr to get json of just the answer:\n\n```bash\n$ symbolator compat --json math-client libmath-v1.so libmath-v2.so \n{\n    \"binary\": \"/home/vanessa/Desktop/Code/symbolator/examples/cpp/math-client\",\n    \"library_working\": \"/home/vanessa/Desktop/Code/symbolator/examples/cpp/libmath-v1.so\",\n    \"library_contender\": \"/home/vanessa/Desktop/Code/symbolator/examples/cpp/libmath-v2.so\",\n    \"missing_symbols\": [\n        \"/home/vanessa/Desktop/Code/symbolator/examples/cpp/math-client\",\n        \"/home/vanessa/Desktop/Code/symbolator/examples/cpp/libmath-v2.so\",\n        \"_ZN11MathLibrary10Arithmetic3AddEdd\"\n    ],\n    \"count_missing_symbols\": \"1\"\n}\n```\n\nAgain, this is just using pyelftools to get the symbols directly from elf.\n\n\n### Smeagle Stability Model\n\nAs of version 0.0.15, we have support to read in json output from [Smeagle](https://github.com/buildsi/Smeagle) or [gosmeagle](https://github.com/vsoch/gosmeagle) and then to to a more detailed stability model. Let's say we have two output files from smeagle,\nsuch as in [examples/smeagle](examples/smeagle) generated with gosmeagle doing the following:\n\n```bash\n$ cd examples/cpp\n$ make\n$ cd ../smeagle\n$ gosmeagle parse ../cpp/libmath-v1.so --pretty > libmath-v1.so.json\n$ gosmeagle parse ../cpp/libmath-v2.so --pretty > libmath-v2.so.json\n```\n\nWe can then run symbolator to use the json to do a stability test.\n\n```bash\n$ symbolator stability-test examples/smeagle/libmath-v1.so.json examples/smeagle/libmath-v2.so.json --detail\nLibraries are not stable: 0 missing exports, 2 missing_imports\n\nMissing Imports\n---------------\n _ZN11MathLibrary10Arithmetic3AddEdd Basic %rdi 0\n _ZN11MathLibrary10Arithmetic3AddEdd Basic %rsi 0\n```\n\nThis can be used programatically to get json output as well.\n\n### Splice with Libraries\n\nLet's say we also have a binary of interest, but we are just interested in inspecting the symbols (and looking for any undefined)\nor asking to \"splice\" a library of interest in for some known dependency - we can do this with \"splice.\" When just given\na single binary, it will read in the binary, find all dependnecy libraries, and then output any undefined symbols (which there should not\nbe any).\n\n```bash\n$ symbolator splice math-client\n\n% binary : math-client\n% splice : libmath-v1.so->libmath-v2.so\n\nMissing Symbols:\n\n=> math-client\n   __gmon_start__\n   _ITM_deregisterTMCloneTable\n   _ITM_registerTMCloneTable\n\n...\n```\nAnd now let's say we want to splice in the other version of libmath instead.\n\n```bash\n$ symbolator splice math-client -s libmath-v1.so=libmath-v2.so\n```\n\nIf the library primary name were the same (e.g., libmath.1.so vs libmath.2.so) we could just do:\n\n```bash\n$ symbolator splice math-client -s libmath.2.so\n```\n```bash\n% binary : math-client\n% splice : libmath-v1.so->libmath-v2.so\n\nMissing Symbols:\n\n=> math-client\n   _ZN11MathLibrary10Arithmetic3AddEdd\n   __gmon_start__\n   _ITM_deregisterTMCloneTable\n   _ITM_registerTMCloneTable\n```\n\nto use the prefix. But since the prefix has a different name, we need to explicitly name it.\nTo get output as json:\n\n```bash\n$ symbolator splice math-client -s libmath.2.so --json\n```\nIf we generated symbols for spliced and unspliced (given a changed library) we can then do a quick diff\n(across all symbols) and find that the only difference is the missing symbol from the changed library:\n\n```bash\n[x for x in values if x not in compares]\n['_ZN11MathLibrary10Arithmetic3AddEdd']\n```\n\n#### Delayed Splice\n\nIf we want to dump json to splice later, we can do the following:\n\n```bash\n$ mkdir -p examples/splice\n$ cd examples/splice\n$ symbolator generate ../cpp/math-client --system-libs --json > math-client.json\n$ symbolator generate ../cpp/libmath-v2.so --system-libs --json > libmath-v2.so.json\n```\n\nAnd then do a similar splice, but with the input jsons.\n\n```bash\n$ symbolator jsonsplice math-client.json -s libmath-v1.so=libmath-v2.so.json\n```\n\nor without the splice:\n\n```bash\n$ symbolator jsonsplice math-client.json\n```\n\nThe output is the same (we see the missing symbol) but with this method we can run the extractions separately,\nsave the data, and then do the splice from the json later!\n\n### Splice with Smeagle\n\n**under development**\n\nNote that this won't work until either smeagle can handle loading these libraries without segfaulting. The exercise will look something like the following.\n\nIf we want to run this similar analysis with Smeagle facts, then we actually need to generate all the facts in advance, and \"throw them into a soup.\"\nWe can do that by way of discovery with ldd and then generation, and then handing off the json to the splice.\n\n```bash\n$ ldd examples/cpp/math-client\n\tlinux-vdso.so.1 (0x00007ffc05b96000)\n\tlibmath-v1.so => not found\n\tlibstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f6854aff000)\n\tlibc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f685490d000)\n\tlibm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f68547be000)\n\t/lib64/ld-linux-x86-64.so.2 (0x00007f6854d03000)\n\tlibgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f68547a3000)\n```\n\nFrom the above we run:\n\n```bash\n$ mkdir -p examples/smeagle/global\n$ cd examples/smeagle/global\n$ gosmeagle parse ../../cpp/libmath-v1.so --pretty > libmath-v1.so.json\n$ gosmeagle parse ../../cpp/math-client --pretty > math-client.json\n$ gosmeagle parse /lib/modules/5.4.0-89-generic/vdso/vdso64.so --pretty > vdso64.so.json\n```\nThese do not have dwarf\n\n```bash\n/usr/lib/x86_64-linux-gnu/libstdc++.so.6\n/lib/x86_64-linux-gnu/libc.so.6\n/lib64/ld-linux-x86-64.so.2\n/lib/x86_64-linux-gnu/libgcc_s.so.1\n```\nAnd Smeagle c++ can't parse them either.\n\n```bash\n# ./build/standalone/Smeagle -l /lib/x86_64-linux-gnu/libgcc_s.so.1 \nSegmentation fault (core dumped)\n```\n\n### Tests\n\nAfter installing symbolator:\n\n```bash\n$ cd tests/\n$ ./test_client.sh\n```\n\n### Container Install\n\nYou can also build symbolator into a container!\n\n```bash\n$ docker build -t symbolator .\n```\n\nAnd then interact with symbolator either via the entrypoint or a shell.\n\n```\n# shell\n$ docker run --entrypoint bash -it symbolator\n\n# entrypoint\n$ docker run -it symbolator\n```\n\nThe examples are built into the container for easy testing.\n\n```bash\n$ cd examples/cpp\n$ symbolator compat math-client libmath-v1.so libmath-v2.so \n% binary           : math-client\n% working library  : libmath-v1.so\n% contender library: libmath-v2.so\nCompatible\n```\n\n### Examples\n\nThe [examples](examples) folder has code for several different compilers\nyou can test.\n\n - **g++**\n - **gcc**\n - **gcc-10**\n - **icc**\n - **icpc**\n - **clang**\n - **clang-10**\n - **clang++**  \n \n \n### License\n\nThis project is part of Spack. Spack is distributed under the terms of both the MIT license and the Apache License (Version 2.0). Users may choose either license, at their option.\n\nAll new contributions must be made under both the MIT and Apache-2.0 licenses.\n\nSee LICENSE-MIT, LICENSE-APACHE, COPYRIGHT, and NOTICE for details.\n\nSPDX-License-Identifier: (Apache-2.0 OR MIT)\n\nLLNL-CODE-811652",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/buildsi/symbolator",
    "keywords": "abi,compatibility,symbols",
    "license": "LICENSE",
    "maintainer": "Vanessa Sochat",
    "maintainer_email": "",
    "name": "symbolator-python",
    "package_url": "https://pypi.org/project/symbolator-python/",
    "platform": "",
    "project_url": "https://pypi.org/project/symbolator-python/",
    "project_urls": {
      "Homepage": "https://github.com/buildsi/symbolator"
    },
    "release_url": "https://pypi.org/project/symbolator-python/0.0.18/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Assess compatibility of two binaries based on symbols.",
    "version": "0.0.18",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11968834,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "178493e7101e225e966d83367dc203b1794495587169f6c14c345b5418aeed71",
          "md5": "ce8a5e130296f83b84b6a9f1da92ac0a",
          "sha256": "20e7bc3c18c48c84b3242ca6cd2674d6761fc968536c7dc9f240807fc5de3581"
        },
        "downloads": -1,
        "filename": "symbolator-python-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ce8a5e130296f83b84b6a9f1da92ac0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18701,
        "upload_time": "2021-06-16T20:25:32",
        "upload_time_iso_8601": "2021-06-16T20:25:32.265768Z",
        "url": "https://files.pythonhosted.org/packages/17/84/93e7101e225e966d83367dc203b1794495587169f6c14c345b5418aeed71/symbolator-python-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82aa18702c95ff5dd27f85c149d8da35b8489c7b43ab089f3e27ad4ed5fbb110",
          "md5": "2bb1925c66899791fa0e03f77109787c",
          "sha256": "60a1597aab26e0dde2c630221d70f8bdca68514f822cd703fd70356f06487cdd"
        },
        "downloads": -1,
        "filename": "symbolator-python-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "2bb1925c66899791fa0e03f77109787c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19162,
        "upload_time": "2021-06-19T20:14:03",
        "upload_time_iso_8601": "2021-06-19T20:14:03.126256Z",
        "url": "https://files.pythonhosted.org/packages/82/aa/18702c95ff5dd27f85c149d8da35b8489c7b43ab089f3e27ad4ed5fbb110/symbolator-python-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c11a8f96cc9ff2173656497a56c421ea226c1e0ee7b84997cfd7ff473cfbf10",
          "md5": "7be1e27c9a7f6f67f5a840104c9791a7",
          "sha256": "ffcd43afd0c5c4611674c0f422e98a7077919a95f640d54e658b666cba8765c8"
        },
        "downloads": -1,
        "filename": "symbolator-python-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "7be1e27c9a7f6f67f5a840104c9791a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19215,
        "upload_time": "2021-06-19T21:00:21",
        "upload_time_iso_8601": "2021-06-19T21:00:21.650968Z",
        "url": "https://files.pythonhosted.org/packages/5c/11/a8f96cc9ff2173656497a56c421ea226c1e0ee7b84997cfd7ff473cfbf10/symbolator-python-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8982378e6d806510aa3a05d5d10b5cf101db54b7e1b3705081d1e13788ce144c",
          "md5": "7d5fbfcd96673c20838cf678271896ec",
          "sha256": "ec53bac48bd82c687a1a275e10f9c56597194c68dd0ed26e9cd7630073f771e8"
        },
        "downloads": -1,
        "filename": "symbolator-python-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "7d5fbfcd96673c20838cf678271896ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19220,
        "upload_time": "2021-06-19T21:06:45",
        "upload_time_iso_8601": "2021-06-19T21:06:45.652476Z",
        "url": "https://files.pythonhosted.org/packages/89/82/378e6d806510aa3a05d5d10b5cf101db54b7e1b3705081d1e13788ce144c/symbolator-python-0.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4f538bc6ce3f5a337c5d853967183f5b04acd34fcf71e707b21a69d7c79ba02",
          "md5": "a7f1ee8244ad9181aaffb9093f9cce55",
          "sha256": "2346dd5f1943bef2b9ea9bf57b1d1abeaf13d34408c3dea56376961d4ab88398"
        },
        "downloads": -1,
        "filename": "symbolator-python-0.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "a7f1ee8244ad9181aaffb9093f9cce55",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21112,
        "upload_time": "2021-10-31T21:33:32",
        "upload_time_iso_8601": "2021-10-31T21:33:32.371769Z",
        "url": "https://files.pythonhosted.org/packages/b4/f5/38bc6ce3f5a337c5d853967183f5b04acd34fcf71e707b21a69d7c79ba02/symbolator-python-0.0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04c172be164e50d47f08b1194feaede4b030adaf9a44692af4788f06eb1dbc20",
          "md5": "7af69ee00816d380b270f6e28e4b6f85",
          "sha256": "317347c1c49c817fd360d00edb1b948310868d06b479a36771d4be023611c754"
        },
        "downloads": -1,
        "filename": "symbolator-python-0.0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "7af69ee00816d380b270f6e28e4b6f85",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27052,
        "upload_time": "2021-11-01T18:08:32",
        "upload_time_iso_8601": "2021-11-01T18:08:32.142089Z",
        "url": "https://files.pythonhosted.org/packages/04/c1/72be164e50d47f08b1194feaede4b030adaf9a44692af4788f06eb1dbc20/symbolator-python-0.0.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26204fe01dea1850660ac4df6cfd73337e826b17ac616733477005e63e261b9d",
          "md5": "7c0ab3635638fb7507fc3d0944025086",
          "sha256": "738e357ced70b846088e9524282e6b9a006631320da5036fe79cf206e777cd81"
        },
        "downloads": -1,
        "filename": "symbolator-python-0.0.16.tar.gz",
        "has_sig": false,
        "md5_digest": "7c0ab3635638fb7507fc3d0944025086",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27055,
        "upload_time": "2021-11-01T18:25:18",
        "upload_time_iso_8601": "2021-11-01T18:25:18.058432Z",
        "url": "https://files.pythonhosted.org/packages/26/20/4fe01dea1850660ac4df6cfd73337e826b17ac616733477005e63e261b9d/symbolator-python-0.0.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ec06a37f2cdb850d890eef7b9b4b687e83d111774b7338cf4e131efcaebb1c5",
          "md5": "e091acfb23db58256e7191d13d9c3fb5",
          "sha256": "c6e2092248ed59c5ea5501e1504b8272ed9c61f6eb85ea23cd72d11c53860def"
        },
        "downloads": -1,
        "filename": "symbolator-python-0.0.17.tar.gz",
        "has_sig": false,
        "md5_digest": "e091acfb23db58256e7191d13d9c3fb5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32865,
        "upload_time": "2021-11-04T22:41:23",
        "upload_time_iso_8601": "2021-11-04T22:41:23.633215Z",
        "url": "https://files.pythonhosted.org/packages/8e/c0/6a37f2cdb850d890eef7b9b4b687e83d111774b7338cf4e131efcaebb1c5/symbolator-python-0.0.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbd497091c05e242f4f799a458d7467c9f88a7e8d31c7de8ab743867e52a3c4c",
          "md5": "48f17ea74f1d3684579a3cb0cf1436c8",
          "sha256": "edff9fe411da22d76b91d757ab85c0c8c55c781a864375b4c05ff04b2f24d8e6"
        },
        "downloads": -1,
        "filename": "symbolator-python-0.0.18.tar.gz",
        "has_sig": false,
        "md5_digest": "48f17ea74f1d3684579a3cb0cf1436c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32963,
        "upload_time": "2021-11-09T06:40:14",
        "upload_time_iso_8601": "2021-11-09T06:40:14.997898Z",
        "url": "https://files.pythonhosted.org/packages/fb/d4/97091c05e242f4f799a458d7467c9f88a7e8d31c7de8ab743867e52a3c4c/symbolator-python-0.0.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fbd497091c05e242f4f799a458d7467c9f88a7e8d31c7de8ab743867e52a3c4c",
        "md5": "48f17ea74f1d3684579a3cb0cf1436c8",
        "sha256": "edff9fe411da22d76b91d757ab85c0c8c55c781a864375b4c05ff04b2f24d8e6"
      },
      "downloads": -1,
      "filename": "symbolator-python-0.0.18.tar.gz",
      "has_sig": false,
      "md5_digest": "48f17ea74f1d3684579a3cb0cf1436c8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 32963,
      "upload_time": "2021-11-09T06:40:14",
      "upload_time_iso_8601": "2021-11-09T06:40:14.997898Z",
      "url": "https://files.pythonhosted.org/packages/fb/d4/97091c05e242f4f799a458d7467c9f88a7e8d31c7de8ab743867e52a3c4c/symbolator-python-0.0.18.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}