{
  "info": {
    "author": "Daniel Rodriguez Rodriguez",
    "author_email": "danielrodriguezrodriguez.pks@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Request Facade\n\nEsta librería es una fachada de la librería `requests` que añade una abstracción de la autenticación JWT mediante\nconfiguración en el archivo `properties.ini`\n\n## Propiedades\n\nDebido a la naturaleza de la librería y que deberemos de indicar en texto claro user y password, posee una forma\nde encriptar dicho contenido mediante una variable de entorno `FERNET_KEY` de la cual se extraerá una llave necesaria\npara desencriptar usuario y password que están en el `properties.ini` y asi no vulnerar ningún principio de seguridad.\n\nExisten dos grupos de propiedades:  \n`ENDPOINT_CONFIG`: Relacionado con la configuración que se encarga de saber donde encontrar el endpoint del API a\nconsultar para obtener la autenticación.\n`AUTH`: Relaciona con el formato y datos que se le enviaran al endpoint de la autenticación.\n\n### base_url_api\n\nEs el nombre o ip del host junto con su puerto de donde está localizada el API de autenticación como por ejemplo\n`http://127.0.0.1:5000`\n\n### base_endpoint_api\n\nParte del endpoint que es fijo normalmente usado para marcar la versión del API y mantener una retrocompatibilidad en el\nlargo plazo.\n\nEjemplo:\n`/v1/api` que unido a la propiedad anterior tendriamos algo como `http://127.0.0.1:5000/v1/api` y a partir de esta\nruta se podria acceder a la version 1 de dicha api evitando asi que modificaciones futuras afecten a cosas antiguas.\n\n### endpoint_auth\n\nPart del endpoint en concreto que se usa para la autenticacion como por ejemplo `/auth` o `/login` que mezclado con las\npropiedades anteriores quedari asi `http://127.0.0.1:5000/v1/api/auth`\n\n### base_url_api\n\nNo se deberia de tocar es un punto de union de las tres propiedades anteriores para realizar llamadas mas simples en el\ncódigo.\n\n## AUTH\n\nNormalmente cuando enviamos los datos para la petición de `auth` el cuerpo de la peticion suele tener un aspecto similar\na `{\"username\": \"xxxxx\", \"password\": \"xxxxx\"}` pero otras veces es de este modo `{\"email\": \"xxxxx\", \"pass\": \"xxxxx\"}`\npara controlar todas estas variantes se a dado la opcion de iniciar el nombre de las `keys` de los json que se envian\nhacia el API de autenticación de este modo adaptarse a varios casos.\n\n### user_key\n\nKey del parametro usado para el `usuario`.\n\nEjemplo:  \n`{\"{user_key}\": \"xxxxx\", \"password\": \"xxxxx\"}`\n\n### user_value\n\nValor del parametro usado para el `usuario`.\n\nEjemplo:   \n`{\"username\": \"{user_value}\", \"password\": \"xxxxx\"}`\n\n### password_key\n\nKey del parametro usado para el `password`.\n\nEjemplo:  \n`{\"username\": \"xxxxx\", \"{password_key}\": \"xxxxx\"}`\n\n### password_value\n\nValor del parametro usado para el `password`.\n\nEjemplo:   \n`{\"username\": \"xxxxx\", \"password\": \"{password_value}\"}`\n\n# Configurando propiedades\n\nAñadir que aparte de esta configuración existe una variable de entorno en el sistema llamada `FERNET_KEY`, dicha llave\nse puede generar de cualquier forma que sea valida para la libreria de `cryptography==37.0.2` en particular para la\nclase\n`Fernet` del paquete `from  import Fernet`.\n\nSe recomienda usar esto para generar llaves validad:\n\n```python\nfrom generic_utils import CleanDevGenericUtils\n\nutils: CleanDevGenericUtils = CleanDevGenericUtils\n\nif __name__ == '__main__':\n    print(utils.get_fernet_key())\n```\n\n`mrvhq-I67IuR_vFh3L_bG-9DqVO7WOo84vxnjQdD_qg=`\n\nUna vez tengamos dicha llave la importamos al sistema `export FERNET_KEY=mrvhq-I67IuR_vFh3L_bG-9DqVO7WOo84vxnjQdD_qg=`\n\nA continuación, encriptamos el usuario y la password para la autenticacion de la siguiente forma:\n\n```python\nfrom generic_utils import CleanDevGenericUtils\nfrom requests_facade.config import FERNET_KEY\n\nutils: CleanDevGenericUtils = CleanDevGenericUtils\n\nif __name__ == '__main__':\n    username = 'admin'\n    password = '123456789'\n\n    print(utils.encrypt(username, FERNET_KEY))\n    print(utils.encrypt(password, FERNET_KEY))\n```\n\n`gAAAAABilNDxJbYFfPDVPi64C0wA5jOsdu6O83WVNx3-Vg2BOUJ5W8EI-AKoOfindZJJN58SOxq2klRLfqTGy6failyB_GtAAg==`  \n`gAAAAABilNDxyv1pb55y8LpETyu5fBQ0AegC9z1uV8uMKIRKyZXljMVHtbJK3e4DgZvyUlI2abfqKJ9ndiV9b6cUkXAtBUZomg==`\n\ny estos son los valores que deberemos de poner en el `properties.ini` respectivamente.\n\n\n## Ejemplo de uso\nUna vez configurado todas las configuraciones hacemos lo siguiente\n\n```properties\n[ENDPOINT_CONFIG]\nbase_url_api=http://127.0.0.1:5000\nbase_endpoint_api=\nendpoint_auth=/auth\nurl_api=%(base_url_api)s%(base_endpoint_api)s\n[AUTH]\nuser_key=email\nuser_value=gAAAAABikQpzO4MnZd-u5Hg2i3-kdS1FkWVPr3s5xwDxsaS-1zaOj7S_XcTOV4f4qIIzW1liJaqOc_hewjRk1Udj6DS4Vj8vrNisZBZYsI-6Nmf7RdIqn9s=\npassword_key=password\npassword_value=gAAAAABikQpzpoABdCzse9Nop6dnDfcSWsKdQiufY8Q-mMsmF2Xfu_mXMM4CI-cevurPZrB7ngjD8kuCFycV78mO2zCqADZ68A==\n```\n\n```python\nfrom requests_facade import RequestFacade\nfrom requests import Response\n\nif __name__ == '__main__':\n    req_facade: RequestFacade = RequestFacade(need_auth=True)\n    resp: Response = req_facade.get(url='http://127.0.0.1:5000/test/jwt')\n    resp: Response = req_facade.get(url='http://127.0.0.1:5000/test')\n```\n\nEl endpoint `http://127.0.0.1:5000/test/jwt` esta securizado mientras que `http://127.0.0.1:5000/test` no lo esta como\nse observa en el ejemplo no tenemos que preocuparnos de añadir el `Bearer` en las cabeceras ya que lo hace automaticamente.\n\nUnicamente resta con usar el metodo `req_facade.get()` o `req_facade.post()` para realizar peticiones al API. \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/cleansoftware/libs/public/cleandev-req-facade",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cleandev-requests-facade",
    "package_url": "https://pypi.org/project/cleandev-requests-facade/",
    "platform": null,
    "project_url": "https://pypi.org/project/cleandev-requests-facade/",
    "project_urls": {
      "Bug Tracker": "https://gitlab.com/cleansoftware/libs/public/cleandev-req-facade/-/issues",
      "Homepage": "https://gitlab.com/cleansoftware/libs/public/cleandev-req-facade"
    },
    "release_url": "https://pypi.org/project/cleandev-requests-facade/0.1.5/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "Fachada para autenticación de JWT",
    "version": "0.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13978427,
  "releases": {
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4673f2949f2061e0432fc0c86c264d059bb53e38acf8831893f263f9a75c4b0",
          "md5": "7d2d2c910fdd80989c88ec4fc00b22d9",
          "sha256": "a5a5aea4cf75fea31db33ec099db74256da4d5b64c16d4abe64aaec79ac09775"
        },
        "downloads": -1,
        "filename": "cleandev-requests-facade-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "7d2d2c910fdd80989c88ec4fc00b22d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 4583,
        "upload_time": "2022-05-30T14:32:12",
        "upload_time_iso_8601": "2022-05-30T14:32:12.286512Z",
        "url": "https://files.pythonhosted.org/packages/a4/67/3f2949f2061e0432fc0c86c264d059bb53e38acf8831893f263f9a75c4b0/cleandev-requests-facade-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4673f2949f2061e0432fc0c86c264d059bb53e38acf8831893f263f9a75c4b0",
        "md5": "7d2d2c910fdd80989c88ec4fc00b22d9",
        "sha256": "a5a5aea4cf75fea31db33ec099db74256da4d5b64c16d4abe64aaec79ac09775"
      },
      "downloads": -1,
      "filename": "cleandev-requests-facade-0.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "7d2d2c910fdd80989c88ec4fc00b22d9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 4583,
      "upload_time": "2022-05-30T14:32:12",
      "upload_time_iso_8601": "2022-05-30T14:32:12.286512Z",
      "url": "https://files.pythonhosted.org/packages/a4/67/3f2949f2061e0432fc0c86c264d059bb53e38acf8831893f263f9a75c4b0/cleandev-requests-facade-0.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}