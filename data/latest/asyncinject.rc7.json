{
  "info": {
    "author": "Simon Willison",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# asyncinject\n\n[![PyPI](https://img.shields.io/pypi/v/asyncinject.svg)](https://pypi.org/project/asyncinject/)\n[![Changelog](https://img.shields.io/github/v/release/simonw/asyncinject?include_prereleases&label=changelog)](https://github.com/simonw/asyncinject/releases)\n[![License](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](https://github.com/simonw/asyncinject/blob/main/LICENSE)\n\nRun async workflows using pytest-fixtures-style dependency injection\n\n## Installation\n\nInstall this library using `pip`:\n\n    $ pip install asyncinject\n\n## Usage\n\nThis library is inspired by [pytest fixtures](https://docs.pytest.org/en/6.2.x/fixture.html).\n\nThe idea is to simplify executing parallel `asyncio` operations by allowing them to be defined using a collection of functions, where the function arguments represent dependent functions that need to be executed first.\n\nThe library can then create and execute a plan for executing the required functions in parallel in the most efficient sequence possible.\n\nHere's an example, using the [httpx](https://www.python-httpx.org/) HTTP library.\n\n```python\nfrom asyncinject import Registry\nimport httpx\n\n\nasync def get(url):\n    async with httpx.AsyncClient() as client:\n        return (await client.get(url)).text\n\nasync def example():\n    return await get(\"http://www.example.com/\")\n\nasync def simonwillison():\n    return await get(\"https://simonwillison.net/search/?tag=empty\")\n\nasync def both(example, simonwillison):\n    return example + \"\\n\\n\" + simonwillison\n\nregistry = Registry(example, simonwillison, both)\ncombined = await registry.resolve(both)\nprint(combined)\n```\nIf you run this in `ipython` (which supports top-level await) you will see output that combines HTML from both of those pages.\n\nThe HTTP requests to `www.example.com` and `simonwillison.net` will be performed in parallel.\n\nThe library notices that `both()` takes two arguments which are the names of other registered `async def` functions, and will construct an execution plan that executes those two functions in parallel, then passes their results to the `both()` method.\n\n### Resolving an unregistered function\n\nYou don't need to register the final function that you pass to `.resolve()` - if you pass an unregistered function, the library will introspect the function's parameters and resolve them directly.\n\nThis works with both regular and async functions:\n\n```python\nasync def one():\n    return 1\n\nasync def two():\n    return 2\n\nregistry = Registry(one, two)\n\n# async def works here too:\ndef three(one, two):\n    return one + two\n\nprint(await registry.resolve(three))\n# Prints 3\n```\n\n### Parameters are passed through\n\nYour dependent functions can require keyword arguments which have been passed to the `.resolve()` call:\n\n```python\nasync def get_param_1(param1):\n    return await get(param1)\n\nasync def get_param_2(param2):\n    return await get(param2)\n\nasync def both(get_param_1, get_param_2):\n    return get_param_1 + \"\\n\\n\" + get_param_2\n\n\ncombined = await Registry(get_param_1, get_param_2, both).resolve(\n    both,\n    param1 = \"http://www.example.com/\",\n    param2 = \"https://simonwillison.net/search/?tag=empty\"\n)\nprint(combined)\n```\n### Parameters with default values are ignored\n\nYou can opt a parameter out of the dependency injection mechanism by assigning it a default value:\n\n```python\nasync def go(calc1, x=5):\n    return calc1 + x\n\nasync def calc1():\n    return 5\n\nprint(await Registry(calc1, go).resolve(go))\n# Prints 10\n```\n\n### Tracking with a timer\n\nYou can pass a `timer=` callable to the `Registry` constructor to gather timing information about executed tasks..  Your function should take three positional arguments:\n\n- `name` - the name of the function that is being timed\n- `start` - the time that it started executing, using `time.perf_counter()` ([perf_counter() docs](https://docs.python.org/3/library/time.html#time.perf_counter))\n- `end` - the time that it finished executing\n\nYou can use `print` here too:\n\n```python\ncombined = await Registry(\n    get_param_1, get_param_2, both, timer=print\n).resolve(\n    both,\n    param1 = \"http://www.example.com/\",\n    param2 = \"https://simonwillison.net/search/?tag=empty\"\n)\n```\nThis will output:\n```\nget_param_1 436633.584580685 436633.797921747\nget_param_2 436633.641832699 436634.196364347\nboth 436634.196570217 436634.196575639\n```\n### Turning off parallel execution\n\nBy default, functions that can run in parallel according to the execution plan will run in parallel using `asyncio.gather()`.\n\nYou can disable this parallel exection by passing `parallel=False` to the `Registry` constructor, or by setting `registry.parallel = False` after the registry object has been created.\n\nThis is mainly useful for benchmarking the difference between parallel and serial execution for your project.\n\n## Development\n\nTo contribute to this library, first checkout the code. Then create a new virtual environment:\n\n    cd asyncinject\n    python -m venv venv\n    source venv/bin/activate\n\nNow install the dependencies and test dependencies:\n\n    pip install -e '.[test]'\n\nTo run the tests:\n\n    pytest\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/simonw/asyncinject",
    "keywords": "",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "asyncinject",
    "package_url": "https://pypi.org/project/asyncinject/",
    "platform": null,
    "project_url": "https://pypi.org/project/asyncinject/",
    "project_urls": {
      "CI": "https://github.com/simonw/asyncinject/actions",
      "Changelog": "https://github.com/simonw/asyncinject/releases",
      "Homepage": "https://github.com/simonw/asyncinject",
      "Issues": "https://github.com/simonw/asyncinject/issues"
    },
    "release_url": "https://pypi.org/project/asyncinject/0.5/",
    "requires_dist": [
      "pytest ; extra == 'test'",
      "pytest-asyncio ; extra == 'test'"
    ],
    "requires_python": ">=3.7",
    "summary": "Run async workflows using pytest-fixtures-style dependency injection",
    "version": "0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13594226,
  "releases": {
    "0.1a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba0eb79df7a45adbd0c4dfc7c6363bc2610eba03707c7675fbae20c863574f67",
          "md5": "5dc8664e5b4a72a4d720baff0f2e9c14",
          "sha256": "71105250ab3b26053ec650344e66285024753e2ecd51b1e8af38fbce58b4f5f2"
        },
        "downloads": -1,
        "filename": "asyncinject-0.1a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5dc8664e5b4a72a4d720baff0f2e9c14",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11499,
        "upload_time": "2021-11-17T01:37:24",
        "upload_time_iso_8601": "2021-11-17T01:37:24.681200Z",
        "url": "https://files.pythonhosted.org/packages/ba/0e/b79df7a45adbd0c4dfc7c6363bc2610eba03707c7675fbae20c863574f67/asyncinject-0.1a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eaacad1cf51693574bd6f85e3d8b2002d32e1c9bc9fb1c7646e70a122a56c4e4",
          "md5": "008bcc1835ac25099249b7d2b54cb8df",
          "sha256": "2d971e811541b06d57270066cba3c896f1aedd884cf86884ed81ba0c6807d6c2"
        },
        "downloads": -1,
        "filename": "asyncinject-0.1a0.tar.gz",
        "has_sig": false,
        "md5_digest": "008bcc1835ac25099249b7d2b54cb8df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10853,
        "upload_time": "2021-11-17T01:37:26",
        "upload_time_iso_8601": "2021-11-17T01:37:26.200010Z",
        "url": "https://files.pythonhosted.org/packages/ea/ac/ad1cf51693574bd6f85e3d8b2002d32e1c9bc9fb1c7646e70a122a56c4e4/asyncinject-0.1a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8a120ec2a78e6fc30ff7ccccf3c438664e1ec83a295e30332cafc1bd5a39628",
          "md5": "3efcfb1f394053516949cb9920f42a80",
          "sha256": "5ea76800908e123d7353d24e9da296aefd8000d0cb38cb713526211d8fdf1675"
        },
        "downloads": -1,
        "filename": "asyncinject-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3efcfb1f394053516949cb9920f42a80",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11873,
        "upload_time": "2021-12-21T17:19:23",
        "upload_time_iso_8601": "2021-12-21T17:19:23.054334Z",
        "url": "https://files.pythonhosted.org/packages/f8/a1/20ec2a78e6fc30ff7ccccf3c438664e1ec83a295e30332cafc1bd5a39628/asyncinject-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7034e03a1680c6b6ed0c8280dfecd812eaa57dd5994d2ab0bbf36161f67f9c8",
          "md5": "1c25416816e7e52114968693124438b9",
          "sha256": "2d114449ada96881bcd3c5f98c4cdf1170382256a7796db54bcf2161b3bb8dc9"
        },
        "downloads": -1,
        "filename": "asyncinject-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1c25416816e7e52114968693124438b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11440,
        "upload_time": "2021-12-21T17:19:24",
        "upload_time_iso_8601": "2021-12-21T17:19:24.035367Z",
        "url": "https://files.pythonhosted.org/packages/a7/03/4e03a1680c6b6ed0c8280dfecd812eaa57dd5994d2ab0bbf36161f67f9c8/asyncinject-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e58242a9a57a78fc886997abb36c7f2091128e437629423b0a96dcc6f32ac2b",
          "md5": "0e65015df90c7bbe2bbd5149f961c9c1",
          "sha256": "dbda9c34bcc8ac88c9d350520ba5cc7499e0c17b3b6f8def9bed5f21dbbc917f"
        },
        "downloads": -1,
        "filename": "asyncinject-0.2a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e65015df90c7bbe2bbd5149f961c9c1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11755,
        "upload_time": "2021-11-17T03:55:10",
        "upload_time_iso_8601": "2021-11-17T03:55:10.483750Z",
        "url": "https://files.pythonhosted.org/packages/5e/58/242a9a57a78fc886997abb36c7f2091128e437629423b0a96dcc6f32ac2b/asyncinject-0.2a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "431e91c8a936b3f844708bc32f647d195e1f9b9c25216237bd7e842e6b1343d4",
          "md5": "fd414f0281050f774217a88b88e4f6bd",
          "sha256": "de2ac2d078370f82cac77c8cbafb712e1bae6ed3b2881c8e0653c9c267864ee3"
        },
        "downloads": -1,
        "filename": "asyncinject-0.2a0.tar.gz",
        "has_sig": false,
        "md5_digest": "fd414f0281050f774217a88b88e4f6bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11291,
        "upload_time": "2021-11-17T03:55:11",
        "upload_time_iso_8601": "2021-11-17T03:55:11.898672Z",
        "url": "https://files.pythonhosted.org/packages/43/1e/91c8a936b3f844708bc32f647d195e1f9b9c25216237bd7e842e6b1343d4/asyncinject-0.2a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0baea625e1e6ce89ecc24b5d7386c94a9ae62773b426beeb6cb0b51f93a1e5eb",
          "md5": "31621607005538420f9c1ea9db346b3b",
          "sha256": "996c5733c67eb2e6c16ac2a63d16339de6a6c0aab4779a39d4256f8585a9900d"
        },
        "downloads": -1,
        "filename": "asyncinject-0.2a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "31621607005538420f9c1ea9db346b3b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11648,
        "upload_time": "2021-12-03T18:49:38",
        "upload_time_iso_8601": "2021-12-03T18:49:38.511863Z",
        "url": "https://files.pythonhosted.org/packages/0b/ae/a625e1e6ce89ecc24b5d7386c94a9ae62773b426beeb6cb0b51f93a1e5eb/asyncinject-0.2a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58e0ff8812a64a9d1055669e01b0639384e6dbef0ebbb2d2f727940bdd545049",
          "md5": "9427e479e0fa291d166df4e8099b21ef",
          "sha256": "ab329cb38d80db166bae6d4a1124c72177eedb9a6c89b50285baaaed73c343b4"
        },
        "downloads": -1,
        "filename": "asyncinject-0.2a1.tar.gz",
        "has_sig": false,
        "md5_digest": "9427e479e0fa291d166df4e8099b21ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11204,
        "upload_time": "2021-12-03T18:49:39",
        "upload_time_iso_8601": "2021-12-03T18:49:39.837492Z",
        "url": "https://files.pythonhosted.org/packages/58/e0/ff8812a64a9d1055669e01b0639384e6dbef0ebbb2d2f727940bdd545049/asyncinject-0.2a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa8f12695f1c77c71f3d3c2d93174a65b32057fc03a78f8db92593e86f01fda5",
          "md5": "9d24d37569d7846d9c9d02331ca25101",
          "sha256": "754c5af7aa3ca69a80985062dc66fb5f0b1445f63dd8373ba9f6df97763cf52f"
        },
        "downloads": -1,
        "filename": "asyncinject-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d24d37569d7846d9c9d02331ca25101",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11426,
        "upload_time": "2022-04-16T23:52:48",
        "upload_time_iso_8601": "2022-04-16T23:52:48.380214Z",
        "url": "https://files.pythonhosted.org/packages/aa/8f/12695f1c77c71f3d3c2d93174a65b32057fc03a78f8db92593e86f01fda5/asyncinject-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea2fd531ac9d03f48dda1cea477a629df0c69e15ad9f3ef78432f6db460decff",
          "md5": "e81f439214ef1ad4b756fc1dddec5ae2",
          "sha256": "66fcff67281259c11f7c53bcb2f92461e12caafd5c7302f70525acb10ecb5b13"
        },
        "downloads": -1,
        "filename": "asyncinject-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e81f439214ef1ad4b756fc1dddec5ae2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11064,
        "upload_time": "2022-04-16T23:52:49",
        "upload_time_iso_8601": "2022-04-16T23:52:49.719441Z",
        "url": "https://files.pythonhosted.org/packages/ea/2f/d531ac9d03f48dda1cea477a629df0c69e15ad9f3ef78432f6db460decff/asyncinject-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b28b6e61aa6161d84b1f7b2e482e824082afa02ca5b7d14035ea0c6306bfb701",
          "md5": "8600c1b9d5443086db096dbe39d68681",
          "sha256": "3c7d425c84dce133e9aaba2eff6f1dd6bd6b122a61c8eb7d1027cd063deaf1d3"
        },
        "downloads": -1,
        "filename": "asyncinject-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8600c1b9d5443086db096dbe39d68681",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11515,
        "upload_time": "2022-04-18T22:48:17",
        "upload_time_iso_8601": "2022-04-18T22:48:17.693918Z",
        "url": "https://files.pythonhosted.org/packages/b2/8b/6e61aa6161d84b1f7b2e482e824082afa02ca5b7d14035ea0c6306bfb701/asyncinject-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f91b912345dda675eaccf8b9b0cfc73b60bdd6bdb2a513487da36a30dcf169d",
          "md5": "aac9fab41d4f88a31668aa6e0c40bcbe",
          "sha256": "6780037210d92501c65d3bfe0910e4eb6d5394ea6d09641f23913473bcccfd35"
        },
        "downloads": -1,
        "filename": "asyncinject-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "aac9fab41d4f88a31668aa6e0c40bcbe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11135,
        "upload_time": "2022-04-18T22:48:18",
        "upload_time_iso_8601": "2022-04-18T22:48:18.884577Z",
        "url": "https://files.pythonhosted.org/packages/5f/91/b912345dda675eaccf8b9b0cfc73b60bdd6bdb2a513487da36a30dcf169d/asyncinject-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e47c4d56c74c28afdaecdfe176dabd3015ddc94f4c584fc0c48fb1cffa7c9546",
          "md5": "94dd3f9115ac77e0fda3454ebe0cf700",
          "sha256": "200636dba70c98916a9843c4c81d9a1c362e941d83ec7dc03e7c448265f406af"
        },
        "downloads": -1,
        "filename": "asyncinject-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94dd3f9115ac77e0fda3454ebe0cf700",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11895,
        "upload_time": "2022-04-22T18:49:11",
        "upload_time_iso_8601": "2022-04-22T18:49:11.452544Z",
        "url": "https://files.pythonhosted.org/packages/e4/7c/4d56c74c28afdaecdfe176dabd3015ddc94f4c584fc0c48fb1cffa7c9546/asyncinject-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d3892cf57c73a4cec8ccf2f50175dfb5dffc13547e7e1aa404444bb20f66fa2",
          "md5": "a6ba6e40345383514bc051c8d811918c",
          "sha256": "fb5c6cea196647c018f0a84a100936b4cf6ed01bc856146d4b2e302932a7fb35"
        },
        "downloads": -1,
        "filename": "asyncinject-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a6ba6e40345383514bc051c8d811918c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11525,
        "upload_time": "2022-04-22T18:49:12",
        "upload_time_iso_8601": "2022-04-22T18:49:12.581840Z",
        "url": "https://files.pythonhosted.org/packages/6d/38/92cf57c73a4cec8ccf2f50175dfb5dffc13547e7e1aa404444bb20f66fa2/asyncinject-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e47c4d56c74c28afdaecdfe176dabd3015ddc94f4c584fc0c48fb1cffa7c9546",
        "md5": "94dd3f9115ac77e0fda3454ebe0cf700",
        "sha256": "200636dba70c98916a9843c4c81d9a1c362e941d83ec7dc03e7c448265f406af"
      },
      "downloads": -1,
      "filename": "asyncinject-0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "94dd3f9115ac77e0fda3454ebe0cf700",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 11895,
      "upload_time": "2022-04-22T18:49:11",
      "upload_time_iso_8601": "2022-04-22T18:49:11.452544Z",
      "url": "https://files.pythonhosted.org/packages/e4/7c/4d56c74c28afdaecdfe176dabd3015ddc94f4c584fc0c48fb1cffa7c9546/asyncinject-0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6d3892cf57c73a4cec8ccf2f50175dfb5dffc13547e7e1aa404444bb20f66fa2",
        "md5": "a6ba6e40345383514bc051c8d811918c",
        "sha256": "fb5c6cea196647c018f0a84a100936b4cf6ed01bc856146d4b2e302932a7fb35"
      },
      "downloads": -1,
      "filename": "asyncinject-0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "a6ba6e40345383514bc051c8d811918c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 11525,
      "upload_time": "2022-04-22T18:49:12",
      "upload_time_iso_8601": "2022-04-22T18:49:12.581840Z",
      "url": "https://files.pythonhosted.org/packages/6d/38/92cf57c73a4cec8ccf2f50175dfb5dffc13547e7e1aa404444bb20f66fa2/asyncinject-0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}