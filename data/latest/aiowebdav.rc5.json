{
  "info": {
    "author": "synodriver",
    "author_email": "diguohuangjiajinweijun@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Environment :: Web Environment",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "aiowebdav\n=========\n[![pypi](https://img.shields.io/pypi/v/aiowebdav.svg)](https://pypi.org/project/aiowebdav/)\n![python](https://img.shields.io/pypi/pyversions/aiowebdav)\n![implementation](https://img.shields.io/pypi/implementation/aiowebdav)\n![wheel](https://img.shields.io/pypi/wheel/aiowebdav)\n![action](https://img.shields.io/github/workflow/status/synodriver/aiowebdav/upload/aiowebdav)\n\nPackage aiowebdav based on https://github.com/designerror/webdav-client-python but uses `aiohttp` instead of `requests`.\nIt provides easy way to work with WebDAV-servers.\n\nInstallation\n------------\n```bash\n$ pip install aiowebdav\n```\n\nSample Usage\n------------\n\n```python\nimport asyncio\nfrom aiowebdav.client import Client\n\noptions = {\n 'webdav_hostname': \"https://webdav.server.ru\",\n 'webdav_login': \"login\",\n 'webdav_password': \"password\",\n \"disable_check\": True\n}\n\nasync def main():\n    client = Client(options)\n    client.verify = False  # To not check SSL certificates (Default = True)\n    client.execute_request(\"mkdir\", 'directory_name')\nasyncio.run(main())\n```\n\nWebdav API\n==========\n\nWebdav API is a set of webdav actions of work with cloud storage. This set includes the following actions:\n`check`, `free`, `info`, `list`, `mkdir`, `clean`, `copy`, `move`, `download`, `upload`, `publish` and `unpublish`.\n\n**Configuring the client**\n\nRequired key is host name or IP address of the WevDAV-server with param name `webdav_hostname`.  \nFor authentication in WebDAV server use `webdav_login`, `webdav_password`.  \nFor an anonymous login do not specify auth properties.\n\n```python\nfrom aiowebdav.client import Client\n\noptions = {\n 'webdav_hostname': \"https://webdav.server.ru\",\n 'webdav_login': \"login\",\n 'webdav_password': \"password\"\n}\nclient = Client(options)\n```\n\nIf your server does not support `HEAD` method or there are other reasons to override default WebDAV methods for actions use a dictionary option `webdav_override_methods`. \nThe key should be in the following list: `check`, `free`, `info`, `list`, `mkdir`, `clean`, `copy`, `move`, `download`, `upload`,\n `publish` and `unpublish`. The value should a string name of WebDAV method, for example `GET`.\n\n```python\nfrom aiowebdav.client import Client\n\noptions = {\n 'webdav_hostname': \"https://webdav.server.ru\",\n 'webdav_login': \"login\",\n 'webdav_password': \"password\",\n 'webdav_override_methods': {\n  'check': 'GET'\n }\n\n}\nclient = Client(options)\n```\n\nFor configuring a requests timeout you can use an option `webdav_timeout` with int value in seconds, by default the timeout is set to 30 seconds.\n\n```python\nfrom aiowebdav.client import Client\n\noptions = {\n 'webdav_hostname': \"https://webdav.server.ru\",\n 'webdav_login': \"login\",\n 'webdav_password': \"password\",\n 'webdav_timeout': 30\n}\nclient = Client(options)\n```\n\nWhen a proxy server you need to specify settings to connect through it.\n\n```python\nfrom aiowebdav.client import Client\n\noptions = {\n 'webdav_hostname': \"https://webdav.server.ru\",\n 'webdav_login': \"w_login\",\n 'webdav_password': \"w_password\",\n 'webdav_proxy': \"http://127.0.0.1:8080\",\n 'webdav_proxy_auth': \"xxx\",\n}\nclient = Client(options)\n```\n\nIf you want to use the certificate path to certificate and private key is defined as follows:\n\n```python\nfrom aiowebdav.client import Client\n\noptions = {\n 'webdav_hostname': \"https://webdav.server.ru\",\n 'webdav_login': \"w_login\",\n 'webdav_password': \"w_password\",\n 'webdav_ssl': 'sslcontext'\n}\nclient = Client(options)\n```\n\nOr you want to limit the speed or turn on verbose mode:\n\n```python\noptions = {\n ...\n 'recv_speed' : 3000000,\n 'send_speed' : 3000000,\n 'verbose'    : True\n}\nclient = Client(options)\n```\n\nrecv_speed: rate limit data download speed in Bytes per second. Defaults to unlimited speed.  \nsend_speed: rate limit data upload speed in Bytes per second. Defaults to unlimited speed.  \nverbose:    set verbose mode on/off. By default verbose mode is off.\n\nAlso if your server does not support `check` it is possible to disable it:\n\n```python\noptions = {\n ...\n 'disable_check': True\n}\nclient = Client(options)\n```\n\nBy default, checking of remote resources is enabled.\n\nFor configuring chunk size of content downloading use `chunk_size` param, by default it is `65536`\n\n```python\noptions = {\n ...\n 'chunk_size': 65536\n}\nclient = Client(options)\n```\n\n**Asynchronous methods**\n\n```python\n# Checking existence of the resource\n\nawait client.check(\"dir1/file1\")\nawait client.check(\"dir1\")\n```\n\n```python\n# Get information about the resource\n\nawait client.info(\"dir1/file1\")\nawait client.info(\"dir1/\")\n```\n\n```python\n# Check free space\n\nfree_size = await client.free()\n```\n\n```python\n# Get a list of resources\n\nfiles1 = await client.list()\nfiles2 = await client.list(\"dir1\")\nfiles3 = await client.list(\"dir1\", get_info=True) # returns a list of dictionaries with files details\n```\n\n```python\n# Create directory\n\nawait client.mkdir(\"dir1/dir2\")\n```\n\n```python\n# Delete resource\n\nawait client.clean(\"dir1/dir2\")\n```\n\n```python\n# Copy resource\n\nawait client.copy(remote_path_from=\"dir1/file1\", remote_path_to=\"dir2/file1\")\nawait client.copy(remote_path_from=\"dir2\", remote_path_to=\"dir3\")\n```\n\n```python\n# Move resource\n\nawait client.move(remote_path_from=\"dir1/file1\", remote_path_to=\"dir2/file1\")\nawait client.move(remote_path_from=\"dir2\", remote_path_to=\"dir3\")\n```\n\n```python\n# Download a resource\n\nawait client.download(remote_path=\"dir1/file1\", local_path=\"~/Downloads/file1\")\nawait client.download(remote_path=\"dir1/dir2/\", local_path=\"~/Downloads/dir2/\")\n```\n\n```python\n# Upload resource\n\nawait client.upload(remote_path=\"dir1/file1\", local_path=\"~/Documents/file1\")\nawait client.upload(remote_path=\"dir1/dir2/\", local_path=\"~/Documents/dir2/\")\n```\n\n```python\n# Publish the resource\n\nlink = await client.publish(\"dir1/file1\")\nlink = await client.publish(\"dir2\")\n```\n\n```python\n# Unpublish resource\n\nawait client.unpublish(\"dir1/file1\")\nawait client.unpublish(\"dir2\")\n```\n\n```python\n# Exception handling\n\nfrom aiowebdav.exceptions import WebDavException\n\ntry:\n ...\nexcept WebDavException as exception:\n...\n```\n\n```python\n# Get the missing files\n\nawait client.pull(remote_directory='dir1', local_directory='~/Documents/dir1')\n```\n\n```python\n# Send missing files\n\nawait client.push(remote_directory='dir1', local_directory='~/Documents/dir1')\n```\n\n```python\n# Unload resource\n\nkwargs = {\n 'remote_path': \"dir1/file1\",\n 'local_path':  \"~/Downloads/file1\",\n 'callback':    callback\n}\nclient.upload_async(**kwargs)\n\nkwargs = {\n 'remote_path': \"dir1/dir2/\",\n 'local_path':  \"~/Downloads/dir2/\",\n 'callback':    callback\n}\nclient.upload_async(**kwargs)\n```\n\nResource API\n============\n\nResource API using the concept of OOP that enables cloud-level resources.\n\n```python\n# Get a resource\n\nres1 = client.resource(\"dir1/file1\")\n```\n\n```python\n# Work with the resource\n\nawait res1.rename(\"file2\")\nawait res1.move(\"dir1/file2\")\nawait res1.copy(\"dir2/file1\")\ninfo = await res1.info()\nawait res1.read_from(buffer)\nawait res1.read(local_path=\"~/Documents/file1\")\nawait res1.write_to(buffer)\nawait res1.write(local_path=\"~/Downloads/file1\")\n\n```\n\n# For Contributors\n\n### Prepare development environment\n1. Install docker on your development machine\n1. Start WebDAV server for testing by following commands from the project's root folder or change path to `conf` dir in second command to correct:\n```shell script\ndocker pull bytemark/webdav\ndocker run -d --name webdav -e AUTH_TYPE=Basic -e USERNAME=alice -e PASSWORD=secret1234 -v conf:/usr/local/apache2/conf -p 8585:80 bytemark/webdav\n``` \n\n### Code convention\n\nPlease check your code according PEP8 Style guides.\n\n### Run tests\n1. Check that webdav container is started on your local machine\n1. Execute following command in the project's root folder:\n```shell script\npython -m unittest discover -s tests\n```\n\n### Prepare a Pull Request\n\nPlease use this check list before creating PR:\n1. You code should be formatted according PEP8\n1. All tests should successfully pass\n1. Your changes shouldn't change previous default behaviour, exclude defects\n1. All changes are covered by tests \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/synodriver/aiowebdav",
    "keywords": "webdav,client,python,module,library,packet,Yandex.Disk,Dropbox,Google Disk,Box,4shared",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiowebdav",
    "package_url": "https://pypi.org/project/aiowebdav/",
    "platform": null,
    "project_url": "https://pypi.org/project/aiowebdav/",
    "project_urls": {
      "Homepage": "https://github.com/synodriver/aiowebdav"
    },
    "release_url": "https://pypi.org/project/aiowebdav/0.1.0rc5/",
    "requires_dist": [
      "aiohttp",
      "lxml",
      "python-dateutil",
      "aiofiles"
    ],
    "requires_python": ">=3.8",
    "summary": "Asyncio WebDAV client, based on original package https://github.com/ezhov-evgeny/webdav-client-python-3 but uses aiohttp instead of requests",
    "version": "0.1.0rc5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14680423,
  "releases": {
    "0.1.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05b250c47593d7259c9acfc8c9d4009b3f65b14c24bfac85d19ec07a00bcc7e2",
          "md5": "be0c94a3ad06ed2cc089d5bcaae45993",
          "sha256": "9b22b00a3b86f6781732e5564932d753755f246e2edede1be6f6ca07bda663f5"
        },
        "downloads": -1,
        "filename": "aiowebdav-0.1.0rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be0c94a3ad06ed2cc089d5bcaae45993",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 22639,
        "upload_time": "2021-12-17T12:16:20",
        "upload_time_iso_8601": "2021-12-17T12:16:20.542119Z",
        "url": "https://files.pythonhosted.org/packages/05/b2/50c47593d7259c9acfc8c9d4009b3f65b14c24bfac85d19ec07a00bcc7e2/aiowebdav-0.1.0rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25d5f93c4104d62c04a8d3680fd50b69f47068333d99c209fdd8790824ff78da",
          "md5": "8265f10977610623a5a6ad0dbfcfa3db",
          "sha256": "777dfd3f0cc88320ef5c73b7bddac70b160150b8b22be6306394334473023889"
        },
        "downloads": -1,
        "filename": "aiowebdav-0.1.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "8265f10977610623a5a6ad0dbfcfa3db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 24096,
        "upload_time": "2021-12-17T12:16:22",
        "upload_time_iso_8601": "2021-12-17T12:16:22.679045Z",
        "url": "https://files.pythonhosted.org/packages/25/d5/f93c4104d62c04a8d3680fd50b69f47068333d99c209fdd8790824ff78da/aiowebdav-0.1.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52466470885076df79bc366e0c56074929671508384d694f0fa0561ab66abbb4",
          "md5": "8b2894664d0a57d397281c5a23e3ee79",
          "sha256": "5d232dc47ba4ed505ad745420114562be2201c4b224278362ed0b11ab586677d"
        },
        "downloads": -1,
        "filename": "aiowebdav-0.1.0rc2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b2894664d0a57d397281c5a23e3ee79",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 22644,
        "upload_time": "2021-12-17T12:30:15",
        "upload_time_iso_8601": "2021-12-17T12:30:15.582108Z",
        "url": "https://files.pythonhosted.org/packages/52/46/6470885076df79bc366e0c56074929671508384d694f0fa0561ab66abbb4/aiowebdav-0.1.0rc2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a88091f799017f0dc87051d2e7652a414d0d594567efa27080397f43c56221f",
          "md5": "7d881edc413fecad2f8f50f7abe19d6c",
          "sha256": "b5a5e7518100daed51d8c194cd56bc6af1e423b56abba463fe9df39e1be69a6d"
        },
        "downloads": -1,
        "filename": "aiowebdav-0.1.0rc2.tar.gz",
        "has_sig": false,
        "md5_digest": "7d881edc413fecad2f8f50f7abe19d6c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 24109,
        "upload_time": "2021-12-17T12:30:17",
        "upload_time_iso_8601": "2021-12-17T12:30:17.002290Z",
        "url": "https://files.pythonhosted.org/packages/8a/88/091f799017f0dc87051d2e7652a414d0d594567efa27080397f43c56221f/aiowebdav-0.1.0rc2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0rc3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0a05dd57adaf604041a1b54755b42575a3c306f32dd5d27b70badb93458f3eb",
          "md5": "858c4c90c0e89c65a706b91925395e47",
          "sha256": "d6b29665d0a3a9f5ce9b763576d0cf8f6b7c7caa4c247fbe6b82da75ccd5edec"
        },
        "downloads": -1,
        "filename": "aiowebdav-0.1.0rc3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "858c4c90c0e89c65a706b91925395e47",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 22646,
        "upload_time": "2021-12-17T12:41:50",
        "upload_time_iso_8601": "2021-12-17T12:41:50.213467Z",
        "url": "https://files.pythonhosted.org/packages/e0/a0/5dd57adaf604041a1b54755b42575a3c306f32dd5d27b70badb93458f3eb/aiowebdav-0.1.0rc3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6f7327c09925499d082ce7dd296ce962543c6d114ee7b6b2270421e658c6e1c",
          "md5": "3e61b9cce105f1002b55c9d02e0d099b",
          "sha256": "035e7e72a86bba75d1b9412037522441ba3d70f9352d896effd87a7c72e3e846"
        },
        "downloads": -1,
        "filename": "aiowebdav-0.1.0rc3.tar.gz",
        "has_sig": false,
        "md5_digest": "3e61b9cce105f1002b55c9d02e0d099b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 24127,
        "upload_time": "2021-12-17T12:41:51",
        "upload_time_iso_8601": "2021-12-17T12:41:51.966629Z",
        "url": "https://files.pythonhosted.org/packages/d6/f7/327c09925499d082ce7dd296ce962543c6d114ee7b6b2270421e658c6e1c/aiowebdav-0.1.0rc3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0rc4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4861b56fb895e422782375692f0275af7c0bdd15a7795b1fa90f0c50747c7a6",
          "md5": "727ecabea948ac891adb8c343c9cb2b1",
          "sha256": "cc896043f15cf2d6ebcda583f67216a06e98623b8bda2b1c595237452b13fcaf"
        },
        "downloads": -1,
        "filename": "aiowebdav-0.1.0rc4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "727ecabea948ac891adb8c343c9cb2b1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 22557,
        "upload_time": "2021-12-18T07:32:18",
        "upload_time_iso_8601": "2021-12-18T07:32:18.060669Z",
        "url": "https://files.pythonhosted.org/packages/b4/86/1b56fb895e422782375692f0275af7c0bdd15a7795b1fa90f0c50747c7a6/aiowebdav-0.1.0rc4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d3a88e6c76b48ef00cd9a736241b1e99e9f971a8a18a9a47422e6161afa019c",
          "md5": "54415b4ba2d02a38cfc3306f52b990c9",
          "sha256": "1511d7f6c02fe023e0ac22c06219a6bf966f13b3d376dda42c4c01aed98fc0f2"
        },
        "downloads": -1,
        "filename": "aiowebdav-0.1.0rc4.tar.gz",
        "has_sig": false,
        "md5_digest": "54415b4ba2d02a38cfc3306f52b990c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 23937,
        "upload_time": "2021-12-18T07:32:20",
        "upload_time_iso_8601": "2021-12-18T07:32:20.166470Z",
        "url": "https://files.pythonhosted.org/packages/9d/3a/88e6c76b48ef00cd9a736241b1e99e9f971a8a18a9a47422e6161afa019c/aiowebdav-0.1.0rc4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0rc5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0eb13ed16f06e87ccebd90a44558de02ee9d45db7806ad3aca44de0a1962913a",
          "md5": "37caadd718e1a45517b9fe0f9e0af26c",
          "sha256": "1b7be6122ab69f06f1639bfea9fd3beb43a7d375b5e1ced560b832e04c000026"
        },
        "downloads": -1,
        "filename": "aiowebdav-0.1.0rc5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "37caadd718e1a45517b9fe0f9e0af26c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 22568,
        "upload_time": "2022-08-07T14:40:19",
        "upload_time_iso_8601": "2022-08-07T14:40:19.852572Z",
        "url": "https://files.pythonhosted.org/packages/0e/b1/3ed16f06e87ccebd90a44558de02ee9d45db7806ad3aca44de0a1962913a/aiowebdav-0.1.0rc5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8eb2cc5a9b133d95516009db90d249e527397fd229afe8b6a6372b4a12fa500",
          "md5": "a77bfa566c1aa8fb923a7122a7fa84a5",
          "sha256": "8345f8a55a5eea4e029de0b5c7ba38fbeaaee3e0fdc1e0ca29e60d997643cc2f"
        },
        "downloads": -1,
        "filename": "aiowebdav-0.1.0rc5.tar.gz",
        "has_sig": false,
        "md5_digest": "a77bfa566c1aa8fb923a7122a7fa84a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 23963,
        "upload_time": "2022-08-07T14:40:21",
        "upload_time_iso_8601": "2022-08-07T14:40:21.796032Z",
        "url": "https://files.pythonhosted.org/packages/a8/eb/2cc5a9b133d95516009db90d249e527397fd229afe8b6a6372b4a12fa500/aiowebdav-0.1.0rc5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0eb13ed16f06e87ccebd90a44558de02ee9d45db7806ad3aca44de0a1962913a",
        "md5": "37caadd718e1a45517b9fe0f9e0af26c",
        "sha256": "1b7be6122ab69f06f1639bfea9fd3beb43a7d375b5e1ced560b832e04c000026"
      },
      "downloads": -1,
      "filename": "aiowebdav-0.1.0rc5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "37caadd718e1a45517b9fe0f9e0af26c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 22568,
      "upload_time": "2022-08-07T14:40:19",
      "upload_time_iso_8601": "2022-08-07T14:40:19.852572Z",
      "url": "https://files.pythonhosted.org/packages/0e/b1/3ed16f06e87ccebd90a44558de02ee9d45db7806ad3aca44de0a1962913a/aiowebdav-0.1.0rc5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a8eb2cc5a9b133d95516009db90d249e527397fd229afe8b6a6372b4a12fa500",
        "md5": "a77bfa566c1aa8fb923a7122a7fa84a5",
        "sha256": "8345f8a55a5eea4e029de0b5c7ba38fbeaaee3e0fdc1e0ca29e60d997643cc2f"
      },
      "downloads": -1,
      "filename": "aiowebdav-0.1.0rc5.tar.gz",
      "has_sig": false,
      "md5_digest": "a77bfa566c1aa8fb923a7122a7fa84a5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 23963,
      "upload_time": "2022-08-07T14:40:21",
      "upload_time_iso_8601": "2022-08-07T14:40:21.796032Z",
      "url": "https://files.pythonhosted.org/packages/a8/eb/2cc5a9b133d95516009db90d249e527397fd229afe8b6a6372b4a12fa500/aiowebdav-0.1.0rc5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}