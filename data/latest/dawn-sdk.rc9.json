{
  "info": {
    "author": "TAL AI-LAB",
    "author_email": "author@example.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "# Document for dawn's SDK\n\nThis is the SDK for dawn, which is OSS system. Dawn is honorly presented by TAL's ocean team.\n\n# OSS-SDK python 使用说明\n\n## 描述\n\n- 本文档适用于OSS-SDK python语言版本的开发指南。\n- 主要提供如下功能\n  - [x] 1.上传单个文件\n  - [x] 2.生成对象web访问url，该url带过期时间\n  - [x] 3.大文件分段上传\n  - [x] 4.查询租户下面的bucket列表\n  - [x] 5.查询bucket下面的对象列表\n\n## 使用前准备\n- 使用OSS-SDK前需要先下载，可以采用下面的方式下载：\n  - [x] pip install dawn-sdk // python2下载\n  - [x] pip3 install dawn-sdk // python3下载\n- 在使用之前引入包\n  - 可以引入如下包\n  ```python\n  from dawn_sdk import auth //认证相关类接口\n  from dawn_sdk import bucket //bucket类接口\n  from dawn_sdk.xml_body import PartInfo //分段上传返回的分段信息类\n  ... //其他导入\n  ```\n\n## Bucket类接口\n- bucket操作相关接口\n### 1. 构造函数\n  - 原型\n  ```python\n  def __init__(self, auth, endpoint, bucket, session=None, connect_timeout=None)\n  ```\n  - 参数和返回值：\n    - [x] auth: 认证实例对象，即auth.Authorize类的实例对象，用于认证。\n    - [x] endpoint: 端点，OSS服务端点，具体值请咨询服务提供者。\n    - [x] bucket: bucket名称。\n    - [x] session: 会话，通常用于复用之前使用的会话，可以不进行设置，默认不复用之前的会话。\n    - [x] connect_timeout: 连接超时，单位为秒，可以不设定该参数，将使用默认超时: 30s.\n    - 返回值，无。\n  - 使用示例：\n  ```python\n  from dawn_sdk import auth\n  from dawn_sdk import bucket\n\n  access_key=\"<you access key>\"def sign_url(self, key, expires, method='GET', headers=None, params=None)\n  secret_key=\"<you secret key>\"def sign_url(self, key, expires, method='GET', headers=None, params=None)\n\n  //初始化认证\n  ath = auth.Authorize(access_kdef sign_url(self, key, expires, method='GET', headers=None, params=None)\n\n  endpoint=\"<you OSS endpoint>\"\n  bucket_name=\"<you bucket name>\"\n  is_cname=\"<is CNAME or not>\" //需要咨询服务提供商\n  conn_timeout=60 //设置连接超时为60s\n\n  //初始化bucket\n  bkt = bucket.Bucket(ath, endpoint, bucket_name, is_cname， connect_timeout=conn_timeout)\n\n  ```\n### 2. 上传对象，从缓冲区上传\n  - 原型\n  ```python\n  def put_object(self, key, data, headers=None, progress_callback=None, upload_speed_limited=None)\n  ```\n  - 参数和返回值\n    - [x] key: 需要上传的对象名\n    - [x] data: 需要上传对象的数据，数据的长度必须小于5GB\n    - [x] header: 用户自定义HTTP头，通常不需要自定义头，\n    - [x] progress_callback: 上传进度回调，原型为： def progress_func(chunk_size, size)\n      - [x] chunk_size: 已经传输的字节数\n      - [x] size: 总字节数。\n    - [x] upload_speed_limited: 上传速度限制，单位为字节每秒。不指定该参数时，即不限速。\n    - 返回值: 上传成功则返回PutObject对象，否则抛出异常，可以查看异常的详细信息。\n  - 使用示例:\n  ```python\n\n  //Bucket实例已经构造，如上的构造函数示例，\n  //bkt = bucket.Bucket(...);\n\n  //对象名\n  obj=\"<you object name>\"\n  data=\"<object content...>\"\n  //progress_func为上传进度回调，该参数可选，可以不指定。\n  progress_func=...\n  //limit为上传速度限制，该参数可选，可以不指定。\n  limit=...\n  try:\n    result = bkt.put_object(obj, data, progress_callback=progress_func, upload_speed_limited=limit)\n    //成功则不抛出异常。\n  except BaseError, err:\n    //处理失败\n\n  ```\n### 3. 上传对象，从文件上传\n  - 原型\n  ```python\n  def put_object_from_file(self, key, filename, headers=None, progress_callback=None, upload_speed_limited=None)\n  ```\n  - 参数和返回值\n    - [x] key: 需要上传的对象名\n    - [x] filename: 需要上传的文件路径，文件大小必须小于5GB\n    - [x] header: 用户自定义HTTP头，通常不需要自定义头，\n    - [x] progress_callback: 上传进度回调，原型为： def progress_func(chunk_size, size)\n      - [x] chunk_size: 已经传输的字节数\n      - [x] size: 总字节数。\n    - [x] upload_speed_limited: 上传速度限制，单位为字节每秒。不指定该参数时，即不限速。\n    - 返回值: 上传成功则返回PutObject对象，否则抛出异常，可以查看异常的详细信息。\n  - 使用示例:\n  ```python\n\n  //Bucket实例已经构造，如上的构造函数示例，\n  //bkt = bucket.Bucket(...);\n\n  //对象名\n  obj=\"<you object name>\"\n  file=\"<you upload file path>\"\n  //progress_func为上传进度回调，该参数可选，可以不指定。\n  //upload_speed_limit为上传速度限制，该参数可选，可以不指定。\n  try:\n    result = bkt.put_object_from_file(obj, file, progress_callback=progress_func, upload_speed_limited=limit)\n    //成功则不抛出异常。\n  except BaseError, err:\n    //处理失败\n\n  ``` \n### 4. 分段上传接口\n- 分段上传是一组接口协同工作\n- 初始化接口\n  - 原型\n  ```python\n  def init_multipart_upload(self, key, headers=None)\n  ```\n  - 接口说明\n    - [x] key: 对象名称\n    - [x] headers: 自定义HTTP头，通常不用指定。\n    - 返回值： 如果成功，则返回InitMultipartUpload对象，该对象包含了upload的id，作为后续的多次上传的参数使用；如果失败，则抛出异常。\n  - 使用示例: 见后面的统一示例\n- 上传接口\n  - 原型\n  ```python\n  def upload_part(self, key, upload_id, part_number, data, progress_callback=None, upload_speed_limited=None, headers=None)\n  ```\n  - 接口说明\n    - [x] key: 对象名称quxiao\n    - [x] upload_id: 调quxiao的返回值。\n    - [x] part_number: quxiao范围为[1, 10000]\n    - [x] data: 上传的quxiao是缓冲区数据，也可以是LimitedReader对象: LimitedReader是一个受限制的读取器，可以指定读取的长度，而不是整个文件长度。每次上传的数据最大5GB，除了最后一个分段数据没有最小限制外，其他分段都必须大于等于5MB。\n    - [x] progress_callquxiao度回调，原型为： def progress_func(chunk_size, size)\n      - [x] chunk_size:quxiao节数\n      - [x] size: 总字quxiao\n    - [x] upload_speed_quxiao速度限制，单位为字节每秒。不指定该参数时，即不限速。\n    - [x] header: 用户quxiao通常不需要自定义头，\n    - 返回值： 如果成功，则返回PutObject对象，该对象包含了该分段的ETAG，和part_number构成一个上传信息，所有的上传信息构成上传数组，作为后续完成上传的参数使用；如果失败，则抛出异常。\n  - 使用示例: 见后面的统一示例\n- 完成上传接口\n  - 原型\n  ```python\n  def complete_multipart_upload(self, key, upload_id, parts, headers=None)\n  ```\n  - 接口说明\n    - [x] key: 对象名称\n    - [x] upload_id: 调用初始化接口的返回值。\n    - [x] parts: 分段上传的数组，数组元素为单词的上传信息，包含part_number和上传成功返回的ETAG。\n    - [x] header: 用户自定义HTTP头，通常不需要自定义头，\n    - 返回值： 如果成功，则返回PutObject对象；如果失败，则抛出异常。\n    - **说明** 分段上传接口调用后，对象存储即开始计费，当调用完成或者取消接口时，分段对象才得以消除。所以请务必调用完成或者取消接口。\n  - 使用示例: 见后面的统一示例\n- 取消上传接口\n  - 原型\n  ```python\n  def abort_multipart_upload(self, key, upload_id)\n  ```\n  - 接口说明\n    - [x] key: 对象名称\n    - [x] upload_id: 调用始化接口的返回值。\n    - 返回值: 成功返回Result对象；如果失败，则抛出异常。\n    - **说明** 分段上传接口调用后，对象存储即开始计费，当调用完成或者取消接口时，分段对象才得以消除。所以请务必调用完成或者取消接口。\n  - 使用示例: 见后面的统一示例\n- 统一示例:\n  ```python\n\n  //Bucket实例已经构造，如上的构造函数示例，\n  //bkt = bucket.Bucket(...);\n\n  //progress_func为上传进度回调，该参数可选，可以不指定。\n  progress_func=...\n  //limit为上传速度限制，该参数可选，可以不指定。\n  limit=...\n\n  //对象名\n  obj=\"<you object name>\"\n  file=\"<you upload file>\"\n\n  flen = os.path.getsize(file)\n  with open(file, 'rb') as f:\n    //分片大小\n    slice = (1024 * 1024) * 5\n\n    //分段数\n    times = flen // slice\n    //最后一段的大小\n    left = flen % slice\n\n\n    uid = None\n    //分段初始化\n    try: \n      result = bkt.init_multipart_upload(obj)\n      uid = result.upload_id\n    except BaseError, err:\n      //处理错误\n\n    parts = []\n    number = 1\n    while True:\n      if times == 0:\n        break\n      //使用限制读取器： 限制读取器持有支持read的接口的对象。每次最多读取`slice`个字节数据。     \n      reader = LimitedReader(f, slice)\n\n      try:\n        out = bkt.upload_part(obj, uid, number, reader, progress_callback=progress_func, upload_speed_limited=limit)\n        part = PartInfo(number, out.etag)\n        parts.append(part)\n      except BaseError, err:\n        //处理错误或者调用取消接口取消\n        bkt.abort_multipart_upload(obj, uid)\n        exit(-1)\n\n      number += 1\n      times -= 1\n\n    if left > 0:\n      reader = LimitedReader(f, left)\n\n      out = bkt.upload_part(obj, uid, number, reader, progress_callback=progress_func, upload_speed_limited=limit)\n      part = PartInfo(number, out.etag)\n      parts.append(part)\n    try:\n      result = bkt.complete_multipart_upload(obj, uid, parts)\n    except BaseError, err:\n      //处理错误或者重试多次直到成功。\n\n  ```\n### 生成对象web访问url接口\n  - 原型\n  ```python\n  def sign_url(self, key, expires, method='GET', headers=None, params=None)\n  ```\n  - 接口说明\n    - [x] key: 对象名称\n    - [x] expires: 过期时间，从当前时间开始的秒数。\n    - [x] method: 使用url时的HTTP方法，默认为GET。\n    - [x] headers: 自定义HTTP头，通常不用指定。\n    - [x] params: 自定义HTTP参数，通常不用指定。\n    - 返回值： 返回对象的web访问url字符串\n  - 使用示例\n  ```python\n\n  //Bucket实例已经构造，如上的构造函数示例，\n  //bkt = bucket.Bucket(...);\n\n  obj=\"<you object name>\"\n  expires=3600 // 3600秒 == 1小时\n\n  url = bkt.sign_url()\n### 查看bucket下面的对象\n- 描述，使用场景\n  - [x] 查询bucket下面的对象\n  - [x] 通过设定查询的前缀来查询特定前缀的对象，通常可用于将对象名设置为带目录结构的形式，指定前缀查询，将返回目录下面的文件/文件夹。\n  - [x] 当对象较多时，一次查询无法完成，可以像使用迭代器一样，迭代剩余的查询结果。\n\n  - 接口描述和定义\n  ```python\n  def list_objects(self, prefix='', delimiter='', marker='', max_keys=100)\n  ```\n    - 参数\n      - [x] prefix\n        - 查询对象时，满足指定的前缀的对象将返回。\n      - [x] delimiter \n        - 查询时的分隔符，和prefix结合使用\n      - [x] marker\n        - 查询时，从`标记`处开始，返回之后的对象， **注意，之后指的是对象名按照字典序排序之后。**\n      - [x] max_keys\n        - 查询时，每次最多返回多少个对象，当还有剩余对象的时候，可以继续查询。默认为100\n    - 返回值ListObjects定义\n    ```python\n    class ListObjects(Result):\n    def __init__(self, resp):\n        super(ListObjects, self).__init__(resp)\n\n        self.is_continous = False //知识是否所有的对象返回了。\n        self.next_marker = '' //当查询大于max_keys时，下次调用，需要使用该值作为下次调用的标记，以此来保证下次调用的正确性。\n        self.objects = []     //对象列表，类型如下SimplifiedBucketInfo\n        self.prefixes = []    //目录列表\n\n    class SimplifiedBucketInfo(object):\n    def __init__(self, name, creation_date):\n        #: Bucket名\n        self.name = name\n\n        #: Bucket的创建时间，类型为int。参考 :ref:`unix_time`。\n        self.creation_date = creation_date\n    ```\n  - **接口使用示例-1**\n  调用步骤：\n  - [x] 准备bucket\n  ```python\n  //Bucket实例已经构造，如上的构造函数示例，\n  bkt = bucket.Bucket(...);\n  ...\n  ```\n  - [x] 查询对象\n  假定bucket内的对象如下：\n    - [x] object-1\n    - [x] object-11\n    - [x] object-2\n    - [x] object-21\n    - [x] object-22\n    - [x] object-3\n    - [x] object-31\n    - [x] object-32\n  - [x] 查询所有对象(无任何参数选项)\n  ```python\n  objects = bkt.list_objects()\n\n  //将返回所有对象\n  ```\n  - [x] 查询，每次最多返回3个对象结果。\n  ```python\n  // 2. max keys option.\n  objects = bkt.list_objects(max_keys = 3)\n  //将返回前三个对象，返回的对象是按照对象名进行字典序排列的。\n  ```\n  - [x] 查询，带特定前缀的对象\n  ```python\n  // 3. prefix option.\n  objects = bkt.list_objects(prefix = \"object-2\")\n  //将返回以object-2开头的对象，包含object-2\n  ```\n  - [x] 查询，从特定标记开始之后的对象\n  ```python\n  // 4. marker option.\n  objects = bkt.list_objects(marker = \"object-22\")\n  //将返回以object-22为标记，之后的对象，注意，之后指的是按照字典序排序之后。\n  ```\n  - [x] 查询，多次查询，每次返回最多3个；并迭代查询，直到查询结束。\n  ```python\n  // Case 5: List object with paging. each page has 3 objects\n  mark = ''\n  while True:\n    objs = bkt.list_objects(max_keys = 3, marker = mark)\n\n    //收集对象\n    ......\n\n    //下次的查询需要设置当前查询的返回值NextMarker为marker参数，并作为下次迭代的开始。\n    mark = objs.next_marker\n    if !objs.is_continus:\n      break\n  ```\n  - [x] 查询，从特定标记开始之后的对象，并且每次最多返回3个对象； 并迭代查询，直到查询结束。\n  ```python\n  // Case 6: List object with paging , marker and max keys; return 3 items each time.\n  mark = \"object-22\"\n  while True:\n    objs = bkt.list_objects(max_keys = 3, marker = mark)\n\n    //收集对象\n    ......\n\n    //下次的查询需要设置当前查询的返回值NextMarker为marker参数，并作为下次迭代的开始。\n    mark = objs.next_marker\n    if !obj.is_continous:\n      break\n  ```\n  - [x] 查询，特定前缀的对象，并且每次最多返回3个对象； 并迭代查询，直到查询结束。\n  ```python\n  // Case 7: List object with paging , with prefix and max keys; return 2 items each time.\n  pre = \"object-2\"\n  mark = \"\"\n  while True:\n    objs = bkt.list_objects(prefix = pre, marker = mark, max_keys = 3)\n\n    //收集对象\n    ......\n\n    //下次的查询， 需要设置marker为当前查询的返回值NextMarker，并作为下次迭代的开始。\n    mark = objs.next_marker\n    if !objs.is_continous:\n      break\n  ```\n- **接口使用示例-2**\n  调用步骤：\n  - [x] 准备bucket\n  ```python\n  //Bucket实例已经构造，如上的构造函数示例，\n  bkt = bucket.Bucket(...);\n  ...\n  ```\n  - [x] 查询对象(文件夹下面的对象)\n  假定bucket内的对象如下：\n    - [x] movie/readme.txt\n    - [x] movie/readme.md\n    - [x] movie/love/001.mp4\n    - [x] movie/love/002.rmvb\n    - [x] movie/war/001.avi\n    - [x] movie/war/002.rm\n  - [x] 查询，特定目录下面的文件/文件夹\n  ```python\n\n  objs = bkt.list_objects(prefix = \"movie/\", delimiter = \"/\")\n  //返回以`movie/`开头， 并且以`/`分割的对象或对象前缀\n  // 返回对象(文件) objs.objects\n  //  1. movie/readme.txt\n  //  2. movie/readme.md\n  // 返回对象前缀(文件夹) objs.prefixes\n  //  1. movie/love/\n  //  2. movie/war/\n  ```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://dawn.shareurl.facethink.com",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dawn-sdk",
    "package_url": "https://pypi.org/project/dawn-sdk/",
    "platform": "",
    "project_url": "https://pypi.org/project/dawn-sdk/",
    "project_urls": {
      "Homepage": "http://dawn.shareurl.facethink.com"
    },
    "release_url": "https://pypi.org/project/dawn-sdk/0.0.9/",
    "requires_dist": [
      "requests (!=2.9.0)",
      "lxml (>=4.2.3)",
      "monotonic (>=1.5)"
    ],
    "requires_python": "",
    "summary": "This is the SDK for dawn, which is OSS system. Dawn is honorly presented by TAL's ocean team.",
    "version": "0.0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4142578,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1991ea5be871067f2c1deeab6c526fe3c77837ddf8d8ec989f2381e4a6575eba",
          "md5": "eaadad78ae8ea391eb56e6b7e79d2b70",
          "sha256": "b24e057aad1c24bd513125032986ffde1ebd61efe20a0842eaca3f1f2d940760"
        },
        "downloads": -1,
        "filename": "dawn_sdk-0.0.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "eaadad78ae8ea391eb56e6b7e79d2b70",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 15278,
        "upload_time": "2018-05-24T08:44:02",
        "upload_time_iso_8601": "2018-05-24T08:44:02.204487Z",
        "url": "https://files.pythonhosted.org/packages/19/91/ea5be871067f2c1deeab6c526fe3c77837ddf8d8ec989f2381e4a6575eba/dawn_sdk-0.0.1-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40c91e3bf22275d0cca32738ae1e8fdf4bf5252c6786f55b5b62a228575cc780",
          "md5": "1e08204badf8e5a610afded91328d395",
          "sha256": "570270ccb67ed71c1193347d0c8128e6a398c791181114fff9647c4c479ea4ed"
        },
        "downloads": -1,
        "filename": "dawn-sdk-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1e08204badf8e5a610afded91328d395",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11687,
        "upload_time": "2018-05-24T08:44:03",
        "upload_time_iso_8601": "2018-05-24T08:44:03.964095Z",
        "url": "https://files.pythonhosted.org/packages/40/c9/1e3bf22275d0cca32738ae1e8fdf4bf5252c6786f55b5b62a228575cc780/dawn-sdk-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8980e71446a195240e9121472b1e35fb51847267f95682352c210ac25d21ec9a",
          "md5": "e6429eb37c486c9d27842ca968e956f8",
          "sha256": "a167b27e37dda1a07486b883fd9dd9192f7b3afb2545292cd1be725ce1df50ea"
        },
        "downloads": -1,
        "filename": "dawn_sdk-0.0.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "e6429eb37c486c9d27842ca968e956f8",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 15281,
        "upload_time": "2018-05-24T11:31:19",
        "upload_time_iso_8601": "2018-05-24T11:31:19.333397Z",
        "url": "https://files.pythonhosted.org/packages/89/80/e71446a195240e9121472b1e35fb51847267f95682352c210ac25d21ec9a/dawn_sdk-0.0.2-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61ec0be7f70b716f88cfe1ef270581e7ecbca3efa551d99ff8ba953b8e6b25d8",
          "md5": "88cb5a3ef2bb2c8df17dc5d87dcb9c93",
          "sha256": "6ed49165636da407aa7f4ab8a516de7d5d8d5681519bd07aeebb98ebdffd0034"
        },
        "downloads": -1,
        "filename": "dawn-sdk-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "88cb5a3ef2bb2c8df17dc5d87dcb9c93",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11690,
        "upload_time": "2018-05-24T11:31:20",
        "upload_time_iso_8601": "2018-05-24T11:31:20.559783Z",
        "url": "https://files.pythonhosted.org/packages/61/ec/0be7f70b716f88cfe1ef270581e7ecbca3efa551d99ff8ba953b8e6b25d8/dawn-sdk-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cd61cf7d04558907d09151bb5cedaf52b5d81eb5a9bfadd3553a6267640d5e1",
          "md5": "d110cd72d292347c8407d361287a4270",
          "sha256": "d32a0dc711238fa360b9829d81d02e388f611207e8629e6fa44e35ed433af19a"
        },
        "downloads": -1,
        "filename": "dawn_sdk-0.0.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "d110cd72d292347c8407d361287a4270",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 20522,
        "upload_time": "2018-05-31T13:46:18",
        "upload_time_iso_8601": "2018-05-31T13:46:18.157576Z",
        "url": "https://files.pythonhosted.org/packages/6c/d6/1cf7d04558907d09151bb5cedaf52b5d81eb5a9bfadd3553a6267640d5e1/dawn_sdk-0.0.3-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8acec6355f5fffaa897c2359fe9026fb93def7135904b3f84008d2d7db0ae7e",
          "md5": "ef624b6784ca9766fcd7dc4e44797b7b",
          "sha256": "bbd0b0890ed5160193aaee17a8f4c4472c67f05be7cd3452e120d258147975c8"
        },
        "downloads": -1,
        "filename": "dawn-sdk-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ef624b6784ca9766fcd7dc4e44797b7b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15846,
        "upload_time": "2018-05-31T13:46:19",
        "upload_time_iso_8601": "2018-05-31T13:46:19.526323Z",
        "url": "https://files.pythonhosted.org/packages/a8/ac/ec6355f5fffaa897c2359fe9026fb93def7135904b3f84008d2d7db0ae7e/dawn-sdk-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "652aaa1cd9d78510c955dca4a46c2614245f0e9fc024518802c5e9eec5edb4ec",
          "md5": "8a0cd79e8791cf9daa4cabb4f6cabe94",
          "sha256": "6b1a7677d9fb55d2f265af4c38ad4ce3efd876bb3ffdfb8b43a4e545ed4c09ef"
        },
        "downloads": -1,
        "filename": "dawn_sdk-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8a0cd79e8791cf9daa4cabb4f6cabe94",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20719,
        "upload_time": "2018-06-29T03:46:09",
        "upload_time_iso_8601": "2018-06-29T03:46:09.648381Z",
        "url": "https://files.pythonhosted.org/packages/65/2a/aa1cd9d78510c955dca4a46c2614245f0e9fc024518802c5e9eec5edb4ec/dawn_sdk-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e4a5f01d8f26632a0d5a6a2543eca9c98abeedf469278753b4d6fc24226367e",
          "md5": "b872442dd8e6e25518c5b97391617757",
          "sha256": "a7a2f39229dbb885486505ab9ac9363d1866842bfd25492e2d0aad938204e66b"
        },
        "downloads": -1,
        "filename": "dawn-sdk-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b872442dd8e6e25518c5b97391617757",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16236,
        "upload_time": "2018-06-29T03:46:11",
        "upload_time_iso_8601": "2018-06-29T03:46:11.206334Z",
        "url": "https://files.pythonhosted.org/packages/5e/4a/5f01d8f26632a0d5a6a2543eca9c98abeedf469278753b4d6fc24226367e/dawn-sdk-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9de41be360e0cce89a5d98ee9f75a1d6aae23c86cdd7e4ee97b8d867e4633f5",
          "md5": "4ee636b7857e06035d433269d4f6dc55",
          "sha256": "0ec14447c475a3408e444ac518add66ad818fd73bf913a68798bff7fba795c84"
        },
        "downloads": -1,
        "filename": "dawn_sdk-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ee636b7857e06035d433269d4f6dc55",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20734,
        "upload_time": "2018-06-29T06:01:12",
        "upload_time_iso_8601": "2018-06-29T06:01:12.043869Z",
        "url": "https://files.pythonhosted.org/packages/c9/de/41be360e0cce89a5d98ee9f75a1d6aae23c86cdd7e4ee97b8d867e4633f5/dawn_sdk-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "522260698f9cfe00f33eb25badecbccb0effcbf1b60532fe6099d4b4a91ac56f",
          "md5": "4338049da1a92e7a33c68f757b4babf5",
          "sha256": "e7221f6c27134f088fb3b0523f95e3b59b7b1a565c9951ec9279f1919b83b514"
        },
        "downloads": -1,
        "filename": "dawn-sdk-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4338049da1a92e7a33c68f757b4babf5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16243,
        "upload_time": "2018-06-29T06:01:13",
        "upload_time_iso_8601": "2018-06-29T06:01:13.732160Z",
        "url": "https://files.pythonhosted.org/packages/52/22/60698f9cfe00f33eb25badecbccb0effcbf1b60532fe6099d4b4a91ac56f/dawn-sdk-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e092418dd81024fdc58b85f68bb1604aea5cf0f3e5e17d95c0a97205c5d82194",
          "md5": "8d2750ac46bb465a7c0319ec006cbd1a",
          "sha256": "d7d65cff8ccfc969febd71c2de14c2e88c3798ad9ac03a8a9d8e8f2723dd03ec"
        },
        "downloads": -1,
        "filename": "dawn_sdk-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d2750ac46bb465a7c0319ec006cbd1a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20727,
        "upload_time": "2018-06-29T06:19:34",
        "upload_time_iso_8601": "2018-06-29T06:19:34.947918Z",
        "url": "https://files.pythonhosted.org/packages/e0/92/418dd81024fdc58b85f68bb1604aea5cf0f3e5e17d95c0a97205c5d82194/dawn_sdk-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "652291ee0a00bd49e45550bcfe28b15b07e4d13a397835c67934a97072899bd3",
          "md5": "c243b75b98765dab0a1c0e0bced84dc0",
          "sha256": "b6ef2998dd8d70d0b7f8d1e7497b282d9c922d03fdd583cfca32981fadea0319"
        },
        "downloads": -1,
        "filename": "dawn-sdk-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c243b75b98765dab0a1c0e0bced84dc0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16253,
        "upload_time": "2018-06-29T06:19:36",
        "upload_time_iso_8601": "2018-06-29T06:19:36.556918Z",
        "url": "https://files.pythonhosted.org/packages/65/22/91ee0a00bd49e45550bcfe28b15b07e4d13a397835c67934a97072899bd3/dawn-sdk-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a78090487b0e9a3df07977792186a48c68bbbd7cfd68a836b8a0c38831836035",
          "md5": "1ec2ebd926783918c21c8efe0464c40c",
          "sha256": "f2725634bd4a177df856ec14df1582a406da9f2b716a5f7ae620262df412d774"
        },
        "downloads": -1,
        "filename": "dawn_sdk-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ec2ebd926783918c21c8efe0464c40c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20751,
        "upload_time": "2018-06-29T09:02:58",
        "upload_time_iso_8601": "2018-06-29T09:02:58.390240Z",
        "url": "https://files.pythonhosted.org/packages/a7/80/90487b0e9a3df07977792186a48c68bbbd7cfd68a836b8a0c38831836035/dawn_sdk-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62127e442d2b8938405725f9336c460f51d2806b163985007da42b75507fe306",
          "md5": "c0c77794426ecf04cf230dbec4fb4309",
          "sha256": "a4c2400c18d2b593e5f9b4a8a7e5386a414666db2a6cc3d56682abb1b7d04e4e"
        },
        "downloads": -1,
        "filename": "dawn-sdk-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "c0c77794426ecf04cf230dbec4fb4309",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16278,
        "upload_time": "2018-06-29T09:03:00",
        "upload_time_iso_8601": "2018-06-29T09:03:00.256290Z",
        "url": "https://files.pythonhosted.org/packages/62/12/7e442d2b8938405725f9336c460f51d2806b163985007da42b75507fe306/dawn-sdk-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ef4f27a2a575c10a518b941eed1c2f2e199269614516f98d0dcba4621c3202a",
          "md5": "19ebf7f30c844a1378c70657fa8b1d1d",
          "sha256": "d635018f0af2da1928d5f9d22d3bc2bd04e0380fe0b37e09db77cff0d6d25c31"
        },
        "downloads": -1,
        "filename": "dawn_sdk-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "19ebf7f30c844a1378c70657fa8b1d1d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25205,
        "upload_time": "2018-08-03T03:23:30",
        "upload_time_iso_8601": "2018-08-03T03:23:30.615584Z",
        "url": "https://files.pythonhosted.org/packages/7e/f4/f27a2a575c10a518b941eed1c2f2e199269614516f98d0dcba4621c3202a/dawn_sdk-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5474a6d7accaf6c7029c8652ab7ff40e1505d0e4f7b488e165bbef950d30df6f",
          "md5": "472cb3a73e62a86e297841f73ca8428c",
          "sha256": "a23e8fce0150bcb2c5655ddd53d84afdba1a60160e2362b0e42800a023134be0"
        },
        "downloads": -1,
        "filename": "dawn-sdk-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "472cb3a73e62a86e297841f73ca8428c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24322,
        "upload_time": "2018-08-03T03:23:33",
        "upload_time_iso_8601": "2018-08-03T03:23:33.448160Z",
        "url": "https://files.pythonhosted.org/packages/54/74/a6d7accaf6c7029c8652ab7ff40e1505d0e4f7b488e165bbef950d30df6f/dawn-sdk-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b076df9f470a913faf1a27486035bac002bb7a8380ad64c3a9aaab9e49ce43d",
          "md5": "f9714309ecc852e465bce1332cec74c1",
          "sha256": "f9bfe3ee3cb3e80cdabbcc2f57dc65bf450c39aad7a42783a03588eafbbad801"
        },
        "downloads": -1,
        "filename": "dawn_sdk-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f9714309ecc852e465bce1332cec74c1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25625,
        "upload_time": "2018-08-07T02:51:09",
        "upload_time_iso_8601": "2018-08-07T02:51:09.872751Z",
        "url": "https://files.pythonhosted.org/packages/3b/07/6df9f470a913faf1a27486035bac002bb7a8380ad64c3a9aaab9e49ce43d/dawn_sdk-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8e4e03274d0ff28e66ea8832d324b5421281773ba47191958cf068e6b4df716",
          "md5": "8288111163a82ba848b0150752a43d2d",
          "sha256": "8049195a2124e9b70b109aa5ace9f665d920dc7e18a0fb625221b93b1ef8b575"
        },
        "downloads": -1,
        "filename": "dawn-sdk-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "8288111163a82ba848b0150752a43d2d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24700,
        "upload_time": "2018-08-07T02:51:11",
        "upload_time_iso_8601": "2018-08-07T02:51:11.934597Z",
        "url": "https://files.pythonhosted.org/packages/a8/e4/e03274d0ff28e66ea8832d324b5421281773ba47191958cf068e6b4df716/dawn-sdk-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b076df9f470a913faf1a27486035bac002bb7a8380ad64c3a9aaab9e49ce43d",
        "md5": "f9714309ecc852e465bce1332cec74c1",
        "sha256": "f9bfe3ee3cb3e80cdabbcc2f57dc65bf450c39aad7a42783a03588eafbbad801"
      },
      "downloads": -1,
      "filename": "dawn_sdk-0.0.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f9714309ecc852e465bce1332cec74c1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 25625,
      "upload_time": "2018-08-07T02:51:09",
      "upload_time_iso_8601": "2018-08-07T02:51:09.872751Z",
      "url": "https://files.pythonhosted.org/packages/3b/07/6df9f470a913faf1a27486035bac002bb7a8380ad64c3a9aaab9e49ce43d/dawn_sdk-0.0.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a8e4e03274d0ff28e66ea8832d324b5421281773ba47191958cf068e6b4df716",
        "md5": "8288111163a82ba848b0150752a43d2d",
        "sha256": "8049195a2124e9b70b109aa5ace9f665d920dc7e18a0fb625221b93b1ef8b575"
      },
      "downloads": -1,
      "filename": "dawn-sdk-0.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "8288111163a82ba848b0150752a43d2d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24700,
      "upload_time": "2018-08-07T02:51:11",
      "upload_time_iso_8601": "2018-08-07T02:51:11.934597Z",
      "url": "https://files.pythonhosted.org/packages/a8/e4/e03274d0ff28e66ea8832d324b5421281773ba47191958cf068e6b4df716/dawn-sdk-0.0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}