{
  "info": {
    "author": "ncoop57",
    "author_email": "nacooper01@wm.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "squeakily\n================\n\n<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->\n\nThis repository is heavily inspired by BigScience’s [ROOTs\nproject](https://github.com/bigscience-workshop/data-preparation) and\nEleutherAI’s [The Pile](https://github.com/EleutherAI/the-pile).\n\nThe overall pipeline is as follows:\n\n<div>\n\n<p>\n\n<img src=\"index_files/figure-commonmark/mermaid-figure-1.png\"\nstyle=\"width:5.53in;height:0.72in\" />\n\n</p>\n\n</div>\n\nIn this library, we define filtering as data instances being removed\nfrom the dataset based on some criteria and cleaning as data instances\nbeing modified in some way.\n\n## Install\n\n``` sh\npip install squeakily\n```\n\n## How to use\n\n### Using the API\n\nFirst, we need to define a datasource. `squeakily` accepts any `Dataset`\nobject from the [HuggingFace\nDatasets](https://huggingface.co/docs/datasets/index) library. For\nexample, we can use the\n[wikitext](https://huggingface.co/datasets/wikitext) dataset:\n\n``` python\nfrom datasets import load_dataset\n\nds = load_dataset(\"wikitext\", \"wikitext-103-v1\", split=\"train[:1%]\")\n```\n\nWe simply need to wrap the `Dataset` object in a dictionary, with the\nkey being the name of the datasource and the value being the `Dataset`\nobject, the filter and cleaners. For example:\n\n``` python\nfrom squeakily.filter import check_char_repetition, check_flagged_words\nfrom squeakily.clean import remove_empty_lines, normalize_whitespace\n\ndatasources = [\n    {\n        \"dataset\": ds,\n        \"columns\": [\"text\"],\n        \"filters\": [check_char_repetition, check_flagged_words],\n        \"cleaners\": [remove_empty_lines, normalize_whitespace],\n    },\n    # ...\n]\n```\n\n<div>\n\n> **Warning**\n>\n> Note: The order of the filters and cleaning functions matter. Filters\n> and cleaners are applied in the order they are defined.\n\n</div>\n\n<div>\n\n> **Important**\n>\n> Note: As of now, we only use the first column of the given column\n> names. This is because the `squeakily` library is designed to work\n> with language datasets, which usually have a single column of text.\n> Future versions will support multiple columns.\n\n</div>\n\nFinally, we can apply the filters and cleaners to the datasouces using a\n[`Pipeline`](https://CarperAI.github.io/squeakily/core.html#pipeline)\nobject:\n\n``` python\nfrom squeakily.core import Pipeline\n\npipeline = Pipeline(datasources)\npipeline.run()\n```\n\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf\">[11/16/22 04:32:57] </span><span style=\"color: #000080; text-decoration-color: #000080\">INFO    </span> Running datasource: wikitext                                                <a href=\"file:///fsx/home-nathan/work/squeakily/squeakily/core.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">core.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///fsx/home-nathan/work/squeakily/squeakily/core.py#41\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">41</span></a>\n</pre>\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf\">                    </span><span style=\"color: #000080; text-decoration-color: #000080\">INFO    </span> Running filter: check_char_repetition on text                               <a href=\"file:///fsx/home-nathan/work/squeakily/squeakily/core.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">core.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///fsx/home-nathan/work/squeakily/squeakily/core.py#54\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">54</span></a>\n</pre>\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf\">                    </span><span style=\"color: #000080; text-decoration-color: #000080\">INFO    </span> Running filter: check_flagged_words on text                                 <a href=\"file:///fsx/home-nathan/work/squeakily/squeakily/core.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">core.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///fsx/home-nathan/work/squeakily/squeakily/core.py#54\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">54</span></a>\n</pre>\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf\">                    </span><span style=\"color: #000080; text-decoration-color: #000080\">INFO    </span> Running cleaner: remove_empty_lines on text                                 <a href=\"file:///fsx/home-nathan/work/squeakily/squeakily/core.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">core.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///fsx/home-nathan/work/squeakily/squeakily/core.py#57\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">57</span></a>\n</pre>\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf\">[11/16/22 04:32:59] </span><span style=\"color: #000080; text-decoration-color: #000080\">INFO    </span> Running cleaner: normalize_whitespace on text                               <a href=\"file:///fsx/home-nathan/work/squeakily/squeakily/core.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">core.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///fsx/home-nathan/work/squeakily/squeakily/core.py#57\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">57</span></a>\n</pre>\n\n<div>\n\n> **Note**\n>\n> Note: If you want to run cleaners first, you can pass\n> `cleaning_first=True` to the `run` function.\n>\n> ``` python\n> pipeline.run(cleaning_first=True)\n> ```\n\n</div>\n\nIf you need to run a filter or cleaner at the dataset level rather than\nthe example level, you can pass `global_filters` or `global_cleaners` to\nthe\n[`Pipeline.run`](https://CarperAI.github.io/squeakily/core.html#pipeline.run)\nfunction. For example:\n\n``` python\nfrom squeakily.filter import minhash_dedup\n\npipeline.run(global_filters=[minhash_dedup])\n```\n\n<div>\n\n> **Note**\n>\n> Note: If you use global filters or cleaners, all datasets must have a\n> common column name in order to properly concatenate them.\n\n</div>\n\n<div>\n\n> **Note**\n>\n> Note: You can also specifiy if you want a specific dataset to be\n> skipped by setting the `skip_global` parameter to `True` when defining\n> the datasource.\n>\n> ``` python\n> datasources = [\n>     {\n>         \"dataset\": ds,\n>         \"columns\": [\"text\"],\n>         \"filters\": [check_char_repetition, check_flagged_words],\n>         \"cleaners\": [remove_empty_lines, normalize_whitespace],\n>         \"skip_global\": True,\n>     },\n>     # ...\n> ]\n> ```\n\n</div>\n\nAdditionally, you can run the pipeline in a dry run mode by passing\n`dry_run=True` to the `run` function. This will make no modifications to\nthe datasets’ documents, but will add additional columns to the datasets\nwith the results of the filters and cleaners. For example, if you if you\nran the pipeline with the\n[`check_char_repetition`](https://CarperAI.github.io/squeakily/filter.html#check_char_repetition)\nfilter, you would get a new column called\n[`check_char_repetition`](https://CarperAI.github.io/squeakily/filter.html#check_char_repetition)\nwith a float value between 0 and 1 indicating the percentage of\ncharacters that are repeated in the document.\n\n``` python\n\n::: {.cell}\n``` {.python .cell-code}\npipeline = Pipeline(datasources)\npipeline.run(dry_run=True)\npipeline.datasources[0][\"dataset\"].features\n```\n\n:::\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CarperAI/squeakily",
    "keywords": "nbdev jupyter notebook python",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "squeakily",
    "package_url": "https://pypi.org/project/squeakily/",
    "platform": null,
    "project_url": "https://pypi.org/project/squeakily/",
    "project_urls": {
      "Homepage": "https://github.com/CarperAI/squeakily"
    },
    "release_url": "https://pypi.org/project/squeakily/0.0.2/",
    "requires_dist": [
      "datasketch (==1.5.8)",
      "datasets (==2.7.1)",
      "Faker (==15.3.3)",
      "fastcore",
      "networkit",
      "rich",
      "nbdev ; extra == 'dev'",
      "scrubadub ; extra == 'dev'",
      "twine ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "A library for squeakily cleaning and filtering language datasets.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15937622,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "071bec2d6d0e5d099986446c6d1111e241d6b31e9f4a726922a8828a3a57f710",
          "md5": "9cd1f0419ff5767bf2f2aa18d08b762f",
          "sha256": "c501fd880351ce89f296f56fcf27eb138ed28a735a30cc3ba6834ce0a23da5f6"
        },
        "downloads": -1,
        "filename": "squeakily-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9cd1f0419ff5767bf2f2aa18d08b762f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13503,
        "upload_time": "2022-11-07T02:51:25",
        "upload_time_iso_8601": "2022-11-07T02:51:25.260604Z",
        "url": "https://files.pythonhosted.org/packages/07/1b/ec2d6d0e5d099986446c6d1111e241d6b31e9f4a726922a8828a3a57f710/squeakily-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44dba26bac20bac158d798682d3f35ea991818185ac52fdb72e8c6676ba278d8",
          "md5": "9f7a7ca621ed9ff3eeee0f2dc01dcf5e",
          "sha256": "b64a2f1c74826edc028742669fb90914327abb3db5280482d1a2513c9fef0e71"
        },
        "downloads": -1,
        "filename": "squeakily-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9f7a7ca621ed9ff3eeee0f2dc01dcf5e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14843,
        "upload_time": "2022-11-07T02:51:27",
        "upload_time_iso_8601": "2022-11-07T02:51:27.500223Z",
        "url": "https://files.pythonhosted.org/packages/44/db/a26bac20bac158d798682d3f35ea991818185ac52fdb72e8c6676ba278d8/squeakily-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9dc085d8d44d22c14172d100cd658872acc878265b2a7199904e1f3ac43b004c",
          "md5": "773a51f518a0bfeb7607d0dc63252a4d",
          "sha256": "1625bcb2d322234be3d494f31f4c70675c667f19958f607561a9713075be83c3"
        },
        "downloads": -1,
        "filename": "squeakily-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "773a51f518a0bfeb7607d0dc63252a4d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19958,
        "upload_time": "2022-11-30T04:03:25",
        "upload_time_iso_8601": "2022-11-30T04:03:25.089206Z",
        "url": "https://files.pythonhosted.org/packages/9d/c0/85d8d44d22c14172d100cd658872acc878265b2a7199904e1f3ac43b004c/squeakily-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39aa0421fd40e966964f5e26d7c8536b7d6ab48e84562b8e4e5f6ce59c529d3c",
          "md5": "9b9e1d131a1a88ff08139c0b972a56f5",
          "sha256": "12ea479d62c4d30d7d3560aa7cfb10cda5b92d55f6f12c17399195d45fab36fc"
        },
        "downloads": -1,
        "filename": "squeakily-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9b9e1d131a1a88ff08139c0b972a56f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 21903,
        "upload_time": "2022-11-30T04:03:27",
        "upload_time_iso_8601": "2022-11-30T04:03:27.089928Z",
        "url": "https://files.pythonhosted.org/packages/39/aa/0421fd40e966964f5e26d7c8536b7d6ab48e84562b8e4e5f6ce59c529d3c/squeakily-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9dc085d8d44d22c14172d100cd658872acc878265b2a7199904e1f3ac43b004c",
        "md5": "773a51f518a0bfeb7607d0dc63252a4d",
        "sha256": "1625bcb2d322234be3d494f31f4c70675c667f19958f607561a9713075be83c3"
      },
      "downloads": -1,
      "filename": "squeakily-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "773a51f518a0bfeb7607d0dc63252a4d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 19958,
      "upload_time": "2022-11-30T04:03:25",
      "upload_time_iso_8601": "2022-11-30T04:03:25.089206Z",
      "url": "https://files.pythonhosted.org/packages/9d/c0/85d8d44d22c14172d100cd658872acc878265b2a7199904e1f3ac43b004c/squeakily-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "39aa0421fd40e966964f5e26d7c8536b7d6ab48e84562b8e4e5f6ce59c529d3c",
        "md5": "9b9e1d131a1a88ff08139c0b972a56f5",
        "sha256": "12ea479d62c4d30d7d3560aa7cfb10cda5b92d55f6f12c17399195d45fab36fc"
      },
      "downloads": -1,
      "filename": "squeakily-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "9b9e1d131a1a88ff08139c0b972a56f5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 21903,
      "upload_time": "2022-11-30T04:03:27",
      "upload_time_iso_8601": "2022-11-30T04:03:27.089928Z",
      "url": "https://files.pythonhosted.org/packages/39/aa/0421fd40e966964f5e26d7c8536b7d6ab48e84562b8e4e5f6ce59c529d3c/squeakily-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}