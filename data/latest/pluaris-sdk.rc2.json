{
  "info": {
    "author": "Chethan Pasupuleti",
    "author_email": "<chethanpss24@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "\r\n*MAIN*\r\n\r\n\r\n\r\n\r\n\r\n**SDK_INIT** : This method will take pluaris registered email and will return client_id and clien_secret.\r\n\r\n\r\n\r\nPluarisSDK.sdkInit(email)\r\n\r\n\r\n\r\n    email : email of user who is registered with Pluaris.\r\n\r\n\r\n\r\n\r\n\r\n**LOGIN** : This method will help in logining with the DApp.\r\n\r\n\r\n\r\nPluarisSDK.login(id,client_secret,appid,passphrase)\r\n\r\n \r\n\r\n    _app_id_ : Name of the organisation.\r\n\r\n    _passphrase_ : passphrase of owner / manager / employee.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n**DEPLOY** : This method will create an DApp for an organisation.\r\n\r\n\r\n\r\nPluarisSDK.deploySmartContract(owner_passphrase,org_name,org_Email)\r\n\r\n\r\n\r\n     \r\n\r\n    owner_passphrase : passphrase of the Smart Contract Owner.\r\n\r\n    Org_name : Name of the organisation.\r\n\r\n    Org_email : email of the organisation.\r\n\r\n\r\n\r\n\r\n\r\n**CREATE WALLET** : creating a wallet for the employees and managers in the organisation by the organisation.\r\n\r\n\r\n\r\nPluarisSDK.createWallet( app_id,owner_passphrase,name,email,designation,password, mobile,manager)\r\n\r\n\r\n\r\n    _App id_ : the Id which we got while deploying the contract.\r\n\r\n    _owner passphrase_ : we are getting a public address and private key.\r\n\r\n    \r\n\r\nPublic address for transaction,  Private key for signing the transaction.\r\n\r\n    \r\n\r\n    _Owner passphrase_ : we are getting a public address and private key.\r\n\r\n\r\n\r\n\r\n\r\nPublic address for transaction,  Private key for signing the transaction.\r\n\r\n    \r\n\r\n    _Name_ : name of the employee\r\n\r\n    _Email_ : email of the employee\r\n\r\n    _Designation_ : role of the employee.\r\n\r\n    _Mobile_ : mobile number of the employee\r\n\r\n    _Manager_  : managers wallet address under whom the employee is assigned.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n**CHECK IN** : this is to check when the employee is checking in to the organisation, for checking his attendance.\r\n\r\n\r\n\r\nPluarisSDK.checkIn(app_id, employee_passphrase)\r\n\r\n\r\n\r\n    _App id_ : your application Id.\r\n\r\n    _Employee passphrase_ : employee's passphrase.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n**CHECK OUT** : this is to check when the employee is checking out of the organisation.\r\n\r\n\r\n\r\nPluarisSDK.checkOut(app_id,employee_passphrase)\r\n\r\n\r\n\r\n    _App id_ : your application Id.\r\n\r\n    _Employee passphrase_ : employee's passphrase.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n**leaveRequest** : employee applying for the leave by mentioning the details why they need leave.\r\n\r\n\r\n\r\nPluarisSDK.leaveRequest(app_id,employee_passphrase, reason,fromdate,duration)\r\n\r\n\r\n\r\n    _app id_ : the Id which we got while deploying the contract.\r\n\r\n    _Employee passphrase_ : for getting a public address and private key.\r\n\r\n\r\n\r\nPublic address for transaction,  Private key for signing the transaction\r\n\r\n\r\n\r\n    _Reason_ : reason why the employee is taking leave.\r\n\r\n    _From date_ : from when the leave has been taken.\r\n\r\n    _Duration_ : how many days the leave has been taken.\r\n\r\n\r\n\r\n**leaveApprove**  : employee leave request will be approved by the manager after checking the details given by the employee.\r\n\r\n\r\n\r\nPluarisSDK.leaveApprove(app_id,manager_passphrase, employee_addr, reason, fromdate,duration, status)\r\n\r\n\r\n\r\n    _App id_ : the Id which we got while deploying the contract.\r\n\r\n    _Manager passphrase_ : for getting a public address and private key.\r\n\r\n\r\n\r\nPublic address for transaction,  Private key for signing the transaction\r\n\r\n\r\n\r\n    _Employee address_ : To know the particular employee who requested leave.\r\n\r\n    _Reason_ : reason why the employee is taking leave.\r\n\r\n    _From date_ : from when the leave has been taken.\r\n\r\n    _Duration_ : how many days the leave has been taken.\r\n\r\n    _Status_ : whether the request has been approved or rejected.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n**proofOfLearningRequest** : employee is requesting for proof of learning in the organisation.\r\n\r\n\r\n\r\nPluarisSDK.proofOfLearningRequest(app_id,employee_passphrase, topic,url)\r\n\r\n\r\n\r\n    _App id_ : the Id which we got while deploying the contract.\r\n\r\n    _Employee passphrase_ : for getting a public address and private key.\r\n\r\n\r\n\r\nPublic address for transaction,  Private key for signing the transaction\r\n\r\n\r\n\r\n    _Topic_ : on which topic the employee is requesting proof of learning.\r\n\r\n    _Url_ : link or documentation certified after learning.\r\n\r\n\r\n\r\n**proofOfLearningApproval** : approval of proof of learning requested by the employee by checking the details given by the employee.\r\n\r\n\r\n\r\nPluarisSDK.proofOfLearningApproval(app_id,owner_passphrase,employee_addr, topic,url,status)\r\n\r\n\r\n\r\n    _App id_ : the Id which we got while deploying the contract.\r\n\r\n    _Owner passphrase_ : for getting a public address and private key.\r\n\r\n\r\n\r\nPublic address for transaction,  Private key for signing the transaction.\r\n\r\n\r\n\r\n    _Employee address_ : To know the particular employee who requested proof of learning.\r\n\r\n    _Topic_ : on which topic the employee is requesting proof of learning.\r\n\r\n    _Url_ : link or documentation certified after learning.\r\n\r\n    _Status_ : whether the request has been approved or rejected.\r\n\r\n\r\n\r\n**proofOfExperienceRequest** : employee is requesting for proof of experience in the organisation.\r\n\r\n\r\n\r\nPluarisSDK.proofOfExperienceRequest(app_id,employee_passphrase, org,domain,exp,leaving_date)\r\n\r\n\r\n\r\n    _App id_ : the Id which we got while deploying the contract.\r\n\r\n    _Employee passphrase_ : for getting a public address and private key.\r\n\r\n\r\n\r\nPublic address for transaction,  Private key for signing the transaction.\r\n\r\n\r\n\r\n    _Organisation_ : from which organisation the employee is requesting the proof of experience.\r\n\r\n    _Domain_ : on which topic the employee is requesting proof of experience.\r\n\r\n    _Experience_ : how many years the employee had worked.\r\n\r\n    _Leaving date_ : the of leaving the organisation.\r\n\r\n\r\n\r\n**proofOfExperienceApprovalL** : approval of proof of experience requested by employee by checking the details given by employee.\r\n\r\n\r\n\r\nPluarisSDK.proofOfExperienceApproval(app_id,owner_passphrase,employee_addr, org,domain,exp,leaving_date,status)\r\n\r\n\r\n\r\n    _App id_ : the Id which we got while deploying the contract.\r\n\r\n    _Owner passphrase_ : for getting a public address and private key.\r\n\r\n\r\n\r\nPublic address for transaction,  Private key for signing the transaction.\r\n\r\n\r\n\r\n    _Employee address_ : To know the particular employee who requested proof of experience.\r\n\r\n    _Organisation_ : from which organisation the employee is requesting the proof of experience.\r\n\r\n    _Domain_ : on which topic the employee has requested proof of experience.\r\n\r\n    _Experience_ : how many years the employee had worked.\r\n\r\n    _Leaving date_ : the of leaving the organisation.\r\n\r\n    _Status_ : whether the request has been approved or rejected.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*LOG*\r\n\r\n\r\n\r\n**getAllEmployees** : in this method it will get all the employees under that app_id.\r\n\r\n\r\n\r\nFetchData.getAllEmployees(client_id,client_secret,appid,owner_passphrase)\r\n\r\n\r\n\r\n    _appid_ : Application id.\r\n\r\n    _owner_passphrase_ : passphrase of the owner\r\n\r\n\r\n\r\n\r\n\r\n**getAllManager** : in this method it will get all managers.\r\n\r\n\r\n\r\nFetchData.getAllManager(client_id,client_secret,appid,owner_passphrase)\r\n\r\n\r\n\r\n    _appid_ : Application id.\r\n\r\n    _owner_passphrase_ : passphrase of the owner\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n**getAllEmpsUnderManager** : in this method it will get all the employees under a particular manager.\r\n\r\n\r\n\r\nFetchData.getAllEmpsUnderManager(client_id,client_secret,appid,manager_passphrase)\r\n\r\n\r\n\r\n    _App id_ : the Id which we got while deploying the contract.\r\n\r\n    _manager_passphrase_ : Manager's Passphrase\r\n\r\n\r\n\r\n  \r\n\r\n**getAllEmpsLeaveData** : in this method it will get all the leave requests of the employees in that app id.\r\n\r\n\r\n\r\nFetchData.getAllEmpsLeaveData(client_id,client_secret,appid,emp_passphrase)\r\n\r\n\r\n\r\n    _app_id_ : the Id which we got while deploying the contract.\r\n\r\n    _emp_passphrase_ : Employee's passphrase\r\n\r\n\r\n\r\n\r\n\r\n**getAllEmpsLeaveDataUnderManager** : in this method it will get all the leave requests of the employees under a Manager in that app id.\r\n\r\n\r\n\r\nFetchData.getAllEmpsLeaveDataUnderManager(client_id,client_secret,appid,manager_passphrase)\r\n\r\n\r\n\r\n    _app_id_ : the Id which we got while deploying the contract.\r\n\r\n    _manager_passphrase_ : Manager's passphrase\r\n\r\n\r\n\r\n \r\n\r\n  \r\n\r\n\r\n\r\n**GET ALL PROOF OF LEARNINGS DATA** : it will get all proof of learnings data.\r\n\r\n\r\n\r\nFetchData.getAllPOLs(client_id,client_secret,appid,passphrase)\r\n\r\n\r\n\r\n    _app_id_ : the Id which we got while deploying the contract.\r\n\r\n    _passphrase_ : Employee's or Owner's passphrase\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n**GET ALL PROOF OF EXPERIENCE DATA** : it will get all proof of learnings data.\r\n\r\n\r\n\r\nFetchData.getAllPOEs(client_id,client_secret,appid,passphrase)\r\n\r\n\r\n\r\n    _app_id_ : the Id which we got while deploying the contract.\r\n\r\n    _passphrase_ : Employee's or Owner's passphrase\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*VERIFY*\r\n\r\n  \r\n\r\n\r\n\r\n**Verify Proof of Learning** this will return verified email-id for provided wallet address\r\n\r\n Verify.verifyPOL(client_id,client_secret,appid,verifier_passphrase,wallet_address,topic)\r\n\r\n\r\n\r\nnote: if a verfied topic exists for a user. one algo will be transferred from verifier's wallet to the given wallet address\r\n\r\n\r\n\r\n    _app_id_ : the Id which we got while deploying the contract.\r\n\r\n    _verifier_passphrase_: Verifier's passphrase\r\n\r\n    _wallet_address_ : address of the one's wallet that will return their verified given topic if exisits\r\n\r\n    _topic_ : topic to be verfied\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n**Verify Proof of Experience** this will return verified email-id for provided wallet address\r\n\r\n Verify.verifyPOE(client_id,client_secret,appid,verifier_passphrase,wallet_address,domain)\r\n\r\n\r\n\r\nnote: if a verfied domain exists for a user. one algo will be transferred from verifier's wallet to the given wallet address\r\n\r\n\r\n\r\n    _app_id_ : the Id which we got while deploying the contract.\r\n\r\n    _verifier_passphrase_: Verifier's passphrase\r\n\r\n    _wallet_address_ : address of the one's wallet that will return their verified Emailid if exisits\r\n\r\n    _domain_ : domain to be verified\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n**verifyEmail** this will return verified email-id for provided wallet address\r\n\r\n Verify.verifyEmail(client_id,client_secret,appid,verifier_passphrase,wallet_address)\r\n\r\n\r\n\r\nnote: if a verfied email id exists for a user. one algo will be transferred from verifier's wallet to the given wallet address\r\n\r\n\r\n\r\n    _app_id_ : the Id which we got while deploying the contract.\r\n\r\n    _verifier_passphrase_: Verifier's passphrase\r\n\r\n    _wallet_address_ : address of the one's wallet that will return their verified Emailid if exisits\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n**verifyMobile** this will return verified Mobile number for provided wallet address\r\n\r\n Verify.verifyMobile(client_id,client_secret,appid,verifier_passphrase,wallet_address)\r\n\r\n\r\n\r\n note: if a verfied mobile number exists for a user. one algo will be transferred from verifier's wallet to the given wallet address\r\n\r\n\r\n\r\n    _app_id_ : the Id which we got while deploying the contract.\r\n\r\n    _verifier_passphrase_: Verifier's passphrase\r\n\r\n    _wallet_address_ : address of the one's wallet that will return their verified mobile number if exisits\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,pluaris,algorand,sdk,smart contract",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pluaris-sdk",
    "package_url": "https://pypi.org/project/pluaris-sdk/",
    "platform": null,
    "project_url": "https://pypi.org/project/pluaris-sdk/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pluaris-sdk/0.0.8/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "Create a DAPP for your organisation and Manage all your Organisational Activities.",
    "version": "0.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15906706,
  "releases": {
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "532645dde9125ab301791913cd130a12c3c3aea306ca2d42c8e2a1e2c9efb270",
          "md5": "bd60cbd4c0f1d90fd6ee6ab4de49753d",
          "sha256": "fed546ebc977e3927dcc7d677b34bb701a2066014431cf4fdfe4ee92857c2b18"
        },
        "downloads": -1,
        "filename": "pluaris_sdk-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bd60cbd4c0f1d90fd6ee6ab4de49753d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5411,
        "upload_time": "2022-11-24T09:30:15",
        "upload_time_iso_8601": "2022-11-24T09:30:15.108260Z",
        "url": "https://files.pythonhosted.org/packages/53/26/45dde9125ab301791913cd130a12c3c3aea306ca2d42c8e2a1e2c9efb270/pluaris_sdk-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "339f8f87e0377db8d5eeb7857d787368a56658e3205a47f172731670c12a1d90",
          "md5": "3863289751423960936d6a5d360d3279",
          "sha256": "8c58766a4acdf05b33e96c83bfc6cfdedd6fdefc3ca01be96ad2b66fe1870be4"
        },
        "downloads": -1,
        "filename": "pluaris-sdk-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "3863289751423960936d6a5d360d3279",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4645,
        "upload_time": "2022-11-24T09:30:16",
        "upload_time_iso_8601": "2022-11-24T09:30:16.999900Z",
        "url": "https://files.pythonhosted.org/packages/33/9f/8f87e0377db8d5eeb7857d787368a56658e3205a47f172731670c12a1d90/pluaris-sdk-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fddb568839639a112c67468e74175c81f52e6f2fae59251fc8832d4915ea917",
          "md5": "3c5dee89af74850e1c0491a70d502a3c",
          "sha256": "03e5f57091afba604201c4aed8ef8dfab35c80bb34f87848eca23833f4550935"
        },
        "downloads": -1,
        "filename": "pluaris_sdk-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3c5dee89af74850e1c0491a70d502a3c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5771,
        "upload_time": "2022-11-27T20:04:25",
        "upload_time_iso_8601": "2022-11-27T20:04:25.080210Z",
        "url": "https://files.pythonhosted.org/packages/8f/dd/b568839639a112c67468e74175c81f52e6f2fae59251fc8832d4915ea917/pluaris_sdk-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca57f390195a142c9b4cf48bfef78f59dc60062d6f4d0f9379edbbdfbdfb43f7",
          "md5": "69fa43f2311f5d9543932973a5c48d27",
          "sha256": "db0492362fa860cf0c72794568327379a3fc871593d22de2e95349b1998df433"
        },
        "downloads": -1,
        "filename": "pluaris-sdk-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "69fa43f2311f5d9543932973a5c48d27",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6437,
        "upload_time": "2022-11-27T20:04:26",
        "upload_time_iso_8601": "2022-11-27T20:04:26.927501Z",
        "url": "https://files.pythonhosted.org/packages/ca/57/f390195a142c9b4cf48bfef78f59dc60062d6f4d0f9379edbbdfbdfb43f7/pluaris-sdk-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8fddb568839639a112c67468e74175c81f52e6f2fae59251fc8832d4915ea917",
        "md5": "3c5dee89af74850e1c0491a70d502a3c",
        "sha256": "03e5f57091afba604201c4aed8ef8dfab35c80bb34f87848eca23833f4550935"
      },
      "downloads": -1,
      "filename": "pluaris_sdk-0.0.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3c5dee89af74850e1c0491a70d502a3c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5771,
      "upload_time": "2022-11-27T20:04:25",
      "upload_time_iso_8601": "2022-11-27T20:04:25.080210Z",
      "url": "https://files.pythonhosted.org/packages/8f/dd/b568839639a112c67468e74175c81f52e6f2fae59251fc8832d4915ea917/pluaris_sdk-0.0.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ca57f390195a142c9b4cf48bfef78f59dc60062d6f4d0f9379edbbdfbdfb43f7",
        "md5": "69fa43f2311f5d9543932973a5c48d27",
        "sha256": "db0492362fa860cf0c72794568327379a3fc871593d22de2e95349b1998df433"
      },
      "downloads": -1,
      "filename": "pluaris-sdk-0.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "69fa43f2311f5d9543932973a5c48d27",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6437,
      "upload_time": "2022-11-27T20:04:26",
      "upload_time_iso_8601": "2022-11-27T20:04:26.927501Z",
      "url": "https://files.pythonhosted.org/packages/ca/57/f390195a142c9b4cf48bfef78f59dc60062d6f4d0f9379edbbdfbdfb43f7/pluaris-sdk-0.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}