{
  "info": {
    "author": "Sebastiaan Groot",
    "author_email": "sebastiaang@kpn-cert.nl",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# eiqlib\na python3 library for interacting with EclecticIQ\n\n## eiqjson\na simple python3 library for generating EIQ API json bodies.\nonly compatible with EclecticIQ 2.2\n\n### dependencies\n- python3\n- standard python3 libraries (json, time, uuid, urllib.request)\n- EclecticIQ 2.2 (as server for the API to communicate with)\n\n### example usage of eiqjson.EIQEntity\n\n```python\nfrom eiqlib.eiqjson import EIQEntity\nindicator = EIQEntity()\n\n# General entity settings\nindicator.set_entity(indicator.ENTITY_INDICATOR)\nindicator.set_entity_title('[tag1] [tag2] <domain> - <iso-8601 timestamp>')\nindicator.set_entity_description('<from email-address>\\n<email subject>\\n<notes about sighting type>')\nindicator.set_entity_observed_time('YYYY-MM-DDTHH:MM:SSZ')\nindicator.set_entity_confidence('Unknown')\nindicator.set_entity_tlp('AMBER')\nindicator.set_entity_source('<uuid of ingestion source>')\n\n# Indicator-specific required fields\nindicator.set_entity_impact('Unknown')\nindicator.add_indicator_type(indicator.INDICATOR_C2)\nindicator.add_indicator_type(indicator.INDICATOR_HOST_CHARACTERISTICS)\n\n# Adding observables\nindicator.add_observable(indicator.OBSERVABLE_IPV4, '127.0.0.1')\nindicator.add_observable(indicator.OBSERVABLE_DOMAIN, 'www.example.org')\nindicator.add_observable(indicator.OBSERVABLE_URI, 'https://www.example.org/test.php')\nindicator.add_observable(indicator.OBSERVABLE_EMAIL, 'postmaster@example.org')\n\nwith open('EntityTitle.json', 'w') as f:\n  f.write(indicator.get_as_json())\n```\n\n### example usage of eiqjson.EIQRelation\n\n```python\nfrom eiqlib.eiqjson import EIQEntity, EIQRelation\nrel = EIQRelation()\nrel.set_relation(rel.RELATION_STIX_UPDATE)\nrel.set_source('<uuid of updated entity>', EIQEntity.ENTITY_SIGHTING)\nrel.set_target('<uuid of superseded entity>', EIQEntity.ENTITY_SIGHTING)\nrel.set_ingest_source('<uuid of ingestion source>')\n\nwith open('UpdateCall.json', 'w') as f:\n  f.write(rel.get_as_json())\n```\n\n## eiqcalls\npython3 bindings to the EclecticIQ REST api\n\n### dependencies\n- python3\n- standard python3 libraries (json, urllib.request)\n\n### example usage\n\n```python\nfrom eiqlib.eiqcalls import EIQApi\napi = EIQApi()\napi.set_host('https://eiq.lan/private')\napi.set_credentials('<username>', '<password>')\n\n# entity_json can be generated with the help of eiqjson.EIQEntity\nresponse = api.create_entity(entity_json)\nif not response or 'errors' in response:\n  if response:\n    for err in response['errors']:\n      print('[error %d] %s' % (err['status'], err['title']))\n      print('\\t%s' % (err['detail'],))\n  else:\n    print('unable to get a response from host')\n```\n\n### example of auto-updating previous entities\n```python\nfrom eiqlib.eiqcalls import EIQApi\napi = EIQApi()\napi.set_host('https://eiq.lan/private')\napi.set_credentials('<username>', '<password>')\n# [optional] generating a token this way allows you to pass it manually to all other\n# calls of EIQApi. If you do not pass a token to EIQApi methods, it does a do_auth\n# call internally.\ntoken = api.do_auth()\n\n# entity_json can be generated with the help of eiqjson.EIQEntity\n# if you use create_entity this way, every subsequently created entity using the same update_identifier\n# will update the latest version already in EIQ\nresponse = api.create_entity(entity_json, token=token, update_identifier=\"Event-000\")\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/KPN-CISO/eiqlib",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "eiqlib",
    "package_url": "https://pypi.org/project/eiqlib/",
    "platform": "",
    "project_url": "https://pypi.org/project/eiqlib/",
    "project_urls": {
      "Homepage": "https://github.com/KPN-CISO/eiqlib"
    },
    "release_url": "https://pypi.org/project/eiqlib/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A python3 library for interacting with EclecticIQ",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8602543,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "994d6d12f240e33b9a4ee0cc87f7a37bfe202af2d4ca8ada7a7a7aed2f1b6996",
          "md5": "4f5f30d698d4e082868917aeeb71279f",
          "sha256": "57e64cced4881f8f7e207aa9446354bf7a60966a511e03174ed9ae143c35e870"
        },
        "downloads": -1,
        "filename": "eiqlib-1.0.0-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "4f5f30d698d4e082868917aeeb71279f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11997,
        "upload_time": "2020-11-07T08:18:37",
        "upload_time_iso_8601": "2020-11-07T08:18:37.147338Z",
        "url": "https://files.pythonhosted.org/packages/99/4d/6d12f240e33b9a4ee0cc87f7a37bfe202af2d4ca8ada7a7a7aed2f1b6996/eiqlib-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3218a3b4e5e199c5b9cd7d321ddfc8bb1898adf04260d7d33e68802bef10d8f0",
          "md5": "a3b95561ec56cf514c3e34e329a490f3",
          "sha256": "8987980f057fef877979d71ebf1a2896013969b85cc76fe4a3c6d784158d764f"
        },
        "downloads": -1,
        "filename": "eiqlib-1.0.0.tar.gz",
        "has_sig": true,
        "md5_digest": "a3b95561ec56cf514c3e34e329a490f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12013,
        "upload_time": "2020-11-07T08:18:40",
        "upload_time_iso_8601": "2020-11-07T08:18:40.187659Z",
        "url": "https://files.pythonhosted.org/packages/32/18/a3b4e5e199c5b9cd7d321ddfc8bb1898adf04260d7d33e68802bef10d8f0/eiqlib-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "994d6d12f240e33b9a4ee0cc87f7a37bfe202af2d4ca8ada7a7a7aed2f1b6996",
        "md5": "4f5f30d698d4e082868917aeeb71279f",
        "sha256": "57e64cced4881f8f7e207aa9446354bf7a60966a511e03174ed9ae143c35e870"
      },
      "downloads": -1,
      "filename": "eiqlib-1.0.0-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "4f5f30d698d4e082868917aeeb71279f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11997,
      "upload_time": "2020-11-07T08:18:37",
      "upload_time_iso_8601": "2020-11-07T08:18:37.147338Z",
      "url": "https://files.pythonhosted.org/packages/99/4d/6d12f240e33b9a4ee0cc87f7a37bfe202af2d4ca8ada7a7a7aed2f1b6996/eiqlib-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3218a3b4e5e199c5b9cd7d321ddfc8bb1898adf04260d7d33e68802bef10d8f0",
        "md5": "a3b95561ec56cf514c3e34e329a490f3",
        "sha256": "8987980f057fef877979d71ebf1a2896013969b85cc76fe4a3c6d784158d764f"
      },
      "downloads": -1,
      "filename": "eiqlib-1.0.0.tar.gz",
      "has_sig": true,
      "md5_digest": "a3b95561ec56cf514c3e34e329a490f3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12013,
      "upload_time": "2020-11-07T08:18:40",
      "upload_time_iso_8601": "2020-11-07T08:18:40.187659Z",
      "url": "https://files.pythonhosted.org/packages/32/18/a3b4e5e199c5b9cd7d321ddfc8bb1898adf04260d7d33e68802bef10d8f0/eiqlib-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}