{
  "info": {
    "author": "",
    "author_email": "Andreas Motl <andreas.motl@panodata.org>, Richard Pobering <richard.pobering@panodata.org>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Framework :: Pytest",
      "Intended Audience :: Customer Service",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Legal Industry",
      "Intended Audience :: Manufacturing",
      "Intended Audience :: System Administrators",
      "Intended Audience :: Telecommunications Industry",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX :: Linux",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.12",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Communications",
      "Topic :: Education",
      "Topic :: Home Automation",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Object Brokering",
      "Topic :: System :: Hardware",
      "Topic :: System :: Logging",
      "Topic :: System :: Monitoring",
      "Topic :: System :: Networking",
      "Topic :: System :: Networking :: Monitoring",
      "Topic :: System :: Systems Administration",
      "Topic :: Utilities"
    ],
    "description": ".. image:: https://github.com/mqtt-tools/pytest-mqtt/actions/workflows/tests.yml/badge.svg\n    :target: https://github.com/mqtt-tools/pytest-mqtt/actions/workflows/tests.yml\n    :alt: CI outcome\n\n.. image:: https://codecov.io/gh/mqtt-tools/pytest-mqtt/branch/main/graph/badge.svg\n    :target: https://codecov.io/gh/mqtt-tools/pytest-mqtt\n    :alt: Test suite code coverage\n\n.. image:: https://pepy.tech/badge/pytest-mqtt/month\n    :target: https://pepy.tech/project/pytest-mqtt\n    :alt: PyPI downloads per month\n\n.. image:: https://img.shields.io/pypi/v/pytest-mqtt.svg\n    :target: https://pypi.org/project/pytest-mqtt/\n    :alt: Package version on PyPI\n\n.. image:: https://img.shields.io/pypi/status/pytest-mqtt.svg\n    :target: https://pypi.org/project/pytest-mqtt/\n    :alt: Project status (alpha, beta, stable)\n\n.. image:: https://img.shields.io/pypi/pyversions/pytest-mqtt.svg\n    :target: https://pypi.org/project/pytest-mqtt/\n    :alt: Supported Python versions\n\n.. image:: https://img.shields.io/pypi/l/pytest-mqtt.svg\n    :target: https://github.com/mqtt-tools/pytest-mqtt/blob/main/LICENSE\n    :alt: Project license\n\n|\n\n###########\npytest-mqtt\n###########\n\n\n*****\nAbout\n*****\n\n``pytest-mqtt`` supports testing systems based on MQTT by providing test\nfixtures for ``pytest``. It has been conceived for the fine\n`terkin-datalogger`_ and `mqttwarn`_ programs.\n\n``capmqtt`` fixture\n===================\n\nCapture MQTT messages, using the `Paho MQTT Python Client`_, in the spirit of\n``caplog`` and ``capsys``. It can also be used to publish MQTT messages.\n\n``mosquitto`` fixture\n=====================\n\nProvide the `Mosquitto`_ MQTT broker as a session-scoped fixture to your test\ncases.\n\n\n*****\nUsage\n*****\n\n::\n\n    from pytest_mqtt.model import MqttMessage\n\n    @pytest.mark.capmqtt_decode_utf8\n    def test_mqtt_send_receive(mosquitto, capmqtt):\n        \"\"\"\n        Basic send/receive roundtrip, using text payload (`str`).\n\n        By using the `capmqtt_decode_utf8` marker, the message payloads\n        will be recorded as `str`, after decoding them from `utf-8`.\n        Otherwise, message payloads would be recorded as `bytes`.\n        \"\"\"\n\n        # Submit a basic MQTT message.\n        capmqtt.publish(topic=\"foo\", payload=\"bar\")\n\n        # Demonstrate the \"messages\" property.\n        # It returns a list of \"MqttMessage\" objects.\n        assert capmqtt.messages == [\n            MqttMessage(topic=\"foo\", payload=\"bar\", userdata=None),\n        ]\n\n        # Demonstrate the \"records\" property.\n        # It returns tuples of \"(topic, payload, userdata)\".\n        assert capmqtt.records == [\n            (\"foo\", \"bar\", None),\n        ]\n\n\nThe ``capmqtt_decode_utf8`` setting can be enabled in three ways.\n\n\n1. Session-wide, per ``pytestconfig`` option, for example within ``conftest.py``::\n\n      @pytest.fixture(scope=\"session\", autouse=True)\n      def configure_capmqtt_decode_utf8(pytestconfig):\n          pytestconfig.option.capmqtt_decode_utf8 = True\n\n2. On the module level, just say ``capmqtt_decode_utf8 = True`` on top of your file.\n3. On individual test cases as a test case marker, using ``@pytest.mark.capmqtt_decode_utf8``.\n\n\n******\nIssues\n******\n\n- Both fixtures currently do not support changing the MQTT broker hostname and\n  port number differently than ``localhost:1883``.\n\n- The ``mosquitto`` fixture currently does not support either authentication or\n  encryption.\n\n- ``capmqtt`` should be able to capture messages only from specified topics.\n\n\n***********\nDevelopment\n***********\n\n::\n\n    git clone https://github.com/mqtt-tools/pytest-mqtt\n    cd pytest-mqtt\n    python3 -m venv .venv\n    source .venv/bin/activate\n    pip install --editable=.[test,develop]\n    poe test\n\n\n*******************\nProject information\n*******************\n\nContributions\n=============\n\nEvery kind of contribution, feedback, or patch, is much welcome. `Create an\nissue`_ or submit a patch if you think we should include a new feature, or to\nreport or fix a bug.\n\nResources\n=========\n\n- `Source code <https://github.com/mqtt-tools/pytest-mqtt>`_\n- `Documentation <https://github.com/mqtt-tools/pytest-mqtt>`_\n- `Python Package Index (PyPI) <https://pypi.org/project/pytest-mqtt/>`_\n\nLicense\n=======\n\nThe project is licensed under the terms of the MIT license, see `LICENSE`_.\n\n\n.. _Create an issue: https://github.com/mqtt-tools/pytest-mqtt/issues/new\n.. _LICENSE: https://github.com/mqtt-tools/pytest-mqtt/blob/main/LICENSE\n.. _Mosquitto: https://github.com/eclipse/mosquitto\n.. _mqttwarn: https://github.com/jpmens/mqttwarn/\n.. _Paho MQTT Python Client: https://github.com/eclipse/paho.mqtt.python\n.. _terkin-datalogger: https://github.com/hiveeyes/terkin-datalogger/\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "mqtt,pytest,testing,mosquitto,paho",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytest-mqtt",
    "package_url": "https://pypi.org/project/pytest-mqtt/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytest-mqtt/",
    "project_urls": {
      "changelog": "https://github.com/mqtt-tools/pytest-mqtt/blob/main/CHANGES.rst",
      "documentation": "https://github.com/mqtt-tools/pytest-mqtt",
      "homepage": "https://github.com/mqtt-tools/pytest-mqtt",
      "repository": "https://github.com/mqtt-tools/pytest-mqtt"
    },
    "release_url": "https://pypi.org/project/pytest-mqtt/0.2.0/",
    "requires_dist": [
      "paho-mqtt (<2)",
      "pytest-docker-fixtures (<2)",
      "dataclasses ; python_version < \"3.7\"",
      "importlib-metadata ; python_version < \"3.8\"",
      "isort (<6) ; extra == 'develop'",
      "black (<23) ; extra == 'develop'",
      "poethepoet (<1) ; extra == 'develop'",
      "ruff ; extra == 'develop'",
      "build (<1) ; extra == 'release'",
      "twine (<5) ; extra == 'release'",
      "minibump (<1) ; (python_version >= \"3.10\") and extra == 'release'",
      "coverage (<7) ; extra == 'test'",
      "pytest (<8) ; extra == 'test'",
      "pytest-fixture-order (<1) ; extra == 'test'",
      "pytest-ordering (<1) ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "pytest-mqtt supports testing systems based on MQTT",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17307564,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6aa8eb66e3108f23d02ab58a5c5be8ad2d39e9319291eb571a3e2a5f409d649b",
          "md5": "4025bf2bd57ab96c3e853f02879c2cbd",
          "sha256": "9a8e09a1c8d29fd65dd0461ce97e700b3cbe444ae632c720da3a1a4d09e7153f"
        },
        "downloads": -1,
        "filename": "pytest_mqtt-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4025bf2bd57ab96c3e853f02879c2cbd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8604,
        "upload_time": "2022-09-20T10:36:53",
        "upload_time_iso_8601": "2022-09-20T10:36:53.042278Z",
        "url": "https://files.pythonhosted.org/packages/6a/a8/eb66e3108f23d02ab58a5c5be8ad2d39e9319291eb571a3e2a5f409d649b/pytest_mqtt-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "298945248a20038be3a9a787b78e22ecc3b1f96524d3a1b6c06adcf3e2715b98",
          "md5": "ed7414536c9ba7e378b802ded3e6d5dc",
          "sha256": "58d9ce244ee511f9e9fe213e72e4e0550043a778f470e08964abafa3c5412d09"
        },
        "downloads": -1,
        "filename": "pytest-mqtt-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ed7414536c9ba7e378b802ded3e6d5dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9449,
        "upload_time": "2022-09-20T10:36:55",
        "upload_time_iso_8601": "2022-09-20T10:36:55.312672Z",
        "url": "https://files.pythonhosted.org/packages/29/89/45248a20038be3a9a787b78e22ecc3b1f96524d3a1b6c06adcf3e2715b98/pytest-mqtt-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f203c8cd7a4a2ef078e04d90ed173004e18951ec00f7cb7ee63f697a0df8d56",
          "md5": "b40a3ddd5d4e3ba4477a1ab63cd7bbde",
          "sha256": "68c6806518dcc2dbeb4f4a1702cd9f2ba20c447839c8bc25b79dd1258e0c09d0"
        },
        "downloads": -1,
        "filename": "pytest_mqtt-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b40a3ddd5d4e3ba4477a1ab63cd7bbde",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8729,
        "upload_time": "2023-03-15T18:16:41",
        "upload_time_iso_8601": "2023-03-15T18:16:41.649034Z",
        "url": "https://files.pythonhosted.org/packages/6f/20/3c8cd7a4a2ef078e04d90ed173004e18951ec00f7cb7ee63f697a0df8d56/pytest_mqtt-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa6d99e6cdc119d6b8b7e5195fcbd80f66ced9e78cfac3c79010e65a58b3f596",
          "md5": "2bb7f918079070e1db09cb2a0202168f",
          "sha256": "fb9327896a509050ae4151ec6dbf31a0a31a2e0338acd96d02c260d5139377d0"
        },
        "downloads": -1,
        "filename": "pytest-mqtt-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2bb7f918079070e1db09cb2a0202168f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9705,
        "upload_time": "2023-03-15T18:16:43",
        "upload_time_iso_8601": "2023-03-15T18:16:43.434977Z",
        "url": "https://files.pythonhosted.org/packages/aa/6d/99e6cdc119d6b8b7e5195fcbd80f66ced9e78cfac3c79010e65a58b3f596/pytest-mqtt-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6f203c8cd7a4a2ef078e04d90ed173004e18951ec00f7cb7ee63f697a0df8d56",
        "md5": "b40a3ddd5d4e3ba4477a1ab63cd7bbde",
        "sha256": "68c6806518dcc2dbeb4f4a1702cd9f2ba20c447839c8bc25b79dd1258e0c09d0"
      },
      "downloads": -1,
      "filename": "pytest_mqtt-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b40a3ddd5d4e3ba4477a1ab63cd7bbde",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8729,
      "upload_time": "2023-03-15T18:16:41",
      "upload_time_iso_8601": "2023-03-15T18:16:41.649034Z",
      "url": "https://files.pythonhosted.org/packages/6f/20/3c8cd7a4a2ef078e04d90ed173004e18951ec00f7cb7ee63f697a0df8d56/pytest_mqtt-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa6d99e6cdc119d6b8b7e5195fcbd80f66ced9e78cfac3c79010e65a58b3f596",
        "md5": "2bb7f918079070e1db09cb2a0202168f",
        "sha256": "fb9327896a509050ae4151ec6dbf31a0a31a2e0338acd96d02c260d5139377d0"
      },
      "downloads": -1,
      "filename": "pytest-mqtt-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2bb7f918079070e1db09cb2a0202168f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9705,
      "upload_time": "2023-03-15T18:16:43",
      "upload_time_iso_8601": "2023-03-15T18:16:43.434977Z",
      "url": "https://files.pythonhosted.org/packages/aa/6d/99e6cdc119d6b8b7e5195fcbd80f66ced9e78cfac3c79010e65a58b3f596/pytest-mqtt-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}