{
  "info": {
    "author": "Andrew Guy",
    "author_email": "andrewjguy42@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "Biostructmap\n============\n\nBiostructmap is a Python tool for mapping sequence-aligned data (such as\nlocation of polymorphisms) onto a protein structure.\n\nAdditionally, biostructmap allows for the incorporation of residue\nspatial-proximity into sliding-window calculations, and can be used to\nincorporate protein structure information into genetic tests of\nselection pressure.\n\nA web-based interface is available `here <https://biostructmap.burnet.edu.au>`__,\nalthough the Python package is more flexible and likely to be faster.\n\nTable of Contents\n=================\n\n-  `Usage Examples <#usage-examples>`__\n-  `Prerequisites <#prerequisites>`__\n-  `Installing <#installing>`__\n-  `Testing <#running-the-tests>`__\n-  `Contributing <#contributing>`__\n-  `Versioning <#versioning>`__\n-  `Authors <#authors>`__\n-  `License <#license>`__\n-  `Citing <#citing>`__\n-  `Acknowledgments <#acknowledgments>`__\n\nGetting Started\n---------------\n\nUsage Examples\n--------------\n\n\nCalculate proportion of polymorphic residues within a radius\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nA simple usage case may be identification of regions of the protein with\na high percentage of polymorphic residues. If we are perhaps interested\nin antibody-antigen interaction, 15 Angstrom is a reasonable radius over\nwhich to average over.\n\n::\n\n    import biostructmap\n\n    # Initialise structure object\n    structure = biostructmap.Structure('1zrl.pdb', 'test_pdb_name')\n\n    # The location of known polymorphisms relative to the PDB sequence (we are not\n    # providing a reference sequence for this example), for each chain.\n    data = {('A',): [200, 276, 300, 480, 367, 349]}\n\n    # Map polymorphism data using a radius of 15 Angstrom. Results are returned\n    # in a new object.\n    results = structure.map(data, method='snps', ref=None, radius=15)\n\n    # Use the results object to write data to a local PDB file, with data saved\n    # in the B-factor column\n    results.write_data_to_pdb_b_factor(fileobj='test_pdb_data_write.pdb')\n\nCalculation of average hydrophobicity for all surface exposed residues\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nA slighly more complicated usage case may be the calculation of an\naverage amino acid propensity scale, such as the Kyte & Doolittle index\nof hydrophobicity. Additionally, if we are solely interested in surface\nexposed residues, we may wish to restrict analysis to only residues with\na relative solvent accessibility greater than 0.2.\n\n::\n\n    import biostructmap\n\n    # Initialise structure object\n    structure = biostructmap.Structure('1zrl.pdb', 'test_pdb_name')\n\n    # For this method, the data parameter is a string which represents the amino\n    # acid propensity scale we wish to use. Note the use of the optional rsa_range\n    # parameter to restrict to surface exposed residues.\n    results = chain.map(data='kd', method='aa_scale', ref=None, radius=15,\n                        rsa_range=(0.2, 1.0))\n\n    # Use the results object to write data to a local PDB file, with data saved\n    # in the B-factor column\n    results.write_data_to_pdb_b_factor(fileobj='test_pdb_data_write.pdb')\n\nCalculation of Tajima's D using protein structural information\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWe can also use the biostructmap package to calculate a modified\nTajima's D value which incorporates protein structural information ---\nessentially using a 3D sliding window instead of the standard 2D sliding\nwindow often applied over a protein sequence.\n\n::\n\n    import biostructmap\n\n    # Initialise structure object\n    structure = biostructmap.Structure('1zrl.pdb', 'test_pdb_name')\n\n    # Read in multiple sequence alignment data\n    msa_data = biostructmap.SequenceAlignment('seq_align.fsa')\n    data = {('A',): msa_data}\n\n    # Reference seq might be the first sequence in the multiple sequence alignment\n    reference_seq = {'A': str(msa_data[0].seq)}\n\n    results = structure.map(data=data, method='tajimasd', ref=reference_seq,\n                        radius=15, map_to_dna=True)\n\n    results.write_data_to_pdb_b_factor(fileobj='test_pdb_data_write.pdb')\n\nResult can be easily viewed in PyMol using the ``spectrum`` command.\n\nFrom the Pymol command line:\n\n::\n\n    load my_pdb_file_name_here\n\n    as surface\n\n    #Select all residues with a mapped data value. Can change the default 'no-value'\n    #option when writing to pdb b factor using biostructmap if needed.\n    select nonzeros, b < 0 | b > 0\n\n    color white\n\n    spectrum b, selection=nonzeros\n\n    #Make a publication quality image. May need to center molecule and perhaps\n    #adjust image size to your requirements.\n    set ray_opaque_background, off\n    ray 2400, 2400\n    cmd.png('output_file_name.png', dpi=300)\n\nPrerequisites\n-------------\n\nInstalling the biostructmap package requires both an install of the main\npackage, as well as optional install of a few external binaries (NCBI BLAST+,\nExonerate and DSSP).\n\nBLAST+:\n^^^^^^^\n\nTo install the BLAST+ package, visit the `NCBI BLAST+\nsite <https://blast.ncbi.nlm.nih.gov/>`__ and follow the links to\ndownload and install a local copy of the BLAST+ application.\n\nBLAST+ is not required, but is recommended. If BLAST+ is not installed,\na fallback pairwise alignment is performed using BioPython.pairwise2, and\nthe user should indicate that BLAST+ is not installed by including:\n\n::\n\n    import biostructmap\n\n    biostructmap.seqtools.LOCAL_BLAST = False\n\n\nDSSP:\n^^^^^\n\nTo install DSSP, visit the `DSSP\nwebsite <http://swift.cmbi.ru.nl/gv/dssp/>`__ and follow the\ninstructions for install. Alternatively, users of recent Ubuntu or\nDebian distributions will find that DSSP is available as part of these\ndistributions. To check if DSSP is currently installed under Linux, try\nrunning:\n\n::\n\n    dssp --version || mkdssp --version\n\nAt least one of these should return version 2.x.x\n\nIf DSSP is not installed, you can try installing ``dssp`` using your\nlocal package manager. For example, on Ubuntu:\n\n::\n\n    sudo apt-get install dssp\n\nIf this fails you will have to install DSSP from the source code\nprovided `here <http://swift.cmbi.ru.nl/gv/dssp/>`__.\n\nDSPP is not strictly required, but any analysis that involves calculation\nof secondary structure or solvent accessibility will raise an exception\nif DSSP is not installed.\n\nExonerate:\n^^^^^^^^^^\n\nTo install Exonerate, visit the `Exonerate\nwebsite <http://www.ebi.ac.uk/about/vertebrate-genomics/software/exonerate>`__\nand follow the instructions to install Exonerate on your system.\nAlternatively, Exonerate is available through the default Ubuntu\nrepositories:\n\n::\n\n    sudo apt-get install exonerate\n\nNote that Exonerate is only required if performing calculation of\nTajima's D over a protein structure using a multiple sequence alignment\n- it is used to align a genomic sequence to a protein coding region. If\nthis functionality is not required, then biostructmap can be installed\nand run without Exonerate, although some of the tests will fail.\n\nIf Exonerate is not installed, a fallback pairwise alignment is performed\nusing BioPython.pairwise2, and the user should indicate that Exonerate is not\ninstalled by including:\n\n::\n\n    import biostructmap\n\n    biostructmap.seqtools.LOCAL_EXONERATE = False\n\nNumpy:\n^^^^^^^^^^^^^\n\nBefore install biostructmap it is recommended to install Numpy\nusing your Python package manager of choice (eg pip or conda). If you\nare using the Anaconda distribution of Python, then Numpy should be installed\nalready. If not, or if you are using a virtual environment:\n\n::\n\n    conda install numpy\n\nor\n\n::\n\n    pip install numpy\n\nSciPy:\n^^^^^^^^^^^^^^\n\nWhile there is no hard dependency on SciPy, calculation of nearby residues\ncan be very memory intensive without SciPy present. If you are getting a MemoryError\nexception with large PDB files, then consider installing SciPy in your python environment.\n\n\nInstalling\n----------\n\nTo install the biostructmap package, it is first recommended that you\nmake sure all tests pass in your environment.\n\nFrom the root package directory, run:\n\n::\n\n    python setup.py test\n\nIf these tests pass, you can then install the package (or just skip\nstraight to this step if you're feeling lucky):\n\n::\n\n    python setup.py install\n\nRunning the tests\n-----------------\n\nFrom the root package directory run:\n\n::\n\n    python setup.py test\n\nor alternatively\n\n::\n\n    pytest\n\nThese tests should cover most of the biostructmap functionality, with\nseveral tests reliant on additional packages such as NCBI BLAST+ or\nDSSP, which should be installed alongside biostructmap.\n\nbiostructmap was developed for Python 3+, but also supports Python 2.7.\nPlease contact us if any compatibility issues are observed with older\nversions of Python.\n\nContributing\n------------\n\nPlease read `CONTRIBUTING.rst <CONTRIBUTING.rst>`__ for details on our\ncode of conduct, and the process for submitting pull requests to us.\n\nVersioning\n----------\n\nWe use `SemVer <http://semver.org/>`__ for versioning. For the versions\navailable, see the `tags on this\nrepository <https://github.com/andrewguy/biostructmap/tags>`__.\n\nAuthors\n-------\n\n-  **Andrew Guy** - *Main Author* - `Github\n   Page <https://github.com/andrewguy>`__\n\nSee also the list of\n`contributors <https://github.com/andrewguy/biostructmap/contributors>`__\nwho participated in this project.\n\nLicense\n-------\n\nThis project is licensed under the MIT License - see the\n`LICENSE.txt <LICENSE.txt>`__ file for details\n\nCiting\n------\n\nIf you have used this tool please cite:\n\n-  Guy, A. J., Irani, V., Richards, J. S. & Ramsland, P. A. BioStructMap: A\n   Python tool for integration of protein structure and sequence-based features.\n   *Bioinformatics* (2018). doi:10.1093/bioinformatics/bty474\n\n-  Guy, A. J. *et al.* Proteome-wide mapping of immune features onto\n   Plasmodium protein three-dimensional structures. *Sci. Rep.* **8**, 4355 (2018).\n\nAcknowledgments\n---------------\n\n-  Paul Ramsland, Jack Richards and Vashti Irani for various suggestions\n   and support.\n\nv0.4.1, 2021-05-26 -- Fix bug in Tajima's D when not using Scipy.\n * Fixed a bug causing exceptions to be raised when calculating Tajima's D without Scipy installed. This did not affect calculated results (if no exception was raised).\n\nv0.4.0, 2019-03-13 -- Speed up population stats calculations\n * Add faster implementation of common population stats that previously used DendroPy implementation.\n * Add warning when uncertain base pairs are used with population stats.\n * Fix minor bugs with loading/using multiple sequence alignments from raw Fasta format.\n\nv0.3.0, 2018-11-29 -- Improved Memory Management. Added tools for protein sequence alignments.\n * Add ability to use protein multiple sequence alignments as input data. Useful for Shannon Entropy calculation.\n * Improve memory management when calculating nearby residues. No longer creates a Euclidean distance matrix, but uses a KDTree instead.\n\nv0.2.4, 2017-12-14 -- Added calculation of Shannon entropy\n * Added ability to calculate Shannon entropy for each position in a structure using a multiple sequence alignment.\n\nv0.2.3, 2017-10-26 -- Add scipy distance calculation back in as an option if scipy present.\n * Added scipy distance calculation back. Numpy implementation was a memory hog, so will use scipy if present.\n\nv0.2.2, 2017-10-24 -- Remove Scipy dependency and refactor calls to DSSP\n * Removed SciPy dependency, which simplifies install process.\n * DSSP is only called if it is required, for example when there is a need to calculate secondary structure or solvent accessibility.\n * Also removed redundant methods for writing output data to file.\n * Updated README to reflect optional requirements for BLAST+, Exonerate and DSSP.\n\nv0.2.1post1, 2017-10-24 -- Include CHANGES.txt in distributed files (oops!)\n\nv0.2.1, 2017-10-24 -- Minor changes to documentation and distribution\n\nv0.2.0, 2017-10-24 -- Major update, first release since making biostructmap public.\n * Added features:\n   * Additional genetic tests (Watterson's theta, nucleotide diversity)\n   * Added multi-chain support. This allows mapping of data from different chains.\n   * Some code refactoring was performed. map method is now available from the Structure class, not each individual Chain.\n * Data requirements altered slightly. Each data object should be associated with a particular set of structure chains e.g. {('A', 'B'): data_1, ('C',): data_2}\n * Reference sequences should be provided for each chain: {'A': seq_1, 'B': seq_1, 'C': seq_2}\n\nv0.1.1, 2016-02-24 -- Some bug fixes\n\nv0.1.0, 2016-02-12 -- Initial Release",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/andrewguy/biostructmap/archive/refs/tags/0.4.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/andrewguy/biostructmap",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "biostructmap",
    "package_url": "https://pypi.org/project/biostructmap/",
    "platform": "any",
    "project_url": "https://pypi.org/project/biostructmap/",
    "project_urls": {
      "Download": "https://github.com/andrewguy/biostructmap/archive/refs/tags/0.4.1.tar.gz",
      "Homepage": "https://github.com/andrewguy/biostructmap"
    },
    "release_url": "https://pypi.org/project/biostructmap/0.4.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A package for mapping biological data onto protein PDB structures",
    "version": "0.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10473346,
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b69941a0b050eb6d3df5d2de1b0eb0e2dda45acaa59702275070253c46180c6",
          "md5": "0c01d77fd777adc315057db926d7e168",
          "sha256": "9eb6bc2f3a4ab28aa2e319eff2d7cb76aa2a754728f988995360f15614788f48"
        },
        "downloads": -1,
        "filename": "biostructmap-0.2.1-py3.5.egg",
        "has_sig": false,
        "md5_digest": "0c01d77fd777adc315057db926d7e168",
        "packagetype": "bdist_egg",
        "python_version": "3.5",
        "requires_python": null,
        "size": 115735,
        "upload_time": "2017-10-24T02:20:03",
        "upload_time_iso_8601": "2017-10-24T02:20:03.448551Z",
        "url": "https://files.pythonhosted.org/packages/2b/69/941a0b050eb6d3df5d2de1b0eb0e2dda45acaa59702275070253c46180c6/biostructmap-0.2.1-py3.5.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ac97d12a081273f0fca45ff5aeec4207f2e3f89ce29a23b21c6d2ab691a8798",
          "md5": "f10852d0e37b09abeda7646b93a2b7f0",
          "sha256": "1d9444291b6c3b29c3a1ba5170b5da66f2783c57d144b2f666b4b987d4b48c71"
        },
        "downloads": -1,
        "filename": "biostructmap-0.2.1-py3.6.egg",
        "has_sig": false,
        "md5_digest": "f10852d0e37b09abeda7646b93a2b7f0",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "requires_python": null,
        "size": 114393,
        "upload_time": "2017-10-24T02:20:05",
        "upload_time_iso_8601": "2017-10-24T02:20:05.607615Z",
        "url": "https://files.pythonhosted.org/packages/0a/c9/7d12a081273f0fca45ff5aeec4207f2e3f89ce29a23b21c6d2ab691a8798/biostructmap-0.2.1-py3.6.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ebf6ff8739113bde45807cb68c2597dcd69acf15ced965b19ad632635a7ab735",
          "md5": "30caed1b94934557db3492df8dce9e64",
          "sha256": "d8d2cf84207e2581f29e5f301fe5385f4bd84d0b7c029b8e1ce7ce376dbb37b6"
        },
        "downloads": -1,
        "filename": "biostructmap-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "30caed1b94934557db3492df8dce9e64",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29712,
        "upload_time": "2017-10-24T02:20:07",
        "upload_time_iso_8601": "2017-10-24T02:20:07.301989Z",
        "url": "https://files.pythonhosted.org/packages/eb/f6/ff8739113bde45807cb68c2597dcd69acf15ced965b19ad632635a7ab735/biostructmap-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d2d25192245b3bdc3c89287dc9d6ec8db9f8f761c2d46e0cb2c267fb68f9cdc",
          "md5": "7b2df6310de4d791e3c94326a62ae561",
          "sha256": "591d5f10458d5e50be42b84e5c6219bb7ebc638b7b82ac126e8aecc2147e6daf"
        },
        "downloads": -1,
        "filename": "biostructmap-0.2.1.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "7b2df6310de4d791e3c94326a62ae561",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31385,
        "upload_time": "2017-10-24T02:50:45",
        "upload_time_iso_8601": "2017-10-24T02:50:45.229509Z",
        "url": "https://files.pythonhosted.org/packages/9d/2d/25192245b3bdc3c89287dc9d6ec8db9f8f761c2d46e0cb2c267fb68f9cdc/biostructmap-0.2.1.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "faf1a9cacf5ac5bc6b14114674794312009a32333d0bf808062281246dc28d50",
          "md5": "cc86c1435740dce7674dc1de990a7988",
          "sha256": "b9919b79a8d8e92727b773f1c872503cc7b874abf0c051393e127c0a29ffaae1"
        },
        "downloads": -1,
        "filename": "biostructmap-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cc86c1435740dce7674dc1de990a7988",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31779,
        "upload_time": "2017-10-24T06:06:42",
        "upload_time_iso_8601": "2017-10-24T06:06:42.191281Z",
        "url": "https://files.pythonhosted.org/packages/fa/f1/a9cacf5ac5bc6b14114674794312009a32333d0bf808062281246dc28d50/biostructmap-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "467281e9bcf9e939da297d0e14053dd16ccc26cf2990822424edd6945cc7d1d5",
          "md5": "73bf0c8468db72ebad570591881c55e7",
          "sha256": "35afeda88827e5375cf24ecd876b9d98651cdc92f8e82c1e755165ecde879071"
        },
        "downloads": -1,
        "filename": "biostructmap-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "73bf0c8468db72ebad570591881c55e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31956,
        "upload_time": "2017-10-26T00:44:47",
        "upload_time_iso_8601": "2017-10-26T00:44:47.916089Z",
        "url": "https://files.pythonhosted.org/packages/46/72/81e9bcf9e939da297d0e14053dd16ccc26cf2990822424edd6945cc7d1d5/biostructmap-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eac42d5b662324ff8439a38fecdb0127e4f7cd3914aa86481d2f83739d335045",
          "md5": "41d1f16227d9ff0573250ef4bdd34cb3",
          "sha256": "b7eb5024ef92c062a7e94a35f84f65e77df5bf4927661877c91be97c47c97985"
        },
        "downloads": -1,
        "filename": "biostructmap-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "41d1f16227d9ff0573250ef4bdd34cb3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40625,
        "upload_time": "2021-05-26T07:53:06",
        "upload_time_iso_8601": "2021-05-26T07:53:06.930923Z",
        "url": "https://files.pythonhosted.org/packages/ea/c4/2d5b662324ff8439a38fecdb0127e4f7cd3914aa86481d2f83739d335045/biostructmap-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eac42d5b662324ff8439a38fecdb0127e4f7cd3914aa86481d2f83739d335045",
        "md5": "41d1f16227d9ff0573250ef4bdd34cb3",
        "sha256": "b7eb5024ef92c062a7e94a35f84f65e77df5bf4927661877c91be97c47c97985"
      },
      "downloads": -1,
      "filename": "biostructmap-0.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "41d1f16227d9ff0573250ef4bdd34cb3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 40625,
      "upload_time": "2021-05-26T07:53:06",
      "upload_time_iso_8601": "2021-05-26T07:53:06.930923Z",
      "url": "https://files.pythonhosted.org/packages/ea/c4/2d5b662324ff8439a38fecdb0127e4f7cd3914aa86481d2f83739d335045/biostructmap-0.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}