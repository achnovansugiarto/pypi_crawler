{
  "info": {
    "author": "hit9",
    "author_email": "hit9@icloud.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# dataclass-jsonable\n\n[![dataclass-jsonable ci](https://github.com/hit9/dataclass-jsonable/actions/workflows/ci.yml/badge.svg)](https://github.com/hit9/dataclass-jsonable/actions/workflows/ci.yml)\n![](https://img.shields.io/badge/license-BSD3-brightgreen)\n\nSimple and flexible conversions between dataclasses and jsonable dictionaries.\n\nIt maps dataclasses to jsonable dictionaries but not json strings.\n\n\n## Features\n\n* Easy to use.\n* Supports common type annotations.\n* Supports recursive conversions.\n* Supports field-level and dataclass-level overriding.\n\n## Installation\n\nRequirements: Python >= 3.7\n\nInstall via `pip`:\n\n```\npip install dataclass-jsonable\n```\n\n## Quick Example\n\n```python\nfrom dataclasses import dataclass\nfrom datetime import datetime\nfrom decimal import Decimal\nfrom enum import IntEnum\nfrom typing import List\nfrom dataclass_jsonable import J\n\nclass Color(IntEnum):\n    BLACK = 0\n    BLUE = 1\n    RED = 2\n\n@dataclass\nclass Pen(J):\n    color: Color\n    price: Decimal\n    produced_at: datetime\n\n@dataclass\nclass Box(J):\n    pens: List[Pen]\n\nbox = Box(pens=[Pen(color=Color.BLUE, price=Decimal(\"20.1\"), produced_at=datetime.now())])\n\n# Encode to a jsonable dictionary.\nd = box.json()\nprint(d)  # {'pens': [{'color': 1, 'price': '20.1', 'produced_at': 1660023062}]}\n\n# Construct dataclass from a jsonable dictionary.\nprint(Box.from_json(d))\n```\n\nAPIs are only the two: `.json()` and `.from_json()`.\n\n## Built-in Supported Types\n\n* `bool`, `int`, `float`, `str`, `None` encoded as it is.\n\n  ```python\n  @dataclass\n  class Obj(J):\n      a: int\n      b: str\n      c: bool\n      d: None\n\n  Obj(a=1, b=\"b\", c=True, d=None).json()\n  # => {'a': 1, 'b': 'b', 'c': True, 'd': None}\n  ```\n\n* `Decimal` encoded to `str`.\n\n  ```python\n  @dataclass\n  class Obj(J):\n      a: Decimal\n\n  Obj(a=Decimal(\"3.1\")).json()  # => {'a': '3.1'}\n  ```\n\n* `datetime` encoded to timestamp integer via `.timestamp()` method.\n  `timedelta` encoded to integer via `.total_seconds()` method.\n\n  ```python\n  @dataclass\n  class Obj(J):\n      a: datetime\n      b: timedelta\n\n  Obj(a=datetime.now(), b=timedelta(minutes=1)).json()\n  # => {'a': 1660062019, 'b': 60}\n  ```\n\n* `Enum` and `IntEnum` encoded to their values via `.value` attribute.\n\n  ```python\n  @dataclass\n  class Obj(J):\n      status: Status\n\n  Obj(status=Status.DONE).json()  # => {'status': 1}\n  ```\n\n* `Any` is encoded according to its `type`.\n\n  ```python\n  @dataclass\n  class Obj(J):\n      a: Any\n\n  Obj(1).json()  # {'a': 1}\n  Obj(\"a\").json()  # {'a': 'a'}\n  Obj.from_json({\"a\": 1})  # Obj(a=1)\n  ```\n\n* `Optional[X]` is supported, but `Union[X, Y, ...]` is not.\n\n  ```python\n  @dataclass\n  class Obj(J):\n      a: Optional[int] = None\n\n  Obj(a=1).json()  # => {'a': 1}\n  ```\n\n* `List[X]`, `Tuple[X]`, `Set[X]` are all encoded to `list`.\n\n  ```python\n  @dataclass\n  class Obj(J):\n      a: List[int]\n      b: Set[int]\n      c: Tuple[int, str]\n      d: Tuple[int, ...]\n\n  Obj(a=[1], b={2, 3}, c=(4, \"5\"), d=(7, 8, 9)).json())\n  # => {'a': [1], 'b': [2, 3], 'c': [4, '5'], 'd': [7, 8, 9]}\n\n  Obj.from_json({\"a\": [1], \"b\": [2, 3], \"c\": [4, \"5\"], \"d\": [7, 8, 9]}))\n  # => Obj(a=[1], b={2, 3}, c=(4, '5'), d=(7, 8, 9))\n  ```\n\n* `Dict[str, X]` encoded to `dict`.\n\n  ```python\n  @dataclass\n  class Obj(J):\n      a: Dict[str, int]\n  Obj(a={\"x\": 1}).json()  # => {'a': {'x': 1}}\n  Obj.from_json({\"a\": {\"x\": 1}}) # => Obj(a={'x': 1})\n  ```\n\n* Nested or recursively `JSONAble` (or `J`) dataclasses.\n\n  ```python\n  @dataclass\n  class Elem(J):\n      k: str\n\n  @dataclass\n  class Obj(J):\n      a: List[Elem]\n\n  Obj([Elem(\"v\")]).json()  # => {'a': [{'k': 'v'}]}\n  Obj.from_json({\"a\": [{\"k\": \"v\"}]})  # Obj(a=[Elem(k='v')])\n  ```\n\n* Postponed annotations (the `ForwardRef` in [PEP 563](https://www.python.org/dev/peps/pep-0563/)).\n\n  ```python\n  @dataclass\n  class Node(J):\n      name: str\n      left: Optional[\"Node\"] = None\n      right: Optional[\"Node\"] = None\n\n  root = Node(\"root\", left=Node(\"left\"), right=Node(\"right\"))\n  root.json()\n  # {'name': 'root', 'left': {'name': 'left', 'left': None, 'right': None}, 'right': {'name': 'right', 'left': None, 'right': None}}\n  ```\n\nIf these built-in default conversion behaviors do not meet your needs,\nor your type is not on the list,\nyou can use [json_options](#customization--overriding-examples) introduced below to customize it.\n\n## Customization / Overriding Examples\n\nWe can override the default conversion behaviors with `json_options`,\nwhich uses the dataclass field's metadata for field-level customization purpose,\nand the namespace is `j`.\n\nThe following pseudo code gives the pattern:\n\n```python\nfrom dataclasses import field\nfrom dataclass_jsonable import json_options\n\n@dataclass\nclass Struct(J):\n    attr: T = field(metadata={\"j\": json_options(**kwds)})\n```\n\nAn example list about `json_options`:\n\n* Specific a custom dictionary key over the default field's name:\n\n   ```python\n   @dataclass\n   class Person(J):\n       attr: str = field(metadata={\"j\": json_options(name=\"new_attr\")})\n   Person(attr=\"value\").json() # => {\"new_attr\": \"value\"}\n   ```\n\n  And more, we can use a function to specific a custom dictionary key.\n  This may be convenient to work with class-level `__default_json_options__` attribute (check it below).\n\n  ```python\n  @dataclass\n  class Obj(J):\n      simple_value: int = field(metadata={\"j\": json_options(name_converter=to_camel_case)})\n  Obj(simple_value=1).json()  # => {\"simpleValue\": 1}\n  ```\n\n  And we may specific a custom field name converter when converts dictionary to dataclass:\n\n  ```python\n  @dataclass\n  def Person(J):\n    name: str = field(\n          metadata={\n              \"j\": json_options(\n                  name_converter=lambda x: x.capitalize(),\n                  name_inverter=lambda x: \"nickname\",\n            )\n        }\n    )\n  ```\n\n  As the `Person` defined above, it will convert to dictionary like `{\"Name\": \"Jack\"}` and can be loaded from `{\"nickname\": \"Jack\"}`.\n\n* Omit a field if its value is empty:\n\n   ```python\n   @dataclass\n   class Book(J):\n       name: str = field(metadata={\"j\": json_options(omitempty=True)})\n   Book(name=\"\").json() # => {}\n   ```\n\n  Further, we can specify what is 'empty' via option `omitempty_tester`:\n\n   ```python\n   @dataclass\n   class Book(J):\n       attr: Optional[str] = field(\n           default=None,\n           metadata={\n               # By default, we test `empty` using `not x`.\n               \"j\": json_options(omitempty=True, omitempty_tester=lambda x: x is None)\n           },\n       )\n\n   Book(attr=\"\").json()  # => {'attr': ''}\n   Book(attr=None).json()  # => {}\n   ```\n\n* Always skip a field. So we can stop some \"private\" fields from exporting:\n\n   ```python\n   @dataclass\n   class Obj(J):\n       attr: str = field(metadata={\"j\": json_options(skip=True)})\n\n   Obj(attr=\"private\").json() # => {}\n   ```\n\n* dataclasses's `field` allows us to pass a `default` or `default_factory` argument to\n  set a default value:\n\n  ```python\n  @dataclass\n  class Obj(J):\n      attr: List[str] = field(default_factory=list, metadata={\"j\": json_options(**kwds)})\n  ```\n\n  There's also an option `default_on_missing` in dataclass-jsonable,\n  which specifics a default value before decoding if the key is missing in the dictionary.\n  Sometimes this way is more concise:\n\n  ```python\n  @dataclass\n  class Obj(J):\n      updated_at: datetime = field(metadata={\"j\": json_options(default_on_missing=0)})\n\n  Obj.from_json({})  # => Obj(updated_at=datetime.datetime(1970, 1, 1, 8, 0))\n  ```\n\n* Override the default encoders and decoders.\n\n  This way, you have complete control over how to encode and decode at field level.\n\n  ```python\n  @dataclass\n  class Obj(J):\n      elems: List[str] = field(\n          metadata={\n              \"j\": json_options(\n                  encoder=lambda x: \",\".join(x),\n                  decoder=lambda x: x.split(\",\"),\n              )\n          }\n      )\n\n  Obj(elems=[\"a\", \"b\", \"c\"]).json()  # => {'elems': 'a,b,c'}\n  Obj.from_json({\"elems\": \"a,b,c\"})  # => Obj(elems=['a', 'b', 'c'])\n  ```\n\n  The following code snippet about `datetime` is a very common example,\n  you might want ISO format datetime conversion over timestamp integers.\n\n  ```python\n  @dataclass\n  class Record(J):\n      created_at: datetime = field(\n          default_factory=datetime.now,\n          metadata={\n              \"j\": json_options(\n                  encoder=datetime.isoformat,\n                  decoder=datetime.fromisoformat,\n              )\n          },\n      )\n\n  Record().json()  # => {'created_at': '2022-08-09T23:23:02.543007'}\n  ```\n\n* For some very narrow scenarios, we may need to execute a hook function before decoding,\n  for example, the data to be decoded is a serialized json string,\n  and but we still want to use the built-in decoder functions instead of making a new decoder.\n\n  ```python\n  import json\n\n  @dataclass\n  class Obj(J):\n      data: Dict[str, Any] = field(metadata={\"j\": json_options(before_decoder=json.loads)})\n\n  Obj.from_json({\"data\": '{\"k\": \"v\"}'})\n  # => Obj(data={'k': 'v'})\n  ```\n\n* Customize default behaviors at the class level.\n\n  If an option is not explicitly set at the field level,\n  the `__default_json_options__` provided at the class level will be attempted.\n\n  ````python\n  @dataclass\n  class Obj(J):\n      __default_json_options__ = json_options(omitempty=True)\n\n      a: Optional[int] = None\n      b: Optional[str] = None\n\n  Obj(b=\"b\").json() # => {'b': 'b'}\n  ````\n\n  ```python\n  @dataclass\n  class Obj(J):\n      __default_json_options__ = json_options(name_converter=to_camel_case)\n\n      status_code: int\n      simple_value: str\n\n  Obj2(status_code=1, simple_value=\"simple\").json()\n  # => {\"statusCode\": 1, \"simpleValue\": \"simple\"}\n  ```\n\n## Debuging\n\nIt provides a method `obj._get_origin_json()`,\nit returns the original json dictionary which constructs instance `obj` via `from_json()`.\n\n```python\nd = {\"a\": 1}\nobj = Obj.from_json(d)\nobj._get_origin_json()\n# => {\"a\": 1}\n```\n\n## License\n\nBSD.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hit9/dataclass-jsonable",
    "keywords": "dataclasses,json,jsonable",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dataclass-jsonable",
    "package_url": "https://pypi.org/project/dataclass-jsonable/",
    "platform": null,
    "project_url": "https://pypi.org/project/dataclass-jsonable/",
    "project_urls": {
      "Homepage": "https://github.com/hit9/dataclass-jsonable"
    },
    "release_url": "https://pypi.org/project/dataclass-jsonable/0.0.14/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Simple and flexible conversions between dataclasses and jsonable dictionaries.",
    "version": "0.0.14",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17511977,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78712d13fa716720d64d79159c121672cf0aeb3cdd2ff9e3666078e90710decc",
          "md5": "4862fe3ffd228545e05f4576ae482412",
          "sha256": "3da1a1e899695ad4041fc07974928f329d592a40c8bf32970412f47ce313bf09"
        },
        "downloads": -1,
        "filename": "dataclass-jsonable-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4862fe3ffd228545e05f4576ae482412",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3708,
        "upload_time": "2022-08-09T05:42:23",
        "upload_time_iso_8601": "2022-08-09T05:42:23.697619Z",
        "url": "https://files.pythonhosted.org/packages/78/71/2d13fa716720d64d79159c121672cf0aeb3cdd2ff9e3666078e90710decc/dataclass-jsonable-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc0bdfb85a9a2bc6443ac335d6181ea535a5641604407321c3ca0829e73f6e17",
          "md5": "885bdf8ab05cbffbc1d2d3182e325d95",
          "sha256": "cc04d5545b811ea277f52d30a9d0ff53165a1f30760c3d50265e2d2f3901c13d"
        },
        "downloads": -1,
        "filename": "dataclass-jsonable-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "885bdf8ab05cbffbc1d2d3182e325d95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8808,
        "upload_time": "2022-08-19T05:33:15",
        "upload_time_iso_8601": "2022-08-19T05:33:15.964734Z",
        "url": "https://files.pythonhosted.org/packages/cc/0b/dfb85a9a2bc6443ac335d6181ea535a5641604407321c3ca0829e73f6e17/dataclass-jsonable-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e38c8b4675d0e0feb594f4fc7d156921a8441bcedd16ea46a4ab2a053d9b71eb",
          "md5": "14ddc50c5c2da7a1961c27fa9361ba43",
          "sha256": "9db906ccbef4e572942ff64cff0546d0eb29ef6ea62aa23ee5e4c58cb09c1c5d"
        },
        "downloads": -1,
        "filename": "dataclass-jsonable-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "14ddc50c5c2da7a1961c27fa9361ba43",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9068,
        "upload_time": "2022-08-19T10:46:22",
        "upload_time_iso_8601": "2022-08-19T10:46:22.218840Z",
        "url": "https://files.pythonhosted.org/packages/e3/8c/8b4675d0e0feb594f4fc7d156921a8441bcedd16ea46a4ab2a053d9b71eb/dataclass-jsonable-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45ae3a12e27fb46361c974818ea1993c7eb2c0c90e7bf8db928d9fa17eb81560",
          "md5": "96687b65cbd3c92adddddda4c3379181",
          "sha256": "6f6b9c8eb2f8024ed1b89e1847663c2072d7b934f62a80839c54f46da7a01afd"
        },
        "downloads": -1,
        "filename": "dataclass-jsonable-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "96687b65cbd3c92adddddda4c3379181",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9281,
        "upload_time": "2022-08-30T04:20:04",
        "upload_time_iso_8601": "2022-08-30T04:20:04.827913Z",
        "url": "https://files.pythonhosted.org/packages/45/ae/3a12e27fb46361c974818ea1993c7eb2c0c90e7bf8db928d9fa17eb81560/dataclass-jsonable-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c9772948a6c773bf214bea90174dfd6c5dd1a736ac838622a7fddd93b6a0615",
          "md5": "1a2dcfe8b78a35da1aba4b862cf114ba",
          "sha256": "c8e32a9d999b06314d2f00568ee5e85990543f3f41b8c5ee9179ac834f1cfd4d"
        },
        "downloads": -1,
        "filename": "dataclass-jsonable-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "1a2dcfe8b78a35da1aba4b862cf114ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9435,
        "upload_time": "2022-10-28T02:24:57",
        "upload_time_iso_8601": "2022-10-28T02:24:57.824612Z",
        "url": "https://files.pythonhosted.org/packages/2c/97/72948a6c773bf214bea90174dfd6c5dd1a736ac838622a7fddd93b6a0615/dataclass-jsonable-0.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6fa4c328b7e8043bbbdacde77e969ebd64fbe03b4a423cbba8558c38f2a30c81",
          "md5": "6c1864a60c360bb96e183733429551db",
          "sha256": "28128ffe135ecbfd1630caadb0514a8ae8254d789ce980b6866870fa1ad0562b"
        },
        "downloads": -1,
        "filename": "dataclass-jsonable-0.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "6c1864a60c360bb96e183733429551db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9728,
        "upload_time": "2023-03-30T14:33:05",
        "upload_time_iso_8601": "2023-03-30T14:33:05.973691Z",
        "url": "https://files.pythonhosted.org/packages/6f/a4/c328b7e8043bbbdacde77e969ebd64fbe03b4a423cbba8558c38f2a30c81/dataclass-jsonable-0.0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18adf244241441eb3e1983773e2740f318716d038b9d0bd109bc3795c690d63a",
          "md5": "0ece87fdd6e52963692cd3896b89cfb7",
          "sha256": "abe21fb02b169c59360ed4e07f9b750a1d985459be27e6b6a9945c3a9b80f4bd"
        },
        "downloads": -1,
        "filename": "dataclass-jsonable-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0ece87fdd6e52963692cd3896b89cfb7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3774,
        "upload_time": "2022-08-09T07:16:02",
        "upload_time_iso_8601": "2022-08-09T07:16:02.297027Z",
        "url": "https://files.pythonhosted.org/packages/18/ad/f244241441eb3e1983773e2740f318716d038b9d0bd109bc3795c690d63a/dataclass-jsonable-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af42c1e8c328ddb76c8744fe3106d76dd37780d60f5c172791e6f79be6ff501f",
          "md5": "c68bae71d8d61ab4bb46b156021512c3",
          "sha256": "3b083a44ab8b0bd1c2fc3b38a664b900379da8a2a094c02f8220524b4e68c349"
        },
        "downloads": -1,
        "filename": "dataclass-jsonable-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c68bae71d8d61ab4bb46b156021512c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4591,
        "upload_time": "2022-08-09T10:04:11",
        "upload_time_iso_8601": "2022-08-09T10:04:11.985326Z",
        "url": "https://files.pythonhosted.org/packages/af/42/c1e8c328ddb76c8744fe3106d76dd37780d60f5c172791e6f79be6ff501f/dataclass-jsonable-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1445faca773870534ccfcc338f9a10f11c8e6a29bcdbfb23f219c6e6b3f00289",
          "md5": "555f75a03c5809dae7b3a13779c803de",
          "sha256": "ea27e5d74475394764dcd2ee055cf93399bfbe7b2f91cfc114325a5f9539a6a1"
        },
        "downloads": -1,
        "filename": "dataclass-jsonable-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "555f75a03c5809dae7b3a13779c803de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4721,
        "upload_time": "2022-08-09T10:31:03",
        "upload_time_iso_8601": "2022-08-09T10:31:03.692870Z",
        "url": "https://files.pythonhosted.org/packages/14/45/faca773870534ccfcc338f9a10f11c8e6a29bcdbfb23f219c6e6b3f00289/dataclass-jsonable-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0d04c65f0779beb376a81394c05e0b75520446871e10435255ee79428a2354a",
          "md5": "5eef231f1fb2849ee9ac8f64eba24140",
          "sha256": "03f68100137c5b6920e843fab2f76d68a92ea17fea16330326bf2d08e3a09162"
        },
        "downloads": -1,
        "filename": "dataclass-jsonable-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "5eef231f1fb2849ee9ac8f64eba24140",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6884,
        "upload_time": "2022-08-09T17:06:31",
        "upload_time_iso_8601": "2022-08-09T17:06:31.319761Z",
        "url": "https://files.pythonhosted.org/packages/e0/d0/4c65f0779beb376a81394c05e0b75520446871e10435255ee79428a2354a/dataclass-jsonable-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66da49c72fdf2dada80919c6db4a0254251283e28db42c1f1e75e1a5832ee7a6",
          "md5": "0260ebff11117ff6dd333b45dfa249e6",
          "sha256": "d5803f17074e904df55bbfd8520df7293004898a4687452f32b1796aebc1c6f4"
        },
        "downloads": -1,
        "filename": "dataclass-jsonable-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "0260ebff11117ff6dd333b45dfa249e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7301,
        "upload_time": "2022-08-11T05:59:59",
        "upload_time_iso_8601": "2022-08-11T05:59:59.775884Z",
        "url": "https://files.pythonhosted.org/packages/66/da/49c72fdf2dada80919c6db4a0254251283e28db42c1f1e75e1a5832ee7a6/dataclass-jsonable-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e82b51da1bfe3f366be1c1d629b4b37dc62b1275d4fb1d8cbfb7a70c26d57227",
          "md5": "d3ce42e09655217dedffc1339341e9d1",
          "sha256": "14201163984ef7567fe68ff61dc0d0985ba9a0308cf809e064cdec495549c729"
        },
        "downloads": -1,
        "filename": "dataclass-jsonable-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "d3ce42e09655217dedffc1339341e9d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9064,
        "upload_time": "2022-08-11T15:51:31",
        "upload_time_iso_8601": "2022-08-11T15:51:31.232206Z",
        "url": "https://files.pythonhosted.org/packages/e8/2b/51da1bfe3f366be1c1d629b4b37dc62b1275d4fb1d8cbfb7a70c26d57227/dataclass-jsonable-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd8bff7de1ebab0973e14e9aed6a7cbe31f199bfb66dbe0b225c2dfb74da6314",
          "md5": "017913821bf25956ad0b71f191afd10e",
          "sha256": "41e8cf9ac16b3568d8d397967b2d54f4623ee182e389820fdc3d591be89f088c"
        },
        "downloads": -1,
        "filename": "dataclass-jsonable-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "017913821bf25956ad0b71f191afd10e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9088,
        "upload_time": "2022-08-15T07:27:55",
        "upload_time_iso_8601": "2022-08-15T07:27:55.631304Z",
        "url": "https://files.pythonhosted.org/packages/dd/8b/ff7de1ebab0973e14e9aed6a7cbe31f199bfb66dbe0b225c2dfb74da6314/dataclass-jsonable-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8dfc9263ad01ae1a1542191f3433009ab94f0cefeefbac58fb51b880dcdc6e59",
          "md5": "e2c258cdcbd9b4e3b9fd923e163e3890",
          "sha256": "4b237a00d816633fe2ed9e99ebd670d629c95f5c0b286a8906c57ae969b70a4c"
        },
        "downloads": -1,
        "filename": "dataclass-jsonable-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "e2c258cdcbd9b4e3b9fd923e163e3890",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9566,
        "upload_time": "2022-08-15T08:21:59",
        "upload_time_iso_8601": "2022-08-15T08:21:59.462428Z",
        "url": "https://files.pythonhosted.org/packages/8d/fc/9263ad01ae1a1542191f3433009ab94f0cefeefbac58fb51b880dcdc6e59/dataclass-jsonable-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6fa4c328b7e8043bbbdacde77e969ebd64fbe03b4a423cbba8558c38f2a30c81",
        "md5": "6c1864a60c360bb96e183733429551db",
        "sha256": "28128ffe135ecbfd1630caadb0514a8ae8254d789ce980b6866870fa1ad0562b"
      },
      "downloads": -1,
      "filename": "dataclass-jsonable-0.0.14.tar.gz",
      "has_sig": false,
      "md5_digest": "6c1864a60c360bb96e183733429551db",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 9728,
      "upload_time": "2023-03-30T14:33:05",
      "upload_time_iso_8601": "2023-03-30T14:33:05.973691Z",
      "url": "https://files.pythonhosted.org/packages/6f/a4/c328b7e8043bbbdacde77e969ebd64fbe03b4a423cbba8558c38f2a30c81/dataclass-jsonable-0.0.14.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}