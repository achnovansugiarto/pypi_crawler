{
  "info": {
    "author": "Zhang Yunjun, Dennis Milbert",
    "author_email": "yunjunzgeo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering"
    ],
    "description": "[![Language](https://img.shields.io/badge/python-3.6%2B-blue.svg)](https://www.python.org/)\n[![CircleCI](https://img.shields.io/circleci/build/github/insarlab/PySolid.svg?logo=circleci&label=test)](https://circleci.com/gh/insarlab/PySolid)\n[![Version](https://img.shields.io/github/v/release/insarlab/PySolid?color=green)](https://github.com/insarlab/PySolid/releases)\n[![License](https://img.shields.io/badge/license-GPLv3+-yellow.svg)](https://github.com/insarlab/PySolid/blob/main/LICENSE)\n[![Citation](https://img.shields.io/badge/doi-10.1109%2FTGRS.2022.3168509-blue)](https://doi.org/10.1109/TGRS.2022.3168509)\n\n## PySolid\n\nThe Python based solid Earth tides (PySolid) is a thin Python wrapper of the [`solid.for`](http://geodesyworld.github.io/SOFTS/solid.htm) program (by Dennis Milbert based on [_dehanttideinelMJD.f_](https://iers-conventions.obspm.fr/content/chapter7/software/dehanttideinel/) from V. Dehant, S. Mathews, J. Gipson and C. Bruyninx) to calculate [solid Earth tides](https://en.wikipedia.org/wiki/Earth_tide) in east/north/up direction (section 7.1.1 in the [2010 IERS Conventions](https://www.iers.org/IERS/EN/Publications/TechnicalNotes/tn36.html)). Solid Earth tides introduces very long spatial wavelength components in SAR/InSAR observations, as shown in the Sentinel-1 data with regular acquisitions and large swaths (Yunjun et al., 2022).\n\nThis is research code provided to you \"as is\" with NO WARRANTIES OF CORRECTNESS. Use at your own risk.\n\n### 1. Install\n\nPySolid is available on the [conda-forge](https://anaconda.org/conda-forge/pysolid) channel and the main archive of the [Debian](https://tracker.debian.org/pkg/pysolid) GNU/Linux OS. The released version can be install via `conda` as:\n\n```shell\n# run \"conda update pysolid\" to update the installed version\nconda install -c conda-forge pysolid\n```\n\nor via `apt` (or other package managers) for [Debian-derivative OS](https://wiki.debian.org/Derivatives/Census) users, including [Ubuntu](https://ubuntu.com), as:\n\n```shell\napt install python3-pysolid\n```\n\nInstalling via `conda` and `apt` is recomended because PySolid contains Fortran source code, which required compilcation. Otherwise, you may build it from source as described below.\n\n#### 1.1 Build from source\n\nPySolid relies on a few Python modules as described in [requirements.txt](./requirements.txt) and [NumPy's f2py](https://numpy.org/doc/stable/f2py/) to build the Fortran source code. You could use `conda` to install all the dependencies, including the Fortran compiler, or use your own installed Fortran compiler and `pip` to install the rest.\n\n##### a. Download source code\n\n```bash\n# run \"cd PySolid; git pull\" to update to the latest development version\ngit clone https://github.com/insarlab/PySolid.git\n```\n\n##### b. Install dependencies\n\n```bash\n# option 1: use conda to install dependencies into an existing, activated environment\nconda install -c conda-forge fortran-compiler --file PySolid/requirements.txt\n\n# option 2: use conda to create a new environment named \"pysolid\"\nconda env create -f PySolid/environment.yml\nconda activate pysolid\n\n# option 3: have a Fortran compiler already installed and use pip to install the rest dependencies\npython -m pip install -r PySolid/requirements.txt\n```\n\n##### c. Install PySolid\n\n```bash\n# option 1: use pip to install pysolid into the current environment\n# use \"pip install -e\" to install in the development mode\npython -m pip install PySolid\n\n# option 2: manually compile the Fortran code and setup environment variable\ncd PySolid/src/pysolid\nf2py -c -m solid solid.for\nexport PYTHONPATH=${PYTHONPATH}:~/tools/PySolid\n```\n\n#### 1.2 Test the installation\n\nTo test the installation, run the following:\n\n```bash\npython -c \"import pysolid; print(pysolid.__version__)\"\npython PySolid/tests/grid.py\npython PySolid/tests/point.py\n```\n\n### 2. Usage\n\nPySolid could compute solid Earth tides in two modes: **point** and **grid**. Both modes produce displacement in east, north and up direction.\n\n+   **Point mode:** compute 1D tides time-series at a specific point for a given time period\n+   **Grid mode:** compute 2D tides grid at a specific time for a given spatial grid\n\n#### 2.1 Point Mode [[notebook](./docs/plot_point_SET.ipynb)]\n\n```python\nimport datetime as dt\nimport pysolid\n\n# prepare inputs\nlat, lon = 34.0, -118.0                 # point of interest in degree, Los Angles, CA\nstep_sec = 60 * 5                       # sample spacing in time domain in seconds\ndt0 = dt.datetime(2020, 1, 1, 4, 0, 0)  # start date and time\ndt1 = dt.datetime(2021, 1, 1, 2, 0, 0)  # end   date and time\n\n# compute SET via pysolid\ndt_out, tide_e, tide_n, tide_u = pysolid.calc_solid_earth_tides_point(\n    lat, lon, dt0, dt1,\n    step_sec=step_sec,\n    display=False,\n    verbose=False,\n)\n\n# plot the power spectral density of SET up component\npysolid.plot_power_spectral_density4tides(tide_u, sample_spacing=step_sec)\n```\n\n<p align=\"left\">\n  <img width=\"600\" src=\"https://yunjunzhang.files.wordpress.com/2021/01/set_ts_up-1.png\">\n  <img width=\"600\" src=\"https://yunjunzhang.files.wordpress.com/2021/01/set_psd-1.png\">\n</p>\n\n#### 2.2 Grid Mode [[notebook](./docs/plot_grid_SET.ipynb)]\n\n```python\nimport datetime as dt\nimport numpy as np\nimport pysolid\n\n# prepare inputs\ndt_obj = dt.datetime(2020, 12, 25, 14, 7, 44)\nmeta = {\n    'LENGTH' : 500,                # number of rows\n    'WIDTH'  : 450,                # number of columns\n    'X_FIRST': -126,               # min longitude in degree (upper left corner of the upper left pixel)\n    'Y_FIRST': 43,                 # max laitude   in degree (upper left corner of the upper left pixel)\n    'X_STEP' :  0.000925926 * 30,  # output resolution in degree\n    'Y_STEP' : -0.000925926 * 30,  # output resolution in degree\n}\n\n# compute SET via pysolid\ntide_e, tide_n, tide_u = pysolid.calc_solid_earth_tides_grid(\n    dt_obj, meta,\n    display=False,\n    verbose=True,\n)\n\n# project SET from ENU to radar line-of-sight (LOS) direction with positive for motion towards satellite\n# inc_angle : incidence angle of the LOS vector (from ground to radar platform) measured from vertical.\n# az_angle  : azimuth   angle of the LOS vector (from ground to radar platform) measured from the north, with anti-clockwirse as positive.\ninc_angle = np.deg2rad(34)   # radian, typical value for Sentinel-1\naz_angle = np.deg2rad(-102)  # radian, typical value for Sentinel-1 descending track\ntide_los = (  tide_e * np.sin(inc_angle) * np.sin(az_angle) * -1\n            + tide_n * np.sin(inc_angle) * np.cos(az_angle)\n            + tide_u * np.cos(inc_angle))\n```\n\n<p align=\"left\">\n  <img width=\"800\" src=\"https://yunjunzhang.files.wordpress.com/2021/01/set_grid-3.png\">\n</p>\n\n### 3. Citing this work\n\n+   Yunjun, Z., Fattahi, H., Pi, X., Rosen, P., Simons, M., Agram, P., & Aoki, Y. (2022). Range Geolocation Accuracy of C-/L-band SAR and its Implications for Operational Stack Coregistration. _IEEE Trans. Geosci. Remote Sens., 60_, 1-19, doi:[10.1109/TGRS.2022.3168509](https://doi.org/10.1109/TGRS.2022.3168509), [arXiv](https://doi.org/10.31223/X5F641), [data](https://zenodo.org/record/6360749), [notebooks](https://github.com/yunjunz/2022-Geolocation).\n+   Milbert, D. (2018), \"solid: Solid Earth Tide\", [Online]. Available: http://geodesyworld.github.io/SOFTS/solid.htm. Accessd on: 2020-09-06.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/insarlab/PySolid/archive/v0.2.3.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/insarlab/PySolid",
    "keywords": "solid Eartth tides,deformation,geodesy,geophysics",
    "license": "GPL-3.0-or-later",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pysolid",
    "package_url": "https://pypi.org/project/pysolid/",
    "platform": null,
    "project_url": "https://pypi.org/project/pysolid/",
    "project_urls": {
      "Bug Reports": "https://github.com/insarlab/PySolid/issues",
      "Download": "https://github.com/insarlab/PySolid/archive/v0.2.3.tar.gz",
      "Homepage": "https://github.com/insarlab/PySolid",
      "Source": "https://github.com/insarlab/PySolid"
    },
    "release_url": "https://pypi.org/project/pysolid/0.2.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A Python wrapper for solid to compute solid Earth tides",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15514886,
  "releases": {
    "0.2.2.post4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bceb179acf2ad4392f59aff7a1f291905e63a71674acb05eca1f664a1ccaf1de",
          "md5": "5996195621108231a89e9d0fb6a540c5",
          "sha256": "d2c133841355aeb6de8276576c28e1de296190b782ce22682fc23e3e2f8fc55d"
        },
        "downloads": -1,
        "filename": "pysolid-0.2.2.post4-cp38-cp38-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "5996195621108231a89e9d0fb6a540c5",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6",
        "size": 76995,
        "upload_time": "2022-10-24T01:06:29",
        "upload_time_iso_8601": "2022-10-24T01:06:29.129011Z",
        "url": "https://files.pythonhosted.org/packages/bc/eb/179acf2ad4392f59aff7a1f291905e63a71674acb05eca1f664a1ccaf1de/pysolid-0.2.2.post4-cp38-cp38-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d7813fa248f0be1ea4b7663a55b3002ef70a5c142adc1121ada94d2c693236e",
          "md5": "4e99634da387088d3f90cb910ce1243b",
          "sha256": "35e9290dc7d0f084ad8092c20666a1cb4fd0ef92c52afed0826f69e44c67a98e"
        },
        "downloads": -1,
        "filename": "pysolid-0.2.2.post4.tar.gz",
        "has_sig": false,
        "md5_digest": "4e99634da387088d3f90cb910ce1243b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 39974,
        "upload_time": "2022-10-24T01:06:31",
        "upload_time_iso_8601": "2022-10-24T01:06:31.724695Z",
        "url": "https://files.pythonhosted.org/packages/4d/78/13fa248f0be1ea4b7663a55b3002ef70a5c142adc1121ada94d2c693236e/pysolid-0.2.2.post4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0c6daa04580853f9404af6eca818d87708eebfbe940d67e258bc3cce5dd8243",
          "md5": "37661f5a7cba4e75e005cce1113047f9",
          "sha256": "59c453d5ab16655c33b31d44caa68252ca339fb4d11c4d1e08c8978a868e1a27"
        },
        "downloads": -1,
        "filename": "pysolid-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "37661f5a7cba4e75e005cce1113047f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 39931,
        "upload_time": "2022-10-24T05:59:13",
        "upload_time_iso_8601": "2022-10-24T05:59:13.197010Z",
        "url": "https://files.pythonhosted.org/packages/d0/c6/daa04580853f9404af6eca818d87708eebfbe940d67e258bc3cce5dd8243/pysolid-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d0c6daa04580853f9404af6eca818d87708eebfbe940d67e258bc3cce5dd8243",
        "md5": "37661f5a7cba4e75e005cce1113047f9",
        "sha256": "59c453d5ab16655c33b31d44caa68252ca339fb4d11c4d1e08c8978a868e1a27"
      },
      "downloads": -1,
      "filename": "pysolid-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "37661f5a7cba4e75e005cce1113047f9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 39931,
      "upload_time": "2022-10-24T05:59:13",
      "upload_time_iso_8601": "2022-10-24T05:59:13.197010Z",
      "url": "https://files.pythonhosted.org/packages/d0/c6/daa04580853f9404af6eca818d87708eebfbe940d67e258bc3cce5dd8243/pysolid-0.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}