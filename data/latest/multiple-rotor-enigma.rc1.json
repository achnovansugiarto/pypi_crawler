{
  "info": {
    "author": "Aradhya Goel",
    "author_email": "aradhyagnov@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers"
    ],
    "description": "**Features**\r\n============\r\n\r\n  A simulation of the historic enigma machine, covering its flaws and\r\n  improving the scope of the technique.   \r\n  1. Adding to the original Enigma, this technique can accept most\r\n  characters, numbers and even spaces in the key. \r\n  2. Each character in the string is capable of being encrypted unlike\r\n  the original edition. \r\n  3. The key length is not limited to just 5, as\r\n  in a usual enigma machine, the user can create any n length key \r\n  4. Alphabets, characters and even empty spaces are encrypted in this\r\n  technique and the key can also have empty spaces as a character !\r\n\r\nTo decrypt a message enter the decrypted message and use the same key\r\nlength and key used for encryption\r\n\r\n**Usage**\r\n=========\r\n\r\nThe module is easy to use. To use the module after installing it, write\r\nthe following code-\r\n\r\n*From Multi_Rotor_Enigma import Multi_Rotor_Enigma  \r\nprint(Multi_Rotor_Enigma.Encrypt(msg,no. of rotors,key))*\r\n\r\nThere is the main function Enigma which has 3 attributes- they are (in\r\norder)\r\n\r\n**Message to encrypt (string)**\r\n\r\n**Number of rotors user wants (integer)**\r\n\r\n**Setting of rotors (string)**\r\n\r\nNote- The length of setting and number of rotors should be the same\r\notherwise an error will occur\r\n\r\n**Example**\r\n===========\r\n\r\n  Let’s quickly see with an example how the module works. For example if\r\n  we have to encrypt the string, ‘hello world’ with 6 rotors and using\r\n  the key as#wr% I shall write  \r\n  *import Multi_Rotor_Enigma  \r\n  print(Multi_Rotor_Enigma.Multi_Rotor_Enigma.Enigma(‘hello\r\n  world’,6,‘as#wr%’))*\r\n\r\nFor decryption, I repeat the same process, just that the message to\r\ndecrypt will replace the ‘hello world’ part while the key length and\r\nnumber of rotors combination will remain the same as used during the\r\nencryption part.\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "Enigma",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Multiple-Rotor-Enigma",
    "package_url": "https://pypi.org/project/Multiple-Rotor-Enigma/",
    "platform": null,
    "project_url": "https://pypi.org/project/Multiple-Rotor-Enigma/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/Multiple-Rotor-Enigma/0.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "An enhanced simulation of the enigma machine",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15127416,
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e0fbffb97ed3e0578a141270a6e6259990a6721eaacbd0bcd194b224cfc8743",
          "md5": "878331f568be0124246114f241050af8",
          "sha256": "44759a66aa9a6079b668fc0488430f775c87fe111576a48c0458f244fd84f831"
        },
        "downloads": -1,
        "filename": "Multiple_Rotor_Enigma-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "878331f568be0124246114f241050af8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4851,
        "upload_time": "2022-08-31T09:10:11",
        "upload_time_iso_8601": "2022-08-31T09:10:11.206038Z",
        "url": "https://files.pythonhosted.org/packages/1e/0f/bffb97ed3e0578a141270a6e6259990a6721eaacbd0bcd194b224cfc8743/Multiple_Rotor_Enigma-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1e0fbffb97ed3e0578a141270a6e6259990a6721eaacbd0bcd194b224cfc8743",
        "md5": "878331f568be0124246114f241050af8",
        "sha256": "44759a66aa9a6079b668fc0488430f775c87fe111576a48c0458f244fd84f831"
      },
      "downloads": -1,
      "filename": "Multiple_Rotor_Enigma-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "878331f568be0124246114f241050af8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4851,
      "upload_time": "2022-08-31T09:10:11",
      "upload_time_iso_8601": "2022-08-31T09:10:11.206038Z",
      "url": "https://files.pythonhosted.org/packages/1e/0f/bffb97ed3e0578a141270a6e6259990a6721eaacbd0bcd194b224cfc8743/Multiple_Rotor_Enigma-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}