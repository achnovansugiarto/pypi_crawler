{
  "info": {
    "author": "Abbas Safardoost",
    "author_email": "a.safardoust@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Natural Language :: Persian",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Text Processing"
    ],
    "description": "# CPVI (Comprehensive Persian Verb Inflector)\n\n<div dir=\"rtl\">\nCPVI تصریف‌گر جامع افعال فارسی است که از مدل مکانیسم دوگانه (dual-route) برای تصریف استفاده می‌کند.\n</div>\n\nCPVI (Comprehensive Persian Verb Inflector) is a Persian Verb Inflector. PVI uses Dual Mechanism theory (Words &amp; Rules theory) to inflect Persian verbs.\n\n## Installation\n\n```shell\n>>> pip install CPVI\n```\n\n## Usage\n\n`CPVI` class has only a `profiling`method.\n\nThe `profiling` method returns the profile of the verb passed as a argument. The profile consists of these properties:\n\n* lexical aspect (action/state/accomplishment/achievement)(just for irregular verbs)\n* regularity (regular/irregular/alternative);\n* transitivity (transitive/intransitive);\n* present dual (True/False);\n* past dual (True/False);\n* formal IPA present stem;\n* formal IPA past stem;\n* formal Persian present stem;\n* formal Persian past stem;\n* informal IPA present stem;\n* informal IPA past stem;\n* informal Persian present stem;\n* informal Persian past stem;\n* paradigm (inflected forms of the verb)\n\n`profiling` accepts 3 arguments:\n\n* `word`: The Persian form of the word that you want to be inflected as a verb. The main assumption here is that users pass either present stem, past stem, or gerund.\n* `API_form`: The IPA form of the word; it is optional and the default value is an empty string. Non-Persian-IPA characters raise TypeError.\n* `space`: The type of space you want to be placed between inflected words and affixes; it is optional and the default value is ZWNJ (\\u200c).\n\n```python\n>>> from CPVI import CPVI\n>>> profile = CPVI()\n>>> profile.profiling(word='آمد', API_form='ʔɒmæd', space='\\u200c')\n{'lexical aspect': 'accomplishment', \n'regularity': 'irregular', \n'transitivity': 'intransitive', \n'present dual': False, \n'past dual': False, \n'formal IPA present stem': 'ʔɒ',\n'formal IPA past stem': 'ʔɒmæd',\n'formal Persian present stem': 'آ',\n'formal Persian past stem': 'آمد',\n'informal IPA present stem': 'ʔɒ',\n'informal IPA past stem': 'ʔumæd',\n'informal Persian present stem': 'آ',\n'informal Persian past stem': 'اومد',\n'paradigm': {\n    'formal': {\n        'IPA': {\n            'affirmative': {\n                'present': {\n                    'simple': {\n                        's1': 'ʔɒjæm', \n                        's2': 'ʔɒji', \n                        's3': 'ʔɒjæd', \n                        'p1': 'ʔɒjim', \n                        'p2': 'ʔɒjid', \n                        'p3': 'ʔɒjænd'\n                        },\n                    'continuous': {\n                        's1': 'mijɒjæm',\n                        's2': 'mijɒji', \n                        's3': 'mijɒjæd',\n                        'p1': 'mijɒjim',\n                        'p2': 'mijɒjid',\n                        'p3': 'mijɒjænd'\n                        },\n                    'subjunctive': {...},\n                    'progressive': {...},\n                    'perfect': {...}, \n                    'perfect past': {...}, \n                    'imperative': {...}\n                    }, \n                'past': {\n                    'simple': {...},\n                    'continuous': {...}, \n                    'subjunctive': {...}, \n                    'progressive': {...}, \n                    'perfect': {...}, \n                    'perfect subjunctive': {...}\n                    },\n                'future': {\n                    'simple': {...}\n                    }\n                }, \n            'negative': {\n                'present': {\n                    'simple': {...}, \n                    'continuous': {...}, \n                    'subjunctive': {...}, \n                    'progressive': None, \n                    'perfect': {...},\n                    'perfect past': {...}, \n                    'imperative': {...}\n                    }, \n                'past': {\n                    'simple': {...}, \n                    'continuous': {...}, \n                    'subjunctive': {...},\n                    'progressive': None, \n                    'perfect': {...},\n                    'perfect subjunctive': {...}\n                    },\n                'future': {\n                    'simple': {...}\n                    }\n                }\n            }, \n        'Persian': {\n            'affirmative': {\n                'present': {\n                    'simple': {...}, \n                    'continuous': {...}, \n                    'subjunctive': {...}, \n                    'progressive': {...}, \n                    'perfect': {...}, \n                    'perfect past': {...}, \n                    'imperative': {...}}, \n                'past': {\n                    'simple': {...},\n                    'continuous': {...}, \n                    'subjunctive': {...}, \n                    'progressive': {...},\n                    'perfect': {...},\n                    'perfect subjunctive': {...}\n                    },\n                'future': {\n                    'simple': {...}\n                    }\n                },\n            'negative': {\n                'present': {\n                    'simple': {...},\n                    'continuous': {...}, \n                    'subjunctive': {...}, \n                    'progressive': None,\n                    'perfect': {...}, \n                    'perfect past': {...}, \n                    'imperative': {...}\n                    }, \n                'past': {\n                    'simple': {...}, \n                    'continuous': {...}, \n                    'subjunctive': {...}, \n                    'progressive': None, \n                    'perfect': {...}, \n                    'perfect subjunctive': {...}\n                    },\n                'future': {\n                    'simple': {...}\n                    }\n                }\n            }\n        },\n    'informal': {...}\n    }\n\n```\n\n`profiling` returns a nested dictionary. The `paradigm` key is a nested hierarchical dictionary containing all the inflected forms. The hierarchy consists of 6 layers. Use the hierarchy to navigate through the dictionary.\n\n* The first layer is formality which is either `formal` or `informal`.\n* The second layer is the type of alphabet which is either `Persian` or `IPA`.\n* The third layer is polarity which is either `affirmative` or `negative`.\n* The fourth layer is tense which is either `past`, `present`, or `future`.\n* The fifth layer for past tense is either `simple`, `continuous`, `subjunctive`, `progressive`, `perfect`, or `perfect subjunctive`.\nThe fifth layer for present tense is either `simple`, `continuous`, `subjunctive`, `progressive`, `perfect`, `perfect past`, or `imperative`.\nThe fifth layer for future tense is just `simple`.\n* The sixth layer is Person and number which is either `s1`, `s2`, `s3`, `p1`, `p2`, or `p3`.\n\n```python\n>>> p = CPVI()\n>>> profile = p.profiling('گفت', 'Ɉoft', '\\u200c')\n# navigate to informal inflections\n>>> profile['paradigm']['informal']\n{'IPA': {\n    'affirmative': {\n        'present': {\n            'simple':{\n                's1'\n                ...\n                ...\n                ...\n\n# navigate to informal Persian alphabet inflections\n>>> profile['paradigm']['informal']['Persian']\n{'affirmative': {\n    'present': {\n        'simple':{\n            's1'\n            ...\n            ...\n            ...\n\n# navigate to informal Persian negative inflections\n>>> profile['paradigm']['informal']['Persian']['negative']\n{'present': {\n    'simple':{\n        's1'\n        ...\n        ...\n        ...\n\n# navigate to informal Persian negative present inflections\n>>> profile['paradigm']['informal']['Persian']['negative']['present']\n{'simple':{\n    's1'\n    ...\n    ...\n    ...\n\n# navigate to informal Persian negative simple present inflections\n>>> profile['paradigm']['informal']['Persian']['negative']['present']['simple']\n{'s1': 'نگم', \n's2': 'نگی', \n's3': 'نگه', \n'p1': 'نگیم', \n'p2': ['نگین', 'نگید'], \n'p3': 'نگن'}\n\n# navigate to the plural second person of informal Persian negative simple presents inflections\n>>> profile['paradigm']['informal']['Persian']['negative']['present']['simple']['p2']\n['نگین', 'نگید']\n```\n\nBecause of the gramatical restrictions, some inflectional paradigms do not have inflected form, as demonstrated in the following code:\n\n```python\n>>> profile['paradigm']['informal']['Persian']['negative']['past']['progressive']\nNone\n```\n\nIn dual verbs, each paradigm has two set of inflected forms enclosed in a list, as demonstrated in the following:\n\n```python\n>>> p = CPVI()\n>>> profile = p.profiling('گسل', 'Ɉosæl', '\\u200c')\n>>> profile['paradigm']['informal']['Persian']['affirmative']['past']['simple']\n[\n    {\n    's1': 'گسستم', \n    's2': 'گسستی', \n    's3': ['گسست', 'گسستش'], \n    'p1': 'گسستیم', \n    'p2': ['گسستین', 'گسستید'], \n    'p3': 'گسستن'\n    }, \n    {\n    's1': 'گسیختم', \n    's2': 'گسیختی', \n    's3': ['گسیخت', 'گسیختش'], \n    'p1': 'گسیختیم', \n    'p2': ['گسیختین', 'گسیختید'], \n    'p3': 'گسیختن'\n    }\n]\n```\n\nThe `API_form` argument only accepts Persian IPA alphabet. If you are not familiar with IPA alphabet, use `CPVI.IPA` to see the mapping between IPA and Persian alphabet:\n\n```python\n>>> CPVI.IPA\n{\n    'b': 'ب', \n    'p': 'پ', \n    'f': 'ف', \n    'v': 'و', \n    't': ['ت', 'ط'], \n    'd': 'د', \n    's': ['س', 'ص', 'ث'], \n    'z': ['ز', 'ض', 'ظ', 'ذ'], \n    'ʃ': 'ش', \n    'ʒ': 'ژ', \n    'ʤ': 'ج', \n    'ʧ': 'چ', \n    'c': 'ک', \n    'Ɉ': 'گ', \n    'x': 'خ', \n    'G': ['ق', 'غ'], \n    'h': ['ه', 'ح'], \n    'ʔ': ['ع', 'همزه'], \n    'm': 'م', \n    'n': 'ن', \n    'r': 'ر', \n    'l': 'ل', \n    'j': 'ی', \n    'ɒ': ['آ', 'ا'], \n    'u': 'او', \n    'i': 'ی', \n    'æ': 'فتحه', \n    'e': 'کسره', \n    'o': 'ضمه'\n    }\n```\n\nNone-IPA characters raise `TypeError`.\n\nThe space between words and affixes could be adjusted by passing either space, ZWNJ (\\u200c), or empty string as the `space` argument:\n\n```python\n# demostrate ZWNJ as the space argument\n>>> p = CPVI()\n>>> profile = p.profiling('گفت', 'Ɉoft', '\\u200c')\n>>> profile['paradigm']['formal']['Persian']['negative']['present']['perfect past']\n{\n    's1': 'نگفته‌بوده‌ام',\n    's2': 'نگفته‌بوده‌ای',\n    's3': 'نگفته‌بوده‌است',\n    'p1': 'نگفته‌بوده‌ایم',\n    'p2': 'نگفته‌بوده‌اید',\n    'p3': 'نگفته‌بوده‌اند'\n    }\n\n# demostrate space as the space argument\n>>> profile = p.profiling('گفت', 'Ɉoft', ' ')\n>>> profile['paradigm']['formal']['Persian']['negative']['present']['perfect past']\n{\n    's1': 'نگفته بوده ام',\n    's2': 'نگفته بوده ای',\n    's3': 'نگفته بوده است',\n    'p1': 'نگفته بوده ایم',\n    'p2': 'نگفته بوده اید',\n    'p3': 'نگفته بوده اند'\n    }\n\n# demostrate empty string as the space argument\n>>> profile = p.profiling('گفت', 'Ɉoft', '')\n>>> profile['paradigm']['formal']['Persian']['affirmative']['present']['progressive']\n{\n    's1': 'دارم‌میگویم',\n    's2': 'داری‌میگویی',\n    's3': 'داردمیگوید',\n    'p1': 'داریم‌میگوییم',\n    'p2': 'داریدمیگویید',\n    'p3': 'دارندمیگویند'\n    }\n```\n\nPassing strings other than space, ZWNJ (`\\u200c`), or empty string raise `ValueError`.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/asdoost/CPVI/archive/refs/tags/v0.1.4-beta.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/asdoost/CPVI",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "CPVI",
    "package_url": "https://pypi.org/project/CPVI/",
    "platform": "",
    "project_url": "https://pypi.org/project/CPVI/",
    "project_urls": {
      "Download": "https://github.com/asdoost/CPVI/archive/refs/tags/v0.1.4-beta.tar.gz",
      "Homepage": "https://github.com/asdoost/CPVI"
    },
    "release_url": "https://pypi.org/project/CPVI/0.1.4b0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Comprehensive Persian Verb Inflector",
    "version": "0.1.4b0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11836597,
  "releases": {
    "0.1.4b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb118c8608537e4e7252682e3b07e30dadc8149909f19fd30177721eab3c54f9",
          "md5": "99c43328ec78b4d97ecce2d5cd42980c",
          "sha256": "a7a8e6bf84c3bede2b3fb5da8748c2359090b47652dca3b56f1a5e443c7e4ba1"
        },
        "downloads": -1,
        "filename": "CPVI-0.1.4b0.tar.gz",
        "has_sig": false,
        "md5_digest": "99c43328ec78b4d97ecce2d5cd42980c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33645,
        "upload_time": "2021-10-26T14:02:57",
        "upload_time_iso_8601": "2021-10-26T14:02:57.565050Z",
        "url": "https://files.pythonhosted.org/packages/cb/11/8c8608537e4e7252682e3b07e30dadc8149909f19fd30177721eab3c54f9/CPVI-0.1.4b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cb118c8608537e4e7252682e3b07e30dadc8149909f19fd30177721eab3c54f9",
        "md5": "99c43328ec78b4d97ecce2d5cd42980c",
        "sha256": "a7a8e6bf84c3bede2b3fb5da8748c2359090b47652dca3b56f1a5e443c7e4ba1"
      },
      "downloads": -1,
      "filename": "CPVI-0.1.4b0.tar.gz",
      "has_sig": false,
      "md5_digest": "99c43328ec78b4d97ecce2d5cd42980c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 33645,
      "upload_time": "2021-10-26T14:02:57",
      "upload_time_iso_8601": "2021-10-26T14:02:57.565050Z",
      "url": "https://files.pythonhosted.org/packages/cb/11/8c8608537e4e7252682e3b07e30dadc8149909f19fd30177721eab3c54f9/CPVI-0.1.4b0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}